       !        
       !        Cray Inc. Decompilation
       !        Notice - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  NonLinearNMI.f90
       !        File                  :  NonLinearNMI.opt
       !        Network               :  Gemini interconnect
       !        Target                :  X86, 64-bit, sse3
       !        
  311.       
  311.       subroutine diaten( slagr, fname0, ifday, tod, idate, idatec )
  152.       t$15 = imax
  152.       t$16 = jmax
  165.       t$154 = _zla( 0, imax )
  152.       t$155 = _zla( 0, imax )
  165.       t$156 = _zla( 0, jmax )
  152.       t$157 = _zla( 0, imax ) * _zla( 0, jmax )
  165.       t$160 = _zla( 0, imax ) * _zla( 0, jmax ) * 4
  152.       t$161 = _zla( 0, imax ) * _zla( 0, jmax )
  152.       t$162 = _zla( 0, imax ) * _zla( 0, jmax ) * 4
  164.       t$163 = 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 )
  164.       t$165 = 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 32
  152.       t$158 = int( _alloc( 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 32 ), 8 )
  165.       t$159 = t$158
  164.       t$164 = t$158 + 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 )
  169.       $F_A33 = jmax
  169.       $F_A34 = imax
  169.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
  169.          $I_L169_104 = 0
  169.          do
  169.             $I_L169_96 = 0
  169.             do
  169.                $I_L169_88 = 0
  169. !dir$ ivdep
  169.                do
  169.                   buf(1 + $I_L169_88, 1 + $I_L169_96, 1 + $I_L169_104) = 0.0
  169.                   $I_L169_88 = 1 + $I_L169_88
  169.                   if ( $I_L169_88 >= $F_A34 ) exit
  169.                enddo
  169.                $I_L169_96 = 1 + $I_L169_96
  169.                if ( $I_L169_96 >= $F_A33 ) exit
  169.             enddo
  169.             $I_L169_104 = 1 + $I_L169_104
  169.             if ( $I_L169_104 >= 4 ) exit
  169.          enddo
  169.       endif
  170.       fsbc = .false.
  175.       ierr = 0
  174.       t$373 = nfin0
  175.        _substr(t$374,1,4) = 'OLD'
  174.        _substr(t$375,1,10) = 'SEQUENTIAL'
  174.        _substr(t$376,1,11) = 'UNFORMATTED'
  175.        _substr(t$377,1,4) = 'READ'
  174.       t$378(1) = 0x100000000000000L
  174. !dir$ suppress t$373
  174.       t$378(2) = int( loc( t$373 ), 8 )
  174. !dir$ suppress ierr
  174.       t$378(3) = int( loc( ierr ), 8 )
  174.       t$378(4) = 0
  174. !dir$ suppress  _substr(fname0,1,200)
  174.       t$378(5) = int( loc(  _substr(fname0,1,200) ), 8 )
  174.       t$378(6) = 200
  174. !dir$ suppress  _substr(t$374,1,3)
  174.       t$378(7) = int( loc(  _substr(t$374,1,3) ), 8 )
  174.       t$378(8) = 3
  174. !dir$ suppress  _substr(t$375,1,10)
  174.       t$378(9) = int( loc(  _substr(t$375,1,10) ), 8 )
  174.       t$378(10) = 10
  174. !dir$ suppress  _substr(t$376,1,11)
  174.       t$378(11) = int( loc(  _substr(t$376,1,11) ), 8 )
  174.       t$378(12) = 11
  174.       t$378(13) = 0
  174.       t$378(14) = 0
  174.       t$378(16) = 0
  174. !dir$ suppress  _substr(t$377,1,4)
  174.       t$378(18) = int( loc(  _substr(t$377,1,4) ), 8 )
  174.       t$378(19) = 4
  174.       t$378(20) = 0
  174.       t$378(22) = 0
  174.       t$378(24) = 0x2000200000000L
  174.       t$378(25) = 0
  174.       t$378(27) = 0
  174.       t$378(29) = 0
  174.       t$378(31) = 0
  174.       t$378(33) = 0
  174.       t$378(35) = 0
  174.       t$372 = _open( t$378 )
  176.       if ( ierr /= 0 ) then
  177.          _fwrite( _clist( 0, 0, 3,  _substr(c0,1,8), Null_Arg, Null_Arg, t$18,  _substr(t$17,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  179.          _f90_adjustl(  _substr(t$379,1,8),  _substr(c0,1,8) )
  178.          t$380 = ( _ltrim(  _substr(fname0,1,200) ) ) + ( _ltrim(  _substr(t$379,1,8) ) ) + 40
  178.          t$382 = int( _alloc( max( 0, t$380 ) ), 8 )
  178.           _substr(t$381,1,max( 0, t$380 )) = //( '**(Diaten)** Open file ', //(  _substr(fname0,1,_ltrim(  _substr(fname0,1,200) )), //( ' returned IOSTAT=',  _substr(t$379,1,_ltrim(  _substr(t$379,1,8) )) ) ) )
  178.          call fatalerror(  _substr(t$381,1,max( 0, t$380 )) )
  178.          _free( t$382 )
  180.           _substr(t$383,1,4) = ' '
  180.          call _stop(  _substr(t$383,1,1) )
  180.       else
  183.          call gread4( nfin0, ifday, tod, idate(1), idatec(1), (qgzs%base_addr)(qgzs%dim_1%LB, 0), (qlnpp%base_addr)(qlnpp%dim_1%LB, 0), (qtmpp%base_addr)(qtmpp%dim_1%LB, qtmpp%dim_2%LB, 0), (qdivp%base_addr)(qdivp%dim_1%LB, qdivp%dim_2%LB, 0), (qrotp%base_addr)(qrotp%dim_1%LB, qrotp%dim_2%LB, 0), (qqp%base_addr)(qqp%dim_1%LB, qqp%dim_2%LB, 0), (sl%base_addr)(sl%dim_1%LB, 0), (si%base_addr)(si%dim_1%LB, 0), dodyn, nfdyn )
  186.          t$373 = nfin0
  186.          t$384 = __rewf( t$373, 0, 0, 0x100000000000000L, 0, 0 )
  190.          $F_A35 = geshem%dim_2%EX
  190.          $F_A36 = geshem%dim_1%EX
  190.          if ( and( -$F_A36, -$F_A35 ) < 0 ) then
  190.             $SC_geshem_I6 = geshem%dim_1%LB
  190.             $SC_geshem_I7 = geshem%dim_2%SM
  190.             $SC_geshem_I8 = geshem%dim_2%LB
  190.             $I_L190_98 = 0
  190.             do
  190.                $I_L190_90 = 0
  190. !dir$ ivdep
  190.                do
  190.                   (geshem%base_addr)($SC_geshem_I6 + $I_L190_90, $SC_geshem_I8 + $I_L190_98, 0) = 0.0
  190.                   $I_L190_90 = 1 + $I_L190_90
  190.                   if ( $I_L190_90 >= $F_A36 ) exit
  190.                enddo
  190.                $I_L190_98 = 1 + $I_L190_98
  190.                if ( $I_L190_98 >= $F_A35 ) exit
  190.             enddo
  190.          endif
  194.          call sfcgeotrans( slagr )
  198.          irec = 1
  199. !dir$ suppress buf(1, 1, 1)
  199.          t$385%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 1) ) )
  199.          t$385%header%el_len = 64
  199.          t$385%header%assoc = 1
  199.          t$385%header%ptr_alloc = 0
  199.          t$385%header%p_or_a = 0
  199.          t$385%header%a_contig = 1
  199.          t$385%header%dv_versn = 2
  199.          t$385%header%dv_smunit = 64
  199.          t$385%header%d_type = 0
  199.          t$385%header%n_params = 0
  199.          t$385%header%pad_codim = 0
  199.          t$385%header%n_codim = 0
  199.          t$385%header%pad_dim = 0
  199.          t$385%header%n_dim = 2
  199.          t$385%header%d_type_idx = 13
  199.          t$385%header%typ_code = 134481411
  199.          t$385%header%orig_base = 0
  199.          t$385%header%orig_size = 0
  199.          t$385%dim_1%LB = 1
  199.          t$385%dim_1%EX = ( max( 0, ( -1 + t$15 + 1 ) ) )
  199.          t$385%dim_1%SM = 1
  199.          t$385%dim_2%LB = 1
  199.          t$385%dim_2%EX = ( max( 0, ( -1 + t$16 + 1 ) ) )
  199.          t$385%dim_2%SM = _zla( 0, t$15 )
  199. !dir$ suppress buf(1, 1, 2)
  199.          t$386%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 2) ) )
  199.          t$386%header%el_len = 64
  199.          t$386%header%assoc = 1
  199.          t$386%header%ptr_alloc = 0
  199.          t$386%header%p_or_a = 0
  199.          t$386%header%a_contig = 1
  199.          t$386%header%dv_versn = 2
  199.          t$386%header%dv_smunit = 64
  199.          t$386%header%d_type = 0
  199.          t$386%header%n_params = 0
  199.          t$386%header%pad_codim = 0
  199.          t$386%header%n_codim = 0
  199.          t$386%header%pad_dim = 0
  199.          t$386%header%n_dim = 2
  199.          t$386%header%d_type_idx = 13
  199.          t$386%header%typ_code = 134481411
  199.          t$386%header%orig_base = 0
  199.          t$386%header%orig_size = 0
  199.          t$386%dim_1%LB = 1
  199.          t$386%dim_1%EX = ( max( 0, ( -1 + t$15 + 1 ) ) )
  199.          t$386%dim_1%SM = 1
  199.          t$386%dim_2%LB = 1
  199.          t$386%dim_2%EX = ( max( 0, ( -1 + t$16 + 1 ) ) )
  199.          t$386%dim_2%SM = _zla( 0, t$15 )
  199. !dir$ suppress buf(1, 1, 3)
  199.          t$387%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 3) ) )
  199.          t$387%header%el_len = 64
  199.          t$387%header%assoc = 1
  199.          t$387%header%ptr_alloc = 0
  199.          t$387%header%p_or_a = 0
  199.          t$387%header%a_contig = 1
  199.          t$387%header%dv_versn = 2
  199.          t$387%header%dv_smunit = 64
  199.          t$387%header%d_type = 0
  199.          t$387%header%n_params = 0
  199.          t$387%header%pad_codim = 0
  199.          t$387%header%n_codim = 0
  199.          t$387%header%pad_dim = 0
  199.          t$387%header%n_dim = 2
  199.          t$387%header%d_type_idx = 13
  199.          t$387%header%typ_code = 134481411
  199.          t$387%header%orig_base = 0
  199.          t$387%header%orig_size = 0
  199.          t$387%dim_1%LB = 1
  199.          t$387%dim_1%EX = ( max( 0, ( -1 + t$15 + 1 ) ) )
  199.          t$387%dim_1%SM = 1
  199.          t$387%dim_2%LB = 1
  199.          t$387%dim_2%EX = ( max( 0, ( -1 + t$16 + 1 ) ) )
  199.          t$387%dim_2%SM = _zla( 0, t$15 )
  199.          call readnftgz4( nftgz0, irec, t$385, t$386, t$387 )
  200.          $Unit_temp_O0 = nfzol
  200.          _uread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, 1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( brf(+:( 1, t$15, 1 ), +:( 1, t$16, 1 )), 0x402060300000000L ) ) )
  201.          $F_A37 = jmax
  201.          $F_A38 = imax
  201.          if ( and( -$F_A38, -$F_A37 ) < 0 ) then
  201.             $I_L201_100 = 0
  201.             do
  201.                $I_L201_92 = 0
  201. !dir$ ivdep
  201.                do
  201.                   buf(1 + $I_L201_92, 1 + $I_L201_100, 4) = real( brf(1 + $I_L201_92, 1 + $I_L201_100), 8 )
  201.                   $I_L201_92 = 1 + $I_L201_92
  201.                   if ( $I_L201_92 >= $F_A38 ) exit
  201.                enddo
  201.                $I_L201_100 = 1 + $I_L201_100
  201.                if ( $I_L201_100 >= $F_A37 ) exit
  201.             enddo
  201.          endif
  203.          if ( reducedgrid ) then
  204.             call aveboxijtoibjb_r2d( buf(1, 1, 1), (tg1%base_addr)(tg1%dim_1%LB, tg1%dim_2%LB, 0) )
  204.          else
  206. !dir$ suppress buf(1, 1, 1)
  206.             t$388%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 1) ) )
  206.             t$388%header%el_len = 64
  206.             t$388%header%assoc = 1
  206.             t$388%header%ptr_alloc = 0
  206.             t$388%header%p_or_a = 0
  206.             t$388%header%a_contig = 1
  206.             t$388%header%dv_versn = 2
  206.             t$388%header%dv_smunit = 64
  206.             t$388%header%d_type = 0
  206.             t$388%header%n_params = 0
  206.             t$388%header%pad_codim = 0
  206.             t$388%header%n_codim = 0
  206.             t$388%header%pad_dim = 0
  206.             t$388%header%n_dim = 2
  206.             t$388%header%d_type_idx = 13
  206.             t$388%header%typ_code = 134481411
  206.             t$388%header%orig_base = 0
  206.             t$388%header%orig_size = 0
  206.             t$388%dim_1%LB = 1
  206.             t$388%dim_1%EX = ( max( 0, ( -1 + t$15 + 1 ) ) )
  206.             t$388%dim_1%SM = 1
  206.             t$388%dim_2%LB = 1
  206.             t$388%dim_2%EX = ( max( 0, ( -1 + t$16 + 1 ) ) )
  206.             t$388%dim_2%SM = _zla( 0, t$15 )
  206.             t$389 = tg1
  206.             call ijtoibjb_r( t$388, t$389 )
  206.          endif
  209.          if ( reducedgrid ) then
  210.             call aveboxijtoibjb_r2d( buf(1, 1, 2), (tg2%base_addr)(tg2%dim_1%LB, tg2%dim_2%LB, 0) )
  210.          else
  212. !dir$ suppress buf(1, 1, 2)
  212.             t$390%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 2) ) )
  212.             t$390%header%el_len = 64
  212.             t$390%header%assoc = 1
  212.             t$390%header%ptr_alloc = 0
  212.             t$390%header%p_or_a = 0
  212.             t$390%header%a_contig = 1
  212.             t$390%header%dv_versn = 2
  212.             t$390%header%dv_smunit = 64
  212.             t$390%header%d_type = 0
  212.             t$390%header%n_params = 0
  212.             t$390%header%pad_codim = 0
  212.             t$390%header%n_codim = 0
  212.             t$390%header%pad_dim = 0
  212.             t$390%header%n_dim = 2
  212.             t$390%header%d_type_idx = 13
  212.             t$390%header%typ_code = 134481411
  212.             t$390%header%orig_base = 0
  212.             t$390%header%orig_size = 0
  212.             t$390%dim_1%LB = 1
  212.             t$390%dim_1%EX = ( max( 0, ( -1 + t$15 + 1 ) ) )
  212.             t$390%dim_1%SM = 1
  212.             t$390%dim_2%LB = 1
  212.             t$390%dim_2%EX = ( max( 0, ( -1 + t$16 + 1 ) ) )
  212.             t$390%dim_2%SM = _zla( 0, t$15 )
  212.             t$391 = tg2
  212.             call ijtoibjb_r( t$390, t$391 )
  212.          endif
  215.          if ( reducedgrid ) then
  216.             call aveboxijtoibjb_r2d( buf(1, 1, 3), (tg3%base_addr)(tg3%dim_1%LB, tg3%dim_2%LB, 0) )
  216.          else
  218. !dir$ suppress buf(1, 1, 3)
  218.             t$392%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 3) ) )
  218.             t$392%header%el_len = 64
  218.             t$392%header%assoc = 1
  218.             t$392%header%ptr_alloc = 0
  218.             t$392%header%p_or_a = 0
  218.             t$392%header%a_contig = 1
  218.             t$392%header%dv_versn = 2
  218.             t$392%header%dv_smunit = 64
  218.             t$392%header%d_type = 0
  218.             t$392%header%n_params = 0
  218.             t$392%header%pad_codim = 0
  218.             t$392%header%n_codim = 0
  218.             t$392%header%pad_dim = 0
  218.             t$392%header%n_dim = 2
  218.             t$392%header%d_type_idx = 13
  218.             t$392%header%typ_code = 134481411
  218.             t$392%header%orig_base = 0
  218.             t$392%header%orig_size = 0
  218.             t$392%dim_1%LB = 1
  218.             t$392%dim_1%EX = ( max( 0, ( -1 + t$15 + 1 ) ) )
  218.             t$392%dim_1%SM = 1
  218.             t$392%dim_2%LB = 1
  218.             t$392%dim_2%EX = ( max( 0, ( -1 + t$16 + 1 ) ) )
  218.             t$392%dim_2%SM = _zla( 0, t$15 )
  218.             t$393 = tg3
  218.             call ijtoibjb_r( t$392, t$393 )
  218.          endif
  221.          if ( reducedgrid ) then
  222.             call aveboxijtoibjb_r2d( buf(1, 1, 4), (zorl%base_addr)(zorl%dim_1%LB, zorl%dim_2%LB, 0) )
  222.          else
  224. !dir$ suppress buf(1, 1, 4)
  224.             t$394%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 4) ) )
  224.             t$394%header%el_len = 64
  224.             t$394%header%assoc = 1
  224.             t$394%header%ptr_alloc = 0
  224.             t$394%header%p_or_a = 0
  224.             t$394%header%a_contig = 1
  224.             t$394%header%dv_versn = 2
  224.             t$394%header%dv_smunit = 64
  224.             t$394%header%d_type = 0
  224.             t$394%header%n_params = 0
  224.             t$394%header%pad_codim = 0
  224.             t$394%header%n_codim = 0
  224.             t$394%header%pad_dim = 0
  224.             t$394%header%n_dim = 2
  224.             t$394%header%d_type_idx = 13
  224.             t$394%header%typ_code = 134481411
  224.             t$394%header%orig_base = 0
  224.             t$394%header%orig_size = 0
  224.             t$394%dim_1%LB = 1
  224.             t$394%dim_1%EX = ( max( 0, ( -1 + t$15 + 1 ) ) )
  224.             t$394%dim_1%SM = 1
  224.             t$394%dim_2%LB = 1
  224.             t$394%dim_2%EX = ( max( 0, ( -1 + t$16 + 1 ) ) )
  224.             t$394%dim_2%SM = _zla( 0, t$15 )
  224.             t$395 = zorl
  224.             call ijtoibjb_r( t$394, t$395 )
  224.          endif
  228.          t$396 = ibmaxperjb
  228.          call getsbc( imax, jmax, kmax, (albvisdiff%base_addr)(albvisdiff%dim_1%LB, albvisdiff%dim_2%LB, 0), (gtsea%base_addr)(gtsea%dim_1%LB, gtsea%dim_2%LB, 0), (soilm%base_addr)(soilm%dim_1%LB, soilm%dim_2%LB, 0), (sheleg%base_addr)(sheleg%dim_1%LB, sheleg%dim_2%LB, 0), (o3mix%base_addr)(o3mix%dim_1%LB, o3mix%dim_2%LB, o3mix%dim_3%LB, 0), ifday, tod, idate(1), idatec(1), ifalb, ifsst, ifslm, ifsnw, ifozone, sstlag, intsst, fint, tice, yrl, monl(1), ibmax, jbmax, t$396 )
  236.          dt = 2.5e-1 * delt
  240.          fa = 0.0
  241.          fb = 1.0
  242.          fb1 = 1.0
  243.          ifilt = 0
  244.          init_globconserv = .true.
  253.          if ( slagr ) then
  247.             $I_L247_80 = 0
  247.             do
  247.                jdt = ( 1 + $I_L247_80 )
  248.                istrt = ( 1 + $I_L247_80 )
  252.                delta2 = dt
  253.                if ( sl_twotime_scheme ) then
  253.                   delta2 = 5.0e-1 * dt
  253.                endif
  254.                call bmcm( delta2, slagr )
  256.                $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  257.                t$398 = jdt
  258.                t$399 = jdt
  257.                ipa$92 = .false.
  257.                ipa$93 = .false.
  257.                ipa$94 = .false.
  257.                call timestep( fb1, fa, fb, slagr, ipa$92, ipa$93, ipa$94, dt, t$398, ifday, tod, idatec(1), t$399 )
  259.                $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
  264.                dt = 2.0 * dt
  265.                ktm = kt
  266.                fb1 = 0.0
  267.                init_globconserv = .false.
  268.                $I_L247_80 = 1 + $I_L247_80
  259.                if ( $I_L247_80 >= 2 ) exit
  259.             enddo
  259.          else
  247.             $I_L247_84 = 0
  247.             do
  247.                jdt = ( 1 + $I_L247_84 )
  248.                istrt = ( 1 + $I_L247_84 )
  252.                delta2 = dt
  254.                call bmcm( delta2, slagr )
  256.                $snt_T0 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  257.                t$398 = jdt
  258.                t$399 = jdt
  257.                ipa$92 = .false.
  257.                ipa$93 = .false.
  257.                ipa$94 = .false.
  257.                call timestep( fb1, fa, fb, slagr, ipa$92, ipa$93, ipa$94, dt, t$398, ifday, tod, idatec(1), t$399 )
  259.                $snt_T0 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
  264.                dt = 2.0 * dt
  265.                ktm = kt
  266.                fb1 = 0.0
  267.                init_globconserv = .false.
  268.                $I_L247_84 = 1 + $I_L247_84
  259.                if ( $I_L247_84 >= 2 ) exit
  259.             enddo
  259.          endif
  268.          jdt = 3
  272.          istrt = 0
  276.          delta2 = dt
  277.          if ( slagr ) then
  277.             delta2 = cvmg( 5.0e-1 * dt, dt, sl_twotime_scheme )
  277.          endif
  278.          call bmcm( delta2, slagr )
  282.          fa = filta
  283.          fb = filtb
  284.          fb1 = 0.0
  285.          if ( slagr ) then
  285.             if ( sl_twotime_scheme ) then
  286.                fa = 1.0
  287.                fb = 0.0
  287.             endif
  287.          endif
  289.          ifilt = 1
  293.          $t_S2 = nstep
  293.          jdt = 1
  293.          if ( nstep > 0 ) then
  306.             if ( slagr ) then
  293.                $I_L293_82 = 0
  293.                do
  293.                   jdt = ( 1 + $I_L293_82 )
  298.                   $snt_T1 = _parallel( 2, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  299.                   t$403 = ( 1 + $I_L293_82 )
  300.                   t$404 = ( 2 + $I_L293_82 )
  299.                   ipa$96 = .false.
  299.                   ipa$97 = .true.
  299.                   ipa$98 = .false.
  299.                   call timestep( fb1, fa, fb, slagr, ipa$96, ipa$97, ipa$98, dt, t$403, ifday, tod, idatec(1), t$404 )
  301.                   $snt_T1 = _endparallel( 2, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T1 )
  303.                   ktm = kt
  305.                   fb1 = fb
  306.                   if ( sl_twotime_scheme ) then
  306.                      fb1 = 0.0
  306.                   endif
  307.                   $I_L293_82 = 1 + $I_L293_82
  306.                   if ( $I_L293_82 >= $t_S2 ) exit
  306.                enddo
  306.             else
  293.                $I_L293_86 = 0
  293.                do
  293.                   jdt = ( 1 + $I_L293_86 )
  298.                   $snt_T1 = _parallel( 4, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  299.                   t$403 = ( 1 + $I_L293_86 )
  300.                   t$404 = ( 2 + $I_L293_86 )
  299.                   ipa$96 = .false.
  299.                   ipa$97 = .true.
  299.                   ipa$98 = .false.
  299.                   call timestep( fb1, fa, fb, slagr, ipa$96, ipa$97, ipa$98, dt, t$403, ifday, tod, idatec(1), t$404 )
  301.                   $snt_T1 = _endparallel( 4, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T1 )
  303.                   ktm = kt
  305.                   fb1 = fb
  307.                   $I_L293_86 = 1 + $I_L293_86
  306.                   if ( $I_L293_86 >= $t_S2 ) exit
  306.                enddo
  306.             endif
  307.             jdt = ( 1 + $t_S2 )
  307.          endif
  308.          $F_A39 = qdiaten%dim_2%EX
  308.          $F_A40 = qdiaten%dim_1%EX
  308.          if ( and( -$F_A40, -$F_A39 ) < 0 ) then
  308.             $SC_qdiaten_I9 = qdiaten%dim_1%LB
  308.             $SC_qdiaten_I10 = qdiaten%dim_2%SM
  308.             $SC_qdiaten_I11 = qdiaten%dim_2%LB
  308.             $I_L308_102 = 0
  308.             do
  308.                $I_L308_94 = 0
  308. !dir$ ivdep
  308.                do
  308.                   (qdiaten%base_addr)($SC_qdiaten_I9 + $I_L308_94, $SC_qdiaten_I11 + $I_L308_102, 0) = ( (qdiaten%base_addr)($SC_qdiaten_I9 + $I_L308_94, $SC_qdiaten_I11 + $I_L308_102, 0) * 1.0/( nstep * dt * 2.0 ) )
  308.                   $I_L308_94 = 1 + $I_L308_94
  308.                   if ( $I_L308_94 >= $F_A40 ) exit
  308.                enddo
  308.                $I_L308_102 = 1 + $I_L308_102
  308.                if ( $I_L308_102 >= $F_A39 ) exit
  308.             enddo
  308.          endif
  152.          _free( t$158 )
  152.       endif
  311.       return
  311.       end
  311.       
  975.       
  975.       subroutine nlnmi( nlnminit, diabatic, slagr, fname, ifday, tod, idatec, ktm )
  397.       t$166 = _len( fname )
  398.       all_jg%header%el_len = 32
  398.       all_jg%header%assoc = 0
  398.       all_jg%header%ptr_alloc = 0
  398.       all_jg%header%p_or_a = 2
  398.       all_jg%header%a_contig = 1
  398.       all_jg%header%dv_versn = 2
  398.       all_jg%header%dv_smunit = 32
  398.       all_jg%header%d_type = 0
  398.       all_jg%header%n_params = 0
  398.       all_jg%header%pad_codim = 0
  398.       all_jg%header%n_codim = 0
  398.       all_jg%header%pad_dim = 0
  398.       all_jg%header%n_dim = 2
  398.       all_jg%header%d_type_idx = 10
  398.       all_jg%header%typ_code = 131074
  398.       all_jg%header%orig_base = 0
  398.       all_jg%header%orig_size = 0
  398.       all_jg%dim_1%LB = 1
  398.       all_jg%dim_1%EX = 0
  398.       all_jg%dim_1%SM = 1
  398.       all_jg%dim_2%LB = 1
  398.       all_jg%dim_2%EX = 0
  398.       all_jg%dim_2%SM = 1
  325.       all_nas%header%el_len = 32
  325.       all_nas%header%assoc = 0
  325.       all_nas%header%ptr_alloc = 0
  325.       all_nas%header%p_or_a = 2
  325.       all_nas%header%a_contig = 1
  325.       all_nas%header%dv_versn = 2
  325.       all_nas%header%dv_smunit = 32
  325.       all_nas%header%d_type = 0
  325.       all_nas%header%n_params = 0
  325.       all_nas%header%pad_codim = 0
  325.       all_nas%header%n_codim = 0
  325.       all_nas%header%pad_dim = 0
  325.       all_nas%header%n_dim = 2
  325.       all_nas%header%d_type_idx = 10
  325.       all_nas%header%typ_code = 131074
  325.       all_nas%header%orig_base = 0
  325.       all_nas%header%orig_size = 0
  325.       all_nas%dim_1%LB = 1
  325.       all_nas%dim_1%EX = 0
  325.       all_nas%dim_1%SM = 1
  325.       all_nas%dim_2%LB = 1
  325.       all_nas%dim_2%EX = 0
  325.       all_nas%dim_2%SM = 1
  325.       t$19 = kmax
  342.       t$167 = _zla( 0, kmax )
  342.       t$170 = 8 * _zla( 0, kmax )
  325.       t$171 = _zla( 0, kmax )
  325.       t$172 = _zla( 0, kmax ) * _zla( 0, kmax )
  340.       t$173 = 8 * _zla( 0, kmax )
  340.       t$175 = 8 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 8
  341.       t$176 = 8 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 8
  359.       t$178 = 8 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 16
  341.       g%header%el_len = 64
  341.       g%header%assoc = 0
  341.       g%header%ptr_alloc = 0
  341.       g%header%p_or_a = 2
  341.       g%header%a_contig = 1
  341.       g%header%dv_versn = 2
  341.       g%header%dv_smunit = 64
  341.       g%header%d_type = 0
  341.       g%header%n_params = 0
  341.       g%header%pad_codim = 0
  341.       g%header%n_codim = 0
  341.       g%header%pad_dim = 0
  341.       g%header%n_dim = 1
  341.       g%header%d_type_idx = 13
  341.       g%header%typ_code = 134481411
  341.       g%header%orig_base = 0
  341.       g%header%orig_size = 0
  341.       g%dim_1%LB = 1
  341.       g%dim_1%EX = 0
  341.       g%dim_1%SM = 1
  343.       t$179 = 8 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 16
  375.       t$181 = _zla( 0, kmax ) * _zla( 0, kmax ) * 16 + 16 * _zla( 0, kmax )
  367.       indg%header%el_len = 32
  367.       indg%header%assoc = 0
  367.       indg%header%ptr_alloc = 0
  367.       indg%header%p_or_a = 2
  367.       indg%header%a_contig = 1
  367.       indg%header%dv_versn = 2
  367.       indg%header%dv_smunit = 32
  367.       indg%header%d_type = 0
  367.       indg%header%n_params = 0
  367.       indg%header%pad_codim = 0
  367.       indg%header%n_codim = 0
  367.       indg%header%pad_dim = 0
  367.       indg%header%n_dim = 2
  367.       indg%header%d_type_idx = 10
  367.       indg%header%typ_code = 131074
  367.       indg%header%orig_base = 0
  367.       indg%header%orig_size = 0
  367.       indg%dim_1%LB = 1
  367.       indg%dim_1%EX = 0
  367.       indg%dim_1%SM = 1
  367.       indg%dim_2%LB = 1
  367.       indg%dim_2%EX = 0
  367.       indg%dim_2%SM = 1
  382.       indper%header%el_len = 32
  382.       indper%header%assoc = 0
  382.       indper%header%ptr_alloc = 0
  382.       indper%header%p_or_a = 2
  382.       indper%header%a_contig = 1
  382.       indper%header%dv_versn = 2
  382.       indper%header%dv_smunit = 32
  382.       indper%header%d_type = 0
  382.       indper%header%n_params = 0
  382.       indper%header%pad_codim = 0
  382.       indper%header%n_codim = 0
  382.       indper%header%pad_dim = 0
  382.       indper%header%n_dim = 2
  382.       indper%header%d_type_idx = 10
  382.       indper%header%typ_code = 131074
  382.       indper%header%orig_base = 0
  382.       indper%header%orig_size = 0
  382.       indper%dim_1%LB = 1
  382.       indper%dim_1%EX = 0
  382.       indper%dim_1%SM = 1
  382.       indper%dim_2%LB = 1
  382.       indper%dim_2%EX = 0
  382.       indper%dim_2%SM = 1
  343.       jg%header%el_len = 64
  343.       jg%header%assoc = 0
  343.       jg%header%ptr_alloc = 0
  343.       jg%header%p_or_a = 2
  343.       jg%header%a_contig = 1
  343.       jg%header%dv_versn = 2
  343.       jg%header%dv_smunit = 64
  343.       jg%header%d_type = 0
  343.       jg%header%n_params = 0
  343.       jg%header%pad_codim = 0
  343.       jg%header%n_codim = 0
  343.       jg%header%pad_dim = 0
  343.       jg%header%n_dim = 2
  343.       jg%header%d_type_idx = 11
  343.       jg%header%typ_code = 134481410
  343.       jg%header%orig_base = 0
  343.       jg%header%orig_size = 0
  343.       jg%dim_1%LB = 1
  343.       jg%dim_1%EX = 0
  343.       jg%dim_1%SM = 1
  343.       jg%dim_2%LB = 1
  343.       jg%dim_2%EX = 0
  343.       jg%dim_2%SM = 1
  325.       t$20 = mmax
  404.       t$182 = _zla( 0, mmax )
  404.       t$184 = _zla( 0, kmax ) * _zla( 0, kmax ) * 16 + 16 * _zla( 0, kmax ) + 4 * _zla( 0, mmax )
  325.       t$21 = mymmax
  434.       t$185 = _zla( 0, mymmax )
  383.       t$187 = _zla( 0, kmax ) * _zla( 0, kmax ) * 16 + 16 * _zla( 0, kmax ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, mymmax )
  389.       nas%header%el_len = 64
  389.       nas%header%assoc = 0
  389.       nas%header%ptr_alloc = 0
  389.       nas%header%p_or_a = 2
  389.       nas%header%a_contig = 1
  389.       nas%header%dv_versn = 2
  389.       nas%header%dv_smunit = 64
  389.       nas%header%d_type = 0
  389.       nas%header%n_params = 0
  389.       nas%header%pad_codim = 0
  389.       nas%header%n_codim = 0
  389.       nas%header%pad_dim = 0
  389.       nas%header%n_dim = 2
  389.       nas%header%d_type_idx = 11
  389.       nas%header%typ_code = 134481410
  389.       nas%header%orig_base = 0
  389.       nas%header%orig_size = 0
  389.       nas%dim_1%LB = 1
  389.       nas%dim_1%EX = 0
  389.       nas%dim_1%SM = 1
  389.       nas%dim_2%LB = 1
  389.       nas%dim_2%EX = 0
  389.       nas%dim_2%SM = 1
  388.       one_g%header%el_len = 64
  388.       one_g%header%assoc = 0
  388.       one_g%header%ptr_alloc = 0
  388.       one_g%header%p_or_a = 2
  388.       one_g%header%a_contig = 1
  388.       one_g%header%dv_versn = 2
  388.       one_g%header%dv_smunit = 64
  388.       one_g%header%d_type = 0
  388.       one_g%header%n_params = 0
  388.       one_g%header%pad_codim = 0
  388.       one_g%header%n_codim = 0
  388.       one_g%header%pad_dim = 0
  388.       one_g%header%n_dim = 1
  388.       one_g%header%d_type_idx = 13
  388.       one_g%header%typ_code = 134481411
  388.       one_g%header%orig_base = 0
  388.       one_g%header%orig_size = 0
  388.       one_g%dim_1%LB = 1
  388.       one_g%dim_1%EX = 0
  388.       one_g%dim_1%SM = 1
  360.       one_per%header%el_len = 64
  360.       one_per%header%assoc = 0
  360.       one_per%header%ptr_alloc = 0
  360.       one_per%header%p_or_a = 2
  360.       one_per%header%a_contig = 1
  360.       one_per%header%dv_versn = 2
  360.       one_per%header%dv_smunit = 64
  360.       one_per%header%d_type = 0
  360.       one_per%header%n_params = 0
  360.       one_per%header%pad_codim = 0
  360.       one_per%header%n_codim = 0
  360.       one_per%header%pad_dim = 0
  360.       one_per%header%n_dim = 1
  360.       one_per%header%d_type_idx = 13
  360.       one_per%header%typ_code = 134481411
  360.       one_per%header%orig_base = 0
  360.       one_per%header%orig_size = 0
  360.       one_per%dim_1%LB = 1
  360.       one_per%dim_1%EX = 0
  360.       one_per%dim_1%SM = 1
  455.       per%header%el_len = 64
  455.       per%header%assoc = 0
  455.       per%header%ptr_alloc = 0
  455.       per%header%p_or_a = 2
  455.       per%header%a_contig = 1
  455.       per%header%dv_versn = 2
  455.       per%header%dv_smunit = 64
  455.       per%header%d_type = 0
  455.       per%header%n_params = 0
  455.       per%header%pad_codim = 0
  455.       per%header%n_codim = 0
  455.       per%header%pad_dim = 0
  455.       per%header%n_dim = 1
  455.       per%header%d_type_idx = 13
  455.       per%header%typ_code = 134481411
  455.       per%header%orig_base = 0
  455.       per%header%orig_size = 0
  455.       per%dim_1%LB = 1
  455.       per%dim_1%EX = 0
  455.       per%dim_1%SM = 1
  454.       qgenp%header%el_len = 64
  454.       qgenp%header%assoc = 0
  454.       qgenp%header%ptr_alloc = 0
  454.       qgenp%header%p_or_a = 2
  454.       qgenp%header%a_contig = 1
  454.       qgenp%header%dv_versn = 2
  454.       qgenp%header%dv_smunit = 64
  454.       qgenp%header%d_type = 0
  454.       qgenp%header%n_params = 0
  454.       qgenp%header%pad_codim = 0
  454.       qgenp%header%n_codim = 0
  454.       qgenp%header%pad_dim = 0
  454.       qgenp%header%n_dim = 2
  454.       qgenp%header%d_type_idx = 13
  454.       qgenp%header%typ_code = 134481411
  454.       qgenp%header%orig_base = 0
  454.       qgenp%header%orig_size = 0
  454.       qgenp%dim_1%LB = 1
  454.       qgenp%dim_1%EX = 0
  454.       qgenp%dim_1%SM = 1
  454.       qgenp%dim_2%LB = 1
  454.       qgenp%dim_2%EX = 0
  454.       qgenp%dim_2%SM = 1
  346.       qgenp_si%header%el_len = 64
  346.       qgenp_si%header%assoc = 0
  346.       qgenp_si%header%ptr_alloc = 0
  346.       qgenp_si%header%p_or_a = 2
  346.       qgenp_si%header%a_contig = 1
  346.       qgenp_si%header%dv_versn = 2
  346.       qgenp_si%header%dv_smunit = 64
  346.       qgenp_si%header%d_type = 0
  346.       qgenp_si%header%n_params = 0
  346.       qgenp_si%header%pad_codim = 0
  346.       qgenp_si%header%n_codim = 0
  346.       qgenp_si%header%pad_dim = 0
  346.       qgenp_si%header%n_dim = 2
  346.       qgenp_si%header%d_type_idx = 13
  346.       qgenp_si%header%typ_code = 134481411
  346.       qgenp_si%header%orig_base = 0
  346.       qgenp_si%header%orig_size = 0
  346.       qgenp_si%dim_1%LB = 1
  346.       qgenp_si%dim_1%EX = 0
  346.       qgenp_si%dim_1%SM = 1
  346.       qgenp_si%dim_2%LB = 1
  346.       qgenp_si%dim_2%EX = 0
  346.       qgenp_si%dim_2%SM = 1
  434.       realbuffer%header%el_len = 64
  434.       realbuffer%header%assoc = 0
  434.       realbuffer%header%ptr_alloc = 0
  434.       realbuffer%header%p_or_a = 2
  434.       realbuffer%header%a_contig = 1
  434.       realbuffer%header%dv_versn = 2
  434.       realbuffer%header%dv_smunit = 64
  434.       realbuffer%header%d_type = 0
  434.       realbuffer%header%n_params = 0
  434.       realbuffer%header%pad_codim = 0
  434.       realbuffer%header%n_codim = 0
  434.       realbuffer%header%pad_dim = 0
  434.       realbuffer%header%n_dim = 1
  434.       realbuffer%header%d_type_idx = 13
  434.       realbuffer%header%typ_code = 134481411
  434.       realbuffer%header%orig_base = 0
  434.       realbuffer%header%orig_size = 0
  434.       realbuffer%dim_1%LB = 1
  434.       realbuffer%dim_1%EX = 0
  434.       realbuffer%dim_1%SM = 1
  345.       t$188 = 8 * ( ( _zla( 0, kmax ) * _zla( 0, kmax ) * 16 + 16 * _zla( 0, kmax ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, mymmax ) + 7 ) / 8 )
  345.       t$190 = 8 * _zla( 0, kmax ) + 8 * ( ( _zla( 0, kmax ) * _zla( 0, kmax ) * 16 + 16 * _zla( 0, kmax ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, mymmax ) + 7 ) / 8 )
  344.       t$191 = 8 * _zla( 0, kmax ) + 8 * ( ( _zla( 0, kmax ) * _zla( 0, kmax ) * 16 + 16 * _zla( 0, kmax ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, mymmax ) + 7 ) / 8 )
  344.       t$193 = 16 * _zla( 0, kmax ) + 8 * ( ( _zla( 0, kmax ) * _zla( 0, kmax ) * 16 + 16 * _zla( 0, kmax ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, mymmax ) + 7 ) / 8 )
  325.       t$168 = int( _alloc( 16 * _zla( 0, kmax ) + 8 * ( ( _zla( 0, kmax ) * _zla( 0, kmax ) * 16 + 16 * _zla( 0, kmax ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, mymmax ) + 7 ) / 8 ) ), 8 )
  342.       t$169 = t$168
  340.       t$174 = t$168 + 8 * _zla( 0, kmax )
  341.       t$177 = t$168 + 8 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 8
  343.       t$180 = t$168 + 8 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 16
  404.       t$183 = t$168 + _zla( 0, kmax ) * _zla( 0, kmax ) * 16 + 16 * _zla( 0, kmax )
  434.       t$186 = t$168 + _zla( 0, kmax ) * _zla( 0, kmax ) * 16 + 16 * _zla( 0, kmax ) + 4 * _zla( 0, mmax )
  345.       t$189 = t$168 + 8 * ( ( _zla( 0, kmax ) * _zla( 0, kmax ) * 16 + 16 * _zla( 0, kmax ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, mymmax ) + 7 ) / 8 )
  344.       t$192 = t$168 + 8 * _zla( 0, kmax ) + 8 * ( ( _zla( 0, kmax ) * _zla( 0, kmax ) * 16 + 16 * _zla( 0, kmax ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, mymmax ) + 7 ) / 8 )
  469.       realbuffer%header%a_contig = 1
  469.       realbuffer%dim_1%LB = 1
  469.       realbuffer%dim_1%EX = _zla( 0, ( 3 * kmax + kmax * kmax * 2 ) )
  469.       realbuffer%dim_1%SM = 1
  469.       $_allo_P2(0) = 0x1000000000001L
  469.       $_allo_P2(1) = loc( realbuffer )
  469.       call __allocate( $_allo_P2, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  470.       if ( ierr /= 0 ) then
  471.          _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$24,  _substr(t$23,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  473.          _f90_adjustl(  _substr(t$405,1,10),  _substr(c0,1,10) )
  472.          t$406 = 46 + ( _ltrim(  _substr(t$405,1,10) ) )
  472.          t$408 = int( _alloc( _zla( 0, t$406 ) ), 8 )
  472.           _substr(t$407,1,_zla( 0, t$406 )) = //( '**(Nlnmi)** Allocate RealBuffer returned STAT=',  _substr(t$405,1,_ltrim(  _substr(t$405,1,10) )) )
  472.          call fatalerror(  _substr(t$407,1,_zla( 0, t$406 )) )
  472.          _free( t$408 )
  474.           _substr(t$409,1,4) = ' '
  474.          call _stop(  _substr(t$409,1,1) )
  474.       else if ( myid == 0 ) then
  481.          ierr = 0
  480.          t$411 = nfnmi
  481.           _substr(t$412,1,4) = 'OLD'
  480.           _substr(t$413,1,10) = 'SEQUENTIAL'
  480.           _substr(t$414,1,11) = 'UNFORMATTED'
  481.           _substr(t$415,1,4) = 'READ'
  480.          t$416(1) = 0x100000000000000L
  480. !dir$ suppress t$411
  480.          t$416(2) = int( loc( t$411 ), 8 )
  480. !dir$ suppress ierr
  480.          t$416(3) = int( loc( ierr ), 8 )
  480.          t$416(4) = 0
  480. !dir$ suppress  _substr(fname,1,max( 0, t$166 ))
  480.          t$416(5) = int( loc(  _substr(fname,1,_len( fname )) ), 8 )
  480.          t$416(6) = _len( fname )
  480. !dir$ suppress  _substr(t$412,1,3)
  480.          t$416(7) = int( loc(  _substr(t$412,1,3) ), 8 )
  480.          t$416(8) = 3
  480. !dir$ suppress  _substr(t$413,1,10)
  480.          t$416(9) = int( loc(  _substr(t$413,1,10) ), 8 )
  480.          t$416(10) = 10
  480. !dir$ suppress  _substr(t$414,1,11)
  480.          t$416(11) = int( loc(  _substr(t$414,1,11) ), 8 )
  480.          t$416(12) = 11
  480.          t$416(13) = 0
  480.          t$416(14) = 0
  480.          t$416(16) = 0
  480. !dir$ suppress  _substr(t$415,1,4)
  480.          t$416(18) = int( loc(  _substr(t$415,1,4) ), 8 )
  480.          t$416(19) = 4
  480.          t$416(20) = 0
  480.          t$416(22) = 0
  480.          t$416(24) = 0x2000200000000L
  480.          t$416(25) = 0
  480.          t$416(27) = 0
  480.          t$416(29) = 0
  480.          t$416(31) = 0
  480.          t$416(33) = 0
  480.          t$416(35) = 0
  480.          t$410 = _open( t$416 )
  482.          if ( ierr /= 0 ) then
  483.             _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$26,  _substr(t$25,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  485.             _f90_adjustl(  _substr(t$417,1,10),  _substr(c0,1,10) )
  484.             t$418 = ( _ltrim(  _substr(t$417,1,10) ) ) + ( _ltrim(  _substr(fname,1,_len( fname )) ) ) + 39
  484.             t$420 = int( _alloc( max( 0, t$418 ) ), 8 )
  484.              _substr(t$419,1,max( 0, t$418 )) = //( '**(Nlnmi)** Open file ', //(  _substr(fname,1,_ltrim(  _substr(fname,1,_len( fname )) )), //( ' returned IOSTAT=',  _substr(t$417,1,_ltrim(  _substr(t$417,1,10) )) ) ) )
  484.             call fatalerror(  _substr(t$419,1,max( 0, t$418 )) )
  484.             _free( t$420 )
  486.              _substr(t$421,1,4) = ' '
  486.             call _stop(  _substr(t$421,1,1) )
  486.          else
  488.             if ( ( 0 >= realbuffer%dim_1%EX .or. realbuffer%dim_1%EX <= 0 ) .and. realbuffer%dim_1%EX > 0 ) then
  488.                 _substr(t$424,1,17) = 'NonLinearNMI.f90'
  488.                 _substr(t$425,1,11) = 'REALBUFFER'
  488.                t$411 = 1
  488.                t$426 = realbuffer%dim_1%EX
  488.                t$427 = 1
  488.                t$428 = realbuffer%dim_1%EX
  488.                call _rbounds_error(  _substr(t$424,1,17), 991,  _substr(t$425,1,11), 1, t$411, t$426, t$427, t$428, 1, t$423 )
  488.             endif
  488.             $Unit_temp_O0 = nfnmi
  488.             t$422 = _uread( _clist( 0, 1, 3, $Unit_temp_O0, ierr, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (realbuffer%base_addr)(+:( 1, realbuffer%dim_1%EX, 1 ), 0), 0x804060300000000L ) ) )
  489.             if ( ierr /= 0 ) then
  490.                _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$28,  _substr(t$27,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  491.                _f90_adjustl(  _substr(t$429,1,10),  _substr(c0,1,10) )
  491.                t$430 = 44 + ( _ltrim(  _substr(t$429,1,10) ) )
  491.                t$432 = int( _alloc( max( 0, t$430 ) ), 8 )
  491.                 _substr(t$431,1,max( 0, t$430 )) = //( '**(Nlnmi)** Read RealBuffer returned IOSTAT=',  _substr(t$429,1,_ltrim(  _substr(t$429,1,10) )) )
  491.                call fatalerror(  _substr(t$431,1,max( 0, t$430 )) )
  491.                _free( t$432 )
  492.                 _substr(t$433,1,4) = ' '
  492.                call _stop(  _substr(t$433,1,1) )
  492.             else
  492.                goto 10
  492.             endif
  492.          endif
  492.       else
  492.    10    continue
  498.          if ( maxnodes > 1 ) then
  499.             t$434 = ( max( 0, realbuffer%dim_1%EX ) )
  499.             call mpi_bcast( (realbuffer%base_addr)(1, 0), t$434, 1275070495, 0, 1140850688, ierr )
  500.             if ( ierr /= 0 ) then
  501.                _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$30,  _substr(t$29,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  502.                _f90_adjustl(  _substr(t$435,1,10),  _substr(c0,1,10) )
  502.                t$436 = 47 + ( _ltrim(  _substr(t$435,1,10) ) )
  502.                t$438 = int( _alloc( max( 0, t$436 ) ), 8 )
  502.                 _substr(t$437,1,max( 0, t$436 )) = //( '**(Nlnmi)** Broadcast RealBuffer returned ierr=',  _substr(t$435,1,_ltrim(  _substr(t$435,1,10) )) )
  502.                call fatalerror(  _substr(t$437,1,max( 0, t$436 )) )
  502.                _free( t$438 )
  503.                 _substr(t$439,1,4) = ' '
  503.                call _stop(  _substr(t$439,1,1) )
  503.             else
  503.                goto 20
  503.             endif
  503.          else
  503.    20       continue
  510.             if ( kmax > 0 ) then
  512.                $SC_realbuffer_I108 = realbuffer%dim_1%EX
  510.                $I_L510_1199 = 0
  510.                do
  511.                   $I_L511_1109 = 0
  511. !dir$ ivdep
  511.                   do
  512.                      eigg(1 + $I_L511_1109, 1 + $I_L510_1199) = (realbuffer%base_addr)($I_L511_1109 + kmax * $I_L510_1199 + 1, 0)
  513.                      $I_L511_1109 = 1 + $I_L511_1109
  511.                      if ( $I_L511_1109 >= kmax ) exit
  511.                   enddo
  514.                   $I_L510_1199 = 1 + $I_L510_1199
  513.                   if ( $I_L510_1199 >= kmax ) exit
  513.                enddo
  518.                $SC_realbuffer_I108 = realbuffer%dim_1%EX
  516.                $I_L516_1201 = 0
  516.                do
  517.                   $I_L517_1111 = 0
  517. !dir$ ivdep
  517.                   do
  518.                      eiggt(1 + $I_L517_1111, 1 + $I_L516_1201) = (realbuffer%base_addr)($I_L517_1111 + kmax * kmax + kmax * $I_L516_1201 + 1, 0)
  519.                      $I_L517_1111 = 1 + $I_L517_1111
  517.                      if ( $I_L517_1111 >= kmax ) exit
  517.                   enddo
  520.                   $I_L516_1201 = 1 + $I_L516_1201
  519.                   if ( $I_L516_1201 >= kmax ) exit
  519.                enddo
  523.                $SC_realbuffer_I108 = realbuffer%dim_1%EX
  522.                $I_L522_1113 = 0
  522. !dir$ ivdep
  522.                do
  523.                   gh(1 + $I_L522_1113) = (realbuffer%base_addr)($I_L522_1113 + kmax * kmax * 2 + 1, 0)
  524.                   $I_L522_1113 = 1 + $I_L522_1113
  522.                   if ( $I_L522_1113 >= kmax ) exit
  522.                enddo
  527.                $SC_realbuffer_I108 = realbuffer%dim_1%EX
  526.                $I_L526_1115 = 0
  526. !dir$ ivdep
  526.                do
  527.                   dotpro(1 + $I_L526_1115) = (realbuffer%base_addr)(kmax + $I_L526_1115 + kmax * kmax * 2 + 1, 0)
  528.                   $I_L526_1115 = 1 + $I_L526_1115
  526.                   if ( $I_L526_1115 >= kmax ) exit
  526.                enddo
  531.                $SC_realbuffer_I108 = realbuffer%dim_1%EX
  530.                $I_L530_1117 = 0
  530. !dir$ ivdep
  530.                do
  531.                   to(1 + $I_L530_1117) = (realbuffer%base_addr)($I_L530_1117 + kmax * kmax * 2 + 2 * kmax + 1, 0)
  532.                   $I_L530_1117 = 1 + $I_L530_1117
  530.                   if ( $I_L530_1117 >= kmax ) exit
  530.                enddo
  530.             endif
  536. !dir$ suppress gh(1)
  536.             t$461%base_addr = pointer to array[1] of real (kind=8)( loc( gh(1) ) )
  536.             t$461%header%el_len = 64
  536.             t$461%header%assoc = 1
  536.             t$461%header%ptr_alloc = 0
  536.             t$461%header%p_or_a = 0
  536.             t$461%header%a_contig = 1
  536.             t$461%header%dv_versn = 2
  536.             t$461%header%dv_smunit = 64
  536.             t$461%header%d_type = 0
  536.             t$461%header%n_params = 0
  536.             t$461%header%pad_codim = 0
  536.             t$461%header%n_codim = 0
  536.             t$461%header%pad_dim = 0
  536.             t$461%header%n_dim = 1
  536.             t$461%header%d_type_idx = 13
  536.             t$461%header%typ_code = 134481411
  536.             t$461%header%orig_base = 0
  536.             t$461%header%orig_size = 0
  536.             t$461%dim_1%LB = 1
  536.             t$461%dim_1%EX = _zla( 0, t$19 )
  536.             t$461%dim_1%SM = 1
  536.             call setmods( t$461 )
  537.             qgenp_si%header%a_contig = 1
  537.             qgenp_si%dim_1%LB = 1
  537.             qgenp_si%dim_1%EX = ( max( 0, 2 * mnmax_si ) )
  537.             qgenp_si%dim_1%SM = 1
  537.             qgenp_si%dim_2%LB = 1
  537.             qgenp_si%dim_2%EX = ( max( 0, kmax ) )
  537.             qgenp_si%dim_2%SM = ( max( 0, 2 * mnmax_si ) )
  537.             $_allo_P3(0) = 0x1000000000001L
  537.             $_allo_P3(1) = loc( qgenp_si )
  537.             call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
  538.             qgenp%header%a_contig = 1
  538.             qgenp%dim_1%LB = 1
  538.             qgenp%dim_1%EX = ( max( 0, 2 * mymnmax ) )
  538.             qgenp%dim_1%SM = 1
  538.             qgenp%dim_2%LB = 1
  538.             qgenp%dim_2%EX = ( max( 0, modsloc ) )
  538.             qgenp%dim_2%SM = ( max( 0, 2 * mymnmax ) )
  538.             $_allo_P4(0) = 0x1000000000001L
  538.             $_allo_P4(1) = loc( qgenp )
  538.             call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
  540.             niter = cvmg( 3, 2, mods > 2 )
  546.             ipa$105 = 1.0
  546.             call bmcm( ipa$105, slagr )
  550.             if ( kmax > 0 ) then
  553.                 _substr($W0,1,1) = 't'
  553.                $W1 = kmax
  553.                $W2 = kmax
  553.                $W3 = 1.0
  553.                $W4 = t$19
  553.                $W5 = _pbase( 1, sv )
  553.                $W6 = 0.0
  553.                $W7 = 1
  553.                _dgemv(  _substr($W0,1,1), $W1, $W2, $W3, eigg(1, 1), $W4, (sv%base_addr)(1, 0), $W5, $W6, verin(1), $W7 )
  553.             endif
  559.             all_jg%header%a_contig = 1
  559.             all_jg%dim_1%LB = 1
  559.             all_jg%dim_1%EX = ( max( 0, 2 * mmax ) )
  559.             all_jg%dim_1%SM = 1
  559.             all_jg%dim_2%LB = 1
  559.             all_jg%dim_2%EX = ( max( 0, mods ) )
  559.             all_jg%dim_2%SM = ( max( 0, 2 * mmax ) )
  559.             $_allo_P5(0) = 0x1000000000001L
  559.             $_allo_P5(1) = loc( all_jg )
  559.             call __allocate( $_allo_P5, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  560.             if ( ierr /= 0 ) then
  561.                _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$32,  _substr(t$31,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  563.                _f90_adjustl(  _substr(t$468,1,10),  _substr(c0,1,10) )
  562.                t$469 = 42 + ( _ltrim(  _substr(t$468,1,10) ) )
  562.                t$471 = int( _alloc( max( 0, t$469 ) ), 8 )
  562.                 _substr(t$470,1,max( 0, t$469 )) = //( '**(Nlnmi)** Allocate all_jg returned STAT=',  _substr(t$468,1,_ltrim(  _substr(t$468,1,10) )) )
  562.                call fatalerror(  _substr(t$470,1,max( 0, t$469 )) )
  562.                _free( t$471 )
  564.                 _substr(t$472,1,4) = ' '
  564.                call _stop(  _substr(t$472,1,1) )
  564.             else
  566.                all_nas%header%a_contig = 1
  566.                all_nas%dim_1%LB = 1
  566.                all_nas%dim_1%EX = ( max( 0, 2 * mmax ) )
  566.                all_nas%dim_1%SM = 1
  566.                all_nas%dim_2%LB = 1
  566.                all_nas%dim_2%EX = ( max( 0, mods ) )
  566.                all_nas%dim_2%SM = ( max( 0, 2 * mmax ) )
  566.                $_allo_P6(0) = 0x1000000000001L
  566.                $_allo_P6(1) = loc( all_nas )
  566.                call __allocate( $_allo_P6, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  567.                if ( ierr /= 0 ) then
  568.                   _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$34,  _substr(t$33,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  570.                   _f90_adjustl(  _substr(t$473,1,10),  _substr(c0,1,10) )
  569.                   t$474 = 43 + ( _ltrim(  _substr(t$473,1,10) ) )
  569.                   t$476 = int( _alloc( max( 0, t$474 ) ), 8 )
  569.                    _substr(t$475,1,max( 0, t$474 )) = //( '**(Nlnmi)** Allocate all_nas returned STAT=',  _substr(t$473,1,_ltrim(  _substr(t$473,1,10) )) )
  569.                   call fatalerror(  _substr(t$475,1,max( 0, t$474 )) )
  569.                   _free( t$476 )
  571.                    _substr(t$477,1,4) = ' '
  571.                   call _stop(  _substr(t$477,1,1) )
  571.                else
  573.                   one_g%header%a_contig = 1
  573.                   one_g%dim_1%LB = 1
  573.                   one_g%dim_1%EX = ( max( 0, mmax * mmax * 3 + 6 * mmax + 3 ) )
  573.                   one_g%dim_1%SM = 1
  573.                   $_allo_P7(0) = 0x1000000000001L
  573.                   $_allo_P7(1) = loc( one_g )
  573.                   call __allocate( $_allo_P7, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  574.                   if ( ierr /= 0 ) then
  575.                      _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$36,  _substr(t$35,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  577.                      _f90_adjustl(  _substr(t$478,1,10),  _substr(c0,1,10) )
  576.                      t$479 = 41 + ( _ltrim(  _substr(t$478,1,10) ) )
  576.                      t$481 = int( _alloc( max( 0, t$479 ) ), 8 )
  576.                       _substr(t$480,1,max( 0, t$479 )) = //( '**(Nlnmi)** Allocate one_g returned STAT=',  _substr(t$478,1,_ltrim(  _substr(t$478,1,10) )) )
  576.                      call fatalerror(  _substr(t$480,1,max( 0, t$479 )) )
  576.                      _free( t$481 )
  578.                       _substr(t$482,1,4) = ' '
  578.                      call _stop(  _substr(t$482,1,1) )
  578.                   else
  580.                      one_per%header%a_contig = 1
  580.                      one_per%dim_1%LB = 1
  580.                      one_per%dim_1%EX = ( max( 0, mmax * mmax * 3 + 6 * mmax + 3 ) )
  580.                      one_per%dim_1%SM = 1
  580.                      $_allo_P8(0) = 0x1000000000001L
  580.                      $_allo_P8(1) = loc( one_per )
  580.                      call __allocate( $_allo_P8, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  581.                      if ( ierr /= 0 ) then
  582.                         _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$38,  _substr(t$37,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  584.                         _f90_adjustl(  _substr(t$483,1,10),  _substr(c0,1,10) )
  583.                         t$484 = 43 + ( _ltrim(  _substr(t$483,1,10) ) )
  583.                         t$486 = int( _alloc( max( 0, t$484 ) ), 8 )
  583.                          _substr(t$485,1,max( 0, t$484 )) = //( '**(Nlnmi)** Allocate one_per returned STAT=',  _substr(t$483,1,_ltrim(  _substr(t$483,1,10) )) )
  583.                         call fatalerror(  _substr(t$485,1,max( 0, t$484 )) )
  583.                         _free( t$486 )
  585.                          _substr(t$487,1,4) = ' '
  585.                         call _stop(  _substr(t$487,1,1) )
  585.                      else if ( myid /= 0 ) then
  585.                         goto 30
  585.                      else if ( mods <= 0 ) then
  585.                         goto 90
  585.                         goto 30
  585.                      else if ( mmax > 0 ) then
  594.                         $I_L594_1247 = 0
  594.                         do
  595.                            $I_L595_1203 = 0
  595.                            do
  596.                               $I_L596_1119 = 0
  596.                               do
  598.                                  $Unit_temp_O1 = nfnmi
  598.                                  t$495 = _uread( _clist( 0, 1, 3, $Unit_temp_O1, ierr, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 1, 1 )), 0x804060200000000L ) ) )
  598.                                  scratch1 = $_IOitem_P0(0)
  598.                                  scratch2 = $_IOitem_P0(1)
  599.                                  (all_jg%base_addr)($I_L596_1119 + 2 * $I_L595_1203 + 1, 1 + $I_L594_1247, 0) = scratch1
  600.                                  (all_nas%base_addr)($I_L596_1119 + 2 * $I_L595_1203 + 1, 1 + $I_L594_1247, 0) = scratch2
  601.                                  if ( ierr /= 0 ) then
  602.                                     _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$40,  _substr(t$39,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  603.                                     _f90_adjustl(  _substr(t$496,1,10),  _substr(c0,1,10) )
  603.                                     t$497 = 49 + ( _ltrim(  _substr(t$496,1,10) ) )
  603.                                     t$499 = int( _alloc( max( 0, t$497 ) ), 8 )
  603.                                      _substr(t$498,1,max( 0, t$497 )) = //( '**(Nlnmi)** Read all_jg, all_nas returned IOSTAT=',  _substr(t$496,1,_ltrim(  _substr(t$496,1,10) )) )
  603.                                     call fatalerror(  _substr(t$498,1,max( 0, t$497 )) )
  603.                                     _free( t$499 )
  604.                                      _substr(t$500,1,4) = ' '
  604.                                     call _stop(  _substr(t$500,1,1) )
  604.                                     goto 110
  604.                                  endif
  605.                                  if ( scratch1 /= 0 ) then
  606.                                     ipa$115 = loc( (one_per%base_addr)(1, 0) )
  606.                                     per = _copyin( (one_per%base_addr)(1, 0) )
  606.                                     ipa$117 = loc( (one_g%base_addr)(1, 0) )
  606.                                     g = _copyin( (one_g%base_addr)(1, 0) )
  606.                                     t$84 = scratch1
  606.                                     t$227 = max( 0, scratch1 )
  606.                                     t$85 = scratch2
  606.                                     t$228 = scratch1
  606.                                     t$229 = max( 0, scratch2 )
  606.                                     t$230 = scratch1 * scratch2
  606.                                     $Unit_temp_O2 = nfnmi
  606.                                     _uread( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( per(+:( 1, scratch1, 1 )), 0x804060300000000L ), _iotype( g(+:( 1, scratch1, 1 ), +:( 1, scratch2, 1 )), 0x804060300000000L ) ) )
  606.                                     (one_g%base_addr)(1, 0) = _copyout( g )
  606.                                     (one_per%base_addr)(1, 0) = _copyout( per )
  606.                                  endif
  608.                                  $I_L596_1119 = 1 + $I_L596_1119
  607.                                  if ( $I_L596_1119 >= 2 ) exit
  607.                               enddo
  609.                               $I_L595_1203 = 1 + $I_L595_1203
  608.                               if ( $I_L595_1203 >= mmax ) exit
  608.                            enddo
  610.                            $I_L594_1247 = 1 + $I_L594_1247
  609.                            if ( $I_L594_1247 >= mods ) exit
  609.                         enddo
  609.                         goto 100
  609.                      else
  609.   100                   continue
  609.    90                   continue
  614.                         t$411 = nfnmi
  614.                         t$501 = __rewf( t$411, 0, 0, 0x100000000000000L, 0, 0 )
  614.    30                   continue
  619.                         if ( maxnodes > 1 ) then
  620.                            t$434 = ( max( 0, all_jg%dim_2%EX * max( 0, all_jg%dim_1%EX ) ) )
  620.                            call mpi_bcast( (all_jg%base_addr)(1, 1, 0), t$434, 1275069467, 0, 1140850688, ierr )
  621.                            if ( ierr /= 0 ) then
  622.                               _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$42,  _substr(t$41,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  623.                               _f90_adjustl(  _substr(t$502,1,10),  _substr(c0,1,10) )
  623.                               t$503 = 43 + ( _ltrim(  _substr(t$502,1,10) ) )
  623.                               t$505 = int( _alloc( max( 0, t$503 ) ), 8 )
  623.                                _substr(t$504,1,max( 0, t$503 )) = //( '**(Nlnmi)** Broadcast all_jg returned ierr=',  _substr(t$502,1,_ltrim(  _substr(t$502,1,10) )) )
  623.                               call fatalerror(  _substr(t$504,1,max( 0, t$503 )) )
  623.                               _free( t$505 )
  624.                                _substr(t$506,1,4) = ' '
  624.                               call _stop(  _substr(t$506,1,1) )
  624.                            else
  626.                               t$434 = ( max( 0, all_nas%dim_2%EX * max( 0, all_nas%dim_1%EX ) ) )
  626.                               call mpi_bcast( (all_nas%base_addr)(1, 1, 0), t$434, 1275069467, 0, 1140850688, ierr )
  627.                               if ( ierr /= 0 ) then
  628.                                  _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$44,  _substr(t$43,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  629.                                  _f90_adjustl(  _substr(t$507,1,10),  _substr(c0,1,10) )
  629.                                  t$508 = 44 + ( _ltrim(  _substr(t$507,1,10) ) )
  629.                                  t$510 = int( _alloc( max( 0, t$508 ) ), 8 )
  629.                                   _substr(t$509,1,max( 0, t$508 )) = //( '**(Nlnmi)** Broadcast all_nas returned ierr=',  _substr(t$507,1,_ltrim(  _substr(t$507,1,10) )) )
  629.                                  call fatalerror(  _substr(t$509,1,max( 0, t$508 )) )
  629.                                  _free( t$510 )
  630.                                   _substr(t$511,1,4) = ' '
  630.                                  call _stop(  _substr(t$511,1,1) )
  630.                               else
  630.                                  goto 40
  630.                               endif
  630.                            endif
  630.                         else
  630.    40                      continue
  636.                            indper%header%a_contig = 1
  636.                            indper%dim_1%LB = 1
  636.                            indper%dim_1%EX = ( max( 0, 2 * mymmax ) )
  636.                            indper%dim_1%SM = 1
  636.                            indper%dim_2%LB = 1
  636.                            indper%dim_2%EX = ( max( 0, modsloc ) )
  636.                            indper%dim_2%SM = ( max( 0, 2 * mymmax ) )
  636.                            $_allo_P9(0) = 0x1000000000001L
  636.                            $_allo_P9(1) = loc( indper )
  636.                            call __allocate( $_allo_P9, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  637.                            if ( ierr /= 0 ) then
  638.                               _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$46,  _substr(t$45,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  640.                               _f90_adjustl(  _substr(t$512,1,10),  _substr(c0,1,10) )
  639.                               t$513 = 42 + ( _ltrim(  _substr(t$512,1,10) ) )
  639.                               t$515 = int( _alloc( max( 0, t$513 ) ), 8 )
  639.                                _substr(t$514,1,max( 0, t$513 )) = //( '**(Nlnmi)** Allocate indper returned STAT=',  _substr(t$512,1,_ltrim(  _substr(t$512,1,10) )) )
  639.                               call fatalerror(  _substr(t$514,1,max( 0, t$513 )) )
  639.                               _free( t$515 )
  641.                                _substr(t$516,1,4) = ' '
  641.                               call _stop(  _substr(t$516,1,1) )
  641.                            else
  643.                               indg%header%a_contig = 1
  643.                               indg%dim_1%LB = 1
  643.                               indg%dim_1%EX = ( max( 0, 2 * mymmax ) )
  643.                               indg%dim_1%SM = 1
  643.                               indg%dim_2%LB = 1
  643.                               indg%dim_2%EX = ( max( 0, modsloc ) )
  643.                               indg%dim_2%SM = ( max( 0, 2 * mymmax ) )
  643.                               $_allo_P10(0) = 0x1000000000001L
  643.                               $_allo_P10(1) = loc( indg )
  643.                               call __allocate( $_allo_P10, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  644.                               if ( ierr /= 0 ) then
  645.                                  _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$48,  _substr(t$47,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  647.                                  _f90_adjustl(  _substr(t$517,1,10),  _substr(c0,1,10) )
  646.                                  t$518 = 40 + ( _ltrim(  _substr(t$517,1,10) ) )
  646.                                  t$520 = int( _alloc( max( 0, t$518 ) ), 8 )
  646.                                   _substr(t$519,1,max( 0, t$518 )) = //( '**(Nlnmi)** Allocate indg returned STAT=',  _substr(t$517,1,_ltrim(  _substr(t$517,1,10) )) )
  646.                                  call fatalerror(  _substr(t$519,1,max( 0, t$518 )) )
  646.                                  _free( t$520 )
  648.                                   _substr(t$521,1,4) = ' '
  648.                                  call _stop(  _substr(t$521,1,1) )
  648.                               else
  650.                                  jg%header%a_contig = 1
  650.                                  jg%dim_1%LB = 1
  650.                                  jg%dim_1%EX = ( max( 0, 2 * mymmax ) )
  650.                                  jg%dim_1%SM = 1
  650.                                  jg%dim_2%LB = 1
  650.                                  jg%dim_2%EX = ( max( 0, modsloc ) )
  650.                                  jg%dim_2%SM = ( max( 0, 2 * mymmax ) )
  650.                                  $_allo_P11(0) = 0x1000000000001L
  650.                                  $_allo_P11(1) = loc( jg )
  650.                                  call __allocate( $_allo_P11, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  651.                                  if ( ierr /= 0 ) then
  652.                                     _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$50,  _substr(t$49,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  654.                                     _f90_adjustl(  _substr(t$522,1,10),  _substr(c0,1,10) )
  653.                                     t$523 = 38 + ( _ltrim(  _substr(t$522,1,10) ) )
  653.                                     t$525 = int( _alloc( max( 0, t$523 ) ), 8 )
  653.                                      _substr(t$524,1,max( 0, t$523 )) = //( '**(Nlnmi)** Allocate jg returned STAT=',  _substr(t$522,1,_ltrim(  _substr(t$522,1,10) )) )
  653.                                     call fatalerror(  _substr(t$524,1,max( 0, t$523 )) )
  653.                                     _free( t$525 )
  655.                                      _substr(t$526,1,4) = ' '
  655.                                     call _stop(  _substr(t$526,1,1) )
  655.                                  else
  657.                                     nas%header%a_contig = 1
  657.                                     nas%dim_1%LB = 1
  657.                                     nas%dim_1%EX = ( max( 0, 2 * mymmax ) )
  657.                                     nas%dim_1%SM = 1
  657.                                     nas%dim_2%LB = 1
  657.                                     nas%dim_2%EX = ( max( 0, modsloc ) )
  657.                                     nas%dim_2%SM = ( max( 0, 2 * mymmax ) )
  657.                                     $_allo_P12(0) = 0x1000000000001L
  657.                                     $_allo_P12(1) = loc( nas )
  657.                                     call __allocate( $_allo_P12, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  658.                                     if ( ierr /= 0 ) then
  659.                                        _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$52,  _substr(t$51,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  661.                                        _f90_adjustl(  _substr(t$527,1,10),  _substr(c0,1,10) )
  660.                                        t$528 = 39 + ( _ltrim(  _substr(t$527,1,10) ) )
  660.                                        t$530 = int( _alloc( max( 0, t$528 ) ), 8 )
  660.                                         _substr(t$529,1,max( 0, t$528 )) = //( '**(Nlnmi)** Allocate nas returned STAT=',  _substr(t$527,1,_ltrim(  _substr(t$527,1,10) )) )
  660.                                        call fatalerror(  _substr(t$529,1,max( 0, t$528 )) )
  660.                                        _free( t$530 )
  662.                                         _substr(t$531,1,4) = ' '
  662.                                        call _stop(  _substr(t$531,1,1) )
  662.                                     else
  667.                                        if ( mmax > 0 ) then
  668.                                           $SC_nodehasm_I109 = nodehasm%dim_1%EX
  668.                                           $SC_nodehasm_I110 = nodehasm%dim_1%LB
  668.                                           $SC_nodehasm_I112 = nodehasm%dim_2%SM
  668.                                           $SC_nodehasm_I111 = nodehasm%dim_2%EX
  668.                                           $SC_nodehasm_I113 = nodehasm%dim_2%LB
  667.                                           $I_L667_1121 = 0
  667. !dir$ ivdep
  667.                                           do
  668.                                              mine_per_g(1 + $I_L667_1121) = myid_four + -(nodehasm%base_addr)(1 + $I_L667_1121, mygroup_four, 0) == 0
  669.                                              $I_L667_1121 = 1 + $I_L667_1121
  667.                                              if ( $I_L667_1121 >= mmax ) exit
  667.                                           enddo
  667.                                        endif
  673.                                        ig = 1
  674.                                        iper = 1
  675.                                        $t_S16 = modsloc
  675.                                        if ( modsloc > 0 ) then
  683.                                           $SC_nas_I19 = ( max( 0, 2 * mymmax ) )
  683.                                           $SC_nas_I18 = ( max( 0, modsloc ) )
  683.                                           $SC_nas_I17 = ( max( 0, 2 * mymmax ) )
  682.                                           $SC_jg_I13 = ( max( 0, 2 * mymmax ) )
  682.                                           $SC_jg_I12 = ( max( 0, modsloc ) )
  682.                                           $SC_jg_I11 = ( max( 0, 2 * mymmax ) )
  686.                                           $SC_indg_I25 = ( max( 0, 2 * mymmax ) )
  686.                                           $SC_indg_I24 = ( max( 0, modsloc ) )
  686.                                           $SC_indg_I23 = ( max( 0, 2 * mymmax ) )
  684.                                           $SC_indper_I22 = ( max( 0, 2 * mymmax ) )
  684.                                           $SC_indper_I21 = ( max( 0, modsloc ) )
  684.                                           $SC_indper_I20 = ( max( 0, 2 * mymmax ) )
  683.                                           $SC_all_nas_I16 = all_nas%dim_2%SM
  683.                                           $SC_all_nas_I15 = all_nas%dim_2%EX
  683.                                           $SC_all_nas_I14 = all_nas%dim_1%EX
  682.                                           $SC_all_jg_I10 = all_jg%dim_2%SM
  682.                                           $SC_all_jg_I9 = all_jg%dim_2%EX
  682.                                           $SC_all_jg_I8 = all_jg%dim_1%EX
  675.                                           $I_L675_1205 = 0
  675.                                           do
  675.                                              i = ( 1 + $I_L675_1205 )
  677.                                              ijg = 1
  678.                                              if ( mmax > 0 ) then
  678.                                                 $I_L678_1123 = 0
  678. !dir$ unroll 2
  678.                                                 do
  681.                                                    if ( mine_per_g(1 + $I_L678_1123) ) then
  682.                                                       $jg_WR0_R0 = (all_jg%base_addr)(1 + 2 * $I_L678_1123, myfirstmod + $I_L675_1205, 0)
  682.                                                       (jg%base_addr)(ijg, 1 + $I_L675_1205, 0) = $jg_WR0_R0
  683.                                                       $nas_WR0_R1 = (all_nas%base_addr)(1 + 2 * $I_L678_1123, myfirstmod + $I_L675_1205, 0)
  683.                                                       (nas%base_addr)(ijg, 1 + $I_L675_1205, 0) = $nas_WR0_R1
  684.                                                       (indper%base_addr)(ijg, 1 + $I_L675_1205, 0) = iper
  685.                                                       iper = ( iper + $jg_WR0_R0 )
  686.                                                       (indg%base_addr)(ijg, 1 + $I_L675_1205, 0) = ig
  687.                                                       ig = ( ig + $jg_WR0_R0 * $nas_WR0_R1 )
  682.                                                       $jg_WR0_R2 = (all_jg%base_addr)(2 + 2 * $I_L678_1123, myfirstmod + $I_L675_1205, 0)
  682.                                                       (jg%base_addr)(1 + ijg, 1 + $I_L675_1205, 0) = $jg_WR0_R2
  683.                                                       $nas_WR0_R3 = (all_nas%base_addr)(2 + 2 * $I_L678_1123, myfirstmod + $I_L675_1205, 0)
  683.                                                       (nas%base_addr)(1 + ijg, 1 + $I_L675_1205, 0) = $nas_WR0_R3
  684.                                                       (indper%base_addr)(1 + ijg, 1 + $I_L675_1205, 0) = iper
  685.                                                       iper = ( iper + $jg_WR0_R2 )
  686.                                                       (indg%base_addr)(1 + ijg, 1 + $I_L675_1205, 0) = ig
  687.                                                       ig = ( ig + $jg_WR0_R2 * $nas_WR0_R3 )
  688.                                                       ijg = ( 2 + ijg )
  688.                                                    endif
  691.                                                    $I_L678_1123 = 1 + $I_L678_1123
  690.                                                    if ( $I_L678_1123 >= mmax ) exit
  690.                                                 enddo
  690.                                              endif
  695.                                              if ( -ijg + 2 * mymmax /= -1 ) then
  696.                                                 _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$54,  _substr(t$53,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i, 0x2000200000000L ) ) )
  697.                                                 _f90_adjustl(  _substr(t$542,1,10),  _substr(c0,1,10) )
  697.                                                  _substr(t$543,1,11) = '**(Nlnmi)**'
  697.                                                 t$544 = 37 + ( _ltrim(  _substr(t$542,1,10) ) )
  697.                                                 t$546 = int( _alloc( max( 0, t$544 ) ), 8 )
  697.                                                  _substr(t$545,1,max( 0, t$544 )) = //( ' jg and nas not fully filled at mode ',  _substr(t$542,1,_ltrim(  _substr(t$542,1,10) )) )
  697.                                                 call msgdump(  _substr(t$543,1,11),  _substr(t$545,1,max( 0, t$544 )) )
  697.                                                 _free( t$546 )
  698.                                                 _f90_adjustl(  _substr(t$547,1,10),  _substr(c0,1,10) )
  698.                                                 t$548 = 48 + ( _ltrim(  _substr(t$547,1,10) ) )
  698.                                                 t$550 = int( _alloc( max( 0, t$548 ) ), 8 )
  698.                                                  _substr(t$549,1,max( 0, t$548 )) = //( '**(Nlnmi)** jg and nas not fully filled at mode ',  _substr(t$547,1,_ltrim(  _substr(t$547,1,10) )) )
  698.                                                 call fatalerror(  _substr(t$549,1,max( 0, t$548 )) )
  698.                                                 _free( t$550 )
  698.                                              endif
  700.                                              $I_L675_1205 = 1 + $I_L675_1205
  699.                                              if ( $I_L675_1205 >= $t_S16 ) exit
  699.                                           enddo
  699.                                        endif
  704.                                        tot_g = ( -1 + ig )
  705.                                        tot_per = ( -1 + iper )
  709.                                        per%header%a_contig = 1
  709.                                        per%dim_1%LB = 1
  709.                                        per%dim_1%EX = max( 0, ( -1 + iper ) )
  709.                                        per%dim_1%SM = 1
  709.                                        $_allo_P13(0) = 0x1000000000001L
  709.                                        $_allo_P13(1) = loc( per )
  709.                                        call __allocate( $_allo_P13, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  710.                                        if ( ierr /= 0 ) then
  711.                                           _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$56,  _substr(t$55,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  712.                                           _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$58,  _substr(t$57,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( tot_per, 0x804060200000000L ) ) )
  714.                                           _f90_adjustl(  _substr(t$551,1,10),  _substr(c1,1,10) )
  715.                                           _f90_adjustl(  _substr(t$552,1,10),  _substr(c0,1,10) )
  713.                                           t$553 = ( _ltrim(  _substr(t$551,1,10) ) ) + ( _ltrim(  _substr(t$552,1,10) ) ) + 48
  714.                                           t$555 = int( _alloc( max( 0, t$553 ) ), 8 )
  714.                                            _substr(t$554,1,max( 0, t$553 )) = //( '**(Nlnmi)** Allocate per of size ', //(  _substr(t$551,1,_ltrim(  _substr(t$551,1,10) )), //( ' returned STAT=',  _substr(t$552,1,_ltrim(  _substr(t$552,1,10) )) ) ) )
  713.                                           call fatalerror(  _substr(t$554,1,max( 0, t$553 )) )
  714.                                           _free( t$555 )
  716.                                            _substr(t$556,1,4) = ' '
  716.                                           call _stop(  _substr(t$556,1,1) )
  716.                                        else
  718.                                           g%header%a_contig = 1
  718.                                           g%dim_1%LB = 1
  718.                                           g%dim_1%EX = max( 0, ( -1 + ig ) )
  718.                                           g%dim_1%SM = 1
  718.                                           $_allo_P14(0) = 0x1000000000001L
  718.                                           $_allo_P14(1) = loc( g )
  718.                                           call __allocate( $_allo_P14, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  719.                                           if ( ierr /= 0 ) then
  720.                                              _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$60,  _substr(t$59,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  721.                                              _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$62,  _substr(t$61,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( tot_g, 0x804060200000000L ) ) )
  723.                                              _f90_adjustl(  _substr(t$557,1,10),  _substr(c1,1,10) )
  724.                                              _f90_adjustl(  _substr(t$558,1,10),  _substr(c0,1,10) )
  722.                                              t$559 = ( _ltrim(  _substr(t$557,1,10) ) ) + ( _ltrim(  _substr(t$558,1,10) ) ) + 46
  723.                                              t$561 = int( _alloc( max( 0, t$559 ) ), 8 )
  723.                                               _substr(t$560,1,max( 0, t$559 )) = //( '**(Nlnmi)** Allocate g of size ', //(  _substr(t$557,1,_ltrim(  _substr(t$557,1,10) )), //( ' returned STAT=',  _substr(t$558,1,_ltrim(  _substr(t$558,1,10) )) ) ) )
  722.                                              call fatalerror(  _substr(t$560,1,max( 0, t$559 )) )
  723.                                              _free( t$561 )
  725.                                               _substr(t$562,1,4) = ' '
  725.                                              call _stop(  _substr(t$562,1,1) )
  725.                                           else if ( myid == 0 ) then
  731.                                              if ( ( 0 >= realbuffer%dim_1%EX .or. realbuffer%dim_1%EX <= 0 ) .and. realbuffer%dim_1%EX > 0 ) then
  731.                                                  _substr(t$565,1,17) = 'NonLinearNMI.f90'
  731.                                                  _substr(t$566,1,11) = 'REALBUFFER'
  731.                                                 t$426 = 1
  731.                                                 t$427 = realbuffer%dim_1%EX
  731.                                                 t$428 = 1
  731.                                                 t$411 = realbuffer%dim_1%EX
  731.                                                 call _rbounds_error(  _substr(t$565,1,17), 1234,  _substr(t$566,1,11), 1, t$426, t$427, t$428, t$411, 1, t$564 )
  731.                                              endif
  731.                                              $Unit_temp_O3 = nfnmi
  731.                                              t$563 = _uread( _clist( 0, 1, 3, $Unit_temp_O3, ierr, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (realbuffer%base_addr)(+:( 1, realbuffer%dim_1%EX, 1 ), 0), 0x804060300000000L ) ) )
  732.                                              if ( ierr /= 0 ) then
  733.                                                 _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$64,  _substr(t$63,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  734.                                                 _f90_adjustl(  _substr(t$567,1,10),  _substr(c0,1,10) )
  734.                                                 t$568 = 51 + ( _ltrim(  _substr(t$567,1,10) ) )
  734.                                                 t$570 = int( _alloc( max( 0, t$568 ) ), 8 )
  734.                                                  _substr(t$569,1,max( 0, t$568 )) = //( '**(Nlnmi)** Second read RealBuffer returned IOSTAT=',  _substr(t$567,1,_ltrim(  _substr(t$567,1,10) )) )
  734.                                                 call fatalerror(  _substr(t$569,1,max( 0, t$568 )) )
  734.                                                 _free( t$570 )
  735.                                                  _substr(t$571,1,4) = ' '
  735.                                                 call _stop(  _substr(t$571,1,1) )
  735.                                              else
  735.                                                 goto 50
  735.                                              endif
  735.                                           else
  735.    50                                        continue
  745.                                              $t_S21 = mods
  745.                                              if ( mods > 0 ) then
  797.                                                 $SC_nas_I19 = nas%dim_2%SM
  797.                                                 $SC_nas_I18 = nas%dim_2%EX
  797.                                                 $SC_nas_I17 = nas%dim_1%EX
  790.                                                 $SC_jg_I13 = jg%dim_2%SM
  790.                                                 $SC_jg_I12 = jg%dim_2%EX
  790.                                                 $SC_jg_I11 = jg%dim_1%EX
  764.                                                 $SC_indg_I25 = indg%dim_2%SM
  764.                                                 $SC_indg_I24 = indg%dim_2%EX
  764.                                                 $SC_indg_I23 = indg%dim_1%EX
  764.                                                 $SC_indper_I22 = indper%dim_2%SM
  764.                                                 $SC_indper_I21 = indper%dim_2%EX
  764.                                                 $SC_indper_I20 = indper%dim_1%EX
  768.                                                 $SC_one_per_I26 = one_per%dim_1%EX
  768.                                                 $SC_one_I27 = one_g%dim_1%EX
  789.                                                 $SC_all_jg_I10 = all_jg%dim_2%SM
  789.                                                 $SC_all_jg_I9 = all_jg%dim_2%EX
  789.                                                 $SC_all_jg_I8 = all_jg%dim_1%EX
  745.                                                 $I_L745_1249 = 0
  745.                                                 do
  746.                                                    group = (grouphasmod%base_addr)(1 + $I_L745_1249, 0)
  747.                                                    i1 = ( $I_L745_1249 + -myfirstmod + 2 )
  748.                                                    ijg = 1
  749.                                                    $t_S20 = mmax
  749.                                                    if ( mmax > 0 ) then
  749.                                                       $I_L749_1207 = 0
  749.                                                       do
  750.                                                          $I_L750_1125 = 0
  750.                                                          do
  756.                                                             if ( myid == 0 ) then
  757.                                                                $Unit_temp_O4 = nfnmi
  757.                                                                t$579 = _uread( _clist( 0, 1, 3, $Unit_temp_O4, ierr, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P1(:( 0, 1, 1 )), 0x804060200000000L ) ) )
  757.                                                                scratch1 = $_IOitem_P1(0)
  757.                                                                scratch2 = $_IOitem_P1(1)
  758.                                                                if ( ierr /= 0 ) then
  759.                                                                   _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$66,  _substr(t$65,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  760.                                                                   _f90_adjustl(  _substr(t$580,1,10),  _substr(c0,1,10) )
  760.                                                                   t$581 = 52 + ( _ltrim(  _substr(t$580,1,10) ) )
  760.                                                                   t$583 = int( _alloc( max( 0, t$581 ) ), 8 )
  760.                                                                    _substr(t$582,1,max( 0, t$581 )) = //( '**(Nlnmi)** Read scratch1, scratch2 returned IOSTAT=',  _substr(t$580,1,_ltrim(  _substr(t$580,1,10) )) )
  760.                                                                   call fatalerror(  _substr(t$582,1,max( 0, t$581 )) )
  760.                                                                   _free( t$583 )
  761.                                                                    _substr(t$584,1,4) = ' '
  761.                                                                   call _stop(  _substr(t$584,1,1) )
  761.                                                                else if ( scratch1 == 0 ) then
  806.                                                                   $I_L750_1125 = 1 + $I_L750_1125
  805.                                                                else if ( group + -mygroup_four /= 0 ) then
  805.                                                                else if ( (nodehasm%base_addr)(1 + $I_L749_1207, mygroup_four, 0) == 0 ) then
  805.                                                                else
  805.                                                                endif
  789.                                                             else if ( group + -mygroup_four /= 0 ) then
  789.                                                             else if ( (all_jg%base_addr)($I_L750_1125 + 2 * $I_L749_1207 + 1, 1 + $I_L745_1249, 0) == 0 ) then
  789.                                                             else if ( myid_four + -(nodehasm%base_addr)(1 + $I_L749_1207, mygroup_four, 0) == 0 ) then
  789.                                                             else
  789.                                                             endif
  789.                                                             if ( $I_L750_1125 >= 2 ) exit
  789.                                                          enddo
  807.                                                          $I_L749_1207 = 1 + $I_L749_1207
  806.                                                          if ( $I_L749_1207 >= $t_S20 ) exit
  806.                                                       enddo
  808.                                                       $I_L745_1249 = 1 + $I_L745_1249
  807.                                                    else
  807.                                                    endif
  807.                                                    if ( $I_L745_1249 >= $t_S21 ) exit
  807.                                                 enddo
  807.                                                 goto 60
  807.                                              else
  807.    60                                           continue
  811.                                                 if ( myid == 0 ) then
  812.                                                    t$426 = nfnmi
  812.                                                    t$606(1) = 0x100000000000000L
  812. !dir$ suppress t$426
  812.                                                    t$606(2) = int( loc( t$426 ), 8 )
  812.                                                    t$606(3) = 0
  812.                                                    t$606(4) = 0
  812.                                                    t$606(5) = 0
  812.                                                    t$606(7) = 0
  812.                                                    t$606(8) = 0
  812.                                                    t$605 = _close( t$606 )
  812.                                                 endif
  815.                                                 fb1 = 1.0
  816.                                                 fa = 0.0
  817.                                                 fb = 0.0
  818.                                                 dt = 1.0
  820.                                                 $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  820.                                                 !  use before definition cover $$_nms = 0
  820.                                                 !  use before definition cover $$_mnfirst_si = 0
  820.                                                 !  use before definition cover $$_mnlast_si = 0
  820.                                                 !  use before definition cover $$_mnrifirst = 0
  820.                                                 !  use before definition cover $$_mnrilast = 0
  820.                                                 !  use before definition cover $$_mnrifirst_si = 0
  820.                                                 !  use before definition cover $$_mnrilast_si = 0
  820.                                                 $$_myms_BASE = _alloc( 8 * _rsh( 63 + 32 * _zla( 0, t$21 ), 6 ) )
  820.                                                 $pvt_Abase_seg61_D0 = $$_myms_BASE
  820.                                                 $snt_T5 = _mt_start_code( 14, _mt_rw_list(...) )
  825.                                                 call threaddecompms( mymmax, $$_myms(1), $$_nms )
  826.                                                 t$607 = 2 * mymnmax
  826.                                                  _substr(t$608,1,5) = 'Nlnmi'
  826.                                                 ipa$153 = 1
  826.                                                 call threaddecomp( ipa$153, t$607, $$_mnrifirst, $$_mnrilast,  _substr(t$608,1,5) )
  827.                                                  _substr(t$609,1,5) = 'Nlnmi'
  827.                                                 ipa$155 = 1
  827.                                                 call threaddecomp( ipa$155, mnmax_si, $$_mnfirst_si, $$_mnlast_si,  _substr(t$609,1,5) )
  828.                                                 t$610 = 2 * mnmax_si
  828.                                                  _substr(t$611,1,5) = 'Nlnmi'
  828.                                                 ipa$157 = 1
  828.                                                 call threaddecomp( ipa$157, t$610, $$_mnrifirst_si, $$_mnrilast_si,  _substr(t$611,1,5) )
  832.                                                 $t_S69 = niter
  832.                                                 if ( niter > 0 ) then
  882.                                                    $SC_g_I59 = max( 0, ( -1 + ig ) )
  882.                                                    $SC_per_I58 = max( 0, ( -1 + iper ) )
  882.                                                    $SC_nas_I19 = nas%dim_2%SM
  882.                                                    $SC_nas_I18 = nas%dim_2%EX
  882.                                                    $SC_nas_I17 = nas%dim_1%EX
  882.                                                    $SC_jg_I13 = jg%dim_2%SM
  882.                                                    $SC_jg_I12 = jg%dim_2%EX
  882.                                                    $SC_jg_I11 = jg%dim_1%EX
  882.                                                    $SC_indg_I25 = indg%dim_2%SM
  882.                                                    $SC_indg_I24 = indg%dim_2%EX
  882.                                                    $SC_indg_I23 = indg%dim_1%EX
  882.                                                    $SC_indper_I22 = indper%dim_2%SM
  882.                                                    $SC_indper_I21 = indper%dim_2%EX
  882.                                                    $SC_indper_I20 = indper%dim_1%EX
  878.                                                    $SC_qgenp_I57 = qgenp%dim_2%SM
  878.                                                    $SC_qgenp_I56 = qgenp%dim_2%EX
  878.                                                    $SC_qgenp_I55 = qgenp%dim_1%EX
  860.                                                    $SC_qgenp_si_I42 = qgenp_si%dim_2%SM
  860.                                                    $SC_qgenp_si_I41 = qgenp_si%dim_2%EX
  860.                                                    $SC_qgenp_si_I40 = qgenp_si%dim_1%EX
  832.                                                    $I_L832_1282 = 0
  832.                                                    do
  836.                                                       ipa$159 = .false.
  836.                                                       ipa$160 = .false.
  836.                                                       ipa$161 = 0
  836.                                                       ipa$163 = 0
  836.                                                       call timestep( fb1, fa, fb, slagr, nlnminit, ipa$159, ipa$160, dt, ipa$161, ifday, tod, idatec(1), ipa$163 )
  840.                                                       if ( diabatic ) then
  841.                                                          if ( $$_mnrilast + -$$_mnrifirst >= 0 ) then
  842.                                                             $SC_qtmpt_I114 = qtmpt%dim_2%EX
  841.                                                             $I_L841_1209 = 0
  841.                                                             do
  842.                                                                $F_A33 = $SC_qtmpt_I114
  842.                                                                if ( $SC_qtmpt_I114 > 0 ) then
  842.                                                                   $SC_qdiaten_I115 = qdiaten%dim_1%EX
  842.                                                                   $I_L842_1181 = 0
  842. !dir$ ivdep
  842.                                                                   do
  842.                                                                      (qtmpt%base_addr)($$_mnrifirst + $I_L841_1209, qtmpt%dim_2%LB + $I_L842_1181, 0) = (qtmpt%base_addr)($$_mnrifirst + $I_L841_1209, qtmpt%dim_2%LB + $I_L842_1181, 0) + (qdiaten%base_addr)($$_mnrifirst + $I_L841_1209, qdiaten%dim_2%LB + $I_L842_1181, 0)
  842.                                                                      $I_L842_1181 = 1 + $I_L842_1181
  842.                                                                      if ( $I_L842_1181 >= $F_A33 ) exit
  842.                                                                   enddo
  842.                                                                endif
  843.                                                                $I_L841_1209 = 1 + $I_L841_1209
  841.                                                                if ( $I_L841_1209 >= $$_mnrilast + -$$_mnrifirst + 1 ) exit
  841.                                                             enddo
  841.                                                          endif
  841.                                                       endif
  848.                                                       _mt_barrier( 2, _mt_rw_list(...) )
  849.                                                       $snt_T1 = _mt_single( 3, _mt_rw_list(...) )
  850.                                                       call spectosi( (inibs_si%base_addr)(inibs_si%dim_1%LB, 0), (inibr_si%base_addr)(inibr_si%dim_1%LB, 0), nsends_si, nrecs_si, (mysends_si%base_addr)(mysends_si%dim_1%LB, 0), (myrecs_si%base_addr)(myrecs_si%dim_1%LB, 0), (maps_si%base_addr)(maps_si%dim_1%LB, 0), (mapr_si%base_addr)(mapr_si%dim_1%LB, 0), kmax, kmaxloc, (nlevperg_four%base_addr)(nlevperg_four%dim_1%LB, 0), (qtmpt%base_addr)(qtmpt%dim_1%LB, qtmpt%dim_2%LB, 0), (qdivt%base_addr)(qdivt%dim_1%LB, qdivt%dim_2%LB, 0), (qtmpt_si%base_addr)(qtmpt_si%dim_1%LB, qtmpt_si%dim_2%LB, 0), (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0), (qrott%base_addr)(qrott%dim_1%LB, qrott%dim_2%LB, 0), (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0), (qlnpt%base_addr)(qlnpt%dim_1%LB, 0), (qlnpt_si%base_addr)(qlnpt_si%dim_1%LB, 0) )
  853.                                                       $snt_T1 = _mt_endsingle( 3, _mt_rw_list(...), $snt_T1 )
  857.                                                       if ( kmax > 0 ) then
  859.                                                          if ( $$_mnrilast_si + -$$_mnrifirst_si >= 0 ) then
  860.                                                             $SC_qlnpt_si_I116 = qlnpt_si%dim_1%EX
  857.                                                             $I_L857_1251 = 0
  857.                                                             do
  858.                                                                $$_tor = 287.05000000000001 * to(1 + $I_L857_1251)
  860.                                                                $SC_qlnpt_si_I117 = qlnpt_si%dim_1%LB
  859.                                                                $I_L859_1127 = 0
  859. !dir$ ivdep
  859.                                                                do
  860.                                                                   (qgenp_si%base_addr)($$_mnrifirst_si + $I_L859_1127, 1 + $I_L857_1251, 0) = $$_tor * (qlnpt_si%base_addr)($$_mnrifirst_si + $I_L859_1127, 0)
  861.                                                                   $I_L859_1127 = 1 + $I_L859_1127
  859.                                                                   if ( $I_L859_1127 >= $$_mnrilast_si + -$$_mnrifirst_si + 1 ) exit
  859.                                                                enddo
  863.                                                                $SC_hm_I118 = hm%dim_1%EX
  862.                                                                $I_L862_1211 = 0
  862. !dir$ blocking_size( 0, 0 )
  862.                                                                do
  863.                                                                   $SCA_hm_I96 = (hm%base_addr)(1 + $I_L857_1251, 1 + $I_L862_1211, 0)
  864.                                                                   $SC_qtmpt_si_I119 = qtmpt_si%dim_1%EX
  863.                                                                   $I_L863_1129 = 0
  863. !dir$ ivdep
  863. !dir$ blocking_size( 0, 0 )
  863.                                                                   do
  864.                                                                      (qgenp_si%base_addr)($$_mnrifirst_si + $I_L863_1129, 1 + $I_L857_1251, 0) = (qgenp_si%base_addr)($$_mnrifirst_si + $I_L863_1129, 1 + $I_L857_1251, 0) + (qtmpt_si%base_addr)($$_mnrifirst_si + $I_L863_1129, 1 + $I_L862_1211, 0) * $SCA_hm_I96
  865.                                                                      $I_L863_1129 = 1 + $I_L863_1129
  863.                                                                      if ( $I_L863_1129 >= $$_mnrilast_si + -$$_mnrifirst_si + 1 ) exit
  863.                                                                   enddo
  866.                                                                   $I_L862_1211 = 1 + $I_L862_1211
  865.                                                                   if ( $I_L862_1211 >= kmax ) exit
  865.                                                                enddo
  867.                                                                $I_L857_1251 = 1 + $I_L857_1251
  866.                                                                if ( $I_L857_1251 >= kmax ) exit
  866.                                                             enddo
  866.                                                          endif
  866.                                                       endif
  868.                                                       _mt_barrier( 4, _mt_rw_list(...) )
  869.                                                       $$ipa_230 = loc( (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) )
  869.                                                       $$_f = _copyin( (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) )
  869.                                                       $$ipa_232 = loc( eigg(1, 1) )
  869.                                                       $$_eigg = _copyin( eigg(1, 1) )
  869.                                                       $$ipa_234 = loc( eiggt(1, 1) )
  869.                                                       $$_eiggt = _copyin( eiggt(1, 1) )
  869.                                                       t$76 = mnmax_si
  869.                                                       t$75 = kmax
  869.                                                       t$194 = max( 0, mnmax_si )
  869.                                                       t$195 = 2 * max( 0, mnmax_si )
  869.                                                       t$196 = max( 0, kmax )
  869.                                                       t$197 = max( 0, kmax ) * max( 0, mnmax_si ) * 2
  869.                                                       t$198 = max( 0, kmax )
  869.                                                       t$199 = max( 0, kmax ) * max( 0, kmax )
  869.                                                       t$200 = 2 * max( 0, kmax )
  869.                                                       t$203 = 16 * max( 0, kmax )
  869.                                                       t$201 = int( _alloc( 16 * max( 0, kmax ) ), 8 )
  869.                                                       t$202 = t$201
  869.                                                       if ( $$_mnlast_si + -$$_mnfirst_si >= 0 ) then
  869.                                                          if ( mods > 0 ) then
  869.                                                             if ( kmax > 0 ) then
  869.                                                                $I_L869_1253 = 0
  869.                                                                do
  869.                                                                   $I_L869_1213 = 0
  869. !dir$ ivdep
  869.                                                                   do
  869.                                                                      $$_sum1 = 0.0
  869.                                                                      $$_sum2 = 0.0
  869.                                                                      $I_L869_1131 = 0
  869. !dir$ unroll 4
  869.                                                                      do
  869.                                                                         $$_sum1 = $$_sum1 + $$_eiggt(1 + $I_L869_1131, 1 + $I_L869_1213) * $$_f(1, $$_mnfirst_si + $I_L869_1253, 1 + $I_L869_1131)
  869.                                                                         $$_sum2 = $$_sum2 + $$_eiggt(1 + $I_L869_1131, 1 + $I_L869_1213) * $$_f(2, $$_mnfirst_si + $I_L869_1253, 1 + $I_L869_1131)
  869.                                                                         $I_L869_1131 = 1 + $I_L869_1131
  869.                                                                         if ( $I_L869_1131 >= kmax ) exit
  869.                                                                      enddo
  869.                                                                      col(1, 1 + $I_L869_1213) = dotpro(1 + $I_L869_1213) * $$_sum1
  869.                                                                      col(2, 1 + $I_L869_1213) = dotpro(1 + $I_L869_1213) * $$_sum2
  869.                                                                      $I_L869_1213 = 1 + $I_L869_1213
  869.                                                                      if ( $I_L869_1213 >= mods ) exit
  869.                                                                   enddo
  869.                                                                   $I_L869_1133 = 0
  869. !dir$ ivdep
  869.                                                                   do
  869.                                                                      $$_f(1, $$_mnfirst_si + $I_L869_1253, 1 + $I_L869_1133) = col(1, 1 + $I_L869_1133)
  869.                                                                      $$_f(2, $$_mnfirst_si + $I_L869_1253, 1 + $I_L869_1133) = col(2, 1 + $I_L869_1133)
  869.                                                                      $I_L869_1133 = 1 + $I_L869_1133
  869.                                                                      if ( $I_L869_1133 >= mods ) exit
  869.                                                                   enddo
  869.                                                                   $I_L869_1253 = 1 + $I_L869_1253
  869.                                                                   if ( $I_L869_1253 >= $$_mnlast_si + -$$_mnfirst_si + 1 ) exit
  869.                                                                enddo
  869.                                                             else
  869.                                                                $I_L869_1268 = 0
  869.                                                                do
  869.                                                                   $I_L869_1237 = 0
  869. !dir$ blocking_size( 0, 0 )
  869.                                                                   do
  869.                                                                      $I_L869_1175 = 0
  869. !dir$ ivdep
  869. !dir$ blocking_size( 256, 256 )
  869.                                                                      do
  869.                                                                         col(1, $I_L869_1175 + 256 * $I_L869_1268 + 1) = 0.0
  869.                                                                         col(2, $I_L869_1175 + 256 * $I_L869_1268 + 1) = 0.0
  869.                                                                         $$_f(1, $$_mnfirst_si + $I_L869_1237, $I_L869_1175 + 256 * $I_L869_1268 + 1) = 0.0
  869.                                                                         $$_f(2, $$_mnfirst_si + $I_L869_1237, $I_L869_1175 + 256 * $I_L869_1268 + 1) = 0.0
  869.                                                                         $I_L869_1175 = 1 + $I_L869_1175
  869.                                                                         if ( $I_L869_1175 >= min( mods, 256 + 256 * $I_L869_1268 ) + -256 * $I_L869_1268 ) exit
  869.                                                                      enddo
  869.                                                                      $I_L869_1237 = 1 + $I_L869_1237
  869.                                                                      if ( $I_L869_1237 >= $$_mnlast_si + -$$_mnfirst_si + 1 ) exit
  869.                                                                   enddo
  869.                                                                   $I_L869_1268 = 1 + $I_L869_1268
  869.                                                                   if ( $I_L869_1268 >= 1 + max( 0, -1 + _rsh( 255 + mods, 8 ) ) ) exit
  869.                                                                enddo
  869.                                                             endif
  869.                                                          endif
  869.                                                       endif
  869.                                                       _free( t$201 )
  869.                                                       eiggt(1, 1) = _copyout( $$_eiggt )
  869.                                                       eigg(1, 1) = _copyout( $$_eigg )
  869.                                                       (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) = _copyout( $$_f )
  870.                                                       $$ipa_251 = loc( (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) )
  870.                                                       $$_f = _copyin( (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) )
  870.                                                       $$ipa_253 = loc( eigg(1, 1) )
  870.                                                       $$_eigg = _copyin( eigg(1, 1) )
  870.                                                       $$ipa_255 = loc( eiggt(1, 1) )
  870.                                                       $$_eiggt = _copyin( eiggt(1, 1) )
  870.                                                       t$76 = mnmax_si
  870.                                                       t$75 = kmax
  870.                                                       t$194 = max( 0, mnmax_si )
  870.                                                       t$195 = 2 * max( 0, mnmax_si )
  870.                                                       t$196 = max( 0, kmax )
  870.                                                       t$197 = max( 0, kmax ) * max( 0, mnmax_si ) * 2
  870.                                                       t$198 = max( 0, kmax )
  870.                                                       t$199 = max( 0, kmax ) * max( 0, kmax )
  870.                                                       t$200 = 2 * max( 0, kmax )
  870.                                                       t$203 = 16 * max( 0, kmax )
  870.                                                       t$201 = int( _alloc( 16 * max( 0, kmax ) ), 8 )
  870.                                                       t$202 = t$201
  870.                                                       if ( $$_mnlast_si + -$$_mnfirst_si >= 0 ) then
  870.                                                          if ( mods > 0 ) then
  870.                                                             if ( kmax > 0 ) then
  870.                                                                $I_L870_1255 = 0
  870.                                                                do
  870.                                                                   $I_L870_1215 = 0
  870. !dir$ ivdep
  870.                                                                   do
  870.                                                                      $$_sum1 = 0.0
  870.                                                                      $$_sum2 = 0.0
  870.                                                                      $I_L870_1135 = 0
  870. !dir$ unroll 4
  870.                                                                      do
  870.                                                                         $$_sum1 = $$_sum1 + $$_eiggt(1 + $I_L870_1135, 1 + $I_L870_1215) * $$_f(1, $$_mnfirst_si + $I_L870_1255, 1 + $I_L870_1135)
  870.                                                                         $$_sum2 = $$_sum2 + $$_eiggt(1 + $I_L870_1135, 1 + $I_L870_1215) * $$_f(2, $$_mnfirst_si + $I_L870_1255, 1 + $I_L870_1135)
  870.                                                                         $I_L870_1135 = 1 + $I_L870_1135
  870.                                                                         if ( $I_L870_1135 >= kmax ) exit
  870.                                                                      enddo
  870.                                                                      col(1, 1 + $I_L870_1215) = dotpro(1 + $I_L870_1215) * $$_sum1
  870.                                                                      col(2, 1 + $I_L870_1215) = dotpro(1 + $I_L870_1215) * $$_sum2
  870.                                                                      $I_L870_1215 = 1 + $I_L870_1215
  870.                                                                      if ( $I_L870_1215 >= mods ) exit
  870.                                                                   enddo
  870.                                                                   $I_L870_1137 = 0
  870. !dir$ ivdep
  870.                                                                   do
  870.                                                                      $$_f(1, $$_mnfirst_si + $I_L870_1255, 1 + $I_L870_1137) = col(1, 1 + $I_L870_1137)
  870.                                                                      $$_f(2, $$_mnfirst_si + $I_L870_1255, 1 + $I_L870_1137) = col(2, 1 + $I_L870_1137)
  870.                                                                      $I_L870_1137 = 1 + $I_L870_1137
  870.                                                                      if ( $I_L870_1137 >= mods ) exit
  870.                                                                   enddo
  870.                                                                   $I_L870_1255 = 1 + $I_L870_1255
  870.                                                                   if ( $I_L870_1255 >= $$_mnlast_si + -$$_mnfirst_si + 1 ) exit
  870.                                                                enddo
  870.                                                             else
  870.                                                                $I_L870_1270 = 0
  870.                                                                do
  870.                                                                   $I_L870_1239 = 0
  870. !dir$ blocking_size( 0, 0 )
  870.                                                                   do
  870.                                                                      $I_L870_1177 = 0
  870. !dir$ ivdep
  870. !dir$ blocking_size( 256, 256 )
  870.                                                                      do
  870.                                                                         col(1, $I_L870_1177 + 256 * $I_L870_1270 + 1) = 0.0
  870.                                                                         col(2, $I_L870_1177 + 256 * $I_L870_1270 + 1) = 0.0
  870.                                                                         $$_f(1, $$_mnfirst_si + $I_L870_1239, $I_L870_1177 + 256 * $I_L870_1270 + 1) = 0.0
  870.                                                                         $$_f(2, $$_mnfirst_si + $I_L870_1239, $I_L870_1177 + 256 * $I_L870_1270 + 1) = 0.0
  870.                                                                         $I_L870_1177 = 1 + $I_L870_1177
  870.                                                                         if ( $I_L870_1177 >= min( mods, 256 + 256 * $I_L870_1270 ) + -256 * $I_L870_1270 ) exit
  870.                                                                      enddo
  870.                                                                      $I_L870_1239 = 1 + $I_L870_1239
  870.                                                                      if ( $I_L870_1239 >= $$_mnlast_si + -$$_mnfirst_si + 1 ) exit
  870.                                                                   enddo
  870.                                                                   $I_L870_1270 = 1 + $I_L870_1270
  870.                                                                   if ( $I_L870_1270 >= 1 + max( 0, -1 + _rsh( 255 + mods, 8 ) ) ) exit
  870.                                                                enddo
  870.                                                             endif
  870.                                                          endif
  870.                                                       endif
  870.                                                       _free( t$201 )
  870.                                                       eiggt(1, 1) = _copyout( $$_eiggt )
  870.                                                       eigg(1, 1) = _copyout( $$_eigg )
  870.                                                       (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) = _copyout( $$_f )
  871.                                                       $$ipa_272 = loc( (qgenp_si%base_addr)(1, 1, 0) )
  871.                                                       $$_f = _copyin( (qgenp_si%base_addr)(1, 1, 0) )
  871.                                                       $$ipa_274 = loc( eigg(1, 1) )
  871.                                                       $$_eigg = _copyin( eigg(1, 1) )
  871.                                                       $$ipa_276 = loc( eiggt(1, 1) )
  871.                                                       $$_eiggt = _copyin( eiggt(1, 1) )
  871.                                                       t$76 = mnmax_si
  871.                                                       t$75 = kmax
  871.                                                       t$194 = max( 0, mnmax_si )
  871.                                                       t$195 = 2 * max( 0, mnmax_si )
  871.                                                       t$196 = max( 0, kmax )
  871.                                                       t$197 = max( 0, kmax ) * max( 0, mnmax_si ) * 2
  871.                                                       t$198 = max( 0, kmax )
  871.                                                       t$199 = max( 0, kmax ) * max( 0, kmax )
  871.                                                       t$200 = 2 * max( 0, kmax )
  871.                                                       t$203 = 16 * max( 0, kmax )
  871.                                                       t$201 = int( _alloc( 16 * max( 0, kmax ) ), 8 )
  871.                                                       t$202 = t$201
  871.                                                       if ( $$_mnlast_si + -$$_mnfirst_si >= 0 ) then
  871.                                                          if ( mods > 0 ) then
  871.                                                             if ( kmax > 0 ) then
  871.                                                                $I_L871_1257 = 0
  871.                                                                do
  871.                                                                   $I_L871_1217 = 0
  871. !dir$ ivdep
  871.                                                                   do
  871.                                                                      $$_sum1 = 0.0
  871.                                                                      $$_sum2 = 0.0
  871.                                                                      $I_L871_1139 = 0
  871. !dir$ unroll 4
  871.                                                                      do
  871.                                                                         $$_sum1 = $$_sum1 + $$_eiggt(1 + $I_L871_1139, 1 + $I_L871_1217) * $$_f(1, $$_mnfirst_si + $I_L871_1257, 1 + $I_L871_1139)
  871.                                                                         $$_sum2 = $$_sum2 + $$_eiggt(1 + $I_L871_1139, 1 + $I_L871_1217) * $$_f(2, $$_mnfirst_si + $I_L871_1257, 1 + $I_L871_1139)
  871.                                                                         $I_L871_1139 = 1 + $I_L871_1139
  871.                                                                         if ( $I_L871_1139 >= kmax ) exit
  871.                                                                      enddo
  871.                                                                      col(1, 1 + $I_L871_1217) = dotpro(1 + $I_L871_1217) * $$_sum1
  871.                                                                      col(2, 1 + $I_L871_1217) = dotpro(1 + $I_L871_1217) * $$_sum2
  871.                                                                      $I_L871_1217 = 1 + $I_L871_1217
  871.                                                                      if ( $I_L871_1217 >= mods ) exit
  871.                                                                   enddo
  871.                                                                   $I_L871_1141 = 0
  871. !dir$ ivdep
  871.                                                                   do
  871.                                                                      $$_f(1, $$_mnfirst_si + $I_L871_1257, 1 + $I_L871_1141) = col(1, 1 + $I_L871_1141)
  871.                                                                      $$_f(2, $$_mnfirst_si + $I_L871_1257, 1 + $I_L871_1141) = col(2, 1 + $I_L871_1141)
  871.                                                                      $I_L871_1141 = 1 + $I_L871_1141
  871.                                                                      if ( $I_L871_1141 >= mods ) exit
  871.                                                                   enddo
  871.                                                                   $I_L871_1257 = 1 + $I_L871_1257
  871.                                                                   if ( $I_L871_1257 >= $$_mnlast_si + -$$_mnfirst_si + 1 ) exit
  871.                                                                enddo
  871.                                                             else
  871.                                                                $I_L871_1272 = 0
  871.                                                                do
  871.                                                                   $I_L871_1241 = 0
  871. !dir$ blocking_size( 0, 0 )
  871.                                                                   do
  871.                                                                      $I_L871_1179 = 0
  871. !dir$ ivdep
  871. !dir$ blocking_size( 256, 256 )
  871.                                                                      do
  871.                                                                         col(1, $I_L871_1179 + 256 * $I_L871_1272 + 1) = 0.0
  871.                                                                         col(2, $I_L871_1179 + 256 * $I_L871_1272 + 1) = 0.0
  871.                                                                         $$_f(1, $$_mnfirst_si + $I_L871_1241, $I_L871_1179 + 256 * $I_L871_1272 + 1) = 0.0
  871.                                                                         $$_f(2, $$_mnfirst_si + $I_L871_1241, $I_L871_1179 + 256 * $I_L871_1272 + 1) = 0.0
  871.                                                                         $I_L871_1179 = 1 + $I_L871_1179
  871.                                                                         if ( $I_L871_1179 >= min( mods, 256 + 256 * $I_L871_1272 ) + -256 * $I_L871_1272 ) exit
  871.                                                                      enddo
  871.                                                                      $I_L871_1241 = 1 + $I_L871_1241
  871.                                                                      if ( $I_L871_1241 >= $$_mnlast_si + -$$_mnfirst_si + 1 ) exit
  871.                                                                   enddo
  871.                                                                   $I_L871_1272 = 1 + $I_L871_1272
  871.                                                                   if ( $I_L871_1272 >= 1 + max( 0, -1 + _rsh( 255 + mods, 8 ) ) ) exit
  871.                                                                enddo
  871.                                                             endif
  871.                                                          endif
  871.                                                       endif
  871.                                                       _free( t$201 )
  871.                                                       eiggt(1, 1) = _copyout( $$_eiggt )
  871.                                                       eigg(1, 1) = _copyout( $$_eigg )
  871.                                                       (qgenp_si%base_addr)(1, 1, 0) = _copyout( $$_f )
  872.                                                       $$ipa_293 = loc( (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) )
  872.                                                       $$_vord = _copyin( (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) )
  872.                                                       $$ipa_295 = loc( (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) )
  872.                                                       $$_divd = _copyin( (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) )
  872.                                                       $$ipa_297 = loc( (qgenp_si%base_addr)(1, 1, 0) )
  872.                                                       $$_comd = _copyin( (qgenp_si%base_addr)(1, 1, 0) )
  872.                                                       t$77 = mnmax_si
  872.                                                       t$78 = kmax
  872.                                                       t$204 = max( 0, mnmax_si )
  872.                                                       t$205 = 2 * max( 0, mnmax_si )
  872.                                                       t$206 = max( 0, kmax )
  872.                                                       t$207 = max( 0, kmax ) * max( 0, mnmax_si ) * 2
  872.                                                       t$210 = 8 * max( 0, mnmax_si )
  872.                                                       t$208 = int( _alloc( 8 * max( 0, mnmax_si ) ), 8 )
  872.                                                       t$209 = t$208
  872.                                                       if ( myid /= 0 ) then
  872.                                                          goto 70
  872.                                                       else if ( $$_mnfirst_si == 1 ) then
  872.                                                          w(1) = 0.0
  872.                                                          $$_m1 = 2
  872.                                                       else
  872.    70                                                    continue
  872.                                                          $$_m1 = $$_mnfirst_si
  872.                                                       endif
  872.                                                       if ( $$_mnlast_si + -$$_m1 >= 0 ) then
  872.                                                          $SC_snnp1_si_I120 = snnp1_si%dim_1%EX
  872.                                                          $I_L872_1143 = 0
  872. !dir$ ivdep
  872.                                                          do
  872.                                                             w($$_m1 + $I_L872_1143) = _recip_sqrt( real( (snnp1_si%base_addr)(2 * $$_m1 + 2 * $I_L872_1143 + -1, 0), 8 ) )
  872.                                                             $I_L872_1143 = 1 + $I_L872_1143
  872.                                                             if ( $I_L872_1143 >= $$_mnlast_si + -$$_m1 + 1 ) exit
  872.                                                          enddo
  872.                                                       endif
  872.                                                       if ( mods > 0 ) then
  872.                                                          if ( $$_mnlast_si + -$$_mnfirst_si >= 0 ) then
  872.                                                             $I_L872_1219 = 0
  872.                                                             do
  872.                                                                $$_t = ( 1.5698587127158556e-7 * _recip_sqrt( gh(1 + $I_L872_1219) ) )
  872.                                                                $I_L872_1145 = 0
  872. !dir$ ivdep
  872.                                                                do
  872.                                                                   $$_vord(1, $$_mnfirst_si + $I_L872_1145, 1 + $I_L872_1219) = w($$_mnfirst_si + $I_L872_1145) * $$_vord(1, $$_mnfirst_si + $I_L872_1145, 1 + $I_L872_1219)
  872.                                                                   $$_vord(2, $$_mnfirst_si + $I_L872_1145, 1 + $I_L872_1219) = w($$_mnfirst_si + $I_L872_1145) * $$_vord(2, $$_mnfirst_si + $I_L872_1145, 1 + $I_L872_1219)
  872.                                                                   $$_divdr = -( w($$_mnfirst_si + $I_L872_1145) * $$_divd(2, $$_mnfirst_si + $I_L872_1145, 1 + $I_L872_1219) )
  872.                                                                   $$_divdi = w($$_mnfirst_si + $I_L872_1145) * $$_divd(1, $$_mnfirst_si + $I_L872_1145, 1 + $I_L872_1219)
  872.                                                                   $$_divd(1, $$_mnfirst_si + $I_L872_1145, 1 + $I_L872_1219) = $$_divdr
  872.                                                                   $$_divd(2, $$_mnfirst_si + $I_L872_1145, 1 + $I_L872_1219) = $$_divdi
  872.                                                                   $$_comd(1, $$_mnfirst_si + $I_L872_1145, 1 + $I_L872_1219) = $$_t * $$_comd(1, $$_mnfirst_si + $I_L872_1145, 1 + $I_L872_1219)
  872.                                                                   $$_comd(2, $$_mnfirst_si + $I_L872_1145, 1 + $I_L872_1219) = $$_t * $$_comd(2, $$_mnfirst_si + $I_L872_1145, 1 + $I_L872_1219)
  872.                                                                   $I_L872_1145 = 1 + $I_L872_1145
  872.                                                                   if ( $I_L872_1145 >= $$_mnlast_si + -$$_mnfirst_si + 1 ) exit
  872.                                                                enddo
  872.                                                                $I_L872_1219 = 1 + $I_L872_1219
  872.                                                                if ( $I_L872_1219 >= mods ) exit
  872.                                                             enddo
  872.                                                          endif
  872.                                                       endif
  872.                                                       _free( t$208 )
  872.                                                       (qgenp_si%base_addr)(1, 1, 0) = _copyout( $$_comd )
  872.                                                       (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) = _copyout( $$_divd )
  872.                                                       (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) = _copyout( $$_vord )
  873.                                                       _mt_barrier( 5, _mt_rw_list(...) )
  874.                                                       $snt_T2 = _mt_single( 6, _mt_rw_list(...) )
  878.                                                       ipa$306 = .false.
  878.                                                       call sitospec( (inibr_si%base_addr)(inibr_si%dim_1%LB, 0), (inibs_si%base_addr)(inibs_si%dim_1%LB, 0), nrecs_si, nsends_si, (myrecs_si%base_addr)(myrecs_si%dim_1%LB, 0), (mysends_si%base_addr)(mysends_si%dim_1%LB, 0), (mapr_si%base_addr)(mapr_si%dim_1%LB, 0), (maps_si%base_addr)(maps_si%dim_1%LB, 0), mods, modsloc, (nmodperg%base_addr)(nmodperg%dim_1%LB, 0), ipa$306, (qrott%base_addr)(qrott%dim_1%LB, qrott%dim_2%LB, 0), (qdivt%base_addr)(qdivt%dim_1%LB, qdivt%dim_2%LB, 0), (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0), (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0), (qgenp%base_addr)(1, 1, 0), (qgenp_si%base_addr)(1, 1, 0), 0, 0 )
  881.                                                       $snt_T2 = _mt_endsingle( 6, _mt_rw_list(...), $snt_T2 )
  882.                                                       call horiz1( (qrott%base_addr)(qrott%dim_1%LB, qrott%dim_2%LB, 0), (qdivt%base_addr)(qdivt%dim_1%LB, qdivt%dim_2%LB, 0), (qgenp%base_addr)(1, 1, 0), percut, (per%base_addr)(1, 0), (g%base_addr)(1, 0), (indper%base_addr)(1, 1, 0), (indg%base_addr)(1, 1, 0), (jg%base_addr)(1, 1, 0), (nas%base_addr)(1, 1, 0), $$_myms(1), $$_nms )
  887.                                                       _mt_barrier( 7, _mt_rw_list(...) )
  888.                                                       $snt_T3 = _mt_single( 8, _mt_rw_list(...) )
  889.                                                       call spectosi( (inibs_si%base_addr)(inibs_si%dim_1%LB, 0), (inibr_si%base_addr)(inibr_si%dim_1%LB, 0), nsends_si, nrecs_si, (mysends_si%base_addr)(mysends_si%dim_1%LB, 0), (myrecs_si%base_addr)(myrecs_si%dim_1%LB, 0), (maps_si%base_addr)(maps_si%dim_1%LB, 0), (mapr_si%base_addr)(mapr_si%dim_1%LB, 0), mods, modsloc, (nmodperg%base_addr)(nmodperg%dim_1%LB, 0), (qrott%base_addr)(qrott%dim_1%LB, qrott%dim_2%LB, 0), (qdivt%base_addr)(qdivt%dim_1%LB, qdivt%dim_2%LB, 0), (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0), (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0), (qgenp%base_addr)(1, 1, 0), (qgenp_si%base_addr)(1, 1, 0), 0, 0 )
  892.                                                       $snt_T3 = _mt_endsingle( 8, _mt_rw_list(...), $snt_T3 )
  893.                                                       $$ipa_473 = loc( (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) )
  893.                                                       $$_vord = _copyin( (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) )
  893.                                                       $$ipa_475 = loc( (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) )
  893.                                                       $$_divd = _copyin( (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) )
  893.                                                       $$ipa_477 = loc( (qgenp_si%base_addr)(1, 1, 0) )
  893.                                                       $$_comd = _copyin( (qgenp_si%base_addr)(1, 1, 0) )
  893.                                                       t$77 = mnmax_si
  893.                                                       t$78 = kmax
  893.                                                       t$204 = max( 0, mnmax_si )
  893.                                                       t$205 = 2 * max( 0, mnmax_si )
  893.                                                       t$206 = max( 0, kmax )
  893.                                                       t$207 = max( 0, kmax ) * max( 0, mnmax_si ) * 2
  893.                                                       t$210 = 8 * max( 0, mnmax_si )
  893.                                                       t$208 = int( _alloc( 8 * max( 0, mnmax_si ) ), 8 )
  893.                                                       t$209 = t$208
  893.                                                       if ( myid /= 0 ) then
  893.                                                          goto 80
  893.                                                       else if ( $$_mnfirst_si == 1 ) then
  893.                                                          w(1) = 0.0
  893.                                                          $$_m1 = 2
  893.                                                       else
  893.    80                                                    continue
  893.                                                          $$_m1 = $$_mnfirst_si
  893.                                                       endif
  893.                                                       if ( $$_mnlast_si + -$$_m1 >= 0 ) then
  893.                                                          $SC_snnp1_si_I120 = snnp1_si%dim_1%EX
  893.                                                          $I_L893_1147 = 0
  893. !dir$ ivdep
  893.                                                          do
  893.                                                             w($$_m1 + $I_L893_1147) = _sqrt( real( (snnp1_si%base_addr)(2 * $$_m1 + 2 * $I_L893_1147 + -1, 0), 8 ) )
  893.                                                             $I_L893_1147 = 1 + $I_L893_1147
  893.                                                             if ( $I_L893_1147 >= $$_mnlast_si + -$$_m1 + 1 ) exit
  893.                                                          enddo
  893.                                                       endif
  893.                                                       if ( mods > 0 ) then
  893.                                                          if ( $$_mnlast_si + -$$_mnfirst_si >= 0 ) then
  893.                                                             $I_L893_1221 = 0
  893.                                                             do
  893.                                                                $$_t = 6370000.0 * _sqrt( gh(1 + $I_L893_1221) )
  893.                                                                $I_L893_1149 = 0
  893. !dir$ ivdep
  893.                                                                do
  893.                                                                   $$_vord(1, $$_mnfirst_si + $I_L893_1149, 1 + $I_L893_1221) = w($$_mnfirst_si + $I_L893_1149) * $$_vord(1, $$_mnfirst_si + $I_L893_1149, 1 + $I_L893_1221)
  893.                                                                   $$_vord(2, $$_mnfirst_si + $I_L893_1149, 1 + $I_L893_1221) = w($$_mnfirst_si + $I_L893_1149) * $$_vord(2, $$_mnfirst_si + $I_L893_1149, 1 + $I_L893_1221)
  893.                                                                   $$_divdr = w($$_mnfirst_si + $I_L893_1149) * $$_divd(2, $$_mnfirst_si + $I_L893_1149, 1 + $I_L893_1221)
  893.                                                                   $$_divdi = -( w($$_mnfirst_si + $I_L893_1149) * $$_divd(1, $$_mnfirst_si + $I_L893_1149, 1 + $I_L893_1221) )
  893.                                                                   $$_divd(1, $$_mnfirst_si + $I_L893_1149, 1 + $I_L893_1221) = $$_divdr
  893.                                                                   $$_divd(2, $$_mnfirst_si + $I_L893_1149, 1 + $I_L893_1221) = $$_divdi
  893.                                                                   $$_comd(1, $$_mnfirst_si + $I_L893_1149, 1 + $I_L893_1221) = $$_t * $$_comd(1, $$_mnfirst_si + $I_L893_1149, 1 + $I_L893_1221)
  893.                                                                   $$_comd(2, $$_mnfirst_si + $I_L893_1149, 1 + $I_L893_1221) = $$_t * $$_comd(2, $$_mnfirst_si + $I_L893_1149, 1 + $I_L893_1221)
  893.                                                                   $I_L893_1149 = 1 + $I_L893_1149
  893.                                                                   if ( $I_L893_1149 >= $$_mnlast_si + -$$_mnfirst_si + 1 ) exit
  893.                                                                enddo
  893.                                                                $I_L893_1221 = 1 + $I_L893_1221
  893.                                                                if ( $I_L893_1221 >= mods ) exit
  893.                                                             enddo
  893.                                                          endif
  893.                                                       endif
  893.                                                       _free( t$208 )
  893.                                                       (qgenp_si%base_addr)(1, 1, 0) = _copyout( $$_comd )
  893.                                                       (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) = _copyout( $$_divd )
  893.                                                       (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) = _copyout( $$_vord )
  897.                                                       if ( $$_mnrilast_si + -$$_mnrifirst_si >= 0 ) then
  898.                                                          $SC_qlnpt_si_I116 = qlnpt_si%dim_1%EX
  897.                                                          $I_L897_1151 = 0
  897. !dir$ ivdep
  897.                                                          do
  898.                                                             (qlnpt_si%base_addr)($$_mnrifirst_si + $I_L897_1151, 0) = 0.0
  899.                                                             $I_L897_1151 = 1 + $I_L897_1151
  897.                                                             if ( $I_L897_1151 >= $$_mnrilast_si + -$$_mnrifirst_si + 1 ) exit
  897.                                                          enddo
  897.                                                       endif
  900.                                                       _mt_barrier( 9, _mt_rw_list(...) )
  901.                                                       if ( mods > 0 ) then
  903.                                                          if ( $$_mnrilast_si + -$$_mnrifirst_si >= 0 ) then
  904.                                                             $SC_qlnpt_si_I116 = qlnpt_si%dim_1%EX
  901.                                                             $I_L901_1223 = 0
  901.                                                             do
  902.                                                                $$_fcon = ( verin(1 + $I_L901_1223) * 1.0/gh(1 + $I_L901_1223) )
  904.                                                                $SC_qlnpt_si_I117 = qlnpt_si%dim_1%LB
  903.                                                                $I_L903_1153 = 0
  903. !dir$ ivdep
  903.                                                                do
  904.                                                                   (qlnpt_si%base_addr)($$_mnrifirst_si + $I_L903_1153, 0) = (qlnpt_si%base_addr)($$_mnrifirst_si + $I_L903_1153, 0) + -( $$_fcon * (qgenp_si%base_addr)($$_mnrifirst_si + $I_L903_1153, 1 + $I_L901_1223, 0) )
  905.                                                                   $I_L903_1153 = 1 + $I_L903_1153
  903.                                                                   if ( $I_L903_1153 >= $$_mnrilast_si + -$$_mnrifirst_si + 1 ) exit
  903.                                                                enddo
  906.                                                                $I_L901_1223 = 1 + $I_L901_1223
  905.                                                                if ( $I_L901_1223 >= mods ) exit
  905.                                                             enddo
  905.                                                          endif
  905.                                                       endif
  907.                                                       _mt_barrier( 10, _mt_rw_list(...) )
  908.                                                       $$ipa_494 = loc( (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) )
  908.                                                       $$_f = _copyin( (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) )
  908.                                                       $$ipa_496 = loc( eigg(1, 1) )
  908.                                                       $$_eigg = _copyin( eigg(1, 1) )
  908.                                                       $$ipa_498 = loc( eiggt(1, 1) )
  908.                                                       $$_eiggt = _copyin( eiggt(1, 1) )
  908.                                                       t$76 = mnmax_si
  908.                                                       t$75 = kmax
  908.                                                       t$194 = max( 0, mnmax_si )
  908.                                                       t$195 = 2 * max( 0, mnmax_si )
  908.                                                       t$196 = max( 0, kmax )
  908.                                                       t$197 = max( 0, kmax ) * max( 0, mnmax_si ) * 2
  908.                                                       t$198 = max( 0, kmax )
  908.                                                       t$199 = max( 0, kmax ) * max( 0, kmax )
  908.                                                       t$200 = 2 * max( 0, kmax )
  908.                                                       t$203 = 16 * max( 0, kmax )
  908.                                                       t$201 = int( _alloc( 16 * max( 0, kmax ) ), 8 )
  908.                                                       t$202 = t$201
  908.                                                       if ( $$_mnlast_si + -$$_mnfirst_si >= 0 ) then
  908.                                                          $I_L908_1259 = 0
  908.                                                          do
  908.                                                             if ( mods > 0 ) then
  908.                                                                $I_L908_1155 = 0
  908. !dir$ ivdep
  908.                                                                do
  908.                                                                   col(1, 1 + $I_L908_1155) = $$_f(1, $$_mnfirst_si + $I_L908_1259, 1 + $I_L908_1155)
  908.                                                                   col(2, 1 + $I_L908_1155) = $$_f(2, $$_mnfirst_si + $I_L908_1259, 1 + $I_L908_1155)
  908.                                                                   $I_L908_1155 = 1 + $I_L908_1155
  908.                                                                   if ( $I_L908_1155 >= mods ) exit
  908.                                                                enddo
  908.                                                             endif
  908.                                                             if ( kmax > 0 ) then
  908.                                                                if ( mods > 0 ) then
  908.                                                                   $I_L908_1231 = 0
  908. !dir$ ivdep
  908.                                                                   do
  908.                                                                      $$_f(1, $$_mnfirst_si + $I_L908_1259, 1 + $I_L908_1231) = 0.0
  908.                                                                      $$_f(2, $$_mnfirst_si + $I_L908_1259, 1 + $I_L908_1231) = 0.0
  908.                                                                      $SCA_f_I98 = $$_f(1, $$_mnfirst_si + $I_L908_1259, 1 + $I_L908_1231)
  908.                                                                      $SCA_f_I97 = 0.0
  908.                                                                      $I_L908_1191 = 0
  908. !dir$ unroll 4
  908.                                                                      do
  908.                                                                         $SCA_f_I98 = $SCA_f_I98 + $$_eigg(1 + $I_L908_1231, 1 + $I_L908_1191) * col(1, 1 + $I_L908_1191)
  908.                                                                         $SCA_f_I97 = $SCA_f_I97 + $$_eigg(1 + $I_L908_1231, 1 + $I_L908_1191) * col(2, 1 + $I_L908_1191)
  908.                                                                         $I_L908_1191 = 1 + $I_L908_1191
  908.                                                                         if ( $I_L908_1191 >= mods ) exit
  908.                                                                      enddo
  908.                                                                      $$_f(1, $$_mnfirst_si + $I_L908_1259, 1 + $I_L908_1231) = $SCA_f_I98
  908.                                                                      $$_f(2, $$_mnfirst_si + $I_L908_1259, 1 + $I_L908_1231) = $SCA_f_I97
  908.                                                                      $I_L908_1231 = 1 + $I_L908_1231
  908.                                                                      if ( $I_L908_1231 >= kmax ) exit
  908.                                                                   enddo
  908.                                                                else
  908.                                                                   $I_L908_1169 = 0
  908. !dir$ ivdep
  908.                                                                   do
  908.                                                                      $$_f(1, $$_mnfirst_si + $I_L908_1259, 1 + $I_L908_1169) = 0.0
  908.                                                                      $$_f(2, $$_mnfirst_si + $I_L908_1259, 1 + $I_L908_1169) = 0.0
  908.                                                                      $I_L908_1169 = 1 + $I_L908_1169
  908.                                                                      if ( $I_L908_1169 >= kmax ) exit
  908.                                                                   enddo
  908.                                                                endif
  908.                                                             endif
  908.                                                             $I_L908_1259 = 1 + $I_L908_1259
  908.                                                             if ( $I_L908_1259 >= $$_mnlast_si + -$$_mnfirst_si + 1 ) exit
  908.                                                          enddo
  908.                                                       endif
  908.                                                       _free( t$201 )
  908.                                                       eiggt(1, 1) = _copyout( $$_eiggt )
  908.                                                       eigg(1, 1) = _copyout( $$_eigg )
  908.                                                       (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) = _copyout( $$_f )
  909.                                                       $$ipa_515 = loc( (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) )
  909.                                                       $$_f = _copyin( (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) )
  909.                                                       $$ipa_517 = loc( eigg(1, 1) )
  909.                                                       $$_eigg = _copyin( eigg(1, 1) )
  909.                                                       $$ipa_519 = loc( eiggt(1, 1) )
  909.                                                       $$_eiggt = _copyin( eiggt(1, 1) )
  909.                                                       t$76 = mnmax_si
  909.                                                       t$75 = kmax
  909.                                                       t$194 = max( 0, mnmax_si )
  909.                                                       t$195 = 2 * max( 0, mnmax_si )
  909.                                                       t$196 = max( 0, kmax )
  909.                                                       t$197 = max( 0, kmax ) * max( 0, mnmax_si ) * 2
  909.                                                       t$198 = max( 0, kmax )
  909.                                                       t$199 = max( 0, kmax ) * max( 0, kmax )
  909.                                                       t$200 = 2 * max( 0, kmax )
  909.                                                       t$203 = 16 * max( 0, kmax )
  909.                                                       t$201 = int( _alloc( 16 * max( 0, kmax ) ), 8 )
  909.                                                       t$202 = t$201
  909.                                                       if ( $$_mnlast_si + -$$_mnfirst_si >= 0 ) then
  909.                                                          $I_L909_1261 = 0
  909.                                                          do
  909.                                                             if ( mods > 0 ) then
  909.                                                                $I_L909_1157 = 0
  909. !dir$ ivdep
  909.                                                                do
  909.                                                                   col(1, 1 + $I_L909_1157) = $$_f(1, $$_mnfirst_si + $I_L909_1261, 1 + $I_L909_1157)
  909.                                                                   col(2, 1 + $I_L909_1157) = $$_f(2, $$_mnfirst_si + $I_L909_1261, 1 + $I_L909_1157)
  909.                                                                   $I_L909_1157 = 1 + $I_L909_1157
  909.                                                                   if ( $I_L909_1157 >= mods ) exit
  909.                                                                enddo
  909.                                                             endif
  909.                                                             if ( kmax > 0 ) then
  909.                                                                if ( mods > 0 ) then
  909.                                                                   $I_L909_1233 = 0
  909. !dir$ ivdep
  909.                                                                   do
  909.                                                                      $$_f(1, $$_mnfirst_si + $I_L909_1261, 1 + $I_L909_1233) = 0.0
  909.                                                                      $$_f(2, $$_mnfirst_si + $I_L909_1261, 1 + $I_L909_1233) = 0.0
  909.                                                                      $SCA_f_I100 = $$_f(1, $$_mnfirst_si + $I_L909_1261, 1 + $I_L909_1233)
  909.                                                                      $SCA_f_I99 = 0.0
  909.                                                                      $I_L909_1193 = 0
  909. !dir$ unroll 4
  909.                                                                      do
  909.                                                                         $SCA_f_I100 = $SCA_f_I100 + $$_eigg(1 + $I_L909_1233, 1 + $I_L909_1193) * col(1, 1 + $I_L909_1193)
  909.                                                                         $SCA_f_I99 = $SCA_f_I99 + $$_eigg(1 + $I_L909_1233, 1 + $I_L909_1193) * col(2, 1 + $I_L909_1193)
  909.                                                                         $I_L909_1193 = 1 + $I_L909_1193
  909.                                                                         if ( $I_L909_1193 >= mods ) exit
  909.                                                                      enddo
  909.                                                                      $$_f(1, $$_mnfirst_si + $I_L909_1261, 1 + $I_L909_1233) = $SCA_f_I100
  909.                                                                      $$_f(2, $$_mnfirst_si + $I_L909_1261, 1 + $I_L909_1233) = $SCA_f_I99
  909.                                                                      $I_L909_1233 = 1 + $I_L909_1233
  909.                                                                      if ( $I_L909_1233 >= kmax ) exit
  909.                                                                   enddo
  909.                                                                else
  909.                                                                   $I_L909_1171 = 0
  909. !dir$ ivdep
  909.                                                                   do
  909.                                                                      $$_f(1, $$_mnfirst_si + $I_L909_1261, 1 + $I_L909_1171) = 0.0
  909.                                                                      $$_f(2, $$_mnfirst_si + $I_L909_1261, 1 + $I_L909_1171) = 0.0
  909.                                                                      $I_L909_1171 = 1 + $I_L909_1171
  909.                                                                      if ( $I_L909_1171 >= kmax ) exit
  909.                                                                   enddo
  909.                                                                endif
  909.                                                             endif
  909.                                                             $I_L909_1261 = 1 + $I_L909_1261
  909.                                                             if ( $I_L909_1261 >= $$_mnlast_si + -$$_mnfirst_si + 1 ) exit
  909.                                                          enddo
  909.                                                       endif
  909.                                                       _free( t$201 )
  909.                                                       eiggt(1, 1) = _copyout( $$_eiggt )
  909.                                                       eigg(1, 1) = _copyout( $$_eigg )
  909.                                                       (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) = _copyout( $$_f )
  910.                                                       $$ipa_536 = loc( (qgenp_si%base_addr)(1, 1, 0) )
  910.                                                       $$_f = _copyin( (qgenp_si%base_addr)(1, 1, 0) )
  910.                                                       $$ipa_538 = loc( eigg(1, 1) )
  910.                                                       $$_eigg = _copyin( eigg(1, 1) )
  910.                                                       $$ipa_540 = loc( eiggt(1, 1) )
  910.                                                       $$_eiggt = _copyin( eiggt(1, 1) )
  910.                                                       t$76 = mnmax_si
  910.                                                       t$75 = kmax
  910.                                                       t$194 = max( 0, mnmax_si )
  910.                                                       t$195 = 2 * max( 0, mnmax_si )
  910.                                                       t$196 = max( 0, kmax )
  910.                                                       t$197 = max( 0, kmax ) * max( 0, mnmax_si ) * 2
  910.                                                       t$198 = max( 0, kmax )
  910.                                                       t$199 = max( 0, kmax ) * max( 0, kmax )
  910.                                                       t$200 = 2 * max( 0, kmax )
  910.                                                       t$203 = 16 * max( 0, kmax )
  910.                                                       t$201 = int( _alloc( 16 * max( 0, kmax ) ), 8 )
  910.                                                       t$202 = t$201
  910.                                                       if ( $$_mnlast_si + -$$_mnfirst_si >= 0 ) then
  910.                                                          $I_L910_1263 = 0
  910.                                                          do
  910.                                                             if ( mods > 0 ) then
  910.                                                                $I_L910_1159 = 0
  910. !dir$ ivdep
  910.                                                                do
  910.                                                                   col(1, 1 + $I_L910_1159) = $$_f(1, $$_mnfirst_si + $I_L910_1263, 1 + $I_L910_1159)
  910.                                                                   col(2, 1 + $I_L910_1159) = $$_f(2, $$_mnfirst_si + $I_L910_1263, 1 + $I_L910_1159)
  910.                                                                   $I_L910_1159 = 1 + $I_L910_1159
  910.                                                                   if ( $I_L910_1159 >= mods ) exit
  910.                                                                enddo
  910.                                                             endif
  910.                                                             if ( kmax > 0 ) then
  910.                                                                if ( mods > 0 ) then
  910.                                                                   $I_L910_1235 = 0
  910. !dir$ ivdep
  910.                                                                   do
  910.                                                                      $$_f(1, $$_mnfirst_si + $I_L910_1263, 1 + $I_L910_1235) = 0.0
  910.                                                                      $$_f(2, $$_mnfirst_si + $I_L910_1263, 1 + $I_L910_1235) = 0.0
  910.                                                                      $SCA_f_I102 = $$_f(1, $$_mnfirst_si + $I_L910_1263, 1 + $I_L910_1235)
  910.                                                                      $SCA_f_I101 = 0.0
  910.                                                                      $I_L910_1195 = 0
  910. !dir$ unroll 4
  910.                                                                      do
  910.                                                                         $SCA_f_I102 = $SCA_f_I102 + $$_eigg(1 + $I_L910_1235, 1 + $I_L910_1195) * col(1, 1 + $I_L910_1195)
  910.                                                                         $SCA_f_I101 = $SCA_f_I101 + $$_eigg(1 + $I_L910_1235, 1 + $I_L910_1195) * col(2, 1 + $I_L910_1195)
  910.                                                                         $I_L910_1195 = 1 + $I_L910_1195
  910.                                                                         if ( $I_L910_1195 >= mods ) exit
  910.                                                                      enddo
  910.                                                                      $$_f(1, $$_mnfirst_si + $I_L910_1263, 1 + $I_L910_1235) = $SCA_f_I102
  910.                                                                      $$_f(2, $$_mnfirst_si + $I_L910_1263, 1 + $I_L910_1235) = $SCA_f_I101
  910.                                                                      $I_L910_1235 = 1 + $I_L910_1235
  910.                                                                      if ( $I_L910_1235 >= kmax ) exit
  910.                                                                   enddo
  910.                                                                else
  910.                                                                   $I_L910_1173 = 0
  910. !dir$ ivdep
  910.                                                                   do
  910.                                                                      $$_f(1, $$_mnfirst_si + $I_L910_1263, 1 + $I_L910_1173) = 0.0
  910.                                                                      $$_f(2, $$_mnfirst_si + $I_L910_1263, 1 + $I_L910_1173) = 0.0
  910.                                                                      $I_L910_1173 = 1 + $I_L910_1173
  910.                                                                      if ( $I_L910_1173 >= kmax ) exit
  910.                                                                   enddo
  910.                                                                endif
  910.                                                             endif
  910.                                                             $I_L910_1263 = 1 + $I_L910_1263
  910.                                                             if ( $I_L910_1263 >= $$_mnlast_si + -$$_mnfirst_si + 1 ) exit
  910.                                                          enddo
  910.                                                       endif
  910.                                                       _free( t$201 )
  910.                                                       eiggt(1, 1) = _copyout( $$_eiggt )
  910.                                                       eigg(1, 1) = _copyout( $$_eigg )
  910.                                                       (qgenp_si%base_addr)(1, 1, 0) = _copyout( $$_f )
  914.                                                       _mt_barrier( 11, _mt_rw_list(...) )
  915.                                                       if ( kmax > 0 ) then
  917.                                                          if ( $$_mnrilast_si + -$$_mnrifirst_si >= 0 ) then
  918.                                                             $SC_qlnpt_si_I116 = qlnpt_si%dim_1%EX
  915.                                                             $I_L915_1225 = 0
  915.                                                             do
  916.                                                                $$_tor = 287.05000000000001 * to(1 + $I_L915_1225)
  918.                                                                $SC_qlnpt_si_I117 = qlnpt_si%dim_1%LB
  917.                                                                $I_L917_1161 = 0
  917. !dir$ ivdep
  917.                                                                do
  918.                                                                   (qgenp_si%base_addr)($$_mnrifirst_si + $I_L917_1161, 1 + $I_L915_1225, 0) = (qgenp_si%base_addr)($$_mnrifirst_si + $I_L917_1161, 1 + $I_L915_1225, 0) + -( $$_tor * (qlnpt_si%base_addr)($$_mnrifirst_si + $I_L917_1161, 0) )
  919.                                                                   $I_L917_1161 = 1 + $I_L917_1161
  917.                                                                   if ( $I_L917_1161 >= $$_mnrilast_si + -$$_mnrifirst_si + 1 ) exit
  917.                                                                enddo
  920.                                                                $I_L915_1225 = 1 + $I_L915_1225
  919.                                                                if ( $I_L915_1225 >= kmax ) exit
  919.                                                             enddo
  919.                                                          endif
  919.                                                       endif
  924.                                                       $F_A34 = qtmpt_si%dim_2%EX
  924.                                                       $F_A35 = ( $$_mnrilast_si + -$$_mnrifirst_si + 1 )
  924.                                                       if ( and( -$F_A35, -$F_A34 ) < 0 ) then
  924.                                                          $SC_qtmpt_si_I119 = qtmpt_si%dim_1%EX
  924.                                                          $I_L924_1229 = 0
  924.                                                          do
  924.                                                             $SC_qtmpt_si_I121 = qtmpt_si%dim_1%LB
  924.                                                             $I_L924_1183 = 0
  924. !dir$ ivdep
  924.                                                             do
  924.                                                                (qtmpt_si%base_addr)($$_mnrifirst_si + $I_L924_1183, qtmpt_si%dim_2%LB + $I_L924_1229, 0) = 0.0
  924.                                                                $I_L924_1183 = 1 + $I_L924_1183
  924.                                                                if ( $I_L924_1183 >= $F_A35 ) exit
  924.                                                             enddo
  924.                                                             $I_L924_1229 = 1 + $I_L924_1229
  924.                                                             if ( $I_L924_1229 >= $F_A34 ) exit
  924.                                                          enddo
  924.                                                       endif
  925.                                                       if ( kmax > 0 ) then
  927.                                                          if ( $$_mnrilast_si + -$$_mnrifirst_si >= 0 ) then
  927.                                                             $SC_tm_I122 = tm%dim_1%EX
  925.                                                             $I_L925_1280 = 0
  925.                                                             do
  926.                                                                $I_L926_1278 = 0
  926.                                                                do
  927.                                                                   $I_L927_1276 = 0
  927.                                                                   do
  925.                                                                      $I_L925_1092 = 0
  925.                                                                      if ( min( kmax, 16 + 16 * $I_L925_1280 ) + -16 * $I_L925_1280 >= 4 ) then
  925.                                                                         $I_L925_1274 = 0
  925. !dir$ shortloop16
  925. !dir$ blocking_size( 16, 16 )
  925.                                                                         do
  926.                                                                            $I_L926_1245 = 0
  926. !dir$ blocking_size( 32, 32 )
  926.                                                                            do
  927.                                                                               $SCA_tm#1_U0 = (tm%base_addr)(4 * $I_L925_1274 + 16 * $I_L925_1280 + 1, $I_L926_1245 + 32 * $I_L926_1278 + 1, 0)
  927.                                                                               $SCA_tm#2_U1 = (tm%base_addr)(4 * $I_L925_1274 + 16 * $I_L925_1280 + 2, $I_L926_1245 + 32 * $I_L926_1278 + 1, 0)
  927.                                                                               $SCA_tm#3_U2 = (tm%base_addr)(4 * $I_L925_1274 + 16 * $I_L925_1280 + 3, $I_L926_1245 + 32 * $I_L926_1278 + 1, 0)
  927.                                                                               $SCA_tm#4_U3 = (tm%base_addr)(4 * $I_L925_1274 + 16 * $I_L925_1280 + 4, $I_L926_1245 + 32 * $I_L926_1278 + 1, 0)
  927.                                                                               $I_L927_1197 = 0
  927. !dir$ ivdep
  927. !dir$ blocking_size( 256, 256 )
  927.                                                                               do
  928.                                                                                  (qtmpt_si%base_addr)($$_mnrifirst_si + $I_L927_1197 + 256 * $I_L927_1276, 4 * $I_L925_1274 + 16 * $I_L925_1280 + 1, 0) = (qtmpt_si%base_addr)($$_mnrifirst_si + $I_L927_1197 + 256 * $I_L927_1276, 4 * $I_L925_1274 + 16 * $I_L925_1280 + 1, 0) + $SCA_tm#1_U0 * (qgenp_si%base_addr)($$_mnrifirst_si + $I_L927_1197 + 256 * $I_L927_1276, $I_L926_1245 + 32 * $I_L926_1278 + 1, 0)
  928.                                                                                  (qtmpt_si%base_addr)($$_mnrifirst_si + $I_L927_1197 + 256 * $I_L927_1276, 4 * $I_L925_1274 + 16 * $I_L925_1280 + 2, 0) = (qtmpt_si%base_addr)($$_mnrifirst_si + $I_L927_1197 + 256 * $I_L927_1276, 4 * $I_L925_1274 + 16 * $I_L925_1280 + 2, 0) + $SCA_tm#2_U1 * (qgenp_si%base_addr)($$_mnrifirst_si + $I_L927_1197 + 256 * $I_L927_1276, $I_L926_1245 + 32 * $I_L926_1278 + 1, 0)
  928.                                                                                  (qtmpt_si%base_addr)($$_mnrifirst_si + $I_L927_1197 + 256 * $I_L927_1276, 4 * $I_L925_1274 + 16 * $I_L925_1280 + 3, 0) = (qtmpt_si%base_addr)($$_mnrifirst_si + $I_L927_1197 + 256 * $I_L927_1276, 4 * $I_L925_1274 + 16 * $I_L925_1280 + 3, 0) + $SCA_tm#3_U2 * (qgenp_si%base_addr)($$_mnrifirst_si + $I_L927_1197 + 256 * $I_L927_1276, $I_L926_1245 + 32 * $I_L926_1278 + 1, 0)
  928.                                                                                  (qtmpt_si%base_addr)($$_mnrifirst_si + $I_L927_1197 + 256 * $I_L927_1276, 4 * $I_L925_1274 + 16 * $I_L925_1280 + 4, 0) = (qtmpt_si%base_addr)($$_mnrifirst_si + $I_L927_1197 + 256 * $I_L927_1276, 4 * $I_L925_1274 + 16 * $I_L925_1280 + 4, 0) + $SCA_tm#4_U3 * (qgenp_si%base_addr)($$_mnrifirst_si + $I_L927_1197 + 256 * $I_L927_1276, $I_L926_1245 + 32 * $I_L926_1278 + 1, 0)
  927.                                                                                  $I_L927_1197 = 1 + $I_L927_1197
  927.                                                                                  if ( $I_L927_1197 >= min( $$_mnrilast_si + -$$_mnrifirst_si + 1, 256 + 256 * $I_L927_1276 ) + -256 * $I_L927_1276 ) exit
  927.                                                                               enddo
  926.                                                                               $I_L926_1245 = 1 + $I_L926_1245
  926.                                                                               if ( $I_L926_1245 >= min( kmax, 32 + 32 * $I_L926_1278 ) + -32 * $I_L926_1278 ) exit
  926.                                                                            enddo
  925.                                                                            $I_L925_1274 = 1 + $I_L925_1274
  929.                                                                            if ( $I_L925_1274 >= _rsh( min( kmax, 16 + 16 * $I_L925_1280 ) + -16 * $I_L925_1280, 2 ) ) exit
  929.                                                                         enddo
  925.                                                                         $I_L925_1092 = and( 0xfffffffffffffffcUL, min( kmax, 16 + 16 * $I_L925_1280 ) + -16 * $I_L925_1280 )
  925.                                                                      endif
  925.                                                                      if ( $I_L925_1092 < min( kmax, 16 + 16 * $I_L925_1280 ) + -16 * $I_L925_1280 ) then
  925.                                                                         $I_L925_1265 = 0
  925. !dir$ shortloop16
  925. !dir$ blocking_size( 16, 16 )
  925.                                                                         do
  926.                                                                            $I_L926_1243 = 0
  926. !dir$ blocking_size( 32, 32 )
  926.                                                                            do
  927.                                                                               $SCA_tm_I107 = (tm%base_addr)($I_L925_1092 + $I_L925_1265 + 16 * $I_L925_1280 + 1, $I_L926_1243 + 32 * $I_L926_1278 + 1, 0)
  927.                                                                               $I_L927_1163 = 0
  927. !dir$ ivdep
  927. !dir$ blocking_size( 256, 256 )
  927.                                                                               do
  928.                                                                                  (qtmpt_si%base_addr)($$_mnrifirst_si + $I_L927_1163 + 256 * $I_L927_1276, $I_L925_1092 + $I_L925_1265 + 16 * $I_L925_1280 + 1, 0) = (qtmpt_si%base_addr)($$_mnrifirst_si + $I_L927_1163 + 256 * $I_L927_1276, $I_L925_1092 + $I_L925_1265 + 16 * $I_L925_1280 + 1, 0) + $SCA_tm_I107 * (qgenp_si%base_addr)($$_mnrifirst_si + $I_L927_1163 + 256 * $I_L927_1276, $I_L926_1243 + 32 * $I_L926_1278 + 1, 0)
  927.                                                                                  $I_L927_1163 = 1 + $I_L927_1163
  927.                                                                                  if ( $I_L927_1163 >= min( $$_mnrilast_si + -$$_mnrifirst_si + 1, 256 + 256 * $I_L927_1276 ) + -256 * $I_L927_1276 ) exit
  927.                                                                               enddo
  926.                                                                               $I_L926_1243 = 1 + $I_L926_1243
  926.                                                                               if ( $I_L926_1243 >= min( kmax, 32 + 32 * $I_L926_1278 ) + -32 * $I_L926_1278 ) exit
  926.                                                                            enddo
  925.                                                                            $I_L925_1265 = 1 + $I_L925_1265
  929.                                                                            if ( $I_L925_1265 >= min( kmax, 16 + 16 * $I_L925_1280 ) + -$I_L925_1092 + -16 * $I_L925_1280 ) exit
  929.                                                                         enddo
  929.                                                                      endif
  927.                                                                      $I_L927_1276 = 1 + $I_L927_1276
  927.                                                                      if ( $I_L927_1276 >= 1 + max( 0, -1 + _rsh( $$_mnrilast_si + -$$_mnrifirst_si + 256, 8 ) ) ) exit
  927.                                                                   enddo
  926.                                                                   $I_L926_1278 = 1 + $I_L926_1278
  930.                                                                   if ( $I_L926_1278 >= 1 + max( 0, -1 + _rsh( 31 + kmax, 5 ) ) ) exit
  930.                                                                enddo
  925.                                                                $I_L925_1280 = 1 + $I_L925_1280
  925.                                                                if ( $I_L925_1280 >= 1 + max( 0, -1 + _rsh( 15 + kmax, 4 ) ) ) exit
  925.                                                             enddo
  925.                                                          endif
  925.                                                       endif
  935.                                                       _mt_barrier( 12, _mt_rw_list(...) )
  936.                                                       $snt_T4 = _mt_single( 13, _mt_rw_list(...) )
  937.                                                       ipa$549 = .false.
  937.                                                       call sitospec( (inibr_si%base_addr)(inibr_si%dim_1%LB, 0), (inibs_si%base_addr)(inibs_si%dim_1%LB, 0), nrecs_si, nsends_si, (myrecs_si%base_addr)(myrecs_si%dim_1%LB, 0), (mysends_si%base_addr)(mysends_si%dim_1%LB, 0), (mapr_si%base_addr)(mapr_si%dim_1%LB, 0), (maps_si%base_addr)(maps_si%dim_1%LB, 0), kmax, kmaxloc, (nlevperg_four%base_addr)(nlevperg_four%dim_1%LB, 0), ipa$549, (qrott%base_addr)(qrott%dim_1%LB, qrott%dim_2%LB, 0), (qdivt%base_addr)(qdivt%dim_1%LB, qdivt%dim_2%LB, 0), (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0), (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0), (qtmpt%base_addr)(qtmpt%dim_1%LB, qtmpt%dim_2%LB, 0), (qtmpt_si%base_addr)(qtmpt_si%dim_1%LB, qtmpt_si%dim_2%LB, 0), (qlnpt%base_addr)(qlnpt%dim_1%LB, 0), (qlnpt_si%base_addr)(qlnpt_si%dim_1%LB, 0) )
  940.                                                       $snt_T4 = _mt_endsingle( 13, _mt_rw_list(...), $snt_T4 )
  942.                                                       if ( slagr ) then
  942.                                                          if ( havesurf ) then
  943.                                                             if ( $$_mnrilast + -$$_mnrifirst >= 0 ) then
  944.                                                                $SC_qlnpt_I123 = qlnpt%dim_1%EX
  943.                                                                $I_L943_1165 = 0
  943. !dir$ ivdep
  943.                                                                do
  944.                                                                   (qlnpl%base_addr)($$_mnrifirst + $I_L943_1165, 0) = (qlnpl%base_addr)($$_mnrifirst + $I_L943_1165, 0) + -(qlnpt%base_addr)($$_mnrifirst + $I_L943_1165, 0)
  945.                                                                   $I_L943_1165 = 1 + $I_L943_1165
  943.                                                                   if ( $I_L943_1165 >= $$_mnrilast + -$$_mnrifirst + 1 ) exit
  943.                                                                enddo
  943.                                                             endif
  943.                                                          endif
  943.                                                       endif
  947.                                                       if ( $$_mnrilast + -$$_mnrifirst >= 0 ) then
  948.                                                          $SC_qtmpp_I124 = qtmpp%dim_2%EX
  947.                                                          $I_L947_1227 = 0
  947.                                                          do
  948.                                                             $F_A36 = $SC_qtmpp_I124
  948.                                                             if ( $SC_qtmpp_I124 > 0 ) then
  948.                                                                $SC_qtmpt_I125 = qtmpt%dim_1%EX
  948.                                                                $I_L948_1185 = 0
  948. !dir$ ivdep
  948.                                                                do
  948.                                                                   (qtmpp%base_addr)($$_mnrifirst + $I_L947_1227, qtmpp%dim_2%LB + $I_L948_1185, 0) = (qtmpp%base_addr)($$_mnrifirst + $I_L947_1227, qtmpp%dim_2%LB + $I_L948_1185, 0) + -(qtmpt%base_addr)($$_mnrifirst + $I_L947_1227, qtmpt%dim_2%LB + $I_L948_1185, 0)
  948.                                                                   $I_L948_1185 = 1 + $I_L948_1185
  948.                                                                   if ( $I_L948_1185 >= $F_A36 ) exit
  948.                                                                enddo
  948.                                                             endif
  949.                                                             $F_A37 = qrotp%dim_2%EX
  949.                                                             if ( qrotp%dim_2%EX > 0 ) then
  949.                                                                $SC_qrott_I126 = qrott%dim_1%EX
  949.                                                                $I_L949_1187 = 0
  949. !dir$ ivdep
  949.                                                                do
  949.                                                                   (qrotp%base_addr)($$_mnrifirst + $I_L947_1227, qrotp%dim_2%LB + $I_L949_1187, 0) = (qrotp%base_addr)($$_mnrifirst + $I_L947_1227, qrotp%dim_2%LB + $I_L949_1187, 0) + -(qrott%base_addr)($$_mnrifirst + $I_L947_1227, qrott%dim_2%LB + $I_L949_1187, 0)
  949.                                                                   $I_L949_1187 = 1 + $I_L949_1187
  949.                                                                   if ( $I_L949_1187 >= $F_A37 ) exit
  949.                                                                enddo
  949.                                                             endif
  950.                                                             $F_A38 = qdivp%dim_2%EX
  950.                                                             if ( qdivp%dim_2%EX > 0 ) then
  950.                                                                $SC_qdivt_I127 = qdivt%dim_1%EX
  950.                                                                $I_L950_1189 = 0
  950. !dir$ ivdep
  950.                                                                do
  950.                                                                   (qdivp%base_addr)($$_mnrifirst + $I_L947_1227, qdivp%dim_2%LB + $I_L950_1189, 0) = (qdivp%base_addr)($$_mnrifirst + $I_L947_1227, qdivp%dim_2%LB + $I_L950_1189, 0) + -(qdivt%base_addr)($$_mnrifirst + $I_L947_1227, qdivt%dim_2%LB + $I_L950_1189, 0)
  950.                                                                   $I_L950_1189 = 1 + $I_L950_1189
  950.                                                                   if ( $I_L950_1189 >= $F_A38 ) exit
  950.                                                                enddo
  950.                                                             endif
  951.                                                             $I_L947_1227 = 1 + $I_L947_1227
  947.                                                             if ( $I_L947_1227 >= $$_mnrilast + -$$_mnrifirst + 1 ) exit
  947.                                                          enddo
  947.                                                       endif
  952.                                                       if ( havesurf ) then
  953.                                                          if ( $$_mnrilast + -$$_mnrifirst >= 0 ) then
  953.                                                             $I_L953_1167 = 0
  953. !dir$ ivdep
  953.                                                             do
  954.                                                                (qlnpp%base_addr)($$_mnrifirst + $I_L953_1167, 0) = (qlnpp%base_addr)($$_mnrifirst + $I_L953_1167, 0) + -(qlnpt%base_addr)($$_mnrifirst + $I_L953_1167, 0)
  955.                                                                $I_L953_1167 = 1 + $I_L953_1167
  953.                                                                if ( $I_L953_1167 >= $$_mnrilast + -$$_mnrifirst + 1 ) exit
  953.                                                             enddo
  953.                                                          endif
  953.                                                       endif
  957.                                                       $I_L832_1282 = 1 + $I_L832_1282
  956.                                                       if ( $I_L832_1282 >= $t_S69 ) exit
  956.                                                    enddo
  956.                                                 endif
  820.                                                 $snt_T5 = _mt_end_code( 14, _mt_rw_list(...), $snt_T5 )
  820.                                                 _free( $pvt_Abase_seg61_D0 )
  958.                                                 $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
  959.                                                 ktm = 0
  961.                                                 $_allo_P15(0) = 0x1000000000001L
  961.                                                 $_allo_P15(1) = loc( realbuffer )
  961.                                                 call __deallocate( $_allo_P15, 0, 0, _fcd( 0, 0 ) )
  961.                                                 realbuffer%header%assoc = 0
  962.                                                 $_allo_P16(0) = 0x1000000000001L
  962.                                                 $_allo_P16(1) = loc( qgenp )
  962.                                                 call __deallocate( $_allo_P16, 0, 0, _fcd( 0, 0 ) )
  962.                                                 qgenp%header%assoc = 0
  963.                                                 $_allo_P17(0) = 0x1000000000001L
  963.                                                 $_allo_P17(1) = loc( qgenp_si )
  963.                                                 call __deallocate( $_allo_P17, 0, 0, _fcd( 0, 0 ) )
  963.                                                 qgenp_si%header%assoc = 0
  964.                                                 $_allo_P18(0) = 0x1000000000001L
  964.                                                 $_allo_P18(1) = loc( indper )
  964.                                                 call __deallocate( $_allo_P18, 0, 0, _fcd( 0, 0 ) )
  964.                                                 indper%header%assoc = 0
  965.                                                 $_allo_P19(0) = 0x1000000000001L
  965.                                                 $_allo_P19(1) = loc( indg )
  965.                                                 call __deallocate( $_allo_P19, 0, 0, _fcd( 0, 0 ) )
  965.                                                 indg%header%assoc = 0
  966.                                                 $_allo_P20(0) = 0x1000000000001L
  966.                                                 $_allo_P20(1) = loc( jg )
  966.                                                 call __deallocate( $_allo_P20, 0, 0, _fcd( 0, 0 ) )
  966.                                                 jg%header%assoc = 0
  967.                                                 $_allo_P21(0) = 0x1000000000001L
  967.                                                 $_allo_P21(1) = loc( nas )
  967.                                                 call __deallocate( $_allo_P21, 0, 0, _fcd( 0, 0 ) )
  967.                                                 nas%header%assoc = 0
  968.                                                 $_allo_P22(0) = 0x1000000000001L
  968.                                                 $_allo_P22(1) = loc( per )
  968.                                                 call __deallocate( $_allo_P22, 0, 0, _fcd( 0, 0 ) )
  968.                                                 per%header%assoc = 0
  969.                                                 $_allo_P23(0) = 0x1000000000001L
  969.                                                 $_allo_P23(1) = loc( g )
  969.                                                 call __deallocate( $_allo_P23, 0, 0, _fcd( 0, 0 ) )
  969.                                                 g%header%assoc = 0
  971.                                                 $_allo_P24(0) = 0x1000000000001L
  971.                                                 $_allo_P24(1) = loc( one_g )
  971.                                                 call __deallocate( $_allo_P24, 0, 0, _fcd( 0, 0 ) )
  971.                                                 one_g%header%assoc = 0
  972.                                                 $_allo_P25(0) = 0x1000000000001L
  972.                                                 $_allo_P25(1) = loc( one_per )
  972.                                                 call __deallocate( $_allo_P25, 0, 0, _fcd( 0, 0 ) )
  972.                                                 one_per%header%assoc = 0
  973.                                                 $_allo_P26(0) = 0x1000000000001L
  973.                                                 $_allo_P26(1) = loc( all_jg )
  973.                                                 call __deallocate( $_allo_P26, 0, 0, _fcd( 0, 0 ) )
  973.                                                 all_jg%header%assoc = 0
  974.                                                 $_allo_P27(0) = 0x1000000000001L
  974.                                                 $_allo_P27(1) = loc( all_nas )
  974.                                                 call __deallocate( $_allo_P27, 0, 0, _fcd( 0, 0 ) )
  974.                                                 all_nas%header%assoc = 0
  397.                                                 $_allo_P28(0) = 0xd000000000001L
  397.                                                 $_allo_P28(1) = loc( realbuffer )
  397.                                                 $_allo_P28(2) = loc( qgenp_si )
  397.                                                 $_allo_P28(3) = loc( qgenp )
  397.                                                 $_allo_P28(4) = loc( per )
  397.                                                 $_allo_P28(5) = loc( one_per )
  397.                                                 $_allo_P28(6) = loc( one_g )
  397.                                                 $_allo_P28(7) = loc( nas )
  397.                                                 $_allo_P28(8) = loc( jg )
  397.                                                 $_allo_P28(9) = loc( indper )
  397.                                                 $_allo_P28(10) = loc( indg )
  397.                                                 $_allo_P28(11) = loc( g )
  397.                                                 $_allo_P28(12) = loc( all_nas )
  397.                                                 $_allo_P28(13) = loc( all_jg )
  397.                                                 call _dealloc( $_allo_P28, 0, 0, _fcd( 0, 0 ) )
  325.                                                 _free( t$168 )
  325.                                              endif
  325.                                           endif
  325.                                        endif
  325.                                     endif
  325.                                  endif
  325.                               endif
  325.                            endif
  325.                         endif
  325.                      endif
  325.                   endif
  325.                endif
  325.             endif
  325.          endif
  325.       endif
  325.   110 continue
  975.       return
  975.       end
  975.       
  991.       
  991.       subroutine vertic( f, eigg, eiggt, dotpro, input, mnfirst, mnlast )
  991.       t$76 = mnmax_si
  991.       t$75 = kmax
  995.       t$194 = _zla( 0, mnmax_si )
  991.       t$195 = 2 * _zla( 0, mnmax_si )
  995.       t$196 = _zla( 0, kmax )
  991.       t$197 = _zla( 0, mnmax_si ) * _zla( 0, kmax ) * 2
  991.       t$198 = _zla( 0, kmax )
  991.       t$199 = _zla( 0, kmax ) * _zla( 0, kmax )
  991.       t$200 = 2 * _zla( 0, kmax )
  999.       t$203 = 16 * _zla( 0, kmax )
  991.       t$201 = int( _alloc( 16 * _zla( 0, kmax ) ), 8 )
  999.       t$202 = t$201
 1003.       if ( input < 0 ) then
 1004.          if ( mnlast + -mnfirst >= 0 ) then
 1005.             if ( mods > 0 ) then
 1008.                if ( kmax > 0 ) then
 1004.                   $I_L1004_94 = 0
 1004.                   do
 1005.                      $I_L1005_86 = 0
 1005. !dir$ ivdep
 1005.                      do
 1006.                         sum1 = 0.0
 1007.                         sum2 = 0.0
 1008.                         $I_L1008_76 = 0
 1008. !dir$ unroll 4
 1008.                         do
 1009.                            sum1 = sum1 + eiggt(1 + $I_L1008_76, 1 + $I_L1005_86) * f(1, mnfirst + $I_L1004_94, 1 + $I_L1008_76)
 1010.                            sum2 = sum2 + eiggt(1 + $I_L1008_76, 1 + $I_L1005_86) * f(2, mnfirst + $I_L1004_94, 1 + $I_L1008_76)
 1011.                            $I_L1008_76 = 1 + $I_L1008_76
 1008.                            if ( $I_L1008_76 >= kmax ) exit
 1008.                         enddo
 1012.                         col(1, 1 + $I_L1005_86) = dotpro(1 + $I_L1005_86) * sum1
 1013.                         col(2, 1 + $I_L1005_86) = dotpro(1 + $I_L1005_86) * sum2
 1014.                         $I_L1005_86 = 1 + $I_L1005_86
 1011.                         if ( $I_L1005_86 >= mods ) exit
 1011.                      enddo
 1015.                      $I_L1015_78 = 0
 1015. !dir$ ivdep
 1015.                      do
 1016.                         f(1, mnfirst + $I_L1004_94, 1 + $I_L1015_78) = col(1, 1 + $I_L1015_78)
 1017.                         f(2, mnfirst + $I_L1004_94, 1 + $I_L1015_78) = col(2, 1 + $I_L1015_78)
 1018.                         $I_L1015_78 = 1 + $I_L1015_78
 1015.                         if ( $I_L1015_78 >= mods ) exit
 1015.                      enddo
 1019.                      $I_L1004_94 = 1 + $I_L1004_94
 1018.                      if ( $I_L1004_94 >= mnlast + -mnfirst + 1 ) exit
 1018.                   enddo
 1018.                else
 1005.                   $SI_L1005_82_G5 = 0
 1005.                   do
 1004.                      $I_L1004_88 = 0
 1004. !dir$ blocking_size( 0, 0 )
 1004.                      do
 1005.                         $I_L1005_96 = 0
 1005. !dir$ ivdep
 1005. !dir$ blocking_size( 256, 256 )
 1005.                         do
 1016.                            f(1, mnfirst + $I_L1004_88, $I_L1005_96 + 256 * $SI_L1005_82_G5 + 1) = 0.0
 1017.                            f(2, mnfirst + $I_L1004_88, $I_L1005_96 + 256 * $SI_L1005_82_G5 + 1) = 0.0
 1005.                            $I_L1005_96 = 1 + $I_L1005_96
 1011.                            if ( $I_L1005_96 >= min( mods, 256 + 256 * $SI_L1005_82_G5 ) + -256 * $SI_L1005_82_G5 ) exit
 1011.                         enddo
 1019.                         $I_L1004_88 = 1 + $I_L1004_88
 1019.                         if ( $I_L1004_88 >= mnlast + -mnfirst + 1 ) exit
 1019.                      enddo
 1005.                      $SI_L1005_82_G5 = 1 + $SI_L1005_82_G5
 1018.                      if ( $SI_L1005_82_G5 >= _rsh( 255 + mods, 8 ) ) exit
 1018.                   enddo
 1018.                endif
 1018.             endif
 1018.          endif
 1020.       else if ( input > 0 ) then
 1021.          if ( mnlast + -mnfirst >= 0 ) then
 1021.             $I_L1021_92 = 0
 1021.             do
 1022.                if ( mods > 0 ) then
 1022.                   $I_L1022_74 = 0
 1022. !dir$ ivdep
 1022.                   do
 1023.                      col(1, 1 + $I_L1022_74) = f(1, mnfirst + $I_L1021_92, 1 + $I_L1022_74)
 1024.                      col(2, 1 + $I_L1022_74) = f(2, mnfirst + $I_L1021_92, 1 + $I_L1022_74)
 1025.                      $I_L1022_74 = 1 + $I_L1022_74
 1022.                      if ( $I_L1022_74 >= mods ) exit
 1022.                   enddo
 1022.                endif
 1026.                if ( kmax > 0 ) then
 1029.                   if ( mods > 0 ) then
 1026.                      $I_L1026_90 = 0
 1026. !dir$ ivdep
 1026.                      do
 1027.                         f(1, mnfirst + $I_L1021_92, 1 + $I_L1026_90) = 0.0
 1028.                         f(2, mnfirst + $I_L1021_92, 1 + $I_L1026_90) = 0.0
 1029.                         $SCA_f_I1 = f(1, mnfirst + $I_L1021_92, 1 + $I_L1026_90)
 1029.                         $SCA_f_I0 = 0.0
 1029.                         $I_L1029_84 = 0
 1029. !dir$ unroll 4
 1029.                         do
 1030.                            $SCA_f_I1 = $SCA_f_I1 + eigg(1 + $I_L1026_90, 1 + $I_L1029_84) * col(1, 1 + $I_L1029_84)
 1031.                            $SCA_f_I0 = $SCA_f_I0 + eigg(1 + $I_L1026_90, 1 + $I_L1029_84) * col(2, 1 + $I_L1029_84)
 1032.                            $I_L1029_84 = 1 + $I_L1029_84
 1029.                            if ( $I_L1029_84 >= mods ) exit
 1029.                         enddo
 1029.                         f(1, mnfirst + $I_L1021_92, 1 + $I_L1026_90) = $SCA_f_I1
 1029.                         f(2, mnfirst + $I_L1021_92, 1 + $I_L1026_90) = $SCA_f_I0
 1033.                         $I_L1026_90 = 1 + $I_L1026_90
 1032.                         if ( $I_L1026_90 >= kmax ) exit
 1032.                      enddo
 1032.                   else
 1026.                      $I_L1026_80 = 0
 1026. !dir$ ivdep
 1026.                      do
 1027.                         f(1, mnfirst + $I_L1021_92, 1 + $I_L1026_80) = 0.0
 1028.                         f(2, mnfirst + $I_L1021_92, 1 + $I_L1026_80) = 0.0
 1033.                         $I_L1026_80 = 1 + $I_L1026_80
 1032.                         if ( $I_L1026_80 >= kmax ) exit
 1032.                      enddo
 1032.                   endif
 1032.                endif
 1034.                $I_L1021_92 = 1 + $I_L1021_92
 1033.                if ( $I_L1021_92 >= mnlast + -mnfirst + 1 ) exit
 1033.             enddo
 1033.          endif
 1033.       endif
  991.       _free( t$201 )
 1036.       return
 1036.       end
 1036.       
 1055.       
 1055.       subroutine primes( vord, divd, comd, gh, input, mnfirst, mnlast )
 1055.       t$77 = mnmax_si
 1055.       t$78 = kmax
 1056.       t$204 = _zla( 0, mnmax_si )
 1055.       t$205 = 2 * _zla( 0, mnmax_si )
 1056.       t$206 = _zla( 0, kmax )
 1055.       t$207 = _zla( 0, mnmax_si ) * _zla( 0, kmax ) * 2
 1063.       t$210 = 8 * _zla( 0, mnmax_si )
 1055.       t$208 = int( _alloc( 8 * _zla( 0, mnmax_si ) ), 8 )
 1063.       t$209 = t$208
 1065.       if ( myid /= 0 ) then
 1063.          goto 10
 1063.       else if ( mnfirst == 1 ) then
 1066.          w(1) = 0.0
 1067.          $m1_S0 = 2
 1067.       else
 1067.    10    continue
 1069.          $m1_S0 = mnfirst
 1069.       endif
 1071.       if ( input < 0 ) then
 1072.          if ( mnlast + -$m1_S0 >= 0 ) then
 1072.             $I_L1072_36 = 0
 1072. !dir$ ivdep
 1072.             do
 1073.                w($m1_S0 + $I_L1072_36) = _recip_sqrt( real( (snnp1_si%base_addr)(2 * $m1_S0 + 2 * $I_L1072_36 + -1, 0), 8 ) )
 1074.                $I_L1072_36 = 1 + $I_L1072_36
 1072.                if ( $I_L1072_36 >= mnlast + -$m1_S0 + 1 ) exit
 1072.             enddo
 1072.          endif
 1075.          if ( mods > 0 ) then
 1077.             if ( mnlast + -mnfirst >= 0 ) then
 1075.                $I_L1075_46 = 0
 1075.                do
 1076.                   $t_S6 = ( 1.5698587127158556e-7 * _recip_sqrt( gh(1 + $I_L1075_46) ) )
 1077.                   $I_L1077_42 = 0
 1077. !dir$ ivdep
 1077.                   do
 1078.                      vord(1, mnfirst + $I_L1077_42, 1 + $I_L1075_46) = w(mnfirst + $I_L1077_42) * vord(1, mnfirst + $I_L1077_42, 1 + $I_L1075_46)
 1079.                      vord(2, mnfirst + $I_L1077_42, 1 + $I_L1075_46) = w(mnfirst + $I_L1077_42) * vord(2, mnfirst + $I_L1077_42, 1 + $I_L1075_46)
 1080.                      $divdr_S4 = -( w(mnfirst + $I_L1077_42) * divd(2, mnfirst + $I_L1077_42, 1 + $I_L1075_46) )
 1081.                      $divdi_S5 = w(mnfirst + $I_L1077_42) * divd(1, mnfirst + $I_L1077_42, 1 + $I_L1075_46)
 1082.                      divd(1, mnfirst + $I_L1077_42, 1 + $I_L1075_46) = $divdr_S4
 1083.                      divd(2, mnfirst + $I_L1077_42, 1 + $I_L1075_46) = $divdi_S5
 1084.                      comd(1, mnfirst + $I_L1077_42, 1 + $I_L1075_46) = $t_S6 * comd(1, mnfirst + $I_L1077_42, 1 + $I_L1075_46)
 1085.                      comd(2, mnfirst + $I_L1077_42, 1 + $I_L1075_46) = $t_S6 * comd(2, mnfirst + $I_L1077_42, 1 + $I_L1075_46)
 1086.                      $I_L1077_42 = 1 + $I_L1077_42
 1077.                      if ( $I_L1077_42 >= mnlast + -mnfirst + 1 ) exit
 1077.                   enddo
 1087.                   $I_L1075_46 = 1 + $I_L1075_46
 1086.                   if ( $I_L1075_46 >= mods ) exit
 1086.                enddo
 1086.             endif
 1086.          endif
 1088.       else if ( input > 0 ) then
 1089.          if ( mnlast + -$m1_S0 >= 0 ) then
 1089.             $I_L1089_38 = 0
 1089. !dir$ ivdep
 1089.             do
 1090.                w($m1_S0 + $I_L1089_38) = _sqrt( real( (snnp1_si%base_addr)(2 * $m1_S0 + 2 * $I_L1089_38 + -1, 0), 8 ) )
 1091.                $I_L1089_38 = 1 + $I_L1089_38
 1089.                if ( $I_L1089_38 >= mnlast + -$m1_S0 + 1 ) exit
 1089.             enddo
 1089.          endif
 1092.          if ( mods > 0 ) then
 1094.             if ( mnlast + -mnfirst >= 0 ) then
 1092.                $I_L1092_44 = 0
 1092.                do
 1093.                   $t_S12 = 6370000.0 * _sqrt( gh(1 + $I_L1092_44) )
 1094.                   $I_L1094_40 = 0
 1094. !dir$ ivdep
 1094.                   do
 1095.                      vord(1, mnfirst + $I_L1094_40, 1 + $I_L1092_44) = w(mnfirst + $I_L1094_40) * vord(1, mnfirst + $I_L1094_40, 1 + $I_L1092_44)
 1096.                      vord(2, mnfirst + $I_L1094_40, 1 + $I_L1092_44) = w(mnfirst + $I_L1094_40) * vord(2, mnfirst + $I_L1094_40, 1 + $I_L1092_44)
 1097.                      $divdr_S10 = w(mnfirst + $I_L1094_40) * divd(2, mnfirst + $I_L1094_40, 1 + $I_L1092_44)
 1098.                      $divdi_S11 = -( w(mnfirst + $I_L1094_40) * divd(1, mnfirst + $I_L1094_40, 1 + $I_L1092_44) )
 1099.                      divd(1, mnfirst + $I_L1094_40, 1 + $I_L1092_44) = $divdr_S10
 1100.                      divd(2, mnfirst + $I_L1094_40, 1 + $I_L1092_44) = $divdi_S11
 1101.                      comd(1, mnfirst + $I_L1094_40, 1 + $I_L1092_44) = $t_S12 * comd(1, mnfirst + $I_L1094_40, 1 + $I_L1092_44)
 1102.                      comd(2, mnfirst + $I_L1094_40, 1 + $I_L1092_44) = $t_S12 * comd(2, mnfirst + $I_L1094_40, 1 + $I_L1092_44)
 1103.                      $I_L1094_40 = 1 + $I_L1094_40
 1094.                      if ( $I_L1094_40 >= mnlast + -mnfirst + 1 ) exit
 1094.                   enddo
 1104.                   $I_L1092_44 = 1 + $I_L1092_44
 1103.                   if ( $I_L1092_44 >= mods ) exit
 1103.                enddo
 1103.             endif
 1103.          endif
 1103.       endif
 1055.       _free( t$208 )
 1106.       return
 1106.       end
 1106.       
 1120.       
 1120.       subroutine horiz1( vord, divd, comd, v, per, g, indper, indg, jg, nas, myms, nms )
 1120.       t$79 = mymnmax
 1120.       t$80 = modsloc
 1121.       t$211 = _zla( 0, mymnmax )
 1120.       t$212 = 2 * _zla( 0, mymnmax )
 1121.       t$213 = _zla( 0, modsloc )
 1120.       t$214 = _zla( 0, mymnmax ) * _zla( 0, modsloc ) * 2
 1120.       t$82 = ( 2 * mymmax )
 1129.       t$215 = _zla( 0, ( 2 * mymmax ) )
 1120.       t$216 = _zla( 0, ( 2 * mymmax ) )
 1120.       t$217 = _zla( 0, modsloc ) * _zla( 0, ( 2 * mymmax ) )
 1120.       t$81 = nms
 1128.       t$218 = _zla( 0, nms )
 1120.       t$83 = ( 3 + 3 * mmax ) / 2
 1134.       t$219 = _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1120.       t$220 = 2 * _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1134.       t$223 = 16 * _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1134.       t$224 = 16 * _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1134.       t$226 = 32 * _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1120.       t$221 = int( _alloc( 32 * _zla( 0, ( 3 + 3 * mmax ) / 2 ) ), 8 )
 1134.       t$222 = t$221
 1134.       t$225 = t$221 + 16 * _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1138.       if ( modsloc > 0 ) then
 1139.          if ( nms > 0 ) then
 1138.             $I_L1138_198 = 0
 1138.             do
 1139.                $I_L1139_196 = 0
 1139.                do
 1140.                   $ll_S1 = myms(1 + $I_L1139_196)
 1143.                   $mglob_S2 = (lm2m%base_addr)($ll_S1, 0)
 1151.                   if ( mmax + -$mglob_S2 > 0 ) then
 1151.                      $I_L1151_154 = 0
 1151. !dir$ ivdep
 1151.                      do
 1152.                         $lx_S6 = (mymnmap%base_addr)($ll_S1, $mglob_S2 + 2 * $I_L1151_154 + 1, 0)
 1155.                         sdot(1, 1 + $I_L1151_154) = vord(1, $lx_S6, 1 + $I_L1138_198)
 1156.                         adot(1, mmax + $I_L1151_154 + ( mmax + -$mglob_S2 + 1 ) / -2 + -$mglob_S2 + 2) = divd(1, $lx_S6, 1 + $I_L1138_198)
 1157.                         adot(1, mmax + $I_L1151_154 + -$mglob_S2 + 2) = comd(1, $lx_S6, 1 + $I_L1138_198)
 1155.                         sdot(2, 1 + $I_L1151_154) = vord(2, $lx_S6, 1 + $I_L1138_198)
 1156.                         adot(2, mmax + $I_L1151_154 + ( mmax + -$mglob_S2 + 1 ) / -2 + -$mglob_S2 + 2) = divd(2, $lx_S6, 1 + $I_L1138_198)
 1157.                         adot(2, mmax + $I_L1151_154 + -$mglob_S2 + 2) = comd(2, $lx_S6, 1 + $I_L1138_198)
 1159.                         $I_L1151_154 = 1 + $I_L1151_154
 1158.                         if ( $I_L1151_154 >= ( mmax + -$mglob_S2 + 1 ) / 2 ) exit
 1158.                      enddo
 1158.                   endif
 1161.                   if ( mmax + -$mglob_S2 >= 0 ) then
 1161.                      $I_L1161_182 = 0
 1161.                      do
 1162.                         $lx_S11 = (mymnmap%base_addr)($ll_S1, $mglob_S2 + 2 * $I_L1161_182, 0)
 1164.                         $I_L1164_156 = 0
 1164. !dir$ ivdep
 1164.                         do
 1165.                            adot(1 + $I_L1164_156, 1 + $I_L1161_182) = vord(1 + $I_L1164_156, $lx_S11, 1 + $I_L1138_198)
 1166.                            sdot(1 + $I_L1164_156, $I_L1161_182 + ( mmax + -$mglob_S2 + 1 ) / 2 + 1) = divd(1 + $I_L1164_156, $lx_S11, 1 + $I_L1138_198)
 1167.                            sdot(1 + $I_L1164_156, mmax + $I_L1161_182 + -$mglob_S2 + 2) = comd(1 + $I_L1164_156, $lx_S11, 1 + $I_L1138_198)
 1168.                            $I_L1164_156 = 1 + $I_L1164_156
 1164.                            if ( $I_L1164_156 >= 2 ) exit
 1164.                         enddo
 1169.                         $I_L1161_182 = 1 + $I_L1161_182
 1168.                         if ( $I_L1161_182 >= ( mmax + -$mglob_S2 + 2 ) / 2 ) exit
 1168.                      enddo
 1168.                   endif
 1170.                   if ( jg(-1 + 2 * $ll_S1, 1 + $I_L1138_198) /= 0 ) then
 1171.                      $ipa_S15 = indper(-1 + 2 * $ll_S1, 1 + $I_L1138_198)
 1171.                      ipa$610 = loc( g(indg(-1 + 2 * $ll_S1, 1 + $I_L1138_198)) )
 1171.                      g = _copyin( g(indg(-1 + 2 * $ll_S1, 1 + $I_L1138_198)) )
 1171.                      t$86 = nas(-1 + 2 * $ll_S1, 1 + $I_L1138_198)
 1171.                      t$231 = max( 0, t$86 )
 1171.                      t$232 = 2 * t$86
 1171.                      t$87 = jg(-1 + 2 * $ll_S1, 1 + $I_L1138_198)
 1171.                      t$233 = max( 0, t$87 )
 1171.                      t$234 = t$87
 1171.                      t$235 = t$86 * t$87
 1171.                      t$88 = ( 3 + 3 * mmax ) / 2
 1171.                      t$236 = max( 0, ( 3 + 3 * mmax ) / 2 )
 1171.                      t$239 = 4 * max( 0, ( 3 + 3 * mmax ) / 2 )
 1171.                      t$240 = 2 * max( 0, ( 3 + 3 * mmax ) / 2 )
 1171.                      t$241 = 8 * ( ( 7 + 4 * max( 0, ( 3 + 3 * mmax ) / 2 ) ) / 8 )
 1171.                      t$243 = 8 * ( ( 7 + 4 * max( 0, ( 3 + 3 * mmax ) / 2 ) ) / 8 ) + 16 * max( 0, ( 3 + 3 * mmax ) / 2 )
 1171.                      t$237 = int( _alloc( 8 * ( ( 7 + 4 * max( 0, ( 3 + 3 * mmax ) / 2 ) ) / 8 ) + 16 * max( 0, ( 3 + 3 * mmax ) / 2 ) ), 8 )
 1171.                      t$238 = t$237
 1171.                      t$242 = t$237 + 8 * ( ( 7 + 4 * max( 0, ( 3 + 3 * mmax ) / 2 ) ) / 8 )
 1171.                      if ( t$87 > 0 ) then
 1171.                         $I_L1171_158 = 0
 1171. !dir$ ivdep
 1171.                         do
 1171.                            knit(1 + $I_L1171_158) = 0
 1171.                            y(1, 1 + $I_L1171_158) = 0.0
 1171.                            y(2, 1 + $I_L1171_158) = 0.0
 1171.                            $I_L1171_158 = 1 + $I_L1171_158
 1171.                            if ( $I_L1171_158 >= t$87 ) exit
 1171.                         enddo
 1171.                         if ( t$86 > 0 ) then
 1171.                            $I_L1171_184 = 0
 1171.                            do
 1171.                               $period_S16 = abs( per($ipa_S15 + $I_L1171_184) )
 1171.                               if ( $period_S16 + -v <= 0.0 ) then
 1171.                                  $difcut_S17 = 9.9999999999999995e-8 + dk * real( $mglob_S2 + $I_L1171_184 + ( $mglob_S2 + $I_L1171_184 ) * ( $mglob_S2 + $I_L1171_184 ), 8 ) ** ( ndord / 2 )
 1171.                                  if ( ( 5.0e-1 * 1.0/$difcut_S17 ) + -$period_S16 >= 0.0 ) then
 1171.                                     knit(1 + $I_L1171_184) = ( 1 + $I_L1171_184 )
 1171.                                     $SCA_y_I7 = y(2, 1 + $I_L1171_184)
 1171.                                     $SCA_y_I8 = y(1, 1 + $I_L1171_184)
 1171.                                     $I_L1171_160 = 0
 1171. !dir$ ivdep
 1171.                                     do
 1171.                                        $SCA_y_I8 = $SCA_y_I8 + g(1 + $I_L1171_184, 1 + $I_L1171_160) * sdot(1, 1 + $I_L1171_160)
 1171.                                        $SCA_y_I7 = $SCA_y_I7 + g(1 + $I_L1171_184, 1 + $I_L1171_160) * sdot(2, 1 + $I_L1171_160)
 1171.                                        $I_L1171_160 = 1 + $I_L1171_160
 1171.                                        if ( $I_L1171_160 >= t$86 ) exit
 1171.                                     enddo
 1171.                                     y(1, 1 + $I_L1171_184) = $SCA_y_I8
 1171.                                     y(2, 1 + $I_L1171_184) = $SCA_y_I7
 1171.                                     $yr_S21 = y(1, 1 + $I_L1171_184)
 1171.                                     y(1, 1 + $I_L1171_184) = per($ipa_S15 + $I_L1171_184) * $SCA_y_I7
 1171.                                     y(2, 1 + $I_L1171_184) = -( per($ipa_S15 + $I_L1171_184) * $yr_S21 )
 1171.                                  endif
 1171.                               endif
 1171.                               $I_L1171_184 = 1 + $I_L1171_184
 1171.                               if ( $I_L1171_184 >= t$87 ) exit
 1171.                            enddo
 1171.                         else
 1171.                            $I_L1171_178 = 0
 1171. !dir$ ivdep
 1171.                            do
 1171.                               $period_S16 = abs( per($ipa_S15 + $I_L1171_178) )
 1171.                               if ( $period_S16 + -v <= 0.0 ) then
 1171.                                  $difcut_S17 = 9.9999999999999995e-8 + dk * real( $mglob_S2 + $I_L1171_178 + ( $mglob_S2 + $I_L1171_178 ) * ( $mglob_S2 + $I_L1171_178 ), 8 ) ** ( ndord / 2 )
 1171.                                  if ( ( 5.0e-1 * 1.0/$difcut_S17 ) + -$period_S16 >= 0.0 ) then
 1171.                                     knit(1 + $I_L1171_178) = ( 1 + $I_L1171_178 )
 1171.                                     $yr_S21 = y(1, 1 + $I_L1171_178)
 1171.                                     $yi_S20 = y(2, 1 + $I_L1171_178)
 1171.                                     y(1, 1 + $I_L1171_178) = per($ipa_S15 + $I_L1171_178) * $yi_S20
 1171.                                     y(2, 1 + $I_L1171_178) = -( per($ipa_S15 + $I_L1171_178) * $yr_S21 )
 1171.                                  endif
 1171.                               endif
 1171.                               $I_L1171_178 = 1 + $I_L1171_178
 1171.                               if ( $I_L1171_178 >= t$87 ) exit
 1171.                            enddo
 1171.                         endif
 1171.                      endif
 1171.                      if ( t$86 > 0 ) then
 1171.                         $I_L1171_162 = 0
 1171. !dir$ ivdep
 1171.                         do
 1171.                            sdot(1, 1 + $I_L1171_162) = 0.0
 1171.                            sdot(2, 1 + $I_L1171_162) = 0.0
 1171.                            $I_L1171_162 = 1 + $I_L1171_162
 1171.                            if ( $I_L1171_162 >= t$86 ) exit
 1171.                         enddo
 1171.                         if ( t$87 > 0 ) then
 1171.                            $SI_L1171_164_G7 = 0
 1171.                            do
 1171.                               $I_L1171_186 = 0
 1171. !dir$ ivdep
 1171. !dir$ blocking_size( 0, 0 )
 1171.                               do
 1171.                                  $I_L1171_200 = 0
 1171. !dir$ unroll 4
 1171. !dir$ blocking_size( 256, 256 )
 1171.                                  do
 1171.                                     if ( knit($I_L1171_200 + 256 * $SI_L1171_164_G7 + 1) /= 0 ) then
 1171.                                        sdot(1, 1 + $I_L1171_186) = sdot(1, 1 + $I_L1171_186) + g($I_L1171_200 + 256 * $SI_L1171_164_G7 + 1, 1 + $I_L1171_186) * y(1, $I_L1171_200 + 256 * $SI_L1171_164_G7 + 1)
 1171.                                        sdot(2, 1 + $I_L1171_186) = sdot(2, 1 + $I_L1171_186) + g($I_L1171_200 + 256 * $SI_L1171_164_G7 + 1, 1 + $I_L1171_186) * y(2, $I_L1171_200 + 256 * $SI_L1171_164_G7 + 1)
 1171.                                     endif
 1171.                                     $I_L1171_200 = 1 + $I_L1171_200
 1171.                                     if ( $I_L1171_200 >= min( t$87, 256 + 256 * $SI_L1171_164_G7 ) + -256 * $SI_L1171_164_G7 ) exit
 1171.                                  enddo
 1171.                                  $I_L1171_186 = 1 + $I_L1171_186
 1171.                                  if ( $I_L1171_186 >= t$86 ) exit
 1171.                               enddo
 1171.                               $SI_L1171_164_G7 = 1 + $SI_L1171_164_G7
 1171.                               if ( $SI_L1171_164_G7 >= _rsh( 255 + t$87, 8 ) ) exit
 1171.                            enddo
 1171.                         endif
 1171.                      endif
 1171.                      _free( t$237 )
 1171.                      g(indg(-1 + 2 * $ll_S1, 1 + $I_L1138_198)) = _copyout( g )
 1171.                   endif
 1174.                   if ( jg(2 * $ll_S1, 1 + $I_L1138_198) /= 0 ) then
 1175.                      $ipa_S28 = indper(2 * $ll_S1, 1 + $I_L1138_198)
 1175.                      ipa$628 = loc( g(indg(2 * $ll_S1, 1 + $I_L1138_198)) )
 1175.                      g = _copyin( g(indg(2 * $ll_S1, 1 + $I_L1138_198)) )
 1175.                      t$86 = nas(2 * $ll_S1, 1 + $I_L1138_198)
 1175.                      t$231 = max( 0, t$86 )
 1175.                      t$232 = 2 * t$86
 1175.                      t$87 = jg(2 * $ll_S1, 1 + $I_L1138_198)
 1175.                      t$233 = max( 0, t$87 )
 1175.                      t$234 = t$87
 1175.                      t$235 = t$86 * t$87
 1175.                      t$88 = ( 3 + 3 * mmax ) / 2
 1175.                      t$236 = max( 0, ( 3 + 3 * mmax ) / 2 )
 1175.                      t$239 = 4 * max( 0, ( 3 + 3 * mmax ) / 2 )
 1175.                      t$240 = 2 * max( 0, ( 3 + 3 * mmax ) / 2 )
 1175.                      t$241 = 8 * ( ( 7 + 4 * max( 0, ( 3 + 3 * mmax ) / 2 ) ) / 8 )
 1175.                      t$243 = 8 * ( ( 7 + 4 * max( 0, ( 3 + 3 * mmax ) / 2 ) ) / 8 ) + 16 * max( 0, ( 3 + 3 * mmax ) / 2 )
 1175.                      t$237 = int( _alloc( 8 * ( ( 7 + 4 * max( 0, ( 3 + 3 * mmax ) / 2 ) ) / 8 ) + 16 * max( 0, ( 3 + 3 * mmax ) / 2 ) ), 8 )
 1175.                      t$238 = t$237
 1175.                      t$242 = t$237 + 8 * ( ( 7 + 4 * max( 0, ( 3 + 3 * mmax ) / 2 ) ) / 8 )
 1175.                      if ( t$87 > 0 ) then
 1175.                         $I_L1175_166 = 0
 1175. !dir$ ivdep
 1175.                         do
 1175.                            knit(1 + $I_L1175_166) = 0
 1175.                            y(1, 1 + $I_L1175_166) = 0.0
 1175.                            y(2, 1 + $I_L1175_166) = 0.0
 1175.                            $I_L1175_166 = 1 + $I_L1175_166
 1175.                            if ( $I_L1175_166 >= t$87 ) exit
 1175.                         enddo
 1175.                         if ( t$86 > 0 ) then
 1175.                            $I_L1175_188 = 0
 1175.                            do
 1175.                               $period_S29 = abs( per($ipa_S28 + $I_L1175_188) )
 1175.                               if ( $period_S29 + -v <= 0.0 ) then
 1175.                                  $difcut_S30 = 9.9999999999999995e-8 + dk * real( $mglob_S2 + $I_L1175_188 + ( $mglob_S2 + $I_L1175_188 ) * ( $mglob_S2 + $I_L1175_188 ), 8 ) ** ( ndord / 2 )
 1175.                                  if ( ( 5.0e-1 * 1.0/$difcut_S30 ) + -$period_S29 >= 0.0 ) then
 1175.                                     knit(1 + $I_L1175_188) = ( 1 + $I_L1175_188 )
 1175.                                     $SCA_y_I9 = y(2, 1 + $I_L1175_188)
 1175.                                     $SCA_y_I10 = y(1, 1 + $I_L1175_188)
 1175.                                     $I_L1175_168 = 0
 1175. !dir$ ivdep
 1175.                                     do
 1175.                                        $SCA_y_I10 = $SCA_y_I10 + g(1 + $I_L1175_188, 1 + $I_L1175_168) * adot(1, 1 + $I_L1175_168)
 1175.                                        $SCA_y_I9 = $SCA_y_I9 + g(1 + $I_L1175_188, 1 + $I_L1175_168) * adot(2, 1 + $I_L1175_168)
 1175.                                        $I_L1175_168 = 1 + $I_L1175_168
 1175.                                        if ( $I_L1175_168 >= t$86 ) exit
 1175.                                     enddo
 1175.                                     y(1, 1 + $I_L1175_188) = $SCA_y_I10
 1175.                                     y(2, 1 + $I_L1175_188) = $SCA_y_I9
 1175.                                     $yr_S34 = y(1, 1 + $I_L1175_188)
 1175.                                     y(1, 1 + $I_L1175_188) = per($ipa_S28 + $I_L1175_188) * $SCA_y_I9
 1175.                                     y(2, 1 + $I_L1175_188) = -( per($ipa_S28 + $I_L1175_188) * $yr_S34 )
 1175.                                  endif
 1175.                               endif
 1175.                               $I_L1175_188 = 1 + $I_L1175_188
 1175.                               if ( $I_L1175_188 >= t$87 ) exit
 1175.                            enddo
 1175.                         else
 1175.                            $I_L1175_180 = 0
 1175. !dir$ ivdep
 1175.                            do
 1175.                               $period_S29 = abs( per($ipa_S28 + $I_L1175_180) )
 1175.                               if ( $period_S29 + -v <= 0.0 ) then
 1175.                                  $difcut_S30 = 9.9999999999999995e-8 + dk * real( $mglob_S2 + $I_L1175_180 + ( $mglob_S2 + $I_L1175_180 ) * ( $mglob_S2 + $I_L1175_180 ), 8 ) ** ( ndord / 2 )
 1175.                                  if ( ( 5.0e-1 * 1.0/$difcut_S30 ) + -$period_S29 >= 0.0 ) then
 1175.                                     knit(1 + $I_L1175_180) = ( 1 + $I_L1175_180 )
 1175.                                     $yr_S34 = y(1, 1 + $I_L1175_180)
 1175.                                     $yi_S33 = y(2, 1 + $I_L1175_180)
 1175.                                     y(1, 1 + $I_L1175_180) = per($ipa_S28 + $I_L1175_180) * $yi_S33
 1175.                                     y(2, 1 + $I_L1175_180) = -( per($ipa_S28 + $I_L1175_180) * $yr_S34 )
 1175.                                  endif
 1175.                               endif
 1175.                               $I_L1175_180 = 1 + $I_L1175_180
 1175.                               if ( $I_L1175_180 >= t$87 ) exit
 1175.                            enddo
 1175.                         endif
 1175.                      endif
 1175.                      if ( t$86 > 0 ) then
 1175.                         $I_L1175_170 = 0
 1175. !dir$ ivdep
 1175.                         do
 1175.                            adot(1, 1 + $I_L1175_170) = 0.0
 1175.                            adot(2, 1 + $I_L1175_170) = 0.0
 1175.                            $I_L1175_170 = 1 + $I_L1175_170
 1175.                            if ( $I_L1175_170 >= t$86 ) exit
 1175.                         enddo
 1175.                         if ( t$87 > 0 ) then
 1175.                            $SI_L1175_172_G10 = 0
 1175.                            do
 1175.                               $I_L1175_190 = 0
 1175. !dir$ ivdep
 1175. !dir$ blocking_size( 0, 0 )
 1175.                               do
 1175.                                  $I_L1175_203 = 0
 1175. !dir$ unroll 4
 1175. !dir$ blocking_size( 256, 256 )
 1175.                                  do
 1175.                                     if ( knit($I_L1175_203 + 256 * $SI_L1175_172_G10 + 1) /= 0 ) then
 1175.                                        adot(1, 1 + $I_L1175_190) = adot(1, 1 + $I_L1175_190) + g($I_L1175_203 + 256 * $SI_L1175_172_G10 + 1, 1 + $I_L1175_190) * y(1, $I_L1175_203 + 256 * $SI_L1175_172_G10 + 1)
 1175.                                        adot(2, 1 + $I_L1175_190) = adot(2, 1 + $I_L1175_190) + g($I_L1175_203 + 256 * $SI_L1175_172_G10 + 1, 1 + $I_L1175_190) * y(2, $I_L1175_203 + 256 * $SI_L1175_172_G10 + 1)
 1175.                                     endif
 1175.                                     $I_L1175_203 = 1 + $I_L1175_203
 1175.                                     if ( $I_L1175_203 >= min( t$87, 256 + 256 * $SI_L1175_172_G10 ) + -256 * $SI_L1175_172_G10 ) exit
 1175.                                  enddo
 1175.                                  $I_L1175_190 = 1 + $I_L1175_190
 1175.                                  if ( $I_L1175_190 >= t$86 ) exit
 1175.                               enddo
 1175.                               $SI_L1175_172_G10 = 1 + $SI_L1175_172_G10
 1175.                               if ( $SI_L1175_172_G10 >= _rsh( 255 + t$87, 8 ) ) exit
 1175.                            enddo
 1175.                         endif
 1175.                      endif
 1175.                      _free( t$237 )
 1175.                      g(indg(2 * $ll_S1, 1 + $I_L1138_198)) = _copyout( g )
 1175.                   endif
 1178.                   if ( mmax + -$mglob_S2 > 0 ) then
 1178.                      $I_L1178_192 = 0
 1178.                      do
 1179.                         $lx_S41 = (mymnmap%base_addr)($ll_S1, $mglob_S2 + 2 * $I_L1178_192 + 1, 0)
 1181.                         $I_L1181_174 = 0
 1181. !dir$ ivdep
 1181.                         do
 1182.                            vord(1 + $I_L1181_174, $lx_S41, 1 + $I_L1138_198) = sdot(1 + $I_L1181_174, 1 + $I_L1178_192)
 1183.                            divd(1 + $I_L1181_174, $lx_S41, 1 + $I_L1138_198) = adot(1 + $I_L1181_174, mmax + $I_L1178_192 + ( mmax + -$mglob_S2 + 1 ) / -2 + -$mglob_S2 + 2)
 1184.                            comd(1 + $I_L1181_174, $lx_S41, 1 + $I_L1138_198) = adot(1 + $I_L1181_174, mmax + $I_L1178_192 + -$mglob_S2 + 2)
 1185.                            $I_L1181_174 = 1 + $I_L1181_174
 1181.                            if ( $I_L1181_174 >= 2 ) exit
 1181.                         enddo
 1186.                         $I_L1178_192 = 1 + $I_L1178_192
 1185.                         if ( $I_L1178_192 >= ( mmax + -$mglob_S2 + 1 ) / 2 ) exit
 1185.                      enddo
 1185.                   endif
 1188.                   if ( mmax + -$mglob_S2 >= 0 ) then
 1188.                      $I_L1188_194 = 0
 1188.                      do
 1189.                         $lx_S45 = (mymnmap%base_addr)($ll_S1, $mglob_S2 + 2 * $I_L1188_194, 0)
 1191.                         $I_L1191_176 = 0
 1191. !dir$ ivdep
 1191.                         do
 1192.                            vord(1 + $I_L1191_176, $lx_S45, 1 + $I_L1138_198) = adot(1 + $I_L1191_176, 1 + $I_L1188_194)
 1193.                            divd(1 + $I_L1191_176, $lx_S45, 1 + $I_L1138_198) = sdot(1 + $I_L1191_176, $I_L1188_194 + ( mmax + -$mglob_S2 + 1 ) / 2 + 1)
 1194.                            comd(1 + $I_L1191_176, $lx_S45, 1 + $I_L1138_198) = sdot(1 + $I_L1191_176, mmax + $I_L1188_194 + -$mglob_S2 + 2)
 1195.                            $I_L1191_176 = 1 + $I_L1191_176
 1191.                            if ( $I_L1191_176 >= 2 ) exit
 1191.                         enddo
 1196.                         $I_L1188_194 = 1 + $I_L1188_194
 1195.                         if ( $I_L1188_194 >= ( mmax + -$mglob_S2 + 2 ) / 2 ) exit
 1195.                      enddo
 1195.                   endif
 1197.                   $I_L1139_196 = 1 + $I_L1139_196
 1196.                   if ( $I_L1139_196 >= nms ) exit
 1196.                enddo
 1198.                $I_L1138_198 = 1 + $I_L1138_198
 1197.                if ( $I_L1138_198 >= modsloc ) exit
 1197.             enddo
 1197.          endif
 1197.       endif
 1120.       _free( t$221 )
 1199.       return
 1199.       end
 1199.       
 1201.       
 1201.       subroutine getperg( nas, per, g, jg )
 1201.       t$84 = jg
 1203.       t$227 = _zla( 0, jg )
 1201.       t$85 = nas
 1201.       t$228 = _zla( 0, jg )
 1203.       t$229 = _zla( 0, nas )
 1201.       t$230 = _zla( 0, jg ) * _zla( 0, nas )
 1210.       $Unit_temp_O0 = nfnmi
 1210.       _uread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( per(+:( 1, jg, 1 )), 0x804060300000000L ), _iotype( g(+:( 1, jg, 1 ), +:( 1, nas, 1 )), 0x804060300000000L ) ) )
 1212.       return
 1212.       end
 1212.       
 1221.       
 1221.       subroutine horiz2( dot, nas, per, g, jg, percut, l )
 1221.       t$86 = nas
 1224.       t$231 = _zla( 0, nas )
 1221.       t$232 = 2 * _zla( 0, nas )
 1221.       t$87 = jg
 1225.       t$233 = _zla( 0, jg )
 1221.       t$234 = _zla( 0, jg )
 1221.       t$235 = _zla( 0, nas ) * _zla( 0, jg )
 1221.       t$88 = ( 3 + 3 * mmax ) / 2
 1229.       t$236 = _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1229.       t$239 = 4 * _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1221.       t$240 = 2 * _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1228.       t$241 = 8 * ( ( 7 + 4 * _zla( 0, ( 3 + 3 * mmax ) / 2 ) ) / 8 )
 1228.       t$243 = 8 * ( ( 7 + 4 * _zla( 0, ( 3 + 3 * mmax ) / 2 ) ) / 8 ) + 16 * _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1221.       t$237 = int( _alloc( 8 * ( ( 7 + 4 * _zla( 0, ( 3 + 3 * mmax ) / 2 ) ) / 8 ) + 16 * _zla( 0, ( 3 + 3 * mmax ) / 2 ) ), 8 )
 1229.       t$238 = t$237
 1228.       t$242 = t$237 + 8 * ( ( 7 + 4 * _zla( 0, ( 3 + 3 * mmax ) / 2 ) ) / 8 )
 1239.       if ( jg > 0 ) then
 1239.          $I_L1239_26 = 0
 1239. !dir$ ivdep
 1239.          do
 1240.             knit(1 + $I_L1239_26) = 0
 1241.             y(1, 1 + $I_L1239_26) = 0.0
 1242.             y(2, 1 + $I_L1239_26) = 0.0
 1243.             $I_L1239_26 = 1 + $I_L1239_26
 1239.             if ( $I_L1239_26 >= jg ) exit
 1239.          enddo
 1258.          if ( nas > 0 ) then
 1245.             $I_L1245_42 = 0
 1245.             do
 1247.                $period_S3 = abs( per(1 + $I_L1245_42) )
 1248.                if ( $period_S3 + -percut <= 0.0 ) then
 1254.                   $difcut_S4 = 9.9999999999999995e-8 + dk * real( l + $I_L1245_42 + ( l + $I_L1245_42 + 1 ) * ( l + $I_L1245_42 + 1 ) + 1, 8 ) ** ( ndord / 2 )
 1256.                   if ( ( 5.0e-1 * 1.0/$difcut_S4 ) + -$period_S3 >= 0.0 ) then
 1257.                      knit(1 + $I_L1245_42) = ( 1 + $I_L1245_42 )
 1258.                      $SCA_y_I0 = y(2, 1 + $I_L1245_42)
 1258.                      $SCA_y_I1 = y(1, 1 + $I_L1245_42)
 1258.                      $I_L1258_40 = 0
 1258. !dir$ ivdep
 1258.                      do
 1259.                         $SCA_y_I1 = $SCA_y_I1 + g(1 + $I_L1245_42, 1 + $I_L1258_40) * dot(1, 1 + $I_L1258_40)
 1260.                         $SCA_y_I0 = $SCA_y_I0 + g(1 + $I_L1245_42, 1 + $I_L1258_40) * dot(2, 1 + $I_L1258_40)
 1261.                         $I_L1258_40 = 1 + $I_L1258_40
 1258.                         if ( $I_L1258_40 >= nas ) exit
 1258.                      enddo
 1258.                      y(1, 1 + $I_L1245_42) = $SCA_y_I1
 1258.                      y(2, 1 + $I_L1245_42) = $SCA_y_I0
 1262.                      $yr_S8 = y(1, 1 + $I_L1245_42)
 1264.                      y(1, 1 + $I_L1245_42) = per(1 + $I_L1245_42) * $SCA_y_I0
 1265.                      y(2, 1 + $I_L1245_42) = -( per(1 + $I_L1245_42) * $yr_S8 )
 1265.                   endif
 1265.                endif
 1268.                $I_L1245_42 = 1 + $I_L1245_42
 1267.                if ( $I_L1245_42 >= jg ) exit
 1267.             enddo
 1267.          else
 1245.             $I_L1245_34 = 0
 1245. !dir$ ivdep
 1245.             do
 1247.                $period_S3 = abs( per(1 + $I_L1245_34) )
 1248.                if ( $period_S3 + -percut <= 0.0 ) then
 1254.                   $difcut_S4 = 9.9999999999999995e-8 + dk * real( l + $I_L1245_34 + ( l + $I_L1245_34 + 1 ) * ( l + $I_L1245_34 + 1 ) + 1, 8 ) ** ( ndord / 2 )
 1256.                   if ( ( 5.0e-1 * 1.0/$difcut_S4 ) + -$period_S3 >= 0.0 ) then
 1257.                      knit(1 + $I_L1245_34) = ( 1 + $I_L1245_34 )
 1262.                      $yr_S8 = y(1, 1 + $I_L1245_34)
 1263.                      $yi_S7 = y(2, 1 + $I_L1245_34)
 1264.                      y(1, 1 + $I_L1245_34) = per(1 + $I_L1245_34) * $yi_S7
 1265.                      y(2, 1 + $I_L1245_34) = -( per(1 + $I_L1245_34) * $yr_S8 )
 1265.                   endif
 1265.                endif
 1268.                $I_L1245_34 = 1 + $I_L1245_34
 1267.                if ( $I_L1245_34 >= jg ) exit
 1267.             enddo
 1267.          endif
 1267.       endif
 1269.       if ( nas > 0 ) then
 1269.          $I_L1269_30 = 0
 1269. !dir$ ivdep
 1269.          do
 1270.             dot(1, 1 + $I_L1269_30) = 0.0
 1271.             dot(2, 1 + $I_L1269_30) = 0.0
 1272.             $I_L1269_30 = 1 + $I_L1269_30
 1269.             if ( $I_L1269_30 >= nas ) exit
 1269.          enddo
 1274.          if ( jg > 0 ) then
 1274.             $SI_L1274_32_G2 = 0
 1274.             do
 1273.                $I_L1273_38 = 0
 1273. !dir$ ivdep
 1273. !dir$ blocking_size( 0, 0 )
 1273.                do
 1274.                   $I_L1274_44 = 0
 1274. !dir$ unroll 4
 1274. !dir$ blocking_size( 256, 256 )
 1274.                   do
 1275.                      if ( knit($I_L1274_44 + 256 * $SI_L1274_32_G2 + 1) /= 0 ) then
 1276.                         dot(1, 1 + $I_L1273_38) = dot(1, 1 + $I_L1273_38) + g($I_L1274_44 + 256 * $SI_L1274_32_G2 + 1, 1 + $I_L1273_38) * y(1, $I_L1274_44 + 256 * $SI_L1274_32_G2 + 1)
 1277.                         dot(2, 1 + $I_L1273_38) = dot(2, 1 + $I_L1273_38) + g($I_L1274_44 + 256 * $SI_L1274_32_G2 + 1, 1 + $I_L1273_38) * y(2, $I_L1274_44 + 256 * $SI_L1274_32_G2 + 1)
 1277.                      endif
 1274.                      $I_L1274_44 = 1 + $I_L1274_44
 1278.                      if ( $I_L1274_44 >= min( jg, 256 + 256 * $SI_L1274_32_G2 ) + -256 * $SI_L1274_32_G2 ) exit
 1278.                   enddo
 1280.                   $I_L1273_38 = 1 + $I_L1273_38
 1280.                   if ( $I_L1273_38 >= nas ) exit
 1280.                enddo
 1274.                $SI_L1274_32_G2 = 1 + $SI_L1274_32_G2
 1279.                if ( $SI_L1274_32_G2 >= _rsh( 255 + jg, 8 ) ) exit
 1279.             enddo
 1279.          endif
 1279.       endif
 1221.       _free( t$237 )
 1281.       return
 1281.       end
 1281.       
 1298.       
 1298.       subroutine getmod( slagr, fname, rsettov )
 1298.       t$244 = _len( fname )
 1298.       t$89 = kmax
 1306.       t$245 = _zla( 0, kmax )
 1306.       t$248 = 8 * _zla( 0, kmax )
 1298.       t$246 = int( _alloc( 8 * _zla( 0, kmax ) ), 8 )
 1306.       t$247 = t$246
 1310.       ierr = 0
 1309.       t$766 = nfnmi
 1310.        _substr(t$767,1,7) = 'REPLACE'
 1309.        _substr(t$768,1,10) = 'SEQUENTIAL'
 1309.        _substr(t$769,1,11) = 'UNFORMATTED'
 1310.        _substr(t$770,1,9) = 'READWRITE'
 1309.       t$771(1) = 0x100000000000000L
 1309. !dir$ suppress t$766
 1309.       t$771(2) = int( loc( t$766 ), 8 )
 1309. !dir$ suppress ierr
 1309.       t$771(3) = int( loc( ierr ), 8 )
 1309.       t$771(4) = 0
 1309. !dir$ suppress  _substr(fname,1,max( 0, t$244 ))
 1309.       t$771(5) = int( loc(  _substr(fname,1,_len( fname )) ), 8 )
 1309.       t$771(6) = _len( fname )
 1309. !dir$ suppress  _substr(t$767,1,7)
 1309.       t$771(7) = int( loc(  _substr(t$767,1,7) ), 8 )
 1309.       t$771(8) = 7
 1309. !dir$ suppress  _substr(t$768,1,10)
 1309.       t$771(9) = int( loc(  _substr(t$768,1,10) ), 8 )
 1309.       t$771(10) = 10
 1309. !dir$ suppress  _substr(t$769,1,11)
 1309.       t$771(11) = int( loc(  _substr(t$769,1,11) ), 8 )
 1309.       t$771(12) = 11
 1309.       t$771(13) = 0
 1309.       t$771(14) = 0
 1309.       t$771(16) = 0
 1309. !dir$ suppress  _substr(t$770,1,9)
 1309.       t$771(18) = int( loc(  _substr(t$770,1,9) ), 8 )
 1309.       t$771(19) = 9
 1309.       t$771(20) = 0
 1309.       t$771(22) = 0
 1309.       t$771(24) = 0x2000200000000L
 1309.       t$771(25) = 0
 1309.       t$771(27) = 0
 1309.       t$771(29) = 0
 1309.       t$771(31) = 0
 1309.       t$771(33) = 0
 1309.       t$771(35) = 0
 1309.       t$765 = _open( t$771 )
 1311.       ipa$631 = 8.8817841970012523e-16
 1311.       ipa$632 = 1
 1311.       t$90 = kmax
 1311.       t$249 = max( 0, kmax )
 1311.       t$252 = 8 * max( 0, kmax )
 1311.       t$253 = 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 )
 1311.       t$255 = 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 )
 1311.       t$256 = max( 0, kmax )
 1311.       t$257 = max( 0, kmax ) * max( 0, kmax )
 1311.       t$258 = 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 )
 1311.       t$260 = 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 ) + max( 0, kmax ) * max( 0, kmax ) * 8
 1311.       t$261 = 8 * ( ( 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 ) + max( 0, kmax ) * max( 0, kmax ) * 8 + 7 ) / 8 )
 1311.       t$263 = max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 ) + max( 0, kmax ) * max( 0, kmax ) * 8 + 7 ) / 8 )
 1311.       t$264 = 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 ) + max( 0, kmax ) * max( 0, kmax ) * 8 + 7 ) / 8 ) + 7 ) / 8 )
 1311.       t$266 = max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 ) + max( 0, kmax ) * max( 0, kmax ) * 8 + 7 ) / 8 ) + 7 ) / 8 )
 1311.       t$267 = 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 ) + max( 0, kmax ) * max( 0, kmax ) * 8 + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1311.       t$269 = max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 ) + max( 0, kmax ) * max( 0, kmax ) * 8 + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1311.       t$270 = 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 ) + max( 0, kmax ) * max( 0, kmax ) * 8 + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1311.       t$272 = max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 ) + max( 0, kmax ) * max( 0, kmax ) * 8 + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1311.       t$273 = 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 ) + max( 0, kmax ) * max( 0, kmax ) * 8 + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1311.       t$275 = 8 * max( 0, kmax ) + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 ) + max( 0, kmax ) * max( 0, kmax ) * 8 + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1311.       t$250 = int( _alloc( 8 * max( 0, kmax ) + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 ) + max( 0, kmax ) * max( 0, kmax ) * 8 + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) ), 8 )
 1311.       t$251 = t$250
 1311.       t$254 = t$250 + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 )
 1311.       t$259 = t$250 + 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 )
 1311.       t$262 = t$250 + 8 * ( ( 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 ) + max( 0, kmax ) * max( 0, kmax ) * 8 + 7 ) / 8 )
 1311.       t$265 = t$250 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 ) + max( 0, kmax ) * max( 0, kmax ) * 8 + 7 ) / 8 ) + 7 ) / 8 )
 1311.       t$268 = t$250 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 ) + max( 0, kmax ) * max( 0, kmax ) * 8 + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1311.       t$271 = t$250 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 ) + max( 0, kmax ) * max( 0, kmax ) * 8 + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1311.       t$274 = t$250 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( max( 0, kmax ) * max( 0, kmax ) * 8 + 8 * ( ( 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 7 ) / 8 ) + max( 0, kmax ) * max( 0, kmax ) * 8 + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1311.       if ( rsettov ) then
 1311.          $F_A33 = kmax
 1311.          if ( kmax > 0 ) then
 1311.             $SC_tov_I11 = tov%dim_1%EX
 1311.             $SC_tov_I12 = tov%dim_1%LB
 1311.             $I_L1311_112 = 0
 1311. !dir$ ivdep
 1311.             do
 1311.                to(1 + $I_L1311_112) = (tov%base_addr)($SC_tov_I12 + $I_L1311_112, 0)
 1311.                $I_L1311_112 = 1 + $I_L1311_112
 1311.                if ( $I_L1311_112 >= $F_A33 ) exit
 1311.             enddo
 1311.             $I_L1311_96 = 0
 1311. !dir$ ivdep
 1311.             do
 1311.                $p_S1 = 1000.0 * (sl%base_addr)(1 + $I_L1311_96, 0)
 1311.                if ( 1000.0 * (sl%base_addr)(1 + $I_L1311_96, 0) < 54.748699999999999 ) then
 1311.                   goto 10
 1311.                else if ( $p_S1 <= 226.321 ) then
 1311.                   (tov%base_addr)(1 + $I_L1311_96, 0) = 216.65000000000001
 1311.                else
 1311.    10             continue
 1311.                   if ( $p_S1 < 54.748699999999999 ) then
 1311.                      $height_S2 = 20000.0 + -243580.51987476368 * ( 8.8943894245479915e-1 + -_exp3( log( abs( $p_S1 ) ), $p_S1, -2.9270953893531435e-2 ) )
 1311.                      (tov%base_addr)(1 + $I_L1311_96, 0) = 216.65000000000001 + 1.0e-3 * ( -20000.0 + $height_S2 )
 1311.                   else
 1311.                      $height_S3 = 11880.480800667456 * ( 3.7313952166210886 + -_exp3( log( abs( $p_S1 ) ), $p_S1, 1.9026120030795432e-1 ) )
 1311.                      (tov%base_addr)(1 + $I_L1311_96, 0) = 288.14999999999998 + -6.4999999999999997e-3 * $height_S3
 1311.                   endif
 1311.                endif
 1311.                $I_L1311_96 = 1 + $I_L1311_96
 1311.                if ( $I_L1311_96 >= kmax ) exit
 1311.             enddo
 1311.          endif
 1311.       endif
 1311.       ipa$652 = 1.0
 1311.       call bmcm( ipa$652, slagr )
 1311.       $F_A34 = t$90
 1311.       $F_A35 = t$90
 1311.       if ( and( -$F_A35, -$F_A34 ) < 0 ) then
 1311.          $SC_cm_I13 = cm%dim_1%LB
 1311.          $SC_cm_I14 = cm%dim_2%SM
 1311.          $SC_cm_I15 = cm%dim_2%LB
 1311.          $I_L1311_130 = 0
 1311.          do
 1311.             $I_L1311_114 = 0
 1311. !dir$ ivdep
 1311.             do
 1311.                g(1 + $I_L1311_114, 1 + $I_L1311_130) = 4.05769e13 * (cm%base_addr)($SC_cm_I13 + $I_L1311_114, $SC_cm_I15 + $I_L1311_130, 0)
 1311.                $I_L1311_114 = 1 + $I_L1311_114
 1311.                if ( $I_L1311_114 >= $F_A35 ) exit
 1311.             enddo
 1311.             $I_L1311_130 = 1 + $I_L1311_130
 1311.             if ( $I_L1311_130 >= $F_A34 ) exit
 1311.          enddo
 1311.       endif
 1311.       $F_A36 = t$90
 1311.       $F_A37 = t$90
 1311.       if ( and( -$F_A37, -$F_A36 ) < 0 ) then
 1311.          $SI_L1311_116_G4 = 0
 1311.          do
 1311.             $I_L1311_132 = 0
 1311. !dir$ blocking_size( 0, 0 )
 1311.             do
 1311.                $I_L1311_134 = 0
 1311. !dir$ ivdep
 1311. !dir$ blocking_size( 256, 256 )
 1311.                do
 1311.                   gt($I_L1311_134 + 256 * $SI_L1311_116_G4 + 1, 1 + $I_L1311_132) = g(1 + $I_L1311_132, $I_L1311_134 + 256 * $SI_L1311_116_G4 + 1)
 1311.                   $I_L1311_134 = 1 + $I_L1311_134
 1311.                   if ( $I_L1311_134 >= min( $F_A37, 256 + 256 * $SI_L1311_116_G4 ) + -256 * $SI_L1311_116_G4 ) exit
 1311.                enddo
 1311.                $I_L1311_132 = 1 + $I_L1311_132
 1311.                if ( $I_L1311_132 >= $F_A36 ) exit
 1311.             enddo
 1311.             $SI_L1311_116_G4 = 1 + $SI_L1311_116_G4
 1311.             if ( $SI_L1311_116_G4 >= _rsh( 255 + $F_A37, 8 ) ) exit
 1311.          enddo
 1311.       endif
 1311.       ipa$661 = loc( g(1, 1) )
 1311.       gg = _copyin( g(1, 1) )
 1311.       ipa$663 = loc( eigvc(1, 1) )
 1311.       eigvc = _copyin( eigvc(1, 1) )
 1311.       ipa$665 = loc( eigg(1, 1) )
 1311.       vec = _copyin( eigg(1, 1) )
 1311.       t$151 = kmax
 1311.       t$355 = max( 0, kmax )
 1311.       t$356 = max( 0, kmax )
 1311.       t$357 = max( 0, kmax ) * max( 0, kmax )
 1311.       t$360 = 8 * max( 0, kmax )
 1311.       t$361 = 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 )
 1311.       t$363 = 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 )
 1311.       t$365 = 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax )
 1311.       t$366 = 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 )
 1311.       t$368 = 8 * max( 0, kmax ) + 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 )
 1311.       t$369 = 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 ) + 7 ) / 8 )
 1311.       t$371 = 8 * max( 0, kmax ) + 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 ) + 7 ) / 8 )
 1311.       t$358 = int( _alloc( 8 * max( 0, kmax ) + 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 ) + 7 ) / 8 ) ), 8 )
 1311.       t$359 = t$358
 1311.       t$362 = t$358 + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 )
 1311.       t$364 = t$358 + 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 )
 1311.       t$367 = t$358 + 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 )
 1311.       t$370 = t$358 + 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 ) + 7 ) / 8 )
 1311.       call rg( kmax, kmax, gg(1, 1), eigvr(1), eigvi(1), ipa$632, eigvc(1, 1), ier, ipa$631, wk1(1), wk2(1) )
 1311.       if ( kmax > 0 ) then
 1311.          $I_L1311_120 = 0
 1311.          do
 1311.             col(1 + $I_L1311_120) = -eigvr(1 + $I_L1311_120)
 1311.             soma = 0.0
 1311.             $I_L1311_98 = 0
 1311. !dir$ ivdep
 1311.             do
 1311.                soma = soma + eigvc(1 + $I_L1311_98, 1 + $I_L1311_120) * eigvc(1 + $I_L1311_98, 1 + $I_L1311_120)
 1311.                $I_L1311_98 = 1 + $I_L1311_98
 1311.                if ( $I_L1311_98 >= kmax ) exit
 1311.             enddo
 1311.             $soma_S7 = _recip_sqrt( soma )
 1311.             $I_L1311_100 = 0
 1311. !dir$ ivdep
 1311.             do
 1311.                eigvc(1 + $I_L1311_100, 1 + $I_L1311_120) = $soma_S7 * eigvc(1 + $I_L1311_100, 1 + $I_L1311_120)
 1311.                $I_L1311_100 = 1 + $I_L1311_100
 1311.                if ( $I_L1311_100 >= kmax ) exit
 1311.             enddo
 1311.             $I_L1311_120 = 1 + $I_L1311_120
 1311.             if ( $I_L1311_120 >= kmax ) exit
 1311.          enddo
 1311.          $I_L1311_122 = 0
 1311.          do
 1311.             $W1 = kmax
 1311.             $W2 = 1
 1311.             $Maxmin_x_W0 = _idamax( $W1, col(1), $W2 )
 1311.             $kkk_S10 = cvmg( $Maxmin_x_W0, 0, abs( col($Maxmin_x_W0) ) > -1.0e20 )
 1311.             gh(1 + $I_L1311_122) = col($kkk_S10)
 1311.             col($kkk_S10) = 0.0
 1311.             $I_L1311_102 = 0
 1311. !dir$ ivdep
 1311.             do
 1311.                vec(1 + $I_L1311_102, 1 + $I_L1311_122) = eigvc(1 + $I_L1311_102, $kkk_S10)
 1311.                $I_L1311_102 = 1 + $I_L1311_102
 1311.                if ( $I_L1311_102 >= kmax ) exit
 1311.             enddo
 1311.             $I_L1311_122 = 1 + $I_L1311_122
 1311.             if ( $I_L1311_122 >= kmax ) exit
 1311.          enddo
 1311.       endif
 1311.       _free( t$358 )
 1311.       eigg(1, 1) = _copyout( vec )
 1311.       eigvc(1, 1) = _copyout( eigvc )
 1311.       g(1, 1) = _copyout( gg )
 1311.       ipa$687 = loc( gt(1, 1) )
 1311.       gg = _copyin( gt(1, 1) )
 1311.       ipa$689 = loc( eigvc(1, 1) )
 1311.       eigvc = _copyin( eigvc(1, 1) )
 1311.       ipa$691 = loc( eiggt(1, 1) )
 1311.       vec = _copyin( eiggt(1, 1) )
 1311.       t$151 = kmax
 1311.       t$355 = max( 0, kmax )
 1311.       t$356 = max( 0, kmax )
 1311.       t$357 = max( 0, kmax ) * max( 0, kmax )
 1311.       t$360 = 8 * max( 0, kmax )
 1311.       t$361 = 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 )
 1311.       t$363 = 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 )
 1311.       t$365 = 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax )
 1311.       t$366 = 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 )
 1311.       t$368 = 8 * max( 0, kmax ) + 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 )
 1311.       t$369 = 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 ) + 7 ) / 8 )
 1311.       t$371 = 8 * max( 0, kmax ) + 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 ) + 7 ) / 8 )
 1311.       t$358 = int( _alloc( 8 * max( 0, kmax ) + 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 ) + 7 ) / 8 ) ), 8 )
 1311.       t$359 = t$358
 1311.       t$362 = t$358 + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 )
 1311.       t$364 = t$358 + 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 )
 1311.       t$367 = t$358 + 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 )
 1311.       t$370 = t$358 + 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 ) + 7 ) / 8 )
 1311.       call rg( kmax, kmax, gg(1, 1), eigvr(1), eigvi(1), ipa$632, eigvc(1, 1), ier, ipa$631, wk1(1), wk2(1) )
 1311.       if ( kmax > 0 ) then
 1311.          $I_L1311_124 = 0
 1311.          do
 1311.             col(1 + $I_L1311_124) = eigvr(1 + $I_L1311_124)
 1311.             soma = 0.0
 1311.             $I_L1311_104 = 0
 1311. !dir$ ivdep
 1311.             do
 1311.                soma = soma + eigvc(1 + $I_L1311_104, 1 + $I_L1311_124) * eigvc(1 + $I_L1311_104, 1 + $I_L1311_124)
 1311.                $I_L1311_104 = 1 + $I_L1311_104
 1311.                if ( $I_L1311_104 >= kmax ) exit
 1311.             enddo
 1311.             $soma_S16 = _recip_sqrt( soma )
 1311.             $I_L1311_106 = 0
 1311. !dir$ ivdep
 1311.             do
 1311.                eigvc(1 + $I_L1311_106, 1 + $I_L1311_124) = $soma_S16 * eigvc(1 + $I_L1311_106, 1 + $I_L1311_124)
 1311.                $I_L1311_106 = 1 + $I_L1311_106
 1311.                if ( $I_L1311_106 >= kmax ) exit
 1311.             enddo
 1311.             $I_L1311_124 = 1 + $I_L1311_124
 1311.             if ( $I_L1311_124 >= kmax ) exit
 1311.          enddo
 1311.          $I_L1311_126 = 0
 1311.          do
 1311.             $W3 = kmax
 1311.             $W4 = 1
 1311.             $Maxmin_x_W0 = _idamax( $W3, col(1), $W4 )
 1311.             $kkk_S19 = cvmg( $Maxmin_x_W0, 0, abs( col($Maxmin_x_W0) ) > -1.0e20 )
 1311.             dotpro(1 + $I_L1311_126) = col($kkk_S19)
 1311.             col($kkk_S19) = 0.0
 1311.             $I_L1311_108 = 0
 1311. !dir$ ivdep
 1311.             do
 1311.                vec(1 + $I_L1311_108, 1 + $I_L1311_126) = eigvc(1 + $I_L1311_108, $kkk_S19)
 1311.                $I_L1311_108 = 1 + $I_L1311_108
 1311.                if ( $I_L1311_108 >= kmax ) exit
 1311.             enddo
 1311.             $I_L1311_126 = 1 + $I_L1311_126
 1311.             if ( $I_L1311_126 >= kmax ) exit
 1311.          enddo
 1311.       endif
 1311.       _free( t$358 )
 1311.       eiggt(1, 1) = _copyout( vec )
 1311.       eigvc(1, 1) = _copyout( eigvc )
 1311.       gt(1, 1) = _copyout( gg )
 1311.       if ( kmax > 0 ) then
 1311.          $I_L1311_128 = 0
 1311.          do
 1311.             soma = 0.0
 1311.             $I_L1311_110 = 0
 1311. !dir$ ivdep
 1311.             do
 1311.                soma = soma + eigg(1 + $I_L1311_110, 1 + $I_L1311_128) * eiggt(1 + $I_L1311_110, 1 + $I_L1311_128)
 1311.                $I_L1311_110 = 1 + $I_L1311_110
 1311.                if ( $I_L1311_110 >= kmax ) exit
 1311.             enddo
 1311.             dotpro(1 + $I_L1311_128) = 1.0/soma
 1311.             $I_L1311_128 = 1 + $I_L1311_128
 1311.             if ( $I_L1311_128 >= kmax ) exit
 1311.          enddo
 1311.       endif
 1311.       $Unit_temp_O0 = nfnmi
 1311.       _uwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( eigg(+:( 1, t$90, 1 ), +:( 1, t$90, 1 )), 0x804060300000000L ), _iotype( eiggt(+:( 1, t$90, 1 ), +:( 1, t$90, 1 )), 0x804060300000000L ), _iotype( gh(+:( 1, t$90, 1 )), 0x804060300000000L ), _iotype( dotpro(+:( 1, t$90, 1 )), 0x804060300000000L ), _iotype( (tov%base_addr)(+:( tov%dim_1%LB, tov%dim_1%LB + tov%dim_1%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1311.       if ( rsettov ) then
 1311.          $F_A38 = t$90
 1311.          if ( t$90 > 0 ) then
 1311.             $SC_tov_I11 = tov%dim_1%EX
 1311.             $SC_tov_I12 = tov%dim_1%LB
 1311.             $I_L1311_118 = 0
 1311. !dir$ ivdep
 1311.             do
 1311.                (tov%base_addr)($SC_tov_I12 + $I_L1311_118, 0) = to(1 + $I_L1311_118)
 1311.                $I_L1311_118 = 1 + $I_L1311_118
 1311.                if ( $I_L1311_118 >= $F_A38 ) exit
 1311.             enddo
 1311.          endif
 1311.       endif
 1311.       _free( t$250 )
 1315. !dir$ suppress gh(1)
 1315.       t$772%base_addr = pointer to array[1] of real (kind=8)( loc( gh(1) ) )
 1315.       t$772%header%el_len = 64
 1315.       t$772%header%assoc = 1
 1315.       t$772%header%ptr_alloc = 0
 1315.       t$772%header%p_or_a = 0
 1315.       t$772%header%a_contig = 1
 1315.       t$772%header%dv_versn = 2
 1315.       t$772%header%dv_smunit = 64
 1315.       t$772%header%d_type = 0
 1315.       t$772%header%n_params = 0
 1315.       t$772%header%pad_codim = 0
 1315.       t$772%header%n_codim = 0
 1315.       t$772%header%pad_dim = 0
 1315.       t$772%header%n_dim = 1
 1315.       t$772%header%d_type_idx = 13
 1315.       t$772%header%typ_code = 134481411
 1315.       t$772%header%orig_base = 0
 1315.       t$772%header%orig_size = 0
 1315.       t$772%dim_1%LB = 1
 1315.       t$772%dim_1%EX = _zla( 0, t$89 )
 1315.       t$772%dim_1%SM = 1
 1315.       call setmods( t$772 )
 1317.       ipa$707 = 8.8817841970012523e-16
 1317.       call hormod( gh(1), ipa$707 )
 1318.       t$766 = nfnmi
 1318.       t$774(1) = 0x100000000000000L
 1318. !dir$ suppress t$766
 1318.       t$774(2) = int( loc( t$766 ), 8 )
 1318.       t$774(3) = 0
 1318.       t$774(4) = 0
 1318.       t$774(5) = 0
 1318.       t$774(7) = 0
 1318.       t$774(8) = 0
 1318.       t$773 = _close( t$774 )
 1298.       _free( t$246 )
 1319.       return
 1319.       end
 1319.       
 1377.       
 1377.       subroutine vermod( gh, eps, matz, slagr, rsettov )
 1326.       t$90 = kmax
 1327.       t$249 = _zla( 0, kmax )
 1344.       t$252 = 8 * _zla( 0, kmax )
 1342.       t$253 = 8 * _zla( 0, kmax )
 1342.       t$255 = 16 * _zla( 0, kmax )
 1326.       t$256 = _zla( 0, kmax )
 1326.       t$257 = _zla( 0, kmax ) * _zla( 0, kmax )
 1339.       t$258 = 16 * _zla( 0, kmax )
 1339.       t$260 = 16 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 8
 1340.       t$261 = 16 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 8
 1340.       t$263 = 16 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 16
 1341.       t$264 = 16 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 16
 1341.       t$266 = 16 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 24
 1345.       t$267 = 16 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 24
 1345.       t$269 = 16 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 32
 1346.       t$270 = 16 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 32
 1346.       t$272 = 16 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 40
 1343.       t$273 = 16 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 40
 1343.       t$275 = _zla( 0, kmax ) * _zla( 0, kmax ) * 40 + 24 * _zla( 0, kmax )
 1326.       t$250 = int( _alloc( _zla( 0, kmax ) * _zla( 0, kmax ) * 40 + 24 * _zla( 0, kmax ) ), 8 )
 1344.       t$251 = t$250
 1342.       t$254 = t$250 + 8 * _zla( 0, kmax )
 1339.       t$259 = t$250 + 16 * _zla( 0, kmax )
 1340.       t$262 = t$250 + 16 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 8
 1341.       t$265 = t$250 + 16 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 16
 1345.       t$268 = t$250 + 16 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 24
 1346.       t$271 = t$250 + 16 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 32
 1343.       t$274 = t$250 + 16 * _zla( 0, kmax ) + _zla( 0, kmax ) * _zla( 0, kmax ) * 40
 1348.       if ( rsettov ) then
 1349.          $F_A33 = kmax
 1349.          if ( kmax > 0 ) then
 1349.             $SC_tov_I11 = tov%dim_1%EX
 1349.             $SC_tov_I12 = tov%dim_1%LB
 1349.             $I_L1349_70 = 0
 1349. !dir$ ivdep
 1349.             do
 1349.                to(1 + $I_L1349_70) = (tov%base_addr)($SC_tov_I12 + $I_L1349_70, 0)
 1349.                $I_L1349_70 = 1 + $I_L1349_70
 1349.                if ( $I_L1349_70 >= $F_A33 ) exit
 1349.             enddo
 1350.             $I_L1350_60 = 0
 1350. !dir$ ivdep
 1350.             do
 1351.                $p_S1 = 1000.0 * (sl%base_addr)(1 + $I_L1350_60, 0)
 1352.                if ( 1000.0 * (sl%base_addr)(1 + $I_L1350_60, 0) < 54.748699999999999 ) then
 1350.                   goto 10
 1352.                else if ( $p_S1 <= 226.321 ) then
 1352.                   (tov%base_addr)(1 + $I_L1350_60, 0) = 216.65000000000001
 1352.                else
 1352.    10             continue
 1352.                   if ( $p_S1 < 54.748699999999999 ) then
 1352.                      $height_S2 = 20000.0 + -243580.51987476368 * ( 8.8943894245479915e-1 + -_exp3( log( abs( $p_S1 ) ), $p_S1, -2.9270953893531435e-2 ) )
 1352.                      (tov%base_addr)(1 + $I_L1350_60, 0) = 216.65000000000001 + 1.0e-3 * ( -20000.0 + $height_S2 )
 1352.                   else
 1352.                      $height_S3 = 11880.480800667456 * ( 3.7313952166210886 + -_exp3( log( abs( $p_S1 ) ), $p_S1, 1.9026120030795432e-1 ) )
 1352.                      (tov%base_addr)(1 + $I_L1350_60, 0) = 288.14999999999998 + -6.4999999999999997e-3 * $height_S3
 1352.                   endif
 1352.                endif
 1353.                $I_L1350_60 = 1 + $I_L1350_60
 1352.                if ( $I_L1350_60 >= kmax ) exit
 1352.             enddo
 1352.          endif
 1352.       endif
 1355.       ipa$776 = 1.0
 1355.       call bmcm( ipa$776, slagr )
 1357.       $F_A34 = t$90
 1357.       $F_A35 = t$90
 1357.       if ( and( -$F_A35, -$F_A34 ) < 0 ) then
 1357.          $SC_cm_I13 = cm%dim_1%LB
 1357.          $SC_cm_I14 = cm%dim_2%SM
 1357.          $SC_cm_I15 = cm%dim_2%LB
 1357.          $I_L1357_84 = 0
 1357.          do
 1357.             $I_L1357_72 = 0
 1357. !dir$ ivdep
 1357.             do
 1357.                g(1 + $I_L1357_72, 1 + $I_L1357_84) = 4.05769e13 * (cm%base_addr)($SC_cm_I13 + $I_L1357_72, $SC_cm_I15 + $I_L1357_84, 0)
 1357.                $I_L1357_72 = 1 + $I_L1357_72
 1357.                if ( $I_L1357_72 >= $F_A35 ) exit
 1357.             enddo
 1357.             $I_L1357_84 = 1 + $I_L1357_84
 1357.             if ( $I_L1357_84 >= $F_A34 ) exit
 1357.          enddo
 1357.       endif
 1358.       $F_A36 = t$90
 1358.       $F_A37 = t$90
 1358.       if ( and( -$F_A37, -$F_A36 ) < 0 ) then
 1358.          $SI_L1358_74_G3 = 0
 1358.          do
 1358.             $I_L1358_86 = 0
 1358. !dir$ blocking_size( 0, 0 )
 1358.             do
 1358.                $I_L1358_88 = 0
 1358. !dir$ ivdep
 1358. !dir$ blocking_size( 256, 256 )
 1358.                do
 1358.                   gt($I_L1358_88 + 256 * $SI_L1358_74_G3 + 1, 1 + $I_L1358_86) = g(1 + $I_L1358_86, $I_L1358_88 + 256 * $SI_L1358_74_G3 + 1)
 1358.                   $I_L1358_88 = 1 + $I_L1358_88
 1358.                   if ( $I_L1358_88 >= min( $F_A37, 256 + 256 * $SI_L1358_74_G3 ) + -256 * $SI_L1358_74_G3 ) exit
 1358.                enddo
 1358.                $I_L1358_86 = 1 + $I_L1358_86
 1358.                if ( $I_L1358_86 >= $F_A36 ) exit
 1358.             enddo
 1358.             $SI_L1358_74_G3 = 1 + $SI_L1358_74_G3
 1358.             if ( $SI_L1358_74_G3 >= _rsh( 255 + $F_A37, 8 ) ) exit
 1358.          enddo
 1358.       endif
 1360.       ipa$793 = loc( g(1, 1) )
 1360.       gg = _copyin( g(1, 1) )
 1360.       ipa$795 = loc( eigvc(1, 1) )
 1360.       eigvc = _copyin( eigvc(1, 1) )
 1360.       ipa$797 = loc( eigg(1, 1) )
 1360.       vec = _copyin( eigg(1, 1) )
 1360.       t$151 = kmax
 1360.       t$355 = max( 0, kmax )
 1360.       t$356 = max( 0, kmax )
 1360.       t$357 = max( 0, kmax ) * max( 0, kmax )
 1360.       t$360 = 8 * max( 0, kmax )
 1360.       t$361 = 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 )
 1360.       t$363 = 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 )
 1360.       t$365 = 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax )
 1360.       t$366 = 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 )
 1360.       t$368 = 8 * max( 0, kmax ) + 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 )
 1360.       t$369 = 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 ) + 7 ) / 8 )
 1360.       t$371 = 8 * max( 0, kmax ) + 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 ) + 7 ) / 8 )
 1360.       t$358 = int( _alloc( 8 * max( 0, kmax ) + 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 ) + 7 ) / 8 ) ), 8 )
 1360.       t$359 = t$358
 1360.       t$362 = t$358 + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 )
 1360.       t$364 = t$358 + 8 * max( 0, kmax ) + 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 )
 1360.       t$367 = t$358 + 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 )
 1360.       t$370 = t$358 + 8 * ( ( 8 * max( 0, kmax ) + 8 * ( ( 8 * ( ( 7 + 8 * max( 0, kmax ) ) / 8 ) + 12 * max( 0, kmax ) + 7 ) / 8 ) + 7 ) / 8 )
 1360.       call rg( kmax, kmax, gg(1, 1), eigvr(1), eigvi(1), matz, eigvc(1, 1), ier, eps, wk1(1), wk2(1) )
 1360.       if ( kmax > 0 ) then
 1360.          $I_L1360_78 = 0
 1360.          do
 1360.             col(1 + $I_L1360_78) = -eigvr(1 + $I_L1360_78)
 1360.             soma = 0.0
 1360.             $I_L1360_62 = 0
 1360. !dir$ ivdep
 1360.             do
 1360.                soma = soma + eigvc(1 + $I_L1360_62, 1 + $I_L1360_78) * eigvc(1 + $I_L1360_62, 1 + $I_L1360_78)
 1360.                $I_L1360_62 = 1 + $I_L1360_62
 1360.                if ( $I_L1360_62 >= kmax ) exit
 1360.             enddo
 1360.             $soma_S7 = _recip_sqrt( soma )
 1360.             $I_L1360_64 = 0
 1360. !dir$ ivdep
 1360.             do
 1360.                eigvc(1 + $I_L1360_64, 1 + $I_L1360_78) = $soma_S7 * eigvc(1 + $I_L1360_64, 1 + $I_L1360_78)
 1360.                $I_L1360_64 = 1 + $I_L1360_64
 1360.                if ( $I_L1360_64 >= kmax ) exit
 1360.             enddo
 1360.             $I_L1360_78 = 1 + $I_L1360_78
 1360.             if ( $I_L1360_78 >= kmax ) exit
 1360.          enddo
 1360.          $I_L1360_80 = 0
 1360.          do
 1360.             $W1 = kmax
 1360.             $W2 = 1
 1360.             $Maxmin_x_W0 = _idamax( $W1, col(1), $W2 )
 1360.             $kkk_S10 = cvmg( $Maxmin_x_W0, 0, abs( col($Maxmin_x_W0) ) > -1.0e20 )
 1360.             gh(1 + $I_L1360_80) = col($kkk_S10)
 1360.             col($kkk_S10) = 0.0
 1360.             $I_L1360_66 = 0
 1360. !dir$ ivdep
 1360.             do
 1360.                vec(1 + $I_L1360_66, 1 + $I_L1360_80) = eigvc(1 + $I_L1360_66, $kkk_S10)
 1360.                $I_L1360_66 = 1 + $I_L1360_66
 1360.                if ( $I_L1360_66 >= kmax ) exit
 1360.             enddo
 1360.             $I_L1360_80 = 1 + $I_L1360_80
 1360.             if ( $I_L1360_80 >= kmax ) exit
 1360.          enddo
 1360.       endif
 1360.       _free( t$358 )
 1360.       eigg(1, 1) = _copyout( vec )
 1360.       eigvc(1, 1) = _copyout( eigvc )
 1360.       g(1, 1) = _copyout( gg )
 1361.       siman = 1.0
 1362.       call vereig( gt(1, 1), siman, eigvc(1, 1), col(1), eiggt(1, 1), dotpro(1), eps, matz )
 1366.       if ( kmax > 0 ) then
 1366.          $I_L1366_82 = 0
 1366.          do
 1367.             soma = 0.0
 1368.             $I_L1368_68 = 0
 1368. !dir$ ivdep
 1368.             do
 1369.                soma = soma + eigg(1 + $I_L1368_68, 1 + $I_L1366_82) * eiggt(1 + $I_L1368_68, 1 + $I_L1366_82)
 1370.                $I_L1368_68 = 1 + $I_L1368_68
 1368.                if ( $I_L1368_68 >= kmax ) exit
 1368.             enddo
 1371.             dotpro(1 + $I_L1366_82) = 1.0/soma
 1372.             $I_L1366_82 = 1 + $I_L1366_82
 1370.             if ( $I_L1366_82 >= kmax ) exit
 1370.          enddo
 1370.       endif
 1373.       $Unit_temp_O0 = nfnmi
 1373.       _uwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( eigg(+:( 1, t$90, 1 ), +:( 1, t$90, 1 )), 0x804060300000000L ), _iotype( eiggt(+:( 1, t$90, 1 ), +:( 1, t$90, 1 )), 0x804060300000000L ), _iotype( gh(+:( 1, t$90, 1 )), 0x804060300000000L ), _iotype( dotpro(+:( 1, t$90, 1 )), 0x804060300000000L ), _iotype( (tov%base_addr)(+:( tov%dim_1%LB, tov%dim_1%LB + tov%dim_1%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1374.       if ( rsettov ) then
 1375.          $F_A38 = t$90
 1375.          if ( t$90 > 0 ) then
 1375.             $SC_tov_I11 = tov%dim_1%EX
 1375.             $SC_tov_I12 = tov%dim_1%LB
 1375.             $I_L1375_76 = 0
 1375. !dir$ ivdep
 1375.             do
 1375.                (tov%base_addr)($SC_tov_I12 + $I_L1375_76, 0) = to(1 + $I_L1375_76)
 1375.                $I_L1375_76 = 1 + $I_L1375_76
 1375.                if ( $I_L1375_76 >= $F_A38 ) exit
 1375.             enddo
 1375.          endif
 1375.       endif
 1326.       _free( t$250 )
 1377.       return
 1377.       end
 1377.       
 1384.       
 1384.       subroutine hormod( gh, eps )
 1384.       t$91 = mods
 1386.       t$276 = _zla( 0, mods )
 1384.       t$92 = mmax
 1408.       t$277 = _zla( 0, mmax )
 1408.       t$280 = 8 * _zla( 0, mmax )
 1409.       t$281 = 8 * _zla( 0, mmax )
 1409.       t$283 = 16 * _zla( 0, mmax )
 1411.       t$284 = 16 * _zla( 0, mmax )
 1411.       t$286 = 24 * _zla( 0, mmax )
 1384.       t$94 = ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2
 1420.       t$287 = _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 )
 1420.       t$288 = 24 * _zla( 0, mmax )
 1420.       t$290 = 24 * _zla( 0, mmax ) + 8 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 )
 1419.       t$291 = 24 * _zla( 0, mmax ) + 8 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 )
 1419.       t$293 = 24 * _zla( 0, mmax ) + 16 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 )
 1410.       t$294 = 24 * _zla( 0, mmax ) + 16 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 )
 1410.       t$296 = 16 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 ) + 32 * _zla( 0, mmax )
 1412.       t$297 = 16 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 ) + 32 * _zla( 0, mmax )
 1412.       t$299 = 16 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 ) + 40 * _zla( 0, mmax )
 1384.       t$93 = ( 3 + 3 * mmax ) / 2
 1416.       t$300 = _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1416.       t$301 = 16 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 ) + 40 * _zla( 0, mmax )
 1416.       t$303 = 16 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 ) + 40 * _zla( 0, mmax ) + 8 * _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1414.       t$304 = 16 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 ) + 40 * _zla( 0, mmax ) + 8 * _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1414.       t$306 = 16 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 ) + 40 * _zla( 0, mmax ) + 16 * _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1415.       t$307 = 16 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 ) + 40 * _zla( 0, mmax ) + 16 * _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1415.       t$309 = 16 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 ) + 40 * _zla( 0, mmax ) + 24 * _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1418.       t$310 = 16 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 ) + 40 * _zla( 0, mmax ) + 24 * _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1418.       t$312 = 40 * _zla( 0, mmax ) + 24 * _zla( 0, ( 3 + 3 * mmax ) / 2 ) + 24 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 )
 1417.       t$313 = 40 * _zla( 0, mmax ) + 24 * _zla( 0, ( 3 + 3 * mmax ) / 2 ) + 24 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 )
 1417.       t$315 = 40 * _zla( 0, mmax ) + 24 * _zla( 0, ( 3 + 3 * mmax ) / 2 ) + 32 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 )
 1384.       t$316 = _zla( 0, mmax )
 1384.       t$317 = _zla( 0, mmax ) * _zla( 0, mmax )
 1413.       t$318 = 40 * _zla( 0, mmax ) + 24 * _zla( 0, ( 3 + 3 * mmax ) / 2 ) + 32 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 )
 1413.       t$320 = 40 * _zla( 0, mmax ) + 24 * _zla( 0, ( 3 + 3 * mmax ) / 2 ) + 32 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 ) + _zla( 0, mmax ) * _zla( 0, mmax ) * 8
 1384.       t$278 = int( _alloc( 40 * _zla( 0, mmax ) + 24 * _zla( 0, ( 3 + 3 * mmax ) / 2 ) + 32 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 ) + _zla( 0, mmax ) * _zla( 0, mmax ) * 8 ), 8 )
 1408.       t$279 = t$278
 1409.       t$282 = t$278 + 8 * _zla( 0, mmax )
 1411.       t$285 = t$278 + 16 * _zla( 0, mmax )
 1420.       t$289 = t$278 + 24 * _zla( 0, mmax )
 1419.       t$292 = t$278 + 24 * _zla( 0, mmax ) + 8 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 )
 1410.       t$295 = t$278 + 24 * _zla( 0, mmax ) + 16 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 )
 1412.       t$298 = t$278 + 16 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 ) + 32 * _zla( 0, mmax )
 1416.       t$302 = t$278 + 16 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 ) + 40 * _zla( 0, mmax )
 1414.       t$305 = t$278 + 16 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 ) + 40 * _zla( 0, mmax ) + 8 * _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1415.       t$308 = t$278 + 16 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 ) + 40 * _zla( 0, mmax ) + 16 * _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1418.       t$311 = t$278 + 16 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 ) + 40 * _zla( 0, mmax ) + 24 * _zla( 0, ( 3 + 3 * mmax ) / 2 )
 1417.       t$314 = t$278 + 40 * _zla( 0, mmax ) + 24 * _zla( 0, ( 3 + 3 * mmax ) / 2 ) + 24 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 )
 1413.       t$319 = t$278 + 40 * _zla( 0, mmax ) + 24 * _zla( 0, ( 3 + 3 * mmax ) / 2 ) + 32 * _zla( 0, ( 3 * ( ( 3 + 3 * mmax ) / 2 ) + mmax * ( ( 3 + 3 * mmax ) / 2 ) * 3 ) / 2 )
 1428.       nxsy = 3 * ( ( mmax + mod( -1 + mmax, 2 ) + -1 ) / 2 ) + -2 * mod( -1 + mmax, 2 ) + 2
 1429.       nxas = -mod( -1 + mmax, 2 ) + 3 * ( ( mmax + mod( -1 + mmax, 2 ) + -1 ) / 2 ) + 1
 1430.       $t_S20 = mods
 1430.       if ( mods > 0 ) then
 1430.          $I_L1430_298 = 0
 1430.          do
 1431.             $t_S19 = mmax
 1431.             if ( mmax > 0 ) then
 1431.                $I_L1431_296 = 0
 1431.                do
 1433.                   nlx = ( mmax + -$I_L1431_296 + -1 )
 1434.                   nmd = mod( ( mmax + -$I_L1431_296 + -1 ), 2 )
 1435.                   lmax = ( mmax + mod( ( mmax + -$I_L1431_296 + -1 ), 2 ) + -$I_L1431_296 + -1 ) / 2
 1436.                   mmmax = ( mmax + mod( ( mmax + -$I_L1431_296 + -1 ), 2 ) + -$I_L1431_296 + -1 ) / 2 + -mod( ( mmax + -$I_L1431_296 + -1 ), 2 ) + 1
 1437.                   klmx = -mod( ( mmax + -$I_L1431_296 + -1 ), 2 ) + 2 * ( ( mmax + mod( ( mmax + -$I_L1431_296 + -1 ), 2 ) + -$I_L1431_296 + -1 ) / 2 ) + 1
 1438.                   nsy = ( 3 * ( ( mmax + mod( ( mmax + -$I_L1431_296 + -1 ), 2 ) + -$I_L1431_296 + -1 ) / 2 ) + -2 * mod( ( mmax + -$I_L1431_296 + -1 ), 2 ) + 2 )
 1439.                   nas = ( -mod( ( mmax + -$I_L1431_296 + -1 ), 2 ) + 3 * ( ( mmax + mod( ( mmax + -$I_L1431_296 + -1 ), 2 ) + -$I_L1431_296 + -1 ) / 2 ) + 1 )
 1441.                   if ( ( mmax + -$I_L1431_296 ) > 0 ) then
 1441.                      $I_L1441_210 = 0
 1441. !dir$ ivdep
 1441.                      do
 1442.                         $rn_S2 = real( $I_L1431_296, 8 ) + real( $I_L1441_210, 8 )
 1443.                         if ( ( real( $I_L1431_296, 8 ) + real( $I_L1441_210, 8 ) ) == 0.0 ) then
 1444.                            alfa(1 + $I_L1441_210) = 0.0
 1445.                            beta(1 + $I_L1441_210) = 0.0
 1446.                            gama(1 + $I_L1441_210) = 0.0
 1446.                         else
 1448.                            alfa(1 + $I_L1441_210) = ( 1.0/( $rn_S2 * ( 1.0 + $rn_S2 ) ) * real( $I_L1431_296, 8 ) * 1.4584919999999999e-4 )
 1449.                            beta(1 + $I_L1441_210) = ( 1.4584919999999999e-4 * 1.0/$rn_S2 ) * _sqrt( ( -1.0 + $rn_S2 * $rn_S2 ) * ( $rn_S2 * $rn_S2 + -( real( $I_L1431_296, 8 ) * real( $I_L1431_296, 8 ) ) ) * 1.0/( -1.0 + $rn_S2 * $rn_S2 * 4.0 ) )
 1451.                            gama(1 + $I_L1441_210) = 1.5698587127158556e-7 * _sqrt( $rn_S2 * ( 1.0 + $rn_S2 ) * gh(1 + $I_L1430_298) )
 1451.                         endif
 1453.                         $I_L1441_210 = 1 + $I_L1441_210
 1452.                         if ( $I_L1441_210 >= mmax + -$I_L1431_296 ) exit
 1452.                      enddo
 1452.                   endif
 1454.                   if ( $I_L1431_296 == 0 ) then
 1458.                      t$126 = nxsy
 1458.                      t$346 = max( 0, nxsy )
 1458.                      t$347 = nxsy
 1458.                      t$348 = nxsy
 1458.                      t$127 = mmax
 1458.                      t$349 = max( 0, mmax )
 1458.                      t$350 = mmax
 1458.                      t$351 = mmax
 1458.                      sdg(1) = 0.0
 1458.                      dgl(1) = beta(3) * beta(3) + beta(4) * beta(4) + gama(3) * gama(3)
 1458.                      nmx = -1 + ( mmax + mod( ( -1 + mmax ), 2 ) + -1 ) / 2
 1458.                      if ( -3 + ( mmax + mod( ( -1 + mmax ), 2 ) + -1 ) / 2 >= 0 ) then
 1458.                         $I_L1458_212 = 0
 1458. !dir$ ivdep
 1458.                         do
 1458.                            sdg(2 + $I_L1458_212) = beta(4 + 2 * $I_L1458_212) * beta(5 + 2 * $I_L1458_212)
 1458.                            dgl(2 + $I_L1458_212) = beta(5 + 2 * $I_L1458_212) * beta(5 + 2 * $I_L1458_212) + beta(6 + 2 * $I_L1458_212) * beta(6 + 2 * $I_L1458_212) + gama(5 + 2 * $I_L1458_212) * gama(5 + 2 * $I_L1458_212)
 1458.                            $I_L1458_212 = 1 + $I_L1458_212
 1458.                            if ( $I_L1458_212 >= -2 + ( mmax + mod( ( -1 + mmax ), 2 ) + -1 ) / 2 ) exit
 1458.                         enddo
 1458.                      endif
 1458.                      if ( mod( ( -1 + mmax ), 2 ) == 0 ) then
 1458.                         nmx = ( mmax + mod( ( -1 + mmax ), 2 ) + -1 ) / 2
 1458.                         sdg(( mmax + mod( ( -1 + mmax ), 2 ) + -1 ) / 2) = beta(2 * ( ( mmax + mod( ( -1 + mmax ), 2 ) + -1 ) / 2 )) * beta(1 + 2 * ( ( mmax + mod( ( -1 + mmax ), 2 ) + -1 ) / 2 ))
 1458.                         dgl(( mmax + mod( ( -1 + mmax ), 2 ) + -1 ) / 2) = beta(1 + 2 * ( ( mmax + mod( ( -1 + mmax ), 2 ) + -1 ) / 2 )) * beta(1 + 2 * ( ( mmax + mod( ( -1 + mmax ), 2 ) + -1 ) / 2 )) + gama(1 + 2 * ( ( mmax + mod( ( -1 + mmax ), 2 ) + -1 ) / 2 )) * gama(1 + 2 * ( ( mmax + mod( ( -1 + mmax ), 2 ) + -1 ) / 2 ))
 1458.                      endif
 1458.                      t$121 = mmax
 1458.                      t$333 = max( 0, mmax )
 1458.                      t$334 = mmax
 1458.                      t$335 = mmax
 1458.                      if ( nmx > 0 ) then
 1458.                         $I_L1458_278 = 0
 1458.                         do
 1458.                            $I_L1458_242 = 0
 1458. !dir$ ivdep
 1458.                            do
 1458.                               xx(1 + $I_L1458_242, 1 + $I_L1458_278) = 0.0
 1458.                               $I_L1458_242 = 1 + $I_L1458_242
 1458.                               if ( $I_L1458_242 >= nmx ) exit
 1458.                            enddo
 1458.                            $I_L1458_278 = 1 + $I_L1458_278
 1458.                            if ( $I_L1458_278 >= nmx ) exit
 1458.                         enddo
 1458.                         $I_L1458_244 = 0
 1458. !dir$ ivdep
 1458.                         do
 1458.                            xx(1 + $I_L1458_244, 1 + $I_L1458_244) = 7.0710678118654746e-1
 1458.                            $I_L1458_244 = 1 + $I_L1458_244
 1458.                            if ( $I_L1458_244 >= nmx ) exit
 1458.                         enddo
 1458.                      endif
 1458.                      call tql2_i( mmax, nmx, dgl(1), sdg(1), xx(1, 1), eps, ierr )
 1458.                      if ( nmx > 0 ) then
 1458.                         $SC_beta_I0 = beta(3)
 1458.                         $I_L1458_266 = 0
 1458.                         do
 1458.                            ws(1 + 2 * $I_L1458_266) = -_sqrt( dgl(1 + $I_L1458_266) )
 1458.                            ws(2 + 2 * $I_L1458_266) = _sqrt( dgl(1 + $I_L1458_266) )
 1458.                            xs(1 + $I_L1458_266 * max( 0, nxsy ) * 2) = ( $SC_beta_I0 * xx(1, 1 + $I_L1458_266) * 1.0/ws(1 + 2 * $I_L1458_266) )
 1458.                            xs(max( 0, nxsy ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 1) = -xs(1 + $I_L1458_266 * max( 0, nxsy ) * 2)
 1458.                            xs(lmax + $I_L1458_266 * max( 0, nxsy ) * 2 + 1) = 0.0
 1458.                            xs(lmax + max( 0, nxsy ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 1) = 0.0
 1458.                            xs(lmax + ( nlx + nmd ) / 2 + -mod( nlx, 2 ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 2) = 0.0
 1458.                            xs(lmax + ( nlx + nmd ) / 2 + max( 0, nxsy ) + -mod( nlx, 2 ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 2) = 0.0
 1458.                            if ( -2 + nmx >= 0 ) then
 1458.                               $SCA_ws_I1 = ws(1 + 2 * $I_L1458_266)
 1458.                               $I_L1458_214 = 0
 1458.                               do
 1458.                                  xs($I_L1458_214 + $I_L1458_266 * max( 0, nxsy ) * 2 + 2) = ( ( beta(4 + 2 * $I_L1458_214) * xx(1 + $I_L1458_214, 1 + $I_L1458_266) + beta(5 + 2 * $I_L1458_214) * xx(2 + $I_L1458_214, 1 + $I_L1458_266) ) * 1.0/$SCA_ws_I1 )
 1458.                                  xs($I_L1458_214 + max( 0, nxsy ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 2) = -xs($I_L1458_214 + $I_L1458_266 * max( 0, nxsy ) * 2 + 2)
 1458.                                  xs(lmax + $I_L1458_214 + $I_L1458_266 * max( 0, nxsy ) * 2 + 2) = xx(1 + $I_L1458_214, 1 + $I_L1458_266)
 1458.                                  xs(lmax + $I_L1458_214 + max( 0, nxsy ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 2) = xs(lmax + $I_L1458_214 + $I_L1458_266 * max( 0, nxsy ) * 2 + 2)
 1458.                                  xs(lmax + $I_L1458_214 + ( nlx + nmd ) / 2 + -mod( nlx, 2 ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 3) = ( gama(3 + 2 * $I_L1458_214) * xx(1 + $I_L1458_214, 1 + $I_L1458_266) * 1.0/$SCA_ws_I1 )
 1458.                                  $LD_SPLT_P7 = xs(lmax + $I_L1458_214 + ( nlx + nmd ) / 2 + -mod( nlx, 2 ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 3)
 1458.                                  xs(lmax + $I_L1458_214 + ( nlx + nmd ) / 2 + max( 0, nxsy ) + -mod( nlx, 2 ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 3) = -$LD_SPLT_P7
 1458.                                  $I_L1458_214 = 1 + $I_L1458_214
 1458.                                  if ( $I_L1458_214 >= -1 + nmx ) exit
 1458.                               enddo
 1458.                            endif
 1458.                            if ( nmd == 1 ) then
 1458.                               xs(lmax + $I_L1458_266 * max( 0, nxsy ) * 2) = ( beta(2 * lmax) * xx(-1 + lmax, 1 + $I_L1458_266) * 1.0/ws(1 + 2 * $I_L1458_266) )
 1458.                               $LD_SPLT_P4 = xs(lmax + $I_L1458_266 * max( 0, nxsy ) * 2)
 1458.                               xs(lmax + max( 0, nxsy ) + $I_L1458_266 * max( 0, nxsy ) * 2) = -$LD_SPLT_P4
 1458.                               xs(lmax + ( 1 + nlx ) / 2 + -mod( nlx, 2 ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 1) = xx(-1 + lmax, 1 + $I_L1458_266)
 1458.                               xs(lmax + max( 0, nxsy ) + ( 1 + nlx ) / 2 + -mod( nlx, 2 ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 1) = xs(lmax + ( 1 + nlx ) / 2 + -mod( nlx, 2 ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 1)
 1458.                               xs(lmax + -2 * mod( nlx, 2 ) + 2 * ( ( 1 + nlx ) / 2 ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 2) = ( gama(-1 + 2 * lmax) * xx(-1 + lmax, 1 + $I_L1458_266) * 1.0/ws(1 + 2 * $I_L1458_266) )
 1458.                               $LD_SPLT_P5 = xs(lmax + -2 * mod( nlx, 2 ) + 2 * ( ( 1 + nlx ) / 2 ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 2)
 1458.                               xs(lmax + max( 0, nxsy ) + -2 * mod( nlx, 2 ) + 2 * ( ( 1 + nlx ) / 2 ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 2) = -$LD_SPLT_P5
 1458.                            else
 1458.                               xs(lmax + ( nlx + nmd ) / 2 + -mod( nlx, 2 ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 1) = xx(lmax, 1 + $I_L1458_266)
 1458.                               xs(lmax + ( nlx + nmd ) / 2 + max( 0, nxsy ) + -mod( nlx, 2 ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 1) = xs(lmax + ( nlx + nmd ) / 2 + -mod( nlx, 2 ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 1)
 1458.                               xs(lmax + 2 * ( ( nlx + nmd ) / 2 ) + -2 * mod( nlx, 2 ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 2) = ( gama(1 + 2 * lmax) * xx(lmax, 1 + $I_L1458_266) * 1.0/ws(1 + 2 * $I_L1458_266) )
 1458.                               $LD_SPLT_P6 = xs(lmax + 2 * ( ( nlx + nmd ) / 2 ) + -2 * mod( nlx, 2 ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 2)
 1458.                               xs(lmax + max( 0, nxsy ) + 2 * ( ( nlx + nmd ) / 2 ) + -2 * mod( nlx, 2 ) + $I_L1458_266 * max( 0, nxsy ) * 2 + 2) = -$LD_SPLT_P6
 1458.                            endif
 1458.                            $I_L1458_266 = 1 + $I_L1458_266
 1458.                            if ( $I_L1458_266 >= nmx ) exit
 1458.                         enddo
 1458.                      endif
 1458.                      ncuts = ( 2 * nmx )
 1458.                      t$120 = nxsy
 1458.                      t$330 = max( 0, nxsy )
 1458.                      t$331 = nxsy
 1458.                      t$332 = nxsy
 1458.                      if ( 2 * nmx > 0 ) then
 1458.                         if ( nsy > 0 ) then
 1458.                            $I_L1458_268 = 0
 1458.                            do
 1458.                               $I_L1458_216 = 0
 1458. !dir$ ivdep
 1458.                               do
 1458.                                  if ( abs( xs($I_L1458_216 + $I_L1458_268 * max( 0, nxsy ) + 1) ) <= eps ) then
 1458.                                     xs($I_L1458_216 + $I_L1458_268 * max( 0, nxsy ) + 1) = 0.0
 1458.                                  endif
 1458.                                  $I_L1458_216 = 1 + $I_L1458_216
 1458.                                  if ( $I_L1458_216 >= ( lmax + 2 * mmmax ) ) exit
 1458.                               enddo
 1458.                               $I_L1458_268 = 1 + $I_L1458_268
 1458.                               if ( $I_L1458_268 >= ( 2 * nmx ) ) exit
 1458.                            enddo
 1458.                         endif
 1458.                      endif
 1461.                      ipa$871 = loc( xs(1) )
 1461.                      xx = _copyin( xs(1) )
 1461.                      ipa$873 = loc( es(1) )
 1461.                      gg = _copyin( es(1) )
 1461.                      t$123 = nxsy
 1461.                      t$339 = max( 0, nxsy )
 1461.                      t$340 = nxsy
 1461.                      t$341 = ( nxsy * nxsy )
 1461.                      t$124 = ( 2 * nmx )
 1461.                      t$342 = max( 0, ( 2 * nmx ) )
 1461.                      t$125 = ( lmax + 2 * ( ( nlx + nmd ) / 2 ) + -2 * mod( nlx, 2 ) + 2 )
 1461.                      t$343 = ( 2 * nmx )
 1461.                      t$344 = max( 0, ( lmax + 2 * ( ( nlx + nmd ) / 2 ) + -2 * mod( nlx, 2 ) + 2 ) )
 1461.                      t$345 = nmx * ( lmax + 2 * ( ( nlx + nmd ) / 2 ) + -2 * mod( nlx, 2 ) + 2 ) * 2
 1461.                      $Unit_temp_O0 = nfnmi
 1461.                      $_IOitem_P0(0) = ( 2 * nmx )
 1461.                      $_IOitem_P0(1) = nsy
 1461.                      _uwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 1, 1 )), 0x804060200000000L ) ) )
 1461.                      if ( 2 * nmx /= 0 ) then
 1461.                         $F_A33 = ( 2 * nmx )
 1461.                         if ( 2 * nmx > 0 ) then
 1461.                            $I_L1461_226 = 0
 1461. !dir$ ivdep
 1461.                            do
 1461.                               wk(1 + $I_L1461_226) = 0.0
 1461.                               $I_L1461_226 = 1 + $I_L1461_226
 1461.                               if ( $I_L1461_226 >= $F_A33 ) exit
 1461.                            enddo
 1461.                         endif
 1461.                         $F_A34 = ( nlx + nmd ) / 2 + 2 * lmax + -2 * nmd + 2
 1461.                         $F_A35 = 2 * nmx
 1461.                         if ( and( -$F_A35, -$F_A34 ) < 0 ) then
 1461.                            $I_L1461_270 = 0
 1461.                            do
 1461.                               $I_L1461_228 = 0
 1461. !dir$ ivdep
 1461.                               do
 1461.                                  gg(1 + $I_L1461_228, 1 + $I_L1461_270) = 0.0
 1461.                                  $I_L1461_228 = 1 + $I_L1461_228
 1461.                                  if ( $I_L1461_228 >= $F_A35 ) exit
 1461.                               enddo
 1461.                               $I_L1461_270 = 1 + $I_L1461_270
 1461.                               if ( $I_L1461_270 >= $F_A34 ) exit
 1461.                            enddo
 1461.                         endif
 1461.                         if ( 2 * nmx > 0 ) then
 1461.                            if ( nsy > 0 ) then
 1461.                               $I_L1461_246 = 0
 1461. !dir$ ivdep
 1461.                               do
 1461.                                  wk(1 + $I_L1461_246) = 1.0/ws(1 + $I_L1461_246)
 1461.                                  $I_L1461_246 = 1 + $I_L1461_246
 1461.                                  if ( $I_L1461_246 >= ( 2 * nmx ) ) exit
 1461.                               enddo
 1461.                               $I_L1461_288 = 0
 1461.                               do
 1461.                                  $I_L1461_280 = 0
 1461.                                  if ( lmax + 2 * mmmax >= 4 ) then
 1461.                                     $I_L1461_312 = 0
 1461. !dir$ blocking_size( 0, 0 )
 1461.                                     do
 1461.                                        $I_L1461_248 = 0
 1461. !dir$ ivdep
 1461. !dir$ blocking_size( 256, 256 )
 1461.                                        do
 1461.                                           gg($I_L1461_248 + 256 * $I_L1461_288 + 1, 1 + 4 * $I_L1461_312) = xx(1 + 4 * $I_L1461_312, $I_L1461_248 + 256 * $I_L1461_288 + 1)
 1461.                                           gg($I_L1461_248 + 256 * $I_L1461_288 + 1, 2 + 4 * $I_L1461_312) = xx(2 + 4 * $I_L1461_312, $I_L1461_248 + 256 * $I_L1461_288 + 1)
 1461.                                           gg($I_L1461_248 + 256 * $I_L1461_288 + 1, 3 + 4 * $I_L1461_312) = xx(3 + 4 * $I_L1461_312, $I_L1461_248 + 256 * $I_L1461_288 + 1)
 1461.                                           gg($I_L1461_248 + 256 * $I_L1461_288 + 1, 4 + 4 * $I_L1461_312) = xx(4 + 4 * $I_L1461_312, $I_L1461_248 + 256 * $I_L1461_288 + 1)
 1461.                                           $I_L1461_248 = 1 + $I_L1461_248
 1461.                                           if ( $I_L1461_248 >= min( ( 2 * nmx ), 256 + 256 * $I_L1461_288 ) + -256 * $I_L1461_288 ) exit
 1461.                                        enddo
 1461.                                        $I_L1461_312 = 1 + $I_L1461_312
 1461.                                        if ( $I_L1461_312 >= _rsh( ( lmax + 2 * mmmax ), 2 ) ) exit
 1461.                                     enddo
 1461.                                     $I_L1461_280 = and( 0xfffffffffffffffcUL, ( lmax + 2 * mmmax ) )
 1461.                                  endif
 1461.                                  if ( $I_L1461_280 < lmax + 2 * mmmax ) then
 1461.                                     $I_L1461_300 = 0
 1461. !dir$ blocking_size( 0, 0 )
 1461.                                     do
 1461.                                        $I_L1461_248 = 0
 1461. !dir$ ivdep
 1461. !dir$ blocking_size( 256, 256 )
 1461.                                        do
 1461.                                           gg($I_L1461_248 + 256 * $I_L1461_288 + 1, $I_L1461_280 + $I_L1461_300 + 1) = xx($I_L1461_280 + $I_L1461_300 + 1, $I_L1461_248 + 256 * $I_L1461_288 + 1)
 1461.                                           $I_L1461_248 = 1 + $I_L1461_248
 1461.                                           if ( $I_L1461_248 >= min( ( 2 * nmx ), 256 + 256 * $I_L1461_288 ) + -256 * $I_L1461_288 ) exit
 1461.                                        enddo
 1461.                                        $I_L1461_300 = 1 + $I_L1461_300
 1461.                                        if ( $I_L1461_300 >= lmax + -$I_L1461_280 + 2 * mmmax ) exit
 1461.                                     enddo
 1461.                                  endif
 1461.                                  $I_L1461_288 = 1 + $I_L1461_288
 1461.                                  if ( $I_L1461_288 >= 1 + max( 0, -1 + _rsh( 255 + 2 * nmx, 8 ) ) ) exit
 1461.                               enddo
 1461.                            else
 1461.                               $I_L1461_222 = 0
 1461. !dir$ ivdep
 1461.                               do
 1461.                                  wk(1 + $I_L1461_222) = 1.0/ws(1 + $I_L1461_222)
 1461.                                  $I_L1461_222 = 1 + $I_L1461_222
 1461.                                  if ( $I_L1461_222 >= ( 2 * nmx ) ) exit
 1461.                               enddo
 1461.                            endif
 1461.                         endif
 1461.                         $Unit_temp_O1 = nfnmi
 1461.                         _uwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( wk(+:( 1, 2 * nmx, 1 )), 0x804060300000000L ), _iotype( gg(+:( 1, 2 * nmx, 1 ), +:( 1, ( nlx + nmd ) / 2 + 2 * lmax + -2 * nmd + 2, 1 )), 0x804060300000000L ) ) )
 1461.                      endif
 1461.                      es(1) = _copyout( gg )
 1461.                      xs(1) = _copyout( xx )
 1466. !dir$ suppress beta(1)
 1466.                      t$793%base_addr = pointer to array[1] of real (kind=8)( loc( beta(1) ) )
 1466.                      t$793%header%el_len = 64
 1466.                      t$793%header%assoc = 1
 1466.                      t$793%header%ptr_alloc = 0
 1466.                      t$793%header%p_or_a = 0
 1466.                      t$793%header%a_contig = 1
 1466.                      t$793%header%dv_versn = 2
 1466.                      t$793%header%dv_smunit = 64
 1466.                      t$793%header%d_type = 0
 1466.                      t$793%header%n_params = 0
 1466.                      t$793%header%pad_codim = 0
 1466.                      t$793%header%n_codim = 0
 1466.                      t$793%header%pad_dim = 0
 1466.                      t$793%header%n_dim = 1
 1466.                      t$793%header%d_type_idx = 13
 1466.                      t$793%header%typ_code = 134481411
 1466.                      t$793%header%orig_base = 0
 1466.                      t$793%header%orig_size = 0
 1466.                      t$793%dim_1%LB = 1
 1466.                      t$793%dim_1%EX = _zla( 0, t$92 )
 1466.                      t$793%dim_1%SM = 1
 1466. !dir$ suppress gama(1)
 1466.                      t$794%base_addr = pointer to array[1] of real (kind=8)( loc( gama(1) ) )
 1466.                      t$794%header%el_len = 64
 1466.                      t$794%header%assoc = 1
 1466.                      t$794%header%ptr_alloc = 0
 1466.                      t$794%header%p_or_a = 0
 1466.                      t$794%header%a_contig = 1
 1466.                      t$794%header%dv_versn = 2
 1466.                      t$794%header%dv_smunit = 64
 1466.                      t$794%header%d_type = 0
 1466.                      t$794%header%n_params = 0
 1466.                      t$794%header%pad_codim = 0
 1466.                      t$794%header%n_codim = 0
 1466.                      t$794%header%pad_dim = 0
 1466.                      t$794%header%n_dim = 1
 1466.                      t$794%header%d_type_idx = 13
 1466.                      t$794%header%typ_code = 134481411
 1466.                      t$794%header%orig_base = 0
 1466.                      t$794%header%orig_size = 0
 1466.                      t$794%dim_1%LB = 1
 1466.                      t$794%dim_1%EX = _zla( 0, t$92 )
 1466.                      t$794%dim_1%SM = 1
 1467. !dir$ suppress wa(1)
 1467.                      t$795%base_addr = pointer to array[1] of real (kind=8)( loc( wa(1) ) )
 1467.                      t$795%header%el_len = 64
 1467.                      t$795%header%assoc = 1
 1467.                      t$795%header%ptr_alloc = 0
 1467.                      t$795%header%p_or_a = 0
 1467.                      t$795%header%a_contig = 1
 1467.                      t$795%header%dv_versn = 2
 1467.                      t$795%header%dv_smunit = 64
 1467.                      t$795%header%d_type = 0
 1467.                      t$795%header%n_params = 0
 1467.                      t$795%header%pad_codim = 0
 1467.                      t$795%header%n_codim = 0
 1467.                      t$795%header%pad_dim = 0
 1467.                      t$795%header%n_dim = 1
 1467.                      t$795%header%d_type_idx = 13
 1467.                      t$795%header%typ_code = 134481411
 1467.                      t$795%header%orig_base = 0
 1467.                      t$795%header%orig_size = 0
 1467.                      t$795%dim_1%LB = 1
 1467.                      t$795%dim_1%EX = _zla( 0, t$93 )
 1467.                      t$795%dim_1%SM = 1
 1467. !dir$ suppress sdg(1)
 1467.                      t$796%base_addr = pointer to array[1] of real (kind=8)( loc( sdg(1) ) )
 1467.                      t$796%header%el_len = 64
 1467.                      t$796%header%assoc = 1
 1467.                      t$796%header%ptr_alloc = 0
 1467.                      t$796%header%p_or_a = 0
 1467.                      t$796%header%a_contig = 1
 1467.                      t$796%header%dv_versn = 2
 1467.                      t$796%header%dv_smunit = 64
 1467.                      t$796%header%d_type = 0
 1467.                      t$796%header%n_params = 0
 1467.                      t$796%header%pad_codim = 0
 1467.                      t$796%header%n_codim = 0
 1467.                      t$796%header%pad_dim = 0
 1467.                      t$796%header%n_dim = 1
 1467.                      t$796%header%d_type_idx = 13
 1467.                      t$796%header%typ_code = 134481411
 1467.                      t$796%header%orig_base = 0
 1467.                      t$796%header%orig_size = 0
 1467.                      t$796%dim_1%LB = 1
 1467.                      t$796%dim_1%EX = _zla( 0, t$92 )
 1467.                      t$796%dim_1%SM = 1
 1467. !dir$ suppress dgl(1)
 1467.                      t$797%base_addr = pointer to array[1] of real (kind=8)( loc( dgl(1) ) )
 1467.                      t$797%header%el_len = 64
 1467.                      t$797%header%assoc = 1
 1467.                      t$797%header%ptr_alloc = 0
 1467.                      t$797%header%p_or_a = 0
 1467.                      t$797%header%a_contig = 1
 1467.                      t$797%header%dv_versn = 2
 1467.                      t$797%header%dv_smunit = 64
 1467.                      t$797%header%d_type = 0
 1467.                      t$797%header%n_params = 0
 1467.                      t$797%header%pad_codim = 0
 1467.                      t$797%header%n_codim = 0
 1467.                      t$797%header%pad_dim = 0
 1467.                      t$797%header%n_dim = 1
 1467.                      t$797%header%d_type_idx = 13
 1467.                      t$797%header%typ_code = 134481411
 1467.                      t$797%header%orig_base = 0
 1467.                      t$797%header%orig_size = 0
 1467.                      t$797%dim_1%LB = 1
 1467.                      t$797%dim_1%EX = _zla( 0, t$92 )
 1467.                      t$797%dim_1%SM = 1
 1465.                      ipa$875 = -1
 1465.                      ipa$876 = 1.4584919999999999e-4
 1465.                      call asyg0( nxas, nas, mmax, lmax, klmx, mmmax, nmd, ipa$875, ncuta, eps, ipa$876, t$793, t$794, t$795, t$796, t$797, xa(1), xx(1, 1) )
 1468.                      ipa$900 = loc( xa(1) )
 1468.                      xx = _copyin( xa(1) )
 1468.                      ipa$902 = loc( ea(1) )
 1468.                      gg = _copyin( ea(1) )
 1468.                      t$123 = nxas
 1468.                      t$339 = max( 0, nxas )
 1468.                      t$340 = nxas
 1468.                      t$341 = ( nxas * nxas )
 1468.                      t$124 = ncuta
 1468.                      t$342 = max( 0, ncuta )
 1468.                      t$125 = nas
 1468.                      t$343 = ncuta
 1468.                      t$344 = max( 0, nas )
 1468.                      t$345 = nas * ncuta
 1468.                      $Unit_temp_O2 = nfnmi
 1468.                      $_IOitem_P1(0) = ncuta
 1468.                      $_IOitem_P1(1) = nas
 1468.                      _uwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P1(:( 0, 1, 1 )), 0x804060200000000L ) ) )
 1468.                      if ( ncuta /= 0 ) then
 1468.                         $F_A36 = -1 + ncuta + 1
 1468.                         if ( -1 + ncuta >= 0 ) then
 1468.                            $I_L1468_230 = 0
 1468. !dir$ ivdep
 1468.                            do
 1468.                               wk(1 + $I_L1468_230) = 0.0
 1468.                               $I_L1468_230 = 1 + $I_L1468_230
 1468.                               if ( $I_L1468_230 >= $F_A36 ) exit
 1468.                            enddo
 1468.                         endif
 1468.                         $F_A37 = nas
 1468.                         $F_A38 = ncuta
 1468.                         if ( and( -$F_A38, -$F_A37 ) < 0 ) then
 1468.                            $I_L1468_272 = 0
 1468.                            do
 1468.                               $I_L1468_232 = 0
 1468. !dir$ ivdep
 1468.                               do
 1468.                                  gg(1 + $I_L1468_232, 1 + $I_L1468_272) = 0.0
 1468.                                  $I_L1468_232 = 1 + $I_L1468_232
 1468.                                  if ( $I_L1468_232 >= $F_A38 ) exit
 1468.                               enddo
 1468.                               $I_L1468_272 = 1 + $I_L1468_272
 1468.                               if ( $I_L1468_272 >= $F_A37 ) exit
 1468.                            enddo
 1468.                         endif
 1468.                         if ( ncuta > 0 ) then
 1468.                            if ( nas > 0 ) then
 1468.                               $I_L1468_251 = 0
 1468. !dir$ ivdep
 1468.                               do
 1468.                                  wk(1 + $I_L1468_251) = 1.0/wa(1 + $I_L1468_251)
 1468.                                  $I_L1468_251 = 1 + $I_L1468_251
 1468.                                  if ( $I_L1468_251 >= ncuta ) exit
 1468.                               enddo
 1468.                               $I_L1468_290 = 0
 1468.                               do
 1468.                                  $I_L1468_282 = 0
 1468.                                  if ( nas >= 4 ) then
 1468.                                     $I_L1468_314 = 0
 1468. !dir$ blocking_size( 0, 0 )
 1468.                                     do
 1468.                                        $I_L1468_253 = 0
 1468. !dir$ ivdep
 1468. !dir$ blocking_size( 256, 256 )
 1468.                                        do
 1468.                                           gg($I_L1468_253 + 256 * $I_L1468_290 + 1, 1 + 4 * $I_L1468_314) = xx(1 + 4 * $I_L1468_314, $I_L1468_253 + 256 * $I_L1468_290 + 1)
 1468.                                           gg($I_L1468_253 + 256 * $I_L1468_290 + 1, 2 + 4 * $I_L1468_314) = xx(2 + 4 * $I_L1468_314, $I_L1468_253 + 256 * $I_L1468_290 + 1)
 1468.                                           gg($I_L1468_253 + 256 * $I_L1468_290 + 1, 3 + 4 * $I_L1468_314) = xx(3 + 4 * $I_L1468_314, $I_L1468_253 + 256 * $I_L1468_290 + 1)
 1468.                                           gg($I_L1468_253 + 256 * $I_L1468_290 + 1, 4 + 4 * $I_L1468_314) = xx(4 + 4 * $I_L1468_314, $I_L1468_253 + 256 * $I_L1468_290 + 1)
 1468.                                           $I_L1468_253 = 1 + $I_L1468_253
 1468.                                           if ( $I_L1468_253 >= min( ncuta, 256 + 256 * $I_L1468_290 ) + -256 * $I_L1468_290 ) exit
 1468.                                        enddo
 1468.                                        $I_L1468_314 = 1 + $I_L1468_314
 1468.                                        if ( $I_L1468_314 >= _rsh( nas, 2 ) ) exit
 1468.                                     enddo
 1468.                                     $I_L1468_282 = and( 0xfffffffffffffffcUL, nas )
 1468.                                  endif
 1468.                                  if ( $I_L1468_282 < nas ) then
 1468.                                     $I_L1468_303 = 0
 1468. !dir$ blocking_size( 0, 0 )
 1468.                                     do
 1468.                                        $I_L1468_253 = 0
 1468. !dir$ ivdep
 1468. !dir$ blocking_size( 256, 256 )
 1468.                                        do
 1468.                                           gg($I_L1468_253 + 256 * $I_L1468_290 + 1, $I_L1468_282 + $I_L1468_303 + 1) = xx($I_L1468_282 + $I_L1468_303 + 1, $I_L1468_253 + 256 * $I_L1468_290 + 1)
 1468.                                           $I_L1468_253 = 1 + $I_L1468_253
 1468.                                           if ( $I_L1468_253 >= min( ncuta, 256 + 256 * $I_L1468_290 ) + -256 * $I_L1468_290 ) exit
 1468.                                        enddo
 1468.                                        $I_L1468_303 = 1 + $I_L1468_303
 1468.                                        if ( $I_L1468_303 >= nas + -$I_L1468_282 ) exit
 1468.                                     enddo
 1468.                                  endif
 1468.                                  $I_L1468_290 = 1 + $I_L1468_290
 1468.                                  if ( $I_L1468_290 >= 1 + max( 0, -1 + _rsh( 255 + ncuta, 8 ) ) ) exit
 1468.                               enddo
 1468.                            else
 1468.                               $I_L1468_224 = 0
 1468. !dir$ ivdep
 1468.                               do
 1468.                                  wk(1 + $I_L1468_224) = 1.0/wa(1 + $I_L1468_224)
 1468.                                  $I_L1468_224 = 1 + $I_L1468_224
 1468.                                  if ( $I_L1468_224 >= ncuta ) exit
 1468.                               enddo
 1468.                            endif
 1468.                         endif
 1468.                         $Unit_temp_O3 = nfnmi
 1468.                         _uwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( wk(+:( 1, ncuta, 1 )), 0x804060300000000L ), _iotype( gg(+:( 1, ncuta, 1 ), +:( 1, nas, 1 )), 0x804060300000000L ) ) )
 1468.                      endif
 1468.                      ea(1) = _copyout( gg )
 1468.                      xa(1) = _copyout( xx )
 1468.                   else
 1473.                      ipa$904 = -1
 1473.                      ipa$905 = 1.4584919999999999e-4
 1473.                      call symrg( nxsy, nsy, lmax, mmmax, nmd, ipa$904, ncuts, eps, ipa$905, percut, alfa(1), beta(1), gama(1), ws(1), wk(1), es(1), xs(1) )
 1476.                      ipa$936 = loc( xs(1) )
 1476.                      xx = _copyin( xs(1) )
 1476.                      ipa$938 = loc( es(1) )
 1476.                      gg = _copyin( es(1) )
 1476.                      t$123 = nxsy
 1476.                      t$339 = max( 0, nxsy )
 1476.                      t$340 = nxsy
 1476.                      t$341 = ( nxsy * nxsy )
 1476.                      t$124 = ncuts
 1476.                      t$342 = max( 0, ncuts )
 1476.                      t$125 = nsy
 1476.                      t$343 = ncuts
 1476.                      t$344 = max( 0, nsy )
 1476.                      t$345 = nsy * ncuts
 1476.                      $Unit_temp_O4 = nfnmi
 1476.                      $_IOitem_P2(0) = ncuts
 1476.                      $_IOitem_P2(1) = nsy
 1476.                      _uwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P2(:( 0, 1, 1 )), 0x804060200000000L ) ) )
 1476.                      if ( ncuts /= 0 ) then
 1476.                         $F_A39 = -1 + ncuts + 1
 1476.                         if ( -1 + ncuts >= 0 ) then
 1476.                            $I_L1476_234 = 0
 1476. !dir$ ivdep
 1476.                            do
 1476.                               wk(1 + $I_L1476_234) = 0.0
 1476.                               $I_L1476_234 = 1 + $I_L1476_234
 1476.                               if ( $I_L1476_234 >= $F_A39 ) exit
 1476.                            enddo
 1476.                         endif
 1476.                         $F_A40 = nsy
 1476.                         $F_A41 = ncuts
 1476.                         if ( and( -$F_A41, -$F_A40 ) < 0 ) then
 1476.                            $I_L1476_274 = 0
 1476.                            do
 1476.                               $I_L1476_236 = 0
 1476. !dir$ ivdep
 1476.                               do
 1476.                                  gg(1 + $I_L1476_236, 1 + $I_L1476_274) = 0.0
 1476.                                  $I_L1476_236 = 1 + $I_L1476_236
 1476.                                  if ( $I_L1476_236 >= $F_A41 ) exit
 1476.                               enddo
 1476.                               $I_L1476_274 = 1 + $I_L1476_274
 1476.                               if ( $I_L1476_274 >= $F_A40 ) exit
 1476.                            enddo
 1476.                         endif
 1476.                         if ( ncuts > 0 ) then
 1476.                            if ( nsy > 0 ) then
 1476.                               $I_L1476_256 = 0
 1476. !dir$ ivdep
 1476.                               do
 1476.                                  wk(1 + $I_L1476_256) = 1.0/ws(1 + $I_L1476_256)
 1476.                                  $I_L1476_256 = 1 + $I_L1476_256
 1476.                                  if ( $I_L1476_256 >= ncuts ) exit
 1476.                               enddo
 1476.                               $I_L1476_292 = 0
 1476.                               do
 1476.                                  $I_L1476_284 = 0
 1476.                                  if ( nsy >= 4 ) then
 1476.                                     $I_L1476_316 = 0
 1476. !dir$ blocking_size( 0, 0 )
 1476.                                     do
 1476.                                        $I_L1476_258 = 0
 1476. !dir$ ivdep
 1476. !dir$ blocking_size( 256, 256 )
 1476.                                        do
 1476.                                           gg($I_L1476_258 + 256 * $I_L1476_292 + 1, 1 + 4 * $I_L1476_316) = xx(1 + 4 * $I_L1476_316, $I_L1476_258 + 256 * $I_L1476_292 + 1)
 1476.                                           gg($I_L1476_258 + 256 * $I_L1476_292 + 1, 2 + 4 * $I_L1476_316) = xx(2 + 4 * $I_L1476_316, $I_L1476_258 + 256 * $I_L1476_292 + 1)
 1476.                                           gg($I_L1476_258 + 256 * $I_L1476_292 + 1, 3 + 4 * $I_L1476_316) = xx(3 + 4 * $I_L1476_316, $I_L1476_258 + 256 * $I_L1476_292 + 1)
 1476.                                           gg($I_L1476_258 + 256 * $I_L1476_292 + 1, 4 + 4 * $I_L1476_316) = xx(4 + 4 * $I_L1476_316, $I_L1476_258 + 256 * $I_L1476_292 + 1)
 1476.                                           $I_L1476_258 = 1 + $I_L1476_258
 1476.                                           if ( $I_L1476_258 >= min( ncuts, 256 + 256 * $I_L1476_292 ) + -256 * $I_L1476_292 ) exit
 1476.                                        enddo
 1476.                                        $I_L1476_316 = 1 + $I_L1476_316
 1476.                                        if ( $I_L1476_316 >= _rsh( nsy, 2 ) ) exit
 1476.                                     enddo
 1476.                                     $I_L1476_284 = and( 0xfffffffffffffffcUL, nsy )
 1476.                                  endif
 1476.                                  if ( $I_L1476_284 < nsy ) then
 1476.                                     $I_L1476_306 = 0
 1476. !dir$ blocking_size( 0, 0 )
 1476.                                     do
 1476.                                        $I_L1476_258 = 0
 1476. !dir$ ivdep
 1476. !dir$ blocking_size( 256, 256 )
 1476.                                        do
 1476.                                           gg($I_L1476_258 + 256 * $I_L1476_292 + 1, $I_L1476_284 + $I_L1476_306 + 1) = xx($I_L1476_284 + $I_L1476_306 + 1, $I_L1476_258 + 256 * $I_L1476_292 + 1)
 1476.                                           $I_L1476_258 = 1 + $I_L1476_258
 1476.                                           if ( $I_L1476_258 >= min( ncuts, 256 + 256 * $I_L1476_292 ) + -256 * $I_L1476_292 ) exit
 1476.                                        enddo
 1476.                                        $I_L1476_306 = 1 + $I_L1476_306
 1476.                                        if ( $I_L1476_306 >= nsy + -$I_L1476_284 ) exit
 1476.                                     enddo
 1476.                                  endif
 1476.                                  $I_L1476_292 = 1 + $I_L1476_292
 1476.                                  if ( $I_L1476_292 >= 1 + max( 0, -1 + _rsh( 255 + ncuts, 8 ) ) ) exit
 1476.                               enddo
 1476.                            else
 1476.                               $I_L1476_218 = 0
 1476. !dir$ ivdep
 1476.                               do
 1476.                                  wk(1 + $I_L1476_218) = 1.0/ws(1 + $I_L1476_218)
 1476.                                  $I_L1476_218 = 1 + $I_L1476_218
 1476.                                  if ( $I_L1476_218 >= ncuts ) exit
 1476.                               enddo
 1476.                            endif
 1476.                         endif
 1476.                         $Unit_temp_O5 = nfnmi
 1476.                         _uwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( wk(+:( 1, ncuts, 1 )), 0x804060300000000L ), _iotype( gg(+:( 1, ncuts, 1 ), +:( 1, nsy, 1 )), 0x804060300000000L ) ) )
 1476.                      endif
 1476.                      es(1) = _copyout( gg )
 1476.                      xs(1) = _copyout( xx )
 1480.                      ipa$940 = -1
 1480.                      ipa$941 = 1.4584919999999999e-4
 1480.                      call asyrg( nxas, nas, lmax, mmmax, nmd, ipa$940, ncuta, eps, ipa$941, percut, alfa(1), beta(1), gama(1), wa(1), wk(1), ea(1), xa(1) )
 1483.                      ipa$972 = loc( xa(1) )
 1483.                      xx = _copyin( xa(1) )
 1483.                      ipa$974 = loc( ea(1) )
 1483.                      gg = _copyin( ea(1) )
 1483.                      t$123 = nxas
 1483.                      t$339 = max( 0, nxas )
 1483.                      t$340 = nxas
 1483.                      t$341 = ( nxas * nxas )
 1483.                      t$124 = ncuta
 1483.                      t$342 = max( 0, ncuta )
 1483.                      t$125 = nas
 1483.                      t$343 = ncuta
 1483.                      t$344 = max( 0, nas )
 1483.                      t$345 = nas * ncuta
 1483.                      $Unit_temp_O6 = nfnmi
 1483.                      $_IOitem_P3(0) = ncuta
 1483.                      $_IOitem_P3(1) = nas
 1483.                      _uwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P3(:( 0, 1, 1 )), 0x804060200000000L ) ) )
 1483.                      if ( ncuta /= 0 ) then
 1483.                         $F_A42 = -1 + ncuta + 1
 1483.                         if ( -1 + ncuta >= 0 ) then
 1483.                            $I_L1483_238 = 0
 1483. !dir$ ivdep
 1483.                            do
 1483.                               wk(1 + $I_L1483_238) = 0.0
 1483.                               $I_L1483_238 = 1 + $I_L1483_238
 1483.                               if ( $I_L1483_238 >= $F_A42 ) exit
 1483.                            enddo
 1483.                         endif
 1483.                         $F_A43 = nas
 1483.                         $F_A44 = ncuta
 1483.                         if ( and( -$F_A44, -$F_A43 ) < 0 ) then
 1483.                            $I_L1483_276 = 0
 1483.                            do
 1483.                               $I_L1483_240 = 0
 1483. !dir$ ivdep
 1483.                               do
 1483.                                  gg(1 + $I_L1483_240, 1 + $I_L1483_276) = 0.0
 1483.                                  $I_L1483_240 = 1 + $I_L1483_240
 1483.                                  if ( $I_L1483_240 >= $F_A44 ) exit
 1483.                               enddo
 1483.                               $I_L1483_276 = 1 + $I_L1483_276
 1483.                               if ( $I_L1483_276 >= $F_A43 ) exit
 1483.                            enddo
 1483.                         endif
 1483.                         if ( ncuta > 0 ) then
 1483.                            if ( nas > 0 ) then
 1483.                               $I_L1483_261 = 0
 1483. !dir$ ivdep
 1483.                               do
 1483.                                  wk(1 + $I_L1483_261) = 1.0/wa(1 + $I_L1483_261)
 1483.                                  $I_L1483_261 = 1 + $I_L1483_261
 1483.                                  if ( $I_L1483_261 >= ncuta ) exit
 1483.                               enddo
 1483.                               $I_L1483_294 = 0
 1483.                               do
 1483.                                  $I_L1483_286 = 0
 1483.                                  if ( nas >= 4 ) then
 1483.                                     $I_L1483_318 = 0
 1483. !dir$ blocking_size( 0, 0 )
 1483.                                     do
 1483.                                        $I_L1483_263 = 0
 1483. !dir$ ivdep
 1483. !dir$ blocking_size( 256, 256 )
 1483.                                        do
 1483.                                           gg($I_L1483_263 + 256 * $I_L1483_294 + 1, 1 + 4 * $I_L1483_318) = xx(1 + 4 * $I_L1483_318, $I_L1483_263 + 256 * $I_L1483_294 + 1)
 1483.                                           gg($I_L1483_263 + 256 * $I_L1483_294 + 1, 2 + 4 * $I_L1483_318) = xx(2 + 4 * $I_L1483_318, $I_L1483_263 + 256 * $I_L1483_294 + 1)
 1483.                                           gg($I_L1483_263 + 256 * $I_L1483_294 + 1, 3 + 4 * $I_L1483_318) = xx(3 + 4 * $I_L1483_318, $I_L1483_263 + 256 * $I_L1483_294 + 1)
 1483.                                           gg($I_L1483_263 + 256 * $I_L1483_294 + 1, 4 + 4 * $I_L1483_318) = xx(4 + 4 * $I_L1483_318, $I_L1483_263 + 256 * $I_L1483_294 + 1)
 1483.                                           $I_L1483_263 = 1 + $I_L1483_263
 1483.                                           if ( $I_L1483_263 >= min( ncuta, 256 + 256 * $I_L1483_294 ) + -256 * $I_L1483_294 ) exit
 1483.                                        enddo
 1483.                                        $I_L1483_318 = 1 + $I_L1483_318
 1483.                                        if ( $I_L1483_318 >= _rsh( nas, 2 ) ) exit
 1483.                                     enddo
 1483.                                     $I_L1483_286 = and( 0xfffffffffffffffcUL, nas )
 1483.                                  endif
 1483.                                  if ( $I_L1483_286 < nas ) then
 1483.                                     $I_L1483_309 = 0
 1483. !dir$ blocking_size( 0, 0 )
 1483.                                     do
 1483.                                        $I_L1483_263 = 0
 1483. !dir$ ivdep
 1483. !dir$ blocking_size( 256, 256 )
 1483.                                        do
 1483.                                           gg($I_L1483_263 + 256 * $I_L1483_294 + 1, $I_L1483_286 + $I_L1483_309 + 1) = xx($I_L1483_286 + $I_L1483_309 + 1, $I_L1483_263 + 256 * $I_L1483_294 + 1)
 1483.                                           $I_L1483_263 = 1 + $I_L1483_263
 1483.                                           if ( $I_L1483_263 >= min( ncuta, 256 + 256 * $I_L1483_294 ) + -256 * $I_L1483_294 ) exit
 1483.                                        enddo
 1483.                                        $I_L1483_309 = 1 + $I_L1483_309
 1483.                                        if ( $I_L1483_309 >= nas + -$I_L1483_286 ) exit
 1483.                                     enddo
 1483.                                  endif
 1483.                                  $I_L1483_294 = 1 + $I_L1483_294
 1483.                                  if ( $I_L1483_294 >= 1 + max( 0, -1 + _rsh( 255 + ncuta, 8 ) ) ) exit
 1483.                               enddo
 1483.                            else
 1483.                               $I_L1483_220 = 0
 1483. !dir$ ivdep
 1483.                               do
 1483.                                  wk(1 + $I_L1483_220) = 1.0/wa(1 + $I_L1483_220)
 1483.                                  $I_L1483_220 = 1 + $I_L1483_220
 1483.                                  if ( $I_L1483_220 >= ncuta ) exit
 1483.                               enddo
 1483.                            endif
 1483.                         endif
 1483.                         $Unit_temp_O7 = nfnmi
 1483.                         _uwrite( _clist( 0, 0, 3, $Unit_temp_O7, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( wk(+:( 1, ncuta, 1 )), 0x804060300000000L ), _iotype( gg(+:( 1, ncuta, 1 ), +:( 1, nas, 1 )), 0x804060300000000L ) ) )
 1483.                      endif
 1483.                      ea(1) = _copyout( gg )
 1483.                      xa(1) = _copyout( xx )
 1483.                   endif
 1485.                   $I_L1431_296 = 1 + $I_L1431_296
 1484.                   if ( $I_L1431_296 >= $t_S19 ) exit
 1484.                enddo
 1484.             endif
 1486.             $I_L1430_298 = 1 + $I_L1430_298
 1485.             if ( $I_L1430_298 >= $t_S20 ) exit
 1485.          enddo
 1485.       endif
 1384.       _free( t$278 )
 1487.       return
 1487.       end
 1487.       
 1607.       
 1607.       subroutine asyg0( nxas, nas, nend1, lmax, klmx, mmax, nmd, ipr, ncuta, eps, twomg, beta, gama, wa, sdg, dgl, xa, xx )
 1494.       beta%dim_1%LB = 1
 1494.       gama%dim_1%LB = 1
 1494.       wa%dim_1%LB = 1
 1494.       sdg%dim_1%LB = 1
 1494.       dgl%dim_1%LB = 1
 1494.       t$95 = nxas
 1512.       t$321 = _zla( 0, nxas )
 1494.       t$322 = _zla( 0, nxas )
 1494.       t$323 = _zla( 0, nxas )
 1494.       t$96 = nend1
 1513.       t$324 = _zla( 0, nend1 )
 1494.       t$325 = _zla( 0, nend1 )
 1494.       t$326 = _zla( 0, nend1 )
 1528.       (sdg%base_addr)(1, 0) = (beta%base_addr)(1, 0) * (beta%base_addr)(2, 0)
 1529.       (dgl%base_addr)(1, 0) = (beta%base_addr)(2, 0) * (beta%base_addr)(2, 0) + (beta%base_addr)(3, 0) * (beta%base_addr)(3, 0) + (gama%base_addr)(2, 0) * (gama%base_addr)(2, 0)
 1532.       if ( -3 + lmax >= 0 ) then
 1532.          $I_L1532_114 = 0
 1532. !dir$ ivdep
 1532.          do
 1534.             (sdg%base_addr)(2 + $I_L1532_114, 0) = (beta%base_addr)(3 + 2 * $I_L1532_114, 0) * (beta%base_addr)(4 + 2 * $I_L1532_114, 0)
 1535.             (dgl%base_addr)(2 + $I_L1532_114, 0) = (beta%base_addr)(4 + 2 * $I_L1532_114, 0) * (beta%base_addr)(4 + 2 * $I_L1532_114, 0) + (beta%base_addr)(5 + 2 * $I_L1532_114, 0) * (beta%base_addr)(5 + 2 * $I_L1532_114, 0) + (gama%base_addr)(4 + 2 * $I_L1532_114, 0) * (gama%base_addr)(4 + 2 * $I_L1532_114, 0)
 1537.             $I_L1532_114 = 1 + $I_L1532_114
 1532.             if ( $I_L1532_114 >= -2 + lmax ) exit
 1532.          enddo
 1532.       endif
 1538.       nmx = lmax
 1541.       (sdg%base_addr)(lmax, 0) = (beta%base_addr)(-1 + 2 * lmax, 0) * (beta%base_addr)(2 * lmax, 0)
 1542.       if ( nmd == 0 ) then
 1543.          (dgl%base_addr)(lmax, 0) = (beta%base_addr)(2 * lmax, 0) * (beta%base_addr)(2 * lmax, 0) + (beta%base_addr)(1 + 2 * lmax, 0) * (beta%base_addr)(1 + 2 * lmax, 0) + (gama%base_addr)(2 * lmax, 0) * (gama%base_addr)(2 * lmax, 0)
 1543.       else
 1546.          (dgl%base_addr)(lmax, 0) = (beta%base_addr)(2 * lmax, 0) * (beta%base_addr)(2 * lmax, 0) + (gama%base_addr)(2 * lmax, 0) * (gama%base_addr)(2 * lmax, 0)
 1546.       endif
 1549.       if ( ipr > 0 ) then
 1550.          $Unit_temp_O0 = nfprt
 1550.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1551.          $Unit_temp_O1 = nfprt
 1551.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' sdg:', 0x800600000000L ) ) )
 1552.          $Unit_temp_O2 = nfprt
 1552.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O2, Null_Arg, Null_Arg, t$98,  _substr(t$97,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1552.          if ( lmax > 0 ) then
 1552.             $I_L1552_116 = 0
 1552.             do
 1552.                if ( ( 1 + $I_L1552_116 ) <= 0 .or. ( 1 + $I_L1552_116 ) > sdg%dim_1%EX ) then
 1552.                    _substr(t$805,1,17) = 'NonLinearNMI.f90'
 1552.                    _substr(t$806,1,4) = 'SDG'
 1552.                   t$807 = sdg%dim_1%EX
 1552.                   t$808 = 1 + $I_L1552_116
 1552.                   call _bounds_error(  _substr(t$805,1,17), 2055,  _substr(t$806,1,4), 1, 1, t$807, t$808, t$804 )
 1552.                endif
 1552.                $Unit_temp_O3 = nfprt
 1552.                $IOitem_O4 = (sdg%base_addr)(1 + $I_L1552_116, 0)
 1552.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$98,  _substr(t$97,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O4, 0x804060300000000L ) ) )
 1552.                $I_L1552_116 = 1 + $I_L1552_116
 1552.                if ( $I_L1552_116 >= lmax ) exit
 1552.             enddo
 1552.          endif
 1552.          $Unit_temp_O5 = nfprt
 1552.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O5, Null_Arg, Null_Arg, t$98,  _substr(t$97,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1553.          $Unit_temp_O6 = nfprt
 1553.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' dga:', 0x800600000000L ) ) )
 1554.          $Unit_temp_O7 = nfprt
 1554.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O7, Null_Arg, Null_Arg, t$100,  _substr(t$99,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1554.          if ( lmax > 0 ) then
 1554.             $I_L1554_118 = 0
 1554.             do
 1554.                if ( ( 1 + $I_L1554_118 ) <= 0 .or. ( 1 + $I_L1554_118 ) > dgl%dim_1%EX ) then
 1554.                    _substr(t$813,1,17) = 'NonLinearNMI.f90'
 1554.                    _substr(t$814,1,4) = 'DGL'
 1554.                   t$807 = dgl%dim_1%EX
 1554.                   t$808 = 1 + $I_L1554_118
 1554.                   call _bounds_error(  _substr(t$813,1,17), 2057,  _substr(t$814,1,4), 1, 1, t$807, t$808, t$812 )
 1554.                endif
 1554.                $Unit_temp_O8 = nfprt
 1554.                $IOitem_O9 = (dgl%base_addr)(1 + $I_L1554_118, 0)
 1554.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O8, Null_Arg, Null_Arg, t$100,  _substr(t$99,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O9, 0x804060300000000L ) ) )
 1554.                $I_L1554_118 = 1 + $I_L1554_118
 1554.                if ( $I_L1554_118 >= lmax ) exit
 1554.             enddo
 1554.          endif
 1554.          $Unit_temp_O10 = nfprt
 1554.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O10, Null_Arg, Null_Arg, t$100,  _substr(t$99,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1554.       endif
 1557.       call ident( nend1, nmx, xx(1, 1) )
 1558.       t$816 = 0
 1558.       t$819 = 0
 1558.       if ( dgl%header%a_contig == 1 ) then
 1558. !dir$ suppress (dgl%base_addr)(1, 0)
 1558.          t$815 = loc( (dgl%base_addr)(1, 0) )
 1558.       else
 1558.          t$816 = dgl%dim_1%EX
 1558.          t$819 = int( _alloc( max( 0, 8 * max( 0, dgl%dim_1%EX ) ) ), 8 )
 1558.          $F_A33 = dgl%dim_1%EX
 1558.          if ( dgl%dim_1%EX > 0 ) then
 1558.             $SC_dgl_I25 = dgl%dim_1%SM
 1558.             $SC_dgl_I26 = dgl%dim_1%LB
 1558.             $I_L1558_132 = 0
 1558. !dir$ ivdep
 1558.             do
 1558.                t$818(1 + $I_L1558_132) = (dgl%base_addr)(1 + $I_L1558_132, 0)
 1558.                $I_L1558_132 = 1 + $I_L1558_132
 1558.                if ( $I_L1558_132 >= $F_A33 ) exit
 1558.             enddo
 1558.          endif
 1558. !dir$ suppress t$818
 1558.          t$815 = loc( t$818 )
 1558.       endif
 1558.       t$821 = 0
 1558.       t$824 = 0
 1558.       if ( sdg%header%a_contig == 1 ) then
 1558. !dir$ suppress (sdg%base_addr)(1, 0)
 1558.          t$820 = loc( (sdg%base_addr)(1, 0) )
 1558.       else
 1558.          t$821 = sdg%dim_1%EX
 1558.          t$824 = int( _alloc( max( 0, 8 * max( 0, sdg%dim_1%EX ) ) ), 8 )
 1558.          $F_A34 = sdg%dim_1%EX
 1558.          if ( sdg%dim_1%EX > 0 ) then
 1558.             $SC_sdg_I27 = sdg%dim_1%SM
 1558.             $SC_sdg_I28 = sdg%dim_1%LB
 1558.             $I_L1558_134 = 0
 1558. !dir$ ivdep
 1558.             do
 1558.                t$823(1 + $I_L1558_134) = (sdg%base_addr)(1 + $I_L1558_134, 0)
 1558.                $I_L1558_134 = 1 + $I_L1558_134
 1558.                if ( $I_L1558_134 >= $F_A34 ) exit
 1558.             enddo
 1558.          endif
 1558. !dir$ suppress t$823
 1558.          t$820 = loc( t$823 )
 1558.       endif
 1558.       call tql2_i( nend1, nmx, t$815, t$820, xx(1, 1), eps, ierr )
 1558.       if ( sdg%header%a_contig /= 1 ) then
 1558.          $F_A35 = t$821
 1558.          if ( t$821 > 0 ) then
 1558.             $SC_sdg_I27 = sdg%dim_1%SM
 1558.             $SC_sdg_I29 = sdg%dim_1%EX
 1558.             $SC_sdg_I28 = sdg%dim_1%LB
 1558.             $I_L1558_136 = 0
 1558. !dir$ ivdep
 1558.             do
 1558.                (sdg%base_addr)(1 + $I_L1558_136, 0) = t$823(1 + $I_L1558_136)
 1558.                $I_L1558_136 = 1 + $I_L1558_136
 1558.                if ( $I_L1558_136 >= $F_A35 ) exit
 1558.             enddo
 1558.          endif
 1558.          _free( t$824 )
 1558.       endif
 1558.       if ( dgl%header%a_contig /= 1 ) then
 1558.          $F_A36 = t$816
 1558.          if ( t$816 > 0 ) then
 1558.             $SC_dgl_I25 = dgl%dim_1%SM
 1558.             $SC_dgl_I30 = dgl%dim_1%EX
 1558.             $SC_dgl_I26 = dgl%dim_1%LB
 1558.             $I_L1558_138 = 0
 1558. !dir$ ivdep
 1558.             do
 1558.                (dgl%base_addr)(1 + $I_L1558_138, 0) = t$818(1 + $I_L1558_138)
 1558.                $I_L1558_138 = 1 + $I_L1558_138
 1558.                if ( $I_L1558_138 >= $F_A36 ) exit
 1558.             enddo
 1558.          endif
 1558.          _free( t$819 )
 1558.       endif
 1560.       if ( nmx > 0 ) then
 1568.          $SC_gama_I11 = (gama%base_addr)(2, 0)
 1570.          if ( -2 + nmx >= 0 ) then
 1581.             if ( nmd == 0 ) then
 1582.                $SC_beta_I12 = (beta%base_addr)(1 + 2 * nmx, 0)
 1560.                $I_L1560_140 = 0
 1560. !dir$ ivdep
 1560.                do
 1562.                   $wa_WR0_R0 = -_sqrt( (dgl%base_addr)(1 + $I_L1560_140, 0) )
 1562.                   (wa%base_addr)(1 + 2 * $I_L1560_140, 0) = $wa_WR0_R0
 1563.                   (wa%base_addr)(2 + 2 * $I_L1560_140, 0) = _sqrt( (dgl%base_addr)(1 + $I_L1560_140, 0) )
 1564.                   xa(1, 1 + 2 * $I_L1560_140) = 0.0
 1565.                   xa(1, 2 + 2 * $I_L1560_140) = 0.0
 1566.                   xa(1 + mmax, 1 + 2 * $I_L1560_140) = xx(1, 1 + $I_L1560_140)
 1567.                   xa(1 + mmax, 2 + 2 * $I_L1560_140) = xa(1 + mmax, 1 + 2 * $I_L1560_140)
 1568.                   xa(1 + klmx, 1 + 2 * $I_L1560_140) = ( $SC_gama_I11 * xx(1, 1 + $I_L1560_140) * 1.0/$wa_WR0_R0 )
 1569.                   xa(1 + klmx, 2 + 2 * $I_L1560_140) = -xa(1 + klmx, 1 + 2 * $I_L1560_140)
 1585.                   $I_L1560_140 = 1 + $I_L1560_140
 1584.                   if ( $I_L1560_140 >= nmx ) exit
 1584.                enddo
 1560.                $I_L1560_156 = 0
 1560.                do
 1570.                   $SCA_wa_I23 = (wa%base_addr)(1 + 2 * $I_L1560_156, 0)
 1570.                   $CSVL_V0 = int( cvmg( klmx + -mmax, cvmg( klmx, cvmg( mmax, 2, and( mmax > 0, and( mmax <= 2, mmax <= -2 + nmx ) ) ), and( klmx > 0, and( klmx <= cvmg( mmax, 2, and( mmax > 0, and( mmax <= 2, mmax <= -2 + nmx ) ) ), klmx <= -2 + nmx ) ) ), and( klmx + -mmax > 0, and( klmx + -mmax <= cvmg( klmx, cvmg( mmax, 2, and( mmax > 0, and( mmax <= 2, mmax <= -2 + nmx ) ) ), and( klmx > 0, and( klmx <= cvmg( mmax, 2, and( mmax > 0, and( mmax <= 2, mmax <= -2 + nmx ) ) ), klmx <= -2 + nmx ) ) ), klmx + -mmax <= -2 + nmx ) ) ), 8 )
 1570.                   if ( $CSVL_V0 < 2 ) then
 1570.                      $I_L1570_142 = 0
 1570.                      do
 1572.                         xa(2 + $I_L1570_142, 1 + 2 * $I_L1560_156) = ( ( (beta%base_addr)(3 + 2 * $I_L1570_142, 0) * xx(1 + $I_L1570_142, 1 + $I_L1560_156) + (beta%base_addr)(4 + 2 * $I_L1570_142, 0) * xx(2 + $I_L1570_142, 1 + $I_L1560_156) ) * 1.0/$SCA_wa_I23 )
 1573.                         xa(2 + $I_L1570_142, 2 + 2 * $I_L1560_156) = -xa(2 + $I_L1570_142, 1 + 2 * $I_L1560_156)
 1574.                         xa(mmax + $I_L1570_142 + 2, 1 + 2 * $I_L1560_156) = xx(2 + $I_L1570_142, 1 + $I_L1560_156)
 1575.                         xa(mmax + $I_L1570_142 + 2, 2 + 2 * $I_L1560_156) = xa(mmax + $I_L1570_142 + 2, 1 + 2 * $I_L1560_156)
 1576.                         xa(klmx + $I_L1570_142 + 2, 1 + 2 * $I_L1560_156) = ( (gama%base_addr)(4 + 2 * $I_L1570_142, 0) * xx(2 + $I_L1570_142, 1 + $I_L1560_156) * 1.0/$SCA_wa_I23 )
 1577.                         $LD_SPLT_P0 = xa(klmx + $I_L1570_142 + 2, 1 + 2 * $I_L1560_156)
 1577.                         xa(klmx + $I_L1570_142 + 2, 2 + 2 * $I_L1560_156) = -$LD_SPLT_P0
 1578.                         $I_L1570_142 = 1 + $I_L1570_142
 1570.                         if ( $I_L1570_142 >= -1 + nmx ) exit
 1570.                      enddo
 1570.                   else
 1570.                      $I_L1570_142 = 0
 1570. !dir$ ivdep safevl = $CSVL_V0 !   Guaranteed minimum :: 2
 1570.                      do
 1572.                         xa(2 + $I_L1570_142, 1 + 2 * $I_L1560_156) = ( ( (beta%base_addr)(3 + 2 * $I_L1570_142, 0) * xx(1 + $I_L1570_142, 1 + $I_L1560_156) + (beta%base_addr)(4 + 2 * $I_L1570_142, 0) * xx(2 + $I_L1570_142, 1 + $I_L1560_156) ) * 1.0/$SCA_wa_I23 )
 1573.                         xa(2 + $I_L1570_142, 2 + 2 * $I_L1560_156) = -xa(2 + $I_L1570_142, 1 + 2 * $I_L1560_156)
 1574.                         xa(mmax + $I_L1570_142 + 2, 1 + 2 * $I_L1560_156) = xx(2 + $I_L1570_142, 1 + $I_L1560_156)
 1575.                         xa(mmax + $I_L1570_142 + 2, 2 + 2 * $I_L1560_156) = xa(mmax + $I_L1570_142 + 2, 1 + 2 * $I_L1560_156)
 1576.                         xa(klmx + $I_L1570_142 + 2, 1 + 2 * $I_L1560_156) = ( (gama%base_addr)(4 + 2 * $I_L1570_142, 0) * xx(2 + $I_L1570_142, 1 + $I_L1560_156) * 1.0/$SCA_wa_I23 )
 1577.                         $LD_SPLT_P0 = xa(klmx + $I_L1570_142 + 2, 1 + 2 * $I_L1560_156)
 1577.                         xa(klmx + $I_L1570_142 + 2, 2 + 2 * $I_L1560_156) = -$LD_SPLT_P0
 1578.                         $I_L1570_142 = 1 + $I_L1570_142
 1570.                         if ( $I_L1570_142 >= -1 + nmx ) exit
 1570.                      enddo
 1570.                   endif
 1585.                   $I_L1560_156 = 1 + $I_L1560_156
 1584.                   if ( $I_L1560_156 >= nmx ) exit
 1584.                enddo
 1560.                $I_L1560_144 = 0
 1560. !dir$ ivdep
 1560.                do
 1582.                   $xa_WR0_R1 = ( $SC_beta_I12 * xx(nmx, 1 + $I_L1560_144) * 1.0/(wa%base_addr)(1 + 2 * $I_L1560_144, 0) )
 1582.                   xa(mmax, 1 + 2 * $I_L1560_144) = $xa_WR0_R1
 1583.                   xa(mmax, 2 + 2 * $I_L1560_144) = -$xa_WR0_R1
 1585.                   $I_L1560_144 = 1 + $I_L1560_144
 1584.                   if ( $I_L1560_144 >= nmx ) exit
 1584.                enddo
 1584.             else
 1560.                $I_L1560_146 = 0
 1560. !dir$ ivdep
 1560.                do
 1562.                   $wa_WR0_R2 = -_sqrt( (dgl%base_addr)(1 + $I_L1560_146, 0) )
 1562.                   (wa%base_addr)(1 + 2 * $I_L1560_146, 0) = $wa_WR0_R2
 1563.                   (wa%base_addr)(2 + 2 * $I_L1560_146, 0) = _sqrt( (dgl%base_addr)(1 + $I_L1560_146, 0) )
 1564.                   xa(1, 1 + 2 * $I_L1560_146) = 0.0
 1565.                   xa(1, 2 + 2 * $I_L1560_146) = 0.0
 1566.                   xa(1 + mmax, 1 + 2 * $I_L1560_146) = xx(1, 1 + $I_L1560_146)
 1567.                   xa(1 + mmax, 2 + 2 * $I_L1560_146) = xa(1 + mmax, 1 + 2 * $I_L1560_146)
 1568.                   xa(1 + klmx, 1 + 2 * $I_L1560_146) = ( $SC_gama_I11 * xx(1, 1 + $I_L1560_146) * 1.0/$wa_WR0_R2 )
 1569.                   xa(1 + klmx, 2 + 2 * $I_L1560_146) = -xa(1 + klmx, 1 + 2 * $I_L1560_146)
 1585.                   $I_L1560_146 = 1 + $I_L1560_146
 1584.                   if ( $I_L1560_146 >= nmx ) exit
 1584.                enddo
 1560.                $I_L1560_158 = 0
 1560.                do
 1570.                   $SCA_wa_I24 = (wa%base_addr)(1 + 2 * $I_L1560_158, 0)
 1570.                   $CSVL_V1 = int( cvmg( klmx + -mmax, cvmg( klmx, cvmg( mmax, 2, and( mmax > 0, and( mmax <= 2, mmax <= -2 + nmx ) ) ), and( klmx > 0, and( klmx <= cvmg( mmax, 2, and( mmax > 0, and( mmax <= 2, mmax <= -2 + nmx ) ) ), klmx <= -2 + nmx ) ) ), and( klmx + -mmax > 0, and( klmx + -mmax <= cvmg( klmx, cvmg( mmax, 2, and( mmax > 0, and( mmax <= 2, mmax <= -2 + nmx ) ) ), and( klmx > 0, and( klmx <= cvmg( mmax, 2, and( mmax > 0, and( mmax <= 2, mmax <= -2 + nmx ) ) ), klmx <= -2 + nmx ) ) ), klmx + -mmax <= -2 + nmx ) ) ), 8 )
 1570.                   if ( $CSVL_V1 < 2 ) then
 1570.                      $I_L1570_148 = 0
 1570.                      do
 1572.                         xa(2 + $I_L1570_148, 1 + 2 * $I_L1560_158) = ( ( (beta%base_addr)(3 + 2 * $I_L1570_148, 0) * xx(1 + $I_L1570_148, 1 + $I_L1560_158) + (beta%base_addr)(4 + 2 * $I_L1570_148, 0) * xx(2 + $I_L1570_148, 1 + $I_L1560_158) ) * 1.0/$SCA_wa_I24 )
 1573.                         xa(2 + $I_L1570_148, 2 + 2 * $I_L1560_158) = -xa(2 + $I_L1570_148, 1 + 2 * $I_L1560_158)
 1574.                         xa(mmax + $I_L1570_148 + 2, 1 + 2 * $I_L1560_158) = xx(2 + $I_L1570_148, 1 + $I_L1560_158)
 1575.                         xa(mmax + $I_L1570_148 + 2, 2 + 2 * $I_L1560_158) = xa(mmax + $I_L1570_148 + 2, 1 + 2 * $I_L1560_158)
 1576.                         xa(klmx + $I_L1570_148 + 2, 1 + 2 * $I_L1560_158) = ( (gama%base_addr)(4 + 2 * $I_L1570_148, 0) * xx(2 + $I_L1570_148, 1 + $I_L1560_158) * 1.0/$SCA_wa_I24 )
 1577.                         $LD_SPLT_P1 = xa(klmx + $I_L1570_148 + 2, 1 + 2 * $I_L1560_158)
 1577.                         xa(klmx + $I_L1570_148 + 2, 2 + 2 * $I_L1560_158) = -$LD_SPLT_P1
 1578.                         $I_L1570_148 = 1 + $I_L1570_148
 1570.                         if ( $I_L1570_148 >= -1 + nmx ) exit
 1570.                      enddo
 1570.                   else
 1570.                      $I_L1570_148 = 0
 1570. !dir$ ivdep safevl = $CSVL_V1 !   Guaranteed minimum :: 2
 1570.                      do
 1572.                         xa(2 + $I_L1570_148, 1 + 2 * $I_L1560_158) = ( ( (beta%base_addr)(3 + 2 * $I_L1570_148, 0) * xx(1 + $I_L1570_148, 1 + $I_L1560_158) + (beta%base_addr)(4 + 2 * $I_L1570_148, 0) * xx(2 + $I_L1570_148, 1 + $I_L1560_158) ) * 1.0/$SCA_wa_I24 )
 1573.                         xa(2 + $I_L1570_148, 2 + 2 * $I_L1560_158) = -xa(2 + $I_L1570_148, 1 + 2 * $I_L1560_158)
 1574.                         xa(mmax + $I_L1570_148 + 2, 1 + 2 * $I_L1560_158) = xx(2 + $I_L1570_148, 1 + $I_L1560_158)
 1575.                         xa(mmax + $I_L1570_148 + 2, 2 + 2 * $I_L1560_158) = xa(mmax + $I_L1570_148 + 2, 1 + 2 * $I_L1560_158)
 1576.                         xa(klmx + $I_L1570_148 + 2, 1 + 2 * $I_L1560_158) = ( (gama%base_addr)(4 + 2 * $I_L1570_148, 0) * xx(2 + $I_L1570_148, 1 + $I_L1560_158) * 1.0/$SCA_wa_I24 )
 1577.                         $LD_SPLT_P1 = xa(klmx + $I_L1570_148 + 2, 1 + 2 * $I_L1560_158)
 1577.                         xa(klmx + $I_L1570_148 + 2, 2 + 2 * $I_L1560_158) = -$LD_SPLT_P1
 1578.                         $I_L1570_148 = 1 + $I_L1570_148
 1570.                         if ( $I_L1570_148 >= -1 + nmx ) exit
 1570.                      enddo
 1570.                   endif
 1585.                   $I_L1560_158 = 1 + $I_L1560_158
 1584.                   if ( $I_L1560_158 >= nmx ) exit
 1584.                enddo
 1584.             endif
 1584.          else if ( nmd == 0 ) then
 1582.             $SC_beta_I12 = (beta%base_addr)(1 + 2 * nmx, 0)
 1562.             (wa%base_addr)(1, 0) = -_sqrt( (dgl%base_addr)(1, 0) )
 1563.             (wa%base_addr)(2, 0) = _sqrt( (dgl%base_addr)(1, 0) )
 1564.             xa(1, 1) = 0.0
 1565.             xa(1, 2) = 0.0
 1566.             xa(1 + mmax, 1) = xx(1, 1)
 1567.             xa(1 + mmax, 2) = xa(1 + mmax, 1)
 1568.             xa(1 + klmx, 1) = ( $SC_gama_I11 * xx(1, 1) * 1.0/(wa%base_addr)(1, 0) )
 1569.             xa(1 + klmx, 2) = -xa(1 + klmx, 1)
 1582.             xa(mmax, 1) = ( $SC_beta_I12 * xx(nmx, 1) * 1.0/(wa%base_addr)(1, 0) )
 1583.             xa(mmax, 2) = -xa(mmax, 1)
 1583.          else
 1562.             (wa%base_addr)(1, 0) = -_sqrt( (dgl%base_addr)(1, 0) )
 1563.             (wa%base_addr)(2, 0) = _sqrt( (dgl%base_addr)(1, 0) )
 1564.             xa(1, 1) = 0.0
 1565.             xa(1, 2) = 0.0
 1566.             xa(1 + mmax, 1) = xx(1, 1)
 1567.             xa(1 + mmax, 2) = xa(1 + mmax, 1)
 1568.             xa(1 + klmx, 1) = ( $SC_gama_I11 * xx(1, 1) * 1.0/(wa%base_addr)(1, 0) )
 1569.             xa(1 + klmx, 2) = -xa(1 + klmx, 1)
 1569.          endif
 1569.       endif
 1587.       ncuta = ( 2 * nmx )
 1588.       t$120 = nxas
 1588.       t$330 = max( 0, nxas )
 1588.       t$331 = nxas
 1588.       t$332 = nxas
 1588.       if ( 2 * nmx > 0 ) then
 1588.          if ( nas > 0 ) then
 1588.             $I_L1588_150 = 0
 1588.             do
 1588.                $I_L1588_120 = 0
 1588. !dir$ ivdep
 1588.                do
 1588.                   if ( abs( xa(1 + $I_L1588_120, 1 + $I_L1588_150) ) <= eps ) then
 1588.                      xa(1 + $I_L1588_120, 1 + $I_L1588_150) = 0.0
 1588.                   endif
 1588.                   $I_L1588_120 = 1 + $I_L1588_120
 1588.                   if ( $I_L1588_120 >= nas ) exit
 1588.                enddo
 1588.                $I_L1588_150 = 1 + $I_L1588_150
 1588.                if ( $I_L1588_150 >= ( 2 * nmx ) ) exit
 1588.             enddo
 1588.          endif
 1588.       endif
 1590.       if ( ipr > 0 ) then
 1591.          $Unit_temp_O11 = nfprt
 1591.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O11, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1592.          $Unit_temp_O12 = nfprt
 1592.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O12, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' frequency: nas=', 0x800600000000L ), _iotype( nas, 0x804060200000000L ), _iotype( ' ncuta=', 0x800600000000L ), _iotype( ncuta, 0x804060200000000L ) ) )
 1593.          $Unit_temp_O13 = nfprt
 1593.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O13, Null_Arg, Null_Arg, t$102,  _substr(t$101,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1593.          if ( 2 * nmx > 0 ) then
 1593.             $I_L1593_122 = 0
 1593.             do
 1593.                if ( ( 1 + $I_L1593_122 ) <= 0 .or. ( 1 + $I_L1593_122 ) > wa%dim_1%EX ) then
 1593.                    _substr(t$835,1,17) = 'NonLinearNMI.f90'
 1593.                    _substr(t$836,1,4) = 'WA'
 1593.                   t$807 = wa%dim_1%EX
 1593.                   t$808 = 1 + $I_L1593_122
 1593.                   call _bounds_error(  _substr(t$835,1,17), 2096,  _substr(t$836,1,3), 1, 1, t$807, t$808, t$834 )
 1593.                endif
 1593.                $Unit_temp_O14 = nfprt
 1593.                $IOitem_O15 = ( (wa%base_addr)(1 + $I_L1593_122, 0) * 1.0/twomg )
 1593.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O14, Null_Arg, Null_Arg, t$102,  _substr(t$101,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O15, 0x4000300000000L ) ) )
 1593.                $I_L1593_122 = 1 + $I_L1593_122
 1593.                if ( $I_L1593_122 >= ( 2 * nmx ) ) exit
 1593.             enddo
 1593.          endif
 1593.          $Unit_temp_O16 = nfprt
 1593.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O16, Null_Arg, Null_Arg, t$102,  _substr(t$101,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1594.          $Unit_temp_O17 = nfprt
 1594.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O17, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' period:', 0x800600000000L ) ) )
 1595.          $Unit_temp_O18 = nfprt
 1595.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O18, Null_Arg, Null_Arg, t$104,  _substr(t$103,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1595.          if ( 2 * nmx > 0 ) then
 1595.             $I_L1595_124 = 0
 1595.             do
 1595.                if ( ( 1 + $I_L1595_124 ) <= 0 .or. ( 1 + $I_L1595_124 ) > wa%dim_1%EX ) then
 1595.                    _substr(t$841,1,17) = 'NonLinearNMI.f90'
 1595.                    _substr(t$842,1,4) = 'WA'
 1595.                   t$807 = wa%dim_1%EX
 1595.                   t$808 = 1 + $I_L1595_124
 1595.                   call _bounds_error(  _substr(t$841,1,17), 2098,  _substr(t$842,1,3), 1, 1, t$807, t$808, t$840 )
 1595.                endif
 1595.                $Unit_temp_O19 = nfprt
 1595.                $IOitem_O20 = 1.0/(wa%base_addr)(1 + $I_L1595_124, 0)
 1595.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O19, Null_Arg, Null_Arg, t$104,  _substr(t$103,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O20, 0x4000300000000L ) ) )
 1595.                $I_L1595_124 = 1 + $I_L1595_124
 1595.                if ( $I_L1595_124 >= ( 2 * nmx ) ) exit
 1595.             enddo
 1595.          endif
 1595.          $Unit_temp_O21 = nfprt
 1595.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O21, Null_Arg, Null_Arg, t$104,  _substr(t$103,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1596.          $Unit_temp_O22 = nfprt
 1596.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O22, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1597.          $Unit_temp_O23 = nfprt
 1597.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O23, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' xa: ierr=', 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 1598.          if ( nmx > 0 ) then
 1598.             $I_L1598_152 = 0
 1598.             do
 1599.                $Unit_temp_O24 = nfprt
 1599.                _fwrite( _clist( 0, 0, 2, $Unit_temp_O24, Null_Arg, Null_Arg, t$106,  _substr(t$105,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1599.                $I_L1599_126 = 0
 1599.                do
 1599.                   if ( ( 1 + $I_L1598_152 ) <= 0 .or. ( 1 + $I_L1598_152 ) > t$96 ) then
 1599.                       _substr(t$850,1,17) = 'NonLinearNMI.f90'
 1599.                       _substr(t$851,1,4) = 'XX'
 1599.                      t$807 = 1 + $I_L1598_152
 1599.                      call _bounds_error(  _substr(t$850,1,17), 2102,  _substr(t$851,1,3), 1, 1, t$96, t$807, t$849 )
 1599.                   endif
 1599.                   $Unit_temp_O25 = nfprt
 1599.                   $IOitem_O32 = xx(1 + $I_L1598_152, 1 + $I_L1599_126)
 1599.                   _fwrite( _clist( 0, 0, 0, $Unit_temp_O25, Null_Arg, Null_Arg, t$106,  _substr(t$105,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O32, 0x804060300000000L ) ) )
 1599.                   $I_L1599_126 = 1 + $I_L1599_126
 1599.                   if ( $I_L1599_126 >= nmx ) exit
 1599.                enddo
 1599.                $Unit_temp_O26 = nfprt
 1599.                _fwrite( _clist( 0, 0, 1, $Unit_temp_O26, Null_Arg, Null_Arg, t$106,  _substr(t$105,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1600.                $I_L1598_152 = 1 + $I_L1598_152
 1600.                if ( $I_L1598_152 >= nmx ) exit
 1600.             enddo
 1600.          endif
 1601.          $Unit_temp_O27 = nfprt
 1601.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O27, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1602.          $Unit_temp_O28 = nfprt
 1602.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O28, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' xa:', 0x800600000000L ) ) )
 1603.          if ( nas > 0 ) then
 1604.             if ( ( min( 6, ( 2 * nmx ) ) ) > 0 ) then
 1603.                $I_L1603_154 = 0
 1603.                do
 1604.                   $Unit_temp_O29 = nfprt
 1604.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O29, Null_Arg, Null_Arg, t$108,  _substr(t$107,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1604.                   $I_L1604_128 = 0
 1604.                   do
 1604.                      if ( ( 1 + $I_L1603_154 ) <= 0 .or. ( 1 + $I_L1603_154 ) > t$95 ) then
 1604.                          _substr(t$859,1,17) = 'NonLinearNMI.f90'
 1604.                          _substr(t$860,1,4) = 'XA'
 1604.                         t$808 = 1 + $I_L1603_154
 1604.                         call _bounds_error(  _substr(t$859,1,17), 2107,  _substr(t$860,1,3), 1, 1, t$95, t$808, t$858 )
 1604.                      endif
 1604.                      $Unit_temp_O30 = nfprt
 1604.                      $IOitem_O33 = xa(1 + $I_L1603_154, 1 + $I_L1604_128)
 1604.                      _fwrite( _clist( 0, 0, 0, $Unit_temp_O30, Null_Arg, Null_Arg, t$108,  _substr(t$107,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O33, 0x804060300000000L ) ) )
 1604.                      $I_L1604_128 = 1 + $I_L1604_128
 1604.                      if ( $I_L1604_128 >= min( 6, ( 2 * nmx ) ) ) exit
 1604.                   enddo
 1604.                   $Unit_temp_O31 = nfprt
 1604.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O31, Null_Arg, Null_Arg, t$108,  _substr(t$107,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1605.                   $I_L1603_154 = 1 + $I_L1603_154
 1605.                   if ( $I_L1603_154 >= nas ) exit
 1605.                enddo
 1605.             else
 1603.                $I_L1603_130 = 0
 1603.                do
 1604.                   $Unit_temp_O29 = nfprt
 1604.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O29, Null_Arg, Null_Arg, t$108,  _substr(t$107,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1604.                   $Unit_temp_O31 = nfprt
 1604.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O31, Null_Arg, Null_Arg, t$108,  _substr(t$107,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1605.                   $I_L1603_130 = 1 + $I_L1603_130
 1605.                   if ( $I_L1603_130 >= nas ) exit
 1605.                enddo
 1605.             endif
 1605.          endif
 1605.       endif
 1607.       return
 1607.       end
 1607.       
 1692.       
 1692.       subroutine asyrg( nxas, nas, lmax, mmax, nmd, ipr, ncuta, eps, twomg, percut, alfa, beta, gama, wa, wk, ea, xa )
 1614.       t$109 = nxas
 1622.       t$327 = _zla( 0, nxas )
 1614.       t$328 = _zla( 0, nxas )
 1614.       t$329 = _zla( 0, nxas )
 1628.       if ( nxas > 0 ) then
 1628.          $I_L1628_132 = 0
 1628.          do
 1629.             $I_L1629_122 = 0
 1629. !dir$ ivdep
 1629.             do
 1630.                ea(1 + $I_L1629_122, 1 + $I_L1628_132) = 0.0
 1631.                $I_L1629_122 = 1 + $I_L1629_122
 1629.                if ( $I_L1629_122 >= nxas ) exit
 1629.             enddo
 1634.             $I_L1628_132 = 1 + $I_L1628_132
 1631.             if ( $I_L1628_132 >= nxas ) exit
 1631.          enddo
 1628.          $I_L1628_124 = 0
 1628. !dir$ ivdep
 1628.          do
 1632.             wa(1 + $I_L1628_124) = 0.0
 1633.             wk(1 + $I_L1628_124) = 0.0
 1634.             $I_L1628_124 = 1 + $I_L1628_124
 1631.             if ( $I_L1628_124 >= nxas ) exit
 1631.          enddo
 1631.       endif
 1636.       if ( mmax > 0 ) then
 1636.          $I_L1636_98 = 0
 1636. !dir$ ivdep
 1636.          do
 1637.             ea(1 + $I_L1636_98, 1 + $I_L1636_98) = alfa(1 + 2 * $I_L1636_98)
 1638.             $I_L1636_98 = 1 + $I_L1636_98
 1636.             if ( $I_L1636_98 >= mmax ) exit
 1636.          enddo
 1636.       endif
 1639.       if ( lmax > 0 ) then
 1644.          if ( nmd /= 1 ) then
 1639.             $CSVL_V0 = int( cvmg( 1, cvmg( cvmg( mmax, 2, or( and( -2 * mmax == 0 .and. abs( mmax ) <= -1 + lmax, and( mmax > 0, mmax <= 2 ) ), and( mmax > 0, mmax <= cvmg( mmax, 2, and( -2 * mmax == 0 .and. abs( mmax ) <= -1 + lmax, and( mmax > 0, mmax <= 2 ) ) ) ) ) ), cvmg( mmax, 2, and( -2 * mmax == 0 .and. abs( mmax ) <= -1 + lmax, and( mmax > 0, mmax <= 2 ) ) ), 1 + -mmax == mmax .and. abs( mmax ) <= -1 + lmax ), -2 * mmax == -2 ), 8 )
 1639.             if ( $CSVL_V0 < 2 ) then
 1639.                $I_L1639_100 = 0
 1639.                do
 1642.                   ea(1 + $I_L1639_100, mmax + $I_L1639_100 + 1) = beta(2 + 2 * $I_L1639_100)
 1643.                   ea(mmax + $I_L1639_100 + 1, 1 + $I_L1639_100) = ea(1 + $I_L1639_100, mmax + $I_L1639_100 + 1)
 1645.                   ea(2 + $I_L1639_100, mmax + $I_L1639_100 + 1) = beta(3 + 2 * $I_L1639_100)
 1646.                   ea(mmax + $I_L1639_100 + 1, 2 + $I_L1639_100) = ea(2 + $I_L1639_100, mmax + $I_L1639_100 + 1)
 1648.                   $I_L1639_100 = 1 + $I_L1639_100
 1647.                   if ( $I_L1639_100 >= lmax ) exit
 1647.                enddo
 1647.             else
 1639.                $I_L1639_100 = 0
 1639. !dir$ ivdep safevl = $CSVL_V0 !   Guaranteed minimum :: 2
 1639.                do
 1642.                   ea(1 + $I_L1639_100, mmax + $I_L1639_100 + 1) = beta(2 + 2 * $I_L1639_100)
 1643.                   ea(mmax + $I_L1639_100 + 1, 1 + $I_L1639_100) = ea(1 + $I_L1639_100, mmax + $I_L1639_100 + 1)
 1645.                   ea(2 + $I_L1639_100, mmax + $I_L1639_100 + 1) = beta(3 + 2 * $I_L1639_100)
 1646.                   ea(mmax + $I_L1639_100 + 1, 2 + $I_L1639_100) = ea(2 + $I_L1639_100, mmax + $I_L1639_100 + 1)
 1648.                   $I_L1639_100 = 1 + $I_L1639_100
 1647.                   if ( $I_L1639_100 >= lmax ) exit
 1647.                enddo
 1647.             endif
 1647.          else
 1648.             if ( 0 < -1 + lmax ) then
 1639.                $CSVL_V1 = int( cvmg( 1, cvmg( cvmg( mmax, 2, or( and( mmax > 0, and( mmax <= 2, -2 * mmax == 0 .and. abs( mmax ) <= -2 + lmax ) ), and( mmax > 0, mmax <= cvmg( mmax, 2, and( mmax > 0, and( mmax <= 2, -2 * mmax == 0 .and. abs( mmax ) <= -2 + lmax ) ) ) ) ) ), cvmg( mmax, 2, and( mmax > 0, and( mmax <= 2, -2 * mmax == 0 .and. abs( mmax ) <= -2 + lmax ) ) ), 1 + -mmax == mmax .and. abs( mmax ) <= -2 + lmax ), -2 * mmax == -2 ), 8 )
 1639.                if ( $CSVL_V1 < 2 ) then
 1639.                   $I_L1639_116 = 0
 1639.                   do
 1642.                      ea(1 + $I_L1639_116, mmax + $I_L1639_116 + 1) = beta(2 + 2 * $I_L1639_116)
 1643.                      ea(mmax + $I_L1639_116 + 1, 1 + $I_L1639_116) = ea(1 + $I_L1639_116, mmax + $I_L1639_116 + 1)
 1645.                      ea(2 + $I_L1639_116, mmax + $I_L1639_116 + 1) = beta(3 + 2 * $I_L1639_116)
 1646.                      ea(mmax + $I_L1639_116 + 1, 2 + $I_L1639_116) = ea(2 + $I_L1639_116, mmax + $I_L1639_116 + 1)
 1648.                      $I_L1639_116 = 1 + $I_L1639_116
 1647.                      if ( $I_L1639_116 >= -1 + lmax ) exit
 1647.                   enddo
 1647.                else
 1639.                   $I_L1639_116 = 0
 1639. !dir$ ivdep safevl = $CSVL_V1 !   Guaranteed minimum :: 2
 1639.                   do
 1642.                      ea(1 + $I_L1639_116, mmax + $I_L1639_116 + 1) = beta(2 + 2 * $I_L1639_116)
 1643.                      ea(mmax + $I_L1639_116 + 1, 1 + $I_L1639_116) = ea(1 + $I_L1639_116, mmax + $I_L1639_116 + 1)
 1645.                      ea(2 + $I_L1639_116, mmax + $I_L1639_116 + 1) = beta(3 + 2 * $I_L1639_116)
 1646.                      ea(mmax + $I_L1639_116 + 1, 2 + $I_L1639_116) = ea(2 + $I_L1639_116, mmax + $I_L1639_116 + 1)
 1648.                      $I_L1639_116 = 1 + $I_L1639_116
 1647.                      if ( $I_L1639_116 >= -1 + lmax ) exit
 1647.                   enddo
 1647.                endif
 1647.             endif
 1642.             ea(lmax, mmax + lmax) = beta(2 * lmax)
 1643.             ea(mmax + lmax, lmax) = ea(lmax, mmax + lmax)
 1643.          endif
 1649.          $I_L1649_102 = 0
 1649. !dir$ ivdep
 1649.          do
 1652.             ea(mmax + $I_L1649_102 + 1, mmax + $I_L1649_102 + 1) = alfa(2 + 2 * $I_L1649_102)
 1654.             $ea_WR0_R0 = gama(2 + 2 * $I_L1649_102)
 1654.             ea(mmax + $I_L1649_102 + 1, mmax + lmax + $I_L1649_102 + 1) = $ea_WR0_R0
 1655.             ea(mmax + lmax + $I_L1649_102 + 1, mmax + $I_L1649_102 + 1) = $ea_WR0_R0
 1656.             $I_L1649_102 = 1 + $I_L1649_102
 1649.             if ( $I_L1649_102 >= lmax ) exit
 1649.          enddo
 1649.       endif
 1658.       if ( ipr >= 3 ) then
 1659.          $Unit_temp_O0 = nfprt
 1659.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1660.          $Unit_temp_O1 = nfprt
 1660.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ea:', 0x800600000000L ) ) )
 1661.          if ( nas > 0 ) then
 1662.             if ( nas > 0 ) then
 1661.                $I_L1661_126 = 0
 1661.                do
 1662.                   $Unit_temp_O2 = nfprt
 1662.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O2, Null_Arg, Null_Arg, t$111,  _substr(t$110,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1662.                   $I_L1662_104 = 0
 1662.                   do
 1662.                      if ( ( 1 + $I_L1661_126 ) <= 0 .or. ( 1 + $I_L1661_126 ) > t$109 ) then
 1662.                          _substr(t$883,1,17) = 'NonLinearNMI.f90'
 1662.                          _substr(t$884,1,4) = 'EA'
 1662.                         t$885 = 1 + $I_L1661_126
 1662.                         call _bounds_error(  _substr(t$883,1,17), 2165,  _substr(t$884,1,3), 1, 1, t$109, t$885, t$882 )
 1662.                      endif
 1662.                      $Unit_temp_O3 = nfprt
 1662.                      $IOitem_O26 = ea(1 + $I_L1661_126, 1 + $I_L1662_104)
 1662.                      _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$111,  _substr(t$110,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O26, 0x804060300000000L ) ) )
 1662.                      $I_L1662_104 = 1 + $I_L1662_104
 1662.                      if ( $I_L1662_104 >= nas ) exit
 1662.                   enddo
 1662.                   $Unit_temp_O4 = nfprt
 1662.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O4, Null_Arg, Null_Arg, t$111,  _substr(t$110,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1663.                   $I_L1661_126 = 1 + $I_L1661_126
 1663.                   if ( $I_L1661_126 >= nas ) exit
 1663.                enddo
 1663.             else
 1661.                $I_L1661_118 = 0
 1661.                do
 1662.                   $Unit_temp_O2 = nfprt
 1662.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O2, Null_Arg, Null_Arg, t$111,  _substr(t$110,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1662.                   $Unit_temp_O4 = nfprt
 1662.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O4, Null_Arg, Null_Arg, t$111,  _substr(t$110,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1663.                   $I_L1661_118 = 1 + $I_L1661_118
 1663.                   if ( $I_L1661_118 >= nas ) exit
 1663.                enddo
 1663.             endif
 1663.          endif
 1663.       endif
 1666.       call tred2( nxas, nas, ea(1, 1), wa(1), wk(1), xa(1, 1) )
 1667.       call tql2_i8( nxas, nas, wa(1), wk(1), xa(1, 1), eps, ierr )
 1669.       if ( ipr > 0 ) then
 1670.          $Unit_temp_O5 = nfprt
 1670.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1671.          $Unit_temp_O6 = nfprt
 1671.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' wa: ierr=', 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 1672.          $Unit_temp_O7 = nfprt
 1672.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O7, Null_Arg, Null_Arg, t$113,  _substr(t$112,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1672.          if ( nas > 0 ) then
 1672.             $I_L1672_106 = 0
 1672.             do
 1672.                $Unit_temp_O8 = nfprt
 1672.                $IOitem_O27 = wa(1 + $I_L1672_106)
 1672.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O8, Null_Arg, Null_Arg, t$113,  _substr(t$112,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O27, 0x804060300000000L ) ) )
 1672.                $I_L1672_106 = 1 + $I_L1672_106
 1672.                if ( $I_L1672_106 >= nas ) exit
 1672.             enddo
 1672.          endif
 1672.          $Unit_temp_O9 = nfprt
 1672.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O9, Null_Arg, Null_Arg, t$113,  _substr(t$112,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1672.       endif
 1677.       call order( nxas, nas, wa(1), wk(1), xa(1, 1), ea(1, 1), percut, ncuta )
 1678.       t$120 = nxas
 1678.       t$330 = max( 0, nxas )
 1678.       t$331 = nxas
 1678.       t$332 = nxas
 1678.       if ( ncuta > 0 ) then
 1678.          if ( nas > 0 ) then
 1678.             $I_L1678_128 = 0
 1678.             do
 1678.                $I_L1678_108 = 0
 1678. !dir$ ivdep
 1678.                do
 1678.                   if ( abs( xa(1 + $I_L1678_108, 1 + $I_L1678_128) ) <= eps ) then
 1678.                      xa(1 + $I_L1678_108, 1 + $I_L1678_128) = 0.0
 1678.                   endif
 1678.                   $I_L1678_108 = 1 + $I_L1678_108
 1678.                   if ( $I_L1678_108 >= nas ) exit
 1678.                enddo
 1678.                $I_L1678_128 = 1 + $I_L1678_128
 1678.                if ( $I_L1678_128 >= ncuta ) exit
 1678.             enddo
 1678.          endif
 1678.       endif
 1680.       if ( ipr > 0 ) then
 1681.          $Unit_temp_O10 = nfprt
 1681.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O10, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1682.          $Unit_temp_O11 = nfprt
 1682.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O11, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' frequency: nas=', 0x800600000000L ), _iotype( nas, 0x804060200000000L ), _iotype( ' ncuta=', 0x800600000000L ), _iotype( ncuta, 0x804060200000000L ) ) )
 1683.          $Unit_temp_O12 = nfprt
 1683.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O12, Null_Arg, Null_Arg, t$115,  _substr(t$114,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1683.          if ( ncuta > 0 ) then
 1683.             $I_L1683_110 = 0
 1683.             do
 1683.                $Unit_temp_O13 = nfprt
 1683.                $IOitem_O14 = ( wa(1 + $I_L1683_110) * 1.0/twomg )
 1683.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O13, Null_Arg, Null_Arg, t$115,  _substr(t$114,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O14, 0x4000300000000L ) ) )
 1683.                $I_L1683_110 = 1 + $I_L1683_110
 1683.                if ( $I_L1683_110 >= ncuta ) exit
 1683.             enddo
 1683.          endif
 1683.          $Unit_temp_O15 = nfprt
 1683.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O15, Null_Arg, Null_Arg, t$115,  _substr(t$114,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1684.          $Unit_temp_O16 = nfprt
 1684.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O16, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' period:', 0x800600000000L ) ) )
 1685.          $Unit_temp_O17 = nfprt
 1685.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O17, Null_Arg, Null_Arg, t$117,  _substr(t$116,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1685.          if ( ncuta > 0 ) then
 1685.             $I_L1685_112 = 0
 1685.             do
 1685.                $Unit_temp_O18 = nfprt
 1685.                $IOitem_O19 = 1.0/wa(1 + $I_L1685_112)
 1685.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O18, Null_Arg, Null_Arg, t$117,  _substr(t$116,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O19, 0x4000300000000L ) ) )
 1685.                $I_L1685_112 = 1 + $I_L1685_112
 1685.                if ( $I_L1685_112 >= ncuta ) exit
 1685.             enddo
 1685.          endif
 1685.          $Unit_temp_O20 = nfprt
 1685.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O20, Null_Arg, Null_Arg, t$117,  _substr(t$116,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1686.          $Unit_temp_O21 = nfprt
 1686.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O21, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1687.          $Unit_temp_O22 = nfprt
 1687.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O22, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' xa:', 0x800600000000L ) ) )
 1688.          if ( nas > 0 ) then
 1689.             if ( ( min( 6, ncuta ) ) > 0 ) then
 1688.                $I_L1688_130 = 0
 1688.                do
 1689.                   $Unit_temp_O23 = nfprt
 1689.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O23, Null_Arg, Null_Arg, t$119,  _substr(t$118,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1689.                   $I_L1689_114 = 0
 1689.                   do
 1689.                      if ( ( 1 + $I_L1688_130 ) <= 0 .or. ( 1 + $I_L1688_130 ) > t$109 ) then
 1689.                          _substr(t$902,1,17) = 'NonLinearNMI.f90'
 1689.                          _substr(t$903,1,4) = 'XA'
 1689.                         t$885 = 1 + $I_L1688_130
 1689.                         call _bounds_error(  _substr(t$902,1,17), 2192,  _substr(t$903,1,3), 1, 1, t$109, t$885, t$901 )
 1689.                      endif
 1689.                      $Unit_temp_O24 = nfprt
 1689.                      $IOitem_O28 = xa(1 + $I_L1688_130, 1 + $I_L1689_114)
 1689.                      _fwrite( _clist( 0, 0, 0, $Unit_temp_O24, Null_Arg, Null_Arg, t$119,  _substr(t$118,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O28, 0x804060300000000L ) ) )
 1689.                      $I_L1689_114 = 1 + $I_L1689_114
 1689.                      if ( $I_L1689_114 >= min( 6, ncuta ) ) exit
 1689.                   enddo
 1689.                   $Unit_temp_O25 = nfprt
 1689.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O25, Null_Arg, Null_Arg, t$119,  _substr(t$118,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1690.                   $I_L1688_130 = 1 + $I_L1688_130
 1690.                   if ( $I_L1688_130 >= nas ) exit
 1690.                enddo
 1690.             else
 1688.                $I_L1688_120 = 0
 1688.                do
 1689.                   $Unit_temp_O23 = nfprt
 1689.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O23, Null_Arg, Null_Arg, t$119,  _substr(t$118,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1689.                   $Unit_temp_O25 = nfprt
 1689.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O25, Null_Arg, Null_Arg, t$119,  _substr(t$118,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1690.                   $I_L1688_120 = 1 + $I_L1688_120
 1690.                   if ( $I_L1688_120 >= nas ) exit
 1690.                enddo
 1690.             endif
 1690.          endif
 1690.       endif
 1692.       return
 1692.       end
 1692.       
 1699.       
 1699.       subroutine filter( nm, ni, nj, a, b, c )
 1699.       t$120 = nm
 1704.       t$330 = _zla( 0, nm )
 1699.       t$331 = _zla( 0, nm )
 1699.       t$332 = _zla( 0, nm )
 1707.       if ( nj > 0 ) then
 1708.          if ( ni > 0 ) then
 1707.             $I_L1707_10 = 0
 1707.             do
 1708.                $I_L1708_8 = 0
 1708. !dir$ ivdep
 1708.                do
 1709.                   if ( abs( a(1 + $I_L1708_8, 1 + $I_L1707_10) ) <= c ) then
 1709.                      a(1 + $I_L1708_8, 1 + $I_L1707_10) = b
 1709.                   endif
 1710.                   $I_L1708_8 = 1 + $I_L1708_8
 1709.                   if ( $I_L1708_8 >= ni ) exit
 1709.                enddo
 1712.                $I_L1707_10 = 1 + $I_L1707_10
 1710.                if ( $I_L1707_10 >= nj ) exit
 1710.             enddo
 1710.          endif
 1710.       endif
 1713.       return
 1713.       end
 1713.       
 1720.       
 1720.       subroutine ident( nm, n, z )
 1720.       t$121 = nm
 1726.       t$333 = _zla( 0, nm )
 1720.       t$334 = _zla( 0, nm )
 1720.       t$335 = _zla( 0, nm )
 1732.       if ( n > 0 ) then
 1733.          $I_L1733_8 = 0
 1733.          do
 1732.             $I_L1732_10 = 0
 1732. !dir$ ivdep
 1732.             do
 1734.                z(1 + $I_L1732_10, 1 + $I_L1733_8) = 0.0
 1737.                $I_L1732_10 = 1 + $I_L1732_10
 1733.                if ( $I_L1732_10 >= n ) exit
 1733.             enddo
 1735.             $I_L1733_8 = 1 + $I_L1733_8
 1735.             if ( $I_L1733_8 >= n ) exit
 1735.          enddo
 1732.          $I_L1732_10 = 0
 1732. !dir$ ivdep
 1732.          do
 1736.             z(1 + $I_L1732_10, 1 + $I_L1732_10) = 7.0710678118654746e-1
 1737.             $I_L1732_10 = 1 + $I_L1732_10
 1735.             if ( $I_L1732_10 >= n ) exit
 1735.          enddo
 1735.       endif
 1738.       return
 1738.       end
 1738.       
 1745.       
 1745.       subroutine order( nm, n, fr, fw, z, zw, percut, nf )
 1745.       t$122 = nm
 1751.       t$336 = _zla( 0, nm )
 1745.       t$337 = _zla( 0, nm )
 1745.       t$338 = _zla( 0, nm )
 1758.       if ( ( -1 + n ) > 0 ) then
 1762.          if ( n > 0 ) then
 1757.             do
 1757.                $k_S5 = 0
 1758.                $I_L1758_122 = 0
 1758.                do
 1760.                   if ( abs( fr(1 + $I_L1758_122) ) > abs( fr(2 + $I_L1758_122) ) ) then
 1761.                      $chg_S4 = fr(1 + $I_L1758_122)
 1762.                      $I_L1762_94 = 0
 1762. !dir$ ivdep
 1762.                      do
 1763.                         $fw_WR0_R0 = z(1 + $I_L1762_94, 1 + $I_L1758_122)
 1763.                         fw(1 + $I_L1762_94) = $fw_WR0_R0
 1767.                         z(1 + $I_L1762_94, 1 + $I_L1758_122) = z(1 + $I_L1762_94, 2 + $I_L1758_122)
 1771.                         z(1 + $I_L1762_94, 2 + $I_L1758_122) = $fw_WR0_R0
 1764.                         $I_L1762_94 = 1 + $I_L1762_94
 1762.                         if ( $I_L1762_94 >= n ) exit
 1762.                      enddo
 1765.                      fr(1 + $I_L1758_122) = fr(2 + $I_L1758_122)
 1769.                      fr(2 + $I_L1758_122) = $chg_S4
 1773.                      $k_S5 = 1
 1773.                   endif
 1775.                   $I_L1758_122 = 1 + $I_L1758_122
 1774.                   if ( $I_L1758_122 >= ( -1 + n ) ) exit
 1774.                enddo
 1775.                if ( $k_S5 == 0 ) exit
 1775.             enddo
 1775.          else
 1757.             do
 1757.                $k_S5 = 0
 1758.                $I_L1758_104 = 0
 1758. !dir$ unroll 4
 1758.                do
 1760.                   if ( abs( fr(1 + $I_L1758_104) ) > abs( fr(2 + $I_L1758_104) ) ) then
 1761.                      $chg_S4 = fr(1 + $I_L1758_104)
 1765.                      fr(1 + $I_L1758_104) = fr(2 + $I_L1758_104)
 1769.                      fr(2 + $I_L1758_104) = $chg_S4
 1773.                      $k_S5 = 1
 1773.                   endif
 1775.                   $I_L1758_104 = 1 + $I_L1758_104
 1774.                   if ( $I_L1758_104 >= ( -1 + n ) ) exit
 1774.                enddo
 1775.                if ( $k_S5 == 0 ) exit
 1775.             enddo
 1775.          endif
 1775.       endif
 1778.       if ( percut <= 0.0 ) then
 1779.          nf = n
 1779.       else
 1783.          $nc_S9 = 0
 1784.          if ( n > 0 ) then
 1784.             $I_L1784_96 = 0
 1784. !dir$ ivdep
 1784.             do
 1785.                if ( abs( 1.0/fr(1 + $I_L1784_96) ) > percut ) then
 1785.                   $nc_S9 = ( 1 + $I_L1784_96 )
 1785.                endif
 1786.                $I_L1784_96 = 1 + $I_L1784_96
 1785.                if ( $I_L1784_96 >= n ) exit
 1785.             enddo
 1790.             $I_L1790_106 = 0
 1790. !dir$ ivdep
 1790.             do
 1791.                fw(1 + $I_L1790_106) = fr(1 + $I_L1790_106)
 1795.                $I_L1790_106 = 1 + $I_L1790_106
 1794.                if ( $I_L1790_106 >= n ) exit
 1794.             enddo
 1790.             $I_L1790_124 = 0
 1790.             do
 1792.                $I_L1792_108 = 0
 1792. !dir$ ivdep
 1792.                do
 1793.                   zw(1 + $I_L1792_108, 1 + $I_L1790_124) = z(1 + $I_L1792_108, 1 + $I_L1790_124)
 1794.                   $I_L1792_108 = 1 + $I_L1792_108
 1792.                   if ( $I_L1792_108 >= n ) exit
 1792.                enddo
 1795.                $I_L1790_124 = 1 + $I_L1790_124
 1794.                if ( $I_L1790_124 >= n ) exit
 1794.             enddo
 1794.          endif
 1787.          nf = n + -$nc_S9
 1797.          if ( nm > 0 ) then
 1798.             if ( n > 0 ) then
 1798.                $I_L1798_126 = 0
 1798.                do
 1797.                   $I_L1797_110 = 0
 1797. !dir$ ivdep
 1797.                   do
 1799.                      z(1 + $I_L1797_110, 1 + $I_L1798_126) = 0.0
 1802.                      $I_L1797_110 = 1 + $I_L1797_110
 1798.                      if ( $I_L1797_110 >= nm ) exit
 1798.                   enddo
 1800.                   $I_L1798_126 = 1 + $I_L1798_126
 1800.                   if ( $I_L1798_126 >= n ) exit
 1800.                enddo
 1797.                $I_L1797_112 = 0
 1797. !dir$ ivdep
 1797.                do
 1801.                   fr(1 + $I_L1797_112) = 0.0
 1802.                   $I_L1797_112 = 1 + $I_L1797_112
 1800.                   if ( $I_L1797_112 >= nm ) exit
 1800.                enddo
 1800.             else
 1797.                $I_L1797_98 = 0
 1797. !dir$ ivdep
 1797.                do
 1801.                   fr(1 + $I_L1797_98) = 0.0
 1802.                   $I_L1797_98 = 1 + $I_L1797_98
 1800.                   if ( $I_L1797_98 >= nm ) exit
 1800.                enddo
 1800.             endif
 1800.          endif
 1804.          if ( n + -$nc_S9 > 0 ) then
 1807.             if ( n > 0 ) then
 1804.                $I_L1804_114 = 0
 1804. !dir$ ivdep
 1804.                do
 1806.                   fr(1 + $I_L1804_114) = fw($nc_S9 + $I_L1804_114 + 1)
 1810.                   $I_L1804_114 = 1 + $I_L1804_114
 1809.                   if ( $I_L1804_114 >= ( n + -$nc_S9 ) ) exit
 1809.                enddo
 1804.                $I_L1804_128 = 0
 1804.                do
 1807.                   $I_L1807_116 = 0
 1807. !dir$ ivdep
 1807.                   do
 1808.                      z(1 + $I_L1807_116, 1 + $I_L1804_128) = zw(1 + $I_L1807_116, $nc_S9 + $I_L1804_128 + 1)
 1809.                      $I_L1807_116 = 1 + $I_L1807_116
 1807.                      if ( $I_L1807_116 >= n ) exit
 1807.                   enddo
 1810.                   $I_L1804_128 = 1 + $I_L1804_128
 1809.                   if ( $I_L1804_128 >= ( n + -$nc_S9 ) ) exit
 1809.                enddo
 1809.             else
 1804.                $I_L1804_100 = 0
 1804. !dir$ ivdep
 1804.                do
 1806.                   fr(1 + $I_L1804_100) = fw($nc_S9 + $I_L1804_100 + 1)
 1810.                   $I_L1804_100 = 1 + $I_L1804_100
 1809.                   if ( $I_L1804_100 >= ( n + -$nc_S9 ) ) exit
 1809.                enddo
 1809.             endif
 1809.          endif
 1813.          if ( $nc_S9 > 0 ) then
 1816.             if ( n > 0 ) then
 1813.                $I_L1813_118 = 0
 1813. !dir$ ivdep
 1813.                do
 1815.                   fr(n + $I_L1813_118 + -$nc_S9 + 1) = fw(1 + $I_L1813_118)
 1819.                   $I_L1813_118 = 1 + $I_L1813_118
 1818.                   if ( $I_L1813_118 >= $nc_S9 ) exit
 1818.                enddo
 1813.                $I_L1813_130 = 0
 1813.                do
 1816.                   $I_L1816_120 = 0
 1816. !dir$ ivdep
 1816.                   do
 1817.                      z(1 + $I_L1816_120, n + $I_L1813_130 + -$nc_S9 + 1) = zw(1 + $I_L1816_120, 1 + $I_L1813_130)
 1818.                      $I_L1816_120 = 1 + $I_L1816_120
 1816.                      if ( $I_L1816_120 >= n ) exit
 1816.                   enddo
 1819.                   $I_L1813_130 = 1 + $I_L1813_130
 1818.                   if ( $I_L1813_130 >= $nc_S9 ) exit
 1818.                enddo
 1818.             else
 1813.                $I_L1813_102 = 0
 1813. !dir$ ivdep
 1813.                do
 1815.                   fr(n + $I_L1813_102 + -$nc_S9 + 1) = fw(1 + $I_L1813_102)
 1819.                   $I_L1813_102 = 1 + $I_L1813_102
 1818.                   if ( $I_L1813_102 >= $nc_S9 ) exit
 1818.                enddo
 1818.             endif
 1818.          endif
 1818.       endif
 1820.       return
 1820.       end
 1820.       
 1827.       
 1827.       subroutine record( nx, nc, nm, ww, xx, pp, gg )
 1827.       t$123 = nx
 1831.       t$339 = _zla( 0, nx )
 1827.       t$340 = _zla( 0, nx )
 1827.       t$341 = _zla( 0, nx ) * _zla( 0, nx )
 1827.       t$124 = nc
 1832.       t$342 = _zla( 0, nc )
 1827.       t$125 = nm
 1827.       t$343 = _zla( 0, nc )
 1832.       t$344 = _zla( 0, nm )
 1827.       t$345 = _zla( 0, nc ) * _zla( 0, nm )
 1836.       $Unit_temp_O0 = nfnmi
 1836.       $_IOitem_P0(0) = nc
 1836.       $_IOitem_P0(1) = nm
 1836.       _uwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 1, 1 )), 0x804060200000000L ) ) )
 1837.       if ( nc /= 0 ) then
 1839.          $F_A33 = nc
 1839.          if ( nc > 0 ) then
 1839.             $I_L1839_18 = 0
 1839. !dir$ ivdep
 1839.             do
 1839.                pp(1 + $I_L1839_18) = 0.0
 1839.                $I_L1839_18 = 1 + $I_L1839_18
 1839.                if ( $I_L1839_18 >= $F_A33 ) exit
 1839.             enddo
 1839.          endif
 1840.          $F_A34 = nm
 1840.          $F_A35 = nc
 1840.          if ( and( -$F_A35, -$F_A34 ) < 0 ) then
 1840.             $I_L1840_27 = 0
 1840.             do
 1840.                $I_L1840_20 = 0
 1840. !dir$ ivdep
 1840.                do
 1840.                   gg(1 + $I_L1840_20, 1 + $I_L1840_27) = 0.0
 1840.                   $I_L1840_20 = 1 + $I_L1840_20
 1840.                   if ( $I_L1840_20 >= $F_A35 ) exit
 1840.                enddo
 1840.                $I_L1840_27 = 1 + $I_L1840_27
 1840.                if ( $I_L1840_27 >= $F_A34 ) exit
 1840.             enddo
 1840.          endif
 1842.          if ( nc > 0 ) then
 1844.             if ( nm > 0 ) then
 1842.                $I_L1842_31 = 0
 1842.                do
 1844.                   $I_L1844_29 = 0
 1844.                   if ( nm >= 4 ) then
 1844.                      $I_L1844_36 = 0
 1844. !dir$ blocking_size( 0, 0 )
 1844.                      do
 1842.                         $I_L1842_22 = 0
 1842. !dir$ ivdep
 1842. !dir$ blocking_size( 256, 256 )
 1842.                         do
 1845.                            gg($I_L1842_22 + 256 * $I_L1842_31 + 1, 1 + 4 * $I_L1844_36) = xx(1 + 4 * $I_L1844_36, $I_L1842_22 + 256 * $I_L1842_31 + 1)
 1845.                            gg($I_L1842_22 + 256 * $I_L1842_31 + 1, 2 + 4 * $I_L1844_36) = xx(2 + 4 * $I_L1844_36, $I_L1842_22 + 256 * $I_L1842_31 + 1)
 1845.                            gg($I_L1842_22 + 256 * $I_L1842_31 + 1, 3 + 4 * $I_L1844_36) = xx(3 + 4 * $I_L1844_36, $I_L1842_22 + 256 * $I_L1842_31 + 1)
 1845.                            gg($I_L1842_22 + 256 * $I_L1842_31 + 1, 4 + 4 * $I_L1844_36) = xx(4 + 4 * $I_L1844_36, $I_L1842_22 + 256 * $I_L1842_31 + 1)
 1842.                            $I_L1842_22 = 1 + $I_L1842_22
 1844.                            if ( $I_L1842_22 >= min( nc, 256 + 256 * $I_L1842_31 ) + -256 * $I_L1842_31 ) exit
 1844.                         enddo
 1846.                         $I_L1844_36 = 1 + $I_L1844_36
 1846.                         if ( $I_L1844_36 >= _rsh( nm, 2 ) ) exit
 1846.                      enddo
 1846.                      $I_L1844_29 = and( 0xfffffffffffffffcUL, nm )
 1846.                   endif
 1844.                   if ( $I_L1844_29 < nm ) then
 1844.                      $I_L1844_33 = 0
 1844. !dir$ blocking_size( 0, 0 )
 1844.                      do
 1842.                         $I_L1842_22 = 0
 1842. !dir$ ivdep
 1842. !dir$ blocking_size( 256, 256 )
 1842.                         do
 1845.                            gg($I_L1842_22 + 256 * $I_L1842_31 + 1, $I_L1844_29 + $I_L1844_33 + 1) = xx($I_L1844_29 + $I_L1844_33 + 1, $I_L1842_22 + 256 * $I_L1842_31 + 1)
 1842.                            $I_L1842_22 = 1 + $I_L1842_22
 1844.                            if ( $I_L1842_22 >= min( nc, 256 + 256 * $I_L1842_31 ) + -256 * $I_L1842_31 ) exit
 1844.                         enddo
 1846.                         $I_L1844_33 = 1 + $I_L1844_33
 1846.                         if ( $I_L1844_33 >= nm + -$I_L1844_29 ) exit
 1846.                      enddo
 1846.                   endif
 1842.                   $I_L1842_31 = 1 + $I_L1842_31
 1846.                   if ( $I_L1842_31 >= 1 + max( 0, -1 + _rsh( 255 + nc, 8 ) ) ) exit
 1846.                enddo
 1842.                $I_L1842_25 = 0
 1842. !dir$ ivdep
 1842.                do
 1843.                   pp(1 + $I_L1842_25) = 1.0/ww(1 + $I_L1842_25)
 1847.                   $I_L1842_25 = 1 + $I_L1842_25
 1846.                   if ( $I_L1842_25 >= nc ) exit
 1846.                enddo
 1846.             else
 1842.                $I_L1842_16 = 0
 1842. !dir$ ivdep
 1842.                do
 1843.                   pp(1 + $I_L1842_16) = 1.0/ww(1 + $I_L1842_16)
 1847.                   $I_L1842_16 = 1 + $I_L1842_16
 1846.                   if ( $I_L1842_16 >= nc ) exit
 1846.                enddo
 1846.             endif
 1846.          endif
 1848.          $Unit_temp_O1 = nfnmi
 1848.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( pp(+:( 1, nc, 1 )), 0x804060300000000L ), _iotype( gg(+:( 1, nc, 1 ), +:( 1, nm, 1 )), 0x804060300000000L ) ) )
 1848.       endif
 1849.       return
 1849.       end
 1849.       
 1960.       
 1960.       subroutine symg0( nxsy, nsy, nend1, lmax, klmx, nmd, ipr, ncuts, eps, twomg, beta, gama, ws, sdg, dgl, xs, xx )
 1857.       t$126 = nxsy
 1866.       t$346 = _zla( 0, nxsy )
 1857.       t$347 = _zla( 0, nxsy )
 1857.       t$348 = _zla( 0, nxsy )
 1857.       t$127 = nend1
 1866.       t$349 = _zla( 0, nend1 )
 1857.       t$350 = _zla( 0, nend1 )
 1857.       t$351 = _zla( 0, nend1 )
 1874.       sdg(1) = 0.0
 1876.       dgl(1) = beta(3) * beta(3) + beta(4) * beta(4) + gama(3) * gama(3)
 1878.       nmx = -1 + lmax
 1879.       if ( -3 + lmax >= 0 ) then
 1879.          $I_L1879_106 = 0
 1879. !dir$ ivdep
 1879.          do
 1881.             sdg(2 + $I_L1879_106) = beta(4 + 2 * $I_L1879_106) * beta(5 + 2 * $I_L1879_106)
 1882.             dgl(2 + $I_L1879_106) = beta(5 + 2 * $I_L1879_106) * beta(5 + 2 * $I_L1879_106) + beta(6 + 2 * $I_L1879_106) * beta(6 + 2 * $I_L1879_106) + gama(5 + 2 * $I_L1879_106) * gama(5 + 2 * $I_L1879_106)
 1884.             $I_L1879_106 = 1 + $I_L1879_106
 1879.             if ( $I_L1879_106 >= -2 + lmax ) exit
 1879.          enddo
 1879.       endif
 1885.       if ( nmd == 0 ) then
 1886.          nmx = lmax
 1889.          sdg(lmax) = beta(2 * lmax) * beta(1 + 2 * lmax)
 1890.          dgl(lmax) = beta(1 + 2 * lmax) * beta(1 + 2 * lmax) + gama(1 + 2 * lmax) * gama(1 + 2 * lmax)
 1890.       endif
 1893.       if ( ipr > 0 ) then
 1894.          $Unit_temp_O0 = nfprt
 1894.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1895.          $Unit_temp_O1 = nfprt
 1895.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' sdg:', 0x800600000000L ) ) )
 1896.          $Unit_temp_O2 = nfprt
 1896.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O2, Null_Arg, Null_Arg, t$129,  _substr(t$128,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1896.          if ( nmx > 0 ) then
 1896.             $I_L1896_108 = 0
 1896.             do
 1896.                $Unit_temp_O3 = nfprt
 1896.                $IOitem_O30 = sdg(1 + $I_L1896_108)
 1896.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$129,  _substr(t$128,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O30, 0x804060300000000L ) ) )
 1896.                $I_L1896_108 = 1 + $I_L1896_108
 1896.                if ( $I_L1896_108 >= nmx ) exit
 1896.             enddo
 1896.          endif
 1896.          $Unit_temp_O4 = nfprt
 1896.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O4, Null_Arg, Null_Arg, t$129,  _substr(t$128,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1897.          $Unit_temp_O5 = nfprt
 1897.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' dgs:', 0x800600000000L ) ) )
 1898.          $Unit_temp_O6 = nfprt
 1898.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O6, Null_Arg, Null_Arg, t$131,  _substr(t$130,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1898.          if ( nmx > 0 ) then
 1898.             $I_L1898_110 = 0
 1898.             do
 1898.                $Unit_temp_O7 = nfprt
 1898.                $IOitem_O31 = dgl(1 + $I_L1898_110)
 1898.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O7, Null_Arg, Null_Arg, t$131,  _substr(t$130,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O31, 0x804060300000000L ) ) )
 1898.                $I_L1898_110 = 1 + $I_L1898_110
 1898.                if ( $I_L1898_110 >= nmx ) exit
 1898.             enddo
 1898.          endif
 1898.          $Unit_temp_O8 = nfprt
 1898.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O8, Null_Arg, Null_Arg, t$131,  _substr(t$130,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1898.       endif
 1901.       call ident( nend1, nmx, xx(1, 1) )
 1902.       call tql2_i( nend1, nmx, dgl(1), sdg(1), xx(1, 1), eps, ierr )
 1904.       if ( nmx > 0 ) then
 1908.          $SC_beta_I0 = beta(3)
 1914.          if ( -2 + nmx >= 0 ) then
 1925.             if ( nmd == 1 ) then
 1930.                $SC_gama_I2 = gama(-1 + 2 * lmax)
 1926.                $SC_beta_I1 = beta(2 * lmax)
 1904.                $I_L1904_124 = 0
 1904. !dir$ ivdep
 1904.                do
 1906.                   $ws_WR0_R0 = -_sqrt( dgl(1 + $I_L1904_124) )
 1906.                   ws(1 + 2 * $I_L1904_124) = $ws_WR0_R0
 1907.                   ws(2 + 2 * $I_L1904_124) = _sqrt( dgl(1 + $I_L1904_124) )
 1908.                   xs(1, 1 + 2 * $I_L1904_124) = ( $SC_beta_I0 * xx(1, 1 + $I_L1904_124) * 1.0/$ws_WR0_R0 )
 1909.                   xs(1, 2 + 2 * $I_L1904_124) = -xs(1, 1 + 2 * $I_L1904_124)
 1910.                   xs(1 + lmax, 1 + 2 * $I_L1904_124) = 0.0
 1911.                   xs(1 + lmax, 2 + 2 * $I_L1904_124) = 0.0
 1912.                   xs(1 + klmx, 1 + 2 * $I_L1904_124) = 0.0
 1913.                   xs(1 + klmx, 2 + 2 * $I_L1904_124) = 0.0
 1938.                   $I_L1904_124 = 1 + $I_L1904_124
 1937.                   if ( $I_L1904_124 >= nmx ) exit
 1937.                enddo
 1904.                $I_L1904_142 = 0
 1904.                do
 1914.                   $SCA_ws_I4 = ws(1 + 2 * $I_L1904_142)
 1914.                   $CSVL_V0 = int( cvmg( klmx + -lmax, cvmg( klmx, cvmg( lmax, 2, and( lmax > 0, and( lmax <= 2, lmax <= -2 + nmx ) ) ), and( klmx > 0, and( klmx <= cvmg( lmax, 2, and( lmax > 0, and( lmax <= 2, lmax <= -2 + nmx ) ) ), klmx <= -2 + nmx ) ) ), and( klmx + -lmax > 0, and( klmx + -lmax <= cvmg( klmx, cvmg( lmax, 2, and( lmax > 0, and( lmax <= 2, lmax <= -2 + nmx ) ) ), and( klmx > 0, and( klmx <= cvmg( lmax, 2, and( lmax > 0, and( lmax <= 2, lmax <= -2 + nmx ) ) ), klmx <= -2 + nmx ) ) ), klmx + -lmax <= -2 + nmx ) ) ), 8 )
 1914.                   if ( $CSVL_V0 < 2 ) then
 1914.                      $I_L1914_126 = 0
 1914.                      do
 1916.                         xs(2 + $I_L1914_126, 1 + 2 * $I_L1904_142) = ( ( beta(4 + 2 * $I_L1914_126) * xx(1 + $I_L1914_126, 1 + $I_L1904_142) + beta(5 + 2 * $I_L1914_126) * xx(2 + $I_L1914_126, 1 + $I_L1904_142) ) * 1.0/$SCA_ws_I4 )
 1917.                         xs(2 + $I_L1914_126, 2 + 2 * $I_L1904_142) = -xs(2 + $I_L1914_126, 1 + 2 * $I_L1904_142)
 1918.                         xs(lmax + $I_L1914_126 + 2, 1 + 2 * $I_L1904_142) = xx(1 + $I_L1914_126, 1 + $I_L1904_142)
 1919.                         xs(lmax + $I_L1914_126 + 2, 2 + 2 * $I_L1904_142) = xs(lmax + $I_L1914_126 + 2, 1 + 2 * $I_L1904_142)
 1920.                         xs(klmx + $I_L1914_126 + 2, 1 + 2 * $I_L1904_142) = ( gama(3 + 2 * $I_L1914_126) * xx(1 + $I_L1914_126, 1 + $I_L1904_142) * 1.0/$SCA_ws_I4 )
 1921.                         $LD_SPLT_P0 = xs(klmx + $I_L1914_126 + 2, 1 + 2 * $I_L1904_142)
 1921.                         xs(klmx + $I_L1914_126 + 2, 2 + 2 * $I_L1904_142) = -$LD_SPLT_P0
 1922.                         $I_L1914_126 = 1 + $I_L1914_126
 1914.                         if ( $I_L1914_126 >= -1 + nmx ) exit
 1914.                      enddo
 1914.                   else
 1914.                      $I_L1914_126 = 0
 1914. !dir$ ivdep safevl = $CSVL_V0 !   Guaranteed minimum :: 2
 1914.                      do
 1916.                         xs(2 + $I_L1914_126, 1 + 2 * $I_L1904_142) = ( ( beta(4 + 2 * $I_L1914_126) * xx(1 + $I_L1914_126, 1 + $I_L1904_142) + beta(5 + 2 * $I_L1914_126) * xx(2 + $I_L1914_126, 1 + $I_L1904_142) ) * 1.0/$SCA_ws_I4 )
 1917.                         xs(2 + $I_L1914_126, 2 + 2 * $I_L1904_142) = -xs(2 + $I_L1914_126, 1 + 2 * $I_L1904_142)
 1918.                         xs(lmax + $I_L1914_126 + 2, 1 + 2 * $I_L1904_142) = xx(1 + $I_L1914_126, 1 + $I_L1904_142)
 1919.                         xs(lmax + $I_L1914_126 + 2, 2 + 2 * $I_L1904_142) = xs(lmax + $I_L1914_126 + 2, 1 + 2 * $I_L1904_142)
 1920.                         xs(klmx + $I_L1914_126 + 2, 1 + 2 * $I_L1904_142) = ( gama(3 + 2 * $I_L1914_126) * xx(1 + $I_L1914_126, 1 + $I_L1904_142) * 1.0/$SCA_ws_I4 )
 1921.                         $LD_SPLT_P0 = xs(klmx + $I_L1914_126 + 2, 1 + 2 * $I_L1904_142)
 1921.                         xs(klmx + $I_L1914_126 + 2, 2 + 2 * $I_L1904_142) = -$LD_SPLT_P0
 1922.                         $I_L1914_126 = 1 + $I_L1914_126
 1914.                         if ( $I_L1914_126 >= -1 + nmx ) exit
 1914.                      enddo
 1914.                   endif
 1938.                   $I_L1904_142 = 1 + $I_L1904_142
 1937.                   if ( $I_L1904_142 >= nmx ) exit
 1937.                enddo
 1904.                $I_L1904_128 = 0
 1904. !dir$ ivdep
 1904.                do
 1926.                   xs(lmax, 1 + 2 * $I_L1904_128) = ( $SC_beta_I1 * xx(-1 + lmax, 1 + $I_L1904_128) * 1.0/ws(1 + 2 * $I_L1904_128) )
 1927.                   xs(lmax, 2 + 2 * $I_L1904_128) = -xs(lmax, 1 + 2 * $I_L1904_128)
 1928.                   xs(klmx, 1 + 2 * $I_L1904_128) = xx(-1 + lmax, 1 + $I_L1904_128)
 1929.                   xs(klmx, 2 + 2 * $I_L1904_128) = xs(klmx, 1 + 2 * $I_L1904_128)
 1930.                   xs(nsy, 1 + 2 * $I_L1904_128) = ( $SC_gama_I2 * xx(-1 + lmax, 1 + $I_L1904_128) * 1.0/ws(1 + 2 * $I_L1904_128) )
 1931.                   xs(nsy, 2 + 2 * $I_L1904_128) = -xs(nsy, 1 + 2 * $I_L1904_128)
 1938.                   $I_L1904_128 = 1 + $I_L1904_128
 1937.                   if ( $I_L1904_128 >= nmx ) exit
 1937.                enddo
 1937.             else
 1935.                $SC_gama_I3 = gama(1 + 2 * lmax)
 1904.                $I_L1904_130 = 0
 1904. !dir$ ivdep
 1904.                do
 1906.                   $ws_WR0_R1 = -_sqrt( dgl(1 + $I_L1904_130) )
 1906.                   ws(1 + 2 * $I_L1904_130) = $ws_WR0_R1
 1907.                   ws(2 + 2 * $I_L1904_130) = _sqrt( dgl(1 + $I_L1904_130) )
 1908.                   xs(1, 1 + 2 * $I_L1904_130) = ( $SC_beta_I0 * xx(1, 1 + $I_L1904_130) * 1.0/$ws_WR0_R1 )
 1909.                   xs(1, 2 + 2 * $I_L1904_130) = -xs(1, 1 + 2 * $I_L1904_130)
 1910.                   xs(1 + lmax, 1 + 2 * $I_L1904_130) = 0.0
 1911.                   xs(1 + lmax, 2 + 2 * $I_L1904_130) = 0.0
 1912.                   xs(1 + klmx, 1 + 2 * $I_L1904_130) = 0.0
 1913.                   xs(1 + klmx, 2 + 2 * $I_L1904_130) = 0.0
 1938.                   $I_L1904_130 = 1 + $I_L1904_130
 1937.                   if ( $I_L1904_130 >= nmx ) exit
 1937.                enddo
 1904.                $I_L1904_144 = 0
 1904.                do
 1914.                   $SCA_ws_I5 = ws(1 + 2 * $I_L1904_144)
 1914.                   $CSVL_V1 = int( cvmg( klmx + -lmax, cvmg( klmx, cvmg( lmax, 2, and( lmax > 0, and( lmax <= 2, lmax <= -2 + nmx ) ) ), and( klmx > 0, and( klmx <= cvmg( lmax, 2, and( lmax > 0, and( lmax <= 2, lmax <= -2 + nmx ) ) ), klmx <= -2 + nmx ) ) ), and( klmx + -lmax > 0, and( klmx + -lmax <= cvmg( klmx, cvmg( lmax, 2, and( lmax > 0, and( lmax <= 2, lmax <= -2 + nmx ) ) ), and( klmx > 0, and( klmx <= cvmg( lmax, 2, and( lmax > 0, and( lmax <= 2, lmax <= -2 + nmx ) ) ), klmx <= -2 + nmx ) ) ), klmx + -lmax <= -2 + nmx ) ) ), 8 )
 1914.                   if ( $CSVL_V1 < 2 ) then
 1914.                      $I_L1914_132 = 0
 1914.                      do
 1916.                         xs(2 + $I_L1914_132, 1 + 2 * $I_L1904_144) = ( ( beta(4 + 2 * $I_L1914_132) * xx(1 + $I_L1914_132, 1 + $I_L1904_144) + beta(5 + 2 * $I_L1914_132) * xx(2 + $I_L1914_132, 1 + $I_L1904_144) ) * 1.0/$SCA_ws_I5 )
 1917.                         xs(2 + $I_L1914_132, 2 + 2 * $I_L1904_144) = -xs(2 + $I_L1914_132, 1 + 2 * $I_L1904_144)
 1918.                         xs(lmax + $I_L1914_132 + 2, 1 + 2 * $I_L1904_144) = xx(1 + $I_L1914_132, 1 + $I_L1904_144)
 1919.                         xs(lmax + $I_L1914_132 + 2, 2 + 2 * $I_L1904_144) = xs(lmax + $I_L1914_132 + 2, 1 + 2 * $I_L1904_144)
 1920.                         xs(klmx + $I_L1914_132 + 2, 1 + 2 * $I_L1904_144) = ( gama(3 + 2 * $I_L1914_132) * xx(1 + $I_L1914_132, 1 + $I_L1904_144) * 1.0/$SCA_ws_I5 )
 1921.                         $LD_SPLT_P1 = xs(klmx + $I_L1914_132 + 2, 1 + 2 * $I_L1904_144)
 1921.                         xs(klmx + $I_L1914_132 + 2, 2 + 2 * $I_L1904_144) = -$LD_SPLT_P1
 1922.                         $I_L1914_132 = 1 + $I_L1914_132
 1914.                         if ( $I_L1914_132 >= -1 + nmx ) exit
 1914.                      enddo
 1914.                   else
 1914.                      $I_L1914_132 = 0
 1914. !dir$ ivdep safevl = $CSVL_V1 !   Guaranteed minimum :: 2
 1914.                      do
 1916.                         xs(2 + $I_L1914_132, 1 + 2 * $I_L1904_144) = ( ( beta(4 + 2 * $I_L1914_132) * xx(1 + $I_L1914_132, 1 + $I_L1904_144) + beta(5 + 2 * $I_L1914_132) * xx(2 + $I_L1914_132, 1 + $I_L1904_144) ) * 1.0/$SCA_ws_I5 )
 1917.                         xs(2 + $I_L1914_132, 2 + 2 * $I_L1904_144) = -xs(2 + $I_L1914_132, 1 + 2 * $I_L1904_144)
 1918.                         xs(lmax + $I_L1914_132 + 2, 1 + 2 * $I_L1904_144) = xx(1 + $I_L1914_132, 1 + $I_L1904_144)
 1919.                         xs(lmax + $I_L1914_132 + 2, 2 + 2 * $I_L1904_144) = xs(lmax + $I_L1914_132 + 2, 1 + 2 * $I_L1904_144)
 1920.                         xs(klmx + $I_L1914_132 + 2, 1 + 2 * $I_L1904_144) = ( gama(3 + 2 * $I_L1914_132) * xx(1 + $I_L1914_132, 1 + $I_L1904_144) * 1.0/$SCA_ws_I5 )
 1921.                         $LD_SPLT_P1 = xs(klmx + $I_L1914_132 + 2, 1 + 2 * $I_L1904_144)
 1921.                         xs(klmx + $I_L1914_132 + 2, 2 + 2 * $I_L1904_144) = -$LD_SPLT_P1
 1922.                         $I_L1914_132 = 1 + $I_L1914_132
 1914.                         if ( $I_L1914_132 >= -1 + nmx ) exit
 1914.                      enddo
 1914.                   endif
 1938.                   $I_L1904_144 = 1 + $I_L1904_144
 1937.                   if ( $I_L1904_144 >= nmx ) exit
 1937.                enddo
 1904.                $I_L1904_134 = 0
 1904. !dir$ ivdep
 1904.                do
 1933.                   xs(klmx, 1 + 2 * $I_L1904_134) = xx(lmax, 1 + $I_L1904_134)
 1934.                   xs(klmx, 2 + 2 * $I_L1904_134) = xs(klmx, 1 + 2 * $I_L1904_134)
 1935.                   xs(nsy, 1 + 2 * $I_L1904_134) = ( $SC_gama_I3 * xx(lmax, 1 + $I_L1904_134) * 1.0/ws(1 + 2 * $I_L1904_134) )
 1936.                   xs(nsy, 2 + 2 * $I_L1904_134) = -xs(nsy, 1 + 2 * $I_L1904_134)
 1938.                   $I_L1904_134 = 1 + $I_L1904_134
 1937.                   if ( $I_L1904_134 >= nmx ) exit
 1937.                enddo
 1937.             endif
 1937.          else if ( nmd == 1 ) then
 1930.             $SC_gama_I2 = gama(-1 + 2 * lmax)
 1926.             $SC_beta_I1 = beta(2 * lmax)
 1906.             ws(1) = -_sqrt( dgl(1) )
 1907.             ws(2) = _sqrt( dgl(1) )
 1908.             xs(1, 1) = ( $SC_beta_I0 * xx(1, 1) * 1.0/ws(1) )
 1909.             xs(1, 2) = -xs(1, 1)
 1910.             xs(1 + lmax, 1) = 0.0
 1911.             xs(1 + lmax, 2) = 0.0
 1912.             xs(1 + klmx, 1) = 0.0
 1913.             xs(1 + klmx, 2) = 0.0
 1926.             xs(lmax, 1) = ( $SC_beta_I1 * xx(-1 + lmax, 1) * 1.0/ws(1) )
 1927.             xs(lmax, 2) = -xs(lmax, 1)
 1928.             xs(klmx, 1) = xx(-1 + lmax, 1)
 1929.             xs(klmx, 2) = xs(klmx, 1)
 1930.             xs(nsy, 1) = ( $SC_gama_I2 * xx(-1 + lmax, 1) * 1.0/ws(1) )
 1931.             xs(nsy, 2) = -xs(nsy, 1)
 1931.          else
 1935.             $SC_gama_I3 = gama(1 + 2 * lmax)
 1906.             ws(1) = -_sqrt( dgl(1) )
 1907.             ws(2) = _sqrt( dgl(1) )
 1908.             xs(1, 1) = ( $SC_beta_I0 * xx(1, 1) * 1.0/ws(1) )
 1909.             xs(1, 2) = -xs(1, 1)
 1910.             xs(1 + lmax, 1) = 0.0
 1911.             xs(1 + lmax, 2) = 0.0
 1912.             xs(1 + klmx, 1) = 0.0
 1913.             xs(1 + klmx, 2) = 0.0
 1933.             xs(klmx, 1) = xx(lmax, 1)
 1934.             xs(klmx, 2) = xs(klmx, 1)
 1935.             xs(nsy, 1) = ( $SC_gama_I3 * xx(lmax, 1) * 1.0/ws(1) )
 1936.             xs(nsy, 2) = -xs(nsy, 1)
 1936.          endif
 1936.       endif
 1940.       ncuts = ( 2 * nmx )
 1941.       t$120 = nxsy
 1941.       t$330 = max( 0, nxsy )
 1941.       t$331 = nxsy
 1941.       t$332 = nxsy
 1941.       if ( 2 * nmx > 0 ) then
 1941.          if ( nsy > 0 ) then
 1941.             $I_L1941_136 = 0
 1941.             do
 1941.                $I_L1941_112 = 0
 1941. !dir$ ivdep
 1941.                do
 1941.                   if ( abs( xs(1 + $I_L1941_112, 1 + $I_L1941_136) ) <= eps ) then
 1941.                      xs(1 + $I_L1941_112, 1 + $I_L1941_136) = 0.0
 1941.                   endif
 1941.                   $I_L1941_112 = 1 + $I_L1941_112
 1941.                   if ( $I_L1941_112 >= nsy ) exit
 1941.                enddo
 1941.                $I_L1941_136 = 1 + $I_L1941_136
 1941.                if ( $I_L1941_136 >= ( 2 * nmx ) ) exit
 1941.             enddo
 1941.          endif
 1941.       endif
 1943.       if ( ipr > 0 ) then
 1944.          $Unit_temp_O9 = nfprt
 1944.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O9, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1945.          $Unit_temp_O10 = nfprt
 1945.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O10, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' frequency: nsy=', 0x800600000000L ), _iotype( nsy, 0x804060200000000L ), _iotype( ' ncuts=', 0x800600000000L ), _iotype( ncuts, 0x804060200000000L ) ) )
 1946.          $Unit_temp_O11 = nfprt
 1946.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O11, Null_Arg, Null_Arg, t$133,  _substr(t$132,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1946.          if ( 2 * nmx > 0 ) then
 1946.             $I_L1946_114 = 0
 1946.             do
 1946.                $Unit_temp_O12 = nfprt
 1946.                $IOitem_O13 = ( ws(1 + $I_L1946_114) * 1.0/twomg )
 1946.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O12, Null_Arg, Null_Arg, t$133,  _substr(t$132,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O13, 0x4000300000000L ) ) )
 1946.                $I_L1946_114 = 1 + $I_L1946_114
 1946.                if ( $I_L1946_114 >= ( 2 * nmx ) ) exit
 1946.             enddo
 1946.          endif
 1946.          $Unit_temp_O14 = nfprt
 1946.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O14, Null_Arg, Null_Arg, t$133,  _substr(t$132,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1947.          $Unit_temp_O15 = nfprt
 1947.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O15, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' period:', 0x800600000000L ) ) )
 1948.          $Unit_temp_O16 = nfprt
 1948.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O16, Null_Arg, Null_Arg, t$135,  _substr(t$134,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1948.          if ( 2 * nmx > 0 ) then
 1948.             $I_L1948_116 = 0
 1948.             do
 1948.                $Unit_temp_O17 = nfprt
 1948.                $IOitem_O18 = 1.0/ws(1 + $I_L1948_116)
 1948.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O17, Null_Arg, Null_Arg, t$135,  _substr(t$134,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O18, 0x4000300000000L ) ) )
 1948.                $I_L1948_116 = 1 + $I_L1948_116
 1948.                if ( $I_L1948_116 >= ( 2 * nmx ) ) exit
 1948.             enddo
 1948.          endif
 1948.          $Unit_temp_O19 = nfprt
 1948.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O19, Null_Arg, Null_Arg, t$135,  _substr(t$134,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1949.          $Unit_temp_O20 = nfprt
 1949.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O20, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1950.          $Unit_temp_O21 = nfprt
 1950.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O21, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' xs: ierr=', 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 1951.          if ( nmx > 0 ) then
 1951.             $I_L1951_138 = 0
 1951.             do
 1952.                $Unit_temp_O22 = nfprt
 1952.                _fwrite( _clist( 0, 0, 2, $Unit_temp_O22, Null_Arg, Null_Arg, t$137,  _substr(t$136,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1952.                $I_L1952_118 = 0
 1952.                do
 1952.                   if ( ( 1 + $I_L1951_138 ) <= 0 .or. ( 1 + $I_L1951_138 ) > t$127 ) then
 1952.                       _substr(t$990,1,17) = 'NonLinearNMI.f90'
 1952.                       _substr(t$991,1,4) = 'XX'
 1952.                      t$992 = 1 + $I_L1951_138
 1952.                      call _bounds_error(  _substr(t$990,1,17), 2455,  _substr(t$991,1,3), 1, 1, t$127, t$992, t$989 )
 1952.                   endif
 1952.                   $Unit_temp_O23 = nfprt
 1952.                   $IOitem_O32 = xx(1 + $I_L1951_138, 1 + $I_L1952_118)
 1952.                   _fwrite( _clist( 0, 0, 0, $Unit_temp_O23, Null_Arg, Null_Arg, t$137,  _substr(t$136,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O32, 0x804060300000000L ) ) )
 1952.                   $I_L1952_118 = 1 + $I_L1952_118
 1952.                   if ( $I_L1952_118 >= nmx ) exit
 1952.                enddo
 1952.                $Unit_temp_O24 = nfprt
 1952.                _fwrite( _clist( 0, 0, 1, $Unit_temp_O24, Null_Arg, Null_Arg, t$137,  _substr(t$136,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1953.                $I_L1951_138 = 1 + $I_L1951_138
 1953.                if ( $I_L1951_138 >= nmx ) exit
 1953.             enddo
 1953.          endif
 1954.          $Unit_temp_O25 = nfprt
 1954.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O25, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1955.          $Unit_temp_O26 = nfprt
 1955.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O26, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' xs:', 0x800600000000L ) ) )
 1956.          if ( nsy > 0 ) then
 1957.             if ( ( min( 6, ( 2 * nmx ) ) ) > 0 ) then
 1956.                $I_L1956_140 = 0
 1956.                do
 1957.                   $Unit_temp_O27 = nfprt
 1957.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O27, Null_Arg, Null_Arg, t$139,  _substr(t$138,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1957.                   $I_L1957_120 = 0
 1957.                   do
 1957.                      if ( ( 1 + $I_L1956_140 ) <= 0 .or. ( 1 + $I_L1956_140 ) > t$126 ) then
 1957.                          _substr(t$1000,1,17) = 'NonLinearNMI.f90'
 1957.                          _substr(t$1001,1,4) = 'XS'
 1957.                         t$992 = 1 + $I_L1956_140
 1957.                         call _bounds_error(  _substr(t$1000,1,17), 2460,  _substr(t$1001,1,3), 1, 1, t$126, t$992, t$999 )
 1957.                      endif
 1957.                      $Unit_temp_O28 = nfprt
 1957.                      $IOitem_O33 = xs(1 + $I_L1956_140, 1 + $I_L1957_120)
 1957.                      _fwrite( _clist( 0, 0, 0, $Unit_temp_O28, Null_Arg, Null_Arg, t$139,  _substr(t$138,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O33, 0x804060300000000L ) ) )
 1957.                      $I_L1957_120 = 1 + $I_L1957_120
 1957.                      if ( $I_L1957_120 >= min( 6, ( 2 * nmx ) ) ) exit
 1957.                   enddo
 1957.                   $Unit_temp_O29 = nfprt
 1957.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O29, Null_Arg, Null_Arg, t$139,  _substr(t$138,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1958.                   $I_L1956_140 = 1 + $I_L1956_140
 1958.                   if ( $I_L1956_140 >= nsy ) exit
 1958.                enddo
 1958.             else
 1956.                $I_L1956_122 = 0
 1956.                do
 1957.                   $Unit_temp_O27 = nfprt
 1957.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O27, Null_Arg, Null_Arg, t$139,  _substr(t$138,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1957.                   $Unit_temp_O29 = nfprt
 1957.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O29, Null_Arg, Null_Arg, t$139,  _substr(t$138,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1958.                   $I_L1956_122 = 1 + $I_L1956_122
 1958.                   if ( $I_L1956_122 >= nsy ) exit
 1958.                enddo
 1958.             endif
 1958.          endif
 1958.       endif
 1960.       return
 1960.       end
 1960.       
 2047.       
 2047.       subroutine symrg( nxsy, nsy, lmax, mmax, nmd, ipr, ncuts, eps, twomg, percut, alfa, beta, gama, ws, wk, es, xs )
 1967.       t$140 = nxsy
 1977.       t$352 = _zla( 0, nxsy )
 1967.       t$353 = _zla( 0, nxsy )
 1967.       t$354 = _zla( 0, nxsy )
 1983.       if ( nxsy > 0 ) then
 1983.          $I_L1983_132 = 0
 1983.          do
 1984.             $I_L1984_122 = 0
 1984. !dir$ ivdep
 1984.             do
 1985.                es(1 + $I_L1984_122, 1 + $I_L1983_132) = 0.0
 1986.                $I_L1984_122 = 1 + $I_L1984_122
 1984.                if ( $I_L1984_122 >= nxsy ) exit
 1984.             enddo
 1989.             $I_L1983_132 = 1 + $I_L1983_132
 1986.             if ( $I_L1983_132 >= nxsy ) exit
 1986.          enddo
 1983.          $I_L1983_124 = 0
 1983. !dir$ ivdep
 1983.          do
 1987.             ws(1 + $I_L1983_124) = 0.0
 1988.             wk(1 + $I_L1983_124) = 0.0
 1989.             $I_L1983_124 = 1 + $I_L1983_124
 1986.             if ( $I_L1983_124 >= nxsy ) exit
 1986.          enddo
 1986.       endif
 1991.       if ( lmax > 0 ) then
 1991.          $I_L1991_98 = 0
 1991. !dir$ ivdep
 1991.          do
 1992.             es(1 + $I_L1991_98, 1 + $I_L1991_98) = alfa(2 + 2 * $I_L1991_98)
 1993.             $I_L1991_98 = 1 + $I_L1991_98
 1991.             if ( $I_L1991_98 >= lmax ) exit
 1991.          enddo
 1999.          if ( nmd /= 1 ) then
 1994.             $I_L1994_100 = 0
 1994. !dir$ ivdep
 1994.             do
 1997.                $es_WR0_R0 = beta(2 + 2 * $I_L1994_100)
 1997.                es(1 + $I_L1994_100, lmax + $I_L1994_100 + 1) = $es_WR0_R0
 1998.                es(lmax + $I_L1994_100 + 1, 1 + $I_L1994_100) = $es_WR0_R0
 2000.                $es_WR0_R1 = beta(3 + 2 * $I_L1994_100)
 2000.                es(1 + $I_L1994_100, lmax + $I_L1994_100 + 2) = $es_WR0_R1
 2001.                es(lmax + $I_L1994_100 + 2, 1 + $I_L1994_100) = $es_WR0_R1
 2003.                $I_L1994_100 = 1 + $I_L1994_100
 2002.                if ( $I_L1994_100 >= lmax ) exit
 2002.             enddo
 2002.          else
 2003.             if ( 0 < -1 + lmax ) then
 1994.                $I_L1994_116 = 0
 1994. !dir$ ivdep
 1994.                do
 1997.                   $es_WR0_R2 = beta(2 + 2 * $I_L1994_116)
 1997.                   es(1 + $I_L1994_116, lmax + $I_L1994_116 + 1) = $es_WR0_R2
 1998.                   es(lmax + $I_L1994_116 + 1, 1 + $I_L1994_116) = $es_WR0_R2
 2000.                   $es_WR0_R3 = beta(3 + 2 * $I_L1994_116)
 2000.                   es(1 + $I_L1994_116, lmax + $I_L1994_116 + 2) = $es_WR0_R3
 2001.                   es(lmax + $I_L1994_116 + 2, 1 + $I_L1994_116) = $es_WR0_R3
 2003.                   $I_L1994_116 = 1 + $I_L1994_116
 2002.                   if ( $I_L1994_116 >= -1 + lmax ) exit
 2002.                enddo
 2002.             endif
 1997.             es(lmax, 2 * lmax) = beta(2 * lmax)
 1998.             es(2 * lmax, lmax) = es(lmax, 2 * lmax)
 1998.          endif
 1998.       endif
 2004.       if ( mmax > 0 ) then
 2004.          $I_L2004_102 = 0
 2004. !dir$ ivdep
 2004.          do
 2007.             es(lmax + $I_L2004_102 + 1, lmax + $I_L2004_102 + 1) = alfa(1 + 2 * $I_L2004_102)
 2009.             $es_WR0_R4 = gama(1 + 2 * $I_L2004_102)
 2009.             es(lmax + $I_L2004_102 + 1, lmax + mmax + $I_L2004_102 + 1) = $es_WR0_R4
 2010.             es(lmax + mmax + $I_L2004_102 + 1, lmax + $I_L2004_102 + 1) = $es_WR0_R4
 2011.             $I_L2004_102 = 1 + $I_L2004_102
 2004.             if ( $I_L2004_102 >= mmax ) exit
 2004.          enddo
 2004.       endif
 2013.       if ( ipr >= 3 ) then
 2014.          $Unit_temp_O0 = nfprt
 2014.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 2015.          $Unit_temp_O1 = nfprt
 2015.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' es:', 0x800600000000L ) ) )
 2016.          if ( nsy > 0 ) then
 2017.             if ( nsy > 0 ) then
 2016.                $I_L2016_126 = 0
 2016.                do
 2017.                   $Unit_temp_O2 = nfprt
 2017.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O2, Null_Arg, Null_Arg, t$142,  _substr(t$141,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2017.                   $I_L2017_104 = 0
 2017.                   do
 2017.                      if ( ( 1 + $I_L2016_126 ) <= 0 .or. ( 1 + $I_L2016_126 ) > t$140 ) then
 2017.                          _substr(t$1024,1,17) = 'NonLinearNMI.f90'
 2017.                          _substr(t$1025,1,4) = 'ES'
 2017.                         t$1026 = 1 + $I_L2016_126
 2017.                         call _bounds_error(  _substr(t$1024,1,17), 2520,  _substr(t$1025,1,3), 1, 1, t$140, t$1026, t$1023 )
 2017.                      endif
 2017.                      $Unit_temp_O3 = nfprt
 2017.                      $IOitem_O26 = es(1 + $I_L2016_126, 1 + $I_L2017_104)
 2017.                      _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$142,  _substr(t$141,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O26, 0x804060300000000L ) ) )
 2017.                      $I_L2017_104 = 1 + $I_L2017_104
 2017.                      if ( $I_L2017_104 >= nsy ) exit
 2017.                   enddo
 2017.                   $Unit_temp_O4 = nfprt
 2017.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O4, Null_Arg, Null_Arg, t$142,  _substr(t$141,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2018.                   $I_L2016_126 = 1 + $I_L2016_126
 2018.                   if ( $I_L2016_126 >= nsy ) exit
 2018.                enddo
 2018.             else
 2016.                $I_L2016_118 = 0
 2016.                do
 2017.                   $Unit_temp_O2 = nfprt
 2017.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O2, Null_Arg, Null_Arg, t$142,  _substr(t$141,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2017.                   $Unit_temp_O4 = nfprt
 2017.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O4, Null_Arg, Null_Arg, t$142,  _substr(t$141,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2018.                   $I_L2016_118 = 1 + $I_L2016_118
 2018.                   if ( $I_L2016_118 >= nsy ) exit
 2018.                enddo
 2018.             endif
 2018.          endif
 2018.       endif
 2021.       call tred2( nxsy, nsy, es(1, 1), ws(1), wk(1), xs(1, 1) )
 2022.       call tql2_i8( nxsy, nsy, ws(1), wk(1), xs(1, 1), eps, ierr )
 2024.       if ( ipr > 0 ) then
 2025.          $Unit_temp_O5 = nfprt
 2025.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 2026.          $Unit_temp_O6 = nfprt
 2026.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ws: ierr=', 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 2027.          $Unit_temp_O7 = nfprt
 2027.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O7, Null_Arg, Null_Arg, t$144,  _substr(t$143,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2027.          if ( nsy > 0 ) then
 2027.             $I_L2027_106 = 0
 2027.             do
 2027.                $Unit_temp_O8 = nfprt
 2027.                $IOitem_O27 = ws(1 + $I_L2027_106)
 2027.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O8, Null_Arg, Null_Arg, t$144,  _substr(t$143,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O27, 0x804060300000000L ) ) )
 2027.                $I_L2027_106 = 1 + $I_L2027_106
 2027.                if ( $I_L2027_106 >= nsy ) exit
 2027.             enddo
 2027.          endif
 2027.          $Unit_temp_O9 = nfprt
 2027.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O9, Null_Arg, Null_Arg, t$144,  _substr(t$143,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2027.       endif
 2032.       call order( nxsy, nsy, ws(1), wk(1), xs(1, 1), es(1, 1), percut, ncuts )
 2033.       t$120 = nxsy
 2033.       t$330 = max( 0, nxsy )
 2033.       t$331 = nxsy
 2033.       t$332 = nxsy
 2033.       if ( ncuts > 0 ) then
 2033.          if ( nsy > 0 ) then
 2033.             $I_L2033_128 = 0
 2033.             do
 2033.                $I_L2033_108 = 0
 2033. !dir$ ivdep
 2033.                do
 2033.                   if ( abs( xs(1 + $I_L2033_108, 1 + $I_L2033_128) ) <= eps ) then
 2033.                      xs(1 + $I_L2033_108, 1 + $I_L2033_128) = 0.0
 2033.                   endif
 2033.                   $I_L2033_108 = 1 + $I_L2033_108
 2033.                   if ( $I_L2033_108 >= nsy ) exit
 2033.                enddo
 2033.                $I_L2033_128 = 1 + $I_L2033_128
 2033.                if ( $I_L2033_128 >= ncuts ) exit
 2033.             enddo
 2033.          endif
 2033.       endif
 2035.       if ( ipr > 0 ) then
 2036.          $Unit_temp_O10 = nfprt
 2036.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O10, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 2037.          $Unit_temp_O11 = nfprt
 2037.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O11, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' frequency: nsy=', 0x800600000000L ), _iotype( nsy, 0x804060200000000L ), _iotype( ' ncuts=', 0x800600000000L ), _iotype( ncuts, 0x804060200000000L ) ) )
 2038.          $Unit_temp_O12 = nfprt
 2038.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O12, Null_Arg, Null_Arg, t$146,  _substr(t$145,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2038.          if ( ncuts > 0 ) then
 2038.             $I_L2038_110 = 0
 2038.             do
 2038.                $Unit_temp_O13 = nfprt
 2038.                $IOitem_O14 = ( ws(1 + $I_L2038_110) * 1.0/twomg )
 2038.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O13, Null_Arg, Null_Arg, t$146,  _substr(t$145,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O14, 0x4000300000000L ) ) )
 2038.                $I_L2038_110 = 1 + $I_L2038_110
 2038.                if ( $I_L2038_110 >= ncuts ) exit
 2038.             enddo
 2038.          endif
 2038.          $Unit_temp_O15 = nfprt
 2038.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O15, Null_Arg, Null_Arg, t$146,  _substr(t$145,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2039.          $Unit_temp_O16 = nfprt
 2039.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O16, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' period:', 0x800600000000L ) ) )
 2040.          $Unit_temp_O17 = nfprt
 2040.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O17, Null_Arg, Null_Arg, t$148,  _substr(t$147,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2040.          if ( ncuts > 0 ) then
 2040.             $I_L2040_112 = 0
 2040.             do
 2040.                $Unit_temp_O18 = nfprt
 2040.                $IOitem_O19 = 1.0/ws(1 + $I_L2040_112)
 2040.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O18, Null_Arg, Null_Arg, t$148,  _substr(t$147,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O19, 0x4000300000000L ) ) )
 2040.                $I_L2040_112 = 1 + $I_L2040_112
 2040.                if ( $I_L2040_112 >= ncuts ) exit
 2040.             enddo
 2040.          endif
 2040.          $Unit_temp_O20 = nfprt
 2040.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O20, Null_Arg, Null_Arg, t$148,  _substr(t$147,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2041.          $Unit_temp_O21 = nfprt
 2041.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O21, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 2042.          $Unit_temp_O22 = nfprt
 2042.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O22, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' xs:', 0x800600000000L ) ) )
 2043.          if ( nsy > 0 ) then
 2044.             if ( ( min( 6, ncuts ) ) > 0 ) then
 2043.                $I_L2043_130 = 0
 2043.                do
 2044.                   $Unit_temp_O23 = nfprt
 2044.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O23, Null_Arg, Null_Arg, t$150,  _substr(t$149,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2044.                   $I_L2044_114 = 0
 2044.                   do
 2044.                      if ( ( 1 + $I_L2043_130 ) <= 0 .or. ( 1 + $I_L2043_130 ) > t$140 ) then
 2044.                          _substr(t$1043,1,17) = 'NonLinearNMI.f90'
 2044.                          _substr(t$1044,1,4) = 'XS'
 2044.                         t$1026 = 1 + $I_L2043_130
 2044.                         call _bounds_error(  _substr(t$1043,1,17), 2547,  _substr(t$1044,1,3), 1, 1, t$140, t$1026, t$1042 )
 2044.                      endif
 2044.                      $Unit_temp_O24 = nfprt
 2044.                      $IOitem_O28 = xs(1 + $I_L2043_130, 1 + $I_L2044_114)
 2044.                      _fwrite( _clist( 0, 0, 0, $Unit_temp_O24, Null_Arg, Null_Arg, t$150,  _substr(t$149,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O28, 0x804060300000000L ) ) )
 2044.                      $I_L2044_114 = 1 + $I_L2044_114
 2044.                      if ( $I_L2044_114 >= min( 6, ncuts ) ) exit
 2044.                   enddo
 2044.                   $Unit_temp_O25 = nfprt
 2044.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O25, Null_Arg, Null_Arg, t$150,  _substr(t$149,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2045.                   $I_L2043_130 = 1 + $I_L2043_130
 2045.                   if ( $I_L2043_130 >= nsy ) exit
 2045.                enddo
 2045.             else
 2043.                $I_L2043_120 = 0
 2043.                do
 2044.                   $Unit_temp_O23 = nfprt
 2044.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O23, Null_Arg, Null_Arg, t$150,  _substr(t$149,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2044.                   $Unit_temp_O25 = nfprt
 2044.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O25, Null_Arg, Null_Arg, t$150,  _substr(t$149,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2045.                   $I_L2043_120 = 1 + $I_L2043_120
 2045.                   if ( $I_L2043_120 >= nsy ) exit
 2045.                enddo
 2045.             endif
 2045.          endif
 2045.       endif
 2047.       return
 2047.       end
 2047.       
 2106.       
 2106.       subroutine vereig( gg, siman, eigvc, col, vec, val, eps, matz )
 2054.       t$151 = kmax
 2059.       t$355 = _zla( 0, kmax )
 2054.       t$356 = _zla( 0, kmax )
 2054.       t$357 = _zla( 0, kmax ) * _zla( 0, kmax )
 2063.       t$360 = 8 * _zla( 0, kmax )
 2063.       t$361 = 8 * _zla( 0, kmax )
 2063.       t$363 = 16 * _zla( 0, kmax )
 2062.       t$365 = 20 * _zla( 0, kmax )
 2063.       t$366 = 8 * ( ( 7 + 20 * _zla( 0, kmax ) ) / 8 )
 2063.       t$368 = 8 * _zla( 0, kmax ) + 8 * ( ( 7 + 20 * _zla( 0, kmax ) ) / 8 )
 2063.       t$369 = 8 * _zla( 0, kmax ) + 8 * ( ( 7 + 20 * _zla( 0, kmax ) ) / 8 )
 2063.       t$371 = 16 * _zla( 0, kmax ) + 8 * ( ( 7 + 20 * _zla( 0, kmax ) ) / 8 )
 2054.       t$358 = int( _alloc( 16 * _zla( 0, kmax ) + 8 * ( ( 7 + 20 * _zla( 0, kmax ) ) / 8 ) ), 8 )
 2063.       t$359 = t$358
 2063.       t$362 = t$358 + 8 * _zla( 0, kmax )
 2062.       t$364 = t$358 + 16 * _zla( 0, kmax )
 2063.       t$367 = t$358 + 8 * ( ( 7 + 20 * _zla( 0, kmax ) ) / 8 )
 2063.       t$370 = t$358 + 8 * _zla( 0, kmax ) + 8 * ( ( 7 + 20 * _zla( 0, kmax ) ) / 8 )
 2070.       call rg( kmax, kmax, gg(1, 1), eigvr(1), eigvi(1), matz, eigvc(1, 1), ier, eps, wk1(1), wk2(1) )
 2072.       if ( kmax > 0 ) then
 2072.          $I_L2072_32 = 0
 2072.          do
 2074.             col(1 + $I_L2072_32) = siman * eigvr(1 + $I_L2072_32)
 2075.             soma = 0.0
 2076.             $I_L2076_24 = 0
 2076. !dir$ ivdep
 2076.             do
 2077.                soma = soma + eigvc(1 + $I_L2076_24, 1 + $I_L2072_32) * eigvc(1 + $I_L2076_24, 1 + $I_L2072_32)
 2078.                $I_L2076_24 = 1 + $I_L2076_24
 2076.                if ( $I_L2076_24 >= kmax ) exit
 2076.             enddo
 2080.             $soma_S3 = _recip_sqrt( soma )
 2081.             $I_L2081_26 = 0
 2081. !dir$ ivdep
 2081.             do
 2082.                eigvc(1 + $I_L2081_26, 1 + $I_L2072_32) = $soma_S3 * eigvc(1 + $I_L2081_26, 1 + $I_L2072_32)
 2083.                $I_L2081_26 = 1 + $I_L2081_26
 2081.                if ( $I_L2081_26 >= kmax ) exit
 2081.             enddo
 2084.             $I_L2072_32 = 1 + $I_L2072_32
 2083.             if ( $I_L2072_32 >= kmax ) exit
 2083.          enddo
 2090.          $I_L2090_34 = 0
 2090.          do
 2094.             $W1 = kmax
 2094.             $W2 = 1
 2094.             $Maxmin_x_W0 = _idamax( $W1, col(1), $W2 )
 2094.             $kkk_S6 = cvmg( $Maxmin_x_W0, 0, abs( col($Maxmin_x_W0) ) > -1.0e20 )
 2099.             val(1 + $I_L2090_34) = col($kkk_S6)
 2100.             col($kkk_S6) = 0.0
 2101.             $I_L2101_30 = 0
 2101. !dir$ ivdep
 2101.             do
 2102.                vec(1 + $I_L2101_30, 1 + $I_L2090_34) = eigvc(1 + $I_L2101_30, $kkk_S6)
 2103.                $I_L2101_30 = 1 + $I_L2101_30
 2101.                if ( $I_L2101_30 >= kmax ) exit
 2101.             enddo
 2105.             $I_L2090_34 = 1 + $I_L2090_34
 2103.             if ( $I_L2090_34 >= kmax ) exit
 2103.          enddo
 2103.       endif
 2054.       _free( t$358 )
 2106.       return
 2106.       end
 2106.       
 2114.       
 2114.       subroutine w3fa03( press, temp )
 2141.       if ( press < 54.748699999999999 ) then
 2114.          goto 10
 2141.       else if ( press <= 226.321 ) then
 2145.          temp = 216.65000000000001
 2145.       else
 2145.    10    continue
 2147.          if ( press < 54.748699999999999 ) then
 2153.             $height_S0 = 20000.0 + -243580.51987476368 * ( 8.8943894245479915e-1 + -_exp3( log( abs( press ) ), press, -2.9270953893531435e-2 ) )
 2154.             temp = 216.65000000000001 + 1.0e-3 * ( -20000.0 + $height_S0 )
 2154.          else
 2156.             $height_S1 = 11880.480800667456 * ( 3.7313952166210886 + -_exp3( log( abs( press ) ), press, 1.9026120030795432e-1 ) )
 2157.             temp = 288.14999999999998 + -6.4999999999999997e-3 * $height_S1
 2157.          endif
 2157.       endif
 2160.       return
 2160.       end
 2160.       
 2164.       
 2164.       subroutine setmods( gh )
 2164.       gh%dim_1%LB = 1
 2169.       mods = 0
 2170.       if ( kmax > 0 ) then
 2170.          $I_L2170_17 = 0
 2170. !dir$ ivdep
 2170.          do
 2171.             if ( 1.020408163265306e-1 * (gh%base_addr)(1 + $I_L2170_17, 0) > 1000.0 ) then
 2172.                mods = 1 + mods
 2172.             endif
 2175.             $I_L2170_17 = 1 + $I_L2170_17
 2174.             if ( $I_L2170_17 >= kmax ) exit
 2174.          enddo
 2174.       endif
 2176.       if ( mods == 0 ) then
 2177.          $Unit_temp_O0 = nfprt
 2177.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$153,  _substr(t$152,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ERROR: The Equivalent Heights of Normal Modes is Wrong', 0x800600000000L ) ) )
 2178.           _substr(t$1066,1,24) = 'SetMods  ==> (mods == 0)'
 2178.          call _stop(  _substr(t$1066,1,24) )
 2179.       else if ( nmodperg%header%assoc /= 1 ) then
 2184.          nmodperg%header%a_contig = 1
 2184.          nmodperg%dim_1%LB = 1
 2184.          nmodperg%dim_1%EX = ( max( 0, ngroups_four ) )
 2184.          nmodperg%dim_1%SM = 1
 2184.          $_allo_P0(0) = 0x1000000000001L
 2184.          $_allo_P0(1) = loc( nmodperg )
 2184.          call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 2185.          grouphasmod%header%a_contig = 1
 2185.          grouphasmod%dim_1%LB = 1
 2185.          grouphasmod%dim_1%EX = ( max( 0, mods ) )
 2185.          grouphasmod%dim_1%SM = 1
 2185.          $_allo_P1(0) = 0x1000000000001L
 2185.          $_allo_P1(1) = loc( grouphasmod )
 2185.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 2186.          $modperg_S3 = mods / ngroups_four
 2188.          $m_S2 = 0
 2189.          if ( ngroups_four > 0 ) then
 2189.             $I_L2189_10 = 0
 2198.             if ( 0 > mods + -( ngroups_four * $modperg_S3 ) + -1 ) then
 2198.                goto 10
 2198.             else
 2189.                $I_L2189_23 = 0
 2189.                do
 2190.                   if ( mygroup_four + -$I_L2189_23 + -1 == 0 ) then
 2190.                      myfirstmod = ( $I_L2189_23 + $modperg_S3 * $I_L2189_23 + 1 )
 2190.                   endif
 2192.                   (nmodperg%base_addr)(1 + $I_L2189_23, 0) = 1 + $modperg_S3
 2196.                   $F_A33 = ( 1 + $modperg_S3 )
 2196.                   if ( $modperg_S3 >= 0 ) then
 2196.                      $I_L2196_19 = 0
 2196. !dir$ ivdep
 2196.                      do
 2196.                         (grouphasmod%base_addr)($I_L2196_19 + $I_L2189_23 + $modperg_S3 * $I_L2189_23 + 1, 0) = ( 1 + $I_L2189_23 )
 2196.                         $I_L2196_19 = 1 + $I_L2196_19
 2196.                         if ( $I_L2196_19 >= $F_A33 ) exit
 2196.                      enddo
 2196.                   endif
 2198.                   $I_L2189_23 = 1 + $I_L2189_23
 2195.                   if ( $I_L2189_23 >= min( ngroups_four, mods + -( ngroups_four * $modperg_S3 ) ) ) exit
 2195.                enddo
 2197.                $m_S2 = ( min( ngroups_four, mods + -( ngroups_four * $modperg_S3 ) ) + $modperg_S3 * min( ngroups_four, mods + -( ngroups_four * $modperg_S3 ) ) )
 2198.                $I_L2189_10 = min( ngroups_four, mods + -( ngroups_four * $modperg_S3 ) )
 2198.                if ( mods + -( ngroups_four * $modperg_S3 ) < ngroups_four ) then
 2198.    10             continue
 2189.                   $I_L2189_25 = 0
 2189.                   do
 2190.                      if ( mygroup_four + -$I_L2189_10 + -$I_L2189_25 + -1 == 0 ) then
 2190.                         myfirstmod = ( $m_S2 + $modperg_S3 * $I_L2189_25 + 1 )
 2190.                      endif
 2194.                      (nmodperg%base_addr)($I_L2189_10 + $I_L2189_25 + 1, 0) = $modperg_S3
 2196.                      $F_A33 = $modperg_S3
 2196.                      if ( $modperg_S3 > 0 ) then
 2196.                         $I_L2196_21 = 0
 2196. !dir$ ivdep
 2196.                         do
 2196.                            (grouphasmod%base_addr)($m_S2 + $I_L2196_21 + $modperg_S3 * $I_L2189_25 + 1, 0) = ( $I_L2189_10 + $I_L2189_25 + 1 )
 2196.                            $I_L2196_21 = 1 + $I_L2196_21
 2196.                            if ( $I_L2196_21 >= $F_A33 ) exit
 2196.                         enddo
 2196.                      endif
 2198.                      $I_L2189_25 = 1 + $I_L2189_25
 2195.                      if ( $I_L2189_25 >= ngroups_four + -$I_L2189_10 ) exit
 2195.                   enddo
 2195.                endif
 2195.             endif
 2195.          endif
 2199.          modsloc = (nmodperg%base_addr)(mygroup_four, 0)
 2199.       endif
 2201.       return
 2201.       end
 2201.       
  137.       
  137.       module nonlinearnmi
 2202.       return
 2202.       end
 2202.       
