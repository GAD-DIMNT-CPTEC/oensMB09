       !        
       !        Cray Inc. Decompilation
       !        Notice - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  FieldsPhysics.f90
       !        File                  :  FieldsPhysics.opt
       !        Network               :  Gemini interconnect
       !        Target                :  X86, 64-bit, sse3
       !        
  309.       
  309.       subroutine initfieldsphyscs( ibmax, kmax, jbmax, imax_in, jmax_in )
  317.       imax = imax_in
  318.       jmax = jmax_in
  322.       sigki%header%a_contig = 1
  322.       sigki%dim_1%LB = 1
  322.       sigki%dim_1%EX = _zla( 0, kmax )
  322.       sigki%dim_1%SM = 1
  322.       $_allo_P0(0) = 0x1000000000001L
  322.       $_allo_P0(1) = loc( sigki )
  322.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
  323.       if ( kmax > 0 ) then
  323.          $I_L323_6 = 0
  323. !dir$ ivdep
  323.          do
  324.             (sigki%base_addr)(1 + $I_L323_6, 0) = _expn( -2.8573561616563808e-1 * log( (sl%base_addr)(1 + $I_L323_6, 0) ) )
  325.             $I_L323_6 = 1 + $I_L323_6
  323.             if ( $I_L323_6 >= kmax ) exit
  323.          enddo
  323.       endif
  329.       pbl_coefkm%header%a_contig = 1
  329.       pbl_coefkm%dim_1%LB = 1
  329.       pbl_coefkm%dim_1%EX = ( max( 0, ibmax ) )
  329.       pbl_coefkm%dim_1%SM = 1
  329.       pbl_coefkm%dim_2%LB = 1
  329.       pbl_coefkm%dim_2%EX = ( max( 0, kmax ) )
  329.       pbl_coefkm%dim_2%SM = ( max( 0, ibmax ) )
  329.       pbl_coefkm%dim_3%LB = 1
  329.       pbl_coefkm%dim_3%EX = ( max( 0, jbmax ) )
  329.       pbl_coefkm%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  329.       $_allo_P1(0) = 0x1000000000001L
  329.       $_allo_P1(1) = loc( pbl_coefkm )
  329.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
  330.       $F_A33 = jbmax
  330.       $F_A34 = kmax
  330.       $F_A35 = ibmax
  330.       if ( and( and( -$F_A34, -$F_A33 ), -$F_A35 ) < 0 ) then
  330.          $I_L330_520 = 0
  330.          do
  330.             $I_L330_264 = 0
  330.             do
  330.                $I_L330_8 = 0
  330. !dir$ ivdep
  330.                do
  330.                   (pbl_coefkm%base_addr)(1 + $I_L330_8, 1 + $I_L330_264, 1 + $I_L330_520, 0) = 0.0
  330.                   $I_L330_8 = 1 + $I_L330_8
  330.                   if ( $I_L330_8 >= $F_A35 ) exit
  330.                enddo
  330.                $I_L330_264 = 1 + $I_L330_264
  330.                if ( $I_L330_264 >= $F_A34 ) exit
  330.             enddo
  330.             $I_L330_520 = 1 + $I_L330_520
  330.             if ( $I_L330_520 >= $F_A33 ) exit
  330.          enddo
  330.       endif
  331.       pbl_coefkh%header%a_contig = 1
  331.       pbl_coefkh%dim_1%LB = 1
  331.       pbl_coefkh%dim_1%EX = ( max( 0, ibmax ) )
  331.       pbl_coefkh%dim_1%SM = 1
  331.       pbl_coefkh%dim_2%LB = 1
  331.       pbl_coefkh%dim_2%EX = ( max( 0, kmax ) )
  331.       pbl_coefkh%dim_2%SM = ( max( 0, ibmax ) )
  331.       pbl_coefkh%dim_3%LB = 1
  331.       pbl_coefkh%dim_3%EX = ( max( 0, jbmax ) )
  331.       pbl_coefkh%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  331.       $_allo_P2(0) = 0x1000000000001L
  331.       $_allo_P2(1) = loc( pbl_coefkh )
  331.       call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
  332.       $F_A36 = jbmax
  332.       $F_A37 = kmax
  332.       $F_A38 = ibmax
  332.       if ( and( and( -$F_A37, -$F_A36 ), -$F_A38 ) < 0 ) then
  332.          $I_L332_522 = 0
  332.          do
  332.             $I_L332_266 = 0
  332.             do
  332.                $I_L332_10 = 0
  332. !dir$ ivdep
  332.                do
  332.                   (pbl_coefkh%base_addr)(1 + $I_L332_10, 1 + $I_L332_266, 1 + $I_L332_522, 0) = 0.0
  332.                   $I_L332_10 = 1 + $I_L332_10
  332.                   if ( $I_L332_10 >= $F_A38 ) exit
  332.                enddo
  332.                $I_L332_266 = 1 + $I_L332_266
  332.                if ( $I_L332_266 >= $F_A37 ) exit
  332.             enddo
  332.             $I_L332_522 = 1 + $I_L332_522
  332.             if ( $I_L332_522 >= $F_A36 ) exit
  332.          enddo
  332.       endif
  335.       yswtoadown%header%a_contig = 1
  335.       yswtoadown%dim_1%LB = 1
  335.       yswtoadown%dim_1%EX = ( max( 0, ibmax ) )
  335.       yswtoadown%dim_1%SM = 1
  335.       yswtoadown%dim_2%LB = 1
  335.       yswtoadown%dim_2%EX = ( max( 0, jbmax ) )
  335.       yswtoadown%dim_2%SM = ( max( 0, ibmax ) )
  335.       $_allo_P3(0) = 0x1000000000001L
  335.       $_allo_P3(1) = loc( yswtoadown )
  335.       call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
  336.       $F_A39 = jbmax
  336.       $F_A40 = ibmax
  336.       if ( and( -$F_A40, -$F_A39 ) < 0 ) then
  336.          $I_L336_268 = 0
  336.          do
  336.             $I_L336_12 = 0
  336. !dir$ ivdep
  336.             do
  336.                (yswtoadown%base_addr)(1 + $I_L336_12, 1 + $I_L336_268, 0) = 0.0
  336.                $I_L336_12 = 1 + $I_L336_12
  336.                if ( $I_L336_12 >= $F_A40 ) exit
  336.             enddo
  336.             $I_L336_268 = 1 + $I_L336_268
  336.             if ( $I_L336_268 >= $F_A39 ) exit
  336.          enddo
  336.       endif
  337.       yvisbeam%header%a_contig = 1
  337.       yvisbeam%dim_1%LB = 1
  337.       yvisbeam%dim_1%EX = ( max( 0, ibmax ) )
  337.       yvisbeam%dim_1%SM = 1
  337.       yvisbeam%dim_2%LB = 1
  337.       yvisbeam%dim_2%EX = ( max( 0, jbmax ) )
  337.       yvisbeam%dim_2%SM = ( max( 0, ibmax ) )
  337.       $_allo_P4(0) = 0x1000000000001L
  337.       $_allo_P4(1) = loc( yvisbeam )
  337.       call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
  338.       $F_A41 = jbmax
  338.       $F_A42 = ibmax
  338.       if ( and( -$F_A42, -$F_A41 ) < 0 ) then
  338.          $I_L338_270 = 0
  338.          do
  338.             $I_L338_14 = 0
  338. !dir$ ivdep
  338.             do
  338.                (yvisbeam%base_addr)(1 + $I_L338_14, 1 + $I_L338_270, 0) = 0.0
  338.                $I_L338_14 = 1 + $I_L338_14
  338.                if ( $I_L338_14 >= $F_A42 ) exit
  338.             enddo
  338.             $I_L338_270 = 1 + $I_L338_270
  338.             if ( $I_L338_270 >= $F_A41 ) exit
  338.          enddo
  338.       endif
  339.       yvisdiff%header%a_contig = 1
  339.       yvisdiff%dim_1%LB = 1
  339.       yvisdiff%dim_1%EX = ( max( 0, ibmax ) )
  339.       yvisdiff%dim_1%SM = 1
  339.       yvisdiff%dim_2%LB = 1
  339.       yvisdiff%dim_2%EX = ( max( 0, jbmax ) )
  339.       yvisdiff%dim_2%SM = ( max( 0, ibmax ) )
  339.       $_allo_P5(0) = 0x1000000000001L
  339.       $_allo_P5(1) = loc( yvisdiff )
  339.       call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
  340.       $F_A43 = jbmax
  340.       $F_A44 = ibmax
  340.       if ( and( -$F_A44, -$F_A43 ) < 0 ) then
  340.          $I_L340_272 = 0
  340.          do
  340.             $I_L340_16 = 0
  340. !dir$ ivdep
  340.             do
  340.                (yvisdiff%base_addr)(1 + $I_L340_16, 1 + $I_L340_272, 0) = 0.0
  340.                $I_L340_16 = 1 + $I_L340_16
  340.                if ( $I_L340_16 >= $F_A44 ) exit
  340.             enddo
  340.             $I_L340_272 = 1 + $I_L340_272
  340.             if ( $I_L340_272 >= $F_A43 ) exit
  340.          enddo
  340.       endif
  341.       ynirbeam%header%a_contig = 1
  341.       ynirbeam%dim_1%LB = 1
  341.       ynirbeam%dim_1%EX = ( max( 0, ibmax ) )
  341.       ynirbeam%dim_1%SM = 1
  341.       ynirbeam%dim_2%LB = 1
  341.       ynirbeam%dim_2%EX = ( max( 0, jbmax ) )
  341.       ynirbeam%dim_2%SM = ( max( 0, ibmax ) )
  341.       $_allo_P6(0) = 0x1000000000001L
  341.       $_allo_P6(1) = loc( ynirbeam )
  341.       call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
  342.       $F_A45 = jbmax
  342.       $F_A46 = ibmax
  342.       if ( and( -$F_A46, -$F_A45 ) < 0 ) then
  342.          $I_L342_274 = 0
  342.          do
  342.             $I_L342_18 = 0
  342. !dir$ ivdep
  342.             do
  342.                (ynirbeam%base_addr)(1 + $I_L342_18, 1 + $I_L342_274, 0) = 0.0
  342.                $I_L342_18 = 1 + $I_L342_18
  342.                if ( $I_L342_18 >= $F_A46 ) exit
  342.             enddo
  342.             $I_L342_274 = 1 + $I_L342_274
  342.             if ( $I_L342_274 >= $F_A45 ) exit
  342.          enddo
  342.       endif
  343.       ynirdiff%header%a_contig = 1
  343.       ynirdiff%dim_1%LB = 1
  343.       ynirdiff%dim_1%EX = ( max( 0, ibmax ) )
  343.       ynirdiff%dim_1%SM = 1
  343.       ynirdiff%dim_2%LB = 1
  343.       ynirdiff%dim_2%EX = ( max( 0, jbmax ) )
  343.       ynirdiff%dim_2%SM = ( max( 0, ibmax ) )
  343.       $_allo_P7(0) = 0x1000000000001L
  343.       $_allo_P7(1) = loc( ynirdiff )
  343.       call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
  344.       $F_A47 = jbmax
  344.       $F_A48 = ibmax
  344.       if ( and( -$F_A48, -$F_A47 ) < 0 ) then
  344.          $I_L344_276 = 0
  344.          do
  344.             $I_L344_20 = 0
  344. !dir$ ivdep
  344.             do
  344.                (ynirdiff%base_addr)(1 + $I_L344_20, 1 + $I_L344_276, 0) = 0.0
  344.                $I_L344_20 = 1 + $I_L344_20
  344.                if ( $I_L344_20 >= $F_A48 ) exit
  344.             enddo
  344.             $I_L344_276 = 1 + $I_L344_276
  344.             if ( $I_L344_276 >= $F_A47 ) exit
  344.          enddo
  344.       endif
  345.       yvisbeamc%header%a_contig = 1
  345.       yvisbeamc%dim_1%LB = 1
  345.       yvisbeamc%dim_1%EX = ( max( 0, ibmax ) )
  345.       yvisbeamc%dim_1%SM = 1
  345.       yvisbeamc%dim_2%LB = 1
  345.       yvisbeamc%dim_2%EX = ( max( 0, jbmax ) )
  345.       yvisbeamc%dim_2%SM = ( max( 0, ibmax ) )
  345.       $_allo_P8(0) = 0x1000000000001L
  345.       $_allo_P8(1) = loc( yvisbeamc )
  345.       call __allocate( $_allo_P8, 0, 0, _fcd( 0, 0 ) )
  346.       $F_A49 = jbmax
  346.       $F_A50 = ibmax
  346.       if ( and( -$F_A50, -$F_A49 ) < 0 ) then
  346.          $I_L346_278 = 0
  346.          do
  346.             $I_L346_22 = 0
  346. !dir$ ivdep
  346.             do
  346.                (yvisbeamc%base_addr)(1 + $I_L346_22, 1 + $I_L346_278, 0) = 0.0
  346.                $I_L346_22 = 1 + $I_L346_22
  346.                if ( $I_L346_22 >= $F_A50 ) exit
  346.             enddo
  346.             $I_L346_278 = 1 + $I_L346_278
  346.             if ( $I_L346_278 >= $F_A49 ) exit
  346.          enddo
  346.       endif
  347.       yvisdiffc%header%a_contig = 1
  347.       yvisdiffc%dim_1%LB = 1
  347.       yvisdiffc%dim_1%EX = ( max( 0, ibmax ) )
  347.       yvisdiffc%dim_1%SM = 1
  347.       yvisdiffc%dim_2%LB = 1
  347.       yvisdiffc%dim_2%EX = ( max( 0, jbmax ) )
  347.       yvisdiffc%dim_2%SM = ( max( 0, ibmax ) )
  347.       $_allo_P9(0) = 0x1000000000001L
  347.       $_allo_P9(1) = loc( yvisdiffc )
  347.       call __allocate( $_allo_P9, 0, 0, _fcd( 0, 0 ) )
  348.       $F_A51 = jbmax
  348.       $F_A52 = ibmax
  348.       if ( and( -$F_A52, -$F_A51 ) < 0 ) then
  348.          $I_L348_280 = 0
  348.          do
  348.             $I_L348_24 = 0
  348. !dir$ ivdep
  348.             do
  348.                (yvisdiffc%base_addr)(1 + $I_L348_24, 1 + $I_L348_280, 0) = 0.0
  348.                $I_L348_24 = 1 + $I_L348_24
  348.                if ( $I_L348_24 >= $F_A52 ) exit
  348.             enddo
  348.             $I_L348_280 = 1 + $I_L348_280
  348.             if ( $I_L348_280 >= $F_A51 ) exit
  348.          enddo
  348.       endif
  349.       ynirbeamc%header%a_contig = 1
  349.       ynirbeamc%dim_1%LB = 1
  349.       ynirbeamc%dim_1%EX = ( max( 0, ibmax ) )
  349.       ynirbeamc%dim_1%SM = 1
  349.       ynirbeamc%dim_2%LB = 1
  349.       ynirbeamc%dim_2%EX = ( max( 0, jbmax ) )
  349.       ynirbeamc%dim_2%SM = ( max( 0, ibmax ) )
  349.       $_allo_P10(0) = 0x1000000000001L
  349.       $_allo_P10(1) = loc( ynirbeamc )
  349.       call __allocate( $_allo_P10, 0, 0, _fcd( 0, 0 ) )
  350.       $F_A53 = jbmax
  350.       $F_A54 = ibmax
  350.       if ( and( -$F_A54, -$F_A53 ) < 0 ) then
  350.          $I_L350_282 = 0
  350.          do
  350.             $I_L350_26 = 0
  350. !dir$ ivdep
  350.             do
  350.                (ynirbeamc%base_addr)(1 + $I_L350_26, 1 + $I_L350_282, 0) = 0.0
  350.                $I_L350_26 = 1 + $I_L350_26
  350.                if ( $I_L350_26 >= $F_A54 ) exit
  350.             enddo
  350.             $I_L350_282 = 1 + $I_L350_282
  350.             if ( $I_L350_282 >= $F_A53 ) exit
  350.          enddo
  350.       endif
  351.       ynirdiffc%header%a_contig = 1
  351.       ynirdiffc%dim_1%LB = 1
  351.       ynirdiffc%dim_1%EX = ( max( 0, ibmax ) )
  351.       ynirdiffc%dim_1%SM = 1
  351.       ynirdiffc%dim_2%LB = 1
  351.       ynirdiffc%dim_2%EX = ( max( 0, jbmax ) )
  351.       ynirdiffc%dim_2%SM = ( max( 0, ibmax ) )
  351.       $_allo_P11(0) = 0x1000000000001L
  351.       $_allo_P11(1) = loc( ynirdiffc )
  351.       call __allocate( $_allo_P11, 0, 0, _fcd( 0, 0 ) )
  352.       $F_A55 = jbmax
  352.       $F_A56 = ibmax
  352.       if ( and( -$F_A56, -$F_A55 ) < 0 ) then
  352.          $I_L352_284 = 0
  352.          do
  352.             $I_L352_28 = 0
  352. !dir$ ivdep
  352.             do
  352.                (ynirdiffc%base_addr)(1 + $I_L352_28, 1 + $I_L352_284, 0) = 0.0
  352.                $I_L352_28 = 1 + $I_L352_28
  352.                if ( $I_L352_28 >= $F_A56 ) exit
  352.             enddo
  352.             $I_L352_284 = 1 + $I_L352_284
  352.             if ( $I_L352_284 >= $F_A55 ) exit
  352.          enddo
  352.       endif
  353.       yswheatrate%header%a_contig = 1
  353.       yswheatrate%dim_1%LB = 1
  353.       yswheatrate%dim_1%EX = ( max( 0, ibmax ) )
  353.       yswheatrate%dim_1%SM = 1
  353.       yswheatrate%dim_2%LB = 1
  353.       yswheatrate%dim_2%EX = ( max( 0, kmax ) )
  353.       yswheatrate%dim_2%SM = ( max( 0, ibmax ) )
  353.       yswheatrate%dim_3%LB = 1
  353.       yswheatrate%dim_3%EX = ( max( 0, jbmax ) )
  353.       yswheatrate%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  353.       $_allo_P12(0) = 0x1000000000001L
  353.       $_allo_P12(1) = loc( yswheatrate )
  353.       call __allocate( $_allo_P12, 0, 0, _fcd( 0, 0 ) )
  354.       $F_A57 = jbmax
  354.       $F_A58 = kmax
  354.       $F_A59 = ibmax
  354.       if ( and( and( -$F_A58, -$F_A57 ), -$F_A59 ) < 0 ) then
  354.          $I_L354_524 = 0
  354.          do
  354.             $I_L354_286 = 0
  354.             do
  354.                $I_L354_30 = 0
  354. !dir$ ivdep
  354.                do
  354.                   (yswheatrate%base_addr)(1 + $I_L354_30, 1 + $I_L354_286, 1 + $I_L354_524, 0) = 0.0
  354.                   $I_L354_30 = 1 + $I_L354_30
  354.                   if ( $I_L354_30 >= $F_A59 ) exit
  354.                enddo
  354.                $I_L354_286 = 1 + $I_L354_286
  354.                if ( $I_L354_286 >= $F_A58 ) exit
  354.             enddo
  354.             $I_L354_524 = 1 + $I_L354_524
  354.             if ( $I_L354_524 >= $F_A57 ) exit
  354.          enddo
  354.       endif
  355.       yswheatratec%header%a_contig = 1
  355.       yswheatratec%dim_1%LB = 1
  355.       yswheatratec%dim_1%EX = ( max( 0, ibmax ) )
  355.       yswheatratec%dim_1%SM = 1
  355.       yswheatratec%dim_2%LB = 1
  355.       yswheatratec%dim_2%EX = ( max( 0, kmax ) )
  355.       yswheatratec%dim_2%SM = ( max( 0, ibmax ) )
  355.       yswheatratec%dim_3%LB = 1
  355.       yswheatratec%dim_3%EX = ( max( 0, jbmax ) )
  355.       yswheatratec%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  355.       $_allo_P13(0) = 0x1000000000001L
  355.       $_allo_P13(1) = loc( yswheatratec )
  355.       call __allocate( $_allo_P13, 0, 0, _fcd( 0, 0 ) )
  356.       $F_A60 = jbmax
  356.       $F_A61 = kmax
  356.       $F_A62 = ibmax
  356.       if ( and( and( -$F_A61, -$F_A60 ), -$F_A62 ) < 0 ) then
  356.          $I_L356_526 = 0
  356.          do
  356.             $I_L356_288 = 0
  356.             do
  356.                $I_L356_32 = 0
  356. !dir$ ivdep
  356.                do
  356.                   (yswheatratec%base_addr)(1 + $I_L356_32, 1 + $I_L356_288, 1 + $I_L356_526, 0) = 0.0
  356.                   $I_L356_32 = 1 + $I_L356_32
  356.                   if ( $I_L356_32 >= $F_A62 ) exit
  356.                enddo
  356.                $I_L356_288 = 1 + $I_L356_288
  356.                if ( $I_L356_288 >= $F_A61 ) exit
  356.             enddo
  356.             $I_L356_526 = 1 + $I_L356_526
  356.             if ( $I_L356_526 >= $F_A60 ) exit
  356.          enddo
  356.       endif
  357.       yswsfcnet%header%a_contig = 1
  357.       yswsfcnet%dim_1%LB = 1
  357.       yswsfcnet%dim_1%EX = ( max( 0, ibmax ) )
  357.       yswsfcnet%dim_1%SM = 1
  357.       yswsfcnet%dim_2%LB = 1
  357.       yswsfcnet%dim_2%EX = ( max( 0, jbmax ) )
  357.       yswsfcnet%dim_2%SM = ( max( 0, ibmax ) )
  357.       $_allo_P14(0) = 0x1000000000001L
  357.       $_allo_P14(1) = loc( yswsfcnet )
  357.       call __allocate( $_allo_P14, 0, 0, _fcd( 0, 0 ) )
  358.       $F_A63 = jbmax
  358.       $F_A64 = ibmax
  358.       if ( and( -$F_A64, -$F_A63 ) < 0 ) then
  358.          $I_L358_290 = 0
  358.          do
  358.             $I_L358_34 = 0
  358. !dir$ ivdep
  358.             do
  358.                (yswsfcnet%base_addr)(1 + $I_L358_34, 1 + $I_L358_290, 0) = 0.0
  358.                $I_L358_34 = 1 + $I_L358_34
  358.                if ( $I_L358_34 >= $F_A64 ) exit
  358.             enddo
  358.             $I_L358_290 = 1 + $I_L358_290
  358.             if ( $I_L358_290 >= $F_A63 ) exit
  358.          enddo
  358.       endif
  359.       yswsfcnetc%header%a_contig = 1
  359.       yswsfcnetc%dim_1%LB = 1
  359.       yswsfcnetc%dim_1%EX = ( max( 0, ibmax ) )
  359.       yswsfcnetc%dim_1%SM = 1
  359.       yswsfcnetc%dim_2%LB = 1
  359.       yswsfcnetc%dim_2%EX = ( max( 0, jbmax ) )
  359.       yswsfcnetc%dim_2%SM = ( max( 0, ibmax ) )
  359.       $_allo_P15(0) = 0x1000000000001L
  359.       $_allo_P15(1) = loc( yswsfcnetc )
  359.       call __allocate( $_allo_P15, 0, 0, _fcd( 0, 0 ) )
  360.       $F_A65 = jbmax
  360.       $F_A66 = ibmax
  360.       if ( and( -$F_A66, -$F_A65 ) < 0 ) then
  360.          $I_L360_292 = 0
  360.          do
  360.             $I_L360_36 = 0
  360. !dir$ ivdep
  360.             do
  360.                (yswsfcnetc%base_addr)(1 + $I_L360_36, 1 + $I_L360_292, 0) = 0.0
  360.                $I_L360_36 = 1 + $I_L360_36
  360.                if ( $I_L360_36 >= $F_A66 ) exit
  360.             enddo
  360.             $I_L360_292 = 1 + $I_L360_292
  360.             if ( $I_L360_292 >= $F_A65 ) exit
  360.          enddo
  360.       endif
  363.       rswtoadown%header%a_contig = 1
  363.       rswtoadown%dim_1%LB = 1
  363.       rswtoadown%dim_1%EX = ( max( 0, ibmax ) )
  363.       rswtoadown%dim_1%SM = 1
  363.       rswtoadown%dim_2%LB = 1
  363.       rswtoadown%dim_2%EX = ( max( 0, jbmax ) )
  363.       rswtoadown%dim_2%SM = ( max( 0, ibmax ) )
  363.       $_allo_P16(0) = 0x1000000000001L
  363.       $_allo_P16(1) = loc( rswtoadown )
  363.       call __allocate( $_allo_P16, 0, 0, _fcd( 0, 0 ) )
  364.       $F_A67 = jbmax
  364.       $F_A68 = ibmax
  364.       if ( and( -$F_A68, -$F_A67 ) < 0 ) then
  364.          $I_L364_294 = 0
  364.          do
  364.             $I_L364_38 = 0
  364. !dir$ ivdep
  364.             do
  364.                (rswtoadown%base_addr)(1 + $I_L364_38, 1 + $I_L364_294, 0) = 0.0
  364.                $I_L364_38 = 1 + $I_L364_38
  364.                if ( $I_L364_38 >= $F_A68 ) exit
  364.             enddo
  364.             $I_L364_294 = 1 + $I_L364_294
  364.             if ( $I_L364_294 >= $F_A67 ) exit
  364.          enddo
  364.       endif
  365.       rvisbeam%header%a_contig = 1
  365.       rvisbeam%dim_1%LB = 1
  365.       rvisbeam%dim_1%EX = ( max( 0, ibmax ) )
  365.       rvisbeam%dim_1%SM = 1
  365.       rvisbeam%dim_2%LB = 1
  365.       rvisbeam%dim_2%EX = ( max( 0, jbmax ) )
  365.       rvisbeam%dim_2%SM = ( max( 0, ibmax ) )
  365.       $_allo_P17(0) = 0x1000000000001L
  365.       $_allo_P17(1) = loc( rvisbeam )
  365.       call __allocate( $_allo_P17, 0, 0, _fcd( 0, 0 ) )
  366.       $F_A69 = jbmax
  366.       $F_A70 = ibmax
  366.       if ( and( -$F_A70, -$F_A69 ) < 0 ) then
  366.          $I_L366_296 = 0
  366.          do
  366.             $I_L366_40 = 0
  366. !dir$ ivdep
  366.             do
  366.                (rvisbeam%base_addr)(1 + $I_L366_40, 1 + $I_L366_296, 0) = 0.0
  366.                $I_L366_40 = 1 + $I_L366_40
  366.                if ( $I_L366_40 >= $F_A70 ) exit
  366.             enddo
  366.             $I_L366_296 = 1 + $I_L366_296
  366.             if ( $I_L366_296 >= $F_A69 ) exit
  366.          enddo
  366.       endif
  367.       rvisdiff%header%a_contig = 1
  367.       rvisdiff%dim_1%LB = 1
  367.       rvisdiff%dim_1%EX = ( max( 0, ibmax ) )
  367.       rvisdiff%dim_1%SM = 1
  367.       rvisdiff%dim_2%LB = 1
  367.       rvisdiff%dim_2%EX = ( max( 0, jbmax ) )
  367.       rvisdiff%dim_2%SM = ( max( 0, ibmax ) )
  367.       $_allo_P18(0) = 0x1000000000001L
  367.       $_allo_P18(1) = loc( rvisdiff )
  367.       call __allocate( $_allo_P18, 0, 0, _fcd( 0, 0 ) )
  368.       $F_A71 = jbmax
  368.       $F_A72 = ibmax
  368.       if ( and( -$F_A72, -$F_A71 ) < 0 ) then
  368.          $I_L368_298 = 0
  368.          do
  368.             $I_L368_42 = 0
  368. !dir$ ivdep
  368.             do
  368.                (rvisdiff%base_addr)(1 + $I_L368_42, 1 + $I_L368_298, 0) = 0.0
  368.                $I_L368_42 = 1 + $I_L368_42
  368.                if ( $I_L368_42 >= $F_A72 ) exit
  368.             enddo
  368.             $I_L368_298 = 1 + $I_L368_298
  368.             if ( $I_L368_298 >= $F_A71 ) exit
  368.          enddo
  368.       endif
  369.       rnirbeam%header%a_contig = 1
  369.       rnirbeam%dim_1%LB = 1
  369.       rnirbeam%dim_1%EX = ( max( 0, ibmax ) )
  369.       rnirbeam%dim_1%SM = 1
  369.       rnirbeam%dim_2%LB = 1
  369.       rnirbeam%dim_2%EX = ( max( 0, jbmax ) )
  369.       rnirbeam%dim_2%SM = ( max( 0, ibmax ) )
  369.       $_allo_P19(0) = 0x1000000000001L
  369.       $_allo_P19(1) = loc( rnirbeam )
  369.       call __allocate( $_allo_P19, 0, 0, _fcd( 0, 0 ) )
  370.       $F_A73 = jbmax
  370.       $F_A74 = ibmax
  370.       if ( and( -$F_A74, -$F_A73 ) < 0 ) then
  370.          $I_L370_300 = 0
  370.          do
  370.             $I_L370_44 = 0
  370. !dir$ ivdep
  370.             do
  370.                (rnirbeam%base_addr)(1 + $I_L370_44, 1 + $I_L370_300, 0) = 0.0
  370.                $I_L370_44 = 1 + $I_L370_44
  370.                if ( $I_L370_44 >= $F_A74 ) exit
  370.             enddo
  370.             $I_L370_300 = 1 + $I_L370_300
  370.             if ( $I_L370_300 >= $F_A73 ) exit
  370.          enddo
  370.       endif
  371.       rnirdiff%header%a_contig = 1
  371.       rnirdiff%dim_1%LB = 1
  371.       rnirdiff%dim_1%EX = ( max( 0, ibmax ) )
  371.       rnirdiff%dim_1%SM = 1
  371.       rnirdiff%dim_2%LB = 1
  371.       rnirdiff%dim_2%EX = ( max( 0, jbmax ) )
  371.       rnirdiff%dim_2%SM = ( max( 0, ibmax ) )
  371.       $_allo_P20(0) = 0x1000000000001L
  371.       $_allo_P20(1) = loc( rnirdiff )
  371.       call __allocate( $_allo_P20, 0, 0, _fcd( 0, 0 ) )
  372.       $F_A75 = jbmax
  372.       $F_A76 = ibmax
  372.       if ( and( -$F_A76, -$F_A75 ) < 0 ) then
  372.          $I_L372_302 = 0
  372.          do
  372.             $I_L372_46 = 0
  372. !dir$ ivdep
  372.             do
  372.                (rnirdiff%base_addr)(1 + $I_L372_46, 1 + $I_L372_302, 0) = 0.0
  372.                $I_L372_46 = 1 + $I_L372_46
  372.                if ( $I_L372_46 >= $F_A76 ) exit
  372.             enddo
  372.             $I_L372_302 = 1 + $I_L372_302
  372.             if ( $I_L372_302 >= $F_A75 ) exit
  372.          enddo
  372.       endif
  373.       rvisbeamc%header%a_contig = 1
  373.       rvisbeamc%dim_1%LB = 1
  373.       rvisbeamc%dim_1%EX = ( max( 0, ibmax ) )
  373.       rvisbeamc%dim_1%SM = 1
  373.       rvisbeamc%dim_2%LB = 1
  373.       rvisbeamc%dim_2%EX = ( max( 0, jbmax ) )
  373.       rvisbeamc%dim_2%SM = ( max( 0, ibmax ) )
  373.       $_allo_P21(0) = 0x1000000000001L
  373.       $_allo_P21(1) = loc( rvisbeamc )
  373.       call __allocate( $_allo_P21, 0, 0, _fcd( 0, 0 ) )
  374.       $F_A77 = jbmax
  374.       $F_A78 = ibmax
  374.       if ( and( -$F_A78, -$F_A77 ) < 0 ) then
  374.          $I_L374_304 = 0
  374.          do
  374.             $I_L374_48 = 0
  374. !dir$ ivdep
  374.             do
  374.                (rvisbeamc%base_addr)(1 + $I_L374_48, 1 + $I_L374_304, 0) = 0.0
  374.                $I_L374_48 = 1 + $I_L374_48
  374.                if ( $I_L374_48 >= $F_A78 ) exit
  374.             enddo
  374.             $I_L374_304 = 1 + $I_L374_304
  374.             if ( $I_L374_304 >= $F_A77 ) exit
  374.          enddo
  374.       endif
  375.       rvisdiffc%header%a_contig = 1
  375.       rvisdiffc%dim_1%LB = 1
  375.       rvisdiffc%dim_1%EX = ( max( 0, ibmax ) )
  375.       rvisdiffc%dim_1%SM = 1
  375.       rvisdiffc%dim_2%LB = 1
  375.       rvisdiffc%dim_2%EX = ( max( 0, jbmax ) )
  375.       rvisdiffc%dim_2%SM = ( max( 0, ibmax ) )
  375.       $_allo_P22(0) = 0x1000000000001L
  375.       $_allo_P22(1) = loc( rvisdiffc )
  375.       call __allocate( $_allo_P22, 0, 0, _fcd( 0, 0 ) )
  376.       $F_A79 = jbmax
  376.       $F_A80 = ibmax
  376.       if ( and( -$F_A80, -$F_A79 ) < 0 ) then
  376.          $I_L376_306 = 0
  376.          do
  376.             $I_L376_50 = 0
  376. !dir$ ivdep
  376.             do
  376.                (rvisdiffc%base_addr)(1 + $I_L376_50, 1 + $I_L376_306, 0) = 0.0
  376.                $I_L376_50 = 1 + $I_L376_50
  376.                if ( $I_L376_50 >= $F_A80 ) exit
  376.             enddo
  376.             $I_L376_306 = 1 + $I_L376_306
  376.             if ( $I_L376_306 >= $F_A79 ) exit
  376.          enddo
  376.       endif
  377.       rnirbeamc%header%a_contig = 1
  377.       rnirbeamc%dim_1%LB = 1
  377.       rnirbeamc%dim_1%EX = ( max( 0, ibmax ) )
  377.       rnirbeamc%dim_1%SM = 1
  377.       rnirbeamc%dim_2%LB = 1
  377.       rnirbeamc%dim_2%EX = ( max( 0, jbmax ) )
  377.       rnirbeamc%dim_2%SM = ( max( 0, ibmax ) )
  377.       $_allo_P23(0) = 0x1000000000001L
  377.       $_allo_P23(1) = loc( rnirbeamc )
  377.       call __allocate( $_allo_P23, 0, 0, _fcd( 0, 0 ) )
  378.       $F_A81 = jbmax
  378.       $F_A82 = ibmax
  378.       if ( and( -$F_A82, -$F_A81 ) < 0 ) then
  378.          $I_L378_308 = 0
  378.          do
  378.             $I_L378_52 = 0
  378. !dir$ ivdep
  378.             do
  378.                (rnirbeamc%base_addr)(1 + $I_L378_52, 1 + $I_L378_308, 0) = 0.0
  378.                $I_L378_52 = 1 + $I_L378_52
  378.                if ( $I_L378_52 >= $F_A82 ) exit
  378.             enddo
  378.             $I_L378_308 = 1 + $I_L378_308
  378.             if ( $I_L378_308 >= $F_A81 ) exit
  378.          enddo
  378.       endif
  379.       rnirdiffc%header%a_contig = 1
  379.       rnirdiffc%dim_1%LB = 1
  379.       rnirdiffc%dim_1%EX = ( max( 0, ibmax ) )
  379.       rnirdiffc%dim_1%SM = 1
  379.       rnirdiffc%dim_2%LB = 1
  379.       rnirdiffc%dim_2%EX = ( max( 0, jbmax ) )
  379.       rnirdiffc%dim_2%SM = ( max( 0, ibmax ) )
  379.       $_allo_P24(0) = 0x1000000000001L
  379.       $_allo_P24(1) = loc( rnirdiffc )
  379.       call __allocate( $_allo_P24, 0, 0, _fcd( 0, 0 ) )
  380.       $F_A83 = jbmax
  380.       $F_A84 = ibmax
  380.       if ( and( -$F_A84, -$F_A83 ) < 0 ) then
  380.          $I_L380_310 = 0
  380.          do
  380.             $I_L380_54 = 0
  380. !dir$ ivdep
  380.             do
  380.                (rnirdiffc%base_addr)(1 + $I_L380_54, 1 + $I_L380_310, 0) = 0.0
  380.                $I_L380_54 = 1 + $I_L380_54
  380.                if ( $I_L380_54 >= $F_A84 ) exit
  380.             enddo
  380.             $I_L380_310 = 1 + $I_L380_310
  380.             if ( $I_L380_310 >= $F_A83 ) exit
  380.          enddo
  380.       endif
  381.       rswsfcnet%header%a_contig = 1
  381.       rswsfcnet%dim_1%LB = 1
  381.       rswsfcnet%dim_1%EX = ( max( 0, ibmax ) )
  381.       rswsfcnet%dim_1%SM = 1
  381.       rswsfcnet%dim_2%LB = 1
  381.       rswsfcnet%dim_2%EX = ( max( 0, jbmax ) )
  381.       rswsfcnet%dim_2%SM = ( max( 0, ibmax ) )
  381.       $_allo_P25(0) = 0x1000000000001L
  381.       $_allo_P25(1) = loc( rswsfcnet )
  381.       call __allocate( $_allo_P25, 0, 0, _fcd( 0, 0 ) )
  382.       $F_A85 = jbmax
  382.       $F_A86 = ibmax
  382.       if ( and( -$F_A86, -$F_A85 ) < 0 ) then
  382.          $I_L382_312 = 0
  382.          do
  382.             $I_L382_56 = 0
  382. !dir$ ivdep
  382.             do
  382.                (rswsfcnet%base_addr)(1 + $I_L382_56, 1 + $I_L382_312, 0) = 0.0
  382.                $I_L382_56 = 1 + $I_L382_56
  382.                if ( $I_L382_56 >= $F_A86 ) exit
  382.             enddo
  382.             $I_L382_312 = 1 + $I_L382_312
  382.             if ( $I_L382_312 >= $F_A85 ) exit
  382.          enddo
  382.       endif
  383.       rswsfcnetc%header%a_contig = 1
  383.       rswsfcnetc%dim_1%LB = 1
  383.       rswsfcnetc%dim_1%EX = ( max( 0, ibmax ) )
  383.       rswsfcnetc%dim_1%SM = 1
  383.       rswsfcnetc%dim_2%LB = 1
  383.       rswsfcnetc%dim_2%EX = ( max( 0, jbmax ) )
  383.       rswsfcnetc%dim_2%SM = ( max( 0, ibmax ) )
  383.       $_allo_P26(0) = 0x1000000000001L
  383.       $_allo_P26(1) = loc( rswsfcnetc )
  383.       call __allocate( $_allo_P26, 0, 0, _fcd( 0, 0 ) )
  384.       $F_A87 = jbmax
  384.       $F_A88 = ibmax
  384.       if ( and( -$F_A88, -$F_A87 ) < 0 ) then
  384.          $I_L384_314 = 0
  384.          do
  384.             $I_L384_58 = 0
  384. !dir$ ivdep
  384.             do
  384.                (rswsfcnetc%base_addr)(1 + $I_L384_58, 1 + $I_L384_314, 0) = 0.0
  384.                $I_L384_58 = 1 + $I_L384_58
  384.                if ( $I_L384_58 >= $F_A88 ) exit
  384.             enddo
  384.             $I_L384_314 = 1 + $I_L384_314
  384.             if ( $I_L384_314 >= $F_A87 ) exit
  384.          enddo
  384.       endif
  387.       albvisbeam%header%a_contig = 1
  387.       albvisbeam%dim_1%LB = 1
  387.       albvisbeam%dim_1%EX = ( max( 0, ibmax ) )
  387.       albvisbeam%dim_1%SM = 1
  387.       albvisbeam%dim_2%LB = 1
  387.       albvisbeam%dim_2%EX = ( max( 0, jbmax ) )
  387.       albvisbeam%dim_2%SM = ( max( 0, ibmax ) )
  387.       $_allo_P27(0) = 0x1000000000001L
  387.       $_allo_P27(1) = loc( albvisbeam )
  387.       call __allocate( $_allo_P27, 0, 0, _fcd( 0, 0 ) )
  388.       $F_A89 = jbmax
  388.       $F_A90 = ibmax
  388.       if ( and( -$F_A90, -$F_A89 ) < 0 ) then
  388.          $I_L388_316 = 0
  388.          do
  388.             $I_L388_60 = 0
  388. !dir$ ivdep
  388.             do
  388.                (albvisbeam%base_addr)(1 + $I_L388_60, 1 + $I_L388_316, 0) = 0.0
  388.                $I_L388_60 = 1 + $I_L388_60
  388.                if ( $I_L388_60 >= $F_A90 ) exit
  388.             enddo
  388.             $I_L388_316 = 1 + $I_L388_316
  388.             if ( $I_L388_316 >= $F_A89 ) exit
  388.          enddo
  388.       endif
  389.       albvisdiff%header%a_contig = 1
  389.       albvisdiff%dim_1%LB = 1
  389.       albvisdiff%dim_1%EX = ( max( 0, ibmax ) )
  389.       albvisdiff%dim_1%SM = 1
  389.       albvisdiff%dim_2%LB = 1
  389.       albvisdiff%dim_2%EX = ( max( 0, jbmax ) )
  389.       albvisdiff%dim_2%SM = ( max( 0, ibmax ) )
  389.       $_allo_P28(0) = 0x1000000000001L
  389.       $_allo_P28(1) = loc( albvisdiff )
  389.       call __allocate( $_allo_P28, 0, 0, _fcd( 0, 0 ) )
  390.       $F_A91 = jbmax
  390.       $F_A92 = ibmax
  390.       if ( and( -$F_A92, -$F_A91 ) < 0 ) then
  390.          $I_L390_318 = 0
  390.          do
  390.             $I_L390_62 = 0
  390. !dir$ ivdep
  390.             do
  390.                (albvisdiff%base_addr)(1 + $I_L390_62, 1 + $I_L390_318, 0) = 0.0
  390.                $I_L390_62 = 1 + $I_L390_62
  390.                if ( $I_L390_62 >= $F_A92 ) exit
  390.             enddo
  390.             $I_L390_318 = 1 + $I_L390_318
  390.             if ( $I_L390_318 >= $F_A91 ) exit
  390.          enddo
  390.       endif
  391.       albnirbeam%header%a_contig = 1
  391.       albnirbeam%dim_1%LB = 1
  391.       albnirbeam%dim_1%EX = ( max( 0, ibmax ) )
  391.       albnirbeam%dim_1%SM = 1
  391.       albnirbeam%dim_2%LB = 1
  391.       albnirbeam%dim_2%EX = ( max( 0, jbmax ) )
  391.       albnirbeam%dim_2%SM = ( max( 0, ibmax ) )
  391.       $_allo_P29(0) = 0x1000000000001L
  391.       $_allo_P29(1) = loc( albnirbeam )
  391.       call __allocate( $_allo_P29, 0, 0, _fcd( 0, 0 ) )
  392.       $F_A93 = jbmax
  392.       $F_A94 = ibmax
  392.       if ( and( -$F_A94, -$F_A93 ) < 0 ) then
  392.          $I_L392_320 = 0
  392.          do
  392.             $I_L392_64 = 0
  392. !dir$ ivdep
  392.             do
  392.                (albnirbeam%base_addr)(1 + $I_L392_64, 1 + $I_L392_320, 0) = 0.0
  392.                $I_L392_64 = 1 + $I_L392_64
  392.                if ( $I_L392_64 >= $F_A94 ) exit
  392.             enddo
  392.             $I_L392_320 = 1 + $I_L392_320
  392.             if ( $I_L392_320 >= $F_A93 ) exit
  392.          enddo
  392.       endif
  393.       albnirdiff%header%a_contig = 1
  393.       albnirdiff%dim_1%LB = 1
  393.       albnirdiff%dim_1%EX = ( max( 0, ibmax ) )
  393.       albnirdiff%dim_1%SM = 1
  393.       albnirdiff%dim_2%LB = 1
  393.       albnirdiff%dim_2%EX = ( max( 0, jbmax ) )
  393.       albnirdiff%dim_2%SM = ( max( 0, ibmax ) )
  393.       $_allo_P30(0) = 0x1000000000001L
  393.       $_allo_P30(1) = loc( albnirdiff )
  393.       call __allocate( $_allo_P30, 0, 0, _fcd( 0, 0 ) )
  394.       $F_A95 = jbmax
  394.       $F_A96 = ibmax
  394.       if ( and( -$F_A96, -$F_A95 ) < 0 ) then
  394.          $I_L394_322 = 0
  394.          do
  394.             $I_L394_66 = 0
  394. !dir$ ivdep
  394.             do
  394.                (albnirdiff%base_addr)(1 + $I_L394_66, 1 + $I_L394_322, 0) = 0.0
  394.                $I_L394_66 = 1 + $I_L394_66
  394.                if ( $I_L394_66 >= $F_A96 ) exit
  394.             enddo
  394.             $I_L394_322 = 1 + $I_L394_322
  394.             if ( $I_L394_322 >= $F_A95 ) exit
  394.          enddo
  394.       endif
  397.       lwcoolrate%header%a_contig = 1
  397.       lwcoolrate%dim_1%LB = 1
  397.       lwcoolrate%dim_1%EX = ( max( 0, ibmax ) )
  397.       lwcoolrate%dim_1%SM = 1
  397.       lwcoolrate%dim_2%LB = 1
  397.       lwcoolrate%dim_2%EX = ( max( 0, kmax ) )
  397.       lwcoolrate%dim_2%SM = ( max( 0, ibmax ) )
  397.       lwcoolrate%dim_3%LB = 1
  397.       lwcoolrate%dim_3%EX = ( max( 0, jbmax ) )
  397.       lwcoolrate%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  397.       $_allo_P31(0) = 0x1000000000001L
  397.       $_allo_P31(1) = loc( lwcoolrate )
  397.       call __allocate( $_allo_P31, 0, 0, _fcd( 0, 0 ) )
  398.       $F_A97 = jbmax
  398.       $F_A98 = kmax
  398.       $F_A99 = ibmax
  398.       if ( and( and( -$F_A98, -$F_A97 ), -$F_A99 ) < 0 ) then
  398.          $I_L398_528 = 0
  398.          do
  398.             $I_L398_324 = 0
  398.             do
  398.                $I_L398_68 = 0
  398. !dir$ ivdep
  398.                do
  398.                   (lwcoolrate%base_addr)(1 + $I_L398_68, 1 + $I_L398_324, 1 + $I_L398_528, 0) = 0.0
  398.                   $I_L398_68 = 1 + $I_L398_68
  398.                   if ( $I_L398_68 >= $F_A99 ) exit
  398.                enddo
  398.                $I_L398_324 = 1 + $I_L398_324
  398.                if ( $I_L398_324 >= $F_A98 ) exit
  398.             enddo
  398.             $I_L398_528 = 1 + $I_L398_528
  398.             if ( $I_L398_528 >= $F_A97 ) exit
  398.          enddo
  398.       endif
  399.       lwcoolratec%header%a_contig = 1
  399.       lwcoolratec%dim_1%LB = 1
  399.       lwcoolratec%dim_1%EX = ( max( 0, ibmax ) )
  399.       lwcoolratec%dim_1%SM = 1
  399.       lwcoolratec%dim_2%LB = 1
  399.       lwcoolratec%dim_2%EX = ( max( 0, kmax ) )
  399.       lwcoolratec%dim_2%SM = ( max( 0, ibmax ) )
  399.       lwcoolratec%dim_3%LB = 1
  399.       lwcoolratec%dim_3%EX = ( max( 0, jbmax ) )
  399.       lwcoolratec%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  399.       $_allo_P32(0) = 0x1000000000001L
  399.       $_allo_P32(1) = loc( lwcoolratec )
  399.       call __allocate( $_allo_P32, 0, 0, _fcd( 0, 0 ) )
  400.       $F_A100 = jbmax
  400.       $F_A101 = kmax
  400.       $F_A102 = ibmax
  400.       if ( and( and( -$F_A101, -$F_A100 ), -$F_A102 ) < 0 ) then
  400.          $I_L400_530 = 0
  400.          do
  400.             $I_L400_326 = 0
  400.             do
  400.                $I_L400_70 = 0
  400. !dir$ ivdep
  400.                do
  400.                   (lwcoolratec%base_addr)(1 + $I_L400_70, 1 + $I_L400_326, 1 + $I_L400_530, 0) = 0.0
  400.                   $I_L400_70 = 1 + $I_L400_70
  400.                   if ( $I_L400_70 >= $F_A102 ) exit
  400.                enddo
  400.                $I_L400_326 = 1 + $I_L400_326
  400.                if ( $I_L400_326 >= $F_A101 ) exit
  400.             enddo
  400.             $I_L400_530 = 1 + $I_L400_530
  400.             if ( $I_L400_530 >= $F_A100 ) exit
  400.          enddo
  400.       endif
  401.       lwsfcdown%header%a_contig = 1
  401.       lwsfcdown%dim_1%LB = 1
  401.       lwsfcdown%dim_1%EX = ( max( 0, ibmax ) )
  401.       lwsfcdown%dim_1%SM = 1
  401.       lwsfcdown%dim_2%LB = 1
  401.       lwsfcdown%dim_2%EX = ( max( 0, jbmax ) )
  401.       lwsfcdown%dim_2%SM = ( max( 0, ibmax ) )
  401.       $_allo_P33(0) = 0x1000000000001L
  401.       $_allo_P33(1) = loc( lwsfcdown )
  401.       call __allocate( $_allo_P33, 0, 0, _fcd( 0, 0 ) )
  402.       $F_A103 = jbmax
  402.       $F_A104 = ibmax
  402.       if ( and( -$F_A104, -$F_A103 ) < 0 ) then
  402.          $I_L402_328 = 0
  402.          do
  402.             $I_L402_72 = 0
  402. !dir$ ivdep
  402.             do
  402.                (lwsfcdown%base_addr)(1 + $I_L402_72, 1 + $I_L402_328, 0) = 0.0
  402.                $I_L402_72 = 1 + $I_L402_72
  402.                if ( $I_L402_72 >= $F_A104 ) exit
  402.             enddo
  402.             $I_L402_328 = 1 + $I_L402_328
  402.             if ( $I_L402_328 >= $F_A103 ) exit
  402.          enddo
  402.       endif
  403.       lwsfcdownc%header%a_contig = 1
  403.       lwsfcdownc%dim_1%LB = 1
  403.       lwsfcdownc%dim_1%EX = ( max( 0, ibmax ) )
  403.       lwsfcdownc%dim_1%SM = 1
  403.       lwsfcdownc%dim_2%LB = 1
  403.       lwsfcdownc%dim_2%EX = ( max( 0, jbmax ) )
  403.       lwsfcdownc%dim_2%SM = ( max( 0, ibmax ) )
  403.       $_allo_P34(0) = 0x1000000000001L
  403.       $_allo_P34(1) = loc( lwsfcdownc )
  403.       call __allocate( $_allo_P34, 0, 0, _fcd( 0, 0 ) )
  404.       $F_A105 = jbmax
  404.       $F_A106 = ibmax
  404.       if ( and( -$F_A106, -$F_A105 ) < 0 ) then
  404.          $I_L404_330 = 0
  404.          do
  404.             $I_L404_74 = 0
  404. !dir$ ivdep
  404.             do
  404.                (lwsfcdownc%base_addr)(1 + $I_L404_74, 1 + $I_L404_330, 0) = 0.0
  404.                $I_L404_74 = 1 + $I_L404_74
  404.                if ( $I_L404_74 >= $F_A106 ) exit
  404.             enddo
  404.             $I_L404_330 = 1 + $I_L404_330
  404.             if ( $I_L404_330 >= $F_A105 ) exit
  404.          enddo
  404.       endif
  405.       lwsfcnet%header%a_contig = 1
  405.       lwsfcnet%dim_1%LB = 1
  405.       lwsfcnet%dim_1%EX = ( max( 0, ibmax ) )
  405.       lwsfcnet%dim_1%SM = 1
  405.       lwsfcnet%dim_2%LB = 1
  405.       lwsfcnet%dim_2%EX = ( max( 0, jbmax ) )
  405.       lwsfcnet%dim_2%SM = ( max( 0, ibmax ) )
  405.       $_allo_P35(0) = 0x1000000000001L
  405.       $_allo_P35(1) = loc( lwsfcnet )
  405.       call __allocate( $_allo_P35, 0, 0, _fcd( 0, 0 ) )
  406.       $F_A107 = jbmax
  406.       $F_A108 = ibmax
  406.       if ( and( -$F_A108, -$F_A107 ) < 0 ) then
  406.          $I_L406_332 = 0
  406.          do
  406.             $I_L406_76 = 0
  406. !dir$ ivdep
  406.             do
  406.                (lwsfcnet%base_addr)(1 + $I_L406_76, 1 + $I_L406_332, 0) = 0.0
  406.                $I_L406_76 = 1 + $I_L406_76
  406.                if ( $I_L406_76 >= $F_A108 ) exit
  406.             enddo
  406.             $I_L406_332 = 1 + $I_L406_332
  406.             if ( $I_L406_332 >= $F_A107 ) exit
  406.          enddo
  406.       endif
  407.       lwsfcnetc%header%a_contig = 1
  407.       lwsfcnetc%dim_1%LB = 1
  407.       lwsfcnetc%dim_1%EX = ( max( 0, ibmax ) )
  407.       lwsfcnetc%dim_1%SM = 1
  407.       lwsfcnetc%dim_2%LB = 1
  407.       lwsfcnetc%dim_2%EX = ( max( 0, jbmax ) )
  407.       lwsfcnetc%dim_2%SM = ( max( 0, ibmax ) )
  407.       $_allo_P36(0) = 0x1000000000001L
  407.       $_allo_P36(1) = loc( lwsfcnetc )
  407.       call __allocate( $_allo_P36, 0, 0, _fcd( 0, 0 ) )
  408.       $F_A109 = jbmax
  408.       $F_A110 = ibmax
  408.       if ( and( -$F_A110, -$F_A109 ) < 0 ) then
  408.          $I_L408_334 = 0
  408.          do
  408.             $I_L408_78 = 0
  408. !dir$ ivdep
  408.             do
  408.                (lwsfcnetc%base_addr)(1 + $I_L408_78, 1 + $I_L408_334, 0) = 0.0
  408.                $I_L408_78 = 1 + $I_L408_78
  408.                if ( $I_L408_78 >= $F_A110 ) exit
  408.             enddo
  408.             $I_L408_334 = 1 + $I_L408_334
  408.             if ( $I_L408_334 >= $F_A109 ) exit
  408.          enddo
  408.       endif
  409.       lwtoaup%header%a_contig = 1
  409.       lwtoaup%dim_1%LB = 1
  409.       lwtoaup%dim_1%EX = ( max( 0, ibmax ) )
  409.       lwtoaup%dim_1%SM = 1
  409.       lwtoaup%dim_2%LB = 1
  409.       lwtoaup%dim_2%EX = ( max( 0, jbmax ) )
  409.       lwtoaup%dim_2%SM = ( max( 0, ibmax ) )
  409.       $_allo_P37(0) = 0x1000000000001L
  409.       $_allo_P37(1) = loc( lwtoaup )
  409.       call __allocate( $_allo_P37, 0, 0, _fcd( 0, 0 ) )
  410.       $F_A111 = jbmax
  410.       $F_A112 = ibmax
  410.       if ( and( -$F_A112, -$F_A111 ) < 0 ) then
  410.          $I_L410_336 = 0
  410.          do
  410.             $I_L410_80 = 0
  410. !dir$ ivdep
  410.             do
  410.                (lwtoaup%base_addr)(1 + $I_L410_80, 1 + $I_L410_336, 0) = 0.0
  410.                $I_L410_80 = 1 + $I_L410_80
  410.                if ( $I_L410_80 >= $F_A112 ) exit
  410.             enddo
  410.             $I_L410_336 = 1 + $I_L410_336
  410.             if ( $I_L410_336 >= $F_A111 ) exit
  410.          enddo
  410.       endif
  411.       lwtoaupc%header%a_contig = 1
  411.       lwtoaupc%dim_1%LB = 1
  411.       lwtoaupc%dim_1%EX = ( max( 0, ibmax ) )
  411.       lwtoaupc%dim_1%SM = 1
  411.       lwtoaupc%dim_2%LB = 1
  411.       lwtoaupc%dim_2%EX = ( max( 0, jbmax ) )
  411.       lwtoaupc%dim_2%SM = ( max( 0, ibmax ) )
  411.       $_allo_P38(0) = 0x1000000000001L
  411.       $_allo_P38(1) = loc( lwtoaupc )
  411.       call __allocate( $_allo_P38, 0, 0, _fcd( 0, 0 ) )
  412.       $F_A113 = jbmax
  412.       $F_A114 = ibmax
  412.       if ( and( -$F_A114, -$F_A113 ) < 0 ) then
  412.          $I_L412_338 = 0
  412.          do
  412.             $I_L412_82 = 0
  412. !dir$ ivdep
  412.             do
  412.                (lwtoaupc%base_addr)(1 + $I_L412_82, 1 + $I_L412_338, 0) = 0.0
  412.                $I_L412_82 = 1 + $I_L412_82
  412.                if ( $I_L412_82 >= $F_A114 ) exit
  412.             enddo
  412.             $I_L412_338 = 1 + $I_L412_338
  412.             if ( $I_L412_338 >= $F_A113 ) exit
  412.          enddo
  412.       endif
  415.       cldsav%header%a_contig = 1
  415.       cldsav%dim_1%LB = 1
  415.       cldsav%dim_1%EX = ( max( 0, ibmax ) )
  415.       cldsav%dim_1%SM = 1
  415.       cldsav%dim_2%LB = 1
  415.       cldsav%dim_2%EX = ( max( 0, jbmax ) )
  415.       cldsav%dim_2%SM = ( max( 0, ibmax ) )
  415.       $_allo_P39(0) = 0x1000000000001L
  415.       $_allo_P39(1) = loc( cldsav )
  415.       call __allocate( $_allo_P39, 0, 0, _fcd( 0, 0 ) )
  416.       $F_A115 = jbmax
  416.       $F_A116 = ibmax
  416.       if ( and( -$F_A116, -$F_A115 ) < 0 ) then
  416.          $I_L416_340 = 0
  416.          do
  416.             $I_L416_84 = 0
  416. !dir$ ivdep
  416.             do
  416.                (cldsav%base_addr)(1 + $I_L416_84, 1 + $I_L416_340, 0) = 0.0
  416.                $I_L416_84 = 1 + $I_L416_84
  416.                if ( $I_L416_84 >= $F_A116 ) exit
  416.             enddo
  416.             $I_L416_340 = 1 + $I_L416_340
  416.             if ( $I_L416_340 >= $F_A115 ) exit
  416.          enddo
  416.       endif
  417.       cldtot%header%a_contig = 1
  417.       cldtot%dim_1%LB = 1
  417.       cldtot%dim_1%EX = ( max( 0, ibmax ) )
  417.       cldtot%dim_1%SM = 1
  417.       cldtot%dim_2%LB = 1
  417.       cldtot%dim_2%EX = ( max( 0, kmax ) )
  417.       cldtot%dim_2%SM = ( max( 0, ibmax ) )
  417.       cldtot%dim_3%LB = 1
  417.       cldtot%dim_3%EX = ( max( 0, jbmax ) )
  417.       cldtot%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  417.       $_allo_P40(0) = 0x1000000000001L
  417.       $_allo_P40(1) = loc( cldtot )
  417.       call __allocate( $_allo_P40, 0, 0, _fcd( 0, 0 ) )
  418.       $F_A117 = jbmax
  418.       $F_A118 = kmax
  418.       $F_A119 = ibmax
  418.       if ( and( and( -$F_A118, -$F_A117 ), -$F_A119 ) < 0 ) then
  418.          $I_L418_532 = 0
  418.          do
  418.             $I_L418_342 = 0
  418.             do
  418.                $I_L418_86 = 0
  418. !dir$ ivdep
  418.                do
  418.                   (cldtot%base_addr)(1 + $I_L418_86, 1 + $I_L418_342, 1 + $I_L418_532, 0) = 0.0
  418.                   $I_L418_86 = 1 + $I_L418_86
  418.                   if ( $I_L418_86 >= $F_A119 ) exit
  418.                enddo
  418.                $I_L418_342 = 1 + $I_L418_342
  418.                if ( $I_L418_342 >= $F_A118 ) exit
  418.             enddo
  418.             $I_L418_532 = 1 + $I_L418_532
  418.             if ( $I_L418_532 >= $F_A117 ) exit
  418.          enddo
  418.       endif
  419.       cldinv%header%a_contig = 1
  419.       cldinv%dim_1%LB = 1
  419.       cldinv%dim_1%EX = ( max( 0, ibmax ) )
  419.       cldinv%dim_1%SM = 1
  419.       cldinv%dim_2%LB = 1
  419.       cldinv%dim_2%EX = ( max( 0, kmax ) )
  419.       cldinv%dim_2%SM = ( max( 0, ibmax ) )
  419.       cldinv%dim_3%LB = 1
  419.       cldinv%dim_3%EX = ( max( 0, jbmax ) )
  419.       cldinv%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  419.       $_allo_P41(0) = 0x1000000000001L
  419.       $_allo_P41(1) = loc( cldinv )
  419.       call __allocate( $_allo_P41, 0, 0, _fcd( 0, 0 ) )
  420.       $F_A120 = jbmax
  420.       $F_A121 = kmax
  420.       $F_A122 = ibmax
  420.       if ( and( and( -$F_A121, -$F_A120 ), -$F_A122 ) < 0 ) then
  420.          $I_L420_534 = 0
  420.          do
  420.             $I_L420_344 = 0
  420.             do
  420.                $I_L420_88 = 0
  420. !dir$ ivdep
  420.                do
  420.                   (cldinv%base_addr)(1 + $I_L420_88, 1 + $I_L420_344, 1 + $I_L420_534, 0) = 0.0
  420.                   $I_L420_88 = 1 + $I_L420_88
  420.                   if ( $I_L420_88 >= $F_A122 ) exit
  420.                enddo
  420.                $I_L420_344 = 1 + $I_L420_344
  420.                if ( $I_L420_344 >= $F_A121 ) exit
  420.             enddo
  420.             $I_L420_534 = 1 + $I_L420_534
  420.             if ( $I_L420_534 >= $F_A120 ) exit
  420.          enddo
  420.       endif
  421.       cldsat%header%a_contig = 1
  421.       cldsat%dim_1%LB = 1
  421.       cldsat%dim_1%EX = ( max( 0, ibmax ) )
  421.       cldsat%dim_1%SM = 1
  421.       cldsat%dim_2%LB = 1
  421.       cldsat%dim_2%EX = ( max( 0, kmax ) )
  421.       cldsat%dim_2%SM = ( max( 0, ibmax ) )
  421.       cldsat%dim_3%LB = 1
  421.       cldsat%dim_3%EX = ( max( 0, jbmax ) )
  421.       cldsat%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  421.       $_allo_P42(0) = 0x1000000000001L
  421.       $_allo_P42(1) = loc( cldsat )
  421.       call __allocate( $_allo_P42, 0, 0, _fcd( 0, 0 ) )
  422.       $F_A123 = jbmax
  422.       $F_A124 = kmax
  422.       $F_A125 = ibmax
  422.       if ( and( and( -$F_A124, -$F_A123 ), -$F_A125 ) < 0 ) then
  422.          $I_L422_536 = 0
  422.          do
  422.             $I_L422_346 = 0
  422.             do
  422.                $I_L422_90 = 0
  422. !dir$ ivdep
  422.                do
  422.                   (cldsat%base_addr)(1 + $I_L422_90, 1 + $I_L422_346, 1 + $I_L422_536, 0) = 0.0
  422.                   $I_L422_90 = 1 + $I_L422_90
  422.                   if ( $I_L422_90 >= $F_A125 ) exit
  422.                enddo
  422.                $I_L422_346 = 1 + $I_L422_346
  422.                if ( $I_L422_346 >= $F_A124 ) exit
  422.             enddo
  422.             $I_L422_536 = 1 + $I_L422_536
  422.             if ( $I_L422_536 >= $F_A123 ) exit
  422.          enddo
  422.       endif
  423.       cldcon%header%a_contig = 1
  423.       cldcon%dim_1%LB = 1
  423.       cldcon%dim_1%EX = ( max( 0, ibmax ) )
  423.       cldcon%dim_1%SM = 1
  423.       cldcon%dim_2%LB = 1
  423.       cldcon%dim_2%EX = ( max( 0, kmax ) )
  423.       cldcon%dim_2%SM = ( max( 0, ibmax ) )
  423.       cldcon%dim_3%LB = 1
  423.       cldcon%dim_3%EX = ( max( 0, jbmax ) )
  423.       cldcon%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  423.       $_allo_P43(0) = 0x1000000000001L
  423.       $_allo_P43(1) = loc( cldcon )
  423.       call __allocate( $_allo_P43, 0, 0, _fcd( 0, 0 ) )
  424.       $F_A126 = jbmax
  424.       $F_A127 = kmax
  424.       $F_A128 = ibmax
  424.       if ( and( and( -$F_A127, -$F_A126 ), -$F_A128 ) < 0 ) then
  424.          $I_L424_538 = 0
  424.          do
  424.             $I_L424_348 = 0
  424.             do
  424.                $I_L424_92 = 0
  424. !dir$ ivdep
  424.                do
  424.                   (cldcon%base_addr)(1 + $I_L424_92, 1 + $I_L424_348, 1 + $I_L424_538, 0) = 0.0
  424.                   $I_L424_92 = 1 + $I_L424_92
  424.                   if ( $I_L424_92 >= $F_A128 ) exit
  424.                enddo
  424.                $I_L424_348 = 1 + $I_L424_348
  424.                if ( $I_L424_348 >= $F_A127 ) exit
  424.             enddo
  424.             $I_L424_538 = 1 + $I_L424_538
  424.             if ( $I_L424_538 >= $F_A126 ) exit
  424.          enddo
  424.       endif
  425.       cldson%header%a_contig = 1
  425.       cldson%dim_1%LB = 1
  425.       cldson%dim_1%EX = ( max( 0, ibmax ) )
  425.       cldson%dim_1%SM = 1
  425.       cldson%dim_2%LB = 1
  425.       cldson%dim_2%EX = ( max( 0, kmax ) )
  425.       cldson%dim_2%SM = ( max( 0, ibmax ) )
  425.       cldson%dim_3%LB = 1
  425.       cldson%dim_3%EX = ( max( 0, jbmax ) )
  425.       cldson%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  425.       $_allo_P44(0) = 0x1000000000001L
  425.       $_allo_P44(1) = loc( cldson )
  425.       call __allocate( $_allo_P44, 0, 0, _fcd( 0, 0 ) )
  426.       $F_A129 = jbmax
  426.       $F_A130 = kmax
  426.       $F_A131 = ibmax
  426.       if ( and( and( -$F_A130, -$F_A129 ), -$F_A131 ) < 0 ) then
  426.          $I_L426_540 = 0
  426.          do
  426.             $I_L426_350 = 0
  426.             do
  426.                $I_L426_94 = 0
  426. !dir$ ivdep
  426.                do
  426.                   (cldson%base_addr)(1 + $I_L426_94, 1 + $I_L426_350, 1 + $I_L426_540, 0) = 0.0
  426.                   $I_L426_94 = 1 + $I_L426_94
  426.                   if ( $I_L426_94 >= $F_A131 ) exit
  426.                enddo
  426.                $I_L426_350 = 1 + $I_L426_350
  426.                if ( $I_L426_350 >= $F_A130 ) exit
  426.             enddo
  426.             $I_L426_540 = 1 + $I_L426_540
  426.             if ( $I_L426_540 >= $F_A129 ) exit
  426.          enddo
  426.       endif
  427.       clwd%header%a_contig = 1
  427.       clwd%dim_1%LB = 1
  427.       clwd%dim_1%EX = ( max( 0, ibmax ) )
  427.       clwd%dim_1%SM = 1
  427.       clwd%dim_2%LB = 1
  427.       clwd%dim_2%EX = ( max( 0, kmax ) )
  427.       clwd%dim_2%SM = ( max( 0, ibmax ) )
  427.       clwd%dim_3%LB = 1
  427.       clwd%dim_3%EX = ( max( 0, jbmax ) )
  427.       clwd%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  427.       $_allo_P45(0) = 0x1000000000001L
  427.       $_allo_P45(1) = loc( clwd )
  427.       call __allocate( $_allo_P45, 0, 0, _fcd( 0, 0 ) )
  428.       $F_A132 = jbmax
  428.       $F_A133 = kmax
  428.       $F_A134 = ibmax
  428.       if ( and( and( -$F_A133, -$F_A132 ), -$F_A134 ) < 0 ) then
  428.          $I_L428_542 = 0
  428.          do
  428.             $I_L428_352 = 0
  428.             do
  428.                $I_L428_96 = 0
  428. !dir$ ivdep
  428.                do
  428.                   (clwd%base_addr)(1 + $I_L428_96, 1 + $I_L428_352, 1 + $I_L428_542, 0) = 0.0
  428.                   $I_L428_96 = 1 + $I_L428_96
  428.                   if ( $I_L428_96 >= $F_A134 ) exit
  428.                enddo
  428.                $I_L428_352 = 1 + $I_L428_352
  428.                if ( $I_L428_352 >= $F_A133 ) exit
  428.             enddo
  428.             $I_L428_542 = 1 + $I_L428_542
  428.             if ( $I_L428_542 >= $F_A132 ) exit
  428.          enddo
  428.       endif
  429.       emisd%header%a_contig = 1
  429.       emisd%dim_1%LB = 1
  429.       emisd%dim_1%EX = ( max( 0, ibmax ) )
  429.       emisd%dim_1%SM = 1
  429.       emisd%dim_2%LB = 1
  429.       emisd%dim_2%EX = ( max( 0, kmax ) )
  429.       emisd%dim_2%SM = ( max( 0, ibmax ) )
  429.       emisd%dim_3%LB = 1
  429.       emisd%dim_3%EX = ( max( 0, jbmax ) )
  429.       emisd%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  429.       $_allo_P46(0) = 0x1000000000001L
  429.       $_allo_P46(1) = loc( emisd )
  429.       call __allocate( $_allo_P46, 0, 0, _fcd( 0, 0 ) )
  430.       $F_A135 = jbmax
  430.       $F_A136 = kmax
  430.       $F_A137 = ibmax
  430.       if ( and( and( -$F_A136, -$F_A135 ), -$F_A137 ) < 0 ) then
  430.          $I_L430_544 = 0
  430.          do
  430.             $I_L430_354 = 0
  430.             do
  430.                $I_L430_98 = 0
  430. !dir$ ivdep
  430.                do
  430.                   (emisd%base_addr)(1 + $I_L430_98, 1 + $I_L430_354, 1 + $I_L430_544, 0) = 0.0
  430.                   $I_L430_98 = 1 + $I_L430_98
  430.                   if ( $I_L430_98 >= $F_A137 ) exit
  430.                enddo
  430.                $I_L430_354 = 1 + $I_L430_354
  430.                if ( $I_L430_354 >= $F_A136 ) exit
  430.             enddo
  430.             $I_L430_544 = 1 + $I_L430_544
  430.             if ( $I_L430_544 >= $F_A135 ) exit
  430.          enddo
  430.       endif
  431.       taud%header%a_contig = 1
  431.       taud%dim_1%LB = 1
  431.       taud%dim_1%EX = ( max( 0, ibmax ) )
  431.       taud%dim_1%SM = 1
  431.       taud%dim_2%LB = 1
  431.       taud%dim_2%EX = ( max( 0, kmax ) )
  431.       taud%dim_2%SM = ( max( 0, ibmax ) )
  431.       taud%dim_3%LB = 1
  431.       taud%dim_3%EX = ( max( 0, jbmax ) )
  431.       taud%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  431.       $_allo_P47(0) = 0x1000000000001L
  431.       $_allo_P47(1) = loc( taud )
  431.       call __allocate( $_allo_P47, 0, 0, _fcd( 0, 0 ) )
  432.       $F_A138 = jbmax
  432.       $F_A139 = kmax
  432.       $F_A140 = ibmax
  432.       if ( and( and( -$F_A139, -$F_A138 ), -$F_A140 ) < 0 ) then
  432.          $I_L432_546 = 0
  432.          do
  432.             $I_L432_356 = 0
  432.             do
  432.                $I_L432_100 = 0
  432. !dir$ ivdep
  432.                do
  432.                   (taud%base_addr)(1 + $I_L432_100, 1 + $I_L432_356, 1 + $I_L432_546, 0) = 0.0
  432.                   $I_L432_100 = 1 + $I_L432_100
  432.                   if ( $I_L432_100 >= $F_A140 ) exit
  432.                enddo
  432.                $I_L432_356 = 1 + $I_L432_356
  432.                if ( $I_L432_356 >= $F_A139 ) exit
  432.             enddo
  432.             $I_L432_546 = 1 + $I_L432_546
  432.             if ( $I_L432_546 >= $F_A138 ) exit
  432.          enddo
  432.       endif
  435.       ppli%header%a_contig = 1
  435.       ppli%dim_1%LB = 1
  435.       ppli%dim_1%EX = ( max( 0, ibmax ) )
  435.       ppli%dim_1%SM = 1
  435.       ppli%dim_2%LB = 1
  435.       ppli%dim_2%EX = ( max( 0, jbmax ) )
  435.       ppli%dim_2%SM = ( max( 0, ibmax ) )
  435.       $_allo_P48(0) = 0x1000000000001L
  435.       $_allo_P48(1) = loc( ppli )
  435.       call __allocate( $_allo_P48, 0, 0, _fcd( 0, 0 ) )
  436.       $F_A141 = jbmax
  436.       $F_A142 = ibmax
  436.       if ( and( -$F_A142, -$F_A141 ) < 0 ) then
  436.          $I_L436_358 = 0
  436.          do
  436.             $I_L436_102 = 0
  436. !dir$ ivdep
  436.             do
  436.                (ppli%base_addr)(1 + $I_L436_102, 1 + $I_L436_358, 0) = 0.0
  436.                $I_L436_102 = 1 + $I_L436_102
  436.                if ( $I_L436_102 >= $F_A142 ) exit
  436.             enddo
  436.             $I_L436_358 = 1 + $I_L436_358
  436.             if ( $I_L436_358 >= $F_A141 ) exit
  436.          enddo
  436.       endif
  437.       ppci%header%a_contig = 1
  437.       ppci%dim_1%LB = 1
  437.       ppci%dim_1%EX = ( max( 0, ibmax ) )
  437.       ppci%dim_1%SM = 1
  437.       ppci%dim_2%LB = 1
  437.       ppci%dim_2%EX = ( max( 0, jbmax ) )
  437.       ppci%dim_2%SM = ( max( 0, ibmax ) )
  437.       $_allo_P49(0) = 0x1000000000001L
  437.       $_allo_P49(1) = loc( ppci )
  437.       call __allocate( $_allo_P49, 0, 0, _fcd( 0, 0 ) )
  438.       $F_A143 = jbmax
  438.       $F_A144 = ibmax
  438.       if ( and( -$F_A144, -$F_A143 ) < 0 ) then
  438.          $I_L438_360 = 0
  438.          do
  438.             $I_L438_104 = 0
  438. !dir$ ivdep
  438.             do
  438.                (ppci%base_addr)(1 + $I_L438_104, 1 + $I_L438_360, 0) = 0.0
  438.                $I_L438_104 = 1 + $I_L438_104
  438.                if ( $I_L438_104 >= $F_A144 ) exit
  438.             enddo
  438.             $I_L438_360 = 1 + $I_L438_360
  438.             if ( $I_L438_360 >= $F_A143 ) exit
  438.          enddo
  438.       endif
  439.       prct%header%a_contig = 1
  439.       prct%dim_1%LB = 1
  439.       prct%dim_1%EX = ( max( 0, ibmax ) )
  439.       prct%dim_1%SM = 1
  439.       prct%dim_2%LB = 1
  439.       prct%dim_2%EX = ( max( 0, jbmax ) )
  439.       prct%dim_2%SM = ( max( 0, ibmax ) )
  439.       $_allo_P50(0) = 0x1000000000001L
  439.       $_allo_P50(1) = loc( prct )
  439.       call __allocate( $_allo_P50, 0, 0, _fcd( 0, 0 ) )
  440.       $F_A145 = jbmax
  440.       $F_A146 = ibmax
  440.       if ( and( -$F_A146, -$F_A145 ) < 0 ) then
  440.          $I_L440_362 = 0
  440.          do
  440.             $I_L440_106 = 0
  440. !dir$ ivdep
  440.             do
  440.                (prct%base_addr)(1 + $I_L440_106, 1 + $I_L440_362, 0) = 0.0
  440.                $I_L440_106 = 1 + $I_L440_106
  440.                if ( $I_L440_106 >= $F_A146 ) exit
  440.             enddo
  440.             $I_L440_362 = 1 + $I_L440_362
  440.             if ( $I_L440_362 >= $F_A145 ) exit
  440.          enddo
  440.       endif
  441.       prcc%header%a_contig = 1
  441.       prcc%dim_1%LB = 1
  441.       prcc%dim_1%EX = ( max( 0, ibmax ) )
  441.       prcc%dim_1%SM = 1
  441.       prcc%dim_2%LB = 1
  441.       prcc%dim_2%EX = ( max( 0, jbmax ) )
  441.       prcc%dim_2%SM = ( max( 0, ibmax ) )
  441.       $_allo_P51(0) = 0x1000000000001L
  441.       $_allo_P51(1) = loc( prcc )
  441.       call __allocate( $_allo_P51, 0, 0, _fcd( 0, 0 ) )
  442.       $F_A147 = jbmax
  442.       $F_A148 = ibmax
  442.       if ( and( -$F_A148, -$F_A147 ) < 0 ) then
  442.          $I_L442_364 = 0
  442.          do
  442.             $I_L442_108 = 0
  442. !dir$ ivdep
  442.             do
  442.                (prcc%base_addr)(1 + $I_L442_108, 1 + $I_L442_364, 0) = 0.0
  442.                $I_L442_108 = 1 + $I_L442_108
  442.                if ( $I_L442_108 >= $F_A148 ) exit
  442.             enddo
  442.             $I_L442_364 = 1 + $I_L442_364
  442.             if ( $I_L442_364 >= $F_A147 ) exit
  442.          enddo
  442.       endif
  443.       prcp1%header%a_contig = 1
  443.       prcp1%dim_1%LB = 1
  443.       prcp1%dim_1%EX = ( max( 0, ibmax ) )
  443.       prcp1%dim_1%SM = 1
  443.       prcp1%dim_2%LB = 1
  443.       prcp1%dim_2%EX = ( max( 0, jbmax ) )
  443.       prcp1%dim_2%SM = ( max( 0, ibmax ) )
  443.       $_allo_P52(0) = 0x1000000000001L
  443.       $_allo_P52(1) = loc( prcp1 )
  443.       call __allocate( $_allo_P52, 0, 0, _fcd( 0, 0 ) )
  444.       $F_A149 = jbmax
  444.       $F_A150 = ibmax
  444.       if ( and( -$F_A150, -$F_A149 ) < 0 ) then
  444.          $I_L444_366 = 0
  444.          do
  444.             $I_L444_110 = 0
  444. !dir$ ivdep
  444.             do
  444.                (prcp1%base_addr)(1 + $I_L444_110, 1 + $I_L444_366, 0) = 0.0
  444.                $I_L444_110 = 1 + $I_L444_110
  444.                if ( $I_L444_110 >= $F_A150 ) exit
  444.             enddo
  444.             $I_L444_366 = 1 + $I_L444_366
  444.             if ( $I_L444_366 >= $F_A149 ) exit
  444.          enddo
  444.       endif
  445.       prcp2%header%a_contig = 1
  445.       prcp2%dim_1%LB = 1
  445.       prcp2%dim_1%EX = ( max( 0, ibmax ) )
  445.       prcp2%dim_1%SM = 1
  445.       prcp2%dim_2%LB = 1
  445.       prcp2%dim_2%EX = ( max( 0, jbmax ) )
  445.       prcp2%dim_2%SM = ( max( 0, ibmax ) )
  445.       $_allo_P53(0) = 0x1000000000001L
  445.       $_allo_P53(1) = loc( prcp2 )
  445.       call __allocate( $_allo_P53, 0, 0, _fcd( 0, 0 ) )
  446.       $F_A151 = jbmax
  446.       $F_A152 = ibmax
  446.       if ( and( -$F_A152, -$F_A151 ) < 0 ) then
  446.          $I_L446_368 = 0
  446.          do
  446.             $I_L446_112 = 0
  446. !dir$ ivdep
  446.             do
  446.                (prcp2%base_addr)(1 + $I_L446_112, 1 + $I_L446_368, 0) = 0.0
  446.                $I_L446_112 = 1 + $I_L446_112
  446.                if ( $I_L446_112 >= $F_A152 ) exit
  446.             enddo
  446.             $I_L446_368 = 1 + $I_L446_368
  446.             if ( $I_L446_368 >= $F_A151 ) exit
  446.          enddo
  446.       endif
  447.       prcp3%header%a_contig = 1
  447.       prcp3%dim_1%LB = 1
  447.       prcp3%dim_1%EX = ( max( 0, ibmax ) )
  447.       prcp3%dim_1%SM = 1
  447.       prcp3%dim_2%LB = 1
  447.       prcp3%dim_2%EX = ( max( 0, jbmax ) )
  447.       prcp3%dim_2%SM = ( max( 0, ibmax ) )
  447.       $_allo_P54(0) = 0x1000000000001L
  447.       $_allo_P54(1) = loc( prcp3 )
  447.       call __allocate( $_allo_P54, 0, 0, _fcd( 0, 0 ) )
  448.       $F_A153 = jbmax
  448.       $F_A154 = ibmax
  448.       if ( and( -$F_A154, -$F_A153 ) < 0 ) then
  448.          $I_L448_370 = 0
  448.          do
  448.             $I_L448_114 = 0
  448. !dir$ ivdep
  448.             do
  448.                (prcp3%base_addr)(1 + $I_L448_114, 1 + $I_L448_370, 0) = 0.0
  448.                $I_L448_114 = 1 + $I_L448_114
  448.                if ( $I_L448_114 >= $F_A154 ) exit
  448.             enddo
  448.             $I_L448_370 = 1 + $I_L448_370
  448.             if ( $I_L448_370 >= $F_A153 ) exit
  448.          enddo
  448.       endif
  449.       prcpt%header%a_contig = 1
  449.       prcpt%dim_1%LB = 1
  449.       prcpt%dim_1%EX = ( max( 0, ibmax ) )
  449.       prcpt%dim_1%SM = 1
  449.       prcpt%dim_2%LB = 1
  449.       prcpt%dim_2%EX = ( max( 0, jbmax ) )
  449.       prcpt%dim_2%SM = ( max( 0, ibmax ) )
  449.       $_allo_P55(0) = 0x1000000000001L
  449.       $_allo_P55(1) = loc( prcpt )
  449.       call __allocate( $_allo_P55, 0, 0, _fcd( 0, 0 ) )
  450.       $F_A155 = jbmax
  450.       $F_A156 = ibmax
  450.       if ( and( -$F_A156, -$F_A155 ) < 0 ) then
  450.          $I_L450_372 = 0
  450.          do
  450.             $I_L450_116 = 0
  450. !dir$ ivdep
  450.             do
  450.                (prcpt%base_addr)(1 + $I_L450_116, 1 + $I_L450_372, 0) = 0.0
  450.                $I_L450_116 = 1 + $I_L450_116
  450.                if ( $I_L450_116 >= $F_A156 ) exit
  450.             enddo
  450.             $I_L450_372 = 1 + $I_L450_372
  450.             if ( $I_L450_372 >= $F_A155 ) exit
  450.          enddo
  450.       endif
  451.       toplv%header%a_contig = 1
  451.       toplv%dim_1%LB = 1
  451.       toplv%dim_1%EX = ( max( 0, ibmax ) )
  451.       toplv%dim_1%SM = 1
  451.       toplv%dim_2%LB = 1
  451.       toplv%dim_2%EX = ( max( 0, jbmax ) )
  451.       toplv%dim_2%SM = ( max( 0, ibmax ) )
  451.       $_allo_P56(0) = 0x1000000000001L
  451.       $_allo_P56(1) = loc( toplv )
  451.       call __allocate( $_allo_P56, 0, 0, _fcd( 0, 0 ) )
  452.       $F_A157 = jbmax
  452.       $F_A158 = ibmax
  452.       if ( and( -$F_A158, -$F_A157 ) < 0 ) then
  452.          $I_L452_374 = 0
  452.          do
  452.             $I_L452_118 = 0
  452. !dir$ ivdep
  452.             do
  452.                (toplv%base_addr)(1 + $I_L452_118, 1 + $I_L452_374, 0) = 0.0
  452.                $I_L452_118 = 1 + $I_L452_118
  452.                if ( $I_L452_118 >= $F_A158 ) exit
  452.             enddo
  452.             $I_L452_374 = 1 + $I_L452_374
  452.             if ( $I_L452_374 >= $F_A157 ) exit
  452.          enddo
  452.       endif
  453.       botlv%header%a_contig = 1
  453.       botlv%dim_1%LB = 1
  453.       botlv%dim_1%EX = ( max( 0, ibmax ) )
  453.       botlv%dim_1%SM = 1
  453.       botlv%dim_2%LB = 1
  453.       botlv%dim_2%EX = ( max( 0, jbmax ) )
  453.       botlv%dim_2%SM = ( max( 0, ibmax ) )
  453.       $_allo_P57(0) = 0x1000000000001L
  453.       $_allo_P57(1) = loc( botlv )
  453.       call __allocate( $_allo_P57, 0, 0, _fcd( 0, 0 ) )
  454.       $F_A159 = jbmax
  454.       $F_A160 = ibmax
  454.       if ( and( -$F_A160, -$F_A159 ) < 0 ) then
  454.          $I_L454_376 = 0
  454.          do
  454.             $I_L454_120 = 0
  454. !dir$ ivdep
  454.             do
  454.                (botlv%base_addr)(1 + $I_L454_120, 1 + $I_L454_376, 0) = 0.0
  454.                $I_L454_120 = 1 + $I_L454_120
  454.                if ( $I_L454_120 >= $F_A160 ) exit
  454.             enddo
  454.             $I_L454_376 = 1 + $I_L454_376
  454.             if ( $I_L454_376 >= $F_A159 ) exit
  454.          enddo
  454.       endif
  455.       geshem%header%a_contig = 1
  455.       geshem%dim_1%LB = 1
  455.       geshem%dim_1%EX = ( max( 0, ibmax ) )
  455.       geshem%dim_1%SM = 1
  455.       geshem%dim_2%LB = 1
  455.       geshem%dim_2%EX = ( max( 0, jbmax ) )
  455.       geshem%dim_2%SM = ( max( 0, ibmax ) )
  455.       $_allo_P58(0) = 0x1000000000001L
  455.       $_allo_P58(1) = loc( geshem )
  455.       call __allocate( $_allo_P58, 0, 0, _fcd( 0, 0 ) )
  456.       $F_A161 = jbmax
  456.       $F_A162 = ibmax
  456.       if ( and( -$F_A162, -$F_A161 ) < 0 ) then
  456.          $I_L456_378 = 0
  456.          do
  456.             $I_L456_122 = 0
  456. !dir$ ivdep
  456.             do
  456.                (geshem%base_addr)(1 + $I_L456_122, 1 + $I_L456_378, 0) = 0.0
  456.                $I_L456_122 = 1 + $I_L456_122
  456.                if ( $I_L456_122 >= $F_A162 ) exit
  456.             enddo
  456.             $I_L456_378 = 1 + $I_L456_378
  456.             if ( $I_L456_378 >= $F_A161 ) exit
  456.          enddo
  456.       endif
  457.       convc%header%a_contig = 1
  457.       convc%dim_1%LB = 1
  457.       convc%dim_1%EX = ( max( 0, ibmax ) )
  457.       convc%dim_1%SM = 1
  457.       convc%dim_2%LB = 1
  457.       convc%dim_2%EX = ( max( 0, jbmax ) )
  457.       convc%dim_2%SM = ( max( 0, ibmax ) )
  457.       $_allo_P59(0) = 0x1000000000001L
  457.       $_allo_P59(1) = loc( convc )
  457.       call __allocate( $_allo_P59, 0, 0, _fcd( 0, 0 ) )
  458.       $F_A163 = jbmax
  458.       $F_A164 = ibmax
  458.       if ( and( -$F_A164, -$F_A163 ) < 0 ) then
  458.          $I_L458_380 = 0
  458.          do
  458.             $I_L458_124 = 0
  458. !dir$ ivdep
  458.             do
  458.                (convc%base_addr)(1 + $I_L458_124, 1 + $I_L458_380, 0) = 0.0
  458.                $I_L458_124 = 1 + $I_L458_124
  458.                if ( $I_L458_124 >= $F_A164 ) exit
  458.             enddo
  458.             $I_L458_380 = 1 + $I_L458_380
  458.             if ( $I_L458_380 >= $F_A163 ) exit
  458.          enddo
  458.       endif
  459.       convt%header%a_contig = 1
  459.       convt%dim_1%LB = 1
  459.       convt%dim_1%EX = ( max( 0, ibmax ) )
  459.       convt%dim_1%SM = 1
  459.       convt%dim_2%LB = 1
  459.       convt%dim_2%EX = ( max( 0, jbmax ) )
  459.       convt%dim_2%SM = ( max( 0, ibmax ) )
  459.       $_allo_P60(0) = 0x1000000000001L
  459.       $_allo_P60(1) = loc( convt )
  459.       call __allocate( $_allo_P60, 0, 0, _fcd( 0, 0 ) )
  460.       $F_A165 = jbmax
  460.       $F_A166 = ibmax
  460.       if ( and( -$F_A166, -$F_A165 ) < 0 ) then
  460.          $I_L460_382 = 0
  460.          do
  460.             $I_L460_126 = 0
  460. !dir$ ivdep
  460.             do
  460.                (convt%base_addr)(1 + $I_L460_126, 1 + $I_L460_382, 0) = 0.0
  460.                $I_L460_126 = 1 + $I_L460_126
  460.                if ( $I_L460_126 >= $F_A166 ) exit
  460.             enddo
  460.             $I_L460_382 = 1 + $I_L460_382
  460.             if ( $I_L460_382 >= $F_A165 ) exit
  460.          enddo
  460.       endif
  461.       convb%header%a_contig = 1
  461.       convb%dim_1%LB = 1
  461.       convb%dim_1%EX = ( max( 0, ibmax ) )
  461.       convb%dim_1%SM = 1
  461.       convb%dim_2%LB = 1
  461.       convb%dim_2%EX = ( max( 0, jbmax ) )
  461.       convb%dim_2%SM = ( max( 0, ibmax ) )
  461.       $_allo_P61(0) = 0x1000000000001L
  461.       $_allo_P61(1) = loc( convb )
  461.       call __allocate( $_allo_P61, 0, 0, _fcd( 0, 0 ) )
  462.       $F_A167 = jbmax
  462.       $F_A168 = ibmax
  462.       if ( and( -$F_A168, -$F_A167 ) < 0 ) then
  462.          $I_L462_384 = 0
  462.          do
  462.             $I_L462_128 = 0
  462. !dir$ ivdep
  462.             do
  462.                (convb%base_addr)(1 + $I_L462_128, 1 + $I_L462_384, 0) = 0.0
  462.                $I_L462_128 = 1 + $I_L462_128
  462.                if ( $I_L462_128 >= $F_A168 ) exit
  462.             enddo
  462.             $I_L462_384 = 1 + $I_L462_384
  462.             if ( $I_L462_384 >= $F_A167 ) exit
  462.          enddo
  462.       endif
  463.       convts%header%a_contig = 1
  463.       convts%dim_1%LB = 1
  463.       convts%dim_1%EX = ( max( 0, ibmax ) )
  463.       convts%dim_1%SM = 1
  463.       convts%dim_2%LB = 1
  463.       convts%dim_2%EX = ( max( 0, jbmax ) )
  463.       convts%dim_2%SM = ( max( 0, ibmax ) )
  463.       $_allo_P62(0) = 0x1000000000001L
  463.       $_allo_P62(1) = loc( convts )
  463.       call __allocate( $_allo_P62, 0, 0, _fcd( 0, 0 ) )
  464.       $F_A169 = jbmax
  464.       $F_A170 = ibmax
  464.       if ( and( -$F_A170, -$F_A169 ) < 0 ) then
  464.          $I_L464_386 = 0
  464.          do
  464.             $I_L464_130 = 0
  464. !dir$ ivdep
  464.             do
  464.                (convts%base_addr)(1 + $I_L464_130, 1 + $I_L464_386, 0) = 0.0
  464.                $I_L464_130 = 1 + $I_L464_130
  464.                if ( $I_L464_130 >= $F_A170 ) exit
  464.             enddo
  464.             $I_L464_386 = 1 + $I_L464_386
  464.             if ( $I_L464_386 >= $F_A169 ) exit
  464.          enddo
  464.       endif
  465.       convcs%header%a_contig = 1
  465.       convcs%dim_1%LB = 1
  465.       convcs%dim_1%EX = ( max( 0, ibmax ) )
  465.       convcs%dim_1%SM = 1
  465.       convcs%dim_2%LB = 1
  465.       convcs%dim_2%EX = ( max( 0, jbmax ) )
  465.       convcs%dim_2%SM = ( max( 0, ibmax ) )
  465.       $_allo_P63(0) = 0x1000000000001L
  465.       $_allo_P63(1) = loc( convcs )
  465.       call __allocate( $_allo_P63, 0, 0, _fcd( 0, 0 ) )
  466.       $F_A171 = jbmax
  466.       $F_A172 = ibmax
  466.       if ( and( -$F_A172, -$F_A171 ) < 0 ) then
  466.          $I_L466_388 = 0
  466.          do
  466.             $I_L466_132 = 0
  466. !dir$ ivdep
  466.             do
  466.                (convcs%base_addr)(1 + $I_L466_132, 1 + $I_L466_388, 0) = 0.0
  466.                $I_L466_132 = 1 + $I_L466_132
  466.                if ( $I_L466_132 >= $F_A172 ) exit
  466.             enddo
  466.             $I_L466_388 = 1 + $I_L466_388
  466.             if ( $I_L466_388 >= $F_A171 ) exit
  466.          enddo
  466.       endif
  467.       convbs%header%a_contig = 1
  467.       convbs%dim_1%LB = 1
  467.       convbs%dim_1%EX = ( max( 0, ibmax ) )
  467.       convbs%dim_1%SM = 1
  467.       convbs%dim_2%LB = 1
  467.       convbs%dim_2%EX = ( max( 0, jbmax ) )
  467.       convbs%dim_2%SM = ( max( 0, ibmax ) )
  467.       $_allo_P64(0) = 0x1000000000001L
  467.       $_allo_P64(1) = loc( convbs )
  467.       call __allocate( $_allo_P64, 0, 0, _fcd( 0, 0 ) )
  468.       $F_A173 = jbmax
  468.       $F_A174 = ibmax
  468.       if ( and( -$F_A174, -$F_A173 ) < 0 ) then
  468.          $I_L468_390 = 0
  468.          do
  468.             $I_L468_134 = 0
  468. !dir$ ivdep
  468.             do
  468.                (convbs%base_addr)(1 + $I_L468_134, 1 + $I_L468_390, 0) = 0.0
  468.                $I_L468_134 = 1 + $I_L468_134
  468.                if ( $I_L468_134 >= $F_A174 ) exit
  468.             enddo
  468.             $I_L468_390 = 1 + $I_L468_390
  468.             if ( $I_L468_390 >= $F_A173 ) exit
  468.          enddo
  468.       endif
  471.       ustr%header%a_contig = 1
  471.       ustr%dim_1%LB = 1
  471.       ustr%dim_1%EX = ( max( 0, ibmax ) )
  471.       ustr%dim_1%SM = 1
  471.       ustr%dim_2%LB = 1
  471.       ustr%dim_2%EX = ( max( 0, jbmax ) )
  471.       ustr%dim_2%SM = ( max( 0, ibmax ) )
  471.       $_allo_P65(0) = 0x1000000000001L
  471.       $_allo_P65(1) = loc( ustr )
  471.       call __allocate( $_allo_P65, 0, 0, _fcd( 0, 0 ) )
  472.       $F_A175 = jbmax
  472.       $F_A176 = ibmax
  472.       if ( and( -$F_A176, -$F_A175 ) < 0 ) then
  472.          $I_L472_392 = 0
  472.          do
  472.             $I_L472_136 = 0
  472. !dir$ ivdep
  472.             do
  472.                (ustr%base_addr)(1 + $I_L472_136, 1 + $I_L472_392, 0) = 0.0
  472.                $I_L472_136 = 1 + $I_L472_136
  472.                if ( $I_L472_136 >= $F_A176 ) exit
  472.             enddo
  472.             $I_L472_392 = 1 + $I_L472_392
  472.             if ( $I_L472_392 >= $F_A175 ) exit
  472.          enddo
  472.       endif
  473.       vstr%header%a_contig = 1
  473.       vstr%dim_1%LB = 1
  473.       vstr%dim_1%EX = ( max( 0, ibmax ) )
  473.       vstr%dim_1%SM = 1
  473.       vstr%dim_2%LB = 1
  473.       vstr%dim_2%EX = ( max( 0, jbmax ) )
  473.       vstr%dim_2%SM = ( max( 0, ibmax ) )
  473.       $_allo_P66(0) = 0x1000000000001L
  473.       $_allo_P66(1) = loc( vstr )
  473.       call __allocate( $_allo_P66, 0, 0, _fcd( 0, 0 ) )
  474.       $F_A177 = jbmax
  474.       $F_A178 = ibmax
  474.       if ( and( -$F_A178, -$F_A177 ) < 0 ) then
  474.          $I_L474_394 = 0
  474.          do
  474.             $I_L474_138 = 0
  474. !dir$ ivdep
  474.             do
  474.                (vstr%base_addr)(1 + $I_L474_138, 1 + $I_L474_394, 0) = 0.0
  474.                $I_L474_138 = 1 + $I_L474_138
  474.                if ( $I_L474_138 >= $F_A178 ) exit
  474.             enddo
  474.             $I_L474_394 = 1 + $I_L474_394
  474.             if ( $I_L474_394 >= $F_A177 ) exit
  474.          enddo
  474.       endif
  477.       imask%header%a_contig = 1
  477.       imask%dim_1%LB = 1
  477.       imask%dim_1%EX = ( max( 0, ibmax ) )
  477.       imask%dim_1%SM = 1
  477.       imask%dim_2%LB = 1
  477.       imask%dim_2%EX = ( max( 0, jbmax ) )
  477.       imask%dim_2%SM = ( max( 0, ibmax ) )
  477.       $_allo_P67(0) = 0x1000000000001L
  477.       $_allo_P67(1) = loc( imask )
  477.       call __allocate( $_allo_P67, 0, 0, _fcd( 0, 0 ) )
  478.       $F_A179 = jbmax
  478.       $F_A180 = ibmax
  478.       if ( and( -$F_A180, -$F_A179 ) < 0 ) then
  478.          $I_L478_396 = 0
  478.          do
  478.             $I_L478_140 = 0
  478. !dir$ ivdep
  478.             do
  478.                (imask%base_addr)(1 + $I_L478_140, 1 + $I_L478_396, 0) = 0
  478.                $I_L478_140 = 1 + $I_L478_140
  478.                if ( $I_L478_140 >= $F_A180 ) exit
  478.             enddo
  478.             $I_L478_396 = 1 + $I_L478_396
  478.             if ( $I_L478_396 >= $F_A179 ) exit
  478.          enddo
  478.       endif
  479.       ssib%header%a_contig = 1
  479.       ssib%dim_1%LB = 1
  479.       ssib%dim_1%EX = ( max( 0, ibmax ) )
  479.       ssib%dim_1%SM = 1
  479.       ssib%dim_2%LB = 1
  479.       ssib%dim_2%EX = ( max( 0, jbmax ) )
  479.       ssib%dim_2%SM = ( max( 0, ibmax ) )
  479.       $_allo_P68(0) = 0x1000000000001L
  479.       $_allo_P68(1) = loc( ssib )
  479.       call __allocate( $_allo_P68, 0, 0, _fcd( 0, 0 ) )
  480.       $F_A181 = jbmax
  480.       $F_A182 = ibmax
  480.       if ( and( -$F_A182, -$F_A181 ) < 0 ) then
  480.          $I_L480_398 = 0
  480.          do
  480.             $I_L480_142 = 0
  480. !dir$ ivdep
  480.             do
  480.                (ssib%base_addr)(1 + $I_L480_142, 1 + $I_L480_398, 0) = 0.0
  480.                $I_L480_142 = 1 + $I_L480_142
  480.                if ( $I_L480_142 >= $F_A182 ) exit
  480.             enddo
  480.             $I_L480_398 = 1 + $I_L480_398
  480.             if ( $I_L480_398 >= $F_A181 ) exit
  480.          enddo
  480.       endif
  483.       gl0%header%a_contig = 1
  483.       gl0%dim_1%LB = 1
  483.       gl0%dim_1%EX = ( max( 0, ibmax ) )
  483.       gl0%dim_1%SM = 1
  483.       gl0%dim_2%LB = 1
  483.       gl0%dim_2%EX = ( max( 0, jbmax ) )
  483.       gl0%dim_2%SM = ( max( 0, ibmax ) )
  483.       $_allo_P69(0) = 0x1000000000001L
  483.       $_allo_P69(1) = loc( gl0 )
  483.       call __allocate( $_allo_P69, 0, 0, _fcd( 0, 0 ) )
  484.       $F_A183 = jbmax
  484.       $F_A184 = ibmax
  484.       if ( and( -$F_A184, -$F_A183 ) < 0 ) then
  484.          $I_L484_400 = 0
  484.          do
  484.             $I_L484_144 = 0
  484. !dir$ ivdep
  484.             do
  484.                (gl0%base_addr)(1 + $I_L484_144, 1 + $I_L484_400, 0) = 0.0
  484.                $I_L484_144 = 1 + $I_L484_144
  484.                if ( $I_L484_144 >= $F_A184 ) exit
  484.             enddo
  484.             $I_L484_400 = 1 + $I_L484_400
  484.             if ( $I_L484_400 >= $F_A183 ) exit
  484.          enddo
  484.       endif
  485.       mmlen%header%a_contig = 1
  485.       mmlen%dim_1%LB = 1
  485.       mmlen%dim_1%EX = ( max( 0, ibmax ) )
  485.       mmlen%dim_1%SM = 1
  485.       mmlen%dim_2%LB = 1
  485.       mmlen%dim_2%EX = ( max( 0, jbmax ) )
  485.       mmlen%dim_2%SM = ( max( 0, ibmax ) )
  485.       $_allo_P70(0) = 0x1000000000001L
  485.       $_allo_P70(1) = loc( mmlen )
  485.       call __allocate( $_allo_P70, 0, 0, _fcd( 0, 0 ) )
  486.       $F_A185 = jbmax
  486.       $F_A186 = ibmax
  486.       if ( and( -$F_A186, -$F_A185 ) < 0 ) then
  486.          $I_L486_402 = 0
  486.          do
  486.             $I_L486_146 = 0
  486. !dir$ ivdep
  486.             do
  486.                (mmlen%base_addr)(1 + $I_L486_146, 1 + $I_L486_402, 0) = 0.0
  486.                $I_L486_146 = 1 + $I_L486_146
  486.                if ( $I_L486_146 >= $F_A186 ) exit
  486.             enddo
  486.             $I_L486_402 = 1 + $I_L486_402
  486.             if ( $I_L486_402 >= $F_A185 ) exit
  486.          enddo
  486.       endif
  487.       zorl%header%a_contig = 1
  487.       zorl%dim_1%LB = 1
  487.       zorl%dim_1%EX = ( max( 0, ibmax ) )
  487.       zorl%dim_1%SM = 1
  487.       zorl%dim_2%LB = 1
  487.       zorl%dim_2%EX = ( max( 0, jbmax ) )
  487.       zorl%dim_2%SM = ( max( 0, ibmax ) )
  487.       $_allo_P71(0) = 0x1000000000001L
  487.       $_allo_P71(1) = loc( zorl )
  487.       call __allocate( $_allo_P71, 0, 0, _fcd( 0, 0 ) )
  488.       $F_A187 = jbmax
  488.       $F_A188 = ibmax
  488.       if ( and( -$F_A188, -$F_A187 ) < 0 ) then
  488.          $I_L488_404 = 0
  488.          do
  488.             $I_L488_148 = 0
  488. !dir$ ivdep
  488.             do
  488.                (zorl%base_addr)(1 + $I_L488_148, 1 + $I_L488_404, 0) = 0.0
  488.                $I_L488_148 = 1 + $I_L488_148
  488.                if ( $I_L488_148 >= $F_A188 ) exit
  488.             enddo
  488.             $I_L488_404 = 1 + $I_L488_404
  488.             if ( $I_L488_404 >= $F_A187 ) exit
  488.          enddo
  488.       endif
  489.       sheleg%header%a_contig = 1
  489.       sheleg%dim_1%LB = 1
  489.       sheleg%dim_1%EX = ( max( 0, ibmax ) )
  489.       sheleg%dim_1%SM = 1
  489.       sheleg%dim_2%LB = 1
  489.       sheleg%dim_2%EX = ( max( 0, jbmax ) )
  489.       sheleg%dim_2%SM = ( max( 0, ibmax ) )
  489.       $_allo_P72(0) = 0x1000000000001L
  489.       $_allo_P72(1) = loc( sheleg )
  489.       call __allocate( $_allo_P72, 0, 0, _fcd( 0, 0 ) )
  490.       $F_A189 = jbmax
  490.       $F_A190 = ibmax
  490.       if ( and( -$F_A190, -$F_A189 ) < 0 ) then
  490.          $I_L490_406 = 0
  490.          do
  490.             $I_L490_150 = 0
  490. !dir$ ivdep
  490.             do
  490.                (sheleg%base_addr)(1 + $I_L490_150, 1 + $I_L490_406, 0) = 0.0
  490.                $I_L490_150 = 1 + $I_L490_150
  490.                if ( $I_L490_150 >= $F_A190 ) exit
  490.             enddo
  490.             $I_L490_406 = 1 + $I_L490_406
  490.             if ( $I_L490_406 >= $F_A189 ) exit
  490.          enddo
  490.       endif
  491.       tseam%header%a_contig = 1
  491.       tseam%dim_1%LB = 1
  491.       tseam%dim_1%EX = ( max( 0, ibmax ) )
  491.       tseam%dim_1%SM = 1
  491.       tseam%dim_2%LB = 1
  491.       tseam%dim_2%EX = ( max( 0, jbmax ) )
  491.       tseam%dim_2%SM = ( max( 0, ibmax ) )
  491.       $_allo_P73(0) = 0x1000000000001L
  491.       $_allo_P73(1) = loc( tseam )
  491.       call __allocate( $_allo_P73, 0, 0, _fcd( 0, 0 ) )
  492.       $F_A191 = jbmax
  492.       $F_A192 = ibmax
  492.       if ( and( -$F_A192, -$F_A191 ) < 0 ) then
  492.          $I_L492_408 = 0
  492.          do
  492.             $I_L492_152 = 0
  492. !dir$ ivdep
  492.             do
  492.                (tseam%base_addr)(1 + $I_L492_152, 1 + $I_L492_408, 0) = 0.0
  492.                $I_L492_152 = 1 + $I_L492_152
  492.                if ( $I_L492_152 >= $F_A192 ) exit
  492.             enddo
  492.             $I_L492_408 = 1 + $I_L492_408
  492.             if ( $I_L492_408 >= $F_A191 ) exit
  492.          enddo
  492.       endif
  493.       gtsea%header%a_contig = 1
  493.       gtsea%dim_1%LB = 1
  493.       gtsea%dim_1%EX = ( max( 0, ibmax ) )
  493.       gtsea%dim_1%SM = 1
  493.       gtsea%dim_2%LB = 1
  493.       gtsea%dim_2%EX = ( max( 0, jbmax ) )
  493.       gtsea%dim_2%SM = ( max( 0, ibmax ) )
  493.       $_allo_P74(0) = 0x1000000000001L
  493.       $_allo_P74(1) = loc( gtsea )
  493.       call __allocate( $_allo_P74, 0, 0, _fcd( 0, 0 ) )
  494.       $F_A193 = jbmax
  494.       $F_A194 = ibmax
  494.       if ( and( -$F_A194, -$F_A193 ) < 0 ) then
  494.          $I_L494_410 = 0
  494.          do
  494.             $I_L494_154 = 0
  494. !dir$ ivdep
  494.             do
  494.                (gtsea%base_addr)(1 + $I_L494_154, 1 + $I_L494_410, 0) = 0.0
  494.                $I_L494_154 = 1 + $I_L494_154
  494.                if ( $I_L494_154 >= $F_A194 ) exit
  494.             enddo
  494.             $I_L494_410 = 1 + $I_L494_410
  494.             if ( $I_L494_410 >= $F_A193 ) exit
  494.          enddo
  494.       endif
  495.       tm0%header%a_contig = 1
  495.       tm0%dim_1%LB = 1
  495.       tm0%dim_1%EX = ( max( 0, ibmax ) )
  495.       tm0%dim_1%SM = 1
  495.       tm0%dim_2%LB = 1
  495.       tm0%dim_2%EX = ( max( 0, jbmax ) )
  495.       tm0%dim_2%SM = ( max( 0, ibmax ) )
  495.       $_allo_P75(0) = 0x1000000000001L
  495.       $_allo_P75(1) = loc( tm0 )
  495.       call __allocate( $_allo_P75, 0, 0, _fcd( 0, 0 ) )
  496.       $F_A195 = jbmax
  496.       $F_A196 = ibmax
  496.       if ( and( -$F_A196, -$F_A195 ) < 0 ) then
  496.          $I_L496_412 = 0
  496.          do
  496.             $I_L496_156 = 0
  496. !dir$ ivdep
  496.             do
  496.                (tm0%base_addr)(1 + $I_L496_156, 1 + $I_L496_412, 0) = 0.0
  496.                $I_L496_156 = 1 + $I_L496_156
  496.                if ( $I_L496_156 >= $F_A196 ) exit
  496.             enddo
  496.             $I_L496_412 = 1 + $I_L496_412
  496.             if ( $I_L496_412 >= $F_A195 ) exit
  496.          enddo
  496.       endif
  497.       qm0%header%a_contig = 1
  497.       qm0%dim_1%LB = 1
  497.       qm0%dim_1%EX = ( max( 0, ibmax ) )
  497.       qm0%dim_1%SM = 1
  497.       qm0%dim_2%LB = 1
  497.       qm0%dim_2%EX = ( max( 0, jbmax ) )
  497.       qm0%dim_2%SM = ( max( 0, ibmax ) )
  497.       $_allo_P76(0) = 0x1000000000001L
  497.       $_allo_P76(1) = loc( qm0 )
  497.       call __allocate( $_allo_P76, 0, 0, _fcd( 0, 0 ) )
  498.       $F_A197 = jbmax
  498.       $F_A198 = ibmax
  498.       if ( and( -$F_A198, -$F_A197 ) < 0 ) then
  498.          $I_L498_414 = 0
  498.          do
  498.             $I_L498_158 = 0
  498. !dir$ ivdep
  498.             do
  498.                (qm0%base_addr)(1 + $I_L498_158, 1 + $I_L498_414, 0) = 0.0
  498.                $I_L498_158 = 1 + $I_L498_158
  498.                if ( $I_L498_158 >= $F_A198 ) exit
  498.             enddo
  498.             $I_L498_414 = 1 + $I_L498_414
  498.             if ( $I_L498_414 >= $F_A197 ) exit
  498.          enddo
  498.       endif
  499.       tc0%header%a_contig = 1
  499.       tc0%dim_1%LB = 1
  499.       tc0%dim_1%EX = ( max( 0, ibmax ) )
  499.       tc0%dim_1%SM = 1
  499.       tc0%dim_2%LB = 1
  499.       tc0%dim_2%EX = ( max( 0, jbmax ) )
  499.       tc0%dim_2%SM = ( max( 0, ibmax ) )
  499.       $_allo_P77(0) = 0x1000000000001L
  499.       $_allo_P77(1) = loc( tc0 )
  499.       call __allocate( $_allo_P77, 0, 0, _fcd( 0, 0 ) )
  500.       $F_A199 = jbmax
  500.       $F_A200 = ibmax
  500.       if ( and( -$F_A200, -$F_A199 ) < 0 ) then
  500.          $I_L500_416 = 0
  500.          do
  500.             $I_L500_160 = 0
  500. !dir$ ivdep
  500.             do
  500.                (tc0%base_addr)(1 + $I_L500_160, 1 + $I_L500_416, 0) = 0.0
  500.                $I_L500_160 = 1 + $I_L500_160
  500.                if ( $I_L500_160 >= $F_A200 ) exit
  500.             enddo
  500.             $I_L500_416 = 1 + $I_L500_416
  500.             if ( $I_L500_416 >= $F_A199 ) exit
  500.          enddo
  500.       endif
  501.       tg0%header%a_contig = 1
  501.       tg0%dim_1%LB = 1
  501.       tg0%dim_1%EX = ( max( 0, ibmax ) )
  501.       tg0%dim_1%SM = 1
  501.       tg0%dim_2%LB = 1
  501.       tg0%dim_2%EX = ( max( 0, jbmax ) )
  501.       tg0%dim_2%SM = ( max( 0, ibmax ) )
  501.       $_allo_P78(0) = 0x1000000000001L
  501.       $_allo_P78(1) = loc( tg0 )
  501.       call __allocate( $_allo_P78, 0, 0, _fcd( 0, 0 ) )
  502.       $F_A201 = jbmax
  502.       $F_A202 = ibmax
  502.       if ( and( -$F_A202, -$F_A201 ) < 0 ) then
  502.          $I_L502_418 = 0
  502.          do
  502.             $I_L502_162 = 0
  502. !dir$ ivdep
  502.             do
  502.                (tg0%base_addr)(1 + $I_L502_162, 1 + $I_L502_418, 0) = 0.0
  502.                $I_L502_162 = 1 + $I_L502_162
  502.                if ( $I_L502_162 >= $F_A202 ) exit
  502.             enddo
  502.             $I_L502_418 = 1 + $I_L502_418
  502.             if ( $I_L502_418 >= $F_A201 ) exit
  502.          enddo
  502.       endif
  503.       td0%header%a_contig = 1
  503.       td0%dim_1%LB = 1
  503.       td0%dim_1%EX = ( max( 0, ibmax ) )
  503.       td0%dim_1%SM = 1
  503.       td0%dim_2%LB = 1
  503.       td0%dim_2%EX = ( max( 0, jbmax ) )
  503.       td0%dim_2%SM = ( max( 0, ibmax ) )
  503.       $_allo_P79(0) = 0x1000000000001L
  503.       $_allo_P79(1) = loc( td0 )
  503.       call __allocate( $_allo_P79, 0, 0, _fcd( 0, 0 ) )
  504.       $F_A203 = jbmax
  504.       $F_A204 = ibmax
  504.       if ( and( -$F_A204, -$F_A203 ) < 0 ) then
  504.          $I_L504_420 = 0
  504.          do
  504.             $I_L504_164 = 0
  504. !dir$ ivdep
  504.             do
  504.                (td0%base_addr)(1 + $I_L504_164, 1 + $I_L504_420, 0) = 0.0
  504.                $I_L504_164 = 1 + $I_L504_164
  504.                if ( $I_L504_164 >= $F_A204 ) exit
  504.             enddo
  504.             $I_L504_420 = 1 + $I_L504_420
  504.             if ( $I_L504_420 >= $F_A203 ) exit
  504.          enddo
  504.       endif
  505.       w0%header%a_contig = 1
  505.       w0%dim_1%LB = 1
  505.       w0%dim_1%EX = ( max( 0, ibmax ) )
  505.       w0%dim_1%SM = 1
  505.       w0%dim_2%LB = 1
  505.       w0%dim_2%EX = 3
  505.       w0%dim_2%SM = ( max( 0, ibmax ) )
  505.       w0%dim_3%LB = 1
  505.       w0%dim_3%EX = ( max( 0, jbmax ) )
  505.       w0%dim_3%SM = ( 3 * max( 0, ibmax ) )
  505.       $_allo_P80(0) = 0x1000000000001L
  505.       $_allo_P80(1) = loc( w0 )
  505.       call __allocate( $_allo_P80, 0, 0, _fcd( 0, 0 ) )
  506.       $F_A205 = jbmax
  506.       $F_A206 = ibmax
  506.       if ( and( -$F_A206, -$F_A205 ) < 0 ) then
  506.          $I_L506_548 = 0
  506.          do
  506.             $I_L506_422 = 0
  506.             do
  506.                $I_L506_166 = 0
  506. !dir$ ivdep
  506.                do
  506.                   (w0%base_addr)(1 + $I_L506_166, 1 + $I_L506_422, 1 + $I_L506_548, 0) = 0.0
  506.                   $I_L506_166 = 1 + $I_L506_166
  506.                   if ( $I_L506_166 >= $F_A206 ) exit
  506.                enddo
  506.                $I_L506_422 = 1 + $I_L506_422
  506.                if ( $I_L506_422 >= 3 ) exit
  506.             enddo
  506.             $I_L506_548 = 1 + $I_L506_548
  506.             if ( $I_L506_548 >= $F_A205 ) exit
  506.          enddo
  506.       endif
  507.       capac0%header%a_contig = 1
  507.       capac0%dim_1%LB = 1
  507.       capac0%dim_1%EX = ( max( 0, ibmax ) )
  507.       capac0%dim_1%SM = 1
  507.       capac0%dim_2%LB = 1
  507.       capac0%dim_2%EX = 2
  507.       capac0%dim_2%SM = ( max( 0, ibmax ) )
  507.       capac0%dim_3%LB = 1
  507.       capac0%dim_3%EX = ( max( 0, jbmax ) )
  507.       capac0%dim_3%SM = ( 2 * max( 0, ibmax ) )
  507.       $_allo_P81(0) = 0x1000000000001L
  507.       $_allo_P81(1) = loc( capac0 )
  507.       call __allocate( $_allo_P81, 0, 0, _fcd( 0, 0 ) )
  508.       $F_A207 = jbmax
  508.       $F_A208 = ibmax
  508.       if ( and( -$F_A208, -$F_A207 ) < 0 ) then
  508.          $I_L508_550 = 0
  508.          do
  508.             $I_L508_424 = 0
  508.             do
  508.                $I_L508_168 = 0
  508. !dir$ ivdep
  508.                do
  508.                   (capac0%base_addr)(1 + $I_L508_168, 1 + $I_L508_424, 1 + $I_L508_550, 0) = 0.0
  508.                   $I_L508_168 = 1 + $I_L508_168
  508.                   if ( $I_L508_168 >= $F_A208 ) exit
  508.                enddo
  508.                $I_L508_424 = 1 + $I_L508_424
  508.                if ( $I_L508_424 >= 2 ) exit
  508.             enddo
  508.             $I_L508_550 = 1 + $I_L508_550
  508.             if ( $I_L508_550 >= $F_A207 ) exit
  508.          enddo
  508.       endif
  509.       tmm%header%a_contig = 1
  509.       tmm%dim_1%LB = 1
  509.       tmm%dim_1%EX = ( max( 0, ibmax ) )
  509.       tmm%dim_1%SM = 1
  509.       tmm%dim_2%LB = 1
  509.       tmm%dim_2%EX = ( max( 0, jbmax ) )
  509.       tmm%dim_2%SM = ( max( 0, ibmax ) )
  509.       $_allo_P82(0) = 0x1000000000001L
  509.       $_allo_P82(1) = loc( tmm )
  509.       call __allocate( $_allo_P82, 0, 0, _fcd( 0, 0 ) )
  510.       $F_A209 = jbmax
  510.       $F_A210 = ibmax
  510.       if ( and( -$F_A210, -$F_A209 ) < 0 ) then
  510.          $I_L510_426 = 0
  510.          do
  510.             $I_L510_170 = 0
  510. !dir$ ivdep
  510.             do
  510.                (tmm%base_addr)(1 + $I_L510_170, 1 + $I_L510_426, 0) = 0.0
  510.                $I_L510_170 = 1 + $I_L510_170
  510.                if ( $I_L510_170 >= $F_A210 ) exit
  510.             enddo
  510.             $I_L510_426 = 1 + $I_L510_426
  510.             if ( $I_L510_426 >= $F_A209 ) exit
  510.          enddo
  510.       endif
  511.       qmm%header%a_contig = 1
  511.       qmm%dim_1%LB = 1
  511.       qmm%dim_1%EX = ( max( 0, ibmax ) )
  511.       qmm%dim_1%SM = 1
  511.       qmm%dim_2%LB = 1
  511.       qmm%dim_2%EX = ( max( 0, jbmax ) )
  511.       qmm%dim_2%SM = ( max( 0, ibmax ) )
  511.       $_allo_P83(0) = 0x1000000000001L
  511.       $_allo_P83(1) = loc( qmm )
  511.       call __allocate( $_allo_P83, 0, 0, _fcd( 0, 0 ) )
  512.       $F_A211 = jbmax
  512.       $F_A212 = ibmax
  512.       if ( and( -$F_A212, -$F_A211 ) < 0 ) then
  512.          $I_L512_428 = 0
  512.          do
  512.             $I_L512_172 = 0
  512. !dir$ ivdep
  512.             do
  512.                (qmm%base_addr)(1 + $I_L512_172, 1 + $I_L512_428, 0) = 0.0
  512.                $I_L512_172 = 1 + $I_L512_172
  512.                if ( $I_L512_172 >= $F_A212 ) exit
  512.             enddo
  512.             $I_L512_428 = 1 + $I_L512_428
  512.             if ( $I_L512_428 >= $F_A211 ) exit
  512.          enddo
  512.       endif
  513.       tcm%header%a_contig = 1
  513.       tcm%dim_1%LB = 1
  513.       tcm%dim_1%EX = ( max( 0, ibmax ) )
  513.       tcm%dim_1%SM = 1
  513.       tcm%dim_2%LB = 1
  513.       tcm%dim_2%EX = ( max( 0, jbmax ) )
  513.       tcm%dim_2%SM = ( max( 0, ibmax ) )
  513.       $_allo_P84(0) = 0x1000000000001L
  513.       $_allo_P84(1) = loc( tcm )
  513.       call __allocate( $_allo_P84, 0, 0, _fcd( 0, 0 ) )
  514.       $F_A213 = jbmax
  514.       $F_A214 = ibmax
  514.       if ( and( -$F_A214, -$F_A213 ) < 0 ) then
  514.          $I_L514_430 = 0
  514.          do
  514.             $I_L514_174 = 0
  514. !dir$ ivdep
  514.             do
  514.                (tcm%base_addr)(1 + $I_L514_174, 1 + $I_L514_430, 0) = 0.0
  514.                $I_L514_174 = 1 + $I_L514_174
  514.                if ( $I_L514_174 >= $F_A214 ) exit
  514.             enddo
  514.             $I_L514_430 = 1 + $I_L514_430
  514.             if ( $I_L514_430 >= $F_A213 ) exit
  514.          enddo
  514.       endif
  515.       tgm%header%a_contig = 1
  515.       tgm%dim_1%LB = 1
  515.       tgm%dim_1%EX = ( max( 0, ibmax ) )
  515.       tgm%dim_1%SM = 1
  515.       tgm%dim_2%LB = 1
  515.       tgm%dim_2%EX = ( max( 0, jbmax ) )
  515.       tgm%dim_2%SM = ( max( 0, ibmax ) )
  515.       $_allo_P85(0) = 0x1000000000001L
  515.       $_allo_P85(1) = loc( tgm )
  515.       call __allocate( $_allo_P85, 0, 0, _fcd( 0, 0 ) )
  516.       $F_A215 = jbmax
  516.       $F_A216 = ibmax
  516.       if ( and( -$F_A216, -$F_A215 ) < 0 ) then
  516.          $I_L516_432 = 0
  516.          do
  516.             $I_L516_176 = 0
  516. !dir$ ivdep
  516.             do
  516.                (tgm%base_addr)(1 + $I_L516_176, 1 + $I_L516_432, 0) = 0.0
  516.                $I_L516_176 = 1 + $I_L516_176
  516.                if ( $I_L516_176 >= $F_A216 ) exit
  516.             enddo
  516.             $I_L516_432 = 1 + $I_L516_432
  516.             if ( $I_L516_432 >= $F_A215 ) exit
  516.          enddo
  516.       endif
  517.       tdm%header%a_contig = 1
  517.       tdm%dim_1%LB = 1
  517.       tdm%dim_1%EX = ( max( 0, ibmax ) )
  517.       tdm%dim_1%SM = 1
  517.       tdm%dim_2%LB = 1
  517.       tdm%dim_2%EX = ( max( 0, jbmax ) )
  517.       tdm%dim_2%SM = ( max( 0, ibmax ) )
  517.       $_allo_P86(0) = 0x1000000000001L
  517.       $_allo_P86(1) = loc( tdm )
  517.       call __allocate( $_allo_P86, 0, 0, _fcd( 0, 0 ) )
  518.       $F_A217 = jbmax
  518.       $F_A218 = ibmax
  518.       if ( and( -$F_A218, -$F_A217 ) < 0 ) then
  518.          $I_L518_434 = 0
  518.          do
  518.             $I_L518_178 = 0
  518. !dir$ ivdep
  518.             do
  518.                (tdm%base_addr)(1 + $I_L518_178, 1 + $I_L518_434, 0) = 0.0
  518.                $I_L518_178 = 1 + $I_L518_178
  518.                if ( $I_L518_178 >= $F_A218 ) exit
  518.             enddo
  518.             $I_L518_434 = 1 + $I_L518_434
  518.             if ( $I_L518_434 >= $F_A217 ) exit
  518.          enddo
  518.       endif
  519.       wm%header%a_contig = 1
  519.       wm%dim_1%LB = 1
  519.       wm%dim_1%EX = ( max( 0, ibmax ) )
  519.       wm%dim_1%SM = 1
  519.       wm%dim_2%LB = 1
  519.       wm%dim_2%EX = 3
  519.       wm%dim_2%SM = ( max( 0, ibmax ) )
  519.       wm%dim_3%LB = 1
  519.       wm%dim_3%EX = ( max( 0, jbmax ) )
  519.       wm%dim_3%SM = ( 3 * max( 0, ibmax ) )
  519.       $_allo_P87(0) = 0x1000000000001L
  519.       $_allo_P87(1) = loc( wm )
  519.       call __allocate( $_allo_P87, 0, 0, _fcd( 0, 0 ) )
  520.       $F_A219 = jbmax
  520.       $F_A220 = ibmax
  520.       if ( and( -$F_A220, -$F_A219 ) < 0 ) then
  520.          $I_L520_552 = 0
  520.          do
  520.             $I_L520_436 = 0
  520.             do
  520.                $I_L520_180 = 0
  520. !dir$ ivdep
  520.                do
  520.                   (wm%base_addr)(1 + $I_L520_180, 1 + $I_L520_436, 1 + $I_L520_552, 0) = 0.0
  520.                   $I_L520_180 = 1 + $I_L520_180
  520.                   if ( $I_L520_180 >= $F_A220 ) exit
  520.                enddo
  520.                $I_L520_436 = 1 + $I_L520_436
  520.                if ( $I_L520_436 >= 3 ) exit
  520.             enddo
  520.             $I_L520_552 = 1 + $I_L520_552
  520.             if ( $I_L520_552 >= $F_A219 ) exit
  520.          enddo
  520.       endif
  521.       capacm%header%a_contig = 1
  521.       capacm%dim_1%LB = 1
  521.       capacm%dim_1%EX = ( max( 0, ibmax ) )
  521.       capacm%dim_1%SM = 1
  521.       capacm%dim_2%LB = 1
  521.       capacm%dim_2%EX = 2
  521.       capacm%dim_2%SM = ( max( 0, ibmax ) )
  521.       capacm%dim_3%LB = 1
  521.       capacm%dim_3%EX = ( max( 0, jbmax ) )
  521.       capacm%dim_3%SM = ( 2 * max( 0, ibmax ) )
  521.       $_allo_P88(0) = 0x1000000000001L
  521.       $_allo_P88(1) = loc( capacm )
  521.       call __allocate( $_allo_P88, 0, 0, _fcd( 0, 0 ) )
  522.       $F_A221 = jbmax
  522.       $F_A222 = ibmax
  522.       if ( and( -$F_A222, -$F_A221 ) < 0 ) then
  522.          $I_L522_554 = 0
  522.          do
  522.             $I_L522_438 = 0
  522.             do
  522.                $I_L522_182 = 0
  522. !dir$ ivdep
  522.                do
  522.                   (capacm%base_addr)(1 + $I_L522_182, 1 + $I_L522_438, 1 + $I_L522_554, 0) = 0.0
  522.                   $I_L522_182 = 1 + $I_L522_182
  522.                   if ( $I_L522_182 >= $F_A222 ) exit
  522.                enddo
  522.                $I_L522_438 = 1 + $I_L522_438
  522.                if ( $I_L522_438 >= 2 ) exit
  522.             enddo
  522.             $I_L522_554 = 1 + $I_L522_554
  522.             if ( $I_L522_554 >= $F_A221 ) exit
  522.          enddo
  522.       endif
  523.       var%header%a_contig = 1
  523.       var%dim_1%LB = 1
  523.       var%dim_1%EX = ( max( 0, ibmax ) )
  523.       var%dim_1%SM = 1
  523.       var%dim_2%LB = 1
  523.       var%dim_2%EX = ( max( 0, jbmax ) )
  523.       var%dim_2%SM = ( max( 0, ibmax ) )
  523.       $_allo_P89(0) = 0x1000000000001L
  523.       $_allo_P89(1) = loc( var )
  523.       call __allocate( $_allo_P89, 0, 0, _fcd( 0, 0 ) )
  524.       $F_A223 = jbmax
  524.       $F_A224 = ibmax
  524.       if ( and( -$F_A224, -$F_A223 ) < 0 ) then
  524.          $I_L524_440 = 0
  524.          do
  524.             $I_L524_184 = 0
  524. !dir$ ivdep
  524.             do
  524.                (var%base_addr)(1 + $I_L524_184, 1 + $I_L524_440, 0) = 0.0
  524.                $I_L524_184 = 1 + $I_L524_184
  524.                if ( $I_L524_184 >= $F_A224 ) exit
  524.             enddo
  524.             $I_L524_440 = 1 + $I_L524_440
  524.             if ( $I_L524_440 >= $F_A223 ) exit
  524.          enddo
  524.       endif
  525.       tg1%header%a_contig = 1
  525.       tg1%dim_1%LB = 1
  525.       tg1%dim_1%EX = ( max( 0, ibmax ) )
  525.       tg1%dim_1%SM = 1
  525.       tg1%dim_2%LB = 1
  525.       tg1%dim_2%EX = ( max( 0, jbmax ) )
  525.       tg1%dim_2%SM = ( max( 0, ibmax ) )
  525.       $_allo_P90(0) = 0x1000000000001L
  525.       $_allo_P90(1) = loc( tg1 )
  525.       call __allocate( $_allo_P90, 0, 0, _fcd( 0, 0 ) )
  526.       $F_A225 = jbmax
  526.       $F_A226 = ibmax
  526.       if ( and( -$F_A226, -$F_A225 ) < 0 ) then
  526.          $I_L526_442 = 0
  526.          do
  526.             $I_L526_186 = 0
  526. !dir$ ivdep
  526.             do
  526.                (tg1%base_addr)(1 + $I_L526_186, 1 + $I_L526_442, 0) = 0.0
  526.                $I_L526_186 = 1 + $I_L526_186
  526.                if ( $I_L526_186 >= $F_A226 ) exit
  526.             enddo
  526.             $I_L526_442 = 1 + $I_L526_442
  526.             if ( $I_L526_442 >= $F_A225 ) exit
  526.          enddo
  526.       endif
  527.       tg2%header%a_contig = 1
  527.       tg2%dim_1%LB = 1
  527.       tg2%dim_1%EX = ( max( 0, ibmax ) )
  527.       tg2%dim_1%SM = 1
  527.       tg2%dim_2%LB = 1
  527.       tg2%dim_2%EX = ( max( 0, jbmax ) )
  527.       tg2%dim_2%SM = ( max( 0, ibmax ) )
  527.       $_allo_P91(0) = 0x1000000000001L
  527.       $_allo_P91(1) = loc( tg2 )
  527.       call __allocate( $_allo_P91, 0, 0, _fcd( 0, 0 ) )
  528.       $F_A227 = jbmax
  528.       $F_A228 = ibmax
  528.       if ( and( -$F_A228, -$F_A227 ) < 0 ) then
  528.          $I_L528_444 = 0
  528.          do
  528.             $I_L528_188 = 0
  528. !dir$ ivdep
  528.             do
  528.                (tg2%base_addr)(1 + $I_L528_188, 1 + $I_L528_444, 0) = 0.0
  528.                $I_L528_188 = 1 + $I_L528_188
  528.                if ( $I_L528_188 >= $F_A228 ) exit
  528.             enddo
  528.             $I_L528_444 = 1 + $I_L528_444
  528.             if ( $I_L528_444 >= $F_A227 ) exit
  528.          enddo
  528.       endif
  529.       tg3%header%a_contig = 1
  529.       tg3%dim_1%LB = 1
  529.       tg3%dim_1%EX = ( max( 0, ibmax ) )
  529.       tg3%dim_1%SM = 1
  529.       tg3%dim_2%LB = 1
  529.       tg3%dim_2%EX = ( max( 0, jbmax ) )
  529.       tg3%dim_2%SM = ( max( 0, ibmax ) )
  529.       $_allo_P92(0) = 0x1000000000001L
  529.       $_allo_P92(1) = loc( tg3 )
  529.       call __allocate( $_allo_P92, 0, 0, _fcd( 0, 0 ) )
  530.       $F_A229 = jbmax
  530.       $F_A230 = ibmax
  530.       if ( and( -$F_A230, -$F_A229 ) < 0 ) then
  530.          $I_L530_446 = 0
  530.          do
  530.             $I_L530_190 = 0
  530. !dir$ ivdep
  530.             do
  530.                (tg3%base_addr)(1 + $I_L530_190, 1 + $I_L530_446, 0) = 0.0
  530.                $I_L530_190 = 1 + $I_L530_190
  530.                if ( $I_L530_190 >= $F_A230 ) exit
  530.             enddo
  530.             $I_L530_446 = 1 + $I_L530_446
  530.             if ( $I_L530_446 >= $F_A229 ) exit
  530.          enddo
  530.       endif
  531.       soilm%header%a_contig = 1
  531.       soilm%dim_1%LB = 1
  531.       soilm%dim_1%EX = ( max( 0, ibmax ) )
  531.       soilm%dim_1%SM = 1
  531.       soilm%dim_2%LB = 1
  531.       soilm%dim_2%EX = ( max( 0, jbmax ) )
  531.       soilm%dim_2%SM = ( max( 0, ibmax ) )
  531.       $_allo_P93(0) = 0x1000000000001L
  531.       $_allo_P93(1) = loc( soilm )
  531.       call __allocate( $_allo_P93, 0, 0, _fcd( 0, 0 ) )
  532.       $F_A231 = jbmax
  532.       $F_A232 = ibmax
  532.       if ( and( -$F_A232, -$F_A231 ) < 0 ) then
  532.          $I_L532_448 = 0
  532.          do
  532.             $I_L532_192 = 0
  532. !dir$ ivdep
  532.             do
  532.                (soilm%base_addr)(1 + $I_L532_192, 1 + $I_L532_448, 0) = 0.0
  532.                $I_L532_192 = 1 + $I_L532_192
  532.                if ( $I_L532_192 >= $F_A232 ) exit
  532.             enddo
  532.             $I_L532_448 = 1 + $I_L532_448
  532.             if ( $I_L532_448 >= $F_A231 ) exit
  532.          enddo
  532.       endif
  533.       sens%header%a_contig = 1
  533.       sens%dim_1%LB = 1
  533.       sens%dim_1%EX = ( max( 0, ibmax ) )
  533.       sens%dim_1%SM = 1
  533.       sens%dim_2%LB = 1
  533.       sens%dim_2%EX = ( max( 0, jbmax ) )
  533.       sens%dim_2%SM = ( max( 0, ibmax ) )
  533.       $_allo_P94(0) = 0x1000000000001L
  533.       $_allo_P94(1) = loc( sens )
  533.       call __allocate( $_allo_P94, 0, 0, _fcd( 0, 0 ) )
  534.       $F_A233 = jbmax
  534.       $F_A234 = ibmax
  534.       if ( and( -$F_A234, -$F_A233 ) < 0 ) then
  534.          $I_L534_450 = 0
  534.          do
  534.             $I_L534_194 = 0
  534. !dir$ ivdep
  534.             do
  534.                (sens%base_addr)(1 + $I_L534_194, 1 + $I_L534_450, 0) = 0.0
  534.                $I_L534_194 = 1 + $I_L534_194
  534.                if ( $I_L534_194 >= $F_A234 ) exit
  534.             enddo
  534.             $I_L534_450 = 1 + $I_L534_450
  534.             if ( $I_L534_450 >= $F_A233 ) exit
  534.          enddo
  534.       endif
  535.       evap%header%a_contig = 1
  535.       evap%dim_1%LB = 1
  535.       evap%dim_1%EX = ( max( 0, ibmax ) )
  535.       evap%dim_1%SM = 1
  535.       evap%dim_2%LB = 1
  535.       evap%dim_2%EX = ( max( 0, jbmax ) )
  535.       evap%dim_2%SM = ( max( 0, ibmax ) )
  535.       $_allo_P95(0) = 0x1000000000001L
  535.       $_allo_P95(1) = loc( evap )
  535.       call __allocate( $_allo_P95, 0, 0, _fcd( 0, 0 ) )
  536.       $F_A235 = jbmax
  536.       $F_A236 = ibmax
  536.       if ( and( -$F_A236, -$F_A235 ) < 0 ) then
  536.          $I_L536_452 = 0
  536.          do
  536.             $I_L536_196 = 0
  536. !dir$ ivdep
  536.             do
  536.                (evap%base_addr)(1 + $I_L536_196, 1 + $I_L536_452, 0) = 0.0
  536.                $I_L536_196 = 1 + $I_L536_196
  536.                if ( $I_L536_196 >= $F_A236 ) exit
  536.             enddo
  536.             $I_L536_452 = 1 + $I_L536_452
  536.             if ( $I_L536_452 >= $F_A235 ) exit
  536.          enddo
  536.       endif
  538.       o3mix%header%a_contig = 1
  538.       o3mix%dim_1%LB = 1
  538.       o3mix%dim_1%EX = ( max( 0, ibmax ) )
  538.       o3mix%dim_1%SM = 1
  538.       o3mix%dim_2%LB = 1
  538.       o3mix%dim_2%EX = ( max( 0, kmax ) )
  538.       o3mix%dim_2%SM = ( max( 0, ibmax ) )
  538.       o3mix%dim_3%LB = 1
  538.       o3mix%dim_3%EX = ( max( 0, jbmax ) )
  538.       o3mix%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  538.       $_allo_P96(0) = 0x1000000000001L
  538.       $_allo_P96(1) = loc( o3mix )
  538.       call __allocate( $_allo_P96, 0, 0, _fcd( 0, 0 ) )
  539.       $F_A237 = jbmax
  539.       $F_A238 = kmax
  539.       $F_A239 = ibmax
  539.       if ( and( and( -$F_A238, -$F_A237 ), -$F_A239 ) < 0 ) then
  539.          $I_L539_556 = 0
  539.          do
  539.             $I_L539_454 = 0
  539.             do
  539.                $I_L539_198 = 0
  539. !dir$ ivdep
  539.                do
  539.                   (o3mix%base_addr)(1 + $I_L539_198, 1 + $I_L539_454, 1 + $I_L539_556, 0) = 0.0
  539.                   $I_L539_198 = 1 + $I_L539_198
  539.                   if ( $I_L539_198 >= $F_A239 ) exit
  539.                enddo
  539.                $I_L539_454 = 1 + $I_L539_454
  539.                if ( $I_L539_454 >= $F_A238 ) exit
  539.             enddo
  539.             $I_L539_556 = 1 + $I_L539_556
  539.             if ( $I_L539_556 >= $F_A237 ) exit
  539.          enddo
  539.       endif
  540.       glsm_w%header%a_contig = 1
  540.       glsm_w%dim_1%LB = 1
  540.       glsm_w%dim_1%EX = ( max( 0, ibmax ) )
  540.       glsm_w%dim_1%SM = 1
  540.       glsm_w%dim_2%LB = 1
  540.       glsm_w%dim_2%EX = ( max( 0, jbmax ) )
  540.       glsm_w%dim_2%SM = ( max( 0, ibmax ) )
  540.       glsm_w%dim_3%LB = 1
  540.       glsm_w%dim_3%EX = 8
  540.       glsm_w%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  540.       $_allo_P97(0) = 0x1000000000001L
  540.       $_allo_P97(1) = loc( glsm_w )
  540.       call __allocate( $_allo_P97, 0, 0, _fcd( 0, 0 ) )
  541.       $F_A240 = jbmax
  541.       $F_A241 = ibmax
  541.       if ( and( -$F_A241, -$F_A240 ) < 0 ) then
  541.          $I_L541_558 = 0
  541.          do
  541.             $I_L541_456 = 0
  541.             do
  541.                $I_L541_200 = 0
  541. !dir$ ivdep
  541.                do
  541.                   (glsm_w%base_addr)(1 + $I_L541_200, 1 + $I_L541_456, 1 + $I_L541_558, 0) = 0.0
  541.                   $I_L541_200 = 1 + $I_L541_200
  541.                   if ( $I_L541_200 >= $F_A241 ) exit
  541.                enddo
  541.                $I_L541_456 = 1 + $I_L541_456
  541.                if ( $I_L541_456 >= $F_A240 ) exit
  541.             enddo
  541.             $I_L541_558 = 1 + $I_L541_558
  541.             if ( $I_L541_558 >= 8 ) exit
  541.          enddo
  541.       endif
  542.       wsib3d%header%a_contig = 1
  542.       wsib3d%dim_1%LB = 1
  542.       wsib3d%dim_1%EX = ( max( 0, ibmax ) )
  542.       wsib3d%dim_1%SM = 1
  542.       wsib3d%dim_2%LB = 1
  542.       wsib3d%dim_2%EX = ( max( 0, jbmax ) )
  542.       wsib3d%dim_2%SM = ( max( 0, ibmax ) )
  542.       wsib3d%dim_3%LB = 1
  542.       wsib3d%dim_3%EX = 3
  542.       wsib3d%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  542.       $_allo_P98(0) = 0x1000000000001L
  542.       $_allo_P98(1) = loc( wsib3d )
  542.       call __allocate( $_allo_P98, 0, 0, _fcd( 0, 0 ) )
  543.       $F_A242 = jbmax
  543.       $F_A243 = ibmax
  543.       if ( and( -$F_A243, -$F_A242 ) < 0 ) then
  543.          $I_L543_560 = 0
  543.          do
  543.             $I_L543_458 = 0
  543.             do
  543.                $I_L543_202 = 0
  543. !dir$ ivdep
  543.                do
  543.                   (wsib3d%base_addr)(1 + $I_L543_202, 1 + $I_L543_458, 1 + $I_L543_560, 0) = 0.0
  543.                   $I_L543_202 = 1 + $I_L543_202
  543.                   if ( $I_L543_202 >= $F_A243 ) exit
  543.                enddo
  543.                $I_L543_458 = 1 + $I_L543_458
  543.                if ( $I_L543_458 >= $F_A242 ) exit
  543.             enddo
  543.             $I_L543_560 = 1 + $I_L543_560
  543.             if ( $I_L543_560 >= 3 ) exit
  543.          enddo
  543.       endif
  544.       veg_type%header%a_contig = 1
  544.       veg_type%dim_1%LB = 1
  544.       veg_type%dim_1%EX = ( max( 0, ibmax ) )
  544.       veg_type%dim_1%SM = 1
  544.       veg_type%dim_2%LB = 1
  544.       veg_type%dim_2%EX = ( max( 0, jbmax ) )
  544.       veg_type%dim_2%SM = ( max( 0, ibmax ) )
  544.       veg_type%dim_3%LB = 1
  544.       veg_type%dim_3%EX = 5
  544.       veg_type%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  544.       $_allo_P99(0) = 0x1000000000001L
  544.       $_allo_P99(1) = loc( veg_type )
  544.       call __allocate( $_allo_P99, 0, 0, _fcd( 0, 0 ) )
  545.       $F_A244 = jbmax
  545.       $F_A245 = ibmax
  545.       if ( and( -$F_A245, -$F_A244 ) < 0 ) then
  545.          $I_L545_562 = 0
  545.          do
  545.             $I_L545_460 = 0
  545.             do
  545.                $I_L545_204 = 0
  545. !dir$ ivdep
  545.                do
  545.                   (veg_type%base_addr)(1 + $I_L545_204, 1 + $I_L545_460, 1 + $I_L545_562, 0) = 0.0
  545.                   $I_L545_204 = 1 + $I_L545_204
  545.                   if ( $I_L545_204 >= $F_A245 ) exit
  545.                enddo
  545.                $I_L545_460 = 1 + $I_L545_460
  545.                if ( $I_L545_460 >= $F_A244 ) exit
  545.             enddo
  545.             $I_L545_562 = 1 + $I_L545_562
  545.             if ( $I_L545_562 >= 5 ) exit
  545.          enddo
  545.       endif
  546.       frac_occ%header%a_contig = 1
  546.       frac_occ%dim_1%LB = 1
  546.       frac_occ%dim_1%EX = ( max( 0, ibmax ) )
  546.       frac_occ%dim_1%SM = 1
  546.       frac_occ%dim_2%LB = 1
  546.       frac_occ%dim_2%EX = ( max( 0, jbmax ) )
  546.       frac_occ%dim_2%SM = ( max( 0, ibmax ) )
  546.       frac_occ%dim_3%LB = 1
  546.       frac_occ%dim_3%EX = 5
  546.       frac_occ%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  546.       $_allo_P100(0) = 0x1000000000001L
  546.       $_allo_P100(1) = loc( frac_occ )
  546.       call __allocate( $_allo_P100, 0, 0, _fcd( 0, 0 ) )
  547.       $F_A246 = jbmax
  547.       $F_A247 = ibmax
  547.       if ( and( -$F_A247, -$F_A246 ) < 0 ) then
  547.          $I_L547_564 = 0
  547.          do
  547.             $I_L547_462 = 0
  547.             do
  547.                $I_L547_206 = 0
  547. !dir$ ivdep
  547.                do
  547.                   (frac_occ%base_addr)(1 + $I_L547_206, 1 + $I_L547_462, 1 + $I_L547_564, 0) = 0.0
  547.                   $I_L547_206 = 1 + $I_L547_206
  547.                   if ( $I_L547_206 >= $F_A247 ) exit
  547.                enddo
  547.                $I_L547_462 = 1 + $I_L547_462
  547.                if ( $I_L547_462 >= $F_A246 ) exit
  547.             enddo
  547.             $I_L547_564 = 1 + $I_L547_564
  547.             if ( $I_L547_564 >= 5 ) exit
  547.          enddo
  547.       endif
  548.       soil_type%header%a_contig = 1
  548.       soil_type%dim_1%LB = 1
  548.       soil_type%dim_1%EX = ( max( 0, ibmax ) )
  548.       soil_type%dim_1%SM = 1
  548.       soil_type%dim_2%LB = 1
  548.       soil_type%dim_2%EX = ( max( 0, jbmax ) )
  548.       soil_type%dim_2%SM = ( max( 0, ibmax ) )
  548.       $_allo_P101(0) = 0x1000000000001L
  548.       $_allo_P101(1) = loc( soil_type )
  548.       call __allocate( $_allo_P101, 0, 0, _fcd( 0, 0 ) )
  549.       $F_A248 = jbmax
  549.       $F_A249 = ibmax
  549.       if ( and( -$F_A249, -$F_A248 ) < 0 ) then
  549.          $I_L549_464 = 0
  549.          do
  549.             $I_L549_208 = 0
  549. !dir$ ivdep
  549.             do
  549.                (soil_type%base_addr)(1 + $I_L549_208, 1 + $I_L549_464, 0) = 0.0
  549.                $I_L549_208 = 1 + $I_L549_208
  549.                if ( $I_L549_208 >= $F_A249 ) exit
  549.             enddo
  549.             $I_L549_464 = 1 + $I_L549_464
  549.             if ( $I_L549_464 >= $F_A248 ) exit
  549.          enddo
  549.       endif
  550.       xland%header%a_contig = 1
  550.       xland%dim_1%LB = 1
  550.       xland%dim_1%EX = ( max( 0, ibmax ) )
  550.       xland%dim_1%SM = 1
  550.       xland%dim_2%LB = 1
  550.       xland%dim_2%EX = ( max( 0, jbmax ) )
  550.       xland%dim_2%SM = ( max( 0, ibmax ) )
  550.       $_allo_P102(0) = 0x1000000000001L
  550.       $_allo_P102(1) = loc( xland )
  550.       call __allocate( $_allo_P102, 0, 0, _fcd( 0, 0 ) )
  551.       $F_A250 = jbmax
  551.       $F_A251 = ibmax
  551.       if ( and( -$F_A251, -$F_A250 ) < 0 ) then
  551.          $I_L551_466 = 0
  551.          do
  551.             $I_L551_210 = 0
  551. !dir$ ivdep
  551.             do
  551.                (xland%base_addr)(1 + $I_L551_210, 1 + $I_L551_466, 0) = 0.0
  551.                $I_L551_210 = 1 + $I_L551_210
  551.                if ( $I_L551_210 >= $F_A251 ) exit
  551.             enddo
  551.             $I_L551_466 = 1 + $I_L551_466
  551.             if ( $I_L551_466 >= $F_A250 ) exit
  551.          enddo
  551.       endif
  552.       seamask%header%a_contig = 1
  552.       seamask%dim_1%LB = 1
  552.       seamask%dim_1%EX = ( max( 0, ibmax ) )
  552.       seamask%dim_1%SM = 1
  552.       seamask%dim_2%LB = 1
  552.       seamask%dim_2%EX = ( max( 0, jbmax ) )
  552.       seamask%dim_2%SM = ( max( 0, ibmax ) )
  552.       $_allo_P103(0) = 0x1000000000001L
  552.       $_allo_P103(1) = loc( seamask )
  552.       call __allocate( $_allo_P103, 0, 0, _fcd( 0, 0 ) )
  553.       $F_A252 = jbmax
  553.       $F_A253 = ibmax
  553.       if ( and( -$F_A253, -$F_A252 ) < 0 ) then
  553.          $I_L553_468 = 0
  553.          do
  553.             $I_L553_212 = 0
  553. !dir$ ivdep
  553.             do
  553.                (seamask%base_addr)(1 + $I_L553_212, 1 + $I_L553_468, 0) = 0.0
  553.                $I_L553_212 = 1 + $I_L553_212
  553.                if ( $I_L553_212 >= $F_A253 ) exit
  553.             enddo
  553.             $I_L553_468 = 1 + $I_L553_468
  553.             if ( $I_L553_468 >= $F_A252 ) exit
  553.          enddo
  553.       endif
  554.       z0%header%a_contig = 1
  554.       z0%dim_1%LB = 1
  554.       z0%dim_1%EX = ( max( 0, ibmax ) )
  554.       z0%dim_1%SM = 1
  554.       z0%dim_2%LB = 1
  554.       z0%dim_2%EX = ( max( 0, jbmax ) )
  554.       z0%dim_2%SM = ( max( 0, ibmax ) )
  554.       $_allo_P104(0) = 0x1000000000001L
  554.       $_allo_P104(1) = loc( z0 )
  554.       call __allocate( $_allo_P104, 0, 0, _fcd( 0, 0 ) )
  555.       $F_A254 = jbmax
  555.       $F_A255 = ibmax
  555.       if ( and( -$F_A255, -$F_A254 ) < 0 ) then
  555.          $I_L555_470 = 0
  555.          do
  555.             $I_L555_214 = 0
  555. !dir$ ivdep
  555.             do
  555.                (z0%base_addr)(1 + $I_L555_214, 1 + $I_L555_470, 0) = 0.0
  555.                $I_L555_214 = 1 + $I_L555_214
  555.                if ( $I_L555_214 >= $F_A255 ) exit
  555.             enddo
  555.             $I_L555_470 = 1 + $I_L555_470
  555.             if ( $I_L555_470 >= $F_A254 ) exit
  555.          enddo
  555.       endif
  556.       ustar%header%a_contig = 1
  556.       ustar%dim_1%LB = 1
  556.       ustar%dim_1%EX = ( max( 0, ibmax ) )
  556.       ustar%dim_1%SM = 1
  556.       ustar%dim_2%LB = 1
  556.       ustar%dim_2%EX = ( max( 0, jbmax ) )
  556.       ustar%dim_2%SM = ( max( 0, ibmax ) )
  556.       $_allo_P105(0) = 0x1000000000001L
  556.       $_allo_P105(1) = loc( ustar )
  556.       call __allocate( $_allo_P105, 0, 0, _fcd( 0, 0 ) )
  557.       $F_A256 = jbmax
  557.       $F_A257 = ibmax
  557.       if ( and( -$F_A257, -$F_A256 ) < 0 ) then
  557.          $I_L557_472 = 0
  557.          do
  557.             $I_L557_216 = 0
  557. !dir$ ivdep
  557.             do
  557.                (ustar%base_addr)(1 + $I_L557_216, 1 + $I_L557_472, 0) = 0.0
  557.                $I_L557_216 = 1 + $I_L557_216
  557.                if ( $I_L557_216 >= $F_A257 ) exit
  557.             enddo
  557.             $I_L557_472 = 1 + $I_L557_472
  557.             if ( $I_L557_472 >= $F_A256 ) exit
  557.          enddo
  557.       endif
  558.       lowlyr%header%a_contig = 1
  558.       lowlyr%dim_1%LB = 1
  558.       lowlyr%dim_1%EX = ( max( 0, ibmax ) )
  558.       lowlyr%dim_1%SM = 1
  558.       lowlyr%dim_2%LB = 1
  558.       lowlyr%dim_2%EX = ( max( 0, jbmax ) )
  558.       lowlyr%dim_2%SM = ( max( 0, ibmax ) )
  558.       $_allo_P106(0) = 0x1000000000001L
  558.       $_allo_P106(1) = loc( lowlyr )
  558.       call __allocate( $_allo_P106, 0, 0, _fcd( 0, 0 ) )
  559.       $F_A258 = jbmax
  559.       $F_A259 = ibmax
  559.       if ( and( -$F_A259, -$F_A258 ) < 0 ) then
  559.          $I_L559_474 = 0
  559.          do
  559.             $I_L559_218 = 0
  559. !dir$ ivdep
  559.             do
  559.                (lowlyr%base_addr)(1 + $I_L559_218, 1 + $I_L559_474, 0) = 0
  559.                $I_L559_218 = 1 + $I_L559_218
  559.                if ( $I_L559_218 >= $F_A259 ) exit
  559.             enddo
  559.             $I_L559_474 = 1 + $I_L559_474
  559.             if ( $I_L559_474 >= $F_A258 ) exit
  559.          enddo
  559.       endif
  560.       tkemyj%header%a_contig = 1
  560.       tkemyj%dim_1%LB = 1
  560.       tkemyj%dim_1%EX = ( max( 0, ibmax ) )
  560.       tkemyj%dim_1%SM = 1
  560.       tkemyj%dim_2%LB = 1
  560.       tkemyj%dim_2%EX = ( max( 0, kmax ) )
  560.       tkemyj%dim_2%SM = ( max( 0, ibmax ) )
  560.       tkemyj%dim_3%LB = 1
  560.       tkemyj%dim_3%EX = ( max( 0, jbmax ) )
  560.       tkemyj%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  560.       $_allo_P107(0) = 0x1000000000001L
  560.       $_allo_P107(1) = loc( tkemyj )
  560.       call __allocate( $_allo_P107, 0, 0, _fcd( 0, 0 ) )
  561.       $F_A260 = jbmax
  561.       $F_A261 = kmax
  561.       $F_A262 = ibmax
  561.       if ( and( and( -$F_A261, -$F_A260 ), -$F_A262 ) < 0 ) then
  561.          $I_L561_566 = 0
  561.          do
  561.             $I_L561_476 = 0
  561.             do
  561.                $I_L561_220 = 0
  561. !dir$ ivdep
  561.                do
  561.                   (tkemyj%base_addr)(1 + $I_L561_220, 1 + $I_L561_476, 1 + $I_L561_566, 0) = 2.0e-2
  561.                   $I_L561_220 = 1 + $I_L561_220
  561.                   if ( $I_L561_220 >= $F_A262 ) exit
  561.                enddo
  561.                $I_L561_476 = 1 + $I_L561_476
  561.                if ( $I_L561_476 >= $F_A261 ) exit
  561.             enddo
  561.             $I_L561_566 = 1 + $I_L561_566
  561.             if ( $I_L561_566 >= $F_A260 ) exit
  561.          enddo
  561.       endif
  562.       qsfc0%header%a_contig = 1
  562.       qsfc0%dim_1%LB = 1
  562.       qsfc0%dim_1%EX = ( max( 0, ibmax ) )
  562.       qsfc0%dim_1%SM = 1
  562.       qsfc0%dim_2%LB = 1
  562.       qsfc0%dim_2%EX = ( max( 0, jbmax ) )
  562.       qsfc0%dim_2%SM = ( max( 0, ibmax ) )
  562.       $_allo_P108(0) = 0x1000000000001L
  562.       $_allo_P108(1) = loc( qsfc0 )
  562.       call __allocate( $_allo_P108, 0, 0, _fcd( 0, 0 ) )
  563.       $F_A263 = jbmax
  563.       $F_A264 = ibmax
  563.       if ( and( -$F_A264, -$F_A263 ) < 0 ) then
  563.          $I_L563_478 = 0
  563.          do
  563.             $I_L563_222 = 0
  563. !dir$ ivdep
  563.             do
  563.                (qsfc0%base_addr)(1 + $I_L563_222, 1 + $I_L563_478, 0) = 0.0
  563.                $I_L563_222 = 1 + $I_L563_222
  563.                if ( $I_L563_222 >= $F_A264 ) exit
  563.             enddo
  563.             $I_L563_478 = 1 + $I_L563_478
  563.             if ( $I_L563_478 >= $F_A263 ) exit
  563.          enddo
  563.       endif
  564.       tsfc0%header%a_contig = 1
  564.       tsfc0%dim_1%LB = 1
  564.       tsfc0%dim_1%EX = ( max( 0, ibmax ) )
  564.       tsfc0%dim_1%SM = 1
  564.       tsfc0%dim_2%LB = 1
  564.       tsfc0%dim_2%EX = ( max( 0, jbmax ) )
  564.       tsfc0%dim_2%SM = ( max( 0, ibmax ) )
  564.       $_allo_P109(0) = 0x1000000000001L
  564.       $_allo_P109(1) = loc( tsfc0 )
  564.       call __allocate( $_allo_P109, 0, 0, _fcd( 0, 0 ) )
  565.       $F_A265 = jbmax
  565.       $F_A266 = ibmax
  565.       if ( and( -$F_A266, -$F_A265 ) < 0 ) then
  565.          $I_L565_480 = 0
  565.          do
  565.             $I_L565_224 = 0
  565. !dir$ ivdep
  565.             do
  565.                (tsfc0%base_addr)(1 + $I_L565_224, 1 + $I_L565_480, 0) = 0.0
  565.                $I_L565_224 = 1 + $I_L565_224
  565.                if ( $I_L565_224 >= $F_A266 ) exit
  565.             enddo
  565.             $I_L565_480 = 1 + $I_L565_480
  565.             if ( $I_L565_480 >= $F_A265 ) exit
  565.          enddo
  565.       endif
  566.       qsfcm%header%a_contig = 1
  566.       qsfcm%dim_1%LB = 1
  566.       qsfcm%dim_1%EX = ( max( 0, ibmax ) )
  566.       qsfcm%dim_1%SM = 1
  566.       qsfcm%dim_2%LB = 1
  566.       qsfcm%dim_2%EX = ( max( 0, jbmax ) )
  566.       qsfcm%dim_2%SM = ( max( 0, ibmax ) )
  566.       $_allo_P110(0) = 0x1000000000001L
  566.       $_allo_P110(1) = loc( qsfcm )
  566.       call __allocate( $_allo_P110, 0, 0, _fcd( 0, 0 ) )
  567.       $F_A267 = jbmax
  567.       $F_A268 = ibmax
  567.       if ( and( -$F_A268, -$F_A267 ) < 0 ) then
  567.          $I_L567_482 = 0
  567.          do
  567.             $I_L567_226 = 0
  567. !dir$ ivdep
  567.             do
  567.                (qsfcm%base_addr)(1 + $I_L567_226, 1 + $I_L567_482, 0) = 0.0
  567.                $I_L567_226 = 1 + $I_L567_226
  567.                if ( $I_L567_226 >= $F_A268 ) exit
  567.             enddo
  567.             $I_L567_482 = 1 + $I_L567_482
  567.             if ( $I_L567_482 >= $F_A267 ) exit
  567.          enddo
  567.       endif
  568.       tsfcm%header%a_contig = 1
  568.       tsfcm%dim_1%LB = 1
  568.       tsfcm%dim_1%EX = ( max( 0, ibmax ) )
  568.       tsfcm%dim_1%SM = 1
  568.       tsfcm%dim_2%LB = 1
  568.       tsfcm%dim_2%EX = ( max( 0, jbmax ) )
  568.       tsfcm%dim_2%SM = ( max( 0, ibmax ) )
  568.       $_allo_P111(0) = 0x1000000000001L
  568.       $_allo_P111(1) = loc( tsfcm )
  568.       call __allocate( $_allo_P111, 0, 0, _fcd( 0, 0 ) )
  569.       $F_A269 = jbmax
  569.       $F_A270 = ibmax
  569.       if ( and( -$F_A270, -$F_A269 ) < 0 ) then
  569.          $I_L569_484 = 0
  569.          do
  569.             $I_L569_228 = 0
  569. !dir$ ivdep
  569.             do
  569.                (tsfcm%base_addr)(1 + $I_L569_228, 1 + $I_L569_484, 0) = 0.0
  569.                $I_L569_228 = 1 + $I_L569_228
  569.                if ( $I_L569_228 >= $F_A270 ) exit
  569.             enddo
  569.             $I_L569_484 = 1 + $I_L569_484
  569.             if ( $I_L569_484 >= $F_A269 ) exit
  569.          enddo
  569.       endif
  570.       snow%header%a_contig = 1
  570.       snow%dim_1%LB = 1
  570.       snow%dim_1%EX = ( max( 0, ibmax ) )
  570.       snow%dim_1%SM = 1
  570.       snow%dim_2%LB = 1
  570.       snow%dim_2%EX = ( max( 0, jbmax ) )
  570.       snow%dim_2%SM = ( max( 0, ibmax ) )
  570.       $_allo_P112(0) = 0x1000000000001L
  570.       $_allo_P112(1) = loc( snow )
  570.       call __allocate( $_allo_P112, 0, 0, _fcd( 0, 0 ) )
  571.       $F_A271 = jbmax
  571.       $F_A272 = ibmax
  571.       if ( and( -$F_A272, -$F_A271 ) < 0 ) then
  571.          $I_L571_486 = 0
  571.          do
  571.             $I_L571_230 = 0
  571. !dir$ ivdep
  571.             do
  571.                (snow%base_addr)(1 + $I_L571_230, 1 + $I_L571_486, 0) = 0.0
  571.                $I_L571_230 = 1 + $I_L571_230
  571.                if ( $I_L571_230 >= $F_A272 ) exit
  571.             enddo
  571.             $I_L571_486 = 1 + $I_L571_486
  571.             if ( $I_L571_486 >= $F_A271 ) exit
  571.          enddo
  571.       endif
  572.       thz0%header%a_contig = 1
  572.       thz0%dim_1%LB = 1
  572.       thz0%dim_1%EX = ( max( 0, ibmax ) )
  572.       thz0%dim_1%SM = 1
  572.       thz0%dim_2%LB = 1
  572.       thz0%dim_2%EX = ( max( 0, jbmax ) )
  572.       thz0%dim_2%SM = ( max( 0, ibmax ) )
  572.       $_allo_P113(0) = 0x1000000000001L
  572.       $_allo_P113(1) = loc( thz0 )
  572.       call __allocate( $_allo_P113, 0, 0, _fcd( 0, 0 ) )
  573.       $F_A273 = jbmax
  573.       $F_A274 = ibmax
  573.       if ( and( -$F_A274, -$F_A273 ) < 0 ) then
  573.          $I_L573_488 = 0
  573.          do
  573.             $I_L573_232 = 0
  573. !dir$ ivdep
  573.             do
  573.                (thz0%base_addr)(1 + $I_L573_232, 1 + $I_L573_488, 0) = 0.0
  573.                $I_L573_232 = 1 + $I_L573_232
  573.                if ( $I_L573_232 >= $F_A274 ) exit
  573.             enddo
  573.             $I_L573_488 = 1 + $I_L573_488
  573.             if ( $I_L573_488 >= $F_A273 ) exit
  573.          enddo
  573.       endif
  574.       qz0%header%a_contig = 1
  574.       qz0%dim_1%LB = 1
  574.       qz0%dim_1%EX = ( max( 0, ibmax ) )
  574.       qz0%dim_1%SM = 1
  574.       qz0%dim_2%LB = 1
  574.       qz0%dim_2%EX = ( max( 0, jbmax ) )
  574.       qz0%dim_2%SM = ( max( 0, ibmax ) )
  574.       $_allo_P114(0) = 0x1000000000001L
  574.       $_allo_P114(1) = loc( qz0 )
  574.       call __allocate( $_allo_P114, 0, 0, _fcd( 0, 0 ) )
  575.       $F_A275 = jbmax
  575.       $F_A276 = ibmax
  575.       if ( and( -$F_A276, -$F_A275 ) < 0 ) then
  575.          $I_L575_490 = 0
  575.          do
  575.             $I_L575_234 = 0
  575. !dir$ ivdep
  575.             do
  575.                (qz0%base_addr)(1 + $I_L575_234, 1 + $I_L575_490, 0) = 0.0
  575.                $I_L575_234 = 1 + $I_L575_234
  575.                if ( $I_L575_234 >= $F_A276 ) exit
  575.             enddo
  575.             $I_L575_490 = 1 + $I_L575_490
  575.             if ( $I_L575_490 >= $F_A275 ) exit
  575.          enddo
  575.       endif
  576.       uz0%header%a_contig = 1
  576.       uz0%dim_1%LB = 1
  576.       uz0%dim_1%EX = ( max( 0, ibmax ) )
  576.       uz0%dim_1%SM = 1
  576.       uz0%dim_2%LB = 1
  576.       uz0%dim_2%EX = ( max( 0, jbmax ) )
  576.       uz0%dim_2%SM = ( max( 0, ibmax ) )
  576.       $_allo_P115(0) = 0x1000000000001L
  576.       $_allo_P115(1) = loc( uz0 )
  576.       call __allocate( $_allo_P115, 0, 0, _fcd( 0, 0 ) )
  577.       $F_A277 = jbmax
  577.       $F_A278 = ibmax
  577.       if ( and( -$F_A278, -$F_A277 ) < 0 ) then
  577.          $I_L577_492 = 0
  577.          do
  577.             $I_L577_236 = 0
  577. !dir$ ivdep
  577.             do
  577.                (uz0%base_addr)(1 + $I_L577_236, 1 + $I_L577_492, 0) = 0.0
  577.                $I_L577_236 = 1 + $I_L577_236
  577.                if ( $I_L577_236 >= $F_A278 ) exit
  577.             enddo
  577.             $I_L577_492 = 1 + $I_L577_492
  577.             if ( $I_L577_492 >= $F_A277 ) exit
  577.          enddo
  577.       endif
  578.       vz0%header%a_contig = 1
  578.       vz0%dim_1%LB = 1
  578.       vz0%dim_1%EX = ( max( 0, ibmax ) )
  578.       vz0%dim_1%SM = 1
  578.       vz0%dim_2%LB = 1
  578.       vz0%dim_2%EX = ( max( 0, jbmax ) )
  578.       vz0%dim_2%SM = ( max( 0, ibmax ) )
  578.       $_allo_P116(0) = 0x1000000000001L
  578.       $_allo_P116(1) = loc( vz0 )
  578.       call __allocate( $_allo_P116, 0, 0, _fcd( 0, 0 ) )
  579.       $F_A279 = jbmax
  579.       $F_A280 = ibmax
  579.       if ( and( -$F_A280, -$F_A279 ) < 0 ) then
  579.          $I_L579_494 = 0
  579.          do
  579.             $I_L579_238 = 0
  579. !dir$ ivdep
  579.             do
  579.                (vz0%base_addr)(1 + $I_L579_238, 1 + $I_L579_494, 0) = 0.0
  579.                $I_L579_238 = 1 + $I_L579_238
  579.                if ( $I_L579_238 >= $F_A280 ) exit
  579.             enddo
  579.             $I_L579_494 = 1 + $I_L579_494
  579.             if ( $I_L579_494 >= $F_A279 ) exit
  579.          enddo
  579.       endif
  580.       znt%header%a_contig = 1
  580.       znt%dim_1%LB = 1
  580.       znt%dim_1%EX = ( max( 0, ibmax ) )
  580.       znt%dim_1%SM = 1
  580.       znt%dim_2%LB = 1
  580.       znt%dim_2%EX = ( max( 0, jbmax ) )
  580.       znt%dim_2%SM = ( max( 0, ibmax ) )
  580.       $_allo_P117(0) = 0x1000000000001L
  580.       $_allo_P117(1) = loc( znt )
  580.       call __allocate( $_allo_P117, 0, 0, _fcd( 0, 0 ) )
  581.       $F_A281 = jbmax
  581.       $F_A282 = ibmax
  581.       if ( and( -$F_A282, -$F_A281 ) < 0 ) then
  581.          $I_L581_496 = 0
  581.          do
  581.             $I_L581_240 = 0
  581. !dir$ ivdep
  581.             do
  581.                (znt%base_addr)(1 + $I_L581_240, 1 + $I_L581_496, 0) = 0.0
  581.                $I_L581_240 = 1 + $I_L581_240
  581.                if ( $I_L581_240 >= $F_A282 ) exit
  581.             enddo
  581.             $I_L581_496 = 1 + $I_L581_496
  581.             if ( $I_L581_496 >= $F_A281 ) exit
  581.          enddo
  581.       endif
  582.       pblh%header%a_contig = 1
  582.       pblh%dim_1%LB = 1
  582.       pblh%dim_1%EX = ( max( 0, ibmax ) )
  582.       pblh%dim_1%SM = 1
  582.       pblh%dim_2%LB = 1
  582.       pblh%dim_2%EX = ( max( 0, jbmax ) )
  582.       pblh%dim_2%SM = ( max( 0, ibmax ) )
  582.       $_allo_P118(0) = 0x1000000000001L
  582.       $_allo_P118(1) = loc( pblh )
  582.       call __allocate( $_allo_P118, 0, 0, _fcd( 0, 0 ) )
  583.       $F_A283 = jbmax
  583.       $F_A284 = ibmax
  583.       if ( and( -$F_A284, -$F_A283 ) < 0 ) then
  583.          $I_L583_498 = 0
  583.          do
  583.             $I_L583_242 = 0
  583. !dir$ ivdep
  583.             do
  583.                (pblh%base_addr)(1 + $I_L583_242, 1 + $I_L583_498, 0) = 0.0
  583.                $I_L583_242 = 1 + $I_L583_242
  583.                if ( $I_L583_242 >= $F_A284 ) exit
  583.             enddo
  583.             $I_L583_498 = 1 + $I_L583_498
  583.             if ( $I_L583_498 >= $F_A283 ) exit
  583.          enddo
  583.       endif
  584.       akhs%header%a_contig = 1
  584.       akhs%dim_1%LB = 1
  584.       akhs%dim_1%EX = ( max( 0, ibmax ) )
  584.       akhs%dim_1%SM = 1
  584.       akhs%dim_2%LB = 1
  584.       akhs%dim_2%EX = ( max( 0, jbmax ) )
  584.       akhs%dim_2%SM = ( max( 0, ibmax ) )
  584.       $_allo_P119(0) = 0x1000000000001L
  584.       $_allo_P119(1) = loc( akhs )
  584.       call __allocate( $_allo_P119, 0, 0, _fcd( 0, 0 ) )
  585.       $F_A285 = jbmax
  585.       $F_A286 = ibmax
  585.       if ( and( -$F_A286, -$F_A285 ) < 0 ) then
  585.          $I_L585_500 = 0
  585.          do
  585.             $I_L585_244 = 0
  585. !dir$ ivdep
  585.             do
  585.                (akhs%base_addr)(1 + $I_L585_244, 1 + $I_L585_500, 0) = 0.0
  585.                $I_L585_244 = 1 + $I_L585_244
  585.                if ( $I_L585_244 >= $F_A286 ) exit
  585.             enddo
  585.             $I_L585_500 = 1 + $I_L585_500
  585.             if ( $I_L585_500 >= $F_A285 ) exit
  585.          enddo
  585.       endif
  586.       akms%header%a_contig = 1
  586.       akms%dim_1%LB = 1
  586.       akms%dim_1%EX = ( max( 0, ibmax ) )
  586.       akms%dim_1%SM = 1
  586.       akms%dim_2%LB = 1
  586.       akms%dim_2%EX = ( max( 0, jbmax ) )
  586.       akms%dim_2%SM = ( max( 0, ibmax ) )
  586.       $_allo_P120(0) = 0x1000000000001L
  586.       $_allo_P120(1) = loc( akms )
  586.       call __allocate( $_allo_P120, 0, 0, _fcd( 0, 0 ) )
  587.       $F_A287 = jbmax
  587.       $F_A288 = ibmax
  587.       if ( and( -$F_A288, -$F_A287 ) < 0 ) then
  587.          $I_L587_502 = 0
  587.          do
  587.             $I_L587_246 = 0
  587. !dir$ ivdep
  587.             do
  587.                (akms%base_addr)(1 + $I_L587_246, 1 + $I_L587_502, 0) = 0.0
  587.                $I_L587_246 = 1 + $I_L587_246
  587.                if ( $I_L587_246 >= $F_A288 ) exit
  587.             enddo
  587.             $I_L587_502 = 1 + $I_L587_502
  587.             if ( $I_L587_502 >= $F_A287 ) exit
  587.          enddo
  587.       endif
  588.       rmol%header%a_contig = 1
  588.       rmol%dim_1%LB = 1
  588.       rmol%dim_1%EX = ( max( 0, ibmax ) )
  588.       rmol%dim_1%SM = 1
  588.       rmol%dim_2%LB = 1
  588.       rmol%dim_2%EX = ( max( 0, jbmax ) )
  588.       rmol%dim_2%SM = ( max( 0, ibmax ) )
  588.       $_allo_P121(0) = 0x1000000000001L
  588.       $_allo_P121(1) = loc( rmol )
  588.       call __allocate( $_allo_P121, 0, 0, _fcd( 0, 0 ) )
  589.       $F_A289 = jbmax
  589.       $F_A290 = ibmax
  589.       if ( and( -$F_A290, -$F_A289 ) < 0 ) then
  589.          $I_L589_504 = 0
  589.          do
  589.             $I_L589_248 = 0
  589. !dir$ ivdep
  589.             do
  589.                (rmol%base_addr)(1 + $I_L589_248, 1 + $I_L589_504, 0) = 0.0
  589.                $I_L589_248 = 1 + $I_L589_248
  589.                if ( $I_L589_248 >= $F_A290 ) exit
  589.             enddo
  589.             $I_L589_504 = 1 + $I_L589_504
  589.             if ( $I_L589_504 >= $F_A289 ) exit
  589.          enddo
  589.       endif
  590.       ct%header%a_contig = 1
  590.       ct%dim_1%LB = 1
  590.       ct%dim_1%EX = ( max( 0, ibmax ) )
  590.       ct%dim_1%SM = 1
  590.       ct%dim_2%LB = 1
  590.       ct%dim_2%EX = ( max( 0, jbmax ) )
  590.       ct%dim_2%SM = ( max( 0, ibmax ) )
  590.       $_allo_P122(0) = 0x1000000000001L
  590.       $_allo_P122(1) = loc( ct )
  590.       call __allocate( $_allo_P122, 0, 0, _fcd( 0, 0 ) )
  591.       $F_A291 = jbmax
  591.       $F_A292 = ibmax
  591.       if ( and( -$F_A292, -$F_A291 ) < 0 ) then
  591.          $I_L591_506 = 0
  591.          do
  591.             $I_L591_250 = 0
  591. !dir$ ivdep
  591.             do
  591.                (ct%base_addr)(1 + $I_L591_250, 1 + $I_L591_506, 0) = 0.0
  591.                $I_L591_250 = 1 + $I_L591_250
  591.                if ( $I_L591_250 >= $F_A292 ) exit
  591.             enddo
  591.             $I_L591_506 = 1 + $I_L591_506
  591.             if ( $I_L591_506 >= $F_A291 ) exit
  591.          enddo
  591.       endif
  592.       htdisp%header%a_contig = 1
  592.       htdisp%dim_1%LB = 1
  592.       htdisp%dim_1%EX = ( max( 0, ibmax ) )
  592.       htdisp%dim_1%SM = 1
  592.       htdisp%dim_2%LB = 1
  592.       htdisp%dim_2%EX = ( max( 0, jbmax ) )
  592.       htdisp%dim_2%SM = ( max( 0, ibmax ) )
  592.       $_allo_P123(0) = 0x1000000000001L
  592.       $_allo_P123(1) = loc( htdisp )
  592.       call __allocate( $_allo_P123, 0, 0, _fcd( 0, 0 ) )
  593.       $F_A293 = jbmax
  593.       $F_A294 = ibmax
  593.       if ( and( -$F_A294, -$F_A293 ) < 0 ) then
  593.          $I_L593_508 = 0
  593.          do
  593.             $I_L593_252 = 0
  593. !dir$ ivdep
  593.             do
  593.                (htdisp%base_addr)(1 + $I_L593_252, 1 + $I_L593_508, 0) = 0.0
  593.                $I_L593_252 = 1 + $I_L593_252
  593.                if ( $I_L593_252 >= $F_A294 ) exit
  593.             enddo
  593.             $I_L593_508 = 1 + $I_L593_508
  593.             if ( $I_L593_508 >= $F_A293 ) exit
  593.          enddo
  593.       endif
  594.       temp2m%header%a_contig = 1
  594.       temp2m%dim_1%LB = 1
  594.       temp2m%dim_1%EX = ( max( 0, ibmax ) )
  594.       temp2m%dim_1%SM = 1
  594.       temp2m%dim_2%LB = 1
  594.       temp2m%dim_2%EX = ( max( 0, jbmax ) )
  594.       temp2m%dim_2%SM = ( max( 0, ibmax ) )
  594.       $_allo_P124(0) = 0x1000000000001L
  594.       $_allo_P124(1) = loc( temp2m )
  594.       call __allocate( $_allo_P124, 0, 0, _fcd( 0, 0 ) )
  595.       $F_A295 = jbmax
  595.       $F_A296 = ibmax
  595.       if ( and( -$F_A296, -$F_A295 ) < 0 ) then
  595.          $I_L595_510 = 0
  595.          do
  595.             $I_L595_254 = 0
  595. !dir$ ivdep
  595.             do
  595.                (temp2m%base_addr)(1 + $I_L595_254, 1 + $I_L595_510, 0) = 0.0
  595.                $I_L595_254 = 1 + $I_L595_254
  595.                if ( $I_L595_254 >= $F_A296 ) exit
  595.             enddo
  595.             $I_L595_510 = 1 + $I_L595_510
  595.             if ( $I_L595_510 >= $F_A295 ) exit
  595.          enddo
  595.       endif
  596.       umes2m%header%a_contig = 1
  596.       umes2m%dim_1%LB = 1
  596.       umes2m%dim_1%EX = ( max( 0, ibmax ) )
  596.       umes2m%dim_1%SM = 1
  596.       umes2m%dim_2%LB = 1
  596.       umes2m%dim_2%EX = ( max( 0, jbmax ) )
  596.       umes2m%dim_2%SM = ( max( 0, ibmax ) )
  596.       $_allo_P125(0) = 0x1000000000001L
  596.       $_allo_P125(1) = loc( umes2m )
  596.       call __allocate( $_allo_P125, 0, 0, _fcd( 0, 0 ) )
  597.       $F_A297 = jbmax
  597.       $F_A298 = ibmax
  597.       if ( and( -$F_A298, -$F_A297 ) < 0 ) then
  597.          $I_L597_512 = 0
  597.          do
  597.             $I_L597_256 = 0
  597. !dir$ ivdep
  597.             do
  597.                (umes2m%base_addr)(1 + $I_L597_256, 1 + $I_L597_512, 0) = 0.0
  597.                $I_L597_256 = 1 + $I_L597_256
  597.                if ( $I_L597_256 >= $F_A298 ) exit
  597.             enddo
  597.             $I_L597_512 = 1 + $I_L597_512
  597.             if ( $I_L597_512 >= $F_A297 ) exit
  597.          enddo
  597.       endif
  598.       uve10m%header%a_contig = 1
  598.       uve10m%dim_1%LB = 1
  598.       uve10m%dim_1%EX = ( max( 0, ibmax ) )
  598.       uve10m%dim_1%SM = 1
  598.       uve10m%dim_2%LB = 1
  598.       uve10m%dim_2%EX = ( max( 0, jbmax ) )
  598.       uve10m%dim_2%SM = ( max( 0, ibmax ) )
  598.       $_allo_P126(0) = 0x1000000000001L
  598.       $_allo_P126(1) = loc( uve10m )
  598.       call __allocate( $_allo_P126, 0, 0, _fcd( 0, 0 ) )
  599.       $F_A299 = jbmax
  599.       $F_A300 = ibmax
  599.       if ( and( -$F_A300, -$F_A299 ) < 0 ) then
  599.          $I_L599_514 = 0
  599.          do
  599.             $I_L599_258 = 0
  599. !dir$ ivdep
  599.             do
  599.                (uve10m%base_addr)(1 + $I_L599_258, 1 + $I_L599_514, 0) = 0.0
  599.                $I_L599_258 = 1 + $I_L599_258
  599.                if ( $I_L599_258 >= $F_A300 ) exit
  599.             enddo
  599.             $I_L599_514 = 1 + $I_L599_514
  599.             if ( $I_L599_514 >= $F_A299 ) exit
  599.          enddo
  599.       endif
  600.       vve10m%header%a_contig = 1
  600.       vve10m%dim_1%LB = 1
  600.       vve10m%dim_1%EX = ( max( 0, ibmax ) )
  600.       vve10m%dim_1%SM = 1
  600.       vve10m%dim_2%LB = 1
  600.       vve10m%dim_2%EX = ( max( 0, jbmax ) )
  600.       vve10m%dim_2%SM = ( max( 0, ibmax ) )
  600.       $_allo_P127(0) = 0x1000000000001L
  600.       $_allo_P127(1) = loc( vve10m )
  600.       call __allocate( $_allo_P127, 0, 0, _fcd( 0, 0 ) )
  601.       $F_A301 = jbmax
  601.       $F_A302 = ibmax
  601.       if ( and( -$F_A302, -$F_A301 ) < 0 ) then
  601.          $I_L601_516 = 0
  601.          do
  601.             $I_L601_260 = 0
  601. !dir$ ivdep
  601.             do
  601.                (vve10m%base_addr)(1 + $I_L601_260, 1 + $I_L601_516, 0) = 0.0
  601.                $I_L601_260 = 1 + $I_L601_260
  601.                if ( $I_L601_260 >= $F_A302 ) exit
  601.             enddo
  601.             $I_L601_516 = 1 + $I_L601_516
  601.             if ( $I_L601_516 >= $F_A301 ) exit
  601.          enddo
  601.       endif
  602.       mskant%header%a_contig = 1
  602.       mskant%dim_1%LB = 1
  602.       mskant%dim_1%EX = ( max( 0, ibmax ) )
  602.       mskant%dim_1%SM = 1
  602.       mskant%dim_2%LB = 1
  602.       mskant%dim_2%EX = ( max( 0, jbmax ) )
  602.       mskant%dim_2%SM = ( max( 0, ibmax ) )
  602.       $_allo_P128(0) = 0x1000000000001L
  602.       $_allo_P128(1) = loc( mskant )
  602.       call __allocate( $_allo_P128, 0, 0, _fcd( 0, 0 ) )
  603.       $F_A303 = jbmax
  603.       $F_A304 = ibmax
  603.       if ( and( -$F_A304, -$F_A303 ) < 0 ) then
  603.          $I_L603_518 = 0
  603.          do
  603.             $I_L603_262 = 0
  603. !dir$ ivdep
  603.             do
  603.                (mskant%base_addr)(1 + $I_L603_262, 1 + $I_L603_518, 0) = 0
  603.                $I_L603_262 = 1 + $I_L603_262
  603.                if ( $I_L603_262 >= $F_A304 ) exit
  603.             enddo
  603.             $I_L603_518 = 1 + $I_L603_518
  603.             if ( $I_L603_518 >= $F_A303 ) exit
  603.          enddo
  603.       endif
  604.       return
  604.       end
  604.       
  641.       
  641.       subroutine initvariancia( igwd, nfvar, fnameorgvar )
  612.       t$47 = _len( igwd )
  612.       t$48 = _len( fnameorgvar )
  612.       t$9 = imax
  612.       t$10 = jmax
  618.       t$49 = _zla( 0, imax )
  612.       t$50 = _zla( 0, imax )
  618.       t$51 = _zla( 0, jmax )
  612.       t$52 = _zla( 0, imax ) * _zla( 0, jmax )
  618.       t$55 = _zla( 0, imax ) * _zla( 0, jmax ) * 4
  617.       t$56 = 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 )
  617.       t$58 = 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 8
  612.       t$53 = int( _alloc( 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 8 ), 8 )
  618.       t$54 = t$53
  617.       t$57 = t$53 + 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 )
  619.       $F_A33 = jmax
  619.       $F_A34 = imax
  619.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
  619.          $I_A2 = 0
  619.          do
  619.             $I_A1 = 0
  619. !dir$ ivdep
  619.             do
  619.                var_in(1 + $I_A1, 1 + $I_A2) = 0.0
  619.                $I_A1 = 1 + $I_A1
  619.                if ( $I_A1 >= $F_A34 ) exit
  619.             enddo
  619.             $I_A2 = 1 + $I_A2
  619.             if ( $I_A2 >= $F_A33 ) exit
  619.          enddo
  619.       endif
  620.       $F_A35 = jmax
  620.       $F_A36 = imax
  620.       if ( and( -$F_A36, -$F_A35 ) < 0 ) then
  620.          $I_A2 = 0
  620.          do
  620.             $I_A1 = 0
  620. !dir$ ivdep
  620.             do
  620.                buffer(1 + $I_A1, 1 + $I_A2) = 0.0
  620.                $I_A1 = 1 + $I_A1
  620.                if ( $I_A1 >= $F_A36 ) exit
  620.             enddo
  620.             $I_A2 = 1 + $I_A2
  620.             if ( $I_A2 >= $F_A35 ) exit
  620.          enddo
  620.       endif
  621.       $IOLEN_result_O0 = _iolen( 3, _iolist( _iotype( buffer(+:( 1, imax, 1 ), +:( 1, jmax, 1 )), 0x402060300000000L ) ) )
  623.       ierr = 0
  622.       t$122 = nfvar
  623.        _substr(t$123,1,4) = 'OLD'
  622.        _substr(t$124,1,6) = 'DIRECT'
  622.        _substr(t$125,1,11) = 'UNFORMATTED'
  623.       t$126 = $IOLEN_result_O0
  623.        _substr(t$127,1,4) = 'READ'
  622.       t$128(1) = 0x100000000000000L
  622. !dir$ suppress t$122
  622.       t$128(2) = int( loc( t$122 ), 8 )
  622. !dir$ suppress ierr
  622.       t$128(3) = int( loc( ierr ), 8 )
  622.       t$128(4) = 0
  622. !dir$ suppress  _substr(fnameorgvar,1,_ltrim(  _substr(fnameorgvar,1,max( 0, t$48 )) ))
  622.       t$128(5) = int( loc(  _substr(fnameorgvar,1,_ltrim(  _substr(fnameorgvar,1,_len( fnameorgvar )) )) ), 8 )
  622.       t$128(6) = _ltrim(  _substr(fnameorgvar,1,_len( fnameorgvar )) )
  622. !dir$ suppress  _substr(t$123,1,3)
  622.       t$128(7) = int( loc(  _substr(t$123,1,3) ), 8 )
  622.       t$128(8) = 3
  622. !dir$ suppress  _substr(t$124,1,6)
  622.       t$128(9) = int( loc(  _substr(t$124,1,6) ), 8 )
  622.       t$128(10) = 6
  622. !dir$ suppress  _substr(t$125,1,11)
  622.       t$128(11) = int( loc(  _substr(t$125,1,11) ), 8 )
  622.       t$128(12) = 11
  622. !dir$ suppress t$126
  622.       t$128(13) = int( loc( t$126 ), 8 )
  622.       t$128(14) = 0
  622.       t$128(16) = 0
  622. !dir$ suppress  _substr(t$127,1,4)
  622.       t$128(18) = int( loc(  _substr(t$127,1,4) ), 8 )
  622.       t$128(19) = 4
  622.       t$128(20) = 0
  622.       t$128(22) = 0
  622.       t$128(24) = 0x2000200000000L
  622.       t$128(25) = 0
  622.       t$128(27) = 0
  622.       t$128(29) = 0
  622.       t$128(31) = 0
  622.       t$128(33) = 0
  622.       t$128(35) = 0
  622.       t$121 = _open( t$128 )
  625.       if ( ierr /= 0 ) then
  626.          $Unit_temp_O1 = nfprt
  626.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$12,  _substr(t$11,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnameorgvar,1,_ltrim(  _substr(fnameorgvar,1,_len( fnameorgvar )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
  628.           _substr(t$129,1,11) = '**(ERROR)**'
  628.          call _stop(  _substr(t$129,1,11) )
  628.       else
  632.          if (  _substr(igwd,1,_ltrim(  _substr(igwd,1,_len( igwd )) )) == 'YES' ) then
  633.             irec = 1
  634. !dir$ suppress var_in(1, 1)
  634.             t$130%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( var_in(1, 1) ) )
  634.             t$130%header%el_len = 64
  634.             t$130%header%assoc = 1
  634.             t$130%header%ptr_alloc = 0
  634.             t$130%header%p_or_a = 0
  634.             t$130%header%a_contig = 1
  634.             t$130%header%dv_versn = 2
  634.             t$130%header%dv_smunit = 64
  634.             t$130%header%d_type = 0
  634.             t$130%header%n_params = 0
  634.             t$130%header%pad_codim = 0
  634.             t$130%header%n_codim = 0
  634.             t$130%header%pad_dim = 0
  634.             t$130%header%n_dim = 2
  634.             t$130%header%d_type_idx = 13
  634.             t$130%header%typ_code = 134481411
  634.             t$130%header%orig_base = 0
  634.             t$130%header%orig_size = 0
  634.             t$130%dim_1%LB = 1
  634.             t$130%dim_1%EX = _zla( 0, t$9 )
  634.             t$130%dim_1%SM = 1
  634.             t$130%dim_2%LB = 1
  634.             t$130%dim_2%EX = _zla( 0, t$10 )
  634.             t$130%dim_2%SM = _zla( 0, t$9 )
  634.             call readvar8( nfvar, irec, t$130 )
  635.             if ( reducedgrid ) then
  636.                call linearijtoibjb_r2d( var_in(1, 1), (var%base_addr)(var%dim_1%LB, var%dim_2%LB, 0) )
  636.             else
  638. !dir$ suppress var_in(1, 1)
  638.                t$131%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( var_in(1, 1) ) )
  638.                t$131%header%el_len = 64
  638.                t$131%header%assoc = 1
  638.                t$131%header%ptr_alloc = 0
  638.                t$131%header%p_or_a = 0
  638.                t$131%header%a_contig = 1
  638.                t$131%header%dv_versn = 2
  638.                t$131%header%dv_smunit = 64
  638.                t$131%header%d_type = 0
  638.                t$131%header%n_params = 0
  638.                t$131%header%pad_codim = 0
  638.                t$131%header%n_codim = 0
  638.                t$131%header%pad_dim = 0
  638.                t$131%header%n_dim = 2
  638.                t$131%header%d_type_idx = 13
  638.                t$131%header%typ_code = 134481411
  638.                t$131%header%orig_base = 0
  638.                t$131%header%orig_size = 0
  638.                t$131%dim_1%LB = 1
  638.                t$131%dim_1%EX = _zla( 0, t$9 )
  638.                t$131%dim_1%SM = 1
  638.                t$131%dim_2%LB = 1
  638.                t$131%dim_2%EX = _zla( 0, t$10 )
  638.                t$131%dim_2%SM = _zla( 0, t$9 )
  638.                t$132 = var
  638.                call ijtoibjb_r( t$131, t$132 )
  638.             endif
  638.          endif
  612.          _free( t$53 )
  612.       endif
  641.       return
  641.       end
  641.       
 1016.       
 1016.       subroutine initboundcond( ibmax, jbmax, kmax, ifdy, todcld, ids, idc, ifday, tod, todsib, idate, idatec, si, sl, record_type, fnamesoiltype, fnamevegtype, fnamesoilmoist, fnamesibmsk, fnametg3zrl, ibmaxperjb )
  649.       ids%dim_1%LB = 1
  649.       idc%dim_1%LB = 1
  649.       idate%dim_1%LB = 1
  649.       idatec%dim_1%LB = 1
  649.       si%dim_1%LB = 1
  649.       sl%dim_1%LB = 1
  649.       t$59 = _len( record_type )
  649.       t$60 = _len( fnamesoiltype )
  649.       t$61 = _len( fnamevegtype )
  649.       t$62 = _len( fnamesoilmoist )
  649.       t$63 = _len( fnamesibmsk )
  649.       t$64 = _len( fnametg3zrl )
  649.       ibmaxperjb%dim_1%LB = 1
  649.       t$15 = imax
  649.       t$16 = jmax
  690.       t$65 = _zla( 0, imax )
  649.       t$66 = _zla( 0, imax )
  690.       t$67 = _zla( 0, jmax )
  649.       t$68 = _zla( 0, imax ) * _zla( 0, jmax )
  690.       t$71 = _zla( 0, imax ) * _zla( 0, jmax ) * 4
  649.       t$72 = _zla( 0, imax ) * _zla( 0, jmax )
  649.       t$73 = _zla( 0, imax ) * _zla( 0, jmax ) * 4
  689.       t$74 = 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 )
  689.       t$76 = 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 32
  691.       t$78 = 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 36
  693.       t$80 = 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 40
  692.       t$81 = 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 40
  692.       t$83 = 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 48
  694.       t$84 = 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 48
  694.       t$86 = 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 56
  649.       t$13 = ibmax
  649.       t$14 = jbmax
  685.       t$87 = _zla( 0, ibmax )
  649.       t$88 = _zla( 0, ibmax )
  685.       t$89 = _zla( 0, jbmax )
  649.       t$90 = _zla( 0, ibmax ) * _zla( 0, jbmax )
  685.       t$91 = 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 56
  685.       t$93 = _zla( 0, ibmax ) * _zla( 0, jbmax ) * 8 + 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 56
  649.       t$69 = int( _alloc( _zla( 0, ibmax ) * _zla( 0, jbmax ) * 8 + 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 56 ), 8 )
  690.       t$70 = t$69
  689.       t$75 = t$69 + 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 )
  691.       t$77 = t$69 + 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 32
  693.       t$79 = t$69 + 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 36
  692.       t$82 = t$69 + 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 40
  694.       t$85 = t$69 + 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 48
  685.       t$92 = t$69 + 8 * ( ( 7 + _zla( 0, imax ) * _zla( 0, jmax ) * 4 ) / 8 ) + _zla( 0, imax ) * _zla( 0, jmax ) * 56
  698.       $F_A34 = jmax
  698.       $F_A35 = imax
  698.       if ( and( -$F_A35, -$F_A34 ) < 0 ) then
  698.          $I_L698_446 = 0
  698.          do
  698.             $I_L698_380 = 0
  698. !dir$ ivdep
  698.             do
  698.                imask_in(1 + $I_L698_380, 1 + $I_L698_446) = 0
  698.                $I_L698_380 = 1 + $I_L698_380
  698.                if ( $I_L698_380 >= $F_A35 ) exit
  698.             enddo
  698.             $I_L698_446 = 1 + $I_L698_446
  698.             if ( $I_L698_446 >= $F_A34 ) exit
  698.          enddo
  698.       endif
  699.       $F_A36 = jmax
  699.       $F_A37 = imax
  699.       if ( and( -$F_A37, -$F_A36 ) < 0 ) then
  699.          $I_L699_448 = 0
  699.          do
  699.             $I_L699_382 = 0
  699. !dir$ ivdep
  699.             do
  699.                mskant_in(1 + $I_L699_382, 1 + $I_L699_448) = 0
  699.                $I_L699_382 = 1 + $I_L699_382
  699.                if ( $I_L699_382 >= $F_A37 ) exit
  699.             enddo
  699.             $I_L699_448 = 1 + $I_L699_448
  699.             if ( $I_L699_448 >= $F_A36 ) exit
  699.          enddo
  699.       endif
  701.       $F_A38 = jmax
  701.       $F_A39 = imax
  701.       if ( and( -$F_A39, -$F_A38 ) < 0 ) then
  701.          $I_L701_450 = 0
  701.          do
  701.             $I_L701_384 = 0
  701. !dir$ ivdep
  701.             do
  701.                ier(1 + $I_L701_384, 1 + $I_L701_450) = 0
  701.                $I_L701_384 = 1 + $I_L701_384
  701.                if ( $I_L701_384 >= $F_A39 ) exit
  701.             enddo
  701.             $I_L701_450 = 1 + $I_L701_450
  701.             if ( $I_L701_450 >= $F_A38 ) exit
  701.          enddo
  701.       endif
  700.       $F_A40 = jmax
  700.       $F_A41 = imax
  700.       if ( and( -$F_A41, -$F_A40 ) < 0 ) then
  700.          $I_L700_494 = 0
  700.          do
  700.             $I_L700_452 = 0
  700.             do
  700.                $I_L700_386 = 0
  700. !dir$ ivdep
  700.                do
  700.                   buf(1 + $I_L700_386, 1 + $I_L700_452, 1 + $I_L700_494) = 0.0
  700.                   $I_L700_386 = 1 + $I_L700_386
  700.                   if ( $I_L700_386 >= $F_A41 ) exit
  700.                enddo
  700.                $I_L700_452 = 1 + $I_L700_452
  700.                if ( $I_L700_452 >= $F_A40 ) exit
  700.             enddo
  700.             $I_L700_494 = 1 + $I_L700_494
  700.             if ( $I_L700_494 >= 4 ) exit
  700.          enddo
  700.       endif
  702.       if (  _substr(isimp,1,_ltrim(  _substr(isimp,1,4) )) /= 'YES' ) then
  703.          if ( nfcnv0 /= 0 ) then
  704.              _substr(t$133,1,19) = '**(InitBoundCond)**'
  704.              _substr(t$134,1,42) = 'Reading previous physics state for restart'
  704.             call msgone(  _substr(t$133,1,19),  _substr(t$134,1,42) )
  706.             $Unit_temp_O0 = nfcnv0
  706.             _uread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifdy, 0x2000200000000L ), _iotype( todcld, 0x804060300000000L ), _iotype( (ids%base_addr)(+:( 1, ids%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (idc%base_addr)(+:( 1, idc%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
  707.             $Unit_temp_O1 = nfcnv0
  707.             _uread( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (convc%base_addr)(+:( convc%dim_1%LB, convc%dim_1%LB + convc%dim_1%EX + -1, 1 ), +:( convc%dim_2%LB, convc%dim_2%LB + convc%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (convt%base_addr)(+:( convt%dim_1%LB, convt%dim_1%LB + convt%dim_1%EX + -1, 1 ), +:( convt%dim_2%LB, convt%dim_2%LB + convt%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (convb%base_addr)(+:( convb%dim_1%LB, convb%dim_1%LB + convb%dim_1%EX + -1, 1 ), +:( convb%dim_2%LB, convb%dim_2%LB + convb%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (prcp1%base_addr)(+:( prcp1%dim_1%LB, prcp1%dim_1%LB + prcp1%dim_1%EX + -1, 1 ), +:( prcp1%dim_2%LB, prcp1%dim_2%LB + prcp1%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (prcp2%base_addr)(+:( prcp2%dim_1%LB, prcp2%dim_1%LB + prcp2%dim_1%EX + -1, 1 ), +:( prcp2%dim_2%LB, prcp2%dim_2%LB + prcp2%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (prcp3%base_addr)(+:( prcp3%dim_1%LB, prcp3%dim_1%LB + prcp3%dim_1%EX + -1, 1 ), +:( prcp3%dim_2%LB, prcp3%dim_2%LB + prcp3%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (prcpt%base_addr)(+:( prcpt%dim_1%LB, prcpt%dim_1%LB + prcpt%dim_1%EX + -1, 1 ), +:( prcpt%dim_2%LB, prcpt%dim_2%LB + prcpt%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (toplv%base_addr)(+:( toplv%dim_1%LB, toplv%dim_1%LB + toplv%dim_1%EX + -1, 1 ), +:( toplv%dim_2%LB, toplv%dim_2%LB + toplv%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (botlv%base_addr)(+:( botlv%dim_1%LB, botlv%dim_1%LB + botlv%dim_1%EX + -1, 1 ), +:( botlv%dim_2%LB, botlv%dim_2%LB + botlv%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
  709.             if ( ifday > 0 ) then
  709.                goto 10
  709.             else if ( tod > 0.0 ) then
  709.    10          continue
  709.                $Unit_temp_O2 = nfcnv0
  709.                _uread( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (rvisdiff%base_addr)(+:( rvisdiff%dim_1%LB, rvisdiff%dim_1%LB + rvisdiff%dim_1%EX + -1, 1 ), +:( rvisdiff%dim_2%LB, rvisdiff%dim_2%LB + rvisdiff%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (rvisbeam%base_addr)(+:( rvisbeam%dim_1%LB, rvisbeam%dim_1%LB + rvisbeam%dim_1%EX + -1, 1 ), +:( rvisbeam%dim_2%LB, rvisbeam%dim_2%LB + rvisbeam%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (rnirdiff%base_addr)(+:( rnirdiff%dim_1%LB, rnirdiff%dim_1%LB + rnirdiff%dim_1%EX + -1, 1 ), +:( rnirdiff%dim_2%LB, rnirdiff%dim_2%LB + rnirdiff%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (rnirbeam%base_addr)(+:( rnirbeam%dim_1%LB, rnirbeam%dim_1%LB + rnirbeam%dim_1%EX + -1, 1 ), +:( rnirbeam%dim_2%LB, rnirbeam%dim_2%LB + rnirbeam%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (rvisdiffc%base_addr)(+:( rvisdiffc%dim_1%LB, rvisdiffc%dim_1%LB + rvisdiffc%dim_1%EX + -1, 1 ), +:( rvisdiffc%dim_2%LB, rvisdiffc%dim_2%LB + rvisdiffc%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (rvisbeamc%base_addr)(+:( rvisbeamc%dim_1%LB, rvisbeamc%dim_1%LB + rvisbeamc%dim_1%EX + -1, 1 ), +:( rvisbeamc%dim_2%LB, rvisbeamc%dim_2%LB + rvisbeamc%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (rnirdiffc%base_addr)(+:( rnirdiffc%dim_1%LB, rnirdiffc%dim_1%LB + rnirdiffc%dim_1%EX + -1, 1 ), +:( rnirdiffc%dim_2%LB, rnirdiffc%dim_2%LB + rnirdiffc%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (rnirbeamc%base_addr)(+:( rnirbeamc%dim_1%LB, rnirbeamc%dim_1%LB + rnirbeamc%dim_1%EX + -1, 1 ), +:( rnirbeamc%dim_2%LB, rnirbeamc%dim_2%LB + rnirbeamc%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (rswtoadown%base_addr)(+:( rswtoadown%dim_1%LB, rswtoadown%dim_1%LB + rswtoadown%dim_1%EX + -1, 1 ), +:( rswtoadown%dim_2%LB, rswtoadown%dim_2%LB + rswtoadown%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
  709.             endif
  712.             t$136 = nfcnv0
  712.             t$135 = __rewf( t$136, 0, 0, 0x100000000000000L, 0, 0 )
  714.             if ( nfctrl(4) > 0 ) then
  714.                $Unit_temp_O3 = nfprt
  714.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, t$26,  _substr(t$25,1,117), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifdy, 0x2000200000000L ), _iotype( todcld, 0x804060300000000L ), _iotype( (ids%base_addr)(+:( 1, ids%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (idc%base_addr)(+:( 1, idc%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
  714.             endif
  714.          else
  716.              _substr(t$137,1,19) = '**(InitBoundCond)**'
  716.              _substr(t$138,1,33) = 'Initializing prec/cloud variables'
  716.             call msgone(  _substr(t$137,1,19),  _substr(t$138,1,33) )
  717.             $F_A42 = convc%dim_2%EX
  717.             $F_A43 = convc%dim_1%EX
  717.             if ( and( -$F_A43, -$F_A42 ) < 0 ) then
  717.                $SC_convc_I177 = convc%dim_1%LB
  717.                $SC_convc_I178 = convc%dim_2%SM
  717.                $SC_convc_I179 = convc%dim_2%LB
  717.                $I_L717_454 = 0
  717.                do
  717.                   $I_L717_388 = 0
  717. !dir$ ivdep
  717.                   do
  717.                      (convc%base_addr)($SC_convc_I177 + $I_L717_388, $SC_convc_I179 + $I_L717_454, 0) = 0.0
  717.                      $I_L717_388 = 1 + $I_L717_388
  717.                      if ( $I_L717_388 >= $F_A43 ) exit
  717.                   enddo
  717.                   $I_L717_454 = 1 + $I_L717_454
  717.                   if ( $I_L717_454 >= $F_A42 ) exit
  717.                enddo
  717.             endif
  718.             $F_A44 = convt%dim_2%EX
  718.             $F_A45 = convt%dim_1%EX
  718.             if ( and( -$F_A45, -$F_A44 ) < 0 ) then
  718.                $SC_convt_I180 = convt%dim_1%LB
  718.                $SC_convt_I181 = convt%dim_2%SM
  718.                $SC_convt_I182 = convt%dim_2%LB
  718.                $I_L718_456 = 0
  718.                do
  718.                   $I_L718_390 = 0
  718. !dir$ ivdep
  718.                   do
  718.                      (convt%base_addr)($SC_convt_I180 + $I_L718_390, $SC_convt_I182 + $I_L718_456, 0) = 0.0
  718.                      $I_L718_390 = 1 + $I_L718_390
  718.                      if ( $I_L718_390 >= $F_A45 ) exit
  718.                   enddo
  718.                   $I_L718_456 = 1 + $I_L718_456
  718.                   if ( $I_L718_456 >= $F_A44 ) exit
  718.                enddo
  718.             endif
  719.             $F_A46 = convb%dim_2%EX
  719.             $F_A47 = convb%dim_1%EX
  719.             if ( and( -$F_A47, -$F_A46 ) < 0 ) then
  719.                $SC_convb_I183 = convb%dim_1%LB
  719.                $SC_convb_I184 = convb%dim_2%SM
  719.                $SC_convb_I185 = convb%dim_2%LB
  719.                $I_L719_458 = 0
  719.                do
  719.                   $I_L719_392 = 0
  719. !dir$ ivdep
  719.                   do
  719.                      (convb%base_addr)($SC_convb_I183 + $I_L719_392, $SC_convb_I185 + $I_L719_458, 0) = 0.0
  719.                      $I_L719_392 = 1 + $I_L719_392
  719.                      if ( $I_L719_392 >= $F_A47 ) exit
  719.                   enddo
  719.                   $I_L719_458 = 1 + $I_L719_458
  719.                   if ( $I_L719_458 >= $F_A46 ) exit
  719.                enddo
  719.             endif
  720.             $F_A48 = prcp1%dim_2%EX
  720.             $F_A49 = prcp1%dim_1%EX
  720.             if ( and( -$F_A49, -$F_A48 ) < 0 ) then
  720.                $SC_prcp1_I186 = prcp1%dim_1%LB
  720.                $SC_prcp1_I187 = prcp1%dim_2%SM
  720.                $SC_prcp1_I188 = prcp1%dim_2%LB
  720.                $I_L720_460 = 0
  720.                do
  720.                   $I_L720_394 = 0
  720. !dir$ ivdep
  720.                   do
  720.                      (prcp1%base_addr)($SC_prcp1_I186 + $I_L720_394, $SC_prcp1_I188 + $I_L720_460, 0) = 0.0
  720.                      $I_L720_394 = 1 + $I_L720_394
  720.                      if ( $I_L720_394 >= $F_A49 ) exit
  720.                   enddo
  720.                   $I_L720_460 = 1 + $I_L720_460
  720.                   if ( $I_L720_460 >= $F_A48 ) exit
  720.                enddo
  720.             endif
  721.             $F_A50 = prcp2%dim_2%EX
  721.             $F_A51 = prcp2%dim_1%EX
  721.             if ( and( -$F_A51, -$F_A50 ) < 0 ) then
  721.                $SC_prcp2_I189 = prcp2%dim_1%LB
  721.                $SC_prcp2_I190 = prcp2%dim_2%SM
  721.                $SC_prcp2_I191 = prcp2%dim_2%LB
  721.                $I_L721_462 = 0
  721.                do
  721.                   $I_L721_396 = 0
  721. !dir$ ivdep
  721.                   do
  721.                      (prcp2%base_addr)($SC_prcp2_I189 + $I_L721_396, $SC_prcp2_I191 + $I_L721_462, 0) = 0.0
  721.                      $I_L721_396 = 1 + $I_L721_396
  721.                      if ( $I_L721_396 >= $F_A51 ) exit
  721.                   enddo
  721.                   $I_L721_462 = 1 + $I_L721_462
  721.                   if ( $I_L721_462 >= $F_A50 ) exit
  721.                enddo
  721.             endif
  722.             $F_A52 = prcp3%dim_2%EX
  722.             $F_A53 = prcp3%dim_1%EX
  722.             if ( and( -$F_A53, -$F_A52 ) < 0 ) then
  722.                $SC_prcp3_I192 = prcp3%dim_1%LB
  722.                $SC_prcp3_I193 = prcp3%dim_2%SM
  722.                $SC_prcp3_I194 = prcp3%dim_2%LB
  722.                $I_L722_464 = 0
  722.                do
  722.                   $I_L722_398 = 0
  722. !dir$ ivdep
  722.                   do
  722.                      (prcp3%base_addr)($SC_prcp3_I192 + $I_L722_398, $SC_prcp3_I194 + $I_L722_464, 0) = 0.0
  722.                      $I_L722_398 = 1 + $I_L722_398
  722.                      if ( $I_L722_398 >= $F_A53 ) exit
  722.                   enddo
  722.                   $I_L722_464 = 1 + $I_L722_464
  722.                   if ( $I_L722_464 >= $F_A52 ) exit
  722.                enddo
  722.             endif
  723.             $F_A54 = prcpt%dim_2%EX
  723.             $F_A55 = prcpt%dim_1%EX
  723.             if ( and( -$F_A55, -$F_A54 ) < 0 ) then
  723.                $SC_prcpt_I195 = prcpt%dim_1%LB
  723.                $SC_prcpt_I196 = prcpt%dim_2%SM
  723.                $SC_prcpt_I197 = prcpt%dim_2%LB
  723.                $I_L723_466 = 0
  723.                do
  723.                   $I_L723_400 = 0
  723. !dir$ ivdep
  723.                   do
  723.                      (prcpt%base_addr)($SC_prcpt_I195 + $I_L723_400, $SC_prcpt_I197 + $I_L723_466, 0) = 0.0
  723.                      $I_L723_400 = 1 + $I_L723_400
  723.                      if ( $I_L723_400 >= $F_A55 ) exit
  723.                   enddo
  723.                   $I_L723_466 = 1 + $I_L723_466
  723.                   if ( $I_L723_466 >= $F_A54 ) exit
  723.                enddo
  723.             endif
  724.             $F_A56 = toplv%dim_2%EX
  724.             $F_A57 = toplv%dim_1%EX
  724.             if ( and( -$F_A57, -$F_A56 ) < 0 ) then
  724.                $SC_toplv_I198 = toplv%dim_1%LB
  724.                $SC_toplv_I199 = toplv%dim_2%SM
  724.                $SC_toplv_I200 = toplv%dim_2%LB
  724.                $I_L724_468 = 0
  724.                do
  724.                   $I_L724_402 = 0
  724. !dir$ ivdep
  724.                   do
  724.                      (toplv%base_addr)($SC_toplv_I198 + $I_L724_402, $SC_toplv_I200 + $I_L724_468, 0) = 0.0
  724.                      $I_L724_402 = 1 + $I_L724_402
  724.                      if ( $I_L724_402 >= $F_A57 ) exit
  724.                   enddo
  724.                   $I_L724_468 = 1 + $I_L724_468
  724.                   if ( $I_L724_468 >= $F_A56 ) exit
  724.                enddo
  724.             endif
  725.             $F_A58 = botlv%dim_2%EX
  725.             $F_A59 = botlv%dim_1%EX
  725.             if ( and( -$F_A59, -$F_A58 ) < 0 ) then
  725.                $SC_botlv_I201 = botlv%dim_1%LB
  725.                $SC_botlv_I202 = botlv%dim_2%SM
  725.                $SC_botlv_I203 = botlv%dim_2%LB
  725.                $I_L725_470 = 0
  725.                do
  725.                   $I_L725_404 = 0
  725. !dir$ ivdep
  725.                   do
  725.                      (botlv%base_addr)($SC_botlv_I201 + $I_L725_404, $SC_botlv_I203 + $I_L725_470, 0) = 0.0
  725.                      $I_L725_404 = 1 + $I_L725_404
  725.                      if ( $I_L725_404 >= $F_A59 ) exit
  725.                   enddo
  725.                   $I_L725_470 = 1 + $I_L725_470
  725.                   if ( $I_L725_470 >= $F_A58 ) exit
  725.                enddo
  725.             endif
  725.          endif
  728.          $F_A60 = sheleg%dim_2%EX
  728.          $F_A61 = sheleg%dim_1%EX
  728.          if ( and( -$F_A61, -$F_A60 ) < 0 ) then
  728.             $SC_sheleg_I204 = sheleg%dim_1%LB
  728.             $SC_sheleg_I205 = sheleg%dim_2%SM
  728.             $SC_sheleg_I206 = sheleg%dim_2%LB
  728.             $I_L728_472 = 0
  728.             do
  728.                $I_L728_406 = 0
  728. !dir$ ivdep
  728.                do
  728.                   (sheleg%base_addr)($SC_sheleg_I204 + $I_L728_406, $SC_sheleg_I206 + $I_L728_472, 0) = 0.0
  728.                   $I_L728_406 = 1 + $I_L728_406
  728.                   if ( $I_L728_406 >= $F_A61 ) exit
  728.                enddo
  728.                $I_L728_472 = 1 + $I_L728_472
  728.                if ( $I_L728_472 >= $F_A60 ) exit
  728.             enddo
  728.          endif
  730.          call vegin( (si%base_addr)(1, 0), (sl%base_addr)(1, 0) )
  731.          $F_A62 = t$16
  731.          $F_A63 = t$15
  731.          if ( and( -$F_A63, -$F_A62 ) < 0 ) then
  731.             $I_L731_474 = 0
  731.             do
  731.                $I_L731_408 = 0
  731. !dir$ ivdep
  731.                do
  731.                   ibuf(1 + $I_L731_408, 1 + $I_L731_474) = 0
  731.                   $I_L731_408 = 1 + $I_L731_408
  731.                   if ( $I_L731_408 >= $F_A63 ) exit
  731.                enddo
  731.                $I_L731_474 = 1 + $I_L731_474
  731.                if ( $I_L731_474 >= $F_A62 ) exit
  731.             enddo
  731.          endif
  732.          $IOLEN_result_O4 = _iolen( 3, _iolist( _iotype( ibuf(+:( 1, t$15, 1 ), +:( 1, t$16, 1 )), 0x2000200000000L ) ) )
  734.          ierr = 0
  733.          t$136 = nfsibt
  734.           _substr(t$141,1,4) = 'OLD'
  733.           _substr(t$142,1,6) = 'DIRECT'
  733.           _substr(t$143,1,11) = 'UNFORMATTED'
  733.          t$144 = $IOLEN_result_O4
  734.           _substr(t$145,1,4) = 'READ'
  733.          t$146(1) = 0x100000000000000L
  733. !dir$ suppress t$136
  733.          t$146(2) = int( loc( t$136 ), 8 )
  733. !dir$ suppress ierr
  733.          t$146(3) = int( loc( ierr ), 8 )
  733.          t$146(4) = 0
  733. !dir$ suppress  _substr(fnamesibmsk,1,_ltrim(  _substr(fnamesibmsk,1,max( 0, t$63 )) ))
  733.          t$146(5) = int( loc(  _substr(fnamesibmsk,1,_ltrim(  _substr(fnamesibmsk,1,_len( fnamesibmsk )) )) ), 8 )
  733.          t$146(6) = _ltrim(  _substr(fnamesibmsk,1,_len( fnamesibmsk )) )
  733. !dir$ suppress  _substr(t$141,1,3)
  733.          t$146(7) = int( loc(  _substr(t$141,1,3) ), 8 )
  733.          t$146(8) = 3
  733. !dir$ suppress  _substr(t$142,1,6)
  733.          t$146(9) = int( loc(  _substr(t$142,1,6) ), 8 )
  733.          t$146(10) = 6
  733. !dir$ suppress  _substr(t$143,1,11)
  733.          t$146(11) = int( loc(  _substr(t$143,1,11) ), 8 )
  733.          t$146(12) = 11
  733. !dir$ suppress t$144
  733.          t$146(13) = int( loc( t$144 ), 8 )
  733.          t$146(14) = 0
  733.          t$146(16) = 0
  733. !dir$ suppress  _substr(t$145,1,4)
  733.          t$146(18) = int( loc(  _substr(t$145,1,4) ), 8 )
  733.          t$146(19) = 4
  733.          t$146(20) = 0
  733.          t$146(22) = 0
  733.          t$146(24) = 0x2000200000000L
  733.          t$146(25) = 0
  733.          t$146(27) = 0
  733.          t$146(29) = 0
  733.          t$146(31) = 0
  733.          t$146(33) = 0
  733.          t$146(35) = 0
  733.          t$140 = _open( t$146 )
  735.          if ( ierr /= 0 ) then
  736.             $Unit_temp_O5 = nfprt
  736.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, t$18,  _substr(t$17,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamesibmsk,1,_ltrim(  _substr(fnamesibmsk,1,_len( fnamesibmsk )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
  738.              _substr(t$147,1,11) = '**(ERROR)**'
  738.             call _stop(  _substr(t$147,1,11) )
  738.          else
  740.             $F_A64 = t$16
  740.             $F_A65 = t$15
  740.             if ( and( -$F_A65, -$F_A64 ) < 0 ) then
  740.                $I_L740_476 = 0
  740.                do
  740.                   $I_L740_410 = 0
  740. !dir$ ivdep
  740.                   do
  740.                      brf(1 + $I_L740_410, 1 + $I_L740_476) = 0.0
  740.                      $I_L740_410 = 1 + $I_L740_410
  740.                      if ( $I_L740_410 >= $F_A65 ) exit
  740.                   enddo
  740.                   $I_L740_476 = 1 + $I_L740_476
  740.                   if ( $I_L740_476 >= $F_A64 ) exit
  740.                enddo
  740.             endif
  741.             $IOLEN_result_O6 = _iolen( 3, _iolist( _iotype( brf(+:( 1, t$15, 1 ), +:( 1, t$16, 1 )), 0x402060300000000L ) ) )
  743.             ierr = 0
  742.             t$136 = nftgz0
  743.              _substr(t$150,1,4) = 'OLD'
  742.              _substr(t$151,1,6) = 'DIRECT'
  742.              _substr(t$152,1,11) = 'UNFORMATTED'
  742.             t$144 = $IOLEN_result_O6
  743.              _substr(t$153,1,4) = 'READ'
  742.             t$154(1) = 0x100000000000000L
  742. !dir$ suppress t$136
  742.             t$154(2) = int( loc( t$136 ), 8 )
  742. !dir$ suppress ierr
  742.             t$154(3) = int( loc( ierr ), 8 )
  742.             t$154(4) = 0
  742. !dir$ suppress  _substr(fnametg3zrl,1,_ltrim(  _substr(fnametg3zrl,1,max( 0, t$64 )) ))
  742.             t$154(5) = int( loc(  _substr(fnametg3zrl,1,_ltrim(  _substr(fnametg3zrl,1,_len( fnametg3zrl )) )) ), 8 )
  742.             t$154(6) = _ltrim(  _substr(fnametg3zrl,1,_len( fnametg3zrl )) )
  742. !dir$ suppress  _substr(t$150,1,3)
  742.             t$154(7) = int( loc(  _substr(t$150,1,3) ), 8 )
  742.             t$154(8) = 3
  742. !dir$ suppress  _substr(t$151,1,6)
  742.             t$154(9) = int( loc(  _substr(t$151,1,6) ), 8 )
  742.             t$154(10) = 6
  742. !dir$ suppress  _substr(t$152,1,11)
  742.             t$154(11) = int( loc(  _substr(t$152,1,11) ), 8 )
  742.             t$154(12) = 11
  742. !dir$ suppress t$144
  742.             t$154(13) = int( loc( t$144 ), 8 )
  742.             t$154(14) = 0
  742.             t$154(16) = 0
  742. !dir$ suppress  _substr(t$153,1,4)
  742.             t$154(18) = int( loc(  _substr(t$153,1,4) ), 8 )
  742.             t$154(19) = 4
  742.             t$154(20) = 0
  742.             t$154(22) = 0
  742.             t$154(24) = 0x2000200000000L
  742.             t$154(25) = 0
  742.             t$154(27) = 0
  742.             t$154(29) = 0
  742.             t$154(31) = 0
  742.             t$154(33) = 0
  742.             t$154(35) = 0
  742.             t$149 = _open( t$154 )
  744.             if ( ierr /= 0 ) then
  745.                $Unit_temp_O7 = nfprt
  745.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O7, Null_Arg, Null_Arg, t$20,  _substr(t$19,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnametg3zrl,1,_ltrim(  _substr(fnametg3zrl,1,_len( fnametg3zrl )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
  747.                 _substr(t$155,1,11) = '**(ERROR)**'
  747.                call _stop(  _substr(t$155,1,11) )
  747.             else
  750.                $IOLEN_result_O8 = _iolen( 3, _iolist( _iotype( brf(+:( 1, t$15, 1 ), +:( 1, t$16, 1 )), 0x402060300000000L ) ) )
  752.                ierr = 0
  751.                t$136 = nfzol
  752.                 _substr(t$158,1,4) = 'OLD'
  751.                 _substr(t$159,1,6) = 'DIRECT'
  751.                 _substr(t$160,1,11) = 'UNFORMATTED'
  751.                t$144 = $IOLEN_result_O8
  752.                 _substr(t$161,1,4) = 'READ'
  751.                t$162(1) = 0x100000000000000L
  751. !dir$ suppress t$136
  751.                t$162(2) = int( loc( t$136 ), 8 )
  751. !dir$ suppress ierr
  751.                t$162(3) = int( loc( ierr ), 8 )
  751.                t$162(4) = 0
  751. !dir$ suppress  _substr(fnameroulen,1,_ltrim(  _substr(fnameroulen,1,255) ))
  751.                t$162(5) = int( loc(  _substr(fnameroulen,1,_ltrim(  _substr(fnameroulen,1,255) )) ), 8 )
  751.                t$162(6) = _ltrim(  _substr(fnameroulen,1,255) )
  751. !dir$ suppress  _substr(t$158,1,3)
  751.                t$162(7) = int( loc(  _substr(t$158,1,3) ), 8 )
  751.                t$162(8) = 3
  751. !dir$ suppress  _substr(t$159,1,6)
  751.                t$162(9) = int( loc(  _substr(t$159,1,6) ), 8 )
  751.                t$162(10) = 6
  751. !dir$ suppress  _substr(t$160,1,11)
  751.                t$162(11) = int( loc(  _substr(t$160,1,11) ), 8 )
  751.                t$162(12) = 11
  751. !dir$ suppress t$144
  751.                t$162(13) = int( loc( t$144 ), 8 )
  751.                t$162(14) = 0
  751.                t$162(16) = 0
  751. !dir$ suppress  _substr(t$161,1,4)
  751.                t$162(18) = int( loc(  _substr(t$161,1,4) ), 8 )
  751.                t$162(19) = 4
  751.                t$162(20) = 0
  751.                t$162(22) = 0
  751.                t$162(24) = 0x2000200000000L
  751.                t$162(25) = 0
  751.                t$162(27) = 0
  751.                t$162(29) = 0
  751.                t$162(31) = 0
  751.                t$162(33) = 0
  751.                t$162(35) = 0
  751.                t$157 = _open( t$162 )
  753.                if ( ierr /= 0 ) then
  754.                   $Unit_temp_O9 = nfprt
  754.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O9, Null_Arg, Null_Arg, t$22,  _substr(t$21,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnameroulen,1,_ltrim(  _substr(fnameroulen,1,255) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
  756.                    _substr(t$163,1,11) = '**(ERROR)**'
  756.                   call _stop(  _substr(t$163,1,11) )
  756.                else
  762.                   $Unit_temp_O10 = nfsibt
  762.                   _uread( _clist( 0, 0, 3, $Unit_temp_O10, Null_Arg, 1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ibuf(+:( 1, t$15, 1 ), +:( 1, t$16, 1 )), 0x2000200000000L ) ) )
  763.                   $F_A66 = t$16
  763.                   $F_A67 = t$15
  763.                   if ( and( -$F_A67, -$F_A66 ) < 0 ) then
  763.                      $I_L763_478 = 0
  763.                      do
  763.                         $I_L763_412 = 0
  763. !dir$ ivdep
  763.                         do
  763.                            imask_in(1 + $I_L763_412, 1 + $I_L763_478) = ibuf(1 + $I_L763_412, 1 + $I_L763_478)
  763.                            $I_L763_412 = 1 + $I_L763_412
  763.                            if ( $I_L763_412 >= $F_A67 ) exit
  763.                         enddo
  763.                         $I_L763_478 = 1 + $I_L763_478
  763.                         if ( $I_L763_478 >= $F_A66 ) exit
  763.                      enddo
  763.                   endif
  772.                   if ( iglsm_w == 1 ) then
  773.                      t$164 = ibmaxperjb
  773.                      call read_gl_sm_bc( imax, jmax, jbmax, t$164,  _substr(record_type,1,_len( record_type )),  _substr(fnamesoiltype,1,_len( fnamesoiltype )),  _substr(fnamevegtype,1,_len( fnamevegtype )),  _substr(fnamesoilmoist,1,_len( fnamesoilmoist )), imask_in(1, 1) )
  773.                   endif
  789.                   if ( reducedgrid ) then
  790.                      call freqboxijtoibjb_i2d( imask_in(1, 1), (imask%base_addr)(imask%dim_1%LB, imask%dim_2%LB, 0) )
  790.                   else
  792. !dir$ suppress imask_in(1, 1)
  792.                      t$165%base_addr = pointer to array[1] of array[1] of integer (kind=8)( loc( imask_in(1, 1) ) )
  792.                      t$165%header%el_len = 64
  792.                      t$165%header%assoc = 1
  792.                      t$165%header%ptr_alloc = 0
  792.                      t$165%header%p_or_a = 0
  792.                      t$165%header%a_contig = 1
  792.                      t$165%header%dv_versn = 2
  792.                      t$165%header%dv_smunit = 64
  792.                      t$165%header%d_type = 0
  792.                      t$165%header%n_params = 0
  792.                      t$165%header%pad_codim = 0
  792.                      t$165%header%n_codim = 0
  792.                      t$165%header%pad_dim = 0
  792.                      t$165%header%n_dim = 2
  792.                      t$165%header%d_type_idx = 11
  792.                      t$165%header%typ_code = 134481410
  792.                      t$165%header%orig_base = 0
  792.                      t$165%header%orig_size = 0
  792.                      t$165%dim_1%LB = 1
  792.                      t$165%dim_1%EX = _zla( 0, t$15 )
  792.                      t$165%dim_1%SM = 1
  792.                      t$165%dim_2%LB = 1
  792.                      t$165%dim_2%EX = _zla( 0, t$16 )
  792.                      t$165%dim_2%SM = _zla( 0, t$15 )
  792.                      t$166 = imask
  792.                      call ijtoibjb_i( t$165, t$166 )
  792.                   endif
  795.                   if ( jmax > 0 ) then
  795.                      $I_L795_438 = 0
  795.                      do
  796.                         if ( imax > 0 ) then
  796.                            $I_L796_368 = 0
  796. !dir$ ivdep
  796.                            do
  797.                               ier(1 + $I_L796_368, 1 + $I_L795_438) = imask_in(1 + $I_L796_368, 1 + $I_L795_438) <= 0
  802.                               $I_L796_368 = 1 + $I_L796_368
  796.                               if ( $I_L796_368 >= imax ) exit
  796.                            enddo
  796.                         endif
  803.                         $Reduc_A68 = .false.
  803.                         $F_A70 = imax
  803.                         if ( imax > 0 ) then
  803.                            $I_L803_414 = 0
  803. !dir$ ivdep
  803.                            do
  803.                               if ( ier(1 + $I_L803_414, 1 + $I_L795_438) /= 0 ) then
  803.                                  $Reduc_A68 = .true.
  803.                                  goto 20
  803.                               endif
  803.                               $I_L803_414 = 1 + $I_L803_414
  803.                               if ( $I_L803_414 >= $F_A70 ) exit
  803.                            enddo
  803.                         endif
  803.    20                   continue
  803.                         if ( $Reduc_A68 ) then
  804.                            if ( imax > 0 ) then
  804.                               $I_L804_370 = 0
  804. !dir$ ivdep
  804.                               do
  805.                                  mskant_in(1 + $I_L804_370, 1 + $I_L795_438) = 1
  806.                                  $I_L804_370 = 1 + $I_L804_370
  804.                                  if ( $I_L804_370 >= imax ) exit
  804.                               enddo
  804.                            endif
  804.                         else if ( imax > 0 ) then
  808.                            $I_L808_372 = 0
  808. !dir$ ivdep
  808.                            do
  809.                               mskant_in(1 + $I_L808_372, 1 + $I_L795_438) = 0
  810.                               $I_L808_372 = 1 + $I_L808_372
  808.                               if ( $I_L808_372 >= imax ) exit
  808.                            enddo
  808.                         endif
  812.                         $I_L795_438 = 1 + $I_L795_438
  811.                         if ( $I_L795_438 >= jmax ) exit
  811.                      enddo
  811.                   endif
  813.                   if ( reducedgrid ) then
  814.                      call freqboxijtoibjb_i2d( mskant_in(1, 1), (mskant%base_addr)(mskant%dim_1%LB, mskant%dim_2%LB, 0) )
  814.                   else
  816. !dir$ suppress mskant_in(1, 1)
  816.                      t$179%base_addr = pointer to array[1] of array[1] of integer (kind=8)( loc( mskant_in(1, 1) ) )
  816.                      t$179%header%el_len = 64
  816.                      t$179%header%assoc = 1
  816.                      t$179%header%ptr_alloc = 0
  816.                      t$179%header%p_or_a = 0
  816.                      t$179%header%a_contig = 1
  816.                      t$179%header%dv_versn = 2
  816.                      t$179%header%dv_smunit = 64
  816.                      t$179%header%d_type = 0
  816.                      t$179%header%n_params = 0
  816.                      t$179%header%pad_codim = 0
  816.                      t$179%header%n_codim = 0
  816.                      t$179%header%pad_dim = 0
  816.                      t$179%header%n_dim = 2
  816.                      t$179%header%d_type_idx = 11
  816.                      t$179%header%typ_code = 134481410
  816.                      t$179%header%orig_base = 0
  816.                      t$179%header%orig_size = 0
  816.                      t$179%dim_1%LB = 1
  816.                      t$179%dim_1%EX = _zla( 0, t$15 )
  816.                      t$179%dim_1%SM = 1
  816.                      t$179%dim_2%LB = 1
  816.                      t$179%dim_2%EX = _zla( 0, t$16 )
  816.                      t$179%dim_2%SM = _zla( 0, t$15 )
  816.                      t$180 = mskant
  816.                      call ijtoibjb_i( t$179, t$180 )
  816.                   endif
  824.                   if ( ifday /= 0 ) then
  817.                      goto 30
  817.                   else if ( tod /= 0.0 ) then
  817.                      goto 30
  817.                   else if ( initlz >= 0 ) then
  826.                       _substr(t$181,1,19) = '**(InitBoundCond)**'
  826.                       _substr(t$182,1,25) = 'Cold start SSib variables'
  826.                      call msgone(  _substr(t$181,1,19),  _substr(t$182,1,25) )
  829.                      t$184 = 0
  829.                      t$187 = 0
  829.                      if ( idate%header%a_contig == 1 ) then
  829. !dir$ suppress (idate%base_addr)(1, 0)
  829.                         t$183 = loc( (idate%base_addr)(1, 0) )
  829.                      else
  829.                         t$184 = idate%dim_1%EX
  829.                         t$187 = int( _alloc( max( 0, 4 * max( 0, idate%dim_1%EX ) ) ), 8 )
  829.                         $F_A71 = idate%dim_1%EX
  829.                         if ( idate%dim_1%EX > 0 ) then
  829.                            $SC_idate_I207 = idate%dim_1%SM
  829.                            $SC_idate_I208 = idate%dim_1%LB
  829.                            $I_L829_416 = 0
  829. !dir$ ivdep
  829.                            do
  829.                               t$186(1 + $I_L829_416) = (idate%base_addr)(1 + $I_L829_416, 0)
  829.                               $I_L829_416 = 1 + $I_L829_416
  829.                               if ( $I_L829_416 >= $F_A71 ) exit
  829.                            enddo
  829.                         endif
  829. !dir$ suppress t$186
  829.                         t$183 = loc( t$186 )
  829.                      endif
  829.                      t$189 = 0
  829.                      t$192 = 0
  829.                      if ( idatec%header%a_contig == 1 ) then
  829. !dir$ suppress (idatec%base_addr)(1, 0)
  829.                         t$188 = loc( (idatec%base_addr)(1, 0) )
  829.                      else
  829.                         t$189 = idatec%dim_1%EX
  829.                         t$192 = int( _alloc( max( 0, 4 * max( 0, idatec%dim_1%EX ) ) ), 8 )
  829.                         $F_A72 = idatec%dim_1%EX
  829.                         if ( idatec%dim_1%EX > 0 ) then
  829.                            $SC_idatec_I209 = idatec%dim_1%SM
  829.                            $SC_idatec_I210 = idatec%dim_1%LB
  829.                            $I_L829_418 = 0
  829. !dir$ ivdep
  829.                            do
  829.                               t$191(1 + $I_L829_418) = (idatec%base_addr)(1 + $I_L829_418, 0)
  829.                               $I_L829_418 = 1 + $I_L829_418
  829.                               if ( $I_L829_418 >= $F_A72 ) exit
  829.                            enddo
  829.                         endif
  829. !dir$ suppress t$191
  829.                         t$188 = loc( t$191 )
  829.                      endif
  828.                      t$193 = ibmaxperjb
  828.                      call getsbc( imax, jmax, kmax, (albvisdiff%base_addr)(albvisdiff%dim_1%LB, albvisdiff%dim_2%LB, 0), (gtsea%base_addr)(gtsea%dim_1%LB, gtsea%dim_2%LB, 0), (soilm%base_addr)(soilm%dim_1%LB, soilm%dim_2%LB, 0), (sheleg%base_addr)(sheleg%dim_1%LB, sheleg%dim_2%LB, 0), (o3mix%base_addr)(o3mix%dim_1%LB, o3mix%dim_2%LB, o3mix%dim_3%LB, 0), ifday, tod, t$183, t$188, ifalb, ifsst, ifslm, ifsnw, ifozone, sstlag, intsst, fint, tice, yrl, monl(1), ibmax, jbmax, t$193 )
  829.                      if ( idatec%header%a_contig /= 1 ) then
  829.                         _free( t$192 )
  829.                      endif
  829.                      if ( idate%header%a_contig /= 1 ) then
  829.                         _free( t$187 )
  829.                      endif
  833.                      irec = 1
  834. !dir$ suppress buf(1, 1, 1)
  834.                      t$194%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 1) ) )
  834.                      t$194%header%el_len = 64
  834.                      t$194%header%assoc = 1
  834.                      t$194%header%ptr_alloc = 0
  834.                      t$194%header%p_or_a = 0
  834.                      t$194%header%a_contig = 1
  834.                      t$194%header%dv_versn = 2
  834.                      t$194%header%dv_smunit = 64
  834.                      t$194%header%d_type = 0
  834.                      t$194%header%n_params = 0
  834.                      t$194%header%pad_codim = 0
  834.                      t$194%header%n_codim = 0
  834.                      t$194%header%pad_dim = 0
  834.                      t$194%header%n_dim = 2
  834.                      t$194%header%d_type_idx = 13
  834.                      t$194%header%typ_code = 134481411
  834.                      t$194%header%orig_base = 0
  834.                      t$194%header%orig_size = 0
  834.                      t$194%dim_1%LB = 1
  834.                      t$194%dim_1%EX = ( max( 0, t$15 ) )
  834.                      t$194%dim_1%SM = 1
  834.                      t$194%dim_2%LB = 1
  834.                      t$194%dim_2%EX = ( max( 0, t$16 ) )
  834.                      t$194%dim_2%SM = _zla( 0, t$15 )
  834. !dir$ suppress buf(1, 1, 2)
  834.                      t$195%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 2) ) )
  834.                      t$195%header%el_len = 64
  834.                      t$195%header%assoc = 1
  834.                      t$195%header%ptr_alloc = 0
  834.                      t$195%header%p_or_a = 0
  834.                      t$195%header%a_contig = 1
  834.                      t$195%header%dv_versn = 2
  834.                      t$195%header%dv_smunit = 64
  834.                      t$195%header%d_type = 0
  834.                      t$195%header%n_params = 0
  834.                      t$195%header%pad_codim = 0
  834.                      t$195%header%n_codim = 0
  834.                      t$195%header%pad_dim = 0
  834.                      t$195%header%n_dim = 2
  834.                      t$195%header%d_type_idx = 13
  834.                      t$195%header%typ_code = 134481411
  834.                      t$195%header%orig_base = 0
  834.                      t$195%header%orig_size = 0
  834.                      t$195%dim_1%LB = 1
  834.                      t$195%dim_1%EX = ( max( 0, t$15 ) )
  834.                      t$195%dim_1%SM = 1
  834.                      t$195%dim_2%LB = 1
  834.                      t$195%dim_2%EX = ( max( 0, t$16 ) )
  834.                      t$195%dim_2%SM = _zla( 0, t$15 )
  834. !dir$ suppress buf(1, 1, 3)
  834.                      t$196%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 3) ) )
  834.                      t$196%header%el_len = 64
  834.                      t$196%header%assoc = 1
  834.                      t$196%header%ptr_alloc = 0
  834.                      t$196%header%p_or_a = 0
  834.                      t$196%header%a_contig = 1
  834.                      t$196%header%dv_versn = 2
  834.                      t$196%header%dv_smunit = 64
  834.                      t$196%header%d_type = 0
  834.                      t$196%header%n_params = 0
  834.                      t$196%header%pad_codim = 0
  834.                      t$196%header%n_codim = 0
  834.                      t$196%header%pad_dim = 0
  834.                      t$196%header%n_dim = 2
  834.                      t$196%header%d_type_idx = 13
  834.                      t$196%header%typ_code = 134481411
  834.                      t$196%header%orig_base = 0
  834.                      t$196%header%orig_size = 0
  834.                      t$196%dim_1%LB = 1
  834.                      t$196%dim_1%EX = ( max( 0, t$15 ) )
  834.                      t$196%dim_1%SM = 1
  834.                      t$196%dim_2%LB = 1
  834.                      t$196%dim_2%EX = ( max( 0, t$16 ) )
  834.                      t$196%dim_2%SM = _zla( 0, t$15 )
  834.                      call readnftgz4( nftgz0, irec, t$194, t$195, t$196 )
  835.                      $Unit_temp_O11 = nfzol
  835.                      _uread( _clist( 0, 0, 3, $Unit_temp_O11, Null_Arg, 1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( brf(+:( 1, t$15, 1 ), +:( 1, t$16, 1 )), 0x402060300000000L ) ) )
  837.                      $F_A73 = jmax
  837.                      $F_A74 = imax
  837.                      if ( and( -$F_A74, -$F_A73 ) < 0 ) then
  837.                         $I_L837_480 = 0
  837.                         do
  837.                            $I_L837_420 = 0
  837. !dir$ ivdep
  837.                            do
  837.                               buf(1 + $I_L837_420, 1 + $I_L837_480, 4) = real( brf(1 + $I_L837_420, 1 + $I_L837_480), 8 )
  837.                               $I_L837_420 = 1 + $I_L837_420
  837.                               if ( $I_L837_420 >= $F_A74 ) exit
  837.                            enddo
  837.                            $I_L837_480 = 1 + $I_L837_480
  837.                            if ( $I_L837_480 >= $F_A73 ) exit
  837.                         enddo
  837.                      endif
  838.                      if ( reducedgrid ) then
  839.                         call aveboxijtoibjb_r2d( buf(1, 1, 1), (tg1%base_addr)(tg1%dim_1%LB, tg1%dim_2%LB, 0) )
  839.                      else
  841. !dir$ suppress buf(1, 1, 1)
  841.                         t$197%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 1) ) )
  841.                         t$197%header%el_len = 64
  841.                         t$197%header%assoc = 1
  841.                         t$197%header%ptr_alloc = 0
  841.                         t$197%header%p_or_a = 0
  841.                         t$197%header%a_contig = 1
  841.                         t$197%header%dv_versn = 2
  841.                         t$197%header%dv_smunit = 64
  841.                         t$197%header%d_type = 0
  841.                         t$197%header%n_params = 0
  841.                         t$197%header%pad_codim = 0
  841.                         t$197%header%n_codim = 0
  841.                         t$197%header%pad_dim = 0
  841.                         t$197%header%n_dim = 2
  841.                         t$197%header%d_type_idx = 13
  841.                         t$197%header%typ_code = 134481411
  841.                         t$197%header%orig_base = 0
  841.                         t$197%header%orig_size = 0
  841.                         t$197%dim_1%LB = 1
  841.                         t$197%dim_1%EX = ( max( 0, t$15 ) )
  841.                         t$197%dim_1%SM = 1
  841.                         t$197%dim_2%LB = 1
  841.                         t$197%dim_2%EX = ( max( 0, t$16 ) )
  841.                         t$197%dim_2%SM = _zla( 0, t$15 )
  841.                         t$198 = tg1
  841.                         call ijtoibjb_r( t$197, t$198 )
  841.                      endif
  844.                      if ( reducedgrid ) then
  845.                         call aveboxijtoibjb_r2d( buf(1, 1, 2), (tg2%base_addr)(tg2%dim_1%LB, tg2%dim_2%LB, 0) )
  845.                      else
  847. !dir$ suppress buf(1, 1, 2)
  847.                         t$199%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 2) ) )
  847.                         t$199%header%el_len = 64
  847.                         t$199%header%assoc = 1
  847.                         t$199%header%ptr_alloc = 0
  847.                         t$199%header%p_or_a = 0
  847.                         t$199%header%a_contig = 1
  847.                         t$199%header%dv_versn = 2
  847.                         t$199%header%dv_smunit = 64
  847.                         t$199%header%d_type = 0
  847.                         t$199%header%n_params = 0
  847.                         t$199%header%pad_codim = 0
  847.                         t$199%header%n_codim = 0
  847.                         t$199%header%pad_dim = 0
  847.                         t$199%header%n_dim = 2
  847.                         t$199%header%d_type_idx = 13
  847.                         t$199%header%typ_code = 134481411
  847.                         t$199%header%orig_base = 0
  847.                         t$199%header%orig_size = 0
  847.                         t$199%dim_1%LB = 1
  847.                         t$199%dim_1%EX = ( max( 0, t$15 ) )
  847.                         t$199%dim_1%SM = 1
  847.                         t$199%dim_2%LB = 1
  847.                         t$199%dim_2%EX = ( max( 0, t$16 ) )
  847.                         t$199%dim_2%SM = _zla( 0, t$15 )
  847.                         t$200 = tg2
  847.                         call ijtoibjb_r( t$199, t$200 )
  847.                      endif
  850.                      if ( reducedgrid ) then
  851.                         call aveboxijtoibjb_r2d( buf(1, 1, 3), (tg3%base_addr)(tg3%dim_1%LB, tg3%dim_2%LB, 0) )
  851.                      else
  853. !dir$ suppress buf(1, 1, 3)
  853.                         t$201%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 3) ) )
  853.                         t$201%header%el_len = 64
  853.                         t$201%header%assoc = 1
  853.                         t$201%header%ptr_alloc = 0
  853.                         t$201%header%p_or_a = 0
  853.                         t$201%header%a_contig = 1
  853.                         t$201%header%dv_versn = 2
  853.                         t$201%header%dv_smunit = 64
  853.                         t$201%header%d_type = 0
  853.                         t$201%header%n_params = 0
  853.                         t$201%header%pad_codim = 0
  853.                         t$201%header%n_codim = 0
  853.                         t$201%header%pad_dim = 0
  853.                         t$201%header%n_dim = 2
  853.                         t$201%header%d_type_idx = 13
  853.                         t$201%header%typ_code = 134481411
  853.                         t$201%header%orig_base = 0
  853.                         t$201%header%orig_size = 0
  853.                         t$201%dim_1%LB = 1
  853.                         t$201%dim_1%EX = ( max( 0, t$15 ) )
  853.                         t$201%dim_1%SM = 1
  853.                         t$201%dim_2%LB = 1
  853.                         t$201%dim_2%EX = ( max( 0, t$16 ) )
  853.                         t$201%dim_2%SM = _zla( 0, t$15 )
  853.                         t$202 = tg3
  853.                         call ijtoibjb_r( t$201, t$202 )
  853.                      endif
  856.                      if ( reducedgrid ) then
  857.                         call aveboxijtoibjb_r2d( buf(1, 1, 4), (zorl%base_addr)(zorl%dim_1%LB, zorl%dim_2%LB, 0) )
  857.                      else
  859. !dir$ suppress buf(1, 1, 4)
  859.                         t$203%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 4) ) )
  859.                         t$203%header%el_len = 64
  859.                         t$203%header%assoc = 1
  859.                         t$203%header%ptr_alloc = 0
  859.                         t$203%header%p_or_a = 0
  859.                         t$203%header%a_contig = 1
  859.                         t$203%header%dv_versn = 2
  859.                         t$203%header%dv_smunit = 64
  859.                         t$203%header%d_type = 0
  859.                         t$203%header%n_params = 0
  859.                         t$203%header%pad_codim = 0
  859.                         t$203%header%n_codim = 0
  859.                         t$203%header%pad_dim = 0
  859.                         t$203%header%n_dim = 2
  859.                         t$203%header%d_type_idx = 13
  859.                         t$203%header%typ_code = 134481411
  859.                         t$203%header%orig_base = 0
  859.                         t$203%header%orig_size = 0
  859.                         t$203%dim_1%LB = 1
  859.                         t$203%dim_1%EX = ( max( 0, t$15 ) )
  859.                         t$203%dim_1%SM = 1
  859.                         t$203%dim_2%LB = 1
  859.                         t$203%dim_2%EX = ( max( 0, t$16 ) )
  859.                         t$203%dim_2%SM = _zla( 0, t$15 )
  859.                         t$204 = zorl
  859.                         call ijtoibjb_r( t$203, t$204 )
  859.                      endif
  861.                      $F_A75 = z0%dim_2%EX
  861.                      $F_A76 = z0%dim_1%EX
  861.                      if ( and( -$F_A76, -$F_A75 ) < 0 ) then
  861.                         $SC_z0_I214 = z0%dim_1%LB
  861.                         $SC_z0_I215 = z0%dim_2%SM
  861.                         $SC_z0_I216 = z0%dim_2%LB
  861.                         $SC_zorl_I211 = zorl%dim_1%LB
  861.                         $SC_zorl_I212 = zorl%dim_2%SM
  861.                         $SC_zorl_I213 = zorl%dim_2%LB
  861.                         $I_L861_482 = 0
  861.                         do
  861.                            $I_L861_422 = 0
  861. !dir$ ivdep
  861.                            do
  861.                               (z0%base_addr)($SC_z0_I214 + $I_L861_422, $SC_z0_I216 + $I_L861_482, 0) = (zorl%base_addr)($SC_zorl_I211 + $I_L861_422, $SC_zorl_I213 + $I_L861_482, 0)
  861.                               $I_L861_422 = 1 + $I_L861_422
  861.                               if ( $I_L861_422 >= $F_A76 ) exit
  861.                            enddo
  861.                            $I_L861_482 = 1 + $I_L861_482
  861.                            if ( $I_L861_482 >= $F_A75 ) exit
  861.                         enddo
  861.                      endif
  863.                      sinmax = 150.0
  867.                      if ( jbmax > 0 ) then
  868.                         $SC_ibmaxperjb_I218 = ibmaxperjb%dim_1%SM
  868.                         $SC_ibmaxperjb_I217 = ibmaxperjb%dim_1%EX
  869.                         $SC_soilm_I219 = soilm%dim_1%EX
  869.                         $SC_soilm_I220 = soilm%dim_1%LB
  869.                         $SC_soilm_I222 = soilm%dim_2%SM
  869.                         $SC_soilm_I221 = soilm%dim_2%EX
  869.                         $SC_soilm_I223 = soilm%dim_2%LB
  869.                         $SC_rvisdiff_I224 = rvisdiff%dim_1%EX
  869.                         $SC_rvisdiff_I225 = rvisdiff%dim_1%LB
  869.                         $SC_rvisdiff_I227 = rvisdiff%dim_2%SM
  869.                         $SC_rvisdiff_I226 = rvisdiff%dim_2%EX
  869.                         $SC_rvisdiff_I228 = rvisdiff%dim_2%LB
  867.                         $I_L867_440 = 0
  867.                         do
  868.                            $t_S6 = (ibmaxperjb%base_addr)(1 + $I_L867_440, 0)
  868.                            if ( $t_S6 > 0 ) then
  868.                               $I_L868_374 = 0
  868. !dir$ ivdep
  868.                               do
  869.                                  (rvisdiff%base_addr)(1 + $I_L868_374, 1 + $I_L867_440, 0) = abs( (soilm%base_addr)(1 + $I_L868_374, 1 + $I_L867_440, 0) )
  870.                                  $I_L868_374 = 1 + $I_L868_374
  868.                                  if ( $I_L868_374 >= $t_S6 ) exit
  868.                               enddo
  868.                            endif
  871.                            $I_L867_440 = 1 + $I_L867_440
  870.                            if ( $I_L867_440 >= jbmax ) exit
  870.                         enddo
  870.                      endif
  873.                      if ( iglsm_w == 0 ) then
  874.                         t$211 = ibmaxperjb
  874.                         call sibwet( ibmax, jbmax, (rvisdiff%base_addr)(rvisdiff%dim_1%LB, rvisdiff%dim_2%LB, 0), sinmax, (imask%base_addr)(imask%dim_1%LB, imask%dim_2%LB, 0), wsib(1, 1), (ssib%base_addr)(ssib%dim_1%LB, ssib%dim_2%LB, 0), mxiter, t$211 )
  874.                      else
  885.                         t$212 = ibmaxperjb
  885.                         ipa$125 = 8
  885.                         call sibwet_glsm( ibmax, jbmax, (imask%base_addr)(imask%dim_1%LB, imask%dim_2%LB, 0), wsib(1, 1), (ssib%base_addr)(ssib%dim_1%LB, ssib%dim_2%LB, 0), mxiter, t$212, (soilm%base_addr)(soilm%dim_1%LB, soilm%dim_2%LB, 0), ipa$125, (wsib3d%base_addr)(wsib3d%dim_1%LB, wsib3d%dim_2%LB, wsib3d%dim_3%LB, 0), (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, glsm_w%dim_3%LB, 0) )
  885.                      endif
  900.                      $F_A77 = ppli%dim_2%EX
  900.                      $F_A78 = ppli%dim_1%EX
  900.                      if ( and( -$F_A78, -$F_A77 ) < 0 ) then
  900.                         $SC_ppli_I229 = ppli%dim_1%LB
  900.                         $SC_ppli_I230 = ppli%dim_2%SM
  900.                         $SC_ppli_I231 = ppli%dim_2%LB
  900.                         $I_L900_484 = 0
  900.                         do
  900.                            $I_L900_424 = 0
  900. !dir$ ivdep
  900.                            do
  900.                               (ppli%base_addr)($SC_ppli_I229 + $I_L900_424, $SC_ppli_I231 + $I_L900_484, 0) = 0.0
  900.                               $I_L900_424 = 1 + $I_L900_424
  900.                               if ( $I_L900_424 >= $F_A78 ) exit
  900.                            enddo
  900.                            $I_L900_484 = 1 + $I_L900_484
  900.                            if ( $I_L900_484 >= $F_A77 ) exit
  900.                         enddo
  900.                      endif
  901.                      $F_A79 = ppci%dim_2%EX
  901.                      $F_A80 = ppci%dim_1%EX
  901.                      if ( and( -$F_A80, -$F_A79 ) < 0 ) then
  901.                         $SC_ppci_I232 = ppci%dim_1%LB
  901.                         $SC_ppci_I233 = ppci%dim_2%SM
  901.                         $SC_ppci_I234 = ppci%dim_2%LB
  901.                         $I_L901_486 = 0
  901.                         do
  901.                            $I_L901_426 = 0
  901. !dir$ ivdep
  901.                            do
  901.                               (ppci%base_addr)($SC_ppci_I232 + $I_L901_426, $SC_ppci_I234 + $I_L901_486, 0) = 0.0
  901.                               $I_L901_426 = 1 + $I_L901_426
  901.                               if ( $I_L901_426 >= $F_A80 ) exit
  901.                            enddo
  901.                            $I_L901_486 = 1 + $I_L901_486
  901.                            if ( $I_L901_486 >= $F_A79 ) exit
  901.                         enddo
  901.                      endif
  902.                      $F_A81 = capac0%dim_3%EX
  902.                      $F_A82 = capac0%dim_2%EX
  902.                      $F_A83 = capac0%dim_1%EX
  902.                      if ( and( and( -$F_A82, -$F_A81 ), -$F_A83 ) < 0 ) then
  902.                         $SC_capac0_I235 = capac0%dim_1%LB
  902.                         $SC_capac0_I236 = capac0%dim_2%SM
  902.                         $SC_capac0_I237 = capac0%dim_2%LB
  902.                         $SC_capac0_I238 = capac0%dim_3%SM
  902.                         $SC_capac0_I239 = capac0%dim_3%LB
  902.                         $I_L902_496 = 0
  902.                         do
  902.                            $I_L902_488 = 0
  902.                            do
  902.                               $I_L902_428 = 0
  902. !dir$ ivdep
  902.                               do
  902.                                  (capac0%base_addr)($SC_capac0_I235 + $I_L902_428, $SC_capac0_I237 + $I_L902_488, $SC_capac0_I239 + $I_L902_496, 0) = 0.0
  902.                                  $I_L902_428 = 1 + $I_L902_428
  902.                                  if ( $I_L902_428 >= $F_A83 ) exit
  902.                               enddo
  902.                               $I_L902_488 = 1 + $I_L902_488
  902.                               if ( $I_L902_488 >= $F_A82 ) exit
  902.                            enddo
  902.                            $I_L902_496 = 1 + $I_L902_496
  902.                            if ( $I_L902_496 >= $F_A81 ) exit
  902.                         enddo
  902.                      endif
  903.                      $F_A84 = capacm%dim_3%EX
  903.                      $F_A85 = capacm%dim_2%EX
  903.                      $F_A86 = capacm%dim_1%EX
  903.                      if ( and( and( -$F_A85, -$F_A84 ), -$F_A86 ) < 0 ) then
  903.                         $SC_capacm_I240 = capacm%dim_1%LB
  903.                         $SC_capacm_I241 = capacm%dim_2%SM
  903.                         $SC_capacm_I242 = capacm%dim_2%LB
  903.                         $SC_capacm_I243 = capacm%dim_3%SM
  903.                         $SC_capacm_I244 = capacm%dim_3%LB
  903.                         $I_L903_498 = 0
  903.                         do
  903.                            $I_L903_490 = 0
  903.                            do
  903.                               $I_L903_430 = 0
  903. !dir$ ivdep
  903.                               do
  903.                                  (capacm%base_addr)($SC_capacm_I240 + $I_L903_430, $SC_capacm_I242 + $I_L903_490, $SC_capacm_I244 + $I_L903_498, 0) = 0.0
  903.                                  $I_L903_430 = 1 + $I_L903_430
  903.                                  if ( $I_L903_430 >= $F_A86 ) exit
  903.                               enddo
  903.                               $I_L903_490 = 1 + $I_L903_490
  903.                               if ( $I_L903_490 >= $F_A85 ) exit
  903.                            enddo
  903.                            $I_L903_498 = 1 + $I_L903_498
  903.                            if ( $I_L903_498 >= $F_A84 ) exit
  903.                         enddo
  903.                      endif
  908.                      if ( jbmax > 0 ) then
  907.                         $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  908.                         $I_L908_442 = 0
  908. !$omp do schedule(static)
  908.                         do
  909.                            $$_ncount = 0
  910.                            $t_S9 = (ibmaxperjb%base_addr)(1 + $I_L908_442, 0)
  910.                            if ( $t_S9 > 0 ) then
  910.                               $I_L910_376 = 0
  910. !dir$ ivdep
  910.                               do
  911.                                  (gl0%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 0) = 10.0
  912.                                  (mmlen%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 0) = 10.0
  913.                                  if ( (imask%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 0) /= 0 ) then
  913.                                     (gtsea%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 0) = 290.0
  920.                                     $$_ncount = 1 + $$_ncount
  921.                                     if ( iglsm_w == 0 ) then
  922.                                        (w0%base_addr)($$_ncount, 1, 1 + $I_L908_442, 0) = wsib(1 + $I_L910_376, 1 + $I_L908_442)
  923.                                        (w0%base_addr)($$_ncount, 2, 1 + $I_L908_442, 0) = wsib(1 + $I_L910_376, 1 + $I_L908_442)
  924.                                        (w0%base_addr)($$_ncount, 3, 1 + $I_L908_442, 0) = wsib(1 + $I_L910_376, 1 + $I_L908_442)
  925.                                        (wm%base_addr)($$_ncount, 1, 1 + $I_L908_442, 0) = wsib(1 + $I_L910_376, 1 + $I_L908_442)
  926.                                        (wm%base_addr)($$_ncount, 2, 1 + $I_L908_442, 0) = wsib(1 + $I_L910_376, 1 + $I_L908_442)
  927.                                        (wm%base_addr)($$_ncount, 3, 1 + $I_L908_442, 0) = wsib(1 + $I_L910_376, 1 + $I_L908_442)
  927.                                     else
  930.                                        (w0%base_addr)($$_ncount, 1, 1 + $I_L908_442, 0) = (wsib3d%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 1, 0)
  931.                                        (w0%base_addr)($$_ncount, 2, 1 + $I_L908_442, 0) = (wsib3d%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 2, 0)
  932.                                        (w0%base_addr)($$_ncount, 3, 1 + $I_L908_442, 0) = (wsib3d%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 3, 0)
  933.                                        (wm%base_addr)($$_ncount, 1, 1 + $I_L908_442, 0) = (wsib3d%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 1, 0)
  934.                                        (wm%base_addr)($$_ncount, 2, 1 + $I_L908_442, 0) = (wsib3d%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 2, 0)
  935.                                        (wm%base_addr)($$_ncount, 3, 1 + $I_L908_442, 0) = (wsib3d%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 3, 0)
  935.                                     endif
  939.                                     (td0%base_addr)($$_ncount, 1 + $I_L908_442, 0) = (tg3%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 0)
  940.                                     (tdm%base_addr)($$_ncount, 1 + $I_L908_442, 0) = (tg3%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 0)
  941.                                     (tgm%base_addr)($$_ncount, 1 + $I_L908_442, 0) = (tg3%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 0)
  942.                                     (tcm%base_addr)($$_ncount, 1 + $I_L908_442, 0) = (tg3%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 0)
  943.                                     (ssib%base_addr)($$_ncount, 1 + $I_L908_442, 0) = 0.0
  944.                                     if ( (soilm%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 0) < 0.0 ) then
  944.                                        (ssib%base_addr)($$_ncount, 1 + $I_L908_442, 0) = wsib(1 + $I_L910_376, 1 + $I_L908_442)
  944.                                     endif
  946.                                     if ( (sheleg%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 0) > 0.0 ) then
  947.                                        (capac0%base_addr)($$_ncount, 2, 1 + $I_L908_442, 0) = ( 1.0e-3 * (sheleg%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 0) )
  948.                                        (capacm%base_addr)($$_ncount, 2, 1 + $I_L908_442, 0) = ( 1.0e-3 * (sheleg%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 0) )
  948.                                     endif
  916.                                  else if ( -(gtsea%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 0) < 271.17000000000002 ) then
  917.                                     (imask%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 0) = -1
  917.                                  endif
  914.                                  (tseam%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 0) = (gtsea%base_addr)(1 + $I_L910_376, 1 + $I_L908_442, 0)
  952.                                  $I_L910_376 = 1 + $I_L910_376
  913.                                  if ( $I_L910_376 >= $t_S9 ) exit
  913.                               enddo
  913.                            endif
  953.                            $I_L908_442 = 1 + $I_L908_442
  952.                            if ( $I_L908_442 >= jbmax ) exit
  952.                         enddo
  954.                         $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
  954.                      endif
  954.                   else
  954.    30                continue
  958.                       _substr(t$219,1,19) = '**(InitBoundCond)**'
  958.                       _substr(t$220,1,25) = 'Warm start SSib variables'
  958.                      call msgone(  _substr(t$219,1,19),  _substr(t$220,1,25) )
  960.                      $Unit_temp_O12 = nfsibi
  960.                      _uread( _clist( 0, 0, 3, $Unit_temp_O12, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifdy, 0x2000200000000L ), _iotype( todsib, 0x804060300000000L ), _iotype( (ids%base_addr)(+:( 1, ids%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (idc%base_addr)(+:( 1, idc%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
  961.                      $Unit_temp_O13 = nfsibi
  961.                      _uread( _clist( 0, 0, 3, $Unit_temp_O13, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (tm0%base_addr)(+:( tm0%dim_1%LB, tm0%dim_1%LB + tm0%dim_1%EX + -1, 1 ), +:( tm0%dim_2%LB, tm0%dim_2%LB + tm0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tmm%base_addr)(+:( tmm%dim_1%LB, tmm%dim_1%LB + tmm%dim_1%EX + -1, 1 ), +:( tmm%dim_2%LB, tmm%dim_2%LB + tmm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
  962.                      $Unit_temp_O14 = nfsibi
  962.                      _uread( _clist( 0, 0, 3, $Unit_temp_O14, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (qm0%base_addr)(+:( qm0%dim_1%LB, qm0%dim_1%LB + qm0%dim_1%EX + -1, 1 ), +:( qm0%dim_2%LB, qm0%dim_2%LB + qm0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (qmm%base_addr)(+:( qmm%dim_1%LB, qmm%dim_1%LB + qmm%dim_1%EX + -1, 1 ), +:( qmm%dim_2%LB, qmm%dim_2%LB + qmm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
  963.                      $Unit_temp_O15 = nfsibi
  963.                      _uread( _clist( 0, 0, 3, $Unit_temp_O15, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (td0%base_addr)(+:( td0%dim_1%LB, td0%dim_1%LB + td0%dim_1%EX + -1, 1 ), +:( td0%dim_2%LB, td0%dim_2%LB + td0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tdm%base_addr)(+:( tdm%dim_1%LB, tdm%dim_1%LB + tdm%dim_1%EX + -1, 1 ), +:( tdm%dim_2%LB, tdm%dim_2%LB + tdm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
  964.                      $Unit_temp_O16 = nfsibi
  964.                      _uread( _clist( 0, 0, 3, $Unit_temp_O16, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (tg0%base_addr)(+:( tg0%dim_1%LB, tg0%dim_1%LB + tg0%dim_1%EX + -1, 1 ), +:( tg0%dim_2%LB, tg0%dim_2%LB + tg0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tgm%base_addr)(+:( tgm%dim_1%LB, tgm%dim_1%LB + tgm%dim_1%EX + -1, 1 ), +:( tgm%dim_2%LB, tgm%dim_2%LB + tgm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
  965.                      $Unit_temp_O17 = nfsibi
  965.                      _uread( _clist( 0, 0, 3, $Unit_temp_O17, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (tc0%base_addr)(+:( tc0%dim_1%LB, tc0%dim_1%LB + tc0%dim_1%EX + -1, 1 ), +:( tc0%dim_2%LB, tc0%dim_2%LB + tc0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tcm%base_addr)(+:( tcm%dim_1%LB, tcm%dim_1%LB + tcm%dim_1%EX + -1, 1 ), +:( tcm%dim_2%LB, tcm%dim_2%LB + tcm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
  966.                      $Unit_temp_O18 = nfsibi
  966.                      _uread( _clist( 0, 0, 3, $Unit_temp_O18, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (w0%base_addr)(+:( w0%dim_1%LB, w0%dim_1%LB + w0%dim_1%EX + -1, 1 ), +:( w0%dim_2%LB, w0%dim_2%LB + w0%dim_2%EX + -1, 1 ), +:( w0%dim_3%LB, w0%dim_3%LB + w0%dim_3%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (wm%base_addr)(+:( wm%dim_1%LB, wm%dim_1%LB + wm%dim_1%EX + -1, 1 ), +:( wm%dim_2%LB, wm%dim_2%LB + wm%dim_2%EX + -1, 1 ), +:( wm%dim_3%LB, wm%dim_3%LB + wm%dim_3%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
  967.                      $Unit_temp_O19 = nfsibi
  967.                      _uread( _clist( 0, 0, 3, $Unit_temp_O19, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (capac0%base_addr)(+:( capac0%dim_1%LB, capac0%dim_1%LB + capac0%dim_1%EX + -1, 1 ), +:( capac0%dim_2%LB, capac0%dim_2%LB + capac0%dim_2%EX + -1, 1 ), +:( capac0%dim_3%LB, capac0%dim_3%LB + capac0%dim_3%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (capacm%base_addr)(+:( capacm%dim_1%LB, capacm%dim_1%LB + capacm%dim_1%EX + -1, 1 ), +:( capacm%dim_2%LB, capacm%dim_2%LB + capacm%dim_2%EX + -1, 1 ), +:( capacm%dim_3%LB, capacm%dim_3%LB + capacm%dim_3%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
  968.                      $Unit_temp_O20 = nfsibi
  968.                      _uread( _clist( 0, 0, 3, $Unit_temp_O20, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (ppci%base_addr)(+:( ppci%dim_1%LB, ppci%dim_1%LB + ppci%dim_1%EX + -1, 1 ), +:( ppci%dim_2%LB, ppci%dim_2%LB + ppci%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (ppli%base_addr)(+:( ppli%dim_1%LB, ppli%dim_1%LB + ppli%dim_1%EX + -1, 1 ), +:( ppli%dim_2%LB, ppli%dim_2%LB + ppli%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
  969.                      $Unit_temp_O21 = nfsibi
  969.                      _uread( _clist( 0, 0, 3, $Unit_temp_O21, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (gl0%base_addr)(+:( gl0%dim_1%LB, gl0%dim_1%LB + gl0%dim_1%EX + -1, 1 ), +:( gl0%dim_2%LB, gl0%dim_2%LB + gl0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (zorl%base_addr)(+:( zorl%dim_1%LB, zorl%dim_1%LB + zorl%dim_1%EX + -1, 1 ), +:( zorl%dim_2%LB, zorl%dim_2%LB + zorl%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (gtsea%base_addr)(+:( gtsea%dim_1%LB, gtsea%dim_1%LB + gtsea%dim_1%EX + -1, 1 ), +:( gtsea%dim_2%LB, gtsea%dim_2%LB + gtsea%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tseam%base_addr)(+:( tseam%dim_1%LB, tseam%dim_1%LB + tseam%dim_1%EX + -1, 1 ), +:( tseam%dim_2%LB, tseam%dim_2%LB + tseam%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (qsfc0%base_addr)(+:( qsfc0%dim_1%LB, qsfc0%dim_1%LB + qsfc0%dim_1%EX + -1, 1 ), +:( qsfc0%dim_2%LB, qsfc0%dim_2%LB + qsfc0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tsfc0%base_addr)(+:( tsfc0%dim_1%LB, tsfc0%dim_1%LB + tsfc0%dim_1%EX + -1, 1 ), +:( tsfc0%dim_2%LB, tsfc0%dim_2%LB + tsfc0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (qsfcm%base_addr)(+:( qsfcm%dim_1%LB, qsfcm%dim_1%LB + qsfcm%dim_1%EX + -1, 1 ), +:( qsfcm%dim_2%LB, qsfcm%dim_2%LB + qsfcm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tsfcm%base_addr)(+:( tsfcm%dim_1%LB, tsfcm%dim_1%LB + tsfcm%dim_1%EX + -1, 1 ), +:( tsfcm%dim_2%LB, tsfcm%dim_2%LB + tsfcm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
  970.                      $Unit_temp_O22 = nfsibi
  970.                      _uread( _clist( 0, 0, 3, $Unit_temp_O22, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (imask%base_addr)(+:( imask%dim_1%LB, imask%dim_1%LB + imask%dim_1%EX + -1, 1 ), +:( imask%dim_2%LB, imask%dim_2%LB + imask%dim_2%EX + -1, 1 ), 0), 0x804060200000000L ) ) )
  971.                      $F_A87 = mmlen%dim_2%EX
  971.                      $F_A88 = mmlen%dim_1%EX
  971.                      if ( and( -$F_A88, -$F_A87 ) < 0 ) then
  971.                         $SC_mmlen_I248 = mmlen%dim_1%LB
  971.                         $SC_mmlen_I249 = mmlen%dim_2%SM
  971.                         $SC_mmlen_I250 = mmlen%dim_2%LB
  971.                         $SC_gl0_I245 = gl0%dim_1%LB
  971.                         $SC_gl0_I246 = gl0%dim_2%SM
  971.                         $SC_gl0_I247 = gl0%dim_2%LB
  971.                         $I_L971_492 = 0
  971.                         do
  971.                            $I_L971_432 = 0
  971. !dir$ ivdep
  971.                            do
  971.                               (mmlen%base_addr)($SC_mmlen_I248 + $I_L971_432, $SC_mmlen_I250 + $I_L971_492, 0) = (gl0%base_addr)($SC_gl0_I245 + $I_L971_432, $SC_gl0_I247 + $I_L971_492, 0)
  971.                               $I_L971_432 = 1 + $I_L971_432
  971.                               if ( $I_L971_432 >= $F_A88 ) exit
  971.                            enddo
  971.                            $I_L971_492 = 1 + $I_L971_492
  971.                            if ( $I_L971_492 >= $F_A87 ) exit
  971.                         enddo
  971.                      endif
  972.                      t$136 = nfsibi
  972.                      t$221 = __rewf( t$136, 0, 0, 0x100000000000000L, 0, 0 )
  976.                      if ( initlz < 0 ) then
  976.                         if ( initlz > -3 ) then
  979.                            t$223 = 0
  979.                            t$226 = 0
  979.                            if ( idate%header%a_contig == 1 ) then
  979. !dir$ suppress (idate%base_addr)(1, 0)
  979.                               t$222 = loc( (idate%base_addr)(1, 0) )
  979.                            else
  979.                               t$223 = idate%dim_1%EX
  979.                               t$226 = int( _alloc( max( 0, 4 * max( 0, idate%dim_1%EX ) ) ), 8 )
  979.                               $F_A89 = idate%dim_1%EX
  979.                               if ( idate%dim_1%EX > 0 ) then
  979.                                  $SC_idate_I207 = idate%dim_1%SM
  979.                                  $SC_idate_I208 = idate%dim_1%LB
  979.                                  $I_L979_434 = 0
  979. !dir$ ivdep
  979.                                  do
  979.                                     t$225(1 + $I_L979_434) = (idate%base_addr)(1 + $I_L979_434, 0)
  979.                                     $I_L979_434 = 1 + $I_L979_434
  979.                                     if ( $I_L979_434 >= $F_A89 ) exit
  979.                                  enddo
  979.                               endif
  979. !dir$ suppress t$225
  979.                               t$222 = loc( t$225 )
  979.                            endif
  979.                            t$228 = 0
  979.                            t$231 = 0
  979.                            if ( idatec%header%a_contig == 1 ) then
  979. !dir$ suppress (idatec%base_addr)(1, 0)
  979.                               t$227 = loc( (idatec%base_addr)(1, 0) )
  979.                            else
  979.                               t$228 = idatec%dim_1%EX
  979.                               t$231 = int( _alloc( max( 0, 4 * max( 0, idatec%dim_1%EX ) ) ), 8 )
  979.                               $F_A90 = idatec%dim_1%EX
  979.                               if ( idatec%dim_1%EX > 0 ) then
  979.                                  $SC_idatec_I209 = idatec%dim_1%SM
  979.                                  $SC_idatec_I210 = idatec%dim_1%LB
  979.                                  $I_L979_436 = 0
  979. !dir$ ivdep
  979.                                  do
  979.                                     t$230(1 + $I_L979_436) = (idatec%base_addr)(1 + $I_L979_436, 0)
  979.                                     $I_L979_436 = 1 + $I_L979_436
  979.                                     if ( $I_L979_436 >= $F_A90 ) exit
  979.                                  enddo
  979.                               endif
  979. !dir$ suppress t$230
  979.                               t$227 = loc( t$230 )
  979.                            endif
  978.                            t$232 = ibmaxperjb
  978.                            call getsbc( imax, jmax, kmax, (albvisdiff%base_addr)(albvisdiff%dim_1%LB, albvisdiff%dim_2%LB, 0), (gtsea%base_addr)(gtsea%dim_1%LB, gtsea%dim_2%LB, 0), (soilm%base_addr)(soilm%dim_1%LB, soilm%dim_2%LB, 0), (sheleg%base_addr)(sheleg%dim_1%LB, sheleg%dim_2%LB, 0), (o3mix%base_addr)(o3mix%dim_1%LB, o3mix%dim_2%LB, o3mix%dim_3%LB, 0), ifday, tod, t$222, t$227, ifalb, ifsst, ifslm, ifsnw, ifozone, sstlag, intsst, fint, tice, yrl, monl(1), ibmax, jbmax, t$232 )
  979.                            if ( idatec%header%a_contig /= 1 ) then
  979.                               _free( t$231 )
  979.                            endif
  979.                            if ( idate%header%a_contig /= 1 ) then
  979.                               _free( t$226 )
  979.                            endif
  979.                         endif
  979.                      endif
  987.                      if ( jbmax > 0 ) then
  986.                         $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  993.                         $SC_w0_I261 = w0%dim_1%EX
  993.                         $SC_w0_I262 = w0%dim_1%LB
  993.                         $SC_w0_I264 = w0%dim_2%SM
  993.                         $SC_w0_I263 = w0%dim_2%EX
  993.                         $SC_w0_I265 = w0%dim_2%LB
  993.                         $SC_w0_I267 = w0%dim_3%SM
  993.                         $SC_w0_I266 = w0%dim_3%EX
  993.                         $SC_w0_I268 = w0%dim_3%LB
  992.                         $SC_ssib_I256 = ssib%dim_1%EX
  992.                         $SC_ssib_I257 = ssib%dim_1%LB
  992.                         $SC_ssib_I259 = ssib%dim_2%SM
  992.                         $SC_ssib_I258 = ssib%dim_2%EX
  992.                         $SC_ssib_I260 = ssib%dim_2%LB
  989.                         $SC_ibmaxperjb_I218 = ibmaxperjb%dim_1%SM
  989.                         $SC_ibmaxperjb_I217 = ibmaxperjb%dim_1%EX
  990.                         $SC_imask_I251 = imask%dim_1%EX
  990.                         $SC_imask_I252 = imask%dim_1%LB
  990.                         $SC_imask_I254 = imask%dim_2%SM
  990.                         $SC_imask_I253 = imask%dim_2%EX
  990.                         $SC_imask_I255 = imask%dim_2%LB
  987.                         $I_L987_444 = 0
  987. !$omp do schedule(static)
  987.                         do
  988.                            $$_ncount = 0
  989.                            $t_S12 = (ibmaxperjb%base_addr)(1 + $I_L987_444, 0)
  989.                            if ( $t_S12 > 0 ) then
  998.                               $SC_wm_I269 = wm%dim_1%EX
  998.                               $SC_wm_I270 = wm%dim_1%LB
  998.                               $SC_wm_I272 = wm%dim_2%SM
  998.                               $SC_wm_I271 = wm%dim_2%EX
  998.                               $SC_wm_I273 = wm%dim_2%LB
  998.                               $SC_wm_I275 = wm%dim_3%SM
  998.                               $SC_wm_I274 = wm%dim_3%EX
  998.                               $SC_wm_I276 = wm%dim_3%LB
  989.                               $I_L989_378 = 0
  989. !dir$ ivdep
  989.                               do
  990.                                  if ( (imask%base_addr)(1 + $I_L989_378, 1 + $I_L987_444, 0) > 0 ) then
  991.                                     $$_ncount = 1 + $$_ncount
  992.                                     (ssib%base_addr)($$_ncount, 1 + $I_L987_444, 0) = 0.0
  993.                                     if ( (w0%base_addr)($$_ncount, 1, 1 + $I_L987_444, 0) < 0.0 ) then
  994.                                        (ssib%base_addr)($$_ncount, 1 + $I_L987_444, 0) = abs( (w0%base_addr)($$_ncount, 1, 1 + $I_L987_444, 0) )
  995.                                        (w0%base_addr)($$_ncount, 1, 1 + $I_L987_444, 0) = abs( (w0%base_addr)($$_ncount, 1, 1 + $I_L987_444, 0) )
  996.                                        (w0%base_addr)($$_ncount, 2, 1 + $I_L987_444, 0) = abs( (w0%base_addr)($$_ncount, 2, 1 + $I_L987_444, 0) )
  997.                                        (w0%base_addr)($$_ncount, 3, 1 + $I_L987_444, 0) = abs( (w0%base_addr)($$_ncount, 3, 1 + $I_L987_444, 0) )
  998.                                        (wm%base_addr)($$_ncount, 1, 1 + $I_L987_444, 0) = abs( (wm%base_addr)($$_ncount, 1, 1 + $I_L987_444, 0) )
  999.                                        (wm%base_addr)($$_ncount, 2, 1 + $I_L987_444, 0) = abs( (wm%base_addr)($$_ncount, 2, 1 + $I_L987_444, 0) )
 1000.                                        (wm%base_addr)($$_ncount, 3, 1 + $I_L987_444, 0) = abs( (wm%base_addr)($$_ncount, 3, 1 + $I_L987_444, 0) )
 1000.                                     endif
 1000.                                  endif
 1003.                                  $I_L989_378 = 1 + $I_L989_378
 1002.                                  if ( $I_L989_378 >= $t_S12 ) exit
 1002.                               enddo
 1002.                            endif
 1004.                            $I_L987_444 = 1 + $I_L987_444
 1003.                            if ( $I_L987_444 >= jbmax ) exit
 1003.                         enddo
 1005.                         $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
 1005.                      endif
 1007.                      if ( nfctrl(5) > 0 ) then
 1007.                         $Unit_temp_O23 = nfprt
 1007.                         _fwrite( _clist( 0, 0, 3, $Unit_temp_O23, Null_Arg, Null_Arg, t$24,  _substr(t$23,1,120), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifdy, 0x2000200000000L ), _iotype( todsib, 0x804060300000000L ), _iotype( (ids%base_addr)(+:( 1, ids%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (idc%base_addr)(+:( 1, idc%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
 1007.                      endif
 1007.                   endif
 1007.                   goto 40
 1007.                endif
 1007.             endif
 1007.          endif
 1007.       else
 1007.    40    continue
  649.          _free( t$69 )
  649.       endif
 1016.       return
 1016.       end
 1016.       
 1123.       
 1123.       subroutine initcheckfile( ibmax, jbmax, kmax, ifdy, todcld, ids, idc, ifday, tod, idate, idatec, todsib, ibmaxperjb )
 1020.       ids%dim_1%LB = 1
 1020.       idc%dim_1%LB = 1
 1020.       idate%dim_1%LB = 1
 1020.       idatec%dim_1%LB = 1
 1020.       ibmaxperjb%dim_1%LB = 1
 1047.       if ( nfcnv0 /= 0 ) then
 1048.           _substr(t$239,1,19) = '**(InitCheckfile)**'
 1048.           _substr(t$240,1,25) = 'Read prec/cloud variables'
 1048.          call msgone(  _substr(t$239,1,19),  _substr(t$240,1,25) )
 1049.          $Unit_temp_O0 = nfcnv0
 1049.          _uread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifdy, 0x2000200000000L ), _iotype( todcld, 0x804060300000000L ), _iotype( (ids%base_addr)(+:( 1, ids%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (idc%base_addr)(+:( 1, idc%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
 1050.          $Unit_temp_O1 = nfcnv0
 1050.          _uread( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (convc%base_addr)(+:( convc%dim_1%LB, convc%dim_1%LB + convc%dim_1%EX + -1, 1 ), +:( convc%dim_2%LB, convc%dim_2%LB + convc%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (convt%base_addr)(+:( convt%dim_1%LB, convt%dim_1%LB + convt%dim_1%EX + -1, 1 ), +:( convt%dim_2%LB, convt%dim_2%LB + convt%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (convb%base_addr)(+:( convb%dim_1%LB, convb%dim_1%LB + convb%dim_1%EX + -1, 1 ), +:( convb%dim_2%LB, convb%dim_2%LB + convb%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (prcp1%base_addr)(+:( prcp1%dim_1%LB, prcp1%dim_1%LB + prcp1%dim_1%EX + -1, 1 ), +:( prcp1%dim_2%LB, prcp1%dim_2%LB + prcp1%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (prcp2%base_addr)(+:( prcp2%dim_1%LB, prcp2%dim_1%LB + prcp2%dim_1%EX + -1, 1 ), +:( prcp2%dim_2%LB, prcp2%dim_2%LB + prcp2%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (prcp3%base_addr)(+:( prcp3%dim_1%LB, prcp3%dim_1%LB + prcp3%dim_1%EX + -1, 1 ), +:( prcp3%dim_2%LB, prcp3%dim_2%LB + prcp3%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (prcpt%base_addr)(+:( prcpt%dim_1%LB, prcpt%dim_1%LB + prcpt%dim_1%EX + -1, 1 ), +:( prcpt%dim_2%LB, prcpt%dim_2%LB + prcpt%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (toplv%base_addr)(+:( toplv%dim_1%LB, toplv%dim_1%LB + toplv%dim_1%EX + -1, 1 ), +:( toplv%dim_2%LB, toplv%dim_2%LB + toplv%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (botlv%base_addr)(+:( botlv%dim_1%LB, botlv%dim_1%LB + botlv%dim_1%EX + -1, 1 ), +:( botlv%dim_2%LB, botlv%dim_2%LB + botlv%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1054.          t$242 = nfcnv0
 1054.          t$241 = __rewf( t$242, 0, 0, 0x100000000000000L, 0, 0 )
 1056.          if ( nfctrl(4) > 0 ) then
 1056.             $Unit_temp_O2 = nfprt
 1056.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, t$30,  _substr(t$29,1,117), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifdy, 0x2000200000000L ), _iotype( todcld, 0x804060300000000L ), _iotype( (ids%base_addr)(+:( 1, ids%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (idc%base_addr)(+:( 1, idc%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
 1056.          endif
 1056.       else
 1059.           _substr(t$243,1,19) = '**(InitCheckfile)**'
 1059.           _substr(t$244,1,33) = 'Initializing prec/cloud variables'
 1059.          call msgone(  _substr(t$243,1,19),  _substr(t$244,1,33) )
 1060.          $F_A33 = convc%dim_2%EX
 1060.          $F_A34 = convc%dim_1%EX
 1060.          if ( and( -$F_A34, -$F_A33 ) < 0 ) then
 1060.             $SC_convc_I65 = convc%dim_1%LB
 1060.             $SC_convc_I66 = convc%dim_2%SM
 1060.             $SC_convc_I67 = convc%dim_2%LB
 1060.             $I_L1060_64 = 0
 1060.             do
 1060.                $I_L1060_38 = 0
 1060. !dir$ ivdep
 1060.                do
 1060.                   (convc%base_addr)($SC_convc_I65 + $I_L1060_38, $SC_convc_I67 + $I_L1060_64, 0) = 0.0
 1060.                   $I_L1060_38 = 1 + $I_L1060_38
 1060.                   if ( $I_L1060_38 >= $F_A34 ) exit
 1060.                enddo
 1060.                $I_L1060_64 = 1 + $I_L1060_64
 1060.                if ( $I_L1060_64 >= $F_A33 ) exit
 1060.             enddo
 1060.          endif
 1061.          $F_A35 = convt%dim_2%EX
 1061.          $F_A36 = convt%dim_1%EX
 1061.          if ( and( -$F_A36, -$F_A35 ) < 0 ) then
 1061.             $SC_convt_I68 = convt%dim_1%LB
 1061.             $SC_convt_I69 = convt%dim_2%SM
 1061.             $SC_convt_I70 = convt%dim_2%LB
 1061.             $I_L1061_66 = 0
 1061.             do
 1061.                $I_L1061_40 = 0
 1061. !dir$ ivdep
 1061.                do
 1061.                   (convt%base_addr)($SC_convt_I68 + $I_L1061_40, $SC_convt_I70 + $I_L1061_66, 0) = 0.0
 1061.                   $I_L1061_40 = 1 + $I_L1061_40
 1061.                   if ( $I_L1061_40 >= $F_A36 ) exit
 1061.                enddo
 1061.                $I_L1061_66 = 1 + $I_L1061_66
 1061.                if ( $I_L1061_66 >= $F_A35 ) exit
 1061.             enddo
 1061.          endif
 1062.          $F_A37 = convb%dim_2%EX
 1062.          $F_A38 = convb%dim_1%EX
 1062.          if ( and( -$F_A38, -$F_A37 ) < 0 ) then
 1062.             $SC_convb_I71 = convb%dim_1%LB
 1062.             $SC_convb_I72 = convb%dim_2%SM
 1062.             $SC_convb_I73 = convb%dim_2%LB
 1062.             $I_L1062_68 = 0
 1062.             do
 1062.                $I_L1062_42 = 0
 1062. !dir$ ivdep
 1062.                do
 1062.                   (convb%base_addr)($SC_convb_I71 + $I_L1062_42, $SC_convb_I73 + $I_L1062_68, 0) = 0.0
 1062.                   $I_L1062_42 = 1 + $I_L1062_42
 1062.                   if ( $I_L1062_42 >= $F_A38 ) exit
 1062.                enddo
 1062.                $I_L1062_68 = 1 + $I_L1062_68
 1062.                if ( $I_L1062_68 >= $F_A37 ) exit
 1062.             enddo
 1062.          endif
 1063.          $F_A39 = prcp1%dim_2%EX
 1063.          $F_A40 = prcp1%dim_1%EX
 1063.          if ( and( -$F_A40, -$F_A39 ) < 0 ) then
 1063.             $SC_prcp1_I74 = prcp1%dim_1%LB
 1063.             $SC_prcp1_I75 = prcp1%dim_2%SM
 1063.             $SC_prcp1_I76 = prcp1%dim_2%LB
 1063.             $I_L1063_70 = 0
 1063.             do
 1063.                $I_L1063_44 = 0
 1063. !dir$ ivdep
 1063.                do
 1063.                   (prcp1%base_addr)($SC_prcp1_I74 + $I_L1063_44, $SC_prcp1_I76 + $I_L1063_70, 0) = 0.0
 1063.                   $I_L1063_44 = 1 + $I_L1063_44
 1063.                   if ( $I_L1063_44 >= $F_A40 ) exit
 1063.                enddo
 1063.                $I_L1063_70 = 1 + $I_L1063_70
 1063.                if ( $I_L1063_70 >= $F_A39 ) exit
 1063.             enddo
 1063.          endif
 1064.          $F_A41 = prcp2%dim_2%EX
 1064.          $F_A42 = prcp2%dim_1%EX
 1064.          if ( and( -$F_A42, -$F_A41 ) < 0 ) then
 1064.             $SC_prcp2_I77 = prcp2%dim_1%LB
 1064.             $SC_prcp2_I78 = prcp2%dim_2%SM
 1064.             $SC_prcp2_I79 = prcp2%dim_2%LB
 1064.             $I_L1064_72 = 0
 1064.             do
 1064.                $I_L1064_46 = 0
 1064. !dir$ ivdep
 1064.                do
 1064.                   (prcp2%base_addr)($SC_prcp2_I77 + $I_L1064_46, $SC_prcp2_I79 + $I_L1064_72, 0) = 0.0
 1064.                   $I_L1064_46 = 1 + $I_L1064_46
 1064.                   if ( $I_L1064_46 >= $F_A42 ) exit
 1064.                enddo
 1064.                $I_L1064_72 = 1 + $I_L1064_72
 1064.                if ( $I_L1064_72 >= $F_A41 ) exit
 1064.             enddo
 1064.          endif
 1065.          $F_A43 = prcp3%dim_2%EX
 1065.          $F_A44 = prcp3%dim_1%EX
 1065.          if ( and( -$F_A44, -$F_A43 ) < 0 ) then
 1065.             $SC_prcp3_I80 = prcp3%dim_1%LB
 1065.             $SC_prcp3_I81 = prcp3%dim_2%SM
 1065.             $SC_prcp3_I82 = prcp3%dim_2%LB
 1065.             $I_L1065_74 = 0
 1065.             do
 1065.                $I_L1065_48 = 0
 1065. !dir$ ivdep
 1065.                do
 1065.                   (prcp3%base_addr)($SC_prcp3_I80 + $I_L1065_48, $SC_prcp3_I82 + $I_L1065_74, 0) = 0.0
 1065.                   $I_L1065_48 = 1 + $I_L1065_48
 1065.                   if ( $I_L1065_48 >= $F_A44 ) exit
 1065.                enddo
 1065.                $I_L1065_74 = 1 + $I_L1065_74
 1065.                if ( $I_L1065_74 >= $F_A43 ) exit
 1065.             enddo
 1065.          endif
 1066.          $F_A45 = prcpt%dim_2%EX
 1066.          $F_A46 = prcpt%dim_1%EX
 1066.          if ( and( -$F_A46, -$F_A45 ) < 0 ) then
 1066.             $SC_prcpt_I83 = prcpt%dim_1%LB
 1066.             $SC_prcpt_I84 = prcpt%dim_2%SM
 1066.             $SC_prcpt_I85 = prcpt%dim_2%LB
 1066.             $I_L1066_76 = 0
 1066.             do
 1066.                $I_L1066_50 = 0
 1066. !dir$ ivdep
 1066.                do
 1066.                   (prcpt%base_addr)($SC_prcpt_I83 + $I_L1066_50, $SC_prcpt_I85 + $I_L1066_76, 0) = 0.0
 1066.                   $I_L1066_50 = 1 + $I_L1066_50
 1066.                   if ( $I_L1066_50 >= $F_A46 ) exit
 1066.                enddo
 1066.                $I_L1066_76 = 1 + $I_L1066_76
 1066.                if ( $I_L1066_76 >= $F_A45 ) exit
 1066.             enddo
 1066.          endif
 1067.          $F_A47 = toplv%dim_2%EX
 1067.          $F_A48 = toplv%dim_1%EX
 1067.          if ( and( -$F_A48, -$F_A47 ) < 0 ) then
 1067.             $SC_toplv_I86 = toplv%dim_1%LB
 1067.             $SC_toplv_I87 = toplv%dim_2%SM
 1067.             $SC_toplv_I88 = toplv%dim_2%LB
 1067.             $I_L1067_78 = 0
 1067.             do
 1067.                $I_L1067_52 = 0
 1067. !dir$ ivdep
 1067.                do
 1067.                   (toplv%base_addr)($SC_toplv_I86 + $I_L1067_52, $SC_toplv_I88 + $I_L1067_78, 0) = 0.0
 1067.                   $I_L1067_52 = 1 + $I_L1067_52
 1067.                   if ( $I_L1067_52 >= $F_A48 ) exit
 1067.                enddo
 1067.                $I_L1067_78 = 1 + $I_L1067_78
 1067.                if ( $I_L1067_78 >= $F_A47 ) exit
 1067.             enddo
 1067.          endif
 1068.          $F_A49 = botlv%dim_2%EX
 1068.          $F_A50 = botlv%dim_1%EX
 1068.          if ( and( -$F_A50, -$F_A49 ) < 0 ) then
 1068.             $SC_botlv_I89 = botlv%dim_1%LB
 1068.             $SC_botlv_I90 = botlv%dim_2%SM
 1068.             $SC_botlv_I91 = botlv%dim_2%LB
 1068.             $I_L1068_80 = 0
 1068.             do
 1068.                $I_L1068_54 = 0
 1068. !dir$ ivdep
 1068.                do
 1068.                   (botlv%base_addr)($SC_botlv_I89 + $I_L1068_54, $SC_botlv_I91 + $I_L1068_80, 0) = 0.0
 1068.                   $I_L1068_54 = 1 + $I_L1068_54
 1068.                   if ( $I_L1068_54 >= $F_A50 ) exit
 1068.                enddo
 1068.                $I_L1068_80 = 1 + $I_L1068_80
 1068.                if ( $I_L1068_80 >= $F_A49 ) exit
 1068.             enddo
 1068.          endif
 1068.       endif
 1072.       if ( initlz < 0 ) then
 1074.           _substr(t$245,1,19) = '**(InitCheckfile)**'
 1074.           _substr(t$246,1,40) = 'Read SSib variables from warm-start file'
 1074.          call msgone(  _substr(t$245,1,19),  _substr(t$246,1,40) )
 1076.          $Unit_temp_O3 = nfsibi
 1076.          _uread( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifdy, 0x2000200000000L ), _iotype( todsib, 0x804060300000000L ), _iotype( (ids%base_addr)(+:( 1, ids%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (idc%base_addr)(+:( 1, idc%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
 1077.          $Unit_temp_O4 = nfsibi
 1077.          _uread( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (tm0%base_addr)(+:( tm0%dim_1%LB, tm0%dim_1%LB + tm0%dim_1%EX + -1, 1 ), +:( tm0%dim_2%LB, tm0%dim_2%LB + tm0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tmm%base_addr)(+:( tmm%dim_1%LB, tmm%dim_1%LB + tmm%dim_1%EX + -1, 1 ), +:( tmm%dim_2%LB, tmm%dim_2%LB + tmm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1078.          $Unit_temp_O5 = nfsibi
 1078.          _uread( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (qm0%base_addr)(+:( qm0%dim_1%LB, qm0%dim_1%LB + qm0%dim_1%EX + -1, 1 ), +:( qm0%dim_2%LB, qm0%dim_2%LB + qm0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (qmm%base_addr)(+:( qmm%dim_1%LB, qmm%dim_1%LB + qmm%dim_1%EX + -1, 1 ), +:( qmm%dim_2%LB, qmm%dim_2%LB + qmm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1079.          $Unit_temp_O6 = nfsibi
 1079.          _uread( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (td0%base_addr)(+:( td0%dim_1%LB, td0%dim_1%LB + td0%dim_1%EX + -1, 1 ), +:( td0%dim_2%LB, td0%dim_2%LB + td0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tdm%base_addr)(+:( tdm%dim_1%LB, tdm%dim_1%LB + tdm%dim_1%EX + -1, 1 ), +:( tdm%dim_2%LB, tdm%dim_2%LB + tdm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1080.          $Unit_temp_O7 = nfsibi
 1080.          _uread( _clist( 0, 0, 3, $Unit_temp_O7, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (tg0%base_addr)(+:( tg0%dim_1%LB, tg0%dim_1%LB + tg0%dim_1%EX + -1, 1 ), +:( tg0%dim_2%LB, tg0%dim_2%LB + tg0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tgm%base_addr)(+:( tgm%dim_1%LB, tgm%dim_1%LB + tgm%dim_1%EX + -1, 1 ), +:( tgm%dim_2%LB, tgm%dim_2%LB + tgm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1081.          $Unit_temp_O8 = nfsibi
 1081.          _uread( _clist( 0, 0, 3, $Unit_temp_O8, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (tc0%base_addr)(+:( tc0%dim_1%LB, tc0%dim_1%LB + tc0%dim_1%EX + -1, 1 ), +:( tc0%dim_2%LB, tc0%dim_2%LB + tc0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tcm%base_addr)(+:( tcm%dim_1%LB, tcm%dim_1%LB + tcm%dim_1%EX + -1, 1 ), +:( tcm%dim_2%LB, tcm%dim_2%LB + tcm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1082.          $Unit_temp_O9 = nfsibi
 1082.          _uread( _clist( 0, 0, 3, $Unit_temp_O9, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (w0%base_addr)(+:( w0%dim_1%LB, w0%dim_1%LB + w0%dim_1%EX + -1, 1 ), +:( w0%dim_2%LB, w0%dim_2%LB + w0%dim_2%EX + -1, 1 ), +:( w0%dim_3%LB, w0%dim_3%LB + w0%dim_3%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (wm%base_addr)(+:( wm%dim_1%LB, wm%dim_1%LB + wm%dim_1%EX + -1, 1 ), +:( wm%dim_2%LB, wm%dim_2%LB + wm%dim_2%EX + -1, 1 ), +:( wm%dim_3%LB, wm%dim_3%LB + wm%dim_3%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1083.          $Unit_temp_O10 = nfsibi
 1083.          _uread( _clist( 0, 0, 3, $Unit_temp_O10, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (capac0%base_addr)(+:( capac0%dim_1%LB, capac0%dim_1%LB + capac0%dim_1%EX + -1, 1 ), +:( capac0%dim_2%LB, capac0%dim_2%LB + capac0%dim_2%EX + -1, 1 ), +:( capac0%dim_3%LB, capac0%dim_3%LB + capac0%dim_3%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (capacm%base_addr)(+:( capacm%dim_1%LB, capacm%dim_1%LB + capacm%dim_1%EX + -1, 1 ), +:( capacm%dim_2%LB, capacm%dim_2%LB + capacm%dim_2%EX + -1, 1 ), +:( capacm%dim_3%LB, capacm%dim_3%LB + capacm%dim_3%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1084.          $Unit_temp_O11 = nfsibi
 1084.          _uread( _clist( 0, 0, 3, $Unit_temp_O11, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (ppci%base_addr)(+:( ppci%dim_1%LB, ppci%dim_1%LB + ppci%dim_1%EX + -1, 1 ), +:( ppci%dim_2%LB, ppci%dim_2%LB + ppci%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (ppli%base_addr)(+:( ppli%dim_1%LB, ppli%dim_1%LB + ppli%dim_1%EX + -1, 1 ), +:( ppli%dim_2%LB, ppli%dim_2%LB + ppli%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1085.          $Unit_temp_O12 = nfsibi
 1085.          _uread( _clist( 0, 0, 3, $Unit_temp_O12, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (gl0%base_addr)(+:( gl0%dim_1%LB, gl0%dim_1%LB + gl0%dim_1%EX + -1, 1 ), +:( gl0%dim_2%LB, gl0%dim_2%LB + gl0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (zorl%base_addr)(+:( zorl%dim_1%LB, zorl%dim_1%LB + zorl%dim_1%EX + -1, 1 ), +:( zorl%dim_2%LB, zorl%dim_2%LB + zorl%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (gtsea%base_addr)(+:( gtsea%dim_1%LB, gtsea%dim_1%LB + gtsea%dim_1%EX + -1, 1 ), +:( gtsea%dim_2%LB, gtsea%dim_2%LB + gtsea%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tseam%base_addr)(+:( tseam%dim_1%LB, tseam%dim_1%LB + tseam%dim_1%EX + -1, 1 ), +:( tseam%dim_2%LB, tseam%dim_2%LB + tseam%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (qsfc0%base_addr)(+:( qsfc0%dim_1%LB, qsfc0%dim_1%LB + qsfc0%dim_1%EX + -1, 1 ), +:( qsfc0%dim_2%LB, qsfc0%dim_2%LB + qsfc0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tsfc0%base_addr)(+:( tsfc0%dim_1%LB, tsfc0%dim_1%LB + tsfc0%dim_1%EX + -1, 1 ), +:( tsfc0%dim_2%LB, tsfc0%dim_2%LB + tsfc0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (qsfcm%base_addr)(+:( qsfcm%dim_1%LB, qsfcm%dim_1%LB + qsfcm%dim_1%EX + -1, 1 ), +:( qsfcm%dim_2%LB, qsfcm%dim_2%LB + qsfcm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tsfcm%base_addr)(+:( tsfcm%dim_1%LB, tsfcm%dim_1%LB + tsfcm%dim_1%EX + -1, 1 ), +:( tsfcm%dim_2%LB, tsfcm%dim_2%LB + tsfcm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1086.          $Unit_temp_O13 = nfsibi
 1086.          _uread( _clist( 0, 0, 3, $Unit_temp_O13, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (imask%base_addr)(+:( imask%dim_1%LB, imask%dim_1%LB + imask%dim_1%EX + -1, 1 ), +:( imask%dim_2%LB, imask%dim_2%LB + imask%dim_2%EX + -1, 1 ), 0), 0x804060200000000L ) ) )
 1088.          $F_A51 = mmlen%dim_2%EX
 1088.          $F_A52 = mmlen%dim_1%EX
 1088.          if ( and( -$F_A52, -$F_A51 ) < 0 ) then
 1088.             $SC_mmlen_I95 = mmlen%dim_1%LB
 1088.             $SC_mmlen_I96 = mmlen%dim_2%SM
 1088.             $SC_mmlen_I97 = mmlen%dim_2%LB
 1088.             $SC_gl0_I92 = gl0%dim_1%LB
 1088.             $SC_gl0_I93 = gl0%dim_2%SM
 1088.             $SC_gl0_I94 = gl0%dim_2%LB
 1088.             $I_L1088_82 = 0
 1088.             do
 1088.                $I_L1088_56 = 0
 1088. !dir$ ivdep
 1088.                do
 1088.                   (mmlen%base_addr)($SC_mmlen_I95 + $I_L1088_56, $SC_mmlen_I97 + $I_L1088_82, 0) = (gl0%base_addr)($SC_gl0_I92 + $I_L1088_56, $SC_gl0_I94 + $I_L1088_82, 0)
 1088.                   $I_L1088_56 = 1 + $I_L1088_56
 1088.                   if ( $I_L1088_56 >= $F_A52 ) exit
 1088.                enddo
 1088.                $I_L1088_82 = 1 + $I_L1088_82
 1088.                if ( $I_L1088_82 >= $F_A51 ) exit
 1088.             enddo
 1088.          endif
 1089.          t$242 = nfsibi
 1089.          t$247 = __rewf( t$242, 0, 0, 0x100000000000000L, 0, 0 )
 1092.          t$249 = 0
 1092.          t$252 = 0
 1092.          if ( idate%header%a_contig == 1 ) then
 1092. !dir$ suppress (idate%base_addr)(1, 0)
 1092.             t$248 = loc( (idate%base_addr)(1, 0) )
 1092.          else
 1092.             t$249 = idate%dim_1%EX
 1092.             t$252 = int( _alloc( max( 0, 4 * max( 0, idate%dim_1%EX ) ) ), 8 )
 1092.             $F_A53 = idate%dim_1%EX
 1092.             if ( idate%dim_1%EX > 0 ) then
 1092.                $SC_idate_I98 = idate%dim_1%SM
 1092.                $SC_idate_I99 = idate%dim_1%LB
 1092.                $I_L1092_58 = 0
 1092. !dir$ ivdep
 1092.                do
 1092.                   t$251(1 + $I_L1092_58) = (idate%base_addr)(1 + $I_L1092_58, 0)
 1092.                   $I_L1092_58 = 1 + $I_L1092_58
 1092.                   if ( $I_L1092_58 >= $F_A53 ) exit
 1092.                enddo
 1092.             endif
 1092. !dir$ suppress t$251
 1092.             t$248 = loc( t$251 )
 1092.          endif
 1092.          t$254 = 0
 1092.          t$257 = 0
 1092.          if ( idatec%header%a_contig == 1 ) then
 1092. !dir$ suppress (idatec%base_addr)(1, 0)
 1092.             t$253 = loc( (idatec%base_addr)(1, 0) )
 1092.          else
 1092.             t$254 = idatec%dim_1%EX
 1092.             t$257 = int( _alloc( max( 0, 4 * max( 0, idatec%dim_1%EX ) ) ), 8 )
 1092.             $F_A54 = idatec%dim_1%EX
 1092.             if ( idatec%dim_1%EX > 0 ) then
 1092.                $SC_idatec_I100 = idatec%dim_1%SM
 1092.                $SC_idatec_I101 = idatec%dim_1%LB
 1092.                $I_L1092_60 = 0
 1092. !dir$ ivdep
 1092.                do
 1092.                   t$256(1 + $I_L1092_60) = (idatec%base_addr)(1 + $I_L1092_60, 0)
 1092.                   $I_L1092_60 = 1 + $I_L1092_60
 1092.                   if ( $I_L1092_60 >= $F_A54 ) exit
 1092.                enddo
 1092.             endif
 1092. !dir$ suppress t$256
 1092.             t$253 = loc( t$256 )
 1092.          endif
 1091.          t$258 = ibmaxperjb
 1091.          call getsbc( imax, jmax, kmax, (albvisdiff%base_addr)(albvisdiff%dim_1%LB, albvisdiff%dim_2%LB, 0), (gtsea%base_addr)(gtsea%dim_1%LB, gtsea%dim_2%LB, 0), (soilm%base_addr)(soilm%dim_1%LB, soilm%dim_2%LB, 0), (sheleg%base_addr)(sheleg%dim_1%LB, sheleg%dim_2%LB, 0), (o3mix%base_addr)(o3mix%dim_1%LB, o3mix%dim_2%LB, o3mix%dim_3%LB, 0), ifday, tod, t$248, t$253, ifalb, ifsst, ifslm, ifsnw, ifozone, sstlag, intsst, fint, tice, yrl, monl(1), ibmax, jbmax, t$258 )
 1092.          if ( idatec%header%a_contig /= 1 ) then
 1092.             _free( t$257 )
 1092.          endif
 1092.          if ( idate%header%a_contig /= 1 ) then
 1092.             _free( t$252 )
 1092.          endif
 1097.          if ( jbmax > 0 ) then
 1097.             $I_L1097_62 = 0
 1097.             do
 1098.                $ncount_S3 = 0
 1099.                $t_S1 = (ibmaxperjb%base_addr)(1 + $I_L1097_62, 0)
 1099.                if ( $t_S1 > 0 ) then
 1099.                   $I_L1099_36 = 0
 1099. !dir$ ivdep
 1099.                   do
 1100.                      if ( (imask%base_addr)(1 + $I_L1099_36, 1 + $I_L1097_62, 0) > 0 ) then
 1101.                         $ncount_S3 = 1 + $ncount_S3
 1102.                         (ssib%base_addr)($ncount_S3, 1 + $I_L1097_62, 0) = 0.0
 1103.                         if ( (w0%base_addr)($ncount_S3, 1, 1 + $I_L1097_62, 0) < 0.0 ) then
 1104.                            (ssib%base_addr)($ncount_S3, 1 + $I_L1097_62, 0) = abs( (w0%base_addr)($ncount_S3, 1, 1 + $I_L1097_62, 0) )
 1105.                            (w0%base_addr)($ncount_S3, 1, 1 + $I_L1097_62, 0) = abs( (w0%base_addr)($ncount_S3, 1, 1 + $I_L1097_62, 0) )
 1106.                            (w0%base_addr)($ncount_S3, 2, 1 + $I_L1097_62, 0) = abs( (w0%base_addr)($ncount_S3, 2, 1 + $I_L1097_62, 0) )
 1107.                            (w0%base_addr)($ncount_S3, 3, 1 + $I_L1097_62, 0) = abs( (w0%base_addr)($ncount_S3, 3, 1 + $I_L1097_62, 0) )
 1108.                            (wm%base_addr)($ncount_S3, 1, 1 + $I_L1097_62, 0) = abs( (wm%base_addr)($ncount_S3, 1, 1 + $I_L1097_62, 0) )
 1109.                            (wm%base_addr)($ncount_S3, 2, 1 + $I_L1097_62, 0) = abs( (wm%base_addr)($ncount_S3, 2, 1 + $I_L1097_62, 0) )
 1110.                            (wm%base_addr)($ncount_S3, 3, 1 + $I_L1097_62, 0) = abs( (wm%base_addr)($ncount_S3, 3, 1 + $I_L1097_62, 0) )
 1110.                         endif
 1110.                      endif
 1113.                      $I_L1099_36 = 1 + $I_L1099_36
 1112.                      if ( $I_L1099_36 >= $t_S1 ) exit
 1112.                   enddo
 1112.                endif
 1114.                $I_L1097_62 = 1 + $I_L1097_62
 1113.                if ( $I_L1097_62 >= jbmax ) exit
 1113.             enddo
 1113.          endif
 1115.          if ( nfctrl(5) > 0 ) then
 1115.             $Unit_temp_O14 = nfprt
 1115.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O14, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,120), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifdy, 0x2000200000000L ), _iotype( todsib, 0x804060300000000L ), _iotype( (ids%base_addr)(+:( 1, ids%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (idc%base_addr)(+:( 1, idc%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
 1115.          endif
 1115.       endif
 1123.       return
 1123.       end
 1123.       
 1127.       
 1127.       subroutine initsurftemp( jbmax, ibmaxperjb )
 1127.       ibmaxperjb%dim_1%LB = 1
 1137.       $F_A33 = capacm%dim_3%EX
 1137.       $F_A34 = capacm%dim_2%EX
 1137.       $F_A35 = capacm%dim_1%EX
 1137.       if ( and( and( -$F_A34, -$F_A33 ), -$F_A35 ) < 0 ) then
 1137.          $SC_capacm_I48 = capacm%dim_1%LB
 1137.          $SC_capacm_I49 = capacm%dim_2%SM
 1137.          $SC_capacm_I50 = capacm%dim_2%LB
 1137.          $SC_capacm_I51 = capacm%dim_3%SM
 1137.          $SC_capacm_I52 = capacm%dim_3%LB
 1137.          $I_L1137_28 = 0
 1137.          do
 1137.             $I_L1137_24 = 0
 1137.             do
 1137.                $I_L1137_18 = 0
 1137. !dir$ ivdep
 1137.                do
 1137.                   (capacm%base_addr)($SC_capacm_I48 + $I_L1137_18, $SC_capacm_I50 + $I_L1137_24, $SC_capacm_I52 + $I_L1137_28, 0) = 0.0
 1137.                   $I_L1137_18 = 1 + $I_L1137_18
 1137.                   if ( $I_L1137_18 >= $F_A35 ) exit
 1137.                enddo
 1137.                $I_L1137_24 = 1 + $I_L1137_24
 1137.                if ( $I_L1137_24 >= $F_A34 ) exit
 1137.             enddo
 1137.             $I_L1137_28 = 1 + $I_L1137_28
 1137.             if ( $I_L1137_28 >= $F_A33 ) exit
 1137.          enddo
 1137.       endif
 1138.       $F_A36 = capac0%dim_3%EX
 1138.       $F_A37 = capac0%dim_2%EX
 1138.       $F_A38 = capac0%dim_1%EX
 1138.       if ( and( and( -$F_A37, -$F_A36 ), -$F_A38 ) < 0 ) then
 1138.          $SC_capac0_I53 = capac0%dim_1%LB
 1138.          $SC_capac0_I54 = capac0%dim_2%SM
 1138.          $SC_capac0_I55 = capac0%dim_2%LB
 1138.          $SC_capac0_I56 = capac0%dim_3%SM
 1138.          $SC_capac0_I57 = capac0%dim_3%LB
 1138.          $I_L1138_30 = 0
 1138.          do
 1138.             $I_L1138_26 = 0
 1138.             do
 1138.                $I_L1138_20 = 0
 1138. !dir$ ivdep
 1138.                do
 1138.                   (capac0%base_addr)($SC_capac0_I53 + $I_L1138_20, $SC_capac0_I55 + $I_L1138_26, $SC_capac0_I57 + $I_L1138_30, 0) = 0.0
 1138.                   $I_L1138_20 = 1 + $I_L1138_20
 1138.                   if ( $I_L1138_20 >= $F_A38 ) exit
 1138.                enddo
 1138.                $I_L1138_26 = 1 + $I_L1138_26
 1138.                if ( $I_L1138_26 >= $F_A37 ) exit
 1138.             enddo
 1138.             $I_L1138_30 = 1 + $I_L1138_30
 1138.             if ( $I_L1138_30 >= $F_A36 ) exit
 1138.          enddo
 1138.       endif
 1139.       if ( jbmax > 0 ) then
 1139.          $I_L1139_22 = 0
 1139.          do
 1140.             $ncount_S3 = 0
 1141.             $t_S1 = (ibmaxperjb%base_addr)(1 + $I_L1139_22, 0)
 1141.             if ( $t_S1 > 0 ) then
 1141.                $I_L1141_16 = 0
 1141. !dir$ ivdep
 1141.                do
 1142.                   if ( (imask%base_addr)(1 + $I_L1141_16, 1 + $I_L1139_22, 0) > 0 ) then
 1143.                      $ncount_S3 = 1 + $ncount_S3
 1144.                      if ( (sheleg%base_addr)(1 + $I_L1141_16, 1 + $I_L1139_22, 0) > 0.0 ) then
 1145.                         (capac0%base_addr)($ncount_S3, 2, 1 + $I_L1139_22, 0) = ( 1.0e-3 * (sheleg%base_addr)(1 + $I_L1141_16, 1 + $I_L1139_22, 0) )
 1146.                         (capacm%base_addr)($ncount_S3, 2, 1 + $I_L1139_22, 0) = ( 1.0e-3 * (sheleg%base_addr)(1 + $I_L1141_16, 1 + $I_L1139_22, 0) )
 1147.                         (tg0%base_addr)($ncount_S3, 1 + $I_L1139_22, 0) = min( 273.15000000000003, (tg0%base_addr)($ncount_S3, 1 + $I_L1139_22, 0) )
 1148.                         (tgm%base_addr)($ncount_S3, 1 + $I_L1139_22, 0) = min( 273.15000000000003, (tgm%base_addr)($ncount_S3, 1 + $I_L1139_22, 0) )
 1148.                      endif
 1148.                   endif
 1151.                   $I_L1141_16 = 1 + $I_L1141_16
 1150.                   if ( $I_L1141_16 >= $t_S1 ) exit
 1150.                enddo
 1150.             endif
 1152.             $I_L1139_22 = 1 + $I_L1139_22
 1151.             if ( $I_L1139_22 >= jbmax ) exit
 1151.          enddo
 1151.       endif
 1153.       return
 1153.       end
 1153.       
 1182.       
 1182.       subroutine initgetsbc( ifday, tod, idate, idatec, ibmax, jbmax, kmax, ibmaxperjb )
 1157.       ibmaxperjb%dim_1%LB = 1
 1172.       $t_S0 = willgetsbc( idate(1), tod, fint )
 1172.       if ( $t_S0 ) then
 1174.          t$272 = ibmaxperjb
 1174.          call getsbc( imax, jmax, kmax, (albvisdiff%base_addr)(albvisdiff%dim_1%LB, albvisdiff%dim_2%LB, 0), (gtsea%base_addr)(gtsea%dim_1%LB, gtsea%dim_2%LB, 0), (soilm%base_addr)(soilm%dim_1%LB, soilm%dim_2%LB, 0), (sheleg%base_addr)(sheleg%dim_1%LB, sheleg%dim_2%LB, 0), (o3mix%base_addr)(o3mix%dim_1%LB, o3mix%dim_2%LB, o3mix%dim_3%LB, 0), ifday, tod, idate(1), idatec(1), ifalb, ifsst, ifslm, ifsnw, ifozone, sstlag, intsst, fint, tice, yrl, monl(1), ibmax, jbmax, t$272 )
 1174.       endif
 1182.       return
 1182.       end
 1182.       
 1455.       
 1455.       subroutine read_gl_sm_bc( imax, jmax, jbmax, ibmaxperjb, record_type, fnamesoiltype, fnamevegtype, fnamesoilmoist, imask_in )
 1186.       ibmaxperjb%dim_1%LB = 1
 1186.       t$94 = _len( record_type )
 1186.       t$95 = _len( fnamesoiltype )
 1186.       t$96 = _len( fnamevegtype )
 1186.       t$97 = _len( fnamesoilmoist )
 1186.       t$31 = imax
 1186.       t$32 = jmax
 1205.       t$98 = _zla( 0, imax )
 1186.       t$99 = _zla( 0, imax )
 1205.       t$100 = _zla( 0, jmax )
 1186.       t$101 = _zla( 0, imax ) * _zla( 0, jmax )
 1186.       t$102 = _zla( 0, imax ) * _zla( 0, jmax )
 1186.       t$103 = _zla( 0, imax ) * _zla( 0, jmax ) * 5
 1212.       t$106 = _zla( 0, imax ) * _zla( 0, jmax ) * 40
 1186.       t$107 = _zla( 0, imax ) * _zla( 0, jmax ) * 8
 1213.       t$108 = _zla( 0, imax ) * _zla( 0, jmax ) * 40
 1213.       t$110 = _zla( 0, imax ) * _zla( 0, jmax ) * 104
 1214.       t$111 = _zla( 0, imax ) * _zla( 0, jmax ) * 104
 1214.       t$113 = _zla( 0, imax ) * _zla( 0, jmax ) * 112
 1211.       t$114 = _zla( 0, imax ) * _zla( 0, jmax ) * 112
 1211.       t$116 = _zla( 0, imax ) * _zla( 0, jmax ) * 152
 1186.       t$104 = int( _alloc( _zla( 0, imax ) * _zla( 0, jmax ) * 152 ), 8 )
 1212.       t$105 = t$104
 1213.       t$109 = t$104 + _zla( 0, imax ) * _zla( 0, jmax ) * 40
 1214.       t$112 = t$104 + _zla( 0, imax ) * _zla( 0, jmax ) * 104
 1211.       t$115 = t$104 + _zla( 0, imax ) * _zla( 0, jmax ) * 112
 1226.        _substr(t$273,1,19) = '**(read_gl_sm_bc)**'
 1226.       t$274 = 21 + ( _ltrim(  _substr(fnamesoiltype,1,_len( fnamesoiltype )) ) )
 1226.       t$276 = int( _alloc( _zla( 0, t$274 ) ), 8 )
 1226.        _substr(t$275,1,_zla( 0, t$274 )) = //( 'Opening GL soil file=',  _substr(fnamesoiltype,1,_ltrim(  _substr(fnamesoiltype,1,_len( fnamesoiltype )) )) )
 1226.       call msgone(  _substr(t$273,1,19),  _substr(t$275,1,_zla( 0, t$274 )) )
 1226.       _free( t$276 )
 1227.       $F_A33 = jmax
 1227.       $F_A34 = imax
 1227.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
 1227.          $I_L1227_220 = 0
 1227.          do
 1227.             $I_L1227_208 = 0
 1227.             do
 1227.                $I_L1227_180 = 0
 1227. !dir$ ivdep
 1227.                do
 1227.                   fracocc(1 + $I_L1227_180, 1 + $I_L1227_208, 1 + $I_L1227_220) = 0.0
 1227.                   $I_L1227_180 = 1 + $I_L1227_180
 1227.                   if ( $I_L1227_180 >= $F_A34 ) exit
 1227.                enddo
 1227.                $I_L1227_208 = 1 + $I_L1227_208
 1227.                if ( $I_L1227_208 >= $F_A33 ) exit
 1227.             enddo
 1227.             $I_L1227_220 = 1 + $I_L1227_220
 1227.             if ( $I_L1227_220 >= 5 ) exit
 1227.          enddo
 1227.       endif
 1228.       $F_A35 = jmax
 1228.       $F_A36 = imax
 1228.       if ( and( -$F_A36, -$F_A35 ) < 0 ) then
 1228.          $I_L1228_222 = 0
 1228.          do
 1228.             $I_L1228_210 = 0
 1228.             do
 1228.                $I_L1228_182 = 0
 1228. !dir$ ivdep
 1228.                do
 1228.                   glsm(1 + $I_L1228_182, 1 + $I_L1228_210, 1 + $I_L1228_222) = 0.0
 1228.                   $I_L1228_182 = 1 + $I_L1228_182
 1228.                   if ( $I_L1228_182 >= $F_A36 ) exit
 1228.                enddo
 1228.                $I_L1228_210 = 1 + $I_L1228_210
 1228.                if ( $I_L1228_210 >= $F_A35 ) exit
 1228.             enddo
 1228.             $I_L1228_222 = 1 + $I_L1228_222
 1228.             if ( $I_L1228_222 >= 8 ) exit
 1228.          enddo
 1228.       endif
 1229.       $F_A37 = jmax
 1229.       $F_A38 = imax
 1229.       if ( and( -$F_A38, -$F_A37 ) < 0 ) then
 1229.          $I_L1229_212 = 0
 1229.          do
 1229.             $I_L1229_184 = 0
 1229. !dir$ ivdep
 1229.             do
 1229.                soiltype(1 + $I_L1229_184, 1 + $I_L1229_212) = 0.0
 1229.                $I_L1229_184 = 1 + $I_L1229_184
 1229.                if ( $I_L1229_184 >= $F_A38 ) exit
 1229.             enddo
 1229.             $I_L1229_212 = 1 + $I_L1229_212
 1229.             if ( $I_L1229_212 >= $F_A37 ) exit
 1229.          enddo
 1229.       endif
 1230.       if (  _substr(record_type,1,_len( record_type )) == 'seq' ) then
 1233.          ierr = 0
 1232.          t$278 = nfsoiltp
 1233.           _substr(t$279,1,4) = 'OLD'
 1232.           _substr(t$280,1,10) = 'SEQUENTIAL'
 1232.           _substr(t$281,1,11) = 'UNFORMATTED'
 1233.           _substr(t$282,1,4) = 'READ'
 1232.          t$283(1) = 0x100000000000000L
 1232. !dir$ suppress t$278
 1232.          t$283(2) = int( loc( t$278 ), 8 )
 1232. !dir$ suppress ierr
 1232.          t$283(3) = int( loc( ierr ), 8 )
 1232.          t$283(4) = 0
 1232. !dir$ suppress  _substr(fnamesoiltype,1,_ltrim(  _substr(fnamesoiltype,1,max( 0, t$95 )) ))
 1232.          t$283(5) = int( loc(  _substr(fnamesoiltype,1,_ltrim(  _substr(fnamesoiltype,1,_len( fnamesoiltype )) )) ), 8 )
 1232.          t$283(6) = _ltrim(  _substr(fnamesoiltype,1,_len( fnamesoiltype )) )
 1232. !dir$ suppress  _substr(t$279,1,3)
 1232.          t$283(7) = int( loc(  _substr(t$279,1,3) ), 8 )
 1232.          t$283(8) = 3
 1232. !dir$ suppress  _substr(t$280,1,10)
 1232.          t$283(9) = int( loc(  _substr(t$280,1,10) ), 8 )
 1232.          t$283(10) = 10
 1232. !dir$ suppress  _substr(t$281,1,11)
 1232.          t$283(11) = int( loc(  _substr(t$281,1,11) ), 8 )
 1232.          t$283(12) = 11
 1232.          t$283(13) = 0
 1232.          t$283(14) = 0
 1232.          t$283(16) = 0
 1232. !dir$ suppress  _substr(t$282,1,4)
 1232.          t$283(18) = int( loc(  _substr(t$282,1,4) ), 8 )
 1232.          t$283(19) = 4
 1232.          t$283(20) = 0
 1232.          t$283(22) = 0
 1232.          t$283(24) = 0x2000200000000L
 1232.          t$283(25) = 0
 1232.          t$283(27) = 0
 1232.          t$283(29) = 0
 1232.          t$283(31) = 0
 1232.          t$283(33) = 0
 1232.          t$283(35) = 0
 1232.          t$277 = _open( t$283 )
 1234.          if ( ierr /= 0 ) then
 1235.             $Unit_temp_O0 = nfprt
 1235.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$36,  _substr(t$35,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamesoiltype,1,_ltrim(  _substr(fnamesoiltype,1,_len( fnamesoiltype )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 1237.              _substr(t$284,1,11) = '**(ERROR)**'
 1237.             call _stop(  _substr(t$284,1,11) )
 1237.          else
 1239.             $Unit_temp_O1 = nfsoiltp
 1239.             _uread( _clist( 0, 0, 2, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1239.             if ( jmax > 0 ) then
 1239.                if ( imax > 0 ) then
 1239.                   $I_L1239_188 = 0
 1239.                   do
 1239.                      $I_L1239_154 = 0
 1239.                      do
 1239.                         if ( ( 1 + $I_L1239_154 ) <= 0 .or. ( 1 + $I_L1239_154 ) > t$31 ) then
 1239.                             _substr(t$292,1,18) = 'FieldsPhysics.f90'
 1239.                             _substr(t$293,1,9) = 'SOILTYPE'
 1239.                            t$278 = 1 + $I_L1239_154
 1239.                            call _bounds_error(  _substr(t$292,1,18), 1239,  _substr(t$293,1,9), 1, 1, t$31, t$278, t$291 )
 1239.                         endif
 1239.                         if ( ( 1 + $I_L1239_188 ) <= 0 .or. ( 1 + $I_L1239_188 ) > t$32 ) then
 1239.                             _substr(t$295,1,18) = 'FieldsPhysics.f90'
 1239.                             _substr(t$296,1,9) = 'SOILTYPE'
 1239.                            t$297 = 1 + $I_L1239_188
 1239.                            call _bounds_error(  _substr(t$295,1,18), 1239,  _substr(t$296,1,9), 2, 1, t$32, t$297, t$294 )
 1239.                         endif
 1239.                         $Unit_temp_O2 = nfsoiltp
 1239.                         _uread( _clist( 0, 0, 0, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O19, 0x804060300000000L ) ) )
 1239.                         soiltype(1 + $I_L1239_154, 1 + $I_L1239_188) = $IOitem_O19
 1239.                         $I_L1239_154 = 1 + $I_L1239_154
 1239.                         if ( $I_L1239_154 >= imax ) exit
 1239.                      enddo
 1239.                      $I_L1239_188 = 1 + $I_L1239_188
 1239.                      if ( $I_L1239_188 >= jmax ) exit
 1239.                   enddo
 1239.                endif
 1239.             endif
 1239.             $Unit_temp_O3 = nfsoiltp
 1239.             _uread( _clist( 0, 0, 1, $Unit_temp_O3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1241.             if ( reducedgrid ) then
 1242.                call nearestijtoibjb_r2d( soiltype(1, 1), (soil_type%base_addr)(soil_type%dim_1%LB, soil_type%dim_2%LB, 0) )
 1242.             else
 1244. !dir$ suppress soiltype(1, 1)
 1244.                t$298%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( soiltype(1, 1) ) )
 1244.                t$298%header%el_len = 64
 1244.                t$298%header%assoc = 1
 1244.                t$298%header%ptr_alloc = 0
 1244.                t$298%header%p_or_a = 0
 1244.                t$298%header%a_contig = 1
 1244.                t$298%header%dv_versn = 2
 1244.                t$298%header%dv_smunit = 64
 1244.                t$298%header%d_type = 0
 1244.                t$298%header%n_params = 0
 1244.                t$298%header%pad_codim = 0
 1244.                t$298%header%n_codim = 0
 1244.                t$298%header%pad_dim = 0
 1244.                t$298%header%n_dim = 2
 1244.                t$298%header%d_type_idx = 13
 1244.                t$298%header%typ_code = 134481411
 1244.                t$298%header%orig_base = 0
 1244.                t$298%header%orig_size = 0
 1244.                t$298%dim_1%LB = 1
 1244.                t$298%dim_1%EX = _zla( 0, imax )
 1244.                t$298%dim_1%SM = 1
 1244.                t$298%dim_2%LB = 1
 1244.                t$298%dim_2%EX = _zla( 0, jmax )
 1244.                t$298%dim_2%SM = _zla( 0, imax )
 1244.                t$299 = soil_type
 1244.                call ijtoibjb_r( t$298, t$299 )
 1244.             endif
 1247.             t$278 = nfsoiltp
 1247.             t$301(1) = 0x100000000000000L
 1247. !dir$ suppress t$278
 1247.             t$301(2) = int( loc( t$278 ), 8 )
 1247.             t$301(3) = 0
 1247.             t$301(4) = 0
 1247.             t$301(5) = 0
 1247.             t$301(7) = 0
 1247.             t$301(8) = 0
 1247.             t$300 = _close( t$301 )
 1247.             goto 10
 1247.          endif
 1249.       else if (  _substr(record_type,1,_len( record_type )) == 'vfm' ) then
 1252.          ierr = 0
 1251.          t$297 = nfsoiltp
 1252.           _substr(t$303,1,4) = 'OLD'
 1251.           _substr(t$304,1,10) = 'SEQUENTIAL'
 1251.           _substr(t$305,1,9) = 'FORMATTED'
 1252.           _substr(t$306,1,4) = 'READ'
 1251.          t$307(1) = 0x100000000000000L
 1251. !dir$ suppress t$297
 1251.          t$307(2) = int( loc( t$297 ), 8 )
 1251. !dir$ suppress ierr
 1251.          t$307(3) = int( loc( ierr ), 8 )
 1251.          t$307(4) = 0
 1251. !dir$ suppress  _substr(fnamesoiltype,1,_ltrim(  _substr(fnamesoiltype,1,max( 0, t$95 )) ))
 1251.          t$307(5) = int( loc(  _substr(fnamesoiltype,1,_ltrim(  _substr(fnamesoiltype,1,_len( fnamesoiltype )) )) ), 8 )
 1251.          t$307(6) = _ltrim(  _substr(fnamesoiltype,1,_len( fnamesoiltype )) )
 1251. !dir$ suppress  _substr(t$303,1,3)
 1251.          t$307(7) = int( loc(  _substr(t$303,1,3) ), 8 )
 1251.          t$307(8) = 3
 1251. !dir$ suppress  _substr(t$304,1,10)
 1251.          t$307(9) = int( loc(  _substr(t$304,1,10) ), 8 )
 1251.          t$307(10) = 10
 1251. !dir$ suppress  _substr(t$305,1,9)
 1251.          t$307(11) = int( loc(  _substr(t$305,1,9) ), 8 )
 1251.          t$307(12) = 9
 1251.          t$307(13) = 0
 1251.          t$307(14) = 0
 1251.          t$307(16) = 0
 1251. !dir$ suppress  _substr(t$306,1,4)
 1251.          t$307(18) = int( loc(  _substr(t$306,1,4) ), 8 )
 1251.          t$307(19) = 4
 1251.          t$307(20) = 0
 1251.          t$307(22) = 0
 1251.          t$307(24) = 0x2000200000000L
 1251.          t$307(25) = 0
 1251.          t$307(27) = 0
 1251.          t$307(29) = 0
 1251.          t$307(31) = 0
 1251.          t$307(33) = 0
 1251.          t$307(35) = 0
 1251.          t$302 = _open( t$307 )
 1253.          if ( ierr /= 0 ) then
 1254.             $Unit_temp_O4 = nfprt
 1254.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, t$38,  _substr(t$37,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamesoiltype,1,_ltrim(  _substr(fnamesoiltype,1,_len( fnamesoiltype )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 1256.              _substr(t$308,1,11) = '**(ERROR)**'
 1256.             call _stop(  _substr(t$308,1,11) )
 1256.          else
 1259.             t$309 = imax * jmax
 1259.              _substr(t$310,1,3) = 'LIN'
 1259.             call vfirec( nfsoiltp, soiltype(1, 1), t$309,  _substr(t$310,1,3) )
 1261.             if ( imax > 0 ) then
 1262.                if ( jmax > 0 ) then
 1262.                   $I_L1262_186 = 0
 1262.                   do
 1261.                      $I_L1261_152 = 0
 1261. !dir$ ivdep
 1261.                      do
 1263.                         soiltype(1 + $I_L1261_152, 1 + $I_L1262_186) = real( int( 1.0000000000000001e-1 + soiltype(1 + $I_L1261_152, 1 + $I_L1262_186) ), 8 )
 1265.                         $I_L1261_152 = 1 + $I_L1261_152
 1262.                         if ( $I_L1261_152 >= imax ) exit
 1262.                      enddo
 1264.                      $I_L1262_186 = 1 + $I_L1262_186
 1264.                      if ( $I_L1262_186 >= jmax ) exit
 1264.                   enddo
 1264.                endif
 1264.             endif
 1267.             if ( reducedgrid ) then
 1268.                call nearestijtoibjb_r2d( soiltype(1, 1), (soil_type%base_addr)(soil_type%dim_1%LB, soil_type%dim_2%LB, 0) )
 1268.             else
 1270. !dir$ suppress soiltype(1, 1)
 1270.                t$317%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( soiltype(1, 1) ) )
 1270.                t$317%header%el_len = 64
 1270.                t$317%header%assoc = 1
 1270.                t$317%header%ptr_alloc = 0
 1270.                t$317%header%p_or_a = 0
 1270.                t$317%header%a_contig = 1
 1270.                t$317%header%dv_versn = 2
 1270.                t$317%header%dv_smunit = 64
 1270.                t$317%header%d_type = 0
 1270.                t$317%header%n_params = 0
 1270.                t$317%header%pad_codim = 0
 1270.                t$317%header%n_codim = 0
 1270.                t$317%header%pad_dim = 0
 1270.                t$317%header%n_dim = 2
 1270.                t$317%header%d_type_idx = 13
 1270.                t$317%header%typ_code = 134481411
 1270.                t$317%header%orig_base = 0
 1270.                t$317%header%orig_size = 0
 1270.                t$317%dim_1%LB = 1
 1270.                t$317%dim_1%EX = _zla( 0, imax )
 1270.                t$317%dim_1%SM = 1
 1270.                t$317%dim_2%LB = 1
 1270.                t$317%dim_2%EX = _zla( 0, jmax )
 1270.                t$317%dim_2%SM = _zla( 0, imax )
 1270.                t$318 = soil_type
 1270.                call ijtoibjb_r( t$317, t$318 )
 1270.             endif
 1273.             t$278 = nfsoiltp
 1273.             t$320(1) = 0x100000000000000L
 1273. !dir$ suppress t$278
 1273.             t$320(2) = int( loc( t$278 ), 8 )
 1273.             t$320(3) = 0
 1273.             t$320(4) = 0
 1273.             t$320(5) = 0
 1273.             t$320(7) = 0
 1273.             t$320(8) = 0
 1273.             t$319 = _close( t$320 )
 1273.             goto 10
 1273.          endif
 1273.       else
 1273.    10    continue
 1280.           _substr(t$321,1,19) = '**(read_gl_sm_bc)**'
 1280.          t$322 = 20 + ( _ltrim(  _substr(fnamevegtype,1,_len( fnamevegtype )) ) )
 1280.          t$324 = int( _alloc( max( 0, t$322 ) ), 8 )
 1280.           _substr(t$323,1,max( 0, t$322 )) = //( 'Opening GL veg file=',  _substr(fnamevegtype,1,_ltrim(  _substr(fnamevegtype,1,_len( fnamevegtype )) )) )
 1280.          call msgone(  _substr(t$321,1,19),  _substr(t$323,1,max( 0, t$322 )) )
 1280.          _free( t$324 )
 1282.          if (  _substr(record_type,1,_len( record_type )) == 'seq' ) then
 1285.             ierr = 0
 1284.             t$297 = nfvegtp
 1285.              _substr(t$326,1,4) = 'OLD'
 1284.              _substr(t$327,1,10) = 'SEQUENTIAL'
 1284.              _substr(t$328,1,11) = 'UNFORMATTED'
 1285.              _substr(t$329,1,4) = 'READ'
 1284.             t$330(1) = 0x100000000000000L
 1284. !dir$ suppress t$297
 1284.             t$330(2) = int( loc( t$297 ), 8 )
 1284. !dir$ suppress ierr
 1284.             t$330(3) = int( loc( ierr ), 8 )
 1284.             t$330(4) = 0
 1284. !dir$ suppress  _substr(fnamevegtype,1,_ltrim(  _substr(fnamevegtype,1,max( 0, t$96 )) ))
 1284.             t$330(5) = int( loc(  _substr(fnamevegtype,1,_ltrim(  _substr(fnamevegtype,1,_len( fnamevegtype )) )) ), 8 )
 1284.             t$330(6) = _ltrim(  _substr(fnamevegtype,1,_len( fnamevegtype )) )
 1284. !dir$ suppress  _substr(t$326,1,3)
 1284.             t$330(7) = int( loc(  _substr(t$326,1,3) ), 8 )
 1284.             t$330(8) = 3
 1284. !dir$ suppress  _substr(t$327,1,10)
 1284.             t$330(9) = int( loc(  _substr(t$327,1,10) ), 8 )
 1284.             t$330(10) = 10
 1284. !dir$ suppress  _substr(t$328,1,11)
 1284.             t$330(11) = int( loc(  _substr(t$328,1,11) ), 8 )
 1284.             t$330(12) = 11
 1284.             t$330(13) = 0
 1284.             t$330(14) = 0
 1284.             t$330(16) = 0
 1284. !dir$ suppress  _substr(t$329,1,4)
 1284.             t$330(18) = int( loc(  _substr(t$329,1,4) ), 8 )
 1284.             t$330(19) = 4
 1284.             t$330(20) = 0
 1284.             t$330(22) = 0
 1284.             t$330(24) = 0x2000200000000L
 1284.             t$330(25) = 0
 1284.             t$330(27) = 0
 1284.             t$330(29) = 0
 1284.             t$330(31) = 0
 1284.             t$330(33) = 0
 1284.             t$330(35) = 0
 1284.             t$325 = _open( t$330 )
 1286.             if ( ierr /= 0 ) then
 1287.                $Unit_temp_O5 = nfprt
 1287.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, t$40,  _substr(t$39,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamevegtype,1,_ltrim(  _substr(fnamevegtype,1,_len( fnamevegtype )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 1289.                 _substr(t$331,1,11) = '**(ERROR)**'
 1289.                call _stop(  _substr(t$331,1,11) )
 1289.             else
 1292.                $I_L1292_216 = 0
 1292.                do
 1294.                   $Unit_temp_O6 = nfvegtp
 1294.                   _uread( _clist( 0, 0, 2, $Unit_temp_O6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1294.                   if ( jmax > 0 ) then
 1294.                      if ( imax > 0 ) then
 1294.                         if ( ( 1 + $I_L1292_216 ) <= 0 .or. ( 1 + $I_L1292_216 ) > 5 ) then
 1294.                            $I_L1294_192 = 0
 1294.                            do
 1294.                               $I_L1294_158 = 0
 1294.                               do
 1294.                                  if ( ( 1 + $I_L1294_158 ) <= 0 .or. ( 1 + $I_L1294_158 ) > t$31 ) then
 1294.                                      _substr(t$340,1,18) = 'FieldsPhysics.f90'
 1294.                                      _substr(t$341,1,8) = 'VEGTYPE'
 1294.                                     t$278 = 1 + $I_L1294_158
 1294.                                     call _bounds_error(  _substr(t$340,1,18), 1294,  _substr(t$341,1,8), 1, 1, t$31, t$278, t$339 )
 1294.                                  endif
 1294.                                  if ( ( 1 + $I_L1294_192 ) <= 0 .or. ( 1 + $I_L1294_192 ) > t$32 ) then
 1294.                                      _substr(t$343,1,18) = 'FieldsPhysics.f90'
 1294.                                      _substr(t$344,1,8) = 'VEGTYPE'
 1294.                                     t$297 = 1 + $I_L1294_192
 1294.                                     call _bounds_error(  _substr(t$343,1,18), 1294,  _substr(t$344,1,8), 2, 1, t$32, t$297, t$342 )
 1294.                                  endif
 1294.                                   _substr(t$346,1,18) = 'FieldsPhysics.f90'
 1294.                                   _substr(t$347,1,8) = 'VEGTYPE'
 1294.                                  t$348 = 1 + $I_L1292_216
 1294.                                  call _bounds_error(  _substr(t$346,1,18), 1294,  _substr(t$347,1,8), 3, 1, 5, t$348, t$345 )
 1294.                                  $Unit_temp_O7 = nfvegtp
 1294.                                  _uread( _clist( 0, 0, 0, $Unit_temp_O7, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O20, 0x804060300000000L ) ) )
 1294.                                  vegtype(1 + $I_L1294_158, 1 + $I_L1294_192, 1 + $I_L1292_216) = $IOitem_O20
 1294.                                  $I_L1294_158 = 1 + $I_L1294_158
 1294.                                  if ( $I_L1294_158 >= imax ) exit
 1294.                               enddo
 1294.                               $I_L1294_192 = 1 + $I_L1294_192
 1294.                               if ( $I_L1294_192 >= jmax ) exit
 1294.                            enddo
 1294.                         else
 1294.                            $I_L1294_202 = 0
 1294.                            do
 1294.                               $I_L1294_170 = 0
 1294.                               do
 1294.                                  if ( ( 1 + $I_L1294_170 ) <= 0 .or. ( 1 + $I_L1294_170 ) > t$31 ) then
 1294.                                      _substr(t$340,1,18) = 'FieldsPhysics.f90'
 1294.                                      _substr(t$341,1,8) = 'VEGTYPE'
 1294.                                     t$278 = 1 + $I_L1294_170
 1294.                                     call _bounds_error(  _substr(t$340,1,18), 1294,  _substr(t$341,1,8), 1, 1, t$31, t$278, t$339 )
 1294.                                  endif
 1294.                                  if ( ( 1 + $I_L1294_202 ) <= 0 .or. ( 1 + $I_L1294_202 ) > t$32 ) then
 1294.                                      _substr(t$343,1,18) = 'FieldsPhysics.f90'
 1294.                                      _substr(t$344,1,8) = 'VEGTYPE'
 1294.                                     t$297 = 1 + $I_L1294_202
 1294.                                     call _bounds_error(  _substr(t$343,1,18), 1294,  _substr(t$344,1,8), 2, 1, t$32, t$297, t$342 )
 1294.                                  endif
 1294.                                  $Unit_temp_O7 = nfvegtp
 1294.                                  _uread( _clist( 0, 0, 0, $Unit_temp_O7, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O20, 0x804060300000000L ) ) )
 1294.                                  vegtype(1 + $I_L1294_170, 1 + $I_L1294_202, 1 + $I_L1292_216) = $IOitem_O20
 1294.                                  $I_L1294_170 = 1 + $I_L1294_170
 1294.                                  if ( $I_L1294_170 >= imax ) exit
 1294.                               enddo
 1294.                               $I_L1294_202 = 1 + $I_L1294_202
 1294.                               if ( $I_L1294_202 >= jmax ) exit
 1294.                            enddo
 1294.                         endif
 1294.                      endif
 1294.                   endif
 1294.                   $Unit_temp_O8 = nfvegtp
 1294.                   _uread( _clist( 0, 0, 1, $Unit_temp_O8, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1295.                   $Unit_temp_O9 = nfvegtp
 1295.                   _uread( _clist( 0, 0, 2, $Unit_temp_O9, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1295.                   if ( jmax > 0 ) then
 1295.                      if ( imax > 0 ) then
 1295.                         if ( ( 1 + $I_L1292_216 ) <= 0 .or. ( 1 + $I_L1292_216 ) > 5 ) then
 1295.                            $I_L1295_194 = 0
 1295.                            do
 1295.                               $I_L1295_160 = 0
 1295.                               do
 1295.                                  if ( ( 1 + $I_L1295_160 ) <= 0 .or. ( 1 + $I_L1295_160 ) > t$31 ) then
 1295.                                      _substr(t$356,1,18) = 'FieldsPhysics.f90'
 1295.                                      _substr(t$357,1,8) = 'FRACOCC'
 1295.                                     t$278 = 1 + $I_L1295_160
 1295.                                     call _bounds_error(  _substr(t$356,1,18), 1295,  _substr(t$357,1,8), 1, 1, t$31, t$278, t$355 )
 1295.                                  endif
 1295.                                  if ( ( 1 + $I_L1295_194 ) <= 0 .or. ( 1 + $I_L1295_194 ) > t$32 ) then
 1295.                                      _substr(t$359,1,18) = 'FieldsPhysics.f90'
 1295.                                      _substr(t$360,1,8) = 'FRACOCC'
 1295.                                     t$297 = 1 + $I_L1295_194
 1295.                                     call _bounds_error(  _substr(t$359,1,18), 1295,  _substr(t$360,1,8), 2, 1, t$32, t$297, t$358 )
 1295.                                  endif
 1295.                                   _substr(t$362,1,18) = 'FieldsPhysics.f90'
 1295.                                   _substr(t$363,1,8) = 'FRACOCC'
 1295.                                  t$348 = 1 + $I_L1292_216
 1295.                                  call _bounds_error(  _substr(t$362,1,18), 1295,  _substr(t$363,1,8), 3, 1, 5, t$348, t$361 )
 1295.                                  $Unit_temp_O10 = nfvegtp
 1295.                                  _uread( _clist( 0, 0, 0, $Unit_temp_O10, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O21, 0x804060300000000L ) ) )
 1295.                                  fracocc(1 + $I_L1295_160, 1 + $I_L1295_194, 1 + $I_L1292_216) = $IOitem_O21
 1295.                                  $I_L1295_160 = 1 + $I_L1295_160
 1295.                                  if ( $I_L1295_160 >= imax ) exit
 1295.                               enddo
 1295.                               $I_L1295_194 = 1 + $I_L1295_194
 1295.                               if ( $I_L1295_194 >= jmax ) exit
 1295.                            enddo
 1295.                         else
 1295.                            $I_L1295_204 = 0
 1295.                            do
 1295.                               $I_L1295_172 = 0
 1295.                               do
 1295.                                  if ( ( 1 + $I_L1295_172 ) <= 0 .or. ( 1 + $I_L1295_172 ) > t$31 ) then
 1295.                                      _substr(t$356,1,18) = 'FieldsPhysics.f90'
 1295.                                      _substr(t$357,1,8) = 'FRACOCC'
 1295.                                     t$278 = 1 + $I_L1295_172
 1295.                                     call _bounds_error(  _substr(t$356,1,18), 1295,  _substr(t$357,1,8), 1, 1, t$31, t$278, t$355 )
 1295.                                  endif
 1295.                                  if ( ( 1 + $I_L1295_204 ) <= 0 .or. ( 1 + $I_L1295_204 ) > t$32 ) then
 1295.                                      _substr(t$359,1,18) = 'FieldsPhysics.f90'
 1295.                                      _substr(t$360,1,8) = 'FRACOCC'
 1295.                                     t$297 = 1 + $I_L1295_204
 1295.                                     call _bounds_error(  _substr(t$359,1,18), 1295,  _substr(t$360,1,8), 2, 1, t$32, t$297, t$358 )
 1295.                                  endif
 1295.                                  $Unit_temp_O10 = nfvegtp
 1295.                                  _uread( _clist( 0, 0, 0, $Unit_temp_O10, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O21, 0x804060300000000L ) ) )
 1295.                                  fracocc(1 + $I_L1295_172, 1 + $I_L1295_204, 1 + $I_L1292_216) = $IOitem_O21
 1295.                                  $I_L1295_172 = 1 + $I_L1295_172
 1295.                                  if ( $I_L1295_172 >= imax ) exit
 1295.                               enddo
 1295.                               $I_L1295_204 = 1 + $I_L1295_204
 1295.                               if ( $I_L1295_204 >= jmax ) exit
 1295.                            enddo
 1295.                         endif
 1295.                      endif
 1295.                   endif
 1295.                   $Unit_temp_O11 = nfvegtp
 1295.                   _uread( _clist( 0, 0, 1, $Unit_temp_O11, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1297.                   if ( reducedgrid ) then
 1298.                      call nearestijtoibjb_r2d( vegtype(1, 1, 1 + $I_L1292_216), (veg_type%base_addr)(veg_type%dim_1%LB, veg_type%dim_2%LB, 1 + $I_L1292_216, 0) )
 1298.                   else
 1300. !dir$ suppress vegtype(1, 1, ipatch)
 1300.                      t$364%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( vegtype(1, 1, 1 + $I_L1292_216) ) )
 1300.                      t$364%header%el_len = 64
 1300.                      t$364%header%assoc = 1
 1300.                      t$364%header%ptr_alloc = 0
 1300.                      t$364%header%p_or_a = 0
 1300.                      t$364%header%a_contig = 1
 1300.                      t$364%header%dv_versn = 2
 1300.                      t$364%header%dv_smunit = 64
 1300.                      t$364%header%d_type = 0
 1300.                      t$364%header%n_params = 0
 1300.                      t$364%header%pad_codim = 0
 1300.                      t$364%header%n_codim = 0
 1300.                      t$364%header%pad_dim = 0
 1300.                      t$364%header%n_dim = 2
 1300.                      t$364%header%d_type_idx = 13
 1300.                      t$364%header%typ_code = 134481411
 1300.                      t$364%header%orig_base = 0
 1300.                      t$364%header%orig_size = 0
 1300.                      t$364%dim_1%LB = 1
 1300.                      t$364%dim_1%EX = ( max( 0, ( -1 + t$31 + 1 ) ) )
 1300.                      t$364%dim_1%SM = 1
 1300.                      t$364%dim_2%LB = 1
 1300.                      t$364%dim_2%EX = ( max( 0, ( -1 + t$32 + 1 ) ) )
 1300.                      t$364%dim_2%SM = _zla( 0, imax )
 1300. !dir$ suppress (veg_type%base_addr)(veg_type%dim_1%LB, veg_type%dim_2%LB, ipatch, 0)
 1300.                      t$365%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( (veg_type%base_addr)(veg_type%dim_1%LB, veg_type%dim_2%LB, 1 + $I_L1292_216, 0) ) )
 1300.                      t$365%header%el_len = 64
 1300.                      t$365%header%assoc = 1
 1300.                      t$365%header%ptr_alloc = veg_type%header%ptr_alloc
 1300.                      t$365%header%p_or_a = 0
 1300.                      t$365%header%a_contig = veg_type%header%a_contig
 1300.                      t$365%header%dv_versn = 2
 1300.                      t$365%header%dv_smunit = 64
 1300.                      t$365%header%d_type = 0
 1300.                      t$365%header%n_params = 0
 1300.                      t$365%header%pad_codim = 0
 1300.                      t$365%header%n_codim = 0
 1300.                      t$365%header%pad_dim = 0
 1300.                      t$365%header%n_dim = 2
 1300.                      t$365%header%d_type_idx = 13
 1300.                      t$365%header%typ_code = 134481411
 1300.                      t$365%header%orig_base = veg_type%header%orig_base
 1300.                      t$365%header%orig_size = veg_type%header%orig_size
 1300.                      t$365%dim_1%LB = 1
 1300.                      t$365%dim_1%EX = ( max( 0, ( -1 + veg_type%dim_1%EX + 1 ) ) )
 1300.                      t$365%dim_1%SM = veg_type%dim_1%SM
 1300.                      t$365%dim_2%LB = 1
 1300.                      t$365%dim_2%EX = ( max( 0, ( -1 + veg_type%dim_2%EX + 1 ) ) )
 1300.                      t$365%dim_2%SM = veg_type%dim_2%SM
 1300.                      call ijtoibjb_r( t$364, t$365 )
 1300.                   endif
 1303.                   if ( reducedgrid ) then
 1304.                      call nearestijtoibjb_r2d( fracocc(1, 1, 1 + $I_L1292_216), (frac_occ%base_addr)(frac_occ%dim_1%LB, frac_occ%dim_2%LB, 1 + $I_L1292_216, 0) )
 1304.                   else
 1306. !dir$ suppress fracocc(1, 1, ipatch)
 1306.                      t$366%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( fracocc(1, 1, 1 + $I_L1292_216) ) )
 1306.                      t$366%header%el_len = 64
 1306.                      t$366%header%assoc = 1
 1306.                      t$366%header%ptr_alloc = 0
 1306.                      t$366%header%p_or_a = 0
 1306.                      t$366%header%a_contig = 1
 1306.                      t$366%header%dv_versn = 2
 1306.                      t$366%header%dv_smunit = 64
 1306.                      t$366%header%d_type = 0
 1306.                      t$366%header%n_params = 0
 1306.                      t$366%header%pad_codim = 0
 1306.                      t$366%header%n_codim = 0
 1306.                      t$366%header%pad_dim = 0
 1306.                      t$366%header%n_dim = 2
 1306.                      t$366%header%d_type_idx = 13
 1306.                      t$366%header%typ_code = 134481411
 1306.                      t$366%header%orig_base = 0
 1306.                      t$366%header%orig_size = 0
 1306.                      t$366%dim_1%LB = 1
 1306.                      t$366%dim_1%EX = ( max( 0, ( -1 + t$31 + 1 ) ) )
 1306.                      t$366%dim_1%SM = 1
 1306.                      t$366%dim_2%LB = 1
 1306.                      t$366%dim_2%EX = ( max( 0, ( -1 + t$32 + 1 ) ) )
 1306.                      t$366%dim_2%SM = _zla( 0, imax )
 1306. !dir$ suppress (frac_occ%base_addr)(frac_occ%dim_1%LB, frac_occ%dim_2%LB, ipatch, 0)
 1306.                      t$367%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( (frac_occ%base_addr)(frac_occ%dim_1%LB, frac_occ%dim_2%LB, 1 + $I_L1292_216, 0) ) )
 1306.                      t$367%header%el_len = 64
 1306.                      t$367%header%assoc = 1
 1306.                      t$367%header%ptr_alloc = frac_occ%header%ptr_alloc
 1306.                      t$367%header%p_or_a = 0
 1306.                      t$367%header%a_contig = frac_occ%header%a_contig
 1306.                      t$367%header%dv_versn = 2
 1306.                      t$367%header%dv_smunit = 64
 1306.                      t$367%header%d_type = 0
 1306.                      t$367%header%n_params = 0
 1306.                      t$367%header%pad_codim = 0
 1306.                      t$367%header%n_codim = 0
 1306.                      t$367%header%pad_dim = 0
 1306.                      t$367%header%n_dim = 2
 1306.                      t$367%header%d_type_idx = 13
 1306.                      t$367%header%typ_code = 134481411
 1306.                      t$367%header%orig_base = frac_occ%header%orig_base
 1306.                      t$367%header%orig_size = frac_occ%header%orig_size
 1306.                      t$367%dim_1%LB = 1
 1306.                      t$367%dim_1%EX = ( max( 0, ( -1 + frac_occ%dim_1%EX + 1 ) ) )
 1306.                      t$367%dim_1%SM = frac_occ%dim_1%SM
 1306.                      t$367%dim_2%LB = 1
 1306.                      t$367%dim_2%EX = ( max( 0, ( -1 + frac_occ%dim_2%EX + 1 ) ) )
 1306.                      t$367%dim_2%SM = frac_occ%dim_2%SM
 1306.                      call ijtoibjb_r( t$366, t$367 )
 1306.                   endif
 1309.                   $I_L1292_216 = 1 + $I_L1292_216
 1307.                   if ( $I_L1292_216 >= 2 ) exit
 1307.                enddo
 1311.                t$278 = nfvegtp
 1311.                t$369(1) = 0x100000000000000L
 1311. !dir$ suppress t$278
 1311.                t$369(2) = int( loc( t$278 ), 8 )
 1311.                t$369(3) = 0
 1311.                t$369(4) = 0
 1311.                t$369(5) = 0
 1311.                t$369(7) = 0
 1311.                t$369(8) = 0
 1311.                t$368 = _close( t$369 )
 1311.                goto 20
 1311.             endif
 1313.          else if (  _substr(record_type,1,_len( record_type )) == 'vfm' ) then
 1316.             ierr = 0
 1315.             t$297 = nfvegtp
 1316.              _substr(t$371,1,4) = 'OLD'
 1315.              _substr(t$372,1,10) = 'SEQUENTIAL'
 1315.              _substr(t$373,1,9) = 'FORMATTED'
 1316.              _substr(t$374,1,4) = 'READ'
 1315.             t$375(1) = 0x100000000000000L
 1315. !dir$ suppress t$297
 1315.             t$375(2) = int( loc( t$297 ), 8 )
 1315. !dir$ suppress ierr
 1315.             t$375(3) = int( loc( ierr ), 8 )
 1315.             t$375(4) = 0
 1315. !dir$ suppress  _substr(fnamevegtype,1,_ltrim(  _substr(fnamevegtype,1,max( 0, t$96 )) ))
 1315.             t$375(5) = int( loc(  _substr(fnamevegtype,1,_ltrim(  _substr(fnamevegtype,1,_len( fnamevegtype )) )) ), 8 )
 1315.             t$375(6) = _ltrim(  _substr(fnamevegtype,1,_len( fnamevegtype )) )
 1315. !dir$ suppress  _substr(t$371,1,3)
 1315.             t$375(7) = int( loc(  _substr(t$371,1,3) ), 8 )
 1315.             t$375(8) = 3
 1315. !dir$ suppress  _substr(t$372,1,10)
 1315.             t$375(9) = int( loc(  _substr(t$372,1,10) ), 8 )
 1315.             t$375(10) = 10
 1315. !dir$ suppress  _substr(t$373,1,9)
 1315.             t$375(11) = int( loc(  _substr(t$373,1,9) ), 8 )
 1315.             t$375(12) = 9
 1315.             t$375(13) = 0
 1315.             t$375(14) = 0
 1315.             t$375(16) = 0
 1315. !dir$ suppress  _substr(t$374,1,4)
 1315.             t$375(18) = int( loc(  _substr(t$374,1,4) ), 8 )
 1315.             t$375(19) = 4
 1315.             t$375(20) = 0
 1315.             t$375(22) = 0
 1315.             t$375(24) = 0x2000200000000L
 1315.             t$375(25) = 0
 1315.             t$375(27) = 0
 1315.             t$375(29) = 0
 1315.             t$375(31) = 0
 1315.             t$375(33) = 0
 1315.             t$375(35) = 0
 1315.             t$370 = _open( t$375 )
 1317.             if ( ierr /= 0 ) then
 1318.                $Unit_temp_O12 = nfprt
 1318.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O12, Null_Arg, Null_Arg, t$42,  _substr(t$41,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamevegtype,1,_ltrim(  _substr(fnamevegtype,1,_len( fnamevegtype )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 1320.                 _substr(t$376,1,11) = '**(ERROR)**'
 1320.                call _stop(  _substr(t$376,1,11) )
 1320.             else
 1323.                $I_L1323_214 = 0
 1323.                do
 1327.                   t$309 = imax * jmax
 1327.                    _substr(t$378,1,3) = 'LIN'
 1327.                   call vfirec( nfvegtp, vegtype(1, 1, 1 + $I_L1323_214), t$309,  _substr(t$378,1,3) )
 1329.                   if ( jmax > 0 ) then
 1330.                      if ( imax > 0 ) then
 1329.                         $I_L1329_190 = 0
 1329.                         do
 1330.                            $I_L1330_156 = 0
 1330. !dir$ ivdep
 1330.                            do
 1331.                               vegtype(1 + $I_L1330_156, 1 + $I_L1329_190, 1 + $I_L1323_214) = real( int( 1.0000000000000001e-1 + vegtype(1 + $I_L1330_156, 1 + $I_L1329_190, 1 + $I_L1323_214) ), 8 )
 1332.                               $I_L1330_156 = 1 + $I_L1330_156
 1330.                               if ( $I_L1330_156 >= imax ) exit
 1330.                            enddo
 1333.                            $I_L1329_190 = 1 + $I_L1329_190
 1332.                            if ( $I_L1329_190 >= jmax ) exit
 1332.                         enddo
 1332.                      endif
 1332.                   endif
 1335.                   if ( reducedgrid ) then
 1336.                      call nearestijtoibjb_r2d( vegtype(1, 1, 1 + $I_L1323_214), (veg_type%base_addr)(veg_type%dim_1%LB, veg_type%dim_2%LB, 1 + $I_L1323_214, 0) )
 1336.                   else
 1338. !dir$ suppress vegtype(1, 1, ipatch)
 1338.                      t$385%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( vegtype(1, 1, 1 + $I_L1323_214) ) )
 1338.                      t$385%header%el_len = 64
 1338.                      t$385%header%assoc = 1
 1338.                      t$385%header%ptr_alloc = 0
 1338.                      t$385%header%p_or_a = 0
 1338.                      t$385%header%a_contig = 1
 1338.                      t$385%header%dv_versn = 2
 1338.                      t$385%header%dv_smunit = 64
 1338.                      t$385%header%d_type = 0
 1338.                      t$385%header%n_params = 0
 1338.                      t$385%header%pad_codim = 0
 1338.                      t$385%header%n_codim = 0
 1338.                      t$385%header%pad_dim = 0
 1338.                      t$385%header%n_dim = 2
 1338.                      t$385%header%d_type_idx = 13
 1338.                      t$385%header%typ_code = 134481411
 1338.                      t$385%header%orig_base = 0
 1338.                      t$385%header%orig_size = 0
 1338.                      t$385%dim_1%LB = 1
 1338.                      t$385%dim_1%EX = ( max( 0, ( -1 + t$31 + 1 ) ) )
 1338.                      t$385%dim_1%SM = 1
 1338.                      t$385%dim_2%LB = 1
 1338.                      t$385%dim_2%EX = ( max( 0, ( -1 + t$32 + 1 ) ) )
 1338.                      t$385%dim_2%SM = _zla( 0, imax )
 1338. !dir$ suppress (veg_type%base_addr)(veg_type%dim_1%LB, veg_type%dim_2%LB, ipatch, 0)
 1338.                      t$386%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( (veg_type%base_addr)(veg_type%dim_1%LB, veg_type%dim_2%LB, 1 + $I_L1323_214, 0) ) )
 1338.                      t$386%header%el_len = 64
 1338.                      t$386%header%assoc = 1
 1338.                      t$386%header%ptr_alloc = veg_type%header%ptr_alloc
 1338.                      t$386%header%p_or_a = 0
 1338.                      t$386%header%a_contig = veg_type%header%a_contig
 1338.                      t$386%header%dv_versn = 2
 1338.                      t$386%header%dv_smunit = 64
 1338.                      t$386%header%d_type = 0
 1338.                      t$386%header%n_params = 0
 1338.                      t$386%header%pad_codim = 0
 1338.                      t$386%header%n_codim = 0
 1338.                      t$386%header%pad_dim = 0
 1338.                      t$386%header%n_dim = 2
 1338.                      t$386%header%d_type_idx = 13
 1338.                      t$386%header%typ_code = 134481411
 1338.                      t$386%header%orig_base = veg_type%header%orig_base
 1338.                      t$386%header%orig_size = veg_type%header%orig_size
 1338.                      t$386%dim_1%LB = 1
 1338.                      t$386%dim_1%EX = ( max( 0, ( -1 + veg_type%dim_1%EX + 1 ) ) )
 1338.                      t$386%dim_1%SM = veg_type%dim_1%SM
 1338.                      t$386%dim_2%LB = 1
 1338.                      t$386%dim_2%EX = ( max( 0, ( -1 + veg_type%dim_2%EX + 1 ) ) )
 1338.                      t$386%dim_2%SM = veg_type%dim_2%SM
 1338.                      call ijtoibjb_r( t$385, t$386 )
 1338.                   endif
 1345.                   t$309 = imax * jmax
 1345.                    _substr(t$387,1,3) = 'LIN'
 1345.                   call vfirec( nfvegtp, fracocc(1, 1, 1 + $I_L1323_214), t$309,  _substr(t$387,1,3) )
 1347.                   if ( reducedgrid ) then
 1348.                      call nearestijtoibjb_r2d( fracocc(1, 1, 1 + $I_L1323_214), (frac_occ%base_addr)(frac_occ%dim_1%LB, frac_occ%dim_2%LB, 1 + $I_L1323_214, 0) )
 1348.                   else
 1350. !dir$ suppress fracocc(1, 1, ipatch)
 1350.                      t$388%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( fracocc(1, 1, 1 + $I_L1323_214) ) )
 1350.                      t$388%header%el_len = 64
 1350.                      t$388%header%assoc = 1
 1350.                      t$388%header%ptr_alloc = 0
 1350.                      t$388%header%p_or_a = 0
 1350.                      t$388%header%a_contig = 1
 1350.                      t$388%header%dv_versn = 2
 1350.                      t$388%header%dv_smunit = 64
 1350.                      t$388%header%d_type = 0
 1350.                      t$388%header%n_params = 0
 1350.                      t$388%header%pad_codim = 0
 1350.                      t$388%header%n_codim = 0
 1350.                      t$388%header%pad_dim = 0
 1350.                      t$388%header%n_dim = 2
 1350.                      t$388%header%d_type_idx = 13
 1350.                      t$388%header%typ_code = 134481411
 1350.                      t$388%header%orig_base = 0
 1350.                      t$388%header%orig_size = 0
 1350.                      t$388%dim_1%LB = 1
 1350.                      t$388%dim_1%EX = ( max( 0, ( -1 + t$31 + 1 ) ) )
 1350.                      t$388%dim_1%SM = 1
 1350.                      t$388%dim_2%LB = 1
 1350.                      t$388%dim_2%EX = ( max( 0, ( -1 + t$32 + 1 ) ) )
 1350.                      t$388%dim_2%SM = _zla( 0, imax )
 1350. !dir$ suppress (frac_occ%base_addr)(frac_occ%dim_1%LB, frac_occ%dim_2%LB, ipatch, 0)
 1350.                      t$389%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( (frac_occ%base_addr)(frac_occ%dim_1%LB, frac_occ%dim_2%LB, 1 + $I_L1323_214, 0) ) )
 1350.                      t$389%header%el_len = 64
 1350.                      t$389%header%assoc = 1
 1350.                      t$389%header%ptr_alloc = frac_occ%header%ptr_alloc
 1350.                      t$389%header%p_or_a = 0
 1350.                      t$389%header%a_contig = frac_occ%header%a_contig
 1350.                      t$389%header%dv_versn = 2
 1350.                      t$389%header%dv_smunit = 64
 1350.                      t$389%header%d_type = 0
 1350.                      t$389%header%n_params = 0
 1350.                      t$389%header%pad_codim = 0
 1350.                      t$389%header%n_codim = 0
 1350.                      t$389%header%pad_dim = 0
 1350.                      t$389%header%n_dim = 2
 1350.                      t$389%header%d_type_idx = 13
 1350.                      t$389%header%typ_code = 134481411
 1350.                      t$389%header%orig_base = frac_occ%header%orig_base
 1350.                      t$389%header%orig_size = frac_occ%header%orig_size
 1350.                      t$389%dim_1%LB = 1
 1350.                      t$389%dim_1%EX = ( max( 0, ( -1 + frac_occ%dim_1%EX + 1 ) ) )
 1350.                      t$389%dim_1%SM = frac_occ%dim_1%SM
 1350.                      t$389%dim_2%LB = 1
 1350.                      t$389%dim_2%EX = ( max( 0, ( -1 + frac_occ%dim_2%EX + 1 ) ) )
 1350.                      t$389%dim_2%SM = frac_occ%dim_2%SM
 1350.                      call ijtoibjb_r( t$388, t$389 )
 1350.                   endif
 1353.                   $I_L1323_214 = 1 + $I_L1323_214
 1351.                   if ( $I_L1323_214 >= 2 ) exit
 1351.                enddo
 1355.                t$348 = nfvegtp
 1355.                t$391(1) = 0x100000000000000L
 1355. !dir$ suppress t$348
 1355.                t$391(2) = int( loc( t$348 ), 8 )
 1355.                t$391(3) = 0
 1355.                t$391(4) = 0
 1355.                t$391(5) = 0
 1355.                t$391(7) = 0
 1355.                t$391(8) = 0
 1355.                t$390 = _close( t$391 )
 1355.                goto 20
 1355.             endif
 1355.          else
 1355.    20       continue
 1361.             if ( jmax > 0 ) then
 1362.                if ( imax > 0 ) then
 1361.                   $I_L1361_196 = 0
 1361.                   do
 1362.                      $I_L1362_162 = 0
 1362. !dir$ ivdep
 1362.                      do
 1364.                         if ( imask_in(1 + $I_L1362_162, 1 + $I_L1361_196) > 0 ) then
 1364.                            if ( imask_in(1 + $I_L1362_162, 1 + $I_L1361_196) < 13 ) then
 1365.                               imask_in(1 + $I_L1362_162, 1 + $I_L1361_196) = int( vegtype(1 + $I_L1362_162, 1 + $I_L1361_196, 2) )
 1365.                            endif
 1365.                         endif
 1367.                         $I_L1362_162 = 1 + $I_L1362_162
 1366.                         if ( $I_L1362_162 >= imax ) exit
 1366.                      enddo
 1368.                      $I_L1361_196 = 1 + $I_L1361_196
 1367.                      if ( $I_L1361_196 >= jmax ) exit
 1367.                   enddo
 1367.                endif
 1367.             endif
 1372.             if ( jbmax > 0 ) then
 1372.                $I_L1372_198 = 0
 1372.                do
 1373.                   $t_S8 = (ibmaxperjb%base_addr)(1 + $I_L1372_198, 0)
 1373.                   if ( $t_S8 > 0 ) then
 1373.                      $I_L1373_164 = 0
 1373. !dir$ ivdep
 1373.                      do
 1374.                         if ( (frac_occ%base_addr)(1 + $I_L1373_164, 1 + $I_L1372_198, 1, 0) < 9.9999000000000005e-1 ) then
 1378.                            fractx = (frac_occ%base_addr)(1 + $I_L1373_164, 1 + $I_L1372_198, 1, 0)
 1381.                            (frac_occ%base_addr)(1 + $I_L1373_164, 1 + $I_L1372_198, 2, 0) = 1.0 + -fractx
 1381.                         endif
 1384.                         $I_L1373_164 = 1 + $I_L1373_164
 1382.                         if ( $I_L1373_164 >= $t_S8 ) exit
 1382.                      enddo
 1382.                   endif
 1385.                   $I_L1372_198 = 1 + $I_L1372_198
 1384.                   if ( $I_L1372_198 >= jbmax ) exit
 1384.                enddo
 1384.             endif
 1390.              _substr(t$405,1,19) = '**(read_gl_sm_bc)**'
 1390.             t$406 = 19 + ( _ltrim(  _substr(fnamesoilmoist,1,_len( fnamesoilmoist )) ) )
 1390.             t$408 = int( _alloc( max( 0, t$406 ) ), 8 )
 1390.              _substr(t$407,1,max( 0, t$406 )) = //( 'Opening GL_SM file=',  _substr(fnamesoilmoist,1,_ltrim(  _substr(fnamesoilmoist,1,_len( fnamesoilmoist )) )) )
 1390.             call msgone(  _substr(t$405,1,19),  _substr(t$407,1,max( 0, t$406 )) )
 1390.             _free( t$408 )
 1392.             if (  _substr(record_type,1,_len( record_type )) == 'seq' ) then
 1395.                ierr = 0
 1394.                t$278 = nfslmtp
 1395.                 _substr(t$410,1,4) = 'OLD'
 1394.                 _substr(t$411,1,10) = 'SEQUENTIAL'
 1394.                 _substr(t$412,1,11) = 'UNFORMATTED'
 1395.                 _substr(t$413,1,4) = 'READ'
 1394.                t$414(1) = 0x100000000000000L
 1394. !dir$ suppress t$278
 1394.                t$414(2) = int( loc( t$278 ), 8 )
 1394. !dir$ suppress ierr
 1394.                t$414(3) = int( loc( ierr ), 8 )
 1394.                t$414(4) = 0
 1394. !dir$ suppress  _substr(fnamesoilmoist,1,_ltrim(  _substr(fnamesoilmoist,1,max( 0, t$97 )) ))
 1394.                t$414(5) = int( loc(  _substr(fnamesoilmoist,1,_ltrim(  _substr(fnamesoilmoist,1,_len( fnamesoilmoist )) )) ), 8 )
 1394.                t$414(6) = _ltrim(  _substr(fnamesoilmoist,1,_len( fnamesoilmoist )) )
 1394. !dir$ suppress  _substr(t$410,1,3)
 1394.                t$414(7) = int( loc(  _substr(t$410,1,3) ), 8 )
 1394.                t$414(8) = 3
 1394. !dir$ suppress  _substr(t$411,1,10)
 1394.                t$414(9) = int( loc(  _substr(t$411,1,10) ), 8 )
 1394.                t$414(10) = 10
 1394. !dir$ suppress  _substr(t$412,1,11)
 1394.                t$414(11) = int( loc(  _substr(t$412,1,11) ), 8 )
 1394.                t$414(12) = 11
 1394.                t$414(13) = 0
 1394.                t$414(14) = 0
 1394.                t$414(16) = 0
 1394. !dir$ suppress  _substr(t$413,1,4)
 1394.                t$414(18) = int( loc(  _substr(t$413,1,4) ), 8 )
 1394.                t$414(19) = 4
 1394.                t$414(20) = 0
 1394.                t$414(22) = 0
 1394.                t$414(24) = 0x2000200000000L
 1394.                t$414(25) = 0
 1394.                t$414(27) = 0
 1394.                t$414(29) = 0
 1394.                t$414(31) = 0
 1394.                t$414(33) = 0
 1394.                t$414(35) = 0
 1394.                t$409 = _open( t$414 )
 1396.                if ( ierr /= 0 ) then
 1397.                   $Unit_temp_O13 = nfprt
 1397.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O13, Null_Arg, Null_Arg, t$44,  _substr(t$43,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamesoilmoist,1,_ltrim(  _substr(fnamesoilmoist,1,_len( fnamesoilmoist )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 1399.                    _substr(t$415,1,11) = '**(ERROR)**'
 1399.                   call _stop(  _substr(t$415,1,11) )
 1399.                else
 1405.                   if ( jmax <= 0 ) then
 1404.                      $I_L1404_176 = 0
 1404.                      do
 1405.                         $Unit_temp_O14 = nfslmtp
 1405.                         _uread( _clist( 0, 0, 2, $Unit_temp_O14, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1405.                         $Unit_temp_O17 = nfslmtp
 1405.                         _uread( _clist( 0, 0, 1, $Unit_temp_O17, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1407.                         if ( reducedgrid ) then
 1408.                            call nearestijtoibjb_r2d( glsm(1, 1, 8 + -$I_L1404_176), (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, 8 + -$I_L1404_176, 0) )
 1408.                         else
 1410. !dir$ suppress glsm(1, 1, k)
 1410.                            t$432%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( glsm(1, 1, 8 + -$I_L1404_176) ) )
 1410.                            t$432%header%el_len = 64
 1410.                            t$432%header%assoc = 1
 1410.                            t$432%header%ptr_alloc = 0
 1410.                            t$432%header%p_or_a = 0
 1410.                            t$432%header%a_contig = 1
 1410.                            t$432%header%dv_versn = 2
 1410.                            t$432%header%dv_smunit = 64
 1410.                            t$432%header%d_type = 0
 1410.                            t$432%header%n_params = 0
 1410.                            t$432%header%pad_codim = 0
 1410.                            t$432%header%n_codim = 0
 1410.                            t$432%header%pad_dim = 0
 1410.                            t$432%header%n_dim = 2
 1410.                            t$432%header%d_type_idx = 13
 1410.                            t$432%header%typ_code = 134481411
 1410.                            t$432%header%orig_base = 0
 1410.                            t$432%header%orig_size = 0
 1410.                            t$432%dim_1%LB = 1
 1410.                            t$432%dim_1%EX = ( max( 0, ( -1 + t$31 + 1 ) ) )
 1410.                            t$432%dim_1%SM = 1
 1410.                            t$432%dim_2%LB = 1
 1410.                            t$432%dim_2%EX = ( max( 0, ( -1 + t$32 + 1 ) ) )
 1410.                            t$432%dim_2%SM = _zla( 0, imax )
 1410. !dir$ suppress (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, k, 0)
 1410.                            t$433%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, 8 + -$I_L1404_176, 0) ) )
 1410.                            t$433%header%el_len = 64
 1410.                            t$433%header%assoc = 1
 1410.                            t$433%header%ptr_alloc = glsm_w%header%ptr_alloc
 1410.                            t$433%header%p_or_a = 0
 1410.                            t$433%header%a_contig = glsm_w%header%a_contig
 1410.                            t$433%header%dv_versn = 2
 1410.                            t$433%header%dv_smunit = 64
 1410.                            t$433%header%d_type = 0
 1410.                            t$433%header%n_params = 0
 1410.                            t$433%header%pad_codim = 0
 1410.                            t$433%header%n_codim = 0
 1410.                            t$433%header%pad_dim = 0
 1410.                            t$433%header%n_dim = 2
 1410.                            t$433%header%d_type_idx = 13
 1410.                            t$433%header%typ_code = 134481411
 1410.                            t$433%header%orig_base = glsm_w%header%orig_base
 1410.                            t$433%header%orig_size = glsm_w%header%orig_size
 1410.                            t$433%dim_1%LB = 1
 1410.                            t$433%dim_1%EX = ( max( 0, ( -1 + glsm_w%dim_1%EX + 1 ) ) )
 1410.                            t$433%dim_1%SM = glsm_w%dim_1%SM
 1410.                            t$433%dim_2%LB = 1
 1410.                            t$433%dim_2%EX = ( max( 0, ( -1 + glsm_w%dim_2%EX + 1 ) ) )
 1410.                            t$433%dim_2%SM = glsm_w%dim_2%SM
 1410.                            call ijtoibjb_r( t$432, t$433 )
 1410.                         endif
 1413.                         $I_L1404_176 = 1 + $I_L1404_176
 1411.                         if ( $I_L1404_176 >= 8 ) exit
 1411.                      enddo
 1411.                   else if ( imax > 0 ) then
 1404.                      $I_L1404_218 = 0
 1404.                      do
 1405.                         $Unit_temp_O14 = nfslmtp
 1405.                         _uread( _clist( 0, 0, 2, $Unit_temp_O14, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1405.                         if ( ( 8 + -$I_L1404_218 ) <= 0 .or. ( 8 + -$I_L1404_218 ) > 8 ) then
 1405.                            $I_L1405_200 = 0
 1405.                            do
 1405.                               $I_L1405_168 = 0
 1405.                               do
 1405.                                  if ( ( 1 + $I_L1405_168 ) <= 0 .or. ( 1 + $I_L1405_168 ) > t$31 ) then
 1405.                                      _substr(t$424,1,18) = 'FieldsPhysics.f90'
 1405.                                      _substr(t$425,1,5) = 'GLSM'
 1405.                                     t$297 = 1 + $I_L1405_168
 1405.                                     call _bounds_error(  _substr(t$424,1,18), 1405,  _substr(t$425,1,5), 1, 1, t$31, t$297, t$423 )
 1405.                                  endif
 1405.                                  if ( ( 1 + $I_L1405_200 ) <= 0 .or. ( 1 + $I_L1405_200 ) > t$32 ) then
 1405.                                      _substr(t$427,1,18) = 'FieldsPhysics.f90'
 1405.                                      _substr(t$428,1,5) = 'GLSM'
 1405.                                     t$348 = 1 + $I_L1405_200
 1405.                                     call _bounds_error(  _substr(t$427,1,18), 1405,  _substr(t$428,1,5), 2, 1, t$32, t$348, t$426 )
 1405.                                  endif
 1405.                                   _substr(t$430,1,18) = 'FieldsPhysics.f90'
 1405.                                   _substr(t$431,1,5) = 'GLSM'
 1405.                                  t$278 = 8 + -$I_L1404_218
 1405.                                  call _bounds_error(  _substr(t$430,1,18), 1405,  _substr(t$431,1,5), 3, 1, 8, t$278, t$429 )
 1405.                                  $Unit_temp_O15 = nfslmtp
 1405.                                  _uread( _clist( 0, 0, 0, $Unit_temp_O15, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O22, 0x804060300000000L ) ) )
 1405.                                  glsm(1 + $I_L1405_168, 1 + $I_L1405_200, 8 + -$I_L1404_218) = $IOitem_O22
 1405.                                  $I_L1405_168 = 1 + $I_L1405_168
 1405.                                  if ( $I_L1405_168 >= imax ) exit
 1405.                               enddo
 1405.                               $I_L1405_200 = 1 + $I_L1405_200
 1405.                               if ( $I_L1405_200 >= jmax ) exit
 1405.                            enddo
 1405.                         else
 1405.                            $I_L1405_206 = 0
 1405.                            do
 1405.                               $I_L1405_174 = 0
 1405.                               do
 1405.                                  if ( ( 1 + $I_L1405_174 ) <= 0 .or. ( 1 + $I_L1405_174 ) > t$31 ) then
 1405.                                      _substr(t$424,1,18) = 'FieldsPhysics.f90'
 1405.                                      _substr(t$425,1,5) = 'GLSM'
 1405.                                     t$297 = 1 + $I_L1405_174
 1405.                                     call _bounds_error(  _substr(t$424,1,18), 1405,  _substr(t$425,1,5), 1, 1, t$31, t$297, t$423 )
 1405.                                  endif
 1405.                                  if ( ( 1 + $I_L1405_206 ) <= 0 .or. ( 1 + $I_L1405_206 ) > t$32 ) then
 1405.                                      _substr(t$427,1,18) = 'FieldsPhysics.f90'
 1405.                                      _substr(t$428,1,5) = 'GLSM'
 1405.                                     t$348 = 1 + $I_L1405_206
 1405.                                     call _bounds_error(  _substr(t$427,1,18), 1405,  _substr(t$428,1,5), 2, 1, t$32, t$348, t$426 )
 1405.                                  endif
 1405.                                  $Unit_temp_O15 = nfslmtp
 1405.                                  _uread( _clist( 0, 0, 0, $Unit_temp_O15, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O22, 0x804060300000000L ) ) )
 1405.                                  glsm(1 + $I_L1405_174, 1 + $I_L1405_206, 8 + -$I_L1404_218) = $IOitem_O22
 1405.                                  $I_L1405_174 = 1 + $I_L1405_174
 1405.                                  if ( $I_L1405_174 >= imax ) exit
 1405.                               enddo
 1405.                               $I_L1405_206 = 1 + $I_L1405_206
 1405.                               if ( $I_L1405_206 >= jmax ) exit
 1405.                            enddo
 1405.                         endif
 1405.                         $Unit_temp_O17 = nfslmtp
 1405.                         _uread( _clist( 0, 0, 1, $Unit_temp_O17, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1407.                         if ( reducedgrid ) then
 1408.                            call nearestijtoibjb_r2d( glsm(1, 1, 8 + -$I_L1404_218), (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, 8 + -$I_L1404_218, 0) )
 1408.                         else
 1410. !dir$ suppress glsm(1, 1, k)
 1410.                            t$432%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( glsm(1, 1, 8 + -$I_L1404_218) ) )
 1410.                            t$432%header%el_len = 64
 1410.                            t$432%header%assoc = 1
 1410.                            t$432%header%ptr_alloc = 0
 1410.                            t$432%header%p_or_a = 0
 1410.                            t$432%header%a_contig = 1
 1410.                            t$432%header%dv_versn = 2
 1410.                            t$432%header%dv_smunit = 64
 1410.                            t$432%header%d_type = 0
 1410.                            t$432%header%n_params = 0
 1410.                            t$432%header%pad_codim = 0
 1410.                            t$432%header%n_codim = 0
 1410.                            t$432%header%pad_dim = 0
 1410.                            t$432%header%n_dim = 2
 1410.                            t$432%header%d_type_idx = 13
 1410.                            t$432%header%typ_code = 134481411
 1410.                            t$432%header%orig_base = 0
 1410.                            t$432%header%orig_size = 0
 1410.                            t$432%dim_1%LB = 1
 1410.                            t$432%dim_1%EX = ( max( 0, ( -1 + t$31 + 1 ) ) )
 1410.                            t$432%dim_1%SM = 1
 1410.                            t$432%dim_2%LB = 1
 1410.                            t$432%dim_2%EX = ( max( 0, ( -1 + t$32 + 1 ) ) )
 1410.                            t$432%dim_2%SM = _zla( 0, imax )
 1410. !dir$ suppress (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, k, 0)
 1410.                            t$433%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, 8 + -$I_L1404_218, 0) ) )
 1410.                            t$433%header%el_len = 64
 1410.                            t$433%header%assoc = 1
 1410.                            t$433%header%ptr_alloc = glsm_w%header%ptr_alloc
 1410.                            t$433%header%p_or_a = 0
 1410.                            t$433%header%a_contig = glsm_w%header%a_contig
 1410.                            t$433%header%dv_versn = 2
 1410.                            t$433%header%dv_smunit = 64
 1410.                            t$433%header%d_type = 0
 1410.                            t$433%header%n_params = 0
 1410.                            t$433%header%pad_codim = 0
 1410.                            t$433%header%n_codim = 0
 1410.                            t$433%header%pad_dim = 0
 1410.                            t$433%header%n_dim = 2
 1410.                            t$433%header%d_type_idx = 13
 1410.                            t$433%header%typ_code = 134481411
 1410.                            t$433%header%orig_base = glsm_w%header%orig_base
 1410.                            t$433%header%orig_size = glsm_w%header%orig_size
 1410.                            t$433%dim_1%LB = 1
 1410.                            t$433%dim_1%EX = ( max( 0, ( -1 + glsm_w%dim_1%EX + 1 ) ) )
 1410.                            t$433%dim_1%SM = glsm_w%dim_1%SM
 1410.                            t$433%dim_2%LB = 1
 1410.                            t$433%dim_2%EX = ( max( 0, ( -1 + glsm_w%dim_2%EX + 1 ) ) )
 1410.                            t$433%dim_2%SM = glsm_w%dim_2%SM
 1410.                            call ijtoibjb_r( t$432, t$433 )
 1410.                         endif
 1413.                         $I_L1404_218 = 1 + $I_L1404_218
 1411.                         if ( $I_L1404_218 >= 8 ) exit
 1411.                      enddo
 1411.                   else
 1404.                      $I_L1404_178 = 0
 1404.                      do
 1405.                         $Unit_temp_O14 = nfslmtp
 1405.                         _uread( _clist( 0, 0, 2, $Unit_temp_O14, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1405.                         $Unit_temp_O17 = nfslmtp
 1405.                         _uread( _clist( 0, 0, 1, $Unit_temp_O17, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1407.                         if ( reducedgrid ) then
 1408.                            call nearestijtoibjb_r2d( glsm(1, 1, 8 + -$I_L1404_178), (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, 8 + -$I_L1404_178, 0) )
 1408.                         else
 1410. !dir$ suppress glsm(1, 1, k)
 1410.                            t$432%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( glsm(1, 1, 8 + -$I_L1404_178) ) )
 1410.                            t$432%header%el_len = 64
 1410.                            t$432%header%assoc = 1
 1410.                            t$432%header%ptr_alloc = 0
 1410.                            t$432%header%p_or_a = 0
 1410.                            t$432%header%a_contig = 1
 1410.                            t$432%header%dv_versn = 2
 1410.                            t$432%header%dv_smunit = 64
 1410.                            t$432%header%d_type = 0
 1410.                            t$432%header%n_params = 0
 1410.                            t$432%header%pad_codim = 0
 1410.                            t$432%header%n_codim = 0
 1410.                            t$432%header%pad_dim = 0
 1410.                            t$432%header%n_dim = 2
 1410.                            t$432%header%d_type_idx = 13
 1410.                            t$432%header%typ_code = 134481411
 1410.                            t$432%header%orig_base = 0
 1410.                            t$432%header%orig_size = 0
 1410.                            t$432%dim_1%LB = 1
 1410.                            t$432%dim_1%EX = ( max( 0, ( -1 + t$31 + 1 ) ) )
 1410.                            t$432%dim_1%SM = 1
 1410.                            t$432%dim_2%LB = 1
 1410.                            t$432%dim_2%EX = ( max( 0, ( -1 + t$32 + 1 ) ) )
 1410.                            t$432%dim_2%SM = _zla( 0, imax )
 1410. !dir$ suppress (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, k, 0)
 1410.                            t$433%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, 8 + -$I_L1404_178, 0) ) )
 1410.                            t$433%header%el_len = 64
 1410.                            t$433%header%assoc = 1
 1410.                            t$433%header%ptr_alloc = glsm_w%header%ptr_alloc
 1410.                            t$433%header%p_or_a = 0
 1410.                            t$433%header%a_contig = glsm_w%header%a_contig
 1410.                            t$433%header%dv_versn = 2
 1410.                            t$433%header%dv_smunit = 64
 1410.                            t$433%header%d_type = 0
 1410.                            t$433%header%n_params = 0
 1410.                            t$433%header%pad_codim = 0
 1410.                            t$433%header%n_codim = 0
 1410.                            t$433%header%pad_dim = 0
 1410.                            t$433%header%n_dim = 2
 1410.                            t$433%header%d_type_idx = 13
 1410.                            t$433%header%typ_code = 134481411
 1410.                            t$433%header%orig_base = glsm_w%header%orig_base
 1410.                            t$433%header%orig_size = glsm_w%header%orig_size
 1410.                            t$433%dim_1%LB = 1
 1410.                            t$433%dim_1%EX = ( max( 0, ( -1 + glsm_w%dim_1%EX + 1 ) ) )
 1410.                            t$433%dim_1%SM = glsm_w%dim_1%SM
 1410.                            t$433%dim_2%LB = 1
 1410.                            t$433%dim_2%EX = ( max( 0, ( -1 + glsm_w%dim_2%EX + 1 ) ) )
 1410.                            t$433%dim_2%SM = glsm_w%dim_2%SM
 1410.                            call ijtoibjb_r( t$432, t$433 )
 1410.                         endif
 1413.                         $I_L1404_178 = 1 + $I_L1404_178
 1411.                         if ( $I_L1404_178 >= 8 ) exit
 1411.                      enddo
 1411.                   endif
 1415.                   t$297 = nfslmtp
 1415.                   t$435(1) = 0x100000000000000L
 1415. !dir$ suppress t$297
 1415.                   t$435(2) = int( loc( t$297 ), 8 )
 1415.                   t$435(3) = 0
 1415.                   t$435(4) = 0
 1415.                   t$435(5) = 0
 1415.                   t$435(7) = 0
 1415.                   t$435(8) = 0
 1415.                   t$434 = _close( t$435 )
 1415.                   goto 30
 1415.                endif
 1417.             else if (  _substr(record_type,1,_len( record_type )) == 'vfm' ) then
 1420.                ierr = 0
 1419.                t$348 = nfslmtp
 1420.                 _substr(t$437,1,4) = 'OLD'
 1419.                 _substr(t$438,1,10) = 'SEQUENTIAL'
 1419.                 _substr(t$439,1,9) = 'FORMATTED'
 1420.                 _substr(t$440,1,4) = 'READ'
 1419.                t$441(1) = 0x100000000000000L
 1419. !dir$ suppress t$348
 1419.                t$441(2) = int( loc( t$348 ), 8 )
 1419. !dir$ suppress ierr
 1419.                t$441(3) = int( loc( ierr ), 8 )
 1419.                t$441(4) = 0
 1419. !dir$ suppress  _substr(fnamesoilmoist,1,_ltrim(  _substr(fnamesoilmoist,1,max( 0, t$97 )) ))
 1419.                t$441(5) = int( loc(  _substr(fnamesoilmoist,1,_ltrim(  _substr(fnamesoilmoist,1,_len( fnamesoilmoist )) )) ), 8 )
 1419.                t$441(6) = _ltrim(  _substr(fnamesoilmoist,1,_len( fnamesoilmoist )) )
 1419. !dir$ suppress  _substr(t$437,1,3)
 1419.                t$441(7) = int( loc(  _substr(t$437,1,3) ), 8 )
 1419.                t$441(8) = 3
 1419. !dir$ suppress  _substr(t$438,1,10)
 1419.                t$441(9) = int( loc(  _substr(t$438,1,10) ), 8 )
 1419.                t$441(10) = 10
 1419. !dir$ suppress  _substr(t$439,1,9)
 1419.                t$441(11) = int( loc(  _substr(t$439,1,9) ), 8 )
 1419.                t$441(12) = 9
 1419.                t$441(13) = 0
 1419.                t$441(14) = 0
 1419.                t$441(16) = 0
 1419. !dir$ suppress  _substr(t$440,1,4)
 1419.                t$441(18) = int( loc(  _substr(t$440,1,4) ), 8 )
 1419.                t$441(19) = 4
 1419.                t$441(20) = 0
 1419.                t$441(22) = 0
 1419.                t$441(24) = 0x2000200000000L
 1419.                t$441(25) = 0
 1419.                t$441(27) = 0
 1419.                t$441(29) = 0
 1419.                t$441(31) = 0
 1419.                t$441(33) = 0
 1419.                t$441(35) = 0
 1419.                t$436 = _open( t$441 )
 1421.                if ( ierr /= 0 ) then
 1422.                   $Unit_temp_O18 = nfprt
 1422.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O18, Null_Arg, Null_Arg, t$46,  _substr(t$45,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamesoilmoist,1,_ltrim(  _substr(fnamesoilmoist,1,_len( fnamesoilmoist )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 1424.                    _substr(t$442,1,11) = '**(ERROR)**'
 1424.                   call _stop(  _substr(t$442,1,11) )
 1424.                else
 1430.                   $I_L1430_166 = 0
 1430.                   do
 1434.                      t$309 = imax * jmax
 1434.                       _substr(t$444,1,3) = 'LIN'
 1434.                      call vfirec( nfslmtp, glsm(1, 1, 8 + -$I_L1430_166), t$309,  _substr(t$444,1,3) )
 1436.                      if ( reducedgrid ) then
 1437.                         call nearestijtoibjb_r2d( glsm(1, 1, 8 + -$I_L1430_166), (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, 8 + -$I_L1430_166, 0) )
 1437.                      else
 1439. !dir$ suppress glsm(1, 1, k)
 1439.                         t$445%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( glsm(1, 1, 8 + -$I_L1430_166) ) )
 1439.                         t$445%header%el_len = 64
 1439.                         t$445%header%assoc = 1
 1439.                         t$445%header%ptr_alloc = 0
 1439.                         t$445%header%p_or_a = 0
 1439.                         t$445%header%a_contig = 1
 1439.                         t$445%header%dv_versn = 2
 1439.                         t$445%header%dv_smunit = 64
 1439.                         t$445%header%d_type = 0
 1439.                         t$445%header%n_params = 0
 1439.                         t$445%header%pad_codim = 0
 1439.                         t$445%header%n_codim = 0
 1439.                         t$445%header%pad_dim = 0
 1439.                         t$445%header%n_dim = 2
 1439.                         t$445%header%d_type_idx = 13
 1439.                         t$445%header%typ_code = 134481411
 1439.                         t$445%header%orig_base = 0
 1439.                         t$445%header%orig_size = 0
 1439.                         t$445%dim_1%LB = 1
 1439.                         t$445%dim_1%EX = ( max( 0, ( -1 + t$31 + 1 ) ) )
 1439.                         t$445%dim_1%SM = 1
 1439.                         t$445%dim_2%LB = 1
 1439.                         t$445%dim_2%EX = ( max( 0, ( -1 + t$32 + 1 ) ) )
 1439.                         t$445%dim_2%SM = _zla( 0, imax )
 1439. !dir$ suppress (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, k, 0)
 1439.                         t$446%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, 8 + -$I_L1430_166, 0) ) )
 1439.                         t$446%header%el_len = 64
 1439.                         t$446%header%assoc = 1
 1439.                         t$446%header%ptr_alloc = glsm_w%header%ptr_alloc
 1439.                         t$446%header%p_or_a = 0
 1439.                         t$446%header%a_contig = glsm_w%header%a_contig
 1439.                         t$446%header%dv_versn = 2
 1439.                         t$446%header%dv_smunit = 64
 1439.                         t$446%header%d_type = 0
 1439.                         t$446%header%n_params = 0
 1439.                         t$446%header%pad_codim = 0
 1439.                         t$446%header%n_codim = 0
 1439.                         t$446%header%pad_dim = 0
 1439.                         t$446%header%n_dim = 2
 1439.                         t$446%header%d_type_idx = 13
 1439.                         t$446%header%typ_code = 134481411
 1439.                         t$446%header%orig_base = glsm_w%header%orig_base
 1439.                         t$446%header%orig_size = glsm_w%header%orig_size
 1439.                         t$446%dim_1%LB = 1
 1439.                         t$446%dim_1%EX = ( max( 0, ( -1 + glsm_w%dim_1%EX + 1 ) ) )
 1439.                         t$446%dim_1%SM = glsm_w%dim_1%SM
 1439.                         t$446%dim_2%LB = 1
 1439.                         t$446%dim_2%EX = ( max( 0, ( -1 + glsm_w%dim_2%EX + 1 ) ) )
 1439.                         t$446%dim_2%SM = glsm_w%dim_2%SM
 1439.                         call ijtoibjb_r( t$445, t$446 )
 1439.                      endif
 1442.                      $I_L1430_166 = 1 + $I_L1430_166
 1440.                      if ( $I_L1430_166 >= 8 ) exit
 1440.                   enddo
 1444.                   t$278 = nfslmtp
 1444.                   t$448(1) = 0x100000000000000L
 1444. !dir$ suppress t$278
 1444.                   t$448(2) = int( loc( t$278 ), 8 )
 1444.                   t$448(3) = 0
 1444.                   t$448(4) = 0
 1444.                   t$448(5) = 0
 1444.                   t$448(7) = 0
 1444.                   t$448(8) = 0
 1444.                   t$447 = _close( t$448 )
 1444.                   goto 30
 1444.                endif
 1444.             else
 1448.                 _substr(t$449,1,39) = '**(read_gl_sm_bc)** unknown record type'
 1448.                call fatalerror(  _substr(t$449,1,39) )
 1448.    30          continue
 1452.                 _substr(t$450,1,19) = '**(read_gl_sm_bc)**'
 1452.                 _substr(t$451,1,4) = 'DONE'
 1452.                call msgone(  _substr(t$450,1,19),  _substr(t$451,1,4) )
 1186.                _free( t$104 )
 1186.             endif
 1186.          endif
 1186.       endif
 1455.       return
 1455.       end
 1455.       
 1517.       
 1517.       subroutine restartphyscs( jbmax, ifday, tod, idate, idatec, nfsibo, nfcnv1, ibmaxperjb )
 1458.       idate%dim_1%LB = 1
 1458.       idatec%dim_1%LB = 1
 1458.       ibmaxperjb%dim_1%LB = 1
 1473.       if (  _substr(isimp,1,_ltrim(  _substr(isimp,1,4) )) /= 'YES' ) then
 1475.           _substr(t$452,1,19) = '**(restartphyscs)**'
 1475.           _substr(t$453,1,32) = 'Saving physics state for restart'
 1475.          call msgone(  _substr(t$452,1,19),  _substr(t$453,1,32) )
 1478.          if ( jbmax > 0 ) then
 1484.             $SC_w0_I40 = w0%dim_1%EX
 1484.             $SC_w0_I41 = w0%dim_1%LB
 1484.             $SC_w0_I43 = w0%dim_2%SM
 1484.             $SC_w0_I42 = w0%dim_2%EX
 1484.             $SC_w0_I44 = w0%dim_2%LB
 1484.             $SC_w0_I46 = w0%dim_3%SM
 1484.             $SC_w0_I45 = w0%dim_3%EX
 1484.             $SC_w0_I47 = w0%dim_3%LB
 1484.             $SC_ssib_I35 = ssib%dim_1%EX
 1484.             $SC_ssib_I36 = ssib%dim_1%LB
 1484.             $SC_ssib_I38 = ssib%dim_2%SM
 1484.             $SC_ssib_I37 = ssib%dim_2%EX
 1484.             $SC_ssib_I39 = ssib%dim_2%LB
 1481.             $SC_imask_I30 = imask%dim_1%EX
 1481.             $SC_imask_I31 = imask%dim_1%LB
 1481.             $SC_imask_I33 = imask%dim_2%SM
 1481.             $SC_imask_I32 = imask%dim_2%EX
 1481.             $SC_imask_I34 = imask%dim_2%LB
 1480.             $SC_ibmaxperjb_I29 = ibmaxperjb%dim_1%SM
 1480.             $SC_ibmaxperjb_I28 = ibmaxperjb%dim_1%EX
 1478.             $I_L1478_32 = 0
 1478. !$omp do schedule(static)
 1478.             do
 1479.                $ncount_S3 = 0
 1480.                $t_S1 = (ibmaxperjb%base_addr)(1 + $I_L1478_32, 0)
 1480.                if ( $t_S1 > 0 ) then
 1487.                   $SC_wm_I48 = wm%dim_1%EX
 1487.                   $SC_wm_I49 = wm%dim_1%LB
 1487.                   $SC_wm_I51 = wm%dim_2%SM
 1487.                   $SC_wm_I50 = wm%dim_2%EX
 1487.                   $SC_wm_I52 = wm%dim_2%LB
 1487.                   $SC_wm_I54 = wm%dim_3%SM
 1487.                   $SC_wm_I53 = wm%dim_3%EX
 1487.                   $SC_wm_I55 = wm%dim_3%LB
 1480.                   $I_L1480_30 = 0
 1480. !dir$ ivdep
 1480.                   do
 1481.                      if ( (imask%base_addr)(1 + $I_L1480_30, 1 + $I_L1478_32, 0) > 0 ) then
 1482.                         $ncount_S3 = 1 + $ncount_S3
 1483.                         if ( (ssib%base_addr)($ncount_S3, 1 + $I_L1478_32, 0) > 0.0 ) then
 1484.                            (w0%base_addr)($ncount_S3, 1, 1 + $I_L1478_32, 0) = -(ssib%base_addr)($ncount_S3, 1 + $I_L1478_32, 0)
 1485.                            (w0%base_addr)($ncount_S3, 2, 1 + $I_L1478_32, 0) = -(ssib%base_addr)($ncount_S3, 1 + $I_L1478_32, 0)
 1486.                            (w0%base_addr)($ncount_S3, 3, 1 + $I_L1478_32, 0) = -(ssib%base_addr)($ncount_S3, 1 + $I_L1478_32, 0)
 1487.                            (wm%base_addr)($ncount_S3, 1, 1 + $I_L1478_32, 0) = -(ssib%base_addr)($ncount_S3, 1 + $I_L1478_32, 0)
 1488.                            (wm%base_addr)($ncount_S3, 2, 1 + $I_L1478_32, 0) = -(ssib%base_addr)($ncount_S3, 1 + $I_L1478_32, 0)
 1489.                            (wm%base_addr)($ncount_S3, 3, 1 + $I_L1478_32, 0) = -(ssib%base_addr)($ncount_S3, 1 + $I_L1478_32, 0)
 1489.                         endif
 1489.                      endif
 1492.                      $I_L1480_30 = 1 + $I_L1480_30
 1491.                      if ( $I_L1480_30 >= $t_S1 ) exit
 1491.                   enddo
 1491.                endif
 1493.                $I_L1478_32 = 1 + $I_L1478_32
 1492.                if ( $I_L1478_32 >= jbmax ) exit
 1492.             enddo
 1492.          endif
 1496.          $snt_T1 = _mt_single( 2, _mt_rw_list(...) )
 1497.          $Unit_temp_O0 = nfsibo
 1497.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifday, 0x2000200000000L ), _iotype( tod, 0x804060300000000L ), _iotype( (idate%base_addr)(+:( 1, idate%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (idatec%base_addr)(+:( 1, idatec%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
 1498.          $Unit_temp_O1 = nfsibo
 1498.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (tm0%base_addr)(+:( tm0%dim_1%LB, tm0%dim_1%LB + tm0%dim_1%EX + -1, 1 ), +:( tm0%dim_2%LB, tm0%dim_2%LB + tm0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tmm%base_addr)(+:( tmm%dim_1%LB, tmm%dim_1%LB + tmm%dim_1%EX + -1, 1 ), +:( tmm%dim_2%LB, tmm%dim_2%LB + tmm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1499.          $Unit_temp_O2 = nfsibo
 1499.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (qm0%base_addr)(+:( qm0%dim_1%LB, qm0%dim_1%LB + qm0%dim_1%EX + -1, 1 ), +:( qm0%dim_2%LB, qm0%dim_2%LB + qm0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (qmm%base_addr)(+:( qmm%dim_1%LB, qmm%dim_1%LB + qmm%dim_1%EX + -1, 1 ), +:( qmm%dim_2%LB, qmm%dim_2%LB + qmm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1500.          $Unit_temp_O3 = nfsibo
 1500.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (td0%base_addr)(+:( td0%dim_1%LB, td0%dim_1%LB + td0%dim_1%EX + -1, 1 ), +:( td0%dim_2%LB, td0%dim_2%LB + td0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tdm%base_addr)(+:( tdm%dim_1%LB, tdm%dim_1%LB + tdm%dim_1%EX + -1, 1 ), +:( tdm%dim_2%LB, tdm%dim_2%LB + tdm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1501.          $Unit_temp_O4 = nfsibo
 1501.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (tg0%base_addr)(+:( tg0%dim_1%LB, tg0%dim_1%LB + tg0%dim_1%EX + -1, 1 ), +:( tg0%dim_2%LB, tg0%dim_2%LB + tg0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tgm%base_addr)(+:( tgm%dim_1%LB, tgm%dim_1%LB + tgm%dim_1%EX + -1, 1 ), +:( tgm%dim_2%LB, tgm%dim_2%LB + tgm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1502.          $Unit_temp_O5 = nfsibo
 1502.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (tc0%base_addr)(+:( tc0%dim_1%LB, tc0%dim_1%LB + tc0%dim_1%EX + -1, 1 ), +:( tc0%dim_2%LB, tc0%dim_2%LB + tc0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tcm%base_addr)(+:( tcm%dim_1%LB, tcm%dim_1%LB + tcm%dim_1%EX + -1, 1 ), +:( tcm%dim_2%LB, tcm%dim_2%LB + tcm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1503.          $Unit_temp_O6 = nfsibo
 1503.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (w0%base_addr)(+:( w0%dim_1%LB, w0%dim_1%LB + w0%dim_1%EX + -1, 1 ), +:( w0%dim_2%LB, w0%dim_2%LB + w0%dim_2%EX + -1, 1 ), +:( w0%dim_3%LB, w0%dim_3%LB + w0%dim_3%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (wm%base_addr)(+:( wm%dim_1%LB, wm%dim_1%LB + wm%dim_1%EX + -1, 1 ), +:( wm%dim_2%LB, wm%dim_2%LB + wm%dim_2%EX + -1, 1 ), +:( wm%dim_3%LB, wm%dim_3%LB + wm%dim_3%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1504.          $Unit_temp_O7 = nfsibo
 1504.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O7, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (capac0%base_addr)(+:( capac0%dim_1%LB, capac0%dim_1%LB + capac0%dim_1%EX + -1, 1 ), +:( capac0%dim_2%LB, capac0%dim_2%LB + capac0%dim_2%EX + -1, 1 ), +:( capac0%dim_3%LB, capac0%dim_3%LB + capac0%dim_3%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (capacm%base_addr)(+:( capacm%dim_1%LB, capacm%dim_1%LB + capacm%dim_1%EX + -1, 1 ), +:( capacm%dim_2%LB, capacm%dim_2%LB + capacm%dim_2%EX + -1, 1 ), +:( capacm%dim_3%LB, capacm%dim_3%LB + capacm%dim_3%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1505.          $Unit_temp_O8 = nfsibo
 1505.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O8, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (ppci%base_addr)(+:( ppci%dim_1%LB, ppci%dim_1%LB + ppci%dim_1%EX + -1, 1 ), +:( ppci%dim_2%LB, ppci%dim_2%LB + ppci%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (ppli%base_addr)(+:( ppli%dim_1%LB, ppli%dim_1%LB + ppli%dim_1%EX + -1, 1 ), +:( ppli%dim_2%LB, ppli%dim_2%LB + ppli%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1506.          $Unit_temp_O9 = nfsibo
 1506.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O9, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (gl0%base_addr)(+:( gl0%dim_1%LB, gl0%dim_1%LB + gl0%dim_1%EX + -1, 1 ), +:( gl0%dim_2%LB, gl0%dim_2%LB + gl0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (zorl%base_addr)(+:( zorl%dim_1%LB, zorl%dim_1%LB + zorl%dim_1%EX + -1, 1 ), +:( zorl%dim_2%LB, zorl%dim_2%LB + zorl%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (gtsea%base_addr)(+:( gtsea%dim_1%LB, gtsea%dim_1%LB + gtsea%dim_1%EX + -1, 1 ), +:( gtsea%dim_2%LB, gtsea%dim_2%LB + gtsea%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tseam%base_addr)(+:( tseam%dim_1%LB, tseam%dim_1%LB + tseam%dim_1%EX + -1, 1 ), +:( tseam%dim_2%LB, tseam%dim_2%LB + tseam%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (qsfc0%base_addr)(+:( qsfc0%dim_1%LB, qsfc0%dim_1%LB + qsfc0%dim_1%EX + -1, 1 ), +:( qsfc0%dim_2%LB, qsfc0%dim_2%LB + qsfc0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tsfc0%base_addr)(+:( tsfc0%dim_1%LB, tsfc0%dim_1%LB + tsfc0%dim_1%EX + -1, 1 ), +:( tsfc0%dim_2%LB, tsfc0%dim_2%LB + tsfc0%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (qsfcm%base_addr)(+:( qsfcm%dim_1%LB, qsfcm%dim_1%LB + qsfcm%dim_1%EX + -1, 1 ), +:( qsfcm%dim_2%LB, qsfcm%dim_2%LB + qsfcm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (tsfcm%base_addr)(+:( tsfcm%dim_1%LB, tsfcm%dim_1%LB + tsfcm%dim_1%EX + -1, 1 ), +:( tsfcm%dim_2%LB, tsfcm%dim_2%LB + tsfcm%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1507.          $Unit_temp_O10 = nfsibo
 1507.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O10, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (imask%base_addr)(+:( imask%dim_1%LB, imask%dim_1%LB + imask%dim_1%EX + -1, 1 ), +:( imask%dim_2%LB, imask%dim_2%LB + imask%dim_2%EX + -1, 1 ), 0), 0x804060200000000L ) ) )
 1509.          $Unit_temp_O11 = nfcnv1
 1509.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O11, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifday, 0x2000200000000L ), _iotype( tod, 0x804060300000000L ), _iotype( (idate%base_addr)(+:( 1, idate%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (idatec%base_addr)(+:( 1, idatec%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
 1510.          $Unit_temp_O12 = nfcnv1
 1510.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O12, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (convc%base_addr)(+:( convc%dim_1%LB, convc%dim_1%LB + convc%dim_1%EX + -1, 1 ), +:( convc%dim_2%LB, convc%dim_2%LB + convc%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (convt%base_addr)(+:( convt%dim_1%LB, convt%dim_1%LB + convt%dim_1%EX + -1, 1 ), +:( convt%dim_2%LB, convt%dim_2%LB + convt%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (convb%base_addr)(+:( convb%dim_1%LB, convb%dim_1%LB + convb%dim_1%EX + -1, 1 ), +:( convb%dim_2%LB, convb%dim_2%LB + convb%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (prcp1%base_addr)(+:( prcp1%dim_1%LB, prcp1%dim_1%LB + prcp1%dim_1%EX + -1, 1 ), +:( prcp1%dim_2%LB, prcp1%dim_2%LB + prcp1%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (prcp2%base_addr)(+:( prcp2%dim_1%LB, prcp2%dim_1%LB + prcp2%dim_1%EX + -1, 1 ), +:( prcp2%dim_2%LB, prcp2%dim_2%LB + prcp2%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (prcp3%base_addr)(+:( prcp3%dim_1%LB, prcp3%dim_1%LB + prcp3%dim_1%EX + -1, 1 ), +:( prcp3%dim_2%LB, prcp3%dim_2%LB + prcp3%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (prcpt%base_addr)(+:( prcpt%dim_1%LB, prcpt%dim_1%LB + prcpt%dim_1%EX + -1, 1 ), +:( prcpt%dim_2%LB, prcpt%dim_2%LB + prcpt%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (toplv%base_addr)(+:( toplv%dim_1%LB, toplv%dim_1%LB + toplv%dim_1%EX + -1, 1 ), +:( toplv%dim_2%LB, toplv%dim_2%LB + toplv%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (botlv%base_addr)(+:( botlv%dim_1%LB, botlv%dim_1%LB + botlv%dim_1%EX + -1, 1 ), +:( botlv%dim_2%LB, botlv%dim_2%LB + botlv%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1512.          $Unit_temp_O13 = nfcnv1
 1512.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O13, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (rvisdiff%base_addr)(+:( rvisdiff%dim_1%LB, rvisdiff%dim_1%LB + rvisdiff%dim_1%EX + -1, 1 ), +:( rvisdiff%dim_2%LB, rvisdiff%dim_2%LB + rvisdiff%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (rvisbeam%base_addr)(+:( rvisbeam%dim_1%LB, rvisbeam%dim_1%LB + rvisbeam%dim_1%EX + -1, 1 ), +:( rvisbeam%dim_2%LB, rvisbeam%dim_2%LB + rvisbeam%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (rnirdiff%base_addr)(+:( rnirdiff%dim_1%LB, rnirdiff%dim_1%LB + rnirdiff%dim_1%EX + -1, 1 ), +:( rnirdiff%dim_2%LB, rnirdiff%dim_2%LB + rnirdiff%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (rnirbeam%base_addr)(+:( rnirbeam%dim_1%LB, rnirbeam%dim_1%LB + rnirbeam%dim_1%EX + -1, 1 ), +:( rnirbeam%dim_2%LB, rnirbeam%dim_2%LB + rnirbeam%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (rvisdiffc%base_addr)(+:( rvisdiffc%dim_1%LB, rvisdiffc%dim_1%LB + rvisdiffc%dim_1%EX + -1, 1 ), +:( rvisdiffc%dim_2%LB, rvisdiffc%dim_2%LB + rvisdiffc%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (rvisbeamc%base_addr)(+:( rvisbeamc%dim_1%LB, rvisbeamc%dim_1%LB + rvisbeamc%dim_1%EX + -1, 1 ), +:( rvisbeamc%dim_2%LB, rvisbeamc%dim_2%LB + rvisbeamc%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (rnirdiffc%base_addr)(+:( rnirdiffc%dim_1%LB, rnirdiffc%dim_1%LB + rnirdiffc%dim_1%EX + -1, 1 ), +:( rnirdiffc%dim_2%LB, rnirdiffc%dim_2%LB + rnirdiffc%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (rnirbeamc%base_addr)(+:( rnirbeamc%dim_1%LB, rnirbeamc%dim_1%LB + rnirbeamc%dim_1%EX + -1, 1 ), +:( rnirbeamc%dim_2%LB, rnirbeamc%dim_2%LB + rnirbeamc%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ), _iotype( (rswtoadown%base_addr)(+:( rswtoadown%dim_1%LB, rswtoadown%dim_1%LB + rswtoadown%dim_1%EX + -1, 1 ), +:( rswtoadown%dim_2%LB, rswtoadown%dim_2%LB + rswtoadown%dim_2%EX + -1, 1 ), 0), 0x804060300000000L ) ) )
 1514.          $snt_T1 = _mt_endsingle( 2, _mt_rw_list(...), $snt_T1 )
 1514.       endif
 1517.       return
 1517.       end
 1517.       
  280.       
  280.       module fieldsphysics
 1518.       return
 1518.       end
 1518.       
