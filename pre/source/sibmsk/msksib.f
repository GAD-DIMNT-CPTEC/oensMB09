      PROGRAM MSKSIB
C
      INCLUDE "reshsib.h"
C
      PARAMETER (LATIN=180,LONIN=360,LATOUT=JMAX,LONOUT=IMAX,
     *LONS=LONIN+LONOUT+2,LATS=LATIN+LATOUT+2,NCAT=13)
      INTEGER FIELDA,SLMO,UNDEF
      DIMENSION WTLON(LONS),WTLAT(LATS),MPLON(LONS,2),MPLAT(LATS,2),
     B     WORK(NCAT,LONOUT,LATOUT),WRK2(LONOUT,LATOUT),
     C     SLMO(LONOUT,LATOUT),MSKIN(LONIN,LATIN),
     D          FIELDA(LONIN,LATIN),KLASS(NCAT)
      LOGICAL FLGIN(5),FLGOUT(5)
      INTEGER*2 MASK(LONOUT,LATOUT)
      REAL*4 MGRD(LONOUT,LATOUT)
      DOUBLE PRECISION DWORK(2*LONS)
      CHARACTER*7 FMTI
      DATA FMTI/'(   I1)'/
      DATA KLASS/6*1,2,2,3,2,3,4,5/
C
      OPEN(18,FORM='FORMATTED',STATUS='UNKNOWN')
      OPEN(10,FORM='FORMATTED',STATUS='UNKNOWN')
      OPEN(19,FORM='UNFORMATTED',STATUS='UNKNOWN')
      OPEN(20,FORM='FORMATTED',STATUS='UNKNOWN')
      OPEN(21,FORM='UNFORMATTED',STATUS='UNKNOWN')
C
      WRITE(FMTI,15)LONOUT
   15 FORMAT('(',I3,'I1)')
      READ(10,FMTI)MASK
C
      DO J=1,LATOUT
      DO I=1,LONOUT
      MGRD(I,J)=MASK(I,J)
      ENDDO
      ENDDO
      WRITE(21) MGRD
C
      READ(18,22)FIELDA
   22 FORMAT(40I2)
C
      UNDEF=0
      DO 12 J=1,LATIN
      DO 10 I=1,LONIN
      MSKIN(I,J)=1
   10 CONTINUE
   12 CONTINUE
C
C*** GRID ORIENTATION:
C     VEGETATION INPUT DATA STARTS AT INTERNATIONAL DATE LINE (EDGE)
C     AND SOUTH POLE (EDGE)
      FLGIN(1)=.FALSE.
      FLGIN(2)=.FALSE.
      FLGIN(3)=.FALSE.
      FLGIN(4)=.FALSE.
      FLGIN(5)=.FALSE.
      FLGOUT(1)=.TRUE.
      FLGOUT(2)=.TRUE.
      FLGOUT(3)=.FALSE.
      FLGOUT(4)=.TRUE.
      FLGOUT(5)=.TRUE.
      CALL WTERP(LONIN,LATIN,LONOUT,LATOUT,FLGIN,FLGOUT,WTLON,WTLAT,
     *MPLON,MPLAT,LOND,LATD,DWORK)
      CALL VTERP(FIELDA,LONIN,LATIN,SLMO,LONOUT,LATOUT,WTLON,WTLAT,
     *MPLON,MPLAT,LOND,LATD,MSKIN,UNDEF,WORK,NCAT,WRK2,KLASS)
C
  400 CONTINUE
      DO 40 J=1,LATOUT
      DO 30 I=1,LONOUT
      IF(MASK(I,J).NE.0.AND.SLMO(I,J).EQ.UNDEF)THEN
      IM=I-1
      IF(IM.EQ.0)IM=LONOUT
      IP=I+1
      IF(IP.GT.LONOUT)IP=1
      JM=J-1
      IF(JM.EQ.0)JM=1
      JP=J+1
      IF(JP.GT.LATOUT)JP=LATOUT
      K1=0
      IF(MASK(IM,JM).NE.0)K1=SLMO(IM,JM)
      K2=0
      IF(MASK(I,JM).NE.0)K2=SLMO(I,JM)
      K3=0
      IF(MASK(IP,JM).NE.0)K3=SLMO(IP,JM)
      K4=0
      IF(MASK(IM,J).NE.0)K4=SLMO(IM,J)
      K5=0
      IF(MASK(IP,J).NE.0)K5=SLMO(IP,J)
      K6=0
      IF(MASK(IM,JP).NE.0)K6=SLMO(IM,JP)
      K7=0
      IF(MASK(I,JP).NE.0)K7=SLMO(I,JP)
      K8=0
      IF(MASK(IP,JP).NE.0)K8=SLMO(IP,JP)
      IF(K1+K2+K3+K4+K5+K6+K7+K8.EQ.0)THEN
      CALL FIXSL(LONOUT,LATOUT,SLMO,MASK,I,J,
     *           K1,K2,K3,K4,K5,K6,K7,K8)
      GO TO 400
      ENDIF
C
      KK=-1
      IF(K1.NE.0)KK=K1
      IF(K2.NE.0.AND.KK.EQ.-1)THEN
      KK=K2
      ELSE IF(K2.NE.0.AND.KK.NE.K2)THEN
      CALL FIXSL(LONOUT,LATOUT,SLMO,MASK,I,J,
     *           K1,K2,K3,K4,K5,K6,K7,K8)
      GO TO 400
      END IF
      IF(K3.NE.0.AND.KK.EQ.-1)THEN
      KK=K3
      ELSE IF(K3.NE.0.AND.KK.NE.K3)THEN
      CALL FIXSL(LONOUT,LATOUT,SLMO,MASK,I,J,
     *           K1,K2,K3,K4,K5,K6,K7,K8)
      GO TO 400
      END IF
      IF(K4.NE.0.AND.KK.EQ.-1)THEN
      KK=K4
      ELSE IF(K4.NE.0.AND.KK.NE.K4)THEN
      CALL FIXSL(LONOUT,LATOUT,SLMO,MASK,I,J,
     *           K1,K2,K3,K4,K5,K6,K7,K8)
      GO TO 400
      END IF
      IF(K5.NE.0.AND.KK.EQ.-1)THEN
      KK=K5
      ELSE IF(K5.NE.0.AND.KK.NE.K5)THEN
      CALL FIXSL(LONOUT,LATOUT,SLMO,MASK,I,J,
     *           K1,K2,K3,K4,K5,K6,K7,K8)
      GO TO 400
      END IF
      IF(K6.NE.0.AND.KK.EQ.-1)THEN
      KK=K6
      ELSE IF(K6.NE.0.AND.KK.NE.K6)THEN
      CALL FIXSL(LONOUT,LATOUT,SLMO,MASK,I,J,
     *           K1,K2,K3,K4,K5,K6,K7,K8)
      GO TO 400
      END IF
      IF(K7.NE.0.AND.KK.EQ.-1)THEN
      KK=K7
      ELSE IF(K7.NE.0.AND.KK.NE.K7)THEN
      CALL FIXSL(LONOUT,LATOUT,SLMO,MASK,I,J,
     *           K1,K2,K3,K4,K5,K6,K7,K8)
      GO TO 400
      END IF
      IF(K8.NE.0.AND.KK.EQ.-1)THEN
      KK=K8
      ELSE IF(K8.NE.0.AND.KK.NE.K8)THEN
      CALL FIXSL(LONOUT,LATOUT,SLMO,MASK,I,J,
     *           K1,K2,K3,K4,K5,K6,K7,K8)
      GO TO 400
      END IF
      SLMO(I,J)=KK
      WRITE(6,28)I,J,KK
   28 FORMAT(' UNDEFINED LOCATION I,J=',2I4,
     *' FILLED WITH NEARBY VALUE ',I2)
      END IF
      IF(MASK(I,J).EQ.0)SLMO(I,J)=UNDEF
   30 CONTINUE
   40 CONTINUE
      WRITE(19)SLMO
      WRITE(20,FMTI)MASK
C
      DO J=1,LATOUT
      DO I=1,LONOUT
      MGRD(I,J)=MASK(I,J)
      ENDDO
      ENDDO
      WRITE(21) MGRD
C
      DO J=1,LATOUT
      DO I=1,LONOUT
      MGRD(I,J)=SLMO(I,J)
      ENDDO
      ENDDO
      WRITE(21) MGRD
C
      STOP
      END
