       !        
       !        Cray Inc. Decompilation
       !        Notice - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  putgbex.f
       !        File                  :  /stornext/home/paulo.kubota/agcmibis_clima/pos/source/w3lib-1.4/putgbex.opt
       !        Network               :  Gemini interconnect
       !        Target                :  X86, 64-bit, sse3
       !        
    2.       
    2.       subroutine putgbex( lugb, kf, kpds, kgds, kens, kprob, xprob, kclust, kmembr, lb, f, iret )
    2.       t$1 = kf
  171.       t$3 = _zla( 0, kf )
  175.       t$6 = 4 * _zla( 0, kf )
    2.       t$2 = ( 1000 + 17 * kf / 8 )
  176.       t$7 = _zla( 0, ( 1000 + 17 * kf / 8 ) )
    2.       t$8 = int( _alloc( _zla( 0, ( 1000 + 17 * kf / 8 ) ) ), 8 )
  174.       t$10 = 8 * _zla( 0, kf )
    2.       t$4 = int( _alloc( 8 * _zla( 0, kf ) ), 8 )
  175.       t$5 = t$4
  174.       t$9 = t$4 + 4 * _zla( 0, kf )
  179.       call r63w72( kpds(1), kgds(1), ipds(1), igds(1) )
  180.       $I_A1 = 0
  180. !dir$ ivdep
  180.       do
  180.          ibds(1 + $I_A1) = 0
  180.          $I_A1 = 1 + $I_A1
  180.          if ( $I_A1 >= 200 ) exit
  180.       enddo
  183.       $kbm_S1 = kf
  184.       if ( ipds(7) /= 0 ) then
  185.          $kbm_S1 = 0
  186.          if ( kf > 0 ) then
  186.             $I_L186_8 = 0
  186. !dir$ ivdep
  186.             do
  187.                if ( lb(1 + $I_L186_8) ) then
  188.                   ibm(1 + $I_L186_8) = 1
  189.                   $kbm_S1 = 1 + $kbm_S1
  189.                else
  191.                   ibm(1 + $I_L186_8) = 0
  191.                endif
  193.                $I_L186_8 = 1 + $I_L186_8
  192.                if ( $I_L186_8 >= kf ) exit
  192.             enddo
  192.          endif
  194.          if ( $kbm_S1 + -kf == 0 ) then
  194.             ipds(7) = 0
  194.          endif
  194.       endif
  198.       if ( $kbm_S1 == 0 ) then
  199.          if ( kf > 0 ) then
  199.             $I_L199_10 = 0
  199. !dir$ ivdep
  199.             do
  200.                fr(1 + $I_L199_10) = 0.0
  201.                $I_L199_10 = 1 + $I_L199_10
  199.                if ( $I_L199_10 >= kf ) exit
  199.             enddo
  199.          endif
  202.          nbit = 0
  202.       else
  204.          call getbit( ipds(7), 0, ipds(25), kf, ibm(1), f(1), fr(1), fmin, fmax, nbit )
  205.          nbit = min( 16, nbit )
  205.       endif
  209.       call w3fi68( ipds(1),  _substr(pds(1),1,1) )
  210.       if ( ipds(24) == 2 ) then
  211.          ilast = 86
  212.          call pdsens( kens(1), kprob(1), xprob(1), kclust(1), kmembr(1), ilast,  _substr(pds(1),1,1) )
  212.       endif
  216.       call w3fi72( 0, fr(1), 0, nbit, 1, ipds(1),  _substr(pds(1),1,1), 1, 255, igds(1), 0, 0, ibm(1), kf, ibds(1), kfo,  _substr(grib(1),1,1), lgrib, iret )
  219.       if ( iret == 0 ) then
  219.          call wryte( lugb, lgrib,  _substr(grib(1),1,1) )
  219.       endif
    2.       _free( t$8 )
    2.       _free( t$4 )
  222.       return
  222.       end
  222.       
