       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  putgben.f
       !        File                  :  putgben.cg
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
    2.       
    2.       subroutine putgben( lugb, kf, kpds, kgds, kens, ibs, nbits, lb, f, iret )
    2.       $CARG_kf_I1 = 0[loc( kf ),0]
    2.       $CARG_nbits_I3 = 0[loc( nbits ),0]
    2.       $PRT_P6 = 17 * $CARG_kf_I1
    2.       t$2 = ( 1000 + _ash( $PRT_P6 + _rsh( _ash( $PRT_P6, 2 ), 29 ), 3 ) )
    2.       t$8 = int( _alloc( max( 0, t$2 ) ), 8 )
    2.       $CS_0 = max( 0, $CARG_kf_I1 )
    2.       t$4 = int( _alloc( _lsh( $CS_0, 3 ) ), 8 )
  169.       t$5 = t$4
  168.       t$9 = t$4 + _lsh( $CS_0, 2 )
  173.       call r63w72( 0[loc( kpds ),0], 0[loc( kgds ),0], 0[loc( ipds ),0], 0[loc( igds ),0] )
  174.       $LC_S6 = -50
  174.       $SI_S5 = 0
  174.       $LIS_S4[0:4:1] = _bcst( 0, 4 )
  174.       do
  174.          0[$SI_S5 + loc( ibds ):4:1] = $LIS_S4[0:4:1]
  174.          $SI_S5 = 16 + $SI_S5
  174.          $LC_S6 = 1 + $LC_S6
  174.          if ( $LC_S6 >= 0 ) exit
  174.       enddo
  177.       $kbm_S8 = $CARG_kf_I1
  178.       if ( 6[loc( ipds ),0] /= 0 ) then
  179.          $kbm_S8 = 0
  180.          if ( $CARG_kf_I1 > 0 ) then
  180.             $I_L180_S7 = 0
  182.             $LIS_E2 = ( -1 + $CARG_kf_I1 )
  187.             $LIS_E1 = $CARG_kf_I1
  187.             do
  181.                if ( 0[$I_L180_S7 + loc( lb )].B /= .false. ) then
  182.                   if ( $LIS_E2 - $I_L180_S7 < 0 ) then
  182.                      $LB_Y0 = 1
  182.                      $UB_Y1 = $LIS_E1
  182.                      $Subscript_Y5 = 1 + $I_L180_S7
  182.                      _bounds_error( $_File_Y40, $Line_Y45, $_Name_Y44, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y46 )
  182.                   endif
  182.                   0[t$9,$I_L180_S7] = 1
  183.                   $kbm_S8 = 1 + $kbm_S8
  183.                else
  185.                   if ( $LIS_E2 - $I_L180_S7 < 0 ) then
  185.                      $LB_Y0 = 1
  185.                      $UB_Y1 = $LIS_E1
  185.                      $Subscript_Y5 = 1 + $I_L180_S7
  185.                      _bounds_error( $_File_Y40, $Line_Y47, $_Name_Y44, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y48 )
  185.                   endif
  185.                   0[t$9,$I_L180_S7] = 0
  185.                endif
  187.                $I_L180_S7 = 1 + $I_L180_S7
  186.                if ( $I_L180_S7 >= $LIS_E1 ) exit
  186.             enddo
  186.          endif
  188.          if ( $kbm_S8 - $CARG_kf_I1 == 0 ) then
  188.             6[loc( ipds ),0] = 0
  188.          endif
  188.       endif
  192.       if ( $CARG_nbits_I3 > 0 ) then
  193.          if ( $CARG_kf_I1 > 0 ) then
  194.             __scopy_cce( 0[t$5,0], 0[loc( f ),0], $CARG_kf_I1 )
  194.          endif
  196.          nbit = $CARG_nbits_I3
  197.       else if ( $kbm_S8 == 0 ) then
  199.          if ( $CARG_kf_I1 > 0 ) then
  200.             $W1 = 0.0
  200.             $LCS_CARG_kf_0 = $CARG_kf_I1
  200.             __sset_cce( 0[t$5,0], $W1, $LCS_CARG_kf_0 )
  200.          endif
  202.          nbit = 0
  202.       else
  204.          $LCS_ipds_1 = loc( ipds )
  204.          call getbit( 6[$LCS_ipds_1,0], 0[loc( ibs ),0], 24[$LCS_ipds_1,0], 0[loc( kf ),0], 0[t$9,0], 0[loc( f ),0], 0[t$5,0], fmin, fmax, nbit )
  205.          $nbit_S9 = nbit
  205.          $nbit_S10 = min( 16, $nbit_S9 )
  205.          nbit = $nbit_S10
  205.       endif
  210.       call w3fi68( 0[loc( ipds ),0], substr[pds,0:1] )
  215.       ilast = 45
  216.       call pdsens( 0[loc( kens ),0], kprob, xprob, kclust, kmembr, ilast, substr[pds,0:1] )
  223.       $Con_P7 = 0
  223.       $Con_P8 = 0
  223.       $Con_P9 = 1
  223.       $Con_P10 = 1
  223.       $Con_P11 = 255
  223.       $Con_P12 = 0
  223.       $Con_P13 = 0
  223.       call w3fi72( $Con_P7, 0[t$5,0], $Con_P8, nbit, $Con_P9, 0[loc( ipds ),0], substr[pds,0:1], $Con_P10, $Con_P11, 0[loc( igds ),0], $Con_P12, $Con_P13, 0[t$9,0], 0[loc( kf ),0], 0[loc( ibds ),0], kfo, substr[0,t$8:1], lgrib, 0[loc( iret ),0] )
  226.       if ( 0[loc( iret ),0] == 0 ) then
  226.          call wryte( 0[loc( lugb ),0], lgrib, substr[0,t$8:1] )
  226.       endif
    2.       _free( t$8 )
    2.       _free( t$4 )
  229.       return
  229.       end
  229.       
