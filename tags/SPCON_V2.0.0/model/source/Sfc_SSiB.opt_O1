       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  Sfc_SSiB.f90
       !        File                  :  Sfc_SSiB.opt
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
  183.       
  183.       subroutine initssib( ibmax, jbmax, delsig, path, fnamesibveg_in, fnamesibalb_in )
  183.       delsig%dim_1%LB = 1
  183.       t$1454 = _len( path )
  183.       t$1455 = _len( fnamesibveg_in )
  183.       t$1456 = _len( fnamesibalb_in )
  190.       expcut = -122.03700992868443
  191.       rbyg = 14.645408163265305 * (delsig%base_addr)(1, 0)
  192.        _substr(path_in,1,200) =  _substr(path,1,_len( path ))
  193.        _substr(fnamesibveg,1,200) =  _substr(fnamesibveg_in,1,_len( fnamesibveg_in ))
  194.        _substr(fnamesibalb,1,200) =  _substr(fnamesibalb_in,1,_len( fnamesibalb_in ))
  195.       vcover_gbl%header%a_contig = 1
  195.       vcover_gbl%dim_1%LB = 1
  195.       vcover_gbl%dim_1%EX = _zla( 0, ibmax )
  195.       vcover_gbl%dim_1%SM = 1
  195.       vcover_gbl%dim_2%LB = 1
  195.       vcover_gbl%dim_2%EX = _zla( 0, jbmax )
  195.       vcover_gbl%dim_2%SM = _zla( 0, ibmax )
  195.       vcover_gbl%dim_3%LB = 1
  195.       vcover_gbl%dim_3%EX = 2
  195.       vcover_gbl%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, jbmax ) )
  195.       $_allo_P0(0) = 0x1000000000001L
  195.       $_allo_P0(1) = loc( vcover_gbl )
  195.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
  196.       zlt_gbl%header%a_contig = 1
  196.       zlt_gbl%dim_1%LB = 1
  196.       zlt_gbl%dim_1%EX = _zla( 0, ibmax )
  196.       zlt_gbl%dim_1%SM = 1
  196.       zlt_gbl%dim_2%LB = 1
  196.       zlt_gbl%dim_2%EX = _zla( 0, jbmax )
  196.       zlt_gbl%dim_2%SM = _zla( 0, ibmax )
  196.       zlt_gbl%dim_3%LB = 1
  196.       zlt_gbl%dim_3%EX = 2
  196.       zlt_gbl%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, jbmax ) )
  196.       $_allo_P1(0) = 0x1000000000001L
  196.       $_allo_P1(1) = loc( zlt_gbl )
  196.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
  197.       green_gbl%header%a_contig = 1
  197.       green_gbl%dim_1%LB = 1
  197.       green_gbl%dim_1%EX = _zla( 0, ibmax )
  197.       green_gbl%dim_1%SM = 1
  197.       green_gbl%dim_2%LB = 1
  197.       green_gbl%dim_2%EX = _zla( 0, jbmax )
  197.       green_gbl%dim_2%SM = _zla( 0, ibmax )
  197.       green_gbl%dim_3%LB = 1
  197.       green_gbl%dim_3%EX = 2
  197.       green_gbl%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, jbmax ) )
  197.       $_allo_P2(0) = 0x1000000000001L
  197.       $_allo_P2(1) = loc( green_gbl )
  197.       call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
  198.       chil_gbl%header%a_contig = 1
  198.       chil_gbl%dim_1%LB = 1
  198.       chil_gbl%dim_1%EX = _zla( 0, ibmax )
  198.       chil_gbl%dim_1%SM = 1
  198.       chil_gbl%dim_2%LB = 1
  198.       chil_gbl%dim_2%EX = _zla( 0, jbmax )
  198.       chil_gbl%dim_2%SM = _zla( 0, ibmax )
  198.       chil_gbl%dim_3%LB = 1
  198.       chil_gbl%dim_3%EX = 2
  198.       chil_gbl%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, jbmax ) )
  198.       $_allo_P3(0) = 0x1000000000001L
  198.       $_allo_P3(1) = loc( chil_gbl )
  198.       call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
  199.       topt_gbl%header%a_contig = 1
  199.       topt_gbl%dim_1%LB = 1
  199.       topt_gbl%dim_1%EX = _zla( 0, ibmax )
  199.       topt_gbl%dim_1%SM = 1
  199.       topt_gbl%dim_2%LB = 1
  199.       topt_gbl%dim_2%EX = _zla( 0, jbmax )
  199.       topt_gbl%dim_2%SM = _zla( 0, ibmax )
  199.       topt_gbl%dim_3%LB = 1
  199.       topt_gbl%dim_3%EX = 2
  199.       topt_gbl%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, jbmax ) )
  199.       $_allo_P4(0) = 0x1000000000001L
  199.       $_allo_P4(1) = loc( topt_gbl )
  199.       call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
  200.       tll_gbl%header%a_contig = 1
  200.       tll_gbl%dim_1%LB = 1
  200.       tll_gbl%dim_1%EX = _zla( 0, ibmax )
  200.       tll_gbl%dim_1%SM = 1
  200.       tll_gbl%dim_2%LB = 1
  200.       tll_gbl%dim_2%EX = _zla( 0, jbmax )
  200.       tll_gbl%dim_2%SM = _zla( 0, ibmax )
  200.       tll_gbl%dim_3%LB = 1
  200.       tll_gbl%dim_3%EX = 2
  200.       tll_gbl%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, jbmax ) )
  200.       $_allo_P5(0) = 0x1000000000001L
  200.       $_allo_P5(1) = loc( tll_gbl )
  200.       call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
  201.       tu_gbl%header%a_contig = 1
  201.       tu_gbl%dim_1%LB = 1
  201.       tu_gbl%dim_1%EX = _zla( 0, ibmax )
  201.       tu_gbl%dim_1%SM = 1
  201.       tu_gbl%dim_2%LB = 1
  201.       tu_gbl%dim_2%EX = _zla( 0, jbmax )
  201.       tu_gbl%dim_2%SM = _zla( 0, ibmax )
  201.       tu_gbl%dim_3%LB = 1
  201.       tu_gbl%dim_3%EX = 2
  201.       tu_gbl%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, jbmax ) )
  201.       $_allo_P6(0) = 0x1000000000001L
  201.       $_allo_P6(1) = loc( tu_gbl )
  201.       call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
  202.       defac_gbl%header%a_contig = 1
  202.       defac_gbl%dim_1%LB = 1
  202.       defac_gbl%dim_1%EX = _zla( 0, ibmax )
  202.       defac_gbl%dim_1%SM = 1
  202.       defac_gbl%dim_2%LB = 1
  202.       defac_gbl%dim_2%EX = _zla( 0, jbmax )
  202.       defac_gbl%dim_2%SM = _zla( 0, ibmax )
  202.       defac_gbl%dim_3%LB = 1
  202.       defac_gbl%dim_3%EX = 2
  202.       defac_gbl%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, jbmax ) )
  202.       $_allo_P7(0) = 0x1000000000001L
  202.       $_allo_P7(1) = loc( defac_gbl )
  202.       call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
  203.       ph2_gbl%header%a_contig = 1
  203.       ph2_gbl%dim_1%LB = 1
  203.       ph2_gbl%dim_1%EX = _zla( 0, ibmax )
  203.       ph2_gbl%dim_1%SM = 1
  203.       ph2_gbl%dim_2%LB = 1
  203.       ph2_gbl%dim_2%EX = _zla( 0, jbmax )
  203.       ph2_gbl%dim_2%SM = _zla( 0, ibmax )
  203.       ph2_gbl%dim_3%LB = 1
  203.       ph2_gbl%dim_3%EX = 2
  203.       ph2_gbl%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, jbmax ) )
  203.       $_allo_P8(0) = 0x1000000000001L
  203.       $_allo_P8(1) = loc( ph2_gbl )
  203.       call __allocate( $_allo_P8, 0, 0, _fcd( 0, 0 ) )
  204.       ph1_gbl%header%a_contig = 1
  204.       ph1_gbl%dim_1%LB = 1
  204.       ph1_gbl%dim_1%EX = _zla( 0, ibmax )
  204.       ph1_gbl%dim_1%SM = 1
  204.       ph1_gbl%dim_2%LB = 1
  204.       ph1_gbl%dim_2%EX = _zla( 0, jbmax )
  204.       ph1_gbl%dim_2%SM = _zla( 0, ibmax )
  204.       ph1_gbl%dim_3%LB = 1
  204.       ph1_gbl%dim_3%EX = 2
  204.       ph1_gbl%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, jbmax ) )
  204.       $_allo_P9(0) = 0x1000000000001L
  204.       $_allo_P9(1) = loc( ph1_gbl )
  204.       call __allocate( $_allo_P9, 0, 0, _fcd( 0, 0 ) )
  205.       rstpar_gbl%header%a_contig = 1
  205.       rstpar_gbl%dim_1%LB = 1
  205.       rstpar_gbl%dim_1%EX = _zla( 0, ibmax )
  205.       rstpar_gbl%dim_1%SM = 1
  205.       rstpar_gbl%dim_2%LB = 1
  205.       rstpar_gbl%dim_2%EX = _zla( 0, jbmax )
  205.       rstpar_gbl%dim_2%SM = _zla( 0, ibmax )
  205.       rstpar_gbl%dim_3%LB = 1
  205.       rstpar_gbl%dim_3%EX = 2
  205.       rstpar_gbl%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, jbmax ) )
  205.       rstpar_gbl%dim_4%LB = 1
  205.       rstpar_gbl%dim_4%EX = 3
  205.       rstpar_gbl%dim_4%SM = ( 2 * _zla( 0, ibmax ) * _zla( 0, jbmax ) )
  205.       $_allo_P10(0) = 0x1000000000001L
  205.       $_allo_P10(1) = loc( rstpar_gbl )
  205.       call __allocate( $_allo_P10, 0, 0, _fcd( 0, 0 ) )
  206.       return
  206.       end
  206.       
  208.       
  208.       subroutine ssib_driver( jdt, latitu, bps, psb, dzm, em, gmt, gmq, gmu, cu, cuni, ctni, ustar, cosz, sinclt, rhoair, psy, rcp, wc, wg, fc, fg, hr, ect, eci, egt, egi, egs, ec, eg, hc, hg, ecidif, egidif, ecmass, egmass, etmass, hflux, chf, shf, fluxef, roff, drag, ra, rb, rd, rc, rg, tcta, tgta, ta, ea, etc, etg, btc, btg, u2, radt, par, pd, rst, rsoil, phroot, hrr, phsoil, cc, cg, satcap, snow, dtc, dtg, dtm, dqm, stm, extk, radfac, closs, gloss, thermk, p1f, p2f, tc, tg, td, capac, w, qm, tm, um, vm, psur, ppc, ppl, radn, itype, dtc3x, mon, nmax, ncols, zlwup, salb, tgeff, nsx, tmtx, qmtx, umtx, gt, gq, gu, gv, gps, imask, kmax, ktm, initlz, tcm, tgm, tdm, wm, beam_visb, beam_visd, beam_nirb, beam_nird, cos2, dlwbot, capacm, td0, tg0, zenith, kt, iswrad, ilwrad, xvisb, xvisd, xnirb, xnird, ppli, ppci, tsea, ssib, w0, tc0, capac0, intg, slrad, tseam, tsurf, qsurf, colrad, sigki, delsig, sens, evap, umom, vmom, zorl, rmi, rhi, cond, stor, z0x, speedm, ustarm, z0sea, rho, d, qsfc0, tsfc0, qsfcm, tsfcm, qsfc, tsfc, qm0, qmm, tm0, tmm, mskant )
  208.       t$1 = ncols
  329.       t$1457 = _zla( 0, ncols )
  208.       t$1458 = _zla( 0, ncols )
  208.       t$1459 = 3 * _zla( 0, ncols )
  208.       t$1460 = 4 * _zla( 0, ncols )
  208.       t$1461 = 2 * _zla( 0, ncols )
  208.       t$1462 = 3 * _zla( 0, ncols )
  208.       t$1463 = 2 * _zla( 0, ncols )
  208.       t$1464 = 6 * _zla( 0, ncols )
  208.       t$1465 = 12 * _zla( 0, ncols )
  208.       t$1466 = 2 * _zla( 0, ncols )
  208.       t$1467 = 3 * _zla( 0, ncols )
  208.       t$1468 = 6 * _zla( 0, ncols )
  208.       t$1469 = 2 * _zla( 0, ncols )
  208.       t$119 = kmax
  358.       t$1470 = _zla( 0, kmax )
  208.       t$1471 = _zla( 0, ncols ) * _zla( 0, kmax )
  208.       t$1472 = 3 * _zla( 0, ncols ) * _zla( 0, kmax )
  208.       t$1473 = 4 * _zla( 0, ncols ) * _zla( 0, kmax )
  208.       t$1474 = _zla( 0, ncols ) * _zla( 0, kmax )
  208.       t$1475 = _len( iswrad )
  208.       t$1476 = _len( ilwrad )
  437.       t$1479 = 16 * _zla( 0, ncols )
  445.       t$1480 = 8 * ( 7 + 16 * _zla( 0, ncols ) ) / 8
  445.       t$1482 = t$1480 + 16 * _zla( 0, ncols )
  436.       t$1483 = 8 * ( 7 + t$1480 + 16 * _zla( 0, ncols ) ) / 8
  436.       t$1485 = t$1483 + 16 * _zla( 0, ncols )
  450.       t$1486 = 8 * ( 7 + t$1483 + 16 * _zla( 0, ncols ) ) / 8
  450.       t$1488 = t$1486 + 16 * _zla( 0, ncols )
  449.       t$1489 = 8 * ( 7 + t$1486 + 16 * _zla( 0, ncols ) ) / 8
  449.       t$1491 = t$1489 + 16 * _zla( 0, ncols )
  440.       t$1492 = 8 * ( 7 + t$1489 + 16 * _zla( 0, ncols ) ) / 8
  440.       t$1494 = t$1492 + 8 * _zla( 0, ncols )
  439.       t$1495 = 8 * ( 7 + t$1492 + 8 * _zla( 0, ncols ) ) / 8
  439.       t$1497 = t$1495 + 8 * _zla( 0, ncols )
  434.       t$1498 = 8 * ( 7 + t$1495 + 8 * _zla( 0, ncols ) ) / 8
  434.       t$1500 = t$1498 + 48 * _zla( 0, ncols )
  443.       t$1501 = 8 * ( 7 + t$1498 + 48 * _zla( 0, ncols ) ) / 8
  443.       t$1503 = t$1501 + 16 * _zla( 0, ncols )
  448.       t$1504 = 8 * ( 7 + t$1501 + 16 * _zla( 0, ncols ) ) / 8
  448.       t$1506 = t$1504 + 8 * _zla( 0, ncols )
  447.       t$1507 = 8 * ( 7 + t$1504 + 8 * _zla( 0, ncols ) ) / 8
  447.       t$1509 = t$1507 + 8 * _zla( 0, ncols )
  442.       t$1510 = 8 * ( 7 + t$1507 + 8 * _zla( 0, ncols ) ) / 8
  442.       t$1512 = t$1510 + 16 * _zla( 0, ncols )
  444.       t$1513 = 8 * ( 7 + t$1510 + 16 * _zla( 0, ncols ) ) / 8
  444.       t$1515 = t$1513 + 16 * _zla( 0, ncols )
  438.       t$1516 = 8 * ( 7 + t$1513 + 16 * _zla( 0, ncols ) ) / 8
  438.       t$1518 = t$1516 + 16 * _zla( 0, ncols )
  446.       t$1519 = 8 * ( 7 + t$1516 + 16 * _zla( 0, ncols ) ) / 8
  446.       t$1521 = t$1519 + 8 * _zla( 0, ncols )
  441.       t$1522 = 8 * ( 7 + t$1519 + 8 * _zla( 0, ncols ) ) / 8
  441.       t$1524 = t$1522 + 8 * _zla( 0, ncols )
  435.       t$1525 = 8 * ( 7 + t$1522 + 8 * _zla( 0, ncols ) ) / 8
  435.       t$1527 = t$1525 + 16 * _zla( 0, ncols )
  208.       t$1477 = int( _alloc( t$1525 + 16 * _zla( 0, ncols ) ), 8 )
  437.       t$1478 = t$1477
  445.       t$1481 = t$1480 + t$1477
  436.       t$1484 = t$1483 + t$1477
  450.       t$1487 = t$1486 + t$1477
  449.       t$1490 = t$1489 + t$1477
  440.       t$1493 = t$1492 + t$1477
  439.       t$1496 = t$1495 + t$1477
  434.       t$1499 = t$1498 + t$1477
  443.       t$1502 = t$1501 + t$1477
  448.       t$1505 = t$1504 + t$1477
  447.       t$1508 = t$1507 + t$1477
  442.       t$1511 = t$1510 + t$1477
  444.       t$1514 = t$1513 + t$1477
  438.       t$1517 = t$1516 + t$1477
  446.       t$1520 = t$1519 + t$1477
  441.       t$1523 = t$1522 + t$1477
  435.       t$1526 = t$1525 + t$1477
  461.       $SC_tll_gbl_I40 = tll_gbl%dim_1%EX
  461.       $SC_tll_gbl_I41 = tll_gbl%dim_1%LB
  461.       $SC_tll_gbl_I43 = tll_gbl%dim_2%SM
  461.       $SC_tll_gbl_I42 = tll_gbl%dim_2%EX
  461.       $SC_tll_gbl_I44 = tll_gbl%dim_2%LB
  461.       $SC_tll_gbl_I46 = tll_gbl%dim_3%SM
  461.       $SC_tll_gbl_I45 = tll_gbl%dim_3%EX
  461.       $SC_tll_gbl_I47 = tll_gbl%dim_3%LB
  460.       $SC_topt_gbl_I32 = topt_gbl%dim_1%EX
  460.       $SC_topt_gbl_I33 = topt_gbl%dim_1%LB
  460.       $SC_topt_gbl_I35 = topt_gbl%dim_2%SM
  460.       $SC_topt_gbl_I34 = topt_gbl%dim_2%EX
  460.       $SC_topt_gbl_I36 = topt_gbl%dim_2%LB
  460.       $SC_topt_gbl_I38 = topt_gbl%dim_3%SM
  460.       $SC_topt_gbl_I37 = topt_gbl%dim_3%EX
  460.       $SC_topt_gbl_I39 = topt_gbl%dim_3%LB
  459.       $SC_chil_gbl_I24 = chil_gbl%dim_1%EX
  459.       $SC_chil_gbl_I25 = chil_gbl%dim_1%LB
  459.       $SC_chil_gbl_I27 = chil_gbl%dim_2%SM
  459.       $SC_chil_gbl_I26 = chil_gbl%dim_2%EX
  459.       $SC_chil_gbl_I28 = chil_gbl%dim_2%LB
  459.       $SC_chil_gbl_I30 = chil_gbl%dim_3%SM
  459.       $SC_chil_gbl_I29 = chil_gbl%dim_3%EX
  459.       $SC_chil_gbl_I31 = chil_gbl%dim_3%LB
  458.       $SC_green_gbl_I16 = green_gbl%dim_1%EX
  458.       $SC_green_gbl_I17 = green_gbl%dim_1%LB
  458.       $SC_green_gbl_I19 = green_gbl%dim_2%SM
  458.       $SC_green_gbl_I18 = green_gbl%dim_2%EX
  458.       $SC_green_gbl_I20 = green_gbl%dim_2%LB
  458.       $SC_green_gbl_I22 = green_gbl%dim_3%SM
  458.       $SC_green_gbl_I21 = green_gbl%dim_3%EX
  458.       $SC_green_gbl_I23 = green_gbl%dim_3%LB
  457.       $SC_zlt_gbl_I8 = zlt_gbl%dim_1%EX
  457.       $SC_zlt_gbl_I9 = zlt_gbl%dim_1%LB
  457.       $SC_zlt_gbl_I11 = zlt_gbl%dim_2%SM
  457.       $SC_zlt_gbl_I10 = zlt_gbl%dim_2%EX
  457.       $SC_zlt_gbl_I12 = zlt_gbl%dim_2%LB
  457.       $SC_zlt_gbl_I14 = zlt_gbl%dim_3%SM
  457.       $SC_zlt_gbl_I13 = zlt_gbl%dim_3%EX
  457.       $SC_zlt_gbl_I15 = zlt_gbl%dim_3%LB
  456.       $SC_vcover_gbl_I0 = vcover_gbl%dim_1%EX
  456.       $SC_vcover_gbl_I1 = vcover_gbl%dim_1%LB
  456.       $SC_vcover_gbl_I3 = vcover_gbl%dim_2%SM
  456.       $SC_vcover_gbl_I2 = vcover_gbl%dim_2%EX
  456.       $SC_vcover_gbl_I4 = vcover_gbl%dim_2%LB
  456.       $SC_vcover_gbl_I6 = vcover_gbl%dim_3%SM
  456.       $SC_vcover_gbl_I5 = vcover_gbl%dim_3%EX
  456.       $SC_vcover_gbl_I7 = vcover_gbl%dim_3%LB
  455.       if ( nmax > 0 ) then
  454.          $I_L454_360 = 0
  454.          do
  455.             $I_L455_112 = 0
  455. !dir$ ivdep
  455.             do
  456.                vcover(1 + $I_L455_112, 1 + $I_L454_360) = (vcover_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_360, 0)
  457.                zlt2(1 + $I_L455_112, 1 + $I_L454_360) = (zlt_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_360, 0)
  458.                green2(1 + $I_L455_112, 1 + $I_L454_360) = (green_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_360, 0)
  459.                chil2(1 + $I_L455_112, 1 + $I_L454_360) = (chil_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_360, 0)
  460.                topt2(1 + $I_L455_112, 1 + $I_L454_360) = (topt_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_360, 0)
  461.                tll2(1 + $I_L455_112, 1 + $I_L454_360) = (tll_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_360, 0)
  462.                tu2(1 + $I_L455_112, 1 + $I_L454_360) = (tu_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_360, 0)
  463.                defac2(1 + $I_L455_112, 1 + $I_L454_360) = (defac_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_360, 0)
  464.                ph12(1 + $I_L455_112, 1 + $I_L454_360) = (ph1_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_360, 0)
  465.                ph22(1 + $I_L455_112, 1 + $I_L454_360) = (ph2_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_360, 0)
  466.                rstpar2(1 + $I_L455_112, 1 + $I_L454_360, 1) = (rstpar_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_360, 1, 0)
  467.                rstpar2(1 + $I_L455_112, 1 + $I_L454_360, 2) = (rstpar_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_360, 2, 0)
  468.                rstpar2(1 + $I_L455_112, 1 + $I_L454_360, 3) = (rstpar_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_360, 3, 0)
  469.                $I_L455_112 = 1 + $I_L455_112
  455.                if ( $I_L455_112 >= nmax ) exit
  455.             enddo
  470.             $I_L454_360 = 1 + $I_L454_360
  469.             if ( $I_L454_360 >= 2 ) exit
  469.          enddo
  469.       endif
  472.       $ncount_S3 = 0
  473.       if ( ncols > 0 ) then
  479.          $SC_xd_I63 = xd%dim_1%EX
  479.          $SC_xd_I64 = xd%dim_1%LB
  479.          $SC_xd_I66 = xd%dim_2%SM
  479.          $SC_xd_I65 = xd%dim_2%EX
  479.          $SC_xd_I67 = xd%dim_2%LB
  478.          $SC_x0x_I58 = x0x%dim_1%EX
  478.          $SC_x0x_I59 = x0x%dim_1%LB
  478.          $SC_x0x_I61 = x0x%dim_2%SM
  478.          $SC_x0x_I60 = x0x%dim_2%EX
  478.          $SC_x0x_I62 = x0x%dim_2%LB
  477.          $SC_xdc_I53 = xdc%dim_1%EX
  477.          $SC_xdc_I54 = xdc%dim_1%LB
  477.          $SC_xdc_I56 = xdc%dim_2%SM
  477.          $SC_xdc_I55 = xdc%dim_2%EX
  477.          $SC_xdc_I57 = xdc%dim_2%LB
  476.          $SC_xbc_I48 = xbc%dim_1%EX
  476.          $SC_xbc_I49 = xbc%dim_1%LB
  476.          $SC_xbc_I51 = xbc%dim_2%SM
  476.          $SC_xbc_I50 = xbc%dim_2%EX
  476.          $SC_xbc_I52 = xbc%dim_2%LB
  473.          $I_L473_114 = 0
  473. !dir$ ivdep
  473.          do
  474.             if ( imask(1 + $I_L473_114) > 0 ) then
  475.                $ncount_S3 = 1 + $ncount_S3
  476.                rbc($ncount_S3) = (xbc%base_addr)(itype($ncount_S3), mon($ncount_S3), 0)
  477.                rdc($ncount_S3) = (xdc%base_addr)(itype($ncount_S3), mon($ncount_S3), 0)
  478.                z0x($ncount_S3) = (x0x%base_addr)(itype($ncount_S3), mon($ncount_S3), 0)
  479.                d($ncount_S3) = (xd%base_addr)(itype($ncount_S3), mon($ncount_S3), 0)
  479.             endif
  481.             $I_L473_114 = 1 + $I_L473_114
  480.             if ( $I_L473_114 >= ncols ) exit
  480.          enddo
  480.       endif
  485.       if ( ( initlz >= 0 .and. ktm == -1 .and. kt == 0 .and. nmax > 0 ) /= .false. ) then
  486.          $nint_S4 = 2
  487.          $intsib_S8 = 5
  487.       else
  489.          $nint_S4 = 1
  490.          $intsib_S8 = 1
  490.       endif
  493.       if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,_len( iswrad )) )) /= 'NON' ) then
  493.          if (  _substr(ilwrad,1,_ltrim(  _substr(ilwrad,1,_len( ilwrad )) )) /= 'NON' ) then
  494.             if ( ( initlz >= 0 .and. ktm == -1 .and. kt == 0 .and. nmax > 0 ) /= .false. ) then
  496.                if ( $nint_S4 > 0 ) then
  496.                   $I_L496_574 = 0
  496.                   do
  497.                      $ncount_S6 = 0
  498.                      if ( ncols > 0 ) then
  501.                         if ( $I_L496_574 == 0 ) then
  498.                            $I_L498_116 = 0
  498. !dir$ ivdep
  498.                            do
  499.                               if ( imask(1 + $I_L498_116) > 0 ) then
  500.                                  $ncount_S6 = 1 + $ncount_S6
  505.                                  radn($ncount_S6, 1, 1) = 0.0
  506.                                  radn($ncount_S6, 1, 2) = 0.0
  507.                                  radn($ncount_S6, 2, 1) = 0.0
  508.                                  radn($ncount_S6, 2, 2) = 0.0
  509.                                  cosz($ncount_S6) = 0.0
  520.                                  radn($ncount_S6, 3, 1) = 0.0
  521.                                  radn($ncount_S6, 3, 2) = dlwbot(1 + $I_L498_116)
  525.                                  ppl($ncount_S6) = 0.0
  526.                                  ppc($ncount_S6) = 0.0
  526.                               endif
  528.                               $I_L498_116 = 1 + $I_L498_116
  527.                               if ( $I_L498_116 >= ncols ) exit
  527.                            enddo
  527.                         else
  498.                            $I_L498_138 = 0
  498. !dir$ ivdep
  498.                            do
  499.                               if ( imask(1 + $I_L498_138) > 0 ) then
  500.                                  $ncount_S6 = 1 + $ncount_S6
  514.                                  radn($ncount_S6, 1, 1) = beam_visb(1 + $I_L498_138)
  515.                                  radn($ncount_S6, 1, 2) = beam_visd(1 + $I_L498_138)
  516.                                  radn($ncount_S6, 2, 1) = beam_nirb(1 + $I_L498_138)
  517.                                  radn($ncount_S6, 2, 2) = beam_nird(1 + $I_L498_138)
  518.                                  cosz($ncount_S6) = cos2(1 + $I_L498_138)
  520.                                  radn($ncount_S6, 3, 1) = 0.0
  521.                                  radn($ncount_S6, 3, 2) = dlwbot(1 + $I_L498_138)
  525.                                  ppl($ncount_S6) = 0.0
  526.                                  ppc($ncount_S6) = 0.0
  526.                               endif
  528.                               $I_L498_138 = 1 + $I_L498_138
  527.                               if ( $I_L498_138 >= ncols ) exit
  527.                            enddo
  527.                         endif
  527.                      endif
  529.                      if ( $intsib_S8 > 0 ) then
  529.                         $I_L529_572 = 0
  529.                         do
  532.                            t$2353 = _zla( 0, nmax )
  532.                            t$2357 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  532.                            if ( nmax > 0 ) then
  532.                               $I_L532_362 = 0
  532.                               do
  532.                                  $I_L532_142 = 0
  532. !dir$ ivdep
  532.                                  do
  532.                                     t$2356(1 + $I_L532_142, 1 + $I_L532_362) = capac(1 + $I_L532_142, 1 + $I_L532_362)
  532.                                     $I_L532_142 = 1 + $I_L532_142
  532.                                     if ( $I_L532_142 >= nmax ) exit
  532.                                  enddo
  532.                                  $I_L532_362 = 1 + $I_L532_362
  532.                                  if ( $I_L532_362 >= 2 ) exit
  532.                               enddo
  532.                            endif
  533.                            t$2359 = _zla( 0, nmax )
  533.                            t$2363 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  533.                            if ( nmax > 0 ) then
  533.                               $I_L533_364 = 0
  533.                               do
  533.                                  $I_L533_144 = 0
  533. !dir$ ivdep
  533.                                  do
  533.                                     t$2362(1 + $I_L533_144, 1 + $I_L533_364) = satcap(1 + $I_L533_144, 1 + $I_L533_364)
  533.                                     $I_L533_144 = 1 + $I_L533_144
  533.                                     if ( $I_L533_144 >= nmax ) exit
  533.                                  enddo
  533.                                  $I_L533_364 = 1 + $I_L533_364
  533.                                  if ( $I_L533_364 >= 2 ) exit
  533.                               enddo
  533.                            endif
  533.                            t$2365 = _zla( 0, nmax )
  533.                            t$2371 = int( _alloc( _zla( 0, 96 * _zla( 0, nmax ) ) ), 8 )
  533.                            if ( nmax > 0 ) then
  533.                               $I_L533_366 = 0
  533.                               do
  533.                                  $I_L533_146 = 0
  533. !dir$ ivdep
  533.                                  do
  533.                                     t$2370(1 + $I_L533_146, 1 + $I_L533_366, 1, 1) = extk(1 + $I_L533_146, 1 + $I_L533_366, 1, 1)
  533.                                     $I_L533_146 = 1 + $I_L533_146
  533.                                     if ( $I_L533_146 >= nmax ) exit
  533.                                  enddo
  533.                                  $I_L533_366 = 1 + $I_L533_366
  533.                                  if ( $I_L533_366 >= 12 ) exit
  533.                               enddo
  533.                            endif
  533.                            t$2373 = _zla( 0, nmax )
  533.                            t$2379 = int( _alloc( _zla( 0, 96 * _zla( 0, nmax ) ) ), 8 )
  533.                            if ( nmax > 0 ) then
  533.                               $I_L533_368 = 0
  533.                               do
  533.                                  $I_L533_148 = 0
  533. !dir$ ivdep
  533.                                  do
  533.                                     t$2378(1 + $I_L533_148, 1 + $I_L533_368, 1, 1) = radfac(1 + $I_L533_148, 1 + $I_L533_368, 1, 1)
  533.                                     $I_L533_148 = 1 + $I_L533_148
  533.                                     if ( $I_L533_148 >= nmax ) exit
  533.                                  enddo
  533.                                  $I_L533_368 = 1 + $I_L533_368
  533.                                  if ( $I_L533_368 >= 12 ) exit
  533.                               enddo
  533.                            endif
  535.                            t$2381 = _zla( 0, nmax )
  535.                            t$2386 = int( _alloc( _zla( 0, 32 * _zla( 0, nmax ) ) ), 8 )
  535.                            if ( nmax > 0 ) then
  535.                               $I_L535_370 = 0
  535.                               do
  535.                                  $I_L535_150 = 0
  535. !dir$ ivdep
  535.                                  do
  535.                                     t$2385(1 + $I_L535_150, 1 + $I_L535_370, 1) = salb(1 + $I_L535_150, 1 + $I_L535_370, 1)
  535.                                     $I_L535_150 = 1 + $I_L535_150
  535.                                     if ( $I_L535_150 >= nmax ) exit
  535.                                  enddo
  535.                                  $I_L535_370 = 1 + $I_L535_370
  535.                                  if ( $I_L535_370 >= 4 ) exit
  535.                               enddo
  535.                            endif
  530.                            call radalb( nmax, mon(1), nmax, itype(1), tc(1), tg(1), t$2356(1, 1), t$2362(1, 1), t$2370(1, 1, 1, 1), t$2378(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), zlwup(1), t$2385(1, 1, 1), tgeff(1), cosz(1), nsx(1), latitu )
  530.                            if ( nmax > 0 ) then
  530.                               $I_L530_372 = 0
  530.                               do
  530.                                  $I_L530_152 = 0
  530. !dir$ ivdep
  530.                                  do
  530.                                     salb(1 + $I_L530_152, 1 + $I_L530_372, 1) = t$2385(1 + $I_L530_152, 1 + $I_L530_372, 1)
  530.                                     $I_L530_152 = 1 + $I_L530_152
  530.                                     if ( $I_L530_152 >= nmax ) exit
  530.                                  enddo
  530.                                  $I_L530_372 = 1 + $I_L530_372
  530.                                  if ( $I_L530_372 >= 4 ) exit
  530.                               enddo
  530.                            endif
  535.                            _free( t$2386 )
  530.                            if ( nmax > 0 ) then
  530.                               $I_L530_374 = 0
  530.                               do
  530.                                  $I_L530_154 = 0
  530. !dir$ ivdep
  530.                                  do
  530.                                     radfac(1 + $I_L530_154, 1 + $I_L530_374, 1, 1) = t$2378(1 + $I_L530_154, 1 + $I_L530_374, 1, 1)
  530.                                     $I_L530_154 = 1 + $I_L530_154
  530.                                     if ( $I_L530_154 >= nmax ) exit
  530.                                  enddo
  530.                                  $I_L530_374 = 1 + $I_L530_374
  530.                                  if ( $I_L530_374 >= 12 ) exit
  530.                               enddo
  530.                            endif
  533.                            _free( t$2379 )
  530.                            if ( nmax > 0 ) then
  530.                               $I_L530_376 = 0
  530.                               do
  530.                                  $I_L530_156 = 0
  530. !dir$ ivdep
  530.                                  do
  530.                                     extk(1 + $I_L530_156, 1 + $I_L530_376, 1, 1) = t$2370(1 + $I_L530_156, 1 + $I_L530_376, 1, 1)
  530.                                     $I_L530_156 = 1 + $I_L530_156
  530.                                     if ( $I_L530_156 >= nmax ) exit
  530.                                  enddo
  530.                                  $I_L530_376 = 1 + $I_L530_376
  530.                                  if ( $I_L530_376 >= 12 ) exit
  530.                               enddo
  530.                            endif
  533.                            _free( t$2371 )
  530.                            if ( nmax > 0 ) then
  530.                               $I_L530_378 = 0
  530.                               do
  530.                                  $I_L530_158 = 0
  530. !dir$ ivdep
  530.                                  do
  530.                                     satcap(1 + $I_L530_158, 1 + $I_L530_378) = t$2362(1 + $I_L530_158, 1 + $I_L530_378)
  530.                                     $I_L530_158 = 1 + $I_L530_158
  530.                                     if ( $I_L530_158 >= nmax ) exit
  530.                                  enddo
  530.                                  $I_L530_378 = 1 + $I_L530_378
  530.                                  if ( $I_L530_378 >= 2 ) exit
  530.                               enddo
  530.                            endif
  533.                            _free( t$2363 )
  532.                            _free( t$2357 )
  539.                            t$2388 = _zla( 0, nmax )
  539.                            t$2392 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  539.                            if ( nmax > 0 ) then
  539.                               $I_L539_380 = 0
  539.                               do
  539.                                  $I_L539_160 = 0
  539. !dir$ ivdep
  539.                                  do
  539.                                     t$2391(1 + $I_L539_160, 1 + $I_L539_380) = vcover(1 + $I_L539_160, 1 + $I_L539_380)
  539.                                     $I_L539_160 = 1 + $I_L539_160
  539.                                     if ( $I_L539_160 >= nmax ) exit
  539.                                  enddo
  539.                                  $I_L539_380 = 1 + $I_L539_380
  539.                                  if ( $I_L539_380 >= 2 ) exit
  539.                               enddo
  539.                            endif
  542.                            t$2394 = _zla( 0, nmax )
  542.                            t$2398 = int( _alloc( _zla( 0, 24 * _zla( 0, nmax ) ) ), 8 )
  542.                            if ( nmax > 0 ) then
  542.                               $I_L542_382 = 0
  542.                               do
  542.                                  $I_L542_162 = 0
  542. !dir$ ivdep
  542.                                  do
  542.                                     t$2397(1 + $I_L542_162, 1 + $I_L542_382) = gmt(1 + $I_L542_162, 1 + $I_L542_382)
  542.                                     $I_L542_162 = 1 + $I_L542_162
  542.                                     if ( $I_L542_162 >= nmax ) exit
  542.                                  enddo
  542.                                  $I_L542_382 = 1 + $I_L542_382
  542.                                  if ( $I_L542_382 >= 3 ) exit
  542.                               enddo
  542.                            endif
  542.                            t$2400 = _zla( 0, nmax )
  542.                            t$2404 = int( _alloc( _zla( 0, 24 * _zla( 0, nmax ) ) ), 8 )
  542.                            if ( nmax > 0 ) then
  542.                               $I_L542_384 = 0
  542.                               do
  542.                                  $I_L542_164 = 0
  542. !dir$ ivdep
  542.                                  do
  542.                                     t$2403(1 + $I_L542_164, 1 + $I_L542_384) = gmq(1 + $I_L542_164, 1 + $I_L542_384)
  542.                                     $I_L542_164 = 1 + $I_L542_164
  542.                                     if ( $I_L542_164 >= nmax ) exit
  542.                                  enddo
  542.                                  $I_L542_384 = 1 + $I_L542_384
  542.                                  if ( $I_L542_384 >= 3 ) exit
  542.                               enddo
  542.                            endif
  542.                            t$2406 = _zla( 0, nmax )
  542.                            t$2410 = int( _alloc( _zla( 0, 32 * _zla( 0, nmax ) ) ), 8 )
  542.                            if ( nmax > 0 ) then
  542.                               $I_L542_386 = 0
  542.                               do
  542.                                  $I_L542_166 = 0
  542. !dir$ ivdep
  542.                                  do
  542.                                     t$2409(1 + $I_L542_166, 1 + $I_L542_386) = gmu(1 + $I_L542_166, 1 + $I_L542_386)
  542.                                     $I_L542_166 = 1 + $I_L542_166
  542.                                     if ( $I_L542_166 >= nmax ) exit
  542.                                  enddo
  542.                                  $I_L542_386 = 1 + $I_L542_386
  542.                                  if ( $I_L542_386 >= 4 ) exit
  542.                               enddo
  542.                            endif
  554.                            t$2412 = _zla( 0, nmax )
  554.                            t$2416 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  554.                            if ( nmax > 0 ) then
  554.                               $I_L554_388 = 0
  554.                               do
  554.                                  $I_L554_168 = 0
  554. !dir$ ivdep
  554.                                  do
  554.                                     t$2415(1 + $I_L554_168, 1 + $I_L554_388) = radt(1 + $I_L554_168, 1 + $I_L554_388)
  554.                                     $I_L554_168 = 1 + $I_L554_168
  554.                                     if ( $I_L554_168 >= nmax ) exit
  554.                                  enddo
  554.                                  $I_L554_388 = 1 + $I_L554_388
  554.                                  if ( $I_L554_388 >= 2 ) exit
  554.                               enddo
  554.                            endif
  555.                            t$2418 = _zla( 0, nmax )
  555.                            t$2422 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  555.                            if ( nmax > 0 ) then
  555.                               $I_L555_390 = 0
  555.                               do
  555.                                  $I_L555_170 = 0
  555. !dir$ ivdep
  555.                                  do
  555.                                     t$2421(1 + $I_L555_170, 1 + $I_L555_390) = par(1 + $I_L555_170, 1 + $I_L555_390)
  555.                                     $I_L555_170 = 1 + $I_L555_170
  555.                                     if ( $I_L555_170 >= nmax ) exit
  555.                                  enddo
  555.                                  $I_L555_390 = 1 + $I_L555_390
  555.                                  if ( $I_L555_390 >= 2 ) exit
  555.                               enddo
  555.                            endif
  555.                            t$2424 = _zla( 0, nmax )
  555.                            t$2428 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  555.                            if ( nmax > 0 ) then
  555.                               $I_L555_392 = 0
  555.                               do
  555.                                  $I_L555_172 = 0
  555. !dir$ ivdep
  555.                                  do
  555.                                     t$2427(1 + $I_L555_172, 1 + $I_L555_392) = pd(1 + $I_L555_172, 1 + $I_L555_392)
  555.                                     $I_L555_172 = 1 + $I_L555_172
  555.                                     if ( $I_L555_172 >= nmax ) exit
  555.                                  enddo
  555.                                  $I_L555_392 = 1 + $I_L555_392
  555.                                  if ( $I_L555_392 >= 2 ) exit
  555.                               enddo
  555.                            endif
  555.                            t$2430 = _zla( 0, nmax )
  555.                            t$2434 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  555.                            if ( nmax > 0 ) then
  555.                               $I_L555_394 = 0
  555.                               do
  555.                                  $I_L555_174 = 0
  555. !dir$ ivdep
  555.                                  do
  555.                                     t$2433(1 + $I_L555_174, 1 + $I_L555_394) = rst(1 + $I_L555_174, 1 + $I_L555_394)
  555.                                     $I_L555_174 = 1 + $I_L555_174
  555.                                     if ( $I_L555_174 >= nmax ) exit
  555.                                  enddo
  555.                                  $I_L555_394 = 1 + $I_L555_394
  555.                                  if ( $I_L555_394 >= 2 ) exit
  555.                               enddo
  555.                            endif
  556.                            t$2436 = _zla( 0, nmax )
  556.                            t$2440 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  556.                            if ( nmax > 0 ) then
  556.                               $I_L556_396 = 0
  556.                               do
  556.                                  $I_L556_176 = 0
  556. !dir$ ivdep
  556.                                  do
  556.                                     t$2439(1 + $I_L556_176, 1 + $I_L556_396) = phroot(1 + $I_L556_176, 1 + $I_L556_396)
  556.                                     $I_L556_176 = 1 + $I_L556_176
  556.                                     if ( $I_L556_176 >= nmax ) exit
  556.                                  enddo
  556.                                  $I_L556_396 = 1 + $I_L556_396
  556.                                  if ( $I_L556_396 >= 2 ) exit
  556.                               enddo
  556.                            endif
  556.                            t$2442 = _zla( 0, nmax )
  556.                            t$2446 = int( _alloc( _zla( 0, 24 * _zla( 0, nmax ) ) ), 8 )
  556.                            if ( nmax > 0 ) then
  556.                               $I_L556_398 = 0
  556.                               do
  556.                                  $I_L556_178 = 0
  556. !dir$ ivdep
  556.                                  do
  556.                                     t$2445(1 + $I_L556_178, 1 + $I_L556_398) = phsoil(1 + $I_L556_178, 1 + $I_L556_398)
  556.                                     $I_L556_178 = 1 + $I_L556_178
  556.                                     if ( $I_L556_178 >= nmax ) exit
  556.                                  enddo
  556.                                  $I_L556_398 = 1 + $I_L556_398
  556.                                  if ( $I_L556_398 >= 3 ) exit
  556.                               enddo
  556.                            endif
  557.                            t$2448 = _zla( 0, nmax )
  557.                            t$2452 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  557.                            if ( nmax > 0 ) then
  557.                               $I_L557_400 = 0
  557.                               do
  557.                                  $I_L557_180 = 0
  557. !dir$ ivdep
  557.                                  do
  557.                                     t$2451(1 + $I_L557_180, 1 + $I_L557_400) = satcap(1 + $I_L557_180, 1 + $I_L557_400)
  557.                                     $I_L557_180 = 1 + $I_L557_180
  557.                                     if ( $I_L557_180 >= nmax ) exit
  557.                                  enddo
  557.                                  $I_L557_400 = 1 + $I_L557_400
  557.                                  if ( $I_L557_400 >= 2 ) exit
  557.                               enddo
  557.                            endif
  557.                            t$2454 = _zla( 0, nmax )
  557.                            t$2458 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  557.                            if ( nmax > 0 ) then
  557.                               $I_L557_402 = 0
  557.                               do
  557.                                  $I_L557_182 = 0
  557. !dir$ ivdep
  557.                                  do
  557.                                     t$2457(1 + $I_L557_182, 1 + $I_L557_402) = snow(1 + $I_L557_182, 1 + $I_L557_402)
  557.                                     $I_L557_182 = 1 + $I_L557_182
  557.                                     if ( $I_L557_182 >= nmax ) exit
  557.                                  enddo
  557.                                  $I_L557_402 = 1 + $I_L557_402
  557.                                  if ( $I_L557_402 >= 2 ) exit
  557.                               enddo
  557.                            endif
  558.                            t$2460 = _zla( 0, nmax )
  558.                            t$2464 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  558.                            if ( nmax > 0 ) then
  558.                               $I_L558_404 = 0
  558.                               do
  558.                                  $I_L558_184 = 0
  558. !dir$ ivdep
  558.                                  do
  558.                                     t$2463(1 + $I_L558_184, 1 + $I_L558_404) = stm(1 + $I_L558_184, 1 + $I_L558_404)
  558.                                     $I_L558_184 = 1 + $I_L558_184
  558.                                     if ( $I_L558_184 >= nmax ) exit
  558.                                  enddo
  558.                                  $I_L558_404 = 1 + $I_L558_404
  558.                                  if ( $I_L558_404 >= 2 ) exit
  558.                               enddo
  558.                            endif
  559.                            t$2466 = _zla( 0, nmax )
  559.                            t$2472 = int( _alloc( _zla( 0, 96 * _zla( 0, nmax ) ) ), 8 )
  559.                            if ( nmax > 0 ) then
  559.                               $I_L559_406 = 0
  559.                               do
  559.                                  $I_L559_186 = 0
  559. !dir$ ivdep
  559.                                  do
  559.                                     t$2471(1 + $I_L559_186, 1 + $I_L559_406, 1, 1) = extk(1 + $I_L559_186, 1 + $I_L559_406, 1, 1)
  559.                                     $I_L559_186 = 1 + $I_L559_186
  559.                                     if ( $I_L559_186 >= nmax ) exit
  559.                                  enddo
  559.                                  $I_L559_406 = 1 + $I_L559_406
  559.                                  if ( $I_L559_406 >= 12 ) exit
  559.                               enddo
  559.                            endif
  559.                            t$2474 = _zla( 0, nmax )
  559.                            t$2480 = int( _alloc( _zla( 0, 96 * _zla( 0, nmax ) ) ), 8 )
  559.                            if ( nmax > 0 ) then
  559.                               $I_L559_408 = 0
  559.                               do
  559.                                  $I_L559_188 = 0
  559. !dir$ ivdep
  559.                                  do
  559.                                     t$2479(1 + $I_L559_188, 1 + $I_L559_408, 1, 1) = radfac(1 + $I_L559_188, 1 + $I_L559_408, 1, 1)
  559.                                     $I_L559_188 = 1 + $I_L559_188
  559.                                     if ( $I_L559_188 >= nmax ) exit
  559.                                  enddo
  559.                                  $I_L559_408 = 1 + $I_L559_408
  559.                                  if ( $I_L559_408 >= 12 ) exit
  559.                               enddo
  559.                            endif
  561.                            t$2482 = _zla( 0, nmax )
  561.                            t$2486 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  561.                            if ( nmax > 0 ) then
  561.                               $I_L561_410 = 0
  561.                               do
  561.                                  $I_L561_190 = 0
  561. !dir$ ivdep
  561.                                  do
  561.                                     t$2485(1 + $I_L561_190, 1 + $I_L561_410) = capac(1 + $I_L561_190, 1 + $I_L561_410)
  561.                                     $I_L561_190 = 1 + $I_L561_190
  561.                                     if ( $I_L561_190 >= nmax ) exit
  561.                                  enddo
  561.                                  $I_L561_410 = 1 + $I_L561_410
  561.                                  if ( $I_L561_410 >= 2 ) exit
  561.                               enddo
  561.                            endif
  561.                            t$2488 = _zla( 0, nmax )
  561.                            t$2492 = int( _alloc( _zla( 0, 24 * _zla( 0, nmax ) ) ), 8 )
  561.                            if ( nmax > 0 ) then
  561.                               $I_L561_412 = 0
  561.                               do
  561.                                  $I_L561_192 = 0
  561. !dir$ ivdep
  561.                                  do
  561.                                     t$2491(1 + $I_L561_192, 1 + $I_L561_412) = w(1 + $I_L561_192, 1 + $I_L561_412)
  561.                                     $I_L561_192 = 1 + $I_L561_192
  561.                                     if ( $I_L561_192 >= nmax ) exit
  561.                                  enddo
  561.                                  $I_L561_412 = 1 + $I_L561_412
  561.                                  if ( $I_L561_412 >= 3 ) exit
  561.                               enddo
  561.                            endif
  563.                            t$2494 = _zla( 0, nmax )
  563.                            t$2499 = int( _alloc( _zla( 0, 48 * _zla( 0, nmax ) ) ), 8 )
  563.                            if ( nmax > 0 ) then
  563.                               $I_L563_414 = 0
  563.                               do
  563.                                  $I_L563_194 = 0
  563. !dir$ ivdep
  563.                                  do
  563.                                     t$2498(1 + $I_L563_194, 1 + $I_L563_414, 1) = radn(1 + $I_L563_194, 1 + $I_L563_414, 1)
  563.                                     $I_L563_194 = 1 + $I_L563_194
  563.                                     if ( $I_L563_194 >= nmax ) exit
  563.                                  enddo
  563.                                  $I_L563_414 = 1 + $I_L563_414
  563.                                  if ( $I_L563_414 >= 6 ) exit
  563.                               enddo
  563.                            endif
  565.                            t$2501 = _zla( 0, nmax )
  565.                            t$2505 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  565.                            if ( nmax > 0 ) then
  565.                               $I_L565_416 = 0
  565.                               do
  565.                                  $I_L565_196 = 0
  565. !dir$ ivdep
  565.                                  do
  565.                                     t$2504(1 + $I_L565_196, 1 + $I_L565_416) = zlt2(1 + $I_L565_196, 1 + $I_L565_416)
  565.                                     $I_L565_196 = 1 + $I_L565_196
  565.                                     if ( $I_L565_196 >= nmax ) exit
  565.                                  enddo
  565.                                  $I_L565_416 = 1 + $I_L565_416
  565.                                  if ( $I_L565_416 >= 2 ) exit
  565.                               enddo
  565.                            endif
  565.                            t$2507 = _zla( 0, nmax )
  565.                            t$2511 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  565.                            if ( nmax > 0 ) then
  565.                               $I_L565_418 = 0
  565.                               do
  565.                                  $I_L565_198 = 0
  565. !dir$ ivdep
  565.                                  do
  565.                                     t$2510(1 + $I_L565_198, 1 + $I_L565_418) = green2(1 + $I_L565_198, 1 + $I_L565_418)
  565.                                     $I_L565_198 = 1 + $I_L565_198
  565.                                     if ( $I_L565_198 >= nmax ) exit
  565.                                  enddo
  565.                                  $I_L565_418 = 1 + $I_L565_418
  565.                                  if ( $I_L565_418 >= 2 ) exit
  565.                               enddo
  565.                            endif
  565.                            t$2513 = _zla( 0, nmax )
  565.                            t$2517 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  565.                            if ( nmax > 0 ) then
  565.                               $I_L565_420 = 0
  565.                               do
  565.                                  $I_L565_200 = 0
  565. !dir$ ivdep
  565.                                  do
  565.                                     t$2516(1 + $I_L565_200, 1 + $I_L565_420) = chil2(1 + $I_L565_200, 1 + $I_L565_420)
  565.                                     $I_L565_200 = 1 + $I_L565_200
  565.                                     if ( $I_L565_200 >= nmax ) exit
  565.                                  enddo
  565.                                  $I_L565_420 = 1 + $I_L565_420
  565.                                  if ( $I_L565_420 >= 2 ) exit
  565.                               enddo
  565.                            endif
  566.                            t$2519 = _zla( 0, nmax )
  566.                            t$2524 = int( _alloc( _zla( 0, 48 * _zla( 0, nmax ) ) ), 8 )
  566.                            if ( nmax > 0 ) then
  566.                               $I_L566_422 = 0
  566.                               do
  566.                                  $I_L566_202 = 0
  566. !dir$ ivdep
  566.                                  do
  566.                                     t$2523(1 + $I_L566_202, 1 + $I_L566_422, 1) = rstpar2(1 + $I_L566_202, 1 + $I_L566_422, 1)
  566.                                     $I_L566_202 = 1 + $I_L566_202
  566.                                     if ( $I_L566_202 >= nmax ) exit
  566.                                  enddo
  566.                                  $I_L566_422 = 1 + $I_L566_422
  566.                                  if ( $I_L566_422 >= 6 ) exit
  566.                               enddo
  566.                            endif
  566.                            t$2526 = _zla( 0, nmax )
  566.                            t$2530 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  566.                            if ( nmax > 0 ) then
  566.                               $I_L566_424 = 0
  566.                               do
  566.                                  $I_L566_204 = 0
  566. !dir$ ivdep
  566.                                  do
  566.                                     t$2529(1 + $I_L566_204, 1 + $I_L566_424) = topt2(1 + $I_L566_204, 1 + $I_L566_424)
  566.                                     $I_L566_204 = 1 + $I_L566_204
  566.                                     if ( $I_L566_204 >= nmax ) exit
  566.                                  enddo
  566.                                  $I_L566_424 = 1 + $I_L566_424
  566.                                  if ( $I_L566_424 >= 2 ) exit
  566.                               enddo
  566.                            endif
  566.                            t$2532 = _zla( 0, nmax )
  566.                            t$2536 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  566.                            if ( nmax > 0 ) then
  566.                               $I_L566_426 = 0
  566.                               do
  566.                                  $I_L566_206 = 0
  566. !dir$ ivdep
  566.                                  do
  566.                                     t$2535(1 + $I_L566_206, 1 + $I_L566_426) = tll2(1 + $I_L566_206, 1 + $I_L566_426)
  566.                                     $I_L566_206 = 1 + $I_L566_206
  566.                                     if ( $I_L566_206 >= nmax ) exit
  566.                                  enddo
  566.                                  $I_L566_426 = 1 + $I_L566_426
  566.                                  if ( $I_L566_426 >= 2 ) exit
  566.                               enddo
  566.                            endif
  566.                            t$2538 = _zla( 0, nmax )
  566.                            t$2542 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  566.                            if ( nmax > 0 ) then
  566.                               $I_L566_428 = 0
  566.                               do
  566.                                  $I_L566_208 = 0
  566. !dir$ ivdep
  566.                                  do
  566.                                     t$2541(1 + $I_L566_208, 1 + $I_L566_428) = tu2(1 + $I_L566_208, 1 + $I_L566_428)
  566.                                     $I_L566_208 = 1 + $I_L566_208
  566.                                     if ( $I_L566_208 >= nmax ) exit
  566.                                  enddo
  566.                                  $I_L566_428 = 1 + $I_L566_428
  566.                                  if ( $I_L566_428 >= 2 ) exit
  566.                               enddo
  566.                            endif
  567.                            t$2544 = _zla( 0, nmax )
  567.                            t$2548 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  567.                            if ( nmax > 0 ) then
  567.                               $I_L567_430 = 0
  567.                               do
  567.                                  $I_L567_210 = 0
  567. !dir$ ivdep
  567.                                  do
  567.                                     t$2547(1 + $I_L567_210, 1 + $I_L567_430) = defac2(1 + $I_L567_210, 1 + $I_L567_430)
  567.                                     $I_L567_210 = 1 + $I_L567_210
  567.                                     if ( $I_L567_210 >= nmax ) exit
  567.                                  enddo
  567.                                  $I_L567_430 = 1 + $I_L567_430
  567.                                  if ( $I_L567_430 >= 2 ) exit
  567.                               enddo
  567.                            endif
  567.                            t$2550 = _zla( 0, nmax )
  567.                            t$2554 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  567.                            if ( nmax > 0 ) then
  567.                               $I_L567_432 = 0
  567.                               do
  567.                                  $I_L567_212 = 0
  567. !dir$ ivdep
  567.                                  do
  567.                                     t$2553(1 + $I_L567_212, 1 + $I_L567_432) = ph12(1 + $I_L567_212, 1 + $I_L567_432)
  567.                                     $I_L567_212 = 1 + $I_L567_212
  567.                                     if ( $I_L567_212 >= nmax ) exit
  567.                                  enddo
  567.                                  $I_L567_432 = 1 + $I_L567_432
  567.                                  if ( $I_L567_432 >= 2 ) exit
  567.                               enddo
  567.                            endif
  567.                            t$2556 = _zla( 0, nmax )
  567.                            t$2560 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  567.                            if ( nmax > 0 ) then
  567.                               $I_L567_434 = 0
  567.                               do
  567.                                  $I_L567_214 = 0
  567. !dir$ ivdep
  567.                                  do
  567.                                     t$2559(1 + $I_L567_214, 1 + $I_L567_434) = ph22(1 + $I_L567_214, 1 + $I_L567_434)
  567.                                     $I_L567_214 = 1 + $I_L567_214
  567.                                     if ( $I_L567_214 >= nmax ) exit
  567.                                  enddo
  567.                                  $I_L567_434 = 1 + $I_L567_434
  567.                                  if ( $I_L567_434 >= 2 ) exit
  567.                               enddo
  567.                            endif
  538.                            call fysiks( t$2391(1, 1), z0x(1), d(1), rdc(1), rbc(1), z0(1), jdt, latitu, bps(1), psb(1), dzm(1), em(1), t$2397(1, 1), t$2403(1, 1), t$2409(1, 1), cu(1), cuni(1), ctni(1), ustar(1), cosz(1), sinclt(1), rhoair(1), psy(1), rcp(1), wc(1), wg(1), fc(1), fg(1), hr(1), ect(1), eci(1), egt(1), egi(1), egs(1), ec(1), eg(1), hc(1), hg(1), ecidif(1), egidif(1), ecmass(1), egmass(1), etmass(1), hflux(1), chf(1), shf(1), fluxef(1), roff(1), drag(1), ra(1), rb(1), rd(1), rc(1), rg(1), tcta(1), tgta(1), ta(1), ea(1), etc(1), etg(1), btc(1), btg(1), u2(1), t$2415(1, 1), t$2421(1, 1), t$2427(1, 1), t$2433(1, 1), rsoil(1), t$2439(1, 1), hrr(1), t$2445(1, 1), cc(1), cg(1), t$2451(1, 1), t$2457(1, 1), dtc(1), dtg(1), dtm(1), dqm(1), t$2463(1, 1), t$2471(1, 1, 1, 1), t$2479(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), tc(1), tg(1), td(1), t$2485(1, 1), t$2491(1, 1), qm(1), tm(1), um(1), vm(1), psur(1), ppc(1), ppl(1), t$2498(1, 1, 1), itype(1), dtc3x, mon(1), nmax, nmax, t$2504(1, 1), t$2510(1, 1), t$2516(1, 1), t$2523(1, 1, 1), t$2529(1, 1), t$2535(1, 1), t$2541(1, 1), t$2547(1, 1), t$2553(1, 1), t$2559(1, 1) )
  567.                            _free( t$2560 )
  567.                            _free( t$2554 )
  567.                            _free( t$2548 )
  566.                            _free( t$2542 )
  566.                            _free( t$2536 )
  566.                            _free( t$2530 )
  566.                            _free( t$2524 )
  565.                            _free( t$2517 )
  565.                            _free( t$2511 )
  565.                            _free( t$2505 )
  563.                            _free( t$2499 )
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_436 = 0
  538.                               do
  538.                                  $I_L538_216 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     w(1 + $I_L538_216, 1 + $I_L538_436) = t$2491(1 + $I_L538_216, 1 + $I_L538_436)
  538.                                     $I_L538_216 = 1 + $I_L538_216
  538.                                     if ( $I_L538_216 >= nmax ) exit
  538.                                  enddo
  538.                                  $I_L538_436 = 1 + $I_L538_436
  538.                                  if ( $I_L538_436 >= 3 ) exit
  538.                               enddo
  538.                            endif
  561.                            _free( t$2492 )
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_438 = 0
  538.                               do
  538.                                  $I_L538_218 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     capac(1 + $I_L538_218, 1 + $I_L538_438) = t$2485(1 + $I_L538_218, 1 + $I_L538_438)
  538.                                     $I_L538_218 = 1 + $I_L538_218
  538.                                     if ( $I_L538_218 >= nmax ) exit
  538.                                  enddo
  538.                                  $I_L538_438 = 1 + $I_L538_438
  538.                                  if ( $I_L538_438 >= 2 ) exit
  538.                               enddo
  538.                            endif
  561.                            _free( t$2486 )
  559.                            _free( t$2480 )
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_440 = 0
  538.                               do
  538.                                  $I_L538_220 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     extk(1 + $I_L538_220, 1 + $I_L538_440, 1, 1) = t$2471(1 + $I_L538_220, 1 + $I_L538_440, 1, 1)
  538.                                     $I_L538_220 = 1 + $I_L538_220
  538.                                     if ( $I_L538_220 >= nmax ) exit
  538.                                  enddo
  538.                                  $I_L538_440 = 1 + $I_L538_440
  538.                                  if ( $I_L538_440 >= 12 ) exit
  538.                               enddo
  538.                            endif
  559.                            _free( t$2472 )
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_442 = 0
  538.                               do
  538.                                  $I_L538_222 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     stm(1 + $I_L538_222, 1 + $I_L538_442) = t$2463(1 + $I_L538_222, 1 + $I_L538_442)
  538.                                     $I_L538_222 = 1 + $I_L538_222
  538.                                     if ( $I_L538_222 >= nmax ) exit
  538.                                  enddo
  538.                                  $I_L538_442 = 1 + $I_L538_442
  538.                                  if ( $I_L538_442 >= 2 ) exit
  538.                               enddo
  538.                            endif
  558.                            _free( t$2464 )
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_444 = 0
  538.                               do
  538.                                  $I_L538_224 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     snow(1 + $I_L538_224, 1 + $I_L538_444) = t$2457(1 + $I_L538_224, 1 + $I_L538_444)
  538.                                     $I_L538_224 = 1 + $I_L538_224
  538.                                     if ( $I_L538_224 >= nmax ) exit
  538.                                  enddo
  538.                                  $I_L538_444 = 1 + $I_L538_444
  538.                                  if ( $I_L538_444 >= 2 ) exit
  538.                               enddo
  538.                            endif
  557.                            _free( t$2458 )
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_446 = 0
  538.                               do
  538.                                  $I_L538_226 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     satcap(1 + $I_L538_226, 1 + $I_L538_446) = t$2451(1 + $I_L538_226, 1 + $I_L538_446)
  538.                                     $I_L538_226 = 1 + $I_L538_226
  538.                                     if ( $I_L538_226 >= nmax ) exit
  538.                                  enddo
  538.                                  $I_L538_446 = 1 + $I_L538_446
  538.                                  if ( $I_L538_446 >= 2 ) exit
  538.                               enddo
  538.                            endif
  557.                            _free( t$2452 )
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_448 = 0
  538.                               do
  538.                                  $I_L538_228 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     phsoil(1 + $I_L538_228, 1 + $I_L538_448) = t$2445(1 + $I_L538_228, 1 + $I_L538_448)
  538.                                     $I_L538_228 = 1 + $I_L538_228
  538.                                     if ( $I_L538_228 >= nmax ) exit
  538.                                  enddo
  538.                                  $I_L538_448 = 1 + $I_L538_448
  538.                                  if ( $I_L538_448 >= 3 ) exit
  538.                               enddo
  538.                            endif
  556.                            _free( t$2446 )
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_450 = 0
  538.                               do
  538.                                  $I_L538_230 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     phroot(1 + $I_L538_230, 1 + $I_L538_450) = t$2439(1 + $I_L538_230, 1 + $I_L538_450)
  538.                                     $I_L538_230 = 1 + $I_L538_230
  538.                                     if ( $I_L538_230 >= nmax ) exit
  538.                                  enddo
  538.                                  $I_L538_450 = 1 + $I_L538_450
  538.                                  if ( $I_L538_450 >= 2 ) exit
  538.                               enddo
  538.                            endif
  556.                            _free( t$2440 )
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_452 = 0
  538.                               do
  538.                                  $I_L538_232 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     rst(1 + $I_L538_232, 1 + $I_L538_452) = t$2433(1 + $I_L538_232, 1 + $I_L538_452)
  538.                                     $I_L538_232 = 1 + $I_L538_232
  538.                                     if ( $I_L538_232 >= nmax ) exit
  538.                                  enddo
  538.                                  $I_L538_452 = 1 + $I_L538_452
  538.                                  if ( $I_L538_452 >= 2 ) exit
  538.                               enddo
  538.                            endif
  555.                            _free( t$2434 )
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_454 = 0
  538.                               do
  538.                                  $I_L538_234 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     pd(1 + $I_L538_234, 1 + $I_L538_454) = t$2427(1 + $I_L538_234, 1 + $I_L538_454)
  538.                                     $I_L538_234 = 1 + $I_L538_234
  538.                                     if ( $I_L538_234 >= nmax ) exit
  538.                                  enddo
  538.                                  $I_L538_454 = 1 + $I_L538_454
  538.                                  if ( $I_L538_454 >= 2 ) exit
  538.                               enddo
  538.                            endif
  555.                            _free( t$2428 )
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_456 = 0
  538.                               do
  538.                                  $I_L538_236 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     par(1 + $I_L538_236, 1 + $I_L538_456) = t$2421(1 + $I_L538_236, 1 + $I_L538_456)
  538.                                     $I_L538_236 = 1 + $I_L538_236
  538.                                     if ( $I_L538_236 >= nmax ) exit
  538.                                  enddo
  538.                                  $I_L538_456 = 1 + $I_L538_456
  538.                                  if ( $I_L538_456 >= 2 ) exit
  538.                               enddo
  538.                            endif
  555.                            _free( t$2422 )
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_458 = 0
  538.                               do
  538.                                  $I_L538_238 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     radt(1 + $I_L538_238, 1 + $I_L538_458) = t$2415(1 + $I_L538_238, 1 + $I_L538_458)
  538.                                     $I_L538_238 = 1 + $I_L538_238
  538.                                     if ( $I_L538_238 >= nmax ) exit
  538.                                  enddo
  538.                                  $I_L538_458 = 1 + $I_L538_458
  538.                                  if ( $I_L538_458 >= 2 ) exit
  538.                               enddo
  538.                            endif
  554.                            _free( t$2416 )
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_460 = 0
  538.                               do
  538.                                  $I_L538_240 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     gmu(1 + $I_L538_240, 1 + $I_L538_460) = t$2409(1 + $I_L538_240, 1 + $I_L538_460)
  538.                                     $I_L538_240 = 1 + $I_L538_240
  538.                                     if ( $I_L538_240 >= nmax ) exit
  538.                                  enddo
  538.                                  $I_L538_460 = 1 + $I_L538_460
  538.                                  if ( $I_L538_460 >= 4 ) exit
  538.                               enddo
  538.                            endif
  542.                            _free( t$2410 )
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_462 = 0
  538.                               do
  538.                                  $I_L538_242 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     gmq(1 + $I_L538_242, 1 + $I_L538_462) = t$2403(1 + $I_L538_242, 1 + $I_L538_462)
  538.                                     $I_L538_242 = 1 + $I_L538_242
  538.                                     if ( $I_L538_242 >= nmax ) exit
  538.                                  enddo
  538.                                  $I_L538_462 = 1 + $I_L538_462
  538.                                  if ( $I_L538_462 >= 3 ) exit
  538.                               enddo
  538.                            endif
  542.                            _free( t$2404 )
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_464 = 0
  538.                               do
  538.                                  $I_L538_244 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     gmt(1 + $I_L538_244, 1 + $I_L538_464) = t$2397(1 + $I_L538_244, 1 + $I_L538_464)
  538.                                     $I_L538_244 = 1 + $I_L538_244
  538.                                     if ( $I_L538_244 >= nmax ) exit
  538.                                  enddo
  538.                                  $I_L538_464 = 1 + $I_L538_464
  538.                                  if ( $I_L538_464 >= 3 ) exit
  538.                               enddo
  538.                            endif
  542.                            _free( t$2398 )
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_466 = 0
  538.                               do
  538.                                  $I_L538_246 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     vcover(1 + $I_L538_246, 1 + $I_L538_466) = t$2391(1 + $I_L538_246, 1 + $I_L538_466)
  538.                                     $I_L538_246 = 1 + $I_L538_246
  538.                                     if ( $I_L538_246 >= nmax ) exit
  538.                                  enddo
  538.                                  $I_L538_466 = 1 + $I_L538_466
  538.                                  if ( $I_L538_466 >= 2 ) exit
  538.                               enddo
  538.                            endif
  539.                            _free( t$2392 )
  568.                            $ncount_S10 = 0
  569.                            if ( ncols > 0 ) then
  569.                               $I_L569_118 = 0
  569. !dir$ ivdep
  569.                               do
  570.                                  if ( imask(1 + $I_L569_118) > 0 ) then
  571.                                     $ncount_S10 = 1 + $ncount_S10
  572.                                     tm($ncount_S10) = gt(1 + $I_L569_118, 1)
  573.                                     qm($ncount_S10) = gq(1 + $I_L569_118, 1)
  574.                                     gmt($ncount_S10, 1) = tmtx(1 + $I_L569_118, 1, 1)
  575.                                     gmt($ncount_S10, 2) = tmtx(1 + $I_L569_118, 1, 2)
  576.                                     gmt($ncount_S10, 3) = tmtx(1 + $I_L569_118, 1, 3)
  577.                                     gmq($ncount_S10, 1) = qmtx(1 + $I_L569_118, 1, 1)
  578.                                     gmq($ncount_S10, 2) = qmtx(1 + $I_L569_118, 1, 2)
  579.                                     gmq($ncount_S10, 3) = qmtx(1 + $I_L569_118, 1, 3)
  580.                                     gmu($ncount_S10, 1) = umtx(1 + $I_L569_118, 1, 1)
  581.                                     gmu($ncount_S10, 2) = umtx(1 + $I_L569_118, 1, 2)
  582.                                     gmu($ncount_S10, 3) = umtx(1 + $I_L569_118, 1, 3)
  583.                                     gmu($ncount_S10, 4) = umtx(1 + $I_L569_118, 1, 4)
  583.                                  endif
  585.                                  $I_L569_118 = 1 + $I_L569_118
  584.                                  if ( $I_L569_118 >= ncols ) exit
  584.                               enddo
  584.                            endif
  586.                            $I_L529_572 = 1 + $I_L529_572
  585.                            if ( $I_L529_572 >= $intsib_S8 ) exit
  585.                         enddo
  585.                      endif
  587.                      if ( nmax > 0 ) then
  595.                         if ( $I_L496_574 == 0 ) then
  587.                            $I_L587_120 = 0
  587. !dir$ ivdep
  587.                            do
  588.                               capac(1 + $I_L587_120, 1) = capacm(1 + $I_L587_120, 1)
  589.                               capac(1 + $I_L587_120, 2) = capacm(1 + $I_L587_120, 2)
  590.                               w(1 + $I_L587_120, 1) = wm(1 + $I_L587_120, 1)
  591.                               w(1 + $I_L587_120, 2) = wm(1 + $I_L587_120, 2)
  592.                               w(1 + $I_L587_120, 3) = wm(1 + $I_L587_120, 3)
  593.                               td(1 + $I_L587_120) = tdm(1 + $I_L587_120)
  594.                               tc(1 + $I_L587_120) = tcm(1 + $I_L587_120)
  596.                               tmin(1 + $I_L587_120) = tg(1 + $I_L587_120)
  600.                               tg(1 + $I_L587_120) = tgm(1 + $I_L587_120)
  601.                               $I_L587_120 = 1 + $I_L587_120
  599.                               if ( $I_L587_120 >= nmax ) exit
  599.                            enddo
  599.                         else
  587.                            $I_L587_140 = 0
  587. !dir$ ivdep
  587.                            do
  588.                               capac(1 + $I_L587_140, 1) = capacm(1 + $I_L587_140, 1)
  589.                               capac(1 + $I_L587_140, 2) = capacm(1 + $I_L587_140, 2)
  590.                               w(1 + $I_L587_140, 1) = wm(1 + $I_L587_140, 1)
  591.                               w(1 + $I_L587_140, 2) = wm(1 + $I_L587_140, 2)
  592.                               w(1 + $I_L587_140, 3) = wm(1 + $I_L587_140, 3)
  593.                               td(1 + $I_L587_140) = tdm(1 + $I_L587_140)
  594.                               tc(1 + $I_L587_140) = tcm(1 + $I_L587_140)
  598.                               tmax(1 + $I_L587_140) = tg(1 + $I_L587_140)
  600.                               tg(1 + $I_L587_140) = tgm(1 + $I_L587_140)
  601.                               $I_L587_140 = 1 + $I_L587_140
  599.                               if ( $I_L587_140 >= nmax ) exit
  599.                            enddo
  599.                         endif
  599.                      endif
  602.                      $I_L496_574 = 1 + $I_L496_574
  601.                      if ( $I_L496_574 >= $nint_S4 ) exit
  601.                   enddo
  601.                endif
  603.                if ( nmax > 0 ) then
  603.                   $I_L603_122 = 0
  603. !dir$ ivdep
  603.                   do
  604.                      $td_WR0_R0 = 1.0000000000000001e-1 * tdm(1 + $I_L603_122) + 4.5000000000000001e-1 * ( tmax(1 + $I_L603_122) + tmin(1 + $I_L603_122) )
  604.                      td(1 + $I_L603_122) = $td_WR0_R0
  605.                      tdm(1 + $I_L603_122) = $td_WR0_R0
  606.                      td0(1 + $I_L603_122) = $td_WR0_R0
  607.                      $I_L603_122 = 1 + $I_L603_122
  603.                      if ( $I_L603_122 >= nmax ) exit
  603.                   enddo
  603.                endif
  611.                $ncount_S15 = 0
  612.                if ( ncols > 0 ) then
  612.                   $I_L612_124 = 0
  612. !dir$ ivdep
  612.                   do
  613.                      if ( imask(1 + $I_L612_124) > 0 ) then
  614.                         $ncount_S15 = 1 + $ncount_S15
  615.                         cosz($ncount_S15) = zenith(1 + $I_L612_124)
  615.                      endif
  617.                      $I_L612_124 = 1 + $I_L612_124
  616.                      if ( $I_L612_124 >= ncols ) exit
  616.                   enddo
  616.                endif
  618.                if ( nmax > 0 ) then
  618.                   $I_L618_126 = 0
  618. !dir$ ivdep
  618.                   do
  619.                      if ( cosz(1 + $I_L618_126) < 0.0 ) then
  620.                         tgm(1 + $I_L618_126) = tmin(1 + $I_L618_126)
  621.                         tg0(1 + $I_L618_126) = tmin(1 + $I_L618_126)
  621.                      endif
  623.                      $I_L618_126 = 1 + $I_L618_126
  622.                      if ( $I_L618_126 >= nmax ) exit
  622.                   enddo
  622.                endif
  626.                t$2577 = _zla( 0, nmax )
  626.                t$2581 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  626.                if ( nmax > 0 ) then
  626.                   $I_L626_468 = 0
  626.                   do
  626.                      $I_L626_248 = 0
  626. !dir$ ivdep
  626.                      do
  626.                         t$2580(1 + $I_L626_248, 1 + $I_L626_468) = capac(1 + $I_L626_248, 1 + $I_L626_468)
  626.                         $I_L626_248 = 1 + $I_L626_248
  626.                         if ( $I_L626_248 >= nmax ) exit
  626.                      enddo
  626.                      $I_L626_468 = 1 + $I_L626_468
  626.                      if ( $I_L626_468 >= 2 ) exit
  626.                   enddo
  626.                endif
  627.                t$2583 = _zla( 0, nmax )
  627.                t$2587 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  627.                if ( nmax > 0 ) then
  627.                   $I_L627_470 = 0
  627.                   do
  627.                      $I_L627_250 = 0
  627. !dir$ ivdep
  627.                      do
  627.                         t$2586(1 + $I_L627_250, 1 + $I_L627_470) = satcap(1 + $I_L627_250, 1 + $I_L627_470)
  627.                         $I_L627_250 = 1 + $I_L627_250
  627.                         if ( $I_L627_250 >= nmax ) exit
  627.                      enddo
  627.                      $I_L627_470 = 1 + $I_L627_470
  627.                      if ( $I_L627_470 >= 2 ) exit
  627.                   enddo
  627.                endif
  627.                t$2589 = _zla( 0, nmax )
  627.                t$2595 = int( _alloc( _zla( 0, 96 * _zla( 0, nmax ) ) ), 8 )
  627.                if ( nmax > 0 ) then
  627.                   $I_L627_472 = 0
  627.                   do
  627.                      $I_L627_252 = 0
  627. !dir$ ivdep
  627.                      do
  627.                         t$2594(1 + $I_L627_252, 1 + $I_L627_472, 1, 1) = extk(1 + $I_L627_252, 1 + $I_L627_472, 1, 1)
  627.                         $I_L627_252 = 1 + $I_L627_252
  627.                         if ( $I_L627_252 >= nmax ) exit
  627.                      enddo
  627.                      $I_L627_472 = 1 + $I_L627_472
  627.                      if ( $I_L627_472 >= 12 ) exit
  627.                   enddo
  627.                endif
  627.                t$2597 = _zla( 0, nmax )
  627.                t$2603 = int( _alloc( _zla( 0, 96 * _zla( 0, nmax ) ) ), 8 )
  627.                if ( nmax > 0 ) then
  627.                   $I_L627_474 = 0
  627.                   do
  627.                      $I_L627_254 = 0
  627. !dir$ ivdep
  627.                      do
  627.                         t$2602(1 + $I_L627_254, 1 + $I_L627_474, 1, 1) = radfac(1 + $I_L627_254, 1 + $I_L627_474, 1, 1)
  627.                         $I_L627_254 = 1 + $I_L627_254
  627.                         if ( $I_L627_254 >= nmax ) exit
  627.                      enddo
  627.                      $I_L627_474 = 1 + $I_L627_474
  627.                      if ( $I_L627_474 >= 12 ) exit
  627.                   enddo
  627.                endif
  629.                t$2605 = _zla( 0, nmax )
  629.                t$2610 = int( _alloc( _zla( 0, 32 * _zla( 0, nmax ) ) ), 8 )
  629.                if ( nmax > 0 ) then
  629.                   $I_L629_476 = 0
  629.                   do
  629.                      $I_L629_256 = 0
  629. !dir$ ivdep
  629.                      do
  629.                         t$2609(1 + $I_L629_256, 1 + $I_L629_476, 1) = salb(1 + $I_L629_256, 1 + $I_L629_476, 1)
  629.                         $I_L629_256 = 1 + $I_L629_256
  629.                         if ( $I_L629_256 >= nmax ) exit
  629.                      enddo
  629.                      $I_L629_476 = 1 + $I_L629_476
  629.                      if ( $I_L629_476 >= 4 ) exit
  629.                   enddo
  629.                endif
  624.                call radalb( nmax, mon(1), nmax, itype(1), tc(1), tg(1), t$2580(1, 1), t$2586(1, 1), t$2594(1, 1, 1, 1), t$2602(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), zlwup(1), t$2609(1, 1, 1), tgeff(1), cosz(1), nsx(1), latitu )
  624.                if ( nmax > 0 ) then
  624.                   $I_L624_478 = 0
  624.                   do
  624.                      $I_L624_258 = 0
  624. !dir$ ivdep
  624.                      do
  624.                         salb(1 + $I_L624_258, 1 + $I_L624_478, 1) = t$2609(1 + $I_L624_258, 1 + $I_L624_478, 1)
  624.                         $I_L624_258 = 1 + $I_L624_258
  624.                         if ( $I_L624_258 >= nmax ) exit
  624.                      enddo
  624.                      $I_L624_478 = 1 + $I_L624_478
  624.                      if ( $I_L624_478 >= 4 ) exit
  624.                   enddo
  624.                endif
  629.                _free( t$2610 )
  624.                if ( nmax > 0 ) then
  624.                   $I_L624_480 = 0
  624.                   do
  624.                      $I_L624_260 = 0
  624. !dir$ ivdep
  624.                      do
  624.                         radfac(1 + $I_L624_260, 1 + $I_L624_480, 1, 1) = t$2602(1 + $I_L624_260, 1 + $I_L624_480, 1, 1)
  624.                         $I_L624_260 = 1 + $I_L624_260
  624.                         if ( $I_L624_260 >= nmax ) exit
  624.                      enddo
  624.                      $I_L624_480 = 1 + $I_L624_480
  624.                      if ( $I_L624_480 >= 12 ) exit
  624.                   enddo
  624.                endif
  627.                _free( t$2603 )
  624.                if ( nmax > 0 ) then
  624.                   $I_L624_482 = 0
  624.                   do
  624.                      $I_L624_262 = 0
  624. !dir$ ivdep
  624.                      do
  624.                         extk(1 + $I_L624_262, 1 + $I_L624_482, 1, 1) = t$2594(1 + $I_L624_262, 1 + $I_L624_482, 1, 1)
  624.                         $I_L624_262 = 1 + $I_L624_262
  624.                         if ( $I_L624_262 >= nmax ) exit
  624.                      enddo
  624.                      $I_L624_482 = 1 + $I_L624_482
  624.                      if ( $I_L624_482 >= 12 ) exit
  624.                   enddo
  624.                endif
  627.                _free( t$2595 )
  624.                if ( nmax > 0 ) then
  624.                   $I_L624_484 = 0
  624.                   do
  624.                      $I_L624_264 = 0
  624. !dir$ ivdep
  624.                      do
  624.                         satcap(1 + $I_L624_264, 1 + $I_L624_484) = t$2586(1 + $I_L624_264, 1 + $I_L624_484)
  624.                         $I_L624_264 = 1 + $I_L624_264
  624.                         if ( $I_L624_264 >= nmax ) exit
  624.                      enddo
  624.                      $I_L624_484 = 1 + $I_L624_484
  624.                      if ( $I_L624_484 >= 2 ) exit
  624.                   enddo
  624.                endif
  627.                _free( t$2587 )
  626.                _free( t$2581 )
  626.             endif
  626.          endif
  626.       endif
  633.       if ( nmax > 0 ) then
  634.          $ncount_S18 = 0
  635.          if ( ncols > 0 ) then
  635.             $I_L635_128 = 0
  635. !dir$ ivdep
  635.             do
  636.                if ( imask(1 + $I_L635_128) > 0 ) then
  637.                   $ncount_S18 = 1 + $ncount_S18
  641.                   if ( cosz($ncount_S18) >= 1.746e-2 ) then
  642.                      radn($ncount_S18, 1, 1) = xvisb(1 + $I_L635_128)
  643.                      radn($ncount_S18, 1, 2) = xvisd(1 + $I_L635_128)
  644.                      radn($ncount_S18, 2, 1) = xnirb(1 + $I_L635_128)
  645.                      radn($ncount_S18, 2, 2) = xnird(1 + $I_L635_128)
  645.                   else
  647.                      radn($ncount_S18, 1, 1) = 0.0
  648.                      radn($ncount_S18, 1, 2) = 0.0
  649.                      radn($ncount_S18, 2, 1) = 0.0
  650.                      radn($ncount_S18, 2, 2) = 0.0
  650.                   endif
  652.                   radn($ncount_S18, 3, 1) = 0.0
  653.                   radn($ncount_S18, 3, 2) = dlwbot(1 + $I_L635_128)
  657.                   ppl($ncount_S18) = ppli(1 + $I_L635_128)
  658.                   ppc($ncount_S18) = ppci(1 + $I_L635_128)
  658.                endif
  660.                $I_L635_128 = 1 + $I_L635_128
  659.                if ( $I_L635_128 >= ncols ) exit
  659.             enddo
  659.          endif
  662.          t$2615 = _zla( 0, nmax )
  662.          t$2619 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  662.          $I_L662_486 = 0
  662.          do
  662.             $I_L662_266 = 0
  662. !dir$ ivdep
  662.             do
  662.                t$2618(1 + $I_L662_266, 1 + $I_L662_486) = vcover(1 + $I_L662_266, 1 + $I_L662_486)
  662.                $I_L662_266 = 1 + $I_L662_266
  662.                if ( $I_L662_266 >= nmax ) exit
  662.             enddo
  662.             $I_L662_486 = 1 + $I_L662_486
  662.             if ( $I_L662_486 >= 2 ) exit
  662.          enddo
  665.          t$2621 = _zla( 0, nmax )
  665.          t$2625 = int( _alloc( _zla( 0, 24 * _zla( 0, nmax ) ) ), 8 )
  665.          $I_L665_488 = 0
  665.          do
  665.             $I_L665_268 = 0
  665. !dir$ ivdep
  665.             do
  665.                t$2624(1 + $I_L665_268, 1 + $I_L665_488) = gmt(1 + $I_L665_268, 1 + $I_L665_488)
  665.                $I_L665_268 = 1 + $I_L665_268
  665.                if ( $I_L665_268 >= nmax ) exit
  665.             enddo
  665.             $I_L665_488 = 1 + $I_L665_488
  665.             if ( $I_L665_488 >= 3 ) exit
  665.          enddo
  665.          t$2627 = _zla( 0, nmax )
  665.          t$2631 = int( _alloc( _zla( 0, 24 * _zla( 0, nmax ) ) ), 8 )
  665.          $I_L665_490 = 0
  665.          do
  665.             $I_L665_270 = 0
  665. !dir$ ivdep
  665.             do
  665.                t$2630(1 + $I_L665_270, 1 + $I_L665_490) = gmq(1 + $I_L665_270, 1 + $I_L665_490)
  665.                $I_L665_270 = 1 + $I_L665_270
  665.                if ( $I_L665_270 >= nmax ) exit
  665.             enddo
  665.             $I_L665_490 = 1 + $I_L665_490
  665.             if ( $I_L665_490 >= 3 ) exit
  665.          enddo
  665.          t$2633 = _zla( 0, nmax )
  665.          t$2637 = int( _alloc( _zla( 0, 32 * _zla( 0, nmax ) ) ), 8 )
  665.          $I_L665_492 = 0
  665.          do
  665.             $I_L665_272 = 0
  665. !dir$ ivdep
  665.             do
  665.                t$2636(1 + $I_L665_272, 1 + $I_L665_492) = gmu(1 + $I_L665_272, 1 + $I_L665_492)
  665.                $I_L665_272 = 1 + $I_L665_272
  665.                if ( $I_L665_272 >= nmax ) exit
  665.             enddo
  665.             $I_L665_492 = 1 + $I_L665_492
  665.             if ( $I_L665_492 >= 4 ) exit
  665.          enddo
  677.          t$2639 = _zla( 0, nmax )
  677.          t$2643 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  677.          $I_L677_494 = 0
  677.          do
  677.             $I_L677_274 = 0
  677. !dir$ ivdep
  677.             do
  677.                t$2642(1 + $I_L677_274, 1 + $I_L677_494) = radt(1 + $I_L677_274, 1 + $I_L677_494)
  677.                $I_L677_274 = 1 + $I_L677_274
  677.                if ( $I_L677_274 >= nmax ) exit
  677.             enddo
  677.             $I_L677_494 = 1 + $I_L677_494
  677.             if ( $I_L677_494 >= 2 ) exit
  677.          enddo
  678.          t$2645 = _zla( 0, nmax )
  678.          t$2649 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  678.          $I_L678_496 = 0
  678.          do
  678.             $I_L678_276 = 0
  678. !dir$ ivdep
  678.             do
  678.                t$2648(1 + $I_L678_276, 1 + $I_L678_496) = par(1 + $I_L678_276, 1 + $I_L678_496)
  678.                $I_L678_276 = 1 + $I_L678_276
  678.                if ( $I_L678_276 >= nmax ) exit
  678.             enddo
  678.             $I_L678_496 = 1 + $I_L678_496
  678.             if ( $I_L678_496 >= 2 ) exit
  678.          enddo
  678.          t$2651 = _zla( 0, nmax )
  678.          t$2655 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  678.          $I_L678_498 = 0
  678.          do
  678.             $I_L678_278 = 0
  678. !dir$ ivdep
  678.             do
  678.                t$2654(1 + $I_L678_278, 1 + $I_L678_498) = pd(1 + $I_L678_278, 1 + $I_L678_498)
  678.                $I_L678_278 = 1 + $I_L678_278
  678.                if ( $I_L678_278 >= nmax ) exit
  678.             enddo
  678.             $I_L678_498 = 1 + $I_L678_498
  678.             if ( $I_L678_498 >= 2 ) exit
  678.          enddo
  678.          t$2657 = _zla( 0, nmax )
  678.          t$2661 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  678.          $I_L678_500 = 0
  678.          do
  678.             $I_L678_280 = 0
  678. !dir$ ivdep
  678.             do
  678.                t$2660(1 + $I_L678_280, 1 + $I_L678_500) = rst(1 + $I_L678_280, 1 + $I_L678_500)
  678.                $I_L678_280 = 1 + $I_L678_280
  678.                if ( $I_L678_280 >= nmax ) exit
  678.             enddo
  678.             $I_L678_500 = 1 + $I_L678_500
  678.             if ( $I_L678_500 >= 2 ) exit
  678.          enddo
  679.          t$2663 = _zla( 0, nmax )
  679.          t$2667 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  679.          $I_L679_502 = 0
  679.          do
  679.             $I_L679_282 = 0
  679. !dir$ ivdep
  679.             do
  679.                t$2666(1 + $I_L679_282, 1 + $I_L679_502) = phroot(1 + $I_L679_282, 1 + $I_L679_502)
  679.                $I_L679_282 = 1 + $I_L679_282
  679.                if ( $I_L679_282 >= nmax ) exit
  679.             enddo
  679.             $I_L679_502 = 1 + $I_L679_502
  679.             if ( $I_L679_502 >= 2 ) exit
  679.          enddo
  679.          t$2669 = _zla( 0, nmax )
  679.          t$2673 = int( _alloc( _zla( 0, 24 * _zla( 0, nmax ) ) ), 8 )
  679.          $I_L679_504 = 0
  679.          do
  679.             $I_L679_284 = 0
  679. !dir$ ivdep
  679.             do
  679.                t$2672(1 + $I_L679_284, 1 + $I_L679_504) = phsoil(1 + $I_L679_284, 1 + $I_L679_504)
  679.                $I_L679_284 = 1 + $I_L679_284
  679.                if ( $I_L679_284 >= nmax ) exit
  679.             enddo
  679.             $I_L679_504 = 1 + $I_L679_504
  679.             if ( $I_L679_504 >= 3 ) exit
  679.          enddo
  680.          t$2675 = _zla( 0, nmax )
  680.          t$2679 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  680.          $I_L680_506 = 0
  680.          do
  680.             $I_L680_286 = 0
  680. !dir$ ivdep
  680.             do
  680.                t$2678(1 + $I_L680_286, 1 + $I_L680_506) = satcap(1 + $I_L680_286, 1 + $I_L680_506)
  680.                $I_L680_286 = 1 + $I_L680_286
  680.                if ( $I_L680_286 >= nmax ) exit
  680.             enddo
  680.             $I_L680_506 = 1 + $I_L680_506
  680.             if ( $I_L680_506 >= 2 ) exit
  680.          enddo
  680.          t$2681 = _zla( 0, nmax )
  680.          t$2685 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  680.          $I_L680_508 = 0
  680.          do
  680.             $I_L680_288 = 0
  680. !dir$ ivdep
  680.             do
  680.                t$2684(1 + $I_L680_288, 1 + $I_L680_508) = snow(1 + $I_L680_288, 1 + $I_L680_508)
  680.                $I_L680_288 = 1 + $I_L680_288
  680.                if ( $I_L680_288 >= nmax ) exit
  680.             enddo
  680.             $I_L680_508 = 1 + $I_L680_508
  680.             if ( $I_L680_508 >= 2 ) exit
  680.          enddo
  681.          t$2687 = _zla( 0, nmax )
  681.          t$2691 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  681.          $I_L681_510 = 0
  681.          do
  681.             $I_L681_290 = 0
  681. !dir$ ivdep
  681.             do
  681.                t$2690(1 + $I_L681_290, 1 + $I_L681_510) = stm(1 + $I_L681_290, 1 + $I_L681_510)
  681.                $I_L681_290 = 1 + $I_L681_290
  681.                if ( $I_L681_290 >= nmax ) exit
  681.             enddo
  681.             $I_L681_510 = 1 + $I_L681_510
  681.             if ( $I_L681_510 >= 2 ) exit
  681.          enddo
  682.          t$2693 = _zla( 0, nmax )
  682.          t$2699 = int( _alloc( _zla( 0, 96 * _zla( 0, nmax ) ) ), 8 )
  682.          $I_L682_512 = 0
  682.          do
  682.             $I_L682_292 = 0
  682. !dir$ ivdep
  682.             do
  682.                t$2698(1 + $I_L682_292, 1 + $I_L682_512, 1, 1) = extk(1 + $I_L682_292, 1 + $I_L682_512, 1, 1)
  682.                $I_L682_292 = 1 + $I_L682_292
  682.                if ( $I_L682_292 >= nmax ) exit
  682.             enddo
  682.             $I_L682_512 = 1 + $I_L682_512
  682.             if ( $I_L682_512 >= 12 ) exit
  682.          enddo
  682.          t$2701 = _zla( 0, nmax )
  682.          t$2707 = int( _alloc( _zla( 0, 96 * _zla( 0, nmax ) ) ), 8 )
  682.          $I_L682_514 = 0
  682.          do
  682.             $I_L682_294 = 0
  682. !dir$ ivdep
  682.             do
  682.                t$2706(1 + $I_L682_294, 1 + $I_L682_514, 1, 1) = radfac(1 + $I_L682_294, 1 + $I_L682_514, 1, 1)
  682.                $I_L682_294 = 1 + $I_L682_294
  682.                if ( $I_L682_294 >= nmax ) exit
  682.             enddo
  682.             $I_L682_514 = 1 + $I_L682_514
  682.             if ( $I_L682_514 >= 12 ) exit
  682.          enddo
  684.          t$2709 = _zla( 0, nmax )
  684.          t$2713 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  684.          $I_L684_516 = 0
  684.          do
  684.             $I_L684_296 = 0
  684. !dir$ ivdep
  684.             do
  684.                t$2712(1 + $I_L684_296, 1 + $I_L684_516) = capac(1 + $I_L684_296, 1 + $I_L684_516)
  684.                $I_L684_296 = 1 + $I_L684_296
  684.                if ( $I_L684_296 >= nmax ) exit
  684.             enddo
  684.             $I_L684_516 = 1 + $I_L684_516
  684.             if ( $I_L684_516 >= 2 ) exit
  684.          enddo
  684.          t$2715 = _zla( 0, nmax )
  684.          t$2719 = int( _alloc( _zla( 0, 24 * _zla( 0, nmax ) ) ), 8 )
  684.          $I_L684_518 = 0
  684.          do
  684.             $I_L684_298 = 0
  684. !dir$ ivdep
  684.             do
  684.                t$2718(1 + $I_L684_298, 1 + $I_L684_518) = w(1 + $I_L684_298, 1 + $I_L684_518)
  684.                $I_L684_298 = 1 + $I_L684_298
  684.                if ( $I_L684_298 >= nmax ) exit
  684.             enddo
  684.             $I_L684_518 = 1 + $I_L684_518
  684.             if ( $I_L684_518 >= 3 ) exit
  684.          enddo
  686.          t$2721 = _zla( 0, nmax )
  686.          t$2726 = int( _alloc( _zla( 0, 48 * _zla( 0, nmax ) ) ), 8 )
  686.          $I_L686_520 = 0
  686.          do
  686.             $I_L686_300 = 0
  686. !dir$ ivdep
  686.             do
  686.                t$2725(1 + $I_L686_300, 1 + $I_L686_520, 1) = radn(1 + $I_L686_300, 1 + $I_L686_520, 1)
  686.                $I_L686_300 = 1 + $I_L686_300
  686.                if ( $I_L686_300 >= nmax ) exit
  686.             enddo
  686.             $I_L686_520 = 1 + $I_L686_520
  686.             if ( $I_L686_520 >= 6 ) exit
  686.          enddo
  688.          t$2728 = _zla( 0, nmax )
  688.          t$2732 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  688.          $I_L688_522 = 0
  688.          do
  688.             $I_L688_302 = 0
  688. !dir$ ivdep
  688.             do
  688.                t$2731(1 + $I_L688_302, 1 + $I_L688_522) = zlt2(1 + $I_L688_302, 1 + $I_L688_522)
  688.                $I_L688_302 = 1 + $I_L688_302
  688.                if ( $I_L688_302 >= nmax ) exit
  688.             enddo
  688.             $I_L688_522 = 1 + $I_L688_522
  688.             if ( $I_L688_522 >= 2 ) exit
  688.          enddo
  688.          t$2734 = _zla( 0, nmax )
  688.          t$2738 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  688.          $I_L688_524 = 0
  688.          do
  688.             $I_L688_304 = 0
  688. !dir$ ivdep
  688.             do
  688.                t$2737(1 + $I_L688_304, 1 + $I_L688_524) = green2(1 + $I_L688_304, 1 + $I_L688_524)
  688.                $I_L688_304 = 1 + $I_L688_304
  688.                if ( $I_L688_304 >= nmax ) exit
  688.             enddo
  688.             $I_L688_524 = 1 + $I_L688_524
  688.             if ( $I_L688_524 >= 2 ) exit
  688.          enddo
  688.          t$2740 = _zla( 0, nmax )
  688.          t$2744 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  688.          $I_L688_526 = 0
  688.          do
  688.             $I_L688_306 = 0
  688. !dir$ ivdep
  688.             do
  688.                t$2743(1 + $I_L688_306, 1 + $I_L688_526) = chil2(1 + $I_L688_306, 1 + $I_L688_526)
  688.                $I_L688_306 = 1 + $I_L688_306
  688.                if ( $I_L688_306 >= nmax ) exit
  688.             enddo
  688.             $I_L688_526 = 1 + $I_L688_526
  688.             if ( $I_L688_526 >= 2 ) exit
  688.          enddo
  689.          t$2746 = _zla( 0, nmax )
  689.          t$2751 = int( _alloc( _zla( 0, 48 * _zla( 0, nmax ) ) ), 8 )
  689.          $I_L689_528 = 0
  689.          do
  689.             $I_L689_308 = 0
  689. !dir$ ivdep
  689.             do
  689.                t$2750(1 + $I_L689_308, 1 + $I_L689_528, 1) = rstpar2(1 + $I_L689_308, 1 + $I_L689_528, 1)
  689.                $I_L689_308 = 1 + $I_L689_308
  689.                if ( $I_L689_308 >= nmax ) exit
  689.             enddo
  689.             $I_L689_528 = 1 + $I_L689_528
  689.             if ( $I_L689_528 >= 6 ) exit
  689.          enddo
  689.          t$2753 = _zla( 0, nmax )
  689.          t$2757 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  689.          $I_L689_530 = 0
  689.          do
  689.             $I_L689_310 = 0
  689. !dir$ ivdep
  689.             do
  689.                t$2756(1 + $I_L689_310, 1 + $I_L689_530) = topt2(1 + $I_L689_310, 1 + $I_L689_530)
  689.                $I_L689_310 = 1 + $I_L689_310
  689.                if ( $I_L689_310 >= nmax ) exit
  689.             enddo
  689.             $I_L689_530 = 1 + $I_L689_530
  689.             if ( $I_L689_530 >= 2 ) exit
  689.          enddo
  689.          t$2759 = _zla( 0, nmax )
  689.          t$2763 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  689.          $I_L689_532 = 0
  689.          do
  689.             $I_L689_312 = 0
  689. !dir$ ivdep
  689.             do
  689.                t$2762(1 + $I_L689_312, 1 + $I_L689_532) = tll2(1 + $I_L689_312, 1 + $I_L689_532)
  689.                $I_L689_312 = 1 + $I_L689_312
  689.                if ( $I_L689_312 >= nmax ) exit
  689.             enddo
  689.             $I_L689_532 = 1 + $I_L689_532
  689.             if ( $I_L689_532 >= 2 ) exit
  689.          enddo
  689.          t$2765 = _zla( 0, nmax )
  689.          t$2769 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  689.          $I_L689_534 = 0
  689.          do
  689.             $I_L689_314 = 0
  689. !dir$ ivdep
  689.             do
  689.                t$2768(1 + $I_L689_314, 1 + $I_L689_534) = tu2(1 + $I_L689_314, 1 + $I_L689_534)
  689.                $I_L689_314 = 1 + $I_L689_314
  689.                if ( $I_L689_314 >= nmax ) exit
  689.             enddo
  689.             $I_L689_534 = 1 + $I_L689_534
  689.             if ( $I_L689_534 >= 2 ) exit
  689.          enddo
  690.          t$2771 = _zla( 0, nmax )
  690.          t$2775 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  690.          $I_L690_536 = 0
  690.          do
  690.             $I_L690_316 = 0
  690. !dir$ ivdep
  690.             do
  690.                t$2774(1 + $I_L690_316, 1 + $I_L690_536) = defac2(1 + $I_L690_316, 1 + $I_L690_536)
  690.                $I_L690_316 = 1 + $I_L690_316
  690.                if ( $I_L690_316 >= nmax ) exit
  690.             enddo
  690.             $I_L690_536 = 1 + $I_L690_536
  690.             if ( $I_L690_536 >= 2 ) exit
  690.          enddo
  690.          t$2777 = _zla( 0, nmax )
  690.          t$2781 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  690.          $I_L690_538 = 0
  690.          do
  690.             $I_L690_318 = 0
  690. !dir$ ivdep
  690.             do
  690.                t$2780(1 + $I_L690_318, 1 + $I_L690_538) = ph12(1 + $I_L690_318, 1 + $I_L690_538)
  690.                $I_L690_318 = 1 + $I_L690_318
  690.                if ( $I_L690_318 >= nmax ) exit
  690.             enddo
  690.             $I_L690_538 = 1 + $I_L690_538
  690.             if ( $I_L690_538 >= 2 ) exit
  690.          enddo
  690.          t$2783 = _zla( 0, nmax )
  690.          t$2787 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
  690.          $I_L690_540 = 0
  690.          do
  690.             $I_L690_320 = 0
  690. !dir$ ivdep
  690.             do
  690.                t$2786(1 + $I_L690_320, 1 + $I_L690_540) = ph22(1 + $I_L690_320, 1 + $I_L690_540)
  690.                $I_L690_320 = 1 + $I_L690_320
  690.                if ( $I_L690_320 >= nmax ) exit
  690.             enddo
  690.             $I_L690_540 = 1 + $I_L690_540
  690.             if ( $I_L690_540 >= 2 ) exit
  690.          enddo
  661.          call fysiks( t$2618(1, 1), z0x(1), d(1), rdc(1), rbc(1), z0(1), jdt, latitu, bps(1), psb(1), dzm(1), em(1), t$2624(1, 1), t$2630(1, 1), t$2636(1, 1), cu(1), cuni(1), ctni(1), ustar(1), cosz(1), sinclt(1), rhoair(1), psy(1), rcp(1), wc(1), wg(1), fc(1), fg(1), hr(1), ect(1), eci(1), egt(1), egi(1), egs(1), ec(1), eg(1), hc(1), hg(1), ecidif(1), egidif(1), ecmass(1), egmass(1), etmass(1), hflux(1), chf(1), shf(1), fluxef(1), roff(1), drag(1), ra(1), rb(1), rd(1), rc(1), rg(1), tcta(1), tgta(1), ta(1), ea(1), etc(1), etg(1), btc(1), btg(1), u2(1), t$2642(1, 1), t$2648(1, 1), t$2654(1, 1), t$2660(1, 1), rsoil(1), t$2666(1, 1), hrr(1), t$2672(1, 1), cc(1), cg(1), t$2678(1, 1), t$2684(1, 1), dtc(1), dtg(1), dtm(1), dqm(1), t$2690(1, 1), t$2698(1, 1, 1, 1), t$2706(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), tc(1), tg(1), td(1), t$2712(1, 1), t$2718(1, 1), qm(1), tm(1), um(1), vm(1), psur(1), ppc(1), ppl(1), t$2725(1, 1, 1), itype(1), dtc3x, mon(1), nmax, nmax, t$2731(1, 1), t$2737(1, 1), t$2743(1, 1), t$2750(1, 1, 1), t$2756(1, 1), t$2762(1, 1), t$2768(1, 1), t$2774(1, 1), t$2780(1, 1), t$2786(1, 1) )
  690.          _free( t$2787 )
  690.          _free( t$2781 )
  690.          _free( t$2775 )
  689.          _free( t$2769 )
  689.          _free( t$2763 )
  689.          _free( t$2757 )
  689.          _free( t$2751 )
  688.          _free( t$2744 )
  688.          _free( t$2738 )
  688.          _free( t$2732 )
  686.          _free( t$2726 )
  661.          $I_L661_542 = 0
  661.          do
  661.             $I_L661_322 = 0
  661. !dir$ ivdep
  661.             do
  661.                w(1 + $I_L661_322, 1 + $I_L661_542) = t$2718(1 + $I_L661_322, 1 + $I_L661_542)
  661.                $I_L661_322 = 1 + $I_L661_322
  661.                if ( $I_L661_322 >= nmax ) exit
  661.             enddo
  661.             $I_L661_542 = 1 + $I_L661_542
  661.             if ( $I_L661_542 >= 3 ) exit
  661.          enddo
  684.          _free( t$2719 )
  661.          $I_L661_544 = 0
  661.          do
  661.             $I_L661_324 = 0
  661. !dir$ ivdep
  661.             do
  661.                capac(1 + $I_L661_324, 1 + $I_L661_544) = t$2712(1 + $I_L661_324, 1 + $I_L661_544)
  661.                $I_L661_324 = 1 + $I_L661_324
  661.                if ( $I_L661_324 >= nmax ) exit
  661.             enddo
  661.             $I_L661_544 = 1 + $I_L661_544
  661.             if ( $I_L661_544 >= 2 ) exit
  661.          enddo
  684.          _free( t$2713 )
  682.          _free( t$2707 )
  661.          $I_L661_546 = 0
  661.          do
  661.             $I_L661_326 = 0
  661. !dir$ ivdep
  661.             do
  661.                extk(1 + $I_L661_326, 1 + $I_L661_546, 1, 1) = t$2698(1 + $I_L661_326, 1 + $I_L661_546, 1, 1)
  661.                $I_L661_326 = 1 + $I_L661_326
  661.                if ( $I_L661_326 >= nmax ) exit
  661.             enddo
  661.             $I_L661_546 = 1 + $I_L661_546
  661.             if ( $I_L661_546 >= 12 ) exit
  661.          enddo
  682.          _free( t$2699 )
  661.          $I_L661_548 = 0
  661.          do
  661.             $I_L661_328 = 0
  661. !dir$ ivdep
  661.             do
  661.                stm(1 + $I_L661_328, 1 + $I_L661_548) = t$2690(1 + $I_L661_328, 1 + $I_L661_548)
  661.                $I_L661_328 = 1 + $I_L661_328
  661.                if ( $I_L661_328 >= nmax ) exit
  661.             enddo
  661.             $I_L661_548 = 1 + $I_L661_548
  661.             if ( $I_L661_548 >= 2 ) exit
  661.          enddo
  681.          _free( t$2691 )
  661.          $I_L661_550 = 0
  661.          do
  661.             $I_L661_330 = 0
  661. !dir$ ivdep
  661.             do
  661.                snow(1 + $I_L661_330, 1 + $I_L661_550) = t$2684(1 + $I_L661_330, 1 + $I_L661_550)
  661.                $I_L661_330 = 1 + $I_L661_330
  661.                if ( $I_L661_330 >= nmax ) exit
  661.             enddo
  661.             $I_L661_550 = 1 + $I_L661_550
  661.             if ( $I_L661_550 >= 2 ) exit
  661.          enddo
  680.          _free( t$2685 )
  661.          $I_L661_552 = 0
  661.          do
  661.             $I_L661_332 = 0
  661. !dir$ ivdep
  661.             do
  661.                satcap(1 + $I_L661_332, 1 + $I_L661_552) = t$2678(1 + $I_L661_332, 1 + $I_L661_552)
  661.                $I_L661_332 = 1 + $I_L661_332
  661.                if ( $I_L661_332 >= nmax ) exit
  661.             enddo
  661.             $I_L661_552 = 1 + $I_L661_552
  661.             if ( $I_L661_552 >= 2 ) exit
  661.          enddo
  680.          _free( t$2679 )
  661.          $I_L661_554 = 0
  661.          do
  661.             $I_L661_334 = 0
  661. !dir$ ivdep
  661.             do
  661.                phsoil(1 + $I_L661_334, 1 + $I_L661_554) = t$2672(1 + $I_L661_334, 1 + $I_L661_554)
  661.                $I_L661_334 = 1 + $I_L661_334
  661.                if ( $I_L661_334 >= nmax ) exit
  661.             enddo
  661.             $I_L661_554 = 1 + $I_L661_554
  661.             if ( $I_L661_554 >= 3 ) exit
  661.          enddo
  679.          _free( t$2673 )
  661.          $I_L661_556 = 0
  661.          do
  661.             $I_L661_336 = 0
  661. !dir$ ivdep
  661.             do
  661.                phroot(1 + $I_L661_336, 1 + $I_L661_556) = t$2666(1 + $I_L661_336, 1 + $I_L661_556)
  661.                $I_L661_336 = 1 + $I_L661_336
  661.                if ( $I_L661_336 >= nmax ) exit
  661.             enddo
  661.             $I_L661_556 = 1 + $I_L661_556
  661.             if ( $I_L661_556 >= 2 ) exit
  661.          enddo
  679.          _free( t$2667 )
  661.          $I_L661_558 = 0
  661.          do
  661.             $I_L661_338 = 0
  661. !dir$ ivdep
  661.             do
  661.                rst(1 + $I_L661_338, 1 + $I_L661_558) = t$2660(1 + $I_L661_338, 1 + $I_L661_558)
  661.                $I_L661_338 = 1 + $I_L661_338
  661.                if ( $I_L661_338 >= nmax ) exit
  661.             enddo
  661.             $I_L661_558 = 1 + $I_L661_558
  661.             if ( $I_L661_558 >= 2 ) exit
  661.          enddo
  678.          _free( t$2661 )
  661.          $I_L661_560 = 0
  661.          do
  661.             $I_L661_340 = 0
  661. !dir$ ivdep
  661.             do
  661.                pd(1 + $I_L661_340, 1 + $I_L661_560) = t$2654(1 + $I_L661_340, 1 + $I_L661_560)
  661.                $I_L661_340 = 1 + $I_L661_340
  661.                if ( $I_L661_340 >= nmax ) exit
  661.             enddo
  661.             $I_L661_560 = 1 + $I_L661_560
  661.             if ( $I_L661_560 >= 2 ) exit
  661.          enddo
  678.          _free( t$2655 )
  661.          $I_L661_562 = 0
  661.          do
  661.             $I_L661_342 = 0
  661. !dir$ ivdep
  661.             do
  661.                par(1 + $I_L661_342, 1 + $I_L661_562) = t$2648(1 + $I_L661_342, 1 + $I_L661_562)
  661.                $I_L661_342 = 1 + $I_L661_342
  661.                if ( $I_L661_342 >= nmax ) exit
  661.             enddo
  661.             $I_L661_562 = 1 + $I_L661_562
  661.             if ( $I_L661_562 >= 2 ) exit
  661.          enddo
  678.          _free( t$2649 )
  661.          $I_L661_564 = 0
  661.          do
  661.             $I_L661_344 = 0
  661. !dir$ ivdep
  661.             do
  661.                radt(1 + $I_L661_344, 1 + $I_L661_564) = t$2642(1 + $I_L661_344, 1 + $I_L661_564)
  661.                $I_L661_344 = 1 + $I_L661_344
  661.                if ( $I_L661_344 >= nmax ) exit
  661.             enddo
  661.             $I_L661_564 = 1 + $I_L661_564
  661.             if ( $I_L661_564 >= 2 ) exit
  661.          enddo
  677.          _free( t$2643 )
  661.          $I_L661_566 = 0
  661.          do
  661.             $I_L661_346 = 0
  661. !dir$ ivdep
  661.             do
  661.                gmu(1 + $I_L661_346, 1 + $I_L661_566) = t$2636(1 + $I_L661_346, 1 + $I_L661_566)
  661.                $I_L661_346 = 1 + $I_L661_346
  661.                if ( $I_L661_346 >= nmax ) exit
  661.             enddo
  661.             $I_L661_566 = 1 + $I_L661_566
  661.             if ( $I_L661_566 >= 4 ) exit
  661.          enddo
  665.          _free( t$2637 )
  661.          $I_L661_568 = 0
  661.          do
  661.             $I_L661_348 = 0
  661. !dir$ ivdep
  661.             do
  661.                gmq(1 + $I_L661_348, 1 + $I_L661_568) = t$2630(1 + $I_L661_348, 1 + $I_L661_568)
  661.                $I_L661_348 = 1 + $I_L661_348
  661.                if ( $I_L661_348 >= nmax ) exit
  661.             enddo
  661.             $I_L661_568 = 1 + $I_L661_568
  661.             if ( $I_L661_568 >= 3 ) exit
  661.          enddo
  665.          _free( t$2631 )
  661.          $I_L661_570 = 0
  661.          do
  661.             $I_L661_350 = 0
  661. !dir$ ivdep
  661.             do
  661.                gmt(1 + $I_L661_350, 1 + $I_L661_570) = t$2624(1 + $I_L661_350, 1 + $I_L661_570)
  661.                $I_L661_350 = 1 + $I_L661_350
  661.                if ( $I_L661_350 >= nmax ) exit
  661.             enddo
  661.             $I_L661_570 = 1 + $I_L661_570
  661.             if ( $I_L661_570 >= 3 ) exit
  661.          enddo
  665.          _free( t$2625 )
  662.          _free( t$2619 )
  695.          $I_L695_130 = 0
  695. !dir$ ivdep
  695.          do
  698.             qm(1 + $I_L695_130) = max( 9.9999999999999998e-13, qm(1 + $I_L695_130) )
  699.             $I_L695_130 = 1 + $I_L695_130
  695.             if ( $I_L695_130 >= nmax ) exit
  695.          enddo
  695.       endif
  700.       call sextrp( td(1), tg(1), tc(1), w(1, 1), capac(1, 1), td0(1), tg0(1), tc0(1), w0(1, 1), capac0(1, 1), tdm(1), tgm(1), tcm(1), wm(1, 1), capacm(1, 1), istrt, ncols, nmax, epsflt, intg, latitu, tm0(1), qm0(1), tm(1), qm(1), tmm(1), qmm(1) )
  707.       if ( nmax > 0 ) then
  707.          $I_L707_132 = 0
  707. !dir$ ivdep
  707.          do
  708.             if ( ssib(1 + $I_L707_132) > 0.0 ) then
  710.                w0(1 + $I_L707_132, 1) = ssib(1 + $I_L707_132)
  711.                w0(1 + $I_L707_132, 2) = ssib(1 + $I_L707_132)
  712.                w0(1 + $I_L707_132, 3) = ssib(1 + $I_L707_132)
  713.                wm(1 + $I_L707_132, 1) = ssib(1 + $I_L707_132)
  714.                wm(1 + $I_L707_132, 2) = ssib(1 + $I_L707_132)
  715.                wm(1 + $I_L707_132, 3) = ssib(1 + $I_L707_132)
  709.                qm(1 + $I_L707_132) = max( 9.9999999999999998e-13, qm(1 + $I_L707_132) )
  709.             endif
  717.             $I_L707_132 = 1 + $I_L707_132
  716.             if ( $I_L707_132 >= nmax ) exit
  716.          enddo
  716.       endif
  718.       $ncount_S22 = 0
  719.       if ( ncols > 0 ) then
  719.          $I_L719_134 = 0
  719. !dir$ ivdep
  719.          do
  720.             if ( imask(1 + $I_L719_134) > 0 ) then
  721.                $ncount_S22 = 1 + $ncount_S22
  722.                tmtx(1 + $I_L719_134, 1, 3) = gmt($ncount_S22, 3)
  723.                qmtx(1 + $I_L719_134, 1, 3) = gmq($ncount_S22, 3)
  724.                umtx(1 + $I_L719_134, 1, 3) = gmu($ncount_S22, 3)
  725.                umtx(1 + $I_L719_134, 1, 4) = gmu($ncount_S22, 4)
  726.                tsea(1 + $I_L719_134) = tgeff($ncount_S22)
  727.                z0x($ncount_S22) = z0($ncount_S22)
  727.             endif
  729.             $I_L719_134 = 1 + $I_L719_134
  728.             if ( $I_L719_134 >= ncols ) exit
  728.          enddo
  735.          $I_L735_136 = 0
  735. !dir$ ivdep
  735.          do
  736.             if ( mskant(1 + $I_L735_136) == 1 ) then
  737.                xsea(1 + $I_L735_136) = tseam(1 + $I_L735_136)
  738.                tsfc(1 + $I_L735_136) = tsfcm(1 + $I_L735_136)
  739.                qsfc(1 + $I_L735_136) = qsfcm(1 + $I_L735_136)
  739.             endif
  741.             $I_L735_136 = 1 + $I_L735_136
  740.             if ( $I_L735_136 >= ncols ) exit
  740.          enddo
  740.       endif
  744.       t$2801 = _zla( 0, ncols )
  744.       t$2802 = _zla( 0, kmax )
  744.       t$2807 = int( _alloc( _zla( 0, 24 * _zla( 0, ncols ) * _zla( 0, kmax ) ) ), 8 )
  744.       if ( and( -kmax, -ncols ) < 0 ) then
  744.          $I_L744_352 = 0
  744. !dir$ ivdep
  744.          do
  744.             t$2806(1 + $I_L744_352, 1, 1) = tmtx(1 + $I_L744_352, 1, 1)
  744.             $I_L744_352 = 1 + $I_L744_352
  744.             if ( $I_L744_352 >= 3 * kmax * ncols ) exit
  744.          enddo
  744.       endif
  744.       t$2809 = _zla( 0, ncols )
  744.       t$2810 = _zla( 0, kmax )
  744.       t$2815 = int( _alloc( _zla( 0, 32 * _zla( 0, ncols ) * _zla( 0, kmax ) ) ), 8 )
  744.       if ( and( -kmax, -ncols ) < 0 ) then
  744.          $I_L744_354 = 0
  744. !dir$ ivdep
  744.          do
  744.             t$2814(1 + $I_L744_354, 1, 1) = umtx(1 + $I_L744_354, 1, 1)
  744.             $I_L744_354 = 1 + $I_L744_354
  744.             if ( $I_L744_354 >= 4 * kmax * ncols ) exit
  744.          enddo
  744.       endif
  744.       t$2817 = _zla( 0, ncols )
  744.       t$2818 = _zla( 0, kmax )
  744.       t$2823 = int( _alloc( _zla( 0, 24 * _zla( 0, ncols ) * _zla( 0, kmax ) ) ), 8 )
  744.       if ( and( -kmax, -ncols ) < 0 ) then
  744.          $I_L744_356 = 0
  744. !dir$ ivdep
  744.          do
  744.             t$2822(1 + $I_L744_356, 1, 1) = qmtx(1 + $I_L744_356, 1, 1)
  744.             $I_L744_356 = 1 + $I_L744_356
  744.             if ( $I_L744_356 >= 3 * kmax * ncols ) exit
  744.          enddo
  744.       endif
  749.       t$2824 = _zla( 0, ncols )
  749.       t$2827 = int( _alloc( _zla( 0, 8 * _zla( 0, ncols ) ) ), 8 )
  749.       if ( ncols > 0 ) then
  749.          $I_L749_358 = 0
  749. !dir$ ivdep
  749.          do
  749.             t$2826(1 + $I_L749_358) = sin( colrad(1 + $I_L749_358) )
  749.             $I_L749_358 = 1 + $I_L749_358
  749.             if ( $I_L749_358 >= ncols ) exit
  749.          enddo
  749.       endif
  743.       call seasfc( t$2806(1, 1, 1), t$2814(1, 1, 1), t$2822(1, 1, 1), kmax, kmax, slrad(1), tsurf(1), qsurf(1), gu(1, 1), gv(1, 1), gt(1, 1), gq(1, 1), gps(1), xsea(1), dtc3x, t$2826(1), sigki(1), delsig(1), sens(1), evap(1), umom(1), vmom(1), rmi(1), rhi(1), cond(1), stor(1), zorl(1), ncols, speedm(1), ustarm(1), z0sea(1), rho(1), qsfc(1), tsfc(1), mskant(1) )
  749.       _free( t$2827 )
  743.       if ( and( -kmax, -ncols ) < 0 ) then
  743.          $I_L743_578 = 0
  743. !dir$ ivdep
  743.          do
  743.             qmtx(1 + $I_L743_578, 1, 1) = t$2822(1 + $I_L743_578, 1, 1)
  743.             $I_L743_578 = 1 + $I_L743_578
  743.             if ( $I_L743_578 >= 3 * kmax * ncols ) exit
  743.          enddo
  743.       endif
  744.       _free( t$2823 )
  743.       if ( and( -kmax, -ncols ) < 0 ) then
  743.          $I_L743_580 = 0
  743. !dir$ ivdep
  743.          do
  743.             umtx(1 + $I_L743_580, 1, 1) = t$2814(1 + $I_L743_580, 1, 1)
  743.             $I_L743_580 = 1 + $I_L743_580
  743.             if ( $I_L743_580 >= 4 * kmax * ncols ) exit
  743.          enddo
  743.       endif
  744.       _free( t$2815 )
  743.       if ( and( -kmax, -ncols ) < 0 ) then
  743.          $I_L743_582 = 0
  743. !dir$ ivdep
  743.          do
  743.             tmtx(1 + $I_L743_582, 1, 1) = t$2806(1 + $I_L743_582, 1, 1)
  743.             $I_L743_582 = 1 + $I_L743_582
  743.             if ( $I_L743_582 >= 3 * kmax * ncols ) exit
  743.          enddo
  743.       endif
  744.       _free( t$2807 )
  757.       if ( ncols > 0 ) then
  757.          $I_L757_576 = 0
  757. !dir$ ivdep
  757.          do
  758.             if ( mskant(1 + $I_L757_576) == 1 ) then
  758.                if ( tsea(1 + $I_L757_576) <= 0.0 ) then
  758.                   if ( tsurf(1 + $I_L757_576) < 271.17000000000002 ) then
  759.                      if ( intg == 2 ) then
  760.                         if ( istrt == 0 ) then
  762.                            $qsfc_WR0_R1 = max( 9.9999999999999998e-13, qsfc(1 + $I_L757_576) )
  762.                            qsfc(1 + $I_L757_576) = $qsfc_WR0_R1
  761.                            tseam(1 + $I_L757_576) = epsflt * ( tseam(1 + $I_L757_576) + xsea(1 + $I_L757_576) ) + filta * tsea(1 + $I_L757_576)
  763.                            tsfcm(1 + $I_L757_576) = epsflt * ( tsfcm(1 + $I_L757_576) + tsfc(1 + $I_L757_576) ) + filta * tsfc0(1 + $I_L757_576)
  764.                            qsfcm(1 + $I_L757_576) = epsflt * ( $qsfc_WR0_R1 + qsfcm(1 + $I_L757_576) ) + filta * qsfc0(1 + $I_L757_576)
  764.                         endif
  766.                         tsea(1 + $I_L757_576) = xsea(1 + $I_L757_576)
  768.                         tsfc0(1 + $I_L757_576) = tsfc(1 + $I_L757_576)
  767.                         $qsfc_WR0_R1 = max( 9.9999999999999998e-13, qsfc(1 + $I_L757_576) )
  767.                         qsfc(1 + $I_L757_576) = $qsfc_WR0_R1
  769.                         qsfc0(1 + $I_L757_576) = $qsfc_WR0_R1
  769.                      else
  771.                         tsea(1 + $I_L757_576) = xsea(1 + $I_L757_576)
  772.                         tseam(1 + $I_L757_576) = xsea(1 + $I_L757_576)
  774.                         tsfc0(1 + $I_L757_576) = tsfc(1 + $I_L757_576)
  773.                         $qsfc_WR0_R2 = max( 9.9999999999999998e-13, qsfc(1 + $I_L757_576) )
  773.                         qsfc(1 + $I_L757_576) = $qsfc_WR0_R2
  775.                         qsfc0(1 + $I_L757_576) = $qsfc_WR0_R2
  776.                         tsfcm(1 + $I_L757_576) = tsfc(1 + $I_L757_576)
  777.                         qsfcm(1 + $I_L757_576) = $qsfc_WR0_R2
  777.                      endif
  777.                   endif
  777.                endif
  780.                if ( tsea(1 + $I_L757_576) < 0.0 ) then
  780.                   if ( tsurf(1 + $I_L757_576) >= 271.17000000000002 ) then
  781.                      tseam(1 + $I_L757_576) = tsea(1 + $I_L757_576)
  782.                      tsfcm(1 + $I_L757_576) = tsfc0(1 + $I_L757_576)
  783.                      qsfcm(1 + $I_L757_576) = qsfc0(1 + $I_L757_576)
  783.                   endif
  783.                endif
  783.             endif
  785.             $I_L757_576 = 1 + $I_L757_576
  784.             if ( $I_L757_576 >= ncols ) exit
  784.          enddo
  784.       endif
  208.       _free( t$1477 )
  787.       return
  787.       end
  787.       
  789.       
  789.       subroutine copysurfacedata( itype, mon, colrad2, xday, idatec, nsx, ncols, nmax, latitu )
  789.       t$215 = ncols
  793.       t$1528 = _zla( 0, ncols )
  800.       if ( and( and( -xcover%dim_3%EX, -xcover%dim_2%EX ), -xcover%dim_1%EX ) < 0 ) then
  800.          $I_L800_38 = 0
  800. !dir$ ivdep
  800. !dir$ loop_info (automatic) cache_nt( xcover )
  800.          do
  800.             (xcover%base_addr)(xcover%dim_1%LB + $I_L800_38, xcover%dim_2%LB, xcover%dim_3%LB, 0) = (xcover_fixed%base_addr)(xcover_fixed%dim_1%LB + $I_L800_38, xcover_fixed%dim_2%LB, xcover_fixed%dim_3%LB, 0)
  800.             $I_L800_38 = 1 + $I_L800_38
  800.             if ( $I_L800_38 >= xcover%dim_3%EX * xcover%dim_2%EX * xcover%dim_1%EX ) exit
  800.          enddo
  800.       endif
  801.       if ( and( and( -zlt%dim_3%EX, -zlt%dim_2%EX ), -zlt%dim_1%EX ) < 0 ) then
  801.          $I_L801_40 = 0
  801. !dir$ ivdep
  801. !dir$ loop_info (automatic) cache_nt( zlt )
  801.          do
  801.             (zlt%base_addr)(zlt%dim_1%LB + $I_L801_40, zlt%dim_2%LB, zlt%dim_3%LB, 0) = (zlt_fixed%base_addr)(zlt_fixed%dim_1%LB + $I_L801_40, zlt_fixed%dim_2%LB, zlt_fixed%dim_3%LB, 0)
  801.             $I_L801_40 = 1 + $I_L801_40
  801.             if ( $I_L801_40 >= zlt%dim_3%EX * zlt%dim_2%EX * zlt%dim_1%EX ) exit
  801.          enddo
  801.       endif
  802.       if ( and( and( -green%dim_3%EX, -green%dim_2%EX ), -green%dim_1%EX ) < 0 ) then
  802.          $I_L802_42 = 0
  802. !dir$ ivdep
  802. !dir$ loop_info (automatic) cache_nt( green )
  802.          do
  802.             (green%base_addr)(green%dim_1%LB + $I_L802_42, green%dim_2%LB, green%dim_3%LB, 0) = (green_fixed%base_addr)(green_fixed%dim_1%LB + $I_L802_42, green_fixed%dim_2%LB, green_fixed%dim_3%LB, 0)
  802.             $I_L802_42 = 1 + $I_L802_42
  802.             if ( $I_L802_42 >= green%dim_3%EX * green%dim_2%EX * green%dim_1%EX ) exit
  802.          enddo
  802.       endif
  803.       if ( and( -ph2%dim_2%EX, -ph2%dim_1%EX ) < 0 ) then
  803.          $I_L803_44 = 0
  803. !dir$ ivdep
  803.          do
  803.             (ph2%base_addr)(ph2%dim_1%LB + $I_L803_44, ph2%dim_2%LB, 0) = (ph2_fixed%base_addr)(ph2_fixed%dim_1%LB + $I_L803_44, ph2_fixed%dim_2%LB, 0)
  803.             $I_L803_44 = 1 + $I_L803_44
  803.             if ( $I_L803_44 >= ph2%dim_2%EX * ph2%dim_1%EX ) exit
  803.          enddo
  803.       endif
  804.       if ( and( -ph1%dim_2%EX, -ph1%dim_1%EX ) < 0 ) then
  804.          $I_L804_46 = 0
  804. !dir$ ivdep
  804.          do
  804.             (ph1%base_addr)(ph1%dim_1%LB + $I_L804_46, ph1%dim_2%LB, 0) = (ph1_fixed%base_addr)(ph1_fixed%dim_1%LB + $I_L804_46, ph1_fixed%dim_2%LB, 0)
  804.             $I_L804_46 = 1 + $I_L804_46
  804.             if ( $I_L804_46 >= ph1%dim_2%EX * ph1%dim_1%EX ) exit
  804.          enddo
  804.       endif
  805.       if ( and( -defac%dim_2%EX, -defac%dim_1%EX ) < 0 ) then
  805.          $I_L805_48 = 0
  805. !dir$ ivdep
  805.          do
  805.             (defac%base_addr)(defac%dim_1%LB + $I_L805_48, defac%dim_2%LB, 0) = (defac_fixed%base_addr)(defac_fixed%dim_1%LB + $I_L805_48, defac_fixed%dim_2%LB, 0)
  805.             $I_L805_48 = 1 + $I_L805_48
  805.             if ( $I_L805_48 >= defac%dim_2%EX * defac%dim_1%EX ) exit
  805.          enddo
  805.       endif
  806.       if ( and( -tu%dim_2%EX, -tu%dim_1%EX ) < 0 ) then
  806.          $I_L806_50 = 0
  806. !dir$ ivdep
  806.          do
  806.             (tu%base_addr)(tu%dim_1%LB + $I_L806_50, tu%dim_2%LB, 0) = (tu_fixed%base_addr)(tu_fixed%dim_1%LB + $I_L806_50, tu_fixed%dim_2%LB, 0)
  806.             $I_L806_50 = 1 + $I_L806_50
  806.             if ( $I_L806_50 >= tu%dim_2%EX * tu%dim_1%EX ) exit
  806.          enddo
  806.       endif
  807.       if ( and( -tll%dim_2%EX, -tll%dim_1%EX ) < 0 ) then
  807.          $I_L807_52 = 0
  807. !dir$ ivdep
  807.          do
  807.             (tll%base_addr)(tll%dim_1%LB + $I_L807_52, tll%dim_2%LB, 0) = (tll_fixed%base_addr)(tll_fixed%dim_1%LB + $I_L807_52, tll_fixed%dim_2%LB, 0)
  807.             $I_L807_52 = 1 + $I_L807_52
  807.             if ( $I_L807_52 >= tll%dim_2%EX * tll%dim_1%EX ) exit
  807.          enddo
  807.       endif
  808.       if ( and( -topt%dim_2%EX, -topt%dim_1%EX ) < 0 ) then
  808.          $I_L808_54 = 0
  808. !dir$ ivdep
  808.          do
  808.             (topt%base_addr)(topt%dim_1%LB + $I_L808_54, topt%dim_2%LB, 0) = (topt_fixed%base_addr)(topt_fixed%dim_1%LB + $I_L808_54, topt_fixed%dim_2%LB, 0)
  808.             $I_L808_54 = 1 + $I_L808_54
  808.             if ( $I_L808_54 >= topt%dim_2%EX * topt%dim_1%EX ) exit
  808.          enddo
  808.       endif
  809.       if ( and( and( -rstpar%dim_3%EX, -rstpar%dim_2%EX ), -rstpar%dim_1%EX ) < 0 ) then
  809.          $I_L809_56 = 0
  809. !dir$ ivdep
  809. !dir$ loop_info (automatic) cache_nt( rstpar )
  809.          do
  809.             (rstpar%base_addr)(rstpar%dim_1%LB + $I_L809_56, rstpar%dim_2%LB, rstpar%dim_3%LB, 0) = (rstpar_fixed%base_addr)(rstpar_fixed%dim_1%LB + $I_L809_56, rstpar_fixed%dim_2%LB, rstpar_fixed%dim_3%LB, 0)
  809.             $I_L809_56 = 1 + $I_L809_56
  809.             if ( $I_L809_56 >= rstpar%dim_3%EX * rstpar%dim_2%EX * rstpar%dim_1%EX ) exit
  809.          enddo
  809.       endif
  810.       if ( and( -chil%dim_2%EX, -chil%dim_1%EX ) < 0 ) then
  810.          $I_L810_58 = 0
  810. !dir$ ivdep
  810.          do
  810.             (chil%base_addr)(chil%dim_1%LB + $I_L810_58, chil%dim_2%LB, 0) = (chil_fixed%base_addr)(chil_fixed%dim_1%LB + $I_L810_58, chil_fixed%dim_2%LB, 0)
  810.             $I_L810_58 = 1 + $I_L810_58
  810.             if ( $I_L810_58 >= chil%dim_2%EX * chil%dim_1%EX ) exit
  810.          enddo
  810.       endif
  815.       $SC_green_gbl_I40 = green_gbl%dim_1%EX
  815.       $SC_green_gbl_I41 = green_gbl%dim_1%LB
  815.       $SC_green_gbl_I43 = green_gbl%dim_2%SM
  815.       $SC_green_gbl_I42 = green_gbl%dim_2%EX
  815.       $SC_green_gbl_I44 = green_gbl%dim_2%LB
  815.       $SC_green_gbl_I46 = green_gbl%dim_3%SM
  815.       $SC_green_gbl_I45 = green_gbl%dim_3%EX
  815.       $SC_green_gbl_I47 = green_gbl%dim_3%LB
  814.       $SC_zlt_gbl_I24 = zlt_gbl%dim_1%EX
  814.       $SC_zlt_gbl_I25 = zlt_gbl%dim_1%LB
  814.       $SC_zlt_gbl_I27 = zlt_gbl%dim_2%SM
  814.       $SC_zlt_gbl_I26 = zlt_gbl%dim_2%EX
  814.       $SC_zlt_gbl_I28 = zlt_gbl%dim_2%LB
  814.       $SC_zlt_gbl_I30 = zlt_gbl%dim_3%SM
  814.       $SC_zlt_gbl_I29 = zlt_gbl%dim_3%EX
  814.       $SC_zlt_gbl_I31 = zlt_gbl%dim_3%LB
  813.       $SC_vcover_gbl_I8 = vcover_gbl%dim_1%EX
  813.       $SC_vcover_gbl_I9 = vcover_gbl%dim_1%LB
  813.       $SC_vcover_gbl_I11 = vcover_gbl%dim_2%SM
  813.       $SC_vcover_gbl_I10 = vcover_gbl%dim_2%EX
  813.       $SC_vcover_gbl_I12 = vcover_gbl%dim_2%LB
  813.       $SC_vcover_gbl_I14 = vcover_gbl%dim_3%SM
  813.       $SC_vcover_gbl_I13 = vcover_gbl%dim_3%EX
  813.       $SC_vcover_gbl_I15 = vcover_gbl%dim_3%LB
  815.       $SC_green_fixed_I32 = green_fixed%dim_1%EX
  815.       $SC_green_fixed_I33 = green_fixed%dim_1%LB
  815.       $SC_green_fixed_I35 = green_fixed%dim_2%SM
  815.       $SC_green_fixed_I34 = green_fixed%dim_2%EX
  815.       $SC_green_fixed_I36 = green_fixed%dim_2%LB
  815.       $SC_green_fixed_I38 = green_fixed%dim_3%SM
  815.       $SC_green_fixed_I37 = green_fixed%dim_3%EX
  815.       $SC_green_fixed_I39 = green_fixed%dim_3%LB
  814.       $SC_zlt_fixed_I16 = zlt_fixed%dim_1%EX
  814.       $SC_zlt_fixed_I17 = zlt_fixed%dim_1%LB
  814.       $SC_zlt_fixed_I19 = zlt_fixed%dim_2%SM
  814.       $SC_zlt_fixed_I18 = zlt_fixed%dim_2%EX
  814.       $SC_zlt_fixed_I20 = zlt_fixed%dim_2%LB
  814.       $SC_zlt_fixed_I22 = zlt_fixed%dim_3%SM
  814.       $SC_zlt_fixed_I21 = zlt_fixed%dim_3%EX
  814.       $SC_zlt_fixed_I23 = zlt_fixed%dim_3%LB
  813.       $SC_xcover_fixed_I0 = xcover_fixed%dim_1%EX
  813.       $SC_xcover_fixed_I1 = xcover_fixed%dim_1%LB
  813.       $SC_xcover_fixed_I3 = xcover_fixed%dim_2%SM
  813.       $SC_xcover_fixed_I2 = xcover_fixed%dim_2%EX
  813.       $SC_xcover_fixed_I4 = xcover_fixed%dim_2%LB
  813.       $SC_xcover_fixed_I6 = xcover_fixed%dim_3%SM
  813.       $SC_xcover_fixed_I5 = xcover_fixed%dim_3%EX
  813.       $SC_xcover_fixed_I7 = xcover_fixed%dim_3%LB
  812.       if ( nmax > 0 ) then
  811.          $I_L811_60 = 0
  811. !dir$ blocking_size( 1, 1 )
  811.          do
  812.             $I_L812_36 = 0
  812. !dir$ ivdep
  812. !dir$ blocking_size( 256, 256 )
  812.             do
  813.                (vcover_gbl%base_addr)(1 + $I_L812_36, latitu, 1 + $I_L811_60, 0) = (xcover_fixed%base_addr)(itype(1 + $I_L812_36), mon(1 + $I_L812_36), 1 + $I_L811_60, 0)
  814.                (zlt_gbl%base_addr)(1 + $I_L812_36, latitu, 1 + $I_L811_60, 0) = (zlt_fixed%base_addr)(itype(1 + $I_L812_36), mon(1 + $I_L812_36), 1 + $I_L811_60, 0)
  815.                (green_gbl%base_addr)(1 + $I_L812_36, latitu, 1 + $I_L811_60, 0) = (green_fixed%base_addr)(itype(1 + $I_L812_36), mon(1 + $I_L812_36), 1 + $I_L811_60, 0)
  816.                (chil_gbl%base_addr)(1 + $I_L812_36, latitu, 1 + $I_L811_60, 0) = (chil_fixed%base_addr)(itype(1 + $I_L812_36), 1 + $I_L811_60, 0)
  817.                (topt_gbl%base_addr)(1 + $I_L812_36, latitu, 1 + $I_L811_60, 0) = (topt_fixed%base_addr)(itype(1 + $I_L812_36), 1 + $I_L811_60, 0)
  818.                (tll_gbl%base_addr)(1 + $I_L812_36, latitu, 1 + $I_L811_60, 0) = (tll_fixed%base_addr)(itype(1 + $I_L812_36), 1 + $I_L811_60, 0)
  819.                (tu_gbl%base_addr)(1 + $I_L812_36, latitu, 1 + $I_L811_60, 0) = (tu_fixed%base_addr)(itype(1 + $I_L812_36), 1 + $I_L811_60, 0)
  820.                (defac_gbl%base_addr)(1 + $I_L812_36, latitu, 1 + $I_L811_60, 0) = (defac_fixed%base_addr)(itype(1 + $I_L812_36), 1 + $I_L811_60, 0)
  821.                (ph1_gbl%base_addr)(1 + $I_L812_36, latitu, 1 + $I_L811_60, 0) = (ph1_fixed%base_addr)(itype(1 + $I_L812_36), 1 + $I_L811_60, 0)
  822.                (ph2_gbl%base_addr)(1 + $I_L812_36, latitu, 1 + $I_L811_60, 0) = (ph2_fixed%base_addr)(itype(1 + $I_L812_36), 1 + $I_L811_60, 0)
  823.                (rstpar_gbl%base_addr)(1 + $I_L812_36, latitu, 1 + $I_L811_60, 1, 0) = (rstpar_fixed%base_addr)(itype(1 + $I_L812_36), 1 + $I_L811_60, 1, 0)
  824.                (rstpar_gbl%base_addr)(1 + $I_L812_36, latitu, 1 + $I_L811_60, 2, 0) = (rstpar_fixed%base_addr)(itype(1 + $I_L812_36), 1 + $I_L811_60, 2, 0)
  825.                (rstpar_gbl%base_addr)(1 + $I_L812_36, latitu, 1 + $I_L811_60, 3, 0) = (rstpar_fixed%base_addr)(itype(1 + $I_L812_36), 1 + $I_L811_60, 3, 0)
  826.                $I_L812_36 = 1 + $I_L812_36
  812.                if ( $I_L812_36 >= nmax ) exit
  812.             enddo
  827.             $I_L811_60 = 1 + $I_L811_60
  826.             if ( $I_L811_60 >= 2 ) exit
  826.          enddo
  826.       endif
  828.       call wheat( latitu, itype(1), nmax, colrad2(1), mon(1), xday, yrl, idatec(1), monl(1), nsx(1) )
  831.       return
  831.       end
  831.       
  838.       
  838.       subroutine airmod( tg, capac, z0x, d, rdc, rbc, itype, mon, nmax, ncols )
  838.       t$219 = ncols
  889.       t$1529 = _zla( 0, ncols )
  838.       t$1530 = _zla( 0, ncols )
  838.       t$1531 = 2 * _zla( 0, ncols )
  892.       t$1534 = 8 * _zla( 0, ncols )
  893.       t$1535 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
  893.       t$1537 = t$1535 + 8 * _zla( 0, ncols )
  838.       t$1532 = int( _alloc( t$1535 + 8 * _zla( 0, ncols ) ), 8 )
  892.       t$1533 = t$1532
  893.       t$1536 = t$1535 + t$1532
  897.       if ( nmax > 0 ) then
  904.          $SC_xd_I5 = xd%dim_1%EX
  904.          $SC_xd_I6 = xd%dim_1%LB
  904.          $SC_xd_I8 = xd%dim_2%SM
  904.          $SC_xd_I7 = xd%dim_2%EX
  904.          $SC_xd_I9 = xd%dim_2%LB
  900.          $SC_z2_I0 = z2%dim_1%EX
  900.          $SC_z2_I1 = z2%dim_1%LB
  900.          $SC_z2_I3 = z2%dim_2%SM
  900.          $SC_z2_I2 = z2%dim_2%EX
  900.          $SC_z2_I4 = z2%dim_2%LB
  897.          $I_L897_6 = 0
  897. !dir$ ivdep
  897.          do
  898.             if ( tg(1 + $I_L897_6) <= 273.16000000000003 ) then
  898.                if ( capac(1 + $I_L897_6, 2) >= 1.0e-3 ) then
  900.                   $xz_WR0_R0 = (z2%base_addr)(itype(1 + $I_L897_6), mon(1 + $I_L897_6), 0)
  901.                   $sdep_WR0_R1 = 5.0 * capac(1 + $I_L897_6, 2)
  902.                   $sdep_WR0_R1 = min( $sdep_WR0_R1, 9.4999999999999996e-1 * $xz_WR0_R0 )
  903.                   $d_WR0_R2 = $xz_WR0_R0 + -( ( $xz_WR0_R0 + -$sdep_WR0_R1 ) * ( 1.0/$xz_WR0_R0 * ( $xz_WR0_R0 + -d(1 + $I_L897_6) ) ) )
  903.                   d(1 + $I_L897_6) = $d_WR0_R2
  906.                   rbc(1 + $I_L897_6) = ( $xz_WR0_R0 * rbc(1 + $I_L897_6) * 1.0/( $xz_WR0_R0 + -$sdep_WR0_R1 ) )
  905.                   rdc(1 + $I_L897_6) = ( rdc(1 + $I_L897_6) * 1.0/$xz_WR0_R0 * ( $xz_WR0_R0 + -$sdep_WR0_R1 ) )
  904.                   z0x(1 + $I_L897_6) = ( $xz_WR0_R0 + -$d_WR0_R2 ) * ( z0x(1 + $I_L897_6) * 1.0/( $xz_WR0_R0 + -(xd%base_addr)(itype(1 + $I_L897_6), mon(1 + $I_L897_6), 0) ) )
  904.                endif
  904.             endif
  908.             $I_L897_6 = 1 + $I_L897_6
  907.             if ( $I_L897_6 >= nmax ) exit
  907.          enddo
  907.       endif
  838.       _free( t$1532 )
  909.       return
  909.       end
  909.       
  915.       
  915.       subroutine temres( bps, psb, em, gmt, gmq, psy, rcp, wc, wg, fc, fg, hr, hgdtg, hgdtc, hgdtm, hcdtg, hcdtc, hcdtm, egdtg, egdtc, egdqm, ecdtg, ecdtc, ecdqm, deadtg, deadtc, deadqm, ect, eci, egt, egi, egs, ec, eg, hc, hg, ecidif, egidif, ra, rb, rd, rc, rg, ta, ea, etc, etg, btc, btg, radt, rst, rsoil, hrr, cc, cg, satcap, dtc, dtg, dtm, dqm, thermk, tc, tg, td, capac, qm, tm, psur, dtc3x, nmax, vcover, ncols )
  915.       t$229 = ncols
 1108.       t$1538 = _zla( 0, ncols )
  915.       t$1539 = _zla( 0, ncols )
  915.       t$1540 = 3 * _zla( 0, ncols )
  915.       t$1541 = 2 * _zla( 0, ncols )
  915.       t$1542 = 2 * _zla( 0, ncols )
 1134.       t$1545 = 8 * _zla( 0, ncols )
 1133.       t$1546 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 1133.       t$1548 = t$1546 + 8 * _zla( 0, ncols )
 1135.       t$1549 = 8 * ( 7 + t$1546 + 8 * _zla( 0, ncols ) ) / 8
 1135.       t$1551 = t$1549 + 8 * _zla( 0, ncols )
 1136.       t$1552 = 8 * ( 7 + t$1549 + 8 * _zla( 0, ncols ) ) / 8
 1136.       t$1554 = t$1552 + 8 * _zla( 0, ncols )
 1137.       t$1555 = 8 * ( 7 + t$1552 + 8 * _zla( 0, ncols ) ) / 8
 1137.       t$1557 = t$1555 + 8 * _zla( 0, ncols )
 1138.       t$1558 = 8 * ( 7 + t$1555 + 8 * _zla( 0, ncols ) ) / 8
 1138.       t$1560 = t$1558 + 8 * _zla( 0, ncols )
 1151.       t$1562 = t$1558 + 12 * _zla( 0, ncols )
  915.       t$1563 = 4 * _zla( 0, ncols )
  915.       t$1564 = 20 * _zla( 0, ncols )
 1124.       t$1565 = 8 * ( 7 + t$1558 + 12 * _zla( 0, ncols ) ) / 8
 1124.       t$1567 = t$1565 + 160 * _zla( 0, ncols )
 1145.       t$1568 = 8 * ( 7 + t$1565 + 160 * _zla( 0, ncols ) ) / 8
 1145.       t$1570 = t$1568 + 8 * _zla( 0, ncols )
 1147.       t$1571 = 8 * ( 7 + t$1568 + 8 * _zla( 0, ncols ) ) / 8
 1147.       t$1573 = t$1571 + 8 * _zla( 0, ncols )
 1148.       t$1574 = 8 * ( 7 + t$1571 + 8 * _zla( 0, ncols ) ) / 8
 1148.       t$1576 = t$1574 + 8 * _zla( 0, ncols )
 1149.       t$1577 = 8 * ( 7 + t$1574 + 8 * _zla( 0, ncols ) ) / 8
 1149.       t$1579 = t$1577 + 8 * _zla( 0, ncols )
 1150.       t$1580 = 8 * ( 7 + t$1577 + 8 * _zla( 0, ncols ) ) / 8
 1150.       t$1582 = t$1580 + 8 * _zla( 0, ncols )
 1122.       t$1583 = 8 * ( 7 + t$1580 + 8 * _zla( 0, ncols ) ) / 8
 1122.       t$1585 = t$1583 + 16 * _zla( 0, ncols )
  915.       t$1543 = int( _alloc( t$1583 + 16 * _zla( 0, ncols ) ), 8 )
 1134.       t$1544 = t$1543
 1133.       t$1547 = t$1546 + t$1543
 1135.       t$1550 = t$1549 + t$1543
 1136.       t$1553 = t$1552 + t$1543
 1137.       t$1556 = t$1555 + t$1543
 1138.       t$1559 = t$1558 + t$1543
 1151.       t$1561 = t$1558 + t$1543 + 8 * _zla( 0, ncols )
 1124.       t$1566 = t$1565 + t$1543
 1145.       t$1569 = t$1568 + t$1543
 1147.       t$1572 = t$1571 + t$1543
 1148.       t$1575 = t$1574 + t$1543
 1149.       t$1578 = t$1577 + t$1543
 1150.       t$1581 = t$1580 + t$1543
 1122.       t$1584 = t$1583 + t$1543
 1166.       $tim_S16 = 1.0 + 7.2722050925925924e-5 * dtc3x
 1167.       $dtc3xi_S17 = 1.0/dtc3x
 1170.       if ( ncols > 0 ) then
 1170.          $I_L1170_72 = 0
 1170. !dir$ ivdep
 1170.          do
 1170.             vcover2(1 + $I_L1170_72, 1) = vcover(1 + $I_L1170_72, 1)
 1170.             $I_L1170_72 = 1 + $I_L1170_72
 1170.             if ( $I_L1170_72 >= 2 * ncols ) exit
 1170.          enddo
 1170.       endif
 1172.       if ( nmax > 0 ) then
 1172.          $I_L1172_54 = 0
 1172. !dir$ ivdep
 1172.          do
 1180.             wc(1 + $I_L1172_54) = min( 1.0, ( capac(1 + $I_L1172_54, 1) * 1.0/satcap(1 + $I_L1172_54, 1) ) )
 1187.             wg(1 + $I_L1172_54) = min( 1.0, ( capac(1 + $I_L1172_54, 2) * 1.0/satcap(1 + $I_L1172_54, 2) ) )
 1192.             if ( tg(1 + $I_L1172_54) <= 273.16000000000003 ) then
 1193.                vcover2(1 + $I_L1172_54, 2) = 1.0
 1194.                wg(1 + $I_L1172_54) = min( 1.0, 250.0 * capac(1 + $I_L1172_54, 2) )
 1198.                rst(1 + $I_L1172_54, 2) = rsoil(1 + $I_L1172_54)
 1198.             endif
 1248.             ak(1 + $I_L1172_54) = ( 9.7551264184750155e-5 * 1.0/( bps(1 + $I_L1172_54) * psb(1 + $I_L1172_54) ) )
 1257.             ah(1 + $I_L1172_54) = ( 3.8888888888888891e-8 * 1.0/psb(1 + $I_L1172_54) )
 1262.             cgi(1 + $I_L1172_54) = 1.0/cg(1 + $I_L1172_54)
 1263.             cci(1 + $I_L1172_54) = 1.0/cc(1 + $I_L1172_54)
 1269.             psyi(1 + $I_L1172_54) = ( rcp(1 + $I_L1172_54) * 1.0/psy(1 + $I_L1172_54) )
 1270.             $I_L1172_54 = 1 + $I_L1172_54
 1199.             if ( $I_L1172_54 >= nmax ) exit
 1199.          enddo
 1274.          $I_L1274_56 = 0
 1274. !dir$ ivdep
 1274.          do
 1284.             $d1_S2 = 1.0/rb(1 + $I_L1274_56) + 1.0/ra(1 + $I_L1274_56) + 1.0/rd(1 + $I_L1274_56)
 1295.             $d1i_S3 = ( rcp(1 + $I_L1274_56) * 1.0/$d1_S2 )
 1303.             $ta_WR0_R1 = ( 1.0/$d1_S2 * ( ( bps(1 + $I_L1274_56) * tm(1 + $I_L1274_56) * 1.0/ra(1 + $I_L1274_56) ) + ( tc(1 + $I_L1274_56) * 1.0/rb(1 + $I_L1274_56) ) + ( tg(1 + $I_L1274_56) * 1.0/rd(1 + $I_L1274_56) ) ) )
 1303.             ta(1 + $I_L1274_56) = $ta_WR0_R1
 1314.             hc(1 + $I_L1274_56) = dtc3x * ( rcp(1 + $I_L1274_56) * 1.0/rb(1 + $I_L1274_56) * ( tc(1 + $I_L1274_56) + -$ta_WR0_R1 ) )
 1322.             hg(1 + $I_L1274_56) = dtc3x * ( rcp(1 + $I_L1274_56) * 1.0/rd(1 + $I_L1274_56) * ( tg(1 + $I_L1274_56) + -$ta_WR0_R1 ) )
 1340.             hcdtc(1 + $I_L1274_56) = ( 1.0/ra(1 + $I_L1274_56) + 1.0/rd(1 + $I_L1274_56) ) * ( $d1i_S3 * 1.0/rb(1 + $I_L1274_56) )
 1346.             hcdtg(1 + $I_L1274_56) = -( $d1i_S3 * 1.0/( rd(1 + $I_L1274_56) * rb(1 + $I_L1274_56) ) )
 1361.             hcdtm(1 + $I_L1274_56) = -( bps(1 + $I_L1274_56) * ( $d1i_S3 * 1.0/( ra(1 + $I_L1274_56) * rb(1 + $I_L1274_56) ) ) )
 1369.             hgdtg(1 + $I_L1274_56) = ( 1.0/ra(1 + $I_L1274_56) + 1.0/rb(1 + $I_L1274_56) ) * ( $d1i_S3 * 1.0/rd(1 + $I_L1274_56) )
 1376.             hgdtc(1 + $I_L1274_56) = -( $d1i_S3 * 1.0/( rd(1 + $I_L1274_56) * rb(1 + $I_L1274_56) ) )
 1387.             hgdtm(1 + $I_L1274_56) = -( bps(1 + $I_L1274_56) * ( $d1i_S3 * 1.0/( ra(1 + $I_L1274_56) * rd(1 + $I_L1274_56) ) ) )
 1389.             $I_L1274_56 = 1 + $I_L1274_56
 1274.             if ( $I_L1274_56 >= nmax ) exit
 1274.          enddo
 1396.          $I_L1396_58 = 0
 1396. !dir$ ivdep
 1396.          do
 1397.             $fac1_S5 = vcover2(1 + $I_L1396_58, 1) * ( 1.0 + -thermk(1 + $I_L1396_58) )
 1398.             rcdtc(1 + $I_L1396_58) = 4.5359999999999999e-7 * $fac1_S5 * tc(1 + $I_L1396_58) * tc(1 + $I_L1396_58) * tc(1 + $I_L1396_58)
 1399.             rcdtg(1 + $I_L1396_58) = -2.2679999999999999e-7 * $fac1_S5 * tg(1 + $I_L1396_58) * tg(1 + $I_L1396_58) * tg(1 + $I_L1396_58)
 1400.             rgdtc(1 + $I_L1396_58) = -2.2679999999999999e-7 * $fac1_S5 * tc(1 + $I_L1396_58) * tc(1 + $I_L1396_58) * tc(1 + $I_L1396_58)
 1401.             rgdtg(1 + $I_L1396_58) = 2.2679999999999999e-7 * tg(1 + $I_L1396_58) * tg(1 + $I_L1396_58) * tg(1 + $I_L1396_58)
 1402.             $I_L1396_58 = 1 + $I_L1396_58
 1396.             if ( $I_L1396_58 >= nmax ) exit
 1396.          enddo
 1403.          $I_L1403_60 = 0
 1403. !dir$ ivdep
 1403.          do
 1408.             $hr_WR0_R2 = 1.0 + -fg(1 + $I_L1403_60) + fg(1 + $I_L1403_60) * hrr(1 + $I_L1403_60)
 1408.             hr(1 + $I_L1403_60) = $hr_WR0_R2
 1412.             $rc_WR0_R3 = 2.0 * rb(1 + $I_L1403_60) + fc(1 + $I_L1403_60) * rst(1 + $I_L1403_60, 1)
 1412.             rc(1 + $I_L1403_60) = $rc_WR0_R3
 1418.             $coc_S10 = ( 1.0/$rc_WR0_R3 * ( 1.0 + -wc(1 + $I_L1403_60) ) ) + ( 5.0e-1 * wc(1 + $I_L1403_60) * 1.0/rb(1 + $I_L1403_60) )
 1422.             $rg_WR0_R4 = fg(1 + $I_L1403_60) * rst(1 + $I_L1403_60, 2)
 1422.             rg(1 + $I_L1403_60) = $rg_WR0_R4
 1424.             $rsurf_S7 = fg(1 + $I_L1403_60) * rsoil(1 + $I_L1403_60)
 1434.             $cog1_S11 = ( vcover2(1 + $I_L1403_60, 2) * 1.0/( $rg_WR0_R4 + rd(1 + $I_L1403_60) ) * ( 1.0 + -wg(1 + $I_L1403_60) ) ) + $hr_WR0_R2 * ( vcover2(1 + $I_L1403_60, 2) * 1.0/( 44.0 + $rsurf_S7 + rd(1 + $I_L1403_60) ) ) + $hr_WR0_R2 * ( ( 1.0 + -vcover2(1 + $I_L1403_60, 2) ) * 1.0/( $rsurf_S7 + rd(1 + $I_L1403_60) ) )
 1442.             $cog2_S8 = ( vcover2(1 + $I_L1403_60, 2) * 1.0/( $rg_WR0_R4 + rd(1 + $I_L1403_60) ) * ( 1.0 + -wg(1 + $I_L1403_60) ) ) + ( vcover2(1 + $I_L1403_60, 2) * 1.0/( 44.0 + $rsurf_S7 + rd(1 + $I_L1403_60) ) ) + ( ( 1.0 + -vcover2(1 + $I_L1403_60, 2) ) * 1.0/( $rsurf_S7 + rd(1 + $I_L1403_60) ) )
 1457.             $cog2_S9 = $cog2_S8 + vcover2(1 + $I_L1403_60, 2) * ( wg(1 + $I_L1403_60) * 1.0/rd(1 + $I_L1403_60) )
 1463.             $d2_S13 = $cog2_S9 + $coc_S10 + 1.0/ra(1 + $I_L1403_60)
 1451.             $cog1_S12 = $cog1_S11 + vcover2(1 + $I_L1403_60, 2) * ( wg(1 + $I_L1403_60) * 1.0/rd(1 + $I_L1403_60) )
 1469.             $top_S14 = ( em(1 + $I_L1403_60) * 1.0/ra(1 + $I_L1403_60) ) + $coc_S10 * etc(1 + $I_L1403_60) + $cog1_S12 * etg(1 + $I_L1403_60)
 1471.             ea(1 + $I_L1403_60) = ( $top_S14 * 1.0/$d2_S13 )
 1490.             ec(1 + $I_L1403_60) = dtc3x * $coc_S10 * psyi(1 + $I_L1403_60) * ( etc(1 + $I_L1403_60) + -( $top_S14 * 1.0/$d2_S13 ) )
 1500.             eg(1 + $I_L1403_60) = dtc3x * psyi(1 + $I_L1403_60) * ( -( $cog2_S9 * ( $top_S14 * 1.0/$d2_S13 ) ) + $cog1_S12 * etg(1 + $I_L1403_60) )
 1502.             $deadtc_WR0_R5 = ( $coc_S10 * btc(1 + $I_L1403_60) * 1.0/$d2_S13 )
 1502.             deadtc(1 + $I_L1403_60) = $deadtc_WR0_R5
 1504.             $deadtg_WR0_R6 = ( $cog1_S12 * btg(1 + $I_L1403_60) * 1.0/$d2_S13 )
 1504.             deadtg(1 + $I_L1403_60) = $deadtg_WR0_R6
 1510.             $deadqm_WR0_R7 = ( 6.22e-1 * psur(1 + $I_L1403_60) * 1.0/( $d2_S13 * ra(1 + $I_L1403_60) * ( 6.22e-1 + qm(1 + $I_L1403_60) ) * ( 6.22e-1 + qm(1 + $I_L1403_60) ) ) )
 1510.             deadqm(1 + $I_L1403_60) = $deadqm_WR0_R7
 1512.             ecdtc(1 + $I_L1403_60) = $coc_S10 * psyi(1 + $I_L1403_60) * ( btc(1 + $I_L1403_60) + -$deadtc_WR0_R5 )
 1514.             ecdtg(1 + $I_L1403_60) = -( $coc_S10 * $deadtg_WR0_R6 * psyi(1 + $I_L1403_60) )
 1516.             ecdqm(1 + $I_L1403_60) = -( $coc_S10 * $deadqm_WR0_R7 * psyi(1 + $I_L1403_60) )
 1518.             egdtg(1 + $I_L1403_60) = psyi(1 + $I_L1403_60) * ( -( $cog2_S9 * $deadtg_WR0_R6 ) + $cog1_S12 * btg(1 + $I_L1403_60) )
 1520.             egdtc(1 + $I_L1403_60) = -( $cog2_S9 * $deadtc_WR0_R5 * psyi(1 + $I_L1403_60) )
 1522.             egdqm(1 + $I_L1403_60) = -( $cog2_S9 * $deadqm_WR0_R7 * psyi(1 + $I_L1403_60) )
 1524.             $I_L1403_60 = 1 + $I_L1403_60
 1403.             if ( $I_L1403_60 >= nmax ) exit
 1403.          enddo
 1529.          $I_L1529_62 = 0
 1529. !dir$ ivdep
 1529.          do
 1548.             pblsib(1 + $I_L1529_62, 1, 1) = $tim_S16 + dtc3x * cgi(1 + $I_L1529_62) * ( egdtg(1 + $I_L1529_62) + hgdtg(1 + $I_L1529_62) + rgdtg(1 + $I_L1529_62) )
 1549.             pblsib(1 + $I_L1529_62, 1, 2) = dtc3x * cgi(1 + $I_L1529_62) * ( egdtc(1 + $I_L1529_62) + hgdtc(1 + $I_L1529_62) + rgdtc(1 + $I_L1529_62) )
 1550.             pblsib(1 + $I_L1529_62, 1, 3) = dtc3x * cgi(1 + $I_L1529_62) * hgdtm(1 + $I_L1529_62)
 1551.             pblsib(1 + $I_L1529_62, 1, 4) = dtc3x * cgi(1 + $I_L1529_62) * egdqm(1 + $I_L1529_62)
 1555.             pblsib(1 + $I_L1529_62, 2, 1) = dtc3x * cci(1 + $I_L1529_62) * ( ecdtg(1 + $I_L1529_62) + hcdtg(1 + $I_L1529_62) + rcdtg(1 + $I_L1529_62) )
 1557.             pblsib(1 + $I_L1529_62, 2, 2) = 1.0 + dtc3x * cci(1 + $I_L1529_62) * ( ecdtc(1 + $I_L1529_62) + hcdtc(1 + $I_L1529_62) + rcdtc(1 + $I_L1529_62) )
 1564.             pblsib(1 + $I_L1529_62, 2, 3) = dtc3x * cci(1 + $I_L1529_62) * hcdtm(1 + $I_L1529_62)
 1566.             pblsib(1 + $I_L1529_62, 2, 4) = dtc3x * cci(1 + $I_L1529_62) * ecdqm(1 + $I_L1529_62)
 1576.             pblsib(1 + $I_L1529_62, 3, 1) = -( dtc3x * ak(1 + $I_L1529_62) * ( hgdtg(1 + $I_L1529_62) + hcdtg(1 + $I_L1529_62) ) )
 1578.             pblsib(1 + $I_L1529_62, 3, 2) = -( dtc3x * ak(1 + $I_L1529_62) * ( hgdtc(1 + $I_L1529_62) + hcdtc(1 + $I_L1529_62) ) )
 1638.             pblsib(1 + $I_L1529_62, 3, 3) = gmt(1 + $I_L1529_62, 2) + -( dtc3x * ak(1 + $I_L1529_62) * ( hgdtm(1 + $I_L1529_62) + hcdtm(1 + $I_L1529_62) ) )
 1639.             pblsib(1 + $I_L1529_62, 3, 4) = 0.0
 1648.             pblsib(1 + $I_L1529_62, 4, 1) = -( dtc3x * ah(1 + $I_L1529_62) * ( egdtg(1 + $I_L1529_62) + ecdtg(1 + $I_L1529_62) ) )
 1649.             pblsib(1 + $I_L1529_62, 4, 2) = -( dtc3x * ah(1 + $I_L1529_62) * ( egdtc(1 + $I_L1529_62) + ecdtc(1 + $I_L1529_62) ) )
 1650.             pblsib(1 + $I_L1529_62, 4, 3) = 0.0
 1652.             pblsib(1 + $I_L1529_62, 4, 4) = gmq(1 + $I_L1529_62, 2) + -( dtc3x * ah(1 + $I_L1529_62) * ( egdqm(1 + $I_L1529_62) + ecdqm(1 + $I_L1529_62) ) )
 1684.             pblsib(1 + $I_L1529_62, 1, 5) = -7.2722050925925924e-5 * ( tg(1 + $I_L1529_62) + -td(1 + $I_L1529_62) ) + cgi(1 + $I_L1529_62) * ( radt(1 + $I_L1529_62, 2) + -( $dtc3xi_S17 * ( eg(1 + $I_L1529_62) + hg(1 + $I_L1529_62) ) ) )
 1705.             pblsib(1 + $I_L1529_62, 2, 5) = cci(1 + $I_L1529_62) * ( radt(1 + $I_L1529_62, 1) + -( $dtc3xi_S17 * ( ec(1 + $I_L1529_62) + hc(1 + $I_L1529_62) ) ) )
 1740.             pblsib(1 + $I_L1529_62, 3, 5) = gmt(1 + $I_L1529_62, 3) + $dtc3xi_S17 * ak(1 + $I_L1529_62) * ( hg(1 + $I_L1529_62) + hc(1 + $I_L1529_62) )
 1748.             pblsib(1 + $I_L1529_62, 4, 5) = gmq(1 + $I_L1529_62, 3) + $dtc3xi_S17 * ah(1 + $I_L1529_62) * ( eg(1 + $I_L1529_62) + ec(1 + $I_L1529_62) )
 1749.             $I_L1529_62 = 1 + $I_L1529_62
 1529.             if ( $I_L1529_62 >= nmax ) exit
 1529.          enddo
 1753.          $I_L1753_64 = 0
 1753. !dir$ ivdep
 1753.          do
 1754.             $pblsib_WR0_R8 = pblsib(1 + $I_L1753_64, 2, 2) + -( pblsib(1 + $I_L1753_64, 2, 1) * ( pblsib(1 + $I_L1753_64, 1, 2) * 1.0/pblsib(1 + $I_L1753_64, 1, 1) ) )
 1754.             pblsib(1 + $I_L1753_64, 2, 2) = $pblsib_WR0_R8
 1755.             $pblsib_WR0_R9 = pblsib(1 + $I_L1753_64, 2, 3) + -( pblsib(1 + $I_L1753_64, 2, 1) * ( pblsib(1 + $I_L1753_64, 1, 3) * 1.0/pblsib(1 + $I_L1753_64, 1, 1) ) )
 1755.             pblsib(1 + $I_L1753_64, 2, 3) = $pblsib_WR0_R9
 1756.             $pblsib_WR0_R10 = pblsib(1 + $I_L1753_64, 2, 4) + -( pblsib(1 + $I_L1753_64, 2, 1) * ( pblsib(1 + $I_L1753_64, 1, 4) * 1.0/pblsib(1 + $I_L1753_64, 1, 1) ) )
 1756.             pblsib(1 + $I_L1753_64, 2, 4) = $pblsib_WR0_R10
 1757.             $pblsib_WR0_R11 = pblsib(1 + $I_L1753_64, 2, 5) + -( pblsib(1 + $I_L1753_64, 2, 1) * ( pblsib(1 + $I_L1753_64, 1, 5) * 1.0/pblsib(1 + $I_L1753_64, 1, 1) ) )
 1758.             $pblsib_WR0_R12 = pblsib(1 + $I_L1753_64, 3, 2) + -( pblsib(1 + $I_L1753_64, 3, 1) * ( pblsib(1 + $I_L1753_64, 1, 2) * 1.0/pblsib(1 + $I_L1753_64, 1, 1) ) )
 1758.             pblsib(1 + $I_L1753_64, 3, 2) = $pblsib_WR0_R12
 1759.             $pblsib_WR0_R13 = pblsib(1 + $I_L1753_64, 3, 3) + -( pblsib(1 + $I_L1753_64, 3, 1) * ( pblsib(1 + $I_L1753_64, 1, 3) * 1.0/pblsib(1 + $I_L1753_64, 1, 1) ) )
 1760.             $pblsib_WR0_R14 = pblsib(1 + $I_L1753_64, 3, 4) + -( pblsib(1 + $I_L1753_64, 3, 1) * ( pblsib(1 + $I_L1753_64, 1, 4) * 1.0/pblsib(1 + $I_L1753_64, 1, 1) ) )
 1761.             $pblsib_WR0_R15 = pblsib(1 + $I_L1753_64, 3, 5) + -( pblsib(1 + $I_L1753_64, 3, 1) * ( pblsib(1 + $I_L1753_64, 1, 5) * 1.0/pblsib(1 + $I_L1753_64, 1, 1) ) )
 1762.             $pblsib_WR0_R16 = pblsib(1 + $I_L1753_64, 4, 2) + -( pblsib(1 + $I_L1753_64, 4, 1) * ( pblsib(1 + $I_L1753_64, 1, 2) * 1.0/pblsib(1 + $I_L1753_64, 1, 1) ) )
 1762.             pblsib(1 + $I_L1753_64, 4, 2) = $pblsib_WR0_R16
 1763.             $pblsib_WR0_R17 = pblsib(1 + $I_L1753_64, 4, 3) + -( pblsib(1 + $I_L1753_64, 4, 1) * ( pblsib(1 + $I_L1753_64, 1, 3) * 1.0/pblsib(1 + $I_L1753_64, 1, 1) ) )
 1764.             $pblsib_WR0_R18 = pblsib(1 + $I_L1753_64, 4, 4) + -( pblsib(1 + $I_L1753_64, 4, 1) * ( pblsib(1 + $I_L1753_64, 1, 4) * 1.0/pblsib(1 + $I_L1753_64, 1, 1) ) )
 1765.             $pblsib_WR0_R19 = pblsib(1 + $I_L1753_64, 4, 5) + -( pblsib(1 + $I_L1753_64, 4, 1) * ( pblsib(1 + $I_L1753_64, 1, 5) * 1.0/pblsib(1 + $I_L1753_64, 1, 1) ) )
 1766.             $pblsib_WR0_R13 = $pblsib_WR0_R13 + -( $pblsib_WR0_R12 * ( $pblsib_WR0_R9 * 1.0/$pblsib_WR0_R8 ) )
 1766.             pblsib(1 + $I_L1753_64, 3, 3) = $pblsib_WR0_R13
 1767.             $pblsib_WR0_R14 = $pblsib_WR0_R14 + -( $pblsib_WR0_R12 * ( $pblsib_WR0_R10 * 1.0/$pblsib_WR0_R8 ) )
 1767.             pblsib(1 + $I_L1753_64, 3, 4) = $pblsib_WR0_R14
 1769.             $pblsib_WR0_R17 = $pblsib_WR0_R17 + -( $pblsib_WR0_R16 * ( $pblsib_WR0_R9 * 1.0/$pblsib_WR0_R8 ) )
 1769.             pblsib(1 + $I_L1753_64, 4, 3) = $pblsib_WR0_R17
 1770.             $pblsib_WR0_R18 = $pblsib_WR0_R18 + -( $pblsib_WR0_R16 * ( $pblsib_WR0_R10 * 1.0/$pblsib_WR0_R8 ) )
 1772.             $pblsib_WR0_R18 = $pblsib_WR0_R18 + -( $pblsib_WR0_R17 * ( $pblsib_WR0_R14 * 1.0/$pblsib_WR0_R13 ) )
 1772.             pblsib(1 + $I_L1753_64, 4, 4) = $pblsib_WR0_R18
 1768.             $pblsib_WR0_R15 = $pblsib_WR0_R15 + -( $pblsib_WR0_R12 * ( $pblsib_WR0_R11 * 1.0/$pblsib_WR0_R8 ) )
 1771.             $pblsib_WR0_R19 = $pblsib_WR0_R19 + -( $pblsib_WR0_R16 * ( $pblsib_WR0_R11 * 1.0/$pblsib_WR0_R8 ) )
 1775.             $pblsib_WR0_R19 = ( 1.0/$pblsib_WR0_R18 * ( $pblsib_WR0_R19 + -( $pblsib_WR0_R17 * ( $pblsib_WR0_R15 * 1.0/$pblsib_WR0_R13 ) ) ) )
 1775.             pblsib(1 + $I_L1753_64, 4, 5) = $pblsib_WR0_R19
 1777.             $pblsib_WR0_R15 = ( $pblsib_WR0_R15 * 1.0/$pblsib_WR0_R13 ) + -( $pblsib_WR0_R19 * ( $pblsib_WR0_R14 * 1.0/$pblsib_WR0_R13 ) )
 1777.             pblsib(1 + $I_L1753_64, 3, 5) = $pblsib_WR0_R15
 1780.             $pblsib_WR0_R11 = -( $pblsib_WR0_R19 * ( $pblsib_WR0_R10 * 1.0/$pblsib_WR0_R8 ) ) + ( $pblsib_WR0_R11 * 1.0/$pblsib_WR0_R8 ) + -( $pblsib_WR0_R15 * ( $pblsib_WR0_R9 * 1.0/$pblsib_WR0_R8 ) )
 1780.             pblsib(1 + $I_L1753_64, 2, 5) = $pblsib_WR0_R11
 1784.             pblsib(1 + $I_L1753_64, 1, 5) = -( $pblsib_WR0_R19 * ( pblsib(1 + $I_L1753_64, 1, 4) * 1.0/pblsib(1 + $I_L1753_64, 1, 1) ) ) + -( $pblsib_WR0_R15 * ( pblsib(1 + $I_L1753_64, 1, 3) * 1.0/pblsib(1 + $I_L1753_64, 1, 1) ) ) + ( pblsib(1 + $I_L1753_64, 1, 5) * 1.0/pblsib(1 + $I_L1753_64, 1, 1) ) + -( $pblsib_WR0_R11 * ( pblsib(1 + $I_L1753_64, 1, 2) * 1.0/pblsib(1 + $I_L1753_64, 1, 1) ) )
 1788.             $I_L1753_64 = 1 + $I_L1753_64
 1753.             if ( $I_L1753_64 >= nmax ) exit
 1753.          enddo
 1789.          $I_L1789_66 = 0
 1789. !dir$ ivdep
 1789.          do
 1790.             $dtg_WR0_R20 = dtc3x * pblsib(1 + $I_L1789_66, 1, 5)
 1790.             dtg(1 + $I_L1789_66) = $dtg_WR0_R20
 1791.             $dtc_WR0_R21 = dtc3x * pblsib(1 + $I_L1789_66, 2, 5)
 1791.             dtc(1 + $I_L1789_66) = $dtc_WR0_R21
 1792.             $dtm_WR0_R22 = dtc3x * pblsib(1 + $I_L1789_66, 3, 5)
 1792.             dtm(1 + $I_L1789_66) = $dtm_WR0_R22
 1793.             $dqm_WR0_R23 = dtc3x * pblsib(1 + $I_L1789_66, 4, 5)
 1793.             dqm(1 + $I_L1789_66) = $dqm_WR0_R23
 1799.             ecpot(1 + $I_L1789_66) = -( $dqm_WR0_R23 * deadqm(1 + $I_L1789_66) ) + -( $dtg_WR0_R20 * deadtg(1 + $I_L1789_66) ) + ( etc(1 + $I_L1789_66) + -ea(1 + $I_L1789_66) ) + $dtc_WR0_R21 * ( btc(1 + $I_L1789_66) + -deadtc(1 + $I_L1789_66) )
 1801.             egpot(1 + $I_L1789_66) = -( $dtc_WR0_R21 * deadtc(1 + $I_L1789_66) ) + ( etg(1 + $I_L1789_66) + -ea(1 + $I_L1789_66) ) + -( $dqm_WR0_R23 * deadqm(1 + $I_L1789_66) ) + $dtg_WR0_R20 * ( btg(1 + $I_L1789_66) + -deadtg(1 + $I_L1789_66) )
 1795.             hg(1 + $I_L1789_66) = hg(1 + $I_L1789_66) + dtc3x * ( $dtm_WR0_R22 * hgdtm(1 + $I_L1789_66) + $dtc_WR0_R21 * hgdtc(1 + $I_L1789_66) + $dtg_WR0_R20 * hgdtg(1 + $I_L1789_66) )
 1794.             hc(1 + $I_L1789_66) = hc(1 + $I_L1789_66) + dtc3x * ( $dtm_WR0_R22 * hcdtm(1 + $I_L1789_66) + $dtc_WR0_R21 * hcdtc(1 + $I_L1789_66) + $dtg_WR0_R20 * hcdtg(1 + $I_L1789_66) )
 1803.             $I_L1789_66 = 1 + $I_L1789_66
 1789.             if ( $I_L1789_66 >= nmax ) exit
 1789.          enddo
 1810.          $I_L1810_68 = 0
 1810. !dir$ ivdep
 1810.          do
 1811.             $eci_WR0_R24 = dtc3x * ( 5.0e-1 * psyi(1 + $I_L1810_68) * ecpot(1 + $I_L1810_68) * wc(1 + $I_L1810_68) * 1.0/rb(1 + $I_L1810_68) )
 1812.             $ecidif_WR0_R25 = max( 0.0, $eci_WR0_R24 + -2520000000.0 * capac(1 + $I_L1810_68, 1) )
 1812.             ecidif(1 + $I_L1810_68) = $ecidif_WR0_R25
 1815.             $egi_WR0_R26 = dtc3x * ( psyi(1 + $I_L1810_68) * egpot(1 + $I_L1810_68) * vcover2(1 + $I_L1810_68, 2) * wg(1 + $I_L1810_68) * 1.0/rd(1 + $I_L1810_68) )
 1816.             $egidif_WR0_R27 = max( 0.0, $egi_WR0_R26 + -2520000000.0 * capac(1 + $I_L1810_68, 2) )
 1816.             egidif(1 + $I_L1810_68) = $egidif_WR0_R27
 1822.             $rsurf_S21 = fg(1 + $I_L1810_68) * rsoil(1 + $I_L1810_68)
 1823.             $coct_S23 = ( 1.0/rc(1 + $I_L1810_68) * ( 1.0 + -wc(1 + $I_L1810_68) ) )
 1824.             $cogt_S24 = ( vcover2(1 + $I_L1810_68, 2) * 1.0/( rd(1 + $I_L1810_68) + rg(1 + $I_L1810_68) ) * ( 1.0 + -wg(1 + $I_L1810_68) ) )
 1825.             $cogs1_S22 = ( hr(1 + $I_L1810_68) * ( 1.0 + -vcover2(1 + $I_L1810_68, 2) ) * 1.0/( $rsurf_S21 + rd(1 + $I_L1810_68) ) ) + hr(1 + $I_L1810_68) * ( vcover2(1 + $I_L1810_68, 2) * 1.0/( 44.0 + $rsurf_S21 + rd(1 + $I_L1810_68) ) )
 1827.             $cogs2_S25 = ( $cogs1_S22 * 1.0/hr(1 + $I_L1810_68) )
 1828.             $ect_WR0_R28 = dtc3x * $coct_S23 * ecpot(1 + $I_L1810_68) * psyi(1 + $I_L1810_68)
 1828.             ect(1 + $I_L1810_68) = $ect_WR0_R28
 1814.             $eci_WR0_R24 = min( $eci_WR0_R24, 2520000000.0 * capac(1 + $I_L1810_68, 1) )
 1814.             eci(1 + $I_L1810_68) = $eci_WR0_R24
 1829.             ec(1 + $I_L1810_68) = $eci_WR0_R24 + $ect_WR0_R28
 1830.             $egt_WR0_R29 = dtc3x * $cogt_S24 * psyi(1 + $I_L1810_68) * egpot(1 + $I_L1810_68)
 1830.             egt(1 + $I_L1810_68) = $egt_WR0_R29
 1831.             $egs_WR0_R30 = -( $cogs2_S25 * ( ea(1 + $I_L1810_68) + dtc(1 + $I_L1810_68) * deadtc(1 + $I_L1810_68) + dqm(1 + $I_L1810_68) * deadqm(1 + $I_L1810_68) + dtg(1 + $I_L1810_68) * deadtg(1 + $I_L1810_68) ) ) + $cogs1_S22 * ( etg(1 + $I_L1810_68) + dtg(1 + $I_L1810_68) * btg(1 + $I_L1810_68) )
 1834.             $egs_WR0_R30 = dtc3x * $egs_WR0_R30 * psyi(1 + $I_L1810_68)
 1834.             egs(1 + $I_L1810_68) = $egs_WR0_R30
 1818.             $egi_WR0_R26 = min( $egi_WR0_R26, 2520000000.0 * capac(1 + $I_L1810_68, 2) )
 1818.             egi(1 + $I_L1810_68) = $egi_WR0_R26
 1835.             eg(1 + $I_L1810_68) = $egs_WR0_R30 + $egi_WR0_R26 + $egt_WR0_R29
 1817.             hg(1 + $I_L1810_68) = $egidif_WR0_R27 + hg(1 + $I_L1810_68)
 1813.             hc(1 + $I_L1810_68) = $ecidif_WR0_R25 + hc(1 + $I_L1810_68)
 1837.             $I_L1810_68 = 1 + $I_L1810_68
 1810.             if ( $I_L1810_68 >= nmax ) exit
 1810.          enddo
 1841.          $I_L1841_70 = 0
 1841. !dir$ ivdep
 1841.          do
 1844.             $ecf_S27 = sign( 1.0, ecpot(1 + $I_L1841_70) ) * ( -1.0 + 2.0 * fc(1 + $I_L1841_70) )
 1845.             $egf_S28 = sign( 1.0, egpot(1 + $I_L1841_70) ) * ( -1.0 + 2.0 * fg(1 + $I_L1841_70) )
 1842.             radt(1 + $I_L1841_70, 1) = radt(1 + $I_L1841_70, 1) + -( dtg(1 + $I_L1841_70) * rcdtg(1 + $I_L1841_70) ) + -( dtc(1 + $I_L1841_70) * rcdtc(1 + $I_L1841_70) )
 1843.             radt(1 + $I_L1841_70, 2) = radt(1 + $I_L1841_70, 2) + -( dtg(1 + $I_L1841_70) * rgdtg(1 + $I_L1841_70) ) + -( dtc(1 + $I_L1841_70) * rgdtc(1 + $I_L1841_70) )
 1846.             if ( $ecf_S27 <= 0.0 ) then
 1847.                hc(1 + $I_L1841_70) = ect(1 + $I_L1841_70) + hc(1 + $I_L1841_70) + eci(1 + $I_L1841_70)
 1848.                eci(1 + $I_L1841_70) = 0.0
 1849.                ect(1 + $I_L1841_70) = 0.0
 1850.                ec(1 + $I_L1841_70) = 0.0
 1850.             endif
 1852.             if ( $egf_S28 <= 0.0 ) then
 1853.                hg(1 + $I_L1841_70) = egs(1 + $I_L1841_70) + egt(1 + $I_L1841_70) + hg(1 + $I_L1841_70) + egi(1 + $I_L1841_70)
 1854.                egi(1 + $I_L1841_70) = 0.0
 1855.                egt(1 + $I_L1841_70) = 0.0
 1856.                egs(1 + $I_L1841_70) = 0.0
 1857.                eg(1 + $I_L1841_70) = 0.0
 1857.             endif
 1859.             $I_L1841_70 = 1 + $I_L1841_70
 1858.             if ( $I_L1841_70 >= nmax ) exit
 1858.          enddo
 1858.       endif
  915.       _free( t$1543 )
 1860.       return
 1860.       end
 1860.       
 1868.       
 1868.       subroutine cut( icheck, em, rhoair, rcp, wc, wg, fc, fg, hr, ra, rb, rd, rc, rg, ea, etc, etg, rst, rsoil, vcover, nmax, ncols )
 1868.       t$317 = ncols
 1939.       t$1586 = _zla( 0, ncols )
 1868.       t$1587 = _zla( 0, ncols )
 1868.       t$1588 = 2 * _zla( 0, ncols )
 1951.       if ( nmax > 0 ) then
 1951.          $I_L1951_6 = 0
 1951. !dir$ ivdep
 1951.          do
 1952.             if ( icheck(1 + $I_L1951_6) == 1 ) then
 1953.                rcp(1 + $I_L1951_6) = 1004.6 * rhoair(1 + $I_L1951_6)
 1954.                $rc_WR0_R0 = rb(1 + $I_L1951_6) + rb(1 + $I_L1951_6) * fc(1 + $I_L1951_6) + fc(1 + $I_L1951_6) * rst(1 + $I_L1951_6, 1)
 1954.                rc(1 + $I_L1951_6) = $rc_WR0_R0
 1955.                $coc_S6 = ( 1.0/$rc_WR0_R0 * ( 1.0 + -wc(1 + $I_L1951_6) ) ) + ( 5.0e-1 * wc(1 + $I_L1951_6) * 1.0/rb(1 + $I_L1951_6) )
 1956.                $rg_WR0_R1 = fg(1 + $I_L1951_6) * rst(1 + $I_L1951_6, 2)
 1956.                rg(1 + $I_L1951_6) = $rg_WR0_R1
 1957.                $rsurf_S1 = fg(1 + $I_L1951_6) * rsoil(1 + $I_L1951_6)
 1958.                $tem_S2 = ( vcover(1 + $I_L1951_6, 2) * 1.0/( $rg_WR0_R1 + rd(1 + $I_L1951_6) ) * ( 1.0 + -wg(1 + $I_L1951_6) ) )
 1959.                $cog2_S3 = $tem_S2 + ( ( 1.0 + -vcover(1 + $I_L1951_6, 2) ) * 1.0/( $rsurf_S1 + rd(1 + $I_L1951_6) ) ) + ( vcover(1 + $I_L1951_6, 2) * 1.0/( 44.0 + $rsurf_S1 + rd(1 + $I_L1951_6) ) )
 1962.                $cog1_S7 = $tem_S2 + hr(1 + $I_L1951_6) * ( $cog2_S3 + -$tem_S2 )
 1963.                $xnum_S4 = vcover(1 + $I_L1951_6, 2) * ( wg(1 + $I_L1951_6) * 1.0/rd(1 + $I_L1951_6) )
 1966.                $d2_S9 = $coc_S6 + ( $cog2_S3 + $xnum_S4 ) + 1.0/ra(1 + $I_L1951_6)
 1967.                $top_S10 = ( em(1 + $I_L1951_6) * 1.0/ra(1 + $I_L1951_6) ) + $coc_S6 * etc(1 + $I_L1951_6) + etg(1 + $I_L1951_6) * ( $xnum_S4 + $cog1_S7 )
 1971.                ea(1 + $I_L1951_6) = ( $top_S10 * 1.0/$d2_S9 )
 1971.             endif
 1973.             $I_L1951_6 = 1 + $I_L1951_6
 1972.             if ( $I_L1951_6 >= nmax ) exit
 1972.          enddo
 1972.       endif
 1974.       return
 1974.       end
 1974.       
 1984.       
 1984.       subroutine rbrd( rb, rd, tcta, tgta, u2, tg, rdc, rbc, itype, z2, mon, nmax, ncols, zlt2 )
 1984.       t$339 = ncols
 2037.       t$1589 = _zla( 0, ncols )
 1984.       t$1590 = _zla( 0, ncols )
 1984.       t$1591 = 2 * _zla( 0, ncols )
 2045.       t$1594 = 8 * _zla( 0, ncols )
 2044.       t$1595 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 2044.       t$1597 = t$1595 + 8 * _zla( 0, ncols )
 1984.       t$1592 = int( _alloc( t$1595 + 8 * _zla( 0, ncols ) ), 8 )
 2045.       t$1593 = t$1592
 2044.       t$1596 = t$1595 + t$1592
 2051.       if ( nmax > 0 ) then
 2051.          $I_L2051_6 = 0
 2051. !dir$ ivdep
 2051.          do
 2052.             $ntyp_S1 = itype(1 + $I_L2051_6)
 2053.             if ( tcta(1 + $I_L2051_6) > 0.0 ) then
 2054.                temdif(1 + $I_L2051_6) = 1.0000000000000001e-1 + tcta(1 + $I_L2051_6)
 2054.             else
 2056.                temdif(1 + $I_L2051_6) = 1.0000000000000001e-1
 2056.             endif
 2058.             rb(1 + $I_L2051_6) = 1.0/( ( 1.0/rbc(1 + $I_L2051_6) * _sqrt( u2(1 + $I_L2051_6) ) ) + 4.0000000000000001e-3 * zlt2(1 + $I_L2051_6, 1) )
 2059.             if ( tgta(1 + $I_L2051_6) > 0 ) then
 2060.                temdif(1 + $I_L2051_6) = 1.0000000000000001e-1 + tgta(1 + $I_L2051_6)
 2060.             else
 2062.                temdif(1 + $I_L2051_6) = 1.0000000000000001e-1
 2062.             endif
 2064.             $fih_WR0_R0 = _sqrt( 1.0 + ( 88.290000000000006 * temdif(1 + $I_L2051_6) * z2($ntyp_S1, mon(1 + $I_L2051_6)) * 1.0/( u2(1 + $I_L2051_6) * u2(1 + $I_L2051_6) * tg(1 + $I_L2051_6) ) ) )
 2066.             rd(1 + $I_L2051_6) = ( rdc(1 + $I_L2051_6) * 1.0/( $fih_WR0_R0 * u2(1 + $I_L2051_6) ) )
 2067.             $I_L2051_6 = 1 + $I_L2051_6
 2063.             if ( $I_L2051_6 >= nmax ) exit
 2063.          enddo
 2063.       endif
 1984.       _free( t$1592 )
 2068.       return
 2068.       end
 2068.       
 2075.       
 2075.       subroutine vntlax( ustarn, icheck, bps, dzm, cu, cuni, ctni, ustar, ra, ta, u2, tm, um, vm, d, z0, itype, z2, mon, nmax, jstneu, ncols )
 2075.       t$355 = ncols
 2167.       t$1598 = _zla( 0, ncols )
 2173.       t$1601 = 8 * _zla( 0, ncols )
 2075.       t$1599 = int( _alloc( 8 * _zla( 0, ncols ) ), 8 )
 2173.       t$1600 = t$1599
 2213.       if ( nmax > 0 ) then
 2213.          $I_L2213_18 = 0
 2213. !dir$ ivdep
 2213.          do
 2214.             if ( icheck(1 + $I_L2213_18) == 1 ) then
 2215.                $speedm_WR0_R0 = _sqrt( vm(1 + $I_L2213_18) * vm(1 + $I_L2213_18) + um(1 + $I_L2213_18) * um(1 + $I_L2213_18) )
 2216.                $speedm_WR0_R0 = max( 2.0, $speedm_WR0_R0 )
 2216.                speedm(1 + $I_L2213_18) = $speedm_WR0_R0
 2216.             endif
 2218.             $I_L2213_18 = 1 + $I_L2213_18
 2217.             if ( $I_L2213_18 >= nmax ) exit
 2217.          enddo
 2217.       endif
 2224.       if ( jstneu /= .false. ) then
 2225.          if ( nmax > 0 ) then
 2225.             $I_L2225_22 = 0
 2225. !dir$ ivdep
 2225.             do
 2226.                $ntyp_S2 = itype(1 + $I_L2225_22)
 2227.                $zl_S3 = z2($ntyp_S2, mon(1 + $I_L2225_22)) + 11.785 * z0(1 + $I_L2225_22)
 2228.                $cuni_WR0_R1 = 2.5 * log( ( 1.0/z0(1 + $I_L2225_22) * ( dzm(1 + $I_L2225_22) + -d(1 + $I_L2225_22) ) ) )
 2228.                cuni(1 + $I_L2225_22) = $cuni_WR0_R1
 2229.                $ustarn_WR0_R2 = ( speedm(1 + $I_L2225_22) * 1.0/$cuni_WR0_R1 )
 2229.                ustarn(1 + $I_L2225_22) = $ustarn_WR0_R2
 2230.                if ( $zl_S3 < dzm(1 + $I_L2225_22) ) then
 2231.                   $xct1_S4 = log( ( ( dzm(1 + $I_L2225_22) + -d(1 + $I_L2225_22) ) * 1.0/( $zl_S3 + -d(1 + $I_L2225_22) ) ) )
 2232.                   $xct2_S5 = log( ( 1.0/z0(1 + $I_L2225_22) * ( $zl_S3 + -d(1 + $I_L2225_22) ) ) )
 2233.                   $xctu1_S8 = $xct1_S4
 2234.                   $xctu2_S7 = log( ( ( $zl_S3 + -d(1 + $I_L2225_22) ) * 1.0/( z2($ntyp_S2, mon(1 + $I_L2225_22)) + -d(1 + $I_L2225_22) ) ) )
 2235.                   ctni(1 + $I_L2225_22) = 2.5 * ( $xct1_S4 + 7.5e-1 * $xct2_S5 )
 2235.                else
 2237.                   $xct2_S6 = log( ( 1.0/z0(1 + $I_L2225_22) * ( dzm(1 + $I_L2225_22) + -d(1 + $I_L2225_22) ) ) )
 2238.                   $xctu1_S8 = 0.0
 2239.                   $xctu2_S7 = log( ( ( dzm(1 + $I_L2225_22) + -d(1 + $I_L2225_22) ) * 1.0/( z2($ntyp_S2, mon(1 + $I_L2225_22)) + -d(1 + $I_L2225_22) ) ) )
 2240.                   ctni(1 + $I_L2225_22) = 1.875 * $xct2_S6
 2240.                endif
 2245.                u2(1 + $I_L2225_22) = speedm(1 + $I_L2225_22) + -2.5 * $ustarn_WR0_R2 * ( $xctu1_S8 + 7.5e-1 * $xctu2_S7 )
 2246.                $I_L2225_22 = 1 + $I_L2225_22
 2241.                if ( $I_L2225_22 >= nmax ) exit
 2241.             enddo
 2241.          endif
 2075.          _free( t$1599 )
 2075.       else
 2252.          if ( nmax > 0 ) then
 2252.             $I_L2252_20 = 0
 2252. !dir$ ivdep
 2252.             do
 2253.                if ( icheck(1 + $I_L2252_20) == 1 ) then
 2257.                   $thm_S11 = bps(1 + $I_L2252_20) * tm(1 + $I_L2252_20)
 2258.                   $ntyp_S10 = itype(1 + $I_L2252_20)
 2259.                   $zl_S15 = z2($ntyp_S10, mon(1 + $I_L2252_20)) + 11.785 * z0(1 + $I_L2252_20)
 2260.                   $thvgm_S12 = ta(1 + $I_L2252_20) + -$thm_S11
 2261.                   $rib_S13 = -( 9.8000000000000007 * $thvgm_S12 * ( dzm(1 + $I_L2252_20) + -d(1 + $I_L2252_20) ) * 1.0/( $thm_S11 * ( speedm(1 + $I_L2252_20) + -u2(1 + $I_L2252_20) ) * ( speedm(1 + $I_L2252_20) + -u2(1 + $I_L2252_20) ) ) )
 2266.                   $rib_S14 = min( 1.6500000000000001e-1, max( -1.5, $rib_S13 ) )
 2267.                   if ( ( min( 1.6500000000000001e-1, max( -1.5, $rib_S13 ) ) ) < 0.0 ) then
 2268.                      $grib_S18 = -$rib_S14
 2269.                      $grzl_S17 = -( $rib_S14 * 1.0/( dzm(1 + $I_L2252_20) + -d(1 + $I_L2252_20) ) * ( $zl_S15 + -d(1 + $I_L2252_20) ) )
 2270.                      $grz2_S16 = -( $rib_S14 * z0(1 + $I_L2252_20) * 1.0/( dzm(1 + $I_L2252_20) + -d(1 + $I_L2252_20) ) )
 2271.                      $fvv_S19 = -3.15e-1 * $rib_S14
 2272.                      if ( $zl_S15 < dzm(1 + $I_L2252_20) ) then
 2273.                         $ftt_S20 = ( 9.0400000000000003e-1 * $grib_S18 ) + -6.7800000000000005e-1 * $grz2_S16 + -2.2600000000000001e-1 * $grzl_S17
 2273.                      else
 2275.                         $ftt_S20 = 7.5e-1 * ( -( 9.0400000000000003e-1 * $grz2_S16 ) + ( 9.0400000000000003e-1 * $grib_S18 ) )
 2275.                      endif
 2277.                      $cui_S25 = cuni(1 + $I_L2252_20) + -$fvv_S19
 2278.                      $cti_S26 = ctni(1 + $I_L2252_20) + -$ftt_S20
 2278.                   else
 2280.                      $rzl_S22 = ( $zl_S15 + -d(1 + $I_L2252_20) ) * ( $rib_S14 * 1.0/( dzm(1 + $I_L2252_20) + -d(1 + $I_L2252_20) ) )
 2281.                      $rz2_S21 = z0(1 + $I_L2252_20) * ( $rib_S14 * 1.0/( dzm(1 + $I_L2252_20) + -d(1 + $I_L2252_20) ) )
 2282.                      $fvv_S23 = 66.849999999999994 * $rib_S14
 2283.                      if ( $zl_S15 < dzm(1 + $I_L2252_20) ) then
 2284.                         $ftt_S24 = ( 66.849999999999994 * $rib_S14 ) + -50.137499999999996 * $rz2_S21 + -16.712499999999999 * $rzl_S22
 2284.                      else
 2286.                         $ftt_S24 = 7.5e-1 * ( ( 66.849999999999994 * $rib_S14 ) + -( 66.849999999999994 * $rz2_S21 ) )
 2286.                      endif
 2288.                      $cui_S25 = $fvv_S23 + cuni(1 + $I_L2252_20)
 2289.                      $cti_S26 = $ftt_S24 + ctni(1 + $I_L2252_20)
 2289.                   endif
 2291.                   cu(1 + $I_L2252_20) = 1.0/$cui_S25
 2298.                   $ustar_WR0_R3 = speedm(1 + $I_L2252_20) * 1.0/$cui_S25
 2298.                   ustar(1 + $I_L2252_20) = $ustar_WR0_R3
 2303.                   ra(1 + $I_L2252_20) = ( max( 8.0000000000000004e-1, ( $cti_S26 * 1.0/$ustar_WR0_R3 ) ) )
 2303.                endif
 2305.                $I_L2252_20 = 1 + $I_L2252_20
 2304.                if ( $I_L2252_20 >= nmax ) exit
 2304.             enddo
 2304.          endif
 2075.          _free( t$1599 )
 2075.       endif
 2306.       return
 2306.       end
 2306.       
 2315.       
 2315.       subroutine runoff( roff, tg, td, capac, w, itype, dtc3x, nmax, ncols )
 2315.       t$376 = ncols
 2375.       t$1602 = _zla( 0, ncols )
 2315.       t$1603 = _zla( 0, ncols )
 2315.       t$1604 = 2 * _zla( 0, ncols )
 2315.       t$1605 = 3 * _zla( 0, ncols )
 2382.       t$1608 = 8 * _zla( 0, ncols )
 2378.       t$1609 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 2378.       t$1611 = t$1609 + 8 * _zla( 0, ncols )
 2377.       t$1612 = 8 * ( 7 + t$1609 + 8 * _zla( 0, ncols ) ) / 8
 2377.       t$1614 = t$1612 + 8 * _zla( 0, ncols )
 2379.       t$1615 = 8 * ( 7 + t$1612 + 8 * _zla( 0, ncols ) ) / 8
 2379.       t$1617 = t$1615 + 24 * _zla( 0, ncols )
 2380.       t$1618 = 8 * ( 7 + t$1615 + 24 * _zla( 0, ncols ) ) / 8
 2380.       t$1620 = t$1618 + 24 * _zla( 0, ncols )
 2381.       t$1621 = 8 * ( 7 + t$1618 + 24 * _zla( 0, ncols ) ) / 8
 2381.       t$1623 = t$1621 + 24 * _zla( 0, ncols )
 2315.       t$1606 = int( _alloc( t$1621 + 24 * _zla( 0, ncols ) ), 8 )
 2382.       t$1607 = t$1606
 2378.       t$1610 = t$1609 + t$1606
 2377.       t$1613 = t$1612 + t$1606
 2379.       t$1616 = t$1615 + t$1606
 2380.       t$1619 = t$1618 + t$1606
 2381.       t$1622 = t$1621 + t$1606
 2416.       $subdti_S8 = 1.0/dtc3x
 2417.       if ( ncols > 0 ) then
 2417.          $I_L2417_38 = 0
 2417. !dir$ ivdep
 2417.          do
 2417.             q3g(1 + $I_L2417_38) = 0.0
 2417.             $I_L2417_38 = 1 + $I_L2417_38
 2417.             if ( $I_L2417_38 >= ncols ) exit
 2417.          enddo
 2417.       endif
 2421.       if ( nmax > 0 ) then
 2421.          $I_L2421_30 = 0
 2421. !dir$ ivdep
 2421.          do
 2422.             if ( w(1 + $I_L2421_30, 1) < 0.0 ) then
 2422.                w(1 + $I_L2421_30, 1) = 1.0e-3
 2422.             endif
 2423.             if ( w(1 + $I_L2421_30, 2) < 0.0 ) then
 2423.                w(1 + $I_L2421_30, 2) = 1.0e-3
 2423.             endif
 2424.             if ( w(1 + $I_L2421_30, 3) < 0.0 ) then
 2424.                w(1 + $I_L2421_30, 3) = 1.0e-3
 2424.             endif
 2425.             $I_L2421_30 = 1 + $I_L2421_30
 2424.             if ( $I_L2421_30 >= nmax ) exit
 2424.          enddo
 2424.       endif
 2431.       $SC_bee_I0 = bee%dim_1%EX
 2431.       $SC_bee_I1 = bee%dim_1%LB
 2428.       if ( nmax > 0 ) then
 2427.          $I_L2427_40 = 0
 2427. !dir$ blocking_size( 1, 1 )
 2427.          do
 2428.             $I_L2428_32 = 0
 2428. !dir$ ivdep
 2428. !dir$ blocking_size( 256, 256 )
 2428.             do
 2429.                $ntyp_S3 = itype(1 + $I_L2428_32)
 2430.                $twi_WR0_R0 = min( 1.0, max( 2.9999999999999999e-2, w(1 + $I_L2428_32, 1 + $I_L2427_40) ) )
 2430.                twi(1 + $I_L2428_32, 1 + $I_L2427_40) = $twi_WR0_R0
 2431.                twip(1 + $I_L2428_32, 1 + $I_L2427_40) = _expn( -( (bee%base_addr)($ntyp_S3, 0) * log( $twi_WR0_R0 ) ) )
 2432.                twipp(1 + $I_L2428_32, 1 + $I_L2427_40) = _expn( ( 3.0 + 2.0 * (bee%base_addr)($ntyp_S3, 0) ) * log( min( 1.0, $twi_WR0_R0 ) ) )
 2433.                $I_L2428_32 = 1 + $I_L2428_32
 2428.                if ( $I_L2428_32 >= nmax ) exit
 2428.             enddo
 2434.             $I_L2427_40 = 1 + $I_L2427_40
 2433.             if ( $I_L2427_40 >= 3 ) exit
 2433.          enddo
 2451.          $SC_zdepth_I4 = zdepth%dim_1%EX
 2451.          $SC_zdepth_I5 = zdepth%dim_1%LB
 2451.          $SC_zdepth_I7 = zdepth%dim_2%SM
 2451.          $SC_zdepth_I6 = zdepth%dim_2%EX
 2451.          $SC_zdepth_I8 = zdepth%dim_2%LB
 2451.          $SC_satco_I9 = satco%dim_1%EX
 2451.          $SC_satco_I10 = satco%dim_1%LB
 2439.          $SC_poros_I2 = poros%dim_1%EX
 2439.          $SC_poros_I3 = poros%dim_1%LB
 2450.          $SC_bee_I0 = bee%dim_1%EX
 2450.          $SC_bee_I1 = bee%dim_1%LB
 2436.          $I_L2436_34 = 0
 2436. !dir$ ivdep
 2436.          do
 2437.             $ntyp_S5 = itype(1 + $I_L2436_34)
 2438.             $slop_S7 = 1.736e-1
 2439.             if ( (poros%base_addr)($ntyp_S5, 0) == 4.3519999999999998e-1 ) then
 2439.                $slop_S7 = 8.72e-2
 2439.             endif
 2440.             if ( (poros%base_addr)($ntyp_S5, 0) == 4.577e-1 ) then
 2440.                $slop_S7 = 3.4200000000000003e-1
 2440.             endif
 2450.             $pows_S6 = 2.0 + 2.0 * (bee%base_addr)($ntyp_S5, 0)
 2451.             $q3g_WR0_R1 = _expn( -( $pows_S6 * log( twi(1 + $I_L2436_34, 3) ) ) ) + dtc3x * $pows_S6 * $slop_S7 * ( (satco%base_addr)($ntyp_S5, 0) * 1.0/( (poros%base_addr)($ntyp_S5, 0) * (zdepth%base_addr)($ntyp_S5, 3, 0) ) )
 2460.             $q3g_WR0_R1 = min( max( 0.0, -( $subdti_S8 * (zdepth%base_addr)($ntyp_S5, 3, 0) * (poros%base_addr)($ntyp_S5, 0) * ( _expn( -( 1.0/$pows_S6 * log( $q3g_WR0_R1 ) ) ) + -w(1 + $I_L2436_34, 3) ) ) ), $subdti_S8 * w(1 + $I_L2436_34, 3) * (poros%base_addr)($ntyp_S5, 0) * (zdepth%base_addr)($ntyp_S5, 3, 0) ) + 1.1574074074074074e-8 * w(1 + $I_L2436_34, 3) * (poros%base_addr)($ntyp_S5, 0) * (zdepth%base_addr)($ntyp_S5, 3, 0)
 2460.             q3g(1 + $I_L2436_34) = $q3g_WR0_R1
 2462.             $I_L2436_34 = 1 + $I_L2436_34
 2440.             if ( $I_L2436_34 >= nmax ) exit
 2440.          enddo
 2486.          $SC_phsat_I11 = phsat%dim_1%EX
 2486.          $SC_phsat_I12 = phsat%dim_1%LB
 2486.          $SC_zdepth_I4 = zdepth%dim_1%EX
 2486.          $SC_zdepth_I5 = zdepth%dim_1%LB
 2486.          $SC_zdepth_I7 = zdepth%dim_2%SM
 2486.          $SC_zdepth_I6 = zdepth%dim_2%EX
 2486.          $SC_zdepth_I8 = zdepth%dim_2%LB
 2514.          $SC_satco_I9 = satco%dim_1%EX
 2514.          $SC_satco_I10 = satco%dim_1%LB
 2520.          $SC_poros_I2 = poros%dim_1%EX
 2520.          $SC_poros_I3 = poros%dim_1%LB
 2485.          $SC_bee_I0 = bee%dim_1%EX
 2485.          $SC_bee_I1 = bee%dim_1%LB
 2481.          $I_L2481_36 = 0
 2481. !dir$ ivdep
 2481.          do
 2482.             $ntyp_S12 = itype(1 + $I_L2481_36)
 2483.             $wmax_S10 = max( 5.0000000000000003e-2, max( w(1 + $I_L2481_36, 3), max( w(1 + $I_L2481_36, 2), w(1 + $I_L2481_36, 1) ) ) )
 2485.             $pmax_S13 = _expn( -( (bee%base_addr)($ntyp_S12, 0) * log( ( min( 1.0, $wmax_S10 ) ) ) ) )
 2486.             $wmin_S14 = _expn( -( log( $pmax_S13 + -( 2.0 * 1.0/( (phsat%base_addr)($ntyp_S12, 0) * ( (zdepth%base_addr)($ntyp_S12, 3, 0) + (zdepth%base_addr)($ntyp_S12, 1, 0) + 2.0 * (zdepth%base_addr)($ntyp_S12, 2, 0) ) ) ) ) * 1.0/(bee%base_addr)($ntyp_S12, 0) ) )
 2489.             $wmin_S15 = max( 2.0e-2, min( $wmin_S14, min( w(1 + $I_L2481_36, 3), min( w(1 + $I_L2481_36, 2), w(1 + $I_L2481_36, 1) ) ) ) )
 2490.             $pmin_S16 = _expn( -( (bee%base_addr)($ntyp_S12, 0) * log( $wmin_S15 ) ) )
 2491.             $dpdw_S19 = ( (phsat%base_addr)($ntyp_S12, 0) * ( $pmax_S13 + -$pmin_S16 ) * 1.0/( -$wmin_S15 + ( min( 1.0, $wmax_S10 ) ) ) )
 2495.             $rsame_S21 = 0.0
 2496.             $avk_WR0_R5 = -( twip(1 + $I_L2481_36, 2) * twipp(1 + $I_L2481_36, 2) ) + twip(1 + $I_L2481_36, 1) * twipp(1 + $I_L2481_36, 1)
 2497.             $div_WR0_R6 = twip(1 + $I_L2481_36, 2) + -twip(1 + $I_L2481_36, 1)
 2498.             if ( abs( $div_WR0_R6 ) <= 9.9999999999999995e-8 ) then
 2498.                $rsame_S21 = 1.0
 2498.             endif
 2508.             $tsnow_S18 = min( 273.15000000000003, tg(1 + $I_L2481_36) )
 2509.             $areas_S17 = min( 9.99e-1, 13.199999999999999 * capac(1 + $I_L2481_36, 2) )
 2510.             $tgs_S20 = $areas_S17 * $tsnow_S18 + tg(1 + $I_L2481_36) * ( 1.0 + -$areas_S17 )
 2519.             $dpdwdz_S23 = ( 2.0 * $dpdw_S19 * 1.0/( (zdepth%base_addr)($ntyp_S12, 2, 0) + (zdepth%base_addr)($ntyp_S12, 1, 0) ) )
 2513.             $props_S22 = max( 5.0000000000000003e-2, min( 1.0, ( 1.0000000000000001e-1 * ( -263.16000000000003 + $tgs_S20 ) ) ) )
 2514.             $avk_WR0_R5 = $props_S22 * min( max( ( $avk_WR0_R5 * (satco%base_addr)($ntyp_S12, 0) * 1.0/( $rsame_S21 + $div_WR0_R6 * ( 1.0 + ( 3.0 * 1.0/(bee%base_addr)($ntyp_S12, 0) ) ) ) ), (satco%base_addr)($ntyp_S12, 0) * min( twipp(1 + $I_L2481_36, 1), twipp(1 + $I_L2481_36, 2) ) ), 1.01 * ( (satco%base_addr)($ntyp_S12, 0) * max( twipp(1 + $I_L2481_36, 1), twipp(1 + $I_L2481_36, 2) ) ) )
 2520.             $aaa_S28 = 1.0 + ( dtc3x * $dpdwdz_S23 * $avk_WR0_R5 * ( 1.0/(zdepth%base_addr)($ntyp_S12, 1, 0) + 1.0/(zdepth%base_addr)($ntyp_S12, 2, 0) ) * 1.0/(poros%base_addr)($ntyp_S12, 0) )
 2523.             $bbb_S30 = -( dtc3x * 1.0/(poros%base_addr)($ntyp_S12, 0) * ( $dpdwdz_S23 * $avk_WR0_R5 * 1.0/(zdepth%base_addr)($ntyp_S12, 2, 0) ) )
 2524.             $ccc_S33 = $avk_WR0_R5 * ( 1.0 + $dpdwdz_S23 * ( w(1 + $I_L2481_36, 1) + -w(1 + $I_L2481_36, 2) ) )
 2529.             $rsame_S25 = 0.0
 2530.             $avk_WR0_R5 = -( twipp(1 + $I_L2481_36, 3) * twip(1 + $I_L2481_36, 3) ) + twip(1 + $I_L2481_36, 2) * twipp(1 + $I_L2481_36, 2)
 2531.             $div_WR0_R6 = twip(1 + $I_L2481_36, 3) + -twip(1 + $I_L2481_36, 2)
 2515.             $q3g_WR0_R7 = q3g(1 + $I_L2481_36) * ( max( 5.0000000000000003e-2, min( 1.0, ( 1.0000000000000001e-1 * ( -263.16000000000003 + $tgs_S20 ) ) ) ) )
 2532.             if ( abs( $div_WR0_R6 ) <= 9.9999999999999995e-8 ) then
 2532.                $rsame_S25 = 1.0
 2532.             endif
 2545.             $ts_S24 = td(1 + $I_L2481_36)
 2553.             $dpdwdz_S26 = ( 2.0 * $dpdw_S19 * 1.0/( (zdepth%base_addr)($ntyp_S12, 2, 0) + (zdepth%base_addr)($ntyp_S12, 3, 0) ) )
 2548.             $avk_WR0_R5 = min( max( ( $avk_WR0_R5 * (satco%base_addr)($ntyp_S12, 0) * 1.0/( $rsame_S25 + $div_WR0_R6 * ( 1.0 + ( 3.0 * 1.0/(bee%base_addr)($ntyp_S12, 0) ) ) ) ), (satco%base_addr)($ntyp_S12, 0) * min( twipp(1 + $I_L2481_36, 2), twipp(1 + $I_L2481_36, 3) ) ), 1.01 * ( (satco%base_addr)($ntyp_S12, 0) * max( twipp(1 + $I_L2481_36, 2), twipp(1 + $I_L2481_36, 3) ) ) ) * ( max( 5.0000000000000003e-2, min( 1.0, ( 1.0000000000000001e-1 * ( -263.16000000000003 + $ts_S24 ) ) ) ) )
 2554.             $aaa_S27 = 1.0 + ( dtc3x * $dpdwdz_S26 * $avk_WR0_R5 * 1.0/(poros%base_addr)($ntyp_S12, 0) * ( 1.0/(zdepth%base_addr)($ntyp_S12, 2, 0) + 1.0/(zdepth%base_addr)($ntyp_S12, 3, 0) ) )
 2557.             $bbb_S29 = -( dtc3x * 1.0/(poros%base_addr)($ntyp_S12, 0) * ( $dpdwdz_S26 * $avk_WR0_R5 * 1.0/(zdepth%base_addr)($ntyp_S12, 2, 0) ) )
 2549.             $q3g_WR0_R7 = $q3g_WR0_R7 * ( max( 5.0000000000000003e-2, min( 1.0, ( 1.0000000000000001e-1 * ( -263.16000000000003 + $ts_S24 ) ) ) ) )
 2549.             q3g(1 + $I_L2481_36) = $q3g_WR0_R7
 2558.             $ccc_S34 = $avk_WR0_R5 * ( 1.0 + ( dtc3x * 1.0/(poros%base_addr)($ntyp_S12, 0) * ( $dpdwdz_S26 * $q3g_WR0_R7 * 1.0/(zdepth%base_addr)($ntyp_S12, 3, 0) ) ) + $dpdwdz_S26 * ( w(1 + $I_L2481_36, 2) + -w(1 + $I_L2481_36, 3) ) )
 2595.             $denom_S32 = ( -( $bbb_S29 * $bbb_S30 ) + $aaa_S27 * $aaa_S28 )
 2596.             $rdenom_S31 = 0.0
 2597.             if ( abs( ( -( $bbb_S29 * $bbb_S30 ) + $aaa_S27 * $aaa_S28 ) ) < 9.9999999999999995e-7 ) then
 2597.                $rdenom_S31 = 1.0
 2597.             endif
 2605.             $w_WR0_R2 = w(1 + $I_L2481_36, 3) + -( dtc3x * $q3g_WR0_R7 * 1.0/( (zdepth%base_addr)($ntyp_S12, 3, 0) * (poros%base_addr)($ntyp_S12, 0) ) )
 2610.             $qmax_S36 = w(1 + $I_L2481_36, 1) * ( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 1, 0) * 1.0/dtc3x )
 2611.             $qmin_S37 = -( w(1 + $I_L2481_36, 2) * ( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 2, 0) * 1.0/dtc3x ) )
 2614.             $w_WR0_R4 = w(1 + $I_L2481_36, 1) + -( ( max( $qmin_S37, ( min( $qmax_S36, ( ( ( 1.0 + -$rdenom_S31 ) * 1.0/( $rdenom_S31 + $denom_S32 ) ) * ( -( $bbb_S30 * $ccc_S34 ) + $aaa_S27 * $ccc_S33 ) ) ) ) ) ) * 1.0/( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 1, 0) * 1.0/dtc3x ) )
 2615.             $w_WR0_R3 = w(1 + $I_L2481_36, 2) + ( ( max( $qmin_S37, ( min( $qmax_S36, ( ( ( 1.0 + -$rdenom_S31 ) * 1.0/( $rdenom_S31 + $denom_S32 ) ) * ( -( $bbb_S30 * $ccc_S34 ) + $aaa_S27 * $ccc_S33 ) ) ) ) ) ) * 1.0/( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 2, 0) * 1.0/dtc3x ) )
 2620.             $qmax_S38 = $w_WR0_R3 * ( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 2, 0) * 1.0/dtc3x )
 2621.             $qmin_S39 = -( $w_WR0_R2 * ( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 3, 0) * 1.0/dtc3x ) )
 2639.             $excess_S40 = max( 0.0, ( -1.0 + $w_WR0_R4 ) )
 2624.             $w_WR0_R3 = $w_WR0_R3 + -( ( max( $qmin_S39, ( min( $qmax_S38, ( ( ( 1.0 + -$rdenom_S31 ) * 1.0/( $rdenom_S31 + $denom_S32 ) ) * ( -( $bbb_S29 * $ccc_S33 ) + $aaa_S28 * $ccc_S34 ) ) ) ) ) ) * 1.0/( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 2, 0) * 1.0/dtc3x ) )
 2645.             $excess_S41 = max( 0.0, ( -1.0 + $w_WR0_R3 ) )
 2625.             $w_WR0_R2 = $w_WR0_R2 + ( ( max( $qmin_S39, ( min( $qmax_S38, ( ( ( 1.0 + -$rdenom_S31 ) * 1.0/( $rdenom_S31 + $denom_S32 ) ) * ( -( $bbb_S29 * $ccc_S33 ) + $aaa_S28 * $ccc_S34 ) ) ) ) ) ) * 1.0/( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 3, 0) * 1.0/dtc3x ) )
 2651.             $excess_S42 = max( 0.0, ( -1.0 + $w_WR0_R2 ) )
 2640.             $w_WR0_R4 = $w_WR0_R4 + -( max( 0.0, ( -1.0 + $w_WR0_R4 ) ) )
 2663.             $deficit_S43 = max( 0.0, ( 9.9999999999999998e-13 + -$w_WR0_R4 ) )
 2664.             $w_WR0_R4 = $w_WR0_R4 + ( max( 0.0, ( 9.9999999999999998e-13 + -$w_WR0_R4 ) ) )
 2664.             w(1 + $I_L2481_36, 1) = $w_WR0_R4
 2646.             $w_WR0_R3 = $w_WR0_R3 + -( max( 0.0, ( -1.0 + $w_WR0_R3 ) ) )
 2665.             $w_WR0_R3 = $w_WR0_R3 + -( $deficit_S43 * (zdepth%base_addr)($ntyp_S12, 1, 0) * 1.0/(zdepth%base_addr)($ntyp_S12, 2, 0) )
 2669.             $deficit_S44 = max( 0.0, ( 9.9999999999999998e-13 + -$w_WR0_R3 ) )
 2670.             $w_WR0_R3 = $w_WR0_R3 + ( max( 0.0, ( 9.9999999999999998e-13 + -$w_WR0_R3 ) ) )
 2670.             w(1 + $I_L2481_36, 2) = $w_WR0_R3
 2652.             $w_WR0_R2 = $w_WR0_R2 + -( max( 0.0, ( -1.0 + $w_WR0_R2 ) ) )
 2683.             $w_WR0_R2 = max( 9.9999999999999998e-13, $w_WR0_R2 + -( $deficit_S44 * (zdepth%base_addr)($ntyp_S12, 2, 0) * 1.0/(zdepth%base_addr)($ntyp_S12, 3, 0) ) )
 2683.             w(1 + $I_L2481_36, 3) = $w_WR0_R2
 2653.             roff(1 + $I_L2481_36) = roff(1 + $I_L2481_36) + dtc3x * $q3g_WR0_R7 + $excess_S40 * (zdepth%base_addr)($ntyp_S12, 1, 0) * (poros%base_addr)($ntyp_S12, 0) + $excess_S42 * (zdepth%base_addr)($ntyp_S12, 3, 0) * (poros%base_addr)($ntyp_S12, 0) + $excess_S41 * (zdepth%base_addr)($ntyp_S12, 2, 0) * (poros%base_addr)($ntyp_S12, 0)
 2684.             $I_L2481_36 = 1 + $I_L2481_36
 2597.             if ( $I_L2481_36 >= nmax ) exit
 2597.          enddo
 2597.       endif
 2315.       _free( t$1606 )
 2685.       return
 2685.       end
 2685.       
 2693.       
 2693.       subroutine stres2( icount, ft1, fp1, icheck, ta, ea, rst, phsoil, stm, tc, tg, w, vcover, itype, rootd, zdepth, nmax, ncols, topt2, tll2, tu2, defac2, ph12, ph22 )
 2693.       t$388 = ncols
 2735.       t$1624 = _zla( 0, ncols )
 2693.       t$1625 = _zla( 0, ncols )
 2693.       t$1626 = 2 * _zla( 0, ncols )
 2693.       t$1627 = 3 * _zla( 0, ncols )
 2693.       t$1628 = 3 * _zla( 0, ncols )
 2769.       t$1631 = 8 * _zla( 0, ncols )
 2771.       t$1632 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 2771.       t$1634 = t$1632 + 8 * _zla( 0, ncols )
 2772.       t$1635 = 8 * ( 7 + t$1632 + 8 * _zla( 0, ncols ) ) / 8
 2772.       t$1637 = t$1635 + 8 * _zla( 0, ncols )
 2773.       t$1638 = 8 * ( 7 + t$1635 + 8 * _zla( 0, ncols ) ) / 8
 2773.       t$1640 = t$1638 + 8 * _zla( 0, ncols )
 2770.       t$1641 = 8 * ( 7 + t$1638 + 8 * _zla( 0, ncols ) ) / 8
 2770.       t$1643 = t$1641 + 8 * _zla( 0, ncols )
 2774.       t$1644 = 8 * ( 7 + t$1641 + 8 * _zla( 0, ncols ) ) / 8
 2774.       t$1646 = t$1644 + 8 * _zla( 0, ncols )
 2768.       t$1647 = 8 * ( 7 + t$1644 + 8 * _zla( 0, ncols ) ) / 8
 2768.       t$1649 = t$1647 + 8 * _zla( 0, ncols )
 2693.       t$1629 = int( _alloc( t$1647 + 8 * _zla( 0, ncols ) ), 8 )
 2769.       t$1630 = t$1629
 2771.       t$1633 = t$1632 + t$1629
 2772.       t$1636 = t$1635 + t$1629
 2773.       t$1639 = t$1638 + t$1629
 2770.       t$1642 = t$1641 + t$1629
 2774.       t$1645 = t$1644 + t$1629
 2768.       t$1648 = t$1647 + t$1629
 2790.       if ( icount == 1 ) then
 2792.          if ( nmax > 0 ) then
 2792.             $I_L2792_18 = 0
 2792. !dir$ ivdep
 2792.             do
 2793.                if ( icheck(1 + $I_L2792_18) == 1 ) then
 2794.                   $ntyp_S1 = itype(1 + $I_L2792_18)
 2795.                   if ( $ntyp_S1 /= 11 ) then
 2795.                      if ( $ntyp_S1 /= 13 ) then
 2799.                         $tv_WR0_R0 = tc(1 + $I_L2792_18)
 2805.                         $d2_WR0_R1 = ( 1.0/( topt2(1 + $I_L2792_18, 1) + -tll2(1 + $I_L2792_18, 1) ) * ( tu2(1 + $I_L2792_18, 1) + -topt2(1 + $I_L2792_18, 1) ) )
 2804.                         $tv_WR0_R0 = max( min( $tv_WR0_R0, ( -1.0000000000000001e-1 + tu2(1 + $I_L2792_18, 1) ) ), ( 1.0000000000000001e-1 + tll2(1 + $I_L2792_18, 1) ) )
 2807.                         $ft_WR0_R2 = _expn( $d2_WR0_R1 * log( ( ( tu2(1 + $I_L2792_18, 1) + -$tv_WR0_R0 ) * 1.0/( tu2(1 + $I_L2792_18, 1) + -topt2(1 + $I_L2792_18, 1) ) ) ) ) * ( 1.0/( topt2(1 + $I_L2792_18, 1) + -tll2(1 + $I_L2792_18, 1) ) * ( $tv_WR0_R0 + -tll2(1 + $I_L2792_18, 1) ) )
 2813.                         $ft_WR0_R2 = max( 1.0000000000000001e-5, min( 1.0, $ft_WR0_R2 ) )
 2814.                         ft1(1 + $I_L2792_18) = $ft_WR0_R2
 2818.                         $xrot_S2 = rootd($ntyp_S1, 1)
 2820.                         $SC_dep_I1 = 0.0
 2821.                         $SC_dep_I2 = 0.0
 2822.                         $SC_dep_I0 = min( $xrot_S2, zdepth($ntyp_S1, 1) )
 2823.                         $xrot_S3 = $xrot_S2 + -zdepth($ntyp_S1, 1)
 2824.                         if ( $xrot_S2 + -zdepth($ntyp_S1, 1) > 0.0 ) then
 2825.                            $SC_dep_I1 = min( $xrot_S3, zdepth($ntyp_S1, 2) )
 2826.                            $xrot_S3 = $xrot_S3 + -zdepth($ntyp_S1, 2)
 2826.                         endif
 2828.                         if ( $xrot_S3 > 0.0 ) then
 2829.                            $SC_dep_I2 = min( $xrot_S3, zdepth($ntyp_S1, 3) )
 2829.                         endif
 2832.                         $xdr_S4 = ( 1.0/$xrot_S2 * ( $SC_dep_I0 * phsoil(1 + $I_L2792_18, 1) + $SC_dep_I1 * phsoil(1 + $I_L2792_18, 2) + $SC_dep_I2 * phsoil(1 + $I_L2792_18, 3) ) )
 2836.                         $xdr_S5 = log( max( 1.0000000000000001e-5, -$xdr_S4 ) )
 2837.                         $arg_S6 = -( ph12(1 + $I_L2792_18, 1) * ( ph22(1 + $I_L2792_18, 1) + -$xdr_S5 ) )
 2839.                         $fp_WR0_R3 = 1.0 + -_expn( ( min( 0.0, $arg_S6 ) ) )
 2840.                         if ( w(1 + $I_L2792_18, 2) > 1.4999999999999999e-1 ) then
 2840.                            $fp_WR0_R3 = max( 5.0000000000000003e-2, $fp_WR0_R3 )
 2840.                         endif
 2842.                         $fp_WR0_R3 = max( 1.0000000000000001e-5, min( 1.0, $fp_WR0_R3 ) )
 2843.                         fp1(1 + $I_L2792_18) = $fp_WR0_R3
 2843.                      endif
 2843.                   endif
 2843.                endif
 2846.                $I_L2792_18 = 1 + $I_L2792_18
 2845.                if ( $I_L2792_18 >= nmax ) exit
 2845.             enddo
 2845.          endif
 2845.       endif
 2849.       if ( nmax > 0 ) then
 2849.          $I_L2849_20 = 0
 2849. !dir$ ivdep
 2849.          do
 2850.             if ( icheck(1 + $I_L2849_20) == 1 ) then
 2852.                $drop_WR0_R4 = -ea(1 + $I_L2849_20) + _expn( 21.65605 + -( 5418.0 * 1.0/ta(1 + $I_L2849_20) ) )
 2853.                $fd_WR0_R5 = max( 1.0000000000000001e-5, 1.0/( 1.0 + $drop_WR0_R4 * defac2(1 + $I_L2849_20, 1) ) )
 2854.                $fd_WR0_R5 = min( 1.0, $fd_WR0_R5 )
 2854.                fd(1 + $I_L2849_20) = $fd_WR0_R5
 2854.             endif
 2856.             $I_L2849_20 = 1 + $I_L2849_20
 2855.             if ( $I_L2849_20 >= nmax ) exit
 2855.          enddo
 2858.          $I_L2858_22 = 0
 2858. !dir$ ivdep
 2858.          do
 2859.             if ( icheck(1 + $I_L2858_22) == 1 ) then
 2860.                $ntyp_S10 = itype(1 + $I_L2858_22)
 2861.                rst(1 + $I_L2858_22, 2) = 100000.0
 2862.                if ( $ntyp_S10 == 11 .orelse. $ntyp_S10 == 13 ) then
 2863.                   rst(1 + $I_L2858_22, 1) = 100000.0
 2863.                else
 2866.                   $ftpd_WR0_R6 = fd(1 + $I_L2858_22) * fp1(1 + $I_L2858_22) * ft1(1 + $I_L2858_22)
 2867.                   $rst_WR0_R7 = ( stm(1 + $I_L2858_22, 1) * 1.0/( $ftpd_WR0_R6 * vcover(1 + $I_L2858_22, 1) ) )
 2868.                   $rst_WR0_R7 = min( 100000.0, $rst_WR0_R7 )
 2868.                   rst(1 + $I_L2858_22, 1) = $rst_WR0_R7
 2868.                endif
 2868.             endif
 2870.             $I_L2858_22 = 1 + $I_L2858_22
 2870.             if ( $I_L2858_22 >= nmax ) exit
 2870.          enddo
 2870.       endif
 2693.       _free( t$1629 )
 2872.       return
 2872.       end
 2872.       
 2880.       
 2880.       subroutine update( bps, deadtg, deadtc, deadqm, ect, eci, egt, egi, egs, eg, hc, hg, ecmass, egmass, etmass, hflux, chf, shf, ra, rb, rd, ea, etc, etg, btc, btg, cc, cg, dtc, dtg, dtm, dqm, tc, tg, td, capac, tm, nmax, dtc3x, ncols )
 2880.       t$428 = ncols
 2996.       t$1650 = _zla( 0, ncols )
 2880.       t$1651 = _zla( 0, ncols )
 2880.       t$1652 = 2 * _zla( 0, ncols )
 3006.       t$1655 = 8 * _zla( 0, ncols )
 3005.       t$1656 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 3005.       t$1658 = t$1656 + 8 * _zla( 0, ncols )
 3007.       t$1659 = 8 * ( 7 + t$1656 + 8 * _zla( 0, ncols ) ) / 8
 3007.       t$1661 = t$1659 + 8 * _zla( 0, ncols )
 3008.       t$1662 = 8 * ( 7 + t$1659 + 8 * _zla( 0, ncols ) ) / 8
 3008.       t$1664 = t$1662 + 8 * _zla( 0, ncols )
 3009.       t$1665 = 8 * ( 7 + t$1662 + 8 * _zla( 0, ncols ) ) / 8
 3009.       t$1667 = t$1665 + 8 * _zla( 0, ncols )
 3004.       t$1668 = 8 * ( 7 + t$1665 + 8 * _zla( 0, ncols ) ) / 8
 3004.       t$1670 = t$1668 + 8 * _zla( 0, ncols )
 3002.       t$1671 = 8 * ( 7 + t$1668 + 8 * _zla( 0, ncols ) ) / 8
 3002.       t$1673 = t$1671 + 8 * _zla( 0, ncols )
 3001.       t$1674 = 8 * ( 7 + t$1671 + 8 * _zla( 0, ncols ) ) / 8
 3001.       t$1676 = t$1674 + 8 * _zla( 0, ncols )
 3003.       t$1677 = 8 * ( 7 + t$1674 + 8 * _zla( 0, ncols ) ) / 8
 3003.       t$1679 = t$1677 + 8 * _zla( 0, ncols )
 2880.       t$1653 = int( _alloc( t$1677 + 8 * _zla( 0, ncols ) ), 8 )
 3006.       t$1654 = t$1653
 3005.       t$1657 = t$1656 + t$1653
 3007.       t$1660 = t$1659 + t$1653
 3008.       t$1663 = t$1662 + t$1653
 3009.       t$1666 = t$1665 + t$1653
 3004.       t$1669 = t$1668 + t$1653
 3002.       t$1672 = t$1671 + t$1653
 3001.       t$1675 = t$1674 + t$1653
 3003.       t$1678 = t$1677 + t$1653
 3024.       if ( nmax > 0 ) then
 3024.          $I_L3024_42 = 0
 3024. !dir$ ivdep
 3024.          do
 3025.             tgen(1 + $I_L3024_42) = dtg(1 + $I_L3024_42) + tg(1 + $I_L3024_42)
 3026.             tcen(1 + $I_L3024_42) = dtc(1 + $I_L3024_42) + tc(1 + $I_L3024_42)
 3041.             $I_L3024_42 = 1 + $I_L3024_42
 3024.             if ( $I_L3024_42 >= nmax ) exit
 3024.          enddo
 3042.          $I_L3042_44 = 0
 3042. !dir$ ivdep
 3042.          do
 3043.             if ( tgen(1 + $I_L3042_44) <= 273.16000000000003 ) then
 3044.                egs(1 + $I_L3042_44) = eg(1 + $I_L3042_44) + -egi(1 + $I_L3042_44)
 3045.                egt(1 + $I_L3042_44) = 0.0
 3045.             endif
 3065.             $facks_WR0_R0 = 1.0
 3065.             facks(1 + $I_L3042_44) = 1.0
 3066.             if ( tcen(1 + $I_L3042_44) <= 273.16000000000003 ) then
 3066.                $facks_WR0_R0 = 8.8308754880898477e-1
 3066.                facks(1 + $I_L3042_44) = 8.8308754880898477e-1
 3066.             endif
 3067.             if ( ( eci(1 + $I_L3042_44) + ect(1 + $I_L3042_44) ) <= 0.0 ) then
 3068.                eci(1 + $I_L3042_44) = eci(1 + $I_L3042_44) + ect(1 + $I_L3042_44)
 3069.                ect(1 + $I_L3042_44) = 0.0
 3070.                $facks_WR0_R0 = 1.0/$facks_WR0_R0
 3070.                facks(1 + $I_L3042_44) = $facks_WR0_R0
 3070.             endif
 3047.             $I_L3042_44 = 1 + $I_L3042_44
 3046.             if ( $I_L3042_44 >= nmax ) exit
 3046.          enddo
 3073.          $I_L3073_48 = 0
 3073. !dir$ ivdep
 3073.          do
 3078.             ecmass(1 + $I_L3073_48) = 3.9682539682539683e-7 * ( ect(1 + $I_L3073_48) + eci(1 + $I_L3073_48) * facks(1 + $I_L3073_48) )
 3074.             capac(1 + $I_L3073_48, 1) = capac(1 + $I_L3073_48, 1) + -3.9682539682539682e-10 * eci(1 + $I_L3073_48) * facks(1 + $I_L3073_48)
 3079.             $I_L3073_48 = 1 + $I_L3073_48
 3073.             if ( $I_L3073_48 >= nmax ) exit
 3073.          enddo
 3080.          $I_L3080_50 = 0
 3080. !dir$ ivdep
 3080.          do
 3081.             $facks_WR0_R1 = 1.0
 3081.             facks(1 + $I_L3080_50) = 1.0
 3082.             if ( tgen(1 + $I_L3080_50) <= 273.16000000000003 ) then
 3082.                $facks_WR0_R1 = 8.8308754880898477e-1
 3082.                facks(1 + $I_L3080_50) = 8.8308754880898477e-1
 3082.             endif
 3083.             if ( ( egt(1 + $I_L3080_50) + egi(1 + $I_L3080_50) ) <= 0.0 ) then
 3084.                egi(1 + $I_L3080_50) = egt(1 + $I_L3080_50) + egi(1 + $I_L3080_50)
 3085.                egt(1 + $I_L3080_50) = 0.0
 3086.                $facks_WR0_R1 = 1.0/$facks_WR0_R1
 3086.                facks(1 + $I_L3080_50) = $facks_WR0_R1
 3086.             endif
 3088.             $I_L3080_50 = 1 + $I_L3080_50
 3087.             if ( $I_L3080_50 >= nmax ) exit
 3087.          enddo
 3089.          $I_L3089_52 = 0
 3089. !dir$ ivdep
 3089.          do
 3091.             $egmass_WR0_R2 = 3.9682539682539683e-7 * ( egt(1 + $I_L3089_52) + egs(1 + $I_L3089_52) + facks(1 + $I_L3089_52) * egi(1 + $I_L3089_52) )
 3091.             egmass(1 + $I_L3089_52) = $egmass_WR0_R2
 3095.             etmass(1 + $I_L3089_52) = $egmass_WR0_R2 + ecmass(1 + $I_L3089_52)
 3096.             hflux(1 + $I_L3089_52) = hg(1 + $I_L3089_52) + hc(1 + $I_L3089_52)
 3090.             capac(1 + $I_L3089_52, 2) = capac(1 + $I_L3089_52, 2) + -3.9682539682539682e-10 * facks(1 + $I_L3089_52) * egi(1 + $I_L3089_52)
 3097.             $I_L3089_52 = 1 + $I_L3089_52
 3089.             if ( $I_L3089_52 >= nmax ) exit
 3089.          enddo
 3089.       endif
 3052.       $dtc3xi_S3 = 1.0/dtc3x
 3055.       if ( nmax > 0 ) then
 3055.          $I_L3055_46 = 0
 3055. !dir$ ivdep
 3055.          do
 3056.             chf(1 + $I_L3055_46) = $dtc3xi_S3 * cc(1 + $I_L3055_46) * dtc(1 + $I_L3055_46)
 3057.             shf(1 + $I_L3055_46) = 7.2722050925925924e-5 * cg(1 + $I_L3055_46) * ( tg(1 + $I_L3055_46) + dtg(1 + $I_L3055_46) + -td(1 + $I_L3055_46) ) + $dtc3xi_S3 * dtg(1 + $I_L3055_46) * cg(1 + $I_L3055_46)
 3058.             $I_L3055_46 = 1 + $I_L3055_46
 3055.             if ( $I_L3055_46 >= nmax ) exit
 3055.          enddo
 3055.       endif
 2880.       _free( t$1653 )
 3098.       return
 3098.       end
 3098.       
 3104.       
 3104.       subroutine sflxes( hgdtg, hgdtc, hgdtm, hcdtg, hcdtc, hcdtm, egdtg, egdtc, egdqm, ecdtg, ecdtc, ecdqm, deadtg, deadtc, deadqm, icheck, bps, psb, dzm, em, gmt, gmq, cu, cuni, ctni, ustar, rhoair, psy, rcp, wc, wg, fc, fg, hr, ect, eci, egt, egi, egs, ec, eg, hc, hg, ecidif, egidif, ecmass, egmass, etmass, hflux, chf, shf, ra, rb, rd, rc, rg, tcta, tgta, ta, ea, etc, etg, btc, btg, u2, radt, rst, rsoil, hrr, phsoil, cc, cg, satcap, dtc, dtg, dtm, dqm, stm, thermk, tc, tg, td, capac, w, qm, tm, um, vm, psur, vcover, z0x, d, rdc, rbc, z0, itype, dtc3x, mon, nmax, jstneu, ncols, zlt2, topt2, tll2, tu2, defac2, ph12, ph22 )
 3104.       t$474 = ncols
 3383.       t$1680 = _zla( 0, ncols )
 3104.       t$1681 = _zla( 0, ncols )
 3104.       t$1682 = 3 * _zla( 0, ncols )
 3104.       t$1683 = 2 * _zla( 0, ncols )
 3104.       t$1684 = 3 * _zla( 0, ncols )
 3104.       t$1685 = 2 * _zla( 0, ncols )
 3416.       t$1688 = 8 * _zla( 0, ncols )
 3417.       t$1689 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 3417.       t$1691 = t$1689 + 8 * _zla( 0, ncols )
 3414.       t$1692 = 8 * ( 7 + t$1689 + 8 * _zla( 0, ncols ) ) / 8
 3414.       t$1694 = t$1692 + 8 * _zla( 0, ncols )
 3415.       t$1695 = 8 * ( 7 + t$1692 + 8 * _zla( 0, ncols ) ) / 8
 3415.       t$1697 = t$1695 + 8 * _zla( 0, ncols )
 3424.       t$1698 = 8 * ( 7 + t$1695 + 8 * _zla( 0, ncols ) ) / 8
 3424.       t$1700 = t$1698 + 8 * _zla( 0, ncols )
 3428.       t$1701 = 8 * ( 7 + t$1698 + 8 * _zla( 0, ncols ) ) / 8
 3428.       t$1703 = t$1701 + 8 * _zla( 0, ncols )
 3427.       t$1704 = 8 * ( 7 + t$1701 + 8 * _zla( 0, ncols ) ) / 8
 3427.       t$1706 = t$1704 + 8 * _zla( 0, ncols )
 3429.       t$1708 = t$1704 + 12 * _zla( 0, ncols )
 3422.       t$1709 = 8 * ( 7 + t$1704 + 12 * _zla( 0, ncols ) ) / 8
 3422.       t$1711 = t$1709 + 8 * _zla( 0, ncols )
 3425.       t$1712 = 8 * ( 7 + t$1709 + 8 * _zla( 0, ncols ) ) / 8
 3425.       t$1714 = t$1712 + 16 * _zla( 0, ncols )
 3419.       t$1715 = 8 * ( 7 + t$1712 + 16 * _zla( 0, ncols ) ) / 8
 3419.       t$1717 = t$1715 + 8 * _zla( 0, ncols )
 3420.       t$1718 = 8 * ( 7 + t$1715 + 8 * _zla( 0, ncols ) ) / 8
 3420.       t$1720 = t$1718 + 8 * _zla( 0, ncols )
 3421.       t$1721 = 8 * ( 7 + t$1718 + 8 * _zla( 0, ncols ) ) / 8
 3421.       t$1723 = t$1721 + 8 * _zla( 0, ncols )
 3423.       t$1724 = 8 * ( 7 + t$1721 + 8 * _zla( 0, ncols ) ) / 8
 3423.       t$1726 = t$1724 + 8 * _zla( 0, ncols )
 3408.       t$1727 = 8 * ( 7 + t$1724 + 8 * _zla( 0, ncols ) ) / 8
 3408.       t$1729 = t$1727 + 8 * _zla( 0, ncols )
 3438.       t$1730 = 8 * ( 7 + t$1727 + 8 * _zla( 0, ncols ) ) / 8
 3438.       t$1732 = t$1730 + 16 * _zla( 0, ncols )
 3104.       t$1686 = int( _alloc( t$1730 + 16 * _zla( 0, ncols ) ), 8 )
 3416.       t$1687 = t$1686
 3417.       t$1690 = t$1689 + t$1686
 3414.       t$1693 = t$1692 + t$1686
 3415.       t$1696 = t$1695 + t$1686
 3424.       t$1699 = t$1698 + t$1686
 3428.       t$1702 = t$1701 + t$1686
 3427.       t$1705 = t$1704 + t$1686
 3429.       t$1707 = t$1704 + t$1686 + 8 * _zla( 0, ncols )
 3422.       t$1710 = t$1709 + t$1686
 3425.       t$1713 = t$1712 + t$1686
 3419.       t$1716 = t$1715 + t$1686
 3420.       t$1719 = t$1718 + t$1686
 3421.       t$1722 = t$1721 + t$1686
 3423.       t$1725 = t$1724 + t$1686
 3408.       t$1728 = t$1727 + t$1686
 3438.       t$1731 = t$1730 + t$1686
 3445.       if ( ncols > 0 ) then
 3445.          $I_L3445_316 = 0
 3445. !dir$ ivdep
 3445.          do
 3445.             vcover2(1 + $I_L3445_316, 1) = vcover(1 + $I_L3445_316, 1)
 3445.             $I_L3445_316 = 1 + $I_L3445_316
 3445.             if ( $I_L3445_316 >= 2 * ncols ) exit
 3445.          enddo
 3445.       endif
 3446.       if ( nmax > 0 ) then
 3446.          $I_L3446_238 = 0
 3446. !dir$ ivdep
 3446.          do
 3447.             tcsav(1 + $I_L3446_238) = tc(1 + $I_L3446_238)
 3448.             tgsav(1 + $I_L3446_238) = tg(1 + $I_L3446_238)
 3449.             tmsav(1 + $I_L3446_238) = tm(1 + $I_L3446_238)
 3450.             qmsav(1 + $I_L3446_238) = qm(1 + $I_L3446_238)
 3451.             rdsav(1 + $I_L3446_238, 1) = radt(1 + $I_L3446_238, 1)
 3452.             rdsav(1 + $I_L3446_238, 2) = radt(1 + $I_L3446_238, 2)
 3453.             stm(1 + $I_L3446_238, 1) = rst(1 + $I_L3446_238, 1)
 3454.             stm(1 + $I_L3446_238, 2) = rst(1 + $I_L3446_238, 2)
 3455.             $I_L3446_238 = 1 + $I_L3446_238
 3446.             if ( $I_L3446_238 >= nmax ) exit
 3446.          enddo
 3446.       endif
 3459.       t$219 = ncols
 3459.       t$1529 = _zla( 0, ncols )
 3459.       t$1530 = _zla( 0, ncols )
 3459.       t$1531 = 2 * _zla( 0, ncols )
 3459.       t$1534 = 8 * _zla( 0, ncols )
 3459.       t$1535 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 3459.       t$1537 = t$1535 + 8 * _zla( 0, ncols )
 3459.       t$1532 = int( _alloc( t$1535 + 8 * _zla( 0, ncols ) ), 8 )
 3459.       t$1533 = t$1532
 3459.       t$1536 = t$1535 + t$1532
 3459.       if ( nmax > 0 ) then
 3459.          $SC_xd_I5 = xd%dim_1%EX
 3459.          $SC_xd_I6 = xd%dim_1%LB
 3459.          $SC_xd_I8 = xd%dim_2%SM
 3459.          $SC_xd_I7 = xd%dim_2%EX
 3459.          $SC_xd_I9 = xd%dim_2%LB
 3459.          $SC_z2_I0 = z2%dim_1%EX
 3459.          $SC_z2_I1 = z2%dim_1%LB
 3459.          $SC_z2_I3 = z2%dim_2%SM
 3459.          $SC_z2_I2 = z2%dim_2%EX
 3459.          $SC_z2_I4 = z2%dim_2%LB
 3459.          $I_L3459_240 = 0
 3459. !dir$ ivdep
 3459.          do
 3459.             if ( tg(1 + $I_L3459_240) <= 273.16000000000003 ) then
 3459.                if ( capac(1 + $I_L3459_240, 2) >= 1.0e-3 ) then
 3459.                   $xz_WR0_R0 = (z2%base_addr)(itype(1 + $I_L3459_240), mon(1 + $I_L3459_240), 0)
 3459.                   $sdep_WR0_R1 = 5.0 * capac(1 + $I_L3459_240, 2)
 3459.                   $sdep_WR0_R1 = min( $sdep_WR0_R1, 9.4999999999999996e-1 * $xz_WR0_R0 )
 3459.                   $d_WR0_R2 = $xz_WR0_R0 + -( ( $xz_WR0_R0 + -$sdep_WR0_R1 ) * ( 1.0/$xz_WR0_R0 * ( $xz_WR0_R0 + -d(1 + $I_L3459_240) ) ) )
 3459.                   d(1 + $I_L3459_240) = $d_WR0_R2
 3459.                   rbc(1 + $I_L3459_240) = ( $xz_WR0_R0 * rbc(1 + $I_L3459_240) * 1.0/( $xz_WR0_R0 + -$sdep_WR0_R1 ) )
 3459.                   rdc(1 + $I_L3459_240) = ( rdc(1 + $I_L3459_240) * 1.0/$xz_WR0_R0 * ( $xz_WR0_R0 + -$sdep_WR0_R1 ) )
 3459.                   z0x(1 + $I_L3459_240) = ( $xz_WR0_R0 + -$d_WR0_R2 ) * ( z0x(1 + $I_L3459_240) * 1.0/( $xz_WR0_R0 + -(xd%base_addr)(itype(1 + $I_L3459_240), mon(1 + $I_L3459_240), 0) ) )
 3459.                endif
 3459.             endif
 3459.             $I_L3459_240 = 1 + $I_L3459_240
 3459.             if ( $I_L3459_240 >= nmax ) exit
 3459.          enddo
 3459.       endif
 3459.       _free( t$1532 )
 3465.       if ( nmax > 0 ) then
 3465.          $I_L3465_242 = 0
 3465. !dir$ ivdep
 3465.          do
 3466.             z0(1 + $I_L3465_242) = z0x(1 + $I_L3465_242)
 3467.             $I_L3465_242 = 1 + $I_L3465_242
 3465.             if ( $I_L3465_242 >= nmax ) exit
 3465.          enddo
 3491.          $SC_bee_I15 = bee%dim_1%EX
 3491.          $SC_bee_I16 = bee%dim_1%LB
 3491.          $SC_phsat_I17 = phsat%dim_1%EX
 3491.          $SC_phsat_I18 = phsat%dim_1%LB
 3483.          $SC_zdepth_I10 = zdepth%dim_1%EX
 3483.          $SC_zdepth_I11 = zdepth%dim_1%LB
 3483.          $SC_zdepth_I13 = zdepth%dim_2%SM
 3483.          $SC_zdepth_I12 = zdepth%dim_2%EX
 3483.          $SC_zdepth_I14 = zdepth%dim_2%LB
 3472.          $I_L3472_244 = 0
 3472. !dir$ ivdep
 3472.          do
 3473.             $ntyp_S5 = itype(1 + $I_L3472_244)
 3474.             wc(1 + $I_L3472_244) = min( 1.0, ( capac(1 + $I_L3472_244, 1) * 1.0/satcap(1 + $I_L3472_244, 1) ) )
 3475.             wg(1 + $I_L3472_244) = min( 1.0, ( capac(1 + $I_L3472_244, 2) * 1.0/satcap(1 + $I_L3472_244, 2) ) )
 3482.             $wt_S4 = max( 1.0e-3, w(1 + $I_L3472_244, 1) )
 3483.             $wt_S6 = $wt_S4 + 25.0 * ( 7.5e-1 * (zdepth%base_addr)($ntyp_S5, 1, 0) * 1.0/( (zdepth%base_addr)($ntyp_S5, 2, 0) + (zdepth%base_addr)($ntyp_S5, 1, 0) ) ) * ( $wt_S4 + -( w(1 + $I_L3472_244, 2) * w(1 + $I_L3472_244, 2) * 1.0/$wt_S4 ) )
 3487.             $rsoil_WR0_R3 = 101840.0 * ( 1.0 + -_expn( 2.7000000000000001e-3 * log( ( max( 1.0e-3, ( min( 9.8999999999999999e-1, $wt_S6 ) ) ) ) ) ) )
 3487.             rsoil(1 + $I_L3472_244) = $rsoil_WR0_R3
 3491.             $psit_S7 = (phsat%base_addr)($ntyp_S5, 0) * _expn( -( (bee%base_addr)($ntyp_S5, 0) * log( ( max( 1.0e-3, ( min( 9.8999999999999999e-1, $wt_S6 ) ) ) ) ) ) )
 3499.             $eee_S8 = ( 2.1235102925243773e-2 * $psit_S7 * 1.0/tg(1 + $I_L3472_244) )
 3509.             $hrr_WR0_R4 = max( 1.0e-3, _expn( $eee_S8 ) )
 3509.             hrr(1 + $I_L3472_244) = $hrr_WR0_R4
 3511.             hr(1 + $I_L3472_244) = $hrr_WR0_R4
 3513.             if ( tg(1 + $I_L3472_244) <= 273.16000000000003 ) then
 3514.                vcover2(1 + $I_L3472_244, 2) = 1.0
 3515.                wg(1 + $I_L3472_244) = min( 1.0, 250.0 * capac(1 + $I_L3472_244, 2) )
 3516.                rst(1 + $I_L3472_244, 2) = $rsoil_WR0_R3
 3517.                stm(1 + $I_L3472_244, 2) = $rsoil_WR0_R3
 3517.             endif
 3520.             fc(1 + $I_L3472_244) = 1.0
 3521.             fg(1 + $I_L3472_244) = 1.0
 3522.             $I_L3472_244 = 1 + $I_L3472_244
 3518.             if ( $I_L3472_244 >= nmax ) exit
 3518.          enddo
 3518.       endif
 3527.       $ncount_S9 = 0
 3527.       do
 3529.          $ncount_S9 = 1 + $ncount_S9
 3530.          if ( nmax > 0 ) then
 3530.             $I_L3530_246 = 0
 3530. !dir$ ivdep
 3530.             do
 3531.                icheck(1 + $I_L3530_246) = 1
 3536.                etc(1 + $I_L3530_246) = _expn( 21.65605 + -( 5418.0 * 1.0/tc(1 + $I_L3530_246) ) )
 3537.                etg(1 + $I_L3530_246) = _expn( 21.65605 + -( 5418.0 * 1.0/tg(1 + $I_L3530_246) ) )
 3538.                $I_L3530_246 = 1 + $I_L3530_246
 3530.                if ( $I_L3530_246 >= nmax ) exit
 3530.             enddo
 3530.          endif
 3542.          if ( $ncount_S9 == 1 ) then
 3543.             if ( nmax > 0 ) then
 3543.                $I_L3543_248 = 0
 3543. !dir$ ivdep
 3543.                do
 3544.                   ta(1 + $I_L3543_248) = tc(1 + $I_L3543_248)
 3548.                   ea(1 + $I_L3543_248) = ( qm(1 + $I_L3543_248) * psur(1 + $I_L3543_248) * 1.0/( 6.22e-1 + qm(1 + $I_L3543_248) ) )
 3549.                   $I_L3543_248 = 1 + $I_L3543_248
 3543.                   if ( $I_L3543_248 >= nmax ) exit
 3543.                enddo
 3543.             endif
 3543.          endif
 3557.          tm$448 = loc( (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) )
 3557.          z2 = _copyin( (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) )
 3557.          t$355 = ncols
 3557.          t$1598 = _zla( 0, ncols )
 3557.          t$1601 = 8 * _zla( 0, ncols )
 3557.          t$1599 = int( _alloc( 8 * _zla( 0, ncols ) ), 8 )
 3557.          t$1600 = t$1599
 3557.          if ( nmax > 0 ) then
 3557.             $I_L3557_250 = 0
 3557. !dir$ ivdep
 3557.             do
 3557.                if ( icheck(1 + $I_L3557_250) == 1 ) then
 3557.                   $speedm_WR0_R5 = _sqrt( vm(1 + $I_L3557_250) * vm(1 + $I_L3557_250) + um(1 + $I_L3557_250) * um(1 + $I_L3557_250) )
 3557.                   $speedm_WR0_R5 = max( 2.0, $speedm_WR0_R5 )
 3557.                   speedm(1 + $I_L3557_250) = $speedm_WR0_R5
 3557.                endif
 3557.                $I_L3557_250 = 1 + $I_L3557_250
 3557.                if ( $I_L3557_250 >= nmax ) exit
 3557.             enddo
 3557.             $I_L3557_252 = 0
 3557. !dir$ ivdep
 3557.             do
 3557.                $ntyp_S14 = itype(1 + $I_L3557_252)
 3557.                $zl_S15 = z2($ntyp_S14, mon(1 + $I_L3557_252)) + 11.785 * z0(1 + $I_L3557_252)
 3557.                $cuni_WR0_R6 = 2.5 * log( ( 1.0/z0(1 + $I_L3557_252) * ( dzm(1 + $I_L3557_252) + -d(1 + $I_L3557_252) ) ) )
 3557.                cuni(1 + $I_L3557_252) = $cuni_WR0_R6
 3557.                $ustarn_WR0_R7 = ( speedm(1 + $I_L3557_252) * 1.0/$cuni_WR0_R6 )
 3557.                if ( $zl_S15 < dzm(1 + $I_L3557_252) ) then
 3557.                   $xct1_S16 = log( ( ( dzm(1 + $I_L3557_252) + -d(1 + $I_L3557_252) ) * 1.0/( $zl_S15 + -d(1 + $I_L3557_252) ) ) )
 3557.                   $xct2_S17 = log( ( 1.0/z0(1 + $I_L3557_252) * ( $zl_S15 + -d(1 + $I_L3557_252) ) ) )
 3557.                   $xctu1_S20 = $xct1_S16
 3557.                   $xctu2_S19 = log( ( ( $zl_S15 + -d(1 + $I_L3557_252) ) * 1.0/( z2($ntyp_S14, mon(1 + $I_L3557_252)) + -d(1 + $I_L3557_252) ) ) )
 3557.                   ctni(1 + $I_L3557_252) = 2.5 * ( $xct1_S16 + 7.5e-1 * $xct2_S17 )
 3557.                else
 3557.                   $xct2_S18 = log( ( 1.0/z0(1 + $I_L3557_252) * ( dzm(1 + $I_L3557_252) + -d(1 + $I_L3557_252) ) ) )
 3557.                   $xctu1_S20 = 0.0
 3557.                   $xctu2_S19 = log( ( ( dzm(1 + $I_L3557_252) + -d(1 + $I_L3557_252) ) * 1.0/( z2($ntyp_S14, mon(1 + $I_L3557_252)) + -d(1 + $I_L3557_252) ) ) )
 3557.                   ctni(1 + $I_L3557_252) = 1.875 * $xct2_S18
 3557.                endif
 3557.                u2(1 + $I_L3557_252) = speedm(1 + $I_L3557_252) + -2.5 * $ustarn_WR0_R7 * ( $xctu1_S20 + 7.5e-1 * $xctu2_S19 )
 3557.                $I_L3557_252 = 1 + $I_L3557_252
 3557.                if ( $I_L3557_252 >= nmax ) exit
 3557.             enddo
 3557.          endif
 3557.          _free( t$1599 )
 3557.          (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) = _copyout( z2 )
 3562.          jstneu = .false.
 3564.          tm$470 = loc( (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) )
 3564.          z2 = _copyin( (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) )
 3564.          t$355 = ncols
 3564.          t$1598 = _zla( 0, ncols )
 3564.          t$1601 = 8 * _zla( 0, ncols )
 3564.          t$1599 = int( _alloc( 8 * _zla( 0, ncols ) ), 8 )
 3564.          t$1600 = t$1599
 3564.          if ( nmax > 0 ) then
 3564.             $I_L3564_254 = 0
 3564. !dir$ ivdep
 3564.             do
 3564.                if ( icheck(1 + $I_L3564_254) == 1 ) then
 3564.                   $speedm_WR0_R8 = _sqrt( vm(1 + $I_L3564_254) * vm(1 + $I_L3564_254) + um(1 + $I_L3564_254) * um(1 + $I_L3564_254) )
 3564.                   $speedm_WR0_R8 = max( 2.0, $speedm_WR0_R8 )
 3564.                   speedm(1 + $I_L3564_254) = $speedm_WR0_R8
 3564.                endif
 3564.                $I_L3564_254 = 1 + $I_L3564_254
 3564.                if ( $I_L3564_254 >= nmax ) exit
 3564.             enddo
 3564.             $I_L3564_256 = 0
 3564. !dir$ ivdep
 3564.             do
 3564.                if ( icheck(1 + $I_L3564_256) == 1 ) then
 3564.                   $thm_S24 = bps(1 + $I_L3564_256) * tm(1 + $I_L3564_256)
 3564.                   $ntyp_S23 = itype(1 + $I_L3564_256)
 3564.                   $zl_S28 = z2($ntyp_S23, mon(1 + $I_L3564_256)) + 11.785 * z0(1 + $I_L3564_256)
 3564.                   $thvgm_S25 = ta(1 + $I_L3564_256) + -$thm_S24
 3564.                   $rib_S26 = -( 9.8000000000000007 * $thvgm_S25 * ( dzm(1 + $I_L3564_256) + -d(1 + $I_L3564_256) ) * 1.0/( $thm_S24 * ( speedm(1 + $I_L3564_256) + -u2(1 + $I_L3564_256) ) * ( speedm(1 + $I_L3564_256) + -u2(1 + $I_L3564_256) ) ) )
 3564.                   $rib_S27 = min( 1.6500000000000001e-1, max( -1.5, $rib_S26 ) )
 3564.                   if ( ( min( 1.6500000000000001e-1, max( -1.5, $rib_S26 ) ) ) < 0.0 ) then
 3564.                      $grib_S29 = -$rib_S27
 3564.                      $grzl_S31 = -( $rib_S27 * 1.0/( dzm(1 + $I_L3564_256) + -d(1 + $I_L3564_256) ) * ( $zl_S28 + -d(1 + $I_L3564_256) ) )
 3564.                      $grz2_S30 = -( $rib_S27 * z0(1 + $I_L3564_256) * 1.0/( dzm(1 + $I_L3564_256) + -d(1 + $I_L3564_256) ) )
 3564.                      $fvv_S32 = -3.15e-1 * $rib_S27
 3564.                      if ( $zl_S28 < dzm(1 + $I_L3564_256) ) then
 3564.                         $ftt_S33 = ( 9.0400000000000003e-1 * $grib_S29 ) + -6.7800000000000005e-1 * $grz2_S30 + -2.2600000000000001e-1 * $grzl_S31
 3564.                      else
 3564.                         $ftt_S33 = 7.5e-1 * ( ( 9.0400000000000003e-1 * $grib_S29 ) + -( 9.0400000000000003e-1 * $grz2_S30 ) )
 3564.                      endif
 3564.                      $cui_S38 = cuni(1 + $I_L3564_256) + -$fvv_S32
 3564.                      $cti_S39 = ctni(1 + $I_L3564_256) + -$ftt_S33
 3564.                   else
 3564.                      $rzl_S35 = ( $zl_S28 + -d(1 + $I_L3564_256) ) * ( $rib_S27 * 1.0/( dzm(1 + $I_L3564_256) + -d(1 + $I_L3564_256) ) )
 3564.                      $rz2_S34 = z0(1 + $I_L3564_256) * ( $rib_S27 * 1.0/( dzm(1 + $I_L3564_256) + -d(1 + $I_L3564_256) ) )
 3564.                      $fvv_S36 = 66.849999999999994 * $rib_S27
 3564.                      if ( $zl_S28 < dzm(1 + $I_L3564_256) ) then
 3564.                         $ftt_S37 = ( 66.849999999999994 * $rib_S27 ) + -50.137499999999996 * $rz2_S34 + -16.712499999999999 * $rzl_S35
 3564.                      else
 3564.                         $ftt_S37 = 7.5e-1 * ( ( 66.849999999999994 * $rib_S27 ) + -( 66.849999999999994 * $rz2_S34 ) )
 3564.                      endif
 3564.                      $cui_S38 = $fvv_S36 + cuni(1 + $I_L3564_256)
 3564.                      $cti_S39 = $ftt_S37 + ctni(1 + $I_L3564_256)
 3564.                   endif
 3564.                   cu(1 + $I_L3564_256) = 1.0/$cui_S38
 3564.                   $ustar_WR0_R9 = speedm(1 + $I_L3564_256) * 1.0/$cui_S38
 3564.                   ustar(1 + $I_L3564_256) = $ustar_WR0_R9
 3564.                   ra(1 + $I_L3564_256) = ( max( 8.0000000000000004e-1, ( $cti_S39 * 1.0/$ustar_WR0_R9 ) ) )
 3564.                endif
 3564.                $I_L3564_256 = 1 + $I_L3564_256
 3564.                if ( $I_L3564_256 >= nmax ) exit
 3564.             enddo
 3564.          endif
 3564.          _free( t$1599 )
 3564.          (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) = _copyout( z2 )
 3569.          if ( nmax > 0 ) then
 3569.             $I_L3569_258 = 0
 3569. !dir$ ivdep
 3569.             do
 3570.                tcta(1 + $I_L3569_258) = -tm(1 + $I_L3569_258) + ( tc(1 + $I_L3569_258) * 1.0/bps(1 + $I_L3569_258) )
 3571.                tgta(1 + $I_L3569_258) = -tm(1 + $I_L3569_258) + ( tg(1 + $I_L3569_258) * 1.0/bps(1 + $I_L3569_258) )
 3572.                $I_L3569_258 = 1 + $I_L3569_258
 3569.                if ( $I_L3569_258 >= nmax ) exit
 3569.             enddo
 3569.          endif
 3573.          tm$486 = loc( (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) )
 3573.          z2 = _copyin( (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) )
 3573.          t$339 = ncols
 3573.          t$1589 = _zla( 0, ncols )
 3573.          t$1590 = _zla( 0, ncols )
 3573.          t$1591 = 2 * _zla( 0, ncols )
 3573.          t$1594 = 8 * _zla( 0, ncols )
 3573.          t$1595 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 3573.          t$1597 = t$1595 + 8 * _zla( 0, ncols )
 3573.          t$1592 = int( _alloc( t$1595 + 8 * _zla( 0, ncols ) ), 8 )
 3573.          t$1593 = t$1592
 3573.          t$1596 = t$1595 + t$1592
 3573.          if ( nmax > 0 ) then
 3573.             $I_L3573_260 = 0
 3573. !dir$ ivdep
 3573.             do
 3573.                $ntyp_S42 = itype(1 + $I_L3573_260)
 3573.                if ( tcta(1 + $I_L3573_260) > 0.0 ) then
 3573.                   temdif(1 + $I_L3573_260) = 1.0000000000000001e-1 + tcta(1 + $I_L3573_260)
 3573.                else
 3573.                   temdif(1 + $I_L3573_260) = 1.0000000000000001e-1
 3573.                endif
 3573.                rb(1 + $I_L3573_260) = 1.0/( ( 1.0/rbc(1 + $I_L3573_260) * _sqrt( u2(1 + $I_L3573_260) ) ) + 4.0000000000000001e-3 * zlt2(1 + $I_L3573_260, 1) )
 3573.                if ( tgta(1 + $I_L3573_260) > 0 ) then
 3573.                   temdif(1 + $I_L3573_260) = 1.0000000000000001e-1 + tgta(1 + $I_L3573_260)
 3573.                else
 3573.                   temdif(1 + $I_L3573_260) = 1.0000000000000001e-1
 3573.                endif
 3573.                $fih_WR0_R11 = _sqrt( 1.0 + ( 88.290000000000006 * temdif(1 + $I_L3573_260) * z2($ntyp_S42, mon(1 + $I_L3573_260)) * 1.0/( u2(1 + $I_L3573_260) * u2(1 + $I_L3573_260) * tg(1 + $I_L3573_260) ) ) )
 3573.                rd(1 + $I_L3573_260) = ( rdc(1 + $I_L3573_260) * 1.0/( $fih_WR0_R11 * u2(1 + $I_L3573_260) ) )
 3573.                $I_L3573_260 = 1 + $I_L3573_260
 3573.                if ( $I_L3573_260 >= nmax ) exit
 3573.             enddo
 3573.          endif
 3573.          _free( t$1592 )
 3573.          (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) = _copyout( z2 )
 3581.          $icount_S43 = 0
 3599.          $SC_rootd_I19 = rootd%dim_1%EX
 3599.          $SC_rootd_I20 = rootd%dim_1%LB
 3599.          $SC_rootd_I22 = rootd%dim_2%SM
 3599.          $SC_rootd_I21 = rootd%dim_2%EX
 3599.          $SC_rootd_I23 = rootd%dim_2%LB
 3599.          $SC_zdepth_I10 = zdepth%dim_1%EX
 3599.          $SC_zdepth_I11 = zdepth%dim_1%LB
 3599.          $SC_zdepth_I13 = zdepth%dim_2%SM
 3599.          $SC_zdepth_I12 = zdepth%dim_2%EX
 3599.          $SC_zdepth_I14 = zdepth%dim_2%LB
 3589.          $SC_z2_I0 = z2%dim_1%EX
 3589.          $SC_z2_I1 = z2%dim_1%LB
 3589.          $SC_z2_I3 = z2%dim_2%SM
 3589.          $SC_z2_I2 = z2%dim_2%EX
 3589.          $SC_z2_I4 = z2%dim_2%LB
 3589.          do
 3582.             $icount_S43 = 1 + $icount_S43
 3583.             if ( nmax > 0 ) then
 3583.                $I_L3583_262 = 0
 3583. !dir$ ivdep
 3583.                do
 3584.                   if ( icheck(1 + $I_L3583_262) == 1 ) then
 3585.                      tsav(1 + $I_L3583_262) = ta(1 + $I_L3583_262)
 3586.                      esav(1 + $I_L3583_262) = ea(1 + $I_L3583_262)
 3586.                   endif
 3588.                   $I_L3583_262 = 1 + $I_L3583_262
 3587.                   if ( $I_L3583_262 >= nmax ) exit
 3587.                enddo
 3587.             endif
 3589.             tm$508 = loc( (z2%base_addr)($SC_z2_I1, $SC_z2_I4, 0) )
 3589.             z2 = _copyin( (z2%base_addr)($SC_z2_I1, $SC_z2_I4, 0) )
 3589.             t$355 = ncols
 3589.             t$1598 = _zla( 0, ncols )
 3589.             t$1601 = 8 * _zla( 0, ncols )
 3589.             t$1599 = int( _alloc( 8 * _zla( 0, ncols ) ), 8 )
 3589.             t$1600 = t$1599
 3589.             if ( nmax > 0 ) then
 3589.                $I_L3589_264 = 0
 3589. !dir$ ivdep
 3589.                do
 3589.                   if ( icheck(1 + $I_L3589_264) == 1 ) then
 3589.                      $speedm_WR0_R12 = _sqrt( vm(1 + $I_L3589_264) * vm(1 + $I_L3589_264) + um(1 + $I_L3589_264) * um(1 + $I_L3589_264) )
 3589.                      $speedm_WR0_R12 = max( 2.0, $speedm_WR0_R12 )
 3589.                      speedm(1 + $I_L3589_264) = $speedm_WR0_R12
 3589.                   endif
 3589.                   $I_L3589_264 = 1 + $I_L3589_264
 3589.                   if ( $I_L3589_264 >= nmax ) exit
 3589.                enddo
 3589.                $I_L3589_266 = 0
 3589. !dir$ ivdep
 3589.                do
 3589.                   if ( icheck(1 + $I_L3589_266) == 1 ) then
 3589.                      $thm_S48 = bps(1 + $I_L3589_266) * tm(1 + $I_L3589_266)
 3589.                      $ntyp_S47 = itype(1 + $I_L3589_266)
 3589.                      $zl_S52 = z2($ntyp_S47, mon(1 + $I_L3589_266)) + 11.785 * z0(1 + $I_L3589_266)
 3589.                      $thvgm_S49 = ta(1 + $I_L3589_266) + -$thm_S48
 3589.                      $rib_S50 = -( 9.8000000000000007 * $thvgm_S49 * ( dzm(1 + $I_L3589_266) + -d(1 + $I_L3589_266) ) * 1.0/( $thm_S48 * ( speedm(1 + $I_L3589_266) + -u2(1 + $I_L3589_266) ) * ( speedm(1 + $I_L3589_266) + -u2(1 + $I_L3589_266) ) ) )
 3589.                      $rib_S51 = min( 1.6500000000000001e-1, max( -1.5, $rib_S50 ) )
 3589.                      if ( ( min( 1.6500000000000001e-1, max( -1.5, $rib_S50 ) ) ) < 0.0 ) then
 3589.                         $grib_S55 = -$rib_S51
 3589.                         $grzl_S54 = -( $rib_S51 * 1.0/( dzm(1 + $I_L3589_266) + -d(1 + $I_L3589_266) ) * ( $zl_S52 + -d(1 + $I_L3589_266) ) )
 3589.                         $grz2_S53 = -( $rib_S51 * z0(1 + $I_L3589_266) * 1.0/( dzm(1 + $I_L3589_266) + -d(1 + $I_L3589_266) ) )
 3589.                         $fvv_S56 = -3.15e-1 * $rib_S51
 3589.                         if ( $zl_S52 < dzm(1 + $I_L3589_266) ) then
 3589.                            $ftt_S57 = ( 9.0400000000000003e-1 * $grib_S55 ) + -6.7800000000000005e-1 * $grz2_S53 + -2.2600000000000001e-1 * $grzl_S54
 3589.                         else
 3589.                            $ftt_S57 = 7.5e-1 * ( -( 9.0400000000000003e-1 * $grz2_S53 ) + ( 9.0400000000000003e-1 * $grib_S55 ) )
 3589.                         endif
 3589.                         $cui_S62 = cuni(1 + $I_L3589_266) + -$fvv_S56
 3589.                         $cti_S63 = ctni(1 + $I_L3589_266) + -$ftt_S57
 3589.                      else
 3589.                         $rzl_S59 = ( $zl_S52 + -d(1 + $I_L3589_266) ) * ( $rib_S51 * 1.0/( dzm(1 + $I_L3589_266) + -d(1 + $I_L3589_266) ) )
 3589.                         $rz2_S58 = z0(1 + $I_L3589_266) * ( $rib_S51 * 1.0/( dzm(1 + $I_L3589_266) + -d(1 + $I_L3589_266) ) )
 3589.                         $fvv_S60 = 66.849999999999994 * $rib_S51
 3589.                         if ( $zl_S52 < dzm(1 + $I_L3589_266) ) then
 3589.                            $ftt_S61 = ( 66.849999999999994 * $rib_S51 ) + -50.137499999999996 * $rz2_S58 + -16.712499999999999 * $rzl_S59
 3589.                         else
 3589.                            $ftt_S61 = 7.5e-1 * ( ( 66.849999999999994 * $rib_S51 ) + -( 66.849999999999994 * $rz2_S58 ) )
 3589.                         endif
 3589.                         $cui_S62 = $fvv_S60 + cuni(1 + $I_L3589_266)
 3589.                         $cti_S63 = $ftt_S61 + ctni(1 + $I_L3589_266)
 3589.                      endif
 3589.                      cu(1 + $I_L3589_266) = 1.0/$cui_S62
 3589.                      $ustar_WR0_R13 = speedm(1 + $I_L3589_266) * 1.0/$cui_S62
 3589.                      ustar(1 + $I_L3589_266) = $ustar_WR0_R13
 3589.                      ra(1 + $I_L3589_266) = ( max( 8.0000000000000004e-1, ( $cti_S63 * 1.0/$ustar_WR0_R13 ) ) )
 3589.                   endif
 3589.                   $I_L3589_266 = 1 + $I_L3589_266
 3589.                   if ( $I_L3589_266 >= nmax ) exit
 3589.                enddo
 3589.             endif
 3589.             _free( t$1599 )
 3589.             (z2%base_addr)($SC_z2_I1, $SC_z2_I4, 0) = _copyout( z2 )
 3594.             t$317 = ncols
 3594.             t$1586 = _zla( 0, ncols )
 3594.             t$1587 = _zla( 0, ncols )
 3594.             t$1588 = 2 * _zla( 0, ncols )
 3594.             if ( nmax > 0 ) then
 3594.                $I_L3594_268 = 0
 3594. !dir$ ivdep
 3594.                do
 3594.                   if ( icheck(1 + $I_L3594_268) == 1 ) then
 3594.                      rcp(1 + $I_L3594_268) = 1004.6 * rhoair(1 + $I_L3594_268)
 3594.                      $rc_WR0_R15 = rb(1 + $I_L3594_268) + rb(1 + $I_L3594_268) * fc(1 + $I_L3594_268) + fc(1 + $I_L3594_268) * rst(1 + $I_L3594_268, 1)
 3594.                      rc(1 + $I_L3594_268) = $rc_WR0_R15
 3594.                      $coc_S70 = ( 1.0/$rc_WR0_R15 * ( 1.0 + -wc(1 + $I_L3594_268) ) ) + ( 5.0e-1 * wc(1 + $I_L3594_268) * 1.0/rb(1 + $I_L3594_268) )
 3594.                      $rg_WR0_R16 = fg(1 + $I_L3594_268) * rst(1 + $I_L3594_268, 2)
 3594.                      rg(1 + $I_L3594_268) = $rg_WR0_R16
 3594.                      $rsurf_S65 = fg(1 + $I_L3594_268) * rsoil(1 + $I_L3594_268)
 3594.                      $tem_S66 = ( vcover2(1 + $I_L3594_268, 2) * 1.0/( $rg_WR0_R16 + rd(1 + $I_L3594_268) ) * ( 1.0 + -wg(1 + $I_L3594_268) ) )
 3594.                      $cog2_S67 = $tem_S66 + ( ( 1.0 + -vcover2(1 + $I_L3594_268, 2) ) * 1.0/( $rsurf_S65 + rd(1 + $I_L3594_268) ) ) + ( vcover2(1 + $I_L3594_268, 2) * 1.0/( 44.0 + $rsurf_S65 + rd(1 + $I_L3594_268) ) )
 3594.                      $cog1_S71 = $tem_S66 + hr(1 + $I_L3594_268) * ( $cog2_S67 + -$tem_S66 )
 3594.                      $xnum_S68 = vcover2(1 + $I_L3594_268, 2) * ( wg(1 + $I_L3594_268) * 1.0/rd(1 + $I_L3594_268) )
 3594.                      $d2_S73 = $coc_S70 + ( $cog2_S67 + $xnum_S68 ) + 1.0/ra(1 + $I_L3594_268)
 3594.                      $top_S74 = ( em(1 + $I_L3594_268) * 1.0/ra(1 + $I_L3594_268) ) + $coc_S70 * etc(1 + $I_L3594_268) + etg(1 + $I_L3594_268) * ( $xnum_S68 + $cog1_S71 )
 3594.                      ea(1 + $I_L3594_268) = ( $top_S74 * 1.0/$d2_S73 )
 3594.                   endif
 3594.                   $I_L3594_268 = 1 + $I_L3594_268
 3594.                   if ( $I_L3594_268 >= nmax ) exit
 3594.                enddo
 3594.             endif
 3599.             tm$566 = loc( (rootd%base_addr)($SC_rootd_I20, $SC_rootd_I23, 0) )
 3599.             rootd = _copyin( (rootd%base_addr)($SC_rootd_I20, $SC_rootd_I23, 0) )
 3599.             tm$568 = loc( (zdepth%base_addr)($SC_zdepth_I11, $SC_zdepth_I14, 0) )
 3599.             zdepth = _copyin( (zdepth%base_addr)($SC_zdepth_I11, $SC_zdepth_I14, 0) )
 3599.             t$388 = ncols
 3599.             t$1624 = _zla( 0, ncols )
 3599.             t$1625 = _zla( 0, ncols )
 3599.             t$1626 = 2 * _zla( 0, ncols )
 3599.             t$1627 = 3 * _zla( 0, ncols )
 3599.             t$1628 = 3 * _zla( 0, ncols )
 3599.             t$1631 = 8 * _zla( 0, ncols )
 3599.             t$1632 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 3599.             t$1634 = t$1632 + 8 * _zla( 0, ncols )
 3599.             t$1635 = 8 * ( 7 + t$1632 + 8 * _zla( 0, ncols ) ) / 8
 3599.             t$1637 = t$1635 + 8 * _zla( 0, ncols )
 3599.             t$1638 = 8 * ( 7 + t$1635 + 8 * _zla( 0, ncols ) ) / 8
 3599.             t$1640 = t$1638 + 8 * _zla( 0, ncols )
 3599.             t$1641 = 8 * ( 7 + t$1638 + 8 * _zla( 0, ncols ) ) / 8
 3599.             t$1643 = t$1641 + 8 * _zla( 0, ncols )
 3599.             t$1644 = 8 * ( 7 + t$1641 + 8 * _zla( 0, ncols ) ) / 8
 3599.             t$1646 = t$1644 + 8 * _zla( 0, ncols )
 3599.             t$1647 = 8 * ( 7 + t$1644 + 8 * _zla( 0, ncols ) ) / 8
 3599.             t$1649 = t$1647 + 8 * _zla( 0, ncols )
 3599.             t$1629 = int( _alloc( t$1647 + 8 * _zla( 0, ncols ) ), 8 )
 3599.             t$1630 = t$1629
 3599.             t$1633 = t$1632 + t$1629
 3599.             t$1636 = t$1635 + t$1629
 3599.             t$1639 = t$1638 + t$1629
 3599.             t$1642 = t$1641 + t$1629
 3599.             t$1645 = t$1644 + t$1629
 3599.             t$1648 = t$1647 + t$1629
 3599.             if ( $icount_S43 == 1 ) then
 3599.                if ( nmax > 0 ) then
 3599.                   $I_L3599_270 = 0
 3599. !dir$ ivdep
 3599.                   do
 3599.                      if ( icheck(1 + $I_L3599_270) == 1 ) then
 3599.                         $ntyp_S76 = itype(1 + $I_L3599_270)
 3599.                         if ( $ntyp_S76 /= 11 ) then
 3599.                            if ( $ntyp_S76 /= 13 ) then
 3599.                               $tv_WR0_R17 = tc(1 + $I_L3599_270)
 3599.                               $d2_WR0_R18 = ( 1.0/( topt2(1 + $I_L3599_270, 1) + -tll2(1 + $I_L3599_270, 1) ) * ( tu2(1 + $I_L3599_270, 1) + -topt2(1 + $I_L3599_270, 1) ) )
 3599.                               $tv_WR0_R17 = max( min( $tv_WR0_R17, ( -1.0000000000000001e-1 + tu2(1 + $I_L3599_270, 1) ) ), ( 1.0000000000000001e-1 + tll2(1 + $I_L3599_270, 1) ) )
 3599.                               $ft_WR0_R19 = _expn( $d2_WR0_R18 * log( ( ( tu2(1 + $I_L3599_270, 1) + -$tv_WR0_R17 ) * 1.0/( tu2(1 + $I_L3599_270, 1) + -topt2(1 + $I_L3599_270, 1) ) ) ) ) * ( 1.0/( topt2(1 + $I_L3599_270, 1) + -tll2(1 + $I_L3599_270, 1) ) * ( $tv_WR0_R17 + -tll2(1 + $I_L3599_270, 1) ) )
 3599.                               $ft_WR0_R19 = max( 1.0000000000000001e-5, min( 1.0, $ft_WR0_R19 ) )
 3599.                               ft1(1 + $I_L3599_270) = $ft_WR0_R19
 3599.                               $xrot_S77 = rootd($ntyp_S76, 1)
 3599.                               $SC_dep_I25 = 0.0
 3599.                               $SC_dep_I26 = 0.0
 3599.                               $SC_dep_I24 = min( $xrot_S77, zdepth($ntyp_S76, 1) )
 3599.                               $xrot_S78 = $xrot_S77 + -zdepth($ntyp_S76, 1)
 3599.                               if ( $xrot_S77 + -zdepth($ntyp_S76, 1) > 0.0 ) then
 3599.                                  $SC_dep_I25 = min( $xrot_S78, zdepth($ntyp_S76, 2) )
 3599.                                  $xrot_S78 = $xrot_S78 + -zdepth($ntyp_S76, 2)
 3599.                               endif
 3599.                               if ( $xrot_S78 > 0.0 ) then
 3599.                                  $SC_dep_I26 = min( $xrot_S78, zdepth($ntyp_S76, 3) )
 3599.                               endif
 3599.                               $xdr_S79 = ( 1.0/$xrot_S77 * ( $SC_dep_I24 * phsoil(1 + $I_L3599_270, 1) + $SC_dep_I25 * phsoil(1 + $I_L3599_270, 2) + $SC_dep_I26 * phsoil(1 + $I_L3599_270, 3) ) )
 3599.                               $xdr_S80 = log( max( 1.0000000000000001e-5, -$xdr_S79 ) )
 3599.                               $arg_S81 = -( ph12(1 + $I_L3599_270, 1) * ( ph22(1 + $I_L3599_270, 1) + -$xdr_S80 ) )
 3599.                               $fp_WR0_R20 = 1.0 + -_expn( ( min( 0.0, $arg_S81 ) ) )
 3599.                               if ( w(1 + $I_L3599_270, 2) > 1.4999999999999999e-1 ) then
 3599.                                  $fp_WR0_R20 = max( 5.0000000000000003e-2, $fp_WR0_R20 )
 3599.                               endif
 3599.                               $fp_WR0_R20 = max( 1.0000000000000001e-5, min( 1.0, $fp_WR0_R20 ) )
 3599.                               fp1(1 + $I_L3599_270) = $fp_WR0_R20
 3599.                            endif
 3599.                         endif
 3599.                      endif
 3599.                      $I_L3599_270 = 1 + $I_L3599_270
 3599.                      if ( $I_L3599_270 >= nmax ) exit
 3599.                   enddo
 3599.                endif
 3599.             endif
 3599.             if ( nmax > 0 ) then
 3599.                $I_L3599_272 = 0
 3599. !dir$ ivdep
 3599.                do
 3599.                   if ( icheck(1 + $I_L3599_272) == 1 ) then
 3599.                      $drop_WR0_R21 = -ea(1 + $I_L3599_272) + _expn( 21.65605 + -( 5418.0 * 1.0/ta(1 + $I_L3599_272) ) )
 3599.                      $fd_WR0_R22 = max( 1.0000000000000001e-5, 1.0/( 1.0 + $drop_WR0_R21 * defac2(1 + $I_L3599_272, 1) ) )
 3599.                      $fd_WR0_R22 = min( 1.0, $fd_WR0_R22 )
 3599.                      fd(1 + $I_L3599_272) = $fd_WR0_R22
 3599.                   endif
 3599.                   $I_L3599_272 = 1 + $I_L3599_272
 3599.                   if ( $I_L3599_272 >= nmax ) exit
 3599.                enddo
 3599.                $I_L3599_274 = 0
 3599. !dir$ ivdep
 3599.                do
 3599.                   if ( icheck(1 + $I_L3599_274) == 1 ) then
 3599.                      $ntyp_S85 = itype(1 + $I_L3599_274)
 3599.                      rst(1 + $I_L3599_274, 2) = 100000.0
 3599.                      if ( $ntyp_S85 == 11 .orelse. $ntyp_S85 == 13 ) then
 3599.                         rst(1 + $I_L3599_274, 1) = 100000.0
 3599.                      else
 3599.                         $ftpd_WR0_R23 = fd(1 + $I_L3599_274) * fp1(1 + $I_L3599_274) * ft1(1 + $I_L3599_274)
 3599.                         $rst_WR0_R24 = ( stm(1 + $I_L3599_274, 1) * 1.0/( $ftpd_WR0_R23 * vcover2(1 + $I_L3599_274, 1) ) )
 3599.                         $rst_WR0_R24 = min( 100000.0, $rst_WR0_R24 )
 3599.                         rst(1 + $I_L3599_274, 1) = $rst_WR0_R24
 3599.                      endif
 3599.                   endif
 3599.                   $I_L3599_274 = 1 + $I_L3599_274
 3599.                   if ( $I_L3599_274 >= nmax ) exit
 3599.                enddo
 3599.             endif
 3599.             _free( t$1629 )
 3599.             (zdepth%base_addr)($SC_zdepth_I11, $SC_zdepth_I14, 0) = _copyout( zdepth )
 3599.             (rootd%base_addr)($SC_rootd_I20, $SC_rootd_I23, 0) = _copyout( rootd )
 3605.             t$317 = ncols
 3605.             t$1586 = _zla( 0, ncols )
 3605.             t$1587 = _zla( 0, ncols )
 3605.             t$1588 = 2 * _zla( 0, ncols )
 3605.             if ( nmax <= 0 ) goto 10
 3605.             $I_L3605_276 = 0
 3605. !dir$ ivdep
 3605.             do
 3605.                if ( icheck(1 + $I_L3605_276) == 1 ) then
 3605.                   rcp(1 + $I_L3605_276) = 1004.6 * rhoair(1 + $I_L3605_276)
 3605.                   $rc_WR0_R25 = rb(1 + $I_L3605_276) + rb(1 + $I_L3605_276) * fc(1 + $I_L3605_276) + fc(1 + $I_L3605_276) * rst(1 + $I_L3605_276, 1)
 3605.                   rc(1 + $I_L3605_276) = $rc_WR0_R25
 3605.                   $coc_S92 = ( 1.0/$rc_WR0_R25 * ( 1.0 + -wc(1 + $I_L3605_276) ) ) + ( 5.0e-1 * wc(1 + $I_L3605_276) * 1.0/rb(1 + $I_L3605_276) )
 3605.                   $rg_WR0_R26 = fg(1 + $I_L3605_276) * rst(1 + $I_L3605_276, 2)
 3605.                   rg(1 + $I_L3605_276) = $rg_WR0_R26
 3605.                   $rsurf_S87 = fg(1 + $I_L3605_276) * rsoil(1 + $I_L3605_276)
 3605.                   $tem_S88 = ( vcover2(1 + $I_L3605_276, 2) * 1.0/( $rg_WR0_R26 + rd(1 + $I_L3605_276) ) * ( 1.0 + -wg(1 + $I_L3605_276) ) )
 3605.                   $cog2_S89 = $tem_S88 + ( ( 1.0 + -vcover2(1 + $I_L3605_276, 2) ) * 1.0/( $rsurf_S87 + rd(1 + $I_L3605_276) ) ) + ( vcover2(1 + $I_L3605_276, 2) * 1.0/( 44.0 + $rsurf_S87 + rd(1 + $I_L3605_276) ) )
 3605.                   $cog1_S93 = $tem_S88 + hr(1 + $I_L3605_276) * ( $cog2_S89 + -$tem_S88 )
 3605.                   $xnum_S90 = vcover2(1 + $I_L3605_276, 2) * ( wg(1 + $I_L3605_276) * 1.0/rd(1 + $I_L3605_276) )
 3605.                   $d2_S95 = $coc_S92 + ( $cog2_S89 + $xnum_S90 ) + 1.0/ra(1 + $I_L3605_276)
 3605.                   $top_S96 = ( em(1 + $I_L3605_276) * 1.0/ra(1 + $I_L3605_276) ) + $coc_S92 * etc(1 + $I_L3605_276) + etg(1 + $I_L3605_276) * ( $xnum_S90 + $cog1_S93 )
 3605.                   ea(1 + $I_L3605_276) = ( $top_S96 * 1.0/$d2_S95 )
 3605.                endif
 3605.                $I_L3605_276 = 1 + $I_L3605_276
 3605.                if ( $I_L3605_276 >= nmax ) exit
 3605.             enddo
 3610.             $I_L3610_278 = 0
 3610. !dir$ ivdep
 3610.             do
 3611.                if ( icheck(1 + $I_L3610_278) == 1 ) then
 3612.                   ta(1 + $I_L3610_278) = ( 1.0/( 1.0/rb(1 + $I_L3610_278) + 1.0/rd(1 + $I_L3610_278) + 1.0/ra(1 + $I_L3610_278) ) * ( ( tc(1 + $I_L3610_278) * 1.0/rb(1 + $I_L3610_278) ) + ( tg(1 + $I_L3610_278) * 1.0/rd(1 + $I_L3610_278) ) + bps(1 + $I_L3610_278) * ( tm(1 + $I_L3610_278) * 1.0/ra(1 + $I_L3610_278) ) ) )
 3612.                endif
 3615.                $I_L3610_278 = 1 + $I_L3610_278
 3614.                if ( $I_L3610_278 >= nmax ) exit
 3614.             enddo
 3621.             if ( $icount_S43 > 10 ) then
 3617.                $I_L3617_280 = 0
 3617. !dir$ ivdep
 3617.                do
 3618.                   if ( icheck(1 + $I_L3617_280) == 1 ) then
 3623.                      icheck(1 + $I_L3617_280) = 0
 3623.                   endif
 3626.                   $I_L3617_280 = 1 + $I_L3617_280
 3625.                   if ( $I_L3617_280 >= nmax ) exit
 3625.                enddo
 3625.             else
 3617.                $I_L3617_314 = 0
 3617. !dir$ ivdep
 3617.                do
 3618.                   if ( icheck(1 + $I_L3617_314) == 1 ) then
 3619.                      $y1_S99 = abs( ta(1 + $I_L3617_314) + -tsav(1 + $I_L3617_314) )
 3620.                      $y2_S100 = abs( ea(1 + $I_L3617_314) + -esav(1 + $I_L3617_314) )
 3621.                      if ( $y1_S99 <= 1.0e-2 ) then
 3621.                         if ( $y2_S100 <= 5.0000000000000001e-3 ) then
 3623.                            icheck(1 + $I_L3617_314) = 0
 3623.                         endif
 3623.                      endif
 3623.                   endif
 3626.                   $I_L3617_314 = 1 + $I_L3617_314
 3625.                   if ( $I_L3617_314 >= nmax ) exit
 3625.                enddo
 3625.             endif
 3628.             $I_L3628_282 = 0
 3628. !dir$ ivdep
 3628.             do
 3629.                if ( icheck(1 + $I_L3628_282) == 1 ) then
 3628.                   goto 10
 3628.                endif
 3630.                $I_L3628_282 = 1 + $I_L3628_282
 3630.                if ( $I_L3628_282 >= nmax ) exit
 3630.             enddo
 3630.    10       continue
 3632.             if ( nmax > 0 ) then
 3632.                $I_L3632_284 = 0
 3632. !dir$ ivdep
 3632.                do
 3633.                   fc(1 + $I_L3632_284) = 1.0
 3634.                   fg(1 + $I_L3632_284) = 1.0
 3635.                   idewco(1 + $I_L3632_284) = 0
 3636.                   icheck(1 + $I_L3632_284) = 1
 3637.                   $I_L3632_284 = 1 + $I_L3632_284
 3632.                   if ( $I_L3632_284 >= nmax ) exit
 3632.                enddo
 3639.                $I_L3639_286 = 0
 3639. !dir$ ivdep
 3639.                do
 3640.                   $tc_WR0_R27 = tcsav(1 + $I_L3639_286)
 3640.                   tc(1 + $I_L3639_286) = $tc_WR0_R27
 3641.                   $tg_WR0_R28 = tgsav(1 + $I_L3639_286)
 3641.                   tg(1 + $I_L3639_286) = $tg_WR0_R28
 3642.                   tm(1 + $I_L3639_286) = tmsav(1 + $I_L3639_286)
 3643.                   qm(1 + $I_L3639_286) = qmsav(1 + $I_L3639_286)
 3644.                   radt(1 + $I_L3639_286, 1) = rdsav(1 + $I_L3639_286, 1)
 3645.                   radt(1 + $I_L3639_286, 2) = rdsav(1 + $I_L3639_286, 2)
 3646.                   etc(1 + $I_L3639_286) = _expn( 21.65605 + -( 5418.0 * 1.0/$tc_WR0_R27 ) )
 3647.                   etg(1 + $I_L3639_286) = _expn( 21.65605 + -( 5418.0 * 1.0/$tg_WR0_R28 ) )
 3648.                   btc(1 + $I_L3639_286) = ( 1.0/( $tc_WR0_R27 * $tc_WR0_R27 ) * _expn( 30.253530000000001 + -( 5418.0 * 1.0/$tc_WR0_R27 ) ) )
 3649.                   btg(1 + $I_L3639_286) = ( 1.0/( $tg_WR0_R28 * $tg_WR0_R28 ) * _expn( 30.253530000000001 + -( 5418.0 * 1.0/$tg_WR0_R28 ) ) )
 3650.                   $I_L3639_286 = 1 + $I_L3639_286
 3639.                   if ( $I_L3639_286 >= nmax ) exit
 3639.                enddo
 3639.                do
 3654.                   t$317 = ncols
 3654.                   t$1586 = _zla( 0, ncols )
 3654.                   t$1587 = _zla( 0, ncols )
 3654.                   t$1588 = 2 * _zla( 0, ncols )
 3654.                   $I_L3654_288 = 0
 3654. !dir$ ivdep
 3654.                   do
 3654.                      if ( icheck(1 + $I_L3654_288) == 1 ) then
 3654.                         rcp(1 + $I_L3654_288) = 1004.6 * rhoair(1 + $I_L3654_288)
 3654.                         $rc_WR0_R29 = rb(1 + $I_L3654_288) + rb(1 + $I_L3654_288) * fc(1 + $I_L3654_288) + fc(1 + $I_L3654_288) * rst(1 + $I_L3654_288, 1)
 3654.                         rc(1 + $I_L3654_288) = $rc_WR0_R29
 3654.                         $coc_S110 = ( 1.0/$rc_WR0_R29 * ( 1.0 + -wc(1 + $I_L3654_288) ) ) + ( 5.0e-1 * wc(1 + $I_L3654_288) * 1.0/rb(1 + $I_L3654_288) )
 3654.                         $rg_WR0_R30 = fg(1 + $I_L3654_288) * rst(1 + $I_L3654_288, 2)
 3654.                         rg(1 + $I_L3654_288) = $rg_WR0_R30
 3654.                         $rsurf_S105 = fg(1 + $I_L3654_288) * rsoil(1 + $I_L3654_288)
 3654.                         $tem_S106 = ( vcover2(1 + $I_L3654_288, 2) * 1.0/( $rg_WR0_R30 + rd(1 + $I_L3654_288) ) * ( 1.0 + -wg(1 + $I_L3654_288) ) )
 3654.                         $cog2_S107 = $tem_S106 + ( ( 1.0 + -vcover2(1 + $I_L3654_288, 2) ) * 1.0/( $rsurf_S105 + rd(1 + $I_L3654_288) ) ) + ( vcover2(1 + $I_L3654_288, 2) * 1.0/( 44.0 + $rsurf_S105 + rd(1 + $I_L3654_288) ) )
 3654.                         $cog1_S111 = $tem_S106 + hr(1 + $I_L3654_288) * ( $cog2_S107 + -$tem_S106 )
 3654.                         $xnum_S108 = vcover2(1 + $I_L3654_288, 2) * ( wg(1 + $I_L3654_288) * 1.0/rd(1 + $I_L3654_288) )
 3654.                         $d2_S113 = $coc_S110 + ( $cog2_S107 + $xnum_S108 ) + 1.0/ra(1 + $I_L3654_288)
 3654.                         $top_S114 = ( em(1 + $I_L3654_288) * 1.0/ra(1 + $I_L3654_288) ) + $coc_S110 * etc(1 + $I_L3654_288) + etg(1 + $I_L3654_288) * ( $xnum_S108 + $cog1_S111 )
 3654.                         ea(1 + $I_L3654_288) = ( $top_S114 * 1.0/$d2_S113 )
 3654.                      endif
 3654.                      $I_L3654_288 = 1 + $I_L3654_288
 3654.                      if ( $I_L3654_288 >= nmax ) exit
 3654.                   enddo
 3659.                   $I_L3659_290 = 0
 3659. !dir$ ivdep
 3659.                   do
 3660.                      if ( icheck(1 + $I_L3659_290) == 1 ) then
 3661.                         $ecf_WR0_R31 = sign( 1.0, etc(1 + $I_L3659_290) + -ea(1 + $I_L3659_290) )
 3662.                         $egf_WR0_R32 = sign( 1.0, etg(1 + $I_L3659_290) + -ea(1 + $I_L3659_290) )
 3663.                         $dewc_WR0_R33 = -1.0 + 2.0 * fc(1 + $I_L3659_290)
 3664.                         $dewg_WR0_R34 = -1.0 + 2.0 * fg(1 + $I_L3659_290)
 3666.                         egf(1 + $I_L3659_290) = ( $egf_WR0_R32 * $dewg_WR0_R34 )
 3665.                         ecf(1 + $I_L3659_290) = ( $ecf_WR0_R31 * $dewc_WR0_R33 )
 3665.                      endif
 3668.                      $I_L3659_290 = 1 + $I_L3659_290
 3667.                      if ( $I_L3659_290 >= nmax ) exit
 3667.                   enddo
 3670.                   $I_L3670_292 = 0
 3670. !dir$ ivdep
 3670.                   do
 3671.                      if ( ecf(1 + $I_L3670_292) <= 0.0 .orelse. egf(1 + $I_L3670_292) <= 0.0 ) then
 3671.                         if ( idewco(1 + $I_L3670_292) == 3 ) then
 3671.                            goto 20
 3671.                         else
 3675.                            $idewco_WR0_R35 = 1 + idewco(1 + $I_L3670_292)
 3675.                            idewco(1 + $I_L3670_292) = $idewco_WR0_R35
 3676.                            if ( $idewco_WR0_R35 == 1 ) then
 3677.                               fc(1 + $I_L3670_292) = 0.0
 3678.                               fg(1 + $I_L3670_292) = 1.0
 3679.                            else if ( $idewco_WR0_R35 == 2 ) then
 3680.                               fc(1 + $I_L3670_292) = 1.0
 3681.                               fg(1 + $I_L3670_292) = 0.0
 3681.                            else if ( $idewco_WR0_R35 == 3 ) then
 3683.                               fc(1 + $I_L3670_292) = 0.0
 3684.                               fg(1 + $I_L3670_292) = 0.0
 3684.                            endif
 3684.                         endif
 3684.                      else
 3684.    20                   continue
 3673.                         icheck(1 + $I_L3670_292) = 0
 3673.                      endif
 3687.                      $I_L3670_292 = 1 + $I_L3670_292
 3686.                      if ( $I_L3670_292 >= nmax ) exit
 3686.                   enddo
 3689.                   $I_L3689_294 = 0
 3689. !dir$ ivdep
 3689.                   do
 3690.                      if ( icheck(1 + $I_L3689_294) == 1 ) then
 3689.                         goto 30
 3689.                      endif
 3691.                      $I_L3689_294 = 1 + $I_L3689_294
 3691.                      if ( $I_L3689_294 >= nmax ) exit
 3691.                   enddo
 3691.                else
 3654.                   t$317 = ncols
 3654.                   t$1586 = _zla( 0, ncols )
 3654.                   t$1587 = _zla( 0, ncols )
 3654.                   t$1588 = 2 * _zla( 0, ncols )
 3654.                endif
 3654.    30          continue
 3693.                call temres( bps(1), psb(1), em(1), gmt(1, 1), gmq(1, 1), psy(1), rcp(1), wc(1), wg(1), fc(1), fg(1), hr(1), hgdtg(1), hgdtc(1), hgdtm(1), hcdtg(1), hcdtc(1), hcdtm(1), egdtg(1), egdtc(1), egdqm(1), ecdtg(1), ecdtc(1), ecdqm(1), deadtg(1), deadtc(1), deadqm(1), ect(1), eci(1), egt(1), egi(1), egs(1), ec(1), eg(1), hc(1), hg(1), ecidif(1), egidif(1), ra(1), rb(1), rd(1), rc(1), rg(1), ta(1), ea(1), etc(1), etg(1), btc(1), btg(1), radt(1, 1), rst(1, 1), rsoil(1), hrr(1), cc(1), cg(1), satcap(1, 1), dtc(1), dtg(1), dtm(1), dqm(1), thermk(1), tc(1), tg(1), td(1), capac(1, 1), qm(1), tm(1), psur(1), dtc3x, nmax, vcover2(1, 1), ncols )
 3704.                if ( $ncount_S9 > 1 ) goto 40
 3705.                if ( nmax > 0 ) then
 3705.                   $I_L3705_296 = 0
 3705. !dir$ ivdep
 3705.                   do
 3709.                      qm(1 + $I_L3705_296) = qm(1 + $I_L3705_296) + dqm(1 + $I_L3705_296)
 3708.                      tm(1 + $I_L3705_296) = tm(1 + $I_L3705_296) + dtm(1 + $I_L3705_296)
 3707.                      tg(1 + $I_L3705_296) = tg(1 + $I_L3705_296) + dtg(1 + $I_L3705_296)
 3706.                      tc(1 + $I_L3705_296) = tc(1 + $I_L3705_296) + dtc(1 + $I_L3705_296)
 3710.                      $I_L3705_296 = 1 + $I_L3705_296
 3705.                      if ( $I_L3705_296 >= nmax ) exit
 3705.                   enddo
 3705.                endif
 3710.             enddo
 3710.    40       continue
 3714.             t$428 = ncols
 3714.             t$1650 = _zla( 0, ncols )
 3714.             t$1651 = _zla( 0, ncols )
 3714.             t$1652 = 2 * _zla( 0, ncols )
 3714.             t$1655 = 8 * _zla( 0, ncols )
 3714.             t$1656 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 3714.             t$1658 = t$1656 + 8 * _zla( 0, ncols )
 3714.             t$1659 = 8 * ( 7 + t$1656 + 8 * _zla( 0, ncols ) ) / 8
 3714.             t$1661 = t$1659 + 8 * _zla( 0, ncols )
 3714.             t$1662 = 8 * ( 7 + t$1659 + 8 * _zla( 0, ncols ) ) / 8
 3714.             t$1664 = t$1662 + 8 * _zla( 0, ncols )
 3714.             t$1665 = 8 * ( 7 + t$1662 + 8 * _zla( 0, ncols ) ) / 8
 3714.             t$1667 = t$1665 + 8 * _zla( 0, ncols )
 3714.             t$1668 = 8 * ( 7 + t$1665 + 8 * _zla( 0, ncols ) ) / 8
 3714.             t$1670 = t$1668 + 8 * _zla( 0, ncols )
 3714.             t$1671 = 8 * ( 7 + t$1668 + 8 * _zla( 0, ncols ) ) / 8
 3714.             t$1673 = t$1671 + 8 * _zla( 0, ncols )
 3714.             t$1674 = 8 * ( 7 + t$1671 + 8 * _zla( 0, ncols ) ) / 8
 3714.             t$1676 = t$1674 + 8 * _zla( 0, ncols )
 3714.             t$1677 = 8 * ( 7 + t$1674 + 8 * _zla( 0, ncols ) ) / 8
 3714.             t$1679 = t$1677 + 8 * _zla( 0, ncols )
 3714.             t$1653 = int( _alloc( t$1677 + 8 * _zla( 0, ncols ) ), 8 )
 3714.             t$1654 = t$1653
 3714.             t$1657 = t$1656 + t$1653
 3714.             t$1660 = t$1659 + t$1653
 3714.             t$1663 = t$1662 + t$1653
 3714.             t$1666 = t$1665 + t$1653
 3714.             t$1669 = t$1668 + t$1653
 3714.             t$1672 = t$1671 + t$1653
 3714.             t$1675 = t$1674 + t$1653
 3714.             t$1678 = t$1677 + t$1653
 3714.             if ( nmax > 0 ) then
 3714.                $I_L3714_298 = 0
 3714. !dir$ ivdep
 3714.                do
 3714.                   tgen(1 + $I_L3714_298) = dtg(1 + $I_L3714_298) + tg(1 + $I_L3714_298)
 3714.                   tcen(1 + $I_L3714_298) = dtc(1 + $I_L3714_298) + tc(1 + $I_L3714_298)
 3714.                   $I_L3714_298 = 1 + $I_L3714_298
 3714.                   if ( $I_L3714_298 >= nmax ) exit
 3714.                enddo
 3714.                $I_L3714_300 = 0
 3714. !dir$ ivdep
 3714.                do
 3714.                   if ( tgen(1 + $I_L3714_300) <= 273.16000000000003 ) then
 3714.                      egs(1 + $I_L3714_300) = eg(1 + $I_L3714_300) + -egi(1 + $I_L3714_300)
 3714.                      egt(1 + $I_L3714_300) = 0.0
 3714.                   endif
 3714.                   $facks_WR0_R36 = 1.0
 3714.                   facks(1 + $I_L3714_300) = 1.0
 3714.                   if ( tcen(1 + $I_L3714_300) <= 273.16000000000003 ) then
 3714.                      $facks_WR0_R36 = 8.8308754880898477e-1
 3714.                      facks(1 + $I_L3714_300) = 8.8308754880898477e-1
 3714.                   endif
 3714.                   if ( ( eci(1 + $I_L3714_300) + ect(1 + $I_L3714_300) ) <= 0.0 ) then
 3714.                      eci(1 + $I_L3714_300) = eci(1 + $I_L3714_300) + ect(1 + $I_L3714_300)
 3714.                      ect(1 + $I_L3714_300) = 0.0
 3714.                      $facks_WR0_R36 = 1.0/$facks_WR0_R36
 3714.                      facks(1 + $I_L3714_300) = $facks_WR0_R36
 3714.                   endif
 3714.                   $I_L3714_300 = 1 + $I_L3714_300
 3714.                   if ( $I_L3714_300 >= nmax ) exit
 3714.                enddo
 3714.                $I_L3714_304 = 0
 3714. !dir$ ivdep
 3714.                do
 3714.                   ecmass(1 + $I_L3714_304) = 3.9682539682539683e-7 * ( ect(1 + $I_L3714_304) + eci(1 + $I_L3714_304) * facks(1 + $I_L3714_304) )
 3714.                   capac(1 + $I_L3714_304, 1) = capac(1 + $I_L3714_304, 1) + -3.9682539682539682e-10 * eci(1 + $I_L3714_304) * facks(1 + $I_L3714_304)
 3714.                   $I_L3714_304 = 1 + $I_L3714_304
 3714.                   if ( $I_L3714_304 >= nmax ) exit
 3714.                enddo
 3714.                $I_L3714_306 = 0
 3714. !dir$ ivdep
 3714.                do
 3714.                   $facks_WR0_R37 = 1.0
 3714.                   facks(1 + $I_L3714_306) = 1.0
 3714.                   if ( tgen(1 + $I_L3714_306) <= 273.16000000000003 ) then
 3714.                      $facks_WR0_R37 = 8.8308754880898477e-1
 3714.                      facks(1 + $I_L3714_306) = 8.8308754880898477e-1
 3714.                   endif
 3714.                   if ( ( egt(1 + $I_L3714_306) + egi(1 + $I_L3714_306) ) <= 0.0 ) then
 3714.                      egi(1 + $I_L3714_306) = egt(1 + $I_L3714_306) + egi(1 + $I_L3714_306)
 3714.                      egt(1 + $I_L3714_306) = 0.0
 3714.                      $facks_WR0_R37 = 1.0/$facks_WR0_R37
 3714.                      facks(1 + $I_L3714_306) = $facks_WR0_R37
 3714.                   endif
 3714.                   $I_L3714_306 = 1 + $I_L3714_306
 3714.                   if ( $I_L3714_306 >= nmax ) exit
 3714.                enddo
 3714.                $I_L3714_308 = 0
 3714. !dir$ ivdep
 3714.                do
 3714.                   $egmass_WR0_R38 = 3.9682539682539683e-7 * ( egt(1 + $I_L3714_308) + egs(1 + $I_L3714_308) + facks(1 + $I_L3714_308) * egi(1 + $I_L3714_308) )
 3714.                   egmass(1 + $I_L3714_308) = $egmass_WR0_R38
 3714.                   etmass(1 + $I_L3714_308) = $egmass_WR0_R38 + ecmass(1 + $I_L3714_308)
 3714.                   hflux(1 + $I_L3714_308) = hg(1 + $I_L3714_308) + hc(1 + $I_L3714_308)
 3714.                   capac(1 + $I_L3714_308, 2) = capac(1 + $I_L3714_308, 2) + -3.9682539682539682e-10 * facks(1 + $I_L3714_308) * egi(1 + $I_L3714_308)
 3714.                   $I_L3714_308 = 1 + $I_L3714_308
 3714.                   if ( $I_L3714_308 >= nmax ) exit
 3714.                enddo
 3714.             endif
 3714.             $dtc3xi_S122 = 1.0/dtc3x
 3714.             if ( nmax > 0 ) then
 3714.                $I_L3714_302 = 0
 3714. !dir$ ivdep
 3714.                do
 3714.                   chf(1 + $I_L3714_302) = $dtc3xi_S122 * cc(1 + $I_L3714_302) * dtc(1 + $I_L3714_302)
 3714.                   shf(1 + $I_L3714_302) = 7.2722050925925924e-5 * cg(1 + $I_L3714_302) * ( tg(1 + $I_L3714_302) + dtg(1 + $I_L3714_302) + -td(1 + $I_L3714_302) ) + $dtc3xi_S122 * dtg(1 + $I_L3714_302) * cg(1 + $I_L3714_302)
 3714.                   $I_L3714_302 = 1 + $I_L3714_302
 3714.                   if ( $I_L3714_302 >= nmax ) exit
 3714.                enddo
 3714.             endif
 3714.             _free( t$1653 )
 3721.             if ( nmax > 0 ) then
 3721.                $I_L3721_310 = 0
 3721. !dir$ ivdep
 3721.                do
 3722.                   $fac_S129 = ( 9.8000000000000004e-2 * 1.0/( dtc3x * psb(1 + $I_L3721_310) ) )
 3723.                   $dtmdt_S130 = ( 1.0/gmt(1 + $I_L3721_310, 2) * ( gmt(1 + $I_L3721_310, 3) + ( 9.9542106310969544e-4 * $fac_S129 * hflux(1 + $I_L3721_310) * 1.0/bps(1 + $I_L3721_310) ) ) )
 3724.                   $dqmdt_S131 = ( 1.0/gmq(1 + $I_L3721_310, 2) * ( gmq(1 + $I_L3721_310, 3) + $fac_S129 * etmass(1 + $I_L3721_310) ) )
 3725.                   dtm(1 + $I_L3721_310) = dtc3x * $dtmdt_S130
 3726.                   dqm(1 + $I_L3721_310) = dtc3x * $dqmdt_S131
 3727.                   gmt(1 + $I_L3721_310, 3) = $dtmdt_S130
 3728.                   gmq(1 + $I_L3721_310, 3) = $dqmdt_S131
 3730.                   qm(1 + $I_L3721_310) = qm(1 + $I_L3721_310) + ( dtc3x * $dqmdt_S131 )
 3729.                   tm(1 + $I_L3721_310) = tm(1 + $I_L3721_310) + ( dtc3x * $dtmdt_S130 )
 3731.                   $I_L3721_310 = 1 + $I_L3721_310
 3721.                   if ( $I_L3721_310 >= nmax ) exit
 3721.                enddo
 3738.                $SC_xbc_I37 = xbc%dim_1%EX
 3738.                $SC_xbc_I38 = xbc%dim_1%LB
 3738.                $SC_xbc_I40 = xbc%dim_2%SM
 3738.                $SC_xbc_I39 = xbc%dim_2%EX
 3738.                $SC_xbc_I41 = xbc%dim_2%LB
 3737.                $SC_xdc_I32 = xdc%dim_1%EX
 3737.                $SC_xdc_I33 = xdc%dim_1%LB
 3737.                $SC_xdc_I35 = xdc%dim_2%SM
 3737.                $SC_xdc_I34 = xdc%dim_2%EX
 3737.                $SC_xdc_I36 = xdc%dim_2%LB
 3736.                $SC_x0x_I27 = x0x%dim_1%EX
 3736.                $SC_x0x_I28 = x0x%dim_1%LB
 3736.                $SC_x0x_I30 = x0x%dim_2%SM
 3736.                $SC_x0x_I29 = x0x%dim_2%EX
 3736.                $SC_x0x_I31 = x0x%dim_2%LB
 3735.                $SC_xd_I5 = xd%dim_1%EX
 3735.                $SC_xd_I6 = xd%dim_1%LB
 3735.                $SC_xd_I8 = xd%dim_2%SM
 3735.                $SC_xd_I7 = xd%dim_2%EX
 3735.                $SC_xd_I9 = xd%dim_2%LB
 3732.                $I_L3732_312 = 0
 3732. !dir$ ivdep
 3732.                do
 3733.                   $ntyp_S133 = itype(1 + $I_L3732_312)
 3735.                   d(1 + $I_L3732_312) = (xd%base_addr)($ntyp_S133, mon(1 + $I_L3732_312), 0)
 3736.                   z0x(1 + $I_L3732_312) = (x0x%base_addr)($ntyp_S133, mon(1 + $I_L3732_312), 0)
 3737.                   rdc(1 + $I_L3732_312) = (xdc%base_addr)($ntyp_S133, mon(1 + $I_L3732_312), 0)
 3738.                   rbc(1 + $I_L3732_312) = (xbc%base_addr)($ntyp_S133, mon(1 + $I_L3732_312), 0)
 3739.                   $I_L3732_312 = 1 + $I_L3732_312
 3732.                   if ( $I_L3732_312 >= nmax ) exit
 3732.                enddo
 3732.             endif
 3104.             _free( t$1686 )
 3740.             return
 3740.       end
 3740.       
 3759.       
 3759.       subroutine interc( roff, cc, cg, satcap, snow, extk, tc, tg, td, capac, w, tm, ppc, ppl, vcover, itype, dtc3x, nmax, ncols, zlt2 )
 3759.       t$608 = ncols
 3851.       t$1733 = _zla( 0, ncols )
 3759.       t$1734 = _zla( 0, ncols )
 3759.       t$1735 = 2 * _zla( 0, ncols )
 3759.       t$1736 = 2 * _zla( 0, ncols )
 3759.       t$1737 = 6 * _zla( 0, ncols )
 3759.       t$1738 = 12 * _zla( 0, ncols )
 3759.       t$1739 = 2 * _zla( 0, ncols )
 3759.       t$1740 = 3 * _zla( 0, ncols )
 3855.       t$1743 = 8 * _zla( 0, ncols )
 3873.       t$1744 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 3873.       t$1746 = t$1744 + 8 * _zla( 0, ncols )
 3885.       t$1747 = 8 * ( 7 + t$1744 + 8 * _zla( 0, ncols ) ) / 8
 3885.       t$1749 = t$1747 + 16 * _zla( 0, ncols )
 3882.       t$1750 = 8 * ( 7 + t$1747 + 16 * _zla( 0, ncols ) ) / 8
 3882.       t$1752 = t$1750 + 8 * _zla( 0, ncols )
 3867.       t$1753 = 8 * ( 7 + t$1750 + 8 * _zla( 0, ncols ) ) / 8
 3867.       t$1755 = t$1753 + 8 * _zla( 0, ncols )
 3868.       t$1756 = 8 * ( 7 + t$1753 + 8 * _zla( 0, ncols ) ) / 8
 3868.       t$1758 = t$1756 + 8 * _zla( 0, ncols )
 3860.       t$1759 = 8 * ( 7 + t$1756 + 8 * _zla( 0, ncols ) ) / 8
 3860.       t$1761 = t$1759 + 8 * _zla( 0, ncols )
 3856.       t$1762 = 8 * ( 7 + t$1759 + 8 * _zla( 0, ncols ) ) / 8
 3856.       t$1764 = t$1762 + 8 * _zla( 0, ncols )
 3861.       t$1765 = 8 * ( 7 + t$1762 + 8 * _zla( 0, ncols ) ) / 8
 3861.       t$1767 = t$1765 + 8 * _zla( 0, ncols )
 3880.       t$1768 = 8 * ( 7 + t$1765 + 8 * _zla( 0, ncols ) ) / 8
 3880.       t$1770 = t$1768 + 8 * _zla( 0, ncols )
 3877.       t$1771 = 8 * ( 7 + t$1768 + 8 * _zla( 0, ncols ) ) / 8
 3877.       t$1773 = t$1771 + 8 * _zla( 0, ncols )
 3859.       t$1774 = 8 * ( 7 + t$1771 + 8 * _zla( 0, ncols ) ) / 8
 3859.       t$1776 = t$1774 + 8 * _zla( 0, ncols )
 3881.       t$1777 = 8 * ( 7 + t$1774 + 8 * _zla( 0, ncols ) ) / 8
 3881.       t$1779 = t$1777 + 8 * _zla( 0, ncols )
 3862.       t$1780 = 8 * ( 7 + t$1777 + 8 * _zla( 0, ncols ) ) / 8
 3862.       t$1782 = t$1780 + 8 * _zla( 0, ncols )
 3876.       t$1783 = 8 * ( 7 + t$1780 + 8 * _zla( 0, ncols ) ) / 8
 3876.       t$1785 = t$1783 + 8 * _zla( 0, ncols )
 3878.       t$1786 = 8 * ( 7 + t$1783 + 8 * _zla( 0, ncols ) ) / 8
 3878.       t$1788 = t$1786 + 8 * _zla( 0, ncols )
 3884.       t$1789 = 8 * ( 7 + t$1786 + 8 * _zla( 0, ncols ) ) / 8
 3884.       t$1791 = t$1789 + 16 * _zla( 0, ncols )
 3864.       t$1792 = 8 * ( 7 + t$1789 + 16 * _zla( 0, ncols ) ) / 8
 3864.       t$1794 = t$1792 + 8 * _zla( 0, ncols )
 3883.       t$1795 = 8 * ( 7 + t$1792 + 8 * _zla( 0, ncols ) ) / 8
 3883.       t$1797 = t$1795 + 8 * _zla( 0, ncols )
 3865.       t$1798 = 8 * ( 7 + t$1795 + 8 * _zla( 0, ncols ) ) / 8
 3865.       t$1800 = t$1798 + 8 * _zla( 0, ncols )
 3874.       t$1801 = 8 * ( 7 + t$1798 + 8 * _zla( 0, ncols ) ) / 8
 3874.       t$1803 = t$1801 + 8 * _zla( 0, ncols )
 3858.       t$1804 = 8 * ( 7 + t$1801 + 8 * _zla( 0, ncols ) ) / 8
 3858.       t$1806 = t$1804 + 8 * _zla( 0, ncols )
 3857.       t$1807 = 8 * ( 7 + t$1804 + 8 * _zla( 0, ncols ) ) / 8
 3857.       t$1809 = t$1807 + 8 * _zla( 0, ncols )
 3863.       t$1810 = 8 * ( 7 + t$1807 + 8 * _zla( 0, ncols ) ) / 8
 3863.       t$1812 = t$1810 + 8 * _zla( 0, ncols )
 3875.       t$1813 = 8 * ( 7 + t$1810 + 8 * _zla( 0, ncols ) ) / 8
 3875.       t$1815 = t$1813 + 8 * _zla( 0, ncols )
 3879.       t$1816 = 8 * ( 7 + t$1813 + 8 * _zla( 0, ncols ) ) / 8
 3879.       t$1818 = t$1816 + 8 * _zla( 0, ncols )
 3871.       t$1819 = 8 * ( 7 + t$1816 + 8 * _zla( 0, ncols ) ) / 8
 3871.       t$1821 = t$1819 + 8 * _zla( 0, ncols )
 3872.       t$1822 = 8 * ( 7 + t$1819 + 8 * _zla( 0, ncols ) ) / 8
 3872.       t$1824 = t$1822 + 8 * _zla( 0, ncols )
 3870.       t$1825 = 8 * ( 7 + t$1822 + 8 * _zla( 0, ncols ) ) / 8
 3870.       t$1827 = t$1825 + 8 * _zla( 0, ncols )
 3866.       t$1828 = 8 * ( 7 + t$1825 + 8 * _zla( 0, ncols ) ) / 8
 3866.       t$1830 = t$1828 + 8 * _zla( 0, ncols )
 3869.       t$1831 = 8 * ( 7 + t$1828 + 8 * _zla( 0, ncols ) ) / 8
 3869.       t$1833 = t$1831 + 8 * _zla( 0, ncols )
 3759.       t$1741 = int( _alloc( t$1831 + 8 * _zla( 0, ncols ) ), 8 )
 3855.       t$1742 = t$1741
 3873.       t$1745 = t$1744 + t$1741
 3885.       t$1748 = t$1747 + t$1741
 3882.       t$1751 = t$1750 + t$1741
 3867.       t$1754 = t$1753 + t$1741
 3868.       t$1757 = t$1756 + t$1741
 3860.       t$1760 = t$1759 + t$1741
 3856.       t$1763 = t$1762 + t$1741
 3861.       t$1766 = t$1765 + t$1741
 3880.       t$1769 = t$1768 + t$1741
 3877.       t$1772 = t$1771 + t$1741
 3859.       t$1775 = t$1774 + t$1741
 3881.       t$1778 = t$1777 + t$1741
 3862.       t$1781 = t$1780 + t$1741
 3876.       t$1784 = t$1783 + t$1741
 3878.       t$1787 = t$1786 + t$1741
 3884.       t$1790 = t$1789 + t$1741
 3864.       t$1793 = t$1792 + t$1741
 3883.       t$1796 = t$1795 + t$1741
 3865.       t$1799 = t$1798 + t$1741
 3874.       t$1802 = t$1801 + t$1741
 3858.       t$1805 = t$1804 + t$1741
 3857.       t$1808 = t$1807 + t$1741
 3863.       t$1811 = t$1810 + t$1741
 3875.       t$1814 = t$1813 + t$1741
 3879.       t$1817 = t$1816 + t$1741
 3871.       t$1820 = t$1819 + t$1741
 3872.       t$1823 = t$1822 + t$1741
 3870.       t$1826 = t$1825 + t$1741
 3866.       t$1829 = t$1828 + t$1741
 3869.       t$1832 = t$1831 + t$1741
 3906.       if ( ncols > 0 ) then
 3906.          $I_L3906_136 = 0
 3906. !dir$ ivdep
 3906.          do
 3906.             ap(1 + $I_L3906_136) = 0.0
 3906.             $I_L3906_136 = 1 + $I_L3906_136
 3906.             if ( $I_L3906_136 >= ncols ) exit
 3906.          enddo
 3906.       endif
 3907.       if ( nmax > 0 ) then
 3934.          $SC_poros_I0 = poros%dim_1%EX
 3934.          $SC_poros_I1 = poros%dim_1%LB
 3907.          $I_L3907_102 = 0
 3907. !dir$ ivdep
 3907.          do
 3908.             ap(1 + $I_L3907_102) = 1.0e-4
 3909.             cp(1 + $I_L3907_102) = 9.9990000000000001e-1
 3910.             $totalp_WR0_R0 = ppl(1 + $I_L3907_102) + ppc(1 + $I_L3907_102)
 3911.             if ( ppl(1 + $I_L3907_102) + ppc(1 + $I_L3907_102) >= 1.0e-8 ) then
 3917.                ap(1 + $I_L3907_102) = ( 1.0/$totalp_WR0_R0 * ( 1.0e-4 * ppl(1 + $I_L3907_102) + 20.0 * ppc(1 + $I_L3907_102) ) )
 3923.                cp(1 + $I_L3907_102) = ( 1.0/$totalp_WR0_R0 * ( 9.9990000000000001e-1 * ppl(1 + $I_L3907_102) + 2.0599999999999999e-9 * ppc(1 + $I_L3907_102) ) )
 3923.             endif
 3926.             roff(1 + $I_L3907_102) = 0.0
 3927.             thru(1 + $I_L3907_102) = 0.0
 3928.             fpi(1 + $I_L3907_102) = 0.0
 3932.             $ntyp_S1 = itype(1 + $I_L3907_102)
 3934.             $theta_S2 = (poros%base_addr)($ntyp_S1, 0) * w(1 + $I_L3907_102, 1)
 3951.             csoil(1 + $I_L3907_102) = 49086963.174481615 * ( 1.0/( 1.1000000000000001 + -4.0000000000000002e-1 * $theta_S2 ) * ( 9.7999999999999997e-4 + 1.1999999999999999e-3 * $theta_S2 ) )
 3955.             p0(1 + $I_L3907_102) = 1.0e-3 * $totalp_WR0_R0
 3956.             $I_L3907_102 = 1 + $I_L3907_102
 3925.             if ( $I_L3907_102 >= nmax ) exit
 3925.          enddo
 3925.       endif
 4109.       $SC_zdepth_I4 = zdepth%dim_1%EX
 4109.       $SC_zdepth_I5 = zdepth%dim_1%LB
 4109.       $SC_zdepth_I7 = zdepth%dim_2%SM
 4109.       $SC_zdepth_I6 = zdepth%dim_2%EX
 4109.       $SC_zdepth_I8 = zdepth%dim_2%LB
 4094.       $SC_satco_I2 = satco%dim_1%EX
 4094.       $SC_satco_I3 = satco%dim_1%LB
 4109.       $SC_poros_I0 = poros%dim_1%EX
 4109.       $SC_poros_I1 = poros%dim_1%LB
 3960.       $I_L3960_138 = 0
 3960.       do
 3962.          if ( $I_L3960_138 == 0 ) then
 3963.             if ( nmax > 0 ) then
 3963.                $I_L3963_104 = 0
 3963. !dir$ ivdep
 3963.                do
 3965.                   ts(1 + $I_L3963_104) = tc(1 + $I_L3963_104)
 3968.                   specht(1 + $I_L3963_104) = 840.0 * zlt2(1 + $I_L3963_104, 1)
 3969.                   $I_L3963_104 = 1 + $I_L3963_104
 3963.                   if ( $I_L3963_104 >= nmax ) exit
 3963.                enddo
 3963.             endif
 3970.          else if ( nmax > 0 ) then
 3971.             $I_L3971_106 = 0
 3971. !dir$ ivdep
 3971.             do
 3972.                ts(1 + $I_L3971_106) = tg(1 + $I_L3971_106)
 3973.                specht(1 + $I_L3971_106) = csoil(1 + $I_L3971_106)
 3974.                $I_L3971_106 = 1 + $I_L3971_106
 3971.                if ( $I_L3971_106 >= nmax ) exit
 3971.             enddo
 3971.          endif
 3977.          if ( nmax > 0 ) then
 3978.             if ( $I_L3960_138 /= 0 ) then
 3977.                $I_L3977_108 = 0
 3977. !dir$ ivdep
 3977.                do
 3978.                   if ( ts(1 + $I_L3977_108) > 273.16000000000003 ) then
 3983.                      $xsc_WR0_R1 = max( 0.0, capac(1 + $I_L3977_108, 1 + $I_L3960_138) + -satcap(1 + $I_L3977_108, 1 + $I_L3960_138) )
 3985.                      capac(1 + $I_L3977_108, 1 + $I_L3960_138) = capac(1 + $I_L3977_108, 1 + $I_L3960_138) + -$xsc_WR0_R1
 3987.                      roff(1 + $I_L3977_108) = $xsc_WR0_R1 + roff(1 + $I_L3977_108)
 3987.                   endif
 3989.                   $I_L3977_108 = 1 + $I_L3977_108
 3988.                   if ( $I_L3977_108 >= nmax ) exit
 3988.                enddo
 3988.             else
 3977.                $I_L3977_130 = 0
 3977. !dir$ ivdep
 3977.                do
 3983.                   $xsc_WR0_R2 = max( 0.0, capac(1 + $I_L3977_130, 1 + $I_L3960_138) + -satcap(1 + $I_L3977_130, 1 + $I_L3960_138) )
 3985.                   capac(1 + $I_L3977_130, 1 + $I_L3960_138) = capac(1 + $I_L3977_130, 1 + $I_L3960_138) + -$xsc_WR0_R2
 3987.                   roff(1 + $I_L3977_130) = $xsc_WR0_R2 + roff(1 + $I_L3977_130)
 3989.                   $I_L3977_130 = 1 + $I_L3977_130
 3988.                   if ( $I_L3977_130 >= nmax ) exit
 3988.                enddo
 3988.             endif
 4027.             if ( $I_L3960_138 == 1 ) then
 3991.                $I_L3991_110 = 0
 3991. !dir$ ivdep
 3991.                do
 3996.                   spwet1(1 + $I_L3991_110) = 4200000.0 * min( 5.0000000000000003e-2, capac(1 + $I_L3991_110, 2) )
 3998.                   $capacp_WR0_R4 = 0.0
 3998.                   capacp(1 + $I_L3991_110, 2) = 0.0
 4000.                   $snowp_WR0_R5 = 0.0
 4000.                   snowp(1 + $I_L3991_110, 2) = 0.0
 4002.                   if ( ts(1 + $I_L3991_110) > 273.16000000000003 ) then
 4003.                      $capacp_WR0_R4 = capac(1 + $I_L3991_110, 2)
 4003.                      capacp(1 + $I_L3991_110, 2) = $capacp_WR0_R4
 4003.                   else
 4005.                      $snowp_WR0_R5 = capac(1 + $I_L3991_110, 2)
 4005.                      snowp(1 + $I_L3991_110, 2) = $snowp_WR0_R5
 4005.                   endif
 4008.                   capac(1 + $I_L3991_110, 2) = $capacp_WR0_R4
 4010.                   snow(1 + $I_L3991_110, 2) = $snowp_WR0_R5
 4012.                   zload(1 + $I_L3991_110) = $capacp_WR0_R4 + $snowp_WR0_R5
 4022.                   $fpi_WR0_R7 = vcover(1 + $I_L3991_110, 2) * ( 1.0 + -_expn( -( zlt2(1 + $I_L3991_110, 2) * extk(1 + $I_L3991_110, 2, 3, 1) * 1.0/vcover(1 + $I_L3991_110, 2) ) ) )
 4022.                   fpi(1 + $I_L3991_110) = $fpi_WR0_R7
 4027.                   $tti_WR0_R8 = p0(1 + $I_L3991_110)
 4027.                   tti(1 + $I_L3991_110) = $tti_WR0_R8
 4028.                   $I_L3991_110 = 1 + $I_L3991_110
 4027.                   if ( $I_L3991_110 >= nmax ) exit
 4027.                enddo
 4027.             else
 3991.                $I_L3991_132 = 0
 3991. !dir$ ivdep
 3991.                do
 3996.                   spwet1(1 + $I_L3991_132) = 4200000.0 * min( 5.0000000000000003e-2, capac(1 + $I_L3991_132, 1 + $I_L3960_138) )
 3998.                   $capacp_WR0_R10 = 0.0
 3998.                   capacp(1 + $I_L3991_132, 1 + $I_L3960_138) = 0.0
 4000.                   $snowp_WR0_R11 = 0.0
 4000.                   snowp(1 + $I_L3991_132, 1 + $I_L3960_138) = 0.0
 4002.                   if ( ts(1 + $I_L3991_132) > 273.16000000000003 ) then
 4003.                      $capacp_WR0_R10 = capac(1 + $I_L3991_132, 1 + $I_L3960_138)
 4003.                      capacp(1 + $I_L3991_132, 1 + $I_L3960_138) = $capacp_WR0_R10
 4003.                   else
 4005.                      $snowp_WR0_R11 = capac(1 + $I_L3991_132, 1 + $I_L3960_138)
 4005.                      snowp(1 + $I_L3991_132, 1 + $I_L3960_138) = $snowp_WR0_R11
 4005.                   endif
 4008.                   capac(1 + $I_L3991_132, 1 + $I_L3960_138) = $capacp_WR0_R10
 4010.                   snow(1 + $I_L3991_132, 1 + $I_L3960_138) = $snowp_WR0_R11
 4012.                   zload(1 + $I_L3991_132) = $capacp_WR0_R10 + $snowp_WR0_R11
 4022.                   $fpi_WR0_R13 = vcover(1 + $I_L3991_132, 1 + $I_L3960_138) * ( 1.0 + -_expn( -( zlt2(1 + $I_L3991_132, 1 + $I_L3960_138) * extk(1 + $I_L3991_132, 1 + $I_L3960_138, 3, 1) * 1.0/vcover(1 + $I_L3991_132, 1 + $I_L3960_138) ) ) )
 4022.                   fpi(1 + $I_L3991_132) = $fpi_WR0_R13
 4025.                   tti(1 + $I_L3991_132) = p0(1 + $I_L3991_132) * ( 1.0 + -$fpi_WR0_R13 )
 4028.                   $I_L3991_132 = 1 + $I_L3991_132
 4027.                   if ( $I_L3991_132 >= nmax ) exit
 4027.                enddo
 4027.             endif
 4032.             $I_L4032_112 = 0
 4032. !dir$ ivdep
 4032.             do
 4033.                xs(1 + $I_L4032_112) = 1.0
 4034.                if ( p0(1 + $I_L4032_112) >= 1.0000000000000001e-9 ) then
 4040.                   $arg_WR0_R15 = -( cp(1 + $I_L4032_112) * 1.0/ap(1 + $I_L4032_112) ) + ( 1.0/( p0(1 + $I_L4032_112) * fpi(1 + $I_L4032_112) * ap(1 + $I_L4032_112) ) * ( satcap(1 + $I_L4032_112, 1 + $I_L3960_138) + -zload(1 + $I_L4032_112) ) )
 4042.                   if ( $arg_WR0_R15 >= 1.0000000000000001e-9 ) then
 4048.                      $xs_WR0_R14 = -5.0000000000000003e-2 * log( $arg_WR0_R15 )
 4050.                      $xs_WR0_R14 = max( 0.0, min( 1.0, $xs_WR0_R14 ) )
 4050.                      xs(1 + $I_L4032_112) = $xs_WR0_R14
 4050.                   endif
 4050.                endif
 4053.                $I_L4032_112 = 1 + $I_L4032_112
 4052.                if ( $I_L4032_112 >= nmax ) exit
 4052.             enddo
 4055.             $I_L4055_114 = 0
 4055. !dir$ ivdep
 4055.             do
 4061.                $tex_WR0_R16 = -( xs(1 + $I_L4055_114) * ( satcap(1 + $I_L4055_114, 1 + $I_L3960_138) + -zload(1 + $I_L4055_114) ) ) + p0(1 + $I_L4055_114) * fpi(1 + $I_L4055_114) * ( cp(1 + $I_L4055_114) * xs(1 + $I_L4055_114) + 5.0000000000000003e-2 * ap(1 + $I_L4055_114) * ( 1.0 + -_expn( -20.0 * xs(1 + $I_L4055_114) ) ) )
 4064.                $tex_WR0_R16 = max( 0.0, $tex_WR0_R16 )
 4066.                if ( $I_L3960_138 == 1 ) then
 4066.                   $tex_WR0_R16 = 0.0
 4066.                endif
 4070.                $thru_WR0_R17 = $tex_WR0_R16 + tti(1 + $I_L4055_114)
 4070.                thru(1 + $I_L4055_114) = $thru_WR0_R17
 4071.                if ( $I_L3960_138 == 1 ) then
 4071.                   if ( tg(1 + $I_L4055_114) <= 273.16000000000003 ) then
 4072.                      $thru_WR0_R17 = 0.0
 4072.                      thru(1 + $I_L4055_114) = 0.0
 4072.                   endif
 4072.                endif
 4075.                $pinf_WR0_R18 = p0(1 + $I_L4055_114) + -$thru_WR0_R17
 4077.                if ( tm(1 + $I_L4055_114) > 273.16000000000003 ) then
 4078.                   capac(1 + $I_L4055_114, 1 + $I_L3960_138) = $pinf_WR0_R18 + capac(1 + $I_L4055_114, 1 + $I_L3960_138)
 4078.                else
 4080.                   snow(1 + $I_L4055_114, 1 + $I_L3960_138) = $pinf_WR0_R18 + snow(1 + $I_L4055_114, 1 + $I_L3960_138)
 4080.                endif
 4082.                $I_L4055_114 = 1 + $I_L4055_114
 4081.                if ( $I_L4055_114 >= nmax ) exit
 4081.             enddo
 4081.          endif
 4084.          if ( $I_L3960_138 == 1 ) then
 4085.             if ( nmax > 0 ) then
 4085.                $I_L4085_116 = 0
 4085. !dir$ ivdep
 4085.                do
 4086.                   $ntyp_S11 = itype(1 + $I_L4085_116)
 4087.                   if ( tm(1 + $I_L4085_116) <= 273.16000000000003 ) then
 4088.                      snow(1 + $I_L4085_116, 2) = snowp(1 + $I_L4085_116, 2) + p0(1 + $I_L4085_116)
 4089.                      thru(1 + $I_L4085_116) = 0.0
 4089.                   else
 4094.                      $equdep_WR0_R19 = dtc3x * (satco%base_addr)($ntyp_S11, 0)
 4095.                      $xs_WR0_R20 = 1.0
 4095.                      xs(1 + $I_L4085_116) = 1.0
 4096.                      if ( thru(1 + $I_L4085_116) >= 1.0000000000000001e-9 ) then
 4097.                         $LD_SPLT_P5 = thru(1 + $I_L4085_116)
 4097.                         $arg_WR0_R21 = ( $equdep_WR0_R19 * 1.0/( $LD_SPLT_P5 * ap(1 + $I_L4085_116) ) ) + -( cp(1 + $I_L4085_116) * 1.0/ap(1 + $I_L4085_116) )
 4098.                         if ( $arg_WR0_R21 >= 1.0000000000000001e-9 ) then
 4099.                            $xs_WR0_R20 = -5.0000000000000003e-2 * log( $arg_WR0_R21 )
 4101.                            xs(1 + $I_L4085_116) = ( max( 0.0, min( 1.0, $xs_WR0_R20 ) ) )
 4101.                            $xs_WR0_R20 = max( 0.0, min( 1.0, $xs_WR0_R20 ) )
 4101.                         endif
 4101.                      endif
 4104.                      $LD_SPLT_P6 = thru(1 + $I_L4085_116)
 4104.                      $roffo_WR0_R22 = -( $equdep_WR0_R19 * $xs_WR0_R20 ) + $LD_SPLT_P6 * ( $xs_WR0_R20 * cp(1 + $I_L4085_116) + 5.0000000000000003e-2 * ap(1 + $I_L4085_116) * ( 1.0 + -_expn( -20.0 * $xs_WR0_R20 ) ) )
 4107.                      $roffo_WR0_R22 = max( 0.0, $roffo_WR0_R22 )
 4108.                      roff(1 + $I_L4085_116) = $roffo_WR0_R22 + roff(1 + $I_L4085_116)
 4109.                      w(1 + $I_L4085_116, 1) = w(1 + $I_L4085_116, 1) + ( 1.0/( (zdepth%base_addr)($ntyp_S11, 1, 0) * (poros%base_addr)($ntyp_S11, 0) ) * ( $LD_SPLT_P6 + -$roffo_WR0_R22 ) )
 4109.                   endif
 4112.                   $I_L4085_116 = 1 + $I_L4085_116
 4111.                   if ( $I_L4085_116 >= nmax ) exit
 4111.                enddo
 4111.             endif
 4111.          endif
 4117.          if ( nmax > 0 ) then
 4117.             $I_L4117_118 = 0
 4117. !dir$ ivdep
 4117.             do
 4118.                $diff_WR0_R23 = 4200000.0 * ( capac(1 + $I_L4117_118, 1 + $I_L3960_138) + snow(1 + $I_L4117_118, 1 + $I_L3960_138) + -capacp(1 + $I_L4117_118, 1 + $I_L3960_138) + -snowp(1 + $I_L4117_118, 1 + $I_L3960_138) )
 4118.                diff(1 + $I_L4117_118) = $diff_WR0_R23
 4120.                $ccp_WR0_R24 = spwet1(1 + $I_L4117_118) + specht(1 + $I_L4117_118)
 4120.                ccp(1 + $I_L4117_118) = $ccp_WR0_R24
 4121.                $cct_WR0_R25 = $diff_WR0_R23 + spwet1(1 + $I_L4117_118) + specht(1 + $I_L4117_118)
 4121.                cct(1 + $I_L4117_118) = $cct_WR0_R25
 4122.                tsd(1 + $I_L4117_118) = ( 1.0/$cct_WR0_R25 * ( $ccp_WR0_R24 * ts(1 + $I_L4117_118) + $diff_WR0_R23 * tm(1 + $I_L4117_118) ) )
 4123.                tsf(1 + $I_L4117_118) = ( -273.16000000000003 + tm(1 + $I_L4117_118) ) * ( -273.16000000000003 + ts(1 + $I_L4117_118) )
 4124.                $I_L4117_118 = 1 + $I_L4117_118
 4117.                if ( $I_L4117_118 >= nmax ) exit
 4117.             enddo
 4125.             $I_L4125_120 = 0
 4125. !dir$ ivdep
 4125.             do
 4126.                if ( tsf(1 + $I_L4125_120) < 0.0 ) then
 4127.                   if ( tsd(1 + $I_L4125_120) <= 273.16000000000003 ) then
 4131.                      $ccc_WR0_R27 = 333624200.0 * capacp(1 + $I_L4125_120, 1 + $I_L3960_138)
 4132.                      if ( ts(1 + $I_L4125_120) < tm(1 + $I_L4125_120) ) then
 4132.                         $ccc_WR0_R27 = 79.434333333333328 * diff(1 + $I_L4125_120)
 4132.                      endif
 4133.                      $tsd_WR0_R26 = ( ( $ccc_WR0_R27 + tm(1 + $I_L4125_120) * diff(1 + $I_L4125_120) + ts(1 + $I_L4125_120) * ccp(1 + $I_L4125_120) ) * 1.0/cct(1 + $I_L4125_120) )
 4133.                      tsd(1 + $I_L4125_120) = $tsd_WR0_R26
 4134.                      $freeze_WR0_R28 = -( tm(1 + $I_L4125_120) * diff(1 + $I_L4125_120) + ts(1 + $I_L4125_120) * ccp(1 + $I_L4125_120) ) + 273.16000000000003 * cct(1 + $I_L4125_120)
 4135.                      $freeze_WR0_R28 = 2.9973844823007445e-9 * ( min( $ccc_WR0_R27, $freeze_WR0_R28 ) )
 4136.                      if ( $tsd_WR0_R26 > 273.16000000000003 ) then
 4136.                         tsd(1 + $I_L4125_120) = 273.06
 4136.                      endif
 4137.                      snow(1 + $I_L4125_120, 1 + $I_L3960_138) = $freeze_WR0_R28 + snow(1 + $I_L4125_120, 1 + $I_L3960_138)
 4138.                      capac(1 + $I_L4125_120, 1 + $I_L3960_138) = capac(1 + $I_L4125_120, 1 + $I_L3960_138) + -$freeze_WR0_R28
 4138.                   else
 4143.                      $ccc_WR0_R27 = -333624200.0 * snow(1 + $I_L4125_120, 1 + $I_L3960_138)
 4144.                      if ( ts(1 + $I_L4125_120) > tm(1 + $I_L4125_120) ) then
 4144.                         $ccc_WR0_R27 = -79.434333333333328 * diff(1 + $I_L4125_120)
 4144.                      endif
 4145.                      $tsd_WR0_R26 = ( ( $ccc_WR0_R27 + tm(1 + $I_L4125_120) * diff(1 + $I_L4125_120) + ts(1 + $I_L4125_120) * ccp(1 + $I_L4125_120) ) * 1.0/cct(1 + $I_L4125_120) )
 4145.                      tsd(1 + $I_L4125_120) = $tsd_WR0_R26
 4146.                      $freeze_WR0_R28 = ( -( tm(1 + $I_L4125_120) * diff(1 + $I_L4125_120) + ts(1 + $I_L4125_120) * ccp(1 + $I_L4125_120) ) + 273.16000000000003 * cct(1 + $I_L4125_120) )
 4147.                      $freeze_WR0_R28 = 2.9973844823007445e-9 * max( $ccc_WR0_R27, $freeze_WR0_R28 )
 4148.                      if ( $tsd_WR0_R26 <= 273.16000000000003 ) then
 4148.                         tsd(1 + $I_L4125_120) = 273.06
 4148.                      endif
 4149.                      snow(1 + $I_L4125_120, 1 + $I_L3960_138) = $freeze_WR0_R28 + snow(1 + $I_L4125_120, 1 + $I_L3960_138)
 4150.                      capac(1 + $I_L4125_120, 1 + $I_L3960_138) = capac(1 + $I_L4125_120, 1 + $I_L3960_138) + -$freeze_WR0_R28
 4150.                   endif
 4150.                endif
 4153.                $I_L4125_120 = 1 + $I_L4125_120
 4152.                if ( $I_L4125_120 >= nmax ) exit
 4152.             enddo
 4155.             if ( $I_L3960_138 == 0 ) then
 4154.                $I_L4154_122 = 0
 4154. !dir$ ivdep
 4154.                do
 4156.                   tc(1 + $I_L4154_122) = tsd(1 + $I_L4154_122)
 4160.                   $I_L4154_122 = 1 + $I_L4154_122
 4159.                   if ( $I_L4154_122 >= nmax ) exit
 4159.                enddo
 4159.             else
 4154.                $I_L4154_134 = 0
 4154. !dir$ ivdep
 4154.                do
 4158.                   tg(1 + $I_L4154_134) = tsd(1 + $I_L4154_134)
 4160.                   $I_L4154_134 = 1 + $I_L4154_134
 4159.                   if ( $I_L4154_134 >= nmax ) exit
 4159.                enddo
 4159.             endif
 4161.             $I_L4161_124 = 0
 4161. !dir$ ivdep
 4161.             do
 4162.                if ( snow(1 + $I_L4161_124, 1 + $I_L3960_138) >= 9.9999999999999995e-8 ) then
 4161.                   goto 10
 4162.                else if ( $I_L3960_138 == 1 ) then
 4162.    10             continue
 4163.                   $zmelt_WR0_R29 = 0.0
 4164.                   if ( td(1 + $I_L4161_124) > 273.16000000000003 ) then
 4165.                      $zmelt_WR0_R29 = capac(1 + $I_L4161_124, 1 + $I_L3960_138)
 4165.                   else
 4167.                      roff(1 + $I_L4161_124) = roff(1 + $I_L4161_124) + capac(1 + $I_L4161_124, 1 + $I_L3960_138)
 4167.                   endif
 4169.                   capac(1 + $I_L4161_124, 1 + $I_L3960_138) = 0.0
 4173.                   $ntyp_S16 = itype(1 + $I_L4161_124)
 4174.                   w(1 + $I_L4161_124, 1) = w(1 + $I_L4161_124, 1) + ( $zmelt_WR0_R29 * 1.0/( (zdepth%base_addr)($ntyp_S16, 1, 0) * (poros%base_addr)($ntyp_S16, 0) ) )
 4174.                endif
 4176.                $I_L4161_124 = 1 + $I_L4161_124
 4175.                if ( $I_L4161_124 >= nmax ) exit
 4175.             enddo
 4177.             $I_L4177_126 = 0
 4177. !dir$ ivdep
 4177.             do
 4187.                capac(1 + $I_L4177_126, 1 + $I_L3960_138) = capac(1 + $I_L4177_126, 1 + $I_L3960_138) + snow(1 + $I_L4177_126, 1 + $I_L3960_138)
 4188.                snow(1 + $I_L4177_126, 1 + $I_L3960_138) = 0.0
 4189.                p0(1 + $I_L4177_126) = thru(1 + $I_L4177_126)
 4190.                $I_L4177_126 = 1 + $I_L4177_126
 4177.                if ( $I_L4177_126 >= nmax ) exit
 4177.             enddo
 4177.          endif
 4191.          $I_L3960_138 = 1 + $I_L3960_138
 4190.          if ( $I_L3960_138 >= 2 ) exit
 4190.       enddo
 4195.       if ( nmax > 0 ) then
 4195.          $I_L4195_128 = 0
 4195. !dir$ ivdep
 4195.          do
 4197.             cc(1 + $I_L4195_128) = 4200000.0 * capac(1 + $I_L4195_128, 1) + 840.0 * zlt2(1 + $I_L4195_128, 1)
 4198.             $spwet_WR0_R30 = 4200000.0 * min( 5.0000000000000003e-2, capac(1 + $I_L4195_128, 2) )
 4199.             cg(1 + $I_L4195_128) = $spwet_WR0_R30 + csoil(1 + $I_L4195_128)
 4200.             $I_L4195_128 = 1 + $I_L4195_128
 4195.             if ( $I_L4195_128 >= nmax ) exit
 4195.          enddo
 4195.       endif
 3759.       _free( t$1741 )
 4201.       return
 4201.       end
 4201.       
 4209.       
 4209.       subroutine stomat( cosz, par, pd, rst, extk, vcover, itype, nmax, ncols, zlt2, green2, chil2, rstpar2 )
 4209.       t$667 = ncols
 4265.       t$1834 = _zla( 0, ncols )
 4209.       t$1835 = _zla( 0, ncols )
 4209.       t$1836 = 2 * _zla( 0, ncols )
 4209.       t$1837 = 2 * _zla( 0, ncols )
 4209.       t$1838 = 6 * _zla( 0, ncols )
 4209.       t$1839 = 12 * _zla( 0, ncols )
 4209.       t$1840 = 6 * _zla( 0, ncols )
 4272.       t$1843 = 8 * _zla( 0, ncols )
 4269.       t$1844 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 4269.       t$1846 = t$1844 + 8 * _zla( 0, ncols )
 4278.       t$1847 = 8 * ( 7 + t$1844 + 8 * _zla( 0, ncols ) ) / 8
 4278.       t$1849 = t$1847 + 8 * _zla( 0, ncols )
 4273.       t$1850 = 8 * ( 7 + t$1847 + 8 * _zla( 0, ncols ) ) / 8
 4273.       t$1852 = t$1850 + 8 * _zla( 0, ncols )
 4276.       t$1853 = 8 * ( 7 + t$1850 + 8 * _zla( 0, ncols ) ) / 8
 4276.       t$1855 = t$1853 + 8 * _zla( 0, ncols )
 4267.       t$1856 = 8 * ( 7 + t$1853 + 8 * _zla( 0, ncols ) ) / 8
 4267.       t$1858 = t$1856 + 8 * _zla( 0, ncols )
 4268.       t$1859 = 8 * ( 7 + t$1856 + 8 * _zla( 0, ncols ) ) / 8
 4268.       t$1861 = t$1859 + 8 * _zla( 0, ncols )
 4270.       t$1862 = 8 * ( 7 + t$1859 + 8 * _zla( 0, ncols ) ) / 8
 4270.       t$1864 = t$1862 + 8 * _zla( 0, ncols )
 4271.       t$1865 = 8 * ( 7 + t$1862 + 8 * _zla( 0, ncols ) ) / 8
 4271.       t$1867 = t$1865 + 8 * _zla( 0, ncols )
 4277.       t$1868 = 8 * ( 7 + t$1865 + 8 * _zla( 0, ncols ) ) / 8
 4277.       t$1870 = t$1868 + 8 * _zla( 0, ncols )
 4274.       t$1871 = 8 * ( 7 + t$1868 + 8 * _zla( 0, ncols ) ) / 8
 4274.       t$1873 = t$1871 + 8 * _zla( 0, ncols )
 4275.       t$1874 = 8 * ( 7 + t$1871 + 8 * _zla( 0, ncols ) ) / 8
 4275.       t$1876 = t$1874 + 8 * _zla( 0, ncols )
 4209.       t$1841 = int( _alloc( t$1874 + 8 * _zla( 0, ncols ) ), 8 )
 4272.       t$1842 = t$1841
 4269.       t$1845 = t$1844 + t$1841
 4278.       t$1848 = t$1847 + t$1841
 4273.       t$1851 = t$1850 + t$1841
 4276.       t$1854 = t$1853 + t$1841
 4267.       t$1857 = t$1856 + t$1841
 4268.       t$1860 = t$1859 + t$1841
 4270.       t$1863 = t$1862 + t$1841
 4271.       t$1866 = t$1865 + t$1841
 4277.       t$1869 = t$1868 + t$1841
 4274.       t$1872 = t$1871 + t$1841
 4275.       t$1875 = t$1874 + t$1841
 4291.       if ( nmax > 0 ) then
 4291.          $I_L4291_36 = 0
 4291. !dir$ ivdep
 4291.          do
 4292.             f(1 + $I_L4291_36) = max( 1.746e-2, cosz(1 + $I_L4291_36) )
 4293.             $I_L4291_36 = 1 + $I_L4291_36
 4291.             if ( $I_L4291_36 >= nmax ) exit
 4291.          enddo
 4295.          $I_L4295_46 = 0
 4295. !dir$ blocking_size( 1, 1 )
 4295.          do
 4296.             $I_L4296_44 = 0
 4296. !dir$ blocking_size( 1, 1 )
 4296.             do
 4297.                $I_L4297_38 = 0
 4297. !dir$ ivdep
 4297. !dir$ blocking_size( 256, 256 )
 4297.                do
 4304.                   extk(1 + $I_L4297_38, 1 + $I_L4295_46, 1, 1 + $I_L4296_44) = min( extk(1 + $I_L4297_38, 1 + $I_L4295_46, 1, 1 + $I_L4296_44), vcover(1 + $I_L4297_38, 1 + $I_L4295_46) * ( 150.0 * 1.0/zlt2(1 + $I_L4297_38, 1 + $I_L4295_46) ) )
 4306.                   $I_L4297_38 = 1 + $I_L4297_38
 4297.                   if ( $I_L4297_38 >= nmax ) exit
 4297.                enddo
 4307.                $I_L4296_44 = 1 + $I_L4296_44
 4306.                if ( $I_L4296_44 >= 2 ) exit
 4306.             enddo
 4308.             $I_L4295_46 = 1 + $I_L4295_46
 4307.             if ( $I_L4295_46 >= 2 ) exit
 4307.          enddo
 4313.          $I_L4313_40 = 0
 4313. !dir$ ivdep
 4313.          do
 4314.             if ( itype(1 + $I_L4313_40) == 13 .orelse. itype(1 + $I_L4313_40) == 11 ) then
 4315.                rst(1 + $I_L4313_40, 1) = 100000.0
 4315.             else
 4323.                $at_WR0_R0 = ( zlt2(1 + $I_L4313_40, 1) * 1.0/vcover(1 + $I_L4313_40, 1) )
 4325.                if ( par(1 + $I_L4313_40, 1) <= 1.01e-3 ) then
 4334.                   $xabc_S5 = rstpar2(1 + $I_L4313_40, 1, 3) + ( rstpar2(1 + $I_L4313_40, 1, 1) * 1.0/rstpar2(1 + $I_L4313_40, 1, 2) )
 4346.                   rst(1 + $I_L4313_40, 1) = 1.0/( $at_WR0_R0 * ( 5.0e-1 * 1.0/$xabc_S5 ) )
 4346.                else
 4353.                   $gamma_WR0_R1 = ( ( rstpar2(1 + $I_L4313_40, 1, 1) + rstpar2(1 + $I_L4313_40, 1, 2) * rstpar2(1 + $I_L4313_40, 1, 3) ) * 1.0/rstpar2(1 + $I_L4313_40, 1, 3) )
 4365.                   $at_WR0_R0 = ( zlt2(1 + $I_L4313_40, 1) * 1.0/vcover(1 + $I_L4313_40, 1) )
 4371.                   $power1_WR0_R2 = $at_WR0_R0 * extk(1 + $I_L4313_40, 1, 1, 1)
 4372.                   $power2_WR0_R3 = $at_WR0_R0 * extk(1 + $I_L4313_40, 1, 1, 2)
 4379.                   $aa_WR0_R4 = 5.0e-1 + -( chil2(1 + $I_L4313_40, 1) * ( 6.3300000000000001e-1 + 3.3000000000000002e-1 * chil2(1 + $I_L4313_40, 1) ) )
 4389.                   $zat_WR0_R6 = ( pd(1 + $I_L4313_40, 1) * log( 5.0e-1 * ( 1.0 + _expn( -$power1_WR0_R2 ) ) ) * 1.0/extk(1 + $I_L4313_40, 1, 1, 1) )
 4391.                   $zat_WR0_R6 = $zat_WR0_R6 + ( 1.0/extk(1 + $I_L4313_40, 1, 1, 2) * log( 5.0e-1 * ( 1.0 + _expn( -$power2_WR0_R3 ) ) ) * ( 1.0 + -pd(1 + $I_L4313_40, 1) ) )
 4393.                   $zk_WR0_R7 = 1.0/$zat_WR0_R6 * log( pd(1 + $I_L4313_40, 1) * _expn( ( $power1_WR0_R2 * $zat_WR0_R6 * 1.0/$at_WR0_R0 ) ) + _expn( ( $power2_WR0_R3 * $zat_WR0_R6 * 1.0/$at_WR0_R0 ) ) * ( 1.0 + -pd(1 + $I_L4313_40, 1) ) )
 4401.                   $ekat_WR0_R8 = _expn( ( min( 20.0, $at_WR0_R0 * $zk_WR0_R7 ) ) )
 4409.                   $avflux_WR0_R9 = par(1 + $I_L4313_40, 1) * ( pd(1 + $I_L4313_40, 1) * ( ( 8.77e-1 + -1.754 * $aa_WR0_R4 ) + ( $aa_WR0_R4 * 1.0/f(1 + $I_L4313_40) ) ) + ( 1.5 * $aa_WR0_R4 + 1.1187314833333333 * ( 8.77e-1 + -1.754 * $aa_WR0_R4 ) ) * ( 1.0 + -pd(1 + $I_L4313_40, 1) ) )
 4426.                   $rst_WR0_R11 = log( ( ( 1.0 + $ekat_WR0_R8 * ( $gamma_WR0_R1 * 1.0/$avflux_WR0_R9 ) ) * 1.0/( 1.0 + ( $gamma_WR0_R1 * 1.0/$avflux_WR0_R9 ) ) ) ) * ( rstpar2(1 + $I_L4313_40, 1, 2) * 1.0/$gamma_WR0_R1 )
 4445.                   $rst_WR0_R11 = 1.0/( green2(1 + $I_L4313_40, 1) * ( 1.0/( $zk_WR0_R7 * rstpar2(1 + $I_L4313_40, 1, 3) ) * ( $rst_WR0_R11 + -log( ( 1.0/( 1.0 + ( $gamma_WR0_R1 * 1.0/$avflux_WR0_R9 ) ) * ( 1.0/$ekat_WR0_R8 + ( $gamma_WR0_R1 * 1.0/$avflux_WR0_R9 ) ) ) ) ) ) )
 4445.                   rst(1 + $I_L4313_40, 1) = $rst_WR0_R11
 4445.                endif
 4445.             endif
 4448.             $I_L4313_40 = 1 + $I_L4313_40
 4447.             if ( $I_L4313_40 >= nmax ) exit
 4447.          enddo
 4450.          $I_L4450_42 = 0
 4450. !dir$ ivdep
 4450.          do
 4451.             rst(1 + $I_L4450_42, 2) = 100000.0
 4452.             $I_L4450_42 = 1 + $I_L4450_42
 4450.             if ( $I_L4450_42 >= nmax ) exit
 4450.          enddo
 4450.       endif
 4209.       _free( t$1841 )
 4454.       return
 4454.       end
 4454.       
 4462.       
 4462.       subroutine raduse( radt, par, pd, radfac, closs, gloss, thermk, p1f, p2f, radn, vcover, nmax, ncols )
 4462.       t$702 = ncols
 4496.       t$1877 = _zla( 0, ncols )
 4462.       t$1878 = _zla( 0, ncols )
 4462.       t$1879 = 2 * _zla( 0, ncols )
 4462.       t$1880 = 2 * _zla( 0, ncols )
 4462.       t$1881 = 6 * _zla( 0, ncols )
 4462.       t$1882 = 12 * _zla( 0, ncols )
 4462.       t$1883 = 3 * _zla( 0, ncols )
 4462.       t$1884 = 6 * _zla( 0, ncols )
 4507.       t$1887 = 8 * _zla( 0, ncols )
 4508.       t$1888 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 4508.       t$1890 = t$1888 + 8 * _zla( 0, ncols )
 4462.       t$1885 = int( _alloc( t$1888 + 8 * _zla( 0, ncols ) ), 8 )
 4507.       t$1886 = t$1885
 4508.       t$1889 = t$1888 + t$1885
 4515.       if ( nmax > 0 ) then
 4515.          $I_L4515_36 = 0
 4515. !dir$ ivdep
 4515.          do
 4516.             radt(1 + $I_L4515_36, 1) = 0.0
 4517.             radt(1 + $I_L4515_36, 2) = 0.0
 4518.             $I_L4515_36 = 1 + $I_L4515_36
 4515.             if ( $I_L4515_36 >= nmax ) exit
 4515.          enddo
 4529.          $I_L4529_46 = 0
 4529.          do
 4530.             $I_L4530_44 = 0
 4530.             do
 4532.                $SI_L4532_38_G1 = 0
 4532.                do
 4531.                   $I_L4531_42 = 0
 4531. !dir$ blocking_size( 2, 2 )
 4531.                   do
 4532.                      $I_L4532_48 = 0
 4532. !dir$ ivdep
 4532. !dir$ blocking_size( 256, 256 )
 4532.                      do
 4533.                         radt(1 + $I_L4532_48 + 256 * $SI_L4532_38_G1, 1 + $I_L4529_46) = radt(1 + $I_L4532_48 + 256 * $SI_L4532_38_G1, 1 + $I_L4529_46) + radn(1 + $I_L4532_48 + 256 * $SI_L4532_38_G1, 1 + $I_L4530_44, 1 + $I_L4531_42) * radfac(1 + $I_L4532_48 + 256 * $SI_L4532_38_G1, 1 + $I_L4529_46, 1 + $I_L4530_44, 1 + $I_L4531_42)
 4532.                         $I_L4532_48 = 1 + $I_L4532_48
 4532.                         if ( $I_L4532_48 >= min( nmax, 256 + 256 * $SI_L4532_38_G1 ) + -256 * $SI_L4532_38_G1 ) exit
 4532.                      enddo
 4535.                      $I_L4531_42 = 1 + $I_L4531_42
 4535.                      if ( $I_L4531_42 >= 2 ) exit
 4535.                   enddo
 4532.                   $SI_L4532_38_G1 = 1 + $SI_L4532_38_G1
 4534.                   if ( $SI_L4532_38_G1 >= _rsh( 255 + nmax, 8 ) ) exit
 4534.                enddo
 4536.                $I_L4530_44 = 1 + $I_L4530_44
 4535.                if ( $I_L4530_44 >= 2 ) exit
 4535.             enddo
 4537.             $I_L4529_46 = 1 + $I_L4529_46
 4536.             if ( $I_L4529_46 >= 2 ) exit
 4536.          enddo
 4542.          $I_L4542_40 = 0
 4542. !dir$ ivdep
 4542.          do
 4545.             $par_WR0_R0 = 1.0e-3 + radn(1 + $I_L4542_40, 1, 2) + radn(1 + $I_L4542_40, 1, 1)
 4546.             pd(1 + $I_L4542_40, 1) = ( 1.0/$par_WR0_R0 * ( 1.0e-3 + radn(1 + $I_L4542_40, 1, 1) ) )
 4547.             $p1_WR0_R1 = 1.0e-3 + radn(1 + $I_L4542_40, 1, 1) * p1f(1 + $I_L4542_40)
 4548.             $p2_WR0_R2 = radn(1 + $I_L4542_40, 1, 2) * p2f(1 + $I_L4542_40)
 4550.             $par_WR0_R0 = max( 9.9999999999999995e-7, $par_WR0_R0 )
 4550.             par(1 + $I_L4542_40, 1) = $par_WR0_R0
 4551.             par(1 + $I_L4542_40, 2) = ( max( 9.9999999999999995e-7, ( $p1_WR0_R1 + $p2_WR0_R2 ) ) )
 4552.             pd(1 + $I_L4542_40, 2) = ( $p1_WR0_R1 * 1.0/( max( 9.9999999999999995e-7, ( $p1_WR0_R1 + $p2_WR0_R2 ) ) ) )
 4543.             radt(1 + $I_L4542_40, 1) = radt(1 + $I_L4542_40, 1) + -closs(1 + $I_L4542_40) + vcover(1 + $I_L4542_40, 1) * radn(1 + $I_L4542_40, 3, 2) * ( 1.0 + -thermk(1 + $I_L4542_40) )
 4544.             radt(1 + $I_L4542_40, 2) = radt(1 + $I_L4542_40, 2) + -gloss(1 + $I_L4542_40) + radn(1 + $I_L4542_40, 3, 2) * ( 1.0 + -( vcover(1 + $I_L4542_40, 1) * ( 1.0 + -thermk(1 + $I_L4542_40) ) ) )
 4553.             $I_L4542_40 = 1 + $I_L4542_40
 4542.             if ( $I_L4542_40 >= nmax ) exit
 4542.          enddo
 4542.       endif
 4462.       _free( t$1885 )
 4554.       return
 4554.       end
 4554.       
 4563.       
 4563.       subroutine root( phroot, phsoil, w, itype, nmax, ncols )
 4563.       t$722 = ncols
 4613.       t$1891 = _zla( 0, ncols )
 4563.       t$1892 = _zla( 0, ncols )
 4563.       t$1893 = 2 * _zla( 0, ncols )
 4563.       t$1894 = 3 * _zla( 0, ncols )
 4563.       t$1895 = 3 * _zla( 0, ncols )
 4617.       t$1898 = 24 * _zla( 0, ncols )
 4563.       t$1896 = int( _alloc( 24 * _zla( 0, ncols ) ), 8 )
 4617.       t$1897 = t$1896
 4633.       $SC_bee_I0 = bee%dim_1%EX
 4633.       $SC_bee_I1 = bee%dim_1%LB
 4633.       $SC_phsat_I2 = phsat%dim_1%EX
 4633.       $SC_phsat_I3 = phsat%dim_1%LB
 4622.       if ( nmax > 0 ) then
 4621.          $I_L4621_44 = 0
 4621. !dir$ blocking_size( 1, 1 )
 4621.          do
 4622.             $I_L4622_36 = 0
 4622. !dir$ ivdep
 4622. !dir$ blocking_size( 256, 256 )
 4622.             do
 4627.                $www_WR0_R0 = max( 1.0000000000000001e-1, w(1 + $I_L4622_36, 1 + $I_L4621_44) )
 4633.                phsoil(1 + $I_L4622_36, 1 + $I_L4621_44) = (phsat%base_addr)(itype(1 + $I_L4622_36), 0) * _expn( -( (bee%base_addr)(itype(1 + $I_L4622_36), 0) * log( $www_WR0_R0 ) ) )
 4635.                $I_L4622_36 = 1 + $I_L4622_36
 4622.                if ( $I_L4622_36 >= nmax ) exit
 4622.             enddo
 4636.             $I_L4621_44 = 1 + $I_L4621_44
 4635.             if ( $I_L4621_44 >= 3 ) exit
 4635.          enddo
 4649.          $I_L4649_38 = 0
 4649. !dir$ ivdep
 4649.          do
 4650.             phroot(1 + $I_L4649_38, 1) = -1.0e-2 + phsoil(1 + $I_L4649_38, 1)
 4651.             $I_L4649_38 = 1 + $I_L4649_38
 4649.             if ( $I_L4649_38 >= nmax ) exit
 4649.          enddo
 4653.          $SI_L4653_40_G1 = 0
 4653.          do
 4652.             $I_L4652_46 = 0
 4652. !dir$ blocking_size( 2, 2 )
 4652.             do
 4653.                $I_L4653_48 = 0
 4653. !dir$ ivdep
 4653. !dir$ blocking_size( 512, 512 )
 4653.                do
 4654.                   phroot(1 + $I_L4653_48 + 512 * $SI_L4653_40_G1, 1) = max( phroot(1 + $I_L4653_48 + 512 * $SI_L4653_40_G1, 1), phsoil(1 + $I_L4653_48 + 512 * $SI_L4653_40_G1, 2 + $I_L4652_46) )
 4653.                   $I_L4653_48 = 1 + $I_L4653_48
 4653.                   if ( $I_L4653_48 >= min( nmax, 512 + 512 * $SI_L4653_40_G1 ) + -512 * $SI_L4653_40_G1 ) exit
 4653.                enddo
 4656.                $I_L4652_46 = 1 + $I_L4652_46
 4656.                if ( $I_L4652_46 >= 2 ) exit
 4656.             enddo
 4653.             $SI_L4653_40_G1 = 1 + $SI_L4653_40_G1
 4655.             if ( $SI_L4653_40_G1 >= _rsh( 511 + nmax, 9 ) ) exit
 4655.          enddo
 4657.          $I_L4657_42 = 0
 4657. !dir$ ivdep
 4657.          do
 4658.             phroot(1 + $I_L4657_42, 2) = phroot(1 + $I_L4657_42, 1)
 4659.             $I_L4657_42 = 1 + $I_L4657_42
 4657.             if ( $I_L4657_42 >= nmax ) exit
 4657.          enddo
 4657.       endif
 4563.       _free( t$1896 )
 4662.       return
 4662.       end
 4662.       
 4670.       
 4670.       subroutine pbl( jstneu, hgdtg, hgdtc, hgdtm, hcdtg, hcdtc, hcdtm, egdtg, egdtc, egdqm, ecdtg, ecdtc, ecdqm, deadtg, deadtc, deadqm, icheck, ect, eci, egt, egi, egs, ec, eg, hc, hg, ecidif, egidif, ecmass, egmass, etmass, hflux, chf, shf, roff, bps, psb, dzm, em, gmt, gmq, cu, cuni, ctni, ustar, cosz, rhoair, psy, rcp, wc, wg, fc, fg, hr, vcover, z0x, d, rdc, rbc, z0, qm, tm, um, vm, psur, ppc, ppl, radn, ra, rb, rd, rc, rg, tcta, tgta, ta, ea, etc, etg, btc, btg, u2, radt, par, pd, rst, rsoil, phroot, hrr, phsoil, cc, cg, satcap, snow, dtc, dtg, dtm, dqm, stm, extk, radfac, closs, gloss, thermk, p1f, p2f, tc, tg, td, capac, w, itype, dtc3x, mon, nmax, ncols, zlt2, green2, chil2, rstpar2, topt2, tll2, tu2, defac2, ph12, ph22 )
 4670.       t$729 = ncols
 5003.       t$1899 = _zla( 0, ncols )
 4670.       t$1900 = _zla( 0, ncols )
 4670.       t$1901 = 3 * _zla( 0, ncols )
 4670.       t$1902 = 2 * _zla( 0, ncols )
 4670.       t$1903 = 3 * _zla( 0, ncols )
 4670.       t$1904 = 6 * _zla( 0, ncols )
 4670.       t$1905 = 3 * _zla( 0, ncols )
 4670.       t$1906 = 2 * _zla( 0, ncols )
 4670.       t$1907 = 6 * _zla( 0, ncols )
 4670.       t$1908 = 12 * _zla( 0, ncols )
 4670.       t$1909 = 2 * _zla( 0, ncols )
 5021.       t$722 = ncols
 5021.       t$1891 = _zla( 0, ncols )
 5021.       t$1892 = _zla( 0, ncols )
 5021.       t$1893 = 2 * _zla( 0, ncols )
 5021.       t$1894 = 3 * _zla( 0, ncols )
 5021.       t$1895 = 3 * _zla( 0, ncols )
 5021.       t$1898 = 24 * _zla( 0, ncols )
 5021.       t$1896 = int( _alloc( 24 * _zla( 0, ncols ) ), 8 )
 5021.       t$1897 = t$1896
 5021.       $SC_bee_I0 = bee%dim_1%EX
 5021.       $SC_bee_I1 = bee%dim_1%LB
 5021.       $SC_phsat_I2 = phsat%dim_1%EX
 5021.       $SC_phsat_I3 = phsat%dim_1%LB
 5021.       if ( nmax > 0 ) then
 5021.          $I_L5021_130 = 0
 5021. !dir$ blocking_size( 1, 1 )
 5021.          do
 5021.             $I_L5021_108 = 0
 5021. !dir$ ivdep
 5021. !dir$ blocking_size( 256, 256 )
 5021.             do
 5021.                $www_WR0_R0 = max( 1.0000000000000001e-1, w(1 + $I_L5021_108, 1 + $I_L5021_130) )
 5021.                phsoil(1 + $I_L5021_108, 1 + $I_L5021_130) = (phsat%base_addr)(itype(1 + $I_L5021_108), 0) * _expn( -( (bee%base_addr)(itype(1 + $I_L5021_108), 0) * log( $www_WR0_R0 ) ) )
 5021.                $I_L5021_108 = 1 + $I_L5021_108
 5021.                if ( $I_L5021_108 >= nmax ) exit
 5021.             enddo
 5021.             $I_L5021_130 = 1 + $I_L5021_130
 5021.             if ( $I_L5021_130 >= 3 ) exit
 5021.          enddo
 5021.          $I_L5021_110 = 0
 5021. !dir$ ivdep
 5021.          do
 5021.             phroot(1 + $I_L5021_110, 1) = -1.0e-2 + phsoil(1 + $I_L5021_110, 1)
 5021.             $I_L5021_110 = 1 + $I_L5021_110
 5021.             if ( $I_L5021_110 >= nmax ) exit
 5021.          enddo
 5021.          $SI_L5021_112_G1 = 0
 5021.          do
 5021.             $I_L5021_132 = 0
 5021. !dir$ blocking_size( 2, 2 )
 5021.             do
 5021.                $I_L5021_144 = 0
 5021. !dir$ ivdep
 5021. !dir$ blocking_size( 512, 512 )
 5021.                do
 5021.                   phroot(1 + $I_L5021_144 + 512 * $SI_L5021_112_G1, 1) = max( phroot(1 + $I_L5021_144 + 512 * $SI_L5021_112_G1, 1), phsoil(1 + $I_L5021_144 + 512 * $SI_L5021_112_G1, 2 + $I_L5021_132) )
 5021.                   $I_L5021_144 = 1 + $I_L5021_144
 5021.                   if ( $I_L5021_144 >= min( nmax, 512 + 512 * $SI_L5021_112_G1 ) + -512 * $SI_L5021_112_G1 ) exit
 5021.                enddo
 5021.                $I_L5021_132 = 1 + $I_L5021_132
 5021.                if ( $I_L5021_132 >= 2 ) exit
 5021.             enddo
 5021.             $SI_L5021_112_G1 = 1 + $SI_L5021_112_G1
 5021.             if ( $SI_L5021_112_G1 >= _rsh( 511 + nmax, 9 ) ) exit
 5021.          enddo
 5021.          $I_L5021_114 = 0
 5021. !dir$ ivdep
 5021.          do
 5021.             phroot(1 + $I_L5021_114, 2) = phroot(1 + $I_L5021_114, 1)
 5021.             $I_L5021_114 = 1 + $I_L5021_114
 5021.             if ( $I_L5021_114 >= nmax ) exit
 5021.          enddo
 5021.       endif
 5021.       _free( t$1896 )
 5023.       t$702 = ncols
 5023.       t$1877 = _zla( 0, ncols )
 5023.       t$1878 = _zla( 0, ncols )
 5023.       t$1879 = 2 * _zla( 0, ncols )
 5023.       t$1880 = 2 * _zla( 0, ncols )
 5023.       t$1881 = 6 * _zla( 0, ncols )
 5023.       t$1882 = 12 * _zla( 0, ncols )
 5023.       t$1883 = 3 * _zla( 0, ncols )
 5023.       t$1884 = 6 * _zla( 0, ncols )
 5023.       t$1887 = 8 * _zla( 0, ncols )
 5023.       t$1888 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 5023.       t$1890 = t$1888 + 8 * _zla( 0, ncols )
 5023.       t$1885 = int( _alloc( t$1888 + 8 * _zla( 0, ncols ) ), 8 )
 5023.       t$1886 = t$1885
 5023.       t$1889 = t$1888 + t$1885
 5023.       if ( nmax > 0 ) then
 5023.          $I_L5023_116 = 0
 5023. !dir$ ivdep
 5023.          do
 5023.             radt(1 + $I_L5023_116, 1) = 0.0
 5023.             radt(1 + $I_L5023_116, 2) = 0.0
 5023.             $I_L5023_116 = 1 + $I_L5023_116
 5023.             if ( $I_L5023_116 >= nmax ) exit
 5023.          enddo
 5023.          $I_L5023_142 = 0
 5023.          do
 5023.             $I_L5023_138 = 0
 5023.             do
 5023.                $SI_L5023_118_G4 = 0
 5023.                do
 5023.                   $I_L5023_134 = 0
 5023. !dir$ blocking_size( 2, 2 )
 5023.                   do
 5023.                      $I_L5023_147 = 0
 5023. !dir$ ivdep
 5023. !dir$ blocking_size( 256, 256 )
 5023.                      do
 5023.                         radt(1 + $I_L5023_147 + 256 * $SI_L5023_118_G4, 1 + $I_L5023_142) = radt(1 + $I_L5023_147 + 256 * $SI_L5023_118_G4, 1 + $I_L5023_142) + radn(1 + $I_L5023_147 + 256 * $SI_L5023_118_G4, 1 + $I_L5023_138, 1 + $I_L5023_134) * radfac(1 + $I_L5023_147 + 256 * $SI_L5023_118_G4, 1 + $I_L5023_142, 1 + $I_L5023_138, 1 + $I_L5023_134)
 5023.                         $I_L5023_147 = 1 + $I_L5023_147
 5023.                         if ( $I_L5023_147 >= min( nmax, 256 + 256 * $SI_L5023_118_G4 ) + -256 * $SI_L5023_118_G4 ) exit
 5023.                      enddo
 5023.                      $I_L5023_134 = 1 + $I_L5023_134
 5023.                      if ( $I_L5023_134 >= 2 ) exit
 5023.                   enddo
 5023.                   $SI_L5023_118_G4 = 1 + $SI_L5023_118_G4
 5023.                   if ( $SI_L5023_118_G4 >= _rsh( 255 + nmax, 8 ) ) exit
 5023.                enddo
 5023.                $I_L5023_138 = 1 + $I_L5023_138
 5023.                if ( $I_L5023_138 >= 2 ) exit
 5023.             enddo
 5023.             $I_L5023_142 = 1 + $I_L5023_142
 5023.             if ( $I_L5023_142 >= 2 ) exit
 5023.          enddo
 5023.          $I_L5023_120 = 0
 5023. !dir$ ivdep
 5023.          do
 5023.             $par_WR0_R1 = 1.0e-3 + radn(1 + $I_L5023_120, 1, 2) + radn(1 + $I_L5023_120, 1, 1)
 5023.             pd(1 + $I_L5023_120, 1) = ( 1.0/$par_WR0_R1 * ( 1.0e-3 + radn(1 + $I_L5023_120, 1, 1) ) )
 5023.             $p1_WR0_R2 = 1.0e-3 + radn(1 + $I_L5023_120, 1, 1) * p1f(1 + $I_L5023_120)
 5023.             $p2_WR0_R3 = radn(1 + $I_L5023_120, 1, 2) * p2f(1 + $I_L5023_120)
 5023.             $par_WR0_R1 = max( 9.9999999999999995e-7, $par_WR0_R1 )
 5023.             par(1 + $I_L5023_120, 1) = $par_WR0_R1
 5023.             par(1 + $I_L5023_120, 2) = ( max( 9.9999999999999995e-7, ( $p1_WR0_R2 + $p2_WR0_R3 ) ) )
 5023.             pd(1 + $I_L5023_120, 2) = ( $p1_WR0_R2 * 1.0/( max( 9.9999999999999995e-7, ( $p1_WR0_R2 + $p2_WR0_R3 ) ) ) )
 5023.             radt(1 + $I_L5023_120, 1) = radt(1 + $I_L5023_120, 1) + -closs(1 + $I_L5023_120) + vcover(1 + $I_L5023_120, 1) * radn(1 + $I_L5023_120, 3, 2) * ( 1.0 + -thermk(1 + $I_L5023_120) )
 5023.             radt(1 + $I_L5023_120, 2) = radt(1 + $I_L5023_120, 2) + -gloss(1 + $I_L5023_120) + radn(1 + $I_L5023_120, 3, 2) * ( 1.0 + -( vcover(1 + $I_L5023_120, 1) * ( 1.0 + -thermk(1 + $I_L5023_120) ) ) )
 5023.             $I_L5023_120 = 1 + $I_L5023_120
 5023.             if ( $I_L5023_120 >= nmax ) exit
 5023.          enddo
 5023.       endif
 5023.       _free( t$1885 )
 5026.       t$667 = ncols
 5026.       t$1834 = _zla( 0, ncols )
 5026.       t$1835 = _zla( 0, ncols )
 5026.       t$1836 = 2 * _zla( 0, ncols )
 5026.       t$1837 = 2 * _zla( 0, ncols )
 5026.       t$1838 = 6 * _zla( 0, ncols )
 5026.       t$1839 = 12 * _zla( 0, ncols )
 5026.       t$1840 = 6 * _zla( 0, ncols )
 5026.       t$1843 = 8 * _zla( 0, ncols )
 5026.       t$1844 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 5026.       t$1846 = t$1844 + 8 * _zla( 0, ncols )
 5026.       t$1847 = 8 * ( 7 + t$1844 + 8 * _zla( 0, ncols ) ) / 8
 5026.       t$1849 = t$1847 + 8 * _zla( 0, ncols )
 5026.       t$1850 = 8 * ( 7 + t$1847 + 8 * _zla( 0, ncols ) ) / 8
 5026.       t$1852 = t$1850 + 8 * _zla( 0, ncols )
 5026.       t$1853 = 8 * ( 7 + t$1850 + 8 * _zla( 0, ncols ) ) / 8
 5026.       t$1855 = t$1853 + 8 * _zla( 0, ncols )
 5026.       t$1856 = 8 * ( 7 + t$1853 + 8 * _zla( 0, ncols ) ) / 8
 5026.       t$1858 = t$1856 + 8 * _zla( 0, ncols )
 5026.       t$1859 = 8 * ( 7 + t$1856 + 8 * _zla( 0, ncols ) ) / 8
 5026.       t$1861 = t$1859 + 8 * _zla( 0, ncols )
 5026.       t$1862 = 8 * ( 7 + t$1859 + 8 * _zla( 0, ncols ) ) / 8
 5026.       t$1864 = t$1862 + 8 * _zla( 0, ncols )
 5026.       t$1865 = 8 * ( 7 + t$1862 + 8 * _zla( 0, ncols ) ) / 8
 5026.       t$1867 = t$1865 + 8 * _zla( 0, ncols )
 5026.       t$1868 = 8 * ( 7 + t$1865 + 8 * _zla( 0, ncols ) ) / 8
 5026.       t$1870 = t$1868 + 8 * _zla( 0, ncols )
 5026.       t$1871 = 8 * ( 7 + t$1868 + 8 * _zla( 0, ncols ) ) / 8
 5026.       t$1873 = t$1871 + 8 * _zla( 0, ncols )
 5026.       t$1874 = 8 * ( 7 + t$1871 + 8 * _zla( 0, ncols ) ) / 8
 5026.       t$1876 = t$1874 + 8 * _zla( 0, ncols )
 5026.       t$1841 = int( _alloc( t$1874 + 8 * _zla( 0, ncols ) ), 8 )
 5026.       t$1842 = t$1841
 5026.       t$1845 = t$1844 + t$1841
 5026.       t$1848 = t$1847 + t$1841
 5026.       t$1851 = t$1850 + t$1841
 5026.       t$1854 = t$1853 + t$1841
 5026.       t$1857 = t$1856 + t$1841
 5026.       t$1860 = t$1859 + t$1841
 5026.       t$1863 = t$1862 + t$1841
 5026.       t$1866 = t$1865 + t$1841
 5026.       t$1869 = t$1868 + t$1841
 5026.       t$1872 = t$1871 + t$1841
 5026.       t$1875 = t$1874 + t$1841
 5026.       if ( nmax > 0 ) then
 5026.          $I_L5026_122 = 0
 5026. !dir$ ivdep
 5026.          do
 5026.             f(1 + $I_L5026_122) = max( 1.746e-2, cosz(1 + $I_L5026_122) )
 5026.             $I_L5026_122 = 1 + $I_L5026_122
 5026.             if ( $I_L5026_122 >= nmax ) exit
 5026.          enddo
 5026.          $I_L5026_140 = 0
 5026. !dir$ blocking_size( 1, 1 )
 5026.          do
 5026.             $I_L5026_136 = 0
 5026. !dir$ blocking_size( 1, 1 )
 5026.             do
 5026.                $I_L5026_124 = 0
 5026. !dir$ ivdep
 5026. !dir$ blocking_size( 256, 256 )
 5026.                do
 5026.                   extk(1 + $I_L5026_124, 1 + $I_L5026_140, 1, 1 + $I_L5026_136) = min( extk(1 + $I_L5026_124, 1 + $I_L5026_140, 1, 1 + $I_L5026_136), vcover(1 + $I_L5026_124, 1 + $I_L5026_140) * ( 150.0 * 1.0/zlt2(1 + $I_L5026_124, 1 + $I_L5026_140) ) )
 5026.                   $I_L5026_124 = 1 + $I_L5026_124
 5026.                   if ( $I_L5026_124 >= nmax ) exit
 5026.                enddo
 5026.                $I_L5026_136 = 1 + $I_L5026_136
 5026.                if ( $I_L5026_136 >= 2 ) exit
 5026.             enddo
 5026.             $I_L5026_140 = 1 + $I_L5026_140
 5026.             if ( $I_L5026_140 >= 2 ) exit
 5026.          enddo
 5026.          $I_L5026_126 = 0
 5026. !dir$ ivdep
 5026.          do
 5026.             if ( itype(1 + $I_L5026_126) == 13 .orelse. itype(1 + $I_L5026_126) == 11 ) then
 5026.                rst(1 + $I_L5026_126, 1) = 100000.0
 5026.             else
 5026.                $at_WR0_R5 = ( zlt2(1 + $I_L5026_126, 1) * 1.0/vcover(1 + $I_L5026_126, 1) )
 5026.                if ( par(1 + $I_L5026_126, 1) <= 1.01e-3 ) then
 5026.                   $xabc_S17 = rstpar2(1 + $I_L5026_126, 1, 3) + ( rstpar2(1 + $I_L5026_126, 1, 1) * 1.0/rstpar2(1 + $I_L5026_126, 1, 2) )
 5026.                   rst(1 + $I_L5026_126, 1) = 1.0/( $at_WR0_R5 * ( 5.0e-1 * 1.0/$xabc_S17 ) )
 5026.                else
 5026.                   $gamma_WR0_R6 = ( ( rstpar2(1 + $I_L5026_126, 1, 1) + rstpar2(1 + $I_L5026_126, 1, 2) * rstpar2(1 + $I_L5026_126, 1, 3) ) * 1.0/rstpar2(1 + $I_L5026_126, 1, 3) )
 5026.                   $at_WR0_R5 = ( zlt2(1 + $I_L5026_126, 1) * 1.0/vcover(1 + $I_L5026_126, 1) )
 5026.                   $power1_WR0_R7 = $at_WR0_R5 * extk(1 + $I_L5026_126, 1, 1, 1)
 5026.                   $power2_WR0_R8 = $at_WR0_R5 * extk(1 + $I_L5026_126, 1, 1, 2)
 5026.                   $aa_WR0_R9 = 5.0e-1 + -( chil2(1 + $I_L5026_126, 1) * ( 6.3300000000000001e-1 + 3.3000000000000002e-1 * chil2(1 + $I_L5026_126, 1) ) )
 5026.                   $zat_WR0_R11 = ( pd(1 + $I_L5026_126, 1) * log( 5.0e-1 * ( 1.0 + _expn( -$power1_WR0_R7 ) ) ) * 1.0/extk(1 + $I_L5026_126, 1, 1, 1) )
 5026.                   $zat_WR0_R11 = $zat_WR0_R11 + ( 1.0/extk(1 + $I_L5026_126, 1, 1, 2) * log( 5.0e-1 * ( 1.0 + _expn( -$power2_WR0_R8 ) ) ) * ( 1.0 + -pd(1 + $I_L5026_126, 1) ) )
 5026.                   $zk_WR0_R12 = 1.0/$zat_WR0_R11 * log( pd(1 + $I_L5026_126, 1) * _expn( ( $power1_WR0_R7 * $zat_WR0_R11 * 1.0/$at_WR0_R5 ) ) + _expn( ( $power2_WR0_R8 * $zat_WR0_R11 * 1.0/$at_WR0_R5 ) ) * ( 1.0 + -pd(1 + $I_L5026_126, 1) ) )
 5026.                   $ekat_WR0_R13 = _expn( ( min( 20.0, $at_WR0_R5 * $zk_WR0_R12 ) ) )
 5026.                   $avflux_WR0_R14 = par(1 + $I_L5026_126, 1) * ( pd(1 + $I_L5026_126, 1) * ( ( 8.77e-1 + -1.754 * $aa_WR0_R9 ) + ( $aa_WR0_R9 * 1.0/f(1 + $I_L5026_126) ) ) + ( 1.5 * $aa_WR0_R9 + 1.1187314833333333 * ( 8.77e-1 + -1.754 * $aa_WR0_R9 ) ) * ( 1.0 + -pd(1 + $I_L5026_126, 1) ) )
 5026.                   $rst_WR0_R16 = log( ( ( 1.0 + $ekat_WR0_R13 * ( $gamma_WR0_R6 * 1.0/$avflux_WR0_R14 ) ) * 1.0/( 1.0 + ( $gamma_WR0_R6 * 1.0/$avflux_WR0_R14 ) ) ) ) * ( rstpar2(1 + $I_L5026_126, 1, 2) * 1.0/$gamma_WR0_R6 )
 5026.                   $rst_WR0_R16 = 1.0/( green2(1 + $I_L5026_126, 1) * ( 1.0/( $zk_WR0_R12 * rstpar2(1 + $I_L5026_126, 1, 3) ) * ( $rst_WR0_R16 + -log( ( 1.0/( 1.0 + ( $gamma_WR0_R6 * 1.0/$avflux_WR0_R14 ) ) * ( 1.0/$ekat_WR0_R13 + ( $gamma_WR0_R6 * 1.0/$avflux_WR0_R14 ) ) ) ) ) ) )
 5026.                   rst(1 + $I_L5026_126, 1) = $rst_WR0_R16
 5026.                endif
 5026.             endif
 5026.             $I_L5026_126 = 1 + $I_L5026_126
 5026.             if ( $I_L5026_126 >= nmax ) exit
 5026.          enddo
 5026.          $I_L5026_128 = 0
 5026. !dir$ ivdep
 5026.          do
 5026.             rst(1 + $I_L5026_128, 2) = 100000.0
 5026.             $I_L5026_128 = 1 + $I_L5026_128
 5026.             if ( $I_L5026_128 >= nmax ) exit
 5026.          enddo
 5026.       endif
 5026.       _free( t$1841 )
 5029.       call interc( roff(1), cc(1), cg(1), satcap(1, 1), snow(1, 1), extk(1, 1, 1, 1), tc(1), tg(1), td(1), capac(1, 1), w(1, 1), tm(1), ppc(1), ppl(1), vcover(1, 1), itype(1), dtc3x, nmax, ncols, zlt2(1, 1) )
 5036.       call sflxes( hgdtg(1), hgdtc(1), hgdtm(1), hcdtg(1), hcdtc(1), hcdtm(1), egdtg(1), egdtc(1), egdqm(1), ecdtg(1), ecdtc(1), ecdqm(1), deadtg(1), deadtc(1), deadqm(1), icheck(1), bps(1), psb(1), dzm(1), em(1), gmt(1, 1), gmq(1, 1), cu(1), cuni(1), ctni(1), ustar(1), rhoair(1), psy(1), rcp(1), wc(1), wg(1), fc(1), fg(1), hr(1), ect(1), eci(1), egt(1), egi(1), egs(1), ec(1), eg(1), hc(1), hg(1), ecidif(1), egidif(1), ecmass(1), egmass(1), etmass(1), hflux(1), chf(1), shf(1), ra(1), rb(1), rd(1), rc(1), rg(1), tcta(1), tgta(1), ta(1), ea(1), etc(1), etg(1), btc(1), btg(1), u2(1), radt(1, 1), rst(1, 1), rsoil(1), hrr(1), phsoil(1, 1), cc(1), cg(1), satcap(1, 1), dtc(1), dtg(1), dtm(1), dqm(1), stm(1, 1), thermk(1), tc(1), tg(1), td(1), capac(1, 1), w(1, 1), qm(1), tm(1), um(1), vm(1), psur(1), vcover(1, 1), z0x(1), d(1), rdc(1), rbc(1), z0(1), itype(1), dtc3x, mon(1), nmax, jstneu, ncols, zlt2(1, 1), topt2(1, 1), tll2(1, 1), tu2(1, 1), defac2(1, 1), ph12(1, 1), ph22(1, 1) )
 5049.       return
 5049.       end
 5049.       
 5056.       
 5056.       subroutine snowm( chf, shf, fluxef, roff, cc, cg, snow, dtc, dtg, tc, tg, td, capac, w, itype, dtc3x, nmax, ncols )
 5056.       t$878 = ncols
 5121.       t$1910 = _zla( 0, ncols )
 5056.       t$1911 = _zla( 0, ncols )
 5056.       t$1912 = 2 * _zla( 0, ncols )
 5056.       t$1913 = 2 * _zla( 0, ncols )
 5056.       t$1914 = 3 * _zla( 0, ncols )
 5126.       t$1917 = 8 * _zla( 0, ncols )
 5139.       t$1918 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 5139.       t$1920 = t$1918 + 8 * _zla( 0, ncols )
 5132.       t$1921 = 8 * ( 7 + t$1918 + 8 * _zla( 0, ncols ) ) / 8
 5132.       t$1923 = t$1921 + 8 * _zla( 0, ncols )
 5137.       t$1924 = 8 * ( 7 + t$1921 + 8 * _zla( 0, ncols ) ) / 8
 5137.       t$1926 = t$1924 + 8 * _zla( 0, ncols )
 5140.       t$1927 = 8 * ( 7 + t$1924 + 8 * _zla( 0, ncols ) ) / 8
 5140.       t$1929 = t$1927 + 8 * _zla( 0, ncols )
 5141.       t$1930 = 8 * ( 7 + t$1927 + 8 * _zla( 0, ncols ) ) / 8
 5141.       t$1932 = t$1930 + 8 * _zla( 0, ncols )
 5128.       t$1933 = 8 * ( 7 + t$1930 + 8 * _zla( 0, ncols ) ) / 8
 5128.       t$1935 = t$1933 + 8 * _zla( 0, ncols )
 5135.       t$1936 = 8 * ( 7 + t$1933 + 8 * _zla( 0, ncols ) ) / 8
 5135.       t$1938 = t$1936 + 8 * _zla( 0, ncols )
 5129.       t$1939 = 8 * ( 7 + t$1936 + 8 * _zla( 0, ncols ) ) / 8
 5129.       t$1941 = t$1939 + 8 * _zla( 0, ncols )
 5134.       t$1942 = 8 * ( 7 + t$1939 + 8 * _zla( 0, ncols ) ) / 8
 5134.       t$1944 = t$1942 + 8 * _zla( 0, ncols )
 5136.       t$1945 = 8 * ( 7 + t$1942 + 8 * _zla( 0, ncols ) ) / 8
 5136.       t$1947 = t$1945 + 8 * _zla( 0, ncols )
 5138.       t$1948 = 8 * ( 7 + t$1945 + 8 * _zla( 0, ncols ) ) / 8
 5138.       t$1950 = t$1948 + 8 * _zla( 0, ncols )
 5127.       t$1951 = 8 * ( 7 + t$1948 + 8 * _zla( 0, ncols ) ) / 8
 5127.       t$1953 = t$1951 + 8 * _zla( 0, ncols )
 5130.       t$1954 = 8 * ( 7 + t$1951 + 8 * _zla( 0, ncols ) ) / 8
 5130.       t$1956 = t$1954 + 8 * _zla( 0, ncols )
 5131.       t$1957 = 8 * ( 7 + t$1954 + 8 * _zla( 0, ncols ) ) / 8
 5131.       t$1959 = t$1957 + 8 * _zla( 0, ncols )
 5133.       t$1960 = 8 * ( 7 + t$1957 + 8 * _zla( 0, ncols ) ) / 8
 5133.       t$1962 = t$1960 + 8 * _zla( 0, ncols )
 5056.       t$1915 = int( _alloc( t$1960 + 8 * _zla( 0, ncols ) ), 8 )
 5126.       t$1916 = t$1915
 5139.       t$1919 = t$1918 + t$1915
 5132.       t$1922 = t$1921 + t$1915
 5137.       t$1925 = t$1924 + t$1915
 5140.       t$1928 = t$1927 + t$1915
 5141.       t$1931 = t$1930 + t$1915
 5128.       t$1934 = t$1933 + t$1915
 5135.       t$1937 = t$1936 + t$1915
 5129.       t$1940 = t$1939 + t$1915
 5134.       t$1943 = t$1942 + t$1915
 5136.       t$1946 = t$1945 + t$1915
 5138.       t$1949 = t$1948 + t$1915
 5127.       t$1952 = t$1951 + t$1915
 5130.       t$1955 = t$1954 + t$1915
 5131.       t$1958 = t$1957 + t$1915
 5133.       t$1961 = t$1960 + t$1915
 5149.       if ( ncols > 0 ) then
 5149.          $I_L5149_70 = 0
 5149. !dir$ ivdep
 5149.          do
 5149.             cct(1 + $I_L5149_70) = 0.0
 5149.             $I_L5149_70 = 1 + $I_L5149_70
 5149.             if ( $I_L5149_70 >= ncols ) exit
 5149.          enddo
 5149.       endif
 5150.       $dtc3xi_S3 = 1.0/dtc3x
 5227.       $SC_zdepth_I2 = zdepth%dim_1%EX
 5227.       $SC_zdepth_I3 = zdepth%dim_1%LB
 5227.       $SC_zdepth_I5 = zdepth%dim_2%SM
 5227.       $SC_zdepth_I4 = zdepth%dim_2%EX
 5227.       $SC_zdepth_I6 = zdepth%dim_2%LB
 5227.       $SC_poros_I0 = poros%dim_1%EX
 5227.       $SC_poros_I1 = poros%dim_1%LB
 5152.       $I_L5152_72 = 0
 5152.       do
 5153.          if ( $I_L5152_72 == 0 ) then
 5155.             if ( nmax > 0 ) then
 5155.                $I_L5155_54 = 0
 5155. !dir$ ivdep
 5155.                do
 5156.                   cct(1 + $I_L5155_54) = cc(1 + $I_L5155_54)
 5157.                   ts(1 + $I_L5155_54) = tc(1 + $I_L5155_54)
 5158.                   dts(1 + $I_L5155_54) = dtc(1 + $I_L5155_54)
 5159.                   flux(1 + $I_L5155_54) = chf(1 + $I_L5155_54)
 5160.                   $I_L5155_54 = 1 + $I_L5155_54
 5155.                   if ( $I_L5155_54 >= nmax ) exit
 5155.                enddo
 5155.             endif
 5162.          else if ( nmax > 0 ) then
 5164.             $I_L5164_56 = 0
 5164. !dir$ ivdep
 5164.             do
 5165.                $cct_WR0_R0 = cg(1 + $I_L5164_56)
 5165.                cct(1 + $I_L5164_56) = $cct_WR0_R0
 5166.                ts(1 + $I_L5164_56) = tg(1 + $I_L5164_56)
 5167.                dts(1 + $I_L5164_56) = dtg(1 + $I_L5164_56)
 5168.                flux(1 + $I_L5164_56) = $dtc3xi_S3 * $cct_WR0_R0 * dtg(1 + $I_L5164_56)
 5169.                $I_L5164_56 = 1 + $I_L5164_56
 5164.                if ( $I_L5164_56 >= nmax ) exit
 5164.             enddo
 5164.          endif
 5173.          if ( nmax > 0 ) then
 5173.             $I_L5173_58 = 0
 5173. !dir$ ivdep
 5173.             do
 5174.                tta(1 + $I_L5173_58) = ts(1 + $I_L5173_58) + -dts(1 + $I_L5173_58)
 5175.                ttb(1 + $I_L5173_58) = ts(1 + $I_L5173_58)
 5176.                $I_L5173_58 = 1 + $I_L5173_58
 5173.                if ( $I_L5173_58 >= nmax ) exit
 5173.             enddo
 5178.             $I_L5178_60 = 0
 5178. !dir$ ivdep
 5178.             do
 5179.                if ( tta(1 + $I_L5178_60) <= 273.16000000000003 ) then
 5180.                   snow(1 + $I_L5178_60, 1 + $I_L5152_72) = capac(1 + $I_L5178_60, 1 + $I_L5152_72)
 5181.                   capac(1 + $I_L5178_60, 1 + $I_L5152_72) = 0.0
 5181.                else
 5183.                   snow(1 + $I_L5178_60, 1 + $I_L5152_72) = 0.0
 5183.                endif
 5185.                $I_L5178_60 = 1 + $I_L5178_60
 5184.                if ( $I_L5178_60 >= nmax ) exit
 5184.             enddo
 5187.             $I_L5187_62 = 0
 5187. !dir$ ivdep
 5187.             do
 5188.                work(1 + $I_L5187_62) = ( -273.16000000000003 + ttb(1 + $I_L5187_62) ) * ( -273.16000000000003 + tta(1 + $I_L5187_62) )
 5189.                $I_L5187_62 = 1 + $I_L5187_62
 5187.                if ( $I_L5187_62 >= nmax ) exit
 5187.             enddo
 5191.             $I_L5191_64 = 0
 5191. !dir$ ivdep
 5191.             do
 5192.                if ( work(1 + $I_L5191_64) < 0.0 ) then
 5193.                   $ntyp_S8 = itype(1 + $I_L5191_64)
 5194.                   $dtf_WR0_R1 = 273.16000000000003 + -tta(1 + $I_L5191_64)
 5195.                   $dtime1_WR0_R2 = ( $dtf_WR0_R1 * cct(1 + $I_L5191_64) * 1.0/flux(1 + $I_L5191_64) )
 5196.                   $hf_WR0_R3 = flux(1 + $I_L5191_64) * ( dtc3x + -$dtime1_WR0_R2 )
 5197.                   $spwet_WR0_R5 = min( 5.0, snow(1 + $I_L5191_64, 1 + $I_L5152_72) )
 5198.                   if ( dts(1 + $I_L5191_64) <= 0.0 ) then
 5199.                      fcap(1 + $I_L5191_64) = -333624200.0 * capac(1 + $I_L5191_64, 1 + $I_L5152_72)
 5199.                   else
 5201.                      fcap(1 + $I_L5191_64) = 333624200.0 * $spwet_WR0_R5
 5201.                   endif
 5203.                   $LD_SPLT_P1 = fcap(1 + $I_L5191_64)
 5203.                   $dtime2_WR0_R6 = ( $LD_SPLT_P1 * 1.0/flux(1 + $I_L5191_64) )
 5204.                   $dtf2_WR0_R7 = ( flux(1 + $I_L5191_64) * ( dtc3x + -$dtime1_WR0_R2 + -$dtime2_WR0_R6 ) * 1.0/cct(1 + $I_L5191_64) )
 5205.                   $tn_WR0_R8 = 273.16000000000003 + $dtf2_WR0_R7
 5206.                   if ( abs( $hf_WR0_R3 ) < abs( $LD_SPLT_P1 ) ) then
 5207.                      ts(1 + $I_L5191_64) = 273.06
 5207.                   else
 5209.                      ts(1 + $I_L5191_64) = $tn_WR0_R8
 5209.                   endif
 5217.                   $snow_WR0_R4 = snow(1 + $I_L5191_64, 1 + $I_L5152_72) + -( 2.9973844823007445e-9 * cvmg( $LD_SPLT_P1, $hf_WR0_R3, abs( $hf_WR0_R3 ) >= abs( $LD_SPLT_P1 ) ) )
 5217.                   snow(1 + $I_L5191_64, 1 + $I_L5152_72) = $snow_WR0_R4
 5218.                   capac(1 + $I_L5191_64, 1 + $I_L5152_72) = capac(1 + $I_L5191_64, 1 + $I_L5152_72) + ( 2.9973844823007445e-9 * cvmg( $LD_SPLT_P1, $hf_WR0_R3, abs( $hf_WR0_R3 ) >= abs( $LD_SPLT_P1 ) ) )
 5219.                   if ( $snow_WR0_R4 < 1.0e-10 ) then
 5219.                      snow(1 + $I_L5191_64, 1 + $I_L5152_72) = 0.0
 5219.                   endif
 5220.                   if ( $I_L5152_72 == 0 ) then
 5221.                      tc(1 + $I_L5191_64) = ts(1 + $I_L5191_64)
 5221.                   else
 5223.                      tg(1 + $I_L5191_64) = ts(1 + $I_L5191_64)
 5223.                   endif
 5225.                   if ( $I_L5152_72 == 1 ) then
 5226.                      if ( td(1 + $I_L5191_64) > 273.16000000000003 ) then
 5227.                         $LD_SPLT_P4 = capac(1 + $I_L5191_64, 2)
 5227.                         w(1 + $I_L5191_64, 1) = w(1 + $I_L5191_64, 1) + ( $LD_SPLT_P4 * 1.0/( (zdepth%base_addr)($ntyp_S8, 1, 0) * (poros%base_addr)($ntyp_S8, 0) ) )
 5227.                      else
 5230.                         $LD_SPLT_P5 = capac(1 + $I_L5191_64, 2)
 5230.                         roff(1 + $I_L5191_64) = $LD_SPLT_P5 + roff(1 + $I_L5191_64)
 5230.                      endif
 5232.                      capac(1 + $I_L5191_64, 2) = 0.0
 5232.                   endif
 5232.                endif
 5235.                $I_L5191_64 = 1 + $I_L5191_64
 5234.                if ( $I_L5191_64 >= nmax ) exit
 5234.             enddo
 5236.             $I_L5236_66 = 0
 5236. !dir$ ivdep
 5236.             do
 5237.                capac(1 + $I_L5236_66, 1 + $I_L5152_72) = capac(1 + $I_L5236_66, 1 + $I_L5152_72) + snow(1 + $I_L5236_66, 1 + $I_L5152_72)
 5238.                $I_L5236_66 = 1 + $I_L5236_66
 5236.                if ( $I_L5236_66 >= nmax ) exit
 5236.             enddo
 5236.          endif
 5239.          $I_L5152_72 = 1 + $I_L5152_72
 5238.          if ( $I_L5152_72 >= 2 ) exit
 5238.       enddo
 5243.       if ( nmax > 0 ) then
 5243.          $I_L5243_68 = 0
 5243. !dir$ ivdep
 5243.          do
 5244.             fluxef(1 + $I_L5243_68) = shf(1 + $I_L5243_68) + -( $dtc3xi_S3 * dtg(1 + $I_L5243_68) * cg(1 + $I_L5243_68) )
 5245.             $I_L5243_68 = 1 + $I_L5243_68
 5243.             if ( $I_L5243_68 >= nmax ) exit
 5243.          enddo
 5243.       endif
 5056.       _free( t$1915 )
 5247.       return
 5247.       end
 5247.       
 5267.       
 5267.       subroutine fysiks( vcover, z0x, d, rdc, rbc, z0, ndt, latitu, bps, psb, dzm, em, gmt, gmq, gmu, cu, cuni, ctni, ustar, cosz, sinclt, rhoair, psy, rcp, wc, wg, fc, fg, hr, ect, eci, egt, egi, egs, ec, eg, hc, hg, ecidif, egidif, ecmass, egmass, etmass, hflux, chf, shf, fluxef, roff, drag, ra, rb, rd, rc, rg, tcta, tgta, ta, ea, etc, etg, btc, btg, u2, radt, par, pd, rst, rsoil, phroot, hrr, phsoil, cc, cg, satcap, snow, dtc, dtg, dtm, dqm, stm, extk, radfac, closs, gloss, thermk, p1f, p2f, tc, tg, td, capac, w, qm, tm, um, vm, psur, ppc, ppl, radn, itype, dtc3x, mon, nmax, ncols, zlt2, green2, chil2, rstpar2, topt2, tll2, tu2, defac2, ph12, ph22 )
 5267.       t$910 = ncols
 5626.       t$1963 = _zla( 0, ncols )
 5267.       t$1964 = _zla( 0, ncols )
 5267.       t$1965 = 2 * _zla( 0, ncols )
 5267.       t$1966 = 3 * _zla( 0, ncols )
 5267.       t$1967 = 4 * _zla( 0, ncols )
 5267.       t$1968 = 3 * _zla( 0, ncols )
 5267.       t$1969 = 2 * _zla( 0, ncols )
 5267.       t$1970 = 6 * _zla( 0, ncols )
 5267.       t$1971 = 12 * _zla( 0, ncols )
 5267.       t$1972 = 2 * _zla( 0, ncols )
 5267.       t$1973 = 3 * _zla( 0, ncols )
 5267.       t$1974 = 6 * _zla( 0, ncols )
 5666.       t$1977 = 8 * _zla( 0, ncols )
 5662.       t$1978 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 5662.       t$1980 = t$1978 + 8 * _zla( 0, ncols )
 5679.       t$1981 = 8 * ( 7 + t$1978 + 8 * _zla( 0, ncols ) ) / 8
 5679.       t$1983 = t$1981 + 8 * _zla( 0, ncols )
 5659.       t$1984 = 8 * ( 7 + t$1981 + 8 * _zla( 0, ncols ) ) / 8
 5659.       t$1986 = t$1984 + 8 * _zla( 0, ncols )
 5658.       t$1987 = 8 * ( 7 + t$1984 + 8 * _zla( 0, ncols ) ) / 8
 5658.       t$1989 = t$1987 + 8 * _zla( 0, ncols )
 5657.       t$1990 = 8 * ( 7 + t$1987 + 8 * _zla( 0, ncols ) ) / 8
 5657.       t$1992 = t$1990 + 8 * _zla( 0, ncols )
 5667.       t$1993 = 8 * ( 7 + t$1990 + 8 * _zla( 0, ncols ) ) / 8
 5667.       t$1995 = t$1993 + 8 * _zla( 0, ncols )
 5664.       t$1996 = 8 * ( 7 + t$1993 + 8 * _zla( 0, ncols ) ) / 8
 5664.       t$1998 = t$1996 + 8 * _zla( 0, ncols )
 5656.       t$1999 = 8 * ( 7 + t$1996 + 8 * _zla( 0, ncols ) ) / 8
 5656.       t$2001 = t$1999 + 8 * _zla( 0, ncols )
 5655.       t$2002 = 8 * ( 7 + t$1999 + 8 * _zla( 0, ncols ) ) / 8
 5655.       t$2004 = t$2002 + 8 * _zla( 0, ncols )
 5654.       t$2005 = 8 * ( 7 + t$2002 + 8 * _zla( 0, ncols ) ) / 8
 5654.       t$2007 = t$2005 + 8 * _zla( 0, ncols )
 5661.       t$2008 = 8 * ( 7 + t$2005 + 8 * _zla( 0, ncols ) ) / 8
 5661.       t$2010 = t$2008 + 24 * _zla( 0, ncols )
 5665.       t$2011 = 8 * ( 7 + t$2008 + 24 * _zla( 0, ncols ) ) / 8
 5665.       t$2013 = t$2011 + 8 * _zla( 0, ncols )
 5653.       t$2014 = 8 * ( 7 + t$2011 + 8 * _zla( 0, ncols ) ) / 8
 5653.       t$2016 = t$2014 + 8 * _zla( 0, ncols )
 5652.       t$2017 = 8 * ( 7 + t$2014 + 8 * _zla( 0, ncols ) ) / 8
 5652.       t$2019 = t$2017 + 8 * _zla( 0, ncols )
 5651.       t$2020 = 8 * ( 7 + t$2017 + 8 * _zla( 0, ncols ) ) / 8
 5651.       t$2022 = t$2020 + 8 * _zla( 0, ncols )
 5678.       t$2023 = 8 * ( 7 + t$2020 + 8 * _zla( 0, ncols ) ) / 8
 5678.       t$2025 = t$2023 + 8 * _zla( 0, ncols )
 5680.       t$2026 = 8 * ( 7 + t$2023 + 8 * _zla( 0, ncols ) ) / 8
 5680.       t$2028 = t$2026 + 8 * _zla( 0, ncols )
 5649.       t$2029 = 8 * ( 7 + t$2026 + 8 * _zla( 0, ncols ) ) / 8
 5649.       t$2031 = t$2029 + 8 * _zla( 0, ncols )
 5648.       t$2032 = 8 * ( 7 + t$2029 + 8 * _zla( 0, ncols ) ) / 8
 5648.       t$2034 = t$2032 + 8 * _zla( 0, ncols )
 5650.       t$2035 = 8 * ( 7 + t$2032 + 8 * _zla( 0, ncols ) ) / 8
 5650.       t$2037 = t$2035 + 8 * _zla( 0, ncols )
 5646.       t$2038 = 8 * ( 7 + t$2035 + 8 * _zla( 0, ncols ) ) / 8
 5646.       t$2040 = t$2038 + 8 * _zla( 0, ncols )
 5645.       t$2041 = 8 * ( 7 + t$2038 + 8 * _zla( 0, ncols ) ) / 8
 5645.       t$2043 = t$2041 + 8 * _zla( 0, ncols )
 5647.       t$2044 = 8 * ( 7 + t$2041 + 8 * _zla( 0, ncols ) ) / 8
 5647.       t$2046 = t$2044 + 8 * _zla( 0, ncols )
 5640.       t$2048 = t$2044 + 12 * _zla( 0, ncols )
 5663.       t$2049 = 8 * ( 7 + t$2044 + 12 * _zla( 0, ncols ) ) / 8
 5663.       t$2051 = t$2049 + 8 * _zla( 0, ncols )
 5677.       t$2052 = 8 * ( 7 + t$2049 + 8 * _zla( 0, ncols ) ) / 8
 5677.       t$2054 = t$2052 + 8 * _zla( 0, ncols )
 5267.       t$1975 = int( _alloc( t$2052 + 8 * _zla( 0, ncols ) ), 8 )
 5666.       t$1976 = t$1975
 5662.       t$1979 = t$1978 + t$1975
 5679.       t$1982 = t$1981 + t$1975
 5659.       t$1985 = t$1984 + t$1975
 5658.       t$1988 = t$1987 + t$1975
 5657.       t$1991 = t$1990 + t$1975
 5667.       t$1994 = t$1993 + t$1975
 5664.       t$1997 = t$1996 + t$1975
 5656.       t$2000 = t$1999 + t$1975
 5655.       t$2003 = t$2002 + t$1975
 5654.       t$2006 = t$2005 + t$1975
 5661.       t$2009 = t$2008 + t$1975
 5665.       t$2012 = t$2011 + t$1975
 5653.       t$2015 = t$2014 + t$1975
 5652.       t$2018 = t$2017 + t$1975
 5651.       t$2021 = t$2020 + t$1975
 5678.       t$2024 = t$2023 + t$1975
 5680.       t$2027 = t$2026 + t$1975
 5649.       t$2030 = t$2029 + t$1975
 5648.       t$2033 = t$2032 + t$1975
 5650.       t$2036 = t$2035 + t$1975
 5646.       t$2039 = t$2038 + t$1975
 5645.       t$2042 = t$2041 + t$1975
 5647.       t$2045 = t$2044 + t$1975
 5640.       t$2047 = t$2044 + t$1975 + 8 * _zla( 0, ncols )
 5663.       t$2050 = t$2049 + t$1975
 5677.       t$2053 = t$2052 + t$1975
 5685.       if ( nmax > 0 ) then
 5690.          $SC_zdepth_I0 = zdepth%dim_1%EX
 5690.          $SC_zdepth_I1 = zdepth%dim_1%LB
 5690.          $SC_zdepth_I3 = zdepth%dim_2%SM
 5690.          $SC_zdepth_I2 = zdepth%dim_2%EX
 5690.          $SC_zdepth_I4 = zdepth%dim_2%LB
 5690.          $SC_poros_I5 = poros%dim_1%EX
 5690.          $SC_poros_I6 = poros%dim_1%LB
 5685.          $I_L5685_126 = 0
 5685. !dir$ ivdep
 5685.          do
 5690.             totwb(1 + $I_L5685_126) = capac(1 + $I_L5685_126, 2) + capac(1 + $I_L5685_126, 1) + w(1 + $I_L5685_126, 1) * (poros%base_addr)(itype(1 + $I_L5685_126), 0) * (zdepth%base_addr)(itype(1 + $I_L5685_126), 1, 0) + w(1 + $I_L5685_126, 3) * (zdepth%base_addr)(itype(1 + $I_L5685_126), 3, 0) * (poros%base_addr)(itype(1 + $I_L5685_126), 0) + w(1 + $I_L5685_126, 2) * (poros%base_addr)(itype(1 + $I_L5685_126), 0) * (zdepth%base_addr)(itype(1 + $I_L5685_126), 2, 0)
 5694.             $I_L5685_126 = 1 + $I_L5685_126
 5685.             if ( $I_L5685_126 >= nmax ) exit
 5685.          enddo
 5685.       endif
 5698.       call pbl( jstneu, hgdtg(1), hgdtc(1), hgdtm(1), hcdtg(1), hcdtc(1), hcdtm(1), egdtg(1), egdtc(1), egdqm(1), ecdtg(1), ecdtc(1), ecdqm(1), deadtg(1), deadtc(1), deadqm(1), icheck(1), ect(1), eci(1), egt(1), egi(1), egs(1), ec(1), eg(1), hc(1), hg(1), ecidif(1), egidif(1), ecmass(1), egmass(1), etmass(1), hflux(1), chf(1), shf(1), roff(1), bps(1), psb(1), dzm(1), em(1), gmt(1, 1), gmq(1, 1), cu(1), cuni(1), ctni(1), ustar(1), cosz(1), rhoair(1), psy(1), rcp(1), wc(1), wg(1), fc(1), fg(1), hr(1), vcover(1, 1), z0x(1), d(1), rdc(1), rbc(1), z0(1), qm(1), tm(1), um(1), vm(1), psur(1), ppc(1), ppl(1), radn(1, 1, 1), ra(1), rb(1), rd(1), rc(1), rg(1), tcta(1), tgta(1), ta(1), ea(1), etc(1), etg(1), btc(1), btg(1), u2(1), radt(1, 1), par(1, 1), pd(1, 1), rst(1, 1), rsoil(1), phroot(1, 1), hrr(1), phsoil(1, 1), cc(1), cg(1), satcap(1, 1), snow(1, 1), dtc(1), dtg(1), dtm(1), dqm(1), stm(1, 1), extk(1, 1, 1, 1), radfac(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), tc(1), tg(1), td(1), capac(1, 1), w(1, 1), itype(1), dtc3x, mon(1), nmax, ncols, zlt2(1, 1), green2(1, 1), chil2(1, 1), rstpar2(1, 1, 1), topt2(1, 1), tll2(1, 1), tu2(1, 1), defac2(1, 1), ph12(1, 1), ph22(1, 1) )
 5720.       if ( nmax > 0 ) then
 5720.          $I_L5720_128 = 0
 5720. !dir$ ivdep
 5720.          do
 5721.             tc(1 + $I_L5720_128) = tc(1 + $I_L5720_128) + dtc(1 + $I_L5720_128)
 5722.             tg(1 + $I_L5720_128) = tg(1 + $I_L5720_128) + dtg(1 + $I_L5720_128)
 5723.             $I_L5720_128 = 1 + $I_L5720_128
 5720.             if ( $I_L5720_128 >= nmax ) exit
 5720.          enddo
 5720.       endif
 5731.       $SC_zdepth_I0 = zdepth%dim_1%EX
 5731.       $SC_zdepth_I1 = zdepth%dim_1%LB
 5731.       $SC_zdepth_I3 = zdepth%dim_2%SM
 5731.       $SC_zdepth_I2 = zdepth%dim_2%EX
 5731.       $SC_zdepth_I4 = zdepth%dim_2%LB
 5731.       $SC_poros_I5 = poros%dim_1%EX
 5731.       $SC_poros_I6 = poros%dim_1%LB
 5728.       if ( nmax > 0 ) then
 5727.          $I_L5727_156 = 0
 5727. !dir$ blocking_size( 1, 1 )
 5727.          do
 5728.             $I_L5728_130 = 0
 5728. !dir$ ivdep
 5728. !dir$ blocking_size( 256, 256 )
 5728.             do
 5729.                $ntyp_S4 = itype(1 + $I_L5728_130)
 5730.                if ( capac(1 + $I_L5728_130, 1 + $I_L5727_156) <= 9.9999999999999995e-7 ) then
 5731.                   w(1 + $I_L5728_130, 1) = w(1 + $I_L5728_130, 1) + ( capac(1 + $I_L5728_130, 1 + $I_L5727_156) * 1.0/( (zdepth%base_addr)($ntyp_S4, 1, 0) * (poros%base_addr)($ntyp_S4, 0) ) )
 5732.                   capac(1 + $I_L5728_130, 1 + $I_L5727_156) = 0.0
 5732.                endif
 5734.                $I_L5728_130 = 1 + $I_L5728_130
 5733.                if ( $I_L5728_130 >= nmax ) exit
 5733.             enddo
 5735.             $I_L5727_156 = 1 + $I_L5727_156
 5734.             if ( $I_L5727_156 >= 2 ) exit
 5734.          enddo
 5734.       endif
 5739.       call snowm( chf(1), shf(1), fluxef(1), roff(1), cc(1), cg(1), snow(1, 1), dtc(1), dtg(1), tc(1), tg(1), td(1), capac(1, 1), w(1, 1), itype(1), dtc3x, nmax, ncols )
 5745.       $timcon_S6 = 1.4765516371191563e-2 * dtc3x
 5747.       if ( nmax > 0 ) then
 5756.          $SC_zdepth_I0 = zdepth%dim_1%EX
 5756.          $SC_zdepth_I1 = zdepth%dim_1%LB
 5756.          $SC_zdepth_I3 = zdepth%dim_2%SM
 5756.          $SC_zdepth_I2 = zdepth%dim_2%EX
 5756.          $SC_zdepth_I4 = zdepth%dim_2%LB
 5756.          $SC_poros_I5 = poros%dim_1%EX
 5756.          $SC_poros_I6 = poros%dim_1%LB
 5747.          $I_L5747_132 = 0
 5747. !dir$ ivdep
 5747.          do
 5755.             $ntyp_S8 = itype(1 + $I_L5747_132)
 5756.             w(1 + $I_L5747_132, 1) = w(1 + $I_L5747_132, 1) + -( 3.9682539682539682e-10 * egs(1 + $I_L5747_132) * 1.0/( (zdepth%base_addr)($ntyp_S8, 1, 0) * (poros%base_addr)($ntyp_S8, 0) ) )
 5748.             td(1 + $I_L5747_132) = td(1 + $I_L5747_132) + $timcon_S6 * ( fluxef(1 + $I_L5747_132) * 1.0/cg(1 + $I_L5747_132) )
 5749.             $I_L5747_132 = 1 + $I_L5747_132
 5747.             if ( $I_L5747_132 >= nmax ) exit
 5747.          enddo
 5747.       endif
 5781.       $SC_rootd_I7 = rootd%dim_1%EX
 5781.       $SC_rootd_I8 = rootd%dim_1%LB
 5781.       $SC_rootd_I10 = rootd%dim_2%SM
 5781.       $SC_rootd_I9 = rootd%dim_2%EX
 5781.       $SC_rootd_I11 = rootd%dim_2%LB
 5775.       $SC_zdepth_I0 = zdepth%dim_1%EX
 5775.       $SC_zdepth_I1 = zdepth%dim_1%LB
 5775.       $SC_zdepth_I3 = zdepth%dim_2%SM
 5775.       $SC_zdepth_I2 = zdepth%dim_2%EX
 5775.       $SC_zdepth_I4 = zdepth%dim_2%LB
 5797.       $SC_poros_I5 = poros%dim_1%EX
 5797.       $SC_poros_I6 = poros%dim_1%LB
 5761.       $I_L5761_164 = 0
 5761.       do
 5762.          if ( $I_L5761_164 == 0 ) then
 5763.             if ( nmax > 0 ) then
 5763.                $I_L5763_134 = 0
 5763. !dir$ ivdep
 5763.                do
 5764.                   absoil(1 + $I_L5763_134) = 3.9682539682539682e-10 * ect(1 + $I_L5763_134)
 5765.                   $I_L5763_134 = 1 + $I_L5763_134
 5763.                   if ( $I_L5763_134 >= nmax ) exit
 5763.                enddo
 5763.             endif
 5766.          else if ( nmax > 0 ) then
 5767.             $I_L5767_136 = 0
 5767. !dir$ ivdep
 5767.             do
 5768.                absoil(1 + $I_L5767_136) = 3.9682539682539682e-10 * egt(1 + $I_L5767_136)
 5769.                $I_L5767_136 = 1 + $I_L5767_136
 5767.                if ( $I_L5767_136 >= nmax ) exit
 5767.             enddo
 5767.          endif
 5771.          if ( nmax > 0 ) then
 5771.             $I_L5771_138 = 0
 5771. !dir$ ivdep
 5771.             do
 5772.                $ntyp_S13 = itype(1 + $I_L5771_138)
 5773.                ef(1 + $I_L5771_138, 2) = 0.0
 5774.                ef(1 + $I_L5771_138, 3) = 0.0
 5775.                totdep(1 + $I_L5771_138) = (zdepth%base_addr)($ntyp_S13, 1, 0)
 5776.                $I_L5771_138 = 1 + $I_L5771_138
 5771.                if ( $I_L5771_138 >= nmax ) exit
 5771.             enddo
 5777.             $I_L5777_158 = 0
 5777. !dir$ blocking_size( 1, 1 )
 5777.             do
 5778.                $I_L5778_140 = 0
 5778. !dir$ ivdep
 5778. !dir$ blocking_size( 256, 256 )
 5778.                do
 5779.                   $ntyp_S15 = itype(1 + $I_L5778_140)
 5781.                   $div_WR0_R0 = (rootd%base_addr)($ntyp_S15, 1 + $I_L5761_164, 0)
 5780.                   $totdep_WR0_R1 = totdep(1 + $I_L5778_140) + (zdepth%base_addr)($ntyp_S15, 2 + $I_L5777_158, 0)
 5780.                   totdep(1 + $I_L5778_140) = $totdep_WR0_R1
 5782.                   $dep_WR0_R2 = max( 0.0, $div_WR0_R0 + (zdepth%base_addr)($ntyp_S15, 2 + $I_L5777_158, 0) + -$totdep_WR0_R1 )
 5784.                   $dep_WR0_R2 = min( $dep_WR0_R2, (zdepth%base_addr)($ntyp_S15, 2 + $I_L5777_158, 0) )
 5785.                   ef(1 + $I_L5778_140, 2 + $I_L5777_158) = ( $dep_WR0_R2 * 1.0/$div_WR0_R0 )
 5786.                   $I_L5778_140 = 1 + $I_L5778_140
 5778.                   if ( $I_L5778_140 >= nmax ) exit
 5778.                enddo
 5787.                $I_L5777_158 = 1 + $I_L5777_158
 5786.                if ( $I_L5777_158 >= 2 ) exit
 5786.             enddo
 5788.             $I_L5788_142 = 0
 5788. !dir$ ivdep
 5788.             do
 5789.                $eft_WR0_R3 = ef(1 + $I_L5788_142, 3) + ef(1 + $I_L5788_142, 2)
 5790.                $eft_WR0_R3 = max( 9.9999999999999995e-7, $eft_WR0_R3 )
 5791.                ef(1 + $I_L5788_142, 2) = ( ef(1 + $I_L5788_142, 2) * 1.0/$eft_WR0_R3 )
 5792.                ef(1 + $I_L5788_142, 3) = ( ef(1 + $I_L5788_142, 3) * 1.0/$eft_WR0_R3 )
 5793.                $I_L5788_142 = 1 + $I_L5788_142
 5788.                if ( $I_L5788_142 >= nmax ) exit
 5788.             enddo
 5794.             $I_L5794_160 = 0
 5794. !dir$ blocking_size( 1, 1 )
 5794.             do
 5795.                $I_L5795_144 = 0
 5795. !dir$ ivdep
 5795. !dir$ blocking_size( 256, 256 )
 5795.                do
 5796.                   $ntyp_S19 = itype(1 + $I_L5795_144)
 5797.                   w(1 + $I_L5795_144, 2 + $I_L5794_160) = w(1 + $I_L5795_144, 2 + $I_L5794_160) + -( absoil(1 + $I_L5795_144) * ef(1 + $I_L5795_144, 2 + $I_L5794_160) * 1.0/( (poros%base_addr)($ntyp_S19, 0) * (zdepth%base_addr)($ntyp_S19, 2 + $I_L5794_160, 0) ) )
 5799.                   $I_L5795_144 = 1 + $I_L5795_144
 5795.                   if ( $I_L5795_144 >= nmax ) exit
 5795.                enddo
 5800.                $I_L5794_160 = 1 + $I_L5794_160
 5799.                if ( $I_L5794_160 >= 2 ) exit
 5799.             enddo
 5799.          endif
 5801.          $I_L5761_164 = 1 + $I_L5761_164
 5800.          if ( $I_L5761_164 >= 2 ) exit
 5800.       enddo
 5810.       $SC_zdepth_I0 = zdepth%dim_1%EX
 5810.       $SC_zdepth_I1 = zdepth%dim_1%LB
 5810.       $SC_zdepth_I3 = zdepth%dim_2%SM
 5810.       $SC_zdepth_I2 = zdepth%dim_2%EX
 5810.       $SC_zdepth_I4 = zdepth%dim_2%LB
 5807.       if ( nmax > 0 ) then
 5807.          $SI_L5807_146_G1 = 0
 5807.          do
 5806.             $I_L5806_162 = 0
 5806. !dir$ blocking_size( 2, 2 )
 5806.             do
 5807.                $I_L5807_166 = 0
 5807. !dir$ ivdep
 5807. !dir$ blocking_size( 256, 256 )
 5807.                do
 5808.                   if ( w(1 + $I_L5807_166 + 256 * $SI_L5807_146_G1, 1 + $I_L5806_162) <= 0.0 ) then
 5809.                      $ntyp_S23 = itype(1 + $I_L5807_166 + 256 * $SI_L5807_146_G1)
 5810.                      w(1 + $I_L5807_166 + 256 * $SI_L5807_146_G1, 2 + $I_L5806_162) = w(1 + $I_L5807_166 + 256 * $SI_L5807_146_G1, 2 + $I_L5806_162) + ( w(1 + $I_L5807_166 + 256 * $SI_L5807_146_G1, 1 + $I_L5806_162) * (zdepth%base_addr)($ntyp_S23, 1 + $I_L5806_162, 0) * 1.0/(zdepth%base_addr)($ntyp_S23, 2 + $I_L5806_162, 0) )
 5812.                      w(1 + $I_L5807_166 + 256 * $SI_L5807_146_G1, 1 + $I_L5806_162) = 0.0
 5812.                   endif
 5807.                   $I_L5807_166 = 1 + $I_L5807_166
 5813.                   if ( $I_L5807_166 >= min( nmax, 256 + 256 * $SI_L5807_146_G1 ) + -256 * $SI_L5807_146_G1 ) exit
 5813.                enddo
 5815.                $I_L5806_162 = 1 + $I_L5806_162
 5815.                if ( $I_L5806_162 >= 2 ) exit
 5815.             enddo
 5807.             $SI_L5807_146_G1 = 1 + $SI_L5807_146_G1
 5814.             if ( $SI_L5807_146_G1 >= _rsh( 255 + nmax, 8 ) ) exit
 5814.          enddo
 5814.       endif
 5817.       call runoff( roff(1), tg(1), td(1), capac(1, 1), w(1, 1), itype(1), dtc3x, nmax, ncols )
 5820.       if ( nmax > 0 ) then
 5823.          $SC_zdepth_I0 = zdepth%dim_1%EX
 5823.          $SC_zdepth_I1 = zdepth%dim_1%LB
 5823.          $SC_zdepth_I3 = zdepth%dim_2%SM
 5823.          $SC_zdepth_I2 = zdepth%dim_2%EX
 5823.          $SC_zdepth_I4 = zdepth%dim_2%LB
 5831.          $SC_poros_I5 = poros%dim_1%EX
 5831.          $SC_poros_I6 = poros%dim_1%LB
 5820.          $I_L5820_148 = 0
 5820. !dir$ ivdep
 5820.          do
 5821.             $ntyp_S25 = itype(1 + $I_L5820_148)
 5822.             if ( w(1 + $I_L5820_148, 1) > 1.0 ) then
 5823.                w(1 + $I_L5820_148, 2) = w(1 + $I_L5820_148, 2) + ( (zdepth%base_addr)($ntyp_S25, 1, 0) * 1.0/(zdepth%base_addr)($ntyp_S25, 2, 0) * ( -1.0 + w(1 + $I_L5820_148, 1) ) )
 5824.                w(1 + $I_L5820_148, 1) = 1.0
 5824.             endif
 5826.             if ( w(1 + $I_L5820_148, 2) > 1.0 ) then
 5827.                w(1 + $I_L5820_148, 3) = w(1 + $I_L5820_148, 3) + ( (zdepth%base_addr)($ntyp_S25, 2, 0) * 1.0/(zdepth%base_addr)($ntyp_S25, 3, 0) * ( -1.0 + w(1 + $I_L5820_148, 2) ) )
 5828.                w(1 + $I_L5820_148, 2) = 1.0
 5828.             endif
 5830.             if ( w(1 + $I_L5820_148, 3) > 1.0 ) then
 5831.                roff(1 + $I_L5820_148) = roff(1 + $I_L5820_148) + (poros%base_addr)($ntyp_S25, 0) * (zdepth%base_addr)($ntyp_S25, 3, 0) * ( -1.0 + w(1 + $I_L5820_148, 3) )
 5832.                w(1 + $I_L5820_148, 3) = 1.0
 5832.             endif
 5834.             $I_L5820_148 = 1 + $I_L5820_148
 5833.             if ( $I_L5820_148 >= nmax ) exit
 5833.          enddo
 5842.          $I_L5842_150 = 0
 5842. !dir$ ivdep
 5842.          do
 5848.             $drag_WR0_R4 = ustar(1 + $I_L5842_150) * cu(1 + $I_L5842_150) * rhoair(1 + $I_L5842_150)
 5848.             drag(1 + $I_L5842_150) = $drag_WR0_R4
 5863.             $aaa_WR0_R5 = ( 9.8000000000000004e-2 * $drag_WR0_R4 * 1.0/psb(1 + $I_L5842_150) )
 5869.             $d1_S27 = 1.0/ra(1 + $I_L5842_150) + 1.0/rb(1 + $I_L5842_150) + 1.0/rd(1 + $I_L5842_150)
 5871.             ta(1 + $I_L5842_150) = ( 1.0/$d1_S27 * ( ( bps(1 + $I_L5842_150) * tm(1 + $I_L5842_150) * 1.0/ra(1 + $I_L5842_150) ) + ( tc(1 + $I_L5842_150) * 1.0/rb(1 + $I_L5842_150) ) + ( tg(1 + $I_L5842_150) * 1.0/rd(1 + $I_L5842_150) ) ) )
 5865.             $gmu_WR0_R6 = gmu(1 + $I_L5842_150, 2) + dtc3x * $aaa_WR0_R5
 5865.             gmu(1 + $I_L5842_150, 2) = $gmu_WR0_R6
 5866.             gmu(1 + $I_L5842_150, 3) = ( 1.0/$gmu_WR0_R6 * ( gmu(1 + $I_L5842_150, 3) + -( sinclt(1 + $I_L5842_150) * $aaa_WR0_R5 * um(1 + $I_L5842_150) ) ) )
 5867.             gmu(1 + $I_L5842_150, 4) = ( 1.0/$gmu_WR0_R6 * ( gmu(1 + $I_L5842_150, 4) + -( vm(1 + $I_L5842_150) * $aaa_WR0_R5 * sinclt(1 + $I_L5842_150) ) ) )
 5873.             $I_L5842_150 = 1 + $I_L5842_150
 5842.             if ( $I_L5842_150 >= nmax ) exit
 5842.          enddo
 5880.          $SC_zdepth_I0 = zdepth%dim_1%EX
 5880.          $SC_zdepth_I1 = zdepth%dim_1%LB
 5880.          $SC_zdepth_I3 = zdepth%dim_2%SM
 5880.          $SC_zdepth_I2 = zdepth%dim_2%EX
 5880.          $SC_zdepth_I4 = zdepth%dim_2%LB
 5880.          $SC_poros_I5 = poros%dim_1%EX
 5880.          $SC_poros_I6 = poros%dim_1%LB
 5878.          $I_L5878_152 = 0
 5878. !dir$ ivdep
 5878.          do
 5879.             $ntyp_S29 = itype(1 + $I_L5878_152)
 5880.             endwb(1 + $I_L5878_152) = roff(1 + $I_L5878_152) + capac(1 + $I_L5878_152, 2) + capac(1 + $I_L5878_152, 1) + 1.0e-3 * etmass(1 + $I_L5878_152) + -1.0e-3 * ( ppc(1 + $I_L5878_152) + ppl(1 + $I_L5878_152) ) + w(1 + $I_L5878_152, 3) * (poros%base_addr)($ntyp_S29, 0) * (zdepth%base_addr)($ntyp_S29, 3, 0) + w(1 + $I_L5878_152, 1) * (zdepth%base_addr)($ntyp_S29, 1, 0) * (poros%base_addr)($ntyp_S29, 0) + w(1 + $I_L5878_152, 2) * (poros%base_addr)($ntyp_S29, 0) * (zdepth%base_addr)($ntyp_S29, 2, 0)
 5895.             cbal(1 + $I_L5878_152) = radt(1 + $I_L5878_152, 1) + -( 1.0/dtc3x * ( eci(1 + $I_L5878_152) + hc(1 + $I_L5878_152) + ect(1 + $I_L5878_152) ) ) + -chf(1 + $I_L5878_152)
 5896.             gbal(1 + $I_L5878_152) = radt(1 + $I_L5878_152, 2) + -( 1.0/dtc3x * ( hg(1 + $I_L5878_152) + egi(1 + $I_L5878_152) + egt(1 + $I_L5878_152) + egs(1 + $I_L5878_152) ) ) + -shf(1 + $I_L5878_152)
 5901.             $I_L5878_152 = 1 + $I_L5878_152
 5878.             if ( $I_L5878_152 >= nmax ) exit
 5878.          enddo
 5878.       endif
 5903.       if ( nmax > 0 ) then
 5907.          $SC_zlt_I12 = zlt%dim_1%EX
 5907.          $SC_zlt_I13 = zlt%dim_1%LB
 5907.          $SC_zlt_I15 = zlt%dim_2%SM
 5907.          $SC_zlt_I14 = zlt%dim_2%EX
 5907.          $SC_zlt_I16 = zlt%dim_2%LB
 5907.          $SC_zlt_I18 = zlt%dim_3%SM
 5907.          $SC_zlt_I17 = zlt%dim_3%EX
 5907.          $SC_zlt_I19 = zlt%dim_3%LB
 5903.          $I_L5903_154 = 0
 5903.          do
 5904.             ntyp = itype(1 + $I_L5903_154)
 5906.             if ( abs( totwb(1 + $I_L5903_154) + -endwb(1 + $I_L5903_154) ) > 5.0000000000000001e-4 ) then
 5907.                $Unit_temp_O0 = nfprt
 5907.                $IOitem_O2 = totwb(1 + $I_L5903_154) + -endwb(1 + $I_L5903_154)
 5907.                $IOitem_O3 = (zlt%base_addr)(ntyp, 12, 1, 0)
 5907.                $IOitem_O4 = (zlt%base_addr)(ntyp, 12, 2, 0)
 5907.                $_IOitem_P0(0) = latitu
 5907.                $_IOitem_P0(1) = ( 1 + $I_L5903_154 )
 5907.                $_IOitem_P0(2) = ntyp
 5907.                $_IOitem_P0(3) = ndt
 5907.                $_IOitem_P1(0) = totwb(1 + $I_L5903_154)
 5907.                $_IOitem_P1(1) = endwb(1 + $I_L5903_154)
 5907.                $_IOitem_P2(0) = w(1 + $I_L5903_154, 1)
 5907.                $_IOitem_P2(1) = w(1 + $I_L5903_154, 2)
 5907.                $_IOitem_P2(2) = w(1 + $I_L5903_154, 3)
 5907.                $_IOitem_P2(3) = capac(1 + $I_L5903_154, 1)
 5907.                $_IOitem_P2(4) = capac(1 + $I_L5903_154, 2)
 5907.                $_IOitem_P2(5) = ppl(1 + $I_L5903_154)
 5907.                $_IOitem_P2(6) = ppc(1 + $I_L5903_154)
 5907.                $_IOitem_P2(7) = etmass(1 + $I_L5903_154)
 5907.                $_IOitem_P2(8) = roff(1 + $I_L5903_154)
 5907.                $_IOitem_P2(9) = $IOitem_O3
 5907.                $_IOitem_P2(10) = $IOitem_O4
 5907.                $_IOitem_P2(11) = tc(1 + $I_L5903_154)
 5907.                $_IOitem_P2(12) = tg(1 + $I_L5903_154)
 5907.                $_IOitem_P2(13) = td(1 + $I_L5903_154)
 5907.                $_IOitem_P2(14) = tm(1 + $I_L5903_154)
 5907.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$1075,  _substr(t$1074,1,70), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P0(:( 0, 3, 1 )), 0x2000200000000L ), _iotype( (&)$_IOitem_P1(:( 0, 1, 1 )), 0x804060300000000L ), _iotype( $IOitem_O2, 0x4000300000000L ), _iotype( (&)$_IOitem_P2(:( 0, 14, 1 )), 0x804060300000000L ) ) )
 5907.             endif
 5913.             if ( abs( cbal(1 + $I_L5903_154) + -gbal(1 + $I_L5903_154) ) > 5.0 ) then
 5914.                $Unit_temp_O5 = nfprt
 5914.                $_IOitem_P3(0) = latitu
 5914.                $_IOitem_P3(1) = ( 1 + $I_L5903_154 )
 5914.                $_IOitem_P3(2) = ntyp
 5914.                $_IOitem_P3(3) = ndt
 5914.                $_IOitem_P4(0) = radt(1 + $I_L5903_154, 1)
 5914.                $_IOitem_P4(1) = radt(1 + $I_L5903_154, 2)
 5914.                $_IOitem_P4(2) = chf(1 + $I_L5903_154)
 5914.                $_IOitem_P4(3) = shf(1 + $I_L5903_154)
 5914.                $_IOitem_P4(4) = hflux(1 + $I_L5903_154)
 5914.                $_IOitem_P4(5) = ect(1 + $I_L5903_154)
 5914.                $_IOitem_P4(6) = eci(1 + $I_L5903_154)
 5914.                $_IOitem_P4(7) = egt(1 + $I_L5903_154)
 5914.                $_IOitem_P4(8) = egi(1 + $I_L5903_154)
 5914.                $_IOitem_P4(9) = egs(1 + $I_L5903_154)
 5914.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, t$1077,  _substr(t$1076,1,42), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P3(:( 0, 3, 1 )), 0x2000200000000L ), _iotype( (&)$_IOitem_P4(:( 0, 9, 1 )), 0x804060300000000L ) ) )
 5914.             endif
 5917.             $I_L5903_154 = 1 + $I_L5903_154
 5913.             if ( $I_L5903_154 >= nmax ) exit
 5913.          enddo
 5913.       endif
 5267.       _free( t$1975 )
 5922.       return
 5922.       end
 5922.       
 5930.       
 5930.       subroutine vntlt1( rmi, rhi, gu, gv, gt, tsurf, tsea, ncols, sigki, cuni, cui, cu, ctni, cti, ct, speedm, tha, thm, dzm, thvgm, rib, z0, zorl, ustar, sinclt, mskant )
 5930.       t$1078 = ncols
 5983.       t$2055 = _zla( 0, ncols )
 6021.       t$2058 = 8 * _zla( 0, ncols )
 5930.       t$2056 = int( _alloc( 8 * _zla( 0, ncols ) ), 8 )
 6021.       t$2057 = t$2056
 6026.       if ( ncols > 0 ) then
 6026.          $I_L6026_12 = 0
 6026. !dir$ ivdep
 6026.          do
 6027.             if ( mskant(1 + $I_L6026_12) == 1 ) then
 6028.                z0(1 + $I_L6026_12) = 1.0e-3
 6029.                if ( tsea(1 + $I_L6026_12) >= 0.0 ) then
 6028.                   goto 10
 6029.                else if ( abs( tsea(1 + $I_L6026_12) ) >= 271.17000000000002 ) then
 6030.                   z0(1 + $I_L6026_12) = 1.0e-2 * zorl(1 + $I_L6026_12)
 6030.                else
 6030.    10             continue
 6031.                   if ( tsea(1 + $I_L6026_12) < 0.0 ) then
 6031.                      if ( abs( tsea(1 + $I_L6026_12) ) < 271.17000000000002 ) then
 6032.                         z0(1 + $I_L6026_12) = 1.0e-3
 6032.                      endif
 6032.                   endif
 6032.                endif
 6034.                sincli(1 + $I_L6026_12) = 1.0/sinclt(1 + $I_L6026_12)
 6034.             endif
 6036.             $I_L6026_12 = 1 + $I_L6026_12
 6035.             if ( $I_L6026_12 >= ncols ) exit
 6035.          enddo
 6049.          $SC_sigki_I0 = sigki(1)
 6038.          $I_L6038_14 = 0
 6038. !dir$ ivdep
 6038.          do
 6039.             if ( mskant(1 + $I_L6038_14) == 1 ) then
 6040.                if ( tsea(1 + $I_L6038_14) <= 0.0 ) then
 6041.                   $speedm_WR0_R0 = sincli(1 + $I_L6038_14) * _sqrt( gv(1 + $I_L6038_14) * gv(1 + $I_L6038_14) + gu(1 + $I_L6038_14) * gu(1 + $I_L6038_14) )
 6043.                   $dzm_WR0_R1 = rbyg * gt(1 + $I_L6038_14)
 6043.                   dzm(1 + $I_L6038_14) = $dzm_WR0_R1
 6044.                   $cuni_WR0_R2 = -1.5629999999999999 + 2.1895249999999997 * log( ( $dzm_WR0_R1 * 1.0/z0(1 + $I_L6038_14) ) )
 6044.                   cuni(1 + $I_L6038_14) = $cuni_WR0_R2
 6045.                   ctni(1 + $I_L6038_14) = $cuni_WR0_R2
 6049.                   $thm_WR0_R4 = $SC_sigki_I0 * gt(1 + $I_L6038_14)
 6049.                   thm(1 + $I_L6038_14) = $thm_WR0_R4
 6050.                   $tha_WR0_R5 = tsurf(1 + $I_L6038_14)
 6050.                   tha(1 + $I_L6038_14) = $tha_WR0_R5
 6051.                   thvgm(1 + $I_L6038_14) = ( $tha_WR0_R5 + -$thm_WR0_R4 )
 6042.                   $speedm_WR0_R0 = max( 2.0, $speedm_WR0_R0 )
 6042.                   speedm(1 + $I_L6038_14) = $speedm_WR0_R0
 6054.                   $rib_WR0_R7 = min( 1.25, max( -1.25, ( -( 9.8000000000000007 * $dzm_WR0_R1 * 1.0/( $speedm_WR0_R0 * $speedm_WR0_R0 * $thm_WR0_R4 ) * ( $tha_WR0_R5 + -$thm_WR0_R4 ) ) ) ) )
 6054.                   rib(1 + $I_L6038_14) = ( min( 1.25, max( -1.25, ( -( 9.8000000000000007 * $dzm_WR0_R1 * 1.0/( $speedm_WR0_R0 * $speedm_WR0_R0 * $thm_WR0_R4 ) * ( $tha_WR0_R5 + -$thm_WR0_R4 ) ) ) ) ) )
 6055.                   if ( ( min( 1.25, max( -1.25, ( -( 9.8000000000000007 * $dzm_WR0_R1 * 1.0/( $speedm_WR0_R0 * $speedm_WR0_R0 * $thm_WR0_R4 ) * ( $tha_WR0_R5 + -$thm_WR0_R4 ) ) ) ) ) ) < 0.0 ) then
 6056.                      $f_S2 = log( 1.0 + -1.2743 * $rib_WR0_R7 )
 6057.                      $cui_WR0_R8 = $cuni_WR0_R2 * _expn( 1.2270000000000001 + -_sqrt( 1.5055290000000001 + 1.2642 * $f_S2 ) )
 6057.                      cui(1 + $I_L6038_14) = $cui_WR0_R8
 6058.                      $g_S3 = log( 1.0 + -3.4805000000000001 * $rib_WR0_R7 )
 6059.                      cti(1 + $I_L6038_14) = $cuni_WR0_R2 * _expn( 1.3462000000000001 + -_sqrt( 1.8122544400000002 + 1.8380000000000001 * $g_S3 ) )
 6059.                   else
 6061.                      $f_S4 = log( 1.0 + 10.815 * $rib_WR0_R7 )
 6062.                      $cui_WR0_R8 = $cuni_WR0_R2 * _expn( -1.8899999999999999 + _sqrt( 3.5720999999999998 + 5.0518999999999998 * $f_S4 ) )
 6062.                      cui(1 + $I_L6038_14) = $cui_WR0_R8
 6063.                      cti(1 + $I_L6038_14) = $cui_WR0_R8
 6063.                   endif
 6065.                   cu(1 + $I_L6038_14) = 1.0/$cui_WR0_R8
 6066.                   $ct_WR0_R10 = 1.0/cti(1 + $I_L6038_14)
 6066.                   ct(1 + $I_L6038_14) = $ct_WR0_R10
 6070.                   ustar(1 + $I_L6038_14) = ( $speedm_WR0_R0 * 1.0/$cui_WR0_R8 )
 6071.                   rmi(1 + $I_L6038_14) = 1.0/$cui_WR0_R8 * ( $speedm_WR0_R0 * 1.0/$cui_WR0_R8 )
 6072.                   rhi(1 + $I_L6038_14) = $ct_WR0_R10 * ( $speedm_WR0_R0 * 1.0/$cui_WR0_R8 )
 6072.                endif
 6072.             endif
 6075.             $I_L6038_14 = 1 + $I_L6038_14
 6074.             if ( $I_L6038_14 >= ncols ) exit
 6074.          enddo
 6074.       endif
 5930.       _free( t$2056 )
 6076.       return
 6076.       end
 6076.       
 6083.       
 6083.       subroutine seasfc( tmtx, umtx, qmtx, kpbl, kqpbl, slrad, tsurf, qsurf, gu, gv, gt, gq, gps, tsea, dtc3x, sinclt, sigki, delsig, sens, evap, umom, vmom, rmi, rhi, cond, stor, zorl, ncols, speedm, ustarm, z0, rho, qsfc, tsfc, mskant )
 6083.       t$1103 = ncols
 6083.       t$1104 = kpbl
 6162.       t$2059 = _zla( 0, ncols )
 6083.       t$2060 = _zla( 0, ncols )
 6162.       t$2061 = _zla( 0, kpbl )
 6083.       t$2062 = _zla( 0, ncols ) * _zla( 0, kpbl )
 6083.       t$2063 = 3 * _zla( 0, ncols ) * _zla( 0, kpbl )
 6083.       t$2064 = 4 * _zla( 0, ncols ) * _zla( 0, kpbl )
 6083.       t$1108 = kqpbl
 6164.       t$2065 = _zla( 0, kqpbl )
 6083.       t$2066 = _zla( 0, ncols ) * _zla( 0, kqpbl )
 6083.       t$2067 = 3 * _zla( 0, ncols ) * _zla( 0, kqpbl )
 6195.       t$2070 = 8 * _zla( 0, ncols )
 6196.       t$2071 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 6196.       t$2073 = t$2071 + 8 * _zla( 0, ncols )
 6197.       t$2074 = 8 * ( 7 + t$2071 + 8 * _zla( 0, ncols ) ) / 8
 6197.       t$2076 = t$2074 + 8 * _zla( 0, ncols )
 6218.       t$2077 = 8 * ( 7 + t$2074 + 8 * _zla( 0, ncols ) ) / 8
 6218.       t$2079 = t$2077 + 8 * _zla( 0, ncols )
 6219.       t$2080 = 8 * ( 7 + t$2077 + 8 * _zla( 0, ncols ) ) / 8
 6219.       t$2082 = t$2080 + 8 * _zla( 0, ncols )
 6220.       t$2083 = 8 * ( 7 + t$2080 + 8 * _zla( 0, ncols ) ) / 8
 6220.       t$2085 = t$2083 + 8 * _zla( 0, ncols )
 6222.       t$2086 = 8 * ( 7 + t$2083 + 8 * _zla( 0, ncols ) ) / 8
 6222.       t$2088 = t$2086 + 8 * _zla( 0, ncols )
 6223.       t$2089 = 8 * ( 7 + t$2086 + 8 * _zla( 0, ncols ) ) / 8
 6223.       t$2091 = t$2089 + 8 * _zla( 0, ncols )
 6225.       t$2092 = 8 * ( 7 + t$2089 + 8 * _zla( 0, ncols ) ) / 8
 6225.       t$2094 = t$2092 + 8 * _zla( 0, ncols )
 6226.       t$2095 = 8 * ( 7 + t$2092 + 8 * _zla( 0, ncols ) ) / 8
 6226.       t$2097 = t$2095 + 8 * _zla( 0, ncols )
 6221.       t$2098 = 8 * ( 7 + t$2095 + 8 * _zla( 0, ncols ) ) / 8
 6221.       t$2100 = t$2098 + 8 * _zla( 0, ncols )
 6224.       t$2101 = 8 * ( 7 + t$2098 + 8 * _zla( 0, ncols ) ) / 8
 6224.       t$2103 = t$2101 + 8 * _zla( 0, ncols )
 6227.       t$2104 = 8 * ( 7 + t$2101 + 8 * _zla( 0, ncols ) ) / 8
 6227.       t$2106 = t$2104 + 8 * _zla( 0, ncols )
 6203.       t$2107 = 8 * ( 7 + t$2104 + 8 * _zla( 0, ncols ) ) / 8
 6203.       t$2109 = t$2107 + 8 * _zla( 0, ncols )
 6202.       t$2110 = 8 * ( 7 + t$2107 + 8 * _zla( 0, ncols ) ) / 8
 6202.       t$2112 = t$2110 + 8 * _zla( 0, ncols )
 6201.       t$2113 = 8 * ( 7 + t$2110 + 8 * _zla( 0, ncols ) ) / 8
 6201.       t$2115 = t$2113 + 8 * _zla( 0, ncols )
 6200.       t$2116 = 8 * ( 7 + t$2113 + 8 * _zla( 0, ncols ) ) / 8
 6200.       t$2118 = t$2116 + 8 * _zla( 0, ncols )
 6199.       t$2119 = 8 * ( 7 + t$2116 + 8 * _zla( 0, ncols ) ) / 8
 6199.       t$2121 = t$2119 + 8 * _zla( 0, ncols )
 6198.       t$2122 = 8 * ( 7 + t$2119 + 8 * _zla( 0, ncols ) ) / 8
 6198.       t$2124 = t$2122 + 8 * _zla( 0, ncols )
 6217.       t$2125 = 8 * ( 7 + t$2122 + 8 * _zla( 0, ncols ) ) / 8
 6217.       t$2127 = t$2125 + 8 * _zla( 0, ncols )
 6208.       t$2128 = 8 * ( 7 + t$2125 + 8 * _zla( 0, ncols ) ) / 8
 6208.       t$2130 = t$2128 + 8 * _zla( 0, ncols )
 6213.       t$2131 = 8 * ( 7 + t$2128 + 8 * _zla( 0, ncols ) ) / 8
 6213.       t$2133 = t$2131 + 8 * _zla( 0, ncols )
 6212.       t$2134 = 8 * ( 7 + t$2131 + 8 * _zla( 0, ncols ) ) / 8
 6212.       t$2136 = t$2134 + 8 * _zla( 0, ncols )
 6215.       t$2137 = 8 * ( 7 + t$2134 + 8 * _zla( 0, ncols ) ) / 8
 6215.       t$2139 = t$2137 + 8 * _zla( 0, ncols )
 6210.       t$2140 = 8 * ( 7 + t$2137 + 8 * _zla( 0, ncols ) ) / 8
 6210.       t$2142 = t$2140 + 8 * _zla( 0, ncols )
 6187.       t$2143 = 8 * ( 7 + t$2140 + 8 * _zla( 0, ncols ) ) / 8
 6187.       t$2145 = t$2143 + 8 * _zla( 0, ncols )
 6206.       t$2146 = 8 * ( 7 + t$2143 + 8 * _zla( 0, ncols ) ) / 8
 6206.       t$2148 = t$2146 + 8 * _zla( 0, ncols )
 6207.       t$2149 = 8 * ( 7 + t$2146 + 8 * _zla( 0, ncols ) ) / 8
 6207.       t$2151 = t$2149 + 8 * _zla( 0, ncols )
 6209.       t$2152 = 8 * ( 7 + t$2149 + 8 * _zla( 0, ncols ) ) / 8
 6209.       t$2154 = t$2152 + 8 * _zla( 0, ncols )
 6214.       t$2155 = 8 * ( 7 + t$2152 + 8 * _zla( 0, ncols ) ) / 8
 6214.       t$2157 = t$2155 + 8 * _zla( 0, ncols )
 6216.       t$2158 = 8 * ( 7 + t$2155 + 8 * _zla( 0, ncols ) ) / 8
 6216.       t$2160 = t$2158 + 8 * _zla( 0, ncols )
 6204.       t$2161 = 8 * ( 7 + t$2158 + 8 * _zla( 0, ncols ) ) / 8
 6204.       t$2163 = t$2161 + 8 * _zla( 0, ncols )
 6211.       t$2164 = 8 * ( 7 + t$2161 + 8 * _zla( 0, ncols ) ) / 8
 6211.       t$2166 = t$2164 + 8 * _zla( 0, ncols )
 6205.       t$2167 = 8 * ( 7 + t$2164 + 8 * _zla( 0, ncols ) ) / 8
 6205.       t$2169 = t$2167 + 8 * _zla( 0, ncols )
 6083.       t$2068 = int( _alloc( t$2167 + 8 * _zla( 0, ncols ) ), 8 )
 6195.       t$2069 = t$2068
 6196.       t$2072 = t$2071 + t$2068
 6197.       t$2075 = t$2074 + t$2068
 6218.       t$2078 = t$2077 + t$2068
 6219.       t$2081 = t$2080 + t$2068
 6220.       t$2084 = t$2083 + t$2068
 6222.       t$2087 = t$2086 + t$2068
 6223.       t$2090 = t$2089 + t$2068
 6225.       t$2093 = t$2092 + t$2068
 6226.       t$2096 = t$2095 + t$2068
 6221.       t$2099 = t$2098 + t$2068
 6224.       t$2102 = t$2101 + t$2068
 6227.       t$2105 = t$2104 + t$2068
 6203.       t$2108 = t$2107 + t$2068
 6202.       t$2111 = t$2110 + t$2068
 6201.       t$2114 = t$2113 + t$2068
 6200.       t$2117 = t$2116 + t$2068
 6199.       t$2120 = t$2119 + t$2068
 6198.       t$2123 = t$2122 + t$2068
 6217.       t$2126 = t$2125 + t$2068
 6208.       t$2129 = t$2128 + t$2068
 6213.       t$2132 = t$2131 + t$2068
 6212.       t$2135 = t$2134 + t$2068
 6215.       t$2138 = t$2137 + t$2068
 6210.       t$2141 = t$2140 + t$2068
 6187.       t$2144 = t$2143 + t$2068
 6206.       t$2147 = t$2146 + t$2068
 6207.       t$2150 = t$2149 + t$2068
 6209.       t$2153 = t$2152 + t$2068
 6214.       t$2156 = t$2155 + t$2068
 6216.       t$2159 = t$2158 + t$2068
 6204.       t$2162 = t$2161 + t$2068
 6211.       t$2165 = t$2164 + t$2068
 6205.       t$2168 = t$2167 + t$2068
 6255.       $gbycp_S1 = ( 9.7551264184750155e-5 * 1.0/( delsig(1) * sigki(1) ) )
 6256.       $gbyhl_S2 = ( 3.8888888888888891e-8 * 1.0/delsig(1) )
 6257.       $gb100_S19 = ( 9.8000000000000004e-2 * 1.0/delsig(1) )
 6260.       $hscap_S12 = ( 5776680.0 * 1.0/dtc3x )
 6261.       $sl1kap_S6 = sigki(1)
 6263.       $dti_S13 = 1.0/dtc3x
 6265.       if ( ncols > 0 ) then
 6265.          $I_L6265_48 = 0
 6265. !dir$ ivdep
 6265.          do
 6266.             if ( mskant(1 + $I_L6265_48) == 1 ) then
 6267.                rnet(1 + $I_L6265_48) = -697.58000000000004 * slrad(1 + $I_L6265_48)
 6268.                rho(1 + $I_L6265_48) = ( gps(1 + $I_L6265_48) * 1.0/( 2.8705000000000003 * gt(1 + $I_L6265_48) ) )
 6269.                ah(1 + $I_L6265_48) = ( $gbycp_S1 * 1.0/gps(1 + $I_L6265_48) )
 6270.                al(1 + $I_L6265_48) = ( $gbyhl_S2 * 1.0/gps(1 + $I_L6265_48) )
 6271.                dqg0(1 + $I_L6265_48) = ( 6.22e-1 * 1.0/( gps(1 + $I_L6265_48) * tsurf(1 + $I_L6265_48) * tsurf(1 + $I_L6265_48) ) * _expn( 30.253530000000001 + -( 5418.0 * 1.0/tsurf(1 + $I_L6265_48) ) ) )
 6273.                gtsav(1 + $I_L6265_48) = gt(1 + $I_L6265_48)
 6274.                gqsav(1 + $I_L6265_48) = gq(1 + $I_L6265_48)
 6275.                tssav(1 + $I_L6265_48) = tsurf(1 + $I_L6265_48)
 6276.                tmsav(1 + $I_L6265_48) = tmtx(1 + $I_L6265_48, 1, 3)
 6277.                qmsav(1 + $I_L6265_48) = qmtx(1 + $I_L6265_48, 1, 3)
 6277.             endif
 6279.             $I_L6265_48 = 1 + $I_L6265_48
 6278.             if ( $I_L6265_48 >= ncols ) exit
 6278.          enddo
 6281.          $I_L6281_64 = 0
 6281. !dir$ ivdep
 6281.          do
 6281.             c0(1 + $I_L6281_64) = 0.0
 6282.             cond(1 + $I_L6281_64) = 0.0
 6283.             stor(1 + $I_L6281_64) = 0.0
 6281.             $I_L6281_64 = 1 + $I_L6281_64
 6281.             if ( $I_L6281_64 >= ncols ) exit
 6281.          enddo
 6281.       endif
 6285.       $ncount_S3 = 0
 6285.       do
 6288.          t$1078 = ncols
 6288.          t$2055 = _zla( 0, ncols )
 6288.          t$2058 = 8 * _zla( 0, ncols )
 6287.          $ncount_S3 = 1 + $ncount_S3
 6288.          t$2056 = int( _alloc( 8 * _zla( 0, ncols ) ), 8 )
 6288.          t$2057 = t$2056
 6288.          if ( ncols > 0 ) then
 6288.             $I_L6288_50 = 0
 6288. !dir$ ivdep
 6288.             do
 6288.                if ( mskant(1 + $I_L6288_50) == 1 ) then
 6288.                   z0(1 + $I_L6288_50) = 1.0e-3
 6288.                   if ( tsea(1 + $I_L6288_50) >= 0.0 ) then
 6288.                      goto 10
 6288.                   else if ( abs( tsea(1 + $I_L6288_50) ) >= 271.17000000000002 ) then
 6288.                      z0(1 + $I_L6288_50) = 1.0e-2 * zorl(1 + $I_L6288_50)
 6288.                   else
 6288.    10                continue
 6288.                      if ( tsea(1 + $I_L6288_50) < 0.0 ) then
 6288.                         if ( abs( tsea(1 + $I_L6288_50) ) < 271.17000000000002 ) then
 6288.                            z0(1 + $I_L6288_50) = 1.0e-3
 6288.                         endif
 6288.                      endif
 6288.                   endif
 6288.                   sincli(1 + $I_L6288_50) = 1.0/sinclt(1 + $I_L6288_50)
 6288.                endif
 6288.                $I_L6288_50 = 1 + $I_L6288_50
 6288.                if ( $I_L6288_50 >= ncols ) exit
 6288.             enddo
 6288.             $I_L6288_52 = 0
 6288. !dir$ ivdep
 6288.             do
 6288.                if ( mskant(1 + $I_L6288_52) == 1 ) then
 6288.                   if ( tsea(1 + $I_L6288_52) <= 0.0 ) then
 6288.                      $speedm_WR0_R0 = sincli(1 + $I_L6288_52) * _sqrt( gv(1 + $I_L6288_52) * gv(1 + $I_L6288_52) + gu(1 + $I_L6288_52) * gu(1 + $I_L6288_52) )
 6288.                      $dzm_WR0_R1 = rbyg * gt(1 + $I_L6288_52)
 6288.                      $cuni_WR0_R2 = -1.5629999999999999 + 2.1895249999999997 * log( ( $dzm_WR0_R1 * 1.0/z0(1 + $I_L6288_52) ) )
 6288.                      $thm_WR0_R4 = $sl1kap_S6 * gt(1 + $I_L6288_52)
 6288.                      $tha_WR0_R5 = tsurf(1 + $I_L6288_52)
 6288.                      $speedm_WR0_R0 = max( 2.0, $speedm_WR0_R0 )
 6288.                      speedm(1 + $I_L6288_52) = $speedm_WR0_R0
 6288.                      $rib_WR0_R7 = min( 1.25, max( -1.25, ( -( 9.8000000000000007 * $dzm_WR0_R1 * 1.0/( $speedm_WR0_R0 * $speedm_WR0_R0 * $thm_WR0_R4 ) * ( $tha_WR0_R5 + -$thm_WR0_R4 ) ) ) ) )
 6288.                      if ( ( min( 1.25, max( -1.25, ( -( 9.8000000000000007 * $dzm_WR0_R1 * 1.0/( $speedm_WR0_R0 * $speedm_WR0_R0 * $thm_WR0_R4 ) * ( $tha_WR0_R5 + -$thm_WR0_R4 ) ) ) ) ) ) < 0.0 ) then
 6288.                         $f_S7 = log( 1.0 + -1.2743 * $rib_WR0_R7 )
 6288.                         $cui_WR0_R8 = $cuni_WR0_R2 * _expn( 1.2270000000000001 + -_sqrt( 1.5055290000000001 + 1.2642 * $f_S7 ) )
 6288.                         $g_S8 = log( 1.0 + -3.4805000000000001 * $rib_WR0_R7 )
 6288.                         cti(1 + $I_L6288_52) = $cuni_WR0_R2 * _expn( 1.3462000000000001 + -_sqrt( 1.8122544400000002 + 1.8380000000000001 * $g_S8 ) )
 6288.                      else
 6288.                         $f_S9 = log( 1.0 + 10.815 * $rib_WR0_R7 )
 6288.                         $cui_WR0_R8 = $cuni_WR0_R2 * _expn( -1.8899999999999999 + _sqrt( 3.5720999999999998 + 5.0518999999999998 * $f_S9 ) )
 6288.                         cti(1 + $I_L6288_52) = $cui_WR0_R8
 6288.                      endif
 6288.                      $ct_WR0_R10 = 1.0/cti(1 + $I_L6288_52)
 6288.                      rmi(1 + $I_L6288_52) = 1.0/$cui_WR0_R8 * ( $speedm_WR0_R0 * 1.0/$cui_WR0_R8 )
 6288.                      rhi(1 + $I_L6288_52) = $ct_WR0_R10 * ( $speedm_WR0_R0 * 1.0/$cui_WR0_R8 )
 6288.                   endif
 6288.                endif
 6288.                $I_L6288_52 = 1 + $I_L6288_52
 6288.                if ( $I_L6288_52 >= ncols ) exit
 6288.             enddo
 6288.          endif
 6288.          _free( t$2056 )
 6292.          if ( ncols > 0 ) then
 6292.             $I_L6292_54 = 0
 6292. !dir$ ivdep
 6292.             do
 6293.                if ( mskant(1 + $I_L6292_54) == 1 ) then
 6294.                   gt(1 + $I_L6292_54) = gtsav(1 + $I_L6292_54)
 6295.                   gq(1 + $I_L6292_54) = gqsav(1 + $I_L6292_54)
 6296.                   tsurf(1 + $I_L6292_54) = tssav(1 + $I_L6292_54)
 6297.                   tmtx(1 + $I_L6292_54, 1, 3) = tmsav(1 + $I_L6292_54)
 6298.                   qmtx(1 + $I_L6292_54, 1, 3) = qmsav(1 + $I_L6292_54)
 6298.                endif
 6300.                $I_L6292_54 = 1 + $I_L6292_54
 6299.                if ( $I_L6292_54 >= ncols ) exit
 6299.             enddo
 6301.             $I_L6301_56 = 0
 6301. !dir$ ivdep
 6301.             do
 6302.                if ( mskant(1 + $I_L6301_56) == 1 ) then
 6304.                   if ( tsea(1 + $I_L6301_56) >= 0.0 ) then
 6304.                      goto 20
 6304.                   else if ( abs( tsea(1 + $I_L6301_56) ) < 271.17000000000002 ) then
 6305.                      $b00_WR0_R12 = 1.0149999999999999 + $hscap_S12 + 2.2679999999999999e-7 * tsurf(1 + $I_L6301_56) * tsurf(1 + $I_L6301_56) * tsurf(1 + $I_L6301_56) + 2520000.0 * rhi(1 + $I_L6301_56) * dqg0(1 + $I_L6301_56) * rho(1 + $I_L6301_56) + 1004.6 * rho(1 + $I_L6301_56) * rhi(1 + $I_L6301_56)
 6308.                      $b03_WR0_R13 = -1004.6 * $sl1kap_S6 * rho(1 + $I_L6301_56) * rhi(1 + $I_L6301_56)
 6309.                      $b04_WR0_R14 = -2520000.0 * rho(1 + $I_L6301_56) * rhi(1 + $I_L6301_56)
 6312.                      $c0_WR0_R15 = rnet(1 + $I_L6301_56) + -1004.6 * rhi(1 + $I_L6301_56) * rho(1 + $I_L6301_56) * ( tsurf(1 + $I_L6301_56) + -( $sl1kap_S6 * gt(1 + $I_L6301_56) ) ) + -5.6699999999999998e-8 * ( tsurf(1 + $I_L6301_56) * tsurf(1 + $I_L6301_56) ) * ( tsurf(1 + $I_L6301_56) * tsurf(1 + $I_L6301_56) ) + -2520000.0 * rhi(1 + $I_L6301_56) * rho(1 + $I_L6301_56) * ( qsurf(1 + $I_L6301_56) + -gq(1 + $I_L6301_56) ) + -1.0149999999999999 * ( -271.16000000000003 + tsurf(1 + $I_L6301_56) )
 6315.                      $b30_WR0_R16 = -1004.6 * rhi(1 + $I_L6301_56) * rho(1 + $I_L6301_56) * ah(1 + $I_L6301_56)
 6316.                      $b33_WR0_R17 = -( $sl1kap_S6 * $b30_WR0_R16 ) + $dti_S13 * tmtx(1 + $I_L6301_56, 1, 2)
 6317.                      $c3_WR0_R18 = tmtx(1 + $I_L6301_56, 1, 3) + -( $b30_WR0_R16 * ( tsurf(1 + $I_L6301_56) + -( $sl1kap_S6 * gt(1 + $I_L6301_56) ) ) )
 6318.                      $b40_WR0_R19 = -2520000.0 * rhi(1 + $I_L6301_56) * rho(1 + $I_L6301_56) * dqg0(1 + $I_L6301_56) * al(1 + $I_L6301_56)
 6319.                      $b44_WR0_R20 = 2520000.0 * rhi(1 + $I_L6301_56) * rho(1 + $I_L6301_56) * al(1 + $I_L6301_56) + $dti_S13 * qmtx(1 + $I_L6301_56, 1, 2)
 6320.                      $c4_WR0_R21 = qmtx(1 + $I_L6301_56, 1, 3) + 2520000.0 * rhi(1 + $I_L6301_56) * rho(1 + $I_L6301_56) * al(1 + $I_L6301_56) * ( qsurf(1 + $I_L6301_56) + -gq(1 + $I_L6301_56) )
 6322.                      $b00_WR0_R12 = $b00_WR0_R12 + -( $b03_WR0_R13 * $b30_WR0_R16 * 1.0/$b33_WR0_R17 ) + -( $b04_WR0_R14 * $b40_WR0_R19 * 1.0/$b44_WR0_R20 )
 6324.                      $c0_WR0_R15 = ( 1.0/$b00_WR0_R12 * ( $c0_WR0_R15 + -( $b03_WR0_R13 * $c3_WR0_R18 * 1.0/$b33_WR0_R17 ) + -( $b04_WR0_R14 * $c4_WR0_R21 * 1.0/$b44_WR0_R20 ) ) )
 6324.                      c0(1 + $I_L6301_56) = $c0_WR0_R15
 6326.                      tmtx(1 + $I_L6301_56, 1, 3) = ( 1.0/( dtc3x * $b33_WR0_R17 ) * ( $c3_WR0_R18 + -( $c0_WR0_R15 * $b30_WR0_R16 ) ) )
 6327.                      qmtx(1 + $I_L6301_56, 1, 3) = ( 1.0/( dtc3x * $b44_WR0_R20 ) * ( $c4_WR0_R21 + -( $c0_WR0_R15 * $b40_WR0_R19 ) ) )
 6325.                      tsurf(1 + $I_L6301_56) = $c0_WR0_R15 + tsurf(1 + $I_L6301_56)
 6325.                   else
 6325.    20                continue
 6329.                      if ( tsea(1 + $I_L6301_56) < 0.0 ) then
 6329.                         if ( abs( tsea(1 + $I_L6301_56) ) > 271.17000000000002 ) then
 6330.                            zorl(1 + $I_L6301_56) = 3.2653061224489793e-1 * rhi(1 + $I_L6301_56) * speedm(1 + $I_L6301_56)
 6331.                            $sens_WR0_R22 = 1004.6 * rhi(1 + $I_L6301_56) * rho(1 + $I_L6301_56) * ( tsurf(1 + $I_L6301_56) + -( $sl1kap_S6 * gt(1 + $I_L6301_56) ) )
 6331.                            sens(1 + $I_L6301_56) = $sens_WR0_R22
 6332.                            $evap_WR0_R23 = 2520000.0 * rhi(1 + $I_L6301_56) * rho(1 + $I_L6301_56) * ( qsurf(1 + $I_L6301_56) + -gq(1 + $I_L6301_56) )
 6332.                            evap(1 + $I_L6301_56) = $evap_WR0_R23
 6335.                            qmtx(1 + $I_L6301_56, 1, 3) = ( ( qmtx(1 + $I_L6301_56, 1, 3) + $evap_WR0_R23 * al(1 + $I_L6301_56) ) * 1.0/( qmtx(1 + $I_L6301_56, 1, 2) + 2520000.0 * dtc3x * rhi(1 + $I_L6301_56) * rho(1 + $I_L6301_56) * al(1 + $I_L6301_56) ) )
 6333.                            tmtx(1 + $I_L6301_56, 1, 3) = ( ( tmtx(1 + $I_L6301_56, 1, 3) + $sens_WR0_R22 * ah(1 + $I_L6301_56) ) * 1.0/( tmtx(1 + $I_L6301_56, 1, 2) + 1004.6 * dtc3x * rhi(1 + $I_L6301_56) * rho(1 + $I_L6301_56) * ah(1 + $I_L6301_56) ) )
 6333.                         endif
 6333.                      endif
 6333.                   endif
 6333.                endif
 6339.                $I_L6301_56 = 1 + $I_L6301_56
 6338.                if ( $I_L6301_56 >= ncols ) exit
 6338.             enddo
 6341.             $I_L6341_58 = 0
 6341. !dir$ ivdep
 6341.             do
 6342.                if ( mskant(1 + $I_L6341_58) == 1 ) then
 6344.                   gq(1 + $I_L6341_58) = gq(1 + $I_L6341_58) + dtc3x * qmtx(1 + $I_L6341_58, 1, 3)
 6343.                   gt(1 + $I_L6341_58) = gt(1 + $I_L6341_58) + dtc3x * tmtx(1 + $I_L6341_58, 1, 3)
 6343.                endif
 6346.                $I_L6341_58 = 1 + $I_L6341_58
 6345.                if ( $I_L6341_58 >= ncols ) exit
 6345.             enddo
 6345.          endif
 6346.          if ( $ncount_S3 /= 1 ) exit
 6346.       enddo
 6350.       if ( ncols > 0 ) then
 6350.          $I_L6350_60 = 0
 6350. !dir$ ivdep
 6350.          do
 6351.             if ( mskant(1 + $I_L6350_60) == 1 ) then
 6352.                $sens_WR0_R25 = 1004.6 * rhi(1 + $I_L6350_60) * rho(1 + $I_L6350_60) * ( tsurf(1 + $I_L6350_60) + -( $sl1kap_S6 * gt(1 + $I_L6350_60) ) )
 6352.                sens(1 + $I_L6350_60) = $sens_WR0_R25
 6353.                $evap_WR0_R26 = 2520000.0 * rhi(1 + $I_L6350_60) * rho(1 + $I_L6350_60) * ( qsurf(1 + $I_L6350_60) + -gq(1 + $I_L6350_60) )
 6353.                evap(1 + $I_L6350_60) = $evap_WR0_R26
 6355.                $dtmdt_S16 = ( ( $sens_WR0_R25 * ah(1 + $I_L6350_60) ) * 1.0/( tmtx(1 + $I_L6350_60, 1, 2) + 1004.6 * dtc3x * rhi(1 + $I_L6350_60) * rho(1 + $I_L6350_60) * ah(1 + $I_L6350_60) ) )
 6356.                $dqmdt_S17 = ( ( $evap_WR0_R26 * al(1 + $I_L6350_60) ) * 1.0/( qmtx(1 + $I_L6350_60, 1, 2) + 2520000.0 * dtc3x * rhi(1 + $I_L6350_60) * rho(1 + $I_L6350_60) * al(1 + $I_L6350_60) ) )
 6359.                tsfc(1 + $I_L6350_60) = gt(1 + $I_L6350_60) + ( dtc3x * $dtmdt_S16 )
 6360.                qsfc(1 + $I_L6350_60) = gq(1 + $I_L6350_60) + ( dtc3x * $dqmdt_S17 )
 6362.                gt(1 + $I_L6350_60) = gtsav(1 + $I_L6350_60)
 6363.                gq(1 + $I_L6350_60) = gqsav(1 + $I_L6350_60)
 6364.                if ( tsea(1 + $I_L6350_60) < 0.0 ) then
 6364.                   if ( abs( tsea(1 + $I_L6350_60) ) < 271.17000000000002 ) then
 6365.                      cond(1 + $I_L6350_60) = 1.0149999999999999 * ( -271.16000000000003 + tsurf(1 + $I_L6350_60) )
 6366.                      stor(1 + $I_L6350_60) = $hscap_S12 * c0(1 + $I_L6350_60)
 6367.                      $tsurf_WR0_R24 = min( 271.16000000000003, tsurf(1 + $I_L6350_60) )
 6367.                      tsurf(1 + $I_L6350_60) = $tsurf_WR0_R24
 6368.                      tsea(1 + $I_L6350_60) = -$tsurf_WR0_R24
 6368.                   endif
 6368.                endif
 6368.             endif
 6371.             $I_L6350_60 = 1 + $I_L6350_60
 6370.             if ( $I_L6350_60 >= ncols ) exit
 6370.          enddo
 6373.          $I_L6373_62 = 0
 6373. !dir$ ivdep
 6373.          do
 6374.             if ( mskant(1 + $I_L6373_62) == 1 ) then
 6375.                $umom_WR0_R27 = rmi(1 + $I_L6373_62) * gu(1 + $I_L6373_62) * rho(1 + $I_L6373_62)
 6376.                $vmom_WR0_R28 = rmi(1 + $I_L6373_62) * rho(1 + $I_L6373_62) * gv(1 + $I_L6373_62)
 6377.                $am_WR0_R29 = ( $gb100_S19 * 1.0/gps(1 + $I_L6373_62) )
 6378.                umtx(1 + $I_L6373_62, 1, 3) = ( ( umtx(1 + $I_L6373_62, 1, 3) + -( $umom_WR0_R27 * $am_WR0_R29 ) ) * 1.0/( umtx(1 + $I_L6373_62, 1, 2) + dtc3x * rmi(1 + $I_L6373_62) * $am_WR0_R29 * rho(1 + $I_L6373_62) ) )
 6380.                umtx(1 + $I_L6373_62, 1, 4) = ( 1.0/( umtx(1 + $I_L6373_62, 1, 2) + dtc3x * rmi(1 + $I_L6373_62) * $am_WR0_R29 * rho(1 + $I_L6373_62) ) * ( umtx(1 + $I_L6373_62, 1, 4) + -( $vmom_WR0_R28 * $am_WR0_R29 ) ) )
 6387.                $vmom_WR0_R28 = ( $vmom_WR0_R28 * 1.0/sinclt(1 + $I_L6373_62) )
 6387.                vmom(1 + $I_L6373_62) = $vmom_WR0_R28
 6386.                $umom_WR0_R27 = ( $umom_WR0_R27 * 1.0/sinclt(1 + $I_L6373_62) )
 6386.                umom(1 + $I_L6373_62) = $umom_WR0_R27
 6388.                ustarm(1 + $I_L6373_62) = _sqrt( $umom_WR0_R27 * $umom_WR0_R27 + $vmom_WR0_R28 * $vmom_WR0_R28 )
 6389.                if ( _sqrt( $umom_WR0_R27 * $umom_WR0_R27 + $vmom_WR0_R28 * $vmom_WR0_R28 ) == 0.0 ) then
 6389.                   ustarm(1 + $I_L6373_62) = 7.0000000000000001e-3
 6389.                endif
 6390.                $um_WR0_R31 = ( gu(1 + $I_L6373_62) * 1.0/sinclt(1 + $I_L6373_62) )
 6391.                $vm_WR0_R32 = ( gv(1 + $I_L6373_62) * 1.0/sinclt(1 + $I_L6373_62) )
 6393.                speedm(1 + $I_L6373_62) = ( max( 2.0, _sqrt( $um_WR0_R31 * $um_WR0_R31 + $vm_WR0_R32 * $vm_WR0_R32 ) ) )
 6393.             endif
 6395.             $I_L6373_62 = 1 + $I_L6373_62
 6394.             if ( $I_L6373_62 >= ncols ) exit
 6394.          enddo
 6394.       endif
 6083.       _free( t$2068 )
 6396.       return
 6396.       end
 6396.       
 6399.       
 6399.       subroutine sextrp( td, tg, tc, w, capac, td0, tg0, tc0, w0, capac0, tdm, tgm, tcm, wm, capacm, istrt, ncols, nmax, epsflt, intg, latitu, tm0, qm0, tm, qm, tmm, qmm )
 6399.       t$1169 = ncols
 6411.       t$2170 = _zla( 0, ncols )
 6399.       t$2171 = _zla( 0, ncols )
 6399.       t$2172 = 3 * _zla( 0, ncols )
 6399.       t$2173 = 2 * _zla( 0, ncols )
 6432.       if ( intg == 2 ) then
 6433.          if ( istrt <= 0 ) then
 6456.             if ( nmax > 0 ) then
 6456.                $I_L6456_40 = 0
 6456. !dir$ ivdep
 6456.                do
 6457.                   td0(1 + $I_L6456_40) = td0(1 + $I_L6456_40) + epsflt * ( tdm(1 + $I_L6456_40) + td(1 + $I_L6456_40) + -2.0 * td0(1 + $I_L6456_40) )
 6458.                   tg0(1 + $I_L6456_40) = tg0(1 + $I_L6456_40) + epsflt * ( tgm(1 + $I_L6456_40) + tg(1 + $I_L6456_40) + -2.0 * tg0(1 + $I_L6456_40) )
 6459.                   tc0(1 + $I_L6456_40) = tc0(1 + $I_L6456_40) + epsflt * ( tcm(1 + $I_L6456_40) + tc(1 + $I_L6456_40) + -2.0 * tc0(1 + $I_L6456_40) )
 6461.                   tm0(1 + $I_L6456_40) = tm0(1 + $I_L6456_40) + epsflt * ( tmm(1 + $I_L6456_40) + tm(1 + $I_L6456_40) + -2.0 * tm0(1 + $I_L6456_40) )
 6462.                   qm0(1 + $I_L6456_40) = qm0(1 + $I_L6456_40) + epsflt * ( qmm(1 + $I_L6456_40) + qm(1 + $I_L6456_40) + -2.0 * qm0(1 + $I_L6456_40) )
 6464.                   if ( w0(1 + $I_L6456_40, 1) > 0.0 ) then
 6465.                      w0(1 + $I_L6456_40, 1) = w0(1 + $I_L6456_40, 1) + epsflt * ( wm(1 + $I_L6456_40, 1) + w(1 + $I_L6456_40, 1) + -2.0 * w0(1 + $I_L6456_40, 1) )
 6465.                   endif
 6467.                   if ( w0(1 + $I_L6456_40, 2) > 0.0 ) then
 6468.                      w0(1 + $I_L6456_40, 2) = w0(1 + $I_L6456_40, 2) + epsflt * ( wm(1 + $I_L6456_40, 2) + w(1 + $I_L6456_40, 2) + -2.0 * w0(1 + $I_L6456_40, 2) )
 6468.                   endif
 6470.                   if ( w0(1 + $I_L6456_40, 3) > 0.0 ) then
 6471.                      w0(1 + $I_L6456_40, 3) = w0(1 + $I_L6456_40, 3) + epsflt * ( wm(1 + $I_L6456_40, 3) + w(1 + $I_L6456_40, 3) + -2.0 * w0(1 + $I_L6456_40, 3) )
 6471.                   endif
 6473.                   if ( capac0(1 + $I_L6456_40, 1) > 0.0 ) then
 6474.                      capac0(1 + $I_L6456_40, 1) = capac0(1 + $I_L6456_40, 1) + epsflt * ( capacm(1 + $I_L6456_40, 1) + capac(1 + $I_L6456_40, 1) + -2.0 * capac0(1 + $I_L6456_40, 1) )
 6474.                   endif
 6477.                   if ( capac0(1 + $I_L6456_40, 2) > 0.0 ) then
 6478.                      capac0(1 + $I_L6456_40, 2) = capac0(1 + $I_L6456_40, 2) + epsflt * ( capacm(1 + $I_L6456_40, 2) + capac(1 + $I_L6456_40, 2) + -2.0 * capac0(1 + $I_L6456_40, 2) )
 6478.                   endif
 6481.                   $I_L6456_40 = 1 + $I_L6456_40
 6480.                   if ( $I_L6456_40 >= nmax ) exit
 6480.                enddo
 6482.                $I_L6482_42 = 0
 6482. !dir$ ivdep
 6482.                do
 6483.                   tdm(1 + $I_L6482_42) = td0(1 + $I_L6482_42)
 6484.                   $tgm_WR0_R0 = tg0(1 + $I_L6482_42)
 6484.                   tgm(1 + $I_L6482_42) = $tgm_WR0_R0
 6485.                   tcm(1 + $I_L6482_42) = tc0(1 + $I_L6482_42)
 6486.                   tmm(1 + $I_L6482_42) = tm0(1 + $I_L6482_42)
 6487.                   qmm(1 + $I_L6482_42) = qm0(1 + $I_L6482_42)
 6488.                   wm(1 + $I_L6482_42, 1) = w0(1 + $I_L6482_42, 1)
 6489.                   wm(1 + $I_L6482_42, 2) = w0(1 + $I_L6482_42, 2)
 6490.                   wm(1 + $I_L6482_42, 3) = w0(1 + $I_L6482_42, 3)
 6491.                   capacm(1 + $I_L6482_42, 1) = capac0(1 + $I_L6482_42, 1)
 6492.                   $capacm_WR0_R1 = capac0(1 + $I_L6482_42, 2)
 6492.                   capacm(1 + $I_L6482_42, 2) = $capacm_WR0_R1
 6493.                   if ( $capacm_WR0_R1 > 0.0 ) then
 6493.                      $tgm_WR0_R0 = min( 273.06, $tgm_WR0_R0 )
 6493.                      tgm(1 + $I_L6482_42) = $tgm_WR0_R0
 6493.                   endif
 6494.                   $I_L6482_42 = 1 + $I_L6482_42
 6493.                   if ( $I_L6482_42 >= nmax ) exit
 6493.                enddo
 6493.             endif
 6495.             if ( nmax > 0 ) then
 6495.                $I_L6495_44 = 0
 6495.                do
 6496.                   td0(1 + $I_L6495_44) = td(1 + $I_L6495_44)
 6497.                   tg0(1 + $I_L6495_44) = tg(1 + $I_L6495_44)
 6498.                   tc0(1 + $I_L6495_44) = tc(1 + $I_L6495_44)
 6499.                   tm0(1 + $I_L6495_44) = tm(1 + $I_L6495_44)
 6500.                   qm0(1 + $I_L6495_44) = qm(1 + $I_L6495_44)
 6501.                   w0(1 + $I_L6495_44, 1) = w(1 + $I_L6495_44, 1)
 6502.                   w0(1 + $I_L6495_44, 2) = w(1 + $I_L6495_44, 2)
 6503.                   w0(1 + $I_L6495_44, 3) = w(1 + $I_L6495_44, 3)
 6504.                   capac0(1 + $I_L6495_44, 1) = capac(1 + $I_L6495_44, 1)
 6505.                   capac0(1 + $I_L6495_44, 2) = capac(1 + $I_L6495_44, 2)
 6506.                   if ( capac0(1 + $I_L6495_44, 2) > 0.0 ) then
 6506.                      if ( tg0(1 + $I_L6495_44) > 273.16000000000003 ) then
 6513.                         $Unit_temp_O2 = nfprt
 6513.                         $_IOitem_P2(0) = 0
 6513.                         $_IOitem_P2(1) = latitu
 6513.                         $_IOitem_P2(2) = ( 1 + $I_L6495_44 )
 6513.                         $_IOitem_P3(0) = capac0(1 + $I_L6495_44, 2)
 6513.                         $_IOitem_P3(1) = tg0(1 + $I_L6495_44)
 6513.                         _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, t$1191,  _substr(t$1190,1,91), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P2(:( 0, 2, 1 )), 0x2000200000000L ), _iotype( (&)$_IOitem_P3(:( 0, 1, 1 )), 0x804060300000000L ) ) )
 6513.                      endif
 6513.                   endif
 6515.                   $I_L6495_44 = 1 + $I_L6495_44
 6514.                   if ( $I_L6495_44 >= nmax ) exit
 6514.                enddo
 6514.             endif
 6434.          else if ( nmax > 0 ) then
 6434.             $I_L6434_46 = 0
 6434.             do
 6435.                tm0(1 + $I_L6434_46) = tm(1 + $I_L6434_46)
 6436.                qm0(1 + $I_L6434_46) = qm(1 + $I_L6434_46)
 6437.                td0(1 + $I_L6434_46) = td(1 + $I_L6434_46)
 6438.                tg0(1 + $I_L6434_46) = tg(1 + $I_L6434_46)
 6439.                tc0(1 + $I_L6434_46) = tc(1 + $I_L6434_46)
 6440.                w0(1 + $I_L6434_46, 1) = w(1 + $I_L6434_46, 1)
 6441.                w0(1 + $I_L6434_46, 2) = w(1 + $I_L6434_46, 2)
 6442.                w0(1 + $I_L6434_46, 3) = w(1 + $I_L6434_46, 3)
 6443.                capac0(1 + $I_L6434_46, 1) = capac(1 + $I_L6434_46, 1)
 6444.                capac0(1 + $I_L6434_46, 2) = capac(1 + $I_L6434_46, 2)
 6445.                if ( capac0(1 + $I_L6434_46, 2) > 0.0 ) then
 6445.                   if ( tg0(1 + $I_L6434_46) > 273.16000000000003 ) then
 6452.                      $Unit_temp_O0 = nfprt
 6452.                      $_IOitem_P0(0) = 0
 6452.                      $_IOitem_P0(1) = latitu
 6452.                      $_IOitem_P0(2) = ( 1 + $I_L6434_46 )
 6452.                      $_IOitem_P1(0) = capac0(1 + $I_L6434_46, 2)
 6452.                      $_IOitem_P1(1) = tg0(1 + $I_L6434_46)
 6452.                      _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$1191,  _substr(t$1190,1,91), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P0(:( 0, 2, 1 )), 0x2000200000000L ), _iotype( (&)$_IOitem_P1(:( 0, 1, 1 )), 0x804060300000000L ) ) )
 6452.                   endif
 6452.                endif
 6454.                $I_L6434_46 = 1 + $I_L6434_46
 6453.                if ( $I_L6434_46 >= nmax ) exit
 6453.             enddo
 6453.          endif
 6517.       else if ( nmax > 0 ) then
 6518.          $I_L6518_36 = 0
 6518.          do
 6519.             tdm(1 + $I_L6518_36) = td(1 + $I_L6518_36)
 6520.             tgm(1 + $I_L6518_36) = tg(1 + $I_L6518_36)
 6521.             tcm(1 + $I_L6518_36) = tc(1 + $I_L6518_36)
 6522.             tmm(1 + $I_L6518_36) = tm(1 + $I_L6518_36)
 6523.             qmm(1 + $I_L6518_36) = qm(1 + $I_L6518_36)
 6524.             wm(1 + $I_L6518_36, 1) = w(1 + $I_L6518_36, 1)
 6525.             wm(1 + $I_L6518_36, 2) = w(1 + $I_L6518_36, 2)
 6526.             wm(1 + $I_L6518_36, 3) = w(1 + $I_L6518_36, 3)
 6527.             capacm(1 + $I_L6518_36, 1) = capac(1 + $I_L6518_36, 1)
 6528.             capacm(1 + $I_L6518_36, 2) = capac(1 + $I_L6518_36, 2)
 6529.             if ( capacm(1 + $I_L6518_36, 2) > 0.0 ) then
 6529.                if ( tgm(1 + $I_L6518_36) > 273.16000000000003 ) then
 6536.                   $Unit_temp_O4 = nfprt
 6536.                   $_IOitem_P4(0) = 0
 6536.                   $_IOitem_P4(1) = latitu
 6536.                   $_IOitem_P4(2) = ( 1 + $I_L6518_36 )
 6536.                   $_IOitem_P5(0) = capacm(1 + $I_L6518_36, 2)
 6536.                   $_IOitem_P5(1) = tgm(1 + $I_L6518_36)
 6536.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, t$1193,  _substr(t$1192,1,91), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P4(:( 0, 2, 1 )), 0x2000200000000L ), _iotype( (&)$_IOitem_P5(:( 0, 1, 1 )), 0x804060300000000L ) ) )
 6536.                endif
 6536.             endif
 6538.             $I_L6518_36 = 1 + $I_L6518_36
 6537.             if ( $I_L6518_36 >= nmax ) exit
 6537.          enddo
 6539.          $I_L6539_38 = 0
 6539. !dir$ ivdep
 6539.          do
 6540.             td0(1 + $I_L6539_38) = td(1 + $I_L6539_38)
 6541.             tg0(1 + $I_L6539_38) = tg(1 + $I_L6539_38)
 6542.             tc0(1 + $I_L6539_38) = tc(1 + $I_L6539_38)
 6543.             tm0(1 + $I_L6539_38) = tm(1 + $I_L6539_38)
 6544.             qm0(1 + $I_L6539_38) = qm(1 + $I_L6539_38)
 6545.             w0(1 + $I_L6539_38, 1) = w(1 + $I_L6539_38, 1)
 6546.             w0(1 + $I_L6539_38, 2) = w(1 + $I_L6539_38, 2)
 6547.             w0(1 + $I_L6539_38, 3) = w(1 + $I_L6539_38, 3)
 6548.             capac0(1 + $I_L6539_38, 1) = capac(1 + $I_L6539_38, 1)
 6549.             capac0(1 + $I_L6539_38, 2) = capac(1 + $I_L6539_38, 2)
 6550.             $I_L6539_38 = 1 + $I_L6539_38
 6539.             if ( $I_L6539_38 >= nmax ) exit
 6539.          enddo
 6539.       endif
 6556.       return
 6556.       end
 6556.       
 6558.       
 6558.       subroutine albedo( ncols, month2, nmax, itype, tc, tg, tm, qm, td, capac, w, tcm, tgm, tmm, qmm, tdm, capacm, wm, satcap, extk, radfac, closs, gloss, thermk, p1f, p2f, zlwup, salb, tgeff, cosz, nsx, latco, imask, avisb, avisd, anirb, anird, tsea, zenith )
 6558.       t$1194 = ncols
 6571.       t$2174 = _zla( 0, ncols )
 6558.       t$2175 = _zla( 0, ncols )
 6558.       t$2176 = 2 * _zla( 0, ncols )
 6558.       t$2177 = 3 * _zla( 0, ncols )
 6558.       t$2178 = 2 * _zla( 0, ncols )
 6558.       t$2179 = 2 * _zla( 0, ncols )
 6558.       t$2180 = 6 * _zla( 0, ncols )
 6558.       t$2181 = 12 * _zla( 0, ncols )
 6558.       t$2182 = 2 * _zla( 0, ncols )
 6558.       t$2183 = 4 * _zla( 0, ncols )
 6613.       if ( nmax > 0 ) then
 6615.          $I_L6615_12 = 0
 6615. !dir$ ivdep
 6615.          do
 6616.             tm(1 + $I_L6615_12) = tmm(1 + $I_L6615_12)
 6617.             qm(1 + $I_L6615_12) = qmm(1 + $I_L6615_12)
 6618.             td(1 + $I_L6615_12) = tdm(1 + $I_L6615_12)
 6619.             tg(1 + $I_L6615_12) = tgm(1 + $I_L6615_12)
 6620.             tc(1 + $I_L6615_12) = tcm(1 + $I_L6615_12)
 6621.             capac(1 + $I_L6615_12, 1) = capacm(1 + $I_L6615_12, 1)
 6622.             capac(1 + $I_L6615_12, 2) = capacm(1 + $I_L6615_12, 2)
 6623.             w(1 + $I_L6615_12, 1) = wm(1 + $I_L6615_12, 1)
 6624.             w(1 + $I_L6615_12, 2) = wm(1 + $I_L6615_12, 2)
 6625.             w(1 + $I_L6615_12, 3) = wm(1 + $I_L6615_12, 3)
 6626.             $I_L6615_12 = 1 + $I_L6615_12
 6615.             if ( $I_L6615_12 >= nmax ) exit
 6615.          enddo
 6630.          t$3184 = _zla( 0, nmax )
 6630.          t$3188 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
 6630.          $I_L6630_34 = 0
 6630.          do
 6630.             $I_L6630_16 = 0
 6630. !dir$ ivdep
 6630.             do
 6630.                t$3187(1 + $I_L6630_16, 1 + $I_L6630_34) = capac(1 + $I_L6630_16, 1 + $I_L6630_34)
 6630.                $I_L6630_16 = 1 + $I_L6630_16
 6630.                if ( $I_L6630_16 >= nmax ) exit
 6630.             enddo
 6630.             $I_L6630_34 = 1 + $I_L6630_34
 6630.             if ( $I_L6630_34 >= 2 ) exit
 6630.          enddo
 6630.          t$3190 = _zla( 0, nmax )
 6630.          t$3194 = int( _alloc( _zla( 0, 16 * _zla( 0, nmax ) ) ), 8 )
 6630.          $I_L6630_36 = 0
 6630.          do
 6630.             $I_L6630_18 = 0
 6630. !dir$ ivdep
 6630.             do
 6630.                t$3193(1 + $I_L6630_18, 1 + $I_L6630_36) = satcap(1 + $I_L6630_18, 1 + $I_L6630_36)
 6630.                $I_L6630_18 = 1 + $I_L6630_18
 6630.                if ( $I_L6630_18 >= nmax ) exit
 6630.             enddo
 6630.             $I_L6630_36 = 1 + $I_L6630_36
 6630.             if ( $I_L6630_36 >= 2 ) exit
 6630.          enddo
 6631.          t$3196 = _zla( 0, nmax )
 6631.          t$3202 = int( _alloc( _zla( 0, 96 * _zla( 0, nmax ) ) ), 8 )
 6631.          $I_L6631_38 = 0
 6631.          do
 6631.             $I_L6631_20 = 0
 6631. !dir$ ivdep
 6631.             do
 6631.                t$3201(1 + $I_L6631_20, 1 + $I_L6631_38, 1, 1) = extk(1 + $I_L6631_20, 1 + $I_L6631_38, 1, 1)
 6631.                $I_L6631_20 = 1 + $I_L6631_20
 6631.                if ( $I_L6631_20 >= nmax ) exit
 6631.             enddo
 6631.             $I_L6631_38 = 1 + $I_L6631_38
 6631.             if ( $I_L6631_38 >= 12 ) exit
 6631.          enddo
 6631.          t$3204 = _zla( 0, nmax )
 6631.          t$3210 = int( _alloc( _zla( 0, 96 * _zla( 0, nmax ) ) ), 8 )
 6631.          $I_L6631_40 = 0
 6631.          do
 6631.             $I_L6631_22 = 0
 6631. !dir$ ivdep
 6631.             do
 6631.                t$3209(1 + $I_L6631_22, 1 + $I_L6631_40, 1, 1) = radfac(1 + $I_L6631_22, 1 + $I_L6631_40, 1, 1)
 6631.                $I_L6631_22 = 1 + $I_L6631_22
 6631.                if ( $I_L6631_22 >= nmax ) exit
 6631.             enddo
 6631.             $I_L6631_40 = 1 + $I_L6631_40
 6631.             if ( $I_L6631_40 >= 12 ) exit
 6631.          enddo
 6633.          t$3212 = _zla( 0, nmax )
 6633.          t$3217 = int( _alloc( _zla( 0, 32 * _zla( 0, nmax ) ) ), 8 )
 6633.          $I_L6633_42 = 0
 6633.          do
 6633.             $I_L6633_24 = 0
 6633. !dir$ ivdep
 6633.             do
 6633.                t$3216(1 + $I_L6633_24, 1 + $I_L6633_42, 1) = salb(1 + $I_L6633_24, 1 + $I_L6633_42, 1)
 6633.                $I_L6633_24 = 1 + $I_L6633_24
 6633.                if ( $I_L6633_24 >= nmax ) exit
 6633.             enddo
 6633.             $I_L6633_42 = 1 + $I_L6633_42
 6633.             if ( $I_L6633_42 >= 4 ) exit
 6633.          enddo
 6628.          call radalb( nmax, month2(1), nmax, itype(1), tc(1), tg(1), t$3187(1, 1), t$3193(1, 1), t$3201(1, 1, 1, 1), t$3209(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), zlwup(1), t$3216(1, 1, 1), tgeff(1), cosz(1), nsx(1), latco )
 6628.          $I_L6628_44 = 0
 6628.          do
 6628.             $I_L6628_26 = 0
 6628. !dir$ ivdep
 6628.             do
 6628.                salb(1 + $I_L6628_26, 1 + $I_L6628_44, 1) = t$3216(1 + $I_L6628_26, 1 + $I_L6628_44, 1)
 6628.                $I_L6628_26 = 1 + $I_L6628_26
 6628.                if ( $I_L6628_26 >= nmax ) exit
 6628.             enddo
 6628.             $I_L6628_44 = 1 + $I_L6628_44
 6628.             if ( $I_L6628_44 >= 4 ) exit
 6628.          enddo
 6633.          _free( t$3217 )
 6628.          $I_L6628_46 = 0
 6628.          do
 6628.             $I_L6628_28 = 0
 6628. !dir$ ivdep
 6628.             do
 6628.                radfac(1 + $I_L6628_28, 1 + $I_L6628_46, 1, 1) = t$3209(1 + $I_L6628_28, 1 + $I_L6628_46, 1, 1)
 6628.                $I_L6628_28 = 1 + $I_L6628_28
 6628.                if ( $I_L6628_28 >= nmax ) exit
 6628.             enddo
 6628.             $I_L6628_46 = 1 + $I_L6628_46
 6628.             if ( $I_L6628_46 >= 12 ) exit
 6628.          enddo
 6631.          _free( t$3210 )
 6628.          $I_L6628_48 = 0
 6628.          do
 6628.             $I_L6628_30 = 0
 6628. !dir$ ivdep
 6628.             do
 6628.                extk(1 + $I_L6628_30, 1 + $I_L6628_48, 1, 1) = t$3201(1 + $I_L6628_30, 1 + $I_L6628_48, 1, 1)
 6628.                $I_L6628_30 = 1 + $I_L6628_30
 6628.                if ( $I_L6628_30 >= nmax ) exit
 6628.             enddo
 6628.             $I_L6628_48 = 1 + $I_L6628_48
 6628.             if ( $I_L6628_48 >= 12 ) exit
 6628.          enddo
 6631.          _free( t$3202 )
 6628.          $I_L6628_50 = 0
 6628.          do
 6628.             $I_L6628_32 = 0
 6628. !dir$ ivdep
 6628.             do
 6628.                satcap(1 + $I_L6628_32, 1 + $I_L6628_50) = t$3193(1 + $I_L6628_32, 1 + $I_L6628_50)
 6628.                $I_L6628_32 = 1 + $I_L6628_32
 6628.                if ( $I_L6628_32 >= nmax ) exit
 6628.             enddo
 6628.             $I_L6628_50 = 1 + $I_L6628_50
 6628.             if ( $I_L6628_50 >= 2 ) exit
 6628.          enddo
 6630.          _free( t$3194 )
 6630.          _free( t$3188 )
 6630.       endif
 6636.       $ncount_S2 = 0
 6637.       if ( ncols > 0 ) then
 6637.          $I_L6637_14 = 0
 6637. !dir$ ivdep
 6637.          do
 6638.             if ( imask(1 + $I_L6637_14) > 0 ) then
 6639.                $ncount_S2 = 1 + $ncount_S2
 6640.                avisb(1 + $I_L6637_14) = salb($ncount_S2, 1, 1)
 6641.                avisd(1 + $I_L6637_14) = salb($ncount_S2, 1, 2)
 6642.                anirb(1 + $I_L6637_14) = salb($ncount_S2, 2, 1)
 6643.                anird(1 + $I_L6637_14) = salb($ncount_S2, 2, 2)
 6644.             else if ( abs( tsea(1 + $I_L6637_14) ) >= 271.17000000000002 ) then
 6645.                $f_S3 = max( 0.0, zenith(1 + $I_L6637_14) )
 6648.                avisb(1 + $I_L6637_14) = ( 1.2347e-1 + $f_S3 * ( 3.4666999999999998e-1 + $f_S3 * ( -1.7484999999999999 + $f_S3 * ( 2.0463 + -7.4839e-1 * $f_S3 ) ) ) )
 6649.                avisd(1 + $I_L6637_14) = 4.19e-2
 6650.                anirb(1 + $I_L6637_14) = ( 1.2347e-1 + $f_S3 * ( 3.4666999999999998e-1 + $f_S3 * ( -1.7484999999999999 + $f_S3 * ( 2.0463 + -7.4839e-1 * $f_S3 ) ) ) )
 6651.                anird(1 + $I_L6637_14) = 4.19e-2
 6651.             else
 6653.                avisb(1 + $I_L6637_14) = 8.0000000000000004e-1
 6654.                avisd(1 + $I_L6637_14) = 8.0000000000000004e-1
 6655.                anirb(1 + $I_L6637_14) = 4.0000000000000002e-1
 6656.                anird(1 + $I_L6637_14) = 4.0000000000000002e-1
 6656.             endif
 6658.             $I_L6637_14 = 1 + $I_L6637_14
 6657.             if ( $I_L6637_14 >= ncols ) exit
 6657.          enddo
 6657.       endif
 6660.       return
 6660.       end
 6660.       
 6666.       
 6666.       subroutine radalb( ncols, mon, nmax, itype, tc, tg, capac, satcap, extk, radfac, closs, gloss, thermk, p1f, p2f, zlwup, salb, tgeff, cosz, nsx, latitu )
 6666.       t$1237 = ncols
 6749.       t$2184 = _zla( 0, ncols )
 6666.       t$2185 = _zla( 0, ncols )
 6666.       t$2186 = 2 * _zla( 0, ncols )
 6666.       t$2187 = 2 * _zla( 0, ncols )
 6666.       t$2188 = 2 * _zla( 0, ncols )
 6666.       t$2189 = 6 * _zla( 0, ncols )
 6666.       t$2190 = 12 * _zla( 0, ncols )
 6666.       t$2191 = 2 * _zla( 0, ncols )
 6666.       t$2192 = 4 * _zla( 0, ncols )
 6775.       t$2195 = 8 * _zla( 0, ncols )
 6777.       t$2196 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 6777.       t$2198 = t$2196 + 8 * _zla( 0, ncols )
 6774.       t$2199 = 8 * ( 7 + t$2196 + 8 * _zla( 0, ncols ) ) / 8
 6774.       t$2201 = t$2199 + 8 * _zla( 0, ncols )
 6782.       t$2202 = 8 * ( 7 + t$2199 + 8 * _zla( 0, ncols ) ) / 8
 6782.       t$2204 = t$2202 + 8 * _zla( 0, ncols )
 6783.       t$2205 = 8 * ( 7 + t$2202 + 8 * _zla( 0, ncols ) ) / 8
 6783.       t$2207 = t$2205 + 8 * _zla( 0, ncols )
 6666.       t$1277 = nmax
 6809.       t$2208 = _zla( 0, nmax )
 6809.       t$2210 = t$2205 + 8 * _zla( 0, ncols ) + 4 * _zla( 0, nmax )
 6808.       t$2212 = t$2205 + 8 * _zla( 0, ncols ) + 8 * _zla( 0, nmax )
 6776.       t$2213 = 8 * ( 7 + t$2205 + 8 * _zla( 0, ncols ) + 8 * _zla( 0, nmax ) ) / 8
 6776.       t$2215 = t$2213 + 8 * _zla( 0, ncols )
 6794.       t$2217 = t$2213 + 8 * _zla( 0, ncols ) + 4 * _zla( 0, nmax )
 6791.       t$2219 = t$2213 + 12 * _zla( 0, ncols ) + 4 * _zla( 0, nmax )
 6790.       t$2221 = t$2213 + 4 * _zla( 0, nmax ) + 16 * _zla( 0, ncols )
 6778.       t$2222 = 8 * ( 7 + t$2213 + 4 * _zla( 0, nmax ) + 16 * _zla( 0, ncols ) ) / 8
 6778.       t$2224 = t$2222 + 8 * _zla( 0, ncols )
 6779.       t$2225 = 8 * ( 7 + t$2222 + 8 * _zla( 0, ncols ) ) / 8
 6779.       t$2227 = t$2225 + 8 * _zla( 0, ncols )
 6780.       t$2228 = 8 * ( 7 + t$2225 + 8 * _zla( 0, ncols ) ) / 8
 6780.       t$2230 = t$2228 + 8 * _zla( 0, ncols )
 6666.       t$2231 = _zla( 0, nmax )
 6666.       t$2232 = 18 * _zla( 0, nmax )
 6787.       t$2233 = 8 * ( 7 + t$2228 + 8 * _zla( 0, ncols ) ) / 8
 6787.       t$2235 = t$2233 + 144 * _zla( 0, nmax )
 6781.       t$2236 = 8 * ( 7 + t$2233 + 144 * _zla( 0, nmax ) ) / 8
 6781.       t$2238 = t$2236 + 8 * _zla( 0, ncols )
 6771.       t$2239 = 8 * ( 7 + t$2236 + 8 * _zla( 0, ncols ) ) / 8
 6771.       t$2241 = t$2239 + 16 * _zla( 0, ncols )
 6784.       t$2242 = 8 * ( 7 + t$2239 + 16 * _zla( 0, ncols ) ) / 8
 6784.       t$2244 = t$2242 + 8 * _zla( 0, ncols )
 6770.       t$2245 = 8 * ( 7 + t$2242 + 8 * _zla( 0, ncols ) ) / 8
 6770.       t$2247 = t$2245 + 16 * _zla( 0, ncols )
 6666.       t$2193 = int( _alloc( t$2245 + 16 * _zla( 0, ncols ) ), 8 )
 6775.       t$2194 = t$2193
 6777.       t$2197 = t$2196 + t$2193
 6774.       t$2200 = t$2199 + t$2193
 6782.       t$2203 = t$2202 + t$2193
 6783.       t$2206 = t$2205 + t$2193
 6809.       t$2209 = t$2205 + t$2193 + 8 * _zla( 0, ncols )
 6808.       t$2211 = t$2205 + t$2193 + 8 * _zla( 0, ncols ) + 4 * _zla( 0, nmax )
 6776.       t$2214 = t$2213 + t$2193
 6794.       t$2216 = t$2213 + t$2193 + 8 * _zla( 0, ncols )
 6791.       t$2218 = t$2213 + t$2193 + 8 * _zla( 0, ncols ) + 4 * _zla( 0, nmax )
 6790.       t$2220 = t$2213 + t$2193 + 12 * _zla( 0, ncols ) + 4 * _zla( 0, nmax )
 6778.       t$2223 = t$2222 + t$2193
 6779.       t$2226 = t$2225 + t$2193
 6780.       t$2229 = t$2228 + t$2193
 6787.       t$2234 = t$2233 + t$2193
 6781.       t$2237 = t$2236 + t$2193
 6771.       t$2240 = t$2239 + t$2193
 6784.       t$2243 = t$2242 + t$2193
 6770.       t$2246 = t$2245 + t$2193
 6811.       if ( nmax > 0 ) then
 6815.          $SC_vcover_gbl_I8 = vcover_gbl%dim_1%EX
 6815.          $SC_vcover_gbl_I9 = vcover_gbl%dim_1%LB
 6815.          $SC_vcover_gbl_I11 = vcover_gbl%dim_2%SM
 6815.          $SC_vcover_gbl_I10 = vcover_gbl%dim_2%EX
 6815.          $SC_vcover_gbl_I12 = vcover_gbl%dim_2%LB
 6815.          $SC_vcover_gbl_I14 = vcover_gbl%dim_3%SM
 6815.          $SC_vcover_gbl_I13 = vcover_gbl%dim_3%EX
 6815.          $SC_vcover_gbl_I15 = vcover_gbl%dim_3%LB
 6813.          $SC_zlt_gbl_I0 = zlt_gbl%dim_1%EX
 6813.          $SC_zlt_gbl_I1 = zlt_gbl%dim_1%LB
 6813.          $SC_zlt_gbl_I3 = zlt_gbl%dim_2%SM
 6813.          $SC_zlt_gbl_I2 = zlt_gbl%dim_2%EX
 6813.          $SC_zlt_gbl_I4 = zlt_gbl%dim_2%LB
 6813.          $SC_zlt_gbl_I6 = zlt_gbl%dim_3%SM
 6813.          $SC_zlt_gbl_I5 = zlt_gbl%dim_3%EX
 6813.          $SC_zlt_gbl_I7 = zlt_gbl%dim_3%LB
 6811.          $I_L6811_184 = 0
 6811. !dir$ ivdep
 6811.          do
 6813.             zlt2(1 + $I_L6811_184, 1) = (zlt_gbl%base_addr)(1 + $I_L6811_184, latitu, 1, 0)
 6814.             zlt2(1 + $I_L6811_184, 2) = (zlt_gbl%base_addr)(1 + $I_L6811_184, latitu, 2, 0)
 6815.             vcover(1 + $I_L6811_184, 1) = (vcover_gbl%base_addr)(1 + $I_L6811_184, latitu, 1, 0)
 6816.             vcover(1 + $I_L6811_184, 2) = (vcover_gbl%base_addr)(1 + $I_L6811_184, latitu, 2, 0)
 6817.             f(1 + $I_L6811_184) = max( 1.746e-2, cosz(1 + $I_L6811_184) )
 6818.             $I_L6811_184 = 1 + $I_L6811_184
 6811.             if ( $I_L6811_184 >= nmax ) exit
 6811.          enddo
 6822.          $I_L6822_186 = 0
 6822. !dir$ ivdep
 6822.          do
 6823.             $deltg_WR0_R0 = 273.16000000000003 + -tg(1 + $I_L6822_186)
 6824.             fmelt(1 + $I_L6822_186) = 1.0
 6825.             if ( abs( $deltg_WR0_R0 ) < 5.0e-1 ) then
 6825.                if ( $deltg_WR0_R0 > 0.0 ) then
 6826.                   fmelt(1 + $I_L6822_186) = 5.9999999999999998e-1
 6826.                endif
 6826.             endif
 6848.             if ( tg(1 + $I_L6822_186) > 273.16000000000003 ) then
 6849.                scov2(1 + $I_L6822_186) = 0.0
 6849.             else
 6851.                scov2(1 + $I_L6822_186) = min( 1.0, 250.0 * capac(1 + $I_L6822_186, 2) )
 6851.             endif
 6828.             $I_L6822_186 = 1 + $I_L6822_186
 6827.             if ( $I_L6822_186 >= nmax ) exit
 6827.          enddo
 6859.          $I_L6859_192 = 0
 6859. !dir$ ivdep
 6859.          do
 6860.             ml(1 + $I_L6859_192) = cvmg( 2, 1, fmelt(1 + $I_L6859_192) /= 1.0 )
 6865.             $I_L6859_192 = 1 + $I_L6859_192
 6859.             if ( $I_L6859_192 >= nmax ) exit
 6859.          enddo
 6859.       endif
 6829.       if ( ncols > 0 ) then
 6829.          $I_L6829_226 = 0
 6829. !dir$ ivdep
 6829.          do
 6829.             ntyp(1 + $I_L6829_226) = itype(1 + $I_L6829_226)
 6858.             monx(1 + $I_L6829_226) = mon(1 + $I_L6829_226)
 6829.             $I_L6829_226 = 1 + $I_L6829_226
 6829.             if ( $I_L6829_226 >= ncols ) exit
 6829.          enddo
 6829.       endif
 6830.       if ( nmax > 0 ) then
 6835.          $SC_z2_I21 = z2%dim_1%EX
 6835.          $SC_z2_I22 = z2%dim_1%LB
 6835.          $SC_z2_I24 = z2%dim_2%SM
 6835.          $SC_z2_I23 = z2%dim_2%EX
 6835.          $SC_z2_I25 = z2%dim_2%LB
 6834.          $SC_z1_I16 = z1%dim_1%EX
 6834.          $SC_z1_I17 = z1%dim_1%LB
 6834.          $SC_z1_I19 = z1%dim_2%SM
 6834.          $SC_z1_I18 = z1%dim_2%EX
 6834.          $SC_z1_I20 = z1%dim_2%LB
 6830.          $I_L6830_188 = 0
 6830. !dir$ ivdep
 6830.          do
 6832.             $satcap_WR0_R1 = 1.0e-4 * zlt2(1 + $I_L6830_188, 1)
 6833.             satcap(1 + $I_L6830_188, 2) = 1.0e-4 * zlt2(1 + $I_L6830_188, 2)
 6834.             $depcov_WR0_R2 = max( 0.0, -(z1%base_addr)(ntyp(1 + $I_L6830_188), mon(1 + $I_L6830_188), 0) + 5.0 * capac(1 + $I_L6830_188, 2) )
 6835.             $depcov_WR0_R2 = min( $depcov_WR0_R2, 9.4999999999999996e-1 * ( (z2%base_addr)(ntyp(1 + $I_L6830_188), mon(1 + $I_L6830_188), 0) + -(z1%base_addr)(ntyp(1 + $I_L6830_188), mon(1 + $I_L6830_188), 0) ) )
 6836.             $satcap_WR0_R1 = $satcap_WR0_R1 * ( 1.0 + -( $depcov_WR0_R2 * 1.0/( (z2%base_addr)(ntyp(1 + $I_L6830_188), mon(1 + $I_L6830_188), 0) + -(z1%base_addr)(ntyp(1 + $I_L6830_188), mon(1 + $I_L6830_188), 0) ) ) )
 6836.             satcap(1 + $I_L6830_188, 1) = $satcap_WR0_R1
 6838.             $I_L6830_188 = 1 + $I_L6830_188
 6830.             if ( $I_L6830_188 >= nmax ) exit
 6830.          enddo
 6840.          $I_L6840_190 = 0
 6840. !dir$ ivdep
 6840.          do
 6841.             scov(1 + $I_L6840_190) = 0.0
 6842.             if ( tc(1 + $I_L6840_190) <= 273.16000000000003 ) then
 6843.                scov(1 + $I_L6840_190) = min( 5.0e-1, ( capac(1 + $I_L6840_190, 1) * 1.0/satcap(1 + $I_L6840_190, 1) ) )
 6843.             endif
 6845.             $I_L6840_190 = 1 + $I_L6840_190
 6844.             if ( $I_L6840_190 >= nmax ) exit
 6844.          enddo
 6892.          $I_L6892_200 = 0
 6892. !dir$ ivdep
 6892.          do
 6893.             flagscov(1 + $I_L6892_200) = scov(1 + $I_L6892_200) < 2.5000000000000001e-2 .and. scov2(1 + $I_L6892_200) < 2.5000000000000001e-2
 6894.             $I_L6892_200 = 1 + $I_L6892_200
 6892.             if ( $I_L6892_200 >= nmax ) exit
 6892.          enddo
 6892.       endif
 6866.       if ( ncols > 0 ) then
 6866.          $I_L6866_228 = 0
 6866. !dir$ ivdep
 6866.          do
 6866.             ntyp(1 + $I_L6866_228) = itype(1 + $I_L6866_228)
 6866.             $I_L6866_228 = 1 + $I_L6866_228
 6866.             if ( $I_L6866_228 >= ncols ) exit
 6866.          enddo
 6866.       endif
 6868.       if ( nmax > 0 ) then
 6868.          $I_L6868_194 = 0
 6868. !dir$ ivdep
 6868.          do
 6869.             mon(1 + $I_L6868_194) = monx(1 + $I_L6868_194)
 6870.             flagtyp(1 + $I_L6868_194) = .true.
 6871.             if ( ntyp(1 + $I_L6868_194) == 13 ) then
 6871.                ntyp(1 + $I_L6868_194) = 11
 6871.             endif
 6872.             if ( ntyp(1 + $I_L6868_194) == 12 ) then
 6872.                if ( nsx(1 + $I_L6868_194) > 0 ) then
 6873.                   ntyp(1 + $I_L6868_194) = 13
 6874.                   mon(1 + $I_L6868_194) = nsx(1 + $I_L6868_194)
 6875.                   if ( nsx(1 + $I_L6868_194) == 1 ) then
 6875.                      if ( monx(1 + $I_L6868_194) >= 9 ) then
 6875.                         if ( monx(1 + $I_L6868_194) <= 11 ) then
 6875.                            mon(1 + $I_L6868_194) = 7
 6875.                         endif
 6875.                      endif
 6875.                   endif
 6876.                   flagtyp(1 + $I_L6868_194) = .false.
 6876.                endif
 6876.             endif
 6878.             $I_L6868_194 = 1 + $I_L6868_194
 6877.             if ( $I_L6868_194 >= nmax ) exit
 6877.          enddo
 6877.       endif
 6881.       $SC_xmiu_I26 = xmiu%dim_1%EX
 6881.       $SC_xmiu_I27 = xmiu%dim_1%LB
 6881.       $SC_xmiu_I29 = xmiu%dim_2%SM
 6881.       $SC_xmiu_I28 = xmiu%dim_2%EX
 6881.       $SC_xmiu_I30 = xmiu%dim_2%LB
 6880.       if ( nmax > 0 ) then
 6880.          $SI_L6880_196_G1 = 0
 6880.          do
 6879.             $I_L6879_234 = 0
 6879. !dir$ blocking_size( 3, 3 )
 6879.             do
 6880.                $I_L6880_246 = 0
 6880. !dir$ ivdep
 6880. !dir$ blocking_size( 256, 256 )
 6880.                do
 6881.                   xmi1(mon(1 + $I_L6880_246 + 256 * $SI_L6880_196_G1), 1 + $I_L6879_234) = (xmiu%base_addr)(mon(1 + $I_L6880_246 + 256 * $SI_L6880_196_G1), 1 + $I_L6879_234, 0)
 6880.                   $I_L6880_246 = 1 + $I_L6880_246
 6880.                   if ( $I_L6880_246 >= min( nmax, 256 + 256 * $SI_L6880_196_G1 ) + -256 * $SI_L6880_196_G1 ) exit
 6880.                enddo
 6883.                $I_L6879_234 = 1 + $I_L6879_234
 6883.                if ( $I_L6879_234 >= 3 ) exit
 6883.             enddo
 6880.             $SI_L6880_196_G1 = 1 + $SI_L6880_196_G1
 6882.             if ( $SI_L6880_196_G1 >= _rsh( 255 + nmax, 8 ) ) exit
 6882.          enddo
 6882.       endif
 6886.       $SC_xmiw_I31 = xmiw%dim_1%EX
 6886.       $SC_xmiw_I32 = xmiw%dim_1%LB
 6886.       $SC_xmiw_I34 = xmiw%dim_2%SM
 6886.       $SC_xmiw_I33 = xmiw%dim_2%EX
 6886.       $SC_xmiw_I35 = xmiw%dim_2%LB
 6885.       if ( nmax > 0 ) then
 6885.          $SI_L6885_198_G4 = 0
 6885.          do
 6884.             $I_L6884_236 = 0
 6884. !dir$ blocking_size( 3, 3 )
 6884.             do
 6885.                $I_L6885_249 = 0
 6885. !dir$ ivdep
 6885. !dir$ blocking_size( 256, 256 )
 6885.                do
 6886.                   if ( flagtyp(1 + $I_L6885_249 + 256 * $SI_L6885_198_G4) == .false. ) then
 6886.                      xmi1(mon(1 + $I_L6885_249 + 256 * $SI_L6885_198_G4), 1 + $I_L6884_236) = (xmiw%base_addr)(mon(1 + $I_L6885_249 + 256 * $SI_L6885_198_G4), 1 + $I_L6884_236, 0)
 6886.                   endif
 6885.                   $I_L6885_249 = 1 + $I_L6885_249
 6886.                   if ( $I_L6885_249 >= min( nmax, 256 + 256 * $SI_L6885_198_G4 ) + -256 * $SI_L6885_198_G4 ) exit
 6886.                enddo
 6888.                $I_L6884_236 = 1 + $I_L6884_236
 6888.                if ( $I_L6884_236 >= 3 ) exit
 6888.             enddo
 6885.             $SI_L6885_198_G4 = 1 + $SI_L6885_198_G4
 6887.             if ( $SI_L6885_198_G4 >= _rsh( 255 + nmax, 8 ) ) exit
 6887.          enddo
 6887.       endif
 6901.       $SC_cledfu_I47 = cledfu%dim_1%EX
 6901.       $SC_cledfu_I48 = cledfu%dim_1%LB
 6901.       $SC_cledfu_I50 = cledfu%dim_2%SM
 6901.       $SC_cledfu_I49 = cledfu%dim_2%EX
 6901.       $SC_cledfu_I51 = cledfu%dim_2%LB
 6901.       $SC_cledfu_I53 = cledfu%dim_3%SM
 6901.       $SC_cledfu_I52 = cledfu%dim_3%EX
 6901.       $SC_cledfu_I54 = cledfu%dim_3%LB
 6899.       $SC_cledir_I36 = cledir%dim_1%EX
 6899.       $SC_cledir_I37 = cledir%dim_1%LB
 6899.       $SC_cledir_I39 = cledir%dim_2%SM
 6899.       $SC_cledir_I38 = cledir%dim_2%EX
 6899.       $SC_cledir_I40 = cledir%dim_2%LB
 6899.       $SC_cledir_I42 = cledir%dim_3%SM
 6899.       $SC_cledir_I41 = cledir%dim_3%EX
 6899.       $SC_cledir_I43 = cledir%dim_3%LB
 6899.       $SC_cledir_I45 = cledir%dim_4%SM
 6899.       $SC_cledir_I44 = cledir%dim_4%EX
 6899.       $SC_cledir_I46 = cledir%dim_4%LB
 6897.       if ( nmax > 0 ) then
 6896.          $I_L6896_238 = 0
 6896. !dir$ blocking_size( 1, 1 )
 6896.          do
 6897.             $I_L6897_202 = 0
 6897. !dir$ ivdep
 6897. !dir$ blocking_size( 256, 256 )
 6897.             do
 6898.                if ( flagscov(1 + $I_L6897_202) /= .false. ) then
 6899.                   temp(1 + $I_L6897_202, 1 + $I_L6896_238) = (cledir%base_addr)(ntyp(1 + $I_L6897_202), mon(1 + $I_L6897_202), 1 + $I_L6896_238, 1, 0) + f(1 + $I_L6897_202) * (cledir%base_addr)(ntyp(1 + $I_L6897_202), mon(1 + $I_L6897_202), 1 + $I_L6896_238, 2, 0) + (cledir%base_addr)(ntyp(1 + $I_L6897_202), mon(1 + $I_L6897_202), 1 + $I_L6896_238, 3, 0) * ( f(1 + $I_L6897_202) * f(1 + $I_L6897_202) )
 6901.                   temp(1 + $I_L6897_202, 10 + $I_L6896_238) = (cledfu%base_addr)(ntyp(1 + $I_L6897_202), mon(1 + $I_L6897_202), 1 + $I_L6896_238, 0)
 6901.                endif
 6903.                $I_L6897_202 = 1 + $I_L6897_202
 6902.                if ( $I_L6897_202 >= nmax ) exit
 6902.             enddo
 6904.             $I_L6896_238 = 1 + $I_L6896_238
 6903.             if ( $I_L6896_238 >= 9 ) exit
 6903.          enddo
 6905.          $I_L6905_230 = 0
 6905. !dir$ ivdep
 6905.          do
 6905.             flagscov(1 + $I_L6905_230) = flagscov(1 + $I_L6905_230) == .false.
 6905.             $I_L6905_230 = 1 + $I_L6905_230
 6905.             if ( $I_L6905_230 >= nmax ) exit
 6905.          enddo
 6905.       endif
 6914.       $SC_cedfu_I66 = cedfu%dim_1%EX
 6914.       $SC_cedfu_I67 = cedfu%dim_1%LB
 6914.       $SC_cedfu_I69 = cedfu%dim_2%SM
 6914.       $SC_cedfu_I68 = cedfu%dim_2%EX
 6914.       $SC_cedfu_I70 = cedfu%dim_2%LB
 6914.       $SC_cedfu_I72 = cedfu%dim_3%SM
 6914.       $SC_cedfu_I71 = cedfu%dim_3%EX
 6914.       $SC_cedfu_I73 = cedfu%dim_3%LB
 6912.       $SC_cedir_I55 = cedir%dim_1%EX
 6912.       $SC_cedir_I56 = cedir%dim_1%LB
 6912.       $SC_cedir_I58 = cedir%dim_2%SM
 6912.       $SC_cedir_I57 = cedir%dim_2%EX
 6912.       $SC_cedir_I59 = cedir%dim_2%LB
 6912.       $SC_cedir_I61 = cedir%dim_3%SM
 6912.       $SC_cedir_I60 = cedir%dim_3%EX
 6912.       $SC_cedir_I62 = cedir%dim_3%LB
 6912.       $SC_cedir_I64 = cedir%dim_4%SM
 6912.       $SC_cedir_I63 = cedir%dim_4%EX
 6912.       $SC_cedir_I65 = cedir%dim_4%LB
 6907.       if ( nmax > 0 ) then
 6906.          $I_L6906_240 = 0
 6906. !dir$ blocking_size( 1, 1 )
 6906.          do
 6907.             $I_L6907_204 = 0
 6907. !dir$ ivdep
 6907. !dir$ blocking_size( 256, 256 )
 6907.             do
 6908.                if ( flagscov(1 + $I_L6907_204) /= .false. ) then
 6912.                   temp(1 + $I_L6907_204, 1 + $I_L6906_240) = (cedir%base_addr)(ntyp(1 + $I_L6907_204), mon(1 + $I_L6907_204), 1 + $I_L6906_240, 1, 0) + f(1 + $I_L6907_204) * (cedir%base_addr)(ntyp(1 + $I_L6907_204), mon(1 + $I_L6907_204), 1 + $I_L6906_240, 2, 0) + (cedir%base_addr)(ntyp(1 + $I_L6907_204), mon(1 + $I_L6907_204), 1 + $I_L6906_240, 3, 0) * ( f(1 + $I_L6907_204) * f(1 + $I_L6907_204) )
 6914.                   temp(1 + $I_L6907_204, 10 + $I_L6906_240) = (cedfu%base_addr)(ntyp(1 + $I_L6907_204), mon(1 + $I_L6907_204), 1 + $I_L6906_240, 0)
 6914.                endif
 6916.                $I_L6907_204 = 1 + $I_L6907_204
 6915.                if ( $I_L6907_204 >= nmax ) exit
 6915.             enddo
 6917.             $I_L6906_240 = 1 + $I_L6906_240
 6916.             if ( $I_L6906_240 >= 9 ) exit
 6916.          enddo
 6916.       endif
 6926.       $SC_cedfu2_I91 = cedfu2%dim_1%EX
 6926.       $SC_cedfu2_I92 = cedfu2%dim_1%LB
 6926.       $SC_cedfu2_I94 = cedfu2%dim_2%SM
 6926.       $SC_cedfu2_I93 = cedfu2%dim_2%EX
 6926.       $SC_cedfu2_I95 = cedfu2%dim_2%LB
 6926.       $SC_cedfu2_I97 = cedfu2%dim_3%SM
 6926.       $SC_cedfu2_I96 = cedfu2%dim_3%EX
 6926.       $SC_cedfu2_I98 = cedfu2%dim_3%LB
 6926.       $SC_cedfu2_I100 = cedfu2%dim_4%SM
 6926.       $SC_cedfu2_I99 = cedfu2%dim_4%EX
 6926.       $SC_cedfu2_I101 = cedfu2%dim_4%LB
 6926.       $SC_cedfu2_I103 = cedfu2%dim_5%SM
 6926.       $SC_cedfu2_I102 = cedfu2%dim_5%EX
 6926.       $SC_cedfu2_I104 = cedfu2%dim_5%LB
 6923.       $SC_cedir2_I74 = cedir2%dim_1%EX
 6923.       $SC_cedir2_I75 = cedir2%dim_1%LB
 6923.       $SC_cedir2_I77 = cedir2%dim_2%SM
 6923.       $SC_cedir2_I76 = cedir2%dim_2%EX
 6923.       $SC_cedir2_I78 = cedir2%dim_2%LB
 6923.       $SC_cedir2_I80 = cedir2%dim_3%SM
 6923.       $SC_cedir2_I79 = cedir2%dim_3%EX
 6923.       $SC_cedir2_I81 = cedir2%dim_3%LB
 6923.       $SC_cedir2_I83 = cedir2%dim_4%SM
 6923.       $SC_cedir2_I82 = cedir2%dim_4%EX
 6923.       $SC_cedir2_I84 = cedir2%dim_4%LB
 6923.       $SC_cedir2_I86 = cedir2%dim_5%SM
 6923.       $SC_cedir2_I85 = cedir2%dim_5%EX
 6923.       $SC_cedir2_I87 = cedir2%dim_5%LB
 6923.       $SC_cedir2_I89 = cedir2%dim_6%SM
 6923.       $SC_cedir2_I88 = cedir2%dim_6%EX
 6923.       $SC_cedir2_I90 = cedir2%dim_6%LB
 6919.       if ( nmax > 0 ) then
 6918.          $I_L6918_242 = 0
 6918. !dir$ blocking_size( 1, 1 )
 6918.          do
 6919.             $I_L6919_206 = 0
 6919. !dir$ ivdep
 6919. !dir$ blocking_size( 256, 256 )
 6919.             do
 6920.                if ( flagscov(1 + $I_L6919_206) /= .false. ) then
 6920.                   if ( ntyp(1 + $I_L6919_206) == 11 ) then
 6923.                      temp(1 + $I_L6919_206, 1 + $I_L6918_242) = temp(1 + $I_L6919_206, 1 + $I_L6918_242) + (cedir2%base_addr)(ml(1 + $I_L6919_206), ntyp(1 + $I_L6919_206), mon(1 + $I_L6919_206), 1 + $I_L6918_242, 3, 1, 0) + scov2(1 + $I_L6919_206) * (cedir2%base_addr)(ml(1 + $I_L6919_206), ntyp(1 + $I_L6919_206), mon(1 + $I_L6919_206), 1 + $I_L6918_242, 3, 2, 0) + (cedir2%base_addr)(ml(1 + $I_L6919_206), ntyp(1 + $I_L6919_206), mon(1 + $I_L6919_206), 1 + $I_L6918_242, 3, 3, 0) * ( scov2(1 + $I_L6919_206) * scov2(1 + $I_L6919_206) )
 6926.                      temp(1 + $I_L6919_206, 10 + $I_L6918_242) = temp(1 + $I_L6919_206, 10 + $I_L6918_242) + (cedfu2%base_addr)(ml(1 + $I_L6919_206), ntyp(1 + $I_L6919_206), mon(1 + $I_L6919_206), 1 + $I_L6918_242, 1, 0) + scov2(1 + $I_L6919_206) * (cedfu2%base_addr)(ml(1 + $I_L6919_206), ntyp(1 + $I_L6919_206), mon(1 + $I_L6919_206), 1 + $I_L6918_242, 2, 0) + (cedfu2%base_addr)(ml(1 + $I_L6919_206), ntyp(1 + $I_L6919_206), mon(1 + $I_L6919_206), 1 + $I_L6918_242, 3, 0) * ( scov2(1 + $I_L6919_206) * scov2(1 + $I_L6919_206) )
 6926.                   endif
 6926.                endif
 6930.                $I_L6919_206 = 1 + $I_L6919_206
 6929.                if ( $I_L6919_206 >= nmax ) exit
 6929.             enddo
 6931.             $I_L6918_242 = 1 + $I_L6918_242
 6930.             if ( $I_L6918_242 >= 6 ) exit
 6930.          enddo
 6972.          $SC_cedfu1_I122 = cedfu1%dim_1%EX
 6972.          $SC_cedfu1_I123 = cedfu1%dim_1%LB
 6972.          $SC_cedfu1_I125 = cedfu1%dim_2%SM
 6972.          $SC_cedfu1_I124 = cedfu1%dim_2%EX
 6972.          $SC_cedfu1_I126 = cedfu1%dim_2%LB
 6972.          $SC_cedfu1_I128 = cedfu1%dim_3%SM
 6972.          $SC_cedfu1_I127 = cedfu1%dim_3%EX
 6972.          $SC_cedfu1_I129 = cedfu1%dim_3%LB
 6972.          $SC_cedfu1_I131 = cedfu1%dim_4%SM
 6972.          $SC_cedfu1_I130 = cedfu1%dim_4%EX
 6972.          $SC_cedfu1_I132 = cedfu1%dim_4%LB
 6972.          $SC_cedfu1_I134 = cedfu1%dim_5%SM
 6972.          $SC_cedfu1_I133 = cedfu1%dim_5%EX
 6972.          $SC_cedfu1_I135 = cedfu1%dim_5%LB
 6961.          $SC_cedir1_I105 = cedir1%dim_1%EX
 6961.          $SC_cedir1_I106 = cedir1%dim_1%LB
 6961.          $SC_cedir1_I108 = cedir1%dim_2%SM
 6961.          $SC_cedir1_I107 = cedir1%dim_2%EX
 6961.          $SC_cedir1_I109 = cedir1%dim_2%LB
 6961.          $SC_cedir1_I111 = cedir1%dim_3%SM
 6961.          $SC_cedir1_I110 = cedir1%dim_3%EX
 6961.          $SC_cedir1_I112 = cedir1%dim_3%LB
 6961.          $SC_cedir1_I114 = cedir1%dim_4%SM
 6961.          $SC_cedir1_I113 = cedir1%dim_4%EX
 6961.          $SC_cedir1_I115 = cedir1%dim_4%LB
 6961.          $SC_cedir1_I117 = cedir1%dim_5%SM
 6961.          $SC_cedir1_I116 = cedir1%dim_5%EX
 6961.          $SC_cedir1_I118 = cedir1%dim_5%LB
 6961.          $SC_cedir1_I120 = cedir1%dim_6%SM
 6961.          $SC_cedir1_I119 = cedir1%dim_6%EX
 6961.          $SC_cedir1_I121 = cedir1%dim_6%LB
 6991.          $SC_cedir2_I74 = cedir2%dim_1%EX
 6991.          $SC_cedir2_I75 = cedir2%dim_1%LB
 6991.          $SC_cedir2_I77 = cedir2%dim_2%SM
 6991.          $SC_cedir2_I76 = cedir2%dim_2%EX
 6991.          $SC_cedir2_I78 = cedir2%dim_2%LB
 6991.          $SC_cedir2_I80 = cedir2%dim_3%SM
 6991.          $SC_cedir2_I79 = cedir2%dim_3%EX
 6991.          $SC_cedir2_I81 = cedir2%dim_3%LB
 6991.          $SC_cedir2_I83 = cedir2%dim_4%SM
 6991.          $SC_cedir2_I82 = cedir2%dim_4%EX
 6991.          $SC_cedir2_I84 = cedir2%dim_4%LB
 6991.          $SC_cedir2_I86 = cedir2%dim_5%SM
 6991.          $SC_cedir2_I85 = cedir2%dim_5%EX
 6991.          $SC_cedir2_I87 = cedir2%dim_5%LB
 6991.          $SC_cedir2_I89 = cedir2%dim_6%SM
 6991.          $SC_cedir2_I88 = cedir2%dim_6%EX
 6991.          $SC_cedir2_I90 = cedir2%dim_6%LB
 6932.          $I_L6932_244 = 0
 6932.          do
 6933.             if ( flagscov(1 + $I_L6932_244) /= .false. ) then
 6933.                if ( ntyp(1 + $I_L6932_244) /= 11 ) then
 6934.                   $k2_S21 = 1
 6935.                   $k1_S20 = 2
 6937.                   $SC_f_I173 = f(1 + $I_L6932_244)
 6937.                   $SC_mon_I172 = mon(1 + $I_L6932_244)
 6936.                   $I_L6936_208 = 0
 6936. !dir$ ivdep
 6936.                   do
 6937.                      if ( $SC_f_I173 < xmi1($SC_mon_I172, 3 + -$I_L6936_208) ) then
 6940.                         $k1_S20 = ( 4 + -$I_L6936_208 )
 6941.                         $k2_S21 = ( 3 + -$I_L6936_208 )
 6941.                         goto 10
 6941.                      endif
 6944.                      $I_L6936_208 = 1 + $I_L6936_208
 6943.                      if ( $I_L6936_208 >= 3 ) exit
 6943.                   enddo
 6943.    10             continue
 6946.                   if ( $k1_S20 <= 3 ) then
 6946.                      xm1 = xmi1($SC_mon_I172, $k1_S20)
 6946.                   endif
 6950.                   if ( scov(1 + $I_L6932_244) > 2.5000000000000001e-2 ) then
 6953.                      if ( $k2_S21 >= 3 .orelse. $k2_S21 <= 1 ) then
 6954.                         $SCA_ml_I167 = ml(1 + $I_L6932_244)
 6954.                         $SCA_ntyp_I168 = ntyp(1 + $I_L6932_244)
 6954.                         $SCA_scov_I169 = scov(1 + $I_L6932_244)
 6954.                         $I_L6954_210 = 0
 6954. !dir$ ivdep
 6954.                         do
 6955.                            temp(1 + $I_L6932_244, 1 + $I_L6954_210) = temp(1 + $I_L6932_244, 1 + $I_L6954_210) + (cedir1%base_addr)($SCA_ml_I167, $SCA_ntyp_I168, $SC_mon_I172, 1 + $I_L6954_210, $k2_S21, 1, 0) + $SCA_scov_I169 * (cedir1%base_addr)($SCA_ml_I167, $SCA_ntyp_I168, $SC_mon_I172, 1 + $I_L6954_210, $k2_S21, 2, 0) + (cedir1%base_addr)($SCA_ml_I167, $SCA_ntyp_I168, $SC_mon_I172, 1 + $I_L6954_210, $k2_S21, 3, 0) * ( $SCA_scov_I169 * $SCA_scov_I169 )
 6958.                            $I_L6954_210 = 1 + $I_L6954_210
 6954.                            if ( $I_L6954_210 >= 6 ) exit
 6954.                         enddo
 6954.                      else
 6960.                         $SCA_scov_I148 = scov(1 + $I_L6932_244)
 6960.                         $SCA_ntyp_I153 = ntyp(1 + $I_L6932_244)
 6960.                         $SCA_ml_I158 = ml(1 + $I_L6932_244)
 6960.                         $SCA_xmi1_I170 = xmi1($SC_mon_I172, $k2_S21)
 6960.                         $I_L6960_212 = 0
 6960. !dir$ ivdep
 6960.                         do
 6961.                            $xtm1_S24 = (cedir1%base_addr)($SCA_ml_I158, $SCA_ntyp_I153, $SC_mon_I172, 1 + $I_L6960_212, $k1_S20, 1, 0) + $SCA_scov_I148 * (cedir1%base_addr)($SCA_ml_I158, $SCA_ntyp_I153, $SC_mon_I172, 1 + $I_L6960_212, $k1_S20, 2, 0) + (cedir1%base_addr)($SCA_ml_I158, $SCA_ntyp_I153, $SC_mon_I172, 1 + $I_L6960_212, $k1_S20, 3, 0) * ( $SCA_scov_I148 * $SCA_scov_I148 )
 6964.                            $xtm2_S23 = (cedir1%base_addr)($SCA_ml_I158, $SCA_ntyp_I153, $SC_mon_I172, 1 + $I_L6960_212, $k2_S21, 1, 0) + $SCA_scov_I148 * (cedir1%base_addr)($SCA_ml_I158, $SCA_ntyp_I153, $SC_mon_I172, 1 + $I_L6960_212, $k2_S21, 2, 0) + (cedir1%base_addr)($SCA_ml_I158, $SCA_ntyp_I153, $SC_mon_I172, 1 + $I_L6960_212, $k2_S21, 3, 0) * ( $SCA_scov_I148 * $SCA_scov_I148 )
 6967.                            temp(1 + $I_L6932_244, 1 + $I_L6960_212) = temp(1 + $I_L6932_244, 1 + $I_L6960_212) + ( 1.0/( $SCA_xmi1_I170 + -xm1 ) * ( $xtm1_S24 * ( $SCA_xmi1_I170 + -$SC_f_I173 ) + $xtm2_S23 * ( $SC_f_I173 + -xm1 ) ) )
 6969.                            $I_L6960_212 = 1 + $I_L6960_212
 6960.                            if ( $I_L6960_212 >= 6 ) exit
 6960.                         enddo
 6960.                      endif
 6971.                      $SCA_scov_I147 = scov(1 + $I_L6932_244)
 6971.                      $SCA_ntyp_I152 = ntyp(1 + $I_L6932_244)
 6971.                      $SCA_ml_I157 = ml(1 + $I_L6932_244)
 6971.                      $I_L6971_214 = 0
 6971. !dir$ ivdep
 6971.                      do
 6972.                         temp(1 + $I_L6932_244, 10 + $I_L6971_214) = temp(1 + $I_L6932_244, 10 + $I_L6971_214) + (cedfu1%base_addr)($SCA_ml_I157, $SCA_ntyp_I152, $SC_mon_I172, 1 + $I_L6971_214, 1, 0) + (cedfu1%base_addr)($SCA_ml_I157, $SCA_ntyp_I152, $SC_mon_I172, 1 + $I_L6971_214, 3, 0) * ( $SCA_scov_I147 * $SCA_scov_I147 ) + $SCA_scov_I147 * (cedfu1%base_addr)($SCA_ml_I157, $SCA_ntyp_I152, $SC_mon_I172, 1 + $I_L6971_214, 2, 0)
 6975.                         $I_L6971_214 = 1 + $I_L6971_214
 6971.                         if ( $I_L6971_214 >= 6 ) exit
 6971.                      enddo
 6971.                   endif
 6980.                   if ( scov2(1 + $I_L6932_244) > 2.5000000000000001e-2 ) then
 6983.                      if ( $k2_S21 >= 3 .orelse. $k2_S21 <= 1 ) then
 6984.                         $SCA_ntyp_I151 = ntyp(1 + $I_L6932_244)
 6984.                         $SCA_ml_I156 = ml(1 + $I_L6932_244)
 6984.                         $SCA_scov2_I171 = scov2(1 + $I_L6932_244)
 6984.                         $I_L6984_216 = 0
 6984. !dir$ ivdep
 6984.                         do
 6985.                            temp(1 + $I_L6932_244, 1 + $I_L6984_216) = temp(1 + $I_L6932_244, 1 + $I_L6984_216) + (cedir2%base_addr)($SCA_ml_I156, $SCA_ntyp_I151, $SC_mon_I172, 1 + $I_L6984_216, $k2_S21, 1, 0) + $SCA_scov2_I171 * (cedir2%base_addr)($SCA_ml_I156, $SCA_ntyp_I151, $SC_mon_I172, 1 + $I_L6984_216, $k2_S21, 2, 0) + (cedir2%base_addr)($SCA_ml_I156, $SCA_ntyp_I151, $SC_mon_I172, 1 + $I_L6984_216, $k2_S21, 3, 0) * ( $SCA_scov2_I171 * $SCA_scov2_I171 )
 6988.                            $I_L6984_216 = 1 + $I_L6984_216
 6984.                            if ( $I_L6984_216 >= 6 ) exit
 6984.                         enddo
 6984.                      else
 6990.                         $SCA_scov2_I145 = scov2(1 + $I_L6932_244)
 6990.                         $SCA_xmi1_I146 = xmi1($SC_mon_I172, $k2_S21)
 6990.                         $SCA_ntyp_I150 = ntyp(1 + $I_L6932_244)
 6990.                         $SCA_ml_I155 = ml(1 + $I_L6932_244)
 6990.                         $I_L6990_218 = 0
 6990. !dir$ ivdep
 6990.                         do
 6991.                            $xtm1_S29 = (cedir2%base_addr)($SCA_ml_I155, $SCA_ntyp_I150, $SC_mon_I172, 1 + $I_L6990_218, $k1_S20, 1, 0) + $SCA_scov2_I145 * (cedir2%base_addr)($SCA_ml_I155, $SCA_ntyp_I150, $SC_mon_I172, 1 + $I_L6990_218, $k1_S20, 2, 0) + (cedir2%base_addr)($SCA_ml_I155, $SCA_ntyp_I150, $SC_mon_I172, 1 + $I_L6990_218, $k1_S20, 3, 0) * ( $SCA_scov2_I145 * $SCA_scov2_I145 )
 6994.                            $xtm2_S28 = (cedir2%base_addr)($SCA_ml_I155, $SCA_ntyp_I150, $SC_mon_I172, 1 + $I_L6990_218, $k2_S21, 1, 0) + $SCA_scov2_I145 * (cedir2%base_addr)($SCA_ml_I155, $SCA_ntyp_I150, $SC_mon_I172, 1 + $I_L6990_218, $k2_S21, 2, 0) + (cedir2%base_addr)($SCA_ml_I155, $SCA_ntyp_I150, $SC_mon_I172, 1 + $I_L6990_218, $k2_S21, 3, 0) * ( $SCA_scov2_I145 * $SCA_scov2_I145 )
 6997.                            temp(1 + $I_L6932_244, 1 + $I_L6990_218) = temp(1 + $I_L6932_244, 1 + $I_L6990_218) + ( 1.0/( $SCA_xmi1_I146 + -xm1 ) * ( $xtm2_S28 * ( $SC_f_I173 + -xm1 ) + $xtm1_S29 * ( $SCA_xmi1_I146 + -$SC_f_I173 ) ) )
 6999.                            $I_L6990_218 = 1 + $I_L6990_218
 6990.                            if ( $I_L6990_218 >= 6 ) exit
 6990.                         enddo
 6990.                      endif
 7001.                      $SCA_scov2_I144 = scov2(1 + $I_L6932_244)
 7001.                      $SCA_ntyp_I149 = ntyp(1 + $I_L6932_244)
 7001.                      $SCA_ml_I154 = ml(1 + $I_L6932_244)
 7002.                      $SC_cedfu2_I174 = cedfu2%dim_1%EX
 7002.                      $SC_cedfu2_I175 = cedfu2%dim_1%LB
 7002.                      $SC_cedfu2_I177 = cedfu2%dim_2%SM
 7002.                      $SC_cedfu2_I176 = cedfu2%dim_2%EX
 7002.                      $SC_cedfu2_I178 = cedfu2%dim_2%LB
 7002.                      $SC_cedfu2_I180 = cedfu2%dim_3%SM
 7002.                      $SC_cedfu2_I179 = cedfu2%dim_3%EX
 7002.                      $SC_cedfu2_I181 = cedfu2%dim_3%LB
 7002.                      $SC_cedfu2_I183 = cedfu2%dim_4%SM
 7002.                      $SC_cedfu2_I182 = cedfu2%dim_4%EX
 7002.                      $SC_cedfu2_I184 = cedfu2%dim_4%LB
 7002.                      $SC_cedfu2_I186 = cedfu2%dim_5%SM
 7002.                      $SC_cedfu2_I185 = cedfu2%dim_5%EX
 7002.                      $SC_cedfu2_I187 = cedfu2%dim_5%LB
 7001.                      $I_L7001_220 = 0
 7001. !dir$ ivdep
 7001.                      do
 7002.                         temp(1 + $I_L6932_244, 10 + $I_L7001_220) = temp(1 + $I_L6932_244, 10 + $I_L7001_220) + (cedfu2%base_addr)($SCA_ml_I154, $SCA_ntyp_I149, $SC_mon_I172, 1 + $I_L7001_220, 1, 0) + (cedfu2%base_addr)($SCA_ml_I154, $SCA_ntyp_I149, $SC_mon_I172, 1 + $I_L7001_220, 3, 0) * ( $SCA_scov2_I144 * $SCA_scov2_I144 ) + $SCA_scov2_I144 * (cedfu2%base_addr)($SCA_ml_I154, $SCA_ntyp_I149, $SC_mon_I172, 1 + $I_L7001_220, 2, 0)
 7005.                         $I_L7001_220 = 1 + $I_L7001_220
 7001.                         if ( $I_L7001_220 >= 6 ) exit
 7001.                      enddo
 7001.                   endif
 7001.                endif
 7001.             endif
 7008.             $I_L6932_244 = 1 + $I_L6932_244
 7007.             if ( $I_L6932_244 >= nmax ) exit
 7007.          enddo
 7029.          $SC_cether_I136 = cether%dim_1%EX
 7029.          $SC_cether_I137 = cether%dim_1%LB
 7029.          $SC_cether_I139 = cether%dim_2%SM
 7029.          $SC_cether_I138 = cether%dim_2%EX
 7029.          $SC_cether_I140 = cether%dim_2%LB
 7029.          $SC_cether_I142 = cether%dim_3%SM
 7029.          $SC_cether_I141 = cether%dim_3%EX
 7029.          $SC_cether_I143 = cether%dim_3%LB
 7010.          $I_L7010_222 = 0
 7010. !dir$ ivdep
 7010.          do
 7011.             radfac(1 + $I_L7010_222, 1, 1, 2) = temp(1 + $I_L7010_222, 10)
 7012.             radfac(1 + $I_L7010_222, 1, 2, 2) = temp(1 + $I_L7010_222, 11)
 7013.             radfac(1 + $I_L7010_222, 2, 1, 2) = temp(1 + $I_L7010_222, 12)
 7014.             radfac(1 + $I_L7010_222, 2, 2, 2) = temp(1 + $I_L7010_222, 13)
 7015.             salb(1 + $I_L7010_222, 1, 2) = temp(1 + $I_L7010_222, 14)
 7016.             salb(1 + $I_L7010_222, 2, 2) = temp(1 + $I_L7010_222, 15)
 7017.             p2f(1 + $I_L7010_222) = temp(1 + $I_L7010_222, 16)
 7018.             extk(1 + $I_L7010_222, 1, 1, 2) = temp(1 + $I_L7010_222, 17)
 7019.             extk(1 + $I_L7010_222, 2, 1, 2) = temp(1 + $I_L7010_222, 18)
 7020.             radfac(1 + $I_L7010_222, 1, 1, 1) = temp(1 + $I_L7010_222, 1)
 7021.             radfac(1 + $I_L7010_222, 1, 2, 1) = temp(1 + $I_L7010_222, 2)
 7022.             radfac(1 + $I_L7010_222, 2, 1, 1) = temp(1 + $I_L7010_222, 3)
 7023.             radfac(1 + $I_L7010_222, 2, 2, 1) = temp(1 + $I_L7010_222, 4)
 7024.             salb(1 + $I_L7010_222, 1, 1) = temp(1 + $I_L7010_222, 5)
 7025.             salb(1 + $I_L7010_222, 2, 1) = temp(1 + $I_L7010_222, 6)
 7026.             p1f(1 + $I_L7010_222) = temp(1 + $I_L7010_222, 7)
 7027.             extk(1 + $I_L7010_222, 1, 1, 1) = ( temp(1 + $I_L7010_222, 8) * 1.0/f(1 + $I_L7010_222) )
 7028.             extk(1 + $I_L7010_222, 2, 1, 1) = ( temp(1 + $I_L7010_222, 9) * 1.0/f(1 + $I_L7010_222) )
 7029.             extk(1 + $I_L7010_222, 1, 3, 1) = (cether%base_addr)(ntyp(1 + $I_L7010_222), mon(1 + $I_L7010_222), 1, 0)
 7030.             extk(1 + $I_L7010_222, 1, 3, 2) = (cether%base_addr)(ntyp(1 + $I_L7010_222), mon(1 + $I_L7010_222), 2, 0)
 7031.             extk(1 + $I_L7010_222, 2, 3, 1) = (cether%base_addr)(ntyp(1 + $I_L7010_222), mon(1 + $I_L7010_222), 1, 0)
 7032.             extk(1 + $I_L7010_222, 2, 3, 2) = (cether%base_addr)(ntyp(1 + $I_L7010_222), mon(1 + $I_L7010_222), 2, 0)
 7033.             $I_L7010_222 = 1 + $I_L7010_222
 7010.             if ( $I_L7010_222 >= nmax ) exit
 7010.          enddo
 7039.          $I_L7039_224 = 0
 7039. !dir$ ivdep
 7039.          do
 7040.             $tc4_WR0_R3 = tc(1 + $I_L7039_224) * tc(1 + $I_L7039_224) * tc(1 + $I_L7039_224) * tc(1 + $I_L7039_224)
 7041.             $tg4_WR0_R4 = tg(1 + $I_L7039_224) * tg(1 + $I_L7039_224) * tg(1 + $I_L7039_224) * tg(1 + $I_L7039_224)
 7043.             $zkat_WR0_R5 = ( extk(1 + $I_L7039_224, 1, 3, 2) * zlt2(1 + $I_L7039_224, 1) * 1.0/vcover(1 + $I_L7039_224, 1) )
 7045.             $zkat_WR0_R5 = min( -1.0e-4, max( expcut, -$zkat_WR0_R5 ) )
 7046.             $thermk_WR0_R6 = _expn( $zkat_WR0_R5 )
 7046.             thermk(1 + $I_L7039_224) = $thermk_WR0_R6
 7047.             $fac1_WR0_R7 = vcover(1 + $I_L7039_224, 1) * ( 1.0 + -$thermk_WR0_R6 )
 7056.             $zlwup_WR0_R10 = 5.6699999999999998e-8 * ( $tc4_WR0_R3 * $fac1_WR0_R7 + $tg4_WR0_R4 * ( 1.0 + -( vcover(1 + $I_L7039_224, 1) * ( 1.0 + -$thermk_WR0_R6 ) ) ) )
 7056.             zlwup(1 + $I_L7039_224) = $zlwup_WR0_R10
 7058.             tgeff(1 + $I_L7039_224) = _sqrt( _sqrt( 17636684.30335097 * $zlwup_WR0_R10 ) )
 7050.             closs(1 + $I_L7039_224) = ( ( 1.134e-7 * $tc4_WR0_R3 * $fac1_WR0_R7 ) + -5.6699999999999998e-8 * $tg4_WR0_R4 * $fac1_WR0_R7 )
 7052.             gloss(1 + $I_L7039_224) = ( ( 5.6699999999999998e-8 * $tg4_WR0_R4 ) + -5.6699999999999998e-8 * $tc4_WR0_R3 * $fac1_WR0_R7 )
 7059.             $I_L7039_224 = 1 + $I_L7039_224
 7039.             if ( $I_L7039_224 >= nmax ) exit
 7039.          enddo
 7039.       endif
 7034.       if ( ncols > 0 ) then
 7034.          $I_L7034_232 = 0
 7034. !dir$ ivdep
 7034.          do
 7034.             mon(1 + $I_L7034_232) = monx(1 + $I_L7034_232)
 7034.             $I_L7034_232 = 1 + $I_L7034_232
 7034.             if ( $I_L7034_232 >= ncols ) exit
 7034.          enddo
 7034.       endif
 6666.       _free( t$2193 )
 7060.       return
 7060.       end
 7060.       
 7069.       
 7069.       subroutine vegin( si1, sl1 )
 7126.       cedfu%header%a_contig = 1
 7126.       cedfu%dim_1%LB = 1
 7126.       cedfu%dim_1%EX = 13
 7126.       cedfu%dim_1%SM = 1
 7126.       cedfu%dim_2%LB = 1
 7126.       cedfu%dim_2%EX = 12
 7126.       cedfu%dim_2%SM = 13
 7126.       cedfu%dim_3%LB = 1
 7126.       cedfu%dim_3%EX = 9
 7126.       cedfu%dim_3%SM = 156
 7126.       $_allo_P0(0) = 0x1000000000001L
 7126.       $_allo_P0(1) = loc( cedfu )
 7126.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 7127.       cedir%header%a_contig = 1
 7127.       cedir%dim_1%LB = 1
 7127.       cedir%dim_1%EX = 13
 7127.       cedir%dim_1%SM = 1
 7127.       cedir%dim_2%LB = 1
 7127.       cedir%dim_2%EX = 12
 7127.       cedir%dim_2%SM = 13
 7127.       cedir%dim_3%LB = 1
 7127.       cedir%dim_3%EX = 9
 7127.       cedir%dim_3%SM = 156
 7127.       cedir%dim_4%LB = 1
 7127.       cedir%dim_4%EX = 3
 7127.       cedir%dim_4%SM = 1404
 7127.       $_allo_P1(0) = 0x1000000000001L
 7127.       $_allo_P1(1) = loc( cedir )
 7127.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 7128.       cedfu1%header%a_contig = 1
 7128.       cedfu1%dim_1%LB = 1
 7128.       cedfu1%dim_1%EX = 2
 7128.       cedfu1%dim_1%SM = 1
 7128.       cedfu1%dim_2%LB = 1
 7128.       cedfu1%dim_2%EX = 13
 7128.       cedfu1%dim_2%SM = 2
 7128.       cedfu1%dim_3%LB = 1
 7128.       cedfu1%dim_3%EX = 12
 7128.       cedfu1%dim_3%SM = 26
 7128.       cedfu1%dim_4%LB = 1
 7128.       cedfu1%dim_4%EX = 6
 7128.       cedfu1%dim_4%SM = 312
 7128.       cedfu1%dim_5%LB = 1
 7128.       cedfu1%dim_5%EX = 3
 7128.       cedfu1%dim_5%SM = 1872
 7128.       $_allo_P2(0) = 0x1000000000001L
 7128.       $_allo_P2(1) = loc( cedfu1 )
 7128.       call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 7129.       cedir1%header%a_contig = 1
 7129.       cedir1%dim_1%LB = 1
 7129.       cedir1%dim_1%EX = 2
 7129.       cedir1%dim_1%SM = 1
 7129.       cedir1%dim_2%LB = 1
 7129.       cedir1%dim_2%EX = 13
 7129.       cedir1%dim_2%SM = 2
 7129.       cedir1%dim_3%LB = 1
 7129.       cedir1%dim_3%EX = 12
 7129.       cedir1%dim_3%SM = 26
 7129.       cedir1%dim_4%LB = 1
 7129.       cedir1%dim_4%EX = 6
 7129.       cedir1%dim_4%SM = 312
 7129.       cedir1%dim_5%LB = 1
 7129.       cedir1%dim_5%EX = 3
 7129.       cedir1%dim_5%SM = 1872
 7129.       cedir1%dim_6%LB = 1
 7129.       cedir1%dim_6%EX = 3
 7129.       cedir1%dim_6%SM = 5616
 7129.       $_allo_P3(0) = 0x1000000000001L
 7129.       $_allo_P3(1) = loc( cedir1 )
 7129.       call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 7130.       cedfu2%header%a_contig = 1
 7130.       cedfu2%dim_1%LB = 1
 7130.       cedfu2%dim_1%EX = 2
 7130.       cedfu2%dim_1%SM = 1
 7130.       cedfu2%dim_2%LB = 1
 7130.       cedfu2%dim_2%EX = 13
 7130.       cedfu2%dim_2%SM = 2
 7130.       cedfu2%dim_3%LB = 1
 7130.       cedfu2%dim_3%EX = 12
 7130.       cedfu2%dim_3%SM = 26
 7130.       cedfu2%dim_4%LB = 1
 7130.       cedfu2%dim_4%EX = 6
 7130.       cedfu2%dim_4%SM = 312
 7130.       cedfu2%dim_5%LB = 1
 7130.       cedfu2%dim_5%EX = 3
 7130.       cedfu2%dim_5%SM = 1872
 7130.       $_allo_P4(0) = 0x1000000000001L
 7130.       $_allo_P4(1) = loc( cedfu2 )
 7130.       call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
 7131.       cedir2%header%a_contig = 1
 7131.       cedir2%dim_1%LB = 1
 7131.       cedir2%dim_1%EX = 2
 7131.       cedir2%dim_1%SM = 1
 7131.       cedir2%dim_2%LB = 1
 7131.       cedir2%dim_2%EX = 13
 7131.       cedir2%dim_2%SM = 2
 7131.       cedir2%dim_3%LB = 1
 7131.       cedir2%dim_3%EX = 12
 7131.       cedir2%dim_3%SM = 26
 7131.       cedir2%dim_4%LB = 1
 7131.       cedir2%dim_4%EX = 6
 7131.       cedir2%dim_4%SM = 312
 7131.       cedir2%dim_5%LB = 1
 7131.       cedir2%dim_5%EX = 3
 7131.       cedir2%dim_5%SM = 1872
 7131.       cedir2%dim_6%LB = 1
 7131.       cedir2%dim_6%EX = 3
 7131.       cedir2%dim_6%SM = 5616
 7131.       $_allo_P5(0) = 0x1000000000001L
 7131.       $_allo_P5(1) = loc( cedir2 )
 7131.       call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
 7132.       cledfu%header%a_contig = 1
 7132.       cledfu%dim_1%LB = 1
 7132.       cledfu%dim_1%EX = 13
 7132.       cledfu%dim_1%SM = 1
 7132.       cledfu%dim_2%LB = 1
 7132.       cledfu%dim_2%EX = 12
 7132.       cledfu%dim_2%SM = 13
 7132.       cledfu%dim_3%LB = 1
 7132.       cledfu%dim_3%EX = 9
 7132.       cledfu%dim_3%SM = 156
 7132.       $_allo_P6(0) = 0x1000000000001L
 7132.       $_allo_P6(1) = loc( cledfu )
 7132.       call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
 7133.       cledir%header%a_contig = 1
 7133.       cledir%dim_1%LB = 1
 7133.       cledir%dim_1%EX = 13
 7133.       cledir%dim_1%SM = 1
 7133.       cledir%dim_2%LB = 1
 7133.       cledir%dim_2%EX = 12
 7133.       cledir%dim_2%SM = 13
 7133.       cledir%dim_3%LB = 1
 7133.       cledir%dim_3%EX = 9
 7133.       cledir%dim_3%SM = 156
 7133.       cledir%dim_4%LB = 1
 7133.       cledir%dim_4%EX = 3
 7133.       cledir%dim_4%SM = 1404
 7133.       $_allo_P7(0) = 0x1000000000001L
 7133.       $_allo_P7(1) = loc( cledir )
 7133.       call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
 7134.       xmiu%header%a_contig = 1
 7134.       xmiu%dim_1%LB = 1
 7134.       xmiu%dim_1%EX = 12
 7134.       xmiu%dim_1%SM = 1
 7134.       xmiu%dim_2%LB = 1
 7134.       xmiu%dim_2%EX = 3
 7134.       xmiu%dim_2%SM = 12
 7134.       $_allo_P8(0) = 0x1000000000001L
 7134.       $_allo_P8(1) = loc( xmiu )
 7134.       call __allocate( $_allo_P8, 0, 0, _fcd( 0, 0 ) )
 7135.       cether%header%a_contig = 1
 7135.       cether%dim_1%LB = 1
 7135.       cether%dim_1%EX = 13
 7135.       cether%dim_1%SM = 1
 7135.       cether%dim_2%LB = 1
 7135.       cether%dim_2%EX = 12
 7135.       cether%dim_2%SM = 13
 7135.       cether%dim_3%LB = 1
 7135.       cether%dim_3%EX = 2
 7135.       cether%dim_3%SM = 156
 7135.       $_allo_P9(0) = 0x1000000000001L
 7135.       $_allo_P9(1) = loc( cether )
 7135.       call __allocate( $_allo_P9, 0, 0, _fcd( 0, 0 ) )
 7136.       xmiw%header%a_contig = 1
 7136.       xmiw%dim_1%LB = 1
 7136.       xmiw%dim_1%EX = 12
 7136.       xmiw%dim_1%SM = 1
 7136.       xmiw%dim_2%LB = 1
 7136.       xmiw%dim_2%EX = 3
 7136.       xmiw%dim_2%SM = 12
 7136.       $_allo_P10(0) = 0x1000000000001L
 7136.       $_allo_P10(1) = loc( xmiw )
 7136.       call __allocate( $_allo_P10, 0, 0, _fcd( 0, 0 ) )
 7138.       ystpar%header%a_contig = 1
 7138.       ystpar%dim_1%LB = 1
 7138.       ystpar%dim_1%EX = 2
 7138.       ystpar%dim_1%SM = 1
 7138.       ystpar%dim_2%LB = 1
 7138.       ystpar%dim_2%EX = 3
 7138.       ystpar%dim_2%SM = 2
 7138.       $_allo_P11(0) = 0x1000000000001L
 7138.       $_allo_P11(1) = loc( ystpar )
 7138.       call __allocate( $_allo_P11, 0, 0, _fcd( 0, 0 ) )
 7139.       yopt%header%a_contig = 1
 7139.       yopt%dim_1%LB = 1
 7139.       yopt%dim_1%EX = 2
 7139.       yopt%dim_1%SM = 1
 7139.       $_allo_P12(0) = 0x1000000000001L
 7139.       $_allo_P12(1) = loc( yopt )
 7139.       call __allocate( $_allo_P12, 0, 0, _fcd( 0, 0 ) )
 7140.       yll%header%a_contig = 1
 7140.       yll%dim_1%LB = 1
 7140.       yll%dim_1%EX = 2
 7140.       yll%dim_1%SM = 1
 7140.       $_allo_P13(0) = 0x1000000000001L
 7140.       $_allo_P13(1) = loc( yll )
 7140.       call __allocate( $_allo_P13, 0, 0, _fcd( 0, 0 ) )
 7141.       yu%header%a_contig = 1
 7141.       yu%dim_1%LB = 1
 7141.       yu%dim_1%EX = 2
 7141.       yu%dim_1%SM = 1
 7141.       $_allo_P14(0) = 0x1000000000001L
 7141.       $_allo_P14(1) = loc( yu )
 7141.       call __allocate( $_allo_P14, 0, 0, _fcd( 0, 0 ) )
 7142.       yefac%header%a_contig = 1
 7142.       yefac%dim_1%LB = 1
 7142.       yefac%dim_1%EX = 2
 7142.       yefac%dim_1%SM = 1
 7142.       $_allo_P15(0) = 0x1000000000001L
 7142.       $_allo_P15(1) = loc( yefac )
 7142.       call __allocate( $_allo_P15, 0, 0, _fcd( 0, 0 ) )
 7143.       yh1%header%a_contig = 1
 7143.       yh1%dim_1%LB = 1
 7143.       yh1%dim_1%EX = 2
 7143.       yh1%dim_1%SM = 1
 7143.       $_allo_P16(0) = 0x1000000000001L
 7143.       $_allo_P16(1) = loc( yh1 )
 7143.       call __allocate( $_allo_P16, 0, 0, _fcd( 0, 0 ) )
 7144.       yh2%header%a_contig = 1
 7144.       yh2%dim_1%LB = 1
 7144.       yh2%dim_1%EX = 2
 7144.       yh2%dim_1%SM = 1
 7144.       $_allo_P17(0) = 0x1000000000001L
 7144.       $_allo_P17(1) = loc( yh2 )
 7144.       call __allocate( $_allo_P17, 0, 0, _fcd( 0, 0 ) )
 7145.       yootd%header%a_contig = 1
 7145.       yootd%dim_1%LB = 1
 7145.       yootd%dim_1%EX = 2
 7145.       yootd%dim_1%SM = 1
 7145.       $_allo_P18(0) = 0x1000000000001L
 7145.       $_allo_P18(1) = loc( yootd )
 7145.       call __allocate( $_allo_P18, 0, 0, _fcd( 0, 0 ) )
 7146.       yreen%header%a_contig = 1
 7146.       yreen%dim_1%LB = 1
 7146.       yreen%dim_1%EX = 12
 7146.       yreen%dim_1%SM = 1
 7146.       yreen%dim_2%LB = 1
 7146.       yreen%dim_2%EX = 2
 7146.       yreen%dim_2%SM = 12
 7146.       $_allo_P19(0) = 0x1000000000001L
 7146.       $_allo_P19(1) = loc( yreen )
 7146.       call __allocate( $_allo_P19, 0, 0, _fcd( 0, 0 ) )
 7147.       ycover%header%a_contig = 1
 7147.       ycover%dim_1%LB = 1
 7147.       ycover%dim_1%EX = 12
 7147.       ycover%dim_1%SM = 1
 7147.       ycover%dim_2%LB = 1
 7147.       ycover%dim_2%EX = 2
 7147.       ycover%dim_2%SM = 12
 7147.       $_allo_P20(0) = 0x1000000000001L
 7147.       $_allo_P20(1) = loc( ycover )
 7147.       call __allocate( $_allo_P20, 0, 0, _fcd( 0, 0 ) )
 7148.       ylt%header%a_contig = 1
 7148.       ylt%dim_1%LB = 1
 7148.       ylt%dim_1%EX = 12
 7148.       ylt%dim_1%SM = 1
 7148.       ylt%dim_2%LB = 1
 7148.       ylt%dim_2%EX = 2
 7148.       ylt%dim_2%SM = 12
 7148.       $_allo_P21(0) = 0x1000000000001L
 7148.       $_allo_P21(1) = loc( ylt )
 7148.       call __allocate( $_allo_P21, 0, 0, _fcd( 0, 0 ) )
 7152.       rstpar_fixed%header%a_contig = 1
 7152.       rstpar_fixed%dim_1%LB = 1
 7152.       rstpar_fixed%dim_1%EX = 13
 7152.       rstpar_fixed%dim_1%SM = 1
 7152.       rstpar_fixed%dim_2%LB = 1
 7152.       rstpar_fixed%dim_2%EX = 2
 7152.       rstpar_fixed%dim_2%SM = 13
 7152.       rstpar_fixed%dim_3%LB = 1
 7152.       rstpar_fixed%dim_3%EX = 3
 7152.       rstpar_fixed%dim_3%SM = 26
 7152.       $_allo_P22(0) = 0x1000000000001L
 7152.       $_allo_P22(1) = loc( rstpar_fixed )
 7152.       call __allocate( $_allo_P22, 0, 0, _fcd( 0, 0 ) )
 7153.       chil_fixed%header%a_contig = 1
 7153.       chil_fixed%dim_1%LB = 1
 7153.       chil_fixed%dim_1%EX = 13
 7153.       chil_fixed%dim_1%SM = 1
 7153.       chil_fixed%dim_2%LB = 1
 7153.       chil_fixed%dim_2%EX = 2
 7153.       chil_fixed%dim_2%SM = 13
 7153.       $_allo_P23(0) = 0x1000000000001L
 7153.       $_allo_P23(1) = loc( chil_fixed )
 7153.       call __allocate( $_allo_P23, 0, 0, _fcd( 0, 0 ) )
 7154.       topt_fixed%header%a_contig = 1
 7154.       topt_fixed%dim_1%LB = 1
 7154.       topt_fixed%dim_1%EX = 13
 7154.       topt_fixed%dim_1%SM = 1
 7154.       topt_fixed%dim_2%LB = 1
 7154.       topt_fixed%dim_2%EX = 2
 7154.       topt_fixed%dim_2%SM = 13
 7154.       $_allo_P24(0) = 0x1000000000001L
 7154.       $_allo_P24(1) = loc( topt_fixed )
 7154.       call __allocate( $_allo_P24, 0, 0, _fcd( 0, 0 ) )
 7155.       tll_fixed%header%a_contig = 1
 7155.       tll_fixed%dim_1%LB = 1
 7155.       tll_fixed%dim_1%EX = 13
 7155.       tll_fixed%dim_1%SM = 1
 7155.       tll_fixed%dim_2%LB = 1
 7155.       tll_fixed%dim_2%EX = 2
 7155.       tll_fixed%dim_2%SM = 13
 7155.       $_allo_P25(0) = 0x1000000000001L
 7155.       $_allo_P25(1) = loc( tll_fixed )
 7155.       call __allocate( $_allo_P25, 0, 0, _fcd( 0, 0 ) )
 7156.       tu_fixed%header%a_contig = 1
 7156.       tu_fixed%dim_1%LB = 1
 7156.       tu_fixed%dim_1%EX = 13
 7156.       tu_fixed%dim_1%SM = 1
 7156.       tu_fixed%dim_2%LB = 1
 7156.       tu_fixed%dim_2%EX = 2
 7156.       tu_fixed%dim_2%SM = 13
 7156.       $_allo_P26(0) = 0x1000000000001L
 7156.       $_allo_P26(1) = loc( tu_fixed )
 7156.       call __allocate( $_allo_P26, 0, 0, _fcd( 0, 0 ) )
 7157.       defac_fixed%header%a_contig = 1
 7157.       defac_fixed%dim_1%LB = 1
 7157.       defac_fixed%dim_1%EX = 13
 7157.       defac_fixed%dim_1%SM = 1
 7157.       defac_fixed%dim_2%LB = 1
 7157.       defac_fixed%dim_2%EX = 2
 7157.       defac_fixed%dim_2%SM = 13
 7157.       $_allo_P27(0) = 0x1000000000001L
 7157.       $_allo_P27(1) = loc( defac_fixed )
 7157.       call __allocate( $_allo_P27, 0, 0, _fcd( 0, 0 ) )
 7158.       ph1_fixed%header%a_contig = 1
 7158.       ph1_fixed%dim_1%LB = 1
 7158.       ph1_fixed%dim_1%EX = 13
 7158.       ph1_fixed%dim_1%SM = 1
 7158.       ph1_fixed%dim_2%LB = 1
 7158.       ph1_fixed%dim_2%EX = 2
 7158.       ph1_fixed%dim_2%SM = 13
 7158.       $_allo_P28(0) = 0x1000000000001L
 7158.       $_allo_P28(1) = loc( ph1_fixed )
 7158.       call __allocate( $_allo_P28, 0, 0, _fcd( 0, 0 ) )
 7159.       ph2_fixed%header%a_contig = 1
 7159.       ph2_fixed%dim_1%LB = 1
 7159.       ph2_fixed%dim_1%EX = 13
 7159.       ph2_fixed%dim_1%SM = 1
 7159.       ph2_fixed%dim_2%LB = 1
 7159.       ph2_fixed%dim_2%EX = 2
 7159.       ph2_fixed%dim_2%SM = 13
 7159.       $_allo_P29(0) = 0x1000000000001L
 7159.       $_allo_P29(1) = loc( ph2_fixed )
 7159.       call __allocate( $_allo_P29, 0, 0, _fcd( 0, 0 ) )
 7160.       rootd%header%a_contig = 1
 7160.       rootd%dim_1%LB = 1
 7160.       rootd%dim_1%EX = 13
 7160.       rootd%dim_1%SM = 1
 7160.       rootd%dim_2%LB = 1
 7160.       rootd%dim_2%EX = 2
 7160.       rootd%dim_2%SM = 13
 7160.       $_allo_P30(0) = 0x1000000000001L
 7160.       $_allo_P30(1) = loc( rootd )
 7160.       call __allocate( $_allo_P30, 0, 0, _fcd( 0, 0 ) )
 7161.       bee%header%a_contig = 1
 7161.       bee%dim_1%LB = 1
 7161.       bee%dim_1%EX = 13
 7161.       bee%dim_1%SM = 1
 7161.       $_allo_P31(0) = 0x1000000000001L
 7161.       $_allo_P31(1) = loc( bee )
 7161.       call __allocate( $_allo_P31, 0, 0, _fcd( 0, 0 ) )
 7162.       phsat%header%a_contig = 1
 7162.       phsat%dim_1%LB = 1
 7162.       phsat%dim_1%EX = 13
 7162.       phsat%dim_1%SM = 1
 7162.       $_allo_P32(0) = 0x1000000000001L
 7162.       $_allo_P32(1) = loc( phsat )
 7162.       call __allocate( $_allo_P32, 0, 0, _fcd( 0, 0 ) )
 7163.       satco%header%a_contig = 1
 7163.       satco%dim_1%LB = 1
 7163.       satco%dim_1%EX = 13
 7163.       satco%dim_1%SM = 1
 7163.       $_allo_P33(0) = 0x1000000000001L
 7163.       $_allo_P33(1) = loc( satco )
 7163.       call __allocate( $_allo_P33, 0, 0, _fcd( 0, 0 ) )
 7164.       poros%header%a_contig = 1
 7164.       poros%dim_1%LB = 1
 7164.       poros%dim_1%EX = 13
 7164.       poros%dim_1%SM = 1
 7164.       $_allo_P34(0) = 0x1000000000001L
 7164.       $_allo_P34(1) = loc( poros )
 7164.       call __allocate( $_allo_P34, 0, 0, _fcd( 0, 0 ) )
 7165.       zdepth%header%a_contig = 1
 7165.       zdepth%dim_1%LB = 1
 7165.       zdepth%dim_1%EX = 13
 7165.       zdepth%dim_1%SM = 1
 7165.       zdepth%dim_2%LB = 1
 7165.       zdepth%dim_2%EX = 3
 7165.       zdepth%dim_2%SM = 13
 7165.       $_allo_P35(0) = 0x1000000000001L
 7165.       $_allo_P35(1) = loc( zdepth )
 7165.       call __allocate( $_allo_P35, 0, 0, _fcd( 0, 0 ) )
 7166.       green_fixed%header%a_contig = 1
 7166.       green_fixed%dim_1%LB = 1
 7166.       green_fixed%dim_1%EX = 13
 7166.       green_fixed%dim_1%SM = 1
 7166.       green_fixed%dim_2%LB = 1
 7166.       green_fixed%dim_2%EX = 12
 7166.       green_fixed%dim_2%SM = 13
 7166.       green_fixed%dim_3%LB = 1
 7166.       green_fixed%dim_3%EX = 2
 7166.       green_fixed%dim_3%SM = 156
 7166.       $_allo_P36(0) = 0x1000000000001L
 7166.       $_allo_P36(1) = loc( green_fixed )
 7166.       call __allocate( $_allo_P36, 0, 0, _fcd( 0, 0 ) )
 7167.       xcover_fixed%header%a_contig = 1
 7167.       xcover_fixed%dim_1%LB = 1
 7167.       xcover_fixed%dim_1%EX = 13
 7167.       xcover_fixed%dim_1%SM = 1
 7167.       xcover_fixed%dim_2%LB = 1
 7167.       xcover_fixed%dim_2%EX = 12
 7167.       xcover_fixed%dim_2%SM = 13
 7167.       xcover_fixed%dim_3%LB = 1
 7167.       xcover_fixed%dim_3%EX = 2
 7167.       xcover_fixed%dim_3%SM = 156
 7167.       $_allo_P37(0) = 0x1000000000001L
 7167.       $_allo_P37(1) = loc( xcover_fixed )
 7167.       call __allocate( $_allo_P37, 0, 0, _fcd( 0, 0 ) )
 7168.       zlt_fixed%header%a_contig = 1
 7168.       zlt_fixed%dim_1%LB = 1
 7168.       zlt_fixed%dim_1%EX = 13
 7168.       zlt_fixed%dim_1%SM = 1
 7168.       zlt_fixed%dim_2%LB = 1
 7168.       zlt_fixed%dim_2%EX = 12
 7168.       zlt_fixed%dim_2%SM = 13
 7168.       zlt_fixed%dim_3%LB = 1
 7168.       zlt_fixed%dim_3%EX = 2
 7168.       zlt_fixed%dim_3%SM = 156
 7168.       $_allo_P38(0) = 0x1000000000001L
 7168.       $_allo_P38(1) = loc( zlt_fixed )
 7168.       call __allocate( $_allo_P38, 0, 0, _fcd( 0, 0 ) )
 7169.       x0x%header%a_contig = 1
 7169.       x0x%dim_1%LB = 1
 7169.       x0x%dim_1%EX = 13
 7169.       x0x%dim_1%SM = 1
 7169.       x0x%dim_2%LB = 1
 7169.       x0x%dim_2%EX = 12
 7169.       x0x%dim_2%SM = 13
 7169.       $_allo_P39(0) = 0x1000000000001L
 7169.       $_allo_P39(1) = loc( x0x )
 7169.       call __allocate( $_allo_P39, 0, 0, _fcd( 0, 0 ) )
 7170.       xd%header%a_contig = 1
 7170.       xd%dim_1%LB = 1
 7170.       xd%dim_1%EX = 13
 7170.       xd%dim_1%SM = 1
 7170.       xd%dim_2%LB = 1
 7170.       xd%dim_2%EX = 12
 7170.       xd%dim_2%SM = 13
 7170.       $_allo_P40(0) = 0x1000000000001L
 7170.       $_allo_P40(1) = loc( xd )
 7170.       call __allocate( $_allo_P40, 0, 0, _fcd( 0, 0 ) )
 7171.       z2%header%a_contig = 1
 7171.       z2%dim_1%LB = 1
 7171.       z2%dim_1%EX = 13
 7171.       z2%dim_1%SM = 1
 7171.       z2%dim_2%LB = 1
 7171.       z2%dim_2%EX = 12
 7171.       z2%dim_2%SM = 13
 7171.       $_allo_P41(0) = 0x1000000000001L
 7171.       $_allo_P41(1) = loc( z2 )
 7171.       call __allocate( $_allo_P41, 0, 0, _fcd( 0, 0 ) )
 7172.       z1%header%a_contig = 1
 7172.       z1%dim_1%LB = 1
 7172.       z1%dim_1%EX = 13
 7172.       z1%dim_1%SM = 1
 7172.       z1%dim_2%LB = 1
 7172.       z1%dim_2%EX = 12
 7172.       z1%dim_2%SM = 13
 7172.       $_allo_P42(0) = 0x1000000000001L
 7172.       $_allo_P42(1) = loc( z1 )
 7172.       call __allocate( $_allo_P42, 0, 0, _fcd( 0, 0 ) )
 7173.       xdc%header%a_contig = 1
 7173.       xdc%dim_1%LB = 1
 7173.       xdc%dim_1%EX = 13
 7173.       xdc%dim_1%SM = 1
 7173.       xdc%dim_2%LB = 1
 7173.       xdc%dim_2%EX = 12
 7173.       xdc%dim_2%SM = 13
 7173.       $_allo_P43(0) = 0x1000000000001L
 7173.       $_allo_P43(1) = loc( xdc )
 7173.       call __allocate( $_allo_P43, 0, 0, _fcd( 0, 0 ) )
 7174.       xbc%header%a_contig = 1
 7174.       xbc%dim_1%LB = 1
 7174.       xbc%dim_1%EX = 13
 7174.       xbc%dim_1%SM = 1
 7174.       xbc%dim_2%LB = 1
 7174.       xbc%dim_2%EX = 12
 7174.       xbc%dim_2%SM = 13
 7174.       $_allo_P44(0) = 0x1000000000001L
 7174.       $_allo_P44(1) = loc( xbc )
 7174.       call __allocate( $_allo_P44, 0, 0, _fcd( 0, 0 ) )
 7175.       zlt%header%a_contig = 1
 7175.       zlt%dim_1%LB = 1
 7175.       zlt%dim_1%EX = 13
 7175.       zlt%dim_1%SM = 1
 7175.       zlt%dim_2%LB = 1
 7175.       zlt%dim_2%EX = 12
 7175.       zlt%dim_2%SM = 13
 7175.       zlt%dim_3%LB = 1
 7175.       zlt%dim_3%EX = 2
 7175.       zlt%dim_3%SM = 156
 7175.       $_allo_P45(0) = 0x1000000000001L
 7175.       $_allo_P45(1) = loc( zlt )
 7175.       call __allocate( $_allo_P45, 0, 0, _fcd( 0, 0 ) )
 7176.       xcover%header%a_contig = 1
 7176.       xcover%dim_1%LB = 1
 7176.       xcover%dim_1%EX = 13
 7176.       xcover%dim_1%SM = 1
 7176.       xcover%dim_2%LB = 1
 7176.       xcover%dim_2%EX = 12
 7176.       xcover%dim_2%SM = 13
 7176.       xcover%dim_3%LB = 1
 7176.       xcover%dim_3%EX = 2
 7176.       xcover%dim_3%SM = 156
 7176.       $_allo_P46(0) = 0x1000000000001L
 7176.       $_allo_P46(1) = loc( xcover )
 7176.       call __allocate( $_allo_P46, 0, 0, _fcd( 0, 0 ) )
 7177.       ph2%header%a_contig = 1
 7177.       ph2%dim_1%LB = 1
 7177.       ph2%dim_1%EX = 13
 7177.       ph2%dim_1%SM = 1
 7177.       ph2%dim_2%LB = 1
 7177.       ph2%dim_2%EX = 2
 7177.       ph2%dim_2%SM = 13
 7177.       $_allo_P47(0) = 0x1000000000001L
 7177.       $_allo_P47(1) = loc( ph2 )
 7177.       call __allocate( $_allo_P47, 0, 0, _fcd( 0, 0 ) )
 7178.       ph1%header%a_contig = 1
 7178.       ph1%dim_1%LB = 1
 7178.       ph1%dim_1%EX = 13
 7178.       ph1%dim_1%SM = 1
 7178.       ph1%dim_2%LB = 1
 7178.       ph1%dim_2%EX = 2
 7178.       ph1%dim_2%SM = 13
 7178.       $_allo_P48(0) = 0x1000000000001L
 7178.       $_allo_P48(1) = loc( ph1 )
 7178.       call __allocate( $_allo_P48, 0, 0, _fcd( 0, 0 ) )
 7179.       green%header%a_contig = 1
 7179.       green%dim_1%LB = 1
 7179.       green%dim_1%EX = 13
 7179.       green%dim_1%SM = 1
 7179.       green%dim_2%LB = 1
 7179.       green%dim_2%EX = 12
 7179.       green%dim_2%SM = 13
 7179.       green%dim_3%LB = 1
 7179.       green%dim_3%EX = 2
 7179.       green%dim_3%SM = 156
 7179.       $_allo_P49(0) = 0x1000000000001L
 7179.       $_allo_P49(1) = loc( green )
 7179.       call __allocate( $_allo_P49, 0, 0, _fcd( 0, 0 ) )
 7180.       defac%header%a_contig = 1
 7180.       defac%dim_1%LB = 1
 7180.       defac%dim_1%EX = 13
 7180.       defac%dim_1%SM = 1
 7180.       defac%dim_2%LB = 1
 7180.       defac%dim_2%EX = 2
 7180.       defac%dim_2%SM = 13
 7180.       $_allo_P50(0) = 0x1000000000001L
 7180.       $_allo_P50(1) = loc( defac )
 7180.       call __allocate( $_allo_P50, 0, 0, _fcd( 0, 0 ) )
 7181.       tu%header%a_contig = 1
 7181.       tu%dim_1%LB = 1
 7181.       tu%dim_1%EX = 13
 7181.       tu%dim_1%SM = 1
 7181.       tu%dim_2%LB = 1
 7181.       tu%dim_2%EX = 2
 7181.       tu%dim_2%SM = 13
 7181.       $_allo_P51(0) = 0x1000000000001L
 7181.       $_allo_P51(1) = loc( tu )
 7181.       call __allocate( $_allo_P51, 0, 0, _fcd( 0, 0 ) )
 7182.       tll%header%a_contig = 1
 7182.       tll%dim_1%LB = 1
 7182.       tll%dim_1%EX = 13
 7182.       tll%dim_1%SM = 1
 7182.       tll%dim_2%LB = 1
 7182.       tll%dim_2%EX = 2
 7182.       tll%dim_2%SM = 13
 7182.       $_allo_P52(0) = 0x1000000000001L
 7182.       $_allo_P52(1) = loc( tll )
 7182.       call __allocate( $_allo_P52, 0, 0, _fcd( 0, 0 ) )
 7183.       topt%header%a_contig = 1
 7183.       topt%dim_1%LB = 1
 7183.       topt%dim_1%EX = 13
 7183.       topt%dim_1%SM = 1
 7183.       topt%dim_2%LB = 1
 7183.       topt%dim_2%EX = 2
 7183.       topt%dim_2%SM = 13
 7183.       $_allo_P53(0) = 0x1000000000001L
 7183.       $_allo_P53(1) = loc( topt )
 7183.       call __allocate( $_allo_P53, 0, 0, _fcd( 0, 0 ) )
 7184.       rstpar%header%a_contig = 1
 7184.       rstpar%dim_1%LB = 1
 7184.       rstpar%dim_1%EX = 13
 7184.       rstpar%dim_1%SM = 1
 7184.       rstpar%dim_2%LB = 1
 7184.       rstpar%dim_2%EX = 2
 7184.       rstpar%dim_2%SM = 13
 7184.       rstpar%dim_3%LB = 1
 7184.       rstpar%dim_3%EX = 3
 7184.       rstpar%dim_3%SM = 26
 7184.       $_allo_P54(0) = 0x1000000000001L
 7184.       $_allo_P54(1) = loc( rstpar )
 7184.       call __allocate( $_allo_P54, 0, 0, _fcd( 0, 0 ) )
 7185.       chil%header%a_contig = 1
 7185.       chil%dim_1%LB = 1
 7185.       chil%dim_1%EX = 13
 7185.       chil%dim_1%SM = 1
 7185.       chil%dim_2%LB = 1
 7185.       chil%dim_2%EX = 2
 7185.       chil%dim_2%SM = 13
 7185.       $_allo_P55(0) = 0x1000000000001L
 7185.       $_allo_P55(1) = loc( chil )
 7185.       call __allocate( $_allo_P55, 0, 0, _fcd( 0, 0 ) )
 7188.       ierr = 0
 7187.       t$3282 = nfsibd
 7188.        _substr(t$3283,1,4) = 'OLD'
 7187.        _substr(t$3284,1,10) = 'SEQUENTIAL'
 7187.        _substr(t$3285,1,11) = 'UNFORMATTED'
 7188.        _substr(t$3286,1,4) = 'READ'
 7187.       t$3287(1) = 0x100000000000000L
 7187. !dir$ suppress t$3282
 7187.       t$3287(2) = int( loc( t$3282 ), 8 )
 7187. !dir$ suppress ierr
 7187.       t$3287(3) = int( loc( ierr ), 8 )
 7187.       t$3287(4) = 0
 7187. !dir$ suppress  _substr(fnamesibveg,1,_ltrim(  _substr(fnamesibveg,1,200) ))
 7187.       t$3287(5) = int( loc(  _substr(fnamesibveg,1,_ltrim(  _substr(fnamesibveg,1,200) )) ), 8 )
 7187.       t$3287(6) = _ltrim(  _substr(fnamesibveg,1,200) )
 7187. !dir$ suppress  _substr(t$3283,1,3)
 7187.       t$3287(7) = int( loc(  _substr(t$3283,1,3) ), 8 )
 7187.       t$3287(8) = 3
 7187. !dir$ suppress  _substr(t$3284,1,10)
 7187.       t$3287(9) = int( loc(  _substr(t$3284,1,10) ), 8 )
 7187.       t$3287(10) = 10
 7187. !dir$ suppress  _substr(t$3285,1,11)
 7187.       t$3287(11) = int( loc(  _substr(t$3285,1,11) ), 8 )
 7187.       t$3287(12) = 11
 7187.       t$3287(13) = 0
 7187.       t$3287(14) = 0
 7187.       t$3287(16) = 0
 7187. !dir$ suppress  _substr(t$3286,1,4)
 7187.       t$3287(18) = int( loc(  _substr(t$3286,1,4) ), 8 )
 7187.       t$3287(19) = 4
 7187.       t$3287(20) = 0
 7187.       t$3287(22) = 0
 7187.       t$3287(24) = 0x2000200000000L
 7187.       t$3287(25) = 0
 7187.       t$3287(27) = 0
 7187.       t$3287(29) = 0
 7187.       t$3287(31) = 0
 7187.       t$3287(33) = 0
 7187.       t$3287(35) = 0
 7187.       t$3281 = _open( t$3287 )
 7189.       if ( ierr /= 0 ) then
 7190.          $Unit_temp_O0 = nfprt
 7190.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$1363,  _substr(t$1362,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamesibveg,1,_ltrim(  _substr(fnamesibveg,1,200) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 7192.           _substr(t$3288,1,11) = '**(ERROR)**'
 7192.          call _stop(  _substr(t$3288,1,11) )
 7192.       else
 7196.          ierr = 0
 7195.          t$3282 = nfalb
 7196.           _substr(t$3290,1,4) = 'OLD'
 7195.           _substr(t$3291,1,10) = 'SEQUENTIAL'
 7195.           _substr(t$3292,1,11) = 'UNFORMATTED'
 7196.           _substr(t$3293,1,4) = 'READ'
 7195.          t$3294(1) = 0x100000000000000L
 7195. !dir$ suppress t$3282
 7195.          t$3294(2) = int( loc( t$3282 ), 8 )
 7195. !dir$ suppress ierr
 7195.          t$3294(3) = int( loc( ierr ), 8 )
 7195.          t$3294(4) = 0
 7195. !dir$ suppress  _substr(fnamesibalb,1,_ltrim(  _substr(fnamesibalb,1,200) ))
 7195.          t$3294(5) = int( loc(  _substr(fnamesibalb,1,_ltrim(  _substr(fnamesibalb,1,200) )) ), 8 )
 7195.          t$3294(6) = _ltrim(  _substr(fnamesibalb,1,200) )
 7195. !dir$ suppress  _substr(t$3290,1,3)
 7195.          t$3294(7) = int( loc(  _substr(t$3290,1,3) ), 8 )
 7195.          t$3294(8) = 3
 7195. !dir$ suppress  _substr(t$3291,1,10)
 7195.          t$3294(9) = int( loc(  _substr(t$3291,1,10) ), 8 )
 7195.          t$3294(10) = 10
 7195. !dir$ suppress  _substr(t$3292,1,11)
 7195.          t$3294(11) = int( loc(  _substr(t$3292,1,11) ), 8 )
 7195.          t$3294(12) = 11
 7195.          t$3294(13) = 0
 7195.          t$3294(14) = 0
 7195.          t$3294(16) = 0
 7195. !dir$ suppress  _substr(t$3293,1,4)
 7195.          t$3294(18) = int( loc(  _substr(t$3293,1,4) ), 8 )
 7195.          t$3294(19) = 4
 7195.          t$3294(20) = 0
 7195.          t$3294(22) = 0
 7195.          t$3294(24) = 0x2000200000000L
 7195.          t$3294(25) = 0
 7195.          t$3294(27) = 0
 7195.          t$3294(29) = 0
 7195.          t$3294(31) = 0
 7195.          t$3294(33) = 0
 7195.          t$3294(35) = 0
 7195.          t$3289 = _open( t$3294 )
 7197.          if ( ierr /= 0 ) then
 7198.             $Unit_temp_O1 = nfprt
 7198.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$1365,  _substr(t$1364,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamesibalb,1,_ltrim(  _substr(fnamesibalb,1,200) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 7200.              _substr(t$3295,1,11) = '**(ERROR)**'
 7200.             call _stop(  _substr(t$3295,1,11) )
 7200.          else
 7203.             $Unit_temp_O2 = nfsibd
 7203.             _uread( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)rstpar_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( (&)chil_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)topt_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)tll_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)tu_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)defac_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)ph1_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)ph2_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)rootd_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)bee_r4(+:( 1, 13, 1 )), 0x402060300000000L ), _iotype( (&)phsat_r4(+:( 1, 13, 1 )), 0x402060300000000L ), _iotype( (&)satco_r4(+:( 1, 13, 1 )), 0x402060300000000L ), _iotype( (&)poros_r4(+:( 1, 13, 1 )), 0x402060300000000L ), _iotype( (&)zdepth_r4(+:( 1, 13, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ) ) )
 7205.             $Unit_temp_O3 = nfsibd
 7205.             _uread( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)green_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)xcover_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)zlt_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)x0x_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 )), 0x402060300000000L ), _iotype( (&)xd_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 )), 0x402060300000000L ), _iotype( (&)z2_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 )), 0x402060300000000L ), _iotype( (&)z1_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 )), 0x402060300000000L ), _iotype( (&)xdc_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 )), 0x402060300000000L ), _iotype( (&)xbc_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 )), 0x402060300000000L ) ) )
 7207.             $I_L7207_142 = 0
 7207. !dir$ ivdep
 7207.             do
 7207.                (rstpar_fixed%base_addr)(rstpar_fixed%dim_1%LB + $I_L7207_142, rstpar_fixed%dim_2%LB, rstpar_fixed%dim_3%LB, 0) = real( rstpar_r4(1 + $I_L7207_142, 1, 1), 8 )
 7207.                $I_L7207_142 = 1 + $I_L7207_142
 7207.                if ( $I_L7207_142 >= 78 ) exit
 7207.             enddo
 7208.             $I_L7208_186 = 0
 7208.             do
 7208.                $I_L7208_144 = 0
 7208. !dir$ ivdep
 7208.                do
 7208.                   (chil_fixed%base_addr)(chil_fixed%dim_1%LB + $I_L7208_144, chil_fixed%dim_2%LB + $I_L7208_186, 0) = real( chil_r4(1 + $I_L7208_144, 1 + $I_L7208_186), 8 )
 7209.                   (topt_fixed%base_addr)(topt_fixed%dim_1%LB + $I_L7208_144, topt_fixed%dim_2%LB + $I_L7208_186, 0) = real( topt_r4(1 + $I_L7208_144, 1 + $I_L7208_186), 8 )
 7210.                   (tll_fixed%base_addr)(tll_fixed%dim_1%LB + $I_L7208_144, tll_fixed%dim_2%LB + $I_L7208_186, 0) = real( tll_r4(1 + $I_L7208_144, 1 + $I_L7208_186), 8 )
 7211.                   (tu_fixed%base_addr)(tu_fixed%dim_1%LB + $I_L7208_144, tu_fixed%dim_2%LB + $I_L7208_186, 0) = real( tu_r4(1 + $I_L7208_144, 1 + $I_L7208_186), 8 )
 7212.                   (defac_fixed%base_addr)(defac_fixed%dim_1%LB + $I_L7208_144, defac_fixed%dim_2%LB + $I_L7208_186, 0) = real( defac_r4(1 + $I_L7208_144, 1 + $I_L7208_186), 8 )
 7213.                   (ph1_fixed%base_addr)(ph1_fixed%dim_1%LB + $I_L7208_144, ph1_fixed%dim_2%LB + $I_L7208_186, 0) = real( ph1_r4(1 + $I_L7208_144, 1 + $I_L7208_186), 8 )
 7208.                   $I_L7208_144 = 1 + $I_L7208_144
 7208.                   if ( $I_L7208_144 >= 13 ) exit
 7208.                enddo
 7214.                $I_L7214_146 = 0
 7214. !dir$ ivdep
 7214.                do
 7214.                   (ph2_fixed%base_addr)(ph2_fixed%dim_1%LB + $I_L7214_146, ph2_fixed%dim_2%LB + $I_L7208_186, 0) = real( ph2_r4(1 + $I_L7214_146, 1 + $I_L7208_186), 8 )
 7214.                   $I_L7214_146 = 1 + $I_L7214_146
 7214.                   if ( $I_L7214_146 >= 13 ) exit
 7214.                enddo
 7208.                $I_L7208_186 = 1 + $I_L7208_186
 7208.                if ( $I_L7208_186 >= 2 ) exit
 7208.             enddo
 7215.             $I_L7215_148 = 0
 7215. !dir$ ivdep
 7215.             do
 7215.                (rootd%base_addr)(rootd%dim_1%LB + $I_L7215_148, rootd%dim_2%LB, 0) = real( rootd_r4(1 + $I_L7215_148, 1), 8 )
 7215.                $I_L7215_148 = 1 + $I_L7215_148
 7215.                if ( $I_L7215_148 >= 26 ) exit
 7215.             enddo
 7216.             $I_L7216_150 = 0
 7216. !dir$ ivdep
 7216.             do
 7216.                (bee%base_addr)(bee%dim_1%LB + $I_L7216_150, 0) = real( bee_r4(1 + $I_L7216_150), 8 )
 7217.                (phsat%base_addr)(phsat%dim_1%LB + $I_L7216_150, 0) = real( phsat_r4(1 + $I_L7216_150), 8 )
 7218.                (satco%base_addr)(satco%dim_1%LB + $I_L7216_150, 0) = real( satco_r4(1 + $I_L7216_150), 8 )
 7219.                (poros%base_addr)(poros%dim_1%LB + $I_L7216_150, 0) = real( poros_r4(1 + $I_L7216_150), 8 )
 7216.                $I_L7216_150 = 1 + $I_L7216_150
 7216.                if ( $I_L7216_150 >= 13 ) exit
 7216.             enddo
 7220.             $I_L7220_152 = 0
 7220. !dir$ ivdep
 7220.             do
 7220.                (zdepth%base_addr)(zdepth%dim_1%LB + $I_L7220_152, zdepth%dim_2%LB, 0) = real( zdepth_r4(1 + $I_L7220_152, 1), 8 )
 7220.                $I_L7220_152 = 1 + $I_L7220_152
 7220.                if ( $I_L7220_152 >= 39 ) exit
 7220.             enddo
 7221.             $I_L7221_154 = 0
 7221. !dir$ ivdep
 7221.             do
 7221.                (green_fixed%base_addr)(green_fixed%dim_1%LB + $I_L7221_154, green_fixed%dim_2%LB, green_fixed%dim_3%LB, 0) = real( green_r4(1 + $I_L7221_154, 1, 1), 8 )
 7222.                (xcover_fixed%base_addr)(xcover_fixed%dim_1%LB + $I_L7221_154, xcover_fixed%dim_2%LB, xcover_fixed%dim_3%LB, 0) = real( xcover_r4(1 + $I_L7221_154, 1, 1), 8 )
 7223.                (zlt_fixed%base_addr)(zlt_fixed%dim_1%LB + $I_L7221_154, zlt_fixed%dim_2%LB, zlt_fixed%dim_3%LB, 0) = real( zlt_r4(1 + $I_L7221_154, 1, 1), 8 )
 7221.                $I_L7221_154 = 1 + $I_L7221_154
 7221.                if ( $I_L7221_154 >= 312 ) exit
 7221.             enddo
 7224.             $I_L7224_156 = 0
 7224. !dir$ ivdep
 7224.             do
 7224.                (x0x%base_addr)(x0x%dim_1%LB + $I_L7224_156, x0x%dim_2%LB, 0) = real( x0x_r4(1 + $I_L7224_156, 1), 8 )
 7225.                (xd%base_addr)(xd%dim_1%LB + $I_L7224_156, xd%dim_2%LB, 0) = real( xd_r4(1 + $I_L7224_156, 1), 8 )
 7226.                (z2%base_addr)(z2%dim_1%LB + $I_L7224_156, z2%dim_2%LB, 0) = real( z2_r4(1 + $I_L7224_156, 1), 8 )
 7227.                (z1%base_addr)(z1%dim_1%LB + $I_L7224_156, z1%dim_2%LB, 0) = real( z1_r4(1 + $I_L7224_156, 1), 8 )
 7228.                (xdc%base_addr)(xdc%dim_1%LB + $I_L7224_156, xdc%dim_2%LB, 0) = real( xdc_r4(1 + $I_L7224_156, 1), 8 )
 7229.                (xbc%base_addr)(xbc%dim_1%LB + $I_L7224_156, xbc%dim_2%LB, 0) = real( xbc_r4(1 + $I_L7224_156, 1), 8 )
 7224.                $I_L7224_156 = 1 + $I_L7224_156
 7224.                if ( $I_L7224_156 >= 156 ) exit
 7224.             enddo
 7231.             $Unit_temp_O4 = nfalb
 7231.             _uread( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)cedfu_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 9, 1 )), 0x402060300000000L ), _iotype( (&)cedir_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 9, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( (&)cedfu1_r4(+:( 1, 2, 1 ), +:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 6, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( (&)cedir1_r4(+:( 1, 2, 1 ), +:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 6, 1 ), +:( 1, 3, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( (&)cedfu2_r4(+:( 1, 2, 1 ), +:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 6, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( (&)cedir2_r4(+:( 1, 2, 1 ), +:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 6, 1 ), +:( 1, 3, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( (&)cledfu_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 9, 1 )), 0x402060300000000L ), _iotype( (&)cledir_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 9, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( (&)xmiu_r4(+:( 1, 12, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( (&)cether_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)xmiw_r4(+:( 1, 12, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ) ) )
 7233.             $I_L7233_158 = 0
 7233. !dir$ ivdep
 7233. !dir$ loop_info (automatic) cache_nt( cledfu_r4, cedfu_r4 )
 7233.             do
 7233.                (cedfu%base_addr)(cedfu%dim_1%LB + $I_L7233_158, cedfu%dim_2%LB, cedfu%dim_3%LB, 0) = real( cedfu_r4(1 + $I_L7233_158, 1, 1), 8 )
 7239.                (cledfu%base_addr)(cledfu%dim_1%LB + $I_L7233_158, cledfu%dim_2%LB, cledfu%dim_3%LB, 0) = real( cledfu_r4(1 + $I_L7233_158, 1, 1), 8 )
 7233.                $I_L7233_158 = 1 + $I_L7233_158
 7233.                if ( $I_L7233_158 >= 1404 ) exit
 7233.             enddo
 7234.             $I_L7234_188 = 0
 7234.             do
 7234.                $I_L7234_160 = 0
 7234. !dir$ ivdep
 7234. !dir$ loop_info (automatic) cache_nt( cledir_r4, cedir_r4 )
 7234.                do
 7234.                   (cedir%base_addr)(cedir%dim_1%LB + $I_L7234_160, cedir%dim_2%LB, cedir%dim_3%LB, cedir%dim_4%LB + $I_L7234_188, 0) = real( cedir_r4(1 + $I_L7234_160, 1, 1, 1 + $I_L7234_188), 8 )
 7240.                   (cledir%base_addr)(cledir%dim_1%LB + $I_L7234_160, cledir%dim_2%LB, cledir%dim_3%LB, cledir%dim_4%LB + $I_L7234_188, 0) = real( cledir_r4(1 + $I_L7234_160, 1, 1, 1 + $I_L7234_188), 8 )
 7234.                   $I_L7234_160 = 1 + $I_L7234_160
 7234.                   if ( $I_L7234_160 >= 1404 ) exit
 7234.                enddo
 7235.                $I_L7235_162 = 0
 7235. !dir$ ivdep
 7235. !dir$ loop_info (automatic) cache_nt( cedfu1_r4 )
 7235.                do
 7235.                   (cedfu1%base_addr)(cedfu1%dim_1%LB + $I_L7235_162, cedfu1%dim_2%LB, cedfu1%dim_3%LB, cedfu1%dim_4%LB, cedfu1%dim_5%LB + $I_L7234_188, 0) = real( cedfu1_r4(1 + $I_L7235_162, 1, 1, 1, 1 + $I_L7234_188), 8 )
 7235.                   $I_L7235_162 = 1 + $I_L7235_162
 7235.                   if ( $I_L7235_162 >= 1872 ) exit
 7235.                enddo
 7234.                $I_L7234_188 = 1 + $I_L7234_188
 7234.                if ( $I_L7234_188 >= 3 ) exit
 7234.             enddo
 7237.             $I_L7237_190 = 0
 7237.             do
 7237.                $I_L7237_164 = 0
 7237. !dir$ ivdep
 7237.                do
 7237.                   (cedfu2%base_addr)(cedfu2%dim_1%LB + $I_L7237_164, cedfu2%dim_2%LB, cedfu2%dim_3%LB, cedfu2%dim_4%LB, cedfu2%dim_5%LB + $I_L7237_190, 0) = real( cedfu2_r4(1 + $I_L7237_164, 1, 1, 1, 1 + $I_L7237_190), 8 )
 7237.                   $I_L7237_164 = 1 + $I_L7237_164
 7237.                   if ( $I_L7237_164 >= 1872 ) exit
 7237.                enddo
 7236.                $I_L7236_166 = 0
 7236. !dir$ ivdep
 7236.                do
 7236.                   (cedir1%base_addr)(cedir1%dim_1%LB + $I_L7236_166, cedir1%dim_2%LB, cedir1%dim_3%LB, cedir1%dim_4%LB, cedir1%dim_5%LB, cedir1%dim_6%LB + $I_L7237_190, 0) = real( cedir1_r4(1 + $I_L7236_166, 1, 1, 1, 1, 1 + $I_L7237_190), 8 )
 7236.                   $I_L7236_166 = 1 + $I_L7236_166
 7236.                   if ( $I_L7236_166 >= 5616 ) exit
 7236.                enddo
 7237.                $I_L7237_190 = 1 + $I_L7237_190
 7237.                if ( $I_L7237_190 >= 3 ) exit
 7237.             enddo
 7238.             $I_L7238_192 = 0
 7238.             do
 7238.                $I_L7238_168 = 0
 7238. !dir$ ivdep
 7238.                do
 7238.                   (cedir2%base_addr)(cedir2%dim_1%LB + $I_L7238_168, cedir2%dim_2%LB, cedir2%dim_3%LB, cedir2%dim_4%LB, cedir2%dim_5%LB, cedir2%dim_6%LB + $I_L7238_192, 0) = real( cedir2_r4(1 + $I_L7238_168, 1, 1, 1, 1, 1 + $I_L7238_192), 8 )
 7238.                   $I_L7238_168 = 1 + $I_L7238_168
 7238.                   if ( $I_L7238_168 >= 5616 ) exit
 7238.                enddo
 7242.                $I_L7242_172 = 0
 7242. !dir$ ivdep
 7242.                do
 7242.                   (xmiu%base_addr)(xmiu%dim_1%LB + $I_L7242_172, xmiu%dim_2%LB + $I_L7238_192, 0) = real( xmiu_r4(1 + $I_L7242_172, 1 + $I_L7238_192), 8 )
 7242.                   $I_L7242_172 = 1 + $I_L7242_172
 7242.                   if ( $I_L7242_172 >= 12 ) exit
 7242.                enddo
 7238.                $I_L7238_192 = 1 + $I_L7238_192
 7238.                if ( $I_L7238_192 >= 3 ) exit
 7238.             enddo
 7241.             $I_L7241_170 = 0
 7241. !dir$ ivdep
 7241.             do
 7241.                (cether%base_addr)(cether%dim_1%LB + $I_L7241_170, cether%dim_2%LB, cether%dim_3%LB, 0) = real( cether_r4(1 + $I_L7241_170, 1, 1), 8 )
 7241.                $I_L7241_170 = 1 + $I_L7241_170
 7241.                if ( $I_L7241_170 >= 312 ) exit
 7241.             enddo
 7243.             $I_L7243_174 = 0
 7243. !dir$ ivdep
 7243.             do
 7243.                (xmiw%base_addr)(xmiw%dim_1%LB + $I_L7243_174, xmiw%dim_2%LB, 0) = real( xmiw_r4(1 + $I_L7243_174, 1), 8 )
 7243.                $I_L7243_174 = 1 + $I_L7243_174
 7243.                if ( $I_L7243_174 >= 36 ) exit
 7243.             enddo
 7244.             t$3282 = nfsibd
 7244.             t$3296 = __rewf( t$3282, 0, 0, 0x100000000000000L, 0, 0 )
 7246.             t$3282 = nfalb
 7246.             t$3297 = __rewf( t$3282, 0, 0, 0x100000000000000L, 0, 0 )
 7253.             $SC_green_fixed_I6 = green_fixed%dim_3%SM
 7253.             $SC_green_fixed_I5 = green_fixed%dim_3%EX
 7253.             $SC_green_fixed_I7 = green_fixed%dim_3%LB
 7253.             $SC_green_fixed_I3 = green_fixed%dim_2%SM
 7253.             $SC_green_fixed_I2 = green_fixed%dim_2%EX
 7253.             $SC_green_fixed_I4 = green_fixed%dim_2%LB
 7253.             $SC_green_fixed_I0 = green_fixed%dim_1%EX
 7253.             $SC_green_fixed_I1 = green_fixed%dim_1%LB
 7271.             $SC_rootd_I52 = rootd%dim_2%SM
 7271.             $SC_rootd_I51 = rootd%dim_2%EX
 7271.             $SC_rootd_I53 = rootd%dim_2%LB
 7271.             $SC_rootd_I49 = rootd%dim_1%EX
 7271.             $SC_rootd_I50 = rootd%dim_1%LB
 7270.             $SC_defac_fixed_I45 = defac_fixed%dim_2%SM
 7270.             $SC_defac_fixed_I44 = defac_fixed%dim_2%EX
 7270.             $SC_defac_fixed_I46 = defac_fixed%dim_2%LB
 7270.             $SC_defac_fixed_I42 = defac_fixed%dim_1%EX
 7270.             $SC_defac_fixed_I43 = defac_fixed%dim_1%LB
 7269.             $SC_tu_fixed_I38 = tu_fixed%dim_2%SM
 7269.             $SC_tu_fixed_I37 = tu_fixed%dim_2%EX
 7269.             $SC_tu_fixed_I39 = tu_fixed%dim_2%LB
 7269.             $SC_tu_fixed_I35 = tu_fixed%dim_1%EX
 7269.             $SC_tu_fixed_I36 = tu_fixed%dim_1%LB
 7268.             $SC_tll_fixed_I31 = tll_fixed%dim_2%SM
 7268.             $SC_tll_fixed_I30 = tll_fixed%dim_2%EX
 7268.             $SC_tll_fixed_I32 = tll_fixed%dim_2%LB
 7268.             $SC_tll_fixed_I28 = tll_fixed%dim_1%EX
 7268.             $SC_tll_fixed_I29 = tll_fixed%dim_1%LB
 7267.             $SC_topt_fixed_I24 = topt_fixed%dim_2%SM
 7267.             $SC_topt_fixed_I23 = topt_fixed%dim_2%EX
 7267.             $SC_topt_fixed_I25 = topt_fixed%dim_2%LB
 7267.             $SC_topt_fixed_I21 = topt_fixed%dim_1%EX
 7267.             $SC_topt_fixed_I22 = topt_fixed%dim_1%LB
 7263.             $SC_rstpar_fixed_I14 = rstpar_fixed%dim_3%SM
 7263.             $SC_rstpar_fixed_I13 = rstpar_fixed%dim_3%EX
 7263.             $SC_rstpar_fixed_I15 = rstpar_fixed%dim_3%LB
 7263.             $SC_rstpar_fixed_I11 = rstpar_fixed%dim_2%SM
 7263.             $SC_rstpar_fixed_I10 = rstpar_fixed%dim_2%EX
 7263.             $SC_rstpar_fixed_I12 = rstpar_fixed%dim_2%LB
 7263.             $SC_rstpar_fixed_I8 = rstpar_fixed%dim_1%EX
 7263.             $SC_rstpar_fixed_I9 = rstpar_fixed%dim_1%LB
 7271.             $SC_yootd_I54 = yootd%dim_1%EX
 7271.             $SC_yootd_I55 = yootd%dim_1%LB
 7270.             $SC_yefac_I47 = yefac%dim_1%EX
 7270.             $SC_yefac_I48 = yefac%dim_1%LB
 7269.             $SC_yu_I40 = yu%dim_1%EX
 7269.             $SC_yu_I41 = yu%dim_1%LB
 7268.             $SC_yll_I33 = yll%dim_1%EX
 7268.             $SC_yll_I34 = yll%dim_1%LB
 7267.             $SC_yopt_I26 = yopt%dim_1%EX
 7267.             $SC_yopt_I27 = yopt%dim_1%LB
 7263.             $SC_ystpar_I19 = ystpar%dim_2%SM
 7263.             $SC_ystpar_I18 = ystpar%dim_2%EX
 7263.             $SC_ystpar_I20 = ystpar%dim_2%LB
 7263.             $SC_ystpar_I16 = ystpar%dim_1%EX
 7263.             $SC_ystpar_I17 = ystpar%dim_1%LB
 7250.             $I_L7250_198 = 0
 7250.             do
 7251.                $I_L7251_182 = 0
 7251.                do
 7252.                   $I_L7252_134 = 0
 7252. !dir$ ivdep
 7252.                   do
 7253.                      (green_fixed%base_addr)(1 + $I_L7252_134, 1 + $I_L7251_182, 1 + $I_L7250_198, 0) = max( 1.0e-4, (green_fixed%base_addr)(1 + $I_L7252_134, 1 + $I_L7251_182, 1 + $I_L7250_198, 0) )
 7254.                      $I_L7252_134 = 1 + $I_L7252_134
 7252.                      if ( $I_L7252_134 >= 13 ) exit
 7252.                   enddo
 7255.                   $I_L7251_182 = 1 + $I_L7251_182
 7254.                   if ( $I_L7251_182 >= 12 ) exit
 7254.                enddo
 7259.                $jtyp_S4 = 12
 7260.                if ( $I_L7250_198 == 1 ) then
 7260.                   $jtyp_S4 = 13
 7260.                endif
 7262.                $I_L7262_136 = 0
 7262. !dir$ ivdep
 7262.                do
 7263.                   (ystpar%base_addr)(1 + $I_L7250_198, 1 + $I_L7262_136, 0) = (rstpar_fixed%base_addr)($jtyp_S4, 1, 1 + $I_L7262_136, 0)
 7264.                   $I_L7262_136 = 1 + $I_L7262_136
 7262.                   if ( $I_L7262_136 >= 3 ) exit
 7262.                enddo
 7267.                (yopt%base_addr)(1 + $I_L7250_198, 0) = (topt_fixed%base_addr)($jtyp_S4, 1, 0)
 7268.                (yll%base_addr)(1 + $I_L7250_198, 0) = (tll_fixed%base_addr)($jtyp_S4, 1, 0)
 7269.                (yu%base_addr)(1 + $I_L7250_198, 0) = (tu_fixed%base_addr)($jtyp_S4, 1, 0)
 7270.                (yefac%base_addr)(1 + $I_L7250_198, 0) = (defac_fixed%base_addr)($jtyp_S4, 1, 0)
 7271.                (yootd%base_addr)(1 + $I_L7250_198, 0) = (rootd%base_addr)($jtyp_S4, 1, 0)
 7272.                (yh1%base_addr)(1 + $I_L7250_198, 0) = (ph1_fixed%base_addr)($jtyp_S4, 1, 0)
 7273.                (yh2%base_addr)(1 + $I_L7250_198, 0) = (ph2_fixed%base_addr)($jtyp_S4, 1, 0)
 7256.                $I_L7250_198 = 1 + $I_L7250_198
 7255.                if ( $I_L7250_198 >= 2 ) exit
 7255.             enddo
 7281.             $SC_zlt_fixed_I62 = zlt_fixed%dim_3%SM
 7281.             $SC_zlt_fixed_I61 = zlt_fixed%dim_3%EX
 7281.             $SC_zlt_fixed_I63 = zlt_fixed%dim_3%LB
 7281.             $SC_zlt_fixed_I59 = zlt_fixed%dim_2%SM
 7281.             $SC_zlt_fixed_I58 = zlt_fixed%dim_2%EX
 7281.             $SC_zlt_fixed_I60 = zlt_fixed%dim_2%LB
 7281.             $SC_zlt_fixed_I56 = zlt_fixed%dim_1%EX
 7281.             $SC_zlt_fixed_I57 = zlt_fixed%dim_1%LB
 7283.             $SC_xcover_fixed_I80 = xcover_fixed%dim_3%SM
 7283.             $SC_xcover_fixed_I79 = xcover_fixed%dim_3%EX
 7283.             $SC_xcover_fixed_I81 = xcover_fixed%dim_3%LB
 7283.             $SC_xcover_fixed_I77 = xcover_fixed%dim_2%SM
 7283.             $SC_xcover_fixed_I76 = xcover_fixed%dim_2%EX
 7283.             $SC_xcover_fixed_I78 = xcover_fixed%dim_2%LB
 7283.             $SC_xcover_fixed_I74 = xcover_fixed%dim_1%EX
 7283.             $SC_xcover_fixed_I75 = xcover_fixed%dim_1%LB
 7282.             $SC_green_fixed_I6 = green_fixed%dim_3%SM
 7282.             $SC_green_fixed_I5 = green_fixed%dim_3%EX
 7282.             $SC_green_fixed_I7 = green_fixed%dim_3%LB
 7282.             $SC_green_fixed_I3 = green_fixed%dim_2%SM
 7282.             $SC_green_fixed_I2 = green_fixed%dim_2%EX
 7282.             $SC_green_fixed_I4 = green_fixed%dim_2%LB
 7282.             $SC_green_fixed_I0 = green_fixed%dim_1%EX
 7282.             $SC_green_fixed_I1 = green_fixed%dim_1%LB
 7281.             $SC_ylt_I67 = ylt%dim_2%SM
 7281.             $SC_ylt_I66 = ylt%dim_2%EX
 7281.             $SC_ylt_I68 = ylt%dim_2%LB
 7281.             $SC_ylt_I64 = ylt%dim_1%EX
 7281.             $SC_ylt_I65 = ylt%dim_1%LB
 7283.             $SC_ycover_I85 = ycover%dim_2%SM
 7283.             $SC_ycover_I84 = ycover%dim_2%EX
 7283.             $SC_ycover_I86 = ycover%dim_2%LB
 7283.             $SC_ycover_I82 = ycover%dim_1%EX
 7283.             $SC_ycover_I83 = ycover%dim_1%LB
 7282.             $SC_yreen_I72 = yreen%dim_2%SM
 7282.             $SC_yreen_I71 = yreen%dim_2%EX
 7282.             $SC_yreen_I73 = yreen%dim_2%LB
 7282.             $SC_yreen_I69 = yreen%dim_1%EX
 7282.             $SC_yreen_I70 = yreen%dim_1%LB
 7278.             $I_L7278_184 = 0
 7278.             do
 7277.                $I_L7277_138 = 0
 7277. !dir$ ivdep
 7277. !dir$ loop_info (automatic) cache_nt( green_fixed )
 7277.                do
 7279.                   $jtyp_S7 = 12
 7280.                   if ( $I_L7278_184 == 1 ) then
 7280.                      $jtyp_S7 = 13
 7280.                   endif
 7281.                   (ylt%base_addr)(1 + $I_L7277_138, 1 + $I_L7278_184, 0) = (zlt_fixed%base_addr)($jtyp_S7, 1 + $I_L7277_138, 1, 0)
 7282.                   (yreen%base_addr)(1 + $I_L7277_138, 1 + $I_L7278_184, 0) = (green_fixed%base_addr)($jtyp_S7, 1 + $I_L7277_138, 1, 0)
 7283.                   (ycover%base_addr)(1 + $I_L7277_138, 1 + $I_L7278_184, 0) = (xcover_fixed%base_addr)($jtyp_S7, 1 + $I_L7277_138, 1, 0)
 7285.                   $I_L7277_138 = 1 + $I_L7277_138
 7280.                   if ( $I_L7277_138 >= 12 ) exit
 7280.                enddo
 7284.                $I_L7278_184 = 1 + $I_L7278_184
 7284.                if ( $I_L7278_184 >= 2 ) exit
 7284.             enddo
 7298.             $SC_rootd_I52 = rootd%dim_2%SM
 7298.             $SC_rootd_I51 = rootd%dim_2%EX
 7298.             $SC_rootd_I53 = rootd%dim_2%LB
 7298.             $SC_rootd_I49 = rootd%dim_1%EX
 7298.             $SC_rootd_I50 = rootd%dim_1%LB
 7297.             $SC_ph2_fixed_I100 = ph2_fixed%dim_2%SM
 7297.             $SC_ph2_fixed_I99 = ph2_fixed%dim_2%EX
 7297.             $SC_ph2_fixed_I101 = ph2_fixed%dim_2%LB
 7297.             $SC_ph2_fixed_I97 = ph2_fixed%dim_1%EX
 7297.             $SC_ph2_fixed_I98 = ph2_fixed%dim_1%LB
 7296.             $SC_ph1_fixed_I95 = ph1_fixed%dim_2%SM
 7296.             $SC_ph1_fixed_I94 = ph1_fixed%dim_2%EX
 7296.             $SC_ph1_fixed_I96 = ph1_fixed%dim_2%LB
 7296.             $SC_ph1_fixed_I92 = ph1_fixed%dim_1%EX
 7296.             $SC_ph1_fixed_I93 = ph1_fixed%dim_1%LB
 7295.             $SC_defac_fixed_I45 = defac_fixed%dim_2%SM
 7295.             $SC_defac_fixed_I44 = defac_fixed%dim_2%EX
 7295.             $SC_defac_fixed_I46 = defac_fixed%dim_2%LB
 7295.             $SC_defac_fixed_I42 = defac_fixed%dim_1%EX
 7295.             $SC_defac_fixed_I43 = defac_fixed%dim_1%LB
 7294.             $SC_tu_fixed_I38 = tu_fixed%dim_2%SM
 7294.             $SC_tu_fixed_I37 = tu_fixed%dim_2%EX
 7294.             $SC_tu_fixed_I39 = tu_fixed%dim_2%LB
 7294.             $SC_tu_fixed_I35 = tu_fixed%dim_1%EX
 7294.             $SC_tu_fixed_I36 = tu_fixed%dim_1%LB
 7293.             $SC_tll_fixed_I31 = tll_fixed%dim_2%SM
 7293.             $SC_tll_fixed_I30 = tll_fixed%dim_2%EX
 7293.             $SC_tll_fixed_I32 = tll_fixed%dim_2%LB
 7293.             $SC_tll_fixed_I28 = tll_fixed%dim_1%EX
 7293.             $SC_tll_fixed_I29 = tll_fixed%dim_1%LB
 7292.             $SC_topt_fixed_I24 = topt_fixed%dim_2%SM
 7292.             $SC_topt_fixed_I23 = topt_fixed%dim_2%EX
 7292.             $SC_topt_fixed_I25 = topt_fixed%dim_2%LB
 7292.             $SC_topt_fixed_I21 = topt_fixed%dim_1%EX
 7292.             $SC_topt_fixed_I22 = topt_fixed%dim_1%LB
 7291.             $SC_chil_fixed_I90 = chil_fixed%dim_2%SM
 7291.             $SC_chil_fixed_I89 = chil_fixed%dim_2%EX
 7291.             $SC_chil_fixed_I91 = chil_fixed%dim_2%LB
 7291.             $SC_chil_fixed_I87 = chil_fixed%dim_1%EX
 7291.             $SC_chil_fixed_I88 = chil_fixed%dim_1%LB
 7289.             $SC_rstpar_fixed_I14 = rstpar_fixed%dim_3%SM
 7289.             $SC_rstpar_fixed_I13 = rstpar_fixed%dim_3%EX
 7289.             $SC_rstpar_fixed_I15 = rstpar_fixed%dim_3%LB
 7289.             $SC_rstpar_fixed_I11 = rstpar_fixed%dim_2%SM
 7289.             $SC_rstpar_fixed_I10 = rstpar_fixed%dim_2%EX
 7289.             $SC_rstpar_fixed_I12 = rstpar_fixed%dim_2%LB
 7289.             $SC_rstpar_fixed_I8 = rstpar_fixed%dim_1%EX
 7289.             $SC_rstpar_fixed_I9 = rstpar_fixed%dim_1%LB
 7288.             $I_L7288_196 = 0
 7288.             do
 7287.                $I_L7287_178 = 0
 7287. !dir$ ivdep
 7287.                do
 7289.                   (rstpar_fixed%base_addr)(13, 1 + $I_L7287_178, 1 + $I_L7288_196, 0) = 1000.0
 7299.                   $I_L7287_178 = 1 + $I_L7287_178
 7288.                   if ( $I_L7287_178 >= 2 ) exit
 7288.                enddo
 7290.                $I_L7288_196 = 1 + $I_L7288_196
 7290.                if ( $I_L7288_196 >= 3 ) exit
 7290.             enddo
 7287.             $I_L7287_180 = 0
 7287. !dir$ ivdep
 7287.             do
 7291.                (chil_fixed%base_addr)(13, 1 + $I_L7287_180, 0) = 1.0e-2
 7292.                (topt_fixed%base_addr)(13, 1 + $I_L7287_180, 0) = 310.0
 7293.                (tll_fixed%base_addr)(13, 1 + $I_L7287_180, 0) = 300.0
 7294.                (tu_fixed%base_addr)(13, 1 + $I_L7287_180, 0) = 320.0
 7295.                (defac_fixed%base_addr)(13, 1 + $I_L7287_180, 0) = 0.0
 7296.                (ph1_fixed%base_addr)(13, 1 + $I_L7287_180, 0) = 3.0
 7297.                (ph2_fixed%base_addr)(13, 1 + $I_L7287_180, 0) = 6.0
 7298.                (rootd%base_addr)(13, 1 + $I_L7287_180, 0) = 2.1000000000000001
 7299.                $I_L7287_180 = 1 + $I_L7287_180
 7290.                if ( $I_L7287_180 >= 2 ) exit
 7290.             enddo
 7301.             (bee%base_addr)(13, 0) = 4.7999999999999998
 7302.             (phsat%base_addr)(13, 0) = -1.6700000000000001e-1
 7303.             (satco%base_addr)(13, 0) = 7.6199999999999995e-5
 7304.             (poros%base_addr)(13, 0) = 4.3519999999999998e-1
 7315.             $SC_xbc_I125 = xbc%dim_2%SM
 7315.             $SC_xbc_I124 = xbc%dim_2%EX
 7315.             $SC_xbc_I126 = xbc%dim_2%LB
 7315.             $SC_xbc_I122 = xbc%dim_1%EX
 7315.             $SC_xbc_I123 = xbc%dim_1%LB
 7316.             $SC_xdc_I130 = xdc%dim_2%SM
 7316.             $SC_xdc_I129 = xdc%dim_2%EX
 7316.             $SC_xdc_I131 = xdc%dim_2%LB
 7316.             $SC_xdc_I127 = xdc%dim_1%EX
 7316.             $SC_xdc_I128 = xdc%dim_1%LB
 7310.             $SC_z1_I110 = z1%dim_2%SM
 7310.             $SC_z1_I109 = z1%dim_2%EX
 7310.             $SC_z1_I111 = z1%dim_2%LB
 7310.             $SC_z1_I107 = z1%dim_1%EX
 7310.             $SC_z1_I108 = z1%dim_1%LB
 7309.             $SC_z2_I105 = z2%dim_2%SM
 7309.             $SC_z2_I104 = z2%dim_2%EX
 7309.             $SC_z2_I106 = z2%dim_2%LB
 7309.             $SC_z2_I102 = z2%dim_1%EX
 7309.             $SC_z2_I103 = z2%dim_1%LB
 7314.             $SC_xd_I120 = xd%dim_2%SM
 7314.             $SC_xd_I119 = xd%dim_2%EX
 7314.             $SC_xd_I121 = xd%dim_2%LB
 7314.             $SC_xd_I117 = xd%dim_1%EX
 7314.             $SC_xd_I118 = xd%dim_1%LB
 7313.             $SC_x0x_I115 = x0x%dim_2%SM
 7313.             $SC_x0x_I114 = x0x%dim_2%EX
 7313.             $SC_x0x_I116 = x0x%dim_2%LB
 7313.             $SC_x0x_I112 = x0x%dim_1%EX
 7313.             $SC_x0x_I113 = x0x%dim_1%LB
 7307.             $SC_zlt_fixed_I62 = zlt_fixed%dim_3%SM
 7307.             $SC_zlt_fixed_I61 = zlt_fixed%dim_3%EX
 7307.             $SC_zlt_fixed_I63 = zlt_fixed%dim_3%LB
 7307.             $SC_zlt_fixed_I59 = zlt_fixed%dim_2%SM
 7307.             $SC_zlt_fixed_I58 = zlt_fixed%dim_2%EX
 7307.             $SC_zlt_fixed_I60 = zlt_fixed%dim_2%LB
 7307.             $SC_zlt_fixed_I56 = zlt_fixed%dim_1%EX
 7307.             $SC_zlt_fixed_I57 = zlt_fixed%dim_1%LB
 7311.             $SC_xcover_fixed_I80 = xcover_fixed%dim_3%SM
 7311.             $SC_xcover_fixed_I79 = xcover_fixed%dim_3%EX
 7311.             $SC_xcover_fixed_I81 = xcover_fixed%dim_3%LB
 7311.             $SC_xcover_fixed_I77 = xcover_fixed%dim_2%SM
 7311.             $SC_xcover_fixed_I76 = xcover_fixed%dim_2%EX
 7311.             $SC_xcover_fixed_I78 = xcover_fixed%dim_2%LB
 7311.             $SC_xcover_fixed_I74 = xcover_fixed%dim_1%EX
 7311.             $SC_xcover_fixed_I75 = xcover_fixed%dim_1%LB
 7319.             (zdepth%base_addr)(13, 1, 0) = 1.0
 7320.             (zdepth%base_addr)(13, 2, 0) = 1.0
 7321.             (zdepth%base_addr)(13, 3, 0) = 1.0
 7326.             $dz_S12 = 8440.4416326530609 * log( ( si1 * 1.0/sl1 ) )
 7329.             $dzcut_S13 = 5.9999999999999998e-1 * $dz_S12
 7306.             $I_L7306_140 = 0
 7306. !dir$ ivdep
 7306.             do
 7307.                (zlt_fixed%base_addr)(13, 1 + $I_L7306_140, 1, 0) = 1.0e-4
 7308.                (zlt_fixed%base_addr)(13, 1 + $I_L7306_140, 2, 0) = 1.0e-4
 7309.                (z2%base_addr)(13, 1 + $I_L7306_140, 0) = 1.0000000000000001e-1
 7310.                (z1%base_addr)(13, 1 + $I_L7306_140, 0) = 1.0e-4
 7311.                (xcover_fixed%base_addr)(13, 1 + $I_L7306_140, 1, 0) = 1.0e-4
 7312.                (xcover_fixed%base_addr)(13, 1 + $I_L7306_140, 2, 0) = 1.0e-4
 7313.                (x0x%base_addr)(13, 1 + $I_L7306_140, 0) = 1.0e-2
 7314.                (xd%base_addr)(13, 1 + $I_L7306_140, 0) = 4.0000000000000002e-4
 7315.                (xbc%base_addr)(13, 1 + $I_L7306_140, 0) = 35461.0
 7316.                (xdc%base_addr)(13, 1 + $I_L7306_140, 0) = 28.5
 7330.                (xd%base_addr)(1, 1 + $I_L7306_140, 0) = min( $dzcut_S13, (xd%base_addr)(1, 1 + $I_L7306_140, 0) )
 7317.                $I_L7306_140 = 1 + $I_L7306_140
 7306.                if ( $I_L7306_140 >= 12 ) exit
 7306.             enddo
 7335.             $dzcut_S14 = 5.9999999999999998e-1 * $dz_S12
 7336.             $I_L7336_194 = 0
 7336.             do
 7336.                $I_L7336_176 = 0
 7336. !dir$ ivdep
 7336.                do
 7336.                   (xd%base_addr)(2 + $I_L7336_176, 1 + $I_L7336_194, 0) = min( $dzcut_S14, (xd%base_addr)(2 + $I_L7336_176, 1 + $I_L7336_194, 0) )
 7336.                   $I_L7336_176 = 1 + $I_L7336_176
 7336.                   if ( $I_L7336_176 >= 12 ) exit
 7336.                enddo
 7336.                $I_L7336_194 = 1 + $I_L7336_194
 7336.                if ( $I_L7336_194 >= 12 ) exit
 7336.             enddo
 7336.          endif
 7336.       endif
 7337.       return
 7337.       end
 7337.       
 7342.       
 7342.       subroutine re_assign_sib_soil_prop
 7398.       return
 7398.       end
 7398.       
 7402.       
 7402.       subroutine wheat( latitu, itype, nmax, colrad, month, xday, yrl, idatec, monl, nsx )
 7402.       t$1366 = nmax
 7456.       t$2248 = _zla( 0, nmax )
 7469.       t$2251 = 8 * _zla( 0, nmax )
 7473.       t$2252 = 8 * ( 7 + 8 * _zla( 0, nmax ) ) / 8
 7473.       t$2254 = t$2252 + 8 * _zla( 0, nmax )
 7474.       t$2255 = 8 * ( 7 + t$2252 + 8 * _zla( 0, nmax ) ) / 8
 7474.       t$2257 = t$2255 + 8 * _zla( 0, nmax )
 7472.       t$2258 = 8 * ( 7 + t$2255 + 8 * _zla( 0, nmax ) ) / 8
 7472.       t$2260 = t$2258 + 8 * _zla( 0, nmax )
 7484.       t$2262 = t$2258 + 12 * _zla( 0, nmax )
 7483.       t$2264 = t$2258 + 16 * _zla( 0, nmax )
 7402.       t$2265 = _zla( 0, nmax )
 7402.       t$2266 = 9 * _zla( 0, nmax )
 7489.       t$2267 = 8 * ( 7 + t$2258 + 16 * _zla( 0, nmax ) ) / 8
 7489.       t$2269 = t$2267 + 72 * _zla( 0, nmax )
 7466.       t$2270 = 8 * ( 7 + t$2267 + 72 * _zla( 0, nmax ) ) / 8
 7466.       t$2272 = t$2270 + 8 * _zla( 0, nmax )
 7468.       t$2273 = 8 * ( 7 + t$2270 + 8 * _zla( 0, nmax ) ) / 8
 7468.       t$2275 = t$2273 + 8 * _zla( 0, nmax )
 7490.       t$2277 = t$2273 + 12 * _zla( 0, nmax )
 7470.       t$2278 = 8 * ( 7 + t$2273 + 12 * _zla( 0, nmax ) ) / 8
 7470.       t$2280 = t$2278 + 8 * _zla( 0, nmax )
 7471.       t$2281 = 8 * ( 7 + t$2278 + 8 * _zla( 0, nmax ) ) / 8
 7471.       t$2283 = t$2281 + 8 * _zla( 0, nmax )
 7402.       t$2284 = 13 * _zla( 0, nmax )
 7503.       t$2285 = 8 * ( 7 + t$2281 + 8 * _zla( 0, nmax ) ) / 8
 7503.       t$2287 = t$2285 + 104 * _zla( 0, nmax )
 7402.       t$2249 = int( _alloc( t$2285 + 104 * _zla( 0, nmax ) ), 8 )
 7469.       t$2250 = t$2249
 7473.       t$2253 = t$2252 + t$2249
 7474.       t$2256 = t$2255 + t$2249
 7472.       t$2259 = t$2258 + t$2249
 7484.       t$2261 = t$2258 + t$2249 + 8 * _zla( 0, nmax )
 7483.       t$2263 = t$2258 + t$2249 + 12 * _zla( 0, nmax )
 7489.       t$2268 = t$2267 + t$2249
 7466.       t$2271 = t$2270 + t$2249
 7468.       t$2274 = t$2273 + t$2249
 7490.       t$2276 = t$2273 + t$2249 + 8 * _zla( 0, nmax )
 7470.       t$2279 = t$2278 + t$2249
 7471.       t$2282 = t$2281 + t$2249
 7503.       t$2286 = t$2285 + t$2249
 7514.       if ( nmax > 0 ) then
 7514.          $I_L7514_108 = 0
 7514. !dir$ ivdep
 7514.          do
 7514.             nsx(1 + $I_L7514_108) = 0
 7515.             index(1 + $I_L7514_108) = 0
 7526.             test(1 + $I_L7514_108) = .true.
 7514.             $I_L7514_108 = 1 + $I_L7514_108
 7514.             if ( $I_L7514_108 >= nmax ) exit
 7514.          enddo
 7516.          $I_L7516_110 = 0
 7516. !dir$ ivdep
 7516.          do
 7516.             phenst(1 + $I_L7516_110, 1) = 0.0
 7516.             $I_L7516_110 = 1 + $I_L7516_110
 7516.             if ( $I_L7516_110 >= 9 * nmax ) exit
 7516.          enddo
 7527.          $I_L7527_92 = 0
 7527. !dir$ ivdep
 7527.          do
 7533.             $phi_WR0_R0 = 90.0 + -57.295780490442965 * colrad(1 + $I_L7527_92)
 7533.             phi(1 + $I_L7527_92) = $phi_WR0_R0
 7538.             if ( abs( $phi_WR0_R0 ) > 55.0 ) then
 7538.                $phi_WR0_R0 = sign( 55.0, $phi_WR0_R0 )
 7538.                phi(1 + $I_L7527_92) = $phi_WR0_R0
 7538.             endif
 7540.             if ( abs( $phi_WR0_R0 ) < 20.0 ) then
 7540.                $phi_WR0_R0 = sign( 20.0, $phi_WR0_R0 )
 7540.                phi(1 + $I_L7527_92) = $phi_WR0_R0
 7540.             endif
 7542.             $I_L7527_92 = 1 + $I_L7527_92
 7540.             if ( $I_L7527_92 >= nmax ) exit
 7540.          enddo
 7561.          $I_L7561_96 = 0
 7561. !dir$ ivdep
 7561.          do
 7562.             if ( itype(1 + $I_L7561_96) == 12 ) then
 7563.                $flip_S2 = 0.0
 7564.                if ( phi(1 + $I_L7561_96) < 0.0 ) then
 7564.                   $flip_S2 = 5.0e-1 * yrl
 7564.                endif
 7569.                $phenst_WR0_R1 = $flip_S2 + ( 2.7378507871321013e-3 * yrl ) * ( -65.0 + 4.5 * abs( phi(1 + $I_L7561_96) ) )
 7569.                phenst(1 + $I_L7561_96, 2) = $phenst_WR0_R1
 7570.                phenst(1 + $I_L7561_96, 3) = $flip_S2 + ( 2.7378507871321013e-3 * yrl ) * ( -47.200000000000003 + 4.7400000000000002 * abs( phi(1 + $I_L7561_96) ) )
 7571.                phenst(1 + $I_L7561_96, 4) = $flip_S2 + ( 2.7378507871321013e-3 * yrl ) * ( -31.800000000000001 + 4.8600000000000003 * abs( phi(1 + $I_L7561_96) ) )
 7572.                phenst(1 + $I_L7561_96, 5) = $flip_S2 + ( 2.7378507871321013e-3 * yrl ) * ( -2.0 + 4.5499999999999998 * abs( phi(1 + $I_L7561_96) ) )
 7573.                $phenst_WR0_R2 = $flip_S2 + ( 2.7378507871321013e-3 * yrl ) * ( 10.5 + 4.3499999999999996 * abs( phi(1 + $I_L7561_96) ) )
 7573.                phenst(1 + $I_L7561_96, 6) = $phenst_WR0_R2
 7576.                phenst(1 + $I_L7561_96, 7) = $phenst_WR0_R2 + 8.2135523613963042e-3 * yrl
 7577.                $phenst_WR0_R3 = $phenst_WR0_R1 + -( ( 2.7378507871321013e-3 * yrl ) * abs( -2.9999999999999999e-1 + 5.21 * abs( phi(1 + $I_L7561_96) ) ) )
 7577.                phenst(1 + $I_L7561_96, 1) = $phenst_WR0_R3
 7578.                phenst(1 + $I_L7561_96, 9) = $phenst_WR0_R3
 7579.                phenst(1 + $I_L7561_96, 8) = $phenst_WR0_R3 + -1.3689253935660506e-2 * yrl
 7579.             endif
 7580.             $I_L7561_96 = 1 + $I_L7561_96
 7580.             if ( $I_L7561_96 >= nmax ) exit
 7580.          enddo
 7543.          $I_L7543_116 = 0
 7543.          do
 7544.             $SCA_xgren_I58 = xgren(1 + $I_L7543_116)
 7544.             $I_L7544_94 = 0
 7544. !dir$ ivdep
 7544.             do
 7545.                xgreen(1 + $I_L7544_94, 1 + $I_L7543_116) = $SCA_xgren_I58
 7546.                $I_L7544_94 = 1 + $I_L7544_94
 7544.                if ( $I_L7544_94 >= nmax ) exit
 7544.             enddo
 7547.             $I_L7543_116 = 1 + $I_L7543_116
 7546.             if ( $I_L7543_116 >= 13 ) exit
 7546.          enddo
 7581.          $SI_L7581_118_G2 = 0
 7581.          do
 7582.             $SI_L7582_98_G5 = 0
 7582.             do
 7581.                $I_L7581_135 = 0
 7581. !dir$ shortloop16
 7581. !dir$ blocking_size( 4, 4 )
 7581.                do
 7582.                   $I_L7582_126 = 0
 7582. !dir$ ivdep
 7582. !dir$ blocking_size( 256, 256 )
 7582.                   do
 7583.                      if ( itype(1 + $I_L7582_126 + 256 * $SI_L7582_98_G5) == 12 ) then
 7587.                         if ( phenst(1 + $I_L7582_126 + 256 * $SI_L7582_98_G5, 1 + $I_L7581_135 + 4 * $SI_L7581_118_G2) < 0.0 ) then
 7587.                            phenst(1 + $I_L7582_126 + 256 * $SI_L7582_98_G5, 1 + $I_L7581_135 + 4 * $SI_L7581_118_G2) = yrl + phenst(1 + $I_L7582_126 + 256 * $SI_L7582_98_G5, 1 + $I_L7581_135 + 4 * $SI_L7581_118_G2)
 7587.                         endif
 7588.                         if ( phenst(1 + $I_L7582_126 + 256 * $SI_L7582_98_G5, 1 + $I_L7581_135 + 4 * $SI_L7581_118_G2) > yrl ) then
 7588.                            phenst(1 + $I_L7582_126 + 256 * $SI_L7582_98_G5, 1 + $I_L7581_135 + 4 * $SI_L7581_118_G2) = phenst(1 + $I_L7582_126 + 256 * $SI_L7582_98_G5, 1 + $I_L7581_135 + 4 * $SI_L7581_118_G2) + -yrl
 7588.                         endif
 7588.                      endif
 7582.                      $I_L7582_126 = 1 + $I_L7582_126
 7589.                      if ( $I_L7582_126 >= min( nmax, 256 + 256 * $SI_L7582_98_G5 ) + -256 * $SI_L7582_98_G5 ) exit
 7589.                   enddo
 7581.                   $I_L7581_135 = 1 + $I_L7581_135
 7581.                   if ( $I_L7581_135 >= cvmg( 4, 1, $SI_L7581_118_G2 < 2 ) ) exit
 7581.                enddo
 7582.                $SI_L7582_98_G5 = 1 + $SI_L7582_98_G5
 7589.                if ( $SI_L7582_98_G5 >= _rsh( 255 + nmax, 8 ) ) exit
 7589.             enddo
 7581.             $SI_L7581_118_G2 = 1 + $SI_L7581_118_G2
 7581.             if ( $SI_L7581_118_G2 >= 3 ) exit
 7581.          enddo
 7581.       endif
 7525.       $thrsh_S13 = -2.5e-1 * mod( 3 + idatec(4), 4 )
 7552.       $kold_S5 = 0
 7558.       $SC_idatec_I0 = idatec(4)
 7558.       if ( mod( $SC_idatec_I0, 4 ) == 0 ) then
 7554.          kmon(1) = 0
 7559.          $kold_S5 = monl(1)
 7554.          kmon(2) = $kold_S5
 7558.          kmon(2) = 1 + $kold_S5
 7559.          $kold_S5 = $kold_S5 + monl(2)
 7553.          $I_L7553_114 = 0
 7553.          do
 7554.             kmon(3 + $I_L7553_114) = $kold_S5
 7559.             $kold_S5 = $kold_S5 + monl(3 + $I_L7553_114)
 7560.             $I_L7553_114 = 1 + $I_L7553_114
 7558.             if ( $I_L7553_114 >= 10 ) exit
 7558.          enddo
 7558.       else
 7553.          $I_L7553_106 = 0
 7553.          do
 7554.             kmon(1 + $I_L7553_106) = $kold_S5
 7559.             $kold_S5 = $kold_S5 + monl(1 + $I_L7553_106)
 7560.             $I_L7553_106 = 1 + $I_L7553_106
 7558.             if ( $I_L7553_106 >= 12 ) exit
 7558.          enddo
 7558.       endif
 7593.       if ( nmax > 0 ) then
 7592.          $SI_L7592_120_G8 = 0
 7592.          do
 7593.             $SI_L7593_100_G11 = 0
 7593.             do
 7592.                $I_L7592_138 = 0
 7592. !dir$ shortloop16
 7592. !dir$ blocking_size( 2, 2 )
 7592.                do
 7593.                   $I_L7593_129 = 0
 7593. !dir$ ivdep
 7593. !dir$ blocking_size( 256, 256 )
 7593.                   do
 7594.                      if ( itype(1 + $I_L7593_129 + 256 * $SI_L7593_100_G11) == 12 ) then
 7598.                         if ( phenst(1 + $I_L7593_129 + 256 * $SI_L7593_100_G11, 3) <= kmon(2 + $I_L7592_138 + 2 * $SI_L7592_120_G8) ) then
 7599.                            mind(1 + $I_L7593_129 + 256 * $SI_L7593_100_G11) = ( 1 + $I_L7592_138 + 2 * $SI_L7592_120_G8 )
 7601.                            xgreen(1 + $I_L7593_129 + 256 * $SI_L7593_100_G11, 2 + $I_L7592_138 + 2 * $SI_L7592_120_G8) = 9.0000000000000002e-1
 7602.                            xgreen(1 + $I_L7593_129 + 256 * $SI_L7593_100_G11, 3 + $I_L7592_138 + 2 * $SI_L7592_120_G8) = 9.0000000000000002e-1
 7602.                         endif
 7602.                      endif
 7593.                      $I_L7593_129 = 1 + $I_L7593_129
 7605.                      if ( $I_L7593_129 >= min( nmax, 256 + 256 * $SI_L7593_100_G11 ) + -256 * $SI_L7593_100_G11 ) exit
 7605.                   enddo
 7592.                   $I_L7592_138 = 1 + $I_L7592_138
 7592.                   if ( $I_L7592_138 >= 2 ) exit
 7592.                enddo
 7593.                $SI_L7593_100_G11 = 1 + $SI_L7593_100_G11
 7605.                if ( $SI_L7593_100_G11 >= _rsh( 255 + nmax, 8 ) ) exit
 7605.             enddo
 7592.             $SI_L7592_120_G8 = 1 + $SI_L7592_120_G8
 7592.             if ( $SI_L7592_120_G8 >= 2 ) exit
 7592.          enddo
 7593.          $SI_L7593_112_G14 = 0
 7593.          do
 7592.             $I_L7592_124 = 0
 7592. !dir$ blocking_size( 8, 8 )
 7592.             do
 7593.                $I_L7593_132 = 0
 7593. !dir$ ivdep
 7593. !dir$ blocking_size( 1024, 1024 )
 7593.                do
 7594.                   if ( itype(1 + $I_L7593_132 + 1024 * $SI_L7593_112_G14) == 12 ) then
 7598.                      if ( phenst(1 + $I_L7593_132 + 1024 * $SI_L7593_112_G14, 3) <= kmon(6 + $I_L7592_124) ) then
 7599.                         mind(1 + $I_L7593_132 + 1024 * $SI_L7593_112_G14) = ( 5 + $I_L7592_124 )
 7599.                      endif
 7599.                   endif
 7593.                   $I_L7593_132 = 1 + $I_L7593_132
 7605.                   if ( $I_L7593_132 >= min( nmax, 1024 + 1024 * $SI_L7593_112_G14 ) + -1024 * $SI_L7593_112_G14 ) exit
 7605.                enddo
 7606.                $I_L7592_124 = 1 + $I_L7592_124
 7606.                if ( $I_L7592_124 >= 8 ) exit
 7606.             enddo
 7593.             $SI_L7593_112_G14 = 1 + $SI_L7593_112_G14
 7605.             if ( $SI_L7593_112_G14 >= _rsh( 1023 + nmax, 10 ) ) exit
 7605.          enddo
 7605.       endif
 7646.       $SC_idatec_I9 = idatec(2)
 7615.       $SC_xcover_I1 = xcover%dim_1%EX
 7615.       $SC_xcover_I2 = xcover%dim_1%LB
 7615.       $SC_xcover_I4 = xcover%dim_2%SM
 7615.       $SC_xcover_I3 = xcover%dim_2%EX
 7615.       $SC_xcover_I5 = xcover%dim_2%LB
 7615.       $SC_xcover_I7 = xcover%dim_3%SM
 7615.       $SC_xcover_I6 = xcover%dim_3%EX
 7615.       $SC_xcover_I8 = xcover%dim_3%LB
 7648.       $SC_idatec_I0 = idatec(4)
 7609.       if ( nmax > 0 ) then
 7608.          $I_L7608_122 = 0
 7608.          do
 7609.             $I_L7609_102 = 0
 7609.             do
 7610.                if ( itype(1 + $I_L7609_102) == 12 ) then
 7612.                   chilw(1 + $I_L7609_102) = -2.0e-2
 7613.                   tlai(1 + $I_L7609_102) = 5.0e-1
 7614.                   grlf(1 + $I_L7609_102) = 5.9999999999999998e-1
 7615.                   xcover2(1 + $I_L7609_102) = (xcover%base_addr)(12, month(1 + $I_L7609_102), 1, 0)
 7619.                   if ( test(1 + $I_L7609_102) /= .false. ) then
 7620.                      $diff1_WR0_R5 = phenst(1 + $I_L7609_102, 2 + $I_L7608_122) + -phenst(1 + $I_L7609_102, 1 + $I_L7608_122)
 7621.                      $diff2_WR0_R6 = xday + -phenst(1 + $I_L7609_102, 1 + $I_L7608_122)
 7622.                      if ( phenst(1 + $I_L7609_102, 1 + $I_L7608_122) >= phenst(1 + $I_L7609_102, 2 + $I_L7608_122) ) then
 7623.                         if ( xday < phenst(1 + $I_L7609_102, 1 + $I_L7608_122) ) then
 7623.                            goto 10
 7623.                         else if ( xday > phenst(1 + $I_L7609_102, 2 + $I_L7608_122) ) then
 7623.    10                      continue
 7627.                            icond = 0
 7628.                            if ( xday >= phenst(1 + $I_L7609_102, 1 + $I_L7608_122) ) then
 7628.                               if ( xday <= yrl ) then
 7628.                                  icond = 1
 7628.                               endif
 7628.                            endif
 7629.                            if ( xday >= $thrsh_S13 ) then
 7629.                               if ( xday <= phenst(1 + $I_L7609_102, 2 + $I_L7608_122) ) then
 7629.                                  icond = 2
 7629.                               endif
 7629.                            endif
 7630.                            if ( icond /= 2 ) then
 7631.                               $diff1_WR0_R5 = yrl + phenst(1 + $I_L7609_102, 2 + $I_L7608_122) + -phenst(1 + $I_L7609_102, 1 + $I_L7608_122)
 7632.                               $diff2_WR0_R6 = xday + -phenst(1 + $I_L7609_102, 1 + $I_L7608_122)
 7632.                            else
 7634.                               $diff1_WR0_R5 = yrl + phenst(1 + $I_L7609_102, 2 + $I_L7608_122) + -phenst(1 + $I_L7609_102, 1 + $I_L7608_122)
 7635.                               $diff2_WR0_R6 = xday + yrl + -phenst(1 + $I_L7609_102, 1 + $I_L7608_122)
 7635.                            endif
 7635.                         endif
 7638.                         if ( icond /= 0 ) then
 7642.                            $perc_S19 = ( $diff2_WR0_R6 * 1.0/$diff1_WR0_R5 )
 7647.                            $mnl_S15 = monl($SC_idatec_I9)
 7648.                            if ( mod( $SC_idatec_I0, 4 ) == 0 ) then
 7648.                               if ( $SC_idatec_I9 == 2 ) then
 7648.                                  $mnl_S15 = 1 + $mnl_S15
 7648.                               endif
 7648.                            endif
 7649.                            if ( xday > phenst(1 + $I_L7609_102, 3) ) then
 7650.                               if ( $SC_idatec_I9 + -mind(1 + $I_L7609_102) /= 0 ) then
 7651.                                  $x1_S17 = vlt($SC_idatec_I9)
 7652.                                  $xdif1_S16 = real( $mnl_S15, 8 )
 7653.                                  $xdif2_S18 = xday + ( -kmon($SC_idatec_I9) )
 7653.                               else
 7655.                                  $x1_S17 = 6.0
 7656.                                  $xdif1_S16 = kmon(1 + $SC_idatec_I9) + -phenst(1 + $I_L7609_102, 3)
 7657.                                  $xdif2_S18 = xday + -phenst(1 + $I_L7609_102, 3)
 7657.                               endif
 7659.                               tlai(1 + $I_L7609_102) = $x1_S17 + -( $xdif2_S18 * ( 1.0/$xdif1_S16 * ( $x1_S17 + -vlt(1 + $SC_idatec_I9) ) ) )
 7659.                            else
 7661.                               tlai(1 + $I_L7609_102) = wlai(1 + $I_L7608_122) + $perc_S19 * ( wlai(2 + $I_L7608_122) + -wlai(1 + $I_L7608_122) )
 7661.                            endif
 7663.                            if ( xday > phenst(1 + $I_L7609_102, 4) ) then
 7664.                               xcover2(1 + $I_L7609_102) = 5.6899999999999995e-1 + ( 3.3100000000000007e-1 * ( yrl + -xday ) * 1.0/( yrl + -phenst(1 + $I_L7609_102, 4) ) )
 7664.                            else
 7666.                               $LD_SPLT_P2 = tlai(1 + $I_L7609_102)
 7666.                               xcover2(1 + $I_L7609_102) = 9.0000000000000002e-1 * ( 1.0 + -_expn( -$LD_SPLT_P2 ) )
 7666.                            endif
 7668.                            grlf(1 + $I_L7609_102) = xgreen(1 + $I_L7609_102, $SC_idatec_I9) + -( ( xday + ( -kmon($SC_idatec_I9) ) ) * ( 1.0/$mnl_S15 * ( xgreen(1 + $I_L7609_102, $SC_idatec_I9) + -xgreen(1 + $I_L7609_102, 1 + $SC_idatec_I9) ) ) )
 7670.                            if ( $I_L7608_122 /= 0 ) then
 7670.                               if ( $I_L7608_122 /= 1 ) then
 7670.                                  chilw(1 + $I_L7609_102) = -2.0000000000000001e-1
 7670.                               endif
 7670.                            endif
 7671.                            test(1 + $I_L7609_102) = .false.
 7672.                            index(1 + $I_L7609_102) = ( 1 + $I_L7608_122 )
 7672.                         endif
 7672.                      endif
 7672.                   endif
 7672.                endif
 7676.                $I_L7609_102 = 1 + $I_L7609_102
 7676.                if ( $I_L7609_102 >= nmax ) exit
 7676.             enddo
 7677.             $I_L7608_122 = 1 + $I_L7608_122
 7676.             if ( $I_L7608_122 >= 8 ) exit
 7676.          enddo
 7689.          $SC_yll_I52 = yll%dim_1%EX
 7689.          $SC_yll_I53 = yll%dim_1%LB
 7689.          $SC_tll_gbl_I54 = tll_gbl%dim_1%EX
 7689.          $SC_tll_gbl_I55 = tll_gbl%dim_1%LB
 7689.          $SC_tll_gbl_I57 = tll_gbl%dim_2%SM
 7689.          $SC_tll_gbl_I56 = tll_gbl%dim_2%EX
 7688.          $SC_yopt_I42 = yopt%dim_1%EX
 7688.          $SC_yopt_I43 = yopt%dim_1%LB
 7688.          $SC_topt_gbl_I44 = topt_gbl%dim_1%EX
 7688.          $SC_topt_gbl_I45 = topt_gbl%dim_1%LB
 7688.          $SC_topt_gbl_I47 = topt_gbl%dim_2%SM
 7688.          $SC_topt_gbl_I46 = topt_gbl%dim_2%EX
 7688.          $SC_topt_gbl_I48 = topt_gbl%dim_2%LB
 7688.          $SC_topt_gbl_I50 = topt_gbl%dim_3%SM
 7688.          $SC_topt_gbl_I49 = topt_gbl%dim_3%EX
 7688.          $SC_topt_gbl_I51 = topt_gbl%dim_3%LB
 7687.          $SC_chil_gbl_I34 = chil_gbl%dim_1%EX
 7687.          $SC_chil_gbl_I35 = chil_gbl%dim_1%LB
 7687.          $SC_chil_gbl_I37 = chil_gbl%dim_2%SM
 7687.          $SC_chil_gbl_I36 = chil_gbl%dim_2%EX
 7687.          $SC_chil_gbl_I38 = chil_gbl%dim_2%LB
 7687.          $SC_chil_gbl_I40 = chil_gbl%dim_3%SM
 7687.          $SC_chil_gbl_I39 = chil_gbl%dim_3%EX
 7687.          $SC_chil_gbl_I41 = chil_gbl%dim_3%LB
 7686.          $SC_green_gbl_I26 = green_gbl%dim_1%EX
 7686.          $SC_green_gbl_I27 = green_gbl%dim_1%LB
 7686.          $SC_green_gbl_I29 = green_gbl%dim_2%SM
 7686.          $SC_green_gbl_I28 = green_gbl%dim_2%EX
 7686.          $SC_green_gbl_I30 = green_gbl%dim_2%LB
 7686.          $SC_green_gbl_I32 = green_gbl%dim_3%SM
 7686.          $SC_green_gbl_I31 = green_gbl%dim_3%EX
 7686.          $SC_green_gbl_I33 = green_gbl%dim_3%LB
 7685.          $SC_zlt_gbl_I18 = zlt_gbl%dim_1%EX
 7685.          $SC_zlt_gbl_I19 = zlt_gbl%dim_1%LB
 7685.          $SC_zlt_gbl_I21 = zlt_gbl%dim_2%SM
 7685.          $SC_zlt_gbl_I20 = zlt_gbl%dim_2%EX
 7685.          $SC_zlt_gbl_I22 = zlt_gbl%dim_2%LB
 7685.          $SC_zlt_gbl_I24 = zlt_gbl%dim_3%SM
 7685.          $SC_zlt_gbl_I23 = zlt_gbl%dim_3%EX
 7685.          $SC_zlt_gbl_I25 = zlt_gbl%dim_3%LB
 7684.          $SC_vcover_gbl_I10 = vcover_gbl%dim_1%EX
 7684.          $SC_vcover_gbl_I11 = vcover_gbl%dim_1%LB
 7684.          $SC_vcover_gbl_I13 = vcover_gbl%dim_2%SM
 7684.          $SC_vcover_gbl_I12 = vcover_gbl%dim_2%EX
 7684.          $SC_vcover_gbl_I14 = vcover_gbl%dim_2%LB
 7684.          $SC_vcover_gbl_I16 = vcover_gbl%dim_3%SM
 7684.          $SC_vcover_gbl_I15 = vcover_gbl%dim_3%EX
 7684.          $SC_vcover_gbl_I17 = vcover_gbl%dim_3%LB
 7679.          $I_L7679_104 = 0
 7679. !dir$ ivdep
 7679.          do
 7680.             if ( itype(1 + $I_L7679_104) == 12 ) then
 7681.                $nsx_WR0_R7 = index(1 + $I_L7679_104)
 7682.                if ( $nsx_WR0_R7 == 9 ) then
 7682.                   $nsx_WR0_R7 = 1
 7682.                endif
 7684.                (vcover_gbl%base_addr)(1 + $I_L7679_104, latitu, 1, 0) = xcover2(1 + $I_L7679_104)
 7685.                (zlt_gbl%base_addr)(1 + $I_L7679_104, latitu, 1, 0) = tlai(1 + $I_L7679_104)
 7686.                (green_gbl%base_addr)(1 + $I_L7679_104, latitu, 1, 0) = grlf(1 + $I_L7679_104)
 7687.                (chil_gbl%base_addr)(1 + $I_L7679_104, latitu, 1, 0) = chilw(1 + $I_L7679_104)
 7688.                (topt_gbl%base_addr)(1 + $I_L7679_104, latitu, 1, 0) = (yopt%base_addr)(2, 0)
 7689.                (tll_gbl%base_addr)(1 + $I_L7679_104, latitu, 1, 0) = (yll%base_addr)(2, 0)
 7690.                (tu_gbl%base_addr)(1 + $I_L7679_104, latitu, 1, 0) = (yu%base_addr)(2, 0)
 7691.                (defac_gbl%base_addr)(1 + $I_L7679_104, latitu, 1, 0) = (yefac%base_addr)(2, 0)
 7692.                (ph1_gbl%base_addr)(1 + $I_L7679_104, latitu, 1, 0) = (yh1%base_addr)(2, 0)
 7693.                (ph2_gbl%base_addr)(1 + $I_L7679_104, latitu, 1, 0) = (yh2%base_addr)(2, 0)
 7694.                (rstpar_gbl%base_addr)(1 + $I_L7679_104, latitu, 1, 1, 0) = (ystpar%base_addr)(2, 1, 0)
 7695.                (rstpar_gbl%base_addr)(1 + $I_L7679_104, latitu, 1, 2, 0) = (ystpar%base_addr)(2, 2, 0)
 7696.                (rstpar_gbl%base_addr)(1 + $I_L7679_104, latitu, 1, 3, 0) = (ystpar%base_addr)(2, 3, 0)
 7683.                $nsx_WR0_R7 = min( 6, $nsx_WR0_R7 )
 7683.                nsx(1 + $I_L7679_104) = $nsx_WR0_R7
 7683.             endif
 7698.             $I_L7679_104 = 1 + $I_L7679_104
 7698.             if ( $I_L7679_104 >= nmax ) exit
 7698.          enddo
 7698.       endif
 7402.       _free( t$2249 )
 7700.       return
 7700.       end
 7700.       
 7710.       
 7710.       subroutine sibwet( ibmax, jbmax, sinp, sinmax, imask, wsib, ssib, mxiter, ibmaxperjb )
 7710.       t$1390 = ibmax
 7710.       t$1391 = jbmax
 7736.       t$2288 = _zla( 0, ibmax )
 7710.       t$2289 = _zla( 0, ibmax )
 7736.       t$2290 = _zla( 0, jbmax )
 7710.       t$2291 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 7710.       ibmaxperjb%dim_1%LB = 1
 7710.       t$1399 = mxiter
 7747.       t$2292 = _zla( 0, mxiter )
 7710.       t$2293 = 13 * _zla( 0, mxiter )
 7747.       t$2296 = 104 * _zla( 0, mxiter )
 7745.       t$2297 = 8 * ( 7 + 104 * _zla( 0, mxiter ) ) / 8
 7745.       t$2299 = t$2297 + 104 * _zla( 0, mxiter )
 7746.       t$2300 = 8 * ( 7 + t$2297 + 104 * _zla( 0, mxiter ) ) / 8
 7746.       t$2302 = t$2300 + 104 * _zla( 0, mxiter )
 7710.       t$2294 = int( _alloc( t$2300 + 104 * _zla( 0, mxiter ) ), 8 )
 7747.       t$2295 = t$2294
 7745.       t$2298 = t$2297 + t$2294
 7746.       t$2301 = t$2300 + t$2294
 7798.       if ( mxiter > 0 ) then
 7798.          $I_L7798_58 = 0
 7798. !dir$ ivdep
 7798.          do
 7798.             sm(1 + $I_L7798_58, 1) = 0.0
 7799.             time(1 + $I_L7798_58, 1) = 0.0
 7800.             fact(1 + $I_L7798_58, 1) = 0.0
 7798.             $I_L7798_58 = 1 + $I_L7798_58
 7798.             if ( $I_L7798_58 >= 13 * mxiter ) exit
 7798.          enddo
 7798.       endif
 7801.       if ( and( -jbmax, -ibmax ) < 0 ) then
 7801.          $I_L7801_60 = 0
 7801. !dir$ ivdep
 7801.          do
 7801.             ssib(1 + $I_L7801_60, 1) = 0.0
 7802.             wsib(1 + $I_L7801_60, 1) = 0.0
 7801.             $I_L7801_60 = 1 + $I_L7801_60
 7801.             if ( $I_L7801_60 >= jbmax * ibmax ) exit
 7801.          enddo
 7801.       endif
 7849.       $SC_nfctrl_I32 = nfctrl(83)
 7839.       $SC_xcover_fixed_I24 = xcover_fixed%dim_1%EX
 7839.       $SC_xcover_fixed_I25 = xcover_fixed%dim_1%LB
 7839.       $SC_xcover_fixed_I27 = xcover_fixed%dim_2%SM
 7839.       $SC_xcover_fixed_I26 = xcover_fixed%dim_2%EX
 7839.       $SC_xcover_fixed_I28 = xcover_fixed%dim_2%LB
 7839.       $SC_xcover_fixed_I30 = xcover_fixed%dim_3%SM
 7839.       $SC_xcover_fixed_I29 = xcover_fixed%dim_3%EX
 7839.       $SC_xcover_fixed_I31 = xcover_fixed%dim_3%LB
 7817.       $SC_zlt_fixed_I14 = zlt_fixed%dim_1%EX
 7817.       $SC_zlt_fixed_I15 = zlt_fixed%dim_1%LB
 7817.       $SC_zlt_fixed_I17 = zlt_fixed%dim_2%SM
 7817.       $SC_zlt_fixed_I16 = zlt_fixed%dim_2%EX
 7817.       $SC_zlt_fixed_I18 = zlt_fixed%dim_2%LB
 7817.       $SC_zlt_fixed_I20 = zlt_fixed%dim_3%SM
 7817.       $SC_zlt_fixed_I19 = zlt_fixed%dim_3%EX
 7817.       $SC_zlt_fixed_I21 = zlt_fixed%dim_3%LB
 7814.       $SC_poros_I12 = poros%dim_1%EX
 7814.       $SC_poros_I13 = poros%dim_1%LB
 7813.       $SC_bee_I10 = bee%dim_1%EX
 7813.       $SC_bee_I11 = bee%dim_1%LB
 7812.       $SC_phsat_I8 = phsat%dim_1%EX
 7812.       $SC_phsat_I9 = phsat%dim_1%LB
 7809.       $SC_zdepth_I0 = zdepth%dim_1%EX
 7809.       $SC_zdepth_I1 = zdepth%dim_1%LB
 7809.       $SC_zdepth_I3 = zdepth%dim_2%SM
 7809.       $SC_zdepth_I2 = zdepth%dim_2%EX
 7809.       $SC_zdepth_I4 = zdepth%dim_2%LB
 7807.       $I_L7807_62 = 0
 7807.       do
 7809.          $SC_tzdep_I5 = (zdepth%base_addr)(1 + $I_L7807_62, 1, 0)
 7810.          $SC_tzdep_I6 = (zdepth%base_addr)(1 + $I_L7807_62, 2, 0)
 7811.          $SC_tzdep_I7 = (zdepth%base_addr)(1 + $I_L7807_62, 3, 0)
 7812.          $tphsat_S6 = (phsat%base_addr)(1 + $I_L7807_62, 0)
 7813.          $tbee_S5 = (bee%base_addr)(1 + $I_L7807_62, 0)
 7814.          tporos = (poros%base_addr)(1 + $I_L7807_62, 0)
 7815.          $imm1_S1 = 1
 7816.          $imm2_S2 = 1
 7817.          $SC_tzltm_I22 = (zlt_fixed%base_addr)(1 + $I_L7807_62, 1, 1, 0)
 7818.          $SC_tzltm_I23 = (zlt_fixed%base_addr)(1 + $I_L7807_62, 1, 2, 0)
 7819.          $I_L7819_48 = 0
 7819. !dir$ ivdep
 7819.          do
 7820.             if ( $SC_tzltm_I22 <= (zlt_fixed%base_addr)(1 + $I_L7807_62, 2 + $I_L7819_48, 1, 0) ) then
 7821.                $imm1_S1 = ( 2 + $I_L7819_48 )
 7822.                $SC_tzltm_I22 = (zlt_fixed%base_addr)(1 + $I_L7807_62, 2 + $I_L7819_48, 1, 0)
 7822.             endif
 7824.             if ( $SC_tzltm_I23 <= (zlt_fixed%base_addr)(1 + $I_L7807_62, 2 + $I_L7819_48, 2, 0) ) then
 7825.                $imm2_S2 = ( 2 + $I_L7819_48 )
 7826.                $SC_tzltm_I23 = (zlt_fixed%base_addr)(1 + $I_L7807_62, 2 + $I_L7819_48, 2, 0)
 7826.             endif
 7828.             $I_L7819_48 = 1 + $I_L7819_48
 7827.             if ( $I_L7819_48 >= 11 ) exit
 7827.          enddo
 7829.          $imm_S3 = $imm1_S1
 7830.          $ivegm_S4 = 1
 7831.          if ( $SC_tzltm_I22 <= $SC_tzltm_I23 ) then
 7832.             $imm_S3 = $imm2_S2
 7833.             $ivegm_S4 = 2
 7833.          endif
 7839.          $cover_S19 = (xcover_fixed%base_addr)(1 + $I_L7807_62, $imm_S3, $ivegm_S4, 0)
 7840.          $tph1_S18 = xph1(1 + $I_L7807_62, $ivegm_S4)
 7841.          $tph2_S17 = xph2(1 + $I_L7807_62, $ivegm_S4)
 7847.          sibmax(1 + $I_L7807_62) = tporos * ( $SC_tzdep_I5 + $SC_tzdep_I6 + $SC_tzdep_I7 )
 7849.          if ( $SC_nfctrl_I32 > 0 ) then
 7849.             $Unit_temp_O0 = nfprt
 7849.             $IOitem_O1 = ( 1 + $I_L7807_62 )
 7849.             $_IOitem_P0(0) = sibmax(1 + $I_L7807_62)
 7849.             $_IOitem_P0(1) = $SC_tzdep_I5
 7849.             $_IOitem_P0(2) = $SC_tzdep_I6
 7849.             $_IOitem_P0(3) = $SC_tzdep_I7
 7849.             $_IOitem_P0(4) = tporos
 7849.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$1414,  _substr(t$1413,1,43), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O1, 0x2000200000000L ), _iotype( (&)$_IOitem_P0(:( 0, 4, 1 )), 0x804060300000000L ) ) )
 7849.          endif
 7861.          $sref_S8 = sibmax(1 + $I_L7807_62) * _expn( ( 1.0/$tbee_S5 * log( -$tphsat_S6 ) ) )
 7868.          $smin_S7 = sibmax(1 + $I_L7807_62) * _expn( ( 1.0/$tbee_S5 * log( -1.0e-10 * $tphsat_S6 ) ) )
 7874.          $dssib_S12 = ( 1.0/( real( mxiter, 8 ) ) * ( $sref_S8 + -$smin_S7 ) )
 7880.          $dw_S10 = ( ( 1.0/( real( mxiter, 8 ) ) * ( $sref_S8 + -$smin_S7 ) ) * 1.0/sibmax(1 + $I_L7807_62) )
 7889.          $w_S9 = ( $sref_S8 * 1.0/sibmax(1 + $I_L7807_62) )
 7897.          $rsoilm_S15 = 101840.0 * ( 1.0 + -_exp3( log( abs( $w_S9 ) ), $w_S9, 2.7000000000000001e-3 ) )
 7898.          if ( mxiter > 0 ) then
 7914.             $SC_sibmax_I33 = sibmax(1 + $I_L7807_62)
 7899.             $psit_S11 = $tphsat_S6 * _exp3( log( abs( ( $w_S9 + -5.0e-1 * $dw_S10 ) ) ), ( $w_S9 + -5.0e-1 * $dw_S10 ), -$tbee_S5 )
 7899.             $rsoil_S14 = 101840.0 * ( 1.0 + -_exp3( log( abs( ( $w_S9 + -5.0e-1 * $dw_S10 ) ) ), ( $w_S9 + -5.0e-1 * $dw_S10 ), 2.7000000000000001e-3 ) )
 7899.             $hr_S16 = _expn( ( max( -10.0, ( 6.8570230314891835e-5 * $psit_S11 ) ) ) )
 7916.             sm(1 + $I_L7807_62, 1) = ( $sref_S8 + -$dssib_S12 )
 7915.             times = ( $dssib_S12 * 1.0/( max( 9.9999999999999995e-7, ( $cover_S19 * ( max( 0.0, min( 1.0, ( ( -50.0 + $psit_S11 + -$tph2_S17 ) * 1.0/( $tph1_S18 + -$tph2_S17 ) ) ) ) ) + ( 1.0 + -$cover_S19 ) * ( $hr_S16 * ( $rsoilm_S15 * 1.0/$rsoil_S14 ) ) ) ) ) )
 7917.             time(1 + $I_L7807_62, 1) = ( $dssib_S12 * 1.0/( max( 9.9999999999999995e-7, ( $cover_S19 * ( max( 0.0, min( 1.0, ( ( -50.0 + $psit_S11 + -$tph2_S17 ) * 1.0/( $tph1_S18 + -$tph2_S17 ) ) ) ) ) + ( 1.0 + -$cover_S19 ) * ( $hr_S16 * ( $rsoilm_S15 * 1.0/$rsoil_S14 ) ) ) ) ) )
 7918.             fact(1 + $I_L7807_62, 1) = ( max( 9.9999999999999995e-7, ( $cover_S19 * ( max( 0.0, min( 1.0, ( ( -50.0 + $psit_S11 + -$tph2_S17 ) * 1.0/( $tph1_S18 + -$tph2_S17 ) ) ) ) ) + ( 1.0 + -$cover_S19 ) * ( $hr_S16 * ( $rsoilm_S15 * 1.0/$rsoil_S14 ) ) ) ) )
 7919.             if ( 1 < mxiter ) then
 7898.                $I_L7898_50 = 0
 7898.                do
 7899.                   $psit_S11 = $tphsat_S6 * _exp3( log( abs( ( ( 1.0/$SC_sibmax_I33 * ( $sref_S8 + -( $dssib_S12 * real( 1 + $I_L7898_50, 8 ) ) ) ) + -5.0e-1 * $dw_S10 ) ) ), ( ( 1.0/$SC_sibmax_I33 * ( $sref_S8 + -( $dssib_S12 * real( 1 + $I_L7898_50, 8 ) ) ) ) + -5.0e-1 * $dw_S10 ), -$tbee_S5 )
 7899.                   $rsoil_S14 = 101840.0 * ( 1.0 + -_exp3( log( abs( ( ( 1.0/$SC_sibmax_I33 * ( $sref_S8 + -( $dssib_S12 * real( 1 + $I_L7898_50, 8 ) ) ) ) + -5.0e-1 * $dw_S10 ) ) ), ( ( 1.0/$SC_sibmax_I33 * ( $sref_S8 + -( $dssib_S12 * real( 1 + $I_L7898_50, 8 ) ) ) ) + -5.0e-1 * $dw_S10 ), 2.7000000000000001e-3 ) )
 7899.                   $hr_S16 = _expn( ( max( -10.0, ( 6.8570230314891835e-5 * $psit_S11 ) ) ) )
 7916.                   sm(1 + $I_L7807_62, 2 + $I_L7898_50) = ( $sref_S8 + -( $dssib_S12 * real( 2 + $I_L7898_50, 8 ) ) )
 7915.                   times = times + ( $dssib_S12 * 1.0/( max( 9.9999999999999995e-7, ( $cover_S19 * ( max( 0.0, min( 1.0, ( ( -50.0 + $psit_S11 + -$tph2_S17 ) * 1.0/( $tph1_S18 + -$tph2_S17 ) ) ) ) ) + ( 1.0 + -$cover_S19 ) * ( $hr_S16 * ( $rsoilm_S15 * 1.0/$rsoil_S14 ) ) ) ) ) )
 7917.                   time(1 + $I_L7807_62, 2 + $I_L7898_50) = times
 7918.                   fact(1 + $I_L7807_62, 2 + $I_L7898_50) = ( max( 9.9999999999999995e-7, ( $cover_S19 * ( max( 0.0, min( 1.0, ( ( -50.0 + $psit_S11 + -$tph2_S17 ) * 1.0/( $tph1_S18 + -$tph2_S17 ) ) ) ) ) + ( 1.0 + -$cover_S19 ) * ( $hr_S16 * ( $rsoilm_S15 * 1.0/$rsoil_S14 ) ) ) ) )
 7919.                   $I_L7898_50 = 1 + $I_L7898_50
 7898.                   if ( $I_L7898_50 >= -1 + mxiter ) exit
 7898.                enddo
 7898.             endif
 7898.          endif
 7921.          $I_L7807_62 = 1 + $I_L7807_62
 7919.          if ( $I_L7807_62 >= 13 ) exit
 7919.       enddo
 7925.       if ( jbmax > 0 ) then
 7926.          $SC_ibmaxperjb_I35 = ibmaxperjb%dim_1%SM
 7926.          $SC_ibmaxperjb_I34 = ibmaxperjb%dim_1%EX
 7925.          $I_L7925_66 = 0
 7925.          do
 7926.             $t_S22 = (ibmaxperjb%base_addr)(1 + $I_L7925_66, 0)
 7926.             if ( $t_S22 > 0 ) then
 7926.                $I_L7926_64 = 0
 7926.                do
 7927.                   $is_S24 = imask(1 + $I_L7926_64, 1 + $I_L7925_66)
 7928.                   if ( imask(1 + $I_L7926_64, 1 + $I_L7925_66) /= 0 ) then
 7929.                      $tsinp_S25 = sinp(1 + $I_L7926_64, 1 + $I_L7925_66)
 7931.                      $tsinp_S26 = min( sinmax, max( $tsinp_S25, 1.0000000000000001e-5 * sinmax ) )
 7932.                      if ( ( min( sinmax, max( $tsinp_S25, 1.0000000000000001e-5 * sinmax ) ) ) > 7.5e-1 * sinmax ) then
 7932.                         $etp_S27 = sinmax + -$tsinp_S26
 7932.                      else
 7935.                         $etp_S27 = 2.5e-1 * sinmax + 7.5e-1 * sinmax * log( ( 7.5e-1 * sinmax * 1.0/$tsinp_S26 ) )
 7935.                      endif
 7933.                      $facmod_S31 = min( 1.0, ( 1.3333333333333333 * $tsinp_S26 * 1.0/sinmax ) )
 7937.                      $etp_S29 = 1.0e-3 * $etp_S27
 7938.                      if ( mxiter > 0 ) then
 7938.                         $I_L7938_52 = 0
 7938. !dir$ ivdep
 7938.                         do
 7940.                            if ( time($is_S24, 1 + $I_L7938_52) + -$etp_S29 > 0.0 ) then
 7939.                               itsoil = ( 1 + $I_L7938_52 )
 7939.                               goto 10
 7939.                            endif
 7941.                            $I_L7938_52 = 1 + $I_L7938_52
 7941.                            if ( $I_L7938_52 >= mxiter ) exit
 7941.                         enddo
 7939.                         itsoil = mxiter
 7939.    10                   continue
 7942.                         $I_L7942_54 = 0
 7942. !dir$ ivdep
 7942.                         do
 7944.                            if ( -1.0e-2 + fact($is_S24, 1 + $I_L7942_54) + -$facmod_S31 < 0.0 ) then
 7943.                               itfac = ( 1 + $I_L7942_54 )
 7943.                               goto 20
 7943.                            endif
 7945.                            $I_L7942_54 = 1 + $I_L7942_54
 7945.                            if ( $I_L7942_54 >= mxiter ) exit
 7945.                         enddo
 7943.                         itfac = mxiter
 7943.                      endif
 7943.    20                continue
 7946.                      $ssibt_S33 = min( sm($is_S24, itfac), sm($is_S24, itsoil) )
 7947.                      $iter_S34 = 1
 7947.                      if ( mxiter > 0 ) then
 7947.                         $I_L7947_56 = 0
 7947. !dir$ ivdep
 7947.                         do
 7948.                            if ( $ssibt_S33 > sm($is_S24, 1 + $I_L7947_56) ) then
 7947.                               $iter_S34 = ( 1 + $I_L7947_56 )
 7947.                               goto 30
 7947.                            endif
 7949.                            $I_L7947_56 = 1 + $I_L7947_56
 7949.                            if ( $I_L7947_56 >= mxiter ) exit
 7949.                         enddo
 7949.                         $iter_S34 = ( 1 + mxiter )
 7949.                      endif
 7949.    30                continue
 7950.                      ssib(1 + $I_L7926_64, 1 + $I_L7925_66) = sm($is_S24, $iter_S34)
 7956.                      wsib(1 + $I_L7926_64, 1 + $I_L7925_66) = ( sm($is_S24, $iter_S34) * 1.0/sibmax($is_S24) )
 7956.                   endif
 7958.                   $I_L7926_64 = 1 + $I_L7926_64
 7957.                   if ( $I_L7926_64 >= $t_S22 ) exit
 7957.                enddo
 7957.             endif
 7959.             $I_L7925_66 = 1 + $I_L7925_66
 7958.             if ( $I_L7925_66 >= jbmax ) exit
 7958.          enddo
 7958.       endif
 7710.       _free( t$2294 )
 7961.       return
 7961.       end
 7961.       
 7965.       
 7965.       subroutine sibwet_glsm( ibmax, jbmax, imask, wsib, ssib, mxiter, ibmaxperjb, soilm, nzg, wsib3d, glsm_w )
 7965.       t$1415 = ibmax
 7965.       t$1416 = jbmax
 7991.       t$2303 = _zla( 0, ibmax )
 7965.       t$2304 = _zla( 0, ibmax )
 7991.       t$2305 = _zla( 0, jbmax )
 7965.       t$2306 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 7965.       ibmaxperjb%dim_1%LB = 1
 7965.       t$2307 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 7965.       t$2308 = 3 * _zla( 0, ibmax ) * _zla( 0, jbmax )
 7965.       t$1427 = nzg
 7997.       t$2309 = _zla( 0, nzg )
 7965.       t$2310 = _zla( 0, ibmax ) * _zla( 0, jbmax ) * _zla( 0, nzg )
 7965.       t$1429 = mxiter
 8001.       t$2311 = _zla( 0, mxiter )
 7965.       t$2312 = 13 * _zla( 0, mxiter )
 8001.       t$2315 = 104 * _zla( 0, mxiter )
 7999.       t$2316 = 8 * ( 7 + 104 * _zla( 0, mxiter ) ) / 8
 7999.       t$2318 = t$2316 + 104 * _zla( 0, mxiter )
 8000.       t$2319 = 8 * ( 7 + t$2316 + 104 * _zla( 0, mxiter ) ) / 8
 8000.       t$2321 = t$2319 + 104 * _zla( 0, mxiter )
 7965.       t$2313 = int( _alloc( t$2319 + 104 * _zla( 0, mxiter ) ), 8 )
 8001.       t$2314 = t$2313
 7999.       t$2317 = t$2316 + t$2313
 8000.       t$2320 = t$2319 + t$2313
 8086.       if ( and( -jbmax, -ibmax ) < 0 ) then
 8086.          $I_L8086_115 = 0
 8086. !dir$ ivdep
 8086.          do
 8086.             ssib(1 + $I_L8086_115, 1) = 0.0
 8087.             wsib(1 + $I_L8086_115, 1) = 0.0
 8086.             $I_L8086_115 = 1 + $I_L8086_115
 8086.             if ( $I_L8086_115 >= jbmax * ibmax ) exit
 8086.          enddo
 8086.       endif
 8129.       $SC_nfctrl_I10 = nfctrl(83)
 8098.       $SC_poros_I8 = poros%dim_1%EX
 8098.       $SC_poros_I9 = poros%dim_1%LB
 8093.       $SC_zdepth_I0 = zdepth%dim_1%EX
 8093.       $SC_zdepth_I1 = zdepth%dim_1%LB
 8093.       $SC_zdepth_I3 = zdepth%dim_2%SM
 8093.       $SC_zdepth_I2 = zdepth%dim_2%EX
 8093.       $SC_zdepth_I4 = zdepth%dim_2%LB
 8129.       if ( $SC_nfctrl_I10 > 0 ) then
 8092.          $I_L8092_97 = 0
 8092.          do
 8093.             $SC_tzdep_I5 = (zdepth%base_addr)(1 + $I_L8092_97, 1, 0)
 8094.             $SC_tzdep_I6 = (zdepth%base_addr)(1 + $I_L8092_97, 2, 0)
 8095.             $SC_tzdep_I7 = (zdepth%base_addr)(1 + $I_L8092_97, 3, 0)
 8098.             tporos = (poros%base_addr)(1 + $I_L8092_97, 0)
 8129.             $Unit_temp_O0 = nfprt
 8129.             $IOitem_O1 = ( 1 + $I_L8092_97 )
 8129.             $_IOitem_P0(0) = ( tporos * ( $SC_tzdep_I5 + $SC_tzdep_I6 + $SC_tzdep_I7 ) )
 8129.             $_IOitem_P0(1) = $SC_tzdep_I5
 8129.             $_IOitem_P0(2) = $SC_tzdep_I6
 8129.             $_IOitem_P0(3) = $SC_tzdep_I7
 8129.             $_IOitem_P0(4) = tporos
 8129.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$1447,  _substr(t$1446,1,43), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O1, 0x2000200000000L ), _iotype( (&)$_IOitem_P0(:( 0, 4, 1 )), 0x804060300000000L ) ) )
 8159.             $I_L8092_97 = 1 + $I_L8092_97
 8158.             if ( $I_L8092_97 >= 13 ) exit
 8158.          enddo
 8158.       endif
 8163.       if ( jbmax > 0 ) then
 8164.          $SC_ibmaxperjb_I12 = ibmaxperjb%dim_1%SM
 8164.          $SC_ibmaxperjb_I11 = ibmaxperjb%dim_1%EX
 8176.          $SC_poros_I8 = poros%dim_1%EX
 8176.          $SC_poros_I9 = poros%dim_1%LB
 8171.          $SC_zdepth_I0 = zdepth%dim_1%EX
 8171.          $SC_zdepth_I1 = zdepth%dim_1%LB
 8171.          $SC_zdepth_I3 = zdepth%dim_2%SM
 8171.          $SC_zdepth_I2 = zdepth%dim_2%EX
 8171.          $SC_zdepth_I4 = zdepth%dim_2%LB
 8163.          $I_L8163_125 = 0
 8163.          do
 8164.             $t_S3 = (ibmaxperjb%base_addr)(1 + $I_L8163_125, 0)
 8164.             if ( $t_S3 > 0 ) then
 8164.                $I_L8164_123 = 0
 8164.                do
 8166.                   $I_L8166_117 = 0
 8166. !dir$ ivdep
 8166.                   do
 8166.                      wsib3d(1 + $I_L8164_123, 1 + $I_L8163_125, 1 + $I_L8166_117) = 0.0
 8166.                      $I_L8166_117 = 1 + $I_L8166_117
 8166.                      if ( $I_L8166_117 >= 3 ) exit
 8166.                   enddo
 8168.                   $is_S5 = imask(1 + $I_L8164_123, 1 + $I_L8163_125)
 8169.                   if ( imask(1 + $I_L8164_123, 1 + $I_L8163_125) /= 0 ) then
 8171.                      $SC_tzdep_I5 = (zdepth%base_addr)($is_S5, 1, 0)
 8172.                      $SC_tzdep_I6 = (zdepth%base_addr)($is_S5, 2, 0)
 8173.                      $SC_tzdep_I7 = (zdepth%base_addr)($is_S5, 3, 0)
 8176.                      $tporos_S19 = (poros%base_addr)($is_S5, 0)
 8180.                      glsm_tzdep(0) = 0.0
 8181.                      glsm_w_sib(0) = 0.0
 8183.                      $glsm_tzdep_WR0_R0 = 0.0
 8183.                      $I_L8183_99 = 0
 8183.                      do
 8184.                         $glsm_tzdep_WR0_R0 = $glsm_tzdep_WR0_R0 + (zdepth%base_addr)($is_S5, 1 + $I_L8183_99, 0)
 8184.                         glsm_tzdep(1 + $I_L8183_99) = $glsm_tzdep_WR0_R0
 8185.                         glsm_w_sib(1 + $I_L8183_99) = 0.0
 8186.                         $I_L8183_99 = 1 + $I_L8183_99
 8183.                         if ( $I_L8183_99 >= 3 ) exit
 8183.                      enddo
 8190.                      if ( nzg > 0 ) then
 8190.                         $I_L8190_101 = 0
 8190. !dir$ ivdep
 8190.                         do
 8191.                            glsm_w1d(1 + $I_L8190_101) = glsm_w(1 + $I_L8164_123, 1 + $I_L8163_125, 1 + $I_L8190_101)
 8192.                            $I_L8190_101 = 1 + $I_L8190_101
 8190.                            if ( $I_L8190_101 >= nzg ) exit
 8190.                         enddo
 8190.                      endif
 8200.                      t$3372 = _zla( 0, ( 1 + nzg ) )
 8200.                      t$3375 = int( _alloc( _zla( 0, 8 * _zla( 0, ( 1 + nzg ) ) ) ), 8 )
 8200.                      if ( nzg >= 0 ) then
 8200.                         $I_L8200_119 = 0
 8200. !dir$ ivdep
 8200.                         do
 8200.                            t$3374(1 + $I_L8200_119) = glsm_slz($I_L8200_119)
 8200.                            $I_L8200_119 = 1 + $I_L8200_119
 8200.                            if ( $I_L8200_119 >= 1 + nzg ) exit
 8200.                         enddo
 8200.                      endif
 8200. !dir$ suppress t$3374(1)
 8201. !dir$ suppress glsm_w1d(0)
 8201.                      t$3377 = $_StaticDV_P2
 8201.                      t$3377%base_addr = pointer to array[1] of real (kind=8)( loc( glsm_w1d(0) ) )
 8197.                      t$1448 = 4
 8197.                      t$2322 = 4
 8197.                      t$2325 = 32
 8197.                      t$1452 = ( 1 + nzg )
 8197.                      t$2326 = _zla( 0, ( 1 + nzg ) )
 8197.                      t$2327 = 32
 8197.                      t$2329 = t$2327 + 8 * _zla( 0, ( 1 + nzg ) )
 8197.                      t$2330 = 8 * ( 7 + t$2327 + 8 * _zla( 0, ( 1 + nzg ) ) ) / 8
 8197.                      t$2332 = t$2330 + 8 * _zla( 0, ( 1 + nzg ) )
 8197.                      t$2333 = 8 * ( 7 + t$2330 + 8 * _zla( 0, ( 1 + nzg ) ) ) / 8
 8197.                      t$2335 = 32 + t$2333
 8197.                      t$2323 = int( _alloc( 32 + t$2333 ), 8 )
 8197.                      t$2324 = t$2323
 8197.                      t$2328 = t$2327 + t$2323
 8197.                      t$2331 = t$2330 + t$2323
 8197.                      t$2334 = t$2333 + t$2323
 8197.                      if ( nzg >= 0 ) then
 8197.                         $SC_t_I14 = 1
 8197.                         $SC_t_I13 = _zla( 0, ( 1 + nzg ) )
 8197.                         $I_L8197_103 = 0
 8197. !dir$ ivdep
 8197.                         do
 8197.                            zc(1 + $I_L8197_103) = t$3374(1 + $I_L8197_103)
 8197.                            wi(1 + $I_L8197_103) = (t$3377%base_addr)(1 + $I_L8197_103, 0)
 8197.                            $I_L8197_103 = 1 + $I_L8197_103
 8197.                            if ( $I_L8197_103 >= 1 + nzg ) exit
 8197.                         enddo
 8197.                      endif
 8197.                      $I_L8197_105 = 0
 8197. !dir$ ivdep
 8197.                      do
 8197.                         zm(1 + $I_L8197_105) = glsm_tzdep($I_L8197_105)
 8197.                         wf(1 + $I_L8197_105) = 0.0
 8197.                         $I_L8197_105 = 1 + $I_L8197_105
 8197.                         if ( $I_L8197_105 >= 4 ) exit
 8197.                      enddo
 8197.                      wf(1) = wi(2)
 8197.                      wf(2) = wi(2)
 8197.                      $dzlft_S11 = 0.0
 8197.                      $l_S12 = 2
 8197.                      $I_L8197_121 = 0
 8197.                      do
 8197.                         if ( $dzlft_S11 /= 0.0 ) then
 8197.                            wf(3 + $I_L8197_121) = wf(3 + $I_L8197_121) + $dzlft_S11 * wi($l_S12)
 8197.                            $l_S12 = 1 + $l_S12
 8197.                         endif
 8197.                         $SC_zm_I19 = zm(3 + $I_L8197_121)
 8197.                         $I_l_107 = 0
 8197. !dir$ ivdep
 8197.                         do
 8197.                            if ( zc($l_S12 + $I_l_107) > $SC_zm_I19 ) then
 8197.                               $dzlft_S11 = zc($l_S12 + $I_l_107) + -$SC_zm_I19
 8197.                               wf(3 + $I_L8197_121) = wf(3 + $I_L8197_121) + wi($l_S12 + $I_l_107) * ( $SC_zm_I19 + -zc(-1 + $l_S12 + $I_l_107) )
 8197.                               $l_S12 = ( $l_S12 + $I_l_107 )
 8197.                               $I_L8197_121 = 1 + $I_L8197_121
 8197.                               ???<$I_L8197_121 < 2>???
 8197.                               goto 10
 8197.                            endif
 8197.                            wf(3 + $I_L8197_121) = wf(3 + $I_L8197_121) + wi($l_S12 + $I_l_107) * ( zc($l_S12 + $I_l_107) + -zc(-1 + $l_S12 + $I_l_107) )
 8197.                            $I_l_107 = 1 + $I_l_107
 8197.                            if ( $I_l_107 >= 1 + max( 0, 1 + nzg + -$l_S12 ) ) exit
 8197.                         enddo
 8197.    10                   continue
 8197.                         $SC_zc_I15 = zc(1 + nzg)
 8197.                         $I_L8197_109 = 0
 8197. !dir$ ivdep
 8197.                         do
 8197.                            if ( zm(3 + $I_L8197_109) > $SC_zc_I15 ) then
 8197.                               wf(3 + $I_L8197_109) = ( wf(3 + $I_L8197_109) * 1.0/( $SC_zc_I15 + -zm(2 + $I_L8197_109) ) )
 8197.                            else
 8197.                               wf(3 + $I_L8197_109) = ( wf(3 + $I_L8197_109) * 1.0/( zm(3 + $I_L8197_109) + -zm(2 + $I_L8197_109) ) )
 8197.                            endif
 8197.                            $I_L8197_109 = 1 + $I_L8197_109
 8197.                            if ( $I_L8197_109 >= 2 ) exit
 8197.                         enddo
 8197.                         $I_L8197_111 = 0
 8197. !dir$ ivdep
 8197.                         do
 8197.                            glsm_w_sib($I_L8197_111) = wf(1 + $I_L8197_111)
 8197.                            $I_L8197_111 = 1 + $I_L8197_111
 8197.                            if ( $I_L8197_111 >= 4 ) exit
 8197.                         enddo
 8197.                         _free( t$2323 )
 8200.                         _free( t$3375 )
 8259.                         ssib(1 + $I_L8164_123, 1 + $I_L8163_125) = 0.0
 8260.                         wsib(1 + $I_L8164_123, 1 + $I_L8163_125) = 0.0
 8265.                         $SC_wsib_I17 = 0.0
 8266.                         $SC_ssib_I18 = 0.0
 8264.                         $SC_glsm_tzdep_I16 = glsm_tzdep(3)
 8209.                         $I_L8209_113 = 0
 8209. !dir$ ivdep
 8209.                         do
 8210.                            wsib3d(1 + $I_L8164_123, 1 + $I_L8163_125, 1 + $I_L8209_113) = glsm_w_sib(1 + $I_L8209_113)
 8264.                            $fx_S18 = ( 1.0/$SC_glsm_tzdep_I16 * ( glsm_tzdep(1 + $I_L8209_113) + -glsm_tzdep($I_L8209_113) ) )
 8265.                            $SC_wsib_I17 = $SC_wsib_I17 + $fx_S18 * glsm_w_sib(1 + $I_L8209_113)
 8266.                            $SC_ssib_I18 = $SC_ssib_I18 + $fx_S18 * $tporos_S19 * glsm_w_sib(1 + $I_L8209_113)
 8211.                            $I_L8209_113 = 1 + $I_L8209_113
 8209.                            if ( $I_L8209_113 >= 3 ) exit
 8209.                         enddo
 8265.                         wsib(1 + $I_L8164_123, 1 + $I_L8163_125) = $SC_wsib_I17
 8266.                         ssib(1 + $I_L8164_123, 1 + $I_L8163_125) = $SC_ssib_I18
 8272.                         soilm(1 + $I_L8164_123, 1 + $I_L8163_125) = $tporos_S19 * ( $SC_tzdep_I5 * wsib3d(1 + $I_L8164_123, 1 + $I_L8163_125, 1) + $SC_tzdep_I6 * wsib3d(1 + $I_L8164_123, 1 + $I_L8163_125, 2) + $SC_tzdep_I7 * wsib3d(1 + $I_L8164_123, 1 + $I_L8163_125, 3) )
 8272.                      endif
 8277.                      $I_L8164_123 = 1 + $I_L8164_123
 8276.                      if ( $I_L8164_123 >= $t_S3 ) exit
 8276.                   enddo
 8276.                endif
 8278.                $I_L8163_125 = 1 + $I_L8163_125
 8277.                if ( $I_L8163_125 >= jbmax ) exit
 8277.             enddo
 8277.          endif
 7965.          _free( t$2313 )
 8280.          return
 8280.       end
 8280.       
 8282.       
 8282.       subroutine extrak( w, dw, tbee, tphsat, rsoilm, cover, tph1, tph2, psit, factor )
 8303.       psit = tphsat * _exp3( log( abs( ( w + -5.0e-1 * dw ) ) ), ( w + -5.0e-1 * dw ), -tbee )
 8313.       $rsoil_S0 = 101840.0 * ( 1.0 + -_exp3( log( abs( ( w + -5.0e-1 * dw ) ) ), ( w + -5.0e-1 * dw ), 2.7000000000000001e-3 ) )
 8327.       $hr_S1 = _expn( ( max( -10.0, ( 6.8570230314891835e-5 * psit ) ) ) )
 8349.       factor = max( 9.9999999999999995e-7, ( cover * ( max( 0.0, min( 1.0, ( ( -50.0 + psit + -tph2 ) * 1.0/( tph1 + -tph2 ) ) ) ) ) + ( 1.0 + -cover ) * ( $hr_S1 * ( rsoilm * 1.0/$rsoil_S0 ) ) ) )
 8350.       return
 8350.       end
 8350.       
 8354.       
 8354.       subroutine vert_interp( nsib, nzg, tzdep, glsm_slz, gl_sm, glsm_w_sib )
 8354.       t$1448 = nsib
 8363.       t$2322 = _zla( 0, nsib )
 8363.       glsm_slz%dim_1%LB = 1
 8363.       gl_sm%dim_1%LB = 1
 8369.       t$2325 = 8 * _zla( 0, nsib )
 8354.       t$1452 = nzg
 8371.       t$2326 = _zla( 0, nzg )
 8371.       t$2327 = 8 * ( 7 + 8 * _zla( 0, nsib ) ) / 8
 8371.       t$2329 = t$2327 + 8 * _zla( 0, nzg )
 8370.       t$2330 = 8 * ( 7 + t$2327 + 8 * _zla( 0, nzg ) ) / 8
 8370.       t$2332 = t$2330 + 8 * _zla( 0, nzg )
 8368.       t$2333 = 8 * ( 7 + t$2330 + 8 * _zla( 0, nzg ) ) / 8
 8368.       t$2335 = t$2333 + 8 * _zla( 0, nsib )
 8354.       t$2323 = int( _alloc( t$2333 + 8 * _zla( 0, nsib ) ), 8 )
 8369.       t$2324 = t$2323
 8371.       t$2328 = t$2327 + t$2323
 8370.       t$2331 = t$2330 + t$2323
 8368.       t$2334 = t$2333 + t$2323
 8378.       if ( nzg > 0 ) then
 8379.          $SC_glsm_slz_I1 = glsm_slz%dim_1%SM
 8379.          $SC_glsm_slz_I0 = glsm_slz%dim_1%EX
 8400.          $SC_gl_sm_I3 = gl_sm%dim_1%SM
 8400.          $SC_gl_sm_I2 = gl_sm%dim_1%EX
 8378.          $I_L8378_47 = 0
 8378. !dir$ ivdep
 8378.          do
 8379.             zc(1 + $I_L8378_47) = (glsm_slz%base_addr)(1 + $I_L8378_47, 0)
 8400.             wi(1 + $I_L8378_47) = (gl_sm%base_addr)(1 + $I_L8378_47, 0)
 8380.             $I_L8378_47 = 1 + $I_L8378_47
 8378.             if ( $I_L8378_47 >= nzg ) exit
 8378.          enddo
 8378.       endif
 8382.       if ( nsib > 0 ) then
 8382.          $I_L8382_49 = 0
 8382. !dir$ ivdep
 8382.          do
 8383.             zm(1 + $I_L8382_49) = tzdep(1 + $I_L8382_49)
 8406.             wf(1 + $I_L8382_49) = 0.0
 8384.             $I_L8382_49 = 1 + $I_L8382_49
 8382.             if ( $I_L8382_49 >= nsib ) exit
 8382.          enddo
 8382.       endif
 8410.       wf(1) = wi(2)
 8411.       wf(2) = wi(2)
 8414.       $dzlft_S3 = 0.0
 8415.       $l_S4 = 2
 8416.       if ( -3 + nsib >= 0 ) then
 8416.          $I_L8416_57 = 0
 8416.          do
 8420.             if ( $dzlft_S3 /= 0.0 ) then
 8422.                wf(3 + $I_L8416_57) = wf(3 + $I_L8416_57) + $dzlft_S3 * wi($l_S4)
 8424.                $l_S4 = 1 + $l_S4
 8424.             endif
 8430.             $SC_zm_I5 = zm(3 + $I_L8416_57)
 8428.             $I_l_51 = 0
 8428. !dir$ ivdep
 8428.             do
 8430.                if ( zc($l_S4 + $I_l_51) > $SC_zm_I5 ) then
 8443.                   $dzlft_S3 = zc($l_S4 + $I_l_51) + -$SC_zm_I5
 8442.                   wf(3 + $I_L8416_57) = wf(3 + $I_L8416_57) + wi($l_S4 + $I_l_51) * ( $SC_zm_I5 + -zc(-1 + $l_S4 + $I_l_51) )
 8436.                   $l_S4 = ( $l_S4 + $I_l_51 )
 8445.                   $I_L8416_57 = 1 + $I_L8416_57
 8445.                   ???<$I_L8416_57 < -2 + nsib>???
 8445.                   goto 10
 8445.                endif
 8432.                wf(3 + $I_L8416_57) = wf(3 + $I_L8416_57) + wi($l_S4 + $I_l_51) * ( zc($l_S4 + $I_l_51) + -zc(-1 + $l_S4 + $I_l_51) )
 8438.                $I_l_51 = 1 + $I_l_51
 8432.                if ( $I_l_51 >= 1 + max( 0, nzg + -$l_S4 ) ) exit
 8432.             enddo
 8432.    10       continue
 8454.             $SC_zc_I4 = zc(nzg)
 8449.             $I_L8449_53 = 0
 8449. !dir$ ivdep
 8449.             do
 8454.                if ( zm(3 + $I_L8449_53) > $SC_zc_I4 ) then
 8455.                   wf(3 + $I_L8449_53) = ( wf(3 + $I_L8449_53) * 1.0/( $SC_zc_I4 + -zm(2 + $I_L8449_53) ) )
 8455.                else
 8457.                   wf(3 + $I_L8449_53) = ( wf(3 + $I_L8449_53) * 1.0/( zm(3 + $I_L8449_53) + -zm(2 + $I_L8449_53) ) )
 8457.                endif
 8459.                $I_L8449_53 = 1 + $I_L8449_53
 8458.                if ( $I_L8449_53 >= -2 + nsib ) exit
 8458.             enddo
 8458.          endif
 8463.          if ( nsib > 0 ) then
 8463.             $I_L8463_55 = 0
 8463. !dir$ ivdep
 8463.             do
 8464.                glsm_w_sib(1 + $I_L8463_55) = wf(1 + $I_L8463_55)
 8466.                $I_L8463_55 = 1 + $I_L8463_55
 8463.                if ( $I_L8463_55 >= nsib ) exit
 8463.             enddo
 8463.          endif
 8354.          _free( t$2323 )
 8486.          return
 8486.       end
 8486.       
  136.       
  136.       module sfc_ssib
  136.       end
  136.       
