       !        
       !        Cray Inc. Decompilation
       !        Notice - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  SemiLagrangian.f90
       !        File                  :  SemiLagrangian.opt
       !        Network               :  Gemini interconnect
       !        Target                :  X86, 64-bit, sse3
       !        
  443.       
  443.       subroutine semilagr( nit, delt )
  158.       t$9 = ( ibmax * kmax )
  190.       t$74 = _zla( 0, ( ibmax * kmax ) )
  190.       t$77 = 8 * _zla( 0, ( ibmax * kmax ) )
  158.       t$8 = ( ibmax * kmax * 4 )
  168.       t$78 = _zla( 0, ( ibmax * kmax * 4 ) )
  168.       t$80 = 8 * _zla( 0, ( ibmax * kmax ) ) + 4 * _zla( 0, ( ibmax * kmax * 4 ) )
  158.       t$10 = ( ibmax * kmax * 12 )
  179.       t$81 = _zla( 0, ( ibmax * kmax * 12 ) )
  179.       t$83 = 8 * _zla( 0, ( ibmax * kmax ) ) + 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 4 * _zla( 0, ( ibmax * kmax * 12 ) )
  169.       t$85 = 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 4 * _zla( 0, ( ibmax * kmax * 12 ) ) + 12 * _zla( 0, ( ibmax * kmax ) )
  180.       t$87 = 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 12 * _zla( 0, ( ibmax * kmax ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) )
  170.       t$89 = 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) )
  183.       t$90 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 )
  183.       t$92 = 8 * _zla( 0, ( ibmax * kmax ) ) + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 )
  183.       t$93 = 8 * _zla( 0, ( ibmax * kmax ) ) + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 )
  183.       t$95 = 16 * _zla( 0, ( ibmax * kmax ) ) + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 )
  183.       t$96 = 16 * _zla( 0, ( ibmax * kmax ) ) + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 )
  183.       t$98 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 24 * _zla( 0, ( ibmax * kmax ) )
  183.       t$99 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 24 * _zla( 0, ( ibmax * kmax ) )
  183.       t$101 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 32 * _zla( 0, ( ibmax * kmax ) )
  184.       t$102 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 32 * _zla( 0, ( ibmax * kmax ) )
  184.       t$104 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 40 * _zla( 0, ( ibmax * kmax ) )
  188.       t$105 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 40 * _zla( 0, ( ibmax * kmax ) )
  188.       t$107 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 48 * _zla( 0, ( ibmax * kmax ) )
  185.       t$108 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 48 * _zla( 0, ( ibmax * kmax ) )
  185.       t$110 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 56 * _zla( 0, ( ibmax * kmax ) )
  187.       t$111 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 56 * _zla( 0, ( ibmax * kmax ) )
  187.       t$113 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 56 * _zla( 0, ( ibmax * kmax ) ) + 8 * _zla( 0, ( ibmax * kmax * 4 ) )
  186.       t$114 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 56 * _zla( 0, ( ibmax * kmax ) ) + 8 * _zla( 0, ( ibmax * kmax * 4 ) )
  186.       t$116 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 8 * _zla( 0, ( ibmax * kmax * 4 ) ) + 64 * _zla( 0, ( ibmax * kmax ) )
  189.       t$117 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 8 * _zla( 0, ( ibmax * kmax * 4 ) ) + 64 * _zla( 0, ( ibmax * kmax ) )
  189.       t$119 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 8 * _zla( 0, ( ibmax * kmax * 4 ) ) + 72 * _zla( 0, ( ibmax * kmax ) )
  158.       t$75 = int( _alloc( 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 8 * _zla( 0, ( ibmax * kmax * 4 ) ) + 72 * _zla( 0, ( ibmax * kmax ) ) ), 8 )
  190.       t$76 = t$75
  168.       t$79 = t$75 + 8 * _zla( 0, ( ibmax * kmax ) )
  179.       t$82 = t$75 + 8 * _zla( 0, ( ibmax * kmax ) ) + 4 * _zla( 0, ( ibmax * kmax * 4 ) )
  169.       t$84 = t$75 + 8 * _zla( 0, ( ibmax * kmax ) ) + 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 4 * _zla( 0, ( ibmax * kmax * 12 ) )
  180.       t$86 = t$75 + 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 4 * _zla( 0, ( ibmax * kmax * 12 ) ) + 12 * _zla( 0, ( ibmax * kmax ) )
  170.       t$88 = t$75 + 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 12 * _zla( 0, ( ibmax * kmax ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) )
  183.       t$91 = t$75 + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 )
  183.       t$94 = t$75 + 8 * _zla( 0, ( ibmax * kmax ) ) + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 )
  183.       t$97 = t$75 + 16 * _zla( 0, ( ibmax * kmax ) ) + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 )
  183.       t$100 = t$75 + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 24 * _zla( 0, ( ibmax * kmax ) )
  184.       t$103 = t$75 + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 32 * _zla( 0, ( ibmax * kmax ) )
  188.       t$106 = t$75 + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 40 * _zla( 0, ( ibmax * kmax ) )
  185.       t$109 = t$75 + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 48 * _zla( 0, ( ibmax * kmax ) )
  187.       t$112 = t$75 + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 56 * _zla( 0, ( ibmax * kmax ) )
  186.       t$115 = t$75 + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 56 * _zla( 0, ( ibmax * kmax ) ) + 8 * _zla( 0, ( ibmax * kmax * 4 ) )
  189.       t$118 = t$75 + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 8 * _zla( 0, ( ibmax * kmax * 4 ) ) + 64 * _zla( 0, ( ibmax * kmax ) )
  198.       $snt_T0 = _mt_single( 1, _mt_rw_list(...) )
  199.       jglob = 0
  200.       $snt_T0 = _mt_endsingle( 1, _mt_rw_list(...), $snt_T0 )
  210.       $SC_fgu_I297 = fgu%dim_1%EX
  210.       $SC_fgu_I298 = fgu%dim_1%LB
  210.       $SC_fgu_I299 = fgu%dim_2%SM
  210.       $SC_fgu_I296 = fgu%dim_2%EX
  210.       $SC_fgu_I300 = fgu%dim_2%LB
  210.       $SC_fgu_I301 = fgu%dim_3%EX
  209.       $SC_coslat_I291 = coslat%dim_1%EX
  209.       $SC_coslat_I292 = coslat%dim_1%LB
  209.       $SC_coslat_I294 = coslat%dim_2%SM
  209.       $SC_coslat_I293 = coslat%dim_2%EX
  209.       $SC_coslat_I295 = coslat%dim_2%LB
  208.       $SC_ibmaxperjb_I289 = ibmaxperjb%dim_1%EX
  208.       $SC_ibmaxperjb_I290 = ibmaxperjb%dim_1%LB
  201. !dir$ loop_info (automatic) cache_nt( ibmaxperjb )
  201.       do
  202.          $snt_T1 = _mt_critical( 2, _mt_rw_list(...) )
  203.          jglob = 1 + jglob
  204.          j = jglob
  205.          $snt_T1 = _mt_endcritical( 2, _mt_rw_list(...), $snt_T1 )
  206.          if ( j > jbmax ) goto 10
  208.          $t_S0 = (ibmaxperjb%base_addr)(j, 0)
  208.          if ( $t_S0 > 0 ) then
  211.             $SC_fgv_I305 = fgv%dim_1%EX
  211.             $SC_fgv_I306 = fgv%dim_1%LB
  211.             $SC_fgv_I307 = fgv%dim_2%SM
  211.             $SC_fgv_I304 = fgv%dim_2%EX
  211.             $SC_fgv_I308 = fgv%dim_2%LB
  211.             $SC_fgv_I310 = fgv%dim_3%SM
  211.             $SC_fgv_I309 = fgv%dim_3%EX
  211.             $SC_fgv_I311 = fgv%dim_3%LB
  210.             $SC_fgu_I302 = fgu%dim_3%SM
  210.             $SC_fgu_I303 = fgu%dim_3%LB
  208.             $I_L208_1122 = 0
  208. !dir$ loop_info (automatic) cache_nt( coslat )
  208.             do
  209.                aux = 6370000.0 * (coslat%base_addr)(1 + $I_L208_1122, j, 0)
  210.                $F_A34 = $SC_fgu_I296
  210.                if ( $SC_fgu_I296 > 0 ) then
  210.                   $I_L210_1032 = 0
  210. !dir$ ivdep
  210.                   do
  210.                      (fgu%base_addr)(1 + $I_L208_1122, $SC_fgu_I300 + $I_L210_1032, j, 0) = ( (fgu%base_addr)(1 + $I_L208_1122, $SC_fgu_I300 + $I_L210_1032, j, 0) * 1.0/aux )
  210.                      $I_L210_1032 = 1 + $I_L210_1032
  210.                      if ( $I_L210_1032 >= $F_A34 ) exit
  210.                   enddo
  210.                endif
  211.                $F_A35 = $SC_fgv_I304
  211.                if ( $SC_fgv_I304 > 0 ) then
  211.                   $I_L211_1034 = 0
  211. !dir$ ivdep
  211.                   do
  211.                      (fgv%base_addr)(1 + $I_L208_1122, $SC_fgv_I308 + $I_L211_1034, j, 0) = ( (fgv%base_addr)(1 + $I_L208_1122, $SC_fgv_I308 + $I_L211_1034, j, 0) * 1.0/aux )
  211.                      $I_L211_1034 = 1 + $I_L211_1034
  211.                      if ( $I_L211_1034 >= $F_A35 ) exit
  211.                   enddo
  211.                endif
  212.                $I_L208_1122 = 1 + $I_L208_1122
  208.                if ( $I_L208_1122 >= $t_S0 ) exit
  208.             enddo
  208.          endif
  216.          $F_A36 = fgumean%dim_1%EX
  216.          if ( fgumean%dim_1%EX > 0 ) then
  216.             $SC_fgumean_I312 = fgumean%dim_1%LB
  216.             $SC_fgumean_I314 = fgumean%dim_2%SM
  216.             $SC_fgumean_I313 = fgumean%dim_2%EX
  216.             $SC_fgumean_I315 = fgumean%dim_2%LB
  216.             $I_L216_1036 = 0
  216. !dir$ ivdep
  216.             do
  216.                (fgumean%base_addr)($SC_fgumean_I312 + $I_L216_1036, j, 0) = 0.0
  216.                $I_L216_1036 = 1 + $I_L216_1036
  216.                if ( $I_L216_1036 >= $F_A36 ) exit
  216.             enddo
  216.          endif
  217.          $F_A37 = fgvmean%dim_1%EX
  217.          if ( fgvmean%dim_1%EX > 0 ) then
  217.             $SC_fgvmean_I316 = fgvmean%dim_1%LB
  217.             $SC_fgvmean_I318 = fgvmean%dim_2%SM
  217.             $SC_fgvmean_I317 = fgvmean%dim_2%EX
  217.             $SC_fgvmean_I319 = fgvmean%dim_2%LB
  217.             $I_L217_1038 = 0
  217. !dir$ ivdep
  217.             do
  217.                (fgvmean%base_addr)($SC_fgvmean_I316 + $I_L217_1038, j, 0) = 0.0
  217.                $I_L217_1038 = 1 + $I_L217_1038
  217.                if ( $I_L217_1038 >= $F_A37 ) exit
  217.             enddo
  217.          endif
  218.          if ( kmax > 0 ) then
  219.             $SC_del_I321 = del%dim_1%EX
  219.             $SC_del_I322 = del%dim_1%LB
  220.             $SC_fgvmean_I324 = fgvmean%dim_1%EX
  220.             $SC_fgvmean_I316 = fgvmean%dim_1%LB
  220.             $SC_fgvmean_I318 = fgvmean%dim_2%SM
  220.             $SC_fgvmean_I317 = fgvmean%dim_2%EX
  220.             $SC_fgvmean_I319 = fgvmean%dim_2%LB
  219.             $SC_fgumean_I320 = fgumean%dim_1%EX
  219.             $SC_fgumean_I312 = fgumean%dim_1%LB
  219.             $SC_fgumean_I314 = fgumean%dim_2%SM
  219.             $SC_fgumean_I313 = fgumean%dim_2%EX
  219.             $SC_fgumean_I315 = fgumean%dim_2%LB
  220.             $SC_fgv_I305 = fgv%dim_1%EX
  220.             $SC_fgv_I306 = fgv%dim_1%LB
  220.             $SC_fgv_I307 = fgv%dim_2%SM
  220.             $SC_fgv_I304 = fgv%dim_2%EX
  220.             $SC_fgv_I308 = fgv%dim_2%LB
  220.             $SC_fgv_I310 = fgv%dim_3%SM
  220.             $SC_fgv_I309 = fgv%dim_3%EX
  220.             $SC_fgv_I311 = fgv%dim_3%LB
  219.             $SC_fgu_I302 = fgu%dim_3%SM
  219.             $SC_fgu_I303 = fgu%dim_3%LB
  218.             $I_L218_1124 = 0
  218.             do
  219.                $F_A38 = $SC_fgumean_I320
  219.                if ( $SC_fgumean_I320 > 0 ) then
  219.                   $SC_del_I323 = (del%base_addr)(1 + $I_L218_1124, 0)
  219.                   $I_L219_1040 = 0
  219. !dir$ ivdep
  219.                   do
  219.                      (fgumean%base_addr)($SC_fgumean_I312 + $I_L219_1040, j, 0) = (fgumean%base_addr)($SC_fgumean_I312 + $I_L219_1040, j, 0) + (fgu%base_addr)($SC_fgu_I298 + $I_L219_1040, 1 + $I_L218_1124, j, 0) * $SC_del_I323
  219.                      $I_L219_1040 = 1 + $I_L219_1040
  219.                      if ( $I_L219_1040 >= $F_A38 ) exit
  219.                   enddo
  219.                endif
  220.                $F_A39 = $SC_fgvmean_I324
  220.                if ( $SC_fgvmean_I324 > 0 ) then
  220.                   $SC_del_I323 = (del%base_addr)(1 + $I_L218_1124, 0)
  220.                   $I_L220_1042 = 0
  220. !dir$ ivdep
  220.                   do
  220.                      (fgvmean%base_addr)($SC_fgvmean_I316 + $I_L220_1042, j, 0) = (fgvmean%base_addr)($SC_fgvmean_I316 + $I_L220_1042, j, 0) + (fgv%base_addr)($SC_fgv_I306 + $I_L220_1042, 1 + $I_L218_1124, j, 0) * $SC_del_I323
  220.                      $I_L220_1042 = 1 + $I_L220_1042
  220.                      if ( $I_L220_1042 >= $F_A39 ) exit
  220.                   enddo
  220.                endif
  221.                $I_L218_1124 = 1 + $I_L218_1124
  218.                if ( $I_L218_1124 >= kmax ) exit
  218.             enddo
  218.          endif
  221.       enddo
  221.    10 continue
  226.       if ( maxnodes > 1 ) then
  227.          _mt_barrier( 3, _mt_rw_list(...) )
  228.          $snt_T2 = _mt_single( 4, _mt_rw_list(...) )
  229.          call exchange_winds( (fgu%base_addr)(fgu%dim_1%LB, fgu%dim_2%LB, fgu%dim_3%LB, 0), (fgv%base_addr)(fgv%dim_1%LB, fgv%dim_2%LB, fgv%dim_3%LB, 0), (fgw%base_addr)(fgw%dim_1%LB, fgw%dim_2%LB, fgw%dim_3%LB, 0), (fgumean%base_addr)(fgumean%dim_1%LB, fgumean%dim_2%LB, 0), (fgvmean%base_addr)(fgvmean%dim_1%LB, fgvmean%dim_2%LB, 0), nrecs_gr, nsends_gr )
  230.          $snt_T2 = _mt_endsingle( 4, _mt_rw_list(...), $snt_T2 )
  230.       endif
  235.       delta = delt
  236.       delta1 = delt
  237.       dt2 = 2.0 * delt
  238.       _mt_barrier( 5, _mt_rw_list(...) )
  239.       $snt_T3 = _mt_single( 6, _mt_rw_list(...) )
  240.       jglob = 0
  241.       $snt_T3 = _mt_endsingle( 6, _mt_rw_list(...), $snt_T3 )
  242.       do
  243.          $snt_T4 = _mt_critical( 7, _mt_rw_list(...) )
  244.          jglob = 1 + jglob
  245.          j = jglob
  246.          $snt_T4 = _mt_endcritical( 7, _mt_rw_list(...), $snt_T4 )
  247.          if ( j > jbmax ) goto 20
  249.          $F_A40 = fgyum%dim_2%EX
  249.          $F_A41 = fgyum%dim_1%EX
  249.          if ( and( -$F_A41, -$F_A40 ) < 0 ) then
  249.             $SC_fgyu_I337 = fgyu%dim_1%LB
  249.             $SC_fgyu_I338 = fgyu%dim_2%SM
  249.             $SC_fgyu_I339 = fgyu%dim_2%LB
  249.             $SC_fgyu_I341 = fgyu%dim_3%SM
  249.             $SC_fgyu_I340 = fgyu%dim_3%EX
  249.             $SC_fgyu_I342 = fgyu%dim_3%LB
  249.             $SC_fgum_I331 = fgum%dim_1%LB
  249.             $SC_fgum_I332 = fgum%dim_2%SM
  249.             $SC_fgum_I333 = fgum%dim_2%LB
  249.             $SC_fgum_I335 = fgum%dim_3%SM
  249.             $SC_fgum_I334 = fgum%dim_3%EX
  249.             $SC_fgum_I336 = fgum%dim_3%LB
  249.             $SC_fgyum_I325 = fgyum%dim_1%LB
  249.             $SC_fgyum_I326 = fgyum%dim_2%SM
  249.             $SC_fgyum_I327 = fgyum%dim_2%LB
  249.             $SC_fgyum_I329 = fgyum%dim_3%SM
  249.             $SC_fgyum_I328 = fgyum%dim_3%EX
  249.             $SC_fgyum_I330 = fgyum%dim_3%LB
  249.             $I_L249_1152 = 0
  249.             do
  249.                $I_L249_1044 = 0
  249. !dir$ ivdep
  249. !dir$ loop_info (automatic) cache_nt( fgyu, fgum, fgyum )
  249.                do
  249.                   (fgyum%base_addr)($SC_fgyum_I325 + $I_L249_1044, $SC_fgyum_I327 + $I_L249_1152, j, 0) = (fgum%base_addr)($SC_fgum_I331 + $I_L249_1044, $SC_fgum_I333 + $I_L249_1152, j, 0) + dt2 * (fgyum%base_addr)($SC_fgyum_I325 + $I_L249_1044, $SC_fgyum_I327 + $I_L249_1152, j, 0) + delta * (fgyu%base_addr)($SC_fgyu_I337 + $I_L249_1044, $SC_fgyu_I339 + $I_L249_1152, j, 0)
  249.                   $I_L249_1044 = 1 + $I_L249_1044
  249.                   if ( $I_L249_1044 >= $F_A41 ) exit
  249.                enddo
  249.                $I_L249_1152 = 1 + $I_L249_1152
  249.                if ( $I_L249_1152 >= $F_A40 ) exit
  249.             enddo
  249.          endif
  250.          $F_A42 = fgyvm%dim_2%EX
  250.          $F_A43 = fgyvm%dim_1%EX
  250.          if ( and( -$F_A43, -$F_A42 ) < 0 ) then
  250.             $SC_fgyv_I355 = fgyv%dim_1%LB
  250.             $SC_fgyv_I356 = fgyv%dim_2%SM
  250.             $SC_fgyv_I357 = fgyv%dim_2%LB
  250.             $SC_fgyv_I359 = fgyv%dim_3%SM
  250.             $SC_fgyv_I358 = fgyv%dim_3%EX
  250.             $SC_fgyv_I360 = fgyv%dim_3%LB
  250.             $SC_fgvm_I349 = fgvm%dim_1%LB
  250.             $SC_fgvm_I350 = fgvm%dim_2%SM
  250.             $SC_fgvm_I351 = fgvm%dim_2%LB
  250.             $SC_fgvm_I353 = fgvm%dim_3%SM
  250.             $SC_fgvm_I352 = fgvm%dim_3%EX
  250.             $SC_fgvm_I354 = fgvm%dim_3%LB
  250.             $SC_fgyvm_I343 = fgyvm%dim_1%LB
  250.             $SC_fgyvm_I344 = fgyvm%dim_2%SM
  250.             $SC_fgyvm_I345 = fgyvm%dim_2%LB
  250.             $SC_fgyvm_I347 = fgyvm%dim_3%SM
  250.             $SC_fgyvm_I346 = fgyvm%dim_3%EX
  250.             $SC_fgyvm_I348 = fgyvm%dim_3%LB
  250.             $I_L250_1154 = 0
  250.             do
  250.                $I_L250_1046 = 0
  250. !dir$ ivdep
  250. !dir$ loop_info (automatic) cache_nt( fgyv, fgvm, fgyvm )
  250.                do
  250.                   (fgyvm%base_addr)($SC_fgyvm_I343 + $I_L250_1046, $SC_fgyvm_I345 + $I_L250_1154, j, 0) = (fgvm%base_addr)($SC_fgvm_I349 + $I_L250_1046, $SC_fgvm_I351 + $I_L250_1154, j, 0) + dt2 * (fgyvm%base_addr)($SC_fgyvm_I343 + $I_L250_1046, $SC_fgyvm_I345 + $I_L250_1154, j, 0) + delta * (fgyv%base_addr)($SC_fgyv_I355 + $I_L250_1046, $SC_fgyv_I357 + $I_L250_1154, j, 0)
  250.                   $I_L250_1046 = 1 + $I_L250_1046
  250.                   if ( $I_L250_1046 >= $F_A43 ) exit
  250.                enddo
  250.                $I_L250_1154 = 1 + $I_L250_1154
  250.                if ( $I_L250_1154 >= $F_A42 ) exit
  250.             enddo
  250.          endif
  251.          $F_A44 = fgtdm%dim_2%EX
  251.          $F_A45 = fgtdm%dim_1%EX
  251.          if ( and( -$F_A45, -$F_A44 ) < 0 ) then
  251.             $SC_fgtd_I373 = fgtd%dim_1%LB
  251.             $SC_fgtd_I374 = fgtd%dim_2%SM
  251.             $SC_fgtd_I375 = fgtd%dim_2%LB
  251.             $SC_fgtd_I377 = fgtd%dim_3%SM
  251.             $SC_fgtd_I376 = fgtd%dim_3%EX
  251.             $SC_fgtd_I378 = fgtd%dim_3%LB
  251.             $SC_fgtmpm_I367 = fgtmpm%dim_1%LB
  251.             $SC_fgtmpm_I368 = fgtmpm%dim_2%SM
  251.             $SC_fgtmpm_I369 = fgtmpm%dim_2%LB
  251.             $SC_fgtmpm_I371 = fgtmpm%dim_3%SM
  251.             $SC_fgtmpm_I370 = fgtmpm%dim_3%EX
  251.             $SC_fgtmpm_I372 = fgtmpm%dim_3%LB
  251.             $SC_fgtdm_I361 = fgtdm%dim_1%LB
  251.             $SC_fgtdm_I362 = fgtdm%dim_2%SM
  251.             $SC_fgtdm_I363 = fgtdm%dim_2%LB
  251.             $SC_fgtdm_I365 = fgtdm%dim_3%SM
  251.             $SC_fgtdm_I364 = fgtdm%dim_3%EX
  251.             $SC_fgtdm_I366 = fgtdm%dim_3%LB
  251.             $I_L251_1156 = 0
  251.             do
  251.                $I_L251_1048 = 0
  251. !dir$ ivdep
  251. !dir$ loop_info (automatic) cache_nt( fgtmpm, fgtd )
  251.                do
  251.                   (fgtdm%base_addr)($SC_fgtdm_I361 + $I_L251_1048, $SC_fgtdm_I363 + $I_L251_1156, j, 0) = (fgtmpm%base_addr)($SC_fgtmpm_I367 + $I_L251_1048, $SC_fgtmpm_I369 + $I_L251_1156, j, 0) + dt2 * (fgtdm%base_addr)($SC_fgtdm_I361 + $I_L251_1048, $SC_fgtdm_I363 + $I_L251_1156, j, 0) + delta * (fgtd%base_addr)($SC_fgtd_I373 + $I_L251_1048, $SC_fgtd_I375 + $I_L251_1156, j, 0)
  251.                   $I_L251_1048 = 1 + $I_L251_1048
  251.                   if ( $I_L251_1048 >= $F_A45 ) exit
  251.                enddo
  251.                $I_L251_1156 = 1 + $I_L251_1156
  251.                if ( $I_L251_1156 >= $F_A44 ) exit
  251.             enddo
  251.          endif
  252.          $F_A46 = fgqdm%dim_2%EX
  252.          $F_A47 = fgqdm%dim_1%EX
  252.          if ( and( -$F_A47, -$F_A46 ) < 0 ) then
  252.             $SC_fgqd_I379 = fgqd%dim_1%LB
  252.             $SC_fgqd_I380 = fgqd%dim_2%SM
  252.             $SC_fgqd_I381 = fgqd%dim_2%LB
  252.             $SC_fgqd_I383 = fgqd%dim_3%SM
  252.             $SC_fgqd_I382 = fgqd%dim_3%EX
  252.             $SC_fgqd_I384 = fgqd%dim_3%LB
  252.             $SC_fgqm_I385 = fgqm%dim_1%LB
  252.             $SC_fgqm_I386 = fgqm%dim_2%SM
  252.             $SC_fgqm_I387 = fgqm%dim_2%LB
  252.             $SC_fgqm_I389 = fgqm%dim_3%SM
  252.             $SC_fgqm_I388 = fgqm%dim_3%EX
  252.             $SC_fgqm_I390 = fgqm%dim_3%LB
  252.             $SC_fgqdm_I391 = fgqdm%dim_1%LB
  252.             $SC_fgqdm_I392 = fgqdm%dim_2%SM
  252.             $SC_fgqdm_I393 = fgqdm%dim_2%LB
  252.             $SC_fgqdm_I395 = fgqdm%dim_3%SM
  252.             $SC_fgqdm_I394 = fgqdm%dim_3%EX
  252.             $SC_fgqdm_I396 = fgqdm%dim_3%LB
  252.             $I_L252_1158 = 0
  252.             do
  252.                $I_L252_1050 = 0
  252. !dir$ ivdep
  252. !dir$ loop_info (automatic) cache_nt( fgqm, fgqdm )
  252.                do
  252.                   (fgqdm%base_addr)($SC_fgqdm_I391 + $I_L252_1050, $SC_fgqdm_I393 + $I_L252_1158, j, 0) = (fgqm%base_addr)($SC_fgqm_I385 + $I_L252_1050, $SC_fgqm_I387 + $I_L252_1158, j, 0) + delta * (fgqd%base_addr)($SC_fgqd_I379 + $I_L252_1050, $SC_fgqd_I381 + $I_L252_1158, j, 0)
  252.                   $I_L252_1050 = 1 + $I_L252_1050
  252.                   if ( $I_L252_1050 >= $F_A47 ) exit
  252.                enddo
  252.                $I_L252_1158 = 1 + $I_L252_1158
  252.                if ( $I_L252_1158 >= $F_A46 ) exit
  252.             enddo
  252.          endif
  253.          $F_A48 = fgvdlnp%dim_1%EX
  253.          if ( fgvdlnp%dim_1%EX > 0 ) then
  253.             $SC_fgvdlnp_I412 = fgvdlnp%dim_1%LB
  253.             $SC_fgvdlnp_I414 = fgvdlnp%dim_2%SM
  253.             $SC_fgvdlnp_I413 = fgvdlnp%dim_2%EX
  253.             $SC_fgvdlnp_I415 = fgvdlnp%dim_2%LB
  253.             $SC_fgzs_I397 = fgzs%dim_1%EX
  253.             $SC_fgzs_I398 = fgzs%dim_1%LB
  253.             $SC_fgzs_I400 = fgzs%dim_2%SM
  253.             $SC_fgzs_I399 = fgzs%dim_2%EX
  253.             $SC_fgzs_I401 = fgzs%dim_2%LB
  253.             $SC_fglnpm_I402 = fglnpm%dim_1%EX
  253.             $SC_fglnpm_I403 = fglnpm%dim_1%LB
  253.             $SC_fglnpm_I405 = fglnpm%dim_2%SM
  253.             $SC_fglnpm_I404 = fglnpm%dim_2%EX
  253.             $SC_fglnpm_I406 = fglnpm%dim_2%LB
  253.             $SC_fgvdlnpm_I407 = fgvdlnpm%dim_1%EX
  253.             $SC_fgvdlnpm_I408 = fgvdlnpm%dim_1%LB
  253.             $SC_fgvdlnpm_I410 = fgvdlnpm%dim_2%SM
  253.             $SC_fgvdlnpm_I409 = fgvdlnpm%dim_2%EX
  253.             $SC_fgvdlnpm_I411 = fgvdlnpm%dim_2%LB
  253.             $I_L253_1052 = 0
  253. !dir$ ivdep
  253.             do
  253.                (fgvdlnpm%base_addr)($SC_fgvdlnpm_I408 + $I_L253_1052, j, 0) = (fglnpm%base_addr)($SC_fglnpm_I403 + $I_L253_1052, j, 0) + 1.161237879579632e-5 * (fgzs%base_addr)($SC_fgzs_I398 + $I_L253_1052, j, 0) + dt2 * (fgvdlnpm%base_addr)($SC_fgvdlnpm_I408 + $I_L253_1052, j, 0) + delta * (fgvdlnp%base_addr)($SC_fgvdlnp_I412 + $I_L253_1052, j, 0)
  253.                $I_L253_1052 = 1 + $I_L253_1052
  253.                if ( $I_L253_1052 >= $F_A48 ) exit
  253.             enddo
  253.          endif
  249.       enddo
  249.    20 continue
  259.       _mt_barrier( 8, _mt_rw_list(...) )
  260.       if ( maxnodes > 1 ) then
  261.          $snt_T5 = _mt_single( 9, _mt_rw_list(...) )
  262.          call exchange_fields( (fgyum%base_addr)(fgyum%dim_1%LB, fgyum%dim_2%LB, fgyum%dim_3%LB, 0), (fgyvm%base_addr)(fgyvm%dim_1%LB, fgyvm%dim_2%LB, fgyvm%dim_3%LB, 0), (fgtdm%base_addr)(fgtdm%dim_1%LB, fgtdm%dim_2%LB, fgtdm%dim_3%LB, 0), (fgqdm%base_addr)(fgqdm%dim_1%LB, fgqdm%dim_2%LB, fgqdm%dim_3%LB, 0), (fgvdlnpm%base_addr)(fgvdlnpm%dim_1%LB, fgvdlnpm%dim_2%LB, 0), (fgpass_scalars%base_addr)(fgpass_scalars%dim_1%LB, fgpass_scalars%dim_2%LB, fgpass_scalars%dim_3%LB, fgpass_scalars%dim_4%LB, fgpass_scalars%dim_5%LB, 0), adr_scalars, nscalars, nrecs_gr, nsends_gr )
  264.          $snt_T5 = _mt_endsingle( 9, _mt_rw_list(...), $snt_T5 )
  264.       endif
  269.       $snt_T6 = _mt_single( 10, _mt_rw_list(...) )
  270.       jglob = 0
  271.       $snt_T6 = _mt_endsingle( 10, _mt_rw_list(...), $snt_T6 )
  272.       do
  273.          $snt_T7 = _mt_critical( 11, _mt_rw_list(...) )
  274.          jglob = 1 + jglob
  275.          jb = jglob
  276.          $snt_T7 = _mt_endcritical( 11, _mt_rw_list(...), $snt_T7 )
  277.          if ( jb > jbmax ) goto 40
  279.          ibdim = (ibmaxperjb%base_addr)(jb, 0)
  283.          call trajectory( (ulonm%base_addr)(1, jb, 0), (ulatm%base_addr)(1, jb, 0), (usigm%base_addr)(1, jb, 0), ulon(1), ulat(1), usig(1), ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, jb, nit, delta1, ip(1), jn(1) )
  292.          $klats_S7 = 1
  293.          if ( reducedgrid ) then
  293.             $klats_S7 = 4
  293.          endif
  294.          ipa$249 = loc( ulon(1) )
  294.          ulon = _copyin( ulon(1) )
  294.          ipa$251 = loc( ulat(1) )
  294.          ulat = _copyin( ulat(1) )
  294.          ipa$253 = loc( usig(1) )
  294.          usig = _copyin( usig(1) )
  294.          ipa$255 = loc( ulondp(1) )
  294.          ulondp = _copyin( ulondp(1) )
  294.          ipa$257 = loc( ulatdp(1) )
  294.          ulatdp = _copyin( ulatdp(1) )
  294.          ipa$259 = loc( usigdp(1) )
  294.          usigdp = _copyin( usigdp(1) )
  294.          ipa$261 = loc( iloc(1) )
  294.          iloc = _copyin( iloc(1) )
  294.          ipa$263 = loc( jloc(1) )
  294.          jloc = _copyin( jloc(1) )
  294.          ipa$265 = loc( kloc(1) )
  294.          kloc = _copyin( kloc(1) )
  294.          t$38 = ibdim
  294.          t$39 = kmax
  294.          t$255 = max( 0, ibdim )
  294.          t$256 = ibdim
  294.          t$257 = max( 0, kmax )
  294.          t$258 = ibdim * max( 0, kmax )
  294.          t$259 = ibdim * max( 0, kmax )
  294.          t$260 = ibdim * max( 0, kmax ) * 4
  294.          if ( kmax > 0 ) then
  294.             if ( ibdim > 0 ) then
  294.                $SC_sigma_I416 = sigma%dim_1%EX
  294.                $I_L294_1126 = 0
  294. !dir$ blocking_size( 0, 0 )
  294.                do
  294.                   $SC_sigma_I417 = sigma%dim_1%LB
  294.                   $I_L294_988 = 0
  294. !dir$ ivdep
  294. !dir$ blocking_size( 0, 0 )
  294.                   do
  294.                      ik = int( ( ( usig(1 + $I_L294_988, 1 + $I_L294_1126) + -(sigma%base_addr)(1 + $I_L294_988, 1, 0) ) * 1.0/delsigref ) )
  294.                      $kloc_WR0_R0 = (ksigref%base_addr)(1 + $I_L294_988, ik, 0)
  294.                      kloc(1 + $I_L294_988, 1 + $I_L294_1126) = $kloc_WR0_R0
  294.                      if ( usig(1 + $I_L294_988, 1 + $I_L294_1126) > (sigma%base_addr)(1 + $I_L294_988, 1 + $kloc_WR0_R0, 0) ) then
  294.                         $kloc_WR0_R0 = 1 + $kloc_WR0_R0
  294.                         kloc(1 + $I_L294_988, 1 + $I_L294_1126) = $kloc_WR0_R0
  294.                      endif
  294.                      usigdp(1 + $I_L294_988, 1 + $I_L294_1126) = ( ( usig(1 + $I_L294_988, 1 + $I_L294_1126) + -(sigma%base_addr)(1 + $I_L294_988, $kloc_WR0_R0, 0) ) * 1.0/(delsigma%base_addr)(1 + $I_L294_988, $kloc_WR0_R0, 0) )
  294.                      $I_L294_988 = 1 + $I_L294_988
  294.                      if ( $I_L294_988 >= ibdim ) exit
  294.                   enddo
  294.                   $I_L294_1126 = 1 + $I_L294_1126
  294.                   if ( $I_L294_1126 >= kmax ) exit
  294.                enddo
  294.                $SC_jphiref_I418 = jphiref%dim_1%EX
  294.                $I_L294_1128 = 0
  294.                do
  294.                   $SC_jphiref_I419 = jphiref%dim_1%LB
  294.                   $I_L294_990 = 0
  294. !dir$ ivdep
  294.                   do
  294.                      ik = int( ( ( 1.570796326794895 + ulat(1 + $I_L294_990, 1 + $I_L294_1128) ) * 1.0/delphiref ) )
  294.                      $jloc_WR0_R1 = (jphiref%base_addr)(1 + $I_L294_990, ik, 0)
  294.                      jloc(1 + $I_L294_990, 1 + $I_L294_1128) = $jloc_WR0_R1
  294.                      if ( ulat(1 + $I_L294_990, 1 + $I_L294_1128) > (phi%base_addr)(1 + $I_L294_990, 1 + $jloc_WR0_R1, 0) ) then
  294.                         $jloc_WR0_R1 = 1 + $jloc_WR0_R1
  294.                         jloc(1 + $I_L294_990, 1 + $I_L294_1128) = $jloc_WR0_R1
  294.                      endif
  294.                      ulatdp(1 + $I_L294_990, 1 + $I_L294_1128) = ( ( ulat(1 + $I_L294_990, 1 + $I_L294_1128) + -(phi%base_addr)(1 + $I_L294_990, $jloc_WR0_R1, 0) ) * 1.0/(delphi%base_addr)(1 + $I_L294_990, $jloc_WR0_R1, 0) )
  294.                      $I_L294_990 = 1 + $I_L294_990
  294.                      if ( $I_L294_990 >= ibdim ) exit
  294.                   enddo
  294.                   $I_L294_1128 = 1 + $I_L294_1128
  294.                   if ( $I_L294_1128 >= kmax ) exit
  294.                enddo
  294.             endif
  294.          endif
  294.          if ( $klats_S7 == 4 ) then
  294.             kp(1) = -1
  294.             kp(2) = 0
  294.             kp(3) = 1
  294.             kp(4) = 2
  294.          else
  294.             kp(1) = 0
  294.             kp(2) = 1
  294.          endif
  294.          if ( $klats_S7 > 0 ) then
  294.             if ( kmax > 0 ) then
  294.                if ( ibdim > 0 ) then
  294.                   $SC_dellon_I420 = dellon%dim_1%EX
  294.                   $I_L294_1220 = 0
  294.                   do
  294.                      $I_L294_1216 = 0
  294.                      do
  294.                         $I_L294_972 = 0
  294.                         if ( $klats_S7 >= 4 ) then
  294.                            $I_L294_1212 = 0
  294. !dir$ blocking_size( 4, 4 )
  294.                            do
  294.                               $ks#1_U0 = kp(1 + 4 * $I_L294_1212)
  294.                               $ks#2_U1 = kp(2 + 4 * $I_L294_1212)
  294.                               $ks#3_U2 = kp(3 + 4 * $I_L294_1212)
  294.                               $ks#4_U3 = kp(4 + 4 * $I_L294_1212)
  294.                               $I_L294_1194 = 0
  294. !dir$ shortloop16
  294. !dir$ blocking_size( 8, 8 )
  294.                               do
  294.                                  $I_L294_1114 = 0
  294. !dir$ ivdep
  294. !dir$ blocking_size( 256, 256 )
  294.                                  do
  294.                                     j = jmax + -jloc($I_L294_1114 + 256 * $I_L294_1216 + 1, $I_L294_1194 + 8 * $I_L294_1220 + 1) + 1
  294.                                     $ulondp_WR0_R2 = 1.0 + ( ulon($I_L294_1114 + 256 * $I_L294_1216 + 1, $I_L294_1194 + 8 * $I_L294_1220 + 1) * 1.0/(dellon%base_addr)($I_L294_1114 + 256 * $I_L294_1216 + 1, j + -$ks#1_U0, 0) )
  294.                                     iloc($I_L294_1114 + 256 * $I_L294_1216 + 1, $I_L294_1194 + 8 * $I_L294_1220 + 1, 1 + 4 * $I_L294_1212) = int( $ulondp_WR0_R2 )
  294.                                     $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  294.                                     ulondp($I_L294_1114 + 256 * $I_L294_1216 + 1, $I_L294_1194 + 8 * $I_L294_1220 + 1, 1 + 4 * $I_L294_1212) = $ulondp_WR0_R2
  294.                                     j = jmax + -jloc($I_L294_1114 + 256 * $I_L294_1216 + 1, $I_L294_1194 + 8 * $I_L294_1220 + 1) + 1
  294.                                     $ulondp_WR0_R2 = 1.0 + ( ulon($I_L294_1114 + 256 * $I_L294_1216 + 1, $I_L294_1194 + 8 * $I_L294_1220 + 1) * 1.0/(dellon%base_addr)($I_L294_1114 + 256 * $I_L294_1216 + 1, j + -$ks#2_U1, 0) )
  294.                                     iloc($I_L294_1114 + 256 * $I_L294_1216 + 1, $I_L294_1194 + 8 * $I_L294_1220 + 1, 2 + 4 * $I_L294_1212) = int( $ulondp_WR0_R2 )
  294.                                     $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  294.                                     ulondp($I_L294_1114 + 256 * $I_L294_1216 + 1, $I_L294_1194 + 8 * $I_L294_1220 + 1, 2 + 4 * $I_L294_1212) = $ulondp_WR0_R2
  294.                                     j = jmax + -jloc($I_L294_1114 + 256 * $I_L294_1216 + 1, $I_L294_1194 + 8 * $I_L294_1220 + 1) + 1
  294.                                     $ulondp_WR0_R2 = 1.0 + ( ulon($I_L294_1114 + 256 * $I_L294_1216 + 1, $I_L294_1194 + 8 * $I_L294_1220 + 1) * 1.0/(dellon%base_addr)($I_L294_1114 + 256 * $I_L294_1216 + 1, j + -$ks#3_U2, 0) )
  294.                                     iloc($I_L294_1114 + 256 * $I_L294_1216 + 1, $I_L294_1194 + 8 * $I_L294_1220 + 1, 3 + 4 * $I_L294_1212) = int( $ulondp_WR0_R2 )
  294.                                     $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  294.                                     ulondp($I_L294_1114 + 256 * $I_L294_1216 + 1, $I_L294_1194 + 8 * $I_L294_1220 + 1, 3 + 4 * $I_L294_1212) = $ulondp_WR0_R2
  294.                                     j = jmax + -jloc($I_L294_1114 + 256 * $I_L294_1216 + 1, $I_L294_1194 + 8 * $I_L294_1220 + 1) + 1
  294.                                     $ulondp_WR0_R2 = 1.0 + ( ulon($I_L294_1114 + 256 * $I_L294_1216 + 1, $I_L294_1194 + 8 * $I_L294_1220 + 1) * 1.0/(dellon%base_addr)($I_L294_1114 + 256 * $I_L294_1216 + 1, j + -$ks#4_U3, 0) )
  294.                                     iloc($I_L294_1114 + 256 * $I_L294_1216 + 1, $I_L294_1194 + 8 * $I_L294_1220 + 1, 4 + 4 * $I_L294_1212) = int( $ulondp_WR0_R2 )
  294.                                     $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  294.                                     ulondp($I_L294_1114 + 256 * $I_L294_1216 + 1, $I_L294_1194 + 8 * $I_L294_1220 + 1, 4 + 4 * $I_L294_1212) = $ulondp_WR0_R2
  294.                                     $I_L294_1114 = 1 + $I_L294_1114
  294.                                     if ( $I_L294_1114 >= min( ibdim, 256 + 256 * $I_L294_1216 ) + -256 * $I_L294_1216 ) exit
  294.                                  enddo
  294.                                  $I_L294_1194 = 1 + $I_L294_1194
  294.                                  if ( $I_L294_1194 >= min( kmax, 8 + 8 * $I_L294_1220 ) + -8 * $I_L294_1220 ) exit
  294.                               enddo
  294.                               $I_L294_1212 = 1 + $I_L294_1212
  294.                               if ( $I_L294_1212 >= _rsh( $klats_S7, 2 ) ) exit
  294.                            enddo
  294.                            $I_L294_972 = and( 0xfffffffffffffffcUL, $klats_S7 )
  294.                         endif
  294.                         if ( $I_L294_972 < $klats_S7 ) then
  294.                            $I_L294_1202 = 0
  294. !dir$ blocking_size( 4, 4 )
  294.                            do
  294.                               ks = kp($I_L294_972 + $I_L294_1202 + 1)
  294.                               $I_L294_1190 = 0
  294. !dir$ shortloop16
  294. !dir$ blocking_size( 8, 8 )
  294.                               do
  294.                                  $I_L294_992 = 0
  294. !dir$ ivdep
  294. !dir$ blocking_size( 256, 256 )
  294.                                  do
  294.                                     j = jmax + -jloc($I_L294_992 + 256 * $I_L294_1216 + 1, $I_L294_1190 + 8 * $I_L294_1220 + 1) + 1
  294.                                     $ulondp_WR0_R2 = 1.0 + ( ulon($I_L294_992 + 256 * $I_L294_1216 + 1, $I_L294_1190 + 8 * $I_L294_1220 + 1) * 1.0/(dellon%base_addr)($I_L294_992 + 256 * $I_L294_1216 + 1, j + -ks, 0) )
  294.                                     iloc($I_L294_992 + 256 * $I_L294_1216 + 1, $I_L294_1190 + 8 * $I_L294_1220 + 1, $I_L294_972 + $I_L294_1202 + 1) = int( $ulondp_WR0_R2 )
  294.                                     $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  294.                                     ulondp($I_L294_992 + 256 * $I_L294_1216 + 1, $I_L294_1190 + 8 * $I_L294_1220 + 1, $I_L294_972 + $I_L294_1202 + 1) = $ulondp_WR0_R2
  294.                                     $I_L294_992 = 1 + $I_L294_992
  294.                                     if ( $I_L294_992 >= min( ibdim, 256 + 256 * $I_L294_1216 ) + -256 * $I_L294_1216 ) exit
  294.                                  enddo
  294.                                  $I_L294_1190 = 1 + $I_L294_1190
  294.                                  if ( $I_L294_1190 >= min( kmax, 8 + 8 * $I_L294_1220 ) + -8 * $I_L294_1220 ) exit
  294.                               enddo
  294.                               $I_L294_1202 = 1 + $I_L294_1202
  294.                               if ( $I_L294_1202 >= $klats_S7 + -$I_L294_972 ) exit
  294.                            enddo
  294.                         endif
  294.                         $I_L294_1216 = 1 + $I_L294_1216
  294.                         if ( $I_L294_1216 >= 1 + max( 0, -1 + _rsh( 255 + ibdim, 8 ) ) ) exit
  294.                      enddo
  294.                      $I_L294_1220 = 1 + $I_L294_1220
  294.                      if ( $I_L294_1220 >= 1 + max( 0, -1 + _rsh( 7 + kmax, 3 ) ) ) exit
  294.                   enddo
  294.                endif
  294.             endif
  294.          endif
  294.          if ( $klats_S7 == 1 ) then
  294.             $F_A49 = kmax
  294.             $F_A50 = ibdim
  294.             if ( and( -$F_A50, -$F_A49 ) < 0 ) then
  294.                $I_L294_1160 = 0
  294.                do
  294.                   $I_L294_1054 = 0
  294. !dir$ ivdep
  294.                   do
  294.                      iloc(1 + $I_L294_1054, 1 + $I_L294_1160, 2) = iloc(1 + $I_L294_1054, 1 + $I_L294_1160, 1)
  294.                      $I_L294_1054 = 1 + $I_L294_1054
  294.                      if ( $I_L294_1054 >= $F_A50 ) exit
  294.                   enddo
  294.                   $I_L294_1160 = 1 + $I_L294_1160
  294.                   if ( $I_L294_1160 >= $F_A49 ) exit
  294.                enddo
  294.             endif
  294.             $F_A51 = kmax
  294.             $F_A52 = ibdim
  294.             if ( and( -$F_A52, -$F_A51 ) < 0 ) then
  294.                $I_L294_1162 = 0
  294.                do
  294.                   $I_L294_1056 = 0
  294. !dir$ ivdep
  294.                   do
  294.                      iloc(1 + $I_L294_1056, 1 + $I_L294_1162, 3) = iloc(1 + $I_L294_1056, 1 + $I_L294_1162, 1)
  294.                      $I_L294_1056 = 1 + $I_L294_1056
  294.                      if ( $I_L294_1056 >= $F_A52 ) exit
  294.                   enddo
  294.                   $I_L294_1162 = 1 + $I_L294_1162
  294.                   if ( $I_L294_1162 >= $F_A51 ) exit
  294.                enddo
  294.             endif
  294.             $F_A53 = kmax
  294.             $F_A54 = ibdim
  294.             if ( and( -$F_A54, -$F_A53 ) < 0 ) then
  294.                $I_L294_1164 = 0
  294.                do
  294.                   $I_L294_1058 = 0
  294. !dir$ ivdep
  294.                   do
  294.                      iloc(1 + $I_L294_1058, 1 + $I_L294_1164, 4) = iloc(1 + $I_L294_1058, 1 + $I_L294_1164, 1)
  294.                      $I_L294_1058 = 1 + $I_L294_1058
  294.                      if ( $I_L294_1058 >= $F_A54 ) exit
  294.                   enddo
  294.                   $I_L294_1164 = 1 + $I_L294_1164
  294.                   if ( $I_L294_1164 >= $F_A53 ) exit
  294.                enddo
  294.             endif
  294.             $F_A55 = kmax
  294.             $F_A56 = ibdim
  294.             if ( and( -$F_A56, -$F_A55 ) < 0 ) then
  294.                $I_L294_1166 = 0
  294.                do
  294.                   $I_L294_1060 = 0
  294. !dir$ ivdep
  294.                   do
  294.                      ulondp(1 + $I_L294_1060, 1 + $I_L294_1166, 2) = ulondp(1 + $I_L294_1060, 1 + $I_L294_1166, 1)
  294.                      $I_L294_1060 = 1 + $I_L294_1060
  294.                      if ( $I_L294_1060 >= $F_A56 ) exit
  294.                   enddo
  294.                   $I_L294_1166 = 1 + $I_L294_1166
  294.                   if ( $I_L294_1166 >= $F_A55 ) exit
  294.                enddo
  294.             endif
  294.             $F_A57 = kmax
  294.             $F_A58 = ibdim
  294.             if ( and( -$F_A58, -$F_A57 ) < 0 ) then
  294.                $I_L294_1168 = 0
  294.                do
  294.                   $I_L294_1062 = 0
  294. !dir$ ivdep
  294.                   do
  294.                      ulondp(1 + $I_L294_1062, 1 + $I_L294_1168, 3) = ulondp(1 + $I_L294_1062, 1 + $I_L294_1168, 1)
  294.                      $I_L294_1062 = 1 + $I_L294_1062
  294.                      if ( $I_L294_1062 >= $F_A58 ) exit
  294.                   enddo
  294.                   $I_L294_1168 = 1 + $I_L294_1168
  294.                   if ( $I_L294_1168 >= $F_A57 ) exit
  294.                enddo
  294.             endif
  294.             $F_A59 = kmax
  294.             $F_A60 = ibdim
  294.             if ( and( -$F_A60, -$F_A59 ) < 0 ) then
  294.                $I_L294_1170 = 0
  294.                do
  294.                   $I_L294_1064 = 0
  294. !dir$ ivdep
  294.                   do
  294.                      ulondp(1 + $I_L294_1064, 1 + $I_L294_1170, 4) = ulondp(1 + $I_L294_1064, 1 + $I_L294_1170, 1)
  294.                      $I_L294_1064 = 1 + $I_L294_1064
  294.                      if ( $I_L294_1064 >= $F_A60 ) exit
  294.                   enddo
  294.                   $I_L294_1170 = 1 + $I_L294_1170
  294.                   if ( $I_L294_1170 >= $F_A59 ) exit
  294.                enddo
  294.             endif
  294.          endif
  294.          kloc(1) = _copyout( kloc )
  294.          jloc(1) = _copyout( jloc )
  294.          iloc(1) = _copyout( iloc )
  294.          usigdp(1) = _copyout( usigdp )
  294.          ulatdp(1) = _copyout( ulatdp )
  294.          ulondp(1) = _copyout( ulondp )
  294.          usig(1) = _copyout( usig )
  294.          ulat(1) = _copyout( ulat )
  294.          ulon(1) = _copyout( ulon )
  302.          ipa$271 = .false.
  302.          ipa$278 = -1.0
  302.          ipa$279 = .true.
  302.          ipa$286 = .false.
  302.          call interpcublin3d( fint(1), (fgyum%base_addr)(fgyum%dim_1%LB, fgyum%dim_2%LB, fgyum%dim_3%LB, 0), ipa$271, ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, ipa$278, ipa$279, ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), ipa$286 )
  314.          if ( kmax > 0 ) then
  315.             if ( ibdim > 0 ) then
  316.                $SC_fgqmm_I421 = fgqmm%dim_1%EX
  314.                $I_L314_1130 = 0
  314.                do
  316.                   $SC_fgqmm_I422 = fgqmm%dim_1%LB
  315.                   $I_L315_994 = 0
  315. !dir$ ivdep
  315.                   do
  316.                      (fgqmm%base_addr)(1 + $I_L315_994, 1 + $I_L314_1130, jb, 0) = fint($I_L315_994 + ibdim * $I_L314_1130 + 1)
  317.                      $I_L315_994 = 1 + $I_L315_994
  315.                      if ( $I_L315_994 >= ibdim ) exit
  315.                   enddo
  318.                   $I_L314_1130 = 1 + $I_L314_1130
  317.                   if ( $I_L314_1130 >= kmax ) exit
  317.                enddo
  317.             endif
  317.          endif
  319.          ipa$335 = .true.
  319.          ipa$342 = -1.0
  319.          ipa$343 = .false.
  319.          ipa$350 = .false.
  319.          call interpcublin3d( fint(1), (fgyvm%base_addr)(fgyvm%dim_1%LB, fgyvm%dim_2%LB, fgyvm%dim_3%LB, 0), ipa$335, ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, ipa$342, ipa$343, ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), ipa$350 )
  325.          if ( kmax > 0 ) then
  326.             if ( ibdim > 0 ) then
  327.                $SC_fgtmm_I423 = fgtmm%dim_1%EX
  325.                $I_L325_1132 = 0
  325.                do
  327.                   $SC_fgtmm_I424 = fgtmm%dim_1%LB
  326.                   $I_L326_996 = 0
  326. !dir$ ivdep
  326.                   do
  327.                      (fgtmm%base_addr)(1 + $I_L326_996, 1 + $I_L325_1132, jb, 0) = fint($I_L326_996 + ibdim * $I_L325_1132 + 1)
  328.                      $I_L326_996 = 1 + $I_L326_996
  326.                      if ( $I_L326_996 >= ibdim ) exit
  326.                   enddo
  329.                   $I_L325_1132 = 1 + $I_L325_1132
  328.                   if ( $I_L325_1132 >= kmax ) exit
  328.                enddo
  328.             endif
  328.          endif
  330.          ipa$399 = .false.
  330.          ipa$406 = 1.0
  330.          ipa$407 = .false.
  330.          ipa$414 = .false.
  330.          call interpcublin3d( fint(1), (fgqdm%base_addr)(fgqdm%dim_1%LB, fgqdm%dim_2%LB, fgqdm%dim_3%LB, 0), ipa$399, ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, ipa$406, ipa$407, ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), ipa$414 )
  337.          if ( kmax > 0 ) then
  338.             if ( ibdim > 0 ) then
  339.                $SC_fgqd_I425 = fgqd%dim_1%EX
  337.                $I_L337_1134 = 0
  337.                do
  339.                   $SC_fgqd_I379 = fgqd%dim_1%LB
  338.                   $I_L338_998 = 0
  338. !dir$ ivdep
  338.                   do
  339.                      (fgqd%base_addr)(1 + $I_L338_998, 1 + $I_L337_1134, jb, 0) = fint($I_L338_998 + ibdim * $I_L337_1134 + 1) + delta * (fgqd%base_addr)(1 + $I_L338_998, 1 + $I_L337_1134, jb, 0)
  340.                      $I_L338_998 = 1 + $I_L338_998
  338.                      if ( $I_L338_998 >= ibdim ) exit
  338.                   enddo
  341.                   $I_L337_1134 = 1 + $I_L337_1134
  340.                   if ( $I_L337_1134 >= kmax ) exit
  340.                enddo
  340.             endif
  340.          endif
  342.          ipa$463 = .true.
  342.          ipa$470 = 1.0
  342.          ipa$471 = .false.
  342.          ipa$478 = .false.
  342.          call interpcublin3d( fint(1), (fgtdm%base_addr)(fgtdm%dim_1%LB, fgtdm%dim_2%LB, fgtdm%dim_3%LB, 0), ipa$463, ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, ipa$470, ipa$471, ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), ipa$478 )
  348.          if ( kmax > 0 ) then
  349.             if ( ibdim > 0 ) then
  350.                $SC_fgtd_I426 = fgtd%dim_1%EX
  348.                $I_L348_1136 = 0
  348.                do
  350.                   $SC_fgtd_I373 = fgtd%dim_1%LB
  349.                   $I_L349_1000 = 0
  349. !dir$ ivdep
  349.                   do
  350.                      (fgtd%base_addr)(1 + $I_L349_1000, 1 + $I_L348_1136, jb, 0) = fint($I_L349_1000 + ibdim * $I_L348_1136 + 1) + delta * (fgtd%base_addr)(1 + $I_L349_1000, 1 + $I_L348_1136, jb, 0)
  351.                      $I_L349_1000 = 1 + $I_L349_1000
  349.                      if ( $I_L349_1000 >= ibdim ) exit
  349.                   enddo
  352.                   $I_L348_1136 = 1 + $I_L348_1136
  351.                   if ( $I_L348_1136 >= kmax ) exit
  351.                enddo
  351.             endif
  351.          endif
  359.          klats = 1
  360.          if ( reducedgrid ) then
  360.             klats = 4
  360.          endif
  361.          ipa$549 = loc( (ulonm%base_addr)(1, jb, 0) )
  361.          ulon = _copyin( (ulonm%base_addr)(1, jb, 0) )
  361.          ipa$551 = loc( (ulatm%base_addr)(1, jb, 0) )
  361.          ulat = _copyin( (ulatm%base_addr)(1, jb, 0) )
  361.          ipa$553 = loc( (usigm%base_addr)(1, jb, 0) )
  361.          usig = _copyin( (usigm%base_addr)(1, jb, 0) )
  361.          ipa$555 = loc( ulondp(1) )
  361.          ulondp = _copyin( ulondp(1) )
  361.          ipa$557 = loc( ulatdp(1) )
  361.          ulatdp = _copyin( ulatdp(1) )
  361.          ipa$559 = loc( usigdp(1) )
  361.          usigdp = _copyin( usigdp(1) )
  361.          ipa$561 = loc( iloc(1) )
  361.          iloc = _copyin( iloc(1) )
  361.          ipa$563 = loc( jloc(1) )
  361.          jloc = _copyin( jloc(1) )
  361.          ipa$565 = loc( kloc(1) )
  361.          kloc = _copyin( kloc(1) )
  361.          t$38 = ibdim
  361.          t$39 = kmax
  361.          t$255 = max( 0, ibdim )
  361.          t$256 = ibdim
  361.          t$257 = max( 0, kmax )
  361.          t$258 = ibdim * max( 0, kmax )
  361.          t$259 = ibdim * max( 0, kmax )
  361.          t$260 = ibdim * max( 0, kmax ) * 4
  361.          if ( kmax > 0 ) then
  361.             if ( ibdim > 0 ) then
  361.                $SC_sigma_I416 = sigma%dim_1%EX
  361.                $I_L361_1138 = 0
  361. !dir$ blocking_size( 0, 0 )
  361.                do
  361.                   $SC_sigma_I417 = sigma%dim_1%LB
  361.                   $I_L361_1002 = 0
  361. !dir$ ivdep
  361. !dir$ blocking_size( 0, 0 )
  361.                   do
  361.                      ik = int( ( ( usig(1 + $I_L361_1002, 1 + $I_L361_1138) + -(sigma%base_addr)(1 + $I_L361_1002, 1, 0) ) * 1.0/delsigref ) )
  361.                      $kloc_WR0_R4 = (ksigref%base_addr)(1 + $I_L361_1002, ik, 0)
  361.                      kloc(1 + $I_L361_1002, 1 + $I_L361_1138) = $kloc_WR0_R4
  361.                      if ( usig(1 + $I_L361_1002, 1 + $I_L361_1138) > (sigma%base_addr)(1 + $I_L361_1002, 1 + $kloc_WR0_R4, 0) ) then
  361.                         $kloc_WR0_R4 = 1 + $kloc_WR0_R4
  361.                         kloc(1 + $I_L361_1002, 1 + $I_L361_1138) = $kloc_WR0_R4
  361.                      endif
  361.                      usigdp(1 + $I_L361_1002, 1 + $I_L361_1138) = ( ( usig(1 + $I_L361_1002, 1 + $I_L361_1138) + -(sigma%base_addr)(1 + $I_L361_1002, $kloc_WR0_R4, 0) ) * 1.0/(delsigma%base_addr)(1 + $I_L361_1002, $kloc_WR0_R4, 0) )
  361.                      $I_L361_1002 = 1 + $I_L361_1002
  361.                      if ( $I_L361_1002 >= ibdim ) exit
  361.                   enddo
  361.                   $I_L361_1138 = 1 + $I_L361_1138
  361.                   if ( $I_L361_1138 >= kmax ) exit
  361.                enddo
  361.                $SC_jphiref_I418 = jphiref%dim_1%EX
  361.                $I_L361_1140 = 0
  361.                do
  361.                   $SC_jphiref_I419 = jphiref%dim_1%LB
  361.                   $I_L361_1004 = 0
  361. !dir$ ivdep
  361.                   do
  361.                      ik = int( ( ( 1.570796326794895 + ulat(1 + $I_L361_1004, 1 + $I_L361_1140) ) * 1.0/delphiref ) )
  361.                      $jloc_WR0_R5 = (jphiref%base_addr)(1 + $I_L361_1004, ik, 0)
  361.                      jloc(1 + $I_L361_1004, 1 + $I_L361_1140) = $jloc_WR0_R5
  361.                      if ( ulat(1 + $I_L361_1004, 1 + $I_L361_1140) > (phi%base_addr)(1 + $I_L361_1004, 1 + $jloc_WR0_R5, 0) ) then
  361.                         $jloc_WR0_R5 = 1 + $jloc_WR0_R5
  361.                         jloc(1 + $I_L361_1004, 1 + $I_L361_1140) = $jloc_WR0_R5
  361.                      endif
  361.                      ulatdp(1 + $I_L361_1004, 1 + $I_L361_1140) = ( ( ulat(1 + $I_L361_1004, 1 + $I_L361_1140) + -(phi%base_addr)(1 + $I_L361_1004, $jloc_WR0_R5, 0) ) * 1.0/(delphi%base_addr)(1 + $I_L361_1004, $jloc_WR0_R5, 0) )
  361.                      $I_L361_1004 = 1 + $I_L361_1004
  361.                      if ( $I_L361_1004 >= ibdim ) exit
  361.                   enddo
  361.                   $I_L361_1140 = 1 + $I_L361_1140
  361.                   if ( $I_L361_1140 >= kmax ) exit
  361.                enddo
  361.             endif
  361.          endif
  361.          if ( klats == 4 ) then
  361.             kp(1) = -1
  361.             kp(2) = 0
  361.             kp(3) = 1
  361.             kp(4) = 2
  361.          else
  361.             kp(1) = 0
  361.             kp(2) = 1
  361.          endif
  361.          if ( klats > 0 ) then
  361.             if ( kmax > 0 ) then
  361.                if ( ibdim > 0 ) then
  361.                   $I_L361_1222 = 0
  361.                   do
  361.                      $I_L361_1218 = 0
  361.                      do
  361.                         $I_L361_974 = 0
  361.                         if ( klats >= 4 ) then
  361.                            $I_L361_1214 = 0
  361. !dir$ blocking_size( 4, 4 )
  361.                            do
  361.                               $ks#1_U4 = kp(1 + 4 * $I_L361_1214)
  361.                               $ks#2_U5 = kp(2 + 4 * $I_L361_1214)
  361.                               $ks#3_U6 = kp(3 + 4 * $I_L361_1214)
  361.                               $ks#4_U7 = kp(4 + 4 * $I_L361_1214)
  361.                               $I_L361_1196 = 0
  361. !dir$ shortloop16
  361. !dir$ blocking_size( 8, 8 )
  361.                               do
  361.                                  $I_L361_1116 = 0
  361. !dir$ ivdep
  361. !dir$ blocking_size( 256, 256 )
  361.                                  do
  361.                                     j = jmax + -jloc($I_L361_1116 + 256 * $I_L361_1218 + 1, $I_L361_1196 + 8 * $I_L361_1222 + 1) + 1
  361.                                     $ulondp_WR0_R6 = 1.0 + ( ulon($I_L361_1116 + 256 * $I_L361_1218 + 1, $I_L361_1196 + 8 * $I_L361_1222 + 1) * 1.0/(dellon%base_addr)($I_L361_1116 + 256 * $I_L361_1218 + 1, j + -$ks#1_U4, 0) )
  361.                                     iloc($I_L361_1116 + 256 * $I_L361_1218 + 1, $I_L361_1196 + 8 * $I_L361_1222 + 1, 1 + 4 * $I_L361_1214) = int( $ulondp_WR0_R6 )
  361.                                     $ulondp_WR0_R6 = $ulondp_WR0_R6 + ( -( int( $ulondp_WR0_R6 ) ) )
  361.                                     ulondp($I_L361_1116 + 256 * $I_L361_1218 + 1, $I_L361_1196 + 8 * $I_L361_1222 + 1, 1 + 4 * $I_L361_1214) = $ulondp_WR0_R6
  361.                                     j = jmax + -jloc($I_L361_1116 + 256 * $I_L361_1218 + 1, $I_L361_1196 + 8 * $I_L361_1222 + 1) + 1
  361.                                     $ulondp_WR0_R6 = 1.0 + ( ulon($I_L361_1116 + 256 * $I_L361_1218 + 1, $I_L361_1196 + 8 * $I_L361_1222 + 1) * 1.0/(dellon%base_addr)($I_L361_1116 + 256 * $I_L361_1218 + 1, j + -$ks#2_U5, 0) )
  361.                                     iloc($I_L361_1116 + 256 * $I_L361_1218 + 1, $I_L361_1196 + 8 * $I_L361_1222 + 1, 2 + 4 * $I_L361_1214) = int( $ulondp_WR0_R6 )
  361.                                     $ulondp_WR0_R6 = $ulondp_WR0_R6 + ( -( int( $ulondp_WR0_R6 ) ) )
  361.                                     ulondp($I_L361_1116 + 256 * $I_L361_1218 + 1, $I_L361_1196 + 8 * $I_L361_1222 + 1, 2 + 4 * $I_L361_1214) = $ulondp_WR0_R6
  361.                                     j = jmax + -jloc($I_L361_1116 + 256 * $I_L361_1218 + 1, $I_L361_1196 + 8 * $I_L361_1222 + 1) + 1
  361.                                     $ulondp_WR0_R6 = 1.0 + ( ulon($I_L361_1116 + 256 * $I_L361_1218 + 1, $I_L361_1196 + 8 * $I_L361_1222 + 1) * 1.0/(dellon%base_addr)($I_L361_1116 + 256 * $I_L361_1218 + 1, j + -$ks#3_U6, 0) )
  361.                                     iloc($I_L361_1116 + 256 * $I_L361_1218 + 1, $I_L361_1196 + 8 * $I_L361_1222 + 1, 3 + 4 * $I_L361_1214) = int( $ulondp_WR0_R6 )
  361.                                     $ulondp_WR0_R6 = $ulondp_WR0_R6 + ( -( int( $ulondp_WR0_R6 ) ) )
  361.                                     ulondp($I_L361_1116 + 256 * $I_L361_1218 + 1, $I_L361_1196 + 8 * $I_L361_1222 + 1, 3 + 4 * $I_L361_1214) = $ulondp_WR0_R6
  361.                                     j = jmax + -jloc($I_L361_1116 + 256 * $I_L361_1218 + 1, $I_L361_1196 + 8 * $I_L361_1222 + 1) + 1
  361.                                     $ulondp_WR0_R6 = 1.0 + ( ulon($I_L361_1116 + 256 * $I_L361_1218 + 1, $I_L361_1196 + 8 * $I_L361_1222 + 1) * 1.0/(dellon%base_addr)($I_L361_1116 + 256 * $I_L361_1218 + 1, j + -$ks#4_U7, 0) )
  361.                                     iloc($I_L361_1116 + 256 * $I_L361_1218 + 1, $I_L361_1196 + 8 * $I_L361_1222 + 1, 4 + 4 * $I_L361_1214) = int( $ulondp_WR0_R6 )
  361.                                     $ulondp_WR0_R6 = $ulondp_WR0_R6 + ( -( int( $ulondp_WR0_R6 ) ) )
  361.                                     ulondp($I_L361_1116 + 256 * $I_L361_1218 + 1, $I_L361_1196 + 8 * $I_L361_1222 + 1, 4 + 4 * $I_L361_1214) = $ulondp_WR0_R6
  361.                                     $I_L361_1116 = 1 + $I_L361_1116
  361.                                     if ( $I_L361_1116 >= min( ibdim, 256 + 256 * $I_L361_1218 ) + -256 * $I_L361_1218 ) exit
  361.                                  enddo
  361.                                  $I_L361_1196 = 1 + $I_L361_1196
  361.                                  if ( $I_L361_1196 >= min( kmax, 8 + 8 * $I_L361_1222 ) + -8 * $I_L361_1222 ) exit
  361.                               enddo
  361.                               $I_L361_1214 = 1 + $I_L361_1214
  361.                               if ( $I_L361_1214 >= _rsh( klats, 2 ) ) exit
  361.                            enddo
  361.                            $I_L361_974 = and( 0xfffffffffffffffcUL, klats )
  361.                         endif
  361.                         if ( $I_L361_974 < klats ) then
  361.                            $I_L361_1205 = 0
  361. !dir$ blocking_size( 4, 4 )
  361.                            do
  361.                               ks = kp($I_L361_974 + $I_L361_1205 + 1)
  361.                               $I_L361_1192 = 0
  361. !dir$ shortloop16
  361. !dir$ blocking_size( 8, 8 )
  361.                               do
  361.                                  $I_L361_1006 = 0
  361. !dir$ ivdep
  361. !dir$ blocking_size( 256, 256 )
  361.                                  do
  361.                                     j = jmax + -jloc($I_L361_1006 + 256 * $I_L361_1218 + 1, $I_L361_1192 + 8 * $I_L361_1222 + 1) + 1
  361.                                     $ulondp_WR0_R6 = 1.0 + ( ulon($I_L361_1006 + 256 * $I_L361_1218 + 1, $I_L361_1192 + 8 * $I_L361_1222 + 1) * 1.0/(dellon%base_addr)($I_L361_1006 + 256 * $I_L361_1218 + 1, j + -ks, 0) )
  361.                                     iloc($I_L361_1006 + 256 * $I_L361_1218 + 1, $I_L361_1192 + 8 * $I_L361_1222 + 1, $I_L361_974 + $I_L361_1205 + 1) = int( $ulondp_WR0_R6 )
  361.                                     $ulondp_WR0_R6 = $ulondp_WR0_R6 + ( -( int( $ulondp_WR0_R6 ) ) )
  361.                                     ulondp($I_L361_1006 + 256 * $I_L361_1218 + 1, $I_L361_1192 + 8 * $I_L361_1222 + 1, $I_L361_974 + $I_L361_1205 + 1) = $ulondp_WR0_R6
  361.                                     $I_L361_1006 = 1 + $I_L361_1006
  361.                                     if ( $I_L361_1006 >= min( ibdim, 256 + 256 * $I_L361_1218 ) + -256 * $I_L361_1218 ) exit
  361.                                  enddo
  361.                                  $I_L361_1192 = 1 + $I_L361_1192
  361.                                  if ( $I_L361_1192 >= min( kmax, 8 + 8 * $I_L361_1222 ) + -8 * $I_L361_1222 ) exit
  361.                               enddo
  361.                               $I_L361_1205 = 1 + $I_L361_1205
  361.                               if ( $I_L361_1205 >= klats + -$I_L361_974 ) exit
  361.                            enddo
  361.                         endif
  361.                         $I_L361_1218 = 1 + $I_L361_1218
  361.                         if ( $I_L361_1218 >= 1 + max( 0, -1 + _rsh( 255 + ibdim, 8 ) ) ) exit
  361.                      enddo
  361.                      $I_L361_1222 = 1 + $I_L361_1222
  361.                      if ( $I_L361_1222 >= 1 + max( 0, -1 + _rsh( 7 + kmax, 3 ) ) ) exit
  361.                   enddo
  361.                endif
  361.             endif
  361.          endif
  361.          if ( klats == 1 ) then
  361.             $F_A61 = kmax
  361.             $F_A62 = ibdim
  361.             if ( and( -$F_A62, -$F_A61 ) < 0 ) then
  361.                $I_L361_1172 = 0
  361.                do
  361.                   $I_L361_1066 = 0
  361. !dir$ ivdep
  361.                   do
  361.                      iloc(1 + $I_L361_1066, 1 + $I_L361_1172, 2) = iloc(1 + $I_L361_1066, 1 + $I_L361_1172, 1)
  361.                      $I_L361_1066 = 1 + $I_L361_1066
  361.                      if ( $I_L361_1066 >= $F_A62 ) exit
  361.                   enddo
  361.                   $I_L361_1172 = 1 + $I_L361_1172
  361.                   if ( $I_L361_1172 >= $F_A61 ) exit
  361.                enddo
  361.             endif
  361.             $F_A63 = kmax
  361.             $F_A64 = ibdim
  361.             if ( and( -$F_A64, -$F_A63 ) < 0 ) then
  361.                $I_L361_1174 = 0
  361.                do
  361.                   $I_L361_1068 = 0
  361. !dir$ ivdep
  361.                   do
  361.                      iloc(1 + $I_L361_1068, 1 + $I_L361_1174, 3) = iloc(1 + $I_L361_1068, 1 + $I_L361_1174, 1)
  361.                      $I_L361_1068 = 1 + $I_L361_1068
  361.                      if ( $I_L361_1068 >= $F_A64 ) exit
  361.                   enddo
  361.                   $I_L361_1174 = 1 + $I_L361_1174
  361.                   if ( $I_L361_1174 >= $F_A63 ) exit
  361.                enddo
  361.             endif
  361.             $F_A65 = kmax
  361.             $F_A66 = ibdim
  361.             if ( and( -$F_A66, -$F_A65 ) < 0 ) then
  361.                $I_L361_1176 = 0
  361.                do
  361.                   $I_L361_1070 = 0
  361. !dir$ ivdep
  361.                   do
  361.                      iloc(1 + $I_L361_1070, 1 + $I_L361_1176, 4) = iloc(1 + $I_L361_1070, 1 + $I_L361_1176, 1)
  361.                      $I_L361_1070 = 1 + $I_L361_1070
  361.                      if ( $I_L361_1070 >= $F_A66 ) exit
  361.                   enddo
  361.                   $I_L361_1176 = 1 + $I_L361_1176
  361.                   if ( $I_L361_1176 >= $F_A65 ) exit
  361.                enddo
  361.             endif
  361.             $F_A67 = kmax
  361.             $F_A68 = ibdim
  361.             if ( and( -$F_A68, -$F_A67 ) < 0 ) then
  361.                $I_L361_1178 = 0
  361.                do
  361.                   $I_L361_1072 = 0
  361. !dir$ ivdep
  361.                   do
  361.                      ulondp(1 + $I_L361_1072, 1 + $I_L361_1178, 2) = ulondp(1 + $I_L361_1072, 1 + $I_L361_1178, 1)
  361.                      $I_L361_1072 = 1 + $I_L361_1072
  361.                      if ( $I_L361_1072 >= $F_A68 ) exit
  361.                   enddo
  361.                   $I_L361_1178 = 1 + $I_L361_1178
  361.                   if ( $I_L361_1178 >= $F_A67 ) exit
  361.                enddo
  361.             endif
  361.             $F_A69 = kmax
  361.             $F_A70 = ibdim
  361.             if ( and( -$F_A70, -$F_A69 ) < 0 ) then
  361.                $I_L361_1180 = 0
  361.                do
  361.                   $I_L361_1074 = 0
  361. !dir$ ivdep
  361.                   do
  361.                      ulondp(1 + $I_L361_1074, 1 + $I_L361_1180, 3) = ulondp(1 + $I_L361_1074, 1 + $I_L361_1180, 1)
  361.                      $I_L361_1074 = 1 + $I_L361_1074
  361.                      if ( $I_L361_1074 >= $F_A70 ) exit
  361.                   enddo
  361.                   $I_L361_1180 = 1 + $I_L361_1180
  361.                   if ( $I_L361_1180 >= $F_A69 ) exit
  361.                enddo
  361.             endif
  361.             $F_A71 = kmax
  361.             $F_A72 = ibdim
  361.             if ( and( -$F_A72, -$F_A71 ) < 0 ) then
  361.                $I_L361_1182 = 0
  361.                do
  361.                   $I_L361_1076 = 0
  361. !dir$ ivdep
  361.                   do
  361.                      ulondp(1 + $I_L361_1076, 1 + $I_L361_1182, 4) = ulondp(1 + $I_L361_1076, 1 + $I_L361_1182, 1)
  361.                      $I_L361_1076 = 1 + $I_L361_1076
  361.                      if ( $I_L361_1076 >= $F_A72 ) exit
  361.                   enddo
  361.                   $I_L361_1182 = 1 + $I_L361_1182
  361.                   if ( $I_L361_1182 >= $F_A71 ) exit
  361.                enddo
  361.             endif
  361.          endif
  361.          kloc(1) = _copyout( kloc )
  361.          jloc(1) = _copyout( jloc )
  361.          iloc(1) = _copyout( iloc )
  361.          usigdp(1) = _copyout( usigdp )
  361.          ulatdp(1) = _copyout( ulatdp )
  361.          ulondp(1) = _copyout( ulondp )
  361.          (usigm%base_addr)(1, jb, 0) = _copyout( usig )
  361.          (ulatm%base_addr)(1, jb, 0) = _copyout( ulat )
  361.          (ulonm%base_addr)(1, jb, 0) = _copyout( ulon )
  366.          log1 = .false.
  367.          log2 = .true.
  368.          $t_S29 = nscalars
  368.          if ( nscalars > 0 ) then
  368.             $I_L368_1208 = 0
  368.             do
  369.                kprox = 3 + -adr_scalars
  370.                ipa$579 = 1.0
  370.                ipa$586 = .true.
  370.                call interpcublin3d( fint(1), (fgpass_scalars%base_addr)(1, 1, 1, 1 + $I_L368_1208, adr_scalars, 0), log1, ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, ipa$579, log2, ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), ipa$586 )
  377.                if ( kmax > 0 ) then
  378.                   if ( ibdim > 0 ) then
  377.                      $I_L377_1142 = 0
  377.                      do
  379.                         $SC_fgpass_scalars_I427 = fgpass_scalars%dim_1%EX
  378.                         $I_L378_1008 = 0
  378. !dir$ ivdep
  378.                         do
  379.                            (fgpass_scalars%base_addr)(1 + $I_L378_1008, 1 + $I_L377_1142, jb, 1 + $I_L368_1208, kprox, 0) = fint($I_L378_1008 + ibdim * $I_L377_1142 + 1)
  381.                            $I_L378_1008 = 1 + $I_L378_1008
  378.                            if ( $I_L378_1008 >= ibdim ) exit
  378.                         enddo
  382.                         $I_L377_1142 = 1 + $I_L377_1142
  381.                         if ( $I_L377_1142 >= kmax ) exit
  381.                      enddo
  381.                   endif
  381.                endif
  383.                log1 = .true.
  384.                log2 = .false.
  385.                $I_L368_1208 = 1 + $I_L368_1208
  382.                if ( $I_L368_1208 >= $t_S29 ) exit
  382.             enddo
  382.          endif
  389.          ipa$687 = loc( (ulonm2d%base_addr)(1, jb, 0) )
  389.          ulonm = _copyin( (ulonm2d%base_addr)(1, jb, 0) )
  389.          ipa$689 = loc( (ulatm2d%base_addr)(1, jb, 0) )
  389.          ulatm = _copyin( (ulatm2d%base_addr)(1, jb, 0) )
  389.          ipa$691 = loc( ulondp(1) )
  389.          ulondp = _copyin( ulondp(1) )
  389.          ipa$693 = loc( iloc(1) )
  389.          iloc = _copyin( iloc(1) )
  389.          t$23 = ibdim
  389.          t$202 = max( 0, ibdim )
  389.          t$203 = ibdim
  389.          t$204 = ( 4 * ibdim )
  389.          t$24 = ibmax
  389.          t$205 = max( 0, ibmax )
  389.          t$208 = 8 * max( 0, ibmax )
  389.          t$209 = 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  389.          t$211 = 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  389.          t$206 = int( _alloc( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) ), 8 )
  389.          t$207 = t$206
  389.          t$210 = t$206 + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  389.          klats = 1
  389.          if ( reducedgrid ) then
  389.             klats = 2
  389.          endif
  389.          if ( nit > 0 ) then
  389.             $I_L389_1210 = 0
  389.             do
  389.                t$40 = ibdim
  389.                t$261 = max( 0, ibdim )
  389.                t$262 = ibdim
  389.                t$263 = ( 4 * ibdim )
  389.                if ( klats == 4 ) then
  389.                   kp(1) = -1
  389.                   kp(2) = 0
  389.                   kp(3) = 1
  389.                   kp(4) = 2
  389.                else
  389.                   kp(1) = 0
  389.                   kp(2) = 1
  389.                endif
  389.                if ( ibdim > 0 ) then
  389.                   $I_L389_1010 = 0
  389. !dir$ ivdep
  389.                   do
  389.                      ik = int( ( ( 1.570796326794895 + ulatm(1 + $I_L389_1010) ) * 1.0/delphiref ) )
  389.                      $jloc_WR0_R8 = (jphiref%base_addr)(1 + $I_L389_1010, ik, 0)
  389.                      jloc(1 + $I_L389_1010) = $jloc_WR0_R8
  389.                      if ( ulatm(1 + $I_L389_1010) > (phi%base_addr)(1 + $I_L389_1010, 1 + $jloc_WR0_R8, 0) ) then
  389.                         $jloc_WR0_R8 = 1 + $jloc_WR0_R8
  389.                         jloc(1 + $I_L389_1010) = $jloc_WR0_R8
  389.                      endif
  389.                      ulatdp(1 + $I_L389_1010) = ( ( ulatm(1 + $I_L389_1010) + -(phi%base_addr)(1 + $I_L389_1010, $jloc_WR0_R8, 0) ) * 1.0/(delphi%base_addr)(1 + $I_L389_1010, $jloc_WR0_R8, 0) )
  389.                      $I_L389_1010 = 1 + $I_L389_1010
  389.                      if ( $I_L389_1010 >= ibdim ) exit
  389.                   enddo
  389.                endif
  389.                if ( klats > 0 ) then
  389.                   if ( ibdim > 0 ) then
  389.                      $I_L389_922 = 0
  389.                      if ( klats >= 4 ) then
  389.                         $I_L389_1198 = 0
  389. !dir$ blocking_size( 0, 0 )
  389.                         do
  389.                            $ks#1_U8 = kp(1 + 4 * $I_L389_1198)
  389.                            $ks#2_U9 = kp(2 + 4 * $I_L389_1198)
  389.                            $ks#3_U10 = kp(3 + 4 * $I_L389_1198)
  389.                            $ks#4_U11 = kp(4 + 4 * $I_L389_1198)
  389.                            $I_L389_1118 = 0
  389. !dir$ ivdep
  389. !dir$ blocking_size( 0, 0 )
  389.                            do
  389.                               j = jmax + -jloc(1 + $I_L389_1118) + 1
  389.                               $ulondp_WR0_R9 = 1.0 + ( ulonm(1 + $I_L389_1118) * 1.0/(dellon%base_addr)(1 + $I_L389_1118, j + -$ks#1_U8, 0) )
  389.                               iloc(1 + $I_L389_1118, 1 + 4 * $I_L389_1198) = int( $ulondp_WR0_R9 )
  389.                               $ulondp_WR0_R9 = $ulondp_WR0_R9 + ( -( int( $ulondp_WR0_R9 ) ) )
  389.                               ulondp(1 + $I_L389_1118, 1 + 4 * $I_L389_1198) = $ulondp_WR0_R9
  389.                               j = jmax + -jloc(1 + $I_L389_1118) + 1
  389.                               $ulondp_WR0_R9 = 1.0 + ( ulonm(1 + $I_L389_1118) * 1.0/(dellon%base_addr)(1 + $I_L389_1118, j + -$ks#2_U9, 0) )
  389.                               iloc(1 + $I_L389_1118, 2 + 4 * $I_L389_1198) = int( $ulondp_WR0_R9 )
  389.                               $ulondp_WR0_R9 = $ulondp_WR0_R9 + ( -( int( $ulondp_WR0_R9 ) ) )
  389.                               ulondp(1 + $I_L389_1118, 2 + 4 * $I_L389_1198) = $ulondp_WR0_R9
  389.                               j = jmax + -jloc(1 + $I_L389_1118) + 1
  389.                               $ulondp_WR0_R9 = 1.0 + ( ulonm(1 + $I_L389_1118) * 1.0/(dellon%base_addr)(1 + $I_L389_1118, j + -$ks#3_U10, 0) )
  389.                               iloc(1 + $I_L389_1118, 3 + 4 * $I_L389_1198) = int( $ulondp_WR0_R9 )
  389.                               $ulondp_WR0_R9 = $ulondp_WR0_R9 + ( -( int( $ulondp_WR0_R9 ) ) )
  389.                               ulondp(1 + $I_L389_1118, 3 + 4 * $I_L389_1198) = $ulondp_WR0_R9
  389.                               j = jmax + -jloc(1 + $I_L389_1118) + 1
  389.                               $ulondp_WR0_R9 = 1.0 + ( ulonm(1 + $I_L389_1118) * 1.0/(dellon%base_addr)(1 + $I_L389_1118, j + -$ks#4_U11, 0) )
  389.                               iloc(1 + $I_L389_1118, 4 + 4 * $I_L389_1198) = int( $ulondp_WR0_R9 )
  389.                               $ulondp_WR0_R9 = $ulondp_WR0_R9 + ( -( int( $ulondp_WR0_R9 ) ) )
  389.                               ulondp(1 + $I_L389_1118, 4 + 4 * $I_L389_1198) = $ulondp_WR0_R9
  389.                               $I_L389_1118 = 1 + $I_L389_1118
  389.                               if ( $I_L389_1118 >= ibdim ) exit
  389.                            enddo
  389.                            $I_L389_1198 = 1 + $I_L389_1198
  389.                            if ( $I_L389_1198 >= _rsh( klats, 2 ) ) exit
  389.                         enddo
  389.                         $I_L389_922 = and( 0xfffffffffffffffcUL, klats )
  389.                      endif
  389.                      if ( $I_L389_922 < klats ) then
  389.                         $I_L389_1144 = 0
  389. !dir$ blocking_size( 0, 0 )
  389.                         do
  389.                            ks = kp($I_L389_922 + $I_L389_1144 + 1)
  389.                            $I_L389_1012 = 0
  389. !dir$ ivdep
  389. !dir$ blocking_size( 0, 0 )
  389.                            do
  389.                               j = jmax + -jloc(1 + $I_L389_1012) + 1
  389.                               $ulondp_WR0_R9 = 1.0 + ( ulonm(1 + $I_L389_1012) * 1.0/(dellon%base_addr)(1 + $I_L389_1012, j + -ks, 0) )
  389.                               iloc(1 + $I_L389_1012, $I_L389_922 + $I_L389_1144 + 1) = int( $ulondp_WR0_R9 )
  389.                               $ulondp_WR0_R9 = $ulondp_WR0_R9 + ( -( int( $ulondp_WR0_R9 ) ) )
  389.                               ulondp(1 + $I_L389_1012, $I_L389_922 + $I_L389_1144 + 1) = $ulondp_WR0_R9
  389.                               $I_L389_1012 = 1 + $I_L389_1012
  389.                               if ( $I_L389_1012 >= ibdim ) exit
  389.                            enddo
  389.                            $I_L389_1144 = 1 + $I_L389_1144
  389.                            if ( $I_L389_1144 >= klats + -$I_L389_922 ) exit
  389.                         enddo
  389.                      endif
  389.                   endif
  389.                endif
  389.                if ( klats == 1 ) then
  389.                   $F_A73 = ibdim
  389.                   if ( ibdim > 0 ) then
  389.                      $I_L389_1078 = 0
  389. !dir$ ivdep
  389.                      do
  389.                         iloc(1 + $I_L389_1078, 2) = iloc(1 + $I_L389_1078, 1)
  389.                         $I_L389_1078 = 1 + $I_L389_1078
  389.                         if ( $I_L389_1078 >= $F_A73 ) exit
  389.                      enddo
  389.                   endif
  389.                   $F_A74 = ibdim
  389.                   if ( ibdim > 0 ) then
  389.                      $I_L389_1080 = 0
  389. !dir$ ivdep
  389.                      do
  389.                         iloc(1 + $I_L389_1080, 3) = iloc(1 + $I_L389_1080, 1)
  389.                         $I_L389_1080 = 1 + $I_L389_1080
  389.                         if ( $I_L389_1080 >= $F_A74 ) exit
  389.                      enddo
  389.                   endif
  389.                   $F_A75 = ibdim
  389.                   if ( ibdim > 0 ) then
  389.                      $I_L389_1082 = 0
  389. !dir$ ivdep
  389.                      do
  389.                         iloc(1 + $I_L389_1082, 4) = iloc(1 + $I_L389_1082, 1)
  389.                         $I_L389_1082 = 1 + $I_L389_1082
  389.                         if ( $I_L389_1082 >= $F_A75 ) exit
  389.                      enddo
  389.                   endif
  389.                   $F_A76 = ibdim
  389.                   if ( ibdim > 0 ) then
  389.                      $I_L389_1084 = 0
  389. !dir$ ivdep
  389.                      do
  389.                         ulondp(1 + $I_L389_1084, 2) = ulondp(1 + $I_L389_1084, 1)
  389.                         $I_L389_1084 = 1 + $I_L389_1084
  389.                         if ( $I_L389_1084 >= $F_A76 ) exit
  389.                      enddo
  389.                   endif
  389.                   $F_A77 = ibdim
  389.                   if ( ibdim > 0 ) then
  389.                      $I_L389_1086 = 0
  389. !dir$ ivdep
  389.                      do
  389.                         ulondp(1 + $I_L389_1086, 3) = ulondp(1 + $I_L389_1086, 1)
  389.                         $I_L389_1086 = 1 + $I_L389_1086
  389.                         if ( $I_L389_1086 >= $F_A77 ) exit
  389.                      enddo
  389.                   endif
  389.                   $F_A78 = ibdim
  389.                   if ( ibdim > 0 ) then
  389.                      $I_L389_1088 = 0
  389. !dir$ ivdep
  389.                      do
  389.                         ulondp(1 + $I_L389_1088, 4) = ulondp(1 + $I_L389_1088, 1)
  389.                         $I_L389_1088 = 1 + $I_L389_1088
  389.                         if ( $I_L389_1088 >= $F_A78 ) exit
  389.                      enddo
  389.                   endif
  389.                endif
  389.                ipa$715 = loc( (fgumean%base_addr)(fgumean%dim_1%LB, fgumean%dim_2%LB, 0) )
  389.                u = _copyin( (fgumean%base_addr)(fgumean%dim_1%LB, fgumean%dim_2%LB, 0) )
  389.                ipa$717 = loc( (fgvmean%base_addr)(fgvmean%dim_1%LB, fgvmean%dim_2%LB, 0) )
  389.                v = _copyin( (fgvmean%base_addr)(fgvmean%dim_1%LB, fgvmean%dim_2%LB, 0) )
  389.                t$46 = ibmax
  389.                t$47 = jbmax_ext
  389.                t$276 = max( 0, ibmax )
  389.                t$277 = max( 0, ibmax )
  389.                t$278 = max( 0, jbmax_ext )
  389.                t$279 = max( 0, ibmax ) * max( 0, jbmax_ext )
  389.                t$45 = ibdim
  389.                t$280 = max( 0, ibdim )
  389.                t$281 = ibdim
  389.                t$282 = ( 2 * ibdim )
  389.                t$285 = 8 * max( 0, ibmax )
  389.                t$286 = 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  389.                t$288 = 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  389.                t$283 = int( _alloc( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) ), 8 )
  389.                t$284 = t$283
  389.                t$287 = t$283 + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  389.                if ( ibdim > 0 ) then
  389.                   $I_L389_1014 = 0
  389. !dir$ ivdep
  389.                   do
  389.                      $jp_S34 = jmax + -jloc(1 + $I_L389_1014) + 1
  389.                      s1(1 + $I_L389_1014) = 1.0
  389.                      s2(1 + $I_L389_1014) = 1.0
  389.                      if ( jmax + -$jp_S34 == -1 ) then
  389.                         s1(1 + $I_L389_1014) = -1.0
  389.                      endif
  389.                      if ( $jp_S34 == 1 ) then
  389.                         s2(1 + $I_L389_1014) = -1.0
  389.                      endif
  389.                      $I_L389_1014 = 1 + $I_L389_1014
  389.                      if ( $I_L389_1014 >= ibdim ) exit
  389.                   enddo
  389.                   $I_L389_1016 = 0
  389. !dir$ ivdep
  389.                   do
  389.                      jp = jmax + -jloc(1 + $I_L389_1016) + 1
  389.                      i1 = (ibperij%base_addr)(iloc(1 + $I_L389_1016, 1), jp, 0)
  389.                      i2 = (ibperij%base_addr)(iloc(1 + $I_L389_1016, 2), -1 + jp, 0)
  389.                      i3 = (ibperij%base_addr)(1 + iloc(1 + $I_L389_1016, 1), jp, 0)
  389.                      i4 = (ibperij%base_addr)(1 + iloc(1 + $I_L389_1016, 2), -1 + jp, 0)
  389.                      j1 = (jbperij%base_addr)(iloc(1 + $I_L389_1016, 1), jp, 0)
  389.                      j2 = (jbperij%base_addr)(iloc(1 + $I_L389_1016, 2), -1 + jp, 0)
  389.                      j3 = (jbperij%base_addr)(1 + iloc(1 + $I_L389_1016, 1), jp, 0)
  389.                      j4 = (jbperij%base_addr)(1 + iloc(1 + $I_L389_1016, 2), -1 + jp, 0)
  389.                      f1 = s1(1 + $I_L389_1016) * ( u(i1, j1) + ulondp(1 + $I_L389_1016, 1) * ( u(i3, j3) + -u(i1, j1) ) )
  389.                      g1 = s1(1 + $I_L389_1016) * ( v(i1, j1) + ulondp(1 + $I_L389_1016, 1) * ( v(i3, j3) + -v(i1, j1) ) )
  389.                      f2 = s2(1 + $I_L389_1016) * ( u(i2, j2) + ulondp(1 + $I_L389_1016, 2) * ( u(i4, j4) + -u(i2, j2) ) )
  389.                      g2 = s2(1 + $I_L389_1016) * ( v(i2, j2) + ulondp(1 + $I_L389_1016, 2) * ( v(i4, j4) + -v(i2, j2) ) )
  389.                      uint(1 + $I_L389_1016) = f1 + ulatdp(1 + $I_L389_1016) * ( f2 + -f1 )
  389.                      vint(1 + $I_L389_1016) = g1 + ulatdp(1 + $I_L389_1016) * ( g2 + -g1 )
  389.                      $I_L389_1016 = 1 + $I_L389_1016
  389.                      if ( $I_L389_1016 >= ibdim ) exit
  389.                   enddo
  389.                endif
  389.                _free( t$283 )
  389.                (fgvmean%base_addr)(fgvmean%dim_1%LB, fgvmean%dim_2%LB, 0) = _copyout( v )
  389.                (fgumean%base_addr)(fgumean%dim_1%LB, fgumean%dim_2%LB, 0) = _copyout( u )
  389.                ipa$733 = loc( (coslon%base_addr)(1, jb, 0) )
  389.                coslon = _copyin( (coslon%base_addr)(1, jb, 0) )
  389.                ipa$735 = loc( (sinlon%base_addr)(1, jb, 0) )
  389.                sinlon = _copyin( (sinlon%base_addr)(1, jb, 0) )
  389.                ipa$737 = loc( (coslat%base_addr)(1, jb, 0) )
  389.                coslat = _copyin( (coslat%base_addr)(1, jb, 0) )
  389.                ipa$739 = loc( (sinlat%base_addr)(1, jb, 0) )
  389.                sinlat = _copyin( (sinlat%base_addr)(1, jb, 0) )
  389.                t$37 = ibdim
  389.                t$254 = max( 0, ibdim )
  389.                dt2 = delta1 * delta1
  389.                twodt = 2.0 * delta1
  389.                if ( ibdim > 0 ) then
  389.                   if ( $I_L389_1210 + -nit + 1 == 0 ) then
  389.                      $I_L389_1018 = 0
  389. !dir$ ivdep
  389.                      do
  389.                         $Coss_P1 = coss( ulonm(1 + $I_L389_1018) )
  389.                         $Coss_P2 = coss( ulatm(1 + $I_L389_1018) )
  389.                         x = coslon(1 + $I_L389_1018) * coslat(1 + $I_L389_1018)
  389.                         y = sinlon(1 + $I_L389_1018) * coslat(1 + $I_L389_1018)
  389.                         z = sinlat(1 + $I_L389_1018)
  389.                         xdot = -( uint(1 + $I_L389_1018) * cimag( $Coss_P1 ) + vint(1 + $I_L389_1018) * real( $Coss_P1, 8 ) * cimag( $Coss_P2 ) )
  389.                         ydot = uint(1 + $I_L389_1018) * real( $Coss_P1, 8 ) + -( vint(1 + $I_L389_1018) * cimag( $Coss_P1 ) * cimag( $Coss_P2 ) )
  389.                         zdot = real( $Coss_P2, 8 ) * vint(1 + $I_L389_1018)
  389.                         xb = _recip_sqrt( ( -( twodt * ( xdot * x + ydot * y + zdot * z ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) + 1.0 ) ) * ( x + -( delta1 * xdot ) )
  389.                         yb = _recip_sqrt( ( -( twodt * ( xdot * x + ydot * y + zdot * z ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) + 1.0 ) ) * ( y + -( delta1 * ydot ) )
  389.                         zb = _recip_sqrt( ( -( twodt * ( xdot * x + ydot * y + zdot * z ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) + 1.0 ) ) * ( z + -( delta1 * zdot ) )
  389.                         $ulonm_WR0_R11 = atan2( ( _recip_sqrt( ( -( twodt * ( xdot * x + ydot * y + zdot * z ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) + 1.0 ) ) * ( y + -( delta1 * ydot ) ) ), ( _recip_sqrt( ( -( twodt * ( xdot * x + ydot * y + zdot * z ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) + 1.0 ) ) * ( x + -( delta1 * xdot ) ) ) )
  389.                         ulonm(1 + $I_L389_1018) = atan2( ( _recip_sqrt( ( -( twodt * ( xdot * x + ydot * y + zdot * z ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) + 1.0 ) ) * ( y + -( delta1 * ydot ) ) ), ( _recip_sqrt( ( -( twodt * ( xdot * x + ydot * y + zdot * z ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) + 1.0 ) ) * ( x + -( delta1 * xdot ) ) ) )
  389.                         if ( atan2( ( _recip_sqrt( ( -( twodt * ( xdot * x + ydot * y + zdot * z ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) + 1.0 ) ) * ( y + -( delta1 * ydot ) ) ), ( _recip_sqrt( ( -( twodt * ( xdot * x + ydot * y + zdot * z ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) + 1.0 ) ) * ( x + -( delta1 * xdot ) ) ) ) < 0.0 ) then
  389.                            $ulonm_WR0_R11 = 6.28318530717958 + $ulonm_WR0_R11
  389.                            ulonm(1 + $I_L389_1018) = $ulonm_WR0_R11
  389.                         endif
  389.                         ulatm(1 + $I_L389_1018) = asin( zb )
  389.                         zm = ( 2.0 * ( x * xb + y * yb + z * zb ) ) * zb + -z
  389.                         $ulon_WR0_R12 = atan2( ( ( 2.0 * ( x * xb + y * yb + z * zb ) ) * yb + -y ), ( ( 2.0 * ( x * xb + y * yb + z * zb ) ) * xb + -x ) )
  389.                         ulon(1 + $I_L389_1018) = atan2( ( ( 2.0 * ( x * xb + y * yb + z * zb ) ) * yb + -y ), ( ( 2.0 * ( x * xb + y * yb + z * zb ) ) * xb + -x ) )
  389.                         if ( atan2( ( ( 2.0 * ( x * xb + y * yb + z * zb ) ) * yb + -y ), ( ( 2.0 * ( x * xb + y * yb + z * zb ) ) * xb + -x ) ) < 0.0 ) then
  389.                            $ulon_WR0_R12 = 6.28318530717958 + $ulon_WR0_R12
  389.                            ulon(1 + $I_L389_1018) = $ulon_WR0_R12
  389.                         endif
  389.                         ulat(1 + $I_L389_1018) = asin( zm )
  389.                         $I_L389_1018 = 1 + $I_L389_1018
  389.                         if ( $I_L389_1018 >= ibdim ) exit
  389.                      enddo
  389.                   else
  389.                      $I_L389_1030 = 0
  389. !dir$ ivdep
  389.                      do
  389.                         $Coss_P3 = coss( ulonm(1 + $I_L389_1030) )
  389.                         $Coss_P4 = coss( ulatm(1 + $I_L389_1030) )
  389.                         x = coslon(1 + $I_L389_1030) * coslat(1 + $I_L389_1030)
  389.                         y = sinlon(1 + $I_L389_1030) * coslat(1 + $I_L389_1030)
  389.                         z = sinlat(1 + $I_L389_1030)
  389.                         xdot = -( uint(1 + $I_L389_1030) * cimag( $Coss_P3 ) + vint(1 + $I_L389_1030) * real( $Coss_P3, 8 ) * cimag( $Coss_P4 ) )
  389.                         ydot = uint(1 + $I_L389_1030) * real( $Coss_P3, 8 ) + -( vint(1 + $I_L389_1030) * cimag( $Coss_P3 ) * cimag( $Coss_P4 ) )
  389.                         zdot = real( $Coss_P4, 8 ) * vint(1 + $I_L389_1030)
  389.                         zb = _recip_sqrt( ( -( twodt * ( xdot * x + ydot * y + zdot * z ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) + 1.0 ) ) * ( z + -( delta1 * zdot ) )
  389.                         $ulonm_WR0_R13 = atan2( ( _recip_sqrt( ( -( twodt * ( xdot * x + ydot * y + zdot * z ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) + 1.0 ) ) * ( y + -( delta1 * ydot ) ) ), ( _recip_sqrt( ( -( twodt * ( xdot * x + ydot * y + zdot * z ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) + 1.0 ) ) * ( x + -( delta1 * xdot ) ) ) )
  389.                         ulonm(1 + $I_L389_1030) = atan2( ( _recip_sqrt( ( -( twodt * ( xdot * x + ydot * y + zdot * z ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) + 1.0 ) ) * ( y + -( delta1 * ydot ) ) ), ( _recip_sqrt( ( -( twodt * ( xdot * x + ydot * y + zdot * z ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) + 1.0 ) ) * ( x + -( delta1 * xdot ) ) ) )
  389.                         if ( atan2( ( _recip_sqrt( ( -( twodt * ( xdot * x + ydot * y + zdot * z ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) + 1.0 ) ) * ( y + -( delta1 * ydot ) ) ), ( _recip_sqrt( ( -( twodt * ( xdot * x + ydot * y + zdot * z ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) + 1.0 ) ) * ( x + -( delta1 * xdot ) ) ) ) < 0.0 ) then
  389.                            $ulonm_WR0_R13 = 6.28318530717958 + $ulonm_WR0_R13
  389.                            ulonm(1 + $I_L389_1030) = $ulonm_WR0_R13
  389.                         endif
  389.                         ulatm(1 + $I_L389_1030) = asin( zb )
  389.                         $I_L389_1030 = 1 + $I_L389_1030
  389.                         if ( $I_L389_1030 >= ibdim ) exit
  389.                      enddo
  389.                   endif
  389.                endif
  389.                (sinlat%base_addr)(1, jb, 0) = _copyout( sinlat )
  389.                (coslat%base_addr)(1, jb, 0) = _copyout( coslat )
  389.                (sinlon%base_addr)(1, jb, 0) = _copyout( sinlon )
  389.                (coslon%base_addr)(1, jb, 0) = _copyout( coslon )
  389.                $I_L389_1210 = 1 + $I_L389_1210
  389.                if ( $I_L389_1210 >= nit ) exit
  389.             enddo
  389.          endif
  389.          _free( t$206 )
  389.          iloc(1) = _copyout( iloc )
  389.          ulondp(1) = _copyout( ulondp )
  389.          (ulatm2d%base_addr)(1, jb, 0) = _copyout( ulatm )
  389.          (ulonm2d%base_addr)(1, jb, 0) = _copyout( ulonm )
  397.          ipa$753 = loc( ulondp(1) )
  397.          ulondp = _copyin( ulondp(1) )
  397.          ipa$755 = loc( iloc(1) )
  397.          iloc = _copyin( iloc(1) )
  397.          t$40 = ibdim
  397.          t$261 = max( 0, ibdim )
  397.          t$262 = ibdim
  397.          t$263 = ( 4 * ibdim )
  397.          if ( klats == 4 ) then
  397.             kp(1) = -1
  397.             kp(2) = 0
  397.             kp(3) = 1
  397.             kp(4) = 2
  397.          else
  397.             kp(1) = 0
  397.             kp(2) = 1
  397.          endif
  397.          if ( ibdim > 0 ) then
  397.             $I_L397_1020 = 0
  397. !dir$ ivdep
  397.             do
  397.                ik = int( ( ( 1.570796326794895 + ulat(1 + $I_L397_1020) ) * 1.0/delphiref ) )
  397.                $jloc_WR0_R14 = (jphiref%base_addr)(1 + $I_L397_1020, ik, 0)
  397.                jloc(1 + $I_L397_1020) = $jloc_WR0_R14
  397.                if ( ulat(1 + $I_L397_1020) > (phi%base_addr)(1 + $I_L397_1020, 1 + $jloc_WR0_R14, 0) ) then
  397.                   $jloc_WR0_R14 = 1 + $jloc_WR0_R14
  397.                   jloc(1 + $I_L397_1020) = $jloc_WR0_R14
  397.                endif
  397.                ulatdp(1 + $I_L397_1020) = ( ( ulat(1 + $I_L397_1020) + -(phi%base_addr)(1 + $I_L397_1020, $jloc_WR0_R14, 0) ) * 1.0/(delphi%base_addr)(1 + $I_L397_1020, $jloc_WR0_R14, 0) )
  397.                $I_L397_1020 = 1 + $I_L397_1020
  397.                if ( $I_L397_1020 >= ibdim ) exit
  397.             enddo
  397.          endif
  397.          if ( klats > 0 ) then
  397.             if ( ibdim > 0 ) then
  397.                $I_L397_924 = 0
  397.                if ( klats >= 4 ) then
  397.                   $I_L397_1200 = 0
  397. !dir$ blocking_size( 0, 0 )
  397.                   do
  397.                      $ks#1_U12 = kp(1 + 4 * $I_L397_1200)
  397.                      $ks#2_U13 = kp(2 + 4 * $I_L397_1200)
  397.                      $ks#3_U14 = kp(3 + 4 * $I_L397_1200)
  397.                      $ks#4_U15 = kp(4 + 4 * $I_L397_1200)
  397.                      $I_L397_1120 = 0
  397. !dir$ ivdep
  397. !dir$ blocking_size( 0, 0 )
  397.                      do
  397.                         j = jmax + -jloc(1 + $I_L397_1120) + 1
  397.                         $ulondp_WR0_R15 = 1.0 + ( ulon(1 + $I_L397_1120) * 1.0/(dellon%base_addr)(1 + $I_L397_1120, j + -$ks#1_U12, 0) )
  397.                         iloc(1 + $I_L397_1120, 1 + 4 * $I_L397_1200) = int( $ulondp_WR0_R15 )
  397.                         $ulondp_WR0_R15 = $ulondp_WR0_R15 + ( -( int( $ulondp_WR0_R15 ) ) )
  397.                         ulondp(1 + $I_L397_1120, 1 + 4 * $I_L397_1200) = $ulondp_WR0_R15
  397.                         j = jmax + -jloc(1 + $I_L397_1120) + 1
  397.                         $ulondp_WR0_R15 = 1.0 + ( ulon(1 + $I_L397_1120) * 1.0/(dellon%base_addr)(1 + $I_L397_1120, j + -$ks#2_U13, 0) )
  397.                         iloc(1 + $I_L397_1120, 2 + 4 * $I_L397_1200) = int( $ulondp_WR0_R15 )
  397.                         $ulondp_WR0_R15 = $ulondp_WR0_R15 + ( -( int( $ulondp_WR0_R15 ) ) )
  397.                         ulondp(1 + $I_L397_1120, 2 + 4 * $I_L397_1200) = $ulondp_WR0_R15
  397.                         j = jmax + -jloc(1 + $I_L397_1120) + 1
  397.                         $ulondp_WR0_R15 = 1.0 + ( ulon(1 + $I_L397_1120) * 1.0/(dellon%base_addr)(1 + $I_L397_1120, j + -$ks#3_U14, 0) )
  397.                         iloc(1 + $I_L397_1120, 3 + 4 * $I_L397_1200) = int( $ulondp_WR0_R15 )
  397.                         $ulondp_WR0_R15 = $ulondp_WR0_R15 + ( -( int( $ulondp_WR0_R15 ) ) )
  397.                         ulondp(1 + $I_L397_1120, 3 + 4 * $I_L397_1200) = $ulondp_WR0_R15
  397.                         j = jmax + -jloc(1 + $I_L397_1120) + 1
  397.                         $ulondp_WR0_R15 = 1.0 + ( ulon(1 + $I_L397_1120) * 1.0/(dellon%base_addr)(1 + $I_L397_1120, j + -$ks#4_U15, 0) )
  397.                         iloc(1 + $I_L397_1120, 4 + 4 * $I_L397_1200) = int( $ulondp_WR0_R15 )
  397.                         $ulondp_WR0_R15 = $ulondp_WR0_R15 + ( -( int( $ulondp_WR0_R15 ) ) )
  397.                         ulondp(1 + $I_L397_1120, 4 + 4 * $I_L397_1200) = $ulondp_WR0_R15
  397.                         $I_L397_1120 = 1 + $I_L397_1120
  397.                         if ( $I_L397_1120 >= ibdim ) exit
  397.                      enddo
  397.                      $I_L397_1200 = 1 + $I_L397_1200
  397.                      if ( $I_L397_1200 >= _rsh( klats, 2 ) ) exit
  397.                   enddo
  397.                   $I_L397_924 = and( 0xfffffffffffffffcUL, klats )
  397.                endif
  397.                if ( $I_L397_924 < klats ) then
  397.                   $I_L397_1147 = 0
  397. !dir$ blocking_size( 0, 0 )
  397.                   do
  397.                      ks = kp($I_L397_924 + $I_L397_1147 + 1)
  397.                      $I_L397_1022 = 0
  397. !dir$ ivdep
  397. !dir$ blocking_size( 0, 0 )
  397.                      do
  397.                         j = jmax + -jloc(1 + $I_L397_1022) + 1
  397.                         $ulondp_WR0_R15 = 1.0 + ( ulon(1 + $I_L397_1022) * 1.0/(dellon%base_addr)(1 + $I_L397_1022, j + -ks, 0) )
  397.                         iloc(1 + $I_L397_1022, $I_L397_924 + $I_L397_1147 + 1) = int( $ulondp_WR0_R15 )
  397.                         $ulondp_WR0_R15 = $ulondp_WR0_R15 + ( -( int( $ulondp_WR0_R15 ) ) )
  397.                         ulondp(1 + $I_L397_1022, $I_L397_924 + $I_L397_1147 + 1) = $ulondp_WR0_R15
  397.                         $I_L397_1022 = 1 + $I_L397_1022
  397.                         if ( $I_L397_1022 >= ibdim ) exit
  397.                      enddo
  397.                      $I_L397_1147 = 1 + $I_L397_1147
  397.                      if ( $I_L397_1147 >= klats + -$I_L397_924 ) exit
  397.                   enddo
  397.                endif
  397.             endif
  397.          endif
  397.          if ( klats == 1 ) then
  397.             $F_A79 = ibdim
  397.             if ( ibdim > 0 ) then
  397.                $I_L397_1090 = 0
  397. !dir$ ivdep
  397.                do
  397.                   iloc(1 + $I_L397_1090, 2) = iloc(1 + $I_L397_1090, 1)
  397.                   $I_L397_1090 = 1 + $I_L397_1090
  397.                   if ( $I_L397_1090 >= $F_A79 ) exit
  397.                enddo
  397.             endif
  397.             $F_A80 = ibdim
  397.             if ( ibdim > 0 ) then
  397.                $I_L397_1092 = 0
  397. !dir$ ivdep
  397.                do
  397.                   iloc(1 + $I_L397_1092, 3) = iloc(1 + $I_L397_1092, 1)
  397.                   $I_L397_1092 = 1 + $I_L397_1092
  397.                   if ( $I_L397_1092 >= $F_A80 ) exit
  397.                enddo
  397.             endif
  397.             $F_A81 = ibdim
  397.             if ( ibdim > 0 ) then
  397.                $I_L397_1094 = 0
  397. !dir$ ivdep
  397.                do
  397.                   iloc(1 + $I_L397_1094, 4) = iloc(1 + $I_L397_1094, 1)
  397.                   $I_L397_1094 = 1 + $I_L397_1094
  397.                   if ( $I_L397_1094 >= $F_A81 ) exit
  397.                enddo
  397.             endif
  397.             $F_A82 = ibdim
  397.             if ( ibdim > 0 ) then
  397.                $I_L397_1096 = 0
  397. !dir$ ivdep
  397.                do
  397.                   ulondp(1 + $I_L397_1096, 2) = ulondp(1 + $I_L397_1096, 1)
  397.                   $I_L397_1096 = 1 + $I_L397_1096
  397.                   if ( $I_L397_1096 >= $F_A82 ) exit
  397.                enddo
  397.             endif
  397.             $F_A83 = ibdim
  397.             if ( ibdim > 0 ) then
  397.                $I_L397_1098 = 0
  397. !dir$ ivdep
  397.                do
  397.                   ulondp(1 + $I_L397_1098, 3) = ulondp(1 + $I_L397_1098, 1)
  397.                   $I_L397_1098 = 1 + $I_L397_1098
  397.                   if ( $I_L397_1098 >= $F_A83 ) exit
  397.                enddo
  397.             endif
  397.             $F_A84 = ibdim
  397.             if ( ibdim > 0 ) then
  397.                $I_L397_1100 = 0
  397. !dir$ ivdep
  397.                do
  397.                   ulondp(1 + $I_L397_1100, 4) = ulondp(1 + $I_L397_1100, 1)
  397.                   $I_L397_1100 = 1 + $I_L397_1100
  397.                   if ( $I_L397_1100 >= $F_A84 ) exit
  397.                enddo
  397.             endif
  397.          endif
  397.          iloc(1) = _copyout( iloc )
  397.          ulondp(1) = _copyout( ulondp )
  405.          ipa$771 = loc( (fgvdlnpm%base_addr)(fgvdlnpm%dim_1%LB, fgvdlnpm%dim_2%LB, 0) )
  405.          f = _copyin( (fgvdlnpm%base_addr)(fgvdlnpm%dim_1%LB, fgvdlnpm%dim_2%LB, 0) )
  405.          ipa$773 = loc( ulondp(1) )
  405.          ulondp = _copyin( ulondp(1) )
  405.          ipa$775 = loc( iloc(1) )
  405.          iloc = _copyin( iloc(1) )
  405.          t$56 = ibdim
  405.          t$301 = max( 0, ibdim )
  405.          t$57 = ibmax
  405.          t$58 = jbmax_ext
  405.          t$302 = max( 0, ibmax )
  405.          t$303 = max( 0, ibmax )
  405.          t$304 = max( 0, jbmax_ext )
  405.          t$305 = max( 0, ibmax ) * max( 0, jbmax_ext )
  405.          t$306 = ibdim
  405.          t$307 = ( 4 * ibdim )
  405.          t$310 = 8 * max( 0, ibmax )
  405.          t$311 = 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  405.          t$313 = 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  405.          t$314 = 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 )
  405.          t$316 = 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 )
  405.          t$317 = 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
  405.          t$319 = 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
  405.          t$320 = 12 * max( 0, ibmax )
  405.          t$322 = 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 56 * max( 0, ibmax )
  405.          t$324 = 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 104 * max( 0, ibmax )
  405.          t$308 = int( _alloc( 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 104 * max( 0, ibmax ) ), 8 )
  405.          t$309 = t$308
  405.          t$312 = t$308 + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  405.          t$315 = t$308 + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 )
  405.          t$318 = t$308 + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
  405.          t$321 = t$308 + 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
  405.          t$323 = t$308 + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 56 * max( 0, ibmax )
  405.          if ( ibdim > 0 ) then
  405.             $I_L405_1024 = 0
  405. !dir$ ivdep
  405.             do
  405.                jp = jmax + -jloc(1 + $I_L405_1024) + 1
  405.                ip(1 + $I_L405_1024, 1) = (ibperij%base_addr)(iloc(1 + $I_L405_1024, 1), 1 + jp, 0)
  405.                ip(1 + $I_L405_1024, 2) = (ibperij%base_addr)(1 + iloc(1 + $I_L405_1024, 1), 1 + jp, 0)
  405.                ip(1 + $I_L405_1024, 3) = (ibperij%base_addr)(-1 + iloc(1 + $I_L405_1024, 2), jp, 0)
  405.                ip(1 + $I_L405_1024, 4) = (ibperij%base_addr)(iloc(1 + $I_L405_1024, 2), jp, 0)
  405.                ip(1 + $I_L405_1024, 5) = (ibperij%base_addr)(1 + iloc(1 + $I_L405_1024, 2), jp, 0)
  405.                ip(1 + $I_L405_1024, 6) = (ibperij%base_addr)(2 + iloc(1 + $I_L405_1024, 2), jp, 0)
  405.                ip(1 + $I_L405_1024, 7) = (ibperij%base_addr)(-1 + iloc(1 + $I_L405_1024, 3), -1 + jp, 0)
  405.                ip(1 + $I_L405_1024, 8) = (ibperij%base_addr)(iloc(1 + $I_L405_1024, 3), -1 + jp, 0)
  405.                ip(1 + $I_L405_1024, 9) = (ibperij%base_addr)(1 + iloc(1 + $I_L405_1024, 3), -1 + jp, 0)
  405.                ip(1 + $I_L405_1024, 10) = (ibperij%base_addr)(2 + iloc(1 + $I_L405_1024, 3), -1 + jp, 0)
  405.                ip(1 + $I_L405_1024, 11) = (ibperij%base_addr)(iloc(1 + $I_L405_1024, 4), -2 + jp, 0)
  405.                ip(1 + $I_L405_1024, 12) = (ibperij%base_addr)(1 + iloc(1 + $I_L405_1024, 4), -2 + jp, 0)
  405.                jn(1 + $I_L405_1024, 1) = (jbperij%base_addr)(iloc(1 + $I_L405_1024, 1), 1 + jp, 0)
  405.                jn(1 + $I_L405_1024, 2) = (jbperij%base_addr)(1 + iloc(1 + $I_L405_1024, 1), 1 + jp, 0)
  405.                jn(1 + $I_L405_1024, 3) = (jbperij%base_addr)(-1 + iloc(1 + $I_L405_1024, 2), jp, 0)
  405.                jn(1 + $I_L405_1024, 4) = (jbperij%base_addr)(iloc(1 + $I_L405_1024, 2), jp, 0)
  405.                jn(1 + $I_L405_1024, 5) = (jbperij%base_addr)(1 + iloc(1 + $I_L405_1024, 2), jp, 0)
  405.                jn(1 + $I_L405_1024, 6) = (jbperij%base_addr)(2 + iloc(1 + $I_L405_1024, 2), jp, 0)
  405.                jn(1 + $I_L405_1024, 7) = (jbperij%base_addr)(-1 + iloc(1 + $I_L405_1024, 3), -1 + jp, 0)
  405.                jn(1 + $I_L405_1024, 8) = (jbperij%base_addr)(iloc(1 + $I_L405_1024, 3), -1 + jp, 0)
  405.                jn(1 + $I_L405_1024, 9) = (jbperij%base_addr)(1 + iloc(1 + $I_L405_1024, 3), -1 + jp, 0)
  405.                jn(1 + $I_L405_1024, 10) = (jbperij%base_addr)(2 + iloc(1 + $I_L405_1024, 3), -1 + jp, 0)
  405.                jn(1 + $I_L405_1024, 11) = (jbperij%base_addr)(iloc(1 + $I_L405_1024, 4), -2 + jp, 0)
  405.                jn(1 + $I_L405_1024, 12) = (jbperij%base_addr)(1 + iloc(1 + $I_L405_1024, 4), -2 + jp, 0)
  405.                $I_L405_1024 = 1 + $I_L405_1024
  405.                if ( $I_L405_1024 >= ibdim ) exit
  405.             enddo
  405.          endif
  405.          $Reduc_A85 = .false.
  405.          $F_A88 = ibdim
  405.          if ( ibdim > 0 ) then
  405.             $I_L405_1184 = 0
  405.             do
  405.                $I_L405_1102 = 0
  405. !dir$ ivdep
  405.                do
  405.                   if ( ip(1 + $I_L405_1102, 1 + $I_L405_1184) == 0 ) then
  405.                      $Reduc_A85 = .true.
  405.                      goto 30
  405.                   endif
  405.                   $I_L405_1102 = 1 + $I_L405_1102
  405.                   if ( $I_L405_1102 >= $F_A88 ) exit
  405.                enddo
  405.                $I_L405_1184 = 1 + $I_L405_1184
  405.                if ( $I_L405_1184 >= 12 ) exit
  405.             enddo
  405.          endif
  405.    30    continue
  405.          if ( $Reduc_A85 ) then
  405.             $Unit_temp_O0 = nfprt
  405.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$60,  _substr(t$59,1,23), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Interpcublin2d)**', 0x800600000000L ) ) )
  405.             $Unit_temp_O1 = nfprt
  405.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$62,  _substr(t$61,1,47), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Interpcublin2d)**', 0x800600000000L ) ) )
  405.              _substr(t$581,1,20) = '**(Interpcublin2d)**'
  405.             call _stop(  _substr(t$581,1,20) )
  405.          else
  405.             if ( ibdim > 0 ) then
  405.                $I_L405_1026 = 0
  405. !dir$ ivdep
  405.                do
  405.                   f1(1 + $I_L405_1026) = f(ip(1 + $I_L405_1026, 1), jn(1 + $I_L405_1026, 1)) + ulondp(1 + $I_L405_1026, 1) * ( f(ip(1 + $I_L405_1026, 2), jn(1 + $I_L405_1026, 2)) + -f(ip(1 + $I_L405_1026, 1), jn(1 + $I_L405_1026, 1)) )
  405.                   $s_S44 = -5.0e-1 + ulondp(1 + $I_L405_1026, 2)
  405.                   fa = 5.0e-1 * ( f(ip(1 + $I_L405_1026, 5), jn(1 + $I_L405_1026, 5)) + f(ip(1 + $I_L405_1026, 4), jn(1 + $I_L405_1026, 4)) ) + $s_S44 * ( f(ip(1 + $I_L405_1026, 5), jn(1 + $I_L405_1026, 5)) + -f(ip(1 + $I_L405_1026, 4), jn(1 + $I_L405_1026, 4)) )
  405.                   fb = 5.0e-1 * ( f(ip(1 + $I_L405_1026, 6), jn(1 + $I_L405_1026, 6)) + f(ip(1 + $I_L405_1026, 3), jn(1 + $I_L405_1026, 3)) ) + $s_S44 * ( f(ip(1 + $I_L405_1026, 6), jn(1 + $I_L405_1026, 6)) + -f(ip(1 + $I_L405_1026, 3), jn(1 + $I_L405_1026, 3)) ) * 3.3333333333333331e-1
  405.                   f2(1 + $I_L405_1026) = fa + ( 1.25e-1 + $s_S44 * $s_S44 * -5.0e-1 ) * ( fa + -fb )
  405.                   t = -5.0e-1 + ulondp(1 + $I_L405_1026, 3)
  405.                   fc = 5.0e-1 * ( f(ip(1 + $I_L405_1026, 9), jn(1 + $I_L405_1026, 9)) + f(ip(1 + $I_L405_1026, 8), jn(1 + $I_L405_1026, 8)) ) + t * ( f(ip(1 + $I_L405_1026, 9), jn(1 + $I_L405_1026, 9)) + -f(ip(1 + $I_L405_1026, 8), jn(1 + $I_L405_1026, 8)) )
  405.                   fd = 5.0e-1 * ( f(ip(1 + $I_L405_1026, 10), jn(1 + $I_L405_1026, 10)) + f(ip(1 + $I_L405_1026, 7), jn(1 + $I_L405_1026, 7)) ) + t * ( f(ip(1 + $I_L405_1026, 10), jn(1 + $I_L405_1026, 10)) + -f(ip(1 + $I_L405_1026, 7), jn(1 + $I_L405_1026, 7)) ) * 3.3333333333333331e-1
  405.                   f3(1 + $I_L405_1026) = fc + ( 1.25e-1 + t * t * -5.0e-1 ) * ( fc + -fd )
  405.                   f4(1 + $I_L405_1026) = f(ip(1 + $I_L405_1026, 11), jn(1 + $I_L405_1026, 11)) + ulondp(1 + $I_L405_1026, 4) * ( f(ip(1 + $I_L405_1026, 12), jn(1 + $I_L405_1026, 12)) + -f(ip(1 + $I_L405_1026, 11), jn(1 + $I_L405_1026, 11)) )
  405.                   $I_L405_1026 = 1 + $I_L405_1026
  405.                   if ( $I_L405_1026 >= ibdim ) exit
  405.                enddo
  405.                $I_L405_1028 = 0
  405. !dir$ ivdep
  405.                do
  405.                   j = jloc(1 + $I_L405_1028)
  405.                   s = ulatdp(1 + $I_L405_1028)
  405.                   t1 = 1.0 + -s
  405.                   t2 = (cubcoef%base_addr)(1 + $I_L405_1028, j, 2, 0) + s
  405.                   t3 = (cubcoef%base_addr)(1 + $I_L405_1028, j, 1, 0) + ( 1.0 + -s )
  405.                   t4 = s * t2
  405.                   fint(1 + $I_L405_1028) = t3 * ( t1 * ( (cubcoef%base_addr)(1 + $I_L405_1028, j, 3, 0) * s * f1(1 + $I_L405_1028) + (cubcoef%base_addr)(1 + $I_L405_1028, j, 4, 0) * t2 * f2(1 + $I_L405_1028) ) + (cubcoef%base_addr)(1 + $I_L405_1028, j, 5, 0) * t4 * f3(1 + $I_L405_1028) ) + (cubcoef%base_addr)(1 + $I_L405_1028, j, 6, 0) * t4 * t1 * f4(1 + $I_L405_1028)
  405.                   $I_L405_1028 = 1 + $I_L405_1028
  405.                   if ( $I_L405_1028 >= ibdim ) exit
  405.                enddo
  405.             endif
  405.             _free( t$308 )
  405.          endif
  405.          iloc(1) = _copyout( iloc )
  405.          ulondp(1) = _copyout( ulondp )
  405.          (fgvdlnpm%base_addr)(fgvdlnpm%dim_1%LB, fgvdlnpm%dim_2%LB, 0) = _copyout( f )
  409.          $F_A89 = ibdim
  409.          if ( ibdim > 0 ) then
  409.             $SC_fgvdlnp_I428 = fgvdlnp%dim_1%EX
  409.             $I_L409_1104 = 0
  409. !dir$ ivdep
  409.             do
  409.                (fgvdlnp%base_addr)(1 + $I_L409_1104, jb, 0) = fint(1 + $I_L409_1104) + delta * (fgvdlnp%base_addr)(1 + $I_L409_1104, jb, 0)
  409.                $I_L409_1104 = 1 + $I_L409_1104
  409.                if ( $I_L409_1104 >= $F_A89 ) exit
  409.             enddo
  409.          endif
  405.       enddo
  405.    40 continue
  414.       _mt_barrier( 12, _mt_rw_list(...) )
  415.       call vectorialtend( (fgqmm%base_addr)(fgqmm%dim_1%LB, fgqmm%dim_2%LB, fgqmm%dim_3%LB, 0), (fgtmm%base_addr)(fgtmm%dim_1%LB, fgtmm%dim_2%LB, fgtmm%dim_3%LB, 0) )
  419.       _mt_barrier( 13, _mt_rw_list(...) )
  420.       $snt_T8 = _mt_single( 14, _mt_rw_list(...) )
  421.       adr_scalars = 3 + -adr_scalars
  422.       jglob = 0
  423.       $snt_T8 = _mt_endsingle( 14, _mt_rw_list(...), $snt_T8 )
  424. !dir$ loop_info (automatic) cache_nt( ibmaxperjb )
  424.       do
  425.          $snt_T9 = _mt_critical( 15, _mt_rw_list(...) )
  426.          jglob = 1 + jglob
  427.          $j_S46 = jglob
  428.          $snt_T9 = _mt_endcritical( 15, _mt_rw_list(...), $snt_T9 )
  429.          if ( $j_S46 > jbmax ) goto 50
  431.          $F_A90 = fgyu%dim_2%EX
  431.          $F_A91 = fgyu%dim_1%EX
  431.          if ( and( -$F_A91, -$F_A90 ) < 0 ) then
  431.             $SC_fgqmm_I422 = fgqmm%dim_1%LB
  431.             $SC_fgqmm_I429 = fgqmm%dim_2%SM
  431.             $SC_fgqmm_I430 = fgqmm%dim_2%LB
  431.             $SC_fgqmm_I432 = fgqmm%dim_3%SM
  431.             $SC_fgqmm_I431 = fgqmm%dim_3%EX
  431.             $SC_fgqmm_I433 = fgqmm%dim_3%LB
  431.             $SC_fgyu_I337 = fgyu%dim_1%LB
  431.             $SC_fgyu_I338 = fgyu%dim_2%SM
  431.             $SC_fgyu_I339 = fgyu%dim_2%LB
  431.             $SC_fgyu_I341 = fgyu%dim_3%SM
  431.             $SC_fgyu_I340 = fgyu%dim_3%EX
  431.             $SC_fgyu_I342 = fgyu%dim_3%LB
  431.             $I_L431_1186 = 0
  431.             do
  431.                $I_L431_1106 = 0
  431. !dir$ ivdep
  431. !dir$ loop_info (automatic) cache_nt( fgqmm, fgyu )
  431.                do
  431.                   (fgyu%base_addr)($SC_fgyu_I337 + $I_L431_1106, $SC_fgyu_I339 + $I_L431_1186, $j_S46, 0) = (fgqmm%base_addr)($SC_fgqmm_I422 + $I_L431_1106, $SC_fgqmm_I430 + $I_L431_1186, $j_S46, 0) + delta * (fgyu%base_addr)($SC_fgyu_I337 + $I_L431_1106, $SC_fgyu_I339 + $I_L431_1186, $j_S46, 0)
  431.                   $I_L431_1106 = 1 + $I_L431_1106
  431.                   if ( $I_L431_1106 >= $F_A91 ) exit
  431.                enddo
  431.                $I_L431_1186 = 1 + $I_L431_1186
  431.                if ( $I_L431_1186 >= $F_A90 ) exit
  431.             enddo
  431.          endif
  432.          $F_A92 = fgyv%dim_2%EX
  432.          $F_A93 = fgyv%dim_1%EX
  432.          if ( and( -$F_A93, -$F_A92 ) < 0 ) then
  432.             $SC_fgtmm_I424 = fgtmm%dim_1%LB
  432.             $SC_fgtmm_I434 = fgtmm%dim_2%SM
  432.             $SC_fgtmm_I435 = fgtmm%dim_2%LB
  432.             $SC_fgtmm_I437 = fgtmm%dim_3%SM
  432.             $SC_fgtmm_I436 = fgtmm%dim_3%EX
  432.             $SC_fgtmm_I438 = fgtmm%dim_3%LB
  432.             $SC_fgyv_I355 = fgyv%dim_1%LB
  432.             $SC_fgyv_I356 = fgyv%dim_2%SM
  432.             $SC_fgyv_I357 = fgyv%dim_2%LB
  432.             $SC_fgyv_I359 = fgyv%dim_3%SM
  432.             $SC_fgyv_I358 = fgyv%dim_3%EX
  432.             $SC_fgyv_I360 = fgyv%dim_3%LB
  432.             $I_L432_1188 = 0
  432.             do
  432.                $I_L432_1108 = 0
  432. !dir$ ivdep
  432. !dir$ loop_info (automatic) cache_nt( fgtmm, fgyv )
  432.                do
  432.                   (fgyv%base_addr)($SC_fgyv_I355 + $I_L432_1108, $SC_fgyv_I357 + $I_L432_1188, $j_S46, 0) = (fgtmm%base_addr)($SC_fgtmm_I424 + $I_L432_1108, $SC_fgtmm_I435 + $I_L432_1188, $j_S46, 0) + delta * (fgyv%base_addr)($SC_fgyv_I355 + $I_L432_1108, $SC_fgyv_I357 + $I_L432_1188, $j_S46, 0)
  432.                   $I_L432_1108 = 1 + $I_L432_1108
  432.                   if ( $I_L432_1108 >= $F_A93 ) exit
  432.                enddo
  432.                $I_L432_1188 = 1 + $I_L432_1188
  432.                if ( $I_L432_1188 >= $F_A92 ) exit
  432.             enddo
  432.          endif
  436.          $t_S47 = (ibmaxperjb%base_addr)($j_S46, 0)
  436.          if ( $t_S47 > 0 ) then
  439.             $SC_fgv_I305 = fgv%dim_1%EX
  439.             $SC_fgv_I306 = fgv%dim_1%LB
  439.             $SC_fgv_I307 = fgv%dim_2%SM
  439.             $SC_fgv_I304 = fgv%dim_2%EX
  439.             $SC_fgv_I308 = fgv%dim_2%LB
  439.             $SC_fgv_I310 = fgv%dim_3%SM
  439.             $SC_fgv_I309 = fgv%dim_3%EX
  439.             $SC_fgv_I311 = fgv%dim_3%LB
  438.             $SC_fgu_I297 = fgu%dim_1%EX
  438.             $SC_fgu_I298 = fgu%dim_1%LB
  438.             $SC_fgu_I299 = fgu%dim_2%SM
  438.             $SC_fgu_I296 = fgu%dim_2%EX
  438.             $SC_fgu_I300 = fgu%dim_2%LB
  438.             $SC_fgu_I302 = fgu%dim_3%SM
  438.             $SC_fgu_I301 = fgu%dim_3%EX
  438.             $SC_fgu_I303 = fgu%dim_3%LB
  437.             $SC_coslat_I291 = coslat%dim_1%EX
  437.             $SC_coslat_I292 = coslat%dim_1%LB
  437.             $SC_coslat_I294 = coslat%dim_2%SM
  437.             $SC_coslat_I293 = coslat%dim_2%EX
  437.             $SC_coslat_I295 = coslat%dim_2%LB
  436.             $I_L436_1150 = 0
  436. !dir$ loop_info (automatic) cache_nt( coslat )
  436.             do
  437.                $aux_S49 = 6370000.0 * (coslat%base_addr)(1 + $I_L436_1150, $j_S46, 0)
  438.                $F_A94 = $SC_fgu_I296
  438.                if ( $SC_fgu_I296 > 0 ) then
  438.                   $I_L438_1110 = 0
  438. !dir$ ivdep
  438.                   do
  438.                      (fgu%base_addr)(1 + $I_L436_1150, $SC_fgu_I300 + $I_L438_1110, $j_S46, 0) = (fgu%base_addr)(1 + $I_L436_1150, $SC_fgu_I300 + $I_L438_1110, $j_S46, 0) * $aux_S49
  438.                      $I_L438_1110 = 1 + $I_L438_1110
  438.                      if ( $I_L438_1110 >= $F_A94 ) exit
  438.                   enddo
  438.                endif
  439.                $F_A95 = $SC_fgv_I304
  439.                if ( $SC_fgv_I304 > 0 ) then
  439.                   $I_L439_1112 = 0
  439. !dir$ ivdep
  439.                   do
  439.                      (fgv%base_addr)(1 + $I_L436_1150, $SC_fgv_I308 + $I_L439_1112, $j_S46, 0) = (fgv%base_addr)(1 + $I_L436_1150, $SC_fgv_I308 + $I_L439_1112, $j_S46, 0) * $aux_S49
  439.                      $I_L439_1112 = 1 + $I_L439_1112
  439.                      if ( $I_L439_1112 >= $F_A95 ) exit
  439.                   enddo
  439.                endif
  440.                $I_L436_1150 = 1 + $I_L436_1150
  436.                if ( $I_L436_1150 >= $t_S47 ) exit
  436.             enddo
  436.          endif
  440.       enddo
  440.    50 continue
  158.       _free( t$75 )
  443.       return
  443.       end
  443.       
  718.       
  718.       subroutine semilagr_2tl( nit, delt, fa )
  444.       t$12 = ( ibmax * kmax )
  471.       t$120 = _zla( 0, ( ibmax * kmax ) )
  471.       t$123 = 8 * _zla( 0, ( ibmax * kmax ) )
  444.       t$11 = ( ibmax * kmax * 4 )
  455.       t$124 = _zla( 0, ( ibmax * kmax * 4 ) )
  455.       t$126 = 8 * _zla( 0, ( ibmax * kmax ) ) + 4 * _zla( 0, ( ibmax * kmax * 4 ) )
  444.       t$13 = ( ibmax * kmax * 12 )
  465.       t$127 = _zla( 0, ( ibmax * kmax * 12 ) )
  465.       t$129 = 8 * _zla( 0, ( ibmax * kmax ) ) + 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 4 * _zla( 0, ( ibmax * kmax * 12 ) )
  456.       t$131 = 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 4 * _zla( 0, ( ibmax * kmax * 12 ) ) + 12 * _zla( 0, ( ibmax * kmax ) )
  466.       t$133 = 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 12 * _zla( 0, ( ibmax * kmax ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) )
  457.       t$135 = 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) )
  467.       t$136 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 )
  467.       t$138 = 8 * _zla( 0, ( ibmax * kmax ) ) + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 )
  467.       t$139 = 8 * _zla( 0, ( ibmax * kmax ) ) + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 )
  467.       t$141 = 16 * _zla( 0, ( ibmax * kmax ) ) + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 )
  467.       t$142 = 16 * _zla( 0, ( ibmax * kmax ) ) + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 )
  467.       t$144 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 24 * _zla( 0, ( ibmax * kmax ) )
  467.       t$145 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 24 * _zla( 0, ( ibmax * kmax ) )
  467.       t$147 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 32 * _zla( 0, ( ibmax * kmax ) )
  469.       t$148 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 32 * _zla( 0, ( ibmax * kmax ) )
  469.       t$150 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 40 * _zla( 0, ( ibmax * kmax ) )
  468.       t$151 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 40 * _zla( 0, ( ibmax * kmax ) )
  468.       t$153 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 40 * _zla( 0, ( ibmax * kmax ) ) + 8 * _zla( 0, ( ibmax * kmax * 4 ) )
  470.       t$154 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 40 * _zla( 0, ( ibmax * kmax ) ) + 8 * _zla( 0, ( ibmax * kmax * 4 ) )
  470.       t$156 = 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 8 * _zla( 0, ( ibmax * kmax * 4 ) ) + 48 * _zla( 0, ( ibmax * kmax ) )
  444.       t$121 = int( _alloc( 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 8 * _zla( 0, ( ibmax * kmax * 4 ) ) + 48 * _zla( 0, ( ibmax * kmax ) ) ), 8 )
  471.       t$122 = t$121
  455.       t$125 = t$121 + 8 * _zla( 0, ( ibmax * kmax ) )
  465.       t$128 = t$121 + 8 * _zla( 0, ( ibmax * kmax ) ) + 4 * _zla( 0, ( ibmax * kmax * 4 ) )
  456.       t$130 = t$121 + 8 * _zla( 0, ( ibmax * kmax ) ) + 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 4 * _zla( 0, ( ibmax * kmax * 12 ) )
  466.       t$132 = t$121 + 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 4 * _zla( 0, ( ibmax * kmax * 12 ) ) + 12 * _zla( 0, ( ibmax * kmax ) )
  457.       t$134 = t$121 + 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 12 * _zla( 0, ( ibmax * kmax ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) )
  467.       t$137 = t$121 + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 )
  467.       t$140 = t$121 + 8 * _zla( 0, ( ibmax * kmax ) ) + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 )
  467.       t$143 = t$121 + 16 * _zla( 0, ( ibmax * kmax ) ) + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 )
  467.       t$146 = t$121 + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 24 * _zla( 0, ( ibmax * kmax ) )
  469.       t$149 = t$121 + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 32 * _zla( 0, ( ibmax * kmax ) )
  468.       t$152 = t$121 + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 40 * _zla( 0, ( ibmax * kmax ) )
  470.       t$155 = t$121 + 8 * ( ( 4 * _zla( 0, ( ibmax * kmax * 4 ) ) + 8 * _zla( 0, ( ibmax * kmax * 12 ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) + 7 ) / 8 ) + 40 * _zla( 0, ( ibmax * kmax ) ) + 8 * _zla( 0, ( ibmax * kmax * 4 ) )
  477.       $snt_T0 = _mt_single( 1, _mt_rw_list(...) )
  478.       jglob = 0
  479.       $snt_T0 = _mt_endsingle( 1, _mt_rw_list(...), $snt_T0 )
  480. !dir$ loop_info (automatic) cache_nt( ibmaxperjb )
  480.       do
  481.          $snt_T1 = _mt_critical( 2, _mt_rw_list(...) )
  482.          jglob = 1 + jglob
  483.          j = jglob
  484.          $snt_T1 = _mt_endcritical( 2, _mt_rw_list(...), $snt_T1 )
  485.          if ( j > jbmax ) goto 10
  487.          $t_S0 = (ibmaxperjb%base_addr)(j, 0)
  487.          if ( $t_S0 > 0 ) then
  491.             $SC_fgwm_I427 = fgwm%dim_1%EX
  491.             $SC_fgwm_I428 = fgwm%dim_1%LB
  491.             $SC_fgwm_I429 = fgwm%dim_2%SM
  491.             $SC_fgwm_I426 = fgwm%dim_2%EX
  490.             $SC_fgv_I419 = fgv%dim_1%EX
  490.             $SC_fgv_I420 = fgv%dim_1%LB
  490.             $SC_fgv_I421 = fgv%dim_2%SM
  490.             $SC_fgv_I410 = fgv%dim_2%EX
  490.             $SC_fgv_I422 = fgv%dim_2%LB
  490.             $SC_fgv_I424 = fgv%dim_3%SM
  490.             $SC_fgv_I423 = fgv%dim_3%EX
  490.             $SC_fgv_I425 = fgv%dim_3%LB
  490.             $SC_fgvm_I411 = fgvm%dim_1%EX
  490.             $SC_fgvm_I412 = fgvm%dim_1%LB
  490.             $SC_fgvm_I414 = fgvm%dim_2%SM
  490.             $SC_fgvm_I413 = fgvm%dim_2%EX
  490.             $SC_fgvm_I415 = fgvm%dim_2%LB
  490.             $SC_fgvm_I417 = fgvm%dim_3%SM
  490.             $SC_fgvm_I416 = fgvm%dim_3%EX
  490.             $SC_fgvm_I418 = fgvm%dim_3%LB
  489.             $SC_fgu_I403 = fgu%dim_1%EX
  489.             $SC_fgu_I404 = fgu%dim_1%LB
  489.             $SC_fgu_I405 = fgu%dim_2%SM
  489.             $SC_fgu_I394 = fgu%dim_2%EX
  489.             $SC_fgu_I406 = fgu%dim_2%LB
  489.             $SC_fgu_I408 = fgu%dim_3%SM
  489.             $SC_fgu_I407 = fgu%dim_3%EX
  489.             $SC_fgu_I409 = fgu%dim_3%LB
  489.             $SC_fgum_I395 = fgum%dim_1%EX
  489.             $SC_fgum_I396 = fgum%dim_1%LB
  489.             $SC_fgum_I398 = fgum%dim_2%SM
  489.             $SC_fgum_I397 = fgum%dim_2%EX
  489.             $SC_fgum_I399 = fgum%dim_2%LB
  489.             $SC_fgum_I401 = fgum%dim_3%SM
  489.             $SC_fgum_I400 = fgum%dim_3%EX
  489.             $SC_fgum_I402 = fgum%dim_3%LB
  488.             $SC_coslat_I389 = coslat%dim_1%EX
  488.             $SC_coslat_I390 = coslat%dim_1%LB
  488.             $SC_coslat_I392 = coslat%dim_2%SM
  488.             $SC_coslat_I391 = coslat%dim_2%EX
  488.             $SC_coslat_I393 = coslat%dim_2%LB
  487.             $I_L487_1016 = 0
  487. !dir$ loop_info (automatic) cache_nt( coslat )
  487.             do
  488.                aux = 6370000.0 * (coslat%base_addr)(1 + $I_L487_1016, j, 0)
  489.                $F_A34 = $SC_fgu_I394
  489.                if ( $SC_fgu_I394 > 0 ) then
  489.                   $I_L489_914 = 0
  489. !dir$ ivdep
  489.                   do
  489.                      (fgum%base_addr)(1 + $I_L487_1016, $SC_fgum_I399 + $I_L489_914, j, 0) = ( ( 2.0 * (fgu%base_addr)(1 + $I_L487_1016, $SC_fgu_I406 + $I_L489_914, j, 0) + -(fgum%base_addr)(1 + $I_L487_1016, $SC_fgum_I399 + $I_L489_914, j, 0) ) * 1.0/aux )
  489.                      $I_L489_914 = 1 + $I_L489_914
  489.                      if ( $I_L489_914 >= $F_A34 ) exit
  489.                   enddo
  489.                endif
  490.                $F_A35 = $SC_fgv_I410
  490.                if ( $SC_fgv_I410 > 0 ) then
  490.                   $I_L490_916 = 0
  490. !dir$ ivdep
  490.                   do
  490.                      (fgvm%base_addr)(1 + $I_L487_1016, $SC_fgvm_I415 + $I_L490_916, j, 0) = ( ( 2.0 * (fgv%base_addr)(1 + $I_L487_1016, $SC_fgv_I422 + $I_L490_916, j, 0) + -(fgvm%base_addr)(1 + $I_L487_1016, $SC_fgvm_I415 + $I_L490_916, j, 0) ) * 1.0/aux )
  490.                      $I_L490_916 = 1 + $I_L490_916
  490.                      if ( $I_L490_916 >= $F_A35 ) exit
  490.                   enddo
  490.                endif
  491.                $F_A36 = $SC_fgwm_I426
  491.                if ( $SC_fgwm_I426 > 0 ) then
  491.                   $SC_fgw_I434 = fgw%dim_1%EX
  491.                   $SC_fgw_I435 = fgw%dim_1%LB
  491.                   $SC_fgw_I437 = fgw%dim_2%SM
  491.                   $SC_fgw_I436 = fgw%dim_2%EX
  491.                   $SC_fgw_I438 = fgw%dim_2%LB
  491.                   $SC_fgw_I440 = fgw%dim_3%SM
  491.                   $SC_fgw_I439 = fgw%dim_3%EX
  491.                   $SC_fgw_I441 = fgw%dim_3%LB
  491.                   $SC_fgwm_I430 = fgwm%dim_2%LB
  491.                   $SC_fgwm_I432 = fgwm%dim_3%SM
  491.                   $SC_fgwm_I431 = fgwm%dim_3%EX
  491.                   $SC_fgwm_I433 = fgwm%dim_3%LB
  491.                   $I_L491_918 = 0
  491. !dir$ ivdep
  491.                   do
  491.                      (fgwm%base_addr)(1 + $I_L487_1016, $SC_fgwm_I430 + $I_L491_918, j, 0) = ( 2.0 * (fgw%base_addr)(1 + $I_L487_1016, $SC_fgw_I438 + $I_L491_918, j, 0) + -(fgwm%base_addr)(1 + $I_L487_1016, $SC_fgwm_I430 + $I_L491_918, j, 0) )
  491.                      $I_L491_918 = 1 + $I_L491_918
  491.                      if ( $I_L491_918 >= $F_A36 ) exit
  491.                   enddo
  491.                endif
  492.                $I_L487_1016 = 1 + $I_L487_1016
  487.                if ( $I_L487_1016 >= $t_S0 ) exit
  487.             enddo
  487.          endif
  496.          $F_A37 = fgummean%dim_1%EX
  496.          if ( fgummean%dim_1%EX > 0 ) then
  496.             $SC_fgummean_I442 = fgummean%dim_1%LB
  496.             $SC_fgummean_I444 = fgummean%dim_2%SM
  496.             $SC_fgummean_I443 = fgummean%dim_2%EX
  496.             $SC_fgummean_I445 = fgummean%dim_2%LB
  496.             $I_L496_920 = 0
  496. !dir$ ivdep
  496.             do
  496.                (fgummean%base_addr)($SC_fgummean_I442 + $I_L496_920, j, 0) = 0.0
  496.                $I_L496_920 = 1 + $I_L496_920
  496.                if ( $I_L496_920 >= $F_A37 ) exit
  496.             enddo
  496.          endif
  497.          $F_A38 = fgvmmean%dim_1%EX
  497.          if ( fgvmmean%dim_1%EX > 0 ) then
  497.             $SC_fgvmmean_I446 = fgvmmean%dim_1%LB
  497.             $SC_fgvmmean_I448 = fgvmmean%dim_2%SM
  497.             $SC_fgvmmean_I447 = fgvmmean%dim_2%EX
  497.             $SC_fgvmmean_I449 = fgvmmean%dim_2%LB
  497.             $I_L497_922 = 0
  497. !dir$ ivdep
  497.             do
  497.                (fgvmmean%base_addr)($SC_fgvmmean_I446 + $I_L497_922, j, 0) = 0.0
  497.                $I_L497_922 = 1 + $I_L497_922
  497.                if ( $I_L497_922 >= $F_A38 ) exit
  497.             enddo
  497.          endif
  498.          if ( kmax > 0 ) then
  499.             $SC_del_I450 = del%dim_1%EX
  499.             $SC_del_I451 = del%dim_1%LB
  500.             $SC_fgvmmean_I454 = fgvmmean%dim_1%EX
  500.             $SC_fgvmmean_I446 = fgvmmean%dim_1%LB
  500.             $SC_fgvmmean_I448 = fgvmmean%dim_2%SM
  500.             $SC_fgvmmean_I447 = fgvmmean%dim_2%EX
  500.             $SC_fgvmmean_I449 = fgvmmean%dim_2%LB
  499.             $SC_fgummean_I453 = fgummean%dim_1%EX
  499.             $SC_fgummean_I442 = fgummean%dim_1%LB
  499.             $SC_fgummean_I444 = fgummean%dim_2%SM
  499.             $SC_fgummean_I443 = fgummean%dim_2%EX
  499.             $SC_fgummean_I445 = fgummean%dim_2%LB
  500.             $SC_fgvm_I411 = fgvm%dim_1%EX
  500.             $SC_fgvm_I412 = fgvm%dim_1%LB
  500.             $SC_fgvm_I414 = fgvm%dim_2%SM
  500.             $SC_fgvm_I413 = fgvm%dim_2%EX
  500.             $SC_fgvm_I415 = fgvm%dim_2%LB
  500.             $SC_fgvm_I417 = fgvm%dim_3%SM
  500.             $SC_fgvm_I416 = fgvm%dim_3%EX
  500.             $SC_fgvm_I418 = fgvm%dim_3%LB
  499.             $SC_fgum_I395 = fgum%dim_1%EX
  499.             $SC_fgum_I396 = fgum%dim_1%LB
  499.             $SC_fgum_I398 = fgum%dim_2%SM
  499.             $SC_fgum_I397 = fgum%dim_2%EX
  499.             $SC_fgum_I399 = fgum%dim_2%LB
  499.             $SC_fgum_I401 = fgum%dim_3%SM
  499.             $SC_fgum_I400 = fgum%dim_3%EX
  499.             $SC_fgum_I402 = fgum%dim_3%LB
  498.             $I_L498_1018 = 0
  498.             do
  499.                $F_A39 = $SC_fgum_I395
  499.                if ( $SC_fgum_I395 > 0 ) then
  499.                   $SC_del_I452 = (del%base_addr)(1 + $I_L498_1018, 0)
  499.                   $I_L499_924 = 0
  499. !dir$ ivdep
  499.                   do
  499.                      (fgummean%base_addr)($SC_fgummean_I442 + $I_L499_924, j, 0) = (fgummean%base_addr)($SC_fgummean_I442 + $I_L499_924, j, 0) + (fgum%base_addr)($SC_fgum_I396 + $I_L499_924, 1 + $I_L498_1018, j, 0) * $SC_del_I452
  499.                      $I_L499_924 = 1 + $I_L499_924
  499.                      if ( $I_L499_924 >= $F_A39 ) exit
  499.                   enddo
  499.                endif
  500.                $F_A40 = $SC_fgvm_I411
  500.                if ( $SC_fgvm_I411 > 0 ) then
  500.                   $SC_del_I452 = (del%base_addr)(1 + $I_L498_1018, 0)
  500.                   $I_L500_926 = 0
  500. !dir$ ivdep
  500.                   do
  500.                      (fgvmmean%base_addr)($SC_fgvmmean_I446 + $I_L500_926, j, 0) = (fgvmmean%base_addr)($SC_fgvmmean_I446 + $I_L500_926, j, 0) + (fgvm%base_addr)($SC_fgvm_I412 + $I_L500_926, 1 + $I_L498_1018, j, 0) * $SC_del_I452
  500.                      $I_L500_926 = 1 + $I_L500_926
  500.                      if ( $I_L500_926 >= $F_A40 ) exit
  500.                   enddo
  500.                endif
  501.                $I_L498_1018 = 1 + $I_L498_1018
  498.                if ( $I_L498_1018 >= kmax ) exit
  498.             enddo
  498.          endif
  501.       enddo
  501.    10 continue
  506.       if ( maxnodes > 1 ) then
  507.          _mt_barrier( 3, _mt_rw_list(...) )
  508.          $snt_T2 = _mt_single( 4, _mt_rw_list(...) )
  509.          call exchange_winds( (fgum%base_addr)(fgum%dim_1%LB, fgum%dim_2%LB, fgum%dim_3%LB, 0), (fgvm%base_addr)(fgvm%dim_1%LB, fgvm%dim_2%LB, fgvm%dim_3%LB, 0), (fgwm%base_addr)(fgwm%dim_1%LB, fgwm%dim_2%LB, fgwm%dim_3%LB, 0), (fgummean%base_addr)(fgummean%dim_1%LB, fgummean%dim_2%LB, 0), (fgvmmean%base_addr)(fgvmmean%dim_1%LB, fgvmmean%dim_2%LB, 0), nrecs_gr, nsends_gr )
  510.          $snt_T2 = _mt_endsingle( 4, _mt_rw_list(...), $snt_T2 )
  510.       endif
  515.       dt2 = 5.0e-1 * delt
  516.       _mt_barrier( 5, _mt_rw_list(...) )
  517.       $snt_T3 = _mt_single( 6, _mt_rw_list(...) )
  518.       jglob = 0
  519.       $snt_T3 = _mt_endsingle( 6, _mt_rw_list(...), $snt_T3 )
  520. !dir$ loop_info (automatic) cache_nt( ibmaxperjb )
  520.       do
  521.          $snt_T4 = _mt_critical( 7, _mt_rw_list(...) )
  522.          jglob = 1 + jglob
  523.          j = jglob
  524.          $snt_T4 = _mt_endcritical( 7, _mt_rw_list(...), $snt_T4 )
  525.          if ( j > jbmax ) goto 20
  527.          $F_A41 = fgumm%dim_2%EX
  527.          $F_A42 = fgumm%dim_1%EX
  527.          if ( and( -$F_A42, -$F_A41 ) < 0 ) then
  527.             $SC_fgyu_I455 = fgyu%dim_1%LB
  527.             $SC_fgyu_I456 = fgyu%dim_2%SM
  527.             $SC_fgyu_I457 = fgyu%dim_2%LB
  527.             $SC_fgyu_I459 = fgyu%dim_3%SM
  527.             $SC_fgyu_I458 = fgyu%dim_3%EX
  527.             $SC_fgyu_I460 = fgyu%dim_3%LB
  527.             $SC_fgyum_I461 = fgyum%dim_1%LB
  527.             $SC_fgyum_I462 = fgyum%dim_2%SM
  527.             $SC_fgyum_I463 = fgyum%dim_2%LB
  527.             $SC_fgyum_I465 = fgyum%dim_3%SM
  527.             $SC_fgyum_I464 = fgyum%dim_3%EX
  527.             $SC_fgyum_I466 = fgyum%dim_3%LB
  527.             $SC_fgumm_I467 = fgumm%dim_1%LB
  527.             $SC_fgumm_I468 = fgumm%dim_2%SM
  527.             $SC_fgumm_I469 = fgumm%dim_2%LB
  527.             $SC_fgumm_I471 = fgumm%dim_3%SM
  527.             $SC_fgumm_I470 = fgumm%dim_3%EX
  527.             $SC_fgumm_I472 = fgumm%dim_3%LB
  527.             $SC_fgu_I404 = fgu%dim_1%LB
  527.             $SC_fgu_I405 = fgu%dim_2%SM
  527.             $SC_fgu_I406 = fgu%dim_2%LB
  527.             $SC_fgu_I408 = fgu%dim_3%SM
  527.             $SC_fgu_I407 = fgu%dim_3%EX
  527.             $SC_fgu_I409 = fgu%dim_3%LB
  527.             $I_L527_1044 = 0
  527.             do
  527.                $I_L527_928 = 0
  527. !dir$ ivdep
  527. !dir$ loop_info (automatic) cache_nt( fgyum, fgyu, fgumm )
  527.                do
  527.                   (fgumm%base_addr)($SC_fgumm_I467 + $I_L527_928, $SC_fgumm_I469 + $I_L527_1044, j, 0) = (fgu%base_addr)($SC_fgu_I404 + $I_L527_928, $SC_fgu_I406 + $I_L527_1044, j, 0) + delt * ( (fgyum%base_addr)($SC_fgyum_I461 + $I_L527_928, $SC_fgyum_I463 + $I_L527_1044, j, 0) + (fgyu%base_addr)($SC_fgyu_I455 + $I_L527_928, $SC_fgyu_I457 + $I_L527_1044, j, 0) )
  527.                   $I_L527_928 = 1 + $I_L527_928
  527.                   if ( $I_L527_928 >= $F_A42 ) exit
  527.                enddo
  527.                $I_L527_1044 = 1 + $I_L527_1044
  527.                if ( $I_L527_1044 >= $F_A41 ) exit
  527.             enddo
  527.          endif
  528.          $F_A43 = fgyvm%dim_2%EX
  528.          $F_A44 = fgyvm%dim_1%EX
  528.          if ( and( -$F_A44, -$F_A43 ) < 0 ) then
  528.             $SC_fgyv_I473 = fgyv%dim_1%LB
  528.             $SC_fgyv_I474 = fgyv%dim_2%SM
  528.             $SC_fgyv_I475 = fgyv%dim_2%LB
  528.             $SC_fgyv_I477 = fgyv%dim_3%SM
  528.             $SC_fgyv_I476 = fgyv%dim_3%EX
  528.             $SC_fgyv_I478 = fgyv%dim_3%LB
  528.             $SC_fgyvm_I479 = fgyvm%dim_1%LB
  528.             $SC_fgyvm_I480 = fgyvm%dim_2%SM
  528.             $SC_fgyvm_I481 = fgyvm%dim_2%LB
  528.             $SC_fgyvm_I483 = fgyvm%dim_3%SM
  528.             $SC_fgyvm_I482 = fgyvm%dim_3%EX
  528.             $SC_fgyvm_I484 = fgyvm%dim_3%LB
  528.             $SC_fgvmm_I485 = fgvmm%dim_1%LB
  528.             $SC_fgvmm_I486 = fgvmm%dim_2%SM
  528.             $SC_fgvmm_I487 = fgvmm%dim_2%LB
  528.             $SC_fgvmm_I489 = fgvmm%dim_3%SM
  528.             $SC_fgvmm_I488 = fgvmm%dim_3%EX
  528.             $SC_fgvmm_I490 = fgvmm%dim_3%LB
  528.             $SC_fgv_I420 = fgv%dim_1%LB
  528.             $SC_fgv_I421 = fgv%dim_2%SM
  528.             $SC_fgv_I422 = fgv%dim_2%LB
  528.             $SC_fgv_I424 = fgv%dim_3%SM
  528.             $SC_fgv_I423 = fgv%dim_3%EX
  528.             $SC_fgv_I425 = fgv%dim_3%LB
  528.             $I_L528_1046 = 0
  528.             do
  528.                $I_L528_930 = 0
  528. !dir$ ivdep
  528. !dir$ loop_info (automatic) cache_nt( fgyvm, fgyv, fgvmm )
  528.                do
  528.                   (fgvmm%base_addr)($SC_fgvmm_I485 + $I_L528_930, $SC_fgvmm_I487 + $I_L528_1046, j, 0) = (fgv%base_addr)($SC_fgv_I420 + $I_L528_930, $SC_fgv_I422 + $I_L528_1046, j, 0) + delt * ( (fgyvm%base_addr)($SC_fgyvm_I479 + $I_L528_930, $SC_fgyvm_I481 + $I_L528_1046, j, 0) + (fgyv%base_addr)($SC_fgyv_I473 + $I_L528_930, $SC_fgyv_I475 + $I_L528_1046, j, 0) )
  528.                   $I_L528_930 = 1 + $I_L528_930
  528.                   if ( $I_L528_930 >= $F_A44 ) exit
  528.                enddo
  528.                $I_L528_1046 = 1 + $I_L528_1046
  528.                if ( $I_L528_1046 >= $F_A43 ) exit
  528.             enddo
  528.          endif
  529.          $F_A45 = fgtmpp%dim_2%EX
  529.          $F_A46 = fgtmpp%dim_1%EX
  529.          if ( and( -$F_A46, -$F_A45 ) < 0 ) then
  529.             $SC_fgtd_I491 = fgtd%dim_1%LB
  529.             $SC_fgtd_I492 = fgtd%dim_2%SM
  529.             $SC_fgtd_I493 = fgtd%dim_2%LB
  529.             $SC_fgtd_I495 = fgtd%dim_3%SM
  529.             $SC_fgtd_I494 = fgtd%dim_3%EX
  529.             $SC_fgtd_I496 = fgtd%dim_3%LB
  529.             $SC_fgtdm_I497 = fgtdm%dim_1%LB
  529.             $SC_fgtdm_I498 = fgtdm%dim_2%SM
  529.             $SC_fgtdm_I499 = fgtdm%dim_2%LB
  529.             $SC_fgtdm_I501 = fgtdm%dim_3%SM
  529.             $SC_fgtdm_I500 = fgtdm%dim_3%EX
  529.             $SC_fgtdm_I502 = fgtdm%dim_3%LB
  529.             $SC_fgtmp_I503 = fgtmp%dim_1%LB
  529.             $SC_fgtmp_I504 = fgtmp%dim_2%SM
  529.             $SC_fgtmp_I505 = fgtmp%dim_2%LB
  529.             $SC_fgtmp_I507 = fgtmp%dim_3%SM
  529.             $SC_fgtmp_I506 = fgtmp%dim_3%EX
  529.             $SC_fgtmp_I508 = fgtmp%dim_3%LB
  529.             $SC_fgtmpp_I509 = fgtmpp%dim_1%LB
  529.             $SC_fgtmpp_I510 = fgtmpp%dim_2%SM
  529.             $SC_fgtmpp_I511 = fgtmpp%dim_2%LB
  529.             $SC_fgtmpp_I513 = fgtmpp%dim_3%SM
  529.             $SC_fgtmpp_I512 = fgtmpp%dim_3%EX
  529.             $SC_fgtmpp_I514 = fgtmpp%dim_3%LB
  529.             $I_L529_1048 = 0
  529.             do
  529.                $I_L529_932 = 0
  529. !dir$ ivdep
  529. !dir$ loop_info (automatic) cache_nt( fgtmp, fgtdm, fgtd, fgtmpp )
  529.                do
  529.                   (fgtmpp%base_addr)($SC_fgtmpp_I509 + $I_L529_932, $SC_fgtmpp_I511 + $I_L529_1048, j, 0) = (fgtmp%base_addr)($SC_fgtmp_I503 + $I_L529_932, $SC_fgtmp_I505 + $I_L529_1048, j, 0) + delt * ( (fgtdm%base_addr)($SC_fgtdm_I497 + $I_L529_932, $SC_fgtdm_I499 + $I_L529_1048, j, 0) + (fgtd%base_addr)($SC_fgtd_I491 + $I_L529_932, $SC_fgtd_I493 + $I_L529_1048, j, 0) )
  529.                   $I_L529_932 = 1 + $I_L529_932
  529.                   if ( $I_L529_932 >= $F_A46 ) exit
  529.                enddo
  529.                $I_L529_1048 = 1 + $I_L529_1048
  529.                if ( $I_L529_1048 >= $F_A45 ) exit
  529.             enddo
  529.          endif
  530.          $F_A47 = fgqp%dim_2%EX
  530.          $F_A48 = fgqp%dim_1%EX
  530.          if ( and( -$F_A48, -$F_A47 ) < 0 ) then
  530.             $SC_fgqd_I515 = fgqd%dim_1%LB
  530.             $SC_fgqd_I516 = fgqd%dim_2%SM
  530.             $SC_fgqd_I517 = fgqd%dim_2%LB
  530.             $SC_fgqd_I519 = fgqd%dim_3%SM
  530.             $SC_fgqd_I518 = fgqd%dim_3%EX
  530.             $SC_fgqd_I520 = fgqd%dim_3%LB
  530.             $SC_fgqdm_I521 = fgqdm%dim_1%LB
  530.             $SC_fgqdm_I522 = fgqdm%dim_2%SM
  530.             $SC_fgqdm_I523 = fgqdm%dim_2%LB
  530.             $SC_fgqdm_I525 = fgqdm%dim_3%SM
  530.             $SC_fgqdm_I524 = fgqdm%dim_3%EX
  530.             $SC_fgqdm_I526 = fgqdm%dim_3%LB
  530.             $SC_fgq_I527 = fgq%dim_1%LB
  530.             $SC_fgq_I528 = fgq%dim_2%SM
  530.             $SC_fgq_I529 = fgq%dim_2%LB
  530.             $SC_fgq_I531 = fgq%dim_3%SM
  530.             $SC_fgq_I530 = fgq%dim_3%EX
  530.             $SC_fgq_I532 = fgq%dim_3%LB
  530.             $SC_fgqp_I533 = fgqp%dim_1%LB
  530.             $SC_fgqp_I534 = fgqp%dim_2%SM
  530.             $SC_fgqp_I535 = fgqp%dim_2%LB
  530.             $SC_fgqp_I537 = fgqp%dim_3%SM
  530.             $SC_fgqp_I536 = fgqp%dim_3%EX
  530.             $SC_fgqp_I538 = fgqp%dim_3%LB
  530.             $I_L530_1050 = 0
  530.             do
  530.                $I_L530_934 = 0
  530. !dir$ ivdep
  530. !dir$ loop_info (automatic) cache_nt( fgqdm, fgqd, fgq, fgqp )
  530.                do
  530.                   (fgqp%base_addr)($SC_fgqp_I533 + $I_L530_934, $SC_fgqp_I535 + $I_L530_1050, j, 0) = (fgq%base_addr)($SC_fgq_I527 + $I_L530_934, $SC_fgq_I529 + $I_L530_1050, j, 0) + delt * ( (fgqdm%base_addr)($SC_fgqdm_I521 + $I_L530_934, $SC_fgqdm_I523 + $I_L530_1050, j, 0) + (fgqd%base_addr)($SC_fgqd_I515 + $I_L530_934, $SC_fgqd_I517 + $I_L530_1050, j, 0) )
  530.                   $I_L530_934 = 1 + $I_L530_934
  530.                   if ( $I_L530_934 >= $F_A48 ) exit
  530.                enddo
  530.                $I_L530_1050 = 1 + $I_L530_1050
  530.                if ( $I_L530_1050 >= $F_A47 ) exit
  530.             enddo
  530.          endif
  531.          $F_A49 = fgvdlnp%dim_1%EX
  531.          if ( fgvdlnp%dim_1%EX > 0 ) then
  531.             $SC_fgvdlnp_I549 = fgvdlnp%dim_1%LB
  531.             $SC_fgvdlnp_I551 = fgvdlnp%dim_2%SM
  531.             $SC_fgvdlnp_I550 = fgvdlnp%dim_2%EX
  531.             $SC_fgvdlnp_I552 = fgvdlnp%dim_2%LB
  531.             $SC_fgvdlnpm_I553 = fgvdlnpm%dim_1%EX
  531.             $SC_fgvdlnpm_I554 = fgvdlnpm%dim_1%LB
  531.             $SC_fgvdlnpm_I556 = fgvdlnpm%dim_2%SM
  531.             $SC_fgvdlnpm_I555 = fgvdlnpm%dim_2%EX
  531.             $SC_fgvdlnpm_I557 = fgvdlnpm%dim_2%LB
  531.             $SC_fgzs_I539 = fgzs%dim_1%EX
  531.             $SC_fgzs_I540 = fgzs%dim_1%LB
  531.             $SC_fgzs_I542 = fgzs%dim_2%SM
  531.             $SC_fgzs_I541 = fgzs%dim_2%EX
  531.             $SC_fgzs_I543 = fgzs%dim_2%LB
  531.             $SC_fglnps_I544 = fglnps%dim_1%EX
  531.             $SC_fglnps_I545 = fglnps%dim_1%LB
  531.             $SC_fglnps_I547 = fglnps%dim_2%SM
  531.             $SC_fglnps_I546 = fglnps%dim_2%EX
  531.             $SC_fglnps_I548 = fglnps%dim_2%LB
  531.             $SC_fgpsp_I558 = fgpsp%dim_1%EX
  531.             $SC_fgpsp_I559 = fgpsp%dim_1%LB
  531.             $SC_fgpsp_I561 = fgpsp%dim_2%SM
  531.             $SC_fgpsp_I560 = fgpsp%dim_2%EX
  531.             $SC_fgpsp_I562 = fgpsp%dim_2%LB
  531.             $I_L531_936 = 0
  531. !dir$ ivdep
  531. !dir$ loop_info (automatic) cache_nt( fgzs, fgvdlnpm, fgvdlnp, fglnps, fgpsp )
  531.             do
  531.                (fgpsp%base_addr)($SC_fgpsp_I559 + $I_L531_936, j, 0) = (fglnps%base_addr)($SC_fglnps_I545 + $I_L531_936, j, 0) + 1.161237879579632e-5 * (fgzs%base_addr)($SC_fgzs_I540 + $I_L531_936, j, 0) + delt * ( (fgvdlnpm%base_addr)($SC_fgvdlnpm_I554 + $I_L531_936, j, 0) + (fgvdlnp%base_addr)($SC_fgvdlnp_I549 + $I_L531_936, j, 0) )
  531.                $I_L531_936 = 1 + $I_L531_936
  531.                if ( $I_L531_936 >= $F_A49 ) exit
  531.             enddo
  531.          endif
  533.          $t_S3 = (ibmaxperjb%base_addr)(j, 0)
  533.          if ( $t_S3 > 0 ) then
  536.             $SC_fgv_I419 = fgv%dim_1%EX
  536.             $SC_fgv_I420 = fgv%dim_1%LB
  536.             $SC_fgv_I421 = fgv%dim_2%SM
  536.             $SC_fgv_I410 = fgv%dim_2%EX
  536.             $SC_fgv_I422 = fgv%dim_2%LB
  536.             $SC_fgv_I424 = fgv%dim_3%SM
  536.             $SC_fgv_I423 = fgv%dim_3%EX
  536.             $SC_fgv_I425 = fgv%dim_3%LB
  535.             $SC_fgu_I403 = fgu%dim_1%EX
  535.             $SC_fgu_I404 = fgu%dim_1%LB
  535.             $SC_fgu_I405 = fgu%dim_2%SM
  535.             $SC_fgu_I394 = fgu%dim_2%EX
  535.             $SC_fgu_I406 = fgu%dim_2%LB
  535.             $SC_fgu_I408 = fgu%dim_3%SM
  535.             $SC_fgu_I407 = fgu%dim_3%EX
  535.             $SC_fgu_I409 = fgu%dim_3%LB
  534.             $SC_coslat_I389 = coslat%dim_1%EX
  534.             $SC_coslat_I390 = coslat%dim_1%LB
  534.             $SC_coslat_I392 = coslat%dim_2%SM
  534.             $SC_coslat_I391 = coslat%dim_2%EX
  534.             $SC_coslat_I393 = coslat%dim_2%LB
  533.             $I_L533_1020 = 0
  533. !dir$ loop_info (automatic) cache_nt( coslat )
  533.             do
  534.                aux = 6370000.0 * (coslat%base_addr)(1 + $I_L533_1020, j, 0)
  535.                $F_A50 = $SC_fgu_I394
  535.                if ( $SC_fgu_I394 > 0 ) then
  535.                   $I_L535_938 = 0
  535. !dir$ ivdep
  535.                   do
  535.                      (fgu%base_addr)(1 + $I_L533_1020, $SC_fgu_I406 + $I_L535_938, j, 0) = ( (fgu%base_addr)(1 + $I_L533_1020, $SC_fgu_I406 + $I_L535_938, j, 0) * 1.0/aux )
  535.                      $I_L535_938 = 1 + $I_L535_938
  535.                      if ( $I_L535_938 >= $F_A50 ) exit
  535.                   enddo
  535.                endif
  536.                $F_A51 = $SC_fgv_I410
  536.                if ( $SC_fgv_I410 > 0 ) then
  536.                   $I_L536_940 = 0
  536. !dir$ ivdep
  536.                   do
  536.                      (fgv%base_addr)(1 + $I_L533_1020, $SC_fgv_I422 + $I_L536_940, j, 0) = ( (fgv%base_addr)(1 + $I_L533_1020, $SC_fgv_I422 + $I_L536_940, j, 0) * 1.0/aux )
  536.                      $I_L536_940 = 1 + $I_L536_940
  536.                      if ( $I_L536_940 >= $F_A51 ) exit
  536.                   enddo
  536.                endif
  537.                $I_L533_1020 = 1 + $I_L533_1020
  533.                if ( $I_L533_1020 >= $t_S3 ) exit
  533.             enddo
  533.          endif
  538.          $F_A52 = fgumean%dim_1%EX
  538.          if ( fgumean%dim_1%EX > 0 ) then
  538.             $SC_fgumean_I563 = fgumean%dim_1%LB
  538.             $SC_fgumean_I565 = fgumean%dim_2%SM
  538.             $SC_fgumean_I564 = fgumean%dim_2%EX
  538.             $SC_fgumean_I566 = fgumean%dim_2%LB
  538.             $I_L538_942 = 0
  538. !dir$ ivdep
  538.             do
  538.                (fgumean%base_addr)($SC_fgumean_I563 + $I_L538_942, j, 0) = 0.0
  538.                $I_L538_942 = 1 + $I_L538_942
  538.                if ( $I_L538_942 >= $F_A52 ) exit
  538.             enddo
  538.          endif
  539.          $F_A53 = fgvmean%dim_1%EX
  539.          if ( fgvmean%dim_1%EX > 0 ) then
  539.             $SC_fgvmean_I567 = fgvmean%dim_1%LB
  539.             $SC_fgvmean_I569 = fgvmean%dim_2%SM
  539.             $SC_fgvmean_I568 = fgvmean%dim_2%EX
  539.             $SC_fgvmean_I570 = fgvmean%dim_2%LB
  539.             $I_L539_944 = 0
  539. !dir$ ivdep
  539.             do
  539.                (fgvmean%base_addr)($SC_fgvmean_I567 + $I_L539_944, j, 0) = 0.0
  539.                $I_L539_944 = 1 + $I_L539_944
  539.                if ( $I_L539_944 >= $F_A53 ) exit
  539.             enddo
  539.          endif
  540.          if ( kmax > 0 ) then
  542.             $SC_fgvmean_I573 = fgvmean%dim_1%EX
  542.             $SC_fgvmean_I567 = fgvmean%dim_1%LB
  542.             $SC_fgvmean_I569 = fgvmean%dim_2%SM
  542.             $SC_fgvmean_I568 = fgvmean%dim_2%EX
  542.             $SC_fgvmean_I570 = fgvmean%dim_2%LB
  541.             $SC_fgumean_I572 = fgumean%dim_1%EX
  541.             $SC_fgumean_I563 = fgumean%dim_1%LB
  541.             $SC_fgumean_I565 = fgumean%dim_2%SM
  541.             $SC_fgumean_I564 = fgumean%dim_2%EX
  541.             $SC_fgumean_I566 = fgumean%dim_2%LB
  541.             $SC_del_I450 = del%dim_1%EX
  541.             $SC_del_I451 = del%dim_1%LB
  542.             $SC_fgv_I419 = fgv%dim_1%EX
  542.             $SC_fgv_I420 = fgv%dim_1%LB
  542.             $SC_fgv_I421 = fgv%dim_2%SM
  542.             $SC_fgv_I410 = fgv%dim_2%EX
  542.             $SC_fgv_I422 = fgv%dim_2%LB
  542.             $SC_fgv_I424 = fgv%dim_3%SM
  542.             $SC_fgv_I423 = fgv%dim_3%EX
  542.             $SC_fgv_I425 = fgv%dim_3%LB
  541.             $SC_fgu_I403 = fgu%dim_1%EX
  541.             $SC_fgu_I404 = fgu%dim_1%LB
  541.             $SC_fgu_I405 = fgu%dim_2%SM
  541.             $SC_fgu_I394 = fgu%dim_2%EX
  541.             $SC_fgu_I406 = fgu%dim_2%LB
  541.             $SC_fgu_I408 = fgu%dim_3%SM
  541.             $SC_fgu_I407 = fgu%dim_3%EX
  541.             $SC_fgu_I409 = fgu%dim_3%LB
  540.             $I_L540_1022 = 0
  540.             do
  541.                $F_A54 = $SC_fgu_I403
  541.                if ( $SC_fgu_I403 > 0 ) then
  541.                   $SC_del_I571 = (del%base_addr)(1 + $I_L540_1022, 0)
  541.                   $I_L541_946 = 0
  541. !dir$ ivdep
  541.                   do
  541.                      (fgumean%base_addr)($SC_fgumean_I563 + $I_L541_946, j, 0) = (fgumean%base_addr)($SC_fgumean_I563 + $I_L541_946, j, 0) + (fgu%base_addr)($SC_fgu_I404 + $I_L541_946, 1 + $I_L540_1022, j, 0) * $SC_del_I571
  541.                      $I_L541_946 = 1 + $I_L541_946
  541.                      if ( $I_L541_946 >= $F_A54 ) exit
  541.                   enddo
  541.                endif
  542.                $F_A55 = $SC_fgvmean_I573
  542.                if ( $SC_fgvmean_I573 > 0 ) then
  542.                   $SC_del_I571 = (del%base_addr)(1 + $I_L540_1022, 0)
  542.                   $I_L542_948 = 0
  542. !dir$ ivdep
  542.                   do
  542.                      (fgvmean%base_addr)($SC_fgvmean_I567 + $I_L542_948, j, 0) = (fgvmean%base_addr)($SC_fgvmean_I567 + $I_L542_948, j, 0) + (fgv%base_addr)($SC_fgv_I420 + $I_L542_948, 1 + $I_L540_1022, j, 0) * $SC_del_I571
  542.                      $I_L542_948 = 1 + $I_L542_948
  542.                      if ( $I_L542_948 >= $F_A55 ) exit
  542.                   enddo
  542.                endif
  543.                $I_L540_1022 = 1 + $I_L540_1022
  540.                if ( $I_L540_1022 >= kmax ) exit
  540.             enddo
  540.          endif
  543.       enddo
  543.    20 continue
  548.       _mt_barrier( 8, _mt_rw_list(...) )
  549.       if ( maxnodes > 1 ) then
  550.          $snt_T5 = _mt_single( 9, _mt_rw_list(...) )
  551.          call exchange_fields( (fgumm%base_addr)(fgumm%dim_1%LB, fgumm%dim_2%LB, fgumm%dim_3%LB, 0), (fgvmm%base_addr)(fgvmm%dim_1%LB, fgvmm%dim_2%LB, fgvmm%dim_3%LB, 0), (fgtmpp%base_addr)(fgtmpp%dim_1%LB, fgtmpp%dim_2%LB, fgtmpp%dim_3%LB, 0), (fgqp%base_addr)(fgqp%dim_1%LB, fgqp%dim_2%LB, fgqp%dim_3%LB, 0), (fgpsp%base_addr)(fgpsp%dim_1%LB, fgpsp%dim_2%LB, 0), (fgpass_scalars%base_addr)(fgpass_scalars%dim_1%LB, fgpass_scalars%dim_2%LB, fgpass_scalars%dim_3%LB, fgpass_scalars%dim_4%LB, fgpass_scalars%dim_5%LB, 0), adr_scalars, nscalars, nrecs_gr, nsends_gr )
  553.          $snt_T5 = _mt_endsingle( 9, _mt_rw_list(...), $snt_T5 )
  553.       endif
  558.       $snt_T6 = _mt_single( 10, _mt_rw_list(...) )
  559.       jglob = 0
  560.       $snt_T6 = _mt_endsingle( 10, _mt_rw_list(...), $snt_T6 )
  561.       do
  562.          $snt_T7 = _mt_critical( 11, _mt_rw_list(...) )
  563.          jglob = 1 + jglob
  564.          jb = jglob
  565.          $snt_T7 = _mt_endcritical( 11, _mt_rw_list(...), $snt_T7 )
  566.          if ( jb > jbmax ) goto 40
  568.          ibdim = (ibmaxperjb%base_addr)(jb, 0)
  572.          call trajectory_2l( (ulonm%base_addr)(1, jb, 0), (ulatm%base_addr)(1, jb, 0), (usig%base_addr)(1, jb, 0), (ulon%base_addr)(1, jb, 0), (ulat%base_addr)(1, jb, 0), ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, jb, nit, delt, ip(1), jn(1) )
  581.          klats = 1
  582.          if ( reducedgrid ) then
  582.             klats = 4
  582.          endif
  583.          ipa$1054 = loc( (ulon%base_addr)(1, jb, 0) )
  583.          ulon = _copyin( (ulon%base_addr)(1, jb, 0) )
  583.          ipa$1056 = loc( (ulat%base_addr)(1, jb, 0) )
  583.          ulat = _copyin( (ulat%base_addr)(1, jb, 0) )
  583.          ipa$1058 = loc( (usig%base_addr)(1, jb, 0) )
  583.          usig = _copyin( (usig%base_addr)(1, jb, 0) )
  583.          ipa$1060 = loc( ulondp(1) )
  583.          ulondp = _copyin( ulondp(1) )
  583.          ipa$1062 = loc( ulatdp(1) )
  583.          ulatdp = _copyin( ulatdp(1) )
  583.          ipa$1064 = loc( usigdp(1) )
  583.          usigdp = _copyin( usigdp(1) )
  583.          ipa$1066 = loc( iloc(1) )
  583.          iloc = _copyin( iloc(1) )
  583.          ipa$1068 = loc( jloc(1) )
  583.          jloc = _copyin( jloc(1) )
  583.          ipa$1070 = loc( kloc(1) )
  583.          kloc = _copyin( kloc(1) )
  583.          t$38 = ibdim
  583.          t$39 = kmax
  583.          t$255 = max( 0, ibdim )
  583.          t$256 = ibdim
  583.          t$257 = max( 0, kmax )
  583.          t$258 = ibdim * max( 0, kmax )
  583.          t$259 = ibdim * max( 0, kmax )
  583.          t$260 = ibdim * max( 0, kmax ) * 4
  583.          if ( kmax > 0 ) then
  583.             if ( ibdim > 0 ) then
  583.                $SC_sigma_I574 = sigma%dim_1%EX
  583.                $I_L583_1024 = 0
  583. !dir$ blocking_size( 0, 0 )
  583.                do
  583.                   $SC_sigma_I575 = sigma%dim_1%LB
  583.                   $I_L583_878 = 0
  583. !dir$ ivdep
  583. !dir$ blocking_size( 0, 0 )
  583.                   do
  583.                      ik = int( ( ( usig(1 + $I_L583_878, 1 + $I_L583_1024) + -(sigma%base_addr)(1 + $I_L583_878, 1, 0) ) * 1.0/delsigref ) )
  583.                      $kloc_WR0_R0 = (ksigref%base_addr)(1 + $I_L583_878, ik, 0)
  583.                      kloc(1 + $I_L583_878, 1 + $I_L583_1024) = $kloc_WR0_R0
  583.                      if ( usig(1 + $I_L583_878, 1 + $I_L583_1024) > (sigma%base_addr)(1 + $I_L583_878, 1 + $kloc_WR0_R0, 0) ) then
  583.                         $kloc_WR0_R0 = 1 + $kloc_WR0_R0
  583.                         kloc(1 + $I_L583_878, 1 + $I_L583_1024) = $kloc_WR0_R0
  583.                      endif
  583.                      usigdp(1 + $I_L583_878, 1 + $I_L583_1024) = ( ( usig(1 + $I_L583_878, 1 + $I_L583_1024) + -(sigma%base_addr)(1 + $I_L583_878, $kloc_WR0_R0, 0) ) * 1.0/(delsigma%base_addr)(1 + $I_L583_878, $kloc_WR0_R0, 0) )
  583.                      $I_L583_878 = 1 + $I_L583_878
  583.                      if ( $I_L583_878 >= ibdim ) exit
  583.                   enddo
  583.                   $I_L583_1024 = 1 + $I_L583_1024
  583.                   if ( $I_L583_1024 >= kmax ) exit
  583.                enddo
  583.                $SC_jphiref_I576 = jphiref%dim_1%EX
  583.                $I_L583_1026 = 0
  583.                do
  583.                   $SC_jphiref_I577 = jphiref%dim_1%LB
  583.                   $I_L583_880 = 0
  583. !dir$ ivdep
  583.                   do
  583.                      ik = int( ( ( 1.570796326794895 + ulat(1 + $I_L583_880, 1 + $I_L583_1026) ) * 1.0/delphiref ) )
  583.                      $jloc_WR0_R1 = (jphiref%base_addr)(1 + $I_L583_880, ik, 0)
  583.                      jloc(1 + $I_L583_880, 1 + $I_L583_1026) = $jloc_WR0_R1
  583.                      if ( ulat(1 + $I_L583_880, 1 + $I_L583_1026) > (phi%base_addr)(1 + $I_L583_880, 1 + $jloc_WR0_R1, 0) ) then
  583.                         $jloc_WR0_R1 = 1 + $jloc_WR0_R1
  583.                         jloc(1 + $I_L583_880, 1 + $I_L583_1026) = $jloc_WR0_R1
  583.                      endif
  583.                      ulatdp(1 + $I_L583_880, 1 + $I_L583_1026) = ( ( ulat(1 + $I_L583_880, 1 + $I_L583_1026) + -(phi%base_addr)(1 + $I_L583_880, $jloc_WR0_R1, 0) ) * 1.0/(delphi%base_addr)(1 + $I_L583_880, $jloc_WR0_R1, 0) )
  583.                      $I_L583_880 = 1 + $I_L583_880
  583.                      if ( $I_L583_880 >= ibdim ) exit
  583.                   enddo
  583.                   $I_L583_1026 = 1 + $I_L583_1026
  583.                   if ( $I_L583_1026 >= kmax ) exit
  583.                enddo
  583.             endif
  583.          endif
  583.          if ( klats == 4 ) then
  583.             kp(1) = -1
  583.             kp(2) = 0
  583.             kp(3) = 1
  583.             kp(4) = 2
  583.          else
  583.             kp(1) = 0
  583.             kp(2) = 1
  583.          endif
  583.          if ( klats > 0 ) then
  583.             if ( kmax > 0 ) then
  583.                if ( ibdim > 0 ) then
  583.                   $SC_dellon_I578 = dellon%dim_1%EX
  583.                   $I_L583_1097 = 0
  583.                   do
  583.                      $I_L583_1095 = 0
  583.                      do
  583.                         $I_L583_870 = 0
  583.                         if ( klats >= 4 ) then
  583.                            $I_L583_1093 = 0
  583. !dir$ blocking_size( 4, 4 )
  583.                            do
  583.                               $ks#1_U0 = kp(1 + 4 * $I_L583_1093)
  583.                               $ks#2_U1 = kp(2 + 4 * $I_L583_1093)
  583.                               $ks#3_U2 = kp(3 + 4 * $I_L583_1093)
  583.                               $ks#4_U3 = kp(4 + 4 * $I_L583_1093)
  583.                               $I_L583_1082 = 0
  583. !dir$ shortloop16
  583. !dir$ blocking_size( 8, 8 )
  583.                               do
  583.                                  $I_L583_1010 = 0
  583. !dir$ ivdep
  583. !dir$ blocking_size( 256, 256 )
  583.                                  do
  583.                                     j = jmax + -jloc($I_L583_1010 + 256 * $I_L583_1095 + 1, $I_L583_1082 + 8 * $I_L583_1097 + 1) + 1
  583.                                     $ulondp_WR0_R2 = 1.0 + ( ulon($I_L583_1010 + 256 * $I_L583_1095 + 1, $I_L583_1082 + 8 * $I_L583_1097 + 1) * 1.0/(dellon%base_addr)($I_L583_1010 + 256 * $I_L583_1095 + 1, j + -$ks#1_U0, 0) )
  583.                                     iloc($I_L583_1010 + 256 * $I_L583_1095 + 1, $I_L583_1082 + 8 * $I_L583_1097 + 1, 1 + 4 * $I_L583_1093) = int( $ulondp_WR0_R2 )
  583.                                     $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  583.                                     ulondp($I_L583_1010 + 256 * $I_L583_1095 + 1, $I_L583_1082 + 8 * $I_L583_1097 + 1, 1 + 4 * $I_L583_1093) = $ulondp_WR0_R2
  583.                                     j = jmax + -jloc($I_L583_1010 + 256 * $I_L583_1095 + 1, $I_L583_1082 + 8 * $I_L583_1097 + 1) + 1
  583.                                     $ulondp_WR0_R2 = 1.0 + ( ulon($I_L583_1010 + 256 * $I_L583_1095 + 1, $I_L583_1082 + 8 * $I_L583_1097 + 1) * 1.0/(dellon%base_addr)($I_L583_1010 + 256 * $I_L583_1095 + 1, j + -$ks#2_U1, 0) )
  583.                                     iloc($I_L583_1010 + 256 * $I_L583_1095 + 1, $I_L583_1082 + 8 * $I_L583_1097 + 1, 2 + 4 * $I_L583_1093) = int( $ulondp_WR0_R2 )
  583.                                     $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  583.                                     ulondp($I_L583_1010 + 256 * $I_L583_1095 + 1, $I_L583_1082 + 8 * $I_L583_1097 + 1, 2 + 4 * $I_L583_1093) = $ulondp_WR0_R2
  583.                                     j = jmax + -jloc($I_L583_1010 + 256 * $I_L583_1095 + 1, $I_L583_1082 + 8 * $I_L583_1097 + 1) + 1
  583.                                     $ulondp_WR0_R2 = 1.0 + ( ulon($I_L583_1010 + 256 * $I_L583_1095 + 1, $I_L583_1082 + 8 * $I_L583_1097 + 1) * 1.0/(dellon%base_addr)($I_L583_1010 + 256 * $I_L583_1095 + 1, j + -$ks#3_U2, 0) )
  583.                                     iloc($I_L583_1010 + 256 * $I_L583_1095 + 1, $I_L583_1082 + 8 * $I_L583_1097 + 1, 3 + 4 * $I_L583_1093) = int( $ulondp_WR0_R2 )
  583.                                     $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  583.                                     ulondp($I_L583_1010 + 256 * $I_L583_1095 + 1, $I_L583_1082 + 8 * $I_L583_1097 + 1, 3 + 4 * $I_L583_1093) = $ulondp_WR0_R2
  583.                                     j = jmax + -jloc($I_L583_1010 + 256 * $I_L583_1095 + 1, $I_L583_1082 + 8 * $I_L583_1097 + 1) + 1
  583.                                     $ulondp_WR0_R2 = 1.0 + ( ulon($I_L583_1010 + 256 * $I_L583_1095 + 1, $I_L583_1082 + 8 * $I_L583_1097 + 1) * 1.0/(dellon%base_addr)($I_L583_1010 + 256 * $I_L583_1095 + 1, j + -$ks#4_U3, 0) )
  583.                                     iloc($I_L583_1010 + 256 * $I_L583_1095 + 1, $I_L583_1082 + 8 * $I_L583_1097 + 1, 4 + 4 * $I_L583_1093) = int( $ulondp_WR0_R2 )
  583.                                     $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  583.                                     ulondp($I_L583_1010 + 256 * $I_L583_1095 + 1, $I_L583_1082 + 8 * $I_L583_1097 + 1, 4 + 4 * $I_L583_1093) = $ulondp_WR0_R2
  583.                                     $I_L583_1010 = 1 + $I_L583_1010
  583.                                     if ( $I_L583_1010 >= min( ibdim, 256 + 256 * $I_L583_1095 ) + -256 * $I_L583_1095 ) exit
  583.                                  enddo
  583.                                  $I_L583_1082 = 1 + $I_L583_1082
  583.                                  if ( $I_L583_1082 >= min( kmax, 8 + 8 * $I_L583_1097 ) + -8 * $I_L583_1097 ) exit
  583.                               enddo
  583.                               $I_L583_1093 = 1 + $I_L583_1093
  583.                               if ( $I_L583_1093 >= _rsh( klats, 2 ) ) exit
  583.                            enddo
  583.                            $I_L583_870 = and( 0xfffffffffffffffcUL, klats )
  583.                         endif
  583.                         if ( $I_L583_870 < klats ) then
  583.                            $I_L583_1088 = 0
  583. !dir$ blocking_size( 4, 4 )
  583.                            do
  583.                               ks = kp($I_L583_870 + $I_L583_1088 + 1)
  583.                               $I_L583_1080 = 0
  583. !dir$ shortloop16
  583. !dir$ blocking_size( 8, 8 )
  583.                               do
  583.                                  $I_L583_882 = 0
  583. !dir$ ivdep
  583. !dir$ blocking_size( 256, 256 )
  583.                                  do
  583.                                     j = jmax + -jloc($I_L583_882 + 256 * $I_L583_1095 + 1, $I_L583_1080 + 8 * $I_L583_1097 + 1) + 1
  583.                                     $ulondp_WR0_R2 = 1.0 + ( ulon($I_L583_882 + 256 * $I_L583_1095 + 1, $I_L583_1080 + 8 * $I_L583_1097 + 1) * 1.0/(dellon%base_addr)($I_L583_882 + 256 * $I_L583_1095 + 1, j + -ks, 0) )
  583.                                     iloc($I_L583_882 + 256 * $I_L583_1095 + 1, $I_L583_1080 + 8 * $I_L583_1097 + 1, $I_L583_870 + $I_L583_1088 + 1) = int( $ulondp_WR0_R2 )
  583.                                     $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  583.                                     ulondp($I_L583_882 + 256 * $I_L583_1095 + 1, $I_L583_1080 + 8 * $I_L583_1097 + 1, $I_L583_870 + $I_L583_1088 + 1) = $ulondp_WR0_R2
  583.                                     $I_L583_882 = 1 + $I_L583_882
  583.                                     if ( $I_L583_882 >= min( ibdim, 256 + 256 * $I_L583_1095 ) + -256 * $I_L583_1095 ) exit
  583.                                  enddo
  583.                                  $I_L583_1080 = 1 + $I_L583_1080
  583.                                  if ( $I_L583_1080 >= min( kmax, 8 + 8 * $I_L583_1097 ) + -8 * $I_L583_1097 ) exit
  583.                               enddo
  583.                               $I_L583_1088 = 1 + $I_L583_1088
  583.                               if ( $I_L583_1088 >= klats + -$I_L583_870 ) exit
  583.                            enddo
  583.                         endif
  583.                         $I_L583_1095 = 1 + $I_L583_1095
  583.                         if ( $I_L583_1095 >= 1 + max( 0, -1 + _rsh( 255 + ibdim, 8 ) ) ) exit
  583.                      enddo
  583.                      $I_L583_1097 = 1 + $I_L583_1097
  583.                      if ( $I_L583_1097 >= 1 + max( 0, -1 + _rsh( 7 + kmax, 3 ) ) ) exit
  583.                   enddo
  583.                endif
  583.             endif
  583.          endif
  583.          if ( klats == 1 ) then
  583.             $F_A56 = kmax
  583.             $F_A57 = ibdim
  583.             if ( and( -$F_A57, -$F_A56 ) < 0 ) then
  583.                $I_L583_1052 = 0
  583.                do
  583.                   $I_L583_950 = 0
  583. !dir$ ivdep
  583.                   do
  583.                      iloc(1 + $I_L583_950, 1 + $I_L583_1052, 2) = iloc(1 + $I_L583_950, 1 + $I_L583_1052, 1)
  583.                      $I_L583_950 = 1 + $I_L583_950
  583.                      if ( $I_L583_950 >= $F_A57 ) exit
  583.                   enddo
  583.                   $I_L583_1052 = 1 + $I_L583_1052
  583.                   if ( $I_L583_1052 >= $F_A56 ) exit
  583.                enddo
  583.             endif
  583.             $F_A58 = kmax
  583.             $F_A59 = ibdim
  583.             if ( and( -$F_A59, -$F_A58 ) < 0 ) then
  583.                $I_L583_1054 = 0
  583.                do
  583.                   $I_L583_952 = 0
  583. !dir$ ivdep
  583.                   do
  583.                      iloc(1 + $I_L583_952, 1 + $I_L583_1054, 3) = iloc(1 + $I_L583_952, 1 + $I_L583_1054, 1)
  583.                      $I_L583_952 = 1 + $I_L583_952
  583.                      if ( $I_L583_952 >= $F_A59 ) exit
  583.                   enddo
  583.                   $I_L583_1054 = 1 + $I_L583_1054
  583.                   if ( $I_L583_1054 >= $F_A58 ) exit
  583.                enddo
  583.             endif
  583.             $F_A60 = kmax
  583.             $F_A61 = ibdim
  583.             if ( and( -$F_A61, -$F_A60 ) < 0 ) then
  583.                $I_L583_1056 = 0
  583.                do
  583.                   $I_L583_954 = 0
  583. !dir$ ivdep
  583.                   do
  583.                      iloc(1 + $I_L583_954, 1 + $I_L583_1056, 4) = iloc(1 + $I_L583_954, 1 + $I_L583_1056, 1)
  583.                      $I_L583_954 = 1 + $I_L583_954
  583.                      if ( $I_L583_954 >= $F_A61 ) exit
  583.                   enddo
  583.                   $I_L583_1056 = 1 + $I_L583_1056
  583.                   if ( $I_L583_1056 >= $F_A60 ) exit
  583.                enddo
  583.             endif
  583.             $F_A62 = kmax
  583.             $F_A63 = ibdim
  583.             if ( and( -$F_A63, -$F_A62 ) < 0 ) then
  583.                $I_L583_1058 = 0
  583.                do
  583.                   $I_L583_956 = 0
  583. !dir$ ivdep
  583.                   do
  583.                      ulondp(1 + $I_L583_956, 1 + $I_L583_1058, 2) = ulondp(1 + $I_L583_956, 1 + $I_L583_1058, 1)
  583.                      $I_L583_956 = 1 + $I_L583_956
  583.                      if ( $I_L583_956 >= $F_A63 ) exit
  583.                   enddo
  583.                   $I_L583_1058 = 1 + $I_L583_1058
  583.                   if ( $I_L583_1058 >= $F_A62 ) exit
  583.                enddo
  583.             endif
  583.             $F_A64 = kmax
  583.             $F_A65 = ibdim
  583.             if ( and( -$F_A65, -$F_A64 ) < 0 ) then
  583.                $I_L583_1060 = 0
  583.                do
  583.                   $I_L583_958 = 0
  583. !dir$ ivdep
  583.                   do
  583.                      ulondp(1 + $I_L583_958, 1 + $I_L583_1060, 3) = ulondp(1 + $I_L583_958, 1 + $I_L583_1060, 1)
  583.                      $I_L583_958 = 1 + $I_L583_958
  583.                      if ( $I_L583_958 >= $F_A65 ) exit
  583.                   enddo
  583.                   $I_L583_1060 = 1 + $I_L583_1060
  583.                   if ( $I_L583_1060 >= $F_A64 ) exit
  583.                enddo
  583.             endif
  583.             $F_A66 = kmax
  583.             $F_A67 = ibdim
  583.             if ( and( -$F_A67, -$F_A66 ) < 0 ) then
  583.                $I_L583_1062 = 0
  583.                do
  583.                   $I_L583_960 = 0
  583. !dir$ ivdep
  583.                   do
  583.                      ulondp(1 + $I_L583_960, 1 + $I_L583_1062, 4) = ulondp(1 + $I_L583_960, 1 + $I_L583_1062, 1)
  583.                      $I_L583_960 = 1 + $I_L583_960
  583.                      if ( $I_L583_960 >= $F_A67 ) exit
  583.                   enddo
  583.                   $I_L583_1062 = 1 + $I_L583_1062
  583.                   if ( $I_L583_1062 >= $F_A66 ) exit
  583.                enddo
  583.             endif
  583.          endif
  583.          kloc(1) = _copyout( kloc )
  583.          jloc(1) = _copyout( jloc )
  583.          iloc(1) = _copyout( iloc )
  583.          usigdp(1) = _copyout( usigdp )
  583.          ulatdp(1) = _copyout( ulatdp )
  583.          ulondp(1) = _copyout( ulondp )
  583.          (usig%base_addr)(1, jb, 0) = _copyout( usig )
  583.          (ulat%base_addr)(1, jb, 0) = _copyout( ulat )
  583.          (ulon%base_addr)(1, jb, 0) = _copyout( ulon )
  591.          ipa$1076 = .false.
  591.          ipa$1083 = -1.0
  591.          ipa$1084 = .true.
  591.          ipa$1091 = .false.
  591.          call interpcublin3d( fint(1), (fgumm%base_addr)(fgumm%dim_1%LB, fgumm%dim_2%LB, fgumm%dim_3%LB, 0), ipa$1076, ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, ipa$1083, ipa$1084, ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), ipa$1091 )
  603.          if ( kmax > 0 ) then
  604.             if ( ibdim > 0 ) then
  605.                $SC_fgqmm_I579 = fgqmm%dim_1%EX
  603.                $I_L603_1028 = 0
  603.                do
  605.                   $SC_fgqmm_I580 = fgqmm%dim_1%LB
  604.                   $I_L604_884 = 0
  604. !dir$ ivdep
  604.                   do
  605.                      (fgqmm%base_addr)(1 + $I_L604_884, 1 + $I_L603_1028, jb, 0) = fint($I_L604_884 + ibdim * $I_L603_1028 + 1)
  606.                      $I_L604_884 = 1 + $I_L604_884
  604.                      if ( $I_L604_884 >= ibdim ) exit
  604.                   enddo
  607.                   $I_L603_1028 = 1 + $I_L603_1028
  606.                   if ( $I_L603_1028 >= kmax ) exit
  606.                enddo
  606.             endif
  606.          endif
  608.          ipa$1140 = .true.
  608.          ipa$1147 = -1.0
  608.          ipa$1148 = .false.
  608.          ipa$1155 = .false.
  608.          call interpcublin3d( fint(1), (fgvmm%base_addr)(fgvmm%dim_1%LB, fgvmm%dim_2%LB, fgvmm%dim_3%LB, 0), ipa$1140, ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, ipa$1147, ipa$1148, ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), ipa$1155 )
  614.          if ( kmax > 0 ) then
  615.             if ( ibdim > 0 ) then
  616.                $SC_fgtmm_I581 = fgtmm%dim_1%EX
  614.                $I_L614_1030 = 0
  614.                do
  616.                   $SC_fgtmm_I582 = fgtmm%dim_1%LB
  615.                   $I_L615_886 = 0
  615. !dir$ ivdep
  615.                   do
  616.                      (fgtmm%base_addr)(1 + $I_L615_886, 1 + $I_L614_1030, jb, 0) = fint($I_L615_886 + ibdim * $I_L614_1030 + 1)
  617.                      $I_L615_886 = 1 + $I_L615_886
  615.                      if ( $I_L615_886 >= ibdim ) exit
  615.                   enddo
  618.                   $I_L614_1030 = 1 + $I_L614_1030
  617.                   if ( $I_L614_1030 >= kmax ) exit
  617.                enddo
  617.             endif
  617.          endif
  619.          ipa$1204 = .false.
  619.          ipa$1211 = 1.0
  619.          ipa$1212 = .false.
  619.          ipa$1219 = .false.
  619.          call interpcublin3d( fint(1), (fgqp%base_addr)(fgqp%dim_1%LB, fgqp%dim_2%LB, fgqp%dim_3%LB, 0), ipa$1204, ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, ipa$1211, ipa$1212, ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), ipa$1219 )
  626.          if ( fa /= 0.0 ) then
  626.             $F_A68 = fgqdm%dim_2%EX
  626.             $F_A69 = fgqdm%dim_1%EX
  626.             if ( and( -$F_A69, -$F_A68 ) < 0 ) then
  626.                $SC_fgqd_I515 = fgqd%dim_1%LB
  626.                $I_L626_1064 = 0
  626.                do
  626.                   $SC_fgqd_I516 = fgqd%dim_2%SM
  626.                   $I_L626_962 = 0
  626. !dir$ ivdep
  626.                   do
  626.                      (fgqdm%base_addr)(fgqdm%dim_1%LB + $I_L626_962, fgqdm%dim_2%LB + $I_L626_1064, jb, 0) = -5.0e-1 * (fgqd%base_addr)($SC_fgqd_I515 + $I_L626_962, fgqd%dim_2%LB + $I_L626_1064, jb, 0)
  626.                      $I_L626_962 = 1 + $I_L626_962
  626.                      if ( $I_L626_962 >= $F_A69 ) exit
  626.                   enddo
  626.                   $I_L626_1064 = 1 + $I_L626_1064
  626.                   if ( $I_L626_1064 >= $F_A68 ) exit
  626.                enddo
  626.             endif
  626.          endif
  627.          if ( kmax > 0 ) then
  628.             if ( ibdim > 0 ) then
  629.                $SC_fgqd_I583 = fgqd%dim_1%EX
  627.                $I_L627_1032 = 0
  627.                do
  629.                   $SC_fgqd_I515 = fgqd%dim_1%LB
  628.                   $I_L628_888 = 0
  628. !dir$ ivdep
  628.                   do
  629.                      (fgqd%base_addr)(1 + $I_L628_888, 1 + $I_L627_1032, jb, 0) = fint($I_L628_888 + ibdim * $I_L627_1032 + 1) + dt2 * (fgqd%base_addr)(1 + $I_L628_888, 1 + $I_L627_1032, jb, 0)
  630.                      $I_L628_888 = 1 + $I_L628_888
  628.                      if ( $I_L628_888 >= ibdim ) exit
  628.                   enddo
  631.                   $I_L627_1032 = 1 + $I_L627_1032
  630.                   if ( $I_L627_1032 >= kmax ) exit
  630.                enddo
  630.             endif
  630.          endif
  632.          ipa$1268 = .true.
  632.          ipa$1275 = 1.0
  632.          ipa$1276 = .false.
  632.          ipa$1283 = .false.
  632.          call interpcublin3d( fint(1), (fgtmpp%base_addr)(fgtmpp%dim_1%LB, fgtmpp%dim_2%LB, fgtmpp%dim_3%LB, 0), ipa$1268, ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, ipa$1275, ipa$1276, ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), ipa$1283 )
  638.          if ( fa /= 0.0 ) then
  638.             $F_A70 = fgtdm%dim_2%EX
  638.             $F_A71 = fgtdm%dim_1%EX
  638.             if ( and( -$F_A71, -$F_A70 ) < 0 ) then
  638.                $SC_fgtd_I491 = fgtd%dim_1%LB
  638.                $I_L638_1066 = 0
  638.                do
  638.                   $SC_fgtd_I492 = fgtd%dim_2%SM
  638.                   $I_L638_964 = 0
  638. !dir$ ivdep
  638.                   do
  638.                      (fgtdm%base_addr)(fgtdm%dim_1%LB + $I_L638_964, fgtdm%dim_2%LB + $I_L638_1066, jb, 0) = -5.0e-1 * (fgtd%base_addr)($SC_fgtd_I491 + $I_L638_964, fgtd%dim_2%LB + $I_L638_1066, jb, 0)
  638.                      $I_L638_964 = 1 + $I_L638_964
  638.                      if ( $I_L638_964 >= $F_A71 ) exit
  638.                   enddo
  638.                   $I_L638_1066 = 1 + $I_L638_1066
  638.                   if ( $I_L638_1066 >= $F_A70 ) exit
  638.                enddo
  638.             endif
  638.          endif
  639.          if ( kmax > 0 ) then
  640.             if ( ibdim > 0 ) then
  641.                $SC_fgtd_I584 = fgtd%dim_1%EX
  639.                $I_L639_1034 = 0
  639.                do
  641.                   $SC_fgtd_I491 = fgtd%dim_1%LB
  640.                   $I_L640_890 = 0
  640. !dir$ ivdep
  640.                   do
  641.                      (fgtd%base_addr)(1 + $I_L640_890, 1 + $I_L639_1034, jb, 0) = fint($I_L640_890 + ibdim * $I_L639_1034 + 1) + dt2 * (fgtd%base_addr)(1 + $I_L640_890, 1 + $I_L639_1034, jb, 0)
  642.                      $I_L640_890 = 1 + $I_L640_890
  640.                      if ( $I_L640_890 >= ibdim ) exit
  640.                   enddo
  643.                   $I_L639_1034 = 1 + $I_L639_1034
  642.                   if ( $I_L639_1034 >= kmax ) exit
  642.                enddo
  642.             endif
  642.          endif
  647.          $t_S22 = nscalars
  647.          if ( nscalars > 0 ) then
  647.             $I_L647_892 = 0
  647.             do
  649.                ipa$1338 = .true.
  649.                ipa$1345 = 1.0
  649.                ipa$1346 = .false.
  649.                ipa$1353 = .true.
  649.                call interpcublin3d( (fgpass_scalars%base_addr)(1, 1, jb, 1 + $I_L647_892, 3 + -adr_scalars, 0), (fgpass_scalars%base_addr)(1, 1, 1, 1 + $I_L647_892, adr_scalars, 0), ipa$1338, ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, ipa$1345, ipa$1346, ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), ipa$1353 )
  656.                $I_L647_892 = 1 + $I_L647_892
  656.                if ( $I_L647_892 >= $t_S22 ) exit
  656.             enddo
  656.          endif
  660.          ipa$1466 = loc( (ulonm2d%base_addr)(1, jb, 0) )
  660.          ulonm = _copyin( (ulonm2d%base_addr)(1, jb, 0) )
  660.          ipa$1468 = loc( (ulatm2d%base_addr)(1, jb, 0) )
  660.          ulatm = _copyin( (ulatm2d%base_addr)(1, jb, 0) )
  660.          ipa$1470 = loc( (ulon2d%base_addr)(1, jb, 0) )
  660.          ulon = _copyin( (ulon2d%base_addr)(1, jb, 0) )
  660.          ipa$1472 = loc( (ulat2d%base_addr)(1, jb, 0) )
  660.          ulat = _copyin( (ulat2d%base_addr)(1, jb, 0) )
  660.          ipa$1474 = loc( ulondp(1) )
  660.          ulondp = _copyin( ulondp(1) )
  660.          ipa$1476 = loc( iloc(1) )
  660.          iloc = _copyin( iloc(1) )
  660.          t$18 = ibdim
  660.          t$176 = max( 0, ibdim )
  660.          t$177 = ibdim
  660.          t$178 = ( 4 * ibdim )
  660.          t$19 = ibmax
  660.          t$179 = max( 0, ibmax )
  660.          t$182 = 8 * max( 0, ibmax )
  660.          t$183 = 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  660.          t$185 = 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  660.          t$180 = int( _alloc( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) ), 8 )
  660.          t$181 = t$180
  660.          t$184 = t$180 + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  660.          klats = 1
  660.          if ( reducedgrid ) then
  660.             klats = 2
  660.          endif
  660.          if ( nit > 0 ) then
  660.             $I_L660_1091 = 0
  660.             do
  660.                t$40 = ibdim
  660.                t$261 = max( 0, ibdim )
  660.                t$262 = ibdim
  660.                t$263 = ( 4 * ibdim )
  660.                if ( klats == 4 ) then
  660.                   kp(1) = -1
  660.                   kp(2) = 0
  660.                   kp(3) = 1
  660.                   kp(4) = 2
  660.                else
  660.                   kp(1) = 0
  660.                   kp(2) = 1
  660.                endif
  660.                if ( ibdim > 0 ) then
  660.                   $SC_jphiref_I576 = jphiref%dim_1%EX
  660.                   $I_L660_894 = 0
  660. !dir$ ivdep
  660.                   do
  660.                      ik = int( ( ( 1.570796326794895 + ulat(1 + $I_L660_894) ) * 1.0/delphiref ) )
  660.                      $jloc_WR0_R4 = (jphiref%base_addr)(1 + $I_L660_894, ik, 0)
  660.                      jloc(1 + $I_L660_894) = $jloc_WR0_R4
  660.                      if ( ulat(1 + $I_L660_894) > (phi%base_addr)(1 + $I_L660_894, 1 + $jloc_WR0_R4, 0) ) then
  660.                         $jloc_WR0_R4 = 1 + $jloc_WR0_R4
  660.                         jloc(1 + $I_L660_894) = $jloc_WR0_R4
  660.                      endif
  660.                      ulatdp(1 + $I_L660_894) = ( ( ulat(1 + $I_L660_894) + -(phi%base_addr)(1 + $I_L660_894, $jloc_WR0_R4, 0) ) * 1.0/(delphi%base_addr)(1 + $I_L660_894, $jloc_WR0_R4, 0) )
  660.                      $I_L660_894 = 1 + $I_L660_894
  660.                      if ( $I_L660_894 >= ibdim ) exit
  660.                   enddo
  660.                endif
  660.                if ( klats > 0 ) then
  660.                   if ( ibdim > 0 ) then
  660.                      $SC_dellon_I578 = dellon%dim_1%EX
  660.                      $I_L660_825 = 0
  660.                      if ( klats >= 4 ) then
  660.                         $I_L660_1084 = 0
  660. !dir$ blocking_size( 0, 0 )
  660.                         do
  660.                            $ks#1_U4 = kp(1 + 4 * $I_L660_1084)
  660.                            $ks#2_U5 = kp(2 + 4 * $I_L660_1084)
  660.                            $ks#3_U6 = kp(3 + 4 * $I_L660_1084)
  660.                            $ks#4_U7 = kp(4 + 4 * $I_L660_1084)
  660.                            $I_L660_1012 = 0
  660. !dir$ ivdep
  660. !dir$ blocking_size( 0, 0 )
  660.                            do
  660.                               j = jmax + -jloc(1 + $I_L660_1012) + 1
  660.                               $ulondp_WR0_R5 = 1.0 + ( ulon(1 + $I_L660_1012) * 1.0/(dellon%base_addr)(1 + $I_L660_1012, j + -$ks#1_U4, 0) )
  660.                               iloc(1 + $I_L660_1012, 1 + 4 * $I_L660_1084) = int( $ulondp_WR0_R5 )
  660.                               $ulondp_WR0_R5 = $ulondp_WR0_R5 + ( -( int( $ulondp_WR0_R5 ) ) )
  660.                               ulondp(1 + $I_L660_1012, 1 + 4 * $I_L660_1084) = $ulondp_WR0_R5
  660.                               j = jmax + -jloc(1 + $I_L660_1012) + 1
  660.                               $ulondp_WR0_R5 = 1.0 + ( ulon(1 + $I_L660_1012) * 1.0/(dellon%base_addr)(1 + $I_L660_1012, j + -$ks#2_U5, 0) )
  660.                               iloc(1 + $I_L660_1012, 2 + 4 * $I_L660_1084) = int( $ulondp_WR0_R5 )
  660.                               $ulondp_WR0_R5 = $ulondp_WR0_R5 + ( -( int( $ulondp_WR0_R5 ) ) )
  660.                               ulondp(1 + $I_L660_1012, 2 + 4 * $I_L660_1084) = $ulondp_WR0_R5
  660.                               j = jmax + -jloc(1 + $I_L660_1012) + 1
  660.                               $ulondp_WR0_R5 = 1.0 + ( ulon(1 + $I_L660_1012) * 1.0/(dellon%base_addr)(1 + $I_L660_1012, j + -$ks#3_U6, 0) )
  660.                               iloc(1 + $I_L660_1012, 3 + 4 * $I_L660_1084) = int( $ulondp_WR0_R5 )
  660.                               $ulondp_WR0_R5 = $ulondp_WR0_R5 + ( -( int( $ulondp_WR0_R5 ) ) )
  660.                               ulondp(1 + $I_L660_1012, 3 + 4 * $I_L660_1084) = $ulondp_WR0_R5
  660.                               j = jmax + -jloc(1 + $I_L660_1012) + 1
  660.                               $ulondp_WR0_R5 = 1.0 + ( ulon(1 + $I_L660_1012) * 1.0/(dellon%base_addr)(1 + $I_L660_1012, j + -$ks#4_U7, 0) )
  660.                               iloc(1 + $I_L660_1012, 4 + 4 * $I_L660_1084) = int( $ulondp_WR0_R5 )
  660.                               $ulondp_WR0_R5 = $ulondp_WR0_R5 + ( -( int( $ulondp_WR0_R5 ) ) )
  660.                               ulondp(1 + $I_L660_1012, 4 + 4 * $I_L660_1084) = $ulondp_WR0_R5
  660.                               $I_L660_1012 = 1 + $I_L660_1012
  660.                               if ( $I_L660_1012 >= ibdim ) exit
  660.                            enddo
  660.                            $I_L660_1084 = 1 + $I_L660_1084
  660.                            if ( $I_L660_1084 >= _rsh( klats, 2 ) ) exit
  660.                         enddo
  660.                         $I_L660_825 = and( 0xfffffffffffffffcUL, klats )
  660.                      endif
  660.                      if ( $I_L660_825 < klats ) then
  660.                         $I_L660_1036 = 0
  660. !dir$ blocking_size( 0, 0 )
  660.                         do
  660.                            ks = kp($I_L660_825 + $I_L660_1036 + 1)
  660.                            $I_L660_896 = 0
  660. !dir$ ivdep
  660. !dir$ blocking_size( 0, 0 )
  660.                            do
  660.                               j = jmax + -jloc(1 + $I_L660_896) + 1
  660.                               $ulondp_WR0_R5 = 1.0 + ( ulon(1 + $I_L660_896) * 1.0/(dellon%base_addr)(1 + $I_L660_896, j + -ks, 0) )
  660.                               iloc(1 + $I_L660_896, $I_L660_825 + $I_L660_1036 + 1) = int( $ulondp_WR0_R5 )
  660.                               $ulondp_WR0_R5 = $ulondp_WR0_R5 + ( -( int( $ulondp_WR0_R5 ) ) )
  660.                               ulondp(1 + $I_L660_896, $I_L660_825 + $I_L660_1036 + 1) = $ulondp_WR0_R5
  660.                               $I_L660_896 = 1 + $I_L660_896
  660.                               if ( $I_L660_896 >= ibdim ) exit
  660.                            enddo
  660.                            $I_L660_1036 = 1 + $I_L660_1036
  660.                            if ( $I_L660_1036 >= klats + -$I_L660_825 ) exit
  660.                         enddo
  660.                      endif
  660.                   endif
  660.                endif
  660.                if ( klats == 1 ) then
  660.                   $F_A72 = ibdim
  660.                   if ( ibdim > 0 ) then
  660.                      $I_L660_966 = 0
  660. !dir$ ivdep
  660.                      do
  660.                         iloc(1 + $I_L660_966, 2) = iloc(1 + $I_L660_966, 1)
  660.                         $I_L660_966 = 1 + $I_L660_966
  660.                         if ( $I_L660_966 >= $F_A72 ) exit
  660.                      enddo
  660.                   endif
  660.                   $F_A73 = ibdim
  660.                   if ( ibdim > 0 ) then
  660.                      $I_L660_968 = 0
  660. !dir$ ivdep
  660.                      do
  660.                         iloc(1 + $I_L660_968, 3) = iloc(1 + $I_L660_968, 1)
  660.                         $I_L660_968 = 1 + $I_L660_968
  660.                         if ( $I_L660_968 >= $F_A73 ) exit
  660.                      enddo
  660.                   endif
  660.                   $F_A74 = ibdim
  660.                   if ( ibdim > 0 ) then
  660.                      $I_L660_970 = 0
  660. !dir$ ivdep
  660.                      do
  660.                         iloc(1 + $I_L660_970, 4) = iloc(1 + $I_L660_970, 1)
  660.                         $I_L660_970 = 1 + $I_L660_970
  660.                         if ( $I_L660_970 >= $F_A74 ) exit
  660.                      enddo
  660.                   endif
  660.                   $F_A75 = ibdim
  660.                   if ( ibdim > 0 ) then
  660.                      $I_L660_972 = 0
  660. !dir$ ivdep
  660.                      do
  660.                         ulondp(1 + $I_L660_972, 2) = ulondp(1 + $I_L660_972, 1)
  660.                         $I_L660_972 = 1 + $I_L660_972
  660.                         if ( $I_L660_972 >= $F_A75 ) exit
  660.                      enddo
  660.                   endif
  660.                   $F_A76 = ibdim
  660.                   if ( ibdim > 0 ) then
  660.                      $I_L660_974 = 0
  660. !dir$ ivdep
  660.                      do
  660.                         ulondp(1 + $I_L660_974, 3) = ulondp(1 + $I_L660_974, 1)
  660.                         $I_L660_974 = 1 + $I_L660_974
  660.                         if ( $I_L660_974 >= $F_A76 ) exit
  660.                      enddo
  660.                   endif
  660.                   $F_A77 = ibdim
  660.                   if ( ibdim > 0 ) then
  660.                      $I_L660_976 = 0
  660. !dir$ ivdep
  660.                      do
  660.                         ulondp(1 + $I_L660_976, 4) = ulondp(1 + $I_L660_976, 1)
  660.                         $I_L660_976 = 1 + $I_L660_976
  660.                         if ( $I_L660_976 >= $F_A77 ) exit
  660.                      enddo
  660.                   endif
  660.                endif
  660.                ipa$1498 = loc( (fgummean%base_addr)(fgummean%dim_1%LB, fgummean%dim_2%LB, 0) )
  660.                u = _copyin( (fgummean%base_addr)(fgummean%dim_1%LB, fgummean%dim_2%LB, 0) )
  660.                ipa$1500 = loc( (fgvmmean%base_addr)(fgvmmean%dim_1%LB, fgvmmean%dim_2%LB, 0) )
  660.                v = _copyin( (fgvmmean%base_addr)(fgvmmean%dim_1%LB, fgvmmean%dim_2%LB, 0) )
  660.                t$46 = ibmax
  660.                t$47 = jbmax_ext
  660.                t$276 = max( 0, ibmax )
  660.                t$277 = max( 0, ibmax )
  660.                t$278 = max( 0, jbmax_ext )
  660.                t$279 = max( 0, ibmax ) * max( 0, jbmax_ext )
  660.                t$45 = ibdim
  660.                t$280 = max( 0, ibdim )
  660.                t$281 = ibdim
  660.                t$282 = ( 2 * ibdim )
  660.                t$285 = 8 * max( 0, ibmax )
  660.                t$286 = 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  660.                t$288 = 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  660.                t$283 = int( _alloc( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) ), 8 )
  660.                t$284 = t$283
  660.                t$287 = t$283 + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  660.                if ( ibdim > 0 ) then
  660.                   $I_L660_898 = 0
  660. !dir$ ivdep
  660.                   do
  660.                      $jp_S27 = jmax + -jloc(1 + $I_L660_898) + 1
  660.                      s1(1 + $I_L660_898) = 1.0
  660.                      s2(1 + $I_L660_898) = 1.0
  660.                      if ( jmax + -$jp_S27 == -1 ) then
  660.                         s1(1 + $I_L660_898) = -1.0
  660.                      endif
  660.                      if ( $jp_S27 == 1 ) then
  660.                         s2(1 + $I_L660_898) = -1.0
  660.                      endif
  660.                      $I_L660_898 = 1 + $I_L660_898
  660.                      if ( $I_L660_898 >= ibdim ) exit
  660.                   enddo
  660.                   $I_L660_900 = 0
  660. !dir$ ivdep
  660.                   do
  660.                      jp = jmax + -jloc(1 + $I_L660_900) + 1
  660.                      i1 = (ibperij%base_addr)(iloc(1 + $I_L660_900, 1), jp, 0)
  660.                      i2 = (ibperij%base_addr)(iloc(1 + $I_L660_900, 2), -1 + jp, 0)
  660.                      i3 = (ibperij%base_addr)(1 + iloc(1 + $I_L660_900, 1), jp, 0)
  660.                      i4 = (ibperij%base_addr)(1 + iloc(1 + $I_L660_900, 2), -1 + jp, 0)
  660.                      j1 = (jbperij%base_addr)(iloc(1 + $I_L660_900, 1), jp, 0)
  660.                      j2 = (jbperij%base_addr)(iloc(1 + $I_L660_900, 2), -1 + jp, 0)
  660.                      j3 = (jbperij%base_addr)(1 + iloc(1 + $I_L660_900, 1), jp, 0)
  660.                      j4 = (jbperij%base_addr)(1 + iloc(1 + $I_L660_900, 2), -1 + jp, 0)
  660.                      f1 = s1(1 + $I_L660_900) * ( u(i1, j1) + ulondp(1 + $I_L660_900, 1) * ( u(i3, j3) + -u(i1, j1) ) )
  660.                      g1 = s1(1 + $I_L660_900) * ( v(i1, j1) + ulondp(1 + $I_L660_900, 1) * ( v(i3, j3) + -v(i1, j1) ) )
  660.                      f2 = s2(1 + $I_L660_900) * ( u(i2, j2) + ulondp(1 + $I_L660_900, 2) * ( u(i4, j4) + -u(i2, j2) ) )
  660.                      g2 = s2(1 + $I_L660_900) * ( v(i2, j2) + ulondp(1 + $I_L660_900, 2) * ( v(i4, j4) + -v(i2, j2) ) )
  660.                      uint(1 + $I_L660_900) = f1 + ulatdp(1 + $I_L660_900) * ( f2 + -f1 )
  660.                      vint(1 + $I_L660_900) = g1 + ulatdp(1 + $I_L660_900) * ( g2 + -g1 )
  660.                      $I_L660_900 = 1 + $I_L660_900
  660.                      if ( $I_L660_900 >= ibdim ) exit
  660.                   enddo
  660.                endif
  660.                _free( t$283 )
  660.                (fgvmmean%base_addr)(fgvmmean%dim_1%LB, fgvmmean%dim_2%LB, 0) = _copyout( v )
  660.                (fgummean%base_addr)(fgummean%dim_1%LB, fgummean%dim_2%LB, 0) = _copyout( u )
  660.                ipa$1520 = loc( (coslon%base_addr)(1, jb, 0) )
  660.                coslon = _copyin( (coslon%base_addr)(1, jb, 0) )
  660.                ipa$1522 = loc( (sinlon%base_addr)(1, jb, 0) )
  660.                sinlon = _copyin( (sinlon%base_addr)(1, jb, 0) )
  660.                ipa$1524 = loc( (coslat%base_addr)(1, jb, 0) )
  660.                coslat = _copyin( (coslat%base_addr)(1, jb, 0) )
  660.                ipa$1526 = loc( (sinlat%base_addr)(1, jb, 0) )
  660.                sinlat = _copyin( (sinlat%base_addr)(1, jb, 0) )
  660.                ipa$1528 = loc( (fgumean%base_addr)(1, jb, 0) )
  660.                um = _copyin( (fgumean%base_addr)(1, jb, 0) )
  660.                ipa$1530 = loc( (fgvmean%base_addr)(1, jb, 0) )
  660.                vm = _copyin( (fgvmean%base_addr)(1, jb, 0) )
  660.                t$31 = ibdim
  660.                t$235 = max( 0, ibdim )
  660.                dt2 = 5.0e-1 * delt
  660.                if ( ibdim > 0 ) then
  660.                   $I_L660_902 = 0
  660. !dir$ ivdep
  660.                   do
  660.                      $Coss_P1 = coss( ulonm(1 + $I_L660_902) )
  660.                      $Coss_P2 = coss( ulatm(1 + $I_L660_902) )
  660.                      uh = 5.0e-1 * ( uint(1 + $I_L660_902) + um(1 + $I_L660_902) )
  660.                      vh = 5.0e-1 * ( vint(1 + $I_L660_902) + vm(1 + $I_L660_902) )
  660.                      x = coslon(1 + $I_L660_902) * coslat(1 + $I_L660_902)
  660.                      y = sinlon(1 + $I_L660_902) * coslat(1 + $I_L660_902)
  660.                      z = sinlat(1 + $I_L660_902)
  660.                      b = _recip_sqrt( ( x + -( dt2 * ( -( uh * cimag( $Coss_P1 ) + vh * real( $Coss_P1, 8 ) * cimag( $Coss_P2 ) ) ) ) ) * ( x + -( dt2 * ( -( uh * cimag( $Coss_P1 ) + vh * real( $Coss_P1, 8 ) * cimag( $Coss_P2 ) ) ) ) ) + ( y + -( dt2 * ( uh * real( $Coss_P1, 8 ) + -( vh * cimag( $Coss_P1 ) * cimag( $Coss_P2 ) ) ) ) ) * ( y + -( dt2 * ( uh * real( $Coss_P1, 8 ) + -( vh * cimag( $Coss_P1 ) * cimag( $Coss_P2 ) ) ) ) ) + ( z + -( dt2 * ( real( $Coss_P2, 8 ) * vh ) ) ) * ( z + -( dt2 * ( real( $Coss_P2, 8 ) * vh ) ) ) )
  660.                      xb = _recip_sqrt( ( x + -( dt2 * ( -( uh * cimag( $Coss_P1 ) + vh * real( $Coss_P1, 8 ) * cimag( $Coss_P2 ) ) ) ) ) * ( x + -( dt2 * ( -( uh * cimag( $Coss_P1 ) + vh * real( $Coss_P1, 8 ) * cimag( $Coss_P2 ) ) ) ) ) + ( y + -( dt2 * ( uh * real( $Coss_P1, 8 ) + -( vh * cimag( $Coss_P1 ) * cimag( $Coss_P2 ) ) ) ) ) * ( y + -( dt2 * ( uh * real( $Coss_P1, 8 ) + -( vh * cimag( $Coss_P1 ) * cimag( $Coss_P2 ) ) ) ) ) + ( z + -( dt2 * ( real( $Coss_P2, 8 ) * vh ) ) ) * ( z + -( dt2 * ( real( $Coss_P2, 8 ) * vh ) ) ) ) * ( x + -( dt2 * ( -( uh * cimag( $Coss_P1 ) + vh * real( $Coss_P1, 8 ) * cimag( $Coss_P2 ) ) ) ) )
  660.                      yb = _recip_sqrt( ( x + -( dt2 * ( -( uh * cimag( $Coss_P1 ) + vh * real( $Coss_P1, 8 ) * cimag( $Coss_P2 ) ) ) ) ) * ( x + -( dt2 * ( -( uh * cimag( $Coss_P1 ) + vh * real( $Coss_P1, 8 ) * cimag( $Coss_P2 ) ) ) ) ) + ( y + -( dt2 * ( uh * real( $Coss_P1, 8 ) + -( vh * cimag( $Coss_P1 ) * cimag( $Coss_P2 ) ) ) ) ) * ( y + -( dt2 * ( uh * real( $Coss_P1, 8 ) + -( vh * cimag( $Coss_P1 ) * cimag( $Coss_P2 ) ) ) ) ) + ( z + -( dt2 * ( real( $Coss_P2, 8 ) * vh ) ) ) * ( z + -( dt2 * ( real( $Coss_P2, 8 ) * vh ) ) ) ) * ( y + -( dt2 * ( uh * real( $Coss_P1, 8 ) + -( vh * cimag( $Coss_P1 ) * cimag( $Coss_P2 ) ) ) ) )
  660.                      zb = _recip_sqrt( ( x + -( dt2 * ( -( uh * cimag( $Coss_P1 ) + vh * real( $Coss_P1, 8 ) * cimag( $Coss_P2 ) ) ) ) ) * ( x + -( dt2 * ( -( uh * cimag( $Coss_P1 ) + vh * real( $Coss_P1, 8 ) * cimag( $Coss_P2 ) ) ) ) ) + ( y + -( dt2 * ( uh * real( $Coss_P1, 8 ) + -( vh * cimag( $Coss_P1 ) * cimag( $Coss_P2 ) ) ) ) ) * ( y + -( dt2 * ( uh * real( $Coss_P1, 8 ) + -( vh * cimag( $Coss_P1 ) * cimag( $Coss_P2 ) ) ) ) ) + ( z + -( dt2 * ( real( $Coss_P2, 8 ) * vh ) ) ) * ( z + -( dt2 * ( real( $Coss_P2, 8 ) * vh ) ) ) ) * ( z + -( dt2 * ( real( $Coss_P2, 8 ) * vh ) ) )
  660.                      $ulonm_WR0_R7 = atan2( ( b * ( y + -( dt2 * ( uh * real( $Coss_P1, 8 ) + -( vh * cimag( $Coss_P1 ) * cimag( $Coss_P2 ) ) ) ) ) ), xb )
  660.                      ulonm(1 + $I_L660_902) = atan2( ( b * ( y + -( dt2 * ( uh * real( $Coss_P1, 8 ) + -( vh * cimag( $Coss_P1 ) * cimag( $Coss_P2 ) ) ) ) ) ), xb )
  660.                      if ( atan2( ( b * ( y + -( dt2 * ( uh * real( $Coss_P1, 8 ) + -( vh * cimag( $Coss_P1 ) * cimag( $Coss_P2 ) ) ) ) ) ), xb ) < 0.0 ) then
  660.                         $ulonm_WR0_R7 = 6.28318530717958 + $ulonm_WR0_R7
  660.                         ulonm(1 + $I_L660_902) = $ulonm_WR0_R7
  660.                      endif
  660.                      ulatm(1 + $I_L660_902) = asin( zb )
  660.                      zm = ( 2.0 * ( x * xb + y * yb + z * zb ) ) * zb + -z
  660.                      $ulon_WR0_R8 = atan2( ( ( 2.0 * ( x * xb + y * yb + z * zb ) ) * yb + -y ), ( ( 2.0 * ( x * xb + y * yb + z * zb ) ) * xb + -x ) )
  660.                      ulon(1 + $I_L660_902) = atan2( ( ( 2.0 * ( x * xb + y * yb + z * zb ) ) * yb + -y ), ( ( 2.0 * ( x * xb + y * yb + z * zb ) ) * xb + -x ) )
  660.                      if ( atan2( ( ( 2.0 * ( x * xb + y * yb + z * zb ) ) * yb + -y ), ( ( 2.0 * ( x * xb + y * yb + z * zb ) ) * xb + -x ) ) < 0.0 ) then
  660.                         $ulon_WR0_R8 = 6.28318530717958 + $ulon_WR0_R8
  660.                         ulon(1 + $I_L660_902) = $ulon_WR0_R8
  660.                      endif
  660.                      ulat(1 + $I_L660_902) = asin( zm )
  660.                      $I_L660_902 = 1 + $I_L660_902
  660.                      if ( $I_L660_902 >= ibdim ) exit
  660.                   enddo
  660.                endif
  660.                (fgvmean%base_addr)(1, jb, 0) = _copyout( vm )
  660.                (fgumean%base_addr)(1, jb, 0) = _copyout( um )
  660.                (sinlat%base_addr)(1, jb, 0) = _copyout( sinlat )
  660.                (coslat%base_addr)(1, jb, 0) = _copyout( coslat )
  660.                (sinlon%base_addr)(1, jb, 0) = _copyout( sinlon )
  660.                (coslon%base_addr)(1, jb, 0) = _copyout( coslon )
  660.                $I_L660_1091 = 1 + $I_L660_1091
  660.                if ( $I_L660_1091 >= nit ) exit
  660.             enddo
  660.          endif
  660.          _free( t$180 )
  660.          iloc(1) = _copyout( iloc )
  660.          ulondp(1) = _copyout( ulondp )
  660.          (ulat2d%base_addr)(1, jb, 0) = _copyout( ulat )
  660.          (ulon2d%base_addr)(1, jb, 0) = _copyout( ulon )
  660.          (ulatm2d%base_addr)(1, jb, 0) = _copyout( ulatm )
  660.          (ulonm2d%base_addr)(1, jb, 0) = _copyout( ulonm )
  668.          ipa$1548 = loc( (ulon2d%base_addr)(1, jb, 0) )
  668.          ulon = _copyin( (ulon2d%base_addr)(1, jb, 0) )
  668.          ipa$1550 = loc( (ulat2d%base_addr)(1, jb, 0) )
  668.          ulat = _copyin( (ulat2d%base_addr)(1, jb, 0) )
  668.          ipa$1552 = loc( ulondp(1) )
  668.          ulondp = _copyin( ulondp(1) )
  668.          ipa$1554 = loc( iloc(1) )
  668.          iloc = _copyin( iloc(1) )
  668.          t$40 = ibdim
  668.          t$261 = max( 0, ibdim )
  668.          t$262 = ibdim
  668.          t$263 = ( 4 * ibdim )
  668.          if ( klats == 4 ) then
  668.             kp(1) = -1
  668.             kp(2) = 0
  668.             kp(3) = 1
  668.             kp(4) = 2
  668.          else
  668.             kp(1) = 0
  668.             kp(2) = 1
  668.          endif
  668.          if ( ibdim > 0 ) then
  668.             $I_L668_904 = 0
  668. !dir$ ivdep
  668.             do
  668.                ik = int( ( ( 1.570796326794895 + ulat(1 + $I_L668_904) ) * 1.0/delphiref ) )
  668.                $jloc_WR0_R9 = (jphiref%base_addr)(1 + $I_L668_904, ik, 0)
  668.                jloc(1 + $I_L668_904) = $jloc_WR0_R9
  668.                if ( ulat(1 + $I_L668_904) > (phi%base_addr)(1 + $I_L668_904, 1 + $jloc_WR0_R9, 0) ) then
  668.                   $jloc_WR0_R9 = 1 + $jloc_WR0_R9
  668.                   jloc(1 + $I_L668_904) = $jloc_WR0_R9
  668.                endif
  668.                ulatdp(1 + $I_L668_904) = ( ( ulat(1 + $I_L668_904) + -(phi%base_addr)(1 + $I_L668_904, $jloc_WR0_R9, 0) ) * 1.0/(delphi%base_addr)(1 + $I_L668_904, $jloc_WR0_R9, 0) )
  668.                $I_L668_904 = 1 + $I_L668_904
  668.                if ( $I_L668_904 >= ibdim ) exit
  668.             enddo
  668.          endif
  668.          if ( klats > 0 ) then
  668.             if ( ibdim > 0 ) then
  668.                $I_L668_827 = 0
  668.                if ( klats >= 4 ) then
  668.                   $I_L668_1086 = 0
  668. !dir$ blocking_size( 0, 0 )
  668.                   do
  668.                      $ks#1_U8 = kp(1 + 4 * $I_L668_1086)
  668.                      $ks#2_U9 = kp(2 + 4 * $I_L668_1086)
  668.                      $ks#3_U10 = kp(3 + 4 * $I_L668_1086)
  668.                      $ks#4_U11 = kp(4 + 4 * $I_L668_1086)
  668.                      $I_L668_1014 = 0
  668. !dir$ ivdep
  668. !dir$ blocking_size( 0, 0 )
  668.                      do
  668.                         j = jmax + -jloc(1 + $I_L668_1014) + 1
  668.                         $ulondp_WR0_R10 = 1.0 + ( ulon(1 + $I_L668_1014) * 1.0/(dellon%base_addr)(1 + $I_L668_1014, j + -$ks#1_U8, 0) )
  668.                         iloc(1 + $I_L668_1014, 1 + 4 * $I_L668_1086) = int( $ulondp_WR0_R10 )
  668.                         $ulondp_WR0_R10 = $ulondp_WR0_R10 + ( -( int( $ulondp_WR0_R10 ) ) )
  668.                         ulondp(1 + $I_L668_1014, 1 + 4 * $I_L668_1086) = $ulondp_WR0_R10
  668.                         j = jmax + -jloc(1 + $I_L668_1014) + 1
  668.                         $ulondp_WR0_R10 = 1.0 + ( ulon(1 + $I_L668_1014) * 1.0/(dellon%base_addr)(1 + $I_L668_1014, j + -$ks#2_U9, 0) )
  668.                         iloc(1 + $I_L668_1014, 2 + 4 * $I_L668_1086) = int( $ulondp_WR0_R10 )
  668.                         $ulondp_WR0_R10 = $ulondp_WR0_R10 + ( -( int( $ulondp_WR0_R10 ) ) )
  668.                         ulondp(1 + $I_L668_1014, 2 + 4 * $I_L668_1086) = $ulondp_WR0_R10
  668.                         j = jmax + -jloc(1 + $I_L668_1014) + 1
  668.                         $ulondp_WR0_R10 = 1.0 + ( ulon(1 + $I_L668_1014) * 1.0/(dellon%base_addr)(1 + $I_L668_1014, j + -$ks#3_U10, 0) )
  668.                         iloc(1 + $I_L668_1014, 3 + 4 * $I_L668_1086) = int( $ulondp_WR0_R10 )
  668.                         $ulondp_WR0_R10 = $ulondp_WR0_R10 + ( -( int( $ulondp_WR0_R10 ) ) )
  668.                         ulondp(1 + $I_L668_1014, 3 + 4 * $I_L668_1086) = $ulondp_WR0_R10
  668.                         j = jmax + -jloc(1 + $I_L668_1014) + 1
  668.                         $ulondp_WR0_R10 = 1.0 + ( ulon(1 + $I_L668_1014) * 1.0/(dellon%base_addr)(1 + $I_L668_1014, j + -$ks#4_U11, 0) )
  668.                         iloc(1 + $I_L668_1014, 4 + 4 * $I_L668_1086) = int( $ulondp_WR0_R10 )
  668.                         $ulondp_WR0_R10 = $ulondp_WR0_R10 + ( -( int( $ulondp_WR0_R10 ) ) )
  668.                         ulondp(1 + $I_L668_1014, 4 + 4 * $I_L668_1086) = $ulondp_WR0_R10
  668.                         $I_L668_1014 = 1 + $I_L668_1014
  668.                         if ( $I_L668_1014 >= ibdim ) exit
  668.                      enddo
  668.                      $I_L668_1086 = 1 + $I_L668_1086
  668.                      if ( $I_L668_1086 >= _rsh( klats, 2 ) ) exit
  668.                   enddo
  668.                   $I_L668_827 = and( 0xfffffffffffffffcUL, klats )
  668.                endif
  668.                if ( $I_L668_827 < klats ) then
  668.                   $I_L668_1039 = 0
  668. !dir$ blocking_size( 0, 0 )
  668.                   do
  668.                      ks = kp($I_L668_827 + $I_L668_1039 + 1)
  668.                      $I_L668_906 = 0
  668. !dir$ ivdep
  668. !dir$ blocking_size( 0, 0 )
  668.                      do
  668.                         j = jmax + -jloc(1 + $I_L668_906) + 1
  668.                         $ulondp_WR0_R10 = 1.0 + ( ulon(1 + $I_L668_906) * 1.0/(dellon%base_addr)(1 + $I_L668_906, j + -ks, 0) )
  668.                         iloc(1 + $I_L668_906, $I_L668_827 + $I_L668_1039 + 1) = int( $ulondp_WR0_R10 )
  668.                         $ulondp_WR0_R10 = $ulondp_WR0_R10 + ( -( int( $ulondp_WR0_R10 ) ) )
  668.                         ulondp(1 + $I_L668_906, $I_L668_827 + $I_L668_1039 + 1) = $ulondp_WR0_R10
  668.                         $I_L668_906 = 1 + $I_L668_906
  668.                         if ( $I_L668_906 >= ibdim ) exit
  668.                      enddo
  668.                      $I_L668_1039 = 1 + $I_L668_1039
  668.                      if ( $I_L668_1039 >= klats + -$I_L668_827 ) exit
  668.                   enddo
  668.                endif
  668.             endif
  668.          endif
  668.          if ( klats == 1 ) then
  668.             $F_A78 = ibdim
  668.             if ( ibdim > 0 ) then
  668.                $I_L668_978 = 0
  668. !dir$ ivdep
  668.                do
  668.                   iloc(1 + $I_L668_978, 2) = iloc(1 + $I_L668_978, 1)
  668.                   $I_L668_978 = 1 + $I_L668_978
  668.                   if ( $I_L668_978 >= $F_A78 ) exit
  668.                enddo
  668.             endif
  668.             $F_A79 = ibdim
  668.             if ( ibdim > 0 ) then
  668.                $I_L668_980 = 0
  668. !dir$ ivdep
  668.                do
  668.                   iloc(1 + $I_L668_980, 3) = iloc(1 + $I_L668_980, 1)
  668.                   $I_L668_980 = 1 + $I_L668_980
  668.                   if ( $I_L668_980 >= $F_A79 ) exit
  668.                enddo
  668.             endif
  668.             $F_A80 = ibdim
  668.             if ( ibdim > 0 ) then
  668.                $I_L668_982 = 0
  668. !dir$ ivdep
  668.                do
  668.                   iloc(1 + $I_L668_982, 4) = iloc(1 + $I_L668_982, 1)
  668.                   $I_L668_982 = 1 + $I_L668_982
  668.                   if ( $I_L668_982 >= $F_A80 ) exit
  668.                enddo
  668.             endif
  668.             $F_A81 = ibdim
  668.             if ( ibdim > 0 ) then
  668.                $I_L668_984 = 0
  668. !dir$ ivdep
  668.                do
  668.                   ulondp(1 + $I_L668_984, 2) = ulondp(1 + $I_L668_984, 1)
  668.                   $I_L668_984 = 1 + $I_L668_984
  668.                   if ( $I_L668_984 >= $F_A81 ) exit
  668.                enddo
  668.             endif
  668.             $F_A82 = ibdim
  668.             if ( ibdim > 0 ) then
  668.                $I_L668_986 = 0
  668. !dir$ ivdep
  668.                do
  668.                   ulondp(1 + $I_L668_986, 3) = ulondp(1 + $I_L668_986, 1)
  668.                   $I_L668_986 = 1 + $I_L668_986
  668.                   if ( $I_L668_986 >= $F_A82 ) exit
  668.                enddo
  668.             endif
  668.             $F_A83 = ibdim
  668.             if ( ibdim > 0 ) then
  668.                $I_L668_988 = 0
  668. !dir$ ivdep
  668.                do
  668.                   ulondp(1 + $I_L668_988, 4) = ulondp(1 + $I_L668_988, 1)
  668.                   $I_L668_988 = 1 + $I_L668_988
  668.                   if ( $I_L668_988 >= $F_A83 ) exit
  668.                enddo
  668.             endif
  668.          endif
  668.          iloc(1) = _copyout( iloc )
  668.          ulondp(1) = _copyout( ulondp )
  668.          (ulat2d%base_addr)(1, jb, 0) = _copyout( ulat )
  668.          (ulon2d%base_addr)(1, jb, 0) = _copyout( ulon )
  676.          if ( fa /= 0.0 ) then
  676.             $F_A84 = ibdim
  676.             if ( ibdim > 0 ) then
  676.                $SC_fgvdlnp_I585 = fgvdlnp%dim_1%EX
  676.                $I_L676_990 = 0
  676. !dir$ ivdep
  676.                do
  676.                   (fgvdlnpm%base_addr)(1 + $I_L676_990, jb, 0) = -5.0e-1 * (fgvdlnp%base_addr)(1 + $I_L676_990, jb, 0)
  676.                   $I_L676_990 = 1 + $I_L676_990
  676.                   if ( $I_L676_990 >= $F_A84 ) exit
  676.                enddo
  676.             endif
  676.          endif
  677.          ipa$1570 = loc( (fgpsp%base_addr)(fgpsp%dim_1%LB, fgpsp%dim_2%LB, 0) )
  677.          f = _copyin( (fgpsp%base_addr)(fgpsp%dim_1%LB, fgpsp%dim_2%LB, 0) )
  677.          ipa$1572 = loc( ulondp(1) )
  677.          ulondp = _copyin( ulondp(1) )
  677.          ipa$1574 = loc( iloc(1) )
  677.          iloc = _copyin( iloc(1) )
  677.          t$56 = ibdim
  677.          t$301 = max( 0, ibdim )
  677.          t$57 = ibmax
  677.          t$58 = jbmax_ext
  677.          t$302 = max( 0, ibmax )
  677.          t$303 = max( 0, ibmax )
  677.          t$304 = max( 0, jbmax_ext )
  677.          t$305 = max( 0, ibmax ) * max( 0, jbmax_ext )
  677.          t$306 = ibdim
  677.          t$307 = ( 4 * ibdim )
  677.          t$310 = 8 * max( 0, ibmax )
  677.          t$311 = 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  677.          t$313 = 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  677.          t$314 = 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 )
  677.          t$316 = 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 )
  677.          t$317 = 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
  677.          t$319 = 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
  677.          t$320 = 12 * max( 0, ibmax )
  677.          t$322 = 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 56 * max( 0, ibmax )
  677.          t$324 = 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 104 * max( 0, ibmax )
  677.          t$308 = int( _alloc( 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 104 * max( 0, ibmax ) ), 8 )
  677.          t$309 = t$308
  677.          t$312 = t$308 + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  677.          t$315 = t$308 + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 )
  677.          t$318 = t$308 + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
  677.          t$321 = t$308 + 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
  677.          t$323 = t$308 + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 56 * max( 0, ibmax )
  677.          if ( ibdim > 0 ) then
  677.             $I_L677_908 = 0
  677. !dir$ ivdep
  677.             do
  677.                jp = jmax + -jloc(1 + $I_L677_908) + 1
  677.                ip(1 + $I_L677_908, 1) = (ibperij%base_addr)(iloc(1 + $I_L677_908, 1), 1 + jp, 0)
  677.                ip(1 + $I_L677_908, 2) = (ibperij%base_addr)(1 + iloc(1 + $I_L677_908, 1), 1 + jp, 0)
  677.                ip(1 + $I_L677_908, 3) = (ibperij%base_addr)(-1 + iloc(1 + $I_L677_908, 2), jp, 0)
  677.                ip(1 + $I_L677_908, 4) = (ibperij%base_addr)(iloc(1 + $I_L677_908, 2), jp, 0)
  677.                ip(1 + $I_L677_908, 5) = (ibperij%base_addr)(1 + iloc(1 + $I_L677_908, 2), jp, 0)
  677.                ip(1 + $I_L677_908, 6) = (ibperij%base_addr)(2 + iloc(1 + $I_L677_908, 2), jp, 0)
  677.                ip(1 + $I_L677_908, 7) = (ibperij%base_addr)(-1 + iloc(1 + $I_L677_908, 3), -1 + jp, 0)
  677.                ip(1 + $I_L677_908, 8) = (ibperij%base_addr)(iloc(1 + $I_L677_908, 3), -1 + jp, 0)
  677.                ip(1 + $I_L677_908, 9) = (ibperij%base_addr)(1 + iloc(1 + $I_L677_908, 3), -1 + jp, 0)
  677.                ip(1 + $I_L677_908, 10) = (ibperij%base_addr)(2 + iloc(1 + $I_L677_908, 3), -1 + jp, 0)
  677.                ip(1 + $I_L677_908, 11) = (ibperij%base_addr)(iloc(1 + $I_L677_908, 4), -2 + jp, 0)
  677.                ip(1 + $I_L677_908, 12) = (ibperij%base_addr)(1 + iloc(1 + $I_L677_908, 4), -2 + jp, 0)
  677.                jn(1 + $I_L677_908, 1) = (jbperij%base_addr)(iloc(1 + $I_L677_908, 1), 1 + jp, 0)
  677.                jn(1 + $I_L677_908, 2) = (jbperij%base_addr)(1 + iloc(1 + $I_L677_908, 1), 1 + jp, 0)
  677.                jn(1 + $I_L677_908, 3) = (jbperij%base_addr)(-1 + iloc(1 + $I_L677_908, 2), jp, 0)
  677.                jn(1 + $I_L677_908, 4) = (jbperij%base_addr)(iloc(1 + $I_L677_908, 2), jp, 0)
  677.                jn(1 + $I_L677_908, 5) = (jbperij%base_addr)(1 + iloc(1 + $I_L677_908, 2), jp, 0)
  677.                jn(1 + $I_L677_908, 6) = (jbperij%base_addr)(2 + iloc(1 + $I_L677_908, 2), jp, 0)
  677.                jn(1 + $I_L677_908, 7) = (jbperij%base_addr)(-1 + iloc(1 + $I_L677_908, 3), -1 + jp, 0)
  677.                jn(1 + $I_L677_908, 8) = (jbperij%base_addr)(iloc(1 + $I_L677_908, 3), -1 + jp, 0)
  677.                jn(1 + $I_L677_908, 9) = (jbperij%base_addr)(1 + iloc(1 + $I_L677_908, 3), -1 + jp, 0)
  677.                jn(1 + $I_L677_908, 10) = (jbperij%base_addr)(2 + iloc(1 + $I_L677_908, 3), -1 + jp, 0)
  677.                jn(1 + $I_L677_908, 11) = (jbperij%base_addr)(iloc(1 + $I_L677_908, 4), -2 + jp, 0)
  677.                jn(1 + $I_L677_908, 12) = (jbperij%base_addr)(1 + iloc(1 + $I_L677_908, 4), -2 + jp, 0)
  677.                $I_L677_908 = 1 + $I_L677_908
  677.                if ( $I_L677_908 >= ibdim ) exit
  677.             enddo
  677.          endif
  677.          $Reduc_A85 = .false.
  677.          $F_A88 = ibdim
  677.          if ( ibdim > 0 ) then
  677.             $I_L677_1068 = 0
  677.             do
  677.                $I_L677_992 = 0
  677. !dir$ ivdep
  677.                do
  677.                   if ( ip(1 + $I_L677_992, 1 + $I_L677_1068) == 0 ) then
  677.                      $Reduc_A85 = .true.
  677.                      goto 30
  677.                   endif
  677.                   $I_L677_992 = 1 + $I_L677_992
  677.                   if ( $I_L677_992 >= $F_A88 ) exit
  677.                enddo
  677.                $I_L677_1068 = 1 + $I_L677_1068
  677.                if ( $I_L677_1068 >= 12 ) exit
  677.             enddo
  677.          endif
  677.    30    continue
  677.          if ( $Reduc_A85 ) then
  677.             $Unit_temp_O0 = nfprt
  677.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$60,  _substr(t$59,1,23), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Interpcublin2d)**', 0x800600000000L ) ) )
  677.             $Unit_temp_O1 = nfprt
  677.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$62,  _substr(t$61,1,47), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Interpcublin2d)**', 0x800600000000L ) ) )
  677.              _substr(t$581,1,20) = '**(Interpcublin2d)**'
  677.             call _stop(  _substr(t$581,1,20) )
  677.          else
  677.             if ( ibdim > 0 ) then
  677.                $I_L677_910 = 0
  677. !dir$ ivdep
  677.                do
  677.                   f1(1 + $I_L677_910) = f(ip(1 + $I_L677_910, 1), jn(1 + $I_L677_910, 1)) + ulondp(1 + $I_L677_910, 1) * ( f(ip(1 + $I_L677_910, 2), jn(1 + $I_L677_910, 2)) + -f(ip(1 + $I_L677_910, 1), jn(1 + $I_L677_910, 1)) )
  677.                   $s_S37 = -5.0e-1 + ulondp(1 + $I_L677_910, 2)
  677.                   fa = 5.0e-1 * ( f(ip(1 + $I_L677_910, 5), jn(1 + $I_L677_910, 5)) + f(ip(1 + $I_L677_910, 4), jn(1 + $I_L677_910, 4)) ) + $s_S37 * ( f(ip(1 + $I_L677_910, 5), jn(1 + $I_L677_910, 5)) + -f(ip(1 + $I_L677_910, 4), jn(1 + $I_L677_910, 4)) )
  677.                   fb = 5.0e-1 * ( f(ip(1 + $I_L677_910, 6), jn(1 + $I_L677_910, 6)) + f(ip(1 + $I_L677_910, 3), jn(1 + $I_L677_910, 3)) ) + $s_S37 * ( f(ip(1 + $I_L677_910, 6), jn(1 + $I_L677_910, 6)) + -f(ip(1 + $I_L677_910, 3), jn(1 + $I_L677_910, 3)) ) * 3.3333333333333331e-1
  677.                   f2(1 + $I_L677_910) = fa + ( 1.25e-1 + $s_S37 * $s_S37 * -5.0e-1 ) * ( fa + -fb )
  677.                   t = -5.0e-1 + ulondp(1 + $I_L677_910, 3)
  677.                   fc = 5.0e-1 * ( f(ip(1 + $I_L677_910, 9), jn(1 + $I_L677_910, 9)) + f(ip(1 + $I_L677_910, 8), jn(1 + $I_L677_910, 8)) ) + t * ( f(ip(1 + $I_L677_910, 9), jn(1 + $I_L677_910, 9)) + -f(ip(1 + $I_L677_910, 8), jn(1 + $I_L677_910, 8)) )
  677.                   fd = 5.0e-1 * ( f(ip(1 + $I_L677_910, 10), jn(1 + $I_L677_910, 10)) + f(ip(1 + $I_L677_910, 7), jn(1 + $I_L677_910, 7)) ) + t * ( f(ip(1 + $I_L677_910, 10), jn(1 + $I_L677_910, 10)) + -f(ip(1 + $I_L677_910, 7), jn(1 + $I_L677_910, 7)) ) * 3.3333333333333331e-1
  677.                   f3(1 + $I_L677_910) = fc + ( 1.25e-1 + t * t * -5.0e-1 ) * ( fc + -fd )
  677.                   f4(1 + $I_L677_910) = f(ip(1 + $I_L677_910, 11), jn(1 + $I_L677_910, 11)) + ulondp(1 + $I_L677_910, 4) * ( f(ip(1 + $I_L677_910, 12), jn(1 + $I_L677_910, 12)) + -f(ip(1 + $I_L677_910, 11), jn(1 + $I_L677_910, 11)) )
  677.                   $I_L677_910 = 1 + $I_L677_910
  677.                   if ( $I_L677_910 >= ibdim ) exit
  677.                enddo
  677.                $I_L677_912 = 0
  677. !dir$ ivdep
  677.                do
  677.                   j = jloc(1 + $I_L677_912)
  677.                   s = ulatdp(1 + $I_L677_912)
  677.                   t1 = 1.0 + -s
  677.                   t2 = (cubcoef%base_addr)(1 + $I_L677_912, j, 2, 0) + s
  677.                   t3 = (cubcoef%base_addr)(1 + $I_L677_912, j, 1, 0) + ( 1.0 + -s )
  677.                   t4 = s * t2
  677.                   fint(1 + $I_L677_912) = t3 * ( t1 * ( (cubcoef%base_addr)(1 + $I_L677_912, j, 3, 0) * s * f1(1 + $I_L677_912) + (cubcoef%base_addr)(1 + $I_L677_912, j, 4, 0) * t2 * f2(1 + $I_L677_912) ) + (cubcoef%base_addr)(1 + $I_L677_912, j, 5, 0) * t4 * f3(1 + $I_L677_912) ) + (cubcoef%base_addr)(1 + $I_L677_912, j, 6, 0) * t4 * t1 * f4(1 + $I_L677_912)
  677.                   $I_L677_912 = 1 + $I_L677_912
  677.                   if ( $I_L677_912 >= ibdim ) exit
  677.                enddo
  677.             endif
  677.             _free( t$308 )
  677.          endif
  677.          iloc(1) = _copyout( iloc )
  677.          ulondp(1) = _copyout( ulondp )
  677.          (fgpsp%base_addr)(fgpsp%dim_1%LB, fgpsp%dim_2%LB, 0) = _copyout( f )
  681.          $F_A89 = ibdim
  681.          if ( ibdim > 0 ) then
  681.             $SC_fgvdlnp_I585 = fgvdlnp%dim_1%EX
  681.             $I_L681_994 = 0
  681. !dir$ ivdep
  681.             do
  681.                (fgvdlnp%base_addr)(1 + $I_L681_994, jb, 0) = fint(1 + $I_L681_994) + dt2 * (fgvdlnp%base_addr)(1 + $I_L681_994, jb, 0)
  681.                $I_L681_994 = 1 + $I_L681_994
  681.                if ( $I_L681_994 >= $F_A89 ) exit
  681.             enddo
  681.          endif
  677.       enddo
  677.    40 continue
  686.       _mt_barrier( 12, _mt_rw_list(...) )
  687.       call vectorialtend( (fgqmm%base_addr)(fgqmm%dim_1%LB, fgqmm%dim_2%LB, fgqmm%dim_3%LB, 0), (fgtmm%base_addr)(fgtmm%dim_1%LB, fgtmm%dim_2%LB, fgtmm%dim_3%LB, 0) )
  691.       _mt_barrier( 13, _mt_rw_list(...) )
  692.       $snt_T8 = _mt_single( 14, _mt_rw_list(...) )
  693.       adr_scalars = 3 + -adr_scalars
  694.       jglob = 0
  695.       $snt_T8 = _mt_endsingle( 14, _mt_rw_list(...), $snt_T8 )
  696. !dir$ loop_info (automatic) cache_nt( ibmaxperjb )
  696.       do
  697.          $snt_T9 = _mt_critical( 15, _mt_rw_list(...) )
  698.          jglob = 1 + jglob
  699.          $j_S39 = jglob
  700.          $snt_T9 = _mt_endcritical( 15, _mt_rw_list(...), $snt_T9 )
  701.          if ( $j_S39 > jbmax ) goto 50
  703.          if ( fa /= 0.0 ) then
  703.             $F_A90 = fgyum%dim_2%EX
  703.             $F_A91 = fgyum%dim_1%EX
  703.             if ( and( -$F_A91, -$F_A90 ) < 0 ) then
  703.                $SC_fgyu_I455 = fgyu%dim_1%LB
  703.                $SC_fgyu_I456 = fgyu%dim_2%SM
  703.                $SC_fgyu_I457 = fgyu%dim_2%LB
  703.                $SC_fgyu_I459 = fgyu%dim_3%SM
  703.                $SC_fgyu_I458 = fgyu%dim_3%EX
  703.                $SC_fgyu_I460 = fgyu%dim_3%LB
  703.                $SC_fgyum_I461 = fgyum%dim_1%LB
  703.                $SC_fgyum_I462 = fgyum%dim_2%SM
  703.                $SC_fgyum_I463 = fgyum%dim_2%LB
  703.                $SC_fgyum_I465 = fgyum%dim_3%SM
  703.                $SC_fgyum_I464 = fgyum%dim_3%EX
  703.                $SC_fgyum_I466 = fgyum%dim_3%LB
  703.                $I_L703_1070 = 0
  703.                do
  703.                   $I_L703_996 = 0
  703. !dir$ ivdep
  703. !dir$ loop_info (automatic) cache_nt( fgyum )
  703.                   do
  703.                      (fgyum%base_addr)($SC_fgyum_I461 + $I_L703_996, $SC_fgyum_I463 + $I_L703_1070, $j_S39, 0) = -5.0e-1 * (fgyu%base_addr)($SC_fgyu_I455 + $I_L703_996, $SC_fgyu_I457 + $I_L703_1070, $j_S39, 0)
  703.                      $I_L703_996 = 1 + $I_L703_996
  703.                      if ( $I_L703_996 >= $F_A91 ) exit
  703.                   enddo
  703.                   $I_L703_1070 = 1 + $I_L703_1070
  703.                   if ( $I_L703_1070 >= $F_A90 ) exit
  703.                enddo
  703.             endif
  704.             $F_A92 = fgyvm%dim_2%EX
  704.             $F_A93 = fgyvm%dim_1%EX
  704.             if ( and( -$F_A93, -$F_A92 ) < 0 ) then
  704.                $SC_fgyv_I473 = fgyv%dim_1%LB
  704.                $SC_fgyv_I474 = fgyv%dim_2%SM
  704.                $SC_fgyv_I475 = fgyv%dim_2%LB
  704.                $SC_fgyv_I477 = fgyv%dim_3%SM
  704.                $SC_fgyv_I476 = fgyv%dim_3%EX
  704.                $SC_fgyv_I478 = fgyv%dim_3%LB
  704.                $SC_fgyvm_I479 = fgyvm%dim_1%LB
  704.                $SC_fgyvm_I480 = fgyvm%dim_2%SM
  704.                $SC_fgyvm_I481 = fgyvm%dim_2%LB
  704.                $SC_fgyvm_I483 = fgyvm%dim_3%SM
  704.                $SC_fgyvm_I482 = fgyvm%dim_3%EX
  704.                $SC_fgyvm_I484 = fgyvm%dim_3%LB
  704.                $I_L704_1072 = 0
  704.                do
  704.                   $I_L704_998 = 0
  704. !dir$ ivdep
  704. !dir$ loop_info (automatic) cache_nt( fgyvm )
  704.                   do
  704.                      (fgyvm%base_addr)($SC_fgyvm_I479 + $I_L704_998, $SC_fgyvm_I481 + $I_L704_1072, $j_S39, 0) = -5.0e-1 * (fgyv%base_addr)($SC_fgyv_I473 + $I_L704_998, $SC_fgyv_I475 + $I_L704_1072, $j_S39, 0)
  704.                      $I_L704_998 = 1 + $I_L704_998
  704.                      if ( $I_L704_998 >= $F_A93 ) exit
  704.                   enddo
  704.                   $I_L704_1072 = 1 + $I_L704_1072
  704.                   if ( $I_L704_1072 >= $F_A92 ) exit
  704.                enddo
  704.             endif
  704.          endif
  705.          $F_A94 = fgyu%dim_2%EX
  705.          $F_A95 = fgyu%dim_1%EX
  705.          if ( and( -$F_A95, -$F_A94 ) < 0 ) then
  705.             $SC_fgqmm_I580 = fgqmm%dim_1%LB
  705.             $SC_fgqmm_I586 = fgqmm%dim_2%SM
  705.             $SC_fgqmm_I587 = fgqmm%dim_2%LB
  705.             $SC_fgqmm_I589 = fgqmm%dim_3%SM
  705.             $SC_fgqmm_I588 = fgqmm%dim_3%EX
  705.             $SC_fgqmm_I590 = fgqmm%dim_3%LB
  705.             $SC_fgyu_I455 = fgyu%dim_1%LB
  705.             $SC_fgyu_I456 = fgyu%dim_2%SM
  705.             $SC_fgyu_I457 = fgyu%dim_2%LB
  705.             $SC_fgyu_I459 = fgyu%dim_3%SM
  705.             $SC_fgyu_I458 = fgyu%dim_3%EX
  705.             $SC_fgyu_I460 = fgyu%dim_3%LB
  705.             $I_L705_1074 = 0
  705.             do
  705.                $I_L705_1000 = 0
  705. !dir$ ivdep
  705. !dir$ loop_info (automatic) cache_nt( fgqmm )
  705.                do
  705.                   (fgyu%base_addr)($SC_fgyu_I455 + $I_L705_1000, $SC_fgyu_I457 + $I_L705_1074, $j_S39, 0) = (fgqmm%base_addr)($SC_fgqmm_I580 + $I_L705_1000, $SC_fgqmm_I587 + $I_L705_1074, $j_S39, 0) + dt2 * (fgyu%base_addr)($SC_fgyu_I455 + $I_L705_1000, $SC_fgyu_I457 + $I_L705_1074, $j_S39, 0)
  705.                   $I_L705_1000 = 1 + $I_L705_1000
  705.                   if ( $I_L705_1000 >= $F_A95 ) exit
  705.                enddo
  705.                $I_L705_1074 = 1 + $I_L705_1074
  705.                if ( $I_L705_1074 >= $F_A94 ) exit
  705.             enddo
  705.          endif
  706.          $F_A96 = fgyv%dim_2%EX
  706.          $F_A97 = fgyv%dim_1%EX
  706.          if ( and( -$F_A97, -$F_A96 ) < 0 ) then
  706.             $SC_fgtmm_I582 = fgtmm%dim_1%LB
  706.             $SC_fgtmm_I591 = fgtmm%dim_2%SM
  706.             $SC_fgtmm_I592 = fgtmm%dim_2%LB
  706.             $SC_fgtmm_I594 = fgtmm%dim_3%SM
  706.             $SC_fgtmm_I593 = fgtmm%dim_3%EX
  706.             $SC_fgtmm_I595 = fgtmm%dim_3%LB
  706.             $SC_fgyv_I473 = fgyv%dim_1%LB
  706.             $SC_fgyv_I474 = fgyv%dim_2%SM
  706.             $SC_fgyv_I475 = fgyv%dim_2%LB
  706.             $SC_fgyv_I477 = fgyv%dim_3%SM
  706.             $SC_fgyv_I476 = fgyv%dim_3%EX
  706.             $SC_fgyv_I478 = fgyv%dim_3%LB
  706.             $I_L706_1076 = 0
  706.             do
  706.                $I_L706_1002 = 0
  706. !dir$ ivdep
  706. !dir$ loop_info (automatic) cache_nt( fgtmm )
  706.                do
  706.                   (fgyv%base_addr)($SC_fgyv_I473 + $I_L706_1002, $SC_fgyv_I475 + $I_L706_1076, $j_S39, 0) = (fgtmm%base_addr)($SC_fgtmm_I582 + $I_L706_1002, $SC_fgtmm_I592 + $I_L706_1076, $j_S39, 0) + dt2 * (fgyv%base_addr)($SC_fgyv_I473 + $I_L706_1002, $SC_fgyv_I475 + $I_L706_1076, $j_S39, 0)
  706.                   $I_L706_1002 = 1 + $I_L706_1002
  706.                   if ( $I_L706_1002 >= $F_A97 ) exit
  706.                enddo
  706.                $I_L706_1076 = 1 + $I_L706_1076
  706.                if ( $I_L706_1076 >= $F_A96 ) exit
  706.             enddo
  706.          endif
  707.          $F_A98 = fgwm%dim_2%EX
  707.          $F_A99 = fgwm%dim_1%EX
  707.          if ( and( -$F_A99, -$F_A98 ) < 0 ) then
  707.             $SC_fgw_I435 = fgw%dim_1%LB
  707.             $SC_fgw_I437 = fgw%dim_2%SM
  707.             $SC_fgw_I438 = fgw%dim_2%LB
  707.             $SC_fgw_I440 = fgw%dim_3%SM
  707.             $SC_fgw_I439 = fgw%dim_3%EX
  707.             $SC_fgw_I441 = fgw%dim_3%LB
  707.             $SC_fgwm_I428 = fgwm%dim_1%LB
  707.             $SC_fgwm_I429 = fgwm%dim_2%SM
  707.             $SC_fgwm_I430 = fgwm%dim_2%LB
  707.             $SC_fgwm_I432 = fgwm%dim_3%SM
  707.             $SC_fgwm_I431 = fgwm%dim_3%EX
  707.             $SC_fgwm_I433 = fgwm%dim_3%LB
  707.             $I_L707_1078 = 0
  707.             do
  707.                $I_L707_1004 = 0
  707. !dir$ ivdep
  707. !dir$ loop_info (automatic) cache_nt( fgw, fgwm )
  707.                do
  707.                   (fgwm%base_addr)($SC_fgwm_I428 + $I_L707_1004, $SC_fgwm_I430 + $I_L707_1078, $j_S39, 0) = (fgw%base_addr)($SC_fgw_I435 + $I_L707_1004, $SC_fgw_I438 + $I_L707_1078, $j_S39, 0)
  707.                   $I_L707_1004 = 1 + $I_L707_1004
  707.                   if ( $I_L707_1004 >= $F_A99 ) exit
  707.                enddo
  707.                $I_L707_1078 = 1 + $I_L707_1078
  707.                if ( $I_L707_1078 >= $F_A98 ) exit
  707.             enddo
  707.          endif
  711.          $t_S40 = (ibmaxperjb%base_addr)($j_S39, 0)
  711.          if ( $t_S40 > 0 ) then
  714.             $SC_fgv_I419 = fgv%dim_1%EX
  714.             $SC_fgv_I420 = fgv%dim_1%LB
  714.             $SC_fgv_I421 = fgv%dim_2%SM
  714.             $SC_fgv_I410 = fgv%dim_2%EX
  714.             $SC_fgv_I422 = fgv%dim_2%LB
  714.             $SC_fgv_I424 = fgv%dim_3%SM
  714.             $SC_fgv_I423 = fgv%dim_3%EX
  714.             $SC_fgv_I425 = fgv%dim_3%LB
  713.             $SC_fgu_I403 = fgu%dim_1%EX
  713.             $SC_fgu_I404 = fgu%dim_1%LB
  713.             $SC_fgu_I405 = fgu%dim_2%SM
  713.             $SC_fgu_I394 = fgu%dim_2%EX
  713.             $SC_fgu_I406 = fgu%dim_2%LB
  713.             $SC_fgu_I408 = fgu%dim_3%SM
  713.             $SC_fgu_I407 = fgu%dim_3%EX
  713.             $SC_fgu_I409 = fgu%dim_3%LB
  712.             $SC_coslat_I389 = coslat%dim_1%EX
  712.             $SC_coslat_I390 = coslat%dim_1%LB
  712.             $SC_coslat_I392 = coslat%dim_2%SM
  712.             $SC_coslat_I391 = coslat%dim_2%EX
  712.             $SC_coslat_I393 = coslat%dim_2%LB
  711.             $I_L711_1042 = 0
  711. !dir$ loop_info (automatic) cache_nt( coslat )
  711.             do
  712.                $aux_S42 = 6370000.0 * (coslat%base_addr)(1 + $I_L711_1042, $j_S39, 0)
  713.                $F_A100 = $SC_fgu_I394
  713.                if ( $SC_fgu_I394 > 0 ) then
  713.                   $I_L713_1006 = 0
  713. !dir$ ivdep
  713.                   do
  713.                      (fgu%base_addr)(1 + $I_L711_1042, $SC_fgu_I406 + $I_L713_1006, $j_S39, 0) = (fgu%base_addr)(1 + $I_L711_1042, $SC_fgu_I406 + $I_L713_1006, $j_S39, 0) * $aux_S42
  713.                      $I_L713_1006 = 1 + $I_L713_1006
  713.                      if ( $I_L713_1006 >= $F_A100 ) exit
  713.                   enddo
  713.                endif
  714.                $F_A101 = $SC_fgv_I410
  714.                if ( $SC_fgv_I410 > 0 ) then
  714.                   $I_L714_1008 = 0
  714. !dir$ ivdep
  714.                   do
  714.                      (fgv%base_addr)(1 + $I_L711_1042, $SC_fgv_I422 + $I_L714_1008, $j_S39, 0) = (fgv%base_addr)(1 + $I_L711_1042, $SC_fgv_I422 + $I_L714_1008, $j_S39, 0) * $aux_S42
  714.                      $I_L714_1008 = 1 + $I_L714_1008
  714.                      if ( $I_L714_1008 >= $F_A101 ) exit
  714.                   enddo
  714.                endif
  715.                $I_L711_1042 = 1 + $I_L711_1042
  711.                if ( $I_L711_1042 >= $t_S40 ) exit
  711.             enddo
  711.          endif
  715.       enddo
  715.    50 continue
  444.       _free( t$121 )
  718.       return
  718.       end
  718.       
  719.       
  719.       subroutine trajectory_2l( ulonm, ulatm, usig, ulon, ulat, ulondp, ulatdp, usigdp, iloc, jloc, kloc, ibdim, jb, nit, delt, ip, jn )
  719.       t$14 = ibdim
  719.       t$15 = kmax
  742.       t$157 = _zla( 0, ibdim )
  719.       t$158 = _zla( 0, ibdim )
  742.       t$159 = _zla( 0, kmax )
  719.       t$160 = _zla( 0, ibdim ) * _zla( 0, kmax )
  719.       t$16 = ibmax
  739.       t$161 = _zla( 0, ibmax )
  719.       t$162 = _zla( 0, ibmax )
  719.       t$163 = _zla( 0, kmax ) * _zla( 0, ibmax )
  719.       t$164 = _zla( 0, ibdim ) * _zla( 0, kmax )
  719.       t$165 = _zla( 0, ibdim ) * _zla( 0, kmax ) * 4
  719.       t$17 = ( kmax * ibmax )
  753.       t$166 = _zla( 0, ( kmax * ibmax ) )
  753.       t$169 = 8 * _zla( 0, ( kmax * ibmax ) )
  754.       t$170 = 8 * _zla( 0, ( kmax * ibmax ) )
  754.       t$172 = 16 * _zla( 0, ( kmax * ibmax ) )
  755.       t$173 = 16 * _zla( 0, ( kmax * ibmax ) )
  755.       t$175 = 24 * _zla( 0, ( kmax * ibmax ) )
  719.       t$167 = int( _alloc( 24 * _zla( 0, ( kmax * ibmax ) ) ), 8 )
  753.       t$168 = t$167
  754.       t$171 = t$167 + 8 * _zla( 0, ( kmax * ibmax ) )
  755.       t$174 = t$167 + 16 * _zla( 0, ( kmax * ibmax ) )
  762.       if ( nit > 0 ) then
  762.          $I_L762_276 = 0
  762.          do
  768.             ipa$1633 = loc( ulon(1, 1) )
  768.             ulon = _copyin( ulon(1, 1) )
  768.             ipa$1635 = loc( ulat(1, 1) )
  768.             ulat = _copyin( ulat(1, 1) )
  768.             ipa$1637 = loc( ulondp(1, 1, 1) )
  768.             ulondp = _copyin( ulondp(1, 1, 1) )
  768.             ipa$1639 = loc( iloc(1, 1, 1) )
  768.             iloc = _copyin( iloc(1, 1, 1) )
  768.             t$38 = ibdim
  768.             t$39 = kmax
  768.             t$255 = _zla( 0, ibdim )
  768.             t$256 = ibdim
  768.             t$257 = _zla( 0, kmax )
  768.             t$258 = ibdim * _zla( 0, kmax )
  768.             t$259 = ibdim * _zla( 0, kmax )
  768.             t$260 = ibdim * _zla( 0, kmax ) * 4
  768.             if ( $I_L762_276 == 0 ) then
  768.                if ( kmax > 0 ) then
  768.                   if ( ibdim > 0 ) then
  768.                      $I_L768_237 = 0
  768. !dir$ blocking_size( 0, 0 )
  768.                      do
  768.                         $I_L768_202 = 0
  768. !dir$ ivdep
  768. !dir$ blocking_size( 0, 0 )
  768.                         do
  768.                            $ik_S3 = int( ( ( usig(1 + $I_L768_202, 1 + $I_L768_237) + -(sigma%base_addr)(1 + $I_L768_202, 1, 0) ) * 1.0/delsigref ) )
  768.                            $kloc_WR0_R0 = (ksigref%base_addr)(1 + $I_L768_202, $ik_S3, 0)
  768.                            kloc(1 + $I_L768_202, 1 + $I_L768_237) = $kloc_WR0_R0
  768.                            if ( usig(1 + $I_L768_202, 1 + $I_L768_237) > (sigma%base_addr)(1 + $I_L768_202, 1 + $kloc_WR0_R0, 0) ) then
  768.                               $kloc_WR0_R0 = 1 + $kloc_WR0_R0
  768.                               kloc(1 + $I_L768_202, 1 + $I_L768_237) = $kloc_WR0_R0
  768.                            endif
  768.                            usigdp(1 + $I_L768_202, 1 + $I_L768_237) = ( ( usig(1 + $I_L768_202, 1 + $I_L768_237) + -(sigma%base_addr)(1 + $I_L768_202, $kloc_WR0_R0, 0) ) * 1.0/(delsigma%base_addr)(1 + $I_L768_202, $kloc_WR0_R0, 0) )
  768.                            $I_L768_202 = 1 + $I_L768_202
  768.                            if ( $I_L768_202 >= ibdim ) exit
  768.                         enddo
  768.                         $I_L768_237 = 1 + $I_L768_237
  768.                         if ( $I_L768_237 >= kmax ) exit
  768.                      enddo
  768.                   endif
  768.                endif
  768.             endif
  768.             if ( cvmg( 2, 1, reducedgrid ) == 4 ) then
  768.                kp(1) = -1
  768.                kp(2) = 0
  768.                kp(3) = 1
  768.                kp(4) = 2
  768.             else
  768.                kp(1) = 0
  768.                kp(2) = 1
  768.             endif
  768.             if ( kmax > 0 ) then
  768.                if ( ibdim > 0 ) then
  768.                   $I_L768_239 = 0
  768.                   do
  768.                      $I_L768_204 = 0
  768. !dir$ ivdep
  768.                      do
  768.                         $ik_S6 = int( ( ( 1.570796326794895 + ulat(1 + $I_L768_204, 1 + $I_L768_239) ) * 1.0/delphiref ) )
  768.                         $jloc_WR0_R1 = (jphiref%base_addr)(1 + $I_L768_204, $ik_S6, 0)
  768.                         jloc(1 + $I_L768_204, 1 + $I_L768_239) = $jloc_WR0_R1
  768.                         if ( ulat(1 + $I_L768_204, 1 + $I_L768_239) > (phi%base_addr)(1 + $I_L768_204, 1 + $jloc_WR0_R1, 0) ) then
  768.                            $jloc_WR0_R1 = 1 + $jloc_WR0_R1
  768.                            jloc(1 + $I_L768_204, 1 + $I_L768_239) = $jloc_WR0_R1
  768.                         endif
  768.                         ulatdp(1 + $I_L768_204, 1 + $I_L768_239) = ( ( ulat(1 + $I_L768_204, 1 + $I_L768_239) + -(phi%base_addr)(1 + $I_L768_204, $jloc_WR0_R1, 0) ) * 1.0/(delphi%base_addr)(1 + $I_L768_204, $jloc_WR0_R1, 0) )
  768.                         $I_L768_204 = 1 + $I_L768_204
  768.                         if ( $I_L768_204 >= ibdim ) exit
  768.                      enddo
  768.                      $I_L768_239 = 1 + $I_L768_239
  768.                      if ( $I_L768_239 >= kmax ) exit
  768.                   enddo
  768.                endif
  768.             endif
  768.             if ( cvmg( 2, 1, reducedgrid ) > 0 ) then
  768.                if ( kmax > 0 ) then
  768.                   if ( ibdim > 0 ) then
  768.                      $I_L768_274 = 0
  768.                      do
  768.                         $I_L768_272 = 0
  768.                         do
  768.                            $I_L768_268 = 0
  768.                            if ( cvmg( 2, 1, reducedgrid ) >= 4 ) then
  768.                               $I_L768_281 = 0
  768. !dir$ blocking_size( 4, 4 )
  768.                               do
  768.                                  $ks#1_U0 = kp(1 + 4 * $I_L768_281)
  768.                                  $ks#2_U1 = kp(2 + 4 * $I_L768_281)
  768.                                  $ks#3_U2 = kp(3 + 4 * $I_L768_281)
  768.                                  $ks#4_U3 = kp(4 + 4 * $I_L768_281)
  768.                                  $I_L768_265 = 0
  768. !dir$ shortloop16
  768. !dir$ blocking_size( 8, 8 )
  768.                                  do
  768.                                     $I_L768_206 = 0
  768. !dir$ ivdep
  768. !dir$ blocking_size( 256, 256 )
  768.                                     do
  768.                                        $j_S11 = jmax + -jloc($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1) + 1
  768.                                        $ulondp_WR0_R2 = 1.0 + ( ulon($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1) * 1.0/(dellon%base_addr)($I_L768_206 + 256 * $I_L768_272 + 1, $j_S11 + -$ks#1_U0, 0) )
  768.                                        iloc($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1, 1 + 4 * $I_L768_281) = int( $ulondp_WR0_R2 )
  768.                                        $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  768.                                        ulondp($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1, 1 + 4 * $I_L768_281) = $ulondp_WR0_R2
  768.                                        $j_S11 = jmax + -jloc($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1) + 1
  768.                                        $ulondp_WR0_R2 = 1.0 + ( ulon($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1) * 1.0/(dellon%base_addr)($I_L768_206 + 256 * $I_L768_272 + 1, $j_S11 + -$ks#2_U1, 0) )
  768.                                        iloc($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1, 2 + 4 * $I_L768_281) = int( $ulondp_WR0_R2 )
  768.                                        $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  768.                                        ulondp($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1, 2 + 4 * $I_L768_281) = $ulondp_WR0_R2
  768.                                        $j_S11 = jmax + -jloc($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1) + 1
  768.                                        $ulondp_WR0_R2 = 1.0 + ( ulon($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1) * 1.0/(dellon%base_addr)($I_L768_206 + 256 * $I_L768_272 + 1, $j_S11 + -$ks#3_U2, 0) )
  768.                                        iloc($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1, 3 + 4 * $I_L768_281) = int( $ulondp_WR0_R2 )
  768.                                        $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  768.                                        ulondp($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1, 3 + 4 * $I_L768_281) = $ulondp_WR0_R2
  768.                                        $j_S11 = jmax + -jloc($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1) + 1
  768.                                        $ulondp_WR0_R2 = 1.0 + ( ulon($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1) * 1.0/(dellon%base_addr)($I_L768_206 + 256 * $I_L768_272 + 1, $j_S11 + -$ks#4_U3, 0) )
  768.                                        iloc($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1, 4 + 4 * $I_L768_281) = int( $ulondp_WR0_R2 )
  768.                                        $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  768.                                        ulondp($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1, 4 + 4 * $I_L768_281) = $ulondp_WR0_R2
  768.                                        $I_L768_206 = 1 + $I_L768_206
  768.                                        if ( $I_L768_206 >= min( ibdim, 256 + 256 * $I_L768_272 ) + -256 * $I_L768_272 ) exit
  768.                                     enddo
  768.                                     $I_L768_265 = 1 + $I_L768_265
  768.                                     if ( $I_L768_265 >= min( kmax, 8 + 8 * $I_L768_274 ) + -8 * $I_L768_274 ) exit
  768.                                  enddo
  768.                                  $I_L768_281 = 1 + $I_L768_281
  768.                                  if ( $I_L768_281 >= _rsh( cvmg( 2, 1, reducedgrid ), 2 ) ) exit
  768.                               enddo
  768.                               $I_L768_268 = and( 0xfffffffffffffffcUL, cvmg( 2, 1, reducedgrid ) )
  768.                            endif
  768.                            if ( $I_L768_268 < cvmg( 2, 1, reducedgrid ) ) then
  768.                               $I_L768_278 = 0
  768. !dir$ blocking_size( 4, 4 )
  768.                               do
  768.                                  $ks_S10 = kp($I_L768_268 + $I_L768_278 + 1)
  768.                                  $I_L768_265 = 0
  768. !dir$ shortloop16
  768. !dir$ blocking_size( 8, 8 )
  768.                                  do
  768.                                     $I_L768_206 = 0
  768. !dir$ ivdep
  768. !dir$ blocking_size( 256, 256 )
  768.                                     do
  768.                                        $j_S11 = jmax + -jloc($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1) + 1
  768.                                        $ulondp_WR0_R2 = 1.0 + ( ulon($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1) * 1.0/(dellon%base_addr)($I_L768_206 + 256 * $I_L768_272 + 1, $j_S11 + -$ks_S10, 0) )
  768.                                        iloc($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1, $I_L768_268 + $I_L768_278 + 1) = int( $ulondp_WR0_R2 )
  768.                                        $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  768.                                        ulondp($I_L768_206 + 256 * $I_L768_272 + 1, $I_L768_265 + 8 * $I_L768_274 + 1, $I_L768_268 + $I_L768_278 + 1) = $ulondp_WR0_R2
  768.                                        $I_L768_206 = 1 + $I_L768_206
  768.                                        if ( $I_L768_206 >= min( ibdim, 256 + 256 * $I_L768_272 ) + -256 * $I_L768_272 ) exit
  768.                                     enddo
  768.                                     $I_L768_265 = 1 + $I_L768_265
  768.                                     if ( $I_L768_265 >= min( kmax, 8 + 8 * $I_L768_274 ) + -8 * $I_L768_274 ) exit
  768.                                  enddo
  768.                                  $I_L768_278 = 1 + $I_L768_278
  768.                                  if ( $I_L768_278 >= -$I_L768_268 + cvmg( 2, 1, reducedgrid ) ) exit
  768.                               enddo
  768.                            endif
  768.                            $I_L768_272 = 1 + $I_L768_272
  768.                            if ( $I_L768_272 >= 1 + max( 0, -1 + _rsh( 255 + ibdim, 8 ) ) ) exit
  768.                         enddo
  768.                         $I_L768_274 = 1 + $I_L768_274
  768.                         if ( $I_L768_274 >= 1 + max( 0, -1 + _rsh( 7 + kmax, 3 ) ) ) exit
  768.                      enddo
  768.                   endif
  768.                endif
  768.             endif
  768.             if ( cvmg( 2, 1, reducedgrid ) == 1 ) then
  768.                $F_A34 = kmax
  768.                $F_A35 = ibdim
  768.                if ( and( -$F_A35, -$F_A34 ) < 0 ) then
  768.                   $I_L768_251 = 0
  768.                   do
  768.                      $I_L768_223 = 0
  768. !dir$ ivdep
  768.                      do
  768.                         iloc(1 + $I_L768_223, 1 + $I_L768_251, 2) = iloc(1 + $I_L768_223, 1 + $I_L768_251, 1)
  768.                         $I_L768_223 = 1 + $I_L768_223
  768.                         if ( $I_L768_223 >= $F_A35 ) exit
  768.                      enddo
  768.                      $I_L768_251 = 1 + $I_L768_251
  768.                      if ( $I_L768_251 >= $F_A34 ) exit
  768.                   enddo
  768.                endif
  768.                $F_A36 = kmax
  768.                $F_A37 = ibdim
  768.                if ( and( -$F_A37, -$F_A36 ) < 0 ) then
  768.                   $I_L768_253 = 0
  768.                   do
  768.                      $I_L768_225 = 0
  768. !dir$ ivdep
  768.                      do
  768.                         iloc(1 + $I_L768_225, 1 + $I_L768_253, 3) = iloc(1 + $I_L768_225, 1 + $I_L768_253, 1)
  768.                         $I_L768_225 = 1 + $I_L768_225
  768.                         if ( $I_L768_225 >= $F_A37 ) exit
  768.                      enddo
  768.                      $I_L768_253 = 1 + $I_L768_253
  768.                      if ( $I_L768_253 >= $F_A36 ) exit
  768.                   enddo
  768.                endif
  768.                $F_A38 = kmax
  768.                $F_A39 = ibdim
  768.                if ( and( -$F_A39, -$F_A38 ) < 0 ) then
  768.                   $I_L768_255 = 0
  768.                   do
  768.                      $I_L768_227 = 0
  768. !dir$ ivdep
  768.                      do
  768.                         iloc(1 + $I_L768_227, 1 + $I_L768_255, 4) = iloc(1 + $I_L768_227, 1 + $I_L768_255, 1)
  768.                         $I_L768_227 = 1 + $I_L768_227
  768.                         if ( $I_L768_227 >= $F_A39 ) exit
  768.                      enddo
  768.                      $I_L768_255 = 1 + $I_L768_255
  768.                      if ( $I_L768_255 >= $F_A38 ) exit
  768.                   enddo
  768.                endif
  768.                $F_A40 = kmax
  768.                $F_A41 = ibdim
  768.                if ( and( -$F_A41, -$F_A40 ) < 0 ) then
  768.                   $I_L768_257 = 0
  768.                   do
  768.                      $I_L768_229 = 0
  768. !dir$ ivdep
  768.                      do
  768.                         ulondp(1 + $I_L768_229, 1 + $I_L768_257, 2) = ulondp(1 + $I_L768_229, 1 + $I_L768_257, 1)
  768.                         $I_L768_229 = 1 + $I_L768_229
  768.                         if ( $I_L768_229 >= $F_A41 ) exit
  768.                      enddo
  768.                      $I_L768_257 = 1 + $I_L768_257
  768.                      if ( $I_L768_257 >= $F_A40 ) exit
  768.                   enddo
  768.                endif
  768.                $F_A42 = kmax
  768.                $F_A43 = ibdim
  768.                if ( and( -$F_A43, -$F_A42 ) < 0 ) then
  768.                   $I_L768_259 = 0
  768.                   do
  768.                      $I_L768_231 = 0
  768. !dir$ ivdep
  768.                      do
  768.                         ulondp(1 + $I_L768_231, 1 + $I_L768_259, 3) = ulondp(1 + $I_L768_231, 1 + $I_L768_259, 1)
  768.                         $I_L768_231 = 1 + $I_L768_231
  768.                         if ( $I_L768_231 >= $F_A43 ) exit
  768.                      enddo
  768.                      $I_L768_259 = 1 + $I_L768_259
  768.                      if ( $I_L768_259 >= $F_A42 ) exit
  768.                   enddo
  768.                endif
  768.                $F_A44 = kmax
  768.                $F_A45 = ibdim
  768.                if ( and( -$F_A45, -$F_A44 ) < 0 ) then
  768.                   $I_L768_261 = 0
  768.                   do
  768.                      $I_L768_233 = 0
  768. !dir$ ivdep
  768.                      do
  768.                         ulondp(1 + $I_L768_233, 1 + $I_L768_261, 4) = ulondp(1 + $I_L768_233, 1 + $I_L768_261, 1)
  768.                         $I_L768_233 = 1 + $I_L768_233
  768.                         if ( $I_L768_233 >= $F_A45 ) exit
  768.                      enddo
  768.                      $I_L768_261 = 1 + $I_L768_261
  768.                      if ( $I_L768_261 >= $F_A44 ) exit
  768.                   enddo
  768.                endif
  768.             endif
  768.             iloc(1, 1, 1) = _copyout( iloc )
  768.             ulondp(1, 1, 1) = _copyout( ulondp )
  768.             ulat(1, 1) = _copyout( ulat )
  768.             ulon(1, 1) = _copyout( ulon )
  777.             ipa$1689 = loc( wint(1) )
  777.             fint = _copyin( wint(1) )
  777.             ipa$1691 = loc( (fgwm%base_addr)(fgwm%dim_1%LB, fgwm%dim_2%LB, fgwm%dim_3%LB, 0) )
  777.             f = _copyin( (fgwm%base_addr)(fgwm%dim_1%LB, fgwm%dim_2%LB, fgwm%dim_3%LB, 0) )
  777.             ipa$1693 = loc( ulondp(1, 1, 1) )
  777.             ulondp = _copyin( ulondp(1, 1, 1) )
  777.             ipa$1695 = loc( iloc(1, 1, 1) )
  777.             iloc = _copyin( iloc(1, 1, 1) )
  777.             ipa$1697 = loc( ip(1, 1, 1) )
  777.             ip = _copyin( ip(1, 1, 1) )
  777.             ipa$1699 = loc( jn(1, 1, 1) )
  777.             jn = _copyin( jn(1, 1, 1) )
  777.             t$48 = ibdim
  777.             t$49 = kmax
  777.             t$289 = max( 0, ibdim )
  777.             t$290 = ibdim
  777.             t$291 = max( 0, kmax )
  777.             t$292 = ibdim * max( 0, kmax )
  777.             t$50 = ibmax
  777.             t$51 = jbmax_ext
  777.             t$293 = max( 0, ibmax )
  777.             t$294 = max( 0, ibmax )
  777.             t$295 = max( 0, kmax ) * max( 0, ibmax )
  777.             t$296 = max( 0, jbmax_ext )
  777.             t$297 = max( 0, kmax ) * max( 0, ibmax ) * max( 0, jbmax_ext )
  777.             t$298 = ibdim * max( 0, kmax )
  777.             t$299 = ibdim * max( 0, kmax ) * 2
  777.             t$300 = ibdim * max( 0, kmax ) * 4
  777.             if ( kmax > 0 ) then
  777.                if ( ibdim > 0 ) then
  777.                   $I_L777_241 = 0
  777.                   do
  777.                      $I_L777_209 = 0
  777. !dir$ ivdep
  777.                      do
  777.                         $jp_S14 = jmax + -jloc(1 + $I_L777_209, 1 + $I_L777_241) + 1
  777.                         ip(1 + $I_L777_209, 1 + $I_L777_241, 1) = (ibperij%base_addr)(iloc(1 + $I_L777_209, 1 + $I_L777_241, 1), $jp_S14, 0)
  777.                         ip(1 + $I_L777_209, 1 + $I_L777_241, 2) = (ibperij%base_addr)(iloc(1 + $I_L777_209, 1 + $I_L777_241, 2), -1 + $jp_S14, 0)
  777.                         ip(1 + $I_L777_209, 1 + $I_L777_241, 3) = (ibperij%base_addr)(1 + iloc(1 + $I_L777_209, 1 + $I_L777_241, 1), $jp_S14, 0)
  777.                         ip(1 + $I_L777_209, 1 + $I_L777_241, 4) = (ibperij%base_addr)(1 + iloc(1 + $I_L777_209, 1 + $I_L777_241, 2), -1 + $jp_S14, 0)
  777.                         jn(1 + $I_L777_209, 1 + $I_L777_241, 1) = (jbperij%base_addr)(iloc(1 + $I_L777_209, 1 + $I_L777_241, 1), $jp_S14, 0)
  777.                         jn(1 + $I_L777_209, 1 + $I_L777_241, 2) = (jbperij%base_addr)(iloc(1 + $I_L777_209, 1 + $I_L777_241, 2), -1 + $jp_S14, 0)
  777.                         jn(1 + $I_L777_209, 1 + $I_L777_241, 3) = (jbperij%base_addr)(1 + iloc(1 + $I_L777_209, 1 + $I_L777_241, 1), $jp_S14, 0)
  777.                         jn(1 + $I_L777_209, 1 + $I_L777_241, 4) = (jbperij%base_addr)(1 + iloc(1 + $I_L777_209, 1 + $I_L777_241, 2), -1 + $jp_S14, 0)
  777.                         $I_L777_209 = 1 + $I_L777_209
  777.                         if ( $I_L777_209 >= ibdim ) exit
  777.                      enddo
  777.                      $I_L777_241 = 1 + $I_L777_241
  777.                      if ( $I_L777_241 >= kmax ) exit
  777.                   enddo
  777.                endif
  777.             endif
  777.             $Reduc_A46 = .false.
  777.             $F_A50 = kmax
  777.             $F_A51 = ibdim
  777.             if ( and( -$F_A51, -$F_A50 ) < 0 ) then
  777.                $I_L777_270 = 0
  777.                do
  777.                   $I_L777_263 = 0
  777.                   do
  777.                      $I_L777_235 = 0
  777. !dir$ ivdep
  777.                      do
  777.                         if ( ip(1 + $I_L777_235, 1 + $I_L777_263, 1 + $I_L777_270) == 0 ) then
  777.                            $Reduc_A46 = .true.
  777.                            goto 10
  777.                         endif
  777.                         $I_L777_235 = 1 + $I_L777_235
  777.                         if ( $I_L777_235 >= $F_A51 ) exit
  777.                      enddo
  777.                      $I_L777_263 = 1 + $I_L777_263
  777.                      if ( $I_L777_263 >= $F_A50 ) exit
  777.                   enddo
  777.                   $I_L777_270 = 1 + $I_L777_270
  777.                   if ( $I_L777_270 >= 4 ) exit
  777.                enddo
  777.             endif
  777.    10       continue
  777.             if ( $Reduc_A46 ) then
  777.                $Unit_temp_O0 = nfprt
  777.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$53,  _substr(t$52,1,23), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(InterplG)**', 0x800600000000L ) ) )
  777.                $Unit_temp_O1 = nfprt
  777.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$55,  _substr(t$54,1,47), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(InterplG)**', 0x800600000000L ) ) )
  777.                 _substr(t$571,1,14) = '**(InterplG)**'
  777.                call _stop(  _substr(t$571,1,14) )
  777.             else if ( kmax > 0 ) then
  777.                if ( ibdim > 0 ) then
  777.                   $I_L777_243 = 0
  777.                   do
  777.                      $I_L777_211 = 0
  777. !dir$ ivdep
  777.                      do
  777.                         $f1_S18 = f(ip(1 + $I_L777_211, 1 + $I_L777_243, 1), kloc(1 + $I_L777_211, 1 + $I_L777_243), jn(1 + $I_L777_211, 1 + $I_L777_243, 1)) + ulondp(1 + $I_L777_211, 1 + $I_L777_243, 1) * ( f(ip(1 + $I_L777_211, 1 + $I_L777_243, 3), kloc(1 + $I_L777_211, 1 + $I_L777_243), jn(1 + $I_L777_211, 1 + $I_L777_243, 3)) + -f(ip(1 + $I_L777_211, 1 + $I_L777_243, 1), kloc(1 + $I_L777_211, 1 + $I_L777_243), jn(1 + $I_L777_211, 1 + $I_L777_243, 1)) )
  777.                         $f2_S20 = f(ip(1 + $I_L777_211, 1 + $I_L777_243, 2), kloc(1 + $I_L777_211, 1 + $I_L777_243), jn(1 + $I_L777_211, 1 + $I_L777_243, 2)) + ulondp(1 + $I_L777_211, 1 + $I_L777_243, 2) * ( f(ip(1 + $I_L777_211, 1 + $I_L777_243, 4), kloc(1 + $I_L777_211, 1 + $I_L777_243), jn(1 + $I_L777_211, 1 + $I_L777_243, 4)) + -f(ip(1 + $I_L777_211, 1 + $I_L777_243, 2), kloc(1 + $I_L777_211, 1 + $I_L777_243), jn(1 + $I_L777_211, 1 + $I_L777_243, 2)) )
  777.                         $f3_S19 = f(ip(1 + $I_L777_211, 1 + $I_L777_243, 1), 1 + kloc(1 + $I_L777_211, 1 + $I_L777_243), jn(1 + $I_L777_211, 1 + $I_L777_243, 1)) + ulondp(1 + $I_L777_211, 1 + $I_L777_243, 1) * ( f(ip(1 + $I_L777_211, 1 + $I_L777_243, 3), 1 + kloc(1 + $I_L777_211, 1 + $I_L777_243), jn(1 + $I_L777_211, 1 + $I_L777_243, 3)) + -f(ip(1 + $I_L777_211, 1 + $I_L777_243, 1), 1 + kloc(1 + $I_L777_211, 1 + $I_L777_243), jn(1 + $I_L777_211, 1 + $I_L777_243, 1)) )
  777.                         $f4_S21 = f(ip(1 + $I_L777_211, 1 + $I_L777_243, 2), 1 + kloc(1 + $I_L777_211, 1 + $I_L777_243), jn(1 + $I_L777_211, 1 + $I_L777_243, 2)) + ulondp(1 + $I_L777_211, 1 + $I_L777_243, 2) * ( f(ip(1 + $I_L777_211, 1 + $I_L777_243, 4), 1 + kloc(1 + $I_L777_211, 1 + $I_L777_243), jn(1 + $I_L777_211, 1 + $I_L777_243, 4)) + -f(ip(1 + $I_L777_211, 1 + $I_L777_243, 2), 1 + kloc(1 + $I_L777_211, 1 + $I_L777_243), jn(1 + $I_L777_211, 1 + $I_L777_243, 2)) )
  777.                         $f1_S22 = $f1_S18 + usigdp(1 + $I_L777_211, 1 + $I_L777_243) * ( $f3_S19 + -$f1_S18 )
  777.                         $f2_S23 = $f2_S20 + usigdp(1 + $I_L777_211, 1 + $I_L777_243) * ( $f4_S21 + -$f2_S20 )
  777.                         fint(1 + $I_L777_211, 1 + $I_L777_243) = $f1_S22 + ulatdp(1 + $I_L777_211, 1 + $I_L777_243) * ( $f2_S23 + -$f1_S22 )
  777.                         $I_L777_211 = 1 + $I_L777_211
  777.                         if ( $I_L777_211 >= ibdim ) exit
  777.                      enddo
  777.                      $I_L777_243 = 1 + $I_L777_243
  777.                      if ( $I_L777_243 >= kmax ) exit
  777.                   enddo
  777.                endif
  777.             endif
  777.             jn(1, 1, 1) = _copyout( jn )
  777.             ip(1, 1, 1) = _copyout( ip )
  777.             iloc(1, 1, 1) = _copyout( iloc )
  777.             ulondp(1, 1, 1) = _copyout( ulondp )
  777.             (fgwm%base_addr)(fgwm%dim_1%LB, fgwm%dim_2%LB, fgwm%dim_3%LB, 0) = _copyout( f )
  777.             wint(1) = _copyout( fint )
  786.             ipa$1713 = loc( (fgw%base_addr)(1, 1, jb, 0) )
  786.             w = _copyin( (fgw%base_addr)(1, 1, jb, 0) )
  786.             ipa$1715 = loc( wint(1) )
  786.             wm = _copyin( wint(1) )
  786.             t$27 = ibdim
  786.             t$26 = kmax
  786.             t$212 = max( 0, ibdim )
  786.             t$213 = ibdim
  786.             t$214 = max( 0, kmax )
  786.             t$215 = ibdim * max( 0, kmax )
  786.             t$25 = ibmax
  786.             t$216 = max( 0, ibmax )
  786.             t$217 = max( 0, ibmax )
  786.             t$218 = max( 0, kmax ) * max( 0, ibmax )
  786.             $dth_S26 = 5.0e-1 * delt
  786.             if ( kmax > 0 ) then
  786.                if ( ibdim > 0 ) then
  786.                   $SC_cl_I48 = (cl%base_addr)(kmax, 0)
  786.                   $SC_cl_I47 = (cl%base_addr)(1, 0)
  786.                   $I_L786_245 = 0
  786.                   do
  786.                      $SCA_cl_I49 = (cl%base_addr)(1 + $I_L786_245, 0)
  786.                      $I_L786_213 = 0
  786. !dir$ ivdep
  786.                      do
  786.                         usig(1 + $I_L786_213, 1 + $I_L786_245) = min( $SC_cl_I48, max( $SC_cl_I47, $SCA_cl_I49 + -( $dth_S26 * ( w(1 + $I_L786_213, 1 + $I_L786_245) + wm(1 + $I_L786_213, 1 + $I_L786_245) ) ) ) )
  786.                         $I_L786_213 = 1 + $I_L786_213
  786.                         if ( $I_L786_213 >= ibdim ) exit
  786.                      enddo
  791.                      $I_L791_215 = 0
  791. !dir$ ivdep
  791.                      do
  791.                         $ik_S29 = int( ( ( usig(1 + $I_L791_215, 1 + $I_L786_245) + -(sigma%base_addr)(1 + $I_L791_215, 1, 0) ) * 1.0/delsigref ) )
  791.                         $kloc_WR0_R4 = (ksigref%base_addr)(1 + $I_L791_215, $ik_S29, 0)
  791.                         kloc(1 + $I_L791_215, 1 + $I_L786_245) = $kloc_WR0_R4
  791.                         if ( usig(1 + $I_L791_215, 1 + $I_L786_245) > (sigma%base_addr)(1 + $I_L791_215, 1 + $kloc_WR0_R4, 0) ) then
  791.                            $kloc_WR0_R4 = 1 + $kloc_WR0_R4
  791.                            kloc(1 + $I_L791_215, 1 + $I_L786_245) = $kloc_WR0_R4
  791.                         endif
  791.                         usigdp(1 + $I_L791_215, 1 + $I_L786_245) = ( ( usig(1 + $I_L791_215, 1 + $I_L786_245) + -(sigma%base_addr)(1 + $I_L791_215, $kloc_WR0_R4, 0) ) * 1.0/(delsigma%base_addr)(1 + $I_L791_215, $kloc_WR0_R4, 0) )
  791.                         $I_L791_215 = 1 + $I_L791_215
  791.                         if ( $I_L791_215 >= ibdim ) exit
  791.                      enddo
  786.                      $I_L786_245 = 1 + $I_L786_245
  786.                      if ( $I_L786_245 >= kmax ) exit
  786.                   enddo
  786.                endif
  786.             endif
  786.             wint(1) = _copyout( wm )
  786.             (fgw%base_addr)(1, 1, jb, 0) = _copyout( w )
  791.             ipa$1759 = loc( ulon(1, 1) )
  791.             ulon = _copyin( ulon(1, 1) )
  791.             ipa$1761 = loc( ulat(1, 1) )
  791.             ulat = _copyin( ulat(1, 1) )
  791.             ipa$1763 = loc( ulondp(1, 1, 1) )
  791.             ulondp = _copyin( ulondp(1, 1, 1) )
  791.             ipa$1765 = loc( iloc(1, 1, 1) )
  791.             iloc = _copyin( iloc(1, 1, 1) )
  791.             t$38 = ibdim
  791.             t$39 = kmax
  791.             t$255 = max( 0, ibdim )
  791.             t$256 = ibdim
  791.             t$257 = max( 0, kmax )
  791.             t$258 = ibdim * max( 0, kmax )
  791.             t$259 = ibdim * max( 0, kmax )
  791.             t$260 = ibdim * max( 0, kmax ) * 4
  791.             iloc(1, 1, 1) = _copyout( iloc )
  791.             ulondp(1, 1, 1) = _copyout( ulondp )
  791.             ulat(1, 1) = _copyout( ulat )
  791.             ulon(1, 1) = _copyout( ulon )
  800.             ipa$1817 = loc( (fgum%base_addr)(fgum%dim_1%LB, fgum%dim_2%LB, fgum%dim_3%LB, 0) )
  800.             u = _copyin( (fgum%base_addr)(fgum%dim_1%LB, fgum%dim_2%LB, fgum%dim_3%LB, 0) )
  800.             ipa$1819 = loc( (fgvm%base_addr)(fgvm%dim_1%LB, fgvm%dim_2%LB, fgvm%dim_3%LB, 0) )
  800.             v = _copyin( (fgvm%base_addr)(fgvm%dim_1%LB, fgvm%dim_2%LB, fgvm%dim_3%LB, 0) )
  800.             ipa$1821 = loc( uint(1) )
  800.             uint = _copyin( uint(1) )
  800.             ipa$1823 = loc( vint(1) )
  800.             vint = _copyin( vint(1) )
  800.             ipa$1825 = loc( ulondp(1, 1, 1) )
  800.             ulondp = _copyin( ulondp(1, 1, 1) )
  800.             ipa$1827 = loc( ip(1, 1, 1) )
  800.             ip = _copyin( ip(1, 1, 1) )
  800.             ipa$1829 = loc( jn(1, 1, 1) )
  800.             jn = _copyin( jn(1, 1, 1) )
  800.             t$43 = ibmax
  800.             t$42 = kmax
  800.             t$44 = jbmax_ext
  800.             t$264 = max( 0, ibmax )
  800.             t$265 = max( 0, ibmax )
  800.             t$266 = max( 0, kmax )
  800.             t$267 = max( 0, kmax ) * max( 0, ibmax )
  800.             t$268 = max( 0, jbmax_ext )
  800.             t$269 = max( 0, kmax ) * max( 0, ibmax ) * max( 0, jbmax_ext )
  800.             t$41 = ibdim
  800.             t$270 = max( 0, ibdim )
  800.             t$271 = ibdim
  800.             t$272 = ibdim * max( 0, kmax )
  800.             t$273 = ibdim * max( 0, kmax )
  800.             t$274 = ibdim * max( 0, kmax ) * 2
  800.             t$275 = ibdim * max( 0, kmax ) * 4
  800.             if ( kmax > 0 ) then
  800.                if ( ibdim > 0 ) then
  800.                   $I_L800_247 = 0
  800.                   do
  800.                      $I_L800_217 = 0
  800. !dir$ ivdep
  800.                      do
  800.                         $s1_S34 = cvmg( 1.0, -1.0, jloc(1 + $I_L800_217, 1 + $I_L800_247) /= 0 )
  800.                         $s2_S37 = cvmg( 1.0, -1.0, jloc(1 + $I_L800_217, 1 + $I_L800_247) + -jmax /= 0 )
  800.                         $f1_S32 = u(ip(1 + $I_L800_217, 1 + $I_L800_247, 1), kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 1)) + ulondp(1 + $I_L800_217, 1 + $I_L800_247, 1) * ( u(ip(1 + $I_L800_217, 1 + $I_L800_247, 3), kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 3)) + -u(ip(1 + $I_L800_217, 1 + $I_L800_247, 1), kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 1)) )
  800.                         $g1_S38 = v(ip(1 + $I_L800_217, 1 + $I_L800_247, 1), kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 1)) + ulondp(1 + $I_L800_217, 1 + $I_L800_247, 1) * ( v(ip(1 + $I_L800_217, 1 + $I_L800_247, 3), kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 3)) + -v(ip(1 + $I_L800_217, 1 + $I_L800_247, 1), kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 1)) )
  800.                         $f2_S35 = u(ip(1 + $I_L800_217, 1 + $I_L800_247, 2), kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 2)) + ulondp(1 + $I_L800_217, 1 + $I_L800_247, 2) * ( u(ip(1 + $I_L800_217, 1 + $I_L800_247, 4), kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 4)) + -u(ip(1 + $I_L800_217, 1 + $I_L800_247, 2), kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 2)) )
  800.                         $g2_S40 = v(ip(1 + $I_L800_217, 1 + $I_L800_247, 2), kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 2)) + ulondp(1 + $I_L800_217, 1 + $I_L800_247, 2) * ( v(ip(1 + $I_L800_217, 1 + $I_L800_247, 4), kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 4)) + -v(ip(1 + $I_L800_217, 1 + $I_L800_247, 2), kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 2)) )
  800.                         $f3_S33 = u(ip(1 + $I_L800_217, 1 + $I_L800_247, 1), 1 + kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 1)) + ulondp(1 + $I_L800_217, 1 + $I_L800_247, 1) * ( u(ip(1 + $I_L800_217, 1 + $I_L800_247, 3), 1 + kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 3)) + -u(ip(1 + $I_L800_217, 1 + $I_L800_247, 1), 1 + kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 1)) )
  800.                         $g3_S39 = v(ip(1 + $I_L800_217, 1 + $I_L800_247, 1), 1 + kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 1)) + ulondp(1 + $I_L800_217, 1 + $I_L800_247, 1) * ( v(ip(1 + $I_L800_217, 1 + $I_L800_247, 3), 1 + kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 3)) + -v(ip(1 + $I_L800_217, 1 + $I_L800_247, 1), 1 + kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 1)) )
  800.                         $f4_S36 = u(ip(1 + $I_L800_217, 1 + $I_L800_247, 2), 1 + kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 2)) + ulondp(1 + $I_L800_217, 1 + $I_L800_247, 2) * ( u(ip(1 + $I_L800_217, 1 + $I_L800_247, 4), 1 + kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 4)) + -u(ip(1 + $I_L800_217, 1 + $I_L800_247, 2), 1 + kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 2)) )
  800.                         $g4_S41 = v(ip(1 + $I_L800_217, 1 + $I_L800_247, 2), 1 + kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 2)) + ulondp(1 + $I_L800_217, 1 + $I_L800_247, 2) * ( v(ip(1 + $I_L800_217, 1 + $I_L800_247, 4), 1 + kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 4)) + -v(ip(1 + $I_L800_217, 1 + $I_L800_247, 2), 1 + kloc(1 + $I_L800_217, 1 + $I_L800_247), jn(1 + $I_L800_217, 1 + $I_L800_247, 2)) )
  800.                         $f1_S42 = $s1_S34 * ( $f1_S32 + usigdp(1 + $I_L800_217, 1 + $I_L800_247) * ( $f3_S33 + -$f1_S32 ) )
  800.                         $f2_S43 = $s2_S37 * ( $f2_S35 + usigdp(1 + $I_L800_217, 1 + $I_L800_247) * ( $f4_S36 + -$f2_S35 ) )
  800.                         $g1_S44 = $s1_S34 * ( $g1_S38 + usigdp(1 + $I_L800_217, 1 + $I_L800_247) * ( $g3_S39 + -$g1_S38 ) )
  800.                         $g2_S45 = $s2_S37 * ( $g2_S40 + usigdp(1 + $I_L800_217, 1 + $I_L800_247) * ( $g4_S41 + -$g2_S40 ) )
  800.                         uint(1 + $I_L800_217, 1 + $I_L800_247) = $f1_S42 + ulatdp(1 + $I_L800_217, 1 + $I_L800_247) * ( $f2_S43 + -$f1_S42 )
  800.                         vint(1 + $I_L800_217, 1 + $I_L800_247) = $g1_S44 + ulatdp(1 + $I_L800_217, 1 + $I_L800_247) * ( $g2_S45 + -$g1_S44 )
  800.                         $I_L800_217 = 1 + $I_L800_217
  800.                         if ( $I_L800_217 >= ibdim ) exit
  800.                      enddo
  800.                      $I_L800_247 = 1 + $I_L800_247
  800.                      if ( $I_L800_247 >= kmax ) exit
  800.                   enddo
  800.                endif
  800.             endif
  800.             jn(1, 1, 1) = _copyout( jn )
  800.             ip(1, 1, 1) = _copyout( ip )
  800.             ulondp(1, 1, 1) = _copyout( ulondp )
  800.             vint(1) = _copyout( vint )
  800.             uint(1) = _copyout( uint )
  800.             (fgvm%base_addr)(fgvm%dim_1%LB, fgvm%dim_2%LB, fgvm%dim_3%LB, 0) = _copyout( v )
  800.             (fgum%base_addr)(fgum%dim_1%LB, fgum%dim_2%LB, fgum%dim_3%LB, 0) = _copyout( u )
  809.             ipa$1879 = loc( ulon(1, 1) )
  809.             ulon = _copyin( ulon(1, 1) )
  809.             ipa$1881 = loc( ulat(1, 1) )
  809.             ulat = _copyin( ulat(1, 1) )
  809.             ipa$1883 = loc( (coslon%base_addr)(1, jb, 0) )
  809.             coslon = _copyin( (coslon%base_addr)(1, jb, 0) )
  809.             ipa$1885 = loc( (sinlon%base_addr)(1, jb, 0) )
  809.             sinlon = _copyin( (sinlon%base_addr)(1, jb, 0) )
  809.             ipa$1887 = loc( (coslat%base_addr)(1, jb, 0) )
  809.             coslat = _copyin( (coslat%base_addr)(1, jb, 0) )
  809.             ipa$1889 = loc( (sinlat%base_addr)(1, jb, 0) )
  809.             sinlat = _copyin( (sinlat%base_addr)(1, jb, 0) )
  809.             ipa$1891 = loc( (fgu%base_addr)(1, 1, jb, 0) )
  809.             u = _copyin( (fgu%base_addr)(1, 1, jb, 0) )
  809.             ipa$1893 = loc( (fgv%base_addr)(1, 1, jb, 0) )
  809.             v = _copyin( (fgv%base_addr)(1, 1, jb, 0) )
  809.             ipa$1895 = loc( uint(1) )
  809.             um = _copyin( uint(1) )
  809.             ipa$1897 = loc( vint(1) )
  809.             vm = _copyin( vint(1) )
  809.             t$28 = ibdim
  809.             t$29 = kmax
  809.             t$219 = max( 0, ibdim )
  809.             t$220 = ibdim
  809.             t$221 = max( 0, kmax )
  809.             t$222 = ibdim * max( 0, kmax )
  809.             t$30 = ibmax
  809.             t$223 = max( 0, ibmax )
  809.             t$224 = max( 0, ibmax )
  809.             t$225 = max( 0, kmax ) * max( 0, ibmax )
  809.             t$228 = 8 * max( 0, ibmax )
  809.             t$229 = 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  809.             t$231 = 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  809.             t$232 = 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 )
  809.             t$234 = 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 )
  809.             t$226 = int( _alloc( 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 ) ), 8 )
  809.             t$227 = t$226
  809.             t$230 = t$226 + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  809.             t$233 = t$226 + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 )
  809.             $dt2_S54 = 5.0e-1 * delt
  809.             if ( ibdim > 0 ) then
  809.                $I_L809_219 = 0
  809. !dir$ ivdep
  809.                do
  809.                   x(1 + $I_L809_219) = coslon(1 + $I_L809_219) * coslat(1 + $I_L809_219)
  809.                   y(1 + $I_L809_219) = sinlon(1 + $I_L809_219) * coslat(1 + $I_L809_219)
  809.                   z(1 + $I_L809_219) = sinlat(1 + $I_L809_219)
  809.                   $I_L809_219 = 1 + $I_L809_219
  809.                   if ( $I_L809_219 >= ibdim ) exit
  809.                enddo
  809.             endif
  809.             if ( kmax > 0 ) then
  809.                if ( ibdim > 0 ) then
  809.                   $I_L809_249 = 0
  809. !dir$ blocking_size( 0, 0 )
  809.                   do
  809.                      $I_L809_221 = 0
  809. !dir$ ivdep
  809. !dir$ blocking_size( 0, 0 )
  809.                      do
  809.                         $Coss_P1 = coss( ulonm(1 + $I_L809_221, 1 + $I_L809_249) )
  809.                         $Coss_P2 = coss( ulatm(1 + $I_L809_221, 1 + $I_L809_249) )
  809.                         $uh_S53 = 5.0e-1 * ( u(1 + $I_L809_221, 1 + $I_L809_249) + um(1 + $I_L809_221, 1 + $I_L809_249) )
  809.                         $vh_S50 = 5.0e-1 * ( v(1 + $I_L809_221, 1 + $I_L809_249) + vm(1 + $I_L809_221, 1 + $I_L809_249) )
  809.                         $xb_S57 = x(1 + $I_L809_221) + -( $dt2_S54 * ( -( $uh_S53 * cimag( $Coss_P1 ) + $vh_S50 * real( $Coss_P1, 8 ) * cimag( $Coss_P2 ) ) ) )
  809.                         $yb_S56 = y(1 + $I_L809_221) + -( $dt2_S54 * ( $uh_S53 * real( $Coss_P1, 8 ) + -( $vh_S50 * cimag( $Coss_P1 ) * cimag( $Coss_P2 ) ) ) )
  809.                         $zb_S58 = z(1 + $I_L809_221) + -( $dt2_S54 * ( real( $Coss_P2, 8 ) * $vh_S50 ) )
  809.                         $xb_S60 = _recip_sqrt( $xb_S57 * $xb_S57 + $yb_S56 * $yb_S56 + $zb_S58 * $zb_S58 ) * $xb_S57
  809.                         $yb_S61 = _recip_sqrt( $xb_S57 * $xb_S57 + $yb_S56 * $yb_S56 + $zb_S58 * $zb_S58 ) * $yb_S56
  809.                         $zb_S62 = _recip_sqrt( $xb_S57 * $xb_S57 + $yb_S56 * $yb_S56 + $zb_S58 * $zb_S58 ) * $zb_S58
  809.                         $ulonm_WR0_R5 = atan2( ( _recip_sqrt( $xb_S57 * $xb_S57 + $yb_S56 * $yb_S56 + $zb_S58 * $zb_S58 ) * $yb_S56 ), ( _recip_sqrt( $xb_S57 * $xb_S57 + $yb_S56 * $yb_S56 + $zb_S58 * $zb_S58 ) * $xb_S57 ) )
  809.                         ulonm(1 + $I_L809_221, 1 + $I_L809_249) = atan2( ( _recip_sqrt( $xb_S57 * $xb_S57 + $yb_S56 * $yb_S56 + $zb_S58 * $zb_S58 ) * $yb_S56 ), ( _recip_sqrt( $xb_S57 * $xb_S57 + $yb_S56 * $yb_S56 + $zb_S58 * $zb_S58 ) * $xb_S57 ) )
  809.                         if ( atan2( ( _recip_sqrt( $xb_S57 * $xb_S57 + $yb_S56 * $yb_S56 + $zb_S58 * $zb_S58 ) * $yb_S56 ), ( _recip_sqrt( $xb_S57 * $xb_S57 + $yb_S56 * $yb_S56 + $zb_S58 * $zb_S58 ) * $xb_S57 ) ) < 0.0 ) then
  809.                            $ulonm_WR0_R5 = 6.28318530717958 + $ulonm_WR0_R5
  809.                            ulonm(1 + $I_L809_221, 1 + $I_L809_249) = $ulonm_WR0_R5
  809.                         endif
  809.                         ulatm(1 + $I_L809_221, 1 + $I_L809_249) = asin( $zb_S62 )
  809.                         $dot2_S63 = 2.0 * ( x(1 + $I_L809_221) * $xb_S60 + y(1 + $I_L809_221) * $yb_S61 + z(1 + $I_L809_221) * $zb_S62 )
  809.                         $xm_S64 = $dot2_S63 * $xb_S60 + -x(1 + $I_L809_221)
  809.                         $ym_S65 = $dot2_S63 * $yb_S61 + -y(1 + $I_L809_221)
  809.                         $zm_S66 = $dot2_S63 * $zb_S62 + -z(1 + $I_L809_221)
  809.                         $ulon_WR0_R6 = atan2( $ym_S65, $xm_S64 )
  809.                         ulon(1 + $I_L809_221, 1 + $I_L809_249) = atan2( $ym_S65, $xm_S64 )
  809.                         if ( atan2( $ym_S65, $xm_S64 ) < 0.0 ) then
  809.                            $ulon_WR0_R6 = 6.28318530717958 + $ulon_WR0_R6
  809.                            ulon(1 + $I_L809_221, 1 + $I_L809_249) = $ulon_WR0_R6
  809.                         endif
  809.                         ulat(1 + $I_L809_221, 1 + $I_L809_249) = asin( $zm_S66 )
  809.                         $I_L809_221 = 1 + $I_L809_221
  809.                         if ( $I_L809_221 >= ibdim ) exit
  809.                      enddo
  809.                      $I_L809_249 = 1 + $I_L809_249
  809.                      if ( $I_L809_249 >= kmax ) exit
  809.                   enddo
  809.                endif
  809.             endif
  809.             _free( t$226 )
  809.             vint(1) = _copyout( vm )
  809.             uint(1) = _copyout( um )
  809.             (fgv%base_addr)(1, 1, jb, 0) = _copyout( v )
  809.             (fgu%base_addr)(1, 1, jb, 0) = _copyout( u )
  809.             (sinlat%base_addr)(1, jb, 0) = _copyout( sinlat )
  809.             (coslat%base_addr)(1, jb, 0) = _copyout( coslat )
  809.             (sinlon%base_addr)(1, jb, 0) = _copyout( sinlon )
  809.             (coslon%base_addr)(1, jb, 0) = _copyout( coslon )
  809.             ulat(1, 1) = _copyout( ulat )
  809.             ulon(1, 1) = _copyout( ulon )
  814.             $I_L762_276 = 1 + $I_L762_276
  809.             if ( $I_L762_276 >= nit ) exit
  809.          enddo
  809.       endif
  719.       _free( t$167 )
  816.       return
  816.       end
  816.       
  817.       
  817.       subroutine trajectory2d_2l( ulonm, ulatm, ulon, ulat, ulondp, ulatdp, iloc, jloc, ibdim, jb, nit, delt )
  817.       t$18 = ibdim
  836.       t$176 = _zla( 0, ibdim )
  817.       t$177 = _zla( 0, ibdim )
  817.       t$178 = 4 * _zla( 0, ibdim )
  817.       t$19 = ibmax
  845.       t$179 = _zla( 0, ibmax )
  845.       t$182 = 8 * _zla( 0, ibmax )
  846.       t$183 = 8 * _zla( 0, ibmax )
  846.       t$185 = 16 * _zla( 0, ibmax )
  817.       t$180 = int( _alloc( 16 * _zla( 0, ibmax ) ), 8 )
  845.       t$181 = t$180
  846.       t$184 = t$180 + 8 * _zla( 0, ibmax )
  853.       if ( nit > 0 ) then
  853.          $I_L853_92 = 0
  853.          do
  858.             t$40 = ibdim
  858.             t$261 = _zla( 0, ibdim )
  858.             t$262 = ibdim
  858.             t$263 = ( 4 * ibdim )
  858.             if ( cvmg( 2, 1, reducedgrid ) == 4 ) then
  858.                kp(1) = -1
  858.                kp(2) = 0
  858.                kp(3) = 1
  858.                kp(4) = 2
  858.             else
  858.                kp(1) = 0
  858.                kp(2) = 1
  858.             endif
  858.             if ( ibdim > 0 ) then
  858.                $I_L858_68 = 0
  858. !dir$ ivdep
  858.                do
  858.                   $ik_S1 = int( ( ( 1.570796326794895 + ulat(1 + $I_L858_68) ) * 1.0/delphiref ) )
  858.                   $jloc_WR0_R0 = (jphiref%base_addr)(1 + $I_L858_68, $ik_S1, 0)
  858.                   jloc(1 + $I_L858_68) = $jloc_WR0_R0
  858.                   if ( ulat(1 + $I_L858_68) > (phi%base_addr)(1 + $I_L858_68, 1 + $jloc_WR0_R0, 0) ) then
  858.                      $jloc_WR0_R0 = 1 + $jloc_WR0_R0
  858.                      jloc(1 + $I_L858_68) = $jloc_WR0_R0
  858.                   endif
  858.                   ulatdp(1 + $I_L858_68) = ( ( ulat(1 + $I_L858_68) + -(phi%base_addr)(1 + $I_L858_68, $jloc_WR0_R0, 0) ) * 1.0/(delphi%base_addr)(1 + $I_L858_68, $jloc_WR0_R0, 0) )
  858.                   $I_L858_68 = 1 + $I_L858_68
  858.                   if ( $I_L858_68 >= ibdim ) exit
  858.                enddo
  858.             endif
  858.             if ( cvmg( 2, 1, reducedgrid ) > 0 ) then
  858.                if ( ibdim > 0 ) then
  858.                   $I_L858_90 = 0
  858.                   if ( cvmg( 2, 1, reducedgrid ) >= 4 ) then
  858.                      $I_L858_97 = 0
  858. !dir$ blocking_size( 0, 0 )
  858.                      do
  858.                         $ks#1_U0 = kp(1 + 4 * $I_L858_97)
  858.                         $ks#2_U1 = kp(2 + 4 * $I_L858_97)
  858.                         $ks#3_U2 = kp(3 + 4 * $I_L858_97)
  858.                         $ks#4_U3 = kp(4 + 4 * $I_L858_97)
  858.                         $I_L858_70 = 0
  858. !dir$ ivdep
  858. !dir$ blocking_size( 0, 0 )
  858.                         do
  858.                            $j_S5 = jmax + -jloc(1 + $I_L858_70) + 1
  858.                            $ulondp_WR0_R1 = 1.0 + ( ulon(1 + $I_L858_70) * 1.0/(dellon%base_addr)(1 + $I_L858_70, $j_S5 + -$ks#1_U0, 0) )
  858.                            iloc(1 + $I_L858_70, 1 + 4 * $I_L858_97) = int( $ulondp_WR0_R1 )
  858.                            $ulondp_WR0_R1 = $ulondp_WR0_R1 + ( -( int( $ulondp_WR0_R1 ) ) )
  858.                            ulondp(1 + $I_L858_70, 1 + 4 * $I_L858_97) = $ulondp_WR0_R1
  858.                            $j_S5 = jmax + -jloc(1 + $I_L858_70) + 1
  858.                            $ulondp_WR0_R1 = 1.0 + ( ulon(1 + $I_L858_70) * 1.0/(dellon%base_addr)(1 + $I_L858_70, $j_S5 + -$ks#2_U1, 0) )
  858.                            iloc(1 + $I_L858_70, 2 + 4 * $I_L858_97) = int( $ulondp_WR0_R1 )
  858.                            $ulondp_WR0_R1 = $ulondp_WR0_R1 + ( -( int( $ulondp_WR0_R1 ) ) )
  858.                            ulondp(1 + $I_L858_70, 2 + 4 * $I_L858_97) = $ulondp_WR0_R1
  858.                            $j_S5 = jmax + -jloc(1 + $I_L858_70) + 1
  858.                            $ulondp_WR0_R1 = 1.0 + ( ulon(1 + $I_L858_70) * 1.0/(dellon%base_addr)(1 + $I_L858_70, $j_S5 + -$ks#3_U2, 0) )
  858.                            iloc(1 + $I_L858_70, 3 + 4 * $I_L858_97) = int( $ulondp_WR0_R1 )
  858.                            $ulondp_WR0_R1 = $ulondp_WR0_R1 + ( -( int( $ulondp_WR0_R1 ) ) )
  858.                            ulondp(1 + $I_L858_70, 3 + 4 * $I_L858_97) = $ulondp_WR0_R1
  858.                            $j_S5 = jmax + -jloc(1 + $I_L858_70) + 1
  858.                            $ulondp_WR0_R1 = 1.0 + ( ulon(1 + $I_L858_70) * 1.0/(dellon%base_addr)(1 + $I_L858_70, $j_S5 + -$ks#4_U3, 0) )
  858.                            iloc(1 + $I_L858_70, 4 + 4 * $I_L858_97) = int( $ulondp_WR0_R1 )
  858.                            $ulondp_WR0_R1 = $ulondp_WR0_R1 + ( -( int( $ulondp_WR0_R1 ) ) )
  858.                            ulondp(1 + $I_L858_70, 4 + 4 * $I_L858_97) = $ulondp_WR0_R1
  858.                            $I_L858_70 = 1 + $I_L858_70
  858.                            if ( $I_L858_70 >= ibdim ) exit
  858.                         enddo
  858.                         $I_L858_97 = 1 + $I_L858_97
  858.                         if ( $I_L858_97 >= _rsh( cvmg( 2, 1, reducedgrid ), 2 ) ) exit
  858.                      enddo
  858.                      $I_L858_90 = and( 0xfffffffffffffffcUL, cvmg( 2, 1, reducedgrid ) )
  858.                   endif
  858.                   if ( $I_L858_90 < cvmg( 2, 1, reducedgrid ) ) then
  858.                      $I_L858_94 = 0
  858. !dir$ blocking_size( 0, 0 )
  858.                      do
  858.                         $ks_S4 = kp($I_L858_90 + $I_L858_94 + 1)
  858.                         $I_L858_70 = 0
  858. !dir$ ivdep
  858. !dir$ blocking_size( 0, 0 )
  858.                         do
  858.                            $j_S5 = jmax + -jloc(1 + $I_L858_70) + 1
  858.                            $ulondp_WR0_R1 = 1.0 + ( ulon(1 + $I_L858_70) * 1.0/(dellon%base_addr)(1 + $I_L858_70, $j_S5 + -$ks_S4, 0) )
  858.                            iloc(1 + $I_L858_70, $I_L858_90 + $I_L858_94 + 1) = int( $ulondp_WR0_R1 )
  858.                            $ulondp_WR0_R1 = $ulondp_WR0_R1 + ( -( int( $ulondp_WR0_R1 ) ) )
  858.                            ulondp(1 + $I_L858_70, $I_L858_90 + $I_L858_94 + 1) = $ulondp_WR0_R1
  858.                            $I_L858_70 = 1 + $I_L858_70
  858.                            if ( $I_L858_70 >= ibdim ) exit
  858.                         enddo
  858.                         $I_L858_94 = 1 + $I_L858_94
  858.                         if ( $I_L858_94 >= -$I_L858_90 + cvmg( 2, 1, reducedgrid ) ) exit
  858.                      enddo
  858.                   endif
  858.                endif
  858.             endif
  858.             if ( cvmg( 2, 1, reducedgrid ) == 1 ) then
  858.                $F_A33 = ibdim
  858.                if ( ibdim > 0 ) then
  858.                   $I_L858_78 = 0
  858. !dir$ ivdep
  858.                   do
  858.                      iloc(1 + $I_L858_78, 2) = iloc(1 + $I_L858_78, 1)
  858.                      $I_L858_78 = 1 + $I_L858_78
  858.                      if ( $I_L858_78 >= $F_A33 ) exit
  858.                   enddo
  858.                endif
  858.                $F_A34 = ibdim
  858.                if ( ibdim > 0 ) then
  858.                   $I_L858_80 = 0
  858. !dir$ ivdep
  858.                   do
  858.                      iloc(1 + $I_L858_80, 3) = iloc(1 + $I_L858_80, 1)
  858.                      $I_L858_80 = 1 + $I_L858_80
  858.                      if ( $I_L858_80 >= $F_A34 ) exit
  858.                   enddo
  858.                endif
  858.                $F_A35 = ibdim
  858.                if ( ibdim > 0 ) then
  858.                   $I_L858_82 = 0
  858. !dir$ ivdep
  858.                   do
  858.                      iloc(1 + $I_L858_82, 4) = iloc(1 + $I_L858_82, 1)
  858.                      $I_L858_82 = 1 + $I_L858_82
  858.                      if ( $I_L858_82 >= $F_A35 ) exit
  858.                   enddo
  858.                endif
  858.                $F_A36 = ibdim
  858.                if ( ibdim > 0 ) then
  858.                   $I_L858_84 = 0
  858. !dir$ ivdep
  858.                   do
  858.                      ulondp(1 + $I_L858_84, 2) = ulondp(1 + $I_L858_84, 1)
  858.                      $I_L858_84 = 1 + $I_L858_84
  858.                      if ( $I_L858_84 >= $F_A36 ) exit
  858.                   enddo
  858.                endif
  858.                $F_A37 = ibdim
  858.                if ( ibdim > 0 ) then
  858.                   $I_L858_86 = 0
  858. !dir$ ivdep
  858.                   do
  858.                      ulondp(1 + $I_L858_86, 3) = ulondp(1 + $I_L858_86, 1)
  858.                      $I_L858_86 = 1 + $I_L858_86
  858.                      if ( $I_L858_86 >= $F_A37 ) exit
  858.                   enddo
  858.                endif
  858.                $F_A38 = ibdim
  858.                if ( ibdim > 0 ) then
  858.                   $I_L858_88 = 0
  858. !dir$ ivdep
  858.                   do
  858.                      ulondp(1 + $I_L858_88, 4) = ulondp(1 + $I_L858_88, 1)
  858.                      $I_L858_88 = 1 + $I_L858_88
  858.                      if ( $I_L858_88 >= $F_A38 ) exit
  858.                   enddo
  858.                endif
  858.             endif
  867.             ipa$1939 = loc( (fgummean%base_addr)(fgummean%dim_1%LB, fgummean%dim_2%LB, 0) )
  867.             u = _copyin( (fgummean%base_addr)(fgummean%dim_1%LB, fgummean%dim_2%LB, 0) )
  867.             ipa$1941 = loc( (fgvmmean%base_addr)(fgvmmean%dim_1%LB, fgvmmean%dim_2%LB, 0) )
  867.             v = _copyin( (fgvmmean%base_addr)(fgvmmean%dim_1%LB, fgvmmean%dim_2%LB, 0) )
  867.             t$46 = ibmax
  867.             t$47 = jbmax_ext
  867.             t$276 = max( 0, ibmax )
  867.             t$277 = max( 0, ibmax )
  867.             t$278 = max( 0, jbmax_ext )
  867.             t$279 = max( 0, ibmax ) * max( 0, jbmax_ext )
  867.             t$45 = ibdim
  867.             t$280 = max( 0, ibdim )
  867.             t$281 = ibdim
  867.             t$282 = ( 2 * ibdim )
  867.             t$285 = 8 * max( 0, ibmax )
  867.             t$286 = 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  867.             t$288 = 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  867.             t$283 = int( _alloc( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) ), 8 )
  867.             t$284 = t$283
  867.             t$287 = t$283 + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  867.             if ( ibdim > 0 ) then
  867.                $I_L867_72 = 0
  867. !dir$ ivdep
  867.                do
  867.                   $jp_S7 = jmax + -jloc(1 + $I_L867_72) + 1
  867.                   s1(1 + $I_L867_72) = 1.0
  867.                   s2(1 + $I_L867_72) = 1.0
  867.                   if ( jmax + -$jp_S7 == -1 ) then
  867.                      s1(1 + $I_L867_72) = -1.0
  867.                   endif
  867.                   if ( $jp_S7 == 1 ) then
  867.                      s2(1 + $I_L867_72) = -1.0
  867.                   endif
  867.                   $I_L867_72 = 1 + $I_L867_72
  867.                   if ( $I_L867_72 >= ibdim ) exit
  867.                enddo
  867.                $I_L867_74 = 0
  867. !dir$ ivdep
  867.                do
  867.                   $jp_S9 = jmax + -jloc(1 + $I_L867_74) + 1
  867.                   $i1_S10 = (ibperij%base_addr)(iloc(1 + $I_L867_74, 1), $jp_S9, 0)
  867.                   $i2_S14 = (ibperij%base_addr)(iloc(1 + $I_L867_74, 2), -1 + $jp_S9, 0)
  867.                   $i3_S12 = (ibperij%base_addr)(1 + iloc(1 + $I_L867_74, 1), $jp_S9, 0)
  867.                   $i4_S16 = (ibperij%base_addr)(1 + iloc(1 + $I_L867_74, 2), -1 + $jp_S9, 0)
  867.                   $j1_S11 = (jbperij%base_addr)(iloc(1 + $I_L867_74, 1), $jp_S9, 0)
  867.                   $j2_S15 = (jbperij%base_addr)(iloc(1 + $I_L867_74, 2), -1 + $jp_S9, 0)
  867.                   $j3_S13 = (jbperij%base_addr)(1 + iloc(1 + $I_L867_74, 1), $jp_S9, 0)
  867.                   $j4_S17 = (jbperij%base_addr)(1 + iloc(1 + $I_L867_74, 2), -1 + $jp_S9, 0)
  867.                   $f1_S18 = s1(1 + $I_L867_74) * ( u($i1_S10, $j1_S11) + ulondp(1 + $I_L867_74, 1) * ( u($i3_S12, $j3_S13) + -u($i1_S10, $j1_S11) ) )
  867.                   $g1_S20 = s1(1 + $I_L867_74) * ( v($i1_S10, $j1_S11) + ulondp(1 + $I_L867_74, 1) * ( v($i3_S12, $j3_S13) + -v($i1_S10, $j1_S11) ) )
  867.                   $f2_S19 = s2(1 + $I_L867_74) * ( u($i2_S14, $j2_S15) + ulondp(1 + $I_L867_74, 2) * ( u($i4_S16, $j4_S17) + -u($i2_S14, $j2_S15) ) )
  867.                   $g2_S21 = s2(1 + $I_L867_74) * ( v($i2_S14, $j2_S15) + ulondp(1 + $I_L867_74, 2) * ( v($i4_S16, $j4_S17) + -v($i2_S14, $j2_S15) ) )
  867.                   uint(1 + $I_L867_74) = $f1_S18 + ulatdp(1 + $I_L867_74) * ( $f2_S19 + -$f1_S18 )
  867.                   vint(1 + $I_L867_74) = $g1_S20 + ulatdp(1 + $I_L867_74) * ( $g2_S21 + -$g1_S20 )
  867.                   $I_L867_74 = 1 + $I_L867_74
  867.                   if ( $I_L867_74 >= ibdim ) exit
  867.                enddo
  867.             endif
  867.             _free( t$283 )
  867.             (fgvmmean%base_addr)(fgvmmean%dim_1%LB, fgvmmean%dim_2%LB, 0) = _copyout( v )
  867.             (fgummean%base_addr)(fgummean%dim_1%LB, fgummean%dim_2%LB, 0) = _copyout( u )
  877.             ipa$1979 = loc( (coslon%base_addr)(1, jb, 0) )
  877.             coslon = _copyin( (coslon%base_addr)(1, jb, 0) )
  877.             ipa$1981 = loc( (sinlon%base_addr)(1, jb, 0) )
  877.             sinlon = _copyin( (sinlon%base_addr)(1, jb, 0) )
  877.             ipa$1983 = loc( (coslat%base_addr)(1, jb, 0) )
  877.             coslat = _copyin( (coslat%base_addr)(1, jb, 0) )
  877.             ipa$1985 = loc( (sinlat%base_addr)(1, jb, 0) )
  877.             sinlat = _copyin( (sinlat%base_addr)(1, jb, 0) )
  877.             ipa$1987 = loc( (fgumean%base_addr)(1, jb, 0) )
  877.             um = _copyin( (fgumean%base_addr)(1, jb, 0) )
  877.             ipa$1989 = loc( (fgvmean%base_addr)(1, jb, 0) )
  877.             vm = _copyin( (fgvmean%base_addr)(1, jb, 0) )
  877.             t$31 = ibdim
  877.             t$235 = max( 0, ibdim )
  877.             $dt2_S28 = 5.0e-1 * delt
  877.             if ( ibdim > 0 ) then
  877.                $I_L877_76 = 0
  877. !dir$ ivdep
  877.                do
  877.                   $Coss_P0 = coss( ulonm(1 + $I_L877_76) )
  877.                   $Coss_P1 = coss( ulatm(1 + $I_L877_76) )
  877.                   $uh_S27 = 5.0e-1 * ( uint(1 + $I_L877_76) + um(1 + $I_L877_76) )
  877.                   $vh_S24 = 5.0e-1 * ( vint(1 + $I_L877_76) + vm(1 + $I_L877_76) )
  877.                   $x_S30 = coslon(1 + $I_L877_76) * coslat(1 + $I_L877_76)
  877.                   $y_S29 = sinlon(1 + $I_L877_76) * coslat(1 + $I_L877_76)
  877.                   $z_S32 = sinlat(1 + $I_L877_76)
  877.                   $b_S34 = _recip_sqrt( ( $x_S30 + -( $dt2_S28 * ( -( $uh_S27 * cimag( $Coss_P0 ) + $vh_S24 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) ) ) * ( $x_S30 + -( $dt2_S28 * ( -( $uh_S27 * cimag( $Coss_P0 ) + $vh_S24 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) ) ) + ( $y_S29 + -( $dt2_S28 * ( $uh_S27 * real( $Coss_P0, 8 ) + -( $vh_S24 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) * ( $y_S29 + -( $dt2_S28 * ( $uh_S27 * real( $Coss_P0, 8 ) + -( $vh_S24 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) + ( $z_S32 + -( $dt2_S28 * ( real( $Coss_P1, 8 ) * $vh_S24 ) ) ) * ( $z_S32 + -( $dt2_S28 * ( real( $Coss_P1, 8 ) * $vh_S24 ) ) ) )
  877.                   $xb_S33 = _recip_sqrt( ( $x_S30 + -( $dt2_S28 * ( -( $uh_S27 * cimag( $Coss_P0 ) + $vh_S24 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) ) ) * ( $x_S30 + -( $dt2_S28 * ( -( $uh_S27 * cimag( $Coss_P0 ) + $vh_S24 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) ) ) + ( $y_S29 + -( $dt2_S28 * ( $uh_S27 * real( $Coss_P0, 8 ) + -( $vh_S24 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) * ( $y_S29 + -( $dt2_S28 * ( $uh_S27 * real( $Coss_P0, 8 ) + -( $vh_S24 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) + ( $z_S32 + -( $dt2_S28 * ( real( $Coss_P1, 8 ) * $vh_S24 ) ) ) * ( $z_S32 + -( $dt2_S28 * ( real( $Coss_P1, 8 ) * $vh_S24 ) ) ) ) * ( $x_S30 + -( $dt2_S28 * ( -( $uh_S27 * cimag( $Coss_P0 ) + $vh_S24 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) ) )
  877.                   $yb_S35 = _recip_sqrt( ( $x_S30 + -( $dt2_S28 * ( -( $uh_S27 * cimag( $Coss_P0 ) + $vh_S24 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) ) ) * ( $x_S30 + -( $dt2_S28 * ( -( $uh_S27 * cimag( $Coss_P0 ) + $vh_S24 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) ) ) + ( $y_S29 + -( $dt2_S28 * ( $uh_S27 * real( $Coss_P0, 8 ) + -( $vh_S24 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) * ( $y_S29 + -( $dt2_S28 * ( $uh_S27 * real( $Coss_P0, 8 ) + -( $vh_S24 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) + ( $z_S32 + -( $dt2_S28 * ( real( $Coss_P1, 8 ) * $vh_S24 ) ) ) * ( $z_S32 + -( $dt2_S28 * ( real( $Coss_P1, 8 ) * $vh_S24 ) ) ) ) * ( $y_S29 + -( $dt2_S28 * ( $uh_S27 * real( $Coss_P0, 8 ) + -( $vh_S24 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) )
  877.                   $zb_S36 = _recip_sqrt( ( $x_S30 + -( $dt2_S28 * ( -( $uh_S27 * cimag( $Coss_P0 ) + $vh_S24 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) ) ) * ( $x_S30 + -( $dt2_S28 * ( -( $uh_S27 * cimag( $Coss_P0 ) + $vh_S24 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) ) ) + ( $y_S29 + -( $dt2_S28 * ( $uh_S27 * real( $Coss_P0, 8 ) + -( $vh_S24 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) * ( $y_S29 + -( $dt2_S28 * ( $uh_S27 * real( $Coss_P0, 8 ) + -( $vh_S24 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) + ( $z_S32 + -( $dt2_S28 * ( real( $Coss_P1, 8 ) * $vh_S24 ) ) ) * ( $z_S32 + -( $dt2_S28 * ( real( $Coss_P1, 8 ) * $vh_S24 ) ) ) ) * ( $z_S32 + -( $dt2_S28 * ( real( $Coss_P1, 8 ) * $vh_S24 ) ) )
  877.                   $ulonm_WR0_R3 = atan2( ( $b_S34 * ( $y_S29 + -( $dt2_S28 * ( $uh_S27 * real( $Coss_P0, 8 ) + -( $vh_S24 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) ), $xb_S33 )
  877.                   ulonm(1 + $I_L877_76) = atan2( ( $b_S34 * ( $y_S29 + -( $dt2_S28 * ( $uh_S27 * real( $Coss_P0, 8 ) + -( $vh_S24 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) ), $xb_S33 )
  877.                   if ( atan2( $yb_S35, $xb_S33 ) < 0.0 ) then
  877.                      $ulonm_WR0_R3 = 6.28318530717958 + $ulonm_WR0_R3
  877.                      ulonm(1 + $I_L877_76) = $ulonm_WR0_R3
  877.                   endif
  877.                   ulatm(1 + $I_L877_76) = asin( $zb_S36 )
  877.                   $zm_S37 = ( 2.0 * ( $x_S30 * $xb_S33 + $y_S29 * $yb_S35 + $z_S32 * $zb_S36 ) ) * $zb_S36 + -$z_S32
  877.                   $ulon_WR0_R4 = atan2( ( ( 2.0 * ( $x_S30 * $xb_S33 + $y_S29 * $yb_S35 + $z_S32 * $zb_S36 ) ) * $yb_S35 + -$y_S29 ), ( ( 2.0 * ( $x_S30 * $xb_S33 + $y_S29 * $yb_S35 + $z_S32 * $zb_S36 ) ) * $xb_S33 + -$x_S30 ) )
  877.                   ulon(1 + $I_L877_76) = atan2( ( ( 2.0 * ( $x_S30 * $xb_S33 + $y_S29 * $yb_S35 + $z_S32 * $zb_S36 ) ) * $yb_S35 + -$y_S29 ), ( ( 2.0 * ( $x_S30 * $xb_S33 + $y_S29 * $yb_S35 + $z_S32 * $zb_S36 ) ) * $xb_S33 + -$x_S30 ) )
  877.                   if ( atan2( ( ( 2.0 * ( $x_S30 * $xb_S33 + $y_S29 * $yb_S35 + $z_S32 * $zb_S36 ) ) * $yb_S35 + -$y_S29 ), ( ( 2.0 * ( $x_S30 * $xb_S33 + $y_S29 * $yb_S35 + $z_S32 * $zb_S36 ) ) * $xb_S33 + -$x_S30 ) ) < 0.0 ) then
  877.                      $ulon_WR0_R4 = 6.28318530717958 + $ulon_WR0_R4
  877.                      ulon(1 + $I_L877_76) = $ulon_WR0_R4
  877.                   endif
  877.                   ulat(1 + $I_L877_76) = asin( $zm_S37 )
  877.                   $I_L877_76 = 1 + $I_L877_76
  877.                   if ( $I_L877_76 >= ibdim ) exit
  877.                enddo
  877.             endif
  877.             (fgvmean%base_addr)(1, jb, 0) = _copyout( vm )
  877.             (fgumean%base_addr)(1, jb, 0) = _copyout( um )
  877.             (sinlat%base_addr)(1, jb, 0) = _copyout( sinlat )
  877.             (coslat%base_addr)(1, jb, 0) = _copyout( coslat )
  877.             (sinlon%base_addr)(1, jb, 0) = _copyout( sinlon )
  877.             (coslon%base_addr)(1, jb, 0) = _copyout( coslon )
  881.             $I_L853_92 = 1 + $I_L853_92
  877.             if ( $I_L853_92 >= nit ) exit
  877.          enddo
  877.       endif
  817.       _free( t$180 )
  883.       return
  883.       end
  883.       
  884.       
  884.       subroutine trajectory( ulonm, ulatm, usigm, ulon, ulat, usig, ulondp, ulatdp, usigdp, iloc, jloc, kloc, ibdim, jb, nit, delt, ip, jn )
  884.       t$20 = ibdim
  884.       t$21 = kmax
  907.       t$186 = _zla( 0, ibdim )
  884.       t$187 = _zla( 0, ibdim )
  907.       t$188 = _zla( 0, kmax )
  884.       t$189 = _zla( 0, ibdim ) * _zla( 0, kmax )
  884.       t$190 = _zla( 0, ibdim ) * _zla( 0, kmax )
  884.       t$191 = _zla( 0, ibdim ) * _zla( 0, kmax ) * 4
  884.       t$22 = ( kmax * ibmax )
  920.       t$192 = _zla( 0, ( kmax * ibmax ) )
  920.       t$195 = 8 * _zla( 0, ( kmax * ibmax ) )
  921.       t$196 = 8 * _zla( 0, ( kmax * ibmax ) )
  921.       t$198 = 16 * _zla( 0, ( kmax * ibmax ) )
  922.       t$199 = 16 * _zla( 0, ( kmax * ibmax ) )
  922.       t$201 = 24 * _zla( 0, ( kmax * ibmax ) )
  884.       t$193 = int( _alloc( 24 * _zla( 0, ( kmax * ibmax ) ) ), 8 )
  920.       t$194 = t$193
  921.       t$197 = t$193 + 8 * _zla( 0, ( kmax * ibmax ) )
  922.       t$200 = t$193 + 16 * _zla( 0, ( kmax * ibmax ) )
  929.       if ( nit > 0 ) then
  929.          $I_L929_320 = 0
  929.          do
  936.             ipa$2032 = loc( ulondp(1, 1, 1) )
  936.             ulondp = _copyin( ulondp(1, 1, 1) )
  936.             ipa$2034 = loc( iloc(1, 1, 1) )
  936.             iloc = _copyin( iloc(1, 1, 1) )
  936.             t$38 = ibdim
  936.             t$39 = kmax
  936.             t$255 = _zla( 0, ibdim )
  936.             t$256 = ibdim
  936.             t$257 = _zla( 0, kmax )
  936.             t$258 = ibdim * _zla( 0, kmax )
  936.             t$259 = ibdim * _zla( 0, kmax )
  936.             t$260 = ibdim * _zla( 0, kmax ) * 4
  936.             if ( $I_L929_320 == 0 ) then
  936.                if ( kmax > 0 ) then
  936.                   if ( ibdim > 0 ) then
  936.                      $I_L936_277 = 0
  936. !dir$ blocking_size( 0, 0 )
  936.                      do
  936.                         $I_L936_238 = 0
  936. !dir$ ivdep
  936. !dir$ blocking_size( 0, 0 )
  936.                         do
  936.                            $ik_S3 = int( ( ( usigm(1 + $I_L936_238, 1 + $I_L936_277) + -(sigma%base_addr)(1 + $I_L936_238, 1, 0) ) * 1.0/delsigref ) )
  936.                            $kloc_WR0_R0 = (ksigref%base_addr)(1 + $I_L936_238, $ik_S3, 0)
  936.                            kloc(1 + $I_L936_238, 1 + $I_L936_277) = $kloc_WR0_R0
  936.                            if ( usigm(1 + $I_L936_238, 1 + $I_L936_277) > (sigma%base_addr)(1 + $I_L936_238, 1 + $kloc_WR0_R0, 0) ) then
  936.                               $kloc_WR0_R0 = 1 + $kloc_WR0_R0
  936.                               kloc(1 + $I_L936_238, 1 + $I_L936_277) = $kloc_WR0_R0
  936.                            endif
  936.                            usigdp(1 + $I_L936_238, 1 + $I_L936_277) = ( ( usigm(1 + $I_L936_238, 1 + $I_L936_277) + -(sigma%base_addr)(1 + $I_L936_238, $kloc_WR0_R0, 0) ) * 1.0/(delsigma%base_addr)(1 + $I_L936_238, $kloc_WR0_R0, 0) )
  936.                            $I_L936_238 = 1 + $I_L936_238
  936.                            if ( $I_L936_238 >= ibdim ) exit
  936.                         enddo
  936.                         $I_L936_277 = 1 + $I_L936_277
  936.                         if ( $I_L936_277 >= kmax ) exit
  936.                      enddo
  936.                   endif
  936.                endif
  936.             endif
  936.             if ( cvmg( 2, 1, reducedgrid ) == 4 ) then
  936.                kp(1) = -1
  936.                kp(2) = 0
  936.                kp(3) = 1
  936.                kp(4) = 2
  936.             else
  936.                kp(1) = 0
  936.                kp(2) = 1
  936.             endif
  936.             if ( kmax > 0 ) then
  936.                if ( ibdim > 0 ) then
  936.                   $I_L936_279 = 0
  936.                   do
  936.                      $I_L936_240 = 0
  936. !dir$ ivdep
  936.                      do
  936.                         $ik_S6 = int( ( ( 1.570796326794895 + ulatm(1 + $I_L936_240, 1 + $I_L936_279) ) * 1.0/delphiref ) )
  936.                         $jloc_WR0_R1 = (jphiref%base_addr)(1 + $I_L936_240, $ik_S6, 0)
  936.                         jloc(1 + $I_L936_240, 1 + $I_L936_279) = $jloc_WR0_R1
  936.                         if ( ulatm(1 + $I_L936_240, 1 + $I_L936_279) > (phi%base_addr)(1 + $I_L936_240, 1 + $jloc_WR0_R1, 0) ) then
  936.                            $jloc_WR0_R1 = 1 + $jloc_WR0_R1
  936.                            jloc(1 + $I_L936_240, 1 + $I_L936_279) = $jloc_WR0_R1
  936.                         endif
  936.                         ulatdp(1 + $I_L936_240, 1 + $I_L936_279) = ( ( ulatm(1 + $I_L936_240, 1 + $I_L936_279) + -(phi%base_addr)(1 + $I_L936_240, $jloc_WR0_R1, 0) ) * 1.0/(delphi%base_addr)(1 + $I_L936_240, $jloc_WR0_R1, 0) )
  936.                         $I_L936_240 = 1 + $I_L936_240
  936.                         if ( $I_L936_240 >= ibdim ) exit
  936.                      enddo
  936.                      $I_L936_279 = 1 + $I_L936_279
  936.                      if ( $I_L936_279 >= kmax ) exit
  936.                   enddo
  936.                endif
  936.             endif
  936.             if ( cvmg( 2, 1, reducedgrid ) > 0 ) then
  936.                if ( kmax > 0 ) then
  936.                   if ( ibdim > 0 ) then
  936.                      $I_L936_318 = 0
  936.                      do
  936.                         $I_L936_316 = 0
  936.                         do
  936.                            $I_L936_312 = 0
  936.                            if ( cvmg( 2, 1, reducedgrid ) >= 4 ) then
  936.                               $I_L936_325 = 0
  936. !dir$ blocking_size( 4, 4 )
  936.                               do
  936.                                  $ks#1_U0 = kp(1 + 4 * $I_L936_325)
  936.                                  $ks#2_U1 = kp(2 + 4 * $I_L936_325)
  936.                                  $ks#3_U2 = kp(3 + 4 * $I_L936_325)
  936.                                  $ks#4_U3 = kp(4 + 4 * $I_L936_325)
  936.                                  $I_L936_309 = 0
  936. !dir$ shortloop16
  936. !dir$ blocking_size( 8, 8 )
  936.                                  do
  936.                                     $I_L936_242 = 0
  936. !dir$ ivdep
  936. !dir$ blocking_size( 256, 256 )
  936.                                     do
  936.                                        $j_S11 = jmax + -jloc($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1) + 1
  936.                                        $ulondp_WR0_R2 = 1.0 + ( ulonm($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1) * 1.0/(dellon%base_addr)($I_L936_242 + 256 * $I_L936_316 + 1, $j_S11 + -$ks#1_U0, 0) )
  936.                                        iloc($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1, 1 + 4 * $I_L936_325) = int( $ulondp_WR0_R2 )
  936.                                        $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  936.                                        ulondp($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1, 1 + 4 * $I_L936_325) = $ulondp_WR0_R2
  936.                                        $j_S11 = jmax + -jloc($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1) + 1
  936.                                        $ulondp_WR0_R2 = 1.0 + ( ulonm($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1) * 1.0/(dellon%base_addr)($I_L936_242 + 256 * $I_L936_316 + 1, $j_S11 + -$ks#2_U1, 0) )
  936.                                        iloc($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1, 2 + 4 * $I_L936_325) = int( $ulondp_WR0_R2 )
  936.                                        $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  936.                                        ulondp($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1, 2 + 4 * $I_L936_325) = $ulondp_WR0_R2
  936.                                        $j_S11 = jmax + -jloc($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1) + 1
  936.                                        $ulondp_WR0_R2 = 1.0 + ( ulonm($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1) * 1.0/(dellon%base_addr)($I_L936_242 + 256 * $I_L936_316 + 1, $j_S11 + -$ks#3_U2, 0) )
  936.                                        iloc($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1, 3 + 4 * $I_L936_325) = int( $ulondp_WR0_R2 )
  936.                                        $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  936.                                        ulondp($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1, 3 + 4 * $I_L936_325) = $ulondp_WR0_R2
  936.                                        $j_S11 = jmax + -jloc($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1) + 1
  936.                                        $ulondp_WR0_R2 = 1.0 + ( ulonm($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1) * 1.0/(dellon%base_addr)($I_L936_242 + 256 * $I_L936_316 + 1, $j_S11 + -$ks#4_U3, 0) )
  936.                                        iloc($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1, 4 + 4 * $I_L936_325) = int( $ulondp_WR0_R2 )
  936.                                        $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  936.                                        ulondp($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1, 4 + 4 * $I_L936_325) = $ulondp_WR0_R2
  936.                                        $I_L936_242 = 1 + $I_L936_242
  936.                                        if ( $I_L936_242 >= min( ibdim, 256 + 256 * $I_L936_316 ) + -256 * $I_L936_316 ) exit
  936.                                     enddo
  936.                                     $I_L936_309 = 1 + $I_L936_309
  936.                                     if ( $I_L936_309 >= min( kmax, 8 + 8 * $I_L936_318 ) + -8 * $I_L936_318 ) exit
  936.                                  enddo
  936.                                  $I_L936_325 = 1 + $I_L936_325
  936.                                  if ( $I_L936_325 >= _rsh( cvmg( 2, 1, reducedgrid ), 2 ) ) exit
  936.                               enddo
  936.                               $I_L936_312 = and( 0xfffffffffffffffcUL, cvmg( 2, 1, reducedgrid ) )
  936.                            endif
  936.                            if ( $I_L936_312 < cvmg( 2, 1, reducedgrid ) ) then
  936.                               $I_L936_322 = 0
  936. !dir$ blocking_size( 4, 4 )
  936.                               do
  936.                                  $ks_S10 = kp($I_L936_312 + $I_L936_322 + 1)
  936.                                  $I_L936_309 = 0
  936. !dir$ shortloop16
  936. !dir$ blocking_size( 8, 8 )
  936.                                  do
  936.                                     $I_L936_242 = 0
  936. !dir$ ivdep
  936. !dir$ blocking_size( 256, 256 )
  936.                                     do
  936.                                        $j_S11 = jmax + -jloc($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1) + 1
  936.                                        $ulondp_WR0_R2 = 1.0 + ( ulonm($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1) * 1.0/(dellon%base_addr)($I_L936_242 + 256 * $I_L936_316 + 1, $j_S11 + -$ks_S10, 0) )
  936.                                        iloc($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1, $I_L936_312 + $I_L936_322 + 1) = int( $ulondp_WR0_R2 )
  936.                                        $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  936.                                        ulondp($I_L936_242 + 256 * $I_L936_316 + 1, $I_L936_309 + 8 * $I_L936_318 + 1, $I_L936_312 + $I_L936_322 + 1) = $ulondp_WR0_R2
  936.                                        $I_L936_242 = 1 + $I_L936_242
  936.                                        if ( $I_L936_242 >= min( ibdim, 256 + 256 * $I_L936_316 ) + -256 * $I_L936_316 ) exit
  936.                                     enddo
  936.                                     $I_L936_309 = 1 + $I_L936_309
  936.                                     if ( $I_L936_309 >= min( kmax, 8 + 8 * $I_L936_318 ) + -8 * $I_L936_318 ) exit
  936.                                  enddo
  936.                                  $I_L936_322 = 1 + $I_L936_322
  936.                                  if ( $I_L936_322 >= -$I_L936_312 + cvmg( 2, 1, reducedgrid ) ) exit
  936.                               enddo
  936.                            endif
  936.                            $I_L936_316 = 1 + $I_L936_316
  936.                            if ( $I_L936_316 >= 1 + max( 0, -1 + _rsh( 255 + ibdim, 8 ) ) ) exit
  936.                         enddo
  936.                         $I_L936_318 = 1 + $I_L936_318
  936.                         if ( $I_L936_318 >= 1 + max( 0, -1 + _rsh( 7 + kmax, 3 ) ) ) exit
  936.                      enddo
  936.                   endif
  936.                endif
  936.             endif
  936.             if ( cvmg( 2, 1, reducedgrid ) == 1 ) then
  936.                $F_A34 = kmax
  936.                $F_A35 = ibdim
  936.                if ( and( -$F_A35, -$F_A34 ) < 0 ) then
  936.                   $I_L936_295 = 0
  936.                   do
  936.                      $I_L936_263 = 0
  936. !dir$ ivdep
  936.                      do
  936.                         iloc(1 + $I_L936_263, 1 + $I_L936_295, 2) = iloc(1 + $I_L936_263, 1 + $I_L936_295, 1)
  936.                         $I_L936_263 = 1 + $I_L936_263
  936.                         if ( $I_L936_263 >= $F_A35 ) exit
  936.                      enddo
  936.                      $I_L936_295 = 1 + $I_L936_295
  936.                      if ( $I_L936_295 >= $F_A34 ) exit
  936.                   enddo
  936.                endif
  936.                $F_A36 = kmax
  936.                $F_A37 = ibdim
  936.                if ( and( -$F_A37, -$F_A36 ) < 0 ) then
  936.                   $I_L936_297 = 0
  936.                   do
  936.                      $I_L936_265 = 0
  936. !dir$ ivdep
  936.                      do
  936.                         iloc(1 + $I_L936_265, 1 + $I_L936_297, 3) = iloc(1 + $I_L936_265, 1 + $I_L936_297, 1)
  936.                         $I_L936_265 = 1 + $I_L936_265
  936.                         if ( $I_L936_265 >= $F_A37 ) exit
  936.                      enddo
  936.                      $I_L936_297 = 1 + $I_L936_297
  936.                      if ( $I_L936_297 >= $F_A36 ) exit
  936.                   enddo
  936.                endif
  936.                $F_A38 = kmax
  936.                $F_A39 = ibdim
  936.                if ( and( -$F_A39, -$F_A38 ) < 0 ) then
  936.                   $I_L936_299 = 0
  936.                   do
  936.                      $I_L936_267 = 0
  936. !dir$ ivdep
  936.                      do
  936.                         iloc(1 + $I_L936_267, 1 + $I_L936_299, 4) = iloc(1 + $I_L936_267, 1 + $I_L936_299, 1)
  936.                         $I_L936_267 = 1 + $I_L936_267
  936.                         if ( $I_L936_267 >= $F_A39 ) exit
  936.                      enddo
  936.                      $I_L936_299 = 1 + $I_L936_299
  936.                      if ( $I_L936_299 >= $F_A38 ) exit
  936.                   enddo
  936.                endif
  936.                $F_A40 = kmax
  936.                $F_A41 = ibdim
  936.                if ( and( -$F_A41, -$F_A40 ) < 0 ) then
  936.                   $I_L936_301 = 0
  936.                   do
  936.                      $I_L936_269 = 0
  936. !dir$ ivdep
  936.                      do
  936.                         ulondp(1 + $I_L936_269, 1 + $I_L936_301, 2) = ulondp(1 + $I_L936_269, 1 + $I_L936_301, 1)
  936.                         $I_L936_269 = 1 + $I_L936_269
  936.                         if ( $I_L936_269 >= $F_A41 ) exit
  936.                      enddo
  936.                      $I_L936_301 = 1 + $I_L936_301
  936.                      if ( $I_L936_301 >= $F_A40 ) exit
  936.                   enddo
  936.                endif
  936.                $F_A42 = kmax
  936.                $F_A43 = ibdim
  936.                if ( and( -$F_A43, -$F_A42 ) < 0 ) then
  936.                   $I_L936_303 = 0
  936.                   do
  936.                      $I_L936_271 = 0
  936. !dir$ ivdep
  936.                      do
  936.                         ulondp(1 + $I_L936_271, 1 + $I_L936_303, 3) = ulondp(1 + $I_L936_271, 1 + $I_L936_303, 1)
  936.                         $I_L936_271 = 1 + $I_L936_271
  936.                         if ( $I_L936_271 >= $F_A43 ) exit
  936.                      enddo
  936.                      $I_L936_303 = 1 + $I_L936_303
  936.                      if ( $I_L936_303 >= $F_A42 ) exit
  936.                   enddo
  936.                endif
  936.                $F_A44 = kmax
  936.                $F_A45 = ibdim
  936.                if ( and( -$F_A45, -$F_A44 ) < 0 ) then
  936.                   $I_L936_305 = 0
  936.                   do
  936.                      $I_L936_273 = 0
  936. !dir$ ivdep
  936.                      do
  936.                         ulondp(1 + $I_L936_273, 1 + $I_L936_305, 4) = ulondp(1 + $I_L936_273, 1 + $I_L936_305, 1)
  936.                         $I_L936_273 = 1 + $I_L936_273
  936.                         if ( $I_L936_273 >= $F_A45 ) exit
  936.                      enddo
  936.                      $I_L936_305 = 1 + $I_L936_305
  936.                      if ( $I_L936_305 >= $F_A44 ) exit
  936.                   enddo
  936.                endif
  936.             endif
  936.             iloc(1, 1, 1) = _copyout( iloc )
  936.             ulondp(1, 1, 1) = _copyout( ulondp )
  945.             ipa$2084 = loc( wint(1) )
  945.             fint = _copyin( wint(1) )
  945.             ipa$2086 = loc( (fgw%base_addr)(fgw%dim_1%LB, fgw%dim_2%LB, fgw%dim_3%LB, 0) )
  945.             f = _copyin( (fgw%base_addr)(fgw%dim_1%LB, fgw%dim_2%LB, fgw%dim_3%LB, 0) )
  945.             ipa$2088 = loc( ulondp(1, 1, 1) )
  945.             ulondp = _copyin( ulondp(1, 1, 1) )
  945.             ipa$2090 = loc( iloc(1, 1, 1) )
  945.             iloc = _copyin( iloc(1, 1, 1) )
  945.             ipa$2092 = loc( ip(1, 1, 1) )
  945.             ip = _copyin( ip(1, 1, 1) )
  945.             ipa$2094 = loc( jn(1, 1, 1) )
  945.             jn = _copyin( jn(1, 1, 1) )
  945.             t$48 = ibdim
  945.             t$49 = kmax
  945.             t$289 = max( 0, ibdim )
  945.             t$290 = ibdim
  945.             t$291 = max( 0, kmax )
  945.             t$292 = ibdim * max( 0, kmax )
  945.             t$50 = ibmax
  945.             t$51 = jbmax_ext
  945.             t$293 = max( 0, ibmax )
  945.             t$294 = max( 0, ibmax )
  945.             t$295 = max( 0, kmax ) * max( 0, ibmax )
  945.             t$296 = max( 0, jbmax_ext )
  945.             t$297 = max( 0, kmax ) * max( 0, ibmax ) * max( 0, jbmax_ext )
  945.             t$298 = ibdim * max( 0, kmax )
  945.             t$299 = ibdim * max( 0, kmax ) * 2
  945.             t$300 = ibdim * max( 0, kmax ) * 4
  945.             if ( kmax > 0 ) then
  945.                if ( ibdim > 0 ) then
  945.                   $I_L945_281 = 0
  945.                   do
  945.                      $I_L945_245 = 0
  945. !dir$ ivdep
  945.                      do
  945.                         $jp_S14 = jmax + -jloc(1 + $I_L945_245, 1 + $I_L945_281) + 1
  945.                         ip(1 + $I_L945_245, 1 + $I_L945_281, 1) = (ibperij%base_addr)(iloc(1 + $I_L945_245, 1 + $I_L945_281, 1), $jp_S14, 0)
  945.                         ip(1 + $I_L945_245, 1 + $I_L945_281, 2) = (ibperij%base_addr)(iloc(1 + $I_L945_245, 1 + $I_L945_281, 2), -1 + $jp_S14, 0)
  945.                         ip(1 + $I_L945_245, 1 + $I_L945_281, 3) = (ibperij%base_addr)(1 + iloc(1 + $I_L945_245, 1 + $I_L945_281, 1), $jp_S14, 0)
  945.                         ip(1 + $I_L945_245, 1 + $I_L945_281, 4) = (ibperij%base_addr)(1 + iloc(1 + $I_L945_245, 1 + $I_L945_281, 2), -1 + $jp_S14, 0)
  945.                         jn(1 + $I_L945_245, 1 + $I_L945_281, 1) = (jbperij%base_addr)(iloc(1 + $I_L945_245, 1 + $I_L945_281, 1), $jp_S14, 0)
  945.                         jn(1 + $I_L945_245, 1 + $I_L945_281, 2) = (jbperij%base_addr)(iloc(1 + $I_L945_245, 1 + $I_L945_281, 2), -1 + $jp_S14, 0)
  945.                         jn(1 + $I_L945_245, 1 + $I_L945_281, 3) = (jbperij%base_addr)(1 + iloc(1 + $I_L945_245, 1 + $I_L945_281, 1), $jp_S14, 0)
  945.                         jn(1 + $I_L945_245, 1 + $I_L945_281, 4) = (jbperij%base_addr)(1 + iloc(1 + $I_L945_245, 1 + $I_L945_281, 2), -1 + $jp_S14, 0)
  945.                         $I_L945_245 = 1 + $I_L945_245
  945.                         if ( $I_L945_245 >= ibdim ) exit
  945.                      enddo
  945.                      $I_L945_281 = 1 + $I_L945_281
  945.                      if ( $I_L945_281 >= kmax ) exit
  945.                   enddo
  945.                endif
  945.             endif
  945.             $Reduc_A46 = .false.
  945.             $F_A50 = kmax
  945.             $F_A51 = ibdim
  945.             if ( and( -$F_A51, -$F_A50 ) < 0 ) then
  945.                $I_L945_314 = 0
  945.                do
  945.                   $I_L945_307 = 0
  945.                   do
  945.                      $I_L945_275 = 0
  945. !dir$ ivdep
  945.                      do
  945.                         if ( ip(1 + $I_L945_275, 1 + $I_L945_307, 1 + $I_L945_314) == 0 ) then
  945.                            $Reduc_A46 = .true.
  945.                            goto 10
  945.                         endif
  945.                         $I_L945_275 = 1 + $I_L945_275
  945.                         if ( $I_L945_275 >= $F_A51 ) exit
  945.                      enddo
  945.                      $I_L945_307 = 1 + $I_L945_307
  945.                      if ( $I_L945_307 >= $F_A50 ) exit
  945.                   enddo
  945.                   $I_L945_314 = 1 + $I_L945_314
  945.                   if ( $I_L945_314 >= 4 ) exit
  945.                enddo
  945.             endif
  945.    10       continue
  945.             if ( $Reduc_A46 ) then
  945.                $Unit_temp_O0 = nfprt
  945.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$53,  _substr(t$52,1,23), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(InterplG)**', 0x800600000000L ) ) )
  945.                $Unit_temp_O1 = nfprt
  945.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$55,  _substr(t$54,1,47), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(InterplG)**', 0x800600000000L ) ) )
  945.                 _substr(t$571,1,14) = '**(InterplG)**'
  945.                call _stop(  _substr(t$571,1,14) )
  945.             else if ( kmax > 0 ) then
  945.                if ( ibdim > 0 ) then
  945.                   $I_L945_283 = 0
  945.                   do
  945.                      $I_L945_247 = 0
  945. !dir$ ivdep
  945.                      do
  945.                         $f1_S18 = f(ip(1 + $I_L945_247, 1 + $I_L945_283, 1), kloc(1 + $I_L945_247, 1 + $I_L945_283), jn(1 + $I_L945_247, 1 + $I_L945_283, 1)) + ulondp(1 + $I_L945_247, 1 + $I_L945_283, 1) * ( f(ip(1 + $I_L945_247, 1 + $I_L945_283, 3), kloc(1 + $I_L945_247, 1 + $I_L945_283), jn(1 + $I_L945_247, 1 + $I_L945_283, 3)) + -f(ip(1 + $I_L945_247, 1 + $I_L945_283, 1), kloc(1 + $I_L945_247, 1 + $I_L945_283), jn(1 + $I_L945_247, 1 + $I_L945_283, 1)) )
  945.                         $f2_S20 = f(ip(1 + $I_L945_247, 1 + $I_L945_283, 2), kloc(1 + $I_L945_247, 1 + $I_L945_283), jn(1 + $I_L945_247, 1 + $I_L945_283, 2)) + ulondp(1 + $I_L945_247, 1 + $I_L945_283, 2) * ( f(ip(1 + $I_L945_247, 1 + $I_L945_283, 4), kloc(1 + $I_L945_247, 1 + $I_L945_283), jn(1 + $I_L945_247, 1 + $I_L945_283, 4)) + -f(ip(1 + $I_L945_247, 1 + $I_L945_283, 2), kloc(1 + $I_L945_247, 1 + $I_L945_283), jn(1 + $I_L945_247, 1 + $I_L945_283, 2)) )
  945.                         $f3_S19 = f(ip(1 + $I_L945_247, 1 + $I_L945_283, 1), 1 + kloc(1 + $I_L945_247, 1 + $I_L945_283), jn(1 + $I_L945_247, 1 + $I_L945_283, 1)) + ulondp(1 + $I_L945_247, 1 + $I_L945_283, 1) * ( f(ip(1 + $I_L945_247, 1 + $I_L945_283, 3), 1 + kloc(1 + $I_L945_247, 1 + $I_L945_283), jn(1 + $I_L945_247, 1 + $I_L945_283, 3)) + -f(ip(1 + $I_L945_247, 1 + $I_L945_283, 1), 1 + kloc(1 + $I_L945_247, 1 + $I_L945_283), jn(1 + $I_L945_247, 1 + $I_L945_283, 1)) )
  945.                         $f4_S21 = f(ip(1 + $I_L945_247, 1 + $I_L945_283, 2), 1 + kloc(1 + $I_L945_247, 1 + $I_L945_283), jn(1 + $I_L945_247, 1 + $I_L945_283, 2)) + ulondp(1 + $I_L945_247, 1 + $I_L945_283, 2) * ( f(ip(1 + $I_L945_247, 1 + $I_L945_283, 4), 1 + kloc(1 + $I_L945_247, 1 + $I_L945_283), jn(1 + $I_L945_247, 1 + $I_L945_283, 4)) + -f(ip(1 + $I_L945_247, 1 + $I_L945_283, 2), 1 + kloc(1 + $I_L945_247, 1 + $I_L945_283), jn(1 + $I_L945_247, 1 + $I_L945_283, 2)) )
  945.                         $f1_S22 = $f1_S18 + usigdp(1 + $I_L945_247, 1 + $I_L945_283) * ( $f3_S19 + -$f1_S18 )
  945.                         $f2_S23 = $f2_S20 + usigdp(1 + $I_L945_247, 1 + $I_L945_283) * ( $f4_S21 + -$f2_S20 )
  945.                         fint(1 + $I_L945_247, 1 + $I_L945_283) = $f1_S22 + ulatdp(1 + $I_L945_247, 1 + $I_L945_283) * ( $f2_S23 + -$f1_S22 )
  945.                         $I_L945_247 = 1 + $I_L945_247
  945.                         if ( $I_L945_247 >= ibdim ) exit
  945.                      enddo
  945.                      $I_L945_283 = 1 + $I_L945_283
  945.                      if ( $I_L945_283 >= kmax ) exit
  945.                   enddo
  945.                endif
  945.             endif
  945.             jn(1, 1, 1) = _copyout( jn )
  945.             ip(1, 1, 1) = _copyout( ip )
  945.             iloc(1, 1, 1) = _copyout( iloc )
  945.             ulondp(1, 1, 1) = _copyout( ulondp )
  945.             (fgw%base_addr)(fgw%dim_1%LB, fgw%dim_2%LB, fgw%dim_3%LB, 0) = _copyout( f )
  945.             wint(1) = _copyout( fint )
  954.             ipa$2106 = loc( wint(1) )
  954.             w = _copyin( wint(1) )
  954.             t$32 = ibdim
  954.             t$33 = kmax
  954.             t$236 = max( 0, ibdim )
  954.             t$237 = ibdim
  954.             t$238 = max( 0, kmax )
  954.             t$239 = ibdim * max( 0, kmax )
  954.             if ( kmax > 0 ) then
  954.                if ( ibdim > 0 ) then
  954.                   $SC_cl_I48 = (cl%base_addr)(kmax, 0)
  954.                   $SC_cl_I47 = (cl%base_addr)(1, 0)
  954.                   $I_L954_285 = 0
  954.                   do
  954.                      $SCA_cl_I49 = (cl%base_addr)(1 + $I_L954_285, 0)
  954.                      $I_L954_249 = 0
  954. !dir$ ivdep
  954.                      do
  954.                         usigm(1 + $I_L954_249, 1 + $I_L954_285) = min( $SC_cl_I48, max( $SC_cl_I47, $SCA_cl_I49 + -( delt * w(1 + $I_L954_249, 1 + $I_L954_285) ) ) )
  954.                         $I_L954_249 = 1 + $I_L954_249
  954.                         if ( $I_L954_249 >= ibdim ) exit
  954.                      enddo
  959.                      $I_L959_253 = 0
  959. !dir$ ivdep
  959.                      do
  959.                         $ik_S28 = int( ( ( usigm(1 + $I_L959_253, 1 + $I_L954_285) + -(sigma%base_addr)(1 + $I_L959_253, 1, 0) ) * 1.0/delsigref ) )
  959.                         $kloc_WR0_R4 = (ksigref%base_addr)(1 + $I_L959_253, $ik_S28, 0)
  959.                         kloc(1 + $I_L959_253, 1 + $I_L954_285) = $kloc_WR0_R4
  959.                         if ( usigm(1 + $I_L959_253, 1 + $I_L954_285) > (sigma%base_addr)(1 + $I_L959_253, 1 + $kloc_WR0_R4, 0) ) then
  959.                            $kloc_WR0_R4 = 1 + $kloc_WR0_R4
  959.                            kloc(1 + $I_L959_253, 1 + $I_L954_285) = $kloc_WR0_R4
  959.                         endif
  959.                         usigdp(1 + $I_L959_253, 1 + $I_L954_285) = ( ( usigm(1 + $I_L959_253, 1 + $I_L954_285) + -(sigma%base_addr)(1 + $I_L959_253, $kloc_WR0_R4, 0) ) * 1.0/(delsigma%base_addr)(1 + $I_L959_253, $kloc_WR0_R4, 0) )
  959.                         $I_L959_253 = 1 + $I_L959_253
  959.                         if ( $I_L959_253 >= ibdim ) exit
  959.                      enddo
  954.                      $I_L954_285 = 1 + $I_L954_285
  954.                      if ( $I_L954_285 >= kmax ) exit
  954.                   enddo
  954.                endif
  954.             endif
  954.             if ( $I_L929_320 + -nit + 1 == 0 ) then
  954.                if ( kmax > 0 ) then
  954.                   if ( ibdim > 0 ) then
  954.                      $SC_cl_I48 = (cl%base_addr)(kmax, 0)
  954.                      $SC_cl_I47 = (cl%base_addr)(1, 0)
  954.                      $I_L954_287 = 0
  954.                      do
  954.                         $SCA_cl_I50 = (cl%base_addr)(1 + $I_L954_287, 0)
  954.                         $I_L954_251 = 0
  954. !dir$ ivdep
  954.                         do
  954.                            usig(1 + $I_L954_251, 1 + $I_L954_287) = min( $SC_cl_I48, max( $SC_cl_I47, 2.0 * usigm(1 + $I_L954_251, 1 + $I_L954_287) + -$SCA_cl_I50 ) )
  954.                            $I_L954_251 = 1 + $I_L954_251
  954.                            if ( $I_L954_251 >= ibdim ) exit
  954.                         enddo
  954.                         $I_L954_287 = 1 + $I_L954_287
  954.                         if ( $I_L954_287 >= kmax ) exit
  954.                      enddo
  954.                   endif
  954.                endif
  954.             endif
  954.             wint(1) = _copyout( w )
  959.             ipa$2150 = loc( ulondp(1, 1, 1) )
  959.             ulondp = _copyin( ulondp(1, 1, 1) )
  959.             ipa$2152 = loc( iloc(1, 1, 1) )
  959.             iloc = _copyin( iloc(1, 1, 1) )
  959.             t$38 = ibdim
  959.             t$39 = kmax
  959.             t$255 = max( 0, ibdim )
  959.             t$256 = ibdim
  959.             t$257 = max( 0, kmax )
  959.             t$258 = ibdim * max( 0, kmax )
  959.             t$259 = ibdim * max( 0, kmax )
  959.             t$260 = ibdim * max( 0, kmax ) * 4
  959.             iloc(1, 1, 1) = _copyout( iloc )
  959.             ulondp(1, 1, 1) = _copyout( ulondp )
  968.             ipa$2204 = loc( (fgu%base_addr)(fgu%dim_1%LB, fgu%dim_2%LB, fgu%dim_3%LB, 0) )
  968.             u = _copyin( (fgu%base_addr)(fgu%dim_1%LB, fgu%dim_2%LB, fgu%dim_3%LB, 0) )
  968.             ipa$2206 = loc( (fgv%base_addr)(fgv%dim_1%LB, fgv%dim_2%LB, fgv%dim_3%LB, 0) )
  968.             v = _copyin( (fgv%base_addr)(fgv%dim_1%LB, fgv%dim_2%LB, fgv%dim_3%LB, 0) )
  968.             ipa$2208 = loc( uint(1) )
  968.             uint = _copyin( uint(1) )
  968.             ipa$2210 = loc( vint(1) )
  968.             vint = _copyin( vint(1) )
  968.             ipa$2212 = loc( ulondp(1, 1, 1) )
  968.             ulondp = _copyin( ulondp(1, 1, 1) )
  968.             ipa$2214 = loc( ip(1, 1, 1) )
  968.             ip = _copyin( ip(1, 1, 1) )
  968.             ipa$2216 = loc( jn(1, 1, 1) )
  968.             jn = _copyin( jn(1, 1, 1) )
  968.             t$43 = ibmax
  968.             t$42 = kmax
  968.             t$44 = jbmax_ext
  968.             t$264 = max( 0, ibmax )
  968.             t$265 = max( 0, ibmax )
  968.             t$266 = max( 0, kmax )
  968.             t$267 = max( 0, kmax ) * max( 0, ibmax )
  968.             t$268 = max( 0, jbmax_ext )
  968.             t$269 = max( 0, kmax ) * max( 0, ibmax ) * max( 0, jbmax_ext )
  968.             t$41 = ibdim
  968.             t$270 = max( 0, ibdim )
  968.             t$271 = ibdim
  968.             t$272 = ibdim * max( 0, kmax )
  968.             t$273 = ibdim * max( 0, kmax )
  968.             t$274 = ibdim * max( 0, kmax ) * 2
  968.             t$275 = ibdim * max( 0, kmax ) * 4
  968.             if ( kmax > 0 ) then
  968.                if ( ibdim > 0 ) then
  968.                   $I_L968_289 = 0
  968.                   do
  968.                      $I_L968_255 = 0
  968. !dir$ ivdep
  968.                      do
  968.                         $s1_S35 = cvmg( 1.0, -1.0, jloc(1 + $I_L968_255, 1 + $I_L968_289) /= 0 )
  968.                         $s2_S38 = cvmg( 1.0, -1.0, jloc(1 + $I_L968_255, 1 + $I_L968_289) + -jmax /= 0 )
  968.                         $f1_S33 = u(ip(1 + $I_L968_255, 1 + $I_L968_289, 1), kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 1)) + ulondp(1 + $I_L968_255, 1 + $I_L968_289, 1) * ( u(ip(1 + $I_L968_255, 1 + $I_L968_289, 3), kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 3)) + -u(ip(1 + $I_L968_255, 1 + $I_L968_289, 1), kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 1)) )
  968.                         $g1_S39 = v(ip(1 + $I_L968_255, 1 + $I_L968_289, 1), kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 1)) + ulondp(1 + $I_L968_255, 1 + $I_L968_289, 1) * ( v(ip(1 + $I_L968_255, 1 + $I_L968_289, 3), kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 3)) + -v(ip(1 + $I_L968_255, 1 + $I_L968_289, 1), kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 1)) )
  968.                         $f2_S36 = u(ip(1 + $I_L968_255, 1 + $I_L968_289, 2), kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 2)) + ulondp(1 + $I_L968_255, 1 + $I_L968_289, 2) * ( u(ip(1 + $I_L968_255, 1 + $I_L968_289, 4), kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 4)) + -u(ip(1 + $I_L968_255, 1 + $I_L968_289, 2), kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 2)) )
  968.                         $g2_S41 = v(ip(1 + $I_L968_255, 1 + $I_L968_289, 2), kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 2)) + ulondp(1 + $I_L968_255, 1 + $I_L968_289, 2) * ( v(ip(1 + $I_L968_255, 1 + $I_L968_289, 4), kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 4)) + -v(ip(1 + $I_L968_255, 1 + $I_L968_289, 2), kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 2)) )
  968.                         $f3_S34 = u(ip(1 + $I_L968_255, 1 + $I_L968_289, 1), 1 + kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 1)) + ulondp(1 + $I_L968_255, 1 + $I_L968_289, 1) * ( u(ip(1 + $I_L968_255, 1 + $I_L968_289, 3), 1 + kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 3)) + -u(ip(1 + $I_L968_255, 1 + $I_L968_289, 1), 1 + kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 1)) )
  968.                         $g3_S40 = v(ip(1 + $I_L968_255, 1 + $I_L968_289, 1), 1 + kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 1)) + ulondp(1 + $I_L968_255, 1 + $I_L968_289, 1) * ( v(ip(1 + $I_L968_255, 1 + $I_L968_289, 3), 1 + kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 3)) + -v(ip(1 + $I_L968_255, 1 + $I_L968_289, 1), 1 + kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 1)) )
  968.                         $f4_S37 = u(ip(1 + $I_L968_255, 1 + $I_L968_289, 2), 1 + kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 2)) + ulondp(1 + $I_L968_255, 1 + $I_L968_289, 2) * ( u(ip(1 + $I_L968_255, 1 + $I_L968_289, 4), 1 + kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 4)) + -u(ip(1 + $I_L968_255, 1 + $I_L968_289, 2), 1 + kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 2)) )
  968.                         $g4_S42 = v(ip(1 + $I_L968_255, 1 + $I_L968_289, 2), 1 + kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 2)) + ulondp(1 + $I_L968_255, 1 + $I_L968_289, 2) * ( v(ip(1 + $I_L968_255, 1 + $I_L968_289, 4), 1 + kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 4)) + -v(ip(1 + $I_L968_255, 1 + $I_L968_289, 2), 1 + kloc(1 + $I_L968_255, 1 + $I_L968_289), jn(1 + $I_L968_255, 1 + $I_L968_289, 2)) )
  968.                         $f1_S43 = $s1_S35 * ( $f1_S33 + usigdp(1 + $I_L968_255, 1 + $I_L968_289) * ( $f3_S34 + -$f1_S33 ) )
  968.                         $f2_S44 = $s2_S38 * ( $f2_S36 + usigdp(1 + $I_L968_255, 1 + $I_L968_289) * ( $f4_S37 + -$f2_S36 ) )
  968.                         $g1_S45 = $s1_S35 * ( $g1_S39 + usigdp(1 + $I_L968_255, 1 + $I_L968_289) * ( $g3_S40 + -$g1_S39 ) )
  968.                         $g2_S46 = $s2_S38 * ( $g2_S41 + usigdp(1 + $I_L968_255, 1 + $I_L968_289) * ( $g4_S42 + -$g2_S41 ) )
  968.                         uint(1 + $I_L968_255, 1 + $I_L968_289) = $f1_S43 + ulatdp(1 + $I_L968_255, 1 + $I_L968_289) * ( $f2_S44 + -$f1_S43 )
  968.                         vint(1 + $I_L968_255, 1 + $I_L968_289) = $g1_S45 + ulatdp(1 + $I_L968_255, 1 + $I_L968_289) * ( $g2_S46 + -$g1_S45 )
  968.                         $I_L968_255 = 1 + $I_L968_255
  968.                         if ( $I_L968_255 >= ibdim ) exit
  968.                      enddo
  968.                      $I_L968_289 = 1 + $I_L968_289
  968.                      if ( $I_L968_289 >= kmax ) exit
  968.                   enddo
  968.                endif
  968.             endif
  968.             jn(1, 1, 1) = _copyout( jn )
  968.             ip(1, 1, 1) = _copyout( ip )
  968.             ulondp(1, 1, 1) = _copyout( ulondp )
  968.             vint(1) = _copyout( vint )
  968.             uint(1) = _copyout( uint )
  968.             (fgv%base_addr)(fgv%dim_1%LB, fgv%dim_2%LB, fgv%dim_3%LB, 0) = _copyout( v )
  968.             (fgu%base_addr)(fgu%dim_1%LB, fgu%dim_2%LB, fgu%dim_3%LB, 0) = _copyout( u )
  978.             ipa$2254 = loc( (coslon%base_addr)(1, jb, 0) )
  978.             coslon = _copyin( (coslon%base_addr)(1, jb, 0) )
  978.             ipa$2256 = loc( (sinlon%base_addr)(1, jb, 0) )
  978.             sinlon = _copyin( (sinlon%base_addr)(1, jb, 0) )
  978.             ipa$2258 = loc( (coslat%base_addr)(1, jb, 0) )
  978.             coslat = _copyin( (coslat%base_addr)(1, jb, 0) )
  978.             ipa$2260 = loc( (sinlat%base_addr)(1, jb, 0) )
  978.             sinlat = _copyin( (sinlat%base_addr)(1, jb, 0) )
  978.             ipa$2262 = loc( uint(1) )
  978.             u = _copyin( uint(1) )
  978.             ipa$2264 = loc( vint(1) )
  978.             v = _copyin( vint(1) )
  978.             t$34 = ibdim
  978.             t$35 = kmax
  978.             t$240 = max( 0, ibdim )
  978.             t$241 = ibdim
  978.             t$242 = max( 0, kmax )
  978.             t$243 = ibdim * max( 0, kmax )
  978.             t$36 = ibmax
  978.             t$244 = max( 0, ibmax )
  978.             t$247 = 8 * max( 0, ibmax )
  978.             t$248 = 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  978.             t$250 = 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  978.             t$251 = 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 )
  978.             t$253 = 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 )
  978.             t$245 = int( _alloc( 8 * max( 0, ibmax ) + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 ) ), 8 )
  978.             t$246 = t$245
  978.             t$249 = t$245 + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
  978.             t$252 = t$245 + 8 * ( ( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) + 7 ) / 8 )
  978.             $dt2_S57 = delt * delt
  978.             $twodt_S58 = 2.0 * delt
  978.             if ( ibdim > 0 ) then
  978.                $I_L978_257 = 0
  978. !dir$ ivdep
  978.                do
  978.                   x(1 + $I_L978_257) = coslon(1 + $I_L978_257) * coslat(1 + $I_L978_257)
  978.                   y(1 + $I_L978_257) = sinlon(1 + $I_L978_257) * coslat(1 + $I_L978_257)
  978.                   z(1 + $I_L978_257) = sinlat(1 + $I_L978_257)
  978.                   $I_L978_257 = 1 + $I_L978_257
  978.                   if ( $I_L978_257 >= ibdim ) exit
  978.                enddo
  978.             endif
  978.             if ( $I_L929_320 + -nit + 1 == 0 ) then
  978.                if ( kmax > 0 ) then
  978.                   if ( ibdim > 0 ) then
  978.                      $I_L978_293 = 0
  978. !dir$ blocking_size( 0, 0 )
  978.                      do
  978.                         $I_L978_261 = 0
  978. !dir$ ivdep
  978. !dir$ blocking_size( 0, 0 )
  978.                         do
  978.                            $Coss_P1 = coss( ulonm(1 + $I_L978_261, 1 + $I_L978_293) )
  978.                            $Coss_P2 = coss( ulatm(1 + $I_L978_261, 1 + $I_L978_293) )
  978.                            $xdot_S55 = -( u(1 + $I_L978_261, 1 + $I_L978_293) * cimag( $Coss_P1 ) + v(1 + $I_L978_261, 1 + $I_L978_293) * real( $Coss_P1, 8 ) * cimag( $Coss_P2 ) )
  978.                            $ydot_S54 = u(1 + $I_L978_261, 1 + $I_L978_293) * real( $Coss_P1, 8 ) + -( v(1 + $I_L978_261, 1 + $I_L978_293) * cimag( $Coss_P1 ) * cimag( $Coss_P2 ) )
  978.                            $zdot_S56 = real( $Coss_P2, 8 ) * v(1 + $I_L978_261, 1 + $I_L978_293)
  978.                            $r_S59 = -( $twodt_S58 * ( $xdot_S55 * x(1 + $I_L978_261) + $ydot_S54 * y(1 + $I_L978_261) + $zdot_S56 * z(1 + $I_L978_261) ) ) + $dt2_S57 * ( $xdot_S55 * $xdot_S55 + $ydot_S54 * $ydot_S54 + $zdot_S56 * $zdot_S56 ) + 1.0
  978.                            $xb_S60 = _recip_sqrt( $r_S59 ) * ( x(1 + $I_L978_261) + -( delt * $xdot_S55 ) )
  978.                            $yb_S61 = _recip_sqrt( $r_S59 ) * ( y(1 + $I_L978_261) + -( delt * $ydot_S54 ) )
  978.                            $zb_S62 = _recip_sqrt( $r_S59 ) * ( z(1 + $I_L978_261) + -( delt * $zdot_S56 ) )
  978.                            $ulonm_WR0_R5 = atan2( $yb_S61, $xb_S60 )
  978.                            ulonm(1 + $I_L978_261, 1 + $I_L978_293) = atan2( $yb_S61, $xb_S60 )
  978.                            if ( atan2( $yb_S61, $xb_S60 ) < 0.0 ) then
  978.                               $ulonm_WR0_R5 = 6.28318530717958 + $ulonm_WR0_R5
  978.                               ulonm(1 + $I_L978_261, 1 + $I_L978_293) = $ulonm_WR0_R5
  978.                            endif
  978.                            ulatm(1 + $I_L978_261, 1 + $I_L978_293) = asin( $zb_S62 )
  978.                            $dot2_S63 = 2.0 * ( x(1 + $I_L978_261) * $xb_S60 + y(1 + $I_L978_261) * $yb_S61 + z(1 + $I_L978_261) * $zb_S62 )
  978.                            $xm_S64 = $dot2_S63 * $xb_S60 + -x(1 + $I_L978_261)
  978.                            $ym_S65 = $dot2_S63 * $yb_S61 + -y(1 + $I_L978_261)
  978.                            $zm_S66 = $dot2_S63 * $zb_S62 + -z(1 + $I_L978_261)
  978.                            $ulon_WR0_R6 = atan2( $ym_S65, $xm_S64 )
  978.                            ulon(1 + $I_L978_261, 1 + $I_L978_293) = atan2( $ym_S65, $xm_S64 )
  978.                            if ( atan2( $ym_S65, $xm_S64 ) < 0.0 ) then
  978.                               $ulon_WR0_R6 = 6.28318530717958 + $ulon_WR0_R6
  978.                               ulon(1 + $I_L978_261, 1 + $I_L978_293) = $ulon_WR0_R6
  978.                            endif
  978.                            ulat(1 + $I_L978_261, 1 + $I_L978_293) = asin( $zm_S66 )
  978.                            $I_L978_261 = 1 + $I_L978_261
  978.                            if ( $I_L978_261 >= ibdim ) exit
  978.                         enddo
  978.                         $I_L978_293 = 1 + $I_L978_293
  978.                         if ( $I_L978_293 >= kmax ) exit
  978.                      enddo
  978.                   endif
  978.                endif
  978.             else if ( kmax > 0 ) then
  978.                if ( ibdim > 0 ) then
  978.                   $I_L978_291 = 0
  978. !dir$ blocking_size( 0, 0 )
  978.                   do
  978.                      $I_L978_259 = 0
  978. !dir$ ivdep
  978. !dir$ blocking_size( 0, 0 )
  978.                      do
  978.                         $Coss_P3 = coss( ulonm(1 + $I_L978_259, 1 + $I_L978_291) )
  978.                         $Coss_P4 = coss( ulatm(1 + $I_L978_259, 1 + $I_L978_291) )
  978.                         $xdot_S74 = -( u(1 + $I_L978_259, 1 + $I_L978_291) * cimag( $Coss_P3 ) + v(1 + $I_L978_259, 1 + $I_L978_291) * real( $Coss_P3, 8 ) * cimag( $Coss_P4 ) )
  978.                         $ydot_S73 = u(1 + $I_L978_259, 1 + $I_L978_291) * real( $Coss_P3, 8 ) + -( v(1 + $I_L978_259, 1 + $I_L978_291) * cimag( $Coss_P3 ) * cimag( $Coss_P4 ) )
  978.                         $zdot_S75 = real( $Coss_P4, 8 ) * v(1 + $I_L978_259, 1 + $I_L978_291)
  978.                         $r_S76 = -( $twodt_S58 * ( $xdot_S74 * x(1 + $I_L978_259) + $ydot_S73 * y(1 + $I_L978_259) + $zdot_S75 * z(1 + $I_L978_259) ) ) + $dt2_S57 * ( $xdot_S74 * $xdot_S74 + $ydot_S73 * $ydot_S73 + $zdot_S75 * $zdot_S75 ) + 1.0
  978.                         $xb_S77 = _recip_sqrt( $r_S76 ) * ( x(1 + $I_L978_259) + -( delt * $xdot_S74 ) )
  978.                         $yb_S78 = _recip_sqrt( $r_S76 ) * ( y(1 + $I_L978_259) + -( delt * $ydot_S73 ) )
  978.                         $zb_S79 = _recip_sqrt( $r_S76 ) * ( z(1 + $I_L978_259) + -( delt * $zdot_S75 ) )
  978.                         $ulonm_WR0_R7 = atan2( $yb_S78, $xb_S77 )
  978.                         ulonm(1 + $I_L978_259, 1 + $I_L978_291) = atan2( $yb_S78, $xb_S77 )
  978.                         if ( atan2( $yb_S78, $xb_S77 ) < 0.0 ) then
  978.                            $ulonm_WR0_R7 = 6.28318530717958 + $ulonm_WR0_R7
  978.                            ulonm(1 + $I_L978_259, 1 + $I_L978_291) = $ulonm_WR0_R7
  978.                         endif
  978.                         ulatm(1 + $I_L978_259, 1 + $I_L978_291) = asin( $zb_S79 )
  978.                         $I_L978_259 = 1 + $I_L978_259
  978.                         if ( $I_L978_259 >= ibdim ) exit
  978.                      enddo
  978.                      $I_L978_291 = 1 + $I_L978_291
  978.                      if ( $I_L978_291 >= kmax ) exit
  978.                   enddo
  978.                endif
  978.             endif
  978.             _free( t$245 )
  978.             vint(1) = _copyout( v )
  978.             uint(1) = _copyout( u )
  978.             (sinlat%base_addr)(1, jb, 0) = _copyout( sinlat )
  978.             (coslat%base_addr)(1, jb, 0) = _copyout( coslat )
  978.             (sinlon%base_addr)(1, jb, 0) = _copyout( sinlon )
  978.             (coslon%base_addr)(1, jb, 0) = _copyout( coslon )
  983.             $I_L929_320 = 1 + $I_L929_320
  978.             if ( $I_L929_320 >= nit ) exit
  978.          enddo
  978.       endif
  884.       _free( t$193 )
  985.       return
  985.       end
  985.       
  986.       
  986.       subroutine trajectory2d( ulonm, ulatm, ulon, ulat, ulondp, ulatdp, iloc, jloc, ibdim, jb, nit, delt )
  986.       t$23 = ibdim
 1005.       t$202 = _zla( 0, ibdim )
  986.       t$203 = _zla( 0, ibdim )
  986.       t$204 = 4 * _zla( 0, ibdim )
  986.       t$24 = ibmax
 1015.       t$205 = _zla( 0, ibmax )
 1015.       t$208 = 8 * _zla( 0, ibmax )
 1016.       t$209 = 8 * _zla( 0, ibmax )
 1016.       t$211 = 16 * _zla( 0, ibmax )
  986.       t$206 = int( _alloc( 16 * _zla( 0, ibmax ) ), 8 )
 1015.       t$207 = t$206
 1016.       t$210 = t$206 + 8 * _zla( 0, ibmax )
 1023.       if ( nit > 0 ) then
 1023.          $I_L1023_100 = 0
 1023.          do
 1029.             t$40 = ibdim
 1029.             t$261 = _zla( 0, ibdim )
 1029.             t$262 = ibdim
 1029.             t$263 = ( 4 * ibdim )
 1029.             if ( cvmg( 2, 1, reducedgrid ) == 4 ) then
 1029.                kp(1) = -1
 1029.                kp(2) = 0
 1029.                kp(3) = 1
 1029.                kp(4) = 2
 1029.             else
 1029.                kp(1) = 0
 1029.                kp(2) = 1
 1029.             endif
 1029.             if ( ibdim > 0 ) then
 1029.                $I_L1029_74 = 0
 1029. !dir$ ivdep
 1029.                do
 1029.                   $ik_S1 = int( ( ( 1.570796326794895 + ulatm(1 + $I_L1029_74) ) * 1.0/delphiref ) )
 1029.                   $jloc_WR0_R0 = (jphiref%base_addr)(1 + $I_L1029_74, $ik_S1, 0)
 1029.                   jloc(1 + $I_L1029_74) = $jloc_WR0_R0
 1029.                   if ( ulatm(1 + $I_L1029_74) > (phi%base_addr)(1 + $I_L1029_74, 1 + $jloc_WR0_R0, 0) ) then
 1029.                      $jloc_WR0_R0 = 1 + $jloc_WR0_R0
 1029.                      jloc(1 + $I_L1029_74) = $jloc_WR0_R0
 1029.                   endif
 1029.                   ulatdp(1 + $I_L1029_74) = ( ( ulatm(1 + $I_L1029_74) + -(phi%base_addr)(1 + $I_L1029_74, $jloc_WR0_R0, 0) ) * 1.0/(delphi%base_addr)(1 + $I_L1029_74, $jloc_WR0_R0, 0) )
 1029.                   $I_L1029_74 = 1 + $I_L1029_74
 1029.                   if ( $I_L1029_74 >= ibdim ) exit
 1029.                enddo
 1029.             endif
 1029.             if ( cvmg( 2, 1, reducedgrid ) > 0 ) then
 1029.                if ( ibdim > 0 ) then
 1029.                   $I_L1029_98 = 0
 1029.                   if ( cvmg( 2, 1, reducedgrid ) >= 4 ) then
 1029.                      $I_L1029_105 = 0
 1029. !dir$ blocking_size( 0, 0 )
 1029.                      do
 1029.                         $ks#1_U0 = kp(1 + 4 * $I_L1029_105)
 1029.                         $ks#2_U1 = kp(2 + 4 * $I_L1029_105)
 1029.                         $ks#3_U2 = kp(3 + 4 * $I_L1029_105)
 1029.                         $ks#4_U3 = kp(4 + 4 * $I_L1029_105)
 1029.                         $I_L1029_76 = 0
 1029. !dir$ ivdep
 1029. !dir$ blocking_size( 0, 0 )
 1029.                         do
 1029.                            $j_S5 = jmax + -jloc(1 + $I_L1029_76) + 1
 1029.                            $ulondp_WR0_R1 = 1.0 + ( ulonm(1 + $I_L1029_76) * 1.0/(dellon%base_addr)(1 + $I_L1029_76, $j_S5 + -$ks#1_U0, 0) )
 1029.                            iloc(1 + $I_L1029_76, 1 + 4 * $I_L1029_105) = int( $ulondp_WR0_R1 )
 1029.                            $ulondp_WR0_R1 = $ulondp_WR0_R1 + ( -( int( $ulondp_WR0_R1 ) ) )
 1029.                            ulondp(1 + $I_L1029_76, 1 + 4 * $I_L1029_105) = $ulondp_WR0_R1
 1029.                            $j_S5 = jmax + -jloc(1 + $I_L1029_76) + 1
 1029.                            $ulondp_WR0_R1 = 1.0 + ( ulonm(1 + $I_L1029_76) * 1.0/(dellon%base_addr)(1 + $I_L1029_76, $j_S5 + -$ks#2_U1, 0) )
 1029.                            iloc(1 + $I_L1029_76, 2 + 4 * $I_L1029_105) = int( $ulondp_WR0_R1 )
 1029.                            $ulondp_WR0_R1 = $ulondp_WR0_R1 + ( -( int( $ulondp_WR0_R1 ) ) )
 1029.                            ulondp(1 + $I_L1029_76, 2 + 4 * $I_L1029_105) = $ulondp_WR0_R1
 1029.                            $j_S5 = jmax + -jloc(1 + $I_L1029_76) + 1
 1029.                            $ulondp_WR0_R1 = 1.0 + ( ulonm(1 + $I_L1029_76) * 1.0/(dellon%base_addr)(1 + $I_L1029_76, $j_S5 + -$ks#3_U2, 0) )
 1029.                            iloc(1 + $I_L1029_76, 3 + 4 * $I_L1029_105) = int( $ulondp_WR0_R1 )
 1029.                            $ulondp_WR0_R1 = $ulondp_WR0_R1 + ( -( int( $ulondp_WR0_R1 ) ) )
 1029.                            ulondp(1 + $I_L1029_76, 3 + 4 * $I_L1029_105) = $ulondp_WR0_R1
 1029.                            $j_S5 = jmax + -jloc(1 + $I_L1029_76) + 1
 1029.                            $ulondp_WR0_R1 = 1.0 + ( ulonm(1 + $I_L1029_76) * 1.0/(dellon%base_addr)(1 + $I_L1029_76, $j_S5 + -$ks#4_U3, 0) )
 1029.                            iloc(1 + $I_L1029_76, 4 + 4 * $I_L1029_105) = int( $ulondp_WR0_R1 )
 1029.                            $ulondp_WR0_R1 = $ulondp_WR0_R1 + ( -( int( $ulondp_WR0_R1 ) ) )
 1029.                            ulondp(1 + $I_L1029_76, 4 + 4 * $I_L1029_105) = $ulondp_WR0_R1
 1029.                            $I_L1029_76 = 1 + $I_L1029_76
 1029.                            if ( $I_L1029_76 >= ibdim ) exit
 1029.                         enddo
 1029.                         $I_L1029_105 = 1 + $I_L1029_105
 1029.                         if ( $I_L1029_105 >= _rsh( cvmg( 2, 1, reducedgrid ), 2 ) ) exit
 1029.                      enddo
 1029.                      $I_L1029_98 = and( 0xfffffffffffffffcUL, cvmg( 2, 1, reducedgrid ) )
 1029.                   endif
 1029.                   if ( $I_L1029_98 < cvmg( 2, 1, reducedgrid ) ) then
 1029.                      $I_L1029_102 = 0
 1029. !dir$ blocking_size( 0, 0 )
 1029.                      do
 1029.                         $ks_S4 = kp($I_L1029_98 + $I_L1029_102 + 1)
 1029.                         $I_L1029_76 = 0
 1029. !dir$ ivdep
 1029. !dir$ blocking_size( 0, 0 )
 1029.                         do
 1029.                            $j_S5 = jmax + -jloc(1 + $I_L1029_76) + 1
 1029.                            $ulondp_WR0_R1 = 1.0 + ( ulonm(1 + $I_L1029_76) * 1.0/(dellon%base_addr)(1 + $I_L1029_76, $j_S5 + -$ks_S4, 0) )
 1029.                            iloc(1 + $I_L1029_76, $I_L1029_98 + $I_L1029_102 + 1) = int( $ulondp_WR0_R1 )
 1029.                            $ulondp_WR0_R1 = $ulondp_WR0_R1 + ( -( int( $ulondp_WR0_R1 ) ) )
 1029.                            ulondp(1 + $I_L1029_76, $I_L1029_98 + $I_L1029_102 + 1) = $ulondp_WR0_R1
 1029.                            $I_L1029_76 = 1 + $I_L1029_76
 1029.                            if ( $I_L1029_76 >= ibdim ) exit
 1029.                         enddo
 1029.                         $I_L1029_102 = 1 + $I_L1029_102
 1029.                         if ( $I_L1029_102 >= -$I_L1029_98 + cvmg( 2, 1, reducedgrid ) ) exit
 1029.                      enddo
 1029.                   endif
 1029.                endif
 1029.             endif
 1029.             if ( cvmg( 2, 1, reducedgrid ) == 1 ) then
 1029.                $F_A33 = ibdim
 1029.                if ( ibdim > 0 ) then
 1029.                   $I_L1029_86 = 0
 1029. !dir$ ivdep
 1029.                   do
 1029.                      iloc(1 + $I_L1029_86, 2) = iloc(1 + $I_L1029_86, 1)
 1029.                      $I_L1029_86 = 1 + $I_L1029_86
 1029.                      if ( $I_L1029_86 >= $F_A33 ) exit
 1029.                   enddo
 1029.                endif
 1029.                $F_A34 = ibdim
 1029.                if ( ibdim > 0 ) then
 1029.                   $I_L1029_88 = 0
 1029. !dir$ ivdep
 1029.                   do
 1029.                      iloc(1 + $I_L1029_88, 3) = iloc(1 + $I_L1029_88, 1)
 1029.                      $I_L1029_88 = 1 + $I_L1029_88
 1029.                      if ( $I_L1029_88 >= $F_A34 ) exit
 1029.                   enddo
 1029.                endif
 1029.                $F_A35 = ibdim
 1029.                if ( ibdim > 0 ) then
 1029.                   $I_L1029_90 = 0
 1029. !dir$ ivdep
 1029.                   do
 1029.                      iloc(1 + $I_L1029_90, 4) = iloc(1 + $I_L1029_90, 1)
 1029.                      $I_L1029_90 = 1 + $I_L1029_90
 1029.                      if ( $I_L1029_90 >= $F_A35 ) exit
 1029.                   enddo
 1029.                endif
 1029.                $F_A36 = ibdim
 1029.                if ( ibdim > 0 ) then
 1029.                   $I_L1029_92 = 0
 1029. !dir$ ivdep
 1029.                   do
 1029.                      ulondp(1 + $I_L1029_92, 2) = ulondp(1 + $I_L1029_92, 1)
 1029.                      $I_L1029_92 = 1 + $I_L1029_92
 1029.                      if ( $I_L1029_92 >= $F_A36 ) exit
 1029.                   enddo
 1029.                endif
 1029.                $F_A37 = ibdim
 1029.                if ( ibdim > 0 ) then
 1029.                   $I_L1029_94 = 0
 1029. !dir$ ivdep
 1029.                   do
 1029.                      ulondp(1 + $I_L1029_94, 3) = ulondp(1 + $I_L1029_94, 1)
 1029.                      $I_L1029_94 = 1 + $I_L1029_94
 1029.                      if ( $I_L1029_94 >= $F_A37 ) exit
 1029.                   enddo
 1029.                endif
 1029.                $F_A38 = ibdim
 1029.                if ( ibdim > 0 ) then
 1029.                   $I_L1029_96 = 0
 1029. !dir$ ivdep
 1029.                   do
 1029.                      ulondp(1 + $I_L1029_96, 4) = ulondp(1 + $I_L1029_96, 1)
 1029.                      $I_L1029_96 = 1 + $I_L1029_96
 1029.                      if ( $I_L1029_96 >= $F_A38 ) exit
 1029.                   enddo
 1029.                endif
 1029.             endif
 1038.             ipa$2306 = loc( (fgumean%base_addr)(fgumean%dim_1%LB, fgumean%dim_2%LB, 0) )
 1038.             u = _copyin( (fgumean%base_addr)(fgumean%dim_1%LB, fgumean%dim_2%LB, 0) )
 1038.             ipa$2308 = loc( (fgvmean%base_addr)(fgvmean%dim_1%LB, fgvmean%dim_2%LB, 0) )
 1038.             v = _copyin( (fgvmean%base_addr)(fgvmean%dim_1%LB, fgvmean%dim_2%LB, 0) )
 1038.             t$46 = ibmax
 1038.             t$47 = jbmax_ext
 1038.             t$276 = max( 0, ibmax )
 1038.             t$277 = max( 0, ibmax )
 1038.             t$278 = max( 0, jbmax_ext )
 1038.             t$279 = max( 0, ibmax ) * max( 0, jbmax_ext )
 1038.             t$45 = ibdim
 1038.             t$280 = max( 0, ibdim )
 1038.             t$281 = ibdim
 1038.             t$282 = ( 2 * ibdim )
 1038.             t$285 = 8 * max( 0, ibmax )
 1038.             t$286 = 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
 1038.             t$288 = 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
 1038.             t$283 = int( _alloc( 8 * max( 0, ibmax ) + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 ) ), 8 )
 1038.             t$284 = t$283
 1038.             t$287 = t$283 + 8 * ( ( 7 + 8 * max( 0, ibmax ) ) / 8 )
 1038.             if ( ibdim > 0 ) then
 1038.                $I_L1038_78 = 0
 1038. !dir$ ivdep
 1038.                do
 1038.                   $jp_S7 = jmax + -jloc(1 + $I_L1038_78) + 1
 1038.                   s1(1 + $I_L1038_78) = 1.0
 1038.                   s2(1 + $I_L1038_78) = 1.0
 1038.                   if ( jmax + -$jp_S7 == -1 ) then
 1038.                      s1(1 + $I_L1038_78) = -1.0
 1038.                   endif
 1038.                   if ( $jp_S7 == 1 ) then
 1038.                      s2(1 + $I_L1038_78) = -1.0
 1038.                   endif
 1038.                   $I_L1038_78 = 1 + $I_L1038_78
 1038.                   if ( $I_L1038_78 >= ibdim ) exit
 1038.                enddo
 1038.                $I_L1038_80 = 0
 1038. !dir$ ivdep
 1038.                do
 1038.                   $jp_S9 = jmax + -jloc(1 + $I_L1038_80) + 1
 1038.                   $i1_S10 = (ibperij%base_addr)(iloc(1 + $I_L1038_80, 1), $jp_S9, 0)
 1038.                   $i2_S14 = (ibperij%base_addr)(iloc(1 + $I_L1038_80, 2), -1 + $jp_S9, 0)
 1038.                   $i3_S12 = (ibperij%base_addr)(1 + iloc(1 + $I_L1038_80, 1), $jp_S9, 0)
 1038.                   $i4_S16 = (ibperij%base_addr)(1 + iloc(1 + $I_L1038_80, 2), -1 + $jp_S9, 0)
 1038.                   $j1_S11 = (jbperij%base_addr)(iloc(1 + $I_L1038_80, 1), $jp_S9, 0)
 1038.                   $j2_S15 = (jbperij%base_addr)(iloc(1 + $I_L1038_80, 2), -1 + $jp_S9, 0)
 1038.                   $j3_S13 = (jbperij%base_addr)(1 + iloc(1 + $I_L1038_80, 1), $jp_S9, 0)
 1038.                   $j4_S17 = (jbperij%base_addr)(1 + iloc(1 + $I_L1038_80, 2), -1 + $jp_S9, 0)
 1038.                   $f1_S18 = s1(1 + $I_L1038_80) * ( u($i1_S10, $j1_S11) + ulondp(1 + $I_L1038_80, 1) * ( u($i3_S12, $j3_S13) + -u($i1_S10, $j1_S11) ) )
 1038.                   $g1_S20 = s1(1 + $I_L1038_80) * ( v($i1_S10, $j1_S11) + ulondp(1 + $I_L1038_80, 1) * ( v($i3_S12, $j3_S13) + -v($i1_S10, $j1_S11) ) )
 1038.                   $f2_S19 = s2(1 + $I_L1038_80) * ( u($i2_S14, $j2_S15) + ulondp(1 + $I_L1038_80, 2) * ( u($i4_S16, $j4_S17) + -u($i2_S14, $j2_S15) ) )
 1038.                   $g2_S21 = s2(1 + $I_L1038_80) * ( v($i2_S14, $j2_S15) + ulondp(1 + $I_L1038_80, 2) * ( v($i4_S16, $j4_S17) + -v($i2_S14, $j2_S15) ) )
 1038.                   uint(1 + $I_L1038_80) = $f1_S18 + ulatdp(1 + $I_L1038_80) * ( $f2_S19 + -$f1_S18 )
 1038.                   vint(1 + $I_L1038_80) = $g1_S20 + ulatdp(1 + $I_L1038_80) * ( $g2_S21 + -$g1_S20 )
 1038.                   $I_L1038_80 = 1 + $I_L1038_80
 1038.                   if ( $I_L1038_80 >= ibdim ) exit
 1038.                enddo
 1038.             endif
 1038.             _free( t$283 )
 1038.             (fgvmean%base_addr)(fgvmean%dim_1%LB, fgvmean%dim_2%LB, 0) = _copyout( v )
 1038.             (fgumean%base_addr)(fgumean%dim_1%LB, fgumean%dim_2%LB, 0) = _copyout( u )
 1048.             ipa$2338 = loc( (coslon%base_addr)(1, jb, 0) )
 1048.             coslon = _copyin( (coslon%base_addr)(1, jb, 0) )
 1048.             ipa$2340 = loc( (sinlon%base_addr)(1, jb, 0) )
 1048.             sinlon = _copyin( (sinlon%base_addr)(1, jb, 0) )
 1048.             ipa$2342 = loc( (coslat%base_addr)(1, jb, 0) )
 1048.             coslat = _copyin( (coslat%base_addr)(1, jb, 0) )
 1048.             ipa$2344 = loc( (sinlat%base_addr)(1, jb, 0) )
 1048.             sinlat = _copyin( (sinlat%base_addr)(1, jb, 0) )
 1048.             t$37 = ibdim
 1048.             t$254 = max( 0, ibdim )
 1048.             $dt2_S31 = delt * delt
 1048.             $twodt_S34 = 2.0 * delt
 1048.             if ( ibdim > 0 ) then
 1048.                if ( $I_L1023_100 + -nit + 1 == 0 ) then
 1048.                   $I_L1048_82 = 0
 1048. !dir$ ivdep
 1048.                   do
 1048.                      $Coss_P0 = coss( ulonm(1 + $I_L1048_82) )
 1048.                      $Coss_P1 = coss( ulatm(1 + $I_L1048_82) )
 1048.                      $x_S28 = coslon(1 + $I_L1048_82) * coslat(1 + $I_L1048_82)
 1048.                      $y_S32 = sinlon(1 + $I_L1048_82) * coslat(1 + $I_L1048_82)
 1048.                      $z_S33 = sinlat(1 + $I_L1048_82)
 1048.                      $xdot_S27 = -( uint(1 + $I_L1048_82) * cimag( $Coss_P0 ) + vint(1 + $I_L1048_82) * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) )
 1048.                      $ydot_S29 = uint(1 + $I_L1048_82) * real( $Coss_P0, 8 ) + -( vint(1 + $I_L1048_82) * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) )
 1048.                      $zdot_S30 = real( $Coss_P1, 8 ) * vint(1 + $I_L1048_82)
 1048.                      $xb_S38 = _recip_sqrt( ( -( $twodt_S34 * ( $xdot_S27 * $x_S28 + $ydot_S29 * $y_S32 + $zdot_S30 * $z_S33 ) ) + $dt2_S31 * ( $xdot_S27 * $xdot_S27 + $ydot_S29 * $ydot_S29 + $zdot_S30 * $zdot_S30 ) + 1.0 ) ) * ( $x_S28 + -( delt * $xdot_S27 ) )
 1048.                      $yb_S37 = _recip_sqrt( ( -( $twodt_S34 * ( $xdot_S27 * $x_S28 + $ydot_S29 * $y_S32 + $zdot_S30 * $z_S33 ) ) + $dt2_S31 * ( $xdot_S27 * $xdot_S27 + $ydot_S29 * $ydot_S29 + $zdot_S30 * $zdot_S30 ) + 1.0 ) ) * ( $y_S32 + -( delt * $ydot_S29 ) )
 1048.                      $zb_S35 = _recip_sqrt( ( -( $twodt_S34 * ( $xdot_S27 * $x_S28 + $ydot_S29 * $y_S32 + $zdot_S30 * $z_S33 ) ) + $dt2_S31 * ( $xdot_S27 * $xdot_S27 + $ydot_S29 * $ydot_S29 + $zdot_S30 * $zdot_S30 ) + 1.0 ) ) * ( $z_S33 + -( delt * $zdot_S30 ) )
 1048.                      $ulonm_WR0_R3 = atan2( ( _recip_sqrt( ( -( $twodt_S34 * ( $xdot_S27 * $x_S28 + $ydot_S29 * $y_S32 + $zdot_S30 * $z_S33 ) ) + $dt2_S31 * ( $xdot_S27 * $xdot_S27 + $ydot_S29 * $ydot_S29 + $zdot_S30 * $zdot_S30 ) + 1.0 ) ) * ( $y_S32 + -( delt * $ydot_S29 ) ) ), ( _recip_sqrt( ( -( $twodt_S34 * ( $xdot_S27 * $x_S28 + $ydot_S29 * $y_S32 + $zdot_S30 * $z_S33 ) ) + $dt2_S31 * ( $xdot_S27 * $xdot_S27 + $ydot_S29 * $ydot_S29 + $zdot_S30 * $zdot_S30 ) + 1.0 ) ) * ( $x_S28 + -( delt * $xdot_S27 ) ) ) )
 1048.                      ulonm(1 + $I_L1048_82) = atan2( ( _recip_sqrt( ( -( $twodt_S34 * ( $xdot_S27 * $x_S28 + $ydot_S29 * $y_S32 + $zdot_S30 * $z_S33 ) ) + $dt2_S31 * ( $xdot_S27 * $xdot_S27 + $ydot_S29 * $ydot_S29 + $zdot_S30 * $zdot_S30 ) + 1.0 ) ) * ( $y_S32 + -( delt * $ydot_S29 ) ) ), ( _recip_sqrt( ( -( $twodt_S34 * ( $xdot_S27 * $x_S28 + $ydot_S29 * $y_S32 + $zdot_S30 * $z_S33 ) ) + $dt2_S31 * ( $xdot_S27 * $xdot_S27 + $ydot_S29 * $ydot_S29 + $zdot_S30 * $zdot_S30 ) + 1.0 ) ) * ( $x_S28 + -( delt * $xdot_S27 ) ) ) )
 1048.                      if ( atan2( ( _recip_sqrt( ( -( $twodt_S34 * ( $xdot_S27 * $x_S28 + $ydot_S29 * $y_S32 + $zdot_S30 * $z_S33 ) ) + $dt2_S31 * ( $xdot_S27 * $xdot_S27 + $ydot_S29 * $ydot_S29 + $zdot_S30 * $zdot_S30 ) + 1.0 ) ) * ( $y_S32 + -( delt * $ydot_S29 ) ) ), ( _recip_sqrt( ( -( $twodt_S34 * ( $xdot_S27 * $x_S28 + $ydot_S29 * $y_S32 + $zdot_S30 * $z_S33 ) ) + $dt2_S31 * ( $xdot_S27 * $xdot_S27 + $ydot_S29 * $ydot_S29 + $zdot_S30 * $zdot_S30 ) + 1.0 ) ) * ( $x_S28 + -( delt * $xdot_S27 ) ) ) ) < 0.0 ) then
 1048.                         $ulonm_WR0_R3 = 6.28318530717958 + $ulonm_WR0_R3
 1048.                         ulonm(1 + $I_L1048_82) = $ulonm_WR0_R3
 1048.                      endif
 1048.                      ulatm(1 + $I_L1048_82) = asin( $zb_S35 )
 1048.                      $zm_S39 = ( 2.0 * ( $x_S28 * $xb_S38 + $y_S32 * $yb_S37 + $z_S33 * $zb_S35 ) ) * $zb_S35 + -$z_S33
 1048.                      $ulon_WR0_R4 = atan2( ( ( 2.0 * ( $x_S28 * $xb_S38 + $y_S32 * $yb_S37 + $z_S33 * $zb_S35 ) ) * $yb_S37 + -$y_S32 ), ( ( 2.0 * ( $x_S28 * $xb_S38 + $y_S32 * $yb_S37 + $z_S33 * $zb_S35 ) ) * $xb_S38 + -$x_S28 ) )
 1048.                      ulon(1 + $I_L1048_82) = atan2( ( ( 2.0 * ( $x_S28 * $xb_S38 + $y_S32 * $yb_S37 + $z_S33 * $zb_S35 ) ) * $yb_S37 + -$y_S32 ), ( ( 2.0 * ( $x_S28 * $xb_S38 + $y_S32 * $yb_S37 + $z_S33 * $zb_S35 ) ) * $xb_S38 + -$x_S28 ) )
 1048.                      if ( atan2( ( ( 2.0 * ( $x_S28 * $xb_S38 + $y_S32 * $yb_S37 + $z_S33 * $zb_S35 ) ) * $yb_S37 + -$y_S32 ), ( ( 2.0 * ( $x_S28 * $xb_S38 + $y_S32 * $yb_S37 + $z_S33 * $zb_S35 ) ) * $xb_S38 + -$x_S28 ) ) < 0.0 ) then
 1048.                         $ulon_WR0_R4 = 6.28318530717958 + $ulon_WR0_R4
 1048.                         ulon(1 + $I_L1048_82) = $ulon_WR0_R4
 1048.                      endif
 1048.                      ulat(1 + $I_L1048_82) = asin( $zm_S39 )
 1048.                      $I_L1048_82 = 1 + $I_L1048_82
 1048.                      if ( $I_L1048_82 >= ibdim ) exit
 1048.                   enddo
 1048.                else
 1048.                   $I_L1048_84 = 0
 1048. !dir$ ivdep
 1048.                   do
 1048.                      $Coss_P2 = coss( ulonm(1 + $I_L1048_84) )
 1048.                      $Coss_P3 = coss( ulatm(1 + $I_L1048_84) )
 1048.                      $x_S28 = coslon(1 + $I_L1048_84) * coslat(1 + $I_L1048_84)
 1048.                      $y_S32 = sinlon(1 + $I_L1048_84) * coslat(1 + $I_L1048_84)
 1048.                      $z_S33 = sinlat(1 + $I_L1048_84)
 1048.                      $xdot_S27 = -( uint(1 + $I_L1048_84) * cimag( $Coss_P2 ) + vint(1 + $I_L1048_84) * real( $Coss_P2, 8 ) * cimag( $Coss_P3 ) )
 1048.                      $ydot_S29 = uint(1 + $I_L1048_84) * real( $Coss_P2, 8 ) + -( vint(1 + $I_L1048_84) * cimag( $Coss_P2 ) * cimag( $Coss_P3 ) )
 1048.                      $zdot_S30 = real( $Coss_P3, 8 ) * vint(1 + $I_L1048_84)
 1048.                      $zb_S35 = _recip_sqrt( ( -( $twodt_S34 * ( $xdot_S27 * $x_S28 + $ydot_S29 * $y_S32 + $zdot_S30 * $z_S33 ) ) + $dt2_S31 * ( $xdot_S27 * $xdot_S27 + $ydot_S29 * $ydot_S29 + $zdot_S30 * $zdot_S30 ) + 1.0 ) ) * ( $z_S33 + -( delt * $zdot_S30 ) )
 1048.                      $ulonm_WR0_R5 = atan2( ( _recip_sqrt( ( -( $twodt_S34 * ( $xdot_S27 * $x_S28 + $ydot_S29 * $y_S32 + $zdot_S30 * $z_S33 ) ) + $dt2_S31 * ( $xdot_S27 * $xdot_S27 + $ydot_S29 * $ydot_S29 + $zdot_S30 * $zdot_S30 ) + 1.0 ) ) * ( $y_S32 + -( delt * $ydot_S29 ) ) ), ( _recip_sqrt( ( -( $twodt_S34 * ( $xdot_S27 * $x_S28 + $ydot_S29 * $y_S32 + $zdot_S30 * $z_S33 ) ) + $dt2_S31 * ( $xdot_S27 * $xdot_S27 + $ydot_S29 * $ydot_S29 + $zdot_S30 * $zdot_S30 ) + 1.0 ) ) * ( $x_S28 + -( delt * $xdot_S27 ) ) ) )
 1048.                      ulonm(1 + $I_L1048_84) = atan2( ( _recip_sqrt( ( -( $twodt_S34 * ( $xdot_S27 * $x_S28 + $ydot_S29 * $y_S32 + $zdot_S30 * $z_S33 ) ) + $dt2_S31 * ( $xdot_S27 * $xdot_S27 + $ydot_S29 * $ydot_S29 + $zdot_S30 * $zdot_S30 ) + 1.0 ) ) * ( $y_S32 + -( delt * $ydot_S29 ) ) ), ( _recip_sqrt( ( -( $twodt_S34 * ( $xdot_S27 * $x_S28 + $ydot_S29 * $y_S32 + $zdot_S30 * $z_S33 ) ) + $dt2_S31 * ( $xdot_S27 * $xdot_S27 + $ydot_S29 * $ydot_S29 + $zdot_S30 * $zdot_S30 ) + 1.0 ) ) * ( $x_S28 + -( delt * $xdot_S27 ) ) ) )
 1048.                      if ( atan2( ( _recip_sqrt( ( -( $twodt_S34 * ( $xdot_S27 * $x_S28 + $ydot_S29 * $y_S32 + $zdot_S30 * $z_S33 ) ) + $dt2_S31 * ( $xdot_S27 * $xdot_S27 + $ydot_S29 * $ydot_S29 + $zdot_S30 * $zdot_S30 ) + 1.0 ) ) * ( $y_S32 + -( delt * $ydot_S29 ) ) ), ( _recip_sqrt( ( -( $twodt_S34 * ( $xdot_S27 * $x_S28 + $ydot_S29 * $y_S32 + $zdot_S30 * $z_S33 ) ) + $dt2_S31 * ( $xdot_S27 * $xdot_S27 + $ydot_S29 * $ydot_S29 + $zdot_S30 * $zdot_S30 ) + 1.0 ) ) * ( $x_S28 + -( delt * $xdot_S27 ) ) ) ) < 0.0 ) then
 1048.                         $ulonm_WR0_R5 = 6.28318530717958 + $ulonm_WR0_R5
 1048.                         ulonm(1 + $I_L1048_84) = $ulonm_WR0_R5
 1048.                      endif
 1048.                      ulatm(1 + $I_L1048_84) = asin( $zb_S35 )
 1048.                      $I_L1048_84 = 1 + $I_L1048_84
 1048.                      if ( $I_L1048_84 >= ibdim ) exit
 1048.                   enddo
 1048.                endif
 1048.             endif
 1048.             (sinlat%base_addr)(1, jb, 0) = _copyout( sinlat )
 1048.             (coslat%base_addr)(1, jb, 0) = _copyout( coslat )
 1048.             (sinlon%base_addr)(1, jb, 0) = _copyout( sinlon )
 1048.             (coslon%base_addr)(1, jb, 0) = _copyout( coslon )
 1052.             $I_L1023_100 = 1 + $I_L1023_100
 1048.             if ( $I_L1023_100 >= nit ) exit
 1048.          enddo
 1048.       endif
  986.       _free( t$206 )
 1054.       return
 1054.       end
 1054.       
 1055.       
 1055.       subroutine upsig_2l( usig, w, wm, delt, ibdim )
 1055.       t$27 = ibdim
 1055.       t$26 = kmax
 1063.       t$212 = _zla( 0, ibdim )
 1055.       t$213 = _zla( 0, ibdim )
 1063.       t$214 = _zla( 0, kmax )
 1055.       t$215 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1055.       t$25 = ibmax
 1061.       t$216 = _zla( 0, ibmax )
 1055.       t$217 = _zla( 0, ibmax )
 1055.       t$218 = _zla( 0, kmax ) * _zla( 0, ibmax )
 1072.       $dth_S2 = 5.0e-1 * delt
 1073.       if ( kmax > 0 ) then
 1074.          if ( ibdim > 0 ) then
 1075.             $SC_cl_I3 = (cl%base_addr)(kmax, 0)
 1075.             $SC_cl_I2 = (cl%base_addr)(1, 0)
 1073.             $I_L1073_18 = 0
 1073.             do
 1074.                $SCA_cl_I4 = (cl%base_addr)(1 + $I_L1073_18, 0)
 1074.                $I_L1074_16 = 0
 1074. !dir$ ivdep
 1074.                do
 1075.                   usig(1 + $I_L1074_16, 1 + $I_L1073_18) = min( $SC_cl_I3, max( $SC_cl_I2, $SCA_cl_I4 + -( $dth_S2 * ( w(1 + $I_L1074_16, 1 + $I_L1073_18) + wm(1 + $I_L1074_16, 1 + $I_L1073_18) ) ) ) )
 1076.                   $I_L1074_16 = 1 + $I_L1074_16
 1074.                   if ( $I_L1074_16 >= ibdim ) exit
 1074.                enddo
 1077.                $I_L1073_18 = 1 + $I_L1073_18
 1076.                if ( $I_L1073_18 >= kmax ) exit
 1076.             enddo
 1076.          endif
 1076.       endif
 1079.       return
 1079.       end
 1079.       
 1080.       
 1080.       subroutine uplatlon_2l( ulon, ulat, ulonm, ulatm, coslon, sinlon, coslat, sinlat, u, v, um, vm, delt, ibdim )
 1080.       t$28 = ibdim
 1080.       t$29 = kmax
 1092.       t$219 = _zla( 0, ibdim )
 1080.       t$220 = _zla( 0, ibdim )
 1092.       t$221 = _zla( 0, kmax )
 1080.       t$222 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1080.       t$30 = ibmax
 1095.       t$223 = _zla( 0, ibmax )
 1080.       t$224 = _zla( 0, ibmax )
 1080.       t$225 = _zla( 0, kmax ) * _zla( 0, ibmax )
 1116.       t$228 = 8 * _zla( 0, ibmax )
 1117.       t$229 = 8 * _zla( 0, ibmax )
 1117.       t$231 = 16 * _zla( 0, ibmax )
 1118.       t$232 = 16 * _zla( 0, ibmax )
 1118.       t$234 = 24 * _zla( 0, ibmax )
 1080.       t$226 = int( _alloc( 24 * _zla( 0, ibmax ) ), 8 )
 1116.       t$227 = t$226
 1117.       t$230 = t$226 + 8 * _zla( 0, ibmax )
 1118.       t$233 = t$226 + 16 * _zla( 0, ibmax )
 1130.       $dt2_S8 = 5.0e-1 * delt
 1133.       if ( ibdim > 0 ) then
 1133.          $I_L1133_18 = 0
 1133. !dir$ ivdep
 1133.          do
 1134.             x(1 + $I_L1133_18) = coslon(1 + $I_L1133_18) * coslat(1 + $I_L1133_18)
 1135.             y(1 + $I_L1133_18) = sinlon(1 + $I_L1133_18) * coslat(1 + $I_L1133_18)
 1136.             z(1 + $I_L1133_18) = sinlat(1 + $I_L1133_18)
 1137.             $I_L1133_18 = 1 + $I_L1133_18
 1133.             if ( $I_L1133_18 >= ibdim ) exit
 1133.          enddo
 1133.       endif
 1138.       if ( kmax > 0 ) then
 1139.          if ( ibdim > 0 ) then
 1138.             $I_L1138_22 = 0
 1138. !dir$ blocking_size( 0, 0 )
 1138.             do
 1139.                $I_L1139_20 = 0
 1139. !dir$ ivdep
 1139. !dir$ blocking_size( 0, 0 )
 1139.                do
 1140.                   $Coss_P0 = coss( ulonm(1 + $I_L1139_20, 1 + $I_L1138_22) )
 1142.                   $Coss_P1 = coss( ulatm(1 + $I_L1139_20, 1 + $I_L1138_22) )
 1144.                   $uh_S7 = 5.0e-1 * ( u(1 + $I_L1139_20, 1 + $I_L1138_22) + um(1 + $I_L1139_20, 1 + $I_L1138_22) )
 1145.                   $vh_S4 = 5.0e-1 * ( v(1 + $I_L1139_20, 1 + $I_L1138_22) + vm(1 + $I_L1139_20, 1 + $I_L1138_22) )
 1149.                   $xb_S11 = x(1 + $I_L1139_20) + -( $dt2_S8 * ( -( $uh_S7 * cimag( $Coss_P0 ) + $vh_S4 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) )
 1150.                   $yb_S10 = y(1 + $I_L1139_20) + -( $dt2_S8 * ( $uh_S7 * real( $Coss_P0, 8 ) + -( $vh_S4 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) )
 1151.                   $zb_S12 = z(1 + $I_L1139_20) + -( $dt2_S8 * ( real( $Coss_P1, 8 ) * $vh_S4 ) )
 1153.                   $xb_S14 = _recip_sqrt( $xb_S11 * $xb_S11 + $yb_S10 * $yb_S10 + $zb_S12 * $zb_S12 ) * $xb_S11
 1154.                   $yb_S15 = _recip_sqrt( $xb_S11 * $xb_S11 + $yb_S10 * $yb_S10 + $zb_S12 * $zb_S12 ) * $yb_S10
 1155.                   $zb_S16 = _recip_sqrt( $xb_S11 * $xb_S11 + $yb_S10 * $yb_S10 + $zb_S12 * $zb_S12 ) * $zb_S12
 1156.                   $ulonm_WR0_R0 = atan2( ( _recip_sqrt( $xb_S11 * $xb_S11 + $yb_S10 * $yb_S10 + $zb_S12 * $zb_S12 ) * $yb_S10 ), ( _recip_sqrt( $xb_S11 * $xb_S11 + $yb_S10 * $yb_S10 + $zb_S12 * $zb_S12 ) * $xb_S11 ) )
 1156.                   ulonm(1 + $I_L1139_20, 1 + $I_L1138_22) = atan2( ( _recip_sqrt( $xb_S11 * $xb_S11 + $yb_S10 * $yb_S10 + $zb_S12 * $zb_S12 ) * $yb_S10 ), ( _recip_sqrt( $xb_S11 * $xb_S11 + $yb_S10 * $yb_S10 + $zb_S12 * $zb_S12 ) * $xb_S11 ) )
 1157.                   if ( atan2( ( _recip_sqrt( $xb_S11 * $xb_S11 + $yb_S10 * $yb_S10 + $zb_S12 * $zb_S12 ) * $yb_S10 ), ( _recip_sqrt( $xb_S11 * $xb_S11 + $yb_S10 * $yb_S10 + $zb_S12 * $zb_S12 ) * $xb_S11 ) ) < 0.0 ) then
 1157.                      $ulonm_WR0_R0 = 6.28318530717958 + $ulonm_WR0_R0
 1157.                      ulonm(1 + $I_L1139_20, 1 + $I_L1138_22) = $ulonm_WR0_R0
 1157.                   endif
 1158.                   ulatm(1 + $I_L1139_20, 1 + $I_L1138_22) = asin( $zb_S16 )
 1159.                   $dot2_S17 = 2.0 * ( x(1 + $I_L1139_20) * $xb_S14 + y(1 + $I_L1139_20) * $yb_S15 + z(1 + $I_L1139_20) * $zb_S16 )
 1160.                   $xm_S18 = $dot2_S17 * $xb_S14 + -x(1 + $I_L1139_20)
 1161.                   $ym_S19 = $dot2_S17 * $yb_S15 + -y(1 + $I_L1139_20)
 1162.                   $zm_S20 = $dot2_S17 * $zb_S16 + -z(1 + $I_L1139_20)
 1163.                   $ulon_WR0_R1 = atan2( $ym_S19, $xm_S18 )
 1163.                   ulon(1 + $I_L1139_20, 1 + $I_L1138_22) = atan2( $ym_S19, $xm_S18 )
 1164.                   if ( atan2( $ym_S19, $xm_S18 ) < 0.0 ) then
 1164.                      $ulon_WR0_R1 = 6.28318530717958 + $ulon_WR0_R1
 1164.                      ulon(1 + $I_L1139_20, 1 + $I_L1138_22) = $ulon_WR0_R1
 1164.                   endif
 1165.                   ulat(1 + $I_L1139_20, 1 + $I_L1138_22) = asin( $zm_S20 )
 1166.                   $I_L1139_20 = 1 + $I_L1139_20
 1164.                   if ( $I_L1139_20 >= ibdim ) exit
 1164.                enddo
 1167.                $I_L1138_22 = 1 + $I_L1138_22
 1166.                if ( $I_L1138_22 >= kmax ) exit
 1166.             enddo
 1166.          endif
 1166.       endif
 1080.       _free( t$226 )
 1169.       return
 1169.       end
 1169.       
 1170.       
 1170.       subroutine uplatlon2d_2l( ulon, ulat, ulonm, ulatm, coslon, sinlon, coslat, sinlat, u, v, um, vm, delt, ibdim )
 1170.       t$31 = ibdim
 1182.       t$235 = _zla( 0, ibdim )
 1219.       $dt2_S6 = 5.0e-1 * delt
 1222.       if ( ibdim > 0 ) then
 1222.          $I_L1222_6 = 0
 1222. !dir$ ivdep
 1222.          do
 1223.             $Coss_P0 = coss( ulonm(1 + $I_L1222_6) )
 1225.             $Coss_P1 = coss( ulatm(1 + $I_L1222_6) )
 1227.             $uh_S5 = 5.0e-1 * ( u(1 + $I_L1222_6) + um(1 + $I_L1222_6) )
 1228.             $vh_S2 = 5.0e-1 * ( v(1 + $I_L1222_6) + vm(1 + $I_L1222_6) )
 1229.             $x_S8 = coslon(1 + $I_L1222_6) * coslat(1 + $I_L1222_6)
 1230.             $y_S7 = sinlon(1 + $I_L1222_6) * coslat(1 + $I_L1222_6)
 1231.             $z_S10 = sinlat(1 + $I_L1222_6)
 1238.             $b_S12 = _recip_sqrt( ( $x_S8 + -( $dt2_S6 * ( -( $uh_S5 * cimag( $Coss_P0 ) + $vh_S2 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) ) ) * ( $x_S8 + -( $dt2_S6 * ( -( $uh_S5 * cimag( $Coss_P0 ) + $vh_S2 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) ) ) + ( $y_S7 + -( $dt2_S6 * ( $uh_S5 * real( $Coss_P0, 8 ) + -( $vh_S2 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) * ( $y_S7 + -( $dt2_S6 * ( $uh_S5 * real( $Coss_P0, 8 ) + -( $vh_S2 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) + ( $z_S10 + -( $dt2_S6 * ( real( $Coss_P1, 8 ) * $vh_S2 ) ) ) * ( $z_S10 + -( $dt2_S6 * ( real( $Coss_P1, 8 ) * $vh_S2 ) ) ) )
 1239.             $xb_S11 = _recip_sqrt( ( $x_S8 + -( $dt2_S6 * ( -( $uh_S5 * cimag( $Coss_P0 ) + $vh_S2 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) ) ) * ( $x_S8 + -( $dt2_S6 * ( -( $uh_S5 * cimag( $Coss_P0 ) + $vh_S2 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) ) ) + ( $y_S7 + -( $dt2_S6 * ( $uh_S5 * real( $Coss_P0, 8 ) + -( $vh_S2 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) * ( $y_S7 + -( $dt2_S6 * ( $uh_S5 * real( $Coss_P0, 8 ) + -( $vh_S2 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) + ( $z_S10 + -( $dt2_S6 * ( real( $Coss_P1, 8 ) * $vh_S2 ) ) ) * ( $z_S10 + -( $dt2_S6 * ( real( $Coss_P1, 8 ) * $vh_S2 ) ) ) ) * ( $x_S8 + -( $dt2_S6 * ( -( $uh_S5 * cimag( $Coss_P0 ) + $vh_S2 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) ) )
 1240.             $yb_S13 = _recip_sqrt( ( $x_S8 + -( $dt2_S6 * ( -( $uh_S5 * cimag( $Coss_P0 ) + $vh_S2 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) ) ) * ( $x_S8 + -( $dt2_S6 * ( -( $uh_S5 * cimag( $Coss_P0 ) + $vh_S2 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) ) ) + ( $y_S7 + -( $dt2_S6 * ( $uh_S5 * real( $Coss_P0, 8 ) + -( $vh_S2 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) * ( $y_S7 + -( $dt2_S6 * ( $uh_S5 * real( $Coss_P0, 8 ) + -( $vh_S2 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) + ( $z_S10 + -( $dt2_S6 * ( real( $Coss_P1, 8 ) * $vh_S2 ) ) ) * ( $z_S10 + -( $dt2_S6 * ( real( $Coss_P1, 8 ) * $vh_S2 ) ) ) ) * ( $y_S7 + -( $dt2_S6 * ( $uh_S5 * real( $Coss_P0, 8 ) + -( $vh_S2 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) )
 1241.             $zb_S14 = _recip_sqrt( ( $x_S8 + -( $dt2_S6 * ( -( $uh_S5 * cimag( $Coss_P0 ) + $vh_S2 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) ) ) * ( $x_S8 + -( $dt2_S6 * ( -( $uh_S5 * cimag( $Coss_P0 ) + $vh_S2 * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) ) ) ) ) + ( $y_S7 + -( $dt2_S6 * ( $uh_S5 * real( $Coss_P0, 8 ) + -( $vh_S2 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) * ( $y_S7 + -( $dt2_S6 * ( $uh_S5 * real( $Coss_P0, 8 ) + -( $vh_S2 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) + ( $z_S10 + -( $dt2_S6 * ( real( $Coss_P1, 8 ) * $vh_S2 ) ) ) * ( $z_S10 + -( $dt2_S6 * ( real( $Coss_P1, 8 ) * $vh_S2 ) ) ) ) * ( $z_S10 + -( $dt2_S6 * ( real( $Coss_P1, 8 ) * $vh_S2 ) ) )
 1242.             $ulonm_WR0_R0 = atan2( ( $b_S12 * ( $y_S7 + -( $dt2_S6 * ( $uh_S5 * real( $Coss_P0, 8 ) + -( $vh_S2 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) ), $xb_S11 )
 1242.             ulonm(1 + $I_L1222_6) = atan2( ( $b_S12 * ( $y_S7 + -( $dt2_S6 * ( $uh_S5 * real( $Coss_P0, 8 ) + -( $vh_S2 * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) ) ) ) ) ), $xb_S11 )
 1243.             if ( atan2( $yb_S13, $xb_S11 ) < 0.0 ) then
 1243.                $ulonm_WR0_R0 = 6.28318530717958 + $ulonm_WR0_R0
 1243.                ulonm(1 + $I_L1222_6) = $ulonm_WR0_R0
 1243.             endif
 1244.             ulatm(1 + $I_L1222_6) = asin( $zb_S14 )
 1248.             $zm_S15 = ( 2.0 * ( $x_S8 * $xb_S11 + $y_S7 * $yb_S13 + $z_S10 * $zb_S14 ) ) * $zb_S14 + -$z_S10
 1249.             $ulon_WR0_R1 = atan2( ( ( 2.0 * ( $x_S8 * $xb_S11 + $y_S7 * $yb_S13 + $z_S10 * $zb_S14 ) ) * $yb_S13 + -$y_S7 ), ( ( 2.0 * ( $x_S8 * $xb_S11 + $y_S7 * $yb_S13 + $z_S10 * $zb_S14 ) ) * $xb_S11 + -$x_S8 ) )
 1249.             ulon(1 + $I_L1222_6) = atan2( ( ( 2.0 * ( $x_S8 * $xb_S11 + $y_S7 * $yb_S13 + $z_S10 * $zb_S14 ) ) * $yb_S13 + -$y_S7 ), ( ( 2.0 * ( $x_S8 * $xb_S11 + $y_S7 * $yb_S13 + $z_S10 * $zb_S14 ) ) * $xb_S11 + -$x_S8 ) )
 1250.             if ( atan2( ( ( 2.0 * ( $x_S8 * $xb_S11 + $y_S7 * $yb_S13 + $z_S10 * $zb_S14 ) ) * $yb_S13 + -$y_S7 ), ( ( 2.0 * ( $x_S8 * $xb_S11 + $y_S7 * $yb_S13 + $z_S10 * $zb_S14 ) ) * $xb_S11 + -$x_S8 ) ) < 0.0 ) then
 1250.                $ulon_WR0_R1 = 6.28318530717958 + $ulon_WR0_R1
 1250.                ulon(1 + $I_L1222_6) = $ulon_WR0_R1
 1250.             endif
 1251.             ulat(1 + $I_L1222_6) = asin( $zm_S15 )
 1252.             $I_L1222_6 = 1 + $I_L1222_6
 1250.             if ( $I_L1222_6 >= ibdim ) exit
 1250.          enddo
 1250.       endif
 1254.       return
 1254.       end
 1254.       
 1255.       
 1255.       subroutine upsig( usig, usigm, w, delt, ibdim, final )
 1255.       t$32 = ibdim
 1255.       t$33 = kmax
 1263.       t$236 = _zla( 0, ibdim )
 1255.       t$237 = _zla( 0, ibdim )
 1263.       t$238 = _zla( 0, kmax )
 1255.       t$239 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1272.       if ( kmax > 0 ) then
 1273.          if ( ibdim > 0 ) then
 1274.             $SC_cl_I3 = (cl%base_addr)(kmax, 0)
 1274.             $SC_cl_I2 = (cl%base_addr)(1, 0)
 1272.             $I_L1272_36 = 0
 1272.             do
 1273.                $SCA_cl_I5 = (cl%base_addr)(1 + $I_L1272_36, 0)
 1273.                $I_L1273_32 = 0
 1273. !dir$ ivdep
 1273.                do
 1274.                   usigm(1 + $I_L1273_32, 1 + $I_L1272_36) = min( $SC_cl_I3, max( $SC_cl_I2, $SCA_cl_I5 + -( delt * w(1 + $I_L1273_32, 1 + $I_L1272_36) ) ) )
 1275.                   $I_L1273_32 = 1 + $I_L1273_32
 1273.                   if ( $I_L1273_32 >= ibdim ) exit
 1273.                enddo
 1276.                $I_L1272_36 = 1 + $I_L1272_36
 1275.                if ( $I_L1272_36 >= kmax ) exit
 1275.             enddo
 1275.          endif
 1275.       endif
 1277.       if ( final ) then
 1278.          if ( kmax > 0 ) then
 1279.             if ( ibdim > 0 ) then
 1280.                $SC_cl_I3 = (cl%base_addr)(kmax, 0)
 1280.                $SC_cl_I2 = (cl%base_addr)(1, 0)
 1278.                $I_L1278_38 = 0
 1278.                do
 1279.                   $SCA_cl_I4 = (cl%base_addr)(1 + $I_L1278_38, 0)
 1279.                   $I_L1279_34 = 0
 1279. !dir$ ivdep
 1279.                   do
 1280.                      usig(1 + $I_L1279_34, 1 + $I_L1278_38) = min( $SC_cl_I3, max( $SC_cl_I2, 2.0 * usigm(1 + $I_L1279_34, 1 + $I_L1278_38) + -$SCA_cl_I4 ) )
 1281.                      $I_L1279_34 = 1 + $I_L1279_34
 1279.                      if ( $I_L1279_34 >= ibdim ) exit
 1279.                   enddo
 1282.                   $I_L1278_38 = 1 + $I_L1278_38
 1281.                   if ( $I_L1278_38 >= kmax ) exit
 1281.                enddo
 1281.             endif
 1281.          endif
 1281.       endif
 1285.       return
 1285.       end
 1285.       
 1286.       
 1286.       subroutine uplatlon( ulon, ulat, ulonm, ulatm, coslon, sinlon, coslat, sinlat, u, v, delt, ibdim, final )
 1286.       t$34 = ibdim
 1286.       t$35 = kmax
 1299.       t$240 = _zla( 0, ibdim )
 1286.       t$241 = _zla( 0, ibdim )
 1299.       t$242 = _zla( 0, kmax )
 1286.       t$243 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1286.       t$36 = ibmax
 1321.       t$244 = _zla( 0, ibmax )
 1321.       t$247 = 8 * _zla( 0, ibmax )
 1322.       t$248 = 8 * _zla( 0, ibmax )
 1322.       t$250 = 16 * _zla( 0, ibmax )
 1323.       t$251 = 16 * _zla( 0, ibmax )
 1323.       t$253 = 24 * _zla( 0, ibmax )
 1286.       t$245 = int( _alloc( 24 * _zla( 0, ibmax ) ), 8 )
 1321.       t$246 = t$245
 1322.       t$249 = t$245 + 8 * _zla( 0, ibmax )
 1323.       t$252 = t$245 + 16 * _zla( 0, ibmax )
 1334.       $dt2_S10 = delt * delt
 1335.       $twodt_S11 = 2.0 * delt
 1337.       if ( ibdim > 0 ) then
 1337.          $I_L1337_30 = 0
 1337. !dir$ ivdep
 1337.          do
 1338.             x(1 + $I_L1337_30) = coslon(1 + $I_L1337_30) * coslat(1 + $I_L1337_30)
 1339.             y(1 + $I_L1337_30) = sinlon(1 + $I_L1337_30) * coslat(1 + $I_L1337_30)
 1340.             z(1 + $I_L1337_30) = sinlat(1 + $I_L1337_30)
 1341.             $I_L1337_30 = 1 + $I_L1337_30
 1337.             if ( $I_L1337_30 >= ibdim ) exit
 1337.          enddo
 1337.       endif
 1342.       if ( final ) then
 1343.          if ( kmax > 0 ) then
 1344.             if ( ibdim > 0 ) then
 1343.                $I_L1343_38 = 0
 1343. !dir$ blocking_size( 0, 0 )
 1343.                do
 1344.                   $I_L1344_34 = 0
 1344. !dir$ ivdep
 1344. !dir$ blocking_size( 0, 0 )
 1344.                   do
 1345.                      $Coss_P0 = coss( ulonm(1 + $I_L1344_34, 1 + $I_L1343_38) )
 1347.                      $Coss_P1 = coss( ulatm(1 + $I_L1344_34, 1 + $I_L1343_38) )
 1349.                      $xdot_S8 = -( u(1 + $I_L1344_34, 1 + $I_L1343_38) * cimag( $Coss_P0 ) + v(1 + $I_L1344_34, 1 + $I_L1343_38) * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) )
 1350.                      $ydot_S7 = u(1 + $I_L1344_34, 1 + $I_L1343_38) * real( $Coss_P0, 8 ) + -( v(1 + $I_L1344_34, 1 + $I_L1343_38) * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) )
 1351.                      $zdot_S9 = real( $Coss_P1, 8 ) * v(1 + $I_L1344_34, 1 + $I_L1343_38)
 1352.                      $r_S12 = -( $twodt_S11 * ( $xdot_S8 * x(1 + $I_L1344_34) + $ydot_S7 * y(1 + $I_L1344_34) + $zdot_S9 * z(1 + $I_L1344_34) ) ) + $dt2_S10 * ( $xdot_S8 * $xdot_S8 + $ydot_S7 * $ydot_S7 + $zdot_S9 * $zdot_S9 ) + 1.0
 1355.                      $xb_S13 = _recip_sqrt( $r_S12 ) * ( x(1 + $I_L1344_34) + -( delt * $xdot_S8 ) )
 1356.                      $yb_S14 = _recip_sqrt( $r_S12 ) * ( y(1 + $I_L1344_34) + -( delt * $ydot_S7 ) )
 1357.                      $zb_S15 = _recip_sqrt( $r_S12 ) * ( z(1 + $I_L1344_34) + -( delt * $zdot_S9 ) )
 1358.                      $ulonm_WR0_R0 = atan2( $yb_S14, $xb_S13 )
 1358.                      ulonm(1 + $I_L1344_34, 1 + $I_L1343_38) = atan2( $yb_S14, $xb_S13 )
 1359.                      if ( atan2( $yb_S14, $xb_S13 ) < 0.0 ) then
 1359.                         $ulonm_WR0_R0 = 6.28318530717958 + $ulonm_WR0_R0
 1359.                         ulonm(1 + $I_L1344_34, 1 + $I_L1343_38) = $ulonm_WR0_R0
 1359.                      endif
 1360.                      ulatm(1 + $I_L1344_34, 1 + $I_L1343_38) = asin( $zb_S15 )
 1361.                      $dot2_S16 = 2.0 * ( x(1 + $I_L1344_34) * $xb_S13 + y(1 + $I_L1344_34) * $yb_S14 + z(1 + $I_L1344_34) * $zb_S15 )
 1362.                      $xm_S17 = $dot2_S16 * $xb_S13 + -x(1 + $I_L1344_34)
 1363.                      $ym_S18 = $dot2_S16 * $yb_S14 + -y(1 + $I_L1344_34)
 1364.                      $zm_S19 = $dot2_S16 * $zb_S15 + -z(1 + $I_L1344_34)
 1365.                      $ulon_WR0_R1 = atan2( $ym_S18, $xm_S17 )
 1365.                      ulon(1 + $I_L1344_34, 1 + $I_L1343_38) = atan2( $ym_S18, $xm_S17 )
 1366.                      if ( atan2( $ym_S18, $xm_S17 ) < 0.0 ) then
 1366.                         $ulon_WR0_R1 = 6.28318530717958 + $ulon_WR0_R1
 1366.                         ulon(1 + $I_L1344_34, 1 + $I_L1343_38) = $ulon_WR0_R1
 1366.                      endif
 1367.                      ulat(1 + $I_L1344_34, 1 + $I_L1343_38) = asin( $zm_S19 )
 1368.                      $I_L1344_34 = 1 + $I_L1344_34
 1366.                      if ( $I_L1344_34 >= ibdim ) exit
 1366.                   enddo
 1369.                   $I_L1343_38 = 1 + $I_L1343_38
 1368.                   if ( $I_L1343_38 >= kmax ) exit
 1368.                enddo
 1368.             endif
 1368.          endif
 1368.       else if ( kmax > 0 ) then
 1372.          if ( ibdim > 0 ) then
 1371.             $I_L1371_36 = 0
 1371. !dir$ blocking_size( 0, 0 )
 1371.             do
 1372.                $I_L1372_32 = 0
 1372. !dir$ ivdep
 1372. !dir$ blocking_size( 0, 0 )
 1372.                do
 1373.                   $Coss_P2 = coss( ulonm(1 + $I_L1372_32, 1 + $I_L1371_36) )
 1375.                   $Coss_P3 = coss( ulatm(1 + $I_L1372_32, 1 + $I_L1371_36) )
 1377.                   $xdot_S27 = -( u(1 + $I_L1372_32, 1 + $I_L1371_36) * cimag( $Coss_P2 ) + v(1 + $I_L1372_32, 1 + $I_L1371_36) * real( $Coss_P2, 8 ) * cimag( $Coss_P3 ) )
 1378.                   $ydot_S26 = u(1 + $I_L1372_32, 1 + $I_L1371_36) * real( $Coss_P2, 8 ) + -( v(1 + $I_L1372_32, 1 + $I_L1371_36) * cimag( $Coss_P2 ) * cimag( $Coss_P3 ) )
 1379.                   $zdot_S28 = real( $Coss_P3, 8 ) * v(1 + $I_L1372_32, 1 + $I_L1371_36)
 1380.                   $r_S29 = -( $twodt_S11 * ( $xdot_S27 * x(1 + $I_L1372_32) + $ydot_S26 * y(1 + $I_L1372_32) + $zdot_S28 * z(1 + $I_L1372_32) ) ) + $dt2_S10 * ( $xdot_S27 * $xdot_S27 + $ydot_S26 * $ydot_S26 + $zdot_S28 * $zdot_S28 ) + 1.0
 1383.                   $xb_S30 = _recip_sqrt( $r_S29 ) * ( x(1 + $I_L1372_32) + -( delt * $xdot_S27 ) )
 1384.                   $yb_S31 = _recip_sqrt( $r_S29 ) * ( y(1 + $I_L1372_32) + -( delt * $ydot_S26 ) )
 1385.                   $zb_S32 = _recip_sqrt( $r_S29 ) * ( z(1 + $I_L1372_32) + -( delt * $zdot_S28 ) )
 1386.                   $ulonm_WR0_R2 = atan2( $yb_S31, $xb_S30 )
 1386.                   ulonm(1 + $I_L1372_32, 1 + $I_L1371_36) = atan2( $yb_S31, $xb_S30 )
 1387.                   if ( atan2( $yb_S31, $xb_S30 ) < 0.0 ) then
 1387.                      $ulonm_WR0_R2 = 6.28318530717958 + $ulonm_WR0_R2
 1387.                      ulonm(1 + $I_L1372_32, 1 + $I_L1371_36) = $ulonm_WR0_R2
 1387.                   endif
 1388.                   ulatm(1 + $I_L1372_32, 1 + $I_L1371_36) = asin( $zb_S32 )
 1389.                   $I_L1372_32 = 1 + $I_L1372_32
 1387.                   if ( $I_L1372_32 >= ibdim ) exit
 1387.                enddo
 1390.                $I_L1371_36 = 1 + $I_L1371_36
 1389.                if ( $I_L1371_36 >= kmax ) exit
 1389.             enddo
 1389.          endif
 1389.       endif
 1286.       _free( t$245 )
 1393.       return
 1393.       end
 1393.       
 1394.       
 1394.       subroutine uplatlon2d( ulon, ulat, ulonm, ulatm, coslon, sinlon, coslat, sinlat, u, v, delt, ibdim, final )
 1394.       t$37 = ibdim
 1407.       t$254 = _zla( 0, ibdim )
 1441.       $dt2_S9 = delt * delt
 1442.       $twodt_S12 = 2.0 * delt
 1444.       if ( ibdim > 0 ) then
 1464.          if ( final ) then
 1444.             $I_L1444_10 = 0
 1444. !dir$ ivdep
 1444.             do
 1445.                $Coss_P0 = coss( ulonm(1 + $I_L1444_10) )
 1447.                $Coss_P1 = coss( ulatm(1 + $I_L1444_10) )
 1449.                $x_S6 = coslon(1 + $I_L1444_10) * coslat(1 + $I_L1444_10)
 1450.                $y_S10 = sinlon(1 + $I_L1444_10) * coslat(1 + $I_L1444_10)
 1451.                $z_S11 = sinlat(1 + $I_L1444_10)
 1452.                $xdot_S5 = -( u(1 + $I_L1444_10) * cimag( $Coss_P0 ) + v(1 + $I_L1444_10) * real( $Coss_P0, 8 ) * cimag( $Coss_P1 ) )
 1453.                $ydot_S7 = u(1 + $I_L1444_10) * real( $Coss_P0, 8 ) + -( v(1 + $I_L1444_10) * cimag( $Coss_P0 ) * cimag( $Coss_P1 ) )
 1454.                $zdot_S8 = real( $Coss_P1, 8 ) * v(1 + $I_L1444_10)
 1458.                $xb_S15 = _recip_sqrt( ( -( $twodt_S12 * ( $xdot_S5 * $x_S6 + $ydot_S7 * $y_S10 + $zdot_S8 * $z_S11 ) ) + $dt2_S9 * ( $xdot_S5 * $xdot_S5 + $ydot_S7 * $ydot_S7 + $zdot_S8 * $zdot_S8 ) + 1.0 ) ) * ( $x_S6 + -( delt * $xdot_S5 ) )
 1459.                $yb_S14 = _recip_sqrt( ( -( $twodt_S12 * ( $xdot_S5 * $x_S6 + $ydot_S7 * $y_S10 + $zdot_S8 * $z_S11 ) ) + $dt2_S9 * ( $xdot_S5 * $xdot_S5 + $ydot_S7 * $ydot_S7 + $zdot_S8 * $zdot_S8 ) + 1.0 ) ) * ( $y_S10 + -( delt * $ydot_S7 ) )
 1460.                $zb_S13 = _recip_sqrt( ( -( $twodt_S12 * ( $xdot_S5 * $x_S6 + $ydot_S7 * $y_S10 + $zdot_S8 * $z_S11 ) ) + $dt2_S9 * ( $xdot_S5 * $xdot_S5 + $ydot_S7 * $ydot_S7 + $zdot_S8 * $zdot_S8 ) + 1.0 ) ) * ( $z_S11 + -( delt * $zdot_S8 ) )
 1461.                $ulonm_WR0_R0 = atan2( ( _recip_sqrt( ( -( $twodt_S12 * ( $xdot_S5 * $x_S6 + $ydot_S7 * $y_S10 + $zdot_S8 * $z_S11 ) ) + $dt2_S9 * ( $xdot_S5 * $xdot_S5 + $ydot_S7 * $ydot_S7 + $zdot_S8 * $zdot_S8 ) + 1.0 ) ) * ( $y_S10 + -( delt * $ydot_S7 ) ) ), ( _recip_sqrt( ( -( $twodt_S12 * ( $xdot_S5 * $x_S6 + $ydot_S7 * $y_S10 + $zdot_S8 * $z_S11 ) ) + $dt2_S9 * ( $xdot_S5 * $xdot_S5 + $ydot_S7 * $ydot_S7 + $zdot_S8 * $zdot_S8 ) + 1.0 ) ) * ( $x_S6 + -( delt * $xdot_S5 ) ) ) )
 1461.                ulonm(1 + $I_L1444_10) = atan2( ( _recip_sqrt( ( -( $twodt_S12 * ( $xdot_S5 * $x_S6 + $ydot_S7 * $y_S10 + $zdot_S8 * $z_S11 ) ) + $dt2_S9 * ( $xdot_S5 * $xdot_S5 + $ydot_S7 * $ydot_S7 + $zdot_S8 * $zdot_S8 ) + 1.0 ) ) * ( $y_S10 + -( delt * $ydot_S7 ) ) ), ( _recip_sqrt( ( -( $twodt_S12 * ( $xdot_S5 * $x_S6 + $ydot_S7 * $y_S10 + $zdot_S8 * $z_S11 ) ) + $dt2_S9 * ( $xdot_S5 * $xdot_S5 + $ydot_S7 * $ydot_S7 + $zdot_S8 * $zdot_S8 ) + 1.0 ) ) * ( $x_S6 + -( delt * $xdot_S5 ) ) ) )
 1462.                if ( atan2( ( _recip_sqrt( ( -( $twodt_S12 * ( $xdot_S5 * $x_S6 + $ydot_S7 * $y_S10 + $zdot_S8 * $z_S11 ) ) + $dt2_S9 * ( $xdot_S5 * $xdot_S5 + $ydot_S7 * $ydot_S7 + $zdot_S8 * $zdot_S8 ) + 1.0 ) ) * ( $y_S10 + -( delt * $ydot_S7 ) ) ), ( _recip_sqrt( ( -( $twodt_S12 * ( $xdot_S5 * $x_S6 + $ydot_S7 * $y_S10 + $zdot_S8 * $z_S11 ) ) + $dt2_S9 * ( $xdot_S5 * $xdot_S5 + $ydot_S7 * $ydot_S7 + $zdot_S8 * $zdot_S8 ) + 1.0 ) ) * ( $x_S6 + -( delt * $xdot_S5 ) ) ) ) < 0.0 ) then
 1462.                   $ulonm_WR0_R0 = 6.28318530717958 + $ulonm_WR0_R0
 1462.                   ulonm(1 + $I_L1444_10) = $ulonm_WR0_R0
 1462.                endif
 1463.                ulatm(1 + $I_L1444_10) = asin( $zb_S13 )
 1468.                $zm_S16 = ( 2.0 * ( $x_S6 * $xb_S15 + $y_S10 * $yb_S14 + $z_S11 * $zb_S13 ) ) * $zb_S13 + -$z_S11
 1469.                $ulon_WR0_R1 = atan2( ( ( 2.0 * ( $x_S6 * $xb_S15 + $y_S10 * $yb_S14 + $z_S11 * $zb_S13 ) ) * $yb_S14 + -$y_S10 ), ( ( 2.0 * ( $x_S6 * $xb_S15 + $y_S10 * $yb_S14 + $z_S11 * $zb_S13 ) ) * $xb_S15 + -$x_S6 ) )
 1469.                ulon(1 + $I_L1444_10) = atan2( ( ( 2.0 * ( $x_S6 * $xb_S15 + $y_S10 * $yb_S14 + $z_S11 * $zb_S13 ) ) * $yb_S14 + -$y_S10 ), ( ( 2.0 * ( $x_S6 * $xb_S15 + $y_S10 * $yb_S14 + $z_S11 * $zb_S13 ) ) * $xb_S15 + -$x_S6 ) )
 1470.                if ( atan2( ( ( 2.0 * ( $x_S6 * $xb_S15 + $y_S10 * $yb_S14 + $z_S11 * $zb_S13 ) ) * $yb_S14 + -$y_S10 ), ( ( 2.0 * ( $x_S6 * $xb_S15 + $y_S10 * $yb_S14 + $z_S11 * $zb_S13 ) ) * $xb_S15 + -$x_S6 ) ) < 0.0 ) then
 1470.                   $ulon_WR0_R1 = 6.28318530717958 + $ulon_WR0_R1
 1470.                   ulon(1 + $I_L1444_10) = $ulon_WR0_R1
 1470.                endif
 1471.                ulat(1 + $I_L1444_10) = asin( $zm_S16 )
 1473.                $I_L1444_10 = 1 + $I_L1444_10
 1472.                if ( $I_L1444_10 >= ibdim ) exit
 1472.             enddo
 1472.          else
 1444.             $I_L1444_12 = 0
 1444. !dir$ ivdep
 1444.             do
 1445.                $Coss_P2 = coss( ulonm(1 + $I_L1444_12) )
 1447.                $Coss_P3 = coss( ulatm(1 + $I_L1444_12) )
 1449.                $x_S6 = coslon(1 + $I_L1444_12) * coslat(1 + $I_L1444_12)
 1450.                $y_S10 = sinlon(1 + $I_L1444_12) * coslat(1 + $I_L1444_12)
 1451.                $z_S11 = sinlat(1 + $I_L1444_12)
 1452.                $xdot_S5 = -( u(1 + $I_L1444_12) * cimag( $Coss_P2 ) + v(1 + $I_L1444_12) * real( $Coss_P2, 8 ) * cimag( $Coss_P3 ) )
 1453.                $ydot_S7 = u(1 + $I_L1444_12) * real( $Coss_P2, 8 ) + -( v(1 + $I_L1444_12) * cimag( $Coss_P2 ) * cimag( $Coss_P3 ) )
 1454.                $zdot_S8 = real( $Coss_P3, 8 ) * v(1 + $I_L1444_12)
 1460.                $zb_S13 = _recip_sqrt( ( -( $twodt_S12 * ( $xdot_S5 * $x_S6 + $ydot_S7 * $y_S10 + $zdot_S8 * $z_S11 ) ) + $dt2_S9 * ( $xdot_S5 * $xdot_S5 + $ydot_S7 * $ydot_S7 + $zdot_S8 * $zdot_S8 ) + 1.0 ) ) * ( $z_S11 + -( delt * $zdot_S8 ) )
 1461.                $ulonm_WR0_R2 = atan2( ( _recip_sqrt( ( -( $twodt_S12 * ( $xdot_S5 * $x_S6 + $ydot_S7 * $y_S10 + $zdot_S8 * $z_S11 ) ) + $dt2_S9 * ( $xdot_S5 * $xdot_S5 + $ydot_S7 * $ydot_S7 + $zdot_S8 * $zdot_S8 ) + 1.0 ) ) * ( $y_S10 + -( delt * $ydot_S7 ) ) ), ( _recip_sqrt( ( -( $twodt_S12 * ( $xdot_S5 * $x_S6 + $ydot_S7 * $y_S10 + $zdot_S8 * $z_S11 ) ) + $dt2_S9 * ( $xdot_S5 * $xdot_S5 + $ydot_S7 * $ydot_S7 + $zdot_S8 * $zdot_S8 ) + 1.0 ) ) * ( $x_S6 + -( delt * $xdot_S5 ) ) ) )
 1461.                ulonm(1 + $I_L1444_12) = atan2( ( _recip_sqrt( ( -( $twodt_S12 * ( $xdot_S5 * $x_S6 + $ydot_S7 * $y_S10 + $zdot_S8 * $z_S11 ) ) + $dt2_S9 * ( $xdot_S5 * $xdot_S5 + $ydot_S7 * $ydot_S7 + $zdot_S8 * $zdot_S8 ) + 1.0 ) ) * ( $y_S10 + -( delt * $ydot_S7 ) ) ), ( _recip_sqrt( ( -( $twodt_S12 * ( $xdot_S5 * $x_S6 + $ydot_S7 * $y_S10 + $zdot_S8 * $z_S11 ) ) + $dt2_S9 * ( $xdot_S5 * $xdot_S5 + $ydot_S7 * $ydot_S7 + $zdot_S8 * $zdot_S8 ) + 1.0 ) ) * ( $x_S6 + -( delt * $xdot_S5 ) ) ) )
 1462.                if ( atan2( ( _recip_sqrt( ( -( $twodt_S12 * ( $xdot_S5 * $x_S6 + $ydot_S7 * $y_S10 + $zdot_S8 * $z_S11 ) ) + $dt2_S9 * ( $xdot_S5 * $xdot_S5 + $ydot_S7 * $ydot_S7 + $zdot_S8 * $zdot_S8 ) + 1.0 ) ) * ( $y_S10 + -( delt * $ydot_S7 ) ) ), ( _recip_sqrt( ( -( $twodt_S12 * ( $xdot_S5 * $x_S6 + $ydot_S7 * $y_S10 + $zdot_S8 * $z_S11 ) ) + $dt2_S9 * ( $xdot_S5 * $xdot_S5 + $ydot_S7 * $ydot_S7 + $zdot_S8 * $zdot_S8 ) + 1.0 ) ) * ( $x_S6 + -( delt * $xdot_S5 ) ) ) ) < 0.0 ) then
 1462.                   $ulonm_WR0_R2 = 6.28318530717958 + $ulonm_WR0_R2
 1462.                   ulonm(1 + $I_L1444_12) = $ulonm_WR0_R2
 1462.                endif
 1463.                ulatm(1 + $I_L1444_12) = asin( $zb_S13 )
 1473.                $I_L1444_12 = 1 + $I_L1444_12
 1472.                if ( $I_L1444_12 >= ibdim ) exit
 1472.             enddo
 1472.          endif
 1472.       endif
 1475.       return
 1475.       end
 1475.       
 1476.       
 1476.       subroutine locate( lsig, llatlon, ulon, ulat, usig, ulondp, ulatdp, usigdp, iloc, jloc, kloc, ibdim, klats )
 1476.       t$38 = ibdim
 1476.       t$39 = kmax
 1493.       t$255 = _zla( 0, ibdim )
 1476.       t$256 = _zla( 0, ibdim )
 1493.       t$257 = _zla( 0, kmax )
 1476.       t$258 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1476.       t$259 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1476.       t$260 = _zla( 0, ibdim ) * _zla( 0, kmax ) * 4
 1513.       if ( lsig ) then
 1514.          if ( kmax > 0 ) then
 1515.             if ( ibdim > 0 ) then
 1514.                $I_L1514_99 = 0
 1514. !dir$ blocking_size( 0, 0 )
 1514.                do
 1515.                   $I_L1515_80 = 0
 1515. !dir$ ivdep
 1515. !dir$ blocking_size( 0, 0 )
 1515.                   do
 1516.                      $ik_S2 = int( ( ( usig(1 + $I_L1515_80, 1 + $I_L1514_99) + -(sigma%base_addr)(1 + $I_L1515_80, 1, 0) ) * 1.0/delsigref ) )
 1517.                      $kloc_WR0_R0 = (ksigref%base_addr)(1 + $I_L1515_80, $ik_S2, 0)
 1517.                      kloc(1 + $I_L1515_80, 1 + $I_L1514_99) = $kloc_WR0_R0
 1518.                      if ( usig(1 + $I_L1515_80, 1 + $I_L1514_99) > (sigma%base_addr)(1 + $I_L1515_80, 1 + $kloc_WR0_R0, 0) ) then
 1518.                         $kloc_WR0_R0 = 1 + $kloc_WR0_R0
 1518.                         kloc(1 + $I_L1515_80, 1 + $I_L1514_99) = $kloc_WR0_R0
 1518.                      endif
 1519.                      usigdp(1 + $I_L1515_80, 1 + $I_L1514_99) = ( ( usig(1 + $I_L1515_80, 1 + $I_L1514_99) + -(sigma%base_addr)(1 + $I_L1515_80, $kloc_WR0_R0, 0) ) * 1.0/(delsigma%base_addr)(1 + $I_L1515_80, $kloc_WR0_R0, 0) )
 1520.                      $I_L1515_80 = 1 + $I_L1515_80
 1518.                      if ( $I_L1515_80 >= ibdim ) exit
 1518.                   enddo
 1521.                   $I_L1514_99 = 1 + $I_L1514_99
 1520.                   if ( $I_L1514_99 >= kmax ) exit
 1520.                enddo
 1520.             endif
 1520.          endif
 1520.       endif
 1524.       if ( llatlon ) then
 1525.          if ( klats == 4 ) then
 1526.             kp(1) = -1
 1527.             kp(2) = 0
 1528.             kp(3) = 1
 1529.             kp(4) = 2
 1529.          else
 1531.             kp(1) = 0
 1532.             kp(2) = 1
 1532.          endif
 1535.          if ( kmax > 0 ) then
 1536.             if ( ibdim > 0 ) then
 1535.                $I_L1535_101 = 0
 1535.                do
 1536.                   $I_L1536_82 = 0
 1536. !dir$ ivdep
 1536.                   do
 1537.                      $ik_S5 = int( ( ( 1.570796326794895 + ulat(1 + $I_L1536_82, 1 + $I_L1535_101) ) * 1.0/delphiref ) )
 1538.                      $jloc_WR0_R1 = (jphiref%base_addr)(1 + $I_L1536_82, $ik_S5, 0)
 1538.                      jloc(1 + $I_L1536_82, 1 + $I_L1535_101) = $jloc_WR0_R1
 1539.                      if ( ulat(1 + $I_L1536_82, 1 + $I_L1535_101) > (phi%base_addr)(1 + $I_L1536_82, 1 + $jloc_WR0_R1, 0) ) then
 1539.                         $jloc_WR0_R1 = 1 + $jloc_WR0_R1
 1539.                         jloc(1 + $I_L1536_82, 1 + $I_L1535_101) = $jloc_WR0_R1
 1539.                      endif
 1540.                      ulatdp(1 + $I_L1536_82, 1 + $I_L1535_101) = ( ( ulat(1 + $I_L1536_82, 1 + $I_L1535_101) + -(phi%base_addr)(1 + $I_L1536_82, $jloc_WR0_R1, 0) ) * 1.0/(delphi%base_addr)(1 + $I_L1536_82, $jloc_WR0_R1, 0) )
 1541.                      $I_L1536_82 = 1 + $I_L1536_82
 1539.                      if ( $I_L1536_82 >= ibdim ) exit
 1539.                   enddo
 1542.                   $I_L1535_101 = 1 + $I_L1535_101
 1541.                   if ( $I_L1535_101 >= kmax ) exit
 1541.                enddo
 1541.             endif
 1541.          endif
 1544.          if ( klats > 0 ) then
 1546.             if ( kmax > 0 ) then
 1547.                if ( ibdim > 0 ) then
 1546.                   $I_L1546_122 = 0
 1546.                   do
 1547.                      $I_L1547_120 = 0
 1547.                      do
 1544.                         $I_L1544_118 = 0
 1544.                         if ( klats >= 4 ) then
 1544.                            $I_L1544_127 = 0
 1544. !dir$ blocking_size( 4, 4 )
 1544.                            do
 1545.                               $ks#1_U0 = kp(1 + 4 * $I_L1544_127)
 1545.                               $ks#2_U1 = kp(2 + 4 * $I_L1544_127)
 1545.                               $ks#3_U2 = kp(3 + 4 * $I_L1544_127)
 1545.                               $ks#4_U3 = kp(4 + 4 * $I_L1544_127)
 1546.                               $I_L1546_115 = 0
 1546. !dir$ shortloop16
 1546. !dir$ blocking_size( 8, 8 )
 1546.                               do
 1547.                                  $I_L1547_84 = 0
 1547. !dir$ ivdep
 1547. !dir$ blocking_size( 256, 256 )
 1547.                                  do
 1548.                                     $j_S10 = jmax + -jloc($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1) + 1
 1549.                                     $ulondp_WR0_R2 = 1.0 + ( ulon($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1) * 1.0/(dellon%base_addr)($I_L1547_84 + 256 * $I_L1547_120 + 1, $j_S10 + -$ks#1_U0, 0) )
 1550.                                     iloc($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1, 1 + 4 * $I_L1544_127) = int( $ulondp_WR0_R2 )
 1551.                                     $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
 1551.                                     ulondp($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1, 1 + 4 * $I_L1544_127) = $ulondp_WR0_R2
 1548.                                     $j_S10 = jmax + -jloc($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1) + 1
 1549.                                     $ulondp_WR0_R2 = 1.0 + ( ulon($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1) * 1.0/(dellon%base_addr)($I_L1547_84 + 256 * $I_L1547_120 + 1, $j_S10 + -$ks#2_U1, 0) )
 1550.                                     iloc($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1, 2 + 4 * $I_L1544_127) = int( $ulondp_WR0_R2 )
 1551.                                     $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
 1551.                                     ulondp($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1, 2 + 4 * $I_L1544_127) = $ulondp_WR0_R2
 1548.                                     $j_S10 = jmax + -jloc($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1) + 1
 1549.                                     $ulondp_WR0_R2 = 1.0 + ( ulon($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1) * 1.0/(dellon%base_addr)($I_L1547_84 + 256 * $I_L1547_120 + 1, $j_S10 + -$ks#3_U2, 0) )
 1550.                                     iloc($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1, 3 + 4 * $I_L1544_127) = int( $ulondp_WR0_R2 )
 1551.                                     $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
 1551.                                     ulondp($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1, 3 + 4 * $I_L1544_127) = $ulondp_WR0_R2
 1548.                                     $j_S10 = jmax + -jloc($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1) + 1
 1549.                                     $ulondp_WR0_R2 = 1.0 + ( ulon($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1) * 1.0/(dellon%base_addr)($I_L1547_84 + 256 * $I_L1547_120 + 1, $j_S10 + -$ks#4_U3, 0) )
 1550.                                     iloc($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1, 4 + 4 * $I_L1544_127) = int( $ulondp_WR0_R2 )
 1551.                                     $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
 1551.                                     ulondp($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1, 4 + 4 * $I_L1544_127) = $ulondp_WR0_R2
 1547.                                     $I_L1547_84 = 1 + $I_L1547_84
 1547.                                     if ( $I_L1547_84 >= min( ibdim, 256 + 256 * $I_L1547_120 ) + -256 * $I_L1547_120 ) exit
 1547.                                  enddo
 1546.                                  $I_L1546_115 = 1 + $I_L1546_115
 1546.                                  if ( $I_L1546_115 >= min( kmax, 8 + 8 * $I_L1546_122 ) + -8 * $I_L1546_122 ) exit
 1546.                               enddo
 1554.                               $I_L1544_127 = 1 + $I_L1544_127
 1552.                               if ( $I_L1544_127 >= _rsh( klats, 2 ) ) exit
 1552.                            enddo
 1554.                            $I_L1544_118 = and( 0xfffffffffffffffcUL, klats )
 1554.                         endif
 1544.                         if ( $I_L1544_118 < klats ) then
 1544.                            $I_L1544_124 = 0
 1544. !dir$ blocking_size( 4, 4 )
 1544.                            do
 1545.                               $ks_S9 = kp($I_L1544_118 + $I_L1544_124 + 1)
 1546.                               $I_L1546_115 = 0
 1546. !dir$ shortloop16
 1546. !dir$ blocking_size( 8, 8 )
 1546.                               do
 1547.                                  $I_L1547_84 = 0
 1547. !dir$ ivdep
 1547. !dir$ blocking_size( 256, 256 )
 1547.                                  do
 1548.                                     $j_S10 = jmax + -jloc($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1) + 1
 1549.                                     $ulondp_WR0_R2 = 1.0 + ( ulon($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1) * 1.0/(dellon%base_addr)($I_L1547_84 + 256 * $I_L1547_120 + 1, $j_S10 + -$ks_S9, 0) )
 1550.                                     iloc($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1, $I_L1544_118 + $I_L1544_124 + 1) = int( $ulondp_WR0_R2 )
 1551.                                     $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
 1551.                                     ulondp($I_L1547_84 + 256 * $I_L1547_120 + 1, $I_L1546_115 + 8 * $I_L1546_122 + 1, $I_L1544_118 + $I_L1544_124 + 1) = $ulondp_WR0_R2
 1547.                                     $I_L1547_84 = 1 + $I_L1547_84
 1547.                                     if ( $I_L1547_84 >= min( ibdim, 256 + 256 * $I_L1547_120 ) + -256 * $I_L1547_120 ) exit
 1547.                                  enddo
 1546.                                  $I_L1546_115 = 1 + $I_L1546_115
 1546.                                  if ( $I_L1546_115 >= min( kmax, 8 + 8 * $I_L1546_122 ) + -8 * $I_L1546_122 ) exit
 1546.                               enddo
 1554.                               $I_L1544_124 = 1 + $I_L1544_124
 1552.                               if ( $I_L1544_124 >= klats + -$I_L1544_118 ) exit
 1552.                            enddo
 1552.                         endif
 1547.                         $I_L1547_120 = 1 + $I_L1547_120
 1547.                         if ( $I_L1547_120 >= 1 + max( 0, -1 + _rsh( 255 + ibdim, 8 ) ) ) exit
 1547.                      enddo
 1546.                      $I_L1546_122 = 1 + $I_L1546_122
 1553.                      if ( $I_L1546_122 >= 1 + max( 0, -1 + _rsh( 7 + kmax, 3 ) ) ) exit
 1553.                   enddo
 1553.                endif
 1553.             endif
 1553.          endif
 1555.          if ( klats == 1 ) then
 1556.             $F_A33 = kmax
 1556.             $F_A34 = ibdim
 1556.             if ( and( -$F_A34, -$F_A33 ) < 0 ) then
 1556.                $I_L1556_103 = 0
 1556.                do
 1556.                   $I_L1556_87 = 0
 1556. !dir$ ivdep
 1556.                   do
 1556.                      iloc(1 + $I_L1556_87, 1 + $I_L1556_103, 2) = iloc(1 + $I_L1556_87, 1 + $I_L1556_103, 1)
 1556.                      $I_L1556_87 = 1 + $I_L1556_87
 1556.                      if ( $I_L1556_87 >= $F_A34 ) exit
 1556.                   enddo
 1556.                   $I_L1556_103 = 1 + $I_L1556_103
 1556.                   if ( $I_L1556_103 >= $F_A33 ) exit
 1556.                enddo
 1556.             endif
 1557.             $F_A35 = kmax
 1557.             $F_A36 = ibdim
 1557.             if ( and( -$F_A36, -$F_A35 ) < 0 ) then
 1557.                $I_L1557_105 = 0
 1557.                do
 1557.                   $I_L1557_89 = 0
 1557. !dir$ ivdep
 1557.                   do
 1557.                      iloc(1 + $I_L1557_89, 1 + $I_L1557_105, 3) = iloc(1 + $I_L1557_89, 1 + $I_L1557_105, 1)
 1557.                      $I_L1557_89 = 1 + $I_L1557_89
 1557.                      if ( $I_L1557_89 >= $F_A36 ) exit
 1557.                   enddo
 1557.                   $I_L1557_105 = 1 + $I_L1557_105
 1557.                   if ( $I_L1557_105 >= $F_A35 ) exit
 1557.                enddo
 1557.             endif
 1558.             $F_A37 = kmax
 1558.             $F_A38 = ibdim
 1558.             if ( and( -$F_A38, -$F_A37 ) < 0 ) then
 1558.                $I_L1558_107 = 0
 1558.                do
 1558.                   $I_L1558_91 = 0
 1558. !dir$ ivdep
 1558.                   do
 1558.                      iloc(1 + $I_L1558_91, 1 + $I_L1558_107, 4) = iloc(1 + $I_L1558_91, 1 + $I_L1558_107, 1)
 1558.                      $I_L1558_91 = 1 + $I_L1558_91
 1558.                      if ( $I_L1558_91 >= $F_A38 ) exit
 1558.                   enddo
 1558.                   $I_L1558_107 = 1 + $I_L1558_107
 1558.                   if ( $I_L1558_107 >= $F_A37 ) exit
 1558.                enddo
 1558.             endif
 1559.             $F_A39 = kmax
 1559.             $F_A40 = ibdim
 1559.             if ( and( -$F_A40, -$F_A39 ) < 0 ) then
 1559.                $I_L1559_109 = 0
 1559.                do
 1559.                   $I_L1559_93 = 0
 1559. !dir$ ivdep
 1559.                   do
 1559.                      ulondp(1 + $I_L1559_93, 1 + $I_L1559_109, 2) = ulondp(1 + $I_L1559_93, 1 + $I_L1559_109, 1)
 1559.                      $I_L1559_93 = 1 + $I_L1559_93
 1559.                      if ( $I_L1559_93 >= $F_A40 ) exit
 1559.                   enddo
 1559.                   $I_L1559_109 = 1 + $I_L1559_109
 1559.                   if ( $I_L1559_109 >= $F_A39 ) exit
 1559.                enddo
 1559.             endif
 1560.             $F_A41 = kmax
 1560.             $F_A42 = ibdim
 1560.             if ( and( -$F_A42, -$F_A41 ) < 0 ) then
 1560.                $I_L1560_111 = 0
 1560.                do
 1560.                   $I_L1560_95 = 0
 1560. !dir$ ivdep
 1560.                   do
 1560.                      ulondp(1 + $I_L1560_95, 1 + $I_L1560_111, 3) = ulondp(1 + $I_L1560_95, 1 + $I_L1560_111, 1)
 1560.                      $I_L1560_95 = 1 + $I_L1560_95
 1560.                      if ( $I_L1560_95 >= $F_A42 ) exit
 1560.                   enddo
 1560.                   $I_L1560_111 = 1 + $I_L1560_111
 1560.                   if ( $I_L1560_111 >= $F_A41 ) exit
 1560.                enddo
 1560.             endif
 1561.             $F_A43 = kmax
 1561.             $F_A44 = ibdim
 1561.             if ( and( -$F_A44, -$F_A43 ) < 0 ) then
 1561.                $I_L1561_113 = 0
 1561.                do
 1561.                   $I_L1561_97 = 0
 1561. !dir$ ivdep
 1561.                   do
 1561.                      ulondp(1 + $I_L1561_97, 1 + $I_L1561_113, 4) = ulondp(1 + $I_L1561_97, 1 + $I_L1561_113, 1)
 1561.                      $I_L1561_97 = 1 + $I_L1561_97
 1561.                      if ( $I_L1561_97 >= $F_A44 ) exit
 1561.                   enddo
 1561.                   $I_L1561_113 = 1 + $I_L1561_113
 1561.                   if ( $I_L1561_113 >= $F_A43 ) exit
 1561.                enddo
 1561.             endif
 1561.          endif
 1561.       endif
 1565.       return
 1565.       end
 1565.       
 1566.       
 1566.       subroutine locate2d( ulon, ulat, ulondp, ulatdp, iloc, jloc, ibdim, klats )
 1566.       t$40 = ibdim
 1579.       t$261 = _zla( 0, ibdim )
 1566.       t$262 = _zla( 0, ibdim )
 1566.       t$263 = 4 * _zla( 0, ibdim )
 1596.       if ( klats == 4 ) then
 1597.          kp(1) = -1
 1598.          kp(2) = 0
 1599.          kp(3) = 1
 1600.          kp(4) = 2
 1600.       else
 1602.          kp(1) = 0
 1603.          kp(2) = 1
 1603.       endif
 1606.       if ( ibdim > 0 ) then
 1606.          $I_L1606_36 = 0
 1606. !dir$ ivdep
 1606.          do
 1607.             $ik_S1 = int( ( ( 1.570796326794895 + ulat(1 + $I_L1606_36) ) * 1.0/delphiref ) )
 1608.             $jloc_WR0_R0 = (jphiref%base_addr)(1 + $I_L1606_36, $ik_S1, 0)
 1608.             jloc(1 + $I_L1606_36) = $jloc_WR0_R0
 1609.             if ( ulat(1 + $I_L1606_36) > (phi%base_addr)(1 + $I_L1606_36, 1 + $jloc_WR0_R0, 0) ) then
 1609.                $jloc_WR0_R0 = 1 + $jloc_WR0_R0
 1609.                jloc(1 + $I_L1606_36) = $jloc_WR0_R0
 1609.             endif
 1610.             ulatdp(1 + $I_L1606_36) = ( ( ulat(1 + $I_L1606_36) + -(phi%base_addr)(1 + $I_L1606_36, $jloc_WR0_R0, 0) ) * 1.0/(delphi%base_addr)(1 + $I_L1606_36, $jloc_WR0_R0, 0) )
 1611.             $I_L1606_36 = 1 + $I_L1606_36
 1609.             if ( $I_L1606_36 >= ibdim ) exit
 1609.          enddo
 1609.       endif
 1613.       if ( klats > 0 ) then
 1615.          if ( ibdim > 0 ) then
 1613.             $I_L1613_52 = 0
 1613.             if ( klats >= 4 ) then
 1613.                $I_L1613_57 = 0
 1613. !dir$ blocking_size( 0, 0 )
 1613.                do
 1614.                   $ks#1_U0 = kp(1 + 4 * $I_L1613_57)
 1614.                   $ks#2_U1 = kp(2 + 4 * $I_L1613_57)
 1614.                   $ks#3_U2 = kp(3 + 4 * $I_L1613_57)
 1614.                   $ks#4_U3 = kp(4 + 4 * $I_L1613_57)
 1615.                   $I_L1615_38 = 0
 1615. !dir$ ivdep
 1615. !dir$ blocking_size( 0, 0 )
 1615.                   do
 1616.                      $j_S5 = jmax + -jloc(1 + $I_L1615_38) + 1
 1617.                      $ulondp_WR0_R1 = 1.0 + ( ulon(1 + $I_L1615_38) * 1.0/(dellon%base_addr)(1 + $I_L1615_38, $j_S5 + -$ks#1_U0, 0) )
 1618.                      iloc(1 + $I_L1615_38, 1 + 4 * $I_L1613_57) = int( $ulondp_WR0_R1 )
 1619.                      $ulondp_WR0_R1 = $ulondp_WR0_R1 + ( -( int( $ulondp_WR0_R1 ) ) )
 1619.                      ulondp(1 + $I_L1615_38, 1 + 4 * $I_L1613_57) = $ulondp_WR0_R1
 1616.                      $j_S5 = jmax + -jloc(1 + $I_L1615_38) + 1
 1617.                      $ulondp_WR0_R1 = 1.0 + ( ulon(1 + $I_L1615_38) * 1.0/(dellon%base_addr)(1 + $I_L1615_38, $j_S5 + -$ks#2_U1, 0) )
 1618.                      iloc(1 + $I_L1615_38, 2 + 4 * $I_L1613_57) = int( $ulondp_WR0_R1 )
 1619.                      $ulondp_WR0_R1 = $ulondp_WR0_R1 + ( -( int( $ulondp_WR0_R1 ) ) )
 1619.                      ulondp(1 + $I_L1615_38, 2 + 4 * $I_L1613_57) = $ulondp_WR0_R1
 1616.                      $j_S5 = jmax + -jloc(1 + $I_L1615_38) + 1
 1617.                      $ulondp_WR0_R1 = 1.0 + ( ulon(1 + $I_L1615_38) * 1.0/(dellon%base_addr)(1 + $I_L1615_38, $j_S5 + -$ks#3_U2, 0) )
 1618.                      iloc(1 + $I_L1615_38, 3 + 4 * $I_L1613_57) = int( $ulondp_WR0_R1 )
 1619.                      $ulondp_WR0_R1 = $ulondp_WR0_R1 + ( -( int( $ulondp_WR0_R1 ) ) )
 1619.                      ulondp(1 + $I_L1615_38, 3 + 4 * $I_L1613_57) = $ulondp_WR0_R1
 1616.                      $j_S5 = jmax + -jloc(1 + $I_L1615_38) + 1
 1617.                      $ulondp_WR0_R1 = 1.0 + ( ulon(1 + $I_L1615_38) * 1.0/(dellon%base_addr)(1 + $I_L1615_38, $j_S5 + -$ks#4_U3, 0) )
 1618.                      iloc(1 + $I_L1615_38, 4 + 4 * $I_L1613_57) = int( $ulondp_WR0_R1 )
 1619.                      $ulondp_WR0_R1 = $ulondp_WR0_R1 + ( -( int( $ulondp_WR0_R1 ) ) )
 1619.                      ulondp(1 + $I_L1615_38, 4 + 4 * $I_L1613_57) = $ulondp_WR0_R1
 1620.                      $I_L1615_38 = 1 + $I_L1615_38
 1615.                      if ( $I_L1615_38 >= ibdim ) exit
 1615.                   enddo
 1621.                   $I_L1613_57 = 1 + $I_L1613_57
 1620.                   if ( $I_L1613_57 >= _rsh( klats, 2 ) ) exit
 1620.                enddo
 1621.                $I_L1613_52 = and( 0xfffffffffffffffcUL, klats )
 1621.             endif
 1613.             if ( $I_L1613_52 < klats ) then
 1613.                $I_L1613_54 = 0
 1613. !dir$ blocking_size( 0, 0 )
 1613.                do
 1614.                   $ks_S4 = kp($I_L1613_52 + $I_L1613_54 + 1)
 1615.                   $I_L1615_38 = 0
 1615. !dir$ ivdep
 1615. !dir$ blocking_size( 0, 0 )
 1615.                   do
 1616.                      $j_S5 = jmax + -jloc(1 + $I_L1615_38) + 1
 1617.                      $ulondp_WR0_R1 = 1.0 + ( ulon(1 + $I_L1615_38) * 1.0/(dellon%base_addr)(1 + $I_L1615_38, $j_S5 + -$ks_S4, 0) )
 1618.                      iloc(1 + $I_L1615_38, $I_L1613_52 + $I_L1613_54 + 1) = int( $ulondp_WR0_R1 )
 1619.                      $ulondp_WR0_R1 = $ulondp_WR0_R1 + ( -( int( $ulondp_WR0_R1 ) ) )
 1619.                      ulondp(1 + $I_L1615_38, $I_L1613_52 + $I_L1613_54 + 1) = $ulondp_WR0_R1
 1620.                      $I_L1615_38 = 1 + $I_L1615_38
 1615.                      if ( $I_L1615_38 >= ibdim ) exit
 1615.                   enddo
 1621.                   $I_L1613_54 = 1 + $I_L1613_54
 1620.                   if ( $I_L1613_54 >= klats + -$I_L1613_52 ) exit
 1620.                enddo
 1620.             endif
 1620.          endif
 1620.       endif
 1622.       if ( klats == 1 ) then
 1623.          $F_A33 = ibdim
 1623.          if ( ibdim > 0 ) then
 1623.             $I_L1623_40 = 0
 1623. !dir$ ivdep
 1623.             do
 1623.                iloc(1 + $I_L1623_40, 2) = iloc(1 + $I_L1623_40, 1)
 1623.                $I_L1623_40 = 1 + $I_L1623_40
 1623.                if ( $I_L1623_40 >= $F_A33 ) exit
 1623.             enddo
 1623.          endif
 1624.          $F_A34 = ibdim
 1624.          if ( ibdim > 0 ) then
 1624.             $I_L1624_42 = 0
 1624. !dir$ ivdep
 1624.             do
 1624.                iloc(1 + $I_L1624_42, 3) = iloc(1 + $I_L1624_42, 1)
 1624.                $I_L1624_42 = 1 + $I_L1624_42
 1624.                if ( $I_L1624_42 >= $F_A34 ) exit
 1624.             enddo
 1624.          endif
 1625.          $F_A35 = ibdim
 1625.          if ( ibdim > 0 ) then
 1625.             $I_L1625_44 = 0
 1625. !dir$ ivdep
 1625.             do
 1625.                iloc(1 + $I_L1625_44, 4) = iloc(1 + $I_L1625_44, 1)
 1625.                $I_L1625_44 = 1 + $I_L1625_44
 1625.                if ( $I_L1625_44 >= $F_A35 ) exit
 1625.             enddo
 1625.          endif
 1626.          $F_A36 = ibdim
 1626.          if ( ibdim > 0 ) then
 1626.             $I_L1626_46 = 0
 1626. !dir$ ivdep
 1626.             do
 1626.                ulondp(1 + $I_L1626_46, 2) = ulondp(1 + $I_L1626_46, 1)
 1626.                $I_L1626_46 = 1 + $I_L1626_46
 1626.                if ( $I_L1626_46 >= $F_A36 ) exit
 1626.             enddo
 1626.          endif
 1627.          $F_A37 = ibdim
 1627.          if ( ibdim > 0 ) then
 1627.             $I_L1627_48 = 0
 1627. !dir$ ivdep
 1627.             do
 1627.                ulondp(1 + $I_L1627_48, 3) = ulondp(1 + $I_L1627_48, 1)
 1627.                $I_L1627_48 = 1 + $I_L1627_48
 1627.                if ( $I_L1627_48 >= $F_A37 ) exit
 1627.             enddo
 1627.          endif
 1628.          $F_A38 = ibdim
 1628.          if ( ibdim > 0 ) then
 1628.             $I_L1628_50 = 0
 1628. !dir$ ivdep
 1628.             do
 1628.                ulondp(1 + $I_L1628_50, 4) = ulondp(1 + $I_L1628_50, 1)
 1628.                $I_L1628_50 = 1 + $I_L1628_50
 1628.                if ( $I_L1628_50 >= $F_A38 ) exit
 1628.             enddo
 1628.          endif
 1628.       endif
 1631.       return
 1631.       end
 1631.       
 1632.       
 1632.       subroutine interpluvg( u, v, uint, vint, ulondp, ulatdp, usigdp, jloc, kloc, ibdim, ip, jn )
 1632.       t$43 = ibmax
 1632.       t$42 = kmax
 1632.       t$44 = jbmax_ext
 1650.       t$264 = _zla( 0, ibmax )
 1632.       t$265 = _zla( 0, ibmax )
 1650.       t$266 = _zla( 0, kmax )
 1632.       t$267 = _zla( 0, ibmax ) * _zla( 0, kmax )
 1650.       t$268 = _zla( 0, jbmax_ext )
 1632.       t$269 = _zla( 0, ibmax ) * _zla( 0, kmax ) * _zla( 0, jbmax_ext )
 1632.       t$41 = ibdim
 1652.       t$270 = _zla( 0, ibdim )
 1632.       t$271 = _zla( 0, ibdim )
 1632.       t$272 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1632.       t$273 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1632.       t$274 = _zla( 0, ibdim ) * _zla( 0, kmax ) * 2
 1632.       t$275 = _zla( 0, ibdim ) * _zla( 0, kmax ) * 4
 1674.       if ( kmax > 0 ) then
 1675.          if ( ibdim > 0 ) then
 1674.             $I_L1674_10 = 0
 1674.             do
 1675.                $I_L1675_8 = 0
 1675. !dir$ ivdep
 1675.                do
 1676.                   $s1_S4 = cvmg( 1.0, -1.0, jloc(1 + $I_L1675_8, 1 + $I_L1674_10) /= 0 )
 1681.                   $s2_S7 = cvmg( 1.0, -1.0, jmax + -jloc(1 + $I_L1675_8, 1 + $I_L1674_10) /= 0 )
 1686.                   $f1_S2 = u(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 1), kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 1)) + ulondp(1 + $I_L1675_8, 1 + $I_L1674_10, 1) * ( u(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 3), kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 3)) + -u(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 1), kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 1)) )
 1688.                   $g1_S8 = v(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 1), kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 1)) + ulondp(1 + $I_L1675_8, 1 + $I_L1674_10, 1) * ( v(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 3), kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 3)) + -v(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 1), kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 1)) )
 1690.                   $f2_S5 = u(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 2), kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 2)) + ulondp(1 + $I_L1675_8, 1 + $I_L1674_10, 2) * ( u(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 4), kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 4)) + -u(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 2), kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 2)) )
 1692.                   $g2_S10 = v(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 2), kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 2)) + ulondp(1 + $I_L1675_8, 1 + $I_L1674_10, 2) * ( v(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 4), kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 4)) + -v(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 2), kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 2)) )
 1694.                   $f3_S3 = u(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 1), 1 + kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 1)) + ulondp(1 + $I_L1675_8, 1 + $I_L1674_10, 1) * ( u(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 3), 1 + kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 3)) + -u(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 1), 1 + kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 1)) )
 1696.                   $g3_S9 = v(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 1), 1 + kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 1)) + ulondp(1 + $I_L1675_8, 1 + $I_L1674_10, 1) * ( v(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 3), 1 + kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 3)) + -v(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 1), 1 + kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 1)) )
 1698.                   $f4_S6 = u(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 2), 1 + kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 2)) + ulondp(1 + $I_L1675_8, 1 + $I_L1674_10, 2) * ( u(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 4), 1 + kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 4)) + -u(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 2), 1 + kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 2)) )
 1700.                   $g4_S11 = v(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 2), 1 + kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 2)) + ulondp(1 + $I_L1675_8, 1 + $I_L1674_10, 2) * ( v(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 4), 1 + kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 4)) + -v(ip(1 + $I_L1675_8, 1 + $I_L1674_10, 2), 1 + kloc(1 + $I_L1675_8, 1 + $I_L1674_10), jn(1 + $I_L1675_8, 1 + $I_L1674_10, 2)) )
 1702.                   $f1_S12 = $s1_S4 * ( $f1_S2 + usigdp(1 + $I_L1675_8, 1 + $I_L1674_10) * ( $f3_S3 + -$f1_S2 ) )
 1703.                   $f2_S13 = $s2_S7 * ( $f2_S5 + usigdp(1 + $I_L1675_8, 1 + $I_L1674_10) * ( $f4_S6 + -$f2_S5 ) )
 1704.                   $g1_S14 = $s1_S4 * ( $g1_S8 + usigdp(1 + $I_L1675_8, 1 + $I_L1674_10) * ( $g3_S9 + -$g1_S8 ) )
 1705.                   $g2_S15 = $s2_S7 * ( $g2_S10 + usigdp(1 + $I_L1675_8, 1 + $I_L1674_10) * ( $g4_S11 + -$g2_S10 ) )
 1706.                   uint(1 + $I_L1675_8, 1 + $I_L1674_10) = $f1_S12 + ulatdp(1 + $I_L1675_8, 1 + $I_L1674_10) * ( $f2_S13 + -$f1_S12 )
 1707.                   vint(1 + $I_L1675_8, 1 + $I_L1674_10) = $g1_S14 + ulatdp(1 + $I_L1675_8, 1 + $I_L1674_10) * ( $g2_S15 + -$g1_S14 )
 1708.                   $I_L1675_8 = 1 + $I_L1675_8
 1675.                   if ( $I_L1675_8 >= ibdim ) exit
 1675.                enddo
 1709.                $I_L1674_10 = 1 + $I_L1674_10
 1708.                if ( $I_L1674_10 >= kmax ) exit
 1708.             enddo
 1708.          endif
 1708.       endif
 1711.       return
 1711.       end
 1711.       
 1712.       
 1712.       subroutine interpluvg2d( u, v, uint, vint, ulondp, ulatdp, iloc, jloc, ibdim )
 1712.       t$46 = ibmax
 1712.       t$47 = jbmax_ext
 1728.       t$276 = _zla( 0, ibmax )
 1712.       t$277 = _zla( 0, ibmax )
 1728.       t$278 = _zla( 0, jbmax_ext )
 1712.       t$279 = _zla( 0, ibmax ) * _zla( 0, jbmax_ext )
 1712.       t$45 = ibdim
 1730.       t$280 = _zla( 0, ibdim )
 1712.       t$281 = _zla( 0, ibdim )
 1712.       t$282 = 2 * _zla( 0, ibdim )
 1749.       t$285 = 8 * _zla( 0, ibmax )
 1750.       t$286 = 8 * _zla( 0, ibmax )
 1750.       t$288 = 16 * _zla( 0, ibmax )
 1712.       t$283 = int( _alloc( 16 * _zla( 0, ibmax ) ), 8 )
 1749.       t$284 = t$283
 1750.       t$287 = t$283 + 8 * _zla( 0, ibmax )
 1755.       if ( ibdim > 0 ) then
 1755.          $I_L1755_12 = 0
 1755. !dir$ ivdep
 1755.          do
 1756.             $jp_S1 = jmax + -jloc(1 + $I_L1755_12) + 1
 1757.             s1(1 + $I_L1755_12) = 1.0
 1758.             s2(1 + $I_L1755_12) = 1.0
 1759.             if ( jmax + -$jp_S1 == -1 ) then
 1759.                s1(1 + $I_L1755_12) = -1.0
 1759.             endif
 1760.             if ( $jp_S1 == 1 ) then
 1760.                s2(1 + $I_L1755_12) = -1.0
 1760.             endif
 1761.             $I_L1755_12 = 1 + $I_L1755_12
 1760.             if ( $I_L1755_12 >= ibdim ) exit
 1760.          enddo
 1766.          $I_L1766_14 = 0
 1766. !dir$ ivdep
 1766.          do
 1767.             $jp_S3 = jmax + -jloc(1 + $I_L1766_14) + 1
 1768.             $i1_S4 = (ibperij%base_addr)(iloc(1 + $I_L1766_14, 1), $jp_S3, 0)
 1769.             $i2_S8 = (ibperij%base_addr)(iloc(1 + $I_L1766_14, 2), -1 + $jp_S3, 0)
 1770.             $i3_S6 = (ibperij%base_addr)(1 + iloc(1 + $I_L1766_14, 1), $jp_S3, 0)
 1771.             $i4_S10 = (ibperij%base_addr)(1 + iloc(1 + $I_L1766_14, 2), -1 + $jp_S3, 0)
 1772.             $j1_S5 = (jbperij%base_addr)(iloc(1 + $I_L1766_14, 1), $jp_S3, 0)
 1773.             $j2_S9 = (jbperij%base_addr)(iloc(1 + $I_L1766_14, 2), -1 + $jp_S3, 0)
 1774.             $j3_S7 = (jbperij%base_addr)(1 + iloc(1 + $I_L1766_14, 1), $jp_S3, 0)
 1775.             $j4_S11 = (jbperij%base_addr)(1 + iloc(1 + $I_L1766_14, 2), -1 + $jp_S3, 0)
 1776.             $f1_S12 = s1(1 + $I_L1766_14) * ( u($i1_S4, $j1_S5) + ulondp(1 + $I_L1766_14, 1) * ( u($i3_S6, $j3_S7) + -u($i1_S4, $j1_S5) ) )
 1778.             $g1_S14 = s1(1 + $I_L1766_14) * ( v($i1_S4, $j1_S5) + ulondp(1 + $I_L1766_14, 1) * ( v($i3_S6, $j3_S7) + -v($i1_S4, $j1_S5) ) )
 1780.             $f2_S13 = s2(1 + $I_L1766_14) * ( u($i2_S8, $j2_S9) + ulondp(1 + $I_L1766_14, 2) * ( u($i4_S10, $j4_S11) + -u($i2_S8, $j2_S9) ) )
 1782.             $g2_S15 = s2(1 + $I_L1766_14) * ( v($i2_S8, $j2_S9) + ulondp(1 + $I_L1766_14, 2) * ( v($i4_S10, $j4_S11) + -v($i2_S8, $j2_S9) ) )
 1784.             uint(1 + $I_L1766_14) = $f1_S12 + ulatdp(1 + $I_L1766_14) * ( $f2_S13 + -$f1_S12 )
 1785.             vint(1 + $I_L1766_14) = $g1_S14 + ulatdp(1 + $I_L1766_14) * ( $g2_S15 + -$g1_S14 )
 1786.             $I_L1766_14 = 1 + $I_L1766_14
 1766.             if ( $I_L1766_14 >= ibdim ) exit
 1766.          enddo
 1766.       endif
 1712.       _free( t$283 )
 1788.       return
 1788.       end
 1788.       
 1789.       
 1789.       subroutine interplg( fint, f, ulondp, ulatdp, usigdp, iloc, jloc, kloc, ibdim, ip, jn )
 1789.       t$48 = ibdim
 1789.       t$49 = kmax
 1809.       t$289 = _zla( 0, ibdim )
 1789.       t$290 = _zla( 0, ibdim )
 1809.       t$291 = _zla( 0, kmax )
 1789.       t$292 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1789.       t$50 = ibmax
 1789.       t$51 = jbmax_ext
 1808.       t$293 = _zla( 0, ibmax )
 1789.       t$294 = _zla( 0, ibmax )
 1789.       t$295 = _zla( 0, kmax ) * _zla( 0, ibmax )
 1808.       t$296 = _zla( 0, jbmax_ext )
 1789.       t$297 = _zla( 0, kmax ) * _zla( 0, ibmax ) * _zla( 0, jbmax_ext )
 1789.       t$298 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1789.       t$299 = _zla( 0, ibdim ) * _zla( 0, kmax ) * 2
 1789.       t$300 = _zla( 0, ibdim ) * _zla( 0, kmax ) * 4
 1826.       if ( kmax > 0 ) then
 1827.          if ( ibdim > 0 ) then
 1826.             $I_L1826_30 = 0
 1826.             do
 1827.                $I_L1827_24 = 0
 1827. !dir$ ivdep
 1827.                do
 1828.                   $jp_S2 = jmax + -jloc(1 + $I_L1827_24, 1 + $I_L1826_30) + 1
 1829.                   ip(1 + $I_L1827_24, 1 + $I_L1826_30, 1) = (ibperij%base_addr)(iloc(1 + $I_L1827_24, 1 + $I_L1826_30, 1), $jp_S2, 0)
 1830.                   ip(1 + $I_L1827_24, 1 + $I_L1826_30, 2) = (ibperij%base_addr)(iloc(1 + $I_L1827_24, 1 + $I_L1826_30, 2), -1 + $jp_S2, 0)
 1831.                   ip(1 + $I_L1827_24, 1 + $I_L1826_30, 3) = (ibperij%base_addr)(1 + iloc(1 + $I_L1827_24, 1 + $I_L1826_30, 1), $jp_S2, 0)
 1832.                   ip(1 + $I_L1827_24, 1 + $I_L1826_30, 4) = (ibperij%base_addr)(1 + iloc(1 + $I_L1827_24, 1 + $I_L1826_30, 2), -1 + $jp_S2, 0)
 1833.                   jn(1 + $I_L1827_24, 1 + $I_L1826_30, 1) = (jbperij%base_addr)(iloc(1 + $I_L1827_24, 1 + $I_L1826_30, 1), $jp_S2, 0)
 1834.                   jn(1 + $I_L1827_24, 1 + $I_L1826_30, 2) = (jbperij%base_addr)(iloc(1 + $I_L1827_24, 1 + $I_L1826_30, 2), -1 + $jp_S2, 0)
 1835.                   jn(1 + $I_L1827_24, 1 + $I_L1826_30, 3) = (jbperij%base_addr)(1 + iloc(1 + $I_L1827_24, 1 + $I_L1826_30, 1), $jp_S2, 0)
 1836.                   jn(1 + $I_L1827_24, 1 + $I_L1826_30, 4) = (jbperij%base_addr)(1 + iloc(1 + $I_L1827_24, 1 + $I_L1826_30, 2), -1 + $jp_S2, 0)
 1838.                   $I_L1827_24 = 1 + $I_L1827_24
 1827.                   if ( $I_L1827_24 >= ibdim ) exit
 1827.                enddo
 1839.                $I_L1826_30 = 1 + $I_L1826_30
 1838.                if ( $I_L1826_30 >= kmax ) exit
 1838.             enddo
 1838.          endif
 1838.       endif
 1840.       $Reduc_A34 = .false.
 1840.       $F_A38 = kmax
 1840.       $F_A39 = ibdim
 1840.       if ( and( -$F_A39, -$F_A38 ) < 0 ) then
 1840.          $I_L1840_36 = 0
 1840.          do
 1840.             $I_L1840_34 = 0
 1840.             do
 1840.                $I_L1840_28 = 0
 1840. !dir$ ivdep
 1840.                do
 1840.                   if ( ip(1 + $I_L1840_28, 1 + $I_L1840_34, 1 + $I_L1840_36) == 0 ) then
 1840.                      $Reduc_A34 = .true.
 1840.                      goto 10
 1840.                   endif
 1840.                   $I_L1840_28 = 1 + $I_L1840_28
 1840.                   if ( $I_L1840_28 >= $F_A39 ) exit
 1840.                enddo
 1840.                $I_L1840_34 = 1 + $I_L1840_34
 1840.                if ( $I_L1840_34 >= $F_A38 ) exit
 1840.             enddo
 1840.             $I_L1840_36 = 1 + $I_L1840_36
 1840.             if ( $I_L1840_36 >= 4 ) exit
 1840.          enddo
 1840.       endif
 1840.    10 continue
 1840.       if ( $Reduc_A34 ) then
 1841.          $Unit_temp_O0 = nfprt
 1841.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$53,  _substr(t$52,1,23), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(InterplG)**', 0x800600000000L ) ) )
 1842.          $Unit_temp_O1 = nfprt
 1842.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$55,  _substr(t$54,1,47), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(InterplG)**', 0x800600000000L ) ) )
 1843.           _substr(t$571,1,14) = '**(InterplG)**'
 1843.          call _stop(  _substr(t$571,1,14) )
 1843.       else if ( kmax > 0 ) then
 1846.          if ( ibdim > 0 ) then
 1845.             $I_L1845_32 = 0
 1845.             do
 1846.                $I_L1846_26 = 0
 1846. !dir$ ivdep
 1846.                do
 1847.                   $f1_S6 = f(ip(1 + $I_L1846_26, 1 + $I_L1845_32, 1), kloc(1 + $I_L1846_26, 1 + $I_L1845_32), jn(1 + $I_L1846_26, 1 + $I_L1845_32, 1)) + ulondp(1 + $I_L1846_26, 1 + $I_L1845_32, 1) * ( f(ip(1 + $I_L1846_26, 1 + $I_L1845_32, 3), kloc(1 + $I_L1846_26, 1 + $I_L1845_32), jn(1 + $I_L1846_26, 1 + $I_L1845_32, 3)) + -f(ip(1 + $I_L1846_26, 1 + $I_L1845_32, 1), kloc(1 + $I_L1846_26, 1 + $I_L1845_32), jn(1 + $I_L1846_26, 1 + $I_L1845_32, 1)) )
 1849.                   $f2_S8 = f(ip(1 + $I_L1846_26, 1 + $I_L1845_32, 2), kloc(1 + $I_L1846_26, 1 + $I_L1845_32), jn(1 + $I_L1846_26, 1 + $I_L1845_32, 2)) + ulondp(1 + $I_L1846_26, 1 + $I_L1845_32, 2) * ( f(ip(1 + $I_L1846_26, 1 + $I_L1845_32, 4), kloc(1 + $I_L1846_26, 1 + $I_L1845_32), jn(1 + $I_L1846_26, 1 + $I_L1845_32, 4)) + -f(ip(1 + $I_L1846_26, 1 + $I_L1845_32, 2), kloc(1 + $I_L1846_26, 1 + $I_L1845_32), jn(1 + $I_L1846_26, 1 + $I_L1845_32, 2)) )
 1851.                   $f3_S7 = f(ip(1 + $I_L1846_26, 1 + $I_L1845_32, 1), 1 + kloc(1 + $I_L1846_26, 1 + $I_L1845_32), jn(1 + $I_L1846_26, 1 + $I_L1845_32, 1)) + ulondp(1 + $I_L1846_26, 1 + $I_L1845_32, 1) * ( f(ip(1 + $I_L1846_26, 1 + $I_L1845_32, 3), 1 + kloc(1 + $I_L1846_26, 1 + $I_L1845_32), jn(1 + $I_L1846_26, 1 + $I_L1845_32, 3)) + -f(ip(1 + $I_L1846_26, 1 + $I_L1845_32, 1), 1 + kloc(1 + $I_L1846_26, 1 + $I_L1845_32), jn(1 + $I_L1846_26, 1 + $I_L1845_32, 1)) )
 1853.                   $f4_S9 = f(ip(1 + $I_L1846_26, 1 + $I_L1845_32, 2), 1 + kloc(1 + $I_L1846_26, 1 + $I_L1845_32), jn(1 + $I_L1846_26, 1 + $I_L1845_32, 2)) + ulondp(1 + $I_L1846_26, 1 + $I_L1845_32, 2) * ( f(ip(1 + $I_L1846_26, 1 + $I_L1845_32, 4), 1 + kloc(1 + $I_L1846_26, 1 + $I_L1845_32), jn(1 + $I_L1846_26, 1 + $I_L1845_32, 4)) + -f(ip(1 + $I_L1846_26, 1 + $I_L1845_32, 2), 1 + kloc(1 + $I_L1846_26, 1 + $I_L1845_32), jn(1 + $I_L1846_26, 1 + $I_L1845_32, 2)) )
 1855.                   $f1_S10 = $f1_S6 + usigdp(1 + $I_L1846_26, 1 + $I_L1845_32) * ( $f3_S7 + -$f1_S6 )
 1856.                   $f2_S11 = $f2_S8 + usigdp(1 + $I_L1846_26, 1 + $I_L1845_32) * ( $f4_S9 + -$f2_S8 )
 1857.                   fint(1 + $I_L1846_26, 1 + $I_L1845_32) = $f1_S10 + ulatdp(1 + $I_L1846_26, 1 + $I_L1845_32) * ( $f2_S11 + -$f1_S10 )
 1858.                   $I_L1846_26 = 1 + $I_L1846_26
 1846.                   if ( $I_L1846_26 >= ibdim ) exit
 1846.                enddo
 1859.                $I_L1845_32 = 1 + $I_L1845_32
 1858.                if ( $I_L1845_32 >= kmax ) exit
 1858.             enddo
 1858.          endif
 1858.       endif
 1861.       return
 1861.       end
 1861.       
 1862.       
 1862.       subroutine interpcublin2d( fint, f, ulondp, ulatdp, iloc, jloc, ibdim )
 1862.       t$56 = ibdim
 1878.       t$301 = _zla( 0, ibdim )
 1862.       t$57 = ibmax
 1862.       t$58 = jbmax_ext
 1877.       t$302 = _zla( 0, ibmax )
 1862.       t$303 = _zla( 0, ibmax )
 1877.       t$304 = _zla( 0, jbmax_ext )
 1862.       t$305 = _zla( 0, ibmax ) * _zla( 0, jbmax_ext )
 1862.       t$306 = _zla( 0, ibdim )
 1862.       t$307 = 4 * _zla( 0, ibdim )
 1887.       t$310 = 8 * _zla( 0, ibmax )
 1888.       t$311 = 8 * _zla( 0, ibmax )
 1888.       t$313 = 16 * _zla( 0, ibmax )
 1889.       t$314 = 16 * _zla( 0, ibmax )
 1889.       t$316 = 24 * _zla( 0, ibmax )
 1890.       t$317 = 24 * _zla( 0, ibmax )
 1890.       t$319 = 32 * _zla( 0, ibmax )
 1862.       t$320 = 12 * _zla( 0, ibmax )
 1885.       t$322 = 80 * _zla( 0, ibmax )
 1886.       t$324 = 128 * _zla( 0, ibmax )
 1862.       t$308 = int( _alloc( 128 * _zla( 0, ibmax ) ), 8 )
 1887.       t$309 = t$308
 1888.       t$312 = t$308 + 8 * _zla( 0, ibmax )
 1889.       t$315 = t$308 + 16 * _zla( 0, ibmax )
 1890.       t$318 = t$308 + 24 * _zla( 0, ibmax )
 1885.       t$321 = t$308 + 32 * _zla( 0, ibmax )
 1886.       t$323 = t$308 + 80 * _zla( 0, ibmax )
 1898.       if ( ibdim > 0 ) then
 1898.          $I_L1898_18 = 0
 1898. !dir$ ivdep
 1898.          do
 1899.             $jp_S1 = jmax + -jloc(1 + $I_L1898_18) + 1
 1900.             ip(1 + $I_L1898_18, 1) = (ibperij%base_addr)(iloc(1 + $I_L1898_18, 1), 1 + $jp_S1, 0)
 1901.             ip(1 + $I_L1898_18, 2) = (ibperij%base_addr)(1 + iloc(1 + $I_L1898_18, 1), 1 + $jp_S1, 0)
 1902.             ip(1 + $I_L1898_18, 3) = (ibperij%base_addr)(-1 + iloc(1 + $I_L1898_18, 2), $jp_S1, 0)
 1903.             ip(1 + $I_L1898_18, 4) = (ibperij%base_addr)(iloc(1 + $I_L1898_18, 2), $jp_S1, 0)
 1904.             ip(1 + $I_L1898_18, 5) = (ibperij%base_addr)(1 + iloc(1 + $I_L1898_18, 2), $jp_S1, 0)
 1905.             ip(1 + $I_L1898_18, 6) = (ibperij%base_addr)(2 + iloc(1 + $I_L1898_18, 2), $jp_S1, 0)
 1906.             ip(1 + $I_L1898_18, 7) = (ibperij%base_addr)(-1 + iloc(1 + $I_L1898_18, 3), -1 + $jp_S1, 0)
 1907.             ip(1 + $I_L1898_18, 8) = (ibperij%base_addr)(iloc(1 + $I_L1898_18, 3), -1 + $jp_S1, 0)
 1908.             ip(1 + $I_L1898_18, 9) = (ibperij%base_addr)(1 + iloc(1 + $I_L1898_18, 3), -1 + $jp_S1, 0)
 1909.             ip(1 + $I_L1898_18, 10) = (ibperij%base_addr)(2 + iloc(1 + $I_L1898_18, 3), -1 + $jp_S1, 0)
 1910.             ip(1 + $I_L1898_18, 11) = (ibperij%base_addr)(iloc(1 + $I_L1898_18, 4), -2 + $jp_S1, 0)
 1911.             ip(1 + $I_L1898_18, 12) = (ibperij%base_addr)(1 + iloc(1 + $I_L1898_18, 4), -2 + $jp_S1, 0)
 1912.             jn(1 + $I_L1898_18, 1) = (jbperij%base_addr)(iloc(1 + $I_L1898_18, 1), 1 + $jp_S1, 0)
 1913.             jn(1 + $I_L1898_18, 2) = (jbperij%base_addr)(1 + iloc(1 + $I_L1898_18, 1), 1 + $jp_S1, 0)
 1914.             jn(1 + $I_L1898_18, 3) = (jbperij%base_addr)(-1 + iloc(1 + $I_L1898_18, 2), $jp_S1, 0)
 1915.             jn(1 + $I_L1898_18, 4) = (jbperij%base_addr)(iloc(1 + $I_L1898_18, 2), $jp_S1, 0)
 1916.             jn(1 + $I_L1898_18, 5) = (jbperij%base_addr)(1 + iloc(1 + $I_L1898_18, 2), $jp_S1, 0)
 1917.             jn(1 + $I_L1898_18, 6) = (jbperij%base_addr)(2 + iloc(1 + $I_L1898_18, 2), $jp_S1, 0)
 1918.             jn(1 + $I_L1898_18, 7) = (jbperij%base_addr)(-1 + iloc(1 + $I_L1898_18, 3), -1 + $jp_S1, 0)
 1919.             jn(1 + $I_L1898_18, 8) = (jbperij%base_addr)(iloc(1 + $I_L1898_18, 3), -1 + $jp_S1, 0)
 1920.             jn(1 + $I_L1898_18, 9) = (jbperij%base_addr)(1 + iloc(1 + $I_L1898_18, 3), -1 + $jp_S1, 0)
 1921.             jn(1 + $I_L1898_18, 10) = (jbperij%base_addr)(2 + iloc(1 + $I_L1898_18, 3), -1 + $jp_S1, 0)
 1922.             jn(1 + $I_L1898_18, 11) = (jbperij%base_addr)(iloc(1 + $I_L1898_18, 4), -2 + $jp_S1, 0)
 1923.             jn(1 + $I_L1898_18, 12) = (jbperij%base_addr)(1 + iloc(1 + $I_L1898_18, 4), -2 + $jp_S1, 0)
 1924.             $I_L1898_18 = 1 + $I_L1898_18
 1898.             if ( $I_L1898_18 >= ibdim ) exit
 1898.          enddo
 1898.       endif
 1925.       $Reduc_A34 = .false.
 1925.       $F_A37 = ibdim
 1925.       if ( ibdim > 0 ) then
 1925.          $I_L1925_26 = 0
 1925.          do
 1925.             $I_L1925_24 = 0
 1925. !dir$ ivdep
 1925.             do
 1925.                if ( ip(1 + $I_L1925_24, 1 + $I_L1925_26) == 0 ) then
 1925.                   $Reduc_A34 = .true.
 1925.                   goto 10
 1925.                endif
 1925.                $I_L1925_24 = 1 + $I_L1925_24
 1925.                if ( $I_L1925_24 >= $F_A37 ) exit
 1925.             enddo
 1925.             $I_L1925_26 = 1 + $I_L1925_26
 1925.             if ( $I_L1925_26 >= 12 ) exit
 1925.          enddo
 1925.       endif
 1925.    10 continue
 1925.       if ( $Reduc_A34 ) then
 1926.          $Unit_temp_O0 = nfprt
 1926.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$60,  _substr(t$59,1,23), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Interpcublin2d)**', 0x800600000000L ) ) )
 1927.          $Unit_temp_O1 = nfprt
 1927.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$62,  _substr(t$61,1,47), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Interpcublin2d)**', 0x800600000000L ) ) )
 1928.           _substr(t$581,1,20) = '**(Interpcublin2d)**'
 1928.          call _stop(  _substr(t$581,1,20) )
 1928.       else
 1930.          if ( ibdim > 0 ) then
 1930.             $I_L1930_20 = 0
 1930. !dir$ ivdep
 1930.             do
 1931.                f1(1 + $I_L1930_20) = f(ip(1 + $I_L1930_20, 1), jn(1 + $I_L1930_20, 1)) + ulondp(1 + $I_L1930_20, 1) * ( f(ip(1 + $I_L1930_20, 2), jn(1 + $I_L1930_20, 2)) + -f(ip(1 + $I_L1930_20, 1), jn(1 + $I_L1930_20, 1)) )
 1933.                $s_S4 = -5.0e-1 + ulondp(1 + $I_L1930_20, 2)
 1934.                $fa_S6 = 5.0e-1 * ( f(ip(1 + $I_L1930_20, 5), jn(1 + $I_L1930_20, 5)) + f(ip(1 + $I_L1930_20, 4), jn(1 + $I_L1930_20, 4)) ) + $s_S4 * ( f(ip(1 + $I_L1930_20, 5), jn(1 + $I_L1930_20, 5)) + -f(ip(1 + $I_L1930_20, 4), jn(1 + $I_L1930_20, 4)) )
 1936.                $fb_S5 = 5.0e-1 * ( f(ip(1 + $I_L1930_20, 6), jn(1 + $I_L1930_20, 6)) + f(ip(1 + $I_L1930_20, 3), jn(1 + $I_L1930_20, 3)) ) + $s_S4 * ( f(ip(1 + $I_L1930_20, 6), jn(1 + $I_L1930_20, 6)) + -f(ip(1 + $I_L1930_20, 3), jn(1 + $I_L1930_20, 3)) ) * 3.3333333333333331e-1
 1938.                f2(1 + $I_L1930_20) = $fa_S6 + ( 1.25e-1 + $s_S4 * $s_S4 * -5.0e-1 ) * ( $fa_S6 + -$fb_S5 )
 1939.                $t_S7 = -5.0e-1 + ulondp(1 + $I_L1930_20, 3)
 1940.                $fc_S9 = 5.0e-1 * ( f(ip(1 + $I_L1930_20, 9), jn(1 + $I_L1930_20, 9)) + f(ip(1 + $I_L1930_20, 8), jn(1 + $I_L1930_20, 8)) ) + $t_S7 * ( f(ip(1 + $I_L1930_20, 9), jn(1 + $I_L1930_20, 9)) + -f(ip(1 + $I_L1930_20, 8), jn(1 + $I_L1930_20, 8)) )
 1942.                $fd_S8 = 5.0e-1 * ( f(ip(1 + $I_L1930_20, 10), jn(1 + $I_L1930_20, 10)) + f(ip(1 + $I_L1930_20, 7), jn(1 + $I_L1930_20, 7)) ) + $t_S7 * ( f(ip(1 + $I_L1930_20, 10), jn(1 + $I_L1930_20, 10)) + -f(ip(1 + $I_L1930_20, 7), jn(1 + $I_L1930_20, 7)) ) * 3.3333333333333331e-1
 1944.                f3(1 + $I_L1930_20) = $fc_S9 + ( 1.25e-1 + $t_S7 * $t_S7 * -5.0e-1 ) * ( $fc_S9 + -$fd_S8 )
 1945.                f4(1 + $I_L1930_20) = f(ip(1 + $I_L1930_20, 11), jn(1 + $I_L1930_20, 11)) + ulondp(1 + $I_L1930_20, 4) * ( f(ip(1 + $I_L1930_20, 12), jn(1 + $I_L1930_20, 12)) + -f(ip(1 + $I_L1930_20, 11), jn(1 + $I_L1930_20, 11)) )
 1947.                $I_L1930_20 = 1 + $I_L1930_20
 1930.                if ( $I_L1930_20 >= ibdim ) exit
 1930.             enddo
 1948.             $I_L1948_22 = 0
 1948. !dir$ ivdep
 1948.             do
 1949.                $j_S12 = jloc(1 + $I_L1948_22)
 1950.                $s_S11 = ulatdp(1 + $I_L1948_22)
 1951.                $t1_S15 = 1.0 + -$s_S11
 1952.                $t2_S13 = (cubcoef%base_addr)(1 + $I_L1948_22, $j_S12, 2, 0) + $s_S11
 1953.                $t3_S16 = (cubcoef%base_addr)(1 + $I_L1948_22, $j_S12, 1, 0) + ( 1.0 + -$s_S11 )
 1954.                $t4_S14 = $s_S11 * $t2_S13
 1955.                fint(1 + $I_L1948_22) = $t3_S16 * ( $t1_S15 * ( (cubcoef%base_addr)(1 + $I_L1948_22, $j_S12, 3, 0) * $s_S11 * f1(1 + $I_L1948_22) + (cubcoef%base_addr)(1 + $I_L1948_22, $j_S12, 4, 0) * $t2_S13 * f2(1 + $I_L1948_22) ) + (cubcoef%base_addr)(1 + $I_L1948_22, $j_S12, 5, 0) * $t4_S14 * f3(1 + $I_L1948_22) ) + (cubcoef%base_addr)(1 + $I_L1948_22, $j_S12, 6, 0) * $t4_S14 * $t1_S15 * f4(1 + $I_L1948_22)
 1959.                $I_L1948_22 = 1 + $I_L1948_22
 1948.                if ( $I_L1948_22 >= ibdim ) exit
 1948.             enddo
 1948.          endif
 1862.          _free( t$308 )
 1862.       endif
 1961.       return
 1961.       end
 1961.       
 1962.       
 1962.       subroutine interpcublin3d( fint, f, again, ulondp, ulatdp, usigdp, iloc, jloc, kloc, ibdim, signal, first, ip, jn, s1, s2, s3, s4, lim )
 1962.       t$63 = ibdim
 1962.       t$64 = kmax
 1992.       t$325 = _zla( 0, ibdim )
 1962.       t$326 = _zla( 0, ibdim )
 1992.       t$327 = _zla( 0, kmax )
 1962.       t$328 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1962.       t$65 = ibmax
 1962.       t$66 = jbmax_ext
 1991.       t$329 = _zla( 0, ibmax )
 1962.       t$330 = _zla( 0, ibmax )
 1962.       t$331 = _zla( 0, kmax ) * _zla( 0, ibmax )
 1991.       t$332 = _zla( 0, jbmax_ext )
 1962.       t$333 = _zla( 0, kmax ) * _zla( 0, ibmax ) * _zla( 0, jbmax_ext )
 1962.       t$334 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1962.       t$335 = _zla( 0, ibdim ) * _zla( 0, kmax ) * 4
 1962.       t$336 = _zla( 0, ibdim ) * _zla( 0, kmax ) * 12
 2002.       t$339 = 8 * _zla( 0, ibmax )
 2003.       t$340 = 8 * _zla( 0, ibmax )
 2003.       t$342 = 16 * _zla( 0, ibmax )
 2004.       t$343 = 16 * _zla( 0, ibmax )
 2004.       t$345 = 24 * _zla( 0, ibmax )
 2005.       t$346 = 24 * _zla( 0, ibmax )
 2005.       t$348 = 32 * _zla( 0, ibmax )
 2010.       t$349 = 32 * _zla( 0, ibmax )
 2010.       t$351 = 40 * _zla( 0, ibmax )
 2011.       t$352 = 40 * _zla( 0, ibmax )
 2011.       t$354 = 48 * _zla( 0, ibmax )
 2012.       t$355 = 48 * _zla( 0, ibmax )
 2012.       t$357 = 56 * _zla( 0, ibmax )
 2013.       t$358 = 56 * _zla( 0, ibmax )
 2013.       t$360 = 64 * _zla( 0, ibmax )
 2006.       t$361 = 64 * _zla( 0, ibmax )
 2006.       t$363 = 72 * _zla( 0, ibmax )
 2007.       t$364 = 72 * _zla( 0, ibmax )
 2007.       t$366 = 80 * _zla( 0, ibmax )
 2008.       t$367 = 80 * _zla( 0, ibmax )
 2008.       t$369 = 88 * _zla( 0, ibmax )
 2009.       t$370 = 88 * _zla( 0, ibmax )
 2009.       t$372 = 96 * _zla( 0, ibmax )
 1962.       t$337 = int( _alloc( 96 * _zla( 0, ibmax ) ), 8 )
 2002.       t$338 = t$337
 2003.       t$341 = t$337 + 8 * _zla( 0, ibmax )
 2004.       t$344 = t$337 + 16 * _zla( 0, ibmax )
 2005.       t$347 = t$337 + 24 * _zla( 0, ibmax )
 2010.       t$350 = t$337 + 32 * _zla( 0, ibmax )
 2011.       t$353 = t$337 + 40 * _zla( 0, ibmax )
 2012.       t$356 = t$337 + 48 * _zla( 0, ibmax )
 2013.       t$359 = t$337 + 56 * _zla( 0, ibmax )
 2006.       t$362 = t$337 + 64 * _zla( 0, ibmax )
 2007.       t$365 = t$337 + 72 * _zla( 0, ibmax )
 2008.       t$368 = t$337 + 80 * _zla( 0, ibmax )
 2009.       t$371 = t$337 + 88 * _zla( 0, ibmax )
 2023.       if ( first ) then
 2024.          if ( kmax > 0 ) then
 2025.             if ( ibdim > 0 ) then
 2024.                $I_L2024_106 = 0
 2024.                do
 2025.                   $I_L2025_78 = 0
 2025. !dir$ ivdep
 2025.                   do
 2026.                      jp = jmax + -jloc(1 + $I_L2025_78, 1 + $I_L2024_106) + 1
 2027.                      ip(1 + $I_L2025_78, 1 + $I_L2024_106, 1) = (ibperij%base_addr)(iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 1), 1 + jp, 0)
 2028.                      ip(1 + $I_L2025_78, 1 + $I_L2024_106, 2) = (ibperij%base_addr)(1 + iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 1), 1 + jp, 0)
 2029.                      ip(1 + $I_L2025_78, 1 + $I_L2024_106, 3) = (ibperij%base_addr)(-1 + iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 2), jp, 0)
 2030.                      ip(1 + $I_L2025_78, 1 + $I_L2024_106, 4) = (ibperij%base_addr)(iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 2), jp, 0)
 2031.                      ip(1 + $I_L2025_78, 1 + $I_L2024_106, 5) = (ibperij%base_addr)(1 + iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 2), jp, 0)
 2032.                      ip(1 + $I_L2025_78, 1 + $I_L2024_106, 6) = (ibperij%base_addr)(2 + iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 2), jp, 0)
 2033.                      ip(1 + $I_L2025_78, 1 + $I_L2024_106, 7) = (ibperij%base_addr)(-1 + iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 3), -1 + jp, 0)
 2034.                      ip(1 + $I_L2025_78, 1 + $I_L2024_106, 8) = (ibperij%base_addr)(iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 3), -1 + jp, 0)
 2035.                      ip(1 + $I_L2025_78, 1 + $I_L2024_106, 9) = (ibperij%base_addr)(1 + iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 3), -1 + jp, 0)
 2036.                      ip(1 + $I_L2025_78, 1 + $I_L2024_106, 10) = (ibperij%base_addr)(2 + iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 3), -1 + jp, 0)
 2037.                      ip(1 + $I_L2025_78, 1 + $I_L2024_106, 11) = (ibperij%base_addr)(iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 4), -2 + jp, 0)
 2038.                      ip(1 + $I_L2025_78, 1 + $I_L2024_106, 12) = (ibperij%base_addr)(1 + iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 4), -2 + jp, 0)
 2039.                      jn(1 + $I_L2025_78, 1 + $I_L2024_106, 1) = (jbperij%base_addr)(iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 1), 1 + jp, 0)
 2040.                      jn(1 + $I_L2025_78, 1 + $I_L2024_106, 2) = (jbperij%base_addr)(1 + iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 1), 1 + jp, 0)
 2041.                      jn(1 + $I_L2025_78, 1 + $I_L2024_106, 3) = (jbperij%base_addr)(-1 + iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 2), jp, 0)
 2042.                      jn(1 + $I_L2025_78, 1 + $I_L2024_106, 4) = (jbperij%base_addr)(iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 2), jp, 0)
 2043.                      jn(1 + $I_L2025_78, 1 + $I_L2024_106, 5) = (jbperij%base_addr)(1 + iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 2), jp, 0)
 2044.                      jn(1 + $I_L2025_78, 1 + $I_L2024_106, 6) = (jbperij%base_addr)(2 + iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 2), jp, 0)
 2045.                      jn(1 + $I_L2025_78, 1 + $I_L2024_106, 7) = (jbperij%base_addr)(-1 + iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 3), -1 + jp, 0)
 2046.                      jn(1 + $I_L2025_78, 1 + $I_L2024_106, 8) = (jbperij%base_addr)(iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 3), -1 + jp, 0)
 2047.                      jn(1 + $I_L2025_78, 1 + $I_L2024_106, 9) = (jbperij%base_addr)(1 + iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 3), -1 + jp, 0)
 2048.                      jn(1 + $I_L2025_78, 1 + $I_L2024_106, 10) = (jbperij%base_addr)(2 + iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 3), -1 + jp, 0)
 2049.                      jn(1 + $I_L2025_78, 1 + $I_L2024_106, 11) = (jbperij%base_addr)(iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 4), -2 + jp, 0)
 2050.                      jn(1 + $I_L2025_78, 1 + $I_L2024_106, 12) = (jbperij%base_addr)(1 + iloc(1 + $I_L2025_78, 1 + $I_L2024_106, 4), -2 + jp, 0)
 2051.                      $I_L2025_78 = 1 + $I_L2025_78
 2025.                      if ( $I_L2025_78 >= ibdim ) exit
 2025.                   enddo
 2052.                   $I_L2024_106 = 1 + $I_L2024_106
 2051.                   if ( $I_L2024_106 >= kmax ) exit
 2051.                enddo
 2051.             endif
 2051.          endif
 2053.          $Reduc_A35 = .false.
 2053.          $F_A39 = kmax
 2053.          $F_A40 = ibdim
 2053.          if ( and( -$F_A40, -$F_A39 ) < 0 ) then
 2053.             $I_L2053_126 = 0
 2053.             do
 2053.                $I_L2053_114 = 0
 2053.                do
 2053.                   $I_L2053_94 = 0
 2053. !dir$ ivdep
 2053.                   do
 2053.                      if ( ip(1 + $I_L2053_94, 1 + $I_L2053_114, 1 + $I_L2053_126) == 0 ) then
 2053.                         $Reduc_A35 = .true.
 2053.                         goto 10
 2053.                      endif
 2053.                      $I_L2053_94 = 1 + $I_L2053_94
 2053.                      if ( $I_L2053_94 >= $F_A40 ) exit
 2053.                   enddo
 2053.                   $I_L2053_114 = 1 + $I_L2053_114
 2053.                   if ( $I_L2053_114 >= $F_A39 ) exit
 2053.                enddo
 2053.                $I_L2053_126 = 1 + $I_L2053_126
 2053.                if ( $I_L2053_126 >= 12 ) exit
 2053.             enddo
 2053.          endif
 2053.    10    continue
 2053.          if ( $Reduc_A35 ) then
 2054.             _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' processor ', 0x800600000000L ), _iotype( myid, 0x2000200000000L ), _iotype( 'will have to stop ', 0x800600000000L ) ) )
 2055.             if ( ibdim > 0 ) then
 2055.                $I_L2055_124 = 0
 2055.                do
 2056.                   if ( kmax > 0 ) then
 2056.                      $I_L2056_112 = 0
 2056.                      do
 2057.                         $Reduc_A41 = .false.
 2057.                         $I_L2057_96 = 0
 2057. !dir$ ivdep
 2057.                         do
 2057.                            if ( ip(1 + $I_L2055_124, 1 + $I_L2056_112, 1 + $I_L2057_96) == 0 ) then
 2057.                               $Reduc_A41 = .true.
 2057.                               goto 20
 2057.                            endif
 2057.                            $I_L2057_96 = 1 + $I_L2057_96
 2057.                            if ( $I_L2057_96 >= 12 ) exit
 2057.                         enddo
 2057.    20                   continue
 2057.                         if ( $Reduc_A41 ) then
 2059.                            if ( ( 1 + $I_L2055_124 ) <= 0 .or. ( 1 + $I_L2055_124 ) > t$63 ) then
 2059.                                _substr(t$601,1,19) = 'SemiLagrangian.f90'
 2059.                                _substr(t$602,1,5) = 'JLOC'
 2059.                               t$603 = 1 + $I_L2055_124
 2059.                               call _bounds_error(  _substr(t$601,1,19), 2059,  _substr(t$602,1,5), 1, 1, t$63, t$603, t$600 )
 2059.                            endif
 2059.                            if ( ( 1 + $I_L2056_112 ) <= 0 .or. ( 1 + $I_L2056_112 ) > t$64 ) then
 2059.                                _substr(t$605,1,19) = 'SemiLagrangian.f90'
 2059.                                _substr(t$606,1,5) = 'JLOC'
 2059.                               t$607 = 1 + $I_L2056_112
 2059.                               call _bounds_error(  _substr(t$605,1,19), 2059,  _substr(t$606,1,5), 2, 1, t$64, t$607, t$604 )
 2059.                            endif
 2059.                            if ( ( 1 + $I_L2055_124 ) <= 0 .or. ( 1 + $I_L2055_124 ) > t$63 ) then
 2059.                                _substr(t$609,1,19) = 'SemiLagrangian.f90'
 2059.                                _substr(t$610,1,5) = 'ILOC'
 2059.                               t$611 = 1 + $I_L2055_124
 2059.                               call _bounds_error(  _substr(t$609,1,19), 2059,  _substr(t$610,1,5), 1, 1, t$63, t$611, t$608 )
 2059.                            endif
 2059.                            if ( ( 1 + $I_L2056_112 ) <= 0 .or. ( 1 + $I_L2056_112 ) > t$64 ) then
 2059.                                _substr(t$613,1,19) = 'SemiLagrangian.f90'
 2059.                                _substr(t$614,1,5) = 'ILOC'
 2059.                               t$615 = 1 + $I_L2056_112
 2059.                               call _bounds_error(  _substr(t$613,1,19), 2059,  _substr(t$614,1,5), 2, 1, t$64, t$615, t$612 )
 2059.                            endif
 2058.                            $_IOitem_P2(0) = ( 1 + $I_L2055_124 )
 2058.                            $_IOitem_P2(1) = ( 1 + $I_L2056_112 )
 2058.                            $_IOitem_P3(0) = jloc(1 + $I_L2055_124, 1 + $I_L2056_112)
 2058.                            $_IOitem_P3(1) = jp
 2058.                            $IOitem_O4 = iloc(1 + $I_L2055_124, 1 + $I_L2056_112, 2)
 2058.                            _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'i,k ', 0x800600000000L ), _iotype( $_IOitem_P2(:( 0, 1, 1 )), 0x2000200000000L ), _iotype( ' jloc, jp ', 0x800600000000L ), _iotype( $_IOitem_P3(:( 0, 1, 1 )), 0x2000200000000L ), _iotype( 'iloc', 0x800600000000L ), _iotype( $IOitem_O4, 0x2000200000000L ) ) )
 2060.                            if ( ( 1 + $I_L2055_124 ) <= 0 .or. ( 1 + $I_L2055_124 ) > t$63 ) then
 2060.                                _substr(t$617,1,19) = 'SemiLagrangian.f90'
 2060.                                _substr(t$618,1,5) = 'ILOC'
 2060.                               t$603 = 1 + $I_L2055_124
 2060.                               call _bounds_error(  _substr(t$617,1,19), 2060,  _substr(t$618,1,5), 1, 1, t$63, t$603, t$616 )
 2060.                            endif
 2060.                            if ( ( 1 + $I_L2056_112 ) <= 0 .or. ( 1 + $I_L2056_112 ) > t$64 ) then
 2060.                                _substr(t$620,1,19) = 'SemiLagrangian.f90'
 2060.                                _substr(t$621,1,5) = 'ILOC'
 2060.                               t$607 = 1 + $I_L2056_112
 2060.                               call _bounds_error(  _substr(t$620,1,19), 2060,  _substr(t$621,1,5), 2, 1, t$64, t$607, t$619 )
 2060.                            endif
 2060.                            if ( ( 1 + $I_L2055_124 ) <= 0 .or. ( 1 + $I_L2055_124 ) > t$63 ) then
 2060.                                _substr(t$623,1,19) = 'SemiLagrangian.f90'
 2060.                                _substr(t$624,1,5) = 'ILOC'
 2060.                               t$611 = 1 + $I_L2055_124
 2060.                               call _bounds_error(  _substr(t$623,1,19), 2060,  _substr(t$624,1,5), 1, 1, t$63, t$611, t$622 )
 2060.                            endif
 2060.                            if ( ( 1 + $I_L2056_112 ) <= 0 .or. ( 1 + $I_L2056_112 ) > t$64 ) then
 2060.                                _substr(t$626,1,19) = 'SemiLagrangian.f90'
 2060.                                _substr(t$627,1,5) = 'ILOC'
 2060.                               t$615 = 1 + $I_L2056_112
 2060.                               call _bounds_error(  _substr(t$626,1,19), 2060,  _substr(t$627,1,5), 2, 1, t$64, t$615, t$625 )
 2060.                            endif
 2061.                            if ( ( 1 + $I_L2055_124 ) <= 0 .or. ( 1 + $I_L2055_124 ) > t$63 ) then
 2061.                                _substr(t$629,1,19) = 'SemiLagrangian.f90'
 2061.                                _substr(t$630,1,5) = 'ILOC'
 2061.                               t$631 = 1 + $I_L2055_124
 2061.                               call _bounds_error(  _substr(t$629,1,19), 2061,  _substr(t$630,1,5), 1, 1, t$63, t$631, t$628 )
 2061.                            endif
 2061.                            if ( ( 1 + $I_L2056_112 ) <= 0 .or. ( 1 + $I_L2056_112 ) > t$64 ) then
 2061.                                _substr(t$633,1,19) = 'SemiLagrangian.f90'
 2061.                                _substr(t$634,1,5) = 'ILOC'
 2061.                               t$635 = 1 + $I_L2056_112
 2061.                               call _bounds_error(  _substr(t$633,1,19), 2061,  _substr(t$634,1,5), 2, 1, t$64, t$635, t$632 )
 2061.                            endif
 2061.                            if ( ( 1 + $I_L2055_124 ) <= 0 .or. ( 1 + $I_L2055_124 ) > t$63 ) then
 2061.                                _substr(t$637,1,19) = 'SemiLagrangian.f90'
 2061.                                _substr(t$638,1,5) = 'ILOC'
 2061.                               t$639 = 1 + $I_L2055_124
 2061.                               call _bounds_error(  _substr(t$637,1,19), 2061,  _substr(t$638,1,5), 1, 1, t$63, t$639, t$636 )
 2061.                            endif
 2061.                            if ( ( 1 + $I_L2056_112 ) <= 0 .or. ( 1 + $I_L2056_112 ) > t$64 ) then
 2061.                                _substr(t$641,1,19) = 'SemiLagrangian.f90'
 2061.                                _substr(t$642,1,5) = 'ILOC'
 2061.                               t$643 = 1 + $I_L2056_112
 2061.                               call _bounds_error(  _substr(t$641,1,19), 2061,  _substr(t$642,1,5), 2, 1, t$64, t$643, t$640 )
 2061.                            endif
 2060.                            $_IOitem_P4(0) = iloc(1 + $I_L2055_124, 1 + $I_L2056_112, 1)
 2060.                            $_IOitem_P4(1) = $IOitem_O4
 2060.                            $_IOitem_P4(2) = iloc(1 + $I_L2055_124, 1 + $I_L2056_112, 3)
 2060.                            $_IOitem_P4(3) = iloc(1 + $I_L2055_124, 1 + $I_L2056_112, 4)
 2060.                            _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'ilocs ', 0x800600000000L ), _iotype( $_IOitem_P4(:( 0, 3, 1 )), 0x2000200000000L ) ) )
 2060.                            goto 30
 2060.                         endif
 2064.                         $I_L2056_112 = 1 + $I_L2056_112
 2063.                         if ( $I_L2056_112 >= kmax ) exit
 2063.                      enddo
 2063.                   endif
 2063.    30             continue
 2065.                   $I_L2055_124 = 1 + $I_L2055_124
 2064.                   if ( $I_L2055_124 >= ibdim ) exit
 2064.                enddo
 2064.             endif
 2066.             $Unit_temp_O2 = nfprt
 2066.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, t$68,  _substr(t$67,1,23), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Interpcublin3d)**', 0x800600000000L ) ) )
 2067.             $Unit_temp_O3 = nfprt
 2067.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, t$70,  _substr(t$69,1,47), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Interpcublin3d)**', 0x800600000000L ) ) )
 2068.              _substr(t$644,1,20) = '**(Interpcublin3d)**'
 2068.             call _stop(  _substr(t$644,1,20) )
 2068.          else
 2068.             goto 40
 2068.          endif
 2068.       else
 2068.    40    continue
 2071.          if ( again == 0 ) then
 2072.             $F_A43 = kmax
 2072.             $F_A44 = ibdim
 2072.             if ( and( -$F_A44, -$F_A43 ) < 0 ) then
 2072.                $I_L2072_116 = 0
 2072.                do
 2072.                   $I_L2072_98 = 0
 2072. !dir$ ivdep
 2072.                   do
 2072.                      s1(1 + $I_L2072_98, 1 + $I_L2072_116) = 1.0
 2072.                      $I_L2072_98 = 1 + $I_L2072_98
 2072.                      if ( $I_L2072_98 >= $F_A44 ) exit
 2072.                   enddo
 2072.                   $I_L2072_116 = 1 + $I_L2072_116
 2072.                   if ( $I_L2072_116 >= $F_A43 ) exit
 2072.                enddo
 2072.             endif
 2073.             $F_A45 = kmax
 2073.             $F_A46 = ibdim
 2073.             if ( and( -$F_A46, -$F_A45 ) < 0 ) then
 2073.                $I_L2073_118 = 0
 2073.                do
 2073.                   $I_L2073_100 = 0
 2073. !dir$ ivdep
 2073.                   do
 2073.                      s2(1 + $I_L2073_100, 1 + $I_L2073_118) = 1.0
 2073.                      $I_L2073_100 = 1 + $I_L2073_100
 2073.                      if ( $I_L2073_100 >= $F_A46 ) exit
 2073.                   enddo
 2073.                   $I_L2073_118 = 1 + $I_L2073_118
 2073.                   if ( $I_L2073_118 >= $F_A45 ) exit
 2073.                enddo
 2073.             endif
 2074.             $F_A47 = kmax
 2074.             $F_A48 = ibdim
 2074.             if ( and( -$F_A48, -$F_A47 ) < 0 ) then
 2074.                $I_L2074_120 = 0
 2074.                do
 2074.                   $I_L2074_102 = 0
 2074. !dir$ ivdep
 2074.                   do
 2074.                      s3(1 + $I_L2074_102, 1 + $I_L2074_120) = 1.0
 2074.                      $I_L2074_102 = 1 + $I_L2074_102
 2074.                      if ( $I_L2074_102 >= $F_A48 ) exit
 2074.                   enddo
 2074.                   $I_L2074_120 = 1 + $I_L2074_120
 2074.                   if ( $I_L2074_120 >= $F_A47 ) exit
 2074.                enddo
 2074.             endif
 2075.             $F_A49 = kmax
 2075.             $F_A50 = ibdim
 2075.             if ( and( -$F_A50, -$F_A49 ) < 0 ) then
 2075.                $I_L2075_122 = 0
 2075.                do
 2075.                   $I_L2075_104 = 0
 2075. !dir$ ivdep
 2075.                   do
 2075.                      s4(1 + $I_L2075_104, 1 + $I_L2075_122) = 1.0
 2075.                      $I_L2075_104 = 1 + $I_L2075_104
 2075.                      if ( $I_L2075_104 >= $F_A50 ) exit
 2075.                   enddo
 2075.                   $I_L2075_122 = 1 + $I_L2075_122
 2075.                   if ( $I_L2075_122 >= $F_A49 ) exit
 2075.                enddo
 2075.             endif
 2076.             if ( kmax > 0 ) then
 2077.                if ( ibdim > 0 ) then
 2076.                   $I_L2076_108 = 0
 2076.                   do
 2077.                      $I_L2077_80 = 0
 2077. !dir$ ivdep
 2077.                      do
 2078.                         $jp_S6 = jmax + -jloc(1 + $I_L2077_80, 1 + $I_L2076_108) + 1
 2079.                         if ( jmax + -$jp_S6 == -1 ) then
 2080.                            s1(1 + $I_L2077_80, 1 + $I_L2076_108) = signal
 2081.                            s2(1 + $I_L2077_80, 1 + $I_L2076_108) = signal
 2081.                         endif
 2083.                         if ( jmax + -$jp_S6 == 0 ) then
 2084.                            s1(1 + $I_L2077_80, 1 + $I_L2076_108) = signal
 2084.                         endif
 2086.                         if ( $jp_S6 == 1 ) then
 2087.                            s3(1 + $I_L2077_80, 1 + $I_L2076_108) = signal
 2088.                            s4(1 + $I_L2077_80, 1 + $I_L2076_108) = signal
 2088.                         endif
 2090.                         if ( $jp_S6 == 2 ) then
 2091.                            s4(1 + $I_L2077_80, 1 + $I_L2076_108) = signal
 2091.                         endif
 2093.                         $I_L2077_80 = 1 + $I_L2077_80
 2092.                         if ( $I_L2077_80 >= ibdim ) exit
 2092.                      enddo
 2094.                      $I_L2076_108 = 1 + $I_L2076_108
 2093.                      if ( $I_L2076_108 >= kmax ) exit
 2093.                   enddo
 2093.                endif
 2093.             endif
 2093.          endif
 2096.          if ( kmax > 0 ) then
 2097.             if ( ibdim > 0 ) then
 2096.                $I_L2096_110 = 0
 2096.                do
 2097.                   $I_L2097_82 = 0
 2097. !dir$ ivdep
 2097.                   do
 2098.                      $k_S9 = kloc(1 + $I_L2097_82, 1 + $I_L2096_110)
 2100.                      f1(1 + $I_L2097_82) = s1(1 + $I_L2097_82, 1 + $I_L2096_110) * ( f(ip(1 + $I_L2097_82, 1 + $I_L2096_110, 1), $k_S9, jn(1 + $I_L2097_82, 1 + $I_L2096_110, 1)) + ulondp(1 + $I_L2097_82, 1 + $I_L2096_110, 1) * ( f(ip(1 + $I_L2097_82, 1 + $I_L2096_110, 2), $k_S9, jn(1 + $I_L2097_82, 1 + $I_L2096_110, 2)) + -f(ip(1 + $I_L2097_82, 1 + $I_L2096_110, 1), $k_S9, jn(1 + $I_L2097_82, 1 + $I_L2096_110, 1)) ) )
 2102.                      g1(1 + $I_L2097_82) = s1(1 + $I_L2097_82, 1 + $I_L2096_110) * ( f(ip(1 + $I_L2097_82, 1 + $I_L2096_110, 1), 1 + $k_S9, jn(1 + $I_L2097_82, 1 + $I_L2096_110, 1)) + ulondp(1 + $I_L2097_82, 1 + $I_L2096_110, 1) * ( f(ip(1 + $I_L2097_82, 1 + $I_L2096_110, 2), 1 + $k_S9, jn(1 + $I_L2097_82, 1 + $I_L2096_110, 2)) + -f(ip(1 + $I_L2097_82, 1 + $I_L2096_110, 1), 1 + $k_S9, jn(1 + $I_L2097_82, 1 + $I_L2096_110, 1)) ) )
 2104.                      f4(1 + $I_L2097_82) = s4(1 + $I_L2097_82, 1 + $I_L2096_110) * ( f(ip(1 + $I_L2097_82, 1 + $I_L2096_110, 11), $k_S9, jn(1 + $I_L2097_82, 1 + $I_L2096_110, 11)) + ulondp(1 + $I_L2097_82, 1 + $I_L2096_110, 4) * ( f(ip(1 + $I_L2097_82, 1 + $I_L2096_110, 12), $k_S9, jn(1 + $I_L2097_82, 1 + $I_L2096_110, 12)) + -f(ip(1 + $I_L2097_82, 1 + $I_L2096_110, 11), $k_S9, jn(1 + $I_L2097_82, 1 + $I_L2096_110, 11)) ) )
 2106.                      g4(1 + $I_L2097_82) = s4(1 + $I_L2097_82, 1 + $I_L2096_110) * ( f(ip(1 + $I_L2097_82, 1 + $I_L2096_110, 11), 1 + $k_S9, jn(1 + $I_L2097_82, 1 + $I_L2096_110, 11)) + ulondp(1 + $I_L2097_82, 1 + $I_L2096_110, 4) * ( f(ip(1 + $I_L2097_82, 1 + $I_L2096_110, 12), 1 + $k_S9, jn(1 + $I_L2097_82, 1 + $I_L2096_110, 12)) + -f(ip(1 + $I_L2097_82, 1 + $I_L2096_110, 11), 1 + $k_S9, jn(1 + $I_L2097_82, 1 + $I_L2096_110, 11)) ) )
 2108.                      $I_L2097_82 = 1 + $I_L2097_82
 2097.                      if ( $I_L2097_82 >= ibdim ) exit
 2097.                   enddo
 2109.                   $I_L2109_84 = 0
 2109. !dir$ ivdep
 2109.                   do
 2110.                      $k_S11 = kloc(1 + $I_L2109_84, 1 + $I_L2096_110)
 2112.                      $s_S12 = -5.0e-1 + ulondp(1 + $I_L2109_84, 1 + $I_L2096_110, 2)
 2114.                      $fa_S14 = 5.0e-1 * ( f(ip(1 + $I_L2109_84, 1 + $I_L2096_110, 5), $k_S11, jn(1 + $I_L2109_84, 1 + $I_L2096_110, 5)) + f(ip(1 + $I_L2109_84, 1 + $I_L2096_110, 4), $k_S11, jn(1 + $I_L2109_84, 1 + $I_L2096_110, 4)) ) + $s_S12 * ( f(ip(1 + $I_L2109_84, 1 + $I_L2096_110, 5), $k_S11, jn(1 + $I_L2109_84, 1 + $I_L2096_110, 5)) + -f(ip(1 + $I_L2109_84, 1 + $I_L2096_110, 4), $k_S11, jn(1 + $I_L2109_84, 1 + $I_L2096_110, 4)) )
 2116.                      $fb_S13 = 5.0e-1 * ( f(ip(1 + $I_L2109_84, 1 + $I_L2096_110, 6), $k_S11, jn(1 + $I_L2109_84, 1 + $I_L2096_110, 6)) + f(ip(1 + $I_L2109_84, 1 + $I_L2096_110, 3), $k_S11, jn(1 + $I_L2109_84, 1 + $I_L2096_110, 3)) ) + $s_S12 * ( f(ip(1 + $I_L2109_84, 1 + $I_L2096_110, 6), $k_S11, jn(1 + $I_L2109_84, 1 + $I_L2096_110, 6)) + -f(ip(1 + $I_L2109_84, 1 + $I_L2096_110, 3), $k_S11, jn(1 + $I_L2109_84, 1 + $I_L2096_110, 3)) ) * 3.3333333333333331e-1
 2118.                      f2(1 + $I_L2109_84) = s2(1 + $I_L2109_84, 1 + $I_L2096_110) * ( $fa_S14 + ( 1.25e-1 + $s_S12 * $s_S12 * -5.0e-1 ) * ( $fa_S14 + -$fb_S13 ) )
 2119.                      $fa1_S16 = 5.0e-1 * ( f(ip(1 + $I_L2109_84, 1 + $I_L2096_110, 5), 1 + $k_S11, jn(1 + $I_L2109_84, 1 + $I_L2096_110, 5)) + f(ip(1 + $I_L2109_84, 1 + $I_L2096_110, 4), 1 + $k_S11, jn(1 + $I_L2109_84, 1 + $I_L2096_110, 4)) ) + $s_S12 * ( f(ip(1 + $I_L2109_84, 1 + $I_L2096_110, 5), 1 + $k_S11, jn(1 + $I_L2109_84, 1 + $I_L2096_110, 5)) + -f(ip(1 + $I_L2109_84, 1 + $I_L2096_110, 4), 1 + $k_S11, jn(1 + $I_L2109_84, 1 + $I_L2096_110, 4)) )
 2121.                      $fb1_S15 = 5.0e-1 * ( f(ip(1 + $I_L2109_84, 1 + $I_L2096_110, 6), 1 + $k_S11, jn(1 + $I_L2109_84, 1 + $I_L2096_110, 6)) + f(ip(1 + $I_L2109_84, 1 + $I_L2096_110, 3), 1 + $k_S11, jn(1 + $I_L2109_84, 1 + $I_L2096_110, 3)) ) + $s_S12 * ( f(ip(1 + $I_L2109_84, 1 + $I_L2096_110, 6), 1 + $k_S11, jn(1 + $I_L2109_84, 1 + $I_L2096_110, 6)) + -f(ip(1 + $I_L2109_84, 1 + $I_L2096_110, 3), 1 + $k_S11, jn(1 + $I_L2109_84, 1 + $I_L2096_110, 3)) ) * 3.3333333333333331e-1
 2123.                      g2(1 + $I_L2109_84) = s2(1 + $I_L2109_84, 1 + $I_L2096_110) * ( $fa1_S16 + ( 1.25e-1 + $s_S12 * $s_S12 * -5.0e-1 ) * ( $fa1_S16 + -$fb1_S15 ) )
 2124.                      $I_L2109_84 = 1 + $I_L2109_84
 2109.                      if ( $I_L2109_84 >= ibdim ) exit
 2109.                   enddo
 2125.                   $I_L2125_86 = 0
 2125. !dir$ ivdep
 2125.                   do
 2126.                      $k_S18 = kloc(1 + $I_L2125_86, 1 + $I_L2096_110)
 2128.                      $t_S19 = -5.0e-1 + ulondp(1 + $I_L2125_86, 1 + $I_L2096_110, 3)
 2130.                      $fc_S21 = 5.0e-1 * ( f(ip(1 + $I_L2125_86, 1 + $I_L2096_110, 9), $k_S18, jn(1 + $I_L2125_86, 1 + $I_L2096_110, 9)) + f(ip(1 + $I_L2125_86, 1 + $I_L2096_110, 8), $k_S18, jn(1 + $I_L2125_86, 1 + $I_L2096_110, 8)) ) + $t_S19 * ( f(ip(1 + $I_L2125_86, 1 + $I_L2096_110, 9), $k_S18, jn(1 + $I_L2125_86, 1 + $I_L2096_110, 9)) + -f(ip(1 + $I_L2125_86, 1 + $I_L2096_110, 8), $k_S18, jn(1 + $I_L2125_86, 1 + $I_L2096_110, 8)) )
 2132.                      $fd_S20 = 5.0e-1 * ( f(ip(1 + $I_L2125_86, 1 + $I_L2096_110, 10), $k_S18, jn(1 + $I_L2125_86, 1 + $I_L2096_110, 10)) + f(ip(1 + $I_L2125_86, 1 + $I_L2096_110, 7), $k_S18, jn(1 + $I_L2125_86, 1 + $I_L2096_110, 7)) ) + $t_S19 * ( f(ip(1 + $I_L2125_86, 1 + $I_L2096_110, 10), $k_S18, jn(1 + $I_L2125_86, 1 + $I_L2096_110, 10)) + -f(ip(1 + $I_L2125_86, 1 + $I_L2096_110, 7), $k_S18, jn(1 + $I_L2125_86, 1 + $I_L2096_110, 7)) ) * 3.3333333333333331e-1
 2134.                      f3(1 + $I_L2125_86) = s3(1 + $I_L2125_86, 1 + $I_L2096_110) * ( $fc_S21 + ( 1.25e-1 + $t_S19 * $t_S19 * -5.0e-1 ) * ( $fc_S21 + -$fd_S20 ) )
 2135.                      $fc1_S23 = 5.0e-1 * ( f(ip(1 + $I_L2125_86, 1 + $I_L2096_110, 9), 1 + $k_S18, jn(1 + $I_L2125_86, 1 + $I_L2096_110, 9)) + f(ip(1 + $I_L2125_86, 1 + $I_L2096_110, 8), 1 + $k_S18, jn(1 + $I_L2125_86, 1 + $I_L2096_110, 8)) ) + $t_S19 * ( f(ip(1 + $I_L2125_86, 1 + $I_L2096_110, 9), 1 + $k_S18, jn(1 + $I_L2125_86, 1 + $I_L2096_110, 9)) + -f(ip(1 + $I_L2125_86, 1 + $I_L2096_110, 8), 1 + $k_S18, jn(1 + $I_L2125_86, 1 + $I_L2096_110, 8)) )
 2137.                      $fd1_S22 = 5.0e-1 * ( f(ip(1 + $I_L2125_86, 1 + $I_L2096_110, 10), 1 + $k_S18, jn(1 + $I_L2125_86, 1 + $I_L2096_110, 10)) + f(ip(1 + $I_L2125_86, 1 + $I_L2096_110, 7), 1 + $k_S18, jn(1 + $I_L2125_86, 1 + $I_L2096_110, 7)) ) + $t_S19 * ( f(ip(1 + $I_L2125_86, 1 + $I_L2096_110, 10), 1 + $k_S18, jn(1 + $I_L2125_86, 1 + $I_L2096_110, 10)) + -f(ip(1 + $I_L2125_86, 1 + $I_L2096_110, 7), 1 + $k_S18, jn(1 + $I_L2125_86, 1 + $I_L2096_110, 7)) ) * 3.3333333333333331e-1
 2139.                      g3(1 + $I_L2125_86) = s3(1 + $I_L2125_86, 1 + $I_L2096_110) * ( $fc1_S23 + ( 1.25e-1 + $t_S19 * $t_S19 * -5.0e-1 ) * ( $fc1_S23 + -$fd1_S22 ) )
 2140.                      $I_L2125_86 = 1 + $I_L2125_86
 2125.                      if ( $I_L2125_86 >= ibdim ) exit
 2125.                   enddo
 2141.                   $I_L2141_88 = 0
 2141. !dir$ ivdep
 2141.                   do
 2142.                      $j_S26 = jloc(1 + $I_L2141_88, 1 + $I_L2096_110)
 2143.                      $t0_S25 = ulatdp(1 + $I_L2141_88, 1 + $I_L2096_110)
 2144.                      $t1_S29 = 1.0 + -$t0_S25
 2145.                      $t2_S27 = (cubcoef%base_addr)(1 + $I_L2141_88, $j_S26, 2, 0) + $t0_S25
 2146.                      $t3_S30 = (cubcoef%base_addr)(1 + $I_L2141_88, $j_S26, 1, 0) + ( 1.0 + -$t0_S25 )
 2147.                      $t4_S28 = $t0_S25 * $t2_S27
 2148.                      fint2(1 + $I_L2141_88) = $t3_S30 * ( $t1_S29 * ( (cubcoef%base_addr)(1 + $I_L2141_88, $j_S26, 3, 0) * $t0_S25 * f1(1 + $I_L2141_88) + (cubcoef%base_addr)(1 + $I_L2141_88, $j_S26, 4, 0) * $t2_S27 * f2(1 + $I_L2141_88) ) + (cubcoef%base_addr)(1 + $I_L2141_88, $j_S26, 5, 0) * $t4_S28 * f3(1 + $I_L2141_88) ) + (cubcoef%base_addr)(1 + $I_L2141_88, $j_S26, 6, 0) * $t4_S28 * $t1_S29 * f4(1 + $I_L2141_88)
 2152.                      fint3(1 + $I_L2141_88) = $t3_S30 * ( $t1_S29 * ( (cubcoef%base_addr)(1 + $I_L2141_88, $j_S26, 3, 0) * $t0_S25 * g1(1 + $I_L2141_88) + (cubcoef%base_addr)(1 + $I_L2141_88, $j_S26, 4, 0) * $t2_S27 * g2(1 + $I_L2141_88) ) + (cubcoef%base_addr)(1 + $I_L2141_88, $j_S26, 5, 0) * $t4_S28 * g3(1 + $I_L2141_88) ) + (cubcoef%base_addr)(1 + $I_L2141_88, $j_S26, 6, 0) * $t4_S28 * $t1_S29 * g4(1 + $I_L2141_88)
 2156.                      $I_L2141_88 = 1 + $I_L2141_88
 2141.                      if ( $I_L2141_88 >= ibdim ) exit
 2141.                   enddo
 2157.                   $I_L2157_90 = 0
 2157. !dir$ ivdep
 2157.                   do
 2158.                      if ( kloc(1 + $I_L2157_90, 1 + $I_L2096_110) == 1 ) then
 2157.                         goto 50
 2158.                      else if ( kmax + -kloc(1 + $I_L2157_90, 1 + $I_L2096_110) /= 1 ) then
 2159.                         $k_S32 = -1 + kloc(1 + $I_L2157_90, 1 + $I_L2096_110)
 2160.                         $k1_S33 = 2 + kloc(1 + $I_L2157_90, 1 + $I_L2096_110)
 2161.                         $fb_S34 = s2(1 + $I_L2157_90, 1 + $I_L2096_110) * ( f(ip(1 + $I_L2157_90, 1 + $I_L2096_110, 4), $k_S32, jn(1 + $I_L2157_90, 1 + $I_L2096_110, 4)) + ulondp(1 + $I_L2157_90, 1 + $I_L2096_110, 2) * ( f(ip(1 + $I_L2157_90, 1 + $I_L2096_110, 5), $k_S32, jn(1 + $I_L2157_90, 1 + $I_L2096_110, 5)) + -f(ip(1 + $I_L2157_90, 1 + $I_L2096_110, 4), $k_S32, jn(1 + $I_L2157_90, 1 + $I_L2096_110, 4)) ) )
 2163.                         $fc_S35 = s3(1 + $I_L2157_90, 1 + $I_L2096_110) * ( f(ip(1 + $I_L2157_90, 1 + $I_L2096_110, 8), $k_S32, jn(1 + $I_L2157_90, 1 + $I_L2096_110, 8)) + ulondp(1 + $I_L2157_90, 1 + $I_L2096_110, 3) * ( f(ip(1 + $I_L2157_90, 1 + $I_L2096_110, 9), $k_S32, jn(1 + $I_L2157_90, 1 + $I_L2096_110, 9)) + -f(ip(1 + $I_L2157_90, 1 + $I_L2096_110, 8), $k_S32, jn(1 + $I_L2157_90, 1 + $I_L2096_110, 8)) ) )
 2165.                         $fa_S36 = s2(1 + $I_L2157_90, 1 + $I_L2096_110) * ( f(ip(1 + $I_L2157_90, 1 + $I_L2096_110, 4), $k1_S33, jn(1 + $I_L2157_90, 1 + $I_L2096_110, 4)) + ulondp(1 + $I_L2157_90, 1 + $I_L2096_110, 2) * ( f(ip(1 + $I_L2157_90, 1 + $I_L2096_110, 5), $k1_S33, jn(1 + $I_L2157_90, 1 + $I_L2096_110, 5)) + -f(ip(1 + $I_L2157_90, 1 + $I_L2096_110, 4), $k1_S33, jn(1 + $I_L2157_90, 1 + $I_L2096_110, 4)) ) )
 2167.                         $fd_S37 = s3(1 + $I_L2157_90, 1 + $I_L2096_110) * ( f(ip(1 + $I_L2157_90, 1 + $I_L2096_110, 8), $k1_S33, jn(1 + $I_L2157_90, 1 + $I_L2096_110, 8)) + ulondp(1 + $I_L2157_90, 1 + $I_L2096_110, 3) * ( f(ip(1 + $I_L2157_90, 1 + $I_L2096_110, 9), $k1_S33, jn(1 + $I_L2157_90, 1 + $I_L2096_110, 9)) + -f(ip(1 + $I_L2157_90, 1 + $I_L2096_110, 8), $k1_S33, jn(1 + $I_L2157_90, 1 + $I_L2096_110, 8)) ) )
 2169.                         $fint1_WR0_R0 = $fb_S34 + ulatdp(1 + $I_L2157_90, 1 + $I_L2096_110) * ( $fc_S35 + -$fb_S34 )
 2170.                         $fint4_WR0_R1 = $fa_S36 + ulatdp(1 + $I_L2157_90, 1 + $I_L2096_110) * ( $fd_S37 + -$fa_S36 )
 2171.                         $s_S38 = usigdp(1 + $I_L2157_90, 1 + $I_L2096_110)
 2172.                         $t1_S41 = 1.0 + -$s_S38
 2173.                         $t2_S39 = (cubcoefv%base_addr)(1 + $I_L2157_90, kloc(1 + $I_L2157_90, 1 + $I_L2096_110), 2, 0) + $s_S38
 2174.                         $t3_S42 = (cubcoefv%base_addr)(1 + $I_L2157_90, kloc(1 + $I_L2157_90, 1 + $I_L2096_110), 1, 0) + ( 1.0 + -$s_S38 )
 2175.                         $t4_S40 = $s_S38 * $t2_S39
 2176.                         fint(1 + $I_L2157_90, 1 + $I_L2096_110) = $t3_S42 * ( $t1_S41 * ( (cubcoefv%base_addr)(1 + $I_L2157_90, kloc(1 + $I_L2157_90, 1 + $I_L2096_110), 3, 0) * $s_S38 * $fint1_WR0_R0 + (cubcoefv%base_addr)(1 + $I_L2157_90, kloc(1 + $I_L2157_90, 1 + $I_L2096_110), 4, 0) * $t2_S39 * fint2(1 + $I_L2157_90) ) + (cubcoefv%base_addr)(1 + $I_L2157_90, kloc(1 + $I_L2157_90, 1 + $I_L2096_110), 5, 0) * $t4_S40 * fint3(1 + $I_L2157_90) ) + (cubcoefv%base_addr)(1 + $I_L2157_90, kloc(1 + $I_L2157_90, 1 + $I_L2096_110), 6, 0) * $t4_S40 * $t1_S41 * $fint4_WR0_R1
 2176.                      else
 2176.    50                   continue
 2181.                         fint(1 + $I_L2157_90, 1 + $I_L2096_110) = fint2(1 + $I_L2157_90) + usigdp(1 + $I_L2157_90, 1 + $I_L2096_110) * ( fint3(1 + $I_L2157_90) + -fint2(1 + $I_L2157_90) )
 2181.                      endif
 2183.                      $I_L2157_90 = 1 + $I_L2157_90
 2182.                      if ( $I_L2157_90 >= ibdim ) exit
 2182.                   enddo
 2184.                   if ( lim ) then
 2185.                      $I_L2185_92 = 0
 2185. !dir$ ivdep
 2185.                      do
 2186.                         $k_S44 = kloc(1 + $I_L2185_92, 1 + $I_L2096_110)
 2188.                         $sma_S46 = max( f(ip(1 + $I_L2185_92, 1 + $I_L2096_110, 8), $k_S44, jn(1 + $I_L2185_92, 1 + $I_L2096_110, 8)), max( f(ip(1 + $I_L2185_92, 1 + $I_L2096_110, 9), $k_S44, jn(1 + $I_L2185_92, 1 + $I_L2096_110, 9)), max( f(ip(1 + $I_L2185_92, 1 + $I_L2096_110, 4), $k_S44, jn(1 + $I_L2185_92, 1 + $I_L2096_110, 4)), f(ip(1 + $I_L2185_92, 1 + $I_L2096_110, 5), $k_S44, jn(1 + $I_L2185_92, 1 + $I_L2096_110, 5)) ) ) )
 2190.                         $sma1_S45 = max( f(ip(1 + $I_L2185_92, 1 + $I_L2096_110, 8), 1 + $k_S44, jn(1 + $I_L2185_92, 1 + $I_L2096_110, 8)), max( f(ip(1 + $I_L2185_92, 1 + $I_L2096_110, 9), 1 + $k_S44, jn(1 + $I_L2185_92, 1 + $I_L2096_110, 9)), max( f(ip(1 + $I_L2185_92, 1 + $I_L2096_110, 4), 1 + $k_S44, jn(1 + $I_L2185_92, 1 + $I_L2096_110, 4)), f(ip(1 + $I_L2185_92, 1 + $I_L2096_110, 5), 1 + $k_S44, jn(1 + $I_L2185_92, 1 + $I_L2096_110, 5)) ) ) )
 2192.                         $smi_S48 = min( f(ip(1 + $I_L2185_92, 1 + $I_L2096_110, 8), $k_S44, jn(1 + $I_L2185_92, 1 + $I_L2096_110, 8)), min( f(ip(1 + $I_L2185_92, 1 + $I_L2096_110, 9), $k_S44, jn(1 + $I_L2185_92, 1 + $I_L2096_110, 9)), min( f(ip(1 + $I_L2185_92, 1 + $I_L2096_110, 4), $k_S44, jn(1 + $I_L2185_92, 1 + $I_L2096_110, 4)), f(ip(1 + $I_L2185_92, 1 + $I_L2096_110, 5), $k_S44, jn(1 + $I_L2185_92, 1 + $I_L2096_110, 5)) ) ) )
 2194.                         $smi1_S47 = min( f(ip(1 + $I_L2185_92, 1 + $I_L2096_110, 8), 1 + $k_S44, jn(1 + $I_L2185_92, 1 + $I_L2096_110, 8)), min( f(ip(1 + $I_L2185_92, 1 + $I_L2096_110, 9), 1 + $k_S44, jn(1 + $I_L2185_92, 1 + $I_L2096_110, 9)), min( f(ip(1 + $I_L2185_92, 1 + $I_L2096_110, 4), 1 + $k_S44, jn(1 + $I_L2185_92, 1 + $I_L2096_110, 4)), f(ip(1 + $I_L2185_92, 1 + $I_L2096_110, 5), 1 + $k_S44, jn(1 + $I_L2185_92, 1 + $I_L2096_110, 5)) ) ) )
 2197.                         fint(1 + $I_L2185_92, 1 + $I_L2096_110) = max( min( $smi1_S47, $smi_S48 ), min( fint(1 + $I_L2185_92, 1 + $I_L2096_110), max( $sma1_S45, $sma_S46 ) ) )
 2198.                         $I_L2185_92 = 1 + $I_L2185_92
 2185.                         if ( $I_L2185_92 >= ibdim ) exit
 2185.                      enddo
 2185.                   endif
 2200.                   $I_L2096_110 = 1 + $I_L2096_110
 2199.                   if ( $I_L2096_110 >= kmax ) exit
 2199.                enddo
 2199.             endif
 2199.          endif
 1962.          _free( t$337 )
 1962.       endif
 2202.       return
 2202.       end
 2202.       
 2204.       
 2204.       subroutine vectorialtend( tendu, tendv )
 2204.       t$71 = ibmax
 2204.       t$72 = kmax
 2204.       t$73 = jbmax
 2206.       t$373 = _zla( 0, ibmax )
 2204.       t$374 = _zla( 0, ibmax )
 2206.       t$375 = _zla( 0, kmax )
 2204.       t$376 = _zla( 0, ibmax ) * _zla( 0, kmax )
 2206.       t$377 = _zla( 0, jbmax )
 2204.       t$378 = _zla( 0, ibmax ) * _zla( 0, kmax ) * _zla( 0, jbmax )
 2248.       $snt_T0 = _mt_single( 1, _mt_rw_list(...) )
 2249.       jglob = 0
 2250.       $snt_T0 = _mt_endsingle( 1, _mt_rw_list(...), $snt_T0 )
 2258.       if ( kmax > 0 ) then
 2266.          $SC_coslat_I45 = coslat%dim_1%EX
 2266.          $SC_coslat_I46 = coslat%dim_1%LB
 2266.          $SC_coslat_I48 = coslat%dim_2%SM
 2266.          $SC_coslat_I47 = coslat%dim_2%EX
 2263.          $SC_ulonm_I35 = ulonm%dim_1%EX
 2263.          $SC_ulonm_I36 = ulonm%dim_1%LB
 2263.          $SC_ulonm_I38 = ulonm%dim_2%SM
 2263.          $SC_ulonm_I37 = ulonm%dim_2%EX
 2263.          $SC_ulonm_I39 = ulonm%dim_2%LB
 2263.          $SC_longit_I40 = longit%dim_1%EX
 2263.          $SC_longit_I41 = longit%dim_1%LB
 2263.          $SC_longit_I43 = longit%dim_2%SM
 2263.          $SC_longit_I42 = longit%dim_2%EX
 2263.          $SC_longit_I44 = longit%dim_2%LB
 2260.          $SC_ulatm_I30 = ulatm%dim_1%EX
 2260.          $SC_ulatm_I31 = ulatm%dim_1%LB
 2260.          $SC_ulatm_I33 = ulatm%dim_2%SM
 2260.          $SC_ulatm_I32 = ulatm%dim_2%EX
 2260.          $SC_ulatm_I34 = ulatm%dim_2%LB
 2258.          $SC_ibmaxperjb_I28 = ibmaxperjb%dim_1%EX
 2258.          $SC_ibmaxperjb_I29 = ibmaxperjb%dim_1%LB
 2251. !dir$ loop_info (automatic) cache_nt( ibmaxperjb )
 2251.          do
 2252.             $snt_T1 = _mt_critical( 2, _mt_rw_list(...) )
 2253.             jglob = 1 + jglob
 2254.             $jb_S0 = jglob
 2255.             $snt_T1 = _mt_endcritical( 2, _mt_rw_list(...), $snt_T1 )
 2256.             if ( $jb_S0 > jbmax ) then
 2251.                goto 10
 2251.             endif
 2258.             $SCA_ibmaxperjb_I27 = (ibmaxperjb%base_addr)($jb_S0, 0)
 2266.             $SC_coslat_I49 = coslat%dim_2%LB
 2266.             $SC_sinlat_I50 = sinlat%dim_1%EX
 2266.             $SC_sinlat_I51 = sinlat%dim_1%LB
 2266.             $SC_sinlat_I53 = sinlat%dim_2%SM
 2266.             $SC_sinlat_I52 = sinlat%dim_2%EX
 2266.             $SC_sinlat_I54 = sinlat%dim_2%LB
 2258.             $I_L2258_28 = 0
 2258.             do
 2259.                if ( $SCA_ibmaxperjb_I27 > 0 ) then
 2259.                   $I_L2259_26 = 0
 2259. !dir$ ivdep
 2259. !dir$ loop_info (automatic) cache_nt( tendv )
 2259.                   do
 2260.                      $Coss_P0 = coss( (ulatm%base_addr)($I_L2259_26 + $SCA_ibmaxperjb_I27 * $I_L2258_28 + 1, $jb_S0, 0) )
 2261.                      $slat_S8 = sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P0 ) ) ), cimag( $Coss_P0 ) )
 2263.                      $dlon_S5 = (longit%base_addr)(1 + $I_L2259_26, $jb_S0, 0) + -(ulonm%base_addr)($I_L2259_26 + $SCA_ibmaxperjb_I27 * $I_L2258_28 + 1, $jb_S0, 0)
 2264.                      $Coss_P1 = coss( $dlon_S5 )
 2266.                      $cgca_S9 = (sinlat%base_addr)(1 + $I_L2259_26, $jb_S0, 0) * sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P0 ) ) ), cimag( $Coss_P0 ) ) + (coslat%base_addr)(1 + $I_L2259_26, $jb_S0, 0) * real( $Coss_P0, 8 ) * real( $Coss_P1, 8 )
 2267.                      $alpha_S14 = acos( sign( min( 1.0, abs( $cgca_S9 ) ), $cgca_S9 ) )
 2268.                      $sgam_S13 = ( ( real( $Coss_P0, 8 ) * $cgca_S9 + -( real( $Coss_P1, 8 ) * (coslat%base_addr)(1 + $I_L2259_26, $jb_S0, 0) ) ) * 1.0/sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P0 ) ) ), cimag( $Coss_P0 ) ) )
 2269.                      $cgam_S11 = (coslat%base_addr)(1 + $I_L2259_26, $jb_S0, 0) * cimag( $Coss_P1 )
 2272.                      $Coss_P2 = coss( atan2( $sgam_S13, sign( max( 9.9999999999999995e-21, abs( $cgam_S11 ) ), $cgam_S11 ) ) )
 2279.                      $Coss_P3 = coss( $alpha_S14 )
 2281.                      $Coss_P4 = coss( -$alpha_S14 )
 2282.                      $calphm_S17 = 1.0 + -( real( $Coss_P4, 8 ) )
 2288.                      $px_S19 = ( ( ( real( $Coss_P0, 8 ) + -( cimag( $Coss_P4 ) * ( cimag( $Coss_P2 ) * $slat_S8 ) ) + -( $calphm_S17 * ( cimag( $Coss_P2 ) * cimag( $Coss_P2 ) * real( $Coss_P0, 8 ) ) ) ) * tendu(1 + $I_L2259_26, 1 + $I_L2258_28, $jb_S0) + -( ( cimag( $Coss_P4 ) * ( real( $Coss_P2, 8 ) * $slat_S8 ) + $calphm_S17 * ( cimag( $Coss_P2 ) * real( $Coss_P2, 8 ) * real( $Coss_P0, 8 ) ) ) * tendv(1 + $I_L2259_26, 1 + $I_L2258_28, $jb_S0) ) ) * 1.0/( ( cimag( $Coss_P4 ) * ( real( $Coss_P2, 8 ) * $slat_S8 ) + $calphm_S17 * ( cimag( $Coss_P2 ) * real( $Coss_P2, 8 ) * real( $Coss_P0, 8 ) ) ) * ( cimag( $Coss_P4 ) * ( real( $Coss_P2, 8 ) * $slat_S8 ) + $calphm_S17 * ( cimag( $Coss_P2 ) * real( $Coss_P2, 8 ) * real( $Coss_P0, 8 ) ) ) + ( real( $Coss_P0, 8 ) + -( cimag( $Coss_P4 ) * ( cimag( $Coss_P2 ) * $slat_S8 ) ) + -( $calphm_S17 * ( cimag( $Coss_P2 ) * cimag( $Coss_P2 ) * real( $Coss_P0, 8 ) ) ) ) * ( real( $Coss_P0, 8 ) + -( cimag( $Coss_P4 ) * ( cimag( $Coss_P2 ) * $slat_S8 ) ) + -( $calphm_S17 * ( cimag( $Coss_P2 ) * cimag( $Coss_P2 ) * real( $Coss_P0, 8 ) ) ) ) ) )
 2289.                      $py_S22 = ( ( ( cimag( $Coss_P4 ) * ( real( $Coss_P2, 8 ) * $slat_S8 ) + $calphm_S17 * ( cimag( $Coss_P2 ) * real( $Coss_P2, 8 ) * real( $Coss_P0, 8 ) ) ) * tendu(1 + $I_L2259_26, 1 + $I_L2258_28, $jb_S0) + ( real( $Coss_P0, 8 ) + -( cimag( $Coss_P4 ) * ( cimag( $Coss_P2 ) * $slat_S8 ) ) + -( $calphm_S17 * ( cimag( $Coss_P2 ) * cimag( $Coss_P2 ) * real( $Coss_P0, 8 ) ) ) ) * tendv(1 + $I_L2259_26, 1 + $I_L2258_28, $jb_S0) ) * 1.0/( ( cimag( $Coss_P4 ) * ( real( $Coss_P2, 8 ) * $slat_S8 ) + $calphm_S17 * ( cimag( $Coss_P2 ) * real( $Coss_P2, 8 ) * real( $Coss_P0, 8 ) ) ) * ( cimag( $Coss_P4 ) * ( real( $Coss_P2, 8 ) * $slat_S8 ) + $calphm_S17 * ( cimag( $Coss_P2 ) * real( $Coss_P2, 8 ) * real( $Coss_P0, 8 ) ) ) + ( real( $Coss_P0, 8 ) + -( cimag( $Coss_P4 ) * ( cimag( $Coss_P2 ) * $slat_S8 ) ) + -( $calphm_S17 * ( cimag( $Coss_P2 ) * cimag( $Coss_P2 ) * real( $Coss_P0, 8 ) ) ) ) * ( real( $Coss_P0, 8 ) + -( cimag( $Coss_P4 ) * ( cimag( $Coss_P2 ) * $slat_S8 ) ) + -( $calphm_S17 * ( cimag( $Coss_P2 ) * cimag( $Coss_P2 ) * real( $Coss_P0, 8 ) ) ) ) ) )
 2290.                      tendu(1 + $I_L2259_26, 1 + $I_L2258_28, $jb_S0) = ( cimag( $Coss_P3 ) * ( real( $Coss_P2, 8 ) * sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P0 ) ) ), cimag( $Coss_P0 ) ) ) + ( 1.0 + -( real( $Coss_P3, 8 ) ) ) * ( cimag( $Coss_P2 ) * real( $Coss_P2, 8 ) * real( $Coss_P0, 8 ) ) ) * $py_S22 + ( real( $Coss_P0, 8 ) + -( cimag( $Coss_P3 ) * ( cimag( $Coss_P2 ) * sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P0 ) ) ), cimag( $Coss_P0 ) ) ) ) + -( ( 1.0 + -( real( $Coss_P3, 8 ) ) ) * ( cimag( $Coss_P2 ) * cimag( $Coss_P2 ) * real( $Coss_P0, 8 ) ) ) ) * $px_S19
 2291.                      tendv(1 + $I_L2259_26, 1 + $I_L2258_28, $jb_S0) = ( real( $Coss_P0, 8 ) + -( cimag( $Coss_P3 ) * ( cimag( $Coss_P2 ) * sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P0 ) ) ), cimag( $Coss_P0 ) ) ) ) + -( ( 1.0 + -( real( $Coss_P3, 8 ) ) ) * ( cimag( $Coss_P2 ) * cimag( $Coss_P2 ) * real( $Coss_P0, 8 ) ) ) ) * $py_S22 + -( ( cimag( $Coss_P3 ) * ( real( $Coss_P2, 8 ) * sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P0 ) ) ), cimag( $Coss_P0 ) ) ) + ( 1.0 + -( real( $Coss_P3, 8 ) ) ) * ( cimag( $Coss_P2 ) * real( $Coss_P2, 8 ) * real( $Coss_P0, 8 ) ) ) * $px_S19 )
 2292.                      $I_L2259_26 = 1 + $I_L2259_26
 2259.                      if ( $I_L2259_26 >= $SCA_ibmaxperjb_I27 ) exit
 2259.                   enddo
 2259.                endif
 2293.                $I_L2258_28 = 1 + $I_L2258_28
 2292.                if ( $I_L2258_28 >= kmax ) exit
 2292.             enddo
 2293.          enddo
 2293.       else
 2251.          do
 2252.             $snt_T1 = _mt_critical( 3, _mt_rw_list(...) )
 2253.             jglob = 1 + jglob
 2254.             $jb_S0 = jglob
 2255.             $snt_T1 = _mt_endcritical( 3, _mt_rw_list(...), $snt_T1 )
 2251.             if ( $jb_S0 > jbmax ) exit
 2251.          enddo
 2251.    10    continue
 2295.          return
 2295.       endif
 2295.       end
 2295.       
 2298.       
 2298.       subroutine initsl
 2305.       phi%header%a_contig = 1
 2305.       phi%dim_1%LB = 1
 2305.       phi%dim_1%EX = _zla( 0, ibmax )
 2305.       phi%dim_1%SM = 1
 2305.       phi%dim_2%LB = -1
 2305.       phi%dim_2%EX = _zla( 0, ( 4 + jmax ) )
 2305.       phi%dim_2%SM = _zla( 0, ibmax )
 2305.       $_allo_P0(0) = 0x1000000000001L
 2305.       $_allo_P0(1) = loc( phi )
 2305.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 2306.       delphi%header%a_contig = 1
 2306.       delphi%dim_1%LB = 1
 2306.       delphi%dim_1%EX = _zla( 0, ibmax )
 2306.       delphi%dim_1%SM = 1
 2306.       delphi%dim_2%LB = -1
 2306.       delphi%dim_2%EX = _zla( 0, ( 4 + jmax ) )
 2306.       delphi%dim_2%SM = _zla( 0, ibmax )
 2306.       $_allo_P1(0) = 0x1000000000001L
 2306.       $_allo_P1(1) = loc( delphi )
 2306.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 2307.       sigma%header%a_contig = 1
 2307.       sigma%dim_1%LB = 1
 2307.       sigma%dim_1%EX = _zla( 0, ibmax )
 2307.       sigma%dim_1%SM = 1
 2307.       sigma%dim_2%LB = 1
 2307.       sigma%dim_2%EX = _zla( 0, kmax )
 2307.       sigma%dim_2%SM = _zla( 0, ibmax )
 2307.       $_allo_P2(0) = 0x1000000000001L
 2307.       $_allo_P2(1) = loc( sigma )
 2307.       call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 2308.       delsigma%header%a_contig = 1
 2308.       delsigma%dim_1%LB = 1
 2308.       delsigma%dim_1%EX = _zla( 0, ibmax )
 2308.       delsigma%dim_1%SM = 1
 2308.       delsigma%dim_2%LB = 1
 2308.       delsigma%dim_2%EX = _zla( 0, kmax )
 2308.       delsigma%dim_2%SM = _zla( 0, ibmax )
 2308.       $_allo_P3(0) = 0x1000000000001L
 2308.       $_allo_P3(1) = loc( delsigma )
 2308.       call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 2309.       dellon%header%a_contig = 1
 2309.       dellon%dim_1%LB = 1
 2309.       dellon%dim_1%EX = _zla( 0, ibmax )
 2309.       dellon%dim_1%SM = 1
 2309.       dellon%dim_2%LB = -1
 2309.       dellon%dim_2%EX = _zla( 0, ( 4 + jmax ) )
 2309.       dellon%dim_2%SM = _zla( 0, ibmax )
 2309.       $_allo_P4(0) = 0x1000000000001L
 2309.       $_allo_P4(1) = loc( dellon )
 2309.       call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
 2310.       cubcoef%header%a_contig = 1
 2310.       cubcoef%dim_1%LB = 1
 2310.       cubcoef%dim_1%EX = _zla( 0, ibmax )
 2310.       cubcoef%dim_1%SM = 1
 2310.       cubcoef%dim_2%LB = 0
 2310.       cubcoef%dim_2%EX = _zla( 0, ( 1 + jmax ) )
 2310.       cubcoef%dim_2%SM = _zla( 0, ibmax )
 2310.       cubcoef%dim_3%LB = 1
 2310.       cubcoef%dim_3%EX = 6
 2310.       cubcoef%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, 1 + jmax ) )
 2310.       $_allo_P5(0) = 0x1000000000001L
 2310.       $_allo_P5(1) = loc( cubcoef )
 2310.       call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
 2311.       cubcoefv%header%a_contig = 1
 2311.       cubcoefv%dim_1%LB = 1
 2311.       cubcoefv%dim_1%EX = _zla( 0, ibmax )
 2311.       cubcoefv%dim_1%SM = 1
 2311.       cubcoefv%dim_2%LB = 1
 2311.       cubcoefv%dim_2%EX = _zla( 0, kmax )
 2311.       cubcoefv%dim_2%SM = _zla( 0, ibmax )
 2311.       cubcoefv%dim_3%LB = 1
 2311.       cubcoefv%dim_3%EX = 6
 2311.       cubcoefv%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, kmax ) )
 2311.       $_allo_P6(0) = 0x1000000000001L
 2311.       $_allo_P6(1) = loc( cubcoefv )
 2311.       call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
 2312.       if ( sl_twotime_scheme ) then
 2313.          ulon%header%a_contig = 1
 2313.          ulon%dim_1%LB = 1
 2313.          ulon%dim_1%EX = _zla( 0, ( ibmax * kmax ) )
 2313.          ulon%dim_1%SM = 1
 2313.          ulon%dim_2%LB = 1
 2313.          ulon%dim_2%EX = _zla( 0, jbmax )
 2313.          ulon%dim_2%SM = _zla( 0, ( ibmax * kmax ) )
 2313.          $_allo_P7(0) = 0x1000000000001L
 2313.          $_allo_P7(1) = loc( ulon )
 2313.          call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
 2314.          ulat%header%a_contig = 1
 2314.          ulat%dim_1%LB = 1
 2314.          ulat%dim_1%EX = _zla( 0, ( ibmax * kmax ) )
 2314.          ulat%dim_1%SM = 1
 2314.          ulat%dim_2%LB = 1
 2314.          ulat%dim_2%EX = _zla( 0, jbmax )
 2314.          ulat%dim_2%SM = _zla( 0, ( ibmax * kmax ) )
 2314.          $_allo_P8(0) = 0x1000000000001L
 2314.          $_allo_P8(1) = loc( ulat )
 2314.          call __allocate( $_allo_P8, 0, 0, _fcd( 0, 0 ) )
 2315.          usig%header%a_contig = 1
 2315.          usig%dim_1%LB = 1
 2315.          usig%dim_1%EX = _zla( 0, ( ibmax * kmax ) )
 2315.          usig%dim_1%SM = 1
 2315.          usig%dim_2%LB = 1
 2315.          usig%dim_2%EX = _zla( 0, jbmax )
 2315.          usig%dim_2%SM = _zla( 0, ( ibmax * kmax ) )
 2315.          $_allo_P9(0) = 0x1000000000001L
 2315.          $_allo_P9(1) = loc( usig )
 2315.          call __allocate( $_allo_P9, 0, 0, _fcd( 0, 0 ) )
 2316.          ulon2d%header%a_contig = 1
 2316.          ulon2d%dim_1%LB = 1
 2316.          ulon2d%dim_1%EX = _zla( 0, ibmax )
 2316.          ulon2d%dim_1%SM = 1
 2316.          ulon2d%dim_2%LB = 1
 2316.          ulon2d%dim_2%EX = _zla( 0, jbmax )
 2316.          ulon2d%dim_2%SM = _zla( 0, ibmax )
 2316.          $_allo_P10(0) = 0x1000000000001L
 2316.          $_allo_P10(1) = loc( ulon2d )
 2316.          call __allocate( $_allo_P10, 0, 0, _fcd( 0, 0 ) )
 2317.          ulat2d%header%a_contig = 1
 2317.          ulat2d%dim_1%LB = 1
 2317.          ulat2d%dim_1%EX = _zla( 0, ibmax )
 2317.          ulat2d%dim_1%SM = 1
 2317.          ulat2d%dim_2%LB = 1
 2317.          ulat2d%dim_2%EX = _zla( 0, jbmax )
 2317.          ulat2d%dim_2%SM = _zla( 0, ibmax )
 2317.          $_allo_P11(0) = 0x1000000000001L
 2317.          $_allo_P11(1) = loc( ulat2d )
 2317.          call __allocate( $_allo_P11, 0, 0, _fcd( 0, 0 ) )
 2318.          fgummean%header%a_contig = 1
 2318.          fgummean%dim_1%LB = 1
 2318.          fgummean%dim_1%EX = _zla( 0, ibmax )
 2318.          fgummean%dim_1%SM = 1
 2318.          fgummean%dim_2%LB = 1
 2318.          fgummean%dim_2%EX = _zla( 0, jbmax_ext )
 2318.          fgummean%dim_2%SM = _zla( 0, ibmax )
 2318.          $_allo_P12(0) = 0x1000000000001L
 2318.          $_allo_P12(1) = loc( fgummean )
 2318.          call __allocate( $_allo_P12, 0, 0, _fcd( 0, 0 ) )
 2319.          fgvmmean%header%a_contig = 1
 2319.          fgvmmean%dim_1%LB = 1
 2319.          fgvmmean%dim_1%EX = _zla( 0, ibmax )
 2319.          fgvmmean%dim_1%SM = 1
 2319.          fgvmmean%dim_2%LB = 1
 2319.          fgvmmean%dim_2%EX = _zla( 0, jbmax_ext )
 2319.          fgvmmean%dim_2%SM = _zla( 0, ibmax )
 2319.          $_allo_P13(0) = 0x1000000000001L
 2319.          $_allo_P13(1) = loc( fgvmmean )
 2319.          call __allocate( $_allo_P13, 0, 0, _fcd( 0, 0 ) )
 2320.          fgumm%header%a_contig = 1
 2320.          fgumm%dim_1%LB = 1
 2320.          fgumm%dim_1%EX = _zla( 0, ibmax )
 2320.          fgumm%dim_1%SM = 1
 2320.          fgumm%dim_2%LB = 1
 2320.          fgumm%dim_2%EX = _zla( 0, kmax )
 2320.          fgumm%dim_2%SM = _zla( 0, ibmax )
 2320.          fgumm%dim_3%LB = 1
 2320.          fgumm%dim_3%EX = _zla( 0, jbmax_ext )
 2320.          fgumm%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, kmax ) )
 2320.          $_allo_P14(0) = 0x1000000000001L
 2320.          $_allo_P14(1) = loc( fgumm )
 2320.          call __allocate( $_allo_P14, 0, 0, _fcd( 0, 0 ) )
 2321.          fgvmm%header%a_contig = 1
 2321.          fgvmm%dim_1%LB = 1
 2321.          fgvmm%dim_1%EX = _zla( 0, ibmax )
 2321.          fgvmm%dim_1%SM = 1
 2321.          fgvmm%dim_2%LB = 1
 2321.          fgvmm%dim_2%EX = _zla( 0, kmax )
 2321.          fgvmm%dim_2%SM = _zla( 0, ibmax )
 2321.          fgvmm%dim_3%LB = 1
 2321.          fgvmm%dim_3%EX = _zla( 0, jbmax_ext )
 2321.          fgvmm%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, kmax ) )
 2321.          $_allo_P15(0) = 0x1000000000001L
 2321.          $_allo_P15(1) = loc( fgvmm )
 2321.          call __allocate( $_allo_P15, 0, 0, _fcd( 0, 0 ) )
 2321.       else
 2323.          usigm%header%a_contig = 1
 2323.          usigm%dim_1%LB = 1
 2323.          usigm%dim_1%EX = _zla( 0, ( ibmax * kmax ) )
 2323.          usigm%dim_1%SM = 1
 2323.          usigm%dim_2%LB = 1
 2323.          usigm%dim_2%EX = _zla( 0, jbmax )
 2323.          usigm%dim_2%SM = _zla( 0, ( ibmax * kmax ) )
 2323.          $_allo_P16(0) = 0x1000000000001L
 2323.          $_allo_P16(1) = loc( usigm )
 2323.          call __allocate( $_allo_P16, 0, 0, _fcd( 0, 0 ) )
 2323.       endif
 2325.       ulonm%header%a_contig = 1
 2325.       ulonm%dim_1%LB = 1
 2325.       ulonm%dim_1%EX = _zla( 0, ( ibmax * kmax ) )
 2325.       ulonm%dim_1%SM = 1
 2325.       ulonm%dim_2%LB = 1
 2325.       ulonm%dim_2%EX = _zla( 0, jbmax )
 2325.       ulonm%dim_2%SM = _zla( 0, ( ibmax * kmax ) )
 2325.       $_allo_P17(0) = 0x1000000000001L
 2325.       $_allo_P17(1) = loc( ulonm )
 2325.       call __allocate( $_allo_P17, 0, 0, _fcd( 0, 0 ) )
 2326.       ulatm%header%a_contig = 1
 2326.       ulatm%dim_1%LB = 1
 2326.       ulatm%dim_1%EX = _zla( 0, ( ibmax * kmax ) )
 2326.       ulatm%dim_1%SM = 1
 2326.       ulatm%dim_2%LB = 1
 2326.       ulatm%dim_2%EX = _zla( 0, jbmax )
 2326.       ulatm%dim_2%SM = _zla( 0, ( ibmax * kmax ) )
 2326.       $_allo_P18(0) = 0x1000000000001L
 2326.       $_allo_P18(1) = loc( ulatm )
 2326.       call __allocate( $_allo_P18, 0, 0, _fcd( 0, 0 ) )
 2327.       ulonm2d%header%a_contig = 1
 2327.       ulonm2d%dim_1%LB = 1
 2327.       ulonm2d%dim_1%EX = _zla( 0, ibmax )
 2327.       ulonm2d%dim_1%SM = 1
 2327.       ulonm2d%dim_2%LB = 1
 2327.       ulonm2d%dim_2%EX = _zla( 0, jbmax )
 2327.       ulonm2d%dim_2%SM = _zla( 0, ibmax )
 2327.       $_allo_P19(0) = 0x1000000000001L
 2327.       $_allo_P19(1) = loc( ulonm2d )
 2327.       call __allocate( $_allo_P19, 0, 0, _fcd( 0, 0 ) )
 2328.       ulatm2d%header%a_contig = 1
 2328.       ulatm2d%dim_1%LB = 1
 2328.       ulatm2d%dim_1%EX = _zla( 0, ibmax )
 2328.       ulatm2d%dim_1%SM = 1
 2328.       ulatm2d%dim_2%LB = 1
 2328.       ulatm2d%dim_2%EX = _zla( 0, jbmax )
 2328.       ulatm2d%dim_2%SM = _zla( 0, ibmax )
 2328.       $_allo_P20(0) = 0x1000000000001L
 2328.       $_allo_P20(1) = loc( ulatm2d )
 2328.       call __allocate( $_allo_P20, 0, 0, _fcd( 0, 0 ) )
 2330.       fgtmm%header%a_contig = 1
 2330.       fgtmm%dim_1%LB = 1
 2330.       fgtmm%dim_1%EX = _zla( 0, ibmax )
 2330.       fgtmm%dim_1%SM = 1
 2330.       fgtmm%dim_2%LB = 1
 2330.       fgtmm%dim_2%EX = _zla( 0, kmax )
 2330.       fgtmm%dim_2%SM = _zla( 0, ibmax )
 2330.       fgtmm%dim_3%LB = 1
 2330.       fgtmm%dim_3%EX = _zla( 0, jbmax )
 2330.       fgtmm%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, kmax ) )
 2330.       $_allo_P21(0) = 0x1000000000001L
 2330.       $_allo_P21(1) = loc( fgtmm )
 2330.       call __allocate( $_allo_P21, 0, 0, _fcd( 0, 0 ) )
 2331.       $F_A33 = _zla( 0, jbmax )
 2331.       $F_A34 = _zla( 0, kmax )
 2331.       $F_A35 = _zla( 0, ibmax )
 2331.       if ( and( and( -$F_A34, -$F_A33 ), -$F_A35 ) < 0 ) then
 2331.          $I_L2331_226 = 0
 2331.          do
 2331.             $I_L2331_206 = 0
 2331.             do
 2331.                $I_L2331_172 = 0
 2331. !dir$ ivdep
 2331.                do
 2331.                   (fgtmm%base_addr)(1 + $I_L2331_172, 1 + $I_L2331_206, 1 + $I_L2331_226, 0) = 0.0
 2331.                   $I_L2331_172 = 1 + $I_L2331_172
 2331.                   if ( $I_L2331_172 >= $F_A35 ) exit
 2331.                enddo
 2331.                $I_L2331_206 = 1 + $I_L2331_206
 2331.                if ( $I_L2331_206 >= $F_A34 ) exit
 2331.             enddo
 2331.             $I_L2331_226 = 1 + $I_L2331_226
 2331.             if ( $I_L2331_226 >= $F_A33 ) exit
 2331.          enddo
 2331.       endif
 2334.       jov = cvmg( jovlap, ( 1 + jovlap ) / 2, sl_twotime_scheme )
 2336.       requests%header%a_contig = 1
 2336.       requests%dim_1%LB = 1
 2336.       requests%dim_1%EX = ( max( 0, 5 * nsend + nscalars * nsend ) )
 2336.       requests%dim_1%SM = 1
 2336.       $_allo_P22(0) = 0x1000000000001L
 2336.       $_allo_P22(1) = loc( requests )
 2336.       call __allocate( $_allo_P22, 0, 0, _fcd( 0, 0 ) )
 2337.       requestr%header%a_contig = 1
 2337.       requestr%dim_1%LB = 1
 2337.       requestr%dim_1%EX = ( max( 0, 10 * jovlap + jovlap * nscalars * 2 ) )
 2337.       requestr%dim_1%SM = 1
 2337.       $_allo_P23(0) = 0x1000000000001L
 2337.       $_allo_P23(1) = loc( requestr )
 2337.       call __allocate( $_allo_P23, 0, 0, _fcd( 0, 0 ) )
 2338.       requestsm%header%a_contig = 1
 2338.       requestsm%dim_1%LB = 1
 2338.       requestsm%dim_1%EX = ( max( 0, 5 * nsend ) )
 2338.       requestsm%dim_1%SM = 1
 2338.       $_allo_P24(0) = 0x1000000000001L
 2338.       $_allo_P24(1) = loc( requestsm )
 2338.       call __allocate( $_allo_P24, 0, 0, _fcd( 0, 0 ) )
 2339.       requestrm%header%a_contig = 1
 2339.       requestrm%dim_1%LB = 1
 2339.       requestrm%dim_1%EX = ( max( 0, 10 * jovlap ) )
 2339.       requestrm%dim_1%SM = 1
 2339.       $_allo_P25(0) = 0x1000000000001L
 2339.       $_allo_P25(1) = loc( requestrm )
 2339.       call __allocate( $_allo_P25, 0, 0, _fcd( 0, 0 ) )
 2341.       if ( jmax > 0 ) then
 2341.          $I_L2341_144 = 0
 2341. !dir$ ivdep
 2341.          do
 2342.             (dellon%base_addr)(1, 1 + $I_L2341_144, 0) = ( 6.28318530717958 * 1.0/(imaxperj%base_addr)(1 + $I_L2341_144, 0) )
 2343.             (phi%base_addr)(1, 1 + $I_L2341_144, 0) = -1.570796326794895 + (colrad%base_addr)(1 + $I_L2341_144, 0)
 2344.             $I_L2341_144 = 1 + $I_L2341_144
 2341.             if ( $I_L2341_144 >= jmax ) exit
 2341.          enddo
 2341.       endif
 2345.       (phi%base_addr)(1, 0, 0) = -1.570796326794895 + -(colrad%base_addr)(1, 0)
 2346.       (phi%base_addr)(1, -1, 0) = -1.570796326794895 + -(colrad%base_addr)(2, 0)
 2347.       (phi%base_addr)(1, 1 + jmax, 0) = -(phi%base_addr)(1, 0, 0)
 2348.       (phi%base_addr)(1, 2 + jmax, 0) = -(phi%base_addr)(1, -1, 0)
 2349.       (dellon%base_addr)(1, 0, 0) = (dellon%base_addr)(1, 1, 0)
 2350.       (dellon%base_addr)(1, -1, 0) = (dellon%base_addr)(1, 2, 0)
 2351.       (dellon%base_addr)(1, 1 + jmax, 0) = (dellon%base_addr)(1, jmax, 0)
 2352.       (dellon%base_addr)(1, 2 + jmax, 0) = (dellon%base_addr)(1, -1 + jmax, 0)
 2353.       if ( 2 + jmax >= 0 ) then
 2353.          $I_L2353_146 = 0
 2353. !dir$ ivdep
 2353.          do
 2354.             (delphi%base_addr)(1, -1 + $I_L2353_146, 0) = (phi%base_addr)(1, $I_L2353_146, 0) + -(phi%base_addr)(1, -1 + $I_L2353_146, 0)
 2355.             $I_L2353_146 = 1 + $I_L2353_146
 2353.             if ( $I_L2353_146 >= 3 + jmax ) exit
 2353.          enddo
 2353.       endif
 2356.       delphiref = (delphi%base_addr)(1, -1, 0)
 2357.       if ( 1 + jmax >= 0 ) then
 2357.          $I_L2357_148 = 0
 2357. !dir$ ivdep
 2357.          do
 2358.             delphiref = min( delphiref, (delphi%base_addr)(1, $I_L2357_148, 0) )
 2359.             $I_L2357_148 = 1 + $I_L2357_148
 2357.             if ( $I_L2357_148 >= 2 + jmax ) exit
 2357.          enddo
 2357.       endif
 2360.       delsigref = (delcl%base_addr)(1, 0)
 2361.       if ( -3 + kmax >= 0 ) then
 2361.          $I_L2361_150 = 0
 2361. !dir$ ivdep
 2361.          do
 2362.             delsigref = min( delsigref, (delcl%base_addr)(2 + $I_L2361_150, 0) )
 2363.             $I_L2361_150 = 1 + $I_L2361_150
 2361.             if ( $I_L2361_150 >= -2 + kmax ) exit
 2361.          enddo
 2361.       endif
 2364.       $delphiref_S5 = 5.0e-1 * delphiref
 2366.       kmaxref = int( 1.0 + ( ( (cl%base_addr)(kmax, 0) + -(cl%base_addr)(1, 0) ) * 1.0/( 5.0e-1 * delsigref ) ) )
 2367.       jmaxref = int( 1.0 + ( 3.14159265358979 * 1.0/( 5.0e-1 * delphiref ) ) )
 2368.       delphiref = ( 3.14159265358979 * 1.0/( int( 1.0 + ( 3.14159265358979 * 1.0/( 5.0e-1 * delphiref ) ) ) ) )
 2369.       delsigref = ( ( (cl%base_addr)(kmax, 0) + -(cl%base_addr)(1, 0) ) * 1.0/kmaxref )
 2371.       jphiref%header%a_contig = 1
 2371.       jphiref%dim_1%LB = 1
 2371.       jphiref%dim_1%EX = ( max( 0, ibmax ) )
 2371.       jphiref%dim_1%SM = 1
 2371.       jphiref%dim_2%LB = 0
 2371.       jphiref%dim_2%EX = ( max( 0, 1 + int( 1.0 + ( 3.14159265358979 * 1.0/$delphiref_S5 ) ) ) )
 2371.       jphiref%dim_2%SM = ( max( 0, ibmax ) )
 2371.       $_allo_P26(0) = 0x1000000000001L
 2371.       $_allo_P26(1) = loc( jphiref )
 2371.       call __allocate( $_allo_P26, 0, 0, _fcd( 0, 0 ) )
 2372.       ksigref%header%a_contig = 1
 2372.       ksigref%dim_1%LB = 1
 2372.       ksigref%dim_1%EX = ( max( 0, ibmax ) )
 2372.       ksigref%dim_1%SM = 1
 2372.       ksigref%dim_2%LB = 0
 2372.       ksigref%dim_2%EX = ( max( 0, 1 + kmaxref ) )
 2372.       ksigref%dim_2%SM = ( max( 0, ibmax ) )
 2372.       $_allo_P27(0) = 0x1000000000001L
 2372.       $_allo_P27(1) = loc( ksigref )
 2372.       call __allocate( $_allo_P27, 0, 0, _fcd( 0, 0 ) )
 2374.       (jphiref%base_addr)(1, 0, 0) = 0
 2375.       k = 0
 2376.       if ( jmaxref > 0 ) then
 2376.          $I_L2376_152 = 0
 2376. !dir$ unroll 4
 2376.          do
 2377.             k = k + ( -1.570796326794895 + ( 1 + $I_L2376_152 ) * delphiref > (phi%base_addr)(1, 1 + k, 0) )
 2378.             (jphiref%base_addr)(1, 1 + $I_L2376_152, 0) = k
 2379.             $I_L2376_152 = 1 + $I_L2376_152
 2376.             if ( $I_L2376_152 >= jmaxref ) exit
 2376.          enddo
 2376.       endif
 2380.       (ksigref%base_addr)(1, 0, 0) = 1
 2381.       j = 1
 2382.       if ( kmaxref > 0 ) then
 2384.          $SC_cl_I8 = (cl%base_addr)(1, 0)
 2382.          $I_L2382_154 = 0
 2382. !dir$ unroll 4
 2382.          do
 2384.             j = min( -1 + kmax, j + ( ( 1 + $I_L2382_154 ) * delsigref + $SC_cl_I8 > (cl%base_addr)(1 + j, 0) ) )
 2385.             (ksigref%base_addr)(1, 1 + $I_L2382_154, 0) = j
 2386.             $I_L2382_154 = 1 + $I_L2382_154
 2382.             if ( $I_L2382_154 >= kmaxref ) exit
 2382.          enddo
 2382.       endif
 2388.       if ( jmax >= 0 ) then
 2388.          $I_L2388_156 = 0
 2388. !dir$ ivdep
 2388.          do
 2389.             $p1_S9 = ( (delphi%base_addr)(1, 1 + $I_L2388_156, 0) * 1.0/(delphi%base_addr)(1, $I_L2388_156, 0) )
 2390.             $p2_S10 = ( (delphi%base_addr)(1, -1 + $I_L2388_156, 0) * 1.0/(delphi%base_addr)(1, $I_L2388_156, 0) )
 2391.             (cubcoef%base_addr)(1, $I_L2388_156, 1, 0) = $p1_S9
 2392.             (cubcoef%base_addr)(1, $I_L2388_156, 2, 0) = $p2_S10
 2393.             (cubcoef%base_addr)(1, $I_L2388_156, 3, 0) = -( 1.0/( $p2_S10 * ( 1.0 + $p2_S10 ) * ( $p1_S9 + $p2_S10 + 1.0 ) ) )
 2394.             (cubcoef%base_addr)(1, $I_L2388_156, 4, 0) = 1.0/( $p2_S10 * ( 1.0 + $p1_S9 ) )
 2395.             (cubcoef%base_addr)(1, $I_L2388_156, 5, 0) = 1.0/( $p1_S9 * ( 1.0 + $p2_S10 ) )
 2396.             (cubcoef%base_addr)(1, $I_L2388_156, 6, 0) = -( 1.0/( $p1_S9 * ( 1.0 + $p1_S9 ) * ( $p1_S9 + $p2_S10 + 1.0 ) ) )
 2397.             $I_L2388_156 = 1 + $I_L2388_156
 2388.             if ( $I_L2388_156 >= 1 + jmax ) exit
 2388.          enddo
 2388.       endif
 2398.       if ( -4 + kmax >= 0 ) then
 2398.          $I_L2398_158 = 0
 2398. !dir$ ivdep
 2398.          do
 2399.             $p1_S12 = ( (delcl%base_addr)(3 + $I_L2398_158, 0) * 1.0/(delcl%base_addr)(2 + $I_L2398_158, 0) )
 2400.             $p2_S13 = ( (delcl%base_addr)(1 + $I_L2398_158, 0) * 1.0/(delcl%base_addr)(2 + $I_L2398_158, 0) )
 2401.             (cubcoefv%base_addr)(1, 2 + $I_L2398_158, 1, 0) = $p1_S12
 2402.             (cubcoefv%base_addr)(1, 2 + $I_L2398_158, 2, 0) = $p2_S13
 2403.             (cubcoefv%base_addr)(1, 2 + $I_L2398_158, 3, 0) = -( 1.0/( $p2_S13 * ( 1.0 + $p2_S13 ) * ( $p1_S12 + $p2_S13 + 1.0 ) ) )
 2404.             (cubcoefv%base_addr)(1, 2 + $I_L2398_158, 4, 0) = 1.0/( $p2_S13 * ( 1.0 + $p1_S12 ) )
 2405.             (cubcoefv%base_addr)(1, 2 + $I_L2398_158, 5, 0) = 1.0/( $p1_S12 * ( 1.0 + $p2_S13 ) )
 2406.             (cubcoefv%base_addr)(1, 2 + $I_L2398_158, 6, 0) = -( 1.0/( $p1_S12 * ( 1.0 + $p1_S12 ) * ( $p1_S12 + $p2_S13 + 1.0 ) ) )
 2407.             $I_L2398_158 = 1 + $I_L2398_158
 2398.             if ( $I_L2398_158 >= -3 + kmax ) exit
 2398.          enddo
 2398.       endif
 2409.       if (  _substr(start,1,_ltrim(  _substr(start,1,200) )) == 'cold' ) then
 2410.          if ( jbmax > 0 ) then
 2416.             if ( sl_twotime_scheme ) then
 2417.                if ( kmax > 0 ) then
 2410.                   $I_L2410_220 = 0
 2410.                   do
 2411.                      $t_S15 = (ibmaxperjb%base_addr)(1 + $I_L2410_220, 0)
 2411.                      if ( $t_S15 > 0 ) then
 2411.                         $I_L2411_196 = 0
 2411. !dir$ ivdep
 2411.                         do
 2412.                            $i_S18 = (iperijb%base_addr)(1 + $I_L2411_196, 1 + $I_L2410_220, 0)
 2413.                            $j_S17 = (jperijb%base_addr)(1 + $I_L2411_196, 1 + $I_L2410_220, 0)
 2414.                            (ulonm2d%base_addr)(1 + $I_L2411_196, 1 + $I_L2410_220, 0) = ( -1 + $i_S18 ) * (dellon%base_addr)(1, $j_S17, 0)
 2415.                            (ulatm2d%base_addr)(1 + $I_L2411_196, 1 + $I_L2410_220, 0) = -(phi%base_addr)(1, $j_S17, 0)
 2417.                            $SCA_dellon_I34 = (dellon%base_addr)(1, $j_S17, 0)
 2417.                            $SCA_phi_I35 = (phi%base_addr)(1, $j_S17, 0)
 2417.                            $I_L2417_160 = 0
 2417. !dir$ loop_info (automatic) cache_nt( usig )
 2417.                            do
 2418.                               (usig%base_addr)($I_L2411_196 + $t_S15 * $I_L2417_160 + 1, 1 + $I_L2410_220, 0) = (cl%base_addr)(1 + $I_L2417_160, 0)
 2419.                               (ulonm%base_addr)($I_L2411_196 + $t_S15 * $I_L2417_160 + 1, 1 + $I_L2410_220, 0) = ( -1 + $i_S18 ) * $SCA_dellon_I34
 2420.                               (ulatm%base_addr)($I_L2411_196 + $t_S15 * $I_L2417_160 + 1, 1 + $I_L2410_220, 0) = -$SCA_phi_I35
 2421.                               $I_L2417_160 = 1 + $I_L2417_160
 2417.                               if ( $I_L2417_160 >= kmax ) exit
 2417.                            enddo
 2429.                            $I_L2411_196 = 1 + $I_L2411_196
 2428.                            if ( $I_L2411_196 >= $t_S15 ) exit
 2428.                         enddo
 2428.                      endif
 2430.                      $I_L2410_220 = 1 + $I_L2410_220
 2429.                      if ( $I_L2410_220 >= jbmax ) exit
 2429.                   enddo
 2429.                else
 2410.                   $I_L2410_202 = 0
 2410.                   do
 2411.                      $t_S15 = (ibmaxperjb%base_addr)(1 + $I_L2410_202, 0)
 2411.                      if ( $t_S15 > 0 ) then
 2411.                         $I_L2411_168 = 0
 2411. !dir$ ivdep
 2411.                         do
 2412.                            $i_S18 = (iperijb%base_addr)(1 + $I_L2411_168, 1 + $I_L2410_202, 0)
 2413.                            $j_S17 = (jperijb%base_addr)(1 + $I_L2411_168, 1 + $I_L2410_202, 0)
 2414.                            (ulonm2d%base_addr)(1 + $I_L2411_168, 1 + $I_L2410_202, 0) = ( -1 + $i_S18 ) * (dellon%base_addr)(1, $j_S17, 0)
 2415.                            (ulatm2d%base_addr)(1 + $I_L2411_168, 1 + $I_L2410_202, 0) = -(phi%base_addr)(1, $j_S17, 0)
 2429.                            $I_L2411_168 = 1 + $I_L2411_168
 2428.                            if ( $I_L2411_168 >= $t_S15 ) exit
 2428.                         enddo
 2428.                      endif
 2430.                      $I_L2410_202 = 1 + $I_L2410_202
 2429.                      if ( $I_L2410_202 >= jbmax ) exit
 2429.                   enddo
 2429.                endif
 2429.             else if ( kmax > 0 ) then
 2410.                $I_L2410_224 = 0
 2410.                do
 2411.                   $t_S15 = (ibmaxperjb%base_addr)(1 + $I_L2410_224, 0)
 2411.                   if ( $t_S15 > 0 ) then
 2411.                      $I_L2411_200 = 0
 2411. !dir$ ivdep
 2411.                      do
 2412.                         $i_S18 = (iperijb%base_addr)(1 + $I_L2411_200, 1 + $I_L2410_224, 0)
 2413.                         $j_S17 = (jperijb%base_addr)(1 + $I_L2411_200, 1 + $I_L2410_224, 0)
 2414.                         (ulonm2d%base_addr)(1 + $I_L2411_200, 1 + $I_L2410_224, 0) = ( -1 + $i_S18 ) * (dellon%base_addr)(1, $j_S17, 0)
 2415.                         (ulatm2d%base_addr)(1 + $I_L2411_200, 1 + $I_L2410_224, 0) = -(phi%base_addr)(1, $j_S17, 0)
 2423.                         $SCA_phi_I32 = (phi%base_addr)(1, $j_S17, 0)
 2423.                         $SCA_dellon_I33 = (dellon%base_addr)(1, $j_S17, 0)
 2423.                         $I_L2423_166 = 0
 2423. !dir$ loop_info (automatic) cache_nt( usigm )
 2423.                         do
 2424.                            (usigm%base_addr)($I_L2411_200 + $t_S15 * $I_L2423_166 + 1, 1 + $I_L2410_224, 0) = (cl%base_addr)(1 + $I_L2423_166, 0)
 2425.                            (ulonm%base_addr)($I_L2411_200 + $t_S15 * $I_L2423_166 + 1, 1 + $I_L2410_224, 0) = ( -1 + $i_S18 ) * $SCA_dellon_I33
 2426.                            (ulatm%base_addr)($I_L2411_200 + $t_S15 * $I_L2423_166 + 1, 1 + $I_L2410_224, 0) = -$SCA_phi_I32
 2427.                            $I_L2423_166 = 1 + $I_L2423_166
 2423.                            if ( $I_L2423_166 >= kmax ) exit
 2423.                         enddo
 2429.                         $I_L2411_200 = 1 + $I_L2411_200
 2428.                         if ( $I_L2411_200 >= $t_S15 ) exit
 2428.                      enddo
 2428.                   endif
 2430.                   $I_L2410_224 = 1 + $I_L2410_224
 2429.                   if ( $I_L2410_224 >= jbmax ) exit
 2429.                enddo
 2429.             else
 2410.                $I_L2410_204 = 0
 2410.                do
 2411.                   $t_S15 = (ibmaxperjb%base_addr)(1 + $I_L2410_204, 0)
 2411.                   if ( $t_S15 > 0 ) then
 2411.                      $I_L2411_170 = 0
 2411. !dir$ ivdep
 2411.                      do
 2412.                         $i_S18 = (iperijb%base_addr)(1 + $I_L2411_170, 1 + $I_L2410_204, 0)
 2413.                         $j_S17 = (jperijb%base_addr)(1 + $I_L2411_170, 1 + $I_L2410_204, 0)
 2414.                         (ulonm2d%base_addr)(1 + $I_L2411_170, 1 + $I_L2410_204, 0) = ( -1 + $i_S18 ) * (dellon%base_addr)(1, $j_S17, 0)
 2415.                         (ulatm2d%base_addr)(1 + $I_L2411_170, 1 + $I_L2410_204, 0) = -(phi%base_addr)(1, $j_S17, 0)
 2429.                         $I_L2411_170 = 1 + $I_L2411_170
 2428.                         if ( $I_L2411_170 >= $t_S15 ) exit
 2428.                      enddo
 2428.                   endif
 2430.                   $I_L2410_204 = 1 + $I_L2410_204
 2429.                   if ( $I_L2410_204 >= jbmax ) exit
 2429.                enddo
 2429.             endif
 2429.          endif
 2431.          if ( sl_twotime_scheme ) then
 2432.             $F_A36 = _zla( 0, jbmax )
 2432.             $F_A37 = _zla( 0, ( ibmax * kmax ) )
 2432.             if ( and( -$F_A37, -$F_A36 ) < 0 ) then
 2432.                $SC_ulon_I61 = ulon%dim_2%SM
 2432.                $SC_ulon_I59 = ulon%dim_2%EX
 2432.                $SC_ulon_I62 = ulon%dim_2%LB
 2432.                $SC_ulon_I58 = ulon%dim_1%EX
 2432.                $SC_ulon_I60 = ulon%dim_1%LB
 2432.                $I_L2432_208 = 0
 2432.                do
 2432.                   $I_L2432_174 = 0
 2432. !dir$ ivdep
 2432.                   do
 2432.                      (ulon%base_addr)($SC_ulon_I60 + $I_L2432_174, $SC_ulon_I62 + $I_L2432_208, 0) = (ulonm%base_addr)(1 + $I_L2432_174, 1 + $I_L2432_208, 0)
 2432.                      $I_L2432_174 = 1 + $I_L2432_174
 2432.                      if ( $I_L2432_174 >= $F_A37 ) exit
 2432.                   enddo
 2432.                   $I_L2432_208 = 1 + $I_L2432_208
 2432.                   if ( $I_L2432_208 >= $F_A36 ) exit
 2432.                enddo
 2432.             endif
 2433.             $F_A38 = _zla( 0, jbmax )
 2433.             $F_A39 = _zla( 0, ( ibmax * kmax ) )
 2433.             if ( and( -$F_A39, -$F_A38 ) < 0 ) then
 2433.                $SC_ulat_I66 = ulat%dim_2%SM
 2433.                $SC_ulat_I64 = ulat%dim_2%EX
 2433.                $SC_ulat_I67 = ulat%dim_2%LB
 2433.                $SC_ulat_I63 = ulat%dim_1%EX
 2433.                $SC_ulat_I65 = ulat%dim_1%LB
 2433.                $I_L2433_210 = 0
 2433.                do
 2433.                   $I_L2433_176 = 0
 2433. !dir$ ivdep
 2433.                   do
 2433.                      (ulat%base_addr)($SC_ulat_I65 + $I_L2433_176, $SC_ulat_I67 + $I_L2433_210, 0) = (ulatm%base_addr)(1 + $I_L2433_176, 1 + $I_L2433_210, 0)
 2433.                      $I_L2433_176 = 1 + $I_L2433_176
 2433.                      if ( $I_L2433_176 >= $F_A39 ) exit
 2433.                   enddo
 2433.                   $I_L2433_210 = 1 + $I_L2433_210
 2433.                   if ( $I_L2433_210 >= $F_A38 ) exit
 2433.                enddo
 2433.             endif
 2434.             $F_A40 = _zla( 0, jbmax )
 2434.             $F_A41 = _zla( 0, ibmax )
 2434.             if ( and( -$F_A41, -$F_A40 ) < 0 ) then
 2434.                $SC_ulon2d_I71 = ulon2d%dim_2%SM
 2434.                $SC_ulon2d_I69 = ulon2d%dim_2%EX
 2434.                $SC_ulon2d_I72 = ulon2d%dim_2%LB
 2434.                $SC_ulon2d_I68 = ulon2d%dim_1%EX
 2434.                $SC_ulon2d_I70 = ulon2d%dim_1%LB
 2434.                $I_L2434_212 = 0
 2434.                do
 2434.                   $I_L2434_178 = 0
 2434. !dir$ ivdep
 2434.                   do
 2434.                      (ulon2d%base_addr)($SC_ulon2d_I70 + $I_L2434_178, $SC_ulon2d_I72 + $I_L2434_212, 0) = (ulonm2d%base_addr)(1 + $I_L2434_178, 1 + $I_L2434_212, 0)
 2434.                      $I_L2434_178 = 1 + $I_L2434_178
 2434.                      if ( $I_L2434_178 >= $F_A41 ) exit
 2434.                   enddo
 2434.                   $I_L2434_212 = 1 + $I_L2434_212
 2434.                   if ( $I_L2434_212 >= $F_A40 ) exit
 2434.                enddo
 2434.             endif
 2435.             $F_A42 = _zla( 0, jbmax )
 2435.             $F_A43 = _zla( 0, ibmax )
 2435.             if ( and( -$F_A43, -$F_A42 ) < 0 ) then
 2435.                $SC_ulat2d_I76 = ulat2d%dim_2%SM
 2435.                $SC_ulat2d_I74 = ulat2d%dim_2%EX
 2435.                $SC_ulat2d_I77 = ulat2d%dim_2%LB
 2435.                $SC_ulat2d_I73 = ulat2d%dim_1%EX
 2435.                $SC_ulat2d_I75 = ulat2d%dim_1%LB
 2435.                $I_L2435_214 = 0
 2435.                do
 2435.                   $I_L2435_180 = 0
 2435. !dir$ ivdep
 2435.                   do
 2435.                      (ulat2d%base_addr)($SC_ulat2d_I75 + $I_L2435_180, $SC_ulat2d_I77 + $I_L2435_214, 0) = (ulatm2d%base_addr)(1 + $I_L2435_180, 1 + $I_L2435_214, 0)
 2435.                      $I_L2435_180 = 1 + $I_L2435_180
 2435.                      if ( $I_L2435_180 >= $F_A43 ) exit
 2435.                   enddo
 2435.                   $I_L2435_214 = 1 + $I_L2435_214
 2435.                   if ( $I_L2435_214 >= $F_A42 ) exit
 2435.                enddo
 2435.             endif
 2435.          endif
 2435.       endif
 2439.       if ( -2 + ibmax >= 0 ) then
 2439.          $I_L2439_222 = 0
 2439.          do
 2440.             $F_A44 = _zla( 0, ( 4 + jmax ) )
 2440.             if ( 4 + jmax > 0 ) then
 2440.                $I_L2440_182 = 0
 2440. !dir$ ivdep
 2440.                do
 2440.                   (phi%base_addr)(2 + $I_L2439_222, -1 + $I_L2440_182, 0) = (phi%base_addr)(1, -1 + $I_L2440_182, 0)
 2440.                   $I_L2440_182 = 1 + $I_L2440_182
 2440.                   if ( $I_L2440_182 >= $F_A44 ) exit
 2440.                enddo
 2440.             endif
 2441.             $F_A45 = _zla( 0, ( 4 + jmax ) )
 2441.             if ( 4 + jmax > 0 ) then
 2441.                $I_L2441_184 = 0
 2441. !dir$ ivdep
 2441.                do
 2441.                   (delphi%base_addr)(2 + $I_L2439_222, -1 + $I_L2441_184, 0) = (delphi%base_addr)(1, -1 + $I_L2441_184, 0)
 2441.                   $I_L2441_184 = 1 + $I_L2441_184
 2441.                   if ( $I_L2441_184 >= $F_A45 ) exit
 2441.                enddo
 2441.             endif
 2442.             $F_A46 = _zla( 0, ( 4 + jmax ) )
 2442.             if ( 4 + jmax > 0 ) then
 2442.                $I_L2442_186 = 0
 2442. !dir$ ivdep
 2442.                do
 2442.                   (dellon%base_addr)(2 + $I_L2439_222, -1 + $I_L2442_186, 0) = (dellon%base_addr)(1, -1 + $I_L2442_186, 0)
 2442.                   $I_L2442_186 = 1 + $I_L2442_186
 2442.                   if ( $I_L2442_186 >= $F_A46 ) exit
 2442.                enddo
 2442.             endif
 2443.             $F_A47 = ( 1 + kmaxref )
 2443.             if ( kmaxref >= 0 ) then
 2443.                $I_L2443_188 = 0
 2443. !dir$ ivdep
 2443.                do
 2443.                   (ksigref%base_addr)(2 + $I_L2439_222, $I_L2443_188, 0) = (ksigref%base_addr)(1, $I_L2443_188, 0)
 2443.                   $I_L2443_188 = 1 + $I_L2443_188
 2443.                   if ( $I_L2443_188 >= $F_A47 ) exit
 2443.                enddo
 2443.             endif
 2444.             $F_A48 = ( 1 + jmaxref )
 2444.             if ( jmaxref >= 0 ) then
 2444.                $I_L2444_190 = 0
 2444. !dir$ ivdep
 2444.                do
 2444.                   (jphiref%base_addr)(2 + $I_L2439_222, $I_L2444_190, 0) = (jphiref%base_addr)(1, $I_L2444_190, 0)
 2444.                   $I_L2444_190 = 1 + $I_L2444_190
 2444.                   if ( $I_L2444_190 >= $F_A48 ) exit
 2444.                enddo
 2444.             endif
 2445.             $F_A49 = _zla( 0, ( 1 + jmax ) )
 2445.             if ( jmax >= 0 ) then
 2445.                $I_L2445_216 = 0
 2445.                do
 2445.                   $I_L2445_192 = 0
 2445. !dir$ ivdep
 2445.                   do
 2445.                      (cubcoef%base_addr)(2 + $I_L2439_222, $I_L2445_192, 1 + $I_L2445_216, 0) = (cubcoef%base_addr)(1, $I_L2445_192, 1 + $I_L2445_216, 0)
 2445.                      $I_L2445_192 = 1 + $I_L2445_192
 2445.                      if ( $I_L2445_192 >= $F_A49 ) exit
 2445.                   enddo
 2445.                   $I_L2445_216 = 1 + $I_L2445_216
 2445.                   if ( $I_L2445_216 >= 6 ) exit
 2445.                enddo
 2445.             endif
 2446.             $F_A50 = _zla( 0, kmax )
 2446.             if ( kmax > 0 ) then
 2446.                $I_L2446_218 = 0
 2446.                do
 2446.                   $I_L2446_194 = 0
 2446. !dir$ ivdep
 2446.                   do
 2446.                      (cubcoefv%base_addr)(2 + $I_L2439_222, 1 + $I_L2446_194, 1 + $I_L2446_218, 0) = (cubcoefv%base_addr)(1, 1 + $I_L2446_194, 1 + $I_L2446_218, 0)
 2446.                      $I_L2446_194 = 1 + $I_L2446_194
 2446.                      if ( $I_L2446_194 >= $F_A50 ) exit
 2446.                   enddo
 2446.                   $I_L2446_218 = 1 + $I_L2446_218
 2446.                   if ( $I_L2446_218 >= 6 ) exit
 2446.                enddo
 2446.             endif
 2447.             $I_L2439_222 = 1 + $I_L2439_222
 2439.             if ( $I_L2439_222 >= -1 + ibmax ) exit
 2439.          enddo
 2439.       endif
 2448.       if ( -1 + kmax > 0 ) then
 2449.          if ( ibmax > 0 ) then
 2448.             $I_L2448_198 = 0
 2448.             do
 2449.                $SCA_cl_I56 = (cl%base_addr)(1 + $I_L2448_198, 0)
 2449.                $SCA_delcl_I57 = (delcl%base_addr)(1 + $I_L2448_198, 0)
 2449.                $I_L2449_162 = 0
 2449. !dir$ ivdep
 2449.                do
 2450.                   (sigma%base_addr)(1 + $I_L2449_162, 1 + $I_L2448_198, 0) = $SCA_cl_I56
 2451.                   (delsigma%base_addr)(1 + $I_L2449_162, 1 + $I_L2448_198, 0) = $SCA_delcl_I57
 2452.                   $I_L2449_162 = 1 + $I_L2449_162
 2449.                   if ( $I_L2449_162 >= ibmax ) exit
 2449.                enddo
 2453.                $I_L2448_198 = 1 + $I_L2448_198
 2452.                if ( $I_L2448_198 >= -1 + kmax ) exit
 2452.             enddo
 2452.          endif
 2452.       endif
 2454.       if ( ibmax > 0 ) then
 2455.          $SC_cl_I31 = (cl%base_addr)(kmax, 0)
 2454.          $I_L2454_164 = 0
 2454. !dir$ ivdep
 2454.          do
 2455.             (sigma%base_addr)(1 + $I_L2454_164, kmax, 0) = $SC_cl_I31
 2456.             $I_L2454_164 = 1 + $I_L2454_164
 2454.             if ( $I_L2454_164 >= ibmax ) exit
 2454.          enddo
 2454.       endif
 2458.       return
 2458.       end
 2458.       
  137.       
  137.       module semilagrangian
 2460.       return
 2460.       end
 2460.       
