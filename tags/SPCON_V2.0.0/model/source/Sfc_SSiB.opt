       !        
       !        Cray Inc. Decompilation
       !        Notice - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  Sfc_SSiB.f90
       !        File                  :  Sfc_SSiB.opt
       !        Network               :  Gemini interconnect
       !        Target                :  X86, 64-bit, sse3
       !        
  183.       
  183.       subroutine initssib( ibmax, jbmax, delsig, path, fnamesibveg_in, fnamesibalb_in )
  183.       delsig%dim_1%LB = 1
  183.       t$138 = _len( path )
  183.       t$139 = _len( fnamesibveg_in )
  183.       t$140 = _len( fnamesibalb_in )
  190.       expcut = -122.03700992868443
  191.       rbyg = 14.645408163265305 * (delsig%base_addr)(1, 0)
  192.        _substr(path_in,1,200) =  _substr(path,1,_len( path ))
  193.        _substr(fnamesibveg,1,200) =  _substr(fnamesibveg_in,1,_len( fnamesibveg_in ))
  194.        _substr(fnamesibalb,1,200) =  _substr(fnamesibalb_in,1,_len( fnamesibalb_in ))
  195.       vcover_gbl%header%a_contig = 1
  195.       vcover_gbl%dim_1%LB = 1
  195.       vcover_gbl%dim_1%EX = ( max( 0, ibmax ) )
  195.       vcover_gbl%dim_1%SM = 1
  195.       vcover_gbl%dim_2%LB = 1
  195.       vcover_gbl%dim_2%EX = ( max( 0, jbmax ) )
  195.       vcover_gbl%dim_2%SM = ( max( 0, ibmax ) )
  195.       vcover_gbl%dim_3%LB = 1
  195.       vcover_gbl%dim_3%EX = 2
  195.       vcover_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  195.       $_allo_P0(0) = 0x1000000000001L
  195.       $_allo_P0(1) = loc( vcover_gbl )
  195.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
  196.       zlt_gbl%header%a_contig = 1
  196.       zlt_gbl%dim_1%LB = 1
  196.       zlt_gbl%dim_1%EX = ( max( 0, ibmax ) )
  196.       zlt_gbl%dim_1%SM = 1
  196.       zlt_gbl%dim_2%LB = 1
  196.       zlt_gbl%dim_2%EX = ( max( 0, jbmax ) )
  196.       zlt_gbl%dim_2%SM = ( max( 0, ibmax ) )
  196.       zlt_gbl%dim_3%LB = 1
  196.       zlt_gbl%dim_3%EX = 2
  196.       zlt_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  196.       $_allo_P1(0) = 0x1000000000001L
  196.       $_allo_P1(1) = loc( zlt_gbl )
  196.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
  197.       green_gbl%header%a_contig = 1
  197.       green_gbl%dim_1%LB = 1
  197.       green_gbl%dim_1%EX = ( max( 0, ibmax ) )
  197.       green_gbl%dim_1%SM = 1
  197.       green_gbl%dim_2%LB = 1
  197.       green_gbl%dim_2%EX = ( max( 0, jbmax ) )
  197.       green_gbl%dim_2%SM = ( max( 0, ibmax ) )
  197.       green_gbl%dim_3%LB = 1
  197.       green_gbl%dim_3%EX = 2
  197.       green_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  197.       $_allo_P2(0) = 0x1000000000001L
  197.       $_allo_P2(1) = loc( green_gbl )
  197.       call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
  198.       chil_gbl%header%a_contig = 1
  198.       chil_gbl%dim_1%LB = 1
  198.       chil_gbl%dim_1%EX = ( max( 0, ibmax ) )
  198.       chil_gbl%dim_1%SM = 1
  198.       chil_gbl%dim_2%LB = 1
  198.       chil_gbl%dim_2%EX = ( max( 0, jbmax ) )
  198.       chil_gbl%dim_2%SM = ( max( 0, ibmax ) )
  198.       chil_gbl%dim_3%LB = 1
  198.       chil_gbl%dim_3%EX = 2
  198.       chil_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  198.       $_allo_P3(0) = 0x1000000000001L
  198.       $_allo_P3(1) = loc( chil_gbl )
  198.       call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
  199.       topt_gbl%header%a_contig = 1
  199.       topt_gbl%dim_1%LB = 1
  199.       topt_gbl%dim_1%EX = ( max( 0, ibmax ) )
  199.       topt_gbl%dim_1%SM = 1
  199.       topt_gbl%dim_2%LB = 1
  199.       topt_gbl%dim_2%EX = ( max( 0, jbmax ) )
  199.       topt_gbl%dim_2%SM = ( max( 0, ibmax ) )
  199.       topt_gbl%dim_3%LB = 1
  199.       topt_gbl%dim_3%EX = 2
  199.       topt_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  199.       $_allo_P4(0) = 0x1000000000001L
  199.       $_allo_P4(1) = loc( topt_gbl )
  199.       call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
  200.       tll_gbl%header%a_contig = 1
  200.       tll_gbl%dim_1%LB = 1
  200.       tll_gbl%dim_1%EX = ( max( 0, ibmax ) )
  200.       tll_gbl%dim_1%SM = 1
  200.       tll_gbl%dim_2%LB = 1
  200.       tll_gbl%dim_2%EX = ( max( 0, jbmax ) )
  200.       tll_gbl%dim_2%SM = ( max( 0, ibmax ) )
  200.       tll_gbl%dim_3%LB = 1
  200.       tll_gbl%dim_3%EX = 2
  200.       tll_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  200.       $_allo_P5(0) = 0x1000000000001L
  200.       $_allo_P5(1) = loc( tll_gbl )
  200.       call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
  201.       tu_gbl%header%a_contig = 1
  201.       tu_gbl%dim_1%LB = 1
  201.       tu_gbl%dim_1%EX = ( max( 0, ibmax ) )
  201.       tu_gbl%dim_1%SM = 1
  201.       tu_gbl%dim_2%LB = 1
  201.       tu_gbl%dim_2%EX = ( max( 0, jbmax ) )
  201.       tu_gbl%dim_2%SM = ( max( 0, ibmax ) )
  201.       tu_gbl%dim_3%LB = 1
  201.       tu_gbl%dim_3%EX = 2
  201.       tu_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  201.       $_allo_P6(0) = 0x1000000000001L
  201.       $_allo_P6(1) = loc( tu_gbl )
  201.       call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
  202.       defac_gbl%header%a_contig = 1
  202.       defac_gbl%dim_1%LB = 1
  202.       defac_gbl%dim_1%EX = ( max( 0, ibmax ) )
  202.       defac_gbl%dim_1%SM = 1
  202.       defac_gbl%dim_2%LB = 1
  202.       defac_gbl%dim_2%EX = ( max( 0, jbmax ) )
  202.       defac_gbl%dim_2%SM = ( max( 0, ibmax ) )
  202.       defac_gbl%dim_3%LB = 1
  202.       defac_gbl%dim_3%EX = 2
  202.       defac_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  202.       $_allo_P7(0) = 0x1000000000001L
  202.       $_allo_P7(1) = loc( defac_gbl )
  202.       call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
  203.       ph2_gbl%header%a_contig = 1
  203.       ph2_gbl%dim_1%LB = 1
  203.       ph2_gbl%dim_1%EX = ( max( 0, ibmax ) )
  203.       ph2_gbl%dim_1%SM = 1
  203.       ph2_gbl%dim_2%LB = 1
  203.       ph2_gbl%dim_2%EX = ( max( 0, jbmax ) )
  203.       ph2_gbl%dim_2%SM = ( max( 0, ibmax ) )
  203.       ph2_gbl%dim_3%LB = 1
  203.       ph2_gbl%dim_3%EX = 2
  203.       ph2_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  203.       $_allo_P8(0) = 0x1000000000001L
  203.       $_allo_P8(1) = loc( ph2_gbl )
  203.       call __allocate( $_allo_P8, 0, 0, _fcd( 0, 0 ) )
  204.       ph1_gbl%header%a_contig = 1
  204.       ph1_gbl%dim_1%LB = 1
  204.       ph1_gbl%dim_1%EX = ( max( 0, ibmax ) )
  204.       ph1_gbl%dim_1%SM = 1
  204.       ph1_gbl%dim_2%LB = 1
  204.       ph1_gbl%dim_2%EX = ( max( 0, jbmax ) )
  204.       ph1_gbl%dim_2%SM = ( max( 0, ibmax ) )
  204.       ph1_gbl%dim_3%LB = 1
  204.       ph1_gbl%dim_3%EX = 2
  204.       ph1_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  204.       $_allo_P9(0) = 0x1000000000001L
  204.       $_allo_P9(1) = loc( ph1_gbl )
  204.       call __allocate( $_allo_P9, 0, 0, _fcd( 0, 0 ) )
  205.       rstpar_gbl%header%a_contig = 1
  205.       rstpar_gbl%dim_1%LB = 1
  205.       rstpar_gbl%dim_1%EX = ( max( 0, ibmax ) )
  205.       rstpar_gbl%dim_1%SM = 1
  205.       rstpar_gbl%dim_2%LB = 1
  205.       rstpar_gbl%dim_2%EX = ( max( 0, jbmax ) )
  205.       rstpar_gbl%dim_2%SM = ( max( 0, ibmax ) )
  205.       rstpar_gbl%dim_3%LB = 1
  205.       rstpar_gbl%dim_3%EX = 2
  205.       rstpar_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  205.       rstpar_gbl%dim_4%LB = 1
  205.       rstpar_gbl%dim_4%EX = 3
  205.       rstpar_gbl%dim_4%SM = ( max( 0, ibmax ) * max( 0, jbmax ) * 2 )
  205.       $_allo_P10(0) = 0x1000000000001L
  205.       $_allo_P10(1) = loc( rstpar_gbl )
  205.       call __allocate( $_allo_P10, 0, 0, _fcd( 0, 0 ) )
  206.       return
  206.       end
  206.       
  208.       
  208.       subroutine ssib_driver( jdt, latitu, bps, psb, dzm, em, gmt, gmq, gmu, cu, cuni, ctni, ustar, cosz, sinclt, rhoair, psy, rcp, wc, wg, fc, fg, hr, ect, eci, egt, egi, egs, ec, eg, hc, hg, ecidif, egidif, ecmass, egmass, etmass, hflux, chf, shf, fluxef, roff, drag, ra, rb, rd, rc, rg, tcta, tgta, ta, ea, etc, etg, btc, btg, u2, radt, par, pd, rst, rsoil, phroot, hrr, phsoil, cc, cg, satcap, snow, dtc, dtg, dtm, dqm, stm, extk, radfac, closs, gloss, thermk, p1f, p2f, tc, tg, td, capac, w, qm, tm, um, vm, psur, ppc, ppl, radn, itype, dtc3x, mon, nmax, ncols, zlwup, salb, tgeff, nsx, tmtx, qmtx, umtx, gt, gq, gu, gv, gps, imask, kmax, ktm, initlz, tcm, tgm, tdm, wm, beam_visb, beam_visd, beam_nirb, beam_nird, cos2, dlwbot, capacm, td0, tg0, zenith, kt, iswrad, ilwrad, xvisb, xvisd, xnirb, xnird, ppli, ppci, tsea, ssib, w0, tc0, capac0, intg, slrad, tseam, tsurf, qsurf, colrad, sigki, delsig, sens, evap, umom, vmom, zorl, rmi, rhi, cond, stor, z0x, speedm, ustarm, z0sea, rho, d, qsfc0, tsfc0, qsfcm, tsfcm, qsfc, tsfc, qm0, qmm, tm0, tmm, mskant )
  208.       t$3 = ncols
  329.       t$141 = _zla( 0, ncols )
  208.       t$142 = _zla( 0, ncols )
  208.       t$143 = 3 * _zla( 0, ncols )
  208.       t$144 = 4 * _zla( 0, ncols )
  208.       t$145 = 2 * _zla( 0, ncols )
  208.       t$146 = 2 * _zla( 0, ncols )
  208.       t$147 = 6 * _zla( 0, ncols )
  208.       t$148 = 12 * _zla( 0, ncols )
  208.       t$149 = 3 * _zla( 0, ncols )
  208.       t$150 = 6 * _zla( 0, ncols )
  208.       t$8 = kmax
  358.       t$151 = _zla( 0, kmax )
  208.       t$152 = _zla( 0, ncols ) * _zla( 0, kmax )
  208.       t$153 = _zla( 0, ncols ) * _zla( 0, kmax ) * 3
  208.       t$154 = _zla( 0, ncols ) * _zla( 0, kmax ) * 4
  208.       t$155 = _zla( 0, ncols ) * _zla( 0, kmax )
  208.       t$156 = _len( iswrad )
  208.       t$157 = _len( ilwrad )
  437.       t$160 = 16 * _zla( 0, ncols )
  445.       t$161 = 16 * _zla( 0, ncols )
  445.       t$163 = 32 * _zla( 0, ncols )
  436.       t$164 = 32 * _zla( 0, ncols )
  436.       t$166 = 48 * _zla( 0, ncols )
  450.       t$167 = 48 * _zla( 0, ncols )
  450.       t$169 = 64 * _zla( 0, ncols )
  449.       t$170 = 64 * _zla( 0, ncols )
  449.       t$172 = 80 * _zla( 0, ncols )
  440.       t$173 = 80 * _zla( 0, ncols )
  440.       t$175 = 88 * _zla( 0, ncols )
  439.       t$176 = 88 * _zla( 0, ncols )
  439.       t$178 = 96 * _zla( 0, ncols )
  434.       t$179 = 96 * _zla( 0, ncols )
  434.       t$181 = 144 * _zla( 0, ncols )
  443.       t$182 = 144 * _zla( 0, ncols )
  443.       t$184 = 160 * _zla( 0, ncols )
  448.       t$185 = 160 * _zla( 0, ncols )
  448.       t$187 = 168 * _zla( 0, ncols )
  447.       t$188 = 168 * _zla( 0, ncols )
  447.       t$190 = 176 * _zla( 0, ncols )
  442.       t$191 = 176 * _zla( 0, ncols )
  442.       t$193 = 192 * _zla( 0, ncols )
  444.       t$194 = 192 * _zla( 0, ncols )
  444.       t$196 = 208 * _zla( 0, ncols )
  438.       t$197 = 208 * _zla( 0, ncols )
  438.       t$199 = 224 * _zla( 0, ncols )
  446.       t$200 = 224 * _zla( 0, ncols )
  446.       t$202 = 232 * _zla( 0, ncols )
  441.       t$203 = 232 * _zla( 0, ncols )
  441.       t$205 = 240 * _zla( 0, ncols )
  435.       t$206 = 240 * _zla( 0, ncols )
  435.       t$208 = 256 * _zla( 0, ncols )
  208.       t$158 = int( _alloc( 256 * _zla( 0, ncols ) ), 8 )
  437.       t$159 = t$158
  445.       t$162 = t$158 + 16 * _zla( 0, ncols )
  436.       t$165 = t$158 + 32 * _zla( 0, ncols )
  450.       t$168 = t$158 + 48 * _zla( 0, ncols )
  449.       t$171 = t$158 + 64 * _zla( 0, ncols )
  440.       t$174 = t$158 + 80 * _zla( 0, ncols )
  439.       t$177 = t$158 + 88 * _zla( 0, ncols )
  434.       t$180 = t$158 + 96 * _zla( 0, ncols )
  443.       t$183 = t$158 + 144 * _zla( 0, ncols )
  448.       t$186 = t$158 + 160 * _zla( 0, ncols )
  447.       t$189 = t$158 + 168 * _zla( 0, ncols )
  442.       t$192 = t$158 + 176 * _zla( 0, ncols )
  444.       t$195 = t$158 + 192 * _zla( 0, ncols )
  438.       t$198 = t$158 + 208 * _zla( 0, ncols )
  446.       t$201 = t$158 + 224 * _zla( 0, ncols )
  441.       t$204 = t$158 + 232 * _zla( 0, ncols )
  435.       t$207 = t$158 + 240 * _zla( 0, ncols )
  455.       if ( nmax > 0 ) then
  454.          $I_L454_368 = 0
  454.          do
  466.             $SC_rstpar_gbl_I143 = rstpar_gbl%dim_1%EX
  466.             $SC_rstpar_gbl_I144 = rstpar_gbl%dim_1%LB
  466.             $SC_rstpar_gbl_I146 = rstpar_gbl%dim_2%SM
  466.             $SC_rstpar_gbl_I145 = rstpar_gbl%dim_2%EX
  466.             $SC_rstpar_gbl_I147 = rstpar_gbl%dim_2%LB
  466.             $SC_rstpar_gbl_I149 = rstpar_gbl%dim_3%SM
  466.             $SC_rstpar_gbl_I148 = rstpar_gbl%dim_3%EX
  466.             $SC_rstpar_gbl_I150 = rstpar_gbl%dim_3%LB
  466.             $SC_rstpar_gbl_I152 = rstpar_gbl%dim_4%SM
  466.             $SC_rstpar_gbl_I151 = rstpar_gbl%dim_4%EX
  466.             $SC_rstpar_gbl_I153 = rstpar_gbl%dim_4%LB
  465.             $SC_ph2_gbl_I135 = ph2_gbl%dim_1%EX
  465.             $SC_ph2_gbl_I136 = ph2_gbl%dim_1%LB
  465.             $SC_ph2_gbl_I138 = ph2_gbl%dim_2%SM
  465.             $SC_ph2_gbl_I137 = ph2_gbl%dim_2%EX
  465.             $SC_ph2_gbl_I139 = ph2_gbl%dim_2%LB
  465.             $SC_ph2_gbl_I141 = ph2_gbl%dim_3%SM
  465.             $SC_ph2_gbl_I140 = ph2_gbl%dim_3%EX
  465.             $SC_ph2_gbl_I142 = ph2_gbl%dim_3%LB
  464.             $SC_ph1_gbl_I127 = ph1_gbl%dim_1%EX
  464.             $SC_ph1_gbl_I128 = ph1_gbl%dim_1%LB
  464.             $SC_ph1_gbl_I130 = ph1_gbl%dim_2%SM
  464.             $SC_ph1_gbl_I129 = ph1_gbl%dim_2%EX
  464.             $SC_ph1_gbl_I131 = ph1_gbl%dim_2%LB
  464.             $SC_ph1_gbl_I133 = ph1_gbl%dim_3%SM
  464.             $SC_ph1_gbl_I132 = ph1_gbl%dim_3%EX
  464.             $SC_ph1_gbl_I134 = ph1_gbl%dim_3%LB
  463.             $SC_defac_gbl_I119 = defac_gbl%dim_1%EX
  463.             $SC_defac_gbl_I120 = defac_gbl%dim_1%LB
  463.             $SC_defac_gbl_I122 = defac_gbl%dim_2%SM
  463.             $SC_defac_gbl_I121 = defac_gbl%dim_2%EX
  463.             $SC_defac_gbl_I123 = defac_gbl%dim_2%LB
  463.             $SC_defac_gbl_I125 = defac_gbl%dim_3%SM
  463.             $SC_defac_gbl_I124 = defac_gbl%dim_3%EX
  463.             $SC_defac_gbl_I126 = defac_gbl%dim_3%LB
  462.             $SC_tu_gbl_I111 = tu_gbl%dim_1%EX
  462.             $SC_tu_gbl_I112 = tu_gbl%dim_1%LB
  462.             $SC_tu_gbl_I114 = tu_gbl%dim_2%SM
  462.             $SC_tu_gbl_I113 = tu_gbl%dim_2%EX
  462.             $SC_tu_gbl_I115 = tu_gbl%dim_2%LB
  462.             $SC_tu_gbl_I117 = tu_gbl%dim_3%SM
  462.             $SC_tu_gbl_I116 = tu_gbl%dim_3%EX
  462.             $SC_tu_gbl_I118 = tu_gbl%dim_3%LB
  455.             $I_L455_112 = 0
  455. !dir$ ivdep
  455.             do
  456.                vcover(1 + $I_L455_112, 1 + $I_L454_368) = (vcover_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_368, 0)
  457.                zlt2(1 + $I_L455_112, 1 + $I_L454_368) = (zlt_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_368, 0)
  458.                green2(1 + $I_L455_112, 1 + $I_L454_368) = (green_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_368, 0)
  459.                chil2(1 + $I_L455_112, 1 + $I_L454_368) = (chil_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_368, 0)
  460.                topt2(1 + $I_L455_112, 1 + $I_L454_368) = (topt_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_368, 0)
  461.                tll2(1 + $I_L455_112, 1 + $I_L454_368) = (tll_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_368, 0)
  462.                tu2(1 + $I_L455_112, 1 + $I_L454_368) = (tu_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_368, 0)
  463.                defac2(1 + $I_L455_112, 1 + $I_L454_368) = (defac_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_368, 0)
  464.                ph12(1 + $I_L455_112, 1 + $I_L454_368) = (ph1_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_368, 0)
  465.                ph22(1 + $I_L455_112, 1 + $I_L454_368) = (ph2_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_368, 0)
  466.                rstpar2(1 + $I_L455_112, 1 + $I_L454_368, 1) = (rstpar_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_368, 1, 0)
  467.                rstpar2(1 + $I_L455_112, 1 + $I_L454_368, 2) = (rstpar_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_368, 2, 0)
  468.                rstpar2(1 + $I_L455_112, 1 + $I_L454_368, 3) = (rstpar_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_368, 3, 0)
  469.                $I_L455_112 = 1 + $I_L455_112
  455.                if ( $I_L455_112 >= nmax ) exit
  455.             enddo
  470.             $I_L454_368 = 1 + $I_L454_368
  469.             if ( $I_L454_368 >= 2 ) exit
  469.          enddo
  469.       endif
  472.       $ncount_S3 = 0
  473.       if ( ncols > 0 ) then
  473.          $I_L473_114 = 0
  473. !dir$ ivdep
  473.          do
  474.             if ( imask(1 + $I_L473_114) > 0 ) then
  475.                $ncount_S3 = 1 + $ncount_S3
  476.                rbc($ncount_S3) = (xbc%base_addr)(itype($ncount_S3), mon($ncount_S3), 0)
  477.                rdc($ncount_S3) = (xdc%base_addr)(itype($ncount_S3), mon($ncount_S3), 0)
  478.                z0x($ncount_S3) = (x0x%base_addr)(itype($ncount_S3), mon($ncount_S3), 0)
  479.                d($ncount_S3) = (xd%base_addr)(itype($ncount_S3), mon($ncount_S3), 0)
  479.             endif
  481.             $I_L473_114 = 1 + $I_L473_114
  480.             if ( $I_L473_114 >= ncols ) exit
  480.          enddo
  480.       endif
  485.       if ( initlz >= 0 .and. ktm == -1 .and. kt == 0 .and. nmax > 0 ) then
  486.          $nint_S4 = 2
  487.          $intsib_S8 = 5
  487.       else
  489.          $nint_S4 = 1
  490.          $intsib_S8 = 1
  490.       endif
  493.       if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,_len( iswrad )) )) /= 'NON' ) then
  493.          if (  _substr(ilwrad,1,_ltrim(  _substr(ilwrad,1,_len( ilwrad )) )) /= 'NON' ) then
  494.             if ( initlz >= 0 .and. ktm == -1 .and. kt == 0 .and. nmax > 0 ) then
  496.                if ( $nint_S4 > 0 ) then
  496.                   $I_L496_678 = 0
  496.                   do
  497.                      $ncount_S6 = 0
  498.                      if ( ncols > 0 ) then
  501.                         if ( $I_L496_678 == 0 ) then
  498.                            $I_L498_116 = 0
  498. !dir$ ivdep
  498.                            do
  499.                               if ( imask(1 + $I_L498_116) > 0 ) then
  500.                                  $ncount_S6 = 1 + $ncount_S6
  505.                                  radn($ncount_S6, 1, 1) = 0.0
  506.                                  radn($ncount_S6, 1, 2) = 0.0
  507.                                  radn($ncount_S6, 2, 1) = 0.0
  508.                                  radn($ncount_S6, 2, 2) = 0.0
  509.                                  cosz($ncount_S6) = 0.0
  520.                                  radn($ncount_S6, 3, 1) = 0.0
  521.                                  radn($ncount_S6, 3, 2) = dlwbot(1 + $I_L498_116)
  525.                                  ppl($ncount_S6) = 0.0
  526.                                  ppc($ncount_S6) = 0.0
  526.                               endif
  528.                               $I_L498_116 = 1 + $I_L498_116
  527.                               if ( $I_L498_116 >= ncols ) exit
  527.                            enddo
  527.                         else
  498.                            $I_L498_140 = 0
  498. !dir$ ivdep
  498.                            do
  499.                               if ( imask(1 + $I_L498_140) > 0 ) then
  500.                                  $ncount_S6 = 1 + $ncount_S6
  514.                                  radn($ncount_S6, 1, 1) = beam_visb(1 + $I_L498_140)
  515.                                  radn($ncount_S6, 1, 2) = beam_visd(1 + $I_L498_140)
  516.                                  radn($ncount_S6, 2, 1) = beam_nirb(1 + $I_L498_140)
  517.                                  radn($ncount_S6, 2, 2) = beam_nird(1 + $I_L498_140)
  518.                                  cosz($ncount_S6) = cos2(1 + $I_L498_140)
  520.                                  radn($ncount_S6, 3, 1) = 0.0
  521.                                  radn($ncount_S6, 3, 2) = dlwbot(1 + $I_L498_140)
  525.                                  ppl($ncount_S6) = 0.0
  526.                                  ppc($ncount_S6) = 0.0
  526.                               endif
  528.                               $I_L498_140 = 1 + $I_L498_140
  527.                               if ( $I_L498_140 >= ncols ) exit
  527.                            enddo
  527.                         endif
  527.                      endif
  529.                      if ( $intsib_S8 > 0 ) then
  529.                         $I_L529_676 = 0
  529.                         do
  532.                            t$1021 = ( max( 0, nmax ) )
  532.                            t$1025 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  532.                            $F_A33 = nmax
  532.                            if ( nmax > 0 ) then
  532.                               $I_L532_370 = 0
  532.                               do
  532.                                  $I_L532_144 = 0
  532. !dir$ ivdep
  532.                                  do
  532.                                     t$1024(1 + $I_L532_144, 1 + $I_L532_370) = capac(1 + $I_L532_144, 1 + $I_L532_370)
  532.                                     $I_L532_144 = 1 + $I_L532_144
  532.                                     if ( $I_L532_144 >= $F_A33 ) exit
  532.                                  enddo
  532.                                  $I_L532_370 = 1 + $I_L532_370
  532.                                  if ( $I_L532_370 >= 2 ) exit
  532.                               enddo
  532.                            endif
  533.                            t$1027 = ( max( 0, nmax ) )
  533.                            t$1031 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  533.                            $F_A34 = nmax
  533.                            if ( nmax > 0 ) then
  533.                               $I_L533_372 = 0
  533.                               do
  533.                                  $I_L533_146 = 0
  533. !dir$ ivdep
  533.                                  do
  533.                                     t$1030(1 + $I_L533_146, 1 + $I_L533_372) = satcap(1 + $I_L533_146, 1 + $I_L533_372)
  533.                                     $I_L533_146 = 1 + $I_L533_146
  533.                                     if ( $I_L533_146 >= $F_A34 ) exit
  533.                                  enddo
  533.                                  $I_L533_372 = 1 + $I_L533_372
  533.                                  if ( $I_L533_372 >= 2 ) exit
  533.                               enddo
  533.                            endif
  533.                            t$1033 = ( max( 0, nmax ) )
  533.                            t$1039 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  533.                            $F_A35 = nmax
  533.                            if ( nmax > 0 ) then
  533.                               $I_L533_648 = 0
  533.                               do
  533.                                  $I_L533_592 = 0
  533.                                  do
  533.                                     $I_L533_374 = 0
  533.                                     do
  533.                                        $I_L533_148 = 0
  533. !dir$ ivdep
  533.                                        do
  533.                                           t$1038(1 + $I_L533_148, 1 + $I_L533_374, 1 + $I_L533_592, 1 + $I_L533_648) = extk(1 + $I_L533_148, 1 + $I_L533_374, 1 + $I_L533_592, 1 + $I_L533_648)
  533.                                           $I_L533_148 = 1 + $I_L533_148
  533.                                           if ( $I_L533_148 >= $F_A35 ) exit
  533.                                        enddo
  533.                                        $I_L533_374 = 1 + $I_L533_374
  533.                                        if ( $I_L533_374 >= 2 ) exit
  533.                                     enddo
  533.                                     $I_L533_592 = 1 + $I_L533_592
  533.                                     if ( $I_L533_592 >= 3 ) exit
  533.                                  enddo
  533.                                  $I_L533_648 = 1 + $I_L533_648
  533.                                  if ( $I_L533_648 >= 2 ) exit
  533.                               enddo
  533.                            endif
  533.                            t$1041 = ( max( 0, nmax ) )
  533.                            t$1047 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  533.                            $F_A36 = nmax
  533.                            if ( nmax > 0 ) then
  533.                               $I_L533_650 = 0
  533.                               do
  533.                                  $I_L533_594 = 0
  533.                                  do
  533.                                     $I_L533_376 = 0
  533.                                     do
  533.                                        $I_L533_150 = 0
  533. !dir$ ivdep
  533.                                        do
  533.                                           t$1046(1 + $I_L533_150, 1 + $I_L533_376, 1 + $I_L533_594, 1 + $I_L533_650) = radfac(1 + $I_L533_150, 1 + $I_L533_376, 1 + $I_L533_594, 1 + $I_L533_650)
  533.                                           $I_L533_150 = 1 + $I_L533_150
  533.                                           if ( $I_L533_150 >= $F_A36 ) exit
  533.                                        enddo
  533.                                        $I_L533_376 = 1 + $I_L533_376
  533.                                        if ( $I_L533_376 >= 2 ) exit
  533.                                     enddo
  533.                                     $I_L533_594 = 1 + $I_L533_594
  533.                                     if ( $I_L533_594 >= 3 ) exit
  533.                                  enddo
  533.                                  $I_L533_650 = 1 + $I_L533_650
  533.                                  if ( $I_L533_650 >= 2 ) exit
  533.                               enddo
  533.                            endif
  535.                            t$1049 = ( max( 0, nmax ) )
  535.                            t$1054 = int( _alloc( max( 0, 32 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  535.                            $F_A37 = nmax
  535.                            if ( nmax > 0 ) then
  535.                               $I_L535_596 = 0
  535.                               do
  535.                                  $I_L535_378 = 0
  535.                                  do
  535.                                     $I_L535_152 = 0
  535. !dir$ ivdep
  535.                                     do
  535.                                        t$1053(1 + $I_L535_152, 1 + $I_L535_378, 1 + $I_L535_596) = salb(1 + $I_L535_152, 1 + $I_L535_378, 1 + $I_L535_596)
  535.                                        $I_L535_152 = 1 + $I_L535_152
  535.                                        if ( $I_L535_152 >= $F_A37 ) exit
  535.                                     enddo
  535.                                     $I_L535_378 = 1 + $I_L535_378
  535.                                     if ( $I_L535_378 >= 2 ) exit
  535.                                  enddo
  535.                                  $I_L535_596 = 1 + $I_L535_596
  535.                                  if ( $I_L535_596 >= 2 ) exit
  535.                               enddo
  535.                            endif
  530.                            call radalb( nmax, mon(1), nmax, itype(1), tc(1), tg(1), t$1024(1, 1), t$1030(1, 1), t$1038(1, 1, 1, 1), t$1046(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), zlwup(1), t$1053(1, 1, 1), tgeff(1), cosz(1), nsx(1), latitu )
  530.                            $F_A38 = nmax
  530.                            if ( nmax > 0 ) then
  530.                               $I_L530_598 = 0
  530.                               do
  530.                                  $I_L530_380 = 0
  530.                                  do
  530.                                     $I_L530_154 = 0
  530. !dir$ ivdep
  530.                                     do
  530.                                        salb(1 + $I_L530_154, 1 + $I_L530_380, 1 + $I_L530_598) = t$1053(1 + $I_L530_154, 1 + $I_L530_380, 1 + $I_L530_598)
  530.                                        $I_L530_154 = 1 + $I_L530_154
  530.                                        if ( $I_L530_154 >= $F_A38 ) exit
  530.                                     enddo
  530.                                     $I_L530_380 = 1 + $I_L530_380
  530.                                     if ( $I_L530_380 >= 2 ) exit
  530.                                  enddo
  530.                                  $I_L530_598 = 1 + $I_L530_598
  530.                                  if ( $I_L530_598 >= 2 ) exit
  530.                               enddo
  530.                            endif
  535.                            _free( t$1054 )
  530.                            $F_A39 = nmax
  530.                            if ( nmax > 0 ) then
  530.                               $I_L530_652 = 0
  530.                               do
  530.                                  $I_L530_600 = 0
  530.                                  do
  530.                                     $I_L530_382 = 0
  530.                                     do
  530.                                        $I_L530_156 = 0
  530. !dir$ ivdep
  530.                                        do
  530.                                           radfac(1 + $I_L530_156, 1 + $I_L530_382, 1 + $I_L530_600, 1 + $I_L530_652) = t$1046(1 + $I_L530_156, 1 + $I_L530_382, 1 + $I_L530_600, 1 + $I_L530_652)
  530.                                           $I_L530_156 = 1 + $I_L530_156
  530.                                           if ( $I_L530_156 >= $F_A39 ) exit
  530.                                        enddo
  530.                                        $I_L530_382 = 1 + $I_L530_382
  530.                                        if ( $I_L530_382 >= 2 ) exit
  530.                                     enddo
  530.                                     $I_L530_600 = 1 + $I_L530_600
  530.                                     if ( $I_L530_600 >= 3 ) exit
  530.                                  enddo
  530.                                  $I_L530_652 = 1 + $I_L530_652
  530.                                  if ( $I_L530_652 >= 2 ) exit
  530.                               enddo
  530.                            endif
  533.                            _free( t$1047 )
  530.                            $F_A40 = nmax
  530.                            if ( nmax > 0 ) then
  530.                               $I_L530_654 = 0
  530.                               do
  530.                                  $I_L530_602 = 0
  530.                                  do
  530.                                     $I_L530_384 = 0
  530.                                     do
  530.                                        $I_L530_158 = 0
  530. !dir$ ivdep
  530.                                        do
  530.                                           extk(1 + $I_L530_158, 1 + $I_L530_384, 1 + $I_L530_602, 1 + $I_L530_654) = t$1038(1 + $I_L530_158, 1 + $I_L530_384, 1 + $I_L530_602, 1 + $I_L530_654)
  530.                                           $I_L530_158 = 1 + $I_L530_158
  530.                                           if ( $I_L530_158 >= $F_A40 ) exit
  530.                                        enddo
  530.                                        $I_L530_384 = 1 + $I_L530_384
  530.                                        if ( $I_L530_384 >= 2 ) exit
  530.                                     enddo
  530.                                     $I_L530_602 = 1 + $I_L530_602
  530.                                     if ( $I_L530_602 >= 3 ) exit
  530.                                  enddo
  530.                                  $I_L530_654 = 1 + $I_L530_654
  530.                                  if ( $I_L530_654 >= 2 ) exit
  530.                               enddo
  530.                            endif
  533.                            _free( t$1039 )
  530.                            $F_A41 = nmax
  530.                            if ( nmax > 0 ) then
  530.                               $I_L530_386 = 0
  530.                               do
  530.                                  $I_L530_160 = 0
  530. !dir$ ivdep
  530.                                  do
  530.                                     satcap(1 + $I_L530_160, 1 + $I_L530_386) = t$1030(1 + $I_L530_160, 1 + $I_L530_386)
  530.                                     $I_L530_160 = 1 + $I_L530_160
  530.                                     if ( $I_L530_160 >= $F_A41 ) exit
  530.                                  enddo
  530.                                  $I_L530_386 = 1 + $I_L530_386
  530.                                  if ( $I_L530_386 >= 2 ) exit
  530.                               enddo
  530.                            endif
  533.                            _free( t$1031 )
  532.                            _free( t$1025 )
  539.                            t$1056 = ( max( 0, nmax ) )
  539.                            t$1060 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  539.                            $F_A42 = nmax
  539.                            if ( nmax > 0 ) then
  539.                               $I_L539_388 = 0
  539.                               do
  539.                                  $I_L539_162 = 0
  539. !dir$ ivdep
  539.                                  do
  539.                                     t$1059(1 + $I_L539_162, 1 + $I_L539_388) = vcover(1 + $I_L539_162, 1 + $I_L539_388)
  539.                                     $I_L539_162 = 1 + $I_L539_162
  539.                                     if ( $I_L539_162 >= $F_A42 ) exit
  539.                                  enddo
  539.                                  $I_L539_388 = 1 + $I_L539_388
  539.                                  if ( $I_L539_388 >= 2 ) exit
  539.                               enddo
  539.                            endif
  542.                            t$1062 = ( max( 0, nmax ) )
  542.                            t$1066 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  542.                            $F_A43 = nmax
  542.                            if ( nmax > 0 ) then
  542.                               $I_L542_390 = 0
  542.                               do
  542.                                  $I_L542_164 = 0
  542. !dir$ ivdep
  542.                                  do
  542.                                     t$1065(1 + $I_L542_164, 1 + $I_L542_390) = gmt(1 + $I_L542_164, 1 + $I_L542_390)
  542.                                     $I_L542_164 = 1 + $I_L542_164
  542.                                     if ( $I_L542_164 >= $F_A43 ) exit
  542.                                  enddo
  542.                                  $I_L542_390 = 1 + $I_L542_390
  542.                                  if ( $I_L542_390 >= 3 ) exit
  542.                               enddo
  542.                            endif
  542.                            t$1068 = ( max( 0, nmax ) )
  542.                            t$1072 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  542.                            $F_A44 = nmax
  542.                            if ( nmax > 0 ) then
  542.                               $I_L542_392 = 0
  542.                               do
  542.                                  $I_L542_166 = 0
  542. !dir$ ivdep
  542.                                  do
  542.                                     t$1071(1 + $I_L542_166, 1 + $I_L542_392) = gmq(1 + $I_L542_166, 1 + $I_L542_392)
  542.                                     $I_L542_166 = 1 + $I_L542_166
  542.                                     if ( $I_L542_166 >= $F_A44 ) exit
  542.                                  enddo
  542.                                  $I_L542_392 = 1 + $I_L542_392
  542.                                  if ( $I_L542_392 >= 3 ) exit
  542.                               enddo
  542.                            endif
  542.                            t$1074 = ( max( 0, nmax ) )
  542.                            t$1078 = int( _alloc( max( 0, 32 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  542.                            $F_A45 = nmax
  542.                            if ( nmax > 0 ) then
  542.                               $I_L542_394 = 0
  542.                               do
  542.                                  $I_L542_168 = 0
  542. !dir$ ivdep
  542.                                  do
  542.                                     t$1077(1 + $I_L542_168, 1 + $I_L542_394) = gmu(1 + $I_L542_168, 1 + $I_L542_394)
  542.                                     $I_L542_168 = 1 + $I_L542_168
  542.                                     if ( $I_L542_168 >= $F_A45 ) exit
  542.                                  enddo
  542.                                  $I_L542_394 = 1 + $I_L542_394
  542.                                  if ( $I_L542_394 >= 4 ) exit
  542.                               enddo
  542.                            endif
  554.                            t$1080 = ( max( 0, nmax ) )
  554.                            t$1084 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  554.                            $F_A46 = nmax
  554.                            if ( nmax > 0 ) then
  554.                               $I_L554_396 = 0
  554.                               do
  554.                                  $I_L554_170 = 0
  554. !dir$ ivdep
  554.                                  do
  554.                                     t$1083(1 + $I_L554_170, 1 + $I_L554_396) = radt(1 + $I_L554_170, 1 + $I_L554_396)
  554.                                     $I_L554_170 = 1 + $I_L554_170
  554.                                     if ( $I_L554_170 >= $F_A46 ) exit
  554.                                  enddo
  554.                                  $I_L554_396 = 1 + $I_L554_396
  554.                                  if ( $I_L554_396 >= 2 ) exit
  554.                               enddo
  554.                            endif
  555.                            t$1086 = ( max( 0, nmax ) )
  555.                            t$1090 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  555.                            $F_A47 = nmax
  555.                            if ( nmax > 0 ) then
  555.                               $I_L555_398 = 0
  555.                               do
  555.                                  $I_L555_172 = 0
  555. !dir$ ivdep
  555.                                  do
  555.                                     t$1089(1 + $I_L555_172, 1 + $I_L555_398) = par(1 + $I_L555_172, 1 + $I_L555_398)
  555.                                     $I_L555_172 = 1 + $I_L555_172
  555.                                     if ( $I_L555_172 >= $F_A47 ) exit
  555.                                  enddo
  555.                                  $I_L555_398 = 1 + $I_L555_398
  555.                                  if ( $I_L555_398 >= 2 ) exit
  555.                               enddo
  555.                            endif
  555.                            t$1092 = ( max( 0, nmax ) )
  555.                            t$1096 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  555.                            $F_A48 = nmax
  555.                            if ( nmax > 0 ) then
  555.                               $I_L555_400 = 0
  555.                               do
  555.                                  $I_L555_174 = 0
  555. !dir$ ivdep
  555.                                  do
  555.                                     t$1095(1 + $I_L555_174, 1 + $I_L555_400) = pd(1 + $I_L555_174, 1 + $I_L555_400)
  555.                                     $I_L555_174 = 1 + $I_L555_174
  555.                                     if ( $I_L555_174 >= $F_A48 ) exit
  555.                                  enddo
  555.                                  $I_L555_400 = 1 + $I_L555_400
  555.                                  if ( $I_L555_400 >= 2 ) exit
  555.                               enddo
  555.                            endif
  555.                            t$1098 = ( max( 0, nmax ) )
  555.                            t$1102 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  555.                            $F_A49 = nmax
  555.                            if ( nmax > 0 ) then
  555.                               $I_L555_402 = 0
  555.                               do
  555.                                  $I_L555_176 = 0
  555. !dir$ ivdep
  555.                                  do
  555.                                     t$1101(1 + $I_L555_176, 1 + $I_L555_402) = rst(1 + $I_L555_176, 1 + $I_L555_402)
  555.                                     $I_L555_176 = 1 + $I_L555_176
  555.                                     if ( $I_L555_176 >= $F_A49 ) exit
  555.                                  enddo
  555.                                  $I_L555_402 = 1 + $I_L555_402
  555.                                  if ( $I_L555_402 >= 2 ) exit
  555.                               enddo
  555.                            endif
  556.                            t$1104 = ( max( 0, nmax ) )
  556.                            t$1108 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  556.                            $F_A50 = nmax
  556.                            if ( nmax > 0 ) then
  556.                               $I_L556_404 = 0
  556.                               do
  556.                                  $I_L556_178 = 0
  556. !dir$ ivdep
  556.                                  do
  556.                                     t$1107(1 + $I_L556_178, 1 + $I_L556_404) = phroot(1 + $I_L556_178, 1 + $I_L556_404)
  556.                                     $I_L556_178 = 1 + $I_L556_178
  556.                                     if ( $I_L556_178 >= $F_A50 ) exit
  556.                                  enddo
  556.                                  $I_L556_404 = 1 + $I_L556_404
  556.                                  if ( $I_L556_404 >= 2 ) exit
  556.                               enddo
  556.                            endif
  556.                            t$1110 = ( max( 0, nmax ) )
  556.                            t$1114 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  556.                            $F_A51 = nmax
  556.                            if ( nmax > 0 ) then
  556.                               $I_L556_406 = 0
  556.                               do
  556.                                  $I_L556_180 = 0
  556. !dir$ ivdep
  556.                                  do
  556.                                     t$1113(1 + $I_L556_180, 1 + $I_L556_406) = phsoil(1 + $I_L556_180, 1 + $I_L556_406)
  556.                                     $I_L556_180 = 1 + $I_L556_180
  556.                                     if ( $I_L556_180 >= $F_A51 ) exit
  556.                                  enddo
  556.                                  $I_L556_406 = 1 + $I_L556_406
  556.                                  if ( $I_L556_406 >= 3 ) exit
  556.                               enddo
  556.                            endif
  557.                            t$1116 = ( max( 0, nmax ) )
  557.                            t$1120 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  557.                            $F_A52 = nmax
  557.                            if ( nmax > 0 ) then
  557.                               $I_L557_408 = 0
  557.                               do
  557.                                  $I_L557_182 = 0
  557. !dir$ ivdep
  557.                                  do
  557.                                     t$1119(1 + $I_L557_182, 1 + $I_L557_408) = satcap(1 + $I_L557_182, 1 + $I_L557_408)
  557.                                     $I_L557_182 = 1 + $I_L557_182
  557.                                     if ( $I_L557_182 >= $F_A52 ) exit
  557.                                  enddo
  557.                                  $I_L557_408 = 1 + $I_L557_408
  557.                                  if ( $I_L557_408 >= 2 ) exit
  557.                               enddo
  557.                            endif
  557.                            t$1122 = ( max( 0, nmax ) )
  557.                            t$1126 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  557.                            $F_A53 = nmax
  557.                            if ( nmax > 0 ) then
  557.                               $I_L557_410 = 0
  557.                               do
  557.                                  $I_L557_184 = 0
  557. !dir$ ivdep
  557.                                  do
  557.                                     t$1125(1 + $I_L557_184, 1 + $I_L557_410) = snow(1 + $I_L557_184, 1 + $I_L557_410)
  557.                                     $I_L557_184 = 1 + $I_L557_184
  557.                                     if ( $I_L557_184 >= $F_A53 ) exit
  557.                                  enddo
  557.                                  $I_L557_410 = 1 + $I_L557_410
  557.                                  if ( $I_L557_410 >= 2 ) exit
  557.                               enddo
  557.                            endif
  558.                            t$1128 = ( max( 0, nmax ) )
  558.                            t$1132 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  558.                            $F_A54 = nmax
  558.                            if ( nmax > 0 ) then
  558.                               $I_L558_412 = 0
  558.                               do
  558.                                  $I_L558_186 = 0
  558. !dir$ ivdep
  558.                                  do
  558.                                     t$1131(1 + $I_L558_186, 1 + $I_L558_412) = stm(1 + $I_L558_186, 1 + $I_L558_412)
  558.                                     $I_L558_186 = 1 + $I_L558_186
  558.                                     if ( $I_L558_186 >= $F_A54 ) exit
  558.                                  enddo
  558.                                  $I_L558_412 = 1 + $I_L558_412
  558.                                  if ( $I_L558_412 >= 2 ) exit
  558.                               enddo
  558.                            endif
  559.                            t$1134 = ( max( 0, nmax ) )
  559.                            t$1140 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  559.                            $F_A55 = nmax
  559.                            if ( nmax > 0 ) then
  559.                               $I_L559_656 = 0
  559.                               do
  559.                                  $I_L559_604 = 0
  559.                                  do
  559.                                     $I_L559_414 = 0
  559.                                     do
  559.                                        $I_L559_188 = 0
  559. !dir$ ivdep
  559.                                        do
  559.                                           t$1139(1 + $I_L559_188, 1 + $I_L559_414, 1 + $I_L559_604, 1 + $I_L559_656) = extk(1 + $I_L559_188, 1 + $I_L559_414, 1 + $I_L559_604, 1 + $I_L559_656)
  559.                                           $I_L559_188 = 1 + $I_L559_188
  559.                                           if ( $I_L559_188 >= $F_A55 ) exit
  559.                                        enddo
  559.                                        $I_L559_414 = 1 + $I_L559_414
  559.                                        if ( $I_L559_414 >= 2 ) exit
  559.                                     enddo
  559.                                     $I_L559_604 = 1 + $I_L559_604
  559.                                     if ( $I_L559_604 >= 3 ) exit
  559.                                  enddo
  559.                                  $I_L559_656 = 1 + $I_L559_656
  559.                                  if ( $I_L559_656 >= 2 ) exit
  559.                               enddo
  559.                            endif
  559.                            t$1142 = ( max( 0, nmax ) )
  559.                            t$1148 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  559.                            $F_A56 = nmax
  559.                            if ( nmax > 0 ) then
  559.                               $I_L559_658 = 0
  559.                               do
  559.                                  $I_L559_606 = 0
  559.                                  do
  559.                                     $I_L559_416 = 0
  559.                                     do
  559.                                        $I_L559_190 = 0
  559. !dir$ ivdep
  559.                                        do
  559.                                           t$1147(1 + $I_L559_190, 1 + $I_L559_416, 1 + $I_L559_606, 1 + $I_L559_658) = radfac(1 + $I_L559_190, 1 + $I_L559_416, 1 + $I_L559_606, 1 + $I_L559_658)
  559.                                           $I_L559_190 = 1 + $I_L559_190
  559.                                           if ( $I_L559_190 >= $F_A56 ) exit
  559.                                        enddo
  559.                                        $I_L559_416 = 1 + $I_L559_416
  559.                                        if ( $I_L559_416 >= 2 ) exit
  559.                                     enddo
  559.                                     $I_L559_606 = 1 + $I_L559_606
  559.                                     if ( $I_L559_606 >= 3 ) exit
  559.                                  enddo
  559.                                  $I_L559_658 = 1 + $I_L559_658
  559.                                  if ( $I_L559_658 >= 2 ) exit
  559.                               enddo
  559.                            endif
  561.                            t$1150 = ( max( 0, nmax ) )
  561.                            t$1154 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  561.                            $F_A57 = nmax
  561.                            if ( nmax > 0 ) then
  561.                               $I_L561_418 = 0
  561.                               do
  561.                                  $I_L561_192 = 0
  561. !dir$ ivdep
  561.                                  do
  561.                                     t$1153(1 + $I_L561_192, 1 + $I_L561_418) = capac(1 + $I_L561_192, 1 + $I_L561_418)
  561.                                     $I_L561_192 = 1 + $I_L561_192
  561.                                     if ( $I_L561_192 >= $F_A57 ) exit
  561.                                  enddo
  561.                                  $I_L561_418 = 1 + $I_L561_418
  561.                                  if ( $I_L561_418 >= 2 ) exit
  561.                               enddo
  561.                            endif
  561.                            t$1156 = ( max( 0, nmax ) )
  561.                            t$1160 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  561.                            $F_A58 = nmax
  561.                            if ( nmax > 0 ) then
  561.                               $I_L561_420 = 0
  561.                               do
  561.                                  $I_L561_194 = 0
  561. !dir$ ivdep
  561.                                  do
  561.                                     t$1159(1 + $I_L561_194, 1 + $I_L561_420) = w(1 + $I_L561_194, 1 + $I_L561_420)
  561.                                     $I_L561_194 = 1 + $I_L561_194
  561.                                     if ( $I_L561_194 >= $F_A58 ) exit
  561.                                  enddo
  561.                                  $I_L561_420 = 1 + $I_L561_420
  561.                                  if ( $I_L561_420 >= 3 ) exit
  561.                               enddo
  561.                            endif
  563.                            t$1162 = ( max( 0, nmax ) )
  563.                            t$1167 = int( _alloc( max( 0, 48 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  563.                            $F_A59 = nmax
  563.                            if ( nmax > 0 ) then
  563.                               $I_L563_608 = 0
  563.                               do
  563.                                  $I_L563_422 = 0
  563.                                  do
  563.                                     $I_L563_196 = 0
  563. !dir$ ivdep
  563.                                     do
  563.                                        t$1166(1 + $I_L563_196, 1 + $I_L563_422, 1 + $I_L563_608) = radn(1 + $I_L563_196, 1 + $I_L563_422, 1 + $I_L563_608)
  563.                                        $I_L563_196 = 1 + $I_L563_196
  563.                                        if ( $I_L563_196 >= $F_A59 ) exit
  563.                                     enddo
  563.                                     $I_L563_422 = 1 + $I_L563_422
  563.                                     if ( $I_L563_422 >= 3 ) exit
  563.                                  enddo
  563.                                  $I_L563_608 = 1 + $I_L563_608
  563.                                  if ( $I_L563_608 >= 2 ) exit
  563.                               enddo
  563.                            endif
  565.                            t$1169 = ( max( 0, nmax ) )
  565.                            t$1173 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  565.                            $F_A60 = nmax
  565.                            if ( nmax > 0 ) then
  565.                               $I_L565_424 = 0
  565.                               do
  565.                                  $I_L565_198 = 0
  565. !dir$ ivdep
  565.                                  do
  565.                                     t$1172(1 + $I_L565_198, 1 + $I_L565_424) = zlt2(1 + $I_L565_198, 1 + $I_L565_424)
  565.                                     $I_L565_198 = 1 + $I_L565_198
  565.                                     if ( $I_L565_198 >= $F_A60 ) exit
  565.                                  enddo
  565.                                  $I_L565_424 = 1 + $I_L565_424
  565.                                  if ( $I_L565_424 >= 2 ) exit
  565.                               enddo
  565.                            endif
  565.                            t$1175 = ( max( 0, nmax ) )
  565.                            t$1179 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  565.                            $F_A61 = nmax
  565.                            if ( nmax > 0 ) then
  565.                               $I_L565_426 = 0
  565.                               do
  565.                                  $I_L565_200 = 0
  565. !dir$ ivdep
  565.                                  do
  565.                                     t$1178(1 + $I_L565_200, 1 + $I_L565_426) = green2(1 + $I_L565_200, 1 + $I_L565_426)
  565.                                     $I_L565_200 = 1 + $I_L565_200
  565.                                     if ( $I_L565_200 >= $F_A61 ) exit
  565.                                  enddo
  565.                                  $I_L565_426 = 1 + $I_L565_426
  565.                                  if ( $I_L565_426 >= 2 ) exit
  565.                               enddo
  565.                            endif
  565.                            t$1181 = ( max( 0, nmax ) )
  565.                            t$1185 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  565.                            $F_A62 = nmax
  565.                            if ( nmax > 0 ) then
  565.                               $I_L565_428 = 0
  565.                               do
  565.                                  $I_L565_202 = 0
  565. !dir$ ivdep
  565.                                  do
  565.                                     t$1184(1 + $I_L565_202, 1 + $I_L565_428) = chil2(1 + $I_L565_202, 1 + $I_L565_428)
  565.                                     $I_L565_202 = 1 + $I_L565_202
  565.                                     if ( $I_L565_202 >= $F_A62 ) exit
  565.                                  enddo
  565.                                  $I_L565_428 = 1 + $I_L565_428
  565.                                  if ( $I_L565_428 >= 2 ) exit
  565.                               enddo
  565.                            endif
  566.                            t$1187 = ( max( 0, nmax ) )
  566.                            t$1192 = int( _alloc( max( 0, 48 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  566.                            $F_A63 = nmax
  566.                            if ( nmax > 0 ) then
  566.                               $I_L566_610 = 0
  566.                               do
  566.                                  $I_L566_430 = 0
  566.                                  do
  566.                                     $I_L566_204 = 0
  566. !dir$ ivdep
  566.                                     do
  566.                                        t$1191(1 + $I_L566_204, 1 + $I_L566_430, 1 + $I_L566_610) = rstpar2(1 + $I_L566_204, 1 + $I_L566_430, 1 + $I_L566_610)
  566.                                        $I_L566_204 = 1 + $I_L566_204
  566.                                        if ( $I_L566_204 >= $F_A63 ) exit
  566.                                     enddo
  566.                                     $I_L566_430 = 1 + $I_L566_430
  566.                                     if ( $I_L566_430 >= 2 ) exit
  566.                                  enddo
  566.                                  $I_L566_610 = 1 + $I_L566_610
  566.                                  if ( $I_L566_610 >= 3 ) exit
  566.                               enddo
  566.                            endif
  566.                            t$1194 = ( max( 0, nmax ) )
  566.                            t$1198 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  566.                            $F_A64 = nmax
  566.                            if ( nmax > 0 ) then
  566.                               $I_L566_432 = 0
  566.                               do
  566.                                  $I_L566_206 = 0
  566. !dir$ ivdep
  566.                                  do
  566.                                     t$1197(1 + $I_L566_206, 1 + $I_L566_432) = topt2(1 + $I_L566_206, 1 + $I_L566_432)
  566.                                     $I_L566_206 = 1 + $I_L566_206
  566.                                     if ( $I_L566_206 >= $F_A64 ) exit
  566.                                  enddo
  566.                                  $I_L566_432 = 1 + $I_L566_432
  566.                                  if ( $I_L566_432 >= 2 ) exit
  566.                               enddo
  566.                            endif
  566.                            t$1200 = ( max( 0, nmax ) )
  566.                            t$1204 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  566.                            $F_A65 = nmax
  566.                            if ( nmax > 0 ) then
  566.                               $I_L566_434 = 0
  566.                               do
  566.                                  $I_L566_208 = 0
  566. !dir$ ivdep
  566.                                  do
  566.                                     t$1203(1 + $I_L566_208, 1 + $I_L566_434) = tll2(1 + $I_L566_208, 1 + $I_L566_434)
  566.                                     $I_L566_208 = 1 + $I_L566_208
  566.                                     if ( $I_L566_208 >= $F_A65 ) exit
  566.                                  enddo
  566.                                  $I_L566_434 = 1 + $I_L566_434
  566.                                  if ( $I_L566_434 >= 2 ) exit
  566.                               enddo
  566.                            endif
  566.                            t$1206 = ( max( 0, nmax ) )
  566.                            t$1210 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  566.                            $F_A66 = nmax
  566.                            if ( nmax > 0 ) then
  566.                               $I_L566_436 = 0
  566.                               do
  566.                                  $I_L566_210 = 0
  566. !dir$ ivdep
  566.                                  do
  566.                                     t$1209(1 + $I_L566_210, 1 + $I_L566_436) = tu2(1 + $I_L566_210, 1 + $I_L566_436)
  566.                                     $I_L566_210 = 1 + $I_L566_210
  566.                                     if ( $I_L566_210 >= $F_A66 ) exit
  566.                                  enddo
  566.                                  $I_L566_436 = 1 + $I_L566_436
  566.                                  if ( $I_L566_436 >= 2 ) exit
  566.                               enddo
  566.                            endif
  567.                            t$1212 = ( max( 0, nmax ) )
  567.                            t$1216 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  567.                            $F_A67 = nmax
  567.                            if ( nmax > 0 ) then
  567.                               $I_L567_438 = 0
  567.                               do
  567.                                  $I_L567_212 = 0
  567. !dir$ ivdep
  567.                                  do
  567.                                     t$1215(1 + $I_L567_212, 1 + $I_L567_438) = defac2(1 + $I_L567_212, 1 + $I_L567_438)
  567.                                     $I_L567_212 = 1 + $I_L567_212
  567.                                     if ( $I_L567_212 >= $F_A67 ) exit
  567.                                  enddo
  567.                                  $I_L567_438 = 1 + $I_L567_438
  567.                                  if ( $I_L567_438 >= 2 ) exit
  567.                               enddo
  567.                            endif
  567.                            t$1218 = ( max( 0, nmax ) )
  567.                            t$1222 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  567.                            $F_A68 = nmax
  567.                            if ( nmax > 0 ) then
  567.                               $I_L567_440 = 0
  567.                               do
  567.                                  $I_L567_214 = 0
  567. !dir$ ivdep
  567.                                  do
  567.                                     t$1221(1 + $I_L567_214, 1 + $I_L567_440) = ph12(1 + $I_L567_214, 1 + $I_L567_440)
  567.                                     $I_L567_214 = 1 + $I_L567_214
  567.                                     if ( $I_L567_214 >= $F_A68 ) exit
  567.                                  enddo
  567.                                  $I_L567_440 = 1 + $I_L567_440
  567.                                  if ( $I_L567_440 >= 2 ) exit
  567.                               enddo
  567.                            endif
  567.                            t$1224 = ( max( 0, nmax ) )
  567.                            t$1228 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  567.                            $F_A69 = nmax
  567.                            if ( nmax > 0 ) then
  567.                               $I_L567_442 = 0
  567.                               do
  567.                                  $I_L567_216 = 0
  567. !dir$ ivdep
  567.                                  do
  567.                                     t$1227(1 + $I_L567_216, 1 + $I_L567_442) = ph22(1 + $I_L567_216, 1 + $I_L567_442)
  567.                                     $I_L567_216 = 1 + $I_L567_216
  567.                                     if ( $I_L567_216 >= $F_A69 ) exit
  567.                                  enddo
  567.                                  $I_L567_442 = 1 + $I_L567_442
  567.                                  if ( $I_L567_442 >= 2 ) exit
  567.                               enddo
  567.                            endif
  538.                            call fysiks( t$1059(1, 1), z0x(1), d(1), rdc(1), rbc(1), z0(1), jdt, latitu, bps(1), psb(1), dzm(1), em(1), t$1065(1, 1), t$1071(1, 1), t$1077(1, 1), cu(1), cuni(1), ctni(1), ustar(1), cosz(1), sinclt(1), rhoair(1), psy(1), rcp(1), wc(1), wg(1), fc(1), fg(1), hr(1), ect(1), eci(1), egt(1), egi(1), egs(1), ec(1), eg(1), hc(1), hg(1), ecidif(1), egidif(1), ecmass(1), egmass(1), etmass(1), hflux(1), chf(1), shf(1), fluxef(1), roff(1), drag(1), ra(1), rb(1), rd(1), rc(1), rg(1), tcta(1), tgta(1), ta(1), ea(1), etc(1), etg(1), btc(1), btg(1), u2(1), t$1083(1, 1), t$1089(1, 1), t$1095(1, 1), t$1101(1, 1), rsoil(1), t$1107(1, 1), hrr(1), t$1113(1, 1), cc(1), cg(1), t$1119(1, 1), t$1125(1, 1), dtc(1), dtg(1), dtm(1), dqm(1), t$1131(1, 1), t$1139(1, 1, 1, 1), t$1147(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), tc(1), tg(1), td(1), t$1153(1, 1), t$1159(1, 1), qm(1), tm(1), um(1), vm(1), psur(1), ppc(1), ppl(1), t$1166(1, 1, 1), itype(1), dtc3x, mon(1), nmax, nmax, t$1172(1, 1), t$1178(1, 1), t$1184(1, 1), t$1191(1, 1, 1), t$1197(1, 1), t$1203(1, 1), t$1209(1, 1), t$1215(1, 1), t$1221(1, 1), t$1227(1, 1) )
  567.                            _free( t$1228 )
  567.                            _free( t$1222 )
  567.                            _free( t$1216 )
  566.                            _free( t$1210 )
  566.                            _free( t$1204 )
  566.                            _free( t$1198 )
  566.                            _free( t$1192 )
  565.                            _free( t$1185 )
  565.                            _free( t$1179 )
  565.                            _free( t$1173 )
  563.                            _free( t$1167 )
  538.                            $F_A70 = nmax
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_444 = 0
  538.                               do
  538.                                  $I_L538_218 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     w(1 + $I_L538_218, 1 + $I_L538_444) = t$1159(1 + $I_L538_218, 1 + $I_L538_444)
  538.                                     $I_L538_218 = 1 + $I_L538_218
  538.                                     if ( $I_L538_218 >= $F_A70 ) exit
  538.                                  enddo
  538.                                  $I_L538_444 = 1 + $I_L538_444
  538.                                  if ( $I_L538_444 >= 3 ) exit
  538.                               enddo
  538.                            endif
  561.                            _free( t$1160 )
  538.                            $F_A71 = nmax
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_446 = 0
  538.                               do
  538.                                  $I_L538_220 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     capac(1 + $I_L538_220, 1 + $I_L538_446) = t$1153(1 + $I_L538_220, 1 + $I_L538_446)
  538.                                     $I_L538_220 = 1 + $I_L538_220
  538.                                     if ( $I_L538_220 >= $F_A71 ) exit
  538.                                  enddo
  538.                                  $I_L538_446 = 1 + $I_L538_446
  538.                                  if ( $I_L538_446 >= 2 ) exit
  538.                               enddo
  538.                            endif
  561.                            _free( t$1154 )
  559.                            _free( t$1148 )
  538.                            $F_A72 = nmax
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_660 = 0
  538.                               do
  538.                                  $I_L538_612 = 0
  538.                                  do
  538.                                     $I_L538_448 = 0
  538.                                     do
  538.                                        $I_L538_222 = 0
  538. !dir$ ivdep
  538.                                        do
  538.                                           extk(1 + $I_L538_222, 1 + $I_L538_448, 1 + $I_L538_612, 1 + $I_L538_660) = t$1139(1 + $I_L538_222, 1 + $I_L538_448, 1 + $I_L538_612, 1 + $I_L538_660)
  538.                                           $I_L538_222 = 1 + $I_L538_222
  538.                                           if ( $I_L538_222 >= $F_A72 ) exit
  538.                                        enddo
  538.                                        $I_L538_448 = 1 + $I_L538_448
  538.                                        if ( $I_L538_448 >= 2 ) exit
  538.                                     enddo
  538.                                     $I_L538_612 = 1 + $I_L538_612
  538.                                     if ( $I_L538_612 >= 3 ) exit
  538.                                  enddo
  538.                                  $I_L538_660 = 1 + $I_L538_660
  538.                                  if ( $I_L538_660 >= 2 ) exit
  538.                               enddo
  538.                            endif
  559.                            _free( t$1140 )
  538.                            $F_A73 = nmax
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_450 = 0
  538.                               do
  538.                                  $I_L538_224 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     stm(1 + $I_L538_224, 1 + $I_L538_450) = t$1131(1 + $I_L538_224, 1 + $I_L538_450)
  538.                                     $I_L538_224 = 1 + $I_L538_224
  538.                                     if ( $I_L538_224 >= $F_A73 ) exit
  538.                                  enddo
  538.                                  $I_L538_450 = 1 + $I_L538_450
  538.                                  if ( $I_L538_450 >= 2 ) exit
  538.                               enddo
  538.                            endif
  558.                            _free( t$1132 )
  538.                            $F_A74 = nmax
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_452 = 0
  538.                               do
  538.                                  $I_L538_226 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     snow(1 + $I_L538_226, 1 + $I_L538_452) = t$1125(1 + $I_L538_226, 1 + $I_L538_452)
  538.                                     $I_L538_226 = 1 + $I_L538_226
  538.                                     if ( $I_L538_226 >= $F_A74 ) exit
  538.                                  enddo
  538.                                  $I_L538_452 = 1 + $I_L538_452
  538.                                  if ( $I_L538_452 >= 2 ) exit
  538.                               enddo
  538.                            endif
  557.                            _free( t$1126 )
  538.                            $F_A75 = nmax
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_454 = 0
  538.                               do
  538.                                  $I_L538_228 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     satcap(1 + $I_L538_228, 1 + $I_L538_454) = t$1119(1 + $I_L538_228, 1 + $I_L538_454)
  538.                                     $I_L538_228 = 1 + $I_L538_228
  538.                                     if ( $I_L538_228 >= $F_A75 ) exit
  538.                                  enddo
  538.                                  $I_L538_454 = 1 + $I_L538_454
  538.                                  if ( $I_L538_454 >= 2 ) exit
  538.                               enddo
  538.                            endif
  557.                            _free( t$1120 )
  538.                            $F_A76 = nmax
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_456 = 0
  538.                               do
  538.                                  $I_L538_230 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     phsoil(1 + $I_L538_230, 1 + $I_L538_456) = t$1113(1 + $I_L538_230, 1 + $I_L538_456)
  538.                                     $I_L538_230 = 1 + $I_L538_230
  538.                                     if ( $I_L538_230 >= $F_A76 ) exit
  538.                                  enddo
  538.                                  $I_L538_456 = 1 + $I_L538_456
  538.                                  if ( $I_L538_456 >= 3 ) exit
  538.                               enddo
  538.                            endif
  556.                            _free( t$1114 )
  538.                            $F_A77 = nmax
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_458 = 0
  538.                               do
  538.                                  $I_L538_232 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     phroot(1 + $I_L538_232, 1 + $I_L538_458) = t$1107(1 + $I_L538_232, 1 + $I_L538_458)
  538.                                     $I_L538_232 = 1 + $I_L538_232
  538.                                     if ( $I_L538_232 >= $F_A77 ) exit
  538.                                  enddo
  538.                                  $I_L538_458 = 1 + $I_L538_458
  538.                                  if ( $I_L538_458 >= 2 ) exit
  538.                               enddo
  538.                            endif
  556.                            _free( t$1108 )
  538.                            $F_A78 = nmax
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_460 = 0
  538.                               do
  538.                                  $I_L538_234 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     rst(1 + $I_L538_234, 1 + $I_L538_460) = t$1101(1 + $I_L538_234, 1 + $I_L538_460)
  538.                                     $I_L538_234 = 1 + $I_L538_234
  538.                                     if ( $I_L538_234 >= $F_A78 ) exit
  538.                                  enddo
  538.                                  $I_L538_460 = 1 + $I_L538_460
  538.                                  if ( $I_L538_460 >= 2 ) exit
  538.                               enddo
  538.                            endif
  555.                            _free( t$1102 )
  538.                            $F_A79 = nmax
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_462 = 0
  538.                               do
  538.                                  $I_L538_236 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     pd(1 + $I_L538_236, 1 + $I_L538_462) = t$1095(1 + $I_L538_236, 1 + $I_L538_462)
  538.                                     $I_L538_236 = 1 + $I_L538_236
  538.                                     if ( $I_L538_236 >= $F_A79 ) exit
  538.                                  enddo
  538.                                  $I_L538_462 = 1 + $I_L538_462
  538.                                  if ( $I_L538_462 >= 2 ) exit
  538.                               enddo
  538.                            endif
  555.                            _free( t$1096 )
  538.                            $F_A80 = nmax
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_464 = 0
  538.                               do
  538.                                  $I_L538_238 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     par(1 + $I_L538_238, 1 + $I_L538_464) = t$1089(1 + $I_L538_238, 1 + $I_L538_464)
  538.                                     $I_L538_238 = 1 + $I_L538_238
  538.                                     if ( $I_L538_238 >= $F_A80 ) exit
  538.                                  enddo
  538.                                  $I_L538_464 = 1 + $I_L538_464
  538.                                  if ( $I_L538_464 >= 2 ) exit
  538.                               enddo
  538.                            endif
  555.                            _free( t$1090 )
  538.                            $F_A81 = nmax
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_466 = 0
  538.                               do
  538.                                  $I_L538_240 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     radt(1 + $I_L538_240, 1 + $I_L538_466) = t$1083(1 + $I_L538_240, 1 + $I_L538_466)
  538.                                     $I_L538_240 = 1 + $I_L538_240
  538.                                     if ( $I_L538_240 >= $F_A81 ) exit
  538.                                  enddo
  538.                                  $I_L538_466 = 1 + $I_L538_466
  538.                                  if ( $I_L538_466 >= 2 ) exit
  538.                               enddo
  538.                            endif
  554.                            _free( t$1084 )
  538.                            $F_A82 = nmax
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_468 = 0
  538.                               do
  538.                                  $I_L538_242 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     gmu(1 + $I_L538_242, 1 + $I_L538_468) = t$1077(1 + $I_L538_242, 1 + $I_L538_468)
  538.                                     $I_L538_242 = 1 + $I_L538_242
  538.                                     if ( $I_L538_242 >= $F_A82 ) exit
  538.                                  enddo
  538.                                  $I_L538_468 = 1 + $I_L538_468
  538.                                  if ( $I_L538_468 >= 4 ) exit
  538.                               enddo
  538.                            endif
  542.                            _free( t$1078 )
  538.                            $F_A83 = nmax
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_470 = 0
  538.                               do
  538.                                  $I_L538_244 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     gmq(1 + $I_L538_244, 1 + $I_L538_470) = t$1071(1 + $I_L538_244, 1 + $I_L538_470)
  538.                                     $I_L538_244 = 1 + $I_L538_244
  538.                                     if ( $I_L538_244 >= $F_A83 ) exit
  538.                                  enddo
  538.                                  $I_L538_470 = 1 + $I_L538_470
  538.                                  if ( $I_L538_470 >= 3 ) exit
  538.                               enddo
  538.                            endif
  542.                            _free( t$1072 )
  538.                            $F_A84 = nmax
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_472 = 0
  538.                               do
  538.                                  $I_L538_246 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     gmt(1 + $I_L538_246, 1 + $I_L538_472) = t$1065(1 + $I_L538_246, 1 + $I_L538_472)
  538.                                     $I_L538_246 = 1 + $I_L538_246
  538.                                     if ( $I_L538_246 >= $F_A84 ) exit
  538.                                  enddo
  538.                                  $I_L538_472 = 1 + $I_L538_472
  538.                                  if ( $I_L538_472 >= 3 ) exit
  538.                               enddo
  538.                            endif
  542.                            _free( t$1066 )
  538.                            $F_A85 = nmax
  538.                            if ( nmax > 0 ) then
  538.                               $I_L538_474 = 0
  538.                               do
  538.                                  $I_L538_248 = 0
  538. !dir$ ivdep
  538.                                  do
  538.                                     vcover(1 + $I_L538_248, 1 + $I_L538_474) = t$1059(1 + $I_L538_248, 1 + $I_L538_474)
  538.                                     $I_L538_248 = 1 + $I_L538_248
  538.                                     if ( $I_L538_248 >= $F_A85 ) exit
  538.                                  enddo
  538.                                  $I_L538_474 = 1 + $I_L538_474
  538.                                  if ( $I_L538_474 >= 2 ) exit
  538.                               enddo
  538.                            endif
  539.                            _free( t$1060 )
  568.                            $ncount_S10 = 0
  569.                            if ( ncols > 0 ) then
  569.                               $I_L569_118 = 0
  569. !dir$ ivdep
  569.                               do
  570.                                  if ( imask(1 + $I_L569_118) > 0 ) then
  571.                                     $ncount_S10 = 1 + $ncount_S10
  572.                                     tm($ncount_S10) = gt(1 + $I_L569_118, 1)
  573.                                     qm($ncount_S10) = gq(1 + $I_L569_118, 1)
  574.                                     gmt($ncount_S10, 1) = tmtx(1 + $I_L569_118, 1, 1)
  575.                                     gmt($ncount_S10, 2) = tmtx(1 + $I_L569_118, 1, 2)
  576.                                     gmt($ncount_S10, 3) = tmtx(1 + $I_L569_118, 1, 3)
  577.                                     gmq($ncount_S10, 1) = qmtx(1 + $I_L569_118, 1, 1)
  578.                                     gmq($ncount_S10, 2) = qmtx(1 + $I_L569_118, 1, 2)
  579.                                     gmq($ncount_S10, 3) = qmtx(1 + $I_L569_118, 1, 3)
  580.                                     gmu($ncount_S10, 1) = umtx(1 + $I_L569_118, 1, 1)
  581.                                     gmu($ncount_S10, 2) = umtx(1 + $I_L569_118, 1, 2)
  582.                                     gmu($ncount_S10, 3) = umtx(1 + $I_L569_118, 1, 3)
  583.                                     gmu($ncount_S10, 4) = umtx(1 + $I_L569_118, 1, 4)
  583.                                  endif
  585.                                  $I_L569_118 = 1 + $I_L569_118
  584.                                  if ( $I_L569_118 >= ncols ) exit
  584.                               enddo
  584.                            endif
  586.                            $I_L529_676 = 1 + $I_L529_676
  585.                            if ( $I_L529_676 >= $intsib_S8 ) exit
  585.                         enddo
  585.                      endif
  587.                      if ( nmax > 0 ) then
  595.                         if ( $I_L496_678 == 0 ) then
  587.                            $I_L587_120 = 0
  587. !dir$ ivdep
  587.                            do
  588.                               capac(1 + $I_L587_120, 1) = capacm(1 + $I_L587_120, 1)
  589.                               capac(1 + $I_L587_120, 2) = capacm(1 + $I_L587_120, 2)
  590.                               w(1 + $I_L587_120, 1) = wm(1 + $I_L587_120, 1)
  591.                               w(1 + $I_L587_120, 2) = wm(1 + $I_L587_120, 2)
  592.                               w(1 + $I_L587_120, 3) = wm(1 + $I_L587_120, 3)
  593.                               td(1 + $I_L587_120) = tdm(1 + $I_L587_120)
  594.                               tc(1 + $I_L587_120) = tcm(1 + $I_L587_120)
  596.                               tmin(1 + $I_L587_120) = tg(1 + $I_L587_120)
  600.                               tg(1 + $I_L587_120) = tgm(1 + $I_L587_120)
  601.                               $I_L587_120 = 1 + $I_L587_120
  599.                               if ( $I_L587_120 >= nmax ) exit
  599.                            enddo
  599.                         else
  587.                            $I_L587_142 = 0
  587. !dir$ ivdep
  587.                            do
  588.                               capac(1 + $I_L587_142, 1) = capacm(1 + $I_L587_142, 1)
  589.                               capac(1 + $I_L587_142, 2) = capacm(1 + $I_L587_142, 2)
  590.                               w(1 + $I_L587_142, 1) = wm(1 + $I_L587_142, 1)
  591.                               w(1 + $I_L587_142, 2) = wm(1 + $I_L587_142, 2)
  592.                               w(1 + $I_L587_142, 3) = wm(1 + $I_L587_142, 3)
  593.                               td(1 + $I_L587_142) = tdm(1 + $I_L587_142)
  594.                               tc(1 + $I_L587_142) = tcm(1 + $I_L587_142)
  598.                               tmax(1 + $I_L587_142) = tg(1 + $I_L587_142)
  600.                               tg(1 + $I_L587_142) = tgm(1 + $I_L587_142)
  601.                               $I_L587_142 = 1 + $I_L587_142
  599.                               if ( $I_L587_142 >= nmax ) exit
  599.                            enddo
  599.                         endif
  599.                      endif
  602.                      $I_L496_678 = 1 + $I_L496_678
  601.                      if ( $I_L496_678 >= $nint_S4 ) exit
  601.                   enddo
  601.                endif
  603.                if ( nmax > 0 ) then
  603.                   $I_L603_122 = 0
  603. !dir$ ivdep
  603.                   do
  604.                      $td_WR0_R0 = 4.5000000000000001e-1 * ( tmax(1 + $I_L603_122) + tmin(1 + $I_L603_122) ) + 1.0000000000000001e-1 * tdm(1 + $I_L603_122)
  604.                      td(1 + $I_L603_122) = $td_WR0_R0
  605.                      tdm(1 + $I_L603_122) = $td_WR0_R0
  606.                      td0(1 + $I_L603_122) = $td_WR0_R0
  607.                      $I_L603_122 = 1 + $I_L603_122
  603.                      if ( $I_L603_122 >= nmax ) exit
  603.                   enddo
  603.                endif
  611.                $ncount_S15 = 0
  612.                if ( ncols > 0 ) then
  612.                   $I_L612_124 = 0
  612. !dir$ ivdep
  612.                   do
  613.                      if ( imask(1 + $I_L612_124) > 0 ) then
  614.                         $ncount_S15 = 1 + $ncount_S15
  615.                         cosz($ncount_S15) = zenith(1 + $I_L612_124)
  615.                      endif
  617.                      $I_L612_124 = 1 + $I_L612_124
  616.                      if ( $I_L612_124 >= ncols ) exit
  616.                   enddo
  616.                endif
  618.                if ( nmax > 0 ) then
  618.                   $I_L618_126 = 0
  618. !dir$ ivdep
  618.                   do
  619.                      if ( cosz(1 + $I_L618_126) < 0.0 ) then
  620.                         tgm(1 + $I_L618_126) = tmin(1 + $I_L618_126)
  621.                         tg0(1 + $I_L618_126) = tmin(1 + $I_L618_126)
  621.                      endif
  623.                      $I_L618_126 = 1 + $I_L618_126
  622.                      if ( $I_L618_126 >= nmax ) exit
  622.                   enddo
  622.                endif
  626.                t$1245 = ( max( 0, nmax ) )
  626.                t$1249 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  626.                $F_A86 = nmax
  626.                if ( nmax > 0 ) then
  626.                   $I_L626_476 = 0
  626.                   do
  626.                      $I_L626_250 = 0
  626. !dir$ ivdep
  626.                      do
  626.                         t$1248(1 + $I_L626_250, 1 + $I_L626_476) = capac(1 + $I_L626_250, 1 + $I_L626_476)
  626.                         $I_L626_250 = 1 + $I_L626_250
  626.                         if ( $I_L626_250 >= $F_A86 ) exit
  626.                      enddo
  626.                      $I_L626_476 = 1 + $I_L626_476
  626.                      if ( $I_L626_476 >= 2 ) exit
  626.                   enddo
  626.                endif
  627.                t$1251 = ( max( 0, nmax ) )
  627.                t$1255 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  627.                $F_A87 = nmax
  627.                if ( nmax > 0 ) then
  627.                   $I_L627_478 = 0
  627.                   do
  627.                      $I_L627_252 = 0
  627. !dir$ ivdep
  627.                      do
  627.                         t$1254(1 + $I_L627_252, 1 + $I_L627_478) = satcap(1 + $I_L627_252, 1 + $I_L627_478)
  627.                         $I_L627_252 = 1 + $I_L627_252
  627.                         if ( $I_L627_252 >= $F_A87 ) exit
  627.                      enddo
  627.                      $I_L627_478 = 1 + $I_L627_478
  627.                      if ( $I_L627_478 >= 2 ) exit
  627.                   enddo
  627.                endif
  627.                t$1257 = ( max( 0, nmax ) )
  627.                t$1263 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  627.                $F_A88 = nmax
  627.                if ( nmax > 0 ) then
  627.                   $I_L627_662 = 0
  627.                   do
  627.                      $I_L627_614 = 0
  627.                      do
  627.                         $I_L627_480 = 0
  627.                         do
  627.                            $I_L627_254 = 0
  627. !dir$ ivdep
  627.                            do
  627.                               t$1262(1 + $I_L627_254, 1 + $I_L627_480, 1 + $I_L627_614, 1 + $I_L627_662) = extk(1 + $I_L627_254, 1 + $I_L627_480, 1 + $I_L627_614, 1 + $I_L627_662)
  627.                               $I_L627_254 = 1 + $I_L627_254
  627.                               if ( $I_L627_254 >= $F_A88 ) exit
  627.                            enddo
  627.                            $I_L627_480 = 1 + $I_L627_480
  627.                            if ( $I_L627_480 >= 2 ) exit
  627.                         enddo
  627.                         $I_L627_614 = 1 + $I_L627_614
  627.                         if ( $I_L627_614 >= 3 ) exit
  627.                      enddo
  627.                      $I_L627_662 = 1 + $I_L627_662
  627.                      if ( $I_L627_662 >= 2 ) exit
  627.                   enddo
  627.                endif
  627.                t$1265 = ( max( 0, nmax ) )
  627.                t$1271 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  627.                $F_A89 = nmax
  627.                if ( nmax > 0 ) then
  627.                   $I_L627_664 = 0
  627.                   do
  627.                      $I_L627_616 = 0
  627.                      do
  627.                         $I_L627_482 = 0
  627.                         do
  627.                            $I_L627_256 = 0
  627. !dir$ ivdep
  627.                            do
  627.                               t$1270(1 + $I_L627_256, 1 + $I_L627_482, 1 + $I_L627_616, 1 + $I_L627_664) = radfac(1 + $I_L627_256, 1 + $I_L627_482, 1 + $I_L627_616, 1 + $I_L627_664)
  627.                               $I_L627_256 = 1 + $I_L627_256
  627.                               if ( $I_L627_256 >= $F_A89 ) exit
  627.                            enddo
  627.                            $I_L627_482 = 1 + $I_L627_482
  627.                            if ( $I_L627_482 >= 2 ) exit
  627.                         enddo
  627.                         $I_L627_616 = 1 + $I_L627_616
  627.                         if ( $I_L627_616 >= 3 ) exit
  627.                      enddo
  627.                      $I_L627_664 = 1 + $I_L627_664
  627.                      if ( $I_L627_664 >= 2 ) exit
  627.                   enddo
  627.                endif
  629.                t$1273 = ( max( 0, nmax ) )
  629.                t$1278 = int( _alloc( max( 0, 32 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  629.                $F_A90 = nmax
  629.                if ( nmax > 0 ) then
  629.                   $I_L629_618 = 0
  629.                   do
  629.                      $I_L629_484 = 0
  629.                      do
  629.                         $I_L629_258 = 0
  629. !dir$ ivdep
  629.                         do
  629.                            t$1277(1 + $I_L629_258, 1 + $I_L629_484, 1 + $I_L629_618) = salb(1 + $I_L629_258, 1 + $I_L629_484, 1 + $I_L629_618)
  629.                            $I_L629_258 = 1 + $I_L629_258
  629.                            if ( $I_L629_258 >= $F_A90 ) exit
  629.                         enddo
  629.                         $I_L629_484 = 1 + $I_L629_484
  629.                         if ( $I_L629_484 >= 2 ) exit
  629.                      enddo
  629.                      $I_L629_618 = 1 + $I_L629_618
  629.                      if ( $I_L629_618 >= 2 ) exit
  629.                   enddo
  629.                endif
  624.                call radalb( nmax, mon(1), nmax, itype(1), tc(1), tg(1), t$1248(1, 1), t$1254(1, 1), t$1262(1, 1, 1, 1), t$1270(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), zlwup(1), t$1277(1, 1, 1), tgeff(1), cosz(1), nsx(1), latitu )
  624.                $F_A91 = nmax
  624.                if ( nmax > 0 ) then
  624.                   $I_L624_620 = 0
  624.                   do
  624.                      $I_L624_486 = 0
  624.                      do
  624.                         $I_L624_260 = 0
  624. !dir$ ivdep
  624.                         do
  624.                            salb(1 + $I_L624_260, 1 + $I_L624_486, 1 + $I_L624_620) = t$1277(1 + $I_L624_260, 1 + $I_L624_486, 1 + $I_L624_620)
  624.                            $I_L624_260 = 1 + $I_L624_260
  624.                            if ( $I_L624_260 >= $F_A91 ) exit
  624.                         enddo
  624.                         $I_L624_486 = 1 + $I_L624_486
  624.                         if ( $I_L624_486 >= 2 ) exit
  624.                      enddo
  624.                      $I_L624_620 = 1 + $I_L624_620
  624.                      if ( $I_L624_620 >= 2 ) exit
  624.                   enddo
  624.                endif
  629.                _free( t$1278 )
  624.                $F_A92 = nmax
  624.                if ( nmax > 0 ) then
  624.                   $I_L624_666 = 0
  624.                   do
  624.                      $I_L624_622 = 0
  624.                      do
  624.                         $I_L624_488 = 0
  624.                         do
  624.                            $I_L624_262 = 0
  624. !dir$ ivdep
  624.                            do
  624.                               radfac(1 + $I_L624_262, 1 + $I_L624_488, 1 + $I_L624_622, 1 + $I_L624_666) = t$1270(1 + $I_L624_262, 1 + $I_L624_488, 1 + $I_L624_622, 1 + $I_L624_666)
  624.                               $I_L624_262 = 1 + $I_L624_262
  624.                               if ( $I_L624_262 >= $F_A92 ) exit
  624.                            enddo
  624.                            $I_L624_488 = 1 + $I_L624_488
  624.                            if ( $I_L624_488 >= 2 ) exit
  624.                         enddo
  624.                         $I_L624_622 = 1 + $I_L624_622
  624.                         if ( $I_L624_622 >= 3 ) exit
  624.                      enddo
  624.                      $I_L624_666 = 1 + $I_L624_666
  624.                      if ( $I_L624_666 >= 2 ) exit
  624.                   enddo
  624.                endif
  627.                _free( t$1271 )
  624.                $F_A93 = nmax
  624.                if ( nmax > 0 ) then
  624.                   $I_L624_668 = 0
  624.                   do
  624.                      $I_L624_624 = 0
  624.                      do
  624.                         $I_L624_490 = 0
  624.                         do
  624.                            $I_L624_264 = 0
  624. !dir$ ivdep
  624.                            do
  624.                               extk(1 + $I_L624_264, 1 + $I_L624_490, 1 + $I_L624_624, 1 + $I_L624_668) = t$1262(1 + $I_L624_264, 1 + $I_L624_490, 1 + $I_L624_624, 1 + $I_L624_668)
  624.                               $I_L624_264 = 1 + $I_L624_264
  624.                               if ( $I_L624_264 >= $F_A93 ) exit
  624.                            enddo
  624.                            $I_L624_490 = 1 + $I_L624_490
  624.                            if ( $I_L624_490 >= 2 ) exit
  624.                         enddo
  624.                         $I_L624_624 = 1 + $I_L624_624
  624.                         if ( $I_L624_624 >= 3 ) exit
  624.                      enddo
  624.                      $I_L624_668 = 1 + $I_L624_668
  624.                      if ( $I_L624_668 >= 2 ) exit
  624.                   enddo
  624.                endif
  627.                _free( t$1263 )
  624.                $F_A94 = nmax
  624.                if ( nmax > 0 ) then
  624.                   $I_L624_492 = 0
  624.                   do
  624.                      $I_L624_266 = 0
  624. !dir$ ivdep
  624.                      do
  624.                         satcap(1 + $I_L624_266, 1 + $I_L624_492) = t$1254(1 + $I_L624_266, 1 + $I_L624_492)
  624.                         $I_L624_266 = 1 + $I_L624_266
  624.                         if ( $I_L624_266 >= $F_A94 ) exit
  624.                      enddo
  624.                      $I_L624_492 = 1 + $I_L624_492
  624.                      if ( $I_L624_492 >= 2 ) exit
  624.                   enddo
  624.                endif
  627.                _free( t$1255 )
  626.                _free( t$1249 )
  626.             endif
  626.          endif
  626.       endif
  633.       if ( nmax > 0 ) then
  634.          $ncount_S18 = 0
  635.          if ( ncols > 0 ) then
  635.             $I_L635_128 = 0
  635. !dir$ ivdep
  635.             do
  636.                if ( imask(1 + $I_L635_128) > 0 ) then
  637.                   $ncount_S18 = 1 + $ncount_S18
  641.                   if ( cosz($ncount_S18) >= 1.746e-2 ) then
  642.                      radn($ncount_S18, 1, 1) = xvisb(1 + $I_L635_128)
  643.                      radn($ncount_S18, 1, 2) = xvisd(1 + $I_L635_128)
  644.                      radn($ncount_S18, 2, 1) = xnirb(1 + $I_L635_128)
  645.                      radn($ncount_S18, 2, 2) = xnird(1 + $I_L635_128)
  645.                   else
  647.                      radn($ncount_S18, 1, 1) = 0.0
  648.                      radn($ncount_S18, 1, 2) = 0.0
  649.                      radn($ncount_S18, 2, 1) = 0.0
  650.                      radn($ncount_S18, 2, 2) = 0.0
  650.                   endif
  652.                   radn($ncount_S18, 3, 1) = 0.0
  653.                   radn($ncount_S18, 3, 2) = dlwbot(1 + $I_L635_128)
  657.                   ppl($ncount_S18) = ppli(1 + $I_L635_128)
  658.                   ppc($ncount_S18) = ppci(1 + $I_L635_128)
  658.                endif
  660.                $I_L635_128 = 1 + $I_L635_128
  659.                if ( $I_L635_128 >= ncols ) exit
  659.             enddo
  659.          endif
  662.          t$1283 = ( max( 0, nmax ) )
  662.          t$1287 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  662.          $F_A95 = nmax
  662.          $I_L662_494 = 0
  662.          do
  662.             $I_L662_268 = 0
  662. !dir$ ivdep
  662.             do
  662.                t$1286(1 + $I_L662_268, 1 + $I_L662_494) = vcover(1 + $I_L662_268, 1 + $I_L662_494)
  662.                $I_L662_268 = 1 + $I_L662_268
  662.                if ( $I_L662_268 >= $F_A95 ) exit
  662.             enddo
  662.             $I_L662_494 = 1 + $I_L662_494
  662.             if ( $I_L662_494 >= 2 ) exit
  662.          enddo
  665.          t$1289 = ( max( 0, nmax ) )
  665.          t$1293 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  665.          $F_A96 = nmax
  665.          $I_L665_496 = 0
  665.          do
  665.             $I_L665_270 = 0
  665. !dir$ ivdep
  665.             do
  665.                t$1292(1 + $I_L665_270, 1 + $I_L665_496) = gmt(1 + $I_L665_270, 1 + $I_L665_496)
  665.                $I_L665_270 = 1 + $I_L665_270
  665.                if ( $I_L665_270 >= $F_A96 ) exit
  665.             enddo
  665.             $I_L665_496 = 1 + $I_L665_496
  665.             if ( $I_L665_496 >= 3 ) exit
  665.          enddo
  665.          t$1295 = ( max( 0, nmax ) )
  665.          t$1299 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  665.          $F_A97 = nmax
  665.          $I_L665_498 = 0
  665.          do
  665.             $I_L665_272 = 0
  665. !dir$ ivdep
  665.             do
  665.                t$1298(1 + $I_L665_272, 1 + $I_L665_498) = gmq(1 + $I_L665_272, 1 + $I_L665_498)
  665.                $I_L665_272 = 1 + $I_L665_272
  665.                if ( $I_L665_272 >= $F_A97 ) exit
  665.             enddo
  665.             $I_L665_498 = 1 + $I_L665_498
  665.             if ( $I_L665_498 >= 3 ) exit
  665.          enddo
  665.          t$1301 = ( max( 0, nmax ) )
  665.          t$1305 = int( _alloc( max( 0, 32 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  665.          $F_A98 = nmax
  665.          $I_L665_500 = 0
  665.          do
  665.             $I_L665_274 = 0
  665. !dir$ ivdep
  665.             do
  665.                t$1304(1 + $I_L665_274, 1 + $I_L665_500) = gmu(1 + $I_L665_274, 1 + $I_L665_500)
  665.                $I_L665_274 = 1 + $I_L665_274
  665.                if ( $I_L665_274 >= $F_A98 ) exit
  665.             enddo
  665.             $I_L665_500 = 1 + $I_L665_500
  665.             if ( $I_L665_500 >= 4 ) exit
  665.          enddo
  677.          t$1307 = ( max( 0, nmax ) )
  677.          t$1311 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  677.          $F_A99 = nmax
  677.          $I_L677_502 = 0
  677.          do
  677.             $I_L677_276 = 0
  677. !dir$ ivdep
  677.             do
  677.                t$1310(1 + $I_L677_276, 1 + $I_L677_502) = radt(1 + $I_L677_276, 1 + $I_L677_502)
  677.                $I_L677_276 = 1 + $I_L677_276
  677.                if ( $I_L677_276 >= $F_A99 ) exit
  677.             enddo
  677.             $I_L677_502 = 1 + $I_L677_502
  677.             if ( $I_L677_502 >= 2 ) exit
  677.          enddo
  678.          t$1313 = ( max( 0, nmax ) )
  678.          t$1317 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  678.          $F_A100 = nmax
  678.          $I_L678_504 = 0
  678.          do
  678.             $I_L678_278 = 0
  678. !dir$ ivdep
  678.             do
  678.                t$1316(1 + $I_L678_278, 1 + $I_L678_504) = par(1 + $I_L678_278, 1 + $I_L678_504)
  678.                $I_L678_278 = 1 + $I_L678_278
  678.                if ( $I_L678_278 >= $F_A100 ) exit
  678.             enddo
  678.             $I_L678_504 = 1 + $I_L678_504
  678.             if ( $I_L678_504 >= 2 ) exit
  678.          enddo
  678.          t$1319 = ( max( 0, nmax ) )
  678.          t$1323 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  678.          $F_A101 = nmax
  678.          $I_L678_506 = 0
  678.          do
  678.             $I_L678_280 = 0
  678. !dir$ ivdep
  678.             do
  678.                t$1322(1 + $I_L678_280, 1 + $I_L678_506) = pd(1 + $I_L678_280, 1 + $I_L678_506)
  678.                $I_L678_280 = 1 + $I_L678_280
  678.                if ( $I_L678_280 >= $F_A101 ) exit
  678.             enddo
  678.             $I_L678_506 = 1 + $I_L678_506
  678.             if ( $I_L678_506 >= 2 ) exit
  678.          enddo
  678.          t$1325 = ( max( 0, nmax ) )
  678.          t$1329 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  678.          $F_A102 = nmax
  678.          $I_L678_508 = 0
  678.          do
  678.             $I_L678_282 = 0
  678. !dir$ ivdep
  678.             do
  678.                t$1328(1 + $I_L678_282, 1 + $I_L678_508) = rst(1 + $I_L678_282, 1 + $I_L678_508)
  678.                $I_L678_282 = 1 + $I_L678_282
  678.                if ( $I_L678_282 >= $F_A102 ) exit
  678.             enddo
  678.             $I_L678_508 = 1 + $I_L678_508
  678.             if ( $I_L678_508 >= 2 ) exit
  678.          enddo
  679.          t$1331 = ( max( 0, nmax ) )
  679.          t$1335 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  679.          $F_A103 = nmax
  679.          $I_L679_510 = 0
  679.          do
  679.             $I_L679_284 = 0
  679. !dir$ ivdep
  679.             do
  679.                t$1334(1 + $I_L679_284, 1 + $I_L679_510) = phroot(1 + $I_L679_284, 1 + $I_L679_510)
  679.                $I_L679_284 = 1 + $I_L679_284
  679.                if ( $I_L679_284 >= $F_A103 ) exit
  679.             enddo
  679.             $I_L679_510 = 1 + $I_L679_510
  679.             if ( $I_L679_510 >= 2 ) exit
  679.          enddo
  679.          t$1337 = ( max( 0, nmax ) )
  679.          t$1341 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  679.          $F_A104 = nmax
  679.          $I_L679_512 = 0
  679.          do
  679.             $I_L679_286 = 0
  679. !dir$ ivdep
  679.             do
  679.                t$1340(1 + $I_L679_286, 1 + $I_L679_512) = phsoil(1 + $I_L679_286, 1 + $I_L679_512)
  679.                $I_L679_286 = 1 + $I_L679_286
  679.                if ( $I_L679_286 >= $F_A104 ) exit
  679.             enddo
  679.             $I_L679_512 = 1 + $I_L679_512
  679.             if ( $I_L679_512 >= 3 ) exit
  679.          enddo
  680.          t$1343 = ( max( 0, nmax ) )
  680.          t$1347 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  680.          $F_A105 = nmax
  680.          $I_L680_514 = 0
  680.          do
  680.             $I_L680_288 = 0
  680. !dir$ ivdep
  680.             do
  680.                t$1346(1 + $I_L680_288, 1 + $I_L680_514) = satcap(1 + $I_L680_288, 1 + $I_L680_514)
  680.                $I_L680_288 = 1 + $I_L680_288
  680.                if ( $I_L680_288 >= $F_A105 ) exit
  680.             enddo
  680.             $I_L680_514 = 1 + $I_L680_514
  680.             if ( $I_L680_514 >= 2 ) exit
  680.          enddo
  680.          t$1349 = ( max( 0, nmax ) )
  680.          t$1353 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  680.          $F_A106 = nmax
  680.          $I_L680_516 = 0
  680.          do
  680.             $I_L680_290 = 0
  680. !dir$ ivdep
  680.             do
  680.                t$1352(1 + $I_L680_290, 1 + $I_L680_516) = snow(1 + $I_L680_290, 1 + $I_L680_516)
  680.                $I_L680_290 = 1 + $I_L680_290
  680.                if ( $I_L680_290 >= $F_A106 ) exit
  680.             enddo
  680.             $I_L680_516 = 1 + $I_L680_516
  680.             if ( $I_L680_516 >= 2 ) exit
  680.          enddo
  681.          t$1355 = ( max( 0, nmax ) )
  681.          t$1359 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  681.          $F_A107 = nmax
  681.          $I_L681_518 = 0
  681.          do
  681.             $I_L681_292 = 0
  681. !dir$ ivdep
  681.             do
  681.                t$1358(1 + $I_L681_292, 1 + $I_L681_518) = stm(1 + $I_L681_292, 1 + $I_L681_518)
  681.                $I_L681_292 = 1 + $I_L681_292
  681.                if ( $I_L681_292 >= $F_A107 ) exit
  681.             enddo
  681.             $I_L681_518 = 1 + $I_L681_518
  681.             if ( $I_L681_518 >= 2 ) exit
  681.          enddo
  682.          t$1361 = ( max( 0, nmax ) )
  682.          t$1367 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  682.          $F_A108 = nmax
  682.          $I_L682_670 = 0
  682.          do
  682.             $I_L682_626 = 0
  682.             do
  682.                $I_L682_520 = 0
  682.                do
  682.                   $I_L682_294 = 0
  682. !dir$ ivdep
  682.                   do
  682.                      t$1366(1 + $I_L682_294, 1 + $I_L682_520, 1 + $I_L682_626, 1 + $I_L682_670) = extk(1 + $I_L682_294, 1 + $I_L682_520, 1 + $I_L682_626, 1 + $I_L682_670)
  682.                      $I_L682_294 = 1 + $I_L682_294
  682.                      if ( $I_L682_294 >= $F_A108 ) exit
  682.                   enddo
  682.                   $I_L682_520 = 1 + $I_L682_520
  682.                   if ( $I_L682_520 >= 2 ) exit
  682.                enddo
  682.                $I_L682_626 = 1 + $I_L682_626
  682.                if ( $I_L682_626 >= 3 ) exit
  682.             enddo
  682.             $I_L682_670 = 1 + $I_L682_670
  682.             if ( $I_L682_670 >= 2 ) exit
  682.          enddo
  682.          t$1369 = ( max( 0, nmax ) )
  682.          t$1375 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  682.          $F_A109 = nmax
  682.          $I_L682_672 = 0
  682.          do
  682.             $I_L682_628 = 0
  682.             do
  682.                $I_L682_522 = 0
  682.                do
  682.                   $I_L682_296 = 0
  682. !dir$ ivdep
  682.                   do
  682.                      t$1374(1 + $I_L682_296, 1 + $I_L682_522, 1 + $I_L682_628, 1 + $I_L682_672) = radfac(1 + $I_L682_296, 1 + $I_L682_522, 1 + $I_L682_628, 1 + $I_L682_672)
  682.                      $I_L682_296 = 1 + $I_L682_296
  682.                      if ( $I_L682_296 >= $F_A109 ) exit
  682.                   enddo
  682.                   $I_L682_522 = 1 + $I_L682_522
  682.                   if ( $I_L682_522 >= 2 ) exit
  682.                enddo
  682.                $I_L682_628 = 1 + $I_L682_628
  682.                if ( $I_L682_628 >= 3 ) exit
  682.             enddo
  682.             $I_L682_672 = 1 + $I_L682_672
  682.             if ( $I_L682_672 >= 2 ) exit
  682.          enddo
  684.          t$1377 = ( max( 0, nmax ) )
  684.          t$1381 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  684.          $F_A110 = nmax
  684.          $I_L684_524 = 0
  684.          do
  684.             $I_L684_298 = 0
  684. !dir$ ivdep
  684.             do
  684.                t$1380(1 + $I_L684_298, 1 + $I_L684_524) = capac(1 + $I_L684_298, 1 + $I_L684_524)
  684.                $I_L684_298 = 1 + $I_L684_298
  684.                if ( $I_L684_298 >= $F_A110 ) exit
  684.             enddo
  684.             $I_L684_524 = 1 + $I_L684_524
  684.             if ( $I_L684_524 >= 2 ) exit
  684.          enddo
  684.          t$1383 = ( max( 0, nmax ) )
  684.          t$1387 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  684.          $F_A111 = nmax
  684.          $I_L684_526 = 0
  684.          do
  684.             $I_L684_300 = 0
  684. !dir$ ivdep
  684.             do
  684.                t$1386(1 + $I_L684_300, 1 + $I_L684_526) = w(1 + $I_L684_300, 1 + $I_L684_526)
  684.                $I_L684_300 = 1 + $I_L684_300
  684.                if ( $I_L684_300 >= $F_A111 ) exit
  684.             enddo
  684.             $I_L684_526 = 1 + $I_L684_526
  684.             if ( $I_L684_526 >= 3 ) exit
  684.          enddo
  686.          t$1389 = ( max( 0, nmax ) )
  686.          t$1394 = int( _alloc( max( 0, 48 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  686.          $F_A112 = nmax
  686.          $I_L686_630 = 0
  686.          do
  686.             $I_L686_528 = 0
  686.             do
  686.                $I_L686_302 = 0
  686. !dir$ ivdep
  686.                do
  686.                   t$1393(1 + $I_L686_302, 1 + $I_L686_528, 1 + $I_L686_630) = radn(1 + $I_L686_302, 1 + $I_L686_528, 1 + $I_L686_630)
  686.                   $I_L686_302 = 1 + $I_L686_302
  686.                   if ( $I_L686_302 >= $F_A112 ) exit
  686.                enddo
  686.                $I_L686_528 = 1 + $I_L686_528
  686.                if ( $I_L686_528 >= 3 ) exit
  686.             enddo
  686.             $I_L686_630 = 1 + $I_L686_630
  686.             if ( $I_L686_630 >= 2 ) exit
  686.          enddo
  688.          t$1396 = ( max( 0, nmax ) )
  688.          t$1400 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  688.          $F_A113 = nmax
  688.          $I_L688_530 = 0
  688.          do
  688.             $I_L688_304 = 0
  688. !dir$ ivdep
  688.             do
  688.                t$1399(1 + $I_L688_304, 1 + $I_L688_530) = zlt2(1 + $I_L688_304, 1 + $I_L688_530)
  688.                $I_L688_304 = 1 + $I_L688_304
  688.                if ( $I_L688_304 >= $F_A113 ) exit
  688.             enddo
  688.             $I_L688_530 = 1 + $I_L688_530
  688.             if ( $I_L688_530 >= 2 ) exit
  688.          enddo
  688.          t$1402 = ( max( 0, nmax ) )
  688.          t$1406 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  688.          $F_A114 = nmax
  688.          $I_L688_532 = 0
  688.          do
  688.             $I_L688_306 = 0
  688. !dir$ ivdep
  688.             do
  688.                t$1405(1 + $I_L688_306, 1 + $I_L688_532) = green2(1 + $I_L688_306, 1 + $I_L688_532)
  688.                $I_L688_306 = 1 + $I_L688_306
  688.                if ( $I_L688_306 >= $F_A114 ) exit
  688.             enddo
  688.             $I_L688_532 = 1 + $I_L688_532
  688.             if ( $I_L688_532 >= 2 ) exit
  688.          enddo
  688.          t$1408 = ( max( 0, nmax ) )
  688.          t$1412 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  688.          $F_A115 = nmax
  688.          $I_L688_534 = 0
  688.          do
  688.             $I_L688_308 = 0
  688. !dir$ ivdep
  688.             do
  688.                t$1411(1 + $I_L688_308, 1 + $I_L688_534) = chil2(1 + $I_L688_308, 1 + $I_L688_534)
  688.                $I_L688_308 = 1 + $I_L688_308
  688.                if ( $I_L688_308 >= $F_A115 ) exit
  688.             enddo
  688.             $I_L688_534 = 1 + $I_L688_534
  688.             if ( $I_L688_534 >= 2 ) exit
  688.          enddo
  689.          t$1414 = ( max( 0, nmax ) )
  689.          t$1419 = int( _alloc( max( 0, 48 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  689.          $F_A116 = nmax
  689.          $I_L689_632 = 0
  689.          do
  689.             $I_L689_536 = 0
  689.             do
  689.                $I_L689_310 = 0
  689. !dir$ ivdep
  689.                do
  689.                   t$1418(1 + $I_L689_310, 1 + $I_L689_536, 1 + $I_L689_632) = rstpar2(1 + $I_L689_310, 1 + $I_L689_536, 1 + $I_L689_632)
  689.                   $I_L689_310 = 1 + $I_L689_310
  689.                   if ( $I_L689_310 >= $F_A116 ) exit
  689.                enddo
  689.                $I_L689_536 = 1 + $I_L689_536
  689.                if ( $I_L689_536 >= 2 ) exit
  689.             enddo
  689.             $I_L689_632 = 1 + $I_L689_632
  689.             if ( $I_L689_632 >= 3 ) exit
  689.          enddo
  689.          t$1421 = ( max( 0, nmax ) )
  689.          t$1425 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  689.          $F_A117 = nmax
  689.          $I_L689_538 = 0
  689.          do
  689.             $I_L689_312 = 0
  689. !dir$ ivdep
  689.             do
  689.                t$1424(1 + $I_L689_312, 1 + $I_L689_538) = topt2(1 + $I_L689_312, 1 + $I_L689_538)
  689.                $I_L689_312 = 1 + $I_L689_312
  689.                if ( $I_L689_312 >= $F_A117 ) exit
  689.             enddo
  689.             $I_L689_538 = 1 + $I_L689_538
  689.             if ( $I_L689_538 >= 2 ) exit
  689.          enddo
  689.          t$1427 = ( max( 0, nmax ) )
  689.          t$1431 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  689.          $F_A118 = nmax
  689.          $I_L689_540 = 0
  689.          do
  689.             $I_L689_314 = 0
  689. !dir$ ivdep
  689.             do
  689.                t$1430(1 + $I_L689_314, 1 + $I_L689_540) = tll2(1 + $I_L689_314, 1 + $I_L689_540)
  689.                $I_L689_314 = 1 + $I_L689_314
  689.                if ( $I_L689_314 >= $F_A118 ) exit
  689.             enddo
  689.             $I_L689_540 = 1 + $I_L689_540
  689.             if ( $I_L689_540 >= 2 ) exit
  689.          enddo
  689.          t$1433 = ( max( 0, nmax ) )
  689.          t$1437 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  689.          $F_A119 = nmax
  689.          $I_L689_542 = 0
  689.          do
  689.             $I_L689_316 = 0
  689. !dir$ ivdep
  689.             do
  689.                t$1436(1 + $I_L689_316, 1 + $I_L689_542) = tu2(1 + $I_L689_316, 1 + $I_L689_542)
  689.                $I_L689_316 = 1 + $I_L689_316
  689.                if ( $I_L689_316 >= $F_A119 ) exit
  689.             enddo
  689.             $I_L689_542 = 1 + $I_L689_542
  689.             if ( $I_L689_542 >= 2 ) exit
  689.          enddo
  690.          t$1439 = ( max( 0, nmax ) )
  690.          t$1443 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  690.          $F_A120 = nmax
  690.          $I_L690_544 = 0
  690.          do
  690.             $I_L690_318 = 0
  690. !dir$ ivdep
  690.             do
  690.                t$1442(1 + $I_L690_318, 1 + $I_L690_544) = defac2(1 + $I_L690_318, 1 + $I_L690_544)
  690.                $I_L690_318 = 1 + $I_L690_318
  690.                if ( $I_L690_318 >= $F_A120 ) exit
  690.             enddo
  690.             $I_L690_544 = 1 + $I_L690_544
  690.             if ( $I_L690_544 >= 2 ) exit
  690.          enddo
  690.          t$1445 = ( max( 0, nmax ) )
  690.          t$1449 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  690.          $F_A121 = nmax
  690.          $I_L690_546 = 0
  690.          do
  690.             $I_L690_320 = 0
  690. !dir$ ivdep
  690.             do
  690.                t$1448(1 + $I_L690_320, 1 + $I_L690_546) = ph12(1 + $I_L690_320, 1 + $I_L690_546)
  690.                $I_L690_320 = 1 + $I_L690_320
  690.                if ( $I_L690_320 >= $F_A121 ) exit
  690.             enddo
  690.             $I_L690_546 = 1 + $I_L690_546
  690.             if ( $I_L690_546 >= 2 ) exit
  690.          enddo
  690.          t$1451 = ( max( 0, nmax ) )
  690.          t$1455 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  690.          $F_A122 = nmax
  690.          $I_L690_548 = 0
  690.          do
  690.             $I_L690_322 = 0
  690. !dir$ ivdep
  690.             do
  690.                t$1454(1 + $I_L690_322, 1 + $I_L690_548) = ph22(1 + $I_L690_322, 1 + $I_L690_548)
  690.                $I_L690_322 = 1 + $I_L690_322
  690.                if ( $I_L690_322 >= $F_A122 ) exit
  690.             enddo
  690.             $I_L690_548 = 1 + $I_L690_548
  690.             if ( $I_L690_548 >= 2 ) exit
  690.          enddo
  661.          call fysiks( t$1286(1, 1), z0x(1), d(1), rdc(1), rbc(1), z0(1), jdt, latitu, bps(1), psb(1), dzm(1), em(1), t$1292(1, 1), t$1298(1, 1), t$1304(1, 1), cu(1), cuni(1), ctni(1), ustar(1), cosz(1), sinclt(1), rhoair(1), psy(1), rcp(1), wc(1), wg(1), fc(1), fg(1), hr(1), ect(1), eci(1), egt(1), egi(1), egs(1), ec(1), eg(1), hc(1), hg(1), ecidif(1), egidif(1), ecmass(1), egmass(1), etmass(1), hflux(1), chf(1), shf(1), fluxef(1), roff(1), drag(1), ra(1), rb(1), rd(1), rc(1), rg(1), tcta(1), tgta(1), ta(1), ea(1), etc(1), etg(1), btc(1), btg(1), u2(1), t$1310(1, 1), t$1316(1, 1), t$1322(1, 1), t$1328(1, 1), rsoil(1), t$1334(1, 1), hrr(1), t$1340(1, 1), cc(1), cg(1), t$1346(1, 1), t$1352(1, 1), dtc(1), dtg(1), dtm(1), dqm(1), t$1358(1, 1), t$1366(1, 1, 1, 1), t$1374(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), tc(1), tg(1), td(1), t$1380(1, 1), t$1386(1, 1), qm(1), tm(1), um(1), vm(1), psur(1), ppc(1), ppl(1), t$1393(1, 1, 1), itype(1), dtc3x, mon(1), nmax, nmax, t$1399(1, 1), t$1405(1, 1), t$1411(1, 1), t$1418(1, 1, 1), t$1424(1, 1), t$1430(1, 1), t$1436(1, 1), t$1442(1, 1), t$1448(1, 1), t$1454(1, 1) )
  690.          _free( t$1455 )
  690.          _free( t$1449 )
  690.          _free( t$1443 )
  689.          _free( t$1437 )
  689.          _free( t$1431 )
  689.          _free( t$1425 )
  689.          _free( t$1419 )
  688.          _free( t$1412 )
  688.          _free( t$1406 )
  688.          _free( t$1400 )
  686.          _free( t$1394 )
  661.          $F_A123 = nmax
  661.          $I_L661_550 = 0
  661.          do
  661.             $I_L661_324 = 0
  661. !dir$ ivdep
  661.             do
  661.                w(1 + $I_L661_324, 1 + $I_L661_550) = t$1386(1 + $I_L661_324, 1 + $I_L661_550)
  661.                $I_L661_324 = 1 + $I_L661_324
  661.                if ( $I_L661_324 >= $F_A123 ) exit
  661.             enddo
  661.             $I_L661_550 = 1 + $I_L661_550
  661.             if ( $I_L661_550 >= 3 ) exit
  661.          enddo
  684.          _free( t$1387 )
  661.          $F_A124 = nmax
  661.          $I_L661_552 = 0
  661.          do
  661.             $I_L661_326 = 0
  661. !dir$ ivdep
  661.             do
  661.                capac(1 + $I_L661_326, 1 + $I_L661_552) = t$1380(1 + $I_L661_326, 1 + $I_L661_552)
  661.                $I_L661_326 = 1 + $I_L661_326
  661.                if ( $I_L661_326 >= $F_A124 ) exit
  661.             enddo
  661.             $I_L661_552 = 1 + $I_L661_552
  661.             if ( $I_L661_552 >= 2 ) exit
  661.          enddo
  684.          _free( t$1381 )
  682.          _free( t$1375 )
  661.          $F_A125 = nmax
  661.          $I_L661_674 = 0
  661.          do
  661.             $I_L661_634 = 0
  661.             do
  661.                $I_L661_554 = 0
  661.                do
  661.                   $I_L661_328 = 0
  661. !dir$ ivdep
  661.                   do
  661.                      extk(1 + $I_L661_328, 1 + $I_L661_554, 1 + $I_L661_634, 1 + $I_L661_674) = t$1366(1 + $I_L661_328, 1 + $I_L661_554, 1 + $I_L661_634, 1 + $I_L661_674)
  661.                      $I_L661_328 = 1 + $I_L661_328
  661.                      if ( $I_L661_328 >= $F_A125 ) exit
  661.                   enddo
  661.                   $I_L661_554 = 1 + $I_L661_554
  661.                   if ( $I_L661_554 >= 2 ) exit
  661.                enddo
  661.                $I_L661_634 = 1 + $I_L661_634
  661.                if ( $I_L661_634 >= 3 ) exit
  661.             enddo
  661.             $I_L661_674 = 1 + $I_L661_674
  661.             if ( $I_L661_674 >= 2 ) exit
  661.          enddo
  682.          _free( t$1367 )
  661.          $F_A126 = nmax
  661.          $I_L661_556 = 0
  661.          do
  661.             $I_L661_330 = 0
  661. !dir$ ivdep
  661.             do
  661.                stm(1 + $I_L661_330, 1 + $I_L661_556) = t$1358(1 + $I_L661_330, 1 + $I_L661_556)
  661.                $I_L661_330 = 1 + $I_L661_330
  661.                if ( $I_L661_330 >= $F_A126 ) exit
  661.             enddo
  661.             $I_L661_556 = 1 + $I_L661_556
  661.             if ( $I_L661_556 >= 2 ) exit
  661.          enddo
  681.          _free( t$1359 )
  661.          $F_A127 = nmax
  661.          $I_L661_558 = 0
  661.          do
  661.             $I_L661_332 = 0
  661. !dir$ ivdep
  661.             do
  661.                snow(1 + $I_L661_332, 1 + $I_L661_558) = t$1352(1 + $I_L661_332, 1 + $I_L661_558)
  661.                $I_L661_332 = 1 + $I_L661_332
  661.                if ( $I_L661_332 >= $F_A127 ) exit
  661.             enddo
  661.             $I_L661_558 = 1 + $I_L661_558
  661.             if ( $I_L661_558 >= 2 ) exit
  661.          enddo
  680.          _free( t$1353 )
  661.          $F_A128 = nmax
  661.          $I_L661_560 = 0
  661.          do
  661.             $I_L661_334 = 0
  661. !dir$ ivdep
  661.             do
  661.                satcap(1 + $I_L661_334, 1 + $I_L661_560) = t$1346(1 + $I_L661_334, 1 + $I_L661_560)
  661.                $I_L661_334 = 1 + $I_L661_334
  661.                if ( $I_L661_334 >= $F_A128 ) exit
  661.             enddo
  661.             $I_L661_560 = 1 + $I_L661_560
  661.             if ( $I_L661_560 >= 2 ) exit
  661.          enddo
  680.          _free( t$1347 )
  661.          $F_A129 = nmax
  661.          $I_L661_562 = 0
  661.          do
  661.             $I_L661_336 = 0
  661. !dir$ ivdep
  661.             do
  661.                phsoil(1 + $I_L661_336, 1 + $I_L661_562) = t$1340(1 + $I_L661_336, 1 + $I_L661_562)
  661.                $I_L661_336 = 1 + $I_L661_336
  661.                if ( $I_L661_336 >= $F_A129 ) exit
  661.             enddo
  661.             $I_L661_562 = 1 + $I_L661_562
  661.             if ( $I_L661_562 >= 3 ) exit
  661.          enddo
  679.          _free( t$1341 )
  661.          $F_A130 = nmax
  661.          $I_L661_564 = 0
  661.          do
  661.             $I_L661_338 = 0
  661. !dir$ ivdep
  661.             do
  661.                phroot(1 + $I_L661_338, 1 + $I_L661_564) = t$1334(1 + $I_L661_338, 1 + $I_L661_564)
  661.                $I_L661_338 = 1 + $I_L661_338
  661.                if ( $I_L661_338 >= $F_A130 ) exit
  661.             enddo
  661.             $I_L661_564 = 1 + $I_L661_564
  661.             if ( $I_L661_564 >= 2 ) exit
  661.          enddo
  679.          _free( t$1335 )
  661.          $F_A131 = nmax
  661.          $I_L661_566 = 0
  661.          do
  661.             $I_L661_340 = 0
  661. !dir$ ivdep
  661.             do
  661.                rst(1 + $I_L661_340, 1 + $I_L661_566) = t$1328(1 + $I_L661_340, 1 + $I_L661_566)
  661.                $I_L661_340 = 1 + $I_L661_340
  661.                if ( $I_L661_340 >= $F_A131 ) exit
  661.             enddo
  661.             $I_L661_566 = 1 + $I_L661_566
  661.             if ( $I_L661_566 >= 2 ) exit
  661.          enddo
  678.          _free( t$1329 )
  661.          $F_A132 = nmax
  661.          $I_L661_568 = 0
  661.          do
  661.             $I_L661_342 = 0
  661. !dir$ ivdep
  661.             do
  661.                pd(1 + $I_L661_342, 1 + $I_L661_568) = t$1322(1 + $I_L661_342, 1 + $I_L661_568)
  661.                $I_L661_342 = 1 + $I_L661_342
  661.                if ( $I_L661_342 >= $F_A132 ) exit
  661.             enddo
  661.             $I_L661_568 = 1 + $I_L661_568
  661.             if ( $I_L661_568 >= 2 ) exit
  661.          enddo
  678.          _free( t$1323 )
  661.          $F_A133 = nmax
  661.          $I_L661_570 = 0
  661.          do
  661.             $I_L661_344 = 0
  661. !dir$ ivdep
  661.             do
  661.                par(1 + $I_L661_344, 1 + $I_L661_570) = t$1316(1 + $I_L661_344, 1 + $I_L661_570)
  661.                $I_L661_344 = 1 + $I_L661_344
  661.                if ( $I_L661_344 >= $F_A133 ) exit
  661.             enddo
  661.             $I_L661_570 = 1 + $I_L661_570
  661.             if ( $I_L661_570 >= 2 ) exit
  661.          enddo
  678.          _free( t$1317 )
  661.          $F_A134 = nmax
  661.          $I_L661_572 = 0
  661.          do
  661.             $I_L661_346 = 0
  661. !dir$ ivdep
  661.             do
  661.                radt(1 + $I_L661_346, 1 + $I_L661_572) = t$1310(1 + $I_L661_346, 1 + $I_L661_572)
  661.                $I_L661_346 = 1 + $I_L661_346
  661.                if ( $I_L661_346 >= $F_A134 ) exit
  661.             enddo
  661.             $I_L661_572 = 1 + $I_L661_572
  661.             if ( $I_L661_572 >= 2 ) exit
  661.          enddo
  677.          _free( t$1311 )
  661.          $F_A135 = nmax
  661.          $I_L661_574 = 0
  661.          do
  661.             $I_L661_348 = 0
  661. !dir$ ivdep
  661.             do
  661.                gmu(1 + $I_L661_348, 1 + $I_L661_574) = t$1304(1 + $I_L661_348, 1 + $I_L661_574)
  661.                $I_L661_348 = 1 + $I_L661_348
  661.                if ( $I_L661_348 >= $F_A135 ) exit
  661.             enddo
  661.             $I_L661_574 = 1 + $I_L661_574
  661.             if ( $I_L661_574 >= 4 ) exit
  661.          enddo
  665.          _free( t$1305 )
  661.          $F_A136 = nmax
  661.          $I_L661_576 = 0
  661.          do
  661.             $I_L661_350 = 0
  661. !dir$ ivdep
  661.             do
  661.                gmq(1 + $I_L661_350, 1 + $I_L661_576) = t$1298(1 + $I_L661_350, 1 + $I_L661_576)
  661.                $I_L661_350 = 1 + $I_L661_350
  661.                if ( $I_L661_350 >= $F_A136 ) exit
  661.             enddo
  661.             $I_L661_576 = 1 + $I_L661_576
  661.             if ( $I_L661_576 >= 3 ) exit
  661.          enddo
  665.          _free( t$1299 )
  661.          $F_A137 = nmax
  661.          $I_L661_578 = 0
  661.          do
  661.             $I_L661_352 = 0
  661. !dir$ ivdep
  661.             do
  661.                gmt(1 + $I_L661_352, 1 + $I_L661_578) = t$1292(1 + $I_L661_352, 1 + $I_L661_578)
  661.                $I_L661_352 = 1 + $I_L661_352
  661.                if ( $I_L661_352 >= $F_A137 ) exit
  661.             enddo
  661.             $I_L661_578 = 1 + $I_L661_578
  661.             if ( $I_L661_578 >= 3 ) exit
  661.          enddo
  665.          _free( t$1293 )
  662.          _free( t$1287 )
  695.          $I_L695_130 = 0
  695. !dir$ ivdep
  695.          do
  698.             qm(1 + $I_L695_130) = max( 9.9999999999999998e-13, qm(1 + $I_L695_130) )
  699.             $I_L695_130 = 1 + $I_L695_130
  695.             if ( $I_L695_130 >= nmax ) exit
  695.          enddo
  695.       endif
  700.       call sextrp( td(1), tg(1), tc(1), w(1, 1), capac(1, 1), td0(1), tg0(1), tc0(1), w0(1, 1), capac0(1, 1), tdm(1), tgm(1), tcm(1), wm(1, 1), capacm(1, 1), istrt, ncols, nmax, epsflt, intg, latitu, tm0(1), qm0(1), tm(1), qm(1), tmm(1), qmm(1) )
  707.       if ( nmax > 0 ) then
  707.          $I_L707_132 = 0
  707. !dir$ ivdep
  707.          do
  708.             if ( ssib(1 + $I_L707_132) > 0.0 ) then
  709.                qm(1 + $I_L707_132) = max( 9.9999999999999998e-13, qm(1 + $I_L707_132) )
  710.                w0(1 + $I_L707_132, 1) = ssib(1 + $I_L707_132)
  711.                w0(1 + $I_L707_132, 2) = ssib(1 + $I_L707_132)
  712.                w0(1 + $I_L707_132, 3) = ssib(1 + $I_L707_132)
  713.                wm(1 + $I_L707_132, 1) = ssib(1 + $I_L707_132)
  714.                wm(1 + $I_L707_132, 2) = ssib(1 + $I_L707_132)
  715.                wm(1 + $I_L707_132, 3) = ssib(1 + $I_L707_132)
  715.             endif
  717.             $I_L707_132 = 1 + $I_L707_132
  716.             if ( $I_L707_132 >= nmax ) exit
  716.          enddo
  716.       endif
  718.       $ncount_S22 = 0
  719.       if ( ncols > 0 ) then
  719.          $I_L719_134 = 0
  719. !dir$ ivdep
  719.          do
  720.             if ( imask(1 + $I_L719_134) > 0 ) then
  721.                $ncount_S22 = 1 + $ncount_S22
  722.                tmtx(1 + $I_L719_134, 1, 3) = gmt($ncount_S22, 3)
  723.                qmtx(1 + $I_L719_134, 1, 3) = gmq($ncount_S22, 3)
  724.                umtx(1 + $I_L719_134, 1, 3) = gmu($ncount_S22, 3)
  725.                umtx(1 + $I_L719_134, 1, 4) = gmu($ncount_S22, 4)
  726.                tsea(1 + $I_L719_134) = tgeff($ncount_S22)
  727.                z0x($ncount_S22) = z0($ncount_S22)
  727.             endif
  729.             $I_L719_134 = 1 + $I_L719_134
  728.             if ( $I_L719_134 >= ncols ) exit
  728.          enddo
  735.          $I_L735_136 = 0
  735. !dir$ ivdep
  735.          do
  736.             if ( mskant(1 + $I_L735_136) == 1 ) then
  737.                xsea(1 + $I_L735_136) = tseam(1 + $I_L735_136)
  738.                tsfc(1 + $I_L735_136) = tsfcm(1 + $I_L735_136)
  739.                qsfc(1 + $I_L735_136) = qsfcm(1 + $I_L735_136)
  739.             endif
  741.             $I_L735_136 = 1 + $I_L735_136
  740.             if ( $I_L735_136 >= ncols ) exit
  740.          enddo
  740.       endif
  744.       t$1469 = ( max( 0, ncols ) )
  744.       t$1470 = ( max( 0, kmax ) )
  744.       t$1475 = int( _alloc( max( 0, max( 0, ( max( 0, ncols ) ) ) * max( 0, ( max( 0, kmax ) ) ) * 24 ) ), 8 )
  744.       $F_A138 = kmax
  744.       $F_A139 = ncols
  744.       if ( and( -$F_A139, -$F_A138 ) < 0 ) then
  744.          $I_L744_636 = 0
  744.          do
  744.             $I_L744_580 = 0
  744.             do
  744.                $I_L744_354 = 0
  744. !dir$ ivdep
  744.                do
  744.                   t$1474(1 + $I_L744_354, 1 + $I_L744_580, 1 + $I_L744_636) = tmtx(1 + $I_L744_354, 1 + $I_L744_580, 1 + $I_L744_636)
  744.                   $I_L744_354 = 1 + $I_L744_354
  744.                   if ( $I_L744_354 >= $F_A139 ) exit
  744.                enddo
  744.                $I_L744_580 = 1 + $I_L744_580
  744.                if ( $I_L744_580 >= $F_A138 ) exit
  744.             enddo
  744.             $I_L744_636 = 1 + $I_L744_636
  744.             if ( $I_L744_636 >= 3 ) exit
  744.          enddo
  744.       endif
  744.       t$1477 = ( max( 0, ncols ) )
  744.       t$1478 = ( max( 0, kmax ) )
  744.       t$1483 = int( _alloc( max( 0, max( 0, ( max( 0, ncols ) ) ) * max( 0, ( max( 0, kmax ) ) ) * 32 ) ), 8 )
  744.       $F_A140 = kmax
  744.       $F_A141 = ncols
  744.       if ( and( -$F_A141, -$F_A140 ) < 0 ) then
  744.          $I_L744_638 = 0
  744.          do
  744.             $I_L744_582 = 0
  744.             do
  744.                $I_L744_356 = 0
  744. !dir$ ivdep
  744.                do
  744.                   t$1482(1 + $I_L744_356, 1 + $I_L744_582, 1 + $I_L744_638) = umtx(1 + $I_L744_356, 1 + $I_L744_582, 1 + $I_L744_638)
  744.                   $I_L744_356 = 1 + $I_L744_356
  744.                   if ( $I_L744_356 >= $F_A141 ) exit
  744.                enddo
  744.                $I_L744_582 = 1 + $I_L744_582
  744.                if ( $I_L744_582 >= $F_A140 ) exit
  744.             enddo
  744.             $I_L744_638 = 1 + $I_L744_638
  744.             if ( $I_L744_638 >= 4 ) exit
  744.          enddo
  744.       endif
  744.       t$1485 = ( max( 0, ncols ) )
  744.       t$1486 = ( max( 0, kmax ) )
  744.       t$1491 = int( _alloc( max( 0, max( 0, ( max( 0, ncols ) ) ) * max( 0, ( max( 0, kmax ) ) ) * 24 ) ), 8 )
  744.       $F_A142 = kmax
  744.       $F_A143 = ncols
  744.       if ( and( -$F_A143, -$F_A142 ) < 0 ) then
  744.          $I_L744_640 = 0
  744.          do
  744.             $I_L744_584 = 0
  744.             do
  744.                $I_L744_358 = 0
  744. !dir$ ivdep
  744.                do
  744.                   t$1490(1 + $I_L744_358, 1 + $I_L744_584, 1 + $I_L744_640) = qmtx(1 + $I_L744_358, 1 + $I_L744_584, 1 + $I_L744_640)
  744.                   $I_L744_358 = 1 + $I_L744_358
  744.                   if ( $I_L744_358 >= $F_A143 ) exit
  744.                enddo
  744.                $I_L744_584 = 1 + $I_L744_584
  744.                if ( $I_L744_584 >= $F_A142 ) exit
  744.             enddo
  744.             $I_L744_640 = 1 + $I_L744_640
  744.             if ( $I_L744_640 >= 3 ) exit
  744.          enddo
  744.       endif
  749.       t$1492 = ( max( 0, ncols ) )
  749.       t$1495 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  749.       $F_A144 = ncols
  749.       if ( ncols > 0 ) then
  749.          $I_L749_360 = 0
  749. !dir$ ivdep
  749.          do
  749.             t$1494(1 + $I_L749_360) = sin( colrad(1 + $I_L749_360) )
  749.             $I_L749_360 = 1 + $I_L749_360
  749.             if ( $I_L749_360 >= $F_A144 ) exit
  749.          enddo
  749.       endif
  743.       call seasfc( t$1474(1, 1, 1), t$1482(1, 1, 1), t$1490(1, 1, 1), kmax, kmax, slrad(1), tsurf(1), qsurf(1), gu(1, 1), gv(1, 1), gt(1, 1), gq(1, 1), gps(1), xsea(1), dtc3x, t$1494(1), sigki(1), delsig(1), sens(1), evap(1), umom(1), vmom(1), rmi(1), rhi(1), cond(1), stor(1), zorl(1), ncols, speedm(1), ustarm(1), z0sea(1), rho(1), qsfc(1), tsfc(1), mskant(1) )
  749.       _free( t$1495 )
  743.       $F_A145 = kmax
  743.       $F_A146 = ncols
  743.       if ( and( -$F_A146, -$F_A145 ) < 0 ) then
  743.          $I_L743_642 = 0
  743.          do
  743.             $I_L743_586 = 0
  743.             do
  743.                $I_L743_362 = 0
  743. !dir$ ivdep
  743.                do
  743.                   qmtx(1 + $I_L743_362, 1 + $I_L743_586, 1 + $I_L743_642) = t$1490(1 + $I_L743_362, 1 + $I_L743_586, 1 + $I_L743_642)
  743.                   $I_L743_362 = 1 + $I_L743_362
  743.                   if ( $I_L743_362 >= $F_A146 ) exit
  743.                enddo
  743.                $I_L743_586 = 1 + $I_L743_586
  743.                if ( $I_L743_586 >= $F_A145 ) exit
  743.             enddo
  743.             $I_L743_642 = 1 + $I_L743_642
  743.             if ( $I_L743_642 >= 3 ) exit
  743.          enddo
  743.       endif
  744.       _free( t$1491 )
  743.       $F_A147 = kmax
  743.       $F_A148 = ncols
  743.       if ( and( -$F_A148, -$F_A147 ) < 0 ) then
  743.          $I_L743_644 = 0
  743.          do
  743.             $I_L743_588 = 0
  743.             do
  743.                $I_L743_364 = 0
  743. !dir$ ivdep
  743.                do
  743.                   umtx(1 + $I_L743_364, 1 + $I_L743_588, 1 + $I_L743_644) = t$1482(1 + $I_L743_364, 1 + $I_L743_588, 1 + $I_L743_644)
  743.                   $I_L743_364 = 1 + $I_L743_364
  743.                   if ( $I_L743_364 >= $F_A148 ) exit
  743.                enddo
  743.                $I_L743_588 = 1 + $I_L743_588
  743.                if ( $I_L743_588 >= $F_A147 ) exit
  743.             enddo
  743.             $I_L743_644 = 1 + $I_L743_644
  743.             if ( $I_L743_644 >= 4 ) exit
  743.          enddo
  743.       endif
  744.       _free( t$1483 )
  743.       $F_A149 = kmax
  743.       $F_A150 = ncols
  743.       if ( and( -$F_A150, -$F_A149 ) < 0 ) then
  743.          $I_L743_646 = 0
  743.          do
  743.             $I_L743_590 = 0
  743.             do
  743.                $I_L743_366 = 0
  743. !dir$ ivdep
  743.                do
  743.                   tmtx(1 + $I_L743_366, 1 + $I_L743_590, 1 + $I_L743_646) = t$1474(1 + $I_L743_366, 1 + $I_L743_590, 1 + $I_L743_646)
  743.                   $I_L743_366 = 1 + $I_L743_366
  743.                   if ( $I_L743_366 >= $F_A150 ) exit
  743.                enddo
  743.                $I_L743_590 = 1 + $I_L743_590
  743.                if ( $I_L743_590 >= $F_A149 ) exit
  743.             enddo
  743.             $I_L743_646 = 1 + $I_L743_646
  743.             if ( $I_L743_646 >= 3 ) exit
  743.          enddo
  743.       endif
  744.       _free( t$1475 )
  757.       if ( ncols > 0 ) then
  757.          $I_L757_138 = 0
  757. !dir$ ivdep
  757.          do
  758.             if ( mskant(1 + $I_L757_138) == 1 ) then
  758.                if ( tsea(1 + $I_L757_138) <= 0.0 ) then
  758.                   if ( tsurf(1 + $I_L757_138) < 271.17000000000002 ) then
  759.                      if ( intg == 2 ) then
  760.                         if ( istrt == 0 ) then
  761.                            tseam(1 + $I_L757_138) = filta * tsea(1 + $I_L757_138) + epsflt * ( tseam(1 + $I_L757_138) + xsea(1 + $I_L757_138) )
  762.                            $qsfc_WR0_R1 = max( 9.9999999999999998e-13, qsfc(1 + $I_L757_138) )
  762.                            qsfc(1 + $I_L757_138) = $qsfc_WR0_R1
  763.                            tsfcm(1 + $I_L757_138) = filta * tsfc0(1 + $I_L757_138) + epsflt * ( tsfcm(1 + $I_L757_138) + tsfc(1 + $I_L757_138) )
  764.                            qsfcm(1 + $I_L757_138) = filta * qsfc0(1 + $I_L757_138) + epsflt * ( qsfcm(1 + $I_L757_138) + $qsfc_WR0_R1 )
  764.                         endif
  766.                         tsea(1 + $I_L757_138) = xsea(1 + $I_L757_138)
  767.                         $qsfc_WR0_R1 = max( 9.9999999999999998e-13, qsfc(1 + $I_L757_138) )
  767.                         qsfc(1 + $I_L757_138) = $qsfc_WR0_R1
  768.                         tsfc0(1 + $I_L757_138) = tsfc(1 + $I_L757_138)
  769.                         qsfc0(1 + $I_L757_138) = $qsfc_WR0_R1
  769.                      else
  771.                         tsea(1 + $I_L757_138) = xsea(1 + $I_L757_138)
  772.                         tseam(1 + $I_L757_138) = xsea(1 + $I_L757_138)
  773.                         $qsfc_WR0_R2 = max( 9.9999999999999998e-13, qsfc(1 + $I_L757_138) )
  773.                         qsfc(1 + $I_L757_138) = $qsfc_WR0_R2
  774.                         tsfc0(1 + $I_L757_138) = tsfc(1 + $I_L757_138)
  775.                         qsfc0(1 + $I_L757_138) = $qsfc_WR0_R2
  776.                         tsfcm(1 + $I_L757_138) = tsfc(1 + $I_L757_138)
  777.                         qsfcm(1 + $I_L757_138) = $qsfc_WR0_R2
  777.                      endif
  777.                   endif
  777.                endif
  780.                if ( tsea(1 + $I_L757_138) < 0.0 ) then
  780.                   if ( tsurf(1 + $I_L757_138) >= 271.17000000000002 ) then
  781.                      tseam(1 + $I_L757_138) = tsea(1 + $I_L757_138)
  782.                      tsfcm(1 + $I_L757_138) = tsfc0(1 + $I_L757_138)
  783.                      qsfcm(1 + $I_L757_138) = qsfc0(1 + $I_L757_138)
  783.                   endif
  783.                endif
  783.             endif
  785.             $I_L757_138 = 1 + $I_L757_138
  784.             if ( $I_L757_138 >= ncols ) exit
  784.          enddo
  784.       endif
  208.       _free( t$158 )
  787.       return
  787.       end
  787.       
  789.       
  789.       subroutine copysurfacedata( itype, mon, colrad2, xday, idatec, nsx, ncols, nmax, latitu )
  789.       t$9 = ncols
  793.       t$209 = _zla( 0, ncols )
  800.       $F_A33 = xcover%dim_3%EX
  800.       $F_A34 = xcover%dim_2%EX
  800.       $F_A35 = xcover%dim_1%EX
  800.       if ( and( and( -$F_A34, -$F_A33 ), -$F_A35 ) < 0 ) then
  800.          $SC_xcover_fixed_I242 = xcover_fixed%dim_1%LB
  800.          $SC_xcover_fixed_I243 = xcover_fixed%dim_2%SM
  800.          $SC_xcover_fixed_I244 = xcover_fixed%dim_2%LB
  800.          $SC_xcover_fixed_I245 = xcover_fixed%dim_3%SM
  800.          $SC_xcover_fixed_I246 = xcover_fixed%dim_3%LB
  800.          $SC_xcover_I247 = xcover%dim_1%LB
  800.          $SC_xcover_I248 = xcover%dim_2%SM
  800.          $SC_xcover_I249 = xcover%dim_2%LB
  800.          $SC_xcover_I250 = xcover%dim_3%SM
  800.          $SC_xcover_I251 = xcover%dim_3%LB
  800.          $I_L800_86 = 0
  800.          do
  800.             $I_L800_64 = 0
  800.             do
  800.                $I_L800_40 = 0
  800. !dir$ ivdep
  800.                do
  800.                   (xcover%base_addr)($SC_xcover_I247 + $I_L800_40, $SC_xcover_I249 + $I_L800_64, $SC_xcover_I251 + $I_L800_86, 0) = (xcover_fixed%base_addr)($SC_xcover_fixed_I242 + $I_L800_40, $SC_xcover_fixed_I244 + $I_L800_64, $SC_xcover_fixed_I246 + $I_L800_86, 0)
  800.                   $I_L800_40 = 1 + $I_L800_40
  800.                   if ( $I_L800_40 >= $F_A35 ) exit
  800.                enddo
  800.                $I_L800_64 = 1 + $I_L800_64
  800.                if ( $I_L800_64 >= $F_A34 ) exit
  800.             enddo
  800.             $I_L800_86 = 1 + $I_L800_86
  800.             if ( $I_L800_86 >= $F_A33 ) exit
  800.          enddo
  800.       endif
  801.       $F_A36 = zlt%dim_3%EX
  801.       $F_A37 = zlt%dim_2%EX
  801.       $F_A38 = zlt%dim_1%EX
  801.       if ( and( and( -$F_A37, -$F_A36 ), -$F_A38 ) < 0 ) then
  801.          $SC_zlt_fixed_I252 = zlt_fixed%dim_1%LB
  801.          $SC_zlt_fixed_I253 = zlt_fixed%dim_2%SM
  801.          $SC_zlt_fixed_I254 = zlt_fixed%dim_2%LB
  801.          $SC_zlt_fixed_I255 = zlt_fixed%dim_3%SM
  801.          $SC_zlt_fixed_I256 = zlt_fixed%dim_3%LB
  801.          $SC_zlt_I257 = zlt%dim_1%LB
  801.          $SC_zlt_I258 = zlt%dim_2%SM
  801.          $SC_zlt_I259 = zlt%dim_2%LB
  801.          $SC_zlt_I260 = zlt%dim_3%SM
  801.          $SC_zlt_I261 = zlt%dim_3%LB
  801.          $I_L801_88 = 0
  801.          do
  801.             $I_L801_66 = 0
  801.             do
  801.                $I_L801_42 = 0
  801. !dir$ ivdep
  801.                do
  801.                   (zlt%base_addr)($SC_zlt_I257 + $I_L801_42, $SC_zlt_I259 + $I_L801_66, $SC_zlt_I261 + $I_L801_88, 0) = (zlt_fixed%base_addr)($SC_zlt_fixed_I252 + $I_L801_42, $SC_zlt_fixed_I254 + $I_L801_66, $SC_zlt_fixed_I256 + $I_L801_88, 0)
  801.                   $I_L801_42 = 1 + $I_L801_42
  801.                   if ( $I_L801_42 >= $F_A38 ) exit
  801.                enddo
  801.                $I_L801_66 = 1 + $I_L801_66
  801.                if ( $I_L801_66 >= $F_A37 ) exit
  801.             enddo
  801.             $I_L801_88 = 1 + $I_L801_88
  801.             if ( $I_L801_88 >= $F_A36 ) exit
  801.          enddo
  801.       endif
  802.       $F_A39 = green%dim_3%EX
  802.       $F_A40 = green%dim_2%EX
  802.       $F_A41 = green%dim_1%EX
  802.       if ( and( and( -$F_A40, -$F_A39 ), -$F_A41 ) < 0 ) then
  802.          $SC_green_fixed_I262 = green_fixed%dim_1%LB
  802.          $SC_green_fixed_I263 = green_fixed%dim_2%SM
  802.          $SC_green_fixed_I264 = green_fixed%dim_2%LB
  802.          $SC_green_fixed_I265 = green_fixed%dim_3%SM
  802.          $SC_green_fixed_I266 = green_fixed%dim_3%LB
  802.          $SC_green_I267 = green%dim_1%LB
  802.          $SC_green_I268 = green%dim_2%SM
  802.          $SC_green_I269 = green%dim_2%LB
  802.          $SC_green_I270 = green%dim_3%SM
  802.          $SC_green_I271 = green%dim_3%LB
  802.          $I_L802_90 = 0
  802.          do
  802.             $I_L802_68 = 0
  802.             do
  802.                $I_L802_44 = 0
  802. !dir$ ivdep
  802.                do
  802.                   (green%base_addr)($SC_green_I267 + $I_L802_44, $SC_green_I269 + $I_L802_68, $SC_green_I271 + $I_L802_90, 0) = (green_fixed%base_addr)($SC_green_fixed_I262 + $I_L802_44, $SC_green_fixed_I264 + $I_L802_68, $SC_green_fixed_I266 + $I_L802_90, 0)
  802.                   $I_L802_44 = 1 + $I_L802_44
  802.                   if ( $I_L802_44 >= $F_A41 ) exit
  802.                enddo
  802.                $I_L802_68 = 1 + $I_L802_68
  802.                if ( $I_L802_68 >= $F_A40 ) exit
  802.             enddo
  802.             $I_L802_90 = 1 + $I_L802_90
  802.             if ( $I_L802_90 >= $F_A39 ) exit
  802.          enddo
  802.       endif
  803.       $F_A42 = ph2%dim_2%EX
  803.       $F_A43 = ph2%dim_1%EX
  803.       if ( and( -$F_A43, -$F_A42 ) < 0 ) then
  803.          $SC_ph2_fixed_I272 = ph2_fixed%dim_1%LB
  803.          $SC_ph2_fixed_I273 = ph2_fixed%dim_2%SM
  803.          $SC_ph2_fixed_I274 = ph2_fixed%dim_2%LB
  803.          $SC_ph2_I275 = ph2%dim_1%LB
  803.          $SC_ph2_I276 = ph2%dim_2%SM
  803.          $SC_ph2_I277 = ph2%dim_2%LB
  803.          $I_L803_70 = 0
  803.          do
  803.             $I_L803_46 = 0
  803. !dir$ ivdep
  803.             do
  803.                (ph2%base_addr)($SC_ph2_I275 + $I_L803_46, $SC_ph2_I277 + $I_L803_70, 0) = (ph2_fixed%base_addr)($SC_ph2_fixed_I272 + $I_L803_46, $SC_ph2_fixed_I274 + $I_L803_70, 0)
  803.                $I_L803_46 = 1 + $I_L803_46
  803.                if ( $I_L803_46 >= $F_A43 ) exit
  803.             enddo
  803.             $I_L803_70 = 1 + $I_L803_70
  803.             if ( $I_L803_70 >= $F_A42 ) exit
  803.          enddo
  803.       endif
  804.       $F_A44 = ph1%dim_2%EX
  804.       $F_A45 = ph1%dim_1%EX
  804.       if ( and( -$F_A45, -$F_A44 ) < 0 ) then
  804.          $SC_ph1_fixed_I278 = ph1_fixed%dim_1%LB
  804.          $SC_ph1_fixed_I279 = ph1_fixed%dim_2%SM
  804.          $SC_ph1_fixed_I280 = ph1_fixed%dim_2%LB
  804.          $SC_ph1_I281 = ph1%dim_1%LB
  804.          $SC_ph1_I282 = ph1%dim_2%SM
  804.          $SC_ph1_I283 = ph1%dim_2%LB
  804.          $I_L804_72 = 0
  804.          do
  804.             $I_L804_48 = 0
  804. !dir$ ivdep
  804.             do
  804.                (ph1%base_addr)($SC_ph1_I281 + $I_L804_48, $SC_ph1_I283 + $I_L804_72, 0) = (ph1_fixed%base_addr)($SC_ph1_fixed_I278 + $I_L804_48, $SC_ph1_fixed_I280 + $I_L804_72, 0)
  804.                $I_L804_48 = 1 + $I_L804_48
  804.                if ( $I_L804_48 >= $F_A45 ) exit
  804.             enddo
  804.             $I_L804_72 = 1 + $I_L804_72
  804.             if ( $I_L804_72 >= $F_A44 ) exit
  804.          enddo
  804.       endif
  805.       $F_A46 = defac%dim_2%EX
  805.       $F_A47 = defac%dim_1%EX
  805.       if ( and( -$F_A47, -$F_A46 ) < 0 ) then
  805.          $SC_defac_fixed_I284 = defac_fixed%dim_1%LB
  805.          $SC_defac_fixed_I285 = defac_fixed%dim_2%SM
  805.          $SC_defac_fixed_I286 = defac_fixed%dim_2%LB
  805.          $SC_defac_I287 = defac%dim_1%LB
  805.          $SC_defac_I288 = defac%dim_2%SM
  805.          $SC_defac_I289 = defac%dim_2%LB
  805.          $I_L805_74 = 0
  805.          do
  805.             $I_L805_50 = 0
  805. !dir$ ivdep
  805.             do
  805.                (defac%base_addr)($SC_defac_I287 + $I_L805_50, $SC_defac_I289 + $I_L805_74, 0) = (defac_fixed%base_addr)($SC_defac_fixed_I284 + $I_L805_50, $SC_defac_fixed_I286 + $I_L805_74, 0)
  805.                $I_L805_50 = 1 + $I_L805_50
  805.                if ( $I_L805_50 >= $F_A47 ) exit
  805.             enddo
  805.             $I_L805_74 = 1 + $I_L805_74
  805.             if ( $I_L805_74 >= $F_A46 ) exit
  805.          enddo
  805.       endif
  806.       $F_A48 = tu%dim_2%EX
  806.       $F_A49 = tu%dim_1%EX
  806.       if ( and( -$F_A49, -$F_A48 ) < 0 ) then
  806.          $SC_tu_fixed_I290 = tu_fixed%dim_1%LB
  806.          $SC_tu_fixed_I291 = tu_fixed%dim_2%SM
  806.          $SC_tu_fixed_I292 = tu_fixed%dim_2%LB
  806.          $SC_tu_I293 = tu%dim_1%LB
  806.          $SC_tu_I294 = tu%dim_2%SM
  806.          $SC_tu_I295 = tu%dim_2%LB
  806.          $I_L806_76 = 0
  806.          do
  806.             $I_L806_52 = 0
  806. !dir$ ivdep
  806.             do
  806.                (tu%base_addr)($SC_tu_I293 + $I_L806_52, $SC_tu_I295 + $I_L806_76, 0) = (tu_fixed%base_addr)($SC_tu_fixed_I290 + $I_L806_52, $SC_tu_fixed_I292 + $I_L806_76, 0)
  806.                $I_L806_52 = 1 + $I_L806_52
  806.                if ( $I_L806_52 >= $F_A49 ) exit
  806.             enddo
  806.             $I_L806_76 = 1 + $I_L806_76
  806.             if ( $I_L806_76 >= $F_A48 ) exit
  806.          enddo
  806.       endif
  807.       $F_A50 = tll%dim_2%EX
  807.       $F_A51 = tll%dim_1%EX
  807.       if ( and( -$F_A51, -$F_A50 ) < 0 ) then
  807.          $SC_tll_fixed_I296 = tll_fixed%dim_1%LB
  807.          $SC_tll_fixed_I297 = tll_fixed%dim_2%SM
  807.          $SC_tll_fixed_I298 = tll_fixed%dim_2%LB
  807.          $SC_tll_I299 = tll%dim_1%LB
  807.          $SC_tll_I300 = tll%dim_2%SM
  807.          $SC_tll_I301 = tll%dim_2%LB
  807.          $I_L807_78 = 0
  807.          do
  807.             $I_L807_54 = 0
  807. !dir$ ivdep
  807.             do
  807.                (tll%base_addr)($SC_tll_I299 + $I_L807_54, $SC_tll_I301 + $I_L807_78, 0) = (tll_fixed%base_addr)($SC_tll_fixed_I296 + $I_L807_54, $SC_tll_fixed_I298 + $I_L807_78, 0)
  807.                $I_L807_54 = 1 + $I_L807_54
  807.                if ( $I_L807_54 >= $F_A51 ) exit
  807.             enddo
  807.             $I_L807_78 = 1 + $I_L807_78
  807.             if ( $I_L807_78 >= $F_A50 ) exit
  807.          enddo
  807.       endif
  808.       $F_A52 = topt%dim_2%EX
  808.       $F_A53 = topt%dim_1%EX
  808.       if ( and( -$F_A53, -$F_A52 ) < 0 ) then
  808.          $SC_topt_fixed_I302 = topt_fixed%dim_1%LB
  808.          $SC_topt_fixed_I303 = topt_fixed%dim_2%SM
  808.          $SC_topt_fixed_I304 = topt_fixed%dim_2%LB
  808.          $SC_topt_I305 = topt%dim_1%LB
  808.          $SC_topt_I306 = topt%dim_2%SM
  808.          $SC_topt_I307 = topt%dim_2%LB
  808.          $I_L808_80 = 0
  808.          do
  808.             $I_L808_56 = 0
  808. !dir$ ivdep
  808.             do
  808.                (topt%base_addr)($SC_topt_I305 + $I_L808_56, $SC_topt_I307 + $I_L808_80, 0) = (topt_fixed%base_addr)($SC_topt_fixed_I302 + $I_L808_56, $SC_topt_fixed_I304 + $I_L808_80, 0)
  808.                $I_L808_56 = 1 + $I_L808_56
  808.                if ( $I_L808_56 >= $F_A53 ) exit
  808.             enddo
  808.             $I_L808_80 = 1 + $I_L808_80
  808.             if ( $I_L808_80 >= $F_A52 ) exit
  808.          enddo
  808.       endif
  809.       $F_A54 = rstpar%dim_3%EX
  809.       $F_A55 = rstpar%dim_2%EX
  809.       $F_A56 = rstpar%dim_1%EX
  809.       if ( and( and( -$F_A55, -$F_A54 ), -$F_A56 ) < 0 ) then
  809.          $SC_rstpar_fixed_I308 = rstpar_fixed%dim_1%LB
  809.          $SC_rstpar_fixed_I309 = rstpar_fixed%dim_2%SM
  809.          $SC_rstpar_fixed_I310 = rstpar_fixed%dim_2%LB
  809.          $SC_rstpar_fixed_I311 = rstpar_fixed%dim_3%SM
  809.          $SC_rstpar_fixed_I312 = rstpar_fixed%dim_3%LB
  809.          $SC_rstpar_I313 = rstpar%dim_1%LB
  809.          $SC_rstpar_I314 = rstpar%dim_2%SM
  809.          $SC_rstpar_I315 = rstpar%dim_2%LB
  809.          $SC_rstpar_I316 = rstpar%dim_3%SM
  809.          $SC_rstpar_I317 = rstpar%dim_3%LB
  809.          $I_L809_92 = 0
  809.          do
  809.             $I_L809_82 = 0
  809.             do
  809.                $I_L809_58 = 0
  809. !dir$ ivdep
  809.                do
  809.                   (rstpar%base_addr)($SC_rstpar_I313 + $I_L809_58, $SC_rstpar_I315 + $I_L809_82, $SC_rstpar_I317 + $I_L809_92, 0) = (rstpar_fixed%base_addr)($SC_rstpar_fixed_I308 + $I_L809_58, $SC_rstpar_fixed_I310 + $I_L809_82, $SC_rstpar_fixed_I312 + $I_L809_92, 0)
  809.                   $I_L809_58 = 1 + $I_L809_58
  809.                   if ( $I_L809_58 >= $F_A56 ) exit
  809.                enddo
  809.                $I_L809_82 = 1 + $I_L809_82
  809.                if ( $I_L809_82 >= $F_A55 ) exit
  809.             enddo
  809.             $I_L809_92 = 1 + $I_L809_92
  809.             if ( $I_L809_92 >= $F_A54 ) exit
  809.          enddo
  809.       endif
  810.       $F_A57 = chil%dim_2%EX
  810.       $F_A58 = chil%dim_1%EX
  810.       if ( and( -$F_A58, -$F_A57 ) < 0 ) then
  810.          $SC_chil_fixed_I318 = chil_fixed%dim_1%LB
  810.          $SC_chil_fixed_I319 = chil_fixed%dim_2%SM
  810.          $SC_chil_fixed_I320 = chil_fixed%dim_2%LB
  810.          $SC_chil_I321 = chil%dim_1%LB
  810.          $SC_chil_I322 = chil%dim_2%SM
  810.          $SC_chil_I323 = chil%dim_2%LB
  810.          $I_L810_84 = 0
  810.          do
  810.             $I_L810_60 = 0
  810. !dir$ ivdep
  810.             do
  810.                (chil%base_addr)($SC_chil_I321 + $I_L810_60, $SC_chil_I323 + $I_L810_84, 0) = (chil_fixed%base_addr)($SC_chil_fixed_I318 + $I_L810_60, $SC_chil_fixed_I320 + $I_L810_84, 0)
  810.                $I_L810_60 = 1 + $I_L810_60
  810.                if ( $I_L810_60 >= $F_A58 ) exit
  810.             enddo
  810.             $I_L810_84 = 1 + $I_L810_84
  810.             if ( $I_L810_84 >= $F_A57 ) exit
  810.          enddo
  810.       endif
  812.       if ( nmax > 0 ) then
  819.          $SC_tu_gbl_I356 = tu_gbl%dim_1%EX
  819.          $SC_tu_gbl_I357 = tu_gbl%dim_1%LB
  819.          $SC_tu_gbl_I359 = tu_gbl%dim_2%SM
  819.          $SC_tu_gbl_I358 = tu_gbl%dim_2%EX
  818.          $SC_tll_gbl_I346 = tll_gbl%dim_1%EX
  818.          $SC_tll_gbl_I347 = tll_gbl%dim_1%LB
  818.          $SC_tll_gbl_I349 = tll_gbl%dim_2%SM
  818.          $SC_tll_gbl_I348 = tll_gbl%dim_2%EX
  818.          $SC_tll_gbl_I350 = tll_gbl%dim_2%LB
  818.          $SC_tll_gbl_I352 = tll_gbl%dim_3%SM
  818.          $SC_tll_gbl_I351 = tll_gbl%dim_3%EX
  818.          $SC_tll_gbl_I353 = tll_gbl%dim_3%LB
  817.          $SC_topt_gbl_I336 = topt_gbl%dim_1%EX
  817.          $SC_topt_gbl_I337 = topt_gbl%dim_1%LB
  817.          $SC_topt_gbl_I339 = topt_gbl%dim_2%SM
  817.          $SC_topt_gbl_I338 = topt_gbl%dim_2%EX
  817.          $SC_topt_gbl_I340 = topt_gbl%dim_2%LB
  817.          $SC_topt_gbl_I342 = topt_gbl%dim_3%SM
  817.          $SC_topt_gbl_I341 = topt_gbl%dim_3%EX
  817.          $SC_topt_gbl_I343 = topt_gbl%dim_3%LB
  816.          $SC_chil_gbl_I326 = chil_gbl%dim_1%EX
  816.          $SC_chil_gbl_I327 = chil_gbl%dim_1%LB
  816.          $SC_chil_gbl_I329 = chil_gbl%dim_2%SM
  816.          $SC_chil_gbl_I328 = chil_gbl%dim_2%EX
  816.          $SC_chil_gbl_I330 = chil_gbl%dim_2%LB
  816.          $SC_chil_gbl_I332 = chil_gbl%dim_3%SM
  816.          $SC_chil_gbl_I331 = chil_gbl%dim_3%EX
  816.          $SC_chil_gbl_I333 = chil_gbl%dim_3%LB
  816.          $SC_chil_fixed_I324 = chil_fixed%dim_1%EX
  816.          $SC_chil_fixed_I318 = chil_fixed%dim_1%LB
  816.          $SC_chil_fixed_I319 = chil_fixed%dim_2%SM
  816.          $SC_chil_fixed_I325 = chil_fixed%dim_2%EX
  816.          $SC_chil_fixed_I320 = chil_fixed%dim_2%LB
  817.          $SC_topt_fixed_I334 = topt_fixed%dim_1%EX
  817.          $SC_topt_fixed_I302 = topt_fixed%dim_1%LB
  817.          $SC_topt_fixed_I303 = topt_fixed%dim_2%SM
  817.          $SC_topt_fixed_I335 = topt_fixed%dim_2%EX
  817.          $SC_topt_fixed_I304 = topt_fixed%dim_2%LB
  818.          $SC_tll_fixed_I344 = tll_fixed%dim_1%EX
  818.          $SC_tll_fixed_I296 = tll_fixed%dim_1%LB
  818.          $SC_tll_fixed_I297 = tll_fixed%dim_2%SM
  818.          $SC_tll_fixed_I345 = tll_fixed%dim_2%EX
  818.          $SC_tll_fixed_I298 = tll_fixed%dim_2%LB
  819.          $SC_tu_fixed_I354 = tu_fixed%dim_1%EX
  819.          $SC_tu_fixed_I290 = tu_fixed%dim_1%LB
  819.          $SC_tu_fixed_I291 = tu_fixed%dim_2%SM
  819.          $SC_tu_fixed_I355 = tu_fixed%dim_2%EX
  819.          $SC_tu_fixed_I292 = tu_fixed%dim_2%LB
  812.          $I_L812_62 = 0
  812. !dir$ ivdep
  812.          do
  811.             $SCA_itype_I129 = itype(1 + $I_L812_62)
  811.             $SCA_mon_I130 = mon(1 + $I_L812_62)
  811.             $I_L811_38 = 0
  811.             do
  813.                (vcover_gbl%base_addr)(1 + $I_L812_62, latitu, 1 + $I_L811_38, 0) = (xcover_fixed%base_addr)($SCA_itype_I129, $SCA_mon_I130, 1 + $I_L811_38, 0)
  814.                (zlt_gbl%base_addr)(1 + $I_L812_62, latitu, 1 + $I_L811_38, 0) = (zlt_fixed%base_addr)($SCA_itype_I129, $SCA_mon_I130, 1 + $I_L811_38, 0)
  815.                (green_gbl%base_addr)(1 + $I_L812_62, latitu, 1 + $I_L811_38, 0) = (green_fixed%base_addr)($SCA_itype_I129, $SCA_mon_I130, 1 + $I_L811_38, 0)
  816.                (chil_gbl%base_addr)(1 + $I_L812_62, latitu, 1 + $I_L811_38, 0) = (chil_fixed%base_addr)($SCA_itype_I129, 1 + $I_L811_38, 0)
  817.                (topt_gbl%base_addr)(1 + $I_L812_62, latitu, 1 + $I_L811_38, 0) = (topt_fixed%base_addr)($SCA_itype_I129, 1 + $I_L811_38, 0)
  818.                (tll_gbl%base_addr)(1 + $I_L812_62, latitu, 1 + $I_L811_38, 0) = (tll_fixed%base_addr)($SCA_itype_I129, 1 + $I_L811_38, 0)
  819.                (tu_gbl%base_addr)(1 + $I_L812_62, latitu, 1 + $I_L811_38, 0) = (tu_fixed%base_addr)($SCA_itype_I129, 1 + $I_L811_38, 0)
  820.                (defac_gbl%base_addr)(1 + $I_L812_62, latitu, 1 + $I_L811_38, 0) = (defac_fixed%base_addr)($SCA_itype_I129, 1 + $I_L811_38, 0)
  821.                (ph1_gbl%base_addr)(1 + $I_L812_62, latitu, 1 + $I_L811_38, 0) = (ph1_fixed%base_addr)($SCA_itype_I129, 1 + $I_L811_38, 0)
  822.                (ph2_gbl%base_addr)(1 + $I_L812_62, latitu, 1 + $I_L811_38, 0) = (ph2_fixed%base_addr)($SCA_itype_I129, 1 + $I_L811_38, 0)
  823.                (rstpar_gbl%base_addr)(1 + $I_L812_62, latitu, 1 + $I_L811_38, 1, 0) = (rstpar_fixed%base_addr)($SCA_itype_I129, 1 + $I_L811_38, 1, 0)
  824.                (rstpar_gbl%base_addr)(1 + $I_L812_62, latitu, 1 + $I_L811_38, 2, 0) = (rstpar_fixed%base_addr)($SCA_itype_I129, 1 + $I_L811_38, 2, 0)
  825.                (rstpar_gbl%base_addr)(1 + $I_L812_62, latitu, 1 + $I_L811_38, 3, 0) = (rstpar_fixed%base_addr)($SCA_itype_I129, 1 + $I_L811_38, 3, 0)
  827.                $I_L811_38 = 1 + $I_L811_38
  812.                if ( $I_L811_38 >= 2 ) exit
  812.             enddo
  826.             $I_L812_62 = 1 + $I_L812_62
  826.             if ( $I_L812_62 >= nmax ) exit
  826.          enddo
  826.       endif
  828.       call wheat( latitu, itype(1), nmax, colrad2(1), mon(1), xday, yrl, idatec(1), monl(1), nsx(1) )
  831.       return
  831.       end
  831.       
  838.       
  838.       subroutine airmod( tg, capac, z0x, d, rdc, rbc, itype, mon, nmax, ncols )
  838.       t$10 = ncols
  889.       t$210 = _zla( 0, ncols )
  838.       t$211 = _zla( 0, ncols )
  838.       t$212 = 2 * _zla( 0, ncols )
  892.       t$215 = 8 * _zla( 0, ncols )
  893.       t$216 = 8 * _zla( 0, ncols )
  893.       t$218 = 16 * _zla( 0, ncols )
  838.       t$213 = int( _alloc( 16 * _zla( 0, ncols ) ), 8 )
  892.       t$214 = t$213
  893.       t$217 = t$213 + 8 * _zla( 0, ncols )
  898.       if ( nmax > 0 ) then
  898.          $I_L898_6 = 0
  898. !dir$ ivdep
  898.          do
  899.             if ( tg(1 + $I_L898_6) <= 273.16000000000003 ) then
  899.                if ( capac(1 + $I_L898_6, 2) >= 1.0e-3 ) then
  900.                   $ntyp_S1 = itype(1 + $I_L898_6)
  901.                   $xz_WR0_R0 = (z2%base_addr)($ntyp_S1, mon(1 + $I_L898_6), 0)
  902.                   $sdep_WR0_R1 = 5.0 * capac(1 + $I_L898_6, 2)
  903.                   $sdep_WR0_R1 = min( $sdep_WR0_R1, 9.4999999999999996e-1 * $xz_WR0_R0 )
  904.                   $d_WR0_R2 = $xz_WR0_R0 + -( ( ( $xz_WR0_R0 + -d(1 + $I_L898_6) ) * 1.0/$xz_WR0_R0 ) * ( $xz_WR0_R0 + -$sdep_WR0_R1 ) )
  904.                   d(1 + $I_L898_6) = $d_WR0_R2
  905.                   z0x(1 + $I_L898_6) = ( z0x(1 + $I_L898_6) * 1.0/( $xz_WR0_R0 + -(xd%base_addr)($ntyp_S1, mon(1 + $I_L898_6), 0) ) ) * ( $xz_WR0_R0 + -$d_WR0_R2 )
  906.                   rdc(1 + $I_L898_6) = ( rdc(1 + $I_L898_6) * ( $xz_WR0_R0 + -$sdep_WR0_R1 ) * 1.0/$xz_WR0_R0 )
  907.                   rbc(1 + $I_L898_6) = ( rbc(1 + $I_L898_6) * $xz_WR0_R0 * 1.0/( $xz_WR0_R0 + -$sdep_WR0_R1 ) )
  907.                endif
  907.             endif
  909.             $I_L898_6 = 1 + $I_L898_6
  908.             if ( $I_L898_6 >= nmax ) exit
  908.          enddo
  908.       endif
  838.       _free( t$213 )
  910.       return
  910.       end
  910.       
  916.       
  916.       subroutine temres( bps, psb, em, gmt, gmq, psy, rcp, wc, wg, fc, fg, hr, hgdtg, hgdtc, hgdtm, hcdtg, hcdtc, hcdtm, egdtg, egdtc, egdqm, ecdtg, ecdtc, ecdqm, deadtg, deadtc, deadqm, ect, eci, egt, egi, egs, ec, eg, hc, hg, ecidif, egidif, ra, rb, rd, rc, rg, ta, ea, etc, etg, btc, btg, radt, rst, rsoil, hrr, cc, cg, satcap, dtc, dtg, dtm, dqm, thermk, tc, tg, td, capac, qm, tm, psur, dtc3x, nmax, vcover, ncols )
  916.       t$11 = ncols
 1109.       t$219 = _zla( 0, ncols )
  916.       t$220 = _zla( 0, ncols )
  916.       t$221 = 3 * _zla( 0, ncols )
  916.       t$222 = 2 * _zla( 0, ncols )
 1135.       t$225 = 8 * _zla( 0, ncols )
 1134.       t$226 = 8 * _zla( 0, ncols )
 1134.       t$228 = 16 * _zla( 0, ncols )
 1136.       t$229 = 16 * _zla( 0, ncols )
 1136.       t$231 = 24 * _zla( 0, ncols )
 1137.       t$232 = 24 * _zla( 0, ncols )
 1137.       t$234 = 32 * _zla( 0, ncols )
 1138.       t$235 = 32 * _zla( 0, ncols )
 1138.       t$237 = 40 * _zla( 0, ncols )
 1139.       t$238 = 40 * _zla( 0, ncols )
 1139.       t$240 = 48 * _zla( 0, ncols )
  916.       t$241 = 4 * _zla( 0, ncols )
  916.       t$242 = 20 * _zla( 0, ncols )
 1125.       t$243 = 48 * _zla( 0, ncols )
 1125.       t$245 = 208 * _zla( 0, ncols )
 1146.       t$246 = 208 * _zla( 0, ncols )
 1146.       t$248 = 216 * _zla( 0, ncols )
 1148.       t$249 = 216 * _zla( 0, ncols )
 1148.       t$251 = 224 * _zla( 0, ncols )
 1149.       t$252 = 224 * _zla( 0, ncols )
 1149.       t$254 = 232 * _zla( 0, ncols )
 1150.       t$255 = 232 * _zla( 0, ncols )
 1150.       t$257 = 240 * _zla( 0, ncols )
 1151.       t$258 = 240 * _zla( 0, ncols )
 1151.       t$260 = 248 * _zla( 0, ncols )
 1123.       t$261 = 248 * _zla( 0, ncols )
 1123.       t$263 = 264 * _zla( 0, ncols )
  916.       t$223 = int( _alloc( 264 * _zla( 0, ncols ) ), 8 )
 1135.       t$224 = t$223
 1134.       t$227 = t$223 + 8 * _zla( 0, ncols )
 1136.       t$230 = t$223 + 16 * _zla( 0, ncols )
 1137.       t$233 = t$223 + 24 * _zla( 0, ncols )
 1138.       t$236 = t$223 + 32 * _zla( 0, ncols )
 1139.       t$239 = t$223 + 40 * _zla( 0, ncols )
 1125.       t$244 = t$223 + 48 * _zla( 0, ncols )
 1146.       t$247 = t$223 + 208 * _zla( 0, ncols )
 1148.       t$250 = t$223 + 216 * _zla( 0, ncols )
 1149.       t$253 = t$223 + 224 * _zla( 0, ncols )
 1150.       t$256 = t$223 + 232 * _zla( 0, ncols )
 1151.       t$259 = t$223 + 240 * _zla( 0, ncols )
 1123.       t$262 = t$223 + 248 * _zla( 0, ncols )
 1166.       $tim_S16 = 1.0 + 7.2722050925925924e-5 * dtc3x
 1167.       $dtc3xi_S17 = 1.0/dtc3x
 1170.       $F_A33 = ncols
 1170.       if ( ncols > 0 ) then
 1170.          $I_L1170_74 = 0
 1170.          do
 1170.             $I_L1170_72 = 0
 1170. !dir$ ivdep
 1170.             do
 1170.                vcover2(1 + $I_L1170_72, 1 + $I_L1170_74) = vcover(1 + $I_L1170_72, 1 + $I_L1170_74)
 1170.                $I_L1170_72 = 1 + $I_L1170_72
 1170.                if ( $I_L1170_72 >= $F_A33 ) exit
 1170.             enddo
 1170.             $I_L1170_74 = 1 + $I_L1170_74
 1170.             if ( $I_L1170_74 >= 2 ) exit
 1170.          enddo
 1170.       endif
 1172.       if ( nmax > 0 ) then
 1172.          $I_L1172_54 = 0
 1172. !dir$ ivdep
 1172.          do
 1180.             wc(1 + $I_L1172_54) = min( 1.0, ( capac(1 + $I_L1172_54, 1) * 1.0/satcap(1 + $I_L1172_54, 1) ) )
 1187.             wg(1 + $I_L1172_54) = min( 1.0, ( capac(1 + $I_L1172_54, 2) * 1.0/satcap(1 + $I_L1172_54, 2) ) )
 1191.             if ( tg(1 + $I_L1172_54) <= 273.16000000000003 ) then
 1192.                vcover2(1 + $I_L1172_54, 2) = 1.0
 1193.                wg(1 + $I_L1172_54) = min( 1.0, 250.0 * capac(1 + $I_L1172_54, 2) )
 1197.                rst(1 + $I_L1172_54, 2) = rsoil(1 + $I_L1172_54)
 1197.             endif
 1247.             ak(1 + $I_L1172_54) = ( 9.7551264184750155e-5 * 1.0/( psb(1 + $I_L1172_54) * bps(1 + $I_L1172_54) ) )
 1256.             ah(1 + $I_L1172_54) = ( 3.8888888888888891e-8 * 1.0/psb(1 + $I_L1172_54) )
 1261.             cgi(1 + $I_L1172_54) = 1.0/cg(1 + $I_L1172_54)
 1262.             cci(1 + $I_L1172_54) = 1.0/cc(1 + $I_L1172_54)
 1268.             psyi(1 + $I_L1172_54) = ( rcp(1 + $I_L1172_54) * 1.0/psy(1 + $I_L1172_54) )
 1269.             $I_L1172_54 = 1 + $I_L1172_54
 1198.             if ( $I_L1172_54 >= nmax ) exit
 1198.          enddo
 1273.          $I_L1273_56 = 0
 1273. !dir$ ivdep
 1273.          do
 1283.             $d1_S2 = 1.0/ra(1 + $I_L1273_56) + 1.0/rb(1 + $I_L1273_56) + 1.0/rd(1 + $I_L1273_56)
 1294.             $d1i_S3 = ( rcp(1 + $I_L1273_56) * 1.0/$d1_S2 )
 1302.             $ta_WR0_R0 = ( ( ( tg(1 + $I_L1273_56) * 1.0/rd(1 + $I_L1273_56) ) + ( tc(1 + $I_L1273_56) * 1.0/rb(1 + $I_L1273_56) ) + ( tm(1 + $I_L1273_56) * bps(1 + $I_L1273_56) * 1.0/ra(1 + $I_L1273_56) ) ) * 1.0/$d1_S2 )
 1302.             ta(1 + $I_L1273_56) = $ta_WR0_R0
 1313.             hc(1 + $I_L1273_56) = ( rcp(1 + $I_L1273_56) * ( tc(1 + $I_L1273_56) + -$ta_WR0_R0 ) * 1.0/rb(1 + $I_L1273_56) ) * dtc3x
 1321.             hg(1 + $I_L1273_56) = ( rcp(1 + $I_L1273_56) * ( tg(1 + $I_L1273_56) + -$ta_WR0_R0 ) * 1.0/rd(1 + $I_L1273_56) ) * dtc3x
 1339.             hcdtc(1 + $I_L1273_56) = ( $d1i_S3 * 1.0/rb(1 + $I_L1273_56) ) * ( 1.0/ra(1 + $I_L1273_56) + 1.0/rd(1 + $I_L1273_56) )
 1345.             hcdtg(1 + $I_L1273_56) = -( $d1i_S3 * 1.0/( rb(1 + $I_L1273_56) * rd(1 + $I_L1273_56) ) )
 1360.             hcdtm(1 + $I_L1273_56) = -( ( $d1i_S3 * 1.0/( rb(1 + $I_L1273_56) * ra(1 + $I_L1273_56) ) ) * bps(1 + $I_L1273_56) )
 1368.             hgdtg(1 + $I_L1273_56) = ( $d1i_S3 * 1.0/rd(1 + $I_L1273_56) ) * ( 1.0/ra(1 + $I_L1273_56) + 1.0/rb(1 + $I_L1273_56) )
 1375.             hgdtc(1 + $I_L1273_56) = -( $d1i_S3 * 1.0/( rd(1 + $I_L1273_56) * rb(1 + $I_L1273_56) ) )
 1386.             hgdtm(1 + $I_L1273_56) = -( ( $d1i_S3 * 1.0/( rd(1 + $I_L1273_56) * ra(1 + $I_L1273_56) ) ) * bps(1 + $I_L1273_56) )
 1388.             $I_L1273_56 = 1 + $I_L1273_56
 1273.             if ( $I_L1273_56 >= nmax ) exit
 1273.          enddo
 1395.          $I_L1395_58 = 0
 1395. !dir$ ivdep
 1395.          do
 1396.             $fac1_S5 = vcover2(1 + $I_L1395_58, 1) * ( 1.0 + -thermk(1 + $I_L1395_58) )
 1397.             rcdtc(1 + $I_L1395_58) = tc(1 + $I_L1395_58) * $fac1_S5 * tc(1 + $I_L1395_58) * tc(1 + $I_L1395_58) * 4.5359999999999999e-7
 1398.             rcdtg(1 + $I_L1395_58) = tg(1 + $I_L1395_58) * $fac1_S5 * tg(1 + $I_L1395_58) * tg(1 + $I_L1395_58) * -2.2679999999999999e-7
 1399.             rgdtc(1 + $I_L1395_58) = tc(1 + $I_L1395_58) * $fac1_S5 * tc(1 + $I_L1395_58) * tc(1 + $I_L1395_58) * -2.2679999999999999e-7
 1400.             rgdtg(1 + $I_L1395_58) = tg(1 + $I_L1395_58) * tg(1 + $I_L1395_58) * tg(1 + $I_L1395_58) * 2.2679999999999999e-7
 1401.             $I_L1395_58 = 1 + $I_L1395_58
 1395.             if ( $I_L1395_58 >= nmax ) exit
 1395.          enddo
 1402.          $I_L1402_60 = 0
 1402. !dir$ ivdep
 1402.          do
 1407.             $hr_WR0_R1 = -fg(1 + $I_L1402_60) + hrr(1 + $I_L1402_60) * fg(1 + $I_L1402_60) + 1.0
 1407.             hr(1 + $I_L1402_60) = $hr_WR0_R1
 1411.             $rc_WR0_R2 = rst(1 + $I_L1402_60, 1) * fc(1 + $I_L1402_60) + 2.0 * rb(1 + $I_L1402_60)
 1411.             rc(1 + $I_L1402_60) = $rc_WR0_R2
 1417.             $coc_S10 = ( ( 1.0 + -wc(1 + $I_L1402_60) ) * 1.0/$rc_WR0_R2 ) + ( 1.0/rb(1 + $I_L1402_60) * wc(1 + $I_L1402_60) * 5.0e-1 )
 1421.             $rg_WR0_R3 = rst(1 + $I_L1402_60, 2) * fg(1 + $I_L1402_60)
 1421.             rg(1 + $I_L1402_60) = $rg_WR0_R3
 1423.             $rsurf_S7 = rsoil(1 + $I_L1402_60) * fg(1 + $I_L1402_60)
 1433.             $cog1_S8 = ( vcover2(1 + $I_L1402_60, 2) * ( 1.0 + -wg(1 + $I_L1402_60) ) * 1.0/( $rg_WR0_R3 + rd(1 + $I_L1402_60) ) ) + ( ( 1.0 + -vcover2(1 + $I_L1402_60, 2) ) * 1.0/( $rsurf_S7 + rd(1 + $I_L1402_60) ) ) * $hr_WR0_R1 + ( vcover2(1 + $I_L1402_60, 2) * 1.0/( $rsurf_S7 + rd(1 + $I_L1402_60) + 44.0 ) ) * $hr_WR0_R1
 1441.             $cog2_S9 = ( vcover2(1 + $I_L1402_60, 2) * ( 1.0 + -wg(1 + $I_L1402_60) ) * 1.0/( $rg_WR0_R3 + rd(1 + $I_L1402_60) ) ) + ( ( 1.0 + -vcover2(1 + $I_L1402_60, 2) ) * 1.0/( $rsurf_S7 + rd(1 + $I_L1402_60) ) ) + ( vcover2(1 + $I_L1402_60, 2) * 1.0/( $rsurf_S7 + rd(1 + $I_L1402_60) + 44.0 ) )
 1450.             $cog1_S12 = $cog1_S8 + ( wg(1 + $I_L1402_60) * 1.0/rd(1 + $I_L1402_60) ) * vcover2(1 + $I_L1402_60, 2)
 1456.             $cog2_S11 = $cog2_S9 + ( wg(1 + $I_L1402_60) * 1.0/rd(1 + $I_L1402_60) ) * vcover2(1 + $I_L1402_60, 2)
 1462.             $d2_S13 = 1.0/ra(1 + $I_L1402_60) + $coc_S10 + $cog2_S11
 1468.             $top_S14 = $coc_S10 * etc(1 + $I_L1402_60) + $cog1_S12 * etg(1 + $I_L1402_60) + ( em(1 + $I_L1402_60) * 1.0/ra(1 + $I_L1402_60) )
 1470.             ea(1 + $I_L1402_60) = ( $top_S14 * 1.0/$d2_S13 )
 1489.             ec(1 + $I_L1402_60) = ( etc(1 + $I_L1402_60) + -( $top_S14 * 1.0/$d2_S13 ) ) * $coc_S10 * psyi(1 + $I_L1402_60) * dtc3x
 1499.             eg(1 + $I_L1402_60) = ( etg(1 + $I_L1402_60) * $cog1_S12 + -( ( $top_S14 * 1.0/$d2_S13 ) * $cog2_S11 ) ) * psyi(1 + $I_L1402_60) * dtc3x
 1501.             $deadtc_WR0_R4 = ( btc(1 + $I_L1402_60) * $coc_S10 * 1.0/$d2_S13 )
 1501.             deadtc(1 + $I_L1402_60) = $deadtc_WR0_R4
 1503.             $deadtg_WR0_R5 = ( btg(1 + $I_L1402_60) * $cog1_S12 * 1.0/$d2_S13 )
 1503.             deadtg(1 + $I_L1402_60) = $deadtg_WR0_R5
 1509.             $deadqm_WR0_R6 = ( 1.0/( ( 6.22e-1 + qm(1 + $I_L1402_60) ) * ( 6.22e-1 + qm(1 + $I_L1402_60) ) * ra(1 + $I_L1402_60) * $d2_S13 ) * psur(1 + $I_L1402_60) * 6.22e-1 )
 1509.             deadqm(1 + $I_L1402_60) = $deadqm_WR0_R6
 1511.             ecdtc(1 + $I_L1402_60) = ( btc(1 + $I_L1402_60) + -$deadtc_WR0_R4 ) * $coc_S10 * psyi(1 + $I_L1402_60)
 1513.             ecdtg(1 + $I_L1402_60) = -( $deadtg_WR0_R5 * $coc_S10 * psyi(1 + $I_L1402_60) )
 1515.             ecdqm(1 + $I_L1402_60) = -( $deadqm_WR0_R6 * $coc_S10 * psyi(1 + $I_L1402_60) )
 1517.             egdtg(1 + $I_L1402_60) = ( btg(1 + $I_L1402_60) * $cog1_S12 + -( $deadtg_WR0_R5 * $cog2_S11 ) ) * psyi(1 + $I_L1402_60)
 1519.             egdtc(1 + $I_L1402_60) = -( $deadtc_WR0_R4 * $cog2_S11 * psyi(1 + $I_L1402_60) )
 1521.             egdqm(1 + $I_L1402_60) = -( $deadqm_WR0_R6 * $cog2_S11 * psyi(1 + $I_L1402_60) )
 1523.             $I_L1402_60 = 1 + $I_L1402_60
 1402.             if ( $I_L1402_60 >= nmax ) exit
 1402.          enddo
 1528.          $I_L1528_62 = 0
 1528. !dir$ ivdep
 1528.          do
 1547.             pblsib(1 + $I_L1528_62, 1, 1) = $tim_S16 + dtc3x * cgi(1 + $I_L1528_62) * ( hgdtg(1 + $I_L1528_62) + egdtg(1 + $I_L1528_62) + rgdtg(1 + $I_L1528_62) )
 1548.             pblsib(1 + $I_L1528_62, 1, 2) = dtc3x * cgi(1 + $I_L1528_62) * ( hgdtc(1 + $I_L1528_62) + egdtc(1 + $I_L1528_62) + rgdtc(1 + $I_L1528_62) )
 1549.             pblsib(1 + $I_L1528_62, 1, 3) = dtc3x * cgi(1 + $I_L1528_62) * hgdtm(1 + $I_L1528_62)
 1550.             pblsib(1 + $I_L1528_62, 1, 4) = dtc3x * cgi(1 + $I_L1528_62) * egdqm(1 + $I_L1528_62)
 1554.             pblsib(1 + $I_L1528_62, 2, 1) = dtc3x * cci(1 + $I_L1528_62) * ( hcdtg(1 + $I_L1528_62) + ecdtg(1 + $I_L1528_62) + rcdtg(1 + $I_L1528_62) )
 1556.             pblsib(1 + $I_L1528_62, 2, 2) = 1.0 + dtc3x * cci(1 + $I_L1528_62) * ( hcdtc(1 + $I_L1528_62) + ecdtc(1 + $I_L1528_62) + rcdtc(1 + $I_L1528_62) )
 1563.             pblsib(1 + $I_L1528_62, 2, 3) = dtc3x * cci(1 + $I_L1528_62) * hcdtm(1 + $I_L1528_62)
 1565.             pblsib(1 + $I_L1528_62, 2, 4) = dtc3x * cci(1 + $I_L1528_62) * ecdqm(1 + $I_L1528_62)
 1575.             pblsib(1 + $I_L1528_62, 3, 1) = -( dtc3x * ak(1 + $I_L1528_62) * ( hgdtg(1 + $I_L1528_62) + hcdtg(1 + $I_L1528_62) ) )
 1577.             pblsib(1 + $I_L1528_62, 3, 2) = -( dtc3x * ak(1 + $I_L1528_62) * ( hgdtc(1 + $I_L1528_62) + hcdtc(1 + $I_L1528_62) ) )
 1637.             pblsib(1 + $I_L1528_62, 3, 3) = gmt(1 + $I_L1528_62, 2) + -( dtc3x * ak(1 + $I_L1528_62) * ( hgdtm(1 + $I_L1528_62) + hcdtm(1 + $I_L1528_62) ) )
 1638.             pblsib(1 + $I_L1528_62, 3, 4) = 0.0
 1647.             pblsib(1 + $I_L1528_62, 4, 1) = -( dtc3x * ah(1 + $I_L1528_62) * ( egdtg(1 + $I_L1528_62) + ecdtg(1 + $I_L1528_62) ) )
 1648.             pblsib(1 + $I_L1528_62, 4, 2) = -( dtc3x * ah(1 + $I_L1528_62) * ( egdtc(1 + $I_L1528_62) + ecdtc(1 + $I_L1528_62) ) )
 1649.             pblsib(1 + $I_L1528_62, 4, 3) = 0.0
 1651.             pblsib(1 + $I_L1528_62, 4, 4) = gmq(1 + $I_L1528_62, 2) + -( dtc3x * ah(1 + $I_L1528_62) * ( egdqm(1 + $I_L1528_62) + ecdqm(1 + $I_L1528_62) ) )
 1683.             pblsib(1 + $I_L1528_62, 1, 5) = ( radt(1 + $I_L1528_62, 2) + -( ( hg(1 + $I_L1528_62) + eg(1 + $I_L1528_62) ) * $dtc3xi_S17 ) ) * cgi(1 + $I_L1528_62) + -7.2722050925925924e-5 * ( tg(1 + $I_L1528_62) + -td(1 + $I_L1528_62) )
 1704.             pblsib(1 + $I_L1528_62, 2, 5) = ( radt(1 + $I_L1528_62, 1) + -( ( hc(1 + $I_L1528_62) + ec(1 + $I_L1528_62) ) * $dtc3xi_S17 ) ) * cci(1 + $I_L1528_62)
 1739.             pblsib(1 + $I_L1528_62, 3, 5) = gmt(1 + $I_L1528_62, 3) + ak(1 + $I_L1528_62) * ( hg(1 + $I_L1528_62) + hc(1 + $I_L1528_62) ) * $dtc3xi_S17
 1747.             pblsib(1 + $I_L1528_62, 4, 5) = gmq(1 + $I_L1528_62, 3) + ah(1 + $I_L1528_62) * ( eg(1 + $I_L1528_62) + ec(1 + $I_L1528_62) ) * $dtc3xi_S17
 1748.             $I_L1528_62 = 1 + $I_L1528_62
 1528.             if ( $I_L1528_62 >= nmax ) exit
 1528.          enddo
 1752.          $I_L1752_64 = 0
 1752. !dir$ ivdep
 1752.          do
 1753.             $pblsib_WR0_R7 = pblsib(1 + $I_L1752_64, 2, 2) + -( pblsib(1 + $I_L1752_64, 2, 1) * ( pblsib(1 + $I_L1752_64, 1, 2) * 1.0/pblsib(1 + $I_L1752_64, 1, 1) ) )
 1753.             pblsib(1 + $I_L1752_64, 2, 2) = $pblsib_WR0_R7
 1754.             $pblsib_WR0_R8 = pblsib(1 + $I_L1752_64, 2, 3) + -( pblsib(1 + $I_L1752_64, 2, 1) * ( pblsib(1 + $I_L1752_64, 1, 3) * 1.0/pblsib(1 + $I_L1752_64, 1, 1) ) )
 1754.             pblsib(1 + $I_L1752_64, 2, 3) = $pblsib_WR0_R8
 1755.             $pblsib_WR0_R9 = pblsib(1 + $I_L1752_64, 2, 4) + -( pblsib(1 + $I_L1752_64, 2, 1) * ( pblsib(1 + $I_L1752_64, 1, 4) * 1.0/pblsib(1 + $I_L1752_64, 1, 1) ) )
 1755.             pblsib(1 + $I_L1752_64, 2, 4) = $pblsib_WR0_R9
 1756.             $pblsib_WR0_R10 = pblsib(1 + $I_L1752_64, 2, 5) + -( pblsib(1 + $I_L1752_64, 2, 1) * ( pblsib(1 + $I_L1752_64, 1, 5) * 1.0/pblsib(1 + $I_L1752_64, 1, 1) ) )
 1757.             $pblsib_WR0_R11 = pblsib(1 + $I_L1752_64, 3, 2) + -( pblsib(1 + $I_L1752_64, 3, 1) * ( pblsib(1 + $I_L1752_64, 1, 2) * 1.0/pblsib(1 + $I_L1752_64, 1, 1) ) )
 1757.             pblsib(1 + $I_L1752_64, 3, 2) = $pblsib_WR0_R11
 1758.             $pblsib_WR0_R12 = pblsib(1 + $I_L1752_64, 3, 3) + -( pblsib(1 + $I_L1752_64, 3, 1) * ( pblsib(1 + $I_L1752_64, 1, 3) * 1.0/pblsib(1 + $I_L1752_64, 1, 1) ) )
 1759.             $pblsib_WR0_R13 = pblsib(1 + $I_L1752_64, 3, 4) + -( pblsib(1 + $I_L1752_64, 3, 1) * ( pblsib(1 + $I_L1752_64, 1, 4) * 1.0/pblsib(1 + $I_L1752_64, 1, 1) ) )
 1760.             $pblsib_WR0_R14 = pblsib(1 + $I_L1752_64, 3, 5) + -( pblsib(1 + $I_L1752_64, 3, 1) * ( pblsib(1 + $I_L1752_64, 1, 5) * 1.0/pblsib(1 + $I_L1752_64, 1, 1) ) )
 1761.             $pblsib_WR0_R15 = pblsib(1 + $I_L1752_64, 4, 2) + -( pblsib(1 + $I_L1752_64, 4, 1) * ( pblsib(1 + $I_L1752_64, 1, 2) * 1.0/pblsib(1 + $I_L1752_64, 1, 1) ) )
 1761.             pblsib(1 + $I_L1752_64, 4, 2) = $pblsib_WR0_R15
 1762.             $pblsib_WR0_R16 = pblsib(1 + $I_L1752_64, 4, 3) + -( pblsib(1 + $I_L1752_64, 4, 1) * ( pblsib(1 + $I_L1752_64, 1, 3) * 1.0/pblsib(1 + $I_L1752_64, 1, 1) ) )
 1763.             $pblsib_WR0_R17 = pblsib(1 + $I_L1752_64, 4, 4) + -( pblsib(1 + $I_L1752_64, 4, 1) * ( pblsib(1 + $I_L1752_64, 1, 4) * 1.0/pblsib(1 + $I_L1752_64, 1, 1) ) )
 1764.             $pblsib_WR0_R18 = pblsib(1 + $I_L1752_64, 4, 5) + -( pblsib(1 + $I_L1752_64, 4, 1) * ( pblsib(1 + $I_L1752_64, 1, 5) * 1.0/pblsib(1 + $I_L1752_64, 1, 1) ) )
 1765.             $pblsib_WR0_R12 = $pblsib_WR0_R12 + -( $pblsib_WR0_R11 * ( $pblsib_WR0_R8 * 1.0/$pblsib_WR0_R7 ) )
 1765.             pblsib(1 + $I_L1752_64, 3, 3) = $pblsib_WR0_R12
 1766.             $pblsib_WR0_R13 = $pblsib_WR0_R13 + -( $pblsib_WR0_R11 * ( $pblsib_WR0_R9 * 1.0/$pblsib_WR0_R7 ) )
 1766.             pblsib(1 + $I_L1752_64, 3, 4) = $pblsib_WR0_R13
 1767.             $pblsib_WR0_R14 = $pblsib_WR0_R14 + -( $pblsib_WR0_R11 * ( $pblsib_WR0_R10 * 1.0/$pblsib_WR0_R7 ) )
 1768.             $pblsib_WR0_R16 = $pblsib_WR0_R16 + -( $pblsib_WR0_R15 * ( $pblsib_WR0_R8 * 1.0/$pblsib_WR0_R7 ) )
 1768.             pblsib(1 + $I_L1752_64, 4, 3) = $pblsib_WR0_R16
 1771.             $pblsib_WR0_R17 = $pblsib_WR0_R17 + -( $pblsib_WR0_R15 * ( $pblsib_WR0_R9 * 1.0/$pblsib_WR0_R7 ) ) + -( $pblsib_WR0_R16 * ( $pblsib_WR0_R13 * 1.0/$pblsib_WR0_R12 ) )
 1771.             pblsib(1 + $I_L1752_64, 4, 4) = $pblsib_WR0_R17
 1774.             $pblsib_WR0_R18 = ( ( $pblsib_WR0_R18 + -( $pblsib_WR0_R15 * ( $pblsib_WR0_R10 * 1.0/$pblsib_WR0_R7 ) ) + -( $pblsib_WR0_R16 * ( $pblsib_WR0_R14 * 1.0/$pblsib_WR0_R12 ) ) ) * 1.0/$pblsib_WR0_R17 )
 1774.             pblsib(1 + $I_L1752_64, 4, 5) = $pblsib_WR0_R18
 1776.             $pblsib_WR0_R14 = ( $pblsib_WR0_R14 * 1.0/$pblsib_WR0_R12 ) + -( ( $pblsib_WR0_R13 * 1.0/$pblsib_WR0_R12 ) * $pblsib_WR0_R18 )
 1776.             pblsib(1 + $I_L1752_64, 3, 5) = $pblsib_WR0_R14
 1779.             $pblsib_WR0_R10 = ( $pblsib_WR0_R10 * 1.0/$pblsib_WR0_R7 ) + -( ( $pblsib_WR0_R9 * 1.0/$pblsib_WR0_R7 ) * $pblsib_WR0_R18 ) + -( ( $pblsib_WR0_R8 * 1.0/$pblsib_WR0_R7 ) * $pblsib_WR0_R14 )
 1779.             pblsib(1 + $I_L1752_64, 2, 5) = $pblsib_WR0_R10
 1783.             pblsib(1 + $I_L1752_64, 1, 5) = ( pblsib(1 + $I_L1752_64, 1, 5) * 1.0/pblsib(1 + $I_L1752_64, 1, 1) ) + -( ( pblsib(1 + $I_L1752_64, 1, 4) * 1.0/pblsib(1 + $I_L1752_64, 1, 1) ) * $pblsib_WR0_R18 ) + -( ( pblsib(1 + $I_L1752_64, 1, 3) * 1.0/pblsib(1 + $I_L1752_64, 1, 1) ) * $pblsib_WR0_R14 ) + -( ( pblsib(1 + $I_L1752_64, 1, 2) * 1.0/pblsib(1 + $I_L1752_64, 1, 1) ) * $pblsib_WR0_R10 )
 1787.             $I_L1752_64 = 1 + $I_L1752_64
 1752.             if ( $I_L1752_64 >= nmax ) exit
 1752.          enddo
 1788.          $I_L1788_66 = 0
 1788. !dir$ ivdep
 1788.          do
 1789.             $dtg_WR0_R19 = pblsib(1 + $I_L1788_66, 1, 5) * dtc3x
 1789.             dtg(1 + $I_L1788_66) = $dtg_WR0_R19
 1790.             $dtc_WR0_R20 = pblsib(1 + $I_L1788_66, 2, 5) * dtc3x
 1790.             dtc(1 + $I_L1788_66) = $dtc_WR0_R20
 1791.             $dtm_WR0_R21 = pblsib(1 + $I_L1788_66, 3, 5) * dtc3x
 1791.             dtm(1 + $I_L1788_66) = $dtm_WR0_R21
 1792.             $dqm_WR0_R22 = pblsib(1 + $I_L1788_66, 4, 5) * dtc3x
 1792.             dqm(1 + $I_L1788_66) = $dqm_WR0_R22
 1793.             hc(1 + $I_L1788_66) = hc(1 + $I_L1788_66) + dtc3x * ( hcdtc(1 + $I_L1788_66) * $dtc_WR0_R20 + hcdtg(1 + $I_L1788_66) * $dtg_WR0_R19 + hcdtm(1 + $I_L1788_66) * $dtm_WR0_R21 )
 1794.             hg(1 + $I_L1788_66) = hg(1 + $I_L1788_66) + dtc3x * ( hgdtc(1 + $I_L1788_66) * $dtc_WR0_R20 + hgdtg(1 + $I_L1788_66) * $dtg_WR0_R19 + hgdtm(1 + $I_L1788_66) * $dtm_WR0_R21 )
 1798.             ecpot(1 + $I_L1788_66) = ( etc(1 + $I_L1788_66) + -ea(1 + $I_L1788_66) ) + ( btc(1 + $I_L1788_66) + -deadtc(1 + $I_L1788_66) ) * $dtc_WR0_R20 + -( deadtg(1 + $I_L1788_66) * $dtg_WR0_R19 ) + -( deadqm(1 + $I_L1788_66) * $dqm_WR0_R22 )
 1800.             egpot(1 + $I_L1788_66) = ( etg(1 + $I_L1788_66) + -ea(1 + $I_L1788_66) ) + ( btg(1 + $I_L1788_66) + -deadtg(1 + $I_L1788_66) ) * $dtg_WR0_R19 + -( deadtc(1 + $I_L1788_66) * $dtc_WR0_R20 ) + -( deadqm(1 + $I_L1788_66) * $dqm_WR0_R22 )
 1802.             $I_L1788_66 = 1 + $I_L1788_66
 1788.             if ( $I_L1788_66 >= nmax ) exit
 1788.          enddo
 1809.          $I_L1809_68 = 0
 1809. !dir$ ivdep
 1809.          do
 1810.             $eci_WR0_R23 = ( ecpot(1 + $I_L1809_68) * wc(1 + $I_L1809_68) * psyi(1 + $I_L1809_68) * 1.0/rb(1 + $I_L1809_68) * 5.0e-1 ) * dtc3x
 1811.             $ecidif_WR0_R24 = max( 0.0, $eci_WR0_R23 + -2520000000.0 * capac(1 + $I_L1809_68, 1) )
 1811.             ecidif(1 + $I_L1809_68) = $ecidif_WR0_R24
 1812.             hc(1 + $I_L1809_68) = hc(1 + $I_L1809_68) + $ecidif_WR0_R24
 1813.             $eci_WR0_R23 = min( $eci_WR0_R23, 2520000000.0 * capac(1 + $I_L1809_68, 1) )
 1813.             eci(1 + $I_L1809_68) = $eci_WR0_R23
 1814.             $egi_WR0_R25 = ( egpot(1 + $I_L1809_68) * vcover2(1 + $I_L1809_68, 2) * wg(1 + $I_L1809_68) * psyi(1 + $I_L1809_68) * 1.0/rd(1 + $I_L1809_68) ) * dtc3x
 1815.             $egidif_WR0_R26 = max( 0.0, $egi_WR0_R25 + -2520000000.0 * capac(1 + $I_L1809_68, 2) )
 1815.             egidif(1 + $I_L1809_68) = $egidif_WR0_R26
 1816.             hg(1 + $I_L1809_68) = hg(1 + $I_L1809_68) + $egidif_WR0_R26
 1817.             $egi_WR0_R25 = min( $egi_WR0_R25, 2520000000.0 * capac(1 + $I_L1809_68, 2) )
 1817.             egi(1 + $I_L1809_68) = $egi_WR0_R25
 1821.             $rsurf_S21 = rsoil(1 + $I_L1809_68) * fg(1 + $I_L1809_68)
 1822.             $coct_S23 = ( ( 1.0 + -wc(1 + $I_L1809_68) ) * 1.0/rc(1 + $I_L1809_68) )
 1823.             $cogt_S24 = ( vcover2(1 + $I_L1809_68, 2) * ( 1.0 + -wg(1 + $I_L1809_68) ) * 1.0/( rg(1 + $I_L1809_68) + rd(1 + $I_L1809_68) ) )
 1824.             $cogs1_S22 = ( ( 1.0 + -vcover2(1 + $I_L1809_68, 2) ) * hr(1 + $I_L1809_68) * 1.0/( rd(1 + $I_L1809_68) + $rsurf_S21 ) ) + ( vcover2(1 + $I_L1809_68, 2) * 1.0/( rd(1 + $I_L1809_68) + $rsurf_S21 + 44.0 ) ) * hr(1 + $I_L1809_68)
 1826.             $cogs2_S25 = ( $cogs1_S22 * 1.0/hr(1 + $I_L1809_68) )
 1827.             $ect_WR0_R27 = ecpot(1 + $I_L1809_68) * $coct_S23 * psyi(1 + $I_L1809_68) * dtc3x
 1827.             ect(1 + $I_L1809_68) = $ect_WR0_R27
 1828.             ec(1 + $I_L1809_68) = $eci_WR0_R23 + $ect_WR0_R27
 1829.             $egt_WR0_R28 = egpot(1 + $I_L1809_68) * $cogt_S24 * psyi(1 + $I_L1809_68) * dtc3x
 1829.             egt(1 + $I_L1809_68) = $egt_WR0_R28
 1830.             $egs_WR0_R29 = ( etg(1 + $I_L1809_68) + btg(1 + $I_L1809_68) * dtg(1 + $I_L1809_68) ) * $cogs1_S22 + -( ( ea(1 + $I_L1809_68) + deadtg(1 + $I_L1809_68) * dtg(1 + $I_L1809_68) + deadtc(1 + $I_L1809_68) * dtc(1 + $I_L1809_68) + deadqm(1 + $I_L1809_68) * dqm(1 + $I_L1809_68) ) * $cogs2_S25 )
 1833.             $egs_WR0_R29 = $egs_WR0_R29 * psyi(1 + $I_L1809_68) * dtc3x
 1833.             egs(1 + $I_L1809_68) = $egs_WR0_R29
 1834.             eg(1 + $I_L1809_68) = $egt_WR0_R28 + $egs_WR0_R29 + $egi_WR0_R25
 1836.             $I_L1809_68 = 1 + $I_L1809_68
 1809.             if ( $I_L1809_68 >= nmax ) exit
 1809.          enddo
 1840.          $I_L1840_70 = 0
 1840. !dir$ ivdep
 1840.          do
 1841.             radt(1 + $I_L1840_70, 1) = radt(1 + $I_L1840_70, 1) + -( rcdtc(1 + $I_L1840_70) * dtc(1 + $I_L1840_70) ) + -( rcdtg(1 + $I_L1840_70) * dtg(1 + $I_L1840_70) )
 1842.             radt(1 + $I_L1840_70, 2) = radt(1 + $I_L1840_70, 2) + -( rgdtc(1 + $I_L1840_70) * dtc(1 + $I_L1840_70) ) + -( rgdtg(1 + $I_L1840_70) * dtg(1 + $I_L1840_70) )
 1843.             $ecf_S27 = sign( 1.0, ecpot(1 + $I_L1840_70) ) * ( -1.0 + 2.0 * fc(1 + $I_L1840_70) )
 1844.             $egf_S28 = sign( 1.0, egpot(1 + $I_L1840_70) ) * ( -1.0 + 2.0 * fg(1 + $I_L1840_70) )
 1845.             if ( $ecf_S27 <= 0.0 ) then
 1846.                hc(1 + $I_L1840_70) = hc(1 + $I_L1840_70) + eci(1 + $I_L1840_70) + ect(1 + $I_L1840_70)
 1847.                eci(1 + $I_L1840_70) = 0.0
 1848.                ect(1 + $I_L1840_70) = 0.0
 1849.                ec(1 + $I_L1840_70) = 0.0
 1849.             endif
 1851.             if ( $egf_S28 <= 0.0 ) then
 1852.                hg(1 + $I_L1840_70) = hg(1 + $I_L1840_70) + egi(1 + $I_L1840_70) + egt(1 + $I_L1840_70) + egs(1 + $I_L1840_70)
 1853.                egi(1 + $I_L1840_70) = 0.0
 1854.                egt(1 + $I_L1840_70) = 0.0
 1855.                egs(1 + $I_L1840_70) = 0.0
 1856.                eg(1 + $I_L1840_70) = 0.0
 1856.             endif
 1858.             $I_L1840_70 = 1 + $I_L1840_70
 1857.             if ( $I_L1840_70 >= nmax ) exit
 1857.          enddo
 1857.       endif
  916.       _free( t$223 )
 1859.       return
 1859.       end
 1859.       
 1867.       
 1867.       subroutine cut( icheck, em, rhoair, rcp, wc, wg, fc, fg, hr, ra, rb, rd, rc, rg, ea, etc, etg, rst, rsoil, vcover, nmax, ncols )
 1867.       t$13 = ncols
 1938.       t$264 = _zla( 0, ncols )
 1867.       t$265 = _zla( 0, ncols )
 1867.       t$266 = 2 * _zla( 0, ncols )
 1950.       if ( nmax > 0 ) then
 1950.          $I_L1950_6 = 0
 1950. !dir$ ivdep
 1950.          do
 1951.             if ( icheck(1 + $I_L1950_6) == 1 ) then
 1952.                rcp(1 + $I_L1950_6) = 1004.6 * rhoair(1 + $I_L1950_6)
 1953.                $rc_WR0_R0 = rst(1 + $I_L1950_6, 1) * fc(1 + $I_L1950_6) + rb(1 + $I_L1950_6) + rb(1 + $I_L1950_6) * fc(1 + $I_L1950_6)
 1953.                rc(1 + $I_L1950_6) = $rc_WR0_R0
 1954.                $coc_S6 = ( ( 1.0 + -wc(1 + $I_L1950_6) ) * 1.0/$rc_WR0_R0 ) + ( 1.0/rb(1 + $I_L1950_6) * wc(1 + $I_L1950_6) * 5.0e-1 )
 1955.                $rg_WR0_R1 = rst(1 + $I_L1950_6, 2) * fg(1 + $I_L1950_6)
 1955.                rg(1 + $I_L1950_6) = $rg_WR0_R1
 1956.                $rsurf_S1 = rsoil(1 + $I_L1950_6) * fg(1 + $I_L1950_6)
 1957.                $tem_S2 = ( vcover(1 + $I_L1950_6, 2) * ( 1.0 + -wg(1 + $I_L1950_6) ) * 1.0/( $rg_WR0_R1 + rd(1 + $I_L1950_6) ) )
 1958.                $cog2_S3 = $tem_S2 + ( ( 1.0 + -vcover(1 + $I_L1950_6, 2) ) * 1.0/( $rsurf_S1 + rd(1 + $I_L1950_6) ) ) + ( vcover(1 + $I_L1950_6, 2) * 1.0/( $rsurf_S1 + rd(1 + $I_L1950_6) + 44.0 ) )
 1961.                $cog1_S5 = ( $cog2_S3 + -$tem_S2 ) * hr(1 + $I_L1950_6) + $tem_S2
 1962.                $xnum_S4 = ( wg(1 + $I_L1950_6) * 1.0/rd(1 + $I_L1950_6) ) * vcover(1 + $I_L1950_6, 2)
 1965.                $d2_S9 = 1.0/ra(1 + $I_L1950_6) + $coc_S6 + ( $cog2_S3 + $xnum_S4 )
 1966.                $top_S10 = $coc_S6 * etc(1 + $I_L1950_6) + ( em(1 + $I_L1950_6) * 1.0/ra(1 + $I_L1950_6) ) + ( $cog1_S5 + $xnum_S4 ) * etg(1 + $I_L1950_6)
 1970.                ea(1 + $I_L1950_6) = ( $top_S10 * 1.0/$d2_S9 )
 1970.             endif
 1972.             $I_L1950_6 = 1 + $I_L1950_6
 1971.             if ( $I_L1950_6 >= nmax ) exit
 1971.          enddo
 1971.       endif
 1973.       return
 1973.       end
 1973.       
 1983.       
 1983.       subroutine rbrd( rb, rd, tcta, tgta, u2, tg, rdc, rbc, itype, z2, mon, nmax, ncols, zlt2 )
 1983.       t$15 = ncols
 2036.       t$267 = _zla( 0, ncols )
 1983.       t$268 = _zla( 0, ncols )
 1983.       t$269 = 2 * _zla( 0, ncols )
 2044.       t$272 = 8 * _zla( 0, ncols )
 2043.       t$273 = 8 * _zla( 0, ncols )
 2043.       t$275 = 16 * _zla( 0, ncols )
 1983.       t$270 = int( _alloc( 16 * _zla( 0, ncols ) ), 8 )
 2044.       t$271 = t$270
 2043.       t$274 = t$270 + 8 * _zla( 0, ncols )
 2050.       if ( nmax > 0 ) then
 2050.          $I_L2050_6 = 0
 2050. !dir$ ivdep
 2050.          do
 2051.             $ntyp_S1 = itype(1 + $I_L2050_6)
 2052.             if ( tcta(1 + $I_L2050_6) > 0.0 ) then
 2053.                temdif(1 + $I_L2050_6) = 1.0000000000000001e-1 + tcta(1 + $I_L2050_6)
 2053.             else
 2055.                temdif(1 + $I_L2050_6) = 1.0000000000000001e-1
 2055.             endif
 2057.             rb(1 + $I_L2050_6) = 1.0/( ( _sqrt( u2(1 + $I_L2050_6) ) * 1.0/rbc(1 + $I_L2050_6) ) + 4.0000000000000001e-3 * zlt2(1 + $I_L2050_6, 1) )
 2058.             if ( tgta(1 + $I_L2050_6) > 0 ) then
 2059.                temdif(1 + $I_L2050_6) = 1.0000000000000001e-1 + tgta(1 + $I_L2050_6)
 2059.             else
 2061.                temdif(1 + $I_L2050_6) = 1.0000000000000001e-1
 2061.             endif
 2063.             $fih_WR0_R0 = _sqrt( 1.0 + ( z2($ntyp_S1, mon(1 + $I_L2050_6)) * temdif(1 + $I_L2050_6) * 1.0/( tg(1 + $I_L2050_6) * u2(1 + $I_L2050_6) * u2(1 + $I_L2050_6) ) * 88.290000000000006 ) )
 2065.             rd(1 + $I_L2050_6) = ( rdc(1 + $I_L2050_6) * 1.0/( u2(1 + $I_L2050_6) * $fih_WR0_R0 ) )
 2066.             $I_L2050_6 = 1 + $I_L2050_6
 2062.             if ( $I_L2050_6 >= nmax ) exit
 2062.          enddo
 2062.       endif
 1983.       _free( t$270 )
 2067.       return
 2067.       end
 2067.       
 2074.       
 2074.       subroutine vntlax( ustarn, icheck, bps, dzm, cu, cuni, ctni, ustar, ra, ta, u2, tm, um, vm, d, z0, itype, z2, mon, nmax, jstneu, ncols )
 2074.       t$19 = ncols
 2166.       t$276 = _zla( 0, ncols )
 2172.       t$279 = 8 * _zla( 0, ncols )
 2074.       t$277 = int( _alloc( 8 * _zla( 0, ncols ) ), 8 )
 2172.       t$278 = t$277
 2212.       if ( nmax > 0 ) then
 2212.          $I_L2212_18 = 0
 2212. !dir$ ivdep
 2212.          do
 2213.             if ( icheck(1 + $I_L2212_18) == 1 ) then
 2214.                $speedm_WR0_R0 = _sqrt( um(1 + $I_L2212_18) * um(1 + $I_L2212_18) + vm(1 + $I_L2212_18) * vm(1 + $I_L2212_18) )
 2215.                $speedm_WR0_R0 = max( 2.0, $speedm_WR0_R0 )
 2215.                speedm(1 + $I_L2212_18) = $speedm_WR0_R0
 2215.             endif
 2217.             $I_L2212_18 = 1 + $I_L2212_18
 2216.             if ( $I_L2212_18 >= nmax ) exit
 2216.          enddo
 2216.       endif
 2223.       if ( jstneu ) then
 2224.          if ( nmax > 0 ) then
 2224.             $I_L2224_22 = 0
 2224. !dir$ ivdep
 2224.             do
 2225.                $ntyp_S2 = itype(1 + $I_L2224_22)
 2226.                $zl_S3 = z2($ntyp_S2, mon(1 + $I_L2224_22)) + 11.785 * z0(1 + $I_L2224_22)
 2227.                $cuni_WR0_R1 = 2.5 * log( ( ( dzm(1 + $I_L2224_22) + -d(1 + $I_L2224_22) ) * 1.0/z0(1 + $I_L2224_22) ) )
 2227.                cuni(1 + $I_L2224_22) = $cuni_WR0_R1
 2228.                $ustarn_WR0_R2 = ( speedm(1 + $I_L2224_22) * 1.0/$cuni_WR0_R1 )
 2228.                ustarn(1 + $I_L2224_22) = $ustarn_WR0_R2
 2229.                if ( $zl_S3 < dzm(1 + $I_L2224_22) ) then
 2230.                   $xct1_S4 = log( ( ( dzm(1 + $I_L2224_22) + -d(1 + $I_L2224_22) ) * 1.0/( $zl_S3 + -d(1 + $I_L2224_22) ) ) )
 2231.                   $xct2_S5 = log( ( ( $zl_S3 + -d(1 + $I_L2224_22) ) * 1.0/z0(1 + $I_L2224_22) ) )
 2232.                   $xctu1_S8 = $xct1_S4
 2233.                   $xctu2_S7 = log( ( ( $zl_S3 + -d(1 + $I_L2224_22) ) * 1.0/( z2($ntyp_S2, mon(1 + $I_L2224_22)) + -d(1 + $I_L2224_22) ) ) )
 2234.                   ctni(1 + $I_L2224_22) = 2.5 * ( $xct1_S4 + 7.5e-1 * $xct2_S5 )
 2234.                else
 2236.                   $xct2_S6 = log( ( ( dzm(1 + $I_L2224_22) + -d(1 + $I_L2224_22) ) * 1.0/z0(1 + $I_L2224_22) ) )
 2237.                   $xctu1_S8 = 0.0
 2238.                   $xctu2_S7 = log( ( ( dzm(1 + $I_L2224_22) + -d(1 + $I_L2224_22) ) * 1.0/( z2($ntyp_S2, mon(1 + $I_L2224_22)) + -d(1 + $I_L2224_22) ) ) )
 2239.                   ctni(1 + $I_L2224_22) = 1.875 * $xct2_S6
 2239.                endif
 2244.                u2(1 + $I_L2224_22) = speedm(1 + $I_L2224_22) + ( $xctu1_S8 + 7.5e-1 * $xctu2_S7 ) * $ustarn_WR0_R2 * -2.5
 2245.                $I_L2224_22 = 1 + $I_L2224_22
 2240.                if ( $I_L2224_22 >= nmax ) exit
 2240.             enddo
 2240.          endif
 2074.          _free( t$277 )
 2074.       else
 2251.          if ( nmax > 0 ) then
 2251.             $I_L2251_20 = 0
 2251. !dir$ ivdep
 2251.             do
 2252.                if ( icheck(1 + $I_L2251_20) == 1 ) then
 2256.                   $thm_S11 = tm(1 + $I_L2251_20) * bps(1 + $I_L2251_20)
 2257.                   $ntyp_S10 = itype(1 + $I_L2251_20)
 2258.                   $zl_S15 = z2($ntyp_S10, mon(1 + $I_L2251_20)) + 11.785 * z0(1 + $I_L2251_20)
 2259.                   $thvgm_S12 = ta(1 + $I_L2251_20) + -$thm_S11
 2260.                   $rib_S13 = -( ( dzm(1 + $I_L2251_20) + -d(1 + $I_L2251_20) ) * $thvgm_S12 * 1.0/( ( speedm(1 + $I_L2251_20) + -u2(1 + $I_L2251_20) ) * ( speedm(1 + $I_L2251_20) + -u2(1 + $I_L2251_20) ) * $thm_S11 ) * 9.8000000000000007 )
 2265.                   $rib_S14 = min( 1.6500000000000001e-1, max( -1.5, $rib_S13 ) )
 2266.                   if ( ( min( 1.6500000000000001e-1, max( -1.5, $rib_S13 ) ) ) < 0.0 ) then
 2268.                      $grzl_S16 = -( $rib_S14 * ( $zl_S15 + -d(1 + $I_L2251_20) ) * 1.0/( dzm(1 + $I_L2251_20) + -d(1 + $I_L2251_20) ) )
 2269.                      $grz2_S17 = -( $rib_S14 * z0(1 + $I_L2251_20) * 1.0/( dzm(1 + $I_L2251_20) + -d(1 + $I_L2251_20) ) )
 2271.                      $ftt_S18 = cvmg( 7.5e-1 * ( ( -9.0400000000000003e-1 * $rib_S14 ) + -( 9.0400000000000003e-1 * $grz2_S17 ) ), ( -9.0400000000000003e-1 * $rib_S14 ) + -2.2600000000000001e-1 * $grzl_S16 + -6.7800000000000005e-1 * $grz2_S17, $zl_S15 >= dzm(1 + $I_L2251_20) )
 2276.                      $cui_S22 = cuni(1 + $I_L2251_20) + -( -3.15e-1 * $rib_S14 )
 2277.                      $cti_S23 = ctni(1 + $I_L2251_20) + -$ftt_S18
 2277.                   else
 2279.                      $rzl_S19 = ( $rib_S14 * 1.0/( dzm(1 + $I_L2251_20) + -d(1 + $I_L2251_20) ) ) * ( $zl_S15 + -d(1 + $I_L2251_20) )
 2280.                      $rz2_S20 = ( $rib_S14 * 1.0/( dzm(1 + $I_L2251_20) + -d(1 + $I_L2251_20) ) ) * z0(1 + $I_L2251_20)
 2282.                      $ftt_S21 = cvmg( 7.5e-1 * ( ( 66.849999999999994 * $rib_S14 ) + -( 66.849999999999994 * $rz2_S20 ) ), ( 66.849999999999994 * $rib_S14 ) + -16.712499999999999 * $rzl_S19 + -50.137499999999996 * $rz2_S20, $zl_S15 >= dzm(1 + $I_L2251_20) )
 2287.                      $cui_S22 = cuni(1 + $I_L2251_20) + ( 66.849999999999994 * $rib_S14 )
 2288.                      $cti_S23 = ctni(1 + $I_L2251_20) + $ftt_S21
 2288.                   endif
 2290.                   cu(1 + $I_L2251_20) = 1.0/$cui_S22
 2297.                   $ustar_WR0_R3 = speedm(1 + $I_L2251_20) * 1.0/$cui_S22
 2297.                   ustar(1 + $I_L2251_20) = $ustar_WR0_R3
 2302.                   ra(1 + $I_L2251_20) = ( max( 8.0000000000000004e-1, ( $cti_S23 * 1.0/$ustar_WR0_R3 ) ) )
 2302.                endif
 2304.                $I_L2251_20 = 1 + $I_L2251_20
 2303.                if ( $I_L2251_20 >= nmax ) exit
 2303.             enddo
 2303.          endif
 2074.          _free( t$277 )
 2074.       endif
 2305.       return
 2305.       end
 2305.       
 2314.       
 2314.       subroutine runoff( roff, tg, td, capac, w, itype, dtc3x, nmax, ncols )
 2314.       t$22 = ncols
 2374.       t$280 = _zla( 0, ncols )
 2314.       t$281 = _zla( 0, ncols )
 2314.       t$282 = 2 * _zla( 0, ncols )
 2314.       t$283 = 3 * _zla( 0, ncols )
 2381.       t$286 = 8 * _zla( 0, ncols )
 2377.       t$287 = 8 * _zla( 0, ncols )
 2377.       t$289 = 16 * _zla( 0, ncols )
 2376.       t$290 = 16 * _zla( 0, ncols )
 2376.       t$292 = 24 * _zla( 0, ncols )
 2378.       t$293 = 24 * _zla( 0, ncols )
 2378.       t$295 = 48 * _zla( 0, ncols )
 2379.       t$296 = 48 * _zla( 0, ncols )
 2379.       t$298 = 72 * _zla( 0, ncols )
 2380.       t$299 = 72 * _zla( 0, ncols )
 2380.       t$301 = 96 * _zla( 0, ncols )
 2314.       t$284 = int( _alloc( 96 * _zla( 0, ncols ) ), 8 )
 2381.       t$285 = t$284
 2377.       t$288 = t$284 + 8 * _zla( 0, ncols )
 2376.       t$291 = t$284 + 16 * _zla( 0, ncols )
 2378.       t$294 = t$284 + 24 * _zla( 0, ncols )
 2379.       t$297 = t$284 + 48 * _zla( 0, ncols )
 2380.       t$300 = t$284 + 72 * _zla( 0, ncols )
 2415.       $subdti_S8 = 1.0/dtc3x
 2416.       $F_A33 = ncols
 2416.       if ( ncols > 0 ) then
 2416.          $I_L2416_38 = 0
 2416. !dir$ ivdep
 2416.          do
 2416.             q3g(1 + $I_L2416_38) = 0.0
 2416.             $I_L2416_38 = 1 + $I_L2416_38
 2416.             if ( $I_L2416_38 >= $F_A33 ) exit
 2416.          enddo
 2416.       endif
 2420.       if ( nmax > 0 ) then
 2420.          $I_L2420_30 = 0
 2420. !dir$ ivdep
 2420.          do
 2421.             if ( w(1 + $I_L2420_30, 1) < 0.0 ) then
 2421.                w(1 + $I_L2420_30, 1) = 1.0e-3
 2421.             endif
 2422.             if ( w(1 + $I_L2420_30, 2) < 0.0 ) then
 2422.                w(1 + $I_L2420_30, 2) = 1.0e-3
 2422.             endif
 2423.             if ( w(1 + $I_L2420_30, 3) < 0.0 ) then
 2423.                w(1 + $I_L2420_30, 3) = 1.0e-3
 2423.             endif
 2424.             $I_L2420_30 = 1 + $I_L2420_30
 2423.             if ( $I_L2420_30 >= nmax ) exit
 2423.          enddo
 2426.          $I_L2426_40 = 0
 2426. !dir$ blocking_size( 0, 0 )
 2426.          do
 2427.             $I_L2427_32 = 0
 2427. !dir$ ivdep
 2427. !dir$ blocking_size( 0, 0 )
 2427.             do
 2428.                $ntyp_S3 = itype(1 + $I_L2427_32)
 2429.                $twi_WR0_R0 = min( 1.0, max( 2.9999999999999999e-2, w(1 + $I_L2427_32, 1 + $I_L2426_40) ) )
 2429.                twi(1 + $I_L2427_32, 1 + $I_L2426_40) = $twi_WR0_R0
 2430.                twip(1 + $I_L2427_32, 1 + $I_L2426_40) = _expn( -( (bee%base_addr)($ntyp_S3, 0) * log( $twi_WR0_R0 ) ) )
 2431.                twipp(1 + $I_L2427_32, 1 + $I_L2426_40) = _expn( ( 3.0 + 2.0 * (bee%base_addr)($ntyp_S3, 0) ) * log( min( 1.0, $twi_WR0_R0 ) ) )
 2432.                $I_L2427_32 = 1 + $I_L2427_32
 2427.                if ( $I_L2427_32 >= nmax ) exit
 2427.             enddo
 2433.             $I_L2426_40 = 1 + $I_L2426_40
 2432.             if ( $I_L2426_40 >= 3 ) exit
 2432.          enddo
 2435.          $I_L2435_34 = 0
 2435. !dir$ ivdep
 2435.          do
 2436.             $ntyp_S5 = itype(1 + $I_L2435_34)
 2437.             $slop_S6 = 1.736e-1
 2438.             if ( (poros%base_addr)($ntyp_S5, 0) == 4.3519999999999998e-1 ) then
 2438.                $slop_S6 = 8.72e-2
 2438.             endif
 2439.             if ( (poros%base_addr)($ntyp_S5, 0) == 4.577e-1 ) then
 2439.                $slop_S6 = 3.4200000000000003e-1
 2439.             endif
 2449.             $pows_S7 = 2.0 + 2.0 * (bee%base_addr)($ntyp_S5, 0)
 2450.             $q3g_WR0_R1 = _expn( -( $pows_S7 * log( twi(1 + $I_L2435_34, 3) ) ) ) + ( (satco%base_addr)($ntyp_S5, 0) * 1.0/( (zdepth%base_addr)($ntyp_S5, 3, 0) * (poros%base_addr)($ntyp_S5, 0) ) ) * $slop_S6 * $pows_S7 * dtc3x
 2459.             $q3g_WR0_R1 = min( max( 0.0, -( ( _expn( -( log( $q3g_WR0_R1 ) * 1.0/$pows_S7 ) ) + -w(1 + $I_L2435_34, 3) ) * (poros%base_addr)($ntyp_S5, 0) * (zdepth%base_addr)($ntyp_S5, 3, 0) * $subdti_S8 ) ), w(1 + $I_L2435_34, 3) * (poros%base_addr)($ntyp_S5, 0) * (zdepth%base_addr)($ntyp_S5, 3, 0) * $subdti_S8 ) + (zdepth%base_addr)($ntyp_S5, 3, 0) * (poros%base_addr)($ntyp_S5, 0) * w(1 + $I_L2435_34, 3) * 1.1574074074074074e-8
 2459.             q3g(1 + $I_L2435_34) = $q3g_WR0_R1
 2461.             $I_L2435_34 = 1 + $I_L2435_34
 2439.             if ( $I_L2435_34 >= nmax ) exit
 2439.          enddo
 2480.          $I_L2480_36 = 0
 2480. !dir$ ivdep
 2480.          do
 2481.             $ntyp_S12 = itype(1 + $I_L2480_36)
 2482.             $wmax_S10 = max( 5.0000000000000003e-2, max( w(1 + $I_L2480_36, 3), max( w(1 + $I_L2480_36, 2), w(1 + $I_L2480_36, 1) ) ) )
 2484.             $pmax_S13 = _expn( -( (bee%base_addr)($ntyp_S12, 0) * log( ( min( 1.0, $wmax_S10 ) ) ) ) )
 2485.             $wmin_S14 = _expn( -( 1.0/(bee%base_addr)($ntyp_S12, 0) * log( $pmax_S13 + -( 2.0 * 1.0/( (phsat%base_addr)($ntyp_S12, 0) * ( (zdepth%base_addr)($ntyp_S12, 1, 0) + 2.0 * (zdepth%base_addr)($ntyp_S12, 2, 0) + (zdepth%base_addr)($ntyp_S12, 3, 0) ) ) ) ) ) )
 2488.             $wmin_S15 = max( 2.0e-2, min( $wmin_S14, min( w(1 + $I_L2480_36, 3), min( w(1 + $I_L2480_36, 2), w(1 + $I_L2480_36, 1) ) ) ) )
 2489.             $pmin_S16 = _expn( -( (bee%base_addr)($ntyp_S12, 0) * log( $wmin_S15 ) ) )
 2490.             $dpdw_S22 = ( (phsat%base_addr)($ntyp_S12, 0) * ( $pmax_S13 + -$pmin_S16 ) * 1.0/( ( min( 1.0, $wmax_S10 ) ) + -$wmin_S15 ) )
 2494.             $rsame_S21 = 0.0
 2495.             $avk_WR0_R5 = twip(1 + $I_L2480_36, 1) * twipp(1 + $I_L2480_36, 1) + -( twip(1 + $I_L2480_36, 2) * twipp(1 + $I_L2480_36, 2) )
 2496.             $div_WR0_R6 = twip(1 + $I_L2480_36, 2) + -twip(1 + $I_L2480_36, 1)
 2497.             if ( abs( $div_WR0_R6 ) <= 9.9999999999999995e-8 ) then
 2497.                $rsame_S21 = 1.0
 2497.             endif
 2507.             $tsnow_S18 = min( 273.15000000000003, tg(1 + $I_L2480_36) )
 2508.             $areas_S17 = min( 9.99e-1, 13.199999999999999 * capac(1 + $I_L2480_36, 2) )
 2509.             $tgs_S19 = $tsnow_S18 * $areas_S17 + tg(1 + $I_L2480_36) * ( 1.0 + -$areas_S17 )
 2512.             $props_S20 = max( 5.0000000000000003e-2, min( 1.0, ( 1.0000000000000001e-1 * ( -263.16000000000003 + $tgs_S19 ) ) ) )
 2513.             $avk_WR0_R5 = min( max( ( (satco%base_addr)($ntyp_S12, 0) * $avk_WR0_R5 * 1.0/( ( 1.0 + ( 3.0 * 1.0/(bee%base_addr)($ntyp_S12, 0) ) ) * $div_WR0_R6 + $rsame_S21 ) ), (satco%base_addr)($ntyp_S12, 0) * min( twipp(1 + $I_L2480_36, 2), twipp(1 + $I_L2480_36, 1) ) ), 1.01 * ( (satco%base_addr)($ntyp_S12, 0) * max( twipp(1 + $I_L2480_36, 2), twipp(1 + $I_L2480_36, 1) ) ) ) * $props_S20
 2514.             $q3g_WR0_R7 = q3g(1 + $I_L2480_36) * ( max( 5.0000000000000003e-2, min( 1.0, ( 1.0000000000000001e-1 * ( -263.16000000000003 + $tgs_S19 ) ) ) ) )
 2518.             $dpdwdz_S23 = ( 1.0/( (zdepth%base_addr)($ntyp_S12, 1, 0) + (zdepth%base_addr)($ntyp_S12, 2, 0) ) * $dpdw_S22 * 2.0 )
 2519.             $aaa_S30 = 1.0 + ( $avk_WR0_R5 * $dpdwdz_S23 * ( 1.0/(zdepth%base_addr)($ntyp_S12, 1, 0) + 1.0/(zdepth%base_addr)($ntyp_S12, 2, 0) ) * dtc3x * 1.0/(poros%base_addr)($ntyp_S12, 0) )
 2522.             $bbb_S28 = -( ( $avk_WR0_R5 * $dpdwdz_S23 * 1.0/(zdepth%base_addr)($ntyp_S12, 2, 0) ) * dtc3x * 1.0/(poros%base_addr)($ntyp_S12, 0) )
 2523.             $ccc_S35 = $avk_WR0_R5 * ( 1.0 + $dpdwdz_S23 * ( w(1 + $I_L2480_36, 1) + -w(1 + $I_L2480_36, 2) ) )
 2528.             $rsame_S25 = 0.0
 2529.             $avk_WR0_R5 = twip(1 + $I_L2480_36, 2) * twipp(1 + $I_L2480_36, 2) + -( twip(1 + $I_L2480_36, 3) * twipp(1 + $I_L2480_36, 3) )
 2530.             $div_WR0_R6 = twip(1 + $I_L2480_36, 3) + -twip(1 + $I_L2480_36, 2)
 2531.             if ( abs( $div_WR0_R6 ) <= 9.9999999999999995e-8 ) then
 2531.                $rsame_S25 = 1.0
 2531.             endif
 2544.             $ts_S24 = td(1 + $I_L2480_36)
 2547.             $avk_WR0_R5 = min( max( ( (satco%base_addr)($ntyp_S12, 0) * $avk_WR0_R5 * 1.0/( ( 1.0 + ( 3.0 * 1.0/(bee%base_addr)($ntyp_S12, 0) ) ) * $div_WR0_R6 + $rsame_S25 ) ), (satco%base_addr)($ntyp_S12, 0) * min( twipp(1 + $I_L2480_36, 2), twipp(1 + $I_L2480_36, 3) ) ), 1.01 * ( (satco%base_addr)($ntyp_S12, 0) * max( twipp(1 + $I_L2480_36, 2), twipp(1 + $I_L2480_36, 3) ) ) ) * ( max( 5.0000000000000003e-2, min( 1.0, ( 1.0000000000000001e-1 * ( -263.16000000000003 + $ts_S24 ) ) ) ) )
 2548.             $q3g_WR0_R7 = $q3g_WR0_R7 * ( max( 5.0000000000000003e-2, min( 1.0, ( 1.0000000000000001e-1 * ( -263.16000000000003 + $ts_S24 ) ) ) ) )
 2548.             q3g(1 + $I_L2480_36) = $q3g_WR0_R7
 2552.             $dpdwdz_S26 = ( 1.0/( (zdepth%base_addr)($ntyp_S12, 2, 0) + (zdepth%base_addr)($ntyp_S12, 3, 0) ) * $dpdw_S22 * 2.0 )
 2553.             $aaa_S29 = 1.0 + ( $avk_WR0_R5 * $dpdwdz_S26 * ( 1.0/(zdepth%base_addr)($ntyp_S12, 2, 0) + 1.0/(zdepth%base_addr)($ntyp_S12, 3, 0) ) * dtc3x * 1.0/(poros%base_addr)($ntyp_S12, 0) )
 2556.             $bbb_S27 = -( ( $avk_WR0_R5 * $dpdwdz_S26 * 1.0/(zdepth%base_addr)($ntyp_S12, 2, 0) ) * dtc3x * 1.0/(poros%base_addr)($ntyp_S12, 0) )
 2557.             $ccc_S34 = $avk_WR0_R5 * ( ( ( $dpdwdz_S26 * $q3g_WR0_R7 * 1.0/(zdepth%base_addr)($ntyp_S12, 3, 0) ) * dtc3x * 1.0/(poros%base_addr)($ntyp_S12, 0) ) + $dpdwdz_S26 * ( w(1 + $I_L2480_36, 2) + -w(1 + $I_L2480_36, 3) ) + 1.0 )
 2594.             $denom_S32 = ( $aaa_S30 * $aaa_S29 + -( $bbb_S28 * $bbb_S27 ) )
 2595.             $rdenom_S31 = 0.0
 2596.             if ( abs( $aaa_S30 * $aaa_S29 + -( $bbb_S28 * $bbb_S27 ) ) < 9.9999999999999995e-7 ) then
 2596.                $rdenom_S31 = 1.0
 2596.             endif
 2604.             $w_WR0_R2 = w(1 + $I_L2480_36, 3) + -( $q3g_WR0_R7 * dtc3x * 1.0/( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 3, 0) ) )
 2609.             $qmax_S36 = w(1 + $I_L2480_36, 1) * ( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 1, 0) * 1.0/dtc3x )
 2610.             $qmin_S37 = -( w(1 + $I_L2480_36, 2) * ( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 2, 0) * 1.0/dtc3x ) )
 2613.             $w_WR0_R4 = w(1 + $I_L2480_36, 1) + -( ( max( $qmin_S37, ( min( $qmax_S36, ( ( $aaa_S29 * $ccc_S35 + -( $bbb_S28 * $ccc_S34 ) ) * ( ( 1.0 + -$rdenom_S31 ) * 1.0/( $denom_S32 + $rdenom_S31 ) ) ) ) ) ) ) * 1.0/( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 1, 0) * 1.0/dtc3x ) )
 2614.             $w_WR0_R3 = w(1 + $I_L2480_36, 2) + ( ( max( $qmin_S37, ( min( $qmax_S36, ( ( $aaa_S29 * $ccc_S35 + -( $bbb_S28 * $ccc_S34 ) ) * ( ( 1.0 + -$rdenom_S31 ) * 1.0/( $denom_S32 + $rdenom_S31 ) ) ) ) ) ) ) * 1.0/( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 2, 0) * 1.0/dtc3x ) )
 2619.             $qmax_S38 = $w_WR0_R3 * ( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 2, 0) * 1.0/dtc3x )
 2620.             $qmin_S39 = -( $w_WR0_R2 * ( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 3, 0) * 1.0/dtc3x ) )
 2623.             $w_WR0_R3 = $w_WR0_R3 + -( ( max( $qmin_S39, ( min( $qmax_S38, ( ( $aaa_S30 * $ccc_S34 + -( $bbb_S27 * $ccc_S35 ) ) * ( ( 1.0 + -$rdenom_S31 ) * 1.0/( $denom_S32 + $rdenom_S31 ) ) ) ) ) ) ) * 1.0/( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 2, 0) * 1.0/dtc3x ) )
 2624.             $w_WR0_R2 = $w_WR0_R2 + ( ( max( $qmin_S39, ( min( $qmax_S38, ( ( $aaa_S30 * $ccc_S34 + -( $bbb_S27 * $ccc_S35 ) ) * ( ( 1.0 + -$rdenom_S31 ) * 1.0/( $denom_S32 + $rdenom_S31 ) ) ) ) ) ) ) * 1.0/( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 3, 0) * 1.0/dtc3x ) )
 2638.             $excess_S40 = max( 0.0, ( -1.0 + $w_WR0_R4 ) )
 2639.             $w_WR0_R4 = $w_WR0_R4 + -( max( 0.0, ( -1.0 + $w_WR0_R4 ) ) )
 2644.             $excess_S41 = max( 0.0, ( -1.0 + $w_WR0_R3 ) )
 2650.             $excess_S42 = max( 0.0, ( -1.0 + $w_WR0_R2 ) )
 2652.             roff(1 + $I_L2480_36) = roff(1 + $I_L2480_36) + $q3g_WR0_R7 * dtc3x + $excess_S40 * (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 1, 0) + $excess_S41 * (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 2, 0) + $excess_S42 * (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 3, 0)
 2662.             $deficit_S43 = max( 0.0, ( 9.9999999999999998e-13 + -$w_WR0_R4 ) )
 2663.             $w_WR0_R4 = $w_WR0_R4 + ( max( 0.0, ( 9.9999999999999998e-13 + -$w_WR0_R4 ) ) )
 2663.             w(1 + $I_L2480_36, 1) = $w_WR0_R4
 2664.             $w_WR0_R3 = $w_WR0_R3 + -( max( 0.0, ( -1.0 + $w_WR0_R3 ) ) ) + -( $deficit_S43 * (zdepth%base_addr)($ntyp_S12, 1, 0) * 1.0/(zdepth%base_addr)($ntyp_S12, 2, 0) )
 2668.             $deficit_S44 = max( 0.0, ( 9.9999999999999998e-13 + -$w_WR0_R3 ) )
 2669.             $w_WR0_R3 = $w_WR0_R3 + ( max( 0.0, ( 9.9999999999999998e-13 + -$w_WR0_R3 ) ) )
 2669.             w(1 + $I_L2480_36, 2) = $w_WR0_R3
 2682.             $w_WR0_R2 = max( 9.9999999999999998e-13, $w_WR0_R2 + -( max( 0.0, ( -1.0 + $w_WR0_R2 ) ) ) + -( $deficit_S44 * (zdepth%base_addr)($ntyp_S12, 2, 0) * 1.0/(zdepth%base_addr)($ntyp_S12, 3, 0) ) )
 2682.             w(1 + $I_L2480_36, 3) = $w_WR0_R2
 2683.             $I_L2480_36 = 1 + $I_L2480_36
 2596.             if ( $I_L2480_36 >= nmax ) exit
 2596.          enddo
 2596.       endif
 2314.       _free( t$284 )
 2684.       return
 2684.       end
 2684.       
 2692.       
 2692.       subroutine stres2( icount, ft1, fp1, icheck, ta, ea, rst, phsoil, stm, tc, tg, w, vcover, itype, rootd, zdepth, nmax, ncols, topt2, tll2, tu2, defac2, ph12, ph22 )
 2692.       t$23 = ncols
 2734.       t$302 = _zla( 0, ncols )
 2692.       t$303 = _zla( 0, ncols )
 2692.       t$304 = 2 * _zla( 0, ncols )
 2692.       t$305 = 3 * _zla( 0, ncols )
 2768.       t$308 = 8 * _zla( 0, ncols )
 2770.       t$309 = 8 * _zla( 0, ncols )
 2770.       t$311 = 16 * _zla( 0, ncols )
 2771.       t$312 = 16 * _zla( 0, ncols )
 2771.       t$314 = 24 * _zla( 0, ncols )
 2772.       t$315 = 24 * _zla( 0, ncols )
 2772.       t$317 = 32 * _zla( 0, ncols )
 2769.       t$318 = 32 * _zla( 0, ncols )
 2769.       t$320 = 40 * _zla( 0, ncols )
 2773.       t$321 = 40 * _zla( 0, ncols )
 2773.       t$323 = 48 * _zla( 0, ncols )
 2767.       t$324 = 48 * _zla( 0, ncols )
 2767.       t$326 = 56 * _zla( 0, ncols )
 2692.       t$306 = int( _alloc( 56 * _zla( 0, ncols ) ), 8 )
 2768.       t$307 = t$306
 2770.       t$310 = t$306 + 8 * _zla( 0, ncols )
 2771.       t$313 = t$306 + 16 * _zla( 0, ncols )
 2772.       t$316 = t$306 + 24 * _zla( 0, ncols )
 2769.       t$319 = t$306 + 32 * _zla( 0, ncols )
 2773.       t$322 = t$306 + 40 * _zla( 0, ncols )
 2767.       t$325 = t$306 + 48 * _zla( 0, ncols )
 2789.       if ( icount == 1 ) then
 2791.          if ( nmax > 0 ) then
 2791.             $I_L2791_18 = 0
 2791. !dir$ ivdep
 2791.             do
 2792.                if ( icheck(1 + $I_L2791_18) == 1 ) then
 2793.                   $ntyp_S1 = itype(1 + $I_L2791_18)
 2794.                   if ( $ntyp_S1 /= 11 ) then
 2794.                      if ( $ntyp_S1 /= 13 ) then
 2798.                         $tv_WR0_R0 = tc(1 + $I_L2791_18)
 2803.                         $tv_WR0_R0 = max( min( $tv_WR0_R0, ( -1.0000000000000001e-1 + tu2(1 + $I_L2791_18, 1) ) ), ( 1.0000000000000001e-1 + tll2(1 + $I_L2791_18, 1) ) )
 2804.                         $d2_WR0_R1 = ( ( tu2(1 + $I_L2791_18, 1) + -topt2(1 + $I_L2791_18, 1) ) * 1.0/( topt2(1 + $I_L2791_18, 1) + -tll2(1 + $I_L2791_18, 1) ) )
 2806.                         $ft_WR0_R2 = ( ( $tv_WR0_R0 + -tll2(1 + $I_L2791_18, 1) ) * 1.0/( topt2(1 + $I_L2791_18, 1) + -tll2(1 + $I_L2791_18, 1) ) ) * _expn( $d2_WR0_R1 * log( ( ( tu2(1 + $I_L2791_18, 1) + -$tv_WR0_R0 ) * 1.0/( tu2(1 + $I_L2791_18, 1) + -topt2(1 + $I_L2791_18, 1) ) ) ) )
 2812.                         $ft_WR0_R2 = max( 1.0000000000000001e-5, min( 1.0, $ft_WR0_R2 ) )
 2813.                         ft1(1 + $I_L2791_18) = $ft_WR0_R2
 2817.                         $xrot_S2 = rootd($ntyp_S1, 1)
 2819.                         $SC_dep_I1 = 0.0
 2820.                         $SC_dep_I2 = 0.0
 2821.                         $SC_dep_I0 = min( $xrot_S2, zdepth($ntyp_S1, 1) )
 2822.                         $xrot_S3 = $xrot_S2 + -zdepth($ntyp_S1, 1)
 2823.                         if ( $xrot_S2 + -zdepth($ntyp_S1, 1) > 0.0 ) then
 2824.                            $SC_dep_I1 = min( $xrot_S3, zdepth($ntyp_S1, 2) )
 2825.                            $xrot_S3 = $xrot_S3 + -zdepth($ntyp_S1, 2)
 2825.                         endif
 2827.                         if ( $xrot_S3 > 0.0 ) then
 2828.                            $SC_dep_I2 = min( $xrot_S3, zdepth($ntyp_S1, 3) )
 2828.                         endif
 2831.                         $xdr_S4 = ( ( phsoil(1 + $I_L2791_18, 1) * $SC_dep_I0 + phsoil(1 + $I_L2791_18, 2) * $SC_dep_I1 + phsoil(1 + $I_L2791_18, 3) * $SC_dep_I2 ) * 1.0/$xrot_S2 )
 2835.                         $xdr_S5 = log( max( 1.0000000000000001e-5, -$xdr_S4 ) )
 2836.                         $arg_S6 = -( ph12(1 + $I_L2791_18, 1) * ( ph22(1 + $I_L2791_18, 1) + -$xdr_S5 ) )
 2838.                         $fp_WR0_R3 = 1.0 + -_expn( ( min( 0.0, $arg_S6 ) ) )
 2839.                         if ( w(1 + $I_L2791_18, 2) > 1.4999999999999999e-1 ) then
 2839.                            $fp_WR0_R3 = max( 5.0000000000000003e-2, $fp_WR0_R3 )
 2839.                         endif
 2841.                         $fp_WR0_R3 = max( 1.0000000000000001e-5, min( 1.0, $fp_WR0_R3 ) )
 2842.                         fp1(1 + $I_L2791_18) = $fp_WR0_R3
 2842.                      endif
 2842.                   endif
 2842.                endif
 2845.                $I_L2791_18 = 1 + $I_L2791_18
 2844.                if ( $I_L2791_18 >= nmax ) exit
 2844.             enddo
 2844.          endif
 2844.       endif
 2848.       if ( nmax > 0 ) then
 2848.          $I_L2848_20 = 0
 2848. !dir$ ivdep
 2848.          do
 2849.             if ( icheck(1 + $I_L2848_20) == 1 ) then
 2851.                $drop_WR0_R4 = _expn( 21.65605 + -( 5418.0 * 1.0/ta(1 + $I_L2848_20) ) ) + -ea(1 + $I_L2848_20)
 2852.                $fd_WR0_R5 = max( 1.0000000000000001e-5, 1.0/( 1.0 + defac2(1 + $I_L2848_20, 1) * $drop_WR0_R4 ) )
 2853.                $fd_WR0_R5 = min( 1.0, $fd_WR0_R5 )
 2853.                fd(1 + $I_L2848_20) = $fd_WR0_R5
 2853.             endif
 2855.             $I_L2848_20 = 1 + $I_L2848_20
 2854.             if ( $I_L2848_20 >= nmax ) exit
 2854.          enddo
 2857.          $I_L2857_22 = 0
 2857. !dir$ ivdep
 2857.          do
 2858.             if ( icheck(1 + $I_L2857_22) == 1 ) then
 2859.                $ntyp_S10 = itype(1 + $I_L2857_22)
 2860.                rst(1 + $I_L2857_22, 2) = 100000.0
 2861.                if ( $ntyp_S10 == 11 .orelse. $ntyp_S10 == 13 ) then
 2862.                   rst(1 + $I_L2857_22, 1) = 100000.0
 2862.                else
 2865.                   $ftpd_WR0_R6 = fd(1 + $I_L2857_22) * ft1(1 + $I_L2857_22) * fp1(1 + $I_L2857_22)
 2866.                   $rst_WR0_R7 = ( stm(1 + $I_L2857_22, 1) * 1.0/( $ftpd_WR0_R6 * vcover(1 + $I_L2857_22, 1) ) )
 2867.                   $rst_WR0_R7 = min( 100000.0, $rst_WR0_R7 )
 2867.                   rst(1 + $I_L2857_22, 1) = $rst_WR0_R7
 2867.                endif
 2867.             endif
 2869.             $I_L2857_22 = 1 + $I_L2857_22
 2869.             if ( $I_L2857_22 >= nmax ) exit
 2869.          enddo
 2869.       endif
 2692.       _free( t$306 )
 2871.       return
 2871.       end
 2871.       
 2879.       
 2879.       subroutine update( bps, deadtg, deadtc, deadqm, ect, eci, egt, egi, egs, eg, hc, hg, ecmass, egmass, etmass, hflux, chf, shf, ra, rb, rd, ea, etc, etg, btc, btg, cc, cg, dtc, dtg, dtm, dqm, tc, tg, td, capac, tm, nmax, dtc3x, ncols )
 2879.       t$27 = ncols
 2995.       t$327 = _zla( 0, ncols )
 2879.       t$328 = _zla( 0, ncols )
 2879.       t$329 = 2 * _zla( 0, ncols )
 3005.       t$332 = 8 * _zla( 0, ncols )
 3004.       t$333 = 8 * _zla( 0, ncols )
 3004.       t$335 = 16 * _zla( 0, ncols )
 3006.       t$336 = 16 * _zla( 0, ncols )
 3006.       t$338 = 24 * _zla( 0, ncols )
 3007.       t$339 = 24 * _zla( 0, ncols )
 3007.       t$341 = 32 * _zla( 0, ncols )
 3008.       t$342 = 32 * _zla( 0, ncols )
 3008.       t$344 = 40 * _zla( 0, ncols )
 3003.       t$345 = 40 * _zla( 0, ncols )
 3003.       t$347 = 48 * _zla( 0, ncols )
 3001.       t$348 = 48 * _zla( 0, ncols )
 3001.       t$350 = 56 * _zla( 0, ncols )
 3000.       t$351 = 56 * _zla( 0, ncols )
 3000.       t$353 = 64 * _zla( 0, ncols )
 3002.       t$354 = 64 * _zla( 0, ncols )
 3002.       t$356 = 72 * _zla( 0, ncols )
 2879.       t$330 = int( _alloc( 72 * _zla( 0, ncols ) ), 8 )
 3005.       t$331 = t$330
 3004.       t$334 = t$330 + 8 * _zla( 0, ncols )
 3006.       t$337 = t$330 + 16 * _zla( 0, ncols )
 3007.       t$340 = t$330 + 24 * _zla( 0, ncols )
 3008.       t$343 = t$330 + 32 * _zla( 0, ncols )
 3003.       t$346 = t$330 + 40 * _zla( 0, ncols )
 3001.       t$349 = t$330 + 48 * _zla( 0, ncols )
 3000.       t$352 = t$330 + 56 * _zla( 0, ncols )
 3002.       t$355 = t$330 + 64 * _zla( 0, ncols )
 3023.       if ( nmax > 0 ) then
 3023.          $I_L3023_42 = 0
 3023. !dir$ ivdep
 3023.          do
 3024.             tgen(1 + $I_L3023_42) = tg(1 + $I_L3023_42) + dtg(1 + $I_L3023_42)
 3025.             tcen(1 + $I_L3023_42) = tc(1 + $I_L3023_42) + dtc(1 + $I_L3023_42)
 3040.             $I_L3023_42 = 1 + $I_L3023_42
 3023.             if ( $I_L3023_42 >= nmax ) exit
 3023.          enddo
 3041.          $I_L3041_44 = 0
 3041. !dir$ ivdep
 3041.          do
 3042.             if ( tgen(1 + $I_L3041_44) <= 273.16000000000003 ) then
 3043.                egs(1 + $I_L3041_44) = eg(1 + $I_L3041_44) + -egi(1 + $I_L3041_44)
 3044.                egt(1 + $I_L3041_44) = 0.0
 3044.             endif
 3064.             $facks_WR0_R0 = 1.0
 3064.             facks(1 + $I_L3041_44) = 1.0
 3065.             if ( tcen(1 + $I_L3041_44) <= 273.16000000000003 ) then
 3065.                $facks_WR0_R0 = 8.8308754880898477e-1
 3065.                facks(1 + $I_L3041_44) = 8.8308754880898477e-1
 3065.             endif
 3066.             if ( ( ect(1 + $I_L3041_44) + eci(1 + $I_L3041_44) ) <= 0.0 ) then
 3067.                eci(1 + $I_L3041_44) = ect(1 + $I_L3041_44) + eci(1 + $I_L3041_44)
 3068.                ect(1 + $I_L3041_44) = 0.0
 3069.                $facks_WR0_R0 = 1.0/$facks_WR0_R0
 3069.                facks(1 + $I_L3041_44) = $facks_WR0_R0
 3069.             endif
 3046.             $I_L3041_44 = 1 + $I_L3041_44
 3045.             if ( $I_L3041_44 >= nmax ) exit
 3045.          enddo
 3072.          $I_L3072_48 = 0
 3072. !dir$ ivdep
 3072.          do
 3073.             capac(1 + $I_L3072_48, 1) = capac(1 + $I_L3072_48, 1) + eci(1 + $I_L3072_48) * facks(1 + $I_L3072_48) * -3.9682539682539682e-10
 3077.             ecmass(1 + $I_L3072_48) = 3.9682539682539683e-7 * ( ect(1 + $I_L3072_48) + eci(1 + $I_L3072_48) * facks(1 + $I_L3072_48) )
 3078.             $I_L3072_48 = 1 + $I_L3072_48
 3072.             if ( $I_L3072_48 >= nmax ) exit
 3072.          enddo
 3079.          $I_L3079_50 = 0
 3079. !dir$ ivdep
 3079.          do
 3080.             $facks_WR0_R1 = 1.0
 3080.             facks(1 + $I_L3079_50) = 1.0
 3081.             if ( tgen(1 + $I_L3079_50) <= 273.16000000000003 ) then
 3081.                $facks_WR0_R1 = 8.8308754880898477e-1
 3081.                facks(1 + $I_L3079_50) = 8.8308754880898477e-1
 3081.             endif
 3082.             if ( ( egt(1 + $I_L3079_50) + egi(1 + $I_L3079_50) ) <= 0.0 ) then
 3083.                egi(1 + $I_L3079_50) = egt(1 + $I_L3079_50) + egi(1 + $I_L3079_50)
 3084.                egt(1 + $I_L3079_50) = 0.0
 3085.                $facks_WR0_R1 = 1.0/$facks_WR0_R1
 3085.                facks(1 + $I_L3079_50) = $facks_WR0_R1
 3085.             endif
 3087.             $I_L3079_50 = 1 + $I_L3079_50
 3086.             if ( $I_L3079_50 >= nmax ) exit
 3086.          enddo
 3088.          $I_L3088_52 = 0
 3088. !dir$ ivdep
 3088.          do
 3089.             capac(1 + $I_L3088_52, 2) = capac(1 + $I_L3088_52, 2) + egi(1 + $I_L3088_52) * facks(1 + $I_L3088_52) * -3.9682539682539682e-10
 3090.             $egmass_WR0_R2 = 3.9682539682539683e-7 * ( egt(1 + $I_L3088_52) + egs(1 + $I_L3088_52) + egi(1 + $I_L3088_52) * facks(1 + $I_L3088_52) )
 3090.             egmass(1 + $I_L3088_52) = $egmass_WR0_R2
 3094.             etmass(1 + $I_L3088_52) = ecmass(1 + $I_L3088_52) + $egmass_WR0_R2
 3095.             hflux(1 + $I_L3088_52) = hc(1 + $I_L3088_52) + hg(1 + $I_L3088_52)
 3096.             $I_L3088_52 = 1 + $I_L3088_52
 3088.             if ( $I_L3088_52 >= nmax ) exit
 3088.          enddo
 3088.       endif
 3051.       $dtc3xi_S3 = 1.0/dtc3x
 3054.       if ( nmax > 0 ) then
 3054.          $I_L3054_46 = 0
 3054. !dir$ ivdep
 3054.          do
 3055.             chf(1 + $I_L3054_46) = $dtc3xi_S3 * cc(1 + $I_L3054_46) * dtc(1 + $I_L3054_46)
 3056.             shf(1 + $I_L3054_46) = $dtc3xi_S3 * cg(1 + $I_L3054_46) * dtg(1 + $I_L3054_46) + ( tg(1 + $I_L3054_46) + dtg(1 + $I_L3054_46) + -td(1 + $I_L3054_46) ) * cg(1 + $I_L3054_46) * 7.2722050925925924e-5
 3057.             $I_L3054_46 = 1 + $I_L3054_46
 3054.             if ( $I_L3054_46 >= nmax ) exit
 3054.          enddo
 3054.       endif
 2879.       _free( t$330 )
 3097.       return
 3097.       end
 3097.       
 3103.       
 3103.       subroutine sflxes( hgdtg, hgdtc, hgdtm, hcdtg, hcdtc, hcdtm, egdtg, egdtc, egdqm, ecdtg, ecdtc, ecdqm, deadtg, deadtc, deadqm, icheck, bps, psb, dzm, em, gmt, gmq, cu, cuni, ctni, ustar, rhoair, psy, rcp, wc, wg, fc, fg, hr, ect, eci, egt, egi, egs, ec, eg, hc, hg, ecidif, egidif, ecmass, egmass, etmass, hflux, chf, shf, ra, rb, rd, rc, rg, tcta, tgta, ta, ea, etc, etg, btc, btg, u2, radt, rst, rsoil, hrr, phsoil, cc, cg, satcap, dtc, dtg, dtm, dqm, stm, thermk, tc, tg, td, capac, w, qm, tm, um, vm, psur, vcover, z0x, d, rdc, rbc, z0, itype, dtc3x, mon, nmax, jstneu, ncols, zlt2, topt2, tll2, tu2, defac2, ph12, ph22 )
 3103.       t$28 = ncols
 3382.       t$357 = _zla( 0, ncols )
 3103.       t$358 = _zla( 0, ncols )
 3103.       t$359 = 3 * _zla( 0, ncols )
 3103.       t$360 = 2 * _zla( 0, ncols )
 3415.       t$363 = 8 * _zla( 0, ncols )
 3416.       t$364 = 8 * _zla( 0, ncols )
 3416.       t$366 = 16 * _zla( 0, ncols )
 3413.       t$367 = 16 * _zla( 0, ncols )
 3413.       t$369 = 24 * _zla( 0, ncols )
 3414.       t$370 = 24 * _zla( 0, ncols )
 3414.       t$372 = 32 * _zla( 0, ncols )
 3423.       t$373 = 32 * _zla( 0, ncols )
 3423.       t$375 = 40 * _zla( 0, ncols )
 3427.       t$376 = 40 * _zla( 0, ncols )
 3427.       t$378 = 48 * _zla( 0, ncols )
 3426.       t$379 = 48 * _zla( 0, ncols )
 3426.       t$381 = 56 * _zla( 0, ncols )
 3428.       t$383 = 60 * _zla( 0, ncols )
 3421.       t$384 = 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3421.       t$386 = 8 * _zla( 0, ncols ) + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3424.       t$387 = 8 * _zla( 0, ncols ) + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3424.       t$389 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3418.       t$390 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3418.       t$392 = 32 * _zla( 0, ncols ) + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3419.       t$393 = 32 * _zla( 0, ncols ) + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3419.       t$395 = 40 * _zla( 0, ncols ) + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3420.       t$396 = 40 * _zla( 0, ncols ) + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3420.       t$398 = 48 * _zla( 0, ncols ) + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3422.       t$399 = 48 * _zla( 0, ncols ) + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3422.       t$401 = 56 * _zla( 0, ncols ) + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3407.       t$402 = 56 * _zla( 0, ncols ) + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3407.       t$404 = 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 ) + 64 * _zla( 0, ncols )
 3437.       t$405 = 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 ) + 64 * _zla( 0, ncols )
 3437.       t$407 = 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 ) + 80 * _zla( 0, ncols )
 3103.       t$361 = int( _alloc( 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 ) + 80 * _zla( 0, ncols ) ), 8 )
 3415.       t$362 = t$361
 3416.       t$365 = t$361 + 8 * _zla( 0, ncols )
 3413.       t$368 = t$361 + 16 * _zla( 0, ncols )
 3414.       t$371 = t$361 + 24 * _zla( 0, ncols )
 3423.       t$374 = t$361 + 32 * _zla( 0, ncols )
 3427.       t$377 = t$361 + 40 * _zla( 0, ncols )
 3426.       t$380 = t$361 + 48 * _zla( 0, ncols )
 3428.       t$382 = t$361 + 56 * _zla( 0, ncols )
 3421.       t$385 = t$361 + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3424.       t$388 = t$361 + 8 * _zla( 0, ncols ) + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3418.       t$391 = t$361 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3419.       t$394 = t$361 + 32 * _zla( 0, ncols ) + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3420.       t$397 = t$361 + 40 * _zla( 0, ncols ) + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3422.       t$400 = t$361 + 48 * _zla( 0, ncols ) + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3407.       t$403 = t$361 + 56 * _zla( 0, ncols ) + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 )
 3437.       t$406 = t$361 + 8 * ( ( 7 + 60 * _zla( 0, ncols ) ) / 8 ) + 64 * _zla( 0, ncols )
 3444.       $F_A33 = ncols
 3444.       if ( ncols > 0 ) then
 3444.          $I_L3444_208 = 0
 3444.          do
 3444.             $I_L3444_206 = 0
 3444. !dir$ ivdep
 3444.             do
 3444.                vcover2(1 + $I_L3444_206, 1 + $I_L3444_208) = vcover(1 + $I_L3444_206, 1 + $I_L3444_208)
 3444.                $I_L3444_206 = 1 + $I_L3444_206
 3444.                if ( $I_L3444_206 >= $F_A33 ) exit
 3444.             enddo
 3444.             $I_L3444_208 = 1 + $I_L3444_208
 3444.             if ( $I_L3444_208 >= 2 ) exit
 3444.          enddo
 3444.       endif
 3445.       if ( nmax > 0 ) then
 3445.          $I_L3445_154 = 0
 3445. !dir$ ivdep
 3445.          do
 3446.             tcsav(1 + $I_L3445_154) = tc(1 + $I_L3445_154)
 3447.             tgsav(1 + $I_L3445_154) = tg(1 + $I_L3445_154)
 3448.             tmsav(1 + $I_L3445_154) = tm(1 + $I_L3445_154)
 3449.             qmsav(1 + $I_L3445_154) = qm(1 + $I_L3445_154)
 3450.             rdsav(1 + $I_L3445_154, 1) = radt(1 + $I_L3445_154, 1)
 3451.             rdsav(1 + $I_L3445_154, 2) = radt(1 + $I_L3445_154, 2)
 3452.             stm(1 + $I_L3445_154, 1) = rst(1 + $I_L3445_154, 1)
 3453.             stm(1 + $I_L3445_154, 2) = rst(1 + $I_L3445_154, 2)
 3454.             $I_L3445_154 = 1 + $I_L3445_154
 3445.             if ( $I_L3445_154 >= nmax ) exit
 3445.          enddo
 3445.       endif
 3458.       call airmod( tg(1), capac(1, 1), z0x(1), d(1), rdc(1), rbc(1), itype(1), mon(1), nmax, ncols )
 3464.       if ( nmax > 0 ) then
 3464.          $I_L3464_156 = 0
 3464. !dir$ ivdep
 3464.          do
 3465.             z0(1 + $I_L3464_156) = z0x(1 + $I_L3464_156)
 3466.             $I_L3464_156 = 1 + $I_L3464_156
 3464.             if ( $I_L3464_156 >= nmax ) exit
 3464.          enddo
 3471.          $I_L3471_158 = 0
 3471. !dir$ ivdep
 3471.          do
 3472.             $ntyp_S4 = itype(1 + $I_L3471_158)
 3473.             wc(1 + $I_L3471_158) = min( 1.0, ( capac(1 + $I_L3471_158, 1) * 1.0/satcap(1 + $I_L3471_158, 1) ) )
 3474.             wg(1 + $I_L3471_158) = min( 1.0, ( capac(1 + $I_L3471_158, 2) * 1.0/satcap(1 + $I_L3471_158, 2) ) )
 3481.             $wt_S3 = max( 1.0e-3, w(1 + $I_L3471_158, 1) )
 3482.             $wt_S5 = $wt_S3 + ( 1.0/( (zdepth%base_addr)($ntyp_S4, 1, 0) + (zdepth%base_addr)($ntyp_S4, 2, 0) ) * (zdepth%base_addr)($ntyp_S4, 1, 0) * 7.5e-1 ) * ( $wt_S3 + -( w(1 + $I_L3471_158, 2) * w(1 + $I_L3471_158, 2) * 1.0/$wt_S3 ) ) * 25.0
 3486.             $rsoil_WR0_R0 = 101840.0 * ( 1.0 + -_expn( 2.7000000000000001e-3 * log( ( max( 1.0e-3, ( min( 9.8999999999999999e-1, $wt_S5 ) ) ) ) ) ) )
 3486.             rsoil(1 + $I_L3471_158) = $rsoil_WR0_R0
 3490.             $psit_S6 = (phsat%base_addr)($ntyp_S4, 0) * _expn( -( (bee%base_addr)($ntyp_S4, 0) * log( ( max( 1.0e-3, ( min( 9.8999999999999999e-1, $wt_S5 ) ) ) ) ) ) )
 3498.             $eee_S7 = ( 1.0/tg(1 + $I_L3471_158) * $psit_S6 * 2.1235102925243773e-2 )
 3508.             $hrr_WR0_R1 = max( 1.0e-3, _expn( $eee_S7 ) )
 3508.             hrr(1 + $I_L3471_158) = $hrr_WR0_R1
 3510.             hr(1 + $I_L3471_158) = $hrr_WR0_R1
 3512.             if ( tg(1 + $I_L3471_158) <= 273.16000000000003 ) then
 3513.                vcover2(1 + $I_L3471_158, 2) = 1.0
 3514.                wg(1 + $I_L3471_158) = min( 1.0, 250.0 * capac(1 + $I_L3471_158, 2) )
 3515.                rst(1 + $I_L3471_158, 2) = $rsoil_WR0_R0
 3516.                stm(1 + $I_L3471_158, 2) = $rsoil_WR0_R0
 3516.             endif
 3519.             fc(1 + $I_L3471_158) = 1.0
 3520.             fg(1 + $I_L3471_158) = 1.0
 3521.             $I_L3471_158 = 1 + $I_L3471_158
 3517.             if ( $I_L3471_158 >= nmax ) exit
 3517.          enddo
 3517.       endif
 3526.       $ncount_S8 = 0
 3527.       do
 3528.          $ncount_S8 = 1 + $ncount_S8
 3529.          if ( nmax > 0 ) then
 3529.             $I_L3529_160 = 0
 3529. !dir$ ivdep
 3529.             do
 3530.                icheck(1 + $I_L3529_160) = 1
 3535.                etc(1 + $I_L3529_160) = _expn( 21.65605 + -( 5418.0 * 1.0/tc(1 + $I_L3529_160) ) )
 3536.                etg(1 + $I_L3529_160) = _expn( 21.65605 + -( 5418.0 * 1.0/tg(1 + $I_L3529_160) ) )
 3537.                $I_L3529_160 = 1 + $I_L3529_160
 3529.                if ( $I_L3529_160 >= nmax ) exit
 3529.             enddo
 3529.          endif
 3541.          if ( $ncount_S8 == 1 ) then
 3542.             if ( nmax > 0 ) then
 3542.                $I_L3542_162 = 0
 3542. !dir$ ivdep
 3542.                do
 3543.                   ta(1 + $I_L3542_162) = tc(1 + $I_L3542_162)
 3547.                   ea(1 + $I_L3542_162) = ( qm(1 + $I_L3542_162) * psur(1 + $I_L3542_162) * 1.0/( 6.22e-1 + qm(1 + $I_L3542_162) ) )
 3548.                   $I_L3542_162 = 1 + $I_L3542_162
 3542.                   if ( $I_L3542_162 >= nmax ) exit
 3542.                enddo
 3542.             endif
 3542.          endif
 3556.          ipa$2409 = loc( (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) )
 3556.          z2 = _copyin( (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) )
 3556.          t$19 = ncols
 3556.          t$276 = max( 0, ncols )
 3556.          t$279 = 8 * ncols
 3556.          t$277 = int( _alloc( 8 * ncols ), 8 )
 3556.          t$278 = t$277
 3556.          if ( nmax > 0 ) then
 3556.             $I_L3556_164 = 0
 3556. !dir$ ivdep
 3556.             do
 3556.                if ( icheck(1 + $I_L3556_164) == 1 ) then
 3556.                   $speedm_WR0_R2 = _sqrt( um(1 + $I_L3556_164) * um(1 + $I_L3556_164) + vm(1 + $I_L3556_164) * vm(1 + $I_L3556_164) )
 3556.                   $speedm_WR0_R2 = max( 2.0, $speedm_WR0_R2 )
 3556.                   speedm(1 + $I_L3556_164) = $speedm_WR0_R2
 3556.                endif
 3556.                $I_L3556_164 = 1 + $I_L3556_164
 3556.                if ( $I_L3556_164 >= nmax ) exit
 3556.             enddo
 3556.             $I_L3556_166 = 0
 3556. !dir$ ivdep
 3556.             do
 3556.                $ntyp_S13 = itype(1 + $I_L3556_166)
 3556.                $zl_S14 = z2($ntyp_S13, mon(1 + $I_L3556_166)) + 11.785 * z0(1 + $I_L3556_166)
 3556.                $cuni_WR0_R3 = 2.5 * log( ( ( dzm(1 + $I_L3556_166) + -d(1 + $I_L3556_166) ) * 1.0/z0(1 + $I_L3556_166) ) )
 3556.                cuni(1 + $I_L3556_166) = $cuni_WR0_R3
 3556.                $ustarn_WR0_R4 = ( speedm(1 + $I_L3556_166) * 1.0/$cuni_WR0_R3 )
 3556.                ustarn(1 + $I_L3556_166) = $ustarn_WR0_R4
 3556.                if ( $zl_S14 < dzm(1 + $I_L3556_166) ) then
 3556.                   $xct1_S15 = log( ( ( dzm(1 + $I_L3556_166) + -d(1 + $I_L3556_166) ) * 1.0/( $zl_S14 + -d(1 + $I_L3556_166) ) ) )
 3556.                   $xct2_S16 = log( ( ( $zl_S14 + -d(1 + $I_L3556_166) ) * 1.0/z0(1 + $I_L3556_166) ) )
 3556.                   $xctu1_S19 = $xct1_S15
 3556.                   $xctu2_S18 = log( ( ( $zl_S14 + -d(1 + $I_L3556_166) ) * 1.0/( z2($ntyp_S13, mon(1 + $I_L3556_166)) + -d(1 + $I_L3556_166) ) ) )
 3556.                   ctni(1 + $I_L3556_166) = 2.5 * ( $xct1_S15 + 7.5e-1 * $xct2_S16 )
 3556.                else
 3556.                   $xct2_S17 = log( ( ( dzm(1 + $I_L3556_166) + -d(1 + $I_L3556_166) ) * 1.0/z0(1 + $I_L3556_166) ) )
 3556.                   $xctu1_S19 = 0.0
 3556.                   $xctu2_S18 = log( ( ( dzm(1 + $I_L3556_166) + -d(1 + $I_L3556_166) ) * 1.0/( z2($ntyp_S13, mon(1 + $I_L3556_166)) + -d(1 + $I_L3556_166) ) ) )
 3556.                   ctni(1 + $I_L3556_166) = 1.875 * $xct2_S17
 3556.                endif
 3556.                u2(1 + $I_L3556_166) = speedm(1 + $I_L3556_166) + ( $xctu1_S19 + 7.5e-1 * $xctu2_S18 ) * $ustarn_WR0_R4 * -2.5
 3556.                $I_L3556_166 = 1 + $I_L3556_166
 3556.                if ( $I_L3556_166 >= nmax ) exit
 3556.             enddo
 3556.          endif
 3556.          _free( t$277 )
 3556.          (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) = _copyout( z2 )
 3561.          jstneu = .false.
 3563.          ipa$2452 = loc( (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) )
 3563.          z2 = _copyin( (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) )
 3563.          t$19 = ncols
 3563.          t$276 = max( 0, ncols )
 3563.          t$279 = 8 * ncols
 3563.          t$277 = int( _alloc( 8 * ncols ), 8 )
 3563.          t$278 = t$277
 3563.          if ( nmax > 0 ) then
 3563.             $I_L3563_168 = 0
 3563. !dir$ ivdep
 3563.             do
 3563.                if ( icheck(1 + $I_L3563_168) == 1 ) then
 3563.                   $speedm_WR0_R5 = _sqrt( um(1 + $I_L3563_168) * um(1 + $I_L3563_168) + vm(1 + $I_L3563_168) * vm(1 + $I_L3563_168) )
 3563.                   $speedm_WR0_R5 = max( 2.0, $speedm_WR0_R5 )
 3563.                   speedm(1 + $I_L3563_168) = $speedm_WR0_R5
 3563.                endif
 3563.                $I_L3563_168 = 1 + $I_L3563_168
 3563.                if ( $I_L3563_168 >= nmax ) exit
 3563.             enddo
 3563.             $I_L3563_170 = 0
 3563. !dir$ ivdep
 3563.             do
 3563.                if ( icheck(1 + $I_L3563_170) == 1 ) then
 3563.                   $thm_S23 = tm(1 + $I_L3563_170) * bps(1 + $I_L3563_170)
 3563.                   $ntyp_S22 = itype(1 + $I_L3563_170)
 3563.                   $zl_S27 = z2($ntyp_S22, mon(1 + $I_L3563_170)) + 11.785 * z0(1 + $I_L3563_170)
 3563.                   $thvgm_S24 = ta(1 + $I_L3563_170) + -$thm_S23
 3563.                   $rib_S25 = -( ( dzm(1 + $I_L3563_170) + -d(1 + $I_L3563_170) ) * $thvgm_S24 * 1.0/( ( speedm(1 + $I_L3563_170) + -u2(1 + $I_L3563_170) ) * ( speedm(1 + $I_L3563_170) + -u2(1 + $I_L3563_170) ) * $thm_S23 ) * 9.8000000000000007 )
 3563.                   $rib_S26 = min( 1.6500000000000001e-1, max( -1.5, $rib_S25 ) )
 3563.                   if ( ( min( 1.6500000000000001e-1, max( -1.5, $rib_S25 ) ) ) < 0.0 ) then
 3563.                      $grzl_S28 = -( $rib_S26 * ( $zl_S27 + -d(1 + $I_L3563_170) ) * 1.0/( dzm(1 + $I_L3563_170) + -d(1 + $I_L3563_170) ) )
 3563.                      $grz2_S29 = -( $rib_S26 * z0(1 + $I_L3563_170) * 1.0/( dzm(1 + $I_L3563_170) + -d(1 + $I_L3563_170) ) )
 3563.                      $ftt_S30 = cvmg( 7.5e-1 * ( ( -9.0400000000000003e-1 * $rib_S26 ) + -( 9.0400000000000003e-1 * $grz2_S29 ) ), ( -9.0400000000000003e-1 * $rib_S26 ) + -2.2600000000000001e-1 * $grzl_S28 + -6.7800000000000005e-1 * $grz2_S29, $zl_S27 >= dzm(1 + $I_L3563_170) )
 3563.                      $cui_S34 = cuni(1 + $I_L3563_170) + -( -3.15e-1 * $rib_S26 )
 3563.                      $cti_S35 = ctni(1 + $I_L3563_170) + -$ftt_S30
 3563.                   else
 3563.                      $rzl_S31 = ( $rib_S26 * 1.0/( dzm(1 + $I_L3563_170) + -d(1 + $I_L3563_170) ) ) * ( $zl_S27 + -d(1 + $I_L3563_170) )
 3563.                      $rz2_S32 = ( $rib_S26 * 1.0/( dzm(1 + $I_L3563_170) + -d(1 + $I_L3563_170) ) ) * z0(1 + $I_L3563_170)
 3563.                      $ftt_S33 = cvmg( 7.5e-1 * ( ( 66.849999999999994 * $rib_S26 ) + -( 66.849999999999994 * $rz2_S32 ) ), ( 66.849999999999994 * $rib_S26 ) + -16.712499999999999 * $rzl_S31 + -50.137499999999996 * $rz2_S32, $zl_S27 >= dzm(1 + $I_L3563_170) )
 3563.                      $cui_S34 = cuni(1 + $I_L3563_170) + ( 66.849999999999994 * $rib_S26 )
 3563.                      $cti_S35 = ctni(1 + $I_L3563_170) + $ftt_S33
 3563.                   endif
 3563.                   cu(1 + $I_L3563_170) = 1.0/$cui_S34
 3563.                   $ustar_WR0_R6 = speedm(1 + $I_L3563_170) * 1.0/$cui_S34
 3563.                   ustar(1 + $I_L3563_170) = $ustar_WR0_R6
 3563.                   ra(1 + $I_L3563_170) = ( max( 8.0000000000000004e-1, ( $cti_S35 * 1.0/$ustar_WR0_R6 ) ) )
 3563.                endif
 3563.                $I_L3563_170 = 1 + $I_L3563_170
 3563.                if ( $I_L3563_170 >= nmax ) exit
 3563.             enddo
 3563.          endif
 3563.          _free( t$277 )
 3563.          (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) = _copyout( z2 )
 3568.          if ( nmax > 0 ) then
 3568.             $I_L3568_172 = 0
 3568. !dir$ ivdep
 3568.             do
 3569.                tcta(1 + $I_L3568_172) = ( tc(1 + $I_L3568_172) * 1.0/bps(1 + $I_L3568_172) ) + -tm(1 + $I_L3568_172)
 3570.                tgta(1 + $I_L3568_172) = ( tg(1 + $I_L3568_172) * 1.0/bps(1 + $I_L3568_172) ) + -tm(1 + $I_L3568_172)
 3571.                $I_L3568_172 = 1 + $I_L3568_172
 3568.                if ( $I_L3568_172 >= nmax ) exit
 3568.             enddo
 3568.          endif
 3572.          call rbrd( rb(1), rd(1), tcta(1), tgta(1), u2(1), tg(1), rdc(1), rbc(1), itype(1), (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0), mon(1), nmax, ncols, zlt2(1, 1) )
 3580.          icount = 0
 3581.          do
 3581.             icount = 1 + icount
 3582.             if ( nmax > 0 ) then
 3582.                $I_L3582_174 = 0
 3582. !dir$ ivdep
 3582.                do
 3583.                   if ( icheck(1 + $I_L3582_174) == 1 ) then
 3584.                      tsav(1 + $I_L3582_174) = ta(1 + $I_L3582_174)
 3585.                      esav(1 + $I_L3582_174) = ea(1 + $I_L3582_174)
 3585.                   endif
 3587.                   $I_L3582_174 = 1 + $I_L3582_174
 3586.                   if ( $I_L3582_174 >= nmax ) exit
 3586.                enddo
 3586.             endif
 3588.             call vntlax( ustarn(1), icheck(1), bps(1), dzm(1), cu(1), cuni(1), ctni(1), ustar(1), ra(1), ta(1), u2(1), tm(1), um(1), vm(1), d(1), z0(1), itype(1), (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0), mon(1), nmax, jstneu, ncols )
 3593.             t$13 = ncols
 3593.             t$264 = max( 0, ncols )
 3593.             t$265 = ncols
 3593.             t$266 = ( 2 * ncols )
 3593.             if ( nmax > 0 ) then
 3593.                $I_L3593_176 = 0
 3593. !dir$ ivdep
 3593.                do
 3593.                   if ( icheck(1 + $I_L3593_176) == 1 ) then
 3593.                      rcp(1 + $I_L3593_176) = 1004.6 * rhoair(1 + $I_L3593_176)
 3593.                      $rc_WR0_R8 = rst(1 + $I_L3593_176, 1) * fc(1 + $I_L3593_176) + rb(1 + $I_L3593_176) + rb(1 + $I_L3593_176) * fc(1 + $I_L3593_176)
 3593.                      rc(1 + $I_L3593_176) = $rc_WR0_R8
 3593.                      $coc_S44 = ( ( 1.0 + -wc(1 + $I_L3593_176) ) * 1.0/$rc_WR0_R8 ) + ( 1.0/rb(1 + $I_L3593_176) * wc(1 + $I_L3593_176) * 5.0e-1 )
 3593.                      $rg_WR0_R9 = rst(1 + $I_L3593_176, 2) * fg(1 + $I_L3593_176)
 3593.                      rg(1 + $I_L3593_176) = $rg_WR0_R9
 3593.                      $rsurf_S39 = rsoil(1 + $I_L3593_176) * fg(1 + $I_L3593_176)
 3593.                      $tem_S40 = ( vcover2(1 + $I_L3593_176, 2) * ( 1.0 + -wg(1 + $I_L3593_176) ) * 1.0/( $rg_WR0_R9 + rd(1 + $I_L3593_176) ) )
 3593.                      $cog2_S41 = $tem_S40 + ( ( 1.0 + -vcover2(1 + $I_L3593_176, 2) ) * 1.0/( $rsurf_S39 + rd(1 + $I_L3593_176) ) ) + ( vcover2(1 + $I_L3593_176, 2) * 1.0/( $rsurf_S39 + rd(1 + $I_L3593_176) + 44.0 ) )
 3593.                      $cog1_S43 = ( $cog2_S41 + -$tem_S40 ) * hr(1 + $I_L3593_176) + $tem_S40
 3593.                      $xnum_S42 = ( wg(1 + $I_L3593_176) * 1.0/rd(1 + $I_L3593_176) ) * vcover2(1 + $I_L3593_176, 2)
 3593.                      $d2_S47 = 1.0/ra(1 + $I_L3593_176) + $coc_S44 + ( $cog2_S41 + $xnum_S42 )
 3593.                      $top_S48 = $coc_S44 * etc(1 + $I_L3593_176) + ( em(1 + $I_L3593_176) * 1.0/ra(1 + $I_L3593_176) ) + ( $cog1_S43 + $xnum_S42 ) * etg(1 + $I_L3593_176)
 3593.                      ea(1 + $I_L3593_176) = ( $top_S48 * 1.0/$d2_S47 )
 3593.                   endif
 3593.                   $I_L3593_176 = 1 + $I_L3593_176
 3593.                   if ( $I_L3593_176 >= nmax ) exit
 3593.                enddo
 3593.             endif
 3598.             call stres2( icount, ft1(1), fp1(1), icheck(1), ta(1), ea(1), rst(1, 1), phsoil(1, 1), stm(1, 1), tc(1), tg(1), w(1, 1), vcover2(1, 1), itype(1), (rootd%base_addr)(rootd%dim_1%LB, rootd%dim_2%LB, 0), (zdepth%base_addr)(zdepth%dim_1%LB, zdepth%dim_2%LB, 0), nmax, ncols, topt2(1, 1), tll2(1, 1), tu2(1, 1), defac2(1, 1), ph12(1, 1), ph22(1, 1) )
 3604.             t$13 = ncols
 3604.             t$264 = max( 0, ncols )
 3604.             t$265 = ncols
 3604.             t$266 = ( 2 * ncols )
 3604.             if ( nmax <= 0 ) goto 10
 3604.             $I_L3604_178 = 0
 3604. !dir$ ivdep
 3604.             do
 3604.                if ( icheck(1 + $I_L3604_178) == 1 ) then
 3604.                   rcp(1 + $I_L3604_178) = 1004.6 * rhoair(1 + $I_L3604_178)
 3604.                   $rc_WR0_R10 = rst(1 + $I_L3604_178, 1) * fc(1 + $I_L3604_178) + rb(1 + $I_L3604_178) + rb(1 + $I_L3604_178) * fc(1 + $I_L3604_178)
 3604.                   rc(1 + $I_L3604_178) = $rc_WR0_R10
 3604.                   $coc_S55 = ( ( 1.0 + -wc(1 + $I_L3604_178) ) * 1.0/$rc_WR0_R10 ) + ( 1.0/rb(1 + $I_L3604_178) * wc(1 + $I_L3604_178) * 5.0e-1 )
 3604.                   $rg_WR0_R11 = rst(1 + $I_L3604_178, 2) * fg(1 + $I_L3604_178)
 3604.                   rg(1 + $I_L3604_178) = $rg_WR0_R11
 3604.                   $rsurf_S50 = rsoil(1 + $I_L3604_178) * fg(1 + $I_L3604_178)
 3604.                   $tem_S51 = ( vcover2(1 + $I_L3604_178, 2) * ( 1.0 + -wg(1 + $I_L3604_178) ) * 1.0/( $rg_WR0_R11 + rd(1 + $I_L3604_178) ) )
 3604.                   $cog2_S52 = $tem_S51 + ( ( 1.0 + -vcover2(1 + $I_L3604_178, 2) ) * 1.0/( $rsurf_S50 + rd(1 + $I_L3604_178) ) ) + ( vcover2(1 + $I_L3604_178, 2) * 1.0/( $rsurf_S50 + rd(1 + $I_L3604_178) + 44.0 ) )
 3604.                   $cog1_S54 = ( $cog2_S52 + -$tem_S51 ) * hr(1 + $I_L3604_178) + $tem_S51
 3604.                   $xnum_S53 = ( wg(1 + $I_L3604_178) * 1.0/rd(1 + $I_L3604_178) ) * vcover2(1 + $I_L3604_178, 2)
 3604.                   $d2_S58 = 1.0/ra(1 + $I_L3604_178) + $coc_S55 + ( $cog2_S52 + $xnum_S53 )
 3604.                   $top_S59 = $coc_S55 * etc(1 + $I_L3604_178) + ( em(1 + $I_L3604_178) * 1.0/ra(1 + $I_L3604_178) ) + ( $cog1_S54 + $xnum_S53 ) * etg(1 + $I_L3604_178)
 3604.                   ea(1 + $I_L3604_178) = ( $top_S59 * 1.0/$d2_S58 )
 3604.                endif
 3604.                $I_L3604_178 = 1 + $I_L3604_178
 3604.                if ( $I_L3604_178 >= nmax ) exit
 3604.             enddo
 3609.             $I_L3609_180 = 0
 3609. !dir$ ivdep
 3609.             do
 3610.                if ( icheck(1 + $I_L3609_180) == 1 ) then
 3611.                   ta(1 + $I_L3609_180) = ( ( ( tg(1 + $I_L3609_180) * 1.0/rd(1 + $I_L3609_180) ) + ( tc(1 + $I_L3609_180) * 1.0/rb(1 + $I_L3609_180) ) + ( tm(1 + $I_L3609_180) * 1.0/ra(1 + $I_L3609_180) ) * bps(1 + $I_L3609_180) ) * 1.0/( 1.0/rd(1 + $I_L3609_180) + 1.0/rb(1 + $I_L3609_180) + 1.0/ra(1 + $I_L3609_180) ) )
 3611.                endif
 3614.                $I_L3609_180 = 1 + $I_L3609_180
 3613.                if ( $I_L3609_180 >= nmax ) exit
 3613.             enddo
 3620.             if ( icount > 10 ) then
 3616.                $I_L3616_182 = 0
 3616. !dir$ ivdep
 3616.                do
 3617.                   if ( icheck(1 + $I_L3616_182) == 1 ) then
 3622.                      icheck(1 + $I_L3616_182) = 0
 3622.                   endif
 3625.                   $I_L3616_182 = 1 + $I_L3616_182
 3624.                   if ( $I_L3616_182 >= nmax ) exit
 3624.                enddo
 3624.             else
 3616.                $I_L3616_204 = 0
 3616. !dir$ ivdep
 3616.                do
 3617.                   if ( icheck(1 + $I_L3616_204) == 1 ) then
 3618.                      $y1_S62 = abs( ta(1 + $I_L3616_204) + -tsav(1 + $I_L3616_204) )
 3619.                      $y2_S63 = abs( ea(1 + $I_L3616_204) + -esav(1 + $I_L3616_204) )
 3620.                      if ( $y1_S62 <= 1.0e-2 ) then
 3620.                         if ( $y2_S63 <= 5.0000000000000001e-3 ) then
 3622.                            icheck(1 + $I_L3616_204) = 0
 3622.                         endif
 3622.                      endif
 3622.                   endif
 3625.                   $I_L3616_204 = 1 + $I_L3616_204
 3624.                   if ( $I_L3616_204 >= nmax ) exit
 3624.                enddo
 3624.             endif
 3627.             $I_L3627_184 = 0
 3627. !dir$ ivdep
 3627.             do
 3628.                if ( icheck(1 + $I_L3627_184) == 1 ) then
 3627.                   goto 10
 3627.                endif
 3629.                $I_L3627_184 = 1 + $I_L3627_184
 3629.                if ( $I_L3627_184 >= nmax ) exit
 3629.             enddo
 3629.    10       continue
 3631.             if ( nmax > 0 ) then
 3631.                $I_L3631_186 = 0
 3631. !dir$ ivdep
 3631.                do
 3632.                   fc(1 + $I_L3631_186) = 1.0
 3633.                   fg(1 + $I_L3631_186) = 1.0
 3634.                   idewco(1 + $I_L3631_186) = 0
 3635.                   icheck(1 + $I_L3631_186) = 1
 3636.                   $I_L3631_186 = 1 + $I_L3631_186
 3631.                   if ( $I_L3631_186 >= nmax ) exit
 3631.                enddo
 3638.                $I_L3638_188 = 0
 3638. !dir$ ivdep
 3638.                do
 3639.                   $tc_WR0_R12 = tcsav(1 + $I_L3638_188)
 3639.                   tc(1 + $I_L3638_188) = $tc_WR0_R12
 3640.                   $tg_WR0_R13 = tgsav(1 + $I_L3638_188)
 3640.                   tg(1 + $I_L3638_188) = $tg_WR0_R13
 3641.                   tm(1 + $I_L3638_188) = tmsav(1 + $I_L3638_188)
 3642.                   qm(1 + $I_L3638_188) = qmsav(1 + $I_L3638_188)
 3643.                   radt(1 + $I_L3638_188, 1) = rdsav(1 + $I_L3638_188, 1)
 3644.                   radt(1 + $I_L3638_188, 2) = rdsav(1 + $I_L3638_188, 2)
 3645.                   etc(1 + $I_L3638_188) = _expn( 21.65605 + -( 5418.0 * 1.0/$tc_WR0_R12 ) )
 3646.                   etg(1 + $I_L3638_188) = _expn( 21.65605 + -( 5418.0 * 1.0/$tg_WR0_R13 ) )
 3647.                   btc(1 + $I_L3638_188) = ( _expn( 30.253530000000001 + -( 5418.0 * 1.0/$tc_WR0_R12 ) ) * 1.0/( $tc_WR0_R12 * $tc_WR0_R12 ) )
 3648.                   btg(1 + $I_L3638_188) = ( _expn( 30.253530000000001 + -( 5418.0 * 1.0/$tg_WR0_R13 ) ) * 1.0/( $tg_WR0_R13 * $tg_WR0_R13 ) )
 3649.                   $I_L3638_188 = 1 + $I_L3638_188
 3638.                   if ( $I_L3638_188 >= nmax ) exit
 3638.                enddo
 3651.                do
 3653.                   t$13 = ncols
 3653.                   t$264 = max( 0, ncols )
 3653.                   t$265 = ncols
 3653.                   t$266 = ( 2 * ncols )
 3653.                   $I_L3653_190 = 0
 3653. !dir$ ivdep
 3653.                   do
 3653.                      if ( icheck(1 + $I_L3653_190) == 1 ) then
 3653.                         rcp(1 + $I_L3653_190) = 1004.6 * rhoair(1 + $I_L3653_190)
 3653.                         $rc_WR0_R14 = rst(1 + $I_L3653_190, 1) * fc(1 + $I_L3653_190) + rb(1 + $I_L3653_190) + rb(1 + $I_L3653_190) * fc(1 + $I_L3653_190)
 3653.                         rc(1 + $I_L3653_190) = $rc_WR0_R14
 3653.                         $coc_S73 = ( ( 1.0 + -wc(1 + $I_L3653_190) ) * 1.0/$rc_WR0_R14 ) + ( 1.0/rb(1 + $I_L3653_190) * wc(1 + $I_L3653_190) * 5.0e-1 )
 3653.                         $rg_WR0_R15 = rst(1 + $I_L3653_190, 2) * fg(1 + $I_L3653_190)
 3653.                         rg(1 + $I_L3653_190) = $rg_WR0_R15
 3653.                         $rsurf_S68 = rsoil(1 + $I_L3653_190) * fg(1 + $I_L3653_190)
 3653.                         $tem_S69 = ( vcover2(1 + $I_L3653_190, 2) * ( 1.0 + -wg(1 + $I_L3653_190) ) * 1.0/( $rg_WR0_R15 + rd(1 + $I_L3653_190) ) )
 3653.                         $cog2_S70 = $tem_S69 + ( ( 1.0 + -vcover2(1 + $I_L3653_190, 2) ) * 1.0/( $rsurf_S68 + rd(1 + $I_L3653_190) ) ) + ( vcover2(1 + $I_L3653_190, 2) * 1.0/( $rsurf_S68 + rd(1 + $I_L3653_190) + 44.0 ) )
 3653.                         $cog1_S72 = ( $cog2_S70 + -$tem_S69 ) * hr(1 + $I_L3653_190) + $tem_S69
 3653.                         $xnum_S71 = ( wg(1 + $I_L3653_190) * 1.0/rd(1 + $I_L3653_190) ) * vcover2(1 + $I_L3653_190, 2)
 3653.                         $d2_S76 = 1.0/ra(1 + $I_L3653_190) + $coc_S73 + ( $cog2_S70 + $xnum_S71 )
 3653.                         $top_S77 = $coc_S73 * etc(1 + $I_L3653_190) + ( em(1 + $I_L3653_190) * 1.0/ra(1 + $I_L3653_190) ) + ( $cog1_S72 + $xnum_S71 ) * etg(1 + $I_L3653_190)
 3653.                         ea(1 + $I_L3653_190) = ( $top_S77 * 1.0/$d2_S76 )
 3653.                      endif
 3653.                      $I_L3653_190 = 1 + $I_L3653_190
 3653.                      if ( $I_L3653_190 >= nmax ) exit
 3653.                   enddo
 3658.                   $I_L3658_192 = 0
 3658. !dir$ ivdep
 3658.                   do
 3659.                      if ( icheck(1 + $I_L3658_192) == 1 ) then
 3660.                         $ecf_WR0_R16 = sign( 1.0, etc(1 + $I_L3658_192) + -ea(1 + $I_L3658_192) )
 3661.                         $egf_WR0_R17 = sign( 1.0, etg(1 + $I_L3658_192) + -ea(1 + $I_L3658_192) )
 3662.                         $dewc_WR0_R18 = -1.0 + 2.0 * fc(1 + $I_L3658_192)
 3663.                         $dewg_WR0_R19 = -1.0 + 2.0 * fg(1 + $I_L3658_192)
 3664.                         ecf(1 + $I_L3658_192) = ( $ecf_WR0_R16 * $dewc_WR0_R18 )
 3665.                         egf(1 + $I_L3658_192) = ( $egf_WR0_R17 * $dewg_WR0_R19 )
 3665.                      endif
 3667.                      $I_L3658_192 = 1 + $I_L3658_192
 3666.                      if ( $I_L3658_192 >= nmax ) exit
 3666.                   enddo
 3669.                   $I_L3669_194 = 0
 3669. !dir$ ivdep
 3669.                   do
 3670.                      if ( ecf(1 + $I_L3669_194) <= 0.0 .orelse. egf(1 + $I_L3669_194) <= 0.0 ) then
 3670.                         if ( idewco(1 + $I_L3669_194) == 3 ) then
 3670.                            goto 20
 3670.                         else
 3674.                            $idewco_WR0_R20 = 1 + idewco(1 + $I_L3669_194)
 3674.                            idewco(1 + $I_L3669_194) = $idewco_WR0_R20
 3675.                            if ( $idewco_WR0_R20 == 1 ) then
 3676.                               fc(1 + $I_L3669_194) = 0.0
 3677.                               fg(1 + $I_L3669_194) = 1.0
 3678.                            else if ( $idewco_WR0_R20 == 2 ) then
 3679.                               fc(1 + $I_L3669_194) = 1.0
 3680.                               fg(1 + $I_L3669_194) = 0.0
 3680.                            else if ( $idewco_WR0_R20 == 3 ) then
 3682.                               fc(1 + $I_L3669_194) = 0.0
 3683.                               fg(1 + $I_L3669_194) = 0.0
 3683.                            endif
 3683.                         endif
 3683.                      else
 3683.    20                   continue
 3672.                         icheck(1 + $I_L3669_194) = 0
 3672.                      endif
 3686.                      $I_L3669_194 = 1 + $I_L3669_194
 3685.                      if ( $I_L3669_194 >= nmax ) exit
 3685.                   enddo
 3688.                   $I_L3688_196 = 0
 3688. !dir$ ivdep
 3688.                   do
 3689.                      if ( icheck(1 + $I_L3688_196) == 1 ) then
 3688.                         goto 30
 3688.                      endif
 3690.                      $I_L3688_196 = 1 + $I_L3688_196
 3690.                      if ( $I_L3688_196 >= nmax ) exit
 3690.                   enddo
 3690.                else
 3653.                   t$13 = ncols
 3653.                   t$264 = max( 0, ncols )
 3653.                   t$265 = ncols
 3653.                   t$266 = ( 2 * ncols )
 3653.                endif
 3653.    30          continue
 3692.                call temres( bps(1), psb(1), em(1), gmt(1, 1), gmq(1, 1), psy(1), rcp(1), wc(1), wg(1), fc(1), fg(1), hr(1), hgdtg(1), hgdtc(1), hgdtm(1), hcdtg(1), hcdtc(1), hcdtm(1), egdtg(1), egdtc(1), egdqm(1), ecdtg(1), ecdtc(1), ecdqm(1), deadtg(1), deadtc(1), deadqm(1), ect(1), eci(1), egt(1), egi(1), egs(1), ec(1), eg(1), hc(1), hg(1), ecidif(1), egidif(1), ra(1), rb(1), rd(1), rc(1), rg(1), ta(1), ea(1), etc(1), etg(1), btc(1), btg(1), radt(1, 1), rst(1, 1), rsoil(1), hrr(1), cc(1), cg(1), satcap(1, 1), dtc(1), dtg(1), dtm(1), dqm(1), thermk(1), tc(1), tg(1), td(1), capac(1, 1), qm(1), tm(1), psur(1), dtc3x, nmax, vcover2(1, 1), ncols )
 3703.                if ( $ncount_S8 > 1 ) goto 40
 3704.                if ( nmax > 0 ) then
 3704.                   $I_L3704_198 = 0
 3704. !dir$ ivdep
 3704.                   do
 3705.                      tc(1 + $I_L3704_198) = tc(1 + $I_L3704_198) + dtc(1 + $I_L3704_198)
 3706.                      tg(1 + $I_L3704_198) = tg(1 + $I_L3704_198) + dtg(1 + $I_L3704_198)
 3707.                      tm(1 + $I_L3704_198) = tm(1 + $I_L3704_198) + dtm(1 + $I_L3704_198)
 3708.                      qm(1 + $I_L3704_198) = qm(1 + $I_L3704_198) + dqm(1 + $I_L3704_198)
 3709.                      $I_L3704_198 = 1 + $I_L3704_198
 3704.                      if ( $I_L3704_198 >= nmax ) exit
 3704.                   enddo
 3704.                endif
 3709.             enddo
 3709.    40       continue
 3713.             call update( bps(1), deadtg(1), deadtc(1), deadqm(1), ect(1), eci(1), egt(1), egi(1), egs(1), eg(1), hc(1), hg(1), ecmass(1), egmass(1), etmass(1), hflux(1), chf(1), shf(1), ra(1), rb(1), rd(1), ea(1), etc(1), etg(1), btc(1), btg(1), cc(1), cg(1), dtc(1), dtg(1), dtm(1), dqm(1), tc(1), tg(1), td(1), capac(1, 1), tm(1), nmax, dtc3x, ncols )
 3720.             if ( nmax > 0 ) then
 3720.                $I_L3720_200 = 0
 3720. !dir$ ivdep
 3720.                do
 3721.                   $fac_S83 = ( 9.8000000000000004e-2 * 1.0/( dtc3x * psb(1 + $I_L3720_200) ) )
 3722.                   $dtmdt_S84 = ( ( gmt(1 + $I_L3720_200, 3) + ( hflux(1 + $I_L3720_200) * $fac_S83 * 1.0/bps(1 + $I_L3720_200) * 9.9542106310969544e-4 ) ) * 1.0/gmt(1 + $I_L3720_200, 2) )
 3723.                   $dqmdt_S85 = ( ( gmq(1 + $I_L3720_200, 3) + etmass(1 + $I_L3720_200) * $fac_S83 ) * 1.0/gmq(1 + $I_L3720_200, 2) )
 3724.                   dtm(1 + $I_L3720_200) = $dtmdt_S84 * dtc3x
 3725.                   dqm(1 + $I_L3720_200) = $dqmdt_S85 * dtc3x
 3726.                   gmt(1 + $I_L3720_200, 3) = $dtmdt_S84
 3727.                   gmq(1 + $I_L3720_200, 3) = $dqmdt_S85
 3728.                   tm(1 + $I_L3720_200) = tm(1 + $I_L3720_200) + ( $dtmdt_S84 * dtc3x )
 3729.                   qm(1 + $I_L3720_200) = qm(1 + $I_L3720_200) + ( $dqmdt_S85 * dtc3x )
 3730.                   $I_L3720_200 = 1 + $I_L3720_200
 3720.                   if ( $I_L3720_200 >= nmax ) exit
 3720.                enddo
 3731.                $I_L3731_202 = 0
 3731. !dir$ ivdep
 3731.                do
 3732.                   $ntyp_S87 = itype(1 + $I_L3731_202)
 3734.                   d(1 + $I_L3731_202) = (xd%base_addr)($ntyp_S87, mon(1 + $I_L3731_202), 0)
 3735.                   z0x(1 + $I_L3731_202) = (x0x%base_addr)($ntyp_S87, mon(1 + $I_L3731_202), 0)
 3736.                   rdc(1 + $I_L3731_202) = (xdc%base_addr)($ntyp_S87, mon(1 + $I_L3731_202), 0)
 3737.                   rbc(1 + $I_L3731_202) = (xbc%base_addr)($ntyp_S87, mon(1 + $I_L3731_202), 0)
 3738.                   $I_L3731_202 = 1 + $I_L3731_202
 3731.                   if ( $I_L3731_202 >= nmax ) exit
 3731.                enddo
 3731.             endif
 3103.             _free( t$361 )
 3739.             return
 3739.       end
 3739.       
 3758.       
 3758.       subroutine interc( roff, cc, cg, satcap, snow, extk, tc, tg, td, capac, w, tm, ppc, ppl, vcover, itype, dtc3x, nmax, ncols, zlt2 )
 3758.       t$31 = ncols
 3850.       t$408 = _zla( 0, ncols )
 3758.       t$409 = _zla( 0, ncols )
 3758.       t$410 = 2 * _zla( 0, ncols )
 3758.       t$411 = 2 * _zla( 0, ncols )
 3758.       t$412 = 6 * _zla( 0, ncols )
 3758.       t$413 = 12 * _zla( 0, ncols )
 3758.       t$414 = 3 * _zla( 0, ncols )
 3854.       t$417 = 8 * _zla( 0, ncols )
 3872.       t$418 = 8 * _zla( 0, ncols )
 3872.       t$420 = 16 * _zla( 0, ncols )
 3884.       t$421 = 16 * _zla( 0, ncols )
 3884.       t$423 = 32 * _zla( 0, ncols )
 3881.       t$424 = 32 * _zla( 0, ncols )
 3881.       t$426 = 40 * _zla( 0, ncols )
 3866.       t$427 = 40 * _zla( 0, ncols )
 3866.       t$429 = 48 * _zla( 0, ncols )
 3867.       t$430 = 48 * _zla( 0, ncols )
 3867.       t$432 = 56 * _zla( 0, ncols )
 3859.       t$433 = 56 * _zla( 0, ncols )
 3859.       t$435 = 64 * _zla( 0, ncols )
 3855.       t$436 = 64 * _zla( 0, ncols )
 3855.       t$438 = 72 * _zla( 0, ncols )
 3860.       t$439 = 72 * _zla( 0, ncols )
 3860.       t$441 = 80 * _zla( 0, ncols )
 3879.       t$442 = 80 * _zla( 0, ncols )
 3879.       t$444 = 88 * _zla( 0, ncols )
 3876.       t$445 = 88 * _zla( 0, ncols )
 3876.       t$447 = 96 * _zla( 0, ncols )
 3858.       t$448 = 96 * _zla( 0, ncols )
 3858.       t$450 = 104 * _zla( 0, ncols )
 3880.       t$451 = 104 * _zla( 0, ncols )
 3880.       t$453 = 112 * _zla( 0, ncols )
 3861.       t$454 = 112 * _zla( 0, ncols )
 3861.       t$456 = 120 * _zla( 0, ncols )
 3875.       t$457 = 120 * _zla( 0, ncols )
 3875.       t$459 = 128 * _zla( 0, ncols )
 3877.       t$460 = 128 * _zla( 0, ncols )
 3877.       t$462 = 136 * _zla( 0, ncols )
 3883.       t$463 = 136 * _zla( 0, ncols )
 3883.       t$465 = 152 * _zla( 0, ncols )
 3863.       t$466 = 152 * _zla( 0, ncols )
 3863.       t$468 = 160 * _zla( 0, ncols )
 3882.       t$469 = 160 * _zla( 0, ncols )
 3882.       t$471 = 168 * _zla( 0, ncols )
 3864.       t$472 = 168 * _zla( 0, ncols )
 3864.       t$474 = 176 * _zla( 0, ncols )
 3873.       t$475 = 176 * _zla( 0, ncols )
 3873.       t$477 = 184 * _zla( 0, ncols )
 3857.       t$478 = 184 * _zla( 0, ncols )
 3857.       t$480 = 192 * _zla( 0, ncols )
 3856.       t$481 = 192 * _zla( 0, ncols )
 3856.       t$483 = 200 * _zla( 0, ncols )
 3862.       t$484 = 200 * _zla( 0, ncols )
 3862.       t$486 = 208 * _zla( 0, ncols )
 3874.       t$487 = 208 * _zla( 0, ncols )
 3874.       t$489 = 216 * _zla( 0, ncols )
 3878.       t$490 = 216 * _zla( 0, ncols )
 3878.       t$492 = 224 * _zla( 0, ncols )
 3870.       t$493 = 224 * _zla( 0, ncols )
 3870.       t$495 = 232 * _zla( 0, ncols )
 3871.       t$496 = 232 * _zla( 0, ncols )
 3871.       t$498 = 240 * _zla( 0, ncols )
 3869.       t$499 = 240 * _zla( 0, ncols )
 3869.       t$501 = 248 * _zla( 0, ncols )
 3865.       t$502 = 248 * _zla( 0, ncols )
 3865.       t$504 = 256 * _zla( 0, ncols )
 3868.       t$505 = 256 * _zla( 0, ncols )
 3868.       t$507 = 264 * _zla( 0, ncols )
 3758.       t$415 = int( _alloc( 264 * _zla( 0, ncols ) ), 8 )
 3854.       t$416 = t$415
 3872.       t$419 = t$415 + 8 * _zla( 0, ncols )
 3884.       t$422 = t$415 + 16 * _zla( 0, ncols )
 3881.       t$425 = t$415 + 32 * _zla( 0, ncols )
 3866.       t$428 = t$415 + 40 * _zla( 0, ncols )
 3867.       t$431 = t$415 + 48 * _zla( 0, ncols )
 3859.       t$434 = t$415 + 56 * _zla( 0, ncols )
 3855.       t$437 = t$415 + 64 * _zla( 0, ncols )
 3860.       t$440 = t$415 + 72 * _zla( 0, ncols )
 3879.       t$443 = t$415 + 80 * _zla( 0, ncols )
 3876.       t$446 = t$415 + 88 * _zla( 0, ncols )
 3858.       t$449 = t$415 + 96 * _zla( 0, ncols )
 3880.       t$452 = t$415 + 104 * _zla( 0, ncols )
 3861.       t$455 = t$415 + 112 * _zla( 0, ncols )
 3875.       t$458 = t$415 + 120 * _zla( 0, ncols )
 3877.       t$461 = t$415 + 128 * _zla( 0, ncols )
 3883.       t$464 = t$415 + 136 * _zla( 0, ncols )
 3863.       t$467 = t$415 + 152 * _zla( 0, ncols )
 3882.       t$470 = t$415 + 160 * _zla( 0, ncols )
 3864.       t$473 = t$415 + 168 * _zla( 0, ncols )
 3873.       t$476 = t$415 + 176 * _zla( 0, ncols )
 3857.       t$479 = t$415 + 184 * _zla( 0, ncols )
 3856.       t$482 = t$415 + 192 * _zla( 0, ncols )
 3862.       t$485 = t$415 + 200 * _zla( 0, ncols )
 3874.       t$488 = t$415 + 208 * _zla( 0, ncols )
 3878.       t$491 = t$415 + 216 * _zla( 0, ncols )
 3870.       t$494 = t$415 + 224 * _zla( 0, ncols )
 3871.       t$497 = t$415 + 232 * _zla( 0, ncols )
 3869.       t$500 = t$415 + 240 * _zla( 0, ncols )
 3865.       t$503 = t$415 + 248 * _zla( 0, ncols )
 3868.       t$506 = t$415 + 256 * _zla( 0, ncols )
 3905.       $F_A33 = ncols
 3905.       if ( ncols > 0 ) then
 3905.          $I_L3905_136 = 0
 3905. !dir$ ivdep
 3905.          do
 3905.             ap(1 + $I_L3905_136) = 0.0
 3905.             $I_L3905_136 = 1 + $I_L3905_136
 3905.             if ( $I_L3905_136 >= $F_A33 ) exit
 3905.          enddo
 3905.       endif
 3906.       if ( nmax > 0 ) then
 3906.          $I_L3906_102 = 0
 3906. !dir$ ivdep
 3906.          do
 3907.             ap(1 + $I_L3906_102) = 1.0e-4
 3908.             cp(1 + $I_L3906_102) = 9.9990000000000001e-1
 3909.             $totalp_WR0_R0 = ppc(1 + $I_L3906_102) + ppl(1 + $I_L3906_102)
 3910.             if ( ppc(1 + $I_L3906_102) + ppl(1 + $I_L3906_102) >= 1.0e-8 ) then
 3916.                ap(1 + $I_L3906_102) = ( ( 20.0 * ppc(1 + $I_L3906_102) + 1.0e-4 * ppl(1 + $I_L3906_102) ) * 1.0/$totalp_WR0_R0 )
 3922.                cp(1 + $I_L3906_102) = ( ( 2.0599999999999999e-9 * ppc(1 + $I_L3906_102) + 9.9990000000000001e-1 * ppl(1 + $I_L3906_102) ) * 1.0/$totalp_WR0_R0 )
 3922.             endif
 3925.             roff(1 + $I_L3906_102) = 0.0
 3926.             thru(1 + $I_L3906_102) = 0.0
 3927.             fpi(1 + $I_L3906_102) = 0.0
 3931.             $ntyp_S1 = itype(1 + $I_L3906_102)
 3933.             $theta_S2 = w(1 + $I_L3906_102, 1) * (poros%base_addr)($ntyp_S1, 0)
 3950.             csoil(1 + $I_L3906_102) = 49086963.174481615 * ( ( 9.7999999999999997e-4 + 1.1999999999999999e-3 * $theta_S2 ) * 1.0/( 1.1000000000000001 + -4.0000000000000002e-1 * $theta_S2 ) )
 3954.             p0(1 + $I_L3906_102) = 1.0e-3 * $totalp_WR0_R0
 3955.             $I_L3906_102 = 1 + $I_L3906_102
 3924.             if ( $I_L3906_102 >= nmax ) exit
 3924.          enddo
 3924.       endif
 3959.       $I_L3959_138 = 0
 3959.       do
 3961.          if ( $I_L3959_138 == 0 ) then
 3962.             if ( nmax > 0 ) then
 3962.                $I_L3962_104 = 0
 3962. !dir$ ivdep
 3962.                do
 3964.                   ts(1 + $I_L3962_104) = tc(1 + $I_L3962_104)
 3967.                   specht(1 + $I_L3962_104) = 840.0 * zlt2(1 + $I_L3962_104, 1)
 3968.                   $I_L3962_104 = 1 + $I_L3962_104
 3962.                   if ( $I_L3962_104 >= nmax ) exit
 3962.                enddo
 3962.             endif
 3969.          else if ( nmax > 0 ) then
 3970.             $I_L3970_106 = 0
 3970. !dir$ ivdep
 3970.             do
 3971.                ts(1 + $I_L3970_106) = tg(1 + $I_L3970_106)
 3972.                specht(1 + $I_L3970_106) = csoil(1 + $I_L3970_106)
 3973.                $I_L3970_106 = 1 + $I_L3970_106
 3970.                if ( $I_L3970_106 >= nmax ) exit
 3970.             enddo
 3970.          endif
 3976.          if ( nmax > 0 ) then
 3977.             if ( $I_L3959_138 /= 0 ) then
 3976.                $I_L3976_108 = 0
 3976. !dir$ ivdep
 3976.                do
 3977.                   if ( ts(1 + $I_L3976_108) > 273.16000000000003 ) then
 3982.                      $xsc_WR0_R1 = max( 0.0, capac(1 + $I_L3976_108, 1 + $I_L3959_138) + -satcap(1 + $I_L3976_108, 1 + $I_L3959_138) )
 3984.                      capac(1 + $I_L3976_108, 1 + $I_L3959_138) = capac(1 + $I_L3976_108, 1 + $I_L3959_138) + -$xsc_WR0_R1
 3986.                      roff(1 + $I_L3976_108) = roff(1 + $I_L3976_108) + $xsc_WR0_R1
 3986.                   endif
 3988.                   $I_L3976_108 = 1 + $I_L3976_108
 3987.                   if ( $I_L3976_108 >= nmax ) exit
 3987.                enddo
 3987.             else
 3976.                $I_L3976_130 = 0
 3976. !dir$ ivdep
 3976.                do
 3982.                   $xsc_WR0_R2 = max( 0.0, capac(1 + $I_L3976_130, 1) + -satcap(1 + $I_L3976_130, 1) )
 3984.                   capac(1 + $I_L3976_130, 1) = capac(1 + $I_L3976_130, 1) + -$xsc_WR0_R2
 3986.                   roff(1 + $I_L3976_130) = roff(1 + $I_L3976_130) + $xsc_WR0_R2
 3988.                   $I_L3976_130 = 1 + $I_L3976_130
 3987.                   if ( $I_L3976_130 >= nmax ) exit
 3987.                enddo
 3987.             endif
 4026.             if ( -1 + $I_L3959_138 == 0 ) then
 3990.                $I_L3990_110 = 0
 3990. !dir$ ivdep
 3990.                do
 3995.                   spwet1(1 + $I_L3990_110) = 4200000.0 * min( 5.0000000000000003e-2, capac(1 + $I_L3990_110, 1 + $I_L3959_138) )
 3997.                   $capacp_WR0_R4 = 0.0
 3997.                   capacp(1 + $I_L3990_110, 1 + $I_L3959_138) = 0.0
 3999.                   $snowp_WR0_R5 = 0.0
 3999.                   snowp(1 + $I_L3990_110, 1 + $I_L3959_138) = 0.0
 4001.                   if ( ts(1 + $I_L3990_110) > 273.16000000000003 ) then
 4002.                      $capacp_WR0_R4 = capac(1 + $I_L3990_110, 1 + $I_L3959_138)
 4002.                      capacp(1 + $I_L3990_110, 1 + $I_L3959_138) = $capacp_WR0_R4
 4002.                   else
 4004.                      $snowp_WR0_R5 = capac(1 + $I_L3990_110, 1 + $I_L3959_138)
 4004.                      snowp(1 + $I_L3990_110, 1 + $I_L3959_138) = $snowp_WR0_R5
 4004.                   endif
 4007.                   capac(1 + $I_L3990_110, 1 + $I_L3959_138) = $capacp_WR0_R4
 4009.                   snow(1 + $I_L3990_110, 1 + $I_L3959_138) = $snowp_WR0_R5
 4011.                   zload(1 + $I_L3990_110) = $capacp_WR0_R4 + $snowp_WR0_R5
 4021.                   $fpi_WR0_R7 = ( 1.0 + -_expn( -( extk(1 + $I_L3990_110, 1 + $I_L3959_138, 3, 1) * zlt2(1 + $I_L3990_110, 1 + $I_L3959_138) * 1.0/vcover(1 + $I_L3990_110, 1 + $I_L3959_138) ) ) ) * vcover(1 + $I_L3990_110, 1 + $I_L3959_138)
 4021.                   fpi(1 + $I_L3990_110) = $fpi_WR0_R7
 4026.                   $tti_WR0_R8 = p0(1 + $I_L3990_110)
 4026.                   tti(1 + $I_L3990_110) = $tti_WR0_R8
 4027.                   $I_L3990_110 = 1 + $I_L3990_110
 4026.                   if ( $I_L3990_110 >= nmax ) exit
 4026.                enddo
 4026.             else
 3990.                $I_L3990_132 = 0
 3990. !dir$ ivdep
 3990.                do
 3995.                   spwet1(1 + $I_L3990_132) = 4200000.0 * min( 5.0000000000000003e-2, capac(1 + $I_L3990_132, 1 + $I_L3959_138) )
 3997.                   $capacp_WR0_R10 = 0.0
 3997.                   capacp(1 + $I_L3990_132, 1 + $I_L3959_138) = 0.0
 3999.                   $snowp_WR0_R11 = 0.0
 3999.                   snowp(1 + $I_L3990_132, 1 + $I_L3959_138) = 0.0
 4001.                   if ( ts(1 + $I_L3990_132) > 273.16000000000003 ) then
 4002.                      $capacp_WR0_R10 = capac(1 + $I_L3990_132, 1 + $I_L3959_138)
 4002.                      capacp(1 + $I_L3990_132, 1 + $I_L3959_138) = $capacp_WR0_R10
 4002.                   else
 4004.                      $snowp_WR0_R11 = capac(1 + $I_L3990_132, 1 + $I_L3959_138)
 4004.                      snowp(1 + $I_L3990_132, 1 + $I_L3959_138) = $snowp_WR0_R11
 4004.                   endif
 4007.                   capac(1 + $I_L3990_132, 1 + $I_L3959_138) = $capacp_WR0_R10
 4009.                   snow(1 + $I_L3990_132, 1 + $I_L3959_138) = $snowp_WR0_R11
 4011.                   zload(1 + $I_L3990_132) = $capacp_WR0_R10 + $snowp_WR0_R11
 4021.                   $fpi_WR0_R13 = ( 1.0 + -_expn( -( extk(1 + $I_L3990_132, 1 + $I_L3959_138, 3, 1) * zlt2(1 + $I_L3990_132, 1 + $I_L3959_138) * 1.0/vcover(1 + $I_L3990_132, 1 + $I_L3959_138) ) ) ) * vcover(1 + $I_L3990_132, 1 + $I_L3959_138)
 4021.                   fpi(1 + $I_L3990_132) = $fpi_WR0_R13
 4024.                   tti(1 + $I_L3990_132) = p0(1 + $I_L3990_132) * ( 1.0 + -$fpi_WR0_R13 )
 4027.                   $I_L3990_132 = 1 + $I_L3990_132
 4026.                   if ( $I_L3990_132 >= nmax ) exit
 4026.                enddo
 4026.             endif
 4031.             $I_L4031_112 = 0
 4031. !dir$ ivdep
 4031.             do
 4032.                xs(1 + $I_L4031_112) = 1.0
 4033.                if ( p0(1 + $I_L4031_112) >= 1.0000000000000001e-9 ) then
 4039.                   $arg_WR0_R15 = ( ( satcap(1 + $I_L4031_112, 1 + $I_L3959_138) + -zload(1 + $I_L4031_112) ) * 1.0/( p0(1 + $I_L4031_112) * fpi(1 + $I_L4031_112) * ap(1 + $I_L4031_112) ) ) + -( cp(1 + $I_L4031_112) * 1.0/ap(1 + $I_L4031_112) )
 4041.                   if ( $arg_WR0_R15 >= 1.0000000000000001e-9 ) then
 4047.                      $xs_WR0_R14 = -5.0000000000000003e-2 * log( $arg_WR0_R15 )
 4049.                      $xs_WR0_R14 = max( 0.0, min( 1.0, $xs_WR0_R14 ) )
 4049.                      xs(1 + $I_L4031_112) = $xs_WR0_R14
 4049.                   endif
 4049.                endif
 4052.                $I_L4031_112 = 1 + $I_L4031_112
 4051.                if ( $I_L4031_112 >= nmax ) exit
 4051.             enddo
 4054.             $I_L4054_114 = 0
 4054. !dir$ ivdep
 4054.             do
 4060.                $tex_WR0_R16 = p0(1 + $I_L4054_114) * fpi(1 + $I_L4054_114) * ( ( 1.0 + -_expn( -20.0 * xs(1 + $I_L4054_114) ) ) * ap(1 + $I_L4054_114) * 5.0000000000000003e-2 + cp(1 + $I_L4054_114) * xs(1 + $I_L4054_114) ) + -( ( satcap(1 + $I_L4054_114, 1 + $I_L3959_138) + -zload(1 + $I_L4054_114) ) * xs(1 + $I_L4054_114) )
 4063.                $tex_WR0_R16 = max( 0.0, $tex_WR0_R16 )
 4065.                if ( -1 + $I_L3959_138 == 0 ) then
 4065.                   $tex_WR0_R16 = 0.0
 4065.                endif
 4069.                $thru_WR0_R17 = tti(1 + $I_L4054_114) + $tex_WR0_R16
 4069.                thru(1 + $I_L4054_114) = $thru_WR0_R17
 4070.                if ( -1 + $I_L3959_138 == 0 ) then
 4070.                   if ( tg(1 + $I_L4054_114) <= 273.16000000000003 ) then
 4071.                      $thru_WR0_R17 = 0.0
 4071.                      thru(1 + $I_L4054_114) = 0.0
 4071.                   endif
 4071.                endif
 4074.                $pinf_WR0_R18 = p0(1 + $I_L4054_114) + -$thru_WR0_R17
 4076.                if ( tm(1 + $I_L4054_114) > 273.16000000000003 ) then
 4077.                   capac(1 + $I_L4054_114, 1 + $I_L3959_138) = capac(1 + $I_L4054_114, 1 + $I_L3959_138) + $pinf_WR0_R18
 4077.                else
 4079.                   snow(1 + $I_L4054_114, 1 + $I_L3959_138) = snow(1 + $I_L4054_114, 1 + $I_L3959_138) + $pinf_WR0_R18
 4079.                endif
 4081.                $I_L4054_114 = 1 + $I_L4054_114
 4080.                if ( $I_L4054_114 >= nmax ) exit
 4080.             enddo
 4080.          endif
 4083.          if ( -1 + $I_L3959_138 == 0 ) then
 4084.             if ( nmax > 0 ) then
 4084.                $I_L4084_116 = 0
 4084. !dir$ ivdep
 4084.                do
 4085.                   $ntyp_S11 = itype(1 + $I_L4084_116)
 4086.                   if ( tm(1 + $I_L4084_116) <= 273.16000000000003 ) then
 4087.                      snow(1 + $I_L4084_116, 2) = snowp(1 + $I_L4084_116, 2) + p0(1 + $I_L4084_116)
 4088.                      thru(1 + $I_L4084_116) = 0.0
 4088.                   else
 4093.                      $equdep_WR0_R19 = (satco%base_addr)($ntyp_S11, 0) * dtc3x
 4094.                      $xs_WR0_R20 = 1.0
 4094.                      xs(1 + $I_L4084_116) = 1.0
 4095.                      if ( thru(1 + $I_L4084_116) >= 1.0000000000000001e-9 ) then
 4096.                         $LD_SPLT_P5 = thru(1 + $I_L4084_116)
 4096.                         $arg_WR0_R21 = ( $equdep_WR0_R19 * 1.0/( $LD_SPLT_P5 * ap(1 + $I_L4084_116) ) ) + -( cp(1 + $I_L4084_116) * 1.0/ap(1 + $I_L4084_116) )
 4097.                         if ( $arg_WR0_R21 >= 1.0000000000000001e-9 ) then
 4098.                            $xs_WR0_R20 = -5.0000000000000003e-2 * log( $arg_WR0_R21 )
 4100.                            $LD_SPLT_P12 = $xs_WR0_R20
 4100.                            $xs_WR0_R20 = max( 0.0, min( 1.0, $xs_WR0_R20 ) )
 4100.                            xs(1 + $I_L4084_116) = ( max( 0.0, min( 1.0, $LD_SPLT_P12 ) ) )
 4100.                         endif
 4100.                      endif
 4103.                      $LD_SPLT_P6 = thru(1 + $I_L4084_116)
 4103.                      $roffo_WR0_R22 = $LD_SPLT_P6 * ( ( 1.0 + -_expn( -20.0 * $xs_WR0_R20 ) ) * ap(1 + $I_L4084_116) * 5.0000000000000003e-2 + cp(1 + $I_L4084_116) * $xs_WR0_R20 ) + -( $equdep_WR0_R19 * $xs_WR0_R20 )
 4106.                      $roffo_WR0_R22 = max( 0.0, $roffo_WR0_R22 )
 4107.                      roff(1 + $I_L4084_116) = roff(1 + $I_L4084_116) + $roffo_WR0_R22
 4108.                      w(1 + $I_L4084_116, 1) = w(1 + $I_L4084_116, 1) + ( ( $LD_SPLT_P6 + -$roffo_WR0_R22 ) * 1.0/( (poros%base_addr)($ntyp_S11, 0) * (zdepth%base_addr)($ntyp_S11, 1, 0) ) )
 4108.                   endif
 4111.                   $I_L4084_116 = 1 + $I_L4084_116
 4110.                   if ( $I_L4084_116 >= nmax ) exit
 4110.                enddo
 4110.             endif
 4110.          endif
 4116.          if ( nmax > 0 ) then
 4116.             $I_L4116_118 = 0
 4116. !dir$ ivdep
 4116.             do
 4117.                $diff_WR0_R23 = 4200000.0 * ( capac(1 + $I_L4116_118, 1 + $I_L3959_138) + snow(1 + $I_L4116_118, 1 + $I_L3959_138) + -capacp(1 + $I_L4116_118, 1 + $I_L3959_138) + -snowp(1 + $I_L4116_118, 1 + $I_L3959_138) )
 4117.                diff(1 + $I_L4116_118) = $diff_WR0_R23
 4119.                $ccp_WR0_R24 = specht(1 + $I_L4116_118) + spwet1(1 + $I_L4116_118)
 4119.                ccp(1 + $I_L4116_118) = $ccp_WR0_R24
 4120.                $cct_WR0_R25 = specht(1 + $I_L4116_118) + spwet1(1 + $I_L4116_118) + $diff_WR0_R23
 4120.                cct(1 + $I_L4116_118) = $cct_WR0_R25
 4121.                tsd(1 + $I_L4116_118) = ( ( ts(1 + $I_L4116_118) * $ccp_WR0_R24 + tm(1 + $I_L4116_118) * $diff_WR0_R23 ) * 1.0/$cct_WR0_R25 )
 4122.                tsf(1 + $I_L4116_118) = ( -273.16000000000003 + ts(1 + $I_L4116_118) ) * ( -273.16000000000003 + tm(1 + $I_L4116_118) )
 4123.                $I_L4116_118 = 1 + $I_L4116_118
 4116.                if ( $I_L4116_118 >= nmax ) exit
 4116.             enddo
 4124.             $I_L4124_120 = 0
 4124. !dir$ ivdep
 4124.             do
 4125.                if ( tsf(1 + $I_L4124_120) < 0.0 ) then
 4126.                   if ( tsd(1 + $I_L4124_120) <= 273.16000000000003 ) then
 4130.                      $ccc_WR0_R27 = 333624200.0 * capacp(1 + $I_L4124_120, 1 + $I_L3959_138)
 4131.                      if ( ts(1 + $I_L4124_120) < tm(1 + $I_L4124_120) ) then
 4131.                         $ccc_WR0_R27 = 79.434333333333328 * diff(1 + $I_L4124_120)
 4131.                      endif
 4132.                      $tsd_WR0_R26 = ( ( ts(1 + $I_L4124_120) * ccp(1 + $I_L4124_120) + tm(1 + $I_L4124_120) * diff(1 + $I_L4124_120) + $ccc_WR0_R27 ) * 1.0/cct(1 + $I_L4124_120) )
 4132.                      tsd(1 + $I_L4124_120) = $tsd_WR0_R26
 4133.                      $freeze_WR0_R28 = 273.16000000000003 * cct(1 + $I_L4124_120) + -( ts(1 + $I_L4124_120) * ccp(1 + $I_L4124_120) + tm(1 + $I_L4124_120) * diff(1 + $I_L4124_120) )
 4134.                      $freeze_WR0_R28 = 2.9973844823007445e-9 * ( min( $ccc_WR0_R27, $freeze_WR0_R28 ) )
 4135.                      if ( $tsd_WR0_R26 > 273.16000000000003 ) then
 4135.                         tsd(1 + $I_L4124_120) = 273.06
 4135.                      endif
 4136.                      snow(1 + $I_L4124_120, 1 + $I_L3959_138) = snow(1 + $I_L4124_120, 1 + $I_L3959_138) + $freeze_WR0_R28
 4137.                      capac(1 + $I_L4124_120, 1 + $I_L3959_138) = capac(1 + $I_L4124_120, 1 + $I_L3959_138) + -$freeze_WR0_R28
 4137.                   else
 4142.                      $ccc_WR0_R27 = -333624200.0 * snow(1 + $I_L4124_120, 1 + $I_L3959_138)
 4143.                      if ( ts(1 + $I_L4124_120) > tm(1 + $I_L4124_120) ) then
 4143.                         $ccc_WR0_R27 = -79.434333333333328 * diff(1 + $I_L4124_120)
 4143.                      endif
 4144.                      $tsd_WR0_R26 = ( ( ts(1 + $I_L4124_120) * ccp(1 + $I_L4124_120) + tm(1 + $I_L4124_120) * diff(1 + $I_L4124_120) + $ccc_WR0_R27 ) * 1.0/cct(1 + $I_L4124_120) )
 4144.                      tsd(1 + $I_L4124_120) = $tsd_WR0_R26
 4145.                      $freeze_WR0_R28 = ( 273.16000000000003 * cct(1 + $I_L4124_120) + -( ts(1 + $I_L4124_120) * ccp(1 + $I_L4124_120) + tm(1 + $I_L4124_120) * diff(1 + $I_L4124_120) ) )
 4146.                      $freeze_WR0_R28 = 2.9973844823007445e-9 * max( $ccc_WR0_R27, $freeze_WR0_R28 )
 4147.                      if ( $tsd_WR0_R26 <= 273.16000000000003 ) then
 4147.                         tsd(1 + $I_L4124_120) = 273.06
 4147.                      endif
 4148.                      snow(1 + $I_L4124_120, 1 + $I_L3959_138) = snow(1 + $I_L4124_120, 1 + $I_L3959_138) + $freeze_WR0_R28
 4149.                      capac(1 + $I_L4124_120, 1 + $I_L3959_138) = capac(1 + $I_L4124_120, 1 + $I_L3959_138) + -$freeze_WR0_R28
 4149.                   endif
 4149.                endif
 4152.                $I_L4124_120 = 1 + $I_L4124_120
 4151.                if ( $I_L4124_120 >= nmax ) exit
 4151.             enddo
 4154.             if ( $I_L3959_138 == 0 ) then
 4153.                $I_L4153_122 = 0
 4153. !dir$ ivdep
 4153.                do
 4155.                   tc(1 + $I_L4153_122) = tsd(1 + $I_L4153_122)
 4159.                   $I_L4153_122 = 1 + $I_L4153_122
 4158.                   if ( $I_L4153_122 >= nmax ) exit
 4158.                enddo
 4158.             else
 4153.                $I_L4153_134 = 0
 4153. !dir$ ivdep
 4153.                do
 4157.                   tg(1 + $I_L4153_134) = tsd(1 + $I_L4153_134)
 4159.                   $I_L4153_134 = 1 + $I_L4153_134
 4158.                   if ( $I_L4153_134 >= nmax ) exit
 4158.                enddo
 4158.             endif
 4160.             $I_L4160_124 = 0
 4160. !dir$ ivdep
 4160.             do
 4161.                if ( snow(1 + $I_L4160_124, 1 + $I_L3959_138) >= 9.9999999999999995e-8 ) then
 4160.                   goto 10
 4161.                else if ( -1 + $I_L3959_138 == 0 ) then
 4161.    10             continue
 4162.                   $zmelt_WR0_R29 = 0.0
 4163.                   if ( td(1 + $I_L4160_124) > 273.16000000000003 ) then
 4164.                      $zmelt_WR0_R29 = capac(1 + $I_L4160_124, 1 + $I_L3959_138)
 4164.                   else
 4166.                      roff(1 + $I_L4160_124) = roff(1 + $I_L4160_124) + capac(1 + $I_L4160_124, 1 + $I_L3959_138)
 4166.                   endif
 4168.                   capac(1 + $I_L4160_124, 1 + $I_L3959_138) = 0.0
 4172.                   $ntyp_S16 = itype(1 + $I_L4160_124)
 4173.                   w(1 + $I_L4160_124, 1) = w(1 + $I_L4160_124, 1) + ( $zmelt_WR0_R29 * 1.0/( (poros%base_addr)($ntyp_S16, 0) * (zdepth%base_addr)($ntyp_S16, 1, 0) ) )
 4173.                endif
 4175.                $I_L4160_124 = 1 + $I_L4160_124
 4174.                if ( $I_L4160_124 >= nmax ) exit
 4174.             enddo
 4176.             $I_L4176_126 = 0
 4176. !dir$ ivdep
 4176.             do
 4186.                capac(1 + $I_L4176_126, 1 + $I_L3959_138) = capac(1 + $I_L4176_126, 1 + $I_L3959_138) + snow(1 + $I_L4176_126, 1 + $I_L3959_138)
 4187.                snow(1 + $I_L4176_126, 1 + $I_L3959_138) = 0.0
 4188.                p0(1 + $I_L4176_126) = thru(1 + $I_L4176_126)
 4189.                $I_L4176_126 = 1 + $I_L4176_126
 4176.                if ( $I_L4176_126 >= nmax ) exit
 4176.             enddo
 4176.          endif
 4190.          $I_L3959_138 = 1 + $I_L3959_138
 4189.          if ( $I_L3959_138 >= 2 ) exit
 4189.       enddo
 4194.       if ( nmax > 0 ) then
 4194.          $I_L4194_128 = 0
 4194. !dir$ ivdep
 4194.          do
 4196.             cc(1 + $I_L4194_128) = 840.0 * zlt2(1 + $I_L4194_128, 1) + 4200000.0 * capac(1 + $I_L4194_128, 1)
 4197.             $spwet_WR0_R30 = 4200000.0 * min( 5.0000000000000003e-2, capac(1 + $I_L4194_128, 2) )
 4198.             cg(1 + $I_L4194_128) = csoil(1 + $I_L4194_128) + $spwet_WR0_R30
 4199.             $I_L4194_128 = 1 + $I_L4194_128
 4194.             if ( $I_L4194_128 >= nmax ) exit
 4194.          enddo
 4194.       endif
 3758.       _free( t$415 )
 4200.       return
 4200.       end
 4200.       
 4208.       
 4208.       subroutine stomat( cosz, par, pd, rst, extk, vcover, itype, nmax, ncols, zlt2, green2, chil2, rstpar2 )
 4208.       t$39 = ncols
 4264.       t$508 = _zla( 0, ncols )
 4208.       t$509 = _zla( 0, ncols )
 4208.       t$510 = 2 * _zla( 0, ncols )
 4208.       t$511 = 2 * _zla( 0, ncols )
 4208.       t$512 = 6 * _zla( 0, ncols )
 4208.       t$513 = 12 * _zla( 0, ncols )
 4208.       t$514 = 6 * _zla( 0, ncols )
 4271.       t$517 = 8 * _zla( 0, ncols )
 4268.       t$518 = 8 * _zla( 0, ncols )
 4268.       t$520 = 16 * _zla( 0, ncols )
 4277.       t$521 = 16 * _zla( 0, ncols )
 4277.       t$523 = 24 * _zla( 0, ncols )
 4272.       t$524 = 24 * _zla( 0, ncols )
 4272.       t$526 = 32 * _zla( 0, ncols )
 4275.       t$527 = 32 * _zla( 0, ncols )
 4275.       t$529 = 40 * _zla( 0, ncols )
 4266.       t$530 = 40 * _zla( 0, ncols )
 4266.       t$532 = 48 * _zla( 0, ncols )
 4267.       t$533 = 48 * _zla( 0, ncols )
 4267.       t$535 = 56 * _zla( 0, ncols )
 4269.       t$536 = 56 * _zla( 0, ncols )
 4269.       t$538 = 64 * _zla( 0, ncols )
 4270.       t$539 = 64 * _zla( 0, ncols )
 4270.       t$541 = 72 * _zla( 0, ncols )
 4276.       t$542 = 72 * _zla( 0, ncols )
 4276.       t$544 = 80 * _zla( 0, ncols )
 4273.       t$545 = 80 * _zla( 0, ncols )
 4273.       t$547 = 88 * _zla( 0, ncols )
 4274.       t$548 = 88 * _zla( 0, ncols )
 4274.       t$550 = 96 * _zla( 0, ncols )
 4208.       t$515 = int( _alloc( 96 * _zla( 0, ncols ) ), 8 )
 4271.       t$516 = t$515
 4268.       t$519 = t$515 + 8 * _zla( 0, ncols )
 4277.       t$522 = t$515 + 16 * _zla( 0, ncols )
 4272.       t$525 = t$515 + 24 * _zla( 0, ncols )
 4275.       t$528 = t$515 + 32 * _zla( 0, ncols )
 4266.       t$531 = t$515 + 40 * _zla( 0, ncols )
 4267.       t$534 = t$515 + 48 * _zla( 0, ncols )
 4269.       t$537 = t$515 + 56 * _zla( 0, ncols )
 4270.       t$540 = t$515 + 64 * _zla( 0, ncols )
 4276.       t$543 = t$515 + 72 * _zla( 0, ncols )
 4273.       t$546 = t$515 + 80 * _zla( 0, ncols )
 4274.       t$549 = t$515 + 88 * _zla( 0, ncols )
 4290.       if ( nmax > 0 ) then
 4290.          $I_L4290_36 = 0
 4290. !dir$ ivdep
 4290.          do
 4291.             f(1 + $I_L4290_36) = max( 1.746e-2, cosz(1 + $I_L4290_36) )
 4292.             $I_L4290_36 = 1 + $I_L4290_36
 4290.             if ( $I_L4290_36 >= nmax ) exit
 4290.          enddo
 4296.          $SI_L4296_38_G1 = 0
 4296.          do
 4294.             $I_L4294_46 = 0
 4294. !dir$ blocking_size( 2, 2 )
 4294.             do
 4295.                $I_L4295_44 = 0
 4295. !dir$ blocking_size( 2, 2 )
 4295.                do
 4296.                   $I_L4296_48 = 0
 4296. !dir$ ivdep
 4296. !dir$ blocking_size( 256, 256 )
 4296.                   do
 4303.                      extk($I_L4296_48 + 256 * $SI_L4296_38_G1 + 1, 1 + $I_L4294_46, 1, 1 + $I_L4295_44) = min( extk($I_L4296_48 + 256 * $SI_L4296_38_G1 + 1, 1 + $I_L4294_46, 1, 1 + $I_L4295_44), ( 150.0 * 1.0/zlt2($I_L4296_48 + 256 * $SI_L4296_38_G1 + 1, 1 + $I_L4294_46) ) * vcover($I_L4296_48 + 256 * $SI_L4296_38_G1 + 1, 1 + $I_L4294_46) )
 4296.                      $I_L4296_48 = 1 + $I_L4296_48
 4296.                      if ( $I_L4296_48 >= min( nmax, 256 + 256 * $SI_L4296_38_G1 ) + -256 * $SI_L4296_38_G1 ) exit
 4296.                   enddo
 4306.                   $I_L4295_44 = 1 + $I_L4295_44
 4306.                   if ( $I_L4295_44 >= 2 ) exit
 4306.                enddo
 4307.                $I_L4294_46 = 1 + $I_L4294_46
 4305.                if ( $I_L4294_46 >= 2 ) exit
 4305.             enddo
 4296.             $SI_L4296_38_G1 = 1 + $SI_L4296_38_G1
 4306.             if ( $SI_L4296_38_G1 >= _rsh( 255 + nmax, 8 ) ) exit
 4306.          enddo
 4312.          $I_L4312_40 = 0
 4312. !dir$ ivdep
 4312.          do
 4313.             if ( itype(1 + $I_L4312_40) == 13 .orelse. itype(1 + $I_L4312_40) == 11 ) then
 4314.                rst(1 + $I_L4312_40, 1) = 100000.0
 4314.             else
 4322.                $at_WR0_R0 = ( zlt2(1 + $I_L4312_40, 1) * 1.0/vcover(1 + $I_L4312_40, 1) )
 4324.                if ( par(1 + $I_L4312_40, 1) <= 1.01e-3 ) then
 4333.                   $xabc_S5 = ( rstpar2(1 + $I_L4312_40, 1, 1) * 1.0/rstpar2(1 + $I_L4312_40, 1, 2) ) + rstpar2(1 + $I_L4312_40, 1, 3)
 4345.                   rst(1 + $I_L4312_40, 1) = 1.0/( ( 5.0e-1 * 1.0/$xabc_S5 ) * $at_WR0_R0 )
 4345.                else
 4352.                   $gamma_WR0_R1 = ( ( rstpar2(1 + $I_L4312_40, 1, 1) + rstpar2(1 + $I_L4312_40, 1, 2) * rstpar2(1 + $I_L4312_40, 1, 3) ) * 1.0/rstpar2(1 + $I_L4312_40, 1, 3) )
 4364.                   $at_WR0_R0 = ( zlt2(1 + $I_L4312_40, 1) * 1.0/vcover(1 + $I_L4312_40, 1) )
 4370.                   $power1_WR0_R2 = $at_WR0_R0 * extk(1 + $I_L4312_40, 1, 1, 1)
 4371.                   $power2_WR0_R3 = $at_WR0_R0 * extk(1 + $I_L4312_40, 1, 1, 2)
 4378.                   $aa_WR0_R4 = 5.0e-1 + -( ( 6.3300000000000001e-1 + 3.3000000000000002e-1 * chil2(1 + $I_L4312_40, 1) ) * chil2(1 + $I_L4312_40, 1) )
 4388.                   $zat_WR0_R6 = ( log( 5.0e-1 * ( 1.0 + _expn( -$power1_WR0_R2 ) ) ) * pd(1 + $I_L4312_40, 1) * 1.0/extk(1 + $I_L4312_40, 1, 1, 1) )
 4390.                   $zat_WR0_R6 = $zat_WR0_R6 + ( log( 5.0e-1 * ( 1.0 + _expn( -$power2_WR0_R3 ) ) ) * ( 1.0 + -pd(1 + $I_L4312_40, 1) ) * 1.0/extk(1 + $I_L4312_40, 1, 1, 2) )
 4392.                   $zk_WR0_R7 = 1.0/$zat_WR0_R6 * log( pd(1 + $I_L4312_40, 1) * _expn( ( $power1_WR0_R2 * $zat_WR0_R6 * 1.0/$at_WR0_R0 ) ) + ( 1.0 + -pd(1 + $I_L4312_40, 1) ) * _expn( ( $power2_WR0_R3 * $zat_WR0_R6 * 1.0/$at_WR0_R0 ) ) )
 4400.                   $ekat_WR0_R8 = _expn( ( min( 20.0, $zk_WR0_R7 * $at_WR0_R0 ) ) )
 4408.                   $avflux_WR0_R9 = par(1 + $I_L4312_40, 1) * ( pd(1 + $I_L4312_40, 1) * ( ( $aa_WR0_R4 * 1.0/f(1 + $I_L4312_40) ) + ( 8.77e-1 + -1.754 * $aa_WR0_R4 ) ) + ( 1.0 + -pd(1 + $I_L4312_40, 1) ) * ( 1.1187314833333333 * ( 8.77e-1 + -1.754 * $aa_WR0_R4 ) + 1.5 * $aa_WR0_R4 ) )
 4425.                   $rst_WR0_R11 = ( rstpar2(1 + $I_L4312_40, 1, 2) * 1.0/$gamma_WR0_R1 ) * log( ( ( 1.0 + ( $gamma_WR0_R1 * 1.0/$avflux_WR0_R9 ) * $ekat_WR0_R8 ) * 1.0/( 1.0 + ( $gamma_WR0_R1 * 1.0/$avflux_WR0_R9 ) ) ) )
 4444.                   $rst_WR0_R11 = 1.0/( ( ( $rst_WR0_R11 + -log( ( ( ( $gamma_WR0_R1 * 1.0/$avflux_WR0_R9 ) + 1.0/$ekat_WR0_R8 ) * 1.0/( 1.0 + ( $gamma_WR0_R1 * 1.0/$avflux_WR0_R9 ) ) ) ) ) * 1.0/( $zk_WR0_R7 * rstpar2(1 + $I_L4312_40, 1, 3) ) ) * green2(1 + $I_L4312_40, 1) )
 4444.                   rst(1 + $I_L4312_40, 1) = $rst_WR0_R11
 4444.                endif
 4444.             endif
 4447.             $I_L4312_40 = 1 + $I_L4312_40
 4446.             if ( $I_L4312_40 >= nmax ) exit
 4446.          enddo
 4449.          $I_L4449_42 = 0
 4449. !dir$ ivdep
 4449.          do
 4450.             rst(1 + $I_L4449_42, 2) = 100000.0
 4451.             $I_L4449_42 = 1 + $I_L4449_42
 4449.             if ( $I_L4449_42 >= nmax ) exit
 4449.          enddo
 4449.       endif
 4208.       _free( t$515 )
 4453.       return
 4453.       end
 4453.       
 4461.       
 4461.       subroutine raduse( radt, par, pd, radfac, closs, gloss, thermk, p1f, p2f, radn, vcover, nmax, ncols )
 4461.       t$43 = ncols
 4495.       t$551 = _zla( 0, ncols )
 4461.       t$552 = _zla( 0, ncols )
 4461.       t$553 = 2 * _zla( 0, ncols )
 4461.       t$554 = 2 * _zla( 0, ncols )
 4461.       t$555 = 6 * _zla( 0, ncols )
 4461.       t$556 = 12 * _zla( 0, ncols )
 4461.       t$557 = 3 * _zla( 0, ncols )
 4461.       t$558 = 6 * _zla( 0, ncols )
 4506.       t$561 = 8 * _zla( 0, ncols )
 4507.       t$562 = 8 * _zla( 0, ncols )
 4507.       t$564 = 16 * _zla( 0, ncols )
 4461.       t$559 = int( _alloc( 16 * _zla( 0, ncols ) ), 8 )
 4506.       t$560 = t$559
 4507.       t$563 = t$559 + 8 * _zla( 0, ncols )
 4514.       if ( nmax > 0 ) then
 4514.          $I_L4514_36 = 0
 4514. !dir$ ivdep
 4514.          do
 4515.             radt(1 + $I_L4514_36, 1) = 0.0
 4516.             radt(1 + $I_L4514_36, 2) = 0.0
 4517.             $I_L4514_36 = 1 + $I_L4514_36
 4514.             if ( $I_L4514_36 >= nmax ) exit
 4514.          enddo
 4528.          $I_L4528_46 = 0
 4528.          do
 4529.             $I_L4529_44 = 0
 4529.             do
 4530.                $I_L4530_42 = 0
 4530. !dir$ blocking_size( 0, 0 )
 4530.                do
 4531.                   $I_L4531_38 = 0
 4531. !dir$ ivdep
 4531. !dir$ blocking_size( 0, 0 )
 4531.                   do
 4532.                      radt(1 + $I_L4531_38, 1 + $I_L4528_46) = radt(1 + $I_L4531_38, 1 + $I_L4528_46) + radfac(1 + $I_L4531_38, 1 + $I_L4528_46, 1 + $I_L4529_44, 1 + $I_L4530_42) * radn(1 + $I_L4531_38, 1 + $I_L4529_44, 1 + $I_L4530_42)
 4533.                      $I_L4531_38 = 1 + $I_L4531_38
 4531.                      if ( $I_L4531_38 >= nmax ) exit
 4531.                   enddo
 4534.                   $I_L4530_42 = 1 + $I_L4530_42
 4533.                   if ( $I_L4530_42 >= 2 ) exit
 4533.                enddo
 4535.                $I_L4529_44 = 1 + $I_L4529_44
 4534.                if ( $I_L4529_44 >= 2 ) exit
 4534.             enddo
 4536.             $I_L4528_46 = 1 + $I_L4528_46
 4535.             if ( $I_L4528_46 >= 2 ) exit
 4535.          enddo
 4541.          $I_L4541_40 = 0
 4541. !dir$ ivdep
 4541.          do
 4542.             radt(1 + $I_L4541_40, 1) = radt(1 + $I_L4541_40, 1) + radn(1 + $I_L4541_40, 3, 2) * vcover(1 + $I_L4541_40, 1) * ( 1.0 + -thermk(1 + $I_L4541_40) ) + -closs(1 + $I_L4541_40)
 4543.             radt(1 + $I_L4541_40, 2) = radt(1 + $I_L4541_40, 2) + radn(1 + $I_L4541_40, 3, 2) * ( 1.0 + -( vcover(1 + $I_L4541_40, 1) * ( 1.0 + -thermk(1 + $I_L4541_40) ) ) ) + -gloss(1 + $I_L4541_40)
 4544.             $par_WR0_R0 = radn(1 + $I_L4541_40, 1, 1) + radn(1 + $I_L4541_40, 1, 2) + 1.0e-3
 4545.             pd(1 + $I_L4541_40, 1) = ( ( 1.0e-3 + radn(1 + $I_L4541_40, 1, 1) ) * 1.0/$par_WR0_R0 )
 4546.             $p1_WR0_R1 = 1.0e-3 + p1f(1 + $I_L4541_40) * radn(1 + $I_L4541_40, 1, 1)
 4547.             $p2_WR0_R2 = p2f(1 + $I_L4541_40) * radn(1 + $I_L4541_40, 1, 2)
 4549.             $par_WR0_R0 = max( 9.9999999999999995e-7, $par_WR0_R0 )
 4549.             par(1 + $I_L4541_40, 1) = $par_WR0_R0
 4550.             par(1 + $I_L4541_40, 2) = ( max( 9.9999999999999995e-7, ( $p1_WR0_R1 + $p2_WR0_R2 ) ) )
 4551.             pd(1 + $I_L4541_40, 2) = ( $p1_WR0_R1 * 1.0/( max( 9.9999999999999995e-7, ( $p1_WR0_R1 + $p2_WR0_R2 ) ) ) )
 4552.             $I_L4541_40 = 1 + $I_L4541_40
 4541.             if ( $I_L4541_40 >= nmax ) exit
 4541.          enddo
 4541.       endif
 4461.       _free( t$559 )
 4553.       return
 4553.       end
 4553.       
 4562.       
 4562.       subroutine root( phroot, phsoil, w, itype, nmax, ncols )
 4562.       t$47 = ncols
 4612.       t$565 = _zla( 0, ncols )
 4562.       t$566 = _zla( 0, ncols )
 4562.       t$567 = 2 * _zla( 0, ncols )
 4562.       t$568 = 3 * _zla( 0, ncols )
 4616.       t$571 = 24 * _zla( 0, ncols )
 4562.       t$569 = int( _alloc( 24 * _zla( 0, ncols ) ), 8 )
 4616.       t$570 = t$569
 4621.       if ( nmax > 0 ) then
 4621.          $I_L4621_26 = 0
 4621. !dir$ ivdep
 4621.          do
 4620.             $SCA_itype_I4 = itype(1 + $I_L4621_26)
 4620.             $SCA_bee_I5 = (bee%base_addr)($SCA_itype_I4, 0)
 4620.             $SCA_phsat_I6 = (phsat%base_addr)($SCA_itype_I4, 0)
 4626.             $www_WR0_R0 = max( 1.0000000000000001e-1, w(1 + $I_L4621_26, 1) )
 4632.             phsoil(1 + $I_L4621_26, 1) = $SCA_phsat_I6 * _expn( -( $SCA_bee_I5 * log( $www_WR0_R0 ) ) )
 4626.             $www_WR0_R1 = max( 1.0000000000000001e-1, w(1 + $I_L4621_26, 2) )
 4632.             phsoil(1 + $I_L4621_26, 2) = $SCA_phsat_I6 * _expn( -( $SCA_bee_I5 * log( $www_WR0_R1 ) ) )
 4626.             $www_WR0_R2 = max( 1.0000000000000001e-1, w(1 + $I_L4621_26, 3) )
 4632.             phsoil(1 + $I_L4621_26, 3) = $SCA_phsat_I6 * _expn( -( $SCA_bee_I5 * log( $www_WR0_R2 ) ) )
 4634.             $I_L4621_26 = 1 + $I_L4621_26
 4634.             if ( $I_L4621_26 >= nmax ) exit
 4634.          enddo
 4640.          $I_L4640_28 = 0
 4640. !dir$ ivdep
 4640.          do
 4641.             phroot(1 + $I_L4640_28, 1) = -1.0e-2 + phsoil(1 + $I_L4640_28, 1)
 4646.             $I_L4640_28 = 1 + $I_L4640_28
 4644.             if ( $I_L4640_28 >= nmax ) exit
 4644.          enddo
 4642.          $I_L4642_34 = 0
 4642. !dir$ blocking_size( 0, 0 )
 4642.          do
 4640.             $I_L4640_30 = 0
 4640. !dir$ ivdep
 4640. !dir$ blocking_size( 0, 0 )
 4640.             do
 4643.                phroot(1 + $I_L4640_30, 1) = max( phroot(1 + $I_L4640_30, 1), phsoil(1 + $I_L4640_30, 2 + $I_L4642_34) )
 4646.                $I_L4640_30 = 1 + $I_L4640_30
 4642.                if ( $I_L4640_30 >= nmax ) exit
 4642.             enddo
 4644.             $I_L4642_34 = 1 + $I_L4642_34
 4644.             if ( $I_L4642_34 >= 2 ) exit
 4644.          enddo
 4640.          $I_L4640_32 = 0
 4640. !dir$ ivdep
 4640.          do
 4645.             phroot(1 + $I_L4640_32, 2) = phroot(1 + $I_L4640_32, 1)
 4646.             $I_L4640_32 = 1 + $I_L4640_32
 4644.             if ( $I_L4640_32 >= nmax ) exit
 4644.          enddo
 4644.       endif
 4562.       _free( t$569 )
 4648.       return
 4648.       end
 4648.       
 4656.       
 4656.       subroutine pbl( jstneu, hgdtg, hgdtc, hgdtm, hcdtg, hcdtc, hcdtm, egdtg, egdtc, egdqm, ecdtg, ecdtc, ecdqm, deadtg, deadtc, deadqm, icheck, ect, eci, egt, egi, egs, ec, eg, hc, hg, ecidif, egidif, ecmass, egmass, etmass, hflux, chf, shf, roff, bps, psb, dzm, em, gmt, gmq, cu, cuni, ctni, ustar, cosz, rhoair, psy, rcp, wc, wg, fc, fg, hr, vcover, z0x, d, rdc, rbc, z0, qm, tm, um, vm, psur, ppc, ppl, radn, ra, rb, rd, rc, rg, tcta, tgta, ta, ea, etc, etg, btc, btg, u2, radt, par, pd, rst, rsoil, phroot, hrr, phsoil, cc, cg, satcap, snow, dtc, dtg, dtm, dqm, stm, extk, radfac, closs, gloss, thermk, p1f, p2f, tc, tg, td, capac, w, itype, dtc3x, mon, nmax, ncols, zlt2, green2, chil2, rstpar2, topt2, tll2, tu2, defac2, ph12, ph22 )
 4656.       t$50 = ncols
 4989.       t$572 = _zla( 0, ncols )
 4656.       t$573 = _zla( 0, ncols )
 4656.       t$574 = 3 * _zla( 0, ncols )
 4656.       t$575 = 2 * _zla( 0, ncols )
 4656.       t$576 = 3 * _zla( 0, ncols )
 4656.       t$577 = 6 * _zla( 0, ncols )
 4656.       t$578 = 2 * _zla( 0, ncols )
 4656.       t$579 = 6 * _zla( 0, ncols )
 4656.       t$580 = 12 * _zla( 0, ncols )
 5007.       call root( phroot(1, 1), phsoil(1, 1), w(1, 1), itype(1), nmax, ncols )
 5009.       call raduse( radt(1, 1), par(1, 1), pd(1, 1), radfac(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), radn(1, 1, 1), vcover(1, 1), nmax, ncols )
 5012.       call stomat( cosz(1), par(1, 1), pd(1, 1), rst(1, 1), extk(1, 1, 1, 1), vcover(1, 1), itype(1), nmax, ncols, zlt2(1, 1), green2(1, 1), chil2(1, 1), rstpar2(1, 1, 1) )
 5015.       call interc( roff(1), cc(1), cg(1), satcap(1, 1), snow(1, 1), extk(1, 1, 1, 1), tc(1), tg(1), td(1), capac(1, 1), w(1, 1), tm(1), ppc(1), ppl(1), vcover(1, 1), itype(1), dtc3x, nmax, ncols, zlt2(1, 1) )
 5022.       call sflxes( hgdtg(1), hgdtc(1), hgdtm(1), hcdtg(1), hcdtc(1), hcdtm(1), egdtg(1), egdtc(1), egdqm(1), ecdtg(1), ecdtc(1), ecdqm(1), deadtg(1), deadtc(1), deadqm(1), icheck(1), bps(1), psb(1), dzm(1), em(1), gmt(1, 1), gmq(1, 1), cu(1), cuni(1), ctni(1), ustar(1), rhoair(1), psy(1), rcp(1), wc(1), wg(1), fc(1), fg(1), hr(1), ect(1), eci(1), egt(1), egi(1), egs(1), ec(1), eg(1), hc(1), hg(1), ecidif(1), egidif(1), ecmass(1), egmass(1), etmass(1), hflux(1), chf(1), shf(1), ra(1), rb(1), rd(1), rc(1), rg(1), tcta(1), tgta(1), ta(1), ea(1), etc(1), etg(1), btc(1), btg(1), u2(1), radt(1, 1), rst(1, 1), rsoil(1), hrr(1), phsoil(1, 1), cc(1), cg(1), satcap(1, 1), dtc(1), dtg(1), dtm(1), dqm(1), stm(1, 1), thermk(1), tc(1), tg(1), td(1), capac(1, 1), w(1, 1), qm(1), tm(1), um(1), vm(1), psur(1), vcover(1, 1), z0x(1), d(1), rdc(1), rbc(1), z0(1), itype(1), dtc3x, mon(1), nmax, jstneu, ncols, zlt2(1, 1), topt2(1, 1), tll2(1, 1), tu2(1, 1), defac2(1, 1), ph12(1, 1), ph22(1, 1) )
 5035.       return
 5035.       end
 5035.       
 5042.       
 5042.       subroutine snowm( chf, shf, fluxef, roff, cc, cg, snow, dtc, dtg, tc, tg, td, capac, w, itype, dtc3x, nmax, ncols )
 5042.       t$55 = ncols
 5107.       t$581 = _zla( 0, ncols )
 5042.       t$582 = _zla( 0, ncols )
 5042.       t$583 = 2 * _zla( 0, ncols )
 5042.       t$584 = 3 * _zla( 0, ncols )
 5112.       t$587 = 8 * _zla( 0, ncols )
 5125.       t$588 = 8 * _zla( 0, ncols )
 5125.       t$590 = 16 * _zla( 0, ncols )
 5118.       t$591 = 16 * _zla( 0, ncols )
 5118.       t$593 = 24 * _zla( 0, ncols )
 5123.       t$594 = 24 * _zla( 0, ncols )
 5123.       t$596 = 32 * _zla( 0, ncols )
 5126.       t$597 = 32 * _zla( 0, ncols )
 5126.       t$599 = 40 * _zla( 0, ncols )
 5127.       t$600 = 40 * _zla( 0, ncols )
 5127.       t$602 = 48 * _zla( 0, ncols )
 5114.       t$603 = 48 * _zla( 0, ncols )
 5114.       t$605 = 56 * _zla( 0, ncols )
 5121.       t$606 = 56 * _zla( 0, ncols )
 5121.       t$608 = 64 * _zla( 0, ncols )
 5115.       t$609 = 64 * _zla( 0, ncols )
 5115.       t$611 = 72 * _zla( 0, ncols )
 5120.       t$612 = 72 * _zla( 0, ncols )
 5120.       t$614 = 80 * _zla( 0, ncols )
 5122.       t$615 = 80 * _zla( 0, ncols )
 5122.       t$617 = 88 * _zla( 0, ncols )
 5124.       t$618 = 88 * _zla( 0, ncols )
 5124.       t$620 = 96 * _zla( 0, ncols )
 5113.       t$621 = 96 * _zla( 0, ncols )
 5113.       t$623 = 104 * _zla( 0, ncols )
 5116.       t$624 = 104 * _zla( 0, ncols )
 5116.       t$626 = 112 * _zla( 0, ncols )
 5117.       t$627 = 112 * _zla( 0, ncols )
 5117.       t$629 = 120 * _zla( 0, ncols )
 5119.       t$630 = 120 * _zla( 0, ncols )
 5119.       t$632 = 128 * _zla( 0, ncols )
 5042.       t$585 = int( _alloc( 128 * _zla( 0, ncols ) ), 8 )
 5112.       t$586 = t$585
 5125.       t$589 = t$585 + 8 * _zla( 0, ncols )
 5118.       t$592 = t$585 + 16 * _zla( 0, ncols )
 5123.       t$595 = t$585 + 24 * _zla( 0, ncols )
 5126.       t$598 = t$585 + 32 * _zla( 0, ncols )
 5127.       t$601 = t$585 + 40 * _zla( 0, ncols )
 5114.       t$604 = t$585 + 48 * _zla( 0, ncols )
 5121.       t$607 = t$585 + 56 * _zla( 0, ncols )
 5115.       t$610 = t$585 + 64 * _zla( 0, ncols )
 5120.       t$613 = t$585 + 72 * _zla( 0, ncols )
 5122.       t$616 = t$585 + 80 * _zla( 0, ncols )
 5124.       t$619 = t$585 + 88 * _zla( 0, ncols )
 5113.       t$622 = t$585 + 96 * _zla( 0, ncols )
 5116.       t$625 = t$585 + 104 * _zla( 0, ncols )
 5117.       t$628 = t$585 + 112 * _zla( 0, ncols )
 5119.       t$631 = t$585 + 120 * _zla( 0, ncols )
 5135.       $F_A33 = ncols
 5135.       if ( ncols > 0 ) then
 5135.          $I_L5135_70 = 0
 5135. !dir$ ivdep
 5135.          do
 5135.             cct(1 + $I_L5135_70) = 0.0
 5135.             $I_L5135_70 = 1 + $I_L5135_70
 5135.             if ( $I_L5135_70 >= $F_A33 ) exit
 5135.          enddo
 5135.       endif
 5136.       $dtc3xi_S3 = 1.0/dtc3x
 5138.       $I_L5138_72 = 0
 5138.       do
 5139.          if ( $I_L5138_72 == 0 ) then
 5141.             if ( nmax > 0 ) then
 5141.                $I_L5141_54 = 0
 5141. !dir$ ivdep
 5141.                do
 5142.                   cct(1 + $I_L5141_54) = cc(1 + $I_L5141_54)
 5143.                   ts(1 + $I_L5141_54) = tc(1 + $I_L5141_54)
 5144.                   dts(1 + $I_L5141_54) = dtc(1 + $I_L5141_54)
 5145.                   flux(1 + $I_L5141_54) = chf(1 + $I_L5141_54)
 5146.                   $I_L5141_54 = 1 + $I_L5141_54
 5141.                   if ( $I_L5141_54 >= nmax ) exit
 5141.                enddo
 5141.             endif
 5148.          else if ( nmax > 0 ) then
 5150.             $I_L5150_56 = 0
 5150. !dir$ ivdep
 5150.             do
 5151.                $cct_WR0_R0 = cg(1 + $I_L5150_56)
 5151.                cct(1 + $I_L5150_56) = $cct_WR0_R0
 5152.                ts(1 + $I_L5150_56) = tg(1 + $I_L5150_56)
 5153.                dts(1 + $I_L5150_56) = dtg(1 + $I_L5150_56)
 5154.                flux(1 + $I_L5150_56) = $cct_WR0_R0 * dtg(1 + $I_L5150_56) * $dtc3xi_S3
 5155.                $I_L5150_56 = 1 + $I_L5150_56
 5150.                if ( $I_L5150_56 >= nmax ) exit
 5150.             enddo
 5150.          endif
 5159.          if ( nmax > 0 ) then
 5159.             $I_L5159_58 = 0
 5159. !dir$ ivdep
 5159.             do
 5160.                tta(1 + $I_L5159_58) = ts(1 + $I_L5159_58) + -dts(1 + $I_L5159_58)
 5161.                ttb(1 + $I_L5159_58) = ts(1 + $I_L5159_58)
 5162.                $I_L5159_58 = 1 + $I_L5159_58
 5159.                if ( $I_L5159_58 >= nmax ) exit
 5159.             enddo
 5164.             $I_L5164_60 = 0
 5164. !dir$ ivdep
 5164.             do
 5165.                if ( tta(1 + $I_L5164_60) <= 273.16000000000003 ) then
 5166.                   snow(1 + $I_L5164_60, 1 + $I_L5138_72) = capac(1 + $I_L5164_60, 1 + $I_L5138_72)
 5167.                   capac(1 + $I_L5164_60, 1 + $I_L5138_72) = 0.0
 5167.                else
 5169.                   snow(1 + $I_L5164_60, 1 + $I_L5138_72) = 0.0
 5169.                endif
 5171.                $I_L5164_60 = 1 + $I_L5164_60
 5170.                if ( $I_L5164_60 >= nmax ) exit
 5170.             enddo
 5173.             $I_L5173_62 = 0
 5173. !dir$ ivdep
 5173.             do
 5174.                work(1 + $I_L5173_62) = ( -273.16000000000003 + tta(1 + $I_L5173_62) ) * ( -273.16000000000003 + ttb(1 + $I_L5173_62) )
 5175.                $I_L5173_62 = 1 + $I_L5173_62
 5173.                if ( $I_L5173_62 >= nmax ) exit
 5173.             enddo
 5177.             $I_L5177_64 = 0
 5177. !dir$ ivdep
 5177.             do
 5178.                if ( work(1 + $I_L5177_64) < 0.0 ) then
 5179.                   $ntyp_S8 = itype(1 + $I_L5177_64)
 5180.                   $dtf_WR0_R1 = 273.16000000000003 + -tta(1 + $I_L5177_64)
 5181.                   $dtime1_WR0_R2 = ( cct(1 + $I_L5177_64) * $dtf_WR0_R1 * 1.0/flux(1 + $I_L5177_64) )
 5182.                   $hf_WR0_R3 = flux(1 + $I_L5177_64) * ( dtc3x + -$dtime1_WR0_R2 )
 5183.                   $spwet_WR0_R5 = min( 5.0, snow(1 + $I_L5177_64, 1 + $I_L5138_72) )
 5184.                   if ( dts(1 + $I_L5177_64) <= 0.0 ) then
 5185.                      fcap(1 + $I_L5177_64) = -333624200.0 * capac(1 + $I_L5177_64, 1 + $I_L5138_72)
 5185.                   else
 5187.                      fcap(1 + $I_L5177_64) = 333624200.0 * $spwet_WR0_R5
 5187.                   endif
 5189.                   $LD_SPLT_P1 = fcap(1 + $I_L5177_64)
 5189.                   $dtime2_WR0_R6 = ( $LD_SPLT_P1 * 1.0/flux(1 + $I_L5177_64) )
 5190.                   $dtf2_WR0_R7 = ( flux(1 + $I_L5177_64) * ( dtc3x + -$dtime1_WR0_R2 + -$dtime2_WR0_R6 ) * 1.0/cct(1 + $I_L5177_64) )
 5191.                   $tn_WR0_R8 = 273.16000000000003 + $dtf2_WR0_R7
 5192.                   if ( abs( $hf_WR0_R3 ) < abs( $LD_SPLT_P1 ) ) then
 5193.                      ts(1 + $I_L5177_64) = 273.06
 5198.                      change(1 + $I_L5177_64) = $hf_WR0_R3
 5198.                   else
 5195.                      ts(1 + $I_L5177_64) = $tn_WR0_R8
 5200.                      change(1 + $I_L5177_64) = $LD_SPLT_P1
 5200.                   endif
 5202.                   $LD_SPLT_P2 = change(1 + $I_L5177_64)
 5202.                   change(1 + $I_L5177_64) = 2.9973844823007445e-9 * $LD_SPLT_P2
 5203.                   $snow_WR0_R4 = snow(1 + $I_L5177_64, 1 + $I_L5138_72) + -( 2.9973844823007445e-9 * $LD_SPLT_P2 )
 5203.                   snow(1 + $I_L5177_64, 1 + $I_L5138_72) = $snow_WR0_R4
 5204.                   capac(1 + $I_L5177_64, 1 + $I_L5138_72) = capac(1 + $I_L5177_64, 1 + $I_L5138_72) + ( 2.9973844823007445e-9 * $LD_SPLT_P2 )
 5205.                   if ( $snow_WR0_R4 < 1.0e-10 ) then
 5205.                      snow(1 + $I_L5177_64, 1 + $I_L5138_72) = 0.0
 5205.                   endif
 5206.                   if ( $I_L5138_72 == 0 ) then
 5207.                      tc(1 + $I_L5177_64) = ts(1 + $I_L5177_64)
 5207.                   else
 5209.                      tg(1 + $I_L5177_64) = ts(1 + $I_L5177_64)
 5209.                   endif
 5211.                   if ( -1 + $I_L5138_72 == 0 ) then
 5212.                      if ( td(1 + $I_L5177_64) > 273.16000000000003 ) then
 5213.                         $LD_SPLT_P3 = capac(1 + $I_L5177_64, 2)
 5213.                         w(1 + $I_L5177_64, 1) = w(1 + $I_L5177_64, 1) + ( $LD_SPLT_P3 * 1.0/( (poros%base_addr)($ntyp_S8, 0) * (zdepth%base_addr)($ntyp_S8, 1, 0) ) )
 5213.                      else
 5216.                         $LD_SPLT_P4 = capac(1 + $I_L5177_64, 2)
 5216.                         roff(1 + $I_L5177_64) = roff(1 + $I_L5177_64) + $LD_SPLT_P4
 5216.                      endif
 5218.                      capac(1 + $I_L5177_64, 2) = 0.0
 5218.                   endif
 5218.                endif
 5221.                $I_L5177_64 = 1 + $I_L5177_64
 5220.                if ( $I_L5177_64 >= nmax ) exit
 5220.             enddo
 5222.             $I_L5222_66 = 0
 5222. !dir$ ivdep
 5222.             do
 5223.                capac(1 + $I_L5222_66, 1 + $I_L5138_72) = capac(1 + $I_L5222_66, 1 + $I_L5138_72) + snow(1 + $I_L5222_66, 1 + $I_L5138_72)
 5224.                $I_L5222_66 = 1 + $I_L5222_66
 5222.                if ( $I_L5222_66 >= nmax ) exit
 5222.             enddo
 5222.          endif
 5225.          $I_L5138_72 = 1 + $I_L5138_72
 5224.          if ( $I_L5138_72 >= 2 ) exit
 5224.       enddo
 5229.       if ( nmax > 0 ) then
 5229.          $I_L5229_68 = 0
 5229. !dir$ ivdep
 5229.          do
 5230.             fluxef(1 + $I_L5229_68) = shf(1 + $I_L5229_68) + -( cg(1 + $I_L5229_68) * dtg(1 + $I_L5229_68) * $dtc3xi_S3 )
 5231.             $I_L5229_68 = 1 + $I_L5229_68
 5229.             if ( $I_L5229_68 >= nmax ) exit
 5229.          enddo
 5229.       endif
 5042.       _free( t$585 )
 5233.       return
 5233.       end
 5233.       
 5253.       
 5253.       subroutine fysiks( vcover, z0x, d, rdc, rbc, z0, ndt, latitu, bps, psb, dzm, em, gmt, gmq, gmu, cu, cuni, ctni, ustar, cosz, sinclt, rhoair, psy, rcp, wc, wg, fc, fg, hr, ect, eci, egt, egi, egs, ec, eg, hc, hg, ecidif, egidif, ecmass, egmass, etmass, hflux, chf, shf, fluxef, roff, drag, ra, rb, rd, rc, rg, tcta, tgta, ta, ea, etc, etg, btc, btg, u2, radt, par, pd, rst, rsoil, phroot, hrr, phsoil, cc, cg, satcap, snow, dtc, dtg, dtm, dqm, stm, extk, radfac, closs, gloss, thermk, p1f, p2f, tc, tg, td, capac, w, qm, tm, um, vm, psur, ppc, ppl, radn, itype, dtc3x, mon, nmax, ncols, zlt2, green2, chil2, rstpar2, topt2, tll2, tu2, defac2, ph12, ph22 )
 5253.       t$57 = ncols
 5612.       t$633 = _zla( 0, ncols )
 5253.       t$634 = _zla( 0, ncols )
 5253.       t$635 = 2 * _zla( 0, ncols )
 5253.       t$636 = 3 * _zla( 0, ncols )
 5253.       t$637 = 4 * _zla( 0, ncols )
 5253.       t$638 = 2 * _zla( 0, ncols )
 5253.       t$639 = 6 * _zla( 0, ncols )
 5253.       t$640 = 12 * _zla( 0, ncols )
 5253.       t$641 = 3 * _zla( 0, ncols )
 5253.       t$642 = 6 * _zla( 0, ncols )
 5652.       t$645 = 8 * _zla( 0, ncols )
 5648.       t$646 = 8 * _zla( 0, ncols )
 5648.       t$648 = 16 * _zla( 0, ncols )
 5665.       t$649 = 16 * _zla( 0, ncols )
 5665.       t$651 = 24 * _zla( 0, ncols )
 5645.       t$652 = 24 * _zla( 0, ncols )
 5645.       t$654 = 32 * _zla( 0, ncols )
 5644.       t$655 = 32 * _zla( 0, ncols )
 5644.       t$657 = 40 * _zla( 0, ncols )
 5643.       t$658 = 40 * _zla( 0, ncols )
 5643.       t$660 = 48 * _zla( 0, ncols )
 5653.       t$661 = 48 * _zla( 0, ncols )
 5653.       t$663 = 56 * _zla( 0, ncols )
 5650.       t$664 = 56 * _zla( 0, ncols )
 5650.       t$666 = 64 * _zla( 0, ncols )
 5642.       t$667 = 64 * _zla( 0, ncols )
 5642.       t$669 = 72 * _zla( 0, ncols )
 5641.       t$670 = 72 * _zla( 0, ncols )
 5641.       t$672 = 80 * _zla( 0, ncols )
 5640.       t$673 = 80 * _zla( 0, ncols )
 5640.       t$675 = 88 * _zla( 0, ncols )
 5647.       t$676 = 88 * _zla( 0, ncols )
 5647.       t$678 = 112 * _zla( 0, ncols )
 5651.       t$679 = 112 * _zla( 0, ncols )
 5651.       t$681 = 120 * _zla( 0, ncols )
 5639.       t$682 = 120 * _zla( 0, ncols )
 5639.       t$684 = 128 * _zla( 0, ncols )
 5638.       t$685 = 128 * _zla( 0, ncols )
 5638.       t$687 = 136 * _zla( 0, ncols )
 5637.       t$688 = 136 * _zla( 0, ncols )
 5637.       t$690 = 144 * _zla( 0, ncols )
 5664.       t$691 = 144 * _zla( 0, ncols )
 5664.       t$693 = 152 * _zla( 0, ncols )
 5666.       t$694 = 152 * _zla( 0, ncols )
 5666.       t$696 = 160 * _zla( 0, ncols )
 5635.       t$697 = 160 * _zla( 0, ncols )
 5635.       t$699 = 168 * _zla( 0, ncols )
 5634.       t$700 = 168 * _zla( 0, ncols )
 5634.       t$702 = 176 * _zla( 0, ncols )
 5636.       t$703 = 176 * _zla( 0, ncols )
 5636.       t$705 = 184 * _zla( 0, ncols )
 5632.       t$706 = 184 * _zla( 0, ncols )
 5632.       t$708 = 192 * _zla( 0, ncols )
 5631.       t$709 = 192 * _zla( 0, ncols )
 5631.       t$711 = 200 * _zla( 0, ncols )
 5633.       t$712 = 200 * _zla( 0, ncols )
 5633.       t$714 = 208 * _zla( 0, ncols )
 5626.       t$716 = 212 * _zla( 0, ncols )
 5649.       t$717 = 8 * ( ( 7 + 212 * _zla( 0, ncols ) ) / 8 )
 5649.       t$719 = 8 * _zla( 0, ncols ) + 8 * ( ( 7 + 212 * _zla( 0, ncols ) ) / 8 )
 5663.       t$720 = 8 * _zla( 0, ncols ) + 8 * ( ( 7 + 212 * _zla( 0, ncols ) ) / 8 )
 5663.       t$722 = 16 * _zla( 0, ncols ) + 8 * ( ( 7 + 212 * _zla( 0, ncols ) ) / 8 )
 5253.       t$643 = int( _alloc( 16 * _zla( 0, ncols ) + 8 * ( ( 7 + 212 * _zla( 0, ncols ) ) / 8 ) ), 8 )
 5652.       t$644 = t$643
 5648.       t$647 = t$643 + 8 * _zla( 0, ncols )
 5665.       t$650 = t$643 + 16 * _zla( 0, ncols )
 5645.       t$653 = t$643 + 24 * _zla( 0, ncols )
 5644.       t$656 = t$643 + 32 * _zla( 0, ncols )
 5643.       t$659 = t$643 + 40 * _zla( 0, ncols )
 5653.       t$662 = t$643 + 48 * _zla( 0, ncols )
 5650.       t$665 = t$643 + 56 * _zla( 0, ncols )
 5642.       t$668 = t$643 + 64 * _zla( 0, ncols )
 5641.       t$671 = t$643 + 72 * _zla( 0, ncols )
 5640.       t$674 = t$643 + 80 * _zla( 0, ncols )
 5647.       t$677 = t$643 + 88 * _zla( 0, ncols )
 5651.       t$680 = t$643 + 112 * _zla( 0, ncols )
 5639.       t$683 = t$643 + 120 * _zla( 0, ncols )
 5638.       t$686 = t$643 + 128 * _zla( 0, ncols )
 5637.       t$689 = t$643 + 136 * _zla( 0, ncols )
 5664.       t$692 = t$643 + 144 * _zla( 0, ncols )
 5666.       t$695 = t$643 + 152 * _zla( 0, ncols )
 5635.       t$698 = t$643 + 160 * _zla( 0, ncols )
 5634.       t$701 = t$643 + 168 * _zla( 0, ncols )
 5636.       t$704 = t$643 + 176 * _zla( 0, ncols )
 5632.       t$707 = t$643 + 184 * _zla( 0, ncols )
 5631.       t$710 = t$643 + 192 * _zla( 0, ncols )
 5633.       t$713 = t$643 + 200 * _zla( 0, ncols )
 5626.       t$715 = t$643 + 208 * _zla( 0, ncols )
 5649.       t$718 = t$643 + 8 * ( ( 7 + 212 * _zla( 0, ncols ) ) / 8 )
 5663.       t$721 = t$643 + 8 * _zla( 0, ncols ) + 8 * ( ( 7 + 212 * _zla( 0, ncols ) ) / 8 )
 5671.       if ( nmax > 0 ) then
 5671.          $I_L5671_130 = 0
 5671. !dir$ ivdep
 5671.          do
 5676.             totwb(1 + $I_L5671_130) = w(1 + $I_L5671_130, 1) * (poros%base_addr)(itype(1 + $I_L5671_130), 0) * (zdepth%base_addr)(itype(1 + $I_L5671_130), 1, 0) + w(1 + $I_L5671_130, 2) * (poros%base_addr)(itype(1 + $I_L5671_130), 0) * (zdepth%base_addr)(itype(1 + $I_L5671_130), 2, 0) + w(1 + $I_L5671_130, 3) * (poros%base_addr)(itype(1 + $I_L5671_130), 0) * (zdepth%base_addr)(itype(1 + $I_L5671_130), 3, 0) + capac(1 + $I_L5671_130, 1) + capac(1 + $I_L5671_130, 2)
 5680.             $I_L5671_130 = 1 + $I_L5671_130
 5671.             if ( $I_L5671_130 >= nmax ) exit
 5671.          enddo
 5671.       endif
 5684.       call pbl( jstneu, hgdtg(1), hgdtc(1), hgdtm(1), hcdtg(1), hcdtc(1), hcdtm(1), egdtg(1), egdtc(1), egdqm(1), ecdtg(1), ecdtc(1), ecdqm(1), deadtg(1), deadtc(1), deadqm(1), icheck(1), ect(1), eci(1), egt(1), egi(1), egs(1), ec(1), eg(1), hc(1), hg(1), ecidif(1), egidif(1), ecmass(1), egmass(1), etmass(1), hflux(1), chf(1), shf(1), roff(1), bps(1), psb(1), dzm(1), em(1), gmt(1, 1), gmq(1, 1), cu(1), cuni(1), ctni(1), ustar(1), cosz(1), rhoair(1), psy(1), rcp(1), wc(1), wg(1), fc(1), fg(1), hr(1), vcover(1, 1), z0x(1), d(1), rdc(1), rbc(1), z0(1), qm(1), tm(1), um(1), vm(1), psur(1), ppc(1), ppl(1), radn(1, 1, 1), ra(1), rb(1), rd(1), rc(1), rg(1), tcta(1), tgta(1), ta(1), ea(1), etc(1), etg(1), btc(1), btg(1), u2(1), radt(1, 1), par(1, 1), pd(1, 1), rst(1, 1), rsoil(1), phroot(1, 1), hrr(1), phsoil(1, 1), cc(1), cg(1), satcap(1, 1), snow(1, 1), dtc(1), dtg(1), dtm(1), dqm(1), stm(1, 1), extk(1, 1, 1, 1), radfac(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), tc(1), tg(1), td(1), capac(1, 1), w(1, 1), itype(1), dtc3x, mon(1), nmax, ncols, zlt2(1, 1), green2(1, 1), chil2(1, 1), rstpar2(1, 1, 1), topt2(1, 1), tll2(1, 1), tu2(1, 1), defac2(1, 1), ph12(1, 1), ph22(1, 1) )
 5706.       if ( nmax > 0 ) then
 5706.          $I_L5706_132 = 0
 5706. !dir$ ivdep
 5706.          do
 5707.             tc(1 + $I_L5706_132) = tc(1 + $I_L5706_132) + dtc(1 + $I_L5706_132)
 5708.             tg(1 + $I_L5706_132) = tg(1 + $I_L5706_132) + dtg(1 + $I_L5706_132)
 5709.             $I_L5706_132 = 1 + $I_L5706_132
 5706.             if ( $I_L5706_132 >= nmax ) exit
 5706.          enddo
 5713.          $I_L5713_156 = 0
 5713. !dir$ blocking_size( 0, 0 )
 5713.          do
 5714.             $I_L5714_134 = 0
 5714. !dir$ ivdep
 5714. !dir$ blocking_size( 0, 0 )
 5714.             do
 5715.                $ntyp_S4 = itype(1 + $I_L5714_134)
 5716.                if ( capac(1 + $I_L5714_134, 1 + $I_L5713_156) <= 9.9999999999999995e-7 ) then
 5717.                   w(1 + $I_L5714_134, 1) = w(1 + $I_L5714_134, 1) + ( capac(1 + $I_L5714_134, 1 + $I_L5713_156) * 1.0/( (poros%base_addr)($ntyp_S4, 0) * (zdepth%base_addr)($ntyp_S4, 1, 0) ) )
 5718.                   capac(1 + $I_L5714_134, 1 + $I_L5713_156) = 0.0
 5718.                endif
 5720.                $I_L5714_134 = 1 + $I_L5714_134
 5719.                if ( $I_L5714_134 >= nmax ) exit
 5719.             enddo
 5721.             $I_L5713_156 = 1 + $I_L5713_156
 5720.             if ( $I_L5713_156 >= 2 ) exit
 5720.          enddo
 5720.       endif
 5725.       call snowm( chf(1), shf(1), fluxef(1), roff(1), cc(1), cg(1), snow(1, 1), dtc(1), dtg(1), tc(1), tg(1), td(1), capac(1, 1), w(1, 1), itype(1), dtc3x, nmax, ncols )
 5731.       $timcon_S5 = 1.4765516371191563e-2 * dtc3x
 5733.       if ( nmax > 0 ) then
 5733.          $I_L5733_136 = 0
 5733. !dir$ ivdep
 5733.          do
 5734.             td(1 + $I_L5733_136) = td(1 + $I_L5733_136) + ( fluxef(1 + $I_L5733_136) * 1.0/cg(1 + $I_L5733_136) ) * $timcon_S5
 5741.             $ntyp_S8 = itype(1 + $I_L5733_136)
 5742.             w(1 + $I_L5733_136, 1) = w(1 + $I_L5733_136, 1) + -( 1.0/( (poros%base_addr)($ntyp_S8, 0) * (zdepth%base_addr)($ntyp_S8, 1, 0) ) * egs(1 + $I_L5733_136) * 3.9682539682539682e-10 )
 5735.             $I_L5733_136 = 1 + $I_L5733_136
 5733.             if ( $I_L5733_136 >= nmax ) exit
 5733.          enddo
 5733.       endif
 5747.       $I_L5747_162 = 0
 5747.       do
 5748.          if ( $I_L5747_162 == 0 ) then
 5749.             if ( nmax > 0 ) then
 5749.                $I_L5749_138 = 0
 5749. !dir$ ivdep
 5749.                do
 5750.                   absoil(1 + $I_L5749_138) = 3.9682539682539682e-10 * ect(1 + $I_L5749_138)
 5751.                   $I_L5749_138 = 1 + $I_L5749_138
 5749.                   if ( $I_L5749_138 >= nmax ) exit
 5749.                enddo
 5749.             endif
 5752.          else if ( nmax > 0 ) then
 5753.             $I_L5753_140 = 0
 5753. !dir$ ivdep
 5753.             do
 5754.                absoil(1 + $I_L5753_140) = 3.9682539682539682e-10 * egt(1 + $I_L5753_140)
 5755.                $I_L5753_140 = 1 + $I_L5753_140
 5753.                if ( $I_L5753_140 >= nmax ) exit
 5753.             enddo
 5753.          endif
 5757.          if ( nmax > 0 ) then
 5757.             $I_L5757_142 = 0
 5757. !dir$ ivdep
 5757.             do
 5758.                $ntyp_S13 = itype(1 + $I_L5757_142)
 5761.                $totdep_WR0_R2 = (zdepth%base_addr)($ntyp_S13, 1, 0)
 5766.                $SCA_totdep_I15 = $totdep_WR0_R2 + (zdepth%base_addr)($ntyp_S13, 2, 0)
 5767.                $SCA_div_I12 = (rootd%base_addr)($ntyp_S13, 1 + $I_L5747_162, 0)
 5768.                $SCA_dep_I13 = max( 0.0, $SCA_div_I12 + -$SCA_totdep_I15 + (zdepth%base_addr)($ntyp_S13, 2, 0) )
 5770.                $SCA_dep_I13 = min( $SCA_dep_I13, (zdepth%base_addr)($ntyp_S13, 2, 0) )
 5771.                $ef_WR0_R0 = ( $SCA_dep_I13 * 1.0/$SCA_div_I12 )
 5766.                $SCA_totdep_I15 = $SCA_totdep_I15 + (zdepth%base_addr)($ntyp_S13, 3, 0)
 5767.                $SCA_div_I12 = (rootd%base_addr)($ntyp_S13, 1 + $I_L5747_162, 0)
 5768.                $SCA_dep_I13 = max( 0.0, $SCA_div_I12 + -$SCA_totdep_I15 + (zdepth%base_addr)($ntyp_S13, 3, 0) )
 5770.                $SCA_dep_I13 = min( $SCA_dep_I13, (zdepth%base_addr)($ntyp_S13, 3, 0) )
 5776.                $eft_WR0_R3 = max( 9.9999999999999995e-7, ( $ef_WR0_R0 + ( $SCA_dep_I13 * 1.0/$SCA_div_I12 ) ) )
 5777.                $ef_WR0_R0 = ( $ef_WR0_R0 * 1.0/( max( 9.9999999999999995e-7, ( $ef_WR0_R0 + ( $SCA_dep_I13 * 1.0/$SCA_div_I12 ) ) ) ) )
 5777.                ef(1 + $I_L5757_142, 2) = $ef_WR0_R0
 5778.                ef(1 + $I_L5757_142, 3) = ( ( $SCA_dep_I13 * 1.0/$SCA_div_I12 ) * 1.0/$eft_WR0_R3 )
 5762.                $I_L5757_142 = 1 + $I_L5757_142
 5757.                if ( $I_L5757_142 >= nmax ) exit
 5757.             enddo
 5780.             $I_L5780_158 = 0
 5780. !dir$ blocking_size( 0, 0 )
 5780.             do
 5781.                $I_L5781_144 = 0
 5781. !dir$ ivdep
 5781. !dir$ blocking_size( 0, 0 )
 5781.                do
 5782.                   $ntyp_S20 = itype(1 + $I_L5781_144)
 5783.                   w(1 + $I_L5781_144, 2 + $I_L5780_158) = w(1 + $I_L5781_144, 2 + $I_L5780_158) + -( absoil(1 + $I_L5781_144) * ef(1 + $I_L5781_144, 2 + $I_L5780_158) * 1.0/( (poros%base_addr)($ntyp_S20, 0) * (zdepth%base_addr)($ntyp_S20, 2 + $I_L5780_158, 0) ) )
 5785.                   $I_L5781_144 = 1 + $I_L5781_144
 5781.                   if ( $I_L5781_144 >= nmax ) exit
 5781.                enddo
 5786.                $I_L5780_158 = 1 + $I_L5780_158
 5785.                if ( $I_L5780_158 >= 2 ) exit
 5785.             enddo
 5785.          endif
 5787.          $I_L5747_162 = 1 + $I_L5747_162
 5786.          if ( $I_L5747_162 >= 2 ) exit
 5786.       enddo
 5793.       if ( nmax > 0 ) then
 5793.          $SI_L5793_146_G1 = 0
 5793.          do
 5792.             $I_L5792_160 = 0
 5792. !dir$ blocking_size( 0, 0 )
 5792.             do
 5793.                $I_L5793_164 = 0
 5793. !dir$ ivdep
 5793. !dir$ blocking_size( 2048, 2048 )
 5793.                do
 5794.                   if ( w($I_L5793_164 + 2048 * $SI_L5793_146_G1 + 1, 1 + $I_L5792_160) <= 0.0 ) then
 5795.                      $ntyp_S23 = itype($I_L5793_164 + 2048 * $SI_L5793_146_G1 + 1)
 5796.                      w($I_L5793_164 + 2048 * $SI_L5793_146_G1 + 1, 2 + $I_L5792_160) = w($I_L5793_164 + 2048 * $SI_L5793_146_G1 + 1, 2 + $I_L5792_160) + ( w($I_L5793_164 + 2048 * $SI_L5793_146_G1 + 1, 1 + $I_L5792_160) * (zdepth%base_addr)($ntyp_S23, 1 + $I_L5792_160, 0) * 1.0/(zdepth%base_addr)($ntyp_S23, 2 + $I_L5792_160, 0) )
 5798.                      w($I_L5793_164 + 2048 * $SI_L5793_146_G1 + 1, 1 + $I_L5792_160) = 0.0
 5798.                   endif
 5793.                   $I_L5793_164 = 1 + $I_L5793_164
 5799.                   if ( $I_L5793_164 >= min( nmax, 2048 + 2048 * $SI_L5793_146_G1 ) + -2048 * $SI_L5793_146_G1 ) exit
 5799.                enddo
 5801.                $I_L5792_160 = 1 + $I_L5792_160
 5801.                if ( $I_L5792_160 >= 2 ) exit
 5801.             enddo
 5793.             $SI_L5793_146_G1 = 1 + $SI_L5793_146_G1
 5800.             if ( $SI_L5793_146_G1 >= _rsh( 2047 + nmax, 11 ) ) exit
 5800.          enddo
 5800.       endif
 5803.       call runoff( roff(1), tg(1), td(1), capac(1, 1), w(1, 1), itype(1), dtc3x, nmax, ncols )
 5806.       if ( nmax > 0 ) then
 5806.          $I_L5806_148 = 0
 5806. !dir$ ivdep
 5806.          do
 5807.             $ntyp_S25 = itype(1 + $I_L5806_148)
 5808.             if ( w(1 + $I_L5806_148, 1) > 1.0 ) then
 5809.                w(1 + $I_L5806_148, 2) = w(1 + $I_L5806_148, 2) + ( ( -1.0 + w(1 + $I_L5806_148, 1) ) * (zdepth%base_addr)($ntyp_S25, 1, 0) * 1.0/(zdepth%base_addr)($ntyp_S25, 2, 0) )
 5810.                w(1 + $I_L5806_148, 1) = 1.0
 5810.             endif
 5812.             if ( w(1 + $I_L5806_148, 2) > 1.0 ) then
 5813.                w(1 + $I_L5806_148, 3) = w(1 + $I_L5806_148, 3) + ( ( -1.0 + w(1 + $I_L5806_148, 2) ) * (zdepth%base_addr)($ntyp_S25, 2, 0) * 1.0/(zdepth%base_addr)($ntyp_S25, 3, 0) )
 5814.                w(1 + $I_L5806_148, 2) = 1.0
 5814.             endif
 5816.             if ( w(1 + $I_L5806_148, 3) > 1.0 ) then
 5817.                roff(1 + $I_L5806_148) = roff(1 + $I_L5806_148) + ( -1.0 + w(1 + $I_L5806_148, 3) ) * (poros%base_addr)($ntyp_S25, 0) * (zdepth%base_addr)($ntyp_S25, 3, 0)
 5818.                w(1 + $I_L5806_148, 3) = 1.0
 5818.             endif
 5820.             $I_L5806_148 = 1 + $I_L5806_148
 5819.             if ( $I_L5806_148 >= nmax ) exit
 5819.          enddo
 5828.          $I_L5828_150 = 0
 5828. !dir$ ivdep
 5828.          do
 5834.             $drag_WR0_R4 = rhoair(1 + $I_L5828_150) * cu(1 + $I_L5828_150) * ustar(1 + $I_L5828_150)
 5834.             drag(1 + $I_L5828_150) = $drag_WR0_R4
 5849.             $aaa_WR0_R5 = ( 1.0/psb(1 + $I_L5828_150) * $drag_WR0_R4 * 9.8000000000000004e-2 )
 5851.             $gmu_WR0_R6 = gmu(1 + $I_L5828_150, 2) + dtc3x * $aaa_WR0_R5
 5851.             gmu(1 + $I_L5828_150, 2) = $gmu_WR0_R6
 5852.             gmu(1 + $I_L5828_150, 3) = ( ( gmu(1 + $I_L5828_150, 3) + -( $aaa_WR0_R5 * um(1 + $I_L5828_150) * sinclt(1 + $I_L5828_150) ) ) * 1.0/$gmu_WR0_R6 )
 5853.             gmu(1 + $I_L5828_150, 4) = ( ( gmu(1 + $I_L5828_150, 4) + -( $aaa_WR0_R5 * vm(1 + $I_L5828_150) * sinclt(1 + $I_L5828_150) ) ) * 1.0/$gmu_WR0_R6 )
 5855.             $d1_S27 = 1.0/ra(1 + $I_L5828_150) + 1.0/rb(1 + $I_L5828_150) + 1.0/rd(1 + $I_L5828_150)
 5857.             ta(1 + $I_L5828_150) = ( ( ( tg(1 + $I_L5828_150) * 1.0/rd(1 + $I_L5828_150) ) + ( tc(1 + $I_L5828_150) * 1.0/rb(1 + $I_L5828_150) ) + ( tm(1 + $I_L5828_150) * bps(1 + $I_L5828_150) * 1.0/ra(1 + $I_L5828_150) ) ) * 1.0/$d1_S27 )
 5859.             $I_L5828_150 = 1 + $I_L5828_150
 5828.             if ( $I_L5828_150 >= nmax ) exit
 5828.          enddo
 5864.          $I_L5864_152 = 0
 5864. !dir$ ivdep
 5864.          do
 5865.             $ntyp_S29 = itype(1 + $I_L5864_152)
 5866.             endwb(1 + $I_L5864_152) = w(1 + $I_L5864_152, 1) * (poros%base_addr)($ntyp_S29, 0) * (zdepth%base_addr)($ntyp_S29, 1, 0) + w(1 + $I_L5864_152, 2) * (poros%base_addr)($ntyp_S29, 0) * (zdepth%base_addr)($ntyp_S29, 2, 0) + w(1 + $I_L5864_152, 3) * (poros%base_addr)($ntyp_S29, 0) * (zdepth%base_addr)($ntyp_S29, 3, 0) + capac(1 + $I_L5864_152, 1) + capac(1 + $I_L5864_152, 2) + -1.0e-3 * ( ppl(1 + $I_L5864_152) + ppc(1 + $I_L5864_152) ) + 1.0e-3 * etmass(1 + $I_L5864_152) + roff(1 + $I_L5864_152)
 5881.             cbal(1 + $I_L5864_152) = radt(1 + $I_L5864_152, 1) + -chf(1 + $I_L5864_152) + -( ( ect(1 + $I_L5864_152) + hc(1 + $I_L5864_152) + eci(1 + $I_L5864_152) ) * 1.0/dtc3x )
 5882.             gbal(1 + $I_L5864_152) = radt(1 + $I_L5864_152, 2) + -shf(1 + $I_L5864_152) + -( ( egt(1 + $I_L5864_152) + egi(1 + $I_L5864_152) + hg(1 + $I_L5864_152) + egs(1 + $I_L5864_152) ) * 1.0/dtc3x )
 5887.             $I_L5864_152 = 1 + $I_L5864_152
 5864.             if ( $I_L5864_152 >= nmax ) exit
 5864.          enddo
 5864.       endif
 5889.       if ( nmax > 0 ) then
 5889.          $I_L5889_154 = 0
 5889.          do
 5890.             ntyp = itype(1 + $I_L5889_154)
 5892.             if ( abs( totwb(1 + $I_L5889_154) + -endwb(1 + $I_L5889_154) ) > 5.0000000000000001e-4 ) then
 5894.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5894.                    _substr(t$1801,1,13) = 'Sfc_SSiB.f90'
 5894.                    _substr(t$1802,1,6) = 'TOTWB'
 5894.                   t$1803 = 1 + $I_L5889_154
 5894.                   call _bounds_error(  _substr(t$1801,1,13), 5894,  _substr(t$1802,1,6), 1, 1, t$57, t$1803, t$1800 )
 5894.                endif
 5894.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5894.                    _substr(t$1805,1,13) = 'Sfc_SSiB.f90'
 5894.                    _substr(t$1806,1,6) = 'ENDWB'
 5894.                   t$1807 = 1 + $I_L5889_154
 5894.                   call _bounds_error(  _substr(t$1805,1,13), 5894,  _substr(t$1806,1,6), 1, 1, t$57, t$1807, t$1804 )
 5894.                endif
 5894.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5894.                    _substr(t$1809,1,13) = 'Sfc_SSiB.f90'
 5894.                    _substr(t$1810,1,6) = 'TOTWB'
 5894.                   t$1811 = 1 + $I_L5889_154
 5894.                   call _bounds_error(  _substr(t$1809,1,13), 5894,  _substr(t$1810,1,6), 1, 1, t$57, t$1811, t$1808 )
 5894.                endif
 5894.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5894.                    _substr(t$1813,1,13) = 'Sfc_SSiB.f90'
 5894.                    _substr(t$1814,1,6) = 'ENDWB'
 5894.                   t$1815 = 1 + $I_L5889_154
 5894.                   call _bounds_error(  _substr(t$1813,1,13), 5894,  _substr(t$1814,1,6), 1, 1, t$57, t$1815, t$1812 )
 5894.                endif
 5894.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5894.                    _substr(t$1817,1,13) = 'Sfc_SSiB.f90'
 5894.                    _substr(t$1818,1,4) = 'W'
 5894.                   t$1819 = 1 + $I_L5889_154
 5894.                   call _bounds_error(  _substr(t$1817,1,13), 5894,  _substr(t$1818,1,2), 1, 1, t$57, t$1819, t$1816 )
 5894.                endif
 5894.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5894.                    _substr(t$1821,1,13) = 'Sfc_SSiB.f90'
 5894.                    _substr(t$1822,1,4) = 'W'
 5894.                   t$1823 = 1 + $I_L5889_154
 5894.                   call _bounds_error(  _substr(t$1821,1,13), 5894,  _substr(t$1822,1,2), 1, 1, t$57, t$1823, t$1820 )
 5894.                endif
 5895.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5895.                    _substr(t$1825,1,13) = 'Sfc_SSiB.f90'
 5895.                    _substr(t$1826,1,4) = 'W'
 5895.                   t$1827 = 1 + $I_L5889_154
 5895.                   call _bounds_error(  _substr(t$1825,1,13), 5895,  _substr(t$1826,1,2), 1, 1, t$57, t$1827, t$1824 )
 5895.                endif
 5895.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5895.                    _substr(t$1829,1,13) = 'Sfc_SSiB.f90'
 5895.                    _substr(t$1830,1,6) = 'CAPAC'
 5895.                   t$1831 = 1 + $I_L5889_154
 5895.                   call _bounds_error(  _substr(t$1829,1,13), 5895,  _substr(t$1830,1,6), 1, 1, t$57, t$1831, t$1828 )
 5895.                endif
 5895.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5895.                    _substr(t$1833,1,13) = 'Sfc_SSiB.f90'
 5895.                    _substr(t$1834,1,6) = 'CAPAC'
 5895.                   t$1835 = 1 + $I_L5889_154
 5895.                   call _bounds_error(  _substr(t$1833,1,13), 5895,  _substr(t$1834,1,6), 1, 1, t$57, t$1835, t$1832 )
 5895.                endif
 5895.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5895.                    _substr(t$1837,1,13) = 'Sfc_SSiB.f90'
 5895.                    _substr(t$1838,1,4) = 'PPL'
 5895.                   t$1839 = 1 + $I_L5889_154
 5895.                   call _bounds_error(  _substr(t$1837,1,13), 5895,  _substr(t$1838,1,4), 1, 1, t$57, t$1839, t$1836 )
 5895.                endif
 5895.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5895.                    _substr(t$1841,1,13) = 'Sfc_SSiB.f90'
 5895.                    _substr(t$1842,1,4) = 'PPC'
 5895.                   t$1843 = 1 + $I_L5889_154
 5895.                   call _bounds_error(  _substr(t$1841,1,13), 5895,  _substr(t$1842,1,4), 1, 1, t$57, t$1843, t$1840 )
 5895.                endif
 5895.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5895.                    _substr(t$1845,1,13) = 'Sfc_SSiB.f90'
 5895.                    _substr(t$1846,1,7) = 'ETMASS'
 5895.                   t$1847 = 1 + $I_L5889_154
 5895.                   call _bounds_error(  _substr(t$1845,1,13), 5895,  _substr(t$1846,1,7), 1, 1, t$57, t$1847, t$1844 )
 5895.                endif
 5896.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5896.                    _substr(t$1849,1,13) = 'Sfc_SSiB.f90'
 5896.                    _substr(t$1850,1,5) = 'ROFF'
 5896.                   t$1851 = 1 + $I_L5889_154
 5896.                   call _bounds_error(  _substr(t$1849,1,13), 5896,  _substr(t$1850,1,5), 1, 1, t$57, t$1851, t$1848 )
 5896.                endif
 5896.                if ( ntyp < zlt%dim_1%LB .or. ntyp > zlt%dim_1%LB + zlt%dim_1%EX + -1 ) then
 5896.                    _substr(t$1853,1,13) = 'Sfc_SSiB.f90'
 5896.                    _substr(t$1854,1,4) = 'ZLT'
 5896.                   t$1855 = zlt%dim_1%LB
 5896.                   t$1856 = zlt%dim_1%LB + zlt%dim_1%EX + -1
 5896.                   t$1857 = ntyp
 5896.                   call _bounds_error(  _substr(t$1853,1,13), 5896,  _substr(t$1854,1,4), 1, t$1855, t$1856, t$1857, t$1852 )
 5896.                endif
 5896.                if ( 12 < zlt%dim_2%LB .or. zlt%dim_2%LB + zlt%dim_2%EX + -13 < 0 ) then
 5896.                    _substr(t$1859,1,13) = 'Sfc_SSiB.f90'
 5896.                    _substr(t$1860,1,4) = 'ZLT'
 5896.                   t$1861 = zlt%dim_2%LB
 5896.                   t$1862 = zlt%dim_2%LB + zlt%dim_2%EX + -1
 5896.                   call _bounds_error(  _substr(t$1859,1,13), 5896,  _substr(t$1860,1,4), 2, t$1861, t$1862, 12, t$1858 )
 5896.                endif
 5896.                if ( 1 < zlt%dim_3%LB .or. 0 >= zlt%dim_3%LB + zlt%dim_3%EX + -1 ) then
 5896.                    _substr(t$1864,1,13) = 'Sfc_SSiB.f90'
 5896.                    _substr(t$1865,1,4) = 'ZLT'
 5896.                   t$1866 = zlt%dim_3%LB
 5896.                   t$1867 = zlt%dim_3%LB + zlt%dim_3%EX + -1
 5896.                   call _bounds_error(  _substr(t$1864,1,13), 5896,  _substr(t$1865,1,4), 3, t$1866, t$1867, 1, t$1863 )
 5896.                endif
 5896.                if ( ntyp < zlt%dim_1%LB .or. ntyp > zlt%dim_1%LB + zlt%dim_1%EX + -1 ) then
 5896.                    _substr(t$1869,1,13) = 'Sfc_SSiB.f90'
 5896.                    _substr(t$1870,1,4) = 'ZLT'
 5896.                   t$1871 = zlt%dim_1%LB
 5896.                   t$1872 = zlt%dim_1%LB + zlt%dim_1%EX + -1
 5896.                   t$1873 = ntyp
 5896.                   call _bounds_error(  _substr(t$1869,1,13), 5896,  _substr(t$1870,1,4), 1, t$1871, t$1872, t$1873, t$1868 )
 5896.                endif
 5896.                if ( 12 < zlt%dim_2%LB .or. zlt%dim_2%LB + zlt%dim_2%EX + -13 < 0 ) then
 5896.                    _substr(t$1875,1,13) = 'Sfc_SSiB.f90'
 5896.                    _substr(t$1876,1,4) = 'ZLT'
 5896.                   t$1877 = zlt%dim_2%LB
 5896.                   t$1878 = zlt%dim_2%LB + zlt%dim_2%EX + -1
 5896.                   call _bounds_error(  _substr(t$1875,1,13), 5896,  _substr(t$1876,1,4), 2, t$1877, t$1878, 12, t$1874 )
 5896.                endif
 5896.                if ( 2 < zlt%dim_3%LB .or. zlt%dim_3%LB + zlt%dim_3%EX + -3 < 0 ) then
 5896.                    _substr(t$1880,1,13) = 'Sfc_SSiB.f90'
 5896.                    _substr(t$1881,1,4) = 'ZLT'
 5896.                   t$1882 = zlt%dim_3%LB
 5896.                   t$1883 = zlt%dim_3%LB + zlt%dim_3%EX + -1
 5896.                   call _bounds_error(  _substr(t$1880,1,13), 5896,  _substr(t$1881,1,4), 3, t$1882, t$1883, 2, t$1879 )
 5896.                endif
 5897.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5897.                    _substr(t$1885,1,13) = 'Sfc_SSiB.f90'
 5897.                    _substr(t$1886,1,4) = 'TC'
 5897.                   t$1887 = 1 + $I_L5889_154
 5897.                   call _bounds_error(  _substr(t$1885,1,13), 5897,  _substr(t$1886,1,3), 1, 1, t$57, t$1887, t$1884 )
 5897.                endif
 5897.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5897.                    _substr(t$1889,1,13) = 'Sfc_SSiB.f90'
 5897.                    _substr(t$1890,1,4) = 'TG'
 5897.                   t$1891 = 1 + $I_L5889_154
 5897.                   call _bounds_error(  _substr(t$1889,1,13), 5897,  _substr(t$1890,1,3), 1, 1, t$57, t$1891, t$1888 )
 5897.                endif
 5897.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5897.                    _substr(t$1893,1,13) = 'Sfc_SSiB.f90'
 5897.                    _substr(t$1894,1,4) = 'TD'
 5897.                   t$1895 = 1 + $I_L5889_154
 5897.                   call _bounds_error(  _substr(t$1893,1,13), 5897,  _substr(t$1894,1,3), 1, 1, t$57, t$1895, t$1892 )
 5897.                endif
 5897.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5897.                    _substr(t$1897,1,13) = 'Sfc_SSiB.f90'
 5897.                    _substr(t$1898,1,4) = 'TM'
 5897.                   t$1899 = 1 + $I_L5889_154
 5897.                   call _bounds_error(  _substr(t$1897,1,13), 5897,  _substr(t$1898,1,3), 1, 1, t$57, t$1899, t$1896 )
 5897.                endif
 5893.                $Unit_temp_O0 = nfprt
 5893.                $IOitem_O2 = totwb(1 + $I_L5889_154) + -endwb(1 + $I_L5889_154)
 5893.                $IOitem_O3 = (zlt%base_addr)(ntyp, 12, 1, 0)
 5893.                $IOitem_O4 = (zlt%base_addr)(ntyp, 12, 2, 0)
 5893.                $_IOitem_P0(0) = latitu
 5893.                $_IOitem_P0(1) = ( 1 + $I_L5889_154 )
 5893.                $_IOitem_P0(2) = ntyp
 5893.                $_IOitem_P0(3) = ndt
 5893.                $_IOitem_P1(0) = totwb(1 + $I_L5889_154)
 5893.                $_IOitem_P1(1) = endwb(1 + $I_L5889_154)
 5893.                $_IOitem_P2(0) = w(1 + $I_L5889_154, 1)
 5893.                $_IOitem_P2(1) = w(1 + $I_L5889_154, 2)
 5893.                $_IOitem_P2(2) = w(1 + $I_L5889_154, 3)
 5893.                $_IOitem_P2(3) = capac(1 + $I_L5889_154, 1)
 5893.                $_IOitem_P2(4) = capac(1 + $I_L5889_154, 2)
 5893.                $_IOitem_P2(5) = ppl(1 + $I_L5889_154)
 5893.                $_IOitem_P2(6) = ppc(1 + $I_L5889_154)
 5893.                $_IOitem_P2(7) = etmass(1 + $I_L5889_154)
 5893.                $_IOitem_P2(8) = roff(1 + $I_L5889_154)
 5893.                $_IOitem_P2(9) = $IOitem_O3
 5893.                $_IOitem_P2(10) = $IOitem_O4
 5893.                $_IOitem_P2(11) = tc(1 + $I_L5889_154)
 5893.                $_IOitem_P2(12) = tg(1 + $I_L5889_154)
 5893.                $_IOitem_P2(13) = td(1 + $I_L5889_154)
 5893.                $_IOitem_P2(14) = tm(1 + $I_L5889_154)
 5893.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$63,  _substr(t$62,1,70), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 3, 1 )), 0x2000200000000L ), _iotype( $_IOitem_P1(:( 0, 1, 1 )), 0x804060300000000L ), _iotype( $IOitem_O2, 0x4000300000000L ), _iotype( $_IOitem_P2(:( 0, 14, 1 )), 0x804060300000000L ) ) )
 5893.             endif
 5899.             if ( abs( cbal(1 + $I_L5889_154) + -gbal(1 + $I_L5889_154) ) > 5.0 ) then
 5901.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5901.                    _substr(t$1901,1,13) = 'Sfc_SSiB.f90'
 5901.                    _substr(t$1902,1,5) = 'RADT'
 5901.                   t$1803 = 1 + $I_L5889_154
 5901.                   call _bounds_error(  _substr(t$1901,1,13), 5901,  _substr(t$1902,1,5), 1, 1, t$57, t$1803, t$1900 )
 5901.                endif
 5901.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5901.                    _substr(t$1904,1,13) = 'Sfc_SSiB.f90'
 5901.                    _substr(t$1905,1,5) = 'RADT'
 5901.                   t$1807 = 1 + $I_L5889_154
 5901.                   call _bounds_error(  _substr(t$1904,1,13), 5901,  _substr(t$1905,1,5), 1, 1, t$57, t$1807, t$1903 )
 5901.                endif
 5901.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5901.                    _substr(t$1907,1,13) = 'Sfc_SSiB.f90'
 5901.                    _substr(t$1908,1,4) = 'CHF'
 5901.                   t$1811 = 1 + $I_L5889_154
 5901.                   call _bounds_error(  _substr(t$1907,1,13), 5901,  _substr(t$1908,1,4), 1, 1, t$57, t$1811, t$1906 )
 5901.                endif
 5901.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5901.                    _substr(t$1910,1,13) = 'Sfc_SSiB.f90'
 5901.                    _substr(t$1911,1,4) = 'SHF'
 5901.                   t$1815 = 1 + $I_L5889_154
 5901.                   call _bounds_error(  _substr(t$1910,1,13), 5901,  _substr(t$1911,1,4), 1, 1, t$57, t$1815, t$1909 )
 5901.                endif
 5901.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5901.                    _substr(t$1913,1,13) = 'Sfc_SSiB.f90'
 5901.                    _substr(t$1914,1,6) = 'HFLUX'
 5901.                   t$1819 = 1 + $I_L5889_154
 5901.                   call _bounds_error(  _substr(t$1913,1,13), 5901,  _substr(t$1914,1,6), 1, 1, t$57, t$1819, t$1912 )
 5901.                endif
 5902.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5902.                    _substr(t$1916,1,13) = 'Sfc_SSiB.f90'
 5902.                    _substr(t$1917,1,4) = 'ECT'
 5902.                   t$1823 = 1 + $I_L5889_154
 5902.                   call _bounds_error(  _substr(t$1916,1,13), 5902,  _substr(t$1917,1,4), 1, 1, t$57, t$1823, t$1915 )
 5902.                endif
 5902.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5902.                    _substr(t$1919,1,13) = 'Sfc_SSiB.f90'
 5902.                    _substr(t$1920,1,4) = 'ECI'
 5902.                   t$1827 = 1 + $I_L5889_154
 5902.                   call _bounds_error(  _substr(t$1919,1,13), 5902,  _substr(t$1920,1,4), 1, 1, t$57, t$1827, t$1918 )
 5902.                endif
 5902.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5902.                    _substr(t$1922,1,13) = 'Sfc_SSiB.f90'
 5902.                    _substr(t$1923,1,4) = 'EGT'
 5902.                   t$1831 = 1 + $I_L5889_154
 5902.                   call _bounds_error(  _substr(t$1922,1,13), 5902,  _substr(t$1923,1,4), 1, 1, t$57, t$1831, t$1921 )
 5902.                endif
 5902.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5902.                    _substr(t$1925,1,13) = 'Sfc_SSiB.f90'
 5902.                    _substr(t$1926,1,4) = 'EGI'
 5902.                   t$1835 = 1 + $I_L5889_154
 5902.                   call _bounds_error(  _substr(t$1925,1,13), 5902,  _substr(t$1926,1,4), 1, 1, t$57, t$1835, t$1924 )
 5902.                endif
 5902.                if ( ( 1 + $I_L5889_154 ) <= 0 .or. ( 1 + $I_L5889_154 ) > t$57 ) then
 5902.                    _substr(t$1928,1,13) = 'Sfc_SSiB.f90'
 5902.                    _substr(t$1929,1,4) = 'EGS'
 5902.                   t$1839 = 1 + $I_L5889_154
 5902.                   call _bounds_error(  _substr(t$1928,1,13), 5902,  _substr(t$1929,1,4), 1, 1, t$57, t$1839, t$1927 )
 5902.                endif
 5900.                $Unit_temp_O5 = nfprt
 5900.                $_IOitem_P3(0) = latitu
 5900.                $_IOitem_P3(1) = ( 1 + $I_L5889_154 )
 5900.                $_IOitem_P3(2) = ntyp
 5900.                $_IOitem_P3(3) = ndt
 5900.                $_IOitem_P4(0) = radt(1 + $I_L5889_154, 1)
 5900.                $_IOitem_P4(1) = radt(1 + $I_L5889_154, 2)
 5900.                $_IOitem_P4(2) = chf(1 + $I_L5889_154)
 5900.                $_IOitem_P4(3) = shf(1 + $I_L5889_154)
 5900.                $_IOitem_P4(4) = hflux(1 + $I_L5889_154)
 5900.                $_IOitem_P4(5) = ect(1 + $I_L5889_154)
 5900.                $_IOitem_P4(6) = eci(1 + $I_L5889_154)
 5900.                $_IOitem_P4(7) = egt(1 + $I_L5889_154)
 5900.                $_IOitem_P4(8) = egi(1 + $I_L5889_154)
 5900.                $_IOitem_P4(9) = egs(1 + $I_L5889_154)
 5900.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, t$65,  _substr(t$64,1,42), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P3(:( 0, 3, 1 )), 0x2000200000000L ), _iotype( $_IOitem_P4(:( 0, 9, 1 )), 0x804060300000000L ) ) )
 5900.             endif
 5903.             $I_L5889_154 = 1 + $I_L5889_154
 5899.             if ( $I_L5889_154 >= nmax ) exit
 5899.          enddo
 5899.       endif
 5253.       _free( t$643 )
 5908.       return
 5908.       end
 5908.       
 5916.       
 5916.       subroutine vntlt1( rmi, rhi, gu, gv, gt, tsurf, tsea, ncols, sigki, cuni, cui, cu, ctni, cti, ct, speedm, tha, thm, dzm, thvgm, rib, z0, zorl, ustar, sinclt, mskant )
 5916.       t$66 = ncols
 5969.       t$723 = _zla( 0, ncols )
 6007.       t$726 = 8 * _zla( 0, ncols )
 5916.       t$724 = int( _alloc( 8 * _zla( 0, ncols ) ), 8 )
 6007.       t$725 = t$724
 6012.       if ( ncols > 0 ) then
 6012.          $I_L6012_12 = 0
 6012. !dir$ ivdep
 6012.          do
 6013.             if ( mskant(1 + $I_L6012_12) == 1 ) then
 6014.                z0(1 + $I_L6012_12) = 1.0e-3
 6015.                if ( tsea(1 + $I_L6012_12) >= 0.0 ) then
 6014.                   goto 10
 6015.                else if ( abs( tsea(1 + $I_L6012_12) ) >= 271.17000000000002 ) then
 6016.                   z0(1 + $I_L6012_12) = 1.0e-2 * zorl(1 + $I_L6012_12)
 6016.                else
 6016.    10             continue
 6017.                   if ( tsea(1 + $I_L6012_12) < 0.0 ) then
 6017.                      if ( abs( tsea(1 + $I_L6012_12) ) < 271.17000000000002 ) then
 6018.                         z0(1 + $I_L6012_12) = 1.0e-3
 6018.                      endif
 6018.                   endif
 6018.                endif
 6020.                sincli(1 + $I_L6012_12) = 1.0/sinclt(1 + $I_L6012_12)
 6020.             endif
 6022.             $I_L6012_12 = 1 + $I_L6012_12
 6021.             if ( $I_L6012_12 >= ncols ) exit
 6021.          enddo
 6035.          $SC_sigki_I0 = sigki(1)
 6024.          $I_L6024_14 = 0
 6024. !dir$ ivdep
 6024.          do
 6025.             if ( mskant(1 + $I_L6024_14) == 1 ) then
 6026.                if ( tsea(1 + $I_L6024_14) <= 0.0 ) then
 6027.                   $speedm_WR0_R0 = _sqrt( gu(1 + $I_L6024_14) * gu(1 + $I_L6024_14) + gv(1 + $I_L6024_14) * gv(1 + $I_L6024_14) ) * sincli(1 + $I_L6024_14)
 6028.                   $speedm_WR0_R0 = max( 2.0, $speedm_WR0_R0 )
 6028.                   speedm(1 + $I_L6024_14) = $speedm_WR0_R0
 6029.                   $dzm_WR0_R1 = gt(1 + $I_L6024_14) * rbyg
 6029.                   dzm(1 + $I_L6024_14) = $dzm_WR0_R1
 6030.                   $cuni_WR0_R2 = -1.5629999999999999 + 2.1895249999999997 * log( ( $dzm_WR0_R1 * 1.0/z0(1 + $I_L6024_14) ) )
 6030.                   cuni(1 + $I_L6024_14) = $cuni_WR0_R2
 6031.                   ctni(1 + $I_L6024_14) = $cuni_WR0_R2
 6035.                   $thm_WR0_R4 = gt(1 + $I_L6024_14) * $SC_sigki_I0
 6035.                   thm(1 + $I_L6024_14) = $thm_WR0_R4
 6036.                   $tha_WR0_R5 = tsurf(1 + $I_L6024_14)
 6036.                   tha(1 + $I_L6024_14) = $tha_WR0_R5
 6037.                   thvgm(1 + $I_L6024_14) = ( $tha_WR0_R5 + -$thm_WR0_R4 )
 6040.                   $rib_WR0_R7 = min( 1.25, max( -1.25, ( -( $dzm_WR0_R1 * ( $tha_WR0_R5 + -$thm_WR0_R4 ) * 1.0/( $speedm_WR0_R0 * $speedm_WR0_R0 * $thm_WR0_R4 ) * 9.8000000000000007 ) ) ) )
 6040.                   rib(1 + $I_L6024_14) = ( min( 1.25, max( -1.25, ( -( $dzm_WR0_R1 * ( $tha_WR0_R5 + -$thm_WR0_R4 ) * 1.0/( $speedm_WR0_R0 * $speedm_WR0_R0 * $thm_WR0_R4 ) * 9.8000000000000007 ) ) ) ) )
 6041.                   if ( ( min( 1.25, max( -1.25, ( -( $dzm_WR0_R1 * ( $tha_WR0_R5 + -$thm_WR0_R4 ) * 1.0/( $speedm_WR0_R0 * $speedm_WR0_R0 * $thm_WR0_R4 ) * 9.8000000000000007 ) ) ) ) ) < 0.0 ) then
 6042.                      $f_S2 = log( 1.0 + -1.2743 * $rib_WR0_R7 )
 6043.                      $cui_WR0_R8 = $cuni_WR0_R2 * _expn( 1.2270000000000001 + -_sqrt( 1.5055290000000001 + 1.2642 * $f_S2 ) )
 6043.                      cui(1 + $I_L6024_14) = $cui_WR0_R8
 6044.                      $g_S3 = log( 1.0 + -3.4805000000000001 * $rib_WR0_R7 )
 6045.                      cti(1 + $I_L6024_14) = $cuni_WR0_R2 * _expn( 1.3462000000000001 + -_sqrt( 1.8122544400000002 + 1.8380000000000001 * $g_S3 ) )
 6045.                   else
 6047.                      $f_S4 = log( 1.0 + 10.815 * $rib_WR0_R7 )
 6048.                      $cui_WR0_R8 = $cuni_WR0_R2 * _expn( -1.8899999999999999 + _sqrt( 3.5720999999999998 + 5.0518999999999998 * $f_S4 ) )
 6048.                      cui(1 + $I_L6024_14) = $cui_WR0_R8
 6049.                      cti(1 + $I_L6024_14) = $cui_WR0_R8
 6049.                   endif
 6051.                   cu(1 + $I_L6024_14) = 1.0/$cui_WR0_R8
 6052.                   $ct_WR0_R10 = 1.0/cti(1 + $I_L6024_14)
 6052.                   ct(1 + $I_L6024_14) = $ct_WR0_R10
 6056.                   ustar(1 + $I_L6024_14) = ( $speedm_WR0_R0 * 1.0/$cui_WR0_R8 )
 6057.                   rmi(1 + $I_L6024_14) = 1.0/$cui_WR0_R8 * ( $speedm_WR0_R0 * 1.0/$cui_WR0_R8 )
 6058.                   rhi(1 + $I_L6024_14) = $ct_WR0_R10 * ( $speedm_WR0_R0 * 1.0/$cui_WR0_R8 )
 6058.                endif
 6058.             endif
 6061.             $I_L6024_14 = 1 + $I_L6024_14
 6060.             if ( $I_L6024_14 >= ncols ) exit
 6060.          enddo
 6060.       endif
 5916.       _free( t$724 )
 6062.       return
 6062.       end
 6062.       
 6069.       
 6069.       subroutine seasfc( tmtx, umtx, qmtx, kpbl, kqpbl, slrad, tsurf, qsurf, gu, gv, gt, gq, gps, tsea, dtc3x, sinclt, sigki, delsig, sens, evap, umom, vmom, rmi, rhi, cond, stor, zorl, ncols, speedm, ustarm, z0, rho, qsfc, tsfc, mskant )
 6069.       t$67 = ncols
 6069.       t$68 = kpbl
 6148.       t$727 = _zla( 0, ncols )
 6069.       t$728 = _zla( 0, ncols )
 6148.       t$729 = _zla( 0, kpbl )
 6069.       t$730 = _zla( 0, ncols ) * _zla( 0, kpbl )
 6069.       t$731 = _zla( 0, ncols ) * _zla( 0, kpbl ) * 3
 6069.       t$732 = _zla( 0, ncols ) * _zla( 0, kpbl ) * 4
 6069.       t$69 = kqpbl
 6150.       t$733 = _zla( 0, kqpbl )
 6069.       t$734 = _zla( 0, ncols ) * _zla( 0, kqpbl )
 6069.       t$735 = _zla( 0, ncols ) * _zla( 0, kqpbl ) * 3
 6181.       t$738 = 8 * _zla( 0, ncols )
 6182.       t$739 = 8 * _zla( 0, ncols )
 6182.       t$741 = 16 * _zla( 0, ncols )
 6183.       t$742 = 16 * _zla( 0, ncols )
 6183.       t$744 = 24 * _zla( 0, ncols )
 6204.       t$745 = 24 * _zla( 0, ncols )
 6204.       t$747 = 32 * _zla( 0, ncols )
 6205.       t$748 = 32 * _zla( 0, ncols )
 6205.       t$750 = 40 * _zla( 0, ncols )
 6206.       t$751 = 40 * _zla( 0, ncols )
 6206.       t$753 = 48 * _zla( 0, ncols )
 6208.       t$754 = 48 * _zla( 0, ncols )
 6208.       t$756 = 56 * _zla( 0, ncols )
 6209.       t$757 = 56 * _zla( 0, ncols )
 6209.       t$759 = 64 * _zla( 0, ncols )
 6211.       t$760 = 64 * _zla( 0, ncols )
 6211.       t$762 = 72 * _zla( 0, ncols )
 6212.       t$763 = 72 * _zla( 0, ncols )
 6212.       t$765 = 80 * _zla( 0, ncols )
 6207.       t$766 = 80 * _zla( 0, ncols )
 6207.       t$768 = 88 * _zla( 0, ncols )
 6210.       t$769 = 88 * _zla( 0, ncols )
 6210.       t$771 = 96 * _zla( 0, ncols )
 6213.       t$772 = 96 * _zla( 0, ncols )
 6213.       t$774 = 104 * _zla( 0, ncols )
 6189.       t$775 = 104 * _zla( 0, ncols )
 6189.       t$777 = 112 * _zla( 0, ncols )
 6188.       t$778 = 112 * _zla( 0, ncols )
 6188.       t$780 = 120 * _zla( 0, ncols )
 6187.       t$781 = 120 * _zla( 0, ncols )
 6187.       t$783 = 128 * _zla( 0, ncols )
 6186.       t$784 = 128 * _zla( 0, ncols )
 6186.       t$786 = 136 * _zla( 0, ncols )
 6185.       t$787 = 136 * _zla( 0, ncols )
 6185.       t$789 = 144 * _zla( 0, ncols )
 6184.       t$790 = 144 * _zla( 0, ncols )
 6184.       t$792 = 152 * _zla( 0, ncols )
 6203.       t$793 = 152 * _zla( 0, ncols )
 6203.       t$795 = 160 * _zla( 0, ncols )
 6194.       t$796 = 160 * _zla( 0, ncols )
 6194.       t$798 = 168 * _zla( 0, ncols )
 6199.       t$799 = 168 * _zla( 0, ncols )
 6199.       t$801 = 176 * _zla( 0, ncols )
 6198.       t$802 = 176 * _zla( 0, ncols )
 6198.       t$804 = 184 * _zla( 0, ncols )
 6201.       t$805 = 184 * _zla( 0, ncols )
 6201.       t$807 = 192 * _zla( 0, ncols )
 6196.       t$808 = 192 * _zla( 0, ncols )
 6196.       t$810 = 200 * _zla( 0, ncols )
 6173.       t$811 = 200 * _zla( 0, ncols )
 6173.       t$813 = 208 * _zla( 0, ncols )
 6192.       t$814 = 208 * _zla( 0, ncols )
 6192.       t$816 = 216 * _zla( 0, ncols )
 6193.       t$817 = 216 * _zla( 0, ncols )
 6193.       t$819 = 224 * _zla( 0, ncols )
 6195.       t$820 = 224 * _zla( 0, ncols )
 6195.       t$822 = 232 * _zla( 0, ncols )
 6200.       t$823 = 232 * _zla( 0, ncols )
 6200.       t$825 = 240 * _zla( 0, ncols )
 6202.       t$826 = 240 * _zla( 0, ncols )
 6202.       t$828 = 248 * _zla( 0, ncols )
 6190.       t$829 = 248 * _zla( 0, ncols )
 6190.       t$831 = 256 * _zla( 0, ncols )
 6197.       t$832 = 256 * _zla( 0, ncols )
 6197.       t$834 = 264 * _zla( 0, ncols )
 6191.       t$835 = 264 * _zla( 0, ncols )
 6191.       t$837 = 272 * _zla( 0, ncols )
 6069.       t$736 = int( _alloc( 272 * _zla( 0, ncols ) ), 8 )
 6181.       t$737 = t$736
 6182.       t$740 = t$736 + 8 * _zla( 0, ncols )
 6183.       t$743 = t$736 + 16 * _zla( 0, ncols )
 6204.       t$746 = t$736 + 24 * _zla( 0, ncols )
 6205.       t$749 = t$736 + 32 * _zla( 0, ncols )
 6206.       t$752 = t$736 + 40 * _zla( 0, ncols )
 6208.       t$755 = t$736 + 48 * _zla( 0, ncols )
 6209.       t$758 = t$736 + 56 * _zla( 0, ncols )
 6211.       t$761 = t$736 + 64 * _zla( 0, ncols )
 6212.       t$764 = t$736 + 72 * _zla( 0, ncols )
 6207.       t$767 = t$736 + 80 * _zla( 0, ncols )
 6210.       t$770 = t$736 + 88 * _zla( 0, ncols )
 6213.       t$773 = t$736 + 96 * _zla( 0, ncols )
 6189.       t$776 = t$736 + 104 * _zla( 0, ncols )
 6188.       t$779 = t$736 + 112 * _zla( 0, ncols )
 6187.       t$782 = t$736 + 120 * _zla( 0, ncols )
 6186.       t$785 = t$736 + 128 * _zla( 0, ncols )
 6185.       t$788 = t$736 + 136 * _zla( 0, ncols )
 6184.       t$791 = t$736 + 144 * _zla( 0, ncols )
 6203.       t$794 = t$736 + 152 * _zla( 0, ncols )
 6194.       t$797 = t$736 + 160 * _zla( 0, ncols )
 6199.       t$800 = t$736 + 168 * _zla( 0, ncols )
 6198.       t$803 = t$736 + 176 * _zla( 0, ncols )
 6201.       t$806 = t$736 + 184 * _zla( 0, ncols )
 6196.       t$809 = t$736 + 192 * _zla( 0, ncols )
 6173.       t$812 = t$736 + 200 * _zla( 0, ncols )
 6192.       t$815 = t$736 + 208 * _zla( 0, ncols )
 6193.       t$818 = t$736 + 216 * _zla( 0, ncols )
 6195.       t$821 = t$736 + 224 * _zla( 0, ncols )
 6200.       t$824 = t$736 + 232 * _zla( 0, ncols )
 6202.       t$827 = t$736 + 240 * _zla( 0, ncols )
 6190.       t$830 = t$736 + 248 * _zla( 0, ncols )
 6197.       t$833 = t$736 + 256 * _zla( 0, ncols )
 6191.       t$836 = t$736 + 264 * _zla( 0, ncols )
 6241.       $gbycp_S1 = ( 9.7551264184750155e-5 * 1.0/( sigki(1) * delsig(1) ) )
 6242.       $gbyhl_S2 = ( 3.8888888888888891e-8 * 1.0/delsig(1) )
 6243.       $gb100_S14 = ( 9.8000000000000004e-2 * 1.0/delsig(1) )
 6246.       $hscap_S6 = ( 5776680.0 * 1.0/dtc3x )
 6247.       $sl1kap_S7 = sigki(1)
 6249.       $dti_S8 = 1.0/dtc3x
 6251.       if ( ncols > 0 ) then
 6251.          $I_L6251_36 = 0
 6251. !dir$ ivdep
 6251.          do
 6252.             if ( mskant(1 + $I_L6251_36) == 1 ) then
 6253.                rnet(1 + $I_L6251_36) = -697.58000000000004 * slrad(1 + $I_L6251_36)
 6254.                rho(1 + $I_L6251_36) = ( gps(1 + $I_L6251_36) * 1.0/( 2.8705000000000003 * gt(1 + $I_L6251_36) ) )
 6255.                ah(1 + $I_L6251_36) = ( $gbycp_S1 * 1.0/gps(1 + $I_L6251_36) )
 6256.                al(1 + $I_L6251_36) = ( $gbyhl_S2 * 1.0/gps(1 + $I_L6251_36) )
 6257.                dqg0(1 + $I_L6251_36) = ( 1.0/( tsurf(1 + $I_L6251_36) * tsurf(1 + $I_L6251_36) * gps(1 + $I_L6251_36) ) * _expn( 30.253530000000001 + -( 5418.0 * 1.0/tsurf(1 + $I_L6251_36) ) ) * 6.22e-1 )
 6259.                gtsav(1 + $I_L6251_36) = gt(1 + $I_L6251_36)
 6260.                gqsav(1 + $I_L6251_36) = gq(1 + $I_L6251_36)
 6261.                tssav(1 + $I_L6251_36) = tsurf(1 + $I_L6251_36)
 6262.                tmsav(1 + $I_L6251_36) = tmtx(1 + $I_L6251_36, 1, 3)
 6263.                qmsav(1 + $I_L6251_36) = qmtx(1 + $I_L6251_36, 1, 3)
 6263.             endif
 6265.             $I_L6251_36 = 1 + $I_L6251_36
 6264.             if ( $I_L6251_36 >= ncols ) exit
 6264.          enddo
 6264.       endif
 6267.       $F_A33 = ncols
 6267.       if ( ncols > 0 ) then
 6267.          $I_L6267_48 = 0
 6267. !dir$ ivdep
 6267.          do
 6267.             c0(1 + $I_L6267_48) = 0.0
 6267.             $I_L6267_48 = 1 + $I_L6267_48
 6267.             if ( $I_L6267_48 >= $F_A33 ) exit
 6267.          enddo
 6267.       endif
 6268.       $F_A34 = ncols
 6268.       if ( ncols > 0 ) then
 6268.          $I_L6268_50 = 0
 6268. !dir$ ivdep
 6268.          do
 6268.             cond(1 + $I_L6268_50) = 0.0
 6268.             $I_L6268_50 = 1 + $I_L6268_50
 6268.             if ( $I_L6268_50 >= $F_A34 ) exit
 6268.          enddo
 6268.       endif
 6269.       $F_A35 = ncols
 6269.       if ( ncols > 0 ) then
 6269.          $I_L6269_52 = 0
 6269. !dir$ ivdep
 6269.          do
 6269.             stor(1 + $I_L6269_52) = 0.0
 6269.             $I_L6269_52 = 1 + $I_L6269_52
 6269.             if ( $I_L6269_52 >= $F_A35 ) exit
 6269.          enddo
 6269.       endif
 6271.       $ncount_S3 = 0
 6278.       if ( ncols > 0 ) then
 6272.          do
 6273.             $ncount_S3 = 1 + $ncount_S3
 6274.             call vntlt1( rmi(1), rhi(1), gu(1), gv(1), gt(1), tsurf(1), tsea(1), ncols, sigki(1), cuni(1), cui(1), cu(1), ctni(1), cti(1), ct(1), speedm(1), tha(1), thm(1), dzm(1), thvgm(1), rib(1), z0(1), zorl(1), ustar(1), sinclt(1), mskant(1) )
 6278.             $I_L6278_38 = 0
 6278. !dir$ ivdep
 6278.             do
 6279.                if ( mskant(1 + $I_L6278_38) == 1 ) then
 6280.                   gt(1 + $I_L6278_38) = gtsav(1 + $I_L6278_38)
 6281.                   gq(1 + $I_L6278_38) = gqsav(1 + $I_L6278_38)
 6282.                   tsurf(1 + $I_L6278_38) = tssav(1 + $I_L6278_38)
 6283.                   tmtx(1 + $I_L6278_38, 1, 3) = tmsav(1 + $I_L6278_38)
 6284.                   qmtx(1 + $I_L6278_38, 1, 3) = qmsav(1 + $I_L6278_38)
 6284.                endif
 6286.                $I_L6278_38 = 1 + $I_L6278_38
 6285.                if ( $I_L6278_38 >= ncols ) exit
 6285.             enddo
 6317.             $SC_sigki_I0 = sigki(1)
 6287.             $I_L6287_40 = 0
 6287. !dir$ ivdep
 6287.             do
 6288.                if ( mskant(1 + $I_L6287_40) == 1 ) then
 6290.                   if ( tsea(1 + $I_L6287_40) >= 0.0 ) then
 6290.                      goto 10
 6290.                   else if ( abs( tsea(1 + $I_L6287_40) ) < 271.17000000000002 ) then
 6291.                      $b00_WR0_R0 = $hscap_S6 + rhi(1 + $I_L6287_40) * rho(1 + $I_L6287_40) * 1004.6 + rhi(1 + $I_L6287_40) * rho(1 + $I_L6287_40) * dqg0(1 + $I_L6287_40) * 2520000.0 + tsurf(1 + $I_L6287_40) * tsurf(1 + $I_L6287_40) * tsurf(1 + $I_L6287_40) * 2.2679999999999999e-7 + 1.0149999999999999
 6294.                      $b03_WR0_R1 = rhi(1 + $I_L6287_40) * rho(1 + $I_L6287_40) * $sl1kap_S7 * -1004.6
 6295.                      $b04_WR0_R2 = rhi(1 + $I_L6287_40) * rho(1 + $I_L6287_40) * -2520000.0
 6298.                      $c0_WR0_R3 = rnet(1 + $I_L6287_40) + rhi(1 + $I_L6287_40) * rho(1 + $I_L6287_40) * ( tsurf(1 + $I_L6287_40) + -( $sl1kap_S7 * gt(1 + $I_L6287_40) ) ) * -1004.6 + rhi(1 + $I_L6287_40) * rho(1 + $I_L6287_40) * ( qsurf(1 + $I_L6287_40) + -gq(1 + $I_L6287_40) ) * -2520000.0 + -1.0149999999999999 * ( -271.16000000000003 + tsurf(1 + $I_L6287_40) ) + ( tsurf(1 + $I_L6287_40) * tsurf(1 + $I_L6287_40) ) * ( tsurf(1 + $I_L6287_40) * tsurf(1 + $I_L6287_40) ) * -5.6699999999999998e-8
 6301.                      $b30_WR0_R4 = rho(1 + $I_L6287_40) * ah(1 + $I_L6287_40) * rhi(1 + $I_L6287_40) * -1004.6
 6302.                      $b33_WR0_R5 = tmtx(1 + $I_L6287_40, 1, 2) * $dti_S8 + -( $b30_WR0_R4 * $sl1kap_S7 )
 6303.                      $c3_WR0_R6 = tmtx(1 + $I_L6287_40, 1, 3) + -( $b30_WR0_R4 * ( tsurf(1 + $I_L6287_40) + -( $sl1kap_S7 * gt(1 + $I_L6287_40) ) ) )
 6304.                      $b40_WR0_R7 = rho(1 + $I_L6287_40) * al(1 + $I_L6287_40) * rhi(1 + $I_L6287_40) * dqg0(1 + $I_L6287_40) * -2520000.0
 6305.                      $b44_WR0_R8 = qmtx(1 + $I_L6287_40, 1, 2) * $dti_S8 + rho(1 + $I_L6287_40) * al(1 + $I_L6287_40) * rhi(1 + $I_L6287_40) * 2520000.0
 6306.                      $c4_WR0_R9 = qmtx(1 + $I_L6287_40, 1, 3) + rho(1 + $I_L6287_40) * al(1 + $I_L6287_40) * rhi(1 + $I_L6287_40) * ( qsurf(1 + $I_L6287_40) + -gq(1 + $I_L6287_40) ) * 2520000.0
 6308.                      $b00_WR0_R0 = $b00_WR0_R0 + -( $b30_WR0_R4 * $b03_WR0_R1 * 1.0/$b33_WR0_R5 ) + -( $b40_WR0_R7 * $b04_WR0_R2 * 1.0/$b44_WR0_R8 )
 6310.                      $c0_WR0_R3 = ( ( $c0_WR0_R3 + -( $c3_WR0_R6 * $b03_WR0_R1 * 1.0/$b33_WR0_R5 ) + -( $c4_WR0_R9 * $b04_WR0_R2 * 1.0/$b44_WR0_R8 ) ) * 1.0/$b00_WR0_R0 )
 6310.                      c0(1 + $I_L6287_40) = $c0_WR0_R3
 6311.                      tsurf(1 + $I_L6287_40) = tsurf(1 + $I_L6287_40) + $c0_WR0_R3
 6312.                      tmtx(1 + $I_L6287_40, 1, 3) = ( ( $c3_WR0_R6 + -( $b30_WR0_R4 * $c0_WR0_R3 ) ) * 1.0/( $b33_WR0_R5 * dtc3x ) )
 6313.                      qmtx(1 + $I_L6287_40, 1, 3) = ( ( $c4_WR0_R9 + -( $b40_WR0_R7 * $c0_WR0_R3 ) ) * 1.0/( $b44_WR0_R8 * dtc3x ) )
 6313.                   else
 6313.    10                continue
 6315.                      if ( tsea(1 + $I_L6287_40) < 0.0 ) then
 6315.                         if ( abs( tsea(1 + $I_L6287_40) ) > 271.17000000000002 ) then
 6316.                            zorl(1 + $I_L6287_40) = rhi(1 + $I_L6287_40) * speedm(1 + $I_L6287_40) * 3.2653061224489793e-1
 6317.                            $sens_WR0_R10 = ( tsurf(1 + $I_L6287_40) + -( gt(1 + $I_L6287_40) * $SC_sigki_I0 ) ) * rho(1 + $I_L6287_40) * rhi(1 + $I_L6287_40) * 1004.6
 6317.                            sens(1 + $I_L6287_40) = $sens_WR0_R10
 6318.                            $evap_WR0_R11 = ( qsurf(1 + $I_L6287_40) + -gq(1 + $I_L6287_40) ) * rho(1 + $I_L6287_40) * rhi(1 + $I_L6287_40) * 2520000.0
 6318.                            evap(1 + $I_L6287_40) = $evap_WR0_R11
 6319.                            tmtx(1 + $I_L6287_40, 1, 3) = ( ( tmtx(1 + $I_L6287_40, 1, 3) + ah(1 + $I_L6287_40) * $sens_WR0_R10 ) * 1.0/( tmtx(1 + $I_L6287_40, 1, 2) + dtc3x * ah(1 + $I_L6287_40) * rho(1 + $I_L6287_40) * rhi(1 + $I_L6287_40) * 1004.6 ) )
 6321.                            qmtx(1 + $I_L6287_40, 1, 3) = ( ( qmtx(1 + $I_L6287_40, 1, 3) + al(1 + $I_L6287_40) * $evap_WR0_R11 ) * 1.0/( qmtx(1 + $I_L6287_40, 1, 2) + dtc3x * al(1 + $I_L6287_40) * rho(1 + $I_L6287_40) * rhi(1 + $I_L6287_40) * 2520000.0 ) )
 6321.                         endif
 6321.                      endif
 6321.                   endif
 6321.                endif
 6325.                $I_L6287_40 = 1 + $I_L6287_40
 6324.                if ( $I_L6287_40 >= ncols ) exit
 6324.             enddo
 6327.             $I_L6327_42 = 0
 6327. !dir$ ivdep
 6327.             do
 6328.                if ( mskant(1 + $I_L6327_42) == 1 ) then
 6329.                   gt(1 + $I_L6327_42) = gt(1 + $I_L6327_42) + tmtx(1 + $I_L6327_42, 1, 3) * dtc3x
 6330.                   gq(1 + $I_L6327_42) = gq(1 + $I_L6327_42) + qmtx(1 + $I_L6327_42, 1, 3) * dtc3x
 6330.                endif
 6332.                $I_L6327_42 = 1 + $I_L6327_42
 6331.                if ( $I_L6327_42 >= ncols ) exit
 6331.             enddo
 6332.             if ( $ncount_S3 /= 1 ) exit
 6332.          enddo
 6338.          $SC_sigki_I0 = sigki(1)
 6336.          $I_L6336_44 = 0
 6336. !dir$ ivdep
 6336.          do
 6337.             if ( mskant(1 + $I_L6336_44) == 1 ) then
 6338.                $sens_WR0_R13 = ( tsurf(1 + $I_L6336_44) + -( gt(1 + $I_L6336_44) * $SC_sigki_I0 ) ) * rho(1 + $I_L6336_44) * rhi(1 + $I_L6336_44) * 1004.6
 6338.                sens(1 + $I_L6336_44) = $sens_WR0_R13
 6339.                $evap_WR0_R14 = ( qsurf(1 + $I_L6336_44) + -gq(1 + $I_L6336_44) ) * rho(1 + $I_L6336_44) * rhi(1 + $I_L6336_44) * 2520000.0
 6339.                evap(1 + $I_L6336_44) = $evap_WR0_R14
 6341.                $dtmdt_S11 = ( ( ah(1 + $I_L6336_44) * $sens_WR0_R13 ) * 1.0/( tmtx(1 + $I_L6336_44, 1, 2) + dtc3x * ah(1 + $I_L6336_44) * rho(1 + $I_L6336_44) * rhi(1 + $I_L6336_44) * 1004.6 ) )
 6342.                $dqmdt_S12 = ( ( al(1 + $I_L6336_44) * $evap_WR0_R14 ) * 1.0/( qmtx(1 + $I_L6336_44, 1, 2) + dtc3x * al(1 + $I_L6336_44) * rho(1 + $I_L6336_44) * rhi(1 + $I_L6336_44) * 2520000.0 ) )
 6345.                tsfc(1 + $I_L6336_44) = gt(1 + $I_L6336_44) + ( $dtmdt_S11 * dtc3x )
 6346.                qsfc(1 + $I_L6336_44) = gq(1 + $I_L6336_44) + ( $dqmdt_S12 * dtc3x )
 6348.                gt(1 + $I_L6336_44) = gtsav(1 + $I_L6336_44)
 6349.                gq(1 + $I_L6336_44) = gqsav(1 + $I_L6336_44)
 6350.                if ( tsea(1 + $I_L6336_44) < 0.0 ) then
 6350.                   if ( abs( tsea(1 + $I_L6336_44) ) < 271.17000000000002 ) then
 6351.                      cond(1 + $I_L6336_44) = 1.0149999999999999 * ( -271.16000000000003 + tsurf(1 + $I_L6336_44) )
 6352.                      stor(1 + $I_L6336_44) = $hscap_S6 * c0(1 + $I_L6336_44)
 6353.                      $tsurf_WR0_R12 = min( 271.16000000000003, tsurf(1 + $I_L6336_44) )
 6353.                      tsurf(1 + $I_L6336_44) = $tsurf_WR0_R12
 6354.                      tsea(1 + $I_L6336_44) = -$tsurf_WR0_R12
 6354.                   endif
 6354.                endif
 6354.             endif
 6357.             $I_L6336_44 = 1 + $I_L6336_44
 6356.             if ( $I_L6336_44 >= ncols ) exit
 6356.          enddo
 6359.          $I_L6359_46 = 0
 6359. !dir$ ivdep
 6359.          do
 6360.             if ( mskant(1 + $I_L6359_46) == 1 ) then
 6361.                $umom_WR0_R15 = rho(1 + $I_L6359_46) * gu(1 + $I_L6359_46) * rmi(1 + $I_L6359_46)
 6362.                $vmom_WR0_R16 = rho(1 + $I_L6359_46) * gv(1 + $I_L6359_46) * rmi(1 + $I_L6359_46)
 6363.                $am_WR0_R17 = ( $gb100_S14 * 1.0/gps(1 + $I_L6359_46) )
 6364.                umtx(1 + $I_L6359_46, 1, 3) = ( ( umtx(1 + $I_L6359_46, 1, 3) + -( $am_WR0_R17 * $umom_WR0_R15 ) ) * 1.0/( umtx(1 + $I_L6359_46, 1, 2) + dtc3x * $am_WR0_R17 * rho(1 + $I_L6359_46) * rmi(1 + $I_L6359_46) ) )
 6366.                umtx(1 + $I_L6359_46, 1, 4) = ( ( umtx(1 + $I_L6359_46, 1, 4) + -( $am_WR0_R17 * $vmom_WR0_R16 ) ) * 1.0/( umtx(1 + $I_L6359_46, 1, 2) + dtc3x * $am_WR0_R17 * rho(1 + $I_L6359_46) * rmi(1 + $I_L6359_46) ) )
 6372.                $umom_WR0_R15 = ( $umom_WR0_R15 * 1.0/sinclt(1 + $I_L6359_46) )
 6372.                umom(1 + $I_L6359_46) = $umom_WR0_R15
 6373.                $vmom_WR0_R16 = ( $vmom_WR0_R16 * 1.0/sinclt(1 + $I_L6359_46) )
 6373.                vmom(1 + $I_L6359_46) = $vmom_WR0_R16
 6374.                ustarm(1 + $I_L6359_46) = _sqrt( $umom_WR0_R15 * $umom_WR0_R15 + $vmom_WR0_R16 * $vmom_WR0_R16 )
 6375.                if ( _sqrt( $umom_WR0_R15 * $umom_WR0_R15 + $vmom_WR0_R16 * $vmom_WR0_R16 ) == 0.0 ) then
 6375.                   ustarm(1 + $I_L6359_46) = 7.0000000000000001e-3
 6375.                endif
 6376.                $um_WR0_R19 = ( gu(1 + $I_L6359_46) * 1.0/sinclt(1 + $I_L6359_46) )
 6377.                $vm_WR0_R20 = ( gv(1 + $I_L6359_46) * 1.0/sinclt(1 + $I_L6359_46) )
 6379.                speedm(1 + $I_L6359_46) = ( max( 2.0, _sqrt( $um_WR0_R19 * $um_WR0_R19 + $vm_WR0_R20 * $vm_WR0_R20 ) ) )
 6379.             endif
 6381.             $I_L6359_46 = 1 + $I_L6359_46
 6380.             if ( $I_L6359_46 >= ncols ) exit
 6380.          enddo
 6380.       else
 6272.          do
 6273.             $ncount_S3 = 1 + $ncount_S3
 6274.             call vntlt1( rmi(1), rhi(1), gu(1), gv(1), gt(1), tsurf(1), tsea(1), ncols, sigki(1), cuni(1), cui(1), cu(1), ctni(1), cti(1), ct(1), speedm(1), tha(1), thm(1), dzm(1), thvgm(1), rib(1), z0(1), zorl(1), ustar(1), sinclt(1), mskant(1) )
 6332.             if ( $ncount_S3 /= 1 ) exit
 6332.          enddo
 6332.       endif
 6069.       _free( t$736 )
 6382.       return
 6382.       end
 6382.       
 6385.       
 6385.       subroutine sextrp( td, tg, tc, w, capac, td0, tg0, tc0, w0, capac0, tdm, tgm, tcm, wm, capacm, istrt, ncols, nmax, epsflt, intg, latitu, tm0, qm0, tm, qm, tmm, qmm )
 6385.       t$70 = ncols
 6397.       t$838 = _zla( 0, ncols )
 6385.       t$839 = _zla( 0, ncols )
 6385.       t$840 = 3 * _zla( 0, ncols )
 6385.       t$841 = 2 * _zla( 0, ncols )
 6418.       if ( intg == 2 ) then
 6419.          if ( istrt <= 0 ) then
 6442.             if ( nmax > 0 ) then
 6442.                $I_L6442_40 = 0
 6442. !dir$ ivdep
 6442.                do
 6443.                   td0(1 + $I_L6442_40) = td0(1 + $I_L6442_40) + epsflt * ( td(1 + $I_L6442_40) + tdm(1 + $I_L6442_40) + -2.0 * td0(1 + $I_L6442_40) )
 6444.                   tg0(1 + $I_L6442_40) = tg0(1 + $I_L6442_40) + epsflt * ( tg(1 + $I_L6442_40) + tgm(1 + $I_L6442_40) + -2.0 * tg0(1 + $I_L6442_40) )
 6445.                   tc0(1 + $I_L6442_40) = tc0(1 + $I_L6442_40) + epsflt * ( tc(1 + $I_L6442_40) + tcm(1 + $I_L6442_40) + -2.0 * tc0(1 + $I_L6442_40) )
 6447.                   tm0(1 + $I_L6442_40) = tm0(1 + $I_L6442_40) + epsflt * ( tm(1 + $I_L6442_40) + tmm(1 + $I_L6442_40) + -2.0 * tm0(1 + $I_L6442_40) )
 6448.                   qm0(1 + $I_L6442_40) = qm0(1 + $I_L6442_40) + epsflt * ( qm(1 + $I_L6442_40) + qmm(1 + $I_L6442_40) + -2.0 * qm0(1 + $I_L6442_40) )
 6450.                   if ( w0(1 + $I_L6442_40, 1) > 0.0 ) then
 6451.                      w0(1 + $I_L6442_40, 1) = w0(1 + $I_L6442_40, 1) + epsflt * ( w(1 + $I_L6442_40, 1) + wm(1 + $I_L6442_40, 1) + -2.0 * w0(1 + $I_L6442_40, 1) )
 6451.                   endif
 6453.                   if ( w0(1 + $I_L6442_40, 2) > 0.0 ) then
 6454.                      w0(1 + $I_L6442_40, 2) = w0(1 + $I_L6442_40, 2) + epsflt * ( w(1 + $I_L6442_40, 2) + wm(1 + $I_L6442_40, 2) + -2.0 * w0(1 + $I_L6442_40, 2) )
 6454.                   endif
 6456.                   if ( w0(1 + $I_L6442_40, 3) > 0.0 ) then
 6457.                      w0(1 + $I_L6442_40, 3) = w0(1 + $I_L6442_40, 3) + epsflt * ( w(1 + $I_L6442_40, 3) + wm(1 + $I_L6442_40, 3) + -2.0 * w0(1 + $I_L6442_40, 3) )
 6457.                   endif
 6459.                   if ( capac0(1 + $I_L6442_40, 1) > 0.0 ) then
 6460.                      capac0(1 + $I_L6442_40, 1) = capac0(1 + $I_L6442_40, 1) + epsflt * ( capac(1 + $I_L6442_40, 1) + capacm(1 + $I_L6442_40, 1) + -2.0 * capac0(1 + $I_L6442_40, 1) )
 6460.                   endif
 6463.                   if ( capac0(1 + $I_L6442_40, 2) > 0.0 ) then
 6464.                      capac0(1 + $I_L6442_40, 2) = capac0(1 + $I_L6442_40, 2) + epsflt * ( capac(1 + $I_L6442_40, 2) + capacm(1 + $I_L6442_40, 2) + -2.0 * capac0(1 + $I_L6442_40, 2) )
 6464.                   endif
 6467.                   $I_L6442_40 = 1 + $I_L6442_40
 6466.                   if ( $I_L6442_40 >= nmax ) exit
 6466.                enddo
 6468.                $I_L6468_42 = 0
 6468. !dir$ ivdep
 6468.                do
 6469.                   tdm(1 + $I_L6468_42) = td0(1 + $I_L6468_42)
 6470.                   $tgm_WR0_R0 = tg0(1 + $I_L6468_42)
 6470.                   tgm(1 + $I_L6468_42) = $tgm_WR0_R0
 6471.                   tcm(1 + $I_L6468_42) = tc0(1 + $I_L6468_42)
 6472.                   tmm(1 + $I_L6468_42) = tm0(1 + $I_L6468_42)
 6473.                   qmm(1 + $I_L6468_42) = qm0(1 + $I_L6468_42)
 6474.                   wm(1 + $I_L6468_42, 1) = w0(1 + $I_L6468_42, 1)
 6475.                   wm(1 + $I_L6468_42, 2) = w0(1 + $I_L6468_42, 2)
 6476.                   wm(1 + $I_L6468_42, 3) = w0(1 + $I_L6468_42, 3)
 6477.                   capacm(1 + $I_L6468_42, 1) = capac0(1 + $I_L6468_42, 1)
 6478.                   $capacm_WR0_R1 = capac0(1 + $I_L6468_42, 2)
 6478.                   capacm(1 + $I_L6468_42, 2) = $capacm_WR0_R1
 6479.                   if ( $capacm_WR0_R1 > 0.0 ) then
 6479.                      $tgm_WR0_R0 = min( 273.06, $tgm_WR0_R0 )
 6479.                      tgm(1 + $I_L6468_42) = $tgm_WR0_R0
 6479.                   endif
 6480.                   $I_L6468_42 = 1 + $I_L6468_42
 6479.                   if ( $I_L6468_42 >= nmax ) exit
 6479.                enddo
 6479.             endif
 6481.             if ( nmax > 0 ) then
 6481.                $I_L6481_44 = 0
 6481.                do
 6482.                   td0(1 + $I_L6481_44) = td(1 + $I_L6481_44)
 6483.                   tg0(1 + $I_L6481_44) = tg(1 + $I_L6481_44)
 6484.                   tc0(1 + $I_L6481_44) = tc(1 + $I_L6481_44)
 6485.                   tm0(1 + $I_L6481_44) = tm(1 + $I_L6481_44)
 6486.                   qm0(1 + $I_L6481_44) = qm(1 + $I_L6481_44)
 6487.                   w0(1 + $I_L6481_44, 1) = w(1 + $I_L6481_44, 1)
 6488.                   w0(1 + $I_L6481_44, 2) = w(1 + $I_L6481_44, 2)
 6489.                   w0(1 + $I_L6481_44, 3) = w(1 + $I_L6481_44, 3)
 6490.                   capac0(1 + $I_L6481_44, 1) = capac(1 + $I_L6481_44, 1)
 6491.                   capac0(1 + $I_L6481_44, 2) = capac(1 + $I_L6481_44, 2)
 6492.                   if ( capac0(1 + $I_L6481_44, 2) > 0.0 ) then
 6492.                      if ( tg0(1 + $I_L6481_44) > 273.16000000000003 ) then
 6499.                         if ( ( 1 + $I_L6481_44 ) <= 0 .or. ( 1 + $I_L6481_44 ) > t$70 ) then
 6499.                             _substr(t$1975,1,13) = 'Sfc_SSiB.f90'
 6499.                             _substr(t$1976,1,7) = 'CAPAC0'
 6499.                            t$1960 = 1 + $I_L6481_44
 6499.                            call _bounds_error(  _substr(t$1975,1,13), 6499,  _substr(t$1976,1,7), 1, 1, t$70, t$1960, t$1974 )
 6499.                         endif
 6499.                         if ( ( 1 + $I_L6481_44 ) <= 0 .or. ( 1 + $I_L6481_44 ) > t$70 ) then
 6499.                             _substr(t$1978,1,13) = 'Sfc_SSiB.f90'
 6499.                             _substr(t$1979,1,4) = 'TG0'
 6499.                            t$1964 = 1 + $I_L6481_44
 6499.                            call _bounds_error(  _substr(t$1978,1,13), 6499,  _substr(t$1979,1,4), 1, 1, t$70, t$1964, t$1977 )
 6499.                         endif
 6499.                         $Unit_temp_O2 = nfprt
 6499.                         $_IOitem_P2(0) = 0
 6499.                         $_IOitem_P2(1) = latitu
 6499.                         $_IOitem_P2(2) = ( 1 + $I_L6481_44 )
 6499.                         $_IOitem_P3(0) = capac0(1 + $I_L6481_44, 2)
 6499.                         $_IOitem_P3(1) = tg0(1 + $I_L6481_44)
 6499.                         _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, t$72,  _substr(t$71,1,91), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P2(:( 0, 2, 1 )), 0x2000200000000L ), _iotype( $_IOitem_P3(:( 0, 1, 1 )), 0x804060300000000L ) ) )
 6499.                      endif
 6499.                   endif
 6501.                   $I_L6481_44 = 1 + $I_L6481_44
 6500.                   if ( $I_L6481_44 >= nmax ) exit
 6500.                enddo
 6500.             endif
 6420.          else if ( nmax > 0 ) then
 6420.             $I_L6420_46 = 0
 6420.             do
 6421.                tm0(1 + $I_L6420_46) = tm(1 + $I_L6420_46)
 6422.                qm0(1 + $I_L6420_46) = qm(1 + $I_L6420_46)
 6423.                td0(1 + $I_L6420_46) = td(1 + $I_L6420_46)
 6424.                tg0(1 + $I_L6420_46) = tg(1 + $I_L6420_46)
 6425.                tc0(1 + $I_L6420_46) = tc(1 + $I_L6420_46)
 6426.                w0(1 + $I_L6420_46, 1) = w(1 + $I_L6420_46, 1)
 6427.                w0(1 + $I_L6420_46, 2) = w(1 + $I_L6420_46, 2)
 6428.                w0(1 + $I_L6420_46, 3) = w(1 + $I_L6420_46, 3)
 6429.                capac0(1 + $I_L6420_46, 1) = capac(1 + $I_L6420_46, 1)
 6430.                capac0(1 + $I_L6420_46, 2) = capac(1 + $I_L6420_46, 2)
 6431.                if ( capac0(1 + $I_L6420_46, 2) > 0.0 ) then
 6431.                   if ( tg0(1 + $I_L6420_46) > 273.16000000000003 ) then
 6438.                      if ( ( 1 + $I_L6420_46 ) <= 0 .or. ( 1 + $I_L6420_46 ) > t$70 ) then
 6438.                          _substr(t$1958,1,13) = 'Sfc_SSiB.f90'
 6438.                          _substr(t$1959,1,7) = 'CAPAC0'
 6438.                         t$1960 = 1 + $I_L6420_46
 6438.                         call _bounds_error(  _substr(t$1958,1,13), 6438,  _substr(t$1959,1,7), 1, 1, t$70, t$1960, t$1957 )
 6438.                      endif
 6438.                      if ( ( 1 + $I_L6420_46 ) <= 0 .or. ( 1 + $I_L6420_46 ) > t$70 ) then
 6438.                          _substr(t$1962,1,13) = 'Sfc_SSiB.f90'
 6438.                          _substr(t$1963,1,4) = 'TG0'
 6438.                         t$1964 = 1 + $I_L6420_46
 6438.                         call _bounds_error(  _substr(t$1962,1,13), 6438,  _substr(t$1963,1,4), 1, 1, t$70, t$1964, t$1961 )
 6438.                      endif
 6438.                      $Unit_temp_O0 = nfprt
 6438.                      $_IOitem_P0(0) = 0
 6438.                      $_IOitem_P0(1) = latitu
 6438.                      $_IOitem_P0(2) = ( 1 + $I_L6420_46 )
 6438.                      $_IOitem_P1(0) = capac0(1 + $I_L6420_46, 2)
 6438.                      $_IOitem_P1(1) = tg0(1 + $I_L6420_46)
 6438.                      _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$72,  _substr(t$71,1,91), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 2, 1 )), 0x2000200000000L ), _iotype( $_IOitem_P1(:( 0, 1, 1 )), 0x804060300000000L ) ) )
 6438.                   endif
 6438.                endif
 6440.                $I_L6420_46 = 1 + $I_L6420_46
 6439.                if ( $I_L6420_46 >= nmax ) exit
 6439.             enddo
 6439.          endif
 6503.       else if ( nmax > 0 ) then
 6504.          $I_L6504_36 = 0
 6504.          do
 6505.             tdm(1 + $I_L6504_36) = td(1 + $I_L6504_36)
 6506.             tgm(1 + $I_L6504_36) = tg(1 + $I_L6504_36)
 6507.             tcm(1 + $I_L6504_36) = tc(1 + $I_L6504_36)
 6508.             tmm(1 + $I_L6504_36) = tm(1 + $I_L6504_36)
 6509.             qmm(1 + $I_L6504_36) = qm(1 + $I_L6504_36)
 6510.             wm(1 + $I_L6504_36, 1) = w(1 + $I_L6504_36, 1)
 6511.             wm(1 + $I_L6504_36, 2) = w(1 + $I_L6504_36, 2)
 6512.             wm(1 + $I_L6504_36, 3) = w(1 + $I_L6504_36, 3)
 6513.             capacm(1 + $I_L6504_36, 1) = capac(1 + $I_L6504_36, 1)
 6514.             capacm(1 + $I_L6504_36, 2) = capac(1 + $I_L6504_36, 2)
 6515.             if ( capacm(1 + $I_L6504_36, 2) > 0.0 ) then
 6515.                if ( tgm(1 + $I_L6504_36) > 273.16000000000003 ) then
 6522.                   if ( ( 1 + $I_L6504_36 ) <= 0 .or. ( 1 + $I_L6504_36 ) > t$70 ) then
 6522.                       _substr(t$1984,1,13) = 'Sfc_SSiB.f90'
 6522.                       _substr(t$1985,1,7) = 'CAPACM'
 6522.                      t$1960 = 1 + $I_L6504_36
 6522.                      call _bounds_error(  _substr(t$1984,1,13), 6522,  _substr(t$1985,1,7), 1, 1, t$70, t$1960, t$1983 )
 6522.                   endif
 6522.                   if ( ( 1 + $I_L6504_36 ) <= 0 .or. ( 1 + $I_L6504_36 ) > t$70 ) then
 6522.                       _substr(t$1987,1,13) = 'Sfc_SSiB.f90'
 6522.                       _substr(t$1988,1,4) = 'TGM'
 6522.                      t$1964 = 1 + $I_L6504_36
 6522.                      call _bounds_error(  _substr(t$1987,1,13), 6522,  _substr(t$1988,1,4), 1, 1, t$70, t$1964, t$1986 )
 6522.                   endif
 6522.                   $Unit_temp_O4 = nfprt
 6522.                   $_IOitem_P4(0) = 0
 6522.                   $_IOitem_P4(1) = latitu
 6522.                   $_IOitem_P4(2) = ( 1 + $I_L6504_36 )
 6522.                   $_IOitem_P5(0) = capacm(1 + $I_L6504_36, 2)
 6522.                   $_IOitem_P5(1) = tgm(1 + $I_L6504_36)
 6522.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, t$74,  _substr(t$73,1,91), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P4(:( 0, 2, 1 )), 0x2000200000000L ), _iotype( $_IOitem_P5(:( 0, 1, 1 )), 0x804060300000000L ) ) )
 6522.                endif
 6522.             endif
 6524.             $I_L6504_36 = 1 + $I_L6504_36
 6523.             if ( $I_L6504_36 >= nmax ) exit
 6523.          enddo
 6525.          $I_L6525_38 = 0
 6525. !dir$ ivdep
 6525.          do
 6526.             td0(1 + $I_L6525_38) = td(1 + $I_L6525_38)
 6527.             tg0(1 + $I_L6525_38) = tg(1 + $I_L6525_38)
 6528.             tc0(1 + $I_L6525_38) = tc(1 + $I_L6525_38)
 6529.             tm0(1 + $I_L6525_38) = tm(1 + $I_L6525_38)
 6530.             qm0(1 + $I_L6525_38) = qm(1 + $I_L6525_38)
 6531.             w0(1 + $I_L6525_38, 1) = w(1 + $I_L6525_38, 1)
 6532.             w0(1 + $I_L6525_38, 2) = w(1 + $I_L6525_38, 2)
 6533.             w0(1 + $I_L6525_38, 3) = w(1 + $I_L6525_38, 3)
 6534.             capac0(1 + $I_L6525_38, 1) = capac(1 + $I_L6525_38, 1)
 6535.             capac0(1 + $I_L6525_38, 2) = capac(1 + $I_L6525_38, 2)
 6536.             $I_L6525_38 = 1 + $I_L6525_38
 6525.             if ( $I_L6525_38 >= nmax ) exit
 6525.          enddo
 6525.       endif
 6542.       return
 6542.       end
 6542.       
 6544.       
 6544.       subroutine albedo( ncols, month2, nmax, itype, tc, tg, tm, qm, td, capac, w, tcm, tgm, tmm, qmm, tdm, capacm, wm, satcap, extk, radfac, closs, gloss, thermk, p1f, p2f, zlwup, salb, tgeff, cosz, nsx, latco, imask, avisb, avisd, anirb, anird, tsea, zenith )
 6544.       t$75 = ncols
 6557.       t$842 = _zla( 0, ncols )
 6544.       t$843 = _zla( 0, ncols )
 6544.       t$844 = 2 * _zla( 0, ncols )
 6544.       t$845 = 3 * _zla( 0, ncols )
 6544.       t$846 = 2 * _zla( 0, ncols )
 6544.       t$847 = 6 * _zla( 0, ncols )
 6544.       t$848 = 12 * _zla( 0, ncols )
 6544.       t$849 = 4 * _zla( 0, ncols )
 6599.       if ( nmax > 0 ) then
 6601.          $I_L6601_8 = 0
 6601. !dir$ ivdep
 6601.          do
 6602.             tm(1 + $I_L6601_8) = tmm(1 + $I_L6601_8)
 6603.             qm(1 + $I_L6601_8) = qmm(1 + $I_L6601_8)
 6604.             td(1 + $I_L6601_8) = tdm(1 + $I_L6601_8)
 6605.             tg(1 + $I_L6601_8) = tgm(1 + $I_L6601_8)
 6606.             tc(1 + $I_L6601_8) = tcm(1 + $I_L6601_8)
 6607.             capac(1 + $I_L6601_8, 1) = capacm(1 + $I_L6601_8, 1)
 6608.             capac(1 + $I_L6601_8, 2) = capacm(1 + $I_L6601_8, 2)
 6609.             w(1 + $I_L6601_8, 1) = wm(1 + $I_L6601_8, 1)
 6610.             w(1 + $I_L6601_8, 2) = wm(1 + $I_L6601_8, 2)
 6611.             w(1 + $I_L6601_8, 3) = wm(1 + $I_L6601_8, 3)
 6612.             $I_L6601_8 = 1 + $I_L6601_8
 6601.             if ( $I_L6601_8 >= nmax ) exit
 6601.          enddo
 6616.          t$1996 = ( max( 0, nmax ) )
 6616.          t$2000 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
 6616.          $F_A33 = nmax
 6616.          $I_A2 = 0
 6616.          do
 6616.             $I_A1 = 0
 6616. !dir$ ivdep
 6616.             do
 6616.                t$1999(1 + $I_A1, 1 + $I_A2) = capac(1 + $I_A1, 1 + $I_A2)
 6616.                $I_A1 = 1 + $I_A1
 6616.                if ( $I_A1 >= $F_A33 ) exit
 6616.             enddo
 6616.             $I_A2 = 1 + $I_A2
 6616.             if ( $I_A2 >= 2 ) exit
 6616.          enddo
 6616.          t$2002 = ( max( 0, nmax ) )
 6616.          t$2006 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
 6616.          $F_A34 = nmax
 6616.          $I_A2 = 0
 6616.          do
 6616.             $I_A1 = 0
 6616. !dir$ ivdep
 6616.             do
 6616.                t$2005(1 + $I_A1, 1 + $I_A2) = satcap(1 + $I_A1, 1 + $I_A2)
 6616.                $I_A1 = 1 + $I_A1
 6616.                if ( $I_A1 >= $F_A34 ) exit
 6616.             enddo
 6616.             $I_A2 = 1 + $I_A2
 6616.             if ( $I_A2 >= 2 ) exit
 6616.          enddo
 6617.          t$2008 = ( max( 0, nmax ) )
 6617.          t$2014 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
 6617.          $F_A35 = nmax
 6617.          $I_A4 = 0
 6617.          do
 6617.             $I_A3 = 0
 6617.             do
 6617.                $I_A2 = 0
 6617.                do
 6617.                   $I_A1 = 0
 6617. !dir$ ivdep
 6617.                   do
 6617.                      t$2013(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 1 + $I_A4) = extk(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 1 + $I_A4)
 6617.                      $I_A1 = 1 + $I_A1
 6617.                      if ( $I_A1 >= $F_A35 ) exit
 6617.                   enddo
 6617.                   $I_A2 = 1 + $I_A2
 6617.                   if ( $I_A2 >= 2 ) exit
 6617.                enddo
 6617.                $I_A3 = 1 + $I_A3
 6617.                if ( $I_A3 >= 3 ) exit
 6617.             enddo
 6617.             $I_A4 = 1 + $I_A4
 6617.             if ( $I_A4 >= 2 ) exit
 6617.          enddo
 6617.          t$2016 = ( max( 0, nmax ) )
 6617.          t$2022 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
 6617.          $F_A36 = nmax
 6617.          $I_A4 = 0
 6617.          do
 6617.             $I_A3 = 0
 6617.             do
 6617.                $I_A2 = 0
 6617.                do
 6617.                   $I_A1 = 0
 6617. !dir$ ivdep
 6617.                   do
 6617.                      t$2021(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 1 + $I_A4) = radfac(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 1 + $I_A4)
 6617.                      $I_A1 = 1 + $I_A1
 6617.                      if ( $I_A1 >= $F_A36 ) exit
 6617.                   enddo
 6617.                   $I_A2 = 1 + $I_A2
 6617.                   if ( $I_A2 >= 2 ) exit
 6617.                enddo
 6617.                $I_A3 = 1 + $I_A3
 6617.                if ( $I_A3 >= 3 ) exit
 6617.             enddo
 6617.             $I_A4 = 1 + $I_A4
 6617.             if ( $I_A4 >= 2 ) exit
 6617.          enddo
 6619.          t$2024 = ( max( 0, nmax ) )
 6619.          t$2029 = int( _alloc( max( 0, 32 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
 6619.          $F_A37 = nmax
 6619.          $I_A3 = 0
 6619.          do
 6619.             $I_A2 = 0
 6619.             do
 6619.                $I_A1 = 0
 6619. !dir$ ivdep
 6619.                do
 6619.                   t$2028(1 + $I_A1, 1 + $I_A2, 1 + $I_A3) = salb(1 + $I_A1, 1 + $I_A2, 1 + $I_A3)
 6619.                   $I_A1 = 1 + $I_A1
 6619.                   if ( $I_A1 >= $F_A37 ) exit
 6619.                enddo
 6619.                $I_A2 = 1 + $I_A2
 6619.                if ( $I_A2 >= 2 ) exit
 6619.             enddo
 6619.             $I_A3 = 1 + $I_A3
 6619.             if ( $I_A3 >= 2 ) exit
 6619.          enddo
 6614.          call radalb( nmax, month2(1), nmax, itype(1), tc(1), tg(1), t$1999(1, 1), t$2005(1, 1), t$2013(1, 1, 1, 1), t$2021(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), zlwup(1), t$2028(1, 1, 1), tgeff(1), cosz(1), nsx(1), latco )
 6614.          $F_A38 = nmax
 6614.          $I_A3 = 0
 6614.          do
 6614.             $I_A2 = 0
 6614.             do
 6614.                $I_A1 = 0
 6614. !dir$ ivdep
 6614.                do
 6614.                   salb(1 + $I_A1, 1 + $I_A2, 1 + $I_A3) = t$2028(1 + $I_A1, 1 + $I_A2, 1 + $I_A3)
 6614.                   $I_A1 = 1 + $I_A1
 6614.                   if ( $I_A1 >= $F_A38 ) exit
 6614.                enddo
 6614.                $I_A2 = 1 + $I_A2
 6614.                if ( $I_A2 >= 2 ) exit
 6614.             enddo
 6614.             $I_A3 = 1 + $I_A3
 6614.             if ( $I_A3 >= 2 ) exit
 6614.          enddo
 6619.          _free( t$2029 )
 6614.          $F_A39 = nmax
 6614.          $I_A4 = 0
 6614.          do
 6614.             $I_A3 = 0
 6614.             do
 6614.                $I_A2 = 0
 6614.                do
 6614.                   $I_A1 = 0
 6614. !dir$ ivdep
 6614.                   do
 6614.                      radfac(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 1 + $I_A4) = t$2021(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 1 + $I_A4)
 6614.                      $I_A1 = 1 + $I_A1
 6614.                      if ( $I_A1 >= $F_A39 ) exit
 6614.                   enddo
 6614.                   $I_A2 = 1 + $I_A2
 6614.                   if ( $I_A2 >= 2 ) exit
 6614.                enddo
 6614.                $I_A3 = 1 + $I_A3
 6614.                if ( $I_A3 >= 3 ) exit
 6614.             enddo
 6614.             $I_A4 = 1 + $I_A4
 6614.             if ( $I_A4 >= 2 ) exit
 6614.          enddo
 6617.          _free( t$2022 )
 6614.          $F_A40 = nmax
 6614.          $I_A4 = 0
 6614.          do
 6614.             $I_A3 = 0
 6614.             do
 6614.                $I_A2 = 0
 6614.                do
 6614.                   $I_A1 = 0
 6614. !dir$ ivdep
 6614.                   do
 6614.                      extk(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 1 + $I_A4) = t$2013(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 1 + $I_A4)
 6614.                      $I_A1 = 1 + $I_A1
 6614.                      if ( $I_A1 >= $F_A40 ) exit
 6614.                   enddo
 6614.                   $I_A2 = 1 + $I_A2
 6614.                   if ( $I_A2 >= 2 ) exit
 6614.                enddo
 6614.                $I_A3 = 1 + $I_A3
 6614.                if ( $I_A3 >= 3 ) exit
 6614.             enddo
 6614.             $I_A4 = 1 + $I_A4
 6614.             if ( $I_A4 >= 2 ) exit
 6614.          enddo
 6617.          _free( t$2014 )
 6614.          $F_A41 = nmax
 6614.          $I_A2 = 0
 6614.          do
 6614.             $I_A1 = 0
 6614. !dir$ ivdep
 6614.             do
 6614.                satcap(1 + $I_A1, 1 + $I_A2) = t$2005(1 + $I_A1, 1 + $I_A2)
 6614.                $I_A1 = 1 + $I_A1
 6614.                if ( $I_A1 >= $F_A41 ) exit
 6614.             enddo
 6614.             $I_A2 = 1 + $I_A2
 6614.             if ( $I_A2 >= 2 ) exit
 6614.          enddo
 6616.          _free( t$2006 )
 6616.          _free( t$2000 )
 6616.       endif
 6622.       $ncount_S2 = 0
 6623.       if ( ncols > 0 ) then
 6623.          $I_L6623_10 = 0
 6623. !dir$ ivdep
 6623.          do
 6624.             if ( imask(1 + $I_L6623_10) > 0 ) then
 6625.                $ncount_S2 = 1 + $ncount_S2
 6626.                avisb(1 + $I_L6623_10) = salb($ncount_S2, 1, 1)
 6627.                avisd(1 + $I_L6623_10) = salb($ncount_S2, 1, 2)
 6628.                anirb(1 + $I_L6623_10) = salb($ncount_S2, 2, 1)
 6629.                anird(1 + $I_L6623_10) = salb($ncount_S2, 2, 2)
 6630.             else if ( abs( tsea(1 + $I_L6623_10) ) >= 271.17000000000002 ) then
 6631.                $f_S3 = max( 0.0, zenith(1 + $I_L6623_10) )
 6634.                avisb(1 + $I_L6623_10) = ( 1.2347e-1 + $f_S3 * ( 3.4666999999999998e-1 + $f_S3 * ( -1.7484999999999999 + $f_S3 * ( 2.0463 + -7.4839e-1 * $f_S3 ) ) ) )
 6635.                avisd(1 + $I_L6623_10) = 4.19e-2
 6636.                anirb(1 + $I_L6623_10) = ( 1.2347e-1 + $f_S3 * ( 3.4666999999999998e-1 + $f_S3 * ( -1.7484999999999999 + $f_S3 * ( 2.0463 + -7.4839e-1 * $f_S3 ) ) ) )
 6637.                anird(1 + $I_L6623_10) = 4.19e-2
 6637.             else
 6639.                avisb(1 + $I_L6623_10) = 8.0000000000000004e-1
 6640.                avisd(1 + $I_L6623_10) = 8.0000000000000004e-1
 6641.                anirb(1 + $I_L6623_10) = 4.0000000000000002e-1
 6642.                anird(1 + $I_L6623_10) = 4.0000000000000002e-1
 6642.             endif
 6644.             $I_L6623_10 = 1 + $I_L6623_10
 6643.             if ( $I_L6623_10 >= ncols ) exit
 6643.          enddo
 6643.       endif
 6646.       return
 6646.       end
 6646.       
 6652.       
 6652.       subroutine radalb( ncols, mon, nmax, itype, tc, tg, capac, satcap, extk, radfac, closs, gloss, thermk, p1f, p2f, zlwup, salb, tgeff, cosz, nsx, latitu )
 6652.       t$79 = ncols
 6735.       t$850 = _zla( 0, ncols )
 6652.       t$851 = _zla( 0, ncols )
 6652.       t$852 = 2 * _zla( 0, ncols )
 6652.       t$853 = 2 * _zla( 0, ncols )
 6652.       t$854 = 6 * _zla( 0, ncols )
 6652.       t$855 = 12 * _zla( 0, ncols )
 6652.       t$856 = 4 * _zla( 0, ncols )
 6761.       t$859 = 8 * _zla( 0, ncols )
 6763.       t$860 = 8 * _zla( 0, ncols )
 6763.       t$862 = 16 * _zla( 0, ncols )
 6760.       t$863 = 16 * _zla( 0, ncols )
 6760.       t$865 = 24 * _zla( 0, ncols )
 6768.       t$866 = 24 * _zla( 0, ncols )
 6768.       t$868 = 32 * _zla( 0, ncols )
 6769.       t$869 = 32 * _zla( 0, ncols )
 6769.       t$871 = 40 * _zla( 0, ncols )
 6652.       t$83 = nmax
 6795.       t$872 = _zla( 0, nmax )
 6795.       t$874 = 4 * _zla( 0, nmax ) + 40 * _zla( 0, ncols )
 6794.       t$876 = 8 * _zla( 0, nmax ) + 40 * _zla( 0, ncols )
 6762.       t$877 = 8 * _zla( 0, nmax ) + 40 * _zla( 0, ncols )
 6762.       t$879 = 8 * _zla( 0, nmax ) + 48 * _zla( 0, ncols )
 6780.       t$881 = 48 * _zla( 0, ncols ) + 12 * _zla( 0, nmax )
 6777.       t$883 = 12 * _zla( 0, nmax ) + 52 * _zla( 0, ncols )
 6776.       t$885 = 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols )
 6764.       t$886 = 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 )
 6764.       t$888 = 8 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 )
 6765.       t$889 = 8 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 )
 6765.       t$891 = 16 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 )
 6766.       t$892 = 16 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 )
 6766.       t$894 = 24 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 )
 6652.       t$895 = _zla( 0, nmax )
 6652.       t$896 = 18 * _zla( 0, nmax )
 6773.       t$897 = 24 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 )
 6773.       t$899 = 144 * _zla( 0, nmax ) + 24 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 )
 6767.       t$900 = 24 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 ) + 144 * _zla( 0, nmax )
 6767.       t$902 = 144 * _zla( 0, nmax ) + 32 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 )
 6757.       t$903 = 32 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 ) + 144 * _zla( 0, nmax )
 6757.       t$905 = 144 * _zla( 0, nmax ) + 48 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 )
 6652.       t$906 = 3 * _zla( 0, nmax )
 6774.       t$907 = 48 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 ) + 144 * _zla( 0, nmax )
 6774.       t$909 = 48 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 ) + 168 * _zla( 0, nmax )
 6770.       t$910 = 48 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 ) + 168 * _zla( 0, nmax )
 6770.       t$912 = 56 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 ) + 168 * _zla( 0, nmax )
 6756.       t$913 = 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 ) + 168 * _zla( 0, nmax ) + 56 * _zla( 0, ncols )
 6756.       t$915 = 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 ) + 168 * _zla( 0, nmax ) + 72 * _zla( 0, ncols )
 6652.       t$857 = int( _alloc( 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 ) + 168 * _zla( 0, nmax ) + 72 * _zla( 0, ncols ) ), 8 )
 6761.       t$858 = t$857
 6763.       t$861 = t$857 + 8 * _zla( 0, ncols )
 6760.       t$864 = t$857 + 16 * _zla( 0, ncols )
 6768.       t$867 = t$857 + 24 * _zla( 0, ncols )
 6769.       t$870 = t$857 + 32 * _zla( 0, ncols )
 6795.       t$873 = t$857 + 40 * _zla( 0, ncols )
 6794.       t$875 = t$857 + 4 * _zla( 0, nmax ) + 40 * _zla( 0, ncols )
 6762.       t$878 = t$857 + 8 * _zla( 0, nmax ) + 40 * _zla( 0, ncols )
 6780.       t$880 = t$857 + 8 * _zla( 0, nmax ) + 48 * _zla( 0, ncols )
 6777.       t$882 = t$857 + 48 * _zla( 0, ncols ) + 12 * _zla( 0, nmax )
 6776.       t$884 = t$857 + 12 * _zla( 0, nmax ) + 52 * _zla( 0, ncols )
 6764.       t$887 = t$857 + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 )
 6765.       t$890 = t$857 + 8 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 )
 6766.       t$893 = t$857 + 16 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 )
 6773.       t$898 = t$857 + 24 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 )
 6767.       t$901 = t$857 + 144 * _zla( 0, nmax ) + 24 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 )
 6757.       t$904 = t$857 + 144 * _zla( 0, nmax ) + 32 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 )
 6774.       t$908 = t$857 + 144 * _zla( 0, nmax ) + 48 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 )
 6770.       t$911 = t$857 + 48 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 ) + 168 * _zla( 0, nmax )
 6756.       t$914 = t$857 + 56 * _zla( 0, ncols ) + 8 * ( ( 12 * _zla( 0, nmax ) + 56 * _zla( 0, ncols ) + 7 ) / 8 ) + 168 * _zla( 0, nmax )
 6797.       if ( nmax > 0 ) then
 6797.          $I_L6797_202 = 0
 6797. !dir$ ivdep
 6797.          do
 6799.             zlt2(1 + $I_L6797_202, 1) = (zlt_gbl%base_addr)(1 + $I_L6797_202, latitu, 1, 0)
 6800.             zlt2(1 + $I_L6797_202, 2) = (zlt_gbl%base_addr)(1 + $I_L6797_202, latitu, 2, 0)
 6801.             vcover(1 + $I_L6797_202, 1) = (vcover_gbl%base_addr)(1 + $I_L6797_202, latitu, 1, 0)
 6802.             vcover(1 + $I_L6797_202, 2) = (vcover_gbl%base_addr)(1 + $I_L6797_202, latitu, 2, 0)
 6803.             f(1 + $I_L6797_202) = max( 1.746e-2, cosz(1 + $I_L6797_202) )
 6804.             $I_L6797_202 = 1 + $I_L6797_202
 6797.             if ( $I_L6797_202 >= nmax ) exit
 6797.          enddo
 6808.          $I_L6808_204 = 0
 6808. !dir$ ivdep
 6808.          do
 6809.             $deltg_WR0_R0 = 273.16000000000003 + -tg(1 + $I_L6808_204)
 6810.             fmelt(1 + $I_L6808_204) = 1.0
 6811.             if ( abs( $deltg_WR0_R0 ) < 5.0e-1 ) then
 6811.                if ( $deltg_WR0_R0 > 0.0 ) then
 6812.                   fmelt(1 + $I_L6808_204) = 5.9999999999999998e-1
 6812.                endif
 6812.             endif
 6834.             if ( tg(1 + $I_L6808_204) > 273.16000000000003 ) then
 6835.                scov2(1 + $I_L6808_204) = 0.0
 6835.             else
 6837.                scov2(1 + $I_L6808_204) = min( 1.0, 250.0 * capac(1 + $I_L6808_204, 2) )
 6837.             endif
 6814.             $I_L6808_204 = 1 + $I_L6808_204
 6813.             if ( $I_L6808_204 >= nmax ) exit
 6813.          enddo
 6845.          $I_L6845_210 = 0
 6845. !dir$ ivdep
 6845.          do
 6846.             ml(1 + $I_L6845_210) = cvmg( 2, 1, fmelt(1 + $I_L6845_210) /= 1.0 )
 6851.             $I_L6845_210 = 1 + $I_L6845_210
 6845.             if ( $I_L6845_210 >= nmax ) exit
 6845.          enddo
 6845.       endif
 6815.       $F_A33 = ncols
 6815.       if ( ncols > 0 ) then
 6815.          $I_L6815_244 = 0
 6815. !dir$ ivdep
 6815.          do
 6815.             ntyp(1 + $I_L6815_244) = itype(1 + $I_L6815_244)
 6815.             $I_L6815_244 = 1 + $I_L6815_244
 6815.             if ( $I_L6815_244 >= $F_A33 ) exit
 6815.          enddo
 6815.       endif
 6816.       if ( nmax > 0 ) then
 6816.          $I_L6816_206 = 0
 6816. !dir$ ivdep
 6816.          do
 6818.             $satcap_WR0_R1 = 1.0e-4 * zlt2(1 + $I_L6816_206, 1)
 6819.             satcap(1 + $I_L6816_206, 2) = 1.0e-4 * zlt2(1 + $I_L6816_206, 2)
 6820.             $depcov_WR0_R2 = max( 0.0, 5.0 * capac(1 + $I_L6816_206, 2) + -(z1%base_addr)(ntyp(1 + $I_L6816_206), mon(1 + $I_L6816_206), 0) )
 6821.             $depcov_WR0_R2 = min( $depcov_WR0_R2, 9.4999999999999996e-1 * ( (z2%base_addr)(ntyp(1 + $I_L6816_206), mon(1 + $I_L6816_206), 0) + -(z1%base_addr)(ntyp(1 + $I_L6816_206), mon(1 + $I_L6816_206), 0) ) )
 6822.             $satcap_WR0_R1 = $satcap_WR0_R1 * ( 1.0 + -( $depcov_WR0_R2 * 1.0/( (z2%base_addr)(ntyp(1 + $I_L6816_206), mon(1 + $I_L6816_206), 0) + -(z1%base_addr)(ntyp(1 + $I_L6816_206), mon(1 + $I_L6816_206), 0) ) ) )
 6822.             satcap(1 + $I_L6816_206, 1) = $satcap_WR0_R1
 6824.             $I_L6816_206 = 1 + $I_L6816_206
 6816.             if ( $I_L6816_206 >= nmax ) exit
 6816.          enddo
 6826.          $I_L6826_208 = 0
 6826. !dir$ ivdep
 6826.          do
 6827.             scov(1 + $I_L6826_208) = 0.0
 6828.             if ( tc(1 + $I_L6826_208) <= 273.16000000000003 ) then
 6829.                scov(1 + $I_L6826_208) = min( 5.0e-1, ( capac(1 + $I_L6826_208, 1) * 1.0/satcap(1 + $I_L6826_208, 1) ) )
 6829.             endif
 6831.             $I_L6826_208 = 1 + $I_L6826_208
 6830.             if ( $I_L6826_208 >= nmax ) exit
 6830.          enddo
 6878.          $I_L6878_218 = 0
 6878. !dir$ ivdep
 6878.          do
 6879.             flagscov(1 + $I_L6878_218) = scov(1 + $I_L6878_218) < 2.5000000000000001e-2 .and. scov2(1 + $I_L6878_218) < 2.5000000000000001e-2
 6880.             $I_L6878_218 = 1 + $I_L6878_218
 6878.             if ( $I_L6878_218 >= nmax ) exit
 6878.          enddo
 6878.       endif
 6844.       $F_A34 = ncols
 6844.       if ( ncols > 0 ) then
 6844.          $I_L6844_246 = 0
 6844. !dir$ ivdep
 6844.          do
 6844.             monx(1 + $I_L6844_246) = mon(1 + $I_L6844_246)
 6844.             $I_L6844_246 = 1 + $I_L6844_246
 6844.             if ( $I_L6844_246 >= $F_A34 ) exit
 6844.          enddo
 6844.       endif
 6852.       $F_A35 = ncols
 6852.       if ( ncols > 0 ) then
 6852.          $I_L6852_248 = 0
 6852. !dir$ ivdep
 6852.          do
 6852.             ntyp(1 + $I_L6852_248) = itype(1 + $I_L6852_248)
 6852.             $I_L6852_248 = 1 + $I_L6852_248
 6852.             if ( $I_L6852_248 >= $F_A35 ) exit
 6852.          enddo
 6852.       endif
 6854.       if ( nmax > 0 ) then
 6854.          $I_L6854_212 = 0
 6854. !dir$ ivdep
 6854.          do
 6855.             mon(1 + $I_L6854_212) = monx(1 + $I_L6854_212)
 6856.             flagtyp(1 + $I_L6854_212) = .true.
 6857.             if ( ntyp(1 + $I_L6854_212) == 13 ) then
 6857.                ntyp(1 + $I_L6854_212) = 11
 6857.             endif
 6858.             if ( ntyp(1 + $I_L6854_212) == 12 ) then
 6858.                if ( nsx(1 + $I_L6854_212) > 0 ) then
 6859.                   ntyp(1 + $I_L6854_212) = 13
 6860.                   mon(1 + $I_L6854_212) = nsx(1 + $I_L6854_212)
 6861.                   if ( nsx(1 + $I_L6854_212) == 1 ) then
 6861.                      if ( monx(1 + $I_L6854_212) >= 9 ) then
 6861.                         if ( monx(1 + $I_L6854_212) <= 11 ) then
 6861.                            mon(1 + $I_L6854_212) = 7
 6861.                         endif
 6861.                      endif
 6861.                   endif
 6862.                   flagtyp(1 + $I_L6854_212) = .false.
 6862.                endif
 6862.             endif
 6864.             $I_L6854_212 = 1 + $I_L6854_212
 6863.             if ( $I_L6854_212 >= nmax ) exit
 6863.          enddo
 6866.          $I_L6866_214 = 0
 6866. !dir$ ivdep
 6866.          do
 6865.             $SCA_mon_I154 = mon(1 + $I_L6866_214)
 6867.             xmi1(1 + $I_L6866_214, 1) = (xmiu%base_addr)($SCA_mon_I154, 1, 0)
 6867.             xmi1(1 + $I_L6866_214, 2) = (xmiu%base_addr)($SCA_mon_I154, 2, 0)
 6867.             xmi1(1 + $I_L6866_214, 3) = (xmiu%base_addr)($SCA_mon_I154, 3, 0)
 6868.             $I_L6866_214 = 1 + $I_L6866_214
 6868.             if ( $I_L6866_214 >= nmax ) exit
 6868.          enddo
 6871.          $I_L6871_254 = 0
 6871. !dir$ ivdep
 6871. !dir$ blocking_size( 0, 0 )
 6871.          do
 6870.             $SCA_flagtyp_I155 = flagtyp(1 + $I_L6871_254)
 6870.             $I_L6870_216 = 0
 6870. !dir$ blocking_size( 3, 3 )
 6870.             do
 6872.                if ( $SCA_flagtyp_I155 == 0 ) then
 6872.                   xmi1(1 + $I_L6871_254, 1 + $I_L6870_216) = (xmiw%base_addr)(mon(1 + $I_L6871_254), 1 + $I_L6870_216, 0)
 6872.                endif
 6874.                $I_L6870_216 = 1 + $I_L6870_216
 6872.                if ( $I_L6870_216 >= 3 ) exit
 6872.             enddo
 6873.             $I_L6871_254 = 1 + $I_L6871_254
 6873.             if ( $I_L6871_254 >= nmax ) exit
 6873.          enddo
 6883.          $I_L6883_256 = 0
 6883. !dir$ ivdep
 6883. !dir$ blocking_size( 0, 0 )
 6883.          do
 6882.             $SCA_flagscov_I157 = flagscov(1 + $I_L6883_256)
 6882.             $I_L6882_220 = 0
 6882. !dir$ unroll 2
 6882. !dir$ blocking_size( 9, 9 )
 6882.             do
 6884.                if ( $SCA_flagscov_I157 ) then
 6885.                   temp(1 + $I_L6883_256, 1 + $I_L6882_220) = (cledir%base_addr)(ntyp(1 + $I_L6883_256), mon(1 + $I_L6883_256), 1 + $I_L6882_220, 1, 0) + (cledir%base_addr)(ntyp(1 + $I_L6883_256), mon(1 + $I_L6883_256), 1 + $I_L6882_220, 2, 0) * f(1 + $I_L6883_256) + (cledir%base_addr)(ntyp(1 + $I_L6883_256), mon(1 + $I_L6883_256), 1 + $I_L6882_220, 3, 0) * ( f(1 + $I_L6883_256) * f(1 + $I_L6883_256) )
 6887.                   temp(1 + $I_L6883_256, 10 + $I_L6882_220) = (cledfu%base_addr)(ntyp(1 + $I_L6883_256), mon(1 + $I_L6883_256), 1 + $I_L6882_220, 0)
 6887.                endif
 6890.                $I_L6882_220 = 1 + $I_L6882_220
 6888.                if ( $I_L6882_220 >= 9 ) exit
 6888.             enddo
 6889.             $I_L6883_256 = 1 + $I_L6883_256
 6889.             if ( $I_L6883_256 >= nmax ) exit
 6889.          enddo
 6889.       endif
 6891.       $F_A36 = nmax
 6891.       if ( nmax > 0 ) then
 6891.          $I_L6891_250 = 0
 6891. !dir$ ivdep
 6891.          do
 6891.             flagscov(1 + $I_L6891_250) = flagscov(1 + $I_L6891_250) == 0
 6891.             $I_L6891_250 = 1 + $I_L6891_250
 6891.             if ( $I_L6891_250 >= $F_A36 ) exit
 6891.          enddo
 6893.          $I_L6893_258 = 0
 6893. !dir$ ivdep
 6893. !dir$ blocking_size( 0, 0 )
 6893.          do
 6892.             $SCA_flagscov_I161 = flagscov(1 + $I_L6893_258)
 6892.             $I_L6892_222 = 0
 6892. !dir$ unroll 2
 6892. !dir$ blocking_size( 9, 9 )
 6892.             do
 6894.                if ( $SCA_flagscov_I161 ) then
 6898.                   temp(1 + $I_L6893_258, 1 + $I_L6892_222) = (cedir%base_addr)(ntyp(1 + $I_L6893_258), mon(1 + $I_L6893_258), 1 + $I_L6892_222, 1, 0) + f(1 + $I_L6893_258) * (cedir%base_addr)(ntyp(1 + $I_L6893_258), mon(1 + $I_L6893_258), 1 + $I_L6892_222, 2, 0) + (cedir%base_addr)(ntyp(1 + $I_L6893_258), mon(1 + $I_L6893_258), 1 + $I_L6892_222, 3, 0) * ( f(1 + $I_L6893_258) * f(1 + $I_L6893_258) )
 6900.                   temp(1 + $I_L6893_258, 10 + $I_L6892_222) = (cedfu%base_addr)(ntyp(1 + $I_L6893_258), mon(1 + $I_L6893_258), 1 + $I_L6892_222, 0)
 6900.                endif
 6903.                $I_L6892_222 = 1 + $I_L6892_222
 6901.                if ( $I_L6892_222 >= 9 ) exit
 6901.             enddo
 6902.             $I_L6893_258 = 1 + $I_L6893_258
 6902.             if ( $I_L6893_258 >= nmax ) exit
 6902.          enddo
 6905.          $I_L6905_260 = 0
 6905.          do
 6904.             $SCA_flagscov_I165 = flagscov(1 + $I_L6905_260)
 6906.             if ( $SCA_flagscov_I165 ) then
 6906.                if ( ntyp(1 + $I_L6905_260) == 11 ) then
 6909.                   $SC_mon_I195 = mon(1 + $I_L6905_260)
 6909.                   $SC_ml_I193 = ml(1 + $I_L6905_260)
 6909.                   $SC_scov2_I192 = scov2(1 + $I_L6905_260)
 6909.                   $SC_ntyp_I194 = ntyp(1 + $I_L6905_260)
 6904.                   $I_L6904_224 = 0
 6904. !dir$ ivdep
 6904.                   do
 6909.                      temp(1 + $I_L6905_260, 1 + $I_L6904_224) = (cedir2%base_addr)($SC_ml_I193, $SC_ntyp_I194, $SC_mon_I195, 1 + $I_L6904_224, 3, 1, 0) + (cedir2%base_addr)($SC_ml_I193, $SC_ntyp_I194, $SC_mon_I195, 1 + $I_L6904_224, 3, 2, 0) * $SC_scov2_I192 + (cedir2%base_addr)($SC_ml_I193, $SC_ntyp_I194, $SC_mon_I195, 1 + $I_L6904_224, 3, 3, 0) * ( $SC_scov2_I192 * $SC_scov2_I192 ) + temp(1 + $I_L6905_260, 1 + $I_L6904_224)
 6912.                      temp(1 + $I_L6905_260, 10 + $I_L6904_224) = (cedfu2%base_addr)($SC_ml_I193, $SC_ntyp_I194, $SC_mon_I195, 1 + $I_L6904_224, 1, 0) + (cedfu2%base_addr)($SC_ml_I193, $SC_ntyp_I194, $SC_mon_I195, 1 + $I_L6904_224, 2, 0) * $SC_scov2_I192 + (cedfu2%base_addr)($SC_ml_I193, $SC_ntyp_I194, $SC_mon_I195, 1 + $I_L6904_224, 3, 0) * ( $SC_scov2_I192 * $SC_scov2_I192 ) + temp(1 + $I_L6905_260, 10 + $I_L6904_224)
 6917.                      $I_L6904_224 = 1 + $I_L6904_224
 6915.                      if ( $I_L6904_224 >= 6 ) exit
 6915.                   enddo
 6915.                endif
 6915.             endif
 6916.             $I_L6905_260 = 1 + $I_L6905_260
 6916.             if ( $I_L6905_260 >= nmax ) exit
 6916.          enddo
 6918.          $I_L6918_262 = 0
 6918.          do
 6919.             if ( flagscov(1 + $I_L6918_262) ) then
 6919.                if ( ntyp(1 + $I_L6918_262) /= 11 ) then
 6920.                   $k2_S21 = 1
 6921.                   $k1_S20 = 2
 6923.                   $SC_f_I177 = f(1 + $I_L6918_262)
 6922.                   $I_L6922_226 = 0
 6922. !dir$ ivdep
 6922.                   do
 6923.                      if ( $SC_f_I177 < xmi1(1 + $I_L6918_262, 3 + -$I_L6922_226) ) then
 6926.                         $k1_S20 = ( 4 + -$I_L6922_226 )
 6927.                         $k2_S21 = ( 3 + -$I_L6922_226 )
 6927.                         goto 10
 6927.                      endif
 6930.                      $I_L6922_226 = 1 + $I_L6922_226
 6929.                      if ( $I_L6922_226 >= 3 ) exit
 6929.                   enddo
 6929.    10             continue
 6931.                   if ( $k1_S20 <= 3 ) then
 6931.                      xm1 = xmi1(1 + $I_L6918_262, $k1_S20)
 6931.                   endif
 6935.                   if ( scov(1 + $I_L6918_262) > 2.5000000000000001e-2 ) then
 6938.                      if ( $k2_S21 >= 3 .orelse. $k2_S21 <= 1 ) then
 6939.                         $SCA_scov_I171 = scov(1 + $I_L6918_262)
 6939.                         $SCA_ml_I172 = ml(1 + $I_L6918_262)
 6939.                         $SCA_ntyp_I173 = ntyp(1 + $I_L6918_262)
 6939.                         $SCA_mon_I174 = mon(1 + $I_L6918_262)
 6939.                         $I_L6939_228 = 0
 6939. !dir$ ivdep
 6939.                         do
 6940.                            temp(1 + $I_L6918_262, 1 + $I_L6939_228) = (cedir1%base_addr)($SCA_ml_I172, $SCA_ntyp_I173, $SCA_mon_I174, 1 + $I_L6939_228, $k2_S21, 1, 0) + (cedir1%base_addr)($SCA_ml_I172, $SCA_ntyp_I173, $SCA_mon_I174, 1 + $I_L6939_228, $k2_S21, 2, 0) * $SCA_scov_I171 + (cedir1%base_addr)($SCA_ml_I172, $SCA_ntyp_I173, $SCA_mon_I174, 1 + $I_L6939_228, $k2_S21, 3, 0) * ( $SCA_scov_I171 * $SCA_scov_I171 ) + temp(1 + $I_L6918_262, 1 + $I_L6939_228)
 6943.                            $I_L6939_228 = 1 + $I_L6939_228
 6939.                            if ( $I_L6939_228 >= 6 ) exit
 6939.                         enddo
 6939.                      else
 6945.                         $SCA_mon_I151 = mon(1 + $I_L6918_262)
 6945.                         $SCA_ntyp_I159 = ntyp(1 + $I_L6918_262)
 6945.                         $SCA_ml_I166 = ml(1 + $I_L6918_262)
 6945.                         $SCA_scov_I168 = scov(1 + $I_L6918_262)
 6945.                         $SCA_xmi1_I175 = xmi1(1 + $I_L6918_262, $k2_S21)
 6945.                         $I_L6945_230 = 0
 6945. !dir$ ivdep
 6945.                         do
 6946.                            $xtm1_S24 = (cedir1%base_addr)($SCA_ml_I166, $SCA_ntyp_I159, $SCA_mon_I151, 1 + $I_L6945_230, $k1_S20, 1, 0) + (cedir1%base_addr)($SCA_ml_I166, $SCA_ntyp_I159, $SCA_mon_I151, 1 + $I_L6945_230, $k1_S20, 2, 0) * $SCA_scov_I168 + (cedir1%base_addr)($SCA_ml_I166, $SCA_ntyp_I159, $SCA_mon_I151, 1 + $I_L6945_230, $k1_S20, 3, 0) * ( $SCA_scov_I168 * $SCA_scov_I168 )
 6949.                            $xtm2_S23 = (cedir1%base_addr)($SCA_ml_I166, $SCA_ntyp_I159, $SCA_mon_I151, 1 + $I_L6945_230, $k2_S21, 1, 0) + (cedir1%base_addr)($SCA_ml_I166, $SCA_ntyp_I159, $SCA_mon_I151, 1 + $I_L6945_230, $k2_S21, 2, 0) * $SCA_scov_I168 + (cedir1%base_addr)($SCA_ml_I166, $SCA_ntyp_I159, $SCA_mon_I151, 1 + $I_L6945_230, $k2_S21, 3, 0) * ( $SCA_scov_I168 * $SCA_scov_I168 )
 6952.                            temp(1 + $I_L6918_262, 1 + $I_L6945_230) = ( ( $xtm1_S24 * ( $SCA_xmi1_I175 + -$SC_f_I177 ) + $xtm2_S23 * ( $SC_f_I177 + -xm1 ) ) * 1.0/( $SCA_xmi1_I175 + -xm1 ) ) + temp(1 + $I_L6918_262, 1 + $I_L6945_230)
 6954.                            $I_L6945_230 = 1 + $I_L6945_230
 6945.                            if ( $I_L6945_230 >= 6 ) exit
 6945.                         enddo
 6945.                      endif
 6956.                      $SCA_mon_I150 = mon(1 + $I_L6918_262)
 6956.                      $SCA_ntyp_I158 = ntyp(1 + $I_L6918_262)
 6956.                      $SCA_ml_I164 = ml(1 + $I_L6918_262)
 6956.                      $SCA_scov_I167 = scov(1 + $I_L6918_262)
 6956.                      $I_L6956_232 = 0
 6956. !dir$ ivdep
 6956.                      do
 6957.                         temp(1 + $I_L6918_262, 10 + $I_L6956_232) = (cedfu1%base_addr)($SCA_ml_I164, $SCA_ntyp_I158, $SCA_mon_I150, 1 + $I_L6956_232, 1, 0) + (cedfu1%base_addr)($SCA_ml_I164, $SCA_ntyp_I158, $SCA_mon_I150, 1 + $I_L6956_232, 2, 0) * $SCA_scov_I167 + (cedfu1%base_addr)($SCA_ml_I164, $SCA_ntyp_I158, $SCA_mon_I150, 1 + $I_L6956_232, 3, 0) * ( $SCA_scov_I167 * $SCA_scov_I167 ) + temp(1 + $I_L6918_262, 10 + $I_L6956_232)
 6960.                         $I_L6956_232 = 1 + $I_L6956_232
 6956.                         if ( $I_L6956_232 >= 6 ) exit
 6956.                      enddo
 6956.                   endif
 6965.                   if ( scov2(1 + $I_L6918_262) > 2.5000000000000001e-2 ) then
 6968.                      if ( $k2_S21 >= 3 .orelse. $k2_S21 <= 1 ) then
 6969.                         $SCA_mon_I149 = mon(1 + $I_L6918_262)
 6969.                         $SCA_ntyp_I156 = ntyp(1 + $I_L6918_262)
 6969.                         $SCA_ml_I163 = ml(1 + $I_L6918_262)
 6969.                         $SCA_scov2_I176 = scov2(1 + $I_L6918_262)
 6969.                         $I_L6969_234 = 0
 6969. !dir$ ivdep
 6969.                         do
 6970.                            temp(1 + $I_L6918_262, 1 + $I_L6969_234) = (cedir2%base_addr)($SCA_ml_I163, $SCA_ntyp_I156, $SCA_mon_I149, 1 + $I_L6969_234, $k2_S21, 1, 0) + (cedir2%base_addr)($SCA_ml_I163, $SCA_ntyp_I156, $SCA_mon_I149, 1 + $I_L6969_234, $k2_S21, 2, 0) * $SCA_scov2_I176 + (cedir2%base_addr)($SCA_ml_I163, $SCA_ntyp_I156, $SCA_mon_I149, 1 + $I_L6969_234, $k2_S21, 3, 0) * ( $SCA_scov2_I176 * $SCA_scov2_I176 ) + temp(1 + $I_L6918_262, 1 + $I_L6969_234)
 6973.                            $I_L6969_234 = 1 + $I_L6969_234
 6969.                            if ( $I_L6969_234 >= 6 ) exit
 6969.                         enddo
 6969.                      else
 6975.                         $SCA_scov2_I145 = scov2(1 + $I_L6918_262)
 6975.                         $SCA_xmi1_I146 = xmi1(1 + $I_L6918_262, $k2_S21)
 6975.                         $SCA_mon_I148 = mon(1 + $I_L6918_262)
 6975.                         $SCA_ntyp_I153 = ntyp(1 + $I_L6918_262)
 6975.                         $SCA_ml_I162 = ml(1 + $I_L6918_262)
 6975.                         $I_L6975_236 = 0
 6975. !dir$ ivdep
 6975.                         do
 6976.                            $xtm1_S29 = (cedir2%base_addr)($SCA_ml_I162, $SCA_ntyp_I153, $SCA_mon_I148, 1 + $I_L6975_236, $k1_S20, 1, 0) + (cedir2%base_addr)($SCA_ml_I162, $SCA_ntyp_I153, $SCA_mon_I148, 1 + $I_L6975_236, $k1_S20, 2, 0) * $SCA_scov2_I145 + (cedir2%base_addr)($SCA_ml_I162, $SCA_ntyp_I153, $SCA_mon_I148, 1 + $I_L6975_236, $k1_S20, 3, 0) * ( $SCA_scov2_I145 * $SCA_scov2_I145 )
 6979.                            $xtm2_S28 = (cedir2%base_addr)($SCA_ml_I162, $SCA_ntyp_I153, $SCA_mon_I148, 1 + $I_L6975_236, $k2_S21, 1, 0) + (cedir2%base_addr)($SCA_ml_I162, $SCA_ntyp_I153, $SCA_mon_I148, 1 + $I_L6975_236, $k2_S21, 2, 0) * $SCA_scov2_I145 + (cedir2%base_addr)($SCA_ml_I162, $SCA_ntyp_I153, $SCA_mon_I148, 1 + $I_L6975_236, $k2_S21, 3, 0) * ( $SCA_scov2_I145 * $SCA_scov2_I145 )
 6982.                            temp(1 + $I_L6918_262, 1 + $I_L6975_236) = ( ( $xtm1_S29 * ( $SCA_xmi1_I146 + -$SC_f_I177 ) + $xtm2_S28 * ( $SC_f_I177 + -xm1 ) ) * 1.0/( $SCA_xmi1_I146 + -xm1 ) ) + temp(1 + $I_L6918_262, 1 + $I_L6975_236)
 6984.                            $I_L6975_236 = 1 + $I_L6975_236
 6975.                            if ( $I_L6975_236 >= 6 ) exit
 6975.                         enddo
 6975.                      endif
 6986.                      $SCA_scov2_I144 = scov2(1 + $I_L6918_262)
 6986.                      $SCA_mon_I147 = mon(1 + $I_L6918_262)
 6986.                      $SCA_ntyp_I152 = ntyp(1 + $I_L6918_262)
 6986.                      $SCA_ml_I160 = ml(1 + $I_L6918_262)
 6986.                      $I_L6986_238 = 0
 6986. !dir$ ivdep
 6986.                      do
 6987.                         temp(1 + $I_L6918_262, 10 + $I_L6986_238) = (cedfu2%base_addr)($SCA_ml_I160, $SCA_ntyp_I152, $SCA_mon_I147, 1 + $I_L6986_238, 1, 0) + (cedfu2%base_addr)($SCA_ml_I160, $SCA_ntyp_I152, $SCA_mon_I147, 1 + $I_L6986_238, 2, 0) * $SCA_scov2_I144 + (cedfu2%base_addr)($SCA_ml_I160, $SCA_ntyp_I152, $SCA_mon_I147, 1 + $I_L6986_238, 3, 0) * ( $SCA_scov2_I144 * $SCA_scov2_I144 ) + temp(1 + $I_L6918_262, 10 + $I_L6986_238)
 6990.                         $I_L6986_238 = 1 + $I_L6986_238
 6986.                         if ( $I_L6986_238 >= 6 ) exit
 6986.                      enddo
 6986.                   endif
 6986.                endif
 6986.             endif
 6993.             $I_L6918_262 = 1 + $I_L6918_262
 6992.             if ( $I_L6918_262 >= nmax ) exit
 6992.          enddo
 6995.          $I_L6995_240 = 0
 6995. !dir$ ivdep
 6995.          do
 6996.             radfac(1 + $I_L6995_240, 1, 1, 2) = temp(1 + $I_L6995_240, 10)
 6997.             radfac(1 + $I_L6995_240, 1, 2, 2) = temp(1 + $I_L6995_240, 11)
 6998.             radfac(1 + $I_L6995_240, 2, 1, 2) = temp(1 + $I_L6995_240, 12)
 6999.             radfac(1 + $I_L6995_240, 2, 2, 2) = temp(1 + $I_L6995_240, 13)
 7000.             salb(1 + $I_L6995_240, 1, 2) = temp(1 + $I_L6995_240, 14)
 7001.             salb(1 + $I_L6995_240, 2, 2) = temp(1 + $I_L6995_240, 15)
 7002.             p2f(1 + $I_L6995_240) = temp(1 + $I_L6995_240, 16)
 7003.             extk(1 + $I_L6995_240, 1, 1, 2) = temp(1 + $I_L6995_240, 17)
 7004.             extk(1 + $I_L6995_240, 2, 1, 2) = temp(1 + $I_L6995_240, 18)
 7005.             radfac(1 + $I_L6995_240, 1, 1, 1) = temp(1 + $I_L6995_240, 1)
 7006.             radfac(1 + $I_L6995_240, 1, 2, 1) = temp(1 + $I_L6995_240, 2)
 7007.             radfac(1 + $I_L6995_240, 2, 1, 1) = temp(1 + $I_L6995_240, 3)
 7008.             radfac(1 + $I_L6995_240, 2, 2, 1) = temp(1 + $I_L6995_240, 4)
 7009.             salb(1 + $I_L6995_240, 1, 1) = temp(1 + $I_L6995_240, 5)
 7010.             salb(1 + $I_L6995_240, 2, 1) = temp(1 + $I_L6995_240, 6)
 7011.             p1f(1 + $I_L6995_240) = temp(1 + $I_L6995_240, 7)
 7012.             extk(1 + $I_L6995_240, 1, 1, 1) = ( temp(1 + $I_L6995_240, 8) * 1.0/f(1 + $I_L6995_240) )
 7013.             extk(1 + $I_L6995_240, 2, 1, 1) = ( temp(1 + $I_L6995_240, 9) * 1.0/f(1 + $I_L6995_240) )
 7014.             extk(1 + $I_L6995_240, 1, 3, 1) = (cether%base_addr)(ntyp(1 + $I_L6995_240), mon(1 + $I_L6995_240), 1, 0)
 7015.             extk(1 + $I_L6995_240, 1, 3, 2) = (cether%base_addr)(ntyp(1 + $I_L6995_240), mon(1 + $I_L6995_240), 2, 0)
 7016.             extk(1 + $I_L6995_240, 2, 3, 1) = (cether%base_addr)(ntyp(1 + $I_L6995_240), mon(1 + $I_L6995_240), 1, 0)
 7017.             extk(1 + $I_L6995_240, 2, 3, 2) = (cether%base_addr)(ntyp(1 + $I_L6995_240), mon(1 + $I_L6995_240), 2, 0)
 7018.             $I_L6995_240 = 1 + $I_L6995_240
 6995.             if ( $I_L6995_240 >= nmax ) exit
 6995.          enddo
 7024.          $I_L7024_242 = 0
 7024. !dir$ ivdep
 7024.          do
 7025.             $tc4_WR0_R3 = tc(1 + $I_L7024_242) * tc(1 + $I_L7024_242) * tc(1 + $I_L7024_242) * tc(1 + $I_L7024_242)
 7026.             $tg4_WR0_R4 = tg(1 + $I_L7024_242) * tg(1 + $I_L7024_242) * tg(1 + $I_L7024_242) * tg(1 + $I_L7024_242)
 7028.             $zkat_WR0_R5 = ( extk(1 + $I_L7024_242, 1, 3, 2) * zlt2(1 + $I_L7024_242, 1) * 1.0/vcover(1 + $I_L7024_242, 1) )
 7030.             $zkat_WR0_R5 = min( -1.0e-4, max( expcut, -$zkat_WR0_R5 ) )
 7031.             $thermk_WR0_R6 = _expn( $zkat_WR0_R5 )
 7031.             thermk(1 + $I_L7024_242) = $thermk_WR0_R6
 7032.             $fac1_WR0_R7 = vcover(1 + $I_L7024_242, 1) * ( 1.0 + -$thermk_WR0_R6 )
 7035.             closs(1 + $I_L7024_242) = ( ( $tc4_WR0_R3 * $fac1_WR0_R7 * 1.134e-7 ) + $tg4_WR0_R4 * $fac1_WR0_R7 * -5.6699999999999998e-8 )
 7037.             gloss(1 + $I_L7024_242) = ( ( 5.6699999999999998e-8 * $tg4_WR0_R4 ) + $tc4_WR0_R3 * $fac1_WR0_R7 * -5.6699999999999998e-8 )
 7041.             $zlwup_WR0_R10 = 5.6699999999999998e-8 * ( $fac1_WR0_R7 * $tc4_WR0_R3 + $tg4_WR0_R4 * ( 1.0 + -( vcover(1 + $I_L7024_242, 1) * ( 1.0 + -$thermk_WR0_R6 ) ) ) )
 7041.             zlwup(1 + $I_L7024_242) = $zlwup_WR0_R10
 7043.             tgeff(1 + $I_L7024_242) = _sqrt( _sqrt( 17636684.30335097 * $zlwup_WR0_R10 ) )
 7044.             $I_L7024_242 = 1 + $I_L7024_242
 7024.             if ( $I_L7024_242 >= nmax ) exit
 7024.          enddo
 7024.       endif
 7019.       $F_A37 = ncols
 7019.       if ( ncols > 0 ) then
 7019.          $I_L7019_252 = 0
 7019. !dir$ ivdep
 7019.          do
 7019.             mon(1 + $I_L7019_252) = monx(1 + $I_L7019_252)
 7019.             $I_L7019_252 = 1 + $I_L7019_252
 7019.             if ( $I_L7019_252 >= $F_A37 ) exit
 7019.          enddo
 7019.       endif
 6652.       _free( t$857 )
 7045.       return
 7045.       end
 7045.       
 7054.       
 7054.       subroutine vegin( si1, sl1 )
 7111.       cedfu%header%a_contig = 1
 7111.       cedfu%dim_1%LB = 1
 7111.       cedfu%dim_1%EX = 13
 7111.       cedfu%dim_1%SM = 1
 7111.       cedfu%dim_2%LB = 1
 7111.       cedfu%dim_2%EX = 12
 7111.       cedfu%dim_2%SM = 13
 7111.       cedfu%dim_3%LB = 1
 7111.       cedfu%dim_3%EX = 9
 7111.       cedfu%dim_3%SM = 156
 7111.       $_allo_P0(0) = 0x1000000000001L
 7111.       $_allo_P0(1) = loc( cedfu )
 7111.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 7112.       cedir%header%a_contig = 1
 7112.       cedir%dim_1%LB = 1
 7112.       cedir%dim_1%EX = 13
 7112.       cedir%dim_1%SM = 1
 7112.       cedir%dim_2%LB = 1
 7112.       cedir%dim_2%EX = 12
 7112.       cedir%dim_2%SM = 13
 7112.       cedir%dim_3%LB = 1
 7112.       cedir%dim_3%EX = 9
 7112.       cedir%dim_3%SM = 156
 7112.       cedir%dim_4%LB = 1
 7112.       cedir%dim_4%EX = 3
 7112.       cedir%dim_4%SM = 1404
 7112.       $_allo_P1(0) = 0x1000000000001L
 7112.       $_allo_P1(1) = loc( cedir )
 7112.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 7113.       cedfu1%header%a_contig = 1
 7113.       cedfu1%dim_1%LB = 1
 7113.       cedfu1%dim_1%EX = 2
 7113.       cedfu1%dim_1%SM = 1
 7113.       cedfu1%dim_2%LB = 1
 7113.       cedfu1%dim_2%EX = 13
 7113.       cedfu1%dim_2%SM = 2
 7113.       cedfu1%dim_3%LB = 1
 7113.       cedfu1%dim_3%EX = 12
 7113.       cedfu1%dim_3%SM = 26
 7113.       cedfu1%dim_4%LB = 1
 7113.       cedfu1%dim_4%EX = 6
 7113.       cedfu1%dim_4%SM = 312
 7113.       cedfu1%dim_5%LB = 1
 7113.       cedfu1%dim_5%EX = 3
 7113.       cedfu1%dim_5%SM = 1872
 7113.       $_allo_P2(0) = 0x1000000000001L
 7113.       $_allo_P2(1) = loc( cedfu1 )
 7113.       call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 7114.       cedir1%header%a_contig = 1
 7114.       cedir1%dim_1%LB = 1
 7114.       cedir1%dim_1%EX = 2
 7114.       cedir1%dim_1%SM = 1
 7114.       cedir1%dim_2%LB = 1
 7114.       cedir1%dim_2%EX = 13
 7114.       cedir1%dim_2%SM = 2
 7114.       cedir1%dim_3%LB = 1
 7114.       cedir1%dim_3%EX = 12
 7114.       cedir1%dim_3%SM = 26
 7114.       cedir1%dim_4%LB = 1
 7114.       cedir1%dim_4%EX = 6
 7114.       cedir1%dim_4%SM = 312
 7114.       cedir1%dim_5%LB = 1
 7114.       cedir1%dim_5%EX = 3
 7114.       cedir1%dim_5%SM = 1872
 7114.       cedir1%dim_6%LB = 1
 7114.       cedir1%dim_6%EX = 3
 7114.       cedir1%dim_6%SM = 5616
 7114.       $_allo_P3(0) = 0x1000000000001L
 7114.       $_allo_P3(1) = loc( cedir1 )
 7114.       call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 7115.       cedfu2%header%a_contig = 1
 7115.       cedfu2%dim_1%LB = 1
 7115.       cedfu2%dim_1%EX = 2
 7115.       cedfu2%dim_1%SM = 1
 7115.       cedfu2%dim_2%LB = 1
 7115.       cedfu2%dim_2%EX = 13
 7115.       cedfu2%dim_2%SM = 2
 7115.       cedfu2%dim_3%LB = 1
 7115.       cedfu2%dim_3%EX = 12
 7115.       cedfu2%dim_3%SM = 26
 7115.       cedfu2%dim_4%LB = 1
 7115.       cedfu2%dim_4%EX = 6
 7115.       cedfu2%dim_4%SM = 312
 7115.       cedfu2%dim_5%LB = 1
 7115.       cedfu2%dim_5%EX = 3
 7115.       cedfu2%dim_5%SM = 1872
 7115.       $_allo_P4(0) = 0x1000000000001L
 7115.       $_allo_P4(1) = loc( cedfu2 )
 7115.       call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
 7116.       cedir2%header%a_contig = 1
 7116.       cedir2%dim_1%LB = 1
 7116.       cedir2%dim_1%EX = 2
 7116.       cedir2%dim_1%SM = 1
 7116.       cedir2%dim_2%LB = 1
 7116.       cedir2%dim_2%EX = 13
 7116.       cedir2%dim_2%SM = 2
 7116.       cedir2%dim_3%LB = 1
 7116.       cedir2%dim_3%EX = 12
 7116.       cedir2%dim_3%SM = 26
 7116.       cedir2%dim_4%LB = 1
 7116.       cedir2%dim_4%EX = 6
 7116.       cedir2%dim_4%SM = 312
 7116.       cedir2%dim_5%LB = 1
 7116.       cedir2%dim_5%EX = 3
 7116.       cedir2%dim_5%SM = 1872
 7116.       cedir2%dim_6%LB = 1
 7116.       cedir2%dim_6%EX = 3
 7116.       cedir2%dim_6%SM = 5616
 7116.       $_allo_P5(0) = 0x1000000000001L
 7116.       $_allo_P5(1) = loc( cedir2 )
 7116.       call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
 7117.       cledfu%header%a_contig = 1
 7117.       cledfu%dim_1%LB = 1
 7117.       cledfu%dim_1%EX = 13
 7117.       cledfu%dim_1%SM = 1
 7117.       cledfu%dim_2%LB = 1
 7117.       cledfu%dim_2%EX = 12
 7117.       cledfu%dim_2%SM = 13
 7117.       cledfu%dim_3%LB = 1
 7117.       cledfu%dim_3%EX = 9
 7117.       cledfu%dim_3%SM = 156
 7117.       $_allo_P6(0) = 0x1000000000001L
 7117.       $_allo_P6(1) = loc( cledfu )
 7117.       call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
 7118.       cledir%header%a_contig = 1
 7118.       cledir%dim_1%LB = 1
 7118.       cledir%dim_1%EX = 13
 7118.       cledir%dim_1%SM = 1
 7118.       cledir%dim_2%LB = 1
 7118.       cledir%dim_2%EX = 12
 7118.       cledir%dim_2%SM = 13
 7118.       cledir%dim_3%LB = 1
 7118.       cledir%dim_3%EX = 9
 7118.       cledir%dim_3%SM = 156
 7118.       cledir%dim_4%LB = 1
 7118.       cledir%dim_4%EX = 3
 7118.       cledir%dim_4%SM = 1404
 7118.       $_allo_P7(0) = 0x1000000000001L
 7118.       $_allo_P7(1) = loc( cledir )
 7118.       call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
 7119.       xmiu%header%a_contig = 1
 7119.       xmiu%dim_1%LB = 1
 7119.       xmiu%dim_1%EX = 12
 7119.       xmiu%dim_1%SM = 1
 7119.       xmiu%dim_2%LB = 1
 7119.       xmiu%dim_2%EX = 3
 7119.       xmiu%dim_2%SM = 12
 7119.       $_allo_P8(0) = 0x1000000000001L
 7119.       $_allo_P8(1) = loc( xmiu )
 7119.       call __allocate( $_allo_P8, 0, 0, _fcd( 0, 0 ) )
 7120.       cether%header%a_contig = 1
 7120.       cether%dim_1%LB = 1
 7120.       cether%dim_1%EX = 13
 7120.       cether%dim_1%SM = 1
 7120.       cether%dim_2%LB = 1
 7120.       cether%dim_2%EX = 12
 7120.       cether%dim_2%SM = 13
 7120.       cether%dim_3%LB = 1
 7120.       cether%dim_3%EX = 2
 7120.       cether%dim_3%SM = 156
 7120.       $_allo_P9(0) = 0x1000000000001L
 7120.       $_allo_P9(1) = loc( cether )
 7120.       call __allocate( $_allo_P9, 0, 0, _fcd( 0, 0 ) )
 7121.       xmiw%header%a_contig = 1
 7121.       xmiw%dim_1%LB = 1
 7121.       xmiw%dim_1%EX = 12
 7121.       xmiw%dim_1%SM = 1
 7121.       xmiw%dim_2%LB = 1
 7121.       xmiw%dim_2%EX = 3
 7121.       xmiw%dim_2%SM = 12
 7121.       $_allo_P10(0) = 0x1000000000001L
 7121.       $_allo_P10(1) = loc( xmiw )
 7121.       call __allocate( $_allo_P10, 0, 0, _fcd( 0, 0 ) )
 7123.       ystpar%header%a_contig = 1
 7123.       ystpar%dim_1%LB = 1
 7123.       ystpar%dim_1%EX = 2
 7123.       ystpar%dim_1%SM = 1
 7123.       ystpar%dim_2%LB = 1
 7123.       ystpar%dim_2%EX = 3
 7123.       ystpar%dim_2%SM = 2
 7123.       $_allo_P11(0) = 0x1000000000001L
 7123.       $_allo_P11(1) = loc( ystpar )
 7123.       call __allocate( $_allo_P11, 0, 0, _fcd( 0, 0 ) )
 7124.       yopt%header%a_contig = 1
 7124.       yopt%dim_1%LB = 1
 7124.       yopt%dim_1%EX = 2
 7124.       yopt%dim_1%SM = 1
 7124.       $_allo_P12(0) = 0x1000000000001L
 7124.       $_allo_P12(1) = loc( yopt )
 7124.       call __allocate( $_allo_P12, 0, 0, _fcd( 0, 0 ) )
 7125.       yll%header%a_contig = 1
 7125.       yll%dim_1%LB = 1
 7125.       yll%dim_1%EX = 2
 7125.       yll%dim_1%SM = 1
 7125.       $_allo_P13(0) = 0x1000000000001L
 7125.       $_allo_P13(1) = loc( yll )
 7125.       call __allocate( $_allo_P13, 0, 0, _fcd( 0, 0 ) )
 7126.       yu%header%a_contig = 1
 7126.       yu%dim_1%LB = 1
 7126.       yu%dim_1%EX = 2
 7126.       yu%dim_1%SM = 1
 7126.       $_allo_P14(0) = 0x1000000000001L
 7126.       $_allo_P14(1) = loc( yu )
 7126.       call __allocate( $_allo_P14, 0, 0, _fcd( 0, 0 ) )
 7127.       yefac%header%a_contig = 1
 7127.       yefac%dim_1%LB = 1
 7127.       yefac%dim_1%EX = 2
 7127.       yefac%dim_1%SM = 1
 7127.       $_allo_P15(0) = 0x1000000000001L
 7127.       $_allo_P15(1) = loc( yefac )
 7127.       call __allocate( $_allo_P15, 0, 0, _fcd( 0, 0 ) )
 7128.       yh1%header%a_contig = 1
 7128.       yh1%dim_1%LB = 1
 7128.       yh1%dim_1%EX = 2
 7128.       yh1%dim_1%SM = 1
 7128.       $_allo_P16(0) = 0x1000000000001L
 7128.       $_allo_P16(1) = loc( yh1 )
 7128.       call __allocate( $_allo_P16, 0, 0, _fcd( 0, 0 ) )
 7129.       yh2%header%a_contig = 1
 7129.       yh2%dim_1%LB = 1
 7129.       yh2%dim_1%EX = 2
 7129.       yh2%dim_1%SM = 1
 7129.       $_allo_P17(0) = 0x1000000000001L
 7129.       $_allo_P17(1) = loc( yh2 )
 7129.       call __allocate( $_allo_P17, 0, 0, _fcd( 0, 0 ) )
 7130.       yootd%header%a_contig = 1
 7130.       yootd%dim_1%LB = 1
 7130.       yootd%dim_1%EX = 2
 7130.       yootd%dim_1%SM = 1
 7130.       $_allo_P18(0) = 0x1000000000001L
 7130.       $_allo_P18(1) = loc( yootd )
 7130.       call __allocate( $_allo_P18, 0, 0, _fcd( 0, 0 ) )
 7131.       yreen%header%a_contig = 1
 7131.       yreen%dim_1%LB = 1
 7131.       yreen%dim_1%EX = 12
 7131.       yreen%dim_1%SM = 1
 7131.       yreen%dim_2%LB = 1
 7131.       yreen%dim_2%EX = 2
 7131.       yreen%dim_2%SM = 12
 7131.       $_allo_P19(0) = 0x1000000000001L
 7131.       $_allo_P19(1) = loc( yreen )
 7131.       call __allocate( $_allo_P19, 0, 0, _fcd( 0, 0 ) )
 7132.       ycover%header%a_contig = 1
 7132.       ycover%dim_1%LB = 1
 7132.       ycover%dim_1%EX = 12
 7132.       ycover%dim_1%SM = 1
 7132.       ycover%dim_2%LB = 1
 7132.       ycover%dim_2%EX = 2
 7132.       ycover%dim_2%SM = 12
 7132.       $_allo_P20(0) = 0x1000000000001L
 7132.       $_allo_P20(1) = loc( ycover )
 7132.       call __allocate( $_allo_P20, 0, 0, _fcd( 0, 0 ) )
 7133.       ylt%header%a_contig = 1
 7133.       ylt%dim_1%LB = 1
 7133.       ylt%dim_1%EX = 12
 7133.       ylt%dim_1%SM = 1
 7133.       ylt%dim_2%LB = 1
 7133.       ylt%dim_2%EX = 2
 7133.       ylt%dim_2%SM = 12
 7133.       $_allo_P21(0) = 0x1000000000001L
 7133.       $_allo_P21(1) = loc( ylt )
 7133.       call __allocate( $_allo_P21, 0, 0, _fcd( 0, 0 ) )
 7137.       rstpar_fixed%header%a_contig = 1
 7137.       rstpar_fixed%dim_1%LB = 1
 7137.       rstpar_fixed%dim_1%EX = 13
 7137.       rstpar_fixed%dim_1%SM = 1
 7137.       rstpar_fixed%dim_2%LB = 1
 7137.       rstpar_fixed%dim_2%EX = 2
 7137.       rstpar_fixed%dim_2%SM = 13
 7137.       rstpar_fixed%dim_3%LB = 1
 7137.       rstpar_fixed%dim_3%EX = 3
 7137.       rstpar_fixed%dim_3%SM = 26
 7137.       $_allo_P22(0) = 0x1000000000001L
 7137.       $_allo_P22(1) = loc( rstpar_fixed )
 7137.       call __allocate( $_allo_P22, 0, 0, _fcd( 0, 0 ) )
 7138.       chil_fixed%header%a_contig = 1
 7138.       chil_fixed%dim_1%LB = 1
 7138.       chil_fixed%dim_1%EX = 13
 7138.       chil_fixed%dim_1%SM = 1
 7138.       chil_fixed%dim_2%LB = 1
 7138.       chil_fixed%dim_2%EX = 2
 7138.       chil_fixed%dim_2%SM = 13
 7138.       $_allo_P23(0) = 0x1000000000001L
 7138.       $_allo_P23(1) = loc( chil_fixed )
 7138.       call __allocate( $_allo_P23, 0, 0, _fcd( 0, 0 ) )
 7139.       topt_fixed%header%a_contig = 1
 7139.       topt_fixed%dim_1%LB = 1
 7139.       topt_fixed%dim_1%EX = 13
 7139.       topt_fixed%dim_1%SM = 1
 7139.       topt_fixed%dim_2%LB = 1
 7139.       topt_fixed%dim_2%EX = 2
 7139.       topt_fixed%dim_2%SM = 13
 7139.       $_allo_P24(0) = 0x1000000000001L
 7139.       $_allo_P24(1) = loc( topt_fixed )
 7139.       call __allocate( $_allo_P24, 0, 0, _fcd( 0, 0 ) )
 7140.       tll_fixed%header%a_contig = 1
 7140.       tll_fixed%dim_1%LB = 1
 7140.       tll_fixed%dim_1%EX = 13
 7140.       tll_fixed%dim_1%SM = 1
 7140.       tll_fixed%dim_2%LB = 1
 7140.       tll_fixed%dim_2%EX = 2
 7140.       tll_fixed%dim_2%SM = 13
 7140.       $_allo_P25(0) = 0x1000000000001L
 7140.       $_allo_P25(1) = loc( tll_fixed )
 7140.       call __allocate( $_allo_P25, 0, 0, _fcd( 0, 0 ) )
 7141.       tu_fixed%header%a_contig = 1
 7141.       tu_fixed%dim_1%LB = 1
 7141.       tu_fixed%dim_1%EX = 13
 7141.       tu_fixed%dim_1%SM = 1
 7141.       tu_fixed%dim_2%LB = 1
 7141.       tu_fixed%dim_2%EX = 2
 7141.       tu_fixed%dim_2%SM = 13
 7141.       $_allo_P26(0) = 0x1000000000001L
 7141.       $_allo_P26(1) = loc( tu_fixed )
 7141.       call __allocate( $_allo_P26, 0, 0, _fcd( 0, 0 ) )
 7142.       defac_fixed%header%a_contig = 1
 7142.       defac_fixed%dim_1%LB = 1
 7142.       defac_fixed%dim_1%EX = 13
 7142.       defac_fixed%dim_1%SM = 1
 7142.       defac_fixed%dim_2%LB = 1
 7142.       defac_fixed%dim_2%EX = 2
 7142.       defac_fixed%dim_2%SM = 13
 7142.       $_allo_P27(0) = 0x1000000000001L
 7142.       $_allo_P27(1) = loc( defac_fixed )
 7142.       call __allocate( $_allo_P27, 0, 0, _fcd( 0, 0 ) )
 7143.       ph1_fixed%header%a_contig = 1
 7143.       ph1_fixed%dim_1%LB = 1
 7143.       ph1_fixed%dim_1%EX = 13
 7143.       ph1_fixed%dim_1%SM = 1
 7143.       ph1_fixed%dim_2%LB = 1
 7143.       ph1_fixed%dim_2%EX = 2
 7143.       ph1_fixed%dim_2%SM = 13
 7143.       $_allo_P28(0) = 0x1000000000001L
 7143.       $_allo_P28(1) = loc( ph1_fixed )
 7143.       call __allocate( $_allo_P28, 0, 0, _fcd( 0, 0 ) )
 7144.       ph2_fixed%header%a_contig = 1
 7144.       ph2_fixed%dim_1%LB = 1
 7144.       ph2_fixed%dim_1%EX = 13
 7144.       ph2_fixed%dim_1%SM = 1
 7144.       ph2_fixed%dim_2%LB = 1
 7144.       ph2_fixed%dim_2%EX = 2
 7144.       ph2_fixed%dim_2%SM = 13
 7144.       $_allo_P29(0) = 0x1000000000001L
 7144.       $_allo_P29(1) = loc( ph2_fixed )
 7144.       call __allocate( $_allo_P29, 0, 0, _fcd( 0, 0 ) )
 7145.       rootd%header%a_contig = 1
 7145.       rootd%dim_1%LB = 1
 7145.       rootd%dim_1%EX = 13
 7145.       rootd%dim_1%SM = 1
 7145.       rootd%dim_2%LB = 1
 7145.       rootd%dim_2%EX = 2
 7145.       rootd%dim_2%SM = 13
 7145.       $_allo_P30(0) = 0x1000000000001L
 7145.       $_allo_P30(1) = loc( rootd )
 7145.       call __allocate( $_allo_P30, 0, 0, _fcd( 0, 0 ) )
 7146.       bee%header%a_contig = 1
 7146.       bee%dim_1%LB = 1
 7146.       bee%dim_1%EX = 13
 7146.       bee%dim_1%SM = 1
 7146.       $_allo_P31(0) = 0x1000000000001L
 7146.       $_allo_P31(1) = loc( bee )
 7146.       call __allocate( $_allo_P31, 0, 0, _fcd( 0, 0 ) )
 7147.       phsat%header%a_contig = 1
 7147.       phsat%dim_1%LB = 1
 7147.       phsat%dim_1%EX = 13
 7147.       phsat%dim_1%SM = 1
 7147.       $_allo_P32(0) = 0x1000000000001L
 7147.       $_allo_P32(1) = loc( phsat )
 7147.       call __allocate( $_allo_P32, 0, 0, _fcd( 0, 0 ) )
 7148.       satco%header%a_contig = 1
 7148.       satco%dim_1%LB = 1
 7148.       satco%dim_1%EX = 13
 7148.       satco%dim_1%SM = 1
 7148.       $_allo_P33(0) = 0x1000000000001L
 7148.       $_allo_P33(1) = loc( satco )
 7148.       call __allocate( $_allo_P33, 0, 0, _fcd( 0, 0 ) )
 7149.       poros%header%a_contig = 1
 7149.       poros%dim_1%LB = 1
 7149.       poros%dim_1%EX = 13
 7149.       poros%dim_1%SM = 1
 7149.       $_allo_P34(0) = 0x1000000000001L
 7149.       $_allo_P34(1) = loc( poros )
 7149.       call __allocate( $_allo_P34, 0, 0, _fcd( 0, 0 ) )
 7150.       zdepth%header%a_contig = 1
 7150.       zdepth%dim_1%LB = 1
 7150.       zdepth%dim_1%EX = 13
 7150.       zdepth%dim_1%SM = 1
 7150.       zdepth%dim_2%LB = 1
 7150.       zdepth%dim_2%EX = 3
 7150.       zdepth%dim_2%SM = 13
 7150.       $_allo_P35(0) = 0x1000000000001L
 7150.       $_allo_P35(1) = loc( zdepth )
 7150.       call __allocate( $_allo_P35, 0, 0, _fcd( 0, 0 ) )
 7151.       green_fixed%header%a_contig = 1
 7151.       green_fixed%dim_1%LB = 1
 7151.       green_fixed%dim_1%EX = 13
 7151.       green_fixed%dim_1%SM = 1
 7151.       green_fixed%dim_2%LB = 1
 7151.       green_fixed%dim_2%EX = 12
 7151.       green_fixed%dim_2%SM = 13
 7151.       green_fixed%dim_3%LB = 1
 7151.       green_fixed%dim_3%EX = 2
 7151.       green_fixed%dim_3%SM = 156
 7151.       $_allo_P36(0) = 0x1000000000001L
 7151.       $_allo_P36(1) = loc( green_fixed )
 7151.       call __allocate( $_allo_P36, 0, 0, _fcd( 0, 0 ) )
 7152.       xcover_fixed%header%a_contig = 1
 7152.       xcover_fixed%dim_1%LB = 1
 7152.       xcover_fixed%dim_1%EX = 13
 7152.       xcover_fixed%dim_1%SM = 1
 7152.       xcover_fixed%dim_2%LB = 1
 7152.       xcover_fixed%dim_2%EX = 12
 7152.       xcover_fixed%dim_2%SM = 13
 7152.       xcover_fixed%dim_3%LB = 1
 7152.       xcover_fixed%dim_3%EX = 2
 7152.       xcover_fixed%dim_3%SM = 156
 7152.       $_allo_P37(0) = 0x1000000000001L
 7152.       $_allo_P37(1) = loc( xcover_fixed )
 7152.       call __allocate( $_allo_P37, 0, 0, _fcd( 0, 0 ) )
 7153.       zlt_fixed%header%a_contig = 1
 7153.       zlt_fixed%dim_1%LB = 1
 7153.       zlt_fixed%dim_1%EX = 13
 7153.       zlt_fixed%dim_1%SM = 1
 7153.       zlt_fixed%dim_2%LB = 1
 7153.       zlt_fixed%dim_2%EX = 12
 7153.       zlt_fixed%dim_2%SM = 13
 7153.       zlt_fixed%dim_3%LB = 1
 7153.       zlt_fixed%dim_3%EX = 2
 7153.       zlt_fixed%dim_3%SM = 156
 7153.       $_allo_P38(0) = 0x1000000000001L
 7153.       $_allo_P38(1) = loc( zlt_fixed )
 7153.       call __allocate( $_allo_P38, 0, 0, _fcd( 0, 0 ) )
 7154.       x0x%header%a_contig = 1
 7154.       x0x%dim_1%LB = 1
 7154.       x0x%dim_1%EX = 13
 7154.       x0x%dim_1%SM = 1
 7154.       x0x%dim_2%LB = 1
 7154.       x0x%dim_2%EX = 12
 7154.       x0x%dim_2%SM = 13
 7154.       $_allo_P39(0) = 0x1000000000001L
 7154.       $_allo_P39(1) = loc( x0x )
 7154.       call __allocate( $_allo_P39, 0, 0, _fcd( 0, 0 ) )
 7155.       xd%header%a_contig = 1
 7155.       xd%dim_1%LB = 1
 7155.       xd%dim_1%EX = 13
 7155.       xd%dim_1%SM = 1
 7155.       xd%dim_2%LB = 1
 7155.       xd%dim_2%EX = 12
 7155.       xd%dim_2%SM = 13
 7155.       $_allo_P40(0) = 0x1000000000001L
 7155.       $_allo_P40(1) = loc( xd )
 7155.       call __allocate( $_allo_P40, 0, 0, _fcd( 0, 0 ) )
 7156.       z2%header%a_contig = 1
 7156.       z2%dim_1%LB = 1
 7156.       z2%dim_1%EX = 13
 7156.       z2%dim_1%SM = 1
 7156.       z2%dim_2%LB = 1
 7156.       z2%dim_2%EX = 12
 7156.       z2%dim_2%SM = 13
 7156.       $_allo_P41(0) = 0x1000000000001L
 7156.       $_allo_P41(1) = loc( z2 )
 7156.       call __allocate( $_allo_P41, 0, 0, _fcd( 0, 0 ) )
 7157.       z1%header%a_contig = 1
 7157.       z1%dim_1%LB = 1
 7157.       z1%dim_1%EX = 13
 7157.       z1%dim_1%SM = 1
 7157.       z1%dim_2%LB = 1
 7157.       z1%dim_2%EX = 12
 7157.       z1%dim_2%SM = 13
 7157.       $_allo_P42(0) = 0x1000000000001L
 7157.       $_allo_P42(1) = loc( z1 )
 7157.       call __allocate( $_allo_P42, 0, 0, _fcd( 0, 0 ) )
 7158.       xdc%header%a_contig = 1
 7158.       xdc%dim_1%LB = 1
 7158.       xdc%dim_1%EX = 13
 7158.       xdc%dim_1%SM = 1
 7158.       xdc%dim_2%LB = 1
 7158.       xdc%dim_2%EX = 12
 7158.       xdc%dim_2%SM = 13
 7158.       $_allo_P43(0) = 0x1000000000001L
 7158.       $_allo_P43(1) = loc( xdc )
 7158.       call __allocate( $_allo_P43, 0, 0, _fcd( 0, 0 ) )
 7159.       xbc%header%a_contig = 1
 7159.       xbc%dim_1%LB = 1
 7159.       xbc%dim_1%EX = 13
 7159.       xbc%dim_1%SM = 1
 7159.       xbc%dim_2%LB = 1
 7159.       xbc%dim_2%EX = 12
 7159.       xbc%dim_2%SM = 13
 7159.       $_allo_P44(0) = 0x1000000000001L
 7159.       $_allo_P44(1) = loc( xbc )
 7159.       call __allocate( $_allo_P44, 0, 0, _fcd( 0, 0 ) )
 7160.       zlt%header%a_contig = 1
 7160.       zlt%dim_1%LB = 1
 7160.       zlt%dim_1%EX = 13
 7160.       zlt%dim_1%SM = 1
 7160.       zlt%dim_2%LB = 1
 7160.       zlt%dim_2%EX = 12
 7160.       zlt%dim_2%SM = 13
 7160.       zlt%dim_3%LB = 1
 7160.       zlt%dim_3%EX = 2
 7160.       zlt%dim_3%SM = 156
 7160.       $_allo_P45(0) = 0x1000000000001L
 7160.       $_allo_P45(1) = loc( zlt )
 7160.       call __allocate( $_allo_P45, 0, 0, _fcd( 0, 0 ) )
 7161.       xcover%header%a_contig = 1
 7161.       xcover%dim_1%LB = 1
 7161.       xcover%dim_1%EX = 13
 7161.       xcover%dim_1%SM = 1
 7161.       xcover%dim_2%LB = 1
 7161.       xcover%dim_2%EX = 12
 7161.       xcover%dim_2%SM = 13
 7161.       xcover%dim_3%LB = 1
 7161.       xcover%dim_3%EX = 2
 7161.       xcover%dim_3%SM = 156
 7161.       $_allo_P46(0) = 0x1000000000001L
 7161.       $_allo_P46(1) = loc( xcover )
 7161.       call __allocate( $_allo_P46, 0, 0, _fcd( 0, 0 ) )
 7162.       ph2%header%a_contig = 1
 7162.       ph2%dim_1%LB = 1
 7162.       ph2%dim_1%EX = 13
 7162.       ph2%dim_1%SM = 1
 7162.       ph2%dim_2%LB = 1
 7162.       ph2%dim_2%EX = 2
 7162.       ph2%dim_2%SM = 13
 7162.       $_allo_P47(0) = 0x1000000000001L
 7162.       $_allo_P47(1) = loc( ph2 )
 7162.       call __allocate( $_allo_P47, 0, 0, _fcd( 0, 0 ) )
 7163.       ph1%header%a_contig = 1
 7163.       ph1%dim_1%LB = 1
 7163.       ph1%dim_1%EX = 13
 7163.       ph1%dim_1%SM = 1
 7163.       ph1%dim_2%LB = 1
 7163.       ph1%dim_2%EX = 2
 7163.       ph1%dim_2%SM = 13
 7163.       $_allo_P48(0) = 0x1000000000001L
 7163.       $_allo_P48(1) = loc( ph1 )
 7163.       call __allocate( $_allo_P48, 0, 0, _fcd( 0, 0 ) )
 7164.       green%header%a_contig = 1
 7164.       green%dim_1%LB = 1
 7164.       green%dim_1%EX = 13
 7164.       green%dim_1%SM = 1
 7164.       green%dim_2%LB = 1
 7164.       green%dim_2%EX = 12
 7164.       green%dim_2%SM = 13
 7164.       green%dim_3%LB = 1
 7164.       green%dim_3%EX = 2
 7164.       green%dim_3%SM = 156
 7164.       $_allo_P49(0) = 0x1000000000001L
 7164.       $_allo_P49(1) = loc( green )
 7164.       call __allocate( $_allo_P49, 0, 0, _fcd( 0, 0 ) )
 7165.       defac%header%a_contig = 1
 7165.       defac%dim_1%LB = 1
 7165.       defac%dim_1%EX = 13
 7165.       defac%dim_1%SM = 1
 7165.       defac%dim_2%LB = 1
 7165.       defac%dim_2%EX = 2
 7165.       defac%dim_2%SM = 13
 7165.       $_allo_P50(0) = 0x1000000000001L
 7165.       $_allo_P50(1) = loc( defac )
 7165.       call __allocate( $_allo_P50, 0, 0, _fcd( 0, 0 ) )
 7166.       tu%header%a_contig = 1
 7166.       tu%dim_1%LB = 1
 7166.       tu%dim_1%EX = 13
 7166.       tu%dim_1%SM = 1
 7166.       tu%dim_2%LB = 1
 7166.       tu%dim_2%EX = 2
 7166.       tu%dim_2%SM = 13
 7166.       $_allo_P51(0) = 0x1000000000001L
 7166.       $_allo_P51(1) = loc( tu )
 7166.       call __allocate( $_allo_P51, 0, 0, _fcd( 0, 0 ) )
 7167.       tll%header%a_contig = 1
 7167.       tll%dim_1%LB = 1
 7167.       tll%dim_1%EX = 13
 7167.       tll%dim_1%SM = 1
 7167.       tll%dim_2%LB = 1
 7167.       tll%dim_2%EX = 2
 7167.       tll%dim_2%SM = 13
 7167.       $_allo_P52(0) = 0x1000000000001L
 7167.       $_allo_P52(1) = loc( tll )
 7167.       call __allocate( $_allo_P52, 0, 0, _fcd( 0, 0 ) )
 7168.       topt%header%a_contig = 1
 7168.       topt%dim_1%LB = 1
 7168.       topt%dim_1%EX = 13
 7168.       topt%dim_1%SM = 1
 7168.       topt%dim_2%LB = 1
 7168.       topt%dim_2%EX = 2
 7168.       topt%dim_2%SM = 13
 7168.       $_allo_P53(0) = 0x1000000000001L
 7168.       $_allo_P53(1) = loc( topt )
 7168.       call __allocate( $_allo_P53, 0, 0, _fcd( 0, 0 ) )
 7169.       rstpar%header%a_contig = 1
 7169.       rstpar%dim_1%LB = 1
 7169.       rstpar%dim_1%EX = 13
 7169.       rstpar%dim_1%SM = 1
 7169.       rstpar%dim_2%LB = 1
 7169.       rstpar%dim_2%EX = 2
 7169.       rstpar%dim_2%SM = 13
 7169.       rstpar%dim_3%LB = 1
 7169.       rstpar%dim_3%EX = 3
 7169.       rstpar%dim_3%SM = 26
 7169.       $_allo_P54(0) = 0x1000000000001L
 7169.       $_allo_P54(1) = loc( rstpar )
 7169.       call __allocate( $_allo_P54, 0, 0, _fcd( 0, 0 ) )
 7170.       chil%header%a_contig = 1
 7170.       chil%dim_1%LB = 1
 7170.       chil%dim_1%EX = 13
 7170.       chil%dim_1%SM = 1
 7170.       chil%dim_2%LB = 1
 7170.       chil%dim_2%EX = 2
 7170.       chil%dim_2%SM = 13
 7170.       $_allo_P55(0) = 0x1000000000001L
 7170.       $_allo_P55(1) = loc( chil )
 7170.       call __allocate( $_allo_P55, 0, 0, _fcd( 0, 0 ) )
 7173.       ierr = 0
 7172.       t$2094 = nfsibd
 7173.        _substr(t$2095,1,4) = 'OLD'
 7172.        _substr(t$2096,1,10) = 'SEQUENTIAL'
 7172.        _substr(t$2097,1,11) = 'UNFORMATTED'
 7173.        _substr(t$2098,1,4) = 'READ'
 7172.       t$2099(1) = 0x100000000000000L
 7172. !dir$ suppress t$2094
 7172.       t$2099(2) = int( loc( t$2094 ), 8 )
 7172. !dir$ suppress ierr
 7172.       t$2099(3) = int( loc( ierr ), 8 )
 7172.       t$2099(4) = 0
 7172. !dir$ suppress  _substr(fnamesibveg,1,_ltrim(  _substr(fnamesibveg,1,200) ))
 7172.       t$2099(5) = int( loc(  _substr(fnamesibveg,1,_ltrim(  _substr(fnamesibveg,1,200) )) ), 8 )
 7172.       t$2099(6) = _ltrim(  _substr(fnamesibveg,1,200) )
 7172. !dir$ suppress  _substr(t$2095,1,3)
 7172.       t$2099(7) = int( loc(  _substr(t$2095,1,3) ), 8 )
 7172.       t$2099(8) = 3
 7172. !dir$ suppress  _substr(t$2096,1,10)
 7172.       t$2099(9) = int( loc(  _substr(t$2096,1,10) ), 8 )
 7172.       t$2099(10) = 10
 7172. !dir$ suppress  _substr(t$2097,1,11)
 7172.       t$2099(11) = int( loc(  _substr(t$2097,1,11) ), 8 )
 7172.       t$2099(12) = 11
 7172.       t$2099(13) = 0
 7172.       t$2099(14) = 0
 7172.       t$2099(16) = 0
 7172. !dir$ suppress  _substr(t$2098,1,4)
 7172.       t$2099(18) = int( loc(  _substr(t$2098,1,4) ), 8 )
 7172.       t$2099(19) = 4
 7172.       t$2099(20) = 0
 7172.       t$2099(22) = 0
 7172.       t$2099(24) = 0x2000200000000L
 7172.       t$2099(25) = 0
 7172.       t$2099(27) = 0
 7172.       t$2099(29) = 0
 7172.       t$2099(31) = 0
 7172.       t$2099(33) = 0
 7172.       t$2099(35) = 0
 7172.       t$2093 = _open( t$2099 )
 7174.       if ( ierr /= 0 ) then
 7175.          $Unit_temp_O0 = nfprt
 7175.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$94,  _substr(t$93,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamesibveg,1,_ltrim(  _substr(fnamesibveg,1,200) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 7177.           _substr(t$2100,1,11) = '**(ERROR)**'
 7177.          call _stop(  _substr(t$2100,1,11) )
 7177.       else
 7181.          ierr = 0
 7180.          t$2094 = nfalb
 7181.           _substr(t$2102,1,4) = 'OLD'
 7180.           _substr(t$2103,1,10) = 'SEQUENTIAL'
 7180.           _substr(t$2104,1,11) = 'UNFORMATTED'
 7181.           _substr(t$2105,1,4) = 'READ'
 7180.          t$2106(1) = 0x100000000000000L
 7180. !dir$ suppress t$2094
 7180.          t$2106(2) = int( loc( t$2094 ), 8 )
 7180. !dir$ suppress ierr
 7180.          t$2106(3) = int( loc( ierr ), 8 )
 7180.          t$2106(4) = 0
 7180. !dir$ suppress  _substr(fnamesibalb,1,_ltrim(  _substr(fnamesibalb,1,200) ))
 7180.          t$2106(5) = int( loc(  _substr(fnamesibalb,1,_ltrim(  _substr(fnamesibalb,1,200) )) ), 8 )
 7180.          t$2106(6) = _ltrim(  _substr(fnamesibalb,1,200) )
 7180. !dir$ suppress  _substr(t$2102,1,3)
 7180.          t$2106(7) = int( loc(  _substr(t$2102,1,3) ), 8 )
 7180.          t$2106(8) = 3
 7180. !dir$ suppress  _substr(t$2103,1,10)
 7180.          t$2106(9) = int( loc(  _substr(t$2103,1,10) ), 8 )
 7180.          t$2106(10) = 10
 7180. !dir$ suppress  _substr(t$2104,1,11)
 7180.          t$2106(11) = int( loc(  _substr(t$2104,1,11) ), 8 )
 7180.          t$2106(12) = 11
 7180.          t$2106(13) = 0
 7180.          t$2106(14) = 0
 7180.          t$2106(16) = 0
 7180. !dir$ suppress  _substr(t$2105,1,4)
 7180.          t$2106(18) = int( loc(  _substr(t$2105,1,4) ), 8 )
 7180.          t$2106(19) = 4
 7180.          t$2106(20) = 0
 7180.          t$2106(22) = 0
 7180.          t$2106(24) = 0x2000200000000L
 7180.          t$2106(25) = 0
 7180.          t$2106(27) = 0
 7180.          t$2106(29) = 0
 7180.          t$2106(31) = 0
 7180.          t$2106(33) = 0
 7180.          t$2106(35) = 0
 7180.          t$2101 = _open( t$2106 )
 7182.          if ( ierr /= 0 ) then
 7183.             $Unit_temp_O1 = nfprt
 7183.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$96,  _substr(t$95,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamesibalb,1,_ltrim(  _substr(fnamesibalb,1,200) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 7185.              _substr(t$2107,1,11) = '**(ERROR)**'
 7185.             call _stop(  _substr(t$2107,1,11) )
 7185.          else
 7188.             $Unit_temp_O2 = nfsibd
 7188.             _uread( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( rstpar_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( chil_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( topt_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( tll_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( tu_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( defac_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( ph1_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( ph2_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( rootd_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( bee_r4(+:( 1, 13, 1 )), 0x402060300000000L ), _iotype( phsat_r4(+:( 1, 13, 1 )), 0x402060300000000L ), _iotype( satco_r4(+:( 1, 13, 1 )), 0x402060300000000L ), _iotype( poros_r4(+:( 1, 13, 1 )), 0x402060300000000L ), _iotype( zdepth_r4(+:( 1, 13, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ) ) )
 7190.             $Unit_temp_O3 = nfsibd
 7190.             _uread( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( green_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( xcover_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( zlt_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( x0x_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 )), 0x402060300000000L ), _iotype( xd_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 )), 0x402060300000000L ), _iotype( z2_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 )), 0x402060300000000L ), _iotype( z1_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 )), 0x402060300000000L ), _iotype( xdc_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 )), 0x402060300000000L ), _iotype( xbc_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 )), 0x402060300000000L ) ) )
 7192.             $SC_rstpar_fixed_I307 = rstpar_fixed%dim_3%SM
 7192.             $SC_rstpar_fixed_I308 = rstpar_fixed%dim_3%LB
 7192.             $SC_rstpar_fixed_I305 = rstpar_fixed%dim_2%SM
 7192.             $SC_rstpar_fixed_I306 = rstpar_fixed%dim_2%LB
 7192.             $SC_rstpar_fixed_I304 = rstpar_fixed%dim_1%LB
 7192.             $I_L7192_204 = 0
 7192.             do
 7192.                $I_L7192_176 = 0
 7192.                do
 7192.                   $I_L7192_142 = 0
 7192. !dir$ ivdep
 7192.                   do
 7192.                      (rstpar_fixed%base_addr)($SC_rstpar_fixed_I304 + $I_L7192_142, $SC_rstpar_fixed_I306 + $I_L7192_176, $SC_rstpar_fixed_I308 + $I_L7192_204, 0) = real( rstpar_r4(1 + $I_L7192_142, 1 + $I_L7192_176, 1 + $I_L7192_204), 8 )
 7192.                      $I_L7192_142 = 1 + $I_L7192_142
 7192.                      if ( $I_L7192_142 >= 13 ) exit
 7192.                   enddo
 7192.                   $I_L7192_176 = 1 + $I_L7192_176
 7192.                   if ( $I_L7192_176 >= 2 ) exit
 7192.                enddo
 7192.                $I_L7192_204 = 1 + $I_L7192_204
 7192.                if ( $I_L7192_204 >= 3 ) exit
 7192.             enddo
 7200.             $SC_rootd_I331 = rootd%dim_2%SM
 7200.             $SC_rootd_I332 = rootd%dim_2%LB
 7200.             $SC_rootd_I330 = rootd%dim_1%LB
 7199.             $SC_ph2_fixed_I328 = ph2_fixed%dim_2%SM
 7199.             $SC_ph2_fixed_I329 = ph2_fixed%dim_2%LB
 7199.             $SC_ph2_fixed_I327 = ph2_fixed%dim_1%LB
 7198.             $SC_ph1_fixed_I325 = ph1_fixed%dim_2%SM
 7198.             $SC_ph1_fixed_I326 = ph1_fixed%dim_2%LB
 7198.             $SC_ph1_fixed_I324 = ph1_fixed%dim_1%LB
 7197.             $SC_defac_fixed_I322 = defac_fixed%dim_2%SM
 7197.             $SC_defac_fixed_I323 = defac_fixed%dim_2%LB
 7197.             $SC_defac_fixed_I321 = defac_fixed%dim_1%LB
 7196.             $SC_tu_fixed_I319 = tu_fixed%dim_2%SM
 7196.             $SC_tu_fixed_I320 = tu_fixed%dim_2%LB
 7196.             $SC_tu_fixed_I318 = tu_fixed%dim_1%LB
 7195.             $SC_tll_fixed_I316 = tll_fixed%dim_2%SM
 7195.             $SC_tll_fixed_I317 = tll_fixed%dim_2%LB
 7195.             $SC_tll_fixed_I315 = tll_fixed%dim_1%LB
 7194.             $SC_topt_fixed_I313 = topt_fixed%dim_2%SM
 7194.             $SC_topt_fixed_I314 = topt_fixed%dim_2%LB
 7194.             $SC_topt_fixed_I312 = topt_fixed%dim_1%LB
 7193.             $SC_chil_fixed_I310 = chil_fixed%dim_2%SM
 7193.             $SC_chil_fixed_I311 = chil_fixed%dim_2%LB
 7193.             $SC_chil_fixed_I309 = chil_fixed%dim_1%LB
 7193.             $I_L7193_178 = 0
 7193.             do
 7193.                $I_L7193_144 = 0
 7193. !dir$ ivdep
 7193.                do
 7193.                   (chil_fixed%base_addr)($SC_chil_fixed_I309 + $I_L7193_144, $SC_chil_fixed_I311 + $I_L7193_178, 0) = real( chil_r4(1 + $I_L7193_144, 1 + $I_L7193_178), 8 )
 7194.                   (topt_fixed%base_addr)($SC_topt_fixed_I312 + $I_L7193_144, $SC_topt_fixed_I314 + $I_L7193_178, 0) = real( topt_r4(1 + $I_L7193_144, 1 + $I_L7193_178), 8 )
 7195.                   (tll_fixed%base_addr)($SC_tll_fixed_I315 + $I_L7193_144, $SC_tll_fixed_I317 + $I_L7193_178, 0) = real( tll_r4(1 + $I_L7193_144, 1 + $I_L7193_178), 8 )
 7196.                   (tu_fixed%base_addr)($SC_tu_fixed_I318 + $I_L7193_144, $SC_tu_fixed_I320 + $I_L7193_178, 0) = real( tu_r4(1 + $I_L7193_144, 1 + $I_L7193_178), 8 )
 7197.                   (defac_fixed%base_addr)($SC_defac_fixed_I321 + $I_L7193_144, $SC_defac_fixed_I323 + $I_L7193_178, 0) = real( defac_r4(1 + $I_L7193_144, 1 + $I_L7193_178), 8 )
 7198.                   (ph1_fixed%base_addr)($SC_ph1_fixed_I324 + $I_L7193_144, $SC_ph1_fixed_I326 + $I_L7193_178, 0) = real( ph1_r4(1 + $I_L7193_144, 1 + $I_L7193_178), 8 )
 7193.                   $I_L7193_144 = 1 + $I_L7193_144
 7193.                   if ( $I_L7193_144 >= 13 ) exit
 7193.                enddo
 7199.                $I_L7199_146 = 0
 7199. !dir$ ivdep
 7199.                do
 7199.                   (ph2_fixed%base_addr)($SC_ph2_fixed_I327 + $I_L7199_146, $SC_ph2_fixed_I329 + $I_L7193_178, 0) = real( ph2_r4(1 + $I_L7199_146, 1 + $I_L7193_178), 8 )
 7200.                   (rootd%base_addr)($SC_rootd_I330 + $I_L7199_146, $SC_rootd_I332 + $I_L7193_178, 0) = real( rootd_r4(1 + $I_L7199_146, 1 + $I_L7193_178), 8 )
 7199.                   $I_L7199_146 = 1 + $I_L7199_146
 7199.                   if ( $I_L7199_146 >= 13 ) exit
 7199.                enddo
 7193.                $I_L7193_178 = 1 + $I_L7193_178
 7193.                if ( $I_L7193_178 >= 2 ) exit
 7193.             enddo
 7204.             $SC_poros_I339 = poros%dim_1%EX
 7204.             $SC_poros_I340 = poros%dim_1%LB
 7203.             $SC_satco_I337 = satco%dim_1%EX
 7203.             $SC_satco_I338 = satco%dim_1%LB
 7202.             $SC_phsat_I335 = phsat%dim_1%EX
 7202.             $SC_phsat_I336 = phsat%dim_1%LB
 7201.             $SC_bee_I333 = bee%dim_1%EX
 7201.             $SC_bee_I334 = bee%dim_1%LB
 7201.             $I_L7201_148 = 0
 7201. !dir$ ivdep
 7201.             do
 7201.                (bee%base_addr)($SC_bee_I334 + $I_L7201_148, 0) = real( bee_r4(1 + $I_L7201_148), 8 )
 7202.                (phsat%base_addr)($SC_phsat_I336 + $I_L7201_148, 0) = real( phsat_r4(1 + $I_L7201_148), 8 )
 7203.                (satco%base_addr)($SC_satco_I338 + $I_L7201_148, 0) = real( satco_r4(1 + $I_L7201_148), 8 )
 7204.                (poros%base_addr)($SC_poros_I340 + $I_L7201_148, 0) = real( poros_r4(1 + $I_L7201_148), 8 )
 7201.                $I_L7201_148 = 1 + $I_L7201_148
 7201.                if ( $I_L7201_148 >= 13 ) exit
 7201.             enddo
 7205.             $SC_zdepth_I342 = zdepth%dim_2%SM
 7205.             $SC_zdepth_I343 = zdepth%dim_2%LB
 7205.             $SC_zdepth_I341 = zdepth%dim_1%LB
 7205.             $I_L7205_180 = 0
 7205.             do
 7205.                $I_L7205_150 = 0
 7205. !dir$ ivdep
 7205.                do
 7205.                   (zdepth%base_addr)($SC_zdepth_I341 + $I_L7205_150, $SC_zdepth_I343 + $I_L7205_180, 0) = real( zdepth_r4(1 + $I_L7205_150, 1 + $I_L7205_180), 8 )
 7205.                   $I_L7205_150 = 1 + $I_L7205_150
 7205.                   if ( $I_L7205_150 >= 13 ) exit
 7205.                enddo
 7205.                $I_L7205_180 = 1 + $I_L7205_180
 7205.                if ( $I_L7205_180 >= 3 ) exit
 7205.             enddo
 7208.             $SC_zlt_fixed_I357 = zlt_fixed%dim_3%SM
 7208.             $SC_zlt_fixed_I358 = zlt_fixed%dim_3%LB
 7208.             $SC_zlt_fixed_I355 = zlt_fixed%dim_2%SM
 7208.             $SC_zlt_fixed_I356 = zlt_fixed%dim_2%LB
 7208.             $SC_zlt_fixed_I354 = zlt_fixed%dim_1%LB
 7207.             $SC_xcover_fixed_I352 = xcover_fixed%dim_3%SM
 7207.             $SC_xcover_fixed_I353 = xcover_fixed%dim_3%LB
 7207.             $SC_xcover_fixed_I350 = xcover_fixed%dim_2%SM
 7207.             $SC_xcover_fixed_I351 = xcover_fixed%dim_2%LB
 7207.             $SC_xcover_fixed_I349 = xcover_fixed%dim_1%LB
 7206.             $SC_green_fixed_I347 = green_fixed%dim_3%SM
 7206.             $SC_green_fixed_I348 = green_fixed%dim_3%LB
 7206.             $SC_green_fixed_I345 = green_fixed%dim_2%SM
 7206.             $SC_green_fixed_I346 = green_fixed%dim_2%LB
 7206.             $SC_green_fixed_I344 = green_fixed%dim_1%LB
 7206.             $I_L7206_206 = 0
 7206.             do
 7206.                $I_L7206_182 = 0
 7206.                do
 7206.                   $I_L7206_152 = 0
 7206. !dir$ ivdep
 7206.                   do
 7206.                      (green_fixed%base_addr)($SC_green_fixed_I344 + $I_L7206_152, $SC_green_fixed_I346 + $I_L7206_182, $SC_green_fixed_I348 + $I_L7206_206, 0) = real( green_r4(1 + $I_L7206_152, 1 + $I_L7206_182, 1 + $I_L7206_206), 8 )
 7207.                      (xcover_fixed%base_addr)($SC_xcover_fixed_I349 + $I_L7206_152, $SC_xcover_fixed_I351 + $I_L7206_182, $SC_xcover_fixed_I353 + $I_L7206_206, 0) = real( xcover_r4(1 + $I_L7206_152, 1 + $I_L7206_182, 1 + $I_L7206_206), 8 )
 7208.                      (zlt_fixed%base_addr)($SC_zlt_fixed_I354 + $I_L7206_152, $SC_zlt_fixed_I356 + $I_L7206_182, $SC_zlt_fixed_I358 + $I_L7206_206, 0) = real( zlt_r4(1 + $I_L7206_152, 1 + $I_L7206_182, 1 + $I_L7206_206), 8 )
 7206.                      $I_L7206_152 = 1 + $I_L7206_152
 7206.                      if ( $I_L7206_152 >= 13 ) exit
 7206.                   enddo
 7206.                   $I_L7206_182 = 1 + $I_L7206_182
 7206.                   if ( $I_L7206_182 >= 12 ) exit
 7206.                enddo
 7206.                $I_L7206_206 = 1 + $I_L7206_206
 7206.                if ( $I_L7206_206 >= 2 ) exit
 7206.             enddo
 7214.             $SC_xbc_I375 = xbc%dim_2%SM
 7214.             $SC_xbc_I376 = xbc%dim_2%LB
 7214.             $SC_xbc_I374 = xbc%dim_1%LB
 7213.             $SC_xdc_I372 = xdc%dim_2%SM
 7213.             $SC_xdc_I373 = xdc%dim_2%LB
 7213.             $SC_xdc_I371 = xdc%dim_1%LB
 7212.             $SC_z1_I369 = z1%dim_2%SM
 7212.             $SC_z1_I370 = z1%dim_2%LB
 7212.             $SC_z1_I368 = z1%dim_1%LB
 7211.             $SC_z2_I366 = z2%dim_2%SM
 7211.             $SC_z2_I367 = z2%dim_2%LB
 7211.             $SC_z2_I365 = z2%dim_1%LB
 7210.             $SC_xd_I363 = xd%dim_2%SM
 7210.             $SC_xd_I364 = xd%dim_2%LB
 7210.             $SC_xd_I362 = xd%dim_1%LB
 7209.             $SC_x0x_I360 = x0x%dim_2%SM
 7209.             $SC_x0x_I361 = x0x%dim_2%LB
 7209.             $SC_x0x_I359 = x0x%dim_1%LB
 7209.             $I_L7209_184 = 0
 7209.             do
 7209.                $I_L7209_154 = 0
 7209. !dir$ ivdep
 7209.                do
 7209.                   (x0x%base_addr)($SC_x0x_I359 + $I_L7209_154, $SC_x0x_I361 + $I_L7209_184, 0) = real( x0x_r4(1 + $I_L7209_154, 1 + $I_L7209_184), 8 )
 7210.                   (xd%base_addr)($SC_xd_I362 + $I_L7209_154, $SC_xd_I364 + $I_L7209_184, 0) = real( xd_r4(1 + $I_L7209_154, 1 + $I_L7209_184), 8 )
 7211.                   (z2%base_addr)($SC_z2_I365 + $I_L7209_154, $SC_z2_I367 + $I_L7209_184, 0) = real( z2_r4(1 + $I_L7209_154, 1 + $I_L7209_184), 8 )
 7212.                   (z1%base_addr)($SC_z1_I368 + $I_L7209_154, $SC_z1_I370 + $I_L7209_184, 0) = real( z1_r4(1 + $I_L7209_154, 1 + $I_L7209_184), 8 )
 7213.                   (xdc%base_addr)($SC_xdc_I371 + $I_L7209_154, $SC_xdc_I373 + $I_L7209_184, 0) = real( xdc_r4(1 + $I_L7209_154, 1 + $I_L7209_184), 8 )
 7214.                   (xbc%base_addr)($SC_xbc_I374 + $I_L7209_154, $SC_xbc_I376 + $I_L7209_184, 0) = real( xbc_r4(1 + $I_L7209_154, 1 + $I_L7209_184), 8 )
 7209.                   $I_L7209_154 = 1 + $I_L7209_154
 7209.                   if ( $I_L7209_154 >= 13 ) exit
 7209.                enddo
 7209.                $I_L7209_184 = 1 + $I_L7209_184
 7209.                if ( $I_L7209_184 >= 12 ) exit
 7209.             enddo
 7216.             $Unit_temp_O4 = nfalb
 7216.             _uread( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( cedfu_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 9, 1 )), 0x402060300000000L ), _iotype( cedir_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 9, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( cedfu1_r4(+:( 1, 2, 1 ), +:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 6, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( cedir1_r4(+:( 1, 2, 1 ), +:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 6, 1 ), +:( 1, 3, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( cedfu2_r4(+:( 1, 2, 1 ), +:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 6, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( cedir2_r4(+:( 1, 2, 1 ), +:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 6, 1 ), +:( 1, 3, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( cledfu_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 9, 1 )), 0x402060300000000L ), _iotype( cledir_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 9, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( xmiu_r4(+:( 1, 12, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( cether_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( xmiw_r4(+:( 1, 12, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ) ) )
 7224.             $SC_cledfu_I385 = cledfu%dim_3%SM
 7224.             $SC_cledfu_I386 = cledfu%dim_3%LB
 7224.             $SC_cledfu_I383 = cledfu%dim_2%SM
 7224.             $SC_cledfu_I384 = cledfu%dim_2%LB
 7224.             $SC_cledfu_I382 = cledfu%dim_1%LB
 7218.             $SC_cedfu_I380 = cedfu%dim_3%SM
 7218.             $SC_cedfu_I381 = cedfu%dim_3%LB
 7218.             $SC_cedfu_I378 = cedfu%dim_2%SM
 7218.             $SC_cedfu_I379 = cedfu%dim_2%LB
 7218.             $SC_cedfu_I377 = cedfu%dim_1%LB
 7218.             $I_L7218_208 = 0
 7218.             do
 7218.                $I_L7218_186 = 0
 7218.                do
 7218.                   $I_L7218_156 = 0
 7218. !dir$ ivdep
 7218.                   do
 7218.                      (cedfu%base_addr)($SC_cedfu_I377 + $I_L7218_156, $SC_cedfu_I379 + $I_L7218_186, $SC_cedfu_I381 + $I_L7218_208, 0) = real( cedfu_r4(1 + $I_L7218_156, 1 + $I_L7218_186, 1 + $I_L7218_208), 8 )
 7224.                      (cledfu%base_addr)($SC_cledfu_I382 + $I_L7218_156, $SC_cledfu_I384 + $I_L7218_186, $SC_cledfu_I386 + $I_L7218_208, 0) = real( cledfu_r4(1 + $I_L7218_156, 1 + $I_L7218_186, 1 + $I_L7218_208), 8 )
 7218.                      $I_L7218_156 = 1 + $I_L7218_156
 7218.                      if ( $I_L7218_156 >= 13 ) exit
 7218.                   enddo
 7218.                   $I_L7218_186 = 1 + $I_L7218_186
 7218.                   if ( $I_L7218_186 >= 12 ) exit
 7218.                enddo
 7218.                $I_L7218_208 = 1 + $I_L7218_208
 7218.                if ( $I_L7218_208 >= 9 ) exit
 7218.             enddo
 7225.             $SC_cledir_I399 = cledir%dim_4%SM
 7225.             $SC_cledir_I400 = cledir%dim_4%LB
 7225.             $SC_cledir_I397 = cledir%dim_3%SM
 7225.             $SC_cledir_I398 = cledir%dim_3%LB
 7225.             $SC_cledir_I395 = cledir%dim_2%SM
 7225.             $SC_cledir_I396 = cledir%dim_2%LB
 7225.             $SC_cledir_I394 = cledir%dim_1%LB
 7223.             $SC_cedir2_I433 = cedir2%dim_3%SM
 7223.             $SC_cedir2_I434 = cedir2%dim_3%LB
 7223.             $SC_cedir2_I431 = cedir2%dim_2%SM
 7223.             $SC_cedir2_I432 = cedir2%dim_2%LB
 7223.             $SC_cedir2_I430 = cedir2%dim_1%LB
 7222.             $SC_cedfu2_I417 = cedfu2%dim_5%SM
 7222.             $SC_cedfu2_I418 = cedfu2%dim_5%LB
 7222.             $SC_cedfu2_I415 = cedfu2%dim_4%SM
 7222.             $SC_cedfu2_I416 = cedfu2%dim_4%LB
 7222.             $SC_cedfu2_I413 = cedfu2%dim_3%SM
 7222.             $SC_cedfu2_I414 = cedfu2%dim_3%LB
 7222.             $SC_cedfu2_I411 = cedfu2%dim_2%SM
 7222.             $SC_cedfu2_I412 = cedfu2%dim_2%LB
 7222.             $SC_cedfu2_I410 = cedfu2%dim_1%LB
 7221.             $SC_cedir1_I428 = cedir1%dim_6%SM
 7221.             $SC_cedir1_I429 = cedir1%dim_6%LB
 7221.             $SC_cedir1_I426 = cedir1%dim_5%SM
 7221.             $SC_cedir1_I427 = cedir1%dim_5%LB
 7221.             $SC_cedir1_I424 = cedir1%dim_4%SM
 7221.             $SC_cedir1_I425 = cedir1%dim_4%LB
 7221.             $SC_cedir1_I422 = cedir1%dim_3%SM
 7221.             $SC_cedir1_I423 = cedir1%dim_3%LB
 7221.             $SC_cedir1_I420 = cedir1%dim_2%SM
 7221.             $SC_cedir1_I421 = cedir1%dim_2%LB
 7221.             $SC_cedir1_I419 = cedir1%dim_1%LB
 7220.             $SC_cedfu1_I408 = cedfu1%dim_5%SM
 7220.             $SC_cedfu1_I409 = cedfu1%dim_5%LB
 7220.             $SC_cedfu1_I406 = cedfu1%dim_4%SM
 7220.             $SC_cedfu1_I407 = cedfu1%dim_4%LB
 7220.             $SC_cedfu1_I404 = cedfu1%dim_3%SM
 7220.             $SC_cedfu1_I405 = cedfu1%dim_3%LB
 7220.             $SC_cedfu1_I402 = cedfu1%dim_2%SM
 7220.             $SC_cedfu1_I403 = cedfu1%dim_2%LB
 7220.             $SC_cedfu1_I401 = cedfu1%dim_1%LB
 7219.             $SC_cedir_I392 = cedir%dim_4%SM
 7219.             $SC_cedir_I393 = cedir%dim_4%LB
 7219.             $SC_cedir_I390 = cedir%dim_3%SM
 7219.             $SC_cedir_I391 = cedir%dim_3%LB
 7219.             $SC_cedir_I388 = cedir%dim_2%SM
 7219.             $SC_cedir_I389 = cedir%dim_2%LB
 7219.             $SC_cedir_I387 = cedir%dim_1%LB
 7219.             $I_L7219_224 = 0
 7219.             do
 7219.                $I_L7219_210 = 0
 7219.                do
 7219.                   $I_L7219_188 = 0
 7219.                   do
 7219.                      $I_L7219_158 = 0
 7219. !dir$ ivdep
 7219.                      do
 7219.                         (cedir%base_addr)($SC_cedir_I387 + $I_L7219_158, $SC_cedir_I389 + $I_L7219_188, $SC_cedir_I391 + $I_L7219_210, $SC_cedir_I393 + $I_L7219_224, 0) = real( cedir_r4(1 + $I_L7219_158, 1 + $I_L7219_188, 1 + $I_L7219_210, 1 + $I_L7219_224), 8 )
 7225.                         (cledir%base_addr)($SC_cledir_I394 + $I_L7219_158, $SC_cledir_I396 + $I_L7219_188, $SC_cledir_I398 + $I_L7219_210, $SC_cledir_I400 + $I_L7219_224, 0) = real( cledir_r4(1 + $I_L7219_158, 1 + $I_L7219_188, 1 + $I_L7219_210, 1 + $I_L7219_224), 8 )
 7219.                         $I_L7219_158 = 1 + $I_L7219_158
 7219.                         if ( $I_L7219_158 >= 13 ) exit
 7219.                      enddo
 7219.                      $I_L7219_188 = 1 + $I_L7219_188
 7219.                      if ( $I_L7219_188 >= 12 ) exit
 7219.                   enddo
 7219.                   $I_L7219_210 = 1 + $I_L7219_210
 7219.                   if ( $I_L7219_210 >= 9 ) exit
 7219.                enddo
 7220.                $I_L7220_218 = 0
 7220.                do
 7220.                   $I_L7220_212 = 0
 7220. !dir$ ivdep
 7220.                   do
 7220.                      $I_L7220_190 = 0
 7220.                      do
 7220.                         $I_L7220_160 = 0
 7220.                         do
 7220.                            (cedfu1%base_addr)($SC_cedfu1_I401 + $I_L7220_160, $SC_cedfu1_I403 + $I_L7220_190, $SC_cedfu1_I405 + $I_L7220_212, $SC_cedfu1_I407 + $I_L7220_218, $SC_cedfu1_I409 + $I_L7219_224, 0) = real( cedfu1_r4(1 + $I_L7220_160, 1 + $I_L7220_190, 1 + $I_L7220_212, 1 + $I_L7220_218, 1 + $I_L7219_224), 8 )
 7222.                            (cedfu2%base_addr)($SC_cedfu2_I410 + $I_L7220_160, $SC_cedfu2_I412 + $I_L7220_190, $SC_cedfu2_I414 + $I_L7220_212, $SC_cedfu2_I416 + $I_L7220_218, $SC_cedfu2_I418 + $I_L7219_224, 0) = real( cedfu2_r4(1 + $I_L7220_160, 1 + $I_L7220_190, 1 + $I_L7220_212, 1 + $I_L7220_218, 1 + $I_L7219_224), 8 )
 7220.                            $I_L7220_160 = 1 + $I_L7220_160
 7220.                            if ( $I_L7220_160 >= 2 ) exit
 7220.                         enddo
 7220.                         $I_L7220_190 = 1 + $I_L7220_190
 7220.                         if ( $I_L7220_190 >= 13 ) exit
 7220.                      enddo
 7220.                      $I_L7220_212 = 1 + $I_L7220_212
 7220.                      if ( $I_L7220_212 >= 12 ) exit
 7220.                   enddo
 7220.                   $I_L7220_218 = 1 + $I_L7220_218
 7220.                   if ( $I_L7220_218 >= 6 ) exit
 7220.                enddo
 7223.                $SC_cedir2_I439 = cedir2%dim_6%SM
 7223.                $SC_cedir2_I440 = cedir2%dim_6%LB
 7223.                $SC_cedir2_I437 = cedir2%dim_5%SM
 7223.                $SC_cedir2_I438 = cedir2%dim_5%LB
 7223.                $SC_cedir2_I435 = cedir2%dim_4%SM
 7223.                $SC_cedir2_I436 = cedir2%dim_4%LB
 7221.                $I_L7221_222 = 0
 7221.                do
 7221.                   $I_L7221_220 = 0
 7221.                   do
 7221.                      $I_L7221_214 = 0
 7221. !dir$ ivdep
 7221.                      do
 7221.                         $I_L7221_192 = 0
 7221.                         do
 7221.                            $I_L7221_162 = 0
 7221.                            do
 7221.                               (cedir1%base_addr)($SC_cedir1_I419 + $I_L7221_162, $SC_cedir1_I421 + $I_L7221_192, $SC_cedir1_I423 + $I_L7221_214, $SC_cedir1_I425 + $I_L7221_220, $SC_cedir1_I427 + $I_L7221_222, $SC_cedir1_I429 + $I_L7219_224, 0) = real( cedir1_r4(1 + $I_L7221_162, 1 + $I_L7221_192, 1 + $I_L7221_214, 1 + $I_L7221_220, 1 + $I_L7221_222, 1 + $I_L7219_224), 8 )
 7223.                               (cedir2%base_addr)($SC_cedir2_I430 + $I_L7221_162, $SC_cedir2_I432 + $I_L7221_192, $SC_cedir2_I434 + $I_L7221_214, $SC_cedir2_I436 + $I_L7221_220, $SC_cedir2_I438 + $I_L7221_222, $SC_cedir2_I440 + $I_L7219_224, 0) = real( cedir2_r4(1 + $I_L7221_162, 1 + $I_L7221_192, 1 + $I_L7221_214, 1 + $I_L7221_220, 1 + $I_L7221_222, 1 + $I_L7219_224), 8 )
 7221.                               $I_L7221_162 = 1 + $I_L7221_162
 7221.                               if ( $I_L7221_162 >= 2 ) exit
 7221.                            enddo
 7221.                            $I_L7221_192 = 1 + $I_L7221_192
 7221.                            if ( $I_L7221_192 >= 13 ) exit
 7221.                         enddo
 7221.                         $I_L7221_214 = 1 + $I_L7221_214
 7221.                         if ( $I_L7221_214 >= 12 ) exit
 7221.                      enddo
 7221.                      $I_L7221_220 = 1 + $I_L7221_220
 7221.                      if ( $I_L7221_220 >= 6 ) exit
 7221.                   enddo
 7221.                   $I_L7221_222 = 1 + $I_L7221_222
 7221.                   if ( $I_L7221_222 >= 3 ) exit
 7221.                enddo
 7219.                $I_L7219_224 = 1 + $I_L7219_224
 7219.                if ( $I_L7219_224 >= 3 ) exit
 7219.             enddo
 7226.             $SC_cether_I444 = cether%dim_3%SM
 7226.             $SC_cether_I445 = cether%dim_3%LB
 7226.             $SC_cether_I442 = cether%dim_2%SM
 7226.             $SC_cether_I443 = cether%dim_2%LB
 7226.             $SC_cether_I441 = cether%dim_1%LB
 7226.             $I_L7226_216 = 0
 7226.             do
 7226.                $I_L7226_194 = 0
 7226.                do
 7226.                   $I_L7226_164 = 0
 7226. !dir$ ivdep
 7226.                   do
 7226.                      (cether%base_addr)($SC_cether_I441 + $I_L7226_164, $SC_cether_I443 + $I_L7226_194, $SC_cether_I445 + $I_L7226_216, 0) = real( cether_r4(1 + $I_L7226_164, 1 + $I_L7226_194, 1 + $I_L7226_216), 8 )
 7226.                      $I_L7226_164 = 1 + $I_L7226_164
 7226.                      if ( $I_L7226_164 >= 13 ) exit
 7226.                   enddo
 7226.                   $I_L7226_194 = 1 + $I_L7226_194
 7226.                   if ( $I_L7226_194 >= 12 ) exit
 7226.                enddo
 7226.                $I_L7226_216 = 1 + $I_L7226_216
 7226.                if ( $I_L7226_216 >= 2 ) exit
 7226.             enddo
 7228.             $SC_xmiw_I450 = xmiw%dim_2%SM
 7228.             $SC_xmiw_I451 = xmiw%dim_2%LB
 7228.             $SC_xmiw_I449 = xmiw%dim_1%LB
 7227.             $SC_xmiu_I447 = xmiu%dim_2%SM
 7227.             $SC_xmiu_I448 = xmiu%dim_2%LB
 7227.             $SC_xmiu_I446 = xmiu%dim_1%LB
 7227.             $I_L7227_196 = 0
 7227.             do
 7227.                $I_L7227_166 = 0
 7227. !dir$ ivdep
 7227.                do
 7227.                   (xmiu%base_addr)($SC_xmiu_I446 + $I_L7227_166, $SC_xmiu_I448 + $I_L7227_196, 0) = real( xmiu_r4(1 + $I_L7227_166, 1 + $I_L7227_196), 8 )
 7228.                   (xmiw%base_addr)($SC_xmiw_I449 + $I_L7227_166, $SC_xmiw_I451 + $I_L7227_196, 0) = real( xmiw_r4(1 + $I_L7227_166, 1 + $I_L7227_196), 8 )
 7227.                   $I_L7227_166 = 1 + $I_L7227_166
 7227.                   if ( $I_L7227_166 >= 12 ) exit
 7227.                enddo
 7227.                $I_L7227_196 = 1 + $I_L7227_196
 7227.                if ( $I_L7227_196 >= 3 ) exit
 7227.             enddo
 7229.             t$2094 = nfsibd
 7229.             t$2108 = __rewf( t$2094, 0, 0, 0x100000000000000L, 0, 0 )
 7231.             t$2094 = nfalb
 7231.             t$2109 = __rewf( t$2094, 0, 0, 0x100000000000000L, 0, 0 )
 7258.             $SC_ph2_fixed_I328 = ph2_fixed%dim_2%SM
 7258.             $SC_ph2_fixed_I457 = ph2_fixed%dim_2%EX
 7258.             $SC_ph2_fixed_I329 = ph2_fixed%dim_2%LB
 7258.             $SC_ph2_fixed_I456 = ph2_fixed%dim_1%EX
 7258.             $SC_ph2_fixed_I327 = ph2_fixed%dim_1%LB
 7257.             $SC_ph1_fixed_I325 = ph1_fixed%dim_2%SM
 7257.             $SC_ph1_fixed_I453 = ph1_fixed%dim_2%EX
 7257.             $SC_ph1_fixed_I326 = ph1_fixed%dim_2%LB
 7257.             $SC_ph1_fixed_I452 = ph1_fixed%dim_1%EX
 7257.             $SC_ph1_fixed_I324 = ph1_fixed%dim_1%LB
 7258.             $SC_yh2_I458 = yh2%dim_1%EX
 7258.             $SC_yh2_I459 = yh2%dim_1%LB
 7257.             $SC_yh1_I454 = yh1%dim_1%EX
 7257.             $SC_yh1_I455 = yh1%dim_1%LB
 7235.             $I_L7235_202 = 0
 7235.             do
 7236.                $I_L7236_174 = 0
 7236.                do
 7237.                   $I_L7237_134 = 0
 7237. !dir$ ivdep
 7237.                   do
 7238.                      (green_fixed%base_addr)(1 + $I_L7237_134, 1 + $I_L7236_174, 1 + $I_L7235_202, 0) = max( 1.0e-4, (green_fixed%base_addr)(1 + $I_L7237_134, 1 + $I_L7236_174, 1 + $I_L7235_202, 0) )
 7239.                      $I_L7237_134 = 1 + $I_L7237_134
 7237.                      if ( $I_L7237_134 >= 13 ) exit
 7237.                   enddo
 7240.                   $I_L7236_174 = 1 + $I_L7236_174
 7239.                   if ( $I_L7236_174 >= 12 ) exit
 7239.                enddo
 7244.                $jtyp_S4 = 12
 7245.                if ( -1 + $I_L7235_202 == 0 ) then
 7245.                   $jtyp_S4 = 13
 7245.                endif
 7247.                $I_L7247_136 = 0
 7247. !dir$ ivdep
 7247.                do
 7248.                   (ystpar%base_addr)(1 + $I_L7235_202, 1 + $I_L7247_136, 0) = (rstpar_fixed%base_addr)($jtyp_S4, 1, 1 + $I_L7247_136, 0)
 7249.                   $I_L7247_136 = 1 + $I_L7247_136
 7247.                   if ( $I_L7247_136 >= 3 ) exit
 7247.                enddo
 7252.                (yopt%base_addr)(1 + $I_L7235_202, 0) = (topt_fixed%base_addr)($jtyp_S4, 1, 0)
 7253.                (yll%base_addr)(1 + $I_L7235_202, 0) = (tll_fixed%base_addr)($jtyp_S4, 1, 0)
 7254.                (yu%base_addr)(1 + $I_L7235_202, 0) = (tu_fixed%base_addr)($jtyp_S4, 1, 0)
 7255.                (yefac%base_addr)(1 + $I_L7235_202, 0) = (defac_fixed%base_addr)($jtyp_S4, 1, 0)
 7256.                (yootd%base_addr)(1 + $I_L7235_202, 0) = (rootd%base_addr)($jtyp_S4, 1, 0)
 7257.                (yh1%base_addr)(1 + $I_L7235_202, 0) = (ph1_fixed%base_addr)($jtyp_S4, 1, 0)
 7258.                (yh2%base_addr)(1 + $I_L7235_202, 0) = (ph2_fixed%base_addr)($jtyp_S4, 1, 0)
 7241.                $I_L7235_202 = 1 + $I_L7235_202
 7240.                if ( $I_L7235_202 >= 2 ) exit
 7240.             enddo
 7262.             $I_L7262_138 = 0
 7262. !dir$ ivdep
 7262.             do
 7266.                (ylt%base_addr)(1 + $I_L7262_138, 1, 0) = (zlt_fixed%base_addr)(12, 1 + $I_L7262_138, 1, 0)
 7267.                (yreen%base_addr)(1 + $I_L7262_138, 1, 0) = (green_fixed%base_addr)(12, 1 + $I_L7262_138, 1, 0)
 7268.                (ycover%base_addr)(1 + $I_L7262_138, 1, 0) = (xcover_fixed%base_addr)(12, 1 + $I_L7262_138, 1, 0)
 7266.                (ylt%base_addr)(1 + $I_L7262_138, 2, 0) = (zlt_fixed%base_addr)(13, 1 + $I_L7262_138, 1, 0)
 7267.                (yreen%base_addr)(1 + $I_L7262_138, 2, 0) = (green_fixed%base_addr)(13, 1 + $I_L7262_138, 1, 0)
 7268.                (ycover%base_addr)(1 + $I_L7262_138, 2, 0) = (xcover_fixed%base_addr)(13, 1 + $I_L7262_138, 1, 0)
 7270.                $I_L7262_138 = 1 + $I_L7262_138
 7265.                if ( $I_L7262_138 >= 12 ) exit
 7265.             enddo
 7273.             $I_L7273_200 = 0
 7273.             do
 7272.                $I_L7272_170 = 0
 7272. !dir$ ivdep
 7272.                do
 7274.                   (rstpar_fixed%base_addr)(13, 1 + $I_L7272_170, 1 + $I_L7273_200, 0) = 1000.0
 7284.                   $I_L7272_170 = 1 + $I_L7272_170
 7273.                   if ( $I_L7272_170 >= 2 ) exit
 7273.                enddo
 7275.                $I_L7273_200 = 1 + $I_L7273_200
 7275.                if ( $I_L7273_200 >= 3 ) exit
 7275.             enddo
 7272.             $I_L7272_172 = 0
 7272. !dir$ ivdep
 7272.             do
 7276.                (chil_fixed%base_addr)(13, 1 + $I_L7272_172, 0) = 1.0e-2
 7277.                (topt_fixed%base_addr)(13, 1 + $I_L7272_172, 0) = 310.0
 7278.                (tll_fixed%base_addr)(13, 1 + $I_L7272_172, 0) = 300.0
 7279.                (tu_fixed%base_addr)(13, 1 + $I_L7272_172, 0) = 320.0
 7280.                (defac_fixed%base_addr)(13, 1 + $I_L7272_172, 0) = 0.0
 7281.                (ph1_fixed%base_addr)(13, 1 + $I_L7272_172, 0) = 3.0
 7282.                (ph2_fixed%base_addr)(13, 1 + $I_L7272_172, 0) = 6.0
 7283.                (rootd%base_addr)(13, 1 + $I_L7272_172, 0) = 2.1000000000000001
 7284.                $I_L7272_172 = 1 + $I_L7272_172
 7275.                if ( $I_L7272_172 >= 2 ) exit
 7275.             enddo
 7286.             (bee%base_addr)(13, 0) = 4.7999999999999998
 7287.             (phsat%base_addr)(13, 0) = -1.6700000000000001e-1
 7288.             (satco%base_addr)(13, 0) = 7.6199999999999995e-5
 7289.             (poros%base_addr)(13, 0) = 4.3519999999999998e-1
 7304.             (zdepth%base_addr)(13, 1, 0) = 1.0
 7305.             (zdepth%base_addr)(13, 2, 0) = 1.0
 7306.             (zdepth%base_addr)(13, 3, 0) = 1.0
 7311.             $dz_S12 = 8440.4416326530609 * log( ( si1 * 1.0/sl1 ) )
 7314.             $dzcut_S13 = 5.9999999999999998e-1 * $dz_S12
 7315.             $SC_xd_I460 = xd%dim_1%EX
 7315.             $SC_xd_I362 = xd%dim_1%LB
 7291.             $I_L7291_140 = 0
 7291. !dir$ ivdep
 7291.             do
 7292.                (zlt_fixed%base_addr)(13, 1 + $I_L7291_140, 1, 0) = 1.0e-4
 7293.                (zlt_fixed%base_addr)(13, 1 + $I_L7291_140, 2, 0) = 1.0e-4
 7294.                (z2%base_addr)(13, 1 + $I_L7291_140, 0) = 1.0000000000000001e-1
 7295.                (z1%base_addr)(13, 1 + $I_L7291_140, 0) = 1.0e-4
 7296.                (xcover_fixed%base_addr)(13, 1 + $I_L7291_140, 1, 0) = 1.0e-4
 7297.                (xcover_fixed%base_addr)(13, 1 + $I_L7291_140, 2, 0) = 1.0e-4
 7298.                (x0x%base_addr)(13, 1 + $I_L7291_140, 0) = 1.0e-2
 7299.                (xd%base_addr)(13, 1 + $I_L7291_140, 0) = 4.0000000000000002e-4
 7300.                (xbc%base_addr)(13, 1 + $I_L7291_140, 0) = 35461.0
 7301.                (xdc%base_addr)(13, 1 + $I_L7291_140, 0) = 28.5
 7315.                (xd%base_addr)(1, 1 + $I_L7291_140, 0) = min( $dzcut_S13, (xd%base_addr)(1, 1 + $I_L7291_140, 0) )
 7302.                $I_L7291_140 = 1 + $I_L7291_140
 7291.                if ( $I_L7291_140 >= 12 ) exit
 7291.             enddo
 7320.             $dzcut_S14 = 5.9999999999999998e-1 * $dz_S12
 7321.             $SC_xd_I363 = xd%dim_2%SM
 7321.             $SC_xd_I461 = xd%dim_2%EX
 7321.             $SC_xd_I364 = xd%dim_2%LB
 7321.             $SC_xd_I460 = xd%dim_1%EX
 7321.             $SC_xd_I362 = xd%dim_1%LB
 7321.             $I_L7321_198 = 0
 7321.             do
 7321.                $I_L7321_168 = 0
 7321. !dir$ ivdep
 7321.                do
 7321.                   (xd%base_addr)(2 + $I_L7321_168, 1 + $I_L7321_198, 0) = min( $dzcut_S14, (xd%base_addr)(2 + $I_L7321_168, 1 + $I_L7321_198, 0) )
 7321.                   $I_L7321_168 = 1 + $I_L7321_168
 7321.                   if ( $I_L7321_168 >= 12 ) exit
 7321.                enddo
 7321.                $I_L7321_198 = 1 + $I_L7321_198
 7321.                if ( $I_L7321_198 >= 12 ) exit
 7321.             enddo
 7321.          endif
 7321.       endif
 7322.       return
 7322.       end
 7322.       
 7327.       
 7327.       subroutine re_assign_sib_soil_prop
 7383.       return
 7383.       end
 7383.       
 7387.       
 7387.       subroutine wheat( latitu, itype, nmax, colrad, month, xday, yrl, idatec, monl, nsx )
 7387.       t$97 = nmax
 7441.       t$916 = _zla( 0, nmax )
 7454.       t$919 = 8 * _zla( 0, nmax )
 7458.       t$920 = 8 * _zla( 0, nmax )
 7458.       t$922 = 16 * _zla( 0, nmax )
 7459.       t$923 = 16 * _zla( 0, nmax )
 7459.       t$925 = 24 * _zla( 0, nmax )
 7457.       t$926 = 24 * _zla( 0, nmax )
 7457.       t$928 = 32 * _zla( 0, nmax )
 7469.       t$930 = 36 * _zla( 0, nmax )
 7468.       t$932 = 40 * _zla( 0, nmax )
 7387.       t$933 = _zla( 0, nmax )
 7387.       t$934 = 9 * _zla( 0, nmax )
 7474.       t$935 = 40 * _zla( 0, nmax )
 7474.       t$937 = 112 * _zla( 0, nmax )
 7451.       t$938 = 112 * _zla( 0, nmax )
 7451.       t$940 = 120 * _zla( 0, nmax )
 7453.       t$941 = 120 * _zla( 0, nmax )
 7453.       t$943 = 128 * _zla( 0, nmax )
 7475.       t$945 = 132 * _zla( 0, nmax )
 7455.       t$946 = 8 * ( ( 7 + 132 * _zla( 0, nmax ) ) / 8 )
 7455.       t$948 = 8 * _zla( 0, nmax ) + 8 * ( ( 7 + 132 * _zla( 0, nmax ) ) / 8 )
 7456.       t$949 = 8 * _zla( 0, nmax ) + 8 * ( ( 7 + 132 * _zla( 0, nmax ) ) / 8 )
 7456.       t$951 = 16 * _zla( 0, nmax ) + 8 * ( ( 7 + 132 * _zla( 0, nmax ) ) / 8 )
 7387.       t$952 = 13 * _zla( 0, nmax )
 7488.       t$953 = 16 * _zla( 0, nmax ) + 8 * ( ( 7 + 132 * _zla( 0, nmax ) ) / 8 )
 7488.       t$955 = 120 * _zla( 0, nmax ) + 8 * ( ( 7 + 132 * _zla( 0, nmax ) ) / 8 )
 7387.       t$917 = int( _alloc( 120 * _zla( 0, nmax ) + 8 * ( ( 7 + 132 * _zla( 0, nmax ) ) / 8 ) ), 8 )
 7454.       t$918 = t$917
 7458.       t$921 = t$917 + 8 * _zla( 0, nmax )
 7459.       t$924 = t$917 + 16 * _zla( 0, nmax )
 7457.       t$927 = t$917 + 24 * _zla( 0, nmax )
 7469.       t$929 = t$917 + 32 * _zla( 0, nmax )
 7468.       t$931 = t$917 + 36 * _zla( 0, nmax )
 7474.       t$936 = t$917 + 40 * _zla( 0, nmax )
 7451.       t$939 = t$917 + 112 * _zla( 0, nmax )
 7453.       t$942 = t$917 + 120 * _zla( 0, nmax )
 7475.       t$944 = t$917 + 128 * _zla( 0, nmax )
 7455.       t$947 = t$917 + 8 * ( ( 7 + 132 * _zla( 0, nmax ) ) / 8 )
 7456.       t$950 = t$917 + 8 * _zla( 0, nmax ) + 8 * ( ( 7 + 132 * _zla( 0, nmax ) ) / 8 )
 7488.       t$954 = t$917 + 16 * _zla( 0, nmax ) + 8 * ( ( 7 + 132 * _zla( 0, nmax ) ) / 8 )
 7499.       $F_A33 = nmax
 7499.       if ( nmax > 0 ) then
 7499.          $I_L7499_108 = 0
 7499. !dir$ ivdep
 7499.          do
 7499.             nsx(1 + $I_L7499_108) = 0
 7499.             $I_L7499_108 = 1 + $I_L7499_108
 7499.             if ( $I_L7499_108 >= $F_A33 ) exit
 7499.          enddo
 7499.       endif
 7500.       $F_A34 = nmax
 7500.       if ( nmax > 0 ) then
 7500.          $I_L7500_110 = 0
 7500. !dir$ ivdep
 7500.          do
 7500.             index(1 + $I_L7500_110) = 0
 7500.             $I_L7500_110 = 1 + $I_L7500_110
 7500.             if ( $I_L7500_110 >= $F_A34 ) exit
 7500.          enddo
 7500.       endif
 7501.       $F_A35 = nmax
 7501.       if ( nmax > 0 ) then
 7501.          $I_L7501_128 = 0
 7501.          do
 7501.             $I_L7501_112 = 0
 7501. !dir$ ivdep
 7501.             do
 7501.                phenst(1 + $I_L7501_112, 1 + $I_L7501_128) = 0.0
 7501.                $I_L7501_112 = 1 + $I_L7501_112
 7501.                if ( $I_L7501_112 >= $F_A35 ) exit
 7501.             enddo
 7501.             $I_L7501_128 = 1 + $I_L7501_128
 7501.             if ( $I_L7501_128 >= 9 ) exit
 7501.          enddo
 7512.          $I_L7512_92 = 0
 7512. !dir$ ivdep
 7512.          do
 7518.             $phi_WR0_R0 = 90.0 + -57.295780490442965 * colrad(1 + $I_L7512_92)
 7518.             phi(1 + $I_L7512_92) = $phi_WR0_R0
 7523.             if ( abs( $phi_WR0_R0 ) > 55.0 ) then
 7523.                $phi_WR0_R0 = sign( 55.0, $phi_WR0_R0 )
 7523.                phi(1 + $I_L7512_92) = $phi_WR0_R0
 7523.             endif
 7525.             if ( abs( $phi_WR0_R0 ) < 20.0 ) then
 7525.                $phi_WR0_R0 = sign( 20.0, $phi_WR0_R0 )
 7525.                phi(1 + $I_L7512_92) = $phi_WR0_R0
 7525.             endif
 7527.             $I_L7512_92 = 1 + $I_L7512_92
 7525.             if ( $I_L7512_92 >= nmax ) exit
 7525.          enddo
 7546.          $I_L7546_96 = 0
 7546. !dir$ ivdep
 7546.          do
 7547.             if ( itype(1 + $I_L7546_96) == 12 ) then
 7548.                $flip_S2 = 0.0
 7549.                if ( phi(1 + $I_L7546_96) < 0.0 ) then
 7549.                   $flip_S2 = 5.0e-1 * yrl
 7549.                endif
 7554.                $phenst_WR0_R1 = ( -65.0 + 4.5 * abs( phi(1 + $I_L7546_96) ) ) * ( 2.7378507871321013e-3 * yrl ) + $flip_S2
 7554.                phenst(1 + $I_L7546_96, 2) = $phenst_WR0_R1
 7555.                phenst(1 + $I_L7546_96, 3) = ( -47.200000000000003 + 4.7400000000000002 * abs( phi(1 + $I_L7546_96) ) ) * ( 2.7378507871321013e-3 * yrl ) + $flip_S2
 7556.                phenst(1 + $I_L7546_96, 4) = ( -31.800000000000001 + 4.8600000000000003 * abs( phi(1 + $I_L7546_96) ) ) * ( 2.7378507871321013e-3 * yrl ) + $flip_S2
 7557.                phenst(1 + $I_L7546_96, 5) = ( -2.0 + 4.5499999999999998 * abs( phi(1 + $I_L7546_96) ) ) * ( 2.7378507871321013e-3 * yrl ) + $flip_S2
 7558.                $phenst_WR0_R2 = ( 10.5 + 4.3499999999999996 * abs( phi(1 + $I_L7546_96) ) ) * ( 2.7378507871321013e-3 * yrl ) + $flip_S2
 7558.                phenst(1 + $I_L7546_96, 6) = $phenst_WR0_R2
 7561.                phenst(1 + $I_L7546_96, 7) = $phenst_WR0_R2 + 8.2135523613963042e-3 * yrl
 7562.                $phenst_WR0_R3 = $phenst_WR0_R1 + -( abs( -2.9999999999999999e-1 + 5.21 * abs( phi(1 + $I_L7546_96) ) ) * ( 2.7378507871321013e-3 * yrl ) )
 7562.                phenst(1 + $I_L7546_96, 1) = $phenst_WR0_R3
 7563.                phenst(1 + $I_L7546_96, 9) = $phenst_WR0_R3
 7564.                phenst(1 + $I_L7546_96, 8) = $phenst_WR0_R3 + -1.3689253935660506e-2 * yrl
 7564.             endif
 7565.             $I_L7546_96 = 1 + $I_L7546_96
 7565.             if ( $I_L7546_96 >= nmax ) exit
 7565.          enddo
 7528.          $I_L7528_120 = 0
 7528.          do
 7529.             $SCA_xgren_I58 = xgren(1 + $I_L7528_120)
 7529.             $I_L7529_94 = 0
 7529. !dir$ ivdep
 7529.             do
 7530.                xgreen(1 + $I_L7529_94, 1 + $I_L7528_120) = $SCA_xgren_I58
 7531.                $I_L7529_94 = 1 + $I_L7529_94
 7529.                if ( $I_L7529_94 >= nmax ) exit
 7529.             enddo
 7532.             $I_L7528_120 = 1 + $I_L7528_120
 7531.             if ( $I_L7528_120 >= 13 ) exit
 7531.          enddo
 7566.          $I_L7566_122 = 0
 7566. !dir$ blocking_size( 0, 0 )
 7566.          do
 7567.             $I_L7567_98 = 0
 7567. !dir$ ivdep
 7567. !dir$ blocking_size( 0, 0 )
 7567.             do
 7568.                if ( itype(1 + $I_L7567_98) == 12 ) then
 7572.                   if ( phenst(1 + $I_L7567_98, 1 + $I_L7566_122) < 0.0 ) then
 7572.                      phenst(1 + $I_L7567_98, 1 + $I_L7566_122) = phenst(1 + $I_L7567_98, 1 + $I_L7566_122) + yrl
 7572.                   endif
 7573.                   if ( phenst(1 + $I_L7567_98, 1 + $I_L7566_122) > yrl ) then
 7573.                      phenst(1 + $I_L7567_98, 1 + $I_L7566_122) = phenst(1 + $I_L7567_98, 1 + $I_L7566_122) + -yrl
 7573.                   endif
 7573.                endif
 7574.                $I_L7567_98 = 1 + $I_L7567_98
 7574.                if ( $I_L7567_98 >= nmax ) exit
 7574.             enddo
 7575.             $I_L7566_122 = 1 + $I_L7566_122
 7574.             if ( $I_L7566_122 >= 9 ) exit
 7574.          enddo
 7574.       endif
 7510.       $thrsh_S13 = -2.5e-1 * mod( 3 + idatec(4), 4 )
 7511.       $F_A36 = nmax
 7511.       if ( nmax > 0 ) then
 7511.          $I_L7511_114 = 0
 7511. !dir$ ivdep
 7511.          do
 7511.             test(1 + $I_L7511_114) = .true.
 7511.             $I_L7511_114 = 1 + $I_L7511_114
 7511.             if ( $I_L7511_114 >= $F_A36 ) exit
 7511.          enddo
 7511.       endif
 7537.       $kold_S5 = 0
 7543.       $SC_idatec_I0 = idatec(4)
 7543.       if ( mod( $SC_idatec_I0, 4 ) == 0 ) then
 7539.          kmon(1) = 0
 7544.          $kold_S5 = monl(1)
 7539.          kmon(2) = $kold_S5
 7543.          kmon(2) = 1 + $kold_S5
 7544.          $kold_S5 = $kold_S5 + monl(2)
 7538.          $I_L7538_118 = 0
 7538. !dir$ unroll 4
 7538.          do
 7539.             kmon(3 + $I_L7538_118) = $kold_S5
 7544.             $kold_S5 = $kold_S5 + monl(3 + $I_L7538_118)
 7545.             $I_L7538_118 = 1 + $I_L7538_118
 7543.             if ( $I_L7538_118 >= 10 ) exit
 7543.          enddo
 7543.       else
 7538.          $I_L7538_106 = 0
 7538. !dir$ unroll 4
 7538.          do
 7539.             kmon(1 + $I_L7538_106) = $kold_S5
 7544.             $kold_S5 = $kold_S5 + monl(1 + $I_L7538_106)
 7545.             $I_L7538_106 = 1 + $I_L7538_106
 7543.             if ( $I_L7538_106 >= 12 ) exit
 7543.          enddo
 7543.       endif
 7578.       if ( nmax > 0 ) then
 7577.          $I_L7577_124 = 0
 7577. !dir$ blocking_size( 0, 0 )
 7577.          do
 7578.             $I_L7578_100 = 0
 7578. !dir$ ivdep
 7578. !dir$ blocking_size( 0, 0 )
 7578.             do
 7579.                if ( itype(1 + $I_L7578_100) == 12 ) then
 7583.                   if ( phenst(1 + $I_L7578_100, 3) <= kmon(2 + $I_L7577_124) ) then
 7584.                      mind(1 + $I_L7578_100) = ( 1 + $I_L7577_124 )
 7586.                      xgreen(1 + $I_L7578_100, 2 + $I_L7577_124) = 9.0000000000000002e-1
 7587.                      xgreen(1 + $I_L7578_100, 3 + $I_L7577_124) = 9.0000000000000002e-1
 7587.                   endif
 7587.                endif
 7590.                $I_L7578_100 = 1 + $I_L7578_100
 7590.                if ( $I_L7578_100 >= nmax ) exit
 7590.             enddo
 7591.             $I_L7577_124 = 1 + $I_L7577_124
 7590.             if ( $I_L7577_124 >= 4 ) exit
 7590.          enddo
 7577.          $I_L7577_130 = 0
 7577. !dir$ blocking_size( 0, 0 )
 7577.          do
 7578.             $I_L7578_116 = 0
 7578. !dir$ ivdep
 7578. !dir$ blocking_size( 0, 0 )
 7578.             do
 7579.                if ( itype(1 + $I_L7578_116) == 12 ) then
 7583.                   if ( phenst(1 + $I_L7578_116, 3) <= kmon(6 + $I_L7577_130) ) then
 7584.                      mind(1 + $I_L7578_116) = ( 5 + $I_L7577_130 )
 7584.                   endif
 7584.                endif
 7590.                $I_L7578_116 = 1 + $I_L7578_116
 7590.                if ( $I_L7578_116 >= nmax ) exit
 7590.             enddo
 7591.             $I_L7577_130 = 1 + $I_L7577_130
 7590.             if ( $I_L7577_130 >= 8 ) exit
 7590.          enddo
 7590.       endif
 7631.       $SC_idatec_I9 = idatec(2)
 7633.       $SC_idatec_I0 = idatec(4)
 7594.       if ( nmax > 0 ) then
 7593.          $I_L7593_126 = 0
 7593.          do
 7594.             $I_L7594_102 = 0
 7594.             do
 7595.                if ( itype(1 + $I_L7594_102) == 12 ) then
 7597.                   chilw(1 + $I_L7594_102) = -2.0e-2
 7598.                   tlai(1 + $I_L7594_102) = 5.0e-1
 7599.                   grlf(1 + $I_L7594_102) = 5.9999999999999998e-1
 7600.                   xcover2(1 + $I_L7594_102) = (xcover%base_addr)(12, month(1 + $I_L7594_102), 1, 0)
 7604.                   if ( test(1 + $I_L7594_102) ) then
 7605.                      $diff1_WR0_R5 = phenst(1 + $I_L7594_102, 2 + $I_L7593_126) + -phenst(1 + $I_L7594_102, 1 + $I_L7593_126)
 7606.                      $diff2_WR0_R6 = xday + -phenst(1 + $I_L7594_102, 1 + $I_L7593_126)
 7607.                      if ( phenst(1 + $I_L7594_102, 1 + $I_L7593_126) >= phenst(1 + $I_L7594_102, 2 + $I_L7593_126) ) then
 7608.                         if ( xday < phenst(1 + $I_L7594_102, 1 + $I_L7593_126) ) then
 7608.                            goto 10
 7608.                         else if ( xday > phenst(1 + $I_L7594_102, 2 + $I_L7593_126) ) then
 7608.    10                      continue
 7612.                            icond = 0
 7613.                            if ( xday >= phenst(1 + $I_L7594_102, 1 + $I_L7593_126) ) then
 7613.                               if ( xday <= yrl ) then
 7613.                                  icond = 1
 7613.                               endif
 7613.                            endif
 7614.                            if ( xday >= $thrsh_S13 ) then
 7614.                               if ( xday <= phenst(1 + $I_L7594_102, 2 + $I_L7593_126) ) then
 7614.                                  icond = 2
 7614.                               endif
 7614.                            endif
 7615.                            if ( icond /= 2 ) then
 7616.                               $diff1_WR0_R5 = yrl + -phenst(1 + $I_L7594_102, 1 + $I_L7593_126) + phenst(1 + $I_L7594_102, 2 + $I_L7593_126)
 7617.                               $diff2_WR0_R6 = xday + -phenst(1 + $I_L7594_102, 1 + $I_L7593_126)
 7617.                            else
 7619.                               $diff1_WR0_R5 = yrl + -phenst(1 + $I_L7594_102, 1 + $I_L7593_126) + phenst(1 + $I_L7594_102, 2 + $I_L7593_126)
 7620.                               $diff2_WR0_R6 = yrl + -phenst(1 + $I_L7594_102, 1 + $I_L7593_126) + xday
 7620.                            endif
 7620.                         endif
 7623.                         if ( icond /= 0 ) then
 7627.                            $perc_S19 = ( $diff2_WR0_R6 * 1.0/$diff1_WR0_R5 )
 7632.                            $mnl_S15 = monl($SC_idatec_I9)
 7633.                            if ( mod( $SC_idatec_I0, 4 ) == 0 ) then
 7633.                               if ( $SC_idatec_I9 == 2 ) then
 7633.                                  $mnl_S15 = 1 + $mnl_S15
 7633.                               endif
 7633.                            endif
 7634.                            if ( xday > phenst(1 + $I_L7594_102, 3) ) then
 7635.                               if ( $SC_idatec_I9 + -mind(1 + $I_L7594_102) /= 0 ) then
 7636.                                  $x1_S18 = vlt($SC_idatec_I9)
 7637.                                  $xdif1_S17 = real( $mnl_S15, 8 )
 7638.                                  $xdif2_S16 = xday + ( -kmon($SC_idatec_I9) )
 7638.                               else
 7640.                                  $x1_S18 = 6.0
 7641.                                  $xdif1_S17 = kmon(1 + $SC_idatec_I9) + -phenst(1 + $I_L7594_102, 3)
 7642.                                  $xdif2_S16 = xday + -phenst(1 + $I_L7594_102, 3)
 7642.                               endif
 7644.                               tlai(1 + $I_L7594_102) = $x1_S18 + -( ( ( $x1_S18 + -vlt(1 + $SC_idatec_I9) ) * 1.0/$xdif1_S17 ) * $xdif2_S16 )
 7644.                            else
 7646.                               tlai(1 + $I_L7594_102) = $perc_S19 * ( wlai(2 + $I_L7593_126) + -wlai(1 + $I_L7593_126) ) + wlai(1 + $I_L7593_126)
 7646.                            endif
 7648.                            if ( xday > phenst(1 + $I_L7594_102, 4) ) then
 7649.                               xcover2(1 + $I_L7594_102) = 5.6899999999999995e-1 + ( 1.0/( yrl + -phenst(1 + $I_L7594_102, 4) ) * ( yrl + -xday ) * 3.3100000000000007e-1 )
 7649.                            else
 7651.                               $LD_SPLT_P2 = tlai(1 + $I_L7594_102)
 7651.                               xcover2(1 + $I_L7594_102) = 9.0000000000000002e-1 * ( 1.0 + -_expn( -$LD_SPLT_P2 ) )
 7651.                            endif
 7653.                            grlf(1 + $I_L7594_102) = xgreen(1 + $I_L7594_102, $SC_idatec_I9) + -( ( ( xgreen(1 + $I_L7594_102, $SC_idatec_I9) + -xgreen(1 + $I_L7594_102, 1 + $SC_idatec_I9) ) * 1.0/$mnl_S15 ) * ( xday + ( -kmon($SC_idatec_I9) ) ) )
 7655.                            if ( $I_L7593_126 /= 0 ) then
 7655.                               if ( -1 + $I_L7593_126 /= 0 ) then
 7655.                                  chilw(1 + $I_L7594_102) = -2.0000000000000001e-1
 7655.                               endif
 7655.                            endif
 7656.                            test(1 + $I_L7594_102) = .false.
 7657.                            index(1 + $I_L7594_102) = ( 1 + $I_L7593_126 )
 7657.                         endif
 7657.                      endif
 7657.                   endif
 7657.                endif
 7661.                $I_L7594_102 = 1 + $I_L7594_102
 7661.                if ( $I_L7594_102 >= nmax ) exit
 7661.             enddo
 7662.             $I_L7593_126 = 1 + $I_L7593_126
 7661.             if ( $I_L7593_126 >= 8 ) exit
 7661.          enddo
 7664.          $I_L7664_104 = 0
 7664. !dir$ ivdep
 7664.          do
 7665.             if ( itype(1 + $I_L7664_104) == 12 ) then
 7666.                $nsx_WR0_R7 = index(1 + $I_L7664_104)
 7667.                if ( $nsx_WR0_R7 == 9 ) then
 7667.                   $nsx_WR0_R7 = 1
 7667.                endif
 7668.                $nsx_WR0_R7 = min( 6, $nsx_WR0_R7 )
 7668.                nsx(1 + $I_L7664_104) = $nsx_WR0_R7
 7669.                (vcover_gbl%base_addr)(1 + $I_L7664_104, latitu, 1, 0) = xcover2(1 + $I_L7664_104)
 7670.                (zlt_gbl%base_addr)(1 + $I_L7664_104, latitu, 1, 0) = tlai(1 + $I_L7664_104)
 7671.                (green_gbl%base_addr)(1 + $I_L7664_104, latitu, 1, 0) = grlf(1 + $I_L7664_104)
 7672.                (chil_gbl%base_addr)(1 + $I_L7664_104, latitu, 1, 0) = chilw(1 + $I_L7664_104)
 7673.                (topt_gbl%base_addr)(1 + $I_L7664_104, latitu, 1, 0) = (yopt%base_addr)(2, 0)
 7674.                (tll_gbl%base_addr)(1 + $I_L7664_104, latitu, 1, 0) = (yll%base_addr)(2, 0)
 7675.                (tu_gbl%base_addr)(1 + $I_L7664_104, latitu, 1, 0) = (yu%base_addr)(2, 0)
 7676.                (defac_gbl%base_addr)(1 + $I_L7664_104, latitu, 1, 0) = (yefac%base_addr)(2, 0)
 7677.                (ph1_gbl%base_addr)(1 + $I_L7664_104, latitu, 1, 0) = (yh1%base_addr)(2, 0)
 7678.                (ph2_gbl%base_addr)(1 + $I_L7664_104, latitu, 1, 0) = (yh2%base_addr)(2, 0)
 7679.                (rstpar_gbl%base_addr)(1 + $I_L7664_104, latitu, 1, 1, 0) = (ystpar%base_addr)(2, 1, 0)
 7680.                (rstpar_gbl%base_addr)(1 + $I_L7664_104, latitu, 1, 2, 0) = (ystpar%base_addr)(2, 2, 0)
 7681.                (rstpar_gbl%base_addr)(1 + $I_L7664_104, latitu, 1, 3, 0) = (ystpar%base_addr)(2, 3, 0)
 7681.             endif
 7683.             $I_L7664_104 = 1 + $I_L7664_104
 7683.             if ( $I_L7664_104 >= nmax ) exit
 7683.          enddo
 7683.       endif
 7387.       _free( t$917 )
 7685.       return
 7685.       end
 7685.       
 7695.       
 7695.       subroutine sibwet( ibmax, jbmax, sinp, sinmax, imask, wsib, ssib, mxiter, ibmaxperjb )
 7695.       t$105 = ibmax
 7695.       t$106 = jbmax
 7721.       t$956 = _zla( 0, ibmax )
 7695.       t$957 = _zla( 0, ibmax )
 7721.       t$958 = _zla( 0, jbmax )
 7695.       t$959 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 7695.       ibmaxperjb%dim_1%LB = 1
 7695.       t$108 = mxiter
 7732.       t$960 = _zla( 0, mxiter )
 7695.       t$961 = 13 * _zla( 0, mxiter )
 7732.       t$964 = 104 * _zla( 0, mxiter )
 7730.       t$965 = 104 * _zla( 0, mxiter )
 7730.       t$967 = 208 * _zla( 0, mxiter )
 7731.       t$968 = 208 * _zla( 0, mxiter )
 7731.       t$970 = 312 * _zla( 0, mxiter )
 7695.       t$962 = int( _alloc( 312 * _zla( 0, mxiter ) ), 8 )
 7732.       t$963 = t$962
 7730.       t$966 = t$962 + 104 * _zla( 0, mxiter )
 7731.       t$969 = t$962 + 208 * _zla( 0, mxiter )
 7783.       $F_A33 = mxiter
 7783.       if ( mxiter > 0 ) then
 7783.          $I_L7783_72 = 0
 7783.          do
 7783.             $I_L7783_58 = 0
 7783. !dir$ ivdep
 7783.             do
 7783.                sm(1 + $I_L7783_58, 1 + $I_L7783_72) = 0.0
 7783.                $I_L7783_58 = 1 + $I_L7783_58
 7783.                if ( $I_L7783_58 >= 13 ) exit
 7783.             enddo
 7783.             $I_L7783_72 = 1 + $I_L7783_72
 7783.             if ( $I_L7783_72 >= $F_A33 ) exit
 7783.          enddo
 7783.       endif
 7784.       $F_A34 = mxiter
 7784.       if ( mxiter > 0 ) then
 7784.          $I_L7784_74 = 0
 7784.          do
 7784.             $I_L7784_60 = 0
 7784. !dir$ ivdep
 7784.             do
 7784.                time(1 + $I_L7784_60, 1 + $I_L7784_74) = 0.0
 7784.                $I_L7784_60 = 1 + $I_L7784_60
 7784.                if ( $I_L7784_60 >= 13 ) exit
 7784.             enddo
 7784.             $I_L7784_74 = 1 + $I_L7784_74
 7784.             if ( $I_L7784_74 >= $F_A34 ) exit
 7784.          enddo
 7784.       endif
 7785.       $F_A35 = mxiter
 7785.       if ( mxiter > 0 ) then
 7785.          $I_L7785_76 = 0
 7785.          do
 7785.             $I_L7785_62 = 0
 7785. !dir$ ivdep
 7785.             do
 7785.                fact(1 + $I_L7785_62, 1 + $I_L7785_76) = 0.0
 7785.                $I_L7785_62 = 1 + $I_L7785_62
 7785.                if ( $I_L7785_62 >= 13 ) exit
 7785.             enddo
 7785.             $I_L7785_76 = 1 + $I_L7785_76
 7785.             if ( $I_L7785_76 >= $F_A35 ) exit
 7785.          enddo
 7785.       endif
 7786.       $F_A36 = jbmax
 7786.       $F_A37 = ibmax
 7786.       if ( and( -$F_A37, -$F_A36 ) < 0 ) then
 7786.          $I_L7786_78 = 0
 7786.          do
 7786.             $I_L7786_64 = 0
 7786. !dir$ ivdep
 7786.             do
 7786.                ssib(1 + $I_L7786_64, 1 + $I_L7786_78) = 0.0
 7786.                $I_L7786_64 = 1 + $I_L7786_64
 7786.                if ( $I_L7786_64 >= $F_A37 ) exit
 7786.             enddo
 7786.             $I_L7786_78 = 1 + $I_L7786_78
 7786.             if ( $I_L7786_78 >= $F_A36 ) exit
 7786.          enddo
 7786.       endif
 7787.       $F_A38 = jbmax
 7787.       $F_A39 = ibmax
 7787.       if ( and( -$F_A39, -$F_A38 ) < 0 ) then
 7787.          $I_L7787_80 = 0
 7787.          do
 7787.             $I_L7787_66 = 0
 7787. !dir$ ivdep
 7787.             do
 7787.                wsib(1 + $I_L7787_66, 1 + $I_L7787_80) = 0.0
 7787.                $I_L7787_66 = 1 + $I_L7787_66
 7787.                if ( $I_L7787_66 >= $F_A39 ) exit
 7787.             enddo
 7787.             $I_L7787_80 = 1 + $I_L7787_80
 7787.             if ( $I_L7787_80 >= $F_A38 ) exit
 7787.          enddo
 7787.       endif
 7792.       $I_L7792_68 = 0
 7792.       do
 7794.          $SC_tzdep_I0 = (zdepth%base_addr)(1 + $I_L7792_68, 1, 0)
 7795.          $SC_tzdep_I1 = (zdepth%base_addr)(1 + $I_L7792_68, 2, 0)
 7796.          $SC_tzdep_I2 = (zdepth%base_addr)(1 + $I_L7792_68, 3, 0)
 7797.          $tphsat_S6 = (phsat%base_addr)(1 + $I_L7792_68, 0)
 7798.          $tbee_S5 = (bee%base_addr)(1 + $I_L7792_68, 0)
 7799.          tporos = (poros%base_addr)(1 + $I_L7792_68, 0)
 7800.          $imm1_S1 = 1
 7801.          $imm2_S2 = 1
 7802.          $SC_tzltm_I3 = (zlt_fixed%base_addr)(1 + $I_L7792_68, 1, 1, 0)
 7803.          $SC_tzltm_I4 = (zlt_fixed%base_addr)(1 + $I_L7792_68, 1, 2, 0)
 7804.          $I_L7804_48 = 0
 7804. !dir$ ivdep
 7804.          do
 7805.             if ( $SC_tzltm_I3 <= (zlt_fixed%base_addr)(1 + $I_L7792_68, 2 + $I_L7804_48, 1, 0) ) then
 7806.                $imm1_S1 = ( 2 + $I_L7804_48 )
 7807.                $SC_tzltm_I3 = (zlt_fixed%base_addr)(1 + $I_L7792_68, 2 + $I_L7804_48, 1, 0)
 7807.             endif
 7809.             if ( $SC_tzltm_I4 <= (zlt_fixed%base_addr)(1 + $I_L7792_68, 2 + $I_L7804_48, 2, 0) ) then
 7810.                $imm2_S2 = ( 2 + $I_L7804_48 )
 7811.                $SC_tzltm_I4 = (zlt_fixed%base_addr)(1 + $I_L7792_68, 2 + $I_L7804_48, 2, 0)
 7811.             endif
 7813.             $I_L7804_48 = 1 + $I_L7804_48
 7812.             if ( $I_L7804_48 >= 11 ) exit
 7812.          enddo
 7814.          $imm_S3 = $imm1_S1
 7815.          $ivegm_S4 = 1
 7816.          if ( $SC_tzltm_I3 <= $SC_tzltm_I4 ) then
 7817.             $imm_S3 = $imm2_S2
 7818.             $ivegm_S4 = 2
 7818.          endif
 7824.          $cover_S17 = (xcover_fixed%base_addr)(1 + $I_L7792_68, $imm_S3, $ivegm_S4, 0)
 7825.          $tph1_S19 = xph1(1 + $I_L7792_68, $ivegm_S4)
 7826.          $tph2_S18 = xph2(1 + $I_L7792_68, $ivegm_S4)
 7832.          sibmax(1 + $I_L7792_68) = ( $SC_tzdep_I0 + $SC_tzdep_I1 + $SC_tzdep_I2 ) * tporos
 7834.          if ( nfctrl(83) > 0 ) then
 7834.             if ( ( 1 + $I_L7792_68 ) <= 0 .or. ( 1 + $I_L7792_68 ) > 13 ) then
 7834.                 _substr(t$2151,1,13) = 'Sfc_SSiB.f90'
 7834.                 _substr(t$2152,1,7) = 'SIBMAX'
 7834.                t$2153 = 1 + $I_L7792_68
 7834.                call _bounds_error(  _substr(t$2151,1,13), 7834,  _substr(t$2152,1,7), 1, 1, 13, t$2153, t$2150 )
 7834.             endif
 7834.             $Unit_temp_O0 = nfprt
 7834.             $IOitem_O1 = ( 1 + $I_L7792_68 )
 7834.             $_IOitem_P0(0) = sibmax(1 + $I_L7792_68)
 7834.             $_IOitem_P0(1) = $SC_tzdep_I0
 7834.             $_IOitem_P0(2) = $SC_tzdep_I1
 7834.             $_IOitem_P0(3) = $SC_tzdep_I2
 7834.             $_IOitem_P0(4) = tporos
 7834.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$118,  _substr(t$117,1,43), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O1, 0x2000200000000L ), _iotype( $_IOitem_P0(:( 0, 4, 1 )), 0x804060300000000L ) ) )
 7834.          endif
 7846.          $sref_S8 = sibmax(1 + $I_L7792_68) * _expn( ( log( -$tphsat_S6 ) * 1.0/$tbee_S5 ) )
 7853.          $smin_S7 = sibmax(1 + $I_L7792_68) * _expn( ( log( -1.0e-10 * $tphsat_S6 ) * 1.0/$tbee_S5 ) )
 7859.          $dssib_S15 = ( ( $sref_S8 + -$smin_S7 ) * 1.0/mxiter )
 7865.          $dw_S10 = ( ( ( $sref_S8 + -$smin_S7 ) * 1.0/mxiter ) * 1.0/sibmax(1 + $I_L7792_68) )
 7874.          $w_S9 = ( $sref_S8 * 1.0/sibmax(1 + $I_L7792_68) )
 7882.          $rsoilm_S14 = 101840.0 * ( 1.0 + -_exp3( log( abs( $w_S9 ) ), $w_S9, 2.7000000000000001e-3 ) )
 7883.          if ( mxiter > 0 ) then
 7899.             $SC_sibmax_I13 = sibmax(1 + $I_L7792_68)
 7884.             $psit_S11 = $tphsat_S6 * _exp3( log( abs( $w_S9 + -5.0e-1 * $dw_S10 ) ), ( $w_S9 + -5.0e-1 * $dw_S10 ), -$tbee_S5 )
 7884.             $rsoil_S13 = 101840.0 * ( 1.0 + -_exp3( log( abs( $w_S9 + -5.0e-1 * $dw_S10 ) ), ( $w_S9 + -5.0e-1 * $dw_S10 ), 2.7000000000000001e-3 ) )
 7884.             $hr_S12 = _expn( ( max( -10.0, ( 6.8570230314891835e-5 * $psit_S11 ) ) ) )
 7900.             times = ( $dssib_S15 * 1.0/( max( 9.9999999999999995e-7, ( $cover_S17 * ( max( 0.0, min( 1.0, ( ( $psit_S11 + -$tph2_S18 + -50.0 ) * 1.0/( $tph1_S19 + -$tph2_S18 ) ) ) ) ) + ( 1.0 + -$cover_S17 ) * ( ( $rsoilm_S14 * 1.0/$rsoil_S13 ) * $hr_S12 ) ) ) ) )
 7901.             sm(1 + $I_L7792_68, 1) = ( $sref_S8 + -$dssib_S15 )
 7902.             time(1 + $I_L7792_68, 1) = ( $dssib_S15 * 1.0/( max( 9.9999999999999995e-7, ( $cover_S17 * ( max( 0.0, min( 1.0, ( ( $psit_S11 + -$tph2_S18 + -50.0 ) * 1.0/( $tph1_S19 + -$tph2_S18 ) ) ) ) ) + ( 1.0 + -$cover_S17 ) * ( ( $rsoilm_S14 * 1.0/$rsoil_S13 ) * $hr_S12 ) ) ) ) )
 7903.             fact(1 + $I_L7792_68, 1) = ( max( 9.9999999999999995e-7, ( $cover_S17 * ( max( 0.0, min( 1.0, ( ( $psit_S11 + -$tph2_S18 + -50.0 ) * 1.0/( $tph1_S19 + -$tph2_S18 ) ) ) ) ) + ( 1.0 + -$cover_S17 ) * ( ( $rsoilm_S14 * 1.0/$rsoil_S13 ) * $hr_S12 ) ) ) )
 7904.             if ( 1 < mxiter ) then
 7883.                $I_L7883_50 = 0
 7883.                do
 7884.                   $psit_S11 = $tphsat_S6 * _exp3( log( abs( ( ( $sref_S8 + -( real( 1 + $I_L7883_50, 8 ) * $dssib_S15 ) ) * 1.0/$SC_sibmax_I13 ) + -5.0e-1 * $dw_S10 ) ), ( ( ( $sref_S8 + -( real( 1 + $I_L7883_50, 8 ) * $dssib_S15 ) ) * 1.0/$SC_sibmax_I13 ) + -5.0e-1 * $dw_S10 ), -$tbee_S5 )
 7884.                   $rsoil_S13 = 101840.0 * ( 1.0 + -_exp3( log( abs( ( ( $sref_S8 + -( real( 1 + $I_L7883_50, 8 ) * $dssib_S15 ) ) * 1.0/$SC_sibmax_I13 ) + -5.0e-1 * $dw_S10 ) ), ( ( ( $sref_S8 + -( real( 1 + $I_L7883_50, 8 ) * $dssib_S15 ) ) * 1.0/$SC_sibmax_I13 ) + -5.0e-1 * $dw_S10 ), 2.7000000000000001e-3 ) )
 7884.                   $hr_S12 = _expn( ( max( -10.0, ( 6.8570230314891835e-5 * $psit_S11 ) ) ) )
 7900.                   times = times + ( $dssib_S15 * 1.0/( max( 9.9999999999999995e-7, ( $cover_S17 * ( max( 0.0, min( 1.0, ( ( $psit_S11 + -$tph2_S18 + -50.0 ) * 1.0/( $tph1_S19 + -$tph2_S18 ) ) ) ) ) + ( 1.0 + -$cover_S17 ) * ( ( $rsoilm_S14 * 1.0/$rsoil_S13 ) * $hr_S12 ) ) ) ) )
 7901.                   sm(1 + $I_L7792_68, 2 + $I_L7883_50) = ( $sref_S8 + -( real( 2 + $I_L7883_50, 8 ) * $dssib_S15 ) )
 7902.                   time(1 + $I_L7792_68, 2 + $I_L7883_50) = times
 7903.                   fact(1 + $I_L7792_68, 2 + $I_L7883_50) = ( max( 9.9999999999999995e-7, ( $cover_S17 * ( max( 0.0, min( 1.0, ( ( $psit_S11 + -$tph2_S18 + -50.0 ) * 1.0/( $tph1_S19 + -$tph2_S18 ) ) ) ) ) + ( 1.0 + -$cover_S17 ) * ( ( $rsoilm_S14 * 1.0/$rsoil_S13 ) * $hr_S12 ) ) ) )
 7904.                   $I_L7883_50 = 1 + $I_L7883_50
 7883.                   if ( $I_L7883_50 >= -1 + mxiter ) exit
 7883.                enddo
 7883.             endif
 7883.          endif
 7906.          $I_L7792_68 = 1 + $I_L7792_68
 7904.          if ( $I_L7792_68 >= 13 ) exit
 7904.       enddo
 7910.       if ( jbmax > 0 ) then
 7910.          $I_L7910_82 = 0
 7910.          do
 7911.             $t_S22 = (ibmaxperjb%base_addr)(1 + $I_L7910_82, 0)
 7911.             if ( $t_S22 > 0 ) then
 7911.                $I_L7911_70 = 0
 7911. !dir$ loop_info (automatic) cache_nt( imask, sinp, ssib )
 7911.                do
 7912.                   $is_S24 = imask(1 + $I_L7911_70, 1 + $I_L7910_82)
 7913.                   if ( imask(1 + $I_L7911_70, 1 + $I_L7910_82) /= 0 ) then
 7914.                      $tsinp_S25 = sinp(1 + $I_L7911_70, 1 + $I_L7910_82)
 7916.                      $tsinp_S26 = min( sinmax, max( $tsinp_S25, 1.0000000000000001e-5 * sinmax ) )
 7917.                      if ( ( min( sinmax, max( $tsinp_S25, 1.0000000000000001e-5 * sinmax ) ) ) > 7.5e-1 * sinmax ) then
 7917.                         $etp_S27 = sinmax + -$tsinp_S26
 7917.                      else
 7920.                         $etp_S27 = log( ( 1.0/$tsinp_S26 * sinmax * 7.5e-1 ) ) * sinmax * 7.5e-1 + 2.5e-1 * sinmax
 7920.                      endif
 7918.                      $facmod_S31 = min( 1.0, ( 1.0/sinmax * $tsinp_S26 * 1.3333333333333333 ) )
 7922.                      $etp_S29 = 1.0e-3 * $etp_S27
 7923.                      if ( mxiter > 0 ) then
 7923.                         $I_L7923_52 = 0
 7923. !dir$ ivdep
 7923.                         do
 7925.                            if ( time($is_S24, 1 + $I_L7923_52) + -$etp_S29 > 0.0 ) then
 7924.                               itsoil = ( 1 + $I_L7923_52 )
 7924.                               goto 10
 7924.                            endif
 7926.                            $I_L7923_52 = 1 + $I_L7923_52
 7926.                            if ( $I_L7923_52 >= mxiter ) exit
 7926.                         enddo
 7924.                         itsoil = mxiter
 7924.    10                   continue
 7927.                         $I_L7927_54 = 0
 7927. !dir$ ivdep
 7927.                         do
 7929.                            if ( fact($is_S24, 1 + $I_L7927_54) + -$facmod_S31 + -1.0e-2 < 0.0 ) then
 7928.                               itfac = ( 1 + $I_L7927_54 )
 7928.                               goto 20
 7928.                            endif
 7930.                            $I_L7927_54 = 1 + $I_L7927_54
 7930.                            if ( $I_L7927_54 >= mxiter ) exit
 7930.                         enddo
 7928.                         itfac = mxiter
 7928.                      endif
 7928.    20                continue
 7931.                      $ssibt_S33 = min( sm($is_S24, itfac), sm($is_S24, itsoil) )
 7932.                      $iter_S34 = 1
 7932.                      if ( mxiter > 0 ) then
 7932.                         $I_L7932_56 = 0
 7932. !dir$ ivdep
 7932.                         do
 7933.                            if ( $ssibt_S33 > sm($is_S24, 1 + $I_L7932_56) ) then
 7932.                               $iter_S34 = ( 1 + $I_L7932_56 )
 7932.                               goto 30
 7932.                            endif
 7934.                            $I_L7932_56 = 1 + $I_L7932_56
 7934.                            if ( $I_L7932_56 >= mxiter ) exit
 7934.                         enddo
 7934.                         $iter_S34 = ( 1 + mxiter )
 7934.                      endif
 7934.    30                continue
 7935.                      ssib(1 + $I_L7911_70, 1 + $I_L7910_82) = sm($is_S24, $iter_S34)
 7941.                      wsib(1 + $I_L7911_70, 1 + $I_L7910_82) = ( sm($is_S24, $iter_S34) * 1.0/sibmax($is_S24) )
 7941.                   endif
 7943.                   $I_L7911_70 = 1 + $I_L7911_70
 7942.                   if ( $I_L7911_70 >= $t_S22 ) exit
 7942.                enddo
 7942.             endif
 7944.             $I_L7910_82 = 1 + $I_L7910_82
 7943.             if ( $I_L7910_82 >= jbmax ) exit
 7943.          enddo
 7943.       endif
 7695.       _free( t$962 )
 7946.       return
 7946.       end
 7946.       
 7950.       
 7950.       subroutine sibwet_glsm( ibmax, jbmax, imask, wsib, ssib, mxiter, ibmaxperjb, soilm, nzg, wsib3d, glsm_w )
 7950.       t$119 = ibmax
 7950.       t$120 = jbmax
 7976.       t$971 = _zla( 0, ibmax )
 7950.       t$972 = _zla( 0, ibmax )
 7976.       t$973 = _zla( 0, jbmax )
 7950.       t$974 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 7950.       ibmaxperjb%dim_1%LB = 1
 7950.       t$975 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 7950.       t$976 = _zla( 0, ibmax ) * _zla( 0, jbmax ) * 3
 7950.       t$121 = nzg
 7982.       t$977 = _zla( 0, nzg )
 7950.       t$978 = _zla( 0, ibmax ) * _zla( 0, jbmax ) * _zla( 0, nzg )
 7950.       t$123 = mxiter
 7986.       t$979 = _zla( 0, mxiter )
 7950.       t$980 = 13 * _zla( 0, mxiter )
 7986.       t$983 = 104 * _zla( 0, mxiter )
 7984.       t$984 = 104 * _zla( 0, mxiter )
 7984.       t$986 = 208 * _zla( 0, mxiter )
 7985.       t$987 = 208 * _zla( 0, mxiter )
 7985.       t$989 = 312 * _zla( 0, mxiter )
 7950.       t$981 = int( _alloc( 312 * _zla( 0, mxiter ) ), 8 )
 7986.       t$982 = t$981
 7984.       t$985 = t$981 + 104 * _zla( 0, mxiter )
 7985.       t$988 = t$981 + 208 * _zla( 0, mxiter )
 8071.       $F_A33 = jbmax
 8071.       $F_A34 = ibmax
 8071.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
 8071.          $I_L8071_125 = 0
 8071.          do
 8071.             $I_L8071_115 = 0
 8071. !dir$ ivdep
 8071.             do
 8071.                ssib(1 + $I_L8071_115, 1 + $I_L8071_125) = 0.0
 8071.                $I_L8071_115 = 1 + $I_L8071_115
 8071.                if ( $I_L8071_115 >= $F_A34 ) exit
 8071.             enddo
 8071.             $I_L8071_125 = 1 + $I_L8071_125
 8071.             if ( $I_L8071_125 >= $F_A33 ) exit
 8071.          enddo
 8071.       endif
 8072.       $F_A35 = jbmax
 8072.       $F_A36 = ibmax
 8072.       if ( and( -$F_A36, -$F_A35 ) < 0 ) then
 8072.          $I_L8072_127 = 0
 8072.          do
 8072.             $I_L8072_117 = 0
 8072. !dir$ ivdep
 8072.             do
 8072.                wsib(1 + $I_L8072_117, 1 + $I_L8072_127) = 0.0
 8072.                $I_L8072_117 = 1 + $I_L8072_117
 8072.                if ( $I_L8072_117 >= $F_A36 ) exit
 8072.             enddo
 8072.             $I_L8072_127 = 1 + $I_L8072_127
 8072.             if ( $I_L8072_127 >= $F_A35 ) exit
 8072.          enddo
 8072.       endif
 8077.       $I_L8077_97 = 0
 8077.       do
 8078.          $SC_tzdep_I0 = (zdepth%base_addr)(1 + $I_L8077_97, 1, 0)
 8079.          $SC_tzdep_I1 = (zdepth%base_addr)(1 + $I_L8077_97, 2, 0)
 8080.          $SC_tzdep_I2 = (zdepth%base_addr)(1 + $I_L8077_97, 3, 0)
 8083.          tporos = (poros%base_addr)(1 + $I_L8077_97, 0)
 8113.          sibmax(1 + $I_L8077_97) = ( $SC_tzdep_I0 + $SC_tzdep_I1 + $SC_tzdep_I2 ) * tporos
 8114.          if ( nfctrl(83) > 0 ) then
 8114.             if ( ( 1 + $I_L8077_97 ) <= 0 .or. ( 1 + $I_L8077_97 ) > 13 ) then
 8114.                 _substr(t$2175,1,13) = 'Sfc_SSiB.f90'
 8114.                 _substr(t$2176,1,7) = 'SIBMAX'
 8114.                t$2177 = 1 + $I_L8077_97
 8114.                call _bounds_error(  _substr(t$2175,1,13), 8114,  _substr(t$2176,1,7), 1, 1, 13, t$2177, t$2174 )
 8114.             endif
 8114.             $Unit_temp_O0 = nfprt
 8114.             $IOitem_O1 = ( 1 + $I_L8077_97 )
 8114.             $_IOitem_P0(0) = sibmax(1 + $I_L8077_97)
 8114.             $_IOitem_P0(1) = $SC_tzdep_I0
 8114.             $_IOitem_P0(2) = $SC_tzdep_I1
 8114.             $_IOitem_P0(3) = $SC_tzdep_I2
 8114.             $_IOitem_P0(4) = tporos
 8114.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$135,  _substr(t$134,1,43), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O1, 0x2000200000000L ), _iotype( $_IOitem_P0(:( 0, 4, 1 )), 0x804060300000000L ) ) )
 8114.          endif
 8144.          $I_L8077_97 = 1 + $I_L8077_97
 8143.          if ( $I_L8077_97 >= 13 ) exit
 8143.       enddo
 8148.       if ( jbmax > 0 ) then
 8148.          $I_L8148_131 = 0
 8148.          do
 8149.             $t_S3 = (ibmaxperjb%base_addr)(1 + $I_L8148_131, 0)
 8149.             if ( $t_S3 > 0 ) then
 8149.                $I_L8149_129 = 0
 8149.                do
 8151.                   $I_L8151_119 = 0
 8151. !dir$ ivdep
 8151.                   do
 8151.                      wsib3d(1 + $I_L8149_129, 1 + $I_L8148_131, 1 + $I_L8151_119) = 0.0
 8151.                      $I_L8151_119 = 1 + $I_L8151_119
 8151.                      if ( $I_L8151_119 >= 3 ) exit
 8151.                   enddo
 8153.                   $is_S5 = imask(1 + $I_L8149_129, 1 + $I_L8148_131)
 8154.                   if ( imask(1 + $I_L8149_129, 1 + $I_L8148_131) /= 0 ) then
 8156.                      $SC_tzdep_I0 = (zdepth%base_addr)($is_S5, 1, 0)
 8157.                      $SC_tzdep_I1 = (zdepth%base_addr)($is_S5, 2, 0)
 8158.                      $SC_tzdep_I2 = (zdepth%base_addr)($is_S5, 3, 0)
 8161.                      $tporos_S20 = (poros%base_addr)($is_S5, 0)
 8165.                      glsm_tzdep(0) = 0.0
 8166.                      glsm_w_sib(0) = 0.0
 8168.                      $glsm_tzdep_WR0_R0 = 0.0
 8168.                      $I_L8168_99 = 0
 8168.                      do
 8169.                         $glsm_tzdep_WR0_R0 = (zdepth%base_addr)($is_S5, 1 + $I_L8168_99, 0) + $glsm_tzdep_WR0_R0
 8169.                         glsm_tzdep(1 + $I_L8168_99) = $glsm_tzdep_WR0_R0
 8170.                         glsm_w_sib(1 + $I_L8168_99) = 0.0
 8171.                         $I_L8168_99 = 1 + $I_L8168_99
 8168.                         if ( $I_L8168_99 >= 3 ) exit
 8168.                      enddo
 8175.                      if ( nzg > 0 ) then
 8175.                         $I_L8175_101 = 0
 8175. !dir$ ivdep
 8175.                         do
 8176.                            glsm_w1d(1 + $I_L8175_101) = glsm_w(1 + $I_L8149_129, 1 + $I_L8148_131, 1 + $I_L8175_101)
 8177.                            $I_L8175_101 = 1 + $I_L8175_101
 8175.                            if ( $I_L8175_101 >= nzg ) exit
 8175.                         enddo
 8175.                      endif
 8185.                      t$2192 = ( max( 0, 1 + nzg ) )
 8185.                      t$2195 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, 1 + nzg ) ) ) ) ), 8 )
 8185.                      $F_A37 = ( 1 + nzg )
 8185.                      if ( nzg >= 0 ) then
 8185.                         $I_L8185_121 = 0
 8185. !dir$ ivdep
 8185.                         do
 8185.                            t$2194(1 + $I_L8185_121) = glsm_slz($I_L8185_121)
 8185.                            $I_L8185_121 = 1 + $I_L8185_121
 8185.                            if ( $I_L8185_121 >= $F_A37 ) exit
 8185.                         enddo
 8185.                      endif
 8182.                      t$2197 = _copyin( glsm_w1d(0) )
 8186. !dir$ suppress glsm_w1d(0)
 8186.                      t$2197%base_addr = pointer to array[1] of real (kind=8)( loc( glsm_w1d(0) ) )
 8186.                      t$2197%header%el_len = 64
 8186.                      t$2197%header%assoc = 1
 8186.                      t$2197%header%ptr_alloc = 0
 8186.                      t$2197%header%p_or_a = 0
 8186.                      t$2197%header%a_contig = 1
 8186.                      t$2197%header%dv_versn = 2
 8186.                      t$2197%header%dv_smunit = 64
 8186.                      t$2197%header%d_type = 0
 8186.                      t$2197%header%n_params = 0
 8186.                      t$2197%header%pad_codim = 0
 8186.                      t$2197%header%n_codim = 0
 8186.                      t$2197%header%pad_dim = 0
 8186.                      t$2197%header%n_dim = 1
 8186.                      t$2197%header%d_type_idx = 13
 8186.                      t$2197%header%typ_code = 134481411
 8186.                      t$2197%header%orig_base = 0
 8186.                      t$2197%header%orig_size = 0
 8186.                      t$2197%dim_1%LB = 1
 8186.                      t$2197%dim_1%EX = ( max( 0, 1 + nzg ) )
 8186.                      t$2197%dim_1%SM = 1
 8182.                      t$136 = 4
 8182.                      t$990 = 4
 8182.                      t$2197%dim_1%LB = 1
 8182.                      t$993 = 32
 8182.                      t$137 = ( 1 + nzg )
 8182.                      t$994 = max( 0, 1 + nzg )
 8182.                      t$995 = 32
 8182.                      t$997 = 40 + 8 * nzg
 8182.                      t$998 = 8 * ( ( 47 + 8 * nzg ) / 8 )
 8182.                      t$1000 = 8 * nzg + 8 * ( ( 47 + 8 * nzg ) / 8 ) + 8
 8182.                      t$1001 = 8 * ( ( 8 * nzg + 8 * ( ( 47 + 8 * nzg ) / 8 ) + 15 ) / 8 )
 8182.                      t$1003 = 32 + 8 * ( ( 8 * nzg + 8 * ( ( 47 + 8 * nzg ) / 8 ) + 15 ) / 8 )
 8182.                      t$991 = int( _alloc( 32 + 8 * ( ( 8 * nzg + 8 * ( ( 47 + 8 * nzg ) / 8 ) + 15 ) / 8 ) ), 8 )
 8182.                      t$992 = t$991
 8182.                      t$996 = 32 + t$991
 8182.                      t$999 = t$991 + 8 * ( ( 47 + 8 * nzg ) / 8 )
 8182.                      t$1002 = t$991 + 8 * ( ( 8 * nzg + 8 * ( ( 47 + 8 * nzg ) / 8 ) + 15 ) / 8 )
 8182.                      if ( nzg >= 0 ) then
 8182.                         $I_L8182_103 = 0
 8182. !dir$ ivdep
 8182.                         do
 8182.                            zc(1 + $I_L8182_103) = t$2194(1 + $I_L8182_103)
 8182.                            wi(1 + $I_L8182_103) = (t$2197%base_addr)(1 + $I_L8182_103, 0)
 8182.                            $I_L8182_103 = 1 + $I_L8182_103
 8182.                            if ( $I_L8182_103 >= 1 + nzg ) exit
 8182.                         enddo
 8182.                      endif
 8182.                      $I_L8182_105 = 0
 8182. !dir$ ivdep
 8182.                      do
 8182.                         zm(1 + $I_L8182_105) = glsm_tzdep($I_L8182_105)
 8182.                         wf(1 + $I_L8182_105) = 0.0
 8182.                         $I_L8182_105 = 1 + $I_L8182_105
 8182.                         if ( $I_L8182_105 >= 4 ) exit
 8182.                      enddo
 8182.                      wf(1) = wi(2)
 8182.                      wf(2) = wi(2)
 8182.                      $dzlft_S11 = 0.0
 8182.                      $l_S12 = 2
 8182.                      $I_L8182_123 = 0
 8182.                      do
 8182.                         if ( $dzlft_S11 /= 0.0 ) then
 8182.                            wf(3 + $I_L8182_123) = wf(3 + $I_L8182_123) + wi($l_S12) * $dzlft_S11
 8182.                            $l_S12 = 1 + $l_S12
 8182.                         endif
 8182.                         $$l_S12_N16 = $l_S12
 8182.                         $SC_zm_I18 = zm(3 + $I_L8182_123)
 8182.                         $I_l_107 = 0
 8182. !dir$ ivdep
 8182.                         do
 8182.                            if ( zc($l_S12 + $I_l_107) > $SC_zm_I18 ) then
 8182.                               $l_S12 = ( $l_S12 + $I_l_107 )
 8182.                               wf(3 + $I_L8182_123) = wf(3 + $I_L8182_123) + wi($$l_S12_N16 + $I_l_107) * ( $SC_zm_I18 + -zc($$l_S12_N16 + $I_l_107 + -1) )
 8182.                               $dzlft_S11 = zc($$l_S12_N16 + $I_l_107) + -$SC_zm_I18
 8182.                               $I_L8182_123 = 1 + $I_L8182_123
 8182.                               ???<$I_L8182_123 < 2>???
 8182.                               goto 10
 8182.                            endif
 8182.                            wf(3 + $I_L8182_123) = wf(3 + $I_L8182_123) + wi($l_S12 + $I_l_107) * ( zc($l_S12 + $I_l_107) + -zc($l_S12 + $I_l_107 + -1) )
 8182.                            $I_l_107 = 1 + $I_l_107
 8182.                            if ( $I_l_107 >= 1 + max( 0, nzg + -$l_S12 + 1 ) ) exit
 8182.                         enddo
 8182.    10                   continue
 8182.                         $SC_zc_I14 = zc(1 + nzg)
 8182.                         $I_L8182_109 = 0
 8182. !dir$ ivdep
 8182.                         do
 8182.                            if ( zm(3 + $I_L8182_109) > $SC_zc_I14 ) then
 8182.                               wf(3 + $I_L8182_109) = ( wf(3 + $I_L8182_109) * 1.0/( $SC_zc_I14 + -zm(2 + $I_L8182_109) ) )
 8182.                            else
 8182.                               wf(3 + $I_L8182_109) = ( wf(3 + $I_L8182_109) * 1.0/( zm(3 + $I_L8182_109) + -zm(2 + $I_L8182_109) ) )
 8182.                            endif
 8182.                            $I_L8182_109 = 1 + $I_L8182_109
 8182.                            if ( $I_L8182_109 >= 2 ) exit
 8182.                         enddo
 8182.                         $I_L8182_111 = 0
 8182. !dir$ ivdep
 8182.                         do
 8182.                            glsm_w_sib($I_L8182_111) = wf(1 + $I_L8182_111)
 8182.                            $I_L8182_111 = 1 + $I_L8182_111
 8182.                            if ( $I_L8182_111 >= 4 ) exit
 8182.                         enddo
 8182.                         _free( t$991 )
 8182.                         t$2197%dim_1%LB = 1
 8182.                         glsm_w1d(0) = _copyout( t$2197 )
 8185.                         _free( t$2195 )
 8244.                         ssib(1 + $I_L8149_129, 1 + $I_L8148_131) = 0.0
 8245.                         wsib(1 + $I_L8149_129, 1 + $I_L8148_131) = 0.0
 8250.                         $SC_wsib_I16 = 0.0
 8251.                         $SC_ssib_I17 = 0.0
 8249.                         $SC_glsm_tzdep_I15 = glsm_tzdep(3)
 8194.                         $I_L8194_113 = 0
 8194. !dir$ ivdep
 8194.                         do
 8195.                            wsib3d(1 + $I_L8149_129, 1 + $I_L8148_131, 1 + $I_L8194_113) = glsm_w_sib(1 + $I_L8194_113)
 8249.                            $fx_S19 = ( ( glsm_tzdep(1 + $I_L8194_113) + -glsm_tzdep($I_L8194_113) ) * 1.0/$SC_glsm_tzdep_I15 )
 8250.                            $SC_wsib_I16 = $SC_wsib_I16 + glsm_w_sib(1 + $I_L8194_113) * $fx_S19
 8251.                            $SC_ssib_I17 = $SC_ssib_I17 + glsm_w_sib(1 + $I_L8194_113) * $fx_S19 * $tporos_S20
 8196.                            $I_L8194_113 = 1 + $I_L8194_113
 8194.                            if ( $I_L8194_113 >= 3 ) exit
 8194.                         enddo
 8250.                         wsib(1 + $I_L8149_129, 1 + $I_L8148_131) = $SC_wsib_I16
 8251.                         ssib(1 + $I_L8149_129, 1 + $I_L8148_131) = $SC_ssib_I17
 8257.                         soilm(1 + $I_L8149_129, 1 + $I_L8148_131) = ( $SC_tzdep_I0 * wsib3d(1 + $I_L8149_129, 1 + $I_L8148_131, 1) + $SC_tzdep_I1 * wsib3d(1 + $I_L8149_129, 1 + $I_L8148_131, 2) + $SC_tzdep_I2 * wsib3d(1 + $I_L8149_129, 1 + $I_L8148_131, 3) ) * $tporos_S20
 8257.                      endif
 8262.                      $I_L8149_129 = 1 + $I_L8149_129
 8261.                      if ( $I_L8149_129 >= $t_S3 ) exit
 8261.                   enddo
 8261.                endif
 8263.                $I_L8148_131 = 1 + $I_L8148_131
 8262.                if ( $I_L8148_131 >= jbmax ) exit
 8262.             enddo
 8262.          endif
 7950.          _free( t$981 )
 8265.          return
 8265.       end
 8265.       
 8267.       
 8267.       subroutine extrak( w, dw, tbee, tphsat, rsoilm, cover, tph1, tph2, psit, factor )
 8288.       psit = tphsat * _exp3( log( abs( w + -5.0e-1 * dw ) ), ( w + -5.0e-1 * dw ), -tbee )
 8298.       $rsoil_S1 = 101840.0 * ( 1.0 + -_exp3( log( abs( w + -5.0e-1 * dw ) ), ( w + -5.0e-1 * dw ), 2.7000000000000001e-3 ) )
 8312.       $hr_S0 = _expn( ( max( -10.0, ( 6.8570230314891835e-5 * psit ) ) ) )
 8334.       factor = max( 9.9999999999999995e-7, ( cover * ( max( 0.0, min( 1.0, ( ( psit + -tph2 + -50.0 ) * 1.0/( tph1 + -tph2 ) ) ) ) ) + ( 1.0 + -cover ) * ( ( rsoilm * 1.0/$rsoil_S1 ) * $hr_S0 ) ) )
 8335.       return
 8335.       end
 8335.       
 8339.       
 8339.       subroutine vert_interp( nsib, nzg, tzdep, glsm_slz, gl_sm, glsm_w_sib )
 8339.       t$136 = nsib
 8348.       t$990 = _zla( 0, nsib )
 8348.       glsm_slz%dim_1%LB = 1
 8348.       gl_sm%dim_1%LB = 1
 8354.       t$993 = 8 * _zla( 0, nsib )
 8339.       t$137 = nzg
 8356.       t$994 = _zla( 0, nzg )
 8356.       t$995 = 8 * _zla( 0, nsib )
 8356.       t$997 = 8 * _zla( 0, nsib ) + 8 * _zla( 0, nzg )
 8355.       t$998 = 8 * _zla( 0, nsib ) + 8 * _zla( 0, nzg )
 8355.       t$1000 = 8 * _zla( 0, nsib ) + 16 * _zla( 0, nzg )
 8353.       t$1001 = 8 * _zla( 0, nsib ) + 16 * _zla( 0, nzg )
 8353.       t$1003 = 16 * _zla( 0, nzg ) + 16 * _zla( 0, nsib )
 8339.       t$991 = int( _alloc( 16 * _zla( 0, nzg ) + 16 * _zla( 0, nsib ) ), 8 )
 8354.       t$992 = t$991
 8356.       t$996 = t$991 + 8 * _zla( 0, nsib )
 8355.       t$999 = t$991 + 8 * _zla( 0, nsib ) + 8 * _zla( 0, nzg )
 8353.       t$1002 = t$991 + 8 * _zla( 0, nsib ) + 16 * _zla( 0, nzg )
 8363.       if ( nzg > 0 ) then
 8363.          $I_L8363_47 = 0
 8363. !dir$ ivdep
 8363.          do
 8364.             zc(1 + $I_L8363_47) = (glsm_slz%base_addr)(1 + $I_L8363_47, 0)
 8385.             wi(1 + $I_L8363_47) = (gl_sm%base_addr)(1 + $I_L8363_47, 0)
 8365.             $I_L8363_47 = 1 + $I_L8363_47
 8363.             if ( $I_L8363_47 >= nzg ) exit
 8363.          enddo
 8363.       endif
 8367.       if ( nsib > 0 ) then
 8367.          $I_L8367_49 = 0
 8367. !dir$ ivdep
 8367.          do
 8368.             zm(1 + $I_L8367_49) = tzdep(1 + $I_L8367_49)
 8369.             $I_L8367_49 = 1 + $I_L8367_49
 8367.             if ( $I_L8367_49 >= nsib ) exit
 8367.          enddo
 8367.       endif
 8391.       $F_A33 = nsib
 8391.       if ( nsib > 0 ) then
 8391.          $I_L8391_57 = 0
 8391. !dir$ ivdep
 8391.          do
 8391.             wf(1 + $I_L8391_57) = 0.0
 8391.             $I_L8391_57 = 1 + $I_L8391_57
 8391.             if ( $I_L8391_57 >= $F_A33 ) exit
 8391.          enddo
 8391.       endif
 8395.       wf(1) = wi(2)
 8396.       wf(2) = wi(2)
 8399.       $dzlft_S3 = 0.0
 8400.       $l_S4 = 2
 8401.       if ( -3 + nsib >= 0 ) then
 8401.          $I_L8401_59 = 0
 8401.          do
 8405.             if ( $dzlft_S3 /= 0.0 ) then
 8407.                wf(3 + $I_L8401_59) = wf(3 + $I_L8401_59) + wi($l_S4) * $dzlft_S3
 8409.                $l_S4 = 1 + $l_S4
 8409.             endif
 8421.             $$l_S4_N8 = $l_S4
 8415.             $SC_zm_I5 = zm(3 + $I_L8401_59)
 8413.             $I_l_51 = 0
 8413. !dir$ ivdep
 8413.             do
 8415.                if ( zc($l_S4 + $I_l_51) > $SC_zm_I5 ) then
 8421.                   $l_S4 = ( $l_S4 + $I_l_51 )
 8427.                   wf(3 + $I_L8401_59) = wf(3 + $I_L8401_59) + wi($$l_S4_N8 + $I_l_51) * ( $SC_zm_I5 + -zc($$l_S4_N8 + $I_l_51 + -1) )
 8428.                   $dzlft_S3 = zc($$l_S4_N8 + $I_l_51) + -$SC_zm_I5
 8430.                   $I_L8401_59 = 1 + $I_L8401_59
 8430.                   ???<$I_L8401_59 < -2 + nsib>???
 8430.                   goto 10
 8430.                endif
 8417.                wf(3 + $I_L8401_59) = wf(3 + $I_L8401_59) + wi($l_S4 + $I_l_51) * ( zc($l_S4 + $I_l_51) + -zc($l_S4 + $I_l_51 + -1) )
 8423.                $I_l_51 = 1 + $I_l_51
 8417.                if ( $I_l_51 >= 1 + max( 0, nzg + -$l_S4 ) ) exit
 8417.             enddo
 8417.    10       continue
 8439.             $SC_zc_I4 = zc(nzg)
 8434.             $I_L8434_53 = 0
 8434. !dir$ ivdep
 8434.             do
 8439.                if ( zm(3 + $I_L8434_53) > $SC_zc_I4 ) then
 8440.                   wf(3 + $I_L8434_53) = ( wf(3 + $I_L8434_53) * 1.0/( $SC_zc_I4 + -zm(2 + $I_L8434_53) ) )
 8440.                else
 8442.                   wf(3 + $I_L8434_53) = ( wf(3 + $I_L8434_53) * 1.0/( zm(3 + $I_L8434_53) + -zm(2 + $I_L8434_53) ) )
 8442.                endif
 8444.                $I_L8434_53 = 1 + $I_L8434_53
 8443.                if ( $I_L8434_53 >= -2 + nsib ) exit
 8443.             enddo
 8443.          endif
 8448.          if ( nsib > 0 ) then
 8448.             $I_L8448_55 = 0
 8448. !dir$ ivdep
 8448.             do
 8449.                glsm_w_sib(1 + $I_L8448_55) = wf(1 + $I_L8448_55)
 8451.                $I_L8448_55 = 1 + $I_L8448_55
 8448.                if ( $I_L8448_55 >= nsib ) exit
 8448.             enddo
 8448.          endif
 8339.          _free( t$991 )
 8471.          return
 8471.       end
 8471.       
  136.       
  136.       module sfc_ssib
 8472.       return
 8472.       end
 8472.       
