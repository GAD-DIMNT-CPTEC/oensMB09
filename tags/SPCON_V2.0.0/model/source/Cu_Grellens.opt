       !        
       !        Cray Inc. Decompilation
       !        Notice - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  Cu_Grellens.f90
       !        File                  :  Cu_Grellens.opt
       !        Network               :  Gemini interconnect
       !        Target                :  X86, 64-bit, sse3
       !        
  169.       
  169.       subroutine initgrellens
  176.       radius = 10000.0
  180.       entr_rate = 2.0000000000000002e-5
  184.       mentrd_rate = 2.0000000000000002e-5
  185.       mentr_rate = 2.0000000000000002e-5
  193.       edtmin = 2.0000000000000001e-1
  201.       effmax = 9.8999999999999999e-1
  202.       edtmax = 9.8999999999999999e-1
  203.       edtmax1 = 9.8999999999999999e-1
  207.       depth_min = 500.0
  216.       cap_maxs = grepar3
  217.       cap_maxs_land = grepar3
  221.       cap_max_increment = grepar4
  226.       zkbmax = 4000.0
  230.       zcutdown = 3000.0
  234.       z_detr = 1250.0
  236.       ht(1) = 2490.0398406374502
  238.       ht(2) = 2822.7091633466134
  240.       be(1) = 2.174825174825175 * ht(1)
  242.       ae(1) = 6.4146222147470642 + 3.663003663003663e-3 * be(1)
  244.       be(2) = 6138.8989496559225
  246.       ae(2) = 28.90143155414605
  248.       return
  248.       end
  248.       
  250.       
  250.       subroutine grellens( ps, sl, ua, va, omg, t2, tn1, q2, qn1, zz, xland, dtime, raincv, kuo, ktop, kbot, plcl, ncols, kmax )
  250.       t$12 = ncols
  287.       t$73 = _zla( 0, ncols )
  250.       t$13 = kmax
  290.       t$74 = _zla( 0, kmax )
  250.       t$75 = _zla( 0, ncols )
  250.       t$76 = _zla( 0, ncols ) * _zla( 0, kmax )
  323.       t$79 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8
  327.       t$80 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8
  327.       t$82 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * _zla( 0, ncols )
  322.       t$83 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * _zla( 0, ncols )
  322.       t$85 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
  328.       t$87 = _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols )
  250.       t$88 = 144 * _zla( 0, ncols )
  325.       t$89 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 )
  325.       t$91 = 1152 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 )
  310.       t$92 = 1152 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 )
  310.       t$94 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 1152 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 )
  314.       t$95 = 1152 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 8
  314.       t$97 = 1152 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 )
  313.       t$98 = _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + 1152 * _zla( 0, ncols )
  313.       t$100 = 1152 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24
  306.       t$101 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 1152 * _zla( 0, ncols )
  306.       t$103 = 1152 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
  307.       t$104 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32 + 1152 * _zla( 0, ncols )
  307.       t$106 = 1152 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
  315.       t$107 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 1152 * _zla( 0, ncols )
  315.       t$109 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 1160 * _zla( 0, ncols )
  312.       t$110 = _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 1160 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 )
  312.       t$112 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 1168 * _zla( 0, ncols )
  303.       t$113 = _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 1168 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 )
  303.       t$115 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48
  305.       t$116 = 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 )
  305.       t$118 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56
  302.       t$119 = 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 )
  302.       t$121 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64
  304.       t$122 = 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 )
  304.       t$124 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 72
  308.       t$125 = 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 72 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 )
  308.       t$127 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 80
  309.       t$128 = 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 80 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 )
  309.       t$130 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 88
  324.       t$131 = 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 88 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 )
  324.       t$133 = 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 88 + 1176 * _zla( 0, ncols )
  250.       t$77 = int( _alloc( 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 88 + 1176 * _zla( 0, ncols ) ), 8 )
  323.       t$78 = t$77
  327.       t$81 = t$77 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8
  322.       t$84 = t$77 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * _zla( 0, ncols )
  328.       t$86 = t$77 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
  325.       t$90 = t$77 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 )
  310.       t$93 = t$77 + 1152 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 )
  314.       t$96 = t$77 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 1152 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 )
  313.       t$99 = t$77 + 1152 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 )
  306.       t$102 = t$77 + 1152 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24
  307.       t$105 = t$77 + 1152 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
  315.       t$108 = t$77 + 1152 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
  312.       t$111 = t$77 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 1160 * _zla( 0, ncols )
  303.       t$114 = t$77 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 1168 * _zla( 0, ncols )
  305.       t$117 = t$77 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48
  302.       t$120 = t$77 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56
  304.       t$123 = t$77 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64
  308.       t$126 = t$77 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 72
  309.       t$129 = t$77 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 80
  324.       t$132 = t$77 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 12 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 88
  332.       if ( ncols > 0 ) then
  332.          $I_L332_40 = 0
  332. !dir$ ivdep
  332.          do
  333.             kuo(1 + $I_L332_40) = 0
  334.             kbot(1 + $I_L332_40) = 1
  335.             ktop(1 + $I_L332_40) = 1
  336.             ierr(1 + $I_L332_40) = 0
  337.             plcl(1 + $I_L332_40) = 1.0
  338.             $I_L332_40 = 1 + $I_L332_40
  332.             if ( $I_L332_40 >= ncols ) exit
  332.          enddo
  332.       endif
  344.       $F_A33 = ncols
  344.       if ( ncols > 0 ) then
  344.          $I_L344_48 = 0
  344. !dir$ ivdep
  344.          do
  344.             psur(1 + $I_L344_48) = 10.0 * ps(1 + $I_L344_48)
  344.             $I_L344_48 = 1 + $I_L344_48
  344.             if ( $I_L344_48 >= $F_A33 ) exit
  344.          enddo
  344.       endif
  345.       if ( kmax > 0 ) then
  346.          if ( ncols > 0 ) then
  345.             $I_L345_66 = 0
  345. !dir$ blocking_size( 0, 0 )
  345.             do
  346.                $SCA_sl_I0 = sl(1 + $I_L345_66)
  346.                $I_L346_42 = 0
  346. !dir$ ivdep
  346. !dir$ blocking_size( 0, 0 )
  346.                do
  347.                   $po_WR0_R0 = ps(1 + $I_L346_42) * $SCA_sl_I0 * 10.0
  347.                   po(1 + $I_L346_42, 1 + $I_L345_66) = $po_WR0_R0
  348.                   p(1 + $I_L346_42, 1 + $I_L345_66) = $po_WR0_R0
  349.                   us(1 + $I_L346_42, 1 + $I_L345_66) = ua(1 + $I_L346_42, 1 + $I_L345_66)
  350.                   vs(1 + $I_L346_42, 1 + $I_L345_66) = va(1 + $I_L346_42, 1 + $I_L345_66)
  351.                   omeg(1 + $I_L346_42, 1 + $I_L345_66) = omg(1 + $I_L346_42, 1 + $I_L345_66)
  354.                   q(1 + $I_L346_42, 1 + $I_L345_66) = q2(1 + $I_L346_42, 1 + $I_L345_66)
  355.                   $t_WR0_R1 = t2(1 + $I_L346_42, 1 + $I_L345_66)
  355.                   t(1 + $I_L346_42, 1 + $I_L345_66) = $t_WR0_R1
  356.                   $qo_WR0_R2 = qn1(1 + $I_L346_42, 1 + $I_L345_66)
  357.                   $tn_WR0_R3 = tn1(1 + $I_L346_42, 1 + $I_L345_66)
  357.                   tn(1 + $I_L346_42, 1 + $I_L345_66) = $tn_WR0_R3
  358.                   if ( $tn_WR0_R3 < 200.0 ) then
  358.                      tn(1 + $I_L346_42, 1 + $I_L345_66) = $t_WR0_R1
  358.                   endif
  359.                   $qo_WR0_R2 = max( 1.0e-8, $qo_WR0_R2 )
  359.                   qo(1 + $I_L346_42, 1 + $I_L345_66) = $qo_WR0_R2
  360.                   $I_L346_42 = 1 + $I_L346_42
  358.                   if ( $I_L346_42 >= ncols ) exit
  358.                enddo
  361.                $I_L345_66 = 1 + $I_L345_66
  360.                if ( $I_L345_66 >= kmax ) exit
  360.             enddo
  360.          endif
  360.       endif
  365.       $F_A34 = ncols
  365.       if ( ncols > 0 ) then
  365.          $I_L365_50 = 0
  365. !dir$ ivdep
  365.          do
  365.             pre1(1 + $I_L365_50) = 0.0
  365.             $I_L365_50 = 1 + $I_L365_50
  365.             if ( $I_L365_50 >= $F_A34 ) exit
  365.          enddo
  365.       endif
  370.       $F_A35 = ncols
  370.       if ( ncols > 0 ) then
  370.          $I_L370_52 = 0
  370. !dir$ ivdep
  370.          do
  370.             xmb(1 + $I_L370_52) = 0.0
  370.             $I_L370_52 = 1 + $I_L370_52
  370.             if ( $I_L370_52 >= $F_A35 ) exit
  370.          enddo
  370.       endif
  373.       $F_A36 = ncols
  373.       if ( ncols > 0 ) then
  373.          $I_L373_54 = 0
  373. !dir$ ivdep
  373.          do
  373.             cape(1 + $I_L373_54) = 0.0
  373.             $I_L373_54 = 1 + $I_L373_54
  373.             if ( $I_L373_54 >= $F_A36 ) exit
  373.          enddo
  373.       endif
  366.       $F_A37 = kmax
  366.       $F_A38 = ncols
  366.       if ( and( -$F_A38, -$F_A37 ) < 0 ) then
  366.          $I_L366_70 = 0
  366.          do
  366.             $I_L366_56 = 0
  366. !dir$ ivdep
  366.             do
  366.                outt(1 + $I_L366_56, 1 + $I_L366_70) = 0.0
  366.                $I_L366_56 = 1 + $I_L366_56
  366.                if ( $I_L366_56 >= $F_A38 ) exit
  366.             enddo
  366.             $I_L366_70 = 1 + $I_L366_70
  366.             if ( $I_L366_70 >= $F_A37 ) exit
  366.          enddo
  366.       endif
  367.       $F_A39 = kmax
  367.       $F_A40 = ncols
  367.       if ( and( -$F_A40, -$F_A39 ) < 0 ) then
  367.          $I_L367_72 = 0
  367.          do
  367.             $I_L367_58 = 0
  367. !dir$ ivdep
  367.             do
  367.                outq(1 + $I_L367_58, 1 + $I_L367_72) = 0.0
  367.                $I_L367_58 = 1 + $I_L367_58
  367.                if ( $I_L367_58 >= $F_A40 ) exit
  367.             enddo
  367.             $I_L367_72 = 1 + $I_L367_72
  367.             if ( $I_L367_72 >= $F_A39 ) exit
  367.          enddo
  367.       endif
  369.       $F_A41 = kmax
  369.       $F_A42 = ncols
  369.       if ( and( -$F_A42, -$F_A41 ) < 0 ) then
  369.          $I_L369_74 = 0
  369.          do
  369.             $I_L369_60 = 0
  369. !dir$ ivdep
  369.             do
  369.                cupclw(1 + $I_L369_60, 1 + $I_L369_74) = 0.0
  369.                $I_L369_60 = 1 + $I_L369_60
  369.                if ( $I_L369_60 >= $F_A42 ) exit
  369.             enddo
  369.             $I_L369_74 = 1 + $I_L369_74
  369.             if ( $I_L369_74 >= $F_A41 ) exit
  369.          enddo
  369.       endif
  372.       $F_A43 = kmax
  372.       $F_A44 = ncols
  372.       if ( and( -$F_A44, -$F_A43 ) < 0 ) then
  372.          $I_L372_76 = 0
  372.          do
  372.             $I_L372_62 = 0
  372. !dir$ ivdep
  372.             do
  372.                bncy(1 + $I_L372_62, 1 + $I_L372_76) = 0.0
  372.                $I_L372_62 = 1 + $I_L372_62
  372.                if ( $I_L372_62 >= $F_A44 ) exit
  372.             enddo
  372.             $I_L372_76 = 1 + $I_L372_76
  372.             if ( $I_L372_76 >= $F_A43 ) exit
  372.          enddo
  372.       endif
  371.       $F_A45 = ncols
  371.       if ( ncols > 0 ) then
  371.          $I_L371_78 = 0
  371.          do
  371.             $I_L371_64 = 0
  371. !dir$ ivdep
  371.             do
  371.                massfln(1 + $I_L371_64, 1 + $I_L371_78) = 0.0
  371.                $I_L371_64 = 1 + $I_L371_64
  371.                if ( $I_L371_64 >= $F_A45 ) exit
  371.             enddo
  371.             $I_L371_78 = 1 + $I_L371_78
  371.             if ( $I_L371_78 >= 144 ) exit
  371.          enddo
  371.       endif
  375.       call grellens2( t(1, 1), q(1, 1), tn(1, 1), qo(1, 1), po(1, 1), p(1, 1), psur(1), us(1, 1), vs(1, 1), omeg(1, 1), zz(1), dtime, outt(1, 1), outq(1, 1), pre1(1), ktop(1), kbot(1), ncols, kmax, xland(1), cupclw(1, 1), massfln(1, 1), xmb(1), bncy(1, 1), cape(1), ierr(1) )
  384.       if ( ncols > 0 ) then
  384.          $I_L384_44 = 0
  384. !dir$ ivdep
  384.          do
  385.             if ( ierr(1 + $I_L384_44) == 0 ) then
  386.                $raincv_WR0_R4 = dtime * pre1(1 + $I_L384_44)
  387.                $raincv_WR0_R4 = 1.0e-3 * $raincv_WR0_R4
  387.                raincv(1 + $I_L384_44) = $raincv_WR0_R4
  387.             endif
  389.             if ( raincv(1 + $I_L384_44) > 0.0 ) then
  389.                kuo(1 + $I_L384_44) = 1
  389.             endif
  390.             $kk_S4 = kbot(1 + $I_L384_44)
  391.             plcl(1 + $I_L384_44) = 1.0000000000000001e-1 * p(1 + $I_L384_44, $kk_S4)
  392.             $I_L384_44 = 1 + $I_L384_44
  389.             if ( $I_L384_44 >= ncols ) exit
  389.          enddo
  389.       endif
  394.       if ( kmax > 0 ) then
  395.          if ( ncols > 0 ) then
  395.             $SI_L395_46_G1 = 0
  395.             do
  394.                $I_L394_68 = 0
  394. !dir$ ivdep
  394. !dir$ blocking_size( 0, 0 )
  394.                do
  395.                   $I_L395_80 = 0
  395. !dir$ unroll 2
  395. !dir$ blocking_size( 256, 256 )
  395.                   do
  396.                      if ( ierr($I_L395_80 + 256 * $SI_L395_46_G1 + 1) == 0 ) then
  397.                         if ( raincv($I_L395_80 + 256 * $SI_L395_46_G1 + 1) > 0.0 ) then
  398.                            tn1($I_L395_80 + 256 * $SI_L395_46_G1 + 1, 1 + $I_L394_68) = tn1($I_L395_80 + 256 * $SI_L395_46_G1 + 1, 1 + $I_L394_68) + dtime * outt($I_L395_80 + 256 * $SI_L395_46_G1 + 1, 1 + $I_L394_68) * 2.0
  399.                            qn1($I_L395_80 + 256 * $SI_L395_46_G1 + 1, 1 + $I_L394_68) = qn1($I_L395_80 + 256 * $SI_L395_46_G1 + 1, 1 + $I_L394_68) + dtime * outq($I_L395_80 + 256 * $SI_L395_46_G1 + 1, 1 + $I_L394_68) * 2.0
  399.                         endif
  399.                      endif
  395.                      $I_L395_80 = 1 + $I_L395_80
  402.                      if ( $I_L395_80 >= min( ncols, 256 + 256 * $SI_L395_46_G1 ) + -256 * $SI_L395_46_G1 ) exit
  402.                   enddo
  404.                   $I_L394_68 = 1 + $I_L394_68
  404.                   if ( $I_L394_68 >= kmax ) exit
  404.                enddo
  395.                $SI_L395_46_G1 = 1 + $SI_L395_46_G1
  403.                if ( $SI_L395_46_G1 >= _rsh( 255 + ncols, 8 ) ) exit
  403.             enddo
  403.          endif
  403.       endif
  250.       _free( t$77 )
  407.       return
  407.       end
  407.       
  410.       
  410.       subroutine grellens2( t, q, tn, qo, po, p, psur, us, vs, omeg, z1, dtime, outt, outq, pre, ktop, kbcon, ncols, kmax, mask, cupclw, massfln, xmb, bncy, wf_cape, ierr )
  410.       t$15 = ncols
  410.       t$16 = kmax
  422.       t$134 = _zla( 0, ncols )
  410.       t$135 = _zla( 0, ncols )
  422.       t$136 = _zla( 0, kmax )
  410.       t$137 = _zla( 0, ncols ) * _zla( 0, kmax )
  410.       t$138 = 144 * _zla( 0, ncols )
  478.       t$141 = 8 * _zla( 0, ncols )
  611.       t$142 = 8 * _zla( 0, ncols )
  611.       t$144 = 16 * _zla( 0, ncols )
  477.       t$145 = 16 * _zla( 0, ncols )
  477.       t$147 = 24 * _zla( 0, ncols )
  612.       t$148 = 24 * _zla( 0, ncols )
  612.       t$150 = 32 * _zla( 0, ncols )
  475.       t$151 = 32 * _zla( 0, ncols )
  475.       t$153 = 40 * _zla( 0, ncols )
  621.       t$155 = 44 * _zla( 0, ncols )
  486.       t$156 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  486.       t$158 = 8 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  487.       t$159 = 8 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  487.       t$161 = 16 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  610.       t$162 = 16 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  610.       t$164 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  539.       t$165 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  539.       t$167 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  540.       t$168 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 8
  540.       t$170 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
  583.       t$171 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 24 * _zla( 0, ncols )
  583.       t$173 = _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  589.       t$174 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24
  589.       t$176 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
  495.       t$177 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32 + 24 * _zla( 0, ncols )
  495.       t$179 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
  513.       t$180 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 24 * _zla( 0, ncols )
  513.       t$182 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48
  514.       t$183 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48 + 24 * _zla( 0, ncols )
  514.       t$185 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56
  504.       t$186 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56
  504.       t$188 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64
  410.       t$189 = _zla( 0, ncols ) * _zla( 0, kmax )
  410.       t$190 = _zla( 0, ncols ) * _zla( 0, kmax ) * 3
  544.       t$191 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 24 * _zla( 0, ncols )
  544.       t$193 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 88
  576.       t$194 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 88 + 24 * _zla( 0, ncols )
  576.       t$196 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 112
  543.       t$197 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 112 + 24 * _zla( 0, ncols )
  543.       t$199 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 136
  575.       t$200 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 136 + 24 * _zla( 0, ncols )
  575.       t$202 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 160
  542.       t$203 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 160 + 24 * _zla( 0, ncols )
  542.       t$205 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 184
  574.       t$206 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 184 + 24 * _zla( 0, ncols )
  574.       t$208 = 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208
  559.       t$209 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208 + 24 * _zla( 0, ncols )
  559.       t$211 = 32 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208
  476.       t$212 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208 + 32 * _zla( 0, ncols )
  476.       t$214 = 40 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208
  410.       t$215 = 3 * _zla( 0, ncols )
  551.       t$216 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208 + 40 * _zla( 0, ncols )
  551.       t$218 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 64 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208
  571.       t$219 = 64 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  571.       t$221 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208
  537.       t$222 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  537.       t$224 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 216
  529.       t$225 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 216 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  529.       t$227 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 224
  602.       t$228 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 224 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  602.       t$230 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 232
  515.       t$231 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 232 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  515.       t$233 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 240
  509.       t$234 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 240 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  509.       t$236 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 248
  510.       t$237 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 248
  510.       t$239 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 256
  581.       t$240 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 256 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  581.       t$242 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 264
  516.       t$243 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 264 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  516.       t$245 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 272
  590.       t$246 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 272 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  590.       t$248 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 280
  491.       t$249 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 280 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  491.       t$251 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 288
  500.       t$252 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 288 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  500.       t$254 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 296
  533.       t$255 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 296 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  533.       t$257 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 304
  578.       t$258 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 304 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  578.       t$260 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 312
  584.       t$261 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 312 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  584.       t$263 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 320
  492.       t$264 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 320 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  492.       t$266 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 328
  501.       t$267 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 328 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  501.       t$269 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 336
  534.       t$270 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 336 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  534.       t$272 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 344
  609.       t$273 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 344 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  609.       t$275 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 352
  526.       t$276 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 352 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  526.       t$278 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 360
  525.       t$279 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 360 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  525.       t$281 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 368
  607.       t$282 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 368 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  607.       t$284 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376
  479.       t$285 = 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  479.       t$287 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 96 * _zla( 0, ncols )
  480.       t$288 = _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 96 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  480.       t$290 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 104 * _zla( 0, ncols )
  573.       t$292 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 108 * _zla( 0, ncols )
  572.       t$294 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 112 * _zla( 0, ncols )
  470.       t$296 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 116 * _zla( 0, ncols )
  594.       t$298 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 120 * _zla( 0, ncols )
  469.       t$300 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 124 * _zla( 0, ncols )
  592.       t$302 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 128 * _zla( 0, ncols )
  593.       t$304 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 132 * _zla( 0, ncols )
  468.       t$306 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 136 * _zla( 0, ncols )
  608.       t$308 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 140 * _zla( 0, ncols )
  464.       t$310 = 144 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376
  463.       t$312 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 148 * _zla( 0, ncols )
  595.       t$314 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 152 * _zla( 0, ncols )
  471.       t$316 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 156 * _zla( 0, ncols )
  472.       t$318 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 160 * _zla( 0, ncols )
  591.       t$320 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 164 * _zla( 0, ncols )
  467.       t$322 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 168 * _zla( 0, ncols )
  473.       t$324 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 172 * _zla( 0, ncols )
  562.       t$326 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 176 * _zla( 0, ncols )
  620.       t$328 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 180 * _zla( 0, ncols )
  622.       t$330 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 184 * _zla( 0, ncols )
  615.       t$332 = 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols )
  618.       t$333 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  618.       t$335 = 1152 * _zla( 0, ncols ) + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  465.       t$336 = 1152 * _zla( 0, ncols ) + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  465.       t$338 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 1160 * _zla( 0, ncols )
  616.       t$339 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 1160 * _zla( 0, ncols )
  616.       t$341 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols )
  617.       t$342 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols )
  617.       t$344 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols )
  466.       t$345 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 8
  466.       t$347 = _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols )
  547.       t$348 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
  547.       t$350 = _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 2320 * _zla( 0, ncols )
  606.       t$351 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 2320 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
  606.       t$353 = _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 3472 * _zla( 0, ncols )
  536.       t$354 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 3472 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
  536.       t$356 = _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 3472 * _zla( 0, ncols )
  580.       t$357 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 3472 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24
  580.       t$359 = _zla( 0, ncols ) * _zla( 0, kmax ) * 32 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 3472 * _zla( 0, ncols )
  599.       t$360 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 3472 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
  599.       t$362 = _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 3472 * _zla( 0, ncols )
  548.       t$363 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 3472 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
  548.       t$365 = _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 4624 * _zla( 0, ncols )
  603.       t$366 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 4624 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
  603.       t$368 = _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5776 * _zla( 0, ncols )
  601.       t$369 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5776 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
  601.       t$371 = _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5784 * _zla( 0, ncols )
  499.       t$372 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5784 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
  499.       t$374 = _zla( 0, ncols ) * _zla( 0, kmax ) * 48 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5784 * _zla( 0, ncols )
  482.       t$375 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5784 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48
  482.       t$377 = _zla( 0, ncols ) * _zla( 0, kmax ) * 48 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5792 * _zla( 0, ncols )
  484.       t$378 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5792 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48
  484.       t$380 = _zla( 0, ncols ) * _zla( 0, kmax ) * 48 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5800 * _zla( 0, ncols )
  498.       t$381 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5800 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48
  498.       t$383 = _zla( 0, ncols ) * _zla( 0, kmax ) * 56 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5800 * _zla( 0, ncols )
  507.       t$384 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5800 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56
  507.       t$386 = _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5800 * _zla( 0, ncols )
  605.       t$387 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5800 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64
  605.       t$389 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5800 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 72
  483.       t$390 = 5800 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 72 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  483.       t$392 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 72 + 5808 * _zla( 0, ncols )
  485.       t$393 = _zla( 0, ncols ) * _zla( 0, kmax ) * 72 + 5808 * _zla( 0, ncols ) + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  485.       t$395 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 72 + 5816 * _zla( 0, ncols )
  508.       t$396 = _zla( 0, ncols ) * _zla( 0, kmax ) * 72 + 5816 * _zla( 0, ncols ) + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  508.       t$398 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 80
  545.       t$399 = 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 80 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  545.       t$401 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 104
  577.       t$402 = 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 104 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  577.       t$404 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 128
  604.       t$405 = 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 128 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  604.       t$407 = _zla( 0, ncols ) * _zla( 0, kmax ) * 136 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  528.       t$408 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 136
  528.       t$410 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 144
  619.       t$411 = 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 144 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  619.       t$413 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 152
  496.       t$414 = 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 152 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  496.       t$416 = _zla( 0, ncols ) * _zla( 0, kmax ) * 160 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  511.       t$417 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 160
  511.       t$419 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 168
  512.       t$420 = 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 168 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  512.       t$422 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 176
  505.       t$423 = 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 176 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  505.       t$425 = _zla( 0, ncols ) * _zla( 0, kmax ) * 184 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  596.       t$426 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 184
  596.       t$428 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 192
  493.       t$429 = 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 192 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  493.       t$431 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 200
  502.       t$432 = 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 200 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  502.       t$434 = _zla( 0, ncols ) * _zla( 0, kmax ) * 208 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  531.       t$435 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208
  531.       t$437 = _zla( 0, ncols ) * _zla( 0, kmax ) * 216 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  523.       t$438 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 216
  523.       t$440 = _zla( 0, ncols ) * _zla( 0, kmax ) * 224 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  532.       t$441 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 224
  532.       t$443 = _zla( 0, ncols ) * _zla( 0, kmax ) * 232 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  585.       t$444 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 232
  585.       t$446 = _zla( 0, ncols ) * _zla( 0, kmax ) * 240 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  587.       t$447 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 240
  587.       t$449 = _zla( 0, ncols ) * _zla( 0, kmax ) * 248 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  517.       t$450 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 248
  517.       t$452 = _zla( 0, ncols ) * _zla( 0, kmax ) * 256 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  497.       t$453 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 256
  497.       t$455 = _zla( 0, ncols ) * _zla( 0, kmax ) * 264 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  506.       t$456 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 264
  506.       t$458 = _zla( 0, ncols ) * _zla( 0, kmax ) * 272 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  586.       t$459 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 272
  586.       t$461 = _zla( 0, ncols ) * _zla( 0, kmax ) * 280 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  518.       t$462 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 280
  518.       t$464 = _zla( 0, ncols ) * _zla( 0, kmax ) * 288 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  597.       t$465 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 288
  597.       t$467 = _zla( 0, ncols ) * _zla( 0, kmax ) * 296 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  524.       t$468 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 296
  524.       t$470 = _zla( 0, ncols ) * _zla( 0, kmax ) * 304 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  489.       t$471 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 304
  489.       t$473 = _zla( 0, ncols ) * _zla( 0, kmax ) * 304 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5824 * _zla( 0, ncols )
  538.       t$474 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5824 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 304
  538.       t$476 = _zla( 0, ncols ) * _zla( 0, kmax ) * 312 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5824 * _zla( 0, ncols )
  598.       t$477 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5824 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 312
  598.       t$479 = _zla( 0, ncols ) * _zla( 0, kmax ) * 320 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5824 * _zla( 0, ncols )
  530.       t$480 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5824 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 320
  530.       t$482 = _zla( 0, ncols ) * _zla( 0, kmax ) * 328 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5824 * _zla( 0, ncols )
  488.       t$483 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5824 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 328
  488.       t$485 = _zla( 0, ncols ) * _zla( 0, kmax ) * 328 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5832 * _zla( 0, ncols )
  490.       t$486 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5832 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 328
  490.       t$488 = _zla( 0, ncols ) * _zla( 0, kmax ) * 328 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5840 * _zla( 0, ncols )
  560.       t$489 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5840 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 328
  560.       t$491 = _zla( 0, ncols ) * _zla( 0, kmax ) * 328 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5848 * _zla( 0, ncols )
  561.       t$492 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5848 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 328
  561.       t$494 = _zla( 0, ncols ) * _zla( 0, kmax ) * 328 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5856 * _zla( 0, ncols )
  546.       t$495 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5856 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 328
  546.       t$497 = _zla( 0, ncols ) * _zla( 0, kmax ) * 328 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 7008 * _zla( 0, ncols )
  614.       t$498 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 7008 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 328
  614.       t$500 = _zla( 0, ncols ) * _zla( 0, kmax ) * 328 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8160 * _zla( 0, ncols )
  613.       t$501 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8160 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 328
  613.       t$503 = _zla( 0, ncols ) * _zla( 0, kmax ) * 328 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8168 * _zla( 0, ncols )
  494.       t$504 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 328
  494.       t$506 = _zla( 0, ncols ) * _zla( 0, kmax ) * 336 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8168 * _zla( 0, ncols )
  600.       t$507 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8168 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 336
  600.       t$509 = _zla( 0, ncols ) * _zla( 0, kmax ) * 336 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols )
  521.       t$510 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 336
  521.       t$512 = _zla( 0, ncols ) * _zla( 0, kmax ) * 344 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols )
  522.       t$513 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 344
  522.       t$515 = _zla( 0, ncols ) * _zla( 0, kmax ) * 352 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols )
  582.       t$516 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 352
  582.       t$518 = _zla( 0, ncols ) * _zla( 0, kmax ) * 360 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols )
  503.       t$519 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 360
  503.       t$521 = _zla( 0, ncols ) * _zla( 0, kmax ) * 368 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols )
  535.       t$522 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 368
  535.       t$524 = _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols )
  579.       t$525 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376
  579.       t$527 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 384
  519.       t$528 = 8176 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 384 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  519.       t$530 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 392
  520.       t$531 = 8176 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 392 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  520.       t$533 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 400
  588.       t$534 = 8176 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 400 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  588.       t$536 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 1152 * _zla( 0, ncols ) + 8 * ( ( 1152 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 1152 * _zla( 0, ncols ) + 8 * ( ( 1152 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 1152 * _zla( 0, ncols ) + 8 * ( ( 1152 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmax ) + 146 * _zla( 0, ncols ) ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
  527.       t$537 = 8176 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 408 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  527.       t$539 = 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 416
  410.       t$139 = int( _alloc( 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 416 ), 8 )
  478.       t$140 = t$139
  611.       t$143 = t$139 + 8 * _zla( 0, ncols )
  477.       t$146 = t$139 + 16 * _zla( 0, ncols )
  612.       t$149 = t$139 + 24 * _zla( 0, ncols )
  475.       t$152 = t$139 + 32 * _zla( 0, ncols )
  621.       t$154 = t$139 + 40 * _zla( 0, ncols )
  486.       t$157 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  487.       t$160 = t$139 + 8 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  610.       t$163 = t$139 + 16 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  539.       t$166 = t$139 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  540.       t$169 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  583.       t$172 = t$139 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
  589.       t$175 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 )
  495.       t$178 = t$139 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
  513.       t$181 = t$139 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
  514.       t$184 = t$139 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48
  504.       t$187 = t$139 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56
  544.       t$192 = t$139 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64
  576.       t$195 = t$139 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 88
  543.       t$198 = t$139 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 112
  575.       t$201 = t$139 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 136
  542.       t$204 = t$139 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 160
  574.       t$207 = t$139 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 184
  559.       t$210 = t$139 + 24 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208
  476.       t$213 = t$139 + 32 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208
  551.       t$217 = t$139 + 40 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208
  571.       t$220 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 64 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208
  537.       t$223 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208
  529.       t$226 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 216
  602.       t$229 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 224
  515.       t$232 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 232
  509.       t$235 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 240
  510.       t$238 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 248
  581.       t$241 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 256
  516.       t$244 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 264
  590.       t$247 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 272
  491.       t$250 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 280
  500.       t$253 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 288
  533.       t$256 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 296
  578.       t$259 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 304
  584.       t$262 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 312
  492.       t$265 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 320
  501.       t$268 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 328
  534.       t$271 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 336
  609.       t$274 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 344
  526.       t$277 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 352
  525.       t$280 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 360
  607.       t$283 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 368
  479.       t$286 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + 88 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376
  480.       t$289 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 96 * _zla( 0, ncols )
  573.       t$291 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 104 * _zla( 0, ncols )
  572.       t$293 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 108 * _zla( 0, ncols )
  470.       t$295 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 112 * _zla( 0, ncols )
  594.       t$297 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 116 * _zla( 0, ncols )
  469.       t$299 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 120 * _zla( 0, ncols )
  592.       t$301 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 124 * _zla( 0, ncols )
  593.       t$303 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 128 * _zla( 0, ncols )
  468.       t$305 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 132 * _zla( 0, ncols )
  608.       t$307 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 136 * _zla( 0, ncols )
  464.       t$309 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 140 * _zla( 0, ncols )
  463.       t$311 = t$139 + 144 * _zla( 0, ncols ) + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376
  595.       t$313 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 148 * _zla( 0, ncols )
  471.       t$315 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 152 * _zla( 0, ncols )
  472.       t$317 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 156 * _zla( 0, ncols )
  591.       t$319 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 160 * _zla( 0, ncols )
  467.       t$321 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 164 * _zla( 0, ncols )
  473.       t$323 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 168 * _zla( 0, ncols )
  562.       t$325 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 172 * _zla( 0, ncols )
  620.       t$327 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 176 * _zla( 0, ncols )
  622.       t$329 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 180 * _zla( 0, ncols )
  615.       t$331 = t$139 + 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 184 * _zla( 0, ncols )
  618.       t$334 = t$139 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  465.       t$337 = t$139 + 1152 * _zla( 0, ncols ) + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 )
  616.       t$340 = t$139 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 1160 * _zla( 0, ncols )
  617.       t$343 = t$139 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols )
  466.       t$346 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols )
  547.       t$349 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 1168 * _zla( 0, ncols )
  606.       t$352 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 2320 * _zla( 0, ncols )
  536.       t$355 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 16 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 3472 * _zla( 0, ncols )
  580.       t$358 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 3472 * _zla( 0, ncols )
  599.       t$361 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 32 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 3472 * _zla( 0, ncols )
  548.       t$364 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 3472 * _zla( 0, ncols )
  603.       t$367 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 4624 * _zla( 0, ncols )
  601.       t$370 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5776 * _zla( 0, ncols )
  499.       t$373 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5784 * _zla( 0, ncols )
  482.       t$376 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 48 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5784 * _zla( 0, ncols )
  484.       t$379 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 48 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5792 * _zla( 0, ncols )
  498.       t$382 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 48 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5800 * _zla( 0, ncols )
  507.       t$385 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 56 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5800 * _zla( 0, ncols )
  605.       t$388 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5800 * _zla( 0, ncols )
  483.       t$391 = t$139 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5800 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 72
  485.       t$394 = t$139 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 72 + 5808 * _zla( 0, ncols )
  508.       t$397 = t$139 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 72 + 5816 * _zla( 0, ncols )
  545.       t$400 = t$139 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 80
  577.       t$403 = t$139 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 104
  604.       t$406 = t$139 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 128
  528.       t$409 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 136 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  619.       t$412 = t$139 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 144
  496.       t$415 = t$139 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 152
  511.       t$418 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 160 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  512.       t$421 = t$139 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 168
  505.       t$424 = t$139 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 176
  596.       t$427 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 184 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  493.       t$430 = t$139 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 192
  502.       t$433 = t$139 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 200
  531.       t$436 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 208 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  523.       t$439 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 216 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  532.       t$442 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 224 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  585.       t$445 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 232 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  587.       t$448 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 240 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  517.       t$451 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 248 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  497.       t$454 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 256 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  506.       t$457 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 264 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  586.       t$460 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 272 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  518.       t$463 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 280 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  597.       t$466 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 288 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  524.       t$469 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 296 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  489.       t$472 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 304 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5816 * _zla( 0, ncols )
  538.       t$475 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 304 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5824 * _zla( 0, ncols )
  598.       t$478 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 312 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5824 * _zla( 0, ncols )
  530.       t$481 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 320 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5824 * _zla( 0, ncols )
  488.       t$484 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 328 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5824 * _zla( 0, ncols )
  490.       t$487 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 328 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5832 * _zla( 0, ncols )
  560.       t$490 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 328 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5840 * _zla( 0, ncols )
  561.       t$493 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 328 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5848 * _zla( 0, ncols )
  546.       t$496 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 328 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 5856 * _zla( 0, ncols )
  614.       t$499 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 328 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 7008 * _zla( 0, ncols )
  613.       t$502 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 328 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8160 * _zla( 0, ncols )
  494.       t$505 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 328 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8168 * _zla( 0, ncols )
  600.       t$508 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 336 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8168 * _zla( 0, ncols )
  521.       t$511 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 336 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols )
  522.       t$514 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 344 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols )
  582.       t$517 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 352 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols )
  503.       t$520 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 360 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols )
  535.       t$523 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 368 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols )
  579.       t$526 = t$139 + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols )
  519.       t$529 = t$139 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 384
  520.       t$532 = t$139 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 392
  588.       t$535 = t$139 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 1152 * _zla( 0, ncols ) + 8 * ( ( 1152 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 24 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * _zla( 0, ncols ) + 8 * ( ( 1152 * _zla( 0, ncols ) + 8 * ( ( 1152 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 1152 * _zla( 0, ncols ) + 8 * ( ( 1152 * _zla( 0, ncols ) + 8 * ( ( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 + _zla( 0, ncols ) * _zla( 0, kmax ) + 146 * _zla( 0, ncols ) ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
  527.       t$538 = t$139 + 8 * ( ( 8 * ( ( 7 + 44 * _zla( 0, ncols ) ) / 8 ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 376 + 188 * _zla( 0, ncols ) + 7 ) / 8 ) + 8176 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 408
  698.       $F_A33 = ncols
  698.       if ( ncols > 0 ) then
  698.          $I_L698_1403 = 0
  698. !dir$ ivdep
  698.          do
  698.             kzdown(1 + $I_L698_1403) = 0
  698.             $I_L698_1403 = 1 + $I_L698_1403
  698.             if ( $I_L698_1403 >= $F_A33 ) exit
  698.          enddo
  698.       endif
  699.       $F_A34 = ncols
  699.       if ( ncols > 0 ) then
  699.          $I_L699_1405 = 0
  699. !dir$ ivdep
  699.          do
  699.             kbmax(1 + $I_L699_1405) = 0
  699.             $I_L699_1405 = 1 + $I_L699_1405
  699.             if ( $I_L699_1405 >= $F_A34 ) exit
  699.          enddo
  699.       endif
  700.       $F_A35 = ncols
  700.       if ( ncols > 0 ) then
  700.          $I_L700_1407 = 0
  700. !dir$ ivdep
  700.          do
  700.             k22(1 + $I_L700_1407) = 0
  700.             $I_L700_1407 = 1 + $I_L700_1407
  700.             if ( $I_L700_1407 >= $F_A35 ) exit
  700.          enddo
  700.       endif
  701.       $F_A36 = ncols
  701.       if ( ncols > 0 ) then
  701.          $I_L701_1409 = 0
  701. !dir$ ivdep
  701.          do
  701.             jmin(1 + $I_L701_1409) = 0
  701.             $I_L701_1409 = 1 + $I_L701_1409
  701.             if ( $I_L701_1409 >= $F_A36 ) exit
  701.          enddo
  701.       endif
  702.       $F_A37 = ncols
  702.       if ( ncols > 0 ) then
  702.          $I_L702_1411 = 0
  702. !dir$ ivdep
  702.          do
  702.             kstabi(1 + $I_L702_1411) = 0
  702.             $I_L702_1411 = 1 + $I_L702_1411
  702.             if ( $I_L702_1411 >= $F_A37 ) exit
  702.          enddo
  702.       endif
  703.       $F_A38 = ncols
  703.       if ( ncols > 0 ) then
  703.          $I_L703_1413 = 0
  703. !dir$ ivdep
  703.          do
  703.             kstabm(1 + $I_L703_1413) = 0
  703.             $I_L703_1413 = 1 + $I_L703_1413
  703.             if ( $I_L703_1413 >= $F_A38 ) exit
  703.          enddo
  703.       endif
  705.       $F_A39 = ncols
  705.       if ( ncols > 0 ) then
  705.          $I_L705_1415 = 0
  705. !dir$ ivdep
  705.          do
  705.             left(1 + $I_L705_1415) = 0
  705.             $I_L705_1415 = 1 + $I_L705_1415
  705.             if ( $I_L705_1415 >= $F_A39 ) exit
  705.          enddo
  705.       endif
  707.       $F_A40 = ncols
  707.       if ( ncols > 0 ) then
  707.          $I_L707_1417 = 0
  707. !dir$ ivdep
  707.          do
  707.             edt(1 + $I_L707_1417) = 0.0
  707.             $I_L707_1417 = 1 + $I_L707_1417
  707.             if ( $I_L707_1417 >= $F_A40 ) exit
  707.          enddo
  707.       endif
  708.       $F_A41 = ncols
  708.       if ( ncols > 0 ) then
  708.          $I_L708_1419 = 0
  708. !dir$ ivdep
  708.          do
  708.             aa1(1 + $I_L708_1419) = 0.0
  708.             $I_L708_1419 = 1 + $I_L708_1419
  708.             if ( $I_L708_1419 >= $F_A41 ) exit
  708.          enddo
  708.       endif
  709.       $F_A42 = ncols
  709.       if ( ncols > 0 ) then
  709.          $I_L709_1421 = 0
  709. !dir$ ivdep
  709.          do
  709.             aa0(1 + $I_L709_1421) = 0.0
  709.             $I_L709_1421 = 1 + $I_L709_1421
  709.             if ( $I_L709_1421 >= $F_A42 ) exit
  709.          enddo
  709.       endif
  710.       $F_A43 = ncols
  710.       if ( ncols > 0 ) then
  710.          $I_L710_1423 = 0
  710. !dir$ ivdep
  710.          do
  710.             hkb(1 + $I_L710_1423) = 0.0
  710.             $I_L710_1423 = 1 + $I_L710_1423
  710.             if ( $I_L710_1423 >= $F_A43 ) exit
  710.          enddo
  710.       endif
  711.       $F_A44 = ncols
  711.       if ( ncols > 0 ) then
  711.          $I_L711_1425 = 0
  711. !dir$ ivdep
  711.          do
  711.             hkbo(1 + $I_L711_1425) = 0.0
  711.             $I_L711_1425 = 1 + $I_L711_1425
  711.             if ( $I_L711_1425 >= $F_A44 ) exit
  711.          enddo
  711.       endif
  712.       $F_A45 = ncols
  712.       if ( ncols > 0 ) then
  712.          $I_L712_1427 = 0
  712. !dir$ ivdep
  712.          do
  712.             xmb(1 + $I_L712_1427) = 0.0
  712.             $I_L712_1427 = 1 + $I_L712_1427
  712.             if ( $I_L712_1427 >= $F_A45 ) exit
  712.          enddo
  712.       endif
  713.       $F_A46 = ncols
  713.       if ( ncols > 0 ) then
  713.          $I_L713_1429 = 0
  713. !dir$ ivdep
  713.          do
  713.             pwav(1 + $I_L713_1429) = 0.0
  713.             $I_L713_1429 = 1 + $I_L713_1429
  713.             if ( $I_L713_1429 >= $F_A46 ) exit
  713.          enddo
  713.       endif
  715.       $F_A47 = ncols
  715.       if ( ncols > 0 ) then
  715.          $I_L715_1431 = 0
  715. !dir$ ivdep
  715.          do
  715.             pwavo(1 + $I_L715_1431) = 0.0
  715.             $I_L715_1431 = 1 + $I_L715_1431
  715.             if ( $I_L715_1431 >= $F_A47 ) exit
  715.          enddo
  715.       endif
  716.       $F_A48 = ncols
  716.       if ( ncols > 0 ) then
  716.          $I_L716_1433 = 0
  716. !dir$ ivdep
  716.          do
  716.             pwevo(1 + $I_L716_1433) = 0.0
  716.             $I_L716_1433 = 1 + $I_L716_1433
  716.             if ( $I_L716_1433 >= $F_A48 ) exit
  716.          enddo
  716.       endif
  717.       $F_A49 = ncols
  717.       if ( ncols > 0 ) then
  717.          $I_L717_1435 = 0
  717. !dir$ ivdep
  717.          do
  717.             bu(1 + $I_L717_1435) = 0.0
  717.             $I_L717_1435 = 1 + $I_L717_1435
  717.             if ( $I_L717_1435 >= $F_A49 ) exit
  717.          enddo
  717.       endif
  718.       $F_A50 = ncols
  718.       if ( ncols > 0 ) then
  718.          $I_L718_1437 = 0
  718. !dir$ ivdep
  718.          do
  718.             cap_max(1 + $I_L718_1437) = 0.0
  718.             $I_L718_1437 = 1 + $I_L718_1437
  718.             if ( $I_L718_1437 >= $F_A50 ) exit
  718.          enddo
  805.          $I_L805_1259 = 0
  805. !dir$ ivdep
  805.          do
  809.             kdet(1 + $I_L805_1259) = 2
  810.             kdet1(1 + $I_L805_1259) = 0
  811.             pre(1 + $I_L805_1259) = 0.0
  840.             aa0(1 + $I_L805_1259) = 0.0
  841.             aa1(1 + $I_L805_1259) = 0.0
  842.             kstabm(1 + $I_L805_1259) = -2 + kmax
  844.             ierr(1 + $I_L805_1259) = 0
  812.             $I_L805_1259 = 1 + $I_L805_1259
  805.             if ( $I_L805_1259 >= ncols ) exit
  805.          enddo
  854.          $I_L854_1268 = 0
  854. !dir$ ivdep
  854.          do
  855.             cap_max(1 + $I_L854_1268) = cap_maxs
  856.             if ( mask(1 + $I_L854_1268) /= 1 ) then
  856.                cap_max(1 + $I_L854_1268) = cap_maxs_land
  856.             endif
  857.             $I_L854_1268 = 1 + $I_L854_1268
  856.             if ( $I_L854_1268 >= ncols ) exit
  856.          enddo
  856.       endif
  719.       $F_A51 = ncols
  719.       if ( ncols > 0 ) then
  719.          $I_L719_1439 = 0
  719. !dir$ ivdep
  719.          do
  719.             vshear(1 + $I_L719_1439) = 0.0
  719.             $I_L719_1439 = 1 + $I_L719_1439
  719.             if ( $I_L719_1439 >= $F_A51 ) exit
  719.          enddo
  719.       endif
  720.       $F_A52 = ncols
  720.       if ( ncols > 0 ) then
  720.          $I_L720_1441 = 0
  720. !dir$ ivdep
  720.          do
  720.             sdp(1 + $I_L720_1441) = 0.0
  720.             $I_L720_1441 = 1 + $I_L720_1441
  720.             if ( $I_L720_1441 >= $F_A52 ) exit
  720.          enddo
  720.       endif
  721.       $F_A53 = ncols
  721.       if ( ncols > 0 ) then
  721.          $I_L721_1443 = 0
  721. !dir$ ivdep
  721.          do
  721.             vws(1 + $I_L721_1443) = 0.0
  721.             $I_L721_1443 = 1 + $I_L721_1443
  721.             if ( $I_L721_1443 >= $F_A53 ) exit
  721.          enddo
  721.       endif
  786.       $F_A54 = ncols
  786.       if ( ncols > 0 ) then
  786.          $I_L786_1445 = 0
  786. !dir$ ivdep
  786.          do
  786.             dh2(1 + $I_L786_1445) = 0.0
  786.             $I_L786_1445 = 1 + $I_L786_1445
  786.             if ( $I_L786_1445 >= $F_A54 ) exit
  786.          enddo
  786.       endif
  787.       $F_A55 = ncols
  787.       if ( ncols > 0 ) then
  787.          $I_L787_1447 = 0
  787. !dir$ ivdep
  787.          do
  787.             xfac1(1 + $I_L787_1447) = 0.0
  787.             $I_L787_1447 = 1 + $I_L787_1447
  787.             if ( $I_L787_1447 >= $F_A55 ) exit
  787.          enddo
  787.       endif
  788.       $F_A56 = ncols
  788.       if ( ncols > 0 ) then
  788.          $I_L788_1449 = 0
  788. !dir$ ivdep
  788.          do
  788.             xfac_for_dn(1 + $I_L788_1449) = 0.0
  788.             $I_L788_1449 = 1 + $I_L788_1449
  788.             if ( $I_L788_1449 >= $F_A56 ) exit
  788.          enddo
  788.       endif
  793.       $F_A57 = ncols
  793.       if ( ncols > 0 ) then
  793.          $I_L793_1451 = 0
  793. !dir$ ivdep
  793.          do
  793.             hkbo(1 + $I_L793_1451) = 0.0
  793.             $I_L793_1451 = 1 + $I_L793_1451
  793.             if ( $I_L793_1451 >= $F_A57 ) exit
  793.          enddo
  793.       endif
  722.       $F_A58 = kmax
  722.       $F_A59 = ncols
  722.       if ( and( -$F_A59, -$F_A58 ) < 0 ) then
  722.          $I_L722_1627 = 0
  722.          do
  722.             $I_L722_1453 = 0
  722. !dir$ ivdep
  722.             do
  722.                he(1 + $I_L722_1453, 1 + $I_L722_1627) = 0.0
  722.                $I_L722_1453 = 1 + $I_L722_1453
  722.                if ( $I_L722_1453 >= $F_A59 ) exit
  722.             enddo
  722.             $I_L722_1627 = 1 + $I_L722_1627
  722.             if ( $I_L722_1627 >= $F_A58 ) exit
  722.          enddo
  722.       endif
  723.       $F_A60 = kmax
  723.       $F_A61 = ncols
  723.       if ( and( -$F_A61, -$F_A60 ) < 0 ) then
  723.          $I_L723_1629 = 0
  723.          do
  723.             $I_L723_1455 = 0
  723. !dir$ ivdep
  723.             do
  723.                hes(1 + $I_L723_1455, 1 + $I_L723_1629) = 0.0
  723.                $I_L723_1455 = 1 + $I_L723_1455
  723.                if ( $I_L723_1455 >= $F_A61 ) exit
  723.             enddo
  723.             $I_L723_1629 = 1 + $I_L723_1629
  723.             if ( $I_L723_1629 >= $F_A60 ) exit
  723.          enddo
  723.       endif
  724.       $F_A62 = kmax
  724.       $F_A63 = ncols
  724.       if ( and( -$F_A63, -$F_A62 ) < 0 ) then
  724.          $I_L724_1631 = 0
  724.          do
  724.             $I_L724_1457 = 0
  724. !dir$ ivdep
  724.             do
  724.                qes(1 + $I_L724_1457, 1 + $I_L724_1631) = 0.0
  724.                $I_L724_1457 = 1 + $I_L724_1457
  724.                if ( $I_L724_1457 >= $F_A63 ) exit
  724.             enddo
  724.             $I_L724_1631 = 1 + $I_L724_1631
  724.             if ( $I_L724_1631 >= $F_A62 ) exit
  724.          enddo
  724.       endif
  725.       $F_A64 = kmax
  725.       $F_A65 = ncols
  725.       if ( and( -$F_A65, -$F_A64 ) < 0 ) then
  725.          $I_L725_1633 = 0
  725.          do
  725.             $I_L725_1459 = 0
  725. !dir$ ivdep
  725.             do
  725.                z(1 + $I_L725_1459, 1 + $I_L725_1633) = 0.0
  725.                $I_L725_1459 = 1 + $I_L725_1459
  725.                if ( $I_L725_1459 >= $F_A65 ) exit
  725.             enddo
  725.             $I_L725_1633 = 1 + $I_L725_1633
  725.             if ( $I_L725_1633 >= $F_A64 ) exit
  725.          enddo
  725.       endif
  726.       $F_A66 = kmax
  726.       $F_A67 = ncols
  726.       if ( and( -$F_A67, -$F_A66 ) < 0 ) then
  726.          $I_L726_1635 = 0
  726.          do
  726.             $I_L726_1461 = 0
  726. !dir$ ivdep
  726.             do
  726.                dby(1 + $I_L726_1461, 1 + $I_L726_1635) = 0.0
  726.                $I_L726_1461 = 1 + $I_L726_1461
  726.                if ( $I_L726_1461 >= $F_A67 ) exit
  726.             enddo
  726.             $I_L726_1635 = 1 + $I_L726_1635
  726.             if ( $I_L726_1635 >= $F_A66 ) exit
  726.          enddo
  726.       endif
  727.       $F_A68 = kmax
  727.       $F_A69 = ncols
  727.       if ( and( -$F_A69, -$F_A68 ) < 0 ) then
  727.          $I_L727_1637 = 0
  727.          do
  727.             $I_L727_1463 = 0
  727. !dir$ ivdep
  727.             do
  727.                qc(1 + $I_L727_1463, 1 + $I_L727_1637) = 0.0
  727.                $I_L727_1463 = 1 + $I_L727_1463
  727.                if ( $I_L727_1463 >= $F_A69 ) exit
  727.             enddo
  727.             $I_L727_1637 = 1 + $I_L727_1637
  727.             if ( $I_L727_1637 >= $F_A68 ) exit
  727.          enddo
  727.       endif
  730.       $F_A70 = kmax
  730.       $F_A71 = ncols
  730.       if ( and( -$F_A71, -$F_A70 ) < 0 ) then
  730.          $I_L730_1639 = 0
  730.          do
  730.             $I_L730_1465 = 0
  730. !dir$ ivdep
  730.             do
  730.                pw(1 + $I_L730_1465, 1 + $I_L730_1639) = 0.0
  730.                $I_L730_1465 = 1 + $I_L730_1465
  730.                if ( $I_L730_1465 >= $F_A71 ) exit
  730.             enddo
  730.             $I_L730_1639 = 1 + $I_L730_1639
  730.             if ( $I_L730_1639 >= $F_A70 ) exit
  730.          enddo
  730.       endif
  731.       $F_A72 = kmax
  731.       $F_A73 = ncols
  731.       if ( and( -$F_A73, -$F_A72 ) < 0 ) then
  731.          $I_L731_1641 = 0
  731.          do
  731.             $I_L731_1467 = 0
  731. !dir$ ivdep
  731.             do
  731.                heo(1 + $I_L731_1467, 1 + $I_L731_1641) = 0.0
  731.                $I_L731_1467 = 1 + $I_L731_1467
  731.                if ( $I_L731_1467 >= $F_A73 ) exit
  731.             enddo
  731.             $I_L731_1641 = 1 + $I_L731_1641
  731.             if ( $I_L731_1641 >= $F_A72 ) exit
  731.          enddo
  731.       endif
  732.       $F_A74 = kmax
  732.       $F_A75 = ncols
  732.       if ( and( -$F_A75, -$F_A74 ) < 0 ) then
  732.          $I_L732_1643 = 0
  732.          do
  732.             $I_L732_1469 = 0
  732. !dir$ ivdep
  732.             do
  732.                heso(1 + $I_L732_1469, 1 + $I_L732_1643) = 0.0
  732.                $I_L732_1469 = 1 + $I_L732_1469
  732.                if ( $I_L732_1469 >= $F_A75 ) exit
  732.             enddo
  732.             $I_L732_1643 = 1 + $I_L732_1643
  732.             if ( $I_L732_1643 >= $F_A74 ) exit
  732.          enddo
  732.       endif
  733.       $F_A76 = kmax
  733.       $F_A77 = ncols
  733.       if ( and( -$F_A77, -$F_A76 ) < 0 ) then
  733.          $I_L733_1645 = 0
  733.          do
  733.             $I_L733_1471 = 0
  733. !dir$ ivdep
  733.             do
  733.                qeso(1 + $I_L733_1471, 1 + $I_L733_1645) = 0.0
  733.                $I_L733_1471 = 1 + $I_L733_1471
  733.                if ( $I_L733_1471 >= $F_A77 ) exit
  733.             enddo
  733.             $I_L733_1645 = 1 + $I_L733_1645
  733.             if ( $I_L733_1645 >= $F_A76 ) exit
  733.          enddo
  733.       endif
  734.       $F_A78 = kmax
  734.       $F_A79 = ncols
  734.       if ( and( -$F_A79, -$F_A78 ) < 0 ) then
  734.          $I_L734_1647 = 0
  734.          do
  734.             $I_L734_1473 = 0
  734. !dir$ ivdep
  734.             do
  734.                zo(1 + $I_L734_1473, 1 + $I_L734_1647) = 0.0
  734.                $I_L734_1473 = 1 + $I_L734_1473
  734.                if ( $I_L734_1473 >= $F_A79 ) exit
  734.             enddo
  734.             $I_L734_1647 = 1 + $I_L734_1647
  734.             if ( $I_L734_1647 >= $F_A78 ) exit
  734.          enddo
  734.       endif
  735.       $F_A80 = kmax
  735.       $F_A81 = ncols
  735.       if ( and( -$F_A81, -$F_A80 ) < 0 ) then
  735.          $I_L735_1649 = 0
  735.          do
  735.             $I_L735_1475 = 0
  735. !dir$ ivdep
  735.             do
  735.                dbyo(1 + $I_L735_1475, 1 + $I_L735_1649) = 0.0
  735.                $I_L735_1475 = 1 + $I_L735_1475
  735.                if ( $I_L735_1475 >= $F_A81 ) exit
  735.             enddo
  735.             $I_L735_1649 = 1 + $I_L735_1649
  735.             if ( $I_L735_1649 >= $F_A80 ) exit
  735.          enddo
  735.       endif
  736.       $F_A82 = kmax
  736.       $F_A83 = ncols
  736.       if ( and( -$F_A83, -$F_A82 ) < 0 ) then
  736.          $I_L736_1651 = 0
  736.          do
  736.             $I_L736_1477 = 0
  736. !dir$ ivdep
  736.             do
  736.                qco(1 + $I_L736_1477, 1 + $I_L736_1651) = 0.0
  736.                $I_L736_1477 = 1 + $I_L736_1477
  736.                if ( $I_L736_1477 >= $F_A83 ) exit
  736.             enddo
  736.             $I_L736_1651 = 1 + $I_L736_1651
  736.             if ( $I_L736_1651 >= $F_A82 ) exit
  736.          enddo
  736.       endif
  737.       $F_A84 = kmax
  737.       $F_A85 = ncols
  737.       if ( and( -$F_A85, -$F_A84 ) < 0 ) then
  737.          $I_L737_1653 = 0
  737.          do
  737.             $I_L737_1479 = 0
  737. !dir$ ivdep
  737.             do
  737.                qrcdo(1 + $I_L737_1479, 1 + $I_L737_1653) = 0.0
  737.                $I_L737_1479 = 1 + $I_L737_1479
  737.                if ( $I_L737_1479 >= $F_A85 ) exit
  737.             enddo
  737.             $I_L737_1653 = 1 + $I_L737_1653
  737.             if ( $I_L737_1653 >= $F_A84 ) exit
  737.          enddo
  737.       endif
  738.       $F_A86 = kmax
  738.       $F_A87 = ncols
  738.       if ( and( -$F_A87, -$F_A86 ) < 0 ) then
  738.          $I_L738_1655 = 0
  738.          do
  738.             $I_L738_1481 = 0
  738. !dir$ ivdep
  738.             do
  738.                pwdo(1 + $I_L738_1481, 1 + $I_L738_1655) = 0.0
  738.                $I_L738_1481 = 1 + $I_L738_1481
  738.                if ( $I_L738_1481 >= $F_A87 ) exit
  738.             enddo
  738.             $I_L738_1655 = 1 + $I_L738_1655
  738.             if ( $I_L738_1655 >= $F_A86 ) exit
  738.          enddo
  738.       endif
  739.       $F_A88 = kmax
  739.       $F_A89 = ncols
  739.       if ( and( -$F_A89, -$F_A88 ) < 0 ) then
  739.          $I_L739_1657 = 0
  739.          do
  739.             $I_L739_1483 = 0
  739. !dir$ ivdep
  739.             do
  739.                pwo(1 + $I_L739_1483, 1 + $I_L739_1657) = 0.0
  739.                $I_L739_1483 = 1 + $I_L739_1483
  739.                if ( $I_L739_1483 >= $F_A89 ) exit
  739.             enddo
  739.             $I_L739_1657 = 1 + $I_L739_1657
  739.             if ( $I_L739_1657 >= $F_A88 ) exit
  739.          enddo
  739.       endif
  740.       $F_A90 = kmax
  740.       $F_A91 = ncols
  740.       if ( and( -$F_A91, -$F_A90 ) < 0 ) then
  740.          $I_L740_1659 = 0
  740.          do
  740.             $I_L740_1485 = 0
  740. !dir$ ivdep
  740.             do
  740.                hcd(1 + $I_L740_1485, 1 + $I_L740_1659) = 0.0
  740.                $I_L740_1485 = 1 + $I_L740_1485
  740.                if ( $I_L740_1485 >= $F_A91 ) exit
  740.             enddo
  740.             $I_L740_1659 = 1 + $I_L740_1659
  740.             if ( $I_L740_1659 >= $F_A90 ) exit
  740.          enddo
  740.       endif
  741.       $F_A92 = kmax
  741.       $F_A93 = ncols
  741.       if ( and( -$F_A93, -$F_A92 ) < 0 ) then
  741.          $I_L741_1661 = 0
  741.          do
  741.             $I_L741_1487 = 0
  741. !dir$ ivdep
  741.             do
  741.                hcdo(1 + $I_L741_1487, 1 + $I_L741_1661) = 0.0
  741.                $I_L741_1487 = 1 + $I_L741_1487
  741.                if ( $I_L741_1487 >= $F_A93 ) exit
  741.             enddo
  741.             $I_L741_1661 = 1 + $I_L741_1661
  741.             if ( $I_L741_1661 >= $F_A92 ) exit
  741.          enddo
  741.       endif
  743.       $F_A94 = kmax
  743.       $F_A95 = ncols
  743.       if ( and( -$F_A95, -$F_A94 ) < 0 ) then
  743.          $I_L743_1663 = 0
  743.          do
  743.             $I_L743_1489 = 0
  743. !dir$ ivdep
  743.             do
  743.                qcdo(1 + $I_L743_1489, 1 + $I_L743_1663) = 0.0
  743.                $I_L743_1489 = 1 + $I_L743_1489
  743.                if ( $I_L743_1489 >= $F_A95 ) exit
  743.             enddo
  743.             $I_L743_1663 = 1 + $I_L743_1663
  743.             if ( $I_L743_1663 >= $F_A94 ) exit
  743.          enddo
  743.       endif
  744.       $F_A96 = kmax
  744.       $F_A97 = ncols
  744.       if ( and( -$F_A97, -$F_A96 ) < 0 ) then
  744.          $I_L744_1665 = 0
  744.          do
  744.             $I_L744_1491 = 0
  744. !dir$ ivdep
  744.             do
  744.                dbyd(1 + $I_L744_1491, 1 + $I_L744_1665) = 0.0
  744.                $I_L744_1491 = 1 + $I_L744_1491
  744.                if ( $I_L744_1491 >= $F_A97 ) exit
  744.             enddo
  744.             $I_L744_1665 = 1 + $I_L744_1665
  744.             if ( $I_L744_1665 >= $F_A96 ) exit
  744.          enddo
  744.       endif
  745.       $F_A98 = kmax
  745.       $F_A99 = ncols
  745.       if ( and( -$F_A99, -$F_A98 ) < 0 ) then
  745.          $I_L745_1667 = 0
  745.          do
  745.             $I_L745_1493 = 0
  745. !dir$ ivdep
  745.             do
  745.                dbydo(1 + $I_L745_1493, 1 + $I_L745_1667) = 0.0
  745.                $I_L745_1493 = 1 + $I_L745_1493
  745.                if ( $I_L745_1493 >= $F_A99 ) exit
  745.             enddo
  745.             $I_L745_1667 = 1 + $I_L745_1667
  745.             if ( $I_L745_1667 >= $F_A98 ) exit
  745.          enddo
  745.       endif
  746.       $F_A100 = kmax
  746.       $F_A101 = ncols
  746.       if ( and( -$F_A101, -$F_A100 ) < 0 ) then
  746.          $I_L746_1669 = 0
  746.          do
  746.             $I_L746_1495 = 0
  746. !dir$ ivdep
  746.             do
  746.                hc(1 + $I_L746_1495, 1 + $I_L746_1669) = 0.0
  746.                $I_L746_1495 = 1 + $I_L746_1495
  746.                if ( $I_L746_1495 >= $F_A101 ) exit
  746.             enddo
  746.             $I_L746_1669 = 1 + $I_L746_1669
  746.             if ( $I_L746_1669 >= $F_A100 ) exit
  746.          enddo
  746.       endif
  747.       $F_A102 = kmax
  747.       $F_A103 = ncols
  747.       if ( and( -$F_A103, -$F_A102 ) < 0 ) then
  747.          $I_L747_1671 = 0
  747.          do
  747.             $I_L747_1497 = 0
  747. !dir$ ivdep
  747.             do
  747.                hco(1 + $I_L747_1497, 1 + $I_L747_1671) = 0.0
  747.                $I_L747_1497 = 1 + $I_L747_1497
  747.                if ( $I_L747_1497 >= $F_A103 ) exit
  747.             enddo
  747.             $I_L747_1671 = 1 + $I_L747_1671
  747.             if ( $I_L747_1671 >= $F_A102 ) exit
  747.          enddo
  747.       endif
  748.       $F_A104 = kmax
  748.       $F_A105 = ncols
  748.       if ( and( -$F_A105, -$F_A104 ) < 0 ) then
  748.          $I_L748_1673 = 0
  748.          do
  748.             $I_L748_1499 = 0
  748. !dir$ ivdep
  748.             do
  748.                qrc(1 + $I_L748_1499, 1 + $I_L748_1673) = 0.0
  748.                $I_L748_1499 = 1 + $I_L748_1499
  748.                if ( $I_L748_1499 >= $F_A105 ) exit
  748.             enddo
  748.             $I_L748_1673 = 1 + $I_L748_1673
  748.             if ( $I_L748_1673 >= $F_A104 ) exit
  748.          enddo
  748.       endif
  749.       $F_A106 = kmax
  749.       $F_A107 = ncols
  749.       if ( and( -$F_A107, -$F_A106 ) < 0 ) then
  749.          $I_L749_1675 = 0
  749.          do
  749.             $I_L749_1501 = 0
  749. !dir$ ivdep
  749.             do
  749.                qrco(1 + $I_L749_1501, 1 + $I_L749_1675) = 0.0
  749.                $I_L749_1501 = 1 + $I_L749_1501
  749.                if ( $I_L749_1501 >= $F_A107 ) exit
  749.             enddo
  749.             $I_L749_1675 = 1 + $I_L749_1675
  749.             if ( $I_L749_1675 >= $F_A106 ) exit
  749.          enddo
  749.       endif
  750.       $F_A108 = kmax
  750.       $F_A109 = ncols
  750.       if ( and( -$F_A109, -$F_A108 ) < 0 ) then
  750.          $I_L750_1677 = 0
  750.          do
  750.             $I_L750_1503 = 0
  750. !dir$ ivdep
  750.             do
  750.                zu(1 + $I_L750_1503, 1 + $I_L750_1677) = 0.0
  750.                $I_L750_1503 = 1 + $I_L750_1503
  750.                if ( $I_L750_1503 >= $F_A109 ) exit
  750.             enddo
  750.             $I_L750_1677 = 1 + $I_L750_1677
  750.             if ( $I_L750_1677 >= $F_A108 ) exit
  750.          enddo
  750.       endif
  751.       $F_A110 = kmax
  751.       $F_A111 = ncols
  751.       if ( and( -$F_A111, -$F_A110 ) < 0 ) then
  751.          $I_L751_1679 = 0
  751.          do
  751.             $I_L751_1505 = 0
  751. !dir$ ivdep
  751.             do
  751.                zuo(1 + $I_L751_1505, 1 + $I_L751_1679) = 0.0
  751.                $I_L751_1505 = 1 + $I_L751_1505
  751.                if ( $I_L751_1505 >= $F_A111 ) exit
  751.             enddo
  751.             $I_L751_1679 = 1 + $I_L751_1679
  751.             if ( $I_L751_1679 >= $F_A110 ) exit
  751.          enddo
  751.       endif
  753.       $F_A112 = kmax
  753.       $F_A113 = ncols
  753.       if ( and( -$F_A113, -$F_A112 ) < 0 ) then
  753.          $I_L753_1681 = 0
  753.          do
  753.             $I_L753_1507 = 0
  753. !dir$ ivdep
  753.             do
  753.                zdo(1 + $I_L753_1507, 1 + $I_L753_1681) = 0.0
  753.                $I_L753_1507 = 1 + $I_L753_1507
  753.                if ( $I_L753_1507 >= $F_A113 ) exit
  753.             enddo
  753.             $I_L753_1681 = 1 + $I_L753_1681
  753.             if ( $I_L753_1681 >= $F_A112 ) exit
  753.          enddo
  753.       endif
  754.       $F_A114 = kmax
  754.       $F_A115 = ncols
  754.       if ( and( -$F_A115, -$F_A114 ) < 0 ) then
  754.          $I_L754_1683 = 0
  754.          do
  754.             $I_L754_1509 = 0
  754. !dir$ ivdep
  754.             do
  754.                qes_cup(1 + $I_L754_1509, 1 + $I_L754_1683) = 0.0
  754.                $I_L754_1509 = 1 + $I_L754_1509
  754.                if ( $I_L754_1509 >= $F_A115 ) exit
  754.             enddo
  754.             $I_L754_1683 = 1 + $I_L754_1683
  754.             if ( $I_L754_1683 >= $F_A114 ) exit
  754.          enddo
  754.       endif
  755.       $F_A116 = kmax
  755.       $F_A117 = ncols
  755.       if ( and( -$F_A117, -$F_A116 ) < 0 ) then
  755.          $I_L755_1685 = 0
  755.          do
  755.             $I_L755_1511 = 0
  755. !dir$ ivdep
  755.             do
  755.                q_cup(1 + $I_L755_1511, 1 + $I_L755_1685) = 0.0
  755.                $I_L755_1511 = 1 + $I_L755_1511
  755.                if ( $I_L755_1511 >= $F_A117 ) exit
  755.             enddo
  755.             $I_L755_1685 = 1 + $I_L755_1685
  755.             if ( $I_L755_1685 >= $F_A116 ) exit
  755.          enddo
  755.       endif
  756.       $F_A118 = kmax
  756.       $F_A119 = ncols
  756.       if ( and( -$F_A119, -$F_A118 ) < 0 ) then
  756.          $I_L756_1687 = 0
  756.          do
  756.             $I_L756_1513 = 0
  756. !dir$ ivdep
  756.             do
  756.                he_cup(1 + $I_L756_1513, 1 + $I_L756_1687) = 0.0
  756.                $I_L756_1513 = 1 + $I_L756_1513
  756.                if ( $I_L756_1513 >= $F_A119 ) exit
  756.             enddo
  756.             $I_L756_1687 = 1 + $I_L756_1687
  756.             if ( $I_L756_1687 >= $F_A118 ) exit
  756.          enddo
  756.       endif
  757.       $F_A120 = kmax
  757.       $F_A121 = ncols
  757.       if ( and( -$F_A121, -$F_A120 ) < 0 ) then
  757.          $I_L757_1689 = 0
  757.          do
  757.             $I_L757_1515 = 0
  757. !dir$ ivdep
  757.             do
  757.                hes_cup(1 + $I_L757_1515, 1 + $I_L757_1689) = 0.0
  757.                $I_L757_1515 = 1 + $I_L757_1515
  757.                if ( $I_L757_1515 >= $F_A121 ) exit
  757.             enddo
  757.             $I_L757_1689 = 1 + $I_L757_1689
  757.             if ( $I_L757_1689 >= $F_A120 ) exit
  757.          enddo
  757.       endif
  758.       $F_A122 = kmax
  758.       $F_A123 = ncols
  758.       if ( and( -$F_A123, -$F_A122 ) < 0 ) then
  758.          $I_L758_1691 = 0
  758.          do
  758.             $I_L758_1517 = 0
  758. !dir$ ivdep
  758.             do
  758.                z_cup(1 + $I_L758_1517, 1 + $I_L758_1691) = 0.0
  758.                $I_L758_1517 = 1 + $I_L758_1517
  758.                if ( $I_L758_1517 >= $F_A123 ) exit
  758.             enddo
  758.             $I_L758_1691 = 1 + $I_L758_1691
  758.             if ( $I_L758_1691 >= $F_A122 ) exit
  758.          enddo
  758.       endif
  759.       $F_A124 = kmax
  759.       $F_A125 = ncols
  759.       if ( and( -$F_A125, -$F_A124 ) < 0 ) then
  759.          $I_L759_1693 = 0
  759.          do
  759.             $I_L759_1519 = 0
  759. !dir$ ivdep
  759.             do
  759.                p_cup(1 + $I_L759_1519, 1 + $I_L759_1693) = 0.0
  759.                $I_L759_1519 = 1 + $I_L759_1519
  759.                if ( $I_L759_1519 >= $F_A125 ) exit
  759.             enddo
  759.             $I_L759_1693 = 1 + $I_L759_1693
  759.             if ( $I_L759_1693 >= $F_A124 ) exit
  759.          enddo
  759.       endif
  760.       $F_A126 = kmax
  760.       $F_A127 = ncols
  760.       if ( and( -$F_A127, -$F_A126 ) < 0 ) then
  760.          $I_L760_1695 = 0
  760.          do
  760.             $I_L760_1521 = 0
  760. !dir$ ivdep
  760.             do
  760.                gamma_cup(1 + $I_L760_1521, 1 + $I_L760_1695) = 0.0
  760.                $I_L760_1521 = 1 + $I_L760_1521
  760.                if ( $I_L760_1521 >= $F_A127 ) exit
  760.             enddo
  760.             $I_L760_1695 = 1 + $I_L760_1695
  760.             if ( $I_L760_1695 >= $F_A126 ) exit
  760.          enddo
  760.       endif
  761.       $F_A128 = kmax
  761.       $F_A129 = ncols
  761.       if ( and( -$F_A129, -$F_A128 ) < 0 ) then
  761.          $I_L761_1697 = 0
  761.          do
  761.             $I_L761_1523 = 0
  761. !dir$ ivdep
  761.             do
  761.                t_cup(1 + $I_L761_1523, 1 + $I_L761_1697) = 0.0
  761.                $I_L761_1523 = 1 + $I_L761_1523
  761.                if ( $I_L761_1523 >= $F_A129 ) exit
  761.             enddo
  761.             $I_L761_1697 = 1 + $I_L761_1697
  761.             if ( $I_L761_1697 >= $F_A128 ) exit
  761.          enddo
  761.       endif
  762.       $F_A130 = kmax
  762.       $F_A131 = ncols
  762.       if ( and( -$F_A131, -$F_A130 ) < 0 ) then
  762.          $I_L762_1699 = 0
  762.          do
  762.             $I_L762_1525 = 0
  762. !dir$ ivdep
  762.             do
  762.                qeso_cup(1 + $I_L762_1525, 1 + $I_L762_1699) = 0.0
  762.                $I_L762_1525 = 1 + $I_L762_1525
  762.                if ( $I_L762_1525 >= $F_A131 ) exit
  762.             enddo
  762.             $I_L762_1699 = 1 + $I_L762_1699
  762.             if ( $I_L762_1699 >= $F_A130 ) exit
  762.          enddo
  762.       endif
  763.       $F_A132 = kmax
  763.       $F_A133 = ncols
  763.       if ( and( -$F_A133, -$F_A132 ) < 0 ) then
  763.          $I_L763_1701 = 0
  763.          do
  763.             $I_L763_1527 = 0
  763. !dir$ ivdep
  763.             do
  763.                qo_cup(1 + $I_L763_1527, 1 + $I_L763_1701) = 0.0
  763.                $I_L763_1527 = 1 + $I_L763_1527
  763.                if ( $I_L763_1527 >= $F_A133 ) exit
  763.             enddo
  763.             $I_L763_1701 = 1 + $I_L763_1701
  763.             if ( $I_L763_1701 >= $F_A132 ) exit
  763.          enddo
  763.       endif
  764.       $F_A134 = kmax
  764.       $F_A135 = ncols
  764.       if ( and( -$F_A135, -$F_A134 ) < 0 ) then
  764.          $I_L764_1703 = 0
  764.          do
  764.             $I_L764_1529 = 0
  764. !dir$ ivdep
  764.             do
  764.                heo_cup(1 + $I_L764_1529, 1 + $I_L764_1703) = 0.0
  764.                $I_L764_1529 = 1 + $I_L764_1529
  764.                if ( $I_L764_1529 >= $F_A135 ) exit
  764.             enddo
  764.             $I_L764_1703 = 1 + $I_L764_1703
  764.             if ( $I_L764_1703 >= $F_A134 ) exit
  764.          enddo
  764.       endif
  765.       $F_A136 = kmax
  765.       $F_A137 = ncols
  765.       if ( and( -$F_A137, -$F_A136 ) < 0 ) then
  765.          $I_L765_1705 = 0
  765.          do
  765.             $I_L765_1531 = 0
  765. !dir$ ivdep
  765.             do
  765.                heso_cup(1 + $I_L765_1531, 1 + $I_L765_1705) = 0.0
  765.                $I_L765_1531 = 1 + $I_L765_1531
  765.                if ( $I_L765_1531 >= $F_A137 ) exit
  765.             enddo
  765.             $I_L765_1705 = 1 + $I_L765_1705
  765.             if ( $I_L765_1705 >= $F_A136 ) exit
  765.          enddo
  765.       endif
  766.       $F_A138 = kmax
  766.       $F_A139 = ncols
  766.       if ( and( -$F_A139, -$F_A138 ) < 0 ) then
  766.          $I_L766_1707 = 0
  766.          do
  766.             $I_L766_1533 = 0
  766. !dir$ ivdep
  766.             do
  766.                zo_cup(1 + $I_L766_1533, 1 + $I_L766_1707) = 0.0
  766.                $I_L766_1533 = 1 + $I_L766_1533
  766.                if ( $I_L766_1533 >= $F_A139 ) exit
  766.             enddo
  766.             $I_L766_1707 = 1 + $I_L766_1707
  766.             if ( $I_L766_1707 >= $F_A138 ) exit
  766.          enddo
  766.       endif
  767.       $F_A140 = kmax
  767.       $F_A141 = ncols
  767.       if ( and( -$F_A141, -$F_A140 ) < 0 ) then
  767.          $I_L767_1709 = 0
  767.          do
  767.             $I_L767_1535 = 0
  767. !dir$ ivdep
  767.             do
  767.                po_cup(1 + $I_L767_1535, 1 + $I_L767_1709) = 0.0
  767.                $I_L767_1535 = 1 + $I_L767_1535
  767.                if ( $I_L767_1535 >= $F_A141 ) exit
  767.             enddo
  767.             $I_L767_1709 = 1 + $I_L767_1709
  767.             if ( $I_L767_1709 >= $F_A140 ) exit
  767.          enddo
  767.       endif
  768.       $F_A142 = kmax
  768.       $F_A143 = ncols
  768.       if ( and( -$F_A143, -$F_A142 ) < 0 ) then
  768.          $I_L768_1711 = 0
  768.          do
  768.             $I_L768_1537 = 0
  768. !dir$ ivdep
  768.             do
  768.                gammao_cup(1 + $I_L768_1537, 1 + $I_L768_1711) = 0.0
  768.                $I_L768_1537 = 1 + $I_L768_1537
  768.                if ( $I_L768_1537 >= $F_A143 ) exit
  768.             enddo
  768.             $I_L768_1711 = 1 + $I_L768_1711
  768.             if ( $I_L768_1711 >= $F_A142 ) exit
  768.          enddo
  768.       endif
  769.       $F_A144 = kmax
  769.       $F_A145 = ncols
  769.       if ( and( -$F_A145, -$F_A144 ) < 0 ) then
  769.          $I_L769_1713 = 0
  769.          do
  769.             $I_L769_1539 = 0
  769. !dir$ ivdep
  769.             do
  769.                tn_cup(1 + $I_L769_1539, 1 + $I_L769_1713) = 0.0
  769.                $I_L769_1539 = 1 + $I_L769_1539
  769.                if ( $I_L769_1539 >= $F_A145 ) exit
  769.             enddo
  769.             $I_L769_1713 = 1 + $I_L769_1713
  769.             if ( $I_L769_1713 >= $F_A144 ) exit
  769.          enddo
  769.       endif
  770.       $F_A146 = kmax
  770.       $F_A147 = ncols
  770.       if ( and( -$F_A147, -$F_A146 ) < 0 ) then
  770.          $I_L770_1715 = 0
  770.          do
  770.             $I_L770_1541 = 0
  770. !dir$ ivdep
  770.             do
  770.                cd(1 + $I_L770_1541, 1 + $I_L770_1715) = 0.0
  770.                $I_L770_1541 = 1 + $I_L770_1541
  770.                if ( $I_L770_1541 >= $F_A147 ) exit
  770.             enddo
  770.             $I_L770_1715 = 1 + $I_L770_1715
  770.             if ( $I_L770_1715 >= $F_A146 ) exit
  770.          enddo
  770.       endif
  771.       $F_A148 = kmax
  771.       $F_A149 = ncols
  771.       if ( and( -$F_A149, -$F_A148 ) < 0 ) then
  771.          $I_L771_1717 = 0
  771.          do
  771.             $I_L771_1543 = 0
  771. !dir$ ivdep
  771.             do
  771.                cdd(1 + $I_L771_1543, 1 + $I_L771_1717) = 0.0
  771.                $I_L771_1543 = 1 + $I_L771_1543
  771.                if ( $I_L771_1543 >= $F_A149 ) exit
  771.             enddo
  771.             $I_L771_1717 = 1 + $I_L771_1717
  771.             if ( $I_L771_1717 >= $F_A148 ) exit
  771.          enddo
  771.       endif
  772.       $F_A150 = kmax
  772.       $F_A151 = ncols
  772.       if ( and( -$F_A151, -$F_A150 ) < 0 ) then
  772.          $I_L772_1829 = 0
  772.          do
  772.             $I_L772_1719 = 0
  772.             do
  772.                $I_L772_1545 = 0
  772. !dir$ ivdep
  772.                do
  772.                   dellat_ens(1 + $I_L772_1545, 1 + $I_L772_1719, 1 + $I_L772_1829) = 0.0
  772.                   $I_L772_1545 = 1 + $I_L772_1545
  772.                   if ( $I_L772_1545 >= $F_A151 ) exit
  772.                enddo
  772.                $I_L772_1719 = 1 + $I_L772_1719
  772.                if ( $I_L772_1719 >= $F_A150 ) exit
  772.             enddo
  772.             $I_L772_1829 = 1 + $I_L772_1829
  772.             if ( $I_L772_1829 >= 3 ) exit
  772.          enddo
  772.       endif
  773.       $F_A152 = kmax
  773.       $F_A153 = ncols
  773.       if ( and( -$F_A153, -$F_A152 ) < 0 ) then
  773.          $I_L773_1831 = 0
  773.          do
  773.             $I_L773_1721 = 0
  773.             do
  773.                $I_L773_1547 = 0
  773. !dir$ ivdep
  773.                do
  773.                   dellaq_ens(1 + $I_L773_1547, 1 + $I_L773_1721, 1 + $I_L773_1831) = 0.0
  773.                   $I_L773_1547 = 1 + $I_L773_1547
  773.                   if ( $I_L773_1547 >= $F_A153 ) exit
  773.                enddo
  773.                $I_L773_1721 = 1 + $I_L773_1721
  773.                if ( $I_L773_1721 >= $F_A152 ) exit
  773.             enddo
  773.             $I_L773_1831 = 1 + $I_L773_1831
  773.             if ( $I_L773_1831 >= 3 ) exit
  773.          enddo
  773.       endif
  775.       $F_A154 = kmax
  775.       $F_A155 = ncols
  775.       if ( and( -$F_A155, -$F_A154 ) < 0 ) then
  775.          $I_L775_1833 = 0
  775.          do
  775.             $I_L775_1723 = 0
  775.             do
  775.                $I_L775_1549 = 0
  775. !dir$ ivdep
  775.                do
  775.                   pwo_ens(1 + $I_L775_1549, 1 + $I_L775_1723, 1 + $I_L775_1833) = 0.0
  775.                   $I_L775_1549 = 1 + $I_L775_1549
  775.                   if ( $I_L775_1549 >= $F_A155 ) exit
  775.                enddo
  775.                $I_L775_1723 = 1 + $I_L775_1723
  775.                if ( $I_L775_1723 >= $F_A154 ) exit
  775.             enddo
  775.             $I_L775_1833 = 1 + $I_L775_1833
  775.             if ( $I_L775_1833 >= 3 ) exit
  775.          enddo
  775.       endif
  789.       $F_A156 = kmax
  789.       $F_A157 = ncols
  789.       if ( and( -$F_A157, -$F_A156 ) < 0 ) then
  789.          $I_L789_1835 = 0
  789.          do
  789.             $I_L789_1725 = 0
  789.             do
  789.                $I_L789_1551 = 0
  789. !dir$ ivdep
  789.                do
  789.                   dellat_ens(1 + $I_L789_1551, 1 + $I_L789_1725, 1 + $I_L789_1835) = 0.0
  789.                   $I_L789_1551 = 1 + $I_L789_1551
  789.                   if ( $I_L789_1551 >= $F_A157 ) exit
  789.                enddo
  789.                $I_L789_1725 = 1 + $I_L789_1725
  789.                if ( $I_L789_1725 >= $F_A156 ) exit
  789.             enddo
  789.             $I_L789_1835 = 1 + $I_L789_1835
  789.             if ( $I_L789_1835 >= 3 ) exit
  789.          enddo
  789.       endif
  790.       $F_A158 = kmax
  790.       $F_A159 = ncols
  790.       if ( and( -$F_A159, -$F_A158 ) < 0 ) then
  790.          $I_L790_1837 = 0
  790.          do
  790.             $I_L790_1727 = 0
  790.             do
  790.                $I_L790_1553 = 0
  790. !dir$ ivdep
  790.                do
  790.                   dellaq_ens(1 + $I_L790_1553, 1 + $I_L790_1727, 1 + $I_L790_1837) = 0.0
  790.                   $I_L790_1553 = 1 + $I_L790_1553
  790.                   if ( $I_L790_1553 >= $F_A159 ) exit
  790.                enddo
  790.                $I_L790_1727 = 1 + $I_L790_1727
  790.                if ( $I_L790_1727 >= $F_A158 ) exit
  790.             enddo
  790.             $I_L790_1837 = 1 + $I_L790_1837
  790.             if ( $I_L790_1837 >= 3 ) exit
  790.          enddo
  790.       endif
  792.       $F_A160 = kmax
  792.       $F_A161 = ncols
  792.       if ( and( -$F_A161, -$F_A160 ) < 0 ) then
  792.          $I_L792_1839 = 0
  792.          do
  792.             $I_L792_1729 = 0
  792.             do
  792.                $I_L792_1555 = 0
  792. !dir$ ivdep
  792.                do
  792.                   pwo_ens(1 + $I_L792_1555, 1 + $I_L792_1729, 1 + $I_L792_1839) = 0.0
  792.                   $I_L792_1555 = 1 + $I_L792_1555
  792.                   if ( $I_L792_1555 >= $F_A161 ) exit
  792.                enddo
  792.                $I_L792_1729 = 1 + $I_L792_1729
  792.                if ( $I_L792_1729 >= $F_A160 ) exit
  792.             enddo
  792.             $I_L792_1839 = 1 + $I_L792_1839
  792.             if ( $I_L792_1839 >= 3 ) exit
  792.          enddo
  792.       endif
  776.       $F_A162 = ncols
  776.       if ( ncols > 0 ) then
  776.          $I_L776_1731 = 0
  776.          do
  776.             $I_L776_1557 = 0
  776. !dir$ ivdep
  776.             do
  776.                xf_ens(1 + $I_L776_1557, 1 + $I_L776_1731) = 0.0
  776.                $I_L776_1557 = 1 + $I_L776_1557
  776.                if ( $I_L776_1557 >= $F_A162 ) exit
  776.             enddo
  776.             $I_L776_1731 = 1 + $I_L776_1731
  776.             if ( $I_L776_1731 >= 144 ) exit
  776.          enddo
  776.       endif
  777.       $F_A163 = ncols
  777.       if ( ncols > 0 ) then
  777.          $I_L777_1733 = 0
  777.          do
  777.             $I_L777_1559 = 0
  777. !dir$ ivdep
  777.             do
  777.                outt_ens(1 + $I_L777_1559, 1 + $I_L777_1733) = 0.0
  777.                $I_L777_1559 = 1 + $I_L777_1559
  777.                if ( $I_L777_1559 >= $F_A163 ) exit
  777.             enddo
  777.             $I_L777_1733 = 1 + $I_L777_1733
  777.             if ( $I_L777_1733 >= 144 ) exit
  777.          enddo
  777.       endif
  778.       $F_A164 = ncols
  778.       if ( ncols > 0 ) then
  778.          $I_L778_1735 = 0
  778.          do
  778.             $I_L778_1561 = 0
  778. !dir$ ivdep
  778.             do
  778.                pr_ens(1 + $I_L778_1561, 1 + $I_L778_1735) = 0.0
  778.                $I_L778_1561 = 1 + $I_L778_1561
  778.                if ( $I_L778_1561 >= $F_A164 ) exit
  778.             enddo
  778.             $I_L778_1735 = 1 + $I_L778_1735
  778.             if ( $I_L778_1735 >= 144 ) exit
  778.          enddo
  778.       endif
  779.       $F_A165 = ncols
  779.       if ( ncols > 0 ) then
  779.          $I_L779_1737 = 0
  779.          do
  779.             $I_L779_1563 = 0
  779. !dir$ ivdep
  779.             do
  779.                edtc(1 + $I_L779_1563, 1 + $I_L779_1737) = 0.0
  779.                $I_L779_1563 = 1 + $I_L779_1563
  779.                if ( $I_L779_1563 >= $F_A165 ) exit
  779.             enddo
  779.             $I_L779_1737 = 1 + $I_L779_1737
  779.             if ( $I_L779_1737 >= 3 ) exit
  779.          enddo
  779.       endif
  794.       istart = 1
  795.       iend = ncols
  796.       maxens22 = grepar2
  802.       $F_A166 = ncols
  802.       if ( ncols > 0 ) then
  802.          $I_L802_1565 = 0
  802. !dir$ ivdep
  802.          do
  802.             mconv(1 + $I_L802_1565) = 0.0
  802.             $I_L802_1565 = 1 + $I_L802_1565
  802.             if ( $I_L802_1565 >= $F_A166 ) exit
  802.          enddo
  802.       endif
  803.       $F_A167 = kmax
  803.       $F_A168 = ncols
  803.       if ( and( -$F_A168, -$F_A167 ) < 0 ) then
  803.          $I_L803_1739 = 0
  803.          do
  803.             $I_L803_1567 = 0
  803. !dir$ ivdep
  803.             do
  803.                qrco(1 + $I_L803_1567, 1 + $I_L803_1739) = 0.0
  803.                $I_L803_1567 = 1 + $I_L803_1567
  803.                if ( $I_L803_1567 >= $F_A168 ) exit
  803.             enddo
  803.             $I_L803_1739 = 1 + $I_L803_1739
  803.             if ( $I_L803_1739 >= $F_A167 ) exit
  803.          enddo
  803.       endif
  804.       $F_A169 = kmax
  804.       $F_A170 = ncols
  804.       if ( and( -$F_A170, -$F_A169 ) < 0 ) then
  804.          $I_L804_1741 = 0
  804.          do
  804.             $I_L804_1569 = 0
  804. !dir$ ivdep
  804.             do
  804.                qrco_gz(1 + $I_L804_1569, 1 + $I_L804_1741) = 0.0
  804.                $I_L804_1569 = 1 + $I_L804_1569
  804.                if ( $I_L804_1569 >= $F_A170 ) exit
  804.             enddo
  804.             $I_L804_1741 = 1 + $I_L804_1741
  804.             if ( $I_L804_1741 >= $F_A169 ) exit
  804.          enddo
  804.       endif
  816.       if ( -3 + kmax >= 0 ) then
  817.          if ( ncols > 0 ) then
  817.             $I_L817_1790 = 0
  817.             do
  816.                $I_L816_1753 = 0
  816.                if ( -6 + kmax >= 0 ) then
  816.                   $I_L816_1855 = 0
  816. !dir$ blocking_size( 0, 0 )
  816.                   do
  817.                      $I_L817_1261 = 0
  817. !dir$ ivdep
  817. !dir$ blocking_size( 256, 256 )
  817.                      do
  818.                         $dq_S5 = 5.0e-1 * ( q($I_L817_1261 + 256 * $I_L817_1790 + 1, 3 + 4 * $I_L816_1855) + -q($I_L817_1261 + 256 * $I_L817_1790 + 1, 1 + 4 * $I_L816_1855) )
  819.                         mconv($I_L817_1261 + 256 * $I_L817_1790 + 1) = mconv($I_L817_1261 + 256 * $I_L817_1790 + 1) + omeg($I_L817_1261 + 256 * $I_L817_1790 + 1, 2 + 4 * $I_L816_1855) * $dq_S5 * 1.019367991845056e-1
  818.                         $dq_S5 = 5.0e-1 * ( q($I_L817_1261 + 256 * $I_L817_1790 + 1, 4 + 4 * $I_L816_1855) + -q($I_L817_1261 + 256 * $I_L817_1790 + 1, 2 + 4 * $I_L816_1855) )
  819.                         mconv($I_L817_1261 + 256 * $I_L817_1790 + 1) = mconv($I_L817_1261 + 256 * $I_L817_1790 + 1) + omeg($I_L817_1261 + 256 * $I_L817_1790 + 1, 3 + 4 * $I_L816_1855) * $dq_S5 * 1.019367991845056e-1
  818.                         $dq_S5 = 5.0e-1 * ( q($I_L817_1261 + 256 * $I_L817_1790 + 1, 5 + 4 * $I_L816_1855) + -q($I_L817_1261 + 256 * $I_L817_1790 + 1, 3 + 4 * $I_L816_1855) )
  819.                         mconv($I_L817_1261 + 256 * $I_L817_1790 + 1) = mconv($I_L817_1261 + 256 * $I_L817_1790 + 1) + omeg($I_L817_1261 + 256 * $I_L817_1790 + 1, 4 + 4 * $I_L816_1855) * $dq_S5 * 1.019367991845056e-1
  818.                         $dq_S5 = 5.0e-1 * ( q($I_L817_1261 + 256 * $I_L817_1790 + 1, 6 + 4 * $I_L816_1855) + -q($I_L817_1261 + 256 * $I_L817_1790 + 1, 4 + 4 * $I_L816_1855) )
  819.                         mconv($I_L817_1261 + 256 * $I_L817_1790 + 1) = mconv($I_L817_1261 + 256 * $I_L817_1790 + 1) + omeg($I_L817_1261 + 256 * $I_L817_1790 + 1, 5 + 4 * $I_L816_1855) * $dq_S5 * 1.019367991845056e-1
  817.                         $I_L817_1261 = 1 + $I_L817_1261
  817.                         if ( $I_L817_1261 >= min( ncols, 256 + 256 * $I_L817_1790 ) + -256 * $I_L817_1790 ) exit
  817.                      enddo
  821.                      $I_L816_1855 = 1 + $I_L816_1855
  821.                      if ( $I_L816_1855 >= _rsh( -2 + kmax, 2 ) ) exit
  821.                   enddo
  821.                   $I_L816_1753 = and( 0xfffffffffffffffcUL, -2 + kmax )
  821.                endif
  816.                if ( $I_L816_1753 < -2 + kmax ) then
  816.                   $I_L816_1852 = 0
  816. !dir$ blocking_size( 0, 0 )
  816.                   do
  817.                      $I_L817_1261 = 0
  817. !dir$ ivdep
  817. !dir$ blocking_size( 256, 256 )
  817.                      do
  818.                         $dq_S5 = 5.0e-1 * ( q($I_L817_1261 + 256 * $I_L817_1790 + 1, $I_L816_1753 + $I_L816_1852 + 3) + -q($I_L817_1261 + 256 * $I_L817_1790 + 1, $I_L816_1753 + $I_L816_1852 + 1) )
  819.                         mconv($I_L817_1261 + 256 * $I_L817_1790 + 1) = mconv($I_L817_1261 + 256 * $I_L817_1790 + 1) + omeg($I_L817_1261 + 256 * $I_L817_1790 + 1, $I_L816_1753 + $I_L816_1852 + 2) * $dq_S5 * 1.019367991845056e-1
  817.                         $I_L817_1261 = 1 + $I_L817_1261
  817.                         if ( $I_L817_1261 >= min( ncols, 256 + 256 * $I_L817_1790 ) + -256 * $I_L817_1790 ) exit
  817.                      enddo
  821.                      $I_L816_1852 = 1 + $I_L816_1852
  821.                      if ( $I_L816_1852 >= kmax + -$I_L816_1753 + -2 ) exit
  821.                   enddo
  821.                endif
  817.                $I_L817_1790 = 1 + $I_L817_1790
  820.                if ( $I_L817_1790 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
  820.             enddo
  820.          endif
  820.       endif
  823.       if ( ncols > 0 ) then
  823.          $I_L823_1264 = 0
  823. !dir$ ivdep
  823.          do
  824.             mconv(1 + $I_L823_1264) = max( 0.0, mconv(1 + $I_L823_1264) )
  825.             $I_L823_1264 = 1 + $I_L823_1264
  823.             if ( $I_L823_1264 >= ncols ) exit
  823.          enddo
  823.       endif
  829.       if ( kmax > 0 ) then
  830.          if ( ncols > 0 ) then
  829.             $I_L829_1601 = 0
  829.             do
  830.                $I_L830_1266 = 0
  830. !dir$ ivdep
  830.                do
  834.                   cd(1 + $I_L830_1266, 1 + $I_L829_1601) = 1.0000000000000001e-1 * entr_rate
  835.                   cdd(1 + $I_L830_1266, 1 + $I_L829_1601) = 0.0
  836.                   $I_L830_1266 = 1 + $I_L830_1266
  830.                   if ( $I_L830_1266 >= ncols ) exit
  830.                enddo
  837.                $I_L829_1601 = 1 + $I_L829_1601
  836.                if ( $I_L829_1601 >= kmax ) exit
  836.             enddo
  836.          endif
  836.       endif
  858.       mbdt = 3.0000000000000001e-3 * dtime
  862.       if ( 48 * grepar2 > 0 ) then
  863.          if ( ncols > 0 ) then
  862.             $I_L862_1603 = 0
  862. !dir$ blocking_size( 0, 0 )
  862.             do
  863.                $I_L863_1270 = 0
  863. !dir$ ivdep
  863. !dir$ blocking_size( 0, 0 )
  863.                do
  864.                   if ( ierr(1 + $I_L863_1270) /= 20 ) then
  865.                      xf_ens(1 + $I_L863_1270, 1 + $I_L862_1603) = 0.0
  866.                      pr_ens(1 + $I_L863_1270, 1 + $I_L862_1603) = 0.0
  867.                      outt_ens(1 + $I_L863_1270, 1 + $I_L862_1603) = 0.0
  867.                   endif
  869.                   $I_L863_1270 = 1 + $I_L863_1270
  868.                   if ( $I_L863_1270 >= ncols ) exit
  868.                enddo
  870.                $I_L862_1603 = 1 + $I_L862_1603
  869.                if ( $I_L862_1603 >= ( 48 * grepar2 ) ) exit
  869.             enddo
  869.          endif
  869.       endif
  874.       t$25 = ncols
  874.       t$26 = kmax
  874.       t$679 = max( 0, ncols )
  874.       t$680 = ncols
  874.       t$681 = max( 0, kmax )
  874.       t$682 = ( ncols * kmax )
  874.       t$685 = ncols * kmax * 8
  874.       t$683 = int( _alloc( ncols * kmax * 8 ), 8 )
  874.       t$684 = t$683
  874.       if ( kmax > 0 ) then
  874.          $SC_be_I2 = be(1)
  874.          $SC_ae_I3 = ae(1)
  874.          $SC_be_I0 = be(2)
  874.          $SC_ae_I1 = ae(2)
  874.          if ( ncols > 0 ) then
  874.             $I_L874_1792 = 0
  874.             do
  874.                $I_L874_1755 = 0
  874. !dir$ ivdep
  874. !dir$ blocking_size( 0, 0 )
  874.                do
  874.                   $I_L874_1272 = 0
  874. !dir$ unroll 2
  874. !dir$ blocking_size( 256, 256 )
  874.                   do
  874.                      if ( ierr($I_L874_1272 + 256 * $I_L874_1792 + 1) == 0 ) then
  874.                         if ( t($I_L874_1272 + 256 * $I_L874_1792 + 1, 1 + $I_L874_1755) <= 273.14999999999998 ) then
  874.                            $es5_S13 = _expn( $SC_ae_I1 + -( $SC_be_I0 * 1.0/t($I_L874_1272 + 256 * $I_L874_1792 + 1, 1 + $I_L874_1755) ) )
  874.                         else
  874.                            $es5_S13 = _expn( $SC_ae_I3 + -( $SC_be_I2 * 1.0/t($I_L874_1272 + 256 * $I_L874_1792 + 1, 1 + $I_L874_1755) ) )
  874.                         endif
  874.                         $qes_WR0_R0 = ( 1.0/( 100.0 * p($I_L874_1272 + 256 * $I_L874_1792 + 1, 1 + $I_L874_1755) + -$es5_S13 ) * $es5_S13 * 6.22e-1 )
  874.                         $qes_WR0_R0 = max( 1.0e-8, $qes_WR0_R0 )
  874.                         qes($I_L874_1272 + 256 * $I_L874_1792 + 1, 1 + $I_L874_1755) = $qes_WR0_R0
  874.                         $q_WR0_R1 = min( $qes_WR0_R0, q($I_L874_1272 + 256 * $I_L874_1792 + 1, 1 + $I_L874_1755) )
  874.                         q($I_L874_1272 + 256 * $I_L874_1792 + 1, 1 + $I_L874_1755) = $q_WR0_R1
  874.                         tv($I_L874_1272 + 256 * $I_L874_1792 + 1, 1 + $I_L874_1755) = t($I_L874_1272 + 256 * $I_L874_1792 + 1, 1 + $I_L874_1755) + t($I_L874_1272 + 256 * $I_L874_1792 + 1, 1 + $I_L874_1755) * $q_WR0_R1 * 6.0799999999999998e-1
  874.                      endif
  874.                      $I_L874_1272 = 1 + $I_L874_1272
  874.                      if ( $I_L874_1272 >= min( ncols, 256 + 256 * $I_L874_1792 ) + -256 * $I_L874_1792 ) exit
  874.                   enddo
  874.                   $I_L874_1755 = 1 + $I_L874_1755
  874.                   if ( $I_L874_1755 >= kmax ) exit
  874.                enddo
  874.                $I_L874_1792 = 1 + $I_L874_1792
  874.                if ( $I_L874_1792 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
  874.             enddo
  874.          endif
  874.       endif
  874.       if ( ncols > 0 ) then
  874.          $I_L874_1275 = 0
  874. !dir$ ivdep
  874.          do
  874.             if ( ierr(1 + $I_L874_1275) == 0 ) then
  874.                $z_WR0_R2 = max( 0.0, z1(1 + $I_L874_1275) ) + tv(1 + $I_L874_1275, 1) * ( log( p(1 + $I_L874_1275, 1) ) + -log( psur(1 + $I_L874_1275) ) ) * -29.255861365953105
  874.                z(1 + $I_L874_1275, 1) = $z_WR0_R2
  874.                $he_WR0_R3 = 9.8100000000000005 * $z_WR0_R2 + 1004.0 * t(1 + $I_L874_1275, 1) + 2500000.0 * q(1 + $I_L874_1275, 1)
  874.                $hes_WR0_R4 = 9.8100000000000005 * $z_WR0_R2 + 1004.0 * t(1 + $I_L874_1275, 1) + 2500000.0 * qes(1 + $I_L874_1275, 1)
  874.                hes(1 + $I_L874_1275, 1) = $hes_WR0_R4
  874.                $he_WR0_R3 = min( $he_WR0_R3, $hes_WR0_R4 )
  874.                he(1 + $I_L874_1275, 1) = $he_WR0_R3
  874.             endif
  874.             $I_L874_1275 = 1 + $I_L874_1275
  874.             if ( $I_L874_1275 >= ncols ) exit
  874.          enddo
  874.       endif
  874.       if ( -2 + kmax >= 0 ) then
  874.          if ( ncols > 0 ) then
  874.             $I_L874_1794 = 0
  874.             do
  874.                $I_L874_1757 = 0
  874. !dir$ blocking_size( 0, 0 )
  874.                do
  874.                   $I_L874_1277 = 0
  874. !dir$ ivdep
  874. !dir$ blocking_size( 256, 256 )
  874.                   do
  874.                      if ( ierr($I_L874_1277 + 256 * $I_L874_1794 + 1) == 0 ) then
  874.                         $z_WR0_R5 = z($I_L874_1277 + 256 * $I_L874_1794 + 1, 1 + $I_L874_1757) + ( 5.0e-1 * tv($I_L874_1277 + 256 * $I_L874_1794 + 1, 2 + $I_L874_1757) + 5.0e-1 * tv($I_L874_1277 + 256 * $I_L874_1794 + 1, 1 + $I_L874_1757) ) * ( log( p($I_L874_1277 + 256 * $I_L874_1794 + 1, 2 + $I_L874_1757) ) + -log( p($I_L874_1277 + 256 * $I_L874_1794 + 1, 1 + $I_L874_1757) ) ) * -29.255861365953105
  874.                         z($I_L874_1277 + 256 * $I_L874_1794 + 1, 2 + $I_L874_1757) = $z_WR0_R5
  874.                         $he_WR0_R6 = 9.8100000000000005 * $z_WR0_R5 + 1004.0 * t($I_L874_1277 + 256 * $I_L874_1794 + 1, 2 + $I_L874_1757) + 2500000.0 * q($I_L874_1277 + 256 * $I_L874_1794 + 1, 2 + $I_L874_1757)
  874.                         $hes_WR0_R7 = 9.8100000000000005 * $z_WR0_R5 + 1004.0 * t($I_L874_1277 + 256 * $I_L874_1794 + 1, 2 + $I_L874_1757) + 2500000.0 * qes($I_L874_1277 + 256 * $I_L874_1794 + 1, 2 + $I_L874_1757)
  874.                         hes($I_L874_1277 + 256 * $I_L874_1794 + 1, 2 + $I_L874_1757) = $hes_WR0_R7
  874.                         $he_WR0_R6 = min( $he_WR0_R6, $hes_WR0_R7 )
  874.                         he($I_L874_1277 + 256 * $I_L874_1794 + 1, 2 + $I_L874_1757) = $he_WR0_R6
  874.                      endif
  874.                      $I_L874_1277 = 1 + $I_L874_1277
  874.                      if ( $I_L874_1277 >= min( ncols, 256 + 256 * $I_L874_1794 ) + -256 * $I_L874_1794 ) exit
  874.                   enddo
  874.                   $I_L874_1757 = 1 + $I_L874_1757
  874.                   if ( $I_L874_1757 >= -1 + kmax ) exit
  874.                enddo
  874.                $I_L874_1794 = 1 + $I_L874_1794
  874.                if ( $I_L874_1794 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
  874.             enddo
  874.          endif
  874.       endif
  874.       _free( t$683 )
  890.       t$25 = ncols
  890.       t$26 = kmax
  890.       t$679 = max( 0, ncols )
  890.       t$680 = ncols
  890.       t$681 = max( 0, kmax )
  890.       t$682 = ( ncols * kmax )
  890.       t$685 = ncols * kmax * 8
  890.       t$683 = int( _alloc( ncols * kmax * 8 ), 8 )
  890.       t$684 = t$683
  890.       if ( kmax > 0 ) then
  890.          $SC_be_I2 = be(1)
  890.          $SC_ae_I3 = ae(1)
  890.          $SC_be_I0 = be(2)
  890.          $SC_ae_I1 = ae(2)
  890.          if ( ncols > 0 ) then
  890.             $I_L890_1796 = 0
  890.             do
  890.                $I_L890_1759 = 0
  890. !dir$ ivdep
  890. !dir$ blocking_size( 0, 0 )
  890.                do
  890.                   $I_L890_1280 = 0
  890. !dir$ unroll 2
  890. !dir$ blocking_size( 256, 256 )
  890.                   do
  890.                      if ( ierr($I_L890_1280 + 256 * $I_L890_1796 + 1) == 0 ) then
  890.                         if ( tn($I_L890_1280 + 256 * $I_L890_1796 + 1, 1 + $I_L890_1759) <= 273.14999999999998 ) then
  890.                            $es5_S19 = _expn( $SC_ae_I1 + -( $SC_be_I0 * 1.0/tn($I_L890_1280 + 256 * $I_L890_1796 + 1, 1 + $I_L890_1759) ) )
  890.                         else
  890.                            $es5_S19 = _expn( $SC_ae_I3 + -( $SC_be_I2 * 1.0/tn($I_L890_1280 + 256 * $I_L890_1796 + 1, 1 + $I_L890_1759) ) )
  890.                         endif
  890.                         $qeso_WR0_R8 = ( 1.0/( 100.0 * po($I_L890_1280 + 256 * $I_L890_1796 + 1, 1 + $I_L890_1759) + -$es5_S19 ) * $es5_S19 * 6.22e-1 )
  890.                         $qeso_WR0_R8 = max( 1.0e-8, $qeso_WR0_R8 )
  890.                         qeso($I_L890_1280 + 256 * $I_L890_1796 + 1, 1 + $I_L890_1759) = $qeso_WR0_R8
  890.                         $qo_WR0_R9 = min( $qeso_WR0_R8, qo($I_L890_1280 + 256 * $I_L890_1796 + 1, 1 + $I_L890_1759) )
  890.                         qo($I_L890_1280 + 256 * $I_L890_1796 + 1, 1 + $I_L890_1759) = $qo_WR0_R9
  890.                         tv($I_L890_1280 + 256 * $I_L890_1796 + 1, 1 + $I_L890_1759) = tn($I_L890_1280 + 256 * $I_L890_1796 + 1, 1 + $I_L890_1759) + tn($I_L890_1280 + 256 * $I_L890_1796 + 1, 1 + $I_L890_1759) * $qo_WR0_R9 * 6.0799999999999998e-1
  890.                      endif
  890.                      $I_L890_1280 = 1 + $I_L890_1280
  890.                      if ( $I_L890_1280 >= min( ncols, 256 + 256 * $I_L890_1796 ) + -256 * $I_L890_1796 ) exit
  890.                   enddo
  890.                   $I_L890_1759 = 1 + $I_L890_1759
  890.                   if ( $I_L890_1759 >= kmax ) exit
  890.                enddo
  890.                $I_L890_1796 = 1 + $I_L890_1796
  890.                if ( $I_L890_1796 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
  890.             enddo
  890.          endif
  890.       endif
  890.       if ( ncols > 0 ) then
  890.          $I_L890_1283 = 0
  890. !dir$ ivdep
  890.          do
  890.             if ( ierr(1 + $I_L890_1283) == 0 ) then
  890.                $zo_WR0_R10 = max( 0.0, z1(1 + $I_L890_1283) ) + tv(1 + $I_L890_1283, 1) * ( log( po(1 + $I_L890_1283, 1) ) + -log( psur(1 + $I_L890_1283) ) ) * -29.255861365953105
  890.                zo(1 + $I_L890_1283, 1) = $zo_WR0_R10
  890.                $heo_WR0_R11 = 9.8100000000000005 * $zo_WR0_R10 + 1004.0 * tn(1 + $I_L890_1283, 1) + 2500000.0 * qo(1 + $I_L890_1283, 1)
  890.                $heso_WR0_R12 = 9.8100000000000005 * $zo_WR0_R10 + 1004.0 * tn(1 + $I_L890_1283, 1) + 2500000.0 * qeso(1 + $I_L890_1283, 1)
  890.                heso(1 + $I_L890_1283, 1) = $heso_WR0_R12
  890.                $heo_WR0_R11 = min( $heo_WR0_R11, $heso_WR0_R12 )
  890.                heo(1 + $I_L890_1283, 1) = $heo_WR0_R11
  890.             endif
  890.             $I_L890_1283 = 1 + $I_L890_1283
  890.             if ( $I_L890_1283 >= ncols ) exit
  890.          enddo
  890.       endif
  890.       if ( -2 + kmax >= 0 ) then
  890.          if ( ncols > 0 ) then
  890.             $I_L890_1798 = 0
  890.             do
  890.                $I_L890_1761 = 0
  890. !dir$ blocking_size( 0, 0 )
  890.                do
  890.                   $I_L890_1285 = 0
  890. !dir$ ivdep
  890. !dir$ blocking_size( 256, 256 )
  890.                   do
  890.                      if ( ierr($I_L890_1285 + 256 * $I_L890_1798 + 1) == 0 ) then
  890.                         $zo_WR0_R13 = zo($I_L890_1285 + 256 * $I_L890_1798 + 1, 1 + $I_L890_1761) + ( 5.0e-1 * tv($I_L890_1285 + 256 * $I_L890_1798 + 1, 2 + $I_L890_1761) + 5.0e-1 * tv($I_L890_1285 + 256 * $I_L890_1798 + 1, 1 + $I_L890_1761) ) * ( log( po($I_L890_1285 + 256 * $I_L890_1798 + 1, 2 + $I_L890_1761) ) + -log( po($I_L890_1285 + 256 * $I_L890_1798 + 1, 1 + $I_L890_1761) ) ) * -29.255861365953105
  890.                         zo($I_L890_1285 + 256 * $I_L890_1798 + 1, 2 + $I_L890_1761) = $zo_WR0_R13
  890.                         $heo_WR0_R14 = 9.8100000000000005 * $zo_WR0_R13 + 1004.0 * tn($I_L890_1285 + 256 * $I_L890_1798 + 1, 2 + $I_L890_1761) + 2500000.0 * qo($I_L890_1285 + 256 * $I_L890_1798 + 1, 2 + $I_L890_1761)
  890.                         $heso_WR0_R15 = 9.8100000000000005 * $zo_WR0_R13 + 1004.0 * tn($I_L890_1285 + 256 * $I_L890_1798 + 1, 2 + $I_L890_1761) + 2500000.0 * qeso($I_L890_1285 + 256 * $I_L890_1798 + 1, 2 + $I_L890_1761)
  890.                         heso($I_L890_1285 + 256 * $I_L890_1798 + 1, 2 + $I_L890_1761) = $heso_WR0_R15
  890.                         $heo_WR0_R14 = min( $heo_WR0_R14, $heso_WR0_R15 )
  890.                         heo($I_L890_1285 + 256 * $I_L890_1798 + 1, 2 + $I_L890_1761) = $heo_WR0_R14
  890.                      endif
  890.                      $I_L890_1285 = 1 + $I_L890_1285
  890.                      if ( $I_L890_1285 >= min( ncols, 256 + 256 * $I_L890_1798 ) + -256 * $I_L890_1798 ) exit
  890.                   enddo
  890.                   $I_L890_1761 = 1 + $I_L890_1761
  890.                   if ( $I_L890_1761 >= -1 + kmax ) exit
  890.                enddo
  890.                $I_L890_1798 = 1 + $I_L890_1798
  890.                if ( $I_L890_1798 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
  890.             enddo
  890.          endif
  890.       endif
  890.       _free( t$683 )
  908.       call cup_env_clev( t(1, 1), qes(1, 1), q(1, 1), he(1, 1), hes(1, 1), z(1, 1), p(1, 1), qes_cup(1, 1), q_cup(1, 1), he_cup(1, 1), hes_cup(1, 1), z_cup(1, 1), p_cup(1, 1), gamma_cup(1, 1), t_cup(1, 1), psur(1), ncols, kmax, istart, iend, ierr(1), z1(1) )
  931.       call cup_env_clev( tn(1, 1), qeso(1, 1), qo(1, 1), heo(1, 1), heso(1, 1), zo(1, 1), po(1, 1), qeso_cup(1, 1), qo_cup(1, 1), heo_cup(1, 1), heso_cup(1, 1), zo_cup(1, 1), po_cup(1, 1), gammao_cup(1, 1), tn_cup(1, 1), psur(1), ncols, kmax, istart, iend, ierr(1), z1(1) )
  956.       $F_A171 = ncols
  956.       if ( ncols > 0 ) then
  956.          $I_L956_1571 = 0
  956. !dir$ ivdep
  956.          do
  956.             kbmax(1 + $I_L956_1571) = 0
  956.             $I_L956_1571 = 1 + $I_L956_1571
  956.             if ( $I_L956_1571 >= $F_A171 ) exit
  956.          enddo
  956.       endif
  957.       if ( kmax > 0 ) then
  958.          if ( iend + -istart >= 0 ) then
  957.             $I_L957_1800 = 0
  957.             do
  958.                $I_L958_1763 = 0
  958. !dir$ ivdep
  958. !dir$ blocking_size( 0, 0 )
  958.                do
  957.                   $SCA_ierr_I4 = ierr(istart + $I_L958_1763)
  957.                   $I_L957_1288 = 0
  957. !dir$ unroll 4
  957. !dir$ blocking_size( 256, 256 )
  957.                   do
  959.                      if ( $SCA_ierr_I4 == 0 ) then
  959.                         if ( zo_cup(istart + $I_L958_1763, $I_L957_1288 + 256 * $I_L957_1800 + 1) > zkbmax + z1(istart + $I_L958_1763) ) then
  959.                            if ( kbmax(istart + $I_L958_1763) == 0 ) then
  960.                               kbmax(istart + $I_L958_1763) = ( $I_L957_1288 + 256 * $I_L957_1800 + 1 )
  960.                            endif
  960.                         endif
  960.                      endif
  957.                      $I_L957_1288 = 1 + $I_L957_1288
  961.                      if ( $I_L957_1288 >= min( kmax, 256 + 256 * $I_L957_1800 ) + -256 * $I_L957_1800 ) exit
  961.                   enddo
  962.                   $I_L958_1763 = 1 + $I_L958_1763
  962.                   if ( $I_L958_1763 >= iend + -istart + 1 ) exit
  962.                enddo
  957.                $I_L957_1800 = 1 + $I_L957_1800
  962.                if ( $I_L957_1800 >= 1 + max( 0, -1 + _rsh( 255 + kmax, 8 ) ) ) exit
  962.             enddo
  962.          endif
  962.       endif
  967.       $F_A172 = ncols
  967.       if ( ncols > 0 ) then
  967.          $I_L967_1573 = 0
  967. !dir$ ivdep
  967.          do
  967.             kdet1(1 + $I_L967_1573) = 0
  967.             $I_L967_1573 = 1 + $I_L967_1573
  967.             if ( $I_L967_1573 >= $F_A172 ) exit
  967.          enddo
  967.       endif
  968.       if ( kmax > 0 ) then
  969.          if ( iend + -istart >= 0 ) then
  968.             $I_L968_1802 = 0
  968.             do
  969.                $I_L969_1765 = 0
  969. !dir$ ivdep
  969. !dir$ blocking_size( 0, 0 )
  969.                do
  968.                   $SCA_ierr_I5 = ierr(istart + $I_L969_1765)
  968.                   $I_L968_1291 = 0
  968. !dir$ unroll 4
  968. !dir$ blocking_size( 256, 256 )
  968.                   do
  970.                      if ( $SCA_ierr_I5 == 0 ) then
  970.                         if ( zo_cup(istart + $I_L969_1765, $I_L968_1291 + 256 * $I_L968_1802 + 1) > z_detr + z1(istart + $I_L969_1765) ) then
  970.                            if ( kdet1(istart + $I_L969_1765) == 0 ) then
  971.                               kdet(istart + $I_L969_1765) = ( $I_L968_1291 + 256 * $I_L968_1802 + 1 )
  972.                               kdet1(istart + $I_L969_1765) = ( $I_L968_1291 + 256 * $I_L968_1802 + 1 )
  972.                            endif
  972.                         endif
  972.                      endif
  968.                      $I_L968_1291 = 1 + $I_L968_1291
  973.                      if ( $I_L968_1291 >= min( kmax, 256 + 256 * $I_L968_1802 ) + -256 * $I_L968_1802 ) exit
  973.                   enddo
  974.                   $I_L969_1765 = 1 + $I_L969_1765
  974.                   if ( $I_L969_1765 >= iend + -istart + 1 ) exit
  974.                enddo
  968.                $I_L968_1802 = 1 + $I_L968_1802
  974.                if ( $I_L968_1802 >= 1 + max( 0, -1 + _rsh( 255 + kmax, 8 ) ) ) exit
  974.             enddo
  974.          endif
  974.       endif
 1001.       t$29 = ncols
 1001.       t$30 = kmax
 1001.       t$690 = max( 0, ncols )
 1001.       t$691 = ncols
 1001.       t$692 = max( 0, kmax )
 1001.       t$693 = ( ncols * kmax )
 1001.       t$696 = 8 * ncols
 1001.       t$694 = int( _alloc( 8 * ncols ), 8 )
 1001.       t$695 = t$694
 1001.       if ( iend + -istart >= 0 ) then
 1001.          $I_L1001_1294 = 0
 1001. !dir$ ivdep
 1001.          do
 1001.             k22(istart + $I_L1001_1294) = 3
 1001.             if ( ierr(istart + $I_L1001_1294) == 0 ) then
 1001.                x(istart + $I_L1001_1294) = heo_cup(istart + $I_L1001_1294, 3)
 1001.             endif
 1001.             $I_L1001_1294 = 1 + $I_L1001_1294
 1001.             if ( $I_L1001_1294 >= iend + -istart + 1 ) exit
 1001.          enddo
 1001.       endif
 1001.       if ( kmax > 0 ) then
 1001.          if ( iend + -istart >= 0 ) then
 1001.             if ( 2 < kmax ) then
 1001.                $I_L1001_1751 = 0
 1001. !dir$ blocking_size( 0, 0 )
 1001.                do
 1001.                   $I_L1001_1599 = 0
 1001. !dir$ ivdep
 1001. !dir$ blocking_size( 0, 0 )
 1001.                   do
 1001.                      if ( ierr(istart + $I_L1001_1599) == 0 ) then
 1001.                         if ( ( $I_L1001_1751 + min( 2, kmax ) + 1 ) <= kbmax(istart + $I_L1001_1599) ) then
 1001.                            if ( heo_cup(istart + $I_L1001_1599, $I_L1001_1751 + min( 2, kmax ) + 1) >= x(istart + $I_L1001_1599) ) then
 1001.                               x(istart + $I_L1001_1599) = heo_cup(istart + $I_L1001_1599, $I_L1001_1751 + min( 2, kmax ) + 1)
 1001.                               k22(istart + $I_L1001_1599) = ( $I_L1001_1751 + min( 2, kmax ) + 1 )
 1001.                            endif
 1001.                         endif
 1001.                      endif
 1001.                      $I_L1001_1599 = 1 + $I_L1001_1599
 1001.                      if ( $I_L1001_1599 >= iend + -istart + 1 ) exit
 1001.                   enddo
 1001.                   $I_L1001_1751 = 1 + $I_L1001_1751
 1001.                   if ( $I_L1001_1751 >= kmax + -min( 2, kmax ) ) exit
 1001.                enddo
 1001.             endif
 1001.          endif
 1001.       endif
 1001.       _free( t$694 )
 1011.       if ( iend + -istart >= 0 ) then
 1011.          $I_L1011_1296 = 0
 1011. !dir$ ivdep
 1011.          do
 1012.             if ( ierr(istart + $I_L1011_1296) == 0 ) then
 1014.                if ( k22(istart + $I_L1011_1296) >= kbmax(istart + $I_L1011_1296) ) then
 1014.                   ierr(istart + $I_L1011_1296) = 2
 1014.                endif
 1014.             endif
 1016.             $I_L1011_1296 = 1 + $I_L1011_1296
 1015.             if ( $I_L1011_1296 >= iend + -istart + 1 ) exit
 1015.          enddo
 1015.       endif
 1026.       t$33 = ncols
 1026.       t$707 = max( 0, ncols )
 1026.       t$34 = kmax
 1026.       t$708 = ncols
 1026.       t$709 = max( 0, kmax )
 1026.       t$710 = ( ncols * kmax )
 1026.       t$35 = ( iend + -istart + 1 )
 1026.       t$711 = max( 0, ( iend + -istart + 1 ) )
 1026.       t$714 = 4 * max( 0, ( iend + -istart + 1 ) )
 1026.       t$716 = 8 * max( 0, ( iend + -istart + 1 ) )
 1026.       t$712 = int( _alloc( 8 * max( 0, ( iend + -istart + 1 ) ) ), 8 )
 1026.       t$713 = t$712
 1026.       t$715 = t$712 + 4 * max( 0, ( iend + -istart + 1 ) )
 1026.       $F_A173 = ncols
 1026.       if ( ncols > 0 ) then
 1026.          $I_L1026_1575 = 0
 1026. !dir$ ivdep
 1026.          do
 1026.             kbcon(1 + $I_L1026_1575) = 1
 1026.             $I_L1026_1575 = 1 + $I_L1026_1575
 1026.             if ( $I_L1026_1575 >= $F_A173 ) exit
 1026.          enddo
 1026.       endif
 1026.       $nleft_S32 = 0
 1026.       if ( iend + -istart >= 0 ) then
 1026.          $I_L1026_1298 = 0
 1026. !dir$ ivdep
 1026.          do
 1026.             if ( ierr(istart + $I_L1026_1298) == 0 ) then
 1026.                kbcon(istart + $I_L1026_1298) = k22(istart + $I_L1026_1298)
 1026.                $nleft_S32 = 1 + $nleft_S32
 1026.                left($nleft_S32) = ( istart + $I_L1026_1298 )
 1026.             else
 1026.                kbcon(istart + $I_L1026_1298) = 1
 1026.             endif
 1026.             $I_L1026_1298 = 1 + $I_L1026_1298
 1026.             if ( $I_L1026_1298 >= iend + -istart + 1 ) exit
 1026.          enddo
 1026.       endif
 1026.       do
 1026.          if ( $nleft_S32 == 0 ) then
 1026.             _free( t$712 )
 1041.             if ( iend + -istart >= 0 ) then
 1041.                $I_L1041_1304 = 0
 1041. !dir$ ivdep
 1041.                do
 1042.                   if ( ierr(istart + $I_L1041_1304) == 0 ) then
 1043.                      hkb(istart + $I_L1041_1304) = hkbo(istart + $I_L1041_1304)
 1043.                   endif
 1045.                   $I_L1041_1304 = 1 + $I_L1041_1304
 1044.                   if ( $I_L1041_1304 >= iend + -istart + 1 ) exit
 1044.                enddo
 1044.             endif
 1044.             goto 10
 1044.          endif
 1026.          $nnewleft_S35 = 0
 1026.          $ntocontinue_S36 = 0
 1026.          if ( $nleft_S32 > 0 ) then
 1026.             $I_L1026_1300 = 0
 1026. !dir$ unroll 4
 1026.             do
 1026.                $i_S34 = left(1 + $I_L1026_1300)
 1026.                if ( heo_cup($i_S34, k22($i_S34)) < heso_cup($i_S34, kbcon($i_S34)) ) then
 1026.                   kbcon($i_S34) = 1 + kbcon($i_S34)
 1026.                   if ( kbcon($i_S34) > 2 + kbmax($i_S34) ) then
 1026.                      ierr($i_S34) = 3
 1026.                   else
 1026.                      $nnewleft_S35 = 1 + $nnewleft_S35
 1026.                      left($nnewleft_S35) = $i_S34
 1026.                   endif
 1026.                else
 1026.                   $ntocontinue_S36 = 1 + $ntocontinue_S36
 1026.                   tocontinue($ntocontinue_S36) = $i_S34
 1026.                endif
 1026.                $I_L1026_1300 = 1 + $I_L1026_1300
 1026.                if ( $I_L1026_1300 >= $nleft_S32 ) exit
 1026.             enddo
 1026.          endif
 1026.          if ( $ntocontinue_S36 > 0 ) then
 1026.             $I_L1026_1302 = 0
 1026. !dir$ unroll 2
 1026.             do
 1026.                $i_S38 = tocontinue(1 + $I_L1026_1302)
 1026.                if ( kbcon($i_S38) + -k22($i_S38) /= 1 ) then
 1026.                   $pbcdif_S40 = -po_cup($i_S38, kbcon($i_S38)) + po_cup($i_S38, k22($i_S38))
 1026.                   $plus_S39 = max( 25.0, cap_max($i_S38) )
 1026.                   if ( $pbcdif_S40 > $plus_S39 ) then
 1026.                      k22($i_S38) = 1 + k22($i_S38)
 1026.                      kbcon($i_S38) = k22($i_S38)
 1026.                      $nnewleft_S35 = 1 + $nnewleft_S35
 1026.                      left($nnewleft_S35) = $i_S38
 1026.                   endif
 1026.                endif
 1026.                $I_L1026_1302 = 1 + $I_L1026_1302
 1026.                if ( $I_L1026_1302 >= $ntocontinue_S36 ) exit
 1026.             enddo
 1026.          endif
 1026.       enddo
 1026.    10 continue
 1049.       call cup_minimi( heso_cup(1, 1), ncols, kmax, kbcon(1), kstabm(1), kstabi(1), istart, iend, ierr(1) )
 1060.       if ( kmax > 0 ) then
 1061.          if ( iend + -istart >= 0 ) then
 1060.             $I_L1060_1605 = 0
 1060. !dir$ blocking_size( 0, 0 )
 1060.             do
 1061.                $I_L1061_1306 = 0
 1061. !dir$ ivdep
 1061. !dir$ blocking_size( 0, 0 )
 1061.                do
 1062.                   if ( ierr(istart + $I_L1061_1306) == 0 ) then
 1062.                      if ( -1 + kstabm(istart + $I_L1061_1306) >= kstabi(istart + $I_L1061_1306) ) then
 1062.                         if ( ( 1 + $I_L1060_1605 ) >= kstabi(istart + $I_L1061_1306) ) then
 1062.                            if ( ( 1 + $I_L1060_1605 ) <= -1 + kstabm(istart + $I_L1061_1306) ) then
 1064.                               $cd_WR0_R16 = cd(istart + $I_L1061_1306, $I_L1060_1605) + 1.5 * entr_rate
 1064.                               cd(istart + $I_L1061_1306, 1 + $I_L1060_1605) = $cd_WR0_R16
 1071.                               $cd_WR0_R16 = min( $cd_WR0_R16, 10.0 * entr_rate )
 1071.                               cd(istart + $I_L1061_1306, 1 + $I_L1060_1605) = $cd_WR0_R16
 1071.                            endif
 1071.                         endif
 1071.                      endif
 1071.                   endif
 1073.                   $I_L1061_1306 = 1 + $I_L1061_1306
 1072.                   if ( $I_L1061_1306 >= iend + -istart + 1 ) exit
 1072.                enddo
 1074.                $I_L1060_1605 = 1 + $I_L1060_1605
 1073.                if ( $I_L1060_1605 >= kmax ) exit
 1073.             enddo
 1073.          endif
 1073.       endif
 1078.       call cup_up_he( k22(1), hkb(1), z_cup(1, 1), cd(1, 1), mentr_rate, he_cup(1, 1), hc(1, 1), ncols, kmax, kbcon(1), ierr(1), istart, iend, dby(1, 1), he(1, 1), hes_cup(1, 1) )
 1096.       call cup_up_he( k22(1), hkbo(1), zo_cup(1, 1), cd(1, 1), mentr_rate, heo_cup(1, 1), hco(1, 1), ncols, kmax, kbcon(1), ierr(1), istart, iend, dbyo(1, 1), heo(1, 1), heso_cup(1, 1) )
 1116.       t$38 = ncols
 1116.       t$39 = kmax
 1116.       t$721 = max( 0, ncols )
 1116.       t$722 = ncols
 1116.       t$723 = max( 0, kmax )
 1116.       t$724 = ( ncols * kmax )
 1116.       $F_A174 = ( iend + -istart + 1 )
 1116.       if ( iend + -istart >= 0 ) then
 1116.          $I_L1116_1577 = 0
 1116. !dir$ ivdep
 1116.          do
 1116.             ktop(istart + $I_L1116_1577) = 1
 1116.             $I_L1116_1577 = 1 + $I_L1116_1577
 1116.             if ( $I_L1116_1577 >= $F_A174 ) exit
 1116.          enddo
 1116.       endif
 1116.       if ( -2 + kmax > 0 ) then
 1116.          if ( iend + -istart >= 0 ) then
 1116.             $I_L1116_1804 = 0
 1116.             do
 1116.                $I_L1116_1767 = 0
 1116. !dir$ ivdep
 1116. !dir$ blocking_size( 0, 0 )
 1116.                do
 1116.                   $SCA_ierr_I6 = ierr(istart + $I_L1116_1767)
 1116.                   $I_L1116_1308 = 0
 1116. !dir$ unroll 4
 1116. !dir$ blocking_size( 256, 256 )
 1116.                   do
 1116.                      if ( $SCA_ierr_I6 == 0 ) then
 1116.                         if ( ( $I_L1116_1308 + 256 * $I_L1116_1804 + 1 ) >= 1 + kbcon(istart + $I_L1116_1767) ) then
 1116.                            if ( dbyo(istart + $I_L1116_1767, $I_L1116_1308 + 256 * $I_L1116_1804 + 1) <= 0.0 ) then
 1116.                               if ( ktop(istart + $I_L1116_1767) == 1 ) then
 1116.                                  ktop(istart + $I_L1116_1767) = ( $I_L1116_1308 + 256 * $I_L1116_1804 )
 1116.                               endif
 1116.                            endif
 1116.                         endif
 1116.                      endif
 1116.                      $I_L1116_1308 = 1 + $I_L1116_1308
 1116.                      if ( $I_L1116_1308 >= min( -2 + kmax, 256 + 256 * $I_L1116_1804 ) + -256 * $I_L1116_1804 ) exit
 1116.                   enddo
 1116.                   $I_L1116_1767 = 1 + $I_L1116_1767
 1116.                   if ( $I_L1116_1767 >= iend + -istart + 1 ) exit
 1116.                enddo
 1116.                $I_L1116_1804 = 1 + $I_L1116_1804
 1116.                if ( $I_L1116_1804 >= 1 + max( 0, -1 + _rsh( 253 + kmax, 8 ) ) ) exit
 1116.             enddo
 1116.          endif
 1116.       endif
 1116.       if ( iend + -istart >= 0 ) then
 1116.          $I_L1116_1311 = 0
 1116. !dir$ ivdep
 1116.          do
 1116.             if ( ierr(istart + $I_L1116_1311) == 0 ) then
 1116.                if ( ktop(istart + $I_L1116_1311) == 1 ) then
 1116.                   ierr(istart + $I_L1116_1311) = 5
 1116.                endif
 1116.             endif
 1116.             $I_L1116_1311 = 1 + $I_L1116_1311
 1116.             if ( $I_L1116_1311 >= iend + -istart + 1 ) exit
 1116.          enddo
 1116.       endif
 1116.       if ( kmax > 0 ) then
 1116.          if ( iend + -istart >= 0 ) then
 1116.             $I_L1116_1806 = 0
 1116.             do
 1116.                $I_L1116_1769 = 0
 1116. !dir$ ivdep
 1116. !dir$ blocking_size( 0, 0 )
 1116.                do
 1116.                   $I_L1116_1313 = 0
 1116. !dir$ blocking_size( 256, 256 )
 1116.                   do
 1116.                      if ( ierr(istart + $I_L1116_1313 + 256 * $I_L1116_1806) == 0 ) then
 1116.                         if ( ( 1 + $I_L1116_1769 ) >= 1 + ktop(istart + $I_L1116_1313 + 256 * $I_L1116_1806) ) then
 1116.                            dbyo(istart + $I_L1116_1313 + 256 * $I_L1116_1806, 1 + $I_L1116_1769) = 0.0
 1116.                         endif
 1116.                      endif
 1116.                      $I_L1116_1313 = 1 + $I_L1116_1313
 1116.                      if ( $I_L1116_1313 >= min( iend + -istart + 1, 256 + 256 * $I_L1116_1806 ) + -256 * $I_L1116_1806 ) exit
 1116.                   enddo
 1116.                   $I_L1116_1769 = 1 + $I_L1116_1769
 1116.                   if ( $I_L1116_1769 >= kmax ) exit
 1116.                enddo
 1116.                $I_L1116_1806 = 1 + $I_L1116_1806
 1116.                if ( $I_L1116_1806 >= 1 + max( 0, -1 + _rsh( iend + -istart + 256, 8 ) ) ) exit
 1116.             enddo
 1116.          endif
 1116.       endif
 1127.       $F_A175 = ( iend + -istart + 1 )
 1127.       if ( iend + -istart >= 0 ) then
 1127.          $I_L1127_1579 = 0
 1127. !dir$ ivdep
 1127.          do
 1127.             kzdown(istart + $I_L1127_1579) = 0
 1127.             $I_L1127_1579 = 1 + $I_L1127_1579
 1127.             if ( $I_L1127_1579 >= $F_A175 ) exit
 1127.          enddo
 1127.       endif
 1128.       if ( kmax > 0 ) then
 1129.          if ( iend + -istart >= 0 ) then
 1129.             $I_L1129_1607 = 0
 1129. !dir$ ivdep
 1129. !dir$ blocking_size( 0, 0 )
 1129.             do
 1128.                $SCA_ierr_I7 = ierr(istart + $I_L1129_1607)
 1128.                $I_L1128_1316 = 0
 1128. !dir$ unroll 4
 1128. !dir$ blocking_size( 0, 0 )
 1128.                do
 1130.                   if ( $SCA_ierr_I7 == 0 ) then
 1131.                      $zktop_S50 = 5.9999999999999998e-1 * ( zo_cup(istart + $I_L1129_1607, ktop(istart + $I_L1129_1607)) + -z1(istart + $I_L1129_1607) )
 1132.                      $zktop_S51 = min( zcutdown + z1(istart + $I_L1129_1607), $zktop_S50 + z1(istart + $I_L1129_1607) )
 1133.                      if ( zo_cup(istart + $I_L1129_1607, 1 + $I_L1128_1316) > $zktop_S51 ) then
 1133.                         if ( kzdown(istart + $I_L1129_1607) == 0 ) then
 1134.                            kzdown(istart + $I_L1129_1607) = ( 1 + $I_L1128_1316 )
 1134.                         endif
 1134.                      endif
 1134.                   endif
 1138.                   $I_L1128_1316 = 1 + $I_L1128_1316
 1136.                   if ( $I_L1128_1316 >= kmax ) exit
 1136.                enddo
 1137.                $I_L1129_1607 = 1 + $I_L1129_1607
 1137.                if ( $I_L1129_1607 >= iend + -istart + 1 ) exit
 1137.             enddo
 1137.          endif
 1137.       endif
 1143.       call cup_minimi( heso_cup(1, 1), ncols, kmax, k22(1), kzdown(1), jmin(1), istart, iend, ierr(1) )
 1157.       $F_A176 = ( iend + -istart + 1 )
 1157.       if ( iend + -istart >= 0 ) then
 1157.          $I_L1157_1581 = 0
 1157. !dir$ ivdep
 1157.          do
 1157.             dh2(istart + $I_L1157_1581) = 0.0
 1157.             $I_L1157_1581 = 1 + $I_L1157_1581
 1157.             if ( $I_L1157_1581 >= $F_A176 ) exit
 1157.          enddo
 1157.       endif
 1158.       $nleft_S54 = 0
 1159.       if ( iend + -istart >= 0 ) then
 1159.          $I_L1159_1318 = 0
 1159. !dir$ ivdep
 1159.          do
 1160.             if ( ierr(istart + $I_L1159_1318) == 0 ) then
 1161.                $nleft_S54 = 1 + $nleft_S54
 1162.                left($nleft_S54) = ( istart + $I_L1159_1318 )
 1163.                kdet(istart + $I_L1159_1318) = min( kdet(istart + $I_L1159_1318), -1 + jmin(istart + $I_L1159_1318) )
 1164.                if ( jmin(istart + $I_L1159_1318) >= -1 + ktop(istart + $I_L1159_1318) ) then
 1164.                   jmin(istart + $I_L1159_1318) = -2 + ktop(istart + $I_L1159_1318)
 1164.                endif
 1164.             endif
 1166.             $I_L1159_1318 = 1 + $I_L1159_1318
 1165.             if ( $I_L1159_1318 >= iend + -istart + 1 ) exit
 1165.          enddo
 1165.       endif
 1168.       if ( $nleft_S54 > 0 ) then
 1168.          $I_L1168_1808 = 0
 1168.          do
 1169.             $i_S56 = left(1 + $I_L1168_1808)
 1171.             $SC_jmin_I15 = jmin($i_S56)
 1170.             do
 1171.                $t_S57 = -1 + $SC_jmin_I15
 1171.                if ( -1 + $SC_jmin_I15 <= 0 ) then
 1175.                   jmin($i_S56) = $SC_jmin_I15
 1175.                   goto 20
 1175.                endif
 1172.                $SC_dh2_I16 = dh2($i_S56)
 1171.                $I_L1171_1320 = 0
 1171.                do
 1172.                   $SCF_P9 = ( zo_cup($i_S56, $t_S57 + -$I_L1171_1320 + 1) + -zo_cup($i_S56, $t_S57 + -$I_L1171_1320) ) * ( heso_cup($i_S56, $SC_jmin_I15) + -heso_cup($i_S56, $t_S57 + -$I_L1171_1320) )
 1172.                   $SC_dh2_I16 = $SC_dh2_I16 + $SCF_P9
 1174.                   if ( $SC_dh2_I16 > 0.0 ) then
 1175.                      $SC_jmin_I15 = -1 + $SC_jmin_I15
 1176.                      if ( $SC_jmin_I15 <= 3 ) then
 1181.                         if ( ierr($i_S56) /= 9 ) then
 1182.                            ierr($i_S56) = 9
 1182.                         endif
 1185.                         $I_L1171_1320 = 1 + $I_L1171_1320
 1184.                      else
 1184.                      endif
 1184.                   else
 1184.                   endif
 1184.                   if ( $I_L1171_1320 >= $t_S57 ) exit
 1184.                enddo
 1175.                jmin($i_S56) = $SC_jmin_I15
 1172.                dh2($i_S56) = $SC_dh2_I16
 1172.    20          continue
 1186.                $I_L1168_1808 = 1 + $I_L1168_1808
 1185.                if ( $I_L1168_1808 >= $nleft_S54 ) exit
 1185.             enddo
 1185.          endif
 1188.          if ( iend + -istart >= 0 ) then
 1188.             $I_L1188_1322 = 0
 1188. !dir$ ivdep
 1188.             do
 1189.                if ( ierr(istart + $I_L1188_1322) == 0 ) then
 1190.                   if ( jmin(istart + $I_L1188_1322) <= 3 ) then
 1190.                      if ( dh2(istart + $I_L1188_1322) <= 0.0 ) then
 1191.                         ierr(istart + $I_L1188_1322) = 4
 1191.                      endif
 1191.                   endif
 1191.                endif
 1200.                if ( ierr(istart + $I_L1188_1322) == 0 ) then
 1201.                   if ( -zo_cup(istart + $I_L1188_1322, kbcon(istart + $I_L1188_1322)) + zo_cup(istart + $I_L1188_1322, ktop(istart + $I_L1188_1322)) < depth_min ) then
 1202.                      ierr(istart + $I_L1188_1322) = 6
 1202.                   endif
 1202.                endif
 1194.                $I_L1188_1322 = 1 + $I_L1188_1322
 1193.                if ( $I_L1188_1322 >= iend + -istart + 1 ) exit
 1193.             enddo
 1193.          endif
 1209.          call cup_up_nms( zu(1, 1), z_cup(1, 1), mentr_rate, cd(1, 1), kbcon(1), ktop(1), ncols, kmax, istart, iend, ierr(1), k22(1) )
 1223.          call cup_up_nms( zuo(1, 1), zo_cup(1, 1), mentr_rate, cd(1, 1), kbcon(1), ktop(1), ncols, kmax, istart, iend, ierr(1), k22(1) )
 1240.          t$42 = ncols
 1240.          t$43 = kmax
 1240.          t$729 = max( 0, ncols )
 1240.          t$730 = ncols
 1240.          t$731 = max( 0, kmax )
 1240.          t$732 = ( ncols * kmax )
 1240.          if ( kmax > 0 ) then
 1240.             if ( iend + -istart >= 0 ) then
 1240.                $I_L1240_1609 = 0
 1240. !dir$ blocking_size( 0, 0 )
 1240.                do
 1240.                   $I_L1240_1324 = 0
 1240. !dir$ ivdep
 1240. !dir$ blocking_size( 0, 0 )
 1240.                   do
 1240.                      if ( ierr(istart + $I_L1240_1324) == 0 ) then
 1240.                         cdd(istart + $I_L1240_1324, 1 + $I_L1240_1609) = 0.0
 1255.                         zdo(istart + $I_L1240_1324, 1 + $I_L1240_1609) = 0.0
 1255.                      endif
 1240.                      $I_L1240_1324 = 1 + $I_L1240_1324
 1240.                      if ( $I_L1240_1324 >= iend + -istart + 1 ) exit
 1240.                   enddo
 1240.                   $I_L1240_1609 = 1 + $I_L1240_1609
 1240.                   if ( $I_L1240_1609 >= kmax ) exit
 1240.                enddo
 1240.             endif
 1240.          endif
 1240.          if ( iend + -istart >= 0 ) then
 1255.             $I_L1255_1328 = 0
 1255. !dir$ ivdep
 1255.             do
 1255.                if ( ierr(istart + $I_L1255_1328) == 0 ) then
 1255.                   zdo(istart + $I_L1255_1328, jmin(istart + $I_L1255_1328)) = 1.0
 1255.                endif
 1255.                $I_L1255_1328 = 1 + $I_L1255_1328
 1255.                if ( $I_L1255_1328 >= iend + -istart + 1 ) exit
 1255.             enddo
 1255.          endif
 1240.          if ( 1 + -kmax < 0 ) then
 1240.             if ( iend + -istart >= 0 ) then
 1240.                $I_L1240_1611 = 0
 1240.                do
 1240.                   $I_L1240_1326 = 0
 1240. !dir$ ivdep
 1240.                   do
 1240.                      if ( ierr(istart + $I_L1240_1326) == 0 ) then
 1240.                         if ( ( kmax + -$I_L1240_1611 + -1 ) <= -1 + jmin(istart + $I_L1240_1326) ) then
 1240.                            $dz_S69 = z_cup(istart + $I_L1240_1326, kmax + -$I_L1240_1611) + -z_cup(istart + $I_L1240_1326, kmax + -$I_L1240_1611 + -1)
 1240.                            if ( ( kmax + -$I_L1240_1611 + -1 ) <= kdet(istart + $I_L1240_1326) ) then
 1240.                               cdd(istart + $I_L1240_1326, kmax + -$I_L1240_1611 + -1) = mentrd_rate + ( ( 1.0 + -( ( 9.6999999999999997e-1 * ( z_cup(istart + $I_L1240_1326, kmax + -$I_L1240_1611 + -1) + -z1(istart + $I_L1240_1326) ) + 2.9999999999999999e-2 * ( z_cup(istart + $I_L1240_1326, kdet(istart + $I_L1240_1326)) + -z1(istart + $I_L1240_1326) ) ) * 1.0/( 9.6999999999999997e-1 * ( z_cup(istart + $I_L1240_1326, kmax + -$I_L1240_1611) + -z1(istart + $I_L1240_1326) ) + 2.9999999999999999e-2 * ( z_cup(istart + $I_L1240_1326, kdet(istart + $I_L1240_1326)) + -z1(istart + $I_L1240_1326) ) ) ) ) * 1.0/$dz_S69 )
 1240.                            endif
 1240.                         endif
 1240.                      endif
 1240.                      $I_L1240_1326 = 1 + $I_L1240_1326
 1240.                      if ( $I_L1240_1326 >= iend + -istart + 1 ) exit
 1240.                   enddo
 1255.                   $I_L1255_1330 = 0
 1255. !dir$ ivdep
 1255.                   do
 1255.                      if ( ierr(istart + $I_L1255_1330) == 0 ) then
 1255.                         if ( ( kmax + -$I_L1240_1611 + -1 ) <= -1 + jmin(istart + $I_L1255_1330) ) then
 1255.                            $dz_S72 = zo_cup(istart + $I_L1255_1330, kmax + -$I_L1240_1611) + -zo_cup(istart + $I_L1255_1330, kmax + -$I_L1240_1611 + -1)
 1255.                            zdo(istart + $I_L1255_1330, kmax + -$I_L1240_1611 + -1) = zdo(istart + $I_L1255_1330, kmax + -$I_L1240_1611) * ( 1.0 + ( mentrd_rate + -cdd(istart + $I_L1255_1330, kmax + -$I_L1240_1611 + -1) ) * $dz_S72 )
 1255.                         endif
 1255.                      endif
 1255.                      $I_L1255_1330 = 1 + $I_L1255_1330
 1255.                      if ( $I_L1255_1330 >= iend + -istart + 1 ) exit
 1255.                   enddo
 1240.                   $I_L1240_1611 = 1 + $I_L1240_1611
 1240.                   if ( $I_L1240_1611 >= -1 + kmax ) exit
 1240.                enddo
 1240.             endif
 1240.          endif
 1255.          t$42 = ncols
 1255.          t$43 = kmax
 1255.          t$729 = max( 0, ncols )
 1255.          t$730 = ncols
 1255.          t$731 = max( 0, kmax )
 1255.          t$732 = ( ncols * kmax )
 1272.          call cup_dd_he( hes_cup(1, 1), hcd(1, 1), z_cup(1, 1), cdd(1, 1), mentrd_rate, jmin(1), ierr(1), ncols, kmax, istart, iend, he(1, 1), dbyd(1, 1) )
 1288.          call cup_dd_he( heso_cup(1, 1), hcdo(1, 1), zo_cup(1, 1), cdd(1, 1), mentrd_rate, jmin(1), ierr(1), ncols, kmax, istart, iend, heo(1, 1), dbydo(1, 1) )
 1307.          t$46 = ncols
 1307.          t$47 = kmax
 1307.          t$737 = max( 0, ncols )
 1307.          t$738 = ncols
 1307.          t$739 = max( 0, kmax )
 1307.          t$740 = ( ncols * kmax )
 1307.          if ( iend + -istart >= 0 ) then
 1307.             $I_L1307_1332 = 0
 1307. !dir$ ivdep
 1307.             do
 1307.                if ( ierr(istart + $I_L1307_1332) == 0 ) then
 1307.                   bu(istart + $I_L1307_1332) = 0.0
 1307.                   $k_S75 = jmin(istart + $I_L1307_1332)
 1307.                   $dz_S77 = z_cup(istart + $I_L1307_1332, 1 + $k_S75) + -z_cup(istart + $I_L1307_1332, $k_S75)
 1307.                   $dh_S76 = hcd(istart + $I_L1307_1332, $k_S75) + -hes_cup(istart + $I_L1307_1332, $k_S75)
 1307.                   bu(istart + $I_L1307_1332) = $dz_S77 * $dh_S76
 1307.                endif
 1307.                $I_L1307_1332 = 1 + $I_L1307_1332
 1307.                if ( $I_L1307_1332 >= iend + -istart + 1 ) exit
 1307.             enddo
 1307.          endif
 1307.          if ( kmax > 0 ) then
 1332.             if ( iend + -istart >= 0 ) then
 1332.                $I_L1332_1613 = 0
 1332. !dir$ blocking_size( 0, 0 )
 1332.                do
 1332.                   $I_L1332_1339 = 0
 1332. !dir$ ivdep
 1332. !dir$ blocking_size( 0, 0 )
 1332.                   do
 1332.                      if ( ierr(istart + $I_L1332_1339) == 0 ) then
 1332.                         qcdo(istart + $I_L1332_1339, 1 + $I_L1332_1613) = 0.0
 1332.                         qrcdo(istart + $I_L1332_1339, 1 + $I_L1332_1613) = 0.0
 1332.                         pwdo(istart + $I_L1332_1339, 1 + $I_L1332_1613) = 0.0
 1332.                      endif
 1332.                      $I_L1332_1339 = 1 + $I_L1332_1339
 1332.                      if ( $I_L1332_1339 >= iend + -istart + 1 ) exit
 1332.                   enddo
 1332.                   $I_L1332_1613 = 1 + $I_L1332_1613
 1332.                   if ( $I_L1332_1613 >= kmax ) exit
 1332.                enddo
 1332.             endif
 1332.          endif
 1307.          if ( 1 + -kmax < 0 ) then
 1307.             if ( iend + -istart >= 0 ) then
 1307.                $I_L1307_1810 = 0
 1307.                do
 1307.                   $I_L1307_1771 = 0
 1307. !dir$ blocking_size( 0, 0 )
 1307.                   do
 1307.                      $I_L1307_1334 = 0
 1307. !dir$ ivdep
 1307. !dir$ blocking_size( 256, 256 )
 1307.                      do
 1307.                         if ( ierr(istart + $I_L1307_1334 + 256 * $I_L1307_1810) == 0 ) then
 1307.                            if ( ( kmax + -$I_L1307_1771 + -1 ) <= -1 + jmin(istart + $I_L1307_1334 + 256 * $I_L1307_1810) ) then
 1307.                               $dz_S86 = z_cup(istart + $I_L1307_1334 + 256 * $I_L1307_1810, kmax + -$I_L1307_1771) + -z_cup(istart + $I_L1307_1334 + 256 * $I_L1307_1810, kmax + -$I_L1307_1771 + -1)
 1307.                               $dh_S85 = hcd(istart + $I_L1307_1334 + 256 * $I_L1307_1810, kmax + -$I_L1307_1771 + -1) + -hes_cup(istart + $I_L1307_1334 + 256 * $I_L1307_1810, kmax + -$I_L1307_1771 + -1)
 1307.                               bu(istart + $I_L1307_1334 + 256 * $I_L1307_1810) = bu(istart + $I_L1307_1334 + 256 * $I_L1307_1810) + $dz_S86 * $dh_S85
 1307.                            endif
 1307.                         endif
 1307.                         $I_L1307_1334 = 1 + $I_L1307_1334
 1307.                         if ( $I_L1307_1334 >= min( iend + -istart + 1, 256 + 256 * $I_L1307_1810 ) + -256 * $I_L1307_1810 ) exit
 1307.                      enddo
 1307.                      $I_L1307_1771 = 1 + $I_L1307_1771
 1307.                      if ( $I_L1307_1771 >= -1 + kmax ) exit
 1307.                   enddo
 1307.                   $I_L1307_1810 = 1 + $I_L1307_1810
 1307.                   if ( $I_L1307_1810 >= 1 + max( 0, -1 + _rsh( iend + -istart + 256, 8 ) ) ) exit
 1307.                enddo
 1307.             endif
 1307.          endif
 1332.          t$46 = ncols
 1332.          t$47 = kmax
 1332.          t$737 = max( 0, ncols )
 1332.          t$738 = ncols
 1332.          t$739 = max( 0, kmax )
 1332.          t$740 = ( ncols * kmax )
 1332.          if ( iend + -istart >= 0 ) then
 1332.             $I_L1332_1337 = 0
 1332. !dir$ ivdep
 1332.             do
 1332.                if ( ierr(istart + $I_L1332_1337) == 0 ) then
 1332.                   bu(istart + $I_L1332_1337) = 0.0
 1332.                   pwevo(istart + $I_L1332_1337) = 0.0
 1332.                endif
 1332.                $I_L1332_1337 = 1 + $I_L1332_1337
 1332.                if ( $I_L1332_1337 >= iend + -istart + 1 ) exit
 1332.             enddo
 1332.             $I_L1332_1341 = 0
 1332. !dir$ ivdep
 1332.             do
 1332.                if ( ierr(istart + $I_L1332_1341) == 0 ) then
 1332.                   $k_S89 = jmin(istart + $I_L1332_1341)
 1332.                   $dz_S91 = zo_cup(istart + $I_L1332_1341, 1 + $k_S89) + -zo_cup(istart + $I_L1332_1341, $k_S89)
 1332.                   $SVU_P11 = qo_cup(istart + $I_L1332_1341, $k_S89)
 1332.                   qcdo(istart + $I_L1332_1341, $k_S89) = $SVU_P11
 1332.                   $SVU_P12 = qeso_cup(istart + $I_L1332_1341, $k_S89)
 1332.                   qrcdo(istart + $I_L1332_1341, $k_S89) = $SVU_P12
 1332.                   pwdo(istart + $I_L1332_1341, $k_S89) = ( min( 0.0, $SVU_P11 + -$SVU_P12 ) )
 1332.                   pwevo(istart + $I_L1332_1341) = pwevo(istart + $I_L1332_1341) + ( min( 0.0, $SVU_P11 + -$SVU_P12 ) )
 1332.                   qcdo(istart + $I_L1332_1341, $k_S89) = $SVU_P12
 1332.                   $dh_S90 = hcdo(istart + $I_L1332_1341, $k_S89) + -heso_cup(istart + $I_L1332_1341, $k_S89)
 1332.                   bu(istart + $I_L1332_1341) = $dz_S91 * $dh_S90
 1332.                endif
 1332.                $I_L1332_1341 = 1 + $I_L1332_1341
 1332.                if ( $I_L1332_1341 >= iend + -istart + 1 ) exit
 1332.             enddo
 1332.          endif
 1332.          if ( 1 + -kmax < 0 ) then
 1332.             if ( iend + -istart >= 0 ) then
 1332.                $I_L1332_1812 = 0
 1332.                do
 1332.                   $I_L1332_1773 = 0
 1332. !dir$ blocking_size( 0, 0 )
 1332.                   do
 1332.                      $I_L1332_1343 = 0
 1332. !dir$ ivdep
 1332. !dir$ blocking_size( 256, 256 )
 1332.                      do
 1332.                         if ( ierr(istart + $I_L1332_1343 + 256 * $I_L1332_1812) == 0 ) then
 1332.                            if ( ( kmax + -$I_L1332_1773 + -1 ) <= -1 + jmin(istart + $I_L1332_1343 + 256 * $I_L1332_1812) ) then
 1332.                               $dz_S94 = zo_cup(istart + $I_L1332_1343 + 256 * $I_L1332_1812, kmax + -$I_L1332_1773) + -zo_cup(istart + $I_L1332_1343 + 256 * $I_L1332_1812, kmax + -$I_L1332_1773 + -1)
 1332.                               $qcdo_WR0_R17 = ( ( qcdo(istart + $I_L1332_1343 + 256 * $I_L1332_1812, kmax + -$I_L1332_1773) * ( 1.0 + $dz_S94 * cdd(istart + $I_L1332_1343 + 256 * $I_L1332_1812, kmax + -$I_L1332_1773 + -1) * -5.0e-1 ) + mentrd_rate * $dz_S94 * qo(istart + $I_L1332_1343 + 256 * $I_L1332_1812, kmax + -$I_L1332_1773 + -1) ) * 1.0/( $dz_S94 * cdd(istart + $I_L1332_1343 + 256 * $I_L1332_1812, kmax + -$I_L1332_1773 + -1) * -5.0e-1 + mentrd_rate * $dz_S94 + 1.0 ) )
 1332.                               qcdo(istart + $I_L1332_1343 + 256 * $I_L1332_1812, kmax + -$I_L1332_1773 + -1) = $qcdo_WR0_R17
 1332.                               $dh_S95 = hcdo(istart + $I_L1332_1343 + 256 * $I_L1332_1812, kmax + -$I_L1332_1773 + -1) + -heso_cup(istart + $I_L1332_1343 + 256 * $I_L1332_1812, kmax + -$I_L1332_1773 + -1)
 1332.                               bu(istart + $I_L1332_1343 + 256 * $I_L1332_1812) = bu(istart + $I_L1332_1343 + 256 * $I_L1332_1812) + $dz_S94 * $dh_S95
 1332.                               $qrcdo_WR0_R18 = qeso_cup(istart + $I_L1332_1343 + 256 * $I_L1332_1812, kmax + -$I_L1332_1773 + -1) + $dh_S95 * ( gammao_cup(istart + $I_L1332_1343 + 256 * $I_L1332_1812, kmax + -$I_L1332_1773 + -1) * 1.0/( 1.0 + gammao_cup(istart + $I_L1332_1343 + 256 * $I_L1332_1812, kmax + -$I_L1332_1773 + -1) ) ) * 3.9999999999999998e-7
 1332.                               qrcdo(istart + $I_L1332_1343 + 256 * $I_L1332_1812, kmax + -$I_L1332_1773 + -1) = $qrcdo_WR0_R18
 1332.                               $pwdo_WR0_R19 = zdo(istart + $I_L1332_1343 + 256 * $I_L1332_1812, kmax + -$I_L1332_1773 + -1) * ( min( 0.0, ( $qcdo_WR0_R17 + -$qrcdo_WR0_R18 ) ) )
 1332.                               pwdo(istart + $I_L1332_1343 + 256 * $I_L1332_1812, kmax + -$I_L1332_1773 + -1) = $pwdo_WR0_R19
 1332.                               qcdo(istart + $I_L1332_1343 + 256 * $I_L1332_1812, kmax + -$I_L1332_1773 + -1) = $qrcdo_WR0_R18
 1332.                               pwevo(istart + $I_L1332_1343 + 256 * $I_L1332_1812) = pwevo(istart + $I_L1332_1343 + 256 * $I_L1332_1812) + $pwdo_WR0_R19
 1332.                            endif
 1332.                         endif
 1332.                         $I_L1332_1343 = 1 + $I_L1332_1343
 1332.                         if ( $I_L1332_1343 >= min( iend + -istart + 1, 256 + 256 * $I_L1332_1812 ) + -256 * $I_L1332_1812 ) exit
 1332.                      enddo
 1332.                      $I_L1332_1773 = 1 + $I_L1332_1773
 1332.                      if ( $I_L1332_1773 >= -1 + kmax ) exit
 1332.                   enddo
 1332.                   $I_L1332_1812 = 1 + $I_L1332_1812
 1332.                   if ( $I_L1332_1812 >= 1 + max( 0, -1 + _rsh( iend + -istart + 256, 8 ) ) ) exit
 1332.                enddo
 1332.             endif
 1332.          endif
 1332.          if ( iend + -istart >= 0 ) then
 1332.             $I_L1332_1346 = 0
 1332. !dir$ ivdep
 1332.             do
 1332.                if ( ierr(istart + $I_L1332_1346) == 0 ) then
 1332.                   if ( bu(istart + $I_L1332_1346) >= 0.0 ) then
 1332.                      ierr(istart + $I_L1332_1346) = 7
 1332.                   endif
 1332.                endif
 1332.                $I_L1332_1346 = 1 + $I_L1332_1346
 1332.                if ( $I_L1332_1346 >= iend + -istart + 1 ) exit
 1332.             enddo
 1332.          endif
 1364.          call cup_up_moisture( ierr(1), z_cup(1, 1), qc(1, 1), qrc(1, 1), pw(1, 1), pwav(1), kbcon(1), ktop(1), ncols, kmax, istart, iend, cd(1, 1), dby(1, 1), mentr_rate, q(1, 1), gamma_cup(1, 1), zu(1, 1), qes_cup(1, 1), k22(1), q_cup(1, 1) )
 1388.          if ( kmax > 0 ) then
 1389.             if ( iend + -istart >= 0 ) then
 1388.                $I_L1388_1615 = 0
 1388.                do
 1389.                   $I_L1389_1348 = 0
 1389. !dir$ ivdep
 1389.                   do
 1390.                      cupclw(istart + $I_L1389_1348, 1 + $I_L1388_1615) = qrc(istart + $I_L1389_1348, 1 + $I_L1388_1615)
 1391.                      $I_L1389_1348 = 1 + $I_L1389_1348
 1389.                      if ( $I_L1389_1348 >= iend + -istart + 1 ) exit
 1389.                   enddo
 1392.                   $I_L1388_1615 = 1 + $I_L1388_1615
 1391.                   if ( $I_L1388_1615 >= kmax ) exit
 1391.                enddo
 1391.             endif
 1391.          endif
 1394.          call cup_up_moisture( ierr(1), zo_cup(1, 1), qco(1, 1), qrco(1, 1), pwo(1, 1), pwavo(1), kbcon(1), ktop(1), ncols, kmax, istart, iend, cd(1, 1), dbyo(1, 1), mentr_rate, q(1, 1), gammao_cup(1, 1), zuo(1, 1), qeso_cup(1, 1), k22(1), qo_cup(1, 1) )
 1420.          call cup_up_aa0( aa0(1), z(1, 1), zu(1, 1), dby(1, 1), gamma_cup(1, 1), t_cup(1, 1), kbcon(1), ktop(1), kmax, ncols, istart, iend, ierr(1) )
 1435.          call cup_up_aa0( aa1(1), zo(1, 1), zuo(1, 1), dbyo(1, 1), gammao_cup(1, 1), tn_cup(1, 1), kbcon(1), ktop(1), kmax, ncols, istart, iend, ierr(1) )
 1452.          if ( iend + -istart >= 0 ) then
 1454.             if ( kmax > 0 ) then
 1452.                $I_L1452_1593 = 0
 1452. !dir$ ivdep
 1452.                do
 1453.                   wf_cape(istart + $I_L1452_1593) = aa1(istart + $I_L1452_1593)
 1457.                   $I_L1452_1593 = 1 + $I_L1452_1593
 1456.                   if ( $I_L1452_1593 >= iend + -istart + 1 ) exit
 1456.                enddo
 1454.                $I_L1454_1749 = 0
 1454.                do
 1452.                   $I_L1452_1595 = 0
 1452. !dir$ ivdep
 1452.                   do
 1455.                      bncy(istart + $I_L1452_1595, 1 + $I_L1454_1749) = dbyo(istart + $I_L1452_1595, 1 + $I_L1454_1749)
 1457.                      $I_L1452_1595 = 1 + $I_L1452_1595
 1454.                      if ( $I_L1452_1595 >= iend + -istart + 1 ) exit
 1454.                   enddo
 1456.                   $I_L1454_1749 = 1 + $I_L1454_1749
 1456.                   if ( $I_L1454_1749 >= kmax ) exit
 1456.                enddo
 1456.             else
 1452.                $I_L1452_1401 = 0
 1452. !dir$ ivdep
 1452.                do
 1453.                   wf_cape(istart + $I_L1452_1401) = aa1(istart + $I_L1452_1401)
 1457.                   $I_L1452_1401 = 1 + $I_L1452_1401
 1456.                   if ( $I_L1452_1401 >= iend + -istart + 1 ) exit
 1456.                enddo
 1456.             endif
 1461.             $I_L1461_1350 = 0
 1461. !dir$ ivdep
 1461.             do
 1462.                if ( ierr(istart + $I_L1461_1350) == 0 ) then
 1463.                   if ( aa1(istart + $I_L1461_1350) == 0.0 ) then
 1464.                      ierr(istart + $I_L1461_1350) = 17
 1464.                   endif
 1464.                endif
 1471.                if ( ierr(istart + $I_L1461_1350) == 0 ) then
 1471.                   edt(istart + $I_L1461_1350) = 0.0
 1471.                   vws(istart + $I_L1461_1350) = 0.0
 1471.                   sdp(istart + $I_L1461_1350) = 0.0
 1471.                   vshear(istart + $I_L1461_1350) = 0.0
 1471.                endif
 1467.                $I_L1461_1350 = 1 + $I_L1461_1350
 1466.                if ( $I_L1461_1350 >= iend + -istart + 1 ) exit
 1466.             enddo
 1466.          endif
 1471.          t$52 = ncols
 1471.          t$749 = max( 0, ncols )
 1471.          t$53 = kmax
 1471.          t$750 = ncols
 1471.          t$751 = max( 0, kmax )
 1471.          t$752 = ( ncols * kmax )
 1471.          t$54 = 3
 1471.          t$753 = 3
 1471.          t$754 = 3 * ncols
 1471.          if ( -1 + kmax > 0 ) then
 1471.             if ( iend + -istart >= 0 ) then
 1471.                if ( 0 < -2 + kmax ) then
 1471.                   $I_L1471_1814 = 0
 1471.                   do
 1471.                      $I_L1471_1775 = 0
 1471. !dir$ blocking_size( 0, 0 )
 1471.                      do
 1471.                         $I_L1471_1398 = 0
 1471. !dir$ ivdep
 1471. !dir$ blocking_size( 256, 256 )
 1471.                         do
 1471.                            if ( ierr(istart + $I_L1471_1398 + 256 * $I_L1471_1814) == 0 ) then
 1471.                               if ( ( 1 + $I_L1471_1775 ) <= min( ktop(istart + $I_L1471_1398 + 256 * $I_L1471_1814), -1 + kmax ) ) then
 1471.                                  if ( ( 1 + $I_L1471_1775 ) >= kbcon(istart + $I_L1471_1398 + 256 * $I_L1471_1814) ) then
 1471.                                     $aa1_S108 = abs( ( us(istart + $I_L1471_1398 + 256 * $I_L1471_1814, 2 + $I_L1471_1775) + -us(istart + $I_L1471_1398 + 256 * $I_L1471_1814, 1 + $I_L1471_1775) ) * 1.0/( zo(istart + $I_L1471_1398 + 256 * $I_L1471_1814, 2 + $I_L1471_1775) + -zo(istart + $I_L1471_1398 + 256 * $I_L1471_1814, 1 + $I_L1471_1775) ) )
 1471.                                     $aa2_S107 = abs( ( vs(istart + $I_L1471_1398 + 256 * $I_L1471_1814, 2 + $I_L1471_1775) + -vs(istart + $I_L1471_1398 + 256 * $I_L1471_1814, 1 + $I_L1471_1775) ) * 1.0/( zo(istart + $I_L1471_1398 + 256 * $I_L1471_1814, 2 + $I_L1471_1775) + -zo(istart + $I_L1471_1398 + 256 * $I_L1471_1814, 1 + $I_L1471_1775) ) )
 1471.                                     vws(istart + $I_L1471_1398 + 256 * $I_L1471_1814) = vws(istart + $I_L1471_1398 + 256 * $I_L1471_1814) + ( $aa1_S108 + $aa2_S107 ) * ( po(istart + $I_L1471_1398 + 256 * $I_L1471_1814, 1 + $I_L1471_1775) + -po(istart + $I_L1471_1398 + 256 * $I_L1471_1814, 2 + $I_L1471_1775) )
 1471.                                     sdp(istart + $I_L1471_1398 + 256 * $I_L1471_1814) = sdp(istart + $I_L1471_1398 + 256 * $I_L1471_1814) + po(istart + $I_L1471_1398 + 256 * $I_L1471_1814, 1 + $I_L1471_1775) + -po(istart + $I_L1471_1398 + 256 * $I_L1471_1814, 2 + $I_L1471_1775)
 1471.                                  endif
 1471.                               endif
 1471.                            endif
 1471.                            $I_L1471_1398 = 1 + $I_L1471_1398
 1471.                            if ( $I_L1471_1398 >= min( iend + -istart + 1, 256 + 256 * $I_L1471_1814 ) + -256 * $I_L1471_1814 ) exit
 1471.                         enddo
 1471.                         $I_L1471_1775 = 1 + $I_L1471_1775
 1471.                         if ( $I_L1471_1775 >= -2 + kmax ) exit
 1471.                      enddo
 1471.                      $I_L1471_1814 = 1 + $I_L1471_1814
 1471.                      if ( $I_L1471_1814 >= 1 + max( 0, -1 + _rsh( iend + -istart + 256, 8 ) ) ) exit
 1471.                   enddo
 1471.                endif
 1471.                $I_L1471_1597 = 0
 1471. !dir$ ivdep
 1471.                do
 1471.                   if ( ierr(istart + $I_L1471_1597) == 0 ) then
 1471.                      if ( ( -1 + kmax ) <= min( ktop(istart + $I_L1471_1597), -1 + kmax ) ) then
 1471.                         if ( ( -1 + kmax ) >= kbcon(istart + $I_L1471_1597) ) then
 1471.                            $aa1_S108 = abs( ( us(istart + $I_L1471_1597, kmax) + -us(istart + $I_L1471_1597, -1 + kmax) ) * 1.0/( zo(istart + $I_L1471_1597, kmax) + -zo(istart + $I_L1471_1597, -1 + kmax) ) )
 1471.                            $aa2_S107 = abs( ( vs(istart + $I_L1471_1597, kmax) + -vs(istart + $I_L1471_1597, -1 + kmax) ) * 1.0/( zo(istart + $I_L1471_1597, kmax) + -zo(istart + $I_L1471_1597, -1 + kmax) ) )
 1471.                            vws(istart + $I_L1471_1597) = vws(istart + $I_L1471_1597) + ( $aa1_S108 + $aa2_S107 ) * ( po(istart + $I_L1471_1597, -1 + kmax) + -po(istart + $I_L1471_1597, kmax) )
 1471.                            sdp(istart + $I_L1471_1597) = sdp(istart + $I_L1471_1597) + po(istart + $I_L1471_1597, -1 + kmax) + -po(istart + $I_L1471_1597, kmax)
 1471.                         endif
 1471.                      endif
 1471.                      $LD_SPLT_P14 = vws(istart + $I_L1471_1597)
 1471.                      $LD_SPLT_P15 = sdp(istart + $I_L1471_1597)
 1471.                      vshear(istart + $I_L1471_1597) = ( 1.0/$LD_SPLT_P15 * $LD_SPLT_P14 * 1000.0 )
 1471.                   endif
 1471.                   $I_L1471_1597 = 1 + $I_L1471_1597
 1471.                   if ( $I_L1471_1597 >= iend + -istart + 1 ) exit
 1471.                enddo
 1471.             endif
 1471.          endif
 1471.          if ( iend + -istart >= 0 ) then
 1471.             $I_L1471_1352 = 0
 1471. !dir$ ivdep
 1471.             do
 1471.                if ( ierr(istart + $I_L1471_1352) == 0 ) then
 1471.                   $pef_S110 = ( 9.5299999999999996e-2 * ( vshear(istart + $I_L1471_1352) * vshear(istart + $I_L1471_1352) ) + -6.3900000000000001e-1 * vshear(istart + $I_L1471_1352) + -4.96e-3 * ( vshear(istart + $I_L1471_1352) * vshear(istart + $I_L1471_1352) * vshear(istart + $I_L1471_1352) ) + 1.591 )
 1471.                   $pef_S114 = max( edtmin, cvmg( min( edtmax, $pef_S110 ), min( edtmax1, $pef_S110 ), mask(istart + $I_L1471_1352) /= 1 ) )
 1471.                   $zkbc_S111 = 3.2810000000000001e-3 * zo(istart + $I_L1471_1352, kbcon(istart + $I_L1471_1352))
 1471.                   $prezk_S112 = 2.0e-2
 1471.                   if ( $zkbc_S111 > 3.0 ) then
 1471.                      $prezk_S112 = 9.6729352000000002e-1 + $zkbc_S111 * ( -7.0034167000000003e-1 + $zkbc_S111 * ( 1.6217989599999999e-1 + $zkbc_S111 * ( -1.2569798e-2 + $zkbc_S111 * ( 4.2771999999999998e-4 + -5.4399999999999996e-6 * $zkbc_S111 ) ) ) )
 1471.                   endif
 1471.                   if ( $zkbc_S111 > 25.0 ) then
 1471.                      $prezk_S112 = 2.3999999999999999
 1471.                   endif
 1471.                   $pefb_S113 = cvmg( min( edtmax, 1.0/( 1.0 + $prezk_S112 ) ), min( edtmax1, 1.0/( 1.0 + $prezk_S112 ) ), mask(istart + $I_L1471_1352) /= 1 )
 1471.                   edt(istart + $I_L1471_1352) = 1.0 + -5.0e-1 * ( ( max( edtmin, $pefb_S113 ) ) + $pef_S114 )
 1471.                endif
 1471.                $I_L1471_1352 = 1 + $I_L1471_1352
 1471.                if ( $I_L1471_1352 >= iend + -istart + 1 ) exit
 1471.             enddo
 1471.          endif
 1471.          if ( maxens22 > 0 ) then
 1471.             if ( iend + -istart >= 0 ) then
 1471.                $I_L1471_1617 = 0
 1471. !dir$ blocking_size( 0, 0 )
 1471.                do
 1471.                   $I_L1471_1354 = 0
 1471. !dir$ ivdep
 1471. !dir$ blocking_size( 0, 0 )
 1471.                   do
 1471.                      if ( ierr(istart + $I_L1471_1354) == 0 ) then
 1471.                         $einc_S117 = ( edt(istart + $I_L1471_1354) * 1.0/( 1 + maxens22 ) )
 1471.                         edtc(istart + $I_L1471_1354, 1 + $I_L1471_1617) = edt(istart + $I_L1471_1354) + -( real( 1 + $I_L1471_1617, 8 ) * $einc_S117 )
 1471.                      endif
 1471.                      $I_L1471_1354 = 1 + $I_L1471_1354
 1471.                      if ( $I_L1471_1354 >= iend + -istart + 1 ) exit
 1471.                   enddo
 1471.                   $I_L1471_1617 = 1 + $I_L1471_1617
 1471.                   if ( $I_L1471_1617 >= maxens22 ) exit
 1471.                enddo
 1471.                $I_L1471_1816 = 0
 1471.                do
 1471.                   $I_L1471_1777 = 0
 1471. !dir$ ivdep
 1471. !dir$ blocking_size( 0, 0 )
 1471.                   do
 1471.                      $I_L1471_1356 = 0
 1471. !dir$ unroll 2
 1471. !dir$ blocking_size( 1024, 1024 )
 1471.                      do
 1471.                         if ( ierr(istart + $I_L1471_1356 + 1024 * $I_L1471_1816) == 0 ) then
 1471.                            $edtc_WR0_R20 = -( edtc(istart + $I_L1471_1356 + 1024 * $I_L1471_1816, 1 + $I_L1471_1777) * pwavo(istart + $I_L1471_1356 + 1024 * $I_L1471_1816) * 1.0/pwevo(istart + $I_L1471_1356 + 1024 * $I_L1471_1816) )
 1471.                            edtc(istart + $I_L1471_1356 + 1024 * $I_L1471_1816, 1 + $I_L1471_1777) = $edtc_WR0_R20
 1471.                            if ( mask(istart + $I_L1471_1356 + 1024 * $I_L1471_1816) == 1 ) then
 1471.                               $edtc_WR0_R20 = min( edtmax1, $edtc_WR0_R20 )
 1471.                               edtc(istart + $I_L1471_1356 + 1024 * $I_L1471_1816, 1 + $I_L1471_1777) = $edtc_WR0_R20
 1471.                            else
 1471.                               $edtc_WR0_R20 = min( edtmax, $edtc_WR0_R20 )
 1471.                               edtc(istart + $I_L1471_1356 + 1024 * $I_L1471_1816, 1 + $I_L1471_1777) = $edtc_WR0_R20
 1471.                            endif
 1471.                            $edtc_WR0_R20 = max( edtmin, $edtc_WR0_R20 )
 1471.                            edtc(istart + $I_L1471_1356 + 1024 * $I_L1471_1816, 1 + $I_L1471_1777) = $edtc_WR0_R20
 1471.                         endif
 1471.                         $I_L1471_1356 = 1 + $I_L1471_1356
 1471.                         if ( $I_L1471_1356 >= min( iend + -istart + 1, 1024 + 1024 * $I_L1471_1816 ) + -1024 * $I_L1471_1816 ) exit
 1471.                      enddo
 1471.                      $I_L1471_1777 = 1 + $I_L1471_1777
 1471.                      if ( $I_L1471_1777 >= maxens22 ) exit
 1471.                   enddo
 1471.                   $I_L1471_1816 = 1 + $I_L1471_1816
 1471.                   if ( $I_L1471_1816 >= 1 + max( 0, -1 + _rsh( iend + -istart + 1024, 10 ) ) ) exit
 1471.                enddo
 1471.             endif
 1471.          endif
 1497.          if ( ncols > 0 ) then
 1497.             $I_L1497_1359 = 0
 1497. !dir$ ivdep
 1497.             do
 1498.                listim(1 + $I_L1497_1359) = ( 1 + $I_L1497_1359 )
 1499.                $I_L1497_1359 = 1 + $I_L1497_1359
 1497.                if ( $I_L1497_1359 >= ncols ) exit
 1497.             enddo
 1497.          endif
 1500.          $ncols_gz_S123 = 0
 1501.          if ( ncols > 0 ) then
 1501.             $I_L1501_1361 = 0
 1501. !dir$ ivdep
 1501.             do
 1502.                if ( ierr(1 + $I_L1501_1361) == 0 ) then
 1501.                   goto 30
 1502.                else if ( ierr(1 + $I_L1501_1361) > 995 ) then
 1502.    30             continue
 1503.                   $ncols_gz_S123 = 1 + $ncols_gz_S123
 1504.                   bitx(1 + $I_L1501_1361) = .true.
 1504.                endif
 1506.                $I_L1501_1361 = 1 + $I_L1501_1361
 1505.                if ( $I_L1501_1361 >= ncols ) exit
 1505.             enddo
 1505.          endif
 1508.          if ( $ncols_gz_S123 > 0 ) then
 1510.             ncols_gz = 0
 1511.             if ( ncols > 0 ) then
 1511.                $I_L1511_1363 = 0
 1511. !dir$ ivdep
 1511.                do
 1512.                   if ( bitx(1 + $I_L1511_1363) ) then
 1513.                      ncols_gz = 1 + ncols_gz
 1514.                      litx(ncols_gz) = listim(1 + $I_L1511_1363)
 1514.                   endif
 1516.                   $I_L1511_1363 = 1 + $I_L1511_1363
 1515.                   if ( $I_L1511_1363 >= ncols ) exit
 1515.                enddo
 1515.             endif
 1519.             if ( ncols_gz > 0 ) then
 1519.                $I_L1519_1619 = 0
 1519. !dir$ ivdep
 1519. !dir$ blocking_size( 0, 0 )
 1519.                do
 1518.                   $SCA_litx_I8 = litx(1 + $I_L1519_1619)
 1520.                   edtc_gz(1 + $I_L1519_1619, 1) = edtc($SCA_litx_I8, 1)
 1520.                   edtc_gz(1 + $I_L1519_1619, 2) = edtc($SCA_litx_I8, 2)
 1520.                   edtc_gz(1 + $I_L1519_1619, 3) = edtc($SCA_litx_I8, 3)
 1524.                   $I_L1524_1365 = 0
 1524. !dir$ unroll 2
 1524. !dir$ blocking_size( 144, 144 )
 1524.                   do
 1526.                      pr_ens_gz(1 + $I_L1519_1619, 1 + $I_L1524_1365) = pr_ens($SCA_litx_I8, 1 + $I_L1524_1365)
 1527.                      outt_ens_gz(1 + $I_L1519_1619, 1 + $I_L1524_1365) = outt_ens($SCA_litx_I8, 1 + $I_L1524_1365)
 1528.                      xf_ens_gz(1 + $I_L1519_1619, 1 + $I_L1524_1365) = xf_ens($SCA_litx_I8, 1 + $I_L1524_1365)
 1529.                      massfln_gz(1 + $I_L1519_1619, 1 + $I_L1524_1365) = massfln($SCA_litx_I8, 1 + $I_L1524_1365)
 1531.                      $I_L1524_1365 = 1 + $I_L1524_1365
 1525.                      if ( $I_L1524_1365 >= 144 ) exit
 1525.                   enddo
 1521.                   $I_L1519_1619 = 1 + $I_L1519_1619
 1521.                   if ( $I_L1519_1619 >= ncols_gz ) exit
 1521.                enddo
 1564.                $I_L1564_1370 = 0
 1564. !dir$ ivdep
 1564.                do
 1565.                   ierr_gz(1 + $I_L1564_1370) = ierr(litx(1 + $I_L1564_1370))
 1566.                   ktop_gz(1 + $I_L1564_1370) = ktop(litx(1 + $I_L1564_1370))
 1567.                   k22_gz(1 + $I_L1564_1370) = k22(litx(1 + $I_L1564_1370))
 1568.                   kbcon_gz(1 + $I_L1564_1370) = kbcon(litx(1 + $I_L1564_1370))
 1569.                   jmin_gz(1 + $I_L1564_1370) = jmin(litx(1 + $I_L1564_1370))
 1570.                   kdet_gz(1 + $I_L1564_1370) = kdet(litx(1 + $I_L1564_1370))
 1571.                   z1_gz(1 + $I_L1564_1370) = z1(litx(1 + $I_L1564_1370))
 1572.                   psur_gz(1 + $I_L1564_1370) = psur(litx(1 + $I_L1564_1370))
 1573.                   kbmax_gz(1 + $I_L1564_1370) = kbmax(litx(1 + $I_L1564_1370))
 1574.                   cap_max_gz(1 + $I_L1564_1370) = cap_max(litx(1 + $I_L1564_1370))
 1575.                   aa0_gz(1 + $I_L1564_1370) = aa0(litx(1 + $I_L1564_1370))
 1576.                   aa1_gz(1 + $I_L1564_1370) = aa1(litx(1 + $I_L1564_1370))
 1577.                   xmb_gz(1 + $I_L1564_1370) = xmb(litx(1 + $I_L1564_1370))
 1578.                   mask_gz(1 + $I_L1564_1370) = mask(litx(1 + $I_L1564_1370))
 1579.                   mconv_gz(1 + $I_L1564_1370) = mconv(litx(1 + $I_L1564_1370))
 1580.                   $I_L1564_1370 = 1 + $I_L1564_1370
 1564.                   if ( $I_L1564_1370 >= ncols_gz ) exit
 1564.                enddo
 1564.             endif
 1534.             if ( kmax > 0 ) then
 1535.                if ( ncols_gz > 0 ) then
 1534.                   $I_L1534_1818 = 0
 1534.                   do
 1535.                      $I_L1535_1779 = 0
 1535. !dir$ ivdep
 1535. !dir$ blocking_size( 0, 0 )
 1535.                      do
 1534.                         $SCA_litx_I10 = litx(1 + $I_L1535_1779)
 1534.                         $I_L1534_1367 = 0
 1534. !dir$ blocking_size( 256, 256 )
 1534.                         do
 1536.                            heo_cup_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = heo_cup($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1537.                            zo_cup_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = zo_cup($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1538.                            po_cup_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = po_cup($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1539.                            hcdo_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = hcdo($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1540.                            zdo_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = zdo($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1541.                            cdd_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = cdd($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1542.                            heo_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = heo($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1543.                            qo_cup_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = qo_cup($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1544.                            qrcdo_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = qrcdo($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1545.                            qo_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = qo($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1546.                            zuo_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = zuo($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1547.                            cd_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = cd($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1548.                            hco_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = hco($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1549.                            qco_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = qco($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1550.                            qrco_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = qrco($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1551.                            tn_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = tn($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1552.                            po_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = po($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1553.                            gamma_cup_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = gamma_cup($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1554.                            pwo_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = pwo($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1555.                            pwdo_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = pwdo($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1556.                            he_cup_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = he_cup($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1557.                            heso_cup_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = heso_cup($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1558.                            omeg_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = omeg($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1559.                            p_cup_gz(1 + $I_L1535_1779, $I_L1534_1367 + 256 * $I_L1534_1818 + 1) = p_cup($SCA_litx_I10, $I_L1534_1367 + 256 * $I_L1534_1818 + 1)
 1534.                            $I_L1534_1367 = 1 + $I_L1534_1367
 1535.                            if ( $I_L1534_1367 >= min( kmax, 256 + 256 * $I_L1534_1818 ) + -256 * $I_L1534_1818 ) exit
 1535.                         enddo
 1560.                         $I_L1535_1779 = 1 + $I_L1535_1779
 1560.                         if ( $I_L1535_1779 >= ncols_gz ) exit
 1560.                      enddo
 1534.                      $I_L1534_1818 = 1 + $I_L1534_1818
 1560.                      if ( $I_L1534_1818 >= 1 + max( 0, -1 + _rsh( 255 + kmax, 8 ) ) ) exit
 1560.                   enddo
 1560.                endif
 1560.             endif
 1582.             ipa$1720 = 3
 1582.             ipa$1721 = 3
 1582.             ipa$1722 = 16
 1582.             ipa$1723 = 144
 1582.             call ensemble( istart, ncols_gz, ncols, kmax, ipa$1720, ipa$1721, maxens22, ipa$1722, ipa$1723, mbdt, dtime, edtc_gz(1, 1), ierr_gz(1), dellat_ens_gz(1, 1, 1), dellaq_ens_gz(1, 1, 1), dellaqc_ens_gz(1, 1, 1), pwo_ens_gz(1, 1, 1), heo_cup_gz(1, 1), zo_cup_gz(1, 1), po_cup_gz(1, 1), hcdo_gz(1, 1), zdo_gz(1, 1), cdd_gz(1, 1), heo_gz(1, 1), qo_cup_gz(1, 1), qrcdo_gz(1, 1), qo_gz(1, 1), zuo_gz(1, 1), cd_gz(1, 1), hco_gz(1, 1), ktop_gz(1), k22_gz(1), kbcon_gz(1), jmin_gz(1), kdet_gz(1), qco_gz(1, 1), qrco_gz(1, 1), tn_gz(1, 1), po_gz(1, 1), z1_gz(1), psur_gz(1), gamma_cup_gz(1, 1), pr_ens_gz(1, 1), pwo_gz(1, 1), pwdo_gz(1, 1), outt_ens_gz(1, 1), he_cup_gz(1, 1), kbmax_gz(1), heso_cup_gz(1, 1), cap_max_gz(1), aa0_gz(1), aa1_gz(1), xmb_gz(1), xf_ens_gz(1, 1), mask_gz(1), mconv_gz(1), omeg_gz(1, 1), massfln_gz(1, 1), p_cup_gz(1, 1) )
 1644.             if ( ncols_gz > 0 ) then
 1644.                $I_L1644_1372 = 0
 1644. !dir$ ivdep
 1644.                do
 1645.                   ierr(litx(1 + $I_L1644_1372)) = ierr_gz(1 + $I_L1644_1372)
 1650.                   xmb(litx(1 + $I_L1644_1372)) = xmb_gz(1 + $I_L1644_1372)
 1646.                   $I_L1644_1372 = 1 + $I_L1644_1372
 1644.                   if ( $I_L1644_1372 >= ncols_gz ) exit
 1644.                enddo
 1663.                $I_L1663_1621 = 0
 1663.                if ( ncols_gz >= 4 ) then
 1663.                   $I_L1663_1857 = 0
 1663. !dir$ blocking_size( 0, 0 )
 1663.                   do
 1662.                      $SCA_litx#1_U0 = litx(1 + 4 * $I_L1663_1857)
 1662.                      $SCA_litx#2_U1 = litx(2 + 4 * $I_L1663_1857)
 1662.                      $SCA_litx#3_U2 = litx(3 + 4 * $I_L1663_1857)
 1662.                      $SCA_litx#4_U3 = litx(4 + 4 * $I_L1663_1857)
 1662.                      $I_L1662_1374 = 0
 1662. !dir$ ivdep
 1662. !dir$ blocking_size( 144, 144 )
 1662.                      do
 1666.                         xf_ens($SCA_litx#1_U0, 1 + $I_L1662_1374) = xf_ens_gz(1 + 4 * $I_L1663_1857, 1 + $I_L1662_1374)
 1667.                         massfln($SCA_litx#1_U0, 1 + $I_L1662_1374) = massfln_gz(1 + 4 * $I_L1663_1857, 1 + $I_L1662_1374)
 1666.                         xf_ens($SCA_litx#2_U1, 1 + $I_L1662_1374) = xf_ens_gz(2 + 4 * $I_L1663_1857, 1 + $I_L1662_1374)
 1667.                         massfln($SCA_litx#2_U1, 1 + $I_L1662_1374) = massfln_gz(2 + 4 * $I_L1663_1857, 1 + $I_L1662_1374)
 1666.                         xf_ens($SCA_litx#3_U2, 1 + $I_L1662_1374) = xf_ens_gz(3 + 4 * $I_L1663_1857, 1 + $I_L1662_1374)
 1667.                         massfln($SCA_litx#3_U2, 1 + $I_L1662_1374) = massfln_gz(3 + 4 * $I_L1663_1857, 1 + $I_L1662_1374)
 1666.                         xf_ens($SCA_litx#4_U3, 1 + $I_L1662_1374) = xf_ens_gz(4 + 4 * $I_L1663_1857, 1 + $I_L1662_1374)
 1667.                         massfln($SCA_litx#4_U3, 1 + $I_L1662_1374) = massfln_gz(4 + 4 * $I_L1663_1857, 1 + $I_L1662_1374)
 1669.                         $I_L1662_1374 = 1 + $I_L1662_1374
 1663.                         if ( $I_L1662_1374 >= 144 ) exit
 1663.                      enddo
 1668.                      $I_L1663_1857 = 1 + $I_L1663_1857
 1668.                      if ( $I_L1663_1857 >= _rsh( ncols_gz, 2 ) ) exit
 1668.                   enddo
 1668.                   $I_L1663_1621 = and( 0xfffffffffffffffcUL, ncols_gz )
 1668.                endif
 1663.                if ( $I_L1663_1621 < ncols_gz ) then
 1663.                   $I_L1663_1849 = 0
 1663. !dir$ blocking_size( 0, 0 )
 1663.                   do
 1662.                      $SCA_litx_I12 = litx($I_L1663_1621 + $I_L1663_1849 + 1)
 1662.                      $I_L1662_1374 = 0
 1662. !dir$ ivdep
 1662. !dir$ blocking_size( 144, 144 )
 1662.                      do
 1666.                         xf_ens($SCA_litx_I12, 1 + $I_L1662_1374) = xf_ens_gz($I_L1663_1621 + $I_L1663_1849 + 1, 1 + $I_L1662_1374)
 1667.                         massfln($SCA_litx_I12, 1 + $I_L1662_1374) = massfln_gz($I_L1663_1621 + $I_L1663_1849 + 1, 1 + $I_L1662_1374)
 1669.                         $I_L1662_1374 = 1 + $I_L1662_1374
 1663.                         if ( $I_L1662_1374 >= 144 ) exit
 1663.                      enddo
 1668.                      $I_L1663_1849 = 1 + $I_L1663_1849
 1668.                      if ( $I_L1663_1849 >= ncols_gz + -$I_L1663_1621 ) exit
 1668.                   enddo
 1668.                endif
 1668.             endif
 1671.             if ( kmax > 0 ) then
 1672.                if ( ncols_gz > 0 ) then
 1672.                   $I_L1672_1845 = 0
 1672.                   do
 1671.                      $I_L1671_1841 = 0
 1671.                      do
 1672.                         $I_L1672_1859 = 0
 1672. !dir$ shortloop16
 1672. !dir$ blocking_size( 2, 2 )
 1672.                         do
 1670.                            $SCA_litx_I11 = litx($I_L1672_1859 + 2 * $I_L1672_1845 + 1)
 1670.                            $I_L1670_1781 = 0
 1670. !dir$ blocking_size( 4, 4 )
 1670.                            do
 1671.                               $I_L1671_1376 = 0
 1671. !dir$ ivdep
 1671. !dir$ blocking_size( 256, 256 )
 1671.                               do
 1673.                                  dellat_ens($SCA_litx_I11, $I_L1671_1376 + 256 * $I_L1671_1841 + 1, 1 + $I_L1670_1781) = dellat_ens_gz($I_L1672_1859 + 2 * $I_L1672_1845 + 1, $I_L1671_1376 + 256 * $I_L1671_1841 + 1, 1 + $I_L1670_1781)
 1674.                                  dellaq_ens($SCA_litx_I11, $I_L1671_1376 + 256 * $I_L1671_1841 + 1, 1 + $I_L1670_1781) = dellaq_ens_gz($I_L1672_1859 + 2 * $I_L1672_1845 + 1, $I_L1671_1376 + 256 * $I_L1671_1841 + 1, 1 + $I_L1670_1781)
 1676.                                  pwo_ens($SCA_litx_I11, $I_L1671_1376 + 256 * $I_L1671_1841 + 1, 1 + $I_L1670_1781) = pwo_ens_gz($I_L1672_1859 + 2 * $I_L1672_1845 + 1, $I_L1671_1376 + 256 * $I_L1671_1841 + 1, 1 + $I_L1670_1781)
 1671.                                  $I_L1671_1376 = 1 + $I_L1671_1376
 1672.                                  if ( $I_L1671_1376 >= min( kmax, 256 + 256 * $I_L1671_1841 ) + -256 * $I_L1671_1841 ) exit
 1672.                               enddo
 1679.                               $I_L1670_1781 = 1 + $I_L1670_1781
 1679.                               if ( $I_L1670_1781 >= 3 ) exit
 1679.                            enddo
 1672.                            $I_L1672_1859 = 1 + $I_L1672_1859
 1677.                            if ( $I_L1672_1859 >= min( ncols_gz, 2 + 2 * $I_L1672_1845 ) + -2 * $I_L1672_1845 ) exit
 1677.                         enddo
 1671.                         $I_L1671_1841 = 1 + $I_L1671_1841
 1678.                         if ( $I_L1671_1841 >= 1 + max( 0, -1 + _rsh( 255 + kmax, 8 ) ) ) exit
 1678.                      enddo
 1672.                      $I_L1672_1845 = 1 + $I_L1672_1845
 1672.                      if ( $I_L1672_1845 >= 1 + max( 0, -1 + _rsh( 1 + ncols_gz, 1 ) ) ) exit
 1672.                   enddo
 1672.                endif
 1672.             endif
 1684.             t$68 = ncols
 1684.             t$71 = 144
 1684.             t$796 = max( 0, ncols )
 1684.             t$797 = ncols
 1684.             t$798 = 144
 1684.             t$799 = 144 * ncols
 1684.             t$69 = kmax
 1684.             t$70 = 3
 1684.             t$800 = max( 0, kmax )
 1684.             t$801 = kmax * ncols
 1684.             t$802 = 3
 1684.             t$803 = ncols * kmax * 3
 1684.             t$804 = ( ncols * kmax )
 1684.             t$807 = ncols * kmax * 8
 1684.             t$808 = 8 * ( ( 7 + ncols * kmax * 8 ) / 8 )
 1684.             t$810 = ncols * kmax * 8 + 8 * ( ( 7 + ncols * kmax * 8 ) / 8 )
 1684.             t$811 = 8 * ( ( ncols * kmax * 8 + 8 * ( ( 7 + ncols * kmax * 8 ) / 8 ) + 7 ) / 8 )
 1684.             t$813 = ncols * kmax * 8 + 8 * ( ( ncols * kmax * 8 + 8 * ( ( 7 + ncols * kmax * 8 ) / 8 ) + 7 ) / 8 )
 1684.             t$814 = 8 * ( ( ncols * kmax * 8 + 8 * ( ( ncols * kmax * 8 + 8 * ( ( 7 + ncols * kmax * 8 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1684.             t$816 = ncols * kmax * 8 + 8 * ( ( ncols * kmax * 8 + 8 * ( ( ncols * kmax * 8 + 8 * ( ( 7 + ncols * kmax * 8 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1684.             t$818 = 4 * ncols + ncols * kmax * 8 + 8 * ( ( ncols * kmax * 8 + 8 * ( ( ncols * kmax * 8 + 8 * ( ( 7 + ncols * kmax * 8 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1684.             t$805 = int( _alloc( 4 * ncols + ncols * kmax * 8 + 8 * ( ( ncols * kmax * 8 + 8 * ( ( ncols * kmax * 8 + 8 * ( ( 7 + ncols * kmax * 8 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 ) ), 8 )
 1684.             t$806 = t$805
 1684.             t$809 = t$805 + 8 * ( ( 7 + ncols * kmax * 8 ) / 8 )
 1684.             t$812 = t$805 + 8 * ( ( ncols * kmax * 8 + 8 * ( ( 7 + ncols * kmax * 8 ) / 8 ) + 7 ) / 8 )
 1684.             t$815 = t$805 + 8 * ( ( ncols * kmax * 8 + 8 * ( ( ncols * kmax * 8 + 8 * ( ( 7 + ncols * kmax * 8 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1684.             t$817 = t$805 + ncols * kmax * 8 + 8 * ( ( ncols * kmax * 8 + 8 * ( ( ncols * kmax * 8 + 8 * ( ( 7 + ncols * kmax * 8 ) / 8 ) + 7 ) / 8 ) + 7 ) / 8 )
 1684.             if ( kmax > 0 ) then
 1684.                if ( iend + -istart >= 0 ) then
 1684.                   $I_L1684_1623 = 0
 1684. !dir$ blocking_size( 0, 0 )
 1684.                   do
 1684.                      $I_L1684_1379 = 0
 1684. !dir$ ivdep
 1684. !dir$ blocking_size( 0, 0 )
 1684.                      do
 1684.                         if ( ierr(istart + $I_L1684_1379) == 0 ) then
 1684.                            outt(istart + $I_L1684_1379, 1 + $I_L1684_1623) = 0.0
 1684.                            outq(istart + $I_L1684_1379, 1 + $I_L1684_1623) = 0.0
 1684.                            dtt(istart + $I_L1684_1379, 1 + $I_L1684_1623) = 0.0
 1684.                            dtq(istart + $I_L1684_1379, 1 + $I_L1684_1623) = 0.0
 1684.                            dtpw(istart + $I_L1684_1379, 1 + $I_L1684_1623) = 0.0
 1684.                         endif
 1684.                         $I_L1684_1379 = 1 + $I_L1684_1379
 1684.                         if ( $I_L1684_1379 >= iend + -istart + 1 ) exit
 1684.                      enddo
 1684.                      $I_L1684_1623 = 1 + $I_L1684_1623
 1684.                      if ( $I_L1684_1623 >= kmax ) exit
 1684.                   enddo
 1684.                endif
 1684.             endif
 1684.             if ( iend + -istart >= 0 ) then
 1684.                $I_L1684_1381 = 0
 1684. !dir$ ivdep
 1684.                do
 1684.                   if ( ierr(istart + $I_L1684_1381) == 0 ) then
 1684.                      pre(istart + $I_L1684_1381) = 0.0
 1684.                      xmb(istart + $I_L1684_1381) = 0.0
 1684.                      xfac1(istart + $I_L1684_1381) = 1.0
 1684.                      xfac_for_dn(istart + $I_L1684_1381) = 1.0
 1684.                      ncount(istart + $I_L1684_1381) = 0
 1684.                   endif
 1684.                   $I_L1684_1381 = 1 + $I_L1684_1381
 1684.                   if ( $I_L1684_1381 >= iend + -istart + 1 ) exit
 1684.                enddo
 1684.             endif
 1684.             if ( 48 * maxens22 > 0 ) then
 1684.                if ( iend + -istart >= 0 ) then
 1684.                   $I_L1684_1823 = 0
 1684.                   do
 1684.                      $I_L1684_1783 = 0
 1684. !dir$ ivdep
 1684. !dir$ blocking_size( 0, 0 )
 1684.                      do
 1684.                         $SCA_ierr_I13 = ierr(istart + $I_L1684_1783)
 1684.                         $I_L1684_1383 = 0
 1684. !dir$ unroll 4
 1684. !dir$ blocking_size( 256, 256 )
 1684.                         do
 1684.                            if ( $SCA_ierr_I13 == 0 ) then
 1684.                               if ( xf_ens(istart + $I_L1684_1783, $I_L1684_1383 + 256 * $I_L1684_1823 + 1) >= 0.0 ) then
 1684.                                  xmb(istart + $I_L1684_1783) = xmb(istart + $I_L1684_1783) + xf_ens(istart + $I_L1684_1783, $I_L1684_1383 + 256 * $I_L1684_1823 + 1)
 1684.                                  ncount(istart + $I_L1684_1783) = 1 + ncount(istart + $I_L1684_1783)
 1684.                               endif
 1684.                            endif
 1684.                            $I_L1684_1383 = 1 + $I_L1684_1383
 1684.                            if ( $I_L1684_1383 >= min( ( 48 * maxens22 ), 256 + 256 * $I_L1684_1823 ) + -256 * $I_L1684_1823 ) exit
 1684.                         enddo
 1684.                         $I_L1684_1783 = 1 + $I_L1684_1783
 1684.                         if ( $I_L1684_1783 >= iend + -istart + 1 ) exit
 1684.                      enddo
 1684.                      $I_L1684_1823 = 1 + $I_L1684_1823
 1684.                      if ( $I_L1684_1823 >= 1 + max( 0, -1 + _rsh( 255 + 48 * maxens22, 8 ) ) ) exit
 1684.                   enddo
 1684.                endif
 1684.             endif
 1684.             if ( iend + -istart >= 0 ) then
 1684.                $I_L1684_1386 = 0
 1684. !dir$ ivdep
 1684.                do
 1684.                   if ( ierr(istart + $I_L1684_1386) == 0 ) then
 1684.                      if ( ncount(istart + $I_L1684_1386) > 0 ) then
 1684.                         xmb(istart + $I_L1684_1386) = ( xmb(istart + $I_L1684_1386) * 1.0/ncount(istart + $I_L1684_1386) )
 1684.                      else
 1684.                         xmb(istart + $I_L1684_1386) = 0.0
 1684.                         ierr(istart + $I_L1684_1386) = 13
 1684.                      endif
 1684.                      xfac1(istart + $I_L1684_1386) = xmb(istart + $I_L1684_1386)
 1684.                   endif
 1684.                   $I_L1684_1386 = 1 + $I_L1684_1386
 1684.                   if ( $I_L1684_1386 >= iend + -istart + 1 ) exit
 1684.                enddo
 1684.             endif
 1684.             if ( maxens22 > 0 ) then
 1684.                if ( kmax > 0 ) then
 1684.                   if ( iend + -istart >= 0 ) then
 1684.                      $I_L1684_1847 = 0
 1684.                      do
 1684.                         $I_L1684_1843 = 0
 1684. !dir$ blocking_size( 1, 1 )
 1684.                         do
 1684.                            $I_L1684_1825 = 0
 1684.                            do
 1684.                               $I_L1684_1785 = 0
 1684. !dir$ shortloop16
 1684. !dir$ ivdep
 1684. !dir$ blocking_size( 8, 8 )
 1684.                               do
 1684.                                  $I_L1684_1388 = 0
 1684. !dir$ blocking_size( 256, 256 )
 1684.                                  do
 1684.                                     if ( ierr(istart + $I_L1684_1388 + 256 * $I_L1684_1825) == 0 ) then
 1684.                                        if ( ( $I_L1684_1785 + 8 * $I_L1684_1847 + 1 ) <= ktop(istart + $I_L1684_1388 + 256 * $I_L1684_1825) ) then
 1684.                                           dtt(istart + $I_L1684_1388 + 256 * $I_L1684_1825, $I_L1684_1785 + 8 * $I_L1684_1847 + 1) = dtt(istart + $I_L1684_1388 + 256 * $I_L1684_1825, $I_L1684_1785 + 8 * $I_L1684_1847 + 1) + dellat_ens(istart + $I_L1684_1388 + 256 * $I_L1684_1825, $I_L1684_1785 + 8 * $I_L1684_1847 + 1, 1 + $I_L1684_1843)
 1684.                                           dtq(istart + $I_L1684_1388 + 256 * $I_L1684_1825, $I_L1684_1785 + 8 * $I_L1684_1847 + 1) = dtq(istart + $I_L1684_1388 + 256 * $I_L1684_1825, $I_L1684_1785 + 8 * $I_L1684_1847 + 1) + dellaq_ens(istart + $I_L1684_1388 + 256 * $I_L1684_1825, $I_L1684_1785 + 8 * $I_L1684_1847 + 1, 1 + $I_L1684_1843)
 1684.                                           dtpw(istart + $I_L1684_1388 + 256 * $I_L1684_1825, $I_L1684_1785 + 8 * $I_L1684_1847 + 1) = dtpw(istart + $I_L1684_1388 + 256 * $I_L1684_1825, $I_L1684_1785 + 8 * $I_L1684_1847 + 1) + pwo_ens(istart + $I_L1684_1388 + 256 * $I_L1684_1825, $I_L1684_1785 + 8 * $I_L1684_1847 + 1, 1 + $I_L1684_1843)
 1684.                                        endif
 1684.                                     endif
 1684.                                     $I_L1684_1388 = 1 + $I_L1684_1388
 1684.                                     if ( $I_L1684_1388 >= min( iend + -istart + 1, 256 + 256 * $I_L1684_1825 ) + -256 * $I_L1684_1825 ) exit
 1684.                                  enddo
 1684.                                  $I_L1684_1785 = 1 + $I_L1684_1785
 1684.                                  if ( $I_L1684_1785 >= min( kmax, 8 + 8 * $I_L1684_1847 ) + -8 * $I_L1684_1847 ) exit
 1684.                               enddo
 1684.                               $I_L1684_1825 = 1 + $I_L1684_1825
 1684.                               if ( $I_L1684_1825 >= 1 + max( 0, -1 + _rsh( iend + -istart + 256, 8 ) ) ) exit
 1684.                            enddo
 1684.                            $I_L1684_1843 = 1 + $I_L1684_1843
 1684.                            if ( $I_L1684_1843 >= maxens22 ) exit
 1684.                         enddo
 1684.                         $I_L1684_1847 = 1 + $I_L1684_1847
 1684.                         if ( $I_L1684_1847 >= 1 + max( 0, -1 + _rsh( 7 + kmax, 3 ) ) ) exit
 1684.                      enddo
 1684.                   endif
 1684.                endif
 1684.             endif
 1684.             if ( kmax > 0 ) then
 1684.                if ( iend + -istart >= 0 ) then
 1684.                   $I_L1684_1625 = 0
 1684. !dir$ blocking_size( 0, 0 )
 1684.                   do
 1684.                      $I_L1684_1391 = 0
 1684. !dir$ ivdep
 1684. !dir$ blocking_size( 0, 0 )
 1684.                      do
 1684.                         if ( ierr(istart + $I_L1684_1391) == 0 ) then
 1684.                            if ( ( 1 + $I_L1684_1625 ) <= ktop(istart + $I_L1684_1391) ) then
 1684.                               $outtes_S152 = ( dtt(istart + $I_L1684_1391, 1 + $I_L1684_1625) * xmb(istart + $I_L1684_1391) * 1.0/maxens22 * 86400.0 )
 1684.                               if ( $outtes_S152 > 500.0 ) then
 1684.                                  if ( ( 1 + $I_L1684_1625 ) > 2 ) then
 1684.                                     xmb(istart + $I_L1684_1391) = ( 500.0 * 1.0/$outtes_S152 ) * xmb(istart + $I_L1684_1391)
 1684.                                     $outtes_S152 = 250.0
 1684.                                  endif
 1684.                               endif
 1684.                               if ( $outtes_S152 < -250.0 ) then
 1684.                                  $LD_SPLT_P16 = xmb(istart + $I_L1684_1391)
 1684.                                  xmb(istart + $I_L1684_1391) = -( ( 250.0 * 1.0/$outtes_S152 ) * $LD_SPLT_P16 )
 1684.                                  $outtes_S152 = -250.0
 1684.                               endif
 1684.                               if ( $outtes_S152 > 125.0 ) then
 1684.                                  if ( ( 1 + $I_L1684_1625 ) <= 2 ) then
 1684.                                     $LD_SPLT_P17 = xmb(istart + $I_L1684_1391)
 1684.                                     xmb(istart + $I_L1684_1391) = ( 250.0 * 1.0/$outtes_S152 ) * $LD_SPLT_P17
 1684.                                  endif
 1684.                               endif
 1684.                               $LD_SPLT_P18 = xmb(istart + $I_L1684_1391)
 1684.                               outt(istart + $I_L1684_1391, 1 + $I_L1684_1625) = outt(istart + $I_L1684_1391, 1 + $I_L1684_1625) + ( $LD_SPLT_P18 * dtt(istart + $I_L1684_1391, 1 + $I_L1684_1625) * 1.0/maxens22 )
 1684.                               outq(istart + $I_L1684_1391, 1 + $I_L1684_1625) = outq(istart + $I_L1684_1391, 1 + $I_L1684_1625) + ( $LD_SPLT_P18 * dtq(istart + $I_L1684_1391, 1 + $I_L1684_1625) * 1.0/maxens22 )
 1684.                               pre(istart + $I_L1684_1391) = pre(istart + $I_L1684_1391) + ( $LD_SPLT_P18 * dtpw(istart + $I_L1684_1391, 1 + $I_L1684_1625) * 1.0/maxens22 )
 1684.                            endif
 1684.                         endif
 1684.                         $I_L1684_1391 = 1 + $I_L1684_1391
 1684.                         if ( $I_L1684_1391 >= iend + -istart + 1 ) exit
 1684.                      enddo
 1684.                      $I_L1684_1625 = 1 + $I_L1684_1625
 1684.                      if ( $I_L1684_1625 >= kmax ) exit
 1684.                   enddo
 1684.                endif
 1684.             endif
 1684.             if ( 48 * maxens22 > 0 ) then
 1684.                if ( iend + -istart >= 0 ) then
 1684.                   $I_L1684_1827 = 0
 1684.                   do
 1684.                      $I_L1684_1788 = 0
 1684. !dir$ ivdep
 1684. !dir$ blocking_size( 0, 0 )
 1684.                      do
 1684.                         $SCA_ierr_I14 = ierr(istart + $I_L1684_1788)
 1684.                         $I_L1684_1393 = 0
 1684. !dir$ unroll 4
 1684. !dir$ blocking_size( 256, 256 )
 1684.                         do
 1684.                            if ( $SCA_ierr_I14 == 0 ) then
 1684.                               xfac1(istart + $I_L1684_1788) = ( xmb(istart + $I_L1684_1788) * 1.0/( 9.9999999999999998e-17 + xfac1(istart + $I_L1684_1788) ) )
 1684.                               massfln(istart + $I_L1684_1788, $I_L1684_1393 + 256 * $I_L1684_1827 + 1) = massfln(istart + $I_L1684_1788, $I_L1684_1393 + 256 * $I_L1684_1827 + 1) * xfac1(istart + $I_L1684_1788) * xfac_for_dn(istart + $I_L1684_1788)
 1684.                            endif
 1684.                            $I_L1684_1393 = 1 + $I_L1684_1393
 1684.                            if ( $I_L1684_1393 >= min( ( 48 * maxens22 ), 256 + 256 * $I_L1684_1827 ) + -256 * $I_L1684_1827 ) exit
 1684.                         enddo
 1684.                         $I_L1684_1788 = 1 + $I_L1684_1788
 1684.                         if ( $I_L1684_1788 >= iend + -istart + 1 ) exit
 1684.                      enddo
 1684.                      $I_L1684_1827 = 1 + $I_L1684_1827
 1684.                      if ( $I_L1684_1827 >= 1 + max( 0, -1 + _rsh( 255 + 48 * maxens22, 8 ) ) ) exit
 1684.                   enddo
 1684.                endif
 1684.             endif
 1684.             _free( t$805 )
 1713.             if ( iend + -istart >= 0 ) then
 1713.                $I_L1713_1396 = 0
 1713. !dir$ ivdep
 1713.                do
 1714.                   pre(istart + $I_L1713_1396) = max( 0.0, pre(istart + $I_L1713_1396) )
 1716.                   $I_L1713_1396 = 1 + $I_L1713_1396
 1713.                   if ( $I_L1713_1396 >= iend + -istart + 1 ) exit
 1713.                enddo
 1713.             endif
 1713.          else
 1718.             $F_A177 = kmax
 1718.             $F_A178 = ncols
 1718.             if ( and( -$F_A178, -$F_A177 ) < 0 ) then
 1718.                $I_L1718_1743 = 0
 1718.                do
 1718.                   $I_L1718_1583 = 0
 1718. !dir$ ivdep
 1718.                   do
 1718.                      outt(1 + $I_L1718_1583, 1 + $I_L1718_1743) = 0.0
 1718.                      $I_L1718_1583 = 1 + $I_L1718_1583
 1718.                      if ( $I_L1718_1583 >= $F_A178 ) exit
 1718.                   enddo
 1718.                   $I_L1718_1743 = 1 + $I_L1718_1743
 1718.                   if ( $I_L1718_1743 >= $F_A177 ) exit
 1718.                enddo
 1718.             endif
 1719.             $F_A179 = kmax
 1719.             $F_A180 = ncols
 1719.             if ( and( -$F_A180, -$F_A179 ) < 0 ) then
 1719.                $I_L1719_1745 = 0
 1719.                do
 1719.                   $I_L1719_1585 = 0
 1719. !dir$ ivdep
 1719.                   do
 1719.                      outq(1 + $I_L1719_1585, 1 + $I_L1719_1745) = 0.0
 1719.                      $I_L1719_1585 = 1 + $I_L1719_1585
 1719.                      if ( $I_L1719_1585 >= $F_A180 ) exit
 1719.                   enddo
 1719.                   $I_L1719_1745 = 1 + $I_L1719_1745
 1719.                   if ( $I_L1719_1745 >= $F_A179 ) exit
 1719.                enddo
 1719.             endif
 1721.             $F_A181 = ncols
 1721.             if ( ncols > 0 ) then
 1721.                $I_L1721_1587 = 0
 1721. !dir$ ivdep
 1721.                do
 1721.                   pre(1 + $I_L1721_1587) = 0.0
 1721.                   $I_L1721_1587 = 1 + $I_L1721_1587
 1721.                   if ( $I_L1721_1587 >= $F_A181 ) exit
 1721.                enddo
 1721.             endif
 1722.             $F_A182 = ncols
 1722.             if ( ncols > 0 ) then
 1722.                $I_L1722_1589 = 0
 1722. !dir$ ivdep
 1722.                do
 1722.                   xmb(1 + $I_L1722_1589) = 0.0
 1722.                   $I_L1722_1589 = 1 + $I_L1722_1589
 1722.                   if ( $I_L1722_1589 >= $F_A182 ) exit
 1722.                enddo
 1722.             endif
 1725.             $F_A183 = ncols
 1725.             if ( ncols > 0 ) then
 1725.                $I_L1725_1747 = 0
 1725.                do
 1725.                   $I_L1725_1591 = 0
 1725. !dir$ ivdep
 1725.                   do
 1725.                      massfln(1 + $I_L1725_1591, 1 + $I_L1725_1747) = 0.0
 1725.                      $I_L1725_1591 = 1 + $I_L1725_1591
 1725.                      if ( $I_L1725_1591 >= $F_A183 ) exit
 1725.                   enddo
 1725.                   $I_L1725_1747 = 1 + $I_L1725_1747
 1725.                   if ( $I_L1725_1747 >= 144 ) exit
 1725.                enddo
 1725.             endif
 1725.          endif
  410.          _free( t$139 )
 1731.          return
 1731.       end
 1731.       
 1736.       
 1736.       subroutine ensemble( istart, iend, ncols, kmax, maxens, maxens2, maxens22, maxens3, ensdim, mbdt, dtime, edtc, ierr, dellat_ens, dellaq_ens, dellaqc_ens, pwo_ens, heo_cup, zo_cup, po_cup, hcdo, zdo, cdd, heo, qo_cup, qrcdo, qo, zuo, cd, hco, ktop, k22, kbcon, jmin, kdet, qco, qrco, tn, po, z1, psur, gamma_cup, pr_ens, pwo, pwdo, outt_ens, he_cup, kbmax, heso_cup, cap_max, aa0, aa1, xmb, xf_ens, mask, mconv, omeg, massfln, p_cup )
 1736.       t$19 = ncols
 1736.       t$20 = maxens2
 1808.       t$540 = _zla( 0, ncols )
 1736.       t$541 = _zla( 0, ncols )
 1808.       t$542 = _zla( 0, maxens2 )
 1736.       t$543 = _zla( 0, ncols ) * _zla( 0, maxens2 )
 1736.       t$21 = kmax
 1810.       t$544 = _zla( 0, kmax )
 1736.       t$545 = _zla( 0, ncols ) * _zla( 0, kmax )
 1736.       t$546 = _zla( 0, ncols ) * _zla( 0, maxens2 ) * _zla( 0, kmax )
 1736.       t$547 = _zla( 0, ncols ) * _zla( 0, kmax )
 1736.       t$22 = ensdim
 1839.       t$548 = _zla( 0, ensdim )
 1736.       t$549 = _zla( 0, ncols ) * _zla( 0, ensdim )
 1865.       t$552 = 8 * _zla( 0, ncols )
 1868.       t$553 = 8 * _zla( 0, ncols )
 1868.       t$555 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 8
 1861.       t$556 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 8
 1861.       t$558 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
 1860.       t$559 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
 1860.       t$561 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24
 1862.       t$562 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24
 1862.       t$564 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
 1859.       t$565 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
 1859.       t$567 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
 1864.       t$568 = 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
 1864.       t$570 = 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
 1872.       t$571 = 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
 1872.       t$573 = 24 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
 1866.       t$575 = _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 28 * _zla( 0, ncols )
 1867.       t$577 = _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 32 * _zla( 0, ncols )
 1877.       t$579 = _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 36 * _zla( 0, ncols )
 1878.       t$581 = _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 40 * _zla( 0, ncols )
 1902.       t$582 = _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 40 * _zla( 0, ncols )
 1902.       t$584 = 40 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48
 1880.       t$585 = 40 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48
 1880.       t$587 = _zla( 0, ncols ) * _zla( 0, kmax ) * 48 + 48 * _zla( 0, ncols )
 1736.       t$24 = maxens
 1876.       t$588 = _zla( 0, maxens )
 1736.       t$589 = _zla( 0, ncols ) * _zla( 0, maxens )
 1876.       t$590 = _zla( 0, ncols ) * _zla( 0, kmax ) * 48 + 48 * _zla( 0, ncols )
 1876.       t$592 = _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + _zla( 0, ncols ) * _zla( 0, kmax ) * 48 + 48 * _zla( 0, ncols )
 1882.       t$593 = _zla( 0, ncols ) * _zla( 0, kmax ) * 48 + 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 8
 1882.       t$595 = _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56
 1736.       t$23 = maxens3
 1874.       t$596 = _zla( 0, maxens3 )
 1736.       t$597 = _zla( 0, ncols ) * _zla( 0, maxens3 )
 1874.       t$598 = 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8
 1874.       t$600 = _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56
 1899.       t$601 = 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8
 1899.       t$603 = _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64
 1897.       t$604 = 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8
 1897.       t$606 = _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 72
 1863.       t$607 = 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 72 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8
 1863.       t$609 = _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 80
 1873.       t$610 = 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 80 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8
 1873.       t$612 = _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 88
 1896.       t$613 = 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 88 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8
 1896.       t$615 = _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 96
 1900.       t$616 = 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 96 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8
 1900.       t$618 = _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 104
 1901.       t$619 = 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 104 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8
 1901.       t$621 = _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, kmax ) * 104 + 56 * _zla( 0, ncols )
 1875.       t$622 = _zla( 0, ncols ) * _zla( 0, kmax ) * 104 + 56 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8
 1875.       t$624 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, kmax ) * 104 + 56 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 16
 1888.       t$625 = 56 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, kmax ) * 104 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 1888.       t$627 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 56 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, kmax ) * 112
 1887.       t$628 = _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, kmax ) * 112 + 56 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 1887.       t$630 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, kmax ) * 112 + 64 * _zla( 0, ncols )
 1894.       t$631 = _zla( 0, ncols ) * _zla( 0, kmax ) * 112 + 64 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 1894.       t$633 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 64 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 120
 1893.       t$634 = 64 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 120 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 1893.       t$636 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, kmax ) * 120 + 72 * _zla( 0, ncols )
 1869.       t$637 = _zla( 0, ncols ) * _zla( 0, kmax ) * 120 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 1869.       t$639 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 128
 1890.       t$640 = 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 128 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 1890.       t$642 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 136
 1895.       t$643 = 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 136 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 1895.       t$645 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 144
 1871.       t$646 = 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 144 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 1871.       t$648 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 152
 1886.       t$649 = 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 152 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 1886.       t$651 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 160
 1889.       t$652 = 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 160 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 1889.       t$654 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 168
 1892.       t$655 = 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 168 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 1892.       t$657 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 176
 1885.       t$658 = 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 176 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 1885.       t$660 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 184
 1870.       t$661 = 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 184 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 1870.       t$663 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 192
 1881.       t$664 = 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 192 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 1881.       t$666 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 200
 1884.       t$667 = 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 200 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 1884.       t$669 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208
 1898.       t$670 = 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 1898.       t$672 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 216
 1883.       t$673 = 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 216 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 1883.       t$675 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 224
 1891.       t$676 = 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 224 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 1891.       t$678 = _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 232
 1736.       t$550 = int( _alloc( _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 232 ), 8 )
 1865.       t$551 = t$550
 1868.       t$554 = t$550 + 8 * _zla( 0, ncols )
 1861.       t$557 = t$550 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 8
 1860.       t$560 = t$550 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
 1862.       t$563 = t$550 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 24
 1859.       t$566 = t$550 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
 1864.       t$569 = t$550 + 8 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
 1872.       t$572 = t$550 + 16 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
 1866.       t$574 = t$550 + 24 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 40
 1867.       t$576 = t$550 + _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 28 * _zla( 0, ncols )
 1877.       t$578 = t$550 + _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 32 * _zla( 0, ncols )
 1878.       t$580 = t$550 + _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 36 * _zla( 0, ncols )
 1902.       t$583 = t$550 + _zla( 0, ncols ) * _zla( 0, kmax ) * 40 + 40 * _zla( 0, ncols )
 1880.       t$586 = t$550 + 40 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 48
 1876.       t$591 = t$550 + _zla( 0, ncols ) * _zla( 0, kmax ) * 48 + 48 * _zla( 0, ncols )
 1882.       t$594 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + _zla( 0, ncols ) * _zla( 0, kmax ) * 48 + 48 * _zla( 0, ncols )
 1874.       t$599 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56
 1899.       t$602 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 56
 1897.       t$605 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 64
 1863.       t$608 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 72
 1873.       t$611 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 80
 1896.       t$614 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 88
 1900.       t$617 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 96
 1901.       t$620 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 48 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 104
 1875.       t$623 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, kmax ) * 104 + 56 * _zla( 0, ncols )
 1888.       t$626 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, kmax ) * 104 + 56 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 16
 1887.       t$629 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 56 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, kmax ) * 112
 1894.       t$632 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, kmax ) * 112 + 64 * _zla( 0, ncols )
 1893.       t$635 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 64 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 120
 1869.       t$638 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + _zla( 0, ncols ) * _zla( 0, kmax ) * 120 + 72 * _zla( 0, ncols )
 1890.       t$641 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 128
 1895.       t$644 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 136
 1871.       t$647 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 144
 1886.       t$650 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 152
 1889.       t$653 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 160
 1892.       t$656 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 168
 1885.       t$659 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 176
 1870.       t$662 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 184
 1881.       t$665 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 192
 1884.       t$668 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 200
 1898.       t$671 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 208
 1883.       t$674 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 216
 1891.       t$677 = t$550 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + _zla( 0, ncols ) * _zla( 0, maxens ) * 16 + 72 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 224
 1910.       $F_A35 = kmax
 1910.       $F_A36 = ncols
 1910.       if ( and( -$F_A36, -$F_A35 ) < 0 ) then
 1910.          $I_L1910_623 = 0
 1910.          do
 1910.             $I_L1910_511 = 0
 1910. !dir$ ivdep
 1910.             do
 1910.                dellat(1 + $I_L1910_511, 1 + $I_L1910_623) = 0.0
 1910.                $I_L1910_511 = 1 + $I_L1910_511
 1910.                if ( $I_L1910_511 >= $F_A36 ) exit
 1910.             enddo
 1910.             $I_L1910_623 = 1 + $I_L1910_623
 1910.             if ( $I_L1910_623 >= $F_A35 ) exit
 1910.          enddo
 1910.       endif
 1910.       $F_A37 = kmax
 1910.       $F_A38 = ncols
 1910.       if ( and( -$F_A38, -$F_A37 ) < 0 ) then
 1910.          $I_L1910_625 = 0
 1910.          do
 1910.             $I_L1910_513 = 0
 1910. !dir$ ivdep
 1910.             do
 1910.                dellaq(1 + $I_L1910_513, 1 + $I_L1910_625) = 0.0
 1910.                $I_L1910_513 = 1 + $I_L1910_513
 1910.                if ( $I_L1910_513 >= $F_A38 ) exit
 1910.             enddo
 1910.             $I_L1910_625 = 1 + $I_L1910_625
 1910.             if ( $I_L1910_625 >= $F_A37 ) exit
 1910.          enddo
 1910.       endif
 1911.       $F_A39 = kmax
 1911.       $F_A40 = ncols
 1911.       if ( and( -$F_A40, -$F_A39 ) < 0 ) then
 1911.          $I_L1911_627 = 0
 1911.          do
 1911.             $I_L1911_515 = 0
 1911. !dir$ ivdep
 1911.             do
 1911.                dellah(1 + $I_L1911_515, 1 + $I_L1911_627) = 0.0
 1911.                $I_L1911_515 = 1 + $I_L1911_515
 1911.                if ( $I_L1911_515 >= $F_A40 ) exit
 1911.             enddo
 1911.             $I_L1911_627 = 1 + $I_L1911_627
 1911.             if ( $I_L1911_627 >= $F_A39 ) exit
 1911.          enddo
 1911.       endif
 1911.       $F_A41 = kmax
 1911.       $F_A42 = ncols
 1911.       if ( and( -$F_A42, -$F_A41 ) < 0 ) then
 1911.          $I_L1911_629 = 0
 1911.          do
 1911.             $I_L1911_517 = 0
 1911. !dir$ ivdep
 1911.             do
 1911.                dellaqc(1 + $I_L1911_517, 1 + $I_L1911_629) = 0.0
 1911.                $I_L1911_517 = 1 + $I_L1911_517
 1911.                if ( $I_L1911_517 >= $F_A42 ) exit
 1911.             enddo
 1911.             $I_L1911_629 = 1 + $I_L1911_629
 1911.             if ( $I_L1911_629 >= $F_A41 ) exit
 1911.          enddo
 1911.       endif
 1912.       $F_A43 = kmax
 1912.       $F_A44 = ncols
 1912.       if ( and( -$F_A44, -$F_A43 ) < 0 ) then
 1912.          $I_L1912_631 = 0
 1912.          do
 1912.             $I_L1912_519 = 0
 1912. !dir$ ivdep
 1912.             do
 1912.                xhe(1 + $I_L1912_519, 1 + $I_L1912_631) = 0.0
 1912.                $I_L1912_519 = 1 + $I_L1912_519
 1912.                if ( $I_L1912_519 >= $F_A44 ) exit
 1912.             enddo
 1912.             $I_L1912_631 = 1 + $I_L1912_631
 1912.             if ( $I_L1912_631 >= $F_A43 ) exit
 1912.          enddo
 1912.       endif
 1915.       $F_A45 = kmax
 1915.       $F_A46 = ncols
 1915.       if ( and( -$F_A46, -$F_A45 ) < 0 ) then
 1915.          $I_L1915_633 = 0
 1915.          do
 1915.             $I_L1915_521 = 0
 1915. !dir$ ivdep
 1915.             do
 1915.                xq(1 + $I_L1915_521, 1 + $I_L1915_633) = 0.0
 1915.                $I_L1915_521 = 1 + $I_L1915_521
 1915.                if ( $I_L1915_521 >= $F_A46 ) exit
 1915.             enddo
 1915.             $I_L1915_633 = 1 + $I_L1915_633
 1915.             if ( $I_L1915_633 >= $F_A45 ) exit
 1915.          enddo
 1915.       endif
 1915.       $F_A47 = kmax
 1915.       $F_A48 = ncols
 1915.       if ( and( -$F_A48, -$F_A47 ) < 0 ) then
 1915.          $I_L1915_635 = 0
 1915.          do
 1915.             $I_L1915_523 = 0
 1915. !dir$ ivdep
 1915.             do
 1915.                xt(1 + $I_L1915_523, 1 + $I_L1915_635) = 0.0
 1915.                $I_L1915_523 = 1 + $I_L1915_523
 1915.                if ( $I_L1915_523 >= $F_A48 ) exit
 1915.             enddo
 1915.             $I_L1915_635 = 1 + $I_L1915_635
 1915.             if ( $I_L1915_635 >= $F_A47 ) exit
 1915.          enddo
 1915.       endif
 1916.       $F_A49 = kmax
 1916.       $F_A50 = ncols
 1916.       if ( and( -$F_A50, -$F_A49 ) < 0 ) then
 1916.          $I_L1916_637 = 0
 1916.          do
 1916.             $I_L1916_525 = 0
 1916. !dir$ ivdep
 1916.             do
 1916.                xqes(1 + $I_L1916_525, 1 + $I_L1916_637) = 0.0
 1916.                $I_L1916_525 = 1 + $I_L1916_525
 1916.                if ( $I_L1916_525 >= $F_A50 ) exit
 1916.             enddo
 1916.             $I_L1916_637 = 1 + $I_L1916_637
 1916.             if ( $I_L1916_637 >= $F_A49 ) exit
 1916.          enddo
 1916.       endif
 1917.       $F_A51 = kmax
 1917.       $F_A52 = ncols
 1917.       if ( and( -$F_A52, -$F_A51 ) < 0 ) then
 1917.          $I_L1917_639 = 0
 1917.          do
 1917.             $I_L1917_527 = 0
 1917. !dir$ ivdep
 1917.             do
 1917.                xhes(1 + $I_L1917_527, 1 + $I_L1917_639) = 0.0
 1917.                $I_L1917_527 = 1 + $I_L1917_527
 1917.                if ( $I_L1917_527 >= $F_A52 ) exit
 1917.             enddo
 1917.             $I_L1917_639 = 1 + $I_L1917_639
 1917.             if ( $I_L1917_639 >= $F_A51 ) exit
 1917.          enddo
 1917.       endif
 1921.       $F_A53 = kmax
 1921.       $F_A54 = ncols
 1921.       if ( and( -$F_A54, -$F_A53 ) < 0 ) then
 1921.          $I_L1921_641 = 0
 1921.          do
 1921.             $I_L1921_529 = 0
 1921. !dir$ ivdep
 1921.             do
 1921.                xt_cup(1 + $I_L1921_529, 1 + $I_L1921_641) = 0.0
 1921.                $I_L1921_529 = 1 + $I_L1921_529
 1921.                if ( $I_L1921_529 >= $F_A54 ) exit
 1921.             enddo
 1921.             $I_L1921_641 = 1 + $I_L1921_641
 1921.             if ( $I_L1921_641 >= $F_A53 ) exit
 1921.          enddo
 1921.       endif
 1921.       $F_A55 = kmax
 1921.       $F_A56 = ncols
 1921.       if ( and( -$F_A56, -$F_A55 ) < 0 ) then
 1921.          $I_L1921_643 = 0
 1921.          do
 1921.             $I_L1921_531 = 0
 1921. !dir$ ivdep
 1921.             do
 1921.                xdby(1 + $I_L1921_531, 1 + $I_L1921_643) = 0.0
 1921.                $I_L1921_531 = 1 + $I_L1921_531
 1921.                if ( $I_L1921_531 >= $F_A56 ) exit
 1921.             enddo
 1921.             $I_L1921_643 = 1 + $I_L1921_643
 1921.             if ( $I_L1921_643 >= $F_A55 ) exit
 1921.          enddo
 1921.       endif
 1922.       $F_A57 = kmax
 1922.       $F_A58 = ncols
 1922.       if ( and( -$F_A58, -$F_A57 ) < 0 ) then
 1922.          $I_L1922_645 = 0
 1922.          do
 1922.             $I_L1922_533 = 0
 1922. !dir$ ivdep
 1922.             do
 1922.                xzu(1 + $I_L1922_533, 1 + $I_L1922_645) = 0.0
 1922.                $I_L1922_533 = 1 + $I_L1922_533
 1922.                if ( $I_L1922_533 >= $F_A58 ) exit
 1922.             enddo
 1922.             $I_L1922_645 = 1 + $I_L1922_645
 1922.             if ( $I_L1922_645 >= $F_A57 ) exit
 1922.          enddo
 1922.       endif
 1922.       $F_A59 = kmax
 1922.       $F_A60 = ncols
 1922.       if ( and( -$F_A60, -$F_A59 ) < 0 ) then
 1922.          $I_L1922_647 = 0
 1922.          do
 1922.             $I_L1922_535 = 0
 1922. !dir$ ivdep
 1922.             do
 1922.                xz(1 + $I_L1922_535, 1 + $I_L1922_647) = 0.0
 1922.                $I_L1922_535 = 1 + $I_L1922_535
 1922.                if ( $I_L1922_535 >= $F_A60 ) exit
 1922.             enddo
 1922.             $I_L1922_647 = 1 + $I_L1922_647
 1922.             if ( $I_L1922_647 >= $F_A59 ) exit
 1922.          enddo
 1922.       endif
 1926.       $F_A63 = kmax
 1926.       $F_A64 = ncols
 1926.       if ( and( -$F_A64, -$F_A63 ) < 0 ) then
 1926.          $I_L1926_649 = 0
 1926.          do
 1926.             $I_L1926_537 = 0
 1926. !dir$ ivdep
 1926.             do
 1926.                xz_cup(1 + $I_L1926_537, 1 + $I_L1926_649) = 0.0
 1926.                $I_L1926_537 = 1 + $I_L1926_537
 1926.                if ( $I_L1926_537 >= $F_A64 ) exit
 1926.             enddo
 1926.             $I_L1926_649 = 1 + $I_L1926_649
 1926.             if ( $I_L1926_649 >= $F_A63 ) exit
 1926.          enddo
 1926.       endif
 1928.       $F_A65 = kmax
 1928.       $F_A66 = ncols
 1928.       if ( and( -$F_A66, -$F_A65 ) < 0 ) then
 1928.          $I_L1928_651 = 0
 1928.          do
 1928.             $I_L1928_539 = 0
 1928. !dir$ ivdep
 1928.             do
 1928.                xhes_cup(1 + $I_L1928_539, 1 + $I_L1928_651) = 0.0
 1928.                $I_L1928_539 = 1 + $I_L1928_539
 1928.                if ( $I_L1928_539 >= $F_A66 ) exit
 1928.             enddo
 1928.             $I_L1928_651 = 1 + $I_L1928_651
 1928.             if ( $I_L1928_651 >= $F_A65 ) exit
 1928.          enddo
 1928.       endif
 1930.       $F_A67 = kmax
 1930.       $F_A68 = ncols
 1930.       if ( and( -$F_A68, -$F_A67 ) < 0 ) then
 1930.          $I_L1930_653 = 0
 1930.          do
 1930.             $I_L1930_541 = 0
 1930. !dir$ ivdep
 1930.             do
 1930.                xhc(1 + $I_L1930_541, 1 + $I_L1930_653) = 0.0
 1930.                $I_L1930_541 = 1 + $I_L1930_541
 1930.                if ( $I_L1930_541 >= $F_A68 ) exit
 1930.             enddo
 1930.             $I_L1930_653 = 1 + $I_L1930_653
 1930.             if ( $I_L1930_653 >= $F_A67 ) exit
 1930.          enddo
 1930.       endif
 1930.       $F_A69 = kmax
 1930.       $F_A70 = ncols
 1930.       if ( and( -$F_A70, -$F_A69 ) < 0 ) then
 1930.          $I_L1930_655 = 0
 1930.          do
 1930.             $I_L1930_543 = 0
 1930. !dir$ ivdep
 1930.             do
 1930.                xhe_cup(1 + $I_L1930_543, 1 + $I_L1930_655) = 0.0
 1930.                $I_L1930_543 = 1 + $I_L1930_543
 1930.                if ( $I_L1930_543 >= $F_A70 ) exit
 1930.             enddo
 1930.             $I_L1930_655 = 1 + $I_L1930_655
 1930.             if ( $I_L1930_655 >= $F_A69 ) exit
 1930.          enddo
 1930.       endif
 1931.       $F_A71 = kmax
 1931.       $F_A72 = ncols
 1931.       if ( and( -$F_A72, -$F_A71 ) < 0 ) then
 1931.          $I_L1931_657 = 0
 1931.          do
 1931.             $I_L1931_545 = 0
 1931. !dir$ ivdep
 1931.             do
 1931.                scr1(1 + $I_L1931_545, 1 + $I_L1931_657) = 0.0
 1931.                $I_L1931_545 = 1 + $I_L1931_545
 1931.                if ( $I_L1931_545 >= $F_A72 ) exit
 1931.             enddo
 1931.             $I_L1931_657 = 1 + $I_L1931_657
 1931.             if ( $I_L1931_657 >= $F_A71 ) exit
 1931.          enddo
 1931.       endif
 1912.       $F_A73 = ncols
 1912.       if ( ncols > 0 ) then
 1912.          $I_L1912_547 = 0
 1912. !dir$ ivdep
 1912.          do
 1912.             edt(1 + $I_L1912_547) = 0.0
 1912.             $I_L1912_547 = 1 + $I_L1912_547
 1912.             if ( $I_L1912_547 >= $F_A73 ) exit
 1912.          enddo
 1912.       endif
 1913.       $F_A74 = ncols
 1913.       if ( ncols > 0 ) then
 1913.          $I_L1913_549 = 0
 1913. !dir$ ivdep
 1913.          do
 1913.             ierr2(1 + $I_L1913_549) = 0
 1913.             $I_L1913_549 = 1 + $I_L1913_549
 1913.             if ( $I_L1913_549 >= $F_A74 ) exit
 1913.          enddo
 1913.       endif
 1914.       $F_A75 = ncols
 1914.       if ( ncols > 0 ) then
 1914.          $I_L1914_551 = 0
 1914. !dir$ ivdep
 1914.          do
 1914.             ierr3(1 + $I_L1914_551) = 0
 1914.             $I_L1914_551 = 1 + $I_L1914_551
 1914.             if ( $I_L1914_551 >= $F_A75 ) exit
 1914.          enddo
 1914.       endif
 1916.       $F_A76 = ncols
 1916.       if ( ncols > 0 ) then
 1916.          $I_L1916_553 = 0
 1916. !dir$ ivdep
 1916.          do
 1916.             edto(1 + $I_L1916_553) = 0.0
 1916.             $I_L1916_553 = 1 + $I_L1916_553
 1916.             if ( $I_L1916_553 >= $F_A76 ) exit
 1916.          enddo
 1916.       endif
 1919.       $F_A77 = ncols
 1919.       if ( ncols > 0 ) then
 1919.          $I_L1919_555 = 0
 1919. !dir$ ivdep
 1919.          do
 1919.             k22x(1 + $I_L1919_555) = 0
 1919.             $I_L1919_555 = 1 + $I_L1919_555
 1919.             if ( $I_L1919_555 >= $F_A77 ) exit
 1919.          enddo
 1919.       endif
 1919.       $F_A78 = ncols
 1919.       if ( ncols > 0 ) then
 1919.          $I_L1919_557 = 0
 1919. !dir$ ivdep
 1919.          do
 1919.             kbconx(1 + $I_L1919_557) = 0
 1919.             $I_L1919_557 = 1 + $I_L1919_557
 1919.             if ( $I_L1919_557 >= $F_A78 ) exit
 1919.          enddo
 1919.       endif
 1920.       $F_A79 = ncols
 1920.       if ( ncols > 0 ) then
 1920.          $I_L1920_559 = 0
 1920. !dir$ ivdep
 1920.          do
 1920.             xaa0(1 + $I_L1920_559) = 0.0
 1920.             $I_L1920_559 = 1 + $I_L1920_559
 1920.             if ( $I_L1920_559 >= $F_A79 ) exit
 1920.          enddo
 1920.       endif
 1931.       $F_A80 = ncols
 1931.       if ( ncols > 0 ) then
 1931.          $I_L1931_561 = 0
 1931. !dir$ ivdep
 1931.          do
 1931.             xhkb(1 + $I_L1931_561) = 0.0
 1931.             $I_L1931_561 = 1 + $I_L1931_561
 1931.             if ( $I_L1931_561 >= $F_A80 ) exit
 1931.          enddo
 1931.       endif
 1917.       $F_A81 = maxens3
 1917.       $F_A82 = ncols
 1917.       if ( and( -$F_A82, -$F_A81 ) < 0 ) then
 1917.          $I_L1917_659 = 0
 1917.          do
 1917.             $I_L1917_563 = 0
 1917. !dir$ ivdep
 1917.             do
 1917.                xff_ens3(1 + $I_L1917_563, 1 + $I_L1917_659) = 0.0
 1917.                $I_L1917_563 = 1 + $I_L1917_563
 1917.                if ( $I_L1917_563 >= $F_A82 ) exit
 1917.             enddo
 1917.             $I_L1917_659 = 1 + $I_L1917_659
 1917.             if ( $I_L1917_659 >= $F_A81 ) exit
 1917.          enddo
 1917.       endif
 1918.       $F_A83 = maxens
 1918.       $F_A84 = ncols
 1918.       if ( and( -$F_A84, -$F_A83 ) < 0 ) then
 1918.          $I_L1918_661 = 0
 1918.          do
 1918.             $I_L1918_565 = 0
 1918. !dir$ ivdep
 1918.             do
 1918.                xk(1 + $I_L1918_565, 1 + $I_L1918_661) = 0.0
 1918.                $I_L1918_565 = 1 + $I_L1918_565
 1918.                if ( $I_L1918_565 >= $F_A84 ) exit
 1918.             enddo
 1918.             $I_L1918_661 = 1 + $I_L1918_661
 1918.             if ( $I_L1918_661 >= $F_A83 ) exit
 1918.          enddo
 1918.       endif
 1918.       $F_A85 = maxens
 1918.       $F_A86 = ncols
 1918.       if ( and( -$F_A86, -$F_A85 ) < 0 ) then
 1918.          $I_L1918_663 = 0
 1918.          do
 1918.             $I_L1918_567 = 0
 1918. !dir$ ivdep
 1918.             do
 1918.                xaa0_ens(1 + $I_L1918_567, 1 + $I_L1918_663) = 0.0
 1918.                $I_L1918_567 = 1 + $I_L1918_567
 1918.                if ( $I_L1918_567 >= $F_A86 ) exit
 1918.             enddo
 1918.             $I_L1918_663 = 1 + $I_L1918_663
 1918.             if ( $I_L1918_663 >= $F_A85 ) exit
 1918.          enddo
 1918.       endif
 1932.       massfld = 0.0
 1936.       if ( maxens22 > 0 ) then
 1936.          $I_L1936_679 = 0
 1936.          do
 1938.             if ( iend + -istart >= 0 ) then
 1938.                $I_L1938_447 = 0
 1938. !dir$ ivdep
 1938.                do
 1939.                   if ( ierr(istart + $I_L1938_447) == 0 ) then
 1940.                      edt(istart + $I_L1938_447) = edtc(istart + $I_L1938_447, 1 + $I_L1936_679)
 1941.                      edto(istart + $I_L1938_447) = edtc(istart + $I_L1938_447, 1 + $I_L1936_679)
 1941.                   endif
 1943.                   $I_L1938_447 = 1 + $I_L1938_447
 1942.                   if ( $I_L1938_447 >= iend + -istart + 1 ) exit
 1942.                enddo
 1961.                $I_L1961_451 = 0
 1961. !dir$ ivdep
 1961.                do
 1961.                   dellah(istart + $I_L1961_451, 1) = 0.0
 1961.                   if ( ierr(istart + $I_L1961_451) == 0 ) then
 1961.                      $dz_S3 = zo_cup(istart + $I_L1961_451, 2) + -zo_cup(istart + $I_L1961_451, 1)
 1961.                      $dp_S8 = 100.0 * ( po_cup(istart + $I_L1961_451, 1) + -po_cup(istart + $I_L1961_451, 2) )
 1961.                      $detdo1_S5 = edto(istart + $I_L1961_451) * zdo(istart + $I_L1961_451, 2) * cdd(istart + $I_L1961_451, 1) * $dz_S3
 1961.                      $detdo2_S4 = edto(istart + $I_L1961_451) * zdo(istart + $I_L1961_451, 1)
 1961.                      $entdo_S7 = edto(istart + $I_L1961_451) * zdo(istart + $I_L1961_451, 2) * mentrd_rate * $dz_S3
 1961.                      $subin_S6 = -( edto(istart + $I_L1961_451) * zdo(istart + $I_L1961_451, 2) )
 1961.                      dellah(istart + $I_L1961_451, 1) = ( 1.0/$dp_S8 * ( ( hcdo(istart + $I_L1961_451, 1) + hcdo(istart + $I_L1961_451, 2) ) * $detdo1_S5 * 5.0e-1 + $detdo2_S4 * hcdo(istart + $I_L1961_451, 1) + $subin_S6 * heo_cup(istart + $I_L1961_451, 2) + -( $entdo_S7 * heo(istart + $I_L1961_451, 1) ) ) * 9.8100000000000005 )
 1961.                   endif
 1961.                   $I_L1961_451 = 1 + $I_L1961_451
 1961.                   if ( $I_L1961_451 >= iend + -istart + 1 ) exit
 1961.                enddo
 1978.                $I_L1978_453 = 0
 1978. !dir$ ivdep
 1978.                do
 1978.                   dellaq(istart + $I_L1978_453, 1) = 0.0
 1978.                   if ( ierr(istart + $I_L1978_453) == 0 ) then
 1978.                      $dz_S10 = zo_cup(istart + $I_L1978_453, 2) + -zo_cup(istart + $I_L1978_453, 1)
 1978.                      $dp_S15 = 100.0 * ( po_cup(istart + $I_L1978_453, 1) + -po_cup(istart + $I_L1978_453, 2) )
 1978.                      $detdo1_S12 = edto(istart + $I_L1978_453) * zdo(istart + $I_L1978_453, 2) * cdd(istart + $I_L1978_453, 1) * $dz_S10
 1978.                      $detdo2_S11 = edto(istart + $I_L1978_453) * zdo(istart + $I_L1978_453, 1)
 1978.                      $entdo_S14 = edto(istart + $I_L1978_453) * zdo(istart + $I_L1978_453, 2) * mentrd_rate * $dz_S10
 1978.                      $subin_S13 = -( edto(istart + $I_L1978_453) * zdo(istart + $I_L1978_453, 2) )
 1978.                      dellaq(istart + $I_L1978_453, 1) = ( 1.0/$dp_S15 * ( ( qrcdo(istart + $I_L1978_453, 1) + qrcdo(istart + $I_L1978_453, 2) ) * $detdo1_S12 * 5.0e-1 + $detdo2_S11 * qrcdo(istart + $I_L1978_453, 1) + $subin_S13 * qo_cup(istart + $I_L1978_453, 2) + -( $entdo_S14 * qo(istart + $I_L1978_453, 1) ) ) * 9.8100000000000005 )
 1978.                   endif
 1978.                   $I_L1978_453 = 1 + $I_L1978_453
 1978.                   if ( $I_L1978_453 >= iend + -istart + 1 ) exit
 1978.                enddo
 1978.             endif
 1945.             if ( kmax > 0 ) then
 1946.                if ( iend + -istart >= 0 ) then
 1945.                   $I_L1945_589 = 0
 1945.                   do
 1946.                      $I_L1946_449 = 0
 1946. !dir$ ivdep
 1946.                      do
 1947.                         dellat_ens(istart + $I_L1946_449, 1 + $I_L1945_589, 1 + $I_L1936_679) = 0.0
 1948.                         dellaq_ens(istart + $I_L1946_449, 1 + $I_L1945_589, 1 + $I_L1936_679) = 0.0
 1949.                         dellaqc_ens(istart + $I_L1946_449, 1 + $I_L1945_589, 1 + $I_L1936_679) = 0.0
 1950.                         pwo_ens(istart + $I_L1946_449, 1 + $I_L1945_589, 1 + $I_L1936_679) = 0.0
 1951.                         $I_L1946_449 = 1 + $I_L1946_449
 1946.                         if ( $I_L1946_449 >= iend + -istart + 1 ) exit
 1946.                      enddo
 1952.                      $I_L1945_589 = 1 + $I_L1945_589
 1951.                      if ( $I_L1945_589 >= kmax ) exit
 1951.                   enddo
 1951.                endif
 1951.             endif
 1961.             t$57 = ncols
 1961.             t$58 = kmax
 1961.             t$759 = max( 0, ncols )
 1961.             t$760 = ncols
 1961.             t$761 = max( 0, kmax )
 1961.             t$762 = ( ncols * kmax )
 1978.             t$57 = ncols
 1978.             t$58 = kmax
 1978.             t$759 = max( 0, ncols )
 1978.             t$760 = ncols
 1978.             t$761 = max( 0, kmax )
 1978.             t$762 = ( ncols * kmax )
 1998.             ipa$2420 = loc( k22(1) )
 1998.             k22 = _copyin( k22(1) )
 1998.             ipa$2422 = loc( k22(1) )
 1998.             kpbl = _copyin( k22(1) )
 1998.             t$59 = ncols
 1998.             t$763 = max( 0, ncols )
 1998.             t$60 = kmax
 1998.             t$764 = ncols
 1998.             t$765 = max( 0, kmax )
 1998.             t$766 = ( ncols * kmax )
 1998.             t$769 = 4 * ncols
 1998.             t$767 = int( _alloc( 4 * ncols ), 8 )
 1998.             t$768 = t$767
 1998.             $F_A87 = ncols
 1998.             if ( ncols > 0 ) then
 1998.                $I_L1998_569 = 0
 1998. !dir$ ivdep
 1998.                do
 1998.                   ier(1 + $I_L1998_569) = 0
 1998.                   $I_L1998_569 = 1 + $I_L1998_569
 1998.                   if ( $I_L1998_569 >= $F_A87 ) exit
 1998.                enddo
 1998.             endif
 1998.             if ( -2 + kmax >= 0 ) then
 1998.                if ( iend + -istart >= 0 ) then
 1998.                   $I_L1998_591 = 0
 1998.                   do
 1998.                      $I_L1998_455 = 0
 1998. !dir$ ivdep
 1998.                      do
 1998.                         dellah(istart + $I_L1998_455, 2 + $I_L1998_591) = 0.0
 1998.                         $I_L1998_455 = 1 + $I_L1998_455
 1998.                         if ( $I_L1998_455 >= iend + -istart + 1 ) exit
 1998.                      enddo
 1998.                      $I_L1998_591 = 1 + $I_L1998_591
 1998.                      if ( $I_L1998_591 >= -1 + kmax ) exit
 1998.                   enddo
 1998.                   $SI_L1998_457_G7 = 0
 1998.                   do
 1998.                      $I_L1998_593 = 0
 1998. !dir$ ivdep
 1998. !dir$ blocking_size( 0, 0 )
 1998.                      do
 1998.                         $SCA_ierr_I4 = ierr(istart + $I_L1998_593)
 1998.                         $I_L1998_681 = 0
 1998. !dir$ blocking_size( 256, 256 )
 1998.                         do
 1998.                            if ( $SCA_ierr_I4 == 0 ) then
 1998.                               if ( ( $I_L1998_681 + 256 * $SI_L1998_457_G7 + 2 ) <= ktop(istart + $I_L1998_593) ) then
 1998.                                  $dz_S22 = zo_cup(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 3) + -zo_cup(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 2)
 1998.                                  $detdo_S28 = edto(istart + $I_L1998_593) * cdd(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 2) * $dz_S22 * zdo(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 3)
 1998.                                  $entdo_S27 = edto(istart + $I_L1998_593) * mentrd_rate * $dz_S22 * zdo(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 3)
 1998.                                  $subin_S24 = zuo(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 3) + -( zdo(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 3) * edto(istart + $I_L1998_593) )
 1998.                                  $entup_S26 = 0.0
 1998.                                  $detup_S25 = 0.0
 1998.                                  $subdown_S23 = ( zuo(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 2) + -( zdo(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 2) * edto(istart + $I_L1998_593) ) )
 1998.                                  $entdoj_S30 = 0.0
 1998.                                  $entupk_S29 = 0.0
 1998.                                  $detupk_S31 = 0.0
 1998.                                  if ( ( $I_L1998_681 + 256 * $SI_L1998_457_G7 + 2 ) < kbcon(istart + $I_L1998_593) ) then
 1998.                                     $detup_S25 = 0.0
 1998.                                  else if ( ( $I_L1998_681 + 256 * $SI_L1998_457_G7 + 2 ) < ktop(istart + $I_L1998_593) ) then
 1998.                                     $entup_S26 = mentr_rate * $dz_S22 * zuo(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 2)
 1998.                                     $detup_S25 = cd(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 3) * $dz_S22 * zuo(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 2)
 1998.                                  endif
 1998.                                  if ( jmin(istart + $I_L1998_593) + -$I_L1998_681 + -256 * $SI_L1998_457_G7 + -2 == 0 ) then
 1998.                                     $entdoj_S30 = edto(istart + $I_L1998_593) * zdo(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 2)
 1998.                                  endif
 1998.                                  if ( k22(istart + $I_L1998_593) + -$I_L1998_681 + -256 * $SI_L1998_457_G7 + -3 == 0 ) then
 1998.                                     $entupk_S29 = zuo(istart + $I_L1998_593, kpbl(istart + $I_L1998_593))
 1998.                                  endif
 1998.                                  if ( ( $I_L1998_681 + 256 * $SI_L1998_457_G7 + 2 ) > kdet(istart + $I_L1998_593) ) then
 1998.                                     $detdo_S28 = 0.0
 1998.                                  endif
 1998.                                  if ( ktop(istart + $I_L1998_593) + -$I_L1998_681 + -256 * $SI_L1998_457_G7 + -2 == 0 ) then
 1998.                                     $detupk_S31 = zuo(istart + $I_L1998_593, ktop(istart + $I_L1998_593))
 1998.                                     $subin_S24 = 0.0
 1998.                                  endif
 1998.                                  if ( abs( $subin_S24 + -$subdown_S23 + $detup_S25 + -$entup_S26 + -$entdo_S27 + $detdo_S28 + -$entupk_S29 + -$entdoj_S30 + $detupk_S31 ) > 9.9999999999999995e-7 ) then
 1998.                                     ier(istart + $I_L1998_593) = 1
 1998.                                  endif
 1998.                                  $dp_S32 = 100.0 * ( po_cup(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 2) + -po_cup(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 3) )
 1998.                                  dellah(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 2) = ( 1.0/$dp_S32 * ( $subin_S24 * heo_cup(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 3) + -( $subdown_S23 * heo_cup(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 2) ) + ( hco(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 3) + hco(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 2) ) * $detup_S25 * 5.0e-1 + ( hcdo(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 3) + hcdo(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 2) ) * $detdo_S28 * 5.0e-1 + -( $entup_S26 * heo(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 2) ) + -( $entdo_S27 * heo(istart + $I_L1998_593, $I_L1998_681 + 256 * $SI_L1998_457_G7 + 2) ) + -( $entupk_S29 * heo_cup(istart + $I_L1998_593, k22(istart + $I_L1998_593)) ) + -( $entdoj_S30 * heo_cup(istart + $I_L1998_593, jmin(istart + $I_L1998_593)) ) + $detupk_S31 * hco(istart + $I_L1998_593, ktop(istart + $I_L1998_593)) ) * 9.8100000000000005 )
 1998.                               endif
 1998.                            endif
 1998.                            $I_L1998_681 = 1 + $I_L1998_681
 1998.                            if ( $I_L1998_681 >= min( -1 + kmax, 256 + 256 * $SI_L1998_457_G7 ) + -256 * $SI_L1998_457_G7 ) exit
 1998.                         enddo
 1998.                         $I_L1998_593 = 1 + $I_L1998_593
 1998.                         if ( $I_L1998_593 >= iend + -istart + 1 ) exit
 1998.                      enddo
 1998.                      $SI_L1998_457_G7 = 1 + $SI_L1998_457_G7
 1998.                      if ( $SI_L1998_457_G7 >= _rsh( 254 + kmax, 8 ) ) exit
 1998.                   enddo
 1998.                endif
 1998.             endif
 1998.             $Reduc_A88 = .false.
 1998.             $F_A90 = ncols
 1998.             if ( ncols > 0 ) then
 1998.                $I_L1998_571 = 0
 1998. !dir$ ivdep
 1998.                do
 1998.                   if ( ier(1 + $I_L1998_571) /= 0 ) then
 1998.                      $Reduc_A88 = .true.
 1998.                      goto 10
 1998.                   endif
 1998.                   $I_L1998_571 = 1 + $I_L1998_571
 1998.                   if ( $I_L1998_571 >= $F_A90 ) exit
 1998.                enddo
 1998.             endif
 1998.    10       continue
 1998.             if ( $Reduc_A88 ) then
 1998.                _fwrite( _clist( 0, 0, 3, 0, Null_Arg, Null_Arg, t$62,  _substr(t$61,1,30), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1998.                 _substr(t$1358,1,25) = '** ERROR AT cup_dellas **'
 1998.                call _stop(  _substr(t$1358,1,25) )
 1998.             else
 1998.                _free( t$767 )
 1998.             endif
 1998.             k22(1) = _copyout( kpbl )
 1998.             k22(1) = _copyout( k22 )
 2028.             if ( kmax > 0 ) then
 2029.                if ( iend + -istart >= 0 ) then
 2028.                   $SI_L2028_459_G10 = 0
 2028.                   do
 2029.                      $I_L2029_595 = 0
 2029. !dir$ ivdep
 2029. !dir$ blocking_size( 0, 0 )
 2029.                      do
 2028.                         $SCA_ierr_I5 = ierr(istart + $I_L2029_595)
 2028.                         $I_L2028_684 = 0
 2028. !dir$ blocking_size( 256, 256 )
 2028.                         do
 2030.                            scr1(istart + $I_L2029_595, $I_L2028_684 + 256 * $SI_L2028_459_G10 + 1) = 0.0
 2031.                            dellaqc(istart + $I_L2029_595, $I_L2028_684 + 256 * $SI_L2028_459_G10 + 1) = 0.0
 2032.                            if ( $SCA_ierr_I5 == 0 ) then
 2033.                               scr1(istart + $I_L2029_595, $I_L2028_684 + 256 * $SI_L2028_459_G10 + 1) = qco(istart + $I_L2029_595, $I_L2028_684 + 256 * $SI_L2028_459_G10 + 1) + -qrco(istart + $I_L2029_595, $I_L2028_684 + 256 * $SI_L2028_459_G10 + 1)
 2034.                               if ( ktop(istart + $I_L2029_595) + -$I_L2028_684 + -256 * $SI_L2028_459_G10 + -1 == 0 ) then
 2034.                                  dellaqc(istart + $I_L2029_595, $I_L2028_684 + 256 * $SI_L2028_459_G10 + 1) = ( qrco(istart + $I_L2029_595, ktop(istart + $I_L2029_595)) * zuo(istart + $I_L2029_595, ktop(istart + $I_L2029_595)) * 1.0/( po_cup(istart + $I_L2029_595, $I_L2028_684 + 256 * $SI_L2028_459_G10 + 1) + -po_cup(istart + $I_L2029_595, $I_L2028_684 + 256 * $SI_L2028_459_G10 + 2) ) * 9.8100000000000007e-2 )
 2034.                               endif
 2038.                               if ( ( $I_L2028_684 + 256 * $SI_L2028_459_G10 + 1 ) < ktop(istart + $I_L2029_595) ) then
 2038.                                  if ( ( $I_L2028_684 + 256 * $SI_L2028_459_G10 + 1 ) > kbcon(istart + $I_L2029_595) ) then
 2039.                                     $dz_S36 = zo_cup(istart + $I_L2029_595, $I_L2028_684 + 256 * $SI_L2028_459_G10 + 2) + -zo_cup(istart + $I_L2029_595, $I_L2028_684 + 256 * $SI_L2028_459_G10 + 1)
 2040.                                     dellaqc(istart + $I_L2029_595, $I_L2028_684 + 256 * $SI_L2028_459_G10 + 1) = ( $dz_S36 * cd(istart + $I_L2029_595, $I_L2028_684 + 256 * $SI_L2028_459_G10 + 1) * zuo(istart + $I_L2029_595, $I_L2028_684 + 256 * $SI_L2028_459_G10 + 1) * ( qrco(istart + $I_L2029_595, $I_L2028_684 + 256 * $SI_L2028_459_G10 + 1) + qrco(istart + $I_L2029_595, $I_L2028_684 + 256 * $SI_L2028_459_G10 + 2) ) * 1.0/( po_cup(istart + $I_L2029_595, $I_L2028_684 + 256 * $SI_L2028_459_G10 + 1) + -po_cup(istart + $I_L2029_595, $I_L2028_684 + 256 * $SI_L2028_459_G10 + 2) ) * 4.9050000000000003e-2 )
 2040.                                  endif
 2040.                               endif
 2040.                            endif
 2028.                            $I_L2028_684 = 1 + $I_L2028_684
 2044.                            if ( $I_L2028_684 >= min( kmax, 256 + 256 * $SI_L2028_459_G10 ) + -256 * $SI_L2028_459_G10 ) exit
 2044.                         enddo
 2045.                         $I_L2029_595 = 1 + $I_L2029_595
 2045.                         if ( $I_L2029_595 >= iend + -istart + 1 ) exit
 2045.                      enddo
 2028.                      $SI_L2028_459_G10 = 1 + $SI_L2028_459_G10
 2045.                      if ( $SI_L2028_459_G10 >= _rsh( 255 + kmax, 8 ) ) exit
 2045.                   enddo
 2045.                endif
 2045.             endif
 2048.             ipa$2484 = loc( k22(1) )
 2048.             k22 = _copyin( k22(1) )
 2048.             ipa$2486 = loc( k22(1) )
 2048.             kpbl = _copyin( k22(1) )
 2048.             t$59 = ncols
 2048.             t$763 = max( 0, ncols )
 2048.             t$60 = kmax
 2048.             t$764 = ncols
 2048.             t$765 = max( 0, kmax )
 2048.             t$766 = ( ncols * kmax )
 2048.             t$769 = 4 * ncols
 2048.             t$767 = int( _alloc( 4 * ncols ), 8 )
 2048.             t$768 = t$767
 2048.             $F_A91 = ncols
 2048.             if ( ncols > 0 ) then
 2048.                $I_L2048_573 = 0
 2048. !dir$ ivdep
 2048.                do
 2048.                   ier(1 + $I_L2048_573) = 0
 2048.                   $I_L2048_573 = 1 + $I_L2048_573
 2048.                   if ( $I_L2048_573 >= $F_A91 ) exit
 2048.                enddo
 2048.             endif
 2048.             if ( -2 + kmax >= 0 ) then
 2048.                if ( iend + -istart >= 0 ) then
 2048.                   $I_L2048_597 = 0
 2048.                   do
 2048.                      $I_L2048_461 = 0
 2048. !dir$ ivdep
 2048.                      do
 2048.                         dellaq(istart + $I_L2048_461, 2 + $I_L2048_597) = 0.0
 2048.                         $I_L2048_461 = 1 + $I_L2048_461
 2048.                         if ( $I_L2048_461 >= iend + -istart + 1 ) exit
 2048.                      enddo
 2048.                      $I_L2048_597 = 1 + $I_L2048_597
 2048.                      if ( $I_L2048_597 >= -1 + kmax ) exit
 2048.                   enddo
 2048.                   $SI_L2048_463_G13 = 0
 2048.                   do
 2048.                      $I_L2048_599 = 0
 2048. !dir$ ivdep
 2048. !dir$ blocking_size( 0, 0 )
 2048.                      do
 2048.                         $SCA_ierr_I6 = ierr(istart + $I_L2048_599)
 2048.                         $I_L2048_687 = 0
 2048. !dir$ blocking_size( 256, 256 )
 2048.                         do
 2048.                            if ( $SCA_ierr_I6 == 0 ) then
 2048.                               if ( ( $I_L2048_687 + 256 * $SI_L2048_463_G13 + 2 ) <= ktop(istart + $I_L2048_599) ) then
 2048.                                  $dz_S41 = zo_cup(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 3) + -zo_cup(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 2)
 2048.                                  $detdo_S47 = edto(istart + $I_L2048_599) * cdd(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 2) * $dz_S41 * zdo(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 3)
 2048.                                  $entdo_S46 = edto(istart + $I_L2048_599) * mentrd_rate * $dz_S41 * zdo(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 3)
 2048.                                  $subin_S43 = zuo(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 3) + -( zdo(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 3) * edto(istart + $I_L2048_599) )
 2048.                                  $entup_S45 = 0.0
 2048.                                  $detup_S44 = 0.0
 2048.                                  $subdown_S42 = ( zuo(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 2) + -( zdo(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 2) * edto(istart + $I_L2048_599) ) )
 2048.                                  $entdoj_S49 = 0.0
 2048.                                  $entupk_S48 = 0.0
 2048.                                  $detupk_S50 = 0.0
 2048.                                  if ( ( $I_L2048_687 + 256 * $SI_L2048_463_G13 + 2 ) < kbcon(istart + $I_L2048_599) ) then
 2048.                                     $detup_S44 = 0.0
 2048.                                  else if ( ( $I_L2048_687 + 256 * $SI_L2048_463_G13 + 2 ) < ktop(istart + $I_L2048_599) ) then
 2048.                                     $entup_S45 = mentr_rate * $dz_S41 * zuo(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 2)
 2048.                                     $detup_S44 = cd(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 3) * $dz_S41 * zuo(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 2)
 2048.                                  endif
 2048.                                  if ( jmin(istart + $I_L2048_599) + -$I_L2048_687 + -256 * $SI_L2048_463_G13 + -2 == 0 ) then
 2048.                                     $entdoj_S49 = edto(istart + $I_L2048_599) * zdo(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 2)
 2048.                                  endif
 2048.                                  if ( k22(istart + $I_L2048_599) + -$I_L2048_687 + -256 * $SI_L2048_463_G13 + -3 == 0 ) then
 2048.                                     $entupk_S48 = zuo(istart + $I_L2048_599, kpbl(istart + $I_L2048_599))
 2048.                                  endif
 2048.                                  if ( ( $I_L2048_687 + 256 * $SI_L2048_463_G13 + 2 ) > kdet(istart + $I_L2048_599) ) then
 2048.                                     $detdo_S47 = 0.0
 2048.                                  endif
 2048.                                  if ( ktop(istart + $I_L2048_599) + -$I_L2048_687 + -256 * $SI_L2048_463_G13 + -2 == 0 ) then
 2048.                                     $detupk_S50 = zuo(istart + $I_L2048_599, ktop(istart + $I_L2048_599))
 2048.                                     $subin_S43 = 0.0
 2048.                                  endif
 2048.                                  if ( abs( $subin_S43 + -$subdown_S42 + $detup_S44 + -$entup_S45 + -$entdo_S46 + $detdo_S47 + -$entupk_S48 + -$entdoj_S49 + $detupk_S50 ) > 9.9999999999999995e-7 ) then
 2048.                                     ier(istart + $I_L2048_599) = 1
 2048.                                  endif
 2048.                                  $dp_S51 = 100.0 * ( po_cup(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 2) + -po_cup(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 3) )
 2048.                                  dellaq(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 2) = ( 1.0/$dp_S51 * ( $subin_S43 * qo_cup(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 3) + -( $subdown_S42 * qo_cup(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 2) ) + ( scr1(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 3) + scr1(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 2) ) * $detup_S44 * 5.0e-1 + ( qrcdo(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 3) + qrcdo(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 2) ) * $detdo_S47 * 5.0e-1 + -( $entup_S45 * qo(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 2) ) + -( $entdo_S46 * qo(istart + $I_L2048_599, $I_L2048_687 + 256 * $SI_L2048_463_G13 + 2) ) + -( $entupk_S48 * qo_cup(istart + $I_L2048_599, k22(istart + $I_L2048_599)) ) + -( $entdoj_S49 * qo_cup(istart + $I_L2048_599, jmin(istart + $I_L2048_599)) ) + $detupk_S50 * scr1(istart + $I_L2048_599, ktop(istart + $I_L2048_599)) ) * 9.8100000000000005 )
 2048.                               endif
 2048.                            endif
 2048.                            $I_L2048_687 = 1 + $I_L2048_687
 2048.                            if ( $I_L2048_687 >= min( -1 + kmax, 256 + 256 * $SI_L2048_463_G13 ) + -256 * $SI_L2048_463_G13 ) exit
 2048.                         enddo
 2048.                         $I_L2048_599 = 1 + $I_L2048_599
 2048.                         if ( $I_L2048_599 >= iend + -istart + 1 ) exit
 2048.                      enddo
 2048.                      $SI_L2048_463_G13 = 1 + $SI_L2048_463_G13
 2048.                      if ( $SI_L2048_463_G13 >= _rsh( 254 + kmax, 8 ) ) exit
 2048.                   enddo
 2048.                endif
 2048.             endif
 2048.             $Reduc_A92 = .false.
 2048.             $F_A94 = ncols
 2048.             if ( ncols > 0 ) then
 2048.                $I_L2048_575 = 0
 2048. !dir$ ivdep
 2048.                do
 2048.                   if ( ier(1 + $I_L2048_575) /= 0 ) then
 2048.                      $Reduc_A92 = .true.
 2048.                      goto 20
 2048.                   endif
 2048.                   $I_L2048_575 = 1 + $I_L2048_575
 2048.                   if ( $I_L2048_575 >= $F_A94 ) exit
 2048.                enddo
 2048.             endif
 2048.    20       continue
 2048.             if ( $Reduc_A92 ) then
 2048.                _fwrite( _clist( 0, 0, 3, 0, Null_Arg, Null_Arg, t$62,  _substr(t$61,1,30), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2048.                 _substr(t$1358,1,25) = '** ERROR AT cup_dellas **'
 2048.                call _stop(  _substr(t$1358,1,25) )
 2048.             else
 2048.                _free( t$767 )
 2048.             endif
 2048.             k22(1) = _copyout( kpbl )
 2048.             k22(1) = _copyout( k22 )
 2081.             if ( maxens > 0 ) then
 2082.                if ( iend + -istart >= 0 ) then
 2081.                   $I_L2081_601 = 0
 2081.                   do
 2082.                      $I_L2082_465 = 0
 2082. !dir$ ivdep
 2082.                      do
 2083.                         xaa0_ens(istart + $I_L2082_465, 1 + $I_L2081_601) = 0.0
 2084.                         $I_L2082_465 = 1 + $I_L2082_465
 2082.                         if ( $I_L2082_465 >= iend + -istart + 1 ) exit
 2082.                      enddo
 2085.                      $I_L2081_601 = 1 + $I_L2081_601
 2084.                      if ( $I_L2081_601 >= maxens ) exit
 2084.                   enddo
 2084.                endif
 2084.             endif
 2089.             if ( -1 + kmax > 0 ) then
 2090.                if ( iend + -istart >= 0 ) then
 2090.                   $SI_L2090_467_G16 = 0
 2090.                   do
 2089.                      $I_L2089_603 = 0
 2089. !dir$ ivdep
 2089. !dir$ blocking_size( 0, 0 )
 2089.                      do
 2090.                         $I_L2090_690 = 0
 2090. !dir$ blocking_size( 256, 256 )
 2090.                         do
 2091.                            dellat(istart + $I_L2090_690 + 256 * $SI_L2090_467_G16, 1 + $I_L2089_603) = 0.0
 2092.                            if ( ierr(istart + $I_L2090_690 + 256 * $SI_L2090_467_G16) == 0 ) then
 2093.                               xhe(istart + $I_L2090_690 + 256 * $SI_L2090_467_G16, 1 + $I_L2089_603) = dellah(istart + $I_L2090_690 + 256 * $SI_L2090_467_G16, 1 + $I_L2089_603) * mbdt + heo(istart + $I_L2090_690 + 256 * $SI_L2090_467_G16, 1 + $I_L2089_603)
 2094.                               $xq_WR0_R1 = dellaq(istart + $I_L2090_690 + 256 * $SI_L2090_467_G16, 1 + $I_L2089_603) * mbdt + qo(istart + $I_L2090_690 + 256 * $SI_L2090_467_G16, 1 + $I_L2089_603)
 2094.                               xq(istart + $I_L2090_690 + 256 * $SI_L2090_467_G16, 1 + $I_L2089_603) = $xq_WR0_R1
 2095.                               $dellat_WR0_R0 = 9.9601593625498006e-4 * ( dellah(istart + $I_L2090_690 + 256 * $SI_L2090_467_G16, 1 + $I_L2089_603) + -2500000.0 * dellaq(istart + $I_L2090_690 + 256 * $SI_L2090_467_G16, 1 + $I_L2089_603) )
 2095.                               dellat(istart + $I_L2090_690 + 256 * $SI_L2090_467_G16, 1 + $I_L2089_603) = $dellat_WR0_R0
 2096.                               xt(istart + $I_L2090_690 + 256 * $SI_L2090_467_G16, 1 + $I_L2089_603) = $dellat_WR0_R0 * mbdt + tn(istart + $I_L2090_690 + 256 * $SI_L2090_467_G16, 1 + $I_L2089_603)
 2097.                               if ( $xq_WR0_R1 <= 0.0 ) then
 2097.                                  xq(istart + $I_L2090_690 + 256 * $SI_L2090_467_G16, 1 + $I_L2089_603) = 1.0e-8
 2097.                               endif
 2097.                            endif
 2090.                            $I_L2090_690 = 1 + $I_L2090_690
 2098.                            if ( $I_L2090_690 >= min( iend + -istart + 1, 256 + 256 * $SI_L2090_467_G16 ) + -256 * $SI_L2090_467_G16 ) exit
 2098.                         enddo
 2100.                         $I_L2089_603 = 1 + $I_L2089_603
 2100.                         if ( $I_L2089_603 >= -1 + kmax ) exit
 2100.                      enddo
 2090.                      $SI_L2090_467_G16 = 1 + $SI_L2090_467_G16
 2099.                      if ( $SI_L2090_467_G16 >= _rsh( iend + -istart + 256, 8 ) ) exit
 2099.                   enddo
 2099.                endif
 2099.             endif
 2103.             if ( iend + -istart >= 0 ) then
 2103.                $I_L2103_469 = 0
 2103. !dir$ ivdep
 2103.                do
 2104.                   if ( ierr(istart + $I_L2103_469) == 0 ) then
 2105.                      xhe(istart + $I_L2103_469, kmax) = heo(istart + $I_L2103_469, kmax)
 2106.                      $xq_WR0_R2 = qo(istart + $I_L2103_469, kmax)
 2106.                      xq(istart + $I_L2103_469, kmax) = $xq_WR0_R2
 2107.                      xt(istart + $I_L2103_469, kmax) = tn(istart + $I_L2103_469, kmax)
 2108.                      if ( $xq_WR0_R2 <= 0.0 ) then
 2108.                         xq(istart + $I_L2103_469, kmax) = 1.0e-8
 2108.                      endif
 2108.                   endif
 2110.                   $I_L2103_469 = 1 + $I_L2103_469
 2109.                   if ( $I_L2103_469 >= iend + -istart + 1 ) exit
 2109.                enddo
 2109.             endif
 2114.             t$25 = ncols
 2114.             t$26 = kmax
 2114.             t$679 = max( 0, ncols )
 2114.             t$680 = ncols
 2114.             t$681 = max( 0, kmax )
 2114.             t$682 = ( ncols * kmax )
 2114.             t$685 = ncols * kmax * 8
 2114.             t$683 = int( _alloc( ncols * kmax * 8 ), 8 )
 2114.             t$684 = t$683
 2114.             if ( kmax > 0 ) then
 2114.                $SC_be_I2 = be(1)
 2114.                $SC_ae_I3 = ae(1)
 2114.                $SC_be_I0 = be(2)
 2114.                $SC_ae_I1 = ae(2)
 2114.                if ( iend + -istart >= 0 ) then
 2114.                   $SI_L2114_471_G19 = 0
 2114.                   do
 2114.                      $I_L2114_605 = 0
 2114. !dir$ ivdep
 2114. !dir$ blocking_size( 0, 0 )
 2114.                      do
 2114.                         $I_L2114_693 = 0
 2114. !dir$ unroll 2
 2114. !dir$ blocking_size( 256, 256 )
 2114.                         do
 2114.                            if ( ierr(istart + $I_L2114_693 + 256 * $SI_L2114_471_G19) == 0 ) then
 2114.                               if ( xt(istart + $I_L2114_693 + 256 * $SI_L2114_471_G19, 1 + $I_L2114_605) <= 273.14999999999998 ) then
 2114.                                  $es5_S60 = _expn( $SC_ae_I1 + -( $SC_be_I0 * 1.0/xt(istart + $I_L2114_693 + 256 * $SI_L2114_471_G19, 1 + $I_L2114_605) ) )
 2114.                               else
 2114.                                  $es5_S60 = _expn( $SC_ae_I3 + -( $SC_be_I2 * 1.0/xt(istart + $I_L2114_693 + 256 * $SI_L2114_471_G19, 1 + $I_L2114_605) ) )
 2114.                               endif
 2114.                               $xqes_WR0_R3 = ( 1.0/( 100.0 * po(istart + $I_L2114_693 + 256 * $SI_L2114_471_G19, 1 + $I_L2114_605) + -$es5_S60 ) * $es5_S60 * 6.22e-1 )
 2114.                               $xqes_WR0_R3 = max( 1.0e-8, $xqes_WR0_R3 )
 2114.                               xqes(istart + $I_L2114_693 + 256 * $SI_L2114_471_G19, 1 + $I_L2114_605) = $xqes_WR0_R3
 2114.                               xq(istart + $I_L2114_693 + 256 * $SI_L2114_471_G19, 1 + $I_L2114_605) = min( $xqes_WR0_R3, xq(istart + $I_L2114_693 + 256 * $SI_L2114_471_G19, 1 + $I_L2114_605) )
 2114.                            endif
 2114.                            $I_L2114_693 = 1 + $I_L2114_693
 2114.                            if ( $I_L2114_693 >= min( iend + -istart + 1, 256 + 256 * $SI_L2114_471_G19 ) + -256 * $SI_L2114_471_G19 ) exit
 2114.                         enddo
 2114.                         $I_L2114_605 = 1 + $I_L2114_605
 2114.                         if ( $I_L2114_605 >= kmax ) exit
 2114.                      enddo
 2114.                      $SI_L2114_471_G19 = 1 + $SI_L2114_471_G19
 2114.                      if ( $SI_L2114_471_G19 >= _rsh( iend + -istart + 256, 8 ) ) exit
 2114.                   enddo
 2114.                   $I_L2114_607 = 0
 2114. !dir$ blocking_size( 0, 0 )
 2114.                   do
 2114.                      $I_L2114_473 = 0
 2114. !dir$ ivdep
 2114. !dir$ blocking_size( 0, 0 )
 2114.                      do
 2114.                         if ( ierr(istart + $I_L2114_473) == 0 ) then
 2114.                            $xz_WR0_R4 = 1.019367991845056e-1 * ( xhe(istart + $I_L2114_473, 1 + $I_L2114_607) + -1004.0 * xt(istart + $I_L2114_473, 1 + $I_L2114_607) + -2500000.0 * xq(istart + $I_L2114_473, 1 + $I_L2114_607) )
 2114.                            $xz_WR0_R4 = max( 1.0e-3, $xz_WR0_R4 )
 2114.                            xz(istart + $I_L2114_473, 1 + $I_L2114_607) = $xz_WR0_R4
 2114.                            $xhes_WR0_R5 = 9.8100000000000005 * $xz_WR0_R4 + 1004.0 * xt(istart + $I_L2114_473, 1 + $I_L2114_607) + 2500000.0 * xqes(istart + $I_L2114_473, 1 + $I_L2114_607)
 2114.                            xhes(istart + $I_L2114_473, 1 + $I_L2114_607) = $xhes_WR0_R5
 2114.                            xhe(istart + $I_L2114_473, 1 + $I_L2114_607) = min( $xhes_WR0_R5, xhe(istart + $I_L2114_473, 1 + $I_L2114_607) )
 2114.                         endif
 2114.                         $I_L2114_473 = 1 + $I_L2114_473
 2114.                         if ( $I_L2114_473 >= iend + -istart + 1 ) exit
 2114.                      enddo
 2114.                      $I_L2114_607 = 1 + $I_L2114_607
 2114.                      if ( $I_L2114_607 >= kmax ) exit
 2114.                   enddo
 2114.                endif
 2114.             endif
 2114.             _free( t$683 )
 2133.             t$27 = ncols
 2133.             t$28 = kmax
 2133.             t$686 = max( 0, ncols )
 2133.             t$687 = ncols
 2133.             t$688 = max( 0, kmax )
 2133.             t$689 = ( ncols * kmax )
 2133.             if ( -2 + kmax >= 0 ) then
 2133.                if ( iend + -istart >= 0 ) then
 2133.                   $SI_L2133_475_G22 = 0
 2133.                   do
 2133.                      $I_L2133_609 = 0
 2133. !dir$ blocking_size( 0, 0 )
 2133.                      do
 2133.                         $I_L2133_696 = 0
 2133. !dir$ ivdep
 2133. !dir$ blocking_size( 256, 256 )
 2133.                         do
 2133.                            if ( ierr(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22) == 0 ) then
 2133.                               $xqes_cup_WR0_R6 = 5.0e-1 * ( xqes(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22, 1 + $I_L2133_609) + xqes(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22, 2 + $I_L2133_609) )
 2133.                               $xhes_cup_WR0_R7 = 5.0e-1 * ( xhes(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22, 1 + $I_L2133_609) + xhes(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22, 2 + $I_L2133_609) )
 2133.                               xhes_cup(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22, 2 + $I_L2133_609) = $xhes_cup_WR0_R7
 2133.                               $xhe_cup_WR0_R8 = 5.0e-1 * ( xhe(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22, 1 + $I_L2133_609) + xhe(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22, 2 + $I_L2133_609) )
 2133.                               $xhe_cup_WR0_R8 = min( $xhes_cup_WR0_R7, $xhe_cup_WR0_R8 )
 2133.                               xhe_cup(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22, 2 + $I_L2133_609) = $xhe_cup_WR0_R8
 2133.                               xz_cup(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22, 2 + $I_L2133_609) = 5.0e-1 * ( xz(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22, 1 + $I_L2133_609) + xz(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22, 2 + $I_L2133_609) )
 2133.                               po_cup(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22, 2 + $I_L2133_609) = 5.0e-1 * ( po(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22, 1 + $I_L2133_609) + po(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22, 2 + $I_L2133_609) )
 2133.                               $xt_cup_WR0_R9 = 5.0e-1 * ( xt(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22, 1 + $I_L2133_609) + xt(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22, 2 + $I_L2133_609) )
 2133.                               xt_cup(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22, 2 + $I_L2133_609) = $xt_cup_WR0_R9
 2133.                               gamma_cup(istart + $I_L2133_696 + 256 * $SI_L2133_475_G22, 2 + $I_L2133_609) = $xqes_cup_WR0_R6 * 1.0/( $xt_cup_WR0_R9 * $xt_cup_WR0_R9 ) * 13477158.695807807
 2133.                            endif
 2133.                            $I_L2133_696 = 1 + $I_L2133_696
 2133.                            if ( $I_L2133_696 >= min( iend + -istart + 1, 256 + 256 * $SI_L2133_475_G22 ) + -256 * $SI_L2133_475_G22 ) exit
 2133.                         enddo
 2133.                         $I_L2133_609 = 1 + $I_L2133_609
 2133.                         if ( $I_L2133_609 >= -1 + kmax ) exit
 2133.                      enddo
 2133.                      $SI_L2133_475_G22 = 1 + $SI_L2133_475_G22
 2133.                      if ( $SI_L2133_475_G22 >= _rsh( iend + -istart + 256, 8 ) ) exit
 2133.                   enddo
 2133.                endif
 2133.             endif
 2133.             if ( iend + -istart >= 0 ) then
 2133.                $I_L2133_477 = 0
 2133. !dir$ ivdep
 2133.                do
 2133.                   if ( ierr(istart + $I_L2133_477) == 0 ) then
 2133.                      $xqes_cup_WR0_R10 = xqes(istart + $I_L2133_477, 1)
 2133.                      xhes_cup(istart + $I_L2133_477, 1) = xhes(istart + $I_L2133_477, 1)
 2133.                      xhe_cup(istart + $I_L2133_477, 1) = xhe(istart + $I_L2133_477, 1)
 2133.                      xz_cup(istart + $I_L2133_477, 1) = 5.0e-1 * ( xz(istart + $I_L2133_477, 1) + z1(istart + $I_L2133_477) )
 2133.                      po_cup(istart + $I_L2133_477, 1) = 5.0e-1 * ( po(istart + $I_L2133_477, 1) + psur(istart + $I_L2133_477) )
 2133.                      $xt_cup_WR0_R11 = xt(istart + $I_L2133_477, 1)
 2133.                      xt_cup(istart + $I_L2133_477, 1) = $xt_cup_WR0_R11
 2133.                      gamma_cup(istart + $I_L2133_477, 1) = $xqes_cup_WR0_R10 * 1.0/( $xt_cup_WR0_R11 * $xt_cup_WR0_R11 ) * 13477158.695807807
 2133.                   endif
 2133.                   $I_L2133_477 = 1 + $I_L2133_477
 2133.                   if ( $I_L2133_477 >= iend + -istart + 1 ) exit
 2133.                enddo
 2161.                $I_L2161_479 = 0
 2161. !dir$ ivdep
 2161.                do
 2162.                   if ( ierr(istart + $I_L2161_479) == 0 ) then
 2163.                      xhkb(istart + $I_L2161_479) = xhe(istart + $I_L2161_479, k22(istart + $I_L2161_479))
 2167.                      xhkb(istart + $I_L2161_479) = xhe_cup(istart + $I_L2161_479, k22(istart + $I_L2161_479))
 2282.                      xaa0(istart + $I_L2161_479) = 0.0
 2282.                   endif
 2165.                   $I_L2161_479 = 1 + $I_L2161_479
 2164.                   if ( $I_L2161_479 >= iend + -istart + 1 ) exit
 2164.                enddo
 2164.             endif
 2167.             t$36 = ncols
 2167.             t$717 = max( 0, ncols )
 2167.             t$37 = kmax
 2167.             t$718 = ncols
 2167.             t$719 = max( 0, kmax )
 2167.             t$720 = ( ncols * kmax )
 2167.             if ( kmax > 0 ) then
 2167.                if ( iend + -istart >= 0 ) then
 2167.                   $I_L2167_611 = 0
 2167. !dir$ blocking_size( 0, 0 )
 2167.                   do
 2167.                      $I_L2167_481 = 0
 2167. !dir$ ivdep
 2167. !dir$ blocking_size( 0, 0 )
 2167.                      do
 2167.                         if ( ierr(istart + $I_L2167_481) == 0 ) then
 2167.                            if ( ( 1 + $I_L2167_611 ) < k22(istart + $I_L2167_481) ) then
 2167.                               if ( ( 1 + $I_L2167_611 ) <= -1 + kbcon(istart + $I_L2167_481) ) then
 2167.                                  xhc(istart + $I_L2167_481, 1 + $I_L2167_611) = xhe_cup(istart + $I_L2167_481, 1 + $I_L2167_611)
 2167.                                  xdby(istart + $I_L2167_481, 1 + $I_L2167_611) = 0.0
 2167.                               endif
 2167.                            else if ( ( 1 + $I_L2167_611 ) <= -1 + kbcon(istart + $I_L2167_481) ) then
 2167.                               xhc(istart + $I_L2167_481, 1 + $I_L2167_611) = xhkb(istart + $I_L2167_481)
 2167.                               xdby(istart + $I_L2167_481, 1 + $I_L2167_611) = 0.0
 2167.                            endif
 2187.                            xzu(istart + $I_L2167_481, 1 + $I_L2167_611) = 0.0
 2187.                         endif
 2167.                         $I_L2167_481 = 1 + $I_L2167_481
 2167.                         if ( $I_L2167_481 >= iend + -istart + 1 ) exit
 2167.                      enddo
 2167.                      $I_L2167_611 = 1 + $I_L2167_611
 2167.                      if ( $I_L2167_611 >= kmax ) exit
 2167.                   enddo
 2187.                   $SI_L2187_487_G25 = 0
 2187.                   do
 2187.                      $I_L2187_615 = 0
 2187. !dir$ ivdep
 2187. !dir$ blocking_size( 0, 0 )
 2187.                      do
 2187.                         $SCA_ierr_I7 = ierr(istart + $I_L2187_615)
 2187.                         $I_L2187_702 = 0
 2187. !dir$ blocking_size( 256, 256 )
 2187.                         do
 2187.                            if ( $SCA_ierr_I7 == 0 ) then
 2187.                               if ( ( $I_L2187_702 + 256 * $SI_L2187_487_G25 + 1 ) >= k22(istart + $I_L2187_615) ) then
 2187.                                  if ( ( $I_L2187_702 + 256 * $SI_L2187_487_G25 + 1 ) <= kbcon(istart + $I_L2187_615) ) then
 2187.                                     xzu(istart + $I_L2187_615, $I_L2187_702 + 256 * $SI_L2187_487_G25 + 1) = 1.0
 2187.                                  endif
 2187.                               endif
 2187.                            endif
 2187.                            $I_L2187_702 = 1 + $I_L2187_702
 2187.                            if ( $I_L2187_702 >= min( kmax, 256 + 256 * $SI_L2187_487_G25 ) + -256 * $SI_L2187_487_G25 ) exit
 2187.                         enddo
 2187.                         $I_L2187_615 = 1 + $I_L2187_615
 2187.                         if ( $I_L2187_615 >= iend + -istart + 1 ) exit
 2187.                      enddo
 2187.                      $SI_L2187_487_G25 = 1 + $SI_L2187_487_G25
 2187.                      if ( $SI_L2187_487_G25 >= _rsh( 255 + kmax, 8 ) ) exit
 2187.                   enddo
 2187.                   $SI_L2187_489_G28 = 0
 2187.                   do
 2187.                      $I_L2187_617 = 0
 2187. !dir$ blocking_size( 0, 0 )
 2187.                      do
 2187.                         $I_L2187_705 = 0
 2187. !dir$ ivdep
 2187. !dir$ blocking_size( 256, 256 )
 2187.                         do
 2187.                            if ( ierr(istart + $I_L2187_705 + 256 * $SI_L2187_489_G28) == 0 ) then
 2187.                               if ( ( 1 + $I_L2187_617 ) >= 1 + kbcon(istart + $I_L2187_705 + 256 * $SI_L2187_489_G28) ) then
 2187.                                  if ( ( 1 + $I_L2187_617 ) <= ktop(istart + $I_L2187_705 + 256 * $SI_L2187_489_G28) ) then
 2187.                                     $dz_S85 = xz_cup(istart + $I_L2187_705 + 256 * $SI_L2187_489_G28, 1 + $I_L2187_617) + -xz_cup(istart + $I_L2187_705 + 256 * $SI_L2187_489_G28, $I_L2187_617)
 2187.                                     xzu(istart + $I_L2187_705 + 256 * $SI_L2187_489_G28, 1 + $I_L2187_617) = xzu(istart + $I_L2187_705 + 256 * $SI_L2187_489_G28, $I_L2187_617) * ( 1.0 + ( mentr_rate + -cd(istart + $I_L2187_705 + 256 * $SI_L2187_489_G28, 1 + $I_L2187_617) ) * $dz_S85 )
 2187.                                  endif
 2187.                               endif
 2187.                            endif
 2187.                            $I_L2187_705 = 1 + $I_L2187_705
 2187.                            if ( $I_L2187_705 >= min( iend + -istart + 1, 256 + 256 * $SI_L2187_489_G28 ) + -256 * $SI_L2187_489_G28 ) exit
 2187.                         enddo
 2187.                         $I_L2187_617 = 1 + $I_L2187_617
 2187.                         if ( $I_L2187_617 >= kmax ) exit
 2187.                      enddo
 2187.                      $SI_L2187_489_G28 = 1 + $SI_L2187_489_G28
 2187.                      if ( $SI_L2187_489_G28 >= _rsh( iend + -istart + 256, 8 ) ) exit
 2187.                   enddo
 2187.                endif
 2187.             endif
 2167.             if ( iend + -istart >= 0 ) then
 2167.                $I_L2167_483 = 0
 2167. !dir$ ivdep
 2167.                do
 2167.                   if ( ierr(istart + $I_L2167_483) == 0 ) then
 2167.                      xhc(istart + $I_L2167_483, kbcon(istart + $I_L2167_483)) = xhkb(istart + $I_L2167_483)
 2167.                      xdby(istart + $I_L2167_483, kbcon(istart + $I_L2167_483)) = xhkb(istart + $I_L2167_483) + -xhes_cup(istart + $I_L2167_483, kbcon(istart + $I_L2167_483))
 2167.                   endif
 2167.                   $I_L2167_483 = 1 + $I_L2167_483
 2167.                   if ( $I_L2167_483 >= iend + -istart + 1 ) exit
 2167.                enddo
 2167.             endif
 2167.             if ( -1 + kmax > 0 ) then
 2167.                if ( iend + -istart >= 0 ) then
 2167.                   if ( -2 + kmax > 0 ) then
 2167.                      $SI_L2167_485_G31 = 0
 2167.                      do
 2167.                         $I_L2167_613 = 0
 2167. !dir$ blocking_size( 0, 0 )
 2167.                         do
 2167.                            $I_L2167_699 = 0
 2167. !dir$ ivdep
 2167. !dir$ blocking_size( 256, 256 )
 2167.                            do
 2167.                               if ( ( 2 + $I_L2167_613 ) >= kbcon(istart + $I_L2167_699 + 256 * $SI_L2167_485_G31) ) then
 2167.                                  if ( ierr(istart + $I_L2167_699 + 256 * $SI_L2167_485_G31) == 0 ) then
 2167.                                     $dz_S99 = xz_cup(istart + $I_L2167_699 + 256 * $SI_L2167_485_G31, 2 + $I_L2167_613) + -xz_cup(istart + $I_L2167_699 + 256 * $SI_L2167_485_G31, 1 + $I_L2167_613)
 2167.                                     $xhc_WR0_R12 = ( ( xhc(istart + $I_L2167_699 + 256 * $SI_L2167_485_G31, 1 + $I_L2167_613) * ( 1.0 + $dz_S99 * cd(istart + $I_L2167_699 + 256 * $SI_L2167_485_G31, 2 + $I_L2167_613) * -5.0e-1 ) + mentr_rate * $dz_S99 * xhe(istart + $I_L2167_699 + 256 * $SI_L2167_485_G31, 1 + $I_L2167_613) ) * 1.0/( $dz_S99 * cd(istart + $I_L2167_699 + 256 * $SI_L2167_485_G31, 2 + $I_L2167_613) * -5.0e-1 + mentr_rate * $dz_S99 + 1.0 ) )
 2167.                                     xhc(istart + $I_L2167_699 + 256 * $SI_L2167_485_G31, 2 + $I_L2167_613) = $xhc_WR0_R12
 2167.                                     xdby(istart + $I_L2167_699 + 256 * $SI_L2167_485_G31, 2 + $I_L2167_613) = $xhc_WR0_R12 + -xhes_cup(istart + $I_L2167_699 + 256 * $SI_L2167_485_G31, 2 + $I_L2167_613)
 2167.                                  endif
 2167.                               endif
 2167.                               $I_L2167_699 = 1 + $I_L2167_699
 2167.                               if ( $I_L2167_699 >= min( iend + -istart + 1, 256 + 256 * $SI_L2167_485_G31 ) + -256 * $SI_L2167_485_G31 ) exit
 2167.                            enddo
 2167.                            $I_L2167_613 = 1 + $I_L2167_613
 2167.                            if ( $I_L2167_613 >= -2 + kmax ) exit
 2167.                         enddo
 2167.                         $SI_L2167_485_G31 = 1 + $SI_L2167_485_G31
 2167.                         if ( $SI_L2167_485_G31 >= _rsh( iend + -istart + 256, 8 ) ) exit
 2167.                      enddo
 2167.                   endif
 2167.                endif
 2167.             endif
 2187.             t$40 = ncols
 2187.             t$41 = kmax
 2187.             t$725 = max( 0, ncols )
 2187.             t$726 = ncols
 2187.             t$727 = max( 0, kmax )
 2187.             t$728 = ( ncols * kmax )
 2201.             t$42 = ncols
 2201.             t$43 = kmax
 2201.             t$729 = max( 0, ncols )
 2201.             t$730 = ncols
 2201.             t$731 = max( 0, kmax )
 2201.             t$732 = ( ncols * kmax )
 2218.             t$44 = ncols
 2218.             t$45 = kmax
 2218.             t$733 = max( 0, ncols )
 2218.             t$734 = ncols
 2218.             t$735 = max( 0, kmax )
 2218.             t$736 = ( ncols * kmax )
 2232.             t$46 = ncols
 2232.             t$47 = kmax
 2232.             t$737 = max( 0, ncols )
 2232.             t$738 = ncols
 2232.             t$739 = max( 0, kmax )
 2232.             t$740 = ( ncols * kmax )
 2258.             t$48 = ncols
 2258.             t$741 = max( 0, ncols )
 2258.             t$49 = kmax
 2258.             t$742 = ncols
 2258.             t$743 = max( 0, kmax )
 2258.             t$744 = ( ncols * kmax )
 2282.             t$50 = ncols
 2282.             t$745 = max( 0, ncols )
 2282.             t$51 = kmax
 2282.             t$746 = ncols
 2282.             t$747 = max( 0, kmax )
 2282.             t$748 = ( ncols * kmax )
 2282.             if ( -3 + kmax >= 0 ) then
 2282.                if ( iend + -istart >= 0 ) then
 2282.                   $SI_L2282_491_G34 = 0
 2282.                   do
 2282.                      $I_L2282_619 = 0
 2282. !dir$ blocking_size( 0, 0 )
 2282.                      do
 2282.                         $I_L2282_708 = 0
 2282. !dir$ ivdep
 2282. !dir$ blocking_size( 256, 256 )
 2282.                         do
 2282.                            if ( ierr(istart + $I_L2282_708 + 256 * $SI_L2282_491_G34) == 0 ) then
 2282.                               if ( ( 2 + $I_L2282_619 ) > kbcon(istart + $I_L2282_708 + 256 * $SI_L2282_491_G34) ) then
 2282.                                  if ( ( 2 + $I_L2282_619 ) <= ktop(istart + $I_L2282_708 + 256 * $SI_L2282_491_G34) ) then
 2282.                                     $dz_S108 = xz(istart + $I_L2282_708 + 256 * $SI_L2282_491_G34, 2 + $I_L2282_619) + -xz(istart + $I_L2282_708 + 256 * $SI_L2282_491_G34, 1 + $I_L2282_619)
 2282.                                     $da_S109 = ( xzu(istart + $I_L2282_708 + 256 * $SI_L2282_491_G34, 2 + $I_L2282_619) * $dz_S108 * ( 9.7709163346613552e-3 * 1.0/xt_cup(istart + $I_L2282_708 + 256 * $SI_L2282_491_G34, 2 + $I_L2282_619) ) * xdby(istart + $I_L2282_708 + 256 * $SI_L2282_491_G34, 1 + $I_L2282_619) * 1.0/( 1.0 + gamma_cup(istart + $I_L2282_708 + 256 * $SI_L2282_491_G34, 2 + $I_L2282_619) ) )
 2282.                                     if ( ktop(istart + $I_L2282_708 + 256 * $SI_L2282_491_G34) + -$I_L2282_619 + -2 /= 0 ) then
 2282.                                        goto 30
 2282.                                     else if ( $da_S109 > 0.0 ) then
 2282.    30                                  continue
 2282.                                        xaa0(istart + $I_L2282_708 + 256 * $SI_L2282_491_G34) = max( 0.0, xaa0(istart + $I_L2282_708 + 256 * $SI_L2282_491_G34) + $da_S109 )
 2282.                                     endif
 2282.                                  endif
 2282.                               endif
 2282.                            endif
 2282.                            $I_L2282_708 = 1 + $I_L2282_708
 2282.                            if ( $I_L2282_708 >= min( iend + -istart + 1, 256 + 256 * $SI_L2282_491_G34 ) + -256 * $SI_L2282_491_G34 ) exit
 2282.                         enddo
 2282.                         $I_L2282_619 = 1 + $I_L2282_619
 2282.                         if ( $I_L2282_619 >= -2 + kmax ) exit
 2282.                      enddo
 2282.                      $SI_L2282_491_G34 = 1 + $SI_L2282_491_G34
 2282.                      if ( $SI_L2282_491_G34 >= _rsh( iend + -istart + 256, 8 ) ) exit
 2282.                   enddo
 2282.                endif
 2282.             endif
 2300.             if ( maxens > 0 ) then
 2309.                if ( maxens3 > 0 ) then
 2310.                   if ( kmax > 0 ) then
 2311.                      if ( iend + -istart >= 0 ) then
 2300.                         $I_L2300_677 = 0
 2300.                         do
 2309.                            $I_L2309_673 = 0
 2309.                            do
 2311.                               $I_L2311_665 = 0
 2311. !dir$ ivdep
 2311.                               do
 2310.                                  $SCA_ktop_I8 = ktop(istart + $I_L2311_665)
 2310.                                  $I_L2310_581 = 0
 2310. !dir$ unroll 4
 2310.                                  do
 2312.                                     if ( ( 1 + $I_L2310_581 ) <= $SCA_ktop_I8 ) then
 2312.                                        if ( ierr(istart + $I_L2311_665) == 0 ) then
 2313.                                           $SCF_P11 = pwo(istart + $I_L2311_665, 1 + $I_L2310_581) + beta(1 + $I_L2309_673) * edto(istart + $I_L2311_665) * pwdo(istart + $I_L2311_665, 1 + $I_L2310_581)
 2313.                                           pr_ens(istart + $I_L2311_665, $I_L2309_673 + maxens3 * $I_L2300_677 + maxens * $I_L1936_679 * maxens3 + 1) = pr_ens(istart + $I_L2311_665, $I_L2309_673 + maxens3 * $I_L2300_677 + maxens * $I_L1936_679 * maxens3 + 1) + $SCF_P11
 2313.                                        endif
 2313.                                     endif
 2317.                                     $I_L2310_581 = 1 + $I_L2310_581
 2315.                                     if ( $I_L2310_581 >= kmax ) exit
 2315.                                  enddo
 2319.                                  if ( ierr(istart + $I_L2311_665) == 0 ) then
 2320.                                     outt_ens(istart + $I_L2311_665, $I_L2309_673 + maxens3 * $I_L2300_677 + maxens * $I_L1936_679 * maxens3 + 1) = dellat(istart + $I_L2311_665, 1)
 2321.                                     pr_ens(istart + $I_L2311_665, $I_L2309_673 + maxens3 * $I_L2300_677 + maxens * $I_L1936_679 * maxens3 + 1) = max( 0.0, pr_ens(istart + $I_L2311_665, $I_L2309_673 + maxens3 * $I_L2300_677 + maxens * $I_L1936_679 * maxens3 + 1) )
 2321.                                  endif
 2316.                                  $I_L2311_665 = 1 + $I_L2311_665
 2316.                                  if ( $I_L2311_665 >= iend + -istart + 1 ) exit
 2316.                               enddo
 2326.                               $I_L2309_673 = 1 + $I_L2309_673
 2325.                               if ( $I_L2309_673 >= maxens3 ) exit
 2325.                            enddo
 2327.                            $I_L2300_677 = 1 + $I_L2300_677
 2326.                            if ( $I_L2300_677 >= maxens ) exit
 2326.                         enddo
 2326.                      endif
 2326.                   else if ( iend + -istart >= 0 ) then
 2300.                      $I_L2300_675 = 0
 2300.                      do
 2309.                         $I_L2309_671 = 0
 2309. !dir$ blocking_size( 0, 0 )
 2309.                         do
 2318.                            $I_L2318_587 = 0
 2318. !dir$ ivdep
 2318. !dir$ blocking_size( 0, 0 )
 2318.                            do
 2319.                               if ( ierr(istart + $I_L2318_587) == 0 ) then
 2320.                                  outt_ens(istart + $I_L2318_587, $I_L2309_671 + maxens3 * $I_L2300_675 + maxens * $I_L1936_679 * maxens3 + 1) = dellat(istart + $I_L2318_587, 1)
 2321.                                  pr_ens(istart + $I_L2318_587, $I_L2309_671 + maxens3 * $I_L2300_675 + maxens * $I_L1936_679 * maxens3 + 1) = max( 0.0, pr_ens(istart + $I_L2318_587, $I_L2309_671 + maxens3 * $I_L2300_675 + maxens * $I_L1936_679 * maxens3 + 1) )
 2321.                               endif
 2325.                               $I_L2318_587 = 1 + $I_L2318_587
 2324.                               if ( $I_L2318_587 >= iend + -istart + 1 ) exit
 2324.                            enddo
 2326.                            $I_L2309_671 = 1 + $I_L2309_671
 2325.                            if ( $I_L2309_671 >= maxens3 ) exit
 2325.                         enddo
 2327.                         $I_L2300_675 = 1 + $I_L2300_675
 2326.                         if ( $I_L2300_675 >= maxens ) exit
 2326.                      enddo
 2326.                   endif
 2326.                endif
 2301.                if ( iend + -istart >= 0 ) then
 2300.                   $I_L2300_667 = 0
 2300.                   do
 2301.                      $I_L2301_583 = 0
 2301. !dir$ ivdep
 2301.                      do
 2302.                         if ( ierr(istart + $I_L2301_583) == 0 ) then
 2303.                            xaa0_ens(istart + $I_L2301_583, 1 + $I_L2300_667) = xaa0(istart + $I_L2301_583)
 2303.                         endif
 2305.                         $I_L2301_583 = 1 + $I_L2301_583
 2304.                         if ( $I_L2301_583 >= iend + -istart + 1 ) exit
 2304.                      enddo
 2327.                      $I_L2300_667 = 1 + $I_L2300_667
 2326.                      if ( $I_L2300_667 >= maxens ) exit
 2326.                   enddo
 2326.                endif
 2326.             endif
 2332.             t$29 = ncols
 2332.             t$30 = kmax
 2332.             t$690 = max( 0, ncols )
 2332.             t$691 = ncols
 2332.             t$692 = max( 0, kmax )
 2332.             t$693 = ( ncols * kmax )
 2332.             t$696 = 8 * ncols
 2332.             t$694 = int( _alloc( 8 * ncols ), 8 )
 2332.             t$695 = t$694
 2332.             if ( iend + -istart >= 0 ) then
 2332.                $I_L2332_493 = 0
 2332. !dir$ ivdep
 2332.                do
 2332.                   k22x(istart + $I_L2332_493) = 3
 2332.                   if ( ierr(istart + $I_L2332_493) == 0 ) then
 2332.                      x(istart + $I_L2332_493) = he_cup(istart + $I_L2332_493, 3)
 2332.                   endif
 2332.                   $I_L2332_493 = 1 + $I_L2332_493
 2332.                   if ( $I_L2332_493 >= iend + -istart + 1 ) exit
 2332.                enddo
 2332.             endif
 2332.             if ( kmax > 0 ) then
 2332.                if ( iend + -istart >= 0 ) then
 2332.                   if ( 2 < kmax ) then
 2332.                      $I_L2332_669 = 0
 2332. !dir$ blocking_size( 0, 0 )
 2332.                      do
 2332.                         $I_L2332_585 = 0
 2332. !dir$ ivdep
 2332. !dir$ blocking_size( 0, 0 )
 2332.                         do
 2332.                            if ( ierr(istart + $I_L2332_585) == 0 ) then
 2332.                               if ( ( $I_L2332_669 + min( 2, kmax ) + 1 ) <= kbmax(istart + $I_L2332_585) ) then
 2332.                                  if ( he_cup(istart + $I_L2332_585, $I_L2332_669 + min( 2, kmax ) + 1) >= x(istart + $I_L2332_585) ) then
 2332.                                     x(istart + $I_L2332_585) = he_cup(istart + $I_L2332_585, $I_L2332_669 + min( 2, kmax ) + 1)
 2332.                                     k22x(istart + $I_L2332_585) = ( $I_L2332_669 + min( 2, kmax ) + 1 )
 2332.                                  endif
 2332.                               endif
 2332.                            endif
 2332.                            $I_L2332_585 = 1 + $I_L2332_585
 2332.                            if ( $I_L2332_585 >= iend + -istart + 1 ) exit
 2332.                         enddo
 2332.                         $I_L2332_669 = 1 + $I_L2332_669
 2332.                         if ( $I_L2332_669 >= kmax + -min( 2, kmax ) ) exit
 2332.                      enddo
 2332.                   endif
 2332.                endif
 2332.             endif
 2332.             _free( t$694 )
 2342.             if ( iend + -istart >= 0 ) then
 2342.                $I_L2342_495 = 0
 2342. !dir$ ivdep
 2342.                do
 2343.                   if ( ierr(istart + $I_L2342_495) == 0 ) then
 2344.                      k22x(istart + $I_L2342_495) = k22(istart + $I_L2342_495)
 2344.                   endif
 2346.                   ierr2(istart + $I_L2342_495) = ierr(istart + $I_L2342_495)
 2347.                   ierr3(istart + $I_L2342_495) = ierr(istart + $I_L2342_495)
 2348.                   $I_L2342_495 = 1 + $I_L2342_495
 2345.                   if ( $I_L2342_495 >= iend + -istart + 1 ) exit
 2345.                enddo
 2345.             endif
 2353.             t$33 = ncols
 2353.             t$707 = max( 0, ncols )
 2353.             t$34 = kmax
 2353.             t$708 = ncols
 2353.             t$709 = max( 0, kmax )
 2353.             t$710 = ( ncols * kmax )
 2353.             t$35 = ( iend + -istart + 1 )
 2353.             t$711 = max( 0, ( iend + -istart + 1 ) )
 2353.             t$714 = 4 * max( 0, ( iend + -istart + 1 ) )
 2353.             t$716 = 8 * max( 0, ( iend + -istart + 1 ) )
 2353.             t$712 = int( _alloc( 8 * max( 0, ( iend + -istart + 1 ) ) ), 8 )
 2353.             t$713 = t$712
 2353.             t$715 = t$712 + 4 * max( 0, ( iend + -istart + 1 ) )
 2353.             $F_A95 = ncols
 2353.             if ( ncols > 0 ) then
 2353.                $I_L2353_577 = 0
 2353. !dir$ ivdep
 2353.                do
 2353.                   kbconx(1 + $I_L2353_577) = 1
 2353.                   $I_L2353_577 = 1 + $I_L2353_577
 2353.                   if ( $I_L2353_577 >= $F_A95 ) exit
 2353.                enddo
 2353.             endif
 2353.             $nleft_S121 = 0
 2353.             if ( iend + -istart >= 0 ) then
 2353.                $I_L2353_497 = 0
 2353. !dir$ ivdep
 2353.                do
 2353.                   if ( ierr2(istart + $I_L2353_497) == 0 ) then
 2353.                      kbconx(istart + $I_L2353_497) = k22x(istart + $I_L2353_497)
 2353.                      $nleft_S121 = 1 + $nleft_S121
 2353.                      left($nleft_S121) = ( istart + $I_L2353_497 )
 2353.                   else
 2353.                      kbconx(istart + $I_L2353_497) = 1
 2353.                   endif
 2353.                   $I_L2353_497 = 1 + $I_L2353_497
 2353.                   if ( $I_L2353_497 >= iend + -istart + 1 ) exit
 2353.                enddo
 2353.             endif
 2353.             do
 2353.                if ( $nleft_S121 == 0 ) then
 2353.                   _free( t$712 )
 2371.                   t$33 = ncols
 2371.                   t$707 = max( 0, ncols )
 2371.                   t$34 = kmax
 2371.                   t$708 = ncols
 2371.                   t$709 = max( 0, kmax )
 2371.                   t$710 = ( ncols * kmax )
 2371.                   t$35 = ( iend + -istart + 1 )
 2371.                   t$711 = max( 0, ( iend + -istart + 1 ) )
 2371.                   t$714 = 4 * max( 0, ( iend + -istart + 1 ) )
 2371.                   t$716 = 8 * max( 0, ( iend + -istart + 1 ) )
 2371.                   t$712 = int( _alloc( 8 * max( 0, ( iend + -istart + 1 ) ) ), 8 )
 2371.                   t$713 = t$712
 2371.                   t$715 = t$712 + 4 * max( 0, ( iend + -istart + 1 ) )
 2371.                   $F_A96 = ncols
 2371.                   if ( ncols > 0 ) then
 2371.                      $I_L2371_579 = 0
 2371. !dir$ ivdep
 2371.                      do
 2371.                         kbconx(1 + $I_L2371_579) = 1
 2371.                         $I_L2371_579 = 1 + $I_L2371_579
 2371.                         if ( $I_L2371_579 >= $F_A96 ) exit
 2371.                      enddo
 2371.                   endif
 2371.                   $nleft_S131 = 0
 2371.                   if ( iend + -istart >= 0 ) then
 2371.                      $I_L2371_503 = 0
 2371. !dir$ ivdep
 2371.                      do
 2371.                         if ( ierr3(istart + $I_L2371_503) == 0 ) then
 2371.                            kbconx(istart + $I_L2371_503) = k22x(istart + $I_L2371_503)
 2371.                            $nleft_S131 = 1 + $nleft_S131
 2371.                            left($nleft_S131) = ( istart + $I_L2371_503 )
 2371.                         else
 2371.                            kbconx(istart + $I_L2371_503) = 1
 2371.                         endif
 2371.                         $I_L2371_503 = 1 + $I_L2371_503
 2371.                         if ( $I_L2371_503 >= iend + -istart + 1 ) exit
 2371.                      enddo
 2371.                   endif
 2371.                   goto 40
 2371.                endif
 2353.                $nnewleft_S124 = 0
 2353.                $ntocontinue_S125 = 0
 2353.                if ( $nleft_S121 > 0 ) then
 2353.                   $I_L2353_499 = 0
 2353. !dir$ unroll 4
 2353.                   do
 2353.                      $i_S123 = left(1 + $I_L2353_499)
 2353.                      if ( heo_cup($i_S123, k22x($i_S123)) < heso_cup($i_S123, kbconx($i_S123)) ) then
 2353.                         kbconx($i_S123) = 1 + kbconx($i_S123)
 2353.                         if ( kbconx($i_S123) > 2 + kbmax($i_S123) ) then
 2353.                            ierr2($i_S123) = 3
 2353.                         else
 2353.                            $nnewleft_S124 = 1 + $nnewleft_S124
 2353.                            left($nnewleft_S124) = $i_S123
 2353.                         endif
 2353.                      else
 2353.                         $ntocontinue_S125 = 1 + $ntocontinue_S125
 2353.                         tocontinue($ntocontinue_S125) = $i_S123
 2353.                      endif
 2353.                      $I_L2353_499 = 1 + $I_L2353_499
 2353.                      if ( $I_L2353_499 >= $nleft_S121 ) exit
 2353.                   enddo
 2353.                endif
 2353.                if ( $ntocontinue_S125 > 0 ) then
 2353.                   $I_L2353_501 = 0
 2353. !dir$ unroll 2
 2353.                   do
 2353.                      $i_S127 = tocontinue(1 + $I_L2353_501)
 2353.                      if ( kbconx($i_S127) + -k22x($i_S127) /= 1 ) then
 2353.                         $pbcdif_S129 = -po_cup($i_S127, kbconx($i_S127)) + po_cup($i_S127, k22x($i_S127))
 2353.                         $plus_S128 = max( 25.0, cap_max($i_S127) + -cap_max_increment )
 2353.                         if ( $pbcdif_S129 > $plus_S128 ) then
 2353.                            k22x($i_S127) = 1 + k22x($i_S127)
 2353.                            kbconx($i_S127) = k22x($i_S127)
 2353.                            $nnewleft_S124 = 1 + $nnewleft_S124
 2353.                            left($nnewleft_S124) = $i_S127
 2353.                         endif
 2353.                      endif
 2353.                      $I_L2353_501 = 1 + $I_L2353_501
 2353.                      if ( $I_L2353_501 >= $ntocontinue_S125 ) exit
 2353.                   enddo
 2353.                endif
 2353.             enddo
 2353.    40       continue
 2371.             do
 2371.                if ( $nleft_S131 == 0 ) then
 2371.                   _free( t$712 )
 2387.                   if ( maxens3 == 16 ) then
 2401.                       _substr(t$1067,1,5) = 'deeps'
 2405.                      t$1068 = ( 1 + $I_L1936_679 )
 2388.                      ipa$2904 = 1
 2388.                      ipa$2924 = 1.0000000000000001e-1
 2388.                      call cup_forcing_ens_16( aa0(1), aa1(1), xaa0_ens(1, 1), mbdt, dtime, xmb(1), ierr(1), ncols, kmax, istart, iend, xf_ens(1, 1),  _substr(t$1067,1,5), mask(1), maxens, ipa$2904, t$1068, maxens3, mconv(1), omeg(1, 1), k22(1), pr_ens(1, 1), edto(1), kbcon(1), ensdim, massfln(1, 1), massfld, xff_ens3(1, 1), xk(1, 1), p_cup(1, 1), ktop(1), ierr2(1), ierr3(1), grepar1, ipa$2924, maxens22 )
 2388.                   endif
 2427.                   if ( kmax > 0 ) then
 2428.                      if ( iend + -istart >= 0 ) then
 2427.                         $I_L2427_621 = 0
 2427. !dir$ blocking_size( 0, 0 )
 2427.                         do
 2428.                            $I_L2428_509 = 0
 2428. !dir$ ivdep
 2428. !dir$ blocking_size( 0, 0 )
 2428.                            do
 2429.                               if ( ierr(istart + $I_L2428_509) == 0 ) then
 2430.                                  dellat_ens(istart + $I_L2428_509, 1 + $I_L2427_621, 1 + $I_L1936_679) = dellat(istart + $I_L2428_509, 1 + $I_L2427_621)
 2431.                                  dellaq_ens(istart + $I_L2428_509, 1 + $I_L2427_621, 1 + $I_L1936_679) = dellaq(istart + $I_L2428_509, 1 + $I_L2427_621)
 2432.                                  dellaqc_ens(istart + $I_L2428_509, 1 + $I_L2427_621, 1 + $I_L1936_679) = dellaqc(istart + $I_L2428_509, 1 + $I_L2427_621)
 2433.                                  pwo_ens(istart + $I_L2428_509, 1 + $I_L2427_621, 1 + $I_L1936_679) = pwo(istart + $I_L2428_509, 1 + $I_L2427_621) + edt(istart + $I_L2428_509) * pwdo(istart + $I_L2428_509, 1 + $I_L2427_621)
 2433.                               else
 2435.                                  dellat_ens(istart + $I_L2428_509, 1 + $I_L2427_621, 1 + $I_L1936_679) = 0.0
 2436.                                  dellaq_ens(istart + $I_L2428_509, 1 + $I_L2427_621, 1 + $I_L1936_679) = 0.0
 2437.                                  dellaqc_ens(istart + $I_L2428_509, 1 + $I_L2427_621, 1 + $I_L1936_679) = 0.0
 2438.                                  pwo_ens(istart + $I_L2428_509, 1 + $I_L2427_621, 1 + $I_L1936_679) = 0.0
 2438.                               endif
 2440.                               $I_L2428_509 = 1 + $I_L2428_509
 2439.                               if ( $I_L2428_509 >= iend + -istart + 1 ) exit
 2439.                            enddo
 2441.                            $I_L2427_621 = 1 + $I_L2427_621
 2440.                            if ( $I_L2427_621 >= kmax ) exit
 2440.                         enddo
 2440.                      endif
 2440.                   endif
 2440.                   goto 50
 2440.                endif
 2371.                $nnewleft_S134 = 0
 2371.                $ntocontinue_S135 = 0
 2371.                if ( $nleft_S131 > 0 ) then
 2371.                   $I_L2371_505 = 0
 2371. !dir$ unroll 4
 2371.                   do
 2371.                      $i_S133 = left(1 + $I_L2371_505)
 2371.                      if ( heo_cup($i_S133, k22x($i_S133)) < heso_cup($i_S133, kbconx($i_S133)) ) then
 2371.                         kbconx($i_S133) = 1 + kbconx($i_S133)
 2371.                         if ( kbconx($i_S133) > 2 + kbmax($i_S133) ) then
 2371.                            ierr3($i_S133) = 3
 2371.                         else
 2371.                            $nnewleft_S134 = 1 + $nnewleft_S134
 2371.                            left($nnewleft_S134) = $i_S133
 2371.                         endif
 2371.                      else
 2371.                         $ntocontinue_S135 = 1 + $ntocontinue_S135
 2371.                         tocontinue($ntocontinue_S135) = $i_S133
 2371.                      endif
 2371.                      $I_L2371_505 = 1 + $I_L2371_505
 2371.                      if ( $I_L2371_505 >= $nleft_S131 ) exit
 2371.                   enddo
 2371.                endif
 2371.                if ( $ntocontinue_S135 > 0 ) then
 2371.                   $I_L2371_507 = 0
 2371. !dir$ unroll 2
 2371.                   do
 2371.                      $i_S137 = tocontinue(1 + $I_L2371_507)
 2371.                      if ( kbconx($i_S137) + -k22x($i_S137) /= 1 ) then
 2371.                         $pbcdif_S139 = -po_cup($i_S137, kbconx($i_S137)) + po_cup($i_S137, k22x($i_S137))
 2371.                         $plus_S138 = max( 25.0, cap_max($i_S137) + -2.0 * cap_max_increment )
 2371.                         if ( $pbcdif_S139 > $plus_S138 ) then
 2371.                            k22x($i_S137) = 1 + k22x($i_S137)
 2371.                            kbconx($i_S137) = k22x($i_S137)
 2371.                            $nnewleft_S134 = 1 + $nnewleft_S134
 2371.                            left($nnewleft_S134) = $i_S137
 2371.                         endif
 2371.                      endif
 2371.                      $I_L2371_507 = 1 + $I_L2371_507
 2371.                      if ( $I_L2371_507 >= $ntocontinue_S135 ) exit
 2371.                   enddo
 2371.                endif
 2371.             enddo
 2371.    50       continue
 2442.             $I_L1936_679 = 1 + $I_L1936_679
 2441.             if ( $I_L1936_679 >= maxens22 ) exit
 2441.          enddo
 2441.       endif
 1736.       _free( t$550 )
 2444.       return
 2444.       end
 2444.       
 2449.       
 2449.       subroutine cup_env( z, qes, he, hes, t, q, p, z1, ncols, kmax, istart, iend, psur, ierr, itest )
 2449.       t$25 = ncols
 2449.       t$26 = kmax
 2457.       t$679 = _zla( 0, ncols )
 2449.       t$680 = _zla( 0, ncols )
 2457.       t$681 = _zla( 0, kmax )
 2449.       t$682 = _zla( 0, ncols ) * _zla( 0, kmax )
 2476.       t$685 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8
 2449.       t$683 = int( _alloc( _zla( 0, ncols ) * _zla( 0, kmax ) * 8 ), 8 )
 2476.       t$684 = t$683
 2477.       if ( kmax > 0 ) then
 2484.          $SC_be_I2 = be(1)
 2484.          $SC_ae_I3 = ae(1)
 2484.          $SC_be_I0 = be(2)
 2484.          $SC_ae_I1 = ae(2)
 2478.          if ( iend + -istart >= 0 ) then
 2478.             $SI_L2478_42_G1 = 0
 2478.             do
 2477.                $I_L2477_50 = 0
 2477. !dir$ ivdep
 2477. !dir$ blocking_size( 0, 0 )
 2477.                do
 2478.                   $I_L2478_56 = 0
 2478. !dir$ unroll 2
 2478. !dir$ blocking_size( 256, 256 )
 2478.                   do
 2479.                      if ( ierr(istart + $I_L2478_56 + 256 * $SI_L2478_42_G1) == 0 ) then
 2484.                         if ( t(istart + $I_L2478_56 + 256 * $SI_L2478_42_G1, 1 + $I_L2477_50) <= 273.14999999999998 ) then
 2484.                            $es5_S2 = _expn( $SC_ae_I1 + -( $SC_be_I0 * 1.0/t(istart + $I_L2478_56 + 256 * $SI_L2478_42_G1, 1 + $I_L2477_50) ) )
 2484.                         else
 2484.                            $es5_S2 = _expn( $SC_ae_I3 + -( $SC_be_I2 * 1.0/t(istart + $I_L2478_56 + 256 * $SI_L2478_42_G1, 1 + $I_L2477_50) ) )
 2484.                         endif
 2485.                         $qes_WR0_R0 = ( 1.0/( 100.0 * p(istart + $I_L2478_56 + 256 * $SI_L2478_42_G1, 1 + $I_L2477_50) + -$es5_S2 ) * $es5_S2 * 6.22e-1 )
 2486.                         $qes_WR0_R0 = max( 1.0e-8, $qes_WR0_R0 )
 2486.                         qes(istart + $I_L2478_56 + 256 * $SI_L2478_42_G1, 1 + $I_L2477_50) = $qes_WR0_R0
 2487.                         $q_WR0_R1 = min( $qes_WR0_R0, q(istart + $I_L2478_56 + 256 * $SI_L2478_42_G1, 1 + $I_L2477_50) )
 2487.                         q(istart + $I_L2478_56 + 256 * $SI_L2478_42_G1, 1 + $I_L2477_50) = $q_WR0_R1
 2491.                         tv(istart + $I_L2478_56 + 256 * $SI_L2478_42_G1, 1 + $I_L2477_50) = t(istart + $I_L2478_56 + 256 * $SI_L2478_42_G1, 1 + $I_L2477_50) + t(istart + $I_L2478_56 + 256 * $SI_L2478_42_G1, 1 + $I_L2477_50) * $q_WR0_R1 * 6.0799999999999998e-1
 2491.                      endif
 2478.                      $I_L2478_56 = 1 + $I_L2478_56
 2492.                      if ( $I_L2478_56 >= min( iend + -istart + 1, 256 + 256 * $SI_L2478_42_G1 ) + -256 * $SI_L2478_42_G1 ) exit
 2492.                   enddo
 2494.                   $I_L2477_50 = 1 + $I_L2477_50
 2494.                   if ( $I_L2477_50 >= kmax ) exit
 2494.                enddo
 2478.                $SI_L2478_42_G1 = 1 + $SI_L2478_42_G1
 2493.                if ( $SI_L2478_42_G1 >= _rsh( iend + -istart + 256, 8 ) ) exit
 2493.             enddo
 2493.          endif
 2493.       endif
 2502.       if ( itest /= 2 ) then
 2503.          if ( iend + -istart >= 0 ) then
 2503.             $I_L2503_44 = 0
 2503. !dir$ ivdep
 2503.             do
 2504.                if ( ierr(istart + $I_L2503_44) == 0 ) then
 2505.                   $z_WR0_R2 = max( 0.0, z1(istart + $I_L2503_44) ) + tv(istart + $I_L2503_44, 1) * ( log( p(istart + $I_L2503_44, 1) ) + -log( psur(istart + $I_L2503_44) ) ) * -29.255861365953105
 2505.                   z(istart + $I_L2503_44, 1) = $z_WR0_R2
 2507.                   $he_WR0_R3 = 9.8100000000000005 * $z_WR0_R2 + 1004.0 * t(istart + $I_L2503_44, 1) + 2500000.0 * q(istart + $I_L2503_44, 1)
 2508.                   $hes_WR0_R4 = 9.8100000000000005 * $z_WR0_R2 + 1004.0 * t(istart + $I_L2503_44, 1) + 2500000.0 * qes(istart + $I_L2503_44, 1)
 2508.                   hes(istart + $I_L2503_44, 1) = $hes_WR0_R4
 2509.                   $he_WR0_R3 = min( $he_WR0_R3, $hes_WR0_R4 )
 2509.                   he(istart + $I_L2503_44, 1) = $he_WR0_R3
 2509.                endif
 2511.                $I_L2503_44 = 1 + $I_L2503_44
 2510.                if ( $I_L2503_44 >= iend + -istart + 1 ) exit
 2510.             enddo
 2510.          endif
 2512.          if ( -2 + kmax >= 0 ) then
 2513.             if ( iend + -istart >= 0 ) then
 2513.                $SI_L2513_46_G4 = 0
 2513.                do
 2512.                   $I_L2512_52 = 0
 2512. !dir$ blocking_size( 0, 0 )
 2512.                   do
 2513.                      $I_L2513_59 = 0
 2513. !dir$ ivdep
 2513. !dir$ blocking_size( 256, 256 )
 2513.                      do
 2514.                         if ( ierr(istart + $I_L2513_59 + 256 * $SI_L2513_46_G4) == 0 ) then
 2515.                            $z_WR0_R5 = z(istart + $I_L2513_59 + 256 * $SI_L2513_46_G4, 1 + $I_L2512_52) + ( 5.0e-1 * tv(istart + $I_L2513_59 + 256 * $SI_L2513_46_G4, 2 + $I_L2512_52) + 5.0e-1 * tv(istart + $I_L2513_59 + 256 * $SI_L2513_46_G4, 1 + $I_L2512_52) ) * ( log( p(istart + $I_L2513_59 + 256 * $SI_L2513_46_G4, 2 + $I_L2512_52) ) + -log( p(istart + $I_L2513_59 + 256 * $SI_L2513_46_G4, 1 + $I_L2512_52) ) ) * -29.255861365953105
 2515.                            z(istart + $I_L2513_59 + 256 * $SI_L2513_46_G4, 2 + $I_L2512_52) = $z_WR0_R5
 2517.                            $he_WR0_R6 = 9.8100000000000005 * $z_WR0_R5 + 1004.0 * t(istart + $I_L2513_59 + 256 * $SI_L2513_46_G4, 2 + $I_L2512_52) + 2500000.0 * q(istart + $I_L2513_59 + 256 * $SI_L2513_46_G4, 2 + $I_L2512_52)
 2518.                            $hes_WR0_R7 = 9.8100000000000005 * $z_WR0_R5 + 1004.0 * t(istart + $I_L2513_59 + 256 * $SI_L2513_46_G4, 2 + $I_L2512_52) + 2500000.0 * qes(istart + $I_L2513_59 + 256 * $SI_L2513_46_G4, 2 + $I_L2512_52)
 2518.                            hes(istart + $I_L2513_59 + 256 * $SI_L2513_46_G4, 2 + $I_L2512_52) = $hes_WR0_R7
 2519.                            $he_WR0_R6 = min( $he_WR0_R6, $hes_WR0_R7 )
 2519.                            he(istart + $I_L2513_59 + 256 * $SI_L2513_46_G4, 2 + $I_L2512_52) = $he_WR0_R6
 2519.                         endif
 2513.                         $I_L2513_59 = 1 + $I_L2513_59
 2520.                         if ( $I_L2513_59 >= min( iend + -istart + 1, 256 + 256 * $SI_L2513_46_G4 ) + -256 * $SI_L2513_46_G4 ) exit
 2520.                      enddo
 2522.                      $I_L2512_52 = 1 + $I_L2512_52
 2522.                      if ( $I_L2512_52 >= -1 + kmax ) exit
 2522.                   enddo
 2513.                   $SI_L2513_46_G4 = 1 + $SI_L2513_46_G4
 2521.                   if ( $SI_L2513_46_G4 >= _rsh( iend + -istart + 256, 8 ) ) exit
 2521.                enddo
 2521.             endif
 2521.          endif
 2521.       else if ( kmax > 0 ) then
 2525.          if ( iend + -istart >= 0 ) then
 2524.             $I_L2524_54 = 0
 2524. !dir$ blocking_size( 0, 0 )
 2524.             do
 2525.                $I_L2525_48 = 0
 2525. !dir$ ivdep
 2525. !dir$ blocking_size( 0, 0 )
 2525.                do
 2526.                   if ( ierr(istart + $I_L2525_48) == 0 ) then
 2527.                      $z_WR0_R8 = 1.019367991845056e-1 * ( he(istart + $I_L2525_48, 1 + $I_L2524_54) + -1004.0 * t(istart + $I_L2525_48, 1 + $I_L2524_54) + -2500000.0 * q(istart + $I_L2525_48, 1 + $I_L2524_54) )
 2528.                      $z_WR0_R8 = max( 1.0e-3, $z_WR0_R8 )
 2528.                      z(istart + $I_L2525_48, 1 + $I_L2524_54) = $z_WR0_R8
 2529.                      $hes_WR0_R9 = 9.8100000000000005 * $z_WR0_R8 + 1004.0 * t(istart + $I_L2525_48, 1 + $I_L2524_54) + 2500000.0 * qes(istart + $I_L2525_48, 1 + $I_L2524_54)
 2529.                      hes(istart + $I_L2525_48, 1 + $I_L2524_54) = $hes_WR0_R9
 2530.                      he(istart + $I_L2525_48, 1 + $I_L2524_54) = min( $hes_WR0_R9, he(istart + $I_L2525_48, 1 + $I_L2524_54) )
 2530.                   endif
 2532.                   $I_L2525_48 = 1 + $I_L2525_48
 2531.                   if ( $I_L2525_48 >= iend + -istart + 1 ) exit
 2531.                enddo
 2533.                $I_L2524_54 = 1 + $I_L2524_54
 2532.                if ( $I_L2524_54 >= kmax ) exit
 2532.             enddo
 2532.          endif
 2532.       endif
 2449.       _free( t$683 )
 2536.       return
 2536.       end
 2536.       
 2539.       
 2539.       subroutine cup_env_clev( t, qes, q, he, hes, z, p, qes_cup, q_cup, he_cup, hes_cup, z_cup, p_cup, gamma_cup, t_cup, psur, ncols, kmax, istart, iend, ierr, z1 )
 2539.       t$27 = ncols
 2539.       t$28 = kmax
 2551.       t$686 = _zla( 0, ncols )
 2539.       t$687 = _zla( 0, ncols )
 2551.       t$688 = _zla( 0, kmax )
 2539.       t$689 = _zla( 0, ncols ) * _zla( 0, kmax )
 2592.       if ( -2 + kmax >= 0 ) then
 2593.          if ( iend + -istart >= 0 ) then
 2593.             $SI_L2593_18_G1 = 0
 2593.             do
 2592.                $I_L2592_22 = 0
 2592. !dir$ blocking_size( 0, 0 )
 2592.                do
 2593.                   $I_L2593_24 = 0
 2593. !dir$ ivdep
 2593. !dir$ blocking_size( 256, 256 )
 2593.                   do
 2594.                      if ( ierr(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1) == 0 ) then
 2595.                         $qes_cup_WR0_R0 = 5.0e-1 * ( qes(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 1 + $I_L2592_22) + qes(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 2 + $I_L2592_22) )
 2595.                         qes_cup(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 2 + $I_L2592_22) = $qes_cup_WR0_R0
 2596.                         q_cup(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 2 + $I_L2592_22) = 5.0e-1 * ( q(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 1 + $I_L2592_22) + q(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 2 + $I_L2592_22) )
 2597.                         $hes_cup_WR0_R1 = 5.0e-1 * ( hes(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 1 + $I_L2592_22) + hes(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 2 + $I_L2592_22) )
 2597.                         hes_cup(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 2 + $I_L2592_22) = $hes_cup_WR0_R1
 2598.                         $he_cup_WR0_R2 = 5.0e-1 * ( he(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 1 + $I_L2592_22) + he(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 2 + $I_L2592_22) )
 2600.                         $he_cup_WR0_R2 = min( $hes_cup_WR0_R1, $he_cup_WR0_R2 )
 2600.                         he_cup(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 2 + $I_L2592_22) = $he_cup_WR0_R2
 2601.                         z_cup(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 2 + $I_L2592_22) = 5.0e-1 * ( z(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 1 + $I_L2592_22) + z(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 2 + $I_L2592_22) )
 2602.                         p_cup(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 2 + $I_L2592_22) = 5.0e-1 * ( p(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 1 + $I_L2592_22) + p(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 2 + $I_L2592_22) )
 2603.                         $t_cup_WR0_R3 = 5.0e-1 * ( t(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 1 + $I_L2592_22) + t(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 2 + $I_L2592_22) )
 2603.                         t_cup(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 2 + $I_L2592_22) = $t_cup_WR0_R3
 2604.                         gamma_cup(istart + $I_L2593_24 + 256 * $SI_L2593_18_G1, 2 + $I_L2592_22) = $qes_cup_WR0_R0 * 1.0/( $t_cup_WR0_R3 * $t_cup_WR0_R3 ) * 13477158.695807807
 2604.                      endif
 2593.                      $I_L2593_24 = 1 + $I_L2593_24
 2606.                      if ( $I_L2593_24 >= min( iend + -istart + 1, 256 + 256 * $SI_L2593_18_G1 ) + -256 * $SI_L2593_18_G1 ) exit
 2606.                   enddo
 2608.                   $I_L2592_22 = 1 + $I_L2592_22
 2608.                   if ( $I_L2592_22 >= -1 + kmax ) exit
 2608.                enddo
 2593.                $SI_L2593_18_G1 = 1 + $SI_L2593_18_G1
 2607.                if ( $SI_L2593_18_G1 >= _rsh( iend + -istart + 256, 8 ) ) exit
 2607.             enddo
 2607.          endif
 2607.       endif
 2610.       if ( iend + -istart >= 0 ) then
 2610.          $I_L2610_20 = 0
 2610. !dir$ ivdep
 2610.          do
 2611.             if ( ierr(istart + $I_L2610_20) == 0 ) then
 2612.                $qes_cup_WR0_R4 = qes(istart + $I_L2610_20, 1)
 2612.                qes_cup(istart + $I_L2610_20, 1) = $qes_cup_WR0_R4
 2613.                q_cup(istart + $I_L2610_20, 1) = q(istart + $I_L2610_20, 1)
 2614.                hes_cup(istart + $I_L2610_20, 1) = hes(istart + $I_L2610_20, 1)
 2615.                he_cup(istart + $I_L2610_20, 1) = he(istart + $I_L2610_20, 1)
 2617.                z_cup(istart + $I_L2610_20, 1) = 5.0e-1 * ( z(istart + $I_L2610_20, 1) + z1(istart + $I_L2610_20) )
 2618.                p_cup(istart + $I_L2610_20, 1) = 5.0e-1 * ( p(istart + $I_L2610_20, 1) + psur(istart + $I_L2610_20) )
 2619.                $t_cup_WR0_R5 = t(istart + $I_L2610_20, 1)
 2619.                t_cup(istart + $I_L2610_20, 1) = $t_cup_WR0_R5
 2620.                gamma_cup(istart + $I_L2610_20, 1) = $qes_cup_WR0_R4 * 1.0/( $t_cup_WR0_R5 * $t_cup_WR0_R5 ) * 13477158.695807807
 2620.             endif
 2623.             $I_L2610_20 = 1 + $I_L2610_20
 2622.             if ( $I_L2610_20 >= iend + -istart + 1 ) exit
 2622.          enddo
 2622.       endif
 2624.       return
 2624.       end
 2624.       
 2628.       
 2628.       subroutine cup_maximi( array, ncols, kmax, ks, ke, maxx, istart, iend, ierr )
 2628.       t$29 = ncols
 2628.       t$30 = kmax
 2638.       t$690 = _zla( 0, ncols )
 2628.       t$691 = _zla( 0, ncols )
 2638.       t$692 = _zla( 0, kmax )
 2628.       t$693 = _zla( 0, ncols ) * _zla( 0, kmax )
 2643.       t$696 = 8 * _zla( 0, ncols )
 2628.       t$694 = int( _alloc( 8 * _zla( 0, ncols ) ), 8 )
 2643.       t$695 = t$694
 2647.       if ( iend + -istart >= 0 ) then
 2647.          $I_L2647_23 = 0
 2647. !dir$ ivdep
 2647.          do
 2648.             maxx(istart + $I_L2647_23) = ks
 2649.             if ( ierr(istart + $I_L2647_23) == 0 ) then
 2650.                x(istart + $I_L2647_23) = array(istart + $I_L2647_23, ks)
 2650.             endif
 2652.             $I_L2647_23 = 1 + $I_L2647_23
 2651.             if ( $I_L2647_23 >= iend + -istart + 1 ) exit
 2651.          enddo
 2651.       endif
 2653.       if ( kmax > 0 ) then
 2654.          if ( iend + -istart >= 0 ) then
 2653.             $I_L2653_16 = 0
 2662.             if ( 0 >= -1 + ks ) then
 2662.                goto 10
 2662.             else
 2662.                $I_L2653_16 = min( kmax, -1 + ks )
 2662.                if ( -1 + ks < kmax ) then
 2662.    10             continue
 2653.                   $I_L2653_27 = 0
 2653. !dir$ blocking_size( 0, 0 )
 2653.                   do
 2654.                      $I_L2654_25 = 0
 2654. !dir$ ivdep
 2654. !dir$ blocking_size( 0, 0 )
 2654.                      do
 2655.                         if ( ierr(istart + $I_L2654_25) == 0 ) then
 2655.                            if ( ( $I_L2653_16 + $I_L2653_27 + 1 ) <= ke(istart + $I_L2654_25) ) then
 2656.                               if ( array(istart + $I_L2654_25, $I_L2653_16 + $I_L2653_27 + 1) >= x(istart + $I_L2654_25) ) then
 2657.                                  x(istart + $I_L2654_25) = array(istart + $I_L2654_25, $I_L2653_16 + $I_L2653_27 + 1)
 2658.                                  maxx(istart + $I_L2654_25) = ( $I_L2653_16 + $I_L2653_27 + 1 )
 2658.                               endif
 2658.                            endif
 2658.                         endif
 2661.                         $I_L2654_25 = 1 + $I_L2654_25
 2660.                         if ( $I_L2654_25 >= iend + -istart + 1 ) exit
 2660.                      enddo
 2662.                      $I_L2653_27 = 1 + $I_L2653_27
 2661.                      if ( $I_L2653_27 >= kmax + -$I_L2653_16 ) exit
 2661.                   enddo
 2661.                endif
 2661.             endif
 2661.          endif
 2661.       endif
 2628.       _free( t$694 )
 2664.       return
 2664.       end
 2664.       
 2668.       
 2668.       subroutine cup_minimi( array, ncols, kmax, ks, kend, kt, istart, iend, ierr )
 2668.       t$31 = ncols
 2668.       t$32 = kmax
 2676.       t$697 = _zla( 0, ncols )
 2668.       t$698 = _zla( 0, ncols )
 2676.       t$699 = _zla( 0, kmax )
 2668.       t$700 = _zla( 0, ncols ) * _zla( 0, kmax )
 2683.       t$703 = 4 * _zla( 0, ncols )
 2682.       t$704 = 8 * ( ( 7 + 4 * _zla( 0, ncols ) ) / 8 )
 2682.       t$706 = 8 * ( ( 7 + 4 * _zla( 0, ncols ) ) / 8 ) + 8 * _zla( 0, ncols )
 2668.       t$701 = int( _alloc( 8 * ( ( 7 + 4 * _zla( 0, ncols ) ) / 8 ) + 8 * _zla( 0, ncols ) ), 8 )
 2683.       t$702 = t$701
 2682.       t$705 = t$701 + 8 * ( ( 7 + 4 * _zla( 0, ncols ) ) / 8 )
 2687.       if ( iend + -istart >= 0 ) then
 2687.          $I_L2687_12 = 0
 2687. !dir$ ivdep
 2687.          do
 2688.             kt(istart + $I_L2687_12) = ks(istart + $I_L2687_12)
 2689.             if ( ierr(istart + $I_L2687_12) == 0 ) then
 2690.                x(istart + $I_L2687_12) = array(istart + $I_L2687_12, ks(istart + $I_L2687_12))
 2691.                kstop(istart + $I_L2687_12) = max( kend(istart + $I_L2687_12), 1 + ks(istart + $I_L2687_12) )
 2691.             endif
 2693.             $I_L2687_12 = 1 + $I_L2687_12
 2692.             if ( $I_L2687_12 >= iend + -istart + 1 ) exit
 2692.          enddo
 2692.       endif
 2695.       if ( kmax > 0 ) then
 2696.          if ( iend + -istart >= 0 ) then
 2695.             $SI_L2695_18_G1 = 0
 2695.             do
 2696.                $I_L2696_20 = 0
 2696. !dir$ ivdep
 2696. !dir$ blocking_size( 0, 0 )
 2696.                do
 2695.                   $SCA_ierr_I0 = ierr(istart + $I_L2696_20)
 2695.                   $I_L2695_22 = 0
 2695. !dir$ unroll 4
 2695. !dir$ blocking_size( 256, 256 )
 2695.                   do
 2697.                      if ( $SCA_ierr_I0 == 0 ) then
 2698.                         if ( ( $I_L2695_22 + 256 * $SI_L2695_18_G1 + 1 ) >= 1 + ks(istart + $I_L2696_20) ) then
 2698.                            if ( ( $I_L2695_22 + 256 * $SI_L2695_18_G1 + 1 ) <= kstop(istart + $I_L2696_20) ) then
 2699.                               if ( array(istart + $I_L2696_20, $I_L2695_22 + 256 * $SI_L2695_18_G1 + 1) < x(istart + $I_L2696_20) ) then
 2700.                                  x(istart + $I_L2696_20) = array(istart + $I_L2696_20, $I_L2695_22 + 256 * $SI_L2695_18_G1 + 1)
 2701.                                  kt(istart + $I_L2696_20) = ( $I_L2695_22 + 256 * $SI_L2695_18_G1 + 1 )
 2701.                               endif
 2701.                            endif
 2701.                         endif
 2701.                      endif
 2695.                      $I_L2695_22 = 1 + $I_L2695_22
 2704.                      if ( $I_L2695_22 >= min( kmax, 256 + 256 * $SI_L2695_18_G1 ) + -256 * $SI_L2695_18_G1 ) exit
 2704.                   enddo
 2705.                   $I_L2696_20 = 1 + $I_L2696_20
 2705.                   if ( $I_L2696_20 >= iend + -istart + 1 ) exit
 2705.                enddo
 2695.                $SI_L2695_18_G1 = 1 + $SI_L2695_18_G1
 2705.                if ( $SI_L2695_18_G1 >= _rsh( 255 + kmax, 8 ) ) exit
 2705.             enddo
 2705.          endif
 2705.       endif
 2668.       _free( t$701 )
 2708.       return
 2708.       end
 2708.       
 2710.       
 2710.       subroutine cup_kbcon( cap_inc, iloop, k22, kbcon, he_cup, hes_cup, ncols, kmax, istart, iend, ierr, kbmax, p_cup, cap_max )
 2710.       t$33 = ncols
 2721.       t$707 = _zla( 0, ncols )
 2710.       t$34 = kmax
 2710.       t$708 = _zla( 0, ncols )
 2725.       t$709 = _zla( 0, kmax )
 2710.       t$710 = _zla( 0, ncols ) * _zla( 0, kmax )
 2710.       t$35 = ( iend + -istart + 1 )
 2735.       t$711 = _zla( 0, ( iend + -istart + 1 ) )
 2735.       t$714 = 4 * _zla( 0, ( iend + -istart + 1 ) )
 2738.       t$716 = 8 * _zla( 0, ( iend + -istart + 1 ) )
 2710.       t$712 = int( _alloc( 8 * _zla( 0, ( iend + -istart + 1 ) ) ), 8 )
 2735.       t$713 = t$712
 2738.       t$715 = t$712 + 4 * _zla( 0, ( iend + -istart + 1 ) )
 2744.       $F_A33 = ncols
 2744.       if ( ncols > 0 ) then
 2744.          $I_L2744_36 = 0
 2744. !dir$ ivdep
 2744.          do
 2744.             kbcon(1 + $I_L2744_36) = 1
 2744.             $I_L2744_36 = 1 + $I_L2744_36
 2744.             if ( $I_L2744_36 >= $F_A33 ) exit
 2744.          enddo
 2744.       endif
 2745.       $nleft_S1 = 0
 2746.       if ( iend + -istart >= 0 ) then
 2746.          $I_L2746_26 = 0
 2746. !dir$ ivdep
 2746.          do
 2747.             if ( ierr(istart + $I_L2746_26) == 0 ) then
 2748.                kbcon(istart + $I_L2746_26) = k22(istart + $I_L2746_26)
 2749.                $nleft_S1 = 1 + $nleft_S1
 2750.                left($nleft_S1) = ( istart + $I_L2746_26 )
 2750.             else
 2752.                kbcon(istart + $I_L2746_26) = 1
 2752.             endif
 2754.             $I_L2746_26 = 1 + $I_L2746_26
 2753.             if ( $I_L2746_26 >= iend + -istart + 1 ) exit
 2753.          enddo
 2753.       endif
 2755.       do
 2756.          if ( $nleft_S1 == 0 ) then
 2710.             _free( t$712 )
 2807.             return
 2807.             goto <unknown>
 2807.          endif
 2760.          $nnewleft_S4 = 0
 2761.          $ntocontinue_S5 = 0
 2763.          if ( $nleft_S1 > 0 ) then
 2768.             if ( iloop < 4 ) then
 2763.                $I_L2763_28 = 0
 2763. !dir$ unroll 4
 2763.                do
 2764.                   $i_S3 = left(1 + $I_L2763_28)
 2765.                   if ( he_cup($i_S3, k22($i_S3)) < hes_cup($i_S3, kbcon($i_S3)) ) then
 2766.                      kbcon($i_S3) = 1 + kbcon($i_S3)
 2767.                      if ( kbcon($i_S3) > 2 + kbmax($i_S3) ) then
 2769.                         ierr($i_S3) = 3
 2769.                      else
 2774.                         $nnewleft_S4 = 1 + $nnewleft_S4
 2775.                         left($nnewleft_S4) = $i_S3
 2775.                      endif
 2775.                   else
 2778.                      $ntocontinue_S5 = 1 + $ntocontinue_S5
 2779.                      tocontinue($ntocontinue_S5) = $i_S3
 2779.                   endif
 2781.                   $I_L2763_28 = 1 + $I_L2763_28
 2780.                   if ( $I_L2763_28 >= $nleft_S1 ) exit
 2780.                enddo
 2780.             else if ( iloop == 4 ) then
 2763.                $I_L2763_32 = 0
 2763. !dir$ unroll 4
 2763.                do
 2764.                   $i_S3 = left(1 + $I_L2763_32)
 2765.                   if ( he_cup($i_S3, k22($i_S3)) < hes_cup($i_S3, kbcon($i_S3)) ) then
 2766.                      kbcon($i_S3) = 1 + kbcon($i_S3)
 2767.                      if ( kbcon($i_S3) > 2 + kbmax($i_S3) ) then
 2771.                         ierr($i_S3) = 997
 2771.                      else
 2774.                         $nnewleft_S4 = 1 + $nnewleft_S4
 2775.                         left($nnewleft_S4) = $i_S3
 2775.                      endif
 2775.                   else
 2778.                      $ntocontinue_S5 = 1 + $ntocontinue_S5
 2779.                      tocontinue($ntocontinue_S5) = $i_S3
 2779.                   endif
 2781.                   $I_L2763_32 = 1 + $I_L2763_32
 2780.                   if ( $I_L2763_32 >= $nleft_S1 ) exit
 2780.                enddo
 2780.             else
 2763.                $I_L2763_34 = 0
 2763. !dir$ unroll 4
 2763.                do
 2764.                   $i_S3 = left(1 + $I_L2763_34)
 2765.                   if ( he_cup($i_S3, k22($i_S3)) < hes_cup($i_S3, kbcon($i_S3)) ) then
 2766.                      kbcon($i_S3) = 1 + kbcon($i_S3)
 2767.                      if ( kbcon($i_S3) <= 2 + kbmax($i_S3) ) then
 2774.                         $nnewleft_S4 = 1 + $nnewleft_S4
 2775.                         left($nnewleft_S4) = $i_S3
 2775.                      endif
 2775.                   else
 2778.                      $ntocontinue_S5 = 1 + $ntocontinue_S5
 2779.                      tocontinue($ntocontinue_S5) = $i_S3
 2779.                   endif
 2781.                   $I_L2763_34 = 1 + $I_L2763_34
 2780.                   if ( $I_L2763_34 >= $nleft_S1 ) exit
 2780.                enddo
 2780.             endif
 2780.          endif
 2784.          if ( $ntocontinue_S5 > 0 ) then
 2784.             $I_L2784_30 = 0
 2784. !dir$ unroll 2
 2784.             do
 2785.                $i_S7 = tocontinue(1 + $I_L2784_30)
 2786.                if ( kbcon($i_S7) + -k22($i_S7) /= 1 ) then
 2792.                   $pbcdif_S9 = -p_cup($i_S7, kbcon($i_S7)) + p_cup($i_S7, k22($i_S7))
 2793.                   $plus_S8 = max( 25.0, cap_max($i_S7) + -( real( -1 + iloop, 8 ) * cap_inc ) )
 2794.                   if ( $pbcdif_S9 > $plus_S8 ) then
 2795.                      k22($i_S7) = 1 + k22($i_S7)
 2796.                      kbcon($i_S7) = k22($i_S7)
 2797.                      $nnewleft_S4 = 1 + $nnewleft_S4
 2798.                      left($nnewleft_S4) = $i_S7
 2798.                   endif
 2798.                endif
 2801.                $I_L2784_30 = 1 + $I_L2784_30
 2800.                if ( $I_L2784_30 >= $ntocontinue_S5 ) exit
 2800.             enddo
 2800.          endif
 2801.       enddo
 2801.       end
 2801.       
 2810.       
 2810.       subroutine cup_up_he( k22, hkb, z_cup, cd, entr, he_cup, hc, ncols, kmax, kbcon, ierr, istart, iend, dby, he, hes_cup )
 2810.       t$36 = ncols
 2823.       t$717 = _zla( 0, ncols )
 2810.       t$37 = kmax
 2810.       t$718 = _zla( 0, ncols )
 2827.       t$719 = _zla( 0, kmax )
 2810.       t$720 = _zla( 0, ncols ) * _zla( 0, kmax )
 2850.       if ( iend + -istart >= 0 ) then
 2850.          $I_L2850_39 = 0
 2850. !dir$ ivdep
 2850.          do
 2851.             if ( ierr(istart + $I_L2850_39) == 0 ) then
 2852.                hkb(istart + $I_L2850_39) = he_cup(istart + $I_L2850_39, k22(istart + $I_L2850_39))
 2852.             endif
 2854.             $I_L2850_39 = 1 + $I_L2850_39
 2853.             if ( $I_L2850_39 >= iend + -istart + 1 ) exit
 2853.          enddo
 2853.       endif
 2856.       if ( kmax > 0 ) then
 2857.          if ( iend + -istart >= 0 ) then
 2856.             $I_L2856_47 = 0
 2856. !dir$ blocking_size( 0, 0 )
 2856.             do
 2857.                $I_L2857_41 = 0
 2857. !dir$ ivdep
 2857. !dir$ blocking_size( 0, 0 )
 2857.                do
 2858.                   if ( ierr(istart + $I_L2857_41) == 0 ) then
 2858.                      if ( ( 1 + $I_L2856_47 ) < k22(istart + $I_L2857_41) ) then
 2858.                         if ( ( 1 + $I_L2856_47 ) <= -1 + kbcon(istart + $I_L2857_41) ) then
 2859.                            hc(istart + $I_L2857_41, 1 + $I_L2856_47) = he_cup(istart + $I_L2857_41, 1 + $I_L2856_47)
 2860.                            dby(istart + $I_L2857_41, 1 + $I_L2856_47) = 0.0
 2860.                         endif
 2862.                      else if ( ( 1 + $I_L2856_47 ) <= -1 + kbcon(istart + $I_L2857_41) ) then
 2863.                         hc(istart + $I_L2857_41, 1 + $I_L2856_47) = hkb(istart + $I_L2857_41)
 2864.                         dby(istart + $I_L2857_41, 1 + $I_L2856_47) = 0.0
 2864.                      endif
 2864.                   endif
 2866.                   $I_L2857_41 = 1 + $I_L2857_41
 2865.                   if ( $I_L2857_41 >= iend + -istart + 1 ) exit
 2865.                enddo
 2867.                $I_L2856_47 = 1 + $I_L2856_47
 2866.                if ( $I_L2856_47 >= kmax ) exit
 2866.             enddo
 2866.          endif
 2866.       endif
 2869.       if ( iend + -istart >= 0 ) then
 2869.          $I_L2869_43 = 0
 2869. !dir$ ivdep
 2869.          do
 2870.             if ( ierr(istart + $I_L2869_43) == 0 ) then
 2871.                hc(istart + $I_L2869_43, kbcon(istart + $I_L2869_43)) = hkb(istart + $I_L2869_43)
 2872.                dby(istart + $I_L2869_43, kbcon(istart + $I_L2869_43)) = hkb(istart + $I_L2869_43) + -hes_cup(istart + $I_L2869_43, kbcon(istart + $I_L2869_43))
 2872.             endif
 2874.             $I_L2869_43 = 1 + $I_L2869_43
 2873.             if ( $I_L2869_43 >= iend + -istart + 1 ) exit
 2873.          enddo
 2873.       endif
 2875.       if ( -1 + kmax > 0 ) then
 2876.          if ( iend + -istart >= 0 ) then
 2886.             if ( -2 + kmax > 0 ) then
 2876.                $SI_L2876_45_G2 = 0
 2876.                do
 2875.                   $I_L2875_49 = 0
 2875. !dir$ blocking_size( 0, 0 )
 2875.                   do
 2876.                      $I_L2876_51 = 0
 2876. !dir$ ivdep
 2876. !dir$ blocking_size( 256, 256 )
 2876.                      do
 2877.                         if ( ( 2 + $I_L2875_49 ) >= kbcon(istart + $I_L2876_51 + 256 * $SI_L2876_45_G2) ) then
 2877.                            if ( ierr(istart + $I_L2876_51 + 256 * $SI_L2876_45_G2) == 0 ) then
 2878.                               $dz_S6 = z_cup(istart + $I_L2876_51 + 256 * $SI_L2876_45_G2, 2 + $I_L2875_49) + -z_cup(istart + $I_L2876_51 + 256 * $SI_L2876_45_G2, 1 + $I_L2875_49)
 2880.                               $hc_WR0_R0 = ( ( hc(istart + $I_L2876_51 + 256 * $SI_L2876_45_G2, 1 + $I_L2875_49) * ( 1.0 + $dz_S6 * cd(istart + $I_L2876_51 + 256 * $SI_L2876_45_G2, 2 + $I_L2875_49) * -5.0e-1 ) + entr * $dz_S6 * he(istart + $I_L2876_51 + 256 * $SI_L2876_45_G2, 1 + $I_L2875_49) ) * 1.0/( $dz_S6 * cd(istart + $I_L2876_51 + 256 * $SI_L2876_45_G2, 2 + $I_L2875_49) * -5.0e-1 + entr * $dz_S6 + 1.0 ) )
 2880.                               hc(istart + $I_L2876_51 + 256 * $SI_L2876_45_G2, 2 + $I_L2875_49) = $hc_WR0_R0
 2883.                               dby(istart + $I_L2876_51 + 256 * $SI_L2876_45_G2, 2 + $I_L2875_49) = $hc_WR0_R0 + -hes_cup(istart + $I_L2876_51 + 256 * $SI_L2876_45_G2, 2 + $I_L2875_49)
 2883.                            endif
 2883.                         endif
 2876.                         $I_L2876_51 = 1 + $I_L2876_51
 2884.                         if ( $I_L2876_51 >= min( iend + -istart + 1, 256 + 256 * $SI_L2876_45_G2 ) + -256 * $SI_L2876_45_G2 ) exit
 2884.                      enddo
 2886.                      $I_L2875_49 = 1 + $I_L2875_49
 2886.                      if ( $I_L2875_49 >= -2 + kmax ) exit
 2886.                   enddo
 2876.                   $SI_L2876_45_G2 = 1 + $SI_L2876_45_G2
 2885.                   if ( $SI_L2876_45_G2 >= _rsh( iend + -istart + 256, 8 ) ) exit
 2885.                enddo
 2885.             endif
 2885.          endif
 2885.       endif
 2888.       return
 2888.       end
 2888.       
 2891.       
 2891.       subroutine cup_ktop( ilo, dby, kbcon, ktop, ncols, kmax, istart, iend, ierr )
 2891.       t$38 = ncols
 2891.       t$39 = kmax
 2904.       t$721 = _zla( 0, ncols )
 2891.       t$722 = _zla( 0, ncols )
 2904.       t$723 = _zla( 0, kmax )
 2891.       t$724 = _zla( 0, ncols ) * _zla( 0, kmax )
 2909.       $F_A33 = ( iend + -istart + 1 )
 2909.       if ( iend + -istart >= 0 ) then
 2909.          $I_L2909_46 = 0
 2909. !dir$ ivdep
 2909.          do
 2909.             ktop(istart + $I_L2909_46) = 1
 2909.             $I_L2909_46 = 1 + $I_L2909_46
 2909.             if ( $I_L2909_46 >= $F_A33 ) exit
 2909.          enddo
 2909.       endif
 2910.       if ( -2 + kmax > 0 ) then
 2911.          if ( iend + -istart >= 0 ) then
 2910.             $SI_L2910_38_G1 = 0
 2910.             do
 2911.                $I_L2911_48 = 0
 2911. !dir$ ivdep
 2911. !dir$ blocking_size( 0, 0 )
 2911.                do
 2910.                   $SCA_ierr_I0 = ierr(istart + $I_L2911_48)
 2910.                   $I_L2910_52 = 0
 2910. !dir$ unroll 4
 2910. !dir$ blocking_size( 256, 256 )
 2910.                   do
 2912.                      if ( $SCA_ierr_I0 == 0 ) then
 2912.                         if ( ( $I_L2910_52 + 256 * $SI_L2910_38_G1 + 1 ) >= 1 + kbcon(istart + $I_L2911_48) ) then
 2913.                            if ( dby(istart + $I_L2911_48, $I_L2910_52 + 256 * $SI_L2910_38_G1 + 1) <= 0.0 ) then
 2913.                               if ( ktop(istart + $I_L2911_48) == 1 ) then
 2914.                                  ktop(istart + $I_L2911_48) = ( $I_L2910_52 + 256 * $SI_L2910_38_G1 )
 2914.                               endif
 2914.                            endif
 2914.                         endif
 2914.                      endif
 2910.                      $I_L2910_52 = 1 + $I_L2910_52
 2916.                      if ( $I_L2910_52 >= min( -2 + kmax, 256 + 256 * $SI_L2910_38_G1 ) + -256 * $SI_L2910_38_G1 ) exit
 2916.                   enddo
 2917.                   $I_L2911_48 = 1 + $I_L2911_48
 2917.                   if ( $I_L2911_48 >= iend + -istart + 1 ) exit
 2917.                enddo
 2910.                $SI_L2910_38_G1 = 1 + $SI_L2910_38_G1
 2917.                if ( $SI_L2910_38_G1 >= _rsh( 253 + kmax, 8 ) ) exit
 2917.             enddo
 2917.          endif
 2917.       endif
 2920.       if ( iend + -istart >= 0 ) then
 2922.          if ( ilo == 1 ) then
 2920.             $I_L2920_44 = 0
 2920. !dir$ ivdep
 2920.             do
 2921.                if ( ierr(istart + $I_L2920_44) == 0 ) then
 2921.                   if ( ktop(istart + $I_L2920_44) == 1 ) then
 2922.                      ierr(istart + $I_L2920_44) = 5
 2922.                   endif
 2922.                endif
 2925.                $I_L2920_44 = 1 + $I_L2920_44
 2924.                if ( $I_L2920_44 >= iend + -istart + 1 ) exit
 2924.             enddo
 2924.          else if ( ilo == 2 ) then
 2920.             $I_L2920_42 = 0
 2920. !dir$ ivdep
 2920.             do
 2921.                if ( ierr(istart + $I_L2920_42) == 0 ) then
 2921.                   if ( ktop(istart + $I_L2920_42) == 1 ) then
 2923.                      ierr(istart + $I_L2920_42) = 998
 2923.                   endif
 2923.                endif
 2925.                $I_L2920_42 = 1 + $I_L2920_42
 2924.                if ( $I_L2920_42 >= iend + -istart + 1 ) exit
 2924.             enddo
 2924.          endif
 2924.       endif
 2927.       if ( kmax > 0 ) then
 2928.          if ( iend + -istart >= 0 ) then
 2928.             $SI_L2928_40_G4 = 0
 2928.             do
 2927.                $I_L2927_50 = 0
 2927. !dir$ ivdep
 2927. !dir$ blocking_size( 0, 0 )
 2927.                do
 2928.                   $I_L2928_55 = 0
 2928. !dir$ blocking_size( 256, 256 )
 2928.                   do
 2929.                      if ( ierr(istart + $I_L2928_55 + 256 * $SI_L2928_40_G4) == 0 ) then
 2929.                         if ( ( 1 + $I_L2927_50 ) >= 1 + ktop(istart + $I_L2928_55 + 256 * $SI_L2928_40_G4) ) then
 2930.                            dby(istart + $I_L2928_55 + 256 * $SI_L2928_40_G4, 1 + $I_L2927_50) = 0.0
 2930.                         endif
 2930.                      endif
 2928.                      $I_L2928_55 = 1 + $I_L2928_55
 2931.                      if ( $I_L2928_55 >= min( iend + -istart + 1, 256 + 256 * $SI_L2928_40_G4 ) + -256 * $SI_L2928_40_G4 ) exit
 2931.                   enddo
 2933.                   $I_L2927_50 = 1 + $I_L2927_50
 2933.                   if ( $I_L2927_50 >= kmax ) exit
 2933.                enddo
 2928.                $SI_L2928_40_G4 = 1 + $SI_L2928_40_G4
 2932.                if ( $SI_L2928_40_G4 >= _rsh( iend + -istart + 256, 8 ) ) exit
 2932.             enddo
 2932.          endif
 2932.       endif
 2935.       return
 2935.       end
 2935.       
 2939.       
 2939.       subroutine cup_up_nms( zu, z_cup, entr, cd, kbcon, ktop, ncols, kmax, istart, iend, ierr, k22 )
 2939.       t$40 = ncols
 2939.       t$41 = kmax
 2950.       t$725 = _zla( 0, ncols )
 2939.       t$726 = _zla( 0, ncols )
 2950.       t$727 = _zla( 0, kmax )
 2939.       t$728 = _zla( 0, ncols ) * _zla( 0, kmax )
 2962.       if ( kmax > 0 ) then
 2963.          if ( iend + -istart >= 0 ) then
 2962.             $I_L2962_30 = 0
 2962. !dir$ blocking_size( 0, 0 )
 2962.             do
 2963.                $I_L2963_24 = 0
 2963. !dir$ ivdep
 2963. !dir$ blocking_size( 0, 0 )
 2963.                do
 2964.                   if ( ierr(istart + $I_L2963_24) == 0 ) then
 2965.                      zu(istart + $I_L2963_24, 1 + $I_L2962_30) = 0.0
 2965.                   endif
 2967.                   $I_L2963_24 = 1 + $I_L2963_24
 2966.                   if ( $I_L2963_24 >= iend + -istart + 1 ) exit
 2966.                enddo
 2968.                $I_L2962_30 = 1 + $I_L2962_30
 2967.                if ( $I_L2962_30 >= kmax ) exit
 2967.             enddo
 2969.             $SI_L2969_36_G1 = 0
 2969.             do
 2970.                $I_L2970_38 = 0
 2970. !dir$ ivdep
 2970. !dir$ blocking_size( 0, 0 )
 2970.                do
 2969.                   $SCA_ierr_I0 = ierr(istart + $I_L2970_38)
 2969.                   $I_L2969_40 = 0
 2969. !dir$ blocking_size( 256, 256 )
 2969.                   do
 2971.                      if ( $SCA_ierr_I0 == 0 ) then
 2971.                         if ( ( $I_L2969_40 + 256 * $SI_L2969_36_G1 + 1 ) >= k22(istart + $I_L2970_38) ) then
 2971.                            if ( ( $I_L2969_40 + 256 * $SI_L2969_36_G1 + 1 ) <= kbcon(istart + $I_L2970_38) ) then
 2972.                               zu(istart + $I_L2970_38, $I_L2969_40 + 256 * $SI_L2969_36_G1 + 1) = 1.0
 2972.                            endif
 2972.                         endif
 2972.                      endif
 2969.                      $I_L2969_40 = 1 + $I_L2969_40
 2973.                      if ( $I_L2969_40 >= min( kmax, 256 + 256 * $SI_L2969_36_G1 ) + -256 * $SI_L2969_36_G1 ) exit
 2973.                   enddo
 2974.                   $I_L2970_38 = 1 + $I_L2970_38
 2974.                   if ( $I_L2970_38 >= iend + -istart + 1 ) exit
 2974.                enddo
 2969.                $SI_L2969_36_G1 = 1 + $SI_L2969_36_G1
 2974.                if ( $SI_L2969_36_G1 >= _rsh( 255 + kmax, 8 ) ) exit
 2974.             enddo
 2977.             $SI_L2977_28_G4 = 0
 2977.             do
 2976.                $I_L2976_34 = 0
 2976. !dir$ blocking_size( 0, 0 )
 2976.                do
 2977.                   $I_L2977_43 = 0
 2977. !dir$ ivdep
 2977. !dir$ blocking_size( 256, 256 )
 2977.                   do
 2978.                      if ( ierr(istart + $I_L2977_43 + 256 * $SI_L2977_28_G4) == 0 ) then
 2978.                         if ( ( 1 + $I_L2976_34 ) >= 1 + kbcon(istart + $I_L2977_43 + 256 * $SI_L2977_28_G4) ) then
 2978.                            if ( ( 1 + $I_L2976_34 ) <= ktop(istart + $I_L2977_43 + 256 * $SI_L2977_28_G4) ) then
 2979.                               $dz_S6 = z_cup(istart + $I_L2977_43 + 256 * $SI_L2977_28_G4, 1 + $I_L2976_34) + -z_cup(istart + $I_L2977_43 + 256 * $SI_L2977_28_G4, $I_L2976_34)
 2980.                               zu(istart + $I_L2977_43 + 256 * $SI_L2977_28_G4, 1 + $I_L2976_34) = zu(istart + $I_L2977_43 + 256 * $SI_L2977_28_G4, $I_L2976_34) * ( 1.0 + ( entr + -cd(istart + $I_L2977_43 + 256 * $SI_L2977_28_G4, 1 + $I_L2976_34) ) * $dz_S6 )
 2980.                            endif
 2980.                         endif
 2980.                      endif
 2977.                      $I_L2977_43 = 1 + $I_L2977_43
 2981.                      if ( $I_L2977_43 >= min( iend + -istart + 1, 256 + 256 * $SI_L2977_28_G4 ) + -256 * $SI_L2977_28_G4 ) exit
 2981.                   enddo
 2983.                   $I_L2976_34 = 1 + $I_L2976_34
 2983.                   if ( $I_L2976_34 >= kmax ) exit
 2983.                enddo
 2977.                $SI_L2977_28_G4 = 1 + $SI_L2977_28_G4
 2982.                if ( $SI_L2977_28_G4 >= _rsh( iend + -istart + 256, 8 ) ) exit
 2982.             enddo
 2982.          endif
 2982.       endif
 2986.       return
 2986.       end
 2986.       
 2990.       
 2990.       subroutine cup_dd_nms( zd, z_cup, cdd, entr, jmin, ierr, ncols, kmax, istart, iend, itest, kdet, z1 )
 2990.       t$42 = ncols
 2990.       t$43 = kmax
 3004.       t$729 = _zla( 0, ncols )
 2990.       t$730 = _zla( 0, ncols )
 3004.       t$731 = _zla( 0, kmax )
 2990.       t$732 = _zla( 0, ncols ) * _zla( 0, kmax )
 3027.       if ( kmax > 0 ) then
 3028.          if ( iend + -istart >= 0 ) then
 3031.             if ( itest == 0 ) then
 3027.                $I_L3027_38 = 0
 3027. !dir$ blocking_size( 0, 0 )
 3027.                do
 3028.                   $I_L3028_28 = 0
 3028. !dir$ ivdep
 3028. !dir$ blocking_size( 0, 0 )
 3028.                   do
 3029.                      if ( ierr(istart + $I_L3028_28) == 0 ) then
 3030.                         zd(istart + $I_L3028_28, 1 + $I_L3027_38) = 0.0
 3031.                         cdd(istart + $I_L3028_28, 1 + $I_L3027_38) = 0.0
 3031.                      endif
 3033.                      $I_L3028_28 = 1 + $I_L3028_28
 3032.                      if ( $I_L3028_28 >= iend + -istart + 1 ) exit
 3032.                   enddo
 3034.                   $I_L3027_38 = 1 + $I_L3027_38
 3033.                   if ( $I_L3027_38 >= kmax ) exit
 3033.                enddo
 3033.             else
 3027.                $I_L3027_42 = 0
 3027. !dir$ blocking_size( 0, 0 )
 3027.                do
 3028.                   $I_L3028_34 = 0
 3028. !dir$ ivdep
 3028. !dir$ blocking_size( 0, 0 )
 3028.                   do
 3029.                      if ( ierr(istart + $I_L3028_34) == 0 ) then
 3030.                         zd(istart + $I_L3028_34, 1 + $I_L3027_42) = 0.0
 3030.                      endif
 3033.                      $I_L3028_34 = 1 + $I_L3028_34
 3032.                      if ( $I_L3028_34 >= iend + -istart + 1 ) exit
 3032.                   enddo
 3034.                   $I_L3027_42 = 1 + $I_L3027_42
 3033.                   if ( $I_L3027_42 >= kmax ) exit
 3033.                enddo
 3033.             endif
 3033.          endif
 3033.       endif
 3038.       if ( iend + -istart >= 0 ) then
 3038.          $I_L3038_30 = 0
 3038. !dir$ ivdep
 3038.          do
 3039.             if ( ierr(istart + $I_L3038_30) == 0 ) then
 3040.                zd(istart + $I_L3038_30, jmin(istart + $I_L3038_30)) = 1.0
 3040.             endif
 3042.             $I_L3038_30 = 1 + $I_L3038_30
 3041.             if ( $I_L3038_30 >= iend + -istart + 1 ) exit
 3041.          enddo
 3041.       endif
 3043.       if ( 1 + -kmax < 0 ) then
 3044.          if ( iend + -istart >= 0 ) then
 3050.             if ( itest == 0 ) then
 3044.                $SI_L3044_32_G3 = 0
 3044.                do
 3043.                   $I_L3043_40 = 0
 3043. !dir$ blocking_size( 0, 0 )
 3043.                   do
 3044.                      $I_L3044_46 = 0
 3044. !dir$ ivdep
 3044. !dir$ blocking_size( 256, 256 )
 3044.                      do
 3045.                         if ( ierr(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3) == 0 ) then
 3045.                            if ( ( kmax + -$I_L3043_40 + -1 ) <= -1 + jmin(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3) ) then
 3049.                               $dz_S5 = z_cup(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3, kmax + -$I_L3043_40) + -z_cup(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3, kmax + -$I_L3043_40 + -1)
 3050.                               if ( ( kmax + -$I_L3043_40 + -1 ) <= kdet(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3) ) then
 3051.                                  cdd(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3, kmax + -$I_L3043_40 + -1) = entr + ( ( 1.0 + -( ( 9.6999999999999997e-1 * ( z_cup(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3, kmax + -$I_L3043_40 + -1) + -z1(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3) ) + 2.9999999999999999e-2 * ( z_cup(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3, kdet(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3)) + -z1(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3) ) ) * 1.0/( 9.6999999999999997e-1 * ( z_cup(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3, kmax + -$I_L3043_40) + -z1(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3) ) + 2.9999999999999999e-2 * ( z_cup(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3, kdet(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3)) + -z1(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3) ) ) ) ) * 1.0/$dz_S5 )
 3051.                               endif
 3056.                               zd(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3, kmax + -$I_L3043_40 + -1) = zd(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3, kmax + -$I_L3043_40) * ( 1.0 + ( entr + -cdd(istart + $I_L3044_46 + 256 * $SI_L3044_32_G3, kmax + -$I_L3043_40 + -1) ) * $dz_S5 )
 3056.                            endif
 3056.                         endif
 3044.                         $I_L3044_46 = 1 + $I_L3044_46
 3060.                         if ( $I_L3044_46 >= min( iend + -istart + 1, 256 + 256 * $SI_L3044_32_G3 ) + -256 * $SI_L3044_32_G3 ) exit
 3060.                      enddo
 3062.                      $I_L3043_40 = 1 + $I_L3043_40
 3062.                      if ( $I_L3043_40 >= -1 + kmax ) exit
 3062.                   enddo
 3044.                   $SI_L3044_32_G3 = 1 + $SI_L3044_32_G3
 3061.                   if ( $SI_L3044_32_G3 >= _rsh( iend + -istart + 256, 8 ) ) exit
 3061.                enddo
 3061.             else
 3044.                $SI_L3044_36_G6 = 0
 3044.                do
 3043.                   $I_L3043_44 = 0
 3043. !dir$ blocking_size( 0, 0 )
 3043.                   do
 3044.                      $I_L3044_49 = 0
 3044. !dir$ ivdep
 3044. !dir$ blocking_size( 256, 256 )
 3044.                      do
 3045.                         if ( ierr(istart + $I_L3044_49 + 256 * $SI_L3044_36_G6) == 0 ) then
 3045.                            if ( ( kmax + -$I_L3043_44 + -1 ) <= -1 + jmin(istart + $I_L3044_49 + 256 * $SI_L3044_36_G6) ) then
 3049.                               $dz_S5 = z_cup(istart + $I_L3044_49 + 256 * $SI_L3044_36_G6, kmax + -$I_L3043_44) + -z_cup(istart + $I_L3044_49 + 256 * $SI_L3044_36_G6, kmax + -$I_L3043_44 + -1)
 3056.                               zd(istart + $I_L3044_49 + 256 * $SI_L3044_36_G6, kmax + -$I_L3043_44 + -1) = zd(istart + $I_L3044_49 + 256 * $SI_L3044_36_G6, kmax + -$I_L3043_44) * ( 1.0 + ( entr + -cdd(istart + $I_L3044_49 + 256 * $SI_L3044_36_G6, kmax + -$I_L3043_44 + -1) ) * $dz_S5 )
 3056.                            endif
 3056.                         endif
 3044.                         $I_L3044_49 = 1 + $I_L3044_49
 3060.                         if ( $I_L3044_49 >= min( iend + -istart + 1, 256 + 256 * $SI_L3044_36_G6 ) + -256 * $SI_L3044_36_G6 ) exit
 3060.                      enddo
 3062.                      $I_L3043_44 = 1 + $I_L3043_44
 3062.                      if ( $I_L3043_44 >= -1 + kmax ) exit
 3062.                   enddo
 3044.                   $SI_L3044_36_G6 = 1 + $SI_L3044_36_G6
 3061.                   if ( $SI_L3044_36_G6 >= _rsh( iend + -istart + 256, 8 ) ) exit
 3061.                enddo
 3061.             endif
 3061.          endif
 3061.       endif
 3064.       return
 3064.       end
 3064.       
 3068.       
 3068.       subroutine cup_dd_he( hes_cup, hcd, z_cup, cdd, entr, jmin, ierr, ncols, kmax, istart, iend, he, dby )
 3068.       t$44 = ncols
 3068.       t$45 = kmax
 3082.       t$733 = _zla( 0, ncols )
 3068.       t$734 = _zla( 0, ncols )
 3082.       t$735 = _zla( 0, kmax )
 3068.       t$736 = _zla( 0, ncols ) * _zla( 0, kmax )
 3103.       if ( -2 + kmax >= 0 ) then
 3104.          if ( iend + -istart >= 0 ) then
 3103.             $I_L3103_36 = 0
 3103. !dir$ blocking_size( 0, 0 )
 3103.             do
 3104.                $I_L3104_30 = 0
 3104. !dir$ ivdep
 3104. !dir$ blocking_size( 0, 0 )
 3104.                do
 3105.                   dby(istart + $I_L3104_30, 2 + $I_L3103_36) = 0.0
 3106.                   if ( ierr(istart + $I_L3104_30) == 0 ) then
 3107.                      hcd(istart + $I_L3104_30, 2 + $I_L3103_36) = hes_cup(istart + $I_L3104_30, 2 + $I_L3103_36)
 3107.                   endif
 3109.                   $I_L3104_30 = 1 + $I_L3104_30
 3108.                   if ( $I_L3104_30 >= iend + -istart + 1 ) exit
 3108.                enddo
 3110.                $I_L3103_36 = 1 + $I_L3103_36
 3109.                if ( $I_L3103_36 >= -1 + kmax ) exit
 3109.             enddo
 3109.          endif
 3109.       endif
 3112.       if ( iend + -istart >= 0 ) then
 3112.          $I_L3112_32 = 0
 3112. !dir$ ivdep
 3112.          do
 3113.             if ( ierr(istart + $I_L3112_32) == 0 ) then
 3114.                $SVU_P0 = hes_cup(istart + $I_L3112_32, jmin(istart + $I_L3112_32))
 3114.                hcd(istart + $I_L3112_32, jmin(istart + $I_L3112_32)) = $SVU_P0
 3115.                dby(istart + $I_L3112_32, jmin(istart + $I_L3112_32)) = 0.0
 3115.             endif
 3117.             $I_L3112_32 = 1 + $I_L3112_32
 3116.             if ( $I_L3112_32 >= iend + -istart + 1 ) exit
 3116.          enddo
 3116.       endif
 3119.       if ( 1 + -kmax < 0 ) then
 3120.          if ( iend + -istart >= 0 ) then
 3120.             $SI_L3120_34_G1 = 0
 3120.             do
 3119.                $I_L3119_38 = 0
 3119. !dir$ blocking_size( 0, 0 )
 3119.                do
 3120.                   $I_L3120_40 = 0
 3120. !dir$ ivdep
 3120. !dir$ blocking_size( 256, 256 )
 3120.                   do
 3121.                      if ( ierr(istart + $I_L3120_40 + 256 * $SI_L3120_34_G1) == 0 ) then
 3121.                         if ( ( kmax + -$I_L3119_38 + -1 ) <= -1 + jmin(istart + $I_L3120_40 + 256 * $SI_L3120_34_G1) ) then
 3122.                            $dz_S5 = z_cup(istart + $I_L3120_40 + 256 * $SI_L3120_34_G1, kmax + -$I_L3119_38) + -z_cup(istart + $I_L3120_40 + 256 * $SI_L3120_34_G1, kmax + -$I_L3119_38 + -1)
 3123.                            $hcd_WR0_R0 = ( ( hcd(istart + $I_L3120_40 + 256 * $SI_L3120_34_G1, kmax + -$I_L3119_38) * ( 1.0 + $dz_S5 * cdd(istart + $I_L3120_40 + 256 * $SI_L3120_34_G1, kmax + -$I_L3119_38 + -1) * -5.0e-1 ) + entr * $dz_S5 * he(istart + $I_L3120_40 + 256 * $SI_L3120_34_G1, kmax + -$I_L3119_38 + -1) ) * 1.0/( $dz_S5 * cdd(istart + $I_L3120_40 + 256 * $SI_L3120_34_G1, kmax + -$I_L3119_38 + -1) * -5.0e-1 + entr * $dz_S5 + 1.0 ) )
 3123.                            hcd(istart + $I_L3120_40 + 256 * $SI_L3120_34_G1, kmax + -$I_L3119_38 + -1) = $hcd_WR0_R0
 3126.                            dby(istart + $I_L3120_40 + 256 * $SI_L3120_34_G1, kmax + -$I_L3119_38 + -1) = $hcd_WR0_R0 + -hes_cup(istart + $I_L3120_40 + 256 * $SI_L3120_34_G1, kmax + -$I_L3119_38 + -1)
 3126.                         endif
 3126.                      endif
 3120.                      $I_L3120_40 = 1 + $I_L3120_40
 3127.                      if ( $I_L3120_40 >= min( iend + -istart + 1, 256 + 256 * $SI_L3120_34_G1 ) + -256 * $SI_L3120_34_G1 ) exit
 3127.                   enddo
 3129.                   $I_L3119_38 = 1 + $I_L3119_38
 3129.                   if ( $I_L3119_38 >= -1 + kmax ) exit
 3129.                enddo
 3120.                $SI_L3120_34_G1 = 1 + $SI_L3120_34_G1
 3128.                if ( $SI_L3120_34_G1 >= _rsh( iend + -istart + 256, 8 ) ) exit
 3128.             enddo
 3128.          endif
 3128.       endif
 3131.       return
 3131.       end
 3131.       
 3135.       
 3135.       subroutine cup_dd_moisture( zd, hcd, hes_cup, qcd, qes_cup, pwd, q_cup, z_cup, cdd, entr, jmin, ierr, gamma_cup, pwev, ncols, kmax, istart, iend, bu, qrcd, q, iloop )
 3135.       t$46 = ncols
 3135.       t$47 = kmax
 3154.       t$737 = _zla( 0, ncols )
 3135.       t$738 = _zla( 0, ncols )
 3154.       t$739 = _zla( 0, kmax )
 3135.       t$740 = _zla( 0, ncols ) * _zla( 0, kmax )
 3191.       if ( iend + -istart >= 0 ) then
 3191.          $I_L3191_42 = 0
 3191. !dir$ ivdep
 3191.          do
 3192.             if ( ierr(istart + $I_L3191_42) == 0 ) then
 3193.                bu(istart + $I_L3191_42) = 0.0
 3194.                pwev(istart + $I_L3191_42) = 0.0
 3194.             endif
 3196.             $I_L3191_42 = 1 + $I_L3191_42
 3195.             if ( $I_L3191_42 >= iend + -istart + 1 ) exit
 3195.          enddo
 3195.       endif
 3198.       if ( kmax > 0 ) then
 3199.          if ( iend + -istart >= 0 ) then
 3198.             $I_L3198_52 = 0
 3198. !dir$ blocking_size( 0, 0 )
 3198.             do
 3199.                $I_L3199_44 = 0
 3199. !dir$ ivdep
 3199. !dir$ blocking_size( 0, 0 )
 3199.                do
 3200.                   if ( ierr(istart + $I_L3199_44) == 0 ) then
 3201.                      qcd(istart + $I_L3199_44, 1 + $I_L3198_52) = 0.0
 3202.                      qrcd(istart + $I_L3199_44, 1 + $I_L3198_52) = 0.0
 3203.                      pwd(istart + $I_L3199_44, 1 + $I_L3198_52) = 0.0
 3203.                   endif
 3205.                   $I_L3199_44 = 1 + $I_L3199_44
 3204.                   if ( $I_L3199_44 >= iend + -istart + 1 ) exit
 3204.                enddo
 3206.                $I_L3198_52 = 1 + $I_L3198_52
 3205.                if ( $I_L3198_52 >= kmax ) exit
 3205.             enddo
 3205.          endif
 3205.       endif
 3208.       if ( iend + -istart >= 0 ) then
 3208.          $I_L3208_46 = 0
 3208. !dir$ ivdep
 3208.          do
 3209.             if ( ierr(istart + $I_L3208_46) == 0 ) then
 3210.                $k_S4 = jmin(istart + $I_L3208_46)
 3211.                $dz_S6 = z_cup(istart + $I_L3208_46, 1 + $k_S4) + -z_cup(istart + $I_L3208_46, $k_S4)
 3212.                $SVU_P0 = q_cup(istart + $I_L3208_46, $k_S4)
 3212.                qcd(istart + $I_L3208_46, $k_S4) = $SVU_P0
 3213.                $SVU_P1 = qes_cup(istart + $I_L3208_46, $k_S4)
 3213.                qrcd(istart + $I_L3208_46, $k_S4) = $SVU_P1
 3214.                pwd(istart + $I_L3208_46, $k_S4) = ( min( 0.0, $SVU_P0 + -$SVU_P1 ) )
 3215.                pwev(istart + $I_L3208_46) = pwev(istart + $I_L3208_46) + ( min( 0.0, $SVU_P0 + -$SVU_P1 ) )
 3216.                qcd(istart + $I_L3208_46, $k_S4) = $SVU_P1
 3217.                $dh_S5 = hcd(istart + $I_L3208_46, $k_S4) + -hes_cup(istart + $I_L3208_46, $k_S4)
 3218.                bu(istart + $I_L3208_46) = $dz_S6 * $dh_S5
 3218.             endif
 3220.             $I_L3208_46 = 1 + $I_L3208_46
 3219.             if ( $I_L3208_46 >= iend + -istart + 1 ) exit
 3219.          enddo
 3219.       endif
 3222.       if ( 1 + -kmax < 0 ) then
 3223.          if ( iend + -istart >= 0 ) then
 3223.             $SI_L3223_48_G1 = 0
 3223.             do
 3222.                $I_L3222_54 = 0
 3222. !dir$ blocking_size( 0, 0 )
 3222.                do
 3223.                   $I_L3223_56 = 0
 3223. !dir$ ivdep
 3223. !dir$ blocking_size( 256, 256 )
 3223.                   do
 3224.                      if ( ierr(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1) == 0 ) then
 3224.                         if ( ( kmax + -$I_L3222_54 + -1 ) <= -1 + jmin(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1) ) then
 3225.                            $dz_S9 = z_cup(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1, kmax + -$I_L3222_54) + -z_cup(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1, kmax + -$I_L3222_54 + -1)
 3227.                            $qcd_WR0_R0 = ( ( qcd(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1, kmax + -$I_L3222_54) * ( 1.0 + $dz_S9 * cdd(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1, kmax + -$I_L3222_54 + -1) * -5.0e-1 ) + entr * $dz_S9 * q(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1, kmax + -$I_L3222_54 + -1) ) * 1.0/( $dz_S9 * cdd(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1, kmax + -$I_L3222_54 + -1) * -5.0e-1 + entr * $dz_S9 + 1.0 ) )
 3227.                            qcd(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1, kmax + -$I_L3222_54 + -1) = $qcd_WR0_R0
 3233.                            $dh_S10 = hcd(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1, kmax + -$I_L3222_54 + -1) + -hes_cup(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1, kmax + -$I_L3222_54 + -1)
 3234.                            bu(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1) = bu(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1) + $dz_S9 * $dh_S10
 3235.                            $qrcd_WR0_R1 = qes_cup(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1, kmax + -$I_L3222_54 + -1) + $dh_S10 * ( gamma_cup(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1, kmax + -$I_L3222_54 + -1) * 1.0/( 1.0 + gamma_cup(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1, kmax + -$I_L3222_54 + -1) ) ) * 3.9999999999999998e-7
 3235.                            qrcd(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1, kmax + -$I_L3222_54 + -1) = $qrcd_WR0_R1
 3241.                            $pwd_WR0_R2 = zd(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1, kmax + -$I_L3222_54 + -1) * ( min( 0.0, ( $qcd_WR0_R0 + -$qrcd_WR0_R1 ) ) )
 3241.                            pwd(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1, kmax + -$I_L3222_54 + -1) = $pwd_WR0_R2
 3242.                            qcd(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1, kmax + -$I_L3222_54 + -1) = $qrcd_WR0_R1
 3243.                            pwev(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1) = pwev(istart + $I_L3223_56 + 256 * $SI_L3223_48_G1) + $pwd_WR0_R2
 3243.                         endif
 3243.                      endif
 3223.                      $I_L3223_56 = 1 + $I_L3223_56
 3244.                      if ( $I_L3223_56 >= min( iend + -istart + 1, 256 + 256 * $SI_L3223_48_G1 ) + -256 * $SI_L3223_48_G1 ) exit
 3244.                   enddo
 3246.                   $I_L3222_54 = 1 + $I_L3222_54
 3246.                   if ( $I_L3222_54 >= -1 + kmax ) exit
 3246.                enddo
 3223.                $SI_L3223_48_G1 = 1 + $SI_L3223_48_G1
 3245.                if ( $SI_L3223_48_G1 >= _rsh( iend + -istart + 256, 8 ) ) exit
 3245.             enddo
 3245.          endif
 3245.       endif
 3248.       if ( iend + -istart >= 0 ) then
 3250.          if ( iloop == 1 ) then
 3248.             $I_L3248_50 = 0
 3248. !dir$ ivdep
 3248.             do
 3249.                if ( ierr(istart + $I_L3248_50) == 0 ) then
 3250.                   if ( bu(istart + $I_L3248_50) >= 0.0 ) then
 3251.                      ierr(istart + $I_L3248_50) = 7
 3251.                   endif
 3251.                endif
 3254.                $I_L3248_50 = 1 + $I_L3248_50
 3253.                if ( $I_L3248_50 >= iend + -istart + 1 ) exit
 3253.             enddo
 3253.          endif
 3253.       endif
 3256.       return
 3256.       end
 3256.       
 3260.       
 3260.       subroutine cup_up_moisture( ierr, z_cup, qc, qrc, pw, pwav, kbcon, ktop, ncols, kmax, istart, iend, cd, dby, mentr_rate, q, gamma_cup, zu, qes_cup, k22, qe_cup )
 3260.       t$48 = ncols
 3275.       t$741 = _zla( 0, ncols )
 3260.       t$49 = kmax
 3260.       t$742 = _zla( 0, ncols )
 3284.       t$743 = _zla( 0, kmax )
 3260.       t$744 = _zla( 0, ncols ) * _zla( 0, kmax )
 3318.       $c0_S8 = 2.0e-3
 3322.       if ( mentr_rate > 0.0 ) then
 3324.          $c0_S8 = cvmg( 2.0e-3, 0.0, ( 2.0000000000000001e-1 * 1.0/mentr_rate ) >= 900.0 )
 3324.       endif
 3328.       if ( iend + -istart >= 0 ) then
 3328.          $I_L3328_46 = 0
 3328. !dir$ ivdep
 3328.          do
 3329.             if ( ierr(istart + $I_L3328_46) == 0 ) then
 3330.                pwav(istart + $I_L3328_46) = 0.0
 3330.             endif
 3332.             $I_L3328_46 = 1 + $I_L3328_46
 3331.             if ( $I_L3328_46 >= iend + -istart + 1 ) exit
 3331.          enddo
 3331.       endif
 3334.       if ( kmax > 0 ) then
 3335.          if ( iend + -istart >= 0 ) then
 3334.             $I_L3334_54 = 0
 3334. !dir$ blocking_size( 0, 0 )
 3334.             do
 3335.                $I_L3335_48 = 0
 3335. !dir$ ivdep
 3335. !dir$ blocking_size( 0, 0 )
 3335.                do
 3336.                   if ( ierr(istart + $I_L3335_48) == 0 ) then
 3337.                      pw(istart + $I_L3335_48, 1 + $I_L3334_54) = 0.0
 3341.                      qc(istart + $I_L3335_48, 1 + $I_L3334_54) = qe_cup(istart + $I_L3335_48, 1 + $I_L3334_54)
 3342.                      qrc(istart + $I_L3335_48, 1 + $I_L3334_54) = 0.0
 3342.                   endif
 3344.                   $I_L3335_48 = 1 + $I_L3335_48
 3343.                   if ( $I_L3335_48 >= iend + -istart + 1 ) exit
 3343.                enddo
 3345.                $I_L3334_54 = 1 + $I_L3334_54
 3344.                if ( $I_L3334_54 >= kmax ) exit
 3344.             enddo
 3346.             $SI_L3346_50_G1 = 0
 3346.             do
 3347.                $I_L3347_56 = 0
 3347. !dir$ ivdep
 3347. !dir$ blocking_size( 0, 0 )
 3347.                do
 3346.                   $SCA_ierr_I0 = ierr(istart + $I_L3347_56)
 3346.                   $I_L3346_60 = 0
 3346. !dir$ blocking_size( 256, 256 )
 3346.                   do
 3348.                      if ( $SCA_ierr_I0 == 0 ) then
 3348.                         if ( ( $I_L3346_60 + 256 * $SI_L3346_50_G1 + 1 ) >= k22(istart + $I_L3347_56) ) then
 3348.                            if ( ( $I_L3346_60 + 256 * $SI_L3346_50_G1 + 1 ) <= -1 + kbcon(istart + $I_L3347_56) ) then
 3349.                               qc(istart + $I_L3347_56, $I_L3346_60 + 256 * $SI_L3346_50_G1 + 1) = qe_cup(istart + $I_L3347_56, k22(istart + $I_L3347_56))
 3349.                            endif
 3349.                         endif
 3349.                      endif
 3346.                      $I_L3346_60 = 1 + $I_L3346_60
 3350.                      if ( $I_L3346_60 >= min( kmax, 256 + 256 * $SI_L3346_50_G1 ) + -256 * $SI_L3346_50_G1 ) exit
 3350.                   enddo
 3351.                   $I_L3347_56 = 1 + $I_L3347_56
 3351.                   if ( $I_L3347_56 >= iend + -istart + 1 ) exit
 3351.                enddo
 3346.                $SI_L3346_50_G1 = 1 + $SI_L3346_50_G1
 3351.                if ( $SI_L3346_50_G1 >= _rsh( 255 + kmax, 8 ) ) exit
 3351.             enddo
 3357.             $SI_L3357_52_G4 = 0
 3357.             do
 3356.                $I_L3356_58 = 0
 3356. !dir$ blocking_size( 0, 0 )
 3356.                do
 3357.                   $I_L3357_63 = 0
 3357. !dir$ ivdep
 3357. !dir$ blocking_size( 256, 256 )
 3357.                   do
 3358.                      if ( ierr(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4) == 0 ) then
 3358.                         if ( ( 1 + $I_L3356_58 ) >= kbcon(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4) ) then
 3358.                            if ( ( 1 + $I_L3356_58 ) <= ktop(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4) ) then
 3359.                               $dz_S7 = z_cup(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4, 1 + $I_L3356_58) + -z_cup(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4, $I_L3356_58)
 3364.                               $qc_WR0_R0 = ( ( qc(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4, $I_L3356_58) * ( 1.0 + $dz_S7 * cd(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4, 1 + $I_L3356_58) * -5.0e-1 ) + mentr_rate * $dz_S7 * q(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4, $I_L3356_58) ) * 1.0/( $dz_S7 * cd(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4, 1 + $I_L3356_58) * -5.0e-1 + mentr_rate * $dz_S7 + 1.0 ) )
 3364.                               qc(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4, 1 + $I_L3356_58) = $qc_WR0_R0
 3369.                               $qrch_S9 = qes_cup(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4, 1 + $I_L3356_58) + dby(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4, 1 + $I_L3356_58) * ( gamma_cup(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4, 1 + $I_L3356_58) * 1.0/( 1.0 + gamma_cup(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4, 1 + $I_L3356_58) ) ) * 3.9999999999999998e-7
 3375.                               qrc(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4, 1 + $I_L3356_58) = ( max( 0.0, ( ( $qc_WR0_R0 + -$qrch_S9 ) * 1.0/( 1.0 + $c0_S8 * $dz_S7 ) ) ) )
 3381.                               $pw_WR0_R2 = $c0_S8 * $dz_S7 * ( max( 0.0, ( ( $qc_WR0_R0 + -$qrch_S9 ) * 1.0/( 1.0 + $c0_S8 * $dz_S7 ) ) ) ) * zu(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4, 1 + $I_L3356_58)
 3381.                               pw(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4, 1 + $I_L3356_58) = $pw_WR0_R2
 3390.                               qc(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4, 1 + $I_L3356_58) = ( ( max( 0.0, ( ( $qc_WR0_R0 + -$qrch_S9 ) * 1.0/( 1.0 + $c0_S8 * $dz_S7 ) ) ) ) + $qrch_S9 )
 3394.                               pwav(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4) = pwav(istart + $I_L3357_63 + 256 * $SI_L3357_52_G4) + $pw_WR0_R2
 3394.                            endif
 3394.                         endif
 3394.                      endif
 3357.                      $I_L3357_63 = 1 + $I_L3357_63
 3395.                      if ( $I_L3357_63 >= min( iend + -istart + 1, 256 + 256 * $SI_L3357_52_G4 ) + -256 * $SI_L3357_52_G4 ) exit
 3395.                   enddo
 3397.                   $I_L3356_58 = 1 + $I_L3356_58
 3397.                   if ( $I_L3356_58 >= kmax ) exit
 3397.                enddo
 3357.                $SI_L3357_52_G4 = 1 + $SI_L3357_52_G4
 3396.                if ( $SI_L3357_52_G4 >= _rsh( iend + -istart + 256, 8 ) ) exit
 3396.             enddo
 3396.          endif
 3396.       endif
 3400.       return
 3400.       end
 3400.       
 3404.       
 3404.       subroutine cup_up_aa0( aa0, z, zu, dby, gamma_cup, t_cup, kbcon, ktop, kmax, ncols, istart, iend, ierr )
 3404.       t$50 = ncols
 3417.       t$745 = _zla( 0, ncols )
 3404.       t$51 = kmax
 3404.       t$746 = _zla( 0, ncols )
 3418.       t$747 = _zla( 0, kmax )
 3404.       t$748 = _zla( 0, ncols ) * _zla( 0, kmax )
 3440.       if ( iend + -istart >= 0 ) then
 3440.          $I_L3440_12 = 0
 3440. !dir$ ivdep
 3440.          do
 3441.             if ( ierr(istart + $I_L3440_12) == 0 ) then
 3442.                aa0(istart + $I_L3440_12) = 0.0
 3442.             endif
 3444.             $I_L3440_12 = 1 + $I_L3440_12
 3443.             if ( $I_L3440_12 >= iend + -istart + 1 ) exit
 3443.          enddo
 3443.       endif
 3446.       if ( -3 + kmax >= 0 ) then
 3447.          if ( iend + -istart >= 0 ) then
 3447.             $SI_L3447_14_G1 = 0
 3447.             do
 3446.                $I_L3446_16 = 0
 3446. !dir$ blocking_size( 0, 0 )
 3446.                do
 3447.                   $I_L3447_18 = 0
 3447. !dir$ ivdep
 3447. !dir$ blocking_size( 256, 256 )
 3447.                   do
 3448.                      if ( ierr(istart + $I_L3447_18 + 256 * $SI_L3447_14_G1) == 0 ) then
 3448.                         if ( ( 2 + $I_L3446_16 ) > kbcon(istart + $I_L3447_18 + 256 * $SI_L3447_14_G1) ) then
 3448.                            if ( ( 2 + $I_L3446_16 ) <= ktop(istart + $I_L3447_18 + 256 * $SI_L3447_14_G1) ) then
 3449.                               $dz_S3 = z(istart + $I_L3447_18 + 256 * $SI_L3447_14_G1, 2 + $I_L3446_16) + -z(istart + $I_L3447_18 + 256 * $SI_L3447_14_G1, 1 + $I_L3446_16)
 3450.                               $da_S4 = ( zu(istart + $I_L3447_18 + 256 * $SI_L3447_14_G1, 2 + $I_L3446_16) * $dz_S3 * ( 9.7709163346613552e-3 * 1.0/t_cup(istart + $I_L3447_18 + 256 * $SI_L3447_14_G1, 2 + $I_L3446_16) ) * dby(istart + $I_L3447_18 + 256 * $SI_L3447_14_G1, 1 + $I_L3446_16) * 1.0/( 1.0 + gamma_cup(istart + $I_L3447_18 + 256 * $SI_L3447_14_G1, 2 + $I_L3446_16) ) )
 3453.                               if ( ktop(istart + $I_L3447_18 + 256 * $SI_L3447_14_G1) + -$I_L3446_16 + -2 /= 0 ) then
 3449.                                  goto 10
 3453.                               else if ( $da_S4 > 0.0 ) then
 3453.    10                            continue
 3457.                                  aa0(istart + $I_L3447_18 + 256 * $SI_L3447_14_G1) = max( 0.0, aa0(istart + $I_L3447_18 + 256 * $SI_L3447_14_G1) + $da_S4 )
 3457.                               endif
 3457.                            endif
 3457.                         endif
 3457.                      endif
 3447.                      $I_L3447_18 = 1 + $I_L3447_18
 3460.                      if ( $I_L3447_18 >= min( iend + -istart + 1, 256 + 256 * $SI_L3447_14_G1 ) + -256 * $SI_L3447_14_G1 ) exit
 3460.                   enddo
 3461.                   $I_L3446_16 = 1 + $I_L3446_16
 3461.                   if ( $I_L3446_16 >= -2 + kmax ) exit
 3461.                enddo
 3447.                $SI_L3447_14_G1 = 1 + $SI_L3447_14_G1
 3460.                if ( $SI_L3447_14_G1 >= _rsh( iend + -istart + 256, 8 ) ) exit
 3460.             enddo
 3460.          endif
 3460.       endif
 3463.       return
 3463.       end
 3463.       
 3467.       
 3467.       subroutine cup_dd_edt( ierr, us, vs, z, ktop, kbcon, edt, p, pwav, pwev, ncols, kmax, istart, iend, edtmax, edtmin, maxens2, edtc, vshear, sdp, vws, mask, edtmax1, maxens22 )
 3467.       t$52 = ncols
 3484.       t$749 = _zla( 0, ncols )
 3467.       t$53 = kmax
 3467.       t$750 = _zla( 0, ncols )
 3485.       t$751 = _zla( 0, kmax )
 3467.       t$752 = _zla( 0, ncols ) * _zla( 0, kmax )
 3467.       t$54 = maxens2
 3495.       t$753 = _zla( 0, maxens2 )
 3467.       t$754 = _zla( 0, ncols ) * _zla( 0, maxens2 )
 3513.       if ( iend + -istart >= 0 ) then
 3513.          $I_L3513_54 = 0
 3513. !dir$ ivdep
 3513.          do
 3514.             if ( ierr(istart + $I_L3513_54) == 0 ) then
 3515.                edt(istart + $I_L3513_54) = 0.0
 3516.                vws(istart + $I_L3513_54) = 0.0
 3517.                sdp(istart + $I_L3513_54) = 0.0
 3518.                vshear(istart + $I_L3513_54) = 0.0
 3518.             endif
 3520.             $I_L3513_54 = 1 + $I_L3513_54
 3519.             if ( $I_L3513_54 >= iend + -istart + 1 ) exit
 3519.          enddo
 3519.       endif
 3522.       if ( -1 + kmax > 0 ) then
 3523.          if ( iend + -istart >= 0 ) then
 3534.             if ( 0 < -2 + kmax ) then
 3523.                $SI_L3523_62_G1 = 0
 3523.                do
 3522.                   $I_L3522_66 = 0
 3522. !dir$ blocking_size( 0, 0 )
 3522.                   do
 3523.                      $I_L3523_75 = 0
 3523. !dir$ ivdep
 3523. !dir$ blocking_size( 256, 256 )
 3523.                      do
 3524.                         if ( ierr(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1) == 0 ) then
 3525.                            if ( ( 1 + $I_L3522_66 ) <= min( ktop(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1), -1 + kmax ) ) then
 3525.                               if ( ( 1 + $I_L3522_66 ) >= kbcon(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1) ) then
 3526.                                  $aa1_S4 = abs( ( us(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1, 2 + $I_L3522_66) + -us(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1, 1 + $I_L3522_66) ) * 1.0/( z(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1, 2 + $I_L3522_66) + -z(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1, 1 + $I_L3522_66) ) )
 3527.                                  $aa2_S3 = abs( ( vs(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1, 2 + $I_L3522_66) + -vs(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1, 1 + $I_L3522_66) ) * 1.0/( z(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1, 2 + $I_L3522_66) + -z(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1, 1 + $I_L3522_66) ) )
 3528.                                  vws(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1) = vws(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1) + ( $aa1_S4 + $aa2_S3 ) * ( p(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1, 1 + $I_L3522_66) + -p(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1, 2 + $I_L3522_66) )
 3529.                                  sdp(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1) = sdp(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1) + p(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1, 1 + $I_L3522_66) + -p(istart + $I_L3523_75 + 256 * $SI_L3523_62_G1, 2 + $I_L3522_66)
 3529.                               endif
 3529.                            endif
 3529.                         endif
 3523.                         $I_L3523_75 = 1 + $I_L3523_75
 3532.                         if ( $I_L3523_75 >= min( iend + -istart + 1, 256 + 256 * $SI_L3523_62_G1 ) + -256 * $SI_L3523_62_G1 ) exit
 3532.                      enddo
 3534.                      $I_L3522_66 = 1 + $I_L3522_66
 3534.                      if ( $I_L3522_66 >= -2 + kmax ) exit
 3534.                   enddo
 3523.                   $SI_L3523_62_G1 = 1 + $SI_L3523_62_G1
 3533.                   if ( $SI_L3523_62_G1 >= _rsh( iend + -istart + 256, 8 ) ) exit
 3533.                enddo
 3533.             endif
 3523.             $I_L3523_64 = 0
 3523. !dir$ ivdep
 3523.             do
 3524.                if ( ierr(istart + $I_L3523_64) == 0 ) then
 3525.                   if ( ( -1 + kmax ) <= min( ktop(istart + $I_L3523_64), -1 + kmax ) ) then
 3525.                      if ( ( -1 + kmax ) >= kbcon(istart + $I_L3523_64) ) then
 3526.                         $aa1_S4 = abs( ( us(istart + $I_L3523_64, kmax) + -us(istart + $I_L3523_64, -1 + kmax) ) * 1.0/( z(istart + $I_L3523_64, kmax) + -z(istart + $I_L3523_64, -1 + kmax) ) )
 3527.                         $aa2_S3 = abs( ( vs(istart + $I_L3523_64, kmax) + -vs(istart + $I_L3523_64, -1 + kmax) ) * 1.0/( z(istart + $I_L3523_64, kmax) + -z(istart + $I_L3523_64, -1 + kmax) ) )
 3528.                         vws(istart + $I_L3523_64) = vws(istart + $I_L3523_64) + ( $aa1_S4 + $aa2_S3 ) * ( p(istart + $I_L3523_64, -1 + kmax) + -p(istart + $I_L3523_64, kmax) )
 3529.                         sdp(istart + $I_L3523_64) = sdp(istart + $I_L3523_64) + p(istart + $I_L3523_64, -1 + kmax) + -p(istart + $I_L3523_64, kmax)
 3529.                      endif
 3529.                   endif
 3531.                   $LD_SPLT_P0 = vws(istart + $I_L3523_64)
 3531.                   $LD_SPLT_P1 = sdp(istart + $I_L3523_64)
 3531.                   vshear(istart + $I_L3523_64) = ( 1.0/$LD_SPLT_P1 * $LD_SPLT_P0 * 1000.0 )
 3531.                endif
 3533.                $I_L3523_64 = 1 + $I_L3523_64
 3532.                if ( $I_L3523_64 >= iend + -istart + 1 ) exit
 3532.             enddo
 3532.          endif
 3532.       endif
 3536.       if ( iend + -istart >= 0 ) then
 3536.          $I_L3536_56 = 0
 3536. !dir$ ivdep
 3536.          do
 3537.             if ( ierr(istart + $I_L3536_56) == 0 ) then
 3538.                $pef_S6 = ( 9.5299999999999996e-2 * ( vshear(istart + $I_L3536_56) * vshear(istart + $I_L3536_56) ) + -6.3900000000000001e-1 * vshear(istart + $I_L3536_56) + -4.96e-3 * ( vshear(istart + $I_L3536_56) * vshear(istart + $I_L3536_56) * vshear(istart + $I_L3536_56) ) + 1.591 )
 3550.                $pef_S10 = max( edtmin, cvmg( min( edtmax, $pef_S6 ), min( edtmax1, $pef_S6 ), mask(istart + $I_L3536_56) /= 1 ) )
 3554.                $zkbc_S7 = 3.2810000000000001e-3 * z(istart + $I_L3536_56, kbcon(istart + $I_L3536_56))
 3555.                $prezk_S8 = 2.0e-2
 3556.                if ( $zkbc_S7 > 3.0 ) then
 3557.                   $prezk_S8 = 9.6729352000000002e-1 + $zkbc_S7 * ( -7.0034167000000003e-1 + $zkbc_S7 * ( 1.6217989599999999e-1 + $zkbc_S7 * ( -1.2569798e-2 + $zkbc_S7 * ( 4.2771999999999998e-4 + -5.4399999999999996e-6 * $zkbc_S7 ) ) ) )
 3557.                endif
 3561.                if ( $zkbc_S7 > 25.0 ) then
 3562.                   $prezk_S8 = 2.3999999999999999
 3562.                endif
 3569.                $pefb_S9 = cvmg( min( edtmax, 1.0/( 1.0 + $prezk_S8 ) ), min( edtmax1, 1.0/( 1.0 + $prezk_S8 ) ), mask(istart + $I_L3536_56) /= 1 )
 3577.                edt(istart + $I_L3536_56) = 1.0 + -5.0e-1 * ( ( max( edtmin, $pefb_S9 ) ) + $pef_S10 )
 3577.             endif
 3582.             $I_L3536_56 = 1 + $I_L3536_56
 3581.             if ( $I_L3536_56 >= iend + -istart + 1 ) exit
 3581.          enddo
 3581.       endif
 3584.       if ( maxens22 > 0 ) then
 3585.          if ( iend + -istart >= 0 ) then
 3584.             $I_L3584_68 = 0
 3584. !dir$ blocking_size( 0, 0 )
 3584.             do
 3585.                $I_L3585_58 = 0
 3585. !dir$ ivdep
 3585. !dir$ blocking_size( 0, 0 )
 3585.                do
 3586.                   if ( ierr(istart + $I_L3585_58) == 0 ) then
 3587.                      $einc_S13 = ( edt(istart + $I_L3585_58) * 1.0/( 1 + maxens22 ) )
 3588.                      edtc(istart + $I_L3585_58, 1 + $I_L3584_68) = edt(istart + $I_L3585_58) + -( real( 1 + $I_L3584_68, 8 ) * $einc_S13 )
 3588.                   endif
 3595.                   $I_L3585_58 = 1 + $I_L3585_58
 3594.                   if ( $I_L3585_58 >= iend + -istart + 1 ) exit
 3594.                enddo
 3596.                $I_L3584_68 = 1 + $I_L3584_68
 3595.                if ( $I_L3584_68 >= maxens22 ) exit
 3595.             enddo
 3599.             $SI_L3599_60_G4 = 0
 3599.             do
 3598.                $I_L3598_70 = 0
 3598. !dir$ ivdep
 3598. !dir$ blocking_size( 0, 0 )
 3598.                do
 3599.                   $I_L3599_72 = 0
 3599. !dir$ unroll 4
 3599. !dir$ blocking_size( 256, 256 )
 3599.                   do
 3600.                      if ( ierr(istart + $I_L3599_72 + 256 * $SI_L3599_60_G4) == 0 ) then
 3601.                         $edtc_WR0_R0 = -( edtc(istart + $I_L3599_72 + 256 * $SI_L3599_60_G4, 1 + $I_L3598_70) * pwav(istart + $I_L3599_72 + 256 * $SI_L3599_60_G4) * 1.0/pwev(istart + $I_L3599_72 + 256 * $SI_L3599_60_G4) )
 3601.                         edtc(istart + $I_L3599_72 + 256 * $SI_L3599_60_G4, 1 + $I_L3598_70) = $edtc_WR0_R0
 3606.                         if ( mask(istart + $I_L3599_72 + 256 * $SI_L3599_60_G4) == 1 ) then
 3607.                            $edtc_WR0_R0 = min( edtmax1, $edtc_WR0_R0 )
 3607.                            edtc(istart + $I_L3599_72 + 256 * $SI_L3599_60_G4, 1 + $I_L3598_70) = $edtc_WR0_R0
 3607.                         else
 3609.                            $edtc_WR0_R0 = min( edtmax, $edtc_WR0_R0 )
 3609.                            edtc(istart + $I_L3599_72 + 256 * $SI_L3599_60_G4, 1 + $I_L3598_70) = $edtc_WR0_R0
 3609.                         endif
 3612.                         $edtc_WR0_R0 = max( edtmin, $edtc_WR0_R0 )
 3612.                         edtc(istart + $I_L3599_72 + 256 * $SI_L3599_60_G4, 1 + $I_L3598_70) = $edtc_WR0_R0
 3612.                      endif
 3599.                      $I_L3599_72 = 1 + $I_L3599_72
 3613.                      if ( $I_L3599_72 >= min( iend + -istart + 1, 256 + 256 * $SI_L3599_60_G4 ) + -256 * $SI_L3599_60_G4 ) exit
 3613.                   enddo
 3615.                   $I_L3598_70 = 1 + $I_L3598_70
 3615.                   if ( $I_L3598_70 >= maxens22 ) exit
 3615.                enddo
 3599.                $SI_L3599_60_G4 = 1 + $SI_L3599_60_G4
 3614.                if ( $SI_L3599_60_G4 >= _rsh( iend + -istart + 256, 8 ) ) exit
 3614.             enddo
 3614.          endif
 3614.       endif
 3617.       return
 3617.       end
 3617.       
 3621.       
 3621.       subroutine cup_dd_aa0( edt, ierr, aa0, jmin, gamma_cup, t_cup, hcd, hes_cup, z, ncols, kmax, istart, iend, zd )
 3621.       t$55 = ncols
 3639.       t$755 = _zla( 0, ncols )
 3621.       t$56 = kmax
 3621.       t$756 = _zla( 0, ncols )
 3633.       t$757 = _zla( 0, kmax )
 3621.       t$758 = _zla( 0, ncols ) * _zla( 0, kmax )
 3647.       if ( -1 + kmax > 0 ) then
 3648.          if ( iend + -istart >= 0 ) then
 3647.             $I_L3647_10 = 0
 3647. !dir$ blocking_size( 0, 0 )
 3647.             do
 3648.                $I_L3648_8 = 0
 3648. !dir$ ivdep
 3648. !dir$ blocking_size( 0, 0 )
 3648.                do
 3649.                   if ( ierr(istart + $I_L3648_8) == 0 ) then
 3649.                      if ( ( 1 + $I_L3647_10 ) < jmin(istart + $I_L3648_8) ) then
 3650.                         $kk_S2 = ( jmin(istart + $I_L3648_8) + -$I_L3647_10 + -1 )
 3654.                         $dz_S3 = ( z(istart + $I_L3648_8, $kk_S2) + -z(istart + $I_L3648_8, 1 + $kk_S2) )
 3655.                         aa0(istart + $I_L3648_8) = aa0(istart + $I_L3648_8) + zd(istart + $I_L3648_8, $kk_S2) * edt(istart + $I_L3648_8) * $dz_S3 * ( 9.7709163346613552e-3 * 1.0/t_cup(istart + $I_L3648_8, $kk_S2) ) * ( ( hcd(istart + $I_L3648_8, $kk_S2) + -hes_cup(istart + $I_L3648_8, $kk_S2) ) * 1.0/( 1.0 + gamma_cup(istart + $I_L3648_8, $kk_S2) ) )
 3655.                      endif
 3655.                   endif
 3658.                   $I_L3648_8 = 1 + $I_L3648_8
 3657.                   if ( $I_L3648_8 >= iend + -istart + 1 ) exit
 3657.                enddo
 3659.                $I_L3647_10 = 1 + $I_L3647_10
 3658.                if ( $I_L3647_10 >= -1 + kmax ) exit
 3658.             enddo
 3658.          endif
 3658.       endif
 3661.       return
 3661.       end
 3661.       
 3665.       
 3665.       subroutine cup_dellabot( he_cup, ierr, z_cup, p_cup, hcd, edt, zd, cdd, he, ncols, kmax, istart, iend, della, mentrd_rate )
 3665.       t$57 = ncols
 3665.       t$58 = kmax
 3682.       t$759 = _zla( 0, ncols )
 3665.       t$760 = _zla( 0, ncols )
 3682.       t$761 = _zla( 0, kmax )
 3665.       t$762 = _zla( 0, ncols ) * _zla( 0, kmax )
 3697.       if ( iend + -istart >= 0 ) then
 3697.          $I_L3697_4 = 0
 3697. !dir$ ivdep
 3697.          do
 3698.             della(istart + $I_L3697_4, 1) = 0.0
 3699.             if ( ierr(istart + $I_L3697_4) == 0 ) then
 3700.                $dz_S1 = z_cup(istart + $I_L3697_4, 2) + -z_cup(istart + $I_L3697_4, 1)
 3701.                $dp_S6 = 100.0 * ( p_cup(istart + $I_L3697_4, 1) + -p_cup(istart + $I_L3697_4, 2) )
 3702.                $detdo1_S3 = edt(istart + $I_L3697_4) * zd(istart + $I_L3697_4, 2) * cdd(istart + $I_L3697_4, 1) * $dz_S1
 3703.                $detdo2_S2 = edt(istart + $I_L3697_4) * zd(istart + $I_L3697_4, 1)
 3704.                $entdo_S5 = edt(istart + $I_L3697_4) * zd(istart + $I_L3697_4, 2) * mentrd_rate * $dz_S1
 3706.                $subin_S4 = -( edt(istart + $I_L3697_4) * zd(istart + $I_L3697_4, 2) )
 3708.                della(istart + $I_L3697_4, 1) = ( 1.0/$dp_S6 * ( ( hcd(istart + $I_L3697_4, 1) + hcd(istart + $I_L3697_4, 2) ) * $detdo1_S3 * 5.0e-1 + $detdo2_S2 * hcd(istart + $I_L3697_4, 1) + $subin_S4 * he_cup(istart + $I_L3697_4, 2) + -( $entdo_S5 * he(istart + $I_L3697_4, 1) ) ) * 9.8100000000000005 )
 3708.             endif
 3713.             $I_L3697_4 = 1 + $I_L3697_4
 3712.             if ( $I_L3697_4 >= iend + -istart + 1 ) exit
 3712.          enddo
 3712.       endif
 3715.       return
 3715.       end
 3715.       
 3719.       
 3719.       subroutine cup_dellas( ierr, z_cup, p_cup, hcd, edt, zd, cdd, he, ncols, kmax, istart, iend, della, mentrd_rate, zu, cd, hc, ktop, k22, kbcon, mentr_rate, jmin, he_cup, kdet, kpbl )
 3719.       t$59 = ncols
 3747.       t$763 = _zla( 0, ncols )
 3719.       t$60 = kmax
 3719.       t$764 = _zla( 0, ncols )
 3732.       t$765 = _zla( 0, kmax )
 3719.       t$766 = _zla( 0, ncols ) * _zla( 0, kmax )
 3767.       t$769 = 4 * _zla( 0, ncols )
 3719.       t$767 = int( _alloc( 4 * _zla( 0, ncols ) ), 8 )
 3767.       t$768 = t$767
 3772.       $F_A34 = ncols
 3772.       if ( ncols > 0 ) then
 3772.          $I_A2 = 0
 3772. !dir$ ivdep
 3772.          do
 3772.             ier(1 + $I_A2) = 0
 3772.             $I_A2 = 1 + $I_A2
 3772.             if ( $I_A2 >= $F_A34 ) exit
 3772.          enddo
 3772.       endif
 3773.       if ( -2 + kmax >= 0 ) then
 3774.          if ( iend + -istart >= 0 ) then
 3773.             $I_L3773_20 = 0
 3773.             do
 3774.                $I_L3774_16 = 0
 3774. !dir$ ivdep
 3774.                do
 3775.                   della(istart + $I_L3774_16, 2 + $I_L3773_20) = 0.0
 3776.                   $I_L3774_16 = 1 + $I_L3774_16
 3774.                   if ( $I_L3774_16 >= iend + -istart + 1 ) exit
 3774.                enddo
 3777.                $I_L3773_20 = 1 + $I_L3773_20
 3776.                if ( $I_L3773_20 >= -1 + kmax ) exit
 3776.             enddo
 3779.             $SI_L3779_24_G1 = 0
 3779.             do
 3780.                $I_L3780_26 = 0
 3780. !dir$ ivdep
 3780. !dir$ blocking_size( 0, 0 )
 3780.                do
 3779.                   $SCA_ierr_I0 = ierr(istart + $I_L3780_26)
 3779.                   $I_L3779_28 = 0
 3779. !dir$ blocking_size( 256, 256 )
 3779.                   do
 3781.                      if ( $SCA_ierr_I0 == 0 ) then
 3781.                         if ( ( $I_L3779_28 + 256 * $SI_L3779_24_G1 + 2 ) <= ktop(istart + $I_L3780_26) ) then
 3786.                            $dz_S4 = z_cup(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 3) + -z_cup(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 2)
 3787.                            $detdo_S10 = edt(istart + $I_L3780_26) * cdd(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 2) * $dz_S4 * zd(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 3)
 3788.                            $entdo_S9 = edt(istart + $I_L3780_26) * mentrd_rate * $dz_S4 * zd(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 3)
 3789.                            $subin_S6 = zu(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 3) + -( zd(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 3) * edt(istart + $I_L3780_26) )
 3790.                            $entup_S8 = 0.0
 3791.                            $detup_S7 = 0.0
 3792.                            $subdown_S5 = ( zu(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 2) + -( zd(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 2) * edt(istart + $I_L3780_26) ) )
 3793.                            $entdoj_S12 = 0.0
 3794.                            $entupk_S11 = 0.0
 3795.                            $detupk_S13 = 0.0
 3800.                            if ( ( $I_L3779_28 + 256 * $SI_L3779_24_G1 + 2 ) < kbcon(istart + $I_L3780_26) ) then
 3826.                               $detup_S7 = 0.0
 3800.                            else if ( ( $I_L3779_28 + 256 * $SI_L3779_24_G1 + 2 ) < ktop(istart + $I_L3780_26) ) then
 3801.                               $entup_S8 = mentr_rate * $dz_S4 * zu(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 2)
 3802.                               $detup_S7 = cd(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 3) * $dz_S4 * zu(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 2)
 3802.                            endif
 3805.                            if ( jmin(istart + $I_L3780_26) + -$I_L3779_28 + -256 * $SI_L3779_24_G1 + -2 == 0 ) then
 3806.                               $entdoj_S12 = edt(istart + $I_L3780_26) * zd(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 2)
 3806.                            endif
 3811.                            if ( k22(istart + $I_L3780_26) + -$I_L3779_28 + -256 * $SI_L3779_24_G1 + -3 == 0 ) then
 3812.                               $entupk_S11 = zu(istart + $I_L3780_26, kpbl(istart + $I_L3780_26))
 3812.                            endif
 3815.                            if ( ( $I_L3779_28 + 256 * $SI_L3779_24_G1 + 2 ) > kdet(istart + $I_L3780_26) ) then
 3816.                               $detdo_S10 = 0.0
 3816.                            endif
 3821.                            if ( ktop(istart + $I_L3780_26) + -$I_L3779_28 + -256 * $SI_L3779_24_G1 + -2 == 0 ) then
 3822.                               $detupk_S13 = zu(istart + $I_L3780_26, ktop(istart + $I_L3780_26))
 3823.                               $subin_S6 = 0.0
 3823.                            endif
 3834.                            if ( abs( $subin_S6 + -$subdown_S5 + $detup_S7 + -$entup_S8 + -$entdo_S9 + $detdo_S10 + -$entupk_S11 + -$entdoj_S12 + $detupk_S13 ) > 9.9999999999999995e-7 ) then
 3835.                               ier(istart + $I_L3780_26) = 1
 3835.                            endif
 3838.                            $dp_S14 = 100.0 * ( p_cup(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 2) + -p_cup(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 3) )
 3839.                            della(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 2) = ( 1.0/$dp_S14 * ( $subin_S6 * he_cup(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 3) + -( $subdown_S5 * he_cup(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 2) ) + ( hc(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 3) + hc(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 2) ) * $detup_S7 * 5.0e-1 + ( hcd(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 3) + hcd(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 2) ) * $detdo_S10 * 5.0e-1 + -( $entup_S8 * he(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 2) ) + -( $entdo_S9 * he(istart + $I_L3780_26, $I_L3779_28 + 256 * $SI_L3779_24_G1 + 2) ) + -( $entupk_S11 * he_cup(istart + $I_L3780_26, k22(istart + $I_L3780_26)) ) + -( $entdoj_S12 * he_cup(istart + $I_L3780_26, jmin(istart + $I_L3780_26)) ) + $detupk_S13 * hc(istart + $I_L3780_26, ktop(istart + $I_L3780_26)) ) * 9.8100000000000005 )
 3839.                         endif
 3839.                      endif
 3779.                      $I_L3779_28 = 1 + $I_L3779_28
 3850.                      if ( $I_L3779_28 >= min( -1 + kmax, 256 + 256 * $SI_L3779_24_G1 ) + -256 * $SI_L3779_24_G1 ) exit
 3850.                   enddo
 3851.                   $I_L3780_26 = 1 + $I_L3780_26
 3851.                   if ( $I_L3780_26 >= iend + -istart + 1 ) exit
 3851.                enddo
 3779.                $SI_L3779_24_G1 = 1 + $SI_L3779_24_G1
 3851.                if ( $SI_L3779_24_G1 >= _rsh( 254 + kmax, 8 ) ) exit
 3851.             enddo
 3851.          endif
 3851.       endif
 3853.       $Reduc_A35 = .false.
 3853.       $F_A37 = ncols
 3853.       if ( ncols > 0 ) then
 3853.          $I_A36 = 0
 3853. !dir$ ivdep
 3853.          do
 3853.             if ( ier(1 + $I_A36) /= 0 ) then
 3853.                $Reduc_A35 = .true.
 3853.                goto 10
 3853.             endif
 3853.             $I_A36 = 1 + $I_A36
 3853.             if ( $I_A36 >= $F_A37 ) exit
 3853.          enddo
 3853.       endif
 3853.    10 continue
 3853.       if ( $Reduc_A35 ) then
 3854.          _fwrite( _clist( 0, 0, 3, 0, Null_Arg, Null_Arg, t$62,  _substr(t$61,1,30), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 3855.           _substr(t$1358,1,25) = '** ERROR AT cup_dellas **'
 3855.          call _stop(  _substr(t$1358,1,25) )
 3855.       else
 3719.          _free( t$767 )
 3719.       endif
 3858.       return
 3858.       end
 3858.       
 3862.       
 3862.       subroutine cup_forcing_ens_16( aa0, aa1, xaa0, mbdt, dtime, xmb, ierr, ncols, kmax, istart, iend, xf, name, mask, maxens, iens, iedt, maxens3, mconv, omeg, k22, pr_ens, edt, kbcon, ensdim, massfln, massfld, xff_ens3, xk, p_cup, ktop, ierr2, ierr3, grepar1, xfmax, maxens22 )
 3862.       t$63 = ncols
 3891.       t$770 = _zla( 0, ncols )
 3862.       t$64 = maxens
 3862.       t$771 = _zla( 0, ncols )
 3900.       t$772 = _zla( 0, maxens )
 3862.       t$773 = _zla( 0, ncols ) * _zla( 0, maxens )
 3862.       t$67 = ensdim
 3901.       t$774 = _zla( 0, ensdim )
 3862.       t$775 = _zla( 0, ncols ) * _zla( 0, ensdim )
 3862.       t$776 = _len( name )
 3862.       t$66 = kmax
 3899.       t$777 = _zla( 0, kmax )
 3862.       t$778 = _zla( 0, ncols ) * _zla( 0, kmax )
 3862.       t$65 = maxens3
 3898.       t$779 = _zla( 0, maxens3 )
 3862.       t$780 = _zla( 0, ncols ) * _zla( 0, maxens3 )
 3933.       t$783 = 4 * _zla( 0, ncols )
 3927.       t$785 = 4 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 4
 3939.       t$787 = 4 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 4 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 4
 3940.       t$789 = 4 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 4 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8
 3918.       t$790 = 8 * ( ( 4 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 4 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 7 ) / 8 )
 3918.       t$792 = 8 * _zla( 0, ncols ) + 8 * ( ( 4 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 4 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 7 ) / 8 )
 3917.       t$793 = 8 * _zla( 0, ncols ) + 8 * ( ( 4 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 4 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 7 ) / 8 )
 3917.       t$795 = 8 * ( ( 4 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 4 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 7 ) / 8 ) + 16 * _zla( 0, ncols )
 3862.       t$781 = int( _alloc( 8 * ( ( 4 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 4 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 7 ) / 8 ) + 16 * _zla( 0, ncols ) ), 8 )
 3933.       t$782 = t$781
 3927.       t$784 = t$781 + 4 * _zla( 0, ncols )
 3939.       t$786 = t$781 + 4 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 4
 3940.       t$788 = t$781 + 4 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 4 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 4
 3918.       t$791 = t$781 + 8 * ( ( 4 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 4 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 7 ) / 8 )
 3917.       t$794 = t$781 + 8 * _zla( 0, ncols ) + 8 * ( ( 4 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, maxens ) * 4 + _zla( 0, ncols ) * _zla( 0, maxens3 ) * 8 + 7 ) / 8 )
 3966.       if (  _substr(name,1,_len( name )) == 'deeps' ) then
 3973.          $F_A33 = ( iend + -istart + 1 )
 3973.          if ( iend + -istart >= 0 ) then
 3973.             $I_L3973_140 = 0
 3973. !dir$ ivdep
 3973.             do
 3973.                kclim(istart + $I_L3973_140) = 0
 3973.                $I_L3973_140 = 1 + $I_L3973_140
 3973.                if ( $I_L3973_140 >= $F_A33 ) exit
 3973.             enddo
 3975.             $I_L3975_146 = 0
 3975. !dir$ ivdep
 3975.             do
 3974.                $SCA_ierr_I0 = ierr(istart + $I_L3975_146)
 3974.                $I_L3974_122 = 0
 3974.                do
 3976.                   if ( $SCA_ierr_I0 == 0 ) then
 3977.                      if ( p_cup(istart + $I_L3975_146, ktop(istart + $I_L3975_146)) < pcrit(15 + -$I_L3974_122) ) then
 3977.                         if ( kclim(istart + $I_L3975_146) == 0 ) then
 3978.                            kclim(istart + $I_L3975_146) = ( 15 + -$I_L3974_122 )
 3978.                         endif
 3978.                      endif
 3980.                      if ( p_cup(istart + $I_L3975_146, ktop(istart + $I_L3975_146)) > 850.0 ) then
 3980.                         if ( kclim(istart + $I_L3975_146) == 0 ) then
 3980.                            kclim(istart + $I_L3975_146) = 1
 3980.                         endif
 3980.                      endif
 3980.                   endif
 3983.                   $I_L3974_122 = 1 + $I_L3974_122
 3981.                   if ( $I_L3974_122 >= 15 ) exit
 3981.                enddo
 3988.                xmb(istart + $I_L3975_146) = 0.0
 3989.                xomg(istart + $I_L3975_146) = -1.019367991845056e-1 * omeg(istart + $I_L3975_146, 1)
 3990.                if ( $SCA_ierr_I0 > 995 ) then
 3991.                   aa0(istart + $I_L3975_146) = 0.0
 3992.                   ierr(istart + $I_L3975_146) = 0
 3992.                endif
 3982.                $I_L3975_146 = 1 + $I_L3975_146
 3982.                if ( $I_L3975_146 >= iend + -istart + 1 ) exit
 3982.             enddo
 3982.          endif
 3996.          if ( -2 + kmax >= 0 ) then
 3997.             if ( iend + -istart >= 0 ) then
 3996.                $SI_L3996_124_G1 = 0
 3996.                do
 3997.                   $I_L3997_148 = 0
 3997. !dir$ ivdep
 3997. !dir$ blocking_size( 0, 0 )
 3997.                   do
 3996.                      $SCA_ierr_I1 = ierr(istart + $I_L3997_148)
 3996.                      $I_L3996_168 = 0
 3996. !dir$ unroll 4
 3996. !dir$ blocking_size( 256, 256 )
 3996.                      do
 3998.                         if ( $SCA_ierr_I1 == 0 ) then
 3998.                            if ( ( $I_L3996_168 + 256 * $SI_L3996_124_G1 + 2 ) <= kbcon(istart + $I_L3997_148) ) then
 3999.                               if ( -1.019367991845056e-1 * omeg(istart + $I_L3997_148, $I_L3996_168 + 256 * $SI_L3996_124_G1 + 2) > -1.019367991845056e-1 * omeg(istart + $I_L3997_148, 1) ) then
 4000.                                  xomg(istart + $I_L3997_148) = -1.019367991845056e-1 * omeg(istart + $I_L3997_148, $I_L3996_168 + 256 * $SI_L3996_124_G1 + 2)
 4000.                               endif
 4000.                            endif
 4000.                         endif
 3996.                         $I_L3996_168 = 1 + $I_L3996_168
 4002.                         if ( $I_L3996_168 >= min( -1 + kmax, 256 + 256 * $SI_L3996_124_G1 ) + -256 * $SI_L3996_124_G1 ) exit
 4002.                      enddo
 4003.                      $I_L3997_148 = 1 + $I_L3997_148
 4003.                      if ( $I_L3997_148 >= iend + -istart + 1 ) exit
 4003.                   enddo
 3996.                   $SI_L3996_124_G1 = 1 + $SI_L3996_124_G1
 4003.                   if ( $SI_L3996_124_G1 >= _rsh( 254 + kmax, 8 ) ) exit
 4003.                enddo
 4003.             endif
 4003.          endif
 4007.          if ( iend + -istart >= 0 ) then
 4007.             $I_L4007_126 = 0
 4007. !dir$ ivdep
 4007.             do
 4008.                if ( ierr(istart + $I_L4007_126) == 0 ) then
 4018.                   xff0(istart + $I_L4007_126) = ( ( aa1(istart + $I_L4007_126) + -aa0(istart + $I_L4007_126) ) * 1.0/dtime )
 4019.                   xff_ens3(istart + $I_L4007_126, 1) = ( ( aa1(istart + $I_L4007_126) + -aa0(istart + $I_L4007_126) ) * 1.0/dtime )
 4020.                   xff_ens3(istart + $I_L4007_126, 2) = 9.0000000000000002e-1 * ( ( aa1(istart + $I_L4007_126) + -aa0(istart + $I_L4007_126) ) * 1.0/dtime )
 4021.                   xff_ens3(istart + $I_L4007_126, 3) = 1.1000000000000001 * ( ( aa1(istart + $I_L4007_126) + -aa0(istart + $I_L4007_126) ) * 1.0/dtime )
 4031.                   xff_ens3(istart + $I_L4007_126, 4) = -1.019367991845056e-1 * omeg(istart + $I_L4007_126, k22(istart + $I_L4007_126))
 4032.                   xff_ens3(istart + $I_L4007_126, 5) = -1.019367991845056e-1 * omeg(istart + $I_L4007_126, kbcon(istart + $I_L4007_126))
 4033.                   xff_ens3(istart + $I_L4007_126, 6) = xomg(istart + $I_L4007_126)
 4041.                   xff_ens3(istart + $I_L4007_126, 7) = mconv(istart + $I_L4007_126)
 4042.                   xff_ens3(istart + $I_L4007_126, 8) = mconv(istart + $I_L4007_126)
 4043.                   xff_ens3(istart + $I_L4007_126, 9) = mconv(istart + $I_L4007_126)
 4049.                   xff_ens3(istart + $I_L4007_126, 10) = 8.3333333333333339e-4 * aa1(istart + $I_L4007_126)
 4050.                   xff_ens3(istart + $I_L4007_126, 11) = 3.7037037037037035e-4 * aa1(istart + $I_L4007_126)
 4051.                   xff_ens3(istart + $I_L4007_126, 12) = 2.7777777777777778e-4 * aa1(istart + $I_L4007_126)
 4058.                   $k_S6 = max( 1, -1 + kclim(istart + $I_L4007_126) )
 4059.                   $aclim1_S7 = 200.0 * acrit(kclim(istart + $I_L4007_126))
 4061.                   $aclim3_S9 = 200.0 * acritt(kclim(istart + $I_L4007_126))
 4062.                   $aclim4_S10 = 200.0 * acritt($k_S6)
 4064.                   $xff_ens3_WR0_R0 = max( 0.0, ( ( aa1(istart + $I_L4007_126) + -$aclim1_S7 ) * 1.0/dtime ) )
 4064.                   xff_ens3(istart + $I_L4007_126, 13) = $xff_ens3_WR0_R0
 4066.                   xff_ens3(istart + $I_L4007_126, 15) = max( 0.0, ( ( aa1(istart + $I_L4007_126) + -$aclim3_S9 ) * 1.0/dtime ) )
 4067.                   xff_ens3(istart + $I_L4007_126, 16) = max( 0.0, ( ( aa1(istart + $I_L4007_126) + -$aclim4_S10 ) * 1.0/dtime ) )
 4068.                   xff_ens3(istart + $I_L4007_126, 14) = $xff_ens3_WR0_R0
 4068.                endif
 4070.                $I_L4007_126 = 1 + $I_L4007_126
 4069.                if ( $I_L4007_126 >= iend + -istart + 1 ) exit
 4069.             enddo
 4069.          endif
 4072.          if ( maxens > 0 ) then
 4073.             if ( iend + -istart >= 0 ) then
 4072.                $I_L4072_150 = 0
 4072. !dir$ blocking_size( 0, 0 )
 4072.                do
 4073.                   $I_L4073_128 = 0
 4073. !dir$ ivdep
 4073. !dir$ blocking_size( 0, 0 )
 4073.                   do
 4074.                      if ( ierr(istart + $I_L4073_128) == 0 ) then
 4075.                         $xk_WR0_R2 = ( ( xaa0(istart + $I_L4073_128, 1 + $I_L4072_150) + -aa1(istart + $I_L4073_128) ) * 1.0/mbdt )
 4075.                         xk(istart + $I_L4073_128, 1 + $I_L4072_150) = $xk_WR0_R2
 4076.                         if ( $xk_WR0_R2 <= 0.0 ) then
 4076.                            $xk_WR0_R2 = min( -9.9999999999999995e-7, $xk_WR0_R2 )
 4076.                            xk(istart + $I_L4073_128, 1 + $I_L4072_150) = $xk_WR0_R2
 4076.                         endif
 4077.                         if ( $xk_WR0_R2 > 0.0 ) then
 4077.                            $xk_WR0_R2 = max( 9.9999999999999995e-7, $xk_WR0_R2 )
 4077.                            xk(istart + $I_L4073_128, 1 + $I_L4072_150) = $xk_WR0_R2
 4077.                         endif
 4078.                         nall(istart + $I_L4073_128, 1 + $I_L4072_150) = ( -( maxens * maxens3 ) + -( maxens * maxens3 * maxens22 ) + maxens * maxens3 * iens * maxens22 + maxens * maxens3 * iedt + maxens3 * $I_L4072_150 )
 4078.                      endif
 4082.                      $I_L4073_128 = 1 + $I_L4073_128
 4081.                      if ( $I_L4073_128 >= iend + -istart + 1 ) exit
 4081.                   enddo
 4083.                   $I_L4072_150 = 1 + $I_L4072_150
 4082.                   if ( $I_L4072_150 >= maxens ) exit
 4082.                enddo
 4082.             endif
 4082.          endif
 4105.          $F_A34 = maxens3
 4105.          $F_A35 = ncols
 4105.          if ( and( -$F_A35, -$F_A34 ) < 0 ) then
 4105.             $I_L4105_162 = 0
 4105.             do
 4105.                $I_L4105_142 = 0
 4105. !dir$ ivdep
 4105.                do
 4105.                   teste2(1 + $I_L4105_142, 1 + $I_L4105_162) = .true.
 4105.                   $I_L4105_142 = 1 + $I_L4105_142
 4105.                   if ( $I_L4105_142 >= $F_A35 ) exit
 4105.                enddo
 4105.                $I_L4105_162 = 1 + $I_L4105_162
 4105.                if ( $I_L4105_162 >= $F_A34 ) exit
 4105.             enddo
 4105.          endif
 4106.          if ( maxens3 > 0 ) then
 4107.             if ( iend + -istart >= 0 ) then
 4106.                $I_L4106_152 = 0
 4106. !dir$ ivdep
 4106.                do
 4107.                   $I_L4107_130 = 0
 4107.                   do
 4108.                      if ( ierr(istart + $I_L4107_130) == 0 ) then
 4108.                         if ( ierr2(istart + $I_L4107_130) > 0 ) then
 4109.                            xf(istart + $I_L4107_130, nall(istart + $I_L4107_130, 2) + $I_L4106_152 + 1) = 0.0
 4110.                            massfln(istart + $I_L4107_130, nall(istart + $I_L4107_130, 2) + $I_L4106_152 + 1) = 0.0
 4111.                            teste2(istart + $I_L4107_130, 1 + $I_L4106_152) = .false.
 4111.                         endif
 4111.                      endif
 4113.                      $I_L4107_130 = 1 + $I_L4107_130
 4112.                      if ( $I_L4107_130 >= iend + -istart + 1 ) exit
 4112.                   enddo
 4114.                   $I_L4106_152 = 1 + $I_L4106_152
 4113.                   if ( $I_L4106_152 >= maxens3 ) exit
 4113.                enddo
 4113.             endif
 4113.          endif
 4116.          $F_A36 = maxens3
 4116.          $F_A37 = ncols
 4116.          if ( and( -$F_A37, -$F_A36 ) < 0 ) then
 4116.             $I_L4116_164 = 0
 4116.             do
 4116.                $I_L4116_144 = 0
 4116. !dir$ ivdep
 4116.                do
 4116.                   teste3(1 + $I_L4116_144, 1 + $I_L4116_164) = .true.
 4116.                   $I_L4116_144 = 1 + $I_L4116_144
 4116.                   if ( $I_L4116_144 >= $F_A37 ) exit
 4116.                enddo
 4116.                $I_L4116_164 = 1 + $I_L4116_164
 4116.                if ( $I_L4116_164 >= $F_A36 ) exit
 4116.             enddo
 4116.          endif
 4117.          if ( maxens3 > 0 ) then
 4118.             if ( iend + -istart >= 0 ) then
 4117.                $I_L4117_154 = 0
 4117. !dir$ ivdep
 4117.                do
 4118.                   $I_L4118_132 = 0
 4118.                   do
 4119.                      if ( ierr(istart + $I_L4118_132) == 0 ) then
 4119.                         if ( ierr3(istart + $I_L4118_132) > 0 ) then
 4120.                            xf(istart + $I_L4118_132, nall(istart + $I_L4118_132, 3) + $I_L4117_154 + 1) = 0.0
 4121.                            massfln(istart + $I_L4118_132, nall(istart + $I_L4118_132, 3) + $I_L4117_154 + 1) = 0.0
 4122.                            teste3(istart + $I_L4118_132, 1 + $I_L4117_154) = .false.
 4122.                         endif
 4122.                      endif
 4124.                      $I_L4118_132 = 1 + $I_L4118_132
 4123.                      if ( $I_L4118_132 >= iend + -istart + 1 ) exit
 4123.                   enddo
 4125.                   $I_L4117_154 = 1 + $I_L4117_154
 4124.                   if ( $I_L4117_154 >= maxens3 ) exit
 4124.                enddo
 4124.             endif
 4124.          endif
 4127.          if ( maxens > 0 ) then
 4128.             if ( iend + -istart >= 0 ) then
 4127.                $I_L4127_156 = 0
 4127.                do
 4128.                   $I_L4128_134 = 0
 4128. !dir$ ivdep
 4128.                   do
 4129.                      if ( ierr(istart + $I_L4128_134) == 0 ) then
 4129.                         if ( teste2(istart + $I_L4128_134, 1 + $I_L4127_156) ) then
 4129.                            if ( teste3(istart + $I_L4128_134, 1 + $I_L4127_156) ) then
 4141.                               $iresultd_S19 = 0
 4147.                               massfld = 0.0
 4149.                               if ( xk(istart + $I_L4128_134, 1 + $I_L4127_156) < 0.0 ) then
 4149.                                  if ( xff0(istart + $I_L4128_134) > 0.0 ) then
 4149.                                     $iresultd_S19 = 1
 4149.                                  endif
 4149.                               endif
 4151.                               if ( max( 0, $iresultd_S19 ) == 1 ) then
 4158.                                  $xff_max_S20 = 5.0000000000000003e-2
 4159.                                  if ( mask(istart + $I_L4128_134) == 1 ) then
 4159.                                     $xff_max_S20 = xfmax
 4159.                                  endif
 4168.                                  if ( xff0(istart + $I_L4128_134) > $xff_max_S20 ) then
 4169.                                     xf(istart + $I_L4128_134, 1 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = max( 0.0, -( xff_ens3(istart + $I_L4128_134, 1) * 1.0/xk(istart + $I_L4128_134, 1 + $I_L4127_156) ) )
 4171.                                     xf(istart + $I_L4128_134, 2 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = max( 0.0, -( xff_ens3(istart + $I_L4128_134, 2) * 1.0/xk(istart + $I_L4128_134, 1 + $I_L4127_156) ) )
 4173.                                     xf(istart + $I_L4128_134, 3 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = max( 0.0, -( xff_ens3(istart + $I_L4128_134, 3) * 1.0/xk(istart + $I_L4128_134, 1 + $I_L4127_156) ) )
 4179.                                     xf(istart + $I_L4128_134, 13 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = max( 0.0, -( xff_ens3(istart + $I_L4128_134, 13) * 1.0/xk(istart + $I_L4128_134, 1 + $I_L4127_156) ) )
 4181.                                     xf(istart + $I_L4128_134, 14 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = max( 0.0, -( xff_ens3(istart + $I_L4128_134, 14) * 1.0/xk(istart + $I_L4128_134, 1 + $I_L4127_156) ) )
 4183.                                     xf(istart + $I_L4128_134, 15 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = max( 0.0, -( xff_ens3(istart + $I_L4128_134, 15) * 1.0/xk(istart + $I_L4128_134, 1 + $I_L4127_156) ) )
 4185.                                     xf(istart + $I_L4128_134, 16 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = max( 0.0, -( xff_ens3(istart + $I_L4128_134, 16) * 1.0/xk(istart + $I_L4128_134, 1 + $I_L4127_156) ) )
 4185.                                  else
 4189.                                     xf(istart + $I_L4128_134, 1 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = 0.0
 4190.                                     xf(istart + $I_L4128_134, 2 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = 0.0
 4191.                                     xf(istart + $I_L4128_134, 3 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = 0.0
 4196.                                     xf(istart + $I_L4128_134, 13 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = 0.0
 4197.                                     xf(istart + $I_L4128_134, 14 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = 0.0
 4198.                                     xf(istart + $I_L4128_134, 15 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = 0.0
 4199.                                     xf(istart + $I_L4128_134, 16 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = 0.0
 4199.                                  endif
 4205.                                  xf(istart + $I_L4128_134, 4 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = max( 0.0, xff_ens3(istart + $I_L4128_134, 4) )
 4206.                                  xf(istart + $I_L4128_134, 5 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = max( 0.0, xff_ens3(istart + $I_L4128_134, 5) )
 4207.                                  xf(istart + $I_L4128_134, 6 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = max( 0.0, xff_ens3(istart + $I_L4128_134, 6) )
 4212.                                  $a1_S21 = max( 1.0000000000000001e-9, pr_ens(istart + $I_L4128_134, 7 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) )
 4213.                                  xf(istart + $I_L4128_134, 7 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = ( max( 0.0, xff_ens3(istart + $I_L4128_134, 7) ) * 1.0/$a1_S21 )
 4214.                                  $a1_S22 = max( 1.0000000000000001e-9, pr_ens(istart + $I_L4128_134, 8 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) )
 4215.                                  xf(istart + $I_L4128_134, 8 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = ( max( 0.0, xff_ens3(istart + $I_L4128_134, 8) ) * 1.0/$a1_S22 )
 4216.                                  $a1_S23 = max( 1.0000000000000001e-9, pr_ens(istart + $I_L4128_134, 9 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) )
 4217.                                  xf(istart + $I_L4128_134, 9 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = ( max( 0.0, xff_ens3(istart + $I_L4128_134, 9) ) * 1.0/$a1_S23 )
 4225.                                  if ( xk(istart + $I_L4128_134, 1 + $I_L4127_156) >= 0.0 ) then
 4201.                                     goto 10
 4225.                                  else if ( xff0(istart + $I_L4128_134) > $xff_max_S20 ) then
 4227.                                     xf(istart + $I_L4128_134, 10 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = max( 0.0, -( xff_ens3(istart + $I_L4128_134, 10) * 1.0/xk(istart + $I_L4128_134, 1 + $I_L4127_156) ) )
 4228.                                     xf(istart + $I_L4128_134, 11 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = max( 0.0, -( xff_ens3(istart + $I_L4128_134, 11) * 1.0/xk(istart + $I_L4128_134, 1 + $I_L4127_156) ) )
 4229.                                     xf(istart + $I_L4128_134, 12 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = max( 0.0, -( xff_ens3(istart + $I_L4128_134, 12) * 1.0/xk(istart + $I_L4128_134, 1 + $I_L4127_156) ) )
 4229.                                  else
 4229.    10                               continue
 4231.                                     xf(istart + $I_L4128_134, 10 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = 0.0
 4232.                                     xf(istart + $I_L4128_134, 11 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = 0.0
 4233.                                     xf(istart + $I_L4128_134, 12 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = 0.0
 4233.                                  endif
 4245.                                  if ( grepar1 == 24 ) then
 4246.                                     xf(istart + $I_L4128_134, 4 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = xf(istart + $I_L4128_134, 1 + nall(istart + $I_L4128_134, 1 + $I_L4127_156))
 4247.                                     xf(istart + $I_L4128_134, 5 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = xf(istart + $I_L4128_134, 2 + nall(istart + $I_L4128_134, 1 + $I_L4127_156))
 4248.                                     xf(istart + $I_L4128_134, 6 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = xf(istart + $I_L4128_134, 3 + nall(istart + $I_L4128_134, 1 + $I_L4127_156))
 4250.                                     xf(istart + $I_L4128_134, 13 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = xf(istart + $I_L4128_134, 1 + nall(istart + $I_L4128_134, 1 + $I_L4127_156))
 4251.                                     xf(istart + $I_L4128_134, 14 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = xf(istart + $I_L4128_134, 2 + nall(istart + $I_L4128_134, 1 + $I_L4127_156))
 4252.                                     xf(istart + $I_L4128_134, 15 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = xf(istart + $I_L4128_134, 3 + nall(istart + $I_L4128_134, 1 + $I_L4127_156))
 4253.                                     xf(istart + $I_L4128_134, 16 + nall(istart + $I_L4128_134, 1 + $I_L4127_156)) = xf(istart + $I_L4128_134, 1 + nall(istart + $I_L4128_134, 1 + $I_L4127_156))
 4253.                                  endif
 4253.                               endif
 4253.                            endif
 4253.                         endif
 4253.                      endif
 4258.                      $I_L4128_134 = 1 + $I_L4128_134
 4257.                      if ( $I_L4128_134 >= iend + -istart + 1 ) exit
 4257.                   enddo
 4259.                   $I_L4127_156 = 1 + $I_L4127_156
 4258.                   if ( $I_L4127_156 >= maxens ) exit
 4258.                enddo
 4258.             endif
 4265.             if ( maxens3 > 0 ) then
 4266.                if ( iend + -istart >= 0 ) then
 4264.                   $I_L4264_166 = 0
 4264.                   do
 4265.                      $I_L4265_158 = 0
 4265.                      do
 4266.                         $I_L4266_136 = 0
 4266. !dir$ ivdep
 4266.                         do
 4267.                            if ( ierr(istart + $I_L4266_136) == 0 ) then
 4268.                               if ( teste2(istart + $I_L4266_136, 1 + $I_L4264_166) ) then
 4268.                                  if ( teste3(istart + $I_L4266_136, 1 + $I_L4264_166) ) then
 4269.                                     $iresultd_S26 = 0
 4275.                                     massfld = 0.0
 4276.                                     if ( xk(istart + $I_L4266_136, 1 + $I_L4264_166) < 0.0 ) then
 4276.                                        if ( xff0(istart + $I_L4266_136) > 0.0 ) then
 4276.                                           $iresultd_S26 = 1
 4276.                                        endif
 4276.                                     endif
 4278.                                     if ( max( 0, $iresultd_S26 ) == 1 ) then
 4283.                                        if ( grepar1 > 0 ) then
 4283.                                           if ( grepar1 <= 16 ) then
 4284.                                              xf(istart + $I_L4266_136, $I_L4265_158 + nall(istart + $I_L4266_136, 1 + $I_L4264_166) + 1) = xf(istart + $I_L4266_136, grepar1 + nall(istart + $I_L4266_136, 1 + $I_L4264_166))
 4284.                                           endif
 4284.                                        endif
 4291.                                        $massfln_WR0_R3 = edt(istart + $I_L4266_136) * xf(istart + $I_L4266_136, $I_L4265_158 + nall(istart + $I_L4266_136, 1 + $I_L4264_166) + 1)
 4292.                                        $massfln_WR0_R3 = max( 0.0, $massfln_WR0_R3 )
 4292.                                        massfln(istart + $I_L4266_136, $I_L4265_158 + nall(istart + $I_L4266_136, 1 + $I_L4264_166) + 1) = $massfln_WR0_R3
 4292.                                     endif
 4292.                                  endif
 4292.                               endif
 4292.                            endif
 4296.                            $I_L4266_136 = 1 + $I_L4266_136
 4295.                            if ( $I_L4266_136 >= iend + -istart + 1 ) exit
 4295.                         enddo
 4297.                         $I_L4265_158 = 1 + $I_L4265_158
 4296.                         if ( $I_L4265_158 >= maxens3 ) exit
 4296.                      enddo
 4298.                      $I_L4264_166 = 1 + $I_L4264_166
 4297.                      if ( $I_L4264_166 >= maxens ) exit
 4297.                   enddo
 4297.                endif
 4297.             endif
 4297.          endif
 4297.       endif
 4302.       if (  _substr(name,1,_len( name )) /= 'deeps' ) then
 4303.          if ( ensdim > 0 ) then
 4304.             if ( iend + -istart >= 0 ) then
 4304.                $SI_L4304_138_G4 = 0
 4304.                do
 4303.                   $I_L4303_160 = 0
 4303. !dir$ ivdep
 4303. !dir$ blocking_size( 0, 0 )
 4303.                   do
 4304.                      $I_L4304_171 = 0
 4304. !dir$ blocking_size( 256, 256 )
 4304.                      do
 4305.                         if ( ierr(istart + $I_L4304_171 + 256 * $SI_L4304_138_G4) /= 20 ) then
 4305.                            if ( ierr(istart + $I_L4304_171 + 256 * $SI_L4304_138_G4) /= 0 ) then
 4306.                               xf(istart + $I_L4304_171 + 256 * $SI_L4304_138_G4, 1 + $I_L4303_160) = 0.0
 4307.                               massfln(istart + $I_L4304_171 + 256 * $SI_L4304_138_G4, 1 + $I_L4303_160) = 0.0
 4307.                            endif
 4307.                         endif
 4304.                         $I_L4304_171 = 1 + $I_L4304_171
 4308.                         if ( $I_L4304_171 >= min( iend + -istart + 1, 256 + 256 * $SI_L4304_138_G4 ) + -256 * $SI_L4304_138_G4 ) exit
 4308.                      enddo
 4310.                      $I_L4303_160 = 1 + $I_L4303_160
 4310.                      if ( $I_L4303_160 >= ensdim ) exit
 4310.                   enddo
 4304.                   $SI_L4304_138_G4 = 1 + $SI_L4304_138_G4
 4309.                   if ( $SI_L4304_138_G4 >= _rsh( iend + -istart + 256, 8 ) ) exit
 4309.                enddo
 4309.             endif
 4309.          endif
 4309.       endif
 3862.       _free( t$781 )
 4313.       return
 4313.       end
 4313.       
 4317.       
 4317.       subroutine cup_output_ens( xf_ens, ierr, dellat, dellaq, dellaqc, outt, outq, outqc, pre, pw, xmb, ktop, ncols, kmax, istart, iend, maxens2, maxens, iens, pr_ens, outt_ens, maxens3, ensdim, massfln, xfac1, xfac_for_dn, maxens22 )
 4317.       t$68 = ncols
 4317.       t$71 = ensdim
 4346.       t$796 = _zla( 0, ncols )
 4317.       t$797 = _zla( 0, ncols )
 4346.       t$798 = _zla( 0, ensdim )
 4317.       t$799 = _zla( 0, ncols ) * _zla( 0, ensdim )
 4317.       t$69 = kmax
 4317.       t$70 = maxens2
 4343.       t$800 = _zla( 0, kmax )
 4317.       t$801 = _zla( 0, ncols ) * _zla( 0, kmax )
 4343.       t$802 = _zla( 0, maxens2 )
 4317.       t$803 = _zla( 0, ncols ) * _zla( 0, kmax ) * _zla( 0, maxens2 )
 4317.       t$804 = _zla( 0, ncols ) * _zla( 0, kmax )
 4365.       t$807 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8
 4363.       t$808 = _zla( 0, ncols ) * _zla( 0, kmax ) * 8
 4363.       t$810 = _zla( 0, ncols ) * _zla( 0, kmax ) * 16
 4364.       t$811 = _zla( 0, ncols ) * _zla( 0, kmax ) * 16
 4364.       t$813 = _zla( 0, ncols ) * _zla( 0, kmax ) * 24
 4362.       t$814 = _zla( 0, ncols ) * _zla( 0, kmax ) * 24
 4362.       t$816 = _zla( 0, ncols ) * _zla( 0, kmax ) * 32
 4353.       t$818 = 4 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
 4317.       t$805 = int( _alloc( 4 * _zla( 0, ncols ) + _zla( 0, ncols ) * _zla( 0, kmax ) * 32 ), 8 )
 4365.       t$806 = t$805
 4363.       t$809 = t$805 + _zla( 0, ncols ) * _zla( 0, kmax ) * 8
 4364.       t$812 = t$805 + _zla( 0, ncols ) * _zla( 0, kmax ) * 16
 4362.       t$815 = t$805 + _zla( 0, ncols ) * _zla( 0, kmax ) * 24
 4353.       t$817 = t$805 + _zla( 0, ncols ) * _zla( 0, kmax ) * 32
 4383.       if ( kmax > 0 ) then
 4384.          if ( iend + -istart >= 0 ) then
 4383.             $I_L4383_92 = 0
 4383. !dir$ blocking_size( 0, 0 )
 4383.             do
 4384.                $I_L4384_78 = 0
 4384. !dir$ ivdep
 4384. !dir$ loop_info (automatic) cache_nt( dtpw, dtqc, dtq, dtt )
 4384. !dir$ blocking_size( 0, 0 )
 4384.                do
 4385.                   if ( ierr(istart + $I_L4384_78) == 0 ) then
 4386.                      outt(istart + $I_L4384_78, 1 + $I_L4383_92) = 0.0
 4387.                      outq(istart + $I_L4384_78, 1 + $I_L4383_92) = 0.0
 4388.                      outqc(istart + $I_L4384_78, 1 + $I_L4383_92) = 0.0
 4389.                      dtt(istart + $I_L4384_78, 1 + $I_L4383_92) = 0.0
 4390.                      dtq(istart + $I_L4384_78, 1 + $I_L4383_92) = 0.0
 4391.                      dtqc(istart + $I_L4384_78, 1 + $I_L4383_92) = 0.0
 4392.                      dtpw(istart + $I_L4384_78, 1 + $I_L4383_92) = 0.0
 4392.                   endif
 4394.                   $I_L4384_78 = 1 + $I_L4384_78
 4393.                   if ( $I_L4384_78 >= iend + -istart + 1 ) exit
 4393.                enddo
 4395.                $I_L4383_92 = 1 + $I_L4383_92
 4394.                if ( $I_L4383_92 >= kmax ) exit
 4394.             enddo
 4394.          endif
 4394.       endif
 4397.       if ( iend + -istart >= 0 ) then
 4397.          $I_L4397_80 = 0
 4397. !dir$ ivdep
 4397.          do
 4398.             if ( ierr(istart + $I_L4397_80) == 0 ) then
 4399.                pre(istart + $I_L4397_80) = 0.0
 4400.                xmb(istart + $I_L4397_80) = 0.0
 4401.                xfac1(istart + $I_L4397_80) = 1.0
 4402.                xfac_for_dn(istart + $I_L4397_80) = 1.0
 4403.                ncount(istart + $I_L4397_80) = 0
 4403.             endif
 4405.             $I_L4397_80 = 1 + $I_L4397_80
 4404.             if ( $I_L4397_80 >= iend + -istart + 1 ) exit
 4404.          enddo
 4404.       endif
 4412.       if ( maxens22 * maxens * maxens3 > 0 ) then
 4413.          if ( iend + -istart >= 0 ) then
 4412.             $I_L4412_94 = 0
 4412. !dir$ blocking_size( 0, 0 )
 4412.             do
 4413.                $I_L4413_82 = 0
 4413. !dir$ ivdep
 4413. !dir$ blocking_size( 0, 0 )
 4413.                do
 4414.                   if ( ierr(istart + $I_L4413_82) == 0 ) then
 4415.                      pr_ens(istart + $I_L4413_82, $I_L4412_94 + -( maxens22 * maxens * maxens3 ) + iens * maxens22 * maxens * maxens3 + 1) = pr_ens(istart + $I_L4413_82, $I_L4412_94 + -( maxens22 * maxens * maxens3 ) + iens * maxens22 * maxens * maxens3 + 1) * xf_ens(istart + $I_L4413_82, $I_L4412_94 + -( maxens22 * maxens * maxens3 ) + iens * maxens22 * maxens * maxens3 + 1)
 4416.                      outt_ens(istart + $I_L4413_82, $I_L4412_94 + -( maxens22 * maxens * maxens3 ) + iens * maxens22 * maxens * maxens3 + 1) = outt_ens(istart + $I_L4413_82, $I_L4412_94 + -( maxens22 * maxens * maxens3 ) + iens * maxens22 * maxens * maxens3 + 1) * xf_ens(istart + $I_L4413_82, $I_L4412_94 + -( maxens22 * maxens * maxens3 ) + iens * maxens22 * maxens * maxens3 + 1)
 4417.                      if ( xf_ens(istart + $I_L4413_82, $I_L4412_94 + -( maxens22 * maxens * maxens3 ) + iens * maxens22 * maxens * maxens3 + 1) >= 0.0 ) then
 4418.                         xmb(istart + $I_L4413_82) = xmb(istart + $I_L4413_82) + xf_ens(istart + $I_L4413_82, $I_L4412_94 + -( maxens22 * maxens * maxens3 ) + iens * maxens22 * maxens * maxens3 + 1)
 4419.                         ncount(istart + $I_L4413_82) = 1 + ncount(istart + $I_L4413_82)
 4419.                      endif
 4419.                   endif
 4422.                   $I_L4413_82 = 1 + $I_L4413_82
 4421.                   if ( $I_L4413_82 >= iend + -istart + 1 ) exit
 4421.                enddo
 4423.                $I_L4412_94 = 1 + $I_L4412_94
 4422.                if ( $I_L4412_94 >= ( maxens22 * maxens * maxens3 ) ) exit
 4422.             enddo
 4422.          endif
 4422.       endif
 4424.       if ( iend + -istart >= 0 ) then
 4424.          $I_L4424_84 = 0
 4424. !dir$ ivdep
 4424. !dir$ loop_info (automatic) cache_nt( ierr )
 4424.          do
 4425.             if ( ierr(istart + $I_L4424_84) == 0 ) then
 4426.                if ( ncount(istart + $I_L4424_84) > 0 ) then
 4427.                   xmb(istart + $I_L4424_84) = ( xmb(istart + $I_L4424_84) * 1.0/ncount(istart + $I_L4424_84) )
 4427.                else
 4429.                   xmb(istart + $I_L4424_84) = 0.0
 4430.                   ierr(istart + $I_L4424_84) = 13
 4430.                endif
 4432.                xfac1(istart + $I_L4424_84) = xmb(istart + $I_L4424_84)
 4432.             endif
 4434.             $I_L4424_84 = 1 + $I_L4424_84
 4433.             if ( $I_L4424_84 >= iend + -istart + 1 ) exit
 4433.          enddo
 4433.       endif
 4442.       if ( maxens22 > 0 ) then
 4443.          if ( kmax > 0 ) then
 4444.             if ( iend + -istart >= 0 ) then
 4443.                $SI_L4443_102_G1 = 0
 4443.                do
 4442.                   $SI_L4442_96_G4 = 0
 4442.                   do
 4444.                      $SI_L4444_86_G7 = 0
 4444.                      do
 4443.                         $I_L4443_110 = 0
 4443. !dir$ shortloop16
 4443. !dir$ ivdep
 4443. !dir$ blocking_size( 2, 2 )
 4443.                         do
 4442.                            $I_L4442_107 = 0
 4442. !dir$ shortloop16
 4442. !dir$ blocking_size( 4, 4 )
 4442.                            do
 4444.                               $I_L4444_104 = 0
 4444. !dir$ blocking_size( 256, 256 )
 4444.                               do
 4445.                                  if ( ierr(istart + $I_L4444_104 + 256 * $SI_L4444_86_G7) == 0 ) then
 4445.                                     if ( ( $I_L4443_110 + 2 * $SI_L4443_102_G1 + 1 ) <= ktop(istart + $I_L4444_104 + 256 * $SI_L4444_86_G7) ) then
 4446.                                        dtt(istart + $I_L4444_104 + 256 * $SI_L4444_86_G7, $I_L4443_110 + 2 * $SI_L4443_102_G1 + 1) = dtt(istart + $I_L4444_104 + 256 * $SI_L4444_86_G7, $I_L4443_110 + 2 * $SI_L4443_102_G1 + 1) + dellat(istart + $I_L4444_104 + 256 * $SI_L4444_86_G7, $I_L4443_110 + 2 * $SI_L4443_102_G1 + 1, $I_L4442_107 + 4 * $SI_L4442_96_G4 + 1)
 4447.                                        dtq(istart + $I_L4444_104 + 256 * $SI_L4444_86_G7, $I_L4443_110 + 2 * $SI_L4443_102_G1 + 1) = dtq(istart + $I_L4444_104 + 256 * $SI_L4444_86_G7, $I_L4443_110 + 2 * $SI_L4443_102_G1 + 1) + dellaq(istart + $I_L4444_104 + 256 * $SI_L4444_86_G7, $I_L4443_110 + 2 * $SI_L4443_102_G1 + 1, $I_L4442_107 + 4 * $SI_L4442_96_G4 + 1)
 4448.                                        dtqc(istart + $I_L4444_104 + 256 * $SI_L4444_86_G7, $I_L4443_110 + 2 * $SI_L4443_102_G1 + 1) = dtqc(istart + $I_L4444_104 + 256 * $SI_L4444_86_G7, $I_L4443_110 + 2 * $SI_L4443_102_G1 + 1) + dellaqc(istart + $I_L4444_104 + 256 * $SI_L4444_86_G7, $I_L4443_110 + 2 * $SI_L4443_102_G1 + 1, $I_L4442_107 + 4 * $SI_L4442_96_G4 + 1)
 4449.                                        dtpw(istart + $I_L4444_104 + 256 * $SI_L4444_86_G7, $I_L4443_110 + 2 * $SI_L4443_102_G1 + 1) = dtpw(istart + $I_L4444_104 + 256 * $SI_L4444_86_G7, $I_L4443_110 + 2 * $SI_L4443_102_G1 + 1) + pw(istart + $I_L4444_104 + 256 * $SI_L4444_86_G7, $I_L4443_110 + 2 * $SI_L4443_102_G1 + 1, $I_L4442_107 + 4 * $SI_L4442_96_G4 + 1)
 4449.                                     endif
 4449.                                  endif
 4444.                                  $I_L4444_104 = 1 + $I_L4444_104
 4450.                                  if ( $I_L4444_104 >= min( iend + -istart + 1, 256 + 256 * $SI_L4444_86_G7 ) + -256 * $SI_L4444_86_G7 ) exit
 4450.                               enddo
 4442.                               $I_L4442_107 = 1 + $I_L4442_107
 4442.                               if ( $I_L4442_107 >= min( maxens22, 4 + 4 * $SI_L4442_96_G4 ) + -4 * $SI_L4442_96_G4 ) exit
 4442.                            enddo
 4443.                            $I_L4443_110 = 1 + $I_L4443_110
 4451.                            if ( $I_L4443_110 >= min( kmax, 2 + 2 * $SI_L4443_102_G1 ) + -2 * $SI_L4443_102_G1 ) exit
 4451.                         enddo
 4444.                         $SI_L4444_86_G7 = 1 + $SI_L4444_86_G7
 4444.                         if ( $SI_L4444_86_G7 >= _rsh( iend + -istart + 256, 8 ) ) exit
 4444.                      enddo
 4442.                      $SI_L4442_96_G4 = 1 + $SI_L4442_96_G4
 4452.                      if ( $SI_L4442_96_G4 >= _rsh( 3 + maxens22, 2 ) ) exit
 4452.                   enddo
 4443.                   $SI_L4443_102_G1 = 1 + $SI_L4443_102_G1
 4443.                   if ( $SI_L4443_102_G1 >= _rsh( 1 + kmax, 1 ) ) exit
 4443.                enddo
 4443.             endif
 4443.          endif
 4443.       endif
 4454.       if ( kmax > 0 ) then
 4455.          if ( iend + -istart >= 0 ) then
 4454.             $I_L4454_98 = 0
 4454. !dir$ blocking_size( 0, 0 )
 4454.             do
 4455.                $I_L4455_88 = 0
 4455. !dir$ ivdep
 4455. !dir$ blocking_size( 0, 0 )
 4455.                do
 4456.                   if ( ierr(istart + $I_L4455_88) == 0 ) then
 4456.                      if ( ( 1 + $I_L4454_98 ) <= ktop(istart + $I_L4455_88) ) then
 4457.                         $outtes_S11 = ( dtt(istart + $I_L4455_88, 1 + $I_L4454_98) * xmb(istart + $I_L4455_88) * 1.0/maxens22 * 86400.0 )
 4458.                         if ( $outtes_S11 > 500.0 ) then
 4458.                            if ( ( 1 + $I_L4454_98 ) > 2 ) then
 4459.                               xmb(istart + $I_L4455_88) = ( 500.0 * 1.0/$outtes_S11 ) * xmb(istart + $I_L4455_88)
 4460.                               $outtes_S11 = 250.0
 4460.                            endif
 4460.                         endif
 4464.                         if ( $outtes_S11 < -250.0 ) then
 4465.                            $LD_SPLT_P0 = xmb(istart + $I_L4455_88)
 4465.                            xmb(istart + $I_L4455_88) = -( ( 250.0 * 1.0/$outtes_S11 ) * $LD_SPLT_P0 )
 4466.                            $outtes_S11 = -250.0
 4466.                         endif
 4469.                         if ( $outtes_S11 > 125.0 ) then
 4469.                            if ( ( 1 + $I_L4454_98 ) <= 2 ) then
 4470.                               $LD_SPLT_P1 = xmb(istart + $I_L4455_88)
 4470.                               xmb(istart + $I_L4455_88) = ( 250.0 * 1.0/$outtes_S11 ) * $LD_SPLT_P1
 4470.                            endif
 4470.                         endif
 4473.                         $LD_SPLT_P2 = xmb(istart + $I_L4455_88)
 4473.                         outt(istart + $I_L4455_88, 1 + $I_L4454_98) = outt(istart + $I_L4455_88, 1 + $I_L4454_98) + ( $LD_SPLT_P2 * dtt(istart + $I_L4455_88, 1 + $I_L4454_98) * 1.0/maxens22 )
 4474.                         outq(istart + $I_L4455_88, 1 + $I_L4454_98) = outq(istart + $I_L4455_88, 1 + $I_L4454_98) + ( $LD_SPLT_P2 * dtq(istart + $I_L4455_88, 1 + $I_L4454_98) * 1.0/maxens22 )
 4475.                         outqc(istart + $I_L4455_88, 1 + $I_L4454_98) = outqc(istart + $I_L4455_88, 1 + $I_L4454_98) + ( $LD_SPLT_P2 * dtqc(istart + $I_L4455_88, 1 + $I_L4454_98) * 1.0/maxens22 )
 4476.                         pre(istart + $I_L4455_88) = pre(istart + $I_L4455_88) + ( $LD_SPLT_P2 * dtpw(istart + $I_L4455_88, 1 + $I_L4454_98) * 1.0/maxens22 )
 4476.                      endif
 4476.                   endif
 4478.                   $I_L4455_88 = 1 + $I_L4455_88
 4477.                   if ( $I_L4455_88 >= iend + -istart + 1 ) exit
 4477.                enddo
 4479.                $I_L4454_98 = 1 + $I_L4454_98
 4478.                if ( $I_L4454_98 >= kmax ) exit
 4478.             enddo
 4478.          endif
 4478.       endif
 4483.       if ( maxens22 * maxens * maxens3 > 0 ) then
 4484.          if ( iend + -istart >= 0 ) then
 4483.             $I_L4483_100 = 0
 4483. !dir$ blocking_size( 0, 0 )
 4483.             do
 4484.                $I_L4484_90 = 0
 4484. !dir$ ivdep
 4484. !dir$ blocking_size( 0, 0 )
 4484.                do
 4485.                   if ( ierr(istart + $I_L4484_90) == 0 ) then
 4486.                      $xfac1_WR0_R0 = ( xmb(istart + $I_L4484_90) * 1.0/( 9.9999999999999998e-17 + xfac1(istart + $I_L4484_90) ) )
 4486.                      xfac1(istart + $I_L4484_90) = $xfac1_WR0_R0
 4487.                      massfln(istart + $I_L4484_90, $I_L4483_100 + -( maxens22 * maxens * maxens3 ) + iens * maxens22 * maxens * maxens3 + 1) = massfln(istart + $I_L4484_90, $I_L4483_100 + -( maxens22 * maxens * maxens3 ) + iens * maxens22 * maxens * maxens3 + 1) * $xfac1_WR0_R0 * xfac_for_dn(istart + $I_L4484_90)
 4488.                      pr_ens(istart + $I_L4484_90, $I_L4483_100 + -( maxens22 * maxens * maxens3 ) + iens * maxens22 * maxens * maxens3 + 1) = pr_ens(istart + $I_L4484_90, $I_L4483_100 + -( maxens22 * maxens * maxens3 ) + iens * maxens22 * maxens * maxens3 + 1) * $xfac1_WR0_R0
 4489.                      outt_ens(istart + $I_L4484_90, $I_L4483_100 + -( maxens22 * maxens * maxens3 ) + iens * maxens22 * maxens * maxens3 + 1) = outt_ens(istart + $I_L4484_90, $I_L4483_100 + -( maxens22 * maxens * maxens3 ) + iens * maxens22 * maxens * maxens3 + 1) * $xfac1_WR0_R0
 4489.                   endif
 4491.                   $I_L4484_90 = 1 + $I_L4484_90
 4490.                   if ( $I_L4484_90 >= iend + -istart + 1 ) exit
 4490.                enddo
 4492.                $I_L4483_100 = 1 + $I_L4483_100
 4491.                if ( $I_L4483_100 >= ( maxens22 * maxens * maxens3 ) ) exit
 4491.             enddo
 4491.          endif
 4491.       endif
 4317.       _free( t$805 )
 4495.       return
 4495.       end
 4495.       
 4497.       
 4497.       real (kind=8)
 4497.       function es5( t )
 4500.       if ( t <= 273.14999999999998 ) then
 4501.          $es5_S0 = _expn( ae(2) + -( be(2) * 1.0/t ) )
 4501.       else
 4503.          $es5_S0 = _expn( ae(1) + -( be(1) * 1.0/t ) )
 4503.       endif
 4505.       es5 = $es5_S0
 4505.       return
 4505.       end
 4505.       
    6.       
    6.       module cu_grellens
 4506.       return
 4506.       end
 4506.       
