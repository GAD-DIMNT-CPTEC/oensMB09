#! /bin/sh
#help#
#***********************************************************************#
#                                                                       #
#     Name:            configure                                        #
#                                                                       #
#     Function:       This script configure the global                  #
#                     model                                             #
#                     It runs in  Shell.                                #
#                                                                       #
#     Date:           October 08th, 2009.                               #
#     Last change:    October 08th, 2009.                               #
#                                                                       #
#     Valid Arguments for configure                                     #
#                                                                       #
#     example :                                                         #
#                                                                       #
#     configure  --TrucSim=42 --VertSim=28 --Machine=SX6   ...........  #
#                                                                       #
# --help                                                                #
# --prefix=/home/pkubota                                                #
# --TrucSim=42 or 21;42;62;126;170;213;254;299;382...                   #
# --VertSim=28 or 9;18;28;42;64;96....                                  #
# --DATA=2004032600                                                     #
# --Machine=Linux  or UNA;SX6                                           #
# --SetLinear=FALSE                                                     #
# --compiler=intel or gnu                                               #
# -h                                                                    #
#                                                                       #
# From configure.ac Id: configure.ac,v 1.253 2008/06/27 17:52:29 ed Exp.#
# Guess values for system-dependent variables and create Makefiles.     #
# Generated by GNU Autoconf 2.62 for MCGA 1.0.0                         #
#                                                                       #
# Report bugs to <pkubota@cptec.inpe.br>.                               #
#                                                                       #
# Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,   #
# 2002, 2003, 2004, 2005, 2006, 2007, 2008 Free Software Foundation,    #
# Inc.                                                                  #
# This configure script is free software; the Free Software Foundation  #
# gives unlimited permission to copy, distribute and modify it.         #
# Be more Bourne compatible                                             #
#***********************************************************************#
#help#
#
#       Help:
#

if [ "${1}" = "help" -o -z "${1}" ]
then
cat < ${0} | sed -n '/^#help#/,/^#help#/p'
exit 0
fi
## --------------------- ##
## M4sh Initialization.  ##
## --------------------- ##

export Machine="UNA"
export prefix=`pwd`
export TrucSim=42
export VertSim=28
export timestep=1200
export im=128
export jm=64
export DATA="2004032600"
export DATAF="2004032800"
export compiler="intel"
export SetLinear=FALSE

nopt=`echo $* | wc -w`
for i in $*; do
opt=`echo $i | cut -d= -f1,5`;optnew=`echo $i | cut -d= -f2,5`
   case "$opt" in
	--prefix | -prefix)
	 export prefix="$optnew"
	 shift; shift;;		# label from column #
        --help | -help | --h | -h)	
	  echo "--help"
	  echo "--prefix=/home/pkubota"
	  echo "--TrucSim=42 or 21;42;62;126;170;213;254;299;382..."
	  echo "--VertSim=28 or 9;18;28;42;64;96...."
	  echo "--DATA=2004032600 "
	  echo "--Machine=Linux  or UNA;SX6"
	  echo "--SetLinear=FALSE"
          echo "--compiler=intel or gnu"
          echo "$opt" ; exit 1		# end option parsing
	  shift; shift;;		# initial maximum
        --TrucSim | -TrucSim)	
         export TrucSim=$optnew
	 if [ $TrucSim = 21 ]; then
	  export im=64
	  export jm=32
	  export timestep=3600
	 fi 
	 if [ $TrucSim = 31 ]; then
	  export im=96
	  export jm=48
	  export timestep=1800
	 fi 
	 if [ $TrucSim = 42 ]; then
	  export im=128
	  export jm=64
	  export timestep=1800
	 fi 
	 if [ $TrucSim = 62 ]; then
	  export im=192
	  export jm=96
	  export timestep=1200
	 fi
	 if [ $TrucSim = 106 ]; then
	  export im=320
	  export jm=160
	  export timestep=900
	 fi
	 if [ $TrucSim = 126 ]; then
	  export im=384
	  export jm=192
	  export timestep=600
	 fi
	 if [ $TrucSim = 133 ]; then
	  export im=400
	  export jm=200
	  export timestep=600
	 fi
	 if [ $TrucSim = 159 ]; then
	  export im=480
	  export jm=240
	  export timestep=600
	 fi
	 if [ $TrucSim = 170 ]; then
	  export im=512
	  export jm=256
	  export timestep=450
	 fi
	 if [ $TrucSim = 213 ]; then
	  export im=640
	  export jm=320
	  export timestep=450
	 fi
	 if [ $TrucSim = 213 ]; then
	  export im=640
	  export jm=320
	  export timestep=360
	 fi
	 if [ $TrucSim = 254 ]; then
	  export im=768
	  export jm=384
	  export timestep=300
	 fi
	 if [ $TrucSim = 299 ]; then
	  export im=900
	  export jm=450
	  export timestep=300
	 fi
	 if [ $TrucSim = 319 ]; then
	  export im=960
	  export jm=480
	  export timestep=225
	 fi
	 if [ $TrucSim = 341 ]; then
	  export im=1024
	  export jm=512
	  export timestep=200
	 fi
	 if [ $TrucSim = 382 ]; then
	  export im=1152
	  export jm=576
	  export timestep=180
	 fi
	 if [ $TrucSim = 511 ]; then
	  export im=1536
	  export jm=768
	  export timestep=150
	 fi
	 if [ $TrucSim = 533 ]; then
	  export im=1600
	  export jm=800
	  export timestep=150
	 fi
	 if [ $TrucSim = 666 ]; then
	  export im=2000
	  export jm=1000
	  export timestep=150
	 fi
	 if [ $TrucSim = 863 ]; then
	  export im=2592
	  export jm=1296
	  export timestep=150
	 fi
	 if [ $TrucSim = 1279 ]; then
	  export im=3840
	  export jm=1920
	  export timestep=20
	 fi

	 shift; shift;;	        # subtract from each #
        --VertSim | -VertSim)	
         export VertSim=$optnew
	 shift; shift;;	        # subtract from each #
        --DATA | -DATA)	
         export DATA="$optnew"
	 shift; shift;;	        # subtract from each #
        --DATAF | -DATAF)	
         export DATAF="$optnew"
	 shift; shift;;	        # subtract from each #
        --Machine | -Machine)	
         export Machine="$optnew"
	 shift; shift;;	        # subtract from each #
        --SetLinear | -SetLinear)	
         export SetLinear="$optnew"
	 shift; shift;;	        # subtract from each #
        --compiler | -compiler)	
         export compiler="$optnew"
	 shift; shift;;	        # subtract from each #
	*)	
	echo "$opt" unknown flag 1>&2; exit 1;;		# end option parsing
    esac
done

if [ "$SetLinear" = "TRUE" ]; then
if [ ${TrucSim} -lt 10000 ]; then
export TRUNC=TL${TrucSim}
if [ ${TrucSim} -lt 1000 ]; then
export TRUNC=TL0${TrucSim}
if [ ${TrucSim} -lt 100 ]; then
export TRUNC=TL00${TrucSim}
fi
fi
fi
else
if [ ${TrucSim} -lt 10000 ]; then
export TRUNC=TQ${TrucSim}
if [ ${TrucSim} -lt 1000 ]; then
export TRUNC=TQ0${TrucSim}
if [ ${TrucSim} -lt 100 ]; then
export TRUNC=TQ00${TrucSim}
fi
fi
fi
fi
if [ ${jm} -lt "10000" ]; then
export prefixGrid=0${jm}
if [ ${jm} -lt 1000 ]; then
export prefixGrid=00${jm}
if [ ${jm} -lt 100 ]; then
export prefixGrid=000${jm}
if [ ${jm} -lt 10 ]; then
export prefixGrid=0000${jm}
fi
fi
fi
fi

if [ ${VertSim} -lt 1000 ]; then
export prefixVert=${VertSim}
if [ ${VertSim} -lt 100 ]; then
export prefixVert=0${VertSim}
if [ ${VertSim} -lt 10 ]; then
export prefixVert=00${VertSim}
fi
fi
fi
export DirTrunc=${TRUNC}L${prefixVert}
echo $im $jm $Machine $TRUNC $prefixGrid $prefixVert ${TRUNC}L${prefixVert}
cp backup/*.tar.gz .
rm -rf pre model pos grh run utils
##
##  Build Directories of Pre-Processing
##
tar -zxvf utils.tar.gz
##
##  Build Directories of Pre-Processing
##
tar -zxvf pre.tar.gz
cd pre 
mkdir -p ${prefix}
mkdir -p ${prefix}/pre
mkdir -p ${prefix}/pre/exec
mkdir -p ${prefix}/pre/dataout
mkdir -p `pwd`/scripts/aux
cp -rp datain ${prefix}/pre/
cp -rp databcs ${prefix}/pre/
cp -p  databcs/GTOPO30/*  ${prefix}/pre/dataout/
cd ..
##
##  Build Directories of Model
##
tar -zxvf model.tar.gz
cd model
mkdir -p ${prefix}/model/dataout
mkdir -p ${prefix}/model/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/model/exec
cp -rp datain ${prefix}/model/
cd ..
##
##  Build Directories of Pos-Processing
##
tar -zxvf pos.tar.gz
cd pos
mkdir -p ${prefix}/pos/dataout
mkdir -p ${prefix}/pos/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/pos/exec
cp -rp datain ${prefix}/pos/
cd ..
##
##  Build Directories of GridHistory Pos-Processing
##
tar -zxvf grh.tar.gz
cd grh
mkdir -p ${prefix}/grh/dataout
mkdir -p ${prefix}/grh/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/grh/exec
cd ..
##
##  Build Directories of Tigge Pos-Processing
##
tar -zxvf tigge.tar.gz
cd tigge
mkdir -p ${prefix}/tigge/dataout
mkdir -p ${prefix}/tigge/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/tigge/exec
cd ..
##
##  Build Directories of recomposition of a global model initial conditions.
##
tar -zxvf recanl.tar.gz
cd recanl
mkdir -p ${prefix}/recanl/dataout
mkdir -p ${prefix}/recanl/datain
mkdir -p ${prefix}/recanl/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/recanl/bin/${TRUNC}L${prefixVert}
cd ..
##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf decanl.tar.gz
cd decanl
mkdir -p ${prefix}/decanl/dataout
mkdir -p ${prefix}/decanl/datain
mkdir -p ${prefix}/decanl/output
mkdir -p ${prefix}/decanl/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/decanl/bin/${TRUNC}L${prefixVert}
cd ..
##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf rdpert.tar.gz
cd rdpert
mkdir -p ${prefix}/rdpert/dataout
mkdir -p ${prefix}/rdpert/datain
mkdir -p ${prefix}/rdpert/output
mkdir -p ${prefix}/rdpert/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/rdpert/bin/${TRUNC}L${prefixVert}
cd ..
##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf recfct.tar.gz
cd recfct
mkdir -p ${prefix}/recfct/dataout
mkdir -p ${prefix}/recfct/datain
mkdir -p ${prefix}/recfct/output
mkdir -p ${prefix}/recfct/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/recfct/bin/${TRUNC}L${prefixVert}
cd ..

##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf eofhumi.tar.gz
cd eofhumi
mkdir -p ${prefix}/eofhumi/dataout
mkdir -p ${prefix}/eofhumi/datain
mkdir -p ${prefix}/eofhumi/output
mkdir -p ${prefix}/eofhumi/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/eofhumi/bin/${TRUNC}L${prefixVert}
cd ..

##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf eoftemp.tar.gz
cd eoftemp
mkdir -p ${prefix}/eoftemp/dataout
mkdir -p ${prefix}/eoftemp/datain
mkdir -p ${prefix}/eoftemp/output
mkdir -p ${prefix}/eoftemp/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/eoftemp/bin/${TRUNC}L${prefixVert}
cd ..

##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf eofwind.tar.gz
cd eofwind
mkdir -p ${prefix}/eofwind/dataout
mkdir -p ${prefix}/eofwind/datain
mkdir -p ${prefix}/eofwind/output
mkdir -p ${prefix}/eofwind/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/eofwind/bin/${TRUNC}L${prefixVert}
cd ..
##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf eof.tar.gz
cd eof
mkdir -p ${prefix}/eof/dataout
mkdir -p ${prefix}/eof/datain
mkdir -p ${prefix}/eof/output
mkdir -p ${prefix}/eof/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/eof/bin/${TRUNC}L${prefixVert}
cd ..
##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf fftpln.tar.gz
cd fftpln
mkdir -p ${prefix}/fftpln/lib/${TRUNC}L${prefixVert}
cd ..
##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf plumes.tar.gz
cd plumes
mkdir -p ${prefix}/plumes/dataout
mkdir -p ${prefix}/plumes/datain
mkdir -p ${prefix}/plumes/output
mkdir -p ${prefix}/plumes/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/plumes/bin/${TRUNC}L${prefixVert}
cd ..

##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf prcmed.tar.gz
cd prcmed
mkdir -p ${prefix}/prcmed/grib
mkdir -p ${prefix}/prcmed/datain
mkdir -p ${prefix}/prcmed/output
mkdir -p ${prefix}/prcmed/dataout/${TRUNC}L${prefixVert}/grib
mkdir -p ${prefix}/prcmed/bin/${TRUNC}L${prefixVert}
cd ..
##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf probability.tar.gz
cd probability
mkdir -p ${prefix}/probability/datain
mkdir -p ${prefix}/probability/output
mkdir -p ${prefix}/probability/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/probability/bin/${TRUNC}L${prefixVert}
cd ..
##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf probagr.tar.gz
cd probagr
mkdir -p ${prefix}/probagr/datain
mkdir -p ${prefix}/probagr/output
mkdir -p ${prefix}/probagr/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/probagr/bin/${TRUNC}L${prefixVert}
cd ..
##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf probweek.tar.gz
cd probweek
mkdir -p ${prefix}/probweek/datain
mkdir -p ${prefix}/probweek/output
mkdir -p ${prefix}/probweek/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/probweek/bin/${TRUNC}L${prefixVert}
cd ..
##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf recortes.tar.gz
cd recortes
mkdir -p ${prefix}/recortes/datain
mkdir -p ${prefix}/recortes/output
mkdir -p ${prefix}/recortes/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/recortes/bin/${TRUNC}L${prefixVert}
cd ..
##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf removies.tar.gz
cd removies
mkdir -p ${prefix}/removies/datain
mkdir -p ${prefix}/removies/output
mkdir -p ${prefix}/removies/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/removies/bin/${TRUNC}L${prefixVert}
cd ..
##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf skill.tar.gz
cd skill
mkdir -p ${prefix}/skill/datain
mkdir -p ${prefix}/skill/output
mkdir -p ${prefix}/skill/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/skill/bin/${TRUNC}L${prefixVert}
cd ..
##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf spaguetti.tar.gz
cd spaguetti
mkdir -p ${prefix}/spaguetti/datain
mkdir -p ${prefix}/spaguetti/gif
mkdir -p ${prefix}/spaguetti/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/spaguetti/bin/${TRUNC}L${prefixVert}
cd ..
##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf spread.tar.gz
cd spread
mkdir -p ${prefix}/spread/datain
mkdir -p ${prefix}/spread/output
mkdir -p ${prefix}/spread/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/spread/bin/${TRUNC}L${prefixVert}
cd ..
##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf wgne.tar.gz
cd wgne
mkdir -p ${prefix}/wgne/datain
mkdir -p ${prefix}/wgne/output
mkdir -p ${prefix}/wgne/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/wgne/bin/${TRUNC}L${prefixVert}
cd ..
##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf chievol.tar.gz
cd chievol
mkdir -p ${prefix}/chievol/datain
mkdir -p ${prefix}/chievol/gif
mkdir -p ${prefix}/chievol/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/chievol/bin/${TRUNC}L${prefixVert}
cd ..
##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf cluster.tar.gz
cd cluster
mkdir -p ${prefix}/cluster/datain
mkdir -p ${prefix}/cluster/gif
mkdir -p ${prefix}/cluster/dataout/${TRUNC}L${prefixVert}/clusters
mkdir -p ${prefix}/cluster/bin/${TRUNC}L${prefixVert}
cd ..
##
##  Build Directories of decomposition of a global model initial conditions.
##
tar -zxvf ensmed.tar.gz
cd ensmed
mkdir -p ${prefix}/ensmed/datain
mkdir -p ${prefix}/ensmed/output
mkdir -p ${prefix}/ensmed/dataout/${TRUNC}L${prefixVert}
mkdir -p ${prefix}/ensmed/bin/${TRUNC}L${prefixVert}
cd ..

##
##  Build Directories of include
##

mkdir -p include/${TRUNC}L${prefixVert}

##
##  Build Directories of Run-Model
##
mkdir -p run
cd run
##
##  Build Makefile Pre-Processing
##
cd ../pre

cat sources/Makefile.in | awk '{if(substr($1,1,5) == "PATH2")  {"echo $prefix" | getline prefix
				print substr($1,1,5)"="prefix"/pre/exec"
                               } else { 
  			        print $0} }' > sources/Makefile


##
##  Build Scripts Pre-Processing
##
echo " " | awk '{
       print "#!/bin/bash"
       print "#######################################################"
       print "# NAMELIST OPTIONS OF RESOLUTION AND INITIAL CONDITION#"
       print "#######################################################"      
      "pwd" | getline prefix
       print "export dirhome="prefix
      "echo $prefix" | getline prefix
       print "export dirdata="prefix
       print "export dirgrads=/usr/local/grads"
       print "#"
       print "# Machine options: SX6; Linux"
       "echo $Machine" | getline machine
       print "export MAQUI="machine
       print "#"
       print "# Set  Res for Chopping"
       print "#"
       "echo $TrucSim" | getline TrucSim
       print "export RESOUT="TrucSim
       "echo $VertSim" | getline VertSim       
       print "export KMOUT="VertSim
       "echo $SetLinear" | getline SetLinear       
       print "export SetLinear="SetLinear
       "echo $TrucSim" | getline TrucSim       
       print "export RESO="TrucSim
       "echo $im" | getline im
       print "export IM="im
       "echo $jm" | getline jm
       print "export JM="jm
       print "export prefix=${JM}"
       print "#"
       print "#set run date#"
       print "#"
       "echo $DATA" | getline DATA1
       print "export DATA="DATA1
       print "###################################################"
       }'> scripts/NAMELIST.bash

chmod 777 scripts/NAMELIST.bash



function copyscripts2 {
echo "building"  $1
type1=`echo "$1" | awk '{print substr($1,9,4)}'`
if [ "$type1" = "bash" ]; then
cat $1 | awk '{if (substr($2,1,9) == "SetLinear")  
	         {
                  "echo $SetLinear" | getline SetLinear       
	          print "export SetLinear="SetLinear
	         } 
	       else if (substr($2,1,8) == "dirgrads")  
	         {
		 "echo $prefix"  | getline prefixgra
		  print "export dirgrads=/usr/local/grads"
	         } 
	       else if (substr($2,1,5) == "MAQUI")  
	         {
		 "uname"  | getline Machine
		  print "export MAQUI="Machine
	         } 

	       else 
	        {
  	         print $0
	        } }' > $2

else
cat $1 | awk '{if (substr($2,1,6) == "RESOUT")  
	         {
                  "echo $TrucSim" | getline TrucSim       
	          print "export RESOUT="TrucSim
	         } 
	       else if (substr($2,1,5) == "KMOUT")  
	         {
                  "echo $VertSim" | getline VertSim       
	          print "export KMOUT="VertSim
	         } 
	       else if (substr($2,1,9) == "SetLinear")  
	         {
                  "echo $SetLinear" | getline SetLinear       
	          print "export SetLinear="SetLinear
	         } 
	       else if (substr($2,1,4) == "RESO")  
	         {
                  "echo $TrucSim" | getline TrucSim       
	          print "export RESO="TrucSim
	         } 
	       else if (substr($2,1,2) == "IM")  
	         {
                  "echo $im" | getline im       
	          print "export IM="im
	         } 
	       else if (substr($2,1,2) == "JM")  
	         {
                  "echo $jm" | getline jm       
	          print "export JM="jm
	         } 
	       else if (substr($2,1,4) == "DATA")  
	         {
                  "echo $DATA" | getline DATA       
	          print "export DATA="DATA
	         } 
	       else if (substr($2,1,7) == "dirhome")  
	         {
		 "pwd" | getline prefix
		 print "export " substr($2,1,7)"="prefix
	         } 
	       else if (substr($2,1,7) == "dirdata")  
	         {
		 "echo $prefix"  | getline prefix
		  print "export " substr($2,1,7)"="prefix
	         } 
	       else if (substr($2,1,8) == "dirgrads")  
	         {
		 "echo $prefix"  | getline prefixgra
		  print "export dirgrads=/usr/local/grads"
	         } 
	       else if (substr($2,1,5) == "MAQUI")  
	         {
 		 "echo $Machine"  | getline Machine
		  print "export MAQUI="Machine
	         } 

	       else 
	        {
  	         print $0
	        } }' > $2

fi
}
function copyscripts {
echo "building"  $1
type1=`echo "$1" | awk '{print substr($1,9,4)}'`
if [ "$type1" = "bash" ]; then
cat $1 | awk '{if (substr($2,1,6) == "RESOUT")  
	         {
                  "echo $TrucSim" | getline TrucSim       
	          print "#export RESOUT="TrucSim
	         } 
	       else if (substr($2,1,5) == "KMOUT")  
	         {
                  "echo $VertSim" | getline VertSim       
	          print "#export KMOUT="VertSim
	         } 
	       else if (substr($2,1,9) == "SetLinear")  
	         {
                  "echo $SetLinear" | getline SetLinear       
	          print "#export SetLinear="SetLinear
	         } 
	       else if (substr($2,1,4) == "RESO")  
	         {
                  "echo $TrucSim" | getline TrucSim       
	          print "#export RESO="TrucSim
	         } 
	       else if (substr($2,1,2) == "IM")  
	         {
                  "echo $im" | getline im       
	          print "#export IM="im
	         } 
	       else if (substr($2,1,2) == "JM")  
	         {
                  "echo $jm" | getline jm       
	          print "#export JM="jm
	         } 
	       else if (substr($2,1,4) == "DATA")  
	         {
                  "echo $DATA" | getline DATA       
	          print "#export DATA="DATA
	         } 
	       else if (substr($2,1,7) == "dirhome")  
	         {
		 "pwd" | getline prefix
		 print "#export " substr($2,1,7)"="prefix
	         } 
	       else if (substr($2,1,7) == "dirdata")  
	         {
		 "echo $prefix"  | getline prefix
		  print "#export " substr($2,1,7)"="prefix
	         } 
	       else if (substr($2,1,8) == "dirgrads")  
	         {
		 "echo $prefix"  | getline prefixgra
		  print "#export dirgrads=/usr/local/grads"
	         } 
	       else if (substr($2,1,5) == "MAQUI")  
	         {
		 "uname"  | getline Machine
		  print "#export MAQUI="Machine
	         } 

	       else 
	        {
  	         print $0
	        } }' > $2

else
cat $1 | awk '{if (substr($2,1,6) == "RESOUT")  
	         {
                  "echo $TrucSim" | getline TrucSim       
	          print "export RESOUT="TrucSim
	         } 
	       else if (substr($2,1,5) == "KMOUT")  
	         {
                  "echo $VertSim" | getline VertSim       
	          print "export KMOUT="VertSim
	         } 
	       else if (substr($2,1,9) == "SetLinear")  
	         {
                  "echo $SetLinear" | getline SetLinear       
	          print "export SetLinear="SetLinear
	         } 
	       else if (substr($2,1,4) == "RESO")  
	         {
                  "echo $TrucSim" | getline TrucSim       
	          print "export RESO="TrucSim
	         } 
	       else if (substr($2,1,2) == "IM")  
	         {
                  "echo $im" | getline im       
	          print "export IM="im
	         } 
	       else if (substr($2,1,2) == "JM")  
	         {
                  "echo $jm" | getline jm       
	          print "export JM="jm
	         } 
	       else if (substr($2,1,4) == "DATA")  
	         {
                  "echo $DATA" | getline DATA       
	          print "export DATA="DATA
	         } 
	       else if (substr($2,1,7) == "dirhome")  
	         {
		 "pwd" | getline prefix
		 print "export " substr($2,1,7)"="prefix
	         } 
	       else if (substr($2,1,7) == "dirdata")  
	         {
		 "echo $prefix"  | getline prefix
		  print "export " substr($2,1,7)"="prefix
	         } 
	       else if (substr($2,1,8) == "dirgrads")  
	         {
		 "echo $prefix"  | getline prefixgra
		  print "export dirgrads=/usr/local/grads"
	         } 
	       else if (substr($2,1,5) == "MAQUI")  
	         {
 		 "echo $Machine"  | getline Machine
		  print "export MAQUI="Machine
	         } 

	       else 
	        {
  	         print $0
	        } }' > $2

fi
}

function gerascripts {
echo "building"  $1
cat $1 | awk '{if(substr($2,1,4) == "fila") 
           {
          "pwd" | getline prefix
	   print prefix"/scripts/NAMELIST.bash"
           } 
	 else if (substr($2,1,4) == "NJOB")  
	   {
	   print "#"$0
	   } 
	 else if (substr($1,1,4) == "NJOB")  
	   {
	   print "#"$0
	   } 
	 else if (substr($1,1,6) == "submet")  
	   {
	   print "#"$0
	   } 
	 else if (substr($1,1,3) == "num")  
	   {
	   print "#"$0
	   } 
	 else if (substr($1,1,3) == "fra")  
	   {
	   print "#"$0
	   } 
	 else if (substr($1,1,7) == "cpu_tot")  
	   {
	   print "#"$0
	   } 
	 else if (substr($1,1,4) == "qsub")  
	   {
	   print $3
	   } 
	 else if (substr($2,1,4) == "qsub")  
	   {
	   print $5
	   } 
	 else if (substr($3,1,9) == "memsz_job")  
	   {
	   print "ulimit -s unlimited"
	   } 

	 else 
	   {
  	     print $0
	   } }' > $2
}
function gerascripts3 {
echo "building"  $1
cat $1 | awk '{if (substr($4,1,2) == "DK")  
	       {
		 "echo $prefix"  | getline prefix
		  print $1" "$2" " "export " substr($4,1,2)"="prefix
	       }
	       else 
	       {
  	         print $0
	       } }' > $2
}

function gerascripts2 {
echo "building"  $1
cat $1 | awk '{if(substr($7,1,4) == "hold") 
               {
	         print $1" "$2" "$3
               } 
	       else if (substr($5,1,4) == "hold")  
	       {
	          print $1
	       }
	       else if (substr($2,1,9) == "SetLinear")  
	       {
                 "echo $SetLinear" | getline SetLinear       
	          print "export SetLinear="SetLinear
	       } 
	       else if (substr($2,1,8) == "dirgrads")  
	       {
		 "echo $prefix"  | getline prefixgra
		  print "export dirgrads=/usr/local/grads"
	       } 
	       else if (substr($2,1,5) == "MAQUI")  
	       {
		 "uname"  | getline Machine
		  print "export MAQUI="Machine
	       } 

	      else 
	      {
  	         print $0
	      } }' > $2
}
if [ "$Machine" = "Linux" ]; then
   gerascripts "scripts/bash/run_LandSeaMask.bash"              "scripts/run_LandSeaMask.bash"
   gerascripts "scripts/bash/run_Chopping.bash"                 "scripts/run_Chopping.bash"
   gerascripts "scripts/bash/run_VarTopo.bash"                  "scripts/run_VarTopo.bash"
   gerascripts "scripts/bash/run_TopoSpectral.bash"             "scripts/run_TopoSpectral.bash"
   gerascripts "scripts/bash/run_VegetationMaskSSiB.bash"       "scripts/run_VegetationMaskSSiB.bash"
   gerascripts "scripts/bash/run_VegetationAlbedoSSiB.bash"     "scripts/run_VegetationAlbedoSSiB.bash"
   gerascripts "scripts/bash/run_DeepSoilTemperatureClima.bash" "scripts/run_DeepSoilTemperatureClima.bash"
   gerascripts "scripts/bash/run_VegetationMask.bash"           "scripts/run_VegetationMask.bash"
   gerascripts "scripts/bash/run_DeepSoilTemperature.bash"      "scripts/run_DeepSoilTemperature.bash"
   gerascripts "scripts/bash/run_RoughnessLengthClima.bash"     "scripts/run_RoughnessLengthClima.bash"
   gerascripts "scripts/bash/run_RoughnessLength.bash"          "scripts/run_RoughnessLength.bash"
   gerascripts "scripts/bash/run_SoilMoistureClima.bash"        "scripts/run_SoilMoistureClima.bash"
   gerascripts "scripts/bash/run_SoilMoisture.bash"             "scripts/run_SoilMoisture.bash"
   gerascripts "scripts/bash/run_AlbedoClima.bash"              "scripts/run_AlbedoClima.bash"
   gerascripts "scripts/bash/run_Albedo.bash"                   "scripts/run_Albedo.bash"
   gerascripts "scripts/bash/run_SnowClima.bash"                "scripts/run_SnowClima.bash"
   gerascripts "scripts/bash/run_SSTClima.bash"                 "scripts/run_SSTClima.bash"
   gerascripts "scripts/bash/run_SSTWeeklyNCEP.bash"            "scripts/run_SSTWeeklyNCEP.bash"
   gerascripts "scripts/bash/run_SSTWeekly.bash"                "scripts/run_SSTWeekly.bash"
   gerascripts3 "scripts/bash/EnvironmentalVariablesMCGA"       "../run/EnvironmentalVariablesMCGA"
   gerascripts2 "scripts/bash/runPre"                           "../run/runPre"
   chmod 777 ../run/runPre
fi
if [ "$Machine" = "UNA" ]; then
   copyscripts "scripts/bash/run_LandSeaMask.bash"              "scripts/run_LandSeaMask.bash"
   copyscripts "scripts/bash/run_Chopping.bash"                 "scripts/run_Chopping.bash"
   copyscripts "scripts/bash/run_VarTopo.bash"                  "scripts/run_VarTopo.bash"
   copyscripts "scripts/bash/run_TopoSpectral.bash"             "scripts/run_TopoSpectral.bash"
   copyscripts "scripts/bash/run_VegetationMaskSSiB.bash"       "scripts/run_VegetationMaskSSiB.bash"
   copyscripts "scripts/bash/run_VegetationAlbedoSSiB.bash"     "scripts/run_VegetationAlbedoSSiB.bash"
   copyscripts "scripts/bash/run_VegetationMask.bash"           "scripts/run_VegetationMask.bash"
   copyscripts "scripts/bash/run_DeepSoilTemperatureClima.bash" "scripts/run_DeepSoilTemperatureClima.bash"
   copyscripts "scripts/bash/run_DeepSoilTemperature.bash"      "scripts/run_DeepSoilTemperature.bash"
   copyscripts "scripts/bash/run_RoughnessLengthClima.bash"     "scripts/run_RoughnessLengthClima.bash"
   copyscripts "scripts/bash/run_RoughnessLength.bash"          "scripts/run_RoughnessLength.bash"
   copyscripts "scripts/bash/run_SoilMoistureClima.bash"        "scripts/run_SoilMoistureClima.bash"
   copyscripts "scripts/bash/run_SoilMoisture.bash"             "scripts/run_SoilMoisture.bash"
   copyscripts "scripts/bash/run_AlbedoClima.bash"              "scripts/run_AlbedoClima.bash"
   copyscripts "scripts/bash/run_Albedo.bash"                   "scripts/run_Albedo.bash"
   copyscripts "scripts/bash/run_SnowClima.bash"                "scripts/run_SnowClima.bash"
   copyscripts "scripts/bash/run_SSTClima.bash"                 "scripts/run_SSTClima.bash"
   copyscripts "scripts/bash/run_SSTWeeklyNCEP.bash"            "scripts/run_SSTWeeklyNCEP.bash"
   copyscripts "scripts/bash/run_SSTWeekly.bash"                "scripts/run_SSTWeekly.bash"
   gerascripts3 "scripts/bash/EnvironmentalVariablesMCGA"       "../run/EnvironmentalVariablesMCGA"
   copyscripts2 "scripts/bash/runPre"                           "../run/runPre"
   chmod 777 ../run/runPre
fi
if [ "$Machine" = "SX6" ]; then
   copyscripts "scripts/ksh/run_LandSeaMask.ksh"              "scripts/run_LandSeaMask.ksh"
   copyscripts "scripts/ksh/run_Chopping.ksh"                 "scripts/run_Chopping.ksh"
   copyscripts "scripts/ksh/run_VarTopo.ksh"                  "scripts/run_VarTopo.ksh"
   copyscripts "scripts/ksh/run_TopoSpectral.ksh"             "scripts/run_TopoSpectral.ksh"
   copyscripts "scripts/ksh/run_VegetationMaskSSiB.ksh"       "scripts/run_VegetationMaskSSiB.ksh"
   copyscripts "scripts/ksh/run_VegetationAlbedoSSiB.ksh"     "scripts/run_VegetationAlbedoSSiB.ksh"   
   copyscripts "scripts/ksh/run_VegetationMask.ksh"           "scripts/run_VegetationMask.ksh"
   copyscripts "scripts/ksh/run_DeepSoilTemperatureClima.ksh" "scripts/run_DeepSoilTemperatureClima.ksh"
   copyscripts "scripts/ksh/run_DeepSoilTemperature.ksh"      "scripts/run_DeepSoilTemperature.ksh"
   copyscripts "scripts/ksh/run_RoughnessLengthClima.ksh"     "scripts/run_RoughnessLengthClima.ksh"
   copyscripts "scripts/ksh/run_RoughnessLength.ksh"          "scripts/run_RoughnessLength.ksh"
   copyscripts "scripts/ksh/run_SoilMoistureClima.ksh"        "scripts/run_SoilMoistureClima.ksh"
   copyscripts "scripts/ksh/run_SoilMoisture.ksh"             "scripts/run_SoilMoisture.ksh"
   copyscripts "scripts/ksh/run_AlbedoClima.ksh"              "scripts/run_AlbedoClima.ksh"
   copyscripts "scripts/ksh/run_Albedo.ksh"                   "scripts/run_Albedo.ksh"
   copyscripts "scripts/ksh/run_SnowClima.ksh"                "scripts/run_SnowClima.ksh"
   copyscripts "scripts/ksh/run_SSTClima.ksh"                 "scripts/run_SSTClima.ksh"
   copyscripts "scripts/ksh/run_SSTWeeklyNCEP.ksh"            "scripts/run_SSTWeeklyNCEP.ksh"
   copyscripts "scripts/ksh/run_SSTWeekly.ksh"                "scripts/run_SSTWeekly.ksh"
   copyscripts "scripts/ksh/configenv_pre.ksh"                "configenv_pre.ksh"
   copyscripts2 "scripts/ksh/EnvironmentalVariablesMCGA"      "../run/EnvironmentalVariablesMCGA"
   copyscripts2 "scripts/ksh/runAll.ksh"                      "../run/run_pre.ksh"
chmod 777 ../run/run_pre.ksh
fi
chmod 777 scripts/*

cd ../model
##
##  Build Makefile Model-running 1924750-011-9499-6854
##
export aspa2='"'

if [ "$Machine" = "Linux" ]; then

if [ "$compiler" = "gnu" ]; then
cat source/Constants.f90.in | awk '{if(substr($4,1,3) == "r16")
                                    {print "  INTEGER, PARAMETER :: r16 = SELECTED_REAL_KIND(15)! Kind for 128-bits Real Numbers 15"
                                    }
                                    else
                                    {
                                     print $0
                                    }
                                    }' > source/Constants.f90
fi

cat source/Makefile.in | awk '{if(substr($1,1,5) == "PATH2")  
                               {
			         "echo $prefix" | getline prefix
			  	  print substr($1,1,5)"="prefix"/model/exec"
                               } 
	                       else if (substr($1,1,6) == "FTRACE")  
                               {
                                  print "FTRACE= "
	                       } 
	                       else if (substr($1,1,6) == "OPENMP")  
                               {
                                  print "OPENMP= "
	                       } 
	                       else if (substr($1,1,8) == "NOASSUME")  
                               {
                                  print "NOASSUME= "
	                       } 
	                       else if (substr($1,1,15) == "INLINE_CU_GRELL")  
                               {
                                  print "INLINE_CU_GRELL= "
	                       } 
	                       else if (substr($1,1,13) == "INLINE_CU_KUO")  
                               {
                                  print "INLINE_CU_KUO= "
	                       } 
	                       else if (substr($1,1,13) == "INLINE_CU_RAS")  
                               {
                                  print "INLINE_CU_RAS= "
	                       } 
	                       else if (substr($1,1,12) == "INLINE_SOUZA")  
                               {
                                  print "INLINE_SOUZA= "
	                       } 
	                       else if (substr($1,1,8) == "LOADFLAG")  
                               {
                                  print "LOADFLAG= "
	                       } 
                               else if (substr($1,1,6) == "VECTOR")  
                               {
                                  print "VECTOR= "
	                       } 
			       else 
			       { 
  			          print $0
			       } }' > source/Makefile

fi
if [ "$Machine" = "UNA" ]; then

if [ "$compiler" = "gnu" ]; then
cat source/Constants.f90.in | awk '{if(substr($4,1,3) == "r16")
                                    {print "  INTEGER, PARAMETER :: r16 = SELECTED_REAL_KIND(15)! Kind for 128-bits Real Numbers 15"
                                    }
                                    else
                                    {
                                     print $0
                                    }
                                    }' > source/Constants.f90
fi

cat source/Makefile.in | awk '{if(substr($1,1,5) == "PATH2")  
                               {
			         "echo $prefix" | getline prefix
			  	  print substr($1,1,5)"="prefix"/model/exec"
                               } 
	                       else if (substr($1,1,6) == "FTRACE")  
                               {
                                  print "FTRACE= "
	                       } 
	                       else if (substr($1,1,6) == "OPENMP")  
                               {
                                  print "OPENMP= "
	                       } 
	                       else if (substr($1,1,8) == "NOASSUME")  
                               {
                                  print "NOASSUME= "
	                       } 
	                       else if (substr($1,1,15) == "INLINE_CU_GRELL")  
                               {
                                  print "INLINE_CU_GRELL= "
	                       } 
	                       else if (substr($1,1,13) == "INLINE_CU_KUO")  
                               {
                                  print "INLINE_CU_KUO= "
	                       } 
	                       else if (substr($1,1,13) == "INLINE_CU_RAS")  
                               {
                                  print "INLINE_CU_RAS= "
	                       } 
	                       else if (substr($1,1,12) == "INLINE_SOUZA")  
                               {
                                  print "INLINE_SOUZA= "
	                       } 
	                       else if (substr($1,1,8) == "LOADFLAG")  
                               {
                                  print "LOADFLAG= "
	                       } 
                               else if (substr($1,1,6) == "VECTOR")  
                               {
                                  print "VECTOR= "
	                       } 
			       else 
			       { 
  			          print $0
			       } }' > source/Makefile

fi
if [ "$Machine" = "SX6" ]; then

cat source/Makefile.in | awk '{if(substr($1,1,5) == "PATH2")  
                               {
			         "echo $prefix" | getline prefix
			  	  print substr($1,1,5)"="prefix"/model/exec"
                               } 
	                       else if (substr($1,1,6) == "FTRACE")  
                               {
                                  print "FTRACE= "
	                       } 
	                       else if (substr($1,1,6) == "OPENMP")  
                               {
                                  print "OPENMP= "
	                       } 
	                       else if (substr($1,1,8) == "NOASSUME")  
                               {
                                  print $0
	                       } 
	                       else if (substr($1,1,15) == "INLINE_CU_GRELL")  
                               {
                                  print "INLINE_CU_GRELL=-pi exp=es5 "
	                       } 
	                       else if (substr($1,1,13) == "INLINE_CU_KUO")  
                               {
                                  print "INLINE_CU_KUO=-pi exp=es "
	                       } 
	                       else if (substr($1,1,13) == "INLINE_CU_RAS")  
                               {
                                  print "INLINE_CU_RAS=-pi exp=es3 "
	                       } 
	                       else if (substr($1,1,12) == "INLINE_SOUZA")  
                               {
                                  print "INLINE_SOUZA=-pi exp=es2 "
	                       } 
	                       else if (substr($1,1,8) == "LOADFLAG")  
                               {
				 "echo $aspa2" | getline aspa2
                                  print "LOADFLAG= -Wl"aspa2"-Z 4G"aspa2
	                       } 
			       else 
			       { 
  			          print $0
			       } }' > source/Makefile

fi

cd ../pos

##
##  Build Makefile Pos-Processing
##
cat source/Makefile.in | awk '{if(substr($1,1,5) == "PATH2")  {"echo $prefix" | getline prefix
				print substr($1,1,5)"="prefix"/pos/exec"
                               } else { 
  			        print $0} }' > source/Makefile



cd ../grh

##
##  Build Makefile GridHistory Pos-Processing
##
cat source/Makefile.in | awk '{if(substr($1,1,5) == "PATH2")  {"echo $prefix" | getline prefix
				print substr($1,1,5)"="prefix"/grh/exec"
                               } else { 
  			        print $0} }' > source/Makefile




##
##  Build NAMELIST RUNING
##

cd ../run
export aspa="'"
cat ../model/source/MODELIN | awk '{if(substr($1,1,7) == "path_in")  
                               {
			         "echo $prefix" | getline prefix
				 "echo $aspa" | getline aspa
			  	  print substr($1,1,7)"="aspa prefix"/model/datain" aspa
                               } 
	                       else if(substr($1,1,14) == "dirfNameOutput")  
                               {
			         "echo $prefix" | getline prefix 
				 "echo $DirTrunc" | getline DirTrunc
 				 "echo $aspa" | getline aspa
			  	  print substr($1,1,14)"="aspa prefix"/model/dataout/"DirTrunc aspa
	                       } 
	                       else if (substr($1,1,5) == "trunc")  
                               {
                                  "echo $TrucSim" | getline TrucSim       
                                  print " trunc    ="TrucSim",	           !TRC   : three-digit triangular truncation"
	                       } 
	                       else if (substr($1,1,4) == "vert")  
                               {
                                 "echo $VertSim" | getline VertSim       
                                  print " vert     ="VertSim",	           !LV    : two-digit number of vertical sigma-layers"
	                       } 
	                       else if (substr($1,1,2) == "dt")  
                               {
                                 "echo $timestep" | getline timestep       
                                  print " dt       ="timestep",         !      : delta t"
	                       } 
	                       else if (substr($1,1,6) == "IDATEI")  
                               {
                                 "echo $DATA" | getline data       
                                  print " IDATEI   = "substr(data,9,2)","substr(data,7,2)","substr(data,5,2)","substr(data,1,4)",!LABELI: initial forecasting label"
	                       } 
	                       else if (substr($1,1,6) == "IDATEW")  
                               {
                                 "echo $DATAF" | getline data       
                                  print " IDATEW   = "substr(data,9,2)","substr(data,7,2)","substr(data,5,2)","substr(data,1,4)",!LABELC: final forecasting label for cold"
	                       } 
	                       else if (substr($1,1,6) == "IDATEF")  
                               {
                                 "echo $DATAF" | getline data       
                                  print " IDATEF   = "substr(data,9,2)","substr(data,7,2)","substr(data,5,2)","substr(data,1,4)",!LABELF: final forecasting label for warm"
	                       } 
	                       else if (substr($1,1,5) == "NMSST")  
                               {
      				 "echo $aspa" | getline aspa
                                  print " NMSST	  =" aspa"sstaoi"aspa ",       !NMSST : sst file name"
	                       } 
	                       else if (substr($1,1,9) == "eigeninit")  
                               {
                                  print " eigeninit     =.TRUE.,  ! eigenInit  --> .FALSE."
	                       } 
	                       else if (substr($1,1,6) == "mgiven")  
                               {
                                  print " mgiven        =.FALSE.,   ! mgiven       --> .FALSE."
	                       } 
	                       else if (substr($1,1,10) == "gaussgiven")  
                               {
                                  print " gaussgiven    =.FALSE.,   ! gaussgiven       --> .FALSE."
	                       } 

			       else 
			       { 
  			          print $0
			       } }' > MODELIN

cat ../pos/source/POSTIN-GRIB | awk '{if(substr($1,1,6) == "datain")  
                               {
			         "echo $DirTrunc" | getline DirTrunc 
				 "echo $prefix" | getline prefix
				 "echo $aspa" | getline aspa
			  	  print "  "substr($1,1,6)"="aspa prefix"/model/dataout/"DirTrunc aspa ",! main dataout directory"
                               } 
	                       else if(substr($1,1,7) == "datalib")  
                               {
			         "echo $prefix" | getline prefix
 				 "echo $aspa" | getline aspa
			  	  print "  "substr($1,1,7)"="aspa prefix"/pos/datain" aspa ",! main dataout directory"
	                       } 
                               else if(substr($1,1,7) == "dataout")  
                               {
			         "echo $DirTrunc" | getline DirTrunc 
			         "echo $prefix" | getline prefix
 				 "echo $aspa" | getline aspa
			  	  print "  "substr($1,1,7)"="aspa prefix"/pos/dataout/"DirTrunc aspa ",! main dataout directory"
	                       } 

	                       else if (substr($1,1,5) == "trunc")  
                               {
                		  "echo $aspa" | getline aspa
				  "echo $TRUNC" | getline TRUNC 
                                  print "  trunc    ="aspa TRUNC aspa",  !TRC   : three-digit triangular truncation"
	                       } 
	                       else if (substr($1,1,3) == "lev")  
                               {
                		  "echo $aspa" | getline aspa
				  "echo $prefixVert" | getline prefixVert 
				  print "  lev     ="aspa"L"prefixVert aspa",       ! vertical layers = LXXX"
	                       } 
	                       else if (substr($1,1,6) == "labeli")  
                               {
                		  "echo $aspa" | getline aspa
				  "echo $DATA" | getline DATA 
                                  print "  labeli=" aspa DATA aspa " , ! initial forecasting label (yyyymmddhh)"
	                       } 
	                       else if (substr($1,1,6) == "labelf")  
                               {
                  		  "echo $aspa" | getline aspa 
				  "echo $DATAF" | getline DATA 
                                  print "  labelf=" aspa DATA aspa ", ! final forecasting label (yyyymmddhh)"
	                       } 
	  		       else 
			       { 
  			          print $0
			       } }' > POSTIN-GRIB


cat ../grh/scripts/PostGridHistory.nml | awk '{if(substr($1,1,8) == "DirInPut")  
                               {
			         "echo $DirTrunc" | getline DirTrunc 
				 "echo $prefix" | getline prefix
				 "echo $aspa" | getline aspa
			  	  print "  "substr($1,1,8)"="aspa prefix"/model/dataout/"DirTrunc aspa ",! main dataout directory"
                               } 
	                       else if(substr($1,1,9) == "DirOutPut")  
                               {
			         "echo $DirTrunc" | getline DirTrunc 
			         "echo $prefix" | getline prefix
 				 "echo $aspa" | getline aspa
			  	  print "  "substr($1,1,9)"="aspa prefix"/grh/dataout/"DirTrunc aspa ",! main dataout directory"
	                       } 
                               else if(substr($1,1,7) == "DirMain")  
                               {
			         "echo $DirTrunc" | getline DirTrunc 
			         "echo $prefix" | getline prefix
 				 "echo $aspa" | getline aspa
			  	  print "  "substr($1,1,7)"="aspa prefix aspa ",! main dataout directory"
	                       } 

	                       else if (substr($1,1,4) == "Mend")  
                               {
                		  "echo $aspa" | getline aspa
				  "echo $TRUNC" | getline TRUNC 
                                  print "  Mend    ="aspa TRUNC aspa",  !TRC   : three-digit triangular truncation"
	                       } 
	                       else if (substr($1,1,4) == "Kmax")  
                               {
                		  "echo $aspa" | getline aspa
				  "echo $prefixVert" | getline prefixVert 
				  print "  Kmax     ="aspa"L"prefixVert aspa",       ! vertical layers = LXXX"
	                       } 
	                       else if (substr($1,1,6) == "LabelI")  
                               {
                		  "echo $aspa" | getline aspa
				  "echo $DATA" | getline DATA 
                                  print "  LabelI=" aspa DATA aspa " , ! initial forecasting label (yyyymmddhh)"
	                       } 
	                       else if (substr($1,1,6) == "LabelF")  
                               {
                  		  "echo $aspa" | getline aspa 
				  "echo $DATAF" | getline DATA 
                                  print "  LabelF=" aspa DATA aspa ", ! final forecasting label (yyyymmddhh)"
	                       } 
	  		       else 
			       { 
  			          print $0
			       } }' > PostGridHistory.nml

##
##  Build Scripts Runing
##
function gerascripts4 {
echo "building"  $1
cat $1 | awk '{print $0}' > $2
}
function gerascripts5 {
echo "building"  $1
cat $1 | awk '{print $0}' > $2
}


if [ "$Machine" = "Linux" ]; then

cat ../model/source/run_multi_UNA | awk '{if(substr($2,1,4) == "FEXE")  
                                           {
			                  "echo $prefix" | getline prefix
			  	           print "export  "substr($2,1,4)"="prefix"/model/exec"
                                           }
			                   else if(substr($1,1,3) == "num") 
                                             {
	                                     print "#"$0
                                             } 
	                                   else if (substr($1,1,3) == "fra")  
	                                     {
	                                     print "#"$0
	                                     } 
	                                   else if (substr($1,1,7) == "cpu_tot")  
	                                     {
	                                     print "#"$0
	                                     } 
	                                   else if (substr($1,1,5) == "chmod" && substr($3,1,7) == "qsub.sh" )  
	                                     {
	                                     print "chmod +x ${FEXE}/qsub.sh"
	                                     } 
	                                   else if (substr($1,1,5) == "chmod" && substr($3,1,11) == "mpisep.bash" )  
	                                     {
	                                     print "chmod +x ${FEXE}/mpisep.bash"
	                                     } 
	                                   else if (substr($1,1,6) == "mpirun")  
	                                     {
	                                     print "mpirun -np ${cpu_mpi}  ${FEXE}/mpisep.bash"
	                                     } 

	                                   else if (substr($1,1,4) == "qsub")  
	                                     {
	                                     print "${FEXE}/"$3
	                                     } 

	                                   else if (substr($2,1,4) == "fila")  
	                                     {
					     "echo $prefix" | getline prefix
	                                     print "cp -f MODELIN "prefix"/model/exec"
	                                     } 

	                                   else 
	                                     {
  	                                       print $0
	                                     } }' > runModel
chmod 777 runModel
cat ../pos/source/runpostgrib.una1 | awk '{if(substr($1,1,4) == "FEXE")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "FSCR")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
					   else if (substr($1,1,5) == "chmod" && substr($3,1,14) == "setrunpost.tx7" )  
	                                     {
	                                     print "chmod +x ${FSCR}/"substr($3,1,14)
	                                     } 
                                           else if(substr($1,1,3) == "num") 
                                             {
	                                     print "#"$0
                                             } 
	                                   else if (substr($1,1,3) == "fra")  
	                                     {
	                                     print "#"$0
	                                     } 
	                                   else if (substr($1,1,7) == "cpu_tot")  
	                                     {
	                                     print "#"$0
	                                     } 
	                                   else if (substr($1,1,4) == "qsub")  
	                                     {
	                                     print $3
	                                     } 
	                                   else if (substr($1,1,4) == "time")  
	                                     {
	                                     print "time ./PostGrib < ${FSCR}/POSTIN-GRIB"
	                                     } 

	                                   else if (substr($1,1,6) == "mpirun")  
	                                     {
	                                     print $4
	                                     } 
	                                   else 
	                                     {
  	                                       print $0
	                                     } }' > runPos
chmod 777 runPos
fi

if [ "$Machine" = "UNA" ]; then
   gerascripts4 "../model/source/runModel "       "./runModel"
chmod 777 runModel
   gerascripts4 "../pos/source/runPos "       "./runPos"
chmod 777 runPos
   gerascripts4 "../grh/scripts/runGrh "       "./runGrh"
chmod 777 runGrh
fi

if [ "$Machine" = "SX6" ]; then
cat ../model/source/run_multi_SX6 | awk '{if(substr($2,1,4) == "FEXE")  
                                           {
			                  "echo $prefix" | getline prefix
			  	           print "export  "substr($2,1,4)"="prefix"/model/exec"
                                           }
			                   else if(substr($1,1,3) == "num") 
                                             {
	                                     print "#"$0
                                             } 
	                                   else if (substr($1,1,3) == "fra")  
	                                     {
	                                     print "#"$0
	                                     } 
	                                   else if (substr($1,1,7) == "cpu_tot")  
	                                     {
	                                     print "#"$0
	                                     } 
	                                   else if (substr($1,1,5) == "chmod" && substr($3,1,7) == "qsub.sh" )  
	                                     {
	                                     print "chmod +x ${FEXE}/qsub.sh"
	                                     } 
	                                   else if (substr($1,1,5) == "chmod" && substr($3,1,11) == "mpisep.bash" )  
	                                     {
	                                     print "chmod +x ${FEXE}/mpisep.bash"
	                                     } 
	                                   else if (substr($2,1,4) == "fila")  
	                                     {
					     "echo $prefix" | getline prefix
	                                     print "cp -f MODELIN "prefix"/model/exec"
	                                     } 
	                                   else if (substr($1,1,4) == "data" )  
	                                     {
	                                     print $0
					     print "cp MODELIN ${FEXE}/"
	                                     } 
	                                   else 
	                                     {
  	                                       print $0
	                                     } }' > run_multi_SX6
chmod 777 run_multi_SX6
cat ../pos/source/runpostgrib.sx6 | awk '{if(substr($1,1,4) == "FEXE")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "FSCR")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
					   else if (substr($1,1,5) == "chmod" && substr($3,1,14) == "setrunpost.tx7" )  
	                                     {
	                                     print "chmod +x ${FSCR}/"substr($3,1,14)
	                                     } 
                                           else if(substr($1,1,3) == "num") 
                                             {
	                                     print "#"$0
                                             } 
	                                   else if (substr($1,1,3) == "fra")  
	                                     {
	                                     print "#"$0
	                                     } 
	                                   else if (substr($1,1,7) == "cpu_tot")  
	                                     {
	                                     print "#"$0
	                                     } 
	                                   else if (substr($1,1,4) == "time")  
	                                     {
	                                     print "time ./PostGrib < ${FSCR}/POSTIN-GRIB"
	                                     } 
	                                   else if (substr($1,1,6) == "mpirun")  
	                                     {
	                                     print $4
	                                     } 
	                                   else 
	                                     {
  	                                       print $0
	                                     } }' > runpostgrib.SX6
chmod 777 runpostgrib.SX6
fi

if [ "$Machine" = "UNA" ]; then
cat ../ensmed/scripts/runensmed.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runensmed.una
fi
if [ "$Machine" = "UNA" ]; then
cat ../plumes/scripts/runplumes.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runplumes.una
fi
if [ "$Machine" = "UNA" ]; then
cat ../prcmed/scripts/runprcmed.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runprcmed.una
fi
if [ "$Machine" = "UNA" ]; then
cat ../wgne/scripts/runaccumulated.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runprcmed.una
fi
if [ "$Machine" = "UNA" ]; then
cat ../probability/scripts/runprobability.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runprobability.una
fi
if [ "$Machine" = "UNA" ]; then
cat ../probagr/scripts/runprobagr.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runprobagr.una
fi
if [ "$Machine" = "UNA" ]; then
cat ../spread/scripts/runspread.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runspread.una
fi
if [ "$Machine" = "UNA" ]; then
cat ../cluster/scripts/runcluster.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runcluster.una
fi
if [ "$Machine" = "UNA" ]; then
cat ../spaguetti/scripts/runspaguetti.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runspaguetti.una
fi
if [ "$Machine" = "UNA" ]; then
cat ../chievol/scripts/runchievol.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runchievol.una
fi
if [ "$Machine" = "UNA" ]; then
cat ../skill/scripts/runskill.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runskill.una
fi
if [ "$Machine" = "UNA" ]; then
cat ../tigge/scripts/runrectigger.1.4.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runrectigger.1.4.una
fi
if [ "$Machine" = "UNA" ]; then
cat ../decanl/scripts/rundeco1.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > rundeco1.una

cat ../decanl/scripts/rundrpt1.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > rundrpt1.una


fi
if [ "$Machine" = "UNA" ]; then
cat ../eof/scripts/runeofs1.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runeofs1.una
fi
if [ "$Machine" = "UNA" ]; then
cat ../fftpln/scripts/runfftp.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runfftp.una
fi
if [ "$Machine" = "UNA" ]; then
cat ../recanl/scripts/runrecanl1.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runrecanl1.una
fi
if [ "$Machine" = "UNA" ]; then
cat ../rdpert/scripts/runrdpt1.una| awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runrdpt1.una
fi
if [ "$Machine" = "UNA" ]; then
cat ../recfct/scripts/runrecfct1.una| awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runrecfct1.una
fi

if [ "$Machine" = "UNA" ]; then
cat ../utils/makedir1.scr | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > makedir1.scr

cat ../utils/runctrmodgpro.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runctrmodgpro.una

cat ../utils/runense1.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runense1.una
					   
cat ../utils/runEnse.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runEnse.una
cat ../utils/runperpntg1.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runperpntg1.una
cat ../utils/runperreco1.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runperreco1.una

cat ../utils/runpntg1.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runpntg1.una

cat ../utils/verifica.ksh | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > verifica.ksh
cat ../utils/vescptigge.ksh | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > vescptigge.ksh
					   
cat ../utils/runctrreco1.una | awk '{if(substr($1,1,4) == "KKKKKKKKKKKKKKK")  
                                           {
			                     "echo $prefix" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix"/pos/exec"  
                                           }
					   else if(substr($1,1,4) == "PPPPPPPPPPPPPPPPP")  
                                           {
			                     "pwd" | getline prefix
			  	              print "export  "substr($1,1,4)"="prefix  
                                           }
	                                   else 
	                                   {
  	                                       print $0
	                                   } }' > runctrreco1.una
					   
					   
fi
cd ..
rm -f pre*.gz model*.gz pos*.gz grh*.gz utils*.gz *.tar.gz

echo " END CONFIGURATION"

