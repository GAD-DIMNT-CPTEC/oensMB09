       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  getgbep.f
       !        File                  :  getgbep.opt
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
    2.       
    2.       subroutine getgbep( lugb, lugi, jg, j, jpds, jgds, jens, kg, k, kpds, kgds, kens, g, iret )
    2.       t$1 = jg
  195.       t$3 = _zla( 0, jg )
  202.       if ( lugi <= 0 ) then
    2.          goto 10
  202.       else if ( j < 0 ) then
  202.          goto 40
  202.       else if ( lux + -lugi /= 0 ) then
  202.    40    continue
  203.          lux = lugi
  204.          jj = min( j, -1 + -j )
  204.       else
  204.    10    continue
  205.          if ( lugi > 0 ) then
  205.             goto 20
  205.          else if ( j < 0 ) then
  205.             goto 30
  205.          else if ( lugb + -lux /= 0 ) then
  205.    30       continue
  206.             lux = lugb
  207.             jj = min( j, -1 + -j )
  207.          else
  207.    20       continue
  209.             jj = j
  209.          endif
  209.       endif
  213.       call getgbemp( lugb, lugi, jg, jj, jpds(1), jgds(1), jens(1), 262144,  _substr(cbuf(1),1,1), nlen, nnum, mnum, kg, k, kpds(1), kgds(1), kens(1),  _substr(g(1),1,1), iret )
  216.       if ( iret == 96 ) then
  216.          lux = 0
  216.       endif
  219.       return
  219.       end
  219.       
