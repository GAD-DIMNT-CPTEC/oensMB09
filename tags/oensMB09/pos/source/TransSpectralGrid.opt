       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  TransSpectralGrid.f90
       !        File                  :  TransSpectralGrid.opt
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
   37.       
   37.       subroutine dectrg( ldim, f, qf )
   23.       t$1 = imax
   23.       t$2 = jmax
   23.       t$3 = ldim
   29.       t$16 = _zla( 0, imax )
   23.       t$17 = _zla( 0, imax )
   29.       t$18 = _zla( 0, jmax )
   23.       t$19 = _zla( 0, imax ) * _zla( 0, jmax )
   29.       t$20 = _zla( 0, ldim )
   23.       t$21 = _zla( 0, ldim ) * _zla( 0, imax ) * _zla( 0, jmax )
   23.       t$4 = mnwv2
   30.       t$22 = _zla( 0, mnwv2 )
   23.       t$23 = _zla( 0, mnwv2 )
   23.       t$24 = _zla( 0, ldim ) * _zla( 0, mnwv2 )
   23.       t$5 = imx
   32.       t$25 = _zla( 0, imx )
   23.       t$26 = _zla( 0, imx )
   23.       t$27 = _zla( 0, jmax ) * _zla( 0, imx )
   23.       t$28 = _zla( 0, ldim ) * _zla( 0, jmax ) * _zla( 0, imx )
   32.       t$31 = 8 * _zla( 0, ldim ) * _zla( 0, jmax ) * _zla( 0, imx )
   23.       t$29 = int( _alloc( 8 * _zla( 0, ldim ) * _zla( 0, jmax ) * _zla( 0, imx ) ), 8 )
   32.       t$30 = t$29
   34. !dir$ suppress f(1, 1, 1)
   34.       t$64 = $_StaticDV_P0
   34.       t$64%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( f(1, 1, 1) ) )
   34.       t$64%header%el_len = 64
   34.       t$64%header%assoc = 1
   34.       t$64%header%ptr_alloc = 0
   34.       t$64%header%p_or_a = 0
   34.       t$64%header%a_contig = 1
   34.       t$64%header%n_dim = 3
   34.       t$64%header%orig_base = 0
   34.       t$64%header%orig_size = 0
   34.       t$64%header%n_codim = 0
   34.       t$64%header%dv_versn = 2
   34.       t$64%header%dv_smunit = 64
   34.       t$64%header%d_type = 0
   34.       t$64%header%n_params = 0
   34.       t$64%header%d_type_idx = 13
   34.       t$64%dim_1%LB = 1
   34.       t$64%dim_1%EX = _zla( 0, imax )
   34.       t$64%dim_1%SM = 1
   34.       t$64%dim_2%LB = 1
   34.       t$64%dim_2%EX = _zla( 0, jmax )
   34.       t$64%dim_2%SM = _zla( 0, imax )
   34.       t$64%dim_3%LB = 1
   34.       t$64%dim_3%EX = _zla( 0, ldim )
   34.       t$64%dim_3%SM = _zla( 0, imax ) * _zla( 0, jmax )
   34. !dir$ suppress four(1, 1, 1)
   34.       t$65 = $_StaticDV_P1
   34.       t$65%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( four(1, 1, 1) ) )
   34.       t$65%header%el_len = 64
   34.       t$65%header%assoc = 1
   34.       t$65%header%ptr_alloc = 0
   34.       t$65%header%p_or_a = 0
   34.       t$65%header%a_contig = 1
   34.       t$65%header%n_dim = 3
   34.       t$65%header%orig_base = 0
   34.       t$65%header%orig_size = 0
   34.       t$65%header%n_codim = 0
   34.       t$65%header%dv_versn = 2
   34.       t$65%header%dv_smunit = 64
   34.       t$65%header%d_type = 0
   34.       t$65%header%n_params = 0
   34.       t$65%header%d_type_idx = 13
   34.       t$65%dim_1%LB = 1
   34.       t$65%dim_1%EX = _zla( 0, imx )
   34.       t$65%dim_1%SM = 1
   34.       t$65%dim_2%LB = 1
   34.       t$65%dim_2%EX = _zla( 0, jmax )
   34.       t$65%dim_2%SM = _zla( 0, imx )
   34.       t$65%dim_3%LB = 1
   34.       t$65%dim_3%EX = _zla( 0, ldim )
   34.       t$65%dim_3%SM = _zla( 0, jmax ) * _zla( 0, imx )
   34.       call dird3( t$64, t$65 )
   35. !dir$ suppress four(1, 1, 1)
   35.       t$66 = $_StaticDV_P2
   35.       t$66%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( four(1, 1, 1) ) )
   35.       t$66%header%el_len = 64
   35.       t$66%header%assoc = 1
   35.       t$66%header%ptr_alloc = 0
   35.       t$66%header%p_or_a = 0
   35.       t$66%header%a_contig = 1
   35.       t$66%header%n_dim = 3
   35.       t$66%header%orig_base = 0
   35.       t$66%header%orig_size = 0
   35.       t$66%header%n_codim = 0
   35.       t$66%header%dv_versn = 2
   35.       t$66%header%dv_smunit = 64
   35.       t$66%header%d_type = 0
   35.       t$66%header%n_params = 0
   35.       t$66%header%d_type_idx = 13
   35.       t$66%dim_1%LB = 1
   35.       t$66%dim_1%EX = _zla( 0, t$5 )
   35.       t$66%dim_1%SM = 1
   35.       t$66%dim_2%LB = 1
   35.       t$66%dim_2%EX = _zla( 0, t$2 )
   35.       t$66%dim_2%SM = _zla( 0, t$5 )
   35.       t$66%dim_3%LB = 1
   35.       t$66%dim_3%EX = _zla( 0, ldim )
   35.       t$66%dim_3%SM = _zla( 0, t$2 ) * _zla( 0, t$5 )
   35. !dir$ suppress qf(1, 1)
   35.       t$67 = $_StaticDV_P3
   35.       t$67%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( qf(1, 1) ) )
   35.       t$67%header%el_len = 64
   35.       t$67%header%assoc = 1
   35.       t$67%header%ptr_alloc = 0
   35.       t$67%header%p_or_a = 0
   35.       t$67%header%a_contig = 1
   35.       t$67%header%n_dim = 2
   35.       t$67%header%orig_base = 0
   35.       t$67%header%orig_size = 0
   35.       t$67%header%n_codim = 0
   35.       t$67%header%dv_versn = 2
   35.       t$67%header%dv_smunit = 64
   35.       t$67%header%d_type = 0
   35.       t$67%header%n_params = 0
   35.       t$67%header%d_type_idx = 13
   35.       t$67%dim_1%LB = 1
   35.       t$67%dim_1%EX = _zla( 0, t$4 )
   35.       t$67%dim_1%SM = 1
   35.       t$67%dim_2%LB = 1
   35.       t$67%dim_2%EX = _zla( 0, ldim )
   35.       t$67%dim_2%SM = _zla( 0, t$4 )
   35.       call four2spec2d( t$66, t$67 )
   23.       _free( t$29 )
   37.       return
   37.       end
   37.       
   55.       
   55.       subroutine rectrg( mnwvd, ldim, qf, f )
   40.       t$6 = mnwvd
   40.       t$7 = ldim
   47.       t$32 = _zla( 0, mnwvd )
   40.       t$33 = _zla( 0, mnwvd )
   47.       t$34 = _zla( 0, ldim )
   40.       t$35 = _zla( 0, mnwvd ) * _zla( 0, ldim )
   40.       t$8 = imax
   40.       t$9 = jmax
   48.       t$36 = _zla( 0, imax )
   40.       t$37 = _zla( 0, imax )
   48.       t$38 = _zla( 0, jmax )
   40.       t$39 = _zla( 0, imax ) * _zla( 0, jmax )
   40.       t$40 = _zla( 0, ldim ) * _zla( 0, imax ) * _zla( 0, jmax )
   40.       t$10 = imx
   50.       t$41 = _zla( 0, imx )
   40.       t$42 = _zla( 0, imx )
   40.       t$43 = _zla( 0, jmax ) * _zla( 0, imx )
   40.       t$44 = _zla( 0, ldim ) * _zla( 0, jmax ) * _zla( 0, imx )
   50.       t$47 = 8 * _zla( 0, ldim ) * _zla( 0, jmax ) * _zla( 0, imx )
   40.       t$45 = int( _alloc( 8 * _zla( 0, ldim ) * _zla( 0, jmax ) * _zla( 0, imx ) ), 8 )
   50.       t$46 = t$45
   52. !dir$ suppress qf(1, 1)
   52.       t$68 = $_StaticDV_P0
   52.       t$68%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( qf(1, 1) ) )
   52.       t$68%header%el_len = 64
   52.       t$68%header%assoc = 1
   52.       t$68%header%ptr_alloc = 0
   52.       t$68%header%p_or_a = 0
   52.       t$68%header%a_contig = 1
   52.       t$68%header%n_dim = 2
   52.       t$68%header%orig_base = 0
   52.       t$68%header%orig_size = 0
   52.       t$68%header%n_codim = 0
   52.       t$68%header%dv_versn = 2
   52.       t$68%header%dv_smunit = 64
   52.       t$68%header%d_type = 0
   52.       t$68%header%n_params = 0
   52.       t$68%header%d_type_idx = 13
   52.       t$68%dim_1%LB = 1
   52.       t$68%dim_1%EX = _zla( 0, mnwvd )
   52.       t$68%dim_1%SM = 1
   52.       t$68%dim_2%LB = 1
   52.       t$68%dim_2%EX = _zla( 0, ldim )
   52.       t$68%dim_2%SM = _zla( 0, mnwvd )
   52. !dir$ suppress workf(1, 1, 1)
   52.       t$69 = $_StaticDV_P1
   52.       t$69%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( workf(1, 1, 1) ) )
   52.       t$69%header%el_len = 64
   52.       t$69%header%assoc = 1
   52.       t$69%header%ptr_alloc = 0
   52.       t$69%header%p_or_a = 0
   52.       t$69%header%a_contig = 1
   52.       t$69%header%n_dim = 3
   52.       t$69%header%orig_base = 0
   52.       t$69%header%orig_size = 0
   52.       t$69%header%n_codim = 0
   52.       t$69%header%dv_versn = 2
   52.       t$69%header%dv_smunit = 64
   52.       t$69%header%d_type = 0
   52.       t$69%header%n_params = 0
   52.       t$69%header%d_type_idx = 13
   52.       t$69%dim_1%LB = 1
   52.       t$69%dim_1%EX = _zla( 0, imx )
   52.       t$69%dim_1%SM = 1
   52.       t$69%dim_2%LB = 1
   52.       t$69%dim_2%EX = _zla( 0, jmax )
   52.       t$69%dim_2%SM = _zla( 0, imx )
   52.       t$69%dim_3%LB = 1
   52.       t$69%dim_3%EX = _zla( 0, ldim )
   52.       t$69%dim_3%SM = _zla( 0, jmax ) * _zla( 0, imx )
   52.       call spec2four2d( t$68, t$69, 0 )
   53. !dir$ suppress workf(1, 1, 1)
   53.       t$70 = $_StaticDV_P2
   53.       t$70%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( workf(1, 1, 1) ) )
   53.       t$70%header%el_len = 64
   53.       t$70%header%assoc = 1
   53.       t$70%header%ptr_alloc = 0
   53.       t$70%header%p_or_a = 0
   53.       t$70%header%a_contig = 1
   53.       t$70%header%n_dim = 3
   53.       t$70%header%orig_base = 0
   53.       t$70%header%orig_size = 0
   53.       t$70%header%n_codim = 0
   53.       t$70%header%dv_versn = 2
   53.       t$70%header%dv_smunit = 64
   53.       t$70%header%d_type = 0
   53.       t$70%header%n_params = 0
   53.       t$70%header%d_type_idx = 13
   53.       t$70%dim_1%LB = 1
   53.       t$70%dim_1%EX = _zla( 0, t$10 )
   53.       t$70%dim_1%SM = 1
   53.       t$70%dim_2%LB = 1
   53.       t$70%dim_2%EX = _zla( 0, t$9 )
   53.       t$70%dim_2%SM = _zla( 0, t$10 )
   53.       t$70%dim_3%LB = 1
   53.       t$70%dim_3%EX = _zla( 0, ldim )
   53.       t$70%dim_3%SM = _zla( 0, t$9 ) * _zla( 0, t$10 )
   53. !dir$ suppress f(1, 1, 1)
   53.       t$71 = $_StaticDV_P3
   53.       t$71%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( f(1, 1, 1) ) )
   53.       t$71%header%el_len = 64
   53.       t$71%header%assoc = 1
   53.       t$71%header%ptr_alloc = 0
   53.       t$71%header%p_or_a = 0
   53.       t$71%header%a_contig = 1
   53.       t$71%header%n_dim = 3
   53.       t$71%header%orig_base = 0
   53.       t$71%header%orig_size = 0
   53.       t$71%header%n_codim = 0
   53.       t$71%header%dv_versn = 2
   53.       t$71%header%dv_smunit = 64
   53.       t$71%header%d_type = 0
   53.       t$71%header%n_params = 0
   53.       t$71%header%d_type_idx = 13
   53.       t$71%dim_1%LB = 1
   53.       t$71%dim_1%EX = _zla( 0, t$8 )
   53.       t$71%dim_1%SM = 1
   53.       t$71%dim_2%LB = 1
   53.       t$71%dim_2%EX = _zla( 0, t$9 )
   53.       t$71%dim_2%SM = _zla( 0, t$8 )
   53.       t$71%dim_3%LB = 1
   53.       t$71%dim_3%EX = _zla( 0, ldim )
   53.       t$71%dim_3%SM = _zla( 0, t$8 ) * _zla( 0, t$9 )
   53.       call invd3( t$70, t$71 )
   40.       _free( t$45 )
   55.       return
   55.       end
   55.       
   82.       
   82.       subroutine rectrd( ldim, qf, f )
   58.       t$11 = mnwv2
   58.       t$12 = ldim
   64.       t$48 = _zla( 0, mnwv2 )
   58.       t$49 = _zla( 0, mnwv2 )
   64.       t$50 = _zla( 0, ldim )
   58.       t$51 = _zla( 0, ldim ) * _zla( 0, mnwv2 )
   58.       t$13 = imax
   58.       t$14 = jmax
   65.       t$52 = _zla( 0, imax )
   58.       t$53 = _zla( 0, imax )
   65.       t$54 = _zla( 0, jmax )
   58.       t$55 = _zla( 0, imax ) * _zla( 0, jmax )
   58.       t$56 = _zla( 0, ldim ) * _zla( 0, imax ) * _zla( 0, jmax )
   58.       t$15 = imx
   69.       t$57 = _zla( 0, imx )
   58.       t$58 = _zla( 0, imx )
   58.       t$59 = _zla( 0, jmax ) * _zla( 0, imx )
   58.       t$60 = _zla( 0, ldim ) * _zla( 0, jmax ) * _zla( 0, imx )
   69.       t$63 = 8 * _zla( 0, ldim ) * _zla( 0, jmax ) * _zla( 0, imx )
   58.       t$61 = int( _alloc( 8 * _zla( 0, ldim ) * _zla( 0, jmax ) * _zla( 0, imx ) ), 8 )
   69.       t$62 = t$61
   71.       der = .true.
   72. !dir$ suppress qf(1, 1)
   72.       t$72 = $_StaticDV_P0
   72.       t$72%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( qf(1, 1) ) )
   72.       t$72%header%el_len = 64
   72.       t$72%header%assoc = 1
   72.       t$72%header%ptr_alloc = 0
   72.       t$72%header%p_or_a = 0
   72.       t$72%header%a_contig = 1
   72.       t$72%header%n_dim = 2
   72.       t$72%header%orig_base = 0
   72.       t$72%header%orig_size = 0
   72.       t$72%header%n_codim = 0
   72.       t$72%header%dv_versn = 2
   72.       t$72%header%dv_smunit = 64
   72.       t$72%header%d_type = 0
   72.       t$72%header%n_params = 0
   72.       t$72%header%d_type_idx = 13
   72.       t$72%dim_1%LB = 1
   72.       t$72%dim_1%EX = _zla( 0, mnwv2 )
   72.       t$72%dim_1%SM = 1
   72.       t$72%dim_2%LB = 1
   72.       t$72%dim_2%EX = _zla( 0, ldim )
   72.       t$72%dim_2%SM = _zla( 0, mnwv2 )
   72. !dir$ suppress four(1, 1, 1)
   72.       t$73 = $_StaticDV_P1
   72.       t$73%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( four(1, 1, 1) ) )
   72.       t$73%header%el_len = 64
   72.       t$73%header%assoc = 1
   72.       t$73%header%ptr_alloc = 0
   72.       t$73%header%p_or_a = 0
   72.       t$73%header%a_contig = 1
   72.       t$73%header%n_dim = 3
   72.       t$73%header%orig_base = 0
   72.       t$73%header%orig_size = 0
   72.       t$73%header%n_codim = 0
   72.       t$73%header%dv_versn = 2
   72.       t$73%header%dv_smunit = 64
   72.       t$73%header%d_type = 0
   72.       t$73%header%n_params = 0
   72.       t$73%header%d_type_idx = 13
   72.       t$73%dim_1%LB = 1
   72.       t$73%dim_1%EX = _zla( 0, imx )
   72.       t$73%dim_1%SM = 1
   72.       t$73%dim_2%LB = 1
   72.       t$73%dim_2%EX = _zla( 0, jmax )
   72.       t$73%dim_2%SM = _zla( 0, imx )
   72.       t$73%dim_3%LB = 1
   72.       t$73%dim_3%EX = _zla( 0, ldim )
   72.       t$73%dim_3%SM = _zla( 0, jmax ) * _zla( 0, imx )
   72.       call spec2four2d( t$72, t$73, der )
   73. !dir$ suppress four(1, 1, 1)
   73.       t$74 = $_StaticDV_P2
   73.       t$74%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( four(1, 1, 1) ) )
   73.       t$74%header%el_len = 64
   73.       t$74%header%assoc = 1
   73.       t$74%header%ptr_alloc = 0
   73.       t$74%header%p_or_a = 0
   73.       t$74%header%a_contig = 1
   73.       t$74%header%n_dim = 3
   73.       t$74%header%orig_base = 0
   73.       t$74%header%orig_size = 0
   73.       t$74%header%n_codim = 0
   73.       t$74%header%dv_versn = 2
   73.       t$74%header%dv_smunit = 64
   73.       t$74%header%d_type = 0
   73.       t$74%header%n_params = 0
   73.       t$74%header%d_type_idx = 13
   73.       t$74%dim_1%LB = 1
   73.       t$74%dim_1%EX = _zla( 0, t$15 )
   73.       t$74%dim_1%SM = 1
   73.       t$74%dim_2%LB = 1
   73.       t$74%dim_2%EX = _zla( 0, t$14 )
   73.       t$74%dim_2%SM = _zla( 0, t$15 )
   73.       t$74%dim_3%LB = 1
   73.       t$74%dim_3%EX = _zla( 0, ldim )
   73.       t$74%dim_3%SM = _zla( 0, t$14 ) * _zla( 0, t$15 )
   73. !dir$ suppress f(1, 1, 1)
   73.       t$75 = $_StaticDV_P3
   73.       t$75%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( loc( f(1, 1, 1) ) )
   73.       t$75%header%el_len = 64
   73.       t$75%header%assoc = 1
   73.       t$75%header%ptr_alloc = 0
   73.       t$75%header%p_or_a = 0
   73.       t$75%header%a_contig = 1
   73.       t$75%header%n_dim = 3
   73.       t$75%header%orig_base = 0
   73.       t$75%header%orig_size = 0
   73.       t$75%header%n_codim = 0
   73.       t$75%header%dv_versn = 2
   73.       t$75%header%dv_smunit = 64
   73.       t$75%header%d_type = 0
   73.       t$75%header%n_params = 0
   73.       t$75%header%d_type_idx = 13
   73.       t$75%dim_1%LB = 1
   73.       t$75%dim_1%EX = _zla( 0, t$13 )
   73.       t$75%dim_1%SM = 1
   73.       t$75%dim_2%LB = 1
   73.       t$75%dim_2%EX = _zla( 0, t$14 )
   73.       t$75%dim_2%SM = _zla( 0, t$13 )
   73.       t$75%dim_3%LB = 1
   73.       t$75%dim_3%EX = _zla( 0, ldim )
   73.       t$75%dim_3%SM = _zla( 0, t$13 ) * _zla( 0, t$14 )
   73.       call invd3( t$74, t$75 )
   74.       if ( ldim > 0 ) then
   75.          if ( jmax + -jmaxhf > 0 ) then
   76.             if ( imax > 0 ) then
   74.                $I_L74_16 = 0
   74.                do
   75.                   $I_L75_14 = 0
   75.                   do
   76.                      $I_L76_12 = 0
   76. !dir$ ivdep
   76. !dir$ loop_info (automatic) cache_nt( f )
   76.                      do
   77.                         f(1 + $I_L76_12, 1 + jmaxhf + $I_L75_14, 1 + $I_L74_16) = -f(1 + $I_L76_12, 1 + jmaxhf + $I_L75_14, 1 + $I_L74_16)
   78.                         $I_L76_12 = 1 + $I_L76_12
   76.                         if ( $I_L76_12 >= imax ) exit
   76.                      enddo
   79.                      $I_L75_14 = 1 + $I_L75_14
   78.                      if ( $I_L75_14 >= ( jmax + -jmaxhf ) ) exit
   78.                   enddo
   80.                   $I_L74_16 = 1 + $I_L74_16
   79.                   if ( $I_L74_16 >= ldim ) exit
   79.                enddo
   79.             endif
   79.          endif
   79.       endif
   58.       _free( t$61 )
   82.       return
   82.       end
   82.       
    6.       
    6.       module transspectralgrid
    6.       end
    6.       
