#!/bin/ksh
#
#*****************************************************************#
#                                                                 #
#       Name:      setsnowT126.sx6                       #
#                                                                 #
#       Function:  This script file is used to set the            #
#                  environmental variables and start the          #
#                  grid point snow script.                        #
#                                                                 #
#*****************************************************************#
#
#  At NEC Both the output (stdout) and the error
#  messages (stderr) are written to the same file
#
#PBS -o tupan00:/gfs/home3/modoper/tempo/global/oens/run/setout/setsnow.1.T126.sx6.2012021404:29:40.out
#PBS -j o
# 
#
#   Set date (year,month,day) and hour (hour:minute) 
#
#   DATE=yyyymmdd
#   HOUR=hh:mn:ss
#
DATE=20120214
HOUR=04:29:40
echo 'Date: '${DATE}
echo 'Hour: '${HOUR}
export DATE HOUR
#
#   Set a label (date, UTC hour)
#
#   LABELI=yyyymmddhh
#
LABELI=2012021400
export LABELI
#
#   Set Suffix Names
#
#   EXTS: suffix name for model input
#
EXTS=S.unf
export EXTS
#
#
#   Set directories
#
#   OPERMOD  is the directory for sources, scripts and
#            printouts files.
#   SOPERMOD is the directory for input and output data
#            and bin files.
#   ROPERMOD is the directory for big selected output files.
#
OPERMOD=/gfs/home3/modoper/tempo/global/oens
SOPERMOD=/gfs/home3/modoper/tempo/global/oens
ROPERMOD=/gfs/dk22/modoper/tempo/global/oens
export OPERMOD SOPERMOD ROPERMOD
echo ${OPERMOD}
echo ${SOPERMOD}
echo ${ROPERMOD}
#
cd ${OPERMOD}/run
#
#   Set Horizontal Truncation
#
TRUNC=T126
export TRUNC
#
#   Set machine
MACH=sx6
export MACH
#
#   Set option for compiling or not the source codes.
#   If COMPILE=make then only the modified sources will be compiled.
#   If COMPILE=clean then the touch files will be removed and 
#              all sources will be compiled.
#                    =run for run with no compilation
#
#   If COMPILE is make or clean then the script generates the binary file 
#              and exits;
#              if it is run then the script runs the existent binary file.
#
COMPILE=run
export COMPILE
echo ${COMPILE}
#
#   Set NEC FORTRAN variables for output time diagnostics
#
#   F_PROGINF gives the elapsed, user, system and vector instruction
#             execution time, and execution count of all instructions
#             and number of vector instruction executions.
#   F_FILEINF gives informations about I/O operations.
#
F_PROGINF=DETAIL
export F_PROGINF
#F_FILEINF=DETAIL
#export F_FILEINF
#
#   Set FORTRAN compilation flags
#
#   -pvctl noaltcode either scalar or vector code is generated at compilation
#   -O nodiv         division may not be changed to reciprocal multiplication
#   -O nomove        not move invariant expression outside the loop
#   -float0 floating-point data format IEEE is enabled
#   -ew     sets the basic numeric size to 8 bytes
#
FTNFLAG='-C vsafe -float0 -ew -Wf" -pvctl noaltcode nomatmul -O nodiv nomove " '
export FTNFLAG
#
#   Set C pre-processing flags
#
INC=${OPERMOD}/include/${TRUNC}
export INC
echo ${INC}
#
#   Set FORTRAN compiler name
#
F77=f90
export F77
#
#   Set FORTRAN environment file name
#
#   FFFn is associated with FORTRAN file unit = n
#
FFF=F_FF
export FFF
#
#   Set environmental variables to binary conversion
#
F_UFMTIEEE=16,17
export F_UFMTIEEE
F_UFMTADJUST16=TYPE2
F_UFMTADJUST17=TYPE2
export F_UFMTADJUST16 F_UFMTADJUST17
#
#  Now, build the necessary INCLUDE for the choosen truncation
#
  if [ "${COMPILE}" != "run" ]
  then
#
cd ${INC}
#
cat <<EOT1 > reshsno.n
      INTEGER MEND1,NEND1,JEND1,JMAX,IMAX
      PARAMETER(MEND1=127,NEND1=127,JEND1=127)
      PARAMETER(IMAX=384)
      PARAMETER(JMAX=192)
EOT1
if (diff reshsno.n reshsno.h > /dev/null)
then 
    echo "reshsno.n and reshsno.h are the same"
    rm -f reshsno.n
else
    echo "reshsno.n and reshsno.h are different"
    mv reshsno.n reshsno.h
fi
#
#  End of includes
#
fi
#
#  Build the necessary NAMELIST input..
#
#  LOGICAL PICE
#  NAMELIST /SNWNML/ PICE
#
cat <<EOT2 > ${SOPERMOD}/pre/datain/snwint.nml
 &SNWNML
  PICE=.FALSE.
 &END
EOT2
#
#   Run script
#
${OPERMOD}/pre/scripts/snwint.scr
#
