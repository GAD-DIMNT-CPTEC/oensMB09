#!/bin/ksh
#help#
#*******************************************************************#
#                                                                   #
#      Name:            rundeco.sx6                                 #
#                                                                   #
#      Function:        This script submits the                     #
#                       decomposition scripts                       #
#                       It runs in Korn Shell.                      #
#                                                                   #
#      Date:            June     02th, 2003.                        #
#      Last change:     June     02th, 2003.                        #
#                                                                   #
#     Valid Arguments for rundeco.sx6                               #
#                                                                   #
#      First :    HELP: help or nothing for getting help            #
#      First : COMPILE: help, make, clean or run                    #
#      Second:     TRC: three-digit triangular truncation           #
#      Third :      LV: two-digit number of vertical sigma-layers   #
#      Fourth:     NUM: pertubation number                          #
#      Fifth :  LABELI: initial forecasting label                   #
#      Sixth :  NFDAYS: number of forecasting days                  #
#     Seventh:   HUMID: YES or NO (humidity will be perturbed)      #
#       Eigth: NUMPERT: number of random perturbations              #
#                                                                   #
#              LABELx : yyyymmddhh                                  #
#                       yyyy = four digit year                      #
#                       mm = two digit month                        #
#                       dd = two digit day                          #
#                       hh = two digit hour                         #
#                                                                   #
#       Obs.: For clean, run first runfftp.sx6                      #
#                                                                   #
#*******************************************************************#
#help#
#
#       Help:
#
if [ "${1}" = "help" -o -z "${1}" ]
then
cat < $0 | sed -n '/^#help#/,/^#help#/p'
exit 0
fi
#
#       Test of Valid Arguments
#
if [ "${1}" != "run" ]
then
if [ "${1}" != "make" ]
then
if [ "${1}" != "clean" ]
then
echo "First argument: ${1}, is wrong. Must be: make, clean or run"
exit
fi
fi
fi
if [ -z "${2}" ]
then
echo "Second argument is not set (TRC)"
exit
else
TRC=${2}
fi
if [ -z "${3}" ]
then
echo "Third argument is not set (LV)"
exit
else
LV=${3}
fi
if [ "${1}" = "run" ]
then
if [ -z "${4}" ]
then
echo "Fourth argument is not set (NUM)"
exit
else
PERR=${4}
fi
if [ -z "${5}" ]
then
echo "Fifth argument is not set (LABELI: yyyymmddhh)"
exit
fi
if [ -z "${6}" ]
then
echo "Sixth argument is not set (NFDAYS)"
exit
fi
if [ -z "${7}" ]
then
echo "Seventh argument is not set (HUMID)"
exit
else
HUMID=${7}
fi
if [ -z "${8}" ]
then
echo "Eigth argument is not set (NUMPERT)"
exit
else
NUMPERT=${8}
fi
fi
#
#   Set machine, Run time and Extention
#
HSTMAQ=`hostname`
MAQUI=sx6
RUNTM=`date +'%Y'``date +'%m'``date +'%d'``date +'%H:%M'`
EXT=out
echo $MAQUI
echo $RUNTM
echo $EXT
#
#   Set directories
#
#   OPERM  is the directory for sources, scripts and printouts.
#   SOPERM is the directory for input and output files.
#   ROPERM is the directory for big selected output files.
#   IOPERM is the directory for the input files.
#
. ../include/config.sx6
echo ${OPERM}
echo ${SOPERM}
echo ${ROPERM}
echo ${IOPERM}
#
#   Set truncation and layers
#
TRC=${2}
LV=${3}
RESOL=T${TRC}
NIVEL=L${LV}
#
case ${TRC} in
021) MR=21 ; IR=64 ; JR=32 ; 
     case ${LV} in
     09) KR=09 ; LR=11 ;;
     18) KR=18 ; LR=13 ;;
     28) KR=28 ; LR=17 ;;
     42) KR=42 ; LR=18 ;;
     *) echo "Wrong request for vertical resolution: ${LV}" ; exit 1 ;;
     esac
;;
030) MR=30 ; IR=96 ; JR=48 ;
     case ${LV} in
     09) KR=09 ; LR=11 ;;
     18) KR=18 ; LR=13 ;;
     28) KR=28 ; LR=17 ;;
     42) KR=42 ; LR=18 ;;
     *) echo "Wrong request for vertical resolution: ${LV}" ; exit 1 ;;
     esac
;;
042) MR=42 ; IR=128 ; JR=64 ;
     case ${LV} in
     09) KR=09 ; LR=11 ;;
     18) KR=18 ; LR=11 ;;
     28) KR=28 ; LR=11 ;;
     42) KR=42 ; LR=18 ;;
     *) echo "Wrong request for vertical resolution: ${LV}" ; exit 1 ;;
     esac
;;
047) MR=47 ; IR=144 ; JR=72 ;
     case ${LV} in
     09) KR=09 ; LR=11 ;;
     18) KR=18 ; LR=13 ;;
     28) KR=28 ; LR=17 ;;
     42) KR=42 ; LR=18 ;;
     *) echo "Wrong request for vertical resolution: ${LV}" ; exit 1 ;;
     esac
;;
062) MR=62 ; IR=192 ; JR=96 ;
     case ${LV} in
     09) KR=09 ; LR=11 ;;
     18) KR=18 ; LR=11 ;;
     28) KR=28 ; LR=11 ;;
     42) KR=42 ; LR=18 ;;
     *) echo "Wrong request for vertical resolution: ${LV}" ; exit 1 ;;
     esac
;;
079) MR=79 ; IR=240 ; JR=120 ;
     case ${LV} in
     09) KR=09 ; LR=11 ;;
     18) KR=18 ; LR=13 ;;
     28) KR=28 ; LR=17 ;;
     42) KR=42 ; LR=18 ;;
     *) echo "Wrong request for vertical resolution: ${LV}" ; exit 1 ;;
     esac
;;
095) MR=95 ; IR=288 ; JR=144 ;
     case ${LV} in
     09) KR=09 ; LR=11 ;;
     18) KR=18 ; LR=13 ;;
     28) KR=28 ; LR=17 ;;
     42) KR=42 ; LR=18 ;;
     *) echo "Wrong request for vertical resolution: ${LV}" ; exit 1 ;;
     esac
;;
106) MR=106 ; IR=320 ; JR=160 ;
     case ${LV} in
     09) KR=09 ; LR=11 ;;
     18) KR=18 ; LR=13 ;;
     28) KR=28 ; LR=17 ;;
     42) KR=42 ; LR=18 ;;
     *) echo "Wrong request for vertical resolution: ${LV}" ; exit 1 ;;
     esac
;;
126) MR=126 ; IR=384 ; JR=192 ;
     case ${LV} in
     09) KR=09 ; LR=11 ;;
     18) KR=18 ; LR=13 ;;
     28) KR=28 ; LR=17 ;;
     42) KR=42 ; LR=18 ;;
     *) echo "Wrong request for vertical resolution: ${LV}" ; exit 1 ;;
     esac
;;
159) MR=159 ; IR=480 ; JR=240 ;
     case ${LV} in
     09) KR=09 ; LR=11 ;;
     18) KR=18 ; LR=13 ;;
     28) KR=28 ; LR=17 ;;
     42) KR=42 ; LR=18 ;;
     *) echo "Wrong request for vertical resolution: ${LV}" ; exit 1 ;;
     esac
;;
170) MR=170 ; IR=512 ; JR=256 ;
     case ${LV} in
     09) KR=09 ; LR=11 ;;
     18) KR=18 ; LR=13 ;;
     28) KR=28 ; LR=17 ;;
     42) KR=42 ; LR=18 ;;
     *) echo "Wrong request for vertical resolution: ${LV}" ; exit 1 ;;
     esac
;;
213) MR=213 ; IR=640 ; JR=320 ;
     case ${LV} in
     09) KR=09 ; LR=11 ;;
     18) KR=18 ; LR=13 ;;
     28) KR=28 ; LR=17 ;;
     42) KR=42 ; LR=18 ;;
     *) echo "Wrong request for vertical resolution: ${LV}" ; exit 1 ;;
     esac
;;
319) MR=319 ; IR=960 ; JR=480 ;
     case ${LV} in
     09) KR=09 ; LR=11 ;;
     18) KR=18 ; LR=13 ;;
     28) KR=28 ; LR=17 ;;
     *) echo "Wrong request for vertical resolution: ${LV}" ; exit 1 ;;
     esac
;;
170) MR=170 ; IR=512 ; JR=256 ;
     case ${LV} in
     09) KR=09 ; LR=11 ;;
     18) KR=18 ; LR=13 ;;
     28) KR=28 ; LR=17 ;;
     42) KR=42 ; LR=18 ;;
     *) echo "Wrong request for vertical resolution: ${LV}" ; exit 1 ;;
     esac
;;
213) MR=213 ; IR=640 ; JR=320 ;
     case ${LV} in
     09) KR=09 ; LR=11 ;;
     18) KR=18 ; LR=13 ;;
     28) KR=28 ; LR=17 ;;
     42) KR=42 ; LR=18 ;;
     *) echo "Wrong request for vertical resolution: ${LV}" ; exit 1 ;;
     esac
;;
319) MR=319 ; IR=960 ; JR=480 ;
     case ${LV} in
     09) KR=09 ; LR=11 ;;
     18) KR=18 ; LR=13 ;;
     28) KR=28 ; LR=17 ;;
     42) KR=42 ; LR=18 ;;
     *) echo "Wrong request for vertical resolution: ${LV}" ; exit 1 ;;
     esac
;;
*) echo "Wrong request for horizontal resolution: ${TRC}" ; exit 1;
esac
#
#
cd ${OPERM}/run
#
cat <<EOT0 > setdeco${PERR}${RESOL}${NIVEL}.${MAQUI}
#!/bin/ksh
#
#************************************************************#
#                                                            #
#     Name:        setdeco${PERR}${RESOL}${NIVEL}.${MAQUI}   #
#                                                            #
#     Function:    This script file is used to set the       #
#                  environmental variables and start the     #
#                  decomposition script.                     #
#                                                            #
#************************************************************#
#
#PBS -o ${HSTMAQ}:${OPERM}/run/setout/setdeco${PERR}${RESOL}${NIVEL}.${MAQUI}.${RUNTM}.${EXT}
#PBS -j o
#
#
#   Set date (year,month,day) and hour (hour:minute) 
#
#   DATE=yymmdd
#   HOUR=hh:mn
#
DATE=`date +'%Y'``date +'%m'``date +'%d'`
HOUR=`date +'%H:%M'`
echo 'Date: '\${DATE}
echo 'Hour: '\${HOUR}
export DATE HOUR
#
#   Set labels (date, UTC hour, ...)
#
#   LABELI = yyyymmddhh
#   LABELI = input file label
#
NUM=${4}
export NUM
LABELI=${5}
echo \${LABELI}
export LABELI
#
#   Prefix names for the FORTRAN files
#
#   NAMEL - List file name prefix
#   GNAME - Initial condition file name prefix
#   NAMER - Input gridded file name prefix
#   NAMES - Output spectral file name prefix
#
NAMEL=GEOFPE\${NUM}
export NAMEL
GNAME=GANLAVN
export GNAME
NAMER=GANLAVN
export NAMER
NAMES1=GANL\${NUM}P
export NAMES1
NAMES3=GANL\${NUM}N
export NAMES3
#
#   Suffix names for the FORTRAN files
#
#   EXTL - List file name suffix
#   EXTG - Initial condition file name suffix
#   ERRi - Input gridded file name suffix
#   ERSi - Output spectral file name suffix
#
EXTL=P.rpt
export EXTL
EXTG=S.unf
export EXTG
ERR1=P.rp1
ERR2=P.rp2
ERR3=P.rp3
export ERR1 ERR2 ERR3
ERS1=S.rp1
ERS2=S.rp2
ERS3=S.rp3
export ERS1 ERS2 ERS3
#
#   Set directories
#
#   OPERMOD  is the directory for sources, scripts and
#            printouts files.
#   SOPERMOD is the directory for input and output data
#            and bin files.
#   ROPERMOD is the directory for big selected output files.
#   IOPERMOD is the directory for input file.
#
OPERMOD=${OPERM}
SOPERMOD=${SOPERM}
ROPERMOD=${ROPERM}
IOPERMOD=${IOPERM}
export OPERMOD SOPERMOD ROPERMOD IOPERMOD
echo \${OPERMOD}
echo \${SOPERMOD}
echo \${ROPERMOD}
echo \${IOPERMOD}
#
cd \${OPERMOD}/run
#
#   Set Horizontal Truncation and Vertical Layers
#
LEV=${NIVEL}
TRUNC=${RESOL}
export TRUNC LEV
#
#   Set machine
MACH=${MAQUI}
export MACH
#
#   Set option for compiling or not the source codes.
#
#   If COMPILE=make then only the modified sources will be compiled.
#   If COMPILE=clean then the touch files will be removed and 
#              all sources will be compiled.
#             =run for run with no compilation
#
#   If COMPILE is make or clean then the script generates the binary file 
#              and exits;
#              if it is run then the script runs the existent binary file.
#
echo ${1}
COMPILE=${1}
echo \$COMPILE
export COMPILE
#
#   Set FORTRAN compilation flags
#
#   -integer_size 64 sets the integer basic numeric size to 8 bytes
#   -real_size 64    sets the real basic numeric size to 8 bytes
#
#
FTNFLAG='-Wf" -pvctl noaltcode -O nodiv nomove "'
export FTNFLAG
#
#   Set C pre-processing flags
#
INC=\${OPERMOD}/include/\${TRUNC}\${LEV}
CPP="-EP -I\${INC}"
export INC CPP
#
#   Set FORTRAN compiler name
#
F77="f90 -V -float0 -ew "
export F77
#
#   Set FORTRAN environment file name
#
#   $FFFn is associated with FORTRAN file unit = n
#
#FFF=FORT
#export FFF
#
#   Set environmental variables to binary conversion
#
#FORT_CONVERT10=BIG_ENDIAN
#FORT_CONVERT20=BIG_ENDIAN
#export FORT_CONVERT10 FORT_CONVERT20
#
F_UFMTIEEE=10,11,20,62,64,72,74
F_UFMTADJUST11=TYPE2
F_UFMTADJUST20=TYPE2
export F_UFMTIEEE F_UFMTADJUST11 F_UFMTADJUST20
#  Now, build the necessary INCLUDE for the choosen truncation and 
#       vertical resolution.. 
#
  if [ "\${COMPILE}" != "run" ]
  then
#
cd \${INC}
#
cat <<EOT1 > decanl.n
      INTEGER IMAX,JMAX,MEND,KMAX,LMAX
      PARAMETER (IMAX=${IR},JMAX=${JR},MEND=${MR},KMAX=${KR},LMAX=${LR})
EOT1
if (diff decanl.n decanl.h > /dev/null)
then
    echo "decanl.n and decanl.h are the same"
    rm -f decanl.n
else
    echo "decanl.n and decanl.h are different"
    mv decanl.n decanl.h
fi
#
#  End of includes
#
fi
#
#  Now, build the necessary NAMELIST input:
#
GNAMEL=\${NAMEL}\${LABELI}\${EXTL}.\${TRUNC}\${LEV}
#
cat <<EOT2 > \${SOPERMOD}/decanl/datain/\${GNAMEL}
\${GNAME}\${LABELI}\${EXTG}.\${TRUNC}\${LEV}
winpe1\${NUM}\${LABELI}                            
\${NAMES1}\${LABELI}\${EXTG}.\${TRUNC}\${LEV}
EOT2
#
cat <<EOT3 > \${SOPERMOD}/decanl/datain/decanl\${NUM}.nml
 &DATAIN
  LDIM=1
  DIRL='\${SOPERMOD}/decanl/datain/ '
  DIRI='\${IOPERMOD}/ '
  DIRG='\${ROPERMOD}/eof/dataout/\${TRUNC}\${LEV}/ '
  DIRS='\${IOPERMOD}/ '
  GNAMEL='\${GNAMEL} '
 &END
 &HUMIDI
  HUM='${HUMID}'
 &END
EOT3
#
cd \${OPERMOD}/run
#
#   Run Decomposition
#
\${OPERMOD}/decanl/scripts/decanl.scr
#
cat <<EOT4 > \${SOPERMOD}/decanl/datain/\${GNAMEL}
\${GNAME}\${LABELI}\${EXTG}.\${TRUNC}\${LEV}
winpn1\${NUM}\${LABELI}
\${NAMES3}\${LABELI}\${EXTG}.\${TRUNC}\${LEV}
EOT4
cd \${OPERMOD}/run
#
#   Run Decomposition
#
\${OPERMOD}/decanl/scripts/decanl.scr
#
#   Remove obsolete files 
#
rm -f \${SOPERMOD}/recanl/datain/GANLAVN\${LABELI}*.\${TRUNC}\${LEV}
#
rm -f \${SOPERMOD}/recfct/datain/GFCT\${NUM}R\${LABELI}*F.fct.\${TRUNC}\${LEV}
rm -f \${SOPERMOD}/recfct/datain/GFCTCTR\${LABELI}*F.fct.\${TRUNC}\${LEV}
#
rm -f \${SOPERMOD}/decanl/datain/GEOFPE\${NUM}\${LABELI}P.rpt.\${TRUNC}\${LEV}
rm -f \${SOPERMOD}/decanl/datain/GANLAVN\${LABELI}P.rpt.\${TRUNC}\${LEV}
#
rm -f \${ROPERMOD}/recfct/dataout/\${TRUNC}\${LEV}/GFCT\${NUM}R\${LABELI}*R.fct.\${TRUNC}\${LEV}

rm -f \${ROPERMOD}/rdpert/dataout/\${TRUNC}\${LEV}/GANL\${NUM}R\${LABELI}R.unf.\${TRUNC}\${LEV}
rm -f \${ROPERMOD}/rdpert/dataout/\${TRUNC}\${LEV}/GANL\${NUM}R\${LABELI}R.unf.\${TRUNC}\${LEV}.out

rm -f \${ROPERMOD}/model/datain/GANL\${NUM}R\${LABELI}S.unf.\${TRUNC}\${LEV}
rm -f \${ROPERMOD}/model/datain/GFCT\${NUM}R\${LABELI}*F.fct.\${TRUNC}\${LEV}
#
rm -f \${ROPERMOD}/model/datain/lst.GFCT\${NUM}R\${LABELI}.dr
rm -f \${ROPERMOD}/model/datain/lst.GFCT\${NUM}R\${LABELI}
#
#AMM rm -f \${ROPERMOD}/model/dataout/\${TRUNC}\${LEV}/GPER\${NUM}R\${LABELI}*\${TRUNC}\${LEV}
#AMM rm -f \${ROPERMOD}/model/dataout/\${TRUNC}\${LEV}/GFGH\${NUM}R\${LABELI}*\${TRUNC}\${LEV}
#AMM rm -f \${ROPERMOD}/model/dataout/\${TRUNC}\${LEV}/GDHN\${NUM}R\${LABELI}*\${TRUNC}\${LEV}
#
rm -f \${SOPERMOD}/eof/datain/templ\${NUM}\${LABELI}
#
rm -f \${ROPERMOD}/eof/dataout/\${TRUNC}\${LEV}/temout\${NUM}\${LABELI}
rm -f \${ROPERMOD}/eof/dataout/\${TRUNC}\${LEV}/tempe1\${NUM}\${LABELI}
rm -f \${ROPERMOD}/eof/dataout/\${TRUNC}\${LEV}/tempn1\${NUM}\${LABELI}
rm -f \${ROPERMOD}/eof/dataout/\${TRUNC}\${LEV}/tempcm\${NUM}\${LABELI}
rm -f \${ROPERMOD}/eof/dataout/\${TRUNC}\${LEV}/humout\${NUM}\${LABELI}
rm -f \${ROPERMOD}/eof/dataout/\${TRUNC}\${LEV}/humpe1\${NUM}\${LABELI}
rm -f \${ROPERMOD}/eof/dataout/\${TRUNC}\${LEV}/humpn1\${NUM}\${LABELI}
rm -f \${ROPERMOD}/eof/dataout/\${TRUNC}\${LEV}/humpcm\${NUM}\${LABELI}
rm -f \${ROPERMOD}/eof/dataout/\${TRUNC}\${LEV}/winout\${NUM}\${LABELI}
rm -f \${ROPERMOD}/eof/dataout/\${TRUNC}\${LEV}/winpe1\${NUM}\${LABELI}
rm -f \${ROPERMOD}/eof/dataout/\${TRUNC}\${LEV}/winpn1\${NUM}\${LABELI}
rm -f \${ROPERMOD}/eof/dataout/\${TRUNC}\${LEV}/winpcm\${NUM}\${LABELI}
#
# End of remove
#
EOT0
#
#   Change mode to be executable
#
chmod 744 setdeco${PERR}${RESOL}${NIVEL}.${MAQUI}
#
#   Submit Decomposition scripts to Batch
#
#AMM echo "qsub -x -s /bin/ksh -q ${QUEUE} ${OPERM}/run/setdeco${PERR}${RESOL}${NIVEL}.${MAQUI}"
#AMM qsub -x -s /bin/ksh -q ${QUEUE} ${OPERM}/run/setdeco${PERR}${RESOL}${NIVEL}.${MAQUI}
echo "${OPERM}/run/setdeco${PERR}${RESOL}${NIVEL}.${MAQUI}"
${OPERM}/run/setdeco${PERR}${RESOL}${NIVEL}.${MAQUI}
#
