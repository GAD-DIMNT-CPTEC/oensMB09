       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  Watches.f90
       !        File                  :  Watches.cg
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
  133.       
  133.       subroutine createwatch( wt, nw, firstw )
   36.       if ( t$40 == 0 ) then
   36.          0[loc( t$45 ),0] = 2
   36.          0[loc( t$46 ),0] = 0
   36.          0[loc( t$47 ),0] = 0
   36.          0[loc( t$42 ),0].L = int( loc( t$39 ), 8 )
   36.          0[loc( t$43 ),0].L = 0
   36.          0[loc( t$44 ),0].L = int( loc( t$41 ), 8 )
   36.          t$40 = __get_dynamic_type( 2, 0[loc( t$42 ),0].L, 0[loc( t$45 ),0], 1, 0[loc( t$43 ),0].L, 0[loc( t$44 ),0].L, 0[loc( t$46 ),0], 0[loc( t$47 ),0] )
   36.       endif
   76.       $LCS_nw_0 = loc( nw )
   76.       $MR_nw_S2 = 0[$LCS_nw_0,0]
   76.       if ( $MR_nw_S2 <= 0 ) then
   77.          $_StackCntrl_O1 = $_StaticCntrl_O0
   77.          1[loc( $_StackCntrl_O1 ),0].L = loc( substr[c0,0:10] )
   77.          $_StackIolist_O3 = $_StaticIolist_O2
   77.          0[int( pointer to c_union Pointer_union( loc( 3[loc( $_StackIolist_O3 ),0].L ) ), 8 ),0].L = loc( 0[$LCS_nw_0,0] )
   77.          _fwf( pointer to integer (kind=8)( loc( $_StackCntrl_O1 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StackIolist_O3 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O4 ) ) )
   78.          _f90_adjustl( substr[t$82,0:10], substr[c0,0:10] )
   78.          t$83 = 52 + ( _ltrim( substr[t$82,0:10] ) )
   78.          t$85 = int( _alloc( max( 0, t$83 ) ), 8 )
   78.          $LCS_1 = max( 0, t$83 )
   78.          substr[0,t$85:$LCS_1] = //( '**(CreateWatch)** number of watches (', //( substr[t$82,0:_ltrim( substr[t$82,0:10] )], ') should be > 0' ) )
   78.          call fatalerror( substr[0,t$85:$LCS_1] )
   78.          _free( t$85 )
   79.          substr[t$86,0:4] = '1'
   79.          call _stop( substr[t$86,0:1] )
   79.       else
   80.          $MR_firstw_S3 = 0[loc( firstw ),0]
   80.          if ( $MR_firstw_S3 > $MR_nw_S2 ) then
   81.             $_StackCntrl_O1 = $_StaticCntrl_O5
   81.             1[loc( $_StackCntrl_O1 ),0].L = loc( substr[c0,0:10] )
   81.             $_StackIolist_O7 = $_StaticIolist_O6
   81.             0[int( pointer to c_union Pointer_union( loc( 3[loc( $_StackIolist_O7 ),0].L ) ), 8 ),0].L = loc( 0[loc( nw ),0] )
   81.             _fwf( pointer to integer (kind=8)( loc( $_StackCntrl_O1 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StackIolist_O7 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O4 ) ) )
   82.             $_StackCntrl_O1 = $_StaticCntrl_O8
   82.             1[loc( $_StackCntrl_O1 ),0].L = loc( substr[c1,0:10] )
   82.             $_StackIolist_O10 = $_StaticIolist_O9
   82.             0[int( pointer to c_union Pointer_union( loc( 3[loc( $_StackIolist_O10 ),0].L ) ), 8 ),0].L = loc( 0[loc( firstw ),0] )
   82.             _fwf( pointer to integer (kind=8)( loc( $_StackCntrl_O1 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StackIolist_O10 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O4 ) ) )
   83.             _f90_adjustl( substr[t$87,0:10], substr[c1,0:10] )
   84.             _f90_adjustl( substr[t$88,0:10], substr[c0,0:10] )
   83.             t$89 = ( _ltrim( substr[t$87,0:10] ) ) + 55 + ( _ltrim( substr[t$88,0:10] ) )
   84.             t$91 = int( _alloc( max( 0, t$89 ) ), 8 )
   84.             $LCS_2 = max( 0, t$89 )
   84.             substr[0,t$91:$LCS_2] = //( '**(CreateWatch)** first watch (', //( substr[t$87,0:_ltrim( substr[t$87,0:10] )], //( ') > number of watches (', //( substr[t$88,0:_ltrim( substr[t$88,0:10] )], ')' ) ) ) )
   83.             call fatalerror( substr[0,t$91:$LCS_2] )
   84.             _free( t$91 )
   85.             substr[t$92,0:4] = '1'
   85.             call _stop( substr[t$92,0:1] )
   85.          else
   90.             $LCS_wt_3 = loc( wt )
   90.             0[$LCS_wt_3,0] = $MR_nw_S2
   91.             7[$LCS_wt_3,0].L = 0
   91.             8[$LCS_wt_3,0].L = ( max( 0, 1 + $MR_nw_S2 ) )
   91.             9[$LCS_wt_3,0].L = 1
   91.             0[loc( $_allo_P1 ),0].L = 0x1000000000001L
   91.             1[loc( $_allo_P1 ),0].L = loc( 1[$LCS_wt_3,0].L )
   91.             $MR_wt_S4 = 3[$LCS_wt_3,0].L
   91.             $MR_wt_S5 = or( 16, $MR_wt_S4 )
   91.             3[$LCS_wt_3,0].L = $MR_wt_S5
   91.             call __allocate( $_allo_P1, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
   92.             $ierr_S6 = ierr
   92.             if ( $ierr_S6 /= 0 ) then
   93.                $_StackCntrl_O1 = $_StaticCntrl_O11
   93.                1[loc( $_StackCntrl_O1 ),0].L = loc( substr[c0,0:10] )
   93.                $_StackIolist_O13 = $_StaticIolist_O12
   93.                0[int( pointer to c_union Pointer_union( loc( 3[loc( $_StackIolist_O13 ),0].L ) ), 8 ),0].L = loc( ierr )
   93.                _fwf( pointer to integer (kind=8)( loc( $_StackCntrl_O1 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StackIolist_O13 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O4 ) ) )
   94.                _f90_adjustl( substr[t$93,0:10], substr[c0,0:10] )
   94.                t$94 = 50 + ( _ltrim( substr[t$93,0:10] ) )
   94.                t$96 = int( _alloc( max( 0, t$94 ) ), 8 )
   94.                $LCS_4 = max( 0, t$94 )
   94.                substr[0,t$96:$LCS_4] = //( '**(CreateWatch)** allocate TimeCpu returned error ', substr[t$93,0:_ltrim( substr[t$93,0:10] )] )
   94.                call fatalerror( substr[0,t$96:$LCS_4] )
   94.                _free( t$96 )
   94.             endif
   96.             $MR_nw_S7 = 0[loc( nw ),0]
   96.             $CS_S8 = max( 0, 1 + $MR_nw_S7 )
   96.             $F_A33 = $CS_S8
   96.             $I_S14 = 0
   96.             $LCS_1_6 = -1 + $CS_S8
   96.             $LCS_F_7 = -1 + $F_A33
   96.             if ( $LCS_F_7 > $LCS_1_6 ) then
   96.                $LB_Y0 = 0
   96.                $UB_Y1 = $LCS_1_6
   96.                $Subscript_Y2 = 0
   96.                $Subscript_Y3 = $LCS_F_7
   96.                $Subscript_Y4 = 1
   96.                _rbounds_error( $_File_Y40, $Line_Y42, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y2, $Subscript_Y3, $Subscript_Y4, $Err_count_Y43 )
   96.             endif
   96.             $MR_wt_S9 = 1[loc( wt ),0].L
   96.             if ( $F_A33 >= 4 ) then
   96.                $TC_0 = and( -4, $F_A33 )
   96.                $LC_S13 = -$TC_0
   96.                $SI_S12 = 0
   96.                $LIS_S10[0:4:1] = _bcst( 0.0, 4 )
   96.                $LIS_S11 = int( $MR_wt_S9, 8 )
   96.                do
   96.                   0[$LIS_S11 + $SI_S12:4:1] = $LIS_S10[0:4:1]
   96.                   $SI_S12 = 16 + $SI_S12
   96.                   $LC_S13 = 4 + $LC_S13
   96.                   if ( $LC_S13 >= 0 ) exit
   96.                enddo
   96.                $I_S14 = $TC_0
   96.             endif
   96.             if ( $F_A33 > $I_S14 ) then
   96.                $LIS_S15 = int( $MR_wt_S9, 8 )
   96.                do
   96.                   0[$LIS_S15,$I_S14] = 0.0
   96.                   $I_S14 = 1 + $I_S14
   96.                   if ( $I_S14 >= $F_A33 ) exit
   96.                enddo
   96.             endif
   98.             $LCS_wt_8 = loc( wt )
   98.             16[$LCS_wt_8,0].L = 0
   98.             17[$LCS_wt_8,0].L = ( max( 0, 1 + $MR_nw_S7 ) )
   98.             18[$LCS_wt_8,0].L = 1
   98.             0[loc( $_allo_P2 ),0].L = 0x1000000000001L
   98.             1[loc( $_allo_P2 ),0].L = loc( 10[$LCS_wt_8,0].L )
   98.             $MR_wt_S16 = 12[$LCS_wt_8,0].L
   98.             $MR_wt_S17 = or( 16, $MR_wt_S16 )
   98.             12[$LCS_wt_8,0].L = $MR_wt_S17
   98.             call __allocate( $_allo_P2, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
   99.             $ierr_S18 = ierr
   99.             if ( $ierr_S18 /= 0 ) then
  100.                $_StackCntrl_O1 = $_StaticCntrl_O14
  100.                1[loc( $_StackCntrl_O1 ),0].L = loc( substr[c0,0:10] )
  100.                $_StackIolist_O16 = $_StaticIolist_O15
  100.                0[int( pointer to c_union Pointer_union( loc( 3[loc( $_StackIolist_O16 ),0].L ) ), 8 ),0].L = loc( ierr )
  100.                _fwf( pointer to integer (kind=8)( loc( $_StackCntrl_O1 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StackIolist_O16 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O4 ) ) )
  101.                _f90_adjustl( substr[t$97,0:10], substr[c0,0:10] )
  101.                t$98 = 51 + ( _ltrim( substr[t$97,0:10] ) )
  101.                t$100 = int( _alloc( max( 0, t$98 ) ), 8 )
  101.                $LCS_9 = max( 0, t$98 )
  101.                substr[0,t$100:$LCS_9] = //( '**(CreateWatch)** allocate TimeWall returned error ', substr[t$97,0:_ltrim( substr[t$97,0:10] )] )
  101.                call fatalerror( substr[0,t$100:$LCS_9] )
  101.                _free( t$100 )
  101.             endif
  103.             $MR_nw_S19 = 0[loc( nw ),0]
  103.             $CS_S20 = max( 0, 1 + $MR_nw_S19 )
  103.             $F_A34 = $CS_S20
  103.             $I_S26 = 0
  103.             $LCS_1_11 = -1 + $CS_S20
  103.             $LCS_F_12 = -1 + $F_A34
  103.             if ( $LCS_F_12 > $LCS_1_11 ) then
  103.                $LB_Y0 = 0
  103.                $UB_Y1 = $LCS_1_11
  103.                $Subscript_Y2 = 0
  103.                $Subscript_Y3 = $LCS_F_12
  103.                $Subscript_Y4 = 1
  103.                _rbounds_error( $_File_Y40, $Line_Y44, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y2, $Subscript_Y3, $Subscript_Y4, $Err_count_Y45 )
  103.             endif
  103.             $MR_wt_S21 = 10[loc( wt ),0].L
  103.             if ( $F_A34 >= 4 ) then
  103.                $TC_3 = and( -4, $F_A34 )
  103.                $LC_S25 = -$TC_3
  103.                $SI_S24 = 0
  103.                $LIS_S22[0:4:1] = _bcst( 0.0, 4 )
  103.                $LIS_S23 = int( $MR_wt_S21, 8 )
  103.                do
  103.                   0[$LIS_S23 + $SI_S24:4:1] = $LIS_S22[0:4:1]
  103.                   $SI_S24 = 16 + $SI_S24
  103.                   $LC_S25 = 4 + $LC_S25
  103.                   if ( $LC_S25 >= 0 ) exit
  103.                enddo
  103.                $I_S26 = $TC_3
  103.             endif
  103.             if ( $F_A34 > $I_S26 ) then
  103.                $LIS_S27 = int( $MR_wt_S21, 8 )
  103.                do
  103.                   0[$LIS_S27,$I_S26] = 0.0
  103.                   $I_S26 = 1 + $I_S26
  103.                   if ( $I_S26 >= $F_A34 ) exit
  103.                enddo
  103.             endif
  105.             $LCS_wt_13 = loc( wt )
  105.             25[$LCS_wt_13,0].L = 0
  105.             26[$LCS_wt_13,0].L = ( max( 0, 1 + $MR_nw_S19 ) )
  105.             27[$LCS_wt_13,0].L = 16
  105.             0[loc( $_allo_P3 ),0].L = 0x1000000000001L
  105.             1[loc( $_allo_P3 ),0].L = loc( 19[$LCS_wt_13,0].L )
  105.             $MR_wt_S28 = 21[$LCS_wt_13,0].L
  105.             $MR_wt_S29 = or( 16, $MR_wt_S28 )
  105.             21[$LCS_wt_13,0].L = $MR_wt_S29
  105.             call __allocate( $_allo_P3, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  106.             $ierr_S30 = ierr
  106.             if ( $ierr_S30 /= 0 ) then
  107.                $_StackCntrl_O1 = $_StaticCntrl_O17
  107.                1[loc( $_StackCntrl_O1 ),0].L = loc( substr[c0,0:10] )
  107.                $_StackIolist_O19 = $_StaticIolist_O18
  107.                0[int( pointer to c_union Pointer_union( loc( 3[loc( $_StackIolist_O19 ),0].L ) ), 8 ),0].L = loc( ierr )
  107.                _fwf( pointer to integer (kind=8)( loc( $_StackCntrl_O1 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StackIolist_O19 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O4 ) ) )
  108.                _f90_adjustl( substr[t$101,0:10], substr[c0,0:10] )
  108.                t$102 = 47 + ( _ltrim( substr[t$101,0:10] ) )
  108.                t$104 = int( _alloc( max( 0, t$102 ) ), 8 )
  108.                $LCS_14 = max( 0, t$102 )
  108.                substr[0,t$104:$LCS_14] = //( '**(CreateWatch)** allocate Name returned error ', substr[t$101,0:_ltrim( substr[t$101,0:10] )] )
  108.                call fatalerror( substr[0,t$104:$LCS_14] )
  108.                _free( t$104 )
  108.             endif
  110.             $MR_nw_S31 = 0[loc( nw ),0]
  110.             $CS_S32 = max( 0, 1 + $MR_nw_S31 )
  110.             $F_A35 = $CS_S32
  110.             $I_S34 = 0
  110.             $LCS_1_16 = -1 + $CS_S32
  110.             $LCS_F_17 = -1 + $F_A35
  110.             if ( $LCS_F_17 > $LCS_1_16 ) then
  110.                $LB_Y0 = 0
  110.                $UB_Y1 = $LCS_1_16
  110.                $Subscript_Y2 = 0
  110.                $Subscript_Y3 = $LCS_F_17
  110.                $Subscript_Y4 = 1
  110.                _rbounds_error( $_File_Y40, $Line_Y46, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y2, $Subscript_Y3, $Subscript_Y4, $Err_count_Y47 )
  110.             endif
  110.             $SC_wt_I4 = 19[loc( wt ),0].L
  110.             $SR_S33 = 0
  110.             do
  110.                substr[$SC_wt_I4,$SR_S33:16] = '          '
  110.                $SR_S33 = 16 + $SR_S33
  110.                $I_S34 = 1 + $I_S34
  110.                if ( $I_S34 >= $F_A35 ) exit
  110.             enddo
  111.             $LCS_1_18 = -1 + ( max( 0, 1 + $MR_nw_S31 ) )
  111.             if ( $LCS_1_18 < 0 ) then
  111.                $LB_Y0 = 0
  111.                $UB_Y1 = $LCS_1_18
  111.                $Subscript_Y5 = 0
  111.                _bounds_error( $_File_Y40, $Line_Y48, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y49 )
  111.             endif
  111.             substr[$SC_wt_I4,0:16] = 'Total '
  115.             call _cpu_time_4( tc )
  116.             $t_S0 = irtc_rate_i8
  116.             $Flat_S1 = _rtc
  117.             if ( _rsh( $t_S0, 14 ) == 0 ) then
  118.                substr[t$106,0:49] = '**(CreateWatch)** no clock at this instalation!!!'
  118.                call fatalerror( substr[t$106,0:49] )
  118.             endif
  120.             $CS_3 = 1.0 / real( _rsh( $t_S0, 14 ) )
  120.             56[loc( wt ),0] = $CS_3
  125.             $MR_nw_S35 = 0[loc( nw ),0]
  125.             $CS_S36 = max( 0, 1 + $MR_nw_S35 )
  125.             $CS_CS0_2 = -1 + $CS_S36
  125.             if ( $CS_CS0_2 < 0 ) then
  125.                $LB_Y0 = 0
  125.                $UB_Y1 = $CS_CS0_2
  125.                $Subscript_Y5 = 0
  125.                _bounds_error( $_File_Y40, $Line_Y50, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y51 )
  125.             endif
  125.             $MR_tc_28 = tc
  125.             $MR_wt_S37 = 1[loc( wt ),0].L
  125.             0[int( $MR_wt_S37, 8 ),0] = -$MR_tc_28
  126.             if ( $CS_CS0_2 < 0 ) then
  126.                $LB_Y0 = 0
  126.                $UB_Y1 = $CS_CS0_2
  126.                $Subscript_Y5 = 0
  126.                _bounds_error( $_File_Y40, $Line_Y52, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y53 )
  126.             endif
  126.             $LCS_wt_21 = loc( wt )
  126.             $MR_wt_S38 = 10[$LCS_wt_21,0].L
  126.             $CS_4 = -( real( and( 0x7fffffff, _rsh( $Flat_S1, 14 ) ) ) * $CS_3 )
  126.             0[int( $MR_wt_S38, 8 ),0] = $CS_4
  130.             $MR_firstw_S39 = 0[loc( firstw ),0]
  130.             1[$LCS_wt_21,0] = $MR_firstw_S39
  131.             if ( or( $MR_firstw_S39, -1 + $CS_S36 - $MR_firstw_S39 ) < 0 ) then
  131.                $LB_Y0 = 0
  131.                $UB_Y1 = -1 + $CS_S36
  131.                $Subscript_Y5 = $MR_firstw_S39
  131.                _bounds_error( $_File_Y40, $Line_Y54, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y55 )
  131.             endif
  131.             $LCS_MR_firstw_24 = $MR_firstw_S39
  131.             0[int( $MR_wt_S37, 8 ),$LCS_MR_firstw_24] = -$MR_tc_28
  132.             if ( or( $MR_firstw_S39, -1 + $CS_S36 - $MR_firstw_S39 ) < 0 ) then
  132.                $LB_Y0 = 0
  132.                $UB_Y1 = -1 + $CS_S36
  132.                $Subscript_Y5 = $LCS_MR_firstw_24
  132.                _bounds_error( $_File_Y40, $Line_Y56, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y57 )
  132.             endif
  132.             0[int( $MR_wt_S38, 8 ),$MR_firstw_S39] = $CS_4
  132.          endif
  132.       endif
  133.       return
  133.       end
  133.       
  165.       
  165.       subroutine destroywatch( wt )
   36.       if ( t$40 == 0 ) then
   36.          0[loc( t$53 ),0] = 2
   36.          0[loc( t$54 ),0] = 0
   36.          0[loc( t$55 ),0] = 0
   36.          0[loc( t$50 ),0].L = int( loc( t$39 ), 8 )
   36.          0[loc( t$51 ),0].L = 0
   36.          0[loc( t$52 ),0].L = int( loc( t$49 ), 8 )
   36.          t$40 = __get_dynamic_type( 2, 0[loc( t$50 ),0].L, 0[loc( t$53 ),0], 1, 0[loc( t$51 ),0].L, 0[loc( t$52 ),0].L, 0[loc( t$54 ),0], 0[loc( t$55 ),0] )
   36.       endif
  148.       0[loc( $_allo_P0 ),0].L = 0x1000000000001L
  148.       1[loc( $_allo_P0 ),0].L = loc( 1[loc( wt ),0].L )
  148.       call __deallocate( $_allo_P0, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  148.       $LCS_wt_0 = loc( wt )
  148.       $MR_wt_S0 = 3[$LCS_wt_0,0].L
  148.       $MR_wt_S1 = and( 0xfffffffffffffffeUL, $MR_wt_S0 )
  148.       3[$LCS_wt_0,0].L = $MR_wt_S1
  149.       $ierr_S2 = ierr
  149.       if ( $ierr_S2 /= 0 ) then
  150.          $_StackCntrl_O1 = $_StaticCntrl_O0
  150.          1[loc( $_StackCntrl_O1 ),0].L = loc( substr[c0,0:10] )
  150.          $_StackIolist_O3 = $_StaticIolist_O2
  150.          0[int( pointer to c_union Pointer_union( loc( 3[loc( $_StackIolist_O3 ),0].L ) ), 8 ),0].L = loc( ierr )
  150.          _fwf( pointer to integer (kind=8)( loc( $_StackCntrl_O1 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StackIolist_O3 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O4 ) ) )
  151.          _f90_adjustl( substr[t$107,0:10], substr[c0,0:10] )
  151.          t$108 = 53 + ( _ltrim( substr[t$107,0:10] ) )
  151.          t$110 = int( _alloc( max( 0, t$108 ) ), 8 )
  151.          $LCS_1 = max( 0, t$108 )
  151.          substr[0,t$110:$LCS_1] = //( '**(DestroyWatch)** deallocate TimeCpu returned error ', substr[t$107,0:_ltrim( substr[t$107,0:10] )] )
  151.          call fatalerror( substr[0,t$110:$LCS_1] )
  151.          _free( t$110 )
  151.       endif
  154.       0[loc( $_allo_P1 ),0].L = 0x1000000000001L
  154.       1[loc( $_allo_P1 ),0].L = loc( 10[loc( wt ),0].L )
  154.       call __deallocate( $_allo_P1, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  154.       $LCS_wt_2 = loc( wt )
  154.       $MR_wt_S3 = 12[$LCS_wt_2,0].L
  154.       $MR_wt_S4 = and( 0xfffffffffffffffeUL, $MR_wt_S3 )
  154.       12[$LCS_wt_2,0].L = $MR_wt_S4
  155.       $ierr_S5 = ierr
  155.       if ( $ierr_S5 /= 0 ) then
  156.          $_StackCntrl_O1 = $_StaticCntrl_O5
  156.          1[loc( $_StackCntrl_O1 ),0].L = loc( substr[c0,0:10] )
  156.          $_StackIolist_O7 = $_StaticIolist_O6
  156.          0[int( pointer to c_union Pointer_union( loc( 3[loc( $_StackIolist_O7 ),0].L ) ), 8 ),0].L = loc( ierr )
  156.          _fwf( pointer to integer (kind=8)( loc( $_StackCntrl_O1 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StackIolist_O7 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O4 ) ) )
  157.          _f90_adjustl( substr[t$111,0:10], substr[c0,0:10] )
  157.          t$112 = 54 + ( _ltrim( substr[t$111,0:10] ) )
  157.          t$114 = int( _alloc( max( 0, t$112 ) ), 8 )
  157.          $LCS_3 = max( 0, t$112 )
  157.          substr[0,t$114:$LCS_3] = //( '**(DestroyWatch)** deallocate TimeWall returned error ', substr[t$111,0:_ltrim( substr[t$111,0:10] )] )
  157.          call fatalerror( substr[0,t$114:$LCS_3] )
  157.          _free( t$114 )
  157.       endif
  160.       0[loc( $_allo_P2 ),0].L = 0x1000000000001L
  160.       1[loc( $_allo_P2 ),0].L = loc( 19[loc( wt ),0].L )
  160.       call __deallocate( $_allo_P2, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  160.       $LCS_wt_4 = loc( wt )
  160.       $MR_wt_S6 = 21[$LCS_wt_4,0].L
  160.       $MR_wt_S7 = and( 0xfffffffffffffffeUL, $MR_wt_S6 )
  160.       21[$LCS_wt_4,0].L = $MR_wt_S7
  161.       $ierr_S8 = ierr
  161.       if ( $ierr_S8 /= 0 ) then
  162.          $_StackCntrl_O1 = $_StaticCntrl_O8
  162.          1[loc( $_StackCntrl_O1 ),0].L = loc( substr[c0,0:10] )
  162.          $_StackIolist_O10 = $_StaticIolist_O9
  162.          0[int( pointer to c_union Pointer_union( loc( 3[loc( $_StackIolist_O10 ),0].L ) ), 8 ),0].L = loc( ierr )
  162.          _fwf( pointer to integer (kind=8)( loc( $_StackCntrl_O1 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StackIolist_O10 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O4 ) ) )
  163.          _f90_adjustl( substr[t$115,0:10], substr[c0,0:10] )
  163.          t$116 = 50 + ( _ltrim( substr[t$115,0:10] ) )
  163.          t$118 = int( _alloc( max( 0, t$116 ) ), 8 )
  163.          $LCS_5 = max( 0, t$116 )
  163.          substr[0,t$118:$LCS_5] = //( '**(DestroyWatch)** deallocate Name returned error ', substr[t$115,0:_ltrim( substr[t$115,0:10] )] )
  163.          call fatalerror( substr[0,t$118:$LCS_5] )
  163.          _free( t$118 )
  163.       endif
  165.       return
  165.       end
  165.       
  173.       
  173.       subroutine dumpwatch( wt, unit )
   36.       if ( t$40 == 0 ) then
   36.          0[loc( t$61 ),0] = 2
   36.          0[loc( t$62 ),0] = 0
   36.          0[loc( t$63 ),0] = 0
   36.          0[loc( t$58 ),0].L = int( loc( t$39 ), 8 )
   36.          0[loc( t$59 ),0].L = 0
   36.          0[loc( t$60 ),0].L = int( loc( t$57 ), 8 )
   36.          t$40 = __get_dynamic_type( 2, 0[loc( t$58 ),0].L, 0[loc( t$61 ),0], 1, 0[loc( t$59 ),0].L, 0[loc( t$60 ),0].L, 0[loc( t$62 ),0], 0[loc( t$63 ),0] )
   36.       endif
  183.       call _cpu_time_4( tc )
  184.       $Flat_S0 = _rtc
  185.       $LCS_wt_0 = loc( wt )
  185.       $MR_wt_19 = 56[$LCS_wt_0,0]
  185.       $CS_MR_wt_0 = real( and( 0x7fffffff, _rsh( $Flat_S0, 14 ) ) ) * $MR_wt_19
  189.       $MR_wt_S3 = 8[$LCS_wt_0,0].L
  189.       $MR_wt_S2 = 7[$LCS_wt_0,0].L
  189.       $LCS_1_1 = -1 + $MR_wt_S2 + $MR_wt_S3
  189.       if ( or( $LCS_1_1, -$MR_wt_S2 ) < 0 ) then
  189.          $LB_Y0 = $MR_wt_S2
  189.          $UB_Y1 = $LCS_1_1
  189.          $Subscript_Y5 = 0
  189.          _bounds_error( $_File_Y40, $Line_Y42, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y43 )
  189.       endif
  189.       $LCS_1_2 = -1 + $MR_wt_S2 + $MR_wt_S3
  189.       if ( or( $LCS_1_2, -$MR_wt_S2 ) < 0 ) then
  189.          $LB_Y0 = $MR_wt_S2
  189.          $UB_Y1 = $LCS_1_2
  189.          $Subscript_Y5 = 0
  189.          _bounds_error( $_File_Y40, $Line_Y42, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y43 )
  189.       endif
  189.       $LCS_wt_3 = loc( wt )
  189.       $MR_wt_S5 = 1[$LCS_wt_3,0].L
  189.       $MR_wt_S4 = 9[$LCS_wt_3,0].L
  189.       $LCS_4 = -( $MR_wt_S2 * $MR_wt_S4 )
  189.       $LCS_MR_wt_5 = int( $MR_wt_S5, 8 )
  189.       $MR_wt_S6 = 0[$LCS_MR_wt_5,$LCS_4]
  189.       $MR_tc_25 = tc
  189.       $MR_wt_S7 = $MR_tc_25 + $MR_wt_S6
  189.       0[$LCS_MR_wt_5,$LCS_4] = $MR_wt_S7
  190.       $MR_wt_S8 = 1[$LCS_wt_3,0]
  190.       $CS_S9 = or( $MR_wt_S8 - $MR_wt_S2, $MR_wt_S2 + -1 + $MR_wt_S3 - $MR_wt_S8 ) >= 0
  190.       if ( $CS_S9 == .false. ) then
  190.          $LB_Y0 = $MR_wt_S2
  190.          $UB_Y1 = -1 + $MR_wt_S2 + $MR_wt_S3
  190.          $Subscript_Y5 = $MR_wt_S8
  190.          _bounds_error( $_File_Y40, $Line_Y45, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y46 )
  190.       endif
  190.       if ( $CS_S9 == .false. ) then
  190.          $LB_Y0 = $MR_wt_S2
  190.          $UB_Y1 = -1 + $MR_wt_S2 + $MR_wt_S3
  190.          $Subscript_Y5 = $MR_wt_S8
  190.          _bounds_error( $_File_Y40, $Line_Y45, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y46 )
  190.       endif
  190.       $LCS_MR_wt_6 = ( $MR_wt_S8 - $MR_wt_S2 ) * $MR_wt_S4
  190.       $LCS_MR_wt_7 = int( $MR_wt_S5, 8 )
  190.       $MR_wt_S10 = 0[$LCS_MR_wt_7,$LCS_MR_wt_6]
  190.       $MR_wt_S11 = $MR_tc_25 + $MR_wt_S10
  190.       0[$LCS_MR_wt_7,$LCS_MR_wt_6] = $MR_wt_S11
  191.       $LCS_wt_8 = loc( wt )
  191.       $MR_wt_S13 = 17[$LCS_wt_8,0].L
  191.       $MR_wt_S12 = 16[$LCS_wt_8,0].L
  191.       $LCS_1_9 = -1 + $MR_wt_S12 + $MR_wt_S13
  191.       if ( or( $LCS_1_9, -$MR_wt_S12 ) < 0 ) then
  191.          $LB_Y0 = $MR_wt_S12
  191.          $UB_Y1 = $LCS_1_9
  191.          $Subscript_Y5 = 0
  191.          _bounds_error( $_File_Y40, $Line_Y48, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y49 )
  191.       endif
  191.       $LCS_1_10 = -1 + $MR_wt_S12 + $MR_wt_S13
  191.       if ( or( $LCS_1_10, -$MR_wt_S12 ) < 0 ) then
  191.          $LB_Y0 = $MR_wt_S12
  191.          $UB_Y1 = $LCS_1_10
  191.          $Subscript_Y5 = 0
  191.          _bounds_error( $_File_Y40, $Line_Y48, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y49 )
  191.       endif
  191.       $LCS_wt_11 = loc( wt )
  191.       $MR_wt_S15 = 10[$LCS_wt_11,0].L
  191.       $MR_wt_S14 = 18[$LCS_wt_11,0].L
  191.       $LCS_12 = -( $MR_wt_S12 * $MR_wt_S14 )
  191.       $LCS_MR_wt_13 = int( $MR_wt_S15, 8 )
  191.       $MR_wt_S16 = 0[$LCS_MR_wt_13,$LCS_12]
  191.       $CS_MR_wt_2 = $CS_MR_wt_0
  191.       $MR_wt_S17 = $CS_MR_wt_2 + $MR_wt_S16
  191.       0[$LCS_MR_wt_13,$LCS_12] = $MR_wt_S17
  192.       $CS_S18 = or( $MR_wt_S8 - $MR_wt_S12, $MR_wt_S12 + -1 + $MR_wt_S13 - $MR_wt_S8 ) >= 0
  192.       if ( $CS_S18 == .false. ) then
  192.          $LB_Y0 = $MR_wt_S12
  192.          $UB_Y1 = -1 + $MR_wt_S12 + $MR_wt_S13
  192.          $Subscript_Y5 = $MR_wt_S8
  192.          _bounds_error( $_File_Y40, $Line_Y51, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y52 )
  192.       endif
  192.       if ( $CS_S18 == .false. ) then
  192.          $LB_Y0 = $MR_wt_S12
  192.          $UB_Y1 = -1 + $MR_wt_S12 + $MR_wt_S13
  192.          $Subscript_Y5 = $MR_wt_S8
  192.          _bounds_error( $_File_Y40, $Line_Y51, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y52 )
  192.       endif
  192.       $LCS_MR_wt_14 = ( $MR_wt_S8 - $MR_wt_S12 ) * $MR_wt_S14
  192.       $LCS_MR_wt_15 = int( $MR_wt_S15, 8 )
  192.       $MR_wt_S19 = 0[$LCS_MR_wt_15,$LCS_MR_wt_14]
  192.       $MR_wt_S20 = $CS_MR_wt_2 + $MR_wt_S19
  192.       0[$LCS_MR_wt_15,$LCS_MR_wt_14] = $MR_wt_S20
  196.       $LCS_unit_16 = loc( unit )
  196.       if ( cri_pointer( 0 ) /= loc( 0[$LCS_unit_16,0] ) ) then
  197.          $MR_unit_34 = 0[$LCS_unit_16,0]
  197.          $Unit_temp_O0 = $MR_unit_34
  197.          $_StackCntrl_O4 = $_StaticCntrl_O3
  197.          $MR_StackCntrl_S21 = loc( $Unit_temp_O0 )
  197.          1[loc( $_StackCntrl_O4 ),0].L = $MR_StackCntrl_S21
  197.          _fwf( pointer to integer (kind=8)( loc( $_StackCntrl_O4 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StaticIolist_O5 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O7 ) ) )
  198.          $LCS_wt_17 = loc( wt )
  198.          $MR_wt_S22 = 0[$LCS_wt_17,0]
  198.          if ( $MR_wt_S22 > 0 ) then
  198.             $I_L198_S23 = 0
  201.             $LIS_S41 = $MR_wt_S22
  199.             $LIS_E5 = int( pointer to c_union Pointer_union( loc( 3[loc( $_StackIolist_O10 ),0].L ) ), 8 )
  199.             $LIS_E4 = $MR_unit_34
  200.             $LIS_E3 = loc( t$134 )
  200.             $LIS_E2 = loc( t$128 )
  200.             $LIS_E1 = loc( t$122 )
  200.             do
  200.                $MR_wt_S25 = 25[$LCS_wt_17,0].L
  200.                $MR_wt_S24 = 26[$LCS_wt_17,0].L
  200.                $LCS_IL198_18 = 1 + $I_L198_S23
  200.                $LCS_1_19 = -1 + $MR_wt_S24 + $MR_wt_S25
  200.                if ( ( $LCS_IL198_18 < $MR_wt_S25 .or. $LCS_IL198_18 > $LCS_1_19 ) /= .false. ) then
  200.                   substr[t$123,0:12] = 'Watches.f90'
  200.                   substr[t$124,0:5] = 'NAME'
  200.                   t$125 = $MR_wt_S25
  200.                   t$126 = $LCS_1_19
  200.                   t$127 = $LCS_IL198_18
  200.                   $Con_P107 = 200
  200.                   $Con_P108 = 1
  200.                   call _bounds_error( substr[t$123,0:12], $Con_P107, substr[t$124,0:5], $Con_P108, t$125, t$126, t$127, 0[$LIS_E1,0].L )
  200.                endif
  200.                $MR_wt_S27 = 7[$LCS_wt_17,0].L
  200.                $MR_wt_S26 = 8[$LCS_wt_17,0].L
  200.                $LCS_IL198_20 = 1 + $I_L198_S23
  200.                $LCS_1_21 = -1 + $MR_wt_S26 + $MR_wt_S27
  200.                if ( ( $LCS_IL198_20 < $MR_wt_S27 .or. $LCS_IL198_20 > $LCS_1_21 ) /= .false. ) then
  200.                   substr[t$129,0:12] = 'Watches.f90'
  200.                   substr[t$130,0:8] = 'TIMECPU'
  200.                   t$131 = $MR_wt_S27
  200.                   t$132 = $LCS_1_21
  200.                   t$133 = $LCS_IL198_20
  200.                   $Con_P107 = 200
  200.                   $Con_P108 = 1
  200.                   call _bounds_error( substr[t$129,0:12], $Con_P107, substr[t$130,0:8], $Con_P108, t$131, t$132, t$133, 0[$LIS_E2,0].L )
  200.                endif
  200.                $MR_wt_S29 = 16[$LCS_wt_17,0].L
  200.                $MR_wt_S28 = 17[$LCS_wt_17,0].L
  200.                $LCS_IL198_22 = 1 + $I_L198_S23
  200.                $LCS_1_23 = -1 + $MR_wt_S28 + $MR_wt_S29
  200.                if ( ( $LCS_IL198_22 < $MR_wt_S29 .or. $LCS_IL198_22 > $LCS_1_23 ) /= .false. ) then
  200.                   substr[t$135,0:12] = 'Watches.f90'
  200.                   substr[t$136,0:9] = 'TIMEWALL'
  200.                   t$137 = $MR_wt_S29
  200.                   t$138 = $LCS_1_23
  200.                   t$139 = $LCS_IL198_22
  200.                   $Con_P107 = 200
  200.                   $Con_P108 = 1
  200.                   call _bounds_error( substr[t$135,0:12], $Con_P107, substr[t$136,0:9], $Con_P108, t$137, t$138, t$139, 0[$LIS_E3,0].L )
  200.                endif
  199.                $Unit_temp_O1 = $LIS_E4
  199.                $_StackCntrl_O4 = $_StaticCntrl_O8
  199.                $MR_StackCntrl_S30 = loc( $Unit_temp_O1 )
  199.                1[loc( $_StackCntrl_O4 ),0].L = $MR_StackCntrl_S30
  199.                $_StackIolist_O10 = $_StaticIolist_O9
  199.                $MR_wt_S32 = 27[$LCS_wt_17,0].L
  199.                $MR_wt_S31 = 25[$LCS_wt_17,0].L
  199.                0[$LIS_E5,0].L = loc( substr[19[$LCS_wt_17,0].L,( 1 + $I_L198_S23 - $MR_wt_S31 ) * $MR_wt_S32:16] )
  199.                $_StackDv_P1 = $_StaticDV_P9
  199.                $MR_wt_S33 = 1[$LCS_wt_17,0].L
  199.                $LCS_wt_24 = loc( 0[int( $MR_wt_S33, 8 ),0] )
  199.                0[loc( $_StackDv_P1 ),0].L = pointer to array[1] of real( $LCS_wt_24 )
  199.                1[loc( $_StackDv_P1 ),0].L = 32
  199.                2[loc( $_StackDv_P1 ),0].L = and( 0xffffffffffffffe0UL, 2[loc( $_StackDv_P1 ),0].L )
  199.                23[loc( $_StackDv_P1 )].B = 1
  199.                4[loc( $_StackDv_P1 ),0].L = int( $LCS_wt_24, 8 )
  199.                5[loc( $_StackDv_P1 ),0].L = 32
  199.                21[loc( $_StackDv_P1 )].B = 0
  199.                6[loc( $_StackDv_P1 ),0] = 0
  199.                $MR_wt_S34 = 7[$LCS_wt_17,0].L
  199.                6[loc( $_StackDv_P1 ),0].L = $MR_wt_S34
  199.                $MR_wt_S35 = 8[$LCS_wt_17,0].L
  199.                7[loc( $_StackDv_P1 ),0].L = $MR_wt_S35
  199.                $MR_wt_S36 = 9[$LCS_wt_17,0].L
  199.                8[loc( $_StackDv_P1 ),0].L = $MR_wt_S36
  199.                6[loc( $_StackIolist_O10 ),0].L = int( loc( $_StackDv_P1 ), 8 )
  199.                $LCS_IL198_26 = 1 + $I_L198_S23
  199.                $DVindex_O11 = $LCS_IL198_26
  199.                8[loc( $_StackIolist_O10 ),0].L = int( loc( $DVindex_O11 ), 8 )
  199.                $_StackDv_P2 = $_StaticDV_P10
  199.                $MR_wt_S37 = 10[$LCS_wt_17,0].L
  199.                $LCS_wt_25 = loc( 0[int( $MR_wt_S37, 8 ),0] )
  199.                0[loc( $_StackDv_P2 ),0].L = pointer to array[1] of real( $LCS_wt_25 )
  199.                1[loc( $_StackDv_P2 ),0].L = 32
  199.                2[loc( $_StackDv_P2 ),0].L = and( 0xffffffffffffffe0UL, 2[loc( $_StackDv_P2 ),0].L )
  199.                23[loc( $_StackDv_P2 )].B = 1
  199.                4[loc( $_StackDv_P2 ),0].L = int( $LCS_wt_25, 8 )
  199.                5[loc( $_StackDv_P2 ),0].L = 32
  199.                21[loc( $_StackDv_P2 )].B = 0
  199.                6[loc( $_StackDv_P2 ),0] = 0
  199.                $MR_wt_S38 = 16[$LCS_wt_17,0].L
  199.                6[loc( $_StackDv_P2 ),0].L = $MR_wt_S38
  199.                $MR_wt_S39 = 17[$LCS_wt_17,0].L
  199.                7[loc( $_StackDv_P2 ),0].L = $MR_wt_S39
  199.                $MR_wt_S40 = 18[$LCS_wt_17,0].L
  199.                8[loc( $_StackDv_P2 ),0].L = $MR_wt_S40
  199.                10[loc( $_StackIolist_O10 ),0].L = int( loc( $_StackDv_P2 ), 8 )
  199.                $DVindex_O12 = $LCS_IL198_26
  199.                12[loc( $_StackIolist_O10 ),0].L = int( loc( $DVindex_O12 ), 8 )
  199.                2[loc( $_StackDv_P1 ),0].L = or( 65600, and( -4294967265UL, 2[loc( $_StackDv_P1 ),0].L ) )
  199.                2[loc( $_StackDv_P2 ),0].L = or( 65600, and( -4294967265UL, 2[loc( $_StackDv_P2 ),0].L ) )
  199.                _fwf( pointer to integer (kind=8)( loc( $_StackCntrl_O4 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StackIolist_O10 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O7 ) ) )
  201.                $I_L198_S23 = 1 + $I_L198_S23
  201.                if ( $I_L198_S23 >= $LIS_S41 ) exit
  201.             enddo
  201.          endif
  203.          $LCS_wt_27 = loc( wt )
  203.          $MR_wt_S43 = 26[$LCS_wt_27,0].L
  203.          $MR_wt_S42 = 25[$LCS_wt_27,0].L
  203.          $LCS_1_28 = -1 + $MR_wt_S42 + $MR_wt_S43
  203.          if ( ( 0 < $MR_wt_S42 .or. 0 > $LCS_1_28 ) /= .false. ) then
  203.             substr[t$141,0:12] = 'Watches.f90'
  203.             substr[t$142,0:5] = 'NAME'
  203.             t$125 = $MR_wt_S42
  203.             t$126 = $LCS_1_28
  203.             $Con_P107 = 203
  203.             $Con_P108 = 1
  203.             $Con_P109 = 0
  203.             call _bounds_error( substr[t$141,0:12], $Con_P107, substr[t$142,0:5], $Con_P108, t$125, t$126, $Con_P109, 0[loc( t$140 ),0].L )
  203.          endif
  203.          $LCS_wt_29 = loc( wt )
  203.          $MR_wt_S45 = 8[$LCS_wt_29,0].L
  203.          $MR_wt_S44 = 7[$LCS_wt_29,0].L
  203.          $LCS_1_30 = -1 + $MR_wt_S44 + $MR_wt_S45
  203.          if ( ( 0 < $MR_wt_S44 .or. 0 > $LCS_1_30 ) /= .false. ) then
  203.             substr[t$144,0:12] = 'Watches.f90'
  203.             substr[t$145,0:8] = 'TIMECPU'
  203.             t$127 = $MR_wt_S44
  203.             t$131 = $LCS_1_30
  203.             $Con_P107 = 203
  203.             $Con_P108 = 1
  203.             $Con_P109 = 0
  203.             call _bounds_error( substr[t$144,0:12], $Con_P107, substr[t$145,0:8], $Con_P108, t$127, t$131, $Con_P109, 0[loc( t$143 ),0].L )
  203.          endif
  203.          $LCS_wt_31 = loc( wt )
  203.          $MR_wt_S47 = 17[$LCS_wt_31,0].L
  203.          $MR_wt_S46 = 16[$LCS_wt_31,0].L
  203.          $LCS_1_32 = -1 + $MR_wt_S46 + $MR_wt_S47
  203.          if ( ( 0 < $MR_wt_S46 .or. 0 > $LCS_1_32 ) /= .false. ) then
  203.             substr[t$147,0:12] = 'Watches.f90'
  203.             substr[t$148,0:9] = 'TIMEWALL'
  203.             t$132 = $MR_wt_S46
  203.             t$133 = $LCS_1_32
  203.             $Con_P107 = 203
  203.             $Con_P108 = 1
  203.             $Con_P109 = 0
  203.             call _bounds_error( substr[t$147,0:12], $Con_P107, substr[t$148,0:9], $Con_P108, t$132, t$133, $Con_P109, 0[loc( t$146 ),0].L )
  203.          endif
  202.          $Unit_temp_O2 = $MR_unit_34
  202.          $_StackCntrl_O4 = $_StaticCntrl_O13
  202.          $MR_StackCntrl_S48 = loc( $Unit_temp_O2 )
  202.          1[loc( $_StackCntrl_O4 ),0].L = $MR_StackCntrl_S48
  202.          $_StackIolist_O15 = $_StaticIolist_O14
  202.          $LCS_wt_33 = loc( wt )
  202.          $MR_wt_S49 = 27[$LCS_wt_33,0].L
  202.          $MR_wt_S50 = 25[$LCS_wt_33,0].L
  202.          0[int( pointer to c_union Pointer_union( loc( 3[loc( $_StackIolist_O15 ),0].L ) ), 8 ),0].L = loc( substr[19[$LCS_wt_33,0].L,-( $MR_wt_S49 * $MR_wt_S50 ):16] )
  202.          $_StackDv_P3 = $_StaticDV_P11
  202.          $MR_wt_S51 = 1[$LCS_wt_33,0].L
  202.          $LCS_wt_34 = loc( 0[int( $MR_wt_S51, 8 ),0] )
  202.          0[loc( $_StackDv_P3 ),0].L = pointer to array[1] of real( $LCS_wt_34 )
  202.          1[loc( $_StackDv_P3 ),0].L = 32
  202.          2[loc( $_StackDv_P3 ),0].L = and( 0xffffffffffffffe0UL, 2[loc( $_StackDv_P3 ),0].L )
  202.          23[loc( $_StackDv_P3 )].B = 1
  202.          4[loc( $_StackDv_P3 ),0].L = int( $LCS_wt_34, 8 )
  202.          5[loc( $_StackDv_P3 ),0].L = 32
  202.          21[loc( $_StackDv_P3 )].B = 0
  202.          6[loc( $_StackDv_P3 ),0] = 0
  202.          $MR_wt_S52 = 7[$LCS_wt_33,0].L
  202.          6[loc( $_StackDv_P3 ),0].L = $MR_wt_S52
  202.          $MR_wt_S53 = 8[$LCS_wt_33,0].L
  202.          7[loc( $_StackDv_P3 ),0].L = $MR_wt_S53
  202.          $MR_wt_S54 = 9[$LCS_wt_33,0].L
  202.          8[loc( $_StackDv_P3 ),0].L = $MR_wt_S54
  202.          6[loc( $_StackIolist_O15 ),0].L = int( loc( $_StackDv_P3 ), 8 )
  202.          $DVindex_O16 = 0
  202.          8[loc( $_StackIolist_O15 ),0].L = int( loc( $DVindex_O16 ), 8 )
  202.          $_StackDv_P4 = $_StaticDV_P12
  202.          $MR_wt_S55 = 10[$LCS_wt_33,0].L
  202.          $LCS_wt_35 = loc( 0[int( $MR_wt_S55, 8 ),0] )
  202.          0[loc( $_StackDv_P4 ),0].L = pointer to array[1] of real( $LCS_wt_35 )
  202.          1[loc( $_StackDv_P4 ),0].L = 32
  202.          2[loc( $_StackDv_P4 ),0].L = and( 0xffffffffffffffe0UL, 2[loc( $_StackDv_P4 ),0].L )
  202.          23[loc( $_StackDv_P4 )].B = 1
  202.          4[loc( $_StackDv_P4 ),0].L = int( $LCS_wt_35, 8 )
  202.          5[loc( $_StackDv_P4 ),0].L = 32
  202.          21[loc( $_StackDv_P4 )].B = 0
  202.          6[loc( $_StackDv_P4 ),0] = 0
  202.          $MR_wt_S56 = 16[$LCS_wt_33,0].L
  202.          6[loc( $_StackDv_P4 ),0].L = $MR_wt_S56
  202.          $MR_wt_S57 = 17[$LCS_wt_33,0].L
  202.          7[loc( $_StackDv_P4 ),0].L = $MR_wt_S57
  202.          $MR_wt_S58 = 18[$LCS_wt_33,0].L
  202.          8[loc( $_StackDv_P4 ),0].L = $MR_wt_S58
  202.          10[loc( $_StackIolist_O15 ),0].L = int( loc( $_StackDv_P4 ), 8 )
  202.          $DVindex_O17 = 0
  202.          12[loc( $_StackIolist_O15 ),0].L = int( loc( $DVindex_O17 ), 8 )
  202.          2[loc( $_StackDv_P3 ),0].L = or( 65600, and( -4294967265UL, 2[loc( $_StackDv_P3 ),0].L ) )
  202.          2[loc( $_StackDv_P4 ),0].L = or( 65600, and( -4294967265UL, 2[loc( $_StackDv_P4 ),0].L ) )
  202.          _fwf( pointer to integer (kind=8)( loc( $_StackCntrl_O4 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StackIolist_O15 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O7 ) ) )
  202.       else
  205.          _fwf( pointer to integer (kind=8)( loc( $_StaticCntrl_O18 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StaticIolist_O19 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O7 ) ) )
  206.          $LCS_wt_36 = loc( wt )
  206.          $MR_wt_S59 = 0[$LCS_wt_36,0]
  206.          if ( $MR_wt_S59 > 0 ) then
  206.             $I_L206_S60 = 0
  209.             $LIS_S77 = $MR_wt_S59
  207.             $LIS_E10 = int( pointer to c_union Pointer_union( loc( 3[loc( $_StackIolist_O23 ),0].L ) ), 8 )
  208.             $LIS_E9 = loc( t$158 )
  208.             $LIS_E8 = loc( t$155 )
  208.             $LIS_E7 = loc( t$152 )
  208.             do
  208.                $MR_wt_S62 = 25[$LCS_wt_36,0].L
  208.                $MR_wt_S61 = 26[$LCS_wt_36,0].L
  208.                $LCS_IL206_37 = 1 + $I_L206_S60
  208.                $LCS_1_38 = -1 + $MR_wt_S61 + $MR_wt_S62
  208.                if ( ( $LCS_IL206_37 < $MR_wt_S62 .or. $LCS_IL206_37 > $LCS_1_38 ) /= .false. ) then
  208.                   substr[t$153,0:12] = 'Watches.f90'
  208.                   substr[t$154,0:5] = 'NAME'
  208.                   t$137 = $MR_wt_S62
  208.                   t$138 = $LCS_1_38
  208.                   t$139 = $LCS_IL206_37
  208.                   $Con_P107 = 208
  208.                   $Con_P108 = 1
  208.                   call _bounds_error( substr[t$153,0:12], $Con_P107, substr[t$154,0:5], $Con_P108, t$137, t$138, t$139, 0[$LIS_E7,0].L )
  208.                endif
  208.                $MR_wt_S64 = 7[$LCS_wt_36,0].L
  208.                $MR_wt_S63 = 8[$LCS_wt_36,0].L
  208.                $LCS_IL206_39 = 1 + $I_L206_S60
  208.                $LCS_1_40 = -1 + $MR_wt_S63 + $MR_wt_S64
  208.                if ( ( $LCS_IL206_39 < $MR_wt_S64 .or. $LCS_IL206_39 > $LCS_1_40 ) /= .false. ) then
  208.                   substr[t$156,0:12] = 'Watches.f90'
  208.                   substr[t$157,0:8] = 'TIMECPU'
  208.                   t$125 = $MR_wt_S64
  208.                   t$126 = $LCS_1_40
  208.                   t$127 = $LCS_IL206_39
  208.                   $Con_P107 = 208
  208.                   $Con_P108 = 1
  208.                   call _bounds_error( substr[t$156,0:12], $Con_P107, substr[t$157,0:8], $Con_P108, t$125, t$126, t$127, 0[$LIS_E8,0].L )
  208.                endif
  208.                $MR_wt_S66 = 16[$LCS_wt_36,0].L
  208.                $MR_wt_S65 = 17[$LCS_wt_36,0].L
  208.                $LCS_IL206_41 = 1 + $I_L206_S60
  208.                $LCS_1_42 = -1 + $MR_wt_S65 + $MR_wt_S66
  208.                if ( ( $LCS_IL206_41 < $MR_wt_S66 .or. $LCS_IL206_41 > $LCS_1_42 ) /= .false. ) then
  208.                   substr[t$159,0:12] = 'Watches.f90'
  208.                   substr[t$160,0:9] = 'TIMEWALL'
  208.                   t$131 = $MR_wt_S66
  208.                   t$132 = $LCS_1_42
  208.                   t$133 = $LCS_IL206_41
  208.                   $Con_P107 = 208
  208.                   $Con_P108 = 1
  208.                   call _bounds_error( substr[t$159,0:12], $Con_P107, substr[t$160,0:9], $Con_P108, t$131, t$132, t$133, 0[$LIS_E9,0].L )
  208.                endif
  207.                $_StackIolist_O23 = $_StaticIolist_O22
  207.                $MR_wt_S68 = 27[$LCS_wt_36,0].L
  207.                $MR_wt_S67 = 25[$LCS_wt_36,0].L
  207.                0[$LIS_E10,0].L = loc( substr[19[$LCS_wt_36,0].L,( 1 + $I_L206_S60 - $MR_wt_S67 ) * $MR_wt_S68:16] )
  207.                $_StackDv_P5 = $_StaticDV_P13
  207.                $MR_wt_S69 = 1[$LCS_wt_36,0].L
  207.                $LCS_wt_43 = loc( 0[int( $MR_wt_S69, 8 ),0] )
  207.                0[loc( $_StackDv_P5 ),0].L = pointer to array[1] of real( $LCS_wt_43 )
  207.                1[loc( $_StackDv_P5 ),0].L = 32
  207.                2[loc( $_StackDv_P5 ),0].L = and( 0xffffffffffffffe0UL, 2[loc( $_StackDv_P5 ),0].L )
  207.                23[loc( $_StackDv_P5 )].B = 1
  207.                4[loc( $_StackDv_P5 ),0].L = int( $LCS_wt_43, 8 )
  207.                5[loc( $_StackDv_P5 ),0].L = 32
  207.                21[loc( $_StackDv_P5 )].B = 0
  207.                6[loc( $_StackDv_P5 ),0] = 0
  207.                $MR_wt_S70 = 7[$LCS_wt_36,0].L
  207.                6[loc( $_StackDv_P5 ),0].L = $MR_wt_S70
  207.                $MR_wt_S71 = 8[$LCS_wt_36,0].L
  207.                7[loc( $_StackDv_P5 ),0].L = $MR_wt_S71
  207.                $MR_wt_S72 = 9[$LCS_wt_36,0].L
  207.                8[loc( $_StackDv_P5 ),0].L = $MR_wt_S72
  207.                6[loc( $_StackIolist_O23 ),0].L = int( loc( $_StackDv_P5 ), 8 )
  207.                $LCS_IL206_45 = 1 + $I_L206_S60
  207.                $DVindex_O24 = $LCS_IL206_45
  207.                8[loc( $_StackIolist_O23 ),0].L = int( loc( $DVindex_O24 ), 8 )
  207.                $_StackDv_P6 = $_StaticDV_P14
  207.                $MR_wt_S73 = 10[$LCS_wt_36,0].L
  207.                $LCS_wt_44 = loc( 0[int( $MR_wt_S73, 8 ),0] )
  207.                0[loc( $_StackDv_P6 ),0].L = pointer to array[1] of real( $LCS_wt_44 )
  207.                1[loc( $_StackDv_P6 ),0].L = 32
  207.                2[loc( $_StackDv_P6 ),0].L = and( 0xffffffffffffffe0UL, 2[loc( $_StackDv_P6 ),0].L )
  207.                23[loc( $_StackDv_P6 )].B = 1
  207.                4[loc( $_StackDv_P6 ),0].L = int( $LCS_wt_44, 8 )
  207.                5[loc( $_StackDv_P6 ),0].L = 32
  207.                21[loc( $_StackDv_P6 )].B = 0
  207.                6[loc( $_StackDv_P6 ),0] = 0
  207.                $MR_wt_S74 = 16[$LCS_wt_36,0].L
  207.                6[loc( $_StackDv_P6 ),0].L = $MR_wt_S74
  207.                $MR_wt_S75 = 17[$LCS_wt_36,0].L
  207.                7[loc( $_StackDv_P6 ),0].L = $MR_wt_S75
  207.                $MR_wt_S76 = 18[$LCS_wt_36,0].L
  207.                8[loc( $_StackDv_P6 ),0].L = $MR_wt_S76
  207.                10[loc( $_StackIolist_O23 ),0].L = int( loc( $_StackDv_P6 ), 8 )
  207.                $DVindex_O25 = $LCS_IL206_45
  207.                12[loc( $_StackIolist_O23 ),0].L = int( loc( $DVindex_O25 ), 8 )
  207.                2[loc( $_StackDv_P5 ),0].L = or( 65600, and( -4294967265UL, 2[loc( $_StackDv_P5 ),0].L ) )
  207.                2[loc( $_StackDv_P6 ),0].L = or( 65600, and( -4294967265UL, 2[loc( $_StackDv_P6 ),0].L ) )
  207.                _fwf( pointer to integer (kind=8)( loc( $_StaticCntrl_O21 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StackIolist_O23 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O7 ) ) )
  209.                $I_L206_S60 = 1 + $I_L206_S60
  209.                if ( $I_L206_S60 >= $LIS_S77 ) exit
  209.             enddo
  209.          endif
  211.          $LCS_wt_46 = loc( wt )
  211.          $MR_wt_S79 = 26[$LCS_wt_46,0].L
  211.          $MR_wt_S78 = 25[$LCS_wt_46,0].L
  211.          $LCS_1_47 = -1 + $MR_wt_S78 + $MR_wt_S79
  211.          if ( ( 0 < $MR_wt_S78 .or. 0 > $LCS_1_47 ) /= .false. ) then
  211.             substr[t$162,0:12] = 'Watches.f90'
  211.             substr[t$163,0:5] = 'NAME'
  211.             t$137 = $MR_wt_S78
  211.             t$138 = $LCS_1_47
  211.             $Con_P107 = 211
  211.             $Con_P108 = 1
  211.             $Con_P109 = 0
  211.             call _bounds_error( substr[t$162,0:12], $Con_P107, substr[t$163,0:5], $Con_P108, t$137, t$138, $Con_P109, 0[loc( t$161 ),0].L )
  211.          endif
  211.          $LCS_wt_48 = loc( wt )
  211.          $MR_wt_S81 = 8[$LCS_wt_48,0].L
  211.          $MR_wt_S80 = 7[$LCS_wt_48,0].L
  211.          $LCS_1_49 = -1 + $MR_wt_S80 + $MR_wt_S81
  211.          if ( ( 0 < $MR_wt_S80 .or. 0 > $LCS_1_49 ) /= .false. ) then
  211.             substr[t$165,0:12] = 'Watches.f90'
  211.             substr[t$166,0:8] = 'TIMECPU'
  211.             t$139 = $MR_wt_S80
  211.             t$125 = $LCS_1_49
  211.             $Con_P107 = 211
  211.             $Con_P108 = 1
  211.             $Con_P109 = 0
  211.             call _bounds_error( substr[t$165,0:12], $Con_P107, substr[t$166,0:8], $Con_P108, t$139, t$125, $Con_P109, 0[loc( t$164 ),0].L )
  211.          endif
  211.          $LCS_wt_50 = loc( wt )
  211.          $MR_wt_S83 = 17[$LCS_wt_50,0].L
  211.          $MR_wt_S82 = 16[$LCS_wt_50,0].L
  211.          $LCS_1_51 = -1 + $MR_wt_S82 + $MR_wt_S83
  211.          if ( ( 0 < $MR_wt_S82 .or. 0 > $LCS_1_51 ) /= .false. ) then
  211.             substr[t$168,0:12] = 'Watches.f90'
  211.             substr[t$169,0:9] = 'TIMEWALL'
  211.             t$126 = $MR_wt_S82
  211.             t$127 = $LCS_1_51
  211.             $Con_P107 = 211
  211.             $Con_P108 = 1
  211.             $Con_P109 = 0
  211.             call _bounds_error( substr[t$168,0:12], $Con_P107, substr[t$169,0:9], $Con_P108, t$126, t$127, $Con_P109, 0[loc( t$167 ),0].L )
  211.          endif
  210.          $_StackIolist_O28 = $_StaticIolist_O27
  210.          $LCS_wt_52 = loc( wt )
  210.          $MR_wt_S84 = 27[$LCS_wt_52,0].L
  210.          $MR_wt_S85 = 25[$LCS_wt_52,0].L
  210.          0[int( pointer to c_union Pointer_union( loc( 3[loc( $_StackIolist_O28 ),0].L ) ), 8 ),0].L = loc( substr[19[$LCS_wt_52,0].L,-( $MR_wt_S84 * $MR_wt_S85 ):16] )
  210.          $_StackDv_P7 = $_StaticDV_P15
  210.          $MR_wt_S86 = 1[$LCS_wt_52,0].L
  210.          $LCS_wt_53 = loc( 0[int( $MR_wt_S86, 8 ),0] )
  210.          0[loc( $_StackDv_P7 ),0].L = pointer to array[1] of real( $LCS_wt_53 )
  210.          1[loc( $_StackDv_P7 ),0].L = 32
  210.          2[loc( $_StackDv_P7 ),0].L = and( 0xffffffffffffffe0UL, 2[loc( $_StackDv_P7 ),0].L )
  210.          23[loc( $_StackDv_P7 )].B = 1
  210.          4[loc( $_StackDv_P7 ),0].L = int( $LCS_wt_53, 8 )
  210.          5[loc( $_StackDv_P7 ),0].L = 32
  210.          21[loc( $_StackDv_P7 )].B = 0
  210.          6[loc( $_StackDv_P7 ),0] = 0
  210.          $MR_wt_S87 = 7[$LCS_wt_52,0].L
  210.          6[loc( $_StackDv_P7 ),0].L = $MR_wt_S87
  210.          $MR_wt_S88 = 8[$LCS_wt_52,0].L
  210.          7[loc( $_StackDv_P7 ),0].L = $MR_wt_S88
  210.          $MR_wt_S89 = 9[$LCS_wt_52,0].L
  210.          8[loc( $_StackDv_P7 ),0].L = $MR_wt_S89
  210.          6[loc( $_StackIolist_O28 ),0].L = int( loc( $_StackDv_P7 ), 8 )
  210.          $DVindex_O29 = 0
  210.          8[loc( $_StackIolist_O28 ),0].L = int( loc( $DVindex_O29 ), 8 )
  210.          $_StackDv_P8 = $_StaticDV_P16
  210.          $MR_wt_S90 = 10[$LCS_wt_52,0].L
  210.          $LCS_wt_54 = loc( 0[int( $MR_wt_S90, 8 ),0] )
  210.          0[loc( $_StackDv_P8 ),0].L = pointer to array[1] of real( $LCS_wt_54 )
  210.          1[loc( $_StackDv_P8 ),0].L = 32
  210.          2[loc( $_StackDv_P8 ),0].L = and( 0xffffffffffffffe0UL, 2[loc( $_StackDv_P8 ),0].L )
  210.          23[loc( $_StackDv_P8 )].B = 1
  210.          4[loc( $_StackDv_P8 ),0].L = int( $LCS_wt_54, 8 )
  210.          5[loc( $_StackDv_P8 ),0].L = 32
  210.          21[loc( $_StackDv_P8 )].B = 0
  210.          6[loc( $_StackDv_P8 ),0] = 0
  210.          $MR_wt_S91 = 16[$LCS_wt_52,0].L
  210.          6[loc( $_StackDv_P8 ),0].L = $MR_wt_S91
  210.          $MR_wt_S92 = 17[$LCS_wt_52,0].L
  210.          7[loc( $_StackDv_P8 ),0].L = $MR_wt_S92
  210.          $MR_wt_S93 = 18[$LCS_wt_52,0].L
  210.          8[loc( $_StackDv_P8 ),0].L = $MR_wt_S93
  210.          10[loc( $_StackIolist_O28 ),0].L = int( loc( $_StackDv_P8 ), 8 )
  210.          $DVindex_O30 = 0
  210.          12[loc( $_StackIolist_O28 ),0].L = int( loc( $DVindex_O30 ), 8 )
  210.          2[loc( $_StackDv_P7 ),0].L = or( 65600, and( -4294967265UL, 2[loc( $_StackDv_P7 ),0].L ) )
  210.          2[loc( $_StackDv_P8 ),0].L = or( 65600, and( -4294967265UL, 2[loc( $_StackDv_P8 ),0].L ) )
  210.          _fwf( pointer to integer (kind=8)( loc( $_StaticCntrl_O26 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StackIolist_O28 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O7 ) ) )
  210.       endif
  216.       $LCS_wt_55 = loc( wt )
  216.       $MR_wt_S95 = 8[$LCS_wt_55,0].L
  216.       $MR_wt_S94 = 7[$LCS_wt_55,0].L
  216.       $LCS_1_56 = -1 + $MR_wt_S94 + $MR_wt_S95
  216.       if ( or( $LCS_1_56, -$MR_wt_S94 ) < 0 ) then
  216.          $LB_Y0 = $MR_wt_S94
  216.          $UB_Y1 = $LCS_1_56
  216.          $Subscript_Y5 = 0
  216.          _bounds_error( $_File_Y40, $Line_Y54, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y55 )
  216.       endif
  216.       $LCS_1_57 = -1 + $MR_wt_S94 + $MR_wt_S95
  216.       if ( or( $LCS_1_57, -$MR_wt_S94 ) < 0 ) then
  216.          $LB_Y0 = $MR_wt_S94
  216.          $UB_Y1 = $LCS_1_57
  216.          $Subscript_Y5 = 0
  216.          _bounds_error( $_File_Y40, $Line_Y54, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y55 )
  216.       endif
  216.       $LCS_wt_58 = loc( wt )
  216.       $MR_wt_S97 = 1[$LCS_wt_58,0].L
  216.       $MR_wt_S96 = 9[$LCS_wt_58,0].L
  216.       $LCS_59 = -( $MR_wt_S94 * $MR_wt_S96 )
  216.       $LCS_MR_wt_60 = int( $MR_wt_S97, 8 )
  216.       $MR_wt_S98 = 0[$LCS_MR_wt_60,$LCS_59]
  216.       $MR_wt_S99 = $MR_wt_S98 - $MR_tc_25
  216.       0[$LCS_MR_wt_60,$LCS_59] = $MR_wt_S99
  217.       $MR_wt_S100 = 1[$LCS_wt_58,0]
  217.       $CS_S101 = or( $MR_wt_S100 - $MR_wt_S94, $MR_wt_S94 + -1 + $MR_wt_S95 - $MR_wt_S100 ) >= 0
  217.       if ( $CS_S101 == .false. ) then
  217.          $LB_Y0 = $MR_wt_S94
  217.          $UB_Y1 = -1 + $MR_wt_S94 + $MR_wt_S95
  217.          $Subscript_Y5 = $MR_wt_S100
  217.          _bounds_error( $_File_Y40, $Line_Y57, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y58 )
  217.       endif
  217.       if ( $CS_S101 == .false. ) then
  217.          $LB_Y0 = $MR_wt_S94
  217.          $UB_Y1 = -1 + $MR_wt_S94 + $MR_wt_S95
  217.          $Subscript_Y5 = $MR_wt_S100
  217.          _bounds_error( $_File_Y40, $Line_Y57, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y58 )
  217.       endif
  217.       $LCS_MR_wt_61 = ( $MR_wt_S100 - $MR_wt_S94 ) * $MR_wt_S96
  217.       $LCS_MR_wt_62 = int( $MR_wt_S97, 8 )
  217.       $MR_wt_S102 = 0[$LCS_MR_wt_62,$LCS_MR_wt_61]
  217.       $MR_wt_S103 = $MR_wt_S102 - $MR_tc_25
  217.       0[$LCS_MR_wt_62,$LCS_MR_wt_61] = $MR_wt_S103
  218.       $LCS_wt_63 = loc( wt )
  218.       $MR_wt_S105 = 17[$LCS_wt_63,0].L
  218.       $MR_wt_S104 = 16[$LCS_wt_63,0].L
  218.       $LCS_1_64 = -1 + $MR_wt_S104 + $MR_wt_S105
  218.       if ( or( $LCS_1_64, -$MR_wt_S104 ) < 0 ) then
  218.          $LB_Y0 = $MR_wt_S104
  218.          $UB_Y1 = $LCS_1_64
  218.          $Subscript_Y5 = 0
  218.          _bounds_error( $_File_Y40, $Line_Y60, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y61 )
  218.       endif
  218.       $LCS_1_65 = -1 + $MR_wt_S104 + $MR_wt_S105
  218.       if ( or( $LCS_1_65, -$MR_wt_S104 ) < 0 ) then
  218.          $LB_Y0 = $MR_wt_S104
  218.          $UB_Y1 = $LCS_1_65
  218.          $Subscript_Y5 = 0
  218.          _bounds_error( $_File_Y40, $Line_Y60, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y61 )
  218.       endif
  218.       $LCS_wt_66 = loc( wt )
  218.       $MR_wt_S107 = 10[$LCS_wt_66,0].L
  218.       $MR_wt_S106 = 18[$LCS_wt_66,0].L
  218.       $LCS_67 = -( $MR_wt_S104 * $MR_wt_S106 )
  218.       $LCS_MR_wt_68 = int( $MR_wt_S107, 8 )
  218.       $MR_wt_S108 = 0[$LCS_MR_wt_68,$LCS_67]
  218.       $MR_wt_S109 = $MR_wt_S108 - $CS_MR_wt_0
  218.       0[$LCS_MR_wt_68,$LCS_67] = $MR_wt_S109
  219.       $CS_S110 = or( $MR_wt_S100 - $MR_wt_S104, $MR_wt_S104 + -1 + $MR_wt_S105 - $MR_wt_S100 ) >= 0
  219.       if ( $CS_S110 == .false. ) then
  219.          $LB_Y0 = $MR_wt_S104
  219.          $UB_Y1 = -1 + $MR_wt_S104 + $MR_wt_S105
  219.          $Subscript_Y5 = $MR_wt_S100
  219.          _bounds_error( $_File_Y40, $Line_Y63, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y64 )
  219.       endif
  219.       if ( $CS_S110 == .false. ) then
  219.          $LB_Y0 = $MR_wt_S104
  219.          $UB_Y1 = -1 + $MR_wt_S104 + $MR_wt_S105
  219.          $Subscript_Y5 = $MR_wt_S100
  219.          _bounds_error( $_File_Y40, $Line_Y63, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y64 )
  219.       endif
  219.       $LCS_MR_wt_69 = ( $MR_wt_S100 - $MR_wt_S104 ) * $MR_wt_S106
  219.       $LCS_MR_wt_70 = int( $MR_wt_S107, 8 )
  219.       $MR_wt_S111 = 0[$LCS_MR_wt_70,$LCS_MR_wt_69]
  219.       $MR_wt_S112 = $MR_wt_S111 - $CS_MR_wt_0
  219.       0[$LCS_MR_wt_70,$LCS_MR_wt_69] = $MR_wt_S112
  220.       return
  220.       end
  220.       
  266.       
  266.       subroutine changewatch( wt, tp )
   36.       if ( t$40 == 0 ) then
   36.          0[loc( t$69 ),0] = 2
   36.          0[loc( t$70 ),0] = 0
   36.          0[loc( t$71 ),0] = 0
   36.          0[loc( t$66 ),0].L = int( loc( t$39 ), 8 )
   36.          0[loc( t$67 ),0].L = 0
   36.          0[loc( t$68 ),0].L = int( loc( t$65 ), 8 )
   36.          t$40 = __get_dynamic_type( 2, 0[loc( t$66 ),0].L, 0[loc( t$69 ),0], 1, 0[loc( t$67 ),0].L, 0[loc( t$68 ),0].L, 0[loc( t$70 ),0], 0[loc( t$71 ),0] )
   36.       endif
  240.       $MR_tp_S1 = 0[loc( tp ),0]
  240.       $LCS_wt_0 = loc( wt )
  240.       $MR_wt_S2 = 1[$LCS_wt_0,0]
  240.       if ( $MR_wt_S2 - $MR_tp_S1 /= 0 ) then
  242.          if ( $MR_tp_S1 > 0 ) then
  242.             $MR_wt_S3 = 0[$LCS_wt_0,0]
  242.             if ( $MR_tp_S1 > $MR_wt_S3 ) then
  242.                goto 10
  242.             endif
  242.          else
  242.    10       continue
  243.             $_StackCntrl_O2 = $_StaticCntrl_O1
  243.             1[loc( $_StackCntrl_O2 ),0].L = loc( substr[c0,0:10] )
  243.             $_StackIolist_O4 = $_StaticIolist_O3
  243.             0[int( pointer to c_union Pointer_union( loc( 3[loc( $_StackIolist_O4 ),0].L ) ), 8 ),0].L = loc( 0[loc( tp ),0] )
  243.             _fwf( pointer to integer (kind=8)( loc( $_StackCntrl_O2 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StackIolist_O4 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O5 ) ) )
  244.             $MR_wt_S4 = 0[loc( wt ),0]
  244.             $IOitem_O0 = $MR_wt_S4
  244.             $_StackCntrl_O2 = $_StaticCntrl_O6
  244.             1[loc( $_StackCntrl_O2 ),0].L = loc( substr[c1,0:10] )
  244.             $_StackIolist_O8 = $_StaticIolist_O7
  244.             0[int( pointer to c_union Pointer_union( loc( 3[loc( $_StackIolist_O8 ),0].L ) ), 8 ),0].L = loc( $IOitem_O0 )
  244.             _fwf( pointer to integer (kind=8)( loc( $_StackCntrl_O2 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StackIolist_O8 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O5 ) ) )
  245.             _f90_adjustl( substr[t$170,0:10], substr[c0,0:10] )
  247.             _f90_adjustl( substr[t$171,0:10], substr[c1,0:10] )
  245.             t$172 = ( _ltrim( substr[t$170,0:10] ) ) + 73 + ( _ltrim( substr[t$171,0:10] ) )
  247.             t$174 = int( _alloc( max( 0, t$172 ) ), 8 )
  247.             $LCS_1 = max( 0, t$172 )
  247.             substr[0,t$174:$LCS_1] = //( '**(ChangeWatch)** input watch (', //( substr[t$170,0:_ltrim( substr[t$170,0:10] )], //( ') should be > 0 and < number of watches (', //( substr[t$171,0:_ltrim( substr[t$171,0:10] )], ')' ) ) ) )
  245.             call fatalerror( substr[0,t$174:$LCS_1] )
  247.             _free( t$174 )
  247.          endif
  252.          call _cpu_time_4( tc )
  253.          $Flat_S0 = _rtc
  258.          $LCS_wt_2 = loc( wt )
  258.          $MR_wt_8 = 8[$LCS_wt_2,0].L
  258.          $MR_wt_9 = 7[$LCS_wt_2,0].L
  258.          $CS_0 = or( $MR_wt_S2 - $MR_wt_9, $MR_wt_8 + -1 + $MR_wt_9 - $MR_wt_S2 ) >= 0
  258.          if ( $CS_0 == .false. ) then
  258.             $LB_Y0 = $MR_wt_9
  258.             $UB_Y1 = -1 + $MR_wt_8 + $MR_wt_9
  258.             $Subscript_Y5 = $MR_wt_S2
  258.             _bounds_error( $_File_Y40, $Line_Y42, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y43 )
  258.          endif
  258.          if ( $CS_0 == .false. ) then
  258.             $LB_Y0 = $MR_wt_9
  258.             $UB_Y1 = -1 + $MR_wt_8 + $MR_wt_9
  258.             $Subscript_Y5 = $MR_wt_S2
  258.             _bounds_error( $_File_Y40, $Line_Y42, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y43 )
  258.          endif
  258.          $LCS_wt_3 = loc( wt )
  258.          $MR_wt_10 = 1[$LCS_wt_3,0].L
  258.          $MR_wt_11 = 9[$LCS_wt_3,0].L
  258.          $LCS_6 = $MR_wt_S2
  258.          $LCS_MR_wt_4 = $MR_wt_11 * ( $LCS_6 - $MR_wt_9 )
  258.          $LCS_MR_wt_5 = int( $MR_wt_10, 8 )
  258.          $MR_wt_S5 = 0[$LCS_MR_wt_5,$LCS_MR_wt_4]
  258.          $MR_tc_13 = tc
  258.          $MR_wt_S6 = $MR_tc_13 + $MR_wt_S5
  258.          0[$LCS_MR_wt_5,$LCS_MR_wt_4] = $MR_wt_S6
  259.          $MR_wt_14 = 17[$LCS_wt_3,0].L
  259.          $MR_wt_15 = 16[$LCS_wt_3,0].L
  259.          $CS_1_1 = $MR_wt_14 + -1 + $MR_wt_15 - $MR_wt_S2
  259.          if ( or( $CS_1_1, $LCS_6 - $MR_wt_15 ) < 0 ) then
  259.             $LB_Y0 = $MR_wt_15
  259.             $UB_Y1 = -1 + $MR_wt_14 + $MR_wt_15
  259.             $Subscript_Y5 = $MR_wt_S2
  259.             _bounds_error( $_File_Y40, $Line_Y45, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y46 )
  259.          endif
  259.          if ( or( $CS_1_1, $MR_wt_S2 - $MR_wt_15 ) < 0 ) then
  259.             $LB_Y0 = $MR_wt_15
  259.             $UB_Y1 = -1 + $MR_wt_14 + $MR_wt_15
  259.             $Subscript_Y5 = $MR_wt_S2
  259.             _bounds_error( $_File_Y40, $Line_Y45, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y46 )
  259.          endif
  259.          $LCS_wt_7 = loc( wt )
  259.          $MR_wt_16 = 56[$LCS_wt_7,0]
  259.          $MR_wt_17 = 10[$LCS_wt_7,0].L
  259.          $MR_wt_18 = 18[$LCS_wt_7,0].L
  259.          $LCS_MR_wt_8 = ( $MR_wt_S2 - $MR_wt_15 ) * $MR_wt_18
  259.          $LCS_MR_wt_9 = int( $MR_wt_17, 8 )
  259.          $MR_wt_S7 = 0[$LCS_MR_wt_9,$LCS_MR_wt_8]
  259.          $CS_MR_wt_2 = ( real( and( 0x7fffffff, _rsh( $Flat_S0, 14 ) ) ) * $MR_wt_16 )
  259.          $MR_wt_S8 = $CS_MR_wt_2 + $MR_wt_S7
  259.          0[$LCS_MR_wt_9,$LCS_MR_wt_8] = $MR_wt_S8
  263.          $MR_tp_S9 = 0[loc( tp ),0]
  263.          1[$LCS_wt_7,0] = $MR_tp_S9
  264.          $CS_3 = or( $MR_tp_S9 - $MR_wt_9, $MR_wt_8 + -1 + $MR_wt_9 - $MR_tp_S9 ) >= 0
  264.          if ( $CS_3 == .false. ) then
  264.             $LB_Y0 = $MR_wt_9
  264.             $UB_Y1 = -1 + $MR_wt_8 + $MR_wt_9
  264.             $Subscript_Y5 = $MR_tp_S9
  264.             _bounds_error( $_File_Y40, $Line_Y48, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y49 )
  264.          endif
  264.          if ( $CS_3 == .false. ) then
  264.             $LB_Y0 = $MR_wt_9
  264.             $UB_Y1 = -1 + $MR_wt_8 + $MR_wt_9
  264.             $Subscript_Y5 = $MR_tp_S9
  264.             _bounds_error( $_File_Y40, $Line_Y48, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y49 )
  264.          endif
  264.          $LCS_12 = $MR_tp_S9
  264.          $LCS_MR_wt_10 = $MR_wt_11 * ( $LCS_12 - $MR_wt_9 )
  264.          $LCS_MR_wt_11 = int( $MR_wt_10, 8 )
  264.          $MR_wt_S10 = 0[$LCS_MR_wt_11,$LCS_MR_wt_10]
  264.          $MR_wt_S11 = $MR_wt_S10 - $MR_tc_13
  264.          0[$LCS_MR_wt_11,$LCS_MR_wt_10] = $MR_wt_S11
  265.          $CS_1_4 = $MR_wt_14 + -1 + $MR_wt_15 - $MR_tp_S9
  265.          if ( or( $CS_1_4, $LCS_12 - $MR_wt_15 ) < 0 ) then
  265.             $LB_Y0 = $MR_wt_15
  265.             $UB_Y1 = -1 + $MR_wt_14 + $MR_wt_15
  265.             $Subscript_Y5 = $MR_tp_S9
  265.             _bounds_error( $_File_Y40, $Line_Y51, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y52 )
  265.          endif
  265.          if ( or( $CS_1_4, $MR_tp_S9 - $MR_wt_15 ) < 0 ) then
  265.             $LB_Y0 = $MR_wt_15
  265.             $UB_Y1 = -1 + $MR_wt_14 + $MR_wt_15
  265.             $Subscript_Y5 = $MR_tp_S9
  265.             _bounds_error( $_File_Y40, $Line_Y51, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y52 )
  265.          endif
  265.          $LCS_MR_wt_13 = ( $MR_tp_S9 - $MR_wt_15 ) * $MR_wt_18
  265.          $LCS_MR_wt_14 = int( $MR_wt_17, 8 )
  265.          $MR_wt_S12 = 0[$LCS_MR_wt_14,$LCS_MR_wt_13]
  265.          $MR_wt_S13 = $MR_wt_S12 - $CS_MR_wt_2
  265.          0[$LCS_MR_wt_14,$LCS_MR_wt_13] = $MR_wt_S13
  265.       endif
  266.       return
  266.       end
  266.       
  290.       
  290.       subroutine namewatch( wt, tp, namew )
   36.       if ( t$40 == 0 ) then
   36.          0[loc( t$77 ),0] = 2
   36.          0[loc( t$78 ),0] = 0
   36.          0[loc( t$79 ),0] = 0
   36.          0[loc( t$74 ),0].L = int( loc( t$39 ), 8 )
   36.          0[loc( t$75 ),0].L = 0
   36.          0[loc( t$76 ),0].L = int( loc( t$73 ), 8 )
   36.          t$40 = __get_dynamic_type( 2, 0[loc( t$74 ),0].L, 0[loc( t$77 ),0], 1, 0[loc( t$75 ),0].L, 0[loc( t$76 ),0].L, 0[loc( t$78 ),0], 0[loc( t$79 ),0] )
   36.       endif
  282.       $MR_tp_S0 = 0[loc( tp ),0]
  282.       if ( $MR_tp_S0 > 0 ) then
  282.          $MR_wt_S1 = 0[loc( wt ),0]
  282.          if ( $MR_tp_S0 > $MR_wt_S1 ) then
  282.             goto 10
  282.          endif
  282.       else
  282.    10    continue
  283.          $_StackCntrl_O2 = $_StaticCntrl_O1
  283.          1[loc( $_StackCntrl_O2 ),0].L = loc( substr[c0,0:10] )
  283.          $_StackIolist_O4 = $_StaticIolist_O3
  283.          0[int( pointer to c_union Pointer_union( loc( 3[loc( $_StackIolist_O4 ),0].L ) ), 8 ),0].L = loc( 0[loc( tp ),0] )
  283.          _fwf( pointer to integer (kind=8)( loc( $_StackCntrl_O2 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StackIolist_O4 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O5 ) ) )
  284.          $MR_wt_S2 = 0[loc( wt ),0]
  284.          $IOitem_O0 = $MR_wt_S2
  284.          $_StackCntrl_O2 = $_StaticCntrl_O6
  284.          1[loc( $_StackCntrl_O2 ),0].L = loc( substr[c1,0:10] )
  284.          $_StackIolist_O8 = $_StaticIolist_O7
  284.          0[int( pointer to c_union Pointer_union( loc( 3[loc( $_StackIolist_O8 ),0].L ) ), 8 ),0].L = loc( $IOitem_O0 )
  284.          _fwf( pointer to integer (kind=8)( loc( $_StackCntrl_O2 ) ), pointer to integer (kind=8)( loc( (&)0[loc( $_StackIolist_O8 ),0].L ) ), pointer to integer (kind=8)( loc( $_IO_Lib_Stack_O5 ) ) )
  285.          _f90_adjustl( substr[t$175,0:10], substr[c0,0:10] )
  287.          _f90_adjustl( substr[t$176,0:10], substr[c1,0:10] )
  285.          t$177 = ( _ltrim( substr[t$175,0:10] ) ) + 71 + ( _ltrim( substr[t$176,0:10] ) )
  287.          t$179 = int( _alloc( max( 0, t$177 ) ), 8 )
  287.          $LCS_0 = max( 0, t$177 )
  287.          substr[0,t$179:$LCS_0] = //( '**(NameWatch)** input watch (', //( substr[t$175,0:_ltrim( substr[t$175,0:10] )], //( ') should be > 0 and < number of watches (', //( substr[t$176,0:_ltrim( substr[t$176,0:10] )], ')' ) ) ) )
  285.          call fatalerror( substr[0,t$179:$LCS_0] )
  287.          _free( t$179 )
  287.       endif
  289.       $MR_tp_S3 = 0[loc( tp ),0]
  289.       $LCS_wt_1 = loc( wt )
  289.       $MR_wt_6 = 26[$LCS_wt_1,0].L
  289.       $MR_wt_7 = 25[$LCS_wt_1,0].L
  289.       if ( or( $MR_tp_S3 - $MR_wt_7, $MR_wt_6 + -1 + $MR_wt_7 - $MR_tp_S3 ) < 0 ) then
  289.          $LB_Y0 = $MR_wt_7
  289.          $UB_Y1 = -1 + $MR_wt_6 + $MR_wt_7
  289.          $Subscript_Y5 = $MR_tp_S3
  289.          _bounds_error( $_File_Y40, $Line_Y42, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y43 )
  289.       endif
  289.       $LCS_wt_2 = loc( wt )
  289.       substr[19[$LCS_wt_2,0].L,27[$LCS_wt_2,0].L * ( $MR_tp_S3 - $MR_wt_7 ):16] = substr[namew,0:_len( namew )]
  290.       return
  290.       end
  290.       
    1.       
    1.       module watches
    1.       end
    1.       
