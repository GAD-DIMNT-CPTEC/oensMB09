       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  NonLinearNMI.f90
       !        File                  :  NonLinearNMI.opt
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
  306.       
  306.       subroutine diaten( slagr, fname0, ifday, tod, idate, idatec )
  306.       seatp_idatec = loc( idatec )
  306.       seatp_tod = loc( tod )
  306.       seatp_ifday = loc( ifday )
  306.       seatp_slagr = loc( slagr )
  149.       t$2 = imax
  149.       t$3 = jmax
  162.       t$141 = _zla( 0, imax )
  149.       t$142 = _zla( 0, imax )
  162.       t$143 = _zla( 0, jmax )
  149.       t$144 = _zla( 0, imax ) * _zla( 0, jmax )
  162.       t$147 = 4 * _zla( 0, imax ) * _zla( 0, jmax )
  149.       t$148 = _zla( 0, imax ) * _zla( 0, jmax )
  149.       t$149 = 4 * _zla( 0, imax ) * _zla( 0, jmax )
  161.       t$150 = 8 * ( 7 + 4 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
  161.       t$152 = t$150 + 32 * _zla( 0, imax ) * _zla( 0, jmax )
  149.       t$145 = int( _alloc( t$150 + 32 * _zla( 0, imax ) * _zla( 0, jmax ) ), 8 )
  162.       t$146 = t$145
  161.       t$151 = t$150 + t$145
  166.       $F_A33 = jmax
  166.       $F_A34 = imax
  166.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
  166.          $I_L166_84 = 0
  166.          do
  166.             $I_L166_76 = 0
  166.             do
  166.                $I_L166_68 = 0
  166. !dir$ ivdep
  166.                do
  166.                   buf(1 + $I_L166_68, 1 + $I_L166_76, 1 + $I_L166_84) = 0.0
  166.                   $I_L166_68 = 1 + $I_L166_68
  166.                   if ( $I_L166_68 >= $F_A34 ) exit
  166.                enddo
  166.                $I_L166_76 = 1 + $I_L166_76
  166.                if ( $I_L166_76 >= $F_A33 ) exit
  166.             enddo
  166.             $I_L166_84 = 1 + $I_L166_84
  166.             if ( $I_L166_84 >= 4 ) exit
  166.          enddo
  166.       endif
  167.       fsbc = .false.
  172.       ierr = 0
  171.       t$360 = nfin0
  172.        _substr(t$361,1,4) = 'OLD'
  171.        _substr(t$362,1,10) = 'SEQUENTIAL'
  171.        _substr(t$363,1,11) = 'UNFORMATTED'
  172.        _substr(t$364,1,4) = 'READ'
  171.       t$365(1) = 0x100000000000000L
  171. !dir$ suppress t$360
  171.       t$365(2) = int( loc( t$360 ), 8 )
  171. !dir$ suppress ierr
  171.       t$365(3) = int( loc( ierr ), 8 )
  171.       t$365(4) = 0
  171. !dir$ suppress  _substr(fname0,1,200)
  171.       t$365(5) = int( loc(  _substr(fname0,1,200) ), 8 )
  171.       t$365(6) = 200
  171. !dir$ suppress  _substr(t$361,1,3)
  171.       t$365(7) = int( loc(  _substr(t$361,1,3) ), 8 )
  171.       t$365(8) = 3
  171. !dir$ suppress  _substr(t$362,1,10)
  171.       t$365(9) = int( loc(  _substr(t$362,1,10) ), 8 )
  171.       t$365(10) = 10
  171. !dir$ suppress  _substr(t$363,1,11)
  171.       t$365(11) = int( loc(  _substr(t$363,1,11) ), 8 )
  171.       t$365(12) = 11
  171.       t$365(13) = 0
  171.       t$365(14) = 0
  171.       t$365(16) = 0
  171. !dir$ suppress  _substr(t$364,1,4)
  171.       t$365(18) = int( loc(  _substr(t$364,1,4) ), 8 )
  171.       t$365(19) = 4
  171.       t$365(20) = 0
  171.       t$365(22) = 0
  171.       t$365(24) = 0x2000200000000L
  171.       t$365(25) = 0
  171.       t$365(27) = 0
  171.       t$365(29) = 0
  171.       t$365(31) = 0
  171.       t$365(33) = 0
  171.       t$365(35) = 0
  171.       t$359 = _open( t$365 )
  173.       if ( ierr /= 0 ) then
  174.          _fwrite( _clist( 0, 0, 3,  _substr(c0,1,8), Null_Arg, Null_Arg, t$5,  _substr(t$4,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  176.          _f90_adjustl(  _substr(t$366,1,8),  _substr(c0,1,8) )
  175.          t$367 = 40 + ( _ltrim(  _substr(fname0,1,200) ) ) + ( _ltrim(  _substr(t$366,1,8) ) )
  175.          t$369 = int( _alloc( max( 0, t$367 ) ), 8 )
  175.           _substr(t$368,1,max( 0, t$367 )) = //( '**(Diaten)** Open file ', //(  _substr(fname0,1,_ltrim(  _substr(fname0,1,200) )), //( ' returned IOSTAT=',  _substr(t$366,1,_ltrim(  _substr(t$366,1,8) )) ) ) )
  175.          call fatalerror(  _substr(t$368,1,max( 0, t$367 )) )
  175.          _free( t$369 )
  177.           _substr(t$370,1,4) = ' '
  177.          call _stop(  _substr(t$370,1,1) )
  177.       else
  180.          call gread4( nfin0, seat_ifday, seat_tod, idate(1), seat_idatec(1), (qgzs%base_addr)(qgzs%dim_1%LB, 0), (qlnpp%base_addr)(qlnpp%dim_1%LB, 0), (qtmpp%base_addr)(qtmpp%dim_1%LB, qtmpp%dim_2%LB, 0), (qdivp%base_addr)(qdivp%dim_1%LB, qdivp%dim_2%LB, 0), (qrotp%base_addr)(qrotp%dim_1%LB, qrotp%dim_2%LB, 0), (qqp%base_addr)(qqp%dim_1%LB, qqp%dim_2%LB, 0), (sl%base_addr)(sl%dim_1%LB, 0), (si%base_addr)(si%dim_1%LB, 0), dodyn, nfdyn )
  183.          t$360 = nfin0
  183.          t$371 = __rewf( t$360, 0, 0, 0x100000000000000L, 0, 0 )
  187.          $F_A35 = geshem%dim_2%EX
  187.          $F_A36 = geshem%dim_1%EX
  187.          if ( and( -$F_A36, -$F_A35 ) < 0 ) then
  187.             $SC_geshem_I10 = geshem%dim_1%EX
  187.             $SC_geshem_I11 = geshem%dim_1%LB
  187.             $SC_geshem_I13 = geshem%dim_2%SM
  187.             $SC_geshem_I12 = geshem%dim_2%EX
  187.             $SC_geshem_I14 = geshem%dim_2%LB
  187.             $I_L187_78 = 0
  187.             do
  187.                $I_L187_70 = 0
  187. !dir$ ivdep
  187.                do
  187.                   (geshem%base_addr)($SC_geshem_I11 + $I_L187_70, $SC_geshem_I14 + $I_L187_78, 0) = 0.0
  187.                   $I_L187_70 = 1 + $I_L187_70
  187.                   if ( $I_L187_70 >= $F_A36 ) exit
  187.                enddo
  187.                $I_L187_78 = 1 + $I_L187_78
  187.                if ( $I_L187_78 >= $F_A35 ) exit
  187.             enddo
  187.          endif
  191.          call sfcgeotrans( seat_slagr )
  195.          irec = 1
  196. !dir$ suppress buf(1, 1, 1)
  196.          t$372 = $_StaticDV_P0
  196.          t$372%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 1) ) )
  196.          t$372%header%el_len = 64
  196.          t$372%header%assoc = 1
  196.          t$372%header%ptr_alloc = 0
  196.          t$372%header%p_or_a = 0
  196.          t$372%header%a_contig = 1
  196.          t$372%header%n_dim = 2
  196.          t$372%header%orig_base = 0
  196.          t$372%header%orig_size = 0
  196.          t$372%header%n_codim = 0
  196.          t$372%header%dv_versn = 2
  196.          t$372%header%dv_smunit = 64
  196.          t$372%header%d_type = 0
  196.          t$372%header%n_params = 0
  196.          t$372%header%d_type_idx = 13
  196.          t$372%dim_1%LB = 1
  196.          t$372%dim_1%EX = ( max( 0, ( 1 + -1 + t$2 ) ) )
  196.          t$372%dim_1%SM = 1
  196.          t$372%dim_2%LB = 1
  196.          t$372%dim_2%EX = ( max( 0, ( 1 + -1 + t$3 ) ) )
  196.          t$372%dim_2%SM = _zla( 0, t$2 )
  196. !dir$ suppress buf(1, 1, 2)
  196.          t$373 = $_StaticDV_P1
  196.          t$373%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 2) ) )
  196.          t$373%header%el_len = 64
  196.          t$373%header%assoc = 1
  196.          t$373%header%ptr_alloc = 0
  196.          t$373%header%p_or_a = 0
  196.          t$373%header%a_contig = 1
  196.          t$373%header%n_dim = 2
  196.          t$373%header%orig_base = 0
  196.          t$373%header%orig_size = 0
  196.          t$373%header%n_codim = 0
  196.          t$373%header%dv_versn = 2
  196.          t$373%header%dv_smunit = 64
  196.          t$373%header%d_type = 0
  196.          t$373%header%n_params = 0
  196.          t$373%header%d_type_idx = 13
  196.          t$373%dim_1%LB = 1
  196.          t$373%dim_1%EX = ( max( 0, ( 1 + -1 + t$2 ) ) )
  196.          t$373%dim_1%SM = 1
  196.          t$373%dim_2%LB = 1
  196.          t$373%dim_2%EX = ( max( 0, ( 1 + -1 + t$3 ) ) )
  196.          t$373%dim_2%SM = _zla( 0, t$2 )
  196. !dir$ suppress buf(1, 1, 3)
  196.          t$374 = $_StaticDV_P2
  196.          t$374%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 3) ) )
  196.          t$374%header%el_len = 64
  196.          t$374%header%assoc = 1
  196.          t$374%header%ptr_alloc = 0
  196.          t$374%header%p_or_a = 0
  196.          t$374%header%a_contig = 1
  196.          t$374%header%n_dim = 2
  196.          t$374%header%orig_base = 0
  196.          t$374%header%orig_size = 0
  196.          t$374%header%n_codim = 0
  196.          t$374%header%dv_versn = 2
  196.          t$374%header%dv_smunit = 64
  196.          t$374%header%d_type = 0
  196.          t$374%header%n_params = 0
  196.          t$374%header%d_type_idx = 13
  196.          t$374%dim_1%LB = 1
  196.          t$374%dim_1%EX = ( max( 0, ( 1 + -1 + t$2 ) ) )
  196.          t$374%dim_1%SM = 1
  196.          t$374%dim_2%LB = 1
  196.          t$374%dim_2%EX = ( max( 0, ( 1 + -1 + t$3 ) ) )
  196.          t$374%dim_2%SM = _zla( 0, t$2 )
  196.          call readnftgz4( nftgz0, irec, t$372, t$373, t$374 )
  197.          $Unit_temp_O0 = nfzol
  197.          _uread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, 1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)brf(+:( 1, t$2, 1 ), +:( 1, t$3, 1 )), 0x402060300000000L ) ) )
  198.          $F_A37 = jmax
  198.          $F_A38 = imax
  198.          if ( and( -$F_A38, -$F_A37 ) < 0 ) then
  198.             $I_L198_80 = 0
  198.             do
  198.                $I_L198_72 = 0
  198. !dir$ ivdep
  198.                do
  198.                   buf(1 + $I_L198_72, 1 + $I_L198_80, 4) = real( brf(1 + $I_L198_72, 1 + $I_L198_80), 8 )
  198.                   $I_L198_72 = 1 + $I_L198_72
  198.                   if ( $I_L198_72 >= $F_A38 ) exit
  198.                enddo
  198.                $I_L198_80 = 1 + $I_L198_80
  198.                if ( $I_L198_80 >= $F_A37 ) exit
  198.             enddo
  198.          endif
  200.          if ( reducedgrid /= .false. ) then
  201.             call aveboxijtoibjb_r2d( buf(1, 1, 1), (tg1%base_addr)(tg1%dim_1%LB, tg1%dim_2%LB, 0) )
  201.          else
  203. !dir$ suppress buf(1, 1, 1)
  203.             t$375 = $_StaticDV_P3
  203.             t$375%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 1) ) )
  203.             t$375%header%el_len = 64
  203.             t$375%header%assoc = 1
  203.             t$375%header%ptr_alloc = 0
  203.             t$375%header%p_or_a = 0
  203.             t$375%header%a_contig = 1
  203.             t$375%header%n_dim = 2
  203.             t$375%header%orig_base = 0
  203.             t$375%header%orig_size = 0
  203.             t$375%header%n_codim = 0
  203.             t$375%header%dv_versn = 2
  203.             t$375%header%dv_smunit = 64
  203.             t$375%header%d_type = 0
  203.             t$375%header%n_params = 0
  203.             t$375%header%d_type_idx = 13
  203.             t$375%dim_1%LB = 1
  203.             t$375%dim_1%EX = ( max( 0, ( 1 + -1 + t$2 ) ) )
  203.             t$375%dim_1%SM = 1
  203.             t$375%dim_2%LB = 1
  203.             t$375%dim_2%EX = ( max( 0, ( 1 + -1 + t$3 ) ) )
  203.             t$375%dim_2%SM = _zla( 0, t$2 )
  203.             t$376 = tg1
  203.             call ijtoibjb_r( t$375, t$376 )
  203.          endif
  206.          if ( reducedgrid /= .false. ) then
  207.             call aveboxijtoibjb_r2d( buf(1, 1, 2), (tg2%base_addr)(tg2%dim_1%LB, tg2%dim_2%LB, 0) )
  207.          else
  209. !dir$ suppress buf(1, 1, 2)
  209.             t$377 = $_StaticDV_P4
  209.             t$377%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 2) ) )
  209.             t$377%header%el_len = 64
  209.             t$377%header%assoc = 1
  209.             t$377%header%ptr_alloc = 0
  209.             t$377%header%p_or_a = 0
  209.             t$377%header%a_contig = 1
  209.             t$377%header%n_dim = 2
  209.             t$377%header%orig_base = 0
  209.             t$377%header%orig_size = 0
  209.             t$377%header%n_codim = 0
  209.             t$377%header%dv_versn = 2
  209.             t$377%header%dv_smunit = 64
  209.             t$377%header%d_type = 0
  209.             t$377%header%n_params = 0
  209.             t$377%header%d_type_idx = 13
  209.             t$377%dim_1%LB = 1
  209.             t$377%dim_1%EX = ( max( 0, ( 1 + -1 + t$2 ) ) )
  209.             t$377%dim_1%SM = 1
  209.             t$377%dim_2%LB = 1
  209.             t$377%dim_2%EX = ( max( 0, ( 1 + -1 + t$3 ) ) )
  209.             t$377%dim_2%SM = _zla( 0, t$2 )
  209.             t$378 = tg2
  209.             call ijtoibjb_r( t$377, t$378 )
  209.          endif
  212.          if ( reducedgrid /= .false. ) then
  213.             call aveboxijtoibjb_r2d( buf(1, 1, 3), (tg3%base_addr)(tg3%dim_1%LB, tg3%dim_2%LB, 0) )
  213.          else
  215. !dir$ suppress buf(1, 1, 3)
  215.             t$379 = $_StaticDV_P5
  215.             t$379%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 3) ) )
  215.             t$379%header%el_len = 64
  215.             t$379%header%assoc = 1
  215.             t$379%header%ptr_alloc = 0
  215.             t$379%header%p_or_a = 0
  215.             t$379%header%a_contig = 1
  215.             t$379%header%n_dim = 2
  215.             t$379%header%orig_base = 0
  215.             t$379%header%orig_size = 0
  215.             t$379%header%n_codim = 0
  215.             t$379%header%dv_versn = 2
  215.             t$379%header%dv_smunit = 64
  215.             t$379%header%d_type = 0
  215.             t$379%header%n_params = 0
  215.             t$379%header%d_type_idx = 13
  215.             t$379%dim_1%LB = 1
  215.             t$379%dim_1%EX = ( max( 0, ( 1 + -1 + t$2 ) ) )
  215.             t$379%dim_1%SM = 1
  215.             t$379%dim_2%LB = 1
  215.             t$379%dim_2%EX = ( max( 0, ( 1 + -1 + t$3 ) ) )
  215.             t$379%dim_2%SM = _zla( 0, t$2 )
  215.             t$380 = tg3
  215.             call ijtoibjb_r( t$379, t$380 )
  215.          endif
  218.          if ( reducedgrid /= .false. ) then
  219.             call aveboxijtoibjb_r2d( buf(1, 1, 4), (zorl%base_addr)(zorl%dim_1%LB, zorl%dim_2%LB, 0) )
  219.          else
  221. !dir$ suppress buf(1, 1, 4)
  221.             t$381 = $_StaticDV_P6
  221.             t$381%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 4) ) )
  221.             t$381%header%el_len = 64
  221.             t$381%header%assoc = 1
  221.             t$381%header%ptr_alloc = 0
  221.             t$381%header%p_or_a = 0
  221.             t$381%header%a_contig = 1
  221.             t$381%header%n_dim = 2
  221.             t$381%header%orig_base = 0
  221.             t$381%header%orig_size = 0
  221.             t$381%header%n_codim = 0
  221.             t$381%header%dv_versn = 2
  221.             t$381%header%dv_smunit = 64
  221.             t$381%header%d_type = 0
  221.             t$381%header%n_params = 0
  221.             t$381%header%d_type_idx = 13
  221.             t$381%dim_1%LB = 1
  221.             t$381%dim_1%EX = ( max( 0, ( 1 + -1 + t$2 ) ) )
  221.             t$381%dim_1%SM = 1
  221.             t$381%dim_2%LB = 1
  221.             t$381%dim_2%EX = ( max( 0, ( 1 + -1 + t$3 ) ) )
  221.             t$381%dim_2%SM = _zla( 0, t$2 )
  221.             t$382 = zorl
  221.             call ijtoibjb_r( t$381, t$382 )
  221.          endif
  225.          t$383 = ibmaxperjb
  225.          call getsbc( imax, jmax, kmax, (albvisdiff%base_addr)(albvisdiff%dim_1%LB, albvisdiff%dim_2%LB, 0), (gtsea%base_addr)(gtsea%dim_1%LB, gtsea%dim_2%LB, 0), (soilm%base_addr)(soilm%dim_1%LB, soilm%dim_2%LB, 0), (sheleg%base_addr)(sheleg%dim_1%LB, sheleg%dim_2%LB, 0), (o3mix%base_addr)(o3mix%dim_1%LB, o3mix%dim_2%LB, o3mix%dim_3%LB, 0), seat_ifday, seat_tod, idate(1), seat_idatec(1), ifalb, ifsst, ifslm, ifsnw, ifozone, sstlag, intsst, fint, tice, yrl, monl(1), ibmax, jbmax, t$383 )
  233.          dt = 2.5e-1 * delt
  237.          fa = 0.0
  238.          fb = 1.0
  239.          fb1 = 1.0
  240.          ifilt = 0
  243.          $I_L243_64 = 0
  243.          do
  243.             jdt = ( 1 + $I_L243_64 )
  244.             istrt = ( 1 + $I_L243_64 )
  248.             delta2 = dt
  249.             if ( seat_slagr /= .false. ) then
  249.                if ( sl_twotime_scheme /= .false. ) then
  249.                   delta2 = 5.0e-1 * dt
  249.                endif
  249.             endif
  250.             call bmcm( delta2, seat_slagr )
  252.             $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  253.             t$385 = jdt
  254.             t$386 = jdt
  253.             call timestep( fb1, fa, fb, seat_slagr, .false., .false., .false., dt, t$385, seat_ifday, seat_tod, seat_idatec(1), t$386 )
  255.             $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
  261.             ktm = kt
  262.             fb1 = 0.0
  260.             dt = 2.0 * dt
  263.             $I_L243_64 = 1 + $I_L243_64
  255.             if ( $I_L243_64 >= 2 ) exit
  255.          enddo
  263.          jdt = 3
  267.          istrt = 0
  271.          delta2 = dt
  272.          if ( seat_slagr /= .false. ) then
  272.             if ( sl_twotime_scheme /= .false. ) then
  272.                delta2 = 5.0e-1 * dt
  272.             endif
  272.          endif
  273.          call bmcm( delta2, seat_slagr )
  277.          fa = filta
  278.          fb = filtb
  279.          fb1 = 0.0
  280.          if ( seat_slagr /= .false. ) then
  280.             if ( sl_twotime_scheme /= .false. ) then
  281.                fa = 1.0
  282.                fb = 0.0
  282.             endif
  282.          endif
  284.          ifilt = 1
  288.          $t_S2 = nstep
  288.          jdt = 1
  288.          if ( nstep > 0 ) then
  288.             $I_L288_66 = 0
  288.             do
  288.                jdt = ( 1 + $I_L288_66 )
  293.                $snt_T1 = _parallel( 2, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  294.                t$390 = ( 1 + $I_L288_66 )
  295.                t$391 = ( 2 + $I_L288_66 )
  294.                call timestep( fb1, fa, fb, seat_slagr, .false., .true., .false., dt, t$390, seat_ifday, seat_tod, seat_idatec(1), t$391 )
  296.                $snt_T1 = _endparallel( 2, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T1 )
  298.                ktm = kt
  300.                fb1 = fb
  301.                if ( seat_slagr /= .false. ) then
  301.                   if ( sl_twotime_scheme /= .false. ) then
  301.                      fb1 = 0.0
  301.                   endif
  301.                endif
  302.                $I_L288_66 = 1 + $I_L288_66
  301.                if ( $I_L288_66 >= $t_S2 ) exit
  301.             enddo
  302.             jdt = ( 1 + $t_S2 )
  302.          endif
  303.          $F_A39 = qdiaten%dim_2%EX
  303.          $F_A40 = qdiaten%dim_1%EX
  303.          if ( and( -$F_A40, -$F_A39 ) < 0 ) then
  303.             $SC_qdiaten_I15 = qdiaten%dim_1%EX
  303.             $SC_qdiaten_I16 = qdiaten%dim_1%LB
  303.             $SC_qdiaten_I18 = qdiaten%dim_2%SM
  303.             $SC_qdiaten_I17 = qdiaten%dim_2%EX
  303.             $SC_qdiaten_I19 = qdiaten%dim_2%LB
  303.             $I_L303_82 = 0
  303.             do
  303.                $I_L303_74 = 0
  303. !dir$ ivdep
  303.                do
  303.                   (qdiaten%base_addr)($SC_qdiaten_I16 + $I_L303_74, $SC_qdiaten_I19 + $I_L303_82, 0) = ( (qdiaten%base_addr)($SC_qdiaten_I16 + $I_L303_74, $SC_qdiaten_I19 + $I_L303_82, 0) * 1.0/( 2.0 * dt * nstep ) )
  303.                   $I_L303_74 = 1 + $I_L303_74
  303.                   if ( $I_L303_74 >= $F_A40 ) exit
  303.                enddo
  303.                $I_L303_82 = 1 + $I_L303_82
  303.                if ( $I_L303_82 >= $F_A39 ) exit
  303.             enddo
  303.          endif
  149.          _free( t$145 )
  149.       endif
  306.       return
  306.       end
  306.       
  971.       
  971.       subroutine nlnmi( nlnminit, diabatic, slagr, fname, ifday, tod, idatec, ktm )
  971.       seatp_idatec = loc( idatec )
  971.       seatp_tod = loc( tod )
  971.       seatp_ifday = loc( ifday )
  971.       seatp_slagr = loc( slagr )
  971.       seatp_diabatic = loc( diabatic )
  971.       seatp_nlnminit = loc( nlnminit )
  392.       t$153 = _len( fname )
  393.       all_jg = $_StaticDV_P2
  393.       all_jg%base_addr = pointer to array[1] of array[1] of integer( 0 )
  393.       all_jg%header%el_len = 32
  393.       all_jg%header%assoc = 0
  393.       all_jg%header%ptr_alloc = 0
  393.       all_jg%header%p_or_a = 2
  393.       all_jg%header%a_contig = 1
  393.       all_jg%header%n_dim = 2
  393.       all_jg%header%orig_base = 0
  393.       all_jg%header%orig_size = 0
  393.       all_jg%header%n_codim = 0
  393.       all_jg%header%dv_versn = 2
  393.       all_jg%header%dv_smunit = 32
  393.       all_jg%header%d_type = 0
  393.       all_jg%header%n_params = 0
  393.       all_jg%header%d_type_idx = 10
  393.       all_jg%dim_1%LB = 1
  393.       all_jg%dim_1%EX = 0
  393.       all_jg%dim_1%SM = 1
  393.       all_jg%dim_2%LB = 1
  393.       all_jg%dim_2%EX = 0
  393.       all_jg%dim_2%SM = 1
  320.       all_nas = $_StaticDV_P3
  320.       all_nas%base_addr = pointer to array[1] of array[1] of integer( 0 )
  320.       all_nas%header%el_len = 32
  320.       all_nas%header%assoc = 0
  320.       all_nas%header%ptr_alloc = 0
  320.       all_nas%header%p_or_a = 2
  320.       all_nas%header%a_contig = 1
  320.       all_nas%header%n_dim = 2
  320.       all_nas%header%orig_base = 0
  320.       all_nas%header%orig_size = 0
  320.       all_nas%header%n_codim = 0
  320.       all_nas%header%dv_versn = 2
  320.       all_nas%header%dv_smunit = 32
  320.       all_nas%header%d_type = 0
  320.       all_nas%header%n_params = 0
  320.       all_nas%header%d_type_idx = 10
  320.       all_nas%dim_1%LB = 1
  320.       all_nas%dim_1%EX = 0
  320.       all_nas%dim_1%SM = 1
  320.       all_nas%dim_2%LB = 1
  320.       all_nas%dim_2%EX = 0
  320.       all_nas%dim_2%SM = 1
  320.       t$6 = kmax
  337.       t$154 = _zla( 0, kmax )
  337.       t$157 = 8 * _zla( 0, kmax )
  320.       t$158 = _zla( 0, kmax )
  320.       t$159 = _zla( 0, kmax ) * _zla( 0, kmax )
  335.       t$160 = 8 * ( 7 + 8 * _zla( 0, kmax ) ) / 8
  335.       t$162 = t$160 + 8 * _zla( 0, kmax ) * _zla( 0, kmax )
  336.       t$163 = 8 * ( 7 + t$160 + 8 * _zla( 0, kmax ) * _zla( 0, kmax ) ) / 8
  354.       t$165 = t$163 + 8 * _zla( 0, kmax ) * _zla( 0, kmax )
  336.       g = $_StaticDV_P4
  336.       g%base_addr = pointer to array[1] of real (kind=8)( 0 )
  336.       g%header%el_len = 64
  336.       g%header%assoc = 0
  336.       g%header%ptr_alloc = 0
  336.       g%header%p_or_a = 2
  336.       g%header%a_contig = 1
  336.       g%header%n_dim = 1
  336.       g%header%orig_base = 0
  336.       g%header%orig_size = 0
  336.       g%header%n_codim = 0
  336.       g%header%dv_versn = 2
  336.       g%header%dv_smunit = 64
  336.       g%header%d_type = 0
  336.       g%header%n_params = 0
  336.       g%header%d_type_idx = 13
  336.       g%dim_1%LB = 1
  336.       g%dim_1%EX = 0
  336.       g%dim_1%SM = 1
  338.       t$166 = 8 * ( 7 + t$163 + 8 * _zla( 0, kmax ) * _zla( 0, kmax ) ) / 8
  370.       t$168 = t$166 + 8 * _zla( 0, kmax )
  362.       indg = $_StaticDV_P5
  362.       indg%base_addr = pointer to array[1] of array[1] of integer( 0 )
  362.       indg%header%el_len = 32
  362.       indg%header%assoc = 0
  362.       indg%header%ptr_alloc = 0
  362.       indg%header%p_or_a = 2
  362.       indg%header%a_contig = 1
  362.       indg%header%n_dim = 2
  362.       indg%header%orig_base = 0
  362.       indg%header%orig_size = 0
  362.       indg%header%n_codim = 0
  362.       indg%header%dv_versn = 2
  362.       indg%header%dv_smunit = 32
  362.       indg%header%d_type = 0
  362.       indg%header%n_params = 0
  362.       indg%header%d_type_idx = 10
  362.       indg%dim_1%LB = 1
  362.       indg%dim_1%EX = 0
  362.       indg%dim_1%SM = 1
  362.       indg%dim_2%LB = 1
  362.       indg%dim_2%EX = 0
  362.       indg%dim_2%SM = 1
  377.       indper = $_StaticDV_P6
  377.       indper%base_addr = pointer to array[1] of array[1] of integer( 0 )
  377.       indper%header%el_len = 32
  377.       indper%header%assoc = 0
  377.       indper%header%ptr_alloc = 0
  377.       indper%header%p_or_a = 2
  377.       indper%header%a_contig = 1
  377.       indper%header%n_dim = 2
  377.       indper%header%orig_base = 0
  377.       indper%header%orig_size = 0
  377.       indper%header%n_codim = 0
  377.       indper%header%dv_versn = 2
  377.       indper%header%dv_smunit = 32
  377.       indper%header%d_type = 0
  377.       indper%header%n_params = 0
  377.       indper%header%d_type_idx = 10
  377.       indper%dim_1%LB = 1
  377.       indper%dim_1%EX = 0
  377.       indper%dim_1%SM = 1
  377.       indper%dim_2%LB = 1
  377.       indper%dim_2%EX = 0
  377.       indper%dim_2%SM = 1
  338.       jg = $_StaticDV_P7
  338.       jg%base_addr = pointer to array[1] of array[1] of integer (kind=8)( 0 )
  338.       jg%header%el_len = 64
  338.       jg%header%assoc = 0
  338.       jg%header%ptr_alloc = 0
  338.       jg%header%p_or_a = 2
  338.       jg%header%a_contig = 1
  338.       jg%header%n_dim = 2
  338.       jg%header%orig_base = 0
  338.       jg%header%orig_size = 0
  338.       jg%header%n_codim = 0
  338.       jg%header%dv_versn = 2
  338.       jg%header%dv_smunit = 64
  338.       jg%header%d_type = 0
  338.       jg%header%n_params = 0
  338.       jg%header%d_type_idx = 11
  338.       jg%dim_1%LB = 1
  338.       jg%dim_1%EX = 0
  338.       jg%dim_1%SM = 1
  338.       jg%dim_2%LB = 1
  338.       jg%dim_2%EX = 0
  338.       jg%dim_2%SM = 1
  320.       t$7 = mmax
  399.       t$169 = _zla( 0, mmax )
  399.       t$171 = t$166 + 8 * _zla( 0, kmax ) + 4 * _zla( 0, mmax )
  320.       t$8 = mymmax
  429.       t$172 = _zla( 0, mymmax )
  378.       t$174 = t$166 + 8 * _zla( 0, kmax ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, mymmax )
  384.       nas = $_StaticDV_P8
  384.       nas%base_addr = pointer to array[1] of array[1] of integer (kind=8)( 0 )
  384.       nas%header%el_len = 64
  384.       nas%header%assoc = 0
  384.       nas%header%ptr_alloc = 0
  384.       nas%header%p_or_a = 2
  384.       nas%header%a_contig = 1
  384.       nas%header%n_dim = 2
  384.       nas%header%orig_base = 0
  384.       nas%header%orig_size = 0
  384.       nas%header%n_codim = 0
  384.       nas%header%dv_versn = 2
  384.       nas%header%dv_smunit = 64
  384.       nas%header%d_type = 0
  384.       nas%header%n_params = 0
  384.       nas%header%d_type_idx = 11
  384.       nas%dim_1%LB = 1
  384.       nas%dim_1%EX = 0
  384.       nas%dim_1%SM = 1
  384.       nas%dim_2%LB = 1
  384.       nas%dim_2%EX = 0
  384.       nas%dim_2%SM = 1
  383.       one_g = $_StaticDV_P9
  383.       one_g%base_addr = pointer to array[1] of real (kind=8)( 0 )
  383.       one_g%header%el_len = 64
  383.       one_g%header%assoc = 0
  383.       one_g%header%ptr_alloc = 0
  383.       one_g%header%p_or_a = 2
  383.       one_g%header%a_contig = 1
  383.       one_g%header%n_dim = 1
  383.       one_g%header%orig_base = 0
  383.       one_g%header%orig_size = 0
  383.       one_g%header%n_codim = 0
  383.       one_g%header%dv_versn = 2
  383.       one_g%header%dv_smunit = 64
  383.       one_g%header%d_type = 0
  383.       one_g%header%n_params = 0
  383.       one_g%header%d_type_idx = 13
  383.       one_g%dim_1%LB = 1
  383.       one_g%dim_1%EX = 0
  383.       one_g%dim_1%SM = 1
  355.       one_per = $_StaticDV_P10
  355.       one_per%base_addr = pointer to array[1] of real (kind=8)( 0 )
  355.       one_per%header%el_len = 64
  355.       one_per%header%assoc = 0
  355.       one_per%header%ptr_alloc = 0
  355.       one_per%header%p_or_a = 2
  355.       one_per%header%a_contig = 1
  355.       one_per%header%n_dim = 1
  355.       one_per%header%orig_base = 0
  355.       one_per%header%orig_size = 0
  355.       one_per%header%n_codim = 0
  355.       one_per%header%dv_versn = 2
  355.       one_per%header%dv_smunit = 64
  355.       one_per%header%d_type = 0
  355.       one_per%header%n_params = 0
  355.       one_per%header%d_type_idx = 13
  355.       one_per%dim_1%LB = 1
  355.       one_per%dim_1%EX = 0
  355.       one_per%dim_1%SM = 1
  450.       per = $_StaticDV_P11
  450.       per%base_addr = pointer to array[1] of real (kind=8)( 0 )
  450.       per%header%el_len = 64
  450.       per%header%assoc = 0
  450.       per%header%ptr_alloc = 0
  450.       per%header%p_or_a = 2
  450.       per%header%a_contig = 1
  450.       per%header%n_dim = 1
  450.       per%header%orig_base = 0
  450.       per%header%orig_size = 0
  450.       per%header%n_codim = 0
  450.       per%header%dv_versn = 2
  450.       per%header%dv_smunit = 64
  450.       per%header%d_type = 0
  450.       per%header%n_params = 0
  450.       per%header%d_type_idx = 13
  450.       per%dim_1%LB = 1
  450.       per%dim_1%EX = 0
  450.       per%dim_1%SM = 1
  449.       qgenp = $_StaticDV_P12
  449.       qgenp%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
  449.       qgenp%header%el_len = 64
  449.       qgenp%header%assoc = 0
  449.       qgenp%header%ptr_alloc = 0
  449.       qgenp%header%p_or_a = 2
  449.       qgenp%header%a_contig = 1
  449.       qgenp%header%n_dim = 2
  449.       qgenp%header%orig_base = 0
  449.       qgenp%header%orig_size = 0
  449.       qgenp%header%n_codim = 0
  449.       qgenp%header%dv_versn = 2
  449.       qgenp%header%dv_smunit = 64
  449.       qgenp%header%d_type = 0
  449.       qgenp%header%n_params = 0
  449.       qgenp%header%d_type_idx = 13
  449.       qgenp%dim_1%LB = 1
  449.       qgenp%dim_1%EX = 0
  449.       qgenp%dim_1%SM = 1
  449.       qgenp%dim_2%LB = 1
  449.       qgenp%dim_2%EX = 0
  449.       qgenp%dim_2%SM = 1
  341.       qgenp_si = $_StaticDV_P13
  341.       qgenp_si%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
  341.       qgenp_si%header%el_len = 64
  341.       qgenp_si%header%assoc = 0
  341.       qgenp_si%header%ptr_alloc = 0
  341.       qgenp_si%header%p_or_a = 2
  341.       qgenp_si%header%a_contig = 1
  341.       qgenp_si%header%n_dim = 2
  341.       qgenp_si%header%orig_base = 0
  341.       qgenp_si%header%orig_size = 0
  341.       qgenp_si%header%n_codim = 0
  341.       qgenp_si%header%dv_versn = 2
  341.       qgenp_si%header%dv_smunit = 64
  341.       qgenp_si%header%d_type = 0
  341.       qgenp_si%header%n_params = 0
  341.       qgenp_si%header%d_type_idx = 13
  341.       qgenp_si%dim_1%LB = 1
  341.       qgenp_si%dim_1%EX = 0
  341.       qgenp_si%dim_1%SM = 1
  341.       qgenp_si%dim_2%LB = 1
  341.       qgenp_si%dim_2%EX = 0
  341.       qgenp_si%dim_2%SM = 1
  429.       realbuffer = $_StaticDV_P14
  429.       realbuffer%base_addr = pointer to array[1] of real (kind=8)( 0 )
  429.       realbuffer%header%el_len = 64
  429.       realbuffer%header%assoc = 0
  429.       realbuffer%header%ptr_alloc = 0
  429.       realbuffer%header%p_or_a = 2
  429.       realbuffer%header%a_contig = 1
  429.       realbuffer%header%n_dim = 1
  429.       realbuffer%header%orig_base = 0
  429.       realbuffer%header%orig_size = 0
  429.       realbuffer%header%n_codim = 0
  429.       realbuffer%header%dv_versn = 2
  429.       realbuffer%header%dv_smunit = 64
  429.       realbuffer%header%d_type = 0
  429.       realbuffer%header%n_params = 0
  429.       realbuffer%header%d_type_idx = 13
  429.       realbuffer%dim_1%LB = 1
  429.       realbuffer%dim_1%EX = 0
  429.       realbuffer%dim_1%SM = 1
  340.       t$175 = 8 * ( 7 + t$166 + 8 * _zla( 0, kmax ) + 4 * _zla( 0, mmax ) + 4 * _zla( 0, mymmax ) ) / 8
  340.       t$177 = t$175 + 8 * _zla( 0, kmax )
  339.       t$178 = 8 * ( 7 + t$175 + 8 * _zla( 0, kmax ) ) / 8
  339.       t$180 = t$178 + 8 * _zla( 0, kmax )
  320.       t$155 = int( _alloc( t$178 + 8 * _zla( 0, kmax ) ), 8 )
  337.       t$156 = t$155
  335.       t$161 = t$160 + t$155
  336.       t$164 = t$163 + t$155
  338.       t$167 = t$166 + t$155
  399.       t$170 = t$166 + t$155 + 8 * _zla( 0, kmax )
  429.       t$173 = t$166 + t$155 + 8 * _zla( 0, kmax ) + 4 * _zla( 0, mmax )
  340.       t$176 = t$175 + t$155
  339.       t$179 = t$178 + t$155
  465.       realbuffer%header%a_contig = 1
  465.       realbuffer%dim_1%LB = 1
  465.       realbuffer%dim_1%EX = _zla( 0, ( 3 * kmax + 2 * kmax * kmax ) )
  465.       realbuffer%dim_1%SM = 1
  465.       $_allo_P15(0) = 0x1000000000001L
  465.       $_allo_P15(1) = loc( realbuffer )
  465.       call __allocate( $_allo_P15, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  466.       if ( ierr /= 0 ) then
  467.          _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$11,  _substr(t$10,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  469.          _f90_adjustl(  _substr(t$392,1,10),  _substr(c0,1,10) )
  468.          t$393 = 46 + ( _ltrim(  _substr(t$392,1,10) ) )
  468.          t$395 = int( _alloc( _zla( 0, t$393 ) ), 8 )
  468.           _substr(t$394,1,_zla( 0, t$393 )) = //( '**(Nlnmi)** Allocate RealBuffer returned STAT=',  _substr(t$392,1,_ltrim(  _substr(t$392,1,10) )) )
  468.          call fatalerror(  _substr(t$394,1,_zla( 0, t$393 )) )
  468.          _free( t$395 )
  470.           _substr(t$396,1,4) = ' '
  470.          call _stop(  _substr(t$396,1,1) )
  470.       else
  475.          if ( myid == 0 ) then
  477.             ierr = 0
  476.             t$398 = nfnmi
  477.              _substr(t$399,1,4) = 'OLD'
  476.              _substr(t$400,1,10) = 'SEQUENTIAL'
  476.              _substr(t$401,1,11) = 'UNFORMATTED'
  477.              _substr(t$402,1,4) = 'READ'
  476.             t$403(1) = 0x100000000000000L
  476. !dir$ suppress t$398
  476.             t$403(2) = int( loc( t$398 ), 8 )
  476. !dir$ suppress ierr
  476.             t$403(3) = int( loc( ierr ), 8 )
  476.             t$403(4) = 0
  476. !dir$ suppress  _substr(fname,1,max( 0, t$153 ))
  476.             t$403(5) = int( loc(  _substr(fname,1,_len( fname )) ), 8 )
  476.             t$403(6) = _len( fname )
  476. !dir$ suppress  _substr(t$399,1,3)
  476.             t$403(7) = int( loc(  _substr(t$399,1,3) ), 8 )
  476.             t$403(8) = 3
  476. !dir$ suppress  _substr(t$400,1,10)
  476.             t$403(9) = int( loc(  _substr(t$400,1,10) ), 8 )
  476.             t$403(10) = 10
  476. !dir$ suppress  _substr(t$401,1,11)
  476.             t$403(11) = int( loc(  _substr(t$401,1,11) ), 8 )
  476.             t$403(12) = 11
  476.             t$403(13) = 0
  476.             t$403(14) = 0
  476.             t$403(16) = 0
  476. !dir$ suppress  _substr(t$402,1,4)
  476.             t$403(18) = int( loc(  _substr(t$402,1,4) ), 8 )
  476.             t$403(19) = 4
  476.             t$403(20) = 0
  476.             t$403(22) = 0
  476.             t$403(24) = 0x2000200000000L
  476.             t$403(25) = 0
  476.             t$403(27) = 0
  476.             t$403(29) = 0
  476.             t$403(31) = 0
  476.             t$403(33) = 0
  476.             t$403(35) = 0
  476.             t$397 = _open( t$403 )
  478.             if ( ierr /= 0 ) then
  479.                _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$13,  _substr(t$12,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  481.                _f90_adjustl(  _substr(t$404,1,10),  _substr(c0,1,10) )
  480.                t$405 = 39 + ( _ltrim(  _substr(t$404,1,10) ) ) + ( _ltrim(  _substr(fname,1,_len( fname )) ) )
  480.                t$407 = int( _alloc( max( 0, t$405 ) ), 8 )
  480.                 _substr(t$406,1,max( 0, t$405 )) = //( '**(Nlnmi)** Open file ', //(  _substr(fname,1,_ltrim(  _substr(fname,1,_len( fname )) )), //( ' returned IOSTAT=',  _substr(t$404,1,_ltrim(  _substr(t$404,1,10) )) ) ) )
  480.                call fatalerror(  _substr(t$406,1,max( 0, t$405 )) )
  480.                _free( t$407 )
  482.                 _substr(t$408,1,4) = ' '
  482.                call _stop(  _substr(t$408,1,1) )
  482.             else
  484.                if ( ( ( 0 >= realbuffer%dim_1%EX .or. realbuffer%dim_1%EX <= 0 ) .and. realbuffer%dim_1%EX > 0 ) /= .false. ) then
  484.                    _substr(t$411,1,17) = 'NonLinearNMI.f90'
  484.                    _substr(t$412,1,11) = 'REALBUFFER'
  484.                   t$398 = 1
  484.                   t$413 = realbuffer%dim_1%EX
  484.                   t$414 = 1
  484.                   t$415 = realbuffer%dim_1%EX
  484.                   call _rbounds_error(  _substr(t$411,1,17), 984,  _substr(t$412,1,11), 1, t$398, t$413, t$414, t$415, 1, t$410 )
  484.                endif
  484.                $Unit_temp_O0 = nfnmi
  484.                t$409 = _uread( _clist( 0, 1, 3, $Unit_temp_O0, ierr, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(realbuffer%base_addr)(+:( 1, realbuffer%dim_1%EX, 1 ), 0), 0x804060300000000L ) ) )
  485.                if ( ierr /= 0 ) then
  486.                   _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$15,  _substr(t$14,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  487.                   _f90_adjustl(  _substr(t$416,1,10),  _substr(c0,1,10) )
  487.                   t$417 = 44 + ( _ltrim(  _substr(t$416,1,10) ) )
  487.                   t$419 = int( _alloc( max( 0, t$417 ) ), 8 )
  487.                    _substr(t$418,1,max( 0, t$417 )) = //( '**(Nlnmi)** Read RealBuffer returned IOSTAT=',  _substr(t$416,1,_ltrim(  _substr(t$416,1,10) )) )
  487.                   call fatalerror(  _substr(t$418,1,max( 0, t$417 )) )
  487.                   _free( t$419 )
  488.                    _substr(t$420,1,4) = ' '
  488.                   call _stop(  _substr(t$420,1,1) )
  488.                else
  488.                   goto 10
  488.                endif
  488.             endif
  488.          else
  488.    10       continue
  494.             if ( maxnodes > 1 ) then
  495.                t$421 = ( max( 0, realbuffer%dim_1%EX ) )
  495.                call mpi_bcast( (realbuffer%base_addr)(1, 0), t$421, 1275070495, 0, 1140850688, ierr )
  496.                if ( ierr /= 0 ) then
  497.                   _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$17,  _substr(t$16,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  498.                   _f90_adjustl(  _substr(t$422,1,10),  _substr(c0,1,10) )
  498.                   t$423 = 47 + ( _ltrim(  _substr(t$422,1,10) ) )
  498.                   t$425 = int( _alloc( max( 0, t$423 ) ), 8 )
  498.                    _substr(t$424,1,max( 0, t$423 )) = //( '**(Nlnmi)** Broadcast RealBuffer returned ierr=',  _substr(t$422,1,_ltrim(  _substr(t$422,1,10) )) )
  498.                   call fatalerror(  _substr(t$424,1,max( 0, t$423 )) )
  498.                   _free( t$425 )
  499.                    _substr(t$426,1,4) = ' '
  499.                   call _stop(  _substr(t$426,1,1) )
  499.                else
  499.                   goto 20
  499.                endif
  499.             else
  499.    20          continue
  506.                if ( kmax > 0 ) then
  508.                   $SC_realbuffer_I0 = realbuffer%dim_1%EX
  506.                   $I_L506_1276 = 0
  506.                   do
  507.                      $I_L507_1266 = 0
  507. !dir$ ivdep
  507.                      do
  508.                         eigg(1 + $I_L507_1266, 1 + $I_L506_1276) = (realbuffer%base_addr)(1 + $I_L507_1266 + kmax * $I_L506_1276, 0)
  509.                         $I_L507_1266 = 1 + $I_L507_1266
  507.                         if ( $I_L507_1266 >= kmax ) exit
  507.                      enddo
  510.                      $I_L506_1276 = 1 + $I_L506_1276
  509.                      if ( $I_L506_1276 >= kmax ) exit
  509.                   enddo
  514.                   $SC_realbuffer_I0 = realbuffer%dim_1%EX
  512.                   $I_L512_1278 = 0
  512.                   do
  513.                      $I_L513_1268 = 0
  513. !dir$ ivdep
  513.                      do
  514.                         eiggt(1 + $I_L513_1268, 1 + $I_L512_1278) = (realbuffer%base_addr)(1 + $I_L513_1268 + kmax * kmax + kmax * $I_L512_1278, 0)
  515.                         $I_L513_1268 = 1 + $I_L513_1268
  513.                         if ( $I_L513_1268 >= kmax ) exit
  513.                      enddo
  516.                      $I_L512_1278 = 1 + $I_L512_1278
  515.                      if ( $I_L512_1278 >= kmax ) exit
  515.                   enddo
  519.                   $SC_realbuffer_I0 = realbuffer%dim_1%EX
  518.                   $I_L518_1270 = 0
  518. !dir$ ivdep
  518.                   do
  519.                      gh(1 + $I_L518_1270) = (realbuffer%base_addr)(1 + $I_L518_1270 + 2 * kmax * kmax, 0)
  520.                      $I_L518_1270 = 1 + $I_L518_1270
  518.                      if ( $I_L518_1270 >= kmax ) exit
  518.                   enddo
  523.                   $SC_realbuffer_I0 = realbuffer%dim_1%EX
  522.                   $I_L522_1272 = 0
  522. !dir$ ivdep
  522.                   do
  523.                      dotpro(1 + $I_L522_1272) = (realbuffer%base_addr)(1 + kmax + $I_L522_1272 + 2 * kmax * kmax, 0)
  524.                      $I_L522_1272 = 1 + $I_L522_1272
  522.                      if ( $I_L522_1272 >= kmax ) exit
  522.                   enddo
  527.                   $SC_realbuffer_I0 = realbuffer%dim_1%EX
  526.                   $I_L526_1274 = 0
  526. !dir$ ivdep
  526.                   do
  527.                      to(1 + $I_L526_1274) = (realbuffer%base_addr)(1 + $I_L526_1274 + 2 * kmax * kmax + 2 * kmax, 0)
  528.                      $I_L526_1274 = 1 + $I_L526_1274
  526.                      if ( $I_L526_1274 >= kmax ) exit
  526.                   enddo
  526.                endif
  532. !dir$ suppress gh(1)
  532.                t$448 = $_StaticDV_P16
  532.                t$448%base_addr = pointer to array[1] of real (kind=8)( loc( gh(1) ) )
  532.                t$448%header%el_len = 64
  532.                t$448%header%assoc = 1
  532.                t$448%header%ptr_alloc = 0
  532.                t$448%header%p_or_a = 0
  532.                t$448%header%a_contig = 1
  532.                t$448%header%n_dim = 1
  532.                t$448%header%orig_base = 0
  532.                t$448%header%orig_size = 0
  532.                t$448%header%n_codim = 0
  532.                t$448%header%dv_versn = 2
  532.                t$448%header%dv_smunit = 64
  532.                t$448%header%d_type = 0
  532.                t$448%header%n_params = 0
  532.                t$448%header%d_type_idx = 13
  532.                t$448%dim_1%LB = 1
  532.                t$448%dim_1%EX = _zla( 0, t$6 )
  532.                t$448%dim_1%SM = 1
  532.                call setmods( t$448 )
  533.                qgenp_si%header%a_contig = 1
  533.                qgenp_si%dim_1%LB = 1
  533.                qgenp_si%dim_1%EX = ( max( 0, 2 * mnmax_si ) )
  533.                qgenp_si%dim_1%SM = 1
  533.                qgenp_si%dim_2%LB = 1
  533.                qgenp_si%dim_2%EX = ( max( 0, kmax ) )
  533.                qgenp_si%dim_2%SM = ( max( 0, 2 * mnmax_si ) )
  533.                $_allo_P17(0) = 0x1000000000001L
  533.                $_allo_P17(1) = loc( qgenp_si )
  533.                call __allocate( $_allo_P17, 0, 0, _fcd( 0, 0 ) )
  534.                qgenp%header%a_contig = 1
  534.                qgenp%dim_1%LB = 1
  534.                qgenp%dim_1%EX = ( max( 0, 2 * mymnmax ) )
  534.                qgenp%dim_1%SM = 1
  534.                qgenp%dim_2%LB = 1
  534.                qgenp%dim_2%EX = ( max( 0, modsloc ) )
  534.                qgenp%dim_2%SM = ( max( 0, 2 * mymnmax ) )
  534.                $_allo_P18(0) = 0x1000000000001L
  534.                $_allo_P18(1) = loc( qgenp )
  534.                call __allocate( $_allo_P18, 0, 0, _fcd( 0, 0 ) )
  536.                niter = cvmg( 3, 2, mods > 2 )
  542.                call bmcm( 1.0, seat_slagr )
  546.                if ( kmax > 0 ) then
  549.                   $SC_sv_I1 = sv%dim_1%EX
  549.                   $SC_sv_I2 = sv%dim_1%LB
  549.                    _substr($W0,1,1) = 't'
  549.                   $W1 = kmax
  549.                   $W2 = kmax
  549.                   $W3 = 1.0
  549.                   $W4 = t$6
  549.                   $W5 = _pbase( 1, sv )
  549.                   $W6 = 0.0
  549.                   $W7 = 1
  549.                   _dgemv(  _substr($W0,1,1), $W1, $W2, $W3, eigg(1, 1), $W4, (sv%base_addr)(1, 0), $W5, $W6, verin(1), $W7 )
  549.                endif
  555.                all_jg%header%a_contig = 1
  555.                all_jg%dim_1%LB = 1
  555.                all_jg%dim_1%EX = ( max( 0, 2 * mmax ) )
  555.                all_jg%dim_1%SM = 1
  555.                all_jg%dim_2%LB = 1
  555.                all_jg%dim_2%EX = ( max( 0, mods ) )
  555.                all_jg%dim_2%SM = ( max( 0, 2 * mmax ) )
  555.                $_allo_P19(0) = 0x1000000000001L
  555.                $_allo_P19(1) = loc( all_jg )
  555.                call __allocate( $_allo_P19, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  556.                if ( ierr /= 0 ) then
  557.                   _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$19,  _substr(t$18,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  559.                   _f90_adjustl(  _substr(t$455,1,10),  _substr(c0,1,10) )
  558.                   t$456 = 42 + ( _ltrim(  _substr(t$455,1,10) ) )
  558.                   t$458 = int( _alloc( max( 0, t$456 ) ), 8 )
  558.                    _substr(t$457,1,max( 0, t$456 )) = //( '**(Nlnmi)** Allocate all_jg returned STAT=',  _substr(t$455,1,_ltrim(  _substr(t$455,1,10) )) )
  558.                   call fatalerror(  _substr(t$457,1,max( 0, t$456 )) )
  558.                   _free( t$458 )
  560.                    _substr(t$459,1,4) = ' '
  560.                   call _stop(  _substr(t$459,1,1) )
  560.                else
  562.                   all_nas%header%a_contig = 1
  562.                   all_nas%dim_1%LB = 1
  562.                   all_nas%dim_1%EX = ( max( 0, 2 * mmax ) )
  562.                   all_nas%dim_1%SM = 1
  562.                   all_nas%dim_2%LB = 1
  562.                   all_nas%dim_2%EX = ( max( 0, mods ) )
  562.                   all_nas%dim_2%SM = ( max( 0, 2 * mmax ) )
  562.                   $_allo_P20(0) = 0x1000000000001L
  562.                   $_allo_P20(1) = loc( all_nas )
  562.                   call __allocate( $_allo_P20, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  563.                   if ( ierr /= 0 ) then
  564.                      _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$21,  _substr(t$20,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  566.                      _f90_adjustl(  _substr(t$460,1,10),  _substr(c0,1,10) )
  565.                      t$461 = 43 + ( _ltrim(  _substr(t$460,1,10) ) )
  565.                      t$463 = int( _alloc( max( 0, t$461 ) ), 8 )
  565.                       _substr(t$462,1,max( 0, t$461 )) = //( '**(Nlnmi)** Allocate all_nas returned STAT=',  _substr(t$460,1,_ltrim(  _substr(t$460,1,10) )) )
  565.                      call fatalerror(  _substr(t$462,1,max( 0, t$461 )) )
  565.                      _free( t$463 )
  567.                       _substr(t$464,1,4) = ' '
  567.                      call _stop(  _substr(t$464,1,1) )
  567.                   else
  569.                      one_g%header%a_contig = 1
  569.                      one_g%dim_1%LB = 1
  569.                      one_g%dim_1%EX = ( max( 0, 3 + 3 * mmax * mmax + 6 * mmax ) )
  569.                      one_g%dim_1%SM = 1
  569.                      $_allo_P21(0) = 0x1000000000001L
  569.                      $_allo_P21(1) = loc( one_g )
  569.                      call __allocate( $_allo_P21, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  570.                      if ( ierr /= 0 ) then
  571.                         _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$23,  _substr(t$22,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  573.                         _f90_adjustl(  _substr(t$465,1,10),  _substr(c0,1,10) )
  572.                         t$466 = 41 + ( _ltrim(  _substr(t$465,1,10) ) )
  572.                         t$468 = int( _alloc( max( 0, t$466 ) ), 8 )
  572.                          _substr(t$467,1,max( 0, t$466 )) = //( '**(Nlnmi)** Allocate one_g returned STAT=',  _substr(t$465,1,_ltrim(  _substr(t$465,1,10) )) )
  572.                         call fatalerror(  _substr(t$467,1,max( 0, t$466 )) )
  572.                         _free( t$468 )
  574.                          _substr(t$469,1,4) = ' '
  574.                         call _stop(  _substr(t$469,1,1) )
  574.                      else
  576.                         one_per%header%a_contig = 1
  576.                         one_per%dim_1%LB = 1
  576.                         one_per%dim_1%EX = ( max( 0, 3 + 3 * mmax * mmax + 6 * mmax ) )
  576.                         one_per%dim_1%SM = 1
  576.                         $_allo_P22(0) = 0x1000000000001L
  576.                         $_allo_P22(1) = loc( one_per )
  576.                         call __allocate( $_allo_P22, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  577.                         if ( ierr /= 0 ) then
  578.                            _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$25,  _substr(t$24,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  580.                            _f90_adjustl(  _substr(t$470,1,10),  _substr(c0,1,10) )
  579.                            t$471 = 43 + ( _ltrim(  _substr(t$470,1,10) ) )
  579.                            t$473 = int( _alloc( max( 0, t$471 ) ), 8 )
  579.                             _substr(t$472,1,max( 0, t$471 )) = //( '**(Nlnmi)** Allocate one_per returned STAT=',  _substr(t$470,1,_ltrim(  _substr(t$470,1,10) )) )
  579.                            call fatalerror(  _substr(t$472,1,max( 0, t$471 )) )
  579.                            _free( t$473 )
  581.                             _substr(t$474,1,4) = ' '
  581.                            call _stop(  _substr(t$474,1,1) )
  582.                         else if ( myid /= 0 ) then
  582.                            goto 30
  582.                         else if ( mods <= 0 ) then
  582.                            goto 90
  582.                            goto 30
  582.                         else if ( mmax > 0 ) then
  590.                            $I_L590_1208 = 0
  590.                            do
  591.                               $I_L591_1166 = 0
  591.                               do
  592.                                  $I_L592_1088 = 0
  592.                                  do
  594.                                     $Unit_temp_O1 = nfnmi
  594.                                     t$482 = _uread( _clist( 0, 1, 3, $Unit_temp_O1, ierr, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P0(:( 0, 1, 1 )), 0x804060200000000L ) ) )
  594.                                     scratch1 = $_IOitem_P0(0)
  594.                                     scratch2 = $_IOitem_P0(1)
  595.                                     (all_jg%base_addr)(1 + $I_L592_1088 + 2 * $I_L591_1166, 1 + $I_L590_1208, 0) = scratch1
  596.                                     (all_nas%base_addr)(1 + $I_L592_1088 + 2 * $I_L591_1166, 1 + $I_L590_1208, 0) = scratch2
  597.                                     if ( ierr /= 0 ) then
  598.                                        _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$27,  _substr(t$26,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  599.                                        _f90_adjustl(  _substr(t$483,1,10),  _substr(c0,1,10) )
  599.                                        t$484 = 49 + ( _ltrim(  _substr(t$483,1,10) ) )
  599.                                        t$486 = int( _alloc( max( 0, t$484 ) ), 8 )
  599.                                         _substr(t$485,1,max( 0, t$484 )) = //( '**(Nlnmi)** Read all_jg, all_nas returned IOSTAT=',  _substr(t$483,1,_ltrim(  _substr(t$483,1,10) )) )
  599.                                        call fatalerror(  _substr(t$485,1,max( 0, t$484 )) )
  599.                                        _free( t$486 )
  600.                                         _substr(t$487,1,4) = ' '
  600.                                        call _stop(  _substr(t$487,1,1) )
  600.                                        goto 110
  600.                                     endif
  601.                                     if ( scratch1 /= 0 ) then
  602.                                        tm$64 = loc( (one_per%base_addr)(1, 0) )
  602.                                        per = _copyin( (one_per%base_addr)(1, 0) )
  602.                                        tm$66 = loc( (one_g%base_addr)(1, 0) )
  602.                                        g = _copyin( (one_g%base_addr)(1, 0) )
  602.                                        t$71 = scratch1
  602.                                        t$214 = max( 0, scratch1 )
  602.                                        t$72 = scratch2
  602.                                        t$215 = max( 0, scratch1 )
  602.                                        t$216 = max( 0, scratch2 )
  602.                                        t$217 = max( 0, scratch1 ) * max( 0, scratch2 )
  602.                                        $Unit_temp_O2 = nfnmi
  602.                                        _uread( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)per(+:( 1, scratch1, 1 )), 0x804060300000000L ), _iotype( (&)g(+:( 1, scratch1, 1 ), +:( 1, scratch2, 1 )), 0x804060300000000L ) ) )
  602.                                        (one_g%base_addr)(1, 0) = _copyout( g )
  602.                                        (one_per%base_addr)(1, 0) = _copyout( per )
  602.                                     endif
  604.                                     $I_L592_1088 = 1 + $I_L592_1088
  603.                                     if ( $I_L592_1088 >= 2 ) exit
  603.                                  enddo
  605.                                  $I_L591_1166 = 1 + $I_L591_1166
  604.                                  if ( $I_L591_1166 >= mmax ) exit
  604.                               enddo
  606.                               $I_L590_1208 = 1 + $I_L590_1208
  605.                               if ( $I_L590_1208 >= mods ) exit
  605.                            enddo
  605.                            goto 100
  605.                         else
  605.   100                      continue
  605.    90                      continue
  610.                            t$398 = nfnmi
  610.                            t$488 = __rewf( t$398, 0, 0, 0x100000000000000L, 0, 0 )
  610.    30                      continue
  615.                            if ( maxnodes > 1 ) then
  616.                               t$421 = ( max( 0, all_jg%dim_2%EX * max( 0, all_jg%dim_1%EX ) ) )
  616.                               call mpi_bcast( (all_jg%base_addr)(1, 1, 0), t$421, 1275069467, 0, 1140850688, ierr )
  617.                               if ( ierr /= 0 ) then
  618.                                  _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$29,  _substr(t$28,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  619.                                  _f90_adjustl(  _substr(t$489,1,10),  _substr(c0,1,10) )
  619.                                  t$490 = 43 + ( _ltrim(  _substr(t$489,1,10) ) )
  619.                                  t$492 = int( _alloc( max( 0, t$490 ) ), 8 )
  619.                                   _substr(t$491,1,max( 0, t$490 )) = //( '**(Nlnmi)** Broadcast all_jg returned ierr=',  _substr(t$489,1,_ltrim(  _substr(t$489,1,10) )) )
  619.                                  call fatalerror(  _substr(t$491,1,max( 0, t$490 )) )
  619.                                  _free( t$492 )
  620.                                   _substr(t$493,1,4) = ' '
  620.                                  call _stop(  _substr(t$493,1,1) )
  620.                               else
  622.                                  t$421 = ( max( 0, all_nas%dim_2%EX * max( 0, all_nas%dim_1%EX ) ) )
  622.                                  call mpi_bcast( (all_nas%base_addr)(1, 1, 0), t$421, 1275069467, 0, 1140850688, ierr )
  623.                                  if ( ierr /= 0 ) then
  624.                                     _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$31,  _substr(t$30,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  625.                                     _f90_adjustl(  _substr(t$494,1,10),  _substr(c0,1,10) )
  625.                                     t$495 = 44 + ( _ltrim(  _substr(t$494,1,10) ) )
  625.                                     t$497 = int( _alloc( max( 0, t$495 ) ), 8 )
  625.                                      _substr(t$496,1,max( 0, t$495 )) = //( '**(Nlnmi)** Broadcast all_nas returned ierr=',  _substr(t$494,1,_ltrim(  _substr(t$494,1,10) )) )
  625.                                     call fatalerror(  _substr(t$496,1,max( 0, t$495 )) )
  625.                                     _free( t$497 )
  626.                                      _substr(t$498,1,4) = ' '
  626.                                     call _stop(  _substr(t$498,1,1) )
  626.                                  else
  626.                                     goto 40
  626.                                  endif
  626.                               endif
  626.                            else
  626.    40                         continue
  632.                               indper%header%a_contig = 1
  632.                               indper%dim_1%LB = 1
  632.                               indper%dim_1%EX = ( max( 0, 2 * mymmax ) )
  632.                               indper%dim_1%SM = 1
  632.                               indper%dim_2%LB = 1
  632.                               indper%dim_2%EX = ( max( 0, modsloc ) )
  632.                               indper%dim_2%SM = ( max( 0, 2 * mymmax ) )
  632.                               $_allo_P23(0) = 0x1000000000001L
  632.                               $_allo_P23(1) = loc( indper )
  632.                               call __allocate( $_allo_P23, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  633.                               if ( ierr /= 0 ) then
  634.                                  _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$33,  _substr(t$32,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  636.                                  _f90_adjustl(  _substr(t$499,1,10),  _substr(c0,1,10) )
  635.                                  t$500 = 42 + ( _ltrim(  _substr(t$499,1,10) ) )
  635.                                  t$502 = int( _alloc( max( 0, t$500 ) ), 8 )
  635.                                   _substr(t$501,1,max( 0, t$500 )) = //( '**(Nlnmi)** Allocate indper returned STAT=',  _substr(t$499,1,_ltrim(  _substr(t$499,1,10) )) )
  635.                                  call fatalerror(  _substr(t$501,1,max( 0, t$500 )) )
  635.                                  _free( t$502 )
  637.                                   _substr(t$503,1,4) = ' '
  637.                                  call _stop(  _substr(t$503,1,1) )
  637.                               else
  639.                                  indg%header%a_contig = 1
  639.                                  indg%dim_1%LB = 1
  639.                                  indg%dim_1%EX = ( max( 0, 2 * mymmax ) )
  639.                                  indg%dim_1%SM = 1
  639.                                  indg%dim_2%LB = 1
  639.                                  indg%dim_2%EX = ( max( 0, modsloc ) )
  639.                                  indg%dim_2%SM = ( max( 0, 2 * mymmax ) )
  639.                                  $_allo_P24(0) = 0x1000000000001L
  639.                                  $_allo_P24(1) = loc( indg )
  639.                                  call __allocate( $_allo_P24, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  640.                                  if ( ierr /= 0 ) then
  641.                                     _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$35,  _substr(t$34,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  643.                                     _f90_adjustl(  _substr(t$504,1,10),  _substr(c0,1,10) )
  642.                                     t$505 = 40 + ( _ltrim(  _substr(t$504,1,10) ) )
  642.                                     t$507 = int( _alloc( max( 0, t$505 ) ), 8 )
  642.                                      _substr(t$506,1,max( 0, t$505 )) = //( '**(Nlnmi)** Allocate indg returned STAT=',  _substr(t$504,1,_ltrim(  _substr(t$504,1,10) )) )
  642.                                     call fatalerror(  _substr(t$506,1,max( 0, t$505 )) )
  642.                                     _free( t$507 )
  644.                                      _substr(t$508,1,4) = ' '
  644.                                     call _stop(  _substr(t$508,1,1) )
  644.                                  else
  646.                                     jg%header%a_contig = 1
  646.                                     jg%dim_1%LB = 1
  646.                                     jg%dim_1%EX = ( max( 0, 2 * mymmax ) )
  646.                                     jg%dim_1%SM = 1
  646.                                     jg%dim_2%LB = 1
  646.                                     jg%dim_2%EX = ( max( 0, modsloc ) )
  646.                                     jg%dim_2%SM = ( max( 0, 2 * mymmax ) )
  646.                                     $_allo_P25(0) = 0x1000000000001L
  646.                                     $_allo_P25(1) = loc( jg )
  646.                                     call __allocate( $_allo_P25, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  647.                                     if ( ierr /= 0 ) then
  648.                                        _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$37,  _substr(t$36,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  650.                                        _f90_adjustl(  _substr(t$509,1,10),  _substr(c0,1,10) )
  649.                                        t$510 = 38 + ( _ltrim(  _substr(t$509,1,10) ) )
  649.                                        t$512 = int( _alloc( max( 0, t$510 ) ), 8 )
  649.                                         _substr(t$511,1,max( 0, t$510 )) = //( '**(Nlnmi)** Allocate jg returned STAT=',  _substr(t$509,1,_ltrim(  _substr(t$509,1,10) )) )
  649.                                        call fatalerror(  _substr(t$511,1,max( 0, t$510 )) )
  649.                                        _free( t$512 )
  651.                                         _substr(t$513,1,4) = ' '
  651.                                        call _stop(  _substr(t$513,1,1) )
  651.                                     else
  653.                                        nas%header%a_contig = 1
  653.                                        nas%dim_1%LB = 1
  653.                                        nas%dim_1%EX = ( max( 0, 2 * mymmax ) )
  653.                                        nas%dim_1%SM = 1
  653.                                        nas%dim_2%LB = 1
  653.                                        nas%dim_2%EX = ( max( 0, modsloc ) )
  653.                                        nas%dim_2%SM = ( max( 0, 2 * mymmax ) )
  653.                                        $_allo_P26(0) = 0x1000000000001L
  653.                                        $_allo_P26(1) = loc( nas )
  653.                                        call __allocate( $_allo_P26, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  654.                                        if ( ierr /= 0 ) then
  655.                                           _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$39,  _substr(t$38,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  657.                                           _f90_adjustl(  _substr(t$514,1,10),  _substr(c0,1,10) )
  656.                                           t$515 = 39 + ( _ltrim(  _substr(t$514,1,10) ) )
  656.                                           t$517 = int( _alloc( max( 0, t$515 ) ), 8 )
  656.                                            _substr(t$516,1,max( 0, t$515 )) = //( '**(Nlnmi)** Allocate nas returned STAT=',  _substr(t$514,1,_ltrim(  _substr(t$514,1,10) )) )
  656.                                           call fatalerror(  _substr(t$516,1,max( 0, t$515 )) )
  656.                                           _free( t$517 )
  658.                                            _substr(t$518,1,4) = ' '
  658.                                           call _stop(  _substr(t$518,1,1) )
  658.                                        else
  663.                                           if ( mmax > 0 ) then
  664.                                              $SC_nodehasm_I3 = nodehasm%dim_1%EX
  664.                                              $SC_nodehasm_I4 = nodehasm%dim_1%LB
  664.                                              $SC_nodehasm_I6 = nodehasm%dim_2%SM
  664.                                              $SC_nodehasm_I5 = nodehasm%dim_2%EX
  664.                                              $SC_nodehasm_I7 = nodehasm%dim_2%LB
  663.                                              $I_L663_1090 = 0
  663. !dir$ ivdep
  663.                                              do
  664.                                                 mine_per_g(1 + $I_L663_1090) = myid_four + -(nodehasm%base_addr)(1 + $I_L663_1090, mygroup_four, 0) == 0
  665.                                                 $I_L663_1090 = 1 + $I_L663_1090
  663.                                                 if ( $I_L663_1090 >= mmax ) exit
  663.                                              enddo
  663.                                           endif
  669.                                           ig = 1
  670.                                           iper = 1
  671.                                           $t_S16 = modsloc
  671.                                           if ( modsloc > 0 ) then
  679.                                              $SC_nas_I19 = ( max( 0, 2 * mymmax ) )
  679.                                              $SC_nas_I18 = ( max( 0, modsloc ) )
  679.                                              $SC_nas_I17 = ( max( 0, 2 * mymmax ) )
  678.                                              $SC_jg_I13 = ( max( 0, 2 * mymmax ) )
  678.                                              $SC_jg_I12 = ( max( 0, modsloc ) )
  678.                                              $SC_jg_I11 = ( max( 0, 2 * mymmax ) )
  682.                                              $SC_indg_I25 = ( max( 0, 2 * mymmax ) )
  682.                                              $SC_indg_I24 = ( max( 0, modsloc ) )
  682.                                              $SC_indg_I23 = ( max( 0, 2 * mymmax ) )
  680.                                              $SC_indper_I22 = ( max( 0, 2 * mymmax ) )
  680.                                              $SC_indper_I21 = ( max( 0, modsloc ) )
  680.                                              $SC_indper_I20 = ( max( 0, 2 * mymmax ) )
  679.                                              $SC_all_nas_I16 = all_nas%dim_2%SM
  679.                                              $SC_all_nas_I15 = all_nas%dim_2%EX
  679.                                              $SC_all_nas_I14 = all_nas%dim_1%EX
  678.                                              $SC_all_jg_I10 = all_jg%dim_2%SM
  678.                                              $SC_all_jg_I9 = all_jg%dim_2%EX
  678.                                              $SC_all_jg_I8 = all_jg%dim_1%EX
  671.                                              $I_L671_1168 = 0
  671.                                              do
  671.                                                 i = ( 1 + $I_L671_1168 )
  673.                                                 ijg = 1
  674.                                                 if ( mmax > 0 ) then
  674.                                                    $I_L674_1092 = 0
  674. !dir$ unroll 2
  674.                                                    do
  677.                                                       if ( mine_per_g(1 + $I_L674_1092) /= .false. ) then
  678.                                                          $jg_WR0_R0 = (all_jg%base_addr)(1 + 2 * $I_L674_1092, myfirstmod + $I_L671_1168, 0)
  678.                                                          (jg%base_addr)(ijg, 1 + $I_L671_1168, 0) = $jg_WR0_R0
  679.                                                          $nas_WR0_R1 = (all_nas%base_addr)(1 + 2 * $I_L674_1092, myfirstmod + $I_L671_1168, 0)
  679.                                                          (nas%base_addr)(ijg, 1 + $I_L671_1168, 0) = $nas_WR0_R1
  680.                                                          (indper%base_addr)(ijg, 1 + $I_L671_1168, 0) = iper
  682.                                                          (indg%base_addr)(ijg, 1 + $I_L671_1168, 0) = ig
  678.                                                          $jg_WR0_R2 = (all_jg%base_addr)(2 + 2 * $I_L674_1092, myfirstmod + $I_L671_1168, 0)
  678.                                                          (jg%base_addr)(1 + ijg, 1 + $I_L671_1168, 0) = $jg_WR0_R2
  679.                                                          $nas_WR0_R3 = (all_nas%base_addr)(2 + 2 * $I_L674_1092, myfirstmod + $I_L671_1168, 0)
  679.                                                          (nas%base_addr)(1 + ijg, 1 + $I_L671_1168, 0) = $nas_WR0_R3
  681.                                                          iper = ( iper + $jg_WR0_R0 )
  680.                                                          (indper%base_addr)(1 + ijg, 1 + $I_L671_1168, 0) = iper
  683.                                                          ig = ( ig + $jg_WR0_R0 * $nas_WR0_R1 )
  682.                                                          (indg%base_addr)(1 + ijg, 1 + $I_L671_1168, 0) = ig
  684.                                                          ijg = ( 2 + ijg )
  681.                                                          iper = ( iper + $jg_WR0_R2 )
  683.                                                          ig = ( ig + $jg_WR0_R2 * $nas_WR0_R3 )
  683.                                                       endif
  687.                                                       $I_L674_1092 = 1 + $I_L674_1092
  686.                                                       if ( $I_L674_1092 >= mmax ) exit
  686.                                                    enddo
  686.                                                 endif
  691.                                                 if ( -ijg + 2 * mymmax /= -1 ) then
  692.                                                    _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$41,  _substr(t$40,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i, 0x2000200000000L ) ) )
  693.                                                    _f90_adjustl(  _substr(t$529,1,10),  _substr(c0,1,10) )
  693.                                                     _substr(t$530,1,11) = '**(Nlnmi)**'
  693.                                                    t$531 = 37 + ( _ltrim(  _substr(t$529,1,10) ) )
  693.                                                    t$533 = int( _alloc( max( 0, t$531 ) ), 8 )
  693.                                                     _substr(t$532,1,max( 0, t$531 )) = //( ' jg and nas not fully filled at mode ',  _substr(t$529,1,_ltrim(  _substr(t$529,1,10) )) )
  693.                                                    call msgdump(  _substr(t$530,1,11),  _substr(t$532,1,max( 0, t$531 )) )
  693.                                                    _free( t$533 )
  694.                                                    _f90_adjustl(  _substr(t$534,1,10),  _substr(c0,1,10) )
  694.                                                    t$535 = 48 + ( _ltrim(  _substr(t$534,1,10) ) )
  694.                                                    t$537 = int( _alloc( max( 0, t$535 ) ), 8 )
  694.                                                     _substr(t$536,1,max( 0, t$535 )) = //( '**(Nlnmi)** jg and nas not fully filled at mode ',  _substr(t$534,1,_ltrim(  _substr(t$534,1,10) )) )
  694.                                                    call fatalerror(  _substr(t$536,1,max( 0, t$535 )) )
  694.                                                    _free( t$537 )
  694.                                                 endif
  696.                                                 $I_L671_1168 = 1 + $I_L671_1168
  695.                                                 if ( $I_L671_1168 >= $t_S16 ) exit
  695.                                              enddo
  695.                                           endif
  700.                                           tot_g = ( -1 + ig )
  701.                                           tot_per = ( -1 + iper )
  705.                                           per%header%a_contig = 1
  705.                                           per%dim_1%LB = 1
  705.                                           per%dim_1%EX = max( 0, ( -1 + iper ) )
  705.                                           per%dim_1%SM = 1
  705.                                           $_allo_P27(0) = 0x1000000000001L
  705.                                           $_allo_P27(1) = loc( per )
  705.                                           call __allocate( $_allo_P27, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  706.                                           if ( ierr /= 0 ) then
  707.                                              _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$43,  _substr(t$42,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  708.                                              _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$45,  _substr(t$44,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( tot_per, 0x804060200000000L ) ) )
  710.                                              _f90_adjustl(  _substr(t$538,1,10),  _substr(c1,1,10) )
  711.                                              _f90_adjustl(  _substr(t$539,1,10),  _substr(c0,1,10) )
  709.                                              t$540 = 48 + ( _ltrim(  _substr(t$538,1,10) ) ) + ( _ltrim(  _substr(t$539,1,10) ) )
  710.                                              t$542 = int( _alloc( max( 0, t$540 ) ), 8 )
  710.                                               _substr(t$541,1,max( 0, t$540 )) = //( '**(Nlnmi)** Allocate per of size ', //(  _substr(t$538,1,_ltrim(  _substr(t$538,1,10) )), //( ' returned STAT=',  _substr(t$539,1,_ltrim(  _substr(t$539,1,10) )) ) ) )
  709.                                              call fatalerror(  _substr(t$541,1,max( 0, t$540 )) )
  710.                                              _free( t$542 )
  712.                                               _substr(t$543,1,4) = ' '
  712.                                              call _stop(  _substr(t$543,1,1) )
  712.                                           else
  714.                                              g%header%a_contig = 1
  714.                                              g%dim_1%LB = 1
  714.                                              g%dim_1%EX = max( 0, ( -1 + ig ) )
  714.                                              g%dim_1%SM = 1
  714.                                              $_allo_P28(0) = 0x1000000000001L
  714.                                              $_allo_P28(1) = loc( g )
  714.                                              call __allocate( $_allo_P28, ierr, 0x2000200000000L, _fcd( 0, 0 ) )
  715.                                              if ( ierr /= 0 ) then
  716.                                                 _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$47,  _substr(t$46,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  717.                                                 _fwrite( _clist( 0, 0, 3,  _substr(c1,1,10), Null_Arg, Null_Arg, t$49,  _substr(t$48,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( tot_g, 0x804060200000000L ) ) )
  719.                                                 _f90_adjustl(  _substr(t$544,1,10),  _substr(c1,1,10) )
  720.                                                 _f90_adjustl(  _substr(t$545,1,10),  _substr(c0,1,10) )
  718.                                                 t$546 = 46 + ( _ltrim(  _substr(t$544,1,10) ) ) + ( _ltrim(  _substr(t$545,1,10) ) )
  719.                                                 t$548 = int( _alloc( max( 0, t$546 ) ), 8 )
  719.                                                  _substr(t$547,1,max( 0, t$546 )) = //( '**(Nlnmi)** Allocate g of size ', //(  _substr(t$544,1,_ltrim(  _substr(t$544,1,10) )), //( ' returned STAT=',  _substr(t$545,1,_ltrim(  _substr(t$545,1,10) )) ) ) )
  718.                                                 call fatalerror(  _substr(t$547,1,max( 0, t$546 )) )
  719.                                                 _free( t$548 )
  721.                                                  _substr(t$549,1,4) = ' '
  721.                                                 call _stop(  _substr(t$549,1,1) )
  722.                                              else if ( myid == 0 ) then
  727.                                                 if ( ( ( 0 >= realbuffer%dim_1%EX .or. realbuffer%dim_1%EX <= 0 ) .and. realbuffer%dim_1%EX > 0 ) /= .false. ) then
  727.                                                     _substr(t$552,1,17) = 'NonLinearNMI.f90'
  727.                                                     _substr(t$553,1,11) = 'REALBUFFER'
  727.                                                    t$413 = 1
  727.                                                    t$414 = realbuffer%dim_1%EX
  727.                                                    t$415 = 1
  727.                                                    t$398 = realbuffer%dim_1%EX
  727.                                                    call _rbounds_error(  _substr(t$552,1,17), 1227,  _substr(t$553,1,11), 1, t$413, t$414, t$415, t$398, 1, t$551 )
  727.                                                 endif
  727.                                                 $Unit_temp_O3 = nfnmi
  727.                                                 t$550 = _uread( _clist( 0, 1, 3, $Unit_temp_O3, ierr, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(realbuffer%base_addr)(+:( 1, realbuffer%dim_1%EX, 1 ), 0), 0x804060300000000L ) ) )
  728.                                                 if ( ierr /= 0 ) then
  729.                                                    _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$51,  _substr(t$50,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  730.                                                    _f90_adjustl(  _substr(t$554,1,10),  _substr(c0,1,10) )
  730.                                                    t$555 = 51 + ( _ltrim(  _substr(t$554,1,10) ) )
  730.                                                    t$557 = int( _alloc( max( 0, t$555 ) ), 8 )
  730.                                                     _substr(t$556,1,max( 0, t$555 )) = //( '**(Nlnmi)** Second read RealBuffer returned IOSTAT=',  _substr(t$554,1,_ltrim(  _substr(t$554,1,10) )) )
  730.                                                    call fatalerror(  _substr(t$556,1,max( 0, t$555 )) )
  730.                                                    _free( t$557 )
  731.                                                     _substr(t$558,1,4) = ' '
  731.                                                    call _stop(  _substr(t$558,1,1) )
  731.                                                 else
  731.                                                    goto 50
  731.                                                 endif
  731.                                              else
  731.    50                                           continue
  741.                                                 $t_S21 = mods
  741.                                                 if ( mods > 0 ) then
  793.                                                    $SC_nas_I19 = nas%dim_2%SM
  793.                                                    $SC_nas_I18 = nas%dim_2%EX
  793.                                                    $SC_nas_I17 = nas%dim_1%EX
  786.                                                    $SC_jg_I13 = jg%dim_2%SM
  786.                                                    $SC_jg_I12 = jg%dim_2%EX
  786.                                                    $SC_jg_I11 = jg%dim_1%EX
  760.                                                    $SC_indg_I25 = indg%dim_2%SM
  760.                                                    $SC_indg_I24 = indg%dim_2%EX
  760.                                                    $SC_indg_I23 = indg%dim_1%EX
  760.                                                    $SC_indper_I22 = indper%dim_2%SM
  760.                                                    $SC_indper_I21 = indper%dim_2%EX
  760.                                                    $SC_indper_I20 = indper%dim_1%EX
  764.                                                    $SC_one_per_I26 = one_per%dim_1%EX
  764.                                                    $SC_one_I27 = one_g%dim_1%EX
  785.                                                    $SC_all_jg_I10 = all_jg%dim_2%SM
  785.                                                    $SC_all_jg_I9 = all_jg%dim_2%EX
  785.                                                    $SC_all_jg_I8 = all_jg%dim_1%EX
  741.                                                    $I_L741_1210 = 0
  741.                                                    do
  742.                                                       group = (grouphasmod%base_addr)(1 + $I_L741_1210, 0)
  743.                                                       i1 = ( 2 + $I_L741_1210 + -myfirstmod )
  744.                                                       ijg = 1
  745.                                                       $t_S20 = mmax
  745.                                                       if ( mmax > 0 ) then
  745.                                                          $I_L745_1170 = 0
  745.                                                          do
  746.                                                             $I_L746_1094 = 0
  746.                                                             do
  752.                                                                if ( myid == 0 ) then
  753.                                                                   $Unit_temp_O4 = nfnmi
  753.                                                                   t$566 = _uread( _clist( 0, 1, 3, $Unit_temp_O4, ierr, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P1(:( 0, 1, 1 )), 0x804060200000000L ) ) )
  753.                                                                   scratch1 = $_IOitem_P1(0)
  753.                                                                   scratch2 = $_IOitem_P1(1)
  754.                                                                   if ( ierr /= 0 ) then
  755.                                                                      _fwrite( _clist( 0, 0, 3,  _substr(c0,1,10), Null_Arg, Null_Arg, t$53,  _substr(t$52,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ierr, 0x2000200000000L ) ) )
  756.                                                                      _f90_adjustl(  _substr(t$567,1,10),  _substr(c0,1,10) )
  756.                                                                      t$568 = 52 + ( _ltrim(  _substr(t$567,1,10) ) )
  756.                                                                      t$570 = int( _alloc( max( 0, t$568 ) ), 8 )
  756.                                                                       _substr(t$569,1,max( 0, t$568 )) = //( '**(Nlnmi)** Read scratch1, scratch2 returned IOSTAT=',  _substr(t$567,1,_ltrim(  _substr(t$567,1,10) )) )
  756.                                                                      call fatalerror(  _substr(t$569,1,max( 0, t$568 )) )
  756.                                                                      _free( t$570 )
  757.                                                                       _substr(t$571,1,4) = ' '
  757.                                                                      call _stop(  _substr(t$571,1,1) )
  757.                                                                   else if ( scratch1 == 0 ) then
  802.                                                                      $I_L746_1094 = 1 + $I_L746_1094
  801.                                                                   else if ( group + -mygroup_four /= 0 ) then
  801.                                                                   else if ( (nodehasm%base_addr)(1 + $I_L745_1170, mygroup_four, 0) == 0 ) then
  801.                                                                   else
  801.                                                                   endif
  785.                                                                else if ( group + -mygroup_four /= 0 ) then
  785.                                                                else if ( (all_jg%base_addr)(1 + $I_L746_1094 + 2 * $I_L745_1170, 1 + $I_L741_1210, 0) == 0 ) then
  785.                                                                else if ( myid_four + -(nodehasm%base_addr)(1 + $I_L745_1170, mygroup_four, 0) == 0 ) then
  785.                                                                else
  785.                                                                endif
  785.                                                                if ( $I_L746_1094 >= 2 ) exit
  785.                                                             enddo
  803.                                                             $I_L745_1170 = 1 + $I_L745_1170
  802.                                                             if ( $I_L745_1170 >= $t_S20 ) exit
  802.                                                          enddo
  804.                                                          $I_L741_1210 = 1 + $I_L741_1210
  803.                                                       else
  803.                                                       endif
  803.                                                       if ( $I_L741_1210 >= $t_S21 ) exit
  803.                                                    enddo
  803.                                                    goto 60
  803.                                                 else
  803.    60                                              continue
  807.                                                    if ( myid == 0 ) then
  808.                                                       t$413 = nfnmi
  808.                                                       t$593(1) = 0x100000000000000L
  808. !dir$ suppress t$413
  808.                                                       t$593(2) = int( loc( t$413 ), 8 )
  808.                                                       t$593(3) = 0
  808.                                                       t$593(4) = 0
  808.                                                       t$593(5) = 0
  808.                                                       t$593(7) = 0
  808.                                                       t$593(8) = 0
  808.                                                       t$592 = _close( t$593 )
  808.                                                    endif
  811.                                                    fb1 = 1.0
  812.                                                    fa = 0.0
  813.                                                    fb = 0.0
  814.                                                    dt = 1.0
  816.                                                    $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  816.                                                    $$_myms_BASE = _alloc( 8 * _rsh( 63 + 32 * _zla( 0, t$8 ), 6 ) )
  816.                                                    $pvt_Abase_seg57_D0 = $$_myms_BASE
  816.                                                    $snt_T5 = _mt_start_code( 14, _mt_rw_list(...) )
  821.                                                    call threaddecompms( mymmax, $$_myms(1), $$_nms )
  822.                                                    t$594 = 2 * mymnmax
  822.                                                     _substr(t$595,1,5) = 'Nlnmi'
  822.                                                    call threaddecomp( 1, t$594, $$_mnrifirst, $$_mnrilast,  _substr(t$595,1,5) )
  823.                                                     _substr(t$596,1,5) = 'Nlnmi'
  823.                                                    call threaddecomp( 1, mnmax_si, $$_mnfirst_si, $$_mnlast_si,  _substr(t$596,1,5) )
  824.                                                    t$597 = 2 * mnmax_si
  824.                                                     _substr(t$598,1,5) = 'Nlnmi'
  824.                                                    call threaddecomp( 1, t$597, $$_mnrifirst_si, $$_mnrilast_si,  _substr(t$598,1,5) )
  828.                                                    $t_S69 = niter
  828.                                                    if ( niter > 0 ) then
  878.                                                       $SC_g_I58 = max( 0, ( -1 + ig ) )
  878.                                                       $SC_per_I57 = max( 0, ( -1 + iper ) )
  878.                                                       $SC_nas_I19 = nas%dim_2%SM
  878.                                                       $SC_nas_I18 = nas%dim_2%EX
  878.                                                       $SC_nas_I17 = nas%dim_1%EX
  878.                                                       $SC_jg_I13 = jg%dim_2%SM
  878.                                                       $SC_jg_I12 = jg%dim_2%EX
  878.                                                       $SC_jg_I11 = jg%dim_1%EX
  878.                                                       $SC_indg_I25 = indg%dim_2%SM
  878.                                                       $SC_indg_I24 = indg%dim_2%EX
  878.                                                       $SC_indg_I23 = indg%dim_1%EX
  878.                                                       $SC_indper_I22 = indper%dim_2%SM
  878.                                                       $SC_indper_I21 = indper%dim_2%EX
  878.                                                       $SC_indper_I20 = indper%dim_1%EX
  828.                                                       $I_L828_1250 = 0
  828.                                                       do
  832.                                                          call timestep( fb1, fa, fb, seat_slagr, seat_nlnminit, .false., .false., dt, 0, seat_ifday, seat_tod, seat_idatec(1), 0 )
  836.                                                          if ( seat_diabatic /= .false. ) then
  837.                                                             if ( $$_mnrilast + -$$_mnrifirst >= 0 ) then
  838.                                                                $SC_qdiaten_I33 = qdiaten%dim_1%EX
  838.                                                                $SC_qdiaten_I34 = qdiaten%dim_1%LB
  838.                                                                $SC_qdiaten_I36 = qdiaten%dim_2%SM
  838.                                                                $SC_qdiaten_I35 = qdiaten%dim_2%EX
  838.                                                                $SC_qdiaten_I37 = qdiaten%dim_2%LB
  838.                                                                $SC_qtmpt_I28 = qtmpt%dim_1%EX
  838.                                                                $SC_qtmpt_I29 = qtmpt%dim_1%LB
  838.                                                                $SC_qtmpt_I31 = qtmpt%dim_2%SM
  838.                                                                $SC_qtmpt_I30 = qtmpt%dim_2%EX
  838.                                                                $SC_qtmpt_I32 = qtmpt%dim_2%LB
  837.                                                                $I_L837_1172 = 0
  837.                                                                do
  838.                                                                   $F_A33 = $SC_qdiaten_I35
  838.                                                                   if ( $SC_qdiaten_I35 > 0 ) then
  838.                                                                      $I_L838_1150 = 0
  838. !dir$ ivdep
  838.                                                                      do
  838.                                                                         (qtmpt%base_addr)($$_mnrifirst + $I_L837_1172, $SC_qtmpt_I32 + $I_L838_1150, 0) = (qtmpt%base_addr)($$_mnrifirst + $I_L837_1172, $SC_qtmpt_I32 + $I_L838_1150, 0) + (qdiaten%base_addr)($$_mnrifirst + $I_L837_1172, $SC_qdiaten_I37 + $I_L838_1150, 0)
  838.                                                                         $I_L838_1150 = 1 + $I_L838_1150
  838.                                                                         if ( $I_L838_1150 >= $F_A33 ) exit
  838.                                                                      enddo
  838.                                                                   endif
  839.                                                                   $I_L837_1172 = 1 + $I_L837_1172
  837.                                                                   if ( $I_L837_1172 >= 1 + $$_mnrilast + -$$_mnrifirst ) exit
  837.                                                                enddo
  837.                                                             endif
  837.                                                          endif
  844.                                                          _mt_barrier( 2, _mt_rw_list(...) )
  845.                                                          $snt_T1 = _mt_single( 3, _mt_rw_list(...) )
  846.                                                          call spectosi( (inibs_si%base_addr)(inibs_si%dim_1%LB, 0), (inibr_si%base_addr)(inibr_si%dim_1%LB, 0), nsends_si, nrecs_si, (mysends_si%base_addr)(mysends_si%dim_1%LB, 0), (myrecs_si%base_addr)(myrecs_si%dim_1%LB, 0), (maps_si%base_addr)(maps_si%dim_1%LB, 0), (mapr_si%base_addr)(mapr_si%dim_1%LB, 0), kmax, kmaxloc, (nlevperg_four%base_addr)(nlevperg_four%dim_1%LB, 0), (qtmpt%base_addr)(qtmpt%dim_1%LB, qtmpt%dim_2%LB, 0), (qdivt%base_addr)(qdivt%dim_1%LB, qdivt%dim_2%LB, 0), (qtmpt_si%base_addr)(qtmpt_si%dim_1%LB, qtmpt_si%dim_2%LB, 0), (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0), (qrott%base_addr)(qrott%dim_1%LB, qrott%dim_2%LB, 0), (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0), (qlnpt%base_addr)(qlnpt%dim_1%LB, 0), (qlnpt_si%base_addr)(qlnpt_si%dim_1%LB, 0) )
  849.                                                          $snt_T1 = _mt_endsingle( 3, _mt_rw_list(...), $snt_T1 )
  853.                                                          if ( kmax > 0 ) then
  860.                                                             $SC_hm_I45 = hm%dim_1%EX
  860.                                                             $SC_hm_I46 = hm%dim_1%LB
  860.                                                             $SC_hm_I48 = hm%dim_2%SM
  860.                                                             $SC_hm_I47 = hm%dim_2%EX
  860.                                                             $SC_hm_I49 = hm%dim_2%LB
  856.                                                             $SC_qlnpt_si_I38 = qlnpt_si%dim_1%EX
  856.                                                             $SC_qlnpt_si_I39 = qlnpt_si%dim_1%LB
  860.                                                             $SC_qtmpt_si_I50 = qtmpt_si%dim_1%EX
  860.                                                             $SC_qtmpt_si_I51 = qtmpt_si%dim_1%LB
  860.                                                             $SC_qtmpt_si_I53 = qtmpt_si%dim_2%SM
  860.                                                             $SC_qtmpt_si_I52 = qtmpt_si%dim_2%EX
  860.                                                             $SC_qtmpt_si_I54 = qtmpt_si%dim_2%LB
  856.                                                             $SC_qgenp_si_I43 = qgenp_si%dim_2%SM
  856.                                                             $SC_qgenp_si_I42 = qgenp_si%dim_2%EX
  856.                                                             $SC_qgenp_si_I44 = qgenp_si%dim_2%LB
  856.                                                             $SC_qgenp_si_I40 = qgenp_si%dim_1%EX
  856.                                                             $SC_qgenp_si_I41 = qgenp_si%dim_1%LB
  855.                                                             if ( $$_mnrilast_si + -$$_mnrifirst_si >= 0 ) then
  853.                                                                $I_L853_1244 = 0
  853.                                                                do
  854.                                                                   $$_tor = 287.05000000000001 * to(1 + $I_L853_1244)
  855.                                                                   $I_L855_1096 = 0
  855. !dir$ ivdep
  855.                                                                   do
  856.                                                                      (qgenp_si%base_addr)($$_mnrifirst_si + $I_L855_1096, 1 + $I_L853_1244, 0) = $$_tor * (qlnpt_si%base_addr)($$_mnrifirst_si + $I_L855_1096, 0)
  857.                                                                      $I_L855_1096 = 1 + $I_L855_1096
  855.                                                                      if ( $I_L855_1096 >= 1 + $$_mnrilast_si + -$$_mnrifirst_si ) exit
  855.                                                                   enddo
  858.                                                                   $I_L858_1234 = 0
  858.                                                                   do
  859.                                                                      $I_L859_1212 = 0
  859.                                                                      do
  858.                                                                         $I_L858_1198 = 0
  858. !dir$ shortloop16
  858. !dir$ blocking_size( 4, 4 )
  858.                                                                         do
  859.                                                                            $SCA_hm_I83 = (hm%base_addr)(1 + $I_L853_1244, 1 + $I_L858_1198 + 4 * $I_L858_1234, 0)
  859.                                                                            $I_L859_1098 = 0
  859. !dir$ ivdep
  859. !dir$ blocking_size( 256, 256 )
  859.                                                                            do
  860.                                                                               (qgenp_si%base_addr)($$_mnrifirst_si + $I_L859_1098 + 256 * $I_L859_1212, 1 + $I_L853_1244, 0) = (qgenp_si%base_addr)($$_mnrifirst_si + $I_L859_1098 + 256 * $I_L859_1212, 1 + $I_L853_1244, 0) + $SCA_hm_I83 * (qtmpt_si%base_addr)($$_mnrifirst_si + $I_L859_1098 + 256 * $I_L859_1212, 1 + $I_L858_1198 + 4 * $I_L858_1234, 0)
  859.                                                                               $I_L859_1098 = 1 + $I_L859_1098
  859.                                                                               if ( $I_L859_1098 >= min( 1 + $$_mnrilast_si + -$$_mnrifirst_si, 256 + 256 * $I_L859_1212 ) + -256 * $I_L859_1212 ) exit
  859.                                                                            enddo
  858.                                                                            $I_L858_1198 = 1 + $I_L858_1198
  858.                                                                            if ( $I_L858_1198 >= min( kmax, 4 + 4 * $I_L858_1234 ) + -4 * $I_L858_1234 ) exit
  858.                                                                         enddo
  859.                                                                         $I_L859_1212 = 1 + $I_L859_1212
  861.                                                                         if ( $I_L859_1212 >= 1 + max( 0, -1 + _rsh( 256 + $$_mnrilast_si + -$$_mnrifirst_si, 8 ) ) ) exit
  861.                                                                      enddo
  858.                                                                      $I_L858_1234 = 1 + $I_L858_1234
  858.                                                                      if ( $I_L858_1234 >= 1 + max( 0, -1 + _rsh( 3 + kmax, 2 ) ) ) exit
  858.                                                                   enddo
  863.                                                                   $I_L853_1244 = 1 + $I_L853_1244
  862.                                                                   if ( $I_L853_1244 >= kmax ) exit
  862.                                                                enddo
  862.                                                             endif
  862.                                                          endif
  864.                                                          _mt_barrier( 4, _mt_rw_list(...) )
  865.                                                          tm$130 = loc( (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) )
  865.                                                          f = _copyin( (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) )
  865.                                                          tm$132 = loc( eigg(1, 1) )
  865.                                                          eigg = _copyin( eigg(1, 1) )
  865.                                                          tm$134 = loc( eiggt(1, 1) )
  865.                                                          eiggt = _copyin( eiggt(1, 1) )
  865.                                                          t$63 = mnmax_si
  865.                                                          t$62 = kmax
  865.                                                          t$181 = max( 0, mnmax_si )
  865.                                                          t$182 = 2 * max( 0, mnmax_si )
  865.                                                          t$183 = max( 0, kmax )
  865.                                                          t$184 = 2 * max( 0, kmax ) * max( 0, mnmax_si )
  865.                                                          t$185 = max( 0, kmax )
  865.                                                          t$186 = max( 0, kmax ) * max( 0, kmax )
  865.                                                          t$187 = 2 * max( 0, kmax )
  865.                                                          t$190 = 16 * max( 0, kmax )
  865.                                                          t$188 = int( _alloc( 16 * max( 0, kmax ) ), 8 )
  865.                                                          t$189 = t$188
  865.                                                          if ( $$_mnlast_si + -$$_mnfirst_si >= 0 ) then
  865.                                                             if ( mods > 0 ) then
  865.                                                                if ( kmax > 0 ) then
  865.                                                                   $I_L865_1214 = 0
  865.                                                                   do
  865.                                                                      $I_L865_1174 = 0
  865. !dir$ ivdep
  865.                                                                      do
  865.                                                                         $$_sum1 = 0.0
  865.                                                                         $$_sum2 = 0.0
  865.                                                                         $I_L865_1100 = 0
  865. !dir$ unroll 4
  865.                                                                         do
  865.                                                                            $$_sum1 = $$_sum1 + eiggt(1 + $I_L865_1100, 1 + $I_L865_1174) * f(1, $$_mnfirst_si + $I_L865_1214, 1 + $I_L865_1100)
  865.                                                                            $$_sum2 = $$_sum2 + eiggt(1 + $I_L865_1100, 1 + $I_L865_1174) * f(2, $$_mnfirst_si + $I_L865_1214, 1 + $I_L865_1100)
  865.                                                                            $I_L865_1100 = 1 + $I_L865_1100
  865.                                                                            if ( $I_L865_1100 >= kmax ) exit
  865.                                                                         enddo
  865.                                                                         col(1, 1 + $I_L865_1174) = $$_sum1 * dotpro(1 + $I_L865_1174)
  865.                                                                         col(2, 1 + $I_L865_1174) = $$_sum2 * dotpro(1 + $I_L865_1174)
  865.                                                                         $I_L865_1174 = 1 + $I_L865_1174
  865.                                                                         if ( $I_L865_1174 >= mods ) exit
  865.                                                                      enddo
  865.                                                                      $I_L865_1102 = 0
  865. !dir$ ivdep
  865.                                                                      do
  865.                                                                         f(1, $$_mnfirst_si + $I_L865_1214, 1 + $I_L865_1102) = col(1, 1 + $I_L865_1102)
  865.                                                                         f(2, $$_mnfirst_si + $I_L865_1214, 1 + $I_L865_1102) = col(2, 1 + $I_L865_1102)
  865.                                                                         $I_L865_1102 = 1 + $I_L865_1102
  865.                                                                         if ( $I_L865_1102 >= mods ) exit
  865.                                                                      enddo
  865.                                                                      $I_L865_1214 = 1 + $I_L865_1214
  865.                                                                      if ( $I_L865_1214 >= 1 + $$_mnlast_si + -$$_mnfirst_si ) exit
  865.                                                                   enddo
  865.                                                                else
  865.                                                                   $I_L865_1236 = 0
  865.                                                                   do
  865.                                                                      $I_L865_1228 = 0
  865.                                                                      do
  865.                                                                         $I_L865_1200 = 0
  865. !dir$ blocking_size( 64, 64 )
  865.                                                                         do
  865.                                                                            $I_L865_1144 = 0
  865. !dir$ ivdep
  865. !dir$ blocking_size( 128, 128 )
  865.                                                                            do
  865.                                                                               col(1, 1 + $I_L865_1144 + 128 * $I_L865_1228) = 0.0
  865.                                                                               col(2, 1 + $I_L865_1144 + 128 * $I_L865_1228) = 0.0
  865.                                                                               f(1, $$_mnfirst_si + $I_L865_1200 + 64 * $I_L865_1236, 1 + $I_L865_1144 + 128 * $I_L865_1228) = 0.0
  865.                                                                               f(2, $$_mnfirst_si + $I_L865_1200 + 64 * $I_L865_1236, 1 + $I_L865_1144 + 128 * $I_L865_1228) = 0.0
  865.                                                                               $I_L865_1144 = 1 + $I_L865_1144
  865.                                                                               if ( $I_L865_1144 >= min( mods, 128 + 128 * $I_L865_1228 ) + -128 * $I_L865_1228 ) exit
  865.                                                                            enddo
  865.                                                                            $I_L865_1200 = 1 + $I_L865_1200
  865.                                                                            if ( $I_L865_1200 >= min( 1 + $$_mnlast_si + -$$_mnfirst_si, 64 + 64 * $I_L865_1236 ) + -64 * $I_L865_1236 ) exit
  865.                                                                         enddo
  865.                                                                         $I_L865_1228 = 1 + $I_L865_1228
  865.                                                                         if ( $I_L865_1228 >= 1 + max( 0, -1 + _rsh( 127 + mods, 7 ) ) ) exit
  865.                                                                      enddo
  865.                                                                      $I_L865_1236 = 1 + $I_L865_1236
  865.                                                                      if ( $I_L865_1236 >= 1 + max( 0, -1 + _rsh( 64 + $$_mnlast_si + -$$_mnfirst_si, 6 ) ) ) exit
  865.                                                                   enddo
  865.                                                                endif
  865.                                                             endif
  865.                                                          endif
  865.                                                          _free( t$188 )
  865.                                                          eiggt(1, 1) = _copyout( eiggt )
  865.                                                          eigg(1, 1) = _copyout( eigg )
  865.                                                          (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) = _copyout( f )
  866.                                                          tm$143 = loc( (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) )
  866.                                                          f = _copyin( (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) )
  866.                                                          tm$145 = loc( eigg(1, 1) )
  866.                                                          eigg = _copyin( eigg(1, 1) )
  866.                                                          tm$147 = loc( eiggt(1, 1) )
  866.                                                          eiggt = _copyin( eiggt(1, 1) )
  866.                                                          t$63 = mnmax_si
  866.                                                          t$62 = kmax
  866.                                                          t$181 = max( 0, mnmax_si )
  866.                                                          t$182 = 2 * max( 0, mnmax_si )
  866.                                                          t$183 = max( 0, kmax )
  866.                                                          t$184 = 2 * max( 0, kmax ) * max( 0, mnmax_si )
  866.                                                          t$185 = max( 0, kmax )
  866.                                                          t$186 = max( 0, kmax ) * max( 0, kmax )
  866.                                                          t$187 = 2 * max( 0, kmax )
  866.                                                          t$190 = 16 * max( 0, kmax )
  866.                                                          t$188 = int( _alloc( 16 * max( 0, kmax ) ), 8 )
  866.                                                          t$189 = t$188
  866.                                                          if ( $$_mnlast_si + -$$_mnfirst_si >= 0 ) then
  866.                                                             if ( mods > 0 ) then
  866.                                                                if ( kmax > 0 ) then
  866.                                                                   $I_L866_1216 = 0
  866.                                                                   do
  866.                                                                      $I_L866_1176 = 0
  866. !dir$ ivdep
  866.                                                                      do
  866.                                                                         $$_sum1 = 0.0
  866.                                                                         $$_sum2 = 0.0
  866.                                                                         $I_L866_1104 = 0
  866. !dir$ unroll 4
  866.                                                                         do
  866.                                                                            $$_sum1 = $$_sum1 + eiggt(1 + $I_L866_1104, 1 + $I_L866_1176) * f(1, $$_mnfirst_si + $I_L866_1216, 1 + $I_L866_1104)
  866.                                                                            $$_sum2 = $$_sum2 + eiggt(1 + $I_L866_1104, 1 + $I_L866_1176) * f(2, $$_mnfirst_si + $I_L866_1216, 1 + $I_L866_1104)
  866.                                                                            $I_L866_1104 = 1 + $I_L866_1104
  866.                                                                            if ( $I_L866_1104 >= kmax ) exit
  866.                                                                         enddo
  866.                                                                         col(1, 1 + $I_L866_1176) = $$_sum1 * dotpro(1 + $I_L866_1176)
  866.                                                                         col(2, 1 + $I_L866_1176) = $$_sum2 * dotpro(1 + $I_L866_1176)
  866.                                                                         $I_L866_1176 = 1 + $I_L866_1176
  866.                                                                         if ( $I_L866_1176 >= mods ) exit
  866.                                                                      enddo
  866.                                                                      $I_L866_1106 = 0
  866. !dir$ ivdep
  866.                                                                      do
  866.                                                                         f(1, $$_mnfirst_si + $I_L866_1216, 1 + $I_L866_1106) = col(1, 1 + $I_L866_1106)
  866.                                                                         f(2, $$_mnfirst_si + $I_L866_1216, 1 + $I_L866_1106) = col(2, 1 + $I_L866_1106)
  866.                                                                         $I_L866_1106 = 1 + $I_L866_1106
  866.                                                                         if ( $I_L866_1106 >= mods ) exit
  866.                                                                      enddo
  866.                                                                      $I_L866_1216 = 1 + $I_L866_1216
  866.                                                                      if ( $I_L866_1216 >= 1 + $$_mnlast_si + -$$_mnfirst_si ) exit
  866.                                                                   enddo
  866.                                                                else
  866.                                                                   $I_L866_1238 = 0
  866.                                                                   do
  866.                                                                      $I_L866_1230 = 0
  866.                                                                      do
  866.                                                                         $I_L866_1202 = 0
  866. !dir$ blocking_size( 64, 64 )
  866.                                                                         do
  866.                                                                            $I_L866_1146 = 0
  866. !dir$ ivdep
  866. !dir$ blocking_size( 128, 128 )
  866.                                                                            do
  866.                                                                               col(1, 1 + $I_L866_1146 + 128 * $I_L866_1230) = 0.0
  866.                                                                               col(2, 1 + $I_L866_1146 + 128 * $I_L866_1230) = 0.0
  866.                                                                               f(1, $$_mnfirst_si + $I_L866_1202 + 64 * $I_L866_1238, 1 + $I_L866_1146 + 128 * $I_L866_1230) = 0.0
  866.                                                                               f(2, $$_mnfirst_si + $I_L866_1202 + 64 * $I_L866_1238, 1 + $I_L866_1146 + 128 * $I_L866_1230) = 0.0
  866.                                                                               $I_L866_1146 = 1 + $I_L866_1146
  866.                                                                               if ( $I_L866_1146 >= min( mods, 128 + 128 * $I_L866_1230 ) + -128 * $I_L866_1230 ) exit
  866.                                                                            enddo
  866.                                                                            $I_L866_1202 = 1 + $I_L866_1202
  866.                                                                            if ( $I_L866_1202 >= min( 1 + $$_mnlast_si + -$$_mnfirst_si, 64 + 64 * $I_L866_1238 ) + -64 * $I_L866_1238 ) exit
  866.                                                                         enddo
  866.                                                                         $I_L866_1230 = 1 + $I_L866_1230
  866.                                                                         if ( $I_L866_1230 >= 1 + max( 0, -1 + _rsh( 127 + mods, 7 ) ) ) exit
  866.                                                                      enddo
  866.                                                                      $I_L866_1238 = 1 + $I_L866_1238
  866.                                                                      if ( $I_L866_1238 >= 1 + max( 0, -1 + _rsh( 64 + $$_mnlast_si + -$$_mnfirst_si, 6 ) ) ) exit
  866.                                                                   enddo
  866.                                                                endif
  866.                                                             endif
  866.                                                          endif
  866.                                                          _free( t$188 )
  866.                                                          eiggt(1, 1) = _copyout( eiggt )
  866.                                                          eigg(1, 1) = _copyout( eigg )
  866.                                                          (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) = _copyout( f )
  867.                                                          tm$156 = loc( (qgenp_si%base_addr)(qgenp_si%dim_1%LB, qgenp_si%dim_2%LB, 0) )
  867.                                                          f = _copyin( (qgenp_si%base_addr)(qgenp_si%dim_1%LB, qgenp_si%dim_2%LB, 0) )
  867.                                                          tm$158 = loc( eigg(1, 1) )
  867.                                                          eigg = _copyin( eigg(1, 1) )
  867.                                                          tm$160 = loc( eiggt(1, 1) )
  867.                                                          eiggt = _copyin( eiggt(1, 1) )
  867.                                                          t$63 = mnmax_si
  867.                                                          t$62 = kmax
  867.                                                          t$181 = max( 0, mnmax_si )
  867.                                                          t$182 = 2 * max( 0, mnmax_si )
  867.                                                          t$183 = max( 0, kmax )
  867.                                                          t$184 = 2 * max( 0, kmax ) * max( 0, mnmax_si )
  867.                                                          t$185 = max( 0, kmax )
  867.                                                          t$186 = max( 0, kmax ) * max( 0, kmax )
  867.                                                          t$187 = 2 * max( 0, kmax )
  867.                                                          t$190 = 16 * max( 0, kmax )
  867.                                                          t$188 = int( _alloc( 16 * max( 0, kmax ) ), 8 )
  867.                                                          t$189 = t$188
  867.                                                          if ( $$_mnlast_si + -$$_mnfirst_si >= 0 ) then
  867.                                                             if ( mods > 0 ) then
  867.                                                                if ( kmax > 0 ) then
  867.                                                                   $I_L867_1218 = 0
  867.                                                                   do
  867.                                                                      $I_L867_1178 = 0
  867. !dir$ ivdep
  867.                                                                      do
  867.                                                                         $$_sum1 = 0.0
  867.                                                                         $$_sum2 = 0.0
  867.                                                                         $I_L867_1108 = 0
  867. !dir$ unroll 4
  867.                                                                         do
  867.                                                                            $$_sum1 = $$_sum1 + eiggt(1 + $I_L867_1108, 1 + $I_L867_1178) * f(1, $$_mnfirst_si + $I_L867_1218, 1 + $I_L867_1108)
  867.                                                                            $$_sum2 = $$_sum2 + eiggt(1 + $I_L867_1108, 1 + $I_L867_1178) * f(2, $$_mnfirst_si + $I_L867_1218, 1 + $I_L867_1108)
  867.                                                                            $I_L867_1108 = 1 + $I_L867_1108
  867.                                                                            if ( $I_L867_1108 >= kmax ) exit
  867.                                                                         enddo
  867.                                                                         col(1, 1 + $I_L867_1178) = $$_sum1 * dotpro(1 + $I_L867_1178)
  867.                                                                         col(2, 1 + $I_L867_1178) = $$_sum2 * dotpro(1 + $I_L867_1178)
  867.                                                                         $I_L867_1178 = 1 + $I_L867_1178
  867.                                                                         if ( $I_L867_1178 >= mods ) exit
  867.                                                                      enddo
  867.                                                                      $I_L867_1110 = 0
  867. !dir$ ivdep
  867.                                                                      do
  867.                                                                         f(1, $$_mnfirst_si + $I_L867_1218, 1 + $I_L867_1110) = col(1, 1 + $I_L867_1110)
  867.                                                                         f(2, $$_mnfirst_si + $I_L867_1218, 1 + $I_L867_1110) = col(2, 1 + $I_L867_1110)
  867.                                                                         $I_L867_1110 = 1 + $I_L867_1110
  867.                                                                         if ( $I_L867_1110 >= mods ) exit
  867.                                                                      enddo
  867.                                                                      $I_L867_1218 = 1 + $I_L867_1218
  867.                                                                      if ( $I_L867_1218 >= 1 + $$_mnlast_si + -$$_mnfirst_si ) exit
  867.                                                                   enddo
  867.                                                                else
  867.                                                                   $I_L867_1240 = 0
  867.                                                                   do
  867.                                                                      $I_L867_1232 = 0
  867.                                                                      do
  867.                                                                         $I_L867_1204 = 0
  867. !dir$ blocking_size( 64, 64 )
  867.                                                                         do
  867.                                                                            $I_L867_1148 = 0
  867. !dir$ ivdep
  867. !dir$ blocking_size( 128, 128 )
  867.                                                                            do
  867.                                                                               col(1, 1 + $I_L867_1148 + 128 * $I_L867_1232) = 0.0
  867.                                                                               col(2, 1 + $I_L867_1148 + 128 * $I_L867_1232) = 0.0
  867.                                                                               f(1, $$_mnfirst_si + $I_L867_1204 + 64 * $I_L867_1240, 1 + $I_L867_1148 + 128 * $I_L867_1232) = 0.0
  867.                                                                               f(2, $$_mnfirst_si + $I_L867_1204 + 64 * $I_L867_1240, 1 + $I_L867_1148 + 128 * $I_L867_1232) = 0.0
  867.                                                                               $I_L867_1148 = 1 + $I_L867_1148
  867.                                                                               if ( $I_L867_1148 >= min( mods, 128 + 128 * $I_L867_1232 ) + -128 * $I_L867_1232 ) exit
  867.                                                                            enddo
  867.                                                                            $I_L867_1204 = 1 + $I_L867_1204
  867.                                                                            if ( $I_L867_1204 >= min( 1 + $$_mnlast_si + -$$_mnfirst_si, 64 + 64 * $I_L867_1240 ) + -64 * $I_L867_1240 ) exit
  867.                                                                         enddo
  867.                                                                         $I_L867_1232 = 1 + $I_L867_1232
  867.                                                                         if ( $I_L867_1232 >= 1 + max( 0, -1 + _rsh( 127 + mods, 7 ) ) ) exit
  867.                                                                      enddo
  867.                                                                      $I_L867_1240 = 1 + $I_L867_1240
  867.                                                                      if ( $I_L867_1240 >= 1 + max( 0, -1 + _rsh( 64 + $$_mnlast_si + -$$_mnfirst_si, 6 ) ) ) exit
  867.                                                                   enddo
  867.                                                                endif
  867.                                                             endif
  867.                                                          endif
  867.                                                          _free( t$188 )
  867.                                                          eiggt(1, 1) = _copyout( eiggt )
  867.                                                          eigg(1, 1) = _copyout( eigg )
  867.                                                          (qgenp_si%base_addr)(qgenp_si%dim_1%LB, qgenp_si%dim_2%LB, 0) = _copyout( f )
  868.                                                          tm$169 = loc( (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) )
  868.                                                          vord = _copyin( (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) )
  868.                                                          tm$171 = loc( (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) )
  868.                                                          divd = _copyin( (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) )
  868.                                                          tm$173 = loc( (qgenp_si%base_addr)(qgenp_si%dim_1%LB, qgenp_si%dim_2%LB, 0) )
  868.                                                          comd = _copyin( (qgenp_si%base_addr)(qgenp_si%dim_1%LB, qgenp_si%dim_2%LB, 0) )
  868.                                                          t$64 = mnmax_si
  868.                                                          t$65 = kmax
  868.                                                          t$191 = max( 0, mnmax_si )
  868.                                                          t$192 = 2 * max( 0, mnmax_si )
  868.                                                          t$193 = max( 0, kmax )
  868.                                                          t$194 = 2 * max( 0, kmax ) * max( 0, mnmax_si )
  868.                                                          t$197 = 8 * max( 0, mnmax_si )
  868.                                                          t$195 = int( _alloc( 8 * max( 0, mnmax_si ) ), 8 )
  868.                                                          t$196 = t$195
  868.                                                          if ( myid /= 0 ) then
  868.                                                             goto 70
  868.                                                          else if ( $$_mnfirst_si == 1 ) then
  868.                                                             w(1) = 0.0
  868.                                                             $$_m1 = 2
  868.                                                          else
  868.    70                                                       continue
  868.                                                             $$_m1 = $$_mnfirst_si
  868.                                                          endif
  868.                                                          if ( $$_mnlast_si + -$$_m1 >= 0 ) then
  868.                                                             $SC_snnp1_si_I55 = snnp1_si%dim_1%EX
  868.                                                             $SC_snnp1_si_I56 = snnp1_si%dim_1%LB
  868.                                                             $I_L868_1112 = 0
  868. !dir$ ivdep
  868.                                                             do
  868.                                                                w($$_m1 + $I_L868_1112) = _recip_sqrt( real( (snnp1_si%base_addr)(-1 + 2 * $$_m1 + 2 * $I_L868_1112, 0), 8 ) )
  868.                                                                $I_L868_1112 = 1 + $I_L868_1112
  868.                                                                if ( $I_L868_1112 >= 1 + $$_mnlast_si + -$$_m1 ) exit
  868.                                                             enddo
  868.                                                          endif
  868.                                                          if ( mods > 0 ) then
  868.                                                             if ( $$_mnlast_si + -$$_mnfirst_si >= 0 ) then
  868.                                                                $I_L868_1180 = 0
  868.                                                                do
  868.                                                                   $$_t = ( 1.5698587127158556e-7 * _recip_sqrt( gh(1 + $I_L868_1180) ) )
  868.                                                                   $I_L868_1114 = 0
  868. !dir$ ivdep
  868.                                                                   do
  868.                                                                      $$_divdr = -( w($$_mnfirst_si + $I_L868_1114) * divd(2, $$_mnfirst_si + $I_L868_1114, 1 + $I_L868_1180) )
  868.                                                                      $$_divdi = w($$_mnfirst_si + $I_L868_1114) * divd(1, $$_mnfirst_si + $I_L868_1114, 1 + $I_L868_1180)
  868.                                                                      divd(1, $$_mnfirst_si + $I_L868_1114, 1 + $I_L868_1180) = $$_divdr
  868.                                                                      divd(2, $$_mnfirst_si + $I_L868_1114, 1 + $I_L868_1180) = $$_divdi
  868.                                                                      vord(1, $$_mnfirst_si + $I_L868_1114, 1 + $I_L868_1180) = w($$_mnfirst_si + $I_L868_1114) * vord(1, $$_mnfirst_si + $I_L868_1114, 1 + $I_L868_1180)
  868.                                                                      vord(2, $$_mnfirst_si + $I_L868_1114, 1 + $I_L868_1180) = w($$_mnfirst_si + $I_L868_1114) * vord(2, $$_mnfirst_si + $I_L868_1114, 1 + $I_L868_1180)
  868.                                                                      comd(1, $$_mnfirst_si + $I_L868_1114, 1 + $I_L868_1180) = $$_t * comd(1, $$_mnfirst_si + $I_L868_1114, 1 + $I_L868_1180)
  868.                                                                      comd(2, $$_mnfirst_si + $I_L868_1114, 1 + $I_L868_1180) = $$_t * comd(2, $$_mnfirst_si + $I_L868_1114, 1 + $I_L868_1180)
  868.                                                                      $I_L868_1114 = 1 + $I_L868_1114
  868.                                                                      if ( $I_L868_1114 >= 1 + $$_mnlast_si + -$$_mnfirst_si ) exit
  868.                                                                   enddo
  868.                                                                   $I_L868_1180 = 1 + $I_L868_1180
  868.                                                                   if ( $I_L868_1180 >= mods ) exit
  868.                                                                enddo
  868.                                                             endif
  868.                                                          endif
  868.                                                          _free( t$195 )
  868.                                                          (qgenp_si%base_addr)(qgenp_si%dim_1%LB, qgenp_si%dim_2%LB, 0) = _copyout( comd )
  868.                                                          (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) = _copyout( divd )
  868.                                                          (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) = _copyout( vord )
  869.                                                          _mt_barrier( 5, _mt_rw_list(...) )
  870.                                                          $snt_T2 = _mt_single( 6, _mt_rw_list(...) )
  874.                                                          call sitospec( (inibr_si%base_addr)(inibr_si%dim_1%LB, 0), (inibs_si%base_addr)(inibs_si%dim_1%LB, 0), nrecs_si, nsends_si, (myrecs_si%base_addr)(myrecs_si%dim_1%LB, 0), (mysends_si%base_addr)(mysends_si%dim_1%LB, 0), (mapr_si%base_addr)(mapr_si%dim_1%LB, 0), (maps_si%base_addr)(maps_si%dim_1%LB, 0), mods, modsloc, (nmodperg%base_addr)(nmodperg%dim_1%LB, 0), .false., (qrott%base_addr)(qrott%dim_1%LB, qrott%dim_2%LB, 0), (qdivt%base_addr)(qdivt%dim_1%LB, qdivt%dim_2%LB, 0), (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0), (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0), (qgenp%base_addr)(qgenp%dim_1%LB, qgenp%dim_2%LB, 0), (qgenp_si%base_addr)(qgenp_si%dim_1%LB, qgenp_si%dim_2%LB, 0), 0, 0 )
  877.                                                          $snt_T2 = _mt_endsingle( 6, _mt_rw_list(...), $snt_T2 )
  878.                                                          call horiz1( (qrott%base_addr)(qrott%dim_1%LB, qrott%dim_2%LB, 0), (qdivt%base_addr)(qdivt%dim_1%LB, qdivt%dim_2%LB, 0), (qgenp%base_addr)(qgenp%dim_1%LB, qgenp%dim_2%LB, 0), percut, (per%base_addr)(1, 0), (g%base_addr)(1, 0), (indper%base_addr)(1, 1, 0), (indg%base_addr)(1, 1, 0), (jg%base_addr)(1, 1, 0), (nas%base_addr)(1, 1, 0), $$_myms(1), $$_nms )
  883.                                                          _mt_barrier( 7, _mt_rw_list(...) )
  884.                                                          $snt_T3 = _mt_single( 8, _mt_rw_list(...) )
  885.                                                          call spectosi( (inibs_si%base_addr)(inibs_si%dim_1%LB, 0), (inibr_si%base_addr)(inibr_si%dim_1%LB, 0), nsends_si, nrecs_si, (mysends_si%base_addr)(mysends_si%dim_1%LB, 0), (myrecs_si%base_addr)(myrecs_si%dim_1%LB, 0), (maps_si%base_addr)(maps_si%dim_1%LB, 0), (mapr_si%base_addr)(mapr_si%dim_1%LB, 0), mods, modsloc, (nmodperg%base_addr)(nmodperg%dim_1%LB, 0), (qrott%base_addr)(qrott%dim_1%LB, qrott%dim_2%LB, 0), (qdivt%base_addr)(qdivt%dim_1%LB, qdivt%dim_2%LB, 0), (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0), (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0), (qgenp%base_addr)(qgenp%dim_1%LB, qgenp%dim_2%LB, 0), (qgenp_si%base_addr)(qgenp_si%dim_1%LB, qgenp_si%dim_2%LB, 0), 0, 0 )
  888.                                                          $snt_T3 = _mt_endsingle( 8, _mt_rw_list(...), $snt_T3 )
  889.                                                          tm$237 = loc( (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) )
  889.                                                          vord = _copyin( (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) )
  889.                                                          tm$239 = loc( (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) )
  889.                                                          divd = _copyin( (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) )
  889.                                                          tm$241 = loc( (qgenp_si%base_addr)(qgenp_si%dim_1%LB, qgenp_si%dim_2%LB, 0) )
  889.                                                          comd = _copyin( (qgenp_si%base_addr)(qgenp_si%dim_1%LB, qgenp_si%dim_2%LB, 0) )
  889.                                                          t$64 = mnmax_si
  889.                                                          t$65 = kmax
  889.                                                          t$191 = max( 0, mnmax_si )
  889.                                                          t$192 = 2 * max( 0, mnmax_si )
  889.                                                          t$193 = max( 0, kmax )
  889.                                                          t$194 = 2 * max( 0, kmax ) * max( 0, mnmax_si )
  889.                                                          t$197 = 8 * max( 0, mnmax_si )
  889.                                                          t$195 = int( _alloc( 8 * max( 0, mnmax_si ) ), 8 )
  889.                                                          t$196 = t$195
  889.                                                          if ( myid /= 0 ) then
  889.                                                             goto 80
  889.                                                          else if ( $$_mnfirst_si == 1 ) then
  889.                                                             w(1) = 0.0
  889.                                                             $$_m1 = 2
  889.                                                          else
  889.    80                                                       continue
  889.                                                             $$_m1 = $$_mnfirst_si
  889.                                                          endif
  889.                                                          if ( $$_mnlast_si + -$$_m1 >= 0 ) then
  889.                                                             $SC_snnp1_si_I55 = snnp1_si%dim_1%EX
  889.                                                             $SC_snnp1_si_I56 = snnp1_si%dim_1%LB
  889.                                                             $I_L889_1116 = 0
  889. !dir$ ivdep
  889.                                                             do
  889.                                                                w($$_m1 + $I_L889_1116) = _sqrt( real( (snnp1_si%base_addr)(-1 + 2 * $$_m1 + 2 * $I_L889_1116, 0), 8 ) )
  889.                                                                $I_L889_1116 = 1 + $I_L889_1116
  889.                                                                if ( $I_L889_1116 >= 1 + $$_mnlast_si + -$$_m1 ) exit
  889.                                                             enddo
  889.                                                          endif
  889.                                                          if ( mods > 0 ) then
  889.                                                             if ( $$_mnlast_si + -$$_mnfirst_si >= 0 ) then
  889.                                                                $I_L889_1182 = 0
  889.                                                                do
  889.                                                                   $$_t = 6370000.0 * _sqrt( gh(1 + $I_L889_1182) )
  889.                                                                   $I_L889_1118 = 0
  889. !dir$ ivdep
  889.                                                                   do
  889.                                                                      $$_divdr = w($$_mnfirst_si + $I_L889_1118) * divd(2, $$_mnfirst_si + $I_L889_1118, 1 + $I_L889_1182)
  889.                                                                      $$_divdi = -( w($$_mnfirst_si + $I_L889_1118) * divd(1, $$_mnfirst_si + $I_L889_1118, 1 + $I_L889_1182) )
  889.                                                                      divd(1, $$_mnfirst_si + $I_L889_1118, 1 + $I_L889_1182) = $$_divdr
  889.                                                                      divd(2, $$_mnfirst_si + $I_L889_1118, 1 + $I_L889_1182) = $$_divdi
  889.                                                                      vord(1, $$_mnfirst_si + $I_L889_1118, 1 + $I_L889_1182) = w($$_mnfirst_si + $I_L889_1118) * vord(1, $$_mnfirst_si + $I_L889_1118, 1 + $I_L889_1182)
  889.                                                                      vord(2, $$_mnfirst_si + $I_L889_1118, 1 + $I_L889_1182) = w($$_mnfirst_si + $I_L889_1118) * vord(2, $$_mnfirst_si + $I_L889_1118, 1 + $I_L889_1182)
  889.                                                                      comd(1, $$_mnfirst_si + $I_L889_1118, 1 + $I_L889_1182) = $$_t * comd(1, $$_mnfirst_si + $I_L889_1118, 1 + $I_L889_1182)
  889.                                                                      comd(2, $$_mnfirst_si + $I_L889_1118, 1 + $I_L889_1182) = $$_t * comd(2, $$_mnfirst_si + $I_L889_1118, 1 + $I_L889_1182)
  889.                                                                      $I_L889_1118 = 1 + $I_L889_1118
  889.                                                                      if ( $I_L889_1118 >= 1 + $$_mnlast_si + -$$_mnfirst_si ) exit
  889.                                                                   enddo
  889.                                                                   $I_L889_1182 = 1 + $I_L889_1182
  889.                                                                   if ( $I_L889_1182 >= mods ) exit
  889.                                                                enddo
  889.                                                             endif
  889.                                                          endif
  889.                                                          _free( t$195 )
  889.                                                          (qgenp_si%base_addr)(qgenp_si%dim_1%LB, qgenp_si%dim_2%LB, 0) = _copyout( comd )
  889.                                                          (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) = _copyout( divd )
  889.                                                          (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) = _copyout( vord )
  893.                                                          if ( $$_mnrilast_si + -$$_mnrifirst_si >= 0 ) then
  894.                                                             $SC_qlnpt_si_I38 = qlnpt_si%dim_1%EX
  894.                                                             $SC_qlnpt_si_I39 = qlnpt_si%dim_1%LB
  893.                                                             $I_L893_1120 = 0
  893. !dir$ ivdep
  893.                                                             do
  894.                                                                (qlnpt_si%base_addr)($$_mnrifirst_si + $I_L893_1120, 0) = 0.0
  895.                                                                $I_L893_1120 = 1 + $I_L893_1120
  893.                                                                if ( $I_L893_1120 >= 1 + $$_mnrilast_si + -$$_mnrifirst_si ) exit
  893.                                                             enddo
  893.                                                          endif
  896.                                                          _mt_barrier( 9, _mt_rw_list(...) )
  897.                                                          if ( mods > 0 ) then
  900.                                                             $SC_qlnpt_si_I38 = qlnpt_si%dim_1%EX
  900.                                                             $SC_qlnpt_si_I39 = qlnpt_si%dim_1%LB
  900.                                                             $SC_qgenp_si_I43 = qgenp_si%dim_2%SM
  900.                                                             $SC_qgenp_si_I42 = qgenp_si%dim_2%EX
  900.                                                             $SC_qgenp_si_I44 = qgenp_si%dim_2%LB
  900.                                                             $SC_qgenp_si_I40 = qgenp_si%dim_1%EX
  900.                                                             $SC_qgenp_si_I41 = qgenp_si%dim_1%LB
  899.                                                             if ( $$_mnrilast_si + -$$_mnrifirst_si >= 0 ) then
  897.                                                                $I_L897_1184 = 0
  897.                                                                do
  898.                                                                   $$_fcon = ( verin(1 + $I_L897_1184) * 1.0/gh(1 + $I_L897_1184) )
  899.                                                                   $I_L899_1122 = 0
  899. !dir$ ivdep
  899.                                                                   do
  900.                                                                      (qlnpt_si%base_addr)($$_mnrifirst_si + $I_L899_1122, 0) = (qlnpt_si%base_addr)($$_mnrifirst_si + $I_L899_1122, 0) + -( $$_fcon * (qgenp_si%base_addr)($$_mnrifirst_si + $I_L899_1122, 1 + $I_L897_1184, 0) )
  901.                                                                      $I_L899_1122 = 1 + $I_L899_1122
  899.                                                                      if ( $I_L899_1122 >= 1 + $$_mnrilast_si + -$$_mnrifirst_si ) exit
  899.                                                                   enddo
  902.                                                                   $I_L897_1184 = 1 + $I_L897_1184
  901.                                                                   if ( $I_L897_1184 >= mods ) exit
  901.                                                                enddo
  901.                                                             endif
  901.                                                          endif
  903.                                                          _mt_barrier( 10, _mt_rw_list(...) )
  904.                                                          tm$250 = loc( (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) )
  904.                                                          f = _copyin( (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) )
  904.                                                          tm$252 = loc( eigg(1, 1) )
  904.                                                          eigg = _copyin( eigg(1, 1) )
  904.                                                          tm$254 = loc( eiggt(1, 1) )
  904.                                                          eiggt = _copyin( eiggt(1, 1) )
  904.                                                          t$63 = mnmax_si
  904.                                                          t$62 = kmax
  904.                                                          t$181 = max( 0, mnmax_si )
  904.                                                          t$182 = 2 * max( 0, mnmax_si )
  904.                                                          t$183 = max( 0, kmax )
  904.                                                          t$184 = 2 * max( 0, kmax ) * max( 0, mnmax_si )
  904.                                                          t$185 = max( 0, kmax )
  904.                                                          t$186 = max( 0, kmax ) * max( 0, kmax )
  904.                                                          t$187 = 2 * max( 0, kmax )
  904.                                                          t$190 = 16 * max( 0, kmax )
  904.                                                          t$188 = int( _alloc( 16 * max( 0, kmax ) ), 8 )
  904.                                                          t$189 = t$188
  904.                                                          if ( $$_mnlast_si + -$$_mnfirst_si >= 0 ) then
  904.                                                             $I_L904_1220 = 0
  904.                                                             do
  904.                                                                if ( mods > 0 ) then
  904.                                                                   $I_L904_1124 = 0
  904. !dir$ ivdep
  904.                                                                   do
  904.                                                                      col(1, 1 + $I_L904_1124) = f(1, $$_mnfirst_si + $I_L904_1220, 1 + $I_L904_1124)
  904.                                                                      col(2, 1 + $I_L904_1124) = f(2, $$_mnfirst_si + $I_L904_1220, 1 + $I_L904_1124)
  904.                                                                      $I_L904_1124 = 1 + $I_L904_1124
  904.                                                                      if ( $I_L904_1124 >= mods ) exit
  904.                                                                   enddo
  904.                                                                endif
  904.                                                                if ( kmax > 0 ) then
  904.                                                                   if ( mods > 0 ) then
  904.                                                                      $I_L904_1192 = 0
  904. !dir$ ivdep
  904.                                                                      do
  904.                                                                         f(1, $$_mnfirst_si + $I_L904_1220, 1 + $I_L904_1192) = 0.0
  904.                                                                         f(2, $$_mnfirst_si + $I_L904_1220, 1 + $I_L904_1192) = 0.0
  904.                                                                         $SC_f_I94 = f(1, $$_mnfirst_si + $I_L904_1220, 1 + $I_L904_1192)
  904.                                                                         $SC_f_I95 = 0.0
  904.                                                                         $I_L904_1160 = 0
  904. !dir$ unroll 4
  904.                                                                         do
  904.                                                                            $SC_f_I94 = $SC_f_I94 + col(1, 1 + $I_L904_1160) * eigg(1 + $I_L904_1192, 1 + $I_L904_1160)
  904.                                                                            $SC_f_I95 = $SC_f_I95 + col(2, 1 + $I_L904_1160) * eigg(1 + $I_L904_1192, 1 + $I_L904_1160)
  904.                                                                            $I_L904_1160 = 1 + $I_L904_1160
  904.                                                                            if ( $I_L904_1160 >= mods ) exit
  904.                                                                         enddo
  904.                                                                         f(1, $$_mnfirst_si + $I_L904_1220, 1 + $I_L904_1192) = $SC_f_I94
  904.                                                                         f(2, $$_mnfirst_si + $I_L904_1220, 1 + $I_L904_1192) = $SC_f_I95
  904.                                                                         $I_L904_1192 = 1 + $I_L904_1192
  904.                                                                         if ( $I_L904_1192 >= kmax ) exit
  904.                                                                      enddo
  904.                                                                   else
  904.                                                                      $I_L904_1138 = 0
  904. !dir$ ivdep
  904.                                                                      do
  904.                                                                         f(1, $$_mnfirst_si + $I_L904_1220, 1 + $I_L904_1138) = 0.0
  904.                                                                         f(2, $$_mnfirst_si + $I_L904_1220, 1 + $I_L904_1138) = 0.0
  904.                                                                         $I_L904_1138 = 1 + $I_L904_1138
  904.                                                                         if ( $I_L904_1138 >= kmax ) exit
  904.                                                                      enddo
  904.                                                                   endif
  904.                                                                endif
  904.                                                                $I_L904_1220 = 1 + $I_L904_1220
  904.                                                                if ( $I_L904_1220 >= 1 + $$_mnlast_si + -$$_mnfirst_si ) exit
  904.                                                             enddo
  904.                                                          endif
  904.                                                          _free( t$188 )
  904.                                                          eiggt(1, 1) = _copyout( eiggt )
  904.                                                          eigg(1, 1) = _copyout( eigg )
  904.                                                          (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0) = _copyout( f )
  905.                                                          tm$263 = loc( (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) )
  905.                                                          f = _copyin( (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) )
  905.                                                          tm$265 = loc( eigg(1, 1) )
  905.                                                          eigg = _copyin( eigg(1, 1) )
  905.                                                          tm$267 = loc( eiggt(1, 1) )
  905.                                                          eiggt = _copyin( eiggt(1, 1) )
  905.                                                          t$63 = mnmax_si
  905.                                                          t$62 = kmax
  905.                                                          t$181 = max( 0, mnmax_si )
  905.                                                          t$182 = 2 * max( 0, mnmax_si )
  905.                                                          t$183 = max( 0, kmax )
  905.                                                          t$184 = 2 * max( 0, kmax ) * max( 0, mnmax_si )
  905.                                                          t$185 = max( 0, kmax )
  905.                                                          t$186 = max( 0, kmax ) * max( 0, kmax )
  905.                                                          t$187 = 2 * max( 0, kmax )
  905.                                                          t$190 = 16 * max( 0, kmax )
  905.                                                          t$188 = int( _alloc( 16 * max( 0, kmax ) ), 8 )
  905.                                                          t$189 = t$188
  905.                                                          if ( $$_mnlast_si + -$$_mnfirst_si >= 0 ) then
  905.                                                             $I_L905_1222 = 0
  905.                                                             do
  905.                                                                if ( mods > 0 ) then
  905.                                                                   $I_L905_1126 = 0
  905. !dir$ ivdep
  905.                                                                   do
  905.                                                                      col(1, 1 + $I_L905_1126) = f(1, $$_mnfirst_si + $I_L905_1222, 1 + $I_L905_1126)
  905.                                                                      col(2, 1 + $I_L905_1126) = f(2, $$_mnfirst_si + $I_L905_1222, 1 + $I_L905_1126)
  905.                                                                      $I_L905_1126 = 1 + $I_L905_1126
  905.                                                                      if ( $I_L905_1126 >= mods ) exit
  905.                                                                   enddo
  905.                                                                endif
  905.                                                                if ( kmax > 0 ) then
  905.                                                                   if ( mods > 0 ) then
  905.                                                                      $I_L905_1194 = 0
  905. !dir$ ivdep
  905.                                                                      do
  905.                                                                         f(1, $$_mnfirst_si + $I_L905_1222, 1 + $I_L905_1194) = 0.0
  905.                                                                         f(2, $$_mnfirst_si + $I_L905_1222, 1 + $I_L905_1194) = 0.0
  905.                                                                         $SC_f_I96 = f(1, $$_mnfirst_si + $I_L905_1222, 1 + $I_L905_1194)
  905.                                                                         $SC_f_I97 = 0.0
  905.                                                                         $I_L905_1162 = 0
  905. !dir$ unroll 4
  905.                                                                         do
  905.                                                                            $SC_f_I96 = $SC_f_I96 + col(1, 1 + $I_L905_1162) * eigg(1 + $I_L905_1194, 1 + $I_L905_1162)
  905.                                                                            $SC_f_I97 = $SC_f_I97 + col(2, 1 + $I_L905_1162) * eigg(1 + $I_L905_1194, 1 + $I_L905_1162)
  905.                                                                            $I_L905_1162 = 1 + $I_L905_1162
  905.                                                                            if ( $I_L905_1162 >= mods ) exit
  905.                                                                         enddo
  905.                                                                         f(1, $$_mnfirst_si + $I_L905_1222, 1 + $I_L905_1194) = $SC_f_I96
  905.                                                                         f(2, $$_mnfirst_si + $I_L905_1222, 1 + $I_L905_1194) = $SC_f_I97
  905.                                                                         $I_L905_1194 = 1 + $I_L905_1194
  905.                                                                         if ( $I_L905_1194 >= kmax ) exit
  905.                                                                      enddo
  905.                                                                   else
  905.                                                                      $I_L905_1140 = 0
  905. !dir$ ivdep
  905.                                                                      do
  905.                                                                         f(1, $$_mnfirst_si + $I_L905_1222, 1 + $I_L905_1140) = 0.0
  905.                                                                         f(2, $$_mnfirst_si + $I_L905_1222, 1 + $I_L905_1140) = 0.0
  905.                                                                         $I_L905_1140 = 1 + $I_L905_1140
  905.                                                                         if ( $I_L905_1140 >= kmax ) exit
  905.                                                                      enddo
  905.                                                                   endif
  905.                                                                endif
  905.                                                                $I_L905_1222 = 1 + $I_L905_1222
  905.                                                                if ( $I_L905_1222 >= 1 + $$_mnlast_si + -$$_mnfirst_si ) exit
  905.                                                             enddo
  905.                                                          endif
  905.                                                          _free( t$188 )
  905.                                                          eiggt(1, 1) = _copyout( eiggt )
  905.                                                          eigg(1, 1) = _copyout( eigg )
  905.                                                          (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0) = _copyout( f )
  906.                                                          tm$276 = loc( (qgenp_si%base_addr)(qgenp_si%dim_1%LB, qgenp_si%dim_2%LB, 0) )
  906.                                                          f = _copyin( (qgenp_si%base_addr)(qgenp_si%dim_1%LB, qgenp_si%dim_2%LB, 0) )
  906.                                                          tm$278 = loc( eigg(1, 1) )
  906.                                                          eigg = _copyin( eigg(1, 1) )
  906.                                                          tm$280 = loc( eiggt(1, 1) )
  906.                                                          eiggt = _copyin( eiggt(1, 1) )
  906.                                                          t$63 = mnmax_si
  906.                                                          t$62 = kmax
  906.                                                          t$181 = max( 0, mnmax_si )
  906.                                                          t$182 = 2 * max( 0, mnmax_si )
  906.                                                          t$183 = max( 0, kmax )
  906.                                                          t$184 = 2 * max( 0, kmax ) * max( 0, mnmax_si )
  906.                                                          t$185 = max( 0, kmax )
  906.                                                          t$186 = max( 0, kmax ) * max( 0, kmax )
  906.                                                          t$187 = 2 * max( 0, kmax )
  906.                                                          t$190 = 16 * max( 0, kmax )
  906.                                                          t$188 = int( _alloc( 16 * max( 0, kmax ) ), 8 )
  906.                                                          t$189 = t$188
  906.                                                          if ( $$_mnlast_si + -$$_mnfirst_si >= 0 ) then
  906.                                                             $I_L906_1224 = 0
  906.                                                             do
  906.                                                                if ( mods > 0 ) then
  906.                                                                   $I_L906_1128 = 0
  906. !dir$ ivdep
  906.                                                                   do
  906.                                                                      col(1, 1 + $I_L906_1128) = f(1, $$_mnfirst_si + $I_L906_1224, 1 + $I_L906_1128)
  906.                                                                      col(2, 1 + $I_L906_1128) = f(2, $$_mnfirst_si + $I_L906_1224, 1 + $I_L906_1128)
  906.                                                                      $I_L906_1128 = 1 + $I_L906_1128
  906.                                                                      if ( $I_L906_1128 >= mods ) exit
  906.                                                                   enddo
  906.                                                                endif
  906.                                                                if ( kmax > 0 ) then
  906.                                                                   if ( mods > 0 ) then
  906.                                                                      $I_L906_1196 = 0
  906. !dir$ ivdep
  906.                                                                      do
  906.                                                                         f(1, $$_mnfirst_si + $I_L906_1224, 1 + $I_L906_1196) = 0.0
  906.                                                                         f(2, $$_mnfirst_si + $I_L906_1224, 1 + $I_L906_1196) = 0.0
  906.                                                                         $SC_f_I98 = f(1, $$_mnfirst_si + $I_L906_1224, 1 + $I_L906_1196)
  906.                                                                         $SC_f_I99 = 0.0
  906.                                                                         $I_L906_1164 = 0
  906. !dir$ unroll 4
  906.                                                                         do
  906.                                                                            $SC_f_I98 = $SC_f_I98 + col(1, 1 + $I_L906_1164) * eigg(1 + $I_L906_1196, 1 + $I_L906_1164)
  906.                                                                            $SC_f_I99 = $SC_f_I99 + col(2, 1 + $I_L906_1164) * eigg(1 + $I_L906_1196, 1 + $I_L906_1164)
  906.                                                                            $I_L906_1164 = 1 + $I_L906_1164
  906.                                                                            if ( $I_L906_1164 >= mods ) exit
  906.                                                                         enddo
  906.                                                                         f(1, $$_mnfirst_si + $I_L906_1224, 1 + $I_L906_1196) = $SC_f_I98
  906.                                                                         f(2, $$_mnfirst_si + $I_L906_1224, 1 + $I_L906_1196) = $SC_f_I99
  906.                                                                         $I_L906_1196 = 1 + $I_L906_1196
  906.                                                                         if ( $I_L906_1196 >= kmax ) exit
  906.                                                                      enddo
  906.                                                                   else
  906.                                                                      $I_L906_1142 = 0
  906. !dir$ ivdep
  906.                                                                      do
  906.                                                                         f(1, $$_mnfirst_si + $I_L906_1224, 1 + $I_L906_1142) = 0.0
  906.                                                                         f(2, $$_mnfirst_si + $I_L906_1224, 1 + $I_L906_1142) = 0.0
  906.                                                                         $I_L906_1142 = 1 + $I_L906_1142
  906.                                                                         if ( $I_L906_1142 >= kmax ) exit
  906.                                                                      enddo
  906.                                                                   endif
  906.                                                                endif
  906.                                                                $I_L906_1224 = 1 + $I_L906_1224
  906.                                                                if ( $I_L906_1224 >= 1 + $$_mnlast_si + -$$_mnfirst_si ) exit
  906.                                                             enddo
  906.                                                          endif
  906.                                                          _free( t$188 )
  906.                                                          eiggt(1, 1) = _copyout( eiggt )
  906.                                                          eigg(1, 1) = _copyout( eigg )
  906.                                                          (qgenp_si%base_addr)(qgenp_si%dim_1%LB, qgenp_si%dim_2%LB, 0) = _copyout( f )
  910.                                                          _mt_barrier( 11, _mt_rw_list(...) )
  911.                                                          if ( kmax > 0 ) then
  914.                                                             $SC_qlnpt_si_I38 = qlnpt_si%dim_1%EX
  914.                                                             $SC_qlnpt_si_I39 = qlnpt_si%dim_1%LB
  914.                                                             $SC_qgenp_si_I43 = qgenp_si%dim_2%SM
  914.                                                             $SC_qgenp_si_I42 = qgenp_si%dim_2%EX
  914.                                                             $SC_qgenp_si_I44 = qgenp_si%dim_2%LB
  914.                                                             $SC_qgenp_si_I40 = qgenp_si%dim_1%EX
  914.                                                             $SC_qgenp_si_I41 = qgenp_si%dim_1%LB
  913.                                                             if ( $$_mnrilast_si + -$$_mnrifirst_si >= 0 ) then
  911.                                                                $I_L911_1186 = 0
  911.                                                                do
  912.                                                                   $$_tor = 287.05000000000001 * to(1 + $I_L911_1186)
  913.                                                                   $I_L913_1130 = 0
  913. !dir$ ivdep
  913.                                                                   do
  914.                                                                      (qgenp_si%base_addr)($$_mnrifirst_si + $I_L913_1130, 1 + $I_L911_1186, 0) = (qgenp_si%base_addr)($$_mnrifirst_si + $I_L913_1130, 1 + $I_L911_1186, 0) + -( $$_tor * (qlnpt_si%base_addr)($$_mnrifirst_si + $I_L913_1130, 0) )
  915.                                                                      $I_L913_1130 = 1 + $I_L913_1130
  913.                                                                      if ( $I_L913_1130 >= 1 + $$_mnrilast_si + -$$_mnrifirst_si ) exit
  913.                                                                   enddo
  916.                                                                   $I_L911_1186 = 1 + $I_L911_1186
  915.                                                                   if ( $I_L911_1186 >= kmax ) exit
  915.                                                                enddo
  915.                                                             endif
  915.                                                          endif
  920.                                                          $F_A34 = qtmpt_si%dim_2%EX
  920.                                                          $F_A35 = ( 1 + $$_mnrilast_si + -$$_mnrifirst_si )
  920.                                                          if ( and( -$F_A35, -$F_A34 ) < 0 ) then
  920.                                                             $SC_qtmpt_si_I101 = qtmpt_si%dim_1%EX
  920.                                                             $I_L920_1190 = 0
  920.                                                             do
  920.                                                                $SC_qtmpt_si_I102 = qtmpt_si%dim_1%LB
  920.                                                                $I_L920_1152 = 0
  920. !dir$ ivdep
  920.                                                                do
  920.                                                                   (qtmpt_si%base_addr)($$_mnrifirst_si + $I_L920_1152, qtmpt_si%dim_2%LB + $I_L920_1190, 0) = 0.0
  920.                                                                   $I_L920_1152 = 1 + $I_L920_1152
  920.                                                                   if ( $I_L920_1152 >= $F_A35 ) exit
  920.                                                                enddo
  920.                                                                $I_L920_1190 = 1 + $I_L920_1190
  920.                                                                if ( $I_L920_1190 >= $F_A34 ) exit
  920.                                                             enddo
  920.                                                          endif
  921.                                                          if ( kmax > 0 ) then
  924.                                                             $SC_tm_I59 = tm%dim_1%EX
  924.                                                             $SC_tm_I60 = tm%dim_1%LB
  924.                                                             $SC_tm_I62 = tm%dim_2%SM
  924.                                                             $SC_tm_I61 = tm%dim_2%EX
  924.                                                             $SC_tm_I63 = tm%dim_2%LB
  924.                                                             $SC_qtmpt_si_I50 = qtmpt_si%dim_1%EX
  924.                                                             $SC_qtmpt_si_I51 = qtmpt_si%dim_1%LB
  924.                                                             $SC_qtmpt_si_I53 = qtmpt_si%dim_2%SM
  924.                                                             $SC_qtmpt_si_I52 = qtmpt_si%dim_2%EX
  924.                                                             $SC_qtmpt_si_I54 = qtmpt_si%dim_2%LB
  924.                                                             $SC_qgenp_si_I43 = qgenp_si%dim_2%SM
  924.                                                             $SC_qgenp_si_I42 = qgenp_si%dim_2%EX
  924.                                                             $SC_qgenp_si_I44 = qgenp_si%dim_2%LB
  924.                                                             $SC_qgenp_si_I40 = qgenp_si%dim_1%EX
  924.                                                             $SC_qgenp_si_I41 = qgenp_si%dim_1%LB
  923.                                                             if ( $$_mnrilast_si + -$$_mnrifirst_si >= 0 ) then
  921.                                                                $I_L921_1248 = 0
  921.                                                                do
  922.                                                                   $I_L922_1246 = 0
  922.                                                                   do
  923.                                                                      $I_L923_1242 = 0
  923.                                                                      do
  921.                                                                         $I_L921_1226 = 0
  921. !dir$ shortloop16
  921. !dir$ blocking_size( 2, 2 )
  921.                                                                         do
  922.                                                                            $I_L922_1206 = 0
  922. !dir$ shortloop16
  922. !dir$ blocking_size( 8, 8 )
  922.                                                                            do
  923.                                                                               $SCA_tm_I89 = (tm%base_addr)(1 + $I_L921_1226 + 2 * $I_L921_1248, 1 + $I_L922_1206 + 8 * $I_L922_1246, 0)
  923.                                                                               $I_L923_1132 = 0
  923. !dir$ ivdep
  923. !dir$ blocking_size( 256, 256 )
  923.                                                                               do
  924.                                                                                  (qtmpt_si%base_addr)($$_mnrifirst_si + $I_L923_1132 + 256 * $I_L923_1242, 1 + $I_L921_1226 + 2 * $I_L921_1248, 0) = (qtmpt_si%base_addr)($$_mnrifirst_si + $I_L923_1132 + 256 * $I_L923_1242, 1 + $I_L921_1226 + 2 * $I_L921_1248, 0) + $SCA_tm_I89 * (qgenp_si%base_addr)($$_mnrifirst_si + $I_L923_1132 + 256 * $I_L923_1242, 1 + $I_L922_1206 + 8 * $I_L922_1246, 0)
  923.                                                                                  $I_L923_1132 = 1 + $I_L923_1132
  923.                                                                                  if ( $I_L923_1132 >= min( 1 + $$_mnrilast_si + -$$_mnrifirst_si, 256 + 256 * $I_L923_1242 ) + -256 * $I_L923_1242 ) exit
  923.                                                                               enddo
  922.                                                                               $I_L922_1206 = 1 + $I_L922_1206
  922.                                                                               if ( $I_L922_1206 >= min( kmax, 8 + 8 * $I_L922_1246 ) + -8 * $I_L922_1246 ) exit
  922.                                                                            enddo
  921.                                                                            $I_L921_1226 = 1 + $I_L921_1226
  925.                                                                            if ( $I_L921_1226 >= min( kmax, 2 + 2 * $I_L921_1248 ) + -2 * $I_L921_1248 ) exit
  925.                                                                         enddo
  923.                                                                         $I_L923_1242 = 1 + $I_L923_1242
  923.                                                                         if ( $I_L923_1242 >= 1 + max( 0, -1 + _rsh( 256 + $$_mnrilast_si + -$$_mnrifirst_si, 8 ) ) ) exit
  923.                                                                      enddo
  922.                                                                      $I_L922_1246 = 1 + $I_L922_1246
  926.                                                                      if ( $I_L922_1246 >= 1 + max( 0, -1 + _rsh( 7 + kmax, 3 ) ) ) exit
  926.                                                                   enddo
  921.                                                                   $I_L921_1248 = 1 + $I_L921_1248
  921.                                                                   if ( $I_L921_1248 >= 1 + max( 0, -1 + _rsh( 1 + kmax, 1 ) ) ) exit
  921.                                                                enddo
  921.                                                             endif
  921.                                                          endif
  931.                                                          _mt_barrier( 12, _mt_rw_list(...) )
  932.                                                          $snt_T4 = _mt_single( 13, _mt_rw_list(...) )
  933.                                                          call sitospec( (inibr_si%base_addr)(inibr_si%dim_1%LB, 0), (inibs_si%base_addr)(inibs_si%dim_1%LB, 0), nrecs_si, nsends_si, (myrecs_si%base_addr)(myrecs_si%dim_1%LB, 0), (mysends_si%base_addr)(mysends_si%dim_1%LB, 0), (mapr_si%base_addr)(mapr_si%dim_1%LB, 0), (maps_si%base_addr)(maps_si%dim_1%LB, 0), kmax, kmaxloc, (nlevperg_four%base_addr)(nlevperg_four%dim_1%LB, 0), .false., (qrott%base_addr)(qrott%dim_1%LB, qrott%dim_2%LB, 0), (qdivt%base_addr)(qdivt%dim_1%LB, qdivt%dim_2%LB, 0), (qrott_si%base_addr)(qrott_si%dim_1%LB, qrott_si%dim_2%LB, 0), (qdivt_si%base_addr)(qdivt_si%dim_1%LB, qdivt_si%dim_2%LB, 0), (qtmpt%base_addr)(qtmpt%dim_1%LB, qtmpt%dim_2%LB, 0), (qtmpt_si%base_addr)(qtmpt_si%dim_1%LB, qtmpt_si%dim_2%LB, 0), (qlnpt%base_addr)(qlnpt%dim_1%LB, 0), (qlnpt_si%base_addr)(qlnpt_si%dim_1%LB, 0) )
  936.                                                          $snt_T4 = _mt_endsingle( 13, _mt_rw_list(...), $snt_T4 )
  938.                                                          if ( seat_slagr /= .false. ) then
  938.                                                             if ( havesurf /= .false. ) then
  939.                                                                if ( $$_mnrilast + -$$_mnrifirst >= 0 ) then
  940.                                                                   $SC_qlnpl_I66 = qlnpl%dim_1%EX
  940.                                                                   $SC_qlnpl_I67 = qlnpl%dim_1%LB
  940.                                                                   $SC_qlnpt_I64 = qlnpt%dim_1%EX
  940.                                                                   $SC_qlnpt_I65 = qlnpt%dim_1%LB
  939.                                                                   $I_L939_1134 = 0
  939. !dir$ ivdep
  939.                                                                   do
  940.                                                                      (qlnpl%base_addr)($$_mnrifirst + $I_L939_1134, 0) = (qlnpl%base_addr)($$_mnrifirst + $I_L939_1134, 0) + -(qlnpt%base_addr)($$_mnrifirst + $I_L939_1134, 0)
  941.                                                                      $I_L939_1134 = 1 + $I_L939_1134
  939.                                                                      if ( $I_L939_1134 >= 1 + $$_mnrilast + -$$_mnrifirst ) exit
  939.                                                                   enddo
  939.                                                                endif
  939.                                                             endif
  939.                                                          endif
  943.                                                          if ( $$_mnrilast + -$$_mnrifirst >= 0 ) then
  945.                                                             $SC_qrotp_I78 = qrotp%dim_1%EX
  945.                                                             $SC_qrotp_I79 = qrotp%dim_1%LB
  945.                                                             $SC_qrotp_I81 = qrotp%dim_2%SM
  945.                                                             $SC_qrotp_I80 = qrotp%dim_2%EX
  945.                                                             $SC_qrotp_I82 = qrotp%dim_2%LB
  944.                                                             $SC_qtmpp_I68 = qtmpp%dim_1%EX
  944.                                                             $SC_qtmpp_I69 = qtmpp%dim_1%LB
  944.                                                             $SC_qtmpp_I71 = qtmpp%dim_2%SM
  944.                                                             $SC_qtmpp_I70 = qtmpp%dim_2%EX
  944.                                                             $SC_qtmpp_I72 = qtmpp%dim_2%LB
  945.                                                             $SC_qrott_I73 = qrott%dim_1%EX
  945.                                                             $SC_qrott_I74 = qrott%dim_1%LB
  945.                                                             $SC_qrott_I76 = qrott%dim_2%SM
  945.                                                             $SC_qrott_I75 = qrott%dim_2%EX
  945.                                                             $SC_qrott_I77 = qrott%dim_2%LB
  944.                                                             $SC_qtmpt_I28 = qtmpt%dim_1%EX
  944.                                                             $SC_qtmpt_I29 = qtmpt%dim_1%LB
  944.                                                             $SC_qtmpt_I31 = qtmpt%dim_2%SM
  944.                                                             $SC_qtmpt_I30 = qtmpt%dim_2%EX
  944.                                                             $SC_qtmpt_I32 = qtmpt%dim_2%LB
  943.                                                             $I_L943_1188 = 0
  943.                                                             do
  944.                                                                $F_A36 = $SC_qtmpp_I70
  944.                                                                if ( $SC_qtmpp_I70 > 0 ) then
  944.                                                                   $I_L944_1154 = 0
  944. !dir$ ivdep
  944.                                                                   do
  944.                                                                      (qtmpp%base_addr)($$_mnrifirst + $I_L943_1188, $SC_qtmpp_I72 + $I_L944_1154, 0) = (qtmpp%base_addr)($$_mnrifirst + $I_L943_1188, $SC_qtmpp_I72 + $I_L944_1154, 0) + -(qtmpt%base_addr)($$_mnrifirst + $I_L943_1188, $SC_qtmpt_I32 + $I_L944_1154, 0)
  944.                                                                      $I_L944_1154 = 1 + $I_L944_1154
  944.                                                                      if ( $I_L944_1154 >= $F_A36 ) exit
  944.                                                                   enddo
  944.                                                                endif
  945.                                                                $F_A37 = $SC_qrotp_I80
  945.                                                                if ( $SC_qrotp_I80 > 0 ) then
  945.                                                                   $I_L945_1156 = 0
  945. !dir$ ivdep
  945.                                                                   do
  945.                                                                      (qrotp%base_addr)($$_mnrifirst + $I_L943_1188, $SC_qrotp_I82 + $I_L945_1156, 0) = (qrotp%base_addr)($$_mnrifirst + $I_L943_1188, $SC_qrotp_I82 + $I_L945_1156, 0) + -(qrott%base_addr)($$_mnrifirst + $I_L943_1188, $SC_qrott_I77 + $I_L945_1156, 0)
  945.                                                                      $I_L945_1156 = 1 + $I_L945_1156
  945.                                                                      if ( $I_L945_1156 >= $F_A37 ) exit
  945.                                                                   enddo
  945.                                                                endif
  946.                                                                $F_A38 = qdivp%dim_2%EX
  946.                                                                if ( qdivp%dim_2%EX > 0 ) then
  946.                                                                   $SC_qdivt_I100 = qdivt%dim_1%EX
  946.                                                                   $I_L946_1158 = 0
  946. !dir$ ivdep
  946.                                                                   do
  946.                                                                      (qdivp%base_addr)($$_mnrifirst + $I_L943_1188, qdivp%dim_2%LB + $I_L946_1158, 0) = (qdivp%base_addr)($$_mnrifirst + $I_L943_1188, qdivp%dim_2%LB + $I_L946_1158, 0) + -(qdivt%base_addr)($$_mnrifirst + $I_L943_1188, qdivt%dim_2%LB + $I_L946_1158, 0)
  946.                                                                      $I_L946_1158 = 1 + $I_L946_1158
  946.                                                                      if ( $I_L946_1158 >= $F_A38 ) exit
  946.                                                                   enddo
  946.                                                                endif
  947.                                                                $I_L943_1188 = 1 + $I_L943_1188
  943.                                                                if ( $I_L943_1188 >= 1 + $$_mnrilast + -$$_mnrifirst ) exit
  943.                                                             enddo
  943.                                                          endif
  948.                                                          if ( havesurf /= .false. ) then
  949.                                                             if ( $$_mnrilast + -$$_mnrifirst >= 0 ) then
  950.                                                                $SC_qlnpt_I64 = qlnpt%dim_1%EX
  949.                                                                $I_L949_1136 = 0
  949. !dir$ ivdep
  949.                                                                do
  950.                                                                   (qlnpp%base_addr)($$_mnrifirst + $I_L949_1136, 0) = (qlnpp%base_addr)($$_mnrifirst + $I_L949_1136, 0) + -(qlnpt%base_addr)($$_mnrifirst + $I_L949_1136, 0)
  951.                                                                   $I_L949_1136 = 1 + $I_L949_1136
  949.                                                                   if ( $I_L949_1136 >= 1 + $$_mnrilast + -$$_mnrifirst ) exit
  949.                                                                enddo
  949.                                                             endif
  949.                                                          endif
  953.                                                          $I_L828_1250 = 1 + $I_L828_1250
  952.                                                          if ( $I_L828_1250 >= $t_S69 ) exit
  952.                                                       enddo
  952.                                                    endif
  816.                                                    $snt_T5 = _mt_end_code( 14, _mt_rw_list(...), $snt_T5 )
  816.                                                    _free( $pvt_Abase_seg57_D0 )
  954.                                                    $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
  955.                                                    ktm = 0
  957.                                                    $_allo_P29(0) = 0x1000000000001L
  957.                                                    $_allo_P29(1) = loc( realbuffer )
  957.                                                    call __deallocate( $_allo_P29, 0, 0, _fcd( 0, 0 ) )
  957.                                                    realbuffer%header%assoc = 0
  958.                                                    $_allo_P30(0) = 0x1000000000001L
  958.                                                    $_allo_P30(1) = loc( qgenp )
  958.                                                    call __deallocate( $_allo_P30, 0, 0, _fcd( 0, 0 ) )
  958.                                                    qgenp%header%assoc = 0
  959.                                                    $_allo_P31(0) = 0x1000000000001L
  959.                                                    $_allo_P31(1) = loc( qgenp_si )
  959.                                                    call __deallocate( $_allo_P31, 0, 0, _fcd( 0, 0 ) )
  959.                                                    qgenp_si%header%assoc = 0
  960.                                                    $_allo_P32(0) = 0x1000000000001L
  960.                                                    $_allo_P32(1) = loc( indper )
  960.                                                    call __deallocate( $_allo_P32, 0, 0, _fcd( 0, 0 ) )
  960.                                                    indper%header%assoc = 0
  961.                                                    $_allo_P33(0) = 0x1000000000001L
  961.                                                    $_allo_P33(1) = loc( indg )
  961.                                                    call __deallocate( $_allo_P33, 0, 0, _fcd( 0, 0 ) )
  961.                                                    indg%header%assoc = 0
  962.                                                    $_allo_P34(0) = 0x1000000000001L
  962.                                                    $_allo_P34(1) = loc( jg )
  962.                                                    call __deallocate( $_allo_P34, 0, 0, _fcd( 0, 0 ) )
  962.                                                    jg%header%assoc = 0
  963.                                                    $_allo_P35(0) = 0x1000000000001L
  963.                                                    $_allo_P35(1) = loc( nas )
  963.                                                    call __deallocate( $_allo_P35, 0, 0, _fcd( 0, 0 ) )
  963.                                                    nas%header%assoc = 0
  964.                                                    $_allo_P36(0) = 0x1000000000001L
  964.                                                    $_allo_P36(1) = loc( per )
  964.                                                    call __deallocate( $_allo_P36, 0, 0, _fcd( 0, 0 ) )
  964.                                                    per%header%assoc = 0
  965.                                                    $_allo_P37(0) = 0x1000000000001L
  965.                                                    $_allo_P37(1) = loc( g )
  965.                                                    call __deallocate( $_allo_P37, 0, 0, _fcd( 0, 0 ) )
  965.                                                    g%header%assoc = 0
  967.                                                    $_allo_P38(0) = 0x1000000000001L
  967.                                                    $_allo_P38(1) = loc( one_g )
  967.                                                    call __deallocate( $_allo_P38, 0, 0, _fcd( 0, 0 ) )
  967.                                                    one_g%header%assoc = 0
  968.                                                    $_allo_P39(0) = 0x1000000000001L
  968.                                                    $_allo_P39(1) = loc( one_per )
  968.                                                    call __deallocate( $_allo_P39, 0, 0, _fcd( 0, 0 ) )
  968.                                                    one_per%header%assoc = 0
  969.                                                    $_allo_P40(0) = 0x1000000000001L
  969.                                                    $_allo_P40(1) = loc( all_jg )
  969.                                                    call __deallocate( $_allo_P40, 0, 0, _fcd( 0, 0 ) )
  969.                                                    all_jg%header%assoc = 0
  970.                                                    $_allo_P41(0) = 0x1000000000001L
  970.                                                    $_allo_P41(1) = loc( all_nas )
  970.                                                    call __deallocate( $_allo_P41, 0, 0, _fcd( 0, 0 ) )
  970.                                                    all_nas%header%assoc = 0
  392.                                                    $_allo_P42(0) = 0xd000000000001L
  392.                                                    $_allo_P42(1) = loc( realbuffer )
  392.                                                    $_allo_P42(2) = loc( qgenp_si )
  392.                                                    $_allo_P42(3) = loc( qgenp )
  392.                                                    $_allo_P42(4) = loc( per )
  392.                                                    $_allo_P42(5) = loc( one_per )
  392.                                                    $_allo_P42(6) = loc( one_g )
  392.                                                    $_allo_P42(7) = loc( nas )
  392.                                                    $_allo_P42(8) = loc( jg )
  392.                                                    $_allo_P42(9) = loc( indper )
  392.                                                    $_allo_P42(10) = loc( indg )
  392.                                                    $_allo_P42(11) = loc( g )
  392.                                                    $_allo_P42(12) = loc( all_nas )
  392.                                                    $_allo_P42(13) = loc( all_jg )
  392.                                                    call _dealloc( $_allo_P42, 0, 0, _fcd( 0, 0 ) )
  320.                                                    _free( t$155 )
  320.                                                 endif
  320.                                              endif
  320.                                           endif
  320.                                        endif
  320.                                     endif
  320.                                  endif
  320.                               endif
  320.                            endif
  320.                         endif
  320.                      endif
  320.   110                continue
  320.                   endif
  320.                endif
  320.             endif
  320.          endif
  320.       endif
  971.       return
  971.       end
  971.       
  987.       
  987.       subroutine vertic( f, eigg, eiggt, dotpro, input, mnfirst, mnlast )
  987.       t$63 = mnmax_si
  987.       t$62 = kmax
  991.       t$181 = _zla( 0, mnmax_si )
  987.       t$182 = 2 * _zla( 0, mnmax_si )
  991.       t$183 = _zla( 0, kmax )
  987.       t$184 = 2 * _zla( 0, mnmax_si ) * _zla( 0, kmax )
  987.       t$185 = _zla( 0, kmax )
  987.       t$186 = _zla( 0, kmax ) * _zla( 0, kmax )
  987.       t$187 = 2 * _zla( 0, kmax )
  995.       t$190 = 16 * _zla( 0, kmax )
  987.       t$188 = int( _alloc( 16 * _zla( 0, kmax ) ), 8 )
  995.       t$189 = t$188
  999.       if ( input < 0 ) then
 1000.          if ( mnlast + -mnfirst >= 0 ) then
 1001.             if ( mods > 0 ) then
 1004.                if ( kmax > 0 ) then
 1000.                   $I_L1000_94 = 0
 1000.                   do
 1001.                      $I_L1001_86 = 0
 1001. !dir$ ivdep
 1001.                      do
 1002.                         sum1 = 0.0
 1003.                         sum2 = 0.0
 1004.                         $I_L1004_76 = 0
 1004. !dir$ unroll 4
 1004.                         do
 1006.                            sum2 = sum2 + eiggt(1 + $I_L1004_76, 1 + $I_L1001_86) * f(2, mnfirst + $I_L1000_94, 1 + $I_L1004_76)
 1005.                            sum1 = sum1 + eiggt(1 + $I_L1004_76, 1 + $I_L1001_86) * f(1, mnfirst + $I_L1000_94, 1 + $I_L1004_76)
 1007.                            $I_L1004_76 = 1 + $I_L1004_76
 1004.                            if ( $I_L1004_76 >= kmax ) exit
 1004.                         enddo
 1008.                         col(1, 1 + $I_L1001_86) = sum1 * dotpro(1 + $I_L1001_86)
 1009.                         col(2, 1 + $I_L1001_86) = sum2 * dotpro(1 + $I_L1001_86)
 1010.                         $I_L1001_86 = 1 + $I_L1001_86
 1007.                         if ( $I_L1001_86 >= mods ) exit
 1007.                      enddo
 1011.                      $I_L1011_78 = 0
 1011. !dir$ ivdep
 1011.                      do
 1012.                         f(1, mnfirst + $I_L1000_94, 1 + $I_L1011_78) = col(1, 1 + $I_L1011_78)
 1013.                         f(2, mnfirst + $I_L1000_94, 1 + $I_L1011_78) = col(2, 1 + $I_L1011_78)
 1014.                         $I_L1011_78 = 1 + $I_L1011_78
 1011.                         if ( $I_L1011_78 >= mods ) exit
 1011.                      enddo
 1015.                      $I_L1000_94 = 1 + $I_L1000_94
 1014.                      if ( $I_L1000_94 >= 1 + mnlast + -mnfirst ) exit
 1014.                   enddo
 1014.                else
 1000.                   $SI_L1000_88_G3 = 0
 1000.                   do
 1001.                      $SI_L1001_82_G6 = 0
 1001.                      do
 1000.                         $I_L1000_99 = 0
 1000. !dir$ blocking_size( 64, 64 )
 1000.                         do
 1001.                            $I_L1001_96 = 0
 1001. !dir$ ivdep
 1001. !dir$ blocking_size( 128, 128 )
 1001.                            do
 1012.                               f(1, mnfirst + $I_L1000_99 + 64 * $SI_L1000_88_G3, 1 + $I_L1001_96 + 128 * $SI_L1001_82_G6) = 0.0
 1013.                               f(2, mnfirst + $I_L1000_99 + 64 * $SI_L1000_88_G3, 1 + $I_L1001_96 + 128 * $SI_L1001_82_G6) = 0.0
 1001.                               $I_L1001_96 = 1 + $I_L1001_96
 1007.                               if ( $I_L1001_96 >= min( mods, 128 + 128 * $SI_L1001_82_G6 ) + -128 * $SI_L1001_82_G6 ) exit
 1007.                            enddo
 1000.                            $I_L1000_99 = 1 + $I_L1000_99
 1000.                            if ( $I_L1000_99 >= min( 1 + mnlast + -mnfirst, 64 + 64 * $SI_L1000_88_G3 ) + -64 * $SI_L1000_88_G3 ) exit
 1000.                         enddo
 1001.                         $SI_L1001_82_G6 = 1 + $SI_L1001_82_G6
 1014.                         if ( $SI_L1001_82_G6 >= _rsh( 127 + mods, 7 ) ) exit
 1014.                      enddo
 1000.                      $SI_L1000_88_G3 = 1 + $SI_L1000_88_G3
 1000.                      if ( $SI_L1000_88_G3 >= _rsh( 64 + mnlast + -mnfirst, 6 ) ) exit
 1000.                   enddo
 1000.                endif
 1000.             endif
 1000.          endif
 1016.       else if ( input > 0 ) then
 1017.          if ( mnlast + -mnfirst >= 0 ) then
 1017.             $I_L1017_92 = 0
 1017.             do
 1018.                if ( mods > 0 ) then
 1018.                   $I_L1018_74 = 0
 1018. !dir$ ivdep
 1018.                   do
 1019.                      col(1, 1 + $I_L1018_74) = f(1, mnfirst + $I_L1017_92, 1 + $I_L1018_74)
 1020.                      col(2, 1 + $I_L1018_74) = f(2, mnfirst + $I_L1017_92, 1 + $I_L1018_74)
 1021.                      $I_L1018_74 = 1 + $I_L1018_74
 1018.                      if ( $I_L1018_74 >= mods ) exit
 1018.                   enddo
 1018.                endif
 1022.                if ( kmax > 0 ) then
 1025.                   if ( mods > 0 ) then
 1022.                      $I_L1022_90 = 0
 1022. !dir$ ivdep
 1022.                      do
 1023.                         f(1, mnfirst + $I_L1017_92, 1 + $I_L1022_90) = 0.0
 1024.                         f(2, mnfirst + $I_L1017_92, 1 + $I_L1022_90) = 0.0
 1026.                         $SC_f_I0 = f(1, mnfirst + $I_L1017_92, 1 + $I_L1022_90)
 1027.                         $SC_f_I1 = 0.0
 1025.                         $I_L1025_84 = 0
 1025. !dir$ unroll 4
 1025.                         do
 1026.                            $SC_f_I0 = $SC_f_I0 + col(1, 1 + $I_L1025_84) * eigg(1 + $I_L1022_90, 1 + $I_L1025_84)
 1027.                            $SC_f_I1 = $SC_f_I1 + col(2, 1 + $I_L1025_84) * eigg(1 + $I_L1022_90, 1 + $I_L1025_84)
 1028.                            $I_L1025_84 = 1 + $I_L1025_84
 1025.                            if ( $I_L1025_84 >= mods ) exit
 1025.                         enddo
 1026.                         f(1, mnfirst + $I_L1017_92, 1 + $I_L1022_90) = $SC_f_I0
 1027.                         f(2, mnfirst + $I_L1017_92, 1 + $I_L1022_90) = $SC_f_I1
 1029.                         $I_L1022_90 = 1 + $I_L1022_90
 1028.                         if ( $I_L1022_90 >= kmax ) exit
 1028.                      enddo
 1028.                   else
 1022.                      $I_L1022_80 = 0
 1022. !dir$ ivdep
 1022.                      do
 1023.                         f(1, mnfirst + $I_L1017_92, 1 + $I_L1022_80) = 0.0
 1024.                         f(2, mnfirst + $I_L1017_92, 1 + $I_L1022_80) = 0.0
 1029.                         $I_L1022_80 = 1 + $I_L1022_80
 1028.                         if ( $I_L1022_80 >= kmax ) exit
 1028.                      enddo
 1028.                   endif
 1028.                endif
 1030.                $I_L1017_92 = 1 + $I_L1017_92
 1029.                if ( $I_L1017_92 >= 1 + mnlast + -mnfirst ) exit
 1029.             enddo
 1029.          endif
 1029.       endif
  987.       _free( t$188 )
 1032.       return
 1032.       end
 1032.       
 1051.       
 1051.       subroutine primes( vord, divd, comd, gh, input, mnfirst, mnlast )
 1051.       t$64 = mnmax_si
 1051.       t$65 = kmax
 1052.       t$191 = _zla( 0, mnmax_si )
 1051.       t$192 = 2 * _zla( 0, mnmax_si )
 1052.       t$193 = _zla( 0, kmax )
 1051.       t$194 = 2 * _zla( 0, mnmax_si ) * _zla( 0, kmax )
 1059.       t$197 = 8 * _zla( 0, mnmax_si )
 1051.       t$195 = int( _alloc( 8 * _zla( 0, mnmax_si ) ), 8 )
 1059.       t$196 = t$195
 1061.       if ( myid /= 0 ) then
 1059.          goto 10
 1059.       else if ( mnfirst == 1 ) then
 1062.          w(1) = 0.0
 1063.          $m1_S0 = 2
 1063.       else
 1063.    10    continue
 1065.          $m1_S0 = mnfirst
 1065.       endif
 1067.       if ( input < 0 ) then
 1068.          if ( mnlast + -$m1_S0 >= 0 ) then
 1069.             $SC_snnp1_si_I0 = snnp1_si%dim_1%EX
 1069.             $SC_snnp1_si_I1 = snnp1_si%dim_1%LB
 1068.             $I_L1068_24 = 0
 1068. !dir$ ivdep
 1068.             do
 1069.                w($m1_S0 + $I_L1068_24) = _recip_sqrt( real( (snnp1_si%base_addr)(-1 + 2 * $m1_S0 + 2 * $I_L1068_24, 0), 8 ) )
 1070.                $I_L1068_24 = 1 + $I_L1068_24
 1068.                if ( $I_L1068_24 >= 1 + mnlast + -$m1_S0 ) exit
 1068.             enddo
 1068.          endif
 1071.          if ( mods > 0 ) then
 1073.             if ( mnlast + -mnfirst >= 0 ) then
 1071.                $I_L1071_34 = 0
 1071.                do
 1072.                   $t_S6 = ( 1.5698587127158556e-7 * _recip_sqrt( gh(1 + $I_L1071_34) ) )
 1073.                   $I_L1073_30 = 0
 1073. !dir$ ivdep
 1073.                   do
 1076.                      $divdr_S4 = -( w(mnfirst + $I_L1073_30) * divd(2, mnfirst + $I_L1073_30, 1 + $I_L1071_34) )
 1077.                      $divdi_S5 = w(mnfirst + $I_L1073_30) * divd(1, mnfirst + $I_L1073_30, 1 + $I_L1071_34)
 1078.                      divd(1, mnfirst + $I_L1073_30, 1 + $I_L1071_34) = $divdr_S4
 1079.                      divd(2, mnfirst + $I_L1073_30, 1 + $I_L1071_34) = $divdi_S5
 1074.                      vord(1, mnfirst + $I_L1073_30, 1 + $I_L1071_34) = w(mnfirst + $I_L1073_30) * vord(1, mnfirst + $I_L1073_30, 1 + $I_L1071_34)
 1075.                      vord(2, mnfirst + $I_L1073_30, 1 + $I_L1071_34) = w(mnfirst + $I_L1073_30) * vord(2, mnfirst + $I_L1073_30, 1 + $I_L1071_34)
 1080.                      comd(1, mnfirst + $I_L1073_30, 1 + $I_L1071_34) = $t_S6 * comd(1, mnfirst + $I_L1073_30, 1 + $I_L1071_34)
 1081.                      comd(2, mnfirst + $I_L1073_30, 1 + $I_L1071_34) = $t_S6 * comd(2, mnfirst + $I_L1073_30, 1 + $I_L1071_34)
 1082.                      $I_L1073_30 = 1 + $I_L1073_30
 1073.                      if ( $I_L1073_30 >= 1 + mnlast + -mnfirst ) exit
 1073.                   enddo
 1083.                   $I_L1071_34 = 1 + $I_L1071_34
 1082.                   if ( $I_L1071_34 >= mods ) exit
 1082.                enddo
 1082.             endif
 1082.          endif
 1084.       else if ( input > 0 ) then
 1085.          if ( mnlast + -$m1_S0 >= 0 ) then
 1086.             $SC_snnp1_si_I0 = snnp1_si%dim_1%EX
 1086.             $SC_snnp1_si_I1 = snnp1_si%dim_1%LB
 1085.             $I_L1085_26 = 0
 1085. !dir$ ivdep
 1085.             do
 1086.                w($m1_S0 + $I_L1085_26) = _sqrt( real( (snnp1_si%base_addr)(-1 + 2 * $m1_S0 + 2 * $I_L1085_26, 0), 8 ) )
 1087.                $I_L1085_26 = 1 + $I_L1085_26
 1085.                if ( $I_L1085_26 >= 1 + mnlast + -$m1_S0 ) exit
 1085.             enddo
 1085.          endif
 1088.          if ( mods > 0 ) then
 1090.             if ( mnlast + -mnfirst >= 0 ) then
 1088.                $I_L1088_32 = 0
 1088.                do
 1089.                   $t_S12 = 6370000.0 * _sqrt( gh(1 + $I_L1088_32) )
 1090.                   $I_L1090_28 = 0
 1090. !dir$ ivdep
 1090.                   do
 1093.                      $divdr_S10 = w(mnfirst + $I_L1090_28) * divd(2, mnfirst + $I_L1090_28, 1 + $I_L1088_32)
 1094.                      $divdi_S11 = -( w(mnfirst + $I_L1090_28) * divd(1, mnfirst + $I_L1090_28, 1 + $I_L1088_32) )
 1095.                      divd(1, mnfirst + $I_L1090_28, 1 + $I_L1088_32) = $divdr_S10
 1096.                      divd(2, mnfirst + $I_L1090_28, 1 + $I_L1088_32) = $divdi_S11
 1091.                      vord(1, mnfirst + $I_L1090_28, 1 + $I_L1088_32) = w(mnfirst + $I_L1090_28) * vord(1, mnfirst + $I_L1090_28, 1 + $I_L1088_32)
 1092.                      vord(2, mnfirst + $I_L1090_28, 1 + $I_L1088_32) = w(mnfirst + $I_L1090_28) * vord(2, mnfirst + $I_L1090_28, 1 + $I_L1088_32)
 1097.                      comd(1, mnfirst + $I_L1090_28, 1 + $I_L1088_32) = $t_S12 * comd(1, mnfirst + $I_L1090_28, 1 + $I_L1088_32)
 1098.                      comd(2, mnfirst + $I_L1090_28, 1 + $I_L1088_32) = $t_S12 * comd(2, mnfirst + $I_L1090_28, 1 + $I_L1088_32)
 1099.                      $I_L1090_28 = 1 + $I_L1090_28
 1090.                      if ( $I_L1090_28 >= 1 + mnlast + -mnfirst ) exit
 1090.                   enddo
 1100.                   $I_L1088_32 = 1 + $I_L1088_32
 1099.                   if ( $I_L1088_32 >= mods ) exit
 1099.                enddo
 1099.             endif
 1099.          endif
 1099.       endif
 1051.       _free( t$195 )
 1102.       return
 1102.       end
 1102.       
 1116.       
 1116.       subroutine horiz1( vord, divd, comd, v, per, g, indper, indg, jg, nas, myms, nms )
 1116.       t$66 = mymnmax
 1116.       t$67 = modsloc
 1117.       t$198 = _zla( 0, mymnmax )
 1116.       t$199 = 2 * _zla( 0, mymnmax )
 1117.       t$200 = _zla( 0, modsloc )
 1116.       t$201 = 2 * _zla( 0, mymnmax ) * _zla( 0, modsloc )
 1116.       t$69 = ( 2 * mymmax )
 1125.       t$202 = _zla( 0, ( 2 * mymmax ) )
 1116.       t$203 = _zla( 0, ( 2 * mymmax ) )
 1116.       t$204 = _zla( 0, modsloc ) * _zla( 0, ( 2 * mymmax ) )
 1116.       t$68 = nms
 1124.       t$205 = _zla( 0, nms )
 1116.       t$70 = ( 3 + 3 * mmax ) / 2
 1130.       t$206 = _zla( 0, t$70 )
 1116.       t$207 = 2 * _zla( 0, t$70 )
 1130.       t$210 = 16 * _zla( 0, t$70 )
 1130.       t$211 = 8 * ( 7 + 16 * _zla( 0, t$70 ) ) / 8
 1130.       t$213 = t$211 + 16 * _zla( 0, t$70 )
 1116.       t$208 = int( _alloc( t$211 + 16 * _zla( 0, t$70 ) ), 8 )
 1130.       t$209 = t$208
 1130.       t$212 = t$211 + t$208
 1134.       if ( modsloc > 0 ) then
 1148.          $SC_mymnmap_I2 = mymnmap%dim_1%EX
 1148.          $SC_mymnmap_I3 = mymnmap%dim_1%LB
 1148.          $SC_mymnmap_I5 = mymnmap%dim_2%SM
 1148.          $SC_mymnmap_I4 = mymnmap%dim_2%EX
 1148.          $SC_mymnmap_I6 = mymnmap%dim_2%LB
 1139.          $SC_lm2m_I0 = lm2m%dim_1%EX
 1139.          $SC_lm2m_I1 = lm2m%dim_1%LB
 1135.          if ( nms > 0 ) then
 1134.             $I_L1134_152 = 0
 1134.             do
 1135.                $I_L1135_150 = 0
 1135.                do
 1136.                   $ll_S1 = myms(1 + $I_L1135_150)
 1139.                   $mglob_S2 = (lm2m%base_addr)($ll_S1, 0)
 1143.                   $jsev_S8 = 1 + mmax + ( 1 + mmax + -$mglob_S2 ) / -2 + -$mglob_S2
 1147.                   if ( mmax + -$mglob_S2 > 0 ) then
 1147.                      $I_L1147_122 = 0
 1147.                      do
 1148.                         $lx_S6 = (mymnmap%base_addr)($ll_S1, 1 + $mglob_S2 + 2 * $I_L1147_122, 0)
 1150.                         $I_L1150_94 = 0
 1150. !dir$ ivdep
 1150.                         do
 1151.                            sdot(1 + $I_L1150_94, 1 + $I_L1147_122) = vord(1 + $I_L1150_94, $lx_S6, 1 + $I_L1134_152)
 1152.                            adot(1 + $I_L1150_94, 2 + mmax + $I_L1147_122 + ( 1 + mmax + -$mglob_S2 ) / -2 + -$mglob_S2) = divd(1 + $I_L1150_94, $lx_S6, 1 + $I_L1134_152)
 1153.                            adot(1 + $I_L1150_94, 1 + $jsev_S8 + $I_L1147_122 + ( 1 + mmax + -$mglob_S2 ) / 2) = comd(1 + $I_L1150_94, $lx_S6, 1 + $I_L1134_152)
 1154.                            $I_L1150_94 = 1 + $I_L1150_94
 1150.                            if ( $I_L1150_94 >= 2 ) exit
 1150.                         enddo
 1155.                         $I_L1147_122 = 1 + $I_L1147_122
 1154.                         if ( $I_L1147_122 >= ( 1 + mmax + -$mglob_S2 ) / 2 ) exit
 1154.                      enddo
 1154.                   endif
 1157.                   if ( mmax + -$mglob_S2 >= 0 ) then
 1157.                      $I_L1157_124 = 0
 1157.                      do
 1158.                         $lx_S12 = (mymnmap%base_addr)($ll_S1, $mglob_S2 + 2 * $I_L1157_124, 0)
 1160.                         $I_L1160_96 = 0
 1160. !dir$ ivdep
 1160.                         do
 1161.                            adot(1 + $I_L1160_96, 1 + $I_L1157_124) = vord(1 + $I_L1160_96, $lx_S12, 1 + $I_L1134_152)
 1162.                            sdot(1 + $I_L1160_96, 1 + $I_L1157_124 + ( 1 + mmax + -$mglob_S2 ) / 2) = divd(1 + $I_L1160_96, $lx_S12, 1 + $I_L1134_152)
 1163.                            sdot(1 + $I_L1160_96, 1 + $jsev_S8 + $I_L1157_124 + ( 1 + mmax + -$mglob_S2 ) / 2) = comd(1 + $I_L1160_96, $lx_S12, 1 + $I_L1134_152)
 1164.                            $I_L1160_96 = 1 + $I_L1160_96
 1160.                            if ( $I_L1160_96 >= 2 ) exit
 1160.                         enddo
 1165.                         $I_L1157_124 = 1 + $I_L1157_124
 1164.                         if ( $I_L1157_124 >= ( 2 + mmax + -$mglob_S2 ) / 2 ) exit
 1164.                      enddo
 1164.                   endif
 1166.                   if ( jg(-1 + 2 * $ll_S1, 1 + $I_L1134_152) /= 0 ) then
 1167.                      $tm_S15 = indper(-1 + 2 * $ll_S1, 1 + $I_L1134_152)
 1167.                      tm$311 = loc( g(indg(-1 + 2 * $ll_S1, 1 + $I_L1134_152)) )
 1167.                      g = _copyin( g(indg(-1 + 2 * $ll_S1, 1 + $I_L1134_152)) )
 1167.                      t$73 = nas(-1 + 2 * $ll_S1, 1 + $I_L1134_152)
 1167.                      t$218 = max( 0, t$73 )
 1167.                      t$219 = 2 * max( 0, t$73 )
 1167.                      t$74 = jg(-1 + 2 * $ll_S1, 1 + $I_L1134_152)
 1167.                      t$220 = max( 0, t$74 )
 1167.                      t$221 = max( 0, t$74 )
 1167.                      t$222 = max( 0, t$73 ) * max( 0, t$74 )
 1167.                      t$75 = ( 3 + 3 * mmax ) / 2
 1167.                      t$223 = max( 0, t$75 )
 1167.                      t$226 = 4 * max( 0, t$75 )
 1167.                      t$227 = 2 * max( 0, t$75 )
 1167.                      t$228 = 8 * ( 7 + 4 * max( 0, t$75 ) ) / 8
 1167.                      t$230 = t$228 + 16 * max( 0, t$75 )
 1167.                      t$224 = int( _alloc( t$228 + 16 * max( 0, t$75 ) ), 8 )
 1167.                      t$225 = t$224
 1167.                      t$229 = t$228 + t$224
 1167.                      if ( t$74 > 0 ) then
 1167.                         $I_L1167_98 = 0
 1167. !dir$ ivdep
 1167.                         do
 1167.                            init(1 + $I_L1167_98) = 0
 1167.                            y(1, 1 + $I_L1167_98) = 0.0
 1167.                            y(2, 1 + $I_L1167_98) = 0.0
 1167.                            $I_L1167_98 = 1 + $I_L1167_98
 1167.                            if ( $I_L1167_98 >= t$74 ) exit
 1167.                         enddo
 1167.                         if ( t$73 > 0 ) then
 1167.                            $I_L1167_146 = 0
 1167.                            do
 1167.                               $period_S17 = abs( per($tm_S15 + $I_L1167_146) )
 1167.                               if ( $period_S17 + -v <= 0.0 ) then
 1167.                                  $difcut_S18 = 9.9999999999999995e-8 + dk * real( $mglob_S2 + $I_L1167_146 + ( $mglob_S2 + $I_L1167_146 ) * ( $mglob_S2 + $I_L1167_146 ), 8 ) ** ( ndord / 2 )
 1167.                                  if ( -$period_S17 + ( 5.0e-1 * 1.0/$difcut_S18 ) >= 0.0 ) then
 1167.                                     init(1 + $I_L1167_146) = ( 1 + $I_L1167_146 )
 1167.                                     $SC_y_I8 = y(2, 1 + $I_L1167_146)
 1167.                                     $SC_y_I7 = y(1, 1 + $I_L1167_146)
 1167.                                     $I_L1167_142 = 0
 1167. !dir$ ivdep
 1167.                                     do
 1167.                                        $SC_y_I8 = $SC_y_I8 + sdot(2, 1 + $I_L1167_142) * g(1 + $I_L1167_146, 1 + $I_L1167_142)
 1167.                                        $SC_y_I7 = $SC_y_I7 + sdot(1, 1 + $I_L1167_142) * g(1 + $I_L1167_146, 1 + $I_L1167_142)
 1167.                                        $I_L1167_142 = 1 + $I_L1167_142
 1167.                                        if ( $I_L1167_142 >= t$73 ) exit
 1167.                                     enddo
 1167.                                     y(2, 1 + $I_L1167_146) = $SC_y_I8
 1167.                                     y(1, 1 + $I_L1167_146) = $SC_y_I7
 1167.                                     $yi_S21 = y(2, 1 + $I_L1167_146)
 1167.                                     y(1, 1 + $I_L1167_146) = $yi_S21 * per($tm_S15 + $I_L1167_146)
 1167.                                     y(2, 1 + $I_L1167_146) = -( $SC_y_I7 * per($tm_S15 + $I_L1167_146) )
 1167.                                  endif
 1167.                               endif
 1167.                               $I_L1167_146 = 1 + $I_L1167_146
 1167.                               if ( $I_L1167_146 >= t$74 ) exit
 1167.                            enddo
 1167.                         else
 1167.                            $I_L1167_118 = 0
 1167. !dir$ ivdep
 1167.                            do
 1167.                               $period_S17 = abs( per($tm_S15 + $I_L1167_118) )
 1167.                               if ( $period_S17 + -v <= 0.0 ) then
 1167.                                  $difcut_S18 = 9.9999999999999995e-8 + dk * real( $mglob_S2 + $I_L1167_118 + ( $mglob_S2 + $I_L1167_118 ) * ( $mglob_S2 + $I_L1167_118 ), 8 ) ** ( ndord / 2 )
 1167.                                  if ( -$period_S17 + ( 5.0e-1 * 1.0/$difcut_S18 ) >= 0.0 ) then
 1167.                                     init(1 + $I_L1167_118) = ( 1 + $I_L1167_118 )
 1167.                                     $yr_S22 = y(1, 1 + $I_L1167_118)
 1167.                                     $yi_S21 = y(2, 1 + $I_L1167_118)
 1167.                                     y(1, 1 + $I_L1167_118) = $yi_S21 * per($tm_S15 + $I_L1167_118)
 1167.                                     y(2, 1 + $I_L1167_118) = -( $yr_S22 * per($tm_S15 + $I_L1167_118) )
 1167.                                  endif
 1167.                               endif
 1167.                               $I_L1167_118 = 1 + $I_L1167_118
 1167.                               if ( $I_L1167_118 >= t$74 ) exit
 1167.                            enddo
 1167.                         endif
 1167.                      endif
 1167.                      if ( t$73 > 0 ) then
 1167.                         $I_L1167_102 = 0
 1167. !dir$ ivdep
 1167.                         do
 1167.                            sdot(1, 1 + $I_L1167_102) = 0.0
 1167.                            sdot(2, 1 + $I_L1167_102) = 0.0
 1167.                            $I_L1167_102 = 1 + $I_L1167_102
 1167.                            if ( $I_L1167_102 >= t$73 ) exit
 1167.                         enddo
 1167.                         if ( t$74 > 0 ) then
 1167.                            $SI_L1167_128_G7 = 0
 1167.                            do
 1167.                               $SI_L1167_104_G10 = 0
 1167.                               do
 1167.                                  $I_L1167_160 = 0
 1167. !dir$ ivdep
 1167. !dir$ blocking_size( 32, 32 )
 1167.                                  do
 1167.                                     $I_L1167_154 = 0
 1167. !dir$ unroll 4
 1167. !dir$ blocking_size( 256, 256 )
 1167.                                     do
 1167.                                        if ( init(1 + $I_L1167_154 + 256 * $SI_L1167_104_G10) /= 0 ) then
 1167.                                           sdot(1, 1 + $I_L1167_160 + 32 * $SI_L1167_128_G7) = sdot(1, 1 + $I_L1167_160 + 32 * $SI_L1167_128_G7) + y(1, 1 + $I_L1167_154 + 256 * $SI_L1167_104_G10) * g(1 + $I_L1167_154 + 256 * $SI_L1167_104_G10, 1 + $I_L1167_160 + 32 * $SI_L1167_128_G7)
 1167.                                           sdot(2, 1 + $I_L1167_160 + 32 * $SI_L1167_128_G7) = sdot(2, 1 + $I_L1167_160 + 32 * $SI_L1167_128_G7) + y(2, 1 + $I_L1167_154 + 256 * $SI_L1167_104_G10) * g(1 + $I_L1167_154 + 256 * $SI_L1167_104_G10, 1 + $I_L1167_160 + 32 * $SI_L1167_128_G7)
 1167.                                        endif
 1167.                                        $I_L1167_154 = 1 + $I_L1167_154
 1167.                                        if ( $I_L1167_154 >= min( t$74, 256 + 256 * $SI_L1167_104_G10 ) + -256 * $SI_L1167_104_G10 ) exit
 1167.                                     enddo
 1167.                                     $I_L1167_160 = 1 + $I_L1167_160
 1167.                                     if ( $I_L1167_160 >= min( t$73, 32 + 32 * $SI_L1167_128_G7 ) + -32 * $SI_L1167_128_G7 ) exit
 1167.                                  enddo
 1167.                                  $SI_L1167_104_G10 = 1 + $SI_L1167_104_G10
 1167.                                  if ( $SI_L1167_104_G10 >= _rsh( 255 + t$74, 8 ) ) exit
 1167.                               enddo
 1167.                               $SI_L1167_128_G7 = 1 + $SI_L1167_128_G7
 1167.                               if ( $SI_L1167_128_G7 >= _rsh( 31 + t$73, 5 ) ) exit
 1167.                            enddo
 1167.                         endif
 1167.                      endif
 1167.                      _free( t$224 )
 1167.                      g(indg(-1 + 2 * $ll_S1, 1 + $I_L1134_152)) = _copyout( g )
 1167.                   endif
 1170.                   if ( jg(2 * $ll_S1, 1 + $I_L1134_152) /= 0 ) then
 1171.                      $tm_S27 = indper(2 * $ll_S1, 1 + $I_L1134_152)
 1171.                      tm$321 = loc( g(indg(2 * $ll_S1, 1 + $I_L1134_152)) )
 1171.                      g = _copyin( g(indg(2 * $ll_S1, 1 + $I_L1134_152)) )
 1171.                      t$73 = nas(2 * $ll_S1, 1 + $I_L1134_152)
 1171.                      t$218 = max( 0, t$73 )
 1171.                      t$219 = 2 * max( 0, t$73 )
 1171.                      t$74 = jg(2 * $ll_S1, 1 + $I_L1134_152)
 1171.                      t$220 = max( 0, t$74 )
 1171.                      t$221 = max( 0, t$74 )
 1171.                      t$222 = max( 0, t$73 ) * max( 0, t$74 )
 1171.                      t$75 = ( 3 + 3 * mmax ) / 2
 1171.                      t$223 = max( 0, t$75 )
 1171.                      t$226 = 4 * max( 0, t$75 )
 1171.                      t$227 = 2 * max( 0, t$75 )
 1171.                      t$228 = 8 * ( 7 + 4 * max( 0, t$75 ) ) / 8
 1171.                      t$230 = t$228 + 16 * max( 0, t$75 )
 1171.                      t$224 = int( _alloc( t$228 + 16 * max( 0, t$75 ) ), 8 )
 1171.                      t$225 = t$224
 1171.                      t$229 = t$228 + t$224
 1171.                      if ( t$74 > 0 ) then
 1171.                         $I_L1171_106 = 0
 1171. !dir$ ivdep
 1171.                         do
 1171.                            init(1 + $I_L1171_106) = 0
 1171.                            y(1, 1 + $I_L1171_106) = 0.0
 1171.                            y(2, 1 + $I_L1171_106) = 0.0
 1171.                            $I_L1171_106 = 1 + $I_L1171_106
 1171.                            if ( $I_L1171_106 >= t$74 ) exit
 1171.                         enddo
 1171.                         if ( t$73 > 0 ) then
 1171.                            $I_L1171_148 = 0
 1171.                            do
 1171.                               $period_S30 = abs( per($tm_S27 + $I_L1171_148) )
 1171.                               if ( $period_S30 + -v <= 0.0 ) then
 1171.                                  $difcut_S31 = 9.9999999999999995e-8 + dk * real( $mglob_S2 + $I_L1171_148 + ( $mglob_S2 + $I_L1171_148 ) * ( $mglob_S2 + $I_L1171_148 ), 8 ) ** ( ndord / 2 )
 1171.                                  if ( -$period_S30 + ( 5.0e-1 * 1.0/$difcut_S31 ) >= 0.0 ) then
 1171.                                     init(1 + $I_L1171_148) = ( 1 + $I_L1171_148 )
 1171.                                     $SC_y_I10 = y(2, 1 + $I_L1171_148)
 1171.                                     $SC_y_I9 = y(1, 1 + $I_L1171_148)
 1171.                                     $I_L1171_144 = 0
 1171. !dir$ ivdep
 1171.                                     do
 1171.                                        $SC_y_I10 = $SC_y_I10 + adot(2, 1 + $I_L1171_144) * g(1 + $I_L1171_148, 1 + $I_L1171_144)
 1171.                                        $SC_y_I9 = $SC_y_I9 + adot(1, 1 + $I_L1171_144) * g(1 + $I_L1171_148, 1 + $I_L1171_144)
 1171.                                        $I_L1171_144 = 1 + $I_L1171_144
 1171.                                        if ( $I_L1171_144 >= t$73 ) exit
 1171.                                     enddo
 1171.                                     y(2, 1 + $I_L1171_148) = $SC_y_I10
 1171.                                     y(1, 1 + $I_L1171_148) = $SC_y_I9
 1171.                                     $yi_S34 = y(2, 1 + $I_L1171_148)
 1171.                                     y(1, 1 + $I_L1171_148) = $yi_S34 * per($tm_S27 + $I_L1171_148)
 1171.                                     y(2, 1 + $I_L1171_148) = -( $SC_y_I9 * per($tm_S27 + $I_L1171_148) )
 1171.                                  endif
 1171.                               endif
 1171.                               $I_L1171_148 = 1 + $I_L1171_148
 1171.                               if ( $I_L1171_148 >= t$74 ) exit
 1171.                            enddo
 1171.                         else
 1171.                            $I_L1171_120 = 0
 1171. !dir$ ivdep
 1171.                            do
 1171.                               $period_S30 = abs( per($tm_S27 + $I_L1171_120) )
 1171.                               if ( $period_S30 + -v <= 0.0 ) then
 1171.                                  $difcut_S31 = 9.9999999999999995e-8 + dk * real( $mglob_S2 + $I_L1171_120 + ( $mglob_S2 + $I_L1171_120 ) * ( $mglob_S2 + $I_L1171_120 ), 8 ) ** ( ndord / 2 )
 1171.                                  if ( -$period_S30 + ( 5.0e-1 * 1.0/$difcut_S31 ) >= 0.0 ) then
 1171.                                     init(1 + $I_L1171_120) = ( 1 + $I_L1171_120 )
 1171.                                     $yr_S35 = y(1, 1 + $I_L1171_120)
 1171.                                     $yi_S34 = y(2, 1 + $I_L1171_120)
 1171.                                     y(1, 1 + $I_L1171_120) = $yi_S34 * per($tm_S27 + $I_L1171_120)
 1171.                                     y(2, 1 + $I_L1171_120) = -( $yr_S35 * per($tm_S27 + $I_L1171_120) )
 1171.                                  endif
 1171.                               endif
 1171.                               $I_L1171_120 = 1 + $I_L1171_120
 1171.                               if ( $I_L1171_120 >= t$74 ) exit
 1171.                            enddo
 1171.                         endif
 1171.                      endif
 1171.                      if ( t$73 > 0 ) then
 1171.                         $I_L1171_110 = 0
 1171. !dir$ ivdep
 1171.                         do
 1171.                            adot(1, 1 + $I_L1171_110) = 0.0
 1171.                            adot(2, 1 + $I_L1171_110) = 0.0
 1171.                            $I_L1171_110 = 1 + $I_L1171_110
 1171.                            if ( $I_L1171_110 >= t$73 ) exit
 1171.                         enddo
 1171.                         if ( t$74 > 0 ) then
 1171.                            $SI_L1171_132_G13 = 0
 1171.                            do
 1171.                               $SI_L1171_112_G16 = 0
 1171.                               do
 1171.                                  $I_L1171_163 = 0
 1171. !dir$ ivdep
 1171. !dir$ blocking_size( 32, 32 )
 1171.                                  do
 1171.                                     $I_L1171_157 = 0
 1171. !dir$ unroll 4
 1171. !dir$ blocking_size( 256, 256 )
 1171.                                     do
 1171.                                        if ( init(1 + $I_L1171_157 + 256 * $SI_L1171_112_G16) /= 0 ) then
 1171.                                           adot(1, 1 + $I_L1171_163 + 32 * $SI_L1171_132_G13) = adot(1, 1 + $I_L1171_163 + 32 * $SI_L1171_132_G13) + y(1, 1 + $I_L1171_157 + 256 * $SI_L1171_112_G16) * g(1 + $I_L1171_157 + 256 * $SI_L1171_112_G16, 1 + $I_L1171_163 + 32 * $SI_L1171_132_G13)
 1171.                                           adot(2, 1 + $I_L1171_163 + 32 * $SI_L1171_132_G13) = adot(2, 1 + $I_L1171_163 + 32 * $SI_L1171_132_G13) + y(2, 1 + $I_L1171_157 + 256 * $SI_L1171_112_G16) * g(1 + $I_L1171_157 + 256 * $SI_L1171_112_G16, 1 + $I_L1171_163 + 32 * $SI_L1171_132_G13)
 1171.                                        endif
 1171.                                        $I_L1171_157 = 1 + $I_L1171_157
 1171.                                        if ( $I_L1171_157 >= min( t$74, 256 + 256 * $SI_L1171_112_G16 ) + -256 * $SI_L1171_112_G16 ) exit
 1171.                                     enddo
 1171.                                     $I_L1171_163 = 1 + $I_L1171_163
 1171.                                     if ( $I_L1171_163 >= min( t$73, 32 + 32 * $SI_L1171_132_G13 ) + -32 * $SI_L1171_132_G13 ) exit
 1171.                                  enddo
 1171.                                  $SI_L1171_112_G16 = 1 + $SI_L1171_112_G16
 1171.                                  if ( $SI_L1171_112_G16 >= _rsh( 255 + t$74, 8 ) ) exit
 1171.                               enddo
 1171.                               $SI_L1171_132_G13 = 1 + $SI_L1171_132_G13
 1171.                               if ( $SI_L1171_132_G13 >= _rsh( 31 + t$73, 5 ) ) exit
 1171.                            enddo
 1171.                         endif
 1171.                      endif
 1171.                      _free( t$224 )
 1171.                      g(indg(2 * $ll_S1, 1 + $I_L1134_152)) = _copyout( g )
 1171.                   endif
 1174.                   if ( mmax + -$mglob_S2 > 0 ) then
 1174.                      $I_L1174_134 = 0
 1174.                      do
 1175.                         $lx_S42 = (mymnmap%base_addr)($ll_S1, 1 + $mglob_S2 + 2 * $I_L1174_134, 0)
 1177.                         $I_L1177_114 = 0
 1177. !dir$ ivdep
 1177.                         do
 1178.                            vord(1 + $I_L1177_114, $lx_S42, 1 + $I_L1134_152) = sdot(1 + $I_L1177_114, 1 + $I_L1174_134)
 1179.                            divd(1 + $I_L1177_114, $lx_S42, 1 + $I_L1134_152) = adot(1 + $I_L1177_114, 2 + mmax + $I_L1174_134 + ( 1 + mmax + -$mglob_S2 ) / -2 + -$mglob_S2)
 1180.                            comd(1 + $I_L1177_114, $lx_S42, 1 + $I_L1134_152) = adot(1 + $I_L1177_114, 1 + $jsev_S8 + $I_L1174_134 + ( 1 + mmax + -$mglob_S2 ) / 2)
 1181.                            $I_L1177_114 = 1 + $I_L1177_114
 1177.                            if ( $I_L1177_114 >= 2 ) exit
 1177.                         enddo
 1182.                         $I_L1174_134 = 1 + $I_L1174_134
 1181.                         if ( $I_L1174_134 >= ( 1 + mmax + -$mglob_S2 ) / 2 ) exit
 1181.                      enddo
 1181.                   endif
 1184.                   if ( mmax + -$mglob_S2 >= 0 ) then
 1184.                      $I_L1184_136 = 0
 1184.                      do
 1185.                         $lx_S46 = (mymnmap%base_addr)($ll_S1, $mglob_S2 + 2 * $I_L1184_136, 0)
 1187.                         $I_L1187_116 = 0
 1187. !dir$ ivdep
 1187.                         do
 1188.                            vord(1 + $I_L1187_116, $lx_S46, 1 + $I_L1134_152) = adot(1 + $I_L1187_116, 1 + $I_L1184_136)
 1189.                            divd(1 + $I_L1187_116, $lx_S46, 1 + $I_L1134_152) = sdot(1 + $I_L1187_116, 1 + $I_L1184_136 + ( 1 + mmax + -$mglob_S2 ) / 2)
 1190.                            comd(1 + $I_L1187_116, $lx_S46, 1 + $I_L1134_152) = sdot(1 + $I_L1187_116, 1 + $jsev_S8 + $I_L1184_136 + ( 1 + mmax + -$mglob_S2 ) / 2)
 1191.                            $I_L1187_116 = 1 + $I_L1187_116
 1187.                            if ( $I_L1187_116 >= 2 ) exit
 1187.                         enddo
 1192.                         $I_L1184_136 = 1 + $I_L1184_136
 1191.                         if ( $I_L1184_136 >= ( 2 + mmax + -$mglob_S2 ) / 2 ) exit
 1191.                      enddo
 1191.                   endif
 1193.                   $I_L1135_150 = 1 + $I_L1135_150
 1192.                   if ( $I_L1135_150 >= nms ) exit
 1192.                enddo
 1194.                $I_L1134_152 = 1 + $I_L1134_152
 1193.                if ( $I_L1134_152 >= modsloc ) exit
 1193.             enddo
 1193.          endif
 1193.       endif
 1116.       _free( t$208 )
 1195.       return
 1195.       end
 1195.       
 1197.       
 1197.       subroutine getperg( nas, per, g, jg )
 1197.       t$71 = jg
 1199.       t$214 = _zla( 0, jg )
 1197.       t$72 = nas
 1197.       t$215 = _zla( 0, jg )
 1199.       t$216 = _zla( 0, nas )
 1197.       t$217 = _zla( 0, jg ) * _zla( 0, nas )
 1206.       $Unit_temp_O0 = nfnmi
 1206.       _uread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)per(+:( 1, jg, 1 )), 0x804060300000000L ), _iotype( (&)g(+:( 1, jg, 1 ), +:( 1, nas, 1 )), 0x804060300000000L ) ) )
 1208.       return
 1208.       end
 1208.       
 1217.       
 1217.       subroutine horiz2( dot, nas, per, g, jg, percut, l )
 1217.       t$73 = nas
 1220.       t$218 = _zla( 0, nas )
 1217.       t$219 = 2 * _zla( 0, nas )
 1217.       t$74 = jg
 1221.       t$220 = _zla( 0, jg )
 1217.       t$221 = _zla( 0, jg )
 1217.       t$222 = _zla( 0, nas ) * _zla( 0, jg )
 1217.       t$75 = ( 3 + 3 * mmax ) / 2
 1225.       t$223 = _zla( 0, t$75 )
 1225.       t$226 = 4 * _zla( 0, t$75 )
 1217.       t$227 = 2 * _zla( 0, t$75 )
 1224.       t$228 = 8 * ( 7 + 4 * _zla( 0, t$75 ) ) / 8
 1224.       t$230 = t$228 + 16 * _zla( 0, t$75 )
 1217.       t$224 = int( _alloc( t$228 + 16 * _zla( 0, t$75 ) ), 8 )
 1225.       t$225 = t$224
 1224.       t$229 = t$228 + t$224
 1235.       if ( jg > 0 ) then
 1235.          $I_L1235_26 = 0
 1235. !dir$ ivdep
 1235.          do
 1236.             init(1 + $I_L1235_26) = 0
 1237.             y(1, 1 + $I_L1235_26) = 0.0
 1238.             y(2, 1 + $I_L1235_26) = 0.0
 1239.             $I_L1235_26 = 1 + $I_L1235_26
 1235.             if ( $I_L1235_26 >= jg ) exit
 1235.          enddo
 1254.          if ( nas > 0 ) then
 1241.             $I_L1241_42 = 0
 1241.             do
 1243.                $period_S3 = abs( per(1 + $I_L1241_42) )
 1244.                if ( $period_S3 + -percut <= 0.0 ) then
 1250.                   $difcut_S4 = 9.9999999999999995e-8 + dk * real( 1 + l + $I_L1241_42 + ( 1 + l + $I_L1241_42 ) * ( 1 + l + $I_L1241_42 ), 8 ) ** ( ndord / 2 )
 1252.                   if ( -$period_S3 + ( 5.0e-1 * 1.0/$difcut_S4 ) >= 0.0 ) then
 1253.                      init(1 + $I_L1241_42) = ( 1 + $I_L1241_42 )
 1256.                      $SC_y_I1 = y(2, 1 + $I_L1241_42)
 1255.                      $SC_y_I0 = y(1, 1 + $I_L1241_42)
 1254.                      $I_L1254_40 = 0
 1254. !dir$ ivdep
 1254.                      do
 1256.                         $SC_y_I1 = $SC_y_I1 + dot(2, 1 + $I_L1254_40) * g(1 + $I_L1241_42, 1 + $I_L1254_40)
 1255.                         $SC_y_I0 = $SC_y_I0 + dot(1, 1 + $I_L1254_40) * g(1 + $I_L1241_42, 1 + $I_L1254_40)
 1257.                         $I_L1254_40 = 1 + $I_L1254_40
 1254.                         if ( $I_L1254_40 >= nas ) exit
 1254.                      enddo
 1256.                      y(2, 1 + $I_L1241_42) = $SC_y_I1
 1255.                      y(1, 1 + $I_L1241_42) = $SC_y_I0
 1259.                      $yi_S7 = y(2, 1 + $I_L1241_42)
 1260.                      y(1, 1 + $I_L1241_42) = $yi_S7 * per(1 + $I_L1241_42)
 1261.                      y(2, 1 + $I_L1241_42) = -( $SC_y_I0 * per(1 + $I_L1241_42) )
 1261.                   endif
 1261.                endif
 1264.                $I_L1241_42 = 1 + $I_L1241_42
 1263.                if ( $I_L1241_42 >= jg ) exit
 1263.             enddo
 1263.          else
 1241.             $I_L1241_34 = 0
 1241. !dir$ ivdep
 1241.             do
 1243.                $period_S3 = abs( per(1 + $I_L1241_34) )
 1244.                if ( $period_S3 + -percut <= 0.0 ) then
 1250.                   $difcut_S4 = 9.9999999999999995e-8 + dk * real( 1 + l + $I_L1241_34 + ( 1 + l + $I_L1241_34 ) * ( 1 + l + $I_L1241_34 ), 8 ) ** ( ndord / 2 )
 1252.                   if ( -$period_S3 + ( 5.0e-1 * 1.0/$difcut_S4 ) >= 0.0 ) then
 1253.                      init(1 + $I_L1241_34) = ( 1 + $I_L1241_34 )
 1258.                      $yr_S8 = y(1, 1 + $I_L1241_34)
 1259.                      $yi_S7 = y(2, 1 + $I_L1241_34)
 1260.                      y(1, 1 + $I_L1241_34) = $yi_S7 * per(1 + $I_L1241_34)
 1261.                      y(2, 1 + $I_L1241_34) = -( $yr_S8 * per(1 + $I_L1241_34) )
 1261.                   endif
 1261.                endif
 1264.                $I_L1241_34 = 1 + $I_L1241_34
 1263.                if ( $I_L1241_34 >= jg ) exit
 1263.             enddo
 1263.          endif
 1263.       endif
 1265.       if ( nas > 0 ) then
 1265.          $I_L1265_30 = 0
 1265. !dir$ ivdep
 1265.          do
 1266.             dot(1, 1 + $I_L1265_30) = 0.0
 1267.             dot(2, 1 + $I_L1265_30) = 0.0
 1268.             $I_L1265_30 = 1 + $I_L1265_30
 1265.             if ( $I_L1265_30 >= nas ) exit
 1265.          enddo
 1270.          if ( jg > 0 ) then
 1269.             $SI_L1269_38_G2 = 0
 1269.             do
 1270.                $SI_L1270_32_G5 = 0
 1270.                do
 1269.                   $I_L1269_47 = 0
 1269. !dir$ ivdep
 1269. !dir$ blocking_size( 32, 32 )
 1269.                   do
 1270.                      $I_L1270_44 = 0
 1270. !dir$ unroll 4
 1270. !dir$ blocking_size( 256, 256 )
 1270.                      do
 1271.                         if ( init(1 + $I_L1270_44 + 256 * $SI_L1270_32_G5) /= 0 ) then
 1272.                            dot(1, 1 + $I_L1269_47 + 32 * $SI_L1269_38_G2) = dot(1, 1 + $I_L1269_47 + 32 * $SI_L1269_38_G2) + y(1, 1 + $I_L1270_44 + 256 * $SI_L1270_32_G5) * g(1 + $I_L1270_44 + 256 * $SI_L1270_32_G5, 1 + $I_L1269_47 + 32 * $SI_L1269_38_G2)
 1273.                            dot(2, 1 + $I_L1269_47 + 32 * $SI_L1269_38_G2) = dot(2, 1 + $I_L1269_47 + 32 * $SI_L1269_38_G2) + y(2, 1 + $I_L1270_44 + 256 * $SI_L1270_32_G5) * g(1 + $I_L1270_44 + 256 * $SI_L1270_32_G5, 1 + $I_L1269_47 + 32 * $SI_L1269_38_G2)
 1273.                         endif
 1270.                         $I_L1270_44 = 1 + $I_L1270_44
 1274.                         if ( $I_L1270_44 >= min( jg, 256 + 256 * $SI_L1270_32_G5 ) + -256 * $SI_L1270_32_G5 ) exit
 1274.                      enddo
 1269.                      $I_L1269_47 = 1 + $I_L1269_47
 1269.                      if ( $I_L1269_47 >= min( nas, 32 + 32 * $SI_L1269_38_G2 ) + -32 * $SI_L1269_38_G2 ) exit
 1269.                   enddo
 1270.                   $SI_L1270_32_G5 = 1 + $SI_L1270_32_G5
 1275.                   if ( $SI_L1270_32_G5 >= _rsh( 255 + jg, 8 ) ) exit
 1275.                enddo
 1269.                $SI_L1269_38_G2 = 1 + $SI_L1269_38_G2
 1269.                if ( $SI_L1269_38_G2 >= _rsh( 31 + nas, 5 ) ) exit
 1269.             enddo
 1269.          endif
 1269.       endif
 1217.       _free( t$224 )
 1277.       return
 1277.       end
 1277.       
 1294.       
 1294.       subroutine getmod( slagr, fname, rsettov )
 1294.       t$231 = _len( fname )
 1294.       t$76 = kmax
 1302.       t$232 = _zla( 0, kmax )
 1302.       t$235 = 8 * _zla( 0, kmax )
 1294.       t$233 = int( _alloc( 8 * _zla( 0, kmax ) ), 8 )
 1302.       t$234 = t$233
 1306.       ierr = 0
 1305.       t$753 = nfnmi
 1306.        _substr(t$754,1,7) = 'REPLACE'
 1305.        _substr(t$755,1,10) = 'SEQUENTIAL'
 1305.        _substr(t$756,1,11) = 'UNFORMATTED'
 1306.        _substr(t$757,1,9) = 'READWRITE'
 1305.       t$758(1) = 0x100000000000000L
 1305. !dir$ suppress t$753
 1305.       t$758(2) = int( loc( t$753 ), 8 )
 1305. !dir$ suppress ierr
 1305.       t$758(3) = int( loc( ierr ), 8 )
 1305.       t$758(4) = 0
 1305. !dir$ suppress  _substr(fname,1,max( 0, t$231 ))
 1305.       t$758(5) = int( loc(  _substr(fname,1,_len( fname )) ), 8 )
 1305.       t$758(6) = _len( fname )
 1305. !dir$ suppress  _substr(t$754,1,7)
 1305.       t$758(7) = int( loc(  _substr(t$754,1,7) ), 8 )
 1305.       t$758(8) = 7
 1305. !dir$ suppress  _substr(t$755,1,10)
 1305.       t$758(9) = int( loc(  _substr(t$755,1,10) ), 8 )
 1305.       t$758(10) = 10
 1305. !dir$ suppress  _substr(t$756,1,11)
 1305.       t$758(11) = int( loc(  _substr(t$756,1,11) ), 8 )
 1305.       t$758(12) = 11
 1305.       t$758(13) = 0
 1305.       t$758(14) = 0
 1305.       t$758(16) = 0
 1305. !dir$ suppress  _substr(t$757,1,9)
 1305.       t$758(18) = int( loc(  _substr(t$757,1,9) ), 8 )
 1305.       t$758(19) = 9
 1305.       t$758(20) = 0
 1305.       t$758(22) = 0
 1305.       t$758(24) = 0x2000200000000L
 1305.       t$758(25) = 0
 1305.       t$758(27) = 0
 1305.       t$758(29) = 0
 1305.       t$758(31) = 0
 1305.       t$758(33) = 0
 1305.       t$758(35) = 0
 1305.       t$752 = _open( t$758 )
 1307.       t$77 = kmax
 1307.       t$236 = max( 0, kmax )
 1307.       t$239 = 8 * max( 0, kmax )
 1307.       t$240 = 8 * ( 7 + 8 * max( 0, kmax ) ) / 8
 1307.       t$242 = t$240 + 8 * max( 0, kmax )
 1307.       t$243 = max( 0, kmax )
 1307.       t$244 = max( 0, kmax ) * max( 0, kmax )
 1307.       t$245 = 8 * ( 7 + t$240 + 8 * max( 0, kmax ) ) / 8
 1307.       t$247 = t$245 + 8 * max( 0, kmax ) * max( 0, kmax )
 1307.       t$248 = 8 * ( 7 + t$245 + 8 * max( 0, kmax ) * max( 0, kmax ) ) / 8
 1307.       t$250 = t$248 + 8 * max( 0, kmax ) * max( 0, kmax )
 1307.       t$251 = 8 * ( 7 + t$248 + 8 * max( 0, kmax ) * max( 0, kmax ) ) / 8
 1307.       t$253 = t$251 + 8 * max( 0, kmax ) * max( 0, kmax )
 1307.       t$254 = 8 * ( 7 + t$251 + 8 * max( 0, kmax ) * max( 0, kmax ) ) / 8
 1307.       t$256 = t$254 + 8 * max( 0, kmax ) * max( 0, kmax )
 1307.       t$257 = 8 * ( 7 + t$254 + 8 * max( 0, kmax ) * max( 0, kmax ) ) / 8
 1307.       t$259 = t$257 + 8 * max( 0, kmax ) * max( 0, kmax )
 1307.       t$260 = 8 * ( 7 + t$257 + 8 * max( 0, kmax ) * max( 0, kmax ) ) / 8
 1307.       t$262 = t$260 + 8 * max( 0, kmax )
 1307.       t$237 = int( _alloc( t$260 + 8 * max( 0, kmax ) ), 8 )
 1307.       t$238 = t$237
 1307.       t$241 = t$240 + t$237
 1307.       t$246 = t$245 + t$237
 1307.       t$249 = t$248 + t$237
 1307.       t$252 = t$251 + t$237
 1307.       t$255 = t$254 + t$237
 1307.       t$258 = t$257 + t$237
 1307.       t$261 = t$260 + t$237
 1307.       if ( rsettov /= .false. ) then
 1307.          $F_A33 = kmax
 1307.          if ( kmax > 0 ) then
 1307.             $SC_tov_I11 = tov%dim_1%EX
 1307.             $SC_tov_I12 = tov%dim_1%LB
 1307.             $I_L1307_112 = 0
 1307. !dir$ ivdep
 1307.             do
 1307.                to(1 + $I_L1307_112) = (tov%base_addr)($SC_tov_I12 + $I_L1307_112, 0)
 1307.                $I_L1307_112 = 1 + $I_L1307_112
 1307.                if ( $I_L1307_112 >= $F_A33 ) exit
 1307.             enddo
 1307.             $SC_sl_I0 = sl%dim_1%EX
 1307.             $SC_sl_I1 = sl%dim_1%LB
 1307.             $SC_tov_I2 = tov%dim_1%EX
 1307.             $SC_tov_I3 = tov%dim_1%LB
 1307.             $I_L1307_96 = 0
 1307. !dir$ ivdep
 1307.             do
 1307.                $p_S1 = 1000.0 * (sl%base_addr)(1 + $I_L1307_96, 0)
 1307.                if ( 1000.0 * (sl%base_addr)(1 + $I_L1307_96, 0) < 54.748699999999999 ) then
 1307.                   goto 10
 1307.                else if ( $p_S1 <= 226.321 ) then
 1307.                   (tov%base_addr)(1 + $I_L1307_96, 0) = 216.65000000000001
 1307.                else
 1307.    10             continue
 1307.                   if ( $p_S1 < 54.748699999999999 ) then
 1307.                      $height_S2 = 20000.0 + -243580.51987476368 * ( 8.8943894245479915e-1 + -_exp3( log( abs( $p_S1 ) ), $p_S1, -2.9270953893531435e-2 ) )
 1307.                      (tov%base_addr)(1 + $I_L1307_96, 0) = 216.65000000000001 + 1.0e-3 * ( -20000.0 + $height_S2 )
 1307.                   else
 1307.                      $height_S3 = 11880.480800667456 * ( 3.7313952166210886 + -_exp3( log( abs( $p_S1 ) ), $p_S1, 1.9026120030795432e-1 ) )
 1307.                      (tov%base_addr)(1 + $I_L1307_96, 0) = 288.14999999999998 + -6.4999999999999997e-3 * $height_S3
 1307.                   endif
 1307.                endif
 1307.                $I_L1307_96 = 1 + $I_L1307_96
 1307.                if ( $I_L1307_96 >= kmax ) exit
 1307.             enddo
 1307.          endif
 1307.       endif
 1307.       call bmcm( 1.0, slagr )
 1307.       $F_A34 = t$77
 1307.       $F_A35 = t$77
 1307.       if ( and( -$F_A35, -$F_A34 ) < 0 ) then
 1307.          $SC_cm_I13 = cm%dim_1%LB
 1307.          $SC_cm_I14 = cm%dim_2%SM
 1307.          $SC_cm_I15 = cm%dim_2%LB
 1307.          $I_L1307_130 = 0
 1307.          do
 1307.             $I_L1307_114 = 0
 1307. !dir$ ivdep
 1307.             do
 1307.                g(1 + $I_L1307_114, 1 + $I_L1307_130) = 4.05769e13 * (cm%base_addr)($SC_cm_I13 + $I_L1307_114, $SC_cm_I15 + $I_L1307_130, 0)
 1307.                $I_L1307_114 = 1 + $I_L1307_114
 1307.                if ( $I_L1307_114 >= $F_A35 ) exit
 1307.             enddo
 1307.             $I_L1307_130 = 1 + $I_L1307_130
 1307.             if ( $I_L1307_130 >= $F_A34 ) exit
 1307.          enddo
 1307.       endif
 1307.       $F_A36 = t$77
 1307.       $F_A37 = t$77
 1307.       if ( and( -$F_A37, -$F_A36 ) < 0 ) then
 1307.          $I_L1307_132 = 0
 1307.          do
 1307.             $I_L1307_116 = 0
 1307. !dir$ ivdep
 1307.             do
 1307.                gt(1 + $I_L1307_116, 1 + $I_L1307_132) = g(1 + $I_L1307_132, 1 + $I_L1307_116)
 1307.                $I_L1307_116 = 1 + $I_L1307_116
 1307.                if ( $I_L1307_116 >= $F_A37 ) exit
 1307.             enddo
 1307.             $I_L1307_132 = 1 + $I_L1307_132
 1307.             if ( $I_L1307_132 >= $F_A36 ) exit
 1307.          enddo
 1307.       endif
 1307.       tm$333 = loc( g(1, 1) )
 1307.       gg = _copyin( g(1, 1) )
 1307.       tm$335 = loc( eigvc(1, 1) )
 1307.       eigvc = _copyin( eigvc(1, 1) )
 1307.       tm$337 = loc( eigg(1, 1) )
 1307.       vec = _copyin( eigg(1, 1) )
 1307.       t$138 = kmax
 1307.       t$342 = max( 0, kmax )
 1307.       t$343 = max( 0, kmax )
 1307.       t$344 = max( 0, kmax ) * max( 0, kmax )
 1307.       t$347 = 8 * max( 0, kmax )
 1307.       t$348 = 8 * ( 7 + 8 * max( 0, kmax ) ) / 8
 1307.       t$350 = t$348 + 8 * max( 0, kmax )
 1307.       t$352 = t$348 + 12 * max( 0, kmax )
 1307.       t$353 = 8 * ( 7 + t$348 + 12 * max( 0, kmax ) ) / 8
 1307.       t$355 = t$353 + 8 * max( 0, kmax )
 1307.       t$356 = 8 * ( 7 + t$353 + 8 * max( 0, kmax ) ) / 8
 1307.       t$358 = t$356 + 8 * max( 0, kmax )
 1307.       t$345 = int( _alloc( t$356 + 8 * max( 0, kmax ) ), 8 )
 1307.       t$346 = t$345
 1307.       t$349 = t$348 + t$345
 1307.       t$351 = t$348 + t$345 + 8 * max( 0, kmax )
 1307.       t$354 = t$353 + t$345
 1307.       t$357 = t$356 + t$345
 1307.       call rg( kmax, kmax, gg(1, 1), eigvr(1), eigvi(1), 1, eigvc(1, 1), ier, 8.8817841970012523e-16, wk1(1), wk2(1) )
 1307.       if ( kmax > 0 ) then
 1307.          $I_L1307_120 = 0
 1307.          do
 1307.             col(1 + $I_L1307_120) = -eigvr(1 + $I_L1307_120)
 1307.             soma = 0.0
 1307.             $I_L1307_98 = 0
 1307. !dir$ ivdep
 1307.             do
 1307.                soma = soma + eigvc(1 + $I_L1307_98, 1 + $I_L1307_120) * eigvc(1 + $I_L1307_98, 1 + $I_L1307_120)
 1307.                $I_L1307_98 = 1 + $I_L1307_98
 1307.                if ( $I_L1307_98 >= kmax ) exit
 1307.             enddo
 1307.             $soma_S7 = _recip_sqrt( soma )
 1307.             $I_L1307_100 = 0
 1307. !dir$ ivdep
 1307.             do
 1307.                eigvc(1 + $I_L1307_100, 1 + $I_L1307_120) = $soma_S7 * eigvc(1 + $I_L1307_100, 1 + $I_L1307_120)
 1307.                $I_L1307_100 = 1 + $I_L1307_100
 1307.                if ( $I_L1307_100 >= kmax ) exit
 1307.             enddo
 1307.             $I_L1307_120 = 1 + $I_L1307_120
 1307.             if ( $I_L1307_120 >= kmax ) exit
 1307.          enddo
 1307.          $I_L1307_122 = 0
 1307.          do
 1307.             $W1 = kmax
 1307.             $W2 = 1
 1307.             $Maxmin_x_W0 = _idamax( $W1, col(1), $W2 )
 1307.             $kkk_S10 = cvmg( $Maxmin_x_W0, 0, abs( col($Maxmin_x_W0) ) > -1.0e20 )
 1307.             gh(1 + $I_L1307_122) = col($kkk_S10)
 1307.             col($kkk_S10) = 0.0
 1307.             $I_L1307_102 = 0
 1307. !dir$ ivdep
 1307.             do
 1307.                vec(1 + $I_L1307_102, 1 + $I_L1307_122) = eigvc(1 + $I_L1307_102, $kkk_S10)
 1307.                $I_L1307_102 = 1 + $I_L1307_102
 1307.                if ( $I_L1307_102 >= kmax ) exit
 1307.             enddo
 1307.             $I_L1307_122 = 1 + $I_L1307_122
 1307.             if ( $I_L1307_122 >= kmax ) exit
 1307.          enddo
 1307.       endif
 1307.       _free( t$345 )
 1307.       eigg(1, 1) = _copyout( vec )
 1307.       eigvc(1, 1) = _copyout( eigvc )
 1307.       g(1, 1) = _copyout( gg )
 1307.       tm$355 = loc( gt(1, 1) )
 1307.       gg = _copyin( gt(1, 1) )
 1307.       tm$357 = loc( eigvc(1, 1) )
 1307.       eigvc = _copyin( eigvc(1, 1) )
 1307.       tm$359 = loc( eiggt(1, 1) )
 1307.       vec = _copyin( eiggt(1, 1) )
 1307.       t$138 = kmax
 1307.       t$342 = max( 0, kmax )
 1307.       t$343 = max( 0, kmax )
 1307.       t$344 = max( 0, kmax ) * max( 0, kmax )
 1307.       t$347 = 8 * max( 0, kmax )
 1307.       t$348 = 8 * ( 7 + 8 * max( 0, kmax ) ) / 8
 1307.       t$350 = t$348 + 8 * max( 0, kmax )
 1307.       t$352 = t$348 + 12 * max( 0, kmax )
 1307.       t$353 = 8 * ( 7 + t$348 + 12 * max( 0, kmax ) ) / 8
 1307.       t$355 = t$353 + 8 * max( 0, kmax )
 1307.       t$356 = 8 * ( 7 + t$353 + 8 * max( 0, kmax ) ) / 8
 1307.       t$358 = t$356 + 8 * max( 0, kmax )
 1307.       t$345 = int( _alloc( t$356 + 8 * max( 0, kmax ) ), 8 )
 1307.       t$346 = t$345
 1307.       t$349 = t$348 + t$345
 1307.       t$351 = t$348 + t$345 + 8 * max( 0, kmax )
 1307.       t$354 = t$353 + t$345
 1307.       t$357 = t$356 + t$345
 1307.       call rg( kmax, kmax, gg(1, 1), eigvr(1), eigvi(1), 1, eigvc(1, 1), ier, 8.8817841970012523e-16, wk1(1), wk2(1) )
 1307.       if ( kmax > 0 ) then
 1307.          $I_L1307_124 = 0
 1307.          do
 1307.             col(1 + $I_L1307_124) = eigvr(1 + $I_L1307_124)
 1307.             soma = 0.0
 1307.             $I_L1307_104 = 0
 1307. !dir$ ivdep
 1307.             do
 1307.                soma = soma + eigvc(1 + $I_L1307_104, 1 + $I_L1307_124) * eigvc(1 + $I_L1307_104, 1 + $I_L1307_124)
 1307.                $I_L1307_104 = 1 + $I_L1307_104
 1307.                if ( $I_L1307_104 >= kmax ) exit
 1307.             enddo
 1307.             $soma_S16 = _recip_sqrt( soma )
 1307.             $I_L1307_106 = 0
 1307. !dir$ ivdep
 1307.             do
 1307.                eigvc(1 + $I_L1307_106, 1 + $I_L1307_124) = $soma_S16 * eigvc(1 + $I_L1307_106, 1 + $I_L1307_124)
 1307.                $I_L1307_106 = 1 + $I_L1307_106
 1307.                if ( $I_L1307_106 >= kmax ) exit
 1307.             enddo
 1307.             $I_L1307_124 = 1 + $I_L1307_124
 1307.             if ( $I_L1307_124 >= kmax ) exit
 1307.          enddo
 1307.          $I_L1307_126 = 0
 1307.          do
 1307.             $W3 = kmax
 1307.             $W4 = 1
 1307.             $Maxmin_x_W0 = _idamax( $W3, col(1), $W4 )
 1307.             $kkk_S19 = cvmg( $Maxmin_x_W0, 0, abs( col($Maxmin_x_W0) ) > -1.0e20 )
 1307.             dotpro(1 + $I_L1307_126) = col($kkk_S19)
 1307.             col($kkk_S19) = 0.0
 1307.             $I_L1307_108 = 0
 1307. !dir$ ivdep
 1307.             do
 1307.                vec(1 + $I_L1307_108, 1 + $I_L1307_126) = eigvc(1 + $I_L1307_108, $kkk_S19)
 1307.                $I_L1307_108 = 1 + $I_L1307_108
 1307.                if ( $I_L1307_108 >= kmax ) exit
 1307.             enddo
 1307.             $I_L1307_126 = 1 + $I_L1307_126
 1307.             if ( $I_L1307_126 >= kmax ) exit
 1307.          enddo
 1307.       endif
 1307.       _free( t$345 )
 1307.       eiggt(1, 1) = _copyout( vec )
 1307.       eigvc(1, 1) = _copyout( eigvc )
 1307.       gt(1, 1) = _copyout( gg )
 1307.       if ( kmax > 0 ) then
 1307.          $I_L1307_128 = 0
 1307.          do
 1307.             soma = 0.0
 1307.             $I_L1307_110 = 0
 1307. !dir$ ivdep
 1307.             do
 1307.                soma = soma + eigg(1 + $I_L1307_110, 1 + $I_L1307_128) * eiggt(1 + $I_L1307_110, 1 + $I_L1307_128)
 1307.                $I_L1307_110 = 1 + $I_L1307_110
 1307.                if ( $I_L1307_110 >= kmax ) exit
 1307.             enddo
 1307.             dotpro(1 + $I_L1307_128) = 1.0/soma
 1307.             $I_L1307_128 = 1 + $I_L1307_128
 1307.             if ( $I_L1307_128 >= kmax ) exit
 1307.          enddo
 1307.       endif
 1307.       $Unit_temp_O0 = nfnmi
 1307.       _uwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)eigg(+:( 1, t$77, 1 ), +:( 1, t$77, 1 )), 0x804060300000000L ), _iotype( (&)eiggt(+:( 1, t$77, 1 ), +:( 1, t$77, 1 )), 0x804060300000000L ), _iotype( (&)gh(+:( 1, t$77, 1 )), 0x804060300000000L ), _iotype( (&)dotpro(+:( 1, t$77, 1 )), 0x804060300000000L ), _iotype( (&)(tov%base_addr)(+:( tov%dim_1%LB, -1 + tov%dim_1%LB + tov%dim_1%EX, 1 ), 0), 0x804060300000000L ) ) )
 1307.       if ( rsettov /= .false. ) then
 1307.          $F_A38 = t$77
 1307.          if ( t$77 > 0 ) then
 1307.             $SC_tov_I11 = tov%dim_1%EX
 1307.             $SC_tov_I12 = tov%dim_1%LB
 1307.             $I_L1307_118 = 0
 1307. !dir$ ivdep
 1307.             do
 1307.                (tov%base_addr)($SC_tov_I12 + $I_L1307_118, 0) = to(1 + $I_L1307_118)
 1307.                $I_L1307_118 = 1 + $I_L1307_118
 1307.                if ( $I_L1307_118 >= $F_A38 ) exit
 1307.             enddo
 1307.          endif
 1307.       endif
 1307.       _free( t$237 )
 1311. !dir$ suppress gh(1)
 1311.       t$759 = $_StaticDV_P0
 1311.       t$759%base_addr = pointer to array[1] of real (kind=8)( loc( gh(1) ) )
 1311.       t$759%header%el_len = 64
 1311.       t$759%header%assoc = 1
 1311.       t$759%header%ptr_alloc = 0
 1311.       t$759%header%p_or_a = 0
 1311.       t$759%header%a_contig = 1
 1311.       t$759%header%n_dim = 1
 1311.       t$759%header%orig_base = 0
 1311.       t$759%header%orig_size = 0
 1311.       t$759%header%n_codim = 0
 1311.       t$759%header%dv_versn = 2
 1311.       t$759%header%dv_smunit = 64
 1311.       t$759%header%d_type = 0
 1311.       t$759%header%n_params = 0
 1311.       t$759%header%d_type_idx = 13
 1311.       t$759%dim_1%LB = 1
 1311.       t$759%dim_1%EX = _zla( 0, t$76 )
 1311.       t$759%dim_1%SM = 1
 1311.       call setmods( t$759 )
 1313.       call hormod( gh(1), 8.8817841970012523e-16 )
 1314.       t$753 = nfnmi
 1314.       t$761(1) = 0x100000000000000L
 1314. !dir$ suppress t$753
 1314.       t$761(2) = int( loc( t$753 ), 8 )
 1314.       t$761(3) = 0
 1314.       t$761(4) = 0
 1314.       t$761(5) = 0
 1314.       t$761(7) = 0
 1314.       t$761(8) = 0
 1314.       t$760 = _close( t$761 )
 1294.       _free( t$233 )
 1315.       return
 1315.       end
 1315.       
 1373.       
 1373.       subroutine vermod( gh, eps, matz, slagr, rsettov )
 1322.       t$77 = kmax
 1323.       t$236 = _zla( 0, kmax )
 1340.       t$239 = 8 * _zla( 0, kmax )
 1338.       t$240 = 8 * ( 7 + 8 * _zla( 0, kmax ) ) / 8
 1338.       t$242 = t$240 + 8 * _zla( 0, kmax )
 1322.       t$243 = _zla( 0, kmax )
 1322.       t$244 = _zla( 0, kmax ) * _zla( 0, kmax )
 1335.       t$245 = 8 * ( 7 + t$240 + 8 * _zla( 0, kmax ) ) / 8
 1335.       t$247 = t$245 + 8 * _zla( 0, kmax ) * _zla( 0, kmax )
 1336.       t$248 = 8 * ( 7 + t$245 + 8 * _zla( 0, kmax ) * _zla( 0, kmax ) ) / 8
 1336.       t$250 = t$248 + 8 * _zla( 0, kmax ) * _zla( 0, kmax )
 1337.       t$251 = 8 * ( 7 + t$248 + 8 * _zla( 0, kmax ) * _zla( 0, kmax ) ) / 8
 1337.       t$253 = t$251 + 8 * _zla( 0, kmax ) * _zla( 0, kmax )
 1341.       t$254 = 8 * ( 7 + t$251 + 8 * _zla( 0, kmax ) * _zla( 0, kmax ) ) / 8
 1341.       t$256 = t$254 + 8 * _zla( 0, kmax ) * _zla( 0, kmax )
 1342.       t$257 = 8 * ( 7 + t$254 + 8 * _zla( 0, kmax ) * _zla( 0, kmax ) ) / 8
 1342.       t$259 = t$257 + 8 * _zla( 0, kmax ) * _zla( 0, kmax )
 1339.       t$260 = 8 * ( 7 + t$257 + 8 * _zla( 0, kmax ) * _zla( 0, kmax ) ) / 8
 1339.       t$262 = t$260 + 8 * _zla( 0, kmax )
 1322.       t$237 = int( _alloc( t$260 + 8 * _zla( 0, kmax ) ), 8 )
 1340.       t$238 = t$237
 1338.       t$241 = t$240 + t$237
 1335.       t$246 = t$245 + t$237
 1336.       t$249 = t$248 + t$237
 1337.       t$252 = t$251 + t$237
 1341.       t$255 = t$254 + t$237
 1342.       t$258 = t$257 + t$237
 1339.       t$261 = t$260 + t$237
 1344.       if ( rsettov /= .false. ) then
 1345.          $F_A33 = kmax
 1345.          if ( kmax > 0 ) then
 1345.             $SC_tov_I11 = tov%dim_1%EX
 1345.             $SC_tov_I12 = tov%dim_1%LB
 1345.             $I_L1345_112 = 0
 1345. !dir$ ivdep
 1345.             do
 1345.                to(1 + $I_L1345_112) = (tov%base_addr)($SC_tov_I12 + $I_L1345_112, 0)
 1345.                $I_L1345_112 = 1 + $I_L1345_112
 1345.                if ( $I_L1345_112 >= $F_A33 ) exit
 1345.             enddo
 1347.             $SC_sl_I0 = sl%dim_1%EX
 1347.             $SC_sl_I1 = sl%dim_1%LB
 1348.             $SC_tov_I2 = tov%dim_1%EX
 1348.             $SC_tov_I3 = tov%dim_1%LB
 1346.             $I_L1346_96 = 0
 1346. !dir$ ivdep
 1346.             do
 1347.                $p_S1 = 1000.0 * (sl%base_addr)(1 + $I_L1346_96, 0)
 1348.                if ( 1000.0 * (sl%base_addr)(1 + $I_L1346_96, 0) < 54.748699999999999 ) then
 1346.                   goto 10
 1348.                else if ( $p_S1 <= 226.321 ) then
 1348.                   (tov%base_addr)(1 + $I_L1346_96, 0) = 216.65000000000001
 1348.                else
 1348.    10             continue
 1348.                   if ( $p_S1 < 54.748699999999999 ) then
 1348.                      $height_S2 = 20000.0 + -243580.51987476368 * ( 8.8943894245479915e-1 + -_exp3( log( abs( $p_S1 ) ), $p_S1, -2.9270953893531435e-2 ) )
 1348.                      (tov%base_addr)(1 + $I_L1346_96, 0) = 216.65000000000001 + 1.0e-3 * ( -20000.0 + $height_S2 )
 1348.                   else
 1348.                      $height_S3 = 11880.480800667456 * ( 3.7313952166210886 + -_exp3( log( abs( $p_S1 ) ), $p_S1, 1.9026120030795432e-1 ) )
 1348.                      (tov%base_addr)(1 + $I_L1346_96, 0) = 288.14999999999998 + -6.4999999999999997e-3 * $height_S3
 1348.                   endif
 1348.                endif
 1349.                $I_L1346_96 = 1 + $I_L1346_96
 1348.                if ( $I_L1346_96 >= kmax ) exit
 1348.             enddo
 1348.          endif
 1348.       endif
 1351.       call bmcm( 1.0, slagr )
 1353.       $F_A34 = t$77
 1353.       $F_A35 = t$77
 1353.       if ( and( -$F_A35, -$F_A34 ) < 0 ) then
 1353.          $SC_cm_I13 = cm%dim_1%LB
 1353.          $SC_cm_I14 = cm%dim_2%SM
 1353.          $SC_cm_I15 = cm%dim_2%LB
 1353.          $I_L1353_130 = 0
 1353.          do
 1353.             $I_L1353_114 = 0
 1353. !dir$ ivdep
 1353.             do
 1353.                g(1 + $I_L1353_114, 1 + $I_L1353_130) = 4.05769e13 * (cm%base_addr)($SC_cm_I13 + $I_L1353_114, $SC_cm_I15 + $I_L1353_130, 0)
 1353.                $I_L1353_114 = 1 + $I_L1353_114
 1353.                if ( $I_L1353_114 >= $F_A35 ) exit
 1353.             enddo
 1353.             $I_L1353_130 = 1 + $I_L1353_130
 1353.             if ( $I_L1353_130 >= $F_A34 ) exit
 1353.          enddo
 1353.       endif
 1354.       $F_A36 = t$77
 1354.       $F_A37 = t$77
 1354.       if ( and( -$F_A37, -$F_A36 ) < 0 ) then
 1354.          $I_L1354_132 = 0
 1354.          do
 1354.             $I_L1354_116 = 0
 1354. !dir$ ivdep
 1354.             do
 1354.                gt(1 + $I_L1354_116, 1 + $I_L1354_132) = g(1 + $I_L1354_132, 1 + $I_L1354_116)
 1354.                $I_L1354_116 = 1 + $I_L1354_116
 1354.                if ( $I_L1354_116 >= $F_A37 ) exit
 1354.             enddo
 1354.             $I_L1354_132 = 1 + $I_L1354_132
 1354.             if ( $I_L1354_132 >= $F_A36 ) exit
 1354.          enddo
 1354.       endif
 1356.       tm$380 = loc( g(1, 1) )
 1356.       gg = _copyin( g(1, 1) )
 1356.       tm$382 = loc( eigvc(1, 1) )
 1356.       eigvc = _copyin( eigvc(1, 1) )
 1356.       tm$384 = loc( eigg(1, 1) )
 1356.       vec = _copyin( eigg(1, 1) )
 1356.       t$138 = kmax
 1356.       t$342 = max( 0, kmax )
 1356.       t$343 = max( 0, kmax )
 1356.       t$344 = max( 0, kmax ) * max( 0, kmax )
 1356.       t$347 = 8 * max( 0, kmax )
 1356.       t$348 = 8 * ( 7 + 8 * max( 0, kmax ) ) / 8
 1356.       t$350 = t$348 + 8 * max( 0, kmax )
 1356.       t$352 = t$348 + 12 * max( 0, kmax )
 1356.       t$353 = 8 * ( 7 + t$348 + 12 * max( 0, kmax ) ) / 8
 1356.       t$355 = t$353 + 8 * max( 0, kmax )
 1356.       t$356 = 8 * ( 7 + t$353 + 8 * max( 0, kmax ) ) / 8
 1356.       t$358 = t$356 + 8 * max( 0, kmax )
 1356.       t$345 = int( _alloc( t$356 + 8 * max( 0, kmax ) ), 8 )
 1356.       t$346 = t$345
 1356.       t$349 = t$348 + t$345
 1356.       t$351 = t$348 + t$345 + 8 * max( 0, kmax )
 1356.       t$354 = t$353 + t$345
 1356.       t$357 = t$356 + t$345
 1356.       call rg( kmax, kmax, gg(1, 1), eigvr(1), eigvi(1), matz, eigvc(1, 1), ier, eps, wk1(1), wk2(1) )
 1356.       if ( kmax > 0 ) then
 1356.          $I_L1356_120 = 0
 1356.          do
 1356.             col(1 + $I_L1356_120) = -eigvr(1 + $I_L1356_120)
 1356.             soma = 0.0
 1356.             $I_L1356_98 = 0
 1356. !dir$ ivdep
 1356.             do
 1356.                soma = soma + eigvc(1 + $I_L1356_98, 1 + $I_L1356_120) * eigvc(1 + $I_L1356_98, 1 + $I_L1356_120)
 1356.                $I_L1356_98 = 1 + $I_L1356_98
 1356.                if ( $I_L1356_98 >= kmax ) exit
 1356.             enddo
 1356.             $soma_S7 = _recip_sqrt( soma )
 1356.             $I_L1356_100 = 0
 1356. !dir$ ivdep
 1356.             do
 1356.                eigvc(1 + $I_L1356_100, 1 + $I_L1356_120) = $soma_S7 * eigvc(1 + $I_L1356_100, 1 + $I_L1356_120)
 1356.                $I_L1356_100 = 1 + $I_L1356_100
 1356.                if ( $I_L1356_100 >= kmax ) exit
 1356.             enddo
 1356.             $I_L1356_120 = 1 + $I_L1356_120
 1356.             if ( $I_L1356_120 >= kmax ) exit
 1356.          enddo
 1356.          $I_L1356_122 = 0
 1356.          do
 1356.             $W1 = kmax
 1356.             $W2 = 1
 1356.             $Maxmin_x_W0 = _idamax( $W1, col(1), $W2 )
 1356.             $kkk_S10 = cvmg( $Maxmin_x_W0, 0, abs( col($Maxmin_x_W0) ) > -1.0e20 )
 1356.             gh(1 + $I_L1356_122) = col($kkk_S10)
 1356.             col($kkk_S10) = 0.0
 1356.             $I_L1356_102 = 0
 1356. !dir$ ivdep
 1356.             do
 1356.                vec(1 + $I_L1356_102, 1 + $I_L1356_122) = eigvc(1 + $I_L1356_102, $kkk_S10)
 1356.                $I_L1356_102 = 1 + $I_L1356_102
 1356.                if ( $I_L1356_102 >= kmax ) exit
 1356.             enddo
 1356.             $I_L1356_122 = 1 + $I_L1356_122
 1356.             if ( $I_L1356_122 >= kmax ) exit
 1356.          enddo
 1356.       endif
 1356.       _free( t$345 )
 1356.       eigg(1, 1) = _copyout( vec )
 1356.       eigvc(1, 1) = _copyout( eigvc )
 1356.       g(1, 1) = _copyout( gg )
 1358.       tm$402 = loc( gt(1, 1) )
 1358.       gg = _copyin( gt(1, 1) )
 1358.       tm$404 = loc( eigvc(1, 1) )
 1358.       eigvc = _copyin( eigvc(1, 1) )
 1358.       tm$406 = loc( eiggt(1, 1) )
 1358.       vec = _copyin( eiggt(1, 1) )
 1358.       t$138 = kmax
 1358.       t$342 = max( 0, kmax )
 1358.       t$343 = max( 0, kmax )
 1358.       t$344 = max( 0, kmax ) * max( 0, kmax )
 1358.       t$347 = 8 * max( 0, kmax )
 1358.       t$348 = 8 * ( 7 + 8 * max( 0, kmax ) ) / 8
 1358.       t$350 = t$348 + 8 * max( 0, kmax )
 1358.       t$352 = t$348 + 12 * max( 0, kmax )
 1358.       t$353 = 8 * ( 7 + t$348 + 12 * max( 0, kmax ) ) / 8
 1358.       t$355 = t$353 + 8 * max( 0, kmax )
 1358.       t$356 = 8 * ( 7 + t$353 + 8 * max( 0, kmax ) ) / 8
 1358.       t$358 = t$356 + 8 * max( 0, kmax )
 1358.       t$345 = int( _alloc( t$356 + 8 * max( 0, kmax ) ), 8 )
 1358.       t$346 = t$345
 1358.       t$349 = t$348 + t$345
 1358.       t$351 = t$348 + t$345 + 8 * max( 0, kmax )
 1358.       t$354 = t$353 + t$345
 1358.       t$357 = t$356 + t$345
 1358.       call rg( kmax, kmax, gg(1, 1), eigvr(1), eigvi(1), matz, eigvc(1, 1), ier, eps, wk1(1), wk2(1) )
 1358.       if ( kmax > 0 ) then
 1358.          $I_L1358_124 = 0
 1358.          do
 1358.             col(1 + $I_L1358_124) = eigvr(1 + $I_L1358_124)
 1358.             soma = 0.0
 1358.             $I_L1358_104 = 0
 1358. !dir$ ivdep
 1358.             do
 1358.                soma = soma + eigvc(1 + $I_L1358_104, 1 + $I_L1358_124) * eigvc(1 + $I_L1358_104, 1 + $I_L1358_124)
 1358.                $I_L1358_104 = 1 + $I_L1358_104
 1358.                if ( $I_L1358_104 >= kmax ) exit
 1358.             enddo
 1358.             $soma_S16 = _recip_sqrt( soma )
 1358.             $I_L1358_106 = 0
 1358. !dir$ ivdep
 1358.             do
 1358.                eigvc(1 + $I_L1358_106, 1 + $I_L1358_124) = $soma_S16 * eigvc(1 + $I_L1358_106, 1 + $I_L1358_124)
 1358.                $I_L1358_106 = 1 + $I_L1358_106
 1358.                if ( $I_L1358_106 >= kmax ) exit
 1358.             enddo
 1358.             $I_L1358_124 = 1 + $I_L1358_124
 1358.             if ( $I_L1358_124 >= kmax ) exit
 1358.          enddo
 1358.          $I_L1358_126 = 0
 1358.          do
 1358.             $W3 = kmax
 1358.             $W4 = 1
 1358.             $Maxmin_x_W0 = _idamax( $W3, col(1), $W4 )
 1358.             $kkk_S19 = cvmg( $Maxmin_x_W0, 0, abs( col($Maxmin_x_W0) ) > -1.0e20 )
 1358.             dotpro(1 + $I_L1358_126) = col($kkk_S19)
 1358.             col($kkk_S19) = 0.0
 1358.             $I_L1358_108 = 0
 1358. !dir$ ivdep
 1358.             do
 1358.                vec(1 + $I_L1358_108, 1 + $I_L1358_126) = eigvc(1 + $I_L1358_108, $kkk_S19)
 1358.                $I_L1358_108 = 1 + $I_L1358_108
 1358.                if ( $I_L1358_108 >= kmax ) exit
 1358.             enddo
 1358.             $I_L1358_126 = 1 + $I_L1358_126
 1358.             if ( $I_L1358_126 >= kmax ) exit
 1358.          enddo
 1358.       endif
 1358.       _free( t$345 )
 1358.       eiggt(1, 1) = _copyout( vec )
 1358.       eigvc(1, 1) = _copyout( eigvc )
 1358.       gt(1, 1) = _copyout( gg )
 1362.       if ( kmax > 0 ) then
 1362.          $I_L1362_128 = 0
 1362.          do
 1363.             soma = 0.0
 1364.             $I_L1364_110 = 0
 1364. !dir$ ivdep
 1364.             do
 1365.                soma = soma + eigg(1 + $I_L1364_110, 1 + $I_L1362_128) * eiggt(1 + $I_L1364_110, 1 + $I_L1362_128)
 1366.                $I_L1364_110 = 1 + $I_L1364_110
 1364.                if ( $I_L1364_110 >= kmax ) exit
 1364.             enddo
 1367.             dotpro(1 + $I_L1362_128) = 1.0/soma
 1368.             $I_L1362_128 = 1 + $I_L1362_128
 1366.             if ( $I_L1362_128 >= kmax ) exit
 1366.          enddo
 1366.       endif
 1369.       $Unit_temp_O0 = nfnmi
 1369.       _uwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)eigg(+:( 1, t$77, 1 ), +:( 1, t$77, 1 )), 0x804060300000000L ), _iotype( (&)eiggt(+:( 1, t$77, 1 ), +:( 1, t$77, 1 )), 0x804060300000000L ), _iotype( (&)gh(+:( 1, t$77, 1 )), 0x804060300000000L ), _iotype( (&)dotpro(+:( 1, t$77, 1 )), 0x804060300000000L ), _iotype( (&)(tov%base_addr)(+:( tov%dim_1%LB, -1 + tov%dim_1%LB + tov%dim_1%EX, 1 ), 0), 0x804060300000000L ) ) )
 1370.       if ( rsettov /= .false. ) then
 1371.          $F_A38 = t$77
 1371.          if ( t$77 > 0 ) then
 1371.             $SC_tov_I11 = tov%dim_1%EX
 1371.             $SC_tov_I12 = tov%dim_1%LB
 1371.             $I_L1371_118 = 0
 1371. !dir$ ivdep
 1371.             do
 1371.                (tov%base_addr)($SC_tov_I12 + $I_L1371_118, 0) = to(1 + $I_L1371_118)
 1371.                $I_L1371_118 = 1 + $I_L1371_118
 1371.                if ( $I_L1371_118 >= $F_A38 ) exit
 1371.             enddo
 1371.          endif
 1371.       endif
 1322.       _free( t$237 )
 1373.       return
 1373.       end
 1373.       
 1380.       
 1380.       subroutine hormod( gh, eps )
 1380.       t$78 = mods
 1382.       t$263 = _zla( 0, mods )
 1380.       t$79 = mmax
 1404.       t$264 = _zla( 0, mmax )
 1404.       t$267 = 8 * _zla( 0, mmax )
 1405.       t$268 = 8 * ( 7 + 8 * _zla( 0, mmax ) ) / 8
 1405.       t$270 = t$268 + 8 * _zla( 0, mmax )
 1407.       t$271 = 8 * ( 7 + t$268 + 8 * _zla( 0, mmax ) ) / 8
 1407.       t$273 = t$271 + 8 * _zla( 0, mmax )
 1380.       t$81 = ( 3 * ( 3 + 3 * mmax ) / 2 + 3 * mmax * ( 3 + 3 * mmax ) / 2 ) / 2
 1416.       t$274 = _zla( 0, t$81 )
 1416.       t$275 = 8 * ( 7 + t$271 + 8 * _zla( 0, mmax ) ) / 8
 1416.       t$277 = t$275 + 8 * _zla( 0, t$81 )
 1415.       t$278 = 8 * ( 7 + t$275 + 8 * _zla( 0, t$81 ) ) / 8
 1415.       t$280 = t$278 + 8 * _zla( 0, t$81 )
 1406.       t$281 = 8 * ( 7 + t$278 + 8 * _zla( 0, t$81 ) ) / 8
 1406.       t$283 = t$281 + 8 * _zla( 0, mmax )
 1408.       t$284 = 8 * ( 7 + t$281 + 8 * _zla( 0, mmax ) ) / 8
 1408.       t$286 = t$284 + 8 * _zla( 0, mmax )
 1380.       t$80 = ( 3 + 3 * mmax ) / 2
 1412.       t$287 = _zla( 0, t$80 )
 1412.       t$288 = 8 * ( 7 + t$284 + 8 * _zla( 0, mmax ) ) / 8
 1412.       t$290 = t$288 + 8 * _zla( 0, t$80 )
 1410.       t$291 = 8 * ( 7 + t$288 + 8 * _zla( 0, t$80 ) ) / 8
 1410.       t$293 = t$291 + 8 * _zla( 0, t$80 )
 1411.       t$294 = 8 * ( 7 + t$291 + 8 * _zla( 0, t$80 ) ) / 8
 1411.       t$296 = t$294 + 8 * _zla( 0, t$80 )
 1414.       t$297 = 8 * ( 7 + t$294 + 8 * _zla( 0, t$80 ) ) / 8
 1414.       t$299 = t$297 + 8 * _zla( 0, t$81 )
 1413.       t$300 = 8 * ( 7 + t$297 + 8 * _zla( 0, t$81 ) ) / 8
 1413.       t$302 = t$300 + 8 * _zla( 0, t$81 )
 1380.       t$303 = _zla( 0, mmax )
 1380.       t$304 = _zla( 0, mmax ) * _zla( 0, mmax )
 1409.       t$305 = 8 * ( 7 + t$300 + 8 * _zla( 0, t$81 ) ) / 8
 1409.       t$307 = t$305 + 8 * _zla( 0, mmax ) * _zla( 0, mmax )
 1380.       t$265 = int( _alloc( t$305 + 8 * _zla( 0, mmax ) * _zla( 0, mmax ) ), 8 )
 1404.       t$266 = t$265
 1405.       t$269 = t$268 + t$265
 1407.       t$272 = t$271 + t$265
 1416.       t$276 = t$275 + t$265
 1415.       t$279 = t$278 + t$265
 1406.       t$282 = t$281 + t$265
 1408.       t$285 = t$284 + t$265
 1412.       t$289 = t$288 + t$265
 1410.       t$292 = t$291 + t$265
 1411.       t$295 = t$294 + t$265
 1414.       t$298 = t$297 + t$265
 1413.       t$301 = t$300 + t$265
 1409.       t$306 = t$305 + t$265
 1424.       nxsy = 2 + -2 * mod( -1 + mmax, 2 ) + 3 * ( -1 + mmax + mod( -1 + mmax, 2 ) ) / 2
 1425.       nxas = 1 + -mod( -1 + mmax, 2 ) + 3 * ( -1 + mmax + mod( -1 + mmax, 2 ) ) / 2
 1426.       $t_S13 = mods
 1426.       if ( mods > 0 ) then
 1426.          $I_L1426_80 = 0
 1426.          do
 1427.             $t_S12 = mmax
 1427.             if ( mmax > 0 ) then
 1427.                $I_L1427_78 = 0
 1427.                do
 1430.                   nmd = mod( ( -1 + mmax + -$I_L1427_78 ), 2 )
 1431.                   lmax = ( -1 + mmax + mod( ( -1 + mmax + -$I_L1427_78 ), 2 ) + -$I_L1427_78 ) / 2
 1432.                   mmmax = 1 + ( -1 + mmax + mod( ( -1 + mmax + -$I_L1427_78 ), 2 ) + -$I_L1427_78 ) / 2 + -mod( ( -1 + mmax + -$I_L1427_78 ), 2 )
 1433.                   klmx = 1 + -mod( ( -1 + mmax + -$I_L1427_78 ), 2 ) + 2 * ( -1 + mmax + mod( ( -1 + mmax + -$I_L1427_78 ), 2 ) + -$I_L1427_78 ) / 2
 1434.                   nsy = ( 2 + -2 * mod( ( -1 + mmax + -$I_L1427_78 ), 2 ) + 3 * ( -1 + mmax + mod( ( -1 + mmax + -$I_L1427_78 ), 2 ) + -$I_L1427_78 ) / 2 )
 1435.                   nas = ( 1 + -mod( ( -1 + mmax + -$I_L1427_78 ), 2 ) + 3 * ( -1 + mmax + mod( ( -1 + mmax + -$I_L1427_78 ), 2 ) + -$I_L1427_78 ) / 2 )
 1437.                   if ( ( mmax + -$I_L1427_78 ) > 0 ) then
 1437.                      $I_L1437_52 = 0
 1437. !dir$ ivdep
 1437.                      do
 1438.                         $rn_S2 = real( $I_L1437_52, 8 ) + real( $I_L1427_78, 8 )
 1439.                         if ( ( real( $I_L1437_52, 8 ) + real( $I_L1427_78, 8 ) ) == 0.0 ) then
 1440.                            alfa(1 + $I_L1437_52) = 0.0
 1441.                            beta(1 + $I_L1437_52) = 0.0
 1442.                            gama(1 + $I_L1437_52) = 0.0
 1442.                         else
 1444.                            alfa(1 + $I_L1437_52) = ( 1.4584919999999999e-4 * 1.0/( $rn_S2 * ( 1.0 + $rn_S2 ) ) * real( $I_L1427_78, 8 ) )
 1445.                            beta(1 + $I_L1437_52) = ( 1.4584919999999999e-4 * 1.0/$rn_S2 ) * _sqrt( ( -( real( $I_L1427_78, 8 ) * real( $I_L1427_78, 8 ) ) + $rn_S2 * $rn_S2 ) * 1.0/( -1.0 + 4.0 * $rn_S2 * $rn_S2 ) * ( -1.0 + $rn_S2 * $rn_S2 ) )
 1447.                            gama(1 + $I_L1437_52) = 1.5698587127158556e-7 * _sqrt( $rn_S2 * gh(1 + $I_L1426_80) * ( 1.0 + $rn_S2 ) )
 1447.                         endif
 1449.                         $I_L1437_52 = 1 + $I_L1437_52
 1448.                         if ( $I_L1437_52 >= mmax + -$I_L1427_78 ) exit
 1448.                      enddo
 1448.                   endif
 1450.                   if ( $I_L1427_78 == 0 ) then
 1454.                      call symg0( nxsy, nsy, mmax, lmax, klmx, nmd, -1, ncuts, eps, 1.4584919999999999e-4, beta(1), gama(1), ws(1), sdg(1), dgl(1), xs(1), xx(1, 1) )
 1457.                      tm$428 = loc( xs(1) )
 1457.                      xx = _copyin( xs(1) )
 1457.                      tm$430 = loc( es(1) )
 1457.                      gg = _copyin( es(1) )
 1457.                      t$110 = nxsy
 1457.                      t$326 = max( 0, nxsy )
 1457.                      t$327 = max( 0, nxsy )
 1457.                      t$328 = max( 0, nxsy ) * max( 0, nxsy )
 1457.                      t$111 = ncuts
 1457.                      t$329 = max( 0, ncuts )
 1457.                      t$112 = nsy
 1457.                      t$330 = max( 0, ncuts )
 1457.                      t$331 = max( 0, nsy )
 1457.                      t$332 = max( 0, ncuts ) * max( 0, nsy )
 1457.                      $Unit_temp_O0 = nfnmi
 1457.                      $_IOitem_P0(0) = ncuts
 1457.                      $_IOitem_P0(1) = nsy
 1457.                      _uwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P0(:( 0, 1, 1 )), 0x804060200000000L ) ) )
 1457.                      if ( ncuts /= 0 ) then
 1457.                         $F_A33 = 1 + -1 + ncuts
 1457.                         if ( -1 + ncuts >= 0 ) then
 1457.                            $I_A1 = 0
 1457. !dir$ ivdep
 1457.                            do
 1457.                               wk(1 + $I_A1) = 0.0
 1457.                               $I_A1 = 1 + $I_A1
 1457.                               if ( $I_A1 >= $F_A33 ) exit
 1457.                            enddo
 1457.                         endif
 1457.                         $F_A34 = nsy
 1457.                         $F_A35 = ncuts
 1457.                         if ( and( -$F_A35, -$F_A34 ) < 0 ) then
 1457.                            $I_A2 = 0
 1457.                            do
 1457.                               $I_A1 = 0
 1457. !dir$ ivdep
 1457.                               do
 1457.                                  gg(1 + $I_A1, 1 + $I_A2) = 0.0
 1457.                                  $I_A1 = 1 + $I_A1
 1457.                                  if ( $I_A1 >= $F_A35 ) exit
 1457.                               enddo
 1457.                               $I_A2 = 1 + $I_A2
 1457.                               if ( $I_A2 >= $F_A34 ) exit
 1457.                            enddo
 1457.                         endif
 1457.                         if ( ncuts > 0 ) then
 1457.                            if ( nsy > 0 ) then
 1457.                               $I_L1457_74 = 0
 1457. !dir$ ivdep
 1457.                               do
 1457.                                  wk(1 + $I_L1457_74) = 1.0/ws(1 + $I_L1457_74)
 1457.                                  $I_L1457_74 = 1 + $I_L1457_74
 1457.                                  if ( $I_L1457_74 >= ncuts ) exit
 1457.                               enddo
 1457.                               $I_L1457_74 = 0
 1457.                               do
 1457.                                  $I_L1457_58 = 0
 1457. !dir$ ivdep
 1457.                                  do
 1457.                                     gg(1 + $I_L1457_74, 1 + $I_L1457_58) = xx(1 + $I_L1457_58, 1 + $I_L1457_74)
 1457.                                     $I_L1457_58 = 1 + $I_L1457_58
 1457.                                     if ( $I_L1457_58 >= nsy ) exit
 1457.                                  enddo
 1457.                                  $I_L1457_74 = 1 + $I_L1457_74
 1457.                                  if ( $I_L1457_74 >= ncuts ) exit
 1457.                               enddo
 1457.                            else
 1457.                               $I_L1457_66 = 0
 1457. !dir$ ivdep
 1457.                               do
 1457.                                  wk(1 + $I_L1457_66) = 1.0/ws(1 + $I_L1457_66)
 1457.                                  $I_L1457_66 = 1 + $I_L1457_66
 1457.                                  if ( $I_L1457_66 >= ncuts ) exit
 1457.                               enddo
 1457.                            endif
 1457.                         endif
 1457.                         $Unit_temp_O1 = nfnmi
 1457.                         _uwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)wk(+:( 1, ncuts, 1 )), 0x804060300000000L ), _iotype( (&)gg(+:( 1, ncuts, 1 ), +:( 1, nsy, 1 )), 0x804060300000000L ) ) )
 1457.                      endif
 1457.                      es(1) = _copyout( gg )
 1457.                      xs(1) = _copyout( xx )
 1462. !dir$ suppress beta(1)
 1462.                      t$780 = $_StaticDV_P4
 1462.                      t$780%base_addr = pointer to array[1] of real (kind=8)( loc( beta(1) ) )
 1462.                      t$780%header%el_len = 64
 1462.                      t$780%header%assoc = 1
 1462.                      t$780%header%ptr_alloc = 0
 1462.                      t$780%header%p_or_a = 0
 1462.                      t$780%header%a_contig = 1
 1462.                      t$780%header%n_dim = 1
 1462.                      t$780%header%orig_base = 0
 1462.                      t$780%header%orig_size = 0
 1462.                      t$780%header%n_codim = 0
 1462.                      t$780%header%dv_versn = 2
 1462.                      t$780%header%dv_smunit = 64
 1462.                      t$780%header%d_type = 0
 1462.                      t$780%header%n_params = 0
 1462.                      t$780%header%d_type_idx = 13
 1462.                      t$780%dim_1%LB = 1
 1462.                      t$780%dim_1%EX = _zla( 0, t$79 )
 1462.                      t$780%dim_1%SM = 1
 1462. !dir$ suppress gama(1)
 1462.                      t$781 = $_StaticDV_P5
 1462.                      t$781%base_addr = pointer to array[1] of real (kind=8)( loc( gama(1) ) )
 1462.                      t$781%header%el_len = 64
 1462.                      t$781%header%assoc = 1
 1462.                      t$781%header%ptr_alloc = 0
 1462.                      t$781%header%p_or_a = 0
 1462.                      t$781%header%a_contig = 1
 1462.                      t$781%header%n_dim = 1
 1462.                      t$781%header%orig_base = 0
 1462.                      t$781%header%orig_size = 0
 1462.                      t$781%header%n_codim = 0
 1462.                      t$781%header%dv_versn = 2
 1462.                      t$781%header%dv_smunit = 64
 1462.                      t$781%header%d_type = 0
 1462.                      t$781%header%n_params = 0
 1462.                      t$781%header%d_type_idx = 13
 1462.                      t$781%dim_1%LB = 1
 1462.                      t$781%dim_1%EX = _zla( 0, t$79 )
 1462.                      t$781%dim_1%SM = 1
 1463. !dir$ suppress wa(1)
 1463.                      t$782 = $_StaticDV_P6
 1463.                      t$782%base_addr = pointer to array[1] of real (kind=8)( loc( wa(1) ) )
 1463.                      t$782%header%el_len = 64
 1463.                      t$782%header%assoc = 1
 1463.                      t$782%header%ptr_alloc = 0
 1463.                      t$782%header%p_or_a = 0
 1463.                      t$782%header%a_contig = 1
 1463.                      t$782%header%n_dim = 1
 1463.                      t$782%header%orig_base = 0
 1463.                      t$782%header%orig_size = 0
 1463.                      t$782%header%n_codim = 0
 1463.                      t$782%header%dv_versn = 2
 1463.                      t$782%header%dv_smunit = 64
 1463.                      t$782%header%d_type = 0
 1463.                      t$782%header%n_params = 0
 1463.                      t$782%header%d_type_idx = 13
 1463.                      t$782%dim_1%LB = 1
 1463.                      t$782%dim_1%EX = _zla( 0, t$80 )
 1463.                      t$782%dim_1%SM = 1
 1463. !dir$ suppress sdg(1)
 1463.                      t$783 = $_StaticDV_P7
 1463.                      t$783%base_addr = pointer to array[1] of real (kind=8)( loc( sdg(1) ) )
 1463.                      t$783%header%el_len = 64
 1463.                      t$783%header%assoc = 1
 1463.                      t$783%header%ptr_alloc = 0
 1463.                      t$783%header%p_or_a = 0
 1463.                      t$783%header%a_contig = 1
 1463.                      t$783%header%n_dim = 1
 1463.                      t$783%header%orig_base = 0
 1463.                      t$783%header%orig_size = 0
 1463.                      t$783%header%n_codim = 0
 1463.                      t$783%header%dv_versn = 2
 1463.                      t$783%header%dv_smunit = 64
 1463.                      t$783%header%d_type = 0
 1463.                      t$783%header%n_params = 0
 1463.                      t$783%header%d_type_idx = 13
 1463.                      t$783%dim_1%LB = 1
 1463.                      t$783%dim_1%EX = _zla( 0, t$79 )
 1463.                      t$783%dim_1%SM = 1
 1463. !dir$ suppress dgl(1)
 1463.                      t$784 = $_StaticDV_P8
 1463.                      t$784%base_addr = pointer to array[1] of real (kind=8)( loc( dgl(1) ) )
 1463.                      t$784%header%el_len = 64
 1463.                      t$784%header%assoc = 1
 1463.                      t$784%header%ptr_alloc = 0
 1463.                      t$784%header%p_or_a = 0
 1463.                      t$784%header%a_contig = 1
 1463.                      t$784%header%n_dim = 1
 1463.                      t$784%header%orig_base = 0
 1463.                      t$784%header%orig_size = 0
 1463.                      t$784%header%n_codim = 0
 1463.                      t$784%header%dv_versn = 2
 1463.                      t$784%header%dv_smunit = 64
 1463.                      t$784%header%d_type = 0
 1463.                      t$784%header%n_params = 0
 1463.                      t$784%header%d_type_idx = 13
 1463.                      t$784%dim_1%LB = 1
 1463.                      t$784%dim_1%EX = _zla( 0, t$79 )
 1463.                      t$784%dim_1%SM = 1
 1461.                      call asyg0( nxas, nas, mmax, lmax, klmx, mmmax, nmd, -1, ncuta, eps, 1.4584919999999999e-4, t$780, t$781, t$782, t$783, t$784, xa(1), xx(1, 1) )
 1464.                      tm$444 = loc( xa(1) )
 1464.                      xx = _copyin( xa(1) )
 1464.                      tm$446 = loc( ea(1) )
 1464.                      gg = _copyin( ea(1) )
 1464.                      t$110 = nxas
 1464.                      t$326 = max( 0, nxas )
 1464.                      t$327 = max( 0, nxas )
 1464.                      t$328 = max( 0, nxas ) * max( 0, nxas )
 1464.                      t$111 = ncuta
 1464.                      t$329 = max( 0, ncuta )
 1464.                      t$112 = nas
 1464.                      t$330 = max( 0, ncuta )
 1464.                      t$331 = max( 0, nas )
 1464.                      t$332 = max( 0, ncuta ) * max( 0, nas )
 1464.                      $Unit_temp_O2 = nfnmi
 1464.                      $_IOitem_P1(0) = ncuta
 1464.                      $_IOitem_P1(1) = nas
 1464.                      _uwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P1(:( 0, 1, 1 )), 0x804060200000000L ) ) )
 1464.                      if ( ncuta /= 0 ) then
 1464.                         $F_A36 = 1 + -1 + ncuta
 1464.                         if ( -1 + ncuta >= 0 ) then
 1464.                            $I_A1 = 0
 1464. !dir$ ivdep
 1464.                            do
 1464.                               wk(1 + $I_A1) = 0.0
 1464.                               $I_A1 = 1 + $I_A1
 1464.                               if ( $I_A1 >= $F_A36 ) exit
 1464.                            enddo
 1464.                         endif
 1464.                         $F_A37 = nas
 1464.                         $F_A38 = ncuta
 1464.                         if ( and( -$F_A38, -$F_A37 ) < 0 ) then
 1464.                            $I_A2 = 0
 1464.                            do
 1464.                               $I_A1 = 0
 1464. !dir$ ivdep
 1464.                               do
 1464.                                  gg(1 + $I_A1, 1 + $I_A2) = 0.0
 1464.                                  $I_A1 = 1 + $I_A1
 1464.                                  if ( $I_A1 >= $F_A38 ) exit
 1464.                               enddo
 1464.                               $I_A2 = 1 + $I_A2
 1464.                               if ( $I_A2 >= $F_A37 ) exit
 1464.                            enddo
 1464.                         endif
 1464.                         if ( ncuta > 0 ) then
 1464.                            if ( nas > 0 ) then
 1464.                               $I_L1464_76 = 0
 1464. !dir$ ivdep
 1464.                               do
 1464.                                  wk(1 + $I_L1464_76) = 1.0/wa(1 + $I_L1464_76)
 1464.                                  $I_L1464_76 = 1 + $I_L1464_76
 1464.                                  if ( $I_L1464_76 >= ncuta ) exit
 1464.                               enddo
 1464.                               $I_L1464_76 = 0
 1464.                               do
 1464.                                  $I_L1464_60 = 0
 1464. !dir$ ivdep
 1464.                                  do
 1464.                                     gg(1 + $I_L1464_76, 1 + $I_L1464_60) = xx(1 + $I_L1464_60, 1 + $I_L1464_76)
 1464.                                     $I_L1464_60 = 1 + $I_L1464_60
 1464.                                     if ( $I_L1464_60 >= nas ) exit
 1464.                                  enddo
 1464.                                  $I_L1464_76 = 1 + $I_L1464_76
 1464.                                  if ( $I_L1464_76 >= ncuta ) exit
 1464.                               enddo
 1464.                            else
 1464.                               $I_L1464_68 = 0
 1464. !dir$ ivdep
 1464.                               do
 1464.                                  wk(1 + $I_L1464_68) = 1.0/wa(1 + $I_L1464_68)
 1464.                                  $I_L1464_68 = 1 + $I_L1464_68
 1464.                                  if ( $I_L1464_68 >= ncuta ) exit
 1464.                               enddo
 1464.                            endif
 1464.                         endif
 1464.                         $Unit_temp_O3 = nfnmi
 1464.                         _uwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)wk(+:( 1, ncuta, 1 )), 0x804060300000000L ), _iotype( (&)gg(+:( 1, ncuta, 1 ), +:( 1, nas, 1 )), 0x804060300000000L ) ) )
 1464.                      endif
 1464.                      ea(1) = _copyout( gg )
 1464.                      xa(1) = _copyout( xx )
 1464.                   else
 1469.                      call symrg( nxsy, nsy, lmax, mmmax, nmd, -1, ncuts, eps, 1.4584919999999999e-4, percut, alfa(1), beta(1), gama(1), ws(1), wk(1), es(1), xs(1) )
 1472.                      tm$459 = loc( xs(1) )
 1472.                      xx = _copyin( xs(1) )
 1472.                      tm$461 = loc( es(1) )
 1472.                      gg = _copyin( es(1) )
 1472.                      t$110 = nxsy
 1472.                      t$326 = max( 0, nxsy )
 1472.                      t$327 = max( 0, nxsy )
 1472.                      t$328 = max( 0, nxsy ) * max( 0, nxsy )
 1472.                      t$111 = ncuts
 1472.                      t$329 = max( 0, ncuts )
 1472.                      t$112 = nsy
 1472.                      t$330 = max( 0, ncuts )
 1472.                      t$331 = max( 0, nsy )
 1472.                      t$332 = max( 0, ncuts ) * max( 0, nsy )
 1472.                      $Unit_temp_O4 = nfnmi
 1472.                      $_IOitem_P2(0) = ncuts
 1472.                      $_IOitem_P2(1) = nsy
 1472.                      _uwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P2(:( 0, 1, 1 )), 0x804060200000000L ) ) )
 1472.                      if ( ncuts /= 0 ) then
 1472.                         $F_A39 = 1 + -1 + ncuts
 1472.                         if ( -1 + ncuts >= 0 ) then
 1472.                            $I_A1 = 0
 1472. !dir$ ivdep
 1472.                            do
 1472.                               wk(1 + $I_A1) = 0.0
 1472.                               $I_A1 = 1 + $I_A1
 1472.                               if ( $I_A1 >= $F_A39 ) exit
 1472.                            enddo
 1472.                         endif
 1472.                         $F_A40 = nsy
 1472.                         $F_A41 = ncuts
 1472.                         if ( and( -$F_A41, -$F_A40 ) < 0 ) then
 1472.                            $I_A2 = 0
 1472.                            do
 1472.                               $I_A1 = 0
 1472. !dir$ ivdep
 1472.                               do
 1472.                                  gg(1 + $I_A1, 1 + $I_A2) = 0.0
 1472.                                  $I_A1 = 1 + $I_A1
 1472.                                  if ( $I_A1 >= $F_A41 ) exit
 1472.                               enddo
 1472.                               $I_A2 = 1 + $I_A2
 1472.                               if ( $I_A2 >= $F_A40 ) exit
 1472.                            enddo
 1472.                         endif
 1472.                         if ( ncuts > 0 ) then
 1472.                            if ( nsy > 0 ) then
 1472.                               $I_L1472_70 = 0
 1472. !dir$ ivdep
 1472.                               do
 1472.                                  wk(1 + $I_L1472_70) = 1.0/ws(1 + $I_L1472_70)
 1472.                                  $I_L1472_70 = 1 + $I_L1472_70
 1472.                                  if ( $I_L1472_70 >= ncuts ) exit
 1472.                               enddo
 1472.                               $I_L1472_70 = 0
 1472.                               do
 1472.                                  $I_L1472_54 = 0
 1472. !dir$ ivdep
 1472.                                  do
 1472.                                     gg(1 + $I_L1472_70, 1 + $I_L1472_54) = xx(1 + $I_L1472_54, 1 + $I_L1472_70)
 1472.                                     $I_L1472_54 = 1 + $I_L1472_54
 1472.                                     if ( $I_L1472_54 >= nsy ) exit
 1472.                                  enddo
 1472.                                  $I_L1472_70 = 1 + $I_L1472_70
 1472.                                  if ( $I_L1472_70 >= ncuts ) exit
 1472.                               enddo
 1472.                            else
 1472.                               $I_L1472_62 = 0
 1472. !dir$ ivdep
 1472.                               do
 1472.                                  wk(1 + $I_L1472_62) = 1.0/ws(1 + $I_L1472_62)
 1472.                                  $I_L1472_62 = 1 + $I_L1472_62
 1472.                                  if ( $I_L1472_62 >= ncuts ) exit
 1472.                               enddo
 1472.                            endif
 1472.                         endif
 1472.                         $Unit_temp_O5 = nfnmi
 1472.                         _uwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)wk(+:( 1, ncuts, 1 )), 0x804060300000000L ), _iotype( (&)gg(+:( 1, ncuts, 1 ), +:( 1, nsy, 1 )), 0x804060300000000L ) ) )
 1472.                      endif
 1472.                      es(1) = _copyout( gg )
 1472.                      xs(1) = _copyout( xx )
 1476.                      call asyrg( nxas, nas, lmax, mmmax, nmd, -1, ncuta, eps, 1.4584919999999999e-4, percut, alfa(1), beta(1), gama(1), wa(1), wk(1), ea(1), xa(1) )
 1479.                      tm$474 = loc( xa(1) )
 1479.                      xx = _copyin( xa(1) )
 1479.                      tm$476 = loc( ea(1) )
 1479.                      gg = _copyin( ea(1) )
 1479.                      t$110 = nxas
 1479.                      t$326 = max( 0, nxas )
 1479.                      t$327 = max( 0, nxas )
 1479.                      t$328 = max( 0, nxas ) * max( 0, nxas )
 1479.                      t$111 = ncuta
 1479.                      t$329 = max( 0, ncuta )
 1479.                      t$112 = nas
 1479.                      t$330 = max( 0, ncuta )
 1479.                      t$331 = max( 0, nas )
 1479.                      t$332 = max( 0, ncuta ) * max( 0, nas )
 1479.                      $Unit_temp_O6 = nfnmi
 1479.                      $_IOitem_P3(0) = ncuta
 1479.                      $_IOitem_P3(1) = nas
 1479.                      _uwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P3(:( 0, 1, 1 )), 0x804060200000000L ) ) )
 1479.                      if ( ncuta /= 0 ) then
 1479.                         $F_A42 = 1 + -1 + ncuta
 1479.                         if ( -1 + ncuta >= 0 ) then
 1479.                            $I_A1 = 0
 1479. !dir$ ivdep
 1479.                            do
 1479.                               wk(1 + $I_A1) = 0.0
 1479.                               $I_A1 = 1 + $I_A1
 1479.                               if ( $I_A1 >= $F_A42 ) exit
 1479.                            enddo
 1479.                         endif
 1479.                         $F_A43 = nas
 1479.                         $F_A44 = ncuta
 1479.                         if ( and( -$F_A44, -$F_A43 ) < 0 ) then
 1479.                            $I_A2 = 0
 1479.                            do
 1479.                               $I_A1 = 0
 1479. !dir$ ivdep
 1479.                               do
 1479.                                  gg(1 + $I_A1, 1 + $I_A2) = 0.0
 1479.                                  $I_A1 = 1 + $I_A1
 1479.                                  if ( $I_A1 >= $F_A44 ) exit
 1479.                               enddo
 1479.                               $I_A2 = 1 + $I_A2
 1479.                               if ( $I_A2 >= $F_A43 ) exit
 1479.                            enddo
 1479.                         endif
 1479.                         if ( ncuta > 0 ) then
 1479.                            if ( nas > 0 ) then
 1479.                               $I_L1479_72 = 0
 1479. !dir$ ivdep
 1479.                               do
 1479.                                  wk(1 + $I_L1479_72) = 1.0/wa(1 + $I_L1479_72)
 1479.                                  $I_L1479_72 = 1 + $I_L1479_72
 1479.                                  if ( $I_L1479_72 >= ncuta ) exit
 1479.                               enddo
 1479.                               $I_L1479_72 = 0
 1479.                               do
 1479.                                  $I_L1479_56 = 0
 1479. !dir$ ivdep
 1479.                                  do
 1479.                                     gg(1 + $I_L1479_72, 1 + $I_L1479_56) = xx(1 + $I_L1479_56, 1 + $I_L1479_72)
 1479.                                     $I_L1479_56 = 1 + $I_L1479_56
 1479.                                     if ( $I_L1479_56 >= nas ) exit
 1479.                                  enddo
 1479.                                  $I_L1479_72 = 1 + $I_L1479_72
 1479.                                  if ( $I_L1479_72 >= ncuta ) exit
 1479.                               enddo
 1479.                            else
 1479.                               $I_L1479_64 = 0
 1479. !dir$ ivdep
 1479.                               do
 1479.                                  wk(1 + $I_L1479_64) = 1.0/wa(1 + $I_L1479_64)
 1479.                                  $I_L1479_64 = 1 + $I_L1479_64
 1479.                                  if ( $I_L1479_64 >= ncuta ) exit
 1479.                               enddo
 1479.                            endif
 1479.                         endif
 1479.                         $Unit_temp_O7 = nfnmi
 1479.                         _uwrite( _clist( 0, 0, 3, $Unit_temp_O7, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)wk(+:( 1, ncuta, 1 )), 0x804060300000000L ), _iotype( (&)gg(+:( 1, ncuta, 1 ), +:( 1, nas, 1 )), 0x804060300000000L ) ) )
 1479.                      endif
 1479.                      ea(1) = _copyout( gg )
 1479.                      xa(1) = _copyout( xx )
 1479.                   endif
 1481.                   $I_L1427_78 = 1 + $I_L1427_78
 1480.                   if ( $I_L1427_78 >= $t_S12 ) exit
 1480.                enddo
 1480.             endif
 1482.             $I_L1426_80 = 1 + $I_L1426_80
 1481.             if ( $I_L1426_80 >= $t_S13 ) exit
 1481.          enddo
 1481.       endif
 1380.       _free( t$265 )
 1483.       return
 1483.       end
 1483.       
 1603.       
 1603.       subroutine asyg0( nxas, nas, nend1, lmax, klmx, mmax, nmd, ipr, ncuta, eps, twomg, beta, gama, wa, sdg, dgl, xa, xx )
 1490.       beta%dim_1%LB = 1
 1490.       gama%dim_1%LB = 1
 1490.       wa%dim_1%LB = 1
 1490.       sdg%dim_1%LB = 1
 1490.       dgl%dim_1%LB = 1
 1490.       t$82 = nxas
 1508.       t$308 = _zla( 0, nxas )
 1490.       t$309 = _zla( 0, nxas )
 1490.       t$310 = _zla( 0, nxas )
 1490.       t$83 = nend1
 1509.       t$311 = _zla( 0, nend1 )
 1490.       t$312 = _zla( 0, nend1 )
 1490.       t$313 = _zla( 0, nend1 )
 1524.       (sdg%base_addr)(1, 0) = (beta%base_addr)(1, 0) * (beta%base_addr)(2, 0)
 1525.       (dgl%base_addr)(1, 0) = (gama%base_addr)(2, 0) * (gama%base_addr)(2, 0) + (beta%base_addr)(2, 0) * (beta%base_addr)(2, 0) + (beta%base_addr)(3, 0) * (beta%base_addr)(3, 0)
 1528.       if ( -3 + lmax >= 0 ) then
 1531.          $SC_gama_I5 = gama%dim_1%SM
 1531.          $SC_gama_I4 = gama%dim_1%EX
 1531.          $SC_dgl_I7 = dgl%dim_1%SM
 1531.          $SC_dgl_I6 = dgl%dim_1%EX
 1530.          $SC_beta_I1 = beta%dim_1%SM
 1530.          $SC_beta_I0 = beta%dim_1%EX
 1530.          $SC_sdg_I3 = sdg%dim_1%SM
 1530.          $SC_sdg_I2 = sdg%dim_1%EX
 1528.          $I_L1528_116 = 0
 1528. !dir$ ivdep
 1528.          do
 1530.             (sdg%base_addr)(2 + $I_L1528_116, 0) = (beta%base_addr)(4 + 2 * $I_L1528_116, 0) * (beta%base_addr)(3 + 2 * $I_L1528_116, 0)
 1531.             (dgl%base_addr)(2 + $I_L1528_116, 0) = (beta%base_addr)(4 + 2 * $I_L1528_116, 0) * (beta%base_addr)(4 + 2 * $I_L1528_116, 0) + (gama%base_addr)(4 + 2 * $I_L1528_116, 0) * (gama%base_addr)(4 + 2 * $I_L1528_116, 0) + (beta%base_addr)(5 + 2 * $I_L1528_116, 0) * (beta%base_addr)(5 + 2 * $I_L1528_116, 0)
 1533.             $I_L1528_116 = 1 + $I_L1528_116
 1528.             if ( $I_L1528_116 >= -2 + lmax ) exit
 1528.          enddo
 1528.       endif
 1534.       nmx = lmax
 1537.       (sdg%base_addr)(lmax, 0) = (beta%base_addr)(2 * lmax, 0) * (beta%base_addr)(-1 + 2 * lmax, 0)
 1538.       if ( nmd == 0 ) then
 1539.          (dgl%base_addr)(lmax, 0) = (beta%base_addr)(2 * lmax, 0) * (beta%base_addr)(2 * lmax, 0) + (gama%base_addr)(2 * lmax, 0) * (gama%base_addr)(2 * lmax, 0) + (beta%base_addr)(1 + 2 * lmax, 0) * (beta%base_addr)(1 + 2 * lmax, 0)
 1539.       else
 1542.          (dgl%base_addr)(lmax, 0) = (gama%base_addr)(2 * lmax, 0) * (gama%base_addr)(2 * lmax, 0) + (beta%base_addr)(2 * lmax, 0) * (beta%base_addr)(2 * lmax, 0)
 1542.       endif
 1545.       if ( ipr > 0 ) then
 1546.          $Unit_temp_O0 = nfprt
 1546.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1547.          $Unit_temp_O1 = nfprt
 1547.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' sdg:', 0x800600000000L ) ) )
 1548.          $Unit_temp_O2 = nfprt
 1548.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O2, Null_Arg, Null_Arg, t$85,  _substr(t$84,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1548.          if ( lmax > 0 ) then
 1548.             $I_L1548_118 = 0
 1548.             do
 1548.                if ( ( ( 1 + $I_L1548_118 ) <= 0 .or. ( 1 + $I_L1548_118 ) > sdg%dim_1%EX ) /= .false. ) then
 1548.                    _substr(t$792,1,17) = 'NonLinearNMI.f90'
 1548.                    _substr(t$793,1,4) = 'SDG'
 1548.                   t$794 = sdg%dim_1%EX
 1548.                   t$795 = 1 + $I_L1548_118
 1548.                   call _bounds_error(  _substr(t$792,1,17), 2048,  _substr(t$793,1,4), 1, 1, t$794, t$795, t$791 )
 1548.                endif
 1548.                $Unit_temp_O3 = nfprt
 1548.                $IOitem_O4 = (sdg%base_addr)(1 + $I_L1548_118, 0)
 1548.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$85,  _substr(t$84,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O4, 0x804060300000000L ) ) )
 1548.                $I_L1548_118 = 1 + $I_L1548_118
 1548.                if ( $I_L1548_118 >= lmax ) exit
 1548.             enddo
 1548.          endif
 1548.          $Unit_temp_O5 = nfprt
 1548.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O5, Null_Arg, Null_Arg, t$85,  _substr(t$84,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1549.          $Unit_temp_O6 = nfprt
 1549.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' dga:', 0x800600000000L ) ) )
 1550.          $Unit_temp_O7 = nfprt
 1550.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O7, Null_Arg, Null_Arg, t$87,  _substr(t$86,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1550.          if ( lmax > 0 ) then
 1550.             $I_L1550_120 = 0
 1550.             do
 1550.                if ( ( ( 1 + $I_L1550_120 ) <= 0 .or. ( 1 + $I_L1550_120 ) > dgl%dim_1%EX ) /= .false. ) then
 1550.                    _substr(t$800,1,17) = 'NonLinearNMI.f90'
 1550.                    _substr(t$801,1,4) = 'DGL'
 1550.                   t$794 = dgl%dim_1%EX
 1550.                   t$795 = 1 + $I_L1550_120
 1550.                   call _bounds_error(  _substr(t$800,1,17), 2050,  _substr(t$801,1,4), 1, 1, t$794, t$795, t$799 )
 1550.                endif
 1550.                $Unit_temp_O8 = nfprt
 1550.                $IOitem_O9 = (dgl%base_addr)(1 + $I_L1550_120, 0)
 1550.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O8, Null_Arg, Null_Arg, t$87,  _substr(t$86,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O9, 0x804060300000000L ) ) )
 1550.                $I_L1550_120 = 1 + $I_L1550_120
 1550.                if ( $I_L1550_120 >= lmax ) exit
 1550.             enddo
 1550.          endif
 1550.          $Unit_temp_O10 = nfprt
 1550.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O10, Null_Arg, Null_Arg, t$87,  _substr(t$86,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1550.       endif
 1553.       t$108 = nend1
 1553.       t$320 = max( 0, nend1 )
 1553.       t$321 = max( 0, nend1 )
 1553.       t$322 = max( 0, nend1 )
 1553.       if ( lmax > 0 ) then
 1553.          $I_L1553_162 = 0
 1553.          do
 1553.             $I_L1553_146 = 0
 1553. !dir$ ivdep
 1553.             do
 1553.                xx(1 + $I_L1553_146, 1 + $I_L1553_162) = 0.0
 1553.                $I_L1553_146 = 1 + $I_L1553_146
 1553.                if ( $I_L1553_146 >= lmax ) exit
 1553.             enddo
 1553.             $I_L1553_162 = 1 + $I_L1553_162
 1553.             if ( $I_L1553_162 >= lmax ) exit
 1553.          enddo
 1553.          $I_L1553_148 = 0
 1553. !dir$ ivdep
 1553.          do
 1553.             xx(1 + $I_L1553_148, 1 + $I_L1553_148) = 7.0710678118654746e-1
 1553.             $I_L1553_148 = 1 + $I_L1553_148
 1553.             if ( $I_L1553_148 >= lmax ) exit
 1553.          enddo
 1553.       endif
 1554.       t$803 = 0
 1554.       t$806 = 0
 1554.       if ( dgl%header%a_contig == 1 ) then
 1554. !dir$ suppress (dgl%base_addr)(1, 0)
 1554.          t$802 = loc( (dgl%base_addr)(1, 0) )
 1554.       else
 1554.          t$803 = dgl%dim_1%EX
 1554.          t$806 = int( _alloc( max( 0, 8 * max( 0, dgl%dim_1%EX ) ) ), 8 )
 1554.          $F_A33 = dgl%dim_1%EX
 1554.          if ( dgl%dim_1%EX > 0 ) then
 1554.             $SC_dgl_I27 = dgl%dim_1%SM
 1554.             $SC_dgl_I26 = dgl%dim_1%EX
 1554.             $SC_dgl_I28 = dgl%dim_1%LB
 1554.             $I_L1554_138 = 0
 1554. !dir$ ivdep
 1554.             do
 1554.                t$805(1 + $I_L1554_138) = (dgl%base_addr)(1 + $I_L1554_138, 0)
 1554.                $I_L1554_138 = 1 + $I_L1554_138
 1554.                if ( $I_L1554_138 >= $F_A33 ) exit
 1554.             enddo
 1554.          endif
 1554. !dir$ suppress t$805
 1554.          t$802 = loc( t$805 )
 1554.       endif
 1554.       t$808 = 0
 1554.       t$811 = 0
 1554.       if ( sdg%header%a_contig == 1 ) then
 1554. !dir$ suppress (sdg%base_addr)(1, 0)
 1554.          t$807 = loc( (sdg%base_addr)(1, 0) )
 1554.       else
 1554.          t$808 = sdg%dim_1%EX
 1554.          t$811 = int( _alloc( max( 0, 8 * max( 0, sdg%dim_1%EX ) ) ), 8 )
 1554.          $F_A34 = sdg%dim_1%EX
 1554.          if ( sdg%dim_1%EX > 0 ) then
 1554.             $SC_sdg_I30 = sdg%dim_1%SM
 1554.             $SC_sdg_I29 = sdg%dim_1%EX
 1554.             $SC_sdg_I31 = sdg%dim_1%LB
 1554.             $I_L1554_140 = 0
 1554. !dir$ ivdep
 1554.             do
 1554.                t$810(1 + $I_L1554_140) = (sdg%base_addr)(1 + $I_L1554_140, 0)
 1554.                $I_L1554_140 = 1 + $I_L1554_140
 1554.                if ( $I_L1554_140 >= $F_A34 ) exit
 1554.             enddo
 1554.          endif
 1554. !dir$ suppress t$810
 1554.          t$807 = loc( t$810 )
 1554.       endif
 1554.       call tql2_i( nend1, nmx, t$802, t$807, xx(1, 1), eps, ierr )
 1554.       if ( sdg%header%a_contig /= 1 ) then
 1554.          $F_A35 = t$808
 1554.          if ( t$808 > 0 ) then
 1554.             $SC_sdg_I30 = sdg%dim_1%SM
 1554.             $SC_sdg_I29 = sdg%dim_1%EX
 1554.             $SC_sdg_I31 = sdg%dim_1%LB
 1554.             $I_L1554_142 = 0
 1554. !dir$ ivdep
 1554.             do
 1554.                (sdg%base_addr)(1 + $I_L1554_142, 0) = t$810(1 + $I_L1554_142)
 1554.                $I_L1554_142 = 1 + $I_L1554_142
 1554.                if ( $I_L1554_142 >= $F_A35 ) exit
 1554.             enddo
 1554.          endif
 1554.          _free( t$811 )
 1554.       endif
 1554.       if ( dgl%header%a_contig /= 1 ) then
 1554.          $F_A36 = t$803
 1554.          if ( t$803 > 0 ) then
 1554.             $SC_dgl_I27 = dgl%dim_1%SM
 1554.             $SC_dgl_I26 = dgl%dim_1%EX
 1554.             $SC_dgl_I28 = dgl%dim_1%LB
 1554.             $I_L1554_144 = 0
 1554. !dir$ ivdep
 1554.             do
 1554.                (dgl%base_addr)(1 + $I_L1554_144, 0) = t$805(1 + $I_L1554_144)
 1554.                $I_L1554_144 = 1 + $I_L1554_144
 1554.                if ( $I_L1554_144 >= $F_A36 ) exit
 1554.             enddo
 1554.          endif
 1554.          _free( t$806 )
 1554.       endif
 1556.       if ( nmx > 0 ) then
 1564.          $SC_gama_I11 = (gama%base_addr)(2, 0)
 1558.          $SC_wa_I10 = wa%dim_1%SM
 1558.          $SC_wa_I9 = wa%dim_1%EX
 1564.          $SC_gama_I5 = gama%dim_1%SM
 1564.          $SC_gama_I4 = gama%dim_1%EX
 1558.          $SC_dgl_I7 = dgl%dim_1%SM
 1558.          $SC_dgl_I6 = dgl%dim_1%EX
 1568.          $SC_beta_I1 = beta%dim_1%SM
 1568.          $SC_beta_I0 = beta%dim_1%EX
 1558.          $SC_dgl_I8 = dgl%dim_1%LB
 1566.          if ( -2 + nmx >= 0 ) then
 1556.             $I_L1556_150 = 0
 1556. !dir$ ivdep
 1556.             do
 1558.                $wa_WR0_R0 = -_sqrt( (dgl%base_addr)(1 + $I_L1556_150, 0) )
 1558.                (wa%base_addr)(1 + 2 * $I_L1556_150, 0) = $wa_WR0_R0
 1559.                (wa%base_addr)(2 + 2 * $I_L1556_150, 0) = _sqrt( (dgl%base_addr)(1 + $I_L1556_150, 0) )
 1560.                xa(1, 1 + 2 * $I_L1556_150) = 0.0
 1561.                xa(1, 2 + 2 * $I_L1556_150) = 0.0
 1562.                xa(1 + mmax, 1 + 2 * $I_L1556_150) = xx(1, 1 + $I_L1556_150)
 1563.                xa(1 + mmax, 2 + 2 * $I_L1556_150) = xa(1 + mmax, 1 + 2 * $I_L1556_150)
 1564.                xa(1 + klmx, 1 + 2 * $I_L1556_150) = ( xx(1, 1 + $I_L1556_150) * $SC_gama_I11 * 1.0/$wa_WR0_R0 )
 1565.                xa(1 + klmx, 2 + 2 * $I_L1556_150) = -xa(1 + klmx, 1 + 2 * $I_L1556_150)
 1581.                $I_L1556_150 = 1 + $I_L1556_150
 1580.                if ( $I_L1556_150 >= nmx ) exit
 1580.             enddo
 1556.             $I_L1556_164 = 0
 1556.             do
 1566.                $SCA_wa_I25 = (wa%base_addr)(1 + 2 * $I_L1556_164, 0)
 1566.                $I_L1566_152 = 0
 1566.                $CSVL_V0 = cvmg( ( klmx + -mmax ), cvmg( klmx, cvmg( mmax, 2, and( mmax > 0, and( mmax <= 2, mmax <= -2 + nmx ) ) ), and( klmx > 0, and( klmx <= cvmg( mmax, 2, and( mmax > 0, and( mmax <= 2, mmax <= -2 + nmx ) ) ), klmx <= -2 + nmx ) ) ), and( klmx + -mmax > 0, and( ( klmx + -mmax ) <= cvmg( klmx, cvmg( mmax, 2, and( mmax > 0, and( mmax <= 2, mmax <= -2 + nmx ) ) ), and( klmx > 0, and( klmx <= cvmg( mmax, 2, and( mmax > 0, and( mmax <= 2, mmax <= -2 + nmx ) ) ), klmx <= -2 + nmx ) ) ), ( klmx + -mmax ) <= -2 + nmx ) ) )
 1566.                if ( $CSVL_V0 <= 4 ) then
 1566.                   do
 1568.                      xa(2 + $I_L1566_152, 1 + 2 * $I_L1556_164) = ( 1.0/$SCA_wa_I25 * ( (beta%base_addr)(3 + 2 * $I_L1566_152, 0) * xx(1 + $I_L1566_152, 1 + $I_L1556_164) + (beta%base_addr)(4 + 2 * $I_L1566_152, 0) * xx(2 + $I_L1566_152, 1 + $I_L1556_164) ) )
 1569.                      xa(2 + $I_L1566_152, 2 + 2 * $I_L1556_164) = -xa(2 + $I_L1566_152, 1 + 2 * $I_L1556_164)
 1570.                      xa(2 + mmax + $I_L1566_152, 1 + 2 * $I_L1556_164) = xx(2 + $I_L1566_152, 1 + $I_L1556_164)
 1571.                      xa(2 + mmax + $I_L1566_152, 2 + 2 * $I_L1556_164) = xa(2 + mmax + $I_L1566_152, 1 + 2 * $I_L1556_164)
 1572.                      xa(2 + klmx + $I_L1566_152, 1 + 2 * $I_L1556_164) = ( xx(2 + $I_L1566_152, 1 + $I_L1556_164) * (gama%base_addr)(4 + 2 * $I_L1566_152, 0) * 1.0/$SCA_wa_I25 )
 1573.                      $LD_SPLT_P0 = xa(2 + klmx + $I_L1566_152, 1 + 2 * $I_L1556_164)
 1573.                      xa(2 + klmx + $I_L1566_152, 2 + 2 * $I_L1556_164) = -$LD_SPLT_P0
 1574.                      $I_L1566_152 = 1 + $I_L1566_152
 1566.                      if ( $I_L1566_152 >= -1 + nmx ) exit
 1566.                   enddo
 1566.                else
 1566. !dir$ ivdep safevl = $CSVL_V0 !   Guaranteed minimum :: 4
 1566.                   do
 1568.                      xa(2 + $I_L1566_152, 1 + 2 * $I_L1556_164) = ( 1.0/$SCA_wa_I25 * ( (beta%base_addr)(3 + 2 * $I_L1566_152, 0) * xx(1 + $I_L1566_152, 1 + $I_L1556_164) + (beta%base_addr)(4 + 2 * $I_L1566_152, 0) * xx(2 + $I_L1566_152, 1 + $I_L1556_164) ) )
 1569.                      xa(2 + $I_L1566_152, 2 + 2 * $I_L1556_164) = -xa(2 + $I_L1566_152, 1 + 2 * $I_L1556_164)
 1570.                      xa(2 + mmax + $I_L1566_152, 1 + 2 * $I_L1556_164) = xx(2 + $I_L1566_152, 1 + $I_L1556_164)
 1571.                      xa(2 + mmax + $I_L1566_152, 2 + 2 * $I_L1556_164) = xa(2 + mmax + $I_L1566_152, 1 + 2 * $I_L1556_164)
 1572.                      xa(2 + klmx + $I_L1566_152, 1 + 2 * $I_L1556_164) = ( xx(2 + $I_L1566_152, 1 + $I_L1556_164) * (gama%base_addr)(4 + 2 * $I_L1566_152, 0) * 1.0/$SCA_wa_I25 )
 1573.                      $LD_SPLT_P0 = xa(2 + klmx + $I_L1566_152, 1 + 2 * $I_L1556_164)
 1573.                      xa(2 + klmx + $I_L1566_152, 2 + 2 * $I_L1556_164) = -$LD_SPLT_P0
 1574.                      $I_L1566_152 = 1 + $I_L1566_152
 1566.                      if ( $I_L1566_152 >= -1 + nmx ) exit
 1566.                   enddo
 1566.                endif
 1581.                $I_L1556_164 = 1 + $I_L1556_164
 1580.                if ( $I_L1556_164 >= nmx ) exit
 1580.             enddo
 1577.             if ( nmd == 0 ) then
 1578.                $SC_beta_I32 = (beta%base_addr)(1 + 2 * nmx, 0)
 1556.                $I_L1556_154 = 0
 1556. !dir$ ivdep
 1556.                do
 1578.                   $xa_WR0_R1 = ( xx(nmx, 1 + $I_L1556_154) * $SC_beta_I32 * 1.0/(wa%base_addr)(1 + 2 * $I_L1556_154, 0) )
 1578.                   xa(mmax, 1 + 2 * $I_L1556_154) = $xa_WR0_R1
 1579.                   xa(mmax, 2 + 2 * $I_L1556_154) = -$xa_WR0_R1
 1581.                   $I_L1556_154 = 1 + $I_L1556_154
 1580.                   if ( $I_L1556_154 >= nmx ) exit
 1580.                enddo
 1580.             endif
 1580.          else if ( nmd == 0 ) then
 1578.             $SC_beta_I12 = (beta%base_addr)(1 + 2 * nmx, 0)
 1556.             $I_L1556_132 = 0
 1556. !dir$ ivdep
 1556.             do
 1558.                $wa_WR0_R2 = -_sqrt( (dgl%base_addr)(1 + $I_L1556_132, 0) )
 1558.                (wa%base_addr)(1 + 2 * $I_L1556_132, 0) = $wa_WR0_R2
 1559.                (wa%base_addr)(2 + 2 * $I_L1556_132, 0) = _sqrt( (dgl%base_addr)(1 + $I_L1556_132, 0) )
 1560.                xa(1, 1 + 2 * $I_L1556_132) = 0.0
 1561.                xa(1, 2 + 2 * $I_L1556_132) = 0.0
 1562.                xa(1 + mmax, 1 + 2 * $I_L1556_132) = xx(1, 1 + $I_L1556_132)
 1563.                xa(1 + mmax, 2 + 2 * $I_L1556_132) = xa(1 + mmax, 1 + 2 * $I_L1556_132)
 1564.                xa(1 + klmx, 1 + 2 * $I_L1556_132) = ( xx(1, 1 + $I_L1556_132) * $SC_gama_I11 * 1.0/$wa_WR0_R2 )
 1565.                xa(1 + klmx, 2 + 2 * $I_L1556_132) = -xa(1 + klmx, 1 + 2 * $I_L1556_132)
 1578.                xa(mmax, 1 + 2 * $I_L1556_132) = ( xx(nmx, 1 + $I_L1556_132) * $SC_beta_I12 * 1.0/$wa_WR0_R2 )
 1579.                xa(mmax, 2 + 2 * $I_L1556_132) = -xa(mmax, 1 + 2 * $I_L1556_132)
 1581.                $I_L1556_132 = 1 + $I_L1556_132
 1580.                if ( $I_L1556_132 >= nmx ) exit
 1580.             enddo
 1580.          else
 1556.             $I_L1556_136 = 0
 1556. !dir$ ivdep
 1556.             do
 1558.                $wa_WR0_R3 = -_sqrt( (dgl%base_addr)(1 + $I_L1556_136, 0) )
 1558.                (wa%base_addr)(1 + 2 * $I_L1556_136, 0) = $wa_WR0_R3
 1559.                (wa%base_addr)(2 + 2 * $I_L1556_136, 0) = _sqrt( (dgl%base_addr)(1 + $I_L1556_136, 0) )
 1560.                xa(1, 1 + 2 * $I_L1556_136) = 0.0
 1561.                xa(1, 2 + 2 * $I_L1556_136) = 0.0
 1562.                xa(1 + mmax, 1 + 2 * $I_L1556_136) = xx(1, 1 + $I_L1556_136)
 1563.                xa(1 + mmax, 2 + 2 * $I_L1556_136) = xa(1 + mmax, 1 + 2 * $I_L1556_136)
 1564.                xa(1 + klmx, 1 + 2 * $I_L1556_136) = ( xx(1, 1 + $I_L1556_136) * $SC_gama_I11 * 1.0/$wa_WR0_R3 )
 1565.                xa(1 + klmx, 2 + 2 * $I_L1556_136) = -xa(1 + klmx, 1 + 2 * $I_L1556_136)
 1581.                $I_L1556_136 = 1 + $I_L1556_136
 1580.                if ( $I_L1556_136 >= nmx ) exit
 1580.             enddo
 1580.          endif
 1580.       endif
 1583.       ncuta = ( 2 * nmx )
 1584.       t$107 = nxas
 1584.       t$317 = max( 0, nxas )
 1584.       t$318 = max( 0, nxas )
 1584.       t$319 = max( 0, nxas )
 1584.       if ( ( 2 * nmx ) > 0 ) then
 1584.          if ( nas > 0 ) then
 1584.             $I_L1584_156 = 0
 1584.             do
 1584.                $I_L1584_122 = 0
 1584. !dir$ ivdep
 1584.                do
 1584.                   if ( abs( xa(1 + $I_L1584_122, 1 + $I_L1584_156) ) <= eps ) then
 1584.                      xa(1 + $I_L1584_122, 1 + $I_L1584_156) = 0.0
 1584.                   endif
 1584.                   $I_L1584_122 = 1 + $I_L1584_122
 1584.                   if ( $I_L1584_122 >= nas ) exit
 1584.                enddo
 1584.                $I_L1584_156 = 1 + $I_L1584_156
 1584.                if ( $I_L1584_156 >= ( 2 * nmx ) ) exit
 1584.             enddo
 1584.          endif
 1584.       endif
 1586.       if ( ipr > 0 ) then
 1587.          $Unit_temp_O11 = nfprt
 1587.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O11, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1588.          $Unit_temp_O12 = nfprt
 1588.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O12, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' frequency: nas=', 0x800600000000L ), _iotype( nas, 0x804060200000000L ), _iotype( ' ncuta=', 0x800600000000L ), _iotype( ncuta, 0x804060200000000L ) ) )
 1589.          $Unit_temp_O13 = nfprt
 1589.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O13, Null_Arg, Null_Arg, t$89,  _substr(t$88,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1589.          if ( 2 * nmx > 0 ) then
 1589.             $SC_wa_I10 = wa%dim_1%SM
 1589.             $SC_wa_I9 = wa%dim_1%EX
 1589.             $I_L1589_124 = 0
 1589.             do
 1589.                if ( ( ( 1 + $I_L1589_124 ) <= 0 .or. ( 1 + $I_L1589_124 ) > $SC_wa_I9 ) /= .false. ) then
 1589.                    _substr(t$822,1,17) = 'NonLinearNMI.f90'
 1589.                    _substr(t$823,1,4) = 'WA'
 1589.                   t$794 = $SC_wa_I9
 1589.                   t$795 = 1 + $I_L1589_124
 1589.                   call _bounds_error(  _substr(t$822,1,17), 2089,  _substr(t$823,1,3), 1, 1, t$794, t$795, t$821 )
 1589.                endif
 1589.                $Unit_temp_O14 = nfprt
 1589.                $IOitem_O15 = ( (wa%base_addr)(1 + $I_L1589_124, 0) * 1.0/twomg )
 1589.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O14, Null_Arg, Null_Arg, t$89,  _substr(t$88,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O15, 0x4000300000000L ) ) )
 1589.                $I_L1589_124 = 1 + $I_L1589_124
 1589.                if ( $I_L1589_124 >= ( 2 * nmx ) ) exit
 1589.             enddo
 1589.          endif
 1589.          $Unit_temp_O16 = nfprt
 1589.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O16, Null_Arg, Null_Arg, t$89,  _substr(t$88,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1590.          $Unit_temp_O17 = nfprt
 1590.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O17, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' period:', 0x800600000000L ) ) )
 1591.          $Unit_temp_O18 = nfprt
 1591.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O18, Null_Arg, Null_Arg, t$91,  _substr(t$90,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1591.          if ( 2 * nmx > 0 ) then
 1591.             $SC_wa_I10 = wa%dim_1%SM
 1591.             $SC_wa_I9 = wa%dim_1%EX
 1591.             $I_L1591_126 = 0
 1591.             do
 1591.                if ( ( ( 1 + $I_L1591_126 ) <= 0 .or. ( 1 + $I_L1591_126 ) > $SC_wa_I9 ) /= .false. ) then
 1591.                    _substr(t$828,1,17) = 'NonLinearNMI.f90'
 1591.                    _substr(t$829,1,4) = 'WA'
 1591.                   t$794 = $SC_wa_I9
 1591.                   t$795 = 1 + $I_L1591_126
 1591.                   call _bounds_error(  _substr(t$828,1,17), 2091,  _substr(t$829,1,3), 1, 1, t$794, t$795, t$827 )
 1591.                endif
 1591.                $Unit_temp_O19 = nfprt
 1591.                $IOitem_O20 = 1.0/(wa%base_addr)(1 + $I_L1591_126, 0)
 1591.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O19, Null_Arg, Null_Arg, t$91,  _substr(t$90,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O20, 0x4000300000000L ) ) )
 1591.                $I_L1591_126 = 1 + $I_L1591_126
 1591.                if ( $I_L1591_126 >= ( 2 * nmx ) ) exit
 1591.             enddo
 1591.          endif
 1591.          $Unit_temp_O21 = nfprt
 1591.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O21, Null_Arg, Null_Arg, t$91,  _substr(t$90,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1592.          $Unit_temp_O22 = nfprt
 1592.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O22, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1593.          $Unit_temp_O23 = nfprt
 1593.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O23, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' xa: ierr=', 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 1594.          if ( nmx > 0 ) then
 1594.             $I_L1594_158 = 0
 1594.             do
 1595.                $Unit_temp_O24 = nfprt
 1595.                _fwrite( _clist( 0, 0, 2, $Unit_temp_O24, Null_Arg, Null_Arg, t$93,  _substr(t$92,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1595.                $I_L1595_128 = 0
 1595.                do
 1595.                   if ( ( ( 1 + $I_L1594_158 ) <= 0 .or. ( 1 + $I_L1594_158 ) > t$83 ) /= .false. ) then
 1595.                       _substr(t$837,1,17) = 'NonLinearNMI.f90'
 1595.                       _substr(t$838,1,4) = 'XX'
 1595.                      t$794 = 1 + $I_L1594_158
 1595.                      call _bounds_error(  _substr(t$837,1,17), 2095,  _substr(t$838,1,3), 1, 1, t$83, t$794, t$836 )
 1595.                   endif
 1595.                   $Unit_temp_O25 = nfprt
 1595.                   $IOitem_O32 = xx(1 + $I_L1594_158, 1 + $I_L1595_128)
 1595.                   _fwrite( _clist( 0, 0, 0, $Unit_temp_O25, Null_Arg, Null_Arg, t$93,  _substr(t$92,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O32, 0x804060300000000L ) ) )
 1595.                   $I_L1595_128 = 1 + $I_L1595_128
 1595.                   if ( $I_L1595_128 >= nmx ) exit
 1595.                enddo
 1595.                $Unit_temp_O26 = nfprt
 1595.                _fwrite( _clist( 0, 0, 1, $Unit_temp_O26, Null_Arg, Null_Arg, t$93,  _substr(t$92,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1596.                $I_L1594_158 = 1 + $I_L1594_158
 1596.                if ( $I_L1594_158 >= nmx ) exit
 1596.             enddo
 1596.          endif
 1597.          $Unit_temp_O27 = nfprt
 1597.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O27, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1598.          $Unit_temp_O28 = nfprt
 1598.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O28, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' xa:', 0x800600000000L ) ) )
 1599.          if ( nas > 0 ) then
 1600.             if ( ( min( 6, ( 2 * nmx ) ) ) > 0 ) then
 1599.                $I_L1599_160 = 0
 1599.                do
 1600.                   $Unit_temp_O29 = nfprt
 1600.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O29, Null_Arg, Null_Arg, t$95,  _substr(t$94,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1600.                   $I_L1600_130 = 0
 1600.                   do
 1600.                      if ( ( ( 1 + $I_L1599_160 ) <= 0 .or. ( 1 + $I_L1599_160 ) > t$82 ) /= .false. ) then
 1600.                          _substr(t$846,1,17) = 'NonLinearNMI.f90'
 1600.                          _substr(t$847,1,4) = 'XA'
 1600.                         t$795 = 1 + $I_L1599_160
 1600.                         call _bounds_error(  _substr(t$846,1,17), 2100,  _substr(t$847,1,3), 1, 1, t$82, t$795, t$845 )
 1600.                      endif
 1600.                      $Unit_temp_O30 = nfprt
 1600.                      $IOitem_O33 = xa(1 + $I_L1599_160, 1 + $I_L1600_130)
 1600.                      _fwrite( _clist( 0, 0, 0, $Unit_temp_O30, Null_Arg, Null_Arg, t$95,  _substr(t$94,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O33, 0x804060300000000L ) ) )
 1600.                      $I_L1600_130 = 1 + $I_L1600_130
 1600.                      if ( $I_L1600_130 >= min( 6, ( 2 * nmx ) ) ) exit
 1600.                   enddo
 1600.                   $Unit_temp_O31 = nfprt
 1600.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O31, Null_Arg, Null_Arg, t$95,  _substr(t$94,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1601.                   $I_L1599_160 = 1 + $I_L1599_160
 1601.                   if ( $I_L1599_160 >= nas ) exit
 1601.                enddo
 1601.             else
 1599.                $I_L1599_134 = 0
 1599.                do
 1600.                   $Unit_temp_O29 = nfprt
 1600.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O29, Null_Arg, Null_Arg, t$95,  _substr(t$94,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1600.                   $Unit_temp_O31 = nfprt
 1600.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O31, Null_Arg, Null_Arg, t$95,  _substr(t$94,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1601.                   $I_L1599_134 = 1 + $I_L1599_134
 1601.                   if ( $I_L1599_134 >= nas ) exit
 1601.                enddo
 1601.             endif
 1601.          endif
 1601.       endif
 1603.       return
 1603.       end
 1603.       
 1688.       
 1688.       subroutine asyrg( nxas, nas, lmax, mmax, nmd, ipr, ncuta, eps, twomg, percut, alfa, beta, gama, wa, wk, ea, xa )
 1610.       t$96 = nxas
 1618.       t$314 = _zla( 0, nxas )
 1610.       t$315 = _zla( 0, nxas )
 1610.       t$316 = _zla( 0, nxas )
 1624.       if ( nxas > 0 ) then
 1624.          $I_L1624_256 = 0
 1624.          do
 1625.             $I_L1625_228 = 0
 1625. !dir$ ivdep
 1625.             do
 1626.                ea(1 + $I_L1625_228, 1 + $I_L1624_256) = 0.0
 1627.                $I_L1625_228 = 1 + $I_L1625_228
 1625.                if ( $I_L1625_228 >= nxas ) exit
 1625.             enddo
 1630.             $I_L1624_256 = 1 + $I_L1624_256
 1627.             if ( $I_L1624_256 >= nxas ) exit
 1627.          enddo
 1624.          $I_L1624_230 = 0
 1624. !dir$ ivdep
 1624.          do
 1628.             wa(1 + $I_L1624_230) = 0.0
 1629.             wk(1 + $I_L1624_230) = 0.0
 1630.             $I_L1624_230 = 1 + $I_L1624_230
 1627.             if ( $I_L1624_230 >= nxas ) exit
 1627.          enddo
 1627.       endif
 1632.       if ( mmax > 0 ) then
 1632.          $I_L1632_192 = 0
 1632. !dir$ ivdep
 1632.          do
 1633.             ea(1 + $I_L1632_192, 1 + $I_L1632_192) = alfa(1 + 2 * $I_L1632_192)
 1634.             $I_L1632_192 = 1 + $I_L1632_192
 1632.             if ( $I_L1632_192 >= mmax ) exit
 1632.          enddo
 1632.       endif
 1635.       if ( lmax > 0 ) then
 1640.          if ( nmd /= 1 ) then
 1635.             $I_L1635_194 = 0
 1635.             $CSVL_V0 = int( cvmg( 1, cvmg( cvmg( mmax, 2, or( and( -2 * mmax == 0 .and. abs( mmax ) <= -1 + lmax, and( mmax > 0, mmax <= 2 ) ), and( mmax > 0, mmax <= cvmg( mmax, 2, and( -2 * mmax == 0 .and. abs( mmax ) <= -1 + lmax, and( mmax > 0, mmax <= 2 ) ) ) ) ) ), cvmg( mmax, 2, and( -2 * mmax == 0 .and. abs( mmax ) <= -1 + lmax, and( mmax > 0, mmax <= 2 ) ) ), -2 * mmax == -1 .and. abs( mmax ) <= -1 + lmax ), -2 * mmax == -2 ), 8 )
 1635.             if ( $CSVL_V0 <= 4 ) then
 1635.                do
 1638.                   ea(1 + $I_L1635_194, 1 + mmax + $I_L1635_194) = beta(2 + 2 * $I_L1635_194)
 1639.                   ea(1 + mmax + $I_L1635_194, 1 + $I_L1635_194) = ea(1 + $I_L1635_194, 1 + mmax + $I_L1635_194)
 1641.                   ea(2 + $I_L1635_194, 1 + mmax + $I_L1635_194) = beta(3 + 2 * $I_L1635_194)
 1642.                   ea(1 + mmax + $I_L1635_194, 2 + $I_L1635_194) = ea(2 + $I_L1635_194, 1 + mmax + $I_L1635_194)
 1644.                   $I_L1635_194 = 1 + $I_L1635_194
 1643.                   if ( $I_L1635_194 >= lmax ) exit
 1643.                enddo
 1643.             else
 1643. !dir$ ivdep safevl = $CSVL_V0 !   Guaranteed minimum :: 4
 1643.                do
 1638.                   ea(1 + $I_L1635_194, 1 + mmax + $I_L1635_194) = beta(2 + 2 * $I_L1635_194)
 1639.                   ea(1 + mmax + $I_L1635_194, 1 + $I_L1635_194) = ea(1 + $I_L1635_194, 1 + mmax + $I_L1635_194)
 1641.                   ea(2 + $I_L1635_194, 1 + mmax + $I_L1635_194) = beta(3 + 2 * $I_L1635_194)
 1642.                   ea(1 + mmax + $I_L1635_194, 2 + $I_L1635_194) = ea(2 + $I_L1635_194, 1 + mmax + $I_L1635_194)
 1644.                   $I_L1635_194 = 1 + $I_L1635_194
 1643.                   if ( $I_L1635_194 >= lmax ) exit
 1643.                enddo
 1643.             endif
 1643.          else
 1644.             if ( 0 < -1 + lmax ) then
 1635.                $I_L1635_214 = 0
 1635.                $CSVL_V1 = int( cvmg( 1, cvmg( cvmg( mmax, 2, or( and( mmax > 0, and( mmax <= 2, -2 * mmax == 0 .and. abs( mmax ) <= -2 + lmax ) ), and( mmax > 0, mmax <= cvmg( mmax, 2, and( mmax > 0, and( mmax <= 2, -2 * mmax == 0 .and. abs( mmax ) <= -2 + lmax ) ) ) ) ) ), cvmg( mmax, 2, and( mmax > 0, and( mmax <= 2, -2 * mmax == 0 .and. abs( mmax ) <= -2 + lmax ) ) ), -2 * mmax == -1 .and. abs( mmax ) <= -2 + lmax ), -2 * mmax == -2 ), 8 )
 1635.                if ( $CSVL_V1 <= 4 ) then
 1635.                   do
 1638.                      ea(1 + $I_L1635_214, 1 + mmax + $I_L1635_214) = beta(2 + 2 * $I_L1635_214)
 1639.                      ea(1 + mmax + $I_L1635_214, 1 + $I_L1635_214) = ea(1 + $I_L1635_214, 1 + mmax + $I_L1635_214)
 1641.                      ea(2 + $I_L1635_214, 1 + mmax + $I_L1635_214) = beta(3 + 2 * $I_L1635_214)
 1642.                      ea(1 + mmax + $I_L1635_214, 2 + $I_L1635_214) = ea(2 + $I_L1635_214, 1 + mmax + $I_L1635_214)
 1644.                      $I_L1635_214 = 1 + $I_L1635_214
 1643.                      if ( $I_L1635_214 >= -1 + lmax ) exit
 1643.                   enddo
 1643.                else
 1643. !dir$ ivdep safevl = $CSVL_V1 !   Guaranteed minimum :: 4
 1643.                   do
 1638.                      ea(1 + $I_L1635_214, 1 + mmax + $I_L1635_214) = beta(2 + 2 * $I_L1635_214)
 1639.                      ea(1 + mmax + $I_L1635_214, 1 + $I_L1635_214) = ea(1 + $I_L1635_214, 1 + mmax + $I_L1635_214)
 1641.                      ea(2 + $I_L1635_214, 1 + mmax + $I_L1635_214) = beta(3 + 2 * $I_L1635_214)
 1642.                      ea(1 + mmax + $I_L1635_214, 2 + $I_L1635_214) = ea(2 + $I_L1635_214, 1 + mmax + $I_L1635_214)
 1644.                      $I_L1635_214 = 1 + $I_L1635_214
 1643.                      if ( $I_L1635_214 >= -1 + lmax ) exit
 1643.                   enddo
 1643.                endif
 1643.             endif
 1638.             ea(lmax, mmax + lmax) = beta(2 * lmax)
 1639.             ea(mmax + lmax, lmax) = ea(lmax, mmax + lmax)
 1639.          endif
 1645.          $I_L1645_196 = 0
 1645. !dir$ ivdep
 1645.          do
 1648.             ea(1 + mmax + $I_L1645_196, 1 + mmax + $I_L1645_196) = alfa(2 + 2 * $I_L1645_196)
 1650.             $ea_WR0_R0 = gama(2 + 2 * $I_L1645_196)
 1650.             ea(1 + mmax + $I_L1645_196, 1 + mmax + lmax + $I_L1645_196) = $ea_WR0_R0
 1651.             ea(1 + mmax + lmax + $I_L1645_196, 1 + mmax + $I_L1645_196) = $ea_WR0_R0
 1652.             $I_L1645_196 = 1 + $I_L1645_196
 1645.             if ( $I_L1645_196 >= lmax ) exit
 1645.          enddo
 1645.       endif
 1654.       if ( ipr >= 3 ) then
 1655.          $Unit_temp_O0 = nfprt
 1655.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1656.          $Unit_temp_O1 = nfprt
 1656.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ea:', 0x800600000000L ) ) )
 1657.          if ( nas > 0 ) then
 1658.             if ( nas > 0 ) then
 1657.                $I_L1657_248 = 0
 1657.                do
 1658.                   $Unit_temp_O2 = nfprt
 1658.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O2, Null_Arg, Null_Arg, t$98,  _substr(t$97,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1658.                   $I_L1658_198 = 0
 1658.                   do
 1658.                      if ( ( ( 1 + $I_L1657_248 ) <= 0 .or. ( 1 + $I_L1657_248 ) > t$96 ) /= .false. ) then
 1658.                          _substr(t$870,1,17) = 'NonLinearNMI.f90'
 1658.                          _substr(t$871,1,4) = 'EA'
 1658.                         t$872 = 1 + $I_L1657_248
 1658.                         call _bounds_error(  _substr(t$870,1,17), 2158,  _substr(t$871,1,3), 1, 1, t$96, t$872, t$869 )
 1658.                      endif
 1658.                      $Unit_temp_O3 = nfprt
 1658.                      $IOitem_O26 = ea(1 + $I_L1657_248, 1 + $I_L1658_198)
 1658.                      _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$98,  _substr(t$97,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O26, 0x804060300000000L ) ) )
 1658.                      $I_L1658_198 = 1 + $I_L1658_198
 1658.                      if ( $I_L1658_198 >= nas ) exit
 1658.                   enddo
 1658.                   $Unit_temp_O4 = nfprt
 1658.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O4, Null_Arg, Null_Arg, t$98,  _substr(t$97,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1659.                   $I_L1657_248 = 1 + $I_L1657_248
 1659.                   if ( $I_L1657_248 >= nas ) exit
 1659.                enddo
 1659.             else
 1657.                $I_L1657_216 = 0
 1657.                do
 1658.                   $Unit_temp_O2 = nfprt
 1658.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O2, Null_Arg, Null_Arg, t$98,  _substr(t$97,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1658.                   $Unit_temp_O4 = nfprt
 1658.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O4, Null_Arg, Null_Arg, t$98,  _substr(t$97,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1659.                   $I_L1657_216 = 1 + $I_L1657_216
 1659.                   if ( $I_L1657_216 >= nas ) exit
 1659.                enddo
 1659.             endif
 1659.          endif
 1659.       endif
 1662.       call tred2( nxas, nas, ea(1, 1), wa(1), wk(1), xa(1, 1) )
 1663.       call tql2_i8( nxas, nas, wa(1), wk(1), xa(1, 1), eps, ierr )
 1665.       if ( ipr > 0 ) then
 1666.          $Unit_temp_O5 = nfprt
 1666.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1667.          $Unit_temp_O6 = nfprt
 1667.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' wa: ierr=', 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 1668.          $Unit_temp_O7 = nfprt
 1668.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O7, Null_Arg, Null_Arg, t$100,  _substr(t$99,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1668.          if ( nas > 0 ) then
 1668.             $I_L1668_200 = 0
 1668.             do
 1668.                $Unit_temp_O8 = nfprt
 1668.                $IOitem_O27 = wa(1 + $I_L1668_200)
 1668.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O8, Null_Arg, Null_Arg, t$100,  _substr(t$99,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O27, 0x804060300000000L ) ) )
 1668.                $I_L1668_200 = 1 + $I_L1668_200
 1668.                if ( $I_L1668_200 >= nas ) exit
 1668.             enddo
 1668.          endif
 1668.          $Unit_temp_O9 = nfprt
 1668.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O9, Null_Arg, Null_Arg, t$100,  _substr(t$99,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1668.       endif
 1673.       tm$500 = loc( xa(1, 1) )
 1673.       z = _copyin( xa(1, 1) )
 1673.       tm$502 = loc( ea(1, 1) )
 1673.       zw = _copyin( ea(1, 1) )
 1673.       t$109 = nxas
 1673.       t$323 = max( 0, nxas )
 1673.       t$324 = max( 0, nxas )
 1673.       t$325 = max( 0, nxas )
 1673.       if ( ( -1 + nas ) > 0 ) then
 1673.          if ( nas > 0 ) then
 1673.             do
 1673.                $k_S10 = 0
 1673.                $I_L1673_250 = 0
 1673.                do
 1673.                   if ( abs( wa(1 + $I_L1673_250) ) > abs( wa(2 + $I_L1673_250) ) ) then
 1673.                      $chg_S9 = wa(1 + $I_L1673_250)
 1673.                      $I_L1673_202 = 0
 1673. !dir$ ivdep
 1673.                      do
 1673.                         $wk_WR0_R1 = z(1 + $I_L1673_202, 1 + $I_L1673_250)
 1673.                         wk(1 + $I_L1673_202) = $wk_WR0_R1
 1673.                         z(1 + $I_L1673_202, 1 + $I_L1673_250) = z(1 + $I_L1673_202, 2 + $I_L1673_250)
 1673.                         z(1 + $I_L1673_202, 2 + $I_L1673_250) = $wk_WR0_R1
 1673.                         $I_L1673_202 = 1 + $I_L1673_202
 1673.                         if ( $I_L1673_202 >= nas ) exit
 1673.                      enddo
 1673.                      wa(1 + $I_L1673_250) = wa(2 + $I_L1673_250)
 1673.                      wa(2 + $I_L1673_250) = $chg_S9
 1673.                      $k_S10 = 1
 1673.                   endif
 1673.                   $I_L1673_250 = 1 + $I_L1673_250
 1673.                   if ( $I_L1673_250 >= ( -1 + nas ) ) exit
 1673.                enddo
 1673.                if ( $k_S10 == 0 ) exit
 1673.             enddo
 1673.          else
 1673.             do
 1673.                $k_S10 = 0
 1673.                $I_L1673_226 = 0
 1673. !dir$ unroll 4
 1673.                do
 1673.                   if ( abs( wa(1 + $I_L1673_226) ) > abs( wa(2 + $I_L1673_226) ) ) then
 1673.                      $chg_S9 = wa(1 + $I_L1673_226)
 1673.                      wa(1 + $I_L1673_226) = wa(2 + $I_L1673_226)
 1673.                      wa(2 + $I_L1673_226) = $chg_S9
 1673.                      $k_S10 = 1
 1673.                   endif
 1673.                   $I_L1673_226 = 1 + $I_L1673_226
 1673.                   if ( $I_L1673_226 >= ( -1 + nas ) ) exit
 1673.                enddo
 1673.                if ( $k_S10 == 0 ) exit
 1673.             enddo
 1673.          endif
 1673.       endif
 1673.       if ( percut <= 0.0 ) then
 1673.          ncuta = nas
 1673.       else
 1673.          $nc_S14 = 0
 1673.          if ( nas > 0 ) then
 1673.             $I_L1673_204 = 0
 1673. !dir$ ivdep
 1673.             do
 1673.                if ( abs( 1.0/wa(1 + $I_L1673_204) ) > percut ) then
 1673.                   $nc_S14 = ( 1 + $I_L1673_204 )
 1673.                endif
 1673.                $I_L1673_204 = 1 + $I_L1673_204
 1673.                if ( $I_L1673_204 >= nas ) exit
 1673.             enddo
 1673.             $I_L1673_232 = 0
 1673. !dir$ ivdep
 1673.             do
 1673.                wk(1 + $I_L1673_232) = wa(1 + $I_L1673_232)
 1673.                $I_L1673_232 = 1 + $I_L1673_232
 1673.                if ( $I_L1673_232 >= nas ) exit
 1673.             enddo
 1673.             $I_L1673_258 = 0
 1673.             do
 1673.                $I_L1673_234 = 0
 1673. !dir$ ivdep
 1673.                do
 1673.                   zw(1 + $I_L1673_234, 1 + $I_L1673_258) = z(1 + $I_L1673_234, 1 + $I_L1673_258)
 1673.                   $I_L1673_234 = 1 + $I_L1673_234
 1673.                   if ( $I_L1673_234 >= nas ) exit
 1673.                enddo
 1673.                $I_L1673_258 = 1 + $I_L1673_258
 1673.                if ( $I_L1673_258 >= nas ) exit
 1673.             enddo
 1673.          endif
 1673.          ncuta = nas + -$nc_S14
 1673.          if ( nxas > 0 ) then
 1673.             if ( nas > 0 ) then
 1673.                $I_L1673_260 = 0
 1673.                do
 1673.                   $I_L1673_236 = 0
 1673. !dir$ ivdep
 1673.                   do
 1673.                      z(1 + $I_L1673_236, 1 + $I_L1673_260) = 0.0
 1673.                      $I_L1673_236 = 1 + $I_L1673_236
 1673.                      if ( $I_L1673_236 >= nxas ) exit
 1673.                   enddo
 1673.                   $I_L1673_260 = 1 + $I_L1673_260
 1673.                   if ( $I_L1673_260 >= nas ) exit
 1673.                enddo
 1673.                $I_L1673_238 = 0
 1673. !dir$ ivdep
 1673.                do
 1673.                   wa(1 + $I_L1673_238) = 0.0
 1673.                   $I_L1673_238 = 1 + $I_L1673_238
 1673.                   if ( $I_L1673_238 >= nxas ) exit
 1673.                enddo
 1673.             else
 1673.                $I_L1673_218 = 0
 1673. !dir$ ivdep
 1673.                do
 1673.                   wa(1 + $I_L1673_218) = 0.0
 1673.                   $I_L1673_218 = 1 + $I_L1673_218
 1673.                   if ( $I_L1673_218 >= nxas ) exit
 1673.                enddo
 1673.             endif
 1673.          endif
 1673.          if ( nas + -$nc_S14 > 0 ) then
 1673.             if ( nas > 0 ) then
 1673.                $I_L1673_240 = 0
 1673. !dir$ ivdep
 1673.                do
 1673.                   wa(1 + $I_L1673_240) = wk(1 + $nc_S14 + $I_L1673_240)
 1673.                   $I_L1673_240 = 1 + $I_L1673_240
 1673.                   if ( $I_L1673_240 >= ( nas + -$nc_S14 ) ) exit
 1673.                enddo
 1673.                $I_L1673_262 = 0
 1673.                do
 1673.                   $I_L1673_242 = 0
 1673. !dir$ ivdep
 1673.                   do
 1673.                      z(1 + $I_L1673_242, 1 + $I_L1673_262) = zw(1 + $I_L1673_242, 1 + $nc_S14 + $I_L1673_262)
 1673.                      $I_L1673_242 = 1 + $I_L1673_242
 1673.                      if ( $I_L1673_242 >= nas ) exit
 1673.                   enddo
 1673.                   $I_L1673_262 = 1 + $I_L1673_262
 1673.                   if ( $I_L1673_262 >= ( nas + -$nc_S14 ) ) exit
 1673.                enddo
 1673.             else
 1673.                $I_L1673_220 = 0
 1673. !dir$ ivdep
 1673.                do
 1673.                   wa(1 + $I_L1673_220) = wk(1 + $nc_S14 + $I_L1673_220)
 1673.                   $I_L1673_220 = 1 + $I_L1673_220
 1673.                   if ( $I_L1673_220 >= ( nas + -$nc_S14 ) ) exit
 1673.                enddo
 1673.             endif
 1673.          endif
 1673.          if ( $nc_S14 > 0 ) then
 1673.             if ( nas > 0 ) then
 1673.                $I_L1673_244 = 0
 1673. !dir$ ivdep
 1673.                do
 1673.                   wa(1 + nas + $I_L1673_244 + -$nc_S14) = wk(1 + $I_L1673_244)
 1673.                   $I_L1673_244 = 1 + $I_L1673_244
 1673.                   if ( $I_L1673_244 >= $nc_S14 ) exit
 1673.                enddo
 1673.                $I_L1673_264 = 0
 1673.                do
 1673.                   $I_L1673_246 = 0
 1673. !dir$ ivdep
 1673.                   do
 1673.                      z(1 + $I_L1673_246, 1 + nas + $I_L1673_264 + -$nc_S14) = zw(1 + $I_L1673_246, 1 + $I_L1673_264)
 1673.                      $I_L1673_246 = 1 + $I_L1673_246
 1673.                      if ( $I_L1673_246 >= nas ) exit
 1673.                   enddo
 1673.                   $I_L1673_264 = 1 + $I_L1673_264
 1673.                   if ( $I_L1673_264 >= $nc_S14 ) exit
 1673.                enddo
 1673.             else
 1673.                $I_L1673_222 = 0
 1673. !dir$ ivdep
 1673.                do
 1673.                   wa(1 + nas + $I_L1673_222 + -$nc_S14) = wk(1 + $I_L1673_222)
 1673.                   $I_L1673_222 = 1 + $I_L1673_222
 1673.                   if ( $I_L1673_222 >= $nc_S14 ) exit
 1673.                enddo
 1673.             endif
 1673.          endif
 1673.       endif
 1673.       ea(1, 1) = _copyout( zw )
 1673.       xa(1, 1) = _copyout( z )
 1674.       tm$506 = loc( xa(1, 1) )
 1674.       a = _copyin( xa(1, 1) )
 1674.       t$107 = nxas
 1674.       t$317 = max( 0, nxas )
 1674.       t$318 = max( 0, nxas )
 1674.       t$319 = max( 0, nxas )
 1674.       if ( ncuta > 0 ) then
 1674.          if ( nas > 0 ) then
 1674.             $I_L1674_252 = 0
 1674.             do
 1674.                $I_L1674_206 = 0
 1674. !dir$ ivdep
 1674.                do
 1674.                   if ( abs( a(1 + $I_L1674_206, 1 + $I_L1674_252) ) <= eps ) then
 1674.                      a(1 + $I_L1674_206, 1 + $I_L1674_252) = 0.0
 1674.                   endif
 1674.                   $I_L1674_206 = 1 + $I_L1674_206
 1674.                   if ( $I_L1674_206 >= nas ) exit
 1674.                enddo
 1674.                $I_L1674_252 = 1 + $I_L1674_252
 1674.                if ( $I_L1674_252 >= ncuta ) exit
 1674.             enddo
 1674.          endif
 1674.       endif
 1674.       xa(1, 1) = _copyout( a )
 1676.       if ( ipr > 0 ) then
 1677.          $Unit_temp_O10 = nfprt
 1677.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O10, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1678.          $Unit_temp_O11 = nfprt
 1678.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O11, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' frequency: nas=', 0x800600000000L ), _iotype( nas, 0x804060200000000L ), _iotype( ' ncuta=', 0x800600000000L ), _iotype( ncuta, 0x804060200000000L ) ) )
 1679.          $Unit_temp_O12 = nfprt
 1679.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O12, Null_Arg, Null_Arg, t$102,  _substr(t$101,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1679.          if ( ncuta > 0 ) then
 1679.             $I_L1679_208 = 0
 1679.             do
 1679.                $Unit_temp_O13 = nfprt
 1679.                $IOitem_O14 = ( wa(1 + $I_L1679_208) * 1.0/twomg )
 1679.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O13, Null_Arg, Null_Arg, t$102,  _substr(t$101,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O14, 0x4000300000000L ) ) )
 1679.                $I_L1679_208 = 1 + $I_L1679_208
 1679.                if ( $I_L1679_208 >= ncuta ) exit
 1679.             enddo
 1679.          endif
 1679.          $Unit_temp_O15 = nfprt
 1679.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O15, Null_Arg, Null_Arg, t$102,  _substr(t$101,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1680.          $Unit_temp_O16 = nfprt
 1680.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O16, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' period:', 0x800600000000L ) ) )
 1681.          $Unit_temp_O17 = nfprt
 1681.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O17, Null_Arg, Null_Arg, t$104,  _substr(t$103,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1681.          if ( ncuta > 0 ) then
 1681.             $I_L1681_210 = 0
 1681.             do
 1681.                $Unit_temp_O18 = nfprt
 1681.                $IOitem_O19 = 1.0/wa(1 + $I_L1681_210)
 1681.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O18, Null_Arg, Null_Arg, t$104,  _substr(t$103,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O19, 0x4000300000000L ) ) )
 1681.                $I_L1681_210 = 1 + $I_L1681_210
 1681.                if ( $I_L1681_210 >= ncuta ) exit
 1681.             enddo
 1681.          endif
 1681.          $Unit_temp_O20 = nfprt
 1681.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O20, Null_Arg, Null_Arg, t$104,  _substr(t$103,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1682.          $Unit_temp_O21 = nfprt
 1682.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O21, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1683.          $Unit_temp_O22 = nfprt
 1683.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O22, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' xa:', 0x800600000000L ) ) )
 1684.          if ( nas > 0 ) then
 1685.             if ( ( min( 6, ncuta ) ) > 0 ) then
 1684.                $I_L1684_254 = 0
 1684.                do
 1685.                   $Unit_temp_O23 = nfprt
 1685.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O23, Null_Arg, Null_Arg, t$106,  _substr(t$105,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1685.                   $I_L1685_212 = 0
 1685.                   do
 1685.                      if ( ( ( 1 + $I_L1684_254 ) <= 0 .or. ( 1 + $I_L1684_254 ) > t$96 ) /= .false. ) then
 1685.                          _substr(t$889,1,17) = 'NonLinearNMI.f90'
 1685.                          _substr(t$890,1,4) = 'XA'
 1685.                         t$872 = 1 + $I_L1684_254
 1685.                         call _bounds_error(  _substr(t$889,1,17), 2185,  _substr(t$890,1,3), 1, 1, t$96, t$872, t$888 )
 1685.                      endif
 1685.                      $Unit_temp_O24 = nfprt
 1685.                      $IOitem_O28 = xa(1 + $I_L1684_254, 1 + $I_L1685_212)
 1685.                      _fwrite( _clist( 0, 0, 0, $Unit_temp_O24, Null_Arg, Null_Arg, t$106,  _substr(t$105,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O28, 0x804060300000000L ) ) )
 1685.                      $I_L1685_212 = 1 + $I_L1685_212
 1685.                      if ( $I_L1685_212 >= min( 6, ncuta ) ) exit
 1685.                   enddo
 1685.                   $Unit_temp_O25 = nfprt
 1685.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O25, Null_Arg, Null_Arg, t$106,  _substr(t$105,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1686.                   $I_L1684_254 = 1 + $I_L1684_254
 1686.                   if ( $I_L1684_254 >= nas ) exit
 1686.                enddo
 1686.             else
 1684.                $I_L1684_224 = 0
 1684.                do
 1685.                   $Unit_temp_O23 = nfprt
 1685.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O23, Null_Arg, Null_Arg, t$106,  _substr(t$105,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1685.                   $Unit_temp_O25 = nfprt
 1685.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O25, Null_Arg, Null_Arg, t$106,  _substr(t$105,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1686.                   $I_L1684_224 = 1 + $I_L1684_224
 1686.                   if ( $I_L1684_224 >= nas ) exit
 1686.                enddo
 1686.             endif
 1686.          endif
 1686.       endif
 1688.       return
 1688.       end
 1688.       
 1695.       
 1695.       subroutine filter( nm, ni, nj, a, b, c )
 1695.       t$107 = nm
 1700.       t$317 = _zla( 0, nm )
 1695.       t$318 = _zla( 0, nm )
 1695.       t$319 = _zla( 0, nm )
 1703.       if ( nj > 0 ) then
 1704.          if ( ni > 0 ) then
 1703.             $I_L1703_10 = 0
 1703.             do
 1704.                $I_L1704_8 = 0
 1704. !dir$ ivdep
 1704.                do
 1705.                   if ( abs( a(1 + $I_L1704_8, 1 + $I_L1703_10) ) <= c ) then
 1705.                      a(1 + $I_L1704_8, 1 + $I_L1703_10) = b
 1705.                   endif
 1706.                   $I_L1704_8 = 1 + $I_L1704_8
 1705.                   if ( $I_L1704_8 >= ni ) exit
 1705.                enddo
 1708.                $I_L1703_10 = 1 + $I_L1703_10
 1706.                if ( $I_L1703_10 >= nj ) exit
 1706.             enddo
 1706.          endif
 1706.       endif
 1709.       return
 1709.       end
 1709.       
 1716.       
 1716.       subroutine ident( nm, n, z )
 1716.       t$108 = nm
 1722.       t$320 = _zla( 0, nm )
 1716.       t$321 = _zla( 0, nm )
 1716.       t$322 = _zla( 0, nm )
 1728.       if ( n > 0 ) then
 1729.          $I_L1729_8 = 0
 1729.          do
 1728.             $I_L1728_10 = 0
 1728. !dir$ ivdep
 1728.             do
 1730.                z(1 + $I_L1728_10, 1 + $I_L1729_8) = 0.0
 1733.                $I_L1728_10 = 1 + $I_L1728_10
 1729.                if ( $I_L1728_10 >= n ) exit
 1729.             enddo
 1731.             $I_L1729_8 = 1 + $I_L1729_8
 1731.             if ( $I_L1729_8 >= n ) exit
 1731.          enddo
 1728.          $I_L1728_10 = 0
 1728. !dir$ ivdep
 1728.          do
 1732.             z(1 + $I_L1728_10, 1 + $I_L1728_10) = 7.0710678118654746e-1
 1733.             $I_L1728_10 = 1 + $I_L1728_10
 1731.             if ( $I_L1728_10 >= n ) exit
 1731.          enddo
 1731.       endif
 1734.       return
 1734.       end
 1734.       
 1741.       
 1741.       subroutine order( nm, n, fr, fw, z, zw, percut, nf )
 1741.       t$109 = nm
 1747.       t$323 = _zla( 0, nm )
 1741.       t$324 = _zla( 0, nm )
 1741.       t$325 = _zla( 0, nm )
 1754.       if ( ( -1 + n ) > 0 ) then
 1758.          if ( n > 0 ) then
 1758.             do
 1753.                $k_S5 = 0
 1754.                $I_L1754_122 = 0
 1754.                do
 1756.                   if ( abs( fr(1 + $I_L1754_122) ) > abs( fr(2 + $I_L1754_122) ) ) then
 1757.                      $chg_S4 = fr(1 + $I_L1754_122)
 1758.                      $I_L1758_94 = 0
 1758. !dir$ ivdep
 1758.                      do
 1759.                         $fw_WR0_R0 = z(1 + $I_L1758_94, 1 + $I_L1754_122)
 1759.                         fw(1 + $I_L1758_94) = $fw_WR0_R0
 1763.                         z(1 + $I_L1758_94, 1 + $I_L1754_122) = z(1 + $I_L1758_94, 2 + $I_L1754_122)
 1767.                         z(1 + $I_L1758_94, 2 + $I_L1754_122) = $fw_WR0_R0
 1760.                         $I_L1758_94 = 1 + $I_L1758_94
 1758.                         if ( $I_L1758_94 >= n ) exit
 1758.                      enddo
 1761.                      fr(1 + $I_L1754_122) = fr(2 + $I_L1754_122)
 1765.                      fr(2 + $I_L1754_122) = $chg_S4
 1769.                      $k_S5 = 1
 1769.                   endif
 1771.                   $I_L1754_122 = 1 + $I_L1754_122
 1770.                   if ( $I_L1754_122 >= ( -1 + n ) ) exit
 1770.                enddo
 1771.                if ( $k_S5 == 0 ) exit
 1771.             enddo
 1771.          else
 1771.             do
 1753.                $k_S5 = 0
 1754.                $I_L1754_104 = 0
 1754. !dir$ unroll 4
 1754.                do
 1756.                   if ( abs( fr(1 + $I_L1754_104) ) > abs( fr(2 + $I_L1754_104) ) ) then
 1757.                      $chg_S4 = fr(1 + $I_L1754_104)
 1761.                      fr(1 + $I_L1754_104) = fr(2 + $I_L1754_104)
 1765.                      fr(2 + $I_L1754_104) = $chg_S4
 1769.                      $k_S5 = 1
 1769.                   endif
 1771.                   $I_L1754_104 = 1 + $I_L1754_104
 1770.                   if ( $I_L1754_104 >= ( -1 + n ) ) exit
 1770.                enddo
 1771.                if ( $k_S5 == 0 ) exit
 1771.             enddo
 1771.          endif
 1771.       endif
 1774.       if ( percut <= 0.0 ) then
 1775.          nf = n
 1775.       else
 1779.          $nc_S9 = 0
 1780.          if ( n > 0 ) then
 1780.             $I_L1780_96 = 0
 1780. !dir$ ivdep
 1780.             do
 1781.                if ( abs( 1.0/fr(1 + $I_L1780_96) ) > percut ) then
 1781.                   $nc_S9 = ( 1 + $I_L1780_96 )
 1781.                endif
 1782.                $I_L1780_96 = 1 + $I_L1780_96
 1781.                if ( $I_L1780_96 >= n ) exit
 1781.             enddo
 1786.             $I_L1786_106 = 0
 1786. !dir$ ivdep
 1786.             do
 1787.                fw(1 + $I_L1786_106) = fr(1 + $I_L1786_106)
 1791.                $I_L1786_106 = 1 + $I_L1786_106
 1790.                if ( $I_L1786_106 >= n ) exit
 1790.             enddo
 1786.             $I_L1786_124 = 0
 1786.             do
 1788.                $I_L1788_108 = 0
 1788. !dir$ ivdep
 1788.                do
 1789.                   zw(1 + $I_L1788_108, 1 + $I_L1786_124) = z(1 + $I_L1788_108, 1 + $I_L1786_124)
 1790.                   $I_L1788_108 = 1 + $I_L1788_108
 1788.                   if ( $I_L1788_108 >= n ) exit
 1788.                enddo
 1791.                $I_L1786_124 = 1 + $I_L1786_124
 1790.                if ( $I_L1786_124 >= n ) exit
 1790.             enddo
 1790.          endif
 1783.          nf = n + -$nc_S9
 1793.          if ( nm > 0 ) then
 1794.             if ( n > 0 ) then
 1794.                $I_L1794_126 = 0
 1794.                do
 1793.                   $I_L1793_110 = 0
 1793. !dir$ ivdep
 1793.                   do
 1795.                      z(1 + $I_L1793_110, 1 + $I_L1794_126) = 0.0
 1798.                      $I_L1793_110 = 1 + $I_L1793_110
 1794.                      if ( $I_L1793_110 >= nm ) exit
 1794.                   enddo
 1796.                   $I_L1794_126 = 1 + $I_L1794_126
 1796.                   if ( $I_L1794_126 >= n ) exit
 1796.                enddo
 1793.                $I_L1793_112 = 0
 1793. !dir$ ivdep
 1793.                do
 1797.                   fr(1 + $I_L1793_112) = 0.0
 1798.                   $I_L1793_112 = 1 + $I_L1793_112
 1796.                   if ( $I_L1793_112 >= nm ) exit
 1796.                enddo
 1796.             else
 1793.                $I_L1793_98 = 0
 1793. !dir$ ivdep
 1793.                do
 1797.                   fr(1 + $I_L1793_98) = 0.0
 1798.                   $I_L1793_98 = 1 + $I_L1793_98
 1796.                   if ( $I_L1793_98 >= nm ) exit
 1796.                enddo
 1796.             endif
 1796.          endif
 1800.          if ( n + -$nc_S9 > 0 ) then
 1803.             if ( n > 0 ) then
 1800.                $I_L1800_114 = 0
 1800. !dir$ ivdep
 1800.                do
 1802.                   fr(1 + $I_L1800_114) = fw(1 + $nc_S9 + $I_L1800_114)
 1806.                   $I_L1800_114 = 1 + $I_L1800_114
 1805.                   if ( $I_L1800_114 >= ( n + -$nc_S9 ) ) exit
 1805.                enddo
 1800.                $I_L1800_128 = 0
 1800.                do
 1803.                   $I_L1803_116 = 0
 1803. !dir$ ivdep
 1803.                   do
 1804.                      z(1 + $I_L1803_116, 1 + $I_L1800_128) = zw(1 + $I_L1803_116, 1 + $nc_S9 + $I_L1800_128)
 1805.                      $I_L1803_116 = 1 + $I_L1803_116
 1803.                      if ( $I_L1803_116 >= n ) exit
 1803.                   enddo
 1806.                   $I_L1800_128 = 1 + $I_L1800_128
 1805.                   if ( $I_L1800_128 >= ( n + -$nc_S9 ) ) exit
 1805.                enddo
 1805.             else
 1800.                $I_L1800_100 = 0
 1800. !dir$ ivdep
 1800.                do
 1802.                   fr(1 + $I_L1800_100) = fw(1 + $nc_S9 + $I_L1800_100)
 1806.                   $I_L1800_100 = 1 + $I_L1800_100
 1805.                   if ( $I_L1800_100 >= ( n + -$nc_S9 ) ) exit
 1805.                enddo
 1805.             endif
 1805.          endif
 1809.          if ( $nc_S9 > 0 ) then
 1812.             if ( n > 0 ) then
 1809.                $I_L1809_118 = 0
 1809. !dir$ ivdep
 1809.                do
 1811.                   fr(1 + n + $I_L1809_118 + -$nc_S9) = fw(1 + $I_L1809_118)
 1815.                   $I_L1809_118 = 1 + $I_L1809_118
 1814.                   if ( $I_L1809_118 >= $nc_S9 ) exit
 1814.                enddo
 1809.                $I_L1809_130 = 0
 1809.                do
 1812.                   $I_L1812_120 = 0
 1812. !dir$ ivdep
 1812.                   do
 1813.                      z(1 + $I_L1812_120, 1 + n + $I_L1809_130 + -$nc_S9) = zw(1 + $I_L1812_120, 1 + $I_L1809_130)
 1814.                      $I_L1812_120 = 1 + $I_L1812_120
 1812.                      if ( $I_L1812_120 >= n ) exit
 1812.                   enddo
 1815.                   $I_L1809_130 = 1 + $I_L1809_130
 1814.                   if ( $I_L1809_130 >= $nc_S9 ) exit
 1814.                enddo
 1814.             else
 1809.                $I_L1809_102 = 0
 1809. !dir$ ivdep
 1809.                do
 1811.                   fr(1 + n + $I_L1809_102 + -$nc_S9) = fw(1 + $I_L1809_102)
 1815.                   $I_L1809_102 = 1 + $I_L1809_102
 1814.                   if ( $I_L1809_102 >= $nc_S9 ) exit
 1814.                enddo
 1814.             endif
 1814.          endif
 1814.       endif
 1816.       return
 1816.       end
 1816.       
 1823.       
 1823.       subroutine record( nx, nc, nm, ww, xx, pp, gg )
 1823.       t$110 = nx
 1827.       t$326 = _zla( 0, nx )
 1823.       t$327 = _zla( 0, nx )
 1823.       t$328 = _zla( 0, nx ) * _zla( 0, nx )
 1823.       t$111 = nc
 1828.       t$329 = _zla( 0, nc )
 1823.       t$112 = nm
 1823.       t$330 = _zla( 0, nc )
 1828.       t$331 = _zla( 0, nm )
 1823.       t$332 = _zla( 0, nc ) * _zla( 0, nm )
 1832.       $Unit_temp_O0 = nfnmi
 1832.       $_IOitem_P0(0) = nc
 1832.       $_IOitem_P0(1) = nm
 1832.       _uwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P0(:( 0, 1, 1 )), 0x804060200000000L ) ) )
 1833.       if ( nc /= 0 ) then
 1835.          $F_A33 = nc
 1835.          if ( nc > 0 ) then
 1835.             $I_A1 = 0
 1835. !dir$ ivdep
 1835.             do
 1835.                pp(1 + $I_A1) = 0.0
 1835.                $I_A1 = 1 + $I_A1
 1835.                if ( $I_A1 >= $F_A33 ) exit
 1835.             enddo
 1835.          endif
 1836.          $F_A34 = nm
 1836.          $F_A35 = nc
 1836.          if ( and( -$F_A35, -$F_A34 ) < 0 ) then
 1836.             $I_A2 = 0
 1836.             do
 1836.                $I_A1 = 0
 1836. !dir$ ivdep
 1836.                do
 1836.                   gg(1 + $I_A1, 1 + $I_A2) = 0.0
 1836.                   $I_A1 = 1 + $I_A1
 1836.                   if ( $I_A1 >= $F_A35 ) exit
 1836.                enddo
 1836.                $I_A2 = 1 + $I_A2
 1836.                if ( $I_A2 >= $F_A34 ) exit
 1836.             enddo
 1836.          endif
 1838.          if ( nc > 0 ) then
 1840.             if ( nm > 0 ) then
 1838.                $I_L1838_14 = 0
 1838.                do
 1840.                   $I_L1840_10 = 0
 1840. !dir$ ivdep
 1840.                   do
 1841.                      gg(1 + $I_L1838_14, 1 + $I_L1840_10) = xx(1 + $I_L1840_10, 1 + $I_L1838_14)
 1842.                      $I_L1840_10 = 1 + $I_L1840_10
 1840.                      if ( $I_L1840_10 >= nm ) exit
 1840.                   enddo
 1843.                   $I_L1838_14 = 1 + $I_L1838_14
 1842.                   if ( $I_L1838_14 >= nc ) exit
 1842.                enddo
 1838.                $I_L1838_14 = 0
 1838. !dir$ ivdep
 1838.                do
 1839.                   pp(1 + $I_L1838_14) = 1.0/ww(1 + $I_L1838_14)
 1843.                   $I_L1838_14 = 1 + $I_L1838_14
 1842.                   if ( $I_L1838_14 >= nc ) exit
 1842.                enddo
 1842.             else
 1838.                $I_L1838_12 = 0
 1838. !dir$ ivdep
 1838.                do
 1839.                   pp(1 + $I_L1838_12) = 1.0/ww(1 + $I_L1838_12)
 1843.                   $I_L1838_12 = 1 + $I_L1838_12
 1842.                   if ( $I_L1838_12 >= nc ) exit
 1842.                enddo
 1842.             endif
 1842.          endif
 1844.          $Unit_temp_O1 = nfnmi
 1844.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)pp(+:( 1, nc, 1 )), 0x804060300000000L ), _iotype( (&)gg(+:( 1, nc, 1 ), +:( 1, nm, 1 )), 0x804060300000000L ) ) )
 1844.       endif
 1845.       return
 1845.       end
 1845.       
 1956.       
 1956.       subroutine symg0( nxsy, nsy, nend1, lmax, klmx, nmd, ipr, ncuts, eps, twomg, beta, gama, ws, sdg, dgl, xs, xx )
 1853.       t$113 = nxsy
 1862.       t$333 = _zla( 0, nxsy )
 1853.       t$334 = _zla( 0, nxsy )
 1853.       t$335 = _zla( 0, nxsy )
 1853.       t$114 = nend1
 1862.       t$336 = _zla( 0, nend1 )
 1853.       t$337 = _zla( 0, nend1 )
 1853.       t$338 = _zla( 0, nend1 )
 1870.       sdg(1) = 0.0
 1872.       dgl(1) = beta(3) * beta(3) + beta(4) * beta(4) + gama(3) * gama(3)
 1874.       nmx = -1 + lmax
 1875.       if ( -3 + lmax >= 0 ) then
 1875.          $I_L1875_102 = 0
 1875. !dir$ ivdep
 1875.          do
 1877.             sdg(2 + $I_L1875_102) = beta(5 + 2 * $I_L1875_102) * beta(4 + 2 * $I_L1875_102)
 1878.             dgl(2 + $I_L1875_102) = gama(5 + 2 * $I_L1875_102) * gama(5 + 2 * $I_L1875_102) + beta(6 + 2 * $I_L1875_102) * beta(6 + 2 * $I_L1875_102) + beta(5 + 2 * $I_L1875_102) * beta(5 + 2 * $I_L1875_102)
 1880.             $I_L1875_102 = 1 + $I_L1875_102
 1875.             if ( $I_L1875_102 >= -2 + lmax ) exit
 1875.          enddo
 1875.       endif
 1881.       if ( nmd == 0 ) then
 1882.          nmx = lmax
 1885.          sdg(lmax) = beta(2 * lmax) * beta(1 + 2 * lmax)
 1886.          dgl(lmax) = beta(1 + 2 * lmax) * beta(1 + 2 * lmax) + gama(1 + 2 * lmax) * gama(1 + 2 * lmax)
 1886.       endif
 1889.       if ( ipr > 0 ) then
 1890.          $Unit_temp_O0 = nfprt
 1890.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1891.          $Unit_temp_O1 = nfprt
 1891.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' sdg:', 0x800600000000L ) ) )
 1892.          $Unit_temp_O2 = nfprt
 1892.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O2, Null_Arg, Null_Arg, t$116,  _substr(t$115,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1892.          if ( nmx > 0 ) then
 1892.             $I_L1892_104 = 0
 1892.             do
 1892.                $Unit_temp_O3 = nfprt
 1892.                $IOitem_O30 = sdg(1 + $I_L1892_104)
 1892.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$116,  _substr(t$115,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O30, 0x804060300000000L ) ) )
 1892.                $I_L1892_104 = 1 + $I_L1892_104
 1892.                if ( $I_L1892_104 >= nmx ) exit
 1892.             enddo
 1892.          endif
 1892.          $Unit_temp_O4 = nfprt
 1892.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O4, Null_Arg, Null_Arg, t$116,  _substr(t$115,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1893.          $Unit_temp_O5 = nfprt
 1893.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' dgs:', 0x800600000000L ) ) )
 1894.          $Unit_temp_O6 = nfprt
 1894.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O6, Null_Arg, Null_Arg, t$118,  _substr(t$117,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1894.          if ( nmx > 0 ) then
 1894.             $I_L1894_106 = 0
 1894.             do
 1894.                $Unit_temp_O7 = nfprt
 1894.                $IOitem_O31 = dgl(1 + $I_L1894_106)
 1894.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O7, Null_Arg, Null_Arg, t$118,  _substr(t$117,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O31, 0x804060300000000L ) ) )
 1894.                $I_L1894_106 = 1 + $I_L1894_106
 1894.                if ( $I_L1894_106 >= nmx ) exit
 1894.             enddo
 1894.          endif
 1894.          $Unit_temp_O8 = nfprt
 1894.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O8, Null_Arg, Null_Arg, t$118,  _substr(t$117,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1894.       endif
 1897.       t$108 = nend1
 1897.       t$320 = max( 0, nend1 )
 1897.       t$321 = max( 0, nend1 )
 1897.       t$322 = max( 0, nend1 )
 1897.       if ( nmx > 0 ) then
 1897.          $I_L1897_138 = 0
 1897.          do
 1897.             $I_L1897_120 = 0
 1897. !dir$ ivdep
 1897.             do
 1897.                xx(1 + $I_L1897_120, 1 + $I_L1897_138) = 0.0
 1897.                $I_L1897_120 = 1 + $I_L1897_120
 1897.                if ( $I_L1897_120 >= nmx ) exit
 1897.             enddo
 1897.             $I_L1897_138 = 1 + $I_L1897_138
 1897.             if ( $I_L1897_138 >= nmx ) exit
 1897.          enddo
 1897.          $I_L1897_122 = 0
 1897. !dir$ ivdep
 1897.          do
 1897.             xx(1 + $I_L1897_122, 1 + $I_L1897_122) = 7.0710678118654746e-1
 1897.             $I_L1897_122 = 1 + $I_L1897_122
 1897.             if ( $I_L1897_122 >= nmx ) exit
 1897.          enddo
 1897.       endif
 1898.       call tql2_i( nend1, nmx, dgl(1), sdg(1), xx(1, 1), eps, ierr )
 1900.       if ( nmx > 0 ) then
 1904.          $SC_beta_I0 = beta(3)
 1900.          $I_L1900_124 = 0
 1900. !dir$ ivdep
 1900.          do
 1902.             $ws_WR0_R0 = -_sqrt( dgl(1 + $I_L1900_124) )
 1902.             ws(1 + 2 * $I_L1900_124) = $ws_WR0_R0
 1903.             ws(2 + 2 * $I_L1900_124) = _sqrt( dgl(1 + $I_L1900_124) )
 1904.             xs(1, 1 + 2 * $I_L1900_124) = ( xx(1, 1 + $I_L1900_124) * $SC_beta_I0 * 1.0/$ws_WR0_R0 )
 1905.             xs(1, 2 + 2 * $I_L1900_124) = -xs(1, 1 + 2 * $I_L1900_124)
 1906.             xs(1 + lmax, 1 + 2 * $I_L1900_124) = 0.0
 1907.             xs(1 + lmax, 2 + 2 * $I_L1900_124) = 0.0
 1908.             xs(1 + klmx, 1 + 2 * $I_L1900_124) = 0.0
 1909.             xs(1 + klmx, 2 + 2 * $I_L1900_124) = 0.0
 1934.             $I_L1900_124 = 1 + $I_L1900_124
 1933.             if ( $I_L1900_124 >= nmx ) exit
 1933.          enddo
 1910.          if ( -2 + nmx >= 0 ) then
 1900.             $I_L1900_140 = 0
 1900.             do
 1910.                $SCA_ws_I1 = ws(1 + 2 * $I_L1900_140)
 1910.                $I_L1910_126 = 0
 1910.                $CSVL_V0 = cvmg( ( klmx + -lmax ), cvmg( klmx, cvmg( lmax, 2, and( lmax > 0, and( lmax <= 2, lmax <= -2 + nmx ) ) ), and( klmx > 0, and( klmx <= cvmg( lmax, 2, and( lmax > 0, and( lmax <= 2, lmax <= -2 + nmx ) ) ), klmx <= -2 + nmx ) ) ), and( klmx + -lmax > 0, and( ( klmx + -lmax ) <= cvmg( klmx, cvmg( lmax, 2, and( lmax > 0, and( lmax <= 2, lmax <= -2 + nmx ) ) ), and( klmx > 0, and( klmx <= cvmg( lmax, 2, and( lmax > 0, and( lmax <= 2, lmax <= -2 + nmx ) ) ), klmx <= -2 + nmx ) ) ), ( klmx + -lmax ) <= -2 + nmx ) ) )
 1910.                if ( $CSVL_V0 <= 4 ) then
 1910.                   do
 1912.                      xs(2 + $I_L1910_126, 1 + 2 * $I_L1900_140) = ( 1.0/$SCA_ws_I1 * ( beta(4 + 2 * $I_L1910_126) * xx(1 + $I_L1910_126, 1 + $I_L1900_140) + beta(5 + 2 * $I_L1910_126) * xx(2 + $I_L1910_126, 1 + $I_L1900_140) ) )
 1913.                      xs(2 + $I_L1910_126, 2 + 2 * $I_L1900_140) = -xs(2 + $I_L1910_126, 1 + 2 * $I_L1900_140)
 1914.                      xs(2 + lmax + $I_L1910_126, 1 + 2 * $I_L1900_140) = xx(1 + $I_L1910_126, 1 + $I_L1900_140)
 1915.                      xs(2 + lmax + $I_L1910_126, 2 + 2 * $I_L1900_140) = xs(2 + lmax + $I_L1910_126, 1 + 2 * $I_L1900_140)
 1916.                      xs(2 + klmx + $I_L1910_126, 1 + 2 * $I_L1900_140) = ( xx(1 + $I_L1910_126, 1 + $I_L1900_140) * gama(3 + 2 * $I_L1910_126) * 1.0/$SCA_ws_I1 )
 1917.                      $LD_SPLT_P0 = xs(2 + klmx + $I_L1910_126, 1 + 2 * $I_L1900_140)
 1917.                      xs(2 + klmx + $I_L1910_126, 2 + 2 * $I_L1900_140) = -$LD_SPLT_P0
 1918.                      $I_L1910_126 = 1 + $I_L1910_126
 1910.                      if ( $I_L1910_126 >= -1 + nmx ) exit
 1910.                   enddo
 1910.                else
 1910. !dir$ ivdep safevl = $CSVL_V0 !   Guaranteed minimum :: 4
 1910.                   do
 1912.                      xs(2 + $I_L1910_126, 1 + 2 * $I_L1900_140) = ( 1.0/$SCA_ws_I1 * ( beta(4 + 2 * $I_L1910_126) * xx(1 + $I_L1910_126, 1 + $I_L1900_140) + beta(5 + 2 * $I_L1910_126) * xx(2 + $I_L1910_126, 1 + $I_L1900_140) ) )
 1913.                      xs(2 + $I_L1910_126, 2 + 2 * $I_L1900_140) = -xs(2 + $I_L1910_126, 1 + 2 * $I_L1900_140)
 1914.                      xs(2 + lmax + $I_L1910_126, 1 + 2 * $I_L1900_140) = xx(1 + $I_L1910_126, 1 + $I_L1900_140)
 1915.                      xs(2 + lmax + $I_L1910_126, 2 + 2 * $I_L1900_140) = xs(2 + lmax + $I_L1910_126, 1 + 2 * $I_L1900_140)
 1916.                      xs(2 + klmx + $I_L1910_126, 1 + 2 * $I_L1900_140) = ( xx(1 + $I_L1910_126, 1 + $I_L1900_140) * gama(3 + 2 * $I_L1910_126) * 1.0/$SCA_ws_I1 )
 1917.                      $LD_SPLT_P0 = xs(2 + klmx + $I_L1910_126, 1 + 2 * $I_L1900_140)
 1917.                      xs(2 + klmx + $I_L1910_126, 2 + 2 * $I_L1900_140) = -$LD_SPLT_P0
 1918.                      $I_L1910_126 = 1 + $I_L1910_126
 1910.                      if ( $I_L1910_126 >= -1 + nmx ) exit
 1910.                   enddo
 1910.                endif
 1934.                $I_L1900_140 = 1 + $I_L1900_140
 1933.                if ( $I_L1900_140 >= nmx ) exit
 1933.             enddo
 1933.          endif
 1921.          if ( nmd == 1 ) then
 1926.             $SC_gama_I3 = gama(-1 + 2 * lmax)
 1922.             $SC_beta_I2 = beta(2 * lmax)
 1900.             $I_L1900_128 = 0
 1900. !dir$ ivdep
 1900.             do
 1922.                xs(lmax, 1 + 2 * $I_L1900_128) = ( $SC_beta_I2 * xx(-1 + lmax, 1 + $I_L1900_128) * 1.0/ws(1 + 2 * $I_L1900_128) )
 1923.                xs(lmax, 2 + 2 * $I_L1900_128) = -xs(lmax, 1 + 2 * $I_L1900_128)
 1924.                xs(klmx, 1 + 2 * $I_L1900_128) = xx(-1 + lmax, 1 + $I_L1900_128)
 1925.                xs(klmx, 2 + 2 * $I_L1900_128) = xs(klmx, 1 + 2 * $I_L1900_128)
 1926.                xs(nsy, 1 + 2 * $I_L1900_128) = ( $SC_gama_I3 * xx(-1 + lmax, 1 + $I_L1900_128) * 1.0/ws(1 + 2 * $I_L1900_128) )
 1927.                xs(nsy, 2 + 2 * $I_L1900_128) = -xs(nsy, 1 + 2 * $I_L1900_128)
 1934.                $I_L1900_128 = 1 + $I_L1900_128
 1933.                if ( $I_L1900_128 >= nmx ) exit
 1933.             enddo
 1933.          else
 1931.             $SC_gama_I4 = gama(1 + 2 * lmax)
 1900.             $I_L1900_130 = 0
 1900. !dir$ ivdep
 1900.             do
 1929.                xs(klmx, 1 + 2 * $I_L1900_130) = xx(lmax, 1 + $I_L1900_130)
 1930.                xs(klmx, 2 + 2 * $I_L1900_130) = xs(klmx, 1 + 2 * $I_L1900_130)
 1931.                xs(nsy, 1 + 2 * $I_L1900_130) = ( $SC_gama_I4 * xx(lmax, 1 + $I_L1900_130) * 1.0/ws(1 + 2 * $I_L1900_130) )
 1932.                xs(nsy, 2 + 2 * $I_L1900_130) = -xs(nsy, 1 + 2 * $I_L1900_130)
 1934.                $I_L1900_130 = 1 + $I_L1900_130
 1933.                if ( $I_L1900_130 >= nmx ) exit
 1933.             enddo
 1933.          endif
 1933.       endif
 1936.       ncuts = ( 2 * nmx )
 1937.       t$107 = nxsy
 1937.       t$317 = max( 0, nxsy )
 1937.       t$318 = max( 0, nxsy )
 1937.       t$319 = max( 0, nxsy )
 1937.       if ( ( 2 * nmx ) > 0 ) then
 1937.          if ( nsy > 0 ) then
 1937.             $I_L1937_132 = 0
 1937.             do
 1937.                $I_L1937_108 = 0
 1937. !dir$ ivdep
 1937.                do
 1937.                   if ( abs( xs(1 + $I_L1937_108, 1 + $I_L1937_132) ) <= eps ) then
 1937.                      xs(1 + $I_L1937_108, 1 + $I_L1937_132) = 0.0
 1937.                   endif
 1937.                   $I_L1937_108 = 1 + $I_L1937_108
 1937.                   if ( $I_L1937_108 >= nsy ) exit
 1937.                enddo
 1937.                $I_L1937_132 = 1 + $I_L1937_132
 1937.                if ( $I_L1937_132 >= ( 2 * nmx ) ) exit
 1937.             enddo
 1937.          endif
 1937.       endif
 1939.       if ( ipr > 0 ) then
 1940.          $Unit_temp_O9 = nfprt
 1940.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O9, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1941.          $Unit_temp_O10 = nfprt
 1941.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O10, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' frequency: nsy=', 0x800600000000L ), _iotype( nsy, 0x804060200000000L ), _iotype( ' ncuts=', 0x800600000000L ), _iotype( ncuts, 0x804060200000000L ) ) )
 1942.          $Unit_temp_O11 = nfprt
 1942.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O11, Null_Arg, Null_Arg, t$120,  _substr(t$119,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1942.          if ( 2 * nmx > 0 ) then
 1942.             $I_L1942_110 = 0
 1942.             do
 1942.                $Unit_temp_O12 = nfprt
 1942.                $IOitem_O13 = ( ws(1 + $I_L1942_110) * 1.0/twomg )
 1942.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O12, Null_Arg, Null_Arg, t$120,  _substr(t$119,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O13, 0x4000300000000L ) ) )
 1942.                $I_L1942_110 = 1 + $I_L1942_110
 1942.                if ( $I_L1942_110 >= ( 2 * nmx ) ) exit
 1942.             enddo
 1942.          endif
 1942.          $Unit_temp_O14 = nfprt
 1942.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O14, Null_Arg, Null_Arg, t$120,  _substr(t$119,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1943.          $Unit_temp_O15 = nfprt
 1943.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O15, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' period:', 0x800600000000L ) ) )
 1944.          $Unit_temp_O16 = nfprt
 1944.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O16, Null_Arg, Null_Arg, t$122,  _substr(t$121,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1944.          if ( 2 * nmx > 0 ) then
 1944.             $I_L1944_112 = 0
 1944.             do
 1944.                $Unit_temp_O17 = nfprt
 1944.                $IOitem_O18 = 1.0/ws(1 + $I_L1944_112)
 1944.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O17, Null_Arg, Null_Arg, t$122,  _substr(t$121,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O18, 0x4000300000000L ) ) )
 1944.                $I_L1944_112 = 1 + $I_L1944_112
 1944.                if ( $I_L1944_112 >= ( 2 * nmx ) ) exit
 1944.             enddo
 1944.          endif
 1944.          $Unit_temp_O19 = nfprt
 1944.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O19, Null_Arg, Null_Arg, t$122,  _substr(t$121,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1945.          $Unit_temp_O20 = nfprt
 1945.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O20, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1946.          $Unit_temp_O21 = nfprt
 1946.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O21, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' xs: ierr=', 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 1947.          if ( nmx > 0 ) then
 1947.             $I_L1947_134 = 0
 1947.             do
 1948.                $Unit_temp_O22 = nfprt
 1948.                _fwrite( _clist( 0, 0, 2, $Unit_temp_O22, Null_Arg, Null_Arg, t$124,  _substr(t$123,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1948.                $I_L1948_114 = 0
 1948.                do
 1948.                   if ( ( ( 1 + $I_L1947_134 ) <= 0 .or. ( 1 + $I_L1947_134 ) > t$114 ) /= .false. ) then
 1948.                       _substr(t$977,1,17) = 'NonLinearNMI.f90'
 1948.                       _substr(t$978,1,4) = 'XX'
 1948.                      t$979 = 1 + $I_L1947_134
 1948.                      call _bounds_error(  _substr(t$977,1,17), 2448,  _substr(t$978,1,3), 1, 1, t$114, t$979, t$976 )
 1948.                   endif
 1948.                   $Unit_temp_O23 = nfprt
 1948.                   $IOitem_O32 = xx(1 + $I_L1947_134, 1 + $I_L1948_114)
 1948.                   _fwrite( _clist( 0, 0, 0, $Unit_temp_O23, Null_Arg, Null_Arg, t$124,  _substr(t$123,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O32, 0x804060300000000L ) ) )
 1948.                   $I_L1948_114 = 1 + $I_L1948_114
 1948.                   if ( $I_L1948_114 >= nmx ) exit
 1948.                enddo
 1948.                $Unit_temp_O24 = nfprt
 1948.                _fwrite( _clist( 0, 0, 1, $Unit_temp_O24, Null_Arg, Null_Arg, t$124,  _substr(t$123,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1949.                $I_L1947_134 = 1 + $I_L1947_134
 1949.                if ( $I_L1947_134 >= nmx ) exit
 1949.             enddo
 1949.          endif
 1950.          $Unit_temp_O25 = nfprt
 1950.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O25, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 1951.          $Unit_temp_O26 = nfprt
 1951.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O26, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' xs:', 0x800600000000L ) ) )
 1952.          if ( nsy > 0 ) then
 1953.             if ( ( min( 6, ( 2 * nmx ) ) ) > 0 ) then
 1952.                $I_L1952_136 = 0
 1952.                do
 1953.                   $Unit_temp_O27 = nfprt
 1953.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O27, Null_Arg, Null_Arg, t$126,  _substr(t$125,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1953.                   $I_L1953_116 = 0
 1953.                   do
 1953.                      if ( ( ( 1 + $I_L1952_136 ) <= 0 .or. ( 1 + $I_L1952_136 ) > t$113 ) /= .false. ) then
 1953.                          _substr(t$987,1,17) = 'NonLinearNMI.f90'
 1953.                          _substr(t$988,1,4) = 'XS'
 1953.                         t$979 = 1 + $I_L1952_136
 1953.                         call _bounds_error(  _substr(t$987,1,17), 2453,  _substr(t$988,1,3), 1, 1, t$113, t$979, t$986 )
 1953.                      endif
 1953.                      $Unit_temp_O28 = nfprt
 1953.                      $IOitem_O33 = xs(1 + $I_L1952_136, 1 + $I_L1953_116)
 1953.                      _fwrite( _clist( 0, 0, 0, $Unit_temp_O28, Null_Arg, Null_Arg, t$126,  _substr(t$125,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O33, 0x804060300000000L ) ) )
 1953.                      $I_L1953_116 = 1 + $I_L1953_116
 1953.                      if ( $I_L1953_116 >= min( 6, ( 2 * nmx ) ) ) exit
 1953.                   enddo
 1953.                   $Unit_temp_O29 = nfprt
 1953.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O29, Null_Arg, Null_Arg, t$126,  _substr(t$125,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1954.                   $I_L1952_136 = 1 + $I_L1952_136
 1954.                   if ( $I_L1952_136 >= nsy ) exit
 1954.                enddo
 1954.             else
 1952.                $I_L1952_118 = 0
 1952.                do
 1953.                   $Unit_temp_O27 = nfprt
 1953.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O27, Null_Arg, Null_Arg, t$126,  _substr(t$125,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1953.                   $Unit_temp_O29 = nfprt
 1953.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O29, Null_Arg, Null_Arg, t$126,  _substr(t$125,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1954.                   $I_L1952_118 = 1 + $I_L1952_118
 1954.                   if ( $I_L1952_118 >= nsy ) exit
 1954.                enddo
 1954.             endif
 1954.          endif
 1954.       endif
 1956.       return
 1956.       end
 1956.       
 2043.       
 2043.       subroutine symrg( nxsy, nsy, lmax, mmax, nmd, ipr, ncuts, eps, twomg, percut, alfa, beta, gama, ws, wk, es, xs )
 1963.       t$127 = nxsy
 1973.       t$339 = _zla( 0, nxsy )
 1963.       t$340 = _zla( 0, nxsy )
 1963.       t$341 = _zla( 0, nxsy )
 1979.       if ( nxsy > 0 ) then
 1979.          $I_L1979_256 = 0
 1979.          do
 1980.             $I_L1980_228 = 0
 1980. !dir$ ivdep
 1980.             do
 1981.                es(1 + $I_L1980_228, 1 + $I_L1979_256) = 0.0
 1982.                $I_L1980_228 = 1 + $I_L1980_228
 1980.                if ( $I_L1980_228 >= nxsy ) exit
 1980.             enddo
 1985.             $I_L1979_256 = 1 + $I_L1979_256
 1982.             if ( $I_L1979_256 >= nxsy ) exit
 1982.          enddo
 1979.          $I_L1979_230 = 0
 1979. !dir$ ivdep
 1979.          do
 1983.             ws(1 + $I_L1979_230) = 0.0
 1984.             wk(1 + $I_L1979_230) = 0.0
 1985.             $I_L1979_230 = 1 + $I_L1979_230
 1982.             if ( $I_L1979_230 >= nxsy ) exit
 1982.          enddo
 1982.       endif
 1987.       if ( lmax > 0 ) then
 1987.          $I_L1987_192 = 0
 1987. !dir$ ivdep
 1987.          do
 1988.             es(1 + $I_L1987_192, 1 + $I_L1987_192) = alfa(2 + 2 * $I_L1987_192)
 1989.             $I_L1987_192 = 1 + $I_L1987_192
 1987.             if ( $I_L1987_192 >= lmax ) exit
 1987.          enddo
 1995.          if ( nmd /= 1 ) then
 1990.             $I_L1990_194 = 0
 1990. !dir$ ivdep
 1990.             do
 1993.                $es_WR0_R0 = beta(2 + 2 * $I_L1990_194)
 1993.                es(1 + $I_L1990_194, 1 + lmax + $I_L1990_194) = $es_WR0_R0
 1994.                es(1 + lmax + $I_L1990_194, 1 + $I_L1990_194) = $es_WR0_R0
 1996.                $es_WR0_R1 = beta(3 + 2 * $I_L1990_194)
 1996.                es(1 + $I_L1990_194, 2 + lmax + $I_L1990_194) = $es_WR0_R1
 1997.                es(2 + lmax + $I_L1990_194, 1 + $I_L1990_194) = $es_WR0_R1
 1999.                $I_L1990_194 = 1 + $I_L1990_194
 1998.                if ( $I_L1990_194 >= lmax ) exit
 1998.             enddo
 1998.          else
 1999.             if ( 0 < -1 + lmax ) then
 1990.                $I_L1990_214 = 0
 1990. !dir$ ivdep
 1990.                do
 1993.                   $es_WR0_R2 = beta(2 + 2 * $I_L1990_214)
 1993.                   es(1 + $I_L1990_214, 1 + lmax + $I_L1990_214) = $es_WR0_R2
 1994.                   es(1 + lmax + $I_L1990_214, 1 + $I_L1990_214) = $es_WR0_R2
 1996.                   $es_WR0_R3 = beta(3 + 2 * $I_L1990_214)
 1996.                   es(1 + $I_L1990_214, 2 + lmax + $I_L1990_214) = $es_WR0_R3
 1997.                   es(2 + lmax + $I_L1990_214, 1 + $I_L1990_214) = $es_WR0_R3
 1999.                   $I_L1990_214 = 1 + $I_L1990_214
 1998.                   if ( $I_L1990_214 >= -1 + lmax ) exit
 1998.                enddo
 1998.             endif
 1993.             es(lmax, 2 * lmax) = beta(2 * lmax)
 1994.             es(2 * lmax, lmax) = es(lmax, 2 * lmax)
 1994.          endif
 1994.       endif
 2000.       if ( mmax > 0 ) then
 2000.          $I_L2000_196 = 0
 2000. !dir$ ivdep
 2000.          do
 2003.             es(1 + lmax + $I_L2000_196, 1 + lmax + $I_L2000_196) = alfa(1 + 2 * $I_L2000_196)
 2005.             $es_WR0_R4 = gama(1 + 2 * $I_L2000_196)
 2005.             es(1 + lmax + $I_L2000_196, 1 + lmax + mmax + $I_L2000_196) = $es_WR0_R4
 2006.             es(1 + lmax + mmax + $I_L2000_196, 1 + lmax + $I_L2000_196) = $es_WR0_R4
 2007.             $I_L2000_196 = 1 + $I_L2000_196
 2000.             if ( $I_L2000_196 >= mmax ) exit
 2000.          enddo
 2000.       endif
 2009.       if ( ipr >= 3 ) then
 2010.          $Unit_temp_O0 = nfprt
 2010.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 2011.          $Unit_temp_O1 = nfprt
 2011.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' es:', 0x800600000000L ) ) )
 2012.          if ( nsy > 0 ) then
 2013.             if ( nsy > 0 ) then
 2012.                $I_L2012_248 = 0
 2012.                do
 2013.                   $Unit_temp_O2 = nfprt
 2013.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O2, Null_Arg, Null_Arg, t$129,  _substr(t$128,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2013.                   $I_L2013_198 = 0
 2013.                   do
 2013.                      if ( ( ( 1 + $I_L2012_248 ) <= 0 .or. ( 1 + $I_L2012_248 ) > t$127 ) /= .false. ) then
 2013.                          _substr(t$1011,1,17) = 'NonLinearNMI.f90'
 2013.                          _substr(t$1012,1,4) = 'ES'
 2013.                         t$1013 = 1 + $I_L2012_248
 2013.                         call _bounds_error(  _substr(t$1011,1,17), 2513,  _substr(t$1012,1,3), 1, 1, t$127, t$1013, t$1010 )
 2013.                      endif
 2013.                      $Unit_temp_O3 = nfprt
 2013.                      $IOitem_O26 = es(1 + $I_L2012_248, 1 + $I_L2013_198)
 2013.                      _fwrite( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$129,  _substr(t$128,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O26, 0x804060300000000L ) ) )
 2013.                      $I_L2013_198 = 1 + $I_L2013_198
 2013.                      if ( $I_L2013_198 >= nsy ) exit
 2013.                   enddo
 2013.                   $Unit_temp_O4 = nfprt
 2013.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O4, Null_Arg, Null_Arg, t$129,  _substr(t$128,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2014.                   $I_L2012_248 = 1 + $I_L2012_248
 2014.                   if ( $I_L2012_248 >= nsy ) exit
 2014.                enddo
 2014.             else
 2012.                $I_L2012_216 = 0
 2012.                do
 2013.                   $Unit_temp_O2 = nfprt
 2013.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O2, Null_Arg, Null_Arg, t$129,  _substr(t$128,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2013.                   $Unit_temp_O4 = nfprt
 2013.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O4, Null_Arg, Null_Arg, t$129,  _substr(t$128,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2014.                   $I_L2012_216 = 1 + $I_L2012_216
 2014.                   if ( $I_L2012_216 >= nsy ) exit
 2014.                enddo
 2014.             endif
 2014.          endif
 2014.       endif
 2017.       call tred2( nxsy, nsy, es(1, 1), ws(1), wk(1), xs(1, 1) )
 2018.       call tql2_i8( nxsy, nsy, ws(1), wk(1), xs(1, 1), eps, ierr )
 2020.       if ( ipr > 0 ) then
 2021.          $Unit_temp_O5 = nfprt
 2021.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 2022.          $Unit_temp_O6 = nfprt
 2022.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ws: ierr=', 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 2023.          $Unit_temp_O7 = nfprt
 2023.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O7, Null_Arg, Null_Arg, t$131,  _substr(t$130,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2023.          if ( nsy > 0 ) then
 2023.             $I_L2023_200 = 0
 2023.             do
 2023.                $Unit_temp_O8 = nfprt
 2023.                $IOitem_O27 = ws(1 + $I_L2023_200)
 2023.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O8, Null_Arg, Null_Arg, t$131,  _substr(t$130,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O27, 0x804060300000000L ) ) )
 2023.                $I_L2023_200 = 1 + $I_L2023_200
 2023.                if ( $I_L2023_200 >= nsy ) exit
 2023.             enddo
 2023.          endif
 2023.          $Unit_temp_O9 = nfprt
 2023.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O9, Null_Arg, Null_Arg, t$131,  _substr(t$130,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2023.       endif
 2028.       tm$532 = loc( xs(1, 1) )
 2028.       z = _copyin( xs(1, 1) )
 2028.       tm$534 = loc( es(1, 1) )
 2028.       zw = _copyin( es(1, 1) )
 2028.       t$109 = nxsy
 2028.       t$323 = max( 0, nxsy )
 2028.       t$324 = max( 0, nxsy )
 2028.       t$325 = max( 0, nxsy )
 2028.       if ( ( -1 + nsy ) > 0 ) then
 2028.          if ( nsy > 0 ) then
 2028.             do
 2028.                $k_S10 = 0
 2028.                $I_L2028_250 = 0
 2028.                do
 2028.                   if ( abs( ws(1 + $I_L2028_250) ) > abs( ws(2 + $I_L2028_250) ) ) then
 2028.                      $chg_S9 = ws(1 + $I_L2028_250)
 2028.                      $I_L2028_202 = 0
 2028. !dir$ ivdep
 2028.                      do
 2028.                         $wk_WR0_R5 = z(1 + $I_L2028_202, 1 + $I_L2028_250)
 2028.                         wk(1 + $I_L2028_202) = $wk_WR0_R5
 2028.                         z(1 + $I_L2028_202, 1 + $I_L2028_250) = z(1 + $I_L2028_202, 2 + $I_L2028_250)
 2028.                         z(1 + $I_L2028_202, 2 + $I_L2028_250) = $wk_WR0_R5
 2028.                         $I_L2028_202 = 1 + $I_L2028_202
 2028.                         if ( $I_L2028_202 >= nsy ) exit
 2028.                      enddo
 2028.                      ws(1 + $I_L2028_250) = ws(2 + $I_L2028_250)
 2028.                      ws(2 + $I_L2028_250) = $chg_S9
 2028.                      $k_S10 = 1
 2028.                   endif
 2028.                   $I_L2028_250 = 1 + $I_L2028_250
 2028.                   if ( $I_L2028_250 >= ( -1 + nsy ) ) exit
 2028.                enddo
 2028.                if ( $k_S10 == 0 ) exit
 2028.             enddo
 2028.          else
 2028.             do
 2028.                $k_S10 = 0
 2028.                $I_L2028_226 = 0
 2028. !dir$ unroll 4
 2028.                do
 2028.                   if ( abs( ws(1 + $I_L2028_226) ) > abs( ws(2 + $I_L2028_226) ) ) then
 2028.                      $chg_S9 = ws(1 + $I_L2028_226)
 2028.                      ws(1 + $I_L2028_226) = ws(2 + $I_L2028_226)
 2028.                      ws(2 + $I_L2028_226) = $chg_S9
 2028.                      $k_S10 = 1
 2028.                   endif
 2028.                   $I_L2028_226 = 1 + $I_L2028_226
 2028.                   if ( $I_L2028_226 >= ( -1 + nsy ) ) exit
 2028.                enddo
 2028.                if ( $k_S10 == 0 ) exit
 2028.             enddo
 2028.          endif
 2028.       endif
 2028.       if ( percut <= 0.0 ) then
 2028.          ncuts = nsy
 2028.       else
 2028.          $nc_S14 = 0
 2028.          if ( nsy > 0 ) then
 2028.             $I_L2028_204 = 0
 2028. !dir$ ivdep
 2028.             do
 2028.                if ( abs( 1.0/ws(1 + $I_L2028_204) ) > percut ) then
 2028.                   $nc_S14 = ( 1 + $I_L2028_204 )
 2028.                endif
 2028.                $I_L2028_204 = 1 + $I_L2028_204
 2028.                if ( $I_L2028_204 >= nsy ) exit
 2028.             enddo
 2028.             $I_L2028_232 = 0
 2028. !dir$ ivdep
 2028.             do
 2028.                wk(1 + $I_L2028_232) = ws(1 + $I_L2028_232)
 2028.                $I_L2028_232 = 1 + $I_L2028_232
 2028.                if ( $I_L2028_232 >= nsy ) exit
 2028.             enddo
 2028.             $I_L2028_258 = 0
 2028.             do
 2028.                $I_L2028_234 = 0
 2028. !dir$ ivdep
 2028.                do
 2028.                   zw(1 + $I_L2028_234, 1 + $I_L2028_258) = z(1 + $I_L2028_234, 1 + $I_L2028_258)
 2028.                   $I_L2028_234 = 1 + $I_L2028_234
 2028.                   if ( $I_L2028_234 >= nsy ) exit
 2028.                enddo
 2028.                $I_L2028_258 = 1 + $I_L2028_258
 2028.                if ( $I_L2028_258 >= nsy ) exit
 2028.             enddo
 2028.          endif
 2028.          ncuts = nsy + -$nc_S14
 2028.          if ( nxsy > 0 ) then
 2028.             if ( nsy > 0 ) then
 2028.                $I_L2028_260 = 0
 2028.                do
 2028.                   $I_L2028_236 = 0
 2028. !dir$ ivdep
 2028.                   do
 2028.                      z(1 + $I_L2028_236, 1 + $I_L2028_260) = 0.0
 2028.                      $I_L2028_236 = 1 + $I_L2028_236
 2028.                      if ( $I_L2028_236 >= nxsy ) exit
 2028.                   enddo
 2028.                   $I_L2028_260 = 1 + $I_L2028_260
 2028.                   if ( $I_L2028_260 >= nsy ) exit
 2028.                enddo
 2028.                $I_L2028_238 = 0
 2028. !dir$ ivdep
 2028.                do
 2028.                   ws(1 + $I_L2028_238) = 0.0
 2028.                   $I_L2028_238 = 1 + $I_L2028_238
 2028.                   if ( $I_L2028_238 >= nxsy ) exit
 2028.                enddo
 2028.             else
 2028.                $I_L2028_218 = 0
 2028. !dir$ ivdep
 2028.                do
 2028.                   ws(1 + $I_L2028_218) = 0.0
 2028.                   $I_L2028_218 = 1 + $I_L2028_218
 2028.                   if ( $I_L2028_218 >= nxsy ) exit
 2028.                enddo
 2028.             endif
 2028.          endif
 2028.          if ( nsy + -$nc_S14 > 0 ) then
 2028.             if ( nsy > 0 ) then
 2028.                $I_L2028_240 = 0
 2028. !dir$ ivdep
 2028.                do
 2028.                   ws(1 + $I_L2028_240) = wk(1 + $nc_S14 + $I_L2028_240)
 2028.                   $I_L2028_240 = 1 + $I_L2028_240
 2028.                   if ( $I_L2028_240 >= ( nsy + -$nc_S14 ) ) exit
 2028.                enddo
 2028.                $I_L2028_262 = 0
 2028.                do
 2028.                   $I_L2028_242 = 0
 2028. !dir$ ivdep
 2028.                   do
 2028.                      z(1 + $I_L2028_242, 1 + $I_L2028_262) = zw(1 + $I_L2028_242, 1 + $nc_S14 + $I_L2028_262)
 2028.                      $I_L2028_242 = 1 + $I_L2028_242
 2028.                      if ( $I_L2028_242 >= nsy ) exit
 2028.                   enddo
 2028.                   $I_L2028_262 = 1 + $I_L2028_262
 2028.                   if ( $I_L2028_262 >= ( nsy + -$nc_S14 ) ) exit
 2028.                enddo
 2028.             else
 2028.                $I_L2028_220 = 0
 2028. !dir$ ivdep
 2028.                do
 2028.                   ws(1 + $I_L2028_220) = wk(1 + $nc_S14 + $I_L2028_220)
 2028.                   $I_L2028_220 = 1 + $I_L2028_220
 2028.                   if ( $I_L2028_220 >= ( nsy + -$nc_S14 ) ) exit
 2028.                enddo
 2028.             endif
 2028.          endif
 2028.          if ( $nc_S14 > 0 ) then
 2028.             if ( nsy > 0 ) then
 2028.                $I_L2028_244 = 0
 2028. !dir$ ivdep
 2028.                do
 2028.                   ws(1 + nsy + $I_L2028_244 + -$nc_S14) = wk(1 + $I_L2028_244)
 2028.                   $I_L2028_244 = 1 + $I_L2028_244
 2028.                   if ( $I_L2028_244 >= $nc_S14 ) exit
 2028.                enddo
 2028.                $I_L2028_264 = 0
 2028.                do
 2028.                   $I_L2028_246 = 0
 2028. !dir$ ivdep
 2028.                   do
 2028.                      z(1 + $I_L2028_246, 1 + nsy + $I_L2028_264 + -$nc_S14) = zw(1 + $I_L2028_246, 1 + $I_L2028_264)
 2028.                      $I_L2028_246 = 1 + $I_L2028_246
 2028.                      if ( $I_L2028_246 >= nsy ) exit
 2028.                   enddo
 2028.                   $I_L2028_264 = 1 + $I_L2028_264
 2028.                   if ( $I_L2028_264 >= $nc_S14 ) exit
 2028.                enddo
 2028.             else
 2028.                $I_L2028_222 = 0
 2028. !dir$ ivdep
 2028.                do
 2028.                   ws(1 + nsy + $I_L2028_222 + -$nc_S14) = wk(1 + $I_L2028_222)
 2028.                   $I_L2028_222 = 1 + $I_L2028_222
 2028.                   if ( $I_L2028_222 >= $nc_S14 ) exit
 2028.                enddo
 2028.             endif
 2028.          endif
 2028.       endif
 2028.       es(1, 1) = _copyout( zw )
 2028.       xs(1, 1) = _copyout( z )
 2029.       tm$538 = loc( xs(1, 1) )
 2029.       a = _copyin( xs(1, 1) )
 2029.       t$107 = nxsy
 2029.       t$317 = max( 0, nxsy )
 2029.       t$318 = max( 0, nxsy )
 2029.       t$319 = max( 0, nxsy )
 2029.       if ( ncuts > 0 ) then
 2029.          if ( nsy > 0 ) then
 2029.             $I_L2029_252 = 0
 2029.             do
 2029.                $I_L2029_206 = 0
 2029. !dir$ ivdep
 2029.                do
 2029.                   if ( abs( a(1 + $I_L2029_206, 1 + $I_L2029_252) ) <= eps ) then
 2029.                      a(1 + $I_L2029_206, 1 + $I_L2029_252) = 0.0
 2029.                   endif
 2029.                   $I_L2029_206 = 1 + $I_L2029_206
 2029.                   if ( $I_L2029_206 >= nsy ) exit
 2029.                enddo
 2029.                $I_L2029_252 = 1 + $I_L2029_252
 2029.                if ( $I_L2029_252 >= ncuts ) exit
 2029.             enddo
 2029.          endif
 2029.       endif
 2029.       xs(1, 1) = _copyout( a )
 2031.       if ( ipr > 0 ) then
 2032.          $Unit_temp_O10 = nfprt
 2032.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O10, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 2033.          $Unit_temp_O11 = nfprt
 2033.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O11, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' frequency: nsy=', 0x800600000000L ), _iotype( nsy, 0x804060200000000L ), _iotype( ' ncuts=', 0x800600000000L ), _iotype( ncuts, 0x804060200000000L ) ) )
 2034.          $Unit_temp_O12 = nfprt
 2034.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O12, Null_Arg, Null_Arg, t$133,  _substr(t$132,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2034.          if ( ncuts > 0 ) then
 2034.             $I_L2034_208 = 0
 2034.             do
 2034.                $Unit_temp_O13 = nfprt
 2034.                $IOitem_O14 = ( ws(1 + $I_L2034_208) * 1.0/twomg )
 2034.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O13, Null_Arg, Null_Arg, t$133,  _substr(t$132,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O14, 0x4000300000000L ) ) )
 2034.                $I_L2034_208 = 1 + $I_L2034_208
 2034.                if ( $I_L2034_208 >= ncuts ) exit
 2034.             enddo
 2034.          endif
 2034.          $Unit_temp_O15 = nfprt
 2034.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O15, Null_Arg, Null_Arg, t$133,  _substr(t$132,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2035.          $Unit_temp_O16 = nfprt
 2035.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O16, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' period:', 0x800600000000L ) ) )
 2036.          $Unit_temp_O17 = nfprt
 2036.          _fwrite( _clist( 0, 0, 2, $Unit_temp_O17, Null_Arg, Null_Arg, t$135,  _substr(t$134,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2036.          if ( ncuts > 0 ) then
 2036.             $I_L2036_210 = 0
 2036.             do
 2036.                $Unit_temp_O18 = nfprt
 2036.                $IOitem_O19 = 1.0/ws(1 + $I_L2036_210)
 2036.                _fwrite( _clist( 0, 0, 0, $Unit_temp_O18, Null_Arg, Null_Arg, t$135,  _substr(t$134,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O19, 0x4000300000000L ) ) )
 2036.                $I_L2036_210 = 1 + $I_L2036_210
 2036.                if ( $I_L2036_210 >= ncuts ) exit
 2036.             enddo
 2036.          endif
 2036.          $Unit_temp_O20 = nfprt
 2036.          _fwrite( _clist( 0, 0, 1, $Unit_temp_O20, Null_Arg, Null_Arg, t$135,  _substr(t$134,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2037.          $Unit_temp_O21 = nfprt
 2037.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O21, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ', 0x800600000000L ) ) )
 2038.          $Unit_temp_O22 = nfprt
 2038.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O22, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' xs:', 0x800600000000L ) ) )
 2039.          if ( nsy > 0 ) then
 2040.             if ( ( min( 6, ncuts ) ) > 0 ) then
 2039.                $I_L2039_254 = 0
 2039.                do
 2040.                   $Unit_temp_O23 = nfprt
 2040.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O23, Null_Arg, Null_Arg, t$137,  _substr(t$136,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2040.                   $I_L2040_212 = 0
 2040.                   do
 2040.                      if ( ( ( 1 + $I_L2039_254 ) <= 0 .or. ( 1 + $I_L2039_254 ) > t$127 ) /= .false. ) then
 2040.                          _substr(t$1030,1,17) = 'NonLinearNMI.f90'
 2040.                          _substr(t$1031,1,4) = 'XS'
 2040.                         t$1013 = 1 + $I_L2039_254
 2040.                         call _bounds_error(  _substr(t$1030,1,17), 2540,  _substr(t$1031,1,3), 1, 1, t$127, t$1013, t$1029 )
 2040.                      endif
 2040.                      $Unit_temp_O24 = nfprt
 2040.                      $IOitem_O28 = xs(1 + $I_L2039_254, 1 + $I_L2040_212)
 2040.                      _fwrite( _clist( 0, 0, 0, $Unit_temp_O24, Null_Arg, Null_Arg, t$137,  _substr(t$136,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O28, 0x804060300000000L ) ) )
 2040.                      $I_L2040_212 = 1 + $I_L2040_212
 2040.                      if ( $I_L2040_212 >= min( 6, ncuts ) ) exit
 2040.                   enddo
 2040.                   $Unit_temp_O25 = nfprt
 2040.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O25, Null_Arg, Null_Arg, t$137,  _substr(t$136,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2041.                   $I_L2039_254 = 1 + $I_L2039_254
 2041.                   if ( $I_L2039_254 >= nsy ) exit
 2041.                enddo
 2041.             else
 2039.                $I_L2039_224 = 0
 2039.                do
 2040.                   $Unit_temp_O23 = nfprt
 2040.                   _fwrite( _clist( 0, 0, 2, $Unit_temp_O23, Null_Arg, Null_Arg, t$137,  _substr(t$136,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2040.                   $Unit_temp_O25 = nfprt
 2040.                   _fwrite( _clist( 0, 0, 1, $Unit_temp_O25, Null_Arg, Null_Arg, t$137,  _substr(t$136,1,11), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 2041.                   $I_L2039_224 = 1 + $I_L2039_224
 2041.                   if ( $I_L2039_224 >= nsy ) exit
 2041.                enddo
 2041.             endif
 2041.          endif
 2041.       endif
 2043.       return
 2043.       end
 2043.       
 2102.       
 2102.       subroutine vereig( gg, siman, eigvc, col, vec, val, eps, matz )
 2050.       t$138 = kmax
 2055.       t$342 = _zla( 0, kmax )
 2050.       t$343 = _zla( 0, kmax )
 2050.       t$344 = _zla( 0, kmax ) * _zla( 0, kmax )
 2059.       t$347 = 8 * _zla( 0, kmax )
 2059.       t$348 = 8 * ( 7 + 8 * _zla( 0, kmax ) ) / 8
 2059.       t$350 = t$348 + 8 * _zla( 0, kmax )
 2058.       t$352 = t$348 + 12 * _zla( 0, kmax )
 2059.       t$353 = 8 * ( 7 + t$348 + 12 * _zla( 0, kmax ) ) / 8
 2059.       t$355 = t$353 + 8 * _zla( 0, kmax )
 2059.       t$356 = 8 * ( 7 + t$353 + 8 * _zla( 0, kmax ) ) / 8
 2059.       t$358 = t$356 + 8 * _zla( 0, kmax )
 2050.       t$345 = int( _alloc( t$356 + 8 * _zla( 0, kmax ) ), 8 )
 2059.       t$346 = t$345
 2059.       t$349 = t$348 + t$345
 2058.       t$351 = t$348 + t$345 + 8 * _zla( 0, kmax )
 2059.       t$354 = t$353 + t$345
 2059.       t$357 = t$356 + t$345
 2066.       call rg( kmax, kmax, gg(1, 1), eigvr(1), eigvi(1), matz, eigvc(1, 1), ier, eps, wk1(1), wk2(1) )
 2068.       if ( kmax > 0 ) then
 2068.          $I_L2068_32 = 0
 2068.          do
 2070.             col(1 + $I_L2068_32) = siman * eigvr(1 + $I_L2068_32)
 2071.             soma = 0.0
 2072.             $I_L2072_24 = 0
 2072. !dir$ ivdep
 2072.             do
 2073.                soma = soma + eigvc(1 + $I_L2072_24, 1 + $I_L2068_32) * eigvc(1 + $I_L2072_24, 1 + $I_L2068_32)
 2074.                $I_L2072_24 = 1 + $I_L2072_24
 2072.                if ( $I_L2072_24 >= kmax ) exit
 2072.             enddo
 2076.             $soma_S3 = _recip_sqrt( soma )
 2077.             $I_L2077_26 = 0
 2077. !dir$ ivdep
 2077.             do
 2078.                eigvc(1 + $I_L2077_26, 1 + $I_L2068_32) = $soma_S3 * eigvc(1 + $I_L2077_26, 1 + $I_L2068_32)
 2079.                $I_L2077_26 = 1 + $I_L2077_26
 2077.                if ( $I_L2077_26 >= kmax ) exit
 2077.             enddo
 2080.             $I_L2068_32 = 1 + $I_L2068_32
 2079.             if ( $I_L2068_32 >= kmax ) exit
 2079.          enddo
 2086.          $I_L2086_34 = 0
 2086.          do
 2090.             $W1 = kmax
 2090.             $W2 = 1
 2090.             $Maxmin_x_W0 = _idamax( $W1, col(1), $W2 )
 2090.             $kkk_S6 = cvmg( $Maxmin_x_W0, 0, abs( col($Maxmin_x_W0) ) > -1.0e20 )
 2095.             val(1 + $I_L2086_34) = col($kkk_S6)
 2096.             col($kkk_S6) = 0.0
 2097.             $I_L2097_30 = 0
 2097. !dir$ ivdep
 2097.             do
 2098.                vec(1 + $I_L2097_30, 1 + $I_L2086_34) = eigvc(1 + $I_L2097_30, $kkk_S6)
 2099.                $I_L2097_30 = 1 + $I_L2097_30
 2097.                if ( $I_L2097_30 >= kmax ) exit
 2097.             enddo
 2101.             $I_L2086_34 = 1 + $I_L2086_34
 2099.             if ( $I_L2086_34 >= kmax ) exit
 2099.          enddo
 2099.       endif
 2050.       _free( t$345 )
 2102.       return
 2102.       end
 2102.       
 2110.       
 2110.       subroutine w3fa03( press, temp )
 2137.       if ( press < 54.748699999999999 ) then
 2110.          goto 10
 2137.       else if ( press <= 226.321 ) then
 2141.          temp = 216.65000000000001
 2141.       else
 2141.    10    continue
 2143.          if ( press < 54.748699999999999 ) then
 2149.             $height_S0 = 20000.0 + -243580.51987476368 * ( 8.8943894245479915e-1 + -_exp3( log( abs( press ) ), press, -2.9270953893531435e-2 ) )
 2150.             temp = 216.65000000000001 + 1.0e-3 * ( -20000.0 + $height_S0 )
 2150.          else
 2152.             $height_S1 = 11880.480800667456 * ( 3.7313952166210886 + -_exp3( log( abs( press ) ), press, 1.9026120030795432e-1 ) )
 2153.             temp = 288.14999999999998 + -6.4999999999999997e-3 * $height_S1
 2153.          endif
 2153.       endif
 2156.       return
 2156.       end
 2156.       
 2160.       
 2160.       subroutine setmods( gh )
 2160.       gh%dim_1%LB = 1
 2165.       mods = 0
 2166.       if ( kmax > 0 ) then
 2167.          $SC_gh_I1 = gh%dim_1%SM
 2167.          $SC_gh_I0 = gh%dim_1%EX
 2166.          $I_L2166_8 = 0
 2166. !dir$ ivdep
 2166.          do
 2167.             if ( 1.020408163265306e-1 * (gh%base_addr)(1 + $I_L2166_8, 0) > 1000.0 ) then
 2168.                mods = 1 + mods
 2168.             endif
 2171.             $I_L2166_8 = 1 + $I_L2166_8
 2170.             if ( $I_L2166_8 >= kmax ) exit
 2170.          enddo
 2170.       endif
 2172.       if ( mods == 0 ) then
 2173.          $Unit_temp_O0 = nfprt
 2173.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$140,  _substr(t$139,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' ERROR: The Equivalent Heights of Normal Modes is Wrong', 0x800600000000L ) ) )
 2174.           _substr(t$1053,1,24) = 'SetMods  ==> (mods == 0)'
 2174.          call _stop(  _substr(t$1053,1,24) )
 2175.       else if ( nmodperg%header%assoc /= 1 ) then
 2180.          nmodperg%header%a_contig = 1
 2180.          nmodperg%dim_1%LB = 1
 2180.          nmodperg%dim_1%EX = ( max( 0, ngroups_four ) )
 2180.          nmodperg%dim_1%SM = 1
 2180.          $_allo_P0(0) = 0x1000000000001L
 2180.          $_allo_P0(1) = loc( nmodperg )
 2180.          call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 2181.          grouphasmod%header%a_contig = 1
 2181.          grouphasmod%dim_1%LB = 1
 2181.          grouphasmod%dim_1%EX = ( max( 0, mods ) )
 2181.          grouphasmod%dim_1%SM = 1
 2181.          $_allo_P1(0) = 0x1000000000001L
 2181.          $_allo_P1(1) = loc( grouphasmod )
 2181.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 2182.          $modperg_S3 = mods / ngroups_four
 2184.          $m_S2 = 0
 2185.          if ( ngroups_four > 0 ) then
 2185.             $I_L2185_10 = 0
 2194.             if ( 0 > -1 + mods + -( ngroups_four * $modperg_S3 ) ) then
 2194.                goto 10
 2194.             else
 2185.                $I_L2185_12 = 0
 2185.                do
 2186.                   if ( mygroup_four + -$I_L2185_12 == 1 ) then
 2186.                      myfirstmod = 1 + $m_S2
 2186.                   endif
 2188.                   (nmodperg%base_addr)(1 + $I_L2185_12, 0) = 1 + $modperg_S3
 2192.                   $F_A33 = ( 1 + $modperg_S3 )
 2192.                   if ( $modperg_S3 >= 0 ) then
 2192.                      $I_A1 = 0
 2192. !dir$ ivdep
 2192.                      do
 2192.                         (grouphasmod%base_addr)(1 + $m_S2 + $I_A1, 0) = ( 1 + $I_L2185_12 )
 2192.                         $I_A1 = 1 + $I_A1
 2192.                         if ( $I_A1 >= $F_A33 ) exit
 2192.                      enddo
 2192.                   endif
 2193.                   $m_S2 = 1 + $m_S2 + $modperg_S3
 2194.                   $I_L2185_12 = 1 + $I_L2185_12
 2191.                   if ( $I_L2185_12 >= min( ngroups_four, ( mods + -( ngroups_four * $modperg_S3 ) ) ) ) exit
 2191.                enddo
 2194.                $I_L2185_10 = min( ngroups_four, ( mods + -( ngroups_four * $modperg_S3 ) ) )
 2194.                if ( ( mods + -( ngroups_four * $modperg_S3 ) ) < ngroups_four ) then
 2194.    10             continue
 2185.                   $I_L2185_14 = 0
 2185.                   do
 2186.                      if ( mygroup_four + -$I_L2185_10 + -$I_L2185_14 == 1 ) then
 2186.                         myfirstmod = 1 + $m_S2
 2186.                      endif
 2190.                      (nmodperg%base_addr)(1 + $I_L2185_10 + $I_L2185_14, 0) = $modperg_S3
 2192.                      $F_A33 = $modperg_S3
 2192.                      if ( $modperg_S3 > 0 ) then
 2192.                         $I_A1 = 0
 2192. !dir$ ivdep
 2192.                         do
 2192.                            (grouphasmod%base_addr)(1 + $m_S2 + $I_A1, 0) = ( 1 + $I_L2185_10 + $I_L2185_14 )
 2192.                            $I_A1 = 1 + $I_A1
 2192.                            if ( $I_A1 >= $F_A33 ) exit
 2192.                         enddo
 2192.                      endif
 2193.                      $m_S2 = $m_S2 + $modperg_S3
 2194.                      $I_L2185_14 = 1 + $I_L2185_14
 2191.                      if ( $I_L2185_14 >= ngroups_four + -$I_L2185_10 ) exit
 2191.                   enddo
 2191.                endif
 2191.             endif
 2191.          endif
 2195.          modsloc = (nmodperg%base_addr)(mygroup_four, 0)
 2195.       endif
 2197.       return
 2197.       end
 2197.       
  134.       
  134.       module nonlinearnmi
  134.       end
  134.       
