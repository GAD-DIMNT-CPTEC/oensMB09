       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  Rad_UKMO.f90
       !        File                  :  Rad_UKMO.opt
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
    9.       
    9.       module realtype_rd
    9.       end
    9.       
   14.       
   14.       module dimensions_spec_ucf
   14.       end
   14.       
   81.       
   81.       module aerosol_component_pcf
   81.       end
   81.       
  183.       
  183.       module aerosol_parametrization_pcf
  183.       end
  183.       
  218.       
  218.       module angular_integration_pcf
  218.       end
  218.       
  256.       
  256.       module cloud_component_pcf
  256.       end
  256.       
  294.       
  294.       module cloud_parametrization_pcf
  294.       end
  294.       
  344.       
  344.       module cloud_region_pcf
  344.       end
  344.       
  384.       
  384.       module cloud_representation_pcf
  384.       end
  384.       
  434.       
  434.       module cloud_scheme_pcf
  434.       end
  434.       
  488.       
  488.       module cloud_type_pcf
  488.       end
  488.       
  543.       
  543.       module continuum_pcf
  543.       end
  543.       
  575.       
  575.       module def_spectrum
  575.       end
  575.       
  843.       
  843.       module def_ss_prop
  843.       end
  843.       
  933.       
  933.       module def_std_io_icf
  933.       end
  933.       
  968.       
  968.       module def_um_nml
  968.       end
  968.       
 1201.       
 1201.       module diff_elsasser_ccf
 1201.       end
 1201.       
 1240.       
 1240.       module diff_keqv_ucf
 1240.       end
 1240.       
 1281.       
 1281.       module dimensions_field_ucf
 1281.       end
 1281.       
 1336.       
 1336.       module dimensions_fixed_pcf
 1336.       end
 1336.       
 1370.       
 1370.       module error_pcf
 1370.       end
 1370.       
 1410.       
 1410.       module gas_list_pcf
 1410.       end
 1410.       
 1500.       
 1500.       module gas_overlap_pcf
 1500.       end
 1500.       
 1543.       
 1543.       module gaussian_weight_pcf
 1543.       end
 1543.       
 1666.       
 1666.       module ice_cloud_parametrization_pcf
 1666.       end
 1666.       
 1721.       
 1721.       module k_scale_pcf
 1721.       end
 1721.       
 1757.       
 1757.       module math_cnst_ccf
 1757.       end
 1757.       
 1787.       
 1787.       module phase_pcf
 1787.       end
 1787.       
 1822.       
 1822.       module physical_constants_0_ccf
 1822.       end
 1822.       
 1869.       
 1869.       module physical_constants_1_ccf
 1869.       end
 1869.       
 1919.       
 1919.       module scale_fnc_pcf
 1919.       end
 1919.       
 1962.       
 1962.       module scatter_method_pcf
 1962.       end
 1962.       
 2008.       
 2008.       module solver_pcf
 2008.       end
 2008.       
 2093.       
 2093.       module source_coeff_pointer_pcf
 2093.       end
 2093.       
 2136.       
 2136.       module spectral_region_pcf
 2136.       end
 2136.       
 2166.       
 2166.       module sph_algorithm_pcf
 2166.       end
 2166.       
 2208.       
 2208.       module sph_mode_pcf
 2208.       end
 2208.       
 2253.       
 2253.       module sph_qr_iter_acf
 2253.       end
 2253.       
 2295.       
 2295.       module sph_truncation_pcf
 2295.       end
 2295.       
 2338.       
 2338.       module surface_spec_pcf
 2338.       end
 2338.       
 2395.       
 2395.       module two_stream_scheme_pcf
 2395.       end
 2395.       
 2485.       
 2485.       subroutine radiance_calc( ierr, l_rayleigh, l_aerosol, l_gas, l_continuum, l_cloud, l_drop, l_ice, i_angular_integration, l_rescale, n_order_forward, i_2stream, n_order_gauss, i_truncation, ls_global_trunc, ms_min, ms_max, accuracy_adaptive, euler_factor, l_henyey_greenstein_pf, ls_brdf_trunc, i_sph_algorithm, n_order_phase_solar, n_direction, direction, n_viewing_level, viewing_level, i_sph_mode, i_scatter_method, l_global_cloud_top, n_global_cloud_top, i_solver, map_channel, n_band, i_first_band, i_last_band, weight_band, n_profile, n_layer, p, t, t_ground, t_level, d_mass, isolir, zen_0, solar_irrad, solar_flux_band, rayleigh_coefficient, n_deg_fit, thermal_coefficient, t_ref_planck, l_ir_source_quad, i_gas_overlap, i_gas, gas_mix_ratio, n_band_absorb, index_absorb, i_band_esft, w_esft, k_esft, i_scale_esft, i_scale_fnc, scale_vector, p_reference, t_reference, l_doppler, doppler_correction, n_brdf_basis_fnc, rho_alb, f_brdf, l_tile, n_point_tile, n_tile, list_tile, rho_alb_tile, frac_tile, t_tile, n_band_continuum, index_continuum, index_water, k_continuum, i_scale_fnc_cont, scale_continuum, p_ref_continuum, t_ref_continuum, n_aerosol, aerosol_mix_ratio, aerosol_absorption, aerosol_scattering, n_aerosol_phf_term, aerosol_phase_fnc, i_aerosol_parametrization, nhumidity, humidities, n_opt_level_aerosol_prsc, n_phase_term_aerosol_prsc, aerosol_pressure_prsc, aerosol_absorption_prsc, aerosol_scattering_prsc, aerosol_phase_fnc_prsc, n_condensed, type_condensed, i_cloud, i_cloud_representation, w_cloud, n_cloud_type, frac_cloud, condensed_mix_ratio, condensed_dim_char, i_condensed_param, condensed_n_phf, condensed_param_list, dp_corr_strat, dp_corr_conv, n_opt_level_drop_prsc, n_phase_term_drop_prsc, drop_pressure_prsc, drop_absorption_prsc, drop_scattering_prsc, drop_phase_fnc_prsc, n_opt_level_ice_prsc, n_phase_term_ice_prsc, ice_pressure_prsc, ice_absorption_prsc, ice_scattering_prsc, ice_phase_fnc_prsc, flux_direct, flux_down, flux_up, radiance, photolysis, l_clear, i_solver_clear, flux_direct_clear, flux_down_clear, flux_up_clear, l_blue_flux_surf, weight_blue, flux_direct_blue_surf, flux_down_blue_surf, flux_up_blue_surf, flux_up_tile, flux_up_blue_tile, nd_profile, nd_layer, nd_column, nd_layer_clr, id_ct, nd_2sg_profile, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_channel, nd_band, nd_species, nd_esft_term, nd_scale_variable, nd_continuum, nd_aerosol_species, nd_humidities, nd_cloud_parameter, nd_thermal_coeff, nd_source_coeff, nd_brdf_basis_fnc, nd_brdf_trunc, nd_profile_aerosol_prsc, nd_profile_cloud_prsc, nd_opt_level_aerosol_prsc, nd_opt_level_cloud_prsc, nd_phase_term, nd_max_order, nd_sph_coeff, nd_direction, nd_viewing_level, nd_region, nd_cloud_type, nd_cloud_component, nd_overlap_coeff, nd_point_tile, nd_tile )
 2485.       t$75 = nd_radiance_profile
 2485.       t$76 = nd_direction
 2775.       t$1030 = _zla( 0, nd_radiance_profile )
 2485.       t$1031 = _zla( 0, nd_radiance_profile )
 2775.       t$1032 = _zla( 0, nd_direction )
 2485.       t$1033 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
 2485.       t$1034 = 2 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
 2485.       t$77 = nd_viewing_level
 2777.       t$1035 = _zla( 0, nd_viewing_level )
 2485.       t$74 = nd_band
 3102.       t$1036 = _zla( 0, nd_band )
 2485.       t$78 = nd_profile
 2485.       t$79 = nd_layer
 2811.       t$1037 = _zla( 0, nd_profile )
 2485.       t$1038 = _zla( 0, nd_profile )
 2811.       t$1039 = _zla( 0, nd_layer )
 2485.       t$1040 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 2485.       t$1041 = 1 + nd_layer
 2817.       t$1042 = _zla( 0, 1 + nd_layer )
 2485.       t$1043 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
 2485.       t$100 = ( -1 + nd_thermal_coeff )
 2485.       t$1044 = nd_thermal_coeff
 3084.       t$1045 = _zla( 0, nd_thermal_coeff )
 2485.       t$1046 = _zla( 0, nd_thermal_coeff )
 2485.       t$1047 = _zla( 0, nd_band ) * _zla( 0, nd_thermal_coeff )
 2485.       t$80 = nd_species
 2485.       t$1048 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 2821.       t$1049 = _zla( 0, nd_species )
 2485.       t$1050 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_species )
 2485.       t$1051 = _zla( 0, nd_species )
 2485.       t$1052 = _zla( 0, nd_band ) * _zla( 0, nd_species )
 2485.       t$1053 = _zla( 0, nd_band )
 2485.       t$1054 = _zla( 0, nd_band ) * _zla( 0, nd_species )
 2485.       t$86 = nd_esft_term
 2887.       t$1055 = _zla( 0, nd_esft_term )
 2485.       t$1056 = _zla( 0, nd_esft_term )
 2485.       t$1057 = _zla( 0, nd_band ) * _zla( 0, nd_esft_term )
 2485.       t$1058 = _zla( 0, nd_band ) * _zla( 0, nd_species ) * _zla( 0, nd_esft_term )
 2485.       t$87 = nd_scale_variable
 2891.       t$1059 = _zla( 0, nd_scale_variable )
 2485.       t$1060 = _zla( 0, nd_scale_variable )
 2485.       t$1061 = _zla( 0, nd_esft_term ) * _zla( 0, nd_scale_variable )
 2485.       t$1062 = _zla( 0, nd_band ) * _zla( 0, nd_esft_term ) * _zla( 0, nd_scale_variable )
 2485.       t$1063 = _zla( 0, nd_band ) * _zla( 0, nd_species ) * _zla( 0, nd_esft_term ) * _zla( 0, nd_scale_variable )
 2485.       t$81 = nd_brdf_basis_fnc
 2829.       t$1064 = _zla( 0, nd_brdf_basis_fnc )
 2485.       t$1065 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
 2485.       t$1066 = _zla( 0, nd_band ) * _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
 2485.       t$82 = nd_brdf_trunc / 2
 2485.       t$83 = nd_brdf_trunc
 2485.       t$1067 = _zla( 0, nd_brdf_basis_fnc )
 2485.       t$1068 = 1 + t$82
 2831.       t$1069 = _zla( 0, 1 + t$82 )
 2485.       t$1070 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$82 )
 2485.       t$1071 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$82 ) * _zla( 0, 1 + t$82 )
 2485.       t$1072 = 1 + nd_brdf_trunc
 2831.       t$1073 = _zla( 0, 1 + nd_brdf_trunc )
 2485.       t$1074 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$82 ) * _zla( 0, 1 + t$82 ) * _zla( 0, 1 + nd_brdf_trunc )
 2485.       t$84 = nd_point_tile
 2844.       t$1075 = _zla( 0, nd_point_tile )
 2485.       t$85 = nd_tile
 2485.       t$1076 = _zla( 0, nd_point_tile )
 2485.       t$1077 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_point_tile )
 2847.       t$1078 = _zla( 0, nd_tile )
 2485.       t$1079 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_point_tile ) * _zla( 0, nd_tile )
 2485.       t$1080 = _zla( 0, nd_band ) * _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_point_tile ) * _zla( 0, nd_tile )
 2485.       t$1081 = _zla( 0, nd_point_tile ) * _zla( 0, nd_tile )
 2485.       t$88 = nd_continuum
 2906.       t$1082 = _zla( 0, nd_continuum )
 2485.       t$1083 = _zla( 0, nd_band ) * _zla( 0, nd_continuum )
 2485.       t$1084 = _zla( 0, nd_band ) * _zla( 0, nd_scale_variable )
 2485.       t$1085 = _zla( 0, nd_band ) * _zla( 0, nd_scale_variable ) * _zla( 0, nd_continuum )
 2485.       t$1086 = _zla( 0, nd_continuum )
 2485.       t$1087 = _zla( 0, nd_band ) * _zla( 0, nd_continuum )
 2485.       t$96 = nd_aerosol_species
 3038.       t$1088 = _zla( 0, nd_aerosol_species )
 2485.       t$1089 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_aerosol_species )
 2485.       t$97 = nd_humidities
 3042.       t$1090 = _zla( 0, nd_humidities )
 2485.       t$1091 = _zla( 0, nd_humidities )
 2485.       t$1092 = _zla( 0, nd_aerosol_species ) * _zla( 0, nd_humidities )
 2485.       t$1093 = _zla( 0, nd_band ) * _zla( 0, nd_aerosol_species ) * _zla( 0, nd_humidities )
 2485.       t$95 = nd_phase_term
 3048.       t$1094 = _zla( 0, nd_phase_term )
 2485.       t$1095 = _zla( 0, nd_humidities ) * _zla( 0, nd_phase_term )
 2485.       t$1096 = _zla( 0, nd_aerosol_species ) * _zla( 0, nd_humidities ) * _zla( 0, nd_phase_term )
 2485.       t$1097 = _zla( 0, nd_band ) * _zla( 0, nd_aerosol_species ) * _zla( 0, nd_humidities ) * _zla( 0, nd_phase_term )
 2485.       t$1098 = _zla( 0, nd_aerosol_species ) * _zla( 0, nd_humidities )
 2485.       t$98 = nd_profile_aerosol_prsc
 2485.       t$99 = nd_opt_level_aerosol_prsc
 3063.       t$1099 = _zla( 0, nd_profile_aerosol_prsc )
 2485.       t$1100 = _zla( 0, nd_profile_aerosol_prsc )
 3063.       t$1101 = _zla( 0, nd_opt_level_aerosol_prsc )
 2485.       t$1102 = _zla( 0, nd_profile_aerosol_prsc ) * _zla( 0, nd_opt_level_aerosol_prsc )
 2485.       t$1103 = _zla( 0, nd_aerosol_species ) * _zla( 0, nd_profile_aerosol_prsc ) * _zla( 0, nd_opt_level_aerosol_prsc )
 2485.       t$1104 = _zla( 0, nd_aerosol_species ) * _zla( 0, nd_profile_aerosol_prsc ) * _zla( 0, nd_opt_level_aerosol_prsc )
 2485.       t$1105 = _zla( 0, nd_band ) * _zla( 0, nd_aerosol_species ) * _zla( 0, nd_profile_aerosol_prsc ) * _zla( 0, nd_opt_level_aerosol_prsc )
 2485.       t$1106 = _zla( 0, nd_phase_term ) * _zla( 0, nd_profile_aerosol_prsc ) * _zla( 0, nd_opt_level_aerosol_prsc )
 2485.       t$1107 = _zla( 0, nd_aerosol_species ) * _zla( 0, nd_phase_term ) * _zla( 0, nd_profile_aerosol_prsc ) * _zla( 0, nd_opt_level_aerosol_prsc )
 2485.       t$1108 = _zla( 0, nd_band ) * _zla( 0, nd_aerosol_species ) * _zla( 0, nd_phase_term ) * _zla( 0, nd_profile_aerosol_prsc ) * _zla( 0, nd_opt_level_aerosol_prsc )
 2485.       t$91 = nd_cloud_component
 2951.       t$1109 = _zla( 0, nd_cloud_component )
 2485.       t$89 = id_ct
 2485.       t$1110 = 1 + nd_layer + -id_ct
 2928.       t$1111 = _zla( 0, 1 + nd_layer + -id_ct )
 2485.       t$1112 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
 2485.       t$90 = nd_cloud_type
 2485.       t$1113 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
 2930.       t$1114 = _zla( 0, nd_cloud_type )
 2485.       t$1115 = _zla( 0, nd_profile ) * _zla( 0, nd_cloud_type ) * _zla( 0, 1 + nd_layer + -id_ct )
 2485.       t$1116 = _zla( 0, nd_profile ) * _zla( 0, nd_cloud_component ) * _zla( 0, 1 + nd_layer + -id_ct )
 2485.       t$92 = nd_cloud_parameter
 2971.       t$1117 = _zla( 0, nd_cloud_parameter )
 2485.       t$1118 = _zla( 0, nd_cloud_parameter )
 2485.       t$1119 = _zla( 0, nd_cloud_component ) * _zla( 0, nd_cloud_parameter )
 2485.       t$1120 = _zla( 0, nd_band ) * _zla( 0, nd_cloud_component ) * _zla( 0, nd_cloud_parameter )
 2485.       t$93 = nd_profile_cloud_prsc
 2485.       t$94 = nd_opt_level_cloud_prsc
 2986.       t$1121 = _zla( 0, nd_profile_cloud_prsc )
 2485.       t$1122 = _zla( 0, nd_profile_cloud_prsc )
 2986.       t$1123 = _zla( 0, nd_opt_level_cloud_prsc )
 2485.       t$1124 = _zla( 0, nd_profile_cloud_prsc ) * _zla( 0, nd_opt_level_cloud_prsc )
 2485.       t$1125 = _zla( 0, nd_profile_cloud_prsc ) * _zla( 0, nd_opt_level_cloud_prsc )
 2485.       t$1126 = _zla( 0, nd_band ) * _zla( 0, nd_profile_cloud_prsc ) * _zla( 0, nd_opt_level_cloud_prsc )
 2485.       t$1127 = _zla( 0, nd_phase_term ) * _zla( 0, nd_profile_cloud_prsc ) * _zla( 0, nd_opt_level_cloud_prsc )
 2485.       t$1128 = _zla( 0, nd_band ) * _zla( 0, nd_phase_term ) * _zla( 0, nd_profile_cloud_prsc ) * _zla( 0, nd_opt_level_cloud_prsc )
 2485.       t$101 = nd_flux_profile
 2485.       t$102 = nd_channel
 3107.       t$1129 = _zla( 0, nd_flux_profile )
 2485.       t$1130 = _zla( 0, nd_flux_profile )
 2485.       t$1131 = _zla( 0, nd_flux_profile ) * _zla( 0, 1 + nd_layer )
 3107.       t$1132 = _zla( 0, nd_channel )
 2485.       t$1133 = _zla( 0, nd_flux_profile ) * _zla( 0, nd_channel ) * _zla( 0, 1 + nd_layer )
 2485.       t$1134 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_viewing_level )
 2485.       t$1135 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * _zla( 0, nd_viewing_level )
 2485.       t$1136 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * _zla( 0, nd_viewing_level ) * _zla( 0, nd_channel )
 2485.       t$104 = nd_j_profile
 3122.       t$1137 = _zla( 0, nd_j_profile )
 2485.       t$1138 = _zla( 0, nd_j_profile )
 2485.       t$1139 = _zla( 0, nd_viewing_level ) * _zla( 0, nd_j_profile )
 2485.       t$1140 = _zla( 0, nd_viewing_level ) * _zla( 0, nd_channel ) * _zla( 0, nd_j_profile )
 2485.       t$103 = nd_2sg_profile
 3113.       t$1141 = _zla( 0, nd_2sg_profile )
 2485.       t$1142 = _zla( 0, nd_2sg_profile )
 2485.       t$1143 = _zla( 0, nd_2sg_profile ) * _zla( 0, 1 + nd_layer )
 2485.       t$1144 = _zla( 0, nd_channel ) * _zla( 0, nd_2sg_profile ) * _zla( 0, 1 + nd_layer )
 2485.       t$1145 = _zla( 0, nd_point_tile ) * _zla( 0, nd_tile )
 2485.       t$1146 = _zla( 0, nd_point_tile ) * _zla( 0, nd_tile ) * _zla( 0, nd_channel )
 2485.       t$1147 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_continuum )
 3247.       t$1150 = 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_continuum )
 2485.       t$110 = nd_column
 3365.       t$1151 = _zla( 0, nd_column )
 2485.       t$1152 = _zla( 0, nd_profile ) * _zla( 0, nd_column )
 3365.       t$1153 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_continuum ) ) / 8
 3365.       t$1155 = t$1153 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_column )
 2485.       t$1156 = _zla( 0, nd_direction ) * _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
 3272.       t$1157 = 8 * ( 7 + t$1153 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_column ) ) / 8
 3272.       t$1159 = t$1157 + 8 * _zla( 0, nd_direction ) * _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
 3269.       t$1160 = 8 * ( 7 + t$1157 + 8 * _zla( 0, nd_direction ) * _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc ) ) / 8
 3269.       t$1162 = t$1160 + 8 * _zla( 0, nd_direction ) * _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
 2485.       t$107 = nd_sph_coeff
 3310.       t$1163 = _zla( 0, nd_sph_coeff )
 3310.       t$1164 = 8 * ( 7 + t$1160 + 8 * _zla( 0, nd_direction ) * _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc ) ) / 8
 3310.       t$1166 = t$1164 + 8 * _zla( 0, nd_sph_coeff )
 2485.       t$108 = ( -1 + id_ct )
 2485.       t$109 = nd_overlap_coeff
 2485.       t$1167 = 2 + nd_layer + -id_ct
 3344.       t$1168 = _zla( 0, 2 + nd_layer + -id_ct )
 2485.       t$1169 = _zla( 0, nd_profile ) * _zla( 0, 2 + nd_layer + -id_ct )
 3344.       t$1170 = _zla( 0, nd_overlap_coeff )
 2485.       t$1171 = _zla( 0, nd_profile ) * _zla( 0, nd_overlap_coeff ) * _zla( 0, 2 + nd_layer + -id_ct )
 3344.       t$1172 = 8 * ( 7 + t$1164 + 8 * _zla( 0, nd_sph_coeff ) ) / 8
 3344.       t$1174 = t$1172 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_overlap_coeff ) * _zla( 0, 2 + nd_layer + -id_ct )
 2485.       t$1175 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
 3316.       t$1176 = 8 * ( 7 + t$1172 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_overlap_coeff ) * _zla( 0, 2 + nd_layer + -id_ct ) ) / 8
 3316.       t$1178 = t$1176 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
 3281.       t$1179 = 8 * ( 7 + t$1176 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) ) / 8
 3281.       t$1181 = t$1179 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 3275.       t$1182 = 8 * ( 7 + t$1179 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
 3275.       t$1184 = t$1182 + 8 * _zla( 0, nd_brdf_basis_fnc )
 3256.       t$1185 = 8 * ( 7 + t$1182 + 8 * _zla( 0, nd_brdf_basis_fnc ) ) / 8
 3256.       t$1187 = t$1185 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 3258.       t$1188 = 8 * ( 7 + t$1185 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
 3258.       t$1190 = t$1188 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 3325.       t$1191 = 8 * ( 7 + t$1188 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
 3325.       t$1193 = t$1191 + 8 * _zla( 0, nd_viewing_level )
 2485.       t$105 = nd_region
 3213.       t$1194 = _zla( 0, nd_region )
 2485.       t$1195 = _zla( 0, nd_profile ) * _zla( 0, nd_region ) * _zla( 0, 1 + nd_layer + -id_ct )
 3213.       t$1196 = 8 * ( 7 + t$1191 + 8 * _zla( 0, nd_viewing_level ) ) / 8
 3213.       t$1198 = t$1196 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_region ) * _zla( 0, 1 + nd_layer + -id_ct )
 3245.       t$1199 = 8 * ( 7 + t$1196 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_region ) * _zla( 0, 1 + nd_layer + -id_ct ) ) / 8
 3245.       t$1201 = t$1199 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_species )
 2485.       t$106 = nd_max_order
 2485.       t$1202 = 1 + nd_max_order
 3307.       t$1203 = _zla( 0, 1 + nd_max_order )
 3307.       t$1205 = t$1199 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_species ) + 4 * _zla( 0, 1 + nd_max_order )
 3362.       t$1207 = t$1199 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_species ) + 4 * _zla( 0, 1 + nd_max_order ) + 4 * _zla( 0, nd_profile ) * _zla( 0, nd_column )
 3360.       t$1209 = t$1199 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_column ) + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_species ) + 4 * _zla( 0, 1 + nd_max_order )
 3192.       t$1211 = t$1199 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_column ) + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_species ) + 4 * _zla( 0, 1 + nd_max_order ) + 4 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
 3202.       t$1213 = t$1199 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_column ) + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_species ) + 4 * _zla( 0, 1 + nd_max_order ) + 4 * _zla( 0, nd_cloud_component ) + 4 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
 3162.       t$1215 = t$1199 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_column ) + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_species ) + 4 * _zla( 0, 1 + nd_max_order ) + 4 * _zla( 0, nd_cloud_component ) + 4 * _zla( 0, nd_continuum ) + 4 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
 2485.       t$1216 = _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer )
 3329.       t$1217 = 8 * ( 7 + t$1199 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_column ) + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_species ) + 4 * _zla( 0, 1 + nd_max_order ) + 4 * _zla( 0, nd_cloud_component ) + 4 * _zla( 0, nd_continuum ) + 4 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct ) ) / 8
 3329.       t$1219 = t$1217 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer )
 3218.       t$1221 = t$1217 + 4 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer )
 3200.       t$1223 = t$1217 + 4 * _zla( 0, nd_cloud_component ) + 4 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer )
 3322.       t$1225 = t$1217 + 4 * _zla( 0, nd_cloud_component ) + 4 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) + 4 * _zla( 0, nd_viewing_level ) + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer )
 3208.       t$1227 = t$1217 + 4 * _zla( 0, nd_cloud_component ) + 4 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) + 4 * _zla( 0, nd_viewing_level ) + 4 * _zla( 0, nd_cloud_type ) + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer )
 3249.       t$1228 = 8 * ( 7 + t$1217 + 4 * _zla( 0, nd_cloud_component ) + 4 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) + 4 * _zla( 0, nd_viewing_level ) + 4 * _zla( 0, nd_cloud_type ) + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
 3249.       t$1230 = t$1228 + 8 * _zla( 0, nd_continuum )
 3358.       t$1232 = t$1228 + 4 * _zla( 0, nd_profile ) * _zla( 0, nd_column ) + 8 * _zla( 0, nd_continuum )
 3303.       t$1234 = t$1228 + 4 * _zla( 0, 1 + nd_max_order ) + 4 * _zla( 0, nd_profile ) * _zla( 0, nd_column ) + 8 * _zla( 0, nd_continuum )
 3197.       t$1236 = t$1228 + 4 * _zla( 0, 1 + nd_max_order ) + 4 * _zla( 0, nd_profile ) * _zla( 0, nd_column ) + 4 * _zla( 0, nd_cloud_component ) + 8 * _zla( 0, nd_continuum )
 3292.       t$1237 = 8 * ( 7 + t$1228 + 4 * _zla( 0, 1 + nd_max_order ) + 4 * _zla( 0, nd_profile ) * _zla( 0, nd_column ) + 4 * _zla( 0, nd_cloud_component ) + 8 * _zla( 0, nd_continuum ) ) / 8
 3292.       t$1239 = t$1237 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 3285.       t$1240 = 8 * ( 7 + t$1237 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
 3285.       t$1242 = t$1240 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 3283.       t$1243 = 8 * ( 7 + t$1240 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
 3283.       t$1245 = t$1243 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 3305.       t$1247 = t$1243 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) + 4 * _zla( 0, 1 + nd_max_order )
 3190.       t$1249 = t$1243 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) + 4 * _zla( 0, 1 + nd_max_order ) + 4 * _zla( 0, 1 + nd_layer + -id_ct )
 3353.       t$1251 = t$1243 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) + 4 * _zla( 0, 1 + nd_max_order ) + 4 * _zla( 0, 1 + nd_layer + -id_ct ) + 4 * _zla( 0, nd_profile )
 3356.       t$1253 = t$1243 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) + 4 * _zla( 0, 1 + nd_max_order ) + 4 * _zla( 0, 1 + nd_layer + -id_ct ) + 8 * _zla( 0, nd_profile )
 3254.       t$1254 = 8 * ( 7 + t$1243 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) + 4 * _zla( 0, 1 + nd_max_order ) + 4 * _zla( 0, 1 + nd_layer + -id_ct ) + 8 * _zla( 0, nd_profile ) ) / 8
 3254.       t$1256 = t$1254 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
 3261.       t$1257 = 8 * ( 7 + t$1254 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
 3261.       t$1259 = t$1257 + 8 * _zla( 0, nd_profile )
 3378.       t$1260 = 8 * ( 7 + t$1257 + 8 * _zla( 0, nd_profile ) ) / 8
 3378.       t$1262 = t$1260 + 8 * _zla( 0, nd_point_tile ) * _zla( 0, nd_tile )
 2485.       t$1263 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_viewing_level )
 3334.       t$1264 = 8 * ( 7 + t$1260 + 8 * _zla( 0, nd_point_tile ) * _zla( 0, nd_tile ) ) / 8
 3334.       t$1266 = t$1264 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_viewing_level )
 3242.       t$1267 = 8 * ( 7 + t$1264 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_viewing_level ) ) / 8
 3242.       t$1269 = t$1267 + 8 * _zla( 0, nd_profile )
 2600.       if ( t$27 == 0 ) then
 2600.          t$1274(1) = 4
 2600.          t$1275(1) = 0
 2600.          t$1276(1) = 0
 2600.          t$1271(1) = int( loc( t$26 ), 8 )
 2600.          t$1272(1) = 0
 2600.          t$1273(1) = int( loc( t$1270 ), 8 )
 2600.          t$27 = __get_dynamic_type( 2, t$1271(1), t$1274(1), 1, t$1272(1), t$1273(1), t$1275(1), t$1276(1) )
 2600.       endif
 3296.       ss_prop%k_grey_tot_clr = $_StaticDV_P1
 3296.       ss_prop%k_grey_tot_clr%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
 3296.       ss_prop%k_grey_tot_clr%header%el_len = 64
 3296.       ss_prop%k_grey_tot_clr%header%assoc = 0
 3296.       ss_prop%k_grey_tot_clr%header%ptr_alloc = 0
 3296.       ss_prop%k_grey_tot_clr%header%p_or_a = 1
 3296.       ss_prop%k_grey_tot_clr%header%a_contig = 0
 3296.       ss_prop%k_grey_tot_clr%header%n_dim = 2
 3296.       ss_prop%k_grey_tot_clr%header%orig_base = 0
 3296.       ss_prop%k_grey_tot_clr%header%orig_size = 0
 3296.       ss_prop%k_grey_tot_clr%header%n_codim = 0
 3296.       ss_prop%k_grey_tot_clr%header%dv_versn = 2
 3296.       ss_prop%k_grey_tot_clr%header%dv_smunit = 64
 3296.       ss_prop%k_grey_tot_clr%header%d_type = 0
 3296.       ss_prop%k_grey_tot_clr%header%n_params = 0
 3296.       ss_prop%k_grey_tot_clr%header%d_type_idx = 13
 3296.       ss_prop%k_grey_tot_clr%dim_1%LB = 1
 3296.       ss_prop%k_grey_tot_clr%dim_1%EX = 0
 3296.       ss_prop%k_grey_tot_clr%dim_1%SM = 1
 3296.       ss_prop%k_grey_tot_clr%dim_2%LB = 1
 3296.       ss_prop%k_grey_tot_clr%dim_2%EX = 0
 3296.       ss_prop%k_grey_tot_clr%dim_2%SM = 1
 3296.       ss_prop%k_ext_scat_clr = $_StaticDV_P2
 3296.       ss_prop%k_ext_scat_clr%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
 3296.       ss_prop%k_ext_scat_clr%header%el_len = 64
 3296.       ss_prop%k_ext_scat_clr%header%assoc = 0
 3296.       ss_prop%k_ext_scat_clr%header%ptr_alloc = 0
 3296.       ss_prop%k_ext_scat_clr%header%p_or_a = 1
 3296.       ss_prop%k_ext_scat_clr%header%a_contig = 0
 3296.       ss_prop%k_ext_scat_clr%header%n_dim = 2
 3296.       ss_prop%k_ext_scat_clr%header%orig_base = 0
 3296.       ss_prop%k_ext_scat_clr%header%orig_size = 0
 3296.       ss_prop%k_ext_scat_clr%header%n_codim = 0
 3296.       ss_prop%k_ext_scat_clr%header%dv_versn = 2
 3296.       ss_prop%k_ext_scat_clr%header%dv_smunit = 64
 3296.       ss_prop%k_ext_scat_clr%header%d_type = 0
 3296.       ss_prop%k_ext_scat_clr%header%n_params = 0
 3296.       ss_prop%k_ext_scat_clr%header%d_type_idx = 13
 3296.       ss_prop%k_ext_scat_clr%dim_1%LB = 1
 3296.       ss_prop%k_ext_scat_clr%dim_1%EX = 0
 3296.       ss_prop%k_ext_scat_clr%dim_1%SM = 1
 3296.       ss_prop%k_ext_scat_clr%dim_2%LB = 1
 3296.       ss_prop%k_ext_scat_clr%dim_2%EX = 0
 3296.       ss_prop%k_ext_scat_clr%dim_2%SM = 1
 3296.       ss_prop%tau_clr = $_StaticDV_P3
 3296.       ss_prop%tau_clr%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
 3296.       ss_prop%tau_clr%header%el_len = 64
 3296.       ss_prop%tau_clr%header%assoc = 0
 3296.       ss_prop%tau_clr%header%ptr_alloc = 0
 3296.       ss_prop%tau_clr%header%p_or_a = 1
 3296.       ss_prop%tau_clr%header%a_contig = 0
 3296.       ss_prop%tau_clr%header%n_dim = 2
 3296.       ss_prop%tau_clr%header%orig_base = 0
 3296.       ss_prop%tau_clr%header%orig_size = 0
 3296.       ss_prop%tau_clr%header%n_codim = 0
 3296.       ss_prop%tau_clr%header%dv_versn = 2
 3296.       ss_prop%tau_clr%header%dv_smunit = 64
 3296.       ss_prop%tau_clr%header%d_type = 0
 3296.       ss_prop%tau_clr%header%n_params = 0
 3296.       ss_prop%tau_clr%header%d_type_idx = 13
 3296.       ss_prop%tau_clr%dim_1%LB = 1
 3296.       ss_prop%tau_clr%dim_1%EX = 0
 3296.       ss_prop%tau_clr%dim_1%SM = 1
 3296.       ss_prop%tau_clr%dim_2%LB = 1
 3296.       ss_prop%tau_clr%dim_2%EX = 0
 3296.       ss_prop%tau_clr%dim_2%SM = 1
 3296.       ss_prop%omega_clr = $_StaticDV_P4
 3296.       ss_prop%omega_clr%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
 3296.       ss_prop%omega_clr%header%el_len = 64
 3296.       ss_prop%omega_clr%header%assoc = 0
 3296.       ss_prop%omega_clr%header%ptr_alloc = 0
 3296.       ss_prop%omega_clr%header%p_or_a = 1
 3296.       ss_prop%omega_clr%header%a_contig = 0
 3296.       ss_prop%omega_clr%header%n_dim = 2
 3296.       ss_prop%omega_clr%header%orig_base = 0
 3296.       ss_prop%omega_clr%header%orig_size = 0
 3296.       ss_prop%omega_clr%header%n_codim = 0
 3296.       ss_prop%omega_clr%header%dv_versn = 2
 3296.       ss_prop%omega_clr%header%dv_smunit = 64
 3296.       ss_prop%omega_clr%header%d_type = 0
 3296.       ss_prop%omega_clr%header%n_params = 0
 3296.       ss_prop%omega_clr%header%d_type_idx = 13
 3296.       ss_prop%omega_clr%dim_1%LB = 1
 3296.       ss_prop%omega_clr%dim_1%EX = 0
 3296.       ss_prop%omega_clr%dim_1%SM = 1
 3296.       ss_prop%omega_clr%dim_2%LB = 1
 3296.       ss_prop%omega_clr%dim_2%EX = 0
 3296.       ss_prop%omega_clr%dim_2%SM = 1
 3296.       ss_prop%phase_fnc_clr = $_StaticDV_P5
 3296.       ss_prop%phase_fnc_clr%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
 3296.       ss_prop%phase_fnc_clr%header%el_len = 64
 3296.       ss_prop%phase_fnc_clr%header%assoc = 0
 3296.       ss_prop%phase_fnc_clr%header%ptr_alloc = 0
 3296.       ss_prop%phase_fnc_clr%header%p_or_a = 1
 3296.       ss_prop%phase_fnc_clr%header%a_contig = 0
 3296.       ss_prop%phase_fnc_clr%header%n_dim = 3
 3296.       ss_prop%phase_fnc_clr%header%orig_base = 0
 3296.       ss_prop%phase_fnc_clr%header%orig_size = 0
 3296.       ss_prop%phase_fnc_clr%header%n_codim = 0
 3296.       ss_prop%phase_fnc_clr%header%dv_versn = 2
 3296.       ss_prop%phase_fnc_clr%header%dv_smunit = 64
 3296.       ss_prop%phase_fnc_clr%header%d_type = 0
 3296.       ss_prop%phase_fnc_clr%header%n_params = 0
 3296.       ss_prop%phase_fnc_clr%header%d_type_idx = 13
 3296.       ss_prop%phase_fnc_clr%dim_1%LB = 1
 3296.       ss_prop%phase_fnc_clr%dim_1%EX = 0
 3296.       ss_prop%phase_fnc_clr%dim_1%SM = 1
 3296.       ss_prop%phase_fnc_clr%dim_2%LB = 1
 3296.       ss_prop%phase_fnc_clr%dim_2%EX = 0
 3296.       ss_prop%phase_fnc_clr%dim_2%SM = 1
 3296.       ss_prop%phase_fnc_clr%dim_3%LB = 1
 3296.       ss_prop%phase_fnc_clr%dim_3%EX = 0
 3296.       ss_prop%phase_fnc_clr%dim_3%SM = 1
 3296.       ss_prop%forward_scatter_clr = $_StaticDV_P6
 3296.       ss_prop%forward_scatter_clr%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
 3296.       ss_prop%forward_scatter_clr%header%el_len = 64
 3296.       ss_prop%forward_scatter_clr%header%assoc = 0
 3296.       ss_prop%forward_scatter_clr%header%ptr_alloc = 0
 3296.       ss_prop%forward_scatter_clr%header%p_or_a = 1
 3296.       ss_prop%forward_scatter_clr%header%a_contig = 0
 3296.       ss_prop%forward_scatter_clr%header%n_dim = 2
 3296.       ss_prop%forward_scatter_clr%header%orig_base = 0
 3296.       ss_prop%forward_scatter_clr%header%orig_size = 0
 3296.       ss_prop%forward_scatter_clr%header%n_codim = 0
 3296.       ss_prop%forward_scatter_clr%header%dv_versn = 2
 3296.       ss_prop%forward_scatter_clr%header%dv_smunit = 64
 3296.       ss_prop%forward_scatter_clr%header%d_type = 0
 3296.       ss_prop%forward_scatter_clr%header%n_params = 0
 3296.       ss_prop%forward_scatter_clr%header%d_type_idx = 13
 3296.       ss_prop%forward_scatter_clr%dim_1%LB = 1
 3296.       ss_prop%forward_scatter_clr%dim_1%EX = 0
 3296.       ss_prop%forward_scatter_clr%dim_1%SM = 1
 3296.       ss_prop%forward_scatter_clr%dim_2%LB = 1
 3296.       ss_prop%forward_scatter_clr%dim_2%EX = 0
 3296.       ss_prop%forward_scatter_clr%dim_2%SM = 1
 3296.       ss_prop%forward_solar_clr = $_StaticDV_P7
 3296.       ss_prop%forward_solar_clr%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
 3296.       ss_prop%forward_solar_clr%header%el_len = 64
 3296.       ss_prop%forward_solar_clr%header%assoc = 0
 3296.       ss_prop%forward_solar_clr%header%ptr_alloc = 0
 3296.       ss_prop%forward_solar_clr%header%p_or_a = 1
 3296.       ss_prop%forward_solar_clr%header%a_contig = 0
 3296.       ss_prop%forward_solar_clr%header%n_dim = 2
 3296.       ss_prop%forward_solar_clr%header%orig_base = 0
 3296.       ss_prop%forward_solar_clr%header%orig_size = 0
 3296.       ss_prop%forward_solar_clr%header%n_codim = 0
 3296.       ss_prop%forward_solar_clr%header%dv_versn = 2
 3296.       ss_prop%forward_solar_clr%header%dv_smunit = 64
 3296.       ss_prop%forward_solar_clr%header%d_type = 0
 3296.       ss_prop%forward_solar_clr%header%n_params = 0
 3296.       ss_prop%forward_solar_clr%header%d_type_idx = 13
 3296.       ss_prop%forward_solar_clr%dim_1%LB = 1
 3296.       ss_prop%forward_solar_clr%dim_1%EX = 0
 3296.       ss_prop%forward_solar_clr%dim_1%SM = 1
 3296.       ss_prop%forward_solar_clr%dim_2%LB = 1
 3296.       ss_prop%forward_solar_clr%dim_2%EX = 0
 3296.       ss_prop%forward_solar_clr%dim_2%SM = 1
 3296.       ss_prop%phase_fnc_solar_clr = $_StaticDV_P8
 3296.       ss_prop%phase_fnc_solar_clr%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
 3296.       ss_prop%phase_fnc_solar_clr%header%el_len = 64
 3296.       ss_prop%phase_fnc_solar_clr%header%assoc = 0
 3296.       ss_prop%phase_fnc_solar_clr%header%ptr_alloc = 0
 3296.       ss_prop%phase_fnc_solar_clr%header%p_or_a = 1
 3296.       ss_prop%phase_fnc_solar_clr%header%a_contig = 0
 3296.       ss_prop%phase_fnc_solar_clr%header%n_dim = 3
 3296.       ss_prop%phase_fnc_solar_clr%header%orig_base = 0
 3296.       ss_prop%phase_fnc_solar_clr%header%orig_size = 0
 3296.       ss_prop%phase_fnc_solar_clr%header%n_codim = 0
 3296.       ss_prop%phase_fnc_solar_clr%header%dv_versn = 2
 3296.       ss_prop%phase_fnc_solar_clr%header%dv_smunit = 64
 3296.       ss_prop%phase_fnc_solar_clr%header%d_type = 0
 3296.       ss_prop%phase_fnc_solar_clr%header%n_params = 0
 3296.       ss_prop%phase_fnc_solar_clr%header%d_type_idx = 13
 3296.       ss_prop%phase_fnc_solar_clr%dim_1%LB = 1
 3296.       ss_prop%phase_fnc_solar_clr%dim_1%EX = 0
 3296.       ss_prop%phase_fnc_solar_clr%dim_1%SM = 1
 3296.       ss_prop%phase_fnc_solar_clr%dim_2%LB = 1
 3296.       ss_prop%phase_fnc_solar_clr%dim_2%EX = 0
 3296.       ss_prop%phase_fnc_solar_clr%dim_2%SM = 1
 3296.       ss_prop%phase_fnc_solar_clr%dim_3%LB = 1
 3296.       ss_prop%phase_fnc_solar_clr%dim_3%EX = 0
 3296.       ss_prop%phase_fnc_solar_clr%dim_3%SM = 1
 3296.       ss_prop%k_grey_tot = $_StaticDV_P9
 3296.       ss_prop%k_grey_tot%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
 3296.       ss_prop%k_grey_tot%header%el_len = 64
 3296.       ss_prop%k_grey_tot%header%assoc = 0
 3296.       ss_prop%k_grey_tot%header%ptr_alloc = 0
 3296.       ss_prop%k_grey_tot%header%p_or_a = 1
 3296.       ss_prop%k_grey_tot%header%a_contig = 0
 3296.       ss_prop%k_grey_tot%header%n_dim = 3
 3296.       ss_prop%k_grey_tot%header%orig_base = 0
 3296.       ss_prop%k_grey_tot%header%orig_size = 0
 3296.       ss_prop%k_grey_tot%header%n_codim = 0
 3296.       ss_prop%k_grey_tot%header%dv_versn = 2
 3296.       ss_prop%k_grey_tot%header%dv_smunit = 64
 3296.       ss_prop%k_grey_tot%header%d_type = 0
 3296.       ss_prop%k_grey_tot%header%n_params = 0
 3296.       ss_prop%k_grey_tot%header%d_type_idx = 13
 3296.       ss_prop%k_grey_tot%dim_1%LB = 1
 3296.       ss_prop%k_grey_tot%dim_1%EX = 0
 3296.       ss_prop%k_grey_tot%dim_1%SM = 1
 3296.       ss_prop%k_grey_tot%dim_2%LB = 1
 3296.       ss_prop%k_grey_tot%dim_2%EX = 0
 3296.       ss_prop%k_grey_tot%dim_2%SM = 1
 3296.       ss_prop%k_grey_tot%dim_3%LB = 1
 3296.       ss_prop%k_grey_tot%dim_3%EX = 0
 3296.       ss_prop%k_grey_tot%dim_3%SM = 1
 3296.       ss_prop%k_ext_scat = $_StaticDV_P10
 3296.       ss_prop%k_ext_scat%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
 3296.       ss_prop%k_ext_scat%header%el_len = 64
 3296.       ss_prop%k_ext_scat%header%assoc = 0
 3296.       ss_prop%k_ext_scat%header%ptr_alloc = 0
 3296.       ss_prop%k_ext_scat%header%p_or_a = 1
 3296.       ss_prop%k_ext_scat%header%a_contig = 0
 3296.       ss_prop%k_ext_scat%header%n_dim = 3
 3296.       ss_prop%k_ext_scat%header%orig_base = 0
 3296.       ss_prop%k_ext_scat%header%orig_size = 0
 3296.       ss_prop%k_ext_scat%header%n_codim = 0
 3296.       ss_prop%k_ext_scat%header%dv_versn = 2
 3296.       ss_prop%k_ext_scat%header%dv_smunit = 64
 3296.       ss_prop%k_ext_scat%header%d_type = 0
 3296.       ss_prop%k_ext_scat%header%n_params = 0
 3296.       ss_prop%k_ext_scat%header%d_type_idx = 13
 3296.       ss_prop%k_ext_scat%dim_1%LB = 1
 3296.       ss_prop%k_ext_scat%dim_1%EX = 0
 3296.       ss_prop%k_ext_scat%dim_1%SM = 1
 3296.       ss_prop%k_ext_scat%dim_2%LB = 1
 3296.       ss_prop%k_ext_scat%dim_2%EX = 0
 3296.       ss_prop%k_ext_scat%dim_2%SM = 1
 3296.       ss_prop%k_ext_scat%dim_3%LB = 1
 3296.       ss_prop%k_ext_scat%dim_3%EX = 0
 3296.       ss_prop%k_ext_scat%dim_3%SM = 1
 3296.       ss_prop%tau = $_StaticDV_P11
 3296.       ss_prop%tau%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
 3296.       ss_prop%tau%header%el_len = 64
 3296.       ss_prop%tau%header%assoc = 0
 3296.       ss_prop%tau%header%ptr_alloc = 0
 3296.       ss_prop%tau%header%p_or_a = 1
 3296.       ss_prop%tau%header%a_contig = 0
 3296.       ss_prop%tau%header%n_dim = 3
 3296.       ss_prop%tau%header%orig_base = 0
 3296.       ss_prop%tau%header%orig_size = 0
 3296.       ss_prop%tau%header%n_codim = 0
 3296.       ss_prop%tau%header%dv_versn = 2
 3296.       ss_prop%tau%header%dv_smunit = 64
 3296.       ss_prop%tau%header%d_type = 0
 3296.       ss_prop%tau%header%n_params = 0
 3296.       ss_prop%tau%header%d_type_idx = 13
 3296.       ss_prop%tau%dim_1%LB = 1
 3296.       ss_prop%tau%dim_1%EX = 0
 3296.       ss_prop%tau%dim_1%SM = 1
 3296.       ss_prop%tau%dim_2%LB = 1
 3296.       ss_prop%tau%dim_2%EX = 0
 3296.       ss_prop%tau%dim_2%SM = 1
 3296.       ss_prop%tau%dim_3%LB = 1
 3296.       ss_prop%tau%dim_3%EX = 0
 3296.       ss_prop%tau%dim_3%SM = 1
 3296.       ss_prop%omega = $_StaticDV_P12
 3296.       ss_prop%omega%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
 3296.       ss_prop%omega%header%el_len = 64
 3296.       ss_prop%omega%header%assoc = 0
 3296.       ss_prop%omega%header%ptr_alloc = 0
 3296.       ss_prop%omega%header%p_or_a = 1
 3296.       ss_prop%omega%header%a_contig = 0
 3296.       ss_prop%omega%header%n_dim = 3
 3296.       ss_prop%omega%header%orig_base = 0
 3296.       ss_prop%omega%header%orig_size = 0
 3296.       ss_prop%omega%header%n_codim = 0
 3296.       ss_prop%omega%header%dv_versn = 2
 3296.       ss_prop%omega%header%dv_smunit = 64
 3296.       ss_prop%omega%header%d_type = 0
 3296.       ss_prop%omega%header%n_params = 0
 3296.       ss_prop%omega%header%d_type_idx = 13
 3296.       ss_prop%omega%dim_1%LB = 1
 3296.       ss_prop%omega%dim_1%EX = 0
 3296.       ss_prop%omega%dim_1%SM = 1
 3296.       ss_prop%omega%dim_2%LB = 1
 3296.       ss_prop%omega%dim_2%EX = 0
 3296.       ss_prop%omega%dim_2%SM = 1
 3296.       ss_prop%omega%dim_3%LB = 1
 3296.       ss_prop%omega%dim_3%EX = 0
 3296.       ss_prop%omega%dim_3%SM = 1
 3296.       ss_prop%phase_fnc = $_StaticDV_P13
 3296.       ss_prop%phase_fnc%base_addr = pointer to array[1] of array[1] of array[1] of array[1] of real (kind=8)( 0 )
 3296.       ss_prop%phase_fnc%header%el_len = 64
 3296.       ss_prop%phase_fnc%header%assoc = 0
 3296.       ss_prop%phase_fnc%header%ptr_alloc = 0
 3296.       ss_prop%phase_fnc%header%p_or_a = 1
 3296.       ss_prop%phase_fnc%header%a_contig = 0
 3296.       ss_prop%phase_fnc%header%n_dim = 4
 3296.       ss_prop%phase_fnc%header%orig_base = 0
 3296.       ss_prop%phase_fnc%header%orig_size = 0
 3296.       ss_prop%phase_fnc%header%n_codim = 0
 3296.       ss_prop%phase_fnc%header%dv_versn = 2
 3296.       ss_prop%phase_fnc%header%dv_smunit = 64
 3296.       ss_prop%phase_fnc%header%d_type = 0
 3296.       ss_prop%phase_fnc%header%n_params = 0
 3296.       ss_prop%phase_fnc%header%d_type_idx = 13
 3296.       ss_prop%phase_fnc%dim_1%LB = 1
 3296.       ss_prop%phase_fnc%dim_1%EX = 0
 3296.       ss_prop%phase_fnc%dim_1%SM = 1
 3296.       ss_prop%phase_fnc%dim_2%LB = 1
 3296.       ss_prop%phase_fnc%dim_2%EX = 0
 3296.       ss_prop%phase_fnc%dim_2%SM = 1
 3296.       ss_prop%phase_fnc%dim_3%LB = 1
 3296.       ss_prop%phase_fnc%dim_3%EX = 0
 3296.       ss_prop%phase_fnc%dim_3%SM = 1
 3296.       ss_prop%phase_fnc%dim_4%LB = 1
 3296.       ss_prop%phase_fnc%dim_4%EX = 0
 3296.       ss_prop%phase_fnc%dim_4%SM = 1
 3296.       ss_prop%forward_scatter = $_StaticDV_P14
 3296.       ss_prop%forward_scatter%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
 3296.       ss_prop%forward_scatter%header%el_len = 64
 3296.       ss_prop%forward_scatter%header%assoc = 0
 3296.       ss_prop%forward_scatter%header%ptr_alloc = 0
 3296.       ss_prop%forward_scatter%header%p_or_a = 1
 3296.       ss_prop%forward_scatter%header%a_contig = 0
 3296.       ss_prop%forward_scatter%header%n_dim = 3
 3296.       ss_prop%forward_scatter%header%orig_base = 0
 3296.       ss_prop%forward_scatter%header%orig_size = 0
 3296.       ss_prop%forward_scatter%header%n_codim = 0
 3296.       ss_prop%forward_scatter%header%dv_versn = 2
 3296.       ss_prop%forward_scatter%header%dv_smunit = 64
 3296.       ss_prop%forward_scatter%header%d_type = 0
 3296.       ss_prop%forward_scatter%header%n_params = 0
 3296.       ss_prop%forward_scatter%header%d_type_idx = 13
 3296.       ss_prop%forward_scatter%dim_1%LB = 1
 3296.       ss_prop%forward_scatter%dim_1%EX = 0
 3296.       ss_prop%forward_scatter%dim_1%SM = 1
 3296.       ss_prop%forward_scatter%dim_2%LB = 1
 3296.       ss_prop%forward_scatter%dim_2%EX = 0
 3296.       ss_prop%forward_scatter%dim_2%SM = 1
 3296.       ss_prop%forward_scatter%dim_3%LB = 1
 3296.       ss_prop%forward_scatter%dim_3%EX = 0
 3296.       ss_prop%forward_scatter%dim_3%SM = 1
 3296.       ss_prop%forward_solar = $_StaticDV_P15
 3296.       ss_prop%forward_solar%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
 3296.       ss_prop%forward_solar%header%el_len = 64
 3296.       ss_prop%forward_solar%header%assoc = 0
 3296.       ss_prop%forward_solar%header%ptr_alloc = 0
 3296.       ss_prop%forward_solar%header%p_or_a = 1
 3296.       ss_prop%forward_solar%header%a_contig = 0
 3296.       ss_prop%forward_solar%header%n_dim = 3
 3296.       ss_prop%forward_solar%header%orig_base = 0
 3296.       ss_prop%forward_solar%header%orig_size = 0
 3296.       ss_prop%forward_solar%header%n_codim = 0
 3296.       ss_prop%forward_solar%header%dv_versn = 2
 3296.       ss_prop%forward_solar%header%dv_smunit = 64
 3296.       ss_prop%forward_solar%header%d_type = 0
 3296.       ss_prop%forward_solar%header%n_params = 0
 3296.       ss_prop%forward_solar%header%d_type_idx = 13
 3296.       ss_prop%forward_solar%dim_1%LB = 1
 3296.       ss_prop%forward_solar%dim_1%EX = 0
 3296.       ss_prop%forward_solar%dim_1%SM = 1
 3296.       ss_prop%forward_solar%dim_2%LB = 1
 3296.       ss_prop%forward_solar%dim_2%EX = 0
 3296.       ss_prop%forward_solar%dim_2%SM = 1
 3296.       ss_prop%forward_solar%dim_3%LB = 1
 3296.       ss_prop%forward_solar%dim_3%EX = 0
 3296.       ss_prop%forward_solar%dim_3%SM = 1
 2600.       ss_prop%phase_fnc_solar = $_StaticDV_P16
 2600.       ss_prop%phase_fnc_solar%base_addr = pointer to array[1] of array[1] of array[1] of array[1] of real (kind=8)( 0 )
 2600.       ss_prop%phase_fnc_solar%header%el_len = 64
 2600.       ss_prop%phase_fnc_solar%header%assoc = 0
 2600.       ss_prop%phase_fnc_solar%header%ptr_alloc = 0
 2600.       ss_prop%phase_fnc_solar%header%p_or_a = 1
 2600.       ss_prop%phase_fnc_solar%header%a_contig = 0
 2600.       ss_prop%phase_fnc_solar%header%n_dim = 4
 2600.       ss_prop%phase_fnc_solar%header%orig_base = 0
 2600.       ss_prop%phase_fnc_solar%header%orig_size = 0
 2600.       ss_prop%phase_fnc_solar%header%n_codim = 0
 2600.       ss_prop%phase_fnc_solar%header%dv_versn = 2
 2600.       ss_prop%phase_fnc_solar%header%dv_smunit = 64
 2600.       ss_prop%phase_fnc_solar%header%d_type = 0
 2600.       ss_prop%phase_fnc_solar%header%n_params = 0
 2600.       ss_prop%phase_fnc_solar%header%d_type_idx = 13
 2600.       ss_prop%phase_fnc_solar%dim_1%LB = 1
 2600.       ss_prop%phase_fnc_solar%dim_1%EX = 0
 2600.       ss_prop%phase_fnc_solar%dim_1%SM = 1
 2600.       ss_prop%phase_fnc_solar%dim_2%LB = 1
 2600.       ss_prop%phase_fnc_solar%dim_2%EX = 0
 2600.       ss_prop%phase_fnc_solar%dim_2%SM = 1
 2600.       ss_prop%phase_fnc_solar%dim_3%LB = 1
 2600.       ss_prop%phase_fnc_solar%dim_3%EX = 0
 2600.       ss_prop%phase_fnc_solar%dim_3%SM = 1
 2600.       ss_prop%phase_fnc_solar%dim_4%LB = 1
 2600.       ss_prop%phase_fnc_solar%dim_4%EX = 0
 2600.       ss_prop%phase_fnc_solar%dim_4%SM = 1
 3204.       t$1279 = t$1267 + 8 * _zla( 0, nd_profile ) + 4 * _zla( 0, nd_region )
 2485.       t$1280 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_sph_coeff )
 3314.       t$1281 = 8 * ( 7 + t$1267 + 8 * _zla( 0, nd_profile ) + 4 * _zla( 0, nd_region ) ) / 8
 3314.       t$1283 = t$1281 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_sph_coeff )
 3312.       t$1284 = 8 * ( 7 + t$1281 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_sph_coeff ) ) / 8
 3312.       t$1286 = t$1284 + 8 * _zla( 0, nd_sph_coeff )
 3348.       t$1287 = 8 * ( 7 + t$1284 + 8 * _zla( 0, nd_sph_coeff ) ) / 8
 3348.       t$1289 = t$1287 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 3370.       t$1290 = 8 * ( 7 + t$1287 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
 3370.       t$1292 = t$1290 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 2485.       t$1148 = int( _alloc( t$1290 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ), 8 )
 3247.       t$1149 = t$1148
 3365.       t$1154 = t$1153 + t$1148
 3272.       t$1158 = t$1157 + t$1148
 3269.       t$1161 = t$1160 + t$1148
 3310.       t$1165 = t$1164 + t$1148
 3344.       t$1173 = t$1172 + t$1148
 3316.       t$1177 = t$1176 + t$1148
 3281.       t$1180 = t$1179 + t$1148
 3275.       t$1183 = t$1182 + t$1148
 3256.       t$1186 = t$1185 + t$1148
 3258.       t$1189 = t$1188 + t$1148
 3325.       t$1192 = t$1191 + t$1148
 3213.       t$1197 = t$1196 + t$1148
 3245.       t$1200 = t$1199 + t$1148
 3307.       t$1204 = t$1199 + t$1148 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_species )
 3362.       t$1206 = t$1199 + t$1148 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_species ) + 4 * _zla( 0, 1 + nd_max_order )
 3360.       t$1208 = t$1199 + t$1148 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_species ) + 4 * _zla( 0, 1 + nd_max_order ) + 4 * _zla( 0, nd_profile ) * _zla( 0, nd_column )
 3192.       t$1210 = t$1199 + t$1148 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_column ) + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_species ) + 4 * _zla( 0, 1 + nd_max_order )
 3202.       t$1212 = t$1199 + t$1148 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_column ) + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_species ) + 4 * _zla( 0, 1 + nd_max_order ) + 4 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
 3162.       t$1214 = t$1199 + t$1148 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_column ) + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_species ) + 4 * _zla( 0, 1 + nd_max_order ) + 4 * _zla( 0, nd_cloud_component ) + 4 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
 3329.       t$1218 = t$1217 + t$1148
 3218.       t$1220 = t$1217 + t$1148 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer )
 3200.       t$1222 = t$1217 + t$1148 + 4 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer )
 3322.       t$1224 = t$1217 + t$1148 + 4 * _zla( 0, nd_cloud_component ) + 4 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer )
 3208.       t$1226 = t$1217 + t$1148 + 4 * _zla( 0, nd_cloud_component ) + 4 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) + 4 * _zla( 0, nd_viewing_level ) + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer )
 3249.       t$1229 = t$1228 + t$1148
 3358.       t$1231 = t$1228 + t$1148 + 8 * _zla( 0, nd_continuum )
 3303.       t$1233 = t$1228 + t$1148 + 4 * _zla( 0, nd_profile ) * _zla( 0, nd_column ) + 8 * _zla( 0, nd_continuum )
 3197.       t$1235 = t$1228 + t$1148 + 4 * _zla( 0, 1 + nd_max_order ) + 4 * _zla( 0, nd_profile ) * _zla( 0, nd_column ) + 8 * _zla( 0, nd_continuum )
 3292.       t$1238 = t$1237 + t$1148
 3285.       t$1241 = t$1240 + t$1148
 3283.       t$1244 = t$1243 + t$1148
 3305.       t$1246 = t$1243 + t$1148 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 3190.       t$1248 = t$1243 + t$1148 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) + 4 * _zla( 0, 1 + nd_max_order )
 3353.       t$1250 = t$1243 + t$1148 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) + 4 * _zla( 0, 1 + nd_max_order ) + 4 * _zla( 0, 1 + nd_layer + -id_ct )
 3356.       t$1252 = t$1243 + t$1148 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) + 4 * _zla( 0, 1 + nd_max_order ) + 4 * _zla( 0, 1 + nd_layer + -id_ct ) + 4 * _zla( 0, nd_profile )
 3254.       t$1255 = t$1254 + t$1148
 3261.       t$1258 = t$1257 + t$1148
 3378.       t$1261 = t$1260 + t$1148
 3334.       t$1265 = t$1264 + t$1148
 3242.       t$1268 = t$1267 + t$1148
 3204.       t$1278 = t$1267 + t$1148 + 8 * _zla( 0, nd_profile )
 3314.       t$1282 = t$1281 + t$1148
 3312.       t$1285 = t$1284 + t$1148
 3348.       t$1288 = t$1287 + t$1148
 3370.       t$1291 = t$1290 + t$1148
 3408.       if ( nd_layer > 0 ) then
 3409.          if ( nd_profile > 0 ) then
 3408.             $I_L3408_784 = 0
 3408.             do
 3409.                $I_L3409_776 = 0
 3409.                do
 3408.                   $I_L3408_770 = 0
 3408.                   if ( min( nd_layer, 4 + 4 * $I_L3408_784 ) + -4 * $I_L3408_784 >= 4 ) then
 3408.                      $I_L3408_793 = 0
 3408. !dir$ shortloop16
 3408. !dir$ blocking_size( 4, 4 )
 3408.                      do
 3409.                         $I_L3409_704 = 0
 3409. !dir$ ivdep
 3409. !dir$ blocking_size( 256, 256 )
 3409.                         do
 3410.                            zen_00(1 + $I_L3409_704 + 256 * $I_L3409_776, 1 + 4 * $I_L3408_784 + 4 * $I_L3408_793) = zen_0(1 + $I_L3409_704 + 256 * $I_L3409_776)
 3410.                            zen_00(1 + $I_L3409_704 + 256 * $I_L3409_776, 2 + 4 * $I_L3408_784 + 4 * $I_L3408_793) = zen_0(1 + $I_L3409_704 + 256 * $I_L3409_776)
 3410.                            zen_00(1 + $I_L3409_704 + 256 * $I_L3409_776, 3 + 4 * $I_L3408_784 + 4 * $I_L3408_793) = zen_0(1 + $I_L3409_704 + 256 * $I_L3409_776)
 3410.                            zen_00(1 + $I_L3409_704 + 256 * $I_L3409_776, 4 + 4 * $I_L3408_784 + 4 * $I_L3408_793) = zen_0(1 + $I_L3409_704 + 256 * $I_L3409_776)
 3409.                            $I_L3409_704 = 1 + $I_L3409_704
 3409.                            if ( $I_L3409_704 >= min( nd_profile, 256 + 256 * $I_L3409_776 ) + -256 * $I_L3409_776 ) exit
 3409.                         enddo
 3408.                         $I_L3408_793 = 1 + $I_L3408_793
 3408.                         if ( $I_L3408_793 >= _rsh( min( nd_layer, 4 + 4 * $I_L3408_784 ) + -4 * $I_L3408_784, 2 ) ) exit
 3408.                      enddo
 3408.                      $I_L3408_770 = and( 0xfffffffffffffffcUL, min( nd_layer, 4 + 4 * $I_L3408_784 ) + -4 * $I_L3408_784 )
 3408.                   endif
 3408.                   if ( $I_L3408_770 < min( nd_layer, 4 + 4 * $I_L3408_784 ) + -4 * $I_L3408_784 ) then
 3408.                      $I_L3408_788 = 0
 3408. !dir$ shortloop16
 3408. !dir$ blocking_size( 4, 4 )
 3408.                      do
 3409.                         $I_L3409_704 = 0
 3409. !dir$ ivdep
 3409. !dir$ blocking_size( 256, 256 )
 3409.                         do
 3410.                            zen_00(1 + $I_L3409_704 + 256 * $I_L3409_776, 1 + $I_L3408_770 + $I_L3408_788 + 4 * $I_L3408_784) = zen_0(1 + $I_L3409_704 + 256 * $I_L3409_776)
 3409.                            $I_L3409_704 = 1 + $I_L3409_704
 3409.                            if ( $I_L3409_704 >= min( nd_profile, 256 + 256 * $I_L3409_776 ) + -256 * $I_L3409_776 ) exit
 3409.                         enddo
 3408.                         $I_L3408_788 = 1 + $I_L3408_788
 3408.                         if ( $I_L3408_788 >= min( nd_layer, 4 + 4 * $I_L3408_784 ) + -$I_L3408_770 + -4 * $I_L3408_784 ) exit
 3408.                      enddo
 3408.                   endif
 3409.                   $I_L3409_776 = 1 + $I_L3409_776
 3411.                   if ( $I_L3409_776 >= 1 + max( 0, -1 + _rsh( 255 + nd_profile, 8 ) ) ) exit
 3411.                enddo
 3408.                $I_L3408_784 = 1 + $I_L3408_784
 3408.                if ( $I_L3408_784 >= 1 + max( 0, -1 + _rsh( 3 + nd_layer, 2 ) ) ) exit
 3408.             enddo
 3408.          endif
 3408.       endif
 3418.       if ( i_angular_integration == 1 ) then
 3421.          n_order_phase = 1
 3423.          l_solar_phf = .false.
 3424.          l_rescale_solar_phf = .false.
 3426.       else if ( i_angular_integration == 3 ) then
 3429.          t$774 = nd_max_order
 3429.          t$2972 = 1 + nd_max_order
 3429.          t$2973 = max( 0, 1 + nd_max_order )
 3429.          if ( i_truncation /= 3 ) then
 3429.             goto 10
 3429.          else if ( ms_max > 0 ) then
 3429.             _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$776,  _substr(t$775,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: An azimuthally symmetric truncation is not appropriate IF ms_max > 0.', 0x800600000000L ) ) )
 3429.             ierr = 1
 3429.          else
 3429.    10       continue
 3429.             if ( i_truncation == 1 ) then
 3429.                goto 20
 3429.                goto 30
 3429.             else if ( i_truncation == 4 ) then
 3429.    20          continue
 3429.                ls_max_order = 1 + ls_global_trunc
 3429.                ms_trunc(ms_min) = ms_min
 3429.                if ( ls_global_trunc + -ms_min >= 0 ) then
 3429.                   $I_L3429_707 = 0
 3429. !dir$ ivdep
 3429.                   do
 3429.                      ms_trunc(1 + ms_min + $I_L3429_707) = min( ms_max, min( ls_global_trunc, ( 1 + ms_min + $I_L3429_707 ) ) )
 3429.                      $I_L3429_707 = 1 + $I_L3429_707
 3429.                      if ( $I_L3429_707 >= 1 + ls_global_trunc + -ms_min ) exit
 3429.                   enddo
 3429.                endif
 3429.                ia_sph_mm(ms_min) = 1
 3429.                if ( ms_max + -ms_min > 0 ) then
 3429.                   $ia_sph_mm_WR0_R0 = 1
 3429.                   $I_L3429_709 = 0
 3429. !dir$ unroll 4
 3429.                   do
 3429.                      $ia_sph_mm_WR0_R0 = ( 3 + ls_global_trunc + $ia_sph_mm_WR0_R0 + -ms_min + -$I_L3429_709 )
 3429.                      ia_sph_mm(1 + ms_min + $I_L3429_709) = $ia_sph_mm_WR0_R0
 3429.                      $I_L3429_709 = 1 + $I_L3429_709
 3429.                      if ( $I_L3429_709 >= ( ms_max + -ms_min ) ) exit
 3429.                   enddo
 3429.                endif
 3429.                if ( ms_max + -ms_min >= 0 ) then
 3429.                   $I_L3429_711 = 0
 3429. !dir$ ivdep
 3429.                   do
 3429.                      ls_local_trunc(ms_min + $I_L3429_711) = ls_global_trunc + mod( ( ms_min + $I_L3429_711 ), 2 )
 3429.                      $I_L3429_711 = 1 + $I_L3429_711
 3429.                      if ( $I_L3429_711 >= 1 + ms_max + -ms_min ) exit
 3429.                   enddo
 3429.                endif
 3429.                goto 30
 3429.             else if ( i_truncation == 2 ) then
 3429.                ls_max_order = ls_global_trunc + mod( ms_min, 2 )
 3429.                ms_trunc(ms_min) = ms_min
 3429.                if ( ls_global_trunc + mod( ms_min, 2 ) + -ms_min > 0 ) then
 3429.                   $I_L3429_713 = 0
 3429. !dir$ ivdep
 3429.                   do
 3429.                      ms_trunc(1 + ms_min + $I_L3429_713) = min( ms_max, min( ( 1 + ms_min + $I_L3429_713 ), ( -1 + ls_global_trunc + mod( ms_min, 2 ) + -$I_L3429_713 ) ) )
 3429.                      $I_L3429_713 = 1 + $I_L3429_713
 3429.                      if ( $I_L3429_713 >= ( ls_global_trunc + mod( ms_min, 2 ) + -ms_min ) ) exit
 3429.                   enddo
 3429.                endif
 3429.                ia_sph_mm(ms_min) = 1
 3429.                if ( ms_max + -ms_min > 0 ) then
 3429.                   $ia_sph_mm_WR0_R1 = 1
 3429.                   $I_L3429_715 = 0
 3429. !dir$ unroll 4
 3429.                   do
 3429.                      $ia_sph_mm_WR0_R1 = ( 3 + ls_global_trunc + $ia_sph_mm_WR0_R1 + -ms_min + -2 * $I_L3429_715 )
 3429.                      ia_sph_mm(1 + ms_min + $I_L3429_715) = $ia_sph_mm_WR0_R1
 3429.                      $I_L3429_715 = 1 + $I_L3429_715
 3429.                      if ( $I_L3429_715 >= ( ms_max + -ms_min ) ) exit
 3429.                   enddo
 3429.                endif
 3429.                if ( ms_max + -ms_min >= 0 ) then
 3429.                   $I_L3429_717 = 0
 3429. !dir$ ivdep
 3429.                   do
 3429.                      ls_local_trunc(ms_min + $I_L3429_717) = ( ls_global_trunc + mod( ms_min, 2 ) + -$I_L3429_717 )
 3429.                      $I_L3429_717 = 1 + $I_L3429_717
 3429.                      if ( $I_L3429_717 >= 1 + ms_max + -ms_min ) exit
 3429.                   enddo
 3429.                endif
 3429.                goto 30
 3429.             else if ( i_truncation == 3 ) then
 3429.                ls_max_order = ls_global_trunc
 3429.                ms_trunc(0) = 0
 3429.                ia_sph_mm(0) = 1
 3429.                if ( ls_global_trunc > 0 ) then
 3429.                   $I_L3429_719 = 0
 3429. !dir$ ivdep
 3429.                   do
 3429.                      ms_trunc(1 + $I_L3429_719) = 0
 3429.                      $I_L3429_719 = 1 + $I_L3429_719
 3429.                      if ( $I_L3429_719 >= ls_global_trunc ) exit
 3429.                   enddo
 3429.                endif
 3429.                ls_local_trunc(0) = ls_global_trunc
 3429.    30          continue
 3429.                n_order_phase = 1
 3429.                if ( ms_max + -ms_min >= 0 ) then
 3429.                   $I_L3429_721 = 0
 3429. !dir$ ivdep
 3429.                   do
 3429.                      n_order_phase = max( n_order_phase, ls_local_trunc(ms_min + $I_L3429_721) )
 3429.                      $I_L3429_721 = 1 + $I_L3429_721
 3429.                      if ( $I_L3429_721 >= 1 + ms_max + -ms_min ) exit
 3429.                   enddo
 3429.                endif
 3429.             else
 3429.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$778,  _substr(t$777,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '***Error: An illegal truncation has been requested.', 0x800600000000L ) ) )
 3429.                ierr = 1
 3429.             endif
 3429.          endif
 3439.          l_solar_phf = isolir == 1 .and. i_sph_algorithm == 2
 3441.          l_rescale_solar_phf = l_rescale .and. isolir == 1 .and. i_sph_algorithm == 2
 3444.          if ( ( isolir == 1 .and. i_sph_algorithm == 2 ) /= .false. ) then
 3445.             tm$10 = loc( direction(1, 1, 1) )
 3445.             direction = _copyin( direction(1, 1, 1) )
 3445.             tm$12 = loc( cos_sol_view(1, 1) )
 3445.             cos_sol_view = _copyin( cos_sol_view(1, 1) )
 3445.             t$799 = nd_profile
 3445.             t$3051 = max( 0, nd_profile )
 3445.             t$800 = nd_direction
 3445.             t$3052 = max( 0, nd_profile )
 3445.             t$3053 = max( 0, nd_direction )
 3445.             t$3054 = max( 0, nd_direction ) * max( 0, nd_profile )
 3445.             t$3055 = 2 * max( 0, nd_direction ) * max( 0, nd_profile )
 3445.             t$3056 = max( 0, nd_direction ) * max( 0, nd_profile )
 3445.             if ( n_direction > 0 ) then
 3445.                if ( n_profile > 0 ) then
 3445.                   $I_L3445_786 = 0
 3445.                   do
 3445.                      $I_L3445_778 = 0
 3445.                      do
 3445.                         $I_L3445_791 = 0
 3445. !dir$ shortloop16
 3445. !dir$ blocking_size( 2, 2 )
 3445.                         do
 3445.                            $I_L3445_723 = 0
 3445. !dir$ ivdep
 3445. !dir$ blocking_size( 256, 256 )
 3445.                            do
 3445.                               $Flat_S12 = cos( direction(1 + $I_L3445_723 + 256 * $I_L3445_778, 1 + $I_L3445_791 + 2 * $I_L3445_786, 2) )
 3445.                               cos_sol_view(1 + $I_L3445_723 + 256 * $I_L3445_778, 1 + $I_L3445_791 + 2 * $I_L3445_786) = -( zen_0(1 + $I_L3445_723 + 256 * $I_L3445_778) * direction(1 + $I_L3445_723 + 256 * $I_L3445_778, 1 + $I_L3445_791 + 2 * $I_L3445_786, 1) ) + $Flat_S12 * _sqrt( ( 1.0 + -( zen_0(1 + $I_L3445_723 + 256 * $I_L3445_778) * zen_0(1 + $I_L3445_723 + 256 * $I_L3445_778) ) ) * ( 1.0 + -( direction(1 + $I_L3445_723 + 256 * $I_L3445_778, 1 + $I_L3445_791 + 2 * $I_L3445_786, 1) * direction(1 + $I_L3445_723 + 256 * $I_L3445_778, 1 + $I_L3445_791 + 2 * $I_L3445_786, 1) ) ) )
 3445.                               $I_L3445_723 = 1 + $I_L3445_723
 3445.                               if ( $I_L3445_723 >= min( n_profile, 256 + 256 * $I_L3445_778 ) + -256 * $I_L3445_778 ) exit
 3445.                            enddo
 3445.                            $I_L3445_791 = 1 + $I_L3445_791
 3445.                            if ( $I_L3445_791 >= min( n_direction, 2 + 2 * $I_L3445_786 ) + -2 * $I_L3445_786 ) exit
 3445.                         enddo
 3445.                         $I_L3445_778 = 1 + $I_L3445_778
 3445.                         if ( $I_L3445_778 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
 3445.                      enddo
 3445.                      $I_L3445_786 = 1 + $I_L3445_786
 3445.                      if ( $I_L3445_786 >= 1 + max( 0, -1 + _rsh( 1 + n_direction, 1 ) ) ) exit
 3445.                   enddo
 3445.                endif
 3445.             endif
 3445.             cos_sol_view(1, 1) = _copyout( cos_sol_view )
 3445.             direction(1, 1, 1) = _copyout( direction )
 3445.          endif
 3451.          t$172 = nd_max_order
 3451.          t$1495 = 1 + nd_max_order
 3451.          t$1496 = max( 0, 1 + nd_max_order )
 3451.          t$173 = nd_sph_coeff
 3451.          t$1497 = max( 0, nd_sph_coeff )
 3451.          if ( ls_max_order >= 0 ) then
 3451.             $I_L3451_762 = 0
 3451.             do
 3451.                $inv_S16 = 1.0/( real( 3 + 8 * $I_L3451_762 + 4 * $I_L3451_762 * $I_L3451_762, 8 ) )
 3451.                $t_S14 = ms_trunc($I_L3451_762)
 3451.                if ( $t_S14 + -ms_min >= 0 ) then
 3451.                   $I_L3451_726 = 0
 3451. !dir$ ivdep
 3451.                   do
 3451.                      cg_coeff(ia_sph_mm(ms_min + $I_L3451_726) + $I_L3451_762 + -ms_min + -$I_L3451_726) = _sqrt( $inv_S16 * real( 1 + -( ( ms_min + $I_L3451_726 ) * ( ms_min + $I_L3451_726 ) ) + $I_L3451_762 * $I_L3451_762 + 2 * $I_L3451_762, 8 ) )
 3451.                      $I_L3451_726 = 1 + $I_L3451_726
 3451.                      if ( $I_L3451_726 >= 1 + $t_S14 + -ms_min ) exit
 3451.                   enddo
 3451.                endif
 3451.                $I_L3451_762 = 1 + $I_L3451_762
 3451.                if ( $I_L3451_762 >= 1 + ls_max_order ) exit
 3451.             enddo
 3451.          endif
 3458.          t$217 = nd_max_order
 3458.          t$1791 = 1 + nd_max_order
 3458.          t$1792 = max( 0, 1 + nd_max_order )
 3458.          t$218 = nd_sph_coeff
 3458.          t$1793 = max( 0, nd_sph_coeff )
 3458.          if ( ms_max + -ms_min >= 0 ) then
 3458.             $I_L3458_764 = 0
 3458. !dir$ loop_info (automatic) cache_nt( ls_local_trunc, ia_sph_mm )
 3458.             do
 3458.                $j_S18 = ia_sph_mm(ms_min + $I_L3458_764)
 3458.                uplm_zero($j_S18) = 7.9577471545947673e-2
 3458.                if ( ( -2 + 2 * ms_min + 2 * $I_L3458_764 ) >= 0 ) then
 3458.                   $SC_uplm_zero_I13 = 7.9577471545947673e-2
 3458.                   $I_L3458_728 = 0
 3458. !dir$ ivdep
 3458.                   do
 3458.                      $SC_uplm_zero_I13 = ( $SC_uplm_zero_I13 * real( 3 + 2 * $I_L3458_728, 8 ) * 1.0/( real( 2 + 2 * $I_L3458_728, 8 ) ) )
 3458.                      $I_L3458_728 = 1 + $I_L3458_728
 3458.                      if ( $I_L3458_728 >= ( 2 * ms_min + 2 * $I_L3458_764 ) / 2 ) exit
 3458.                   enddo
 3458.                   uplm_zero($j_S18) = $SC_uplm_zero_I13
 3458.                endif
 3458.                uplm_zero($j_S18) = _sqrt( uplm_zero($j_S18) ) * real( 1 + -2 * mod( ( ms_min + $I_L3458_764 ), 2 ), 8 )
 3458.                uplm_zero(1 + $j_S18) = 2.38732414637843e-1
 3458.                if ( ( -2 + 2 * ms_min + 2 * $I_L3458_764 ) >= 0 ) then
 3458.                   $SC_uplm_zero_I14 = 2.38732414637843e-1
 3458.                   $I_L3458_730 = 0
 3458. !dir$ ivdep
 3458.                   do
 3458.                      $SC_uplm_zero_I14 = ( $SC_uplm_zero_I14 * real( 5 + 2 * $I_L3458_730, 8 ) * 1.0/( real( 2 + 2 * $I_L3458_730, 8 ) ) )
 3458.                      $I_L3458_730 = 1 + $I_L3458_730
 3458.                      if ( $I_L3458_730 >= ( 2 * ms_min + 2 * $I_L3458_764 ) / 2 ) exit
 3458.                   enddo
 3458.                   uplm_zero(1 + $j_S18) = $SC_uplm_zero_I14
 3458.                endif
 3458.                $t_S22 = -1 + ls_local_trunc(ms_min + $I_L3458_764)
 3458.                uplm_zero(1 + $j_S18) = _sqrt( uplm_zero(1 + $j_S18) ) * real( 1 + -2 * mod( ( ms_min + $I_L3458_764 ), 2 ), 8 )
 3458.                if ( ( -2 + $t_S22 + -ms_min + -$I_L3458_764 ) >= 0 ) then
 3458.                   $I_L3458_732 = 0
 3458.                   do
 3458.                      uplm_zero(2 + $j_S18 + 2 * $I_L3458_732) = -( uplm_zero($j_S18 + 2 * $I_L3458_732) * _sqrt( real( 1 + -( ( ms_min + $I_L3458_764 ) * ( ms_min + $I_L3458_764 ) ) + -4 * ms_min * ms_min + -2 * ms_min * ms_min * ms_min + -4 * ms_min * ms_min * $I_L3458_732 + -3 * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) + 4 * $I_L3458_732 * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) + 2 * ( 2 * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) + ms_min * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) + $I_L3458_764 * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) ) + -8 * ms_min * $I_L3458_732 * $I_L3458_764 + -4 * $I_L3458_732 * $I_L3458_764 * $I_L3458_764 + -6 * ms_min * ms_min * $I_L3458_764 + -6 * ms_min * $I_L3458_764 * $I_L3458_764 + -2 * $I_L3458_764 * $I_L3458_764 * $I_L3458_764 + -4 * $I_L3458_764 * $I_L3458_764 + -8 * ms_min * $I_L3458_764, 8 ) * 1.0/( real( -4 * ms_min * ms_min + -2 * ms_min * ms_min * ms_min + -4 * ms_min * ms_min * $I_L3458_732 + -3 * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) + 4 * $I_L3458_732 * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) + 2 * ( 2 * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) + ms_min * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) + $I_L3458_764 * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) ) + -8 * ms_min * $I_L3458_732 * $I_L3458_764 + -4 * $I_L3458_732 * $I_L3458_764 * $I_L3458_764 + -6 * ms_min * ms_min * $I_L3458_764 + -6 * ms_min * $I_L3458_764 * $I_L3458_764 + -2 * $I_L3458_764 * $I_L3458_764 * $I_L3458_764 + -4 * $I_L3458_764 * $I_L3458_764 + -8 * ms_min * $I_L3458_764 + 3 * ( ms_min + $I_L3458_764 ) * ( ms_min + $I_L3458_764 ), 8 ) ) ) )
 3458.                      uplm_zero(3 + $j_S18 + 2 * $I_L3458_732) = -( uplm_zero(1 + $j_S18 + 2 * $I_L3458_732) * _sqrt( real( 19 + -4 * ms_min * ms_min + -2 * ms_min * ms_min * ms_min + 8 * ms_min + -4 * ms_min * ms_min * $I_L3458_732 + 16 * $I_L3458_732 + 4 * $I_L3458_732 * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) + 2 * ( 2 * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) + ms_min * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) + $I_L3458_764 * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) ) + -8 * ms_min * $I_L3458_732 * $I_L3458_764 + -4 * $I_L3458_732 * $I_L3458_764 * $I_L3458_764 + -6 * ms_min * ms_min * $I_L3458_764 + -6 * ms_min * $I_L3458_764 * $I_L3458_764 + -2 * $I_L3458_764 * $I_L3458_764 * $I_L3458_764 + -4 * $I_L3458_764 * $I_L3458_764 + -8 * ms_min * $I_L3458_764 + 7 * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) + -3 * ( ms_min + $I_L3458_764 ) * ( ms_min + $I_L3458_764 ) + 8 * $I_L3458_764, 8 ) * 1.0/( real( -( ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) ) + -4 * ms_min * ms_min + -2 * ms_min * ms_min * ms_min + -4 * ms_min * ms_min * $I_L3458_732 + 4 * $I_L3458_732 * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) + 2 * ( 2 * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) + ms_min * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) + $I_L3458_764 * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) * ( 2 + ms_min + $I_L3458_764 + 2 * $I_L3458_732 ) ) + -8 * ms_min * $I_L3458_732 * $I_L3458_764 + -4 * $I_L3458_732 * $I_L3458_764 * $I_L3458_764 + -6 * ms_min * ms_min * $I_L3458_764 + -6 * ms_min * $I_L3458_764 * $I_L3458_764 + -2 * $I_L3458_764 * $I_L3458_764 * $I_L3458_764 + -4 * $I_L3458_764 * $I_L3458_764 + -8 * ms_min * $I_L3458_764 + ( ms_min + $I_L3458_764 ) * ( ms_min + $I_L3458_764 ), 8 ) ) ) )
 3458.                      $I_L3458_732 = 1 + $I_L3458_732
 3458.                      if ( $I_L3458_732 >= ( $t_S22 + -ms_min + -$I_L3458_764 ) / 2 ) exit
 3458.                   enddo
 3458.                endif
 3458.                $I_L3458_764 = 1 + $I_L3458_764
 3458.                if ( $I_L3458_764 >= 1 + ms_max + -ms_min ) exit
 3458.             enddo
 3458.          endif
 3462.          if ( isolir == 1 ) then
 3464.             tm$25 = loc( uplm_sol(1, 1) )
 3464.             uplm_sol = _copyin( uplm_sol(1, 1) )
 3464.             t$214 = nd_max_order
 3464.             t$1785 = 1 + nd_max_order
 3464.             t$1786 = max( 0, 1 + nd_max_order )
 3464.             t$215 = nd_profile
 3464.             t$1787 = max( 0, nd_profile )
 3464.             t$216 = nd_sph_coeff
 3464.             t$1788 = max( 0, nd_profile )
 3464.             t$1789 = max( 0, nd_sph_coeff )
 3464.             t$1790 = max( 0, nd_profile ) * max( 0, nd_sph_coeff )
 3464.             if ( ms_max + -ms_min >= 0 ) then
 3464.                $I_L3464_780 = 0
 3464. !dir$ loop_info (automatic) cache_nt( ia_sph_mm )
 3464.                do
 3464.                   $j_S28 = ia_sph_mm(ms_min + $I_L3464_780)
 3464.                   product = 1.0
 3464.                   if ( ( ms_min + $I_L3464_780 ) > 0 ) then
 3464.                      $I_L3464_734 = 0
 3464. !dir$ ivdep
 3464.                      do
 3464.                         product = product * ( 1.0 + -( 5.0e-1 * 1.0/( real( 1 + $I_L3464_734, 8 ) ) ) )
 3464.                         $I_L3464_734 = 1 + $I_L3464_734
 3464.                         if ( $I_L3464_734 >= ms_min + $I_L3464_780 ) exit
 3464.                      enddo
 3464.                      if ( n_profile > 0 ) then
 3464.                         $I_L3464_736 = 0
 3464. !dir$ ivdep
 3464.                         do
 3464.                            uplm_sol(1 + $I_L3464_736, $j_S28) = _sqrt( 7.9577471545947673e-2 * product * ( 1.0 + -( zen_0(1 + $I_L3464_736) * zen_0(1 + $I_L3464_736) ) ) ** ( ms_min + $I_L3464_780 ) * ( 1.0 + 2.0 * real( ms_min + $I_L3464_780, 8 ) ) ) * cvmg( -1.0, 1.0, and( 1, ( ms_min + $I_L3464_780 ) ) /= 0 )
 3464.                            $I_L3464_736 = 1 + $I_L3464_736
 3464.                            if ( $I_L3464_736 >= n_profile ) exit
 3464.                         enddo
 3464.                      endif
 3464.                   else if ( n_profile > 0 ) then
 3464.                      $I_L3464_738 = 0
 3464. !dir$ ivdep
 3464.                      do
 3464.                         uplm_sol(1 + $I_L3464_738, $j_S28) = 2.8209479177387814e-1
 3464.                         $I_L3464_738 = 1 + $I_L3464_738
 3464.                         if ( $I_L3464_738 >= n_profile ) exit
 3464.                      enddo
 3464.                   endif
 3464.                   if ( ( ms_min + $I_L3464_780 ) <= 1 + ls_local_trunc(ms_min + $I_L3464_780) ) then
 3464.                      if ( n_profile > 0 ) then
 3464.                         $I_L3464_740 = 0
 3464. !dir$ ivdep
 3464.                         do
 3464.                            uplm_sol(1 + $I_L3464_740, 1 + $j_S28) = -( uplm_sol(1 + $I_L3464_740, $j_S28) * zen_0(1 + $I_L3464_740) * _sqrt( 3.0 + 2.0 * real( ms_min + $I_L3464_780, 8 ) ) )
 3464.                            $I_L3464_740 = 1 + $I_L3464_740
 3464.                            if ( $I_L3464_740 >= n_profile ) exit
 3464.                         enddo
 3464.                      endif
 3464.                   endif
 3464.                   $t_S31 = 1 + ls_local_trunc(ms_min + $I_L3464_780)
 3464.                   if ( ( -2 + $t_S31 + -ms_min + -$I_L3464_780 ) >= 0 ) then
 3464.                      if ( n_profile > 0 ) then
 3464.                         $I_L3464_766 = 0
 3464.                         do
 3464.                            $I_L3464_742 = 0
 3464. !dir$ ivdep
 3464.                            do
 3464.                               uplm_sol(1 + $I_L3464_742, 2 + $j_S28 + $I_L3464_766) = -( uplm_sol(1 + $I_L3464_742, $j_S28 + $I_L3464_766) * _sqrt( 1.0/( ( real( 2 + ms_min + $I_L3464_766 + $I_L3464_780, 8 ) + -( real( ms_min + $I_L3464_780, 8 ) ) ) * ( real( ms_min + $I_L3464_780, 8 ) + real( 2 + ms_min + $I_L3464_766 + $I_L3464_780, 8 ) ) * ( -3.0 + 2.0 * real( 2 + ms_min + $I_L3464_766 + $I_L3464_780, 8 ) ) ) * ( ( 1.0 + 2.0 * real( 2 + ms_min + $I_L3464_766 + $I_L3464_780, 8 ) ) * ( -1.0 + real( ms_min + $I_L3464_780, 8 ) + real( 2 + ms_min + $I_L3464_766 + $I_L3464_780, 8 ) ) * ( -1.0 + real( 2 + ms_min + $I_L3464_766 + $I_L3464_780, 8 ) + -( real( ms_min + $I_L3464_780, 8 ) ) ) ) ) ) + uplm_sol(1 + $I_L3464_742, 1 + $j_S28 + $I_L3464_766) * ( -zen_0(1 + $I_L3464_742) ) * _sqrt( 1.0/( ( real( 2 + ms_min + $I_L3464_766 + $I_L3464_780, 8 ) + -( real( ms_min + $I_L3464_780, 8 ) ) ) * ( real( ms_min + $I_L3464_780, 8 ) + real( 2 + ms_min + $I_L3464_766 + $I_L3464_780, 8 ) ) ) * ( ( 1.0 + 2.0 * real( 2 + ms_min + $I_L3464_766 + $I_L3464_780, 8 ) ) * ( -1.0 + 2.0 * real( 2 + ms_min + $I_L3464_766 + $I_L3464_780, 8 ) ) ) )
 3464.                               $I_L3464_742 = 1 + $I_L3464_742
 3464.                               if ( $I_L3464_742 >= n_profile ) exit
 3464.                            enddo
 3464.                            $I_L3464_766 = 1 + $I_L3464_766
 3464.                            if ( $I_L3464_766 >= -1 + $t_S31 + -ms_min + -$I_L3464_780 ) exit
 3464.                         enddo
 3464.                      endif
 3464.                   endif
 3464.                   $I_L3464_780 = 1 + $I_L3464_780
 3464.                   if ( $I_L3464_780 >= 1 + ms_max + -ms_min ) exit
 3464.                enddo
 3464.             endif
 3464.             uplm_sol(1, 1) = _copyout( uplm_sol )
 3464.          endif
 3469.          if ( i_sph_algorithm == 2 ) then
 3471.             call calc_brdf( isolir, ms_min, ms_max, ia_sph_mm(0), uplm_sol(1, 1), uplm_zero(1), n_brdf_basis_fnc, ls_brdf_trunc, f_brdf(1, 0, 0, 0), n_profile, n_direction, direction(1, 1, 1), brdf_sol(1, 1, 1), brdf_hemi(1, 1, 1), nd_profile, nd_radiance_profile, nd_direction, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc )
 3471.          endif
 3483.          l_diff_alb = .false.
 3484.          if ( n_band > 0 ) then
 3484.             $I_L3484_744 = 0
 3484. !dir$ ivdep
 3484.             do
 3485.                l_diff_alb = l_diff_alb .or. i_gas_overlap(1 + $I_L3484_744) == 5
 3487.                $I_L3484_744 = 1 + $I_L3484_744
 3484.                if ( $I_L3484_744 >= n_band ) exit
 3484.             enddo
 3484.          endif
 3488.          if ( isolir == 2 ) then
 3488.             if ( l_diff_alb /= .false. ) then
 3489.                $tm_S38 = ia_sph_mm(0)
 3489.                tm$50 = loc( f_brdf(1, 0, 0, 0) )
 3489.                f_brdf = _copyin( f_brdf(1, 0, 0, 0) )
 3489.                t$266 = nd_brdf_basis_fnc
 3489.                t$267 = nd_brdf_trunc / 2
 3489.                t$268 = nd_brdf_trunc
 3489.                t$1880 = max( 0, nd_brdf_basis_fnc )
 3489.                t$1881 = max( 0, nd_brdf_basis_fnc )
 3489.                t$1882 = 1 + t$267
 3489.                t$1883 = max( 0, 1 + t$267 )
 3489.                t$1884 = max( 0, nd_brdf_basis_fnc ) * max( 0, 1 + t$267 )
 3489.                t$1885 = max( 0, nd_brdf_basis_fnc ) * max( 0, 1 + t$267 ) * max( 0, 1 + t$267 )
 3489.                t$1886 = 1 + nd_brdf_trunc
 3489.                t$1887 = max( 0, 1 + nd_brdf_trunc )
 3489.                t$1888 = max( 0, nd_brdf_basis_fnc ) * max( 0, 1 + t$267 ) * max( 0, 1 + t$267 ) * max( 0, 1 + nd_brdf_trunc )
 3489.                t$265 = nd_sph_coeff
 3489.                t$1889 = max( 0, nd_sph_coeff )
 3489.                t$269 = ( 1 + nd_brdf_trunc )
 3489.                t$1890 = max( 0, ( 1 + nd_brdf_trunc ) )
 3489.                t$1893 = 8 * max( 0, ( 1 + nd_brdf_trunc ) )
 3489.                t$1894 = 8 * ( 7 + 8 * max( 0, ( 1 + nd_brdf_trunc ) ) ) / 8
 3489.                t$1896 = t$1894 + 8 * max( 0, ( 1 + nd_brdf_trunc ) )
 3489.                t$1891 = int( _alloc( t$1894 + 8 * max( 0, ( 1 + nd_brdf_trunc ) ) ), 8 )
 3489.                t$1892 = t$1891
 3489.                t$1895 = t$1894 + t$1891
 3489.                if ( n_brdf_basis_fnc > 0 ) then
 3489.                   if ( ls_brdf_trunc >= 0 ) then
 3489.                      $I_L3489_752 = 0
 3489. !dir$ ivdep
 3489.                      do
 3489.                         diffuse_alb_basis(1 + $I_L3489_752) = 0.0
 3489.                         $I_L3489_752 = 1 + $I_L3489_752
 3489.                         if ( $I_L3489_752 >= n_brdf_basis_fnc ) exit
 3489.                      enddo
 3489.                      $I_L3489_782 = 0
 3489.                      do
 3489.                         $I_L3489_754 = 0
 3489. !dir$ ivdep
 3489.                         do
 3489.                            factor(1 + 2 * $I_L3489_754) = ( uplm_zero($tm_S38 + 2 * $I_L3489_754) * 1.0/( real( -3 + ( 1 + 2 * $I_L3489_754 ) * ( 1 + 2 * $I_L3489_754 ) + -2 * $I_L3489_754, 8 ) ) * real( 1 + -2 * mod( ( 2 * $I_L3489_754 ), 2 ), 8 ) )
 3489.                            sum_p(1 + 2 * $I_L3489_754) = 0.0
 3489.                            $I_L3489_754 = 1 + $I_L3489_754
 3489.                            if ( $I_L3489_754 >= ( 2 + ls_brdf_trunc ) / 2 ) exit
 3489.                         enddo
 3489.                         $I_L3489_768 = 0
 3489. !dir$ blocking_size( 1, 1 )
 3489.                         do
 3489.                            $SC_factor_I15 = factor(1 + 2 * $I_L3489_768)
 3489.                            $I_L3489_756 = 0
 3489. !dir$ ivdep
 3489. !dir$ blocking_size( 256, 256 )
 3489.                            do
 3489.                               sum_p(1 + 2 * $I_L3489_756) = sum_p(1 + 2 * $I_L3489_756) + $SC_factor_I15 * f_brdf(1 + $I_L3489_782, $I_L3489_756, $I_L3489_768, 0)
 3489.                               $I_L3489_756 = 1 + $I_L3489_756
 3489.                               if ( $I_L3489_756 >= ( 2 + ls_brdf_trunc ) / 2 ) exit
 3489.                            enddo
 3489.                            $I_L3489_768 = 1 + $I_L3489_768
 3489.                            if ( $I_L3489_768 >= ( 2 + ls_brdf_trunc ) / 2 ) exit
 3489.                         enddo
 3489.                         $SCA_diffuse_alb_basis_I12 = diffuse_alb_basis(1 + $I_L3489_782)
 3489.                         $I_L3489_758 = 0
 3489. !dir$ ivdep
 3489.                         do
 3489.                            $SCA_diffuse_alb_basis_I12 = $SCA_diffuse_alb_basis_I12 + ( sum_p(1 + 2 * $I_L3489_758) * uplm_zero($tm_S38 + 2 * $I_L3489_758) * 1.0/( real( -3 + -2 * $I_L3489_758 + ( 1 + 2 * $I_L3489_758 ) * ( 1 + 2 * $I_L3489_758 ), 8 ) ) )
 3489.                            $I_L3489_758 = 1 + $I_L3489_758
 3489.                            if ( $I_L3489_758 >= ( 2 + ls_brdf_trunc ) / 2 ) exit
 3489.                         enddo
 3489.                         diffuse_alb_basis(1 + $I_L3489_782) = $SCA_diffuse_alb_basis_I12
 3489.                         $I_L3489_782 = 1 + $I_L3489_782
 3489.                         if ( $I_L3489_782 >= n_brdf_basis_fnc ) exit
 3489.                      enddo
 3489.                      $I_L3489_760 = 0
 3489. !dir$ ivdep
 3489.                      do
 3489.                         diffuse_alb_basis(1 + $I_L3489_760) = 12.566370614359172 * diffuse_alb_basis(1 + $I_L3489_760)
 3489.                         $I_L3489_760 = 1 + $I_L3489_760
 3489.                         if ( $I_L3489_760 >= n_brdf_basis_fnc ) exit
 3489.                      enddo
 3489.                   else
 3489.                      $I_L3489_750 = 0
 3489. !dir$ ivdep
 3489.                      do
 3489.                         diffuse_alb_basis(1 + $I_L3489_750) = 0.0
 3489.                         $I_L3489_750 = 1 + $I_L3489_750
 3489.                         if ( $I_L3489_750 >= n_brdf_basis_fnc ) exit
 3489.                      enddo
 3489.                   endif
 3489.                endif
 3489.                _free( t$1891 )
 3489.                f_brdf(1, 0, 0, 0) = _copyout( f_brdf )
 3489.             endif
 3489.          endif
 3498.          t$769 = nd_viewing_level
 3498.          t$2971 = max( 0, nd_viewing_level )
 3498.          if ( n_viewing_level > 0 ) then
 3498.             $I_L3498_746 = 0
 3498. !dir$ ivdep
 3498.             do
 3498.                if ( viewing_level(1 + $I_L3498_746) < 0.0 ) then
 3498.                   _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$771,  _substr(t$770,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: A viewing level is above the TOA.', 0x800600000000L ) ) )
 3498.                   ierr = 1
 3498.                   goto 40
 3498.                endif
 3498.                i_rad_layer(1 + $I_L3498_746) = 1 + int( viewing_level(1 + $I_L3498_746) )
 3498.                frac_rad_layer(1 + $I_L3498_746) = 1.0 + viewing_level(1 + $I_L3498_746) + -( real( i_rad_layer(1 + $I_L3498_746), 8 ) )
 3498.                if ( i_rad_layer(1 + $I_L3498_746) <= n_layer ) then
 3498.                   $I_L3498_746 = 1 + $I_L3498_746
 3498.                else if ( frac_rad_layer(1 + $I_L3498_746) < 3.5527136788005009e-15 ) then
 3498.                else
 3498.                endif
 3498.                if ( $I_L3498_746 >= n_viewing_level ) exit
 3498.             enddo
 3498.          endif
 3498.       endif
 3498.    40 continue
 3509.       i_top = 1
 3516.       l_moist_aerosol = .false.
 3517.       if ( n_aerosol > 0 ) then
 3517.          $I_L3517_748 = 0
 3517. !dir$ ivdep
 3517.          do
 3518.             l_moist_aerosol = l_moist_aerosol .or. i_aerosol_parametrization(1 + $I_L3517_748) == 2
 3521.             $I_L3517_748 = 1 + $I_L3517_748
 3517.             if ( $I_L3517_748 >= n_aerosol ) exit
 3517.          enddo
 3517.       endif
 3523.       if ( l_moist_aerosol /= .false. ) then
 3524.          tm$68 = loc( gas_mix_ratio(1, 1, index_water) )
 3524.          water_mix_ratio = _copyin( gas_mix_ratio(1, 1, index_water) )
 3524.          t$764 = nd_aerosol_species
 3524.          t$2963 = max( 0, nd_aerosol_species )
 3524.          t$765 = nd_profile
 3524.          t$766 = nd_layer
 3524.          t$2964 = max( 0, nd_profile )
 3524.          t$2965 = max( 0, nd_profile )
 3524.          t$2966 = max( 0, nd_layer )
 3524.          t$2967 = max( 0, nd_profile ) * max( 0, nd_layer )
 3524.          t$2970 = 8 * max( 0, nd_profile ) * max( 0, nd_layer )
 3524.          t$2968 = int( _alloc( 8 * max( 0, nd_profile ) * max( 0, nd_layer ) ), 8 )
 3524.          t$2969 = t$2968
 3524.          tm$76 = loc( mix_ratio_sat(1, 1) )
 3524.          sat_spec_hum = _copyin( mix_ratio_sat(1, 1) )
 3524.          t$720 = nd_profile
 3524.          t$721 = nd_layer
 3524.          t$2811 = max( 0, nd_profile )
 3524.          t$2812 = max( 0, nd_profile )
 3524.          t$2813 = max( 0, nd_layer )
 3524.          t$2814 = max( 0, nd_profile ) * max( 0, nd_layer )
 3524.          if ( n_layer > 0 ) then
 3524.             if ( n_profile > 0 ) then
 3524.                $I_L3524_859 = 0
 3524.                do
 3524.                   $I_L3524_853 = 0
 3524. !dir$ ivdep
 3524.                   do
 3524.                      $temp_S45 = -273.14999999999998 + t(1 + $I_L3524_853, 1 + $I_L3524_859)
 3524.                      $press_S46 = 1.0e-2 * p(1 + $I_L3524_853, 1 + $I_L3524_859)
 3524.                      $ew_S47 = 10.0 ** ( 1.0/( 1.0 + 4.1200000000000004e-3 * $temp_S45 ) * ( 7.8590000000000004e-1 + 3.4770000000000002e-2 * $temp_S45 ) )
 3524.                      $ewdash_S48 = $ew_S47 * ( 1.0 + 9.9999999999999995e-7 * $press_S46 * ( 4.5 + 5.9999999999999995e-4 * $temp_S45 * $temp_S45 ) )
 3524.                      if ( $press_S46 > ( $ew_S47 * ( 1.0 + 9.9999999999999995e-7 * $press_S46 * ( 4.5 + 5.9999999999999995e-4 * $temp_S45 * $temp_S45 ) ) ) ) then
 3524.                         sat_spec_hum(1 + $I_L3524_853, 1 + $I_L3524_859) = ( 1.0/( $press_S46 + -3.7802000000000002e-1 * $ewdash_S48 ) * ( 6.2197999999999998e-1 * $ewdash_S48 ) )
 3524.                      else
 3524.                         sat_spec_hum(1 + $I_L3524_853, 1 + $I_L3524_859) = 1.0
 3524.                      endif
 3524.                      $I_L3524_853 = 1 + $I_L3524_853
 3524.                      if ( $I_L3524_853 >= n_profile ) exit
 3524.                   enddo
 3524.                   $I_L3524_859 = 1 + $I_L3524_859
 3524.                   if ( $I_L3524_859 >= n_layer ) exit
 3524.                enddo
 3524.             endif
 3524.          endif
 3524.          mix_ratio_sat(1, 1) = _copyout( sat_spec_hum )
 3524.          $nhumidity_common_S50 = 0
 3524.          if ( n_aerosol > 0 ) then
 3524.             $I_L3524_855 = 0
 3524.             do
 3524.                if ( i_aerosol_parametrization(1 + $I_L3524_855) /= 2 .orelse. nhumidity(1 + $I_L3524_855) <= 0 ) then
 3524.                   $I_L3524_855 = 1 + $I_L3524_855
 3524.                else
 3524.                endif
 3524.                if ( $I_L3524_855 >= n_aerosol ) exit
 3524.             enddo
 3524.             goto 50
 3524.          else
 3524.    50       continue
 3524.             delta_humidity = 1.0/( -1.0 + real( $nhumidity_common_S50, 8 ) )
 3524.             if ( nd_layer > 0 ) then
 3524.                if ( nd_profile > 0 ) then
 3524.                   $I_L3524_861 = 0
 3524.                   do
 3524.                      $I_L3524_857 = 0
 3524. !dir$ ivdep
 3524.                      do
 3524.                         $mean_rel_humidity_WR0_R3 = ( water_mix_ratio(1 + $I_L3524_857, 1 + $I_L3524_861) * ( 1.0 + -mix_ratio_sat(1 + $I_L3524_857, 1 + $I_L3524_861) ) * 1.0/( mix_ratio_sat(1 + $I_L3524_857, 1 + $I_L3524_861) * ( 1.0 + -water_mix_ratio(1 + $I_L3524_857, 1 + $I_L3524_861) ) ) )
 3524.                         $mean_rel_humidity_WR0_R3 = min( 9.9999000000000005e-1, $mean_rel_humidity_WR0_R3 )
 3524.                         mean_rel_humidity(1 + $I_L3524_857, 1 + $I_L3524_861) = $mean_rel_humidity_WR0_R3
 3524.                         i_humidity_pointer(1 + $I_L3524_857, 1 + $I_L3524_861) = 1 + int( $mean_rel_humidity_WR0_R3 * ( -1 + $nhumidity_common_S50 ) )
 3524.                         $I_L3524_857 = 1 + $I_L3524_857
 3524.                         if ( $I_L3524_857 >= nd_profile ) exit
 3524.                      enddo
 3524.                      $I_L3524_861 = 1 + $I_L3524_861
 3524.                      if ( $I_L3524_861 >= nd_layer ) exit
 3524.                   enddo
 3524.                endif
 3524.             endif
 3524.             _free( t$2968 )
 3524.          endif
 3524.          gas_mix_ratio(1, 1, index_water) = _copyout( water_mix_ratio )
 3531.          if ( ierr /= 0 ) then
 2485.             _free( t$1148 )
 2485.          else
 2485.             goto 60
 2485.          endif
 2485.       else
 2485.    60    continue
 3537.          l_aerosol_density = .false.
 3538.          if ( l_aerosol /= .false. ) then
 3539.             if ( n_aerosol > 0 ) then
 3539.                $I_L3539_464 = 0
 3539. !dir$ ivdep
 3539.                do
 3540.                   l_aerosol_density = l_aerosol_density .or. i_aerosol_parametrization(1 + $I_L3539_464) == 2 .or. i_aerosol_parametrization(1 + $I_L3539_464) == 3
 3545.                   $I_L3539_464 = 1 + $I_L3539_464
 3539.                   if ( $I_L3539_464 >= n_aerosol ) exit
 3539.                enddo
 3539.             endif
 3539.          endif
 3552.          if ( l_cloud /= .false. ) then
 3555.             t$742 = nd_cloud_component
 3555.             t$2861 = max( 0, nd_cloud_component )
 3555.             if ( n_condensed > 0 ) then
 3555.                $I_L3555_466 = 0
 3555. !dir$ ivdep
 3555.                do
 3555.                   i_cloud_type(1 + $I_L3555_466) = 0
 3555.                   if ( i_cloud_representation == 1 ) then
 3555.                      if ( type_condensed(1 + $I_L3555_466) == 1 ) then
 3555.                         i_cloud_type(1 + $I_L3555_466) = 1
 3555.                      else if ( type_condensed(1 + $I_L3555_466) == 2 ) then
 3555.                         i_cloud_type(1 + $I_L3555_466) = 1
 3555.                      endif
 3555.                   else if ( i_cloud_representation == 2 ) then
 3555.                      if ( type_condensed(1 + $I_L3555_466) == 1 ) then
 3555.                         i_cloud_type(1 + $I_L3555_466) = 1
 3555.                      else if ( type_condensed(1 + $I_L3555_466) == 2 ) then
 3555.                         i_cloud_type(1 + $I_L3555_466) = 2
 3555.                      endif
 3555.                   else if ( i_cloud_representation == 3 ) then
 3555.                      if ( type_condensed(1 + $I_L3555_466) == 1 ) then
 3555.                         i_cloud_type(1 + $I_L3555_466) = 1
 3555.                      else if ( type_condensed(1 + $I_L3555_466) == 2 ) then
 3555.                         i_cloud_type(1 + $I_L3555_466) = 1
 3555.                      else if ( type_condensed(1 + $I_L3555_466) == 3 ) then
 3555.                         i_cloud_type(1 + $I_L3555_466) = 2
 3555.                      else if ( type_condensed(1 + $I_L3555_466) == 4 ) then
 3555.                         i_cloud_type(1 + $I_L3555_466) = 2
 3555.                      endif
 3555.                   else if ( i_cloud_representation == 4 ) then
 3555.                      if ( type_condensed(1 + $I_L3555_466) == 1 ) then
 3555.                         i_cloud_type(1 + $I_L3555_466) = 1
 3555.                      else if ( type_condensed(1 + $I_L3555_466) == 2 ) then
 3555.                         i_cloud_type(1 + $I_L3555_466) = 2
 3555.                      else if ( type_condensed(1 + $I_L3555_466) == 3 ) then
 3555.                         i_cloud_type(1 + $I_L3555_466) = 3
 3555.                      else if ( type_condensed(1 + $I_L3555_466) == 4 ) then
 3555.                         i_cloud_type(1 + $I_L3555_466) = 4
 3555.                      endif
 3555.                   endif
 3555.                   if ( i_cloud_type(1 + $I_L3555_466) == 0 ) then
 3555.                      _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$744,  _substr(t$743,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: A component is not compatible with the representation of clouds selected.', 0x800600000000L ) ) )
 3555.                      ierr = 1
 3555.                      goto 70
 3555.                   endif
 3555.                   if ( type_condensed(1 + $I_L3555_466) == 1 ) then
 3555.                      i_phase_cmp(1 + $I_L3555_466) = 1
 3555.                      l_cloud_cmp(1 + $I_L3555_466) = l_drop
 3555.                   else if ( type_condensed(1 + $I_L3555_466) == 2 ) then
 3555.                      i_phase_cmp(1 + $I_L3555_466) = 2
 3555.                      l_cloud_cmp(1 + $I_L3555_466) = l_ice
 3555.                   else if ( type_condensed(1 + $I_L3555_466) == 3 ) then
 3555.                      i_phase_cmp(1 + $I_L3555_466) = 1
 3555.                      l_cloud_cmp(1 + $I_L3555_466) = l_drop
 3555.                   else if ( type_condensed(1 + $I_L3555_466) == 4 ) then
 3555.                      i_phase_cmp(1 + $I_L3555_466) = 2
 3555.                      l_cloud_cmp(1 + $I_L3555_466) = l_ice
 3555.                   endif
 3555.                   $I_L3555_466 = 1 + $I_L3555_466
 3555.                   if ( $I_L3555_466 >= n_condensed ) exit
 3555.                enddo
 3555.             endif
 3555.    70       continue
 3561.             if ( ierr /= 0 ) then
 2485.                _free( t$1148 )
 2485.             else
 3565.                t$739 = nd_profile
 3565.                t$740 = id_ct
 3565.                t$741 = nd_layer
 3565.                t$2856 = max( 0, nd_profile )
 3565.                t$2857 = max( 0, nd_profile )
 3565.                t$2858 = 1 + nd_layer + -id_ct
 3565.                t$2859 = max( 0, 1 + nd_layer + -id_ct )
 3565.                t$2860 = max( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
 3565.                if ( n_layer + -id_ct >= 0 ) then
 3565.                   if ( n_profile > 0 ) then
 3565.                      $I_L3565_558 = 0
 3565. !dir$ ivdep
 3565.                      do
 3565.                         n_cloud_profile(id_ct + $I_L3565_558) = 0
 3565.                         $I_L3565_558 = 1 + $I_L3565_558
 3565.                         if ( $I_L3565_558 >= 1 + n_layer + -id_ct ) exit
 3565.                      enddo
 3565.                      $I_L3565_558 = 0
 3565.                      do
 3565.                         $I_L3565_468 = 0
 3565. !dir$ ivdep
 3565.                         do
 3565.                            if ( w_cloud(1 + $I_L3565_468, id_ct + $I_L3565_558) > 0.0 ) then
 3565.                               n_cloud_profile(id_ct + $I_L3565_558) = 1 + n_cloud_profile(id_ct + $I_L3565_558)
 3565.                               i_cloud_profile(n_cloud_profile(id_ct + $I_L3565_558), id_ct + $I_L3565_558) = ( 1 + $I_L3565_468 )
 3565.                            endif
 3565.                            $I_L3565_468 = 1 + $I_L3565_468
 3565.                            if ( $I_L3565_468 >= n_profile ) exit
 3565.                         enddo
 3565.                         $I_L3565_558 = 1 + $I_L3565_558
 3565.                         if ( $I_L3565_558 >= 1 + n_layer + -id_ct ) exit
 3565.                      enddo
 3565.                   else
 3565.                      $I_L3565_540 = 0
 3565. !dir$ ivdep
 3565.                      do
 3565.                         n_cloud_profile(id_ct + $I_L3565_540) = 0
 3565.                         $I_L3565_540 = 1 + $I_L3565_540
 3565.                         if ( $I_L3565_540 >= 1 + n_layer + -id_ct ) exit
 3565.                      enddo
 3565.                   endif
 3565.                endif
 3565.                if ( l_global_cloud_top /= .false. ) then
 3565.                   n_cloud_top = n_global_cloud_top
 3565.                else
 3565.                   n_cloud_top = id_ct
 3565.                   if ( ( id_ct < n_layer .and. n_cloud_profile(id_ct) == 0 ) /= .false. ) then
 3565.                      do
 3565.                         n_cloud_top = 1 + n_cloud_top
 3565.                         if ( ( n_cloud_top < n_layer .and. n_cloud_profile(n_cloud_top) == 0 ) == .false. ) exit
 3565.                      enddo
 3565.                   endif
 3565.                endif
 3571.                k_clr = 1
 3572.                if ( i_cloud == 6 .orelse. i_cloud == 8 ) then
 3577.                   n_region = 3
 3578.                   type_region(1) = 1
 3579.                   type_region(2) = 2
 3580.                   type_region(3) = 3
 3581.                   t$118 = nd_profile
 3581.                   t$119 = id_ct
 3581.                   t$120 = nd_layer
 3581.                   t$121 = nd_cloud_type
 3581.                   t$1305 = max( 0, nd_profile )
 3581.                   t$1306 = max( 0, nd_profile )
 3581.                   t$1307 = 1 + nd_layer + -id_ct
 3581.                   t$1308 = max( 0, 1 + nd_layer + -id_ct )
 3581.                   t$1309 = max( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
 3581.                   t$1310 = max( 0, nd_cloud_type )
 3581.                   t$1311 = max( 0, nd_profile ) * max( 0, nd_cloud_type ) * max( 0, 1 + nd_layer + -id_ct )
 3581.                   t$122 = nd_region
 3581.                   t$1312 = max( 0, nd_region )
 3581.                   t$1313 = max( 0, nd_profile ) * max( 0, nd_region ) * max( 0, 1 + nd_layer + -id_ct )
 3581.                   if ( i_cloud == 6 ) then
 3572.                      goto 80
 3581.                   else if ( i_cloud == 8 ) then
 3581.    80                continue
 3581.                      if ( i_cloud_representation == 4 ) then
 3581.                         if ( n_cloud_type > 0 ) then
 3581.                            $SC_i_region_cloud_I3 = i_region_cloud(4)
 3581.                            $SC_i_region_cloud_I2 = i_region_cloud(3)
 3581.                            $SC_i_region_cloud_I1 = i_region_cloud(2)
 3581.                            if ( 1 < n_cloud_type ) then
 3581.                               $I_L3581_814 = 0
 3581. !dir$ ivdep
 3581.                               do
 3581.                                  if ( $I_L3581_814 == 0 ) then
 3581.                                     $SC_i_region_cloud_I1 = 2
 3581.                                  else if ( $I_L3581_814 == 1 ) then
 3581.                                     $SC_i_region_cloud_I2 = 3
 3581.                                  else if ( $I_L3581_814 == 2 ) then
 3581.                                     $SC_i_region_cloud_I3 = 3
 3581.                                  endif
 3581.                                  $I_L3581_814 = 1 + $I_L3581_814
 3581.                                  if ( $I_L3581_814 >= -1 + n_cloud_type ) exit
 3581.                               enddo
 3581.                            endif
 3581.                            i_region_cloud(4) = $SC_i_region_cloud_I3
 3581.                            i_region_cloud(3) = $SC_i_region_cloud_I2
 3581.                            i_region_cloud(2) = $SC_i_region_cloud_I1
 3581.                            i_region_cloud(1) = 2
 3581.                         endif
 3581.                         if ( nd_layer > 0 ) then
 3581.                            if ( nd_profile > 0 ) then
 3581.                               $I_L3581_564 = 0
 3581.                               do
 3581.                                  $I_L3581_478 = 0
 3581. !dir$ ivdep
 3581.                                  do
 3581.                                     frac_region(1 + $I_L3581_478, 1 + $I_L3581_564, 2) = frac_cloud(1 + $I_L3581_478, 1 + $I_L3581_564, 2) + frac_cloud(1 + $I_L3581_478, 1 + $I_L3581_564, 1)
 3581.                                     frac_region(1 + $I_L3581_478, 1 + $I_L3581_564, 3) = frac_cloud(1 + $I_L3581_478, 1 + $I_L3581_564, 4) + frac_cloud(1 + $I_L3581_478, 1 + $I_L3581_564, 3)
 3581.                                     $I_L3581_478 = 1 + $I_L3581_478
 3581.                                     if ( $I_L3581_478 >= nd_profile ) exit
 3581.                                  enddo
 3581.                                  $I_L3581_564 = 1 + $I_L3581_564
 3581.                                  if ( $I_L3581_564 >= nd_layer ) exit
 3581.                               enddo
 3581.                            endif
 3581.                         endif
 3581.                      else if ( i_cloud_representation == 3 ) then
 3581.                         if ( n_cloud_type > 0 ) then
 3581.                            $SC_i_region_cloud_I1 = i_region_cloud(2)
 3581.                            if ( 1 < n_cloud_type ) then
 3581.                               $SC_i_region_cloud_I1 = 3
 3581.                            endif
 3581.                            i_region_cloud(2) = $SC_i_region_cloud_I1
 3581.                            i_region_cloud(1) = 2
 3581.                         endif
 3581.                         if ( nd_layer > 0 ) then
 3581.                            if ( nd_profile > 0 ) then
 3581.                               $I_L3581_562 = 0
 3581.                               do
 3581.                                  $I_L3581_474 = 0
 3581. !dir$ ivdep
 3581.                                  do
 3581.                                     frac_region(1 + $I_L3581_474, 1 + $I_L3581_562, 2) = frac_cloud(1 + $I_L3581_474, 1 + $I_L3581_562, 1)
 3581.                                     frac_region(1 + $I_L3581_474, 1 + $I_L3581_562, 3) = frac_cloud(1 + $I_L3581_474, 1 + $I_L3581_562, 2)
 3581.                                     $I_L3581_474 = 1 + $I_L3581_474
 3581.                                     if ( $I_L3581_474 >= nd_profile ) exit
 3581.                                  enddo
 3581.                                  $I_L3581_562 = 1 + $I_L3581_562
 3581.                                  if ( $I_L3581_562 >= nd_layer ) exit
 3581.                               enddo
 3581.                            endif
 3581.                         endif
 3581.                      else
 3581.                         _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$124,  _substr(t$123,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: This representation of clouds is not compatible with separate ', 0x800600000000L ), _iotype( 'convective and stratiform and overlap.', 0x800600000000L ) ) )
 3581.                         ierr = 1
 3581.                      endif
 3581.                   endif
 3581.                else
 3589.                   if ( i_cloud == 2 ) then
 3589.                      goto 90
 3589.                   else if ( i_cloud == 4 ) then
 3589.                      goto 90
 3589.                   else if ( i_cloud == 7 ) then
 3589.    90                continue
 3593.                      n_region = 2
 3594.                      type_region(1) = 1
 3595.                      type_region(2) = 2
 3596.                      if ( n_layer + -n_cloud_top >= 0 ) then
 3597.                         if ( n_profile > 0 ) then
 3596.                            $I_L3596_560 = 0
 3596.                            do
 3597.                               $I_L3597_470 = 0
 3597. !dir$ ivdep
 3597.                               do
 3598.                                  frac_region(1 + $I_L3597_470, n_cloud_top + $I_L3596_560, 2) = 1.0
 3599.                                  $I_L3597_470 = 1 + $I_L3597_470
 3597.                                  if ( $I_L3597_470 >= n_profile ) exit
 3597.                               enddo
 3600.                               $I_L3596_560 = 1 + $I_L3596_560
 3599.                               if ( $I_L3596_560 >= 1 + n_layer + -n_cloud_top ) exit
 3599.                            enddo
 3599.                         endif
 3599.                      endif
 3599.                   endif
 3599.                endif
 3606.                if ( i_cloud == 2 .orelse. i_cloud == 4 .orelse. i_cloud == 6 .orelse. i_cloud == 7 .orelse. i_cloud == 8 ) then
 3612.                   call overlap_coupled( n_profile, n_layer, n_cloud_top, w_cloud(1, id_ct), w_free(1, 1), n_region, type_region(1), frac_region(1, id_ct, 1), p(1, 1), i_cloud, cloud_overlap(1, -1 + id_ct, 1), nd_profile, nd_layer, nd_overlap_coeff, nd_region, id_ct, dp_corr_strat, dp_corr_conv )
 3612.                else
 3620.                   if ( i_cloud == 3 ) then
 3622.                      t$237 = nd_profile
 3622.                      t$238 = id_ct
 3622.                      t$239 = nd_layer
 3622.                      t$1827 = max( 0, nd_profile )
 3622.                      t$1828 = max( 0, nd_profile )
 3622.                      t$1829 = 1 + nd_layer + -id_ct
 3622.                      t$1830 = max( 0, 1 + nd_layer + -id_ct )
 3622.                      t$1831 = max( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
 3622.                      t$240 = nd_cloud_type
 3622.                      t$1832 = max( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
 3622.                      t$1833 = max( 0, nd_cloud_type )
 3622.                      t$1834 = max( 0, nd_profile ) * max( 0, nd_cloud_type ) * max( 0, 1 + nd_layer + -id_ct )
 3622.                      t$241 = nd_column
 3622.                      t$1835 = max( 0, nd_column )
 3622.                      t$1836 = max( 0, nd_profile ) * max( 0, nd_column )
 3622.                      t$242 = ( 1 + nd_layer + -id_ct )
 3622.                      t$1837 = max( 0, ( 1 + nd_layer + -id_ct ) )
 3622.                      t$1840 = 8 * max( 0, ( 1 + nd_layer + -id_ct ) )
 3622.                      t$1842 = 12 * max( 0, ( 1 + nd_layer + -id_ct ) )
 3622.                      t$1844 = 16 * max( 0, ( 1 + nd_layer + -id_ct ) )
 3622.                      t$1845 = 8 * ( 7 + 16 * max( 0, ( 1 + nd_layer + -id_ct ) ) ) / 8
 3622.                      t$1847 = t$1845 + 8 * max( 0, ( 1 + nd_layer + -id_ct ) )
 3622.                      t$1838 = int( _alloc( t$1845 + 8 * max( 0, ( 1 + nd_layer + -id_ct ) ) ), 8 )
 3622.                      t$1839 = t$1838
 3622.                      t$1841 = t$1838 + 8 * max( 0, ( 1 + nd_layer + -id_ct ) )
 3622.                      t$1843 = t$1838 + 12 * max( 0, ( 1 + nd_layer + -id_ct ) )
 3622.                      t$1846 = t$1845 + t$1838
 3622.                      if ( n_cloud_type == 2 ) then
 3622.                         $ptr_cnv_S67 = 2
 3622.                         goto 100
 3622.                      else if ( n_cloud_type == 1 ) then
 3622.                         $ptr_cnv_S67 = 0
 3622.   100                   continue
 3622.                         if ( n_profile > 0 ) then
 3622.                            $I_L3622_809 = 0
 3622.                            do
 3622.                               if ( n_layer + -n_cloud_top >= 0 ) then
 3622.                                  if ( n_cloud_type == 2 ) then
 3622.                                     $I_L3622_795 = 0
 3622. !dir$ ivdep
 3622. !dir$ loop_info (automatic) cache_nt( frac_cloud, w_cloud )
 3622.                                     do
 3622.                                        cnv_right(1 + $I_L3622_795) = w_cloud(1 + $I_L3622_809, n_cloud_top + $I_L3622_795) * frac_cloud(1 + $I_L3622_809, n_cloud_top + $I_L3622_795, $ptr_cnv_S67)
 3622.                                        strat_left(1 + $I_L3622_795) = 1.0 + -( w_cloud(1 + $I_L3622_809, n_cloud_top + $I_L3622_795) * frac_cloud(1 + $I_L3622_809, n_cloud_top + $I_L3622_795, 1) )
 3622.                                        key_st(1 + $I_L3622_795) = ( 1 + $I_L3622_795 )
 3622.                                        key_cnv(1 + $I_L3622_795) = ( 1 + $I_L3622_795 )
 3622.                                        $I_L3622_795 = 1 + $I_L3622_795
 3622.                                        if ( $I_L3622_795 >= 1 + n_layer + -n_cloud_top ) exit
 3622.                                     enddo
 3622.                                  else
 3622.                                     $I_L3622_803 = 0
 3622. !dir$ ivdep
 3622. !dir$ loop_info (automatic) cache_nt( frac_cloud, w_cloud )
 3622.                                     do
 3622.                                        cnv_right(1 + $I_L3622_803) = 0.0
 3622.                                        strat_left(1 + $I_L3622_803) = 1.0 + -( w_cloud(1 + $I_L3622_809, n_cloud_top + $I_L3622_803) * frac_cloud(1 + $I_L3622_809, n_cloud_top + $I_L3622_803, 1) )
 3622.                                        key_st(1 + $I_L3622_803) = ( 1 + $I_L3622_803 )
 3622.                                        key_cnv(1 + $I_L3622_803) = ( 1 + $I_L3622_803 )
 3622.                                        $I_L3622_803 = 1 + $I_L3622_803
 3622.                                        if ( $I_L3622_803 >= 1 + n_layer + -n_cloud_top ) exit
 3622.                                     enddo
 3622.                                  endif
 3622.                               endif
 3622.                               t$779 = ( 1 + n_layer + -n_cloud_top )
 3622.                               t$2974 = max( 0, ( 1 + n_layer + -n_cloud_top ) )
 3622.                               if ( n_layer + -n_cloud_top == 0 ) then
 3622.                                  key_cnv(1) = 1
 3622.                                  key_st(1) = 1
 3622.                               else
 3622.                                  $gap_S70 = 1 + n_layer + -n_cloud_top
 3622.                                  if ( n_layer + -n_cloud_top > 0 ) then
 3622.                                     do
 3622.                                        $gap_S70 = $gap_S70 / 2
 3622.                                        if ( n_layer + -n_cloud_top + -$gap_S70 >= 0 ) then
 3622.                                           $I_L3622_805 = 0
 3622.                                           do
 3622.                                              if ( ( $I_L3622_805 /= 0 .and. xor( -$gap_S70, -$I_L3622_805 ) < 0 ) == .false. ) then
 3622.                                                 $t_S74 = ( $gap_S70 + $I_L3622_805 ) / $gap_S70
 3622.                                                 $I_L3622_797 = 0
 3622.                                                 if ( mod( -$gap_S70, $gap_S70 ) == 0 ) then
 3622.                                                    do
 3622.                                                       if ( cnv_right(key_cnv(1 + $I_L3622_805 + -( $gap_S70 * $I_L3622_797 ))) > cnv_right(key_cnv(1 + $gap_S70 + $I_L3622_805 + -( $gap_S70 * $I_L3622_797 ))) ) then
 3622.                                                          $pointer_temp_S73 = key_cnv(1 + $I_L3622_805 + -( $gap_S70 * $I_L3622_797 ))
 3622.                                                          key_cnv(1 + $I_L3622_805 + -( $gap_S70 * $I_L3622_797 )) = key_cnv(1 + $gap_S70 + $I_L3622_805 + -( $gap_S70 * $I_L3622_797 ))
 3622.                                                          key_cnv(1 + $gap_S70 + $I_L3622_805 + -( $gap_S70 * $I_L3622_797 )) = $pointer_temp_S73
 3622.                                                       endif
 3622.                                                       $I_L3622_797 = 1 + $I_L3622_797
 3622.                                                       if ( $I_L3622_797 >= $t_S74 ) exit
 3622.                                                    enddo
 3622.                                                 else
 3622. !dir$ ivdep safevl = 4
 3622.                                                    do
 3622.                                                       if ( cnv_right(key_cnv(1 + $I_L3622_805 + -( $gap_S70 * $I_L3622_797 ))) > cnv_right(key_cnv(1 + $gap_S70 + $I_L3622_805 + -( $gap_S70 * $I_L3622_797 ))) ) then
 3622.                                                          $pointer_temp_S73 = key_cnv(1 + $I_L3622_805 + -( $gap_S70 * $I_L3622_797 ))
 3622.                                                          key_cnv(1 + $I_L3622_805 + -( $gap_S70 * $I_L3622_797 )) = key_cnv(1 + $gap_S70 + $I_L3622_805 + -( $gap_S70 * $I_L3622_797 ))
 3622.                                                          key_cnv(1 + $gap_S70 + $I_L3622_805 + -( $gap_S70 * $I_L3622_797 )) = $pointer_temp_S73
 3622.                                                       endif
 3622.                                                       $I_L3622_797 = 1 + $I_L3622_797
 3622.                                                       if ( $I_L3622_797 >= $t_S74 ) exit
 3622.                                                    enddo
 3622.                                                 endif
 3622.                                              endif
 3622.                                              $I_L3622_805 = 1 + $I_L3622_805
 3622.                                              if ( $I_L3622_805 >= 1 + n_layer + -n_cloud_top + -$gap_S70 ) exit
 3622.                                           enddo
 3622.                                        endif
 3622.                                        if ( $gap_S70 < 2 ) exit
 3622.                                     enddo
 3622.                                  endif
 3622.                                  $gap_S75 = 1 + n_layer + -n_cloud_top
 3622.                                  if ( n_layer + -n_cloud_top > 0 ) then
 3622.                                     do
 3622.                                        $gap_S75 = $gap_S75 / 2
 3622.                                        if ( n_layer + -n_cloud_top + -$gap_S75 >= 0 ) then
 3622.                                           $I_L3622_807 = 0
 3622.                                           do
 3622.                                              if ( ( $I_L3622_807 /= 0 .and. xor( -$gap_S75, -$I_L3622_807 ) < 0 ) == .false. ) then
 3622.                                                 $t_S79 = ( $gap_S75 + $I_L3622_807 ) / $gap_S75
 3622.                                                 $I_L3622_799 = 0
 3622.                                                 if ( mod( -$gap_S75, $gap_S75 ) == 0 ) then
 3622.                                                    do
 3622.                                                       if ( strat_left(key_st(1 + $I_L3622_807 + -( $gap_S75 * $I_L3622_799 ))) > strat_left(key_st(1 + $gap_S75 + $I_L3622_807 + -( $gap_S75 * $I_L3622_799 ))) ) then
 3622.                                                          $pointer_temp_S78 = key_st(1 + $I_L3622_807 + -( $gap_S75 * $I_L3622_799 ))
 3622.                                                          key_st(1 + $I_L3622_807 + -( $gap_S75 * $I_L3622_799 )) = key_st(1 + $gap_S75 + $I_L3622_807 + -( $gap_S75 * $I_L3622_799 ))
 3622.                                                          key_st(1 + $gap_S75 + $I_L3622_807 + -( $gap_S75 * $I_L3622_799 )) = $pointer_temp_S78
 3622.                                                       endif
 3622.                                                       $I_L3622_799 = 1 + $I_L3622_799
 3622.                                                       if ( $I_L3622_799 >= $t_S79 ) exit
 3622.                                                    enddo
 3622.                                                 else
 3622. !dir$ ivdep safevl = 4
 3622.                                                    do
 3622.                                                       if ( strat_left(key_st(1 + $I_L3622_807 + -( $gap_S75 * $I_L3622_799 ))) > strat_left(key_st(1 + $gap_S75 + $I_L3622_807 + -( $gap_S75 * $I_L3622_799 ))) ) then
 3622.                                                          $pointer_temp_S78 = key_st(1 + $I_L3622_807 + -( $gap_S75 * $I_L3622_799 ))
 3622.                                                          key_st(1 + $I_L3622_807 + -( $gap_S75 * $I_L3622_799 )) = key_st(1 + $gap_S75 + $I_L3622_807 + -( $gap_S75 * $I_L3622_799 ))
 3622.                                                          key_st(1 + $gap_S75 + $I_L3622_807 + -( $gap_S75 * $I_L3622_799 )) = $pointer_temp_S78
 3622.                                                       endif
 3622.                                                       $I_L3622_799 = 1 + $I_L3622_799
 3622.                                                       if ( $I_L3622_799 >= $t_S79 ) exit
 3622.                                                    enddo
 3622.                                                 endif
 3622.                                              endif
 3622.                                              $I_L3622_807 = 1 + $I_L3622_807
 3622.                                              if ( $I_L3622_807 >= 1 + n_layer + -n_cloud_top + -$gap_S75 ) exit
 3622.                                           enddo
 3622.                                        endif
 3622.                                        if ( $gap_S75 < 2 ) exit
 3622.                                     enddo
 3622.                                  endif
 3622.                               endif
 3622.                               t$779 = ( 1 + n_layer + -n_cloud_top )
 3622.                               t$2974 = max( 0, ( 1 + n_layer + -n_cloud_top ) )
 3622.                               n_column_cld(1 + $I_L3622_809) = 0
 3622.                               n_column_slv(1 + $I_L3622_809) = 0
 3622.                               if ( n_layer + -n_cloud_top >= 0 ) then
 3622.                                  $I_L3622_801 = 0
 3622.                                  do
 3622.                                     if ( cnv_right(1 + $I_L3622_801) <= 2.2204460492503131e-12 ) then
 3622.                                        if ( strat_left(1 + $I_L3622_801) > 2.2204460492503131e-12 ) then
 3622.                                           $I_L3622_801 = 1 + $I_L3622_801
 3622.                                        else if ( n_column_cld(1 + $I_L3622_809) < nd_column ) then
 3622.                                        else
 3622.                                        endif
 3622.                                     else if ( n_column_cld(1 + $I_L3622_809) < nd_column ) then
 3622.                                     else
 3622.                                     endif
 3622.                                     if ( $I_L3622_801 >= 1 + n_layer + -n_cloud_top ) exit
 3622.                                  enddo
 3622.                                  $x_done_S85 = 0.0
 3622.                                  $i_key_cnv_S82 = 1
 3622.                                  $x_cnv_S81 = cnv_right(key_cnv(1))
 3622.                                  if ( ( n_layer + -n_cloud_top > 0 .and. $x_cnv_S81 < 2.2204460492503131e-12 ) /= .false. ) then
 3622.                                     do
 3622.                                        $i_key_cnv_S82 = 1 + $i_key_cnv_S82
 3622.                                        $x_cnv_S81 = cnv_right(key_cnv($i_key_cnv_S82))
 3622.                                        if ( ( $i_key_cnv_S82 < 1 + n_layer + -n_cloud_top .and. $x_cnv_S81 < 2.2204460492503131e-12 ) == .false. ) exit
 3622.                                     enddo
 3622.                                  endif
 3622.                                  $i_key_st_S84 = 1
 3622.                                  $x_st_S83 = strat_left(key_st(1))
 3622.                                  if ( ( n_layer + -n_cloud_top > 0 .and. $x_st_S83 < 2.2204460492503131e-12 ) /= .false. ) then
 3622.                                     do
 3622.                                        $i_key_st_S84 = 1 + $i_key_st_S84
 3622.                                        $x_st_S83 = strat_left(key_st($i_key_st_S84))
 3622.                                        if ( ( $i_key_st_S84 < 1 + n_layer + -n_cloud_top .and. $x_st_S83 < 2.2204460492503131e-12 ) == .false. ) exit
 3622.                                     enddo
 3622.                                  endif
 3622. !dir$ loop_info (automatic) cache_nt( list_column_slv )
 3622.                                  do
 3622.                                     if ( $x_cnv_S81 <= $x_st_S83 ) then
 3622.                                        if ( n_column_cld(1 + $I_L3622_809) < nd_column ) then
 3622.                                           n_column_cld(1 + $I_L3622_809) = 1 + n_column_cld(1 + $I_L3622_809)
 3622.                                           i_clm_lyr_chn(1 + $I_L3622_809, n_column_cld(1 + $I_L3622_809)) = -1 + n_cloud_top + key_cnv($i_key_cnv_S82)
 3622.                                           i_clm_cld_typ(1 + $I_L3622_809, n_column_cld(1 + $I_L3622_809)) = 0
 3622.                                           $x_new_done_S86 = $x_cnv_S81
 3622.                                           $i_key_cnv_S82 = 1 + $i_key_cnv_S82
 3622.                                           if ( $i_key_cnv_S82 <= 1 + n_layer + -n_cloud_top ) then
 3622.                                              $x_cnv_S81 = cnv_right(key_cnv($i_key_cnv_S82))
 3622.                                           else
 3622.                                              $x_cnv_S81 = 1.0
 3622.                                           endif
 3622.                                           if ( $x_st_S83 > 9.9999999999777955e-1 ) then
 3622.                                              if ( $x_cnv_S81 > 9.9999999999777955e-1 ) then
 3622.                                                 $x_new_done_S86 = 1.0
 3622.                                              endif
 3622.                                           endif
 3622.                                           $dx_col_S87 = $x_new_done_S86 + -$x_done_S85
 3622.                                           if ( ( $x_new_done_S86 + -$x_done_S85 ) > 2.2204460492503131e-12 ) then
 3622.                                              n_column_slv(1 + $I_L3622_809) = 1 + n_column_slv(1 + $I_L3622_809)
 3622.                                              list_column_slv(1 + $I_L3622_809, n_column_slv(1 + $I_L3622_809)) = n_column_cld(1 + $I_L3622_809)
 3622.                                              area_column(1 + $I_L3622_809, n_column_cld(1 + $I_L3622_809)) = $dx_col_S87
 3622.                                              $x_done_S85 = $x_new_done_S86
 3622.                                           else
 3622.                                              area_column(1 + $I_L3622_809, n_column_cld(1 + $I_L3622_809)) = 0.0
 3622.                                           endif
 3622.                                        else
 3622.                                        endif
 3622.                                     else if ( n_column_cld(1 + $I_L3622_809) < nd_column ) then
 3622.                                     else
 3622.                                     endif
 3622.                                     if ( $x_done_S85 >= 9.9999999999777955e-1 ) exit
 3622.                                  enddo
 3622.                                  $I_L3622_809 = 1 + $I_L3622_809
 3622.                               else
 3622.                               endif
 3622.                               if ( $I_L3622_809 >= n_profile ) exit
 3622.                            enddo
 3622.                            goto 110
 3622.                         else
 3622.   110                      continue
 3622.                            _free( t$1838 )
 3622.                         endif
 3622.                      else
 3622.                         _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$246,  _substr(t$245,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: There are too many types of cloud for the type of overlap.', 0x800600000000L ) ) )
 3622.                         ierr = 1
 3622.                         _free( t$1838 )
 3622.                      endif
 3622.                   endif
 3622.                endif
 3622.                goto 120
 3622.             endif
 3622.          else
 3634.             n_cloud_top = 1 + n_layer
 3634.   120       continue
 3641.             if ( l_continuum .orelse. l_aerosol_density ) then
 3641.                goto 130
 3641.             else
 3641.                if ( l_cloud /= .false. ) then
 3644.                   t$591 = nd_cloud_component
 3644.                   t$2243 = max( 0, nd_cloud_component )
 3644.                   t$4407 = .false.
 3644.                   if ( n_condensed > 0 ) then
 3644.                      $I_L3644_490 = 0
 3644. !dir$ ivdep
 3644.                      do
 3644.                         t$4407 = t$4407 .or. l_cloud_cmp(1 + $I_L3644_490) .and. i_phase_cmp(1 + $I_L3644_490) == 2 .and. ( i_condensed_param(1 + $I_L3644_490) == 4 .or. i_condensed_param(1 + $I_L3644_490) == 5 ) .or. i_phase_cmp(1 + $I_L3644_490) == 1 .and. i_condensed_param(1 + $I_L3644_490) == 3 .or. i_phase_cmp(1 + $I_L3644_490) == 2 .and. i_condensed_param(1 + $I_L3644_490) == 3
 3644.                         $I_L3644_490 = 1 + $I_L3644_490
 3644.                         if ( $I_L3644_490 >= n_condensed ) exit
 3644.                      enddo
 3644.                   endif
 3641.                   if ( t$4407 /= .false. ) then
 3641.   130                continue
 3653.                      tm$142 = loc( gas_mix_ratio(1, 1, max( 1, index_water )) )
 3653.                      water_frac = _copyin( gas_mix_ratio(1, 1, max( 1, index_water )) )
 3653.                      t$212 = nd_profile
 3653.                      t$213 = nd_layer
 3653.                      t$1781 = max( 0, nd_profile )
 3653.                      t$1782 = max( 0, nd_profile )
 3653.                      t$1783 = max( 0, nd_layer )
 3653.                      t$1784 = max( 0, nd_profile ) * max( 0, nd_layer )
 3653.                      if ( nd_layer > 0 ) then
 3653.                         if ( nd_profile > 0 ) then
 3653.                            $I_L3653_570 = 0
 3653.                            do
 3653.                               $I_L3653_492 = 0
 3653. !dir$ ivdep
 3653.                               do
 3653.                                  density(1 + $I_L3653_492, 1 + $I_L3653_570) = ( 3.4840049333509857e-3 * p(1 + $I_L3653_492, 1 + $I_L3653_570) * 1.0/( t(1 + $I_L3653_492, 1 + $I_L3653_570) * ( 1.0 + 6.0785554500896466e-1 * water_frac(1 + $I_L3653_492, 1 + $I_L3653_570) ) ) )
 3653.                                  $I_L3653_492 = 1 + $I_L3653_492
 3653.                                  if ( $I_L3653_492 >= nd_profile ) exit
 3653.                               enddo
 3653.                               $I_L3653_570 = 1 + $I_L3653_570
 3653.                               if ( $I_L3653_570 >= nd_layer ) exit
 3653.                            enddo
 3653.                         endif
 3653.                      endif
 3653.                      if ( l_continuum /= .false. ) then
 3653.                         if ( nd_layer > 0 ) then
 3653.                            if ( nd_profile > 0 ) then
 3653.                               $I_L3653_572 = 0
 3653.                               do
 3653.                                  $I_L3653_494 = 0
 3653. !dir$ ivdep
 3653.                                  do
 3653.                                     molar_density_frn(1 + $I_L3653_494, 1 + $I_L3653_572) = 34.523234136573919 * density(1 + $I_L3653_494, 1 + $I_L3653_572) * ( 1.0 + -water_frac(1 + $I_L3653_494, 1 + $I_L3653_572) )
 3653.                                     molar_density_water(1 + $I_L3653_494, 1 + $I_L3653_572) = 55.508373438133148 * water_frac(1 + $I_L3653_494, 1 + $I_L3653_572) * density(1 + $I_L3653_494, 1 + $I_L3653_572)
 3653.                                     $I_L3653_494 = 1 + $I_L3653_494
 3653.                                     if ( $I_L3653_494 >= nd_profile ) exit
 3653.                                  enddo
 3653.                                  $I_L3653_572 = 1 + $I_L3653_572
 3653.                                  if ( $I_L3653_572 >= nd_layer ) exit
 3653.                               enddo
 3653.                            endif
 3653.                         endif
 3653.                      endif
 3653.                      gas_mix_ratio(1, 1, max( 1, index_water )) = _copyout( water_frac )
 3653.                   endif
 3653.                endif
 3653.             endif
 3671.             if ( i_angular_integration == 3 ) then
 3672.                t$223 = nd_aerosol_species
 3672.                t$1802 = max( 0, nd_aerosol_species )
 3672.                t$224 = nd_cloud_component
 3672.                t$1803 = max( 0, nd_cloud_component )
 3672.                if ( l_henyey_greenstein_pf /= .false. ) then
 3672.                   $n_order_required_S94 = 1
 3672.                else
 3672.                   $n_order_required_S94 = cvmg( max( n_order_phase, n_order_forward ), n_order_phase, l_rescale )
 3672.                   if ( l_solar_phf /= .false. ) then
 3672.                      $n_order_required_S94 = max( n_order_phase, n_order_phase_solar )
 3672.                      if ( l_rescale /= .false. ) then
 3672.                         $n_order_required_S94 = 1 + max( n_order_phase, n_order_phase_solar )
 3672.                      endif
 3672.                   endif
 3672.                endif
 3672.                if ( l_aerosol /= .false. ) then
 3672.                   $l_inadequate_S95 = .false.
 3672.                   if ( n_aerosol > 0 ) then
 3672.                      $I_L3672_496 = 0
 3672.                      do
 3672.                         if ( i_aerosol_parametrization(1 + $I_L3672_496) /= 1 ) then
 3672.                            if ( i_aerosol_parametrization(1 + $I_L3672_496) /= 2 ) then
 3672.                               if ( i_aerosol_parametrization(1 + $I_L3672_496) == 4 .orelse. i_aerosol_parametrization(1 + $I_L3672_496) == 5 ) then
 3672.                                  $l_inadequate_S95 = $n_order_required_S94 > n_aerosol_phf_term(1 + $I_L3672_496)
 3672.                               else
 3672.                                  if ( i_aerosol_parametrization(1 + $I_L3672_496) == 3 ) then
 3672.                                     $l_inadequate_S95 = $n_order_required_S94 > n_phase_term_aerosol_prsc(1 + $I_L3672_496)
 3672.                                  endif
 3672.                               endif
 3672.                            endif
 3672.                         endif
 3672.                         if ( $l_inadequate_S95 /= .false. ) then
 3672.                            j = ( 1 + $I_L3672_496 )
 3672.                            _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$226,  _substr(t$225,1,15), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: There is not enough information to define', 0x800600000000L ), _iotype( 'the phase function for aerosol ', 0x800600000000L ), _iotype( j, 0x2000200000000L ), _iotype( ' to the desired order.', 0x800600000000L ) ) )
 3672.                            ierr = 1
 3672.                            goto 150
 3672.                         endif
 3672.                         $I_L3672_496 = 1 + $I_L3672_496
 3672.                         if ( $I_L3672_496 >= n_aerosol ) exit
 3672.                      enddo
 3672.                      goto 140
 3672.                   else
 3672.                      goto 140
 3672.                   endif
 3672.                else
 3672.   140             continue
 3672.                   if ( l_cloud /= .false. ) then
 3672.                      $l_inadequate_S97 = .false.
 3672.                      if ( n_condensed > 0 ) then
 3672.                         $I_L3672_498 = 0
 3672.                         do
 3672.                            if ( i_phase_cmp(1 + $I_L3672_498) == 1 ) then
 3672.                               if ( i_condensed_param(1 + $I_L3672_498) /= 1 ) then
 3672.                                  if ( i_condensed_param(1 + $I_L3672_498) /= 2 ) then
 3672.                                     if ( i_condensed_param(1 + $I_L3672_498) /= 5 ) then
 3672.                                        if ( i_condensed_param(1 + $I_L3672_498) == 3 ) then
 3672.                                           $l_inadequate_S97 = $n_order_required_S94 > n_phase_term_drop_prsc
 3672.                                        endif
 3672.                                     endif
 3672.                                  endif
 3672.                               endif
 3672.                               if ( $l_inadequate_S97 /= .false. ) then
 3672.                                  j = ( 1 + $I_L3672_498 )
 3672.                                  _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$228,  _substr(t$227,1,19), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: There is not enough information to define', 0x800600000000L ), _iotype( 'the phase function for condensed species ', 0x800600000000L ), _iotype( j, 0x2000200000000L ), _iotype( ' (water droplets) ', 0x800600000000L ), _iotype( 'to the desired order.', 0x800600000000L ) ) )
 3672.                                  ierr = 1
 3672.                                  goto 150
 3672.                               endif
 3672.                               $I_L3672_498 = 1 + $I_L3672_498
 3672.                            else if ( i_phase_cmp(1 + $I_L3672_498) == 2 ) then
 3672.                            else
 3672.                            endif
 3672.                            if ( $I_L3672_498 >= n_condensed ) exit
 3672.                         enddo
 3672.                      endif
 3672.                   endif
 3672.                endif
 3672.   150          continue
 3688.                if ( ierr /= 0 ) then
 2485.                   _free( t$1148 )
 2485.                else
 2485.                   goto 160
 2485.                endif
 2485.             else
 2485.   160          continue
 3698.                if ( i_last_band + -i_first_band >= 0 ) then
 3698.                   $I_L3698_616 = 0
 3698.                   do
 3701.                      if ( $I_L3698_616 == 0 ) then
 3702.                         l_initial = .true.
 3702.                      else
 3704.                         l_initial = map_channel(i_first_band + $I_L3698_616) > map_channel(-1 + i_first_band + $I_L3698_616)
 3704.                      endif
 3709.                      if ( l_gas == .false. ) then
 3786.                         $l_gas_band_S136 = .false.
 3793.                         if ( l_continuum /= .false. ) then
 3794.                            n_continuum = n_band_continuum(i_first_band + $I_L3698_616)
 3795.                            if ( n_continuum > 0 ) then
 3795.                               $I_L3795_873 = 0
 3795.                               do
 3796.                                  i_continuum_pointer(1 + $I_L3795_873) = index_continuum(i_first_band + $I_L3698_616, 1 + $I_L3795_873)
 3797.                                  $i_continuum_S115 = i_continuum_pointer(1 + $I_L3795_873)
 3798.                                  k_continuum_mono($i_continuum_S115) = k_continuum(i_first_band + $I_L3698_616, $i_continuum_S115)
 3800.                                  tm$203 = loc( gas_mix_ratio(1, 1, index_water) )
 3800.                                  water_frac = _copyin( gas_mix_ratio(1, 1, index_water) )
 3800.                                  tm$205 = loc( amount_continuum(1, 1, $i_continuum_S115) )
 3800.                                  amount_continuum = _copyin( amount_continuum(1, 1, $i_continuum_S115) )
 3800.                                  tm$207 = loc( scale_continuum(1, i_first_band + $I_L3698_616, $i_continuum_S115) )
 3800.                                  scale_parameter = _copyin( scale_continuum(1, i_first_band + $I_L3698_616, $i_continuum_S115) )
 3800.                                  t$722 = nd_profile
 3800.                                  t$723 = nd_layer
 3800.                                  t$2815 = max( 0, nd_profile )
 3800.                                  t$2816 = max( 0, nd_profile )
 3800.                                  t$2817 = max( 0, nd_layer )
 3800.                                  t$2818 = max( 0, nd_profile ) * max( 0, nd_layer )
 3800.                                  t$724 = nd_scale_variable
 3800.                                  t$2819 = max( 0, nd_scale_variable )
 3800.                                  if ( i_scale_fnc_cont(i_first_band + $I_L3698_616, $i_continuum_S115) == 1 ) then
 3800.                                     if ( nd_layer > 0 ) then
 3800.                                        if ( nd_profile > 0 ) then
 3800.                                           $SCA_t_ref_continuum_I16 = t_ref_continuum($i_continuum_S115, i_first_band + $I_L3698_616)
 3800.                                           $SCA_p_ref_continuum_I17 = p_ref_continuum($i_continuum_S115, i_first_band + $I_L3698_616)
 3800.                                           $SC_scale_parameter_I21 = scale_parameter(2)
 3800.                                           $SC_scale_parameter_I20 = scale_parameter(1)
 3800.                                           $I_L3800_871 = 0
 3800.                                           do
 3800.                                              $I_L3800_867 = 0
 3800. !dir$ ivdep
 3800.                                              do
 3800.                                                 amount_continuum(1 + $I_L3800_867, 1 + $I_L3800_871) = _expn( $SC_scale_parameter_I20 * log( ( p(1 + $I_L3800_867, 1 + $I_L3800_871) * 1.0/$SCA_p_ref_continuum_I17 ) ) + $SC_scale_parameter_I21 * log( ( t(1 + $I_L3800_867, 1 + $I_L3800_871) * 1.0/$SCA_t_ref_continuum_I16 ) ) )
 3800.                                                 $I_L3800_867 = 1 + $I_L3800_867
 3800.                                                 if ( $I_L3800_867 >= nd_profile ) exit
 3800.                                              enddo
 3800.                                              $I_L3800_871 = 1 + $I_L3800_871
 3800.                                              if ( $I_L3800_871 >= nd_layer ) exit
 3800.                                           enddo
 3800.                                        endif
 3800.                                     endif
 3800.                                  else if ( i_scale_fnc_cont(i_first_band + $I_L3698_616, $i_continuum_S115) == 2 ) then
 3800.                                     if ( nd_layer > 0 ) then
 3800.                                        if ( nd_profile > 0 ) then
 3800.                                           $SCA_p_ref_continuum_I18 = p_ref_continuum($i_continuum_S115, i_first_band + $I_L3698_616)
 3800.                                           $SCA_t_ref_continuum_I19 = t_ref_continuum($i_continuum_S115, i_first_band + $I_L3698_616)
 3800.                                           $SC_scale_parameter_I22 = scale_parameter(3)
 3800.                                           $SC_scale_parameter_I21 = scale_parameter(2)
 3800.                                           $SC_scale_parameter_I20 = scale_parameter(1)
 3800.                                           $I_L3800_869 = 0
 3800.                                           do
 3800.                                              $I_L3800_865 = 0
 3800. !dir$ ivdep
 3800.                                              do
 3800.                                                 amount_continuum(1 + $I_L3800_865, 1 + $I_L3800_869) = ( 1.0 + $SC_scale_parameter_I22 * ( -1.0 + ( t(1 + $I_L3800_865, 1 + $I_L3800_869) * 1.0/$SCA_t_ref_continuum_I19 ) ) * ( -1.0 + ( t(1 + $I_L3800_865, 1 + $I_L3800_869) * 1.0/$SCA_t_ref_continuum_I19 ) ) + $SC_scale_parameter_I21 * ( -1.0 + ( t(1 + $I_L3800_865, 1 + $I_L3800_869) * 1.0/$SCA_t_ref_continuum_I19 ) ) ) * _expn( $SC_scale_parameter_I20 * log( ( p(1 + $I_L3800_865, 1 + $I_L3800_869) * 1.0/$SCA_p_ref_continuum_I18 ) ) )
 3800.                                                 $I_L3800_865 = 1 + $I_L3800_865
 3800.                                                 if ( $I_L3800_865 >= nd_profile ) exit
 3800.                                              enddo
 3800.                                              $I_L3800_869 = 1 + $I_L3800_869
 3800.                                              if ( $I_L3800_869 >= nd_layer ) exit
 3800.                                           enddo
 3800.                                        endif
 3800.                                     endif
 3800.                                  endif
 3800.                                  if ( $i_continuum_S115 == 1 ) then
 3800.                                     if ( nd_layer > 0 ) then
 3800.                                        if ( nd_profile > 0 ) then
 3800.                                           $I_L3800_592 = 0
 3800.                                           do
 3800.                                              $I_L3800_520 = 0
 3800. !dir$ ivdep
 3800.                                              do
 3800.                                                 amount_continuum(1 + $I_L3800_520, 1 + $I_L3800_592) = amount_continuum(1 + $I_L3800_520, 1 + $I_L3800_592) * molar_density_water(1 + $I_L3800_520, 1 + $I_L3800_592) * water_frac(1 + $I_L3800_520, 1 + $I_L3800_592)
 3800.                                                 $I_L3800_520 = 1 + $I_L3800_520
 3800.                                                 if ( $I_L3800_520 >= nd_profile ) exit
 3800.                                              enddo
 3800.                                              $I_L3800_592 = 1 + $I_L3800_592
 3800.                                              if ( $I_L3800_592 >= nd_layer ) exit
 3800.                                           enddo
 3800.                                        endif
 3800.                                     endif
 3800.                                  else if ( $i_continuum_S115 == 2 ) then
 3800.                                     if ( nd_layer > 0 ) then
 3800.                                        if ( nd_profile > 0 ) then
 3800.                                           $I_L3800_590 = 0
 3800.                                           do
 3800.                                              $I_L3800_518 = 0
 3800. !dir$ ivdep
 3800.                                              do
 3800.                                                 amount_continuum(1 + $I_L3800_518, 1 + $I_L3800_590) = amount_continuum(1 + $I_L3800_518, 1 + $I_L3800_590) * water_frac(1 + $I_L3800_518, 1 + $I_L3800_590) * molar_density_frn(1 + $I_L3800_518, 1 + $I_L3800_590)
 3800.                                                 $I_L3800_518 = 1 + $I_L3800_518
 3800.                                                 if ( $I_L3800_518 >= nd_profile ) exit
 3800.                                              enddo
 3800.                                              $I_L3800_590 = 1 + $I_L3800_590
 3800.                                              if ( $I_L3800_590 >= nd_layer ) exit
 3800.                                           enddo
 3800.                                        endif
 3800.                                     endif
 3800.                                  else if ( $i_continuum_S115 == 3 ) then
 3800.                                     if ( nd_layer > 0 ) then
 3800.                                        if ( nd_profile > 0 ) then
 3800.                                           $I_L3800_588 = 0
 3800.                                           do
 3800.                                              $I_L3800_516 = 0
 3800. !dir$ ivdep
 3800.                                              do
 3800.                                                 amount_continuum(1 + $I_L3800_516, 1 + $I_L3800_588) = 7.8100000000000003e-1 * amount_continuum(1 + $I_L3800_516, 1 + $I_L3800_588) * density(1 + $I_L3800_516, 1 + $I_L3800_588)
 3800.                                                 $I_L3800_516 = 1 + $I_L3800_516
 3800.                                                 if ( $I_L3800_516 >= nd_profile ) exit
 3800.                                              enddo
 3800.                                              $I_L3800_588 = 1 + $I_L3800_588
 3800.                                              if ( $I_L3800_588 >= nd_layer ) exit
 3800.                                           enddo
 3800.                                        endif
 3800.                                     endif
 3800.                                  endif
 3800.                                  scale_continuum(1, i_first_band + $I_L3698_616, $i_continuum_S115) = _copyout( scale_parameter )
 3800.                                  amount_continuum(1, 1, $i_continuum_S115) = _copyout( amount_continuum )
 3800.                                  gas_mix_ratio(1, 1, index_water) = _copyout( water_frac )
 3812.                                  $I_L3795_873 = 1 + $I_L3795_873
 3800.                                  if ( $I_L3795_873 >= n_continuum ) exit
 3800.                               enddo
 3800.                            endif
 3800.                         endif
 3817.                         ss_prop%k_grey_tot_clr%header%a_contig = 1
 3817.                         ss_prop%k_grey_tot_clr%dim_1%LB = 1
 3817.                         ss_prop%k_grey_tot_clr%dim_1%EX = ( max( 0, nd_profile ) )
 3817.                         ss_prop%k_grey_tot_clr%dim_1%SM = 1
 3817.                         ss_prop%k_grey_tot_clr%dim_2%LB = 1
 3817.                         ss_prop%k_grey_tot_clr%dim_2%EX = ( max( 0, nd_layer_clr ) )
 3817.                         ss_prop%k_grey_tot_clr%dim_2%SM = ( max( 0, nd_profile ) )
 3817.                         $_allo_P17(0) = 0x1000000000001L
 3817.                         $_allo_P17(1) = loc( ss_prop%k_grey_tot_clr )
 3817.                         call __allocate( $_allo_P17, 0, 0, _fcd( 0, 0 ) )
 3819.                         ss_prop%k_ext_scat_clr%header%a_contig = 1
 3819.                         ss_prop%k_ext_scat_clr%dim_1%LB = 1
 3819.                         ss_prop%k_ext_scat_clr%dim_1%EX = ( max( 0, nd_profile ) )
 3819.                         ss_prop%k_ext_scat_clr%dim_1%SM = 1
 3819.                         ss_prop%k_ext_scat_clr%dim_2%LB = 1
 3819.                         ss_prop%k_ext_scat_clr%dim_2%EX = ( max( 0, nd_layer_clr ) )
 3819.                         ss_prop%k_ext_scat_clr%dim_2%SM = ( max( 0, nd_profile ) )
 3819.                         $_allo_P18(0) = 0x1000000000001L
 3819.                         $_allo_P18(1) = loc( ss_prop%k_ext_scat_clr )
 3819.                         call __allocate( $_allo_P18, 0, 0, _fcd( 0, 0 ) )
 3821.                         ss_prop%tau_clr%header%a_contig = 1
 3821.                         ss_prop%tau_clr%dim_1%LB = 1
 3821.                         ss_prop%tau_clr%dim_1%EX = ( max( 0, nd_profile ) )
 3821.                         ss_prop%tau_clr%dim_1%SM = 1
 3821.                         ss_prop%tau_clr%dim_2%LB = 1
 3821.                         ss_prop%tau_clr%dim_2%EX = ( max( 0, nd_layer_clr ) )
 3821.                         ss_prop%tau_clr%dim_2%SM = ( max( 0, nd_profile ) )
 3821.                         $_allo_P19(0) = 0x1000000000001L
 3821.                         $_allo_P19(1) = loc( ss_prop%tau_clr )
 3821.                         call __allocate( $_allo_P19, 0, 0, _fcd( 0, 0 ) )
 3823.                         ss_prop%omega_clr%header%a_contig = 1
 3823.                         ss_prop%omega_clr%dim_1%LB = 1
 3823.                         ss_prop%omega_clr%dim_1%EX = ( max( 0, nd_profile ) )
 3823.                         ss_prop%omega_clr%dim_1%SM = 1
 3823.                         ss_prop%omega_clr%dim_2%LB = 1
 3823.                         ss_prop%omega_clr%dim_2%EX = ( max( 0, nd_layer_clr ) )
 3823.                         ss_prop%omega_clr%dim_2%SM = ( max( 0, nd_profile ) )
 3823.                         $_allo_P20(0) = 0x1000000000001L
 3823.                         $_allo_P20(1) = loc( ss_prop%omega_clr )
 3823.                         call __allocate( $_allo_P20, 0, 0, _fcd( 0, 0 ) )
 3825.                         ss_prop%phase_fnc_clr%header%a_contig = 1
 3825.                         ss_prop%phase_fnc_clr%dim_1%LB = 1
 3825.                         ss_prop%phase_fnc_clr%dim_1%EX = ( max( 0, nd_profile ) )
 3825.                         ss_prop%phase_fnc_clr%dim_1%SM = 1
 3825.                         ss_prop%phase_fnc_clr%dim_2%LB = 1
 3825.                         ss_prop%phase_fnc_clr%dim_2%EX = ( max( 0, nd_layer_clr ) )
 3825.                         ss_prop%phase_fnc_clr%dim_2%SM = ( max( 0, nd_profile ) )
 3825.                         ss_prop%phase_fnc_clr%dim_3%LB = 1
 3825.                         ss_prop%phase_fnc_clr%dim_3%EX = ( max( 0, nd_max_order ) )
 3825.                         ss_prop%phase_fnc_clr%dim_3%SM = ( max( 0, nd_profile ) * max( 0, nd_layer_clr ) )
 3825.                         $_allo_P21(0) = 0x1000000000001L
 3825.                         $_allo_P21(1) = loc( ss_prop%phase_fnc_clr )
 3825.                         call __allocate( $_allo_P21, 0, 0, _fcd( 0, 0 ) )
 3827.                         ss_prop%forward_scatter_clr%header%a_contig = 1
 3827.                         ss_prop%forward_scatter_clr%dim_1%LB = 1
 3827.                         ss_prop%forward_scatter_clr%dim_1%EX = ( max( 0, nd_profile ) )
 3827.                         ss_prop%forward_scatter_clr%dim_1%SM = 1
 3827.                         ss_prop%forward_scatter_clr%dim_2%LB = 1
 3827.                         ss_prop%forward_scatter_clr%dim_2%EX = ( max( 0, nd_layer_clr ) )
 3827.                         ss_prop%forward_scatter_clr%dim_2%SM = ( max( 0, nd_profile ) )
 3827.                         $_allo_P22(0) = 0x1000000000001L
 3827.                         $_allo_P22(1) = loc( ss_prop%forward_scatter_clr )
 3827.                         call __allocate( $_allo_P22, 0, 0, _fcd( 0, 0 ) )
 3829.                         ss_prop%forward_solar_clr%header%a_contig = 1
 3829.                         ss_prop%forward_solar_clr%dim_1%LB = 1
 3829.                         ss_prop%forward_solar_clr%dim_1%EX = ( max( 0, nd_profile ) )
 3829.                         ss_prop%forward_solar_clr%dim_1%SM = 1
 3829.                         ss_prop%forward_solar_clr%dim_2%LB = 1
 3829.                         ss_prop%forward_solar_clr%dim_2%EX = ( max( 0, nd_layer_clr ) )
 3829.                         ss_prop%forward_solar_clr%dim_2%SM = ( max( 0, nd_profile ) )
 3829.                         $_allo_P23(0) = 0x1000000000001L
 3829.                         $_allo_P23(1) = loc( ss_prop%forward_solar_clr )
 3829.                         call __allocate( $_allo_P23, 0, 0, _fcd( 0, 0 ) )
 3831.                         ss_prop%phase_fnc_solar_clr%header%a_contig = 1
 3831.                         ss_prop%phase_fnc_solar_clr%dim_1%LB = 1
 3831.                         ss_prop%phase_fnc_solar_clr%dim_1%EX = ( max( 0, nd_profile ) )
 3831.                         ss_prop%phase_fnc_solar_clr%dim_1%SM = 1
 3831.                         ss_prop%phase_fnc_solar_clr%dim_2%LB = 1
 3831.                         ss_prop%phase_fnc_solar_clr%dim_2%EX = ( max( 0, nd_layer_clr ) )
 3831.                         ss_prop%phase_fnc_solar_clr%dim_2%SM = ( max( 0, nd_profile ) )
 3831.                         ss_prop%phase_fnc_solar_clr%dim_3%LB = 1
 3831.                         ss_prop%phase_fnc_solar_clr%dim_3%EX = ( max( 0, nd_direction ) )
 3831.                         ss_prop%phase_fnc_solar_clr%dim_3%SM = ( max( 0, nd_profile ) * max( 0, nd_layer_clr ) )
 3831.                         $_allo_P24(0) = 0x1000000000001L
 3831.                         $_allo_P24(1) = loc( ss_prop%phase_fnc_solar_clr )
 3831.                         call __allocate( $_allo_P24, 0, 0, _fcd( 0, 0 ) )
 3834.                         ss_prop%k_grey_tot%header%a_contig = 1
 3834.                         ss_prop%k_grey_tot%dim_1%LB = 1
 3834.                         ss_prop%k_grey_tot%dim_1%EX = ( max( 0, nd_profile ) )
 3834.                         ss_prop%k_grey_tot%dim_1%SM = 1
 3834.                         ss_prop%k_grey_tot%dim_2%LB = id_ct
 3834.                         ss_prop%k_grey_tot%dim_2%EX = ( max( 0, 1 + nd_layer + -id_ct ) )
 3834.                         ss_prop%k_grey_tot%dim_2%SM = ( max( 0, nd_profile ) )
 3834.                         ss_prop%k_grey_tot%dim_3%LB = 0
 3834.                         ss_prop%k_grey_tot%dim_3%EX = ( max( 0, 1 + nd_cloud_type ) )
 3834.                         ss_prop%k_grey_tot%dim_3%SM = ( max( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct ) )
 3834.                         $_allo_P25(0) = 0x1000000000001L
 3834.                         $_allo_P25(1) = loc( ss_prop%k_grey_tot )
 3834.                         call __allocate( $_allo_P25, 0, 0, _fcd( 0, 0 ) )
 3836.                         ss_prop%k_ext_scat%header%a_contig = 1
 3836.                         ss_prop%k_ext_scat%dim_1%LB = 1
 3836.                         ss_prop%k_ext_scat%dim_1%EX = ( max( 0, nd_profile ) )
 3836.                         ss_prop%k_ext_scat%dim_1%SM = 1
 3836.                         ss_prop%k_ext_scat%dim_2%LB = id_ct
 3836.                         ss_prop%k_ext_scat%dim_2%EX = ( max( 0, 1 + nd_layer + -id_ct ) )
 3836.                         ss_prop%k_ext_scat%dim_2%SM = ( max( 0, nd_profile ) )
 3836.                         ss_prop%k_ext_scat%dim_3%LB = 0
 3836.                         ss_prop%k_ext_scat%dim_3%EX = ( max( 0, 1 + nd_cloud_type ) )
 3836.                         ss_prop%k_ext_scat%dim_3%SM = ( max( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct ) )
 3836.                         $_allo_P26(0) = 0x1000000000001L
 3836.                         $_allo_P26(1) = loc( ss_prop%k_ext_scat )
 3836.                         call __allocate( $_allo_P26, 0, 0, _fcd( 0, 0 ) )
 3838.                         ss_prop%tau%header%a_contig = 1
 3838.                         ss_prop%tau%dim_1%LB = 1
 3838.                         ss_prop%tau%dim_1%EX = ( max( 0, nd_profile ) )
 3838.                         ss_prop%tau%dim_1%SM = 1
 3838.                         ss_prop%tau%dim_2%LB = id_ct
 3838.                         ss_prop%tau%dim_2%EX = ( max( 0, 1 + nd_layer + -id_ct ) )
 3838.                         ss_prop%tau%dim_2%SM = ( max( 0, nd_profile ) )
 3838.                         ss_prop%tau%dim_3%LB = 0
 3838.                         ss_prop%tau%dim_3%EX = ( max( 0, 1 + nd_cloud_type ) )
 3838.                         ss_prop%tau%dim_3%SM = ( max( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct ) )
 3838.                         $_allo_P27(0) = 0x1000000000001L
 3838.                         $_allo_P27(1) = loc( ss_prop%tau )
 3838.                         call __allocate( $_allo_P27, 0, 0, _fcd( 0, 0 ) )
 3840.                         ss_prop%omega%header%a_contig = 1
 3840.                         ss_prop%omega%dim_1%LB = 1
 3840.                         ss_prop%omega%dim_1%EX = ( max( 0, nd_profile ) )
 3840.                         ss_prop%omega%dim_1%SM = 1
 3840.                         ss_prop%omega%dim_2%LB = id_ct
 3840.                         ss_prop%omega%dim_2%EX = ( max( 0, 1 + nd_layer + -id_ct ) )
 3840.                         ss_prop%omega%dim_2%SM = ( max( 0, nd_profile ) )
 3840.                         ss_prop%omega%dim_3%LB = 0
 3840.                         ss_prop%omega%dim_3%EX = ( max( 0, 1 + nd_cloud_type ) )
 3840.                         ss_prop%omega%dim_3%SM = ( max( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct ) )
 3840.                         $_allo_P28(0) = 0x1000000000001L
 3840.                         $_allo_P28(1) = loc( ss_prop%omega )
 3840.                         call __allocate( $_allo_P28, 0, 0, _fcd( 0, 0 ) )
 3842.                         ss_prop%phase_fnc%header%a_contig = 1
 3842.                         ss_prop%phase_fnc%dim_1%LB = 1
 3842.                         ss_prop%phase_fnc%dim_1%EX = ( max( 0, nd_profile ) )
 3842.                         ss_prop%phase_fnc%dim_1%SM = 1
 3842.                         ss_prop%phase_fnc%dim_2%LB = id_ct
 3842.                         ss_prop%phase_fnc%dim_2%EX = ( max( 0, 1 + nd_layer + -id_ct ) )
 3842.                         ss_prop%phase_fnc%dim_2%SM = ( max( 0, nd_profile ) )
 3842.                         ss_prop%phase_fnc%dim_3%LB = 1
 3842.                         ss_prop%phase_fnc%dim_3%EX = ( max( 0, nd_max_order ) )
 3842.                         ss_prop%phase_fnc%dim_3%SM = ( max( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct ) )
 3842.                         ss_prop%phase_fnc%dim_4%LB = 0
 3842.                         ss_prop%phase_fnc%dim_4%EX = ( max( 0, 1 + nd_cloud_type ) )
 3842.                         ss_prop%phase_fnc%dim_4%SM = ( max( 0, nd_profile ) * max( 0, nd_max_order ) * max( 0, 1 + nd_layer + -id_ct ) )
 3842.                         $_allo_P29(0) = 0x1000000000001L
 3842.                         $_allo_P29(1) = loc( ss_prop%phase_fnc )
 3842.                         call __allocate( $_allo_P29, 0, 0, _fcd( 0, 0 ) )
 3845.                         ss_prop%forward_scatter%header%a_contig = 1
 3845.                         ss_prop%forward_scatter%dim_1%LB = 1
 3845.                         ss_prop%forward_scatter%dim_1%EX = ( max( 0, nd_profile ) )
 3845.                         ss_prop%forward_scatter%dim_1%SM = 1
 3845.                         ss_prop%forward_scatter%dim_2%LB = id_ct
 3845.                         ss_prop%forward_scatter%dim_2%EX = ( max( 0, 1 + nd_layer + -id_ct ) )
 3845.                         ss_prop%forward_scatter%dim_2%SM = ( max( 0, nd_profile ) )
 3845.                         ss_prop%forward_scatter%dim_3%LB = 0
 3845.                         ss_prop%forward_scatter%dim_3%EX = ( max( 0, 1 + nd_cloud_type ) )
 3845.                         ss_prop%forward_scatter%dim_3%SM = ( max( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct ) )
 3845.                         $_allo_P30(0) = 0x1000000000001L
 3845.                         $_allo_P30(1) = loc( ss_prop%forward_scatter )
 3845.                         call __allocate( $_allo_P30, 0, 0, _fcd( 0, 0 ) )
 3847.                         ss_prop%forward_solar%header%a_contig = 1
 3847.                         ss_prop%forward_solar%dim_1%LB = 1
 3847.                         ss_prop%forward_solar%dim_1%EX = ( max( 0, nd_profile ) )
 3847.                         ss_prop%forward_solar%dim_1%SM = 1
 3847.                         ss_prop%forward_solar%dim_2%LB = id_ct
 3847.                         ss_prop%forward_solar%dim_2%EX = ( max( 0, 1 + nd_layer + -id_ct ) )
 3847.                         ss_prop%forward_solar%dim_2%SM = ( max( 0, nd_profile ) )
 3847.                         ss_prop%forward_solar%dim_3%LB = 0
 3847.                         ss_prop%forward_solar%dim_3%EX = ( max( 0, 1 + nd_cloud_type ) )
 3847.                         ss_prop%forward_solar%dim_3%SM = ( max( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct ) )
 3847.                         $_allo_P31(0) = 0x1000000000001L
 3847.                         $_allo_P31(1) = loc( ss_prop%forward_solar )
 3847.                         call __allocate( $_allo_P31, 0, 0, _fcd( 0, 0 ) )
 3849.                         ss_prop%phase_fnc_solar%header%a_contig = 1
 3849.                         ss_prop%phase_fnc_solar%dim_1%LB = 1
 3849.                         ss_prop%phase_fnc_solar%dim_1%EX = ( max( 0, nd_profile ) )
 3849.                         ss_prop%phase_fnc_solar%dim_1%SM = 1
 3849.                         ss_prop%phase_fnc_solar%dim_2%LB = id_ct
 3849.                         ss_prop%phase_fnc_solar%dim_2%EX = ( max( 0, 1 + nd_layer + -id_ct ) )
 3849.                         ss_prop%phase_fnc_solar%dim_2%SM = ( max( 0, nd_profile ) )
 3849.                         ss_prop%phase_fnc_solar%dim_3%LB = 1
 3849.                         ss_prop%phase_fnc_solar%dim_3%EX = ( max( 0, nd_direction ) )
 3849.                         ss_prop%phase_fnc_solar%dim_3%SM = ( max( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct ) )
 3849.                         ss_prop%phase_fnc_solar%dim_4%LB = 0
 3849.                         ss_prop%phase_fnc_solar%dim_4%EX = ( max( 0, 1 + nd_cloud_type ) )
 3849.                         ss_prop%phase_fnc_solar%dim_4%SM = ( max( 0, nd_profile ) * max( 0, nd_direction ) * max( 0, 1 + nd_layer + -id_ct ) )
 3849.                         $_allo_P32(0) = 0x1000000000001L
 3849.                         $_allo_P32(1) = loc( ss_prop%phase_fnc_solar )
 3849.                         call __allocate( $_allo_P32, 0, 0, _fcd( 0, 0 ) )
 3857.                         call grey_opt_prop( ierr, n_profile, n_layer, p(1, 1), t(1, 1), density(1, 1), n_order_phase, l_rescale, n_order_forward, l_henyey_greenstein_pf, l_solar_phf, n_order_phase_solar, n_direction, cos_sol_view(1, 1), l_rayleigh, rayleigh_coefficient(i_first_band + $I_L3698_616), l_continuum, n_continuum, i_continuum_pointer(1), k_continuum_mono(1), amount_continuum(1, 1, 1), l_aerosol, n_aerosol, aerosol_mix_ratio(1, 1, 1), i_aerosol_parametrization(1), i_humidity_pointer(1, 1), humidities(1, 1), delta_humidity, mean_rel_humidity(1, 1), aerosol_absorption(1, 1, i_first_band + $I_L3698_616), aerosol_scattering(1, 1, i_first_band + $I_L3698_616), aerosol_phase_fnc(1, 1, 1, i_first_band + $I_L3698_616), n_opt_level_aerosol_prsc(1), aerosol_pressure_prsc(1, 1, 1), aerosol_absorption_prsc(1, 1, 1, i_first_band + $I_L3698_616), aerosol_scattering_prsc(1, 1, 1, i_first_band + $I_L3698_616), aerosol_phase_fnc_prsc(1, 1, 1, 1, i_first_band + $I_L3698_616), l_cloud, n_cloud_profile(id_ct), i_cloud_profile(1, id_ct), n_cloud_top, n_condensed, l_cloud_cmp(1), i_phase_cmp(1), i_condensed_param(1), condensed_param_list(1, 1, i_first_band + $I_L3698_616), condensed_mix_ratio(1, id_ct, 1), condensed_dim_char(1, id_ct, 1), n_cloud_type, i_cloud_type(1), n_opt_level_drop_prsc, drop_pressure_prsc(1, 1), drop_absorption_prsc(1, 1, i_first_band + $I_L3698_616), drop_scattering_prsc(1, 1, i_first_band + $I_L3698_616), drop_phase_fnc_prsc(1, 1, 1, i_first_band + $I_L3698_616), n_opt_level_ice_prsc, ice_pressure_prsc(1, 1), ice_absorption_prsc(1, 1, i_first_band + $I_L3698_616), ice_scattering_prsc(1, 1, i_first_band + $I_L3698_616), ice_phase_fnc_prsc(1, 1, 1, i_first_band + $I_L3698_616), ss_prop, nd_profile, nd_radiance_profile, nd_layer, nd_layer_clr, id_ct, nd_continuum, nd_aerosol_species, nd_humidities, nd_cloud_parameter, nd_cloud_component, nd_phase_term, nd_max_order, nd_direction, nd_profile_aerosol_prsc, nd_profile_cloud_prsc, nd_opt_level_aerosol_prsc, nd_opt_level_cloud_prsc )
 3905.                         if ( ierr /= 0 ) then
 2485.                            _free( t$1148 )
 2485.                            goto 190
 2485.                         endif
 3908.                         if ( i_angular_integration == 1 ) then
 3908.                            goto 170
 3908.                         else if ( i_angular_integration == 3 ) then
 3908.   170                      continue
 3915.                            if ( l_rescale /= .false. ) then
 3945.                               if ( l_cloud == .false. ) then
 3967.                                  t$4468 = 0
 3967.                                  t$4469 = 0
 3967.                                  t$4470 = 0
 3967.                                  $t_S133 = 0
 3967.                                  $t_S134 = 0
 3967.                                  t$4475 = 0
 3967.                                  if ( ( ss_prop%phase_fnc%header%a_contig == 1 .or. -ss_prop%phase_fnc%header%el_len + ss_prop%phase_fnc%dim_1%SM * ss_prop%phase_fnc%header%dv_smunit == 0 .and. -ss_prop%phase_fnc%dim_2%SM + ss_prop%phase_fnc%dim_1%EX * ss_prop%phase_fnc%dim_1%SM == 0 .and. -ss_prop%phase_fnc%dim_3%SM + ss_prop%phase_fnc%dim_2%EX * ss_prop%phase_fnc%dim_2%SM == 0 ) /= .false. ) then
 3967. !dir$ suppress (ss_prop%phase_fnc%base_addr)(ss_prop%phase_fnc%dim_1%LB, ss_prop%phase_fnc%dim_2%LB, ss_prop%phase_fnc%dim_3%LB, 0, 0)
 3967.                                     t$4467 = loc( (ss_prop%phase_fnc%base_addr)(ss_prop%phase_fnc%dim_1%LB, ss_prop%phase_fnc%dim_2%LB, ss_prop%phase_fnc%dim_3%LB, 0, 0) )
 3967.                                  else
 3967.                                     t$4468 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_1%EX ) ) )
 3967.                                     t$4469 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_2%EX ) ) )
 3967.                                     t$4470 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_3%EX ) ) )
 3967.                                     $t_S133 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_1%EX ) ) )
 3967.                                     $t_S134 = max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_2%EX ) ) * ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_1%EX ) ) )
 3967.                                     t$4475 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_3%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_1%EX ) ) ) ) ) ), 8 )
 3967.                                     $F_A49 = ( max( 0, ss_prop%phase_fnc%dim_3%EX ) )
 3967.                                     $F_A50 = ( max( 0, ss_prop%phase_fnc%dim_2%EX ) )
 3967.                                     $F_A51 = ( max( 0, ss_prop%phase_fnc%dim_1%EX ) )
 3967.                                     if ( and( and( -$F_A50, -$F_A49 ), -$F_A51 ) < 0 ) then
 3967.                                        $SC_ss_prop_I153 = ss_prop%phase_fnc%dim_4%SM
 3967.                                        $SC_ss_prop_I152 = ss_prop%phase_fnc%dim_4%EX
 3967.                                        $SC_ss_prop_I154 = ss_prop%phase_fnc%dim_4%LB
 3967.                                        $SC_ss_prop_I150 = ss_prop%phase_fnc%dim_3%SM
 3967.                                        $SC_ss_prop_I149 = ss_prop%phase_fnc%dim_3%EX
 3967.                                        $SC_ss_prop_I151 = ss_prop%phase_fnc%dim_3%LB
 3967.                                        $SC_ss_prop_I147 = ss_prop%phase_fnc%dim_2%SM
 3967.                                        $SC_ss_prop_I146 = ss_prop%phase_fnc%dim_2%EX
 3967.                                        $SC_ss_prop_I148 = ss_prop%phase_fnc%dim_2%LB
 3967.                                        $SC_ss_prop_I144 = ss_prop%phase_fnc%dim_1%SM
 3967.                                        $SC_ss_prop_I143 = ss_prop%phase_fnc%dim_1%EX
 3967.                                        $SC_ss_prop_I145 = ss_prop%phase_fnc%dim_1%LB
 3967.                                        $I_L3967_959 = 0
 3967.                                        do
 3967.                                           $I_L3967_939 = 0
 3967.                                           do
 3967.                                              $I_L3967_915 = 0
 3967. !dir$ ivdep
 3967.                                              do
 3967.                                                 t$4474(1 + $I_L3967_915, 1 + $I_L3967_939, 1 + $I_L3967_959) = (ss_prop%phase_fnc%base_addr)($SC_ss_prop_I145 + $I_L3967_915, $SC_ss_prop_I148 + $I_L3967_939, $SC_ss_prop_I151 + $I_L3967_959, 0, 0)
 3967.                                                 $I_L3967_915 = 1 + $I_L3967_915
 3967.                                                 if ( $I_L3967_915 >= $F_A51 ) exit
 3967.                                              enddo
 3967.                                              $I_L3967_939 = 1 + $I_L3967_939
 3967.                                              if ( $I_L3967_939 >= $F_A50 ) exit
 3967.                                           enddo
 3967.                                           $I_L3967_959 = 1 + $I_L3967_959
 3967.                                           if ( $I_L3967_959 >= $F_A49 ) exit
 3967.                                        enddo
 3967.                                     endif
 3967. !dir$ suppress t$4474
 3967.                                     t$4467 = loc( t$4474 )
 3967.                                  endif
 3968.                                  t$4477 = 0
 3968.                                  t$4478 = 0
 3968.                                  t$4482 = 0
 3968.                                  if ( ( ss_prop%forward_scatter%header%a_contig == 1 .or. -ss_prop%forward_scatter%header%el_len + ss_prop%forward_scatter%dim_1%SM * ss_prop%forward_scatter%header%dv_smunit == 0 .and. -ss_prop%forward_scatter%dim_2%SM + ss_prop%forward_scatter%dim_1%EX * ss_prop%forward_scatter%dim_1%SM == 0 ) /= .false. ) then
 3968. !dir$ suppress (ss_prop%forward_scatter%base_addr)(ss_prop%forward_scatter%dim_1%LB, ss_prop%forward_scatter%dim_2%LB, 0, 0)
 3968.                                     t$4476 = loc( (ss_prop%forward_scatter%base_addr)(ss_prop%forward_scatter%dim_1%LB, ss_prop%forward_scatter%dim_2%LB, 0, 0) )
 3968.                                  else
 3968.                                     t$4477 = ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_1%EX ) ) )
 3968.                                     t$4478 = ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_2%EX ) ) )
 3968.                                     t$4482 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_1%EX ) ) ) ) ) ), 8 )
 3968.                                     $F_A52 = ( max( 0, ss_prop%forward_scatter%dim_2%EX ) )
 3968.                                     $F_A53 = ( max( 0, ss_prop%forward_scatter%dim_1%EX ) )
 3968.                                     if ( and( -$F_A53, -$F_A52 ) < 0 ) then
 3968.                                        $SC_ss_prop_I162 = ss_prop%forward_scatter%dim_3%SM
 3968.                                        $SC_ss_prop_I161 = ss_prop%forward_scatter%dim_3%EX
 3968.                                        $SC_ss_prop_I163 = ss_prop%forward_scatter%dim_3%LB
 3968.                                        $SC_ss_prop_I159 = ss_prop%forward_scatter%dim_2%SM
 3968.                                        $SC_ss_prop_I158 = ss_prop%forward_scatter%dim_2%EX
 3968.                                        $SC_ss_prop_I160 = ss_prop%forward_scatter%dim_2%LB
 3968.                                        $SC_ss_prop_I156 = ss_prop%forward_scatter%dim_1%SM
 3968.                                        $SC_ss_prop_I155 = ss_prop%forward_scatter%dim_1%EX
 3968.                                        $SC_ss_prop_I157 = ss_prop%forward_scatter%dim_1%LB
 3968.                                        $I_L3968_941 = 0
 3968.                                        do
 3968.                                           $I_L3968_917 = 0
 3968. !dir$ ivdep
 3968.                                           do
 3968.                                              t$4481(1 + $I_L3968_917, 1 + $I_L3968_941) = (ss_prop%forward_scatter%base_addr)($SC_ss_prop_I157 + $I_L3968_917, $SC_ss_prop_I160 + $I_L3968_941, 0, 0)
 3968.                                              $I_L3968_917 = 1 + $I_L3968_917
 3968.                                              if ( $I_L3968_917 >= $F_A53 ) exit
 3968.                                           enddo
 3968.                                           $I_L3968_941 = 1 + $I_L3968_941
 3968.                                           if ( $I_L3968_941 >= $F_A52 ) exit
 3968.                                        enddo
 3968.                                     endif
 3968. !dir$ suppress t$4481
 3968.                                     t$4476 = loc( t$4481 )
 3968.                                  endif
 3969.                                  t$4484 = 0
 3969.                                  t$4485 = 0
 3969.                                  t$4489 = 0
 3969.                                  if ( ( ss_prop%forward_solar%header%a_contig == 1 .or. -ss_prop%forward_solar%header%el_len + ss_prop%forward_solar%dim_1%SM * ss_prop%forward_solar%header%dv_smunit == 0 .and. -ss_prop%forward_solar%dim_2%SM + ss_prop%forward_solar%dim_1%EX * ss_prop%forward_solar%dim_1%SM == 0 ) /= .false. ) then
 3969. !dir$ suppress (ss_prop%forward_solar%base_addr)(ss_prop%forward_solar%dim_1%LB, ss_prop%forward_solar%dim_2%LB, 0, 0)
 3969.                                     t$4483 = loc( (ss_prop%forward_solar%base_addr)(ss_prop%forward_solar%dim_1%LB, ss_prop%forward_solar%dim_2%LB, 0, 0) )
 3969.                                  else
 3969.                                     t$4484 = ( max( 0, ( 1 + -1 + ss_prop%forward_solar%dim_1%EX ) ) )
 3969.                                     t$4485 = ( max( 0, ( 1 + -1 + ss_prop%forward_solar%dim_2%EX ) ) )
 3969.                                     t$4489 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%forward_solar%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%forward_solar%dim_1%EX ) ) ) ) ) ), 8 )
 3969.                                     $F_A54 = ( max( 0, ss_prop%forward_solar%dim_2%EX ) )
 3969.                                     $F_A55 = ( max( 0, ss_prop%forward_solar%dim_1%EX ) )
 3969.                                     if ( and( -$F_A55, -$F_A54 ) < 0 ) then
 3969.                                        $SC_ss_prop_I171 = ss_prop%forward_solar%dim_3%SM
 3969.                                        $SC_ss_prop_I170 = ss_prop%forward_solar%dim_3%EX
 3969.                                        $SC_ss_prop_I172 = ss_prop%forward_solar%dim_3%LB
 3969.                                        $SC_ss_prop_I168 = ss_prop%forward_solar%dim_2%SM
 3969.                                        $SC_ss_prop_I167 = ss_prop%forward_solar%dim_2%EX
 3969.                                        $SC_ss_prop_I169 = ss_prop%forward_solar%dim_2%LB
 3969.                                        $SC_ss_prop_I165 = ss_prop%forward_solar%dim_1%SM
 3969.                                        $SC_ss_prop_I164 = ss_prop%forward_solar%dim_1%EX
 3969.                                        $SC_ss_prop_I166 = ss_prop%forward_solar%dim_1%LB
 3969.                                        $I_L3969_943 = 0
 3969.                                        do
 3969.                                           $I_L3969_919 = 0
 3969. !dir$ ivdep
 3969.                                           do
 3969.                                              t$4488(1 + $I_L3969_919, 1 + $I_L3969_943) = (ss_prop%forward_solar%base_addr)($SC_ss_prop_I166 + $I_L3969_919, $SC_ss_prop_I169 + $I_L3969_943, 0, 0)
 3969.                                              $I_L3969_919 = 1 + $I_L3969_919
 3969.                                              if ( $I_L3969_919 >= $F_A55 ) exit
 3969.                                           enddo
 3969.                                           $I_L3969_943 = 1 + $I_L3969_943
 3969.                                           if ( $I_L3969_943 >= $F_A54 ) exit
 3969.                                        enddo
 3969.                                     endif
 3969. !dir$ suppress t$4488
 3969.                                     t$4483 = loc( t$4488 )
 3969.                                  endif
 3971.                                  t$4491 = 0
 3971.                                  t$4492 = 0
 3971.                                  t$4493 = 0
 3971.                                  $t_S131 = 0
 3971.                                  $t_S132 = 0
 3971.                                  t$4498 = 0
 3971.                                  if ( ( ss_prop%phase_fnc_solar%header%a_contig == 1 .or. -ss_prop%phase_fnc_solar%header%el_len + ss_prop%phase_fnc_solar%dim_1%SM * ss_prop%phase_fnc_solar%header%dv_smunit == 0 .and. -ss_prop%phase_fnc_solar%dim_2%SM + ss_prop%phase_fnc_solar%dim_1%EX * ss_prop%phase_fnc_solar%dim_1%SM == 0 .and. -ss_prop%phase_fnc_solar%dim_3%SM + ss_prop%phase_fnc_solar%dim_2%EX * ss_prop%phase_fnc_solar%dim_2%SM == 0 ) /= .false. ) then
 3971. !dir$ suppress (ss_prop%phase_fnc_solar%base_addr)(ss_prop%phase_fnc_solar%dim_1%LB, ss_prop%phase_fnc_solar%dim_2%LB, ss_prop%phase_fnc_solar%dim_3%LB, 0, 0)
 3971.                                     t$4490 = loc( (ss_prop%phase_fnc_solar%base_addr)(ss_prop%phase_fnc_solar%dim_1%LB, ss_prop%phase_fnc_solar%dim_2%LB, ss_prop%phase_fnc_solar%dim_3%LB, 0, 0) )
 3971.                                  else
 3971.                                     t$4491 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_1%EX ) ) )
 3971.                                     t$4492 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_2%EX ) ) )
 3971.                                     t$4493 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_3%EX ) ) )
 3971.                                     $t_S131 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_1%EX ) ) )
 3971.                                     $t_S132 = max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_2%EX ) ) * ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_1%EX ) ) )
 3971.                                     t$4498 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_3%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_1%EX ) ) ) ) ) ), 8 )
 3971.                                     $F_A56 = ( max( 0, ss_prop%phase_fnc_solar%dim_3%EX ) )
 3971.                                     $F_A57 = ( max( 0, ss_prop%phase_fnc_solar%dim_2%EX ) )
 3971.                                     $F_A58 = ( max( 0, ss_prop%phase_fnc_solar%dim_1%EX ) )
 3971.                                     if ( and( and( -$F_A57, -$F_A56 ), -$F_A58 ) < 0 ) then
 3971.                                        $SC_ss_prop_I183 = ss_prop%phase_fnc_solar%dim_4%SM
 3971.                                        $SC_ss_prop_I182 = ss_prop%phase_fnc_solar%dim_4%EX
 3971.                                        $SC_ss_prop_I184 = ss_prop%phase_fnc_solar%dim_4%LB
 3971.                                        $SC_ss_prop_I180 = ss_prop%phase_fnc_solar%dim_3%SM
 3971.                                        $SC_ss_prop_I179 = ss_prop%phase_fnc_solar%dim_3%EX
 3971.                                        $SC_ss_prop_I181 = ss_prop%phase_fnc_solar%dim_3%LB
 3971.                                        $SC_ss_prop_I177 = ss_prop%phase_fnc_solar%dim_2%SM
 3971.                                        $SC_ss_prop_I176 = ss_prop%phase_fnc_solar%dim_2%EX
 3971.                                        $SC_ss_prop_I178 = ss_prop%phase_fnc_solar%dim_2%LB
 3971.                                        $SC_ss_prop_I174 = ss_prop%phase_fnc_solar%dim_1%SM
 3971.                                        $SC_ss_prop_I173 = ss_prop%phase_fnc_solar%dim_1%EX
 3971.                                        $SC_ss_prop_I175 = ss_prop%phase_fnc_solar%dim_1%LB
 3971.                                        $I_L3971_961 = 0
 3971.                                        do
 3971.                                           $I_L3971_945 = 0
 3971.                                           do
 3971.                                              $I_L3971_921 = 0
 3971. !dir$ ivdep
 3971.                                              do
 3971.                                                 t$4497(1 + $I_L3971_921, 1 + $I_L3971_945, 1 + $I_L3971_961) = (ss_prop%phase_fnc_solar%base_addr)($SC_ss_prop_I175 + $I_L3971_921, $SC_ss_prop_I178 + $I_L3971_945, $SC_ss_prop_I181 + $I_L3971_961, 0, 0)
 3971.                                                 $I_L3971_921 = 1 + $I_L3971_921
 3971.                                                 if ( $I_L3971_921 >= $F_A58 ) exit
 3971.                                              enddo
 3971.                                              $I_L3971_945 = 1 + $I_L3971_945
 3971.                                              if ( $I_L3971_945 >= $F_A57 ) exit
 3971.                                           enddo
 3971.                                           $I_L3971_961 = 1 + $I_L3971_961
 3971.                                           if ( $I_L3971_961 >= $F_A56 ) exit
 3971.                                        enddo
 3971.                                     endif
 3971. !dir$ suppress t$4497
 3971.                                     t$4490 = loc( t$4497 )
 3971.                                  endif
 3964.                                  call rescale_phase_fnc( n_profile, 1, n_layer, n_direction, cos_sol_view(1, 1), n_order_phase, t$4467, t$4476, t$4483, l_rescale_solar_phf, n_order_phase_solar, t$4490, nd_profile, nd_radiance_profile, nd_layer, id_ct, nd_direction, nd_max_order )
 3971.                                  if ( ( ss_prop%phase_fnc_solar%header%a_contig == 1 .or. -ss_prop%phase_fnc_solar%header%el_len + ss_prop%phase_fnc_solar%dim_1%SM * ss_prop%phase_fnc_solar%header%dv_smunit == 0 .and. -ss_prop%phase_fnc_solar%dim_2%SM + ss_prop%phase_fnc_solar%dim_1%EX * ss_prop%phase_fnc_solar%dim_1%SM == 0 .and. -ss_prop%phase_fnc_solar%dim_3%SM + ss_prop%phase_fnc_solar%dim_2%EX * ss_prop%phase_fnc_solar%dim_2%SM == 0 ) == .false. ) then
 3964.                                     $F_A59 = t$4493
 3964.                                     $F_A60 = t$4492
 3964.                                     $F_A61 = t$4491
 3964.                                     if ( and( and( -$F_A60, -$F_A59 ), -$F_A61 ) < 0 ) then
 3964.                                        $SC_ss_prop_I183 = ss_prop%phase_fnc_solar%dim_4%SM
 3964.                                        $SC_ss_prop_I182 = ss_prop%phase_fnc_solar%dim_4%EX
 3964.                                        $SC_ss_prop_I184 = ss_prop%phase_fnc_solar%dim_4%LB
 3964.                                        $SC_ss_prop_I180 = ss_prop%phase_fnc_solar%dim_3%SM
 3964.                                        $SC_ss_prop_I181 = ss_prop%phase_fnc_solar%dim_3%LB
 3964.                                        $SC_ss_prop_I177 = ss_prop%phase_fnc_solar%dim_2%SM
 3964.                                        $SC_ss_prop_I178 = ss_prop%phase_fnc_solar%dim_2%LB
 3964.                                        $SC_ss_prop_I174 = ss_prop%phase_fnc_solar%dim_1%SM
 3964.                                        $SC_ss_prop_I175 = ss_prop%phase_fnc_solar%dim_1%LB
 3964.                                        $I_L3964_963 = 0
 3964.                                        do
 3964.                                           $I_L3964_947 = 0
 3964.                                           do
 3964.                                              $I_L3964_923 = 0
 3964. !dir$ ivdep
 3964.                                              do
 3964.                                                 (ss_prop%phase_fnc_solar%base_addr)($SC_ss_prop_I175 + $I_L3964_923, $SC_ss_prop_I178 + $I_L3964_947, $SC_ss_prop_I181 + $I_L3964_963, 0, 0) = t$4497(1 + $I_L3964_923, 1 + $I_L3964_947, 1 + $I_L3964_963)
 3964.                                                 $I_L3964_923 = 1 + $I_L3964_923
 3964.                                                 if ( $I_L3964_923 >= $F_A61 ) exit
 3964.                                              enddo
 3964.                                              $I_L3964_947 = 1 + $I_L3964_947
 3964.                                              if ( $I_L3964_947 >= $F_A60 ) exit
 3964.                                           enddo
 3964.                                           $I_L3964_963 = 1 + $I_L3964_963
 3964.                                           if ( $I_L3964_963 >= $F_A59 ) exit
 3964.                                        enddo
 3964.                                     endif
 3971.                                     _free( t$4498 )
 3971.                                  endif
 3969.                                  if ( ( ss_prop%forward_solar%header%a_contig == 1 .or. -ss_prop%forward_solar%header%el_len + ss_prop%forward_solar%dim_1%SM * ss_prop%forward_solar%header%dv_smunit == 0 .and. -ss_prop%forward_solar%dim_2%SM + ss_prop%forward_solar%dim_1%EX * ss_prop%forward_solar%dim_1%SM == 0 ) == .false. ) then
 3969.                                     _free( t$4489 )
 3969.                                  endif
 3968.                                  if ( ( ss_prop%forward_scatter%header%a_contig == 1 .or. -ss_prop%forward_scatter%header%el_len + ss_prop%forward_scatter%dim_1%SM * ss_prop%forward_scatter%header%dv_smunit == 0 .and. -ss_prop%forward_scatter%dim_2%SM + ss_prop%forward_scatter%dim_1%EX * ss_prop%forward_scatter%dim_1%SM == 0 ) == .false. ) then
 3968.                                     _free( t$4482 )
 3968.                                  endif
 3967.                                  if ( ( ss_prop%phase_fnc%header%a_contig == 1 .or. -ss_prop%phase_fnc%header%el_len + ss_prop%phase_fnc%dim_1%SM * ss_prop%phase_fnc%header%dv_smunit == 0 .and. -ss_prop%phase_fnc%dim_2%SM + ss_prop%phase_fnc%dim_1%EX * ss_prop%phase_fnc%dim_1%SM == 0 .and. -ss_prop%phase_fnc%dim_3%SM + ss_prop%phase_fnc%dim_2%EX * ss_prop%phase_fnc%dim_2%SM == 0 ) == .false. ) then
 3964.                                     $F_A62 = t$4470
 3964.                                     $F_A63 = t$4469
 3964.                                     $F_A64 = t$4468
 3964.                                     if ( and( and( -$F_A63, -$F_A62 ), -$F_A64 ) < 0 ) then
 3964.                                        $SC_ss_prop_I153 = ss_prop%phase_fnc%dim_4%SM
 3964.                                        $SC_ss_prop_I152 = ss_prop%phase_fnc%dim_4%EX
 3964.                                        $SC_ss_prop_I154 = ss_prop%phase_fnc%dim_4%LB
 3964.                                        $SC_ss_prop_I150 = ss_prop%phase_fnc%dim_3%SM
 3964.                                        $SC_ss_prop_I151 = ss_prop%phase_fnc%dim_3%LB
 3964.                                        $SC_ss_prop_I147 = ss_prop%phase_fnc%dim_2%SM
 3964.                                        $SC_ss_prop_I148 = ss_prop%phase_fnc%dim_2%LB
 3964.                                        $SC_ss_prop_I144 = ss_prop%phase_fnc%dim_1%SM
 3964.                                        $SC_ss_prop_I145 = ss_prop%phase_fnc%dim_1%LB
 3964.                                        $I_L3964_965 = 0
 3964.                                        do
 3964.                                           $I_L3964_949 = 0
 3964.                                           do
 3964.                                              $I_L3964_925 = 0
 3964. !dir$ ivdep
 3964.                                              do
 3964.                                                 (ss_prop%phase_fnc%base_addr)($SC_ss_prop_I145 + $I_L3964_925, $SC_ss_prop_I148 + $I_L3964_949, $SC_ss_prop_I151 + $I_L3964_965, 0, 0) = t$4474(1 + $I_L3964_925, 1 + $I_L3964_949, 1 + $I_L3964_965)
 3964.                                                 $I_L3964_925 = 1 + $I_L3964_925
 3964.                                                 if ( $I_L3964_925 >= $F_A64 ) exit
 3964.                                              enddo
 3964.                                              $I_L3964_949 = 1 + $I_L3964_949
 3964.                                              if ( $I_L3964_949 >= $F_A63 ) exit
 3964.                                           enddo
 3964.                                           $I_L3964_965 = 1 + $I_L3964_965
 3964.                                           if ( $I_L3964_965 >= $F_A62 ) exit
 3964.                                        enddo
 3964.                                     endif
 3967.                                     _free( t$4475 )
 3967.                                  endif
 3950.                               else if ( n_cloud_type >= 0 ) then
 3950.                                  $I_L3950_967 = 0
 3950.                                  do
 3954.                                     t$4433 = 0
 3954.                                     t$4434 = 0
 3954.                                     t$4435 = 0
 3954.                                     $t_S129 = 0
 3954.                                     $t_S130 = 0
 3954.                                     t$4440 = 0
 3954.                                     if ( ( ss_prop%phase_fnc%header%a_contig == 1 .or. -ss_prop%phase_fnc%header%el_len + ss_prop%phase_fnc%dim_1%SM * ss_prop%phase_fnc%header%dv_smunit == 0 .and. -ss_prop%phase_fnc%dim_2%SM + ss_prop%phase_fnc%dim_1%EX * ss_prop%phase_fnc%dim_1%SM == 0 .and. -ss_prop%phase_fnc%dim_3%SM + ss_prop%phase_fnc%dim_2%EX * ss_prop%phase_fnc%dim_2%SM == 0 ) /= .false. ) then
 3954. !dir$ suppress (ss_prop%phase_fnc%base_addr)(ss_prop%phase_fnc%dim_1%LB, ss_prop%phase_fnc%dim_2%LB, ss_prop%phase_fnc%dim_3%LB, t$4431, 0)
 3954.                                        t$4432 = loc( (ss_prop%phase_fnc%base_addr)(ss_prop%phase_fnc%dim_1%LB, ss_prop%phase_fnc%dim_2%LB, ss_prop%phase_fnc%dim_3%LB, $I_L3950_967, 0) )
 3954.                                     else
 3954.                                        t$4433 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_1%EX ) ) )
 3954.                                        t$4434 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_2%EX ) ) )
 3954.                                        t$4435 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_3%EX ) ) )
 3954.                                        $t_S129 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_1%EX ) ) )
 3954.                                        $t_S130 = max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_2%EX ) ) * ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_1%EX ) ) )
 3954.                                        t$4440 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_3%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_1%EX ) ) ) ) ) ), 8 )
 3954.                                        $F_A33 = ( max( 0, ss_prop%phase_fnc%dim_3%EX ) )
 3954.                                        $F_A34 = ( max( 0, ss_prop%phase_fnc%dim_2%EX ) )
 3954.                                        $F_A35 = ( max( 0, ss_prop%phase_fnc%dim_1%EX ) )
 3954.                                        if ( and( and( -$F_A34, -$F_A33 ), -$F_A35 ) < 0 ) then
 3954.                                           $SC_ss_prop_I153 = ss_prop%phase_fnc%dim_4%SM
 3954.                                           $SC_ss_prop_I152 = ss_prop%phase_fnc%dim_4%EX
 3954.                                           $SC_ss_prop_I154 = ss_prop%phase_fnc%dim_4%LB
 3954.                                           $SC_ss_prop_I150 = ss_prop%phase_fnc%dim_3%SM
 3954.                                           $SC_ss_prop_I149 = ss_prop%phase_fnc%dim_3%EX
 3954.                                           $SC_ss_prop_I151 = ss_prop%phase_fnc%dim_3%LB
 3954.                                           $SC_ss_prop_I147 = ss_prop%phase_fnc%dim_2%SM
 3954.                                           $SC_ss_prop_I146 = ss_prop%phase_fnc%dim_2%EX
 3954.                                           $SC_ss_prop_I148 = ss_prop%phase_fnc%dim_2%LB
 3954.                                           $SC_ss_prop_I144 = ss_prop%phase_fnc%dim_1%SM
 3954.                                           $SC_ss_prop_I143 = ss_prop%phase_fnc%dim_1%EX
 3954.                                           $SC_ss_prop_I145 = ss_prop%phase_fnc%dim_1%LB
 3954.                                           $I_L3954_951 = 0
 3954.                                           do
 3954.                                              $I_L3954_927 = 0
 3954.                                              do
 3954.                                                 $I_L3954_903 = 0
 3954. !dir$ ivdep
 3954.                                                 do
 3954.                                                    t$4439(1 + $I_L3954_903, 1 + $I_L3954_927, 1 + $I_L3954_951) = (ss_prop%phase_fnc%base_addr)($SC_ss_prop_I145 + $I_L3954_903, $SC_ss_prop_I148 + $I_L3954_927, $SC_ss_prop_I151 + $I_L3954_951, $I_L3950_967, 0)
 3954.                                                    $I_L3954_903 = 1 + $I_L3954_903
 3954.                                                    if ( $I_L3954_903 >= $F_A35 ) exit
 3954.                                                 enddo
 3954.                                                 $I_L3954_927 = 1 + $I_L3954_927
 3954.                                                 if ( $I_L3954_927 >= $F_A34 ) exit
 3954.                                              enddo
 3954.                                              $I_L3954_951 = 1 + $I_L3954_951
 3954.                                              if ( $I_L3954_951 >= $F_A33 ) exit
 3954.                                           enddo
 3954.                                        endif
 3954. !dir$ suppress t$4439
 3954.                                        t$4432 = loc( t$4439 )
 3954.                                     endif
 3955.                                     t$4443 = 0
 3955.                                     t$4444 = 0
 3955.                                     t$4448 = 0
 3955.                                     if ( ( ss_prop%forward_scatter%header%a_contig == 1 .or. -ss_prop%forward_scatter%header%el_len + ss_prop%forward_scatter%dim_1%SM * ss_prop%forward_scatter%header%dv_smunit == 0 .and. -ss_prop%forward_scatter%dim_2%SM + ss_prop%forward_scatter%dim_1%EX * ss_prop%forward_scatter%dim_1%SM == 0 ) /= .false. ) then
 3955. !dir$ suppress (ss_prop%forward_scatter%base_addr)(ss_prop%forward_scatter%dim_1%LB, ss_prop%forward_scatter%dim_2%LB, t$4441, 0)
 3955.                                        t$4442 = loc( (ss_prop%forward_scatter%base_addr)(ss_prop%forward_scatter%dim_1%LB, ss_prop%forward_scatter%dim_2%LB, $I_L3950_967, 0) )
 3955.                                     else
 3955.                                        t$4443 = ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_1%EX ) ) )
 3955.                                        t$4444 = ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_2%EX ) ) )
 3955.                                        t$4448 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_1%EX ) ) ) ) ) ), 8 )
 3955.                                        $F_A36 = ( max( 0, ss_prop%forward_scatter%dim_2%EX ) )
 3955.                                        $F_A37 = ( max( 0, ss_prop%forward_scatter%dim_1%EX ) )
 3955.                                        if ( and( -$F_A37, -$F_A36 ) < 0 ) then
 3955.                                           $SC_ss_prop_I162 = ss_prop%forward_scatter%dim_3%SM
 3955.                                           $SC_ss_prop_I161 = ss_prop%forward_scatter%dim_3%EX
 3955.                                           $SC_ss_prop_I163 = ss_prop%forward_scatter%dim_3%LB
 3955.                                           $SC_ss_prop_I159 = ss_prop%forward_scatter%dim_2%SM
 3955.                                           $SC_ss_prop_I158 = ss_prop%forward_scatter%dim_2%EX
 3955.                                           $SC_ss_prop_I160 = ss_prop%forward_scatter%dim_2%LB
 3955.                                           $SC_ss_prop_I156 = ss_prop%forward_scatter%dim_1%SM
 3955.                                           $SC_ss_prop_I155 = ss_prop%forward_scatter%dim_1%EX
 3955.                                           $SC_ss_prop_I157 = ss_prop%forward_scatter%dim_1%LB
 3955.                                           $I_L3955_929 = 0
 3955.                                           do
 3955.                                              $I_L3955_905 = 0
 3955. !dir$ ivdep
 3955.                                              do
 3955.                                                 t$4447(1 + $I_L3955_905, 1 + $I_L3955_929) = (ss_prop%forward_scatter%base_addr)($SC_ss_prop_I157 + $I_L3955_905, $SC_ss_prop_I160 + $I_L3955_929, $I_L3950_967, 0)
 3955.                                                 $I_L3955_905 = 1 + $I_L3955_905
 3955.                                                 if ( $I_L3955_905 >= $F_A37 ) exit
 3955.                                              enddo
 3955.                                              $I_L3955_929 = 1 + $I_L3955_929
 3955.                                              if ( $I_L3955_929 >= $F_A36 ) exit
 3955.                                           enddo
 3955.                                        endif
 3955. !dir$ suppress t$4447
 3955.                                        t$4442 = loc( t$4447 )
 3955.                                     endif
 3956.                                     t$4451 = 0
 3956.                                     t$4452 = 0
 3956.                                     t$4456 = 0
 3956.                                     if ( ( ss_prop%forward_solar%header%a_contig == 1 .or. -ss_prop%forward_solar%header%el_len + ss_prop%forward_solar%dim_1%SM * ss_prop%forward_solar%header%dv_smunit == 0 .and. -ss_prop%forward_solar%dim_2%SM + ss_prop%forward_solar%dim_1%EX * ss_prop%forward_solar%dim_1%SM == 0 ) /= .false. ) then
 3956. !dir$ suppress (ss_prop%forward_solar%base_addr)(ss_prop%forward_solar%dim_1%LB, ss_prop%forward_solar%dim_2%LB, t$4449, 0)
 3956.                                        t$4450 = loc( (ss_prop%forward_solar%base_addr)(ss_prop%forward_solar%dim_1%LB, ss_prop%forward_solar%dim_2%LB, $I_L3950_967, 0) )
 3956.                                     else
 3956.                                        t$4451 = ( max( 0, ( 1 + -1 + ss_prop%forward_solar%dim_1%EX ) ) )
 3956.                                        t$4452 = ( max( 0, ( 1 + -1 + ss_prop%forward_solar%dim_2%EX ) ) )
 3956.                                        t$4456 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%forward_solar%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%forward_solar%dim_1%EX ) ) ) ) ) ), 8 )
 3956.                                        $F_A38 = ( max( 0, ss_prop%forward_solar%dim_2%EX ) )
 3956.                                        $F_A39 = ( max( 0, ss_prop%forward_solar%dim_1%EX ) )
 3956.                                        if ( and( -$F_A39, -$F_A38 ) < 0 ) then
 3956.                                           $SC_ss_prop_I171 = ss_prop%forward_solar%dim_3%SM
 3956.                                           $SC_ss_prop_I170 = ss_prop%forward_solar%dim_3%EX
 3956.                                           $SC_ss_prop_I172 = ss_prop%forward_solar%dim_3%LB
 3956.                                           $SC_ss_prop_I168 = ss_prop%forward_solar%dim_2%SM
 3956.                                           $SC_ss_prop_I167 = ss_prop%forward_solar%dim_2%EX
 3956.                                           $SC_ss_prop_I169 = ss_prop%forward_solar%dim_2%LB
 3956.                                           $SC_ss_prop_I165 = ss_prop%forward_solar%dim_1%SM
 3956.                                           $SC_ss_prop_I164 = ss_prop%forward_solar%dim_1%EX
 3956.                                           $SC_ss_prop_I166 = ss_prop%forward_solar%dim_1%LB
 3956.                                           $I_L3956_931 = 0
 3956.                                           do
 3956.                                              $I_L3956_907 = 0
 3956. !dir$ ivdep
 3956.                                              do
 3956.                                                 t$4455(1 + $I_L3956_907, 1 + $I_L3956_931) = (ss_prop%forward_solar%base_addr)($SC_ss_prop_I166 + $I_L3956_907, $SC_ss_prop_I169 + $I_L3956_931, $I_L3950_967, 0)
 3956.                                                 $I_L3956_907 = 1 + $I_L3956_907
 3956.                                                 if ( $I_L3956_907 >= $F_A39 ) exit
 3956.                                              enddo
 3956.                                              $I_L3956_931 = 1 + $I_L3956_931
 3956.                                              if ( $I_L3956_931 >= $F_A38 ) exit
 3956.                                           enddo
 3956.                                        endif
 3956. !dir$ suppress t$4455
 3956.                                        t$4450 = loc( t$4455 )
 3956.                                     endif
 3958.                                     t$4459 = 0
 3958.                                     t$4460 = 0
 3958.                                     t$4461 = 0
 3958.                                     $t_S127 = 0
 3958.                                     $t_S128 = 0
 3958.                                     t$4466 = 0
 3958.                                     if ( ( ss_prop%phase_fnc_solar%header%a_contig == 1 .or. -ss_prop%phase_fnc_solar%header%el_len + ss_prop%phase_fnc_solar%dim_1%SM * ss_prop%phase_fnc_solar%header%dv_smunit == 0 .and. -ss_prop%phase_fnc_solar%dim_2%SM + ss_prop%phase_fnc_solar%dim_1%EX * ss_prop%phase_fnc_solar%dim_1%SM == 0 .and. -ss_prop%phase_fnc_solar%dim_3%SM + ss_prop%phase_fnc_solar%dim_2%EX * ss_prop%phase_fnc_solar%dim_2%SM == 0 ) /= .false. ) then
 3958. !dir$ suppress (ss_prop%phase_fnc_solar%base_addr)(ss_prop%phase_fnc_solar%dim_1%LB, ss_prop%phase_fnc_solar%dim_2%LB, ss_prop%phase_fnc_solar%dim_3%LB, t$4457, 0)
 3958.                                        t$4458 = loc( (ss_prop%phase_fnc_solar%base_addr)(ss_prop%phase_fnc_solar%dim_1%LB, ss_prop%phase_fnc_solar%dim_2%LB, ss_prop%phase_fnc_solar%dim_3%LB, $I_L3950_967, 0) )
 3958.                                     else
 3958.                                        t$4459 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_1%EX ) ) )
 3958.                                        t$4460 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_2%EX ) ) )
 3958.                                        t$4461 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_3%EX ) ) )
 3958.                                        $t_S127 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_1%EX ) ) )
 3958.                                        $t_S128 = max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_2%EX ) ) * ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_1%EX ) ) )
 3958.                                        t$4466 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_3%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_1%EX ) ) ) ) ) ), 8 )
 3958.                                        $F_A40 = ( max( 0, ss_prop%phase_fnc_solar%dim_3%EX ) )
 3958.                                        $F_A41 = ( max( 0, ss_prop%phase_fnc_solar%dim_2%EX ) )
 3958.                                        $F_A42 = ( max( 0, ss_prop%phase_fnc_solar%dim_1%EX ) )
 3958.                                        if ( and( and( -$F_A41, -$F_A40 ), -$F_A42 ) < 0 ) then
 3958.                                           $SC_ss_prop_I183 = ss_prop%phase_fnc_solar%dim_4%SM
 3958.                                           $SC_ss_prop_I182 = ss_prop%phase_fnc_solar%dim_4%EX
 3958.                                           $SC_ss_prop_I184 = ss_prop%phase_fnc_solar%dim_4%LB
 3958.                                           $SC_ss_prop_I180 = ss_prop%phase_fnc_solar%dim_3%SM
 3958.                                           $SC_ss_prop_I179 = ss_prop%phase_fnc_solar%dim_3%EX
 3958.                                           $SC_ss_prop_I181 = ss_prop%phase_fnc_solar%dim_3%LB
 3958.                                           $SC_ss_prop_I177 = ss_prop%phase_fnc_solar%dim_2%SM
 3958.                                           $SC_ss_prop_I176 = ss_prop%phase_fnc_solar%dim_2%EX
 3958.                                           $SC_ss_prop_I178 = ss_prop%phase_fnc_solar%dim_2%LB
 3958.                                           $SC_ss_prop_I174 = ss_prop%phase_fnc_solar%dim_1%SM
 3958.                                           $SC_ss_prop_I173 = ss_prop%phase_fnc_solar%dim_1%EX
 3958.                                           $SC_ss_prop_I175 = ss_prop%phase_fnc_solar%dim_1%LB
 3958.                                           $I_L3958_953 = 0
 3958.                                           do
 3958.                                              $I_L3958_933 = 0
 3958.                                              do
 3958.                                                 $I_L3958_909 = 0
 3958. !dir$ ivdep
 3958.                                                 do
 3958.                                                    t$4465(1 + $I_L3958_909, 1 + $I_L3958_933, 1 + $I_L3958_953) = (ss_prop%phase_fnc_solar%base_addr)($SC_ss_prop_I175 + $I_L3958_909, $SC_ss_prop_I178 + $I_L3958_933, $SC_ss_prop_I181 + $I_L3958_953, $I_L3950_967, 0)
 3958.                                                    $I_L3958_909 = 1 + $I_L3958_909
 3958.                                                    if ( $I_L3958_909 >= $F_A42 ) exit
 3958.                                                 enddo
 3958.                                                 $I_L3958_933 = 1 + $I_L3958_933
 3958.                                                 if ( $I_L3958_933 >= $F_A41 ) exit
 3958.                                              enddo
 3958.                                              $I_L3958_953 = 1 + $I_L3958_953
 3958.                                              if ( $I_L3958_953 >= $F_A40 ) exit
 3958.                                           enddo
 3958.                                        endif
 3958. !dir$ suppress t$4465
 3958.                                        t$4458 = loc( t$4465 )
 3958.                                     endif
 3951.                                     call rescale_phase_fnc( n_profile, 1, n_layer, n_direction, cos_sol_view(1, 1), n_order_phase, t$4432, t$4442, t$4450, l_rescale_solar_phf, n_order_phase_solar, t$4458, nd_profile, nd_radiance_profile, nd_layer, id_ct, nd_direction, nd_max_order )
 3958.                                     if ( ( ss_prop%phase_fnc_solar%header%a_contig == 1 .or. -ss_prop%phase_fnc_solar%header%el_len + ss_prop%phase_fnc_solar%dim_1%SM * ss_prop%phase_fnc_solar%header%dv_smunit == 0 .and. -ss_prop%phase_fnc_solar%dim_2%SM + ss_prop%phase_fnc_solar%dim_1%EX * ss_prop%phase_fnc_solar%dim_1%SM == 0 .and. -ss_prop%phase_fnc_solar%dim_3%SM + ss_prop%phase_fnc_solar%dim_2%EX * ss_prop%phase_fnc_solar%dim_2%SM == 0 ) == .false. ) then
 3951.                                        $F_A43 = t$4461
 3951.                                        $F_A44 = t$4460
 3951.                                        $F_A45 = t$4459
 3951.                                        if ( and( and( -$F_A44, -$F_A43 ), -$F_A45 ) < 0 ) then
 3951.                                           $SC_ss_prop_I183 = ss_prop%phase_fnc_solar%dim_4%SM
 3951.                                           $SC_ss_prop_I182 = ss_prop%phase_fnc_solar%dim_4%EX
 3951.                                           $SC_ss_prop_I184 = ss_prop%phase_fnc_solar%dim_4%LB
 3951.                                           $SC_ss_prop_I180 = ss_prop%phase_fnc_solar%dim_3%SM
 3951.                                           $SC_ss_prop_I181 = ss_prop%phase_fnc_solar%dim_3%LB
 3951.                                           $SC_ss_prop_I177 = ss_prop%phase_fnc_solar%dim_2%SM
 3951.                                           $SC_ss_prop_I178 = ss_prop%phase_fnc_solar%dim_2%LB
 3951.                                           $SC_ss_prop_I174 = ss_prop%phase_fnc_solar%dim_1%SM
 3951.                                           $SC_ss_prop_I175 = ss_prop%phase_fnc_solar%dim_1%LB
 3951.                                           $I_L3951_955 = 0
 3951.                                           do
 3951.                                              $I_L3951_935 = 0
 3951.                                              do
 3951.                                                 $I_L3951_911 = 0
 3951. !dir$ ivdep
 3951.                                                 do
 3951.                                                    (ss_prop%phase_fnc_solar%base_addr)($SC_ss_prop_I175 + $I_L3951_911, $SC_ss_prop_I178 + $I_L3951_935, $SC_ss_prop_I181 + $I_L3951_955, $I_L3950_967, 0) = t$4465(1 + $I_L3951_911, 1 + $I_L3951_935, 1 + $I_L3951_955)
 3951.                                                    $I_L3951_911 = 1 + $I_L3951_911
 3951.                                                    if ( $I_L3951_911 >= $F_A45 ) exit
 3951.                                                 enddo
 3951.                                                 $I_L3951_935 = 1 + $I_L3951_935
 3951.                                                 if ( $I_L3951_935 >= $F_A44 ) exit
 3951.                                              enddo
 3951.                                              $I_L3951_955 = 1 + $I_L3951_955
 3951.                                              if ( $I_L3951_955 >= $F_A43 ) exit
 3951.                                           enddo
 3951.                                        endif
 3958.                                        _free( t$4466 )
 3958.                                     endif
 3956.                                     if ( ( ss_prop%forward_solar%header%a_contig == 1 .or. -ss_prop%forward_solar%header%el_len + ss_prop%forward_solar%dim_1%SM * ss_prop%forward_solar%header%dv_smunit == 0 .and. -ss_prop%forward_solar%dim_2%SM + ss_prop%forward_solar%dim_1%EX * ss_prop%forward_solar%dim_1%SM == 0 ) == .false. ) then
 3956.                                        _free( t$4456 )
 3956.                                     endif
 3955.                                     if ( ( ss_prop%forward_scatter%header%a_contig == 1 .or. -ss_prop%forward_scatter%header%el_len + ss_prop%forward_scatter%dim_1%SM * ss_prop%forward_scatter%header%dv_smunit == 0 .and. -ss_prop%forward_scatter%dim_2%SM + ss_prop%forward_scatter%dim_1%EX * ss_prop%forward_scatter%dim_1%SM == 0 ) == .false. ) then
 3955.                                        _free( t$4448 )
 3955.                                     endif
 3954.                                     if ( ( ss_prop%phase_fnc%header%a_contig == 1 .or. -ss_prop%phase_fnc%header%el_len + ss_prop%phase_fnc%dim_1%SM * ss_prop%phase_fnc%header%dv_smunit == 0 .and. -ss_prop%phase_fnc%dim_2%SM + ss_prop%phase_fnc%dim_1%EX * ss_prop%phase_fnc%dim_1%SM == 0 .and. -ss_prop%phase_fnc%dim_3%SM + ss_prop%phase_fnc%dim_2%EX * ss_prop%phase_fnc%dim_2%SM == 0 ) == .false. ) then
 3951.                                        $F_A46 = t$4435
 3951.                                        $F_A47 = t$4434
 3951.                                        $F_A48 = t$4433
 3951.                                        if ( and( and( -$F_A47, -$F_A46 ), -$F_A48 ) < 0 ) then
 3951.                                           $SC_ss_prop_I153 = ss_prop%phase_fnc%dim_4%SM
 3951.                                           $SC_ss_prop_I152 = ss_prop%phase_fnc%dim_4%EX
 3951.                                           $SC_ss_prop_I154 = ss_prop%phase_fnc%dim_4%LB
 3951.                                           $SC_ss_prop_I150 = ss_prop%phase_fnc%dim_3%SM
 3951.                                           $SC_ss_prop_I151 = ss_prop%phase_fnc%dim_3%LB
 3951.                                           $SC_ss_prop_I147 = ss_prop%phase_fnc%dim_2%SM
 3951.                                           $SC_ss_prop_I148 = ss_prop%phase_fnc%dim_2%LB
 3951.                                           $SC_ss_prop_I144 = ss_prop%phase_fnc%dim_1%SM
 3951.                                           $SC_ss_prop_I145 = ss_prop%phase_fnc%dim_1%LB
 3951.                                           $I_L3951_957 = 0
 3951.                                           do
 3951.                                              $I_L3951_937 = 0
 3951.                                              do
 3951.                                                 $I_L3951_913 = 0
 3951. !dir$ ivdep
 3951.                                                 do
 3951.                                                    (ss_prop%phase_fnc%base_addr)($SC_ss_prop_I145 + $I_L3951_913, $SC_ss_prop_I148 + $I_L3951_937, $SC_ss_prop_I151 + $I_L3951_957, $I_L3950_967, 0) = t$4439(1 + $I_L3951_913, 1 + $I_L3951_937, 1 + $I_L3951_957)
 3951.                                                    $I_L3951_913 = 1 + $I_L3951_913
 3951.                                                    if ( $I_L3951_913 >= $F_A48 ) exit
 3951.                                                 enddo
 3951.                                                 $I_L3951_937 = 1 + $I_L3951_937
 3951.                                                 if ( $I_L3951_937 >= $F_A47 ) exit
 3951.                                              enddo
 3951.                                              $I_L3951_957 = 1 + $I_L3951_957
 3951.                                              if ( $I_L3951_957 >= $F_A46 ) exit
 3951.                                           enddo
 3951.                                        endif
 3954.                                        _free( t$4440 )
 3954.                                     endif
 3962.                                     $I_L3950_967 = 1 + $I_L3950_967
 3954.                                     if ( $I_L3950_967 >= 1 + n_cloud_type ) exit
 3954.                                  enddo
 3954.                               endif
 3954.                            endif
 3954.                         endif
 3987.                         if ( isolir == 1 ) then
 3989.                            if ( n_profile > 0 ) then
 3990.                               $SC_solar_flux_band_I9 = solar_flux_band(i_first_band + $I_L3698_616)
 3989.                               $I_L3989_901 = 0
 3989. !dir$ ivdep
 3989.                               do
 3990.                                  solar_irrad_band(1 + $I_L3989_901) = $SC_solar_flux_band_I9 * solar_irrad(1 + $I_L3989_901)
 3992.                                  $I_L3989_901 = 1 + $I_L3989_901
 3989.                                  if ( $I_L3989_901 >= n_profile ) exit
 3989.                               enddo
 3989.                            endif
 3994.                         else if ( isolir == 2 ) then
 3999.                            call diff_planck_source( n_profile, n_layer, n_deg_fit, thermal_coefficient(0, i_first_band + $I_L3698_616), t_ref_planck, t_level(1, 0), t_ground(1), planck_flux_band(1, 0), diff_planck_band(1, 1), planck_flux_ground(1), l_ir_source_quad, t(1, 1), diff_planck_band_2(1, 1), i_angular_integration, n_viewing_level, i_rad_layer(1), frac_rad_layer(1), planck_radiance_band(1, 1), l_tile, n_point_tile, n_tile, list_tile(1), frac_tile(1, 1), t_tile(1, 1), planck_flux_tile(1, 1), nd_profile, nd_layer, nd_thermal_coeff, nd_radiance_profile, nd_viewing_level, nd_point_tile, nd_tile )
 3999.                         endif
 4025.                         if ( $l_gas_band_S136 == .false. ) then
 4030.                            call solve_band_without_gas( ierr, n_profile, n_layer, d_mass(1, 1), i_angular_integration, i_2stream, n_order_phase, l_rescale, n_order_gauss, ms_min, ms_max, i_truncation, ls_local_trunc(0), accuracy_adaptive, euler_factor, i_sph_algorithm, i_sph_mode, ia_sph_mm(0), cg_coeff(1), uplm_zero(1), uplm_sol(1, 1), i_scatter_method(i_first_band + $I_L3698_616), i_solver, isolir, zen_0(1), zen_00(1, 1), solar_irrad_band(1), planck_flux_band(1, 0), planck_flux_band(1, n_layer), diff_planck_band(1, 1), l_ir_source_quad, diff_planck_band_2(1, 1), ls_brdf_trunc, n_brdf_basis_fnc, rho_alb(1, 1, i_first_band + $I_L3698_616), f_brdf(1, 0, 0, 0), brdf_sol(1, 1, 1), brdf_hemi(1, 1, 1), planck_flux_ground(1), l_tile, n_point_tile, n_tile, list_tile(1), rho_alb_tile(1, 1, 1, i_first_band + $I_L3698_616), planck_flux_tile(1, 1), ss_prop, l_cloud, i_cloud, n_cloud_top, n_cloud_type, frac_cloud(1, id_ct, 1), n_region, k_clr, i_region_cloud(1), frac_region(1, id_ct, 1), w_free(1, 1), w_cloud(1, id_ct), cloud_overlap(1, -1 + id_ct, 1), n_column_slv(1), list_column_slv(1, 1), i_clm_lyr_chn(1, 1), i_clm_cld_typ(1, 1), area_column(1, 1), n_viewing_level, i_rad_layer(1), frac_rad_layer(1), n_direction, direction(1, 1, 1), weight_band(i_first_band + $I_L3698_616), l_initial, flux_direct(1, 0, map_channel(i_first_band + $I_L3698_616)), flux_down(1, 0, map_channel(i_first_band + $I_L3698_616)), flux_up(1, 0, map_channel(i_first_band + $I_L3698_616)), i_direct(1, 0), radiance(1, 1, 1, map_channel(i_first_band + $I_L3698_616)), photolysis(1, 1, map_channel(i_first_band + $I_L3698_616)), l_clear, i_solver_clear, flux_direct_clear(1, 0, map_channel(i_first_band + $I_L3698_616)), flux_down_clear(1, 0, map_channel(i_first_band + $I_L3698_616)), flux_up_clear(1, 0, map_channel(i_first_band + $I_L3698_616)), flux_up_tile(1, 1, map_channel(i_first_band + $I_L3698_616)), flux_up_blue_tile(1, 1, map_channel(i_first_band + $I_L3698_616)), l_blue_flux_surf, weight_blue(i_first_band + $I_L3698_616), flux_direct_blue_surf(1), flux_down_blue_surf(1), flux_up_blue_surf(1), nd_profile, nd_layer, nd_layer_clr, id_ct, nd_column, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_cloud_type, nd_region, nd_overlap_coeff, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc, nd_viewing_level, nd_direction, nd_source_coeff, nd_point_tile, nd_tile )
 4106.                            if ( ierr /= 0 ) then
 2485.                               _free( t$1148 )
 2485.                               goto 190
 2485.                            endif
 4398.                            $_allo_P33(0) = 0x1000000000001L
 4398.                            $_allo_P33(1) = loc( ss_prop%k_grey_tot_clr )
 4398.                            call __deallocate( $_allo_P33, 0, 0, _fcd( 0, 0 ) )
 4398.                            ss_prop%k_grey_tot_clr%header%assoc = 0
 4399.                            $_allo_P34(0) = 0x1000000000001L
 4399.                            $_allo_P34(1) = loc( ss_prop%k_ext_scat_clr )
 4399.                            call __deallocate( $_allo_P34, 0, 0, _fcd( 0, 0 ) )
 4399.                            ss_prop%k_ext_scat_clr%header%assoc = 0
 4400.                            $_allo_P35(0) = 0x1000000000001L
 4400.                            $_allo_P35(1) = loc( ss_prop%tau_clr )
 4400.                            call __deallocate( $_allo_P35, 0, 0, _fcd( 0, 0 ) )
 4400.                            ss_prop%tau_clr%header%assoc = 0
 4401.                            $_allo_P36(0) = 0x1000000000001L
 4401.                            $_allo_P36(1) = loc( ss_prop%omega_clr )
 4401.                            call __deallocate( $_allo_P36, 0, 0, _fcd( 0, 0 ) )
 4401.                            ss_prop%omega_clr%header%assoc = 0
 4402.                            $_allo_P37(0) = 0x1000000000001L
 4402.                            $_allo_P37(1) = loc( ss_prop%phase_fnc_clr )
 4402.                            call __deallocate( $_allo_P37, 0, 0, _fcd( 0, 0 ) )
 4402.                            ss_prop%phase_fnc_clr%header%assoc = 0
 4403.                            $_allo_P38(0) = 0x1000000000001L
 4403.                            $_allo_P38(1) = loc( ss_prop%forward_scatter_clr )
 4403.                            call __deallocate( $_allo_P38, 0, 0, _fcd( 0, 0 ) )
 4403.                            ss_prop%forward_scatter_clr%header%assoc = 0
 4404.                            $_allo_P39(0) = 0x1000000000001L
 4404.                            $_allo_P39(1) = loc( ss_prop%forward_solar_clr )
 4404.                            call __deallocate( $_allo_P39, 0, 0, _fcd( 0, 0 ) )
 4404.                            ss_prop%forward_solar_clr%header%assoc = 0
 4405.                            $_allo_P40(0) = 0x1000000000001L
 4405.                            $_allo_P40(1) = loc( ss_prop%phase_fnc_solar_clr )
 4405.                            call __deallocate( $_allo_P40, 0, 0, _fcd( 0, 0 ) )
 4405.                            ss_prop%phase_fnc_solar_clr%header%assoc = 0
 4407.                            $_allo_P41(0) = 0x1000000000001L
 4407.                            $_allo_P41(1) = loc( ss_prop%k_grey_tot )
 4407.                            call __deallocate( $_allo_P41, 0, 0, _fcd( 0, 0 ) )
 4407.                            ss_prop%k_grey_tot%header%assoc = 0
 4408.                            $_allo_P42(0) = 0x1000000000001L
 4408.                            $_allo_P42(1) = loc( ss_prop%k_ext_scat )
 4408.                            call __deallocate( $_allo_P42, 0, 0, _fcd( 0, 0 ) )
 4408.                            ss_prop%k_ext_scat%header%assoc = 0
 4409.                            $_allo_P43(0) = 0x1000000000001L
 4409.                            $_allo_P43(1) = loc( ss_prop%tau )
 4409.                            call __deallocate( $_allo_P43, 0, 0, _fcd( 0, 0 ) )
 4409.                            ss_prop%tau%header%assoc = 0
 4410.                            $_allo_P44(0) = 0x1000000000001L
 4410.                            $_allo_P44(1) = loc( ss_prop%omega )
 4410.                            call __deallocate( $_allo_P44, 0, 0, _fcd( 0, 0 ) )
 4410.                            ss_prop%omega%header%assoc = 0
 4411.                            $_allo_P45(0) = 0x1000000000001L
 4411.                            $_allo_P45(1) = loc( ss_prop%phase_fnc )
 4411.                            call __deallocate( $_allo_P45, 0, 0, _fcd( 0, 0 ) )
 4411.                            ss_prop%phase_fnc%header%assoc = 0
 4412.                            $_allo_P46(0) = 0x1000000000001L
 4412.                            $_allo_P46(1) = loc( ss_prop%forward_scatter )
 4412.                            call __deallocate( $_allo_P46, 0, 0, _fcd( 0, 0 ) )
 4412.                            ss_prop%forward_scatter%header%assoc = 0
 4413.                            $_allo_P47(0) = 0x1000000000001L
 4413.                            $_allo_P47(1) = loc( ss_prop%forward_solar )
 4413.                            call __deallocate( $_allo_P47, 0, 0, _fcd( 0, 0 ) )
 4413.                            ss_prop%forward_solar%header%assoc = 0
 4414.                            $_allo_P48(0) = 0x1000000000001L
 4414.                            $_allo_P48(1) = loc( ss_prop%phase_fnc_solar )
 4414.                            call __deallocate( $_allo_P48, 0, 0, _fcd( 0, 0 ) )
 4414.                            ss_prop%phase_fnc_solar%header%assoc = 0
 4421.                            if ( isolir == 2 ) then
 4422.                               tm$880 = loc( planck_flux_band(1, 0) )
 4422.                               planck_flux = _copyin( planck_flux_band(1, 0) )
 4422.                               tm$882 = loc( flux_down(1, 0, map_channel(i_first_band + $I_L3698_616)) )
 4422.                               flux_down = _copyin( flux_down(1, 0, map_channel(i_first_band + $I_L3698_616)) )
 4422.                               tm$884 = loc( flux_up(1, 0, map_channel(i_first_band + $I_L3698_616)) )
 4422.                               flux_up = _copyin( flux_up(1, 0, map_channel(i_first_band + $I_L3698_616)) )
 4422.                               tm$886 = loc( radiance(1, 1, 1, map_channel(i_first_band + $I_L3698_616)) )
 4422.                               radiance = _copyin( radiance(1, 1, 1, map_channel(i_first_band + $I_L3698_616)) )
 4422.                               tm$888 = loc( flux_down_clear(1, 0, map_channel(i_first_band + $I_L3698_616)) )
 4422.                               flux_down_clear = _copyin( flux_down_clear(1, 0, map_channel(i_first_band + $I_L3698_616)) )
 4422.                               tm$890 = loc( flux_up_clear(1, 0, map_channel(i_first_band + $I_L3698_616)) )
 4422.                               flux_up_clear = _copyin( flux_up_clear(1, 0, map_channel(i_first_band + $I_L3698_616)) )
 4422.                               t$113 = nd_flux_profile
 4422.                               t$114 = nd_layer
 4422.                               t$1293 = max( 0, nd_flux_profile )
 4422.                               t$1294 = max( 0, nd_flux_profile )
 4422.                               t$1295 = 1 + nd_layer
 4422.                               t$1296 = max( 0, 1 + nd_layer )
 4422.                               t$1297 = max( 0, nd_flux_profile ) * max( 0, 1 + nd_layer )
 4422.                               t$115 = nd_radiance_profile
 4422.                               t$116 = nd_viewing_level
 4422.                               t$1298 = max( 0, nd_radiance_profile )
 4422.                               t$1299 = max( 0, nd_radiance_profile )
 4422.                               t$1300 = max( 0, nd_viewing_level )
 4422.                               t$1301 = max( 0, nd_radiance_profile ) * max( 0, nd_viewing_level )
 4422.                               t$117 = nd_direction
 4422.                               t$1302 = max( 0, nd_radiance_profile ) * max( 0, nd_viewing_level )
 4422.                               t$1303 = max( 0, nd_direction )
 4422.                               t$1304 = max( 0, nd_radiance_profile ) * max( 0, nd_direction ) * max( 0, nd_viewing_level )
 4422.                               if ( i_angular_integration == 1 .orelse. i_angular_integration == 2 ) then
 4422.                                  if ( nd_layer >= 0 ) then
 4422.                                     if ( nd_flux_profile > 0 ) then
 4422.                                        $I_L4422_832 = 0
 4422.                                        do
 4422.                                           $I_L4422_821 = 0
 4422. !dir$ ivdep
 4422.                                           do
 4422.                                              flux_up(1 + $I_L4422_821, $I_L4422_832) = flux_up(1 + $I_L4422_821, $I_L4422_832) + planck_flux(1 + $I_L4422_821, $I_L4422_832)
 4422.                                              flux_down(1 + $I_L4422_821, $I_L4422_832) = planck_flux(1 + $I_L4422_821, $I_L4422_832) + flux_down(1 + $I_L4422_821, $I_L4422_832)
 4422.                                              $I_L4422_821 = 1 + $I_L4422_821
 4422.                                              if ( $I_L4422_821 >= nd_flux_profile ) exit
 4422.                                           enddo
 4422.                                           $I_L4422_832 = 1 + $I_L4422_832
 4422.                                           if ( $I_L4422_832 >= 1 + nd_layer ) exit
 4422.                                        enddo
 4422.                                     endif
 4422.                                  endif
 4422.                                  if ( l_clear /= .false. ) then
 4422.                                     if ( nd_layer >= 0 ) then
 4422.                                        if ( nd_flux_profile > 0 ) then
 4422.                                           $I_L4422_834 = 0
 4422.                                           do
 4422.                                              $I_L4422_823 = 0
 4422. !dir$ ivdep
 4422.                                              do
 4422.                                                 flux_up_clear(1 + $I_L4422_823, $I_L4422_834) = flux_up_clear(1 + $I_L4422_823, $I_L4422_834) + planck_flux(1 + $I_L4422_823, $I_L4422_834)
 4422.                                                 flux_down_clear(1 + $I_L4422_823, $I_L4422_834) = planck_flux(1 + $I_L4422_823, $I_L4422_834) + flux_down_clear(1 + $I_L4422_823, $I_L4422_834)
 4422.                                                 $I_L4422_823 = 1 + $I_L4422_823
 4422.                                                 if ( $I_L4422_823 >= nd_flux_profile ) exit
 4422.                                              enddo
 4422.                                              $I_L4422_834 = 1 + $I_L4422_834
 4422.                                              if ( $I_L4422_834 >= 1 + nd_layer ) exit
 4422.                                           enddo
 4422.                                        endif
 4422.                                     endif
 4422.                                  endif
 4422.                               else
 4422.                                  if ( i_angular_integration == 3 ) then
 4422.                                     if ( i_sph_mode == 2 ) then
 4422.                                        if ( nd_layer >= 0 ) then
 4422.                                           if ( nd_flux_profile > 0 ) then
 4422.                                              $I_L4422_828 = 0
 4422.                                              do
 4422.                                                 $I_L4422_817 = 0
 4422. !dir$ ivdep
 4422.                                                 do
 4422.                                                    flux_up(1 + $I_L4422_817, $I_L4422_828) = flux_up(1 + $I_L4422_817, $I_L4422_828) + 3.1415926535897931 * planck_radiance_band(1 + $I_L4422_817, 1 + $I_L4422_828)
 4422.                                                    flux_down(1 + $I_L4422_817, $I_L4422_828) = flux_down(1 + $I_L4422_817, $I_L4422_828) + 3.1415926535897931 * planck_radiance_band(1 + $I_L4422_817, 1 + $I_L4422_828)
 4422.                                                    $I_L4422_817 = 1 + $I_L4422_817
 4422.                                                    if ( $I_L4422_817 >= nd_flux_profile ) exit
 4422.                                                 enddo
 4422.                                                 $I_L4422_828 = 1 + $I_L4422_828
 4422.                                                 if ( $I_L4422_828 >= 1 + nd_layer ) exit
 4422.                                              enddo
 4422.                                           endif
 4422.                                        endif
 4422.                                        if ( l_clear /= .false. ) then
 4422.                                           if ( nd_layer >= 0 ) then
 4422.                                              if ( nd_flux_profile > 0 ) then
 4422.                                                 $I_L4422_830 = 0
 4422.                                                 do
 4422.                                                    $I_L4422_819 = 0
 4422. !dir$ ivdep
 4422.                                                    do
 4422.                                                       flux_up_clear(1 + $I_L4422_819, $I_L4422_830) = flux_up_clear(1 + $I_L4422_819, $I_L4422_830) + 3.1415926535897931 * planck_radiance_band(1 + $I_L4422_819, 1 + $I_L4422_830)
 4422.                                                       flux_down_clear(1 + $I_L4422_819, $I_L4422_830) = flux_down_clear(1 + $I_L4422_819, $I_L4422_830) + 3.1415926535897931 * planck_radiance_band(1 + $I_L4422_819, 1 + $I_L4422_830)
 4422.                                                       $I_L4422_819 = 1 + $I_L4422_819
 4422.                                                       if ( $I_L4422_819 >= nd_flux_profile ) exit
 4422.                                                    enddo
 4422.                                                    $I_L4422_830 = 1 + $I_L4422_830
 4422.                                                    if ( $I_L4422_830 >= 1 + nd_layer ) exit
 4422.                                                 enddo
 4422.                                              endif
 4422.                                           endif
 4422.                                        endif
 4422.                                     else if ( i_sph_mode == 1 ) then
 4422.                                        if ( nd_direction > 0 ) then
 4422.                                           if ( nd_viewing_level > 0 ) then
 4422.                                              if ( nd_radiance_profile > 0 ) then
 4422.                                                 $I_L4422_846 = 0
 4422.                                                 do
 4422.                                                    $I_L4422_844 = 0
 4422.                                                    do
 4422.                                                       $I_L4422_842 = 0
 4422.                                                       do
 4422.                                                          $I_L4422_839 = 0
 4422. !dir$ shortloop16
 4422. !dir$ blocking_size( 16, 16 )
 4422.                                                          do
 4422.                                                             $I_L4422_836 = 0
 4422.                                                             if ( min( nd_direction, 16 + 16 * $I_L4422_844 ) + -16 * $I_L4422_844 >= 4 ) then
 4422.                                                                $I_L4422_851 = 0
 4422. !dir$ shortloop16
 4422. !dir$ blocking_size( 16, 16 )
 4422.                                                                do
 4422.                                                                   $I_L4422_825 = 0
 4422. !dir$ ivdep
 4422. !dir$ loop_info (automatic) cache_nt( radiance )
 4422. !dir$ blocking_size( 256, 256 )
 4422.                                                                   do
 4422.                                                                      radiance(1 + $I_L4422_825 + 256 * $I_L4422_842, 1 + $I_L4422_839 + 16 * $I_L4422_846, 1 + 16 * $I_L4422_844 + 4 * $I_L4422_851) = planck_radiance_band(1 + $I_L4422_825 + 256 * $I_L4422_842, 1 + $I_L4422_839 + 16 * $I_L4422_846) + radiance(1 + $I_L4422_825 + 256 * $I_L4422_842, 1 + $I_L4422_839 + 16 * $I_L4422_846, 1 + 16 * $I_L4422_844 + 4 * $I_L4422_851)
 4422.                                                                      radiance(1 + $I_L4422_825 + 256 * $I_L4422_842, 1 + $I_L4422_839 + 16 * $I_L4422_846, 2 + 16 * $I_L4422_844 + 4 * $I_L4422_851) = planck_radiance_band(1 + $I_L4422_825 + 256 * $I_L4422_842, 1 + $I_L4422_839 + 16 * $I_L4422_846) + radiance(1 + $I_L4422_825 + 256 * $I_L4422_842, 1 + $I_L4422_839 + 16 * $I_L4422_846, 2 + 16 * $I_L4422_844 + 4 * $I_L4422_851)
 4422.                                                                      radiance(1 + $I_L4422_825 + 256 * $I_L4422_842, 1 + $I_L4422_839 + 16 * $I_L4422_846, 3 + 16 * $I_L4422_844 + 4 * $I_L4422_851) = planck_radiance_band(1 + $I_L4422_825 + 256 * $I_L4422_842, 1 + $I_L4422_839 + 16 * $I_L4422_846) + radiance(1 + $I_L4422_825 + 256 * $I_L4422_842, 1 + $I_L4422_839 + 16 * $I_L4422_846, 3 + 16 * $I_L4422_844 + 4 * $I_L4422_851)
 4422.                                                                      radiance(1 + $I_L4422_825 + 256 * $I_L4422_842, 1 + $I_L4422_839 + 16 * $I_L4422_846, 4 + 16 * $I_L4422_844 + 4 * $I_L4422_851) = planck_radiance_band(1 + $I_L4422_825 + 256 * $I_L4422_842, 1 + $I_L4422_839 + 16 * $I_L4422_846) + radiance(1 + $I_L4422_825 + 256 * $I_L4422_842, 1 + $I_L4422_839 + 16 * $I_L4422_846, 4 + 16 * $I_L4422_844 + 4 * $I_L4422_851)
 4422.                                                                      $I_L4422_825 = 1 + $I_L4422_825
 4422.                                                                      if ( $I_L4422_825 >= min( nd_radiance_profile, 256 + 256 * $I_L4422_842 ) + -256 * $I_L4422_842 ) exit
 4422.                                                                   enddo
 4422.                                                                   $I_L4422_851 = 1 + $I_L4422_851
 4422.                                                                   if ( $I_L4422_851 >= _rsh( min( nd_direction, 16 + 16 * $I_L4422_844 ) + -16 * $I_L4422_844, 2 ) ) exit
 4422.                                                                enddo
 4422.                                                                $I_L4422_836 = and( 0xfffffffffffffffcUL, min( nd_direction, 16 + 16 * $I_L4422_844 ) + -16 * $I_L4422_844 )
 4422.                                                             endif
 4422.                                                             if ( $I_L4422_836 < min( nd_direction, 16 + 16 * $I_L4422_844 ) + -16 * $I_L4422_844 ) then
 4422.                                                                $I_L4422_848 = 0
 4422. !dir$ shortloop16
 4422. !dir$ blocking_size( 16, 16 )
 4422.                                                                do
 4422.                                                                   $I_L4422_825 = 0
 4422. !dir$ ivdep
 4422. !dir$ loop_info (automatic) cache_nt( radiance )
 4422. !dir$ blocking_size( 256, 256 )
 4422.                                                                   do
 4422.                                                                      radiance(1 + $I_L4422_825 + 256 * $I_L4422_842, 1 + $I_L4422_839 + 16 * $I_L4422_846, 1 + $I_L4422_836 + $I_L4422_848 + 16 * $I_L4422_844) = planck_radiance_band(1 + $I_L4422_825 + 256 * $I_L4422_842, 1 + $I_L4422_839 + 16 * $I_L4422_846) + radiance(1 + $I_L4422_825 + 256 * $I_L4422_842, 1 + $I_L4422_839 + 16 * $I_L4422_846, 1 + $I_L4422_836 + $I_L4422_848 + 16 * $I_L4422_844)
 4422.                                                                      $I_L4422_825 = 1 + $I_L4422_825
 4422.                                                                      if ( $I_L4422_825 >= min( nd_radiance_profile, 256 + 256 * $I_L4422_842 ) + -256 * $I_L4422_842 ) exit
 4422.                                                                   enddo
 4422.                                                                   $I_L4422_848 = 1 + $I_L4422_848
 4422.                                                                   if ( $I_L4422_848 >= min( nd_direction, 16 + 16 * $I_L4422_844 ) + -$I_L4422_836 + -16 * $I_L4422_844 ) exit
 4422.                                                                enddo
 4422.                                                             endif
 4422.                                                             $I_L4422_839 = 1 + $I_L4422_839
 4422.                                                             if ( $I_L4422_839 >= min( nd_viewing_level, 16 + 16 * $I_L4422_846 ) + -16 * $I_L4422_846 ) exit
 4422.                                                          enddo
 4422.                                                          $I_L4422_842 = 1 + $I_L4422_842
 4422.                                                          if ( $I_L4422_842 >= 1 + max( 0, -1 + _rsh( 255 + nd_radiance_profile, 8 ) ) ) exit
 4422.                                                       enddo
 4422.                                                       $I_L4422_844 = 1 + $I_L4422_844
 4422.                                                       if ( $I_L4422_844 >= 1 + max( 0, -1 + _rsh( 15 + nd_direction, 4 ) ) ) exit
 4422.                                                    enddo
 4422.                                                    $I_L4422_846 = 1 + $I_L4422_846
 4422.                                                    if ( $I_L4422_846 >= 1 + max( 0, -1 + _rsh( 15 + nd_viewing_level, 4 ) ) ) exit
 4422.                                                 enddo
 4422.                                              endif
 4422.                                           endif
 4422.                                        endif
 4422.                                     endif
 4422.                                  endif
 4422.                               endif
 4422.                               flux_up_clear(1, 0, map_channel(i_first_band + $I_L3698_616)) = _copyout( flux_up_clear )
 4422.                               flux_down_clear(1, 0, map_channel(i_first_band + $I_L3698_616)) = _copyout( flux_down_clear )
 4422.                               radiance(1, 1, 1, map_channel(i_first_band + $I_L3698_616)) = _copyout( radiance )
 4422.                               flux_up(1, 0, map_channel(i_first_band + $I_L3698_616)) = _copyout( flux_up )
 4422.                               flux_down(1, 0, map_channel(i_first_band + $I_L3698_616)) = _copyout( flux_down )
 4422.                               planck_flux_band(1, 0) = _copyout( planck_flux )
 4422.                            endif
 4437.                            $I_L3698_616 = 1 + $I_L3698_616
 4437.                         else
 4437.                         endif
 3709.                      else if ( n_band_absorb(i_first_band + $I_L3698_616) > 0 ) then
 3709.                      else
 3709.                      endif
 3709.                      if ( $I_L3698_616 >= 1 + i_last_band + -i_first_band ) exit
 3709.                   enddo
 3709.                   goto 180
 3709.                else
 3709.   180             continue
 2485.                   _free( t$1148 )
 2485.                endif
 2485.   190          continue
 2485.             endif
 2485.          endif
 2485.       endif
 4441.       return
 4441.       end
 4441.       
 4463.       
 4463.       subroutine adjust_ir_radiance( n_profile, n_layer, n_viewing_level, n_direction, i_angular_integration, i_sph_mode, planck_flux, planck_radiance, flux_down, flux_up, radiance, l_clear, flux_down_clear, flux_up_clear, nd_2sg_profile, nd_flux_profile, nd_radiance_profile, nd_layer, nd_direction, nd_viewing_level )
 4463.       t$113 = nd_flux_profile
 4463.       t$114 = nd_layer
 4519.       t$1293 = _zla( 0, nd_flux_profile )
 4463.       t$1294 = _zla( 0, nd_flux_profile )
 4463.       t$1295 = 1 + nd_layer
 4519.       t$1296 = _zla( 0, 1 + nd_layer )
 4463.       t$1297 = _zla( 0, nd_flux_profile ) * _zla( 0, 1 + nd_layer )
 4463.       t$115 = nd_radiance_profile
 4463.       t$116 = nd_viewing_level
 4521.       t$1298 = _zla( 0, nd_radiance_profile )
 4463.       t$1299 = _zla( 0, nd_radiance_profile )
 4521.       t$1300 = _zla( 0, nd_viewing_level )
 4463.       t$1301 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_viewing_level )
 4463.       t$117 = nd_direction
 4463.       t$1302 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_viewing_level )
 4532.       t$1303 = _zla( 0, nd_direction )
 4463.       t$1304 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_viewing_level ) * _zla( 0, nd_direction )
 4551.       if ( i_angular_integration == 1 .orelse. i_angular_integration == 2 ) then
 4554.          if ( nd_layer >= 0 ) then
 4555.             if ( nd_flux_profile > 0 ) then
 4554.                $I_L4554_81 = 0
 4554.                do
 4555.                   $I_L4555_70 = 0
 4555. !dir$ ivdep
 4555.                   do
 4557.                      flux_down(1 + $I_L4555_70, $I_L4554_81) = flux_down(1 + $I_L4555_70, $I_L4554_81) + planck_flux(1 + $I_L4555_70, $I_L4554_81)
 4556.                      flux_up(1 + $I_L4555_70, $I_L4554_81) = planck_flux(1 + $I_L4555_70, $I_L4554_81) + flux_up(1 + $I_L4555_70, $I_L4554_81)
 4558.                      $I_L4555_70 = 1 + $I_L4555_70
 4555.                      if ( $I_L4555_70 >= nd_flux_profile ) exit
 4555.                   enddo
 4559.                   $I_L4554_81 = 1 + $I_L4554_81
 4558.                   if ( $I_L4554_81 >= 1 + nd_layer ) exit
 4558.                enddo
 4558.             endif
 4558.          endif
 4560.          if ( l_clear /= .false. ) then
 4561.             if ( nd_layer >= 0 ) then
 4562.                if ( nd_flux_profile > 0 ) then
 4561.                   $I_L4561_83 = 0
 4561.                   do
 4562.                      $I_L4562_72 = 0
 4562. !dir$ ivdep
 4562.                      do
 4564.                         flux_down_clear(1 + $I_L4562_72, $I_L4561_83) = flux_down_clear(1 + $I_L4562_72, $I_L4561_83) + planck_flux(1 + $I_L4562_72, $I_L4561_83)
 4563.                         flux_up_clear(1 + $I_L4562_72, $I_L4561_83) = planck_flux(1 + $I_L4562_72, $I_L4561_83) + flux_up_clear(1 + $I_L4562_72, $I_L4561_83)
 4565.                         $I_L4562_72 = 1 + $I_L4562_72
 4562.                         if ( $I_L4562_72 >= nd_flux_profile ) exit
 4562.                      enddo
 4566.                      $I_L4561_83 = 1 + $I_L4561_83
 4565.                      if ( $I_L4561_83 >= 1 + nd_layer ) exit
 4565.                   enddo
 4565.                endif
 4565.             endif
 4565.          endif
 4565.       else
 4569.          if ( i_angular_integration == 3 ) then
 4574.             if ( i_sph_mode == 2 ) then
 4575.                if ( nd_layer >= 0 ) then
 4576.                   if ( nd_flux_profile > 0 ) then
 4575.                      $I_L4575_77 = 0
 4575.                      do
 4576.                         $I_L4576_66 = 0
 4576. !dir$ ivdep
 4576.                         do
 4578.                            flux_down(1 + $I_L4576_66, $I_L4575_77) = flux_down(1 + $I_L4576_66, $I_L4575_77) + 3.1415926535897931 * planck_radiance(1 + $I_L4576_66, 1 + $I_L4575_77)
 4577.                            flux_up(1 + $I_L4576_66, $I_L4575_77) = flux_up(1 + $I_L4576_66, $I_L4575_77) + 3.1415926535897931 * planck_radiance(1 + $I_L4576_66, 1 + $I_L4575_77)
 4580.                            $I_L4576_66 = 1 + $I_L4576_66
 4576.                            if ( $I_L4576_66 >= nd_flux_profile ) exit
 4576.                         enddo
 4581.                         $I_L4575_77 = 1 + $I_L4575_77
 4580.                         if ( $I_L4575_77 >= 1 + nd_layer ) exit
 4580.                      enddo
 4580.                   endif
 4580.                endif
 4583.                if ( l_clear /= .false. ) then
 4584.                   if ( nd_layer >= 0 ) then
 4585.                      if ( nd_flux_profile > 0 ) then
 4584.                         $I_L4584_79 = 0
 4584.                         do
 4585.                            $I_L4585_68 = 0
 4585. !dir$ ivdep
 4585.                            do
 4588.                               flux_down_clear(1 + $I_L4585_68, $I_L4584_79) = flux_down_clear(1 + $I_L4585_68, $I_L4584_79) + 3.1415926535897931 * planck_radiance(1 + $I_L4585_68, 1 + $I_L4584_79)
 4586.                               flux_up_clear(1 + $I_L4585_68, $I_L4584_79) = flux_up_clear(1 + $I_L4585_68, $I_L4584_79) + 3.1415926535897931 * planck_radiance(1 + $I_L4585_68, 1 + $I_L4584_79)
 4590.                               $I_L4585_68 = 1 + $I_L4585_68
 4585.                               if ( $I_L4585_68 >= nd_flux_profile ) exit
 4585.                            enddo
 4591.                            $I_L4584_79 = 1 + $I_L4584_79
 4590.                            if ( $I_L4584_79 >= 1 + nd_layer ) exit
 4590.                         enddo
 4590.                      endif
 4590.                   endif
 4590.                endif
 4594.             else if ( i_sph_mode == 1 ) then
 4595.                if ( nd_direction > 0 ) then
 4596.                   if ( nd_viewing_level > 0 ) then
 4597.                      if ( nd_radiance_profile > 0 ) then
 4596.                         $I_L4596_95 = 0
 4596.                         do
 4595.                            $I_L4595_93 = 0
 4595.                            do
 4597.                               $I_L4597_91 = 0
 4597.                               do
 4596.                                  $I_L4596_88 = 0
 4596. !dir$ shortloop16
 4596. !dir$ blocking_size( 16, 16 )
 4596.                                  do
 4595.                                     $I_L4595_85 = 0
 4595.                                     if ( min( nd_direction, 16 + 16 * $I_L4595_93 ) + -16 * $I_L4595_93 >= 4 ) then
 4595.                                        $I_L4595_100 = 0
 4595. !dir$ shortloop16
 4595. !dir$ blocking_size( 16, 16 )
 4595.                                        do
 4597.                                           $I_L4597_74 = 0
 4597. !dir$ ivdep
 4597. !dir$ loop_info (automatic) cache_nt( radiance )
 4597. !dir$ blocking_size( 256, 256 )
 4597.                                           do
 4598.                                              radiance(1 + $I_L4597_74 + 256 * $I_L4597_91, 1 + $I_L4596_88 + 16 * $I_L4596_95, 1 + 16 * $I_L4595_93 + 4 * $I_L4595_100) = planck_radiance(1 + $I_L4597_74 + 256 * $I_L4597_91, 1 + $I_L4596_88 + 16 * $I_L4596_95) + radiance(1 + $I_L4597_74 + 256 * $I_L4597_91, 1 + $I_L4596_88 + 16 * $I_L4596_95, 1 + 16 * $I_L4595_93 + 4 * $I_L4595_100)
 4598.                                              radiance(1 + $I_L4597_74 + 256 * $I_L4597_91, 1 + $I_L4596_88 + 16 * $I_L4596_95, 2 + 16 * $I_L4595_93 + 4 * $I_L4595_100) = planck_radiance(1 + $I_L4597_74 + 256 * $I_L4597_91, 1 + $I_L4596_88 + 16 * $I_L4596_95) + radiance(1 + $I_L4597_74 + 256 * $I_L4597_91, 1 + $I_L4596_88 + 16 * $I_L4596_95, 2 + 16 * $I_L4595_93 + 4 * $I_L4595_100)
 4598.                                              radiance(1 + $I_L4597_74 + 256 * $I_L4597_91, 1 + $I_L4596_88 + 16 * $I_L4596_95, 3 + 16 * $I_L4595_93 + 4 * $I_L4595_100) = planck_radiance(1 + $I_L4597_74 + 256 * $I_L4597_91, 1 + $I_L4596_88 + 16 * $I_L4596_95) + radiance(1 + $I_L4597_74 + 256 * $I_L4597_91, 1 + $I_L4596_88 + 16 * $I_L4596_95, 3 + 16 * $I_L4595_93 + 4 * $I_L4595_100)
 4598.                                              radiance(1 + $I_L4597_74 + 256 * $I_L4597_91, 1 + $I_L4596_88 + 16 * $I_L4596_95, 4 + 16 * $I_L4595_93 + 4 * $I_L4595_100) = planck_radiance(1 + $I_L4597_74 + 256 * $I_L4597_91, 1 + $I_L4596_88 + 16 * $I_L4596_95) + radiance(1 + $I_L4597_74 + 256 * $I_L4597_91, 1 + $I_L4596_88 + 16 * $I_L4596_95, 4 + 16 * $I_L4595_93 + 4 * $I_L4595_100)
 4597.                                              $I_L4597_74 = 1 + $I_L4597_74
 4597.                                              if ( $I_L4597_74 >= min( nd_radiance_profile, 256 + 256 * $I_L4597_91 ) + -256 * $I_L4597_91 ) exit
 4597.                                           enddo
 4595.                                           $I_L4595_100 = 1 + $I_L4595_100
 4595.                                           if ( $I_L4595_100 >= _rsh( min( nd_direction, 16 + 16 * $I_L4595_93 ) + -16 * $I_L4595_93, 2 ) ) exit
 4595.                                        enddo
 4595.                                        $I_L4595_85 = and( 0xfffffffffffffffcUL, min( nd_direction, 16 + 16 * $I_L4595_93 ) + -16 * $I_L4595_93 )
 4595.                                     endif
 4595.                                     if ( $I_L4595_85 < min( nd_direction, 16 + 16 * $I_L4595_93 ) + -16 * $I_L4595_93 ) then
 4595.                                        $I_L4595_97 = 0
 4595. !dir$ shortloop16
 4595. !dir$ blocking_size( 16, 16 )
 4595.                                        do
 4597.                                           $I_L4597_74 = 0
 4597. !dir$ ivdep
 4597. !dir$ loop_info (automatic) cache_nt( radiance )
 4597. !dir$ blocking_size( 256, 256 )
 4597.                                           do
 4598.                                              radiance(1 + $I_L4597_74 + 256 * $I_L4597_91, 1 + $I_L4596_88 + 16 * $I_L4596_95, 1 + $I_L4595_85 + $I_L4595_97 + 16 * $I_L4595_93) = planck_radiance(1 + $I_L4597_74 + 256 * $I_L4597_91, 1 + $I_L4596_88 + 16 * $I_L4596_95) + radiance(1 + $I_L4597_74 + 256 * $I_L4597_91, 1 + $I_L4596_88 + 16 * $I_L4596_95, 1 + $I_L4595_85 + $I_L4595_97 + 16 * $I_L4595_93)
 4597.                                              $I_L4597_74 = 1 + $I_L4597_74
 4597.                                              if ( $I_L4597_74 >= min( nd_radiance_profile, 256 + 256 * $I_L4597_91 ) + -256 * $I_L4597_91 ) exit
 4597.                                           enddo
 4595.                                           $I_L4595_97 = 1 + $I_L4595_97
 4595.                                           if ( $I_L4595_97 >= min( nd_direction, 16 + 16 * $I_L4595_93 ) + -$I_L4595_85 + -16 * $I_L4595_93 ) exit
 4595.                                        enddo
 4595.                                     endif
 4596.                                     $I_L4596_88 = 1 + $I_L4596_88
 4600.                                     if ( $I_L4596_88 >= min( nd_viewing_level, 16 + 16 * $I_L4596_95 ) + -16 * $I_L4596_95 ) exit
 4600.                                  enddo
 4597.                                  $I_L4597_91 = 1 + $I_L4597_91
 4597.                                  if ( $I_L4597_91 >= 1 + max( 0, -1 + _rsh( 255 + nd_radiance_profile, 8 ) ) ) exit
 4597.                               enddo
 4595.                               $I_L4595_93 = 1 + $I_L4595_93
 4601.                               if ( $I_L4595_93 >= 1 + max( 0, -1 + _rsh( 15 + nd_direction, 4 ) ) ) exit
 4601.                            enddo
 4596.                            $I_L4596_95 = 1 + $I_L4596_95
 4596.                            if ( $I_L4596_95 >= 1 + max( 0, -1 + _rsh( 15 + nd_viewing_level, 4 ) ) ) exit
 4596.                         enddo
 4596.                      endif
 4596.                   endif
 4596.                endif
 4596.             endif
 4596.          endif
 4596.       endif
 4610.       return
 4610.       end
 4610.       
 4631.       
 4631.       subroutine aggregate_cloud( ierr, n_profile, n_layer, n_cloud_top, i_cloud, i_cloud_representation, n_cloud_type, frac_cloud, i_region_cloud, frac_region, nd_profile, nd_layer, nd_cloud_type, nd_region, id_ct )
 4631.       t$118 = nd_profile
 4631.       t$119 = id_ct
 4631.       t$120 = nd_layer
 4631.       t$121 = nd_cloud_type
 4690.       t$1305 = _zla( 0, nd_profile )
 4631.       t$1306 = _zla( 0, nd_profile )
 4631.       t$1307 = 1 + nd_layer + -id_ct
 4690.       t$1308 = _zla( 0, 1 + nd_layer + -id_ct )
 4631.       t$1309 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
 4690.       t$1310 = _zla( 0, nd_cloud_type )
 4631.       t$1311 = _zla( 0, nd_profile ) * _zla( 0, nd_cloud_type ) * _zla( 0, 1 + nd_layer + -id_ct )
 4631.       t$122 = nd_region
 4697.       t$1312 = _zla( 0, nd_region )
 4631.       t$1313 = _zla( 0, nd_profile ) * _zla( 0, nd_region ) * _zla( 0, 1 + nd_layer + -id_ct )
 4712.       if ( i_cloud == 6 ) then
 4631.          goto 10
 4712.       else if ( i_cloud == 8 ) then
 4712.    10    continue
 4715.          if ( i_cloud_representation == 4 ) then
 4717.             if ( n_cloud_type > 0 ) then
 4725.                $SC_i_region_cloud_I3 = i_region_cloud(4)
 4723.                $SC_i_region_cloud_I2 = i_region_cloud(3)
 4721.                $SC_i_region_cloud_I1 = i_region_cloud(2)
 4727.                if ( 1 < n_cloud_type ) then
 4717.                   $I_L4717_39 = 0
 4717. !dir$ ivdep
 4717.                   do
 4720.                      if ( $I_L4717_39 == 0 ) then
 4721.                         $SC_i_region_cloud_I1 = 2
 4722.                      else if ( $I_L4717_39 == 1 ) then
 4723.                         $SC_i_region_cloud_I2 = 3
 4723.                      else if ( $I_L4717_39 == 2 ) then
 4725.                         $SC_i_region_cloud_I3 = 3
 4725.                      endif
 4727.                      $I_L4717_39 = 1 + $I_L4717_39
 4726.                      if ( $I_L4717_39 >= -1 + n_cloud_type ) exit
 4726.                   enddo
 4726.                endif
 4725.                i_region_cloud(4) = $SC_i_region_cloud_I3
 4723.                i_region_cloud(3) = $SC_i_region_cloud_I2
 4721.                i_region_cloud(2) = $SC_i_region_cloud_I1
 4719.                i_region_cloud(1) = 2
 4719.             endif
 4733.             if ( nd_layer > 0 ) then
 4734.                if ( nd_profile > 0 ) then
 4733.                   $I_L4733_34 = 0
 4733.                   do
 4734.                      $I_L4734_30 = 0
 4734. !dir$ ivdep
 4734.                      do
 4735.                         frac_region(1 + $I_L4734_30, 1 + $I_L4733_34, 2) = frac_cloud(1 + $I_L4734_30, 1 + $I_L4733_34, 2) + frac_cloud(1 + $I_L4734_30, 1 + $I_L4733_34, 1)
 4738.                         frac_region(1 + $I_L4734_30, 1 + $I_L4733_34, 3) = frac_cloud(1 + $I_L4734_30, 1 + $I_L4733_34, 4) + frac_cloud(1 + $I_L4734_30, 1 + $I_L4733_34, 3)
 4741.                         $I_L4734_30 = 1 + $I_L4734_30
 4734.                         if ( $I_L4734_30 >= nd_profile ) exit
 4734.                      enddo
 4742.                      $I_L4733_34 = 1 + $I_L4733_34
 4741.                      if ( $I_L4733_34 >= nd_layer ) exit
 4741.                   enddo
 4741.                endif
 4741.             endif
 4744.          else if ( i_cloud_representation == 3 ) then
 4746.             if ( n_cloud_type > 0 ) then
 4750.                $SC_i_region_cloud_I1 = i_region_cloud(2)
 4752.                if ( 1 < n_cloud_type ) then
 4750.                   $SC_i_region_cloud_I1 = 3
 4750.                endif
 4750.                i_region_cloud(2) = $SC_i_region_cloud_I1
 4748.                i_region_cloud(1) = 2
 4748.             endif
 4754.             if ( nd_layer > 0 ) then
 4755.                if ( nd_profile > 0 ) then
 4754.                   $I_L4754_32 = 0
 4754.                   do
 4755.                      $I_L4755_26 = 0
 4755. !dir$ ivdep
 4755.                      do
 4756.                         frac_region(1 + $I_L4755_26, 1 + $I_L4754_32, 2) = frac_cloud(1 + $I_L4755_26, 1 + $I_L4754_32, 1)
 4758.                         frac_region(1 + $I_L4755_26, 1 + $I_L4754_32, 3) = frac_cloud(1 + $I_L4755_26, 1 + $I_L4754_32, 2)
 4760.                         $I_L4755_26 = 1 + $I_L4755_26
 4755.                         if ( $I_L4755_26 >= nd_profile ) exit
 4755.                      enddo
 4761.                      $I_L4754_32 = 1 + $I_L4754_32
 4760.                      if ( $I_L4754_32 >= nd_layer ) exit
 4760.                   enddo
 4760.                endif
 4760.             endif
 4760.          else
 4765.             _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$124,  _substr(t$123,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: This representation of clouds is not compatible with separate ', 0x800600000000L ), _iotype( 'convective and stratiform and overlap.', 0x800600000000L ) ) )
 4769.             ierr = 1
 4769.          endif
 4769.       endif
 4778.       return
 4778.       end
 4778.       
 4799.       
 4799.       subroutine augment_radiance( n_profile, n_layer, i_angular_integration, i_sph_mode, n_viewing_level, n_direction, isolir, l_clear, l_initial, weight_incr, l_blue_flux_surf, weight_blue, flux_direct, flux_down, flux_up, flux_direct_blue_surf, flux_down_blue_surf, flux_up_blue_surf, i_direct, radiance, photolysis, flux_direct_clear, flux_down_clear, flux_up_clear, flux_direct_incr, flux_total_incr, i_direct_incr, radiance_incr, photolysis_incr, flux_direct_incr_clear, flux_total_incr_clear, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_layer, nd_viewing_level, nd_direction )
 4799.       t$125 = nd_flux_profile
 4799.       t$126 = nd_layer
 4899.       t$1314 = _zla( 0, nd_flux_profile )
 4799.       t$1315 = _zla( 0, nd_flux_profile )
 4799.       t$1316 = 1 + nd_layer
 4899.       t$1317 = _zla( 0, 1 + nd_layer )
 4799.       t$1318 = _zla( 0, nd_flux_profile ) * _zla( 0, 1 + nd_layer )
 4799.       t$128 = nd_radiance_profile
 4913.       t$1319 = _zla( 0, nd_radiance_profile )
 4799.       t$1320 = _zla( 0, nd_radiance_profile )
 4799.       t$1321 = _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer )
 4799.       t$129 = nd_viewing_level
 4799.       t$130 = nd_direction
 4915.       t$1322 = _zla( 0, nd_viewing_level )
 4799.       t$1323 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_viewing_level )
 4915.       t$1324 = _zla( 0, nd_direction )
 4799.       t$1325 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_viewing_level ) * _zla( 0, nd_direction )
 4799.       t$131 = nd_j_profile
 4920.       t$1326 = _zla( 0, nd_j_profile )
 4799.       t$1327 = _zla( 0, nd_j_profile )
 4799.       t$1328 = _zla( 0, nd_viewing_level ) * _zla( 0, nd_j_profile )
 4799.       t$127 = ( 2 + 2 * nd_layer )
 4879.       t$1329 = _zla( 0, ( 2 + 2 * nd_layer ) )
 4799.       t$1330 = _zla( 0, nd_flux_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
 4951.       if ( l_initial == .false. ) then
 4956.          if ( i_angular_integration == 1 .orelse. i_angular_integration == 2 ) then
 4956.             goto 10
 4956.          else
 4956.             if ( i_angular_integration /= 3 .orelse. i_sph_mode /= 2 ) then
 5012.                if ( i_angular_integration /= 3 ) then
 5012.                   goto 20
 5012.                else if ( i_sph_mode == 1 ) then
 5015.                   if ( nd_direction > 0 ) then
 5016.                      if ( nd_viewing_level > 0 ) then
 5017.                         if ( nd_radiance_profile > 0 ) then
 5015.                            $I_L5015_266 = 0
 5015.                            do
 5016.                               $I_L5016_260 = 0
 5016.                               do
 5017.                                  $I_L5017_232 = 0
 5017. !dir$ ivdep
 5017. !dir$ loop_info (automatic) cache_nt( radiance )
 5017.                                  do
 5018.                                     radiance(1 + $I_L5017_232, 1 + $I_L5016_260, 1 + $I_L5015_266) = radiance(1 + $I_L5017_232, 1 + $I_L5016_260, 1 + $I_L5015_266) + weight_incr * radiance_incr(1 + $I_L5017_232, 1 + $I_L5016_260, 1 + $I_L5015_266)
 5020.                                     $I_L5017_232 = 1 + $I_L5017_232
 5017.                                     if ( $I_L5017_232 >= nd_radiance_profile ) exit
 5017.                                  enddo
 5021.                                  $I_L5016_260 = 1 + $I_L5016_260
 5020.                                  if ( $I_L5016_260 >= nd_viewing_level ) exit
 5020.                               enddo
 5022.                               $I_L5015_266 = 1 + $I_L5015_266
 5021.                               if ( $I_L5015_266 >= nd_direction ) exit
 5021.                            enddo
 5021.                         endif
 5021.                      endif
 5021.                   endif
 5024.                   if ( isolir == 1 ) then
 5025.                      if ( nd_layer >= 0 ) then
 5026.                         if ( nd_flux_profile > 0 ) then
 5025.                            $I_L5025_262 = 0
 5025.                            do
 5026.                               $I_L5026_234 = 0
 5026. !dir$ ivdep
 5026.                               do
 5027.                                  i_direct(1 + $I_L5026_234, $I_L5025_262) = i_direct(1 + $I_L5026_234, $I_L5025_262) + weight_incr * i_direct_incr(1 + $I_L5026_234, $I_L5025_262)
 5029.                                  $I_L5026_234 = 1 + $I_L5026_234
 5026.                                  if ( $I_L5026_234 >= nd_flux_profile ) exit
 5026.                               enddo
 5030.                               $I_L5025_262 = 1 + $I_L5025_262
 5029.                               if ( $I_L5025_262 >= 1 + nd_layer ) exit
 5029.                            enddo
 5029.                         endif
 5029.                      endif
 5029.                   endif
 5029.                else
 5029.    20             continue
 5033.                   if ( i_angular_integration == 3 ) then
 5033.                      if ( i_sph_mode == 3 ) then
 5036.                         if ( nd_viewing_level > 0 ) then
 5037.                            if ( nd_j_profile > 0 ) then
 5036.                               $I_L5036_246 = 0
 5036.                               do
 5037.                                  $I_L5037_216 = 0
 5037. !dir$ ivdep
 5037.                                  do
 5038.                                     photolysis(1 + $I_L5037_216, 1 + $I_L5036_246) = photolysis(1 + $I_L5037_216, 1 + $I_L5036_246) + weight_incr * photolysis_incr(1 + $I_L5037_216, 1 + $I_L5036_246)
 5040.                                     $I_L5037_216 = 1 + $I_L5037_216
 5037.                                     if ( $I_L5037_216 >= nd_j_profile ) exit
 5037.                                  enddo
 5041.                                  $I_L5036_246 = 1 + $I_L5036_246
 5040.                                  if ( $I_L5036_246 >= nd_viewing_level ) exit
 5040.                               enddo
 5040.                            endif
 5040.                         endif
 5040.                      endif
 5040.                   endif
 5040.                endif
 5040.             else
 5040.    10          continue
 4962.                if ( isolir == 1 ) then
 4963.                   if ( nd_layer >= 0 ) then
 4964.                      if ( nd_flux_profile > 0 ) then
 4963.                         $I_L4963_248 = 0
 4963.                         do
 4964.                            $I_L4964_218 = 0
 4964. !dir$ ivdep
 4964.                            do
 4965.                               flux_direct(1 + $I_L4964_218, $I_L4963_248) = flux_direct(1 + $I_L4964_218, $I_L4963_248) + weight_incr * flux_direct_incr(1 + $I_L4964_218, $I_L4963_248)
 4967.                               $I_L4964_218 = 1 + $I_L4964_218
 4964.                               if ( $I_L4964_218 >= nd_flux_profile ) exit
 4964.                            enddo
 4968.                            $I_L4963_248 = 1 + $I_L4963_248
 4967.                            if ( $I_L4963_248 >= 1 + nd_layer ) exit
 4967.                         enddo
 4967.                      endif
 4967.                   endif
 4969.                   if ( l_blue_flux_surf /= .false. ) then
 4970.                      if ( nd_flux_profile > 0 ) then
 4970.                         $I_L4970_220 = 0
 4970. !dir$ ivdep
 4970.                         do
 4971.                            flux_up_blue_surf(1 + $I_L4970_220) = flux_up_blue_surf(1 + $I_L4970_220) + weight_blue * flux_total_incr(1 + $I_L4970_220, 1 + 2 * n_layer)
 4973.                            flux_down_blue_surf(1 + $I_L4970_220) = flux_down_blue_surf(1 + $I_L4970_220) + weight_blue * flux_total_incr(1 + $I_L4970_220, 2 + 2 * n_layer)
 4978.                            flux_direct_blue_surf(1 + $I_L4970_220) = flux_direct_blue_surf(1 + $I_L4970_220) + weight_blue * flux_direct_incr(1 + $I_L4970_220, n_layer)
 4975.                            $I_L4970_220 = 1 + $I_L4970_220
 4970.                            if ( $I_L4970_220 >= nd_flux_profile ) exit
 4970.                         enddo
 4970.                      endif
 4970.                   endif
 4970.                endif
 4984.                if ( nd_layer >= 0 ) then
 4985.                   if ( nd_flux_profile > 0 ) then
 4984.                      $I_L4984_250 = 0
 4984.                      do
 4985.                         $I_L4985_222 = 0
 4985. !dir$ ivdep
 4985.                         do
 4986.                            flux_up(1 + $I_L4985_222, $I_L4984_250) = flux_up(1 + $I_L4985_222, $I_L4984_250) + weight_incr * flux_total_incr(1 + $I_L4985_222, 1 + 2 * $I_L4984_250)
 4988.                            flux_down(1 + $I_L4985_222, $I_L4984_250) = flux_down(1 + $I_L4985_222, $I_L4984_250) + weight_incr * flux_total_incr(1 + $I_L4985_222, 2 + 2 * $I_L4984_250)
 4990.                            $I_L4985_222 = 1 + $I_L4985_222
 4985.                            if ( $I_L4985_222 >= nd_flux_profile ) exit
 4985.                         enddo
 4991.                         $I_L4984_250 = 1 + $I_L4984_250
 4990.                         if ( $I_L4984_250 >= 1 + nd_layer ) exit
 4990.                      enddo
 4990.                   endif
 4990.                endif
 4993.                if ( l_clear /= .false. ) then
 4994.                   if ( isolir == 1 ) then
 4995.                      if ( nd_layer >= 0 ) then
 4996.                         if ( nd_flux_profile > 0 ) then
 4995.                            $I_L4995_252 = 0
 4995.                            do
 4996.                               $I_L4996_224 = 0
 4996. !dir$ ivdep
 4996.                               do
 4997.                                  flux_direct_clear(1 + $I_L4996_224, $I_L4995_252) = flux_direct_clear(1 + $I_L4996_224, $I_L4995_252) + weight_incr * flux_direct_incr_clear(1 + $I_L4996_224, $I_L4995_252)
 4999.                                  $I_L4996_224 = 1 + $I_L4996_224
 4996.                                  if ( $I_L4996_224 >= nd_flux_profile ) exit
 4996.                               enddo
 5000.                               $I_L4995_252 = 1 + $I_L4995_252
 4999.                               if ( $I_L4995_252 >= 1 + nd_layer ) exit
 4999.                            enddo
 4999.                         endif
 4999.                      endif
 4999.                   endif
 5002.                   if ( nd_layer >= 0 ) then
 5003.                      if ( nd_flux_profile > 0 ) then
 5002.                         $I_L5002_254 = 0
 5002.                         do
 5003.                            $I_L5003_226 = 0
 5003. !dir$ ivdep
 5003.                            do
 5004.                               flux_up_clear(1 + $I_L5003_226, $I_L5002_254) = flux_up_clear(1 + $I_L5003_226, $I_L5002_254) + weight_incr * flux_total_incr_clear(1 + $I_L5003_226, 1 + 2 * $I_L5002_254)
 5006.                               flux_down_clear(1 + $I_L5003_226, $I_L5002_254) = flux_down_clear(1 + $I_L5003_226, $I_L5002_254) + weight_incr * flux_total_incr_clear(1 + $I_L5003_226, 2 + 2 * $I_L5002_254)
 5008.                               $I_L5003_226 = 1 + $I_L5003_226
 5003.                               if ( $I_L5003_226 >= nd_flux_profile ) exit
 5003.                            enddo
 5009.                            $I_L5002_254 = 1 + $I_L5002_254
 5008.                            if ( $I_L5002_254 >= 1 + nd_layer ) exit
 5008.                         enddo
 5008.                      endif
 5008.                   endif
 5008.                endif
 5008.             endif
 5008.          endif
 5045.       else if ( i_angular_integration == 1 ) then
 5045.          goto 30
 5045.       else if ( i_angular_integration == 2 ) then
 5045.          goto 30
 5045.       else if ( i_angular_integration /= 3 ) then
 5045.          goto 40
 5045.       else if ( i_sph_mode == 2 ) then
 5045.    30    continue
 5055.          if ( isolir == 1 ) then
 5056.             if ( nd_layer >= 0 ) then
 5057.                if ( nd_flux_profile > 0 ) then
 5056.                   $I_L5056_238 = 0
 5056.                   do
 5057.                      $I_L5057_206 = 0
 5057. !dir$ ivdep
 5057.                      do
 5058.                         flux_direct(1 + $I_L5057_206, $I_L5056_238) = weight_incr * flux_direct_incr(1 + $I_L5057_206, $I_L5056_238)
 5059.                         $I_L5057_206 = 1 + $I_L5057_206
 5057.                         if ( $I_L5057_206 >= nd_flux_profile ) exit
 5057.                      enddo
 5060.                      $I_L5056_238 = 1 + $I_L5056_238
 5059.                      if ( $I_L5056_238 >= 1 + nd_layer ) exit
 5059.                   enddo
 5059.                endif
 5059.             endif
 5061.             if ( l_blue_flux_surf /= .false. ) then
 5062.                if ( nd_flux_profile > 0 ) then
 5062.                   $I_L5062_208 = 0
 5062. !dir$ ivdep
 5062.                   do
 5063.                      flux_up_blue_surf(1 + $I_L5062_208) = weight_blue * flux_total_incr(1 + $I_L5062_208, 1 + 2 * n_layer)
 5065.                      flux_down_blue_surf(1 + $I_L5062_208) = weight_blue * flux_total_incr(1 + $I_L5062_208, 2 + 2 * n_layer)
 5070.                      flux_direct_blue_surf(1 + $I_L5062_208) = weight_blue * flux_direct_incr(1 + $I_L5062_208, n_layer)
 5067.                      $I_L5062_208 = 1 + $I_L5062_208
 5062.                      if ( $I_L5062_208 >= nd_flux_profile ) exit
 5062.                   enddo
 5062.                endif
 5062.             endif
 5062.          endif
 5076.          if ( nd_layer >= 0 ) then
 5077.             if ( nd_flux_profile > 0 ) then
 5076.                $I_L5076_240 = 0
 5076.                do
 5077.                   $I_L5077_210 = 0
 5077. !dir$ ivdep
 5077.                   do
 5078.                      flux_up(1 + $I_L5077_210, $I_L5076_240) = weight_incr * flux_total_incr(1 + $I_L5077_210, 1 + 2 * $I_L5076_240)
 5079.                      flux_down(1 + $I_L5077_210, $I_L5076_240) = weight_incr * flux_total_incr(1 + $I_L5077_210, 2 + 2 * $I_L5076_240)
 5080.                      $I_L5077_210 = 1 + $I_L5077_210
 5077.                      if ( $I_L5077_210 >= nd_flux_profile ) exit
 5077.                   enddo
 5081.                   $I_L5076_240 = 1 + $I_L5076_240
 5080.                   if ( $I_L5076_240 >= 1 + nd_layer ) exit
 5080.                enddo
 5080.             endif
 5080.          endif
 5083.          if ( l_clear /= .false. ) then
 5084.             if ( isolir == 1 ) then
 5085.                if ( nd_layer >= 0 ) then
 5086.                   if ( nd_flux_profile > 0 ) then
 5085.                      $I_L5085_242 = 0
 5085.                      do
 5086.                         $I_L5086_212 = 0
 5086. !dir$ ivdep
 5086.                         do
 5087.                            flux_direct_clear(1 + $I_L5086_212, $I_L5085_242) = weight_incr * flux_direct_incr_clear(1 + $I_L5086_212, $I_L5085_242)
 5089.                            $I_L5086_212 = 1 + $I_L5086_212
 5086.                            if ( $I_L5086_212 >= nd_flux_profile ) exit
 5086.                         enddo
 5090.                         $I_L5085_242 = 1 + $I_L5085_242
 5089.                         if ( $I_L5085_242 >= 1 + nd_layer ) exit
 5089.                      enddo
 5089.                   endif
 5089.                endif
 5089.             endif
 5092.             if ( nd_layer >= 0 ) then
 5093.                if ( nd_flux_profile > 0 ) then
 5092.                   $I_L5092_244 = 0
 5092.                   do
 5093.                      $I_L5093_214 = 0
 5093. !dir$ ivdep
 5093.                      do
 5094.                         flux_up_clear(1 + $I_L5093_214, $I_L5092_244) = weight_incr * flux_total_incr_clear(1 + $I_L5093_214, 1 + 2 * $I_L5092_244)
 5096.                         flux_down_clear(1 + $I_L5093_214, $I_L5092_244) = weight_incr * flux_total_incr_clear(1 + $I_L5093_214, 2 + 2 * $I_L5092_244)
 5098.                         $I_L5093_214 = 1 + $I_L5093_214
 5093.                         if ( $I_L5093_214 >= nd_flux_profile ) exit
 5093.                      enddo
 5099.                      $I_L5092_244 = 1 + $I_L5092_244
 5098.                      if ( $I_L5092_244 >= 1 + nd_layer ) exit
 5098.                   enddo
 5098.                endif
 5098.             endif
 5098.          endif
 5098.       else
 5098.    40    continue
 5102.          if ( i_angular_integration /= 3 ) then
 5102.             goto 50
 5102.          else if ( i_sph_mode == 1 ) then
 5106.             if ( nd_direction > 0 ) then
 5107.                if ( nd_viewing_level > 0 ) then
 5108.                   if ( nd_radiance_profile > 0 ) then
 5106.                      $I_L5106_264 = 0
 5106.                      do
 5107.                         $I_L5107_256 = 0
 5107.                         do
 5108.                            $I_L5108_228 = 0
 5108. !dir$ ivdep
 5108. !dir$ loop_info (automatic) cache_nt( radiance_incr )
 5108.                            do
 5109.                               radiance(1 + $I_L5108_228, 1 + $I_L5107_256, 1 + $I_L5106_264) = weight_incr * radiance_incr(1 + $I_L5108_228, 1 + $I_L5107_256, 1 + $I_L5106_264)
 5110.                               $I_L5108_228 = 1 + $I_L5108_228
 5108.                               if ( $I_L5108_228 >= nd_radiance_profile ) exit
 5108.                            enddo
 5111.                            $I_L5107_256 = 1 + $I_L5107_256
 5110.                            if ( $I_L5107_256 >= nd_viewing_level ) exit
 5110.                         enddo
 5112.                         $I_L5106_264 = 1 + $I_L5106_264
 5111.                         if ( $I_L5106_264 >= nd_direction ) exit
 5111.                      enddo
 5111.                   endif
 5111.                endif
 5111.             endif
 5114.             if ( isolir == 1 ) then
 5115.                if ( nd_layer >= 0 ) then
 5116.                   if ( nd_radiance_profile > 0 ) then
 5115.                      $I_L5115_258 = 0
 5115.                      do
 5116.                         $I_L5116_230 = 0
 5116. !dir$ ivdep
 5116.                         do
 5117.                            i_direct(1 + $I_L5116_230, $I_L5115_258) = weight_incr * i_direct_incr(1 + $I_L5116_230, $I_L5115_258)
 5118.                            $I_L5116_230 = 1 + $I_L5116_230
 5116.                            if ( $I_L5116_230 >= nd_radiance_profile ) exit
 5116.                         enddo
 5119.                         $I_L5115_258 = 1 + $I_L5115_258
 5118.                         if ( $I_L5115_258 >= 1 + nd_layer ) exit
 5118.                      enddo
 5118.                   endif
 5118.                endif
 5118.             endif
 5118.          else
 5118.    50       continue
 5122.             if ( i_angular_integration == 3 ) then
 5122.                if ( i_sph_mode == 3 ) then
 5125.                   if ( nd_viewing_level > 0 ) then
 5126.                      if ( nd_j_profile > 0 ) then
 5125.                         $I_L5125_236 = 0
 5125.                         do
 5126.                            $I_L5126_204 = 0
 5126. !dir$ ivdep
 5126.                            do
 5127.                               photolysis(1 + $I_L5126_204, 1 + $I_L5125_236) = weight_incr * photolysis_incr(1 + $I_L5126_204, 1 + $I_L5125_236)
 5128.                               $I_L5126_204 = 1 + $I_L5126_204
 5126.                               if ( $I_L5126_204 >= nd_j_profile ) exit
 5126.                            enddo
 5129.                            $I_L5125_236 = 1 + $I_L5125_236
 5128.                            if ( $I_L5125_236 >= nd_viewing_level ) exit
 5128.                         enddo
 5128.                      endif
 5128.                   endif
 5128.                endif
 5128.             endif
 5128.          endif
 5128.       endif
 5138.       return
 5138.       end
 5138.       
 5159.       
 5159.       subroutine augment_tiled_radiance( ierr, n_point_tile, n_tile, list_tile, i_angular_integration, isolir, l_initial, weight_incr, l_blue_flux_surf, weight_blue_incr, rho_alb, flux_up_tile, flux_up_blue_tile, flux_direct_incr, flux_down_incr, planck_flux_tile, planck_flux_air, nd_flux_profile, nd_point_tile, nd_tile, nd_brdf_basis_fnc )
 5159.       t$132 = nd_point_tile
 5210.       t$1331 = _zla( 0, nd_point_tile )
 5159.       t$133 = nd_brdf_basis_fnc
 5159.       t$134 = nd_tile
 5159.       t$1332 = _zla( 0, nd_point_tile )
 5231.       t$1333 = _zla( 0, nd_brdf_basis_fnc )
 5159.       t$1334 = _zla( 0, nd_point_tile ) * _zla( 0, nd_brdf_basis_fnc )
 5231.       t$1335 = _zla( 0, nd_tile )
 5159.       t$1336 = _zla( 0, nd_point_tile ) * _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_tile )
 5159.       t$1337 = _zla( 0, nd_point_tile ) * _zla( 0, nd_tile )
 5159.       t$135 = nd_flux_profile
 5236.       t$1338 = _zla( 0, nd_flux_profile )
 5269.       if ( l_initial == .false. ) then
 5274.          if ( i_angular_integration == 1 .orelse. i_angular_integration == 2 ) then
 5278.             if ( isolir == 1 ) then
 5280.                if ( n_tile > 0 ) then
 5281.                   if ( n_point_tile > 0 ) then
 5280.                      $I_L5280_92 = 0
 5280.                      if ( n_tile >= 4 ) then
 5280.                         $I_L5280_114 = 0
 5280. !dir$ blocking_size( 1, 1 )
 5280.                         do
 5281.                            $I_L5281_80 = 0
 5281. !dir$ ivdep
 5281. !dir$ blocking_size( 256, 256 )
 5281.                            do
 5282.                               $l_S2 = list_tile(1 + $I_L5281_80)
 5283.                               flux_up_tile(1 + $I_L5281_80, 1 + 4 * $I_L5280_114) = flux_up_tile(1 + $I_L5281_80, 1 + 4 * $I_L5280_114) + weight_incr * ( flux_direct_incr($l_S2) * ( rho_alb(1 + $I_L5281_80, 2, 1 + 4 * $I_L5280_114) + -rho_alb(1 + $I_L5281_80, 1, 1 + 4 * $I_L5280_114) ) + flux_down_incr($l_S2) * rho_alb(1 + $I_L5281_80, 1, 1 + 4 * $I_L5280_114) )
 5282.                               $l_S2 = list_tile(1 + $I_L5281_80)
 5283.                               flux_up_tile(1 + $I_L5281_80, 2 + 4 * $I_L5280_114) = flux_up_tile(1 + $I_L5281_80, 2 + 4 * $I_L5280_114) + weight_incr * ( flux_down_incr($l_S2) * rho_alb(1 + $I_L5281_80, 1, 2 + 4 * $I_L5280_114) + flux_direct_incr($l_S2) * ( rho_alb(1 + $I_L5281_80, 2, 2 + 4 * $I_L5280_114) + -rho_alb(1 + $I_L5281_80, 1, 2 + 4 * $I_L5280_114) ) )
 5282.                               $l_S2 = list_tile(1 + $I_L5281_80)
 5283.                               flux_up_tile(1 + $I_L5281_80, 3 + 4 * $I_L5280_114) = flux_up_tile(1 + $I_L5281_80, 3 + 4 * $I_L5280_114) + weight_incr * ( flux_down_incr($l_S2) * rho_alb(1 + $I_L5281_80, 1, 3 + 4 * $I_L5280_114) + flux_direct_incr($l_S2) * ( rho_alb(1 + $I_L5281_80, 2, 3 + 4 * $I_L5280_114) + -rho_alb(1 + $I_L5281_80, 1, 3 + 4 * $I_L5280_114) ) )
 5282.                               $l_S2 = list_tile(1 + $I_L5281_80)
 5283.                               flux_up_tile(1 + $I_L5281_80, 4 + 4 * $I_L5280_114) = flux_up_tile(1 + $I_L5281_80, 4 + 4 * $I_L5280_114) + weight_incr * ( flux_down_incr($l_S2) * rho_alb(1 + $I_L5281_80, 1, 4 + 4 * $I_L5280_114) + flux_direct_incr($l_S2) * ( rho_alb(1 + $I_L5281_80, 2, 4 + 4 * $I_L5280_114) + -rho_alb(1 + $I_L5281_80, 1, 4 + 4 * $I_L5280_114) ) )
 5289.                               $I_L5281_80 = 1 + $I_L5281_80
 5281.                               if ( $I_L5281_80 >= n_point_tile ) exit
 5281.                            enddo
 5290.                            $I_L5280_114 = 1 + $I_L5280_114
 5289.                            if ( $I_L5280_114 >= _rsh( n_tile, 2 ) ) exit
 5289.                         enddo
 5290.                         $I_L5280_92 = and( 0xfffffffffffffffcUL, n_tile )
 5290.                      endif
 5280.                      if ( $I_L5280_92 < n_tile ) then
 5280.                         $I_L5280_108 = 0
 5280. !dir$ blocking_size( 1, 1 )
 5280.                         do
 5281.                            $I_L5281_80 = 0
 5281. !dir$ ivdep
 5281. !dir$ blocking_size( 256, 256 )
 5281.                            do
 5282.                               $l_S2 = list_tile(1 + $I_L5281_80)
 5283.                               flux_up_tile(1 + $I_L5281_80, 1 + $I_L5280_92 + $I_L5280_108) = flux_up_tile(1 + $I_L5281_80, 1 + $I_L5280_92 + $I_L5280_108) + weight_incr * ( flux_down_incr($l_S2) * rho_alb(1 + $I_L5281_80, 1, 1 + $I_L5280_92 + $I_L5280_108) + flux_direct_incr($l_S2) * ( rho_alb(1 + $I_L5281_80, 2, 1 + $I_L5280_92 + $I_L5280_108) + -rho_alb(1 + $I_L5281_80, 1, 1 + $I_L5280_92 + $I_L5280_108) ) )
 5289.                               $I_L5281_80 = 1 + $I_L5281_80
 5281.                               if ( $I_L5281_80 >= n_point_tile ) exit
 5281.                            enddo
 5290.                            $I_L5280_108 = 1 + $I_L5280_108
 5289.                            if ( $I_L5280_108 >= n_tile + -$I_L5280_92 ) exit
 5289.                         enddo
 5289.                      endif
 5289.                   endif
 5289.                endif
 5292.                if ( l_blue_flux_surf /= .false. ) then
 5293.                   if ( n_tile > 0 ) then
 5294.                      if ( n_point_tile > 0 ) then
 5293.                         $I_L5293_94 = 0
 5293.                         if ( n_tile >= 4 ) then
 5293.                            $I_L5293_116 = 0
 5293. !dir$ blocking_size( 1, 1 )
 5293.                            do
 5294.                               $I_L5294_82 = 0
 5294. !dir$ ivdep
 5294. !dir$ blocking_size( 256, 256 )
 5294.                               do
 5295.                                  $l_S5 = list_tile(1 + $I_L5294_82)
 5296.                                  flux_up_blue_tile(1 + $I_L5294_82, 1 + 4 * $I_L5293_116) = flux_up_blue_tile(1 + $I_L5294_82, 1 + 4 * $I_L5293_116) + weight_blue_incr * ( flux_direct_incr($l_S5) * ( rho_alb(1 + $I_L5294_82, 2, 1 + 4 * $I_L5293_116) + -rho_alb(1 + $I_L5294_82, 1, 1 + 4 * $I_L5293_116) ) + flux_down_incr($l_S5) * rho_alb(1 + $I_L5294_82, 1, 1 + 4 * $I_L5293_116) )
 5295.                                  $l_S5 = list_tile(1 + $I_L5294_82)
 5296.                                  flux_up_blue_tile(1 + $I_L5294_82, 2 + 4 * $I_L5293_116) = flux_up_blue_tile(1 + $I_L5294_82, 2 + 4 * $I_L5293_116) + weight_blue_incr * ( flux_down_incr($l_S5) * rho_alb(1 + $I_L5294_82, 1, 2 + 4 * $I_L5293_116) + flux_direct_incr($l_S5) * ( rho_alb(1 + $I_L5294_82, 2, 2 + 4 * $I_L5293_116) + -rho_alb(1 + $I_L5294_82, 1, 2 + 4 * $I_L5293_116) ) )
 5295.                                  $l_S5 = list_tile(1 + $I_L5294_82)
 5296.                                  flux_up_blue_tile(1 + $I_L5294_82, 3 + 4 * $I_L5293_116) = flux_up_blue_tile(1 + $I_L5294_82, 3 + 4 * $I_L5293_116) + weight_blue_incr * ( flux_down_incr($l_S5) * rho_alb(1 + $I_L5294_82, 1, 3 + 4 * $I_L5293_116) + flux_direct_incr($l_S5) * ( rho_alb(1 + $I_L5294_82, 2, 3 + 4 * $I_L5293_116) + -rho_alb(1 + $I_L5294_82, 1, 3 + 4 * $I_L5293_116) ) )
 5295.                                  $l_S5 = list_tile(1 + $I_L5294_82)
 5296.                                  flux_up_blue_tile(1 + $I_L5294_82, 4 + 4 * $I_L5293_116) = flux_up_blue_tile(1 + $I_L5294_82, 4 + 4 * $I_L5293_116) + weight_blue_incr * ( flux_down_incr($l_S5) * rho_alb(1 + $I_L5294_82, 1, 4 + 4 * $I_L5293_116) + flux_direct_incr($l_S5) * ( rho_alb(1 + $I_L5294_82, 2, 4 + 4 * $I_L5293_116) + -rho_alb(1 + $I_L5294_82, 1, 4 + 4 * $I_L5293_116) ) )
 5303.                                  $I_L5294_82 = 1 + $I_L5294_82
 5294.                                  if ( $I_L5294_82 >= n_point_tile ) exit
 5294.                               enddo
 5304.                               $I_L5293_116 = 1 + $I_L5293_116
 5303.                               if ( $I_L5293_116 >= _rsh( n_tile, 2 ) ) exit
 5303.                            enddo
 5304.                            $I_L5293_94 = and( 0xfffffffffffffffcUL, n_tile )
 5304.                         endif
 5293.                         if ( $I_L5293_94 < n_tile ) then
 5293.                            $I_L5293_111 = 0
 5293. !dir$ blocking_size( 1, 1 )
 5293.                            do
 5294.                               $I_L5294_82 = 0
 5294. !dir$ ivdep
 5294. !dir$ blocking_size( 256, 256 )
 5294.                               do
 5295.                                  $l_S5 = list_tile(1 + $I_L5294_82)
 5296.                                  flux_up_blue_tile(1 + $I_L5294_82, 1 + $I_L5293_94 + $I_L5293_111) = flux_up_blue_tile(1 + $I_L5294_82, 1 + $I_L5293_94 + $I_L5293_111) + weight_blue_incr * ( flux_down_incr($l_S5) * rho_alb(1 + $I_L5294_82, 1, 1 + $I_L5293_94 + $I_L5293_111) + flux_direct_incr($l_S5) * ( rho_alb(1 + $I_L5294_82, 2, 1 + $I_L5293_94 + $I_L5293_111) + -rho_alb(1 + $I_L5294_82, 1, 1 + $I_L5293_94 + $I_L5293_111) ) )
 5303.                                  $I_L5294_82 = 1 + $I_L5294_82
 5294.                                  if ( $I_L5294_82 >= n_point_tile ) exit
 5294.                               enddo
 5304.                               $I_L5293_111 = 1 + $I_L5293_111
 5303.                               if ( $I_L5293_111 >= n_tile + -$I_L5293_94 ) exit
 5303.                            enddo
 5303.                         endif
 5303.                      endif
 5303.                   endif
 5303.                endif
 5307.             else if ( isolir == 2 ) then
 5309.                if ( n_tile > 0 ) then
 5310.                   if ( n_point_tile > 0 ) then
 5309.                      $I_L5309_90 = 0
 5309.                      if ( n_tile >= 4 ) then
 5309.                         $I_L5309_118 = 0
 5309. !dir$ blocking_size( 1, 1 )
 5309.                         do
 5310.                            $I_L5310_78 = 0
 5310. !dir$ ivdep
 5310. !dir$ blocking_size( 256, 256 )
 5310.                            do
 5311.                               $l_S8 = list_tile(1 + $I_L5310_78)
 5312.                               flux_up_tile(1 + $I_L5310_78, 1 + 4 * $I_L5309_118) = flux_up_tile(1 + $I_L5310_78, 1 + 4 * $I_L5309_118) + weight_incr * ( planck_flux_tile(1 + $I_L5310_78, 1 + 4 * $I_L5309_118) + rho_alb(1 + $I_L5310_78, 1, 1 + 4 * $I_L5309_118) * ( planck_flux_air($l_S8) + flux_down_incr($l_S8) + -planck_flux_tile(1 + $I_L5310_78, 1 + 4 * $I_L5309_118) ) )
 5311.                               $l_S8 = list_tile(1 + $I_L5310_78)
 5312.                               flux_up_tile(1 + $I_L5310_78, 2 + 4 * $I_L5309_118) = flux_up_tile(1 + $I_L5310_78, 2 + 4 * $I_L5309_118) + weight_incr * ( planck_flux_tile(1 + $I_L5310_78, 2 + 4 * $I_L5309_118) + rho_alb(1 + $I_L5310_78, 1, 2 + 4 * $I_L5309_118) * ( planck_flux_air($l_S8) + flux_down_incr($l_S8) + -planck_flux_tile(1 + $I_L5310_78, 2 + 4 * $I_L5309_118) ) )
 5311.                               $l_S8 = list_tile(1 + $I_L5310_78)
 5312.                               flux_up_tile(1 + $I_L5310_78, 3 + 4 * $I_L5309_118) = flux_up_tile(1 + $I_L5310_78, 3 + 4 * $I_L5309_118) + weight_incr * ( planck_flux_tile(1 + $I_L5310_78, 3 + 4 * $I_L5309_118) + rho_alb(1 + $I_L5310_78, 1, 3 + 4 * $I_L5309_118) * ( planck_flux_air($l_S8) + flux_down_incr($l_S8) + -planck_flux_tile(1 + $I_L5310_78, 3 + 4 * $I_L5309_118) ) )
 5311.                               $l_S8 = list_tile(1 + $I_L5310_78)
 5312.                               flux_up_tile(1 + $I_L5310_78, 4 + 4 * $I_L5309_118) = flux_up_tile(1 + $I_L5310_78, 4 + 4 * $I_L5309_118) + weight_incr * ( planck_flux_tile(1 + $I_L5310_78, 4 + 4 * $I_L5309_118) + rho_alb(1 + $I_L5310_78, 1, 4 + 4 * $I_L5309_118) * ( planck_flux_air($l_S8) + flux_down_incr($l_S8) + -planck_flux_tile(1 + $I_L5310_78, 4 + 4 * $I_L5309_118) ) )
 5317.                               $I_L5310_78 = 1 + $I_L5310_78
 5310.                               if ( $I_L5310_78 >= n_point_tile ) exit
 5310.                            enddo
 5318.                            $I_L5309_118 = 1 + $I_L5309_118
 5317.                            if ( $I_L5309_118 >= _rsh( n_tile, 2 ) ) exit
 5317.                         enddo
 5318.                         $I_L5309_90 = and( 0xfffffffffffffffcUL, n_tile )
 5318.                      endif
 5309.                      if ( $I_L5309_90 < n_tile ) then
 5309.                         $I_L5309_105 = 0
 5309. !dir$ blocking_size( 1, 1 )
 5309.                         do
 5310.                            $I_L5310_78 = 0
 5310. !dir$ ivdep
 5310. !dir$ blocking_size( 256, 256 )
 5310.                            do
 5311.                               $l_S8 = list_tile(1 + $I_L5310_78)
 5312.                               flux_up_tile(1 + $I_L5310_78, 1 + $I_L5309_90 + $I_L5309_105) = flux_up_tile(1 + $I_L5310_78, 1 + $I_L5309_90 + $I_L5309_105) + weight_incr * ( planck_flux_tile(1 + $I_L5310_78, 1 + $I_L5309_90 + $I_L5309_105) + rho_alb(1 + $I_L5310_78, 1, 1 + $I_L5309_90 + $I_L5309_105) * ( planck_flux_air($l_S8) + flux_down_incr($l_S8) + -planck_flux_tile(1 + $I_L5310_78, 1 + $I_L5309_90 + $I_L5309_105) ) )
 5317.                               $I_L5310_78 = 1 + $I_L5310_78
 5310.                               if ( $I_L5310_78 >= n_point_tile ) exit
 5310.                            enddo
 5318.                            $I_L5309_105 = 1 + $I_L5309_105
 5317.                            if ( $I_L5309_105 >= n_tile + -$I_L5309_90 ) exit
 5317.                         enddo
 5317.                      endif
 5317.                   endif
 5317.                endif
 5317.             endif
 5317.          else
 5321.             if ( i_angular_integration == 3 ) then
 5323.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$137,  _substr(t$136,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Tiled surfaces have not yet been ', 0x800600000000L ), _iotype( 'implemented with the spherical harmonic solver.', 0x800600000000L ) ) )
 5326.                ierr = 1
 5326.             endif
 5326.          endif
 5331.       else if ( i_angular_integration == 1 ) then
 5331.          goto 10
 5331.          goto 20
 5331.       else if ( i_angular_integration == 2 ) then
 5331.    10    continue
 5339.          if ( isolir == 1 ) then
 5340.             if ( n_tile > 0 ) then
 5341.                if ( n_point_tile > 0 ) then
 5340.                   $I_L5340_86 = 0
 5340.                   if ( n_tile >= 4 ) then
 5340.                      $I_L5340_120 = 0
 5340. !dir$ blocking_size( 1, 1 )
 5340.                      do
 5341.                         $I_L5341_74 = 0
 5341. !dir$ ivdep
 5341. !dir$ blocking_size( 256, 256 )
 5341.                         do
 5342.                            $l_S11 = list_tile(1 + $I_L5341_74)
 5343.                            flux_up_tile(1 + $I_L5341_74, 1 + 4 * $I_L5340_120) = weight_incr * ( flux_direct_incr($l_S11) * ( rho_alb(1 + $I_L5341_74, 2, 1 + 4 * $I_L5340_120) + -rho_alb(1 + $I_L5341_74, 1, 1 + 4 * $I_L5340_120) ) + flux_down_incr($l_S11) * rho_alb(1 + $I_L5341_74, 1, 1 + 4 * $I_L5340_120) )
 5342.                            $l_S11 = list_tile(1 + $I_L5341_74)
 5343.                            flux_up_tile(1 + $I_L5341_74, 2 + 4 * $I_L5340_120) = weight_incr * ( flux_down_incr($l_S11) * rho_alb(1 + $I_L5341_74, 1, 2 + 4 * $I_L5340_120) + flux_direct_incr($l_S11) * ( rho_alb(1 + $I_L5341_74, 2, 2 + 4 * $I_L5340_120) + -rho_alb(1 + $I_L5341_74, 1, 2 + 4 * $I_L5340_120) ) )
 5342.                            $l_S11 = list_tile(1 + $I_L5341_74)
 5343.                            flux_up_tile(1 + $I_L5341_74, 3 + 4 * $I_L5340_120) = weight_incr * ( flux_down_incr($l_S11) * rho_alb(1 + $I_L5341_74, 1, 3 + 4 * $I_L5340_120) + flux_direct_incr($l_S11) * ( rho_alb(1 + $I_L5341_74, 2, 3 + 4 * $I_L5340_120) + -rho_alb(1 + $I_L5341_74, 1, 3 + 4 * $I_L5340_120) ) )
 5342.                            $l_S11 = list_tile(1 + $I_L5341_74)
 5343.                            flux_up_tile(1 + $I_L5341_74, 4 + 4 * $I_L5340_120) = weight_incr * ( flux_down_incr($l_S11) * rho_alb(1 + $I_L5341_74, 1, 4 + 4 * $I_L5340_120) + flux_direct_incr($l_S11) * ( rho_alb(1 + $I_L5341_74, 2, 4 + 4 * $I_L5340_120) + -rho_alb(1 + $I_L5341_74, 1, 4 + 4 * $I_L5340_120) ) )
 5348.                            $I_L5341_74 = 1 + $I_L5341_74
 5341.                            if ( $I_L5341_74 >= n_point_tile ) exit
 5341.                         enddo
 5349.                         $I_L5340_120 = 1 + $I_L5340_120
 5348.                         if ( $I_L5340_120 >= _rsh( n_tile, 2 ) ) exit
 5348.                      enddo
 5349.                      $I_L5340_86 = and( 0xfffffffffffffffcUL, n_tile )
 5349.                   endif
 5340.                   if ( $I_L5340_86 < n_tile ) then
 5340.                      $I_L5340_99 = 0
 5340. !dir$ blocking_size( 1, 1 )
 5340.                      do
 5341.                         $I_L5341_74 = 0
 5341. !dir$ ivdep
 5341. !dir$ blocking_size( 256, 256 )
 5341.                         do
 5342.                            $l_S11 = list_tile(1 + $I_L5341_74)
 5343.                            flux_up_tile(1 + $I_L5341_74, 1 + $I_L5340_86 + $I_L5340_99) = weight_incr * ( flux_down_incr($l_S11) * rho_alb(1 + $I_L5341_74, 1, 1 + $I_L5340_86 + $I_L5340_99) + flux_direct_incr($l_S11) * ( rho_alb(1 + $I_L5341_74, 2, 1 + $I_L5340_86 + $I_L5340_99) + -rho_alb(1 + $I_L5341_74, 1, 1 + $I_L5340_86 + $I_L5340_99) ) )
 5348.                            $I_L5341_74 = 1 + $I_L5341_74
 5341.                            if ( $I_L5341_74 >= n_point_tile ) exit
 5341.                         enddo
 5349.                         $I_L5340_99 = 1 + $I_L5340_99
 5348.                         if ( $I_L5340_99 >= n_tile + -$I_L5340_86 ) exit
 5348.                      enddo
 5348.                   endif
 5348.                endif
 5348.             endif
 5351.             if ( l_blue_flux_surf /= .false. ) then
 5352.                if ( n_tile > 0 ) then
 5353.                   if ( n_point_tile > 0 ) then
 5352.                      $I_L5352_88 = 0
 5352.                      if ( n_tile >= 4 ) then
 5352.                         $I_L5352_122 = 0
 5352. !dir$ blocking_size( 1, 1 )
 5352.                         do
 5353.                            $I_L5353_76 = 0
 5353. !dir$ ivdep
 5353. !dir$ blocking_size( 256, 256 )
 5353.                            do
 5354.                               $l_S14 = list_tile(1 + $I_L5353_76)
 5355.                               flux_up_blue_tile(1 + $I_L5353_76, 1 + 4 * $I_L5352_122) = weight_blue_incr * ( flux_direct_incr($l_S14) * ( rho_alb(1 + $I_L5353_76, 2, 1 + 4 * $I_L5352_122) + -rho_alb(1 + $I_L5353_76, 1, 1 + 4 * $I_L5352_122) ) + flux_down_incr($l_S14) * rho_alb(1 + $I_L5353_76, 1, 1 + 4 * $I_L5352_122) )
 5354.                               $l_S14 = list_tile(1 + $I_L5353_76)
 5355.                               flux_up_blue_tile(1 + $I_L5353_76, 2 + 4 * $I_L5352_122) = weight_blue_incr * ( flux_down_incr($l_S14) * rho_alb(1 + $I_L5353_76, 1, 2 + 4 * $I_L5352_122) + flux_direct_incr($l_S14) * ( rho_alb(1 + $I_L5353_76, 2, 2 + 4 * $I_L5352_122) + -rho_alb(1 + $I_L5353_76, 1, 2 + 4 * $I_L5352_122) ) )
 5354.                               $l_S14 = list_tile(1 + $I_L5353_76)
 5355.                               flux_up_blue_tile(1 + $I_L5353_76, 3 + 4 * $I_L5352_122) = weight_blue_incr * ( flux_down_incr($l_S14) * rho_alb(1 + $I_L5353_76, 1, 3 + 4 * $I_L5352_122) + flux_direct_incr($l_S14) * ( rho_alb(1 + $I_L5353_76, 2, 3 + 4 * $I_L5352_122) + -rho_alb(1 + $I_L5353_76, 1, 3 + 4 * $I_L5352_122) ) )
 5354.                               $l_S14 = list_tile(1 + $I_L5353_76)
 5355.                               flux_up_blue_tile(1 + $I_L5353_76, 4 + 4 * $I_L5352_122) = weight_blue_incr * ( flux_down_incr($l_S14) * rho_alb(1 + $I_L5353_76, 1, 4 + 4 * $I_L5352_122) + flux_direct_incr($l_S14) * ( rho_alb(1 + $I_L5353_76, 2, 4 + 4 * $I_L5352_122) + -rho_alb(1 + $I_L5353_76, 1, 4 + 4 * $I_L5352_122) ) )
 5361.                               $I_L5353_76 = 1 + $I_L5353_76
 5353.                               if ( $I_L5353_76 >= n_point_tile ) exit
 5353.                            enddo
 5362.                            $I_L5352_122 = 1 + $I_L5352_122
 5361.                            if ( $I_L5352_122 >= _rsh( n_tile, 2 ) ) exit
 5361.                         enddo
 5362.                         $I_L5352_88 = and( 0xfffffffffffffffcUL, n_tile )
 5362.                      endif
 5352.                      if ( $I_L5352_88 < n_tile ) then
 5352.                         $I_L5352_102 = 0
 5352. !dir$ blocking_size( 1, 1 )
 5352.                         do
 5353.                            $I_L5353_76 = 0
 5353. !dir$ ivdep
 5353. !dir$ blocking_size( 256, 256 )
 5353.                            do
 5354.                               $l_S14 = list_tile(1 + $I_L5353_76)
 5355.                               flux_up_blue_tile(1 + $I_L5353_76, 1 + $I_L5352_88 + $I_L5352_102) = weight_blue_incr * ( flux_down_incr($l_S14) * rho_alb(1 + $I_L5353_76, 1, 1 + $I_L5352_88 + $I_L5352_102) + flux_direct_incr($l_S14) * ( rho_alb(1 + $I_L5353_76, 2, 1 + $I_L5352_88 + $I_L5352_102) + -rho_alb(1 + $I_L5353_76, 1, 1 + $I_L5352_88 + $I_L5352_102) ) )
 5361.                               $I_L5353_76 = 1 + $I_L5353_76
 5353.                               if ( $I_L5353_76 >= n_point_tile ) exit
 5353.                            enddo
 5362.                            $I_L5352_102 = 1 + $I_L5352_102
 5361.                            if ( $I_L5352_102 >= n_tile + -$I_L5352_88 ) exit
 5361.                         enddo
 5361.                      endif
 5361.                   endif
 5361.                endif
 5361.             endif
 5365.          else if ( isolir == 2 ) then
 5367.             if ( n_tile > 0 ) then
 5368.                if ( n_point_tile > 0 ) then
 5367.                   $I_L5367_84 = 0
 5367.                   if ( n_tile >= 4 ) then
 5367.                      $I_L5367_124 = 0
 5367. !dir$ blocking_size( 1, 1 )
 5367.                      do
 5368.                         $I_L5368_72 = 0
 5368. !dir$ ivdep
 5368. !dir$ blocking_size( 256, 256 )
 5368.                         do
 5369.                            $l_S17 = list_tile(1 + $I_L5368_72)
 5370.                            flux_up_tile(1 + $I_L5368_72, 1 + 4 * $I_L5367_124) = weight_incr * ( planck_flux_tile(1 + $I_L5368_72, 1 + 4 * $I_L5367_124) + rho_alb(1 + $I_L5368_72, 1, 1 + 4 * $I_L5367_124) * ( planck_flux_air($l_S17) + flux_down_incr($l_S17) + -planck_flux_tile(1 + $I_L5368_72, 1 + 4 * $I_L5367_124) ) )
 5369.                            $l_S17 = list_tile(1 + $I_L5368_72)
 5370.                            flux_up_tile(1 + $I_L5368_72, 2 + 4 * $I_L5367_124) = weight_incr * ( planck_flux_tile(1 + $I_L5368_72, 2 + 4 * $I_L5367_124) + rho_alb(1 + $I_L5368_72, 1, 2 + 4 * $I_L5367_124) * ( planck_flux_air($l_S17) + flux_down_incr($l_S17) + -planck_flux_tile(1 + $I_L5368_72, 2 + 4 * $I_L5367_124) ) )
 5369.                            $l_S17 = list_tile(1 + $I_L5368_72)
 5370.                            flux_up_tile(1 + $I_L5368_72, 3 + 4 * $I_L5367_124) = weight_incr * ( planck_flux_tile(1 + $I_L5368_72, 3 + 4 * $I_L5367_124) + rho_alb(1 + $I_L5368_72, 1, 3 + 4 * $I_L5367_124) * ( planck_flux_air($l_S17) + flux_down_incr($l_S17) + -planck_flux_tile(1 + $I_L5368_72, 3 + 4 * $I_L5367_124) ) )
 5369.                            $l_S17 = list_tile(1 + $I_L5368_72)
 5370.                            flux_up_tile(1 + $I_L5368_72, 4 + 4 * $I_L5367_124) = weight_incr * ( planck_flux_tile(1 + $I_L5368_72, 4 + 4 * $I_L5367_124) + rho_alb(1 + $I_L5368_72, 1, 4 + 4 * $I_L5367_124) * ( planck_flux_air($l_S17) + flux_down_incr($l_S17) + -planck_flux_tile(1 + $I_L5368_72, 4 + 4 * $I_L5367_124) ) )
 5375.                            $I_L5368_72 = 1 + $I_L5368_72
 5368.                            if ( $I_L5368_72 >= n_point_tile ) exit
 5368.                         enddo
 5376.                         $I_L5367_124 = 1 + $I_L5367_124
 5375.                         if ( $I_L5367_124 >= _rsh( n_tile, 2 ) ) exit
 5375.                      enddo
 5376.                      $I_L5367_84 = and( 0xfffffffffffffffcUL, n_tile )
 5376.                   endif
 5367.                   if ( $I_L5367_84 < n_tile ) then
 5367.                      $I_L5367_96 = 0
 5367. !dir$ blocking_size( 1, 1 )
 5367.                      do
 5368.                         $I_L5368_72 = 0
 5368. !dir$ ivdep
 5368. !dir$ blocking_size( 256, 256 )
 5368.                         do
 5369.                            $l_S17 = list_tile(1 + $I_L5368_72)
 5370.                            flux_up_tile(1 + $I_L5368_72, 1 + $I_L5367_84 + $I_L5367_96) = weight_incr * ( planck_flux_tile(1 + $I_L5368_72, 1 + $I_L5367_84 + $I_L5367_96) + rho_alb(1 + $I_L5368_72, 1, 1 + $I_L5367_84 + $I_L5367_96) * ( planck_flux_air($l_S17) + flux_down_incr($l_S17) + -planck_flux_tile(1 + $I_L5368_72, 1 + $I_L5367_84 + $I_L5367_96) ) )
 5375.                            $I_L5368_72 = 1 + $I_L5368_72
 5368.                            if ( $I_L5368_72 >= n_point_tile ) exit
 5368.                         enddo
 5376.                         $I_L5367_96 = 1 + $I_L5367_96
 5375.                         if ( $I_L5367_96 >= n_tile + -$I_L5367_84 ) exit
 5375.                      enddo
 5375.                   endif
 5375.                endif
 5375.             endif
 5375.          endif
 5375.          goto 20
 5375.       else if ( i_angular_integration == 3 ) then
 5382.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$139,  _substr(t$138,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Tiled surfaces have not yet been ', 0x800600000000L ), _iotype( 'implemented with the spherical harmonic solver.', 0x800600000000L ) ) )
 5385.          ierr = 1
 5385.       else
 5385.    20    continue
 5391.          l_initial = .false.
 5391.       endif
 5398.       return
 5398.       end
 5398.       
 5418.       
 5418.       subroutine band_solver( n_matrix, n_equation, iu, il, a, b, x, rho, nd_matrix, nd_diagonal, nd_equation )
 5418.       t$140 = nd_matrix
 5418.       t$141 = nd_diagonal
 5418.       t$142 = nd_equation
 5455.       t$1339 = _zla( 0, nd_matrix )
 5418.       t$1340 = _zla( 0, nd_matrix )
 5455.       t$1341 = _zla( 0, nd_diagonal )
 5418.       t$1342 = _zla( 0, nd_matrix ) * _zla( 0, nd_diagonal )
 5455.       t$1343 = _zla( 0, nd_equation )
 5418.       t$1344 = _zla( 0, nd_matrix ) * _zla( 0, nd_diagonal ) * _zla( 0, nd_equation )
 5418.       t$1345 = _zla( 0, nd_matrix ) * _zla( 0, nd_equation )
 5482.       if ( 2 + -n_equation <= 0 ) then
 5482.          $I_L5482_108 = 0
 5482.          do
 5483.             if ( min( iu, ( -1 + n_equation + -$I_L5482_108 ) ) > 0 ) then
 5483.                $I_L5483_104 = 0
 5483.                do
 5484.                   if ( n_matrix > 0 ) then
 5484.                      $I_L5484_84 = 0
 5484. !dir$ ivdep
 5484.                      do
 5485.                         $rho_WR0_R0 = ( a(1 + $I_L5484_84, iu + -$I_L5483_104, -1 + n_equation + -$I_L5483_104 + -$I_L5482_108) * 1.0/a(1 + $I_L5484_84, 1 + iu, n_equation + -$I_L5482_108) )
 5485.                         rho(1 + $I_L5484_84) = $rho_WR0_R0
 5486.                         b(1 + $I_L5484_84, -1 + n_equation + -$I_L5483_104 + -$I_L5482_108) = b(1 + $I_L5484_84, -1 + n_equation + -$I_L5483_104 + -$I_L5482_108) + -( $rho_WR0_R0 * b(1 + $I_L5484_84, n_equation + -$I_L5482_108) )
 5487.                         $I_L5484_84 = 1 + $I_L5484_84
 5484.                         if ( $I_L5484_84 >= n_matrix ) exit
 5484.                      enddo
 5484.                   endif
 5488.                   if ( min( il, ( -1 + n_equation + -$I_L5482_108 ) ) > 0 ) then
 5489.                      if ( n_matrix > 0 ) then
 5488.                         $SI_L5488_98_G1 = 0
 5488.                         do
 5489.                            $SI_L5489_86_G4 = 0
 5489.                            do
 5488.                               $I_L5488_116 = 0
 5488. !dir$ shortloop16
 5488. !dir$ blocking_size( 2, 2 )
 5488.                               do
 5489.                                  $I_L5489_110 = 0
 5489. !dir$ ivdep
 5489. !dir$ blocking_size( 256, 256 )
 5489.                                  do
 5490.                                     a(1 + $I_L5489_110 + 256 * $SI_L5489_86_G4, 1 + iu + $I_L5488_116 + -$I_L5483_104 + 2 * $SI_L5488_98_G1, -1 + n_equation + -$I_L5483_104 + -$I_L5482_108) = a(1 + $I_L5489_110 + 256 * $SI_L5489_86_G4, 1 + iu + $I_L5488_116 + -$I_L5483_104 + 2 * $SI_L5488_98_G1, -1 + n_equation + -$I_L5483_104 + -$I_L5482_108) + -( rho(1 + $I_L5489_110 + 256 * $SI_L5489_86_G4) * a(1 + $I_L5489_110 + 256 * $SI_L5489_86_G4, 2 + iu + $I_L5488_116 + 2 * $SI_L5488_98_G1, n_equation + -$I_L5482_108) )
 5489.                                     $I_L5489_110 = 1 + $I_L5489_110
 5489.                                     if ( $I_L5489_110 >= min( n_matrix, 256 + 256 * $SI_L5489_86_G4 ) + -256 * $SI_L5489_86_G4 ) exit
 5489.                                  enddo
 5488.                                  $I_L5488_116 = 1 + $I_L5488_116
 5488.                                  if ( $I_L5488_116 >= min( ( min( il, ( -1 + n_equation + -$I_L5482_108 ) ) ), 2 + 2 * $SI_L5488_98_G1 ) + -2 * $SI_L5488_98_G1 ) exit
 5488.                               enddo
 5489.                               $SI_L5489_86_G4 = 1 + $SI_L5489_86_G4
 5492.                               if ( $SI_L5489_86_G4 >= _rsh( 255 + n_matrix, 8 ) ) exit
 5492.                            enddo
 5488.                            $SI_L5488_98_G1 = 1 + $SI_L5488_98_G1
 5488.                            if ( $SI_L5488_98_G1 >= _rsh( 1 + min( il, ( -1 + n_equation + -$I_L5482_108 ) ), 1 ) ) exit
 5488.                         enddo
 5488.                      endif
 5488.                   endif
 5494.                   $I_L5483_104 = 1 + $I_L5483_104
 5493.                   if ( $I_L5483_104 >= ( min( iu, ( -1 + n_equation + -$I_L5482_108 ) ) ) ) exit
 5493.                enddo
 5493.             endif
 5495.             $I_L5482_108 = 1 + $I_L5482_108
 5494.             if ( $I_L5482_108 >= -1 + n_equation ) exit
 5494.          enddo
 5494.       endif
 5499.       if ( iu /= 2 ) then
 5495.          goto 10
 5495.       else if ( il == 2 ) then
 5505.          if ( n_matrix > 0 ) then
 5505.             $I_L5505_88 = 0
 5505. !dir$ ivdep
 5505.             do
 5506.                $x_WR0_R1 = ( b(1 + $I_L5505_88, 1) * 1.0/a(1 + $I_L5505_88, 3, 1) )
 5506.                x(1 + $I_L5505_88, 1) = $x_WR0_R1
 5510.                x(1 + $I_L5505_88, 2) = ( ( b(1 + $I_L5505_88, 2) + -( $x_WR0_R1 * a(1 + $I_L5505_88, 4, 2) ) ) * 1.0/a(1 + $I_L5505_88, 3, 2) )
 5507.                $I_L5505_88 = 1 + $I_L5505_88
 5505.                if ( $I_L5505_88 >= n_matrix ) exit
 5505.             enddo
 5505.          endif
 5513.          if ( -3 + n_equation >= 0 ) then
 5514.             if ( n_matrix > 0 ) then
 5513.                $I_L5513_100 = 0
 5513. !dir$ blocking_size( 1, 1 )
 5513.                do
 5514.                   $I_L5514_90 = 0
 5514. !dir$ ivdep
 5514. !dir$ blocking_size( 256, 256 )
 5514.                   do
 5515.                      x(1 + $I_L5514_90, 3 + $I_L5513_100) = ( 1.0/a(1 + $I_L5514_90, 3, 3 + $I_L5513_100) * ( b(1 + $I_L5514_90, 3 + $I_L5513_100) + -( x(1 + $I_L5514_90, 1 + $I_L5513_100) * a(1 + $I_L5514_90, 5, 3 + $I_L5513_100) ) + -( x(1 + $I_L5514_90, 2 + $I_L5513_100) * a(1 + $I_L5514_90, 4, 3 + $I_L5513_100) ) ) )
 5517.                      $I_L5514_90 = 1 + $I_L5514_90
 5514.                      if ( $I_L5514_90 >= n_matrix ) exit
 5514.                   enddo
 5518.                   $I_L5513_100 = 1 + $I_L5513_100
 5517.                   if ( $I_L5513_100 >= -2 + n_equation ) exit
 5517.                enddo
 5517.             endif
 5517.          endif
 5517.       else
 5517.    10    continue
 5522.          if ( n_equation > 0 ) then
 5522.             $I_L5522_106 = 0
 5522.             do
 5523.                if ( n_matrix > 0 ) then
 5523.                   $I_L5523_92 = 0
 5523. !dir$ ivdep
 5523. !dir$ loop_info (automatic) cache_nt( b )
 5523.                   do
 5524.                      x(1 + $I_L5523_92, 1 + $I_L5522_106) = b(1 + $I_L5523_92, 1 + $I_L5522_106)
 5525.                      $I_L5523_92 = 1 + $I_L5523_92
 5523.                      if ( $I_L5523_92 >= n_matrix ) exit
 5523.                   enddo
 5523.                endif
 5526.                if ( min( il, $I_L5522_106 ) > 0 ) then
 5527.                   if ( n_matrix > 0 ) then
 5526.                      $SI_L5526_102_G7 = 0
 5526.                      do
 5527.                         $SI_L5527_94_G10 = 0
 5527.                         do
 5526.                            $I_L5526_119 = 0
 5526. !dir$ shortloop16
 5526. !dir$ blocking_size( 2, 2 )
 5526.                            do
 5527.                               $I_L5527_113 = 0
 5527. !dir$ ivdep
 5527. !dir$ blocking_size( 256, 256 )
 5527.                               do
 5528.                                  x(1 + $I_L5527_113 + 256 * $SI_L5527_94_G10, 1 + $I_L5522_106) = x(1 + $I_L5527_113 + 256 * $SI_L5527_94_G10, 1 + $I_L5522_106) + -( a(1 + $I_L5527_113 + 256 * $SI_L5527_94_G10, 2 + iu + $I_L5526_119 + 2 * $SI_L5526_102_G7, 1 + $I_L5522_106) * x(1 + $I_L5527_113 + 256 * $SI_L5527_94_G10, $I_L5522_106 + -$I_L5526_119 + -2 * $SI_L5526_102_G7) )
 5527.                                  $I_L5527_113 = 1 + $I_L5527_113
 5527.                                  if ( $I_L5527_113 >= min( n_matrix, 256 + 256 * $SI_L5527_94_G10 ) + -256 * $SI_L5527_94_G10 ) exit
 5527.                               enddo
 5526.                               $I_L5526_119 = 1 + $I_L5526_119
 5526.                               if ( $I_L5526_119 >= min( ( min( il, $I_L5522_106 ) ), 2 + 2 * $SI_L5526_102_G7 ) + -2 * $SI_L5526_102_G7 ) exit
 5526.                            enddo
 5527.                            $SI_L5527_94_G10 = 1 + $SI_L5527_94_G10
 5529.                            if ( $SI_L5527_94_G10 >= _rsh( 255 + n_matrix, 8 ) ) exit
 5529.                         enddo
 5526.                         $SI_L5526_102_G7 = 1 + $SI_L5526_102_G7
 5526.                         if ( $SI_L5526_102_G7 >= _rsh( 1 + min( il, $I_L5522_106 ), 1 ) ) exit
 5526.                      enddo
 5526.                   endif
 5526.                endif
 5531.                if ( n_matrix > 0 ) then
 5531.                   $I_L5531_96 = 0
 5531. !dir$ ivdep
 5531.                   do
 5532.                      x(1 + $I_L5531_96, 1 + $I_L5522_106) = ( x(1 + $I_L5531_96, 1 + $I_L5522_106) * 1.0/a(1 + $I_L5531_96, 1 + iu, 1 + $I_L5522_106) )
 5533.                      $I_L5531_96 = 1 + $I_L5531_96
 5531.                      if ( $I_L5531_96 >= n_matrix ) exit
 5531.                   enddo
 5531.                endif
 5534.                $I_L5522_106 = 1 + $I_L5522_106
 5533.                if ( $I_L5522_106 >= n_equation ) exit
 5533.             enddo
 5533.          endif
 5533.       endif
 5541.       return
 5541.       end
 5541.       
 5595.       
 5595.       subroutine build_sph_matrix( i_sph_algorithm, euler_factor, n_profile, n_layer, ls_trunc, ms, n_red_eigensystem, cg_coeff, kappa, up_lm, isolir, i_direct, mu_0, uplm_sol, azim_factor, diff_planck, l_ir_source_quad, diff_planck_2, flux_down_inc, tau, omega, phase_fnc, ls_brdf_trunc, n_brdf_basis_fnc, rho_alb, f_brdf, brdf_sol, brdf_hemi, cgk, d_planck_flux_surface, n_viewing_level, i_rad_layer, frac_rad_layer, n_direction, mu_v, a, b, c_ylm, weight_u, radiance, nd_profile, nd_radiance_profile, nd_layer, nd_viewing_level, nd_direction, nd_max_order, nd_brdf_basis_fnc, nd_brdf_trunc, nd_red_eigensystem, nd_sph_equation, nd_sph_diagonal, nd_sph_cf_weight, nd_sph_u_range )
 5595.       t$147 = ( 1 + ls_trunc + -ms )
 5727.       t$1346 = _zla( 0, ( 1 + ls_trunc + -ms ) )
 5595.       t$148 = nd_max_order / 2
 5729.       t$1347 = _zla( 0, t$148 )
 5595.       t$1348 = _zla( 0, t$148 )
 5595.       t$1349 = _zla( 0, t$148 ) * _zla( 0, t$148 )
 5595.       t$143 = nd_profile
 5595.       t$150 = ( 1 + nd_max_order )
 5595.       t$151 = nd_direction
 5735.       t$1350 = _zla( 0, nd_profile )
 5595.       t$1351 = _zla( 0, nd_profile )
 5735.       t$1352 = _zla( 0, ( 1 + nd_max_order ) )
 5595.       t$1353 = _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_max_order ) )
 5735.       t$1354 = _zla( 0, nd_direction )
 5595.       t$1355 = _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_max_order ) ) * _zla( 0, nd_direction )
 5595.       t$144 = nd_layer
 5595.       t$1356 = 1 + nd_layer
 5710.       t$1357 = _zla( 0, 1 + nd_layer )
 5595.       t$1358 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
 5595.       t$146 = ( 2 + ls_trunc + -ms )
 5712.       t$1359 = _zla( 0, ( 2 + ls_trunc + -ms ) )
 5595.       t$1360 = _zla( 0, nd_profile ) * _zla( 0, ( 2 + ls_trunc + -ms ) )
 5595.       t$1361 = _zla( 0, nd_profile ) * _zla( 0, nd_direction )
 5720.       t$1362 = _zla( 0, nd_layer )
 5595.       t$1363 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 5595.       t$145 = nd_max_order
 5595.       t$1364 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 5703.       t$1365 = _zla( 0, nd_max_order )
 5595.       t$1366 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_max_order )
 5595.       t$152 = nd_brdf_basis_fnc
 5749.       t$1367 = _zla( 0, nd_brdf_basis_fnc )
 5595.       t$1368 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
 5595.       t$153 = nd_brdf_trunc / 2
 5595.       t$154 = nd_brdf_trunc
 5595.       t$1369 = _zla( 0, nd_brdf_basis_fnc )
 5595.       t$1370 = 1 + t$153
 5751.       t$1371 = _zla( 0, 1 + t$153 )
 5595.       t$1372 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$153 )
 5595.       t$1373 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$153 ) * _zla( 0, 1 + t$153 )
 5595.       t$1374 = 1 + nd_brdf_trunc
 5751.       t$1375 = _zla( 0, 1 + nd_brdf_trunc )
 5595.       t$1376 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$153 ) * _zla( 0, 1 + t$153 ) * _zla( 0, 1 + nd_brdf_trunc )
 5595.       t$1377 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
 5595.       t$1378 = _zla( 0, nd_profile ) * _zla( 0, nd_direction ) * _zla( 0, nd_brdf_basis_fnc )
 5595.       t$149 = ( 1 + nd_brdf_trunc / 2 )
 5732.       t$1379 = _zla( 0, t$149 )
 5595.       t$1380 = _zla( 0, t$149 )
 5595.       t$1381 = _zla( 0, t$149 ) * _zla( 0, nd_max_order )
 5595.       t$155 = nd_viewing_level
 5767.       t$1382 = _zla( 0, nd_viewing_level )
 5595.       t$157 = nd_sph_equation
 5595.       t$158 = nd_sph_diagonal
 5787.       t$1383 = _zla( 0, nd_sph_equation )
 5595.       t$1384 = _zla( 0, nd_profile ) * _zla( 0, nd_sph_equation )
 5787.       t$1385 = _zla( 0, nd_sph_diagonal )
 5595.       t$1386 = _zla( 0, nd_profile ) * _zla( 0, nd_sph_equation ) * _zla( 0, nd_sph_diagonal )
 5595.       t$1387 = _zla( 0, nd_profile ) * _zla( 0, nd_sph_equation )
 5595.       t$1388 = _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level )
 5595.       t$1389 = _zla( 0, ( 1 + ls_trunc + -ms ) ) * _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level )
 5595.       t$159 = nd_sph_cf_weight
 5595.       t$160 = nd_sph_u_range
 5791.       t$1390 = _zla( 0, nd_sph_cf_weight )
 5595.       t$1391 = _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level ) * _zla( 0, nd_sph_cf_weight )
 5791.       t$1392 = _zla( 0, nd_sph_u_range )
 5595.       t$1393 = _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level ) * _zla( 0, nd_sph_cf_weight ) * _zla( 0, nd_sph_u_range )
 5595.       t$156 = nd_radiance_profile
 5779.       t$1394 = _zla( 0, nd_radiance_profile )
 5595.       t$1395 = _zla( 0, nd_radiance_profile )
 5595.       t$1396 = _zla( 0, nd_viewing_level ) * _zla( 0, nd_radiance_profile )
 5595.       t$1397 = _zla( 0, nd_direction ) * _zla( 0, nd_viewing_level ) * _zla( 0, nd_radiance_profile )
 5875.       t$1400 = 8 * _zla( 0, nd_profile )
 5595.       t$162 = ( 2 * nd_red_eigensystem )
 5595.       t$161 = nd_red_eigensystem
 5861.       t$1401 = _zla( 0, ( 2 * nd_red_eigensystem ) )
 5595.       t$1402 = _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) )
 5861.       t$1403 = _zla( 0, nd_red_eigensystem )
 5595.       t$1404 = _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) ) * _zla( 0, nd_red_eigensystem )
 5595.       t$1405 = 2 * _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) ) * _zla( 0, nd_red_eigensystem )
 5861.       t$1406 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) ) / 8
 5861.       t$1408 = t$1406 + 16 * _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) ) * _zla( 0, nd_red_eigensystem )
 5897.       t$1410 = t$1406 + 16 * _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) ) * _zla( 0, nd_red_eigensystem ) + 4 * _zla( 0, nd_profile )
 5595.       t$1411 = _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem )
 5595.       t$1412 = 2 * _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem )
 5859.       t$1413 = 8 * ( 7 + t$1406 + 16 * _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) ) * _zla( 0, nd_red_eigensystem ) + 4 * _zla( 0, nd_profile ) ) / 8
 5859.       t$1415 = t$1413 + 16 * _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem )
 5892.       t$1416 = 8 * ( 7 + t$1413 + 16 * _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem ) ) / 8
 5892.       t$1418 = t$1416 + 8 * _zla( 0, nd_profile )
 5894.       t$1419 = 8 * ( 7 + t$1416 + 8 * _zla( 0, nd_profile ) ) / 8
 5894.       t$1421 = t$1419 + 8 * _zla( 0, nd_profile )
 5595.       t$1422 = _zla( 0, ( 1 + ls_trunc + -ms ) ) * _zla( 0, nd_profile )
 5595.       t$1423 = 2 * _zla( 0, ( 1 + ls_trunc + -ms ) ) * _zla( 0, nd_profile )
 5870.       t$1424 = 8 * ( 7 + t$1419 + 8 * _zla( 0, nd_profile ) ) / 8
 5870.       t$1426 = t$1424 + 16 * _zla( 0, ( 1 + ls_trunc + -ms ) ) * _zla( 0, nd_profile )
 5868.       t$1427 = 8 * ( 7 + t$1424 + 16 * _zla( 0, ( 1 + ls_trunc + -ms ) ) * _zla( 0, nd_profile ) ) / 8
 5868.       t$1429 = t$1427 + 16 * _zla( 0, ( 1 + ls_trunc + -ms ) ) * _zla( 0, nd_profile )
 5595.       t$1430 = 1 + nd_max_order
 5854.       t$1431 = _zla( 0, 1 + nd_max_order )
 5595.       t$1432 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_max_order )
 5854.       t$1433 = 8 * ( 7 + t$1427 + 16 * _zla( 0, ( 1 + ls_trunc + -ms ) ) * _zla( 0, nd_profile ) ) / 8
 5854.       t$1435 = t$1433 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_max_order )
 5856.       t$1436 = 8 * ( 7 + t$1433 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_max_order ) ) / 8
 5856.       t$1438 = t$1436 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_max_order )
 5595.       t$1439 = _zla( 0, ( 1 + ls_trunc + -ms ) ) * _zla( 0, nd_profile )
 5873.       t$1440 = 8 * ( 7 + t$1436 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_max_order ) ) / 8
 5873.       t$1442 = t$1440 + 8 * _zla( 0, ( 1 + ls_trunc + -ms ) ) * _zla( 0, nd_profile )
 5866.       t$1443 = 8 * ( 7 + t$1440 + 8 * _zla( 0, ( 1 + ls_trunc + -ms ) ) * _zla( 0, nd_profile ) ) / 8
 5866.       t$1445 = t$1443 + 16 * _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem )
 5595.       t$1446 = _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) )
 5901.       t$1447 = 8 * ( 7 + t$1443 + 16 * _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem ) ) / 8
 5901.       t$1449 = t$1447 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) )
 5888.       t$1450 = 8 * ( 7 + t$1447 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) ) ) / 8
 5888.       t$1452 = t$1450 + 8 * _zla( 0, ( 1 + ls_trunc + -ms ) ) * _zla( 0, nd_profile )
 5595.       t$1398 = int( _alloc( t$1450 + 8 * _zla( 0, ( 1 + ls_trunc + -ms ) ) * _zla( 0, nd_profile ) ), 8 )
 5875.       t$1399 = t$1398
 5861.       t$1407 = t$1406 + t$1398
 5897.       t$1409 = t$1406 + t$1398 + 16 * _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) ) * _zla( 0, nd_red_eigensystem )
 5859.       t$1414 = t$1413 + t$1398
 5892.       t$1417 = t$1416 + t$1398
 5894.       t$1420 = t$1419 + t$1398
 5870.       t$1425 = t$1424 + t$1398
 5868.       t$1428 = t$1427 + t$1398
 5854.       t$1434 = t$1433 + t$1398
 5856.       t$1437 = t$1436 + t$1398
 5873.       t$1441 = t$1440 + t$1398
 5866.       t$1444 = t$1443 + t$1398
 5901.       t$1448 = t$1447 + t$1398
 5888.       t$1451 = t$1450 + t$1398
 5912.       $ie_S29 = 1
 5912.       if ( 2 * n_layer * n_red_eigensystem > 0 ) then
 5913.          if ( 6 * n_red_eigensystem > 0 ) then
 5914.             if ( n_profile > 0 ) then
 5912.                $I_L5912_752 = 0
 5912.                do
 5913.                   $I_L5913_702 = 0
 5913.                   do
 5914.                      $I_L5914_618 = 0
 5914. !dir$ ivdep
 5914.                      do
 5915.                         a(1 + $I_L5914_618, 1 + $I_L5912_752, 1 + $I_L5913_702) = 0.0
 5916.                         $I_L5914_618 = 1 + $I_L5914_618
 5914.                         if ( $I_L5914_618 >= n_profile ) exit
 5914.                      enddo
 5917.                      $I_L5913_702 = 1 + $I_L5913_702
 5916.                      if ( $I_L5913_702 >= ( 6 * n_red_eigensystem ) ) exit
 5916.                   enddo
 5918.                   $I_L5912_752 = 1 + $I_L5912_752
 5917.                   if ( $I_L5912_752 >= ( 2 * n_layer * n_red_eigensystem ) ) exit
 5917.                enddo
 5917.             endif
 5917.          endif
 5918.          $ie_S29 = ( 1 + 2 * n_layer * n_red_eigensystem )
 5918.       endif
 5926.       i_assign_level = 1
 5932.       $i_below_S18 = 1
 5937.       if ( ms == 0 ) then
 5938.          if ( n_profile > 0 ) then
 5938.             $I_L5938_620 = 0
 5938. !dir$ ivdep
 5938.             do
 5939.                $ss_WR0_R0 = 1.0 + -omega(1 + $I_L5938_620, 1)
 5939.                ss(1 + $I_L5938_620, 0) = $ss_WR0_R0
 5940.                ssrt(1 + $I_L5938_620, 0) = _sqrt( $ss_WR0_R0 )
 5941.                $I_L5938_620 = 1 + $I_L5938_620
 5938.                if ( $I_L5938_620 >= n_profile ) exit
 5938.             enddo
 5938.          endif
 5938.       endif
 5943.       if ( ls_trunc + -max( 1, ms ) >= 0 ) then
 5944.          if ( n_profile > 0 ) then
 5943.             $I_L5943_785 = 0
 5943.             do
 5944.                $I_L5944_754 = 0
 5944.                do
 5943.                   $I_L5943_817 = 0
 5943. !dir$ shortloop16
 5943. !dir$ blocking_size( 2, 2 )
 5943.                   do
 5944.                      $I_L5944_622 = 0
 5944. !dir$ ivdep
 5944. !dir$ blocking_size( 256, 256 )
 5944.                      do
 5945.                         $ss_WR0_R1 = 1.0 + -( omega(1 + $I_L5944_622 + 256 * $I_L5944_754, 1) * phase_fnc(1 + $I_L5944_622 + 256 * $I_L5944_754, 1, $I_L5943_817 + max( 1, ms ) + 2 * $I_L5943_785) )
 5945.                         ss(1 + $I_L5944_622 + 256 * $I_L5944_754, $I_L5943_817 + max( 1, ms ) + 2 * $I_L5943_785) = $ss_WR0_R1
 5946.                         ssrt(1 + $I_L5944_622 + 256 * $I_L5944_754, $I_L5943_817 + max( 1, ms ) + 2 * $I_L5943_785) = _sqrt( $ss_WR0_R1 )
 5944.                         $I_L5944_622 = 1 + $I_L5944_622
 5944.                         if ( $I_L5944_622 >= min( n_profile, 256 + 256 * $I_L5944_754 ) + -256 * $I_L5944_754 ) exit
 5944.                      enddo
 5943.                      $I_L5943_817 = 1 + $I_L5943_817
 5943.                      if ( $I_L5943_817 >= min( 1 + ls_trunc + -max( 1, ms ), 2 + 2 * $I_L5943_785 ) + -2 * $I_L5943_785 ) exit
 5943.                   enddo
 5944.                   $I_L5944_754 = 1 + $I_L5944_754
 5947.                   if ( $I_L5944_754 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
 5947.                enddo
 5943.                $I_L5943_785 = 1 + $I_L5943_785
 5943.                if ( $I_L5943_785 >= 1 + max( 0, -1 + _rsh( 2 + ls_trunc + -max( 1, ms ), 1 ) ) ) exit
 5943.             enddo
 5943.          endif
 5943.       endif
 5951.       call eig_sys( n_profile, ls_trunc, ms, n_red_eigensystem, cg_coeff(1), ssrt(1, 0), mu(1, 1, 1), eig_vec(1, 1, 1, 1), nd_profile, nd_red_eigensystem, nd_max_order )
 5958.       if ( n_red_eigensystem > 0 ) then
 5959.          if ( n_profile > 0 ) then
 5958.             $I_L5958_787 = 0
 5958.             do
 5959.                $I_L5959_756 = 0
 5959.                do
 5958.                   $I_L5958_819 = 0
 5958. !dir$ shortloop16
 5958. !dir$ blocking_size( 2, 2 )
 5958.                   do
 5959.                      $I_L5959_625 = 0
 5959. !dir$ ivdep
 5959. !dir$ blocking_size( 256, 256 )
 5959.                      do
 5960.                         theta(1 + $I_L5959_625 + 256 * $I_L5959_756, 1 + $I_L5958_819 + 2 * $I_L5958_787, 1) = _expn( -( tau(1 + $I_L5959_625 + 256 * $I_L5959_756, 1) * 1.0/mu(1 + $I_L5959_625 + 256 * $I_L5959_756, 1 + $I_L5958_819 + 2 * $I_L5958_787, 1) ) )
 5959.                         $I_L5959_625 = 1 + $I_L5959_625
 5959.                         if ( $I_L5959_625 >= min( n_profile, 256 + 256 * $I_L5959_756 ) + -256 * $I_L5959_756 ) exit
 5959.                      enddo
 5958.                      $I_L5958_819 = 1 + $I_L5958_819
 5958.                      if ( $I_L5958_819 >= min( n_red_eigensystem, 2 + 2 * $I_L5958_787 ) + -2 * $I_L5958_787 ) exit
 5958.                   enddo
 5959.                   $I_L5959_756 = 1 + $I_L5959_756
 5961.                   if ( $I_L5959_756 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
 5961.                enddo
 5958.                $I_L5958_787 = 1 + $I_L5958_787
 5958.                if ( $I_L5958_787 >= 1 + max( 0, -1 + _rsh( 1 + n_red_eigensystem, 1 ) ) ) exit
 5958.             enddo
 5958.          endif
 5958.       endif
 5965.       call layer_part_integ( n_profile, ls_trunc, ms, n_red_eigensystem, cg_coeff(1), mu(1, 1, 1), eig_vec(1, 1, 1, 1), theta(1, 1, 1), isolir, i_direct(1, 0), mu_0(1), uplm_sol(1, 1), diff_planck(1, 1), l_ir_source_quad, diff_planck_2(1, 1), tau(1, 1), ss(1, 0), source_top(1, 1, 1), source_bottom(1, 1, 1), upm_c(1, 1), k_sol(1), z_sol(1, 1), q_0(1), q_1(1), nd_profile, nd_max_order, nd_red_eigensystem )
 5984.       if ( ls_trunc + -ms > 0 ) then
 5984.          $I_L5984_722 = 0
 5984.          do
 5989.             if ( n_profile > 0 ) then
 5989.                $I_L5989_688 = 0
 5989. !dir$ ivdep
 5989.                do
 5990.                   b(1 + $I_L5989_688, 1 + $I_L5984_722) = -5.0e-1 * source_top(1 + $I_L5989_688, 2 + 2 * $I_L5984_722, 1)
 5991.                   $I_L5989_688 = 1 + $I_L5989_688
 5989.                   if ( $I_L5989_688 >= n_profile ) exit
 5989.                enddo
 5989.             endif
 5996.             if ( ms == 0 ) then
 5997.                if ( n_profile > 0 ) then
 5997.                   $SCA_kappa_I0 = kappa(1 + $I_L5984_722, 1)
 5997.                   $I_L5997_690 = 0
 5997. !dir$ ivdep
 5997.                   do
 5998.                      b(1 + $I_L5997_690, 1 + $I_L5984_722) = b(1 + $I_L5997_690, 1 + $I_L5984_722) + $SCA_kappa_I0 * ( -source_top(1 + $I_L5997_690, 1, 1) + 1.1283791670955126 * flux_down_inc(1 + $I_L5997_690) )
 6001.                      $I_L5997_690 = 1 + $I_L5997_690
 5997.                      if ( $I_L5997_690 >= n_profile ) exit
 5997.                   enddo
 5997.                endif
 5997.             endif
 6042.             $I_L5984_722 = 1 + $I_L5984_722
 6041.             if ( $I_L5984_722 >= ( 1 + ls_trunc + -ms ) / 2 ) exit
 6041.          enddo
 5984.          $I_L5984_807 = 0
 5984.          do
 6003.             if ( ls_trunc + -ms + -max( 1, 3 + -2 * ms ) >= 0 ) then
 6004.                if ( n_profile > 0 ) then
 6003.                   $I_L6003_789 = 0
 6003.                   do
 6004.                      $I_L6004_776 = 0
 6004.                      do
 6003.                         $I_L6003_734 = 0
 6003. !dir$ shortloop16
 6003. !dir$ blocking_size( 4, 4 )
 6003.                         do
 6004.                            $SCA_kappa_I1 = kappa(1 + $I_L5984_807, ( 1 + max( 1, 3 + -2 * ms ) + 2 * $I_L6003_734 + 8 * $I_L6003_789 ) / 2)
 6004.                            $I_L6004_692 = 0
 6004. !dir$ ivdep
 6004. !dir$ blocking_size( 256, 256 )
 6004.                            do
 6005.                               b(1 + $I_L6004_692 + 256 * $I_L6004_776, 1 + $I_L5984_807) = b(1 + $I_L6004_692 + 256 * $I_L6004_776, 1 + $I_L5984_807) + -( $SCA_kappa_I1 * source_top(1 + $I_L6004_692 + 256 * $I_L6004_776, max( 1, 3 + -2 * ms ) + 2 * $I_L6003_734 + 8 * $I_L6003_789, 1) )
 6004.                               $I_L6004_692 = 1 + $I_L6004_692
 6004.                               if ( $I_L6004_692 >= min( n_profile, 256 + 256 * $I_L6004_776 ) + -256 * $I_L6004_776 ) exit
 6004.                            enddo
 6003.                            $I_L6003_734 = 1 + $I_L6003_734
 6003.                            if ( $I_L6003_734 >= min( ( 2 + ls_trunc + -ms + -max( 1, 3 + -2 * ms ) ) / 2, 4 + 4 * $I_L6003_789 ) + -4 * $I_L6003_789 ) exit
 6003.                         enddo
 6004.                         $I_L6004_776 = 1 + $I_L6004_776
 6007.                         if ( $I_L6004_776 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
 6007.                      enddo
 6003.                      $I_L6003_789 = 1 + $I_L6003_789
 6003.                      if ( $I_L6003_789 >= 1 + max( 0, -1 + _rsh( 3 + ( 2 + ls_trunc + -ms + -max( 1, 3 + -2 * ms ) ) / 2, 2 ) ) ) exit
 6003.                   enddo
 6003.                endif
 6003.             endif
 6012.             if ( n_red_eigensystem > 0 ) then
 6025.                if ( n_profile > 0 ) then
 6012.                   $I_L6012_724 = 0
 6012.                   do
 6025.                      $I_L6025_695 = 0
 6025. !dir$ ivdep
 6025. !dir$ loop_info (automatic) cache_nt( eig_vec, a )
 6025.                      do
 6026.                         a(1 + $I_L6025_695, 1 + $I_L5984_807, 1 + $I_L6012_724 + 3 * n_red_eigensystem) = 5.0e-1 * eig_vec(1 + $I_L6025_695, 2 + 2 * $I_L5984_807, 1 + $I_L6012_724, 1)
 6027.                         $I_L6025_695 = 1 + $I_L6025_695
 6025.                         if ( $I_L6025_695 >= n_profile ) exit
 6025.                      enddo
 6041.                      $I_L6012_724 = 1 + $I_L6012_724
 6040.                      if ( $I_L6012_724 >= n_red_eigensystem ) exit
 6040.                   enddo
 6040.                endif
 6040.             endif
 6042.             $I_L5984_807 = 1 + $I_L5984_807
 6041.             if ( $I_L5984_807 >= ( 1 + ls_trunc + -ms ) / 2 ) exit
 6041.          enddo
 5984.          $I_L5984_815 = 0
 5984.          do
 6012.             if ( n_red_eigensystem > 0 ) then
 6025.                if ( n_profile > 0 ) then
 6012.                   $I_L6012_813 = 0
 6012.                   do
 6028.                      $I_L6028_809 = 0
 6028.                      do
 6030.                         $I_L6030_791 = 0
 6030.                         do
 6012.                            $I_L6012_778 = 0
 6012. !dir$ shortloop16
 6012. !dir$ blocking_size( 2, 2 )
 6012.                            do
 6028.                               $I_L6028_737 = 0
 6028. !dir$ shortloop16
 6028. !dir$ blocking_size( 2, 2 )
 6028.                               do
 6030.                                  $SCA_kappa_I2 = kappa(1 + $I_L5984_815, 1 + $I_L6028_737 + 2 * $I_L6028_809)
 6030.                                  $I_L6030_697 = 0
 6030. !dir$ ivdep
 6030. !dir$ blocking_size( 256, 256 )
 6030.                                  do
 6031.                                     a(1 + $I_L6030_697 + 256 * $I_L6030_791, 1 + $I_L5984_815, 1 + $I_L6012_778 + 3 * n_red_eigensystem + 2 * $I_L6012_813) = a(1 + $I_L6030_697 + 256 * $I_L6030_791, 1 + $I_L5984_815, 1 + $I_L6012_778 + 3 * n_red_eigensystem + 2 * $I_L6012_813) + $SCA_kappa_I2 * eig_vec(1 + $I_L6030_697 + 256 * $I_L6030_791, 1 + 2 * $I_L6028_737 + 4 * $I_L6028_809, 1 + $I_L6012_778 + 2 * $I_L6012_813, 1)
 6030.                                     $I_L6030_697 = 1 + $I_L6030_697
 6030.                                     if ( $I_L6030_697 >= min( n_profile, 256 + 256 * $I_L6030_791 ) + -256 * $I_L6030_791 ) exit
 6030.                                  enddo
 6028.                                  $I_L6028_737 = 1 + $I_L6028_737
 6028.                                  if ( $I_L6028_737 >= min( ( 1 + ls_trunc + -ms ) / 2, 2 + 2 * $I_L6028_809 ) + -2 * $I_L6028_809 ) exit
 6028.                               enddo
 6012.                               $I_L6012_778 = 1 + $I_L6012_778
 6034.                               if ( $I_L6012_778 >= min( n_red_eigensystem, 2 + 2 * $I_L6012_813 ) + -2 * $I_L6012_813 ) exit
 6034.                            enddo
 6030.                            $I_L6030_791 = 1 + $I_L6030_791
 6030.                            if ( $I_L6030_791 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
 6030.                         enddo
 6028.                         $I_L6028_809 = 1 + $I_L6028_809
 6040.                         if ( $I_L6028_809 >= 1 + max( 0, -1 + _rsh( 1 + ( 1 + ls_trunc + -ms ) / 2, 1 ) ) ) exit
 6040.                      enddo
 6012.                      $I_L6012_813 = 1 + $I_L6012_813
 6012.                      if ( $I_L6012_813 >= 1 + max( 0, -1 + _rsh( 1 + n_red_eigensystem, 1 ) ) ) exit
 6012.                   enddo
 6012.                endif
 6012.             endif
 6042.             $I_L5984_815 = 1 + $I_L5984_815
 6041.             if ( $I_L5984_815 >= ( 1 + ls_trunc + -ms ) / 2 ) exit
 6041.          enddo
 5984.          $I_L5984_781 = 0
 5984.          do
 6012.             if ( n_red_eigensystem > 0 ) then
 6025.                if ( n_profile > 0 ) then
 6012.                   $I_L6012_726 = 0
 6012.                   do
 6036.                      $I_L6036_700 = 0
 6036. !dir$ ivdep
 6036. !dir$ loop_info (automatic) cache_nt( a )
 6036.                      do
 6037.                         a(1 + $I_L6036_700, 1 + $I_L5984_781, 1 + $I_L6012_726 + 2 * n_red_eigensystem) = a(1 + $I_L6036_700, 1 + $I_L5984_781, 1 + $I_L6012_726 + 3 * n_red_eigensystem) + -eig_vec(1 + $I_L6036_700, 2 + 2 * $I_L5984_781, 1 + $I_L6012_726, 1)
 6039.                         a(1 + $I_L6036_700, 1 + $I_L5984_781, 1 + $I_L6012_726 + 3 * n_red_eigensystem) = theta(1 + $I_L6036_700, 1 + $I_L6012_726, 1) * a(1 + $I_L6036_700, 1 + $I_L5984_781, 1 + $I_L6012_726 + 3 * n_red_eigensystem)
 6040.                         $I_L6036_700 = 1 + $I_L6036_700
 6036.                         if ( $I_L6036_700 >= n_profile ) exit
 6036.                      enddo
 6041.                      $I_L6012_726 = 1 + $I_L6012_726
 6040.                      if ( $I_L6012_726 >= n_red_eigensystem ) exit
 6040.                   enddo
 6040.                endif
 6040.             endif
 6042.             $I_L5984_781 = 1 + $I_L5984_781
 6041.             if ( $I_L5984_781 >= ( 1 + ls_trunc + -ms ) / 2 ) exit
 6041.          enddo
 5986.          $ie_S29 = ( 2 * ( 1 + ls_trunc + -ms ) / 2 ) / 2
 5986.       endif
 6046.       if ( i_sph_algorithm == 1 ) then
 6052.          l_assign = 0 < n_viewing_level
 6053.          if ( 0 < n_viewing_level ) then
 6053.             l_assign = i_rad_layer(1) == 1
 6053.          endif
 6055.          call set_level_weights( 1, n_profile, ls_trunc, ms, n_red_eigensystem, cg_coeff(1), mu(1, 1, 1), eig_vec(1, 1, 1, 1), isolir, z_sol(1, 1), mu_0(1), q_0(1), l_ir_source_quad, q_1(1), upm_c(1, 1), k_sol(1), tau(1, 1), ss(1, 0), n_viewing_level, i_rad_layer(1), frac_rad_layer(1), l_assign, i_assign_level, c_ylm(1, 1, 1), weight_u(1, 1, 1, 1), nd_profile, nd_viewing_level, nd_max_order, nd_red_eigensystem, nd_sph_cf_weight )
 6069.       else if ( i_sph_algorithm == 2 ) then
 6072.          call set_dirn_weights( n_profile, ms, ls_trunc, up_lm(1, 1, 1), n_direction, mu_v(1, 1), azim_factor(1, 1), n_viewing_level, i_rad_layer(1), frac_rad_layer(1), 1, n_red_eigensystem, mu(1, 1, 1), eig_vec(1, 1, 1, 1), isolir, z_sol(1, 1), mu_0(1), l_ir_source_quad, diff_planck(1, 1), upm_c(1, 1), k_sol(1), tau(1, 1), omega(1, 1), phase_fnc(1, 1, 1), weight_u(1, 1, 1, 1), radiance(1, 1, 1), nd_profile, nd_layer, nd_direction, nd_viewing_level, nd_red_eigensystem, nd_max_order )
 6072.       endif
 6102.       if ( -2 + n_layer >= 0 ) then
 6102.          $I_L6102_801 = 0
 6102.          do
 6105.             $i_above_S28 = $i_below_S18
 6106.             $i_below_S18 = 3 + -$i_below_S18
 6110.             if ( ms == 0 ) then
 6111.                if ( n_profile > 0 ) then
 6111.                   $I_L6111_628 = 0
 6111. !dir$ ivdep
 6111.                   do
 6112.                      $ss_WR0_R2 = 1.0 + -omega(1 + $I_L6111_628, 2 + $I_L6102_801)
 6112.                      ss(1 + $I_L6111_628, 0) = $ss_WR0_R2
 6113.                      ssrt(1 + $I_L6111_628, 0) = _sqrt( $ss_WR0_R2 )
 6114.                      $I_L6111_628 = 1 + $I_L6111_628
 6111.                      if ( $I_L6111_628 >= n_profile ) exit
 6111.                   enddo
 6111.                endif
 6111.             endif
 6116.             if ( ls_trunc + -max( 1, ms ) >= 0 ) then
 6117.                if ( n_profile > 0 ) then
 6116.                   $I_L6116_793 = 0
 6116.                   do
 6117.                      $I_L6117_758 = 0
 6117.                      do
 6116.                         $I_L6116_821 = 0
 6116. !dir$ shortloop16
 6116. !dir$ blocking_size( 2, 2 )
 6116.                         do
 6117.                            $I_L6117_630 = 0
 6117. !dir$ ivdep
 6117. !dir$ blocking_size( 256, 256 )
 6117.                            do
 6118.                               $ss_WR0_R3 = 1.0 + -( omega(1 + $I_L6117_630 + 256 * $I_L6117_758, 2 + $I_L6102_801) * phase_fnc(1 + $I_L6117_630 + 256 * $I_L6117_758, 2 + $I_L6102_801, $I_L6116_821 + max( 1, ms ) + 2 * $I_L6116_793) )
 6118.                               ss(1 + $I_L6117_630 + 256 * $I_L6117_758, $I_L6116_821 + max( 1, ms ) + 2 * $I_L6116_793) = $ss_WR0_R3
 6119.                               ssrt(1 + $I_L6117_630 + 256 * $I_L6117_758, $I_L6116_821 + max( 1, ms ) + 2 * $I_L6116_793) = _sqrt( $ss_WR0_R3 )
 6117.                               $I_L6117_630 = 1 + $I_L6117_630
 6117.                               if ( $I_L6117_630 >= min( n_profile, 256 + 256 * $I_L6117_758 ) + -256 * $I_L6117_758 ) exit
 6117.                            enddo
 6116.                            $I_L6116_821 = 1 + $I_L6116_821
 6116.                            if ( $I_L6116_821 >= min( 1 + ls_trunc + -max( 1, ms ), 2 + 2 * $I_L6116_793 ) + -2 * $I_L6116_793 ) exit
 6116.                         enddo
 6117.                         $I_L6117_758 = 1 + $I_L6117_758
 6120.                         if ( $I_L6117_758 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
 6120.                      enddo
 6116.                      $I_L6116_793 = 1 + $I_L6116_793
 6116.                      if ( $I_L6116_793 >= 1 + max( 0, -1 + _rsh( 2 + ls_trunc + -max( 1, ms ), 1 ) ) ) exit
 6116.                   enddo
 6116.                endif
 6116.             endif
 6125.             call eig_sys( n_profile, ls_trunc, ms, n_red_eigensystem, cg_coeff(1), ssrt(1, 0), mu(1, 1, $i_below_S18), eig_vec(1, 1, 1, $i_below_S18), nd_profile, nd_red_eigensystem, nd_max_order )
 6132.             if ( n_red_eigensystem > 0 ) then
 6133.                if ( n_profile > 0 ) then
 6132.                   $I_L6132_795 = 0
 6132.                   do
 6133.                      $I_L6133_760 = 0
 6133.                      do
 6132.                         $I_L6132_823 = 0
 6132. !dir$ shortloop16
 6132. !dir$ blocking_size( 2, 2 )
 6132.                         do
 6133.                            $I_L6133_633 = 0
 6133. !dir$ ivdep
 6133. !dir$ blocking_size( 256, 256 )
 6133.                            do
 6134.                               theta(1 + $I_L6133_633 + 256 * $I_L6133_760, 1 + $I_L6132_823 + 2 * $I_L6132_795, $i_below_S18) = _expn( -( tau(1 + $I_L6133_633 + 256 * $I_L6133_760, 2 + $I_L6102_801) * 1.0/mu(1 + $I_L6133_633 + 256 * $I_L6133_760, 1 + $I_L6132_823 + 2 * $I_L6132_795, $i_below_S18) ) )
 6133.                               $I_L6133_633 = 1 + $I_L6133_633
 6133.                               if ( $I_L6133_633 >= min( n_profile, 256 + 256 * $I_L6133_760 ) + -256 * $I_L6133_760 ) exit
 6133.                            enddo
 6132.                            $I_L6132_823 = 1 + $I_L6132_823
 6132.                            if ( $I_L6132_823 >= min( n_red_eigensystem, 2 + 2 * $I_L6132_795 ) + -2 * $I_L6132_795 ) exit
 6132.                         enddo
 6133.                         $I_L6133_760 = 1 + $I_L6133_760
 6135.                         if ( $I_L6133_760 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
 6135.                      enddo
 6132.                      $I_L6132_795 = 1 + $I_L6132_795
 6132.                      if ( $I_L6132_795 >= 1 + max( 0, -1 + _rsh( 1 + n_red_eigensystem, 1 ) ) ) exit
 6132.                   enddo
 6132.                endif
 6132.             endif
 6139.             call layer_part_integ( n_profile, ls_trunc, ms, n_red_eigensystem, cg_coeff(1), mu(1, 1, $i_below_S18), eig_vec(1, 1, 1, $i_below_S18), theta(1, 1, $i_below_S18), isolir, i_direct(1, 1 + $I_L6102_801), mu_0(1), uplm_sol(1, 1), diff_planck(1, 2 + $I_L6102_801), l_ir_source_quad, diff_planck_2(1, 2 + $I_L6102_801), tau(1, 2 + $I_L6102_801), ss(1, 0), source_top(1, 1, $i_below_S18), source_bottom(1, 1, $i_below_S18), upm_c(1, 1), k_sol(1), z_sol(1, 1), q_0(1), q_1(1), nd_profile, nd_max_order, nd_red_eigensystem )
 6153.             if ( 2 * n_red_eigensystem > 0 ) then
 6153.                $I_L6153_762 = 0
 6153.                do
 6156.                   if ( mod( ( 1 + $I_L6153_762 ), 2 ) == 1 ) then
 6157.                      $ie_S29 = ( n_red_eigensystem + ( 2 + $I_L6153_762 ) / 2 + 2 * n_red_eigensystem * $I_L6102_801 )
 6158.                   else if ( mod( ( 1 + $I_L6153_762 ), 2 ) == 0 ) then
 6159.                      $ie_S29 = ( ( 1 + $I_L6153_762 ) / 2 + 2 * n_red_eigensystem + 2 * n_red_eigensystem * $I_L6102_801 )
 6159.                   endif
 6163.                   if ( n_red_eigensystem > 0 ) then
 6169.                      if ( n_profile > 0 ) then
 6163.                         $I_L6163_704 = 0
 6163.                         do
 6169.                            $I_L6169_636 = 0
 6169. !dir$ ivdep
 6169. !dir$ loop_info (automatic) cache_nt( eig_vec )
 6169.                            do
 6170.                               a(1 + $I_L6169_636, $ie_S29, 1 + $I_L6163_704) = eig_vec(1 + $I_L6169_636, 1 + $I_L6153_762, 1 + $I_L6163_704, $i_above_S28) * theta(1 + $I_L6169_636, 1 + $I_L6163_704, $i_above_S28) * real( 1 + -2 * mod( $I_L6153_762, 2 ), 8 )
 6172.                               a(1 + $I_L6169_636, $ie_S29, 1 + n_red_eigensystem + $I_L6163_704) = eig_vec(1 + $I_L6169_636, 1 + $I_L6153_762, 1 + $I_L6163_704, $i_above_S28)
 6173.                               a(1 + $I_L6169_636, $ie_S29, 1 + $I_L6163_704 + 2 * n_red_eigensystem) = -( eig_vec(1 + $I_L6169_636, 1 + $I_L6153_762, 1 + $I_L6163_704, $i_below_S18) * real( 1 + -2 * mod( $I_L6153_762, 2 ), 8 ) )
 6175.                               a(1 + $I_L6169_636, $ie_S29, 1 + $I_L6163_704 + 3 * n_red_eigensystem) = -( theta(1 + $I_L6169_636, 1 + $I_L6163_704, $i_below_S18) * eig_vec(1 + $I_L6169_636, 1 + $I_L6153_762, 1 + $I_L6163_704, $i_below_S18) )
 6177.                               $I_L6169_636 = 1 + $I_L6169_636
 6169.                               if ( $I_L6169_636 >= n_profile ) exit
 6169.                            enddo
 6178.                            $I_L6163_704 = 1 + $I_L6163_704
 6177.                            if ( $I_L6163_704 >= n_red_eigensystem ) exit
 6177.                         enddo
 6177.                      endif
 6177.                   endif
 6180.                   if ( n_profile > 0 ) then
 6180.                      $I_L6180_638 = 0
 6180. !dir$ ivdep
 6180. !dir$ loop_info (automatic) cache_nt( source_top, source_bottom, b )
 6180.                      do
 6181.                         b(1 + $I_L6180_638, $ie_S29) = source_top(1 + $I_L6180_638, 1 + $I_L6153_762, $i_below_S18) + -source_bottom(1 + $I_L6180_638, 1 + $I_L6153_762, $i_above_S28)
 6183.                         $I_L6180_638 = 1 + $I_L6180_638
 6180.                         if ( $I_L6180_638 >= n_profile ) exit
 6180.                      enddo
 6180.                   endif
 6185.                   $I_L6153_762 = 1 + $I_L6153_762
 6183.                   if ( $I_L6153_762 >= ( 2 * n_red_eigensystem ) ) exit
 6183.                enddo
 6183.             endif
 6187.             if ( i_sph_algorithm == 1 ) then
 6195.                l_assign = i_assign_level <= n_viewing_level
 6196.                if ( i_assign_level <= n_viewing_level ) then
 6196.                   l_assign = $I_L6102_801 + -i_rad_layer(i_assign_level) == -2
 6196.                endif
 6206.                t$4822 = ( 2 + $I_L6102_801 )
 6206.                call set_level_weights( t$4822, n_profile, ls_trunc, ms, n_red_eigensystem, cg_coeff(1), mu(1, 1, $i_below_S18), eig_vec(1, 1, 1, $i_below_S18), isolir, z_sol(1, 1), mu_0(1), q_0(1), l_ir_source_quad, q_1(1), upm_c(1, 1), k_sol(1), tau(1, 2 + $I_L6102_801), ss(1, 0), n_viewing_level, i_rad_layer(1), frac_rad_layer(1), l_assign, i_assign_level, c_ylm(1, 1, 1), weight_u(1, 1, 1, 1), nd_profile, nd_viewing_level, nd_max_order, nd_red_eigensystem, nd_sph_cf_weight )
 6220.             else if ( i_sph_algorithm == 2 ) then
 6226.                t$4822 = ( 2 + $I_L6102_801 )
 6223.                call set_dirn_weights( n_profile, ms, ls_trunc, up_lm(1, 1, 1), n_direction, mu_v(1, 1), azim_factor(1, 1), n_viewing_level, i_rad_layer(1), frac_rad_layer(1), t$4822, n_red_eigensystem, mu(1, 1, $i_below_S18), eig_vec(1, 1, 1, $i_below_S18), isolir, z_sol(1, 1), mu_0(1), l_ir_source_quad, diff_planck(1, 1), upm_c(1, 1), k_sol(1), tau(1, 1), omega(1, 1), phase_fnc(1, 1, 1), weight_u(1, 1, 1, 1 + 2 * n_red_eigensystem + 2 * n_red_eigensystem * $I_L6102_801), radiance(1, 1, 1), nd_profile, nd_layer, nd_direction, nd_viewing_level, nd_red_eigensystem, nd_max_order )
 6223.             endif
 6240.             $I_L6102_801 = 1 + $I_L6102_801
 6237.             if ( $I_L6102_801 >= -1 + n_layer ) exit
 6237.          enddo
 6237.       endif
 6251.       if ( ls_trunc + -ms > 0 ) then
 6251.          $I_L6251_811 = 0
 6251.          do
 6258.             if ( n_profile > 0 ) then
 6258.                $I_L6258_640 = 0
 6258. !dir$ ivdep
 6258.                do
 6269.                   $b_WR0_R4 = -5.0e-1 * source_bottom(1 + $I_L6258_640, 2 + 2 * $I_L6251_811, $i_below_S18) * real( 1 + -2 * mod( ( 1 + ms + 2 * $I_L6251_811 ), 2 ), 8 )
 6269.                   b(1 + $I_L6258_640, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem) = $b_WR0_R4
 6260.                   $I_L6258_640 = 1 + $I_L6258_640
 6258.                   if ( $I_L6258_640 >= n_profile ) exit
 6258.                enddo
 6258.             endif
 6282.             $I_L6282_706 = 0
 6282.             do
 6283.                if ( n_profile > 0 ) then
 6283.                   $SCA_kappa_I3 = kappa(1 + $I_L6251_811, 1 + $I_L6282_706)
 6283.                   $I_L6283_642 = 0
 6283. !dir$ ivdep
 6283. !dir$ loop_info (automatic) cache_nt( source_bottom )
 6283.                   do
 6284.                      b(1 + $I_L6283_642, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem) = b(1 + $I_L6283_642, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem) + -( $SCA_kappa_I3 * source_bottom(1 + $I_L6283_642, 1 + 2 * $I_L6282_706, $i_below_S18) * real( 1 + -2 * mod( ( ms + 2 * $I_L6282_706 ), 2 ), 8 ) )
 6288.                      $I_L6283_642 = 1 + $I_L6283_642
 6283.                      if ( $I_L6283_642 >= n_profile ) exit
 6283.                   enddo
 6283.                endif
 6289.                if ( isolir == 2 ) then
 6289.                   if ( ms == 0 ) then
 6289.                      if ( 2 * $I_L6282_706 == 0 ) then
 6291.                         if ( n_profile > 0 ) then
 6292.                            $SC_kappa_I7 = kappa(1 + $I_L6251_811, 1)
 6291.                            $I_L6291_644 = 0
 6291. !dir$ ivdep
 6291.                            do
 6292.                               b(1 + $I_L6291_644, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem) = b(1 + $I_L6291_644, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem) + 1.1283791670955126 * $SC_kappa_I7 * d_planck_flux_surface(1 + $I_L6291_644)
 6294.                               $I_L6291_644 = 1 + $I_L6291_644
 6291.                               if ( $I_L6291_644 >= n_profile ) exit
 6291.                            enddo
 6291.                         endif
 6291.                      endif
 6291.                   endif
 6291.                endif
 6296.                $I_L6282_706 = 1 + $I_L6282_706
 6295.                if ( $I_L6282_706 >= ( 1 + ls_trunc + -ms ) / 2 ) exit
 6295.             enddo
 6300.             if ( n_red_eigensystem > 0 ) then
 6311.                if ( n_profile > 0 ) then
 6300.                   $I_L6300_803 = 0
 6300.                   do
 6311.                      $I_L6311_646 = 0
 6311. !dir$ ivdep
 6311.                      do
 6312.                         a(1 + $I_L6311_646, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem, 1 + n_red_eigensystem + $I_L6300_803) = a(1 + $I_L6311_646, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem, 1 + n_red_eigensystem + $I_L6300_803) + 5.0e-1 * eig_vec(1 + $I_L6311_646, 2 + 2 * $I_L6251_811, 1 + $I_L6300_803, $i_below_S18) * real( 1 + -2 * mod( ( 1 + ms + 2 * $I_L6251_811 ), 2 ), 8 )
 6314.                         $I_L6311_646 = 1 + $I_L6311_646
 6311.                         if ( $I_L6311_646 >= n_profile ) exit
 6311.                      enddo
 6315.                      $I_L6315_797 = 0
 6315.                      do
 6317.                         $I_L6317_764 = 0
 6317.                         do
 6315.                            $I_L6315_746 = 0
 6315. !dir$ shortloop16
 6315. !dir$ blocking_size( 4, 4 )
 6315.                            do
 6317.                               $SCA_kappa_I4 = kappa(1 + $I_L6251_811, 1 + $I_L6315_746 + 4 * $I_L6315_797)
 6317.                               $I_L6317_648 = 0
 6317. !dir$ ivdep
 6317. !dir$ blocking_size( 256, 256 )
 6317.                               do
 6318.                                  a(1 + $I_L6317_648 + 256 * $I_L6317_764, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem, 1 + n_red_eigensystem + $I_L6300_803) = a(1 + $I_L6317_648 + 256 * $I_L6317_764, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem, 1 + n_red_eigensystem + $I_L6300_803) + $SCA_kappa_I4 * eig_vec(1 + $I_L6317_648 + 256 * $I_L6317_764, 1 + 2 * $I_L6315_746 + 8 * $I_L6315_797, 1 + $I_L6300_803, $i_below_S18) * real( 1 + -2 * mod( ( ms + 2 * $I_L6315_746 + 8 * $I_L6315_797 ), 2 ), 8 )
 6317.                                  $I_L6317_648 = 1 + $I_L6317_648
 6317.                                  if ( $I_L6317_648 >= min( n_profile, 256 + 256 * $I_L6317_764 ) + -256 * $I_L6317_764 ) exit
 6317.                               enddo
 6315.                               $I_L6315_746 = 1 + $I_L6315_746
 6315.                               if ( $I_L6315_746 >= min( ( 1 + ls_trunc + -ms ) / 2, 4 + 4 * $I_L6315_797 ) + -4 * $I_L6315_797 ) exit
 6315.                            enddo
 6317.                            $I_L6317_764 = 1 + $I_L6317_764
 6320.                            if ( $I_L6317_764 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
 6320.                         enddo
 6315.                         $I_L6315_797 = 1 + $I_L6315_797
 6315.                         if ( $I_L6315_797 >= 1 + max( 0, -1 + _rsh( 3 + ( 1 + ls_trunc + -ms ) / 2, 2 ) ) ) exit
 6315.                      enddo
 6323.                      $I_L6323_651 = 0
 6323. !dir$ ivdep
 6323.                      do
 6324.                         a(1 + $I_L6323_651, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem, 1 + $I_L6300_803) = a(1 + $I_L6323_651, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem, 1 + n_red_eigensystem + $I_L6300_803) + eig_vec(1 + $I_L6323_651, 2 + 2 * $I_L6251_811, 1 + $I_L6300_803, $i_below_S18) * real( 1 + -2 * mod( ms, 2 ), 8 )
 6326.                         $I_L6323_651 = 1 + $I_L6323_651
 6323.                         if ( $I_L6323_651 >= n_profile ) exit
 6323.                      enddo
 6328.                      $I_L6300_803 = 1 + $I_L6300_803
 6326.                      if ( $I_L6300_803 >= n_red_eigensystem ) exit
 6326.                   enddo
 6326.                endif
 6326.             endif
 6334.             if ( ms <= ls_brdf_trunc ) then
 6337.                if ( isolir == 1 ) then
 6339.                   if ( n_brdf_basis_fnc > 0 ) then
 6339.                      $I_L6339_768 = 0
 6339.                      do
 6340.                         if ( n_profile > 0 ) then
 6340.                            $I_L6340_657 = 0
 6340. !dir$ ivdep
 6340.                            do
 6341.                               b_factor(1 + $I_L6340_657) = 0.0
 6342.                               $I_L6340_657 = 1 + $I_L6340_657
 6340.                               if ( $I_L6340_657 >= n_profile ) exit
 6340.                            enddo
 6340.                         endif
 6343.                         if ( ls_brdf_trunc + -ms + -mod( ms, 2 ) >= 0 ) then
 6346.                            if ( -2 + ls_brdf_trunc + -ms + -mod( ms, 2 ) >= 0 ) then
 6351.                               if ( n_profile > 0 ) then
 6345.                                  $SC_kappa_I7 = kappa(1 + $I_L6251_811, 1)
 6343.                                  $I_L6343_710 = 0
 6343.                                  do
 6345.                                     ksi = $SC_kappa_I7 * f_brdf(1 + $I_L6339_768, 0, ( ms + 2 * $I_L6343_710 ) / 2, ms)
 6346.                                     $I_L6346_659 = 0
 6346. !dir$ ivdep
 6346.                                     do
 6348.                                        ksi = ksi + f_brdf(1 + $I_L6339_768, ( 2 + ms + 2 * $I_L6346_659 ) / 2, ( ms + 2 * $I_L6343_710 ) / 2, ms) * kappa(1 + $I_L6251_811, 2 + $I_L6346_659)
 6350.                                        $I_L6346_659 = 1 + $I_L6346_659
 6346.                                        if ( $I_L6346_659 >= ( ls_brdf_trunc + -ms + -mod( ms, 2 ) ) / 2 ) exit
 6346.                                     enddo
 6351.                                     $I_L6351_661 = 0
 6351. !dir$ ivdep
 6351.                                     do
 6352.                                        b_factor(1 + $I_L6351_661) = b_factor(1 + $I_L6351_661) + ksi * uplm_sol(1 + $I_L6351_661, 1 + 2 * $I_L6343_710)
 6353.                                        $I_L6351_661 = 1 + $I_L6351_661
 6351.                                        if ( $I_L6351_661 >= n_profile ) exit
 6351.                                     enddo
 6354.                                     $I_L6343_710 = 1 + $I_L6343_710
 6353.                                     if ( $I_L6343_710 >= ( 2 + ls_brdf_trunc + -ms + -mod( ms, 2 ) ) / 2 ) exit
 6353.                                  enddo
 6353.                               endif
 6353.                            else if ( n_profile > 0 ) then
 6345.                               $SC_kappa_I7 = kappa(1 + $I_L6251_811, 1)
 6343.                               $I_L6343_720 = 0
 6343.                               do
 6345.                                  ksi = $SC_kappa_I7 * f_brdf(1 + $I_L6339_768, 0, ( ms + 2 * $I_L6343_720 ) / 2, ms)
 6351.                                  $I_L6351_686 = 0
 6351. !dir$ ivdep
 6351.                                  do
 6352.                                     b_factor(1 + $I_L6351_686) = b_factor(1 + $I_L6351_686) + ksi * uplm_sol(1 + $I_L6351_686, 1 + 2 * $I_L6343_720)
 6353.                                     $I_L6351_686 = 1 + $I_L6351_686
 6351.                                     if ( $I_L6351_686 >= n_profile ) exit
 6351.                                  enddo
 6354.                                  $I_L6343_720 = 1 + $I_L6343_720
 6353.                                  if ( $I_L6343_720 >= ( 2 + ls_brdf_trunc + -ms + -mod( ms, 2 ) ) / 2 ) exit
 6353.                               enddo
 6353.                            endif
 6353.                         endif
 6355.                         if ( n_profile > 0 ) then
 6355.                            $I_L6355_663 = 0
 6355. !dir$ ivdep
 6355. !dir$ loop_info (automatic) cache_nt( rho_alb )
 6355.                            do
 6356.                               b(1 + $I_L6355_663, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem) = b(1 + $I_L6355_663, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem) + rho_alb(1 + $I_L6355_663, 1 + $I_L6339_768) * mu_0(1 + $I_L6355_663) * i_direct(1 + $I_L6355_663, n_layer) * b_factor(1 + $I_L6355_663) * real( 1 + -2 * mod( ms, 2 ), 8 )
 6359.                               $I_L6355_663 = 1 + $I_L6355_663
 6355.                               if ( $I_L6355_663 >= n_profile ) exit
 6355.                            enddo
 6355.                         endif
 6360.                         $I_L6339_768 = 1 + $I_L6339_768
 6359.                         if ( $I_L6339_768 >= n_brdf_basis_fnc ) exit
 6359.                      enddo
 6359.                   endif
 6362.                else if ( isolir == 2 ) then
 6363.                   if ( ms == 0 ) then
 6364.                      if ( n_brdf_basis_fnc > 0 ) then
 6366.                         if ( ls_brdf_trunc >= 0 ) then
 6364.                            $I_L6364_766 = 0
 6364.                            do
 6365.                               lambda = 0.0
 6366.                               $I_L6366_708 = 0
 6366.                               do
 6368.                                  lambda_d = 0.0
 6369.                                  $I_L6369_653 = 0
 6369. !dir$ ivdep
 6369.                                  do
 6371.                                     lambda_d = lambda_d + f_brdf(1 + $I_L6364_766, $I_L6369_653, $I_L6366_708, 0) * kappa(1 + $I_L6251_811, 1 + $I_L6369_653)
 6373.                                     $I_L6369_653 = 1 + $I_L6369_653
 6369.                                     if ( $I_L6369_653 >= ( 2 + ls_brdf_trunc ) / 2 ) exit
 6369.                                  enddo
 6374.                                  lambda = lambda + lambda_d * kappa(1, 1 + $I_L6366_708)
 6375.                                  $I_L6366_708 = 1 + $I_L6366_708
 6373.                                  if ( $I_L6366_708 >= ( 2 + ls_brdf_trunc ) / 2 ) exit
 6373.                               enddo
 6376.                               if ( n_profile > 0 ) then
 6376.                                  $I_L6376_655 = 0
 6376. !dir$ ivdep
 6376. !dir$ loop_info (automatic) cache_nt( rho_alb )
 6376.                                  do
 6377.                                     b(1 + $I_L6376_655, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem) = b(1 + $I_L6376_655, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem) + 6.5147001587055997e-1 * lambda * d_planck_flux_surface(1 + $I_L6376_655) * rho_alb(1 + $I_L6376_655, 1 + $I_L6364_766)
 6381.                                     $I_L6376_655 = 1 + $I_L6376_655
 6376.                                     if ( $I_L6376_655 >= n_profile ) exit
 6376.                                  enddo
 6376.                               endif
 6382.                               $I_L6364_766 = 1 + $I_L6364_766
 6381.                               if ( $I_L6364_766 >= n_brdf_basis_fnc ) exit
 6381.                            enddo
 6381.                         endif
 6381.                      endif
 6381.                   endif
 6381.                endif
 6386.                $I_L6386_783 = 0
 6386.                do
 6390.                   if ( n_profile > 0 ) then
 6390.                      $I_L6390_665 = 0
 6390. !dir$ ivdep
 6390.                      do
 6391.                         surface_term(1 + $I_L6390_665, 1 + $I_L6386_783) = 0.0
 6392.                         $I_L6390_665 = 1 + $I_L6390_665
 6390.                         if ( $I_L6390_665 >= n_profile ) exit
 6390.                      enddo
 6390.                   endif
 6393.                   if ( n_brdf_basis_fnc > 0 ) then
 6395.                      if ( ls_brdf_trunc + -ms + -mod( ms, 2 ) >= 0 ) then
 6393.                         $I_L6393_770 = 0
 6393.                         do
 6394.                            phi = 0.0
 6395.                            $I_L6395_712 = 0
 6395.                            do
 6397.                               phi_d = 0.0
 6398.                               $I_L6398_667 = 0
 6398. !dir$ ivdep
 6398.                               do
 6400.                                  phi_d = phi_d + f_brdf(1 + $I_L6393_770, ( ms + 2 * $I_L6395_712 ) / 2, ( ms + 2 * $I_L6398_667 ) / 2, ms) * cgk(1 + $I_L6398_667, 1 + $I_L6386_783)
 6402.                                  $I_L6398_667 = 1 + $I_L6398_667
 6398.                                  if ( $I_L6398_667 >= ( 2 + ls_brdf_trunc + -ms + -mod( ms, 2 ) ) / 2 ) exit
 6398.                               enddo
 6403.                               phi = phi + phi_d * kappa(1 + $I_L6251_811, 1 + $I_L6395_712)
 6404.                               $I_L6395_712 = 1 + $I_L6395_712
 6402.                               if ( $I_L6395_712 >= ( 2 + ls_brdf_trunc + -ms + -mod( ms, 2 ) ) / 2 ) exit
 6402.                            enddo
 6405.                            if ( n_profile > 0 ) then
 6405.                               $I_L6405_669 = 0
 6405. !dir$ ivdep
 6405.                               do
 6406.                                  surface_term(1 + $I_L6405_669, 1 + $I_L6386_783) = surface_term(1 + $I_L6405_669, 1 + $I_L6386_783) + phi * rho_alb(1 + $I_L6405_669, 1 + $I_L6393_770) * real( 1 + -2 * mod( ms, 2 ), 8 )
 6408.                                  $I_L6405_669 = 1 + $I_L6405_669
 6405.                                  if ( $I_L6405_669 >= n_profile ) exit
 6405.                               enddo
 6405.                            endif
 6409.                            $I_L6393_770 = 1 + $I_L6393_770
 6408.                            if ( $I_L6393_770 >= n_brdf_basis_fnc ) exit
 6408.                         enddo
 6408.                      endif
 6408.                   endif
 6412.                   if ( n_profile > 0 ) then
 6412.                      $I_L6412_671 = 0
 6412. !dir$ ivdep
 6412. !dir$ loop_info (automatic) cache_nt( source_bottom )
 6412.                      do
 6413.                         b(1 + $I_L6412_671, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem) = b(1 + $I_L6412_671, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem) + -( surface_term(1 + $I_L6412_671, 1 + $I_L6386_783) * source_bottom(1 + $I_L6412_671, 1 + $I_L6386_783, $i_below_S18) )
 6415.                         $I_L6412_671 = 1 + $I_L6412_671
 6412.                         if ( $I_L6412_671 >= n_profile ) exit
 6412.                      enddo
 6412.                   endif
 6417.                   if ( n_red_eigensystem > 0 ) then
 6421.                      if ( n_profile > 0 ) then
 6417.                         $I_L6417_714 = 0
 6417. !dir$ blocking_size( 1, 1 )
 6417.                         do
 6421.                            $I_L6421_673 = 0
 6421. !dir$ ivdep
 6421. !dir$ blocking_size( 256, 256 )
 6421.                            do
 6422.                               a(1 + $I_L6421_673, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem, 1 + $I_L6417_714) = a(1 + $I_L6421_673, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem, 1 + $I_L6417_714) + surface_term(1 + $I_L6421_673, 1 + $I_L6386_783) * eig_vec(1 + $I_L6421_673, 1 + $I_L6386_783, 1 + $I_L6417_714, $i_below_S18) * real( 1 + -2 * mod( $I_L6386_783, 2 ), 8 )
 6425.                               a(1 + $I_L6421_673, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem, 1 + n_red_eigensystem + $I_L6417_714) = a(1 + $I_L6421_673, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem, 1 + n_red_eigensystem + $I_L6417_714) + eig_vec(1 + $I_L6421_673, 1 + $I_L6386_783, 1 + $I_L6417_714, $i_below_S18) * surface_term(1 + $I_L6421_673, 1 + $I_L6386_783)
 6427.                               $I_L6421_673 = 1 + $I_L6421_673
 6421.                               if ( $I_L6421_673 >= n_profile ) exit
 6421.                            enddo
 6429.                            $I_L6417_714 = 1 + $I_L6417_714
 6427.                            if ( $I_L6417_714 >= n_red_eigensystem ) exit
 6427.                         enddo
 6427.                      endif
 6427.                   endif
 6431.                   $I_L6386_783 = 1 + $I_L6386_783
 6429.                   if ( $I_L6386_783 >= 1 + ls_trunc + -ms ) exit
 6429.                enddo
 6429.             endif
 6435.             if ( n_red_eigensystem > 0 ) then
 6437.                if ( n_profile > 0 ) then
 6435.                   $I_L6435_716 = 0
 6435.                   do
 6437.                      $I_L6437_675 = 0
 6437. !dir$ ivdep
 6437. !dir$ loop_info (automatic) cache_nt( theta )
 6437.                      do
 6438.                         a(1 + $I_L6437_675, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem, 1 + $I_L6435_716) = theta(1 + $I_L6437_675, 1 + $I_L6435_716, $i_below_S18) * a(1 + $I_L6437_675, 1 + $I_L6251_811 + -n_red_eigensystem + 2 * n_layer * n_red_eigensystem, 1 + $I_L6435_716)
 6439.                         $I_L6437_675 = 1 + $I_L6437_675
 6437.                         if ( $I_L6437_675 >= n_profile ) exit
 6437.                      enddo
 6440.                      $I_L6435_716 = 1 + $I_L6435_716
 6439.                      if ( $I_L6435_716 >= n_red_eigensystem ) exit
 6439.                   enddo
 6439.                endif
 6439.             endif
 6442.             $I_L6251_811 = 1 + $I_L6251_811
 6440.             if ( $I_L6251_811 >= ( 1 + ls_trunc + -ms ) / 2 ) exit
 6440.          enddo
 6440.       endif
 6445.       if ( i_sph_algorithm == 2 ) then
 6448.          call calc_surf_rad( n_profile, n_layer, tau(1, 1), ms, ls_trunc, euler_factor, isolir, i_direct(1, n_layer), mu_0(1), d_planck_flux_surface(1), n_brdf_basis_fnc, ls_brdf_trunc, f_brdf(1, 0, 0, 0), rho_alb(1, 1), brdf_sol(1, 1, 1), brdf_hemi(1, 1, 1), cgk(1, 1), n_viewing_level, i_rad_layer(1), frac_rad_layer(1), n_direction, mu_v(1, 1), up_lm(1, 1, 1), azim_factor(1, 1), n_red_eigensystem, eig_vec(1, 1, 1, $i_below_S18), theta(1, 1, $i_below_S18), source_bottom(1, 1, $i_below_S18), radiance(1, 1, 1), weight_u(1, 1, 1, 1 + 2 * n_layer * n_red_eigensystem + -2 * n_red_eigensystem), nd_profile, nd_layer, nd_direction, nd_viewing_level, nd_red_eigensystem, nd_max_order, nd_brdf_basis_fnc, nd_brdf_trunc )
 6465.          if ( ms == 0 ) then
 6466.             tm$1176 = loc( radiance(1, 1, 1) )
 6466.             radiance = _copyin( radiance(1, 1, 1) )
 6466.             t$208 = nd_profile
 6466.             t$209 = nd_layer
 6466.             t$1765 = max( 0, nd_profile )
 6466.             t$1766 = max( 0, nd_profile )
 6466.             t$1767 = max( 0, nd_layer )
 6466.             t$1768 = max( 0, nd_profile ) * max( 0, nd_layer )
 6466.             t$210 = nd_viewing_level
 6466.             t$1769 = max( 0, nd_viewing_level )
 6466.             t$211 = nd_direction
 6466.             t$1770 = max( 0, nd_direction )
 6466.             t$1771 = max( 0, nd_profile ) * max( 0, nd_direction )
 6466.             t$1772 = max( 0, nd_profile ) * max( 0, nd_viewing_level )
 6466.             t$1773 = max( 0, nd_profile ) * max( 0, nd_direction ) * max( 0, nd_viewing_level )
 6466.             t$1776 = 4 * max( 0, nd_profile )
 6466.             t$1777 = max( 0, nd_profile ) * max( 0, nd_viewing_level )
 6466.             t$1778 = 8 * ( 7 + 4 * max( 0, nd_profile ) ) / 8
 6466.             t$1780 = t$1778 + 8 * max( 0, nd_profile ) * max( 0, nd_viewing_level )
 6466.             t$1774 = int( _alloc( t$1778 + 8 * max( 0, nd_profile ) * max( 0, nd_viewing_level ) ), 8 )
 6466.             t$1775 = t$1774
 6466.             t$1779 = t$1778 + t$1774
 6466.             if ( n_viewing_level > 0 ) then
 6466.                $I_L6466_805 = 0
 6466.                do
 6466.                   if ( n_profile > 0 ) then
 6466.                      $SCA_frac_rad_layer_I5 = frac_rad_layer(1 + $I_L6466_805)
 6466.                      $SCA_i_rad_layer_I6 = i_rad_layer(1 + $I_L6466_805)
 6466.                      $I_L6466_677 = 0
 6466. !dir$ ivdep
 6466.                      do
 6466.                         tau_c(1 + $I_L6466_677, 1 + $I_L6466_805) = $SCA_frac_rad_layer_I5 * tau(1 + $I_L6466_677, $SCA_i_rad_layer_I6)
 6466.                         $I_L6466_677 = 1 + $I_L6466_677
 6466.                         if ( $I_L6466_677 >= n_profile ) exit
 6466.                      enddo
 6466.                   endif
 6466.                   $t_S66 = -1 + i_rad_layer(1 + $I_L6466_805)
 6466.                   if ( -1 + i_rad_layer(1 + $I_L6466_805) > 0 ) then
 6466.                      if ( n_profile > 0 ) then
 6466.                         $I_L6466_799 = 0
 6466.                         do
 6466.                            $I_L6466_772 = 0
 6466.                            do
 6466.                               $I_L6466_749 = 0
 6466. !dir$ shortloop16
 6466. !dir$ blocking_size( 4, 4 )
 6466.                               do
 6466.                                  $I_L6466_679 = 0
 6466. !dir$ ivdep
 6466. !dir$ blocking_size( 256, 256 )
 6466.                                  do
 6466.                                     tau_c(1 + $I_L6466_679 + 256 * $I_L6466_772, 1 + $I_L6466_805) = tau(1 + $I_L6466_679 + 256 * $I_L6466_772, $t_S66 + -$I_L6466_749 + -4 * $I_L6466_799) + tau_c(1 + $I_L6466_679 + 256 * $I_L6466_772, 1 + $I_L6466_805)
 6466.                                     $I_L6466_679 = 1 + $I_L6466_679
 6466.                                     if ( $I_L6466_679 >= min( n_profile, 256 + 256 * $I_L6466_772 ) + -256 * $I_L6466_772 ) exit
 6466.                                  enddo
 6466.                                  $I_L6466_749 = 1 + $I_L6466_749
 6466.                                  if ( $I_L6466_749 >= min( $t_S66, 4 + 4 * $I_L6466_799 ) + -4 * $I_L6466_799 ) exit
 6466.                               enddo
 6466.                               $I_L6466_772 = 1 + $I_L6466_772
 6466.                               if ( $I_L6466_772 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
 6466.                            enddo
 6466.                            $I_L6466_799 = 1 + $I_L6466_799
 6466.                            if ( $I_L6466_799 >= 1 + max( 0, -1 + _rsh( 3 + $t_S66, 2 ) ) ) exit
 6466.                         enddo
 6466.                      endif
 6466.                   endif
 6466.                   $I_L6466_805 = 1 + $I_L6466_805
 6466.                   if ( $I_L6466_805 >= n_viewing_level ) exit
 6466.                enddo
 6466.             endif
 6466.             if ( n_direction > 0 ) then
 6466.                $I_L6466_774 = 0
 6466.                do
 6466.                   $n_list_down_S71 = 0
 6466.                   if ( n_profile > 0 ) then
 6466.                      $I_L6466_682 = 0
 6466. !dir$ ivdep
 6466.                      do
 6466.                         if ( mu_v(1 + $I_L6466_682, 1 + $I_L6466_774) < 0.0 ) then
 6466.                            $n_list_down_S71 = 1 + $n_list_down_S71
 6466.                            list_down($n_list_down_S71) = ( 1 + $I_L6466_682 )
 6466.                         endif
 6466.                         $I_L6466_682 = 1 + $I_L6466_682
 6466.                         if ( $I_L6466_682 >= n_profile ) exit
 6466.                      enddo
 6466.                   endif
 6466.                   if ( n_viewing_level > 0 ) then
 6466.                      if ( $n_list_down_S71 > 0 ) then
 6466.                         $I_L6466_718 = 0
 6466. !dir$ blocking_size( 1, 1 )
 6466.                         do
 6466.                            $I_L6466_684 = 0
 6466. !dir$ ivdep
 6466. !dir$ blocking_size( 256, 256 )
 6466.                            do
 6466.                               $l_S73 = list_down(1 + $I_L6466_684)
 6466.                               radiance($l_S73, 1 + $I_L6466_718, 1 + $I_L6466_774) = _vu_plus( radiance($l_S73, 1 + $I_L6466_718, 1 + $I_L6466_774), ( 3.1830988618379069e-1 * flux_down_inc($l_S73) ) * _expn( ( tau_c($l_S73, 1 + $I_L6466_718) * 1.0/mu_v($l_S73, 1 + $I_L6466_774) ) ) )
 6466.                               $I_L6466_684 = 1 + $I_L6466_684
 6466.                               if ( $I_L6466_684 >= $n_list_down_S71 ) exit
 6466.                            enddo
 6466.                            $I_L6466_718 = 1 + $I_L6466_718
 6466.                            if ( $I_L6466_718 >= n_viewing_level ) exit
 6466.                         enddo
 6466.                      endif
 6466.                   endif
 6466.                   $I_L6466_774 = 1 + $I_L6466_774
 6466.                   if ( $I_L6466_774 >= n_direction ) exit
 6466.                enddo
 6466.             endif
 6466.             _free( t$1774 )
 6466.             radiance(1, 1, 1) = _copyout( radiance )
 6466.          endif
 6466.       endif
 5595.       _free( t$1398 )
 6479.       return
 6479.       end
 6479.       
 6516.       
 6516.       subroutine calc_brdf( isolir, ms_min, ms_max, ia_sph_mm, uplm_sol, uplm_zero, n_brdf_basis_fnc, ls_brdf_trunc, f_brdf, n_profile, n_direction, direction, brdf_sol, brdf_hemi, nd_profile, nd_radiance_profile, nd_direction, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc )
 6516.       t$163 = nd_max_order
 6516.       t$1453 = 1 + nd_max_order
 6569.       t$1454 = _zla( 0, 1 + nd_max_order )
 6516.       t$170 = nd_profile
 6516.       t$164 = nd_sph_coeff
 6590.       t$1455 = _zla( 0, nd_profile )
 6516.       t$1456 = _zla( 0, nd_profile )
 6590.       t$1457 = _zla( 0, nd_sph_coeff )
 6516.       t$1458 = _zla( 0, nd_profile ) * _zla( 0, nd_sph_coeff )
 6516.       t$165 = nd_brdf_basis_fnc
 6516.       t$166 = nd_brdf_trunc / 2
 6516.       t$167 = nd_brdf_trunc
 6580.       t$1459 = _zla( 0, nd_brdf_basis_fnc )
 6516.       t$1460 = _zla( 0, nd_brdf_basis_fnc )
 6516.       t$1461 = 1 + t$166
 6580.       t$1462 = _zla( 0, 1 + t$166 )
 6516.       t$1463 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$166 )
 6516.       t$1464 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$166 ) * _zla( 0, 1 + t$166 )
 6516.       t$1465 = 1 + nd_brdf_trunc
 6580.       t$1466 = _zla( 0, 1 + nd_brdf_trunc )
 6516.       t$1467 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$166 ) * _zla( 0, 1 + t$166 ) * _zla( 0, 1 + nd_brdf_trunc )
 6516.       t$168 = nd_radiance_profile
 6516.       t$169 = nd_direction
 6587.       t$1468 = _zla( 0, nd_radiance_profile )
 6516.       t$1469 = _zla( 0, nd_radiance_profile )
 6587.       t$1470 = _zla( 0, nd_direction )
 6516.       t$1471 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
 6516.       t$1472 = 2 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
 6516.       t$1473 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
 6516.       t$1474 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_direction )
 6516.       t$1475 = _zla( 0, nd_profile ) * _zla( 0, nd_direction )
 6627.       t$1478 = 8 * _zla( 0, nd_profile ) * _zla( 0, nd_direction )
 6516.       t$171 = ( 1 + nd_brdf_trunc )
 6632.       t$1479 = _zla( 0, ( 1 + nd_brdf_trunc ) )
 6632.       t$1480 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_direction ) ) / 8
 6632.       t$1482 = t$1480 + 8 * _zla( 0, ( 1 + nd_brdf_trunc ) )
 6629.       t$1483 = 8 * ( 7 + t$1480 + 8 * _zla( 0, ( 1 + nd_brdf_trunc ) ) ) / 8
 6629.       t$1485 = t$1483 + 8 * _zla( 0, ( 1 + nd_brdf_trunc ) )
 6516.       t$1486 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_brdf_trunc )
 6625.       t$1487 = 8 * ( 7 + t$1483 + 8 * _zla( 0, ( 1 + nd_brdf_trunc ) ) ) / 8
 6625.       t$1489 = t$1487 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_brdf_trunc )
 6516.       t$1490 = _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_brdf_trunc ) )
 6516.       t$1491 = _zla( 0, nd_profile ) * _zla( 0, nd_direction ) * _zla( 0, ( 1 + nd_brdf_trunc ) )
 6622.       t$1492 = 8 * ( 7 + t$1487 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_brdf_trunc ) ) / 8
 6622.       t$1494 = t$1492 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_direction ) * _zla( 0, ( 1 + nd_brdf_trunc ) )
 6516.       t$1476 = int( _alloc( t$1492 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_direction ) * _zla( 0, ( 1 + nd_brdf_trunc ) ) ), 8 )
 6627.       t$1477 = t$1476
 6632.       t$1481 = t$1480 + t$1476
 6629.       t$1484 = t$1483 + t$1476
 6625.       t$1488 = t$1487 + t$1476
 6622.       t$1493 = t$1492 + t$1476
 6641.       if ( isolir == 1 ) then
 6644.          if ( n_direction > 0 ) then
 6645.             if ( n_brdf_basis_fnc > 0 ) then
 6646.                if ( n_profile > 0 ) then
 6644.                   $I_L6644_383 = 0
 6644.                   do
 6645.                      $I_L6645_356 = 0
 6645.                      do
 6646.                         $I_L6646_308 = 0
 6646. !dir$ ivdep
 6646. !dir$ loop_info (automatic) cache_nt( brdf_sol )
 6646.                         do
 6647.                            brdf_sol(1 + $I_L6646_308, 1 + $I_L6645_356, 1 + $I_L6644_383) = 0.0
 6648.                            $I_L6646_308 = 1 + $I_L6646_308
 6646.                            if ( $I_L6646_308 >= n_profile ) exit
 6646.                         enddo
 6649.                         $I_L6645_356 = 1 + $I_L6645_356
 6648.                         if ( $I_L6645_356 >= n_brdf_basis_fnc ) exit
 6648.                      enddo
 6650.                      $I_L6644_383 = 1 + $I_L6644_383
 6649.                      if ( $I_L6644_383 >= n_direction ) exit
 6649.                   enddo
 6649.                endif
 6649.             endif
 6649.          endif
 6653.          if ( min( ms_max, ls_brdf_trunc ) + -ms_min >= 0 ) then
 6653.             $I_L6653_421 = 0
 6653.             do
 6656.                if ( ms_min + $I_L6653_421 == 0 ) then
 6657.                   if ( n_direction > 0 ) then
 6658.                      if ( n_profile > 0 ) then
 6657.                         $I_L6657_360 = 0
 6657.                         do
 6658.                            $I_L6658_312 = 0
 6658. !dir$ ivdep
 6658. !dir$ loop_info (automatic) cache_nt( azim_factor )
 6658.                            do
 6659.                               azim_factor(1 + $I_L6658_312, 1 + $I_L6657_360) = 1.0
 6660.                               $I_L6658_312 = 1 + $I_L6658_312
 6658.                               if ( $I_L6658_312 >= n_profile ) exit
 6658.                            enddo
 6661.                            $I_L6657_360 = 1 + $I_L6657_360
 6660.                            if ( $I_L6657_360 >= n_direction ) exit
 6660.                         enddo
 6660.                      endif
 6660.                   endif
 6662.                else if ( n_direction > 0 ) then
 6664.                   if ( n_profile > 0 ) then
 6663.                      $I_L6663_358 = 0
 6663.                      do
 6664.                         $I_L6664_310 = 0
 6664. !dir$ ivdep
 6664. !dir$ loop_info (automatic) cache_nt( azim_factor )
 6664.                         do
 6665.                            $Flat_S8 = cos( direction(1 + $I_L6664_310, 1 + $I_L6663_358, 2) * real( ms_min + $I_L6653_421, 8 ) )
 6665.                            azim_factor(1 + $I_L6664_310, 1 + $I_L6663_358) = 2.0 * $Flat_S8
 6667.                            $I_L6664_310 = 1 + $I_L6664_310
 6664.                            if ( $I_L6664_310 >= n_profile ) exit
 6664.                         enddo
 6668.                         $I_L6663_358 = 1 + $I_L6663_358
 6667.                         if ( $I_L6663_358 >= n_direction ) exit
 6667.                      enddo
 6667.                   endif
 6667.                endif
 6673.                if ( n_direction > 0 ) then
 6673.                   $I_L6673_385 = 0
 6673.                   do
 6674.                      tm$1184 = loc( direction(1, 1 + $I_L6673_385, 1) )
 6674.                      x = _copyin( direction(1, 1 + $I_L6673_385, 1) )
 6674.                      tm$1186 = loc( up_lm(1, 1, 1 + $I_L6673_385) )
 6674.                      up_lm = _copyin( up_lm(1, 1, 1 + $I_L6673_385) )
 6674.                      t$289 = nd_profile
 6674.                      t$1973 = max( 0, nd_profile )
 6674.                      t$290 = 1 + ls_brdf_trunc + -ms_min + -$I_L6653_421
 6674.                      t$1974 = max( 0, nd_profile )
 6674.                      t$1975 = max( 0, 1 + ls_brdf_trunc + -ms_min + -$I_L6653_421 )
 6674.                      t$1976 = max( 0, nd_profile ) * max( 0, 1 + ls_brdf_trunc + -ms_min + -$I_L6653_421 )
 6674.                      product = 1.0
 6674.                      if ( ( ms_min + $I_L6653_421 ) > 0 ) then
 6674.                         $I_L6674_314 = 0
 6674. !dir$ ivdep
 6674.                         do
 6674.                            product = product * ( 1.0 + -( 5.0e-1 * 1.0/( real( 1 + $I_L6674_314, 8 ) ) ) )
 6674.                            $I_L6674_314 = 1 + $I_L6674_314
 6674.                            if ( $I_L6674_314 >= ms_min + $I_L6653_421 ) exit
 6674.                         enddo
 6674.                         if ( n_profile > 0 ) then
 6674.                            $I_L6674_316 = 0
 6674. !dir$ ivdep
 6674.                            do
 6674.                               up_lm(1 + $I_L6674_316, 1) = _sqrt( 7.9577471545947673e-2 * product * ( 1.0 + -( x(1 + $I_L6674_316) * x(1 + $I_L6674_316) ) ) ** ( ms_min + $I_L6653_421 ) * ( 1.0 + 2.0 * real( ms_min + $I_L6653_421, 8 ) ) ) * cvmg( -1.0, 1.0, and( 1, ( ms_min + $I_L6653_421 ) ) /= 0 )
 6674.                               $I_L6674_316 = 1 + $I_L6674_316
 6674.                               if ( $I_L6674_316 >= n_profile ) exit
 6674.                            enddo
 6674.                         endif
 6674.                      else if ( n_profile > 0 ) then
 6674.                         $I_L6674_318 = 0
 6674. !dir$ ivdep
 6674.                         do
 6674.                            up_lm(1 + $I_L6674_318, 1) = 2.8209479177387814e-1
 6674.                            $I_L6674_318 = 1 + $I_L6674_318
 6674.                            if ( $I_L6674_318 >= n_profile ) exit
 6674.                         enddo
 6674.                      endif
 6674.                      if ( ( ms_min + $I_L6653_421 ) < ls_brdf_trunc ) then
 6674.                         if ( n_profile > 0 ) then
 6674.                            $I_L6674_320 = 0
 6674. !dir$ ivdep
 6674.                            do
 6674.                               up_lm(1 + $I_L6674_320, 2) = up_lm(1 + $I_L6674_320, 1) * x(1 + $I_L6674_320) * _sqrt( 3.0 + 2.0 * real( ms_min + $I_L6653_421, 8 ) )
 6674.                               $I_L6674_320 = 1 + $I_L6674_320
 6674.                               if ( $I_L6674_320 >= n_profile ) exit
 6674.                            enddo
 6674.                         endif
 6674.                      endif
 6674.                      if ( ( -2 + ls_brdf_trunc + -ms_min + -$I_L6653_421 ) >= 0 ) then
 6674.                         if ( n_profile > 0 ) then
 6674.                            $I_L6674_362 = 0
 6674.                            do
 6674.                               $I_L6674_322 = 0
 6674. !dir$ ivdep
 6674.                               do
 6674.                                  up_lm(1 + $I_L6674_322, 3 + $I_L6674_362) = -( up_lm(1 + $I_L6674_322, 1 + $I_L6674_362) * _sqrt( 1.0/( ( real( ms_min + $I_L6653_421, 8 ) + real( 2 + ms_min + $I_L6674_362 + $I_L6653_421, 8 ) ) * ( real( 2 + ms_min + $I_L6674_362 + $I_L6653_421, 8 ) + -( real( ms_min + $I_L6653_421, 8 ) ) ) * ( -3.0 + 2.0 * real( 2 + ms_min + $I_L6674_362 + $I_L6653_421, 8 ) ) ) * ( ( 1.0 + 2.0 * real( 2 + ms_min + $I_L6674_362 + $I_L6653_421, 8 ) ) * ( -1.0 + real( ms_min + $I_L6653_421, 8 ) + real( 2 + ms_min + $I_L6674_362 + $I_L6653_421, 8 ) ) * ( -1.0 + real( 2 + ms_min + $I_L6674_362 + $I_L6653_421, 8 ) + -( real( ms_min + $I_L6653_421, 8 ) ) ) ) ) ) + up_lm(1 + $I_L6674_322, 2 + $I_L6674_362) * x(1 + $I_L6674_322) * _sqrt( 1.0/( ( real( 2 + ms_min + $I_L6674_362 + $I_L6653_421, 8 ) + -( real( ms_min + $I_L6653_421, 8 ) ) ) * ( real( ms_min + $I_L6653_421, 8 ) + real( 2 + ms_min + $I_L6674_362 + $I_L6653_421, 8 ) ) ) * ( ( 1.0 + 2.0 * real( 2 + ms_min + $I_L6674_362 + $I_L6653_421, 8 ) ) * ( -1.0 + 2.0 * real( 2 + ms_min + $I_L6674_362 + $I_L6653_421, 8 ) ) ) )
 6674.                                  $I_L6674_322 = 1 + $I_L6674_322
 6674.                                  if ( $I_L6674_322 >= n_profile ) exit
 6674.                               enddo
 6674.                               $I_L6674_362 = 1 + $I_L6674_362
 6674.                               if ( $I_L6674_362 >= -1 + ls_brdf_trunc + -ms_min + -$I_L6653_421 ) exit
 6674.                            enddo
 6674.                         endif
 6674.                      endif
 6674.                      up_lm(1, 1, 1 + $I_L6673_385) = _copyout( up_lm )
 6674.                      direction(1, 1 + $I_L6673_385, 1) = _copyout( x )
 6677.                      $I_L6673_385 = 1 + $I_L6673_385
 6674.                      if ( $I_L6673_385 >= n_direction ) exit
 6674.                   enddo
 6674.                endif
 6680.                if ( n_brdf_basis_fnc > 0 ) then
 6680.                   $I_L6680_417 = 0
 6680.                   do
 6685.                      if ( ( ls_brdf_trunc + -ms_min + -$I_L6653_421 ) >= 0 ) then
 6685.                         $I_L6685_407 = 0
 6685.                         do
 6686.                            if ( n_profile > 0 ) then
 6686.                               $SCA_f_brdf_I2 = f_brdf(1 + $I_L6680_417, ( ms_min + $I_L6653_421 + 2 * $I_L6685_407 ) / 2, ( ms_min + $I_L6653_421 ) / 2, ms_min + $I_L6653_421)
 6687.                               $SC_ia_sph_mm_I4 = ia_sph_mm(ms_min + $I_L6653_421)
 6686.                               $I_L6686_324 = 0
 6686. !dir$ ivdep
 6686.                               do
 6687.                                  ss1(1 + $I_L6686_324, ms_min + $I_L6653_421 + 2 * $I_L6685_407) = $SCA_f_brdf_I2 * uplm_sol(1 + $I_L6686_324, $SC_ia_sph_mm_I4)
 6689.                                  $I_L6686_324 = 1 + $I_L6686_324
 6686.                                  if ( $I_L6686_324 >= n_profile ) exit
 6686.                               enddo
 6686.                            endif
 6690.                            if ( ( -2 + ls_brdf_trunc + -ms_min + -$I_L6653_421 ) >= 0 ) then
 6691.                               if ( n_profile > 0 ) then
 6692.                                  $SC_ia_sph_mm_I4 = ia_sph_mm(ms_min + $I_L6653_421)
 6690.                                  $I_L6690_403 = 0
 6690.                                  do
 6691.                                     $I_L6691_387 = 0
 6691.                                     do
 6690.                                        $I_L6690_375 = 0
 6690. !dir$ shortloop16
 6690. !dir$ blocking_size( 4, 4 )
 6690.                                        do
 6691.                                           $SCA_f_brdf_I3 = f_brdf(1 + $I_L6680_417, ( ms_min + $I_L6653_421 + 2 * $I_L6685_407 ) / 2, ( 2 + ms_min + $I_L6653_421 + 2 * $I_L6690_375 + 8 * $I_L6690_403 ) / 2, ms_min + $I_L6653_421)
 6691.                                           $I_L6691_326 = 0
 6691. !dir$ ivdep
 6691. !dir$ blocking_size( 256, 256 )
 6691.                                           do
 6692.                                              ss1(1 + $I_L6691_326 + 256 * $I_L6691_387, ms_min + $I_L6653_421 + 2 * $I_L6685_407) = $SCA_f_brdf_I3 * uplm_sol(1 + $I_L6691_326 + 256 * $I_L6691_387, 2 + $SC_ia_sph_mm_I4 + 2 * $I_L6690_375 + 8 * $I_L6690_403)
 6691.                                              $I_L6691_326 = 1 + $I_L6691_326
 6691.                                              if ( $I_L6691_326 >= min( n_profile, 256 + 256 * $I_L6691_387 ) + -256 * $I_L6691_387 ) exit
 6691.                                           enddo
 6690.                                           $I_L6690_375 = 1 + $I_L6690_375
 6690.                                           if ( $I_L6690_375 >= min( ( ls_brdf_trunc + -ms_min + -$I_L6653_421 ) / 2, 4 + 4 * $I_L6690_403 ) + -4 * $I_L6690_403 ) exit
 6690.                                        enddo
 6691.                                        $I_L6691_387 = 1 + $I_L6691_387
 6694.                                        if ( $I_L6691_387 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
 6694.                                     enddo
 6690.                                     $I_L6690_403 = 1 + $I_L6690_403
 6690.                                     if ( $I_L6690_403 >= 1 + max( 0, -1 + _rsh( 3 + ( ls_brdf_trunc + -ms_min + -$I_L6653_421 ) / 2, 2 ) ) ) exit
 6690.                                  enddo
 6690.                               endif
 6690.                            endif
 6696.                            $I_L6685_407 = 1 + $I_L6685_407
 6695.                            if ( $I_L6685_407 >= ( 2 + ls_brdf_trunc + -ms_min + -$I_L6653_421 ) / 2 ) exit
 6695.                         enddo
 6695.                      endif
 6700.                      if ( n_direction > 0 ) then
 6701.                         if ( ( ls_brdf_trunc + -ms_min + -$I_L6653_421 ) >= 0 ) then
 6702.                            if ( n_profile > 0 ) then
 6700.                               $I_L6700_415 = 0
 6700.                               do
 6701.                                  $I_L6701_409 = 0
 6701.                                  do
 6702.                                     $I_L6702_405 = 0
 6702.                                     do
 6700.                                        $I_L6700_389 = 0
 6700.                                        if ( min( n_direction, 2 + 2 * $I_L6700_415 ) + -2 * $I_L6700_415 >= 2 ) then
 6700.                                           $I_L6700_427 = 0
 6700. !dir$ shortloop16
 6700. !dir$ blocking_size( 2, 2 )
 6700.                                           do
 6701.                                              $I_L6701_378 = 0
 6701.                                              if ( min( ( 2 + ls_brdf_trunc + -ms_min + -$I_L6653_421 ) / 2, 8 + 8 * $I_L6701_409 ) + -8 * $I_L6701_409 >= 2 ) then
 6701.                                                 $I_L6701_423 = 0
 6701. !dir$ shortloop16
 6701. !dir$ blocking_size( 8, 8 )
 6701.                                                 do
 6702.                                                    $I_L6702_329 = 0
 6702. !dir$ ivdep
 6702. !dir$ loop_info (automatic) cache_nt( up_lm )
 6702. !dir$ blocking_size( 256, 256 )
 6702.                                                    do
 6703.                                                       brdf_sol(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6680_417, 1 + 2 * $I_L6700_415 + 2 * $I_L6700_427) = brdf_sol(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6680_417, 1 + 2 * $I_L6700_415 + 2 * $I_L6700_427) + ss1(1 + $I_L6702_329 + 256 * $I_L6702_405, ms_min + $I_L6653_421 + 16 * $I_L6701_409 + 4 * $I_L6701_423) * up_lm(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + 16 * $I_L6701_409 + 4 * $I_L6701_423, 1 + 2 * $I_L6700_415 + 2 * $I_L6700_427) * azim_factor(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + 2 * $I_L6700_415 + 2 * $I_L6700_427)
 6703.                                                       brdf_sol(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6680_417, 2 + 2 * $I_L6700_415 + 2 * $I_L6700_427) = brdf_sol(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6680_417, 2 + 2 * $I_L6700_415 + 2 * $I_L6700_427) + ss1(1 + $I_L6702_329 + 256 * $I_L6702_405, ms_min + $I_L6653_421 + 16 * $I_L6701_409 + 4 * $I_L6701_423) * up_lm(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + 16 * $I_L6701_409 + 4 * $I_L6701_423, 2 + 2 * $I_L6700_415 + 2 * $I_L6700_427) * azim_factor(1 + $I_L6702_329 + 256 * $I_L6702_405, 2 + 2 * $I_L6700_415 + 2 * $I_L6700_427)
 6703.                                                       brdf_sol(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6680_417, 1 + 2 * $I_L6700_415 + 2 * $I_L6700_427) = brdf_sol(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6680_417, 1 + 2 * $I_L6700_415 + 2 * $I_L6700_427) + ss1(1 + $I_L6702_329 + 256 * $I_L6702_405, 2 + ms_min + $I_L6653_421 + 16 * $I_L6701_409 + 4 * $I_L6701_423) * azim_factor(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + 2 * $I_L6700_415 + 2 * $I_L6700_427) * up_lm(1 + $I_L6702_329 + 256 * $I_L6702_405, 3 + 16 * $I_L6701_409 + 4 * $I_L6701_423, 1 + 2 * $I_L6700_415 + 2 * $I_L6700_427)
 6703.                                                       brdf_sol(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6680_417, 2 + 2 * $I_L6700_415 + 2 * $I_L6700_427) = brdf_sol(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6680_417, 2 + 2 * $I_L6700_415 + 2 * $I_L6700_427) + ss1(1 + $I_L6702_329 + 256 * $I_L6702_405, 2 + ms_min + $I_L6653_421 + 16 * $I_L6701_409 + 4 * $I_L6701_423) * azim_factor(1 + $I_L6702_329 + 256 * $I_L6702_405, 2 + 2 * $I_L6700_415 + 2 * $I_L6700_427) * up_lm(1 + $I_L6702_329 + 256 * $I_L6702_405, 3 + 16 * $I_L6701_409 + 4 * $I_L6701_423, 2 + 2 * $I_L6700_415 + 2 * $I_L6700_427)
 6702.                                                       $I_L6702_329 = 1 + $I_L6702_329
 6702.                                                       if ( $I_L6702_329 >= min( n_profile, 256 + 256 * $I_L6702_405 ) + -256 * $I_L6702_405 ) exit
 6702.                                                    enddo
 6701.                                                    $I_L6701_423 = 1 + $I_L6701_423
 6701.                                                    if ( $I_L6701_423 >= _rsh( min( ( 2 + ls_brdf_trunc + -ms_min + -$I_L6653_421 ) / 2, 8 + 8 * $I_L6701_409 ) + -8 * $I_L6701_409, 1 ) ) exit
 6701.                                                 enddo
 6701.                                                 $I_L6701_378 = and( 0xfffffffffffffffeUL, min( ( 2 + ls_brdf_trunc + -ms_min + -$I_L6653_421 ) / 2, 8 + 8 * $I_L6701_409 ) + -8 * $I_L6701_409 )
 6701.                                              endif
 6701.                                              if ( $I_L6701_378 < min( ( 2 + ls_brdf_trunc + -ms_min + -$I_L6653_421 ) / 2, 8 + 8 * $I_L6701_409 ) + -8 * $I_L6701_409 ) then
 6702.                                                 $I_L6702_329 = 0
 6702. !dir$ ivdep
 6702. !dir$ loop_info (automatic) cache_nt( up_lm )
 6702. !dir$ blocking_size( 256, 256 )
 6702.                                                 do
 6703.                                                    brdf_sol(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6680_417, 1 + 2 * $I_L6700_415 + 2 * $I_L6700_427) = brdf_sol(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6680_417, 1 + 2 * $I_L6700_415 + 2 * $I_L6700_427) + ss1(1 + $I_L6702_329 + 256 * $I_L6702_405, ms_min + $I_L6653_421 + 2 * $I_L6701_378 + 16 * $I_L6701_409) * azim_factor(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + 2 * $I_L6700_415 + 2 * $I_L6700_427) * up_lm(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + 2 * $I_L6701_378 + 16 * $I_L6701_409, 1 + 2 * $I_L6700_415 + 2 * $I_L6700_427)
 6703.                                                    brdf_sol(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6680_417, 2 + 2 * $I_L6700_415 + 2 * $I_L6700_427) = brdf_sol(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6680_417, 2 + 2 * $I_L6700_415 + 2 * $I_L6700_427) + ss1(1 + $I_L6702_329 + 256 * $I_L6702_405, ms_min + $I_L6653_421 + 2 * $I_L6701_378 + 16 * $I_L6701_409) * azim_factor(1 + $I_L6702_329 + 256 * $I_L6702_405, 2 + 2 * $I_L6700_415 + 2 * $I_L6700_427) * up_lm(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + 2 * $I_L6701_378 + 16 * $I_L6701_409, 2 + 2 * $I_L6700_415 + 2 * $I_L6700_427)
 6702.                                                    $I_L6702_329 = 1 + $I_L6702_329
 6702.                                                    if ( $I_L6702_329 >= min( n_profile, 256 + 256 * $I_L6702_405 ) + -256 * $I_L6702_405 ) exit
 6702.                                                 enddo
 6702.                                              endif
 6700.                                              $I_L6700_427 = 1 + $I_L6700_427
 6706.                                              if ( $I_L6700_427 >= _rsh( min( n_direction, 2 + 2 * $I_L6700_415 ) + -2 * $I_L6700_415, 1 ) ) exit
 6706.                                           enddo
 6700.                                           $I_L6700_389 = and( 0xfffffffffffffffeUL, min( n_direction, 2 + 2 * $I_L6700_415 ) + -2 * $I_L6700_415 )
 6700.                                        endif
 6700.                                        if ( $I_L6700_389 < min( n_direction, 2 + 2 * $I_L6700_415 ) + -2 * $I_L6700_415 ) then
 6701.                                           $I_L6701_378 = 0
 6701.                                           if ( min( ( 2 + ls_brdf_trunc + -ms_min + -$I_L6653_421 ) / 2, 8 + 8 * $I_L6701_409 ) + -8 * $I_L6701_409 >= 2 ) then
 6701.                                              $I_L6701_425 = 0
 6701. !dir$ shortloop16
 6701. !dir$ blocking_size( 8, 8 )
 6701.                                              do
 6702.                                                 $I_L6702_329 = 0
 6702. !dir$ ivdep
 6702. !dir$ loop_info (automatic) cache_nt( up_lm )
 6702. !dir$ blocking_size( 256, 256 )
 6702.                                                 do
 6703.                                                    brdf_sol(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6680_417, 1 + $I_L6700_389 + 2 * $I_L6700_415) = brdf_sol(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6680_417, 1 + $I_L6700_389 + 2 * $I_L6700_415) + ss1(1 + $I_L6702_329 + 256 * $I_L6702_405, ms_min + $I_L6653_421 + 16 * $I_L6701_409 + 4 * $I_L6701_425) * azim_factor(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6700_389 + 2 * $I_L6700_415) * up_lm(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + 16 * $I_L6701_409 + 4 * $I_L6701_425, 1 + $I_L6700_389 + 2 * $I_L6700_415)
 6703.                                                    brdf_sol(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6680_417, 1 + $I_L6700_389 + 2 * $I_L6700_415) = brdf_sol(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6680_417, 1 + $I_L6700_389 + 2 * $I_L6700_415) + ss1(1 + $I_L6702_329 + 256 * $I_L6702_405, 2 + ms_min + $I_L6653_421 + 16 * $I_L6701_409 + 4 * $I_L6701_425) * azim_factor(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6700_389 + 2 * $I_L6700_415) * up_lm(1 + $I_L6702_329 + 256 * $I_L6702_405, 3 + 16 * $I_L6701_409 + 4 * $I_L6701_425, 1 + $I_L6700_389 + 2 * $I_L6700_415)
 6702.                                                    $I_L6702_329 = 1 + $I_L6702_329
 6702.                                                    if ( $I_L6702_329 >= min( n_profile, 256 + 256 * $I_L6702_405 ) + -256 * $I_L6702_405 ) exit
 6702.                                                 enddo
 6701.                                                 $I_L6701_425 = 1 + $I_L6701_425
 6701.                                                 if ( $I_L6701_425 >= _rsh( min( ( 2 + ls_brdf_trunc + -ms_min + -$I_L6653_421 ) / 2, 8 + 8 * $I_L6701_409 ) + -8 * $I_L6701_409, 1 ) ) exit
 6701.                                              enddo
 6701.                                              $I_L6701_378 = and( 0xfffffffffffffffeUL, min( ( 2 + ls_brdf_trunc + -ms_min + -$I_L6653_421 ) / 2, 8 + 8 * $I_L6701_409 ) + -8 * $I_L6701_409 )
 6701.                                           endif
 6701.                                           if ( $I_L6701_378 < min( ( 2 + ls_brdf_trunc + -ms_min + -$I_L6653_421 ) / 2, 8 + 8 * $I_L6701_409 ) + -8 * $I_L6701_409 ) then
 6702.                                              $I_L6702_329 = 0
 6702. !dir$ ivdep
 6702. !dir$ loop_info (automatic) cache_nt( up_lm )
 6702. !dir$ blocking_size( 256, 256 )
 6702.                                              do
 6703.                                                 brdf_sol(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6680_417, 1 + $I_L6700_389 + 2 * $I_L6700_415) = brdf_sol(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6680_417, 1 + $I_L6700_389 + 2 * $I_L6700_415) + ss1(1 + $I_L6702_329 + 256 * $I_L6702_405, ms_min + $I_L6653_421 + 2 * $I_L6701_378 + 16 * $I_L6701_409) * up_lm(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + 2 * $I_L6701_378 + 16 * $I_L6701_409, 1 + $I_L6700_389 + 2 * $I_L6700_415) * azim_factor(1 + $I_L6702_329 + 256 * $I_L6702_405, 1 + $I_L6700_389 + 2 * $I_L6700_415)
 6702.                                                 $I_L6702_329 = 1 + $I_L6702_329
 6702.                                                 if ( $I_L6702_329 >= min( n_profile, 256 + 256 * $I_L6702_405 ) + -256 * $I_L6702_405 ) exit
 6702.                                              enddo
 6702.                                           endif
 6702.                                        endif
 6702.                                        $I_L6702_405 = 1 + $I_L6702_405
 6702.                                        if ( $I_L6702_405 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
 6702.                                     enddo
 6701.                                     $I_L6701_409 = 1 + $I_L6701_409
 6707.                                     if ( $I_L6701_409 >= 1 + max( 0, -1 + _rsh( 7 + ( 2 + ls_brdf_trunc + -ms_min + -$I_L6653_421 ) / 2, 3 ) ) ) exit
 6707.                                  enddo
 6700.                                  $I_L6700_415 = 1 + $I_L6700_415
 6700.                                  if ( $I_L6700_415 >= 1 + max( 0, -1 + _rsh( 1 + n_direction, 1 ) ) ) exit
 6700.                               enddo
 6700.                            endif
 6700.                         endif
 6700.                      endif
 6710.                      $I_L6680_417 = 1 + $I_L6680_417
 6708.                      if ( $I_L6680_417 >= n_brdf_basis_fnc ) exit
 6708.                   enddo
 6708.                endif
 6712.                $I_L6653_421 = 1 + $I_L6653_421
 6710.                if ( $I_L6653_421 >= 1 + min( ms_max, ls_brdf_trunc ) + -ms_min ) exit
 6710.             enddo
 6710.          endif
 6714.       else if ( isolir == 2 ) then
 6717.          if ( n_direction > 0 ) then
 6718.             if ( n_brdf_basis_fnc > 0 ) then
 6719.                if ( n_profile > 0 ) then
 6717.                   $I_L6717_381 = 0
 6717.                   do
 6718.                      $I_L6718_354 = 0
 6718.                      do
 6719.                         $I_L6719_306 = 0
 6719. !dir$ ivdep
 6719. !dir$ loop_info (automatic) cache_nt( brdf_hemi )
 6719.                         do
 6720.                            brdf_hemi(1 + $I_L6719_306, 1 + $I_L6718_354, 1 + $I_L6717_381) = 0.0
 6721.                            $I_L6719_306 = 1 + $I_L6719_306
 6719.                            if ( $I_L6719_306 >= n_profile ) exit
 6719.                         enddo
 6722.                         $I_L6718_354 = 1 + $I_L6718_354
 6721.                         if ( $I_L6718_354 >= n_brdf_basis_fnc ) exit
 6721.                      enddo
 6723.                      $I_L6717_381 = 1 + $I_L6717_381
 6722.                      if ( $I_L6717_381 >= n_direction ) exit
 6722.                   enddo
 6722.                endif
 6722.             endif
 6722.          endif
 6726.          if ( ms_min <= 0 ) then
 6729.             $SC_uplm_zero_I1 = uplm_zero(2)
 6729.             $SC_ia_sph_mm_I0 = ia_sph_mm(0)
 6726.             $I_L6726_419 = 0
 6726.             do
 6728.                if ( ( 1 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) > 0 ) then
 6728.                   $I_L6728_332 = 0
 6728. !dir$ ivdep
 6728. !dir$ loop_info (automatic) cache_nt( uplm_zero, kappa )
 6728.                   do
 6729.                      kappa(1 + 2 * $I_L6728_332) = ( 6.2831853071795862 * $SC_uplm_zero_I1 * uplm_zero($SC_ia_sph_mm_I0 + 2 * $I_L6728_332) * 1.0/( real( -1 + -lsr + -2 * ms_min + 2 * $I_L6728_332 + 4 * ms_min * $I_L6728_332 + 2 * lsr * $I_L6728_332 + 4 * $I_L6728_332 * $I_L6726_419 + -2 * $I_L6726_419, 8 ) ) )
 6732.                      $I_L6728_332 = 1 + $I_L6728_332
 6728.                      if ( $I_L6728_332 >= ( 2 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) / 2 ) exit
 6728.                   enddo
 6728.                endif
 6736.                if ( n_direction > 0 ) then
 6736.                   $I_L6736_392 = 0
 6736.                   do
 6737.                      tm$1194 = loc( direction(1, 1 + $I_L6736_392, 1) )
 6737.                      x = _copyin( direction(1, 1 + $I_L6736_392, 1) )
 6737.                      tm$1196 = loc( up_lm(1, 1, 1 + $I_L6736_392) )
 6737.                      up_lm = _copyin( up_lm(1, 1, 1 + $I_L6736_392) )
 6737.                      t$289 = nd_profile
 6737.                      t$1973 = max( 0, nd_profile )
 6737.                      t$290 = 1 + ls_brdf_trunc + -ms_min + -$I_L6726_419
 6737.                      t$1974 = max( 0, nd_profile )
 6737.                      t$1975 = max( 0, 1 + ls_brdf_trunc + -ms_min + -$I_L6726_419 )
 6737.                      t$1976 = max( 0, nd_profile ) * max( 0, 1 + ls_brdf_trunc + -ms_min + -$I_L6726_419 )
 6737.                      if ( n_profile > 0 ) then
 6737.                         $I_L6737_334 = 0
 6737. !dir$ ivdep
 6737.                         do
 6737.                            up_lm(1 + $I_L6737_334, 1) = 2.8209479177387814e-1
 6737.                            $I_L6737_334 = 1 + $I_L6737_334
 6737.                            if ( $I_L6737_334 >= n_profile ) exit
 6737.                         enddo
 6737.                      endif
 6737.                      if ( ( ms_min + $I_L6726_419 ) < ls_brdf_trunc ) then
 6737.                         if ( n_profile > 0 ) then
 6737.                            $I_L6737_336 = 0
 6737. !dir$ ivdep
 6737.                            do
 6737.                               up_lm(1 + $I_L6737_336, 2) = up_lm(1 + $I_L6737_336, 1) * x(1 + $I_L6737_336) * _sqrt( 3.0 + 2.0 * real( ms_min + $I_L6726_419, 8 ) )
 6737.                               $I_L6737_336 = 1 + $I_L6737_336
 6737.                               if ( $I_L6737_336 >= n_profile ) exit
 6737.                            enddo
 6737.                         endif
 6737.                      endif
 6737.                      if ( ( -2 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) >= 0 ) then
 6737.                         if ( n_profile > 0 ) then
 6737.                            $I_L6737_364 = 0
 6737.                            do
 6737.                               $I_L6737_338 = 0
 6737. !dir$ ivdep
 6737.                               do
 6737.                                  up_lm(1 + $I_L6737_338, 3 + $I_L6737_364) = -( up_lm(1 + $I_L6737_338, 1 + $I_L6737_364) * _sqrt( 1.0/( ( real( ms_min + $I_L6726_419, 8 ) + real( 2 + ms_min + $I_L6737_364 + $I_L6726_419, 8 ) ) * ( real( 2 + ms_min + $I_L6737_364 + $I_L6726_419, 8 ) + -( real( ms_min + $I_L6726_419, 8 ) ) ) * ( -3.0 + 2.0 * real( 2 + ms_min + $I_L6737_364 + $I_L6726_419, 8 ) ) ) * ( ( 1.0 + 2.0 * real( 2 + ms_min + $I_L6737_364 + $I_L6726_419, 8 ) ) * ( -1.0 + real( ms_min + $I_L6726_419, 8 ) + real( 2 + ms_min + $I_L6737_364 + $I_L6726_419, 8 ) ) * ( -1.0 + real( 2 + ms_min + $I_L6737_364 + $I_L6726_419, 8 ) + -( real( ms_min + $I_L6726_419, 8 ) ) ) ) ) ) + up_lm(1 + $I_L6737_338, 2 + $I_L6737_364) * x(1 + $I_L6737_338) * _sqrt( 1.0/( ( real( 2 + ms_min + $I_L6737_364 + $I_L6726_419, 8 ) + -( real( ms_min + $I_L6726_419, 8 ) ) ) * ( real( ms_min + $I_L6726_419, 8 ) + real( 2 + ms_min + $I_L6737_364 + $I_L6726_419, 8 ) ) ) * ( ( 1.0 + 2.0 * real( 2 + ms_min + $I_L6737_364 + $I_L6726_419, 8 ) ) * ( -1.0 + 2.0 * real( 2 + ms_min + $I_L6737_364 + $I_L6726_419, 8 ) ) ) )
 6737.                                  $I_L6737_338 = 1 + $I_L6737_338
 6737.                                  if ( $I_L6737_338 >= n_profile ) exit
 6737.                               enddo
 6737.                               $I_L6737_364 = 1 + $I_L6737_364
 6737.                               if ( $I_L6737_364 >= -1 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) exit
 6737.                            enddo
 6737.                         endif
 6737.                      endif
 6737.                      up_lm(1, 1, 1 + $I_L6736_392) = _copyout( up_lm )
 6737.                      direction(1, 1 + $I_L6736_392, 1) = _copyout( x )
 6740.                      $I_L6736_392 = 1 + $I_L6736_392
 6737.                      if ( $I_L6736_392 >= n_direction ) exit
 6737.                   enddo
 6737.                endif
 6743.                if ( n_brdf_basis_fnc > 0 ) then
 6745.                   if ( ( 1 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) <= 0 ) then
 6745.                      lsr = 1
 6745.                   else if ( n_direction <= 0 ) then
 6743.                      $I_L6743_394 = 0
 6743.                      do
 6745.                         $I_L6745_346 = 0
 6745. !dir$ ivdep
 6745.                         do
 6746.                            fk(1 + 2 * $I_L6745_346) = 0.0
 6757.                            $I_L6745_346 = 1 + $I_L6745_346
 6756.                            if ( $I_L6745_346 >= ( 2 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) / 2 ) exit
 6756.                         enddo
 6747.                         $I_L6747_371 = 0
 6747.                         do
 6748.                            $SC_kappa_I8 = kappa(1 + 2 * $I_L6747_371)
 6745.                            $I_L6745_348 = 0
 6745. !dir$ ivdep
 6745.                            do
 6748.                               fk(1 + 2 * $I_L6745_348) = fk(1 + 2 * $I_L6745_348) + $SC_kappa_I8 * f_brdf(1 + $I_L6743_394, ( ms_min + $I_L6726_419 + 2 * $I_L6745_348 ) / 2, ( ms_min + $I_L6726_419 + 2 * $I_L6747_371 ) / 2, ms_min + $I_L6726_419)
 6757.                               $I_L6745_348 = 1 + $I_L6745_348
 6747.                               if ( $I_L6745_348 >= ( 2 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) / 2 ) exit
 6747.                            enddo
 6750.                            $I_L6747_371 = 1 + $I_L6747_371
 6756.                            if ( $I_L6747_371 >= ( 2 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) / 2 ) exit
 6756.                         enddo
 6759.                         $I_L6743_394 = 1 + $I_L6743_394
 6757.                         if ( $I_L6743_394 >= n_brdf_basis_fnc ) exit
 6757.                      enddo
 6757.                      lsr = ( 1 + 2 * ( 2 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) / 2 )
 6757.                   else if ( n_profile > 0 ) then
 6743.                      $I_L6743_413 = 0
 6743.                      do
 6745.                         $I_L6745_340 = 0
 6745. !dir$ ivdep
 6745.                         do
 6746.                            fk(1 + 2 * $I_L6745_340) = 0.0
 6757.                            $I_L6745_340 = 1 + $I_L6745_340
 6756.                            if ( $I_L6745_340 >= ( 2 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) / 2 ) exit
 6756.                         enddo
 6747.                         $I_L6747_366 = 0
 6747. !dir$ loop_info (automatic) cache_nt( kappa )
 6747.                         do
 6748.                            $SC_kappa_I5 = kappa(1 + 2 * $I_L6747_366)
 6745.                            $I_L6745_342 = 0
 6745. !dir$ ivdep
 6745.                            do
 6748.                               fk(1 + 2 * $I_L6745_342) = fk(1 + 2 * $I_L6745_342) + $SC_kappa_I5 * f_brdf(1 + $I_L6743_413, ( ms_min + $I_L6726_419 + 2 * $I_L6745_342 ) / 2, ( ms_min + $I_L6726_419 + 2 * $I_L6747_366 ) / 2, ms_min + $I_L6726_419)
 6757.                               $I_L6745_342 = 1 + $I_L6745_342
 6747.                               if ( $I_L6745_342 >= ( 2 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) / 2 ) exit
 6747.                            enddo
 6750.                            $I_L6747_366 = 1 + $I_L6747_366
 6756.                            if ( $I_L6747_366 >= ( 2 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) / 2 ) exit
 6756.                         enddo
 6751.                         $I_L6751_411 = 0
 6751.                         do
 6745.                            $I_L6745_401 = 0
 6745.                            do
 6751.                               $I_L6751_398 = 0
 6751. !dir$ shortloop16
 6751. !dir$ blocking_size( 8, 8 )
 6751.                               do
 6745.                                  $I_L6745_368 = 0
 6745. !dir$ shortloop16
 6745. !dir$ blocking_size( 8, 8 )
 6745.                                  do
 6753.                                     $SC_fk_I6 = fk(1 + 2 * $I_L6745_368 + 16 * $I_L6745_401)
 6752.                                     $I_L6752_344 = 0
 6752. !dir$ ivdep
 6752.                                     do
 6753.                                        brdf_hemi(1 + $I_L6752_344, 1 + $I_L6743_413, 1 + $I_L6751_398 + 8 * $I_L6751_411) = brdf_hemi(1 + $I_L6752_344, 1 + $I_L6743_413, 1 + $I_L6751_398 + 8 * $I_L6751_411) + $SC_fk_I6 * up_lm(1 + $I_L6752_344, 1 + 2 * $I_L6745_368 + 16 * $I_L6745_401, 1 + $I_L6751_398 + 8 * $I_L6751_411)
 6755.                                        $I_L6752_344 = 1 + $I_L6752_344
 6752.                                        if ( $I_L6752_344 >= n_profile ) exit
 6752.                                     enddo
 6745.                                     $I_L6745_368 = 1 + $I_L6745_368
 6755.                                     if ( $I_L6745_368 >= min( ( 2 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) / 2, 8 + 8 * $I_L6745_401 ) + -8 * $I_L6745_401 ) exit
 6755.                                  enddo
 6751.                                  $I_L6751_398 = 1 + $I_L6751_398
 6751.                                  if ( $I_L6751_398 >= min( n_direction, 8 + 8 * $I_L6751_411 ) + -8 * $I_L6751_411 ) exit
 6751.                               enddo
 6745.                               $I_L6745_401 = 1 + $I_L6745_401
 6756.                               if ( $I_L6745_401 >= 1 + max( 0, -1 + _rsh( 7 + ( 2 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) / 2, 3 ) ) ) exit
 6756.                            enddo
 6751.                            $I_L6751_411 = 1 + $I_L6751_411
 6751.                            if ( $I_L6751_411 >= 1 + max( 0, -1 + _rsh( 7 + n_direction, 3 ) ) ) exit
 6751.                         enddo
 6759.                         $I_L6743_413 = 1 + $I_L6743_413
 6757.                         if ( $I_L6743_413 >= n_brdf_basis_fnc ) exit
 6757.                      enddo
 6757.                      lsr = ( 1 + 2 * ( 2 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) / 2 )
 6757.                   else
 6743.                      $I_L6743_396 = 0
 6743.                      do
 6745.                         $I_L6745_350 = 0
 6745. !dir$ ivdep
 6745.                         do
 6746.                            fk(1 + 2 * $I_L6745_350) = 0.0
 6757.                            $I_L6745_350 = 1 + $I_L6745_350
 6756.                            if ( $I_L6745_350 >= ( 2 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) / 2 ) exit
 6756.                         enddo
 6747.                         $I_L6747_373 = 0
 6747.                         do
 6748.                            $SC_kappa_I7 = kappa(1 + 2 * $I_L6747_373)
 6745.                            $I_L6745_352 = 0
 6745. !dir$ ivdep
 6745.                            do
 6748.                               fk(1 + 2 * $I_L6745_352) = fk(1 + 2 * $I_L6745_352) + $SC_kappa_I7 * f_brdf(1 + $I_L6743_396, ( ms_min + $I_L6726_419 + 2 * $I_L6745_352 ) / 2, ( ms_min + $I_L6726_419 + 2 * $I_L6747_373 ) / 2, ms_min + $I_L6726_419)
 6757.                               $I_L6745_352 = 1 + $I_L6745_352
 6747.                               if ( $I_L6745_352 >= ( 2 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) / 2 ) exit
 6747.                            enddo
 6750.                            $I_L6747_373 = 1 + $I_L6747_373
 6756.                            if ( $I_L6747_373 >= ( 2 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) / 2 ) exit
 6756.                         enddo
 6759.                         $I_L6743_396 = 1 + $I_L6743_396
 6757.                         if ( $I_L6743_396 >= n_brdf_basis_fnc ) exit
 6757.                      enddo
 6757.                      lsr = ( 1 + 2 * ( 2 + ls_brdf_trunc + -ms_min + -$I_L6726_419 ) / 2 )
 6757.                   endif
 6757.                endif
 6761.                $I_L6726_419 = 1 + $I_L6726_419
 6759.                if ( $I_L6726_419 >= 1 + -ms_min ) exit
 6759.             enddo
 6759.          endif
 6759.       endif
 6516.       _free( t$1476 )
 6768.       return
 6768.       end
 6768.       
 6794.       
 6794.       subroutine calc_cg_coeff( ls_max_order, ia_sph_mm, ms_min, ms_trunc, cg_coeff, nd_max_order, nd_sph_coeff )
 6794.       t$172 = nd_max_order
 6794.       t$1495 = 1 + nd_max_order
 6821.       t$1496 = _zla( 0, 1 + nd_max_order )
 6794.       t$173 = nd_sph_coeff
 6825.       t$1497 = _zla( 0, nd_sph_coeff )
 6840.       if ( ls_max_order >= 0 ) then
 6840.          $I_L6840_10 = 0
 6840.          do
 6841.             $inv_S3 = 1.0/( real( 3 + 8 * $I_L6840_10 + 4 * $I_L6840_10 * $I_L6840_10, 8 ) )
 6842.             $t_S1 = ms_trunc($I_L6840_10)
 6842.             if ( $t_S1 + -ms_min >= 0 ) then
 6842.                $I_L6842_8 = 0
 6842. !dir$ ivdep
 6842.                do
 6843.                   cg_coeff(ia_sph_mm(ms_min + $I_L6842_8) + $I_L6840_10 + -ms_min + -$I_L6842_8) = _sqrt( $inv_S3 * real( 1 + -( ( ms_min + $I_L6842_8 ) * ( ms_min + $I_L6842_8 ) ) + $I_L6840_10 * $I_L6840_10 + 2 * $I_L6840_10, 8 ) )
 6845.                   $I_L6842_8 = 1 + $I_L6842_8
 6842.                   if ( $I_L6842_8 >= 1 + $t_S1 + -ms_min ) exit
 6842.                enddo
 6842.             endif
 6846.             $I_L6840_10 = 1 + $I_L6840_10
 6845.             if ( $I_L6840_10 >= 1 + ls_max_order ) exit
 6845.          enddo
 6845.       endif
 6851.       return
 6851.       end
 6851.       
 6871.       
 6871.       subroutine calc_flux_ipa( ierr, n_profile, n_layer, n_cloud_top, l_scale_solar, adjust_solar_ke, i_2stream, i_solver, isolir, diff_planck, l_ir_source_quad, diff_planck_2, flux_inc_down, flux_inc_direct, sec_00, d_planck_flux_surface, rho_alb, ss_prop, n_column_slv, list_column_slv, i_clm_lyr_chn, i_clm_cld_typ, area_column, flux_direct, flux_total, l_clear, i_solver_clear, flux_direct_clear, flux_total_clear, nd_profile, nd_layer, nd_layer_clr, id_ct, nd_column, nd_profile_column, nd_source_coeff )
 6871.       t$174 = nd_profile
 6871.       t$175 = nd_layer
 6965.       t$1498 = _zla( 0, nd_profile )
 6871.       t$1499 = _zla( 0, nd_profile )
 6965.       t$1500 = _zla( 0, nd_layer )
 6871.       t$1501 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 6871.       t$1502 = 2 * _zla( 0, nd_profile )
 2600.       if ( t$27 == 0 ) then
 2600.          t$1507(1) = 4
 2600.          t$1508(1) = 0
 2600.          t$1509(1) = 0
 2600.          t$1504(1) = int( loc( t$26 ), 8 )
 2600.          t$1505(1) = 0
 2600.          t$1506(1) = int( loc( t$1503 ), 8 )
 2600.          t$27 = __get_dynamic_type( 2, t$1504(1), t$1507(1), 1, t$1505(1), t$1506(1), t$1508(1), t$1509(1) )
 2600.       endif
 6871.       t$176 = nd_column
 6999.       t$1511 = max( 0, nd_column )
 6871.       t$1512 = _zla( 0, nd_profile ) * max( 0, nd_column )
 6871.       t$1513 = 1 + nd_layer
 7011.       t$1514 = max( 0, 1 + nd_layer )
 6871.       t$1515 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer )
 6871.       t$177 = ( 2 + 2 * nd_layer )
 7013.       t$1516 = max( 0, ( 2 + 2 * nd_layer ) )
 6871.       t$1517 = _zla( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
 6871.       t$178 = nd_profile_column
 7074.       t$1518 = max( 0, nd_profile_column )
 6871.       t$1519 = max( 0, nd_profile_column )
 6871.       t$1520 = _zla( 0, nd_layer ) * max( 0, nd_profile_column )
 7074.       t$1523 = 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column )
 7072.       t$1524 = 8 * ( 7 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column ) ) / 8
 7072.       t$1526 = t$1524 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column )
 7080.       t$1527 = 8 * ( 7 + t$1524 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column ) ) / 8
 7080.       t$1529 = t$1527 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column )
 7078.       t$1530 = 8 * ( 7 + t$1527 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column ) ) / 8
 7078.       t$1532 = t$1530 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column )
 7086.       t$1533 = 8 * ( 7 + t$1530 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column ) ) / 8
 7086.       t$1535 = t$1533 + 8 * max( 0, nd_profile_column )
 6871.       t$1536 = max( 0, nd_profile_column ) * max( 0, 1 + nd_layer )
 7094.       t$1537 = 8 * ( 7 + t$1533 + 8 * max( 0, nd_profile_column ) ) / 8
 7094.       t$1539 = t$1537 + 8 * max( 0, nd_profile_column ) * max( 0, 1 + nd_layer )
 7082.       t$1540 = 8 * ( 7 + t$1537 + 8 * max( 0, nd_profile_column ) * max( 0, 1 + nd_layer ) ) / 8
 7082.       t$1542 = t$1540 + 8 * max( 0, nd_profile_column )
 7084.       t$1543 = 8 * ( 7 + t$1540 + 8 * max( 0, nd_profile_column ) ) / 8
 7084.       t$1545 = t$1543 + 8 * max( 0, nd_profile_column )
 6871.       t$1546 = max( 0, ( 2 + 2 * nd_layer ) ) * max( 0, nd_profile_column )
 7096.       t$1547 = 8 * ( 7 + t$1543 + 8 * max( 0, nd_profile_column ) ) / 8
 7103.       t$1549 = t$1547 + 8 * max( 0, ( 2 + 2 * nd_layer ) ) * max( 0, nd_profile_column )
 7096.       omega_clr_f = $_StaticDV_P0
 7096.       omega_clr_f%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
 7096.       omega_clr_f%header%el_len = 64
 7096.       omega_clr_f%header%assoc = 0
 7096.       omega_clr_f%header%ptr_alloc = 0
 7096.       omega_clr_f%header%p_or_a = 2
 7096.       omega_clr_f%header%a_contig = 1
 7096.       omega_clr_f%header%n_dim = 2
 7096.       omega_clr_f%header%orig_base = 0
 7096.       omega_clr_f%header%orig_size = 0
 7096.       omega_clr_f%header%n_codim = 0
 7096.       omega_clr_f%header%dv_versn = 2
 7096.       omega_clr_f%header%dv_smunit = 64
 7096.       omega_clr_f%header%d_type = 0
 7096.       omega_clr_f%header%n_params = 0
 7096.       omega_clr_f%header%d_type_idx = 13
 7096.       omega_clr_f%dim_1%LB = 1
 7096.       omega_clr_f%dim_1%EX = 0
 7096.       omega_clr_f%dim_1%SM = 1
 7096.       omega_clr_f%dim_2%LB = 1
 7096.       omega_clr_f%dim_2%EX = 0
 7096.       omega_clr_f%dim_2%SM = 1
 7070.       t$1550 = 8 * ( 7 + t$1547 + 8 * max( 0, ( 2 + 2 * nd_layer ) ) * max( 0, nd_profile_column ) ) / 8
 7105.       t$1552 = t$1550 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column )
 7070.       phase_fnc_clr_f = $_StaticDV_P1
 7070.       phase_fnc_clr_f%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
 7070.       phase_fnc_clr_f%header%el_len = 64
 7070.       phase_fnc_clr_f%header%assoc = 0
 7070.       phase_fnc_clr_f%header%ptr_alloc = 0
 7070.       phase_fnc_clr_f%header%p_or_a = 2
 7070.       phase_fnc_clr_f%header%a_contig = 1
 7070.       phase_fnc_clr_f%header%n_dim = 3
 7070.       phase_fnc_clr_f%header%orig_base = 0
 7070.       phase_fnc_clr_f%header%orig_size = 0
 7070.       phase_fnc_clr_f%header%n_codim = 0
 7070.       phase_fnc_clr_f%header%dv_versn = 2
 7070.       phase_fnc_clr_f%header%dv_smunit = 64
 7070.       phase_fnc_clr_f%header%d_type = 0
 7070.       phase_fnc_clr_f%header%n_params = 0
 7070.       phase_fnc_clr_f%header%d_type_idx = 13
 7070.       phase_fnc_clr_f%dim_1%LB = 1
 7070.       phase_fnc_clr_f%dim_1%EX = 0
 7070.       phase_fnc_clr_f%dim_1%SM = 1
 7070.       phase_fnc_clr_f%dim_2%LB = 1
 7070.       phase_fnc_clr_f%dim_2%EX = 0
 7070.       phase_fnc_clr_f%dim_2%SM = 1
 7070.       phase_fnc_clr_f%dim_3%LB = 1
 7070.       phase_fnc_clr_f%dim_3%EX = 0
 7070.       phase_fnc_clr_f%dim_3%SM = 1
 6871.       t$1553 = 2 * max( 0, nd_profile_column )
 7089.       t$1554 = 8 * ( 7 + t$1550 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column ) ) / 8
 7089.       t$1556 = t$1554 + 16 * max( 0, nd_profile_column )
 7076.       t$1557 = 8 * ( 7 + t$1554 + 16 * max( 0, nd_profile_column ) ) / 8
 7076.       t$1559 = t$1557 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column )
 7101.       t$1561 = t$1557 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column ) + 4 * max( 0, nd_profile_column )
 7057.       tau_clr_f = $_StaticDV_P2
 7057.       tau_clr_f%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
 7057.       tau_clr_f%header%el_len = 64
 7057.       tau_clr_f%header%assoc = 0
 7057.       tau_clr_f%header%ptr_alloc = 0
 7057.       tau_clr_f%header%p_or_a = 2
 7057.       tau_clr_f%header%a_contig = 1
 7057.       tau_clr_f%header%n_dim = 2
 7057.       tau_clr_f%header%orig_base = 0
 7057.       tau_clr_f%header%orig_size = 0
 7057.       tau_clr_f%header%n_codim = 0
 7057.       tau_clr_f%header%dv_versn = 2
 7057.       tau_clr_f%header%dv_smunit = 64
 7057.       tau_clr_f%header%d_type = 0
 7057.       tau_clr_f%header%n_params = 0
 7057.       tau_clr_f%header%d_type_idx = 13
 7057.       tau_clr_f%dim_1%LB = 1
 7057.       tau_clr_f%dim_1%EX = 0
 7057.       tau_clr_f%dim_1%SM = 1
 7057.       tau_clr_f%dim_2%LB = 1
 7057.       tau_clr_f%dim_2%EX = 0
 7057.       tau_clr_f%dim_2%SM = 1
 7068.       t$1562 = 8 * ( 7 + t$1557 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column ) + 4 * max( 0, nd_profile_column ) ) / 8
 7068.       t$1564 = t$1562 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column )
 7060.       t$1565 = 8 * ( 7 + t$1562 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column ) ) / 8
 7060.       t$1567 = t$1565 + 8 * max( 0, nd_profile_column )
 6871.       t$1521 = int( _alloc( t$1565 + 8 * max( 0, nd_profile_column ) ), 8 )
 7074.       t$1522 = t$1521
 7072.       t$1525 = t$1524 + t$1521
 7080.       t$1528 = t$1527 + t$1521
 7078.       t$1531 = t$1530 + t$1521
 7086.       t$1534 = t$1533 + t$1521
 7094.       t$1538 = t$1537 + t$1521
 7082.       t$1541 = t$1540 + t$1521
 7084.       t$1544 = t$1543 + t$1521
 7096.       t$1548 = t$1547 + t$1521
 7070.       t$1551 = t$1550 + t$1521
 7089.       t$1555 = t$1554 + t$1521
 7076.       t$1558 = t$1557 + t$1521
 7057.       t$1560 = t$1557 + t$1521 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column )
 7068.       t$1563 = t$1562 + t$1521
 7060.       t$1566 = t$1565 + t$1521
 7121.       if ( 2 + 2 * n_layer > 0 ) then
 7122.          if ( n_profile > 0 ) then
 7121.             $I_L7121_143 = 0
 7121.             do
 7122.                $I_L7122_107 = 0
 7122. !dir$ ivdep
 7122.                do
 7123.                   flux_total(1 + $I_L7122_107, 1 + $I_L7121_143) = 0.0
 7124.                   $I_L7122_107 = 1 + $I_L7122_107
 7122.                   if ( $I_L7122_107 >= n_profile ) exit
 7122.                enddo
 7125.                $I_L7121_143 = 1 + $I_L7121_143
 7124.                if ( $I_L7121_143 >= 2 + 2 * n_layer ) exit
 7124.             enddo
 7124.          endif
 7124.       endif
 7127.       if ( isolir == 1 ) then
 7128.          if ( n_layer >= 0 ) then
 7129.             if ( n_profile > 0 ) then
 7128.                $I_L7128_145 = 0
 7128.                do
 7129.                   $I_L7129_109 = 0
 7129. !dir$ ivdep
 7129.                   do
 7130.                      flux_direct(1 + $I_L7129_109, $I_L7128_145) = 0.0
 7131.                      $I_L7129_109 = 1 + $I_L7129_109
 7129.                      if ( $I_L7129_109 >= n_profile ) exit
 7129.                   enddo
 7132.                   $I_L7128_145 = 1 + $I_L7128_145
 7131.                   if ( $I_L7128_145 >= 1 + n_layer ) exit
 7131.                enddo
 7131.             endif
 7131.          endif
 7131.       endif
 7139.       $lp_S4 = 1
 7140.       $l_new_S6 = .true.
 7142.       if ( 0 < n_profile ) then
 7133.          do
 7144.             $ll_S5 = 0
 7146.             if ( ( 0 < nd_profile_column .and. $lp_S4 <= n_profile ) /= .false. ) then
 7165.                $SC_ss_prop_I40 = ss_prop%phase_fnc%dim_1%SM
 7165.                $SC_ss_prop_I39 = ss_prop%phase_fnc%dim_1%EX
 7165.                $SC_ss_prop_I41 = ss_prop%phase_fnc%dim_1%LB
 7165.                $SC_ss_prop_I43 = ss_prop%phase_fnc%dim_2%SM
 7165.                $SC_ss_prop_I42 = ss_prop%phase_fnc%dim_2%EX
 7165.                $SC_ss_prop_I44 = ss_prop%phase_fnc%dim_2%LB
 7165.                $SC_ss_prop_I46 = ss_prop%phase_fnc%dim_3%SM
 7165.                $SC_ss_prop_I45 = ss_prop%phase_fnc%dim_3%EX
 7165.                $SC_ss_prop_I47 = ss_prop%phase_fnc%dim_3%LB
 7164.                $SC_ss_prop_I31 = ss_prop%omega%dim_1%SM
 7164.                $SC_ss_prop_I30 = ss_prop%omega%dim_1%EX
 7164.                $SC_ss_prop_I32 = ss_prop%omega%dim_1%LB
 7164.                $SC_ss_prop_I34 = ss_prop%omega%dim_2%SM
 7164.                $SC_ss_prop_I33 = ss_prop%omega%dim_2%EX
 7164.                $SC_ss_prop_I35 = ss_prop%omega%dim_2%LB
 7164.                $SC_ss_prop_I37 = ss_prop%omega%dim_3%SM
 7164.                $SC_ss_prop_I36 = ss_prop%omega%dim_3%EX
 7164.                $SC_ss_prop_I38 = ss_prop%omega%dim_3%LB
 7163.                $SC_ss_prop_I22 = ss_prop%tau%dim_1%SM
 7163.                $SC_ss_prop_I21 = ss_prop%tau%dim_1%EX
 7163.                $SC_ss_prop_I23 = ss_prop%tau%dim_1%LB
 7163.                $SC_ss_prop_I25 = ss_prop%tau%dim_2%SM
 7163.                $SC_ss_prop_I24 = ss_prop%tau%dim_2%EX
 7163.                $SC_ss_prop_I26 = ss_prop%tau%dim_2%LB
 7163.                $SC_ss_prop_I28 = ss_prop%tau%dim_3%SM
 7163.                $SC_ss_prop_I27 = ss_prop%tau%dim_3%EX
 7163.                $SC_ss_prop_I29 = ss_prop%tau%dim_3%LB
 7160.                $SC_ss_prop_I13 = ss_prop%phase_fnc_clr%dim_1%SM
 7160.                $SC_ss_prop_I12 = ss_prop%phase_fnc_clr%dim_1%EX
 7160.                $SC_ss_prop_I14 = ss_prop%phase_fnc_clr%dim_1%LB
 7160.                $SC_ss_prop_I16 = ss_prop%phase_fnc_clr%dim_2%SM
 7160.                $SC_ss_prop_I15 = ss_prop%phase_fnc_clr%dim_2%EX
 7160.                $SC_ss_prop_I17 = ss_prop%phase_fnc_clr%dim_2%LB
 7160.                $SC_ss_prop_I19 = ss_prop%phase_fnc_clr%dim_3%SM
 7160.                $SC_ss_prop_I18 = ss_prop%phase_fnc_clr%dim_3%EX
 7160.                $SC_ss_prop_I20 = ss_prop%phase_fnc_clr%dim_3%LB
 7159.                $SC_ss_prop_I7 = ss_prop%omega_clr%dim_1%SM
 7159.                $SC_ss_prop_I6 = ss_prop%omega_clr%dim_1%EX
 7159.                $SC_ss_prop_I8 = ss_prop%omega_clr%dim_1%LB
 7159.                $SC_ss_prop_I10 = ss_prop%omega_clr%dim_2%SM
 7159.                $SC_ss_prop_I9 = ss_prop%omega_clr%dim_2%EX
 7159.                $SC_ss_prop_I11 = ss_prop%omega_clr%dim_2%LB
 7158.                $SC_ss_prop_I1 = ss_prop%tau_clr%dim_1%SM
 7158.                $SC_ss_prop_I0 = ss_prop%tau_clr%dim_1%EX
 7158.                $SC_ss_prop_I2 = ss_prop%tau_clr%dim_1%LB
 7158.                $SC_ss_prop_I4 = ss_prop%tau_clr%dim_2%SM
 7158.                $SC_ss_prop_I3 = ss_prop%tau_clr%dim_2%EX
 7158.                $SC_ss_prop_I5 = ss_prop%tau_clr%dim_2%LB
 7158.                do
 7148.                   $ll_S5 = 1 + $ll_S5
 7149.                   target($ll_S5) = $lp_S4
 7151.                   if ( $l_new_S6 /= .false. ) then
 7155.                      icl = 1
 7156.                      ics = 1
 7157.                      if ( -1 + n_cloud_top > 0 ) then
 7157.                         $I_L7157_111 = 0
 7157. !dir$ ivdep
 7157.                         do
 7158.                            tau_long($ll_S5, 1 + $I_L7157_111) = (ss_prop%tau_clr%base_addr)($lp_S4, 1 + $I_L7157_111, 0)
 7159.                            omega_long($ll_S5, 1 + $I_L7157_111) = (ss_prop%omega_clr%base_addr)($lp_S4, 1 + $I_L7157_111, 0)
 7160.                            asymmetry_long($ll_S5, 1 + $I_L7157_111) = (ss_prop%phase_fnc_clr%base_addr)($lp_S4, 1 + $I_L7157_111, 1, 0)
 7161.                            $I_L7157_111 = 1 + $I_L7157_111
 7157.                            if ( $I_L7157_111 >= -1 + n_cloud_top ) exit
 7157.                         enddo
 7157.                      endif
 7162.                      if ( n_layer + -n_cloud_top >= 0 ) then
 7165.                         $SC_ss_prop_I106 = ss_prop%phase_fnc%dim_4%SM
 7165.                         $SC_ss_prop_I105 = ss_prop%phase_fnc%dim_4%EX
 7165.                         $SC_ss_prop_I107 = ss_prop%phase_fnc%dim_4%LB
 7162.                         $I_L7162_113 = 0
 7162. !dir$ ivdep
 7162.                         do
 7163.                            tau_long($ll_S5, n_cloud_top + $I_L7162_113) = (ss_prop%tau%base_addr)($lp_S4, n_cloud_top + $I_L7162_113, 0, 0)
 7164.                            omega_long($ll_S5, n_cloud_top + $I_L7162_113) = (ss_prop%omega%base_addr)($lp_S4, n_cloud_top + $I_L7162_113, 0, 0)
 7165.                            asymmetry_long($ll_S5, n_cloud_top + $I_L7162_113) = (ss_prop%phase_fnc%base_addr)($lp_S4, n_cloud_top + $I_L7162_113, 1, 0, 0)
 7166.                            $I_L7162_113 = 1 + $I_L7162_113
 7162.                            if ( $I_L7162_113 >= 1 + n_layer + -n_cloud_top ) exit
 7162.                         enddo
 7162.                      endif
 7168.                      $l_new_S6 = .false.
 7171.                   else if ( n_layer > 0 ) then
 7182.                      $I_L7182_115 = 0
 7182. !dir$ ivdep
 7182.                      do
 7183.                         tau_long($ll_S5, 1 + $I_L7182_115) = tau_long(cvmg( n_long, -1 + $ll_S5, $ll_S5 <= 1 ), 1 + $I_L7182_115)
 7184.                         omega_long($ll_S5, 1 + $I_L7182_115) = omega_long(cvmg( n_long, -1 + $ll_S5, $ll_S5 <= 1 ), 1 + $I_L7182_115)
 7185.                         asymmetry_long($ll_S5, 1 + $I_L7182_115) = asymmetry_long(cvmg( n_long, -1 + $ll_S5, $ll_S5 <= 1 ), 1 + $I_L7182_115)
 7187.                         $I_L7182_115 = 1 + $I_L7182_115
 7182.                         if ( $I_L7182_115 >= n_layer ) exit
 7182.                      enddo
 7182.                   endif
 7194.                   if ( icl < list_column_slv($lp_S4, ics) ) then
 7194.                      $Trips01_N11 = ( list_column_slv($lp_S4, ics) + -icl )
 7200.                      $SC_ss_prop_I106 = ss_prop%phase_fnc%dim_4%SM
 7200.                      $SC_ss_prop_I105 = ss_prop%phase_fnc%dim_4%EX
 7200.                      $SC_ss_prop_I107 = ss_prop%phase_fnc%dim_4%LB
 7194.                      $I_icl_117 = 0
 7194. !dir$ ivdep
 7194.                      do
 7195.                         $icc_S10 = i_clm_lyr_chn($lp_S4, icl + $I_icl_117)
 7196.                         $ict_S11 = i_clm_cld_typ($lp_S4, icl + $I_icl_117)
 7198.                         tau_long($ll_S5, $icc_S10) = (ss_prop%tau%base_addr)($lp_S4, $icc_S10, $ict_S11, 0)
 7199.                         omega_long($ll_S5, $icc_S10) = (ss_prop%omega%base_addr)($lp_S4, $icc_S10, $ict_S11, 0)
 7200.                         asymmetry_long($ll_S5, $icc_S10) = (ss_prop%phase_fnc%base_addr)($lp_S4, $icc_S10, 1, $ict_S11, 0)
 7204.                         $I_icl_117 = 1 + $I_icl_117
 7194.                         if ( $I_icl_117 >= $Trips01_N11 ) exit
 7194.                      enddo
 7203.                      icl = ( icl + $Trips01_N11 )
 7203.                   endif
 7208.                   if ( isolir == 1 ) then
 7210.                      if ( l_scale_solar /= .false. ) then
 7211.                         if ( n_layer > 0 ) then
 7211.                            $I_L7211_119 = 0
 7211. !dir$ ivdep
 7211.                            do
 7212.                               adjust_solar_ke_long($ll_S5, 1 + $I_L7211_119) = adjust_solar_ke($lp_S4, 1 + $I_L7211_119)
 7213.                               $I_L7211_119 = 1 + $I_L7211_119
 7211.                               if ( $I_L7211_119 >= n_layer ) exit
 7211.                            enddo
 7211.                         endif
 7211.                      endif
 7216.                      $F_A33 = nd_layer
 7216.                      if ( nd_layer > 0 ) then
 7216.                         $I_L7216_129 = 0
 7216. !dir$ ivdep
 7216.                         do
 7216.                            sec_00_long($ll_S5, 1 + $I_L7216_129) = sec_00($lp_S4, 1 + $I_L7216_129)
 7216.                            $I_L7216_129 = 1 + $I_L7216_129
 7216.                            if ( $I_L7216_129 >= $F_A33 ) exit
 7216.                         enddo
 7216.                      endif
 7217.                      flux_inc_direct_long($ll_S5) = flux_inc_direct($lp_S4)
 7218.                      d_planck_flux_surface_long($ll_S5) = 0.0
 7220.                   else if ( isolir == 2 ) then
 7222.                      d_planck_flux_surface_long($ll_S5) = d_planck_flux_surface($lp_S4)
 7224.                      if ( n_layer > 0 ) then
 7224.                         $I_L7224_121 = 0
 7224. !dir$ ivdep
 7224.                         do
 7225.                            diff_planck_long($ll_S5, 1 + $I_L7224_121) = diff_planck($lp_S4, 1 + $I_L7224_121)
 7226.                            $I_L7224_121 = 1 + $I_L7224_121
 7224.                            if ( $I_L7224_121 >= n_layer ) exit
 7224.                         enddo
 7224.                      endif
 7227.                      if ( l_ir_source_quad /= .false. ) then
 7228.                         if ( n_layer > 0 ) then
 7228.                            $I_L7228_123 = 0
 7228. !dir$ ivdep
 7228.                            do
 7229.                               diff_planck_2_long($ll_S5, 1 + $I_L7228_123) = diff_planck_2($lp_S4, 1 + $I_L7228_123)
 7230.                               $I_L7228_123 = 1 + $I_L7228_123
 7228.                               if ( $I_L7228_123 >= n_layer ) exit
 7228.                            enddo
 7228.                         endif
 7228.                      endif
 7228.                   endif
 7235.                   flux_inc_down_long($ll_S5) = flux_inc_down($lp_S4)
 7236.                   rho_alb_long($ll_S5, 2) = rho_alb($lp_S4, 2)
 7238.                   rho_alb_long($ll_S5, 1) = rho_alb($lp_S4, 1)
 7243.                   weight_long($ll_S5) = area_column($lp_S4, icl)
 7248.                   ics = 1 + ics
 7249.                   if ( ics > n_column_slv($lp_S4) ) then
 7251.                      $l_new_S6 = .true.
 7250.                      $lp_S4 = 1 + $lp_S4
 7250.                   endif
 7252.                   if ( ( $ll_S5 < nd_profile_column .and. $lp_S4 <= n_profile ) == .false. ) exit
 7252.                enddo
 7252.             endif
 7258.             n_long = $ll_S5
 7262.             call two_stream( ierr, n_long, n_layer, i_2stream, i_solver, l_scale_solar, adjust_solar_ke_long(1, 1), isolir, diff_planck_long(1, 1), l_ir_source_quad, diff_planck_2_long(1, 1), flux_inc_down_long(1), flux_inc_direct_long(1), sec_00_long(1, 1), rho_alb_long(1, 1), rho_alb_long(1, 2), d_planck_flux_surface_long(1), tau_long(1, 1), omega_long(1, 1), asymmetry_long(1, 1), flux_direct_long(1, 0), flux_total_long(1, 1), nd_profile_column, nd_layer, nd_source_coeff )
 7294.             if ( 2 + 2 * n_layer > 0 ) then
 7295.                if ( n_long > 0 ) then
 7294.                   $SI_L7294_147_G1 = 0
 7294.                   do
 7295.                      $SI_L7295_125_G4 = 0
 7295.                      do
 7294.                         $I_L7294_179 = 0
 7294. !dir$ shortloop16
 7294. !dir$ blocking_size( 2, 2 )
 7294.                         do
 7295.                            $I_L7295_173 = 0
 7295. !dir$ ivdep
 7295. !dir$ blocking_size( 256, 256 )
 7295.                            do
 7296.                               $l_S17 = target(1 + $I_L7295_173 + 256 * $SI_L7295_125_G4)
 7297.                               flux_total($l_S17, 1 + $I_L7294_179 + 2 * $SI_L7294_147_G1) = _vu_plus( flux_total($l_S17, 1 + $I_L7294_179 + 2 * $SI_L7294_147_G1), weight_long(1 + $I_L7295_173 + 256 * $SI_L7295_125_G4) * flux_total_long(1 + $I_L7295_173 + 256 * $SI_L7295_125_G4, 1 + $I_L7294_179 + 2 * $SI_L7294_147_G1) )
 7295.                               $I_L7295_173 = 1 + $I_L7295_173
 7295.                               if ( $I_L7295_173 >= min( n_long, 256 + 256 * $SI_L7295_125_G4 ) + -256 * $SI_L7295_125_G4 ) exit
 7295.                            enddo
 7294.                            $I_L7294_179 = 1 + $I_L7294_179
 7294.                            if ( $I_L7294_179 >= min( 2 + 2 * n_layer, 2 + 2 * $SI_L7294_147_G1 ) + -2 * $SI_L7294_147_G1 ) exit
 7294.                         enddo
 7295.                         $SI_L7295_125_G4 = 1 + $SI_L7295_125_G4
 7299.                         if ( $SI_L7295_125_G4 >= _rsh( 255 + n_long, 8 ) ) exit
 7299.                      enddo
 7294.                      $SI_L7294_147_G1 = 1 + $SI_L7294_147_G1
 7294.                      if ( $SI_L7294_147_G1 >= _rsh( 3 + 2 * n_layer, 1 ) ) exit
 7294.                   enddo
 7294.                endif
 7294.             endif
 7302.             if ( isolir == 1 ) then
 7303.                if ( n_layer >= 0 ) then
 7304.                   if ( n_long > 0 ) then
 7303.                      $SI_L7303_149_G7 = 0
 7303.                      do
 7304.                         $SI_L7304_127_G10 = 0
 7304.                         do
 7303.                            $I_L7303_182 = 0
 7303. !dir$ shortloop16
 7303. !dir$ blocking_size( 2, 2 )
 7303.                            do
 7304.                               $I_L7304_176 = 0
 7304. !dir$ ivdep
 7304. !dir$ blocking_size( 256, 256 )
 7304.                               do
 7305.                                  $l_S20 = target(1 + $I_L7304_176 + 256 * $SI_L7304_127_G10)
 7306.                                  flux_direct($l_S20, $I_L7303_182 + 2 * $SI_L7303_149_G7) = _vu_plus( flux_direct($l_S20, $I_L7303_182 + 2 * $SI_L7303_149_G7), weight_long(1 + $I_L7304_176 + 256 * $SI_L7304_127_G10) * flux_direct_long(1 + $I_L7304_176 + 256 * $SI_L7304_127_G10, $I_L7303_182 + 2 * $SI_L7303_149_G7) )
 7304.                                  $I_L7304_176 = 1 + $I_L7304_176
 7304.                                  if ( $I_L7304_176 >= min( n_long, 256 + 256 * $SI_L7304_127_G10 ) + -256 * $SI_L7304_127_G10 ) exit
 7304.                               enddo
 7303.                               $I_L7303_182 = 1 + $I_L7303_182
 7303.                               if ( $I_L7303_182 >= min( 1 + n_layer, 2 + 2 * $SI_L7303_149_G7 ) + -2 * $SI_L7303_149_G7 ) exit
 7303.                            enddo
 7304.                            $SI_L7304_127_G10 = 1 + $SI_L7304_127_G10
 7308.                            if ( $SI_L7304_127_G10 >= _rsh( 255 + n_long, 8 ) ) exit
 7308.                         enddo
 7303.                         $SI_L7303_149_G7 = 1 + $SI_L7303_149_G7
 7303.                         if ( $SI_L7303_149_G7 >= _rsh( 2 + n_layer, 1 ) ) exit
 7303.                      enddo
 7303.                   endif
 7303.                endif
 7303.             endif
 7310.             if ( $lp_S4 > n_profile ) exit
 7310.          enddo
 7310.       endif
 7316.       if ( l_clear /= .false. ) then
 7320.          tau_clr_f%header%a_contig = 1
 7320.          tau_clr_f%dim_1%LB = 1
 7320.          tau_clr_f%dim_1%EX = ( max( 0, nd_profile ) )
 7320.          tau_clr_f%dim_1%SM = 1
 7320.          tau_clr_f%dim_2%LB = 1
 7320.          tau_clr_f%dim_2%EX = ( max( 0, nd_layer ) )
 7320.          tau_clr_f%dim_2%SM = ( max( 0, nd_profile ) )
 7320.          $_allo_P3(0) = 0x1000000000001L
 7320.          $_allo_P3(1) = loc( tau_clr_f )
 7320.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 7321.          omega_clr_f%header%a_contig = 1
 7321.          omega_clr_f%dim_1%LB = 1
 7321.          omega_clr_f%dim_1%EX = ( max( 0, nd_profile ) )
 7321.          omega_clr_f%dim_1%SM = 1
 7321.          omega_clr_f%dim_2%LB = 1
 7321.          omega_clr_f%dim_2%EX = ( max( 0, nd_layer ) )
 7321.          omega_clr_f%dim_2%SM = ( max( 0, nd_profile ) )
 7321.          $_allo_P4(0) = 0x1000000000001L
 7321.          $_allo_P4(1) = loc( omega_clr_f )
 7321.          call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
 7322.          phase_fnc_clr_f%header%a_contig = 1
 7322.          phase_fnc_clr_f%dim_1%LB = 1
 7322.          phase_fnc_clr_f%dim_1%EX = ( max( 0, nd_profile ) )
 7322.          phase_fnc_clr_f%dim_1%SM = 1
 7322.          phase_fnc_clr_f%dim_2%LB = 1
 7322.          phase_fnc_clr_f%dim_2%EX = ( max( 0, nd_layer ) )
 7322.          phase_fnc_clr_f%dim_2%SM = ( max( 0, nd_profile ) )
 7322.          phase_fnc_clr_f%dim_3%LB = 1
 7322.          phase_fnc_clr_f%dim_3%EX = 1
 7322.          phase_fnc_clr_f%dim_3%SM = ( max( 0, nd_profile ) * max( 0, nd_layer ) )
 7322.          $_allo_P5(0) = 0x1000000000001L
 7322.          $_allo_P5(1) = loc( phase_fnc_clr_f )
 7322.          call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
 7325.          t$5068 = 0
 7325.          t$5069 = 0
 7325.          t$5073 = 0
 7325.          if ( ss_prop%tau_clr%header%a_contig == 1 ) then
 7325. !dir$ suppress (ss_prop%tau_clr%base_addr)(ss_prop%tau_clr%dim_1%LB, ss_prop%tau_clr%dim_2%LB, 0)
 7325.             t$5067 = loc( (ss_prop%tau_clr%base_addr)(ss_prop%tau_clr%dim_1%LB, ss_prop%tau_clr%dim_2%LB, 0) )
 7325.          else
 7325.             t$5068 = ss_prop%tau_clr%dim_1%EX
 7325.             t$5069 = ss_prop%tau_clr%dim_2%EX
 7325.             t$5073 = int( _alloc( max( 0, 8 * max( 0, ss_prop%tau_clr%dim_2%EX ) * max( 0, ss_prop%tau_clr%dim_1%EX ) ) ), 8 )
 7325.             $F_A34 = ss_prop%tau_clr%dim_2%EX
 7325.             $F_A35 = ss_prop%tau_clr%dim_1%EX
 7325.             if ( and( -$F_A35, -$F_A34 ) < 0 ) then
 7325.                $SC_ss_prop_I109 = ss_prop%tau_clr%dim_1%SM
 7325.                $SC_ss_prop_I108 = ss_prop%tau_clr%dim_1%EX
 7325.                $SC_ss_prop_I110 = ss_prop%tau_clr%dim_1%LB
 7325.                $SC_ss_prop_I112 = ss_prop%tau_clr%dim_2%SM
 7325.                $SC_ss_prop_I111 = ss_prop%tau_clr%dim_2%EX
 7325.                $SC_ss_prop_I113 = ss_prop%tau_clr%dim_2%LB
 7325.                $I_L7325_151 = 0
 7325.                do
 7325.                   $I_L7325_131 = 0
 7325. !dir$ ivdep
 7325.                   do
 7325.                      t$5072(1 + $I_L7325_131, 1 + $I_L7325_151) = (ss_prop%tau_clr%base_addr)($SC_ss_prop_I110 + $I_L7325_131, $SC_ss_prop_I113 + $I_L7325_151, 0)
 7325.                      $I_L7325_131 = 1 + $I_L7325_131
 7325.                      if ( $I_L7325_131 >= $F_A35 ) exit
 7325.                   enddo
 7325.                   $I_L7325_151 = 1 + $I_L7325_151
 7325.                   if ( $I_L7325_151 >= $F_A34 ) exit
 7325.                enddo
 7325.             endif
 7325. !dir$ suppress t$5072
 7325.             t$5067 = loc( t$5072 )
 7325.          endif
 7325.          t$5075 = 0
 7325.          t$5076 = 0
 7325.          t$5080 = 0
 7325.          if ( ss_prop%omega_clr%header%a_contig == 1 ) then
 7325. !dir$ suppress (ss_prop%omega_clr%base_addr)(ss_prop%omega_clr%dim_1%LB, ss_prop%omega_clr%dim_2%LB, 0)
 7325.             t$5074 = loc( (ss_prop%omega_clr%base_addr)(ss_prop%omega_clr%dim_1%LB, ss_prop%omega_clr%dim_2%LB, 0) )
 7325.          else
 7325.             t$5075 = ss_prop%omega_clr%dim_1%EX
 7325.             t$5076 = ss_prop%omega_clr%dim_2%EX
 7325.             t$5080 = int( _alloc( max( 0, 8 * max( 0, ss_prop%omega_clr%dim_2%EX ) * max( 0, ss_prop%omega_clr%dim_1%EX ) ) ), 8 )
 7325.             $F_A36 = ss_prop%omega_clr%dim_2%EX
 7325.             $F_A37 = ss_prop%omega_clr%dim_1%EX
 7325.             if ( and( -$F_A37, -$F_A36 ) < 0 ) then
 7325.                $SC_ss_prop_I115 = ss_prop%omega_clr%dim_1%SM
 7325.                $SC_ss_prop_I114 = ss_prop%omega_clr%dim_1%EX
 7325.                $SC_ss_prop_I116 = ss_prop%omega_clr%dim_1%LB
 7325.                $SC_ss_prop_I118 = ss_prop%omega_clr%dim_2%SM
 7325.                $SC_ss_prop_I117 = ss_prop%omega_clr%dim_2%EX
 7325.                $SC_ss_prop_I119 = ss_prop%omega_clr%dim_2%LB
 7325.                $I_L7325_153 = 0
 7325.                do
 7325.                   $I_L7325_133 = 0
 7325. !dir$ ivdep
 7325.                   do
 7325.                      t$5079(1 + $I_L7325_133, 1 + $I_L7325_153) = (ss_prop%omega_clr%base_addr)($SC_ss_prop_I116 + $I_L7325_133, $SC_ss_prop_I119 + $I_L7325_153, 0)
 7325.                      $I_L7325_133 = 1 + $I_L7325_133
 7325.                      if ( $I_L7325_133 >= $F_A37 ) exit
 7325.                   enddo
 7325.                   $I_L7325_153 = 1 + $I_L7325_153
 7325.                   if ( $I_L7325_153 >= $F_A36 ) exit
 7325.                enddo
 7325.             endif
 7325. !dir$ suppress t$5079
 7325.             t$5074 = loc( t$5079 )
 7325.          endif
 7325.          t$5082 = 0
 7325.          t$5083 = 0
 7325.          t$5084 = 0
 7325.          t$5089 = 0
 7325.          if ( ss_prop%phase_fnc_clr%header%a_contig == 1 ) then
 7325. !dir$ suppress (ss_prop%phase_fnc_clr%base_addr)(ss_prop%phase_fnc_clr%dim_1%LB, ss_prop%phase_fnc_clr%dim_2%LB, ss_prop%phase_fnc_clr%dim_3%LB, 0)
 7325.             t$5081 = loc( (ss_prop%phase_fnc_clr%base_addr)(ss_prop%phase_fnc_clr%dim_1%LB, ss_prop%phase_fnc_clr%dim_2%LB, ss_prop%phase_fnc_clr%dim_3%LB, 0) )
 7325.          else
 7325.             t$5082 = ss_prop%phase_fnc_clr%dim_1%EX
 7325.             t$5083 = ss_prop%phase_fnc_clr%dim_2%EX
 7325.             t$5084 = ss_prop%phase_fnc_clr%dim_3%EX
 7325.             t$5089 = int( _alloc( max( 0, 8 * max( 0, ss_prop%phase_fnc_clr%dim_3%EX ) * max( 0, ss_prop%phase_fnc_clr%dim_2%EX ) * max( 0, ss_prop%phase_fnc_clr%dim_1%EX ) ) ), 8 )
 7325.             $F_A38 = ss_prop%phase_fnc_clr%dim_3%EX
 7325.             $F_A39 = ss_prop%phase_fnc_clr%dim_2%EX
 7325.             $F_A40 = ss_prop%phase_fnc_clr%dim_1%EX
 7325.             if ( and( and( -$F_A39, -$F_A38 ), -$F_A40 ) < 0 ) then
 7325.                $SC_ss_prop_I121 = ss_prop%phase_fnc_clr%dim_1%SM
 7325.                $SC_ss_prop_I120 = ss_prop%phase_fnc_clr%dim_1%EX
 7325.                $SC_ss_prop_I122 = ss_prop%phase_fnc_clr%dim_1%LB
 7325.                $SC_ss_prop_I124 = ss_prop%phase_fnc_clr%dim_2%SM
 7325.                $SC_ss_prop_I123 = ss_prop%phase_fnc_clr%dim_2%EX
 7325.                $SC_ss_prop_I125 = ss_prop%phase_fnc_clr%dim_2%LB
 7325.                $SC_ss_prop_I127 = ss_prop%phase_fnc_clr%dim_3%SM
 7325.                $SC_ss_prop_I126 = ss_prop%phase_fnc_clr%dim_3%EX
 7325.                $SC_ss_prop_I128 = ss_prop%phase_fnc_clr%dim_3%LB
 7325.                $I_L7325_163 = 0
 7325.                do
 7325.                   $I_L7325_155 = 0
 7325.                   do
 7325.                      $I_L7325_135 = 0
 7325. !dir$ ivdep
 7325.                      do
 7325.                         t$5088(1 + $I_L7325_135, 1 + $I_L7325_155, 1 + $I_L7325_163) = (ss_prop%phase_fnc_clr%base_addr)($SC_ss_prop_I122 + $I_L7325_135, $SC_ss_prop_I125 + $I_L7325_155, $SC_ss_prop_I128 + $I_L7325_163, 0)
 7325.                         $I_L7325_135 = 1 + $I_L7325_135
 7325.                         if ( $I_L7325_135 >= $F_A40 ) exit
 7325.                      enddo
 7325.                      $I_L7325_155 = 1 + $I_L7325_155
 7325.                      if ( $I_L7325_155 >= $F_A39 ) exit
 7325.                   enddo
 7325.                   $I_L7325_163 = 1 + $I_L7325_163
 7325.                   if ( $I_L7325_163 >= $F_A38 ) exit
 7325.                enddo
 7325.             endif
 7325. !dir$ suppress t$5088
 7325.             t$5081 = loc( t$5088 )
 7325.          endif
 7326.          t$5091 = 0
 7326.          t$5092 = 0
 7326.          t$5093 = 0
 7326.          t$5098 = 0
 7326.          if ( ss_prop%tau%header%a_contig == 1 ) then
 7326. !dir$ suppress (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, ss_prop%tau%dim_3%LB, 0)
 7326.             t$5090 = loc( (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, ss_prop%tau%dim_3%LB, 0) )
 7326.          else
 7326.             t$5091 = ss_prop%tau%dim_1%EX
 7326.             t$5092 = ss_prop%tau%dim_2%EX
 7326.             t$5093 = ss_prop%tau%dim_3%EX
 7326.             t$5098 = int( _alloc( max( 0, 8 * max( 0, ss_prop%tau%dim_3%EX ) * max( 0, ss_prop%tau%dim_2%EX ) * max( 0, ss_prop%tau%dim_1%EX ) ) ), 8 )
 7326.             $F_A41 = ss_prop%tau%dim_3%EX
 7326.             $F_A42 = ss_prop%tau%dim_2%EX
 7326.             $F_A43 = ss_prop%tau%dim_1%EX
 7326.             if ( and( and( -$F_A42, -$F_A41 ), -$F_A43 ) < 0 ) then
 7326.                $SC_ss_prop_I130 = ss_prop%tau%dim_1%SM
 7326.                $SC_ss_prop_I129 = ss_prop%tau%dim_1%EX
 7326.                $SC_ss_prop_I131 = ss_prop%tau%dim_1%LB
 7326.                $SC_ss_prop_I133 = ss_prop%tau%dim_2%SM
 7326.                $SC_ss_prop_I132 = ss_prop%tau%dim_2%EX
 7326.                $SC_ss_prop_I134 = ss_prop%tau%dim_2%LB
 7326.                $SC_ss_prop_I136 = ss_prop%tau%dim_3%SM
 7326.                $SC_ss_prop_I135 = ss_prop%tau%dim_3%EX
 7326.                $SC_ss_prop_I137 = ss_prop%tau%dim_3%LB
 7326.                $I_L7326_165 = 0
 7326.                do
 7326.                   $I_L7326_157 = 0
 7326.                   do
 7326.                      $I_L7326_137 = 0
 7326. !dir$ ivdep
 7326.                      do
 7326.                         t$5097(1 + $I_L7326_137, 1 + $I_L7326_157, 1 + $I_L7326_165) = (ss_prop%tau%base_addr)($SC_ss_prop_I131 + $I_L7326_137, $SC_ss_prop_I134 + $I_L7326_157, $SC_ss_prop_I137 + $I_L7326_165, 0)
 7326.                         $I_L7326_137 = 1 + $I_L7326_137
 7326.                         if ( $I_L7326_137 >= $F_A43 ) exit
 7326.                      enddo
 7326.                      $I_L7326_157 = 1 + $I_L7326_157
 7326.                      if ( $I_L7326_157 >= $F_A42 ) exit
 7326.                   enddo
 7326.                   $I_L7326_165 = 1 + $I_L7326_165
 7326.                   if ( $I_L7326_165 >= $F_A41 ) exit
 7326.                enddo
 7326.             endif
 7326. !dir$ suppress t$5097
 7326.             t$5090 = loc( t$5097 )
 7326.          endif
 7326.          t$5100 = 0
 7326.          t$5101 = 0
 7326.          t$5102 = 0
 7326.          t$5107 = 0
 7326.          if ( ss_prop%omega%header%a_contig == 1 ) then
 7326. !dir$ suppress (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, ss_prop%omega%dim_3%LB, 0)
 7326.             t$5099 = loc( (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, ss_prop%omega%dim_3%LB, 0) )
 7326.          else
 7326.             t$5100 = ss_prop%omega%dim_1%EX
 7326.             t$5101 = ss_prop%omega%dim_2%EX
 7326.             t$5102 = ss_prop%omega%dim_3%EX
 7326.             t$5107 = int( _alloc( max( 0, 8 * max( 0, ss_prop%omega%dim_3%EX ) * max( 0, ss_prop%omega%dim_2%EX ) * max( 0, ss_prop%omega%dim_1%EX ) ) ), 8 )
 7326.             $F_A44 = ss_prop%omega%dim_3%EX
 7326.             $F_A45 = ss_prop%omega%dim_2%EX
 7326.             $F_A46 = ss_prop%omega%dim_1%EX
 7326.             if ( and( and( -$F_A45, -$F_A44 ), -$F_A46 ) < 0 ) then
 7326.                $SC_ss_prop_I139 = ss_prop%omega%dim_1%SM
 7326.                $SC_ss_prop_I138 = ss_prop%omega%dim_1%EX
 7326.                $SC_ss_prop_I140 = ss_prop%omega%dim_1%LB
 7326.                $SC_ss_prop_I142 = ss_prop%omega%dim_2%SM
 7326.                $SC_ss_prop_I141 = ss_prop%omega%dim_2%EX
 7326.                $SC_ss_prop_I143 = ss_prop%omega%dim_2%LB
 7326.                $SC_ss_prop_I145 = ss_prop%omega%dim_3%SM
 7326.                $SC_ss_prop_I144 = ss_prop%omega%dim_3%EX
 7326.                $SC_ss_prop_I146 = ss_prop%omega%dim_3%LB
 7326.                $I_L7326_167 = 0
 7326.                do
 7326.                   $I_L7326_159 = 0
 7326.                   do
 7326.                      $I_L7326_139 = 0
 7326. !dir$ ivdep
 7326.                      do
 7326.                         t$5106(1 + $I_L7326_139, 1 + $I_L7326_159, 1 + $I_L7326_167) = (ss_prop%omega%base_addr)($SC_ss_prop_I140 + $I_L7326_139, $SC_ss_prop_I143 + $I_L7326_159, $SC_ss_prop_I146 + $I_L7326_167, 0)
 7326.                         $I_L7326_139 = 1 + $I_L7326_139
 7326.                         if ( $I_L7326_139 >= $F_A46 ) exit
 7326.                      enddo
 7326.                      $I_L7326_159 = 1 + $I_L7326_159
 7326.                      if ( $I_L7326_159 >= $F_A45 ) exit
 7326.                   enddo
 7326.                   $I_L7326_167 = 1 + $I_L7326_167
 7326.                   if ( $I_L7326_167 >= $F_A44 ) exit
 7326.                enddo
 7326.             endif
 7326. !dir$ suppress t$5106
 7326.             t$5099 = loc( t$5106 )
 7326.          endif
 7326.          t$5109 = 0
 7326.          t$5110 = 0
 7326.          t$5111 = 0
 7326.          t$5112 = 0
 7326.          t$5118 = 0
 7326.          if ( ss_prop%phase_fnc%header%a_contig == 1 ) then
 7326. !dir$ suppress (ss_prop%phase_fnc%base_addr)(ss_prop%phase_fnc%dim_1%LB, ss_prop%phase_fnc%dim_2%LB, ss_prop%phase_fnc%dim_3%LB, ss_prop%phase_fnc%dim_4%LB, 0)
 7326.             t$5108 = loc( (ss_prop%phase_fnc%base_addr)(ss_prop%phase_fnc%dim_1%LB, ss_prop%phase_fnc%dim_2%LB, ss_prop%phase_fnc%dim_3%LB, ss_prop%phase_fnc%dim_4%LB, 0) )
 7326.          else
 7326.             t$5109 = ss_prop%phase_fnc%dim_1%EX
 7326.             t$5110 = ss_prop%phase_fnc%dim_2%EX
 7326.             t$5111 = ss_prop%phase_fnc%dim_3%EX
 7326.             t$5112 = ss_prop%phase_fnc%dim_4%EX
 7326.             t$5118 = int( _alloc( max( 0, 8 * max( 0, ss_prop%phase_fnc%dim_4%EX ) * max( 0, ss_prop%phase_fnc%dim_3%EX ) * max( 0, ss_prop%phase_fnc%dim_2%EX ) * max( 0, ss_prop%phase_fnc%dim_1%EX ) ) ), 8 )
 7326.             $F_A47 = ss_prop%phase_fnc%dim_4%EX
 7326.             $F_A48 = ss_prop%phase_fnc%dim_3%EX
 7326.             $F_A49 = ss_prop%phase_fnc%dim_2%EX
 7326.             $F_A50 = ss_prop%phase_fnc%dim_1%EX
 7326.             if ( and( and( and( -$F_A48, -$F_A47 ), -$F_A49 ), -$F_A50 ) < 0 ) then
 7326.                $SC_ss_prop_I148 = ss_prop%phase_fnc%dim_1%SM
 7326.                $SC_ss_prop_I147 = ss_prop%phase_fnc%dim_1%EX
 7326.                $SC_ss_prop_I149 = ss_prop%phase_fnc%dim_1%LB
 7326.                $SC_ss_prop_I151 = ss_prop%phase_fnc%dim_2%SM
 7326.                $SC_ss_prop_I150 = ss_prop%phase_fnc%dim_2%EX
 7326.                $SC_ss_prop_I152 = ss_prop%phase_fnc%dim_2%LB
 7326.                $SC_ss_prop_I154 = ss_prop%phase_fnc%dim_3%SM
 7326.                $SC_ss_prop_I153 = ss_prop%phase_fnc%dim_3%EX
 7326.                $SC_ss_prop_I155 = ss_prop%phase_fnc%dim_3%LB
 7326.                $SC_ss_prop_I106 = ss_prop%phase_fnc%dim_4%SM
 7326.                $SC_ss_prop_I105 = ss_prop%phase_fnc%dim_4%EX
 7326.                $SC_ss_prop_I107 = ss_prop%phase_fnc%dim_4%LB
 7326.                $I_L7326_171 = 0
 7326.                do
 7326.                   $I_L7326_169 = 0
 7326.                   do
 7326.                      $I_L7326_161 = 0
 7326.                      do
 7326.                         $I_L7326_141 = 0
 7326. !dir$ ivdep
 7326.                         do
 7326.                            t$5117(1 + $I_L7326_141, 1 + $I_L7326_161, 1 + $I_L7326_169, 1 + $I_L7326_171) = (ss_prop%phase_fnc%base_addr)($SC_ss_prop_I149 + $I_L7326_141, $SC_ss_prop_I152 + $I_L7326_161, $SC_ss_prop_I155 + $I_L7326_169, $SC_ss_prop_I107 + $I_L7326_171, 0)
 7326.                            $I_L7326_141 = 1 + $I_L7326_141
 7326.                            if ( $I_L7326_141 >= $F_A50 ) exit
 7326.                         enddo
 7326.                         $I_L7326_161 = 1 + $I_L7326_161
 7326.                         if ( $I_L7326_161 >= $F_A49 ) exit
 7326.                      enddo
 7326.                      $I_L7326_169 = 1 + $I_L7326_169
 7326.                      if ( $I_L7326_169 >= $F_A48 ) exit
 7326.                   enddo
 7326.                   $I_L7326_171 = 1 + $I_L7326_171
 7326.                   if ( $I_L7326_171 >= $F_A47 ) exit
 7326.                enddo
 7326.             endif
 7326. !dir$ suppress t$5117
 7326.             t$5108 = loc( t$5117 )
 7326.          endif
 7324.          call copy_clr_full( n_profile, n_layer, n_cloud_top, 1, t$5067, t$5074, t$5081, t$5090, t$5099, t$5108, (tau_clr_f%base_addr)(1, 1, 0), (omega_clr_f%base_addr)(1, 1, 0), (phase_fnc_clr_f%base_addr)(1, 1, 1, 0), nd_profile, nd_layer, nd_layer_clr, id_ct, 1 )
 7326.          if ( ss_prop%phase_fnc%header%a_contig /= 1 ) then
 7326.             _free( t$5118 )
 7326.          endif
 7326.          if ( ss_prop%omega%header%a_contig /= 1 ) then
 7326.             _free( t$5107 )
 7326.          endif
 7326.          if ( ss_prop%tau%header%a_contig /= 1 ) then
 7326.             _free( t$5098 )
 7326.          endif
 7325.          if ( ss_prop%phase_fnc_clr%header%a_contig /= 1 ) then
 7325.             _free( t$5089 )
 7325.          endif
 7325.          if ( ss_prop%omega_clr%header%a_contig /= 1 ) then
 7325.             _free( t$5080 )
 7325.          endif
 7325.          if ( ss_prop%tau_clr%header%a_contig /= 1 ) then
 7325.             _free( t$5073 )
 7325.          endif
 7332.          call two_stream( ierr, n_profile, n_layer, i_2stream, i_solver_clear, l_scale_solar, adjust_solar_ke(1, 1), isolir, diff_planck(1, 1), l_ir_source_quad, diff_planck_2(1, 1), flux_inc_down(1), flux_inc_direct(1), sec_00(1, 1), rho_alb(1, 1), rho_alb(1, 2), d_planck_flux_surface(1), (tau_clr_f%base_addr)(1, 1, 0), (omega_clr_f%base_addr)(1, 1, 0), (phase_fnc_clr_f%base_addr)(1, 1, 1, 0), flux_direct_clear(1, 0), flux_total_clear(1, 1), nd_profile, nd_layer, nd_source_coeff )
 7360.          $_allo_P6(0) = 0x1000000000001L
 7360.          $_allo_P6(1) = loc( tau_clr_f )
 7360.          call __deallocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
 7360.          tau_clr_f%header%assoc = 0
 7361.          $_allo_P7(0) = 0x1000000000001L
 7361.          $_allo_P7(1) = loc( omega_clr_f )
 7361.          call __deallocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
 7361.          omega_clr_f%header%assoc = 0
 7362.          $_allo_P8(0) = 0x1000000000001L
 7362.          $_allo_P8(1) = loc( phase_fnc_clr_f )
 7362.          call __deallocate( $_allo_P8, 0, 0, _fcd( 0, 0 ) )
 7362.          phase_fnc_clr_f%header%assoc = 0
 7362.       endif
 7103.       $_allo_P9(0) = 0x3000000000001L
 7103.       $_allo_P9(1) = loc( tau_clr_f )
 7103.       $_allo_P9(2) = loc( phase_fnc_clr_f )
 7103.       $_allo_P9(3) = loc( omega_clr_f )
 7103.       call _dealloc( $_allo_P9, 0, 0, _fcd( 0, 0 ) )
 6871.       _free( t$1521 )
 7369.       return
 7369.       end
 7369.       
 7389.       
 7389.       subroutine calc_radiance_ipa( ierr, n_profile, n_layer, n_cloud_top, n_order_phase, ms_min, ms_max, ls_local_trunc, i_truncation, accuracy_adaptive, euler_factor, i_sph_algorithm, i_sph_mode, l_rescale, ia_sph_mm, cg_coeff, uplm_zero, uplm_sol, l_scale_solar, adjust_solar_ke, isolir, diff_planck, l_ir_source_quad, diff_planck_2, flux_inc_down, zen_0, d_planck_flux_surface, ls_brdf_trunc, n_brdf_basis_fnc, rho_alb, f_brdf, brdf_sol, brdf_hemi, ss_prop, n_column_slv, list_column_slv, i_clm_lyr_chn, i_clm_cld_typ, area_column, n_viewing_level, i_rad_layer, frac_rad_layer, n_direction, direction, flux_direct, flux_total, i_direct, radiance, j_radiance, nd_profile, nd_layer, nd_column, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc, nd_red_eigensystem, nd_sph_equation, nd_sph_diagonal, nd_sph_cf_weight, nd_sph_u_range, nd_viewing_level, nd_direction, nd_profile_column )
 7389.       t$179 = nd_max_order
 7389.       t$1568 = 1 + nd_max_order
 7521.       t$1569 = _zla( 0, 1 + nd_max_order )
 7389.       t$180 = nd_sph_coeff
 7524.       t$1570 = _zla( 0, nd_sph_coeff )
 7389.       t$181 = nd_profile
 7528.       t$1571 = _zla( 0, nd_profile )
 7389.       t$1572 = _zla( 0, nd_profile )
 7389.       t$1573 = _zla( 0, nd_sph_coeff ) * _zla( 0, nd_profile )
 7389.       t$182 = nd_layer
 7548.       t$1574 = _zla( 0, nd_layer )
 7389.       t$1575 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 7389.       t$183 = nd_brdf_basis_fnc
 7578.       t$1576 = _zla( 0, nd_brdf_basis_fnc )
 7389.       t$1577 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
 7389.       t$184 = nd_brdf_trunc / 2
 7389.       t$185 = nd_brdf_trunc
 7389.       t$1578 = _zla( 0, nd_brdf_basis_fnc )
 7389.       t$1579 = 1 + t$184
 7580.       t$1580 = _zla( 0, 1 + t$184 )
 7389.       t$1581 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$184 )
 7389.       t$1582 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$184 ) * _zla( 0, 1 + t$184 )
 7389.       t$1583 = 1 + nd_brdf_trunc
 7580.       t$1584 = _zla( 0, 1 + nd_brdf_trunc )
 7389.       t$1585 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$184 ) * _zla( 0, 1 + t$184 ) * _zla( 0, 1 + nd_brdf_trunc )
 7389.       t$186 = nd_direction
 7389.       t$1586 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
 7583.       t$1587 = _zla( 0, nd_direction )
 7389.       t$1588 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_direction )
 2600.       if ( t$27 == 0 ) then
 2600.          t$1593(1) = 4
 2600.          t$1594(1) = 0
 2600.          t$1595(1) = 0
 2600.          t$1590(1) = int( loc( t$26 ), 8 )
 2600.          t$1591(1) = 0
 2600.          t$1592(1) = int( loc( t$1589 ), 8 )
 2600.          t$27 = __get_dynamic_type( 2, t$1590(1), t$1593(1), 1, t$1591(1), t$1592(1), t$1594(1), t$1595(1) )
 2600.       endif
 7389.       t$187 = nd_column
 7594.       t$1597 = max( 0, nd_column )
 7389.       t$1598 = _zla( 0, nd_profile ) * max( 0, nd_column )
 7389.       t$188 = nd_viewing_level
 7608.       t$1599 = max( 0, nd_viewing_level )
 7389.       t$189 = nd_radiance_profile
 7619.       t$1600 = max( 0, nd_radiance_profile )
 7389.       t$1601 = max( 0, nd_radiance_profile )
 7389.       t$1602 = _zla( 0, nd_direction ) * max( 0, nd_radiance_profile )
 7389.       t$1603 = 2 * _zla( 0, nd_direction ) * max( 0, nd_radiance_profile )
 7389.       t$190 = nd_flux_profile
 7627.       t$1604 = max( 0, nd_flux_profile )
 7389.       t$1605 = max( 0, nd_flux_profile )
 7389.       t$1606 = 1 + nd_layer
 7627.       t$1607 = max( 0, 1 + nd_layer )
 7389.       t$1608 = max( 0, nd_flux_profile ) * max( 0, 1 + nd_layer )
 7389.       t$191 = ( 2 + 2 * nd_layer )
 7629.       t$1609 = max( 0, ( 2 + 2 * nd_layer ) )
 7389.       t$1610 = max( 0, nd_flux_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
 7389.       t$1611 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer )
 7389.       t$1612 = max( 0, nd_viewing_level ) * max( 0, nd_radiance_profile )
 7389.       t$1613 = _zla( 0, nd_direction ) * max( 0, nd_viewing_level ) * max( 0, nd_radiance_profile )
 7389.       t$192 = nd_j_profile
 7633.       t$1614 = max( 0, nd_j_profile )
 7389.       t$1615 = max( 0, nd_j_profile )
 7389.       t$1616 = max( 0, nd_viewing_level ) * max( 0, nd_j_profile )
 7389.       t$193 = nd_profile_column
 7695.       t$1617 = max( 0, nd_profile_column )
 7389.       t$1618 = max( 0, nd_profile_column )
 7389.       t$1619 = _zla( 0, nd_layer ) * max( 0, nd_profile_column )
 7695.       t$1622 = 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column )
 7389.       t$1623 = _zla( 0, nd_brdf_basis_fnc ) * max( 0, nd_profile_column )
 7389.       t$1624 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_direction ) * max( 0, nd_profile_column )
 7716.       t$1625 = 8 * ( 7 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column ) ) / 8
 7716.       t$1627 = t$1625 + 8 * _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_direction ) * max( 0, nd_profile_column )
 7712.       t$1628 = 8 * ( 7 + t$1625 + 8 * _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_direction ) * max( 0, nd_profile_column ) ) / 8
 7712.       t$1630 = t$1628 + 8 * _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_direction ) * max( 0, nd_profile_column )
 7703.       t$1631 = 8 * ( 7 + t$1628 + 8 * _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_direction ) * max( 0, nd_profile_column ) ) / 8
 7703.       t$1633 = t$1631 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column )
 7701.       t$1634 = 8 * ( 7 + t$1631 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column ) ) / 8
 7701.       t$1636 = t$1634 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column )
 7389.       t$1637 = _zla( 0, nd_direction ) * max( 0, nd_profile_column )
 7389.       t$1638 = 2 * _zla( 0, nd_direction ) * max( 0, nd_profile_column )
 7720.       t$1639 = 8 * ( 7 + t$1634 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column ) ) / 8
 7720.       t$1641 = t$1639 + 16 * _zla( 0, nd_direction ) * max( 0, nd_profile_column )
 7707.       t$1642 = 8 * ( 7 + t$1639 + 16 * _zla( 0, nd_direction ) * max( 0, nd_profile_column ) ) / 8
 7707.       t$1644 = t$1642 + 8 * max( 0, nd_profile_column )
 7389.       t$1645 = max( 0, nd_profile_column ) * max( 0, 1 + nd_layer )
 7725.       t$1646 = 8 * ( 7 + t$1642 + 8 * max( 0, nd_profile_column ) ) / 8
 7725.       t$1648 = t$1646 + 8 * max( 0, nd_profile_column ) * max( 0, 1 + nd_layer )
 7705.       t$1649 = 8 * ( 7 + t$1646 + 8 * max( 0, nd_profile_column ) * max( 0, 1 + nd_layer ) ) / 8
 7705.       t$1651 = t$1649 + 8 * max( 0, nd_profile_column )
 7389.       t$1652 = max( 0, ( 2 + 2 * nd_layer ) ) * max( 0, nd_profile_column )
 7727.       t$1653 = 8 * ( 7 + t$1649 + 8 * max( 0, nd_profile_column ) ) / 8
 7727.       t$1655 = t$1653 + 8 * max( 0, ( 2 + 2 * nd_layer ) ) * max( 0, nd_profile_column )
 7693.       t$1656 = 8 * ( 7 + t$1653 + 8 * max( 0, ( 2 + 2 * nd_layer ) ) * max( 0, nd_profile_column ) ) / 8
 7693.       t$1658 = t$1656 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column )
 7729.       t$1659 = 8 * ( 7 + t$1656 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column ) ) / 8
 7729.       t$1661 = t$1659 + 8 * max( 0, nd_profile_column ) * max( 0, 1 + nd_layer )
 7686.       t$1662 = 8 * ( 7 + t$1659 + 8 * max( 0, nd_profile_column ) * max( 0, 1 + nd_layer ) ) / 8
 7686.       t$1664 = t$1662 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column )
 7389.       t$1665 = _zla( 0, nd_layer ) * max( 0, nd_profile_column )
 7688.       t$1666 = max( 0, nd_max_order )
 7389.       t$1667 = _zla( 0, nd_layer ) * max( 0, nd_profile_column ) * max( 0, nd_max_order )
 7688.       t$1668 = 8 * ( 7 + t$1662 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column ) ) / 8
 7688.       t$1670 = t$1668 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column ) * max( 0, nd_max_order )
 7389.       t$1671 = _zla( 0, nd_layer ) * _zla( 0, nd_direction ) * max( 0, nd_profile_column )
 7690.       t$1672 = 8 * ( 7 + t$1668 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column ) * max( 0, nd_max_order ) ) / 8
 7690.       t$1674 = t$1672 + 8 * _zla( 0, nd_layer ) * _zla( 0, nd_direction ) * max( 0, nd_profile_column )
 7389.       t$1675 = max( 0, nd_viewing_level ) * max( 0, nd_profile_column )
 7734.       t$1676 = 8 * ( 7 + t$1672 + 8 * _zla( 0, nd_layer ) * _zla( 0, nd_direction ) * max( 0, nd_profile_column ) ) / 8
 7734.       t$1678 = t$1676 + 8 * max( 0, nd_viewing_level ) * max( 0, nd_profile_column )
 7389.       t$1679 = max( 0, nd_viewing_level ) * max( 0, nd_profile_column )
 7389.       t$1680 = _zla( 0, nd_direction ) * max( 0, nd_viewing_level ) * max( 0, nd_profile_column )
 7731.       t$1681 = 8 * ( 7 + t$1676 + 8 * max( 0, nd_viewing_level ) * max( 0, nd_profile_column ) ) / 8
 7731.       t$1683 = t$1681 + 8 * _zla( 0, nd_direction ) * max( 0, nd_viewing_level ) * max( 0, nd_profile_column )
 7389.       t$1684 = _zla( 0, nd_brdf_basis_fnc ) * max( 0, nd_profile_column )
 7710.       t$1685 = 8 * ( 7 + t$1681 + 8 * _zla( 0, nd_direction ) * max( 0, nd_viewing_level ) * max( 0, nd_profile_column ) ) / 8
 7710.       t$1687 = t$1685 + 8 * _zla( 0, nd_brdf_basis_fnc ) * max( 0, nd_profile_column )
 7673.       t$1689 = t$1685 + 8 * _zla( 0, nd_brdf_basis_fnc ) * max( 0, nd_profile_column ) + 4 * max( 0, nd_profile_column )
 7684.       t$1690 = 8 * ( 7 + t$1685 + 8 * _zla( 0, nd_brdf_basis_fnc ) * max( 0, nd_profile_column ) + 4 * max( 0, nd_profile_column ) ) / 8
 7684.       t$1692 = t$1690 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column )
 7389.       t$1693 = _zla( 0, nd_sph_coeff ) * max( 0, nd_profile_column )
 7699.       t$1694 = 8 * ( 7 + t$1690 + 8 * _zla( 0, nd_layer ) * max( 0, nd_profile_column ) ) / 8
 7699.       t$1696 = t$1694 + 8 * _zla( 0, nd_sph_coeff ) * max( 0, nd_profile_column )
 7676.       t$1697 = 8 * ( 7 + t$1694 + 8 * _zla( 0, nd_sph_coeff ) * max( 0, nd_profile_column ) ) / 8
 7676.       t$1699 = t$1697 + 8 * max( 0, nd_profile_column )
 7697.       t$1700 = 8 * ( 7 + t$1697 + 8 * max( 0, nd_profile_column ) ) / 8
 7697.       t$1702 = t$1700 + 8 * max( 0, nd_profile_column )
 7389.       t$1620 = int( _alloc( t$1700 + 8 * max( 0, nd_profile_column ) ), 8 )
 7695.       t$1621 = t$1620
 7716.       t$1626 = t$1625 + t$1620
 7712.       t$1629 = t$1628 + t$1620
 7703.       t$1632 = t$1631 + t$1620
 7701.       t$1635 = t$1634 + t$1620
 7720.       t$1640 = t$1639 + t$1620
 7707.       t$1643 = t$1642 + t$1620
 7725.       t$1647 = t$1646 + t$1620
 7705.       t$1650 = t$1649 + t$1620
 7727.       t$1654 = t$1653 + t$1620
 7693.       t$1657 = t$1656 + t$1620
 7729.       t$1660 = t$1659 + t$1620
 7686.       t$1663 = t$1662 + t$1620
 7688.       t$1669 = t$1668 + t$1620
 7690.       t$1673 = t$1672 + t$1620
 7734.       t$1677 = t$1676 + t$1620
 7731.       t$1682 = t$1681 + t$1620
 7710.       t$1686 = t$1685 + t$1620
 7673.       t$1688 = t$1685 + t$1620 + 8 * _zla( 0, nd_brdf_basis_fnc ) * max( 0, nd_profile_column )
 7684.       t$1691 = t$1690 + t$1620
 7699.       t$1695 = t$1694 + t$1620
 7676.       t$1698 = t$1697 + t$1620
 7697.       t$1701 = t$1700 + t$1620
 7749.       if ( i_sph_mode == 2 ) then
 7751.          if ( 2 + 2 * n_layer > 0 ) then
 7752.             if ( n_profile > 0 ) then
 7751.                $I_L7751_297 = 0
 7751.                do
 7752.                   $I_L7752_225 = 0
 7752. !dir$ ivdep
 7752.                   do
 7753.                      flux_total(1 + $I_L7752_225, 1 + $I_L7751_297) = 0.0
 7754.                      $I_L7752_225 = 1 + $I_L7752_225
 7752.                      if ( $I_L7752_225 >= n_profile ) exit
 7752.                   enddo
 7755.                   $I_L7751_297 = 1 + $I_L7751_297
 7754.                   if ( $I_L7751_297 >= 2 + 2 * n_layer ) exit
 7754.                enddo
 7754.             endif
 7754.          endif
 7757.          if ( isolir == 1 ) then
 7758.             if ( n_layer >= 0 ) then
 7759.                if ( n_profile > 0 ) then
 7758.                   $I_L7758_299 = 0
 7758.                   do
 7759.                      $I_L7759_227 = 0
 7759. !dir$ ivdep
 7759.                      do
 7760.                         flux_direct(1 + $I_L7759_227, $I_L7758_299) = 0.0
 7761.                         $I_L7759_227 = 1 + $I_L7759_227
 7759.                         if ( $I_L7759_227 >= n_profile ) exit
 7759.                      enddo
 7762.                      $I_L7758_299 = 1 + $I_L7758_299
 7761.                      if ( $I_L7758_299 >= 1 + n_layer ) exit
 7761.                   enddo
 7761.                endif
 7761.             endif
 7761.          endif
 7761.       else
 7767.          if ( n_direction > 0 ) then
 7768.             if ( n_viewing_level > 0 ) then
 7769.                if ( n_profile > 0 ) then
 7767.                   $I_L7767_345 = 0
 7767.                   do
 7768.                      $I_L7768_301 = 0
 7768.                      do
 7769.                         $I_L7769_229 = 0
 7769. !dir$ ivdep
 7769.                         do
 7770.                            radiance(1 + $I_L7769_229, 1 + $I_L7768_301, 1 + $I_L7767_345) = 0.0
 7771.                            $I_L7769_229 = 1 + $I_L7769_229
 7769.                            if ( $I_L7769_229 >= n_profile ) exit
 7769.                         enddo
 7772.                         $I_L7768_301 = 1 + $I_L7768_301
 7771.                         if ( $I_L7768_301 >= n_viewing_level ) exit
 7771.                      enddo
 7773.                      $I_L7767_345 = 1 + $I_L7767_345
 7772.                      if ( $I_L7767_345 >= n_direction ) exit
 7772.                   enddo
 7772.                endif
 7772.             endif
 7772.          endif
 7775.          if ( n_viewing_level > 0 ) then
 7776.             if ( n_profile > 0 ) then
 7775.                $I_L7775_303 = 0
 7775.                do
 7776.                   $I_L7776_231 = 0
 7776. !dir$ ivdep
 7776.                   do
 7777.                      j_radiance(1 + $I_L7776_231, 1 + $I_L7775_303) = 0.0
 7778.                      $I_L7776_231 = 1 + $I_L7776_231
 7776.                      if ( $I_L7776_231 >= n_profile ) exit
 7776.                   enddo
 7779.                   $I_L7775_303 = 1 + $I_L7775_303
 7778.                   if ( $I_L7775_303 >= n_viewing_level ) exit
 7778.                enddo
 7778.             endif
 7778.          endif
 7781.          if ( isolir == 1 ) then
 7784.             if ( n_layer > 0 ) then
 7785.                if ( n_profile > 0 ) then
 7784.                   $I_L7784_305 = 0
 7784.                   do
 7785.                      $I_L7785_233 = 0
 7785. !dir$ ivdep
 7785.                      do
 7786.                         i_direct(1 + $I_L7785_233, 1 + $I_L7784_305) = 0.0
 7787.                         $I_L7785_233 = 1 + $I_L7785_233
 7785.                         if ( $I_L7785_233 >= n_profile ) exit
 7785.                      enddo
 7788.                      $I_L7784_305 = 1 + $I_L7784_305
 7787.                      if ( $I_L7784_305 >= n_layer ) exit
 7787.                   enddo
 7787.                endif
 7787.             endif
 7787.          endif
 7787.       endif
 7798.       $lp_S11 = 1
 7799.       $l_new_S13 = .true.
 7801.       if ( 0 < n_profile ) then
 7828.          $SC_ss_prop_I40 = ss_prop%phase_fnc%dim_1%SM
 7828.          $SC_ss_prop_I39 = ss_prop%phase_fnc%dim_1%EX
 7828.          $SC_ss_prop_I41 = ss_prop%phase_fnc%dim_1%LB
 7828.          $SC_ss_prop_I43 = ss_prop%phase_fnc%dim_2%SM
 7828.          $SC_ss_prop_I42 = ss_prop%phase_fnc%dim_2%EX
 7828.          $SC_ss_prop_I44 = ss_prop%phase_fnc%dim_2%LB
 7828.          $SC_ss_prop_I46 = ss_prop%phase_fnc%dim_3%SM
 7828.          $SC_ss_prop_I45 = ss_prop%phase_fnc%dim_3%EX
 7828.          $SC_ss_prop_I47 = ss_prop%phase_fnc%dim_3%LB
 7826.          $SC_ss_prop_I31 = ss_prop%omega%dim_1%SM
 7826.          $SC_ss_prop_I30 = ss_prop%omega%dim_1%EX
 7826.          $SC_ss_prop_I32 = ss_prop%omega%dim_1%LB
 7826.          $SC_ss_prop_I34 = ss_prop%omega%dim_2%SM
 7826.          $SC_ss_prop_I33 = ss_prop%omega%dim_2%EX
 7826.          $SC_ss_prop_I35 = ss_prop%omega%dim_2%LB
 7826.          $SC_ss_prop_I37 = ss_prop%omega%dim_3%SM
 7826.          $SC_ss_prop_I36 = ss_prop%omega%dim_3%EX
 7826.          $SC_ss_prop_I38 = ss_prop%omega%dim_3%LB
 7825.          $SC_ss_prop_I22 = ss_prop%tau%dim_1%SM
 7825.          $SC_ss_prop_I21 = ss_prop%tau%dim_1%EX
 7825.          $SC_ss_prop_I23 = ss_prop%tau%dim_1%LB
 7825.          $SC_ss_prop_I25 = ss_prop%tau%dim_2%SM
 7825.          $SC_ss_prop_I24 = ss_prop%tau%dim_2%EX
 7825.          $SC_ss_prop_I26 = ss_prop%tau%dim_2%LB
 7825.          $SC_ss_prop_I28 = ss_prop%tau%dim_3%SM
 7825.          $SC_ss_prop_I27 = ss_prop%tau%dim_3%EX
 7825.          $SC_ss_prop_I29 = ss_prop%tau%dim_3%LB
 7820.          $SC_ss_prop_I13 = ss_prop%phase_fnc_clr%dim_1%SM
 7820.          $SC_ss_prop_I12 = ss_prop%phase_fnc_clr%dim_1%EX
 7820.          $SC_ss_prop_I14 = ss_prop%phase_fnc_clr%dim_1%LB
 7820.          $SC_ss_prop_I16 = ss_prop%phase_fnc_clr%dim_2%SM
 7820.          $SC_ss_prop_I15 = ss_prop%phase_fnc_clr%dim_2%EX
 7820.          $SC_ss_prop_I17 = ss_prop%phase_fnc_clr%dim_2%LB
 7820.          $SC_ss_prop_I19 = ss_prop%phase_fnc_clr%dim_3%SM
 7820.          $SC_ss_prop_I18 = ss_prop%phase_fnc_clr%dim_3%EX
 7820.          $SC_ss_prop_I20 = ss_prop%phase_fnc_clr%dim_3%LB
 7818.          $SC_ss_prop_I7 = ss_prop%omega_clr%dim_1%SM
 7818.          $SC_ss_prop_I6 = ss_prop%omega_clr%dim_1%EX
 7818.          $SC_ss_prop_I8 = ss_prop%omega_clr%dim_1%LB
 7818.          $SC_ss_prop_I10 = ss_prop%omega_clr%dim_2%SM
 7818.          $SC_ss_prop_I9 = ss_prop%omega_clr%dim_2%EX
 7818.          $SC_ss_prop_I11 = ss_prop%omega_clr%dim_2%LB
 7817.          $SC_ss_prop_I1 = ss_prop%tau_clr%dim_1%SM
 7817.          $SC_ss_prop_I0 = ss_prop%tau_clr%dim_1%EX
 7817.          $SC_ss_prop_I2 = ss_prop%tau_clr%dim_1%LB
 7817.          $SC_ss_prop_I4 = ss_prop%tau_clr%dim_2%SM
 7817.          $SC_ss_prop_I3 = ss_prop%tau_clr%dim_2%EX
 7817.          $SC_ss_prop_I5 = ss_prop%tau_clr%dim_2%LB
 7817.          do
 7803.             $ll_S12 = 0
 7805.             if ( ( 0 < nd_profile_column .and. $lp_S11 <= n_profile ) /= .false. ) then
 7839.                $SC_ss_prop_I61 = ss_prop%phase_fnc_solar%dim_1%SM
 7839.                $SC_ss_prop_I60 = ss_prop%phase_fnc_solar%dim_1%EX
 7839.                $SC_ss_prop_I62 = ss_prop%phase_fnc_solar%dim_1%LB
 7839.                $SC_ss_prop_I64 = ss_prop%phase_fnc_solar%dim_2%SM
 7839.                $SC_ss_prop_I63 = ss_prop%phase_fnc_solar%dim_2%EX
 7839.                $SC_ss_prop_I65 = ss_prop%phase_fnc_solar%dim_2%LB
 7839.                $SC_ss_prop_I67 = ss_prop%phase_fnc_solar%dim_3%SM
 7839.                $SC_ss_prop_I66 = ss_prop%phase_fnc_solar%dim_3%EX
 7839.                $SC_ss_prop_I68 = ss_prop%phase_fnc_solar%dim_3%LB
 7839.                $SC_ss_prop_I70 = ss_prop%phase_fnc_solar%dim_4%SM
 7839.                $SC_ss_prop_I69 = ss_prop%phase_fnc_solar%dim_4%EX
 7839.                $SC_ss_prop_I71 = ss_prop%phase_fnc_solar%dim_4%LB
 7835.                $SC_ss_prop_I52 = ss_prop%phase_fnc_solar_clr%dim_1%SM
 7835.                $SC_ss_prop_I51 = ss_prop%phase_fnc_solar_clr%dim_1%EX
 7835.                $SC_ss_prop_I53 = ss_prop%phase_fnc_solar_clr%dim_1%LB
 7835.                $SC_ss_prop_I55 = ss_prop%phase_fnc_solar_clr%dim_2%SM
 7835.                $SC_ss_prop_I54 = ss_prop%phase_fnc_solar_clr%dim_2%EX
 7835.                $SC_ss_prop_I56 = ss_prop%phase_fnc_solar_clr%dim_2%LB
 7835.                $SC_ss_prop_I58 = ss_prop%phase_fnc_solar_clr%dim_3%SM
 7835.                $SC_ss_prop_I57 = ss_prop%phase_fnc_solar_clr%dim_3%EX
 7835.                $SC_ss_prop_I59 = ss_prop%phase_fnc_solar_clr%dim_3%LB
 7828.                $SC_ss_prop_I49 = ss_prop%phase_fnc%dim_4%SM
 7828.                $SC_ss_prop_I48 = ss_prop%phase_fnc%dim_4%EX
 7828.                $SC_ss_prop_I50 = ss_prop%phase_fnc%dim_4%LB
 7828. !dir$ loop_info (automatic) cache_nt( i_direct, area_column, n_column_slv, d_planck_flux_surface, zen_0, flux_inc_down, weight_column, flux_inc_down_long, i_direct_column, zen_0_long )
 7828.                do
 7807.                   $ll_S12 = 1 + $ll_S12
 7808.                   target($ll_S12) = $lp_S11
 7810.                   if ( $l_new_S13 /= .false. ) then
 7814.                      icl = 1
 7815.                      ics = 1
 7816.                      if ( -1 + n_cloud_top > 0 ) then
 7819.                         if ( n_order_phase > 0 ) then
 7816.                            $I_L7816_311 = 0
 7816. !dir$ ivdep
 7816.                            do
 7817.                               tau_long($ll_S12, 1 + $I_L7816_311) = (ss_prop%tau_clr%base_addr)($lp_S11, 1 + $I_L7816_311, 0)
 7818.                               omega_long($ll_S12, 1 + $I_L7816_311) = (ss_prop%omega_clr%base_addr)($lp_S11, 1 + $I_L7816_311, 0)
 7823.                               $I_L7816_311 = 1 + $I_L7816_311
 7822.                               if ( $I_L7816_311 >= -1 + n_cloud_top ) exit
 7822.                            enddo
 7819.                            $I_L7819_239 = 0
 7819.                            do
 7816.                               $I_L7816_311 = 0
 7816. !dir$ ivdep
 7816.                               do
 7820.                                  phase_fnc_long($ll_S12, 1 + $I_L7816_311, 1 + $I_L7819_239) = (ss_prop%phase_fnc_clr%base_addr)($lp_S11, 1 + $I_L7816_311, 1 + $I_L7819_239, 0)
 7823.                                  $I_L7816_311 = 1 + $I_L7816_311
 7819.                                  if ( $I_L7816_311 >= -1 + n_cloud_top ) exit
 7819.                               enddo
 7822.                               $I_L7819_239 = 1 + $I_L7819_239
 7822.                               if ( $I_L7819_239 >= n_order_phase ) exit
 7822.                            enddo
 7822.                         else
 7816.                            $I_L7816_279 = 0
 7816. !dir$ ivdep
 7816.                            do
 7817.                               tau_long($ll_S12, 1 + $I_L7816_279) = (ss_prop%tau_clr%base_addr)($lp_S11, 1 + $I_L7816_279, 0)
 7818.                               omega_long($ll_S12, 1 + $I_L7816_279) = (ss_prop%omega_clr%base_addr)($lp_S11, 1 + $I_L7816_279, 0)
 7823.                               $I_L7816_279 = 1 + $I_L7816_279
 7822.                               if ( $I_L7816_279 >= -1 + n_cloud_top ) exit
 7822.                            enddo
 7822.                         endif
 7822.                      endif
 7824.                      if ( n_layer + -n_cloud_top >= 0 ) then
 7827.                         if ( n_order_phase > 0 ) then
 7824.                            $I_L7824_313 = 0
 7824. !dir$ ivdep
 7824.                            do
 7825.                               tau_long($ll_S12, n_cloud_top + $I_L7824_313) = (ss_prop%tau%base_addr)($lp_S11, n_cloud_top + $I_L7824_313, 0, 0)
 7826.                               omega_long($ll_S12, n_cloud_top + $I_L7824_313) = (ss_prop%omega%base_addr)($lp_S11, n_cloud_top + $I_L7824_313, 0, 0)
 7831.                               $I_L7824_313 = 1 + $I_L7824_313
 7830.                               if ( $I_L7824_313 >= 1 + n_layer + -n_cloud_top ) exit
 7830.                            enddo
 7827.                            $I_L7827_241 = 0
 7827.                            do
 7824.                               $I_L7824_313 = 0
 7824. !dir$ ivdep
 7824.                               do
 7828.                                  phase_fnc_long($ll_S12, n_cloud_top + $I_L7824_313, 1 + $I_L7827_241) = (ss_prop%phase_fnc%base_addr)($lp_S11, n_cloud_top + $I_L7824_313, 1 + $I_L7827_241, 0, 0)
 7831.                                  $I_L7824_313 = 1 + $I_L7824_313
 7827.                                  if ( $I_L7824_313 >= 1 + n_layer + -n_cloud_top ) exit
 7827.                               enddo
 7830.                               $I_L7827_241 = 1 + $I_L7827_241
 7830.                               if ( $I_L7827_241 >= n_order_phase ) exit
 7830.                            enddo
 7830.                         else
 7824.                            $I_L7824_281 = 0
 7824. !dir$ ivdep
 7824.                            do
 7825.                               tau_long($ll_S12, n_cloud_top + $I_L7824_281) = (ss_prop%tau%base_addr)($lp_S11, n_cloud_top + $I_L7824_281, 0, 0)
 7826.                               omega_long($ll_S12, n_cloud_top + $I_L7824_281) = (ss_prop%omega%base_addr)($lp_S11, n_cloud_top + $I_L7824_281, 0, 0)
 7831.                               $I_L7824_281 = 1 + $I_L7824_281
 7830.                               if ( $I_L7824_281 >= 1 + n_layer + -n_cloud_top ) exit
 7830.                            enddo
 7830.                         endif
 7830.                      endif
 7832.                      if ( i_sph_algorithm == 2 ) then
 7833.                         if ( n_direction > 0 ) then
 7834.                            if ( -1 + n_cloud_top > 0 ) then
 7838.                               if ( n_layer + -n_cloud_top >= 0 ) then
 7833.                                  $I_L7833_315 = 0
 7833.                                  do
 7834.                                     $I_L7834_243 = 0
 7834. !dir$ ivdep
 7834.                                     do
 7835.                                        phase_fnc_solar_long($ll_S12, 1 + $I_L7834_243, 1 + $I_L7833_315) = (ss_prop%phase_fnc_solar_clr%base_addr)($lp_S11, 1 + $I_L7834_243, 1 + $I_L7833_315, 0)
 7837.                                        $I_L7834_243 = 1 + $I_L7834_243
 7834.                                        if ( $I_L7834_243 >= -1 + n_cloud_top ) exit
 7834.                                     enddo
 7838.                                     $I_L7838_245 = 0
 7838. !dir$ ivdep
 7838.                                     do
 7839.                                        phase_fnc_solar_long($ll_S12, n_cloud_top + $I_L7838_245, 1 + $I_L7833_315) = (ss_prop%phase_fnc_solar%base_addr)($lp_S11, n_cloud_top + $I_L7838_245, 1 + $I_L7833_315, 0, 0)
 7841.                                        $I_L7838_245 = 1 + $I_L7838_245
 7838.                                        if ( $I_L7838_245 >= 1 + n_layer + -n_cloud_top ) exit
 7838.                                     enddo
 7842.                                     $I_L7833_315 = 1 + $I_L7833_315
 7841.                                     if ( $I_L7833_315 >= n_direction ) exit
 7841.                                  enddo
 7841.                               else
 7833.                                  $I_L7833_339 = 0
 7833.                                  do
 7834.                                     $I_L7834_287 = 0
 7834. !dir$ ivdep
 7834.                                     do
 7835.                                        phase_fnc_solar_long($ll_S12, 1 + $I_L7834_287, 1 + $I_L7833_339) = (ss_prop%phase_fnc_solar_clr%base_addr)($lp_S11, 1 + $I_L7834_287, 1 + $I_L7833_339, 0)
 7837.                                        $I_L7834_287 = 1 + $I_L7834_287
 7834.                                        if ( $I_L7834_287 >= -1 + n_cloud_top ) exit
 7834.                                     enddo
 7842.                                     $I_L7833_339 = 1 + $I_L7833_339
 7841.                                     if ( $I_L7833_339 >= n_direction ) exit
 7841.                                  enddo
 7841.                               endif
 7841.                            else if ( n_layer + -n_cloud_top >= 0 ) then
 7833.                               $I_L7833_335 = 0
 7833.                               do
 7838.                                  $I_L7838_283 = 0
 7838. !dir$ ivdep
 7838.                                  do
 7839.                                     phase_fnc_solar_long($ll_S12, n_cloud_top + $I_L7838_283, 1 + $I_L7833_335) = (ss_prop%phase_fnc_solar%base_addr)($lp_S11, n_cloud_top + $I_L7838_283, 1 + $I_L7833_335, 0, 0)
 7841.                                     $I_L7838_283 = 1 + $I_L7838_283
 7838.                                     if ( $I_L7838_283 >= 1 + n_layer + -n_cloud_top ) exit
 7838.                                  enddo
 7842.                                  $I_L7833_335 = 1 + $I_L7833_335
 7841.                                  if ( $I_L7833_335 >= n_direction ) exit
 7841.                               enddo
 7841.                            endif
 7841.                         endif
 7841.                      endif
 7856.                      $l_new_S13 = .false.
 7856.                   else
 7870.                      if ( n_layer > 0 ) then
 7873.                         if ( n_order_phase > 0 ) then
 7870.                            $I_L7870_307 = 0
 7870. !dir$ ivdep
 7870.                            do
 7871.                               tau_long($ll_S12, 1 + $I_L7870_307) = tau_long(cvmg( n_long, -1 + $ll_S12, $ll_S12 <= 1 ), 1 + $I_L7870_307)
 7872.                               omega_long($ll_S12, 1 + $I_L7870_307) = omega_long(cvmg( n_long, -1 + $ll_S12, $ll_S12 <= 1 ), 1 + $I_L7870_307)
 7877.                               $I_L7870_307 = 1 + $I_L7870_307
 7876.                               if ( $I_L7870_307 >= n_layer ) exit
 7876.                            enddo
 7873.                            $I_L7873_235 = 0
 7873.                            do
 7870.                               $I_L7870_307 = 0
 7870. !dir$ ivdep
 7870.                               do
 7874.                                  phase_fnc_long($ll_S12, 1 + $I_L7870_307, 1 + $I_L7873_235) = phase_fnc_long(cvmg( n_long, -1 + $ll_S12, $ll_S12 <= 1 ), 1 + $I_L7870_307, 1 + $I_L7873_235)
 7877.                                  $I_L7870_307 = 1 + $I_L7870_307
 7873.                                  if ( $I_L7870_307 >= n_layer ) exit
 7873.                               enddo
 7876.                               $I_L7873_235 = 1 + $I_L7873_235
 7876.                               if ( $I_L7873_235 >= n_order_phase ) exit
 7876.                            enddo
 7876.                         else
 7870.                            $I_L7870_277 = 0
 7870. !dir$ ivdep
 7870.                            do
 7871.                               tau_long($ll_S12, 1 + $I_L7870_277) = tau_long(cvmg( n_long, -1 + $ll_S12, $ll_S12 <= 1 ), 1 + $I_L7870_277)
 7872.                               omega_long($ll_S12, 1 + $I_L7870_277) = omega_long(cvmg( n_long, -1 + $ll_S12, $ll_S12 <= 1 ), 1 + $I_L7870_277)
 7877.                               $I_L7870_277 = 1 + $I_L7870_277
 7876.                               if ( $I_L7870_277 >= n_layer ) exit
 7876.                            enddo
 7876.                         endif
 7876.                      endif
 7878.                      if ( i_sph_algorithm == 2 ) then
 7879.                         if ( n_direction > 0 ) then
 7880.                            if ( n_layer > 0 ) then
 7879.                               $I_L7879_309 = 0
 7879.                               do
 7880.                                  $I_L7880_237 = 0
 7880. !dir$ ivdep
 7880.                                  do
 7881.                                     phase_fnc_solar_long($ll_S12, 1 + $I_L7880_237, 1 + $I_L7879_309) = phase_fnc_solar_long(cvmg( n_long, -1 + $ll_S12, $ll_S12 <= 1 ), 1 + $I_L7880_237, 1 + $I_L7879_309)
 7883.                                     $I_L7880_237 = 1 + $I_L7880_237
 7880.                                     if ( $I_L7880_237 >= n_layer ) exit
 7880.                                  enddo
 7884.                                  $I_L7879_309 = 1 + $I_L7879_309
 7883.                                  if ( $I_L7879_309 >= n_direction ) exit
 7883.                               enddo
 7883.                            endif
 7883.                         endif
 7883.                      endif
 7883.                   endif
 7898.                   if ( icl < list_column_slv($lp_S11, ics) ) then
 7898.                      $Trips02_N79 = ( list_column_slv($lp_S11, ics) + -icl )
 7904.                      if ( n_order_phase > 0 ) then
 7908.                         if ( i_sph_algorithm /= 2 ) then
 7898.                            $I_icl_341 = 0
 7898.                            do
 7899.                               $icc_S28 = i_clm_lyr_chn($lp_S11, icl + $I_icl_341)
 7900.                               $ict_S29 = i_clm_cld_typ($lp_S11, icl + $I_icl_341)
 7902.                               tau_long($ll_S12, $icc_S28) = (ss_prop%tau%base_addr)($lp_S11, $icc_S28, $ict_S29, 0)
 7903.                               omega_long($ll_S12, $icc_S28) = (ss_prop%omega%base_addr)($lp_S11, $icc_S28, $ict_S29, 0)
 7904.                               $I_L7904_289 = 0
 7904. !dir$ ivdep
 7904.                               do
 7905.                                  phase_fnc_long($ll_S12, $icc_S28, 1 + $I_L7904_289) = (ss_prop%phase_fnc%base_addr)($lp_S11, $icc_S28, 1 + $I_L7904_289, $ict_S29, 0)
 7907.                                  $I_L7904_289 = 1 + $I_L7904_289
 7904.                                  if ( $I_L7904_289 >= n_order_phase ) exit
 7904.                               enddo
 7920.                               $I_icl_341 = 1 + $I_icl_341
 7917.                               if ( $I_icl_341 >= $Trips02_N79 ) exit
 7917.                            enddo
 7917.                         else if ( n_direction > 0 ) then
 7898.                            $I_icl_317 = 0
 7898.                            do
 7899.                               $icc_S28 = i_clm_lyr_chn($lp_S11, icl + $I_icl_317)
 7900.                               $ict_S29 = i_clm_cld_typ($lp_S11, icl + $I_icl_317)
 7902.                               tau_long($ll_S12, $icc_S28) = (ss_prop%tau%base_addr)($lp_S11, $icc_S28, $ict_S29, 0)
 7903.                               omega_long($ll_S12, $icc_S28) = (ss_prop%omega%base_addr)($lp_S11, $icc_S28, $ict_S29, 0)
 7904.                               $I_L7904_247 = 0
 7904. !dir$ ivdep
 7904.                               do
 7905.                                  phase_fnc_long($ll_S12, $icc_S28, 1 + $I_L7904_247) = (ss_prop%phase_fnc%base_addr)($lp_S11, $icc_S28, 1 + $I_L7904_247, $ict_S29, 0)
 7907.                                  $I_L7904_247 = 1 + $I_L7904_247
 7904.                                  if ( $I_L7904_247 >= n_order_phase ) exit
 7904.                               enddo
 7909.                               $I_L7909_249 = 0
 7909. !dir$ ivdep
 7909.                               do
 7910.                                  phase_fnc_solar_long($ll_S12, $icc_S28, 1 + $I_L7909_249) = (ss_prop%phase_fnc_solar%base_addr)($lp_S11, $icc_S28, 1 + $I_L7909_249, $ict_S29, 0)
 7912.                                  $I_L7909_249 = 1 + $I_L7909_249
 7909.                                  if ( $I_L7909_249 >= n_direction ) exit
 7909.                               enddo
 7920.                               $I_icl_317 = 1 + $I_icl_317
 7917.                               if ( $I_icl_317 >= $Trips02_N79 ) exit
 7917.                            enddo
 7917.                         else
 7898.                            $I_icl_343 = 0
 7898.                            do
 7899.                               $icc_S28 = i_clm_lyr_chn($lp_S11, icl + $I_icl_343)
 7900.                               $ict_S29 = i_clm_cld_typ($lp_S11, icl + $I_icl_343)
 7902.                               tau_long($ll_S12, $icc_S28) = (ss_prop%tau%base_addr)($lp_S11, $icc_S28, $ict_S29, 0)
 7903.                               omega_long($ll_S12, $icc_S28) = (ss_prop%omega%base_addr)($lp_S11, $icc_S28, $ict_S29, 0)
 7904.                               $I_L7904_293 = 0
 7904. !dir$ ivdep
 7904.                               do
 7905.                                  phase_fnc_long($ll_S12, $icc_S28, 1 + $I_L7904_293) = (ss_prop%phase_fnc%base_addr)($lp_S11, $icc_S28, 1 + $I_L7904_293, $ict_S29, 0)
 7907.                                  $I_L7904_293 = 1 + $I_L7904_293
 7904.                                  if ( $I_L7904_293 >= n_order_phase ) exit
 7904.                               enddo
 7920.                               $I_icl_343 = 1 + $I_icl_343
 7917.                               if ( $I_icl_343 >= $Trips02_N79 ) exit
 7917.                            enddo
 7917.                         endif
 7917.                      else if ( i_sph_algorithm /= 2 ) then
 7898.                         $I_icl_291 = 0
 7898. !dir$ ivdep
 7898.                         do
 7899.                            $icc_S28 = i_clm_lyr_chn($lp_S11, icl + $I_icl_291)
 7900.                            $ict_S29 = i_clm_cld_typ($lp_S11, icl + $I_icl_291)
 7902.                            tau_long($ll_S12, $icc_S28) = (ss_prop%tau%base_addr)($lp_S11, $icc_S28, $ict_S29, 0)
 7903.                            omega_long($ll_S12, $icc_S28) = (ss_prop%omega%base_addr)($lp_S11, $icc_S28, $ict_S29, 0)
 7920.                            $I_icl_291 = 1 + $I_icl_291
 7917.                            if ( $I_icl_291 >= $Trips02_N79 ) exit
 7917.                         enddo
 7917.                      else if ( n_direction > 0 ) then
 7898.                         $I_icl_337 = 0
 7898.                         do
 7899.                            $icc_S28 = i_clm_lyr_chn($lp_S11, icl + $I_icl_337)
 7900.                            $ict_S29 = i_clm_cld_typ($lp_S11, icl + $I_icl_337)
 7902.                            tau_long($ll_S12, $icc_S28) = (ss_prop%tau%base_addr)($lp_S11, $icc_S28, $ict_S29, 0)
 7903.                            omega_long($ll_S12, $icc_S28) = (ss_prop%omega%base_addr)($lp_S11, $icc_S28, $ict_S29, 0)
 7909.                            $I_L7909_285 = 0
 7909. !dir$ ivdep
 7909.                            do
 7910.                               phase_fnc_solar_long($ll_S12, $icc_S28, 1 + $I_L7909_285) = (ss_prop%phase_fnc_solar%base_addr)($lp_S11, $icc_S28, 1 + $I_L7909_285, $ict_S29, 0)
 7912.                               $I_L7909_285 = 1 + $I_L7909_285
 7909.                               if ( $I_L7909_285 >= n_direction ) exit
 7909.                            enddo
 7920.                            $I_icl_337 = 1 + $I_icl_337
 7917.                            if ( $I_icl_337 >= $Trips02_N79 ) exit
 7917.                         enddo
 7917.                      else
 7898.                         $I_icl_295 = 0
 7898. !dir$ ivdep
 7898.                         do
 7899.                            $icc_S28 = i_clm_lyr_chn($lp_S11, icl + $I_icl_295)
 7900.                            $ict_S29 = i_clm_cld_typ($lp_S11, icl + $I_icl_295)
 7902.                            tau_long($ll_S12, $icc_S28) = (ss_prop%tau%base_addr)($lp_S11, $icc_S28, $ict_S29, 0)
 7903.                            omega_long($ll_S12, $icc_S28) = (ss_prop%omega%base_addr)($lp_S11, $icc_S28, $ict_S29, 0)
 7920.                            $I_icl_295 = 1 + $I_icl_295
 7917.                            if ( $I_icl_295 >= $Trips02_N79 ) exit
 7917.                         enddo
 7917.                      endif
 7919.                      icl = ( icl + $Trips02_N79 )
 7919.                   endif
 7924.                   if ( isolir == 1 ) then
 7926.                      if ( l_scale_solar /= .false. ) then
 7927.                         if ( n_layer > 0 ) then
 7927.                            $I_L7927_251 = 0
 7927. !dir$ ivdep
 7927. !dir$ loop_info (automatic) cache_nt( adjust_solar_ke, adjust_solar_ke_long )
 7927.                            do
 7928.                               adjust_solar_ke_long($ll_S12, 1 + $I_L7927_251) = adjust_solar_ke($lp_S11, 1 + $I_L7927_251)
 7929.                               $I_L7927_251 = 1 + $I_L7927_251
 7927.                               if ( $I_L7927_251 >= n_layer ) exit
 7927.                            enddo
 7927.                         endif
 7927.                      endif
 7932.                      zen_0_long($ll_S12) = zen_0($lp_S11)
 7933.                      i_direct_column($ll_S12, 0) = i_direct($lp_S11, 0)
 7934.                      if ( ms_max + -ms_min >= 0 ) then
 7934.                         $I_L7934_351 = 0
 7934.                         do
 7935.                            $t_S34 = 1 + ls_local_trunc(ms_min + $I_L7934_351)
 7935.                            if ( ( $t_S34 + -ms_min + -$I_L7934_351 ) >= 0 ) then
 7935.                               $SCA_ia_sph_mm_I72 = ia_sph_mm(ms_min + $I_L7934_351)
 7935.                               $I_L7935_349 = 0
 7935. !dir$ ivdep
 7935.                               do
 7937.                                  uplm_sol_long($ll_S12, $SCA_ia_sph_mm_I72 + $I_L7935_349) = uplm_sol($lp_S11, $SCA_ia_sph_mm_I72 + $I_L7935_349)
 7938.                                  $I_L7935_349 = 1 + $I_L7935_349
 7935.                                  if ( $I_L7935_349 >= 1 + $t_S34 + -ms_min + -$I_L7934_351 ) exit
 7935.                               enddo
 7935.                            endif
 7939.                            $I_L7934_351 = 1 + $I_L7934_351
 7938.                            if ( $I_L7934_351 >= 1 + ms_max + -ms_min ) exit
 7938.                         enddo
 7938.                      endif
 7941.                      if ( i_sph_algorithm == 2 ) then
 7942.                         if ( n_direction > 0 ) then
 7943.                            if ( n_brdf_basis_fnc > 0 ) then
 7942.                               $I_L7942_323 = 0
 7942.                               do
 7943.                                  $I_L7943_261 = 0
 7943. !dir$ ivdep
 7943. !dir$ loop_info (automatic) cache_nt( brdf_sol, brdf_sol_long )
 7943.                                  do
 7944.                                     brdf_sol_long($ll_S12, 1 + $I_L7943_261, 1 + $I_L7942_323) = brdf_sol($lp_S11, 1 + $I_L7943_261, 1 + $I_L7942_323)
 7945.                                     $I_L7943_261 = 1 + $I_L7943_261
 7943.                                     if ( $I_L7943_261 >= n_brdf_basis_fnc ) exit
 7943.                                  enddo
 7946.                                  $I_L7942_323 = 1 + $I_L7942_323
 7945.                                  if ( $I_L7942_323 >= n_direction ) exit
 7945.                               enddo
 7945.                            endif
 7945.                         endif
 7945.                      endif
 7949.                   else if ( isolir == 2 ) then
 7951.                      d_planck_flux_surface_long($ll_S12) = d_planck_flux_surface($lp_S11)
 7953.                      if ( n_layer > 0 ) then
 7953.                         $I_L7953_253 = 0
 7953. !dir$ ivdep
 7953. !dir$ loop_info (automatic) cache_nt( diff_planck, diff_planck_long )
 7953.                         do
 7954.                            diff_planck_long($ll_S12, 1 + $I_L7953_253) = diff_planck($lp_S11, 1 + $I_L7953_253)
 7955.                            $I_L7953_253 = 1 + $I_L7953_253
 7953.                            if ( $I_L7953_253 >= n_layer ) exit
 7953.                         enddo
 7953.                      endif
 7956.                      if ( l_ir_source_quad /= .false. ) then
 7957.                         if ( n_layer > 0 ) then
 7957.                            $I_L7957_255 = 0
 7957. !dir$ ivdep
 7957. !dir$ loop_info (automatic) cache_nt( diff_planck_2, diff_planck_2_long )
 7957.                            do
 7958.                               diff_planck_2_long($ll_S12, 1 + $I_L7957_255) = diff_planck_2($lp_S11, 1 + $I_L7957_255)
 7959.                               $I_L7957_255 = 1 + $I_L7957_255
 7957.                               if ( $I_L7957_255 >= n_layer ) exit
 7957.                            enddo
 7957.                         endif
 7957.                      endif
 7961.                      if ( i_sph_algorithm == 2 ) then
 7962.                         if ( n_direction > 0 ) then
 7963.                            if ( n_brdf_basis_fnc > 0 ) then
 7962.                               $I_L7962_319 = 0
 7962.                               do
 7963.                                  $I_L7963_257 = 0
 7963. !dir$ ivdep
 7963.                                  do
 7964.                                     brdf_hemi_long($ll_S12, 1 + $I_L7963_257, 1 + $I_L7962_319) = brdf_hemi($lp_S11, 1 + $I_L7963_257, 1 + $I_L7962_319)
 7965.                                     $I_L7963_257 = 1 + $I_L7963_257
 7963.                                     if ( $I_L7963_257 >= n_brdf_basis_fnc ) exit
 7963.                                  enddo
 7966.                                  $I_L7962_319 = 1 + $I_L7962_319
 7965.                                  if ( $I_L7962_319 >= n_direction ) exit
 7965.                               enddo
 7965.                            endif
 7965.                         endif
 7965.                      endif
 7965.                   endif
 7972.                   if ( i_sph_mode == 1 ) then
 7973.                      if ( n_direction > 0 ) then
 7973.                         $I_L7973_263 = 0
 7973. !dir$ ivdep
 7973.                         do
 7974.                            direction_long($ll_S12, 1 + $I_L7973_263, 1) = direction($lp_S11, 1 + $I_L7973_263, 1)
 7975.                            direction_long($ll_S12, 1 + $I_L7973_263, 2) = direction($lp_S11, 1 + $I_L7973_263, 2)
 7976.                            $I_L7973_263 = 1 + $I_L7973_263
 7973.                            if ( $I_L7973_263 >= n_direction ) exit
 7973.                         enddo
 7973.                      endif
 7973.                   endif
 7979.                   flux_inc_down_long($ll_S12) = flux_inc_down($lp_S11)
 7980.                   if ( n_brdf_basis_fnc > 0 ) then
 7980.                      $I_L7980_265 = 0
 7980. !dir$ ivdep
 7980.                      do
 7981.                         rho_alb_long($ll_S12, 1 + $I_L7980_265) = rho_alb($lp_S11, 1 + $I_L7980_265)
 7982.                         $I_L7980_265 = 1 + $I_L7980_265
 7980.                         if ( $I_L7980_265 >= n_brdf_basis_fnc ) exit
 7980.                      enddo
 7980.                   endif
 7986.                   weight_column($ll_S12) = area_column($lp_S11, icl)
 7991.                   ics = 1 + ics
 7992.                   if ( ics > n_column_slv($lp_S11) ) then
 7994.                      $l_new_S13 = .true.
 7993.                      $lp_S11 = 1 + $lp_S11
 7993.                   endif
 7995.                   if ( ( $ll_S12 < nd_profile_column .and. $lp_S11 <= n_profile ) == .false. ) exit
 7995.                enddo
 7995.             endif
 8001.             n_long = $ll_S12
 8004.             call sph_solver( ierr, n_long, n_layer, ms_min, ms_max, i_truncation, ls_local_trunc(0), cg_coeff(1), uplm_zero(1), ia_sph_mm(0), accuracy_adaptive, euler_factor, i_sph_algorithm, i_sph_mode, isolir, l_scale_solar, adjust_solar_ke_long(1, 1), i_direct_column(1, 0), zen_0_long(1), uplm_sol_long(1, 1), diff_planck_long(1, 1), flux_inc_down_long(1), l_ir_source_quad, diff_planck_2_long(1, 1), tau_long(1, 1), omega_long(1, 1), phase_fnc_long(1, 1, 1), phase_fnc_solar_long(1, 1, 1), ls_brdf_trunc, n_brdf_basis_fnc, rho_alb_long(1, 1), f_brdf(1, 0, 0, 0), brdf_sol_long(1, 1, 1), brdf_hemi_long(1, 1, 1), d_planck_flux_surface_long(1), n_viewing_level, i_rad_layer(1), frac_rad_layer(1), n_direction, direction_long(1, 1, 1), flux_direct_column(1, 0), flux_total_column(1, 1), radiance_column(1, 1, 1), photolysis_column(1, 1), nd_profile_column, nd_layer, nd_profile_column, nd_profile_column, nd_profile_column, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc, nd_red_eigensystem, nd_sph_equation, nd_sph_diagonal, nd_sph_cf_weight, nd_sph_u_range, nd_viewing_level, nd_direction )
 8049.             if ( i_sph_mode == 2 ) then
 8051.                if ( 2 + 2 * n_layer > 0 ) then
 8052.                   if ( n_long > 0 ) then
 8051.                      $SI_L8051_325_G9 = 0
 8051.                      do
 8052.                         $SI_L8052_267_G12 = 0
 8052.                         do
 8051.                            $I_L8051_368 = 0
 8051. !dir$ shortloop16
 8051. !dir$ blocking_size( 2, 2 )
 8051.                            do
 8052.                               $I_L8052_353 = 0
 8052. !dir$ ivdep
 8052. !dir$ blocking_size( 256, 256 )
 8052.                               do
 8053.                                  $l_S47 = target(1 + $I_L8052_353 + 256 * $SI_L8052_267_G12)
 8054.                                  flux_total($l_S47, 1 + $I_L8051_368 + 2 * $SI_L8051_325_G9) = _vu_plus( flux_total($l_S47, 1 + $I_L8051_368 + 2 * $SI_L8051_325_G9), weight_column(1 + $I_L8052_353 + 256 * $SI_L8052_267_G12) * flux_total_column(1 + $I_L8052_353 + 256 * $SI_L8052_267_G12, 1 + $I_L8051_368 + 2 * $SI_L8051_325_G9) )
 8052.                                  $I_L8052_353 = 1 + $I_L8052_353
 8052.                                  if ( $I_L8052_353 >= min( n_long, 256 + 256 * $SI_L8052_267_G12 ) + -256 * $SI_L8052_267_G12 ) exit
 8052.                               enddo
 8051.                               $I_L8051_368 = 1 + $I_L8051_368
 8051.                               if ( $I_L8051_368 >= min( 2 + 2 * n_layer, 2 + 2 * $SI_L8051_325_G9 ) + -2 * $SI_L8051_325_G9 ) exit
 8051.                            enddo
 8052.                            $SI_L8052_267_G12 = 1 + $SI_L8052_267_G12
 8056.                            if ( $SI_L8052_267_G12 >= _rsh( 255 + n_long, 8 ) ) exit
 8056.                         enddo
 8051.                         $SI_L8051_325_G9 = 1 + $SI_L8051_325_G9
 8051.                         if ( $SI_L8051_325_G9 >= _rsh( 3 + 2 * n_layer, 1 ) ) exit
 8051.                      enddo
 8051.                   endif
 8051.                endif
 8059.                if ( isolir == 1 ) then
 8060.                   if ( n_layer >= 0 ) then
 8061.                      if ( n_long > 0 ) then
 8060.                         $SI_L8060_327_G15 = 0
 8060.                         do
 8061.                            $SI_L8061_269_G18 = 0
 8061.                            do
 8060.                               $I_L8060_371 = 0
 8060. !dir$ shortloop16
 8060. !dir$ blocking_size( 2, 2 )
 8060.                               do
 8061.                                  $I_L8061_356 = 0
 8061. !dir$ ivdep
 8061. !dir$ blocking_size( 256, 256 )
 8061.                                  do
 8062.                                     $l_S50 = target(1 + $I_L8061_356 + 256 * $SI_L8061_269_G18)
 8063.                                     flux_direct($l_S50, $I_L8060_371 + 2 * $SI_L8060_327_G15) = _vu_plus( flux_direct($l_S50, $I_L8060_371 + 2 * $SI_L8060_327_G15), weight_column(1 + $I_L8061_356 + 256 * $SI_L8061_269_G18) * flux_direct_column(1 + $I_L8061_356 + 256 * $SI_L8061_269_G18, $I_L8060_371 + 2 * $SI_L8060_327_G15) )
 8061.                                     $I_L8061_356 = 1 + $I_L8061_356
 8061.                                     if ( $I_L8061_356 >= min( n_long, 256 + 256 * $SI_L8061_269_G18 ) + -256 * $SI_L8061_269_G18 ) exit
 8061.                                  enddo
 8060.                                  $I_L8060_371 = 1 + $I_L8060_371
 8060.                                  if ( $I_L8060_371 >= min( 1 + n_layer, 2 + 2 * $SI_L8060_327_G15 ) + -2 * $SI_L8060_327_G15 ) exit
 8060.                               enddo
 8061.                               $SI_L8061_269_G18 = 1 + $SI_L8061_269_G18
 8065.                               if ( $SI_L8061_269_G18 >= _rsh( 255 + n_long, 8 ) ) exit
 8065.                            enddo
 8060.                            $SI_L8060_327_G15 = 1 + $SI_L8060_327_G15
 8060.                            if ( $SI_L8060_327_G15 >= _rsh( 2 + n_layer, 1 ) ) exit
 8060.                         enddo
 8060.                      endif
 8060.                   endif
 8060.                endif
 8060.             else
 8071.                if ( n_direction > 0 ) then
 8072.                   if ( n_viewing_level > 0 ) then
 8073.                      if ( n_long > 0 ) then
 8071.                         $SI_L8071_347_G21 = 0
 8071.                         do
 8072.                            $SI_L8072_329_G24 = 0
 8072.                            do
 8073.                               $SI_L8073_271_G27 = 0
 8073.                               do
 8071.                                  $I_L8071_383 = 0
 8071. !dir$ shortloop16
 8071. !dir$ blocking_size( 2, 2 )
 8071.                                  do
 8072.                                     $I_L8072_374 = 0
 8072. !dir$ shortloop16
 8072. !dir$ blocking_size( 2, 2 )
 8072.                                     do
 8073.                                        $I_L8073_359 = 0
 8073. !dir$ ivdep
 8073. !dir$ loop_info (automatic) cache_nt( radiance_column )
 8073. !dir$ blocking_size( 256, 256 )
 8073.                                        do
 8074.                                           $l_S54 = target(1 + $I_L8073_359 + 256 * $SI_L8073_271_G27)
 8075.                                           radiance($l_S54, 1 + $I_L8072_374 + 2 * $SI_L8072_329_G24, 1 + $I_L8071_383 + 2 * $SI_L8071_347_G21) = _vu_plus( radiance($l_S54, 1 + $I_L8072_374 + 2 * $SI_L8072_329_G24, 1 + $I_L8071_383 + 2 * $SI_L8071_347_G21), weight_column(1 + $I_L8073_359 + 256 * $SI_L8073_271_G27) * radiance_column(1 + $I_L8073_359 + 256 * $SI_L8073_271_G27, 1 + $I_L8072_374 + 2 * $SI_L8072_329_G24, 1 + $I_L8071_383 + 2 * $SI_L8071_347_G21) )
 8073.                                           $I_L8073_359 = 1 + $I_L8073_359
 8073.                                           if ( $I_L8073_359 >= min( n_long, 256 + 256 * $SI_L8073_271_G27 ) + -256 * $SI_L8073_271_G27 ) exit
 8073.                                        enddo
 8072.                                        $I_L8072_374 = 1 + $I_L8072_374
 8072.                                        if ( $I_L8072_374 >= min( n_viewing_level, 2 + 2 * $SI_L8072_329_G24 ) + -2 * $SI_L8072_329_G24 ) exit
 8072.                                     enddo
 8071.                                     $I_L8071_383 = 1 + $I_L8071_383
 8077.                                     if ( $I_L8071_383 >= min( n_direction, 2 + 2 * $SI_L8071_347_G21 ) + -2 * $SI_L8071_347_G21 ) exit
 8077.                                  enddo
 8073.                                  $SI_L8073_271_G27 = 1 + $SI_L8073_271_G27
 8073.                                  if ( $SI_L8073_271_G27 >= _rsh( 255 + n_long, 8 ) ) exit
 8073.                               enddo
 8072.                               $SI_L8072_329_G24 = 1 + $SI_L8072_329_G24
 8078.                               if ( $SI_L8072_329_G24 >= _rsh( 1 + n_viewing_level, 1 ) ) exit
 8078.                            enddo
 8071.                            $SI_L8071_347_G21 = 1 + $SI_L8071_347_G21
 8071.                            if ( $SI_L8071_347_G21 >= _rsh( 1 + n_direction, 1 ) ) exit
 8071.                         enddo
 8071.                      endif
 8071.                   endif
 8071.                endif
 8081.                if ( n_viewing_level > 0 ) then
 8082.                   if ( n_long > 0 ) then
 8081.                      $SI_L8081_331_G30 = 0
 8081.                      do
 8082.                         $SI_L8082_273_G33 = 0
 8082.                         do
 8081.                            $I_L8081_377 = 0
 8081. !dir$ shortloop16
 8081. !dir$ blocking_size( 2, 2 )
 8081.                            do
 8082.                               $I_L8082_362 = 0
 8082. !dir$ ivdep
 8082. !dir$ blocking_size( 256, 256 )
 8082.                               do
 8083.                                  $l_S57 = target(1 + $I_L8082_362 + 256 * $SI_L8082_273_G33)
 8084.                                  j_radiance($l_S57, 1 + $I_L8081_377 + 2 * $SI_L8081_331_G30) = _vu_plus( j_radiance($l_S57, 1 + $I_L8081_377 + 2 * $SI_L8081_331_G30), weight_column(1 + $I_L8082_362 + 256 * $SI_L8082_273_G33) * photolysis_column(1 + $I_L8082_362 + 256 * $SI_L8082_273_G33, 1 + $I_L8081_377 + 2 * $SI_L8081_331_G30) )
 8082.                                  $I_L8082_362 = 1 + $I_L8082_362
 8082.                                  if ( $I_L8082_362 >= min( n_long, 256 + 256 * $SI_L8082_273_G33 ) + -256 * $SI_L8082_273_G33 ) exit
 8082.                               enddo
 8081.                               $I_L8081_377 = 1 + $I_L8081_377
 8081.                               if ( $I_L8081_377 >= min( n_viewing_level, 2 + 2 * $SI_L8081_331_G30 ) + -2 * $SI_L8081_331_G30 ) exit
 8081.                            enddo
 8082.                            $SI_L8082_273_G33 = 1 + $SI_L8082_273_G33
 8086.                            if ( $SI_L8082_273_G33 >= _rsh( 255 + n_long, 8 ) ) exit
 8086.                         enddo
 8081.                         $SI_L8081_331_G30 = 1 + $SI_L8081_331_G30
 8081.                         if ( $SI_L8081_331_G30 >= _rsh( 1 + n_viewing_level, 1 ) ) exit
 8081.                      enddo
 8081.                   endif
 8081.                endif
 8089.                if ( isolir == 1 ) then
 8090.                   if ( n_layer > 0 ) then
 8091.                      if ( n_long > 0 ) then
 8090.                         $SI_L8090_333_G36 = 0
 8090.                         do
 8091.                            $SI_L8091_275_G39 = 0
 8091.                            do
 8090.                               $I_L8090_380 = 0
 8090. !dir$ shortloop16
 8090. !dir$ blocking_size( 2, 2 )
 8090.                               do
 8091.                                  $I_L8091_365 = 0
 8091. !dir$ ivdep
 8091. !dir$ blocking_size( 256, 256 )
 8091.                                  do
 8092.                                     $l_S60 = target(1 + $I_L8091_365 + 256 * $SI_L8091_275_G39)
 8093.                                     i_direct($l_S60, 1 + $I_L8090_380 + 2 * $SI_L8090_333_G36) = _vu_plus( i_direct($l_S60, 1 + $I_L8090_380 + 2 * $SI_L8090_333_G36), weight_column(1 + $I_L8091_365 + 256 * $SI_L8091_275_G39) * i_direct_column(1 + $I_L8091_365 + 256 * $SI_L8091_275_G39, 1 + $I_L8090_380 + 2 * $SI_L8090_333_G36) )
 8091.                                     $I_L8091_365 = 1 + $I_L8091_365
 8091.                                     if ( $I_L8091_365 >= min( n_long, 256 + 256 * $SI_L8091_275_G39 ) + -256 * $SI_L8091_275_G39 ) exit
 8091.                                  enddo
 8090.                                  $I_L8090_380 = 1 + $I_L8090_380
 8090.                                  if ( $I_L8090_380 >= min( n_layer, 2 + 2 * $SI_L8090_333_G36 ) + -2 * $SI_L8090_333_G36 ) exit
 8090.                               enddo
 8091.                               $SI_L8091_275_G39 = 1 + $SI_L8091_275_G39
 8095.                               if ( $SI_L8091_275_G39 >= _rsh( 255 + n_long, 8 ) ) exit
 8095.                            enddo
 8090.                            $SI_L8090_333_G36 = 1 + $SI_L8090_333_G36
 8090.                            if ( $SI_L8090_333_G36 >= _rsh( 1 + n_layer, 1 ) ) exit
 8090.                         enddo
 8090.                      endif
 8090.                   endif
 8090.                endif
 8090.             endif
 8099.             if ( $lp_S11 > n_profile ) exit
 8099.          enddo
 8099.       endif
 7389.       _free( t$1620 )
 8107.       return
 8107.       end
 8107.       
 8138.       
 8138.       subroutine calc_surf_rad( n_profile, n_layer, tau, ms, ls_trunc, euler_factor, isolir, i_direct_surf, mu_0, d_planck_flux_surface, n_brdf_basis_fnc, ls_brdf_trunc, f_brdf, rho_alb, brdf_sol, brdf_hemi, cgk, n_viewing_level, i_rad_layer, frac_rad_layer, n_direction, mu_v, up_lm, azim_factor, n_red_eigensystem, eig_vec, theta, source_base, radiance, weight_u, nd_profile, nd_layer, nd_direction, nd_viewing_level, nd_red_eigensystem, nd_max_order, nd_brdf_basis_fnc, nd_brdf_trunc )
 8138.       t$194 = nd_profile
 8138.       t$195 = nd_layer
 8192.       t$1703 = _zla( 0, nd_profile )
 8138.       t$1704 = _zla( 0, nd_profile )
 8192.       t$1705 = _zla( 0, nd_layer )
 8138.       t$1706 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 8138.       t$196 = nd_brdf_basis_fnc
 8138.       t$197 = nd_brdf_trunc / 2
 8138.       t$198 = nd_brdf_trunc
 8225.       t$1707 = _zla( 0, nd_brdf_basis_fnc )
 8138.       t$1708 = _zla( 0, nd_brdf_basis_fnc )
 8138.       t$1709 = 1 + t$197
 8225.       t$1710 = _zla( 0, 1 + t$197 )
 8138.       t$1711 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$197 )
 8138.       t$1712 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$197 ) * _zla( 0, 1 + t$197 )
 8138.       t$1713 = 1 + nd_brdf_trunc
 8225.       t$1714 = _zla( 0, 1 + nd_brdf_trunc )
 8138.       t$1715 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$197 ) * _zla( 0, 1 + t$197 ) * _zla( 0, 1 + nd_brdf_trunc )
 8138.       t$1716 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
 8138.       t$199 = nd_direction
 8138.       t$1717 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
 8230.       t$1718 = _zla( 0, nd_direction )
 8138.       t$1719 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_direction )
 8138.       t$200 = ( 1 + nd_brdf_trunc / 2 )
 8138.       t$201 = nd_max_order
 8237.       t$1720 = _zla( 0, t$200 )
 8138.       t$1721 = _zla( 0, t$200 )
 8237.       t$1722 = _zla( 0, nd_max_order )
 8138.       t$1723 = _zla( 0, t$200 ) * _zla( 0, nd_max_order )
 8138.       t$202 = nd_viewing_level
 8248.       t$1724 = _zla( 0, nd_viewing_level )
 8138.       t$1725 = _zla( 0, nd_profile ) * _zla( 0, nd_direction )
 8138.       t$203 = ( 1 + nd_max_order )
 8258.       t$1726 = _zla( 0, ( 1 + nd_max_order ) )
 8138.       t$1727 = _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_max_order ) )
 8138.       t$1728 = _zla( 0, nd_profile ) * _zla( 0, nd_direction ) * _zla( 0, ( 1 + nd_max_order ) )
 8138.       t$204 = ( 2 * nd_red_eigensystem )
 8138.       t$205 = nd_red_eigensystem
 8265.       t$1729 = _zla( 0, ( 2 * nd_red_eigensystem ) )
 8138.       t$1730 = _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) )
 8265.       t$1731 = _zla( 0, nd_red_eigensystem )
 8138.       t$1732 = _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) ) * _zla( 0, nd_red_eigensystem )
 8138.       t$1733 = _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem )
 8138.       t$206 = ( 1 + ls_trunc + -ms )
 8271.       t$1734 = _zla( 0, ( 1 + ls_trunc + -ms ) )
 8138.       t$1735 = _zla( 0, nd_profile ) * _zla( 0, ( 1 + ls_trunc + -ms ) )
 8138.       t$1736 = _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level )
 8138.       t$1737 = _zla( 0, nd_profile ) * _zla( 0, nd_direction ) * _zla( 0, nd_viewing_level )
 8138.       t$1738 = _zla( 0, nd_profile ) * _zla( 0, nd_direction ) * _zla( 0, nd_viewing_level )
 8138.       t$1739 = _zla( 0, nd_profile ) * _zla( 0, nd_direction ) * _zla( 0, nd_viewing_level ) * _zla( 0, ( 2 * nd_red_eigensystem ) )
 8346.       t$1742 = 8 * _zla( 0, nd_profile )
 8318.       t$1744 = 12 * _zla( 0, nd_profile )
 8343.       t$1745 = 8 * ( 7 + 12 * _zla( 0, nd_profile ) ) / 8
 8343.       t$1747 = t$1745 + 8 * _zla( 0, nd_profile )
 8335.       t$1748 = 8 * ( 7 + t$1745 + 8 * _zla( 0, nd_profile ) ) / 8
 8335.       t$1750 = t$1748 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem )
 8339.       t$1751 = 8 * ( 7 + t$1748 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem ) ) / 8
 8339.       t$1753 = t$1751 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem )
 8138.       t$207 = ( 1 + ls_trunc + -ms )
 8332.       t$1754 = _zla( 0, ( 1 + ls_trunc + -ms ) )
 8138.       t$1755 = _zla( 0, nd_profile ) * _zla( 0, ( 1 + ls_trunc + -ms ) )
 8332.       t$1756 = 8 * ( 7 + t$1751 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem ) ) / 8
 8332.       t$1758 = t$1756 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + ls_trunc + -ms ) )
 8321.       t$1759 = 8 * ( 7 + t$1756 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + ls_trunc + -ms ) ) ) / 8
 8321.       t$1761 = t$1759 + 8 * _zla( 0, nd_profile )
 8328.       t$1762 = 8 * ( 7 + t$1759 + 8 * _zla( 0, nd_profile ) ) / 8
 8328.       t$1764 = t$1762 + 8 * _zla( 0, nd_profile )
 8138.       t$1740 = int( _alloc( t$1762 + 8 * _zla( 0, nd_profile ) ), 8 )
 8346.       t$1741 = t$1740
 8318.       t$1743 = t$1740 + 8 * _zla( 0, nd_profile )
 8343.       t$1746 = t$1745 + t$1740
 8335.       t$1749 = t$1748 + t$1740
 8339.       t$1752 = t$1751 + t$1740
 8332.       t$1757 = t$1756 + t$1740
 8321.       t$1760 = t$1759 + t$1740
 8328.       t$1763 = t$1762 + t$1740
 8355.       if ( n_direction > 0 ) then
 8355.          $I_L8355_208 = 0
 8355.          do
 8358.             $n_list_up_S2 = 0
 8359.             if ( n_profile > 0 ) then
 8359.                $I_L8359_136 = 0
 8359. !dir$ ivdep
 8359. !dir$ loop_info (automatic) cache_nt( mu_v, list_up )
 8359.                do
 8360.                   if ( mu_v(1 + $I_L8359_136, 1 + $I_L8355_208) > 0.0 ) then
 8361.                      $n_list_up_S2 = 1 + $n_list_up_S2
 8362.                      list_up($n_list_up_S2) = ( 1 + $I_L8359_136 )
 8362.                   endif
 8364.                   $I_L8359_136 = 1 + $I_L8359_136
 8363.                   if ( $I_L8359_136 >= n_profile ) exit
 8363.                enddo
 8363.             endif
 8371.             if ( ms <= ls_brdf_trunc + -mod( ms, 2 ) ) then
 8373.                if ( n_brdf_basis_fnc > 0 ) then
 8374.                   if ( ls_trunc + -ms >= 0 ) then
 8373.                      $SI_L8373_200_G5 = 0
 8373.                      do
 8374.                         $SI_L8374_194_G8 = 0
 8374.                         do
 8373.                            $I_L8373_225 = 0
 8373. !dir$ shortloop16
 8373. !dir$ blocking_size( 8, 8 )
 8373.                            do
 8374.                               $I_L8374_222 = 0
 8374. !dir$ shortloop16
 8374. !dir$ blocking_size( 8, 8 )
 8374.                               do
 8376.                                  if ( ls_brdf_trunc + -ms + -mod( ms, 2 ) >= 0 ) then
 8376.                                     $I_L8376_180 = 0
 8376.                                     do
 8378.                                        x = 0.0
 8379.                                        $I_L8379_138 = 0
 8379. !dir$ ivdep
 8379.                                        do
 8381.                                           x = x + -( cgk(1 + $I_L8379_138, 1 + $I_L8374_222 + 8 * $SI_L8374_194_G8) * f_brdf(1 + $I_L8373_225 + 8 * $SI_L8373_200_G5, ms + 2 * $I_L8376_180, ms + 2 * $I_L8379_138, ms) )
 8382.                                           $I_L8379_138 = 1 + $I_L8379_138
 8379.                                           if ( $I_L8379_138 >= ( 2 + ls_brdf_trunc + -ms + -mod( ms, 2 ) ) / 2 ) exit
 8379.                                        enddo
 8383.                                        if ( 2 * $I_L8376_180 == 0 ) then
 8385.                                           if ( n_profile > 0 ) then
 8385.                                              $I_L8385_140 = 0
 8385. !dir$ ivdep
 8385.                                              do
 8386.                                                 xy(1 + $I_L8385_140) = x * up_lm(1 + $I_L8385_140, 1 + 2 * $I_L8376_180, 1 + $I_L8355_208)
 8387.                                                 $I_L8385_140 = 1 + $I_L8385_140
 8385.                                                 if ( $I_L8385_140 >= n_profile ) exit
 8385.                                              enddo
 8385.                                           endif
 8388.                                        else if ( n_profile > 0 ) then
 8390.                                           $I_L8390_142 = 0
 8390. !dir$ ivdep
 8390.                                           do
 8391.                                              xy(1 + $I_L8390_142) = xy(1 + $I_L8390_142) + x * up_lm(1 + $I_L8390_142, 1 + 2 * $I_L8376_180, 1 + $I_L8355_208)
 8392.                                              $I_L8390_142 = 1 + $I_L8390_142
 8390.                                              if ( $I_L8390_142 >= n_profile ) exit
 8390.                                           enddo
 8390.                                        endif
 8394.                                        $I_L8376_180 = 1 + $I_L8376_180
 8393.                                        if ( $I_L8376_180 >= ( 2 + ls_brdf_trunc + -ms + -mod( ms, 2 ) ) / 2 ) exit
 8393.                                     enddo
 8393.                                  endif
 8395.                                  if ( $I_L8373_225 + 8 * $SI_L8373_200_G5 == 0 ) then
 8397.                                     if ( n_profile > 0 ) then
 8397.                                        $I_L8397_144 = 0
 8397. !dir$ ivdep
 8397.                                        do
 8398.                                           ryx(1 + $I_L8397_144, 1 + $I_L8374_222 + 8 * $SI_L8374_194_G8) = xy(1 + $I_L8397_144) * rho_alb(1 + $I_L8397_144, 1)
 8399.                                           $I_L8397_144 = 1 + $I_L8397_144
 8397.                                           if ( $I_L8397_144 >= n_profile ) exit
 8397.                                        enddo
 8397.                                     endif
 8400.                                  else if ( n_profile > 0 ) then
 8402.                                     $I_L8402_146 = 0
 8402. !dir$ ivdep
 8402.                                     do
 8403.                                        ryx(1 + $I_L8402_146, 1 + $I_L8374_222 + 8 * $SI_L8374_194_G8) = ryx(1 + $I_L8402_146, 1 + $I_L8374_222 + 8 * $SI_L8374_194_G8) + xy(1 + $I_L8402_146) * rho_alb(1 + $I_L8402_146, 1 + $I_L8373_225 + 8 * $SI_L8373_200_G5)
 8404.                                        $I_L8402_146 = 1 + $I_L8402_146
 8402.                                        if ( $I_L8402_146 >= n_profile ) exit
 8402.                                     enddo
 8402.                                  endif
 8374.                                  $I_L8374_222 = 1 + $I_L8374_222
 8405.                                  if ( $I_L8374_222 >= min( 1 + ls_trunc + -ms, 8 + 8 * $SI_L8374_194_G8 ) + -8 * $SI_L8374_194_G8 ) exit
 8405.                               enddo
 8373.                               $I_L8373_225 = 1 + $I_L8373_225
 8373.                               if ( $I_L8373_225 >= min( n_brdf_basis_fnc, 8 + 8 * $SI_L8373_200_G5 ) + -8 * $SI_L8373_200_G5 ) exit
 8373.                            enddo
 8374.                            $SI_L8374_194_G8 = 1 + $SI_L8374_194_G8
 8406.                            if ( $SI_L8374_194_G8 >= _rsh( 8 + ls_trunc + -ms, 3 ) ) exit
 8406.                         enddo
 8373.                         $SI_L8373_200_G5 = 1 + $SI_L8373_200_G5
 8373.                         if ( $SI_L8373_200_G5 >= _rsh( 7 + n_brdf_basis_fnc, 3 ) ) exit
 8373.                      enddo
 8373.                   endif
 8373.                endif
 8409.                if ( n_red_eigensystem > 0 ) then
 8409.                   $I_L8409_196 = 0
 8409.                   do
 8410.                      if ( n_profile > 0 ) then
 8410.                         $I_L8410_148 = 0
 8410. !dir$ ivdep
 8410.                         do
 8411.                            $x_S13 = euler_factor * ryx(1 + $I_L8410_148, 1 + ls_trunc + -ms) * eig_vec(1 + $I_L8410_148, 1 + ls_trunc + -ms, 1 + $I_L8409_196)
 8413.                            rvyx_m(1 + $I_L8410_148, 1 + $I_L8409_196) = $x_S13
 8414.                            rvyx_p(1 + $I_L8410_148, 1 + $I_L8409_196) = $x_S13
 8415.                            $I_L8410_148 = 1 + $I_L8410_148
 8410.                            if ( $I_L8410_148 >= n_profile ) exit
 8410.                         enddo
 8410.                      endif
 8427.                      $I_L8409_196 = 1 + $I_L8409_196
 8426.                      if ( $I_L8409_196 >= n_red_eigensystem ) exit
 8426.                   enddo
 8409.                   $I_L8409_196 = 0
 8409.                   do
 8416.                      if ( ms + -ls_trunc < 0 ) then
 8417.                         if ( n_profile > 0 ) then
 8416.                            $SI_L8416_182_G11 = 0
 8416.                            do
 8417.                               $SI_L8417_150_G14 = 0
 8417.                               do
 8416.                                  $I_L8416_216 = 0
 8416. !dir$ shortloop16
 8416. !dir$ blocking_size( 2, 2 )
 8416.                                  do
 8417.                                     $I_L8417_213 = 0
 8417. !dir$ ivdep
 8417. !dir$ blocking_size( 256, 256 )
 8417.                                     do
 8418.                                        $x_S16 = ryx(1 + $I_L8417_213 + 256 * $SI_L8417_150_G14, ls_trunc + -ms + -$I_L8416_216 + -2 * $SI_L8416_182_G11) * eig_vec(1 + $I_L8417_213 + 256 * $SI_L8417_150_G14, ls_trunc + -ms + -$I_L8416_216 + -2 * $SI_L8416_182_G11, 1 + $I_L8409_196)
 8421.                                        rvyx_p(1 + $I_L8417_213 + 256 * $SI_L8417_150_G14, 1 + $I_L8409_196) = $x_S16 + rvyx_p(1 + $I_L8417_213 + 256 * $SI_L8417_150_G14, 1 + $I_L8409_196)
 8419.                                        rvyx_m(1 + $I_L8417_213 + 256 * $SI_L8417_150_G14, 1 + $I_L8409_196) = rvyx_m(1 + $I_L8417_213 + 256 * $SI_L8417_150_G14, 1 + $I_L8409_196) + $x_S16 * real( 1 + -2 * mod( ( -1 + ls_trunc + -ms + -$I_L8416_216 + -2 * $SI_L8416_182_G11 ), 2 ), 8 )
 8417.                                        $I_L8417_213 = 1 + $I_L8417_213
 8417.                                        if ( $I_L8417_213 >= min( n_profile, 256 + 256 * $SI_L8417_150_G14 ) + -256 * $SI_L8417_150_G14 ) exit
 8417.                                     enddo
 8416.                                     $I_L8416_216 = 1 + $I_L8416_216
 8416.                                     if ( $I_L8416_216 >= min( ( ls_trunc + -ms ), 2 + 2 * $SI_L8416_182_G11 ) + -2 * $SI_L8416_182_G11 ) exit
 8416.                                  enddo
 8417.                                  $SI_L8417_150_G14 = 1 + $SI_L8417_150_G14
 8422.                                  if ( $SI_L8417_150_G14 >= _rsh( 255 + n_profile, 8 ) ) exit
 8422.                               enddo
 8416.                               $SI_L8416_182_G11 = 1 + $SI_L8416_182_G11
 8416.                               if ( $SI_L8416_182_G11 >= _rsh( 1 + ls_trunc + -ms, 1 ) ) exit
 8416.                            enddo
 8416.                         endif
 8416.                      endif
 8427.                      $I_L8409_196 = 1 + $I_L8409_196
 8426.                      if ( $I_L8409_196 >= n_red_eigensystem ) exit
 8426.                   enddo
 8409.                   $I_L8409_196 = 0
 8409.                   do
 8424.                      if ( n_profile > 0 ) then
 8424.                         $I_L8424_152 = 0
 8424. !dir$ ivdep
 8424. !dir$ loop_info (automatic) cache_nt( theta, rvyx_m )
 8424.                         do
 8425.                            rvyx_m(1 + $I_L8424_152, 1 + $I_L8409_196) = rvyx_m(1 + $I_L8424_152, 1 + $I_L8409_196) * theta(1 + $I_L8424_152, 1 + $I_L8409_196)
 8426.                            $I_L8424_152 = 1 + $I_L8424_152
 8424.                            if ( $I_L8424_152 >= n_profile ) exit
 8424.                         enddo
 8424.                      endif
 8427.                      $I_L8409_196 = 1 + $I_L8409_196
 8426.                      if ( $I_L8409_196 >= n_red_eigensystem ) exit
 8426.                   enddo
 8426.                endif
 8429.                if ( n_profile > 0 ) then
 8429.                   $I_L8429_154 = 0
 8429. !dir$ ivdep
 8429.                   do
 8430.                      rsyx(1 + $I_L8429_154) = euler_factor * ryx(1 + $I_L8429_154, 1 + ls_trunc + -ms) * source_base(1 + $I_L8429_154, 1 + ls_trunc + -ms)
 8432.                      $I_L8429_154 = 1 + $I_L8429_154
 8429.                      if ( $I_L8429_154 >= n_profile ) exit
 8429.                   enddo
 8429.                endif
 8433.                if ( ms + -ls_trunc < 0 ) then
 8434.                   if ( n_profile > 0 ) then
 8433.                      $SI_L8433_184_G17 = 0
 8433.                      do
 8434.                         $SI_L8434_156_G20 = 0
 8434.                         do
 8433.                            $I_L8433_219 = 0
 8433. !dir$ shortloop16
 8433. !dir$ blocking_size( 2, 2 )
 8433.                            do
 8434.                               $I_L8434_210 = 0
 8434. !dir$ ivdep
 8434. !dir$ blocking_size( 256, 256 )
 8434.                               do
 8435.                                  rsyx(1 + $I_L8434_210 + 256 * $SI_L8434_156_G20) = rsyx(1 + $I_L8434_210 + 256 * $SI_L8434_156_G20) + ryx(1 + $I_L8434_210 + 256 * $SI_L8434_156_G20, ls_trunc + -ms + -$I_L8433_219 + -2 * $SI_L8433_184_G17) * source_base(1 + $I_L8434_210 + 256 * $SI_L8434_156_G20, ls_trunc + -ms + -$I_L8433_219 + -2 * $SI_L8433_184_G17)
 8434.                                  $I_L8434_210 = 1 + $I_L8434_210
 8434.                                  if ( $I_L8434_210 >= min( n_profile, 256 + 256 * $SI_L8434_156_G20 ) + -256 * $SI_L8434_156_G20 ) exit
 8434.                               enddo
 8433.                               $I_L8433_219 = 1 + $I_L8433_219
 8433.                               if ( $I_L8433_219 >= min( ( ls_trunc + -ms ), 2 + 2 * $SI_L8433_184_G17 ) + -2 * $SI_L8433_184_G17 ) exit
 8433.                            enddo
 8434.                            $SI_L8434_156_G20 = 1 + $SI_L8434_156_G20
 8436.                            if ( $SI_L8434_156_G20 >= _rsh( 255 + n_profile, 8 ) ) exit
 8436.                         enddo
 8433.                         $SI_L8433_184_G17 = 1 + $SI_L8433_184_G17
 8433.                         if ( $SI_L8433_184_G17 >= _rsh( 1 + ls_trunc + -ms, 1 ) ) exit
 8433.                      enddo
 8433.                   endif
 8433.                endif
 8433.             endif
 8442.             if ( n_viewing_level > 0 ) then
 8442.                $I_L8442_206 = 0
 8442. !dir$ loop_info (automatic) cache_nt( frac_rad_layer )
 8442.                do
 8447.                   if ( $n_list_up_S2 > 0 ) then
 8447.                      $SCA_frac_rad_layer_I0 = frac_rad_layer(1 + $I_L8442_206)
 8447.                      $SCA_i_rad_layer_I1 = i_rad_layer(1 + $I_L8442_206)
 8447.                      $I_L8447_204 = 0
 8447. !dir$ ivdep
 8447.                      do
 8448.                         $l_S23 = list_up(1 + $I_L8447_204)
 8449.                         trans($l_S23) = tau($l_S23, $SCA_i_rad_layer_I1) * ( 1.0 + -$SCA_frac_rad_layer_I0 )
 8452.                         $I_L8447_204 = 1 + $I_L8447_204
 8447.                         if ( $I_L8447_204 >= $n_list_up_S2 ) exit
 8447.                      enddo
 8447.                   endif
 8453.                   $t_S24 = 1 + i_rad_layer(1 + $I_L8442_206)
 8453.                   if ( n_layer + -$t_S24 >= 0 ) then
 8454.                      if ( $n_list_up_S2 > 0 ) then
 8453.                         $I_L8453_186 = 0
 8453.                         do
 8454.                            $I_L8454_160 = 0
 8454. !dir$ ivdep
 8454.                            do
 8455.                               $l_S26 = list_up(1 + $I_L8454_160)
 8456.                               trans($l_S26) = _vu_plus( trans($l_S26), tau($l_S26, $t_S24 + $I_L8453_186) )
 8457.                               $I_L8454_160 = 1 + $I_L8454_160
 8454.                               if ( $I_L8454_160 >= $n_list_up_S2 ) exit
 8454.                            enddo
 8458.                            $I_L8453_186 = 1 + $I_L8453_186
 8457.                            if ( $I_L8453_186 >= 1 + n_layer + -$t_S24 ) exit
 8457.                         enddo
 8457.                      endif
 8457.                   endif
 8459.                   if ( $n_list_up_S2 > 0 ) then
 8459.                      $I_L8459_162 = 0
 8459.                      do
 8460.                         $l_S29 = list_up(1 + $I_L8459_162)
 8461.                         trans($l_S29) = _expn( -( trans($l_S29) * 1.0/mu_v($l_S29, 1 + $I_L8355_208) ) )
 8463.                         $I_L8459_162 = 1 + $I_L8459_162
 8459.                         if ( $I_L8459_162 >= $n_list_up_S2 ) exit
 8459.                      enddo
 8459.                   endif
 8466.                   if ( ms <= ls_brdf_trunc + -mod( ms, 2 ) ) then
 8468.                      if ( $n_list_up_S2 > 0 ) then
 8468.                         $I_L8468_164 = 0
 8468. !dir$ ivdep
 8468.                         do
 8469.                            $l_S31 = list_up(1 + $I_L8468_164)
 8472.                            radiance($l_S31, 1 + $I_L8442_206, 1 + $I_L8355_208) = _vu_plus( radiance($l_S31, 1 + $I_L8442_206, 1 + $I_L8355_208), azim_factor($l_S31, 1 + $I_L8355_208) * rsyx($l_S31) * trans($l_S31) )
 8474.                            $I_L8468_164 = 1 + $I_L8468_164
 8468.                            if ( $I_L8468_164 >= $n_list_up_S2 ) exit
 8468.                         enddo
 8468.                      endif
 8477.                      if ( n_red_eigensystem > 0 ) then
 8478.                         if ( $n_list_up_S2 > 0 ) then
 8477.                            $I_L8477_188 = 0
 8477. !dir$ blocking_size( 1, 1 )
 8477.                            do
 8478.                               $I_L8478_166 = 0
 8478. !dir$ ivdep
 8478. !dir$ blocking_size( 256, 256 )
 8478.                               do
 8479.                                  $l_S33 = list_up(1 + $I_L8478_166)
 8480.                                  weight_u($l_S33, 1 + $I_L8442_206, 1 + $I_L8355_208, 1 + $I_L8477_188) = _vu_plus( weight_u($l_S33, 1 + $I_L8442_206, 1 + $I_L8355_208, 1 + $I_L8477_188), trans($l_S33) * rvyx_m($l_S33, 1 + $I_L8477_188) )
 8482.                                  weight_u($l_S33, 1 + $I_L8442_206, 1 + $I_L8355_208, 1 + n_red_eigensystem + $I_L8477_188) = _vu_plus( weight_u($l_S33, 1 + $I_L8442_206, 1 + $I_L8355_208, 1 + n_red_eigensystem + $I_L8477_188), trans($l_S33) * rvyx_p($l_S33, 1 + $I_L8477_188) )
 8485.                                  $I_L8478_166 = 1 + $I_L8478_166
 8478.                                  if ( $I_L8478_166 >= $n_list_up_S2 ) exit
 8478.                               enddo
 8486.                               $I_L8477_188 = 1 + $I_L8477_188
 8485.                               if ( $I_L8477_188 >= n_red_eigensystem ) exit
 8485.                            enddo
 8485.                         endif
 8485.                      endif
 8485.                   endif
 8495.                   if ( ms == 0 ) then
 8496.                      if ( isolir == 1 ) then
 8497.                         if ( $n_list_up_S2 > 0 ) then
 8497.                            $I_L8497_168 = 0
 8497. !dir$ ivdep
 8497.                            do
 8498.                               $l_S36 = list_up(1 + $I_L8497_168)
 8499.                               brdf_full($l_S36) = rho_alb($l_S36, 1) * brdf_sol($l_S36, 1, 1 + $I_L8355_208)
 8500.                               $I_L8497_168 = 1 + $I_L8497_168
 8497.                               if ( $I_L8497_168 >= $n_list_up_S2 ) exit
 8497.                            enddo
 8497.                         endif
 8501.                         if ( -2 + n_brdf_basis_fnc >= 0 ) then
 8502.                            if ( $n_list_up_S2 > 0 ) then
 8501.                               $I_L8501_192 = 0
 8501.                               do
 8502.                                  $I_L8502_176 = 0
 8502. !dir$ ivdep
 8502.                                  do
 8503.                                     $l_S38 = list_up(1 + $I_L8502_176)
 8504.                                     brdf_full($l_S38) = _vu_plus( brdf_full($l_S38), rho_alb($l_S38, 2 + $I_L8501_192) * brdf_sol($l_S38, 2 + $I_L8501_192, 1 + $I_L8355_208) )
 8506.                                     $I_L8502_176 = 1 + $I_L8502_176
 8502.                                     if ( $I_L8502_176 >= $n_list_up_S2 ) exit
 8502.                                  enddo
 8507.                                  $I_L8501_192 = 1 + $I_L8501_192
 8506.                                  if ( $I_L8501_192 >= -1 + n_brdf_basis_fnc ) exit
 8506.                               enddo
 8506.                            endif
 8506.                         endif
 8508.                         if ( $n_list_up_S2 > 0 ) then
 8508.                            $I_L8508_178 = 0
 8508. !dir$ ivdep
 8508.                            do
 8509.                               $l_S41 = list_up(1 + $I_L8508_178)
 8510.                               radiance($l_S41, 1 + $I_L8442_206, 1 + $I_L8355_208) = _vu_plus( radiance($l_S41, 1 + $I_L8442_206, 1 + $I_L8355_208), mu_0($l_S41) * i_direct_surf($l_S41) * brdf_full($l_S41) * trans($l_S41) )
 8513.                               $I_L8508_178 = 1 + $I_L8508_178
 8508.                               if ( $I_L8508_178 >= $n_list_up_S2 ) exit
 8508.                            enddo
 8508.                         endif
 8514.                      else if ( isolir == 2 ) then
 8515.                         if ( $n_list_up_S2 > 0 ) then
 8515.                            $I_L8515_170 = 0
 8515. !dir$ ivdep
 8515.                            do
 8516.                               $l_S43 = list_up(1 + $I_L8515_170)
 8517.                               brdf_full($l_S43) = rho_alb($l_S43, 1) * brdf_hemi($l_S43, 1, 1 + $I_L8355_208)
 8518.                               $I_L8515_170 = 1 + $I_L8515_170
 8515.                               if ( $I_L8515_170 >= $n_list_up_S2 ) exit
 8515.                            enddo
 8515.                         endif
 8519.                         if ( -2 + n_brdf_basis_fnc >= 0 ) then
 8520.                            if ( $n_list_up_S2 > 0 ) then
 8519.                               $I_L8519_190 = 0
 8519.                               do
 8520.                                  $I_L8520_172 = 0
 8520. !dir$ ivdep
 8520.                                  do
 8521.                                     $l_S45 = list_up(1 + $I_L8520_172)
 8522.                                     brdf_full($l_S45) = _vu_plus( brdf_full($l_S45), rho_alb($l_S45, 2 + $I_L8519_190) * brdf_hemi($l_S45, 2 + $I_L8519_190, 1 + $I_L8355_208) )
 8524.                                     $I_L8520_172 = 1 + $I_L8520_172
 8520.                                     if ( $I_L8520_172 >= $n_list_up_S2 ) exit
 8520.                                  enddo
 8525.                                  $I_L8519_190 = 1 + $I_L8519_190
 8524.                                  if ( $I_L8519_190 >= -1 + n_brdf_basis_fnc ) exit
 8524.                               enddo
 8524.                            endif
 8524.                         endif
 8526.                         if ( $n_list_up_S2 > 0 ) then
 8526.                            $I_L8526_174 = 0
 8526. !dir$ ivdep
 8526.                            do
 8527.                               $l_S48 = list_up(1 + $I_L8526_174)
 8528.                               radiance($l_S48, 1 + $I_L8442_206, 1 + $I_L8355_208) = _vu_plus( radiance($l_S48, 1 + $I_L8442_206, 1 + $I_L8355_208), 3.1830988618379069e-1 * d_planck_flux_surface($l_S48) * trans($l_S48) * ( 1.0 + -brdf_full($l_S48) ) )
 8532.                               $I_L8526_174 = 1 + $I_L8526_174
 8526.                               if ( $I_L8526_174 >= $n_list_up_S2 ) exit
 8526.                            enddo
 8526.                         endif
 8526.                      endif
 8526.                   endif
 8536.                   $I_L8442_206 = 1 + $I_L8442_206
 8534.                   if ( $I_L8442_206 >= n_viewing_level ) exit
 8534.                enddo
 8534.             endif
 8537.             $I_L8355_208 = 1 + $I_L8355_208
 8536.             if ( $I_L8355_208 >= n_direction ) exit
 8536.          enddo
 8536.       endif
 8138.       _free( t$1740 )
 8542.       return
 8542.       end
 8542.       
 8567.       
 8567.       subroutine calc_top_rad( n_profile, tau, n_viewing_level, i_rad_layer, frac_rad_layer, n_direction, mu_v, flux_inc_down, radiance, nd_profile, nd_layer, nd_direction, nd_viewing_level )
 8567.       t$208 = nd_profile
 8567.       t$209 = nd_layer
 8604.       t$1765 = _zla( 0, nd_profile )
 8567.       t$1766 = _zla( 0, nd_profile )
 8604.       t$1767 = _zla( 0, nd_layer )
 8567.       t$1768 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 8567.       t$210 = nd_viewing_level
 8613.       t$1769 = _zla( 0, nd_viewing_level )
 8567.       t$211 = nd_direction
 8619.       t$1770 = _zla( 0, nd_direction )
 8567.       t$1771 = _zla( 0, nd_profile ) * _zla( 0, nd_direction )
 8567.       t$1772 = _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level )
 8567.       t$1773 = _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level ) * _zla( 0, nd_direction )
 8645.       t$1776 = 4 * _zla( 0, nd_profile )
 8567.       t$1777 = _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level )
 8648.       t$1778 = 8 * ( 7 + 4 * _zla( 0, nd_profile ) ) / 8
 8648.       t$1780 = t$1778 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level )
 8567.       t$1774 = int( _alloc( t$1778 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level ) ), 8 )
 8645.       t$1775 = t$1774
 8648.       t$1779 = t$1778 + t$1774
 8655.       if ( n_viewing_level > 0 ) then
 8655.          $I_L8655_50 = 0
 8655.          do
 8657.             if ( n_profile > 0 ) then
 8657.                $SCA_frac_rad_layer_I0 = frac_rad_layer(1 + $I_L8655_50)
 8657.                $SCA_i_rad_layer_I1 = i_rad_layer(1 + $I_L8655_50)
 8657.                $I_L8657_48 = 0
 8657. !dir$ ivdep
 8657.                do
 8658.                   tau_c(1 + $I_L8657_48, 1 + $I_L8655_50) = $SCA_frac_rad_layer_I0 * tau(1 + $I_L8657_48, $SCA_i_rad_layer_I1)
 8660.                   $I_L8657_48 = 1 + $I_L8657_48
 8657.                   if ( $I_L8657_48 >= n_profile ) exit
 8657.                enddo
 8657.             endif
 8661.             $t_S2 = -1 + i_rad_layer(1 + $I_L8655_50)
 8661.             if ( -1 + i_rad_layer(1 + $I_L8655_50) > 0 ) then
 8662.                if ( n_profile > 0 ) then
 8661.                   $SI_L8661_40_G2 = 0
 8661.                   do
 8662.                      $SI_L8662_34_G5 = 0
 8662.                      do
 8661.                         $I_L8661_55 = 0
 8661. !dir$ shortloop16
 8661. !dir$ blocking_size( 4, 4 )
 8661.                         do
 8662.                            $I_L8662_52 = 0
 8662. !dir$ ivdep
 8662. !dir$ blocking_size( 256, 256 )
 8662.                            do
 8663.                               tau_c(1 + $I_L8662_52 + 256 * $SI_L8662_34_G5, 1 + $I_L8655_50) = tau_c(1 + $I_L8662_52 + 256 * $SI_L8662_34_G5, 1 + $I_L8655_50) + tau(1 + $I_L8662_52 + 256 * $SI_L8662_34_G5, $t_S2 + -$I_L8661_55 + -4 * $SI_L8661_40_G2)
 8662.                               $I_L8662_52 = 1 + $I_L8662_52
 8662.                               if ( $I_L8662_52 >= min( n_profile, 256 + 256 * $SI_L8662_34_G5 ) + -256 * $SI_L8662_34_G5 ) exit
 8662.                            enddo
 8661.                            $I_L8661_55 = 1 + $I_L8661_55
 8661.                            if ( $I_L8661_55 >= min( $t_S2, 4 + 4 * $SI_L8661_40_G2 ) + -4 * $SI_L8661_40_G2 ) exit
 8661.                         enddo
 8662.                         $SI_L8662_34_G5 = 1 + $SI_L8662_34_G5
 8664.                         if ( $SI_L8662_34_G5 >= _rsh( 255 + n_profile, 8 ) ) exit
 8664.                      enddo
 8661.                      $SI_L8661_40_G2 = 1 + $SI_L8661_40_G2
 8661.                      if ( $SI_L8661_40_G2 >= _rsh( 3 + $t_S2, 2 ) ) exit
 8661.                   enddo
 8661.                endif
 8661.             endif
 8667.             $I_L8655_50 = 1 + $I_L8655_50
 8665.             if ( $I_L8655_50 >= n_viewing_level ) exit
 8665.          enddo
 8665.       endif
 8670.       if ( n_direction > 0 ) then
 8670.          $I_L8670_46 = 0
 8670.          do
 8673.             $n_list_down_S7 = 0
 8674.             if ( n_profile > 0 ) then
 8674.                $I_L8674_36 = 0
 8674. !dir$ ivdep
 8674.                do
 8675.                   if ( mu_v(1 + $I_L8674_36, 1 + $I_L8670_46) < 0.0 ) then
 8676.                      $n_list_down_S7 = 1 + $n_list_down_S7
 8677.                      list_down($n_list_down_S7) = ( 1 + $I_L8674_36 )
 8677.                   endif
 8679.                   $I_L8674_36 = 1 + $I_L8674_36
 8678.                   if ( $I_L8674_36 >= n_profile ) exit
 8678.                enddo
 8678.             endif
 8681.             if ( n_viewing_level > 0 ) then
 8682.                if ( $n_list_down_S7 > 0 ) then
 8681.                   $I_L8681_42 = 0
 8681. !dir$ blocking_size( 1, 1 )
 8681.                   do
 8682.                      $I_L8682_38 = 0
 8682. !dir$ ivdep
 8682. !dir$ blocking_size( 256, 256 )
 8682.                      do
 8683.                         $l_S9 = list_down(1 + $I_L8682_38)
 8684.                         radiance($l_S9, 1 + $I_L8681_42, 1 + $I_L8670_46) = _vu_plus( radiance($l_S9, 1 + $I_L8681_42, 1 + $I_L8670_46), ( 3.1830988618379069e-1 * flux_inc_down($l_S9) ) * _expn( ( tau_c($l_S9, 1 + $I_L8681_42) * 1.0/mu_v($l_S9, 1 + $I_L8670_46) ) ) )
 8686.                         $I_L8682_38 = 1 + $I_L8682_38
 8682.                         if ( $I_L8682_38 >= $n_list_down_S7 ) exit
 8682.                      enddo
 8687.                      $I_L8681_42 = 1 + $I_L8681_42
 8686.                      if ( $I_L8681_42 >= n_viewing_level ) exit
 8686.                   enddo
 8686.                endif
 8686.             endif
 8689.             $I_L8670_46 = 1 + $I_L8670_46
 8687.             if ( $I_L8670_46 >= n_direction ) exit
 8687.          enddo
 8687.       endif
 8567.       _free( t$1774 )
 8694.       return
 8694.       end
 8694.       
 8715.       
 8715.       subroutine calculate_density( n_profile, n_layer, l_continuum, water_frac, p, t, i_top, density, molar_density_water, molar_density_frn, nd_profile, nd_layer )
 8715.       t$212 = nd_profile
 8715.       t$213 = nd_layer
 8758.       t$1781 = _zla( 0, nd_profile )
 8715.       t$1782 = _zla( 0, nd_profile )
 8758.       t$1783 = _zla( 0, nd_layer )
 8715.       t$1784 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 8782.       if ( nd_layer > 0 ) then
 8783.          if ( nd_profile > 0 ) then
 8782.             $I_L8782_20 = 0
 8782.             do
 8783.                $I_L8783_16 = 0
 8783. !dir$ ivdep
 8783.                do
 8784.                   density(1 + $I_L8783_16, 1 + $I_L8782_20) = ( 3.4840049333509857e-3 * p(1 + $I_L8783_16, 1 + $I_L8782_20) * 1.0/( t(1 + $I_L8783_16, 1 + $I_L8782_20) * ( 1.0 + 6.0785554500896466e-1 * water_frac(1 + $I_L8783_16, 1 + $I_L8782_20) ) ) )
 8787.                   $I_L8783_16 = 1 + $I_L8783_16
 8783.                   if ( $I_L8783_16 >= nd_profile ) exit
 8783.                enddo
 8788.                $I_L8782_20 = 1 + $I_L8782_20
 8787.                if ( $I_L8782_20 >= nd_layer ) exit
 8787.             enddo
 8787.          endif
 8787.       endif
 8790.       if ( l_continuum /= .false. ) then
 8791.          if ( nd_layer > 0 ) then
 8792.             if ( nd_profile > 0 ) then
 8791.                $I_L8791_22 = 0
 8791.                do
 8792.                   $I_L8792_18 = 0
 8792. !dir$ ivdep
 8792.                   do
 8793.                      molar_density_frn(1 + $I_L8792_18, 1 + $I_L8791_22) = 34.523234136573919 * density(1 + $I_L8792_18, 1 + $I_L8791_22) * ( 1.0 + -water_frac(1 + $I_L8792_18, 1 + $I_L8791_22) )
 8796.                      molar_density_water(1 + $I_L8792_18, 1 + $I_L8791_22) = 55.508373438133148 * water_frac(1 + $I_L8792_18, 1 + $I_L8791_22) * density(1 + $I_L8792_18, 1 + $I_L8791_22)
 8803.                      $I_L8792_18 = 1 + $I_L8792_18
 8792.                      if ( $I_L8792_18 >= nd_profile ) exit
 8792.                   enddo
 8804.                   $I_L8791_22 = 1 + $I_L8791_22
 8803.                   if ( $I_L8791_22 >= nd_layer ) exit
 8803.                enddo
 8803.             endif
 8803.          endif
 8803.       endif
 8810.       return
 8810.       end
 8810.       
 8833.       
 8833.       subroutine calc_uplm_sol( n_profile, ms_min, ms_max, ia_sph_mm, ls_local_trunc, zen_0, uplm_sol, nd_profile, nd_max_order, nd_sph_coeff )
 8833.       t$214 = nd_max_order
 8833.       t$1785 = 1 + nd_max_order
 8864.       t$1786 = _zla( 0, 1 + nd_max_order )
 8833.       t$215 = nd_profile
 8869.       t$1787 = _zla( 0, nd_profile )
 8833.       t$216 = nd_sph_coeff
 8833.       t$1788 = _zla( 0, nd_profile )
 8872.       t$1789 = _zla( 0, nd_sph_coeff )
 8833.       t$1790 = _zla( 0, nd_profile ) * _zla( 0, nd_sph_coeff )
 8900.       if ( ms_max + -ms_min >= 0 ) then
 8900.          $I_L8900_40 = 0
 8900. !dir$ loop_info (automatic) cache_nt( ia_sph_mm )
 8900.          do
 8903.             $j_S3 = ia_sph_mm(ms_min + $I_L8900_40)
 8905.             product = 1.0
 8907.             if ( ( ms_min + $I_L8900_40 ) > 0 ) then
 8908.                $I_L8908_28 = 0
 8908. !dir$ ivdep
 8908.                do
 8909.                   product = product * ( 1.0 + -( 5.0e-1 * 1.0/( real( 1 + $I_L8908_28, 8 ) ) ) )
 8910.                   $I_L8908_28 = 1 + $I_L8908_28
 8908.                   if ( $I_L8908_28 >= ms_min + $I_L8900_40 ) exit
 8908.                enddo
 8911.                if ( n_profile > 0 ) then
 8911.                   $I_L8911_30 = 0
 8911. !dir$ ivdep
 8911.                   do
 8912.                      uplm_sol(1 + $I_L8911_30, $j_S3) = _sqrt( 7.9577471545947673e-2 * product * ( 1.0 + -( zen_0(1 + $I_L8911_30) * zen_0(1 + $I_L8911_30) ) ) ** ( ms_min + $I_L8900_40 ) * ( 1.0 + 2.0 * real( ms_min + $I_L8900_40, 8 ) ) ) * cvmg( -1.0, 1.0, and( 1, ( ms_min + $I_L8900_40 ) ) /= 0 )
 8915.                      $I_L8911_30 = 1 + $I_L8911_30
 8911.                      if ( $I_L8911_30 >= n_profile ) exit
 8911.                   enddo
 8911.                endif
 8916.             else if ( n_profile > 0 ) then
 8917.                $I_L8917_32 = 0
 8917. !dir$ ivdep
 8917.                do
 8918.                   uplm_sol(1 + $I_L8917_32, $j_S3) = 2.8209479177387814e-1
 8919.                   $I_L8917_32 = 1 + $I_L8917_32
 8917.                   if ( $I_L8917_32 >= n_profile ) exit
 8917.                enddo
 8917.             endif
 8924.             if ( ( ms_min + $I_L8900_40 ) <= 1 + ls_local_trunc(ms_min + $I_L8900_40) ) then
 8925.                if ( n_profile > 0 ) then
 8925.                   $I_L8925_34 = 0
 8925. !dir$ ivdep
 8925.                   do
 8926.                      uplm_sol(1 + $I_L8925_34, 1 + $j_S3) = -( uplm_sol(1 + $I_L8925_34, $j_S3) * zen_0(1 + $I_L8925_34) * _sqrt( 3.0 + 2.0 * real( ms_min + $I_L8900_40, 8 ) ) )
 8929.                      $I_L8925_34 = 1 + $I_L8925_34
 8925.                      if ( $I_L8925_34 >= n_profile ) exit
 8925.                   enddo
 8925.                endif
 8925.             endif
 8933.             $t_S6 = 1 + ls_local_trunc(ms_min + $I_L8900_40)
 8933.             if ( ( -2 + $t_S6 + -ms_min + -$I_L8900_40 ) >= 0 ) then
 8936.                if ( n_profile > 0 ) then
 8933.                   $I_L8933_38 = 0
 8933.                   do
 8936.                      $I_L8936_36 = 0
 8936. !dir$ ivdep
 8936.                      do
 8937.                         uplm_sol(1 + $I_L8936_36, 2 + $j_S3 + $I_L8933_38) = -( uplm_sol(1 + $I_L8936_36, $j_S3 + $I_L8933_38) * _sqrt( 1.0/( ( real( 2 + ms_min + $I_L8933_38 + $I_L8900_40, 8 ) + -( real( ms_min + $I_L8900_40, 8 ) ) ) * ( real( ms_min + $I_L8900_40, 8 ) + real( 2 + ms_min + $I_L8933_38 + $I_L8900_40, 8 ) ) * ( -3.0 + 2.0 * real( 2 + ms_min + $I_L8933_38 + $I_L8900_40, 8 ) ) ) * ( ( 1.0 + 2.0 * real( 2 + ms_min + $I_L8933_38 + $I_L8900_40, 8 ) ) * ( -1.0 + real( ms_min + $I_L8900_40, 8 ) + real( 2 + ms_min + $I_L8933_38 + $I_L8900_40, 8 ) ) * ( -1.0 + real( 2 + ms_min + $I_L8933_38 + $I_L8900_40, 8 ) + -( real( ms_min + $I_L8900_40, 8 ) ) ) ) ) ) + uplm_sol(1 + $I_L8936_36, 1 + $j_S3 + $I_L8933_38) * ( -zen_0(1 + $I_L8936_36) ) * _sqrt( 1.0/( ( real( 2 + ms_min + $I_L8933_38 + $I_L8900_40, 8 ) + -( real( ms_min + $I_L8900_40, 8 ) ) ) * ( real( ms_min + $I_L8900_40, 8 ) + real( 2 + ms_min + $I_L8933_38 + $I_L8900_40, 8 ) ) ) * ( ( 1.0 + 2.0 * real( 2 + ms_min + $I_L8933_38 + $I_L8900_40, 8 ) ) * ( -1.0 + 2.0 * real( 2 + ms_min + $I_L8933_38 + $I_L8900_40, 8 ) ) ) )
 8946.                         $I_L8936_36 = 1 + $I_L8936_36
 8936.                         if ( $I_L8936_36 >= n_profile ) exit
 8936.                      enddo
 8947.                      $I_L8933_38 = 1 + $I_L8933_38
 8946.                      if ( $I_L8933_38 >= -1 + $t_S6 + -ms_min + -$I_L8900_40 ) exit
 8946.                   enddo
 8946.                endif
 8946.             endif
 8949.             $I_L8900_40 = 1 + $I_L8900_40
 8947.             if ( $I_L8900_40 >= 1 + ms_max + -ms_min ) exit
 8947.          enddo
 8947.       endif
 8954.       return
 8954.       end
 8954.       
 8978.       
 8978.       subroutine calc_uplm_zero( ms_min, ms_max, ia_sph_mm, ls_local_trunc, uplm_zero, nd_max_order, nd_sph_coeff )
 8978.       t$217 = nd_max_order
 8978.       t$1791 = 1 + nd_max_order
 9005.       t$1792 = _zla( 0, 1 + nd_max_order )
 8978.       t$218 = nd_sph_coeff
 9010.       t$1793 = _zla( 0, nd_sph_coeff )
 9027.       if ( ms_max + -ms_min >= 0 ) then
 9027.          $I_L9027_36 = 0
 9027.          do
 9030.             $j_S1 = ia_sph_mm(ms_min + $I_L9027_36)
 9031.             uplm_zero($j_S1) = 7.9577471545947673e-2
 9032.             if ( ( -2 + 2 * ms_min + 2 * $I_L9027_36 ) >= 0 ) then
 9033.                $SC_uplm_zero_I0 = 7.9577471545947673e-2
 9032.                $I_L9032_30 = 0
 9032. !dir$ ivdep
 9032.                do
 9033.                   $SC_uplm_zero_I0 = ( $SC_uplm_zero_I0 * 1.0/( real( 2 + 2 * $I_L9032_30, 8 ) ) * real( 3 + 2 * $I_L9032_30, 8 ) )
 9034.                   $I_L9032_30 = 1 + $I_L9032_30
 9032.                   if ( $I_L9032_30 >= ( 2 * ms_min + 2 * $I_L9027_36 ) / 2 ) exit
 9032.                enddo
 9033.                uplm_zero($j_S1) = $SC_uplm_zero_I0
 9033.             endif
 9035.             uplm_zero($j_S1) = _sqrt( uplm_zero($j_S1) ) * real( 1 + -2 * mod( ( ms_min + $I_L9027_36 ), 2 ), 8 )
 9041.             uplm_zero(1 + $j_S1) = 2.38732414637843e-1
 9042.             if ( ( -2 + 2 * ms_min + 2 * $I_L9027_36 ) >= 0 ) then
 9043.                $SC_uplm_zero_I1 = 2.38732414637843e-1
 9042.                $I_L9042_32 = 0
 9042. !dir$ ivdep
 9042.                do
 9043.                   $SC_uplm_zero_I1 = ( $SC_uplm_zero_I1 * 1.0/( real( 2 + 2 * $I_L9042_32, 8 ) ) * real( 5 + 2 * $I_L9042_32, 8 ) )
 9044.                   $I_L9042_32 = 1 + $I_L9042_32
 9042.                   if ( $I_L9042_32 >= ( 2 * ms_min + 2 * $I_L9027_36 ) / 2 ) exit
 9042.                enddo
 9043.                uplm_zero(1 + $j_S1) = $SC_uplm_zero_I1
 9043.             endif
 9048.             $t_S5 = -1 + ls_local_trunc(ms_min + $I_L9027_36)
 9045.             uplm_zero(1 + $j_S1) = _sqrt( uplm_zero(1 + $j_S1) ) * real( 1 + -2 * mod( ( ms_min + $I_L9027_36 ), 2 ), 8 )
 9048.             if ( ( -2 + $t_S5 + -ms_min + -$I_L9027_36 ) >= 0 ) then
 9048.                $I_L9048_34 = 0
 9048.                do
 9052.                   uplm_zero(2 + $j_S1 + 2 * $I_L9048_34) = -( uplm_zero($j_S1 + 2 * $I_L9048_34) * _sqrt( real( 1 + -( ( ms_min + $I_L9027_36 ) * ( ms_min + $I_L9027_36 ) ) + -4 * ms_min * ms_min + -2 * ms_min * ms_min * ms_min + -4 * ms_min * ms_min * $I_L9048_34 + -3 * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) + 4 * $I_L9048_34 * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) + 2 * ( 2 * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) + ms_min * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) + $I_L9027_36 * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) ) + -8 * ms_min * $I_L9048_34 * $I_L9027_36 + -4 * $I_L9048_34 * $I_L9027_36 * $I_L9027_36 + -8 * ms_min * $I_L9027_36 + -4 * $I_L9027_36 * $I_L9027_36 + -2 * $I_L9027_36 * $I_L9027_36 * $I_L9027_36 + -6 * ms_min * $I_L9027_36 * $I_L9027_36 + -6 * ms_min * ms_min * $I_L9027_36, 8 ) * 1.0/( real( -4 * ms_min * ms_min + -2 * ms_min * ms_min * ms_min + -4 * ms_min * ms_min * $I_L9048_34 + -3 * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) + 4 * $I_L9048_34 * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) + 2 * ( 2 * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) + ms_min * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) + $I_L9027_36 * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) ) + -8 * ms_min * $I_L9048_34 * $I_L9027_36 + -4 * $I_L9048_34 * $I_L9027_36 * $I_L9027_36 + -8 * ms_min * $I_L9027_36 + -4 * $I_L9027_36 * $I_L9027_36 + -2 * $I_L9027_36 * $I_L9027_36 * $I_L9027_36 + -6 * ms_min * $I_L9027_36 * $I_L9027_36 + -6 * ms_min * ms_min * $I_L9027_36 + 3 * ( ms_min + $I_L9027_36 ) * ( ms_min + $I_L9027_36 ), 8 ) ) ) )
 9057.                   uplm_zero(3 + $j_S1 + 2 * $I_L9048_34) = -( uplm_zero(1 + $j_S1 + 2 * $I_L9048_34) * _sqrt( real( 19 + -4 * ms_min * ms_min + -2 * ms_min * ms_min * ms_min + 8 * ms_min + -4 * ms_min * ms_min * $I_L9048_34 + 16 * $I_L9048_34 + 4 * $I_L9048_34 * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) + 2 * ( 2 * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) + ms_min * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) + $I_L9027_36 * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) ) + -8 * ms_min * $I_L9048_34 * $I_L9027_36 + -4 * $I_L9048_34 * $I_L9027_36 * $I_L9027_36 + -8 * ms_min * $I_L9027_36 + -4 * $I_L9027_36 * $I_L9027_36 + -2 * $I_L9027_36 * $I_L9027_36 * $I_L9027_36 + -6 * ms_min * $I_L9027_36 * $I_L9027_36 + -6 * ms_min * ms_min * $I_L9027_36 + 7 * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) + 8 * $I_L9027_36 + -3 * ( ms_min + $I_L9027_36 ) * ( ms_min + $I_L9027_36 ), 8 ) * 1.0/( real( -( ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) ) + -4 * ms_min * ms_min + -2 * ms_min * ms_min * ms_min + -4 * ms_min * ms_min * $I_L9048_34 + 4 * $I_L9048_34 * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) + 2 * ( 2 * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) + ms_min * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) + $I_L9027_36 * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) * ( 2 + ms_min + $I_L9027_36 + 2 * $I_L9048_34 ) ) + -8 * ms_min * $I_L9048_34 * $I_L9027_36 + -4 * $I_L9048_34 * $I_L9027_36 * $I_L9027_36 + -8 * ms_min * $I_L9027_36 + -4 * $I_L9027_36 * $I_L9027_36 + -2 * $I_L9027_36 * $I_L9027_36 * $I_L9027_36 + -6 * ms_min * $I_L9027_36 * $I_L9027_36 + -6 * ms_min * ms_min * $I_L9027_36 + ( ms_min + $I_L9027_36 ) * ( ms_min + $I_L9027_36 ), 8 ) ) ) )
 9061.                   $I_L9048_34 = 1 + $I_L9048_34
 9048.                   if ( $I_L9048_34 >= ( $t_S5 + -ms_min + -$I_L9027_36 ) / 2 ) exit
 9048.                enddo
 9048.             endif
 9062.             $I_L9027_36 = 1 + $I_L9027_36
 9061.             if ( $I_L9027_36 >= 1 + ms_max + -ms_min ) exit
 9061.          enddo
 9061.       endif
 9067.       return
 9067.       end
 9067.       
 9099.       
 9099.       subroutine cg_kappa_ms( ms, ls_trunc, ls_brdf_trunc, cg_coeff, kappa, cgk, nd_max_order, nd_brdf_trunc )
 9099.       t$219 = ( 1 + ls_trunc + -ms )
 9131.       t$1794 = _zla( 0, ( 1 + ls_trunc + -ms ) )
 9099.       t$220 = nd_max_order / 2
 9133.       t$1795 = _zla( 0, t$220 )
 9099.       t$1796 = _zla( 0, t$220 )
 9099.       t$1797 = _zla( 0, t$220 ) * _zla( 0, t$220 )
 9099.       t$221 = ( 1 + nd_brdf_trunc / 2 )
 9099.       t$222 = nd_max_order
 9138.       t$1798 = _zla( 0, t$221 )
 9099.       t$1799 = _zla( 0, t$221 )
 9138.       t$1800 = _zla( 0, nd_max_order )
 9099.       t$1801 = _zla( 0, t$221 ) * _zla( 0, nd_max_order )
 9155.       if ( ls_trunc + -ms >= 0 ) then
 9156.          $SC_cg_coeff_I0 = cg_coeff(1)
 9157.          if ( -2 + ls_brdf_trunc + -ms + -mod( ms, 2 ) >= 0 ) then
 9155.             $I_L9155_48 = 0
 9155. !dir$ ivdep
 9155.             do
 9156.                cgk(1, 1 + 2 * $I_L9155_48) = $SC_cg_coeff_I0 * kappa(1, 1 + $I_L9155_48)
 9162.                $I_L9155_48 = 1 + $I_L9155_48
 9161.                if ( $I_L9155_48 >= ( 2 + ls_trunc + -ms ) / 2 ) exit
 9161.             enddo
 9155.             $I_L9155_60 = 0
 9155.             do
 9157.                $I_L9157_58 = 0
 9157.                do
 9155.                   $I_L9155_62 = 0
 9155. !dir$ shortloop16
 9155. !dir$ blocking_size( 2, 2 )
 9155.                   do
 9157.                      $I_L9157_50 = 0
 9157. !dir$ ivdep
 9157. !dir$ blocking_size( 256, 256 )
 9157.                      do
 9158.                         cgk(2 + $I_L9157_50 + 256 * $I_L9157_58, 1 + 4 * $I_L9155_60 + 2 * $I_L9155_62) = cg_coeff(2 + 2 * $I_L9157_50 + 512 * $I_L9157_58) * kappa(1 + $I_L9157_50 + 256 * $I_L9157_58, 1 + $I_L9155_62 + 2 * $I_L9155_60) + cg_coeff(3 + 2 * $I_L9157_50 + 512 * $I_L9157_58) * kappa(2 + $I_L9157_50 + 256 * $I_L9157_58, 1 + $I_L9155_62 + 2 * $I_L9155_60)
 9157.                         $I_L9157_50 = 1 + $I_L9157_50
 9157.                         if ( $I_L9157_50 >= min( ( ls_brdf_trunc + -ms + -mod( ms, 2 ) ) / 2, 256 + 256 * $I_L9157_58 ) + -256 * $I_L9157_58 ) exit
 9157.                      enddo
 9155.                      $I_L9155_62 = 1 + $I_L9155_62
 9155.                      if ( $I_L9155_62 >= min( ( 2 + ls_trunc + -ms ) / 2, 2 + 2 * $I_L9155_60 ) + -2 * $I_L9155_60 ) exit
 9155.                   enddo
 9157.                   $I_L9157_58 = 1 + $I_L9157_58
 9161.                   if ( $I_L9157_58 >= 1 + max( 0, -1 + _rsh( 255 + ( ls_brdf_trunc + -ms + -mod( ms, 2 ) ) / 2, 8 ) ) ) exit
 9161.                enddo
 9155.                $I_L9155_60 = 1 + $I_L9155_60
 9155.                if ( $I_L9155_60 >= 1 + max( 0, -1 + _rsh( 1 + ( 2 + ls_trunc + -ms ) / 2, 1 ) ) ) exit
 9155.             enddo
 9155.          else
 9155.             $I_L9155_46 = 0
 9155. !dir$ ivdep
 9155.             do
 9156.                cgk(1, 1 + 2 * $I_L9155_46) = $SC_cg_coeff_I0 * kappa(1, 1 + $I_L9155_46)
 9162.                $I_L9155_46 = 1 + $I_L9155_46
 9161.                if ( $I_L9155_46 >= ( 2 + ls_trunc + -ms ) / 2 ) exit
 9161.             enddo
 9161.          endif
 9161.       endif
 9168.       if ( ls_trunc + -ms > 0 ) then
 9169.          if ( ls_brdf_trunc + -ms + -mod( ms, 2 ) >= 0 ) then
 9168.             $I_L9168_53 = 0
 9168.             do
 9169.                $I_L9169_40 = 0
 9169. !dir$ ivdep
 9169.                do
 9170.                   cgk(1 + $I_L9169_40, 2 + 2 * $I_L9168_53) = 0.0
 9171.                   $I_L9169_40 = 1 + $I_L9169_40
 9169.                   if ( $I_L9169_40 >= ( 2 + ls_brdf_trunc + -ms + -mod( ms, 2 ) ) / 2 ) exit
 9169.                enddo
 9172.                $I_L9168_53 = 1 + $I_L9168_53
 9171.                if ( $I_L9168_53 >= ( 1 + ls_trunc + -ms ) / 2 ) exit
 9171.             enddo
 9171.          endif
 9171.       endif
 9174.       if ( ls_brdf_trunc + -ms + -mod( ms, 2 ) >= 0 ) then
 9174.          $I_L9174_42 = 0
 9174. !dir$ ivdep
 9174.          do
 9175.             cgk(1 + $I_L9174_42, 2 + 2 * $I_L9174_42) = 5.0e-1 * cg_coeff(1 + 2 * $I_L9174_42)
 9176.             $I_L9174_42 = 1 + $I_L9174_42
 9174.             if ( $I_L9174_42 >= ( 2 + ls_brdf_trunc + -ms + -mod( ms, 2 ) ) / 2 ) exit
 9174.          enddo
 9174.       endif
 9178.       if ( -2 + ls_brdf_trunc + -ms + -mod( ms, 2 ) >= 0 ) then
 9178.          $I_L9178_44 = 0
 9178. !dir$ ivdep
 9178.          do
 9179.             cgk(2 + $I_L9178_44, 2 + 2 * $I_L9178_44) = 5.0e-1 * cg_coeff(2 + 2 * $I_L9178_44)
 9180.             $I_L9178_44 = 1 + $I_L9178_44
 9178.             if ( $I_L9178_44 >= ( ls_brdf_trunc + -ms + -mod( ms, 2 ) ) / 2 ) exit
 9178.          enddo
 9178.       endif
 9185.       return
 9185.       end
 9185.       
 9208.       
 9208.       subroutine check_phf_term( ierr, l_aerosol, n_aerosol, i_aerosol_parametrization, n_aerosol_phf_term, n_phase_term_aerosol_prsc, l_cloud, n_condensed, i_condensed_param, i_phase_cmp, condensed_n_phf, n_phase_term_drop_prsc, n_phase_term_ice_prsc, n_order_phase, l_henyey_greenstein_pf, l_rescale, n_order_forward, l_solar_phf, n_order_phase_solar, nd_aerosol_species, nd_condensed )
 9208.       t$223 = nd_aerosol_species
 9277.       t$1802 = _zla( 0, nd_aerosol_species )
 9208.       t$224 = nd_condensed
 9294.       t$1803 = _zla( 0, nd_condensed )
 9324.       if ( l_henyey_greenstein_pf /= .false. ) then
 9325.          $n_order_required_S1 = 1
 9325.       else
 9327.          $n_order_required_S1 = cvmg( max( n_order_phase, n_order_forward ), n_order_phase, l_rescale )
 9334.          if ( l_solar_phf /= .false. ) then
 9335.             $n_order_required_S1 = max( n_order_phase, n_order_phase_solar )
 9336.             if ( l_rescale /= .false. ) then
 9336.                $n_order_required_S1 = 1 + max( n_order_phase, n_order_phase_solar )
 9336.             endif
 9336.          endif
 9336.       endif
 9341.       if ( l_aerosol /= .false. ) then
 9342.          $l_inadequate_S2 = .false.
 9343.          if ( n_aerosol > 0 ) then
 9343.             $I_L9343_8 = 0
 9343.             do
 9344.                if ( i_aerosol_parametrization(1 + $I_L9343_8) /= 1 ) then
 9344.                   if ( i_aerosol_parametrization(1 + $I_L9343_8) /= 2 ) then
 9352.                      if ( i_aerosol_parametrization(1 + $I_L9343_8) == 4 .orelse. i_aerosol_parametrization(1 + $I_L9343_8) == 5 ) then
 9356.                         $l_inadequate_S2 = $n_order_required_S1 > n_aerosol_phf_term(1 + $I_L9343_8)
 9356.                      else
 9358.                         if ( i_aerosol_parametrization(1 + $I_L9343_8) == 3 ) then
 9360.                            $l_inadequate_S2 = $n_order_required_S1 > n_phase_term_aerosol_prsc(1 + $I_L9343_8)
 9360.                         endif
 9360.                      endif
 9360.                   endif
 9360.                endif
 9365.                if ( $l_inadequate_S2 /= .false. ) then
 9343.                   j = ( 1 + $I_L9343_8 )
 9366.                   _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$226,  _substr(t$225,1,15), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: There is not enough information to define', 0x800600000000L ), _iotype( 'the phase function for aerosol ', 0x800600000000L ), _iotype( j, 0x2000200000000L ), _iotype( ' to the desired order.', 0x800600000000L ) ) )
 9370.                   ierr = 1
 9370.                   goto 20
 9370.                endif
 9373.                $I_L9343_8 = 1 + $I_L9343_8
 9373.                if ( $I_L9343_8 >= n_aerosol ) exit
 9373.             enddo
 9373.             goto 10
 9373.          else
 9373.             goto 10
 9373.          endif
 9373.       else
 9373.    10    continue
 9376.          if ( l_cloud /= .false. ) then
 9377.             $l_inadequate_S4 = .false.
 9378.             if ( n_condensed > 0 ) then
 9378.                $I_L9378_10 = 0
 9378.                do
 9379.                   if ( i_phase_cmp(1 + $I_L9378_10) == 1 ) then
 9380.                      if ( i_condensed_param(1 + $I_L9378_10) /= 1 ) then
 9380.                         if ( i_condensed_param(1 + $I_L9378_10) /= 2 ) then
 9380.                            if ( i_condensed_param(1 + $I_L9378_10) /= 5 ) then
 9388.                               if ( i_condensed_param(1 + $I_L9378_10) == 3 ) then
 9390.                                  $l_inadequate_S4 = $n_order_required_S1 > n_phase_term_drop_prsc
 9390.                               endif
 9390.                            endif
 9390.                         endif
 9390.                      endif
 9393.                      if ( $l_inadequate_S4 /= .false. ) then
 9378.                         j = ( 1 + $I_L9378_10 )
 9394.                         _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$228,  _substr(t$227,1,19), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: There is not enough information to define', 0x800600000000L ), _iotype( 'the phase function for condensed species ', 0x800600000000L ), _iotype( j, 0x2000200000000L ), _iotype( ' (water droplets) ', 0x800600000000L ), _iotype( 'to the desired order.', 0x800600000000L ) ) )
 9398.                         ierr = 1
 9398.                         goto 20
 9398.                      endif
 9431.                      $I_L9378_10 = 1 + $I_L9378_10
 9401.                   else if ( i_phase_cmp(1 + $I_L9378_10) == 2 ) then
 9401.                   else
 9401.                   endif
 9401.                   if ( $I_L9378_10 >= n_condensed ) exit
 9401.                enddo
 9401.             endif
 9401.          endif
 9401.       endif
 9401.    20 continue
 9437.       return
 9437.       end
 9437.       
 9457.       
 9457.       subroutine clear_supplement( ierr, n_profile, n_layer, i_solver_clear, trans_free, reflect_free, trans_0_free, source_coeff_free, isolir, flux_inc_direct, flux_inc_down, s_down_free, s_up_free, albedo_surface_diff, albedo_surface_dir, source_ground, l_scale_solar, adjust_solar_ke, flux_direct_clear, flux_total_clear, nd_profile, nd_layer, nd_source_coeff )
 9457.       t$231 = nd_profile
 9457.       t$232 = nd_layer
 9509.       t$1804 = _zla( 0, nd_profile )
 9457.       t$1805 = _zla( 0, nd_profile )
 9509.       t$1806 = _zla( 0, nd_layer )
 9457.       t$1807 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 9457.       t$233 = nd_source_coeff
 9457.       t$1808 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 9515.       t$1809 = _zla( 0, nd_source_coeff )
 9457.       t$1810 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff )
 9457.       t$1811 = 1 + nd_layer
 9537.       t$1812 = _zla( 0, 1 + nd_layer )
 9457.       t$1813 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
 9457.       t$234 = ( 2 + 2 * nd_layer )
 9539.       t$1814 = _zla( 0, ( 2 + 2 * nd_layer ) )
 9457.       t$1815 = _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
 9457.       t$1816 = 5 * _zla( 0, nd_profile )
 9457.       t$1817 = 5 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
 9548.       t$1820 = 40 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
 9550.       t$1821 = 8 * ( 7 + 40 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) ) ) / 8
 9550.       t$1823 = t$1821 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
 9552.       t$1824 = 8 * ( 7 + t$1821 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) ) ) / 8
 9552.       t$1826 = t$1824 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
 9457.       t$1818 = int( _alloc( t$1824 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) ) ), 8 )
 9548.       t$1819 = t$1818
 9550.       t$1822 = t$1821 + t$1818
 9552.       t$1825 = t$1824 + t$1818
 9563.       if ( isolir == 1 ) then
 9564.          t$796 = nd_profile
 9564.          t$3041 = _zla( 0, nd_profile )
 9564.          t$797 = nd_layer
 9564.          t$3042 = _zla( 0, nd_profile )
 9564.          t$3043 = _zla( 0, nd_layer )
 9564.          t$3044 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 9564.          t$798 = nd_source_coeff
 9564.          t$3045 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 9564.          t$3046 = _zla( 0, nd_source_coeff )
 9564.          t$3047 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff )
 9564.          t$3048 = 1 + nd_layer
 9564.          t$3049 = _zla( 0, 1 + nd_layer )
 9564.          t$3050 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
 9564.          if ( n_profile > 0 ) then
 9564.             $I_L9564_222 = 0
 9564. !dir$ ivdep
 9564.             do
 9564.                flux_direct_clear(1 + $I_L9564_222, 0) = flux_inc_direct(1 + $I_L9564_222)
 9564.                $I_L9564_222 = 1 + $I_L9564_222
 9564.                if ( $I_L9564_222 >= n_profile ) exit
 9564.             enddo
 9564.          endif
 9564.          if ( l_scale_solar /= .false. ) then
 9564.             if ( nd_layer > 0 ) then
 9564.                if ( nd_profile > 0 ) then
 9564.                   $I_L9564_255 = 0
 9564.                   if ( nd_layer >= 2 ) then
 9564.                      $I_L9564_273 = 0
 9564. !dir$ blocking_size( 1, 1 )
 9564.                      do
 9564.                         $I_L9564_226 = 0
 9564. !dir$ ivdep
 9564. !dir$ blocking_size( 256, 256 )
 9564.                         do
 9564.                            $flux_direct_clear_WR0_R0 = flux_direct_clear(1 + $I_L9564_226, 2 * $I_L9564_273) * adjust_solar_ke(1 + $I_L9564_226, 1 + 2 * $I_L9564_273) * trans_0_free(1 + $I_L9564_226, 1 + 2 * $I_L9564_273)
 9564.                            flux_direct_clear(1 + $I_L9564_226, 1 + 2 * $I_L9564_273) = $flux_direct_clear_WR0_R0
 9564.                            s_up_free(1 + $I_L9564_226, 1 + 2 * $I_L9564_273) = flux_direct_clear(1 + $I_L9564_226, 2 * $I_L9564_273) * source_coeff_free(1 + $I_L9564_226, 1 + 2 * $I_L9564_273, 1)
 9564.                            s_down_free(1 + $I_L9564_226, 1 + 2 * $I_L9564_273) = $flux_direct_clear_WR0_R0 + flux_direct_clear(1 + $I_L9564_226, 2 * $I_L9564_273) * ( source_coeff_free(1 + $I_L9564_226, 1 + 2 * $I_L9564_273, 2) + -trans_0_free(1 + $I_L9564_226, 1 + 2 * $I_L9564_273) )
 9564.                            $flux_direct_clear_WR0_R0 = $flux_direct_clear_WR0_R0 * trans_0_free(1 + $I_L9564_226, 2 + 2 * $I_L9564_273) * adjust_solar_ke(1 + $I_L9564_226, 2 + 2 * $I_L9564_273)
 9564.                            flux_direct_clear(1 + $I_L9564_226, 2 + 2 * $I_L9564_273) = $flux_direct_clear_WR0_R0
 9564.                            s_up_free(1 + $I_L9564_226, 2 + 2 * $I_L9564_273) = flux_direct_clear(1 + $I_L9564_226, 1 + 2 * $I_L9564_273) * source_coeff_free(1 + $I_L9564_226, 2 + 2 * $I_L9564_273, 1)
 9564.                            s_down_free(1 + $I_L9564_226, 2 + 2 * $I_L9564_273) = $flux_direct_clear_WR0_R0 + flux_direct_clear(1 + $I_L9564_226, 1 + 2 * $I_L9564_273) * ( source_coeff_free(1 + $I_L9564_226, 2 + 2 * $I_L9564_273, 2) + -trans_0_free(1 + $I_L9564_226, 2 + 2 * $I_L9564_273) )
 9564.                            $I_L9564_226 = 1 + $I_L9564_226
 9564.                            if ( $I_L9564_226 >= nd_profile ) exit
 9564.                         enddo
 9564.                         $I_L9564_273 = 1 + $I_L9564_273
 9564.                         if ( $I_L9564_273 >= _rsh( nd_layer, 1 ) ) exit
 9564.                      enddo
 9564.                      $I_L9564_255 = and( 0xfffffffffffffffeUL, nd_layer )
 9564.                   endif
 9564.                   if ( $I_L9564_255 < nd_layer ) then
 9564.                      $I_L9564_226 = 0
 9564. !dir$ ivdep
 9564. !dir$ blocking_size( 256, 256 )
 9564.                      do
 9564.                         $flux_direct_clear_WR0_R0 = flux_direct_clear(1 + $I_L9564_226, $I_L9564_255) * trans_0_free(1 + $I_L9564_226, 1 + $I_L9564_255) * adjust_solar_ke(1 + $I_L9564_226, 1 + $I_L9564_255)
 9564.                         flux_direct_clear(1 + $I_L9564_226, 1 + $I_L9564_255) = $flux_direct_clear_WR0_R0
 9564.                         s_up_free(1 + $I_L9564_226, 1 + $I_L9564_255) = flux_direct_clear(1 + $I_L9564_226, $I_L9564_255) * source_coeff_free(1 + $I_L9564_226, 1 + $I_L9564_255, 1)
 9564.                         s_down_free(1 + $I_L9564_226, 1 + $I_L9564_255) = $flux_direct_clear_WR0_R0 + flux_direct_clear(1 + $I_L9564_226, $I_L9564_255) * ( source_coeff_free(1 + $I_L9564_226, 1 + $I_L9564_255, 2) + -trans_0_free(1 + $I_L9564_226, 1 + $I_L9564_255) )
 9564.                         $I_L9564_226 = 1 + $I_L9564_226
 9564.                         if ( $I_L9564_226 >= nd_profile ) exit
 9564.                      enddo
 9564.                   endif
 9564.                endif
 9564.             endif
 9564.          else if ( nd_layer > 0 ) then
 9564.             if ( nd_profile > 0 ) then
 9564.                $I_L9564_253 = 0
 9564.                if ( nd_layer >= 2 ) then
 9564.                   $I_L9564_275 = 0
 9564. !dir$ blocking_size( 1, 1 )
 9564.                   do
 9564.                      $I_L9564_224 = 0
 9564. !dir$ ivdep
 9564. !dir$ blocking_size( 256, 256 )
 9564.                      do
 9564.                         flux_direct_clear(1 + $I_L9564_224, 1 + 2 * $I_L9564_275) = trans_0_free(1 + $I_L9564_224, 1 + 2 * $I_L9564_275) * flux_direct_clear(1 + $I_L9564_224, 2 * $I_L9564_275)
 9564.                         s_up_free(1 + $I_L9564_224, 1 + 2 * $I_L9564_275) = flux_direct_clear(1 + $I_L9564_224, 2 * $I_L9564_275) * source_coeff_free(1 + $I_L9564_224, 1 + 2 * $I_L9564_275, 1)
 9564.                         s_down_free(1 + $I_L9564_224, 1 + 2 * $I_L9564_275) = flux_direct_clear(1 + $I_L9564_224, 2 * $I_L9564_275) * source_coeff_free(1 + $I_L9564_224, 1 + 2 * $I_L9564_275, 2)
 9564.                         flux_direct_clear(1 + $I_L9564_224, 2 + 2 * $I_L9564_275) = flux_direct_clear(1 + $I_L9564_224, 1 + 2 * $I_L9564_275) * trans_0_free(1 + $I_L9564_224, 2 + 2 * $I_L9564_275)
 9564.                         s_up_free(1 + $I_L9564_224, 2 + 2 * $I_L9564_275) = flux_direct_clear(1 + $I_L9564_224, 1 + 2 * $I_L9564_275) * source_coeff_free(1 + $I_L9564_224, 2 + 2 * $I_L9564_275, 1)
 9564.                         s_down_free(1 + $I_L9564_224, 2 + 2 * $I_L9564_275) = flux_direct_clear(1 + $I_L9564_224, 1 + 2 * $I_L9564_275) * source_coeff_free(1 + $I_L9564_224, 2 + 2 * $I_L9564_275, 2)
 9564.                         $I_L9564_224 = 1 + $I_L9564_224
 9564.                         if ( $I_L9564_224 >= nd_profile ) exit
 9564.                      enddo
 9564.                      $I_L9564_275 = 1 + $I_L9564_275
 9564.                      if ( $I_L9564_275 >= _rsh( nd_layer, 1 ) ) exit
 9564.                   enddo
 9564.                   $I_L9564_253 = and( 0xfffffffffffffffeUL, nd_layer )
 9564.                endif
 9564.                if ( $I_L9564_253 < nd_layer ) then
 9564.                   $I_L9564_224 = 0
 9564. !dir$ ivdep
 9564. !dir$ blocking_size( 256, 256 )
 9564.                   do
 9564.                      flux_direct_clear(1 + $I_L9564_224, 1 + $I_L9564_253) = flux_direct_clear(1 + $I_L9564_224, $I_L9564_253) * trans_0_free(1 + $I_L9564_224, 1 + $I_L9564_253)
 9564.                      s_up_free(1 + $I_L9564_224, 1 + $I_L9564_253) = flux_direct_clear(1 + $I_L9564_224, $I_L9564_253) * source_coeff_free(1 + $I_L9564_224, 1 + $I_L9564_253, 1)
 9564.                      s_down_free(1 + $I_L9564_224, 1 + $I_L9564_253) = flux_direct_clear(1 + $I_L9564_224, $I_L9564_253) * source_coeff_free(1 + $I_L9564_224, 1 + $I_L9564_253, 2)
 9564.                      $I_L9564_224 = 1 + $I_L9564_224
 9564.                      if ( $I_L9564_224 >= nd_profile ) exit
 9564.                   enddo
 9564.                endif
 9564.             endif
 9564.          endif
 9564.       endif
 9577.       if ( i_solver_clear == 1 ) then
 9580.          tm$1342 = loc( flux_direct_clear(1, n_layer) )
 9580.          flux_direct_ground = _copyin( flux_direct_clear(1, n_layer) )
 9580.          t$761 = nd_profile
 9580.          t$762 = nd_layer
 9580.          t$2955 = max( 0, nd_profile )
 9580.          t$2956 = max( 0, nd_profile )
 9580.          t$2957 = max( 0, nd_layer )
 9580.          t$2958 = max( 0, nd_profile ) * max( 0, nd_layer )
 9580.          t$763 = ( 2 + 2 * nd_layer )
 9580.          t$2959 = 5 * max( 0, nd_profile )
 9580.          t$2960 = max( 0, ( 2 + 2 * nd_layer ) )
 9580.          t$2961 = 5 * max( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
 9580.          t$2962 = max( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
 9580.          if ( n_profile > 0 ) then
 9580.             $I_L9580_228 = 0
 9580. !dir$ ivdep
 9580.             do
 9580.                a5(1 + $I_L9580_228, 4, 2) = 0.0
 9580.                a5(1 + $I_L9580_228, 3, 2) = 1.0
 9580.                a5(1 + $I_L9580_228, 2, 2) = 0.0
 9580.                a5(1 + $I_L9580_228, 1, 2) = 0.0
 9580.                b(1 + $I_L9580_228, 2) = flux_inc_down(1 + $I_L9580_228)
 9580.                $I_L9580_228 = 1 + $I_L9580_228
 9580.                if ( $I_L9580_228 >= n_profile ) exit
 9580.             enddo
 9580.          endif
 9580.          if ( n_layer > 0 ) then
 9580.             if ( n_profile > 0 ) then
 9580.                $I_L9580_261 = 0
 9580.                do
 9580.                   $I_L9580_240 = 0
 9580. !dir$ ivdep
 9580.                   do
 9580.                      a5(1 + $I_L9580_240, 5, 1 + 2 * $I_L9580_261) = 0.0
 9580.                      a5(1 + $I_L9580_240, 4, 1 + 2 * $I_L9580_261) = 0.0
 9580.                      a5(1 + $I_L9580_240, 3, 1 + 2 * $I_L9580_261) = -1.0
 9580.                      a5(1 + $I_L9580_240, 2, 1 + 2 * $I_L9580_261) = reflect_free(1 + $I_L9580_240, 1 + $I_L9580_261)
 9580.                      a5(1 + $I_L9580_240, 1, 1 + 2 * $I_L9580_261) = trans_free(1 + $I_L9580_240, 1 + $I_L9580_261)
 9580.                      b(1 + $I_L9580_240, 1 + 2 * $I_L9580_261) = -s_up_free(1 + $I_L9580_240, 1 + $I_L9580_261)
 9580.                      a5(1 + $I_L9580_240, 5, 4 + 2 * $I_L9580_261) = trans_free(1 + $I_L9580_240, 1 + $I_L9580_261)
 9580.                      a5(1 + $I_L9580_240, 4, 4 + 2 * $I_L9580_261) = reflect_free(1 + $I_L9580_240, 1 + $I_L9580_261)
 9580.                      a5(1 + $I_L9580_240, 3, 4 + 2 * $I_L9580_261) = -1.0
 9580.                      a5(1 + $I_L9580_240, 2, 4 + 2 * $I_L9580_261) = 0.0
 9580.                      a5(1 + $I_L9580_240, 1, 4 + 2 * $I_L9580_261) = 0.0
 9580.                      b(1 + $I_L9580_240, 4 + 2 * $I_L9580_261) = -s_down_free(1 + $I_L9580_240, 1 + $I_L9580_261)
 9580.                      $I_L9580_240 = 1 + $I_L9580_240
 9580.                      if ( $I_L9580_240 >= n_profile ) exit
 9580.                   enddo
 9580.                   $I_L9580_261 = 1 + $I_L9580_261
 9580.                   if ( $I_L9580_261 >= n_layer ) exit
 9580.                enddo
 9580.             endif
 9580.          endif
 9580.          if ( n_profile > 0 ) then
 9580.             $I_L9580_242 = 0
 9580. !dir$ ivdep
 9580.             do
 9580.                a5(1 + $I_L9580_242, 5, 1 + 2 * n_layer) = 0.0
 9580.                a5(1 + $I_L9580_242, 4, 1 + 2 * n_layer) = 0.0
 9580.                a5(1 + $I_L9580_242, 3, 1 + 2 * n_layer) = 1.0
 9580.                a5(1 + $I_L9580_242, 2, 1 + 2 * n_layer) = -albedo_surface_diff(1 + $I_L9580_242)
 9580.                b(1 + $I_L9580_242, 1 + 2 * n_layer) = source_ground(1 + $I_L9580_242) * ( 1.0 + -albedo_surface_diff(1 + $I_L9580_242) ) + flux_direct_ground(1 + $I_L9580_242) * ( albedo_surface_dir(1 + $I_L9580_242) + -albedo_surface_diff(1 + $I_L9580_242) )
 9580.                $I_L9580_242 = 1 + $I_L9580_242
 9580.                if ( $I_L9580_242 >= n_profile ) exit
 9580.             enddo
 9580.          endif
 9580.          flux_direct_clear(1, n_layer) = _copyout( flux_direct_ground )
 9591.          tm$1353 = loc( work_1(1, 1) )
 9591.          rho = _copyin( work_1(1, 1) )
 9591.          t$140 = nd_profile
 9591.          t$141 = 5
 9591.          t$142 = ( 2 + 2 * nd_layer )
 9591.          t$1339 = max( 0, nd_profile )
 9591.          t$1340 = max( 0, nd_profile )
 9591.          t$1341 = 5
 9591.          t$1342 = 5 * max( 0, nd_profile )
 9591.          t$1343 = max( 0, ( 2 + 2 * nd_layer ) )
 9591.          t$1344 = 5 * max( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
 9591.          t$1345 = max( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
 9591.          if ( -2 * n_layer <= 0 ) then
 9591.             if ( n_profile > 0 ) then
 9591.                $I_L9591_271 = 0
 9591.                do
 9591.                   $I_L9591_269 = 0
 9591.                   do
 9591.                      j = ( 1 + $I_L9591_269 )
 9591.                      $I_L9591_244 = 0
 9591. !dir$ ivdep
 9591.                      do
 9591.                         $rho_WR0_R1 = ( a5(1 + $I_L9591_244, 3 + -j, 2 + -j + -$I_L9591_271 + 2 * n_layer) * 1.0/a5(1 + $I_L9591_244, 3, 2 + -$I_L9591_271 + 2 * n_layer) )
 9591.                         rho(1 + $I_L9591_244) = $rho_WR0_R1
 9591.                         b(1 + $I_L9591_244, 1 + -$I_L9591_269 + -$I_L9591_271 + 2 * n_layer) = b(1 + $I_L9591_244, 2 + -j + -$I_L9591_271 + 2 * n_layer) + -( $rho_WR0_R1 * b(1 + $I_L9591_244, 2 + -$I_L9591_271 + 2 * n_layer) )
 9591.                         $I_L9591_244 = 1 + $I_L9591_244
 9591.                         if ( $I_L9591_244 >= n_profile ) exit
 9591.                      enddo
 9591.                      $I_L9591_267 = 0
 9591.                      do
 9591.                         $I_L9591_265 = 0
 9591. !dir$ blocking_size( 2, 2 )
 9591.                         do
 9591.                            $I_L9591_246 = 0
 9591. !dir$ ivdep
 9591. !dir$ blocking_size( 256, 256 )
 9591.                            do
 9591.                               a5(1 + $I_L9591_246 + 256 * $I_L9591_267, 3 + $I_L9591_265 + -$I_L9591_269, 1 + -$I_L9591_269 + -$I_L9591_271 + 2 * n_layer) = a5(1 + $I_L9591_246 + 256 * $I_L9591_267, 4 + $I_L9591_265 + -j, 2 + -j + -$I_L9591_271 + 2 * n_layer) + -( rho(1 + $I_L9591_246 + 256 * $I_L9591_267) * a5(1 + $I_L9591_246 + 256 * $I_L9591_267, 4 + $I_L9591_265, 2 + -$I_L9591_271 + 2 * n_layer) )
 9591.                               $I_L9591_246 = 1 + $I_L9591_246
 9591.                               if ( $I_L9591_246 >= min( n_profile, 256 + 256 * $I_L9591_267 ) + -256 * $I_L9591_267 ) exit
 9591.                            enddo
 9591.                            $I_L9591_265 = 1 + $I_L9591_265
 9591.                            if ( $I_L9591_265 >= ( min( 2, ( 1 + -$I_L9591_271 + 2 * n_layer ) ) ) ) exit
 9591.                         enddo
 9591.                         $I_L9591_267 = 1 + $I_L9591_267
 9591.                         if ( $I_L9591_267 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
 9591.                      enddo
 9591.                      $I_L9591_269 = 1 + $I_L9591_269
 9591.                      if ( $I_L9591_269 >= ( min( 2, ( 1 + -$I_L9591_271 + 2 * n_layer ) ) ) ) exit
 9591.                   enddo
 9591.                   $I_L9591_271 = 1 + $I_L9591_271
 9591.                   if ( $I_L9591_271 >= 1 + 2 * n_layer ) exit
 9591.                enddo
 9591.             endif
 9591.          endif
 9591.          if ( n_profile > 0 ) then
 9591.             $I_L9591_249 = 0
 9591. !dir$ ivdep
 9591.             do
 9591.                $flux_total_clear_WR0_R2 = ( b(1 + $I_L9591_249, 1) * 1.0/a5(1 + $I_L9591_249, 3, 1) )
 9591.                flux_total_clear(1 + $I_L9591_249, 1) = $flux_total_clear_WR0_R2
 9591.                flux_total_clear(1 + $I_L9591_249, 2) = ( 1.0/a5(1 + $I_L9591_249, 3, 2) * ( b(1 + $I_L9591_249, 2) + -( $flux_total_clear_WR0_R2 * a5(1 + $I_L9591_249, 4, 2) ) ) )
 9591.                $I_L9591_249 = 1 + $I_L9591_249
 9591.                if ( $I_L9591_249 >= n_profile ) exit
 9591.             enddo
 9591.          endif
 9591.          if ( 2 * n_layer > 0 ) then
 9591.             if ( n_profile > 0 ) then
 9591.                $I_L9591_263 = 0
 9591. !dir$ blocking_size( 1, 1 )
 9591.                do
 9591.                   $I_L9591_251 = 0
 9591. !dir$ ivdep
 9591. !dir$ blocking_size( 256, 256 )
 9591.                   do
 9591.                      flux_total_clear(1 + $I_L9591_251, 3 + $I_L9591_263) = ( 1.0/a5(1 + $I_L9591_251, 3, 3 + $I_L9591_263) * ( b(1 + $I_L9591_251, 3 + $I_L9591_263) + -( flux_total_clear(1 + $I_L9591_251, 1 + $I_L9591_263) * a5(1 + $I_L9591_251, 5, 3 + $I_L9591_263) ) + -( flux_total_clear(1 + $I_L9591_251, 2 + $I_L9591_263) * a5(1 + $I_L9591_251, 4, 3 + $I_L9591_263) ) ) )
 9591.                      $I_L9591_251 = 1 + $I_L9591_251
 9591.                      if ( $I_L9591_251 >= n_profile ) exit
 9591.                   enddo
 9591.                   $I_L9591_263 = 1 + $I_L9591_263
 9591.                   if ( $I_L9591_263 >= ( 2 * n_layer ) ) exit
 9591.                enddo
 9591.             endif
 9591.          endif
 9591.          work_1(1, 1) = _copyout( rho )
 9591.          goto 10
 9599.       else if ( i_solver_clear == 13 ) then
 9602.          tm$1371 = loc( flux_direct_clear(1, n_layer) )
 9602.          flux_direct_ground = _copyin( flux_direct_clear(1, n_layer) )
 9602.          t$898 = nd_profile
 9602.          t$899 = nd_layer
 9602.          t$3578 = max( 0, nd_profile )
 9602.          t$3579 = max( 0, nd_profile )
 9602.          t$3580 = max( 0, nd_layer )
 9602.          t$3581 = max( 0, nd_profile ) * max( 0, nd_layer )
 9602.          t$900 = ( 2 + 2 * nd_layer )
 9602.          t$3582 = max( 0, ( 2 + 2 * nd_layer ) )
 9602.          t$3583 = max( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
 9602.          t$901 = ( 1 + nd_layer )
 9602.          t$3584 = max( 0, ( 1 + nd_layer ) )
 9602.          t$3585 = max( 0, nd_profile ) * max( 0, ( 1 + nd_layer ) )
 9602.          t$3588 = 8 * max( 0, nd_profile ) * max( 0, ( 1 + nd_layer ) )
 9602.          t$3589 = 8 * ( 7 + 8 * max( 0, nd_profile ) * max( 0, ( 1 + nd_layer ) ) ) / 8
 9602.          t$3591 = t$3589 + 8 * max( 0, nd_profile ) * max( 0, nd_layer )
 9602.          t$3592 = 8 * ( 7 + t$3589 + 8 * max( 0, nd_profile ) * max( 0, nd_layer ) ) / 8
 9602.          t$3594 = t$3592 + 8 * max( 0, nd_profile ) * max( 0, nd_layer )
 9602.          t$3595 = 8 * ( 7 + t$3592 + 8 * max( 0, nd_profile ) * max( 0, nd_layer ) ) / 8
 9602.          t$3597 = t$3595 + 8 * max( 0, nd_profile ) * max( 0, nd_layer )
 9602.          t$3598 = 8 * ( 7 + t$3595 + 8 * max( 0, nd_profile ) * max( 0, nd_layer ) ) / 8
 9602.          t$3600 = t$3598 + 8 * max( 0, nd_profile ) * max( 0, ( 1 + nd_layer ) )
 9602.          t$3586 = int( _alloc( t$3598 + 8 * max( 0, nd_profile ) * max( 0, ( 1 + nd_layer ) ) ), 8 )
 9602.          t$3587 = t$3586
 9602.          t$3590 = t$3589 + t$3586
 9602.          t$3593 = t$3592 + t$3586
 9602.          t$3596 = t$3595 + t$3586
 9602.          t$3599 = t$3598 + t$3586
 9602.          if ( isolir == 1 ) then
 9602.             if ( n_profile > 0 ) then
 9602.                $I_L9602_230 = 0
 9602. !dir$ ivdep
 9602.                do
 9602.                   alpha(1 + $I_L9602_230, 1 + n_layer) = albedo_surface_diff(1 + $I_L9602_230)
 9602.                   s_up_prime(1 + $I_L9602_230, 1 + n_layer) = flux_direct_ground(1 + $I_L9602_230) * ( albedo_surface_dir(1 + $I_L9602_230) + -albedo_surface_diff(1 + $I_L9602_230) )
 9602.                   $I_L9602_230 = 1 + $I_L9602_230
 9602.                   if ( $I_L9602_230 >= n_profile ) exit
 9602.                enddo
 9602.             endif
 9602.          else if ( isolir == 2 ) then
 9602.             if ( n_profile > 0 ) then
 9602.                $I_L9602_232 = 0
 9602. !dir$ ivdep
 9602.                do
 9602.                   alpha(1 + $I_L9602_232, 1 + n_layer) = albedo_surface_diff(1 + $I_L9602_232)
 9602.                   s_up_prime(1 + $I_L9602_232, 1 + n_layer) = source_ground(1 + $I_L9602_232) * ( 1.0 + -albedo_surface_diff(1 + $I_L9602_232) )
 9602.                   $I_L9602_232 = 1 + $I_L9602_232
 9602.                   if ( $I_L9602_232 >= n_profile ) exit
 9602.                enddo
 9602.             endif
 9602.          endif
 9602.          if ( n_layer > 0 ) then
 9602.             if ( n_profile > 0 ) then
 9602.                $I_L9602_257 = 0
 9602.                if ( n_layer >= 2 ) then
 9602.                   $I_L9602_277 = 0
 9602. !dir$ blocking_size( 1, 1 )
 9602.                   do
 9602.                      $I_L9602_234 = 0
 9602. !dir$ ivdep
 9602. !dir$ blocking_size( 256, 256 )
 9602.                      do
 9602.                         $beta_WR0_R3 = 1.0/( 1.0 + -( alpha(1 + $I_L9602_234, 1 + n_layer + -2 * $I_L9602_277) * reflect_free(1 + $I_L9602_234, n_layer + -2 * $I_L9602_277) ) )
 9602.                         beta(1 + $I_L9602_234, n_layer + -2 * $I_L9602_277) = $beta_WR0_R3
 9602.                         $gamma_WR0_R4 = alpha(1 + $I_L9602_234, 1 + n_layer + -2 * $I_L9602_277) * trans_free(1 + $I_L9602_234, n_layer + -2 * $I_L9602_277)
 9602.                         gamma(1 + $I_L9602_234, n_layer + -2 * $I_L9602_277) = $gamma_WR0_R4
 9602.                         $h_WR0_R5 = s_up_prime(1 + $I_L9602_234, 1 + n_layer + -2 * $I_L9602_277) + alpha(1 + $I_L9602_234, 1 + n_layer + -2 * $I_L9602_277) * s_down_free(1 + $I_L9602_234, n_layer + -2 * $I_L9602_277)
 9602.                         h(1 + $I_L9602_234, n_layer + -2 * $I_L9602_277) = $h_WR0_R5
 9602.                         alpha(1 + $I_L9602_234, n_layer + -2 * $I_L9602_277) = reflect_free(1 + $I_L9602_234, n_layer + -2 * $I_L9602_277) + $beta_WR0_R3 * $gamma_WR0_R4 * trans_free(1 + $I_L9602_234, n_layer + -2 * $I_L9602_277)
 9602.                         s_up_prime(1 + $I_L9602_234, n_layer + -2 * $I_L9602_277) = s_up_free(1 + $I_L9602_234, n_layer + -2 * $I_L9602_277) + $beta_WR0_R3 * $h_WR0_R5 * trans_free(1 + $I_L9602_234, n_layer + -2 * $I_L9602_277)
 9602.                         $beta_WR0_R3 = 1.0/( 1.0 + -( alpha(1 + $I_L9602_234, n_layer + -2 * $I_L9602_277) * reflect_free(1 + $I_L9602_234, -1 + n_layer + -2 * $I_L9602_277) ) )
 9602.                         beta(1 + $I_L9602_234, -1 + n_layer + -2 * $I_L9602_277) = $beta_WR0_R3
 9602.                         $gamma_WR0_R4 = alpha(1 + $I_L9602_234, n_layer + -2 * $I_L9602_277) * trans_free(1 + $I_L9602_234, -1 + n_layer + -2 * $I_L9602_277)
 9602.                         gamma(1 + $I_L9602_234, -1 + n_layer + -2 * $I_L9602_277) = $gamma_WR0_R4
 9602.                         $h_WR0_R5 = s_up_prime(1 + $I_L9602_234, n_layer + -2 * $I_L9602_277) + alpha(1 + $I_L9602_234, n_layer + -2 * $I_L9602_277) * s_down_free(1 + $I_L9602_234, -1 + n_layer + -2 * $I_L9602_277)
 9602.                         h(1 + $I_L9602_234, -1 + n_layer + -2 * $I_L9602_277) = $h_WR0_R5
 9602.                         alpha(1 + $I_L9602_234, -1 + n_layer + -2 * $I_L9602_277) = reflect_free(1 + $I_L9602_234, -1 + n_layer + -2 * $I_L9602_277) + $beta_WR0_R3 * $gamma_WR0_R4 * trans_free(1 + $I_L9602_234, -1 + n_layer + -2 * $I_L9602_277)
 9602.                         s_up_prime(1 + $I_L9602_234, -1 + n_layer + -2 * $I_L9602_277) = s_up_free(1 + $I_L9602_234, -1 + n_layer + -2 * $I_L9602_277) + $beta_WR0_R3 * $h_WR0_R5 * trans_free(1 + $I_L9602_234, -1 + n_layer + -2 * $I_L9602_277)
 9602.                         $I_L9602_234 = 1 + $I_L9602_234
 9602.                         if ( $I_L9602_234 >= n_profile ) exit
 9602.                      enddo
 9602.                      $I_L9602_277 = 1 + $I_L9602_277
 9602.                      if ( $I_L9602_277 >= _rsh( n_layer, 1 ) ) exit
 9602.                   enddo
 9602.                   $I_L9602_257 = and( 0xfffffffffffffffeUL, n_layer )
 9602.                endif
 9602.                if ( $I_L9602_257 < n_layer ) then
 9602.                   $I_L9602_234 = 0
 9602. !dir$ ivdep
 9602. !dir$ blocking_size( 256, 256 )
 9602.                   do
 9602.                      $beta_WR0_R3 = 1.0/( 1.0 + -( reflect_free(1 + $I_L9602_234, n_layer + -$I_L9602_257) * alpha(1 + $I_L9602_234, 1 + n_layer + -$I_L9602_257) ) )
 9602.                      beta(1 + $I_L9602_234, n_layer + -$I_L9602_257) = $beta_WR0_R3
 9602.                      $gamma_WR0_R4 = alpha(1 + $I_L9602_234, 1 + n_layer + -$I_L9602_257) * trans_free(1 + $I_L9602_234, n_layer + -$I_L9602_257)
 9602.                      gamma(1 + $I_L9602_234, n_layer + -$I_L9602_257) = $gamma_WR0_R4
 9602.                      $h_WR0_R5 = s_up_prime(1 + $I_L9602_234, 1 + n_layer + -$I_L9602_257) + alpha(1 + $I_L9602_234, 1 + n_layer + -$I_L9602_257) * s_down_free(1 + $I_L9602_234, n_layer + -$I_L9602_257)
 9602.                      h(1 + $I_L9602_234, n_layer + -$I_L9602_257) = $h_WR0_R5
 9602.                      alpha(1 + $I_L9602_234, n_layer + -$I_L9602_257) = reflect_free(1 + $I_L9602_234, n_layer + -$I_L9602_257) + $beta_WR0_R3 * $gamma_WR0_R4 * trans_free(1 + $I_L9602_234, n_layer + -$I_L9602_257)
 9602.                      s_up_prime(1 + $I_L9602_234, n_layer + -$I_L9602_257) = s_up_free(1 + $I_L9602_234, n_layer + -$I_L9602_257) + $beta_WR0_R3 * $h_WR0_R5 * trans_free(1 + $I_L9602_234, n_layer + -$I_L9602_257)
 9602.                      $I_L9602_234 = 1 + $I_L9602_234
 9602.                      if ( $I_L9602_234 >= n_profile ) exit
 9602.                   enddo
 9602.                endif
 9602.             endif
 9602.          endif
 9602.          if ( n_profile > 0 ) then
 9602.             $I_L9602_236 = 0
 9602. !dir$ ivdep
 9602.             do
 9602.                $flux_total_clear_WR0_R6 = flux_inc_down(1 + $I_L9602_236)
 9602.                flux_total_clear(1 + $I_L9602_236, 2) = $flux_total_clear_WR0_R6
 9602.                flux_total_clear(1 + $I_L9602_236, 1) = s_up_prime(1 + $I_L9602_236, 1) + $flux_total_clear_WR0_R6 * alpha(1 + $I_L9602_236, 1)
 9602.                $I_L9602_236 = 1 + $I_L9602_236
 9602.                if ( $I_L9602_236 >= n_profile ) exit
 9602.             enddo
 9602.          endif
 9602.          if ( n_layer > 0 ) then
 9602.             if ( n_profile > 0 ) then
 9602.                $I_L9602_259 = 0
 9602.                if ( n_layer >= 2 ) then
 9602.                   $I_L9602_279 = 0
 9602.                   do
 9602.                      $I_L9602_238 = 0
 9602. !dir$ ivdep
 9602.                      do
 9602.                         $flux_total_clear_WR0_R7 = beta(1 + $I_L9602_238, 1 + 2 * $I_L9602_279) * ( h(1 + $I_L9602_238, 1 + 2 * $I_L9602_279) + gamma(1 + $I_L9602_238, 1 + 2 * $I_L9602_279) * flux_total_clear(1 + $I_L9602_238, 2 + 4 * $I_L9602_279) )
 9602.                         flux_total_clear(1 + $I_L9602_238, 3 + 4 * $I_L9602_279) = $flux_total_clear_WR0_R7
 9602.                         flux_total_clear(1 + $I_L9602_238, 4 + 4 * $I_L9602_279) = s_down_free(1 + $I_L9602_238, 1 + 2 * $I_L9602_279) + $flux_total_clear_WR0_R7 * reflect_free(1 + $I_L9602_238, 1 + 2 * $I_L9602_279) + flux_total_clear(1 + $I_L9602_238, 2 + 4 * $I_L9602_279) * trans_free(1 + $I_L9602_238, 1 + 2 * $I_L9602_279)
 9602.                         $flux_total_clear_WR0_R7 = beta(1 + $I_L9602_238, 2 + 2 * $I_L9602_279) * ( h(1 + $I_L9602_238, 2 + 2 * $I_L9602_279) + flux_total_clear(1 + $I_L9602_238, 4 + 4 * $I_L9602_279) * gamma(1 + $I_L9602_238, 2 + 2 * $I_L9602_279) )
 9602.                         flux_total_clear(1 + $I_L9602_238, 5 + 4 * $I_L9602_279) = $flux_total_clear_WR0_R7
 9602.                         flux_total_clear(1 + $I_L9602_238, 6 + 4 * $I_L9602_279) = s_down_free(1 + $I_L9602_238, 2 + 2 * $I_L9602_279) + flux_total_clear(1 + $I_L9602_238, 4 + 4 * $I_L9602_279) * trans_free(1 + $I_L9602_238, 2 + 2 * $I_L9602_279) + $flux_total_clear_WR0_R7 * reflect_free(1 + $I_L9602_238, 2 + 2 * $I_L9602_279)
 9602.                         $I_L9602_238 = 1 + $I_L9602_238
 9602.                         if ( $I_L9602_238 >= n_profile ) exit
 9602.                      enddo
 9602.                      $I_L9602_279 = 1 + $I_L9602_279
 9602.                      if ( $I_L9602_279 >= _rsh( n_layer, 1 ) ) exit
 9602.                   enddo
 9602.                   $I_L9602_259 = and( 0xfffffffffffffffeUL, n_layer )
 9602.                endif
 9602.                if ( $I_L9602_259 < n_layer ) then
 9602.                   $I_L9602_238 = 0
 9602. !dir$ ivdep
 9602.                   do
 9602.                      $flux_total_clear_WR0_R7 = beta(1 + $I_L9602_238, 1 + $I_L9602_259) * ( h(1 + $I_L9602_238, 1 + $I_L9602_259) + flux_total_clear(1 + $I_L9602_238, 2 + 2 * $I_L9602_259) * gamma(1 + $I_L9602_238, 1 + $I_L9602_259) )
 9602.                      flux_total_clear(1 + $I_L9602_238, 3 + 2 * $I_L9602_259) = $flux_total_clear_WR0_R7
 9602.                      flux_total_clear(1 + $I_L9602_238, 4 + 2 * $I_L9602_259) = s_down_free(1 + $I_L9602_238, 1 + $I_L9602_259) + flux_total_clear(1 + $I_L9602_238, 2 + 2 * $I_L9602_259) * trans_free(1 + $I_L9602_238, 1 + $I_L9602_259) + $flux_total_clear_WR0_R7 * reflect_free(1 + $I_L9602_238, 1 + $I_L9602_259)
 9602.                      $I_L9602_238 = 1 + $I_L9602_238
 9602.                      if ( $I_L9602_238 >= n_profile ) exit
 9602.                   enddo
 9602.                endif
 9602.             endif
 9602.          endif
 9602.          _free( t$3586 )
 9602.          flux_direct_clear(1, n_layer) = _copyout( flux_direct_ground )
 9602.    10    continue
 9457.          _free( t$1818 )
 9457.       else
 9614.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$236,  _substr(t$235,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: The solver specified for clear-sky fluxes is not valid.', 0x800600000000L ) ) )
 9617.          ierr = 1
 9457.          _free( t$1818 )
 9457.       endif
 9625.       return
 9625.       end
 9625.       
 9645.       
 9645.       subroutine cloud_maxcs_split( ierr, n_profile, n_layer, n_cloud_top, w_cloud, frac_cloud, n_cloud_type, n_column_cld, n_column_slv, list_column_slv, i_clm_lyr_chn, i_clm_cld_typ, area_column, nd_profile, nd_layer, id_ct, nd_column, nd_cloud_type )
 9645.       t$237 = nd_profile
 9645.       t$238 = id_ct
 9645.       t$239 = nd_layer
 9693.       t$1827 = _zla( 0, nd_profile )
 9645.       t$1828 = _zla( 0, nd_profile )
 9645.       t$1829 = 1 + nd_layer + -id_ct
 9693.       t$1830 = _zla( 0, 1 + nd_layer + -id_ct )
 9645.       t$1831 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
 9645.       t$240 = nd_cloud_type
 9645.       t$1832 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
 9695.       t$1833 = _zla( 0, nd_cloud_type )
 9645.       t$1834 = _zla( 0, nd_profile ) * _zla( 0, nd_cloud_type ) * _zla( 0, 1 + nd_layer + -id_ct )
 9645.       t$241 = nd_column
 9704.       t$1835 = _zla( 0, nd_column )
 9645.       t$1836 = _zla( 0, nd_profile ) * _zla( 0, nd_column )
 9645.       t$242 = ( 1 + nd_layer + -id_ct )
 9742.       t$1837 = _zla( 0, ( 1 + nd_layer + -id_ct ) )
 9742.       t$1840 = 8 * _zla( 0, ( 1 + nd_layer + -id_ct ) )
 9734.       t$1842 = 12 * _zla( 0, ( 1 + nd_layer + -id_ct ) )
 9731.       t$1844 = 16 * _zla( 0, ( 1 + nd_layer + -id_ct ) )
 9744.       t$1845 = 8 * ( 7 + 16 * _zla( 0, ( 1 + nd_layer + -id_ct ) ) ) / 8
 9744.       t$1847 = t$1845 + 8 * _zla( 0, ( 1 + nd_layer + -id_ct ) )
 9645.       t$1838 = int( _alloc( t$1845 + 8 * _zla( 0, ( 1 + nd_layer + -id_ct ) ) ), 8 )
 9742.       t$1839 = t$1838
 9734.       t$1841 = t$1838 + 8 * _zla( 0, ( 1 + nd_layer + -id_ct ) )
 9731.       t$1843 = t$1838 + 12 * _zla( 0, ( 1 + nd_layer + -id_ct ) )
 9744.       t$1846 = t$1845 + t$1838
 9769.       if ( n_cloud_type == 2 ) then
 9774.          $ptr_cnv_S2 = 2
 9774.          goto 10
 9782.       else if ( n_cloud_type == 1 ) then
 9784.          $ptr_cnv_S2 = 0
 9784.    10    continue
 9798.          if ( n_profile > 0 ) then
 9798.             $I_L9798_66 = 0
 9798.             do
 9804.                if ( n_layer + -n_cloud_top >= 0 ) then
 9807.                   if ( n_cloud_type == 2 ) then
 9804.                      $I_L9804_52 = 0
 9804. !dir$ ivdep
 9804. !dir$ loop_info (automatic) cache_nt( frac_cloud, w_cloud )
 9804.                      do
 9810.                         cnv_right(1 + $I_L9804_52) = w_cloud(1 + $I_L9798_66, n_cloud_top + $I_L9804_52) * frac_cloud(1 + $I_L9798_66, n_cloud_top + $I_L9804_52, $ptr_cnv_S2)
 9816.                         strat_left(1 + $I_L9804_52) = 1.0 + -( w_cloud(1 + $I_L9798_66, n_cloud_top + $I_L9804_52) * frac_cloud(1 + $I_L9798_66, n_cloud_top + $I_L9804_52, 1) )
 9819.                         key_st(1 + $I_L9804_52) = ( 1 + $I_L9804_52 )
 9820.                         key_cnv(1 + $I_L9804_52) = ( 1 + $I_L9804_52 )
 9821.                         $I_L9804_52 = 1 + $I_L9804_52
 9814.                         if ( $I_L9804_52 >= 1 + n_layer + -n_cloud_top ) exit
 9814.                      enddo
 9814.                   else
 9804.                      $I_L9804_60 = 0
 9804. !dir$ ivdep
 9804. !dir$ loop_info (automatic) cache_nt( frac_cloud, w_cloud )
 9804.                      do
 9813.                         cnv_right(1 + $I_L9804_60) = 0.0
 9816.                         strat_left(1 + $I_L9804_60) = 1.0 + -( w_cloud(1 + $I_L9798_66, n_cloud_top + $I_L9804_60) * frac_cloud(1 + $I_L9798_66, n_cloud_top + $I_L9804_60, 1) )
 9819.                         key_st(1 + $I_L9804_60) = ( 1 + $I_L9804_60 )
 9820.                         key_cnv(1 + $I_L9804_60) = ( 1 + $I_L9804_60 )
 9821.                         $I_L9804_60 = 1 + $I_L9804_60
 9814.                         if ( $I_L9804_60 >= 1 + n_layer + -n_cloud_top ) exit
 9814.                      enddo
 9814.                   endif
 9814.                endif
 9824.                t$779 = ( 1 + n_layer + -n_cloud_top )
 9824.                t$2974 = max( 0, ( 1 + n_layer + -n_cloud_top ) )
 9824.                if ( n_layer + -n_cloud_top == 0 ) then
 9824.                   key_cnv(1) = 1
 9825.                   key_st(1) = 1
 9825.                else
 9824.                   $gap_S5 = 1 + n_layer + -n_cloud_top
 9824.                   if ( n_layer + -n_cloud_top > 0 ) then
 9824.                      do
 9824.                         $gap_S5 = $gap_S5 / 2
 9824.                         if ( n_layer + -n_cloud_top + -$gap_S5 >= 0 ) then
 9824.                            $I_L9824_62 = 0
 9824.                            do
 9824.                               if ( ( $I_L9824_62 /= 0 .and. xor( -$gap_S5, -$I_L9824_62 ) < 0 ) == .false. ) then
 9824.                                  $t_S9 = ( $gap_S5 + $I_L9824_62 ) / $gap_S5
 9824.                                  $I_L9824_54 = 0
 9824.                                  if ( mod( -$gap_S5, $gap_S5 ) == 0 ) then
 9824.                                     do
 9824.                                        if ( cnv_right(key_cnv(1 + $I_L9824_62 + -( $gap_S5 * $I_L9824_54 ))) > cnv_right(key_cnv(1 + $gap_S5 + $I_L9824_62 + -( $gap_S5 * $I_L9824_54 ))) ) then
 9824.                                           $pointer_temp_S8 = key_cnv(1 + $I_L9824_62 + -( $gap_S5 * $I_L9824_54 ))
 9824.                                           key_cnv(1 + $I_L9824_62 + -( $gap_S5 * $I_L9824_54 )) = key_cnv(1 + $gap_S5 + $I_L9824_62 + -( $gap_S5 * $I_L9824_54 ))
 9824.                                           key_cnv(1 + $gap_S5 + $I_L9824_62 + -( $gap_S5 * $I_L9824_54 )) = $pointer_temp_S8
 9824.                                        endif
 9824.                                        $I_L9824_54 = 1 + $I_L9824_54
 9824.                                        if ( $I_L9824_54 >= $t_S9 ) exit
 9824.                                     enddo
 9824.                                  else
 9824. !dir$ ivdep safevl = 4
 9824.                                     do
 9824.                                        if ( cnv_right(key_cnv(1 + $I_L9824_62 + -( $gap_S5 * $I_L9824_54 ))) > cnv_right(key_cnv(1 + $gap_S5 + $I_L9824_62 + -( $gap_S5 * $I_L9824_54 ))) ) then
 9824.                                           $pointer_temp_S8 = key_cnv(1 + $I_L9824_62 + -( $gap_S5 * $I_L9824_54 ))
 9824.                                           key_cnv(1 + $I_L9824_62 + -( $gap_S5 * $I_L9824_54 )) = key_cnv(1 + $gap_S5 + $I_L9824_62 + -( $gap_S5 * $I_L9824_54 ))
 9824.                                           key_cnv(1 + $gap_S5 + $I_L9824_62 + -( $gap_S5 * $I_L9824_54 )) = $pointer_temp_S8
 9824.                                        endif
 9824.                                        $I_L9824_54 = 1 + $I_L9824_54
 9824.                                        if ( $I_L9824_54 >= $t_S9 ) exit
 9824.                                     enddo
 9824.                                  endif
 9824.                               endif
 9824.                               $I_L9824_62 = 1 + $I_L9824_62
 9824.                               if ( $I_L9824_62 >= 1 + n_layer + -n_cloud_top + -$gap_S5 ) exit
 9824.                            enddo
 9824.                         endif
 9824.                         if ( $gap_S5 < 2 ) exit
 9824.                      enddo
 9824.                   endif
 9825.                   $gap_S10 = 1 + n_layer + -n_cloud_top
 9825.                   if ( n_layer + -n_cloud_top > 0 ) then
 9825.                      do
 9825.                         $gap_S10 = $gap_S10 / 2
 9825.                         if ( n_layer + -n_cloud_top + -$gap_S10 >= 0 ) then
 9825.                            $I_L9825_64 = 0
 9825.                            do
 9825.                               if ( ( $I_L9825_64 /= 0 .and. xor( -$gap_S10, -$I_L9825_64 ) < 0 ) == .false. ) then
 9825.                                  $t_S14 = ( $gap_S10 + $I_L9825_64 ) / $gap_S10
 9825.                                  $I_L9825_56 = 0
 9825.                                  if ( mod( -$gap_S10, $gap_S10 ) == 0 ) then
 9825.                                     do
 9825.                                        if ( strat_left(key_st(1 + $I_L9825_64 + -( $gap_S10 * $I_L9825_56 ))) > strat_left(key_st(1 + $gap_S10 + $I_L9825_64 + -( $gap_S10 * $I_L9825_56 ))) ) then
 9825.                                           $pointer_temp_S13 = key_st(1 + $I_L9825_64 + -( $gap_S10 * $I_L9825_56 ))
 9825.                                           key_st(1 + $I_L9825_64 + -( $gap_S10 * $I_L9825_56 )) = key_st(1 + $gap_S10 + $I_L9825_64 + -( $gap_S10 * $I_L9825_56 ))
 9825.                                           key_st(1 + $gap_S10 + $I_L9825_64 + -( $gap_S10 * $I_L9825_56 )) = $pointer_temp_S13
 9825.                                        endif
 9825.                                        $I_L9825_56 = 1 + $I_L9825_56
 9825.                                        if ( $I_L9825_56 >= $t_S14 ) exit
 9825.                                     enddo
 9825.                                  else
 9825. !dir$ ivdep safevl = 4
 9825.                                     do
 9825.                                        if ( strat_left(key_st(1 + $I_L9825_64 + -( $gap_S10 * $I_L9825_56 ))) > strat_left(key_st(1 + $gap_S10 + $I_L9825_64 + -( $gap_S10 * $I_L9825_56 ))) ) then
 9825.                                           $pointer_temp_S13 = key_st(1 + $I_L9825_64 + -( $gap_S10 * $I_L9825_56 ))
 9825.                                           key_st(1 + $I_L9825_64 + -( $gap_S10 * $I_L9825_56 )) = key_st(1 + $gap_S10 + $I_L9825_64 + -( $gap_S10 * $I_L9825_56 ))
 9825.                                           key_st(1 + $gap_S10 + $I_L9825_64 + -( $gap_S10 * $I_L9825_56 )) = $pointer_temp_S13
 9825.                                        endif
 9825.                                        $I_L9825_56 = 1 + $I_L9825_56
 9825.                                        if ( $I_L9825_56 >= $t_S14 ) exit
 9825.                                     enddo
 9825.                                  endif
 9825.                               endif
 9825.                               $I_L9825_64 = 1 + $I_L9825_64
 9825.                               if ( $I_L9825_64 >= 1 + n_layer + -n_cloud_top + -$gap_S10 ) exit
 9825.                            enddo
 9825.                         endif
 9825.                         if ( $gap_S10 < 2 ) exit
 9825.                      enddo
 9825.                   endif
 9825.                endif
 9825.                t$779 = ( 1 + n_layer + -n_cloud_top )
 9825.                t$2974 = max( 0, ( 1 + n_layer + -n_cloud_top ) )
 9830.                n_column_cld(1 + $I_L9798_66) = 0
 9831.                n_column_slv(1 + $I_L9798_66) = 0
 9834.                if ( n_layer + -n_cloud_top >= 0 ) then
 9834.                   $I_L9834_58 = 0
 9834.                   do
 9836.                      if ( cnv_right(1 + $I_L9834_58) <= 2.2204460492503131e-12 ) then
 9850.                         if ( strat_left(1 + $I_L9834_58) > 2.2204460492503131e-12 ) then
 9864.                            $I_L9834_58 = 1 + $I_L9834_58
 9851.                         else if ( n_column_cld(1 + $I_L9798_66) < nd_column ) then
 9851.                         else
 9851.                         endif
 9837.                      else if ( n_column_cld(1 + $I_L9798_66) < nd_column ) then
 9837.                      else
 9837.                      endif
 9837.                      if ( $I_L9834_58 >= 1 + n_layer + -n_cloud_top ) exit
 9837.                   enddo
 9868.                   $x_done_S20 = 0.0
 9871.                   $i_key_cnv_S17 = 1
 9872.                   $x_cnv_S16 = cnv_right(key_cnv(1))
 9873.                   if ( ( n_layer + -n_cloud_top > 0 .and. $x_cnv_S16 < 2.2204460492503131e-12 ) /= .false. ) then
 9864.                      do
 9874.                         $i_key_cnv_S17 = 1 + $i_key_cnv_S17
 9875.                         $x_cnv_S16 = cnv_right(key_cnv($i_key_cnv_S17))
 9875.                         if ( ( $i_key_cnv_S17 < 1 + n_layer + -n_cloud_top .and. $x_cnv_S16 < 2.2204460492503131e-12 ) == .false. ) exit
 9875.                      enddo
 9875.                   endif
 9877.                   $i_key_st_S19 = 1
 9878.                   $x_st_S18 = strat_left(key_st(1))
 9879.                   if ( ( n_layer + -n_cloud_top > 0 .and. $x_st_S18 < 2.2204460492503131e-12 ) /= .false. ) then
 9876.                      do
 9880.                         $i_key_st_S19 = 1 + $i_key_st_S19
 9881.                         $x_st_S18 = strat_left(key_st($i_key_st_S19))
 9881.                         if ( ( $i_key_st_S19 < 1 + n_layer + -n_cloud_top .and. $x_st_S18 < 2.2204460492503131e-12 ) == .false. ) exit
 9881.                      enddo
 9881.                   endif
 9881. !dir$ loop_info (automatic) cache_nt( list_column_slv )
 9881.                   do
 9887.                      if ( $x_cnv_S16 <= $x_st_S18 ) then
 9889.                         if ( n_column_cld(1 + $I_L9798_66) < nd_column ) then
 9890.                            n_column_cld(1 + $I_L9798_66) = 1 + n_column_cld(1 + $I_L9798_66)
 9898.                            i_clm_lyr_chn(1 + $I_L9798_66, n_column_cld(1 + $I_L9798_66)) = -1 + n_cloud_top + key_cnv($i_key_cnv_S17)
 9900.                            i_clm_cld_typ(1 + $I_L9798_66, n_column_cld(1 + $I_L9798_66)) = 0
 9901.                            $x_new_done_S21 = $x_cnv_S16
 9902.                            $i_key_cnv_S17 = 1 + $i_key_cnv_S17
 9903.                            if ( $i_key_cnv_S17 <= 1 + n_layer + -n_cloud_top ) then
 9904.                               $x_cnv_S16 = cnv_right(key_cnv($i_key_cnv_S17))
 9904.                            else
 9908.                               $x_cnv_S16 = 1.0
 9908.                            endif
 9937.                            if ( $x_st_S18 > 9.9999999999777955e-1 ) then
 9937.                               if ( $x_cnv_S16 > 9.9999999999777955e-1 ) then
 9939.                                  $x_new_done_S21 = 1.0
 9939.                               endif
 9939.                            endif
 9942.                            $dx_col_S22 = $x_new_done_S21 + -$x_done_S20
 9943.                            if ( ( $x_new_done_S21 + -$x_done_S20 ) > 2.2204460492503131e-12 ) then
 9944.                               n_column_slv(1 + $I_L9798_66) = 1 + n_column_slv(1 + $I_L9798_66)
 9945.                               list_column_slv(1 + $I_L9798_66, n_column_slv(1 + $I_L9798_66)) = n_column_cld(1 + $I_L9798_66)
 9946.                               area_column(1 + $I_L9798_66, n_column_cld(1 + $I_L9798_66)) = $dx_col_S22
 9947.                               $x_done_S20 = $x_new_done_S21
 9947.                            else
 9949.                               area_column(1 + $I_L9798_66, n_column_cld(1 + $I_L9798_66)) = 0.0
 9949.                            endif
 9950.                         else
 9950.                         endif
 9912.                      else if ( n_column_cld(1 + $I_L9798_66) < nd_column ) then
 9912.                      else
 9912.                      endif
 9912.                      if ( $x_done_S20 >= 9.9999999999777955e-1 ) exit
 9912.                   enddo
 9954.                   $I_L9798_66 = 1 + $I_L9798_66
 9952.                else
 9952.                endif
 9952.                if ( $I_L9798_66 >= n_profile ) exit
 9952.             enddo
 9952.             goto 20
 9952.          else
 9952.    20       continue
 9645.             _free( t$1838 )
 9645.          endif
 9645.       else
 9787.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$246,  _substr(t$245,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: There are too many types of cloud for the type of overlap.', 0x800600000000L ) ) )
 9790.          ierr = 1
 9645.          _free( t$1838 )
 9645.       endif
 9959.       return
 9959.       end
 9959.       
 9980.       
 9980.       subroutine copy_clr_full( n_profile, n_layer, n_cloud_top, n_order_phase, tau_clr, omega_clr, phase_fnc_clr, tau, omega, phase_fnc, tau_clr_f, omega_clr_f, phase_fnc_clr_f, nd_profile, nd_layer, nd_layer_clr, id_ct, nd_max_order )
 9980.       t$255 = nd_profile
 9980.       t$256 = nd_layer_clr
10024.       t$1848 = _zla( 0, nd_profile )
 9980.       t$1849 = _zla( 0, nd_profile )
10024.       t$1850 = _zla( 0, nd_layer_clr )
 9980.       t$1851 = _zla( 0, nd_profile ) * _zla( 0, nd_layer_clr )
 9980.       t$257 = nd_max_order
 9980.       t$1852 = _zla( 0, nd_profile ) * _zla( 0, nd_layer_clr )
10028.       t$1853 = _zla( 0, nd_max_order )
 9980.       t$1854 = _zla( 0, nd_profile ) * _zla( 0, nd_layer_clr ) * _zla( 0, nd_max_order )
 9980.       t$258 = id_ct
 9980.       t$259 = nd_layer
 9980.       t$1855 = 1 + nd_layer + -id_ct
10031.       t$1856 = _zla( 0, 1 + nd_layer + -id_ct )
 9980.       t$1857 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
 9980.       t$1858 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
 9980.       t$1859 = _zla( 0, nd_profile ) * _zla( 0, nd_max_order ) * _zla( 0, 1 + nd_layer + -id_ct )
10040.       t$1860 = _zla( 0, nd_layer )
 9980.       t$1861 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 9980.       t$1862 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 9980.       t$1863 = _zla( 0, nd_profile ) * _zla( 0, nd_max_order ) * _zla( 0, nd_layer )
10075.       if ( nd_layer > 0 ) then
10076.          if ( nd_profile > 0 ) then
10075.             $I_L10075_24 = 0
10075.             do
10076.                $I_L10076_20 = 0
10076. !dir$ ivdep
10076.                do
10077.                   tau_clr_f(1 + $I_L10076_20, 1 + $I_L10075_24) = tau(1 + $I_L10076_20, 1 + $I_L10075_24)
10078.                   omega_clr_f(1 + $I_L10076_20, 1 + $I_L10075_24) = omega(1 + $I_L10076_20, 1 + $I_L10075_24)
10079.                   phase_fnc_clr_f(1 + $I_L10076_20, 1 + $I_L10075_24, 1) = phase_fnc(1 + $I_L10076_20, 1 + $I_L10075_24, 1)
10080.                   $I_L10076_20 = 1 + $I_L10076_20
10076.                   if ( $I_L10076_20 >= nd_profile ) exit
10076.                enddo
10081.                $I_L10075_24 = 1 + $I_L10075_24
10080.                if ( $I_L10075_24 >= nd_layer ) exit
10080.             enddo
10080.          endif
10080.       endif
10082.       if ( -2 + n_order_phase >= 0 ) then
10083.          if ( nd_layer > 0 ) then
10084.             if ( nd_profile > 0 ) then
10082.                $I_L10082_28 = 0
10082.                do
10083.                   $I_L10083_26 = 0
10083.                   do
10084.                      $I_L10084_22 = 0
10084. !dir$ ivdep
10084. !dir$ loop_info (automatic) cache_nt( phase_fnc )
10084.                      do
10085.                         phase_fnc_clr_f(1 + $I_L10084_22, 1 + $I_L10083_26, 2 + $I_L10082_28) = phase_fnc(1 + $I_L10084_22, 1 + $I_L10083_26, 2 + $I_L10082_28)
10086.                         $I_L10084_22 = 1 + $I_L10084_22
10084.                         if ( $I_L10084_22 >= nd_profile ) exit
10084.                      enddo
10087.                      $I_L10083_26 = 1 + $I_L10083_26
10086.                      if ( $I_L10083_26 >= nd_layer ) exit
10086.                   enddo
10088.                   $I_L10082_28 = 1 + $I_L10082_28
10087.                   if ( $I_L10082_28 >= -1 + n_order_phase ) exit
10087.                enddo
10087.             endif
10087.          endif
10087.       endif
10093.       return
10093.       end
10093.       
10115.       
10115.       subroutine copy_clr_sol( n_profile, n_layer, n_cloud_top, n_direction, l_rescale, forward_scatter_clr, phase_fnc_solar_clr, forward_scatter, phase_fnc_solar, forward_scatter_clr_f, phase_fnc_solar_clr_f, nd_profile, nd_layer, nd_layer_clr, id_ct, nd_direction )
10115.       t$260 = nd_profile
10115.       t$261 = nd_layer_clr
10163.       t$1864 = _zla( 0, nd_profile )
10115.       t$1865 = _zla( 0, nd_profile )
10163.       t$1866 = _zla( 0, nd_layer_clr )
10115.       t$1867 = _zla( 0, nd_profile ) * _zla( 0, nd_layer_clr )
10115.       t$262 = nd_direction
10115.       t$1868 = _zla( 0, nd_profile ) * _zla( 0, nd_layer_clr )
10165.       t$1869 = _zla( 0, nd_direction )
10115.       t$1870 = _zla( 0, nd_profile ) * _zla( 0, nd_layer_clr ) * _zla( 0, nd_direction )
10115.       t$263 = id_ct
10115.       t$264 = nd_layer
10115.       t$1871 = 1 + nd_layer + -id_ct
10168.       t$1872 = _zla( 0, 1 + nd_layer + -id_ct )
10115.       t$1873 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
10115.       t$1874 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
10115.       t$1875 = _zla( 0, nd_profile ) * _zla( 0, nd_direction ) * _zla( 0, 1 + nd_layer + -id_ct )
10175.       t$1876 = _zla( 0, nd_layer )
10115.       t$1877 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
10115.       t$1878 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
10115.       t$1879 = _zla( 0, nd_profile ) * _zla( 0, nd_direction ) * _zla( 0, nd_layer )
10194.       if ( -1 + n_cloud_top > 0 ) then
10194.          $I_L10194_60 = 0
10194.          do
10195.             if ( l_rescale /= .false. ) then
10196.                if ( n_profile > 0 ) then
10196.                   $I_L10196_48 = 0
10196. !dir$ ivdep
10196.                   do
10197.                      forward_scatter_clr_f(1 + $I_L10196_48, 1 + $I_L10194_60) = forward_scatter_clr(1 + $I_L10196_48, 1 + $I_L10194_60)
10198.                      $I_L10196_48 = 1 + $I_L10196_48
10196.                      if ( $I_L10196_48 >= n_profile ) exit
10196.                   enddo
10196.                endif
10196.             endif
10200.             if ( n_direction > 0 ) then
10201.                if ( n_profile > 0 ) then
10200.                   $I_L10200_56 = 0
10200.                   do
10201.                      $I_L10201_50 = 0
10201. !dir$ ivdep
10201. !dir$ loop_info (automatic) cache_nt( phase_fnc_solar_clr )
10201.                      do
10202.                         phase_fnc_solar_clr_f(1 + $I_L10201_50, 1 + $I_L10194_60, 1 + $I_L10200_56) = phase_fnc_solar_clr(1 + $I_L10201_50, 1 + $I_L10194_60, 1 + $I_L10200_56)
10203.                         $I_L10201_50 = 1 + $I_L10201_50
10201.                         if ( $I_L10201_50 >= n_profile ) exit
10201.                      enddo
10204.                      $I_L10200_56 = 1 + $I_L10200_56
10203.                      if ( $I_L10200_56 >= n_direction ) exit
10203.                   enddo
10203.                endif
10203.             endif
10205.             $I_L10194_60 = 1 + $I_L10194_60
10204.             if ( $I_L10194_60 >= -1 + n_cloud_top ) exit
10204.          enddo
10204.       endif
10208.       if ( n_layer + -n_cloud_top >= 0 ) then
10208.          $I_L10208_62 = 0
10208.          do
10209.             if ( l_rescale /= .false. ) then
10210.                if ( n_profile > 0 ) then
10210.                   $I_L10210_52 = 0
10210. !dir$ ivdep
10210.                   do
10211.                      forward_scatter_clr_f(1 + $I_L10210_52, n_cloud_top + $I_L10208_62) = forward_scatter(1 + $I_L10210_52, n_cloud_top + $I_L10208_62)
10212.                      $I_L10210_52 = 1 + $I_L10210_52
10210.                      if ( $I_L10210_52 >= n_profile ) exit
10210.                   enddo
10210.                endif
10210.             endif
10214.             if ( n_direction > 0 ) then
10215.                if ( n_profile > 0 ) then
10214.                   $I_L10214_58 = 0
10214.                   do
10215.                      $I_L10215_54 = 0
10215. !dir$ ivdep
10215. !dir$ loop_info (automatic) cache_nt( phase_fnc_solar )
10215.                      do
10216.                         phase_fnc_solar_clr_f(1 + $I_L10215_54, n_cloud_top + $I_L10208_62, 1 + $I_L10214_58) = phase_fnc_solar(1 + $I_L10215_54, n_cloud_top + $I_L10208_62, 1 + $I_L10214_58)
10217.                         $I_L10215_54 = 1 + $I_L10215_54
10215.                         if ( $I_L10215_54 >= n_profile ) exit
10215.                      enddo
10218.                      $I_L10214_58 = 1 + $I_L10214_58
10217.                      if ( $I_L10214_58 >= n_direction ) exit
10217.                   enddo
10217.                endif
10217.             endif
10219.             $I_L10208_62 = 1 + $I_L10208_62
10218.             if ( $I_L10208_62 >= 1 + n_layer + -n_cloud_top ) exit
10218.          enddo
10218.       endif
10224.       return
10224.       end
10224.       
10250.       
10250.       subroutine diff_albedo_basis( n_brdf_basis_fnc, ls_brdf_trunc, f_brdf, uplm_zero, diffuse_alb_basis, nd_brdf_basis_fnc, nd_brdf_trunc, nd_sph_coeff )
10250.       t$266 = nd_brdf_basis_fnc
10250.       t$267 = nd_brdf_trunc / 2
10250.       t$268 = nd_brdf_trunc
10291.       t$1880 = _zla( 0, nd_brdf_basis_fnc )
10250.       t$1881 = _zla( 0, nd_brdf_basis_fnc )
10250.       t$1882 = 1 + t$267
10291.       t$1883 = _zla( 0, 1 + t$267 )
10250.       t$1884 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$267 )
10250.       t$1885 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$267 ) * _zla( 0, 1 + t$267 )
10250.       t$1886 = 1 + nd_brdf_trunc
10291.       t$1887 = _zla( 0, 1 + nd_brdf_trunc )
10250.       t$1888 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$267 ) * _zla( 0, 1 + t$267 ) * _zla( 0, 1 + nd_brdf_trunc )
10250.       t$265 = nd_sph_coeff
10283.       t$1889 = _zla( 0, nd_sph_coeff )
10250.       t$269 = ( 1 + nd_brdf_trunc )
10311.       t$1890 = _zla( 0, ( 1 + nd_brdf_trunc ) )
10311.       t$1893 = 8 * _zla( 0, ( 1 + nd_brdf_trunc ) )
10313.       t$1894 = 8 * ( 7 + 8 * _zla( 0, ( 1 + nd_brdf_trunc ) ) ) / 8
10313.       t$1896 = t$1894 + 8 * _zla( 0, ( 1 + nd_brdf_trunc ) )
10250.       t$1891 = int( _alloc( t$1894 + 8 * _zla( 0, ( 1 + nd_brdf_trunc ) ) ), 8 )
10311.       t$1892 = t$1891
10313.       t$1895 = t$1894 + t$1891
10319.       if ( n_brdf_basis_fnc > 0 ) then
10322.          if ( ls_brdf_trunc >= 0 ) then
10319.             $I_L10319_38 = 0
10319. !dir$ ivdep
10319.             do
10320.                diffuse_alb_basis(1 + $I_L10319_38) = 0.0
10341.                $I_L10319_38 = 1 + $I_L10319_38
10337.                if ( $I_L10319_38 >= n_brdf_basis_fnc ) exit
10337.             enddo
10319.             $I_L10319_50 = 0
10319.             do
10322.                $I_L10322_40 = 0
10322. !dir$ ivdep
10322.                do
10323.                   factor(1 + 2 * $I_L10322_40) = ( uplm_zero(1 + 2 * $I_L10322_40) * real( 1 + -2 * mod( ( 2 * $I_L10322_40 ), 2 ), 8 ) * 1.0/( real( -3 + -2 * $I_L10322_40 + ( 1 + 2 * $I_L10322_40 ) * ( 1 + 2 * $I_L10322_40 ), 8 ) ) )
10329.                   sum_p(1 + 2 * $I_L10322_40) = 0.0
10326.                   $I_L10322_40 = 1 + $I_L10322_40
10322.                   if ( $I_L10322_40 >= ( 2 + ls_brdf_trunc ) / 2 ) exit
10322.                enddo
10330.                $I_L10330_48 = 0
10330. !dir$ blocking_size( 1, 1 )
10330.                do
10331.                   $SC_factor_I1 = factor(1 + 2 * $I_L10330_48)
10328.                   $I_L10328_42 = 0
10328. !dir$ ivdep
10328. !dir$ blocking_size( 256, 256 )
10328.                   do
10331.                      sum_p(1 + 2 * $I_L10328_42) = sum_p(1 + 2 * $I_L10328_42) + $SC_factor_I1 * f_brdf(1 + $I_L10319_50, $I_L10328_42, $I_L10330_48, 0)
10337.                      $I_L10328_42 = 1 + $I_L10328_42
10330.                      if ( $I_L10328_42 >= ( 2 + ls_brdf_trunc ) / 2 ) exit
10330.                   enddo
10333.                   $I_L10330_48 = 1 + $I_L10330_48
10333.                   if ( $I_L10330_48 >= ( 2 + ls_brdf_trunc ) / 2 ) exit
10333.                enddo
10328.                $SCA_diffuse_alb_basis_I0 = diffuse_alb_basis(1 + $I_L10319_50)
10328.                $I_L10328_44 = 0
10328. !dir$ ivdep
10328.                do
10334.                   $SCA_diffuse_alb_basis_I0 = $SCA_diffuse_alb_basis_I0 + ( sum_p(1 + 2 * $I_L10328_44) * uplm_zero(1 + 2 * $I_L10328_44) * 1.0/( real( -3 + ( 1 + 2 * $I_L10328_44 ) * ( 1 + 2 * $I_L10328_44 ) + -2 * $I_L10328_44, 8 ) ) )
10337.                   $I_L10328_44 = 1 + $I_L10328_44
10333.                   if ( $I_L10328_44 >= ( 2 + ls_brdf_trunc ) / 2 ) exit
10333.                enddo
10328.                diffuse_alb_basis(1 + $I_L10319_50) = $SCA_diffuse_alb_basis_I0
10341.                $I_L10319_50 = 1 + $I_L10319_50
10337.                if ( $I_L10319_50 >= n_brdf_basis_fnc ) exit
10337.             enddo
10319.             $I_L10319_46 = 0
10319. !dir$ ivdep
10319.             do
10339.                diffuse_alb_basis(1 + $I_L10319_46) = 12.566370614359172 * diffuse_alb_basis(1 + $I_L10319_46)
10341.                $I_L10319_46 = 1 + $I_L10319_46
10337.                if ( $I_L10319_46 >= n_brdf_basis_fnc ) exit
10337.             enddo
10337.          else
10319.             $I_L10319_36 = 0
10319. !dir$ ivdep
10319.             do
10339.                diffuse_alb_basis(1 + $I_L10319_36) = 0.0
10341.                $I_L10319_36 = 1 + $I_L10319_36
10337.                if ( $I_L10319_36 >= n_brdf_basis_fnc ) exit
10337.             enddo
10337.          endif
10337.       endif
10250.       _free( t$1891 )
10346.       return
10346.       end
10346.       
10368.       
10368.       subroutine diff_planck_source( n_profile, n_layer, n_deg_fit, thermal_coefficient, t_ref_planck, t_level, t_ground, planck_flux, diff_planck, planck_ground, l_ir_source_quad, t, diff_planck_2, i_angular_integration, n_viewing_level, i_rad_layer, frac_rad_layer, planck_radiance, l_tile, n_point_tile, n_tile, list_tile, frac_tile, t_tile, planck_flux_tile, nd_profile, nd_layer, nd_thermal_coeff, nd_radiance_profile, nd_viewing_level, nd_point_tile, nd_tile )
10368.       t$271 = ( -1 + nd_thermal_coeff )
10368.       t$1897 = nd_thermal_coeff
10437.       t$1898 = _zla( 0, nd_thermal_coeff )
10368.       t$272 = nd_profile
10368.       t$273 = nd_layer
10441.       t$1899 = _zla( 0, nd_profile )
10368.       t$1900 = _zla( 0, nd_profile )
10368.       t$1901 = 1 + nd_layer
10441.       t$1902 = _zla( 0, 1 + nd_layer )
10368.       t$1903 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
10468.       t$1904 = _zla( 0, nd_layer )
10368.       t$1905 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
10368.       t$270 = nd_viewing_level
10423.       t$1906 = _zla( 0, nd_viewing_level )
10368.       t$276 = nd_radiance_profile
10474.       t$1907 = _zla( 0, nd_radiance_profile )
10368.       t$1908 = _zla( 0, nd_radiance_profile )
10368.       t$1909 = _zla( 0, nd_viewing_level ) * _zla( 0, nd_radiance_profile )
10368.       t$274 = nd_point_tile
10457.       t$1910 = _zla( 0, nd_point_tile )
10368.       t$275 = nd_tile
10368.       t$1911 = _zla( 0, nd_point_tile )
10460.       t$1912 = _zla( 0, nd_tile )
10368.       t$1913 = _zla( 0, nd_point_tile ) * _zla( 0, nd_tile )
10491.       t$1916 = 8 * _zla( 0, nd_profile )
10492.       t$1917 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) ) / 8
10492.       t$1919 = t$1917 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
10368.       t$1914 = int( _alloc( t$1917 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ), 8 )
10491.       t$1915 = t$1914
10492.       t$1918 = t$1917 + t$1914
10497.       if ( i_angular_integration == 3 ) then
10500.          if ( n_viewing_level > 0 ) then
10500.             $I_L10500_382 = 0
10500.             do
10501.                if ( n_profile > 0 ) then
10501.                   $SCA_i_rad_layer_I6 = i_rad_layer(1 + $I_L10500_382)
10501.                   $SCA_frac_rad_layer_I7 = frac_rad_layer(1 + $I_L10500_382)
10508.                   $SC_thermal_coefficient_I9 = thermal_coefficient(n_deg_fit)
10501.                   $I_L10501_310 = 0
10501. !dir$ ivdep
10501.                   do
10503.                      t_ratio(1 + $I_L10501_310) = ( 1.0/t_ref_planck * ( t_level(1 + $I_L10501_310, -1 + $SCA_i_rad_layer_I6) + $SCA_frac_rad_layer_I7 * ( t_level(1 + $I_L10501_310, $SCA_i_rad_layer_I6) + -t_level(1 + $I_L10501_310, -1 + $SCA_i_rad_layer_I6) ) ) )
10508.                      planck_radiance(1 + $I_L10501_310, 1 + $I_L10500_382) = $SC_thermal_coefficient_I9
10510.                      $I_L10501_310 = 1 + $I_L10501_310
10501.                      if ( $I_L10501_310 >= n_profile ) exit
10501.                   enddo
10501.                endif
10511.                if ( n_deg_fit > 0 ) then
10512.                   if ( n_profile > 0 ) then
10511.                      $I_L10511_362 = 0
10511.                      do
10512.                         $I_L10512_360 = 0
10512.                         do
10511.                            $I_L10511_325 = 0
10511.                            if ( min( n_deg_fit, 256 + 256 * $I_L10511_362 ) + -256 * $I_L10511_362 >= 4 ) then
10511.                               $I_L10511_408 = 0
10511. !dir$ blocking_size( 256, 256 )
10511.                               do
10512.                                  $SCA_thermal_coefficient#1_U0 = thermal_coefficient(-1 + n_deg_fit + -256 * $I_L10511_362 + -4 * $I_L10511_408)
10512.                                  $SCA_thermal_coefficient#2_U1 = thermal_coefficient(-2 + n_deg_fit + -256 * $I_L10511_362 + -4 * $I_L10511_408)
10512.                                  $SCA_thermal_coefficient#3_U2 = thermal_coefficient(-3 + n_deg_fit + -256 * $I_L10511_362 + -4 * $I_L10511_408)
10512.                                  $SCA_thermal_coefficient#4_U3 = thermal_coefficient(-4 + n_deg_fit + -256 * $I_L10511_362 + -4 * $I_L10511_408)
10512.                                  $I_L10512_312 = 0
10512. !dir$ ivdep
10512. !dir$ blocking_size( 256, 256 )
10512.                                  do
10513.                                     planck_radiance(1 + $I_L10512_312 + 256 * $I_L10512_360, 1 + $I_L10500_382) = $SCA_thermal_coefficient#1_U0 + t_ratio(1 + $I_L10512_312 + 256 * $I_L10512_360) * planck_radiance(1 + $I_L10512_312 + 256 * $I_L10512_360, 1 + $I_L10500_382)
10513.                                     planck_radiance(1 + $I_L10512_312 + 256 * $I_L10512_360, 1 + $I_L10500_382) = $SCA_thermal_coefficient#2_U1 + t_ratio(1 + $I_L10512_312 + 256 * $I_L10512_360) * planck_radiance(1 + $I_L10512_312 + 256 * $I_L10512_360, 1 + $I_L10500_382)
10513.                                     planck_radiance(1 + $I_L10512_312 + 256 * $I_L10512_360, 1 + $I_L10500_382) = $SCA_thermal_coefficient#3_U2 + t_ratio(1 + $I_L10512_312 + 256 * $I_L10512_360) * planck_radiance(1 + $I_L10512_312 + 256 * $I_L10512_360, 1 + $I_L10500_382)
10513.                                     planck_radiance(1 + $I_L10512_312 + 256 * $I_L10512_360, 1 + $I_L10500_382) = $SCA_thermal_coefficient#4_U3 + t_ratio(1 + $I_L10512_312 + 256 * $I_L10512_360) * planck_radiance(1 + $I_L10512_312 + 256 * $I_L10512_360, 1 + $I_L10500_382)
10512.                                     $I_L10512_312 = 1 + $I_L10512_312
10512.                                     if ( $I_L10512_312 >= min( n_profile, 256 + 256 * $I_L10512_360 ) + -256 * $I_L10512_360 ) exit
10512.                                  enddo
10511.                                  $I_L10511_408 = 1 + $I_L10511_408
10511.                                  if ( $I_L10511_408 >= _rsh( min( n_deg_fit, 256 + 256 * $I_L10511_362 ) + -256 * $I_L10511_362, 2 ) ) exit
10511.                               enddo
10511.                               $I_L10511_325 = and( 0xfffffffffffffffcUL, min( n_deg_fit, 256 + 256 * $I_L10511_362 ) + -256 * $I_L10511_362 )
10511.                            endif
10511.                            if ( $I_L10511_325 < min( n_deg_fit, 256 + 256 * $I_L10511_362 ) + -256 * $I_L10511_362 ) then
10511.                               $I_L10511_388 = 0
10511. !dir$ blocking_size( 256, 256 )
10511.                               do
10512.                                  $SCA_thermal_coefficient_I8 = thermal_coefficient(-1 + n_deg_fit + -$I_L10511_325 + -$I_L10511_388 + -256 * $I_L10511_362)
10512.                                  $I_L10512_312 = 0
10512. !dir$ ivdep
10512. !dir$ blocking_size( 256, 256 )
10512.                                  do
10513.                                     planck_radiance(1 + $I_L10512_312 + 256 * $I_L10512_360, 1 + $I_L10500_382) = $SCA_thermal_coefficient_I8 + t_ratio(1 + $I_L10512_312 + 256 * $I_L10512_360) * planck_radiance(1 + $I_L10512_312 + 256 * $I_L10512_360, 1 + $I_L10500_382)
10512.                                     $I_L10512_312 = 1 + $I_L10512_312
10512.                                     if ( $I_L10512_312 >= min( n_profile, 256 + 256 * $I_L10512_360 ) + -256 * $I_L10512_360 ) exit
10512.                                  enddo
10511.                                  $I_L10511_388 = 1 + $I_L10511_388
10511.                                  if ( $I_L10511_388 >= min( n_deg_fit, 256 + 256 * $I_L10511_362 ) + -$I_L10511_325 + -256 * $I_L10511_362 ) exit
10511.                               enddo
10511.                            endif
10512.                            $I_L10512_360 = 1 + $I_L10512_360
10516.                            if ( $I_L10512_360 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
10516.                         enddo
10511.                         $I_L10511_362 = 1 + $I_L10511_362
10511.                         if ( $I_L10511_362 >= 1 + max( 0, -1 + _rsh( 255 + n_deg_fit, 8 ) ) ) exit
10511.                      enddo
10511.                   endif
10511.                endif
10523.                $I_L10500_382 = 1 + $I_L10500_382
10521.                if ( $I_L10500_382 >= n_viewing_level ) exit
10521.             enddo
10519.             if ( n_profile > 0 ) then
10500.                $I_L10500_323 = 0
10500.                do
10519.                   $I_L10519_315 = 0
10519. !dir$ ivdep
10519.                   do
10520.                      planck_radiance(1 + $I_L10519_315, 1 + $I_L10500_323) = 3.1830988618379069e-1 * planck_radiance(1 + $I_L10519_315, 1 + $I_L10500_323)
10521.                      $I_L10519_315 = 1 + $I_L10519_315
10519.                      if ( $I_L10519_315 >= n_profile ) exit
10519.                   enddo
10523.                   $I_L10500_323 = 1 + $I_L10500_323
10521.                   if ( $I_L10500_323 >= n_viewing_level ) exit
10521.                enddo
10521.             endif
10521.          endif
10521.       endif
10562.       if ( nd_layer >= 0 ) then
10563.          if ( nd_profile > 0 ) then
10570.             $SC_thermal_coefficient_I1 = thermal_coefficient(n_deg_fit)
10562.             $I_L10562_317 = 0
10562.             do
10563.                $I_L10563_280 = 0
10563. !dir$ ivdep
10563.                do
10564.                   t_ratio2(1 + $I_L10563_280, $I_L10562_317) = ( t_level(1 + $I_L10563_280, $I_L10562_317) * 1.0/t_ref_planck )
10570.                   planck_flux(1 + $I_L10563_280, $I_L10562_317) = $SC_thermal_coefficient_I1
10565.                   $I_L10563_280 = 1 + $I_L10563_280
10563.                   if ( $I_L10563_280 >= nd_profile ) exit
10563.                enddo
10566.                $I_L10562_317 = 1 + $I_L10562_317
10565.                if ( $I_L10562_317 >= 1 + nd_layer ) exit
10565.             enddo
10565.          endif
10565.       endif
10575.       if ( n_deg_fit > 0 ) then
10576.          if ( nd_layer >= 0 ) then
10577.             if ( nd_profile > 0 ) then
10576.                $I_L10576_384 = 0
10576.                do
10575.                   $I_L10575_376 = 0
10575.                   do
10577.                      $I_L10577_364 = 0
10577.                      do
10576.                         $I_L10576_346 = 0
10576. !dir$ shortloop16
10576. !dir$ blocking_size( 4, 4 )
10576.                         do
10575.                            $I_L10575_328 = 0
10575.                            if ( min( n_deg_fit, 8 + 8 * $I_L10575_376 ) + -8 * $I_L10575_376 >= 4 ) then
10575.                               $I_L10575_410 = 0
10575. !dir$ shortloop16
10575. !dir$ blocking_size( 8, 8 )
10575.                               do
10577.                                  $SCA_thermal_coefficient#1_U4 = thermal_coefficient(-1 + n_deg_fit + -8 * $I_L10575_376 + -4 * $I_L10575_410)
10577.                                  $SCA_thermal_coefficient#2_U5 = thermal_coefficient(-2 + n_deg_fit + -8 * $I_L10575_376 + -4 * $I_L10575_410)
10577.                                  $SCA_thermal_coefficient#3_U6 = thermal_coefficient(-3 + n_deg_fit + -8 * $I_L10575_376 + -4 * $I_L10575_410)
10577.                                  $SCA_thermal_coefficient#4_U7 = thermal_coefficient(-4 + n_deg_fit + -8 * $I_L10575_376 + -4 * $I_L10575_410)
10577.                                  $I_L10577_282 = 0
10577. !dir$ ivdep
10577. !dir$ blocking_size( 256, 256 )
10577.                                  do
10578.                                     planck_flux(1 + $I_L10577_282 + 256 * $I_L10577_364, $I_L10576_346 + 4 * $I_L10576_384) = $SCA_thermal_coefficient#1_U4 + planck_flux(1 + $I_L10577_282 + 256 * $I_L10577_364, $I_L10576_346 + 4 * $I_L10576_384) * t_ratio2(1 + $I_L10577_282 + 256 * $I_L10577_364, $I_L10576_346 + 4 * $I_L10576_384)
10578.                                     planck_flux(1 + $I_L10577_282 + 256 * $I_L10577_364, $I_L10576_346 + 4 * $I_L10576_384) = $SCA_thermal_coefficient#2_U5 + planck_flux(1 + $I_L10577_282 + 256 * $I_L10577_364, $I_L10576_346 + 4 * $I_L10576_384) * t_ratio2(1 + $I_L10577_282 + 256 * $I_L10577_364, $I_L10576_346 + 4 * $I_L10576_384)
10578.                                     planck_flux(1 + $I_L10577_282 + 256 * $I_L10577_364, $I_L10576_346 + 4 * $I_L10576_384) = $SCA_thermal_coefficient#3_U6 + planck_flux(1 + $I_L10577_282 + 256 * $I_L10577_364, $I_L10576_346 + 4 * $I_L10576_384) * t_ratio2(1 + $I_L10577_282 + 256 * $I_L10577_364, $I_L10576_346 + 4 * $I_L10576_384)
10578.                                     planck_flux(1 + $I_L10577_282 + 256 * $I_L10577_364, $I_L10576_346 + 4 * $I_L10576_384) = $SCA_thermal_coefficient#4_U7 + planck_flux(1 + $I_L10577_282 + 256 * $I_L10577_364, $I_L10576_346 + 4 * $I_L10576_384) * t_ratio2(1 + $I_L10577_282 + 256 * $I_L10577_364, $I_L10576_346 + 4 * $I_L10576_384)
10577.                                     $I_L10577_282 = 1 + $I_L10577_282
10577.                                     if ( $I_L10577_282 >= min( nd_profile, 256 + 256 * $I_L10577_364 ) + -256 * $I_L10577_364 ) exit
10577.                                  enddo
10575.                                  $I_L10575_410 = 1 + $I_L10575_410
10575.                                  if ( $I_L10575_410 >= _rsh( min( n_deg_fit, 8 + 8 * $I_L10575_376 ) + -8 * $I_L10575_376, 2 ) ) exit
10575.                               enddo
10575.                               $I_L10575_328 = and( 0xfffffffffffffffcUL, min( n_deg_fit, 8 + 8 * $I_L10575_376 ) + -8 * $I_L10575_376 )
10575.                            endif
10575.                            if ( $I_L10575_328 < min( n_deg_fit, 8 + 8 * $I_L10575_376 ) + -8 * $I_L10575_376 ) then
10575.                               $I_L10575_391 = 0
10575. !dir$ shortloop16
10575. !dir$ blocking_size( 8, 8 )
10575.                               do
10577.                                  $SCA_thermal_coefficient_I2 = thermal_coefficient(-1 + n_deg_fit + -$I_L10575_328 + -$I_L10575_391 + -8 * $I_L10575_376)
10577.                                  $I_L10577_282 = 0
10577. !dir$ ivdep
10577. !dir$ blocking_size( 256, 256 )
10577.                                  do
10578.                                     planck_flux(1 + $I_L10577_282 + 256 * $I_L10577_364, $I_L10576_346 + 4 * $I_L10576_384) = $SCA_thermal_coefficient_I2 + planck_flux(1 + $I_L10577_282 + 256 * $I_L10577_364, $I_L10576_346 + 4 * $I_L10576_384) * t_ratio2(1 + $I_L10577_282 + 256 * $I_L10577_364, $I_L10576_346 + 4 * $I_L10576_384)
10577.                                     $I_L10577_282 = 1 + $I_L10577_282
10577.                                     if ( $I_L10577_282 >= min( nd_profile, 256 + 256 * $I_L10577_364 ) + -256 * $I_L10577_364 ) exit
10577.                                  enddo
10575.                                  $I_L10575_391 = 1 + $I_L10575_391
10575.                                  if ( $I_L10575_391 >= min( n_deg_fit, 8 + 8 * $I_L10575_376 ) + -$I_L10575_328 + -8 * $I_L10575_376 ) exit
10575.                               enddo
10575.                            endif
10576.                            $I_L10576_346 = 1 + $I_L10576_346
10581.                            if ( $I_L10576_346 >= min( 1 + nd_layer, 4 + 4 * $I_L10576_384 ) + -4 * $I_L10576_384 ) exit
10581.                         enddo
10577.                         $I_L10577_364 = 1 + $I_L10577_364
10577.                         if ( $I_L10577_364 >= 1 + max( 0, -1 + _rsh( 255 + nd_profile, 8 ) ) ) exit
10577.                      enddo
10575.                      $I_L10575_376 = 1 + $I_L10575_376
10582.                      if ( $I_L10575_376 >= 1 + max( 0, -1 + _rsh( 7 + n_deg_fit, 3 ) ) ) exit
10582.                   enddo
10576.                   $I_L10576_384 = 1 + $I_L10576_384
10576.                   if ( $I_L10576_384 >= 1 + max( 0, -1 + _rsh( 4 + nd_layer, 2 ) ) ) exit
10576.                enddo
10576.             endif
10576.          endif
10576.       endif
10585.       if ( nd_layer > 0 ) then
10586.          if ( nd_profile > 0 ) then
10585.             $I_L10585_366 = 0
10585.             do
10586.                $I_L10586_349 = 0
10586.                do
10585.                   $I_L10585_331 = 0
10585.                   if ( min( nd_layer, 4 + 4 * $I_L10585_366 ) + -4 * $I_L10585_366 >= 4 ) then
10585.                      $I_L10585_412 = 0
10585. !dir$ shortloop16
10585. !dir$ blocking_size( 4, 4 )
10585.                      do
10586.                         $I_L10586_285 = 0
10586. !dir$ ivdep
10586. !dir$ blocking_size( 256, 256 )
10586.                         do
10587.                            diff_planck(1 + $I_L10586_285 + 256 * $I_L10586_349, 1 + 4 * $I_L10585_366 + 4 * $I_L10585_412) = planck_flux(1 + $I_L10586_285 + 256 * $I_L10586_349, 1 + 4 * $I_L10585_366 + 4 * $I_L10585_412) + -planck_flux(1 + $I_L10586_285 + 256 * $I_L10586_349, 4 * $I_L10585_366 + 4 * $I_L10585_412)
10587.                            diff_planck(1 + $I_L10586_285 + 256 * $I_L10586_349, 2 + 4 * $I_L10585_366 + 4 * $I_L10585_412) = planck_flux(1 + $I_L10586_285 + 256 * $I_L10586_349, 2 + 4 * $I_L10585_366 + 4 * $I_L10585_412) + -planck_flux(1 + $I_L10586_285 + 256 * $I_L10586_349, 1 + 4 * $I_L10585_366 + 4 * $I_L10585_412)
10587.                            diff_planck(1 + $I_L10586_285 + 256 * $I_L10586_349, 3 + 4 * $I_L10585_366 + 4 * $I_L10585_412) = planck_flux(1 + $I_L10586_285 + 256 * $I_L10586_349, 3 + 4 * $I_L10585_366 + 4 * $I_L10585_412) + -planck_flux(1 + $I_L10586_285 + 256 * $I_L10586_349, 2 + 4 * $I_L10585_366 + 4 * $I_L10585_412)
10587.                            diff_planck(1 + $I_L10586_285 + 256 * $I_L10586_349, 4 + 4 * $I_L10585_366 + 4 * $I_L10585_412) = planck_flux(1 + $I_L10586_285 + 256 * $I_L10586_349, 4 + 4 * $I_L10585_366 + 4 * $I_L10585_412) + -planck_flux(1 + $I_L10586_285 + 256 * $I_L10586_349, 3 + 4 * $I_L10585_366 + 4 * $I_L10585_412)
10586.                            $I_L10586_285 = 1 + $I_L10586_285
10586.                            if ( $I_L10586_285 >= min( nd_profile, 256 + 256 * $I_L10586_349 ) + -256 * $I_L10586_349 ) exit
10586.                         enddo
10585.                         $I_L10585_412 = 1 + $I_L10585_412
10585.                         if ( $I_L10585_412 >= _rsh( min( nd_layer, 4 + 4 * $I_L10585_366 ) + -4 * $I_L10585_366, 2 ) ) exit
10585.                      enddo
10585.                      $I_L10585_331 = and( 0xfffffffffffffffcUL, min( nd_layer, 4 + 4 * $I_L10585_366 ) + -4 * $I_L10585_366 )
10585.                   endif
10585.                   if ( $I_L10585_331 < min( nd_layer, 4 + 4 * $I_L10585_366 ) + -4 * $I_L10585_366 ) then
10585.                      $I_L10585_394 = 0
10585. !dir$ shortloop16
10585. !dir$ blocking_size( 4, 4 )
10585.                      do
10586.                         $I_L10586_285 = 0
10586. !dir$ ivdep
10586. !dir$ blocking_size( 256, 256 )
10586.                         do
10587.                            diff_planck(1 + $I_L10586_285 + 256 * $I_L10586_349, 1 + $I_L10585_331 + $I_L10585_394 + 4 * $I_L10585_366) = planck_flux(1 + $I_L10586_285 + 256 * $I_L10586_349, 1 + $I_L10585_331 + $I_L10585_394 + 4 * $I_L10585_366) + -planck_flux(1 + $I_L10586_285 + 256 * $I_L10586_349, $I_L10585_331 + $I_L10585_394 + 4 * $I_L10585_366)
10586.                            $I_L10586_285 = 1 + $I_L10586_285
10586.                            if ( $I_L10586_285 >= min( nd_profile, 256 + 256 * $I_L10586_349 ) + -256 * $I_L10586_349 ) exit
10586.                         enddo
10585.                         $I_L10585_394 = 1 + $I_L10585_394
10585.                         if ( $I_L10585_394 >= min( nd_layer, 4 + 4 * $I_L10585_366 ) + -$I_L10585_331 + -4 * $I_L10585_366 ) exit
10585.                      enddo
10585.                   endif
10586.                   $I_L10586_349 = 1 + $I_L10586_349
10589.                   if ( $I_L10586_349 >= 1 + max( 0, -1 + _rsh( 255 + nd_profile, 8 ) ) ) exit
10589.                enddo
10585.                $I_L10585_366 = 1 + $I_L10585_366
10585.                if ( $I_L10585_366 >= 1 + max( 0, -1 + _rsh( 3 + nd_layer, 2 ) ) ) exit
10585.             enddo
10585.          endif
10585.       endif
10594.       if ( l_ir_source_quad /= .false. ) then
10620.          if ( nd_layer > 0 ) then
10621.             if ( nd_profile > 0 ) then
10623.                $SC_thermal_coefficient_I1 = thermal_coefficient(n_deg_fit)
10620.                $I_L10620_319 = 0
10620.                do
10621.                   $I_L10621_288 = 0
10621. !dir$ ivdep
10621.                   do
10622.                      t_ratio2(1 + $I_L10621_288, 1 + $I_L10620_319) = ( t(1 + $I_L10621_288, 1 + $I_L10620_319) * 1.0/t_ref_planck )
10623.                      diff_planck_2(1 + $I_L10621_288, 1 + $I_L10620_319) = $SC_thermal_coefficient_I1
10625.                      $I_L10621_288 = 1 + $I_L10621_288
10621.                      if ( $I_L10621_288 >= nd_profile ) exit
10621.                   enddo
10626.                   $I_L10620_319 = 1 + $I_L10620_319
10625.                   if ( $I_L10620_319 >= nd_layer ) exit
10625.                enddo
10625.             endif
10625.          endif
10628.          if ( n_deg_fit > 0 ) then
10629.             if ( nd_layer > 0 ) then
10630.                if ( nd_profile > 0 ) then
10629.                   $I_L10629_386 = 0
10629.                   do
10628.                      $I_L10628_378 = 0
10628.                      do
10630.                         $I_L10630_368 = 0
10630.                         do
10629.                            $I_L10629_351 = 0
10629. !dir$ shortloop16
10629. !dir$ blocking_size( 4, 4 )
10629.                            do
10628.                               $I_L10628_334 = 0
10628.                               if ( min( n_deg_fit, 8 + 8 * $I_L10628_378 ) + -8 * $I_L10628_378 >= 4 ) then
10628.                                  $I_L10628_414 = 0
10628. !dir$ shortloop16
10628. !dir$ blocking_size( 8, 8 )
10628.                                  do
10630.                                     $SCA_thermal_coefficient#1_U8 = thermal_coefficient(-1 + n_deg_fit + -8 * $I_L10628_378 + -4 * $I_L10628_414)
10630.                                     $SCA_thermal_coefficient#2_U9 = thermal_coefficient(-2 + n_deg_fit + -8 * $I_L10628_378 + -4 * $I_L10628_414)
10630.                                     $SCA_thermal_coefficient#3_U10 = thermal_coefficient(-3 + n_deg_fit + -8 * $I_L10628_378 + -4 * $I_L10628_414)
10630.                                     $SCA_thermal_coefficient#4_U11 = thermal_coefficient(-4 + n_deg_fit + -8 * $I_L10628_378 + -4 * $I_L10628_414)
10630.                                     $I_L10630_290 = 0
10630. !dir$ ivdep
10630. !dir$ blocking_size( 256, 256 )
10630.                                     do
10631.                                        diff_planck_2(1 + $I_L10630_290 + 256 * $I_L10630_368, 1 + $I_L10629_351 + 4 * $I_L10629_386) = $SCA_thermal_coefficient#1_U8 + diff_planck_2(1 + $I_L10630_290 + 256 * $I_L10630_368, 1 + $I_L10629_351 + 4 * $I_L10629_386) * t_ratio2(1 + $I_L10630_290 + 256 * $I_L10630_368, 1 + $I_L10629_351 + 4 * $I_L10629_386)
10631.                                        diff_planck_2(1 + $I_L10630_290 + 256 * $I_L10630_368, 1 + $I_L10629_351 + 4 * $I_L10629_386) = $SCA_thermal_coefficient#2_U9 + diff_planck_2(1 + $I_L10630_290 + 256 * $I_L10630_368, 1 + $I_L10629_351 + 4 * $I_L10629_386) * t_ratio2(1 + $I_L10630_290 + 256 * $I_L10630_368, 1 + $I_L10629_351 + 4 * $I_L10629_386)
10631.                                        diff_planck_2(1 + $I_L10630_290 + 256 * $I_L10630_368, 1 + $I_L10629_351 + 4 * $I_L10629_386) = $SCA_thermal_coefficient#3_U10 + diff_planck_2(1 + $I_L10630_290 + 256 * $I_L10630_368, 1 + $I_L10629_351 + 4 * $I_L10629_386) * t_ratio2(1 + $I_L10630_290 + 256 * $I_L10630_368, 1 + $I_L10629_351 + 4 * $I_L10629_386)
10631.                                        diff_planck_2(1 + $I_L10630_290 + 256 * $I_L10630_368, 1 + $I_L10629_351 + 4 * $I_L10629_386) = $SCA_thermal_coefficient#4_U11 + diff_planck_2(1 + $I_L10630_290 + 256 * $I_L10630_368, 1 + $I_L10629_351 + 4 * $I_L10629_386) * t_ratio2(1 + $I_L10630_290 + 256 * $I_L10630_368, 1 + $I_L10629_351 + 4 * $I_L10629_386)
10630.                                        $I_L10630_290 = 1 + $I_L10630_290
10630.                                        if ( $I_L10630_290 >= min( nd_profile, 256 + 256 * $I_L10630_368 ) + -256 * $I_L10630_368 ) exit
10630.                                     enddo
10628.                                     $I_L10628_414 = 1 + $I_L10628_414
10628.                                     if ( $I_L10628_414 >= _rsh( min( n_deg_fit, 8 + 8 * $I_L10628_378 ) + -8 * $I_L10628_378, 2 ) ) exit
10628.                                  enddo
10628.                                  $I_L10628_334 = and( 0xfffffffffffffffcUL, min( n_deg_fit, 8 + 8 * $I_L10628_378 ) + -8 * $I_L10628_378 )
10628.                               endif
10628.                               if ( $I_L10628_334 < min( n_deg_fit, 8 + 8 * $I_L10628_378 ) + -8 * $I_L10628_378 ) then
10628.                                  $I_L10628_397 = 0
10628. !dir$ shortloop16
10628. !dir$ blocking_size( 8, 8 )
10628.                                  do
10630.                                     $SCA_thermal_coefficient_I3 = thermal_coefficient(-1 + n_deg_fit + -$I_L10628_334 + -$I_L10628_397 + -8 * $I_L10628_378)
10630.                                     $I_L10630_290 = 0
10630. !dir$ ivdep
10630. !dir$ blocking_size( 256, 256 )
10630.                                     do
10631.                                        diff_planck_2(1 + $I_L10630_290 + 256 * $I_L10630_368, 1 + $I_L10629_351 + 4 * $I_L10629_386) = $SCA_thermal_coefficient_I3 + diff_planck_2(1 + $I_L10630_290 + 256 * $I_L10630_368, 1 + $I_L10629_351 + 4 * $I_L10629_386) * t_ratio2(1 + $I_L10630_290 + 256 * $I_L10630_368, 1 + $I_L10629_351 + 4 * $I_L10629_386)
10630.                                        $I_L10630_290 = 1 + $I_L10630_290
10630.                                        if ( $I_L10630_290 >= min( nd_profile, 256 + 256 * $I_L10630_368 ) + -256 * $I_L10630_368 ) exit
10630.                                     enddo
10628.                                     $I_L10628_397 = 1 + $I_L10628_397
10628.                                     if ( $I_L10628_397 >= min( n_deg_fit, 8 + 8 * $I_L10628_378 ) + -$I_L10628_334 + -8 * $I_L10628_378 ) exit
10628.                                  enddo
10628.                               endif
10629.                               $I_L10629_351 = 1 + $I_L10629_351
10634.                               if ( $I_L10629_351 >= min( nd_layer, 4 + 4 * $I_L10629_386 ) + -4 * $I_L10629_386 ) exit
10634.                            enddo
10630.                            $I_L10630_368 = 1 + $I_L10630_368
10630.                            if ( $I_L10630_368 >= 1 + max( 0, -1 + _rsh( 255 + nd_profile, 8 ) ) ) exit
10630.                         enddo
10628.                         $I_L10628_378 = 1 + $I_L10628_378
10635.                         if ( $I_L10628_378 >= 1 + max( 0, -1 + _rsh( 7 + n_deg_fit, 3 ) ) ) exit
10635.                      enddo
10629.                      $I_L10629_386 = 1 + $I_L10629_386
10629.                      if ( $I_L10629_386 >= 1 + max( 0, -1 + _rsh( 3 + nd_layer, 2 ) ) ) exit
10629.                   enddo
10629.                endif
10629.             endif
10629.          endif
10638.          if ( nd_layer > 0 ) then
10639.             if ( nd_profile > 0 ) then
10638.                $I_L10638_370 = 0
10638.                do
10639.                   $I_L10639_354 = 0
10639.                   do
10638.                      $I_L10638_400 = 0
10638. !dir$ shortloop16
10638. !dir$ blocking_size( 2, 2 )
10638.                      do
10639.                         $I_L10639_293 = 0
10639. !dir$ ivdep
10639. !dir$ blocking_size( 256, 256 )
10639.                         do
10640.                            diff_planck_2(1 + $I_L10639_293 + 256 * $I_L10639_354, 1 + $I_L10638_400 + 2 * $I_L10638_370) = 2.0 * ( planck_flux(1 + $I_L10639_293 + 256 * $I_L10639_354, 1 + $I_L10638_400 + 2 * $I_L10638_370) + planck_flux(1 + $I_L10639_293 + 256 * $I_L10639_354, $I_L10638_400 + 2 * $I_L10638_370) + -2.0 * diff_planck_2(1 + $I_L10639_293 + 256 * $I_L10639_354, 1 + $I_L10638_400 + 2 * $I_L10638_370) )
10639.                            $I_L10639_293 = 1 + $I_L10639_293
10639.                            if ( $I_L10639_293 >= min( nd_profile, 256 + 256 * $I_L10639_354 ) + -256 * $I_L10639_354 ) exit
10639.                         enddo
10638.                         $I_L10638_400 = 1 + $I_L10638_400
10638.                         if ( $I_L10638_400 >= min( nd_layer, 2 + 2 * $I_L10638_370 ) + -2 * $I_L10638_370 ) exit
10638.                      enddo
10639.                      $I_L10639_354 = 1 + $I_L10639_354
10642.                      if ( $I_L10639_354 >= 1 + max( 0, -1 + _rsh( 255 + nd_profile, 8 ) ) ) exit
10642.                   enddo
10638.                   $I_L10638_370 = 1 + $I_L10638_370
10638.                   if ( $I_L10638_370 >= 1 + max( 0, -1 + _rsh( 1 + nd_layer, 1 ) ) ) exit
10638.                enddo
10638.             endif
10638.          endif
10638.       endif
10648.       if ( n_profile > 0 ) then
10650.          $SC_thermal_coefficient_I0 = thermal_coefficient(n_deg_fit)
10648.          $I_L10648_296 = 0
10648. !dir$ ivdep
10648.          do
10649.             t_ratio(1 + $I_L10648_296) = ( t_ground(1 + $I_L10648_296) * 1.0/t_ref_planck )
10650.             planck_ground(1 + $I_L10648_296) = $SC_thermal_coefficient_I0
10651.             $I_L10648_296 = 1 + $I_L10648_296
10648.             if ( $I_L10648_296 >= n_profile ) exit
10648.          enddo
10648.       endif
10652.       if ( n_deg_fit > 0 ) then
10653.          if ( n_profile > 0 ) then
10652.             $I_L10652_372 = 0
10652.             do
10653.                $I_L10653_356 = 0
10653.                do
10652.                   $I_L10652_340 = 0
10652.                   if ( min( n_deg_fit, 256 + 256 * $I_L10652_372 ) + -256 * $I_L10652_372 >= 4 ) then
10652.                      $I_L10652_416 = 0
10652. !dir$ blocking_size( 256, 256 )
10652.                      do
10653.                         $SCA_thermal_coefficient#1_U12 = thermal_coefficient(-1 + n_deg_fit + -256 * $I_L10652_372 + -4 * $I_L10652_416)
10653.                         $SCA_thermal_coefficient#2_U13 = thermal_coefficient(-2 + n_deg_fit + -256 * $I_L10652_372 + -4 * $I_L10652_416)
10653.                         $SCA_thermal_coefficient#3_U14 = thermal_coefficient(-3 + n_deg_fit + -256 * $I_L10652_372 + -4 * $I_L10652_416)
10653.                         $SCA_thermal_coefficient#4_U15 = thermal_coefficient(-4 + n_deg_fit + -256 * $I_L10652_372 + -4 * $I_L10652_416)
10653.                         $I_L10653_298 = 0
10653. !dir$ ivdep
10653. !dir$ blocking_size( 256, 256 )
10653.                         do
10654.                            planck_ground(1 + $I_L10653_298 + 256 * $I_L10653_356) = $SCA_thermal_coefficient#1_U12 + planck_ground(1 + $I_L10653_298 + 256 * $I_L10653_356) * t_ratio(1 + $I_L10653_298 + 256 * $I_L10653_356)
10654.                            planck_ground(1 + $I_L10653_298 + 256 * $I_L10653_356) = $SCA_thermal_coefficient#2_U13 + planck_ground(1 + $I_L10653_298 + 256 * $I_L10653_356) * t_ratio(1 + $I_L10653_298 + 256 * $I_L10653_356)
10654.                            planck_ground(1 + $I_L10653_298 + 256 * $I_L10653_356) = $SCA_thermal_coefficient#3_U14 + planck_ground(1 + $I_L10653_298 + 256 * $I_L10653_356) * t_ratio(1 + $I_L10653_298 + 256 * $I_L10653_356)
10654.                            planck_ground(1 + $I_L10653_298 + 256 * $I_L10653_356) = $SCA_thermal_coefficient#4_U15 + planck_ground(1 + $I_L10653_298 + 256 * $I_L10653_356) * t_ratio(1 + $I_L10653_298 + 256 * $I_L10653_356)
10653.                            $I_L10653_298 = 1 + $I_L10653_298
10653.                            if ( $I_L10653_298 >= min( n_profile, 256 + 256 * $I_L10653_356 ) + -256 * $I_L10653_356 ) exit
10653.                         enddo
10652.                         $I_L10652_416 = 1 + $I_L10652_416
10652.                         if ( $I_L10652_416 >= _rsh( min( n_deg_fit, 256 + 256 * $I_L10652_372 ) + -256 * $I_L10652_372, 2 ) ) exit
10652.                      enddo
10652.                      $I_L10652_340 = and( 0xfffffffffffffffcUL, min( n_deg_fit, 256 + 256 * $I_L10652_372 ) + -256 * $I_L10652_372 )
10652.                   endif
10652.                   if ( $I_L10652_340 < min( n_deg_fit, 256 + 256 * $I_L10652_372 ) + -256 * $I_L10652_372 ) then
10652.                      $I_L10652_402 = 0
10652. !dir$ blocking_size( 256, 256 )
10652.                      do
10653.                         $SCA_thermal_coefficient_I4 = thermal_coefficient(-1 + n_deg_fit + -$I_L10652_340 + -$I_L10652_402 + -256 * $I_L10652_372)
10653.                         $I_L10653_298 = 0
10653. !dir$ ivdep
10653. !dir$ blocking_size( 256, 256 )
10653.                         do
10654.                            planck_ground(1 + $I_L10653_298 + 256 * $I_L10653_356) = $SCA_thermal_coefficient_I4 + planck_ground(1 + $I_L10653_298 + 256 * $I_L10653_356) * t_ratio(1 + $I_L10653_298 + 256 * $I_L10653_356)
10653.                            $I_L10653_298 = 1 + $I_L10653_298
10653.                            if ( $I_L10653_298 >= min( n_profile, 256 + 256 * $I_L10653_356 ) + -256 * $I_L10653_356 ) exit
10653.                         enddo
10652.                         $I_L10652_402 = 1 + $I_L10652_402
10652.                         if ( $I_L10652_402 >= min( n_deg_fit, 256 + 256 * $I_L10652_372 ) + -$I_L10652_340 + -256 * $I_L10652_372 ) exit
10652.                      enddo
10652.                   endif
10653.                   $I_L10653_356 = 1 + $I_L10653_356
10656.                   if ( $I_L10653_356 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
10656.                enddo
10652.                $I_L10652_372 = 1 + $I_L10652_372
10652.                if ( $I_L10652_372 >= 1 + max( 0, -1 + _rsh( 255 + n_deg_fit, 8 ) ) ) exit
10652.             enddo
10652.          endif
10652.       endif
10665.       if ( l_tile /= .false. ) then
10667.          if ( n_tile > 0 ) then
10667.             $I_L10667_380 = 0
10667.             do
10668.                if ( n_point_tile > 0 ) then
10670.                   $SC_thermal_coefficient_I9 = thermal_coefficient(n_deg_fit)
10668.                   $I_L10668_301 = 0
10668. !dir$ ivdep
10668.                   do
10669.                      t_ratio(1 + $I_L10668_301) = ( t_tile(1 + $I_L10668_301, 1 + $I_L10667_380) * 1.0/t_ref_planck )
10670.                      planck_flux_tile(1 + $I_L10668_301, 1 + $I_L10667_380) = $SC_thermal_coefficient_I9
10671.                      $I_L10668_301 = 1 + $I_L10668_301
10668.                      if ( $I_L10668_301 >= n_point_tile ) exit
10668.                   enddo
10668.                endif
10672.                if ( n_deg_fit > 0 ) then
10673.                   if ( n_point_tile > 0 ) then
10672.                      $I_L10672_374 = 0
10672.                      do
10673.                         $I_L10673_358 = 0
10673.                         do
10672.                            $I_L10672_343 = 0
10672.                            if ( min( n_deg_fit, 256 + 256 * $I_L10672_374 ) + -256 * $I_L10672_374 >= 4 ) then
10672.                               $I_L10672_418 = 0
10672. !dir$ blocking_size( 256, 256 )
10672.                               do
10673.                                  $SCA_thermal_coefficient#1_U16 = thermal_coefficient(-1 + n_deg_fit + -256 * $I_L10672_374 + -4 * $I_L10672_418)
10673.                                  $SCA_thermal_coefficient#2_U17 = thermal_coefficient(-2 + n_deg_fit + -256 * $I_L10672_374 + -4 * $I_L10672_418)
10673.                                  $SCA_thermal_coefficient#3_U18 = thermal_coefficient(-3 + n_deg_fit + -256 * $I_L10672_374 + -4 * $I_L10672_418)
10673.                                  $SCA_thermal_coefficient#4_U19 = thermal_coefficient(-4 + n_deg_fit + -256 * $I_L10672_374 + -4 * $I_L10672_418)
10673.                                  $I_L10673_303 = 0
10673. !dir$ ivdep
10673. !dir$ blocking_size( 256, 256 )
10673.                                  do
10674.                                     planck_flux_tile(1 + $I_L10673_303 + 256 * $I_L10673_358, 1 + $I_L10667_380) = $SCA_thermal_coefficient#1_U16 + t_ratio(1 + $I_L10673_303 + 256 * $I_L10673_358) * planck_flux_tile(1 + $I_L10673_303 + 256 * $I_L10673_358, 1 + $I_L10667_380)
10674.                                     planck_flux_tile(1 + $I_L10673_303 + 256 * $I_L10673_358, 1 + $I_L10667_380) = $SCA_thermal_coefficient#2_U17 + t_ratio(1 + $I_L10673_303 + 256 * $I_L10673_358) * planck_flux_tile(1 + $I_L10673_303 + 256 * $I_L10673_358, 1 + $I_L10667_380)
10674.                                     planck_flux_tile(1 + $I_L10673_303 + 256 * $I_L10673_358, 1 + $I_L10667_380) = $SCA_thermal_coefficient#3_U18 + t_ratio(1 + $I_L10673_303 + 256 * $I_L10673_358) * planck_flux_tile(1 + $I_L10673_303 + 256 * $I_L10673_358, 1 + $I_L10667_380)
10674.                                     planck_flux_tile(1 + $I_L10673_303 + 256 * $I_L10673_358, 1 + $I_L10667_380) = $SCA_thermal_coefficient#4_U19 + t_ratio(1 + $I_L10673_303 + 256 * $I_L10673_358) * planck_flux_tile(1 + $I_L10673_303 + 256 * $I_L10673_358, 1 + $I_L10667_380)
10673.                                     $I_L10673_303 = 1 + $I_L10673_303
10673.                                     if ( $I_L10673_303 >= min( n_point_tile, 256 + 256 * $I_L10673_358 ) + -256 * $I_L10673_358 ) exit
10673.                                  enddo
10672.                                  $I_L10672_418 = 1 + $I_L10672_418
10672.                                  if ( $I_L10672_418 >= _rsh( min( n_deg_fit, 256 + 256 * $I_L10672_374 ) + -256 * $I_L10672_374, 2 ) ) exit
10672.                               enddo
10672.                               $I_L10672_343 = and( 0xfffffffffffffffcUL, min( n_deg_fit, 256 + 256 * $I_L10672_374 ) + -256 * $I_L10672_374 )
10672.                            endif
10672.                            if ( $I_L10672_343 < min( n_deg_fit, 256 + 256 * $I_L10672_374 ) + -256 * $I_L10672_374 ) then
10672.                               $I_L10672_405 = 0
10672. !dir$ blocking_size( 256, 256 )
10672.                               do
10673.                                  $SCA_thermal_coefficient_I5 = thermal_coefficient(-1 + n_deg_fit + -$I_L10672_343 + -$I_L10672_405 + -256 * $I_L10672_374)
10673.                                  $I_L10673_303 = 0
10673. !dir$ ivdep
10673. !dir$ blocking_size( 256, 256 )
10673.                                  do
10674.                                     planck_flux_tile(1 + $I_L10673_303 + 256 * $I_L10673_358, 1 + $I_L10667_380) = $SCA_thermal_coefficient_I5 + t_ratio(1 + $I_L10673_303 + 256 * $I_L10673_358) * planck_flux_tile(1 + $I_L10673_303 + 256 * $I_L10673_358, 1 + $I_L10667_380)
10673.                                     $I_L10673_303 = 1 + $I_L10673_303
10673.                                     if ( $I_L10673_303 >= min( n_point_tile, 256 + 256 * $I_L10673_358 ) + -256 * $I_L10673_358 ) exit
10673.                                  enddo
10672.                                  $I_L10672_405 = 1 + $I_L10672_405
10672.                                  if ( $I_L10672_405 >= min( n_deg_fit, 256 + 256 * $I_L10672_374 ) + -$I_L10672_343 + -256 * $I_L10672_374 ) exit
10672.                               enddo
10672.                            endif
10673.                            $I_L10673_358 = 1 + $I_L10673_358
10676.                            if ( $I_L10673_358 >= 1 + max( 0, -1 + _rsh( 255 + n_point_tile, 8 ) ) ) exit
10676.                         enddo
10672.                         $I_L10672_374 = 1 + $I_L10672_374
10672.                         if ( $I_L10672_374 >= 1 + max( 0, -1 + _rsh( 255 + n_deg_fit, 8 ) ) ) exit
10672.                      enddo
10672.                   endif
10672.                endif
10678.                $I_L10667_380 = 1 + $I_L10667_380
10677.                if ( $I_L10667_380 >= n_tile ) exit
10677.             enddo
10677.          endif
10680.          if ( n_point_tile > 0 ) then
10680.             $I_L10680_306 = 0
10680. !dir$ ivdep
10680.             do
10681.                planck_ground(list_tile(1 + $I_L10680_306)) = frac_tile(1 + $I_L10680_306, 1) * planck_flux_tile(1 + $I_L10680_306, 1)
10683.                $I_L10680_306 = 1 + $I_L10680_306
10680.                if ( $I_L10680_306 >= n_point_tile ) exit
10680.             enddo
10680.          endif
10684.          if ( -2 + n_tile >= 0 ) then
10685.             if ( n_point_tile > 0 ) then
10684.                $I_L10684_321 = 0
10684.                do
10685.                   $I_L10685_308 = 0
10685. !dir$ ivdep
10685.                   do
10686.                      planck_ground(list_tile(1 + $I_L10685_308)) = _vu_plus( planck_ground(list_tile(1 + $I_L10685_308)), planck_flux_tile(1 + $I_L10685_308, 2 + $I_L10684_321) * frac_tile(1 + $I_L10685_308, 2 + $I_L10684_321) )
10688.                      $I_L10685_308 = 1 + $I_L10685_308
10685.                      if ( $I_L10685_308 >= n_point_tile ) exit
10685.                   enddo
10689.                   $I_L10684_321 = 1 + $I_L10684_321
10688.                   if ( $I_L10684_321 >= -1 + n_tile ) exit
10688.                enddo
10688.             endif
10688.          endif
10688.       endif
10368.       _free( t$1914 )
10696.       return
10696.       end
10696.       
10720.       
10720.       subroutine eigenvalue_tri( n_matrix, n_in, d, e, tol, n_max_iteration, nd_matrix )
10720.       t$277 = nd_matrix
10720.       t$278 = n_in
10754.       t$1920 = _zla( 0, nd_matrix )
10720.       t$1921 = _zla( 0, nd_matrix )
10754.       t$1922 = _zla( 0, n_in )
10720.       t$1923 = _zla( 0, nd_matrix ) * _zla( 0, n_in )
10720.       t$279 = n_matrix
10794.       t$1924 = _zla( 0, n_matrix )
10794.       t$1927 = 8 * _zla( 0, n_matrix )
10776.       t$1928 = 8 * ( 7 + 8 * _zla( 0, n_matrix ) ) / 8
10776.       t$1930 = t$1928 + 8 * _zla( 0, n_matrix )
10774.       t$1931 = 8 * ( 7 + t$1928 + 8 * _zla( 0, n_matrix ) ) / 8
10774.       t$1933 = t$1931 + 8 * _zla( 0, n_matrix )
10792.       t$1934 = 8 * ( 7 + t$1931 + 8 * _zla( 0, n_matrix ) ) / 8
10792.       t$1936 = t$1934 + 8 * _zla( 0, n_matrix )
10800.       t$1937 = 8 * ( 7 + t$1934 + 8 * _zla( 0, n_matrix ) ) / 8
10800.       t$1939 = t$1937 + 8 * _zla( 0, n_matrix )
10802.       t$1940 = 8 * ( 7 + t$1937 + 8 * _zla( 0, n_matrix ) ) / 8
10802.       t$1942 = t$1940 + 8 * _zla( 0, n_matrix )
10720.       t$1925 = int( _alloc( t$1940 + 8 * _zla( 0, n_matrix ) ), 8 )
10794.       t$1926 = t$1925
10776.       t$1929 = t$1928 + t$1925
10774.       t$1932 = t$1931 + t$1925
10792.       t$1935 = t$1934 + t$1925
10800.       t$1938 = t$1937 + t$1925
10802.       t$1941 = t$1940 + t$1925
10816.       $n_S2 = n_in
10817.       abs_e = 0.0
10818.       if ( n_matrix > 0 ) then
10818.          $I_L10818_116 = 0
10818. !dir$ ivdep
10818.          do
10830.             shift(1 + $I_L10818_116) = 0.0
10819.             abs_e = max( abs_e, abs( e(1 + $I_L10818_116, n_in) ) )
10820.             $I_L10818_116 = 1 + $I_L10818_116
10818.             if ( $I_L10818_116 >= n_matrix ) exit
10818.          enddo
10818.       endif
10821.       if ( ( n_in > 1 .and. abs_e < tol ) /= .false. ) then
10823.          if ( n_matrix > 0 ) then
10823.             do
10822.                $n_S2 = -1 + $n_S2
10823.                $I_L10823_118 = 0
10823. !dir$ ivdep
10823.                do
10824.                   abs_e = max( abs_e, abs( e(1 + $I_L10823_118, $n_S2) ) )
10825.                   $I_L10823_118 = 1 + $I_L10823_118
10823.                   if ( $I_L10823_118 >= n_matrix ) exit
10823.                enddo
10825.                if ( ( $n_S2 > 1 .and. abs_e < tol ) == .false. ) exit
10825.             enddo
10825.          else
10825.             do
10822.                $n_S2 = -1 + $n_S2
10822.                if ( ( $n_S2 > 1 .and. abs_e < tol ) == .false. ) exit
10822.             enddo
10822.          endif
10822.       endif
10828.       $iteration_S4 = 0
10834.       if ( ( $n_S2 > 1 .and. 0 < n_max_iteration ) /= .false. ) then
10826.          do
10837.             $iteration_S4 = 1 + $iteration_S4
10842.             if ( n_matrix > 0 ) then
10842.                $I_L10842_120 = 0
10842. !dir$ ivdep
10842.                do
10843.                   $b_S6 = d(1 + $I_L10842_120, -1 + $n_S2) + d(1 + $I_L10842_120, $n_S2)
10844.                   $c_S7 = -( e(1 + $I_L10842_120, $n_S2) * e(1 + $I_L10842_120, $n_S2) ) + d(1 + $I_L10842_120, -1 + $n_S2) * d(1 + $I_L10842_120, $n_S2)
10856.                   $d_shift_WR0_R0 = cvmg( ( $c_S7 * 1.0/( 5.0e-1 * ( $b_S6 + sign( _sqrt( $b_S6 * $b_S6 + -4.0 * $c_S7 ), $b_S6 ) ) ) ), ( 5.0e-1 * ( $b_S6 + sign( _sqrt( $b_S6 * $b_S6 + -4.0 * $c_S7 ), $b_S6 ) ) ), abs( ( 5.0e-1 * ( $b_S6 + sign( _sqrt( $b_S6 * $b_S6 + -4.0 * $c_S7 ), $b_S6 ) ) ) + -d(1 + $I_L10842_120, $n_S2) ) >= abs( ( $c_S7 * 1.0/( 5.0e-1 * ( $b_S6 + sign( _sqrt( $b_S6 * $b_S6 + -4.0 * $c_S7 ), $b_S6 ) ) ) ) + -d(1 + $I_L10842_120, $n_S2) ) )
10856.                   d_shift(1 + $I_L10842_120) = $d_shift_WR0_R0
10886.                   sup_diag(1 + $I_L10842_120) = e(1 + $I_L10842_120, 2)
10887.                   cosr(1 + $I_L10842_120) = 1.0
10888.                   sinr(1 + $I_L10842_120) = 0.0
10862.                   shift(1 + $I_L10842_120) = $d_shift_WR0_R0 + shift(1 + $I_L10842_120)
10863.                   $I_L10842_120 = 1 + $I_L10842_120
10842.                   if ( $I_L10842_120 >= n_matrix ) exit
10842.                enddo
10842.             endif
10866.             if ( $n_S2 > 0 ) then
10867.                if ( n_matrix > 0 ) then
10866.                   $I_L10866_150 = 0
10866.                   do
10867.                      $I_L10867_146 = 0
10867.                      do
10866.                         $I_L10866_154 = 0
10866. !dir$ shortloop16
10866. !dir$ blocking_size( 2, 2 )
10866.                         do
10867.                            $I_L10867_122 = 0
10867. !dir$ ivdep
10867. !dir$ blocking_size( 256, 256 )
10867.                            do
10868.                               d(1 + $I_L10867_122 + 256 * $I_L10867_146, 1 + $I_L10866_154 + 2 * $I_L10866_150) = d(1 + $I_L10867_122 + 256 * $I_L10867_146, 1 + $I_L10866_154 + 2 * $I_L10866_150) + -d_shift(1 + $I_L10867_122 + 256 * $I_L10867_146)
10867.                               $I_L10867_122 = 1 + $I_L10867_122
10867.                               if ( $I_L10867_122 >= min( n_matrix, 256 + 256 * $I_L10867_146 ) + -256 * $I_L10867_146 ) exit
10867.                            enddo
10866.                            $I_L10866_154 = 1 + $I_L10866_154
10866.                            if ( $I_L10866_154 >= min( $n_S2, 2 + 2 * $I_L10866_150 ) + -2 * $I_L10866_150 ) exit
10866.                         enddo
10867.                         $I_L10867_146 = 1 + $I_L10867_146
10869.                         if ( $I_L10867_146 >= 1 + max( 0, -1 + _rsh( 255 + n_matrix, 8 ) ) ) exit
10869.                      enddo
10866.                      $I_L10866_150 = 1 + $I_L10866_150
10866.                      if ( $I_L10866_150 >= 1 + max( 0, -1 + _rsh( 1 + $n_S2, 1 ) ) ) exit
10866.                   enddo
10866.                endif
10866.             endif
10891.             if ( -2 + $n_S2 >= 0 ) then
10893.                if ( n_matrix > 0 ) then
10922.                   if ( 0 < -2 + $n_S2 ) then
10891.                      $I_L10891_152 = 0
10891.                      do
10893.                         $I_L10893_148 = 0
10893.                         do
10891.                            $I_L10891_143 = 0
10891.                            if ( min( -2 + $n_S2, 2 + 2 * $I_L10891_152 ) + -2 * $I_L10891_152 >= 2 ) then
10891.                               $I_L10891_156 = 0
10891. !dir$ shortloop16
10891. !dir$ blocking_size( 2, 2 )
10891.                               do
10893.                                  $I_L10893_125 = 0
10893. !dir$ ivdep
10893. !dir$ blocking_size( 256, 256 )
10893.                                  do
10902.                                     $sq_S13 = _sqrt( d(1 + $I_L10893_125 + 256 * $I_L10893_148, 1 + 2 * $I_L10891_152 + 2 * $I_L10891_156) * d(1 + $I_L10893_125 + 256 * $I_L10893_148, 1 + 2 * $I_L10891_152 + 2 * $I_L10891_156) + e(1 + $I_L10893_125 + 256 * $I_L10893_148, 2 + 2 * $I_L10891_152 + 2 * $I_L10891_156) * e(1 + $I_L10893_125 + 256 * $I_L10893_148, 2 + 2 * $I_L10891_152 + 2 * $I_L10891_156) )
10903.                                     e(1 + $I_L10893_125 + 256 * $I_L10893_148, 1 + 2 * $I_L10891_152 + 2 * $I_L10891_156) = $sq_S13 * sinr(1 + $I_L10893_125 + 256 * $I_L10893_148)
10904.                                     $LD_SPLT_P1 = e(1 + $I_L10893_125 + 256 * $I_L10893_148, 2 + 2 * $I_L10891_152 + 2 * $I_L10891_156)
10904.                                     sinr(1 + $I_L10893_125 + 256 * $I_L10893_148) = ( $LD_SPLT_P1 * 1.0/$sq_S13 )
10905.                                     $cosr_temp_S14 = ( d(1 + $I_L10893_125 + 256 * $I_L10893_148, 1 + 2 * $I_L10891_152 + 2 * $I_L10891_156) * 1.0/$sq_S13 )
10911.                                     $sup_diag_old_WR0_R2 = sup_diag(1 + $I_L10893_125 + 256 * $I_L10893_148)
10911.                                     sup_diag_old(1 + $I_L10893_125 + 256 * $I_L10893_148) = $sup_diag_old_WR0_R2
10912.                                     $sup_diag_WR0_R1 = $cosr_temp_S14 * $sup_diag_old_WR0_R2 + d(1 + $I_L10893_125 + 256 * $I_L10893_148, 2 + 2 * $I_L10891_152 + 2 * $I_L10891_156) * ( $LD_SPLT_P1 * 1.0/$sq_S13 )
10912.                                     sup_diag(1 + $I_L10893_125 + 256 * $I_L10893_148) = $sup_diag_WR0_R1
10913.                                     d(1 + $I_L10893_125 + 256 * $I_L10893_148, 1 + 2 * $I_L10891_152 + 2 * $I_L10891_156) = $sup_diag_WR0_R1 * ( $LD_SPLT_P1 * 1.0/$sq_S13 ) + cosr(1 + $I_L10893_125 + 256 * $I_L10893_148) * d(1 + $I_L10893_125 + 256 * $I_L10893_148, 1 + 2 * $I_L10891_152 + 2 * $I_L10891_156)
10914.                                     cosr(1 + $I_L10893_125 + 256 * $I_L10893_148) = $cosr_temp_S14
10918.                                     $LD_SPLT_P2 = e(1 + $I_L10893_125 + 256 * $I_L10893_148, 3 + 2 * $I_L10891_152 + 2 * $I_L10891_156)
10918.                                     sup_diag(1 + $I_L10893_125 + 256 * $I_L10893_148) = ( $cosr_temp_S14 * $LD_SPLT_P2 )
10917.                                     $LD_SPLT_P7 = d(1 + $I_L10893_125 + 256 * $I_L10893_148, 2 + 2 * $I_L10891_152 + 2 * $I_L10891_156)
10917.                                     d(1 + $I_L10893_125 + 256 * $I_L10893_148, 2 + 2 * $I_L10891_152 + 2 * $I_L10891_156) = -( $sup_diag_old_WR0_R2 * ( $LD_SPLT_P1 * 1.0/$sq_S13 ) ) + $cosr_temp_S14 * $LD_SPLT_P7
10902.                                     $sq_S13 = _sqrt( $LD_SPLT_P2 * $LD_SPLT_P2 + ( -( $sup_diag_old_WR0_R2 * ( $LD_SPLT_P1 * 1.0/$sq_S13 ) ) + $cosr_temp_S14 * $LD_SPLT_P7 ) * ( -( $sup_diag_old_WR0_R2 * ( $LD_SPLT_P1 * 1.0/$sq_S13 ) ) + $cosr_temp_S14 * $LD_SPLT_P7 ) )
10903.                                     e(1 + $I_L10893_125 + 256 * $I_L10893_148, 2 + 2 * $I_L10891_152 + 2 * $I_L10891_156) = $sq_S13 * sinr(1 + $I_L10893_125 + 256 * $I_L10893_148)
10904.                                     $LD_SPLT_P1 = e(1 + $I_L10893_125 + 256 * $I_L10893_148, 3 + 2 * $I_L10891_152 + 2 * $I_L10891_156)
10904.                                     sinr(1 + $I_L10893_125 + 256 * $I_L10893_148) = ( $LD_SPLT_P1 * 1.0/$sq_S13 )
10905.                                     $cosr_temp_S14 = ( d(1 + $I_L10893_125 + 256 * $I_L10893_148, 2 + 2 * $I_L10891_152 + 2 * $I_L10891_156) * 1.0/$sq_S13 )
10911.                                     $sup_diag_old_WR0_R2 = sup_diag(1 + $I_L10893_125 + 256 * $I_L10893_148)
10911.                                     sup_diag_old(1 + $I_L10893_125 + 256 * $I_L10893_148) = $sup_diag_old_WR0_R2
10912.                                     $sup_diag_WR0_R1 = $cosr_temp_S14 * $sup_diag_old_WR0_R2 + d(1 + $I_L10893_125 + 256 * $I_L10893_148, 3 + 2 * $I_L10891_152 + 2 * $I_L10891_156) * ( $LD_SPLT_P1 * 1.0/$sq_S13 )
10912.                                     sup_diag(1 + $I_L10893_125 + 256 * $I_L10893_148) = $sup_diag_WR0_R1
10913.                                     d(1 + $I_L10893_125 + 256 * $I_L10893_148, 2 + 2 * $I_L10891_152 + 2 * $I_L10891_156) = $sup_diag_WR0_R1 * ( $LD_SPLT_P1 * 1.0/$sq_S13 ) + cosr(1 + $I_L10893_125 + 256 * $I_L10893_148) * d(1 + $I_L10893_125 + 256 * $I_L10893_148, 2 + 2 * $I_L10891_152 + 2 * $I_L10891_156)
10914.                                     cosr(1 + $I_L10893_125 + 256 * $I_L10893_148) = $cosr_temp_S14
10918.                                     $LD_SPLT_P2 = e(1 + $I_L10893_125 + 256 * $I_L10893_148, 4 + 2 * $I_L10891_152 + 2 * $I_L10891_156)
10918.                                     sup_diag(1 + $I_L10893_125 + 256 * $I_L10893_148) = ( $cosr_temp_S14 * $LD_SPLT_P2 )
10917.                                     $LD_SPLT_P7 = d(1 + $I_L10893_125 + 256 * $I_L10893_148, 3 + 2 * $I_L10891_152 + 2 * $I_L10891_156)
10917.                                     d(1 + $I_L10893_125 + 256 * $I_L10893_148, 3 + 2 * $I_L10891_152 + 2 * $I_L10891_156) = -( $sup_diag_old_WR0_R2 * ( $LD_SPLT_P1 * 1.0/$sq_S13 ) ) + $cosr_temp_S14 * $LD_SPLT_P7
10893.                                     $I_L10893_125 = 1 + $I_L10893_125
10918.                                     if ( $I_L10893_125 >= min( n_matrix, 256 + 256 * $I_L10893_148 ) + -256 * $I_L10893_148 ) exit
10918.                                  enddo
10891.                                  $I_L10891_156 = 1 + $I_L10891_156
10891.                                  if ( $I_L10891_156 >= _rsh( min( -2 + $n_S2, 2 + 2 * $I_L10891_152 ) + -2 * $I_L10891_152, 1 ) ) exit
10891.                               enddo
10891.                               $I_L10891_143 = and( 0xfffffffffffffffeUL, min( -2 + $n_S2, 2 + 2 * $I_L10891_152 ) + -2 * $I_L10891_152 )
10891.                            endif
10891.                            if ( $I_L10891_143 < min( -2 + $n_S2, 2 + 2 * $I_L10891_152 ) + -2 * $I_L10891_152 ) then
10893.                               $I_L10893_125 = 0
10893. !dir$ ivdep
10893. !dir$ blocking_size( 256, 256 )
10893.                               do
10902.                                  $sq_S13 = _sqrt( e(1 + $I_L10893_125 + 256 * $I_L10893_148, 2 + $I_L10891_143 + 2 * $I_L10891_152) * e(1 + $I_L10893_125 + 256 * $I_L10893_148, 2 + $I_L10891_143 + 2 * $I_L10891_152) + d(1 + $I_L10893_125 + 256 * $I_L10893_148, 1 + $I_L10891_143 + 2 * $I_L10891_152) * d(1 + $I_L10893_125 + 256 * $I_L10893_148, 1 + $I_L10891_143 + 2 * $I_L10891_152) )
10903.                                  e(1 + $I_L10893_125 + 256 * $I_L10893_148, 1 + $I_L10891_143 + 2 * $I_L10891_152) = $sq_S13 * sinr(1 + $I_L10893_125 + 256 * $I_L10893_148)
10904.                                  $LD_SPLT_P1 = e(1 + $I_L10893_125 + 256 * $I_L10893_148, 2 + $I_L10891_143 + 2 * $I_L10891_152)
10904.                                  sinr(1 + $I_L10893_125 + 256 * $I_L10893_148) = ( $LD_SPLT_P1 * 1.0/$sq_S13 )
10905.                                  $cosr_temp_S14 = ( d(1 + $I_L10893_125 + 256 * $I_L10893_148, 1 + $I_L10891_143 + 2 * $I_L10891_152) * 1.0/$sq_S13 )
10911.                                  $sup_diag_old_WR0_R2 = sup_diag(1 + $I_L10893_125 + 256 * $I_L10893_148)
10911.                                  sup_diag_old(1 + $I_L10893_125 + 256 * $I_L10893_148) = $sup_diag_old_WR0_R2
10912.                                  $sup_diag_WR0_R1 = $cosr_temp_S14 * $sup_diag_old_WR0_R2 + d(1 + $I_L10893_125 + 256 * $I_L10893_148, 2 + $I_L10891_143 + 2 * $I_L10891_152) * ( $LD_SPLT_P1 * 1.0/$sq_S13 )
10912.                                  sup_diag(1 + $I_L10893_125 + 256 * $I_L10893_148) = $sup_diag_WR0_R1
10913.                                  d(1 + $I_L10893_125 + 256 * $I_L10893_148, 1 + $I_L10891_143 + 2 * $I_L10891_152) = $sup_diag_WR0_R1 * ( $LD_SPLT_P1 * 1.0/$sq_S13 ) + cosr(1 + $I_L10893_125 + 256 * $I_L10893_148) * d(1 + $I_L10893_125 + 256 * $I_L10893_148, 1 + $I_L10891_143 + 2 * $I_L10891_152)
10914.                                  cosr(1 + $I_L10893_125 + 256 * $I_L10893_148) = $cosr_temp_S14
10918.                                  $LD_SPLT_P2 = e(1 + $I_L10893_125 + 256 * $I_L10893_148, 3 + $I_L10891_143 + 2 * $I_L10891_152)
10918.                                  sup_diag(1 + $I_L10893_125 + 256 * $I_L10893_148) = ( $cosr_temp_S14 * $LD_SPLT_P2 )
10917.                                  $LD_SPLT_P7 = d(1 + $I_L10893_125 + 256 * $I_L10893_148, 2 + $I_L10891_143 + 2 * $I_L10891_152)
10917.                                  d(1 + $I_L10893_125 + 256 * $I_L10893_148, 2 + $I_L10891_143 + 2 * $I_L10891_152) = -( $sup_diag_old_WR0_R2 * ( $LD_SPLT_P1 * 1.0/$sq_S13 ) ) + $cosr_temp_S14 * $LD_SPLT_P7
10893.                                  $I_L10893_125 = 1 + $I_L10893_125
10918.                                  if ( $I_L10893_125 >= min( n_matrix, 256 + 256 * $I_L10893_148 ) + -256 * $I_L10893_148 ) exit
10918.                               enddo
10918.                            endif
10893.                            $I_L10893_148 = 1 + $I_L10893_148
10920.                            if ( $I_L10893_148 >= 1 + max( 0, -1 + _rsh( 255 + n_matrix, 8 ) ) ) exit
10920.                         enddo
10891.                         $I_L10891_152 = 1 + $I_L10891_152
10891.                         if ( $I_L10891_152 >= 1 + max( 0, -1 + _rsh( -1 + $n_S2, 1 ) ) ) exit
10891.                      enddo
10891.                   endif
10893.                   $I_L10893_138 = 0
10893. !dir$ ivdep
10893.                   do
10902.                      $sq_S13 = _sqrt( e(1 + $I_L10893_138, $n_S2) * e(1 + $I_L10893_138, $n_S2) + d(1 + $I_L10893_138, -1 + $n_S2) * d(1 + $I_L10893_138, -1 + $n_S2) )
10903.                      e(1 + $I_L10893_138, -1 + $n_S2) = $sq_S13 * sinr(1 + $I_L10893_138)
10904.                      $LD_SPLT_P8 = e(1 + $I_L10893_138, $n_S2)
10904.                      sinr(1 + $I_L10893_138) = ( $LD_SPLT_P8 * 1.0/$sq_S13 )
10905.                      $cosr_temp_S14 = ( d(1 + $I_L10893_138, -1 + $n_S2) * 1.0/$sq_S13 )
10911.                      sup_diag_old(1 + $I_L10893_138) = sup_diag(1 + $I_L10893_138)
10912.                      $sup_diag_WR0_R3 = $cosr_temp_S14 * sup_diag(1 + $I_L10893_138) + d(1 + $I_L10893_138, $n_S2) * ( $LD_SPLT_P8 * 1.0/$sq_S13 )
10912.                      sup_diag(1 + $I_L10893_138) = $sup_diag_WR0_R3
10913.                      d(1 + $I_L10893_138, -1 + $n_S2) = $sup_diag_WR0_R3 * ( $LD_SPLT_P8 * 1.0/$sq_S13 ) + d(1 + $I_L10893_138, -1 + $n_S2) * cosr(1 + $I_L10893_138)
10914.                      cosr(1 + $I_L10893_138) = $cosr_temp_S14
10917.                      $LD_SPLT_P12 = sup_diag_old(1 + $I_L10893_138)
10917.                      $LD_SPLT_P14 = d(1 + $I_L10893_138, $n_S2)
10917.                      d(1 + $I_L10893_138, $n_S2) = -( $LD_SPLT_P12 * ( $LD_SPLT_P8 * 1.0/$sq_S13 ) ) + $cosr_temp_S14 * $LD_SPLT_P14
10920.                      $I_L10893_138 = 1 + $I_L10893_138
10918.                      if ( $I_L10893_138 >= n_matrix ) exit
10918.                   enddo
10918.                endif
10918.             endif
10924.             if ( n_matrix > 0 ) then
10924.                $I_L10924_128 = 0
10924. !dir$ ivdep
10924.                do
10925.                   e(1 + $I_L10924_128, $n_S2) = sinr(1 + $I_L10924_128) * d(1 + $I_L10924_128, $n_S2)
10926.                   d(1 + $I_L10924_128, $n_S2) = d(1 + $I_L10924_128, $n_S2) * cosr(1 + $I_L10924_128)
10927.                   $I_L10924_128 = 1 + $I_L10924_128
10924.                   if ( $I_L10924_128 >= n_matrix ) exit
10924.                enddo
10924.             endif
10932.             abs_e = 0.0
10933.             if ( n_matrix > 0 ) then
10933.                $I_L10933_130 = 0
10933. !dir$ ivdep
10933.                do
10934.                   abs_e = max( abs_e, abs( e(1 + $I_L10933_130, $n_S2) ) )
10935.                   $I_L10933_130 = 1 + $I_L10933_130
10933.                   if ( $I_L10933_130 >= n_matrix ) exit
10933.                enddo
10933.             endif
10936.             if ( ( $n_S2 > 1 .and. abs_e < tol ) /= .false. ) then
10937.                if ( n_matrix > 0 ) then
10937.                   do
10937.                      $I_L10937_132 = 0
10937. !dir$ ivdep
10937.                      do
10938.                         d(1 + $I_L10937_132, $n_S2) = d(1 + $I_L10937_132, $n_S2) + shift(1 + $I_L10937_132)
10939.                         $I_L10937_132 = 1 + $I_L10937_132
10937.                         if ( $I_L10937_132 >= n_matrix ) exit
10937.                      enddo
10940.                      $n_S2 = -1 + $n_S2
10941.                      $I_L10941_134 = 0
10941. !dir$ ivdep
10941.                      do
10942.                         abs_e = max( abs_e, abs( e(1 + $I_L10941_134, $n_S2) ) )
10943.                         $I_L10941_134 = 1 + $I_L10941_134
10941.                         if ( $I_L10941_134 >= n_matrix ) exit
10941.                      enddo
10943.                      if ( ( $n_S2 > 1 .and. abs_e < tol ) == .false. ) exit
10943.                   enddo
10943.                else
10943.                   do
10940.                      $n_S2 = -1 + $n_S2
10940.                      if ( ( $n_S2 > 1 .and. abs_e < tol ) == .false. ) exit
10940.                   enddo
10940.                endif
10940.             endif
10944.             if ( ( $n_S2 > 1 .and. $iteration_S4 < n_max_iteration ) == .false. ) exit
10944.          enddo
10944.       endif
10951.       if ( $n_S2 > 1 ) then
10952.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$281,  _substr(t$280,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Warning: Convergence has not occurred while calculating eigenvalues.', 0x800600000000L ), _iotype( 'the calculation continues.', 0x800600000000L ) ) )
10956.       else if ( n_matrix > 0 ) then
10958.          $I_L10958_136 = 0
10958. !dir$ ivdep
10958.          do
10959.             d(1 + $I_L10958_136, 1) = d(1 + $I_L10958_136, 1) + shift(1 + $I_L10958_136)
10960.             $I_L10958_136 = 1 + $I_L10958_136
10958.             if ( $I_L10958_136 >= n_matrix ) exit
10958.          enddo
10958.       endif
10720.       _free( t$1925 )
10966.       return
10966.       end
10966.       
10992.       
10992.       subroutine eig_sys( n_profile, ls_trunc, ms, n_red_eigensystem, cg_coeff, sqs, mu, eig_vec, nd_profile, nd_red_eigensystem, nd_max_order )
10992.       t$282 = ( 1 + ls_trunc + -ms )
11029.       t$1943 = _zla( 0, ( 1 + ls_trunc + -ms ) )
10992.       t$283 = nd_profile
10992.       t$284 = nd_max_order
11031.       t$1944 = _zla( 0, nd_profile )
10992.       t$1945 = _zla( 0, nd_profile )
10992.       t$1946 = 1 + nd_max_order
11031.       t$1947 = _zla( 0, 1 + nd_max_order )
10992.       t$1948 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_max_order )
10992.       t$285 = nd_red_eigensystem
11034.       t$1949 = _zla( 0, nd_red_eigensystem )
10992.       t$1950 = _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem )
10992.       t$286 = ( 2 * nd_red_eigensystem )
11036.       t$1951 = _zla( 0, ( 2 * nd_red_eigensystem ) )
10992.       t$1952 = _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) )
10992.       t$1953 = _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem ) * _zla( 0, ( 2 * nd_red_eigensystem ) )
11061.       t$1956 = 8 * _zla( 0, nd_profile )
10992.       t$288 = n_red_eigensystem
11057.       t$1957 = _zla( 0, n_red_eigensystem )
10992.       t$1958 = _zla( 0, nd_profile ) * _zla( 0, n_red_eigensystem )
11057.       t$1959 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) ) / 8
11057.       t$1961 = t$1959 + 8 * _zla( 0, nd_profile ) * _zla( 0, n_red_eigensystem )
10992.       t$287 = ( 2 * n_red_eigensystem )
11055.       t$1962 = _zla( 0, ( 2 * n_red_eigensystem ) )
10992.       t$1963 = _zla( 0, nd_profile ) * _zla( 0, ( 2 * n_red_eigensystem ) )
11055.       t$1964 = 8 * ( 7 + t$1959 + 8 * _zla( 0, nd_profile ) * _zla( 0, n_red_eigensystem ) ) / 8
11055.       t$1966 = t$1964 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 2 * n_red_eigensystem ) )
11059.       t$1967 = 8 * ( 7 + t$1964 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 2 * n_red_eigensystem ) ) ) / 8
11059.       t$1969 = t$1967 + 8 * _zla( 0, nd_profile )
11064.       t$1970 = 8 * ( 7 + t$1967 + 8 * _zla( 0, nd_profile ) ) / 8
11064.       t$1972 = t$1970 + 8 * _zla( 0, nd_profile )
10992.       t$1954 = int( _alloc( t$1970 + 8 * _zla( 0, nd_profile ) ), 8 )
11061.       t$1955 = t$1954
11057.       t$1960 = t$1959 + t$1954
11055.       t$1965 = t$1964 + t$1954
11059.       t$1968 = t$1967 + t$1954
11064.       t$1971 = t$1970 + t$1954
11072.       tol = 2.2204460492503131e-14
11080.       if ( ls_trunc + -ms > 0 ) then
11082.          if ( n_profile > 0 ) then
11080.             $I_L11080_189 = 0
11080.             do
11082.                $I_L11082_179 = 0
11082.                do
11080.                   $I_L11080_201 = 0
11080. !dir$ shortloop16
11080. !dir$ blocking_size( 2, 2 )
11080.                   do
11082.                      $SCA_cg_coeff_I0 = cg_coeff(1 + $I_L11080_201 + 2 * $I_L11080_189)
11082.                      $I_L11082_139 = 0
11082. !dir$ ivdep
11082. !dir$ blocking_size( 256, 256 )
11082.                      do
11083.                         ec(1 + $I_L11082_139 + 256 * $I_L11082_179, 2 + $I_L11080_201 + 2 * $I_L11080_189) = ( $SCA_cg_coeff_I0 * 1.0/( sqs(1 + $I_L11082_139 + 256 * $I_L11082_179, ms + $I_L11080_201 + 2 * $I_L11080_189) * sqs(1 + $I_L11082_139 + 256 * $I_L11082_179, 1 + ms + $I_L11080_201 + 2 * $I_L11080_189) ) )
11082.                         $I_L11082_139 = 1 + $I_L11082_139
11082.                         if ( $I_L11082_139 >= min( n_profile, 256 + 256 * $I_L11082_179 ) + -256 * $I_L11082_179 ) exit
11082.                      enddo
11080.                      $I_L11080_201 = 1 + $I_L11080_201
11080.                      if ( $I_L11080_201 >= min( ( ls_trunc + -ms ), 2 + 2 * $I_L11080_189 ) + -2 * $I_L11080_189 ) exit
11080.                   enddo
11082.                   $I_L11082_179 = 1 + $I_L11082_179
11084.                   if ( $I_L11082_179 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
11084.                enddo
11080.                $I_L11080_189 = 1 + $I_L11080_189
11080.                if ( $I_L11080_189 >= 1 + max( 0, -1 + _rsh( 1 + ls_trunc + -ms, 1 ) ) ) exit
11080.             enddo
11080.          endif
11080.       endif
11090.       if ( n_profile > 0 ) then
11090.          $I_L11090_142 = 0
11090. !dir$ ivdep
11090.          do
11091.             mu(1 + $I_L11090_142, 1) = ec(1 + $I_L11090_142, 2) * ec(1 + $I_L11090_142, 2)
11092.             $I_L11090_142 = 1 + $I_L11090_142
11090.             if ( $I_L11090_142 >= n_profile ) exit
11090.          enddo
11090.       endif
11093.       if ( -2 + n_red_eigensystem >= 0 ) then
11094.          if ( n_profile > 0 ) then
11093.             $I_L11093_191 = 0
11093.             do
11094.                $I_L11094_181 = 0
11094.                do
11093.                   $I_L11093_203 = 0
11093. !dir$ shortloop16
11093. !dir$ blocking_size( 2, 2 )
11093.                   do
11094.                      $I_L11094_144 = 0
11094. !dir$ ivdep
11094. !dir$ blocking_size( 256, 256 )
11094.                      do
11095.                         mu(1 + $I_L11094_144 + 256 * $I_L11094_181, 2 + $I_L11093_203 + 2 * $I_L11093_191) = ec(1 + $I_L11094_144 + 256 * $I_L11094_181, 4 + 4 * $I_L11093_191 + 2 * $I_L11093_203) * ec(1 + $I_L11094_144 + 256 * $I_L11094_181, 4 + 4 * $I_L11093_191 + 2 * $I_L11093_203) + ec(1 + $I_L11094_144 + 256 * $I_L11094_181, 3 + 4 * $I_L11093_191 + 2 * $I_L11093_203) * ec(1 + $I_L11094_144 + 256 * $I_L11094_181, 3 + 4 * $I_L11093_191 + 2 * $I_L11093_203)
11096.                         e(1 + $I_L11094_144 + 256 * $I_L11094_181, 2 + $I_L11093_203 + 2 * $I_L11093_191) = ec(1 + $I_L11094_144 + 256 * $I_L11094_181, 3 + 4 * $I_L11093_191 + 2 * $I_L11093_203) * ec(1 + $I_L11094_144 + 256 * $I_L11094_181, 2 + 4 * $I_L11093_191 + 2 * $I_L11093_203)
11094.                         $I_L11094_144 = 1 + $I_L11094_144
11094.                         if ( $I_L11094_144 >= min( n_profile, 256 + 256 * $I_L11094_181 ) + -256 * $I_L11094_181 ) exit
11094.                      enddo
11093.                      $I_L11093_203 = 1 + $I_L11093_203
11093.                      if ( $I_L11093_203 >= min( -1 + n_red_eigensystem, 2 + 2 * $I_L11093_191 ) + -2 * $I_L11093_191 ) exit
11093.                   enddo
11094.                   $I_L11094_181 = 1 + $I_L11094_181
11097.                   if ( $I_L11094_181 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
11097.                enddo
11093.                $I_L11093_191 = 1 + $I_L11093_191
11093.                if ( $I_L11093_191 >= 1 + max( 0, -1 + _rsh( n_red_eigensystem, 1 ) ) ) exit
11093.             enddo
11093.          endif
11093.       endif
11104.       if ( n_red_eigensystem > 1 ) then
11108.          n_max_qr_iteration = 25 + ls_trunc
11109.          call eigenvalue_tri( n_profile, n_red_eigensystem, mu(1, 1), e(1, 1), tol, n_max_qr_iteration, nd_profile )
11109.       endif
11114.       if ( n_red_eigensystem > 0 ) then
11114.          $I_L11114_199 = 0
11114.          do
11115.             if ( n_profile > 0 ) then
11115.                $I_L11115_147 = 0
11115. !dir$ ivdep
11115.                do
11116.                   $mu_WR0_R0 = _sqrt( mu(1 + $I_L11115_147, 1 + $I_L11114_199) )
11116.                   mu(1 + $I_L11115_147, 1 + $I_L11114_199) = $mu_WR0_R0
11117.                   if ( $mu_WR0_R0 > 1.0 ) then
11118.                      c_ratio(1 + $I_L11115_147) = ( 5.0e-1 * 1.0/$mu_WR0_R0 )
11118.                   else
11120.                      c_ratio(1 + $I_L11115_147) = 1.0
11120.                   endif
11122.                   $I_L11115_147 = 1 + $I_L11115_147
11121.                   if ( $I_L11115_147 >= n_profile ) exit
11121.                enddo
11142.                $I_L11142_149 = 0
11142. !dir$ ivdep
11142.                do
11143.                   eig_vec(1 + $I_L11142_149, 2 * n_red_eigensystem, 1 + $I_L11114_199) = 1.0
11147.                   eig_vec(1 + $I_L11142_149, -1 + 2 * n_red_eigensystem, 1 + $I_L11114_199) = ( mu(1 + $I_L11142_149, 1 + $I_L11114_199) * c_ratio(1 + $I_L11142_149) * 1.0/ec(1 + $I_L11142_149, 2 * n_red_eigensystem) )
11144.                   $I_L11142_149 = 1 + $I_L11142_149
11142.                   if ( $I_L11142_149 >= n_profile ) exit
11142.                enddo
11142.             endif
11149.             if ( -2 + 2 * n_red_eigensystem > 0 ) then
11151.                if ( n_profile > 0 ) then
11149.                   $I_j_193 = 0
11149.                   do
11151.                      $I_L11151_183 = 0
11151.                      do
11149.                         $I_j_170 = 0
11149.                         if ( min( -2 + 2 * n_red_eigensystem, 2 + 2 * $I_j_193 ) + -2 * $I_j_193 >= 2 ) then
11149.                            $I_j_209 = 0
11149. !dir$ shortloop16
11149. !dir$ blocking_size( 2, 2 )
11149.                            do
11151.                               $I_L11151_151 = 0
11151. !dir$ ivdep
11151. !dir$ blocking_size( 256, 256 )
11151.                               do
11152.                                  eig_vec(1 + $I_L11151_151 + 256 * $I_L11151_183, -2 + 2 * n_red_eigensystem + -2 * $I_j_193 + -2 * $I_j_209, 1 + $I_L11114_199) = ( c_ratio(1 + $I_L11151_151 + 256 * $I_L11151_183) * ( -( ec(1 + $I_L11151_151 + 256 * $I_L11151_183, 2 * n_red_eigensystem + -2 * $I_j_193 + -2 * $I_j_209) * c_ratio(1 + $I_L11151_151 + 256 * $I_L11151_183) * eig_vec(1 + $I_L11151_151 + 256 * $I_L11151_183, 2 * n_red_eigensystem + -2 * $I_j_193 + -2 * $I_j_209, 1 + $I_L11114_199) ) + mu(1 + $I_L11151_151 + 256 * $I_L11151_183, 1 + $I_L11114_199) * eig_vec(1 + $I_L11151_151 + 256 * $I_L11151_183, -1 + 2 * n_red_eigensystem + -2 * $I_j_193 + -2 * $I_j_209, 1 + $I_L11114_199) ) * 1.0/ec(1 + $I_L11151_151 + 256 * $I_L11151_183, -1 + 2 * n_red_eigensystem + -2 * $I_j_193 + -2 * $I_j_209) )
11152.                                  eig_vec(1 + $I_L11151_151 + 256 * $I_L11151_183, -3 + 2 * n_red_eigensystem + -2 * $I_j_193 + -2 * $I_j_209, 1 + $I_L11114_199) = ( c_ratio(1 + $I_L11151_151 + 256 * $I_L11151_183) * 1.0/ec(1 + $I_L11151_151 + 256 * $I_L11151_183, -2 + 2 * n_red_eigensystem + -2 * $I_j_193 + -2 * $I_j_209) * ( -( ec(1 + $I_L11151_151 + 256 * $I_L11151_183, -1 + 2 * n_red_eigensystem + -2 * $I_j_193 + -2 * $I_j_209) * c_ratio(1 + $I_L11151_151 + 256 * $I_L11151_183) * eig_vec(1 + $I_L11151_151 + 256 * $I_L11151_183, -1 + 2 * n_red_eigensystem + -2 * $I_j_193 + -2 * $I_j_209, 1 + $I_L11114_199) ) + mu(1 + $I_L11151_151 + 256 * $I_L11151_183, 1 + $I_L11114_199) * eig_vec(1 + $I_L11151_151 + 256 * $I_L11151_183, -2 + 2 * n_red_eigensystem + -2 * $I_j_193 + -2 * $I_j_209, 1 + $I_L11114_199) ) )
11151.                                  $I_L11151_151 = 1 + $I_L11151_151
11151.                                  if ( $I_L11151_151 >= min( n_profile, 256 + 256 * $I_L11151_183 ) + -256 * $I_L11151_183 ) exit
11151.                               enddo
11149.                               $I_j_209 = 1 + $I_j_209
11149.                               if ( $I_j_209 >= _rsh( min( -2 + 2 * n_red_eigensystem, 2 + 2 * $I_j_193 ) + -2 * $I_j_193, 1 ) ) exit
11149.                            enddo
11149.                            $I_j_170 = and( 0xfffffffffffffffeUL, min( -2 + 2 * n_red_eigensystem, 2 + 2 * $I_j_193 ) + -2 * $I_j_193 )
11149.                         endif
11149.                         if ( $I_j_170 < min( -2 + 2 * n_red_eigensystem, 2 + 2 * $I_j_193 ) + -2 * $I_j_193 ) then
11151.                            $I_L11151_151 = 0
11151. !dir$ ivdep
11151. !dir$ blocking_size( 256, 256 )
11151.                            do
11152.                               eig_vec(1 + $I_L11151_151 + 256 * $I_L11151_183, -2 + -$I_j_170 + 2 * n_red_eigensystem + -2 * $I_j_193, 1 + $I_L11114_199) = ( c_ratio(1 + $I_L11151_151 + 256 * $I_L11151_183) * 1.0/ec(1 + $I_L11151_151 + 256 * $I_L11151_183, -1 + -$I_j_170 + 2 * n_red_eigensystem + -2 * $I_j_193) * ( -( ec(1 + $I_L11151_151 + 256 * $I_L11151_183, -$I_j_170 + 2 * n_red_eigensystem + -2 * $I_j_193) * c_ratio(1 + $I_L11151_151 + 256 * $I_L11151_183) * eig_vec(1 + $I_L11151_151 + 256 * $I_L11151_183, -$I_j_170 + 2 * n_red_eigensystem + -2 * $I_j_193, 1 + $I_L11114_199) ) + eig_vec(1 + $I_L11151_151 + 256 * $I_L11151_183, -1 + -$I_j_170 + 2 * n_red_eigensystem + -2 * $I_j_193, 1 + $I_L11114_199) * mu(1 + $I_L11151_151 + 256 * $I_L11151_183, 1 + $I_L11114_199) ) )
11151.                               $I_L11151_151 = 1 + $I_L11151_151
11151.                               if ( $I_L11151_151 >= min( n_profile, 256 + 256 * $I_L11151_183 ) + -256 * $I_L11151_183 ) exit
11151.                            enddo
11151.                         endif
11151.                         $I_L11151_183 = 1 + $I_L11151_183
11156.                         if ( $I_L11151_183 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
11156.                      enddo
11149.                      $I_j_193 = 1 + $I_j_193
11149.                      if ( $I_j_193 >= 1 + max( 0, -1 + _rsh( -1 + 2 * n_red_eigensystem, 1 ) ) ) exit
11149.                   enddo
11149.                endif
11149.             endif
11161.             if ( n_profile > 0 ) then
11161.                $I_L11161_154 = 0
11161. !dir$ ivdep
11161.                do
11162.                   $rescale_WR0_R1 = c_ratio(1 + $I_L11161_154)
11162.                   rescale(1 + $I_L11161_154) = $rescale_WR0_R1
11163.                   $eig_vec_WR0_R2 = $rescale_WR0_R1 * eig_vec(1 + $I_L11161_154, 1, 1 + $I_L11114_199)
11163.                   eig_vec(1 + $I_L11161_154, 1, 1 + $I_L11114_199) = $eig_vec_WR0_R2
11164.                   normalization(1 + $I_L11161_154) = $eig_vec_WR0_R2 * $eig_vec_WR0_R2
11165.                   $I_L11161_154 = 1 + $I_L11161_154
11161.                   if ( $I_L11161_154 >= n_profile ) exit
11161.                enddo
11161.             endif
11166.             if ( -2 + 2 * n_red_eigensystem >= 0 ) then
11167.                if ( n_profile > 0 ) then
11166.                   $I_L11166_195 = 0
11166.                   do
11167.                      $I_L11167_185 = 0
11167.                      do
11166.                         $I_L11166_205 = 0
11166. !dir$ shortloop16
11166. !dir$ blocking_size( 2, 2 )
11166.                         do
11167.                            $I_L11167_156 = 0
11167. !dir$ ivdep
11167. !dir$ blocking_size( 256, 256 )
11167.                            do
11168.                               $rescale_WR0_R3 = rescale(1 + $I_L11167_156 + 256 * $I_L11167_185) * c_ratio(1 + $I_L11167_156 + 256 * $I_L11167_185)
11168.                               rescale(1 + $I_L11167_156 + 256 * $I_L11167_185) = $rescale_WR0_R3
11169.                               $eig_vec_WR0_R4 = $rescale_WR0_R3 * eig_vec(1 + $I_L11167_156 + 256 * $I_L11167_185, 2 + $I_L11166_205 + 2 * $I_L11166_195, 1 + $I_L11114_199)
11169.                               eig_vec(1 + $I_L11167_156 + 256 * $I_L11167_185, 2 + $I_L11166_205 + 2 * $I_L11166_195, 1 + $I_L11114_199) = $eig_vec_WR0_R4
11170.                               normalization(1 + $I_L11167_156 + 256 * $I_L11167_185) = normalization(1 + $I_L11167_156 + 256 * $I_L11167_185) + $eig_vec_WR0_R4 * $eig_vec_WR0_R4
11167.                               $I_L11167_156 = 1 + $I_L11167_156
11167.                               if ( $I_L11167_156 >= min( n_profile, 256 + 256 * $I_L11167_185 ) + -256 * $I_L11167_185 ) exit
11167.                            enddo
11166.                            $I_L11166_205 = 1 + $I_L11166_205
11166.                            if ( $I_L11166_205 >= min( -1 + 2 * n_red_eigensystem, 2 + 2 * $I_L11166_195 ) + -2 * $I_L11166_195 ) exit
11166.                         enddo
11167.                         $I_L11167_185 = 1 + $I_L11167_185
11172.                         if ( $I_L11167_185 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
11172.                      enddo
11166.                      $I_L11166_195 = 1 + $I_L11166_195
11166.                      if ( $I_L11166_195 >= 1 + max( 0, -1 + _rsh( ( 2 * n_red_eigensystem ), 1 ) ) ) exit
11166.                   enddo
11166.                endif
11166.             endif
11174.             if ( n_profile > 0 ) then
11174.                $I_L11174_159 = 0
11174. !dir$ ivdep
11174.                do
11175.                   normalization(1 + $I_L11174_159) = _sqrt( 1.0/normalization(1 + $I_L11174_159) )
11176.                   $I_L11174_159 = 1 + $I_L11174_159
11174.                   if ( $I_L11174_159 >= n_profile ) exit
11174.                enddo
11174.             endif
11177.             if ( 2 * n_red_eigensystem > 0 ) then
11178.                if ( n_profile > 0 ) then
11177.                   $I_L11177_197 = 0
11177.                   do
11178.                      $I_L11178_187 = 0
11178.                      do
11177.                         $I_L11177_207 = 0
11177. !dir$ shortloop16
11177. !dir$ blocking_size( 2, 2 )
11177.                         do
11178.                            $I_L11178_161 = 0
11178. !dir$ ivdep
11178. !dir$ blocking_size( 256, 256 )
11178.                            do
11179.                               eig_vec(1 + $I_L11178_161 + 256 * $I_L11178_187, 1 + $I_L11177_207 + 2 * $I_L11177_197, 1 + $I_L11114_199) = ( normalization(1 + $I_L11178_161 + 256 * $I_L11178_187) * eig_vec(1 + $I_L11178_161 + 256 * $I_L11178_187, 1 + $I_L11177_207 + 2 * $I_L11177_197, 1 + $I_L11114_199) * 1.0/sqs(1 + $I_L11178_161 + 256 * $I_L11178_187, ms + $I_L11177_207 + 2 * $I_L11177_197) )
11178.                               $I_L11178_161 = 1 + $I_L11178_161
11178.                               if ( $I_L11178_161 >= min( n_profile, 256 + 256 * $I_L11178_187 ) + -256 * $I_L11178_187 ) exit
11178.                            enddo
11177.                            $I_L11177_207 = 1 + $I_L11177_207
11177.                            if ( $I_L11177_207 >= min( ( 2 * n_red_eigensystem ), 2 + 2 * $I_L11177_197 ) + -2 * $I_L11177_197 ) exit
11177.                         enddo
11178.                         $I_L11178_187 = 1 + $I_L11178_187
11181.                         if ( $I_L11178_187 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
11181.                      enddo
11177.                      $I_L11177_197 = 1 + $I_L11177_197
11177.                      if ( $I_L11177_197 >= 1 + max( 0, -1 + _rsh( 1 + 2 * n_red_eigensystem, 1 ) ) ) exit
11177.                   enddo
11177.                endif
11177.             endif
11184.             $I_L11114_199 = 1 + $I_L11114_199
11182.             if ( $I_L11114_199 >= n_red_eigensystem ) exit
11182.          enddo
11182.       endif
10992.       _free( t$1954 )
11189.       return
11189.       end
11189.       
11211.       
11211.       subroutine eval_uplm( ms, n_max_order, n_direction, x, up_lm, nd_direction )
11211.       t$289 = nd_direction
11243.       t$1973 = _zla( 0, nd_direction )
11211.       t$290 = ( 1 + n_max_order + -ms )
11211.       t$1974 = _zla( 0, nd_direction )
11246.       t$1975 = _zla( 0, ( 1 + n_max_order + -ms ) )
11211.       t$1976 = _zla( 0, nd_direction ) * _zla( 0, ( 1 + n_max_order + -ms ) )
11269.       product = 1.0
11271.       if ( ms > 0 ) then
11272.          $I_L11272_36 = 0
11272. !dir$ ivdep
11272.          do
11273.             product = product * ( 1.0 + -( 5.0e-1 * 1.0/( real( 1 + $I_L11272_36, 8 ) ) ) )
11274.             $I_L11272_36 = 1 + $I_L11272_36
11272.             if ( $I_L11272_36 >= ms ) exit
11272.          enddo
11275.          if ( n_direction > 0 ) then
11275.             $I_L11275_38 = 0
11275. !dir$ ivdep
11275.             do
11276.                up_lm(1 + $I_L11275_38, 1) = _sqrt( 7.9577471545947673e-2 * product * ( 1.0 + -( x(1 + $I_L11275_38) * x(1 + $I_L11275_38) ) ) ** ms * ( 1.0 + 2.0 * real( ms, 8 ) ) ) * cvmg( -1.0, 1.0, and( 1, ms ) /= 0 )
11279.                $I_L11275_38 = 1 + $I_L11275_38
11275.                if ( $I_L11275_38 >= n_direction ) exit
11275.             enddo
11275.          endif
11280.       else if ( n_direction > 0 ) then
11281.          $I_L11281_40 = 0
11281. !dir$ ivdep
11281.          do
11282.             up_lm(1 + $I_L11281_40, 1) = 2.8209479177387814e-1
11283.             $I_L11281_40 = 1 + $I_L11281_40
11281.             if ( $I_L11281_40 >= n_direction ) exit
11281.          enddo
11281.       endif
11288.       if ( ms < n_max_order ) then
11289.          if ( n_direction > 0 ) then
11289.             $I_L11289_42 = 0
11289. !dir$ ivdep
11289.             do
11290.                up_lm(1 + $I_L11289_42, 2) = x(1 + $I_L11289_42) * up_lm(1 + $I_L11289_42, 1) * _sqrt( 3.0 + 2.0 * real( ms, 8 ) )
11292.                $I_L11289_42 = 1 + $I_L11289_42
11289.                if ( $I_L11289_42 >= n_direction ) exit
11289.             enddo
11289.          endif
11289.       endif
11297.       if ( -2 + n_max_order + -ms >= 0 ) then
11299.          if ( n_direction > 0 ) then
11297.             $I_L11297_52 = 0
11297.             do
11299.                $I_L11299_50 = 0
11299.                do
11297.                   $I_L11297_47 = 0
11297.                   if ( min( -1 + n_max_order + -ms, 4 + 4 * $I_L11297_52 ) + -4 * $I_L11297_52 >= 2 ) then
11297.                      $I_L11297_54 = 0
11297. !dir$ shortloop16
11297. !dir$ blocking_size( 4, 4 )
11297.                      do
11299.                         $I_L11299_44 = 0
11299. !dir$ ivdep
11299. !dir$ blocking_size( 256, 256 )
11299.                         do
11300.                            up_lm(1 + $I_L11299_44 + 256 * $I_L11299_50, 3 + 4 * $I_L11297_52 + 2 * $I_L11297_54) = -( up_lm(1 + $I_L11299_44 + 256 * $I_L11299_50, 1 + 4 * $I_L11297_52 + 2 * $I_L11297_54) * _sqrt( ( ( 1.0 + 2.0 * real( 2 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) * ( -1.0 + -( real( ms, 8 ) ) + real( 2 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) * ( -1.0 + real( ms, 8 ) + real( 2 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) ) * 1.0/( ( -( real( ms, 8 ) ) + real( 2 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) * ( real( ms, 8 ) + real( 2 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) * ( -3.0 + 2.0 * real( 2 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) ) ) ) + up_lm(1 + $I_L11299_44 + 256 * $I_L11299_50, 2 + 4 * $I_L11297_52 + 2 * $I_L11297_54) * x(1 + $I_L11299_44 + 256 * $I_L11299_50) * _sqrt( ( ( -1.0 + 2.0 * real( 2 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) * ( 1.0 + 2.0 * real( 2 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) ) * 1.0/( ( real( ms, 8 ) + real( 2 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) * ( -( real( ms, 8 ) ) + real( 2 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) ) )
11300.                            up_lm(1 + $I_L11299_44 + 256 * $I_L11299_50, 4 + 4 * $I_L11297_52 + 2 * $I_L11297_54) = -( up_lm(1 + $I_L11299_44 + 256 * $I_L11299_50, 2 + 4 * $I_L11297_52 + 2 * $I_L11297_54) * _sqrt( 1.0/( ( -( real( ms, 8 ) ) + real( 3 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) * ( real( ms, 8 ) + real( 3 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) * ( -3.0 + 2.0 * real( 3 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) ) * ( ( 1.0 + 2.0 * real( 3 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) * ( -1.0 + real( ms, 8 ) + real( 3 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) * ( -1.0 + -( real( ms, 8 ) ) + real( 3 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) ) ) ) + up_lm(1 + $I_L11299_44 + 256 * $I_L11299_50, 3 + 4 * $I_L11297_52 + 2 * $I_L11297_54) * x(1 + $I_L11299_44 + 256 * $I_L11299_50) * _sqrt( 1.0/( ( -( real( ms, 8 ) ) + real( 3 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) * ( real( ms, 8 ) + real( 3 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) ) * ( ( 1.0 + 2.0 * real( 3 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) * ( -1.0 + 2.0 * real( 3 + ms + 4 * $I_L11297_52 + 2 * $I_L11297_54, 8 ) ) ) )
11299.                            $I_L11299_44 = 1 + $I_L11299_44
11299.                            if ( $I_L11299_44 >= min( n_direction, 256 + 256 * $I_L11299_50 ) + -256 * $I_L11299_50 ) exit
11299.                         enddo
11297.                         $I_L11297_54 = 1 + $I_L11297_54
11297.                         if ( $I_L11297_54 >= _rsh( min( -1 + n_max_order + -ms, 4 + 4 * $I_L11297_52 ) + -4 * $I_L11297_52, 1 ) ) exit
11297.                      enddo
11297.                      $I_L11297_47 = and( 0xfffffffffffffffeUL, min( -1 + n_max_order + -ms, 4 + 4 * $I_L11297_52 ) + -4 * $I_L11297_52 )
11297.                   endif
11297.                   if ( $I_L11297_47 < min( -1 + n_max_order + -ms, 4 + 4 * $I_L11297_52 ) + -4 * $I_L11297_52 ) then
11299.                      $I_L11299_44 = 0
11299. !dir$ ivdep
11299. !dir$ blocking_size( 256, 256 )
11299.                      do
11300.                         up_lm(1 + $I_L11299_44 + 256 * $I_L11299_50, 3 + $I_L11297_47 + 4 * $I_L11297_52) = -( up_lm(1 + $I_L11299_44 + 256 * $I_L11299_50, 1 + $I_L11297_47 + 4 * $I_L11297_52) * _sqrt( 1.0/( ( -( real( ms, 8 ) ) + real( 2 + ms + $I_L11297_47 + 4 * $I_L11297_52, 8 ) ) * ( real( ms, 8 ) + real( 2 + ms + $I_L11297_47 + 4 * $I_L11297_52, 8 ) ) * ( -3.0 + 2.0 * real( 2 + ms + $I_L11297_47 + 4 * $I_L11297_52, 8 ) ) ) * ( ( 1.0 + 2.0 * real( 2 + ms + $I_L11297_47 + 4 * $I_L11297_52, 8 ) ) * ( -1.0 + real( ms, 8 ) + real( 2 + ms + $I_L11297_47 + 4 * $I_L11297_52, 8 ) ) * ( -1.0 + -( real( ms, 8 ) ) + real( 2 + ms + $I_L11297_47 + 4 * $I_L11297_52, 8 ) ) ) ) ) + up_lm(1 + $I_L11299_44 + 256 * $I_L11299_50, 2 + $I_L11297_47 + 4 * $I_L11297_52) * x(1 + $I_L11299_44 + 256 * $I_L11299_50) * _sqrt( 1.0/( ( -( real( ms, 8 ) ) + real( 2 + ms + $I_L11297_47 + 4 * $I_L11297_52, 8 ) ) * ( real( ms, 8 ) + real( 2 + ms + $I_L11297_47 + 4 * $I_L11297_52, 8 ) ) ) * ( ( 1.0 + 2.0 * real( 2 + ms + $I_L11297_47 + 4 * $I_L11297_52, 8 ) ) * ( -1.0 + 2.0 * real( 2 + ms + $I_L11297_47 + 4 * $I_L11297_52, 8 ) ) ) )
11299.                         $I_L11299_44 = 1 + $I_L11299_44
11299.                         if ( $I_L11299_44 >= min( n_direction, 256 + 256 * $I_L11299_50 ) + -256 * $I_L11299_50 ) exit
11299.                      enddo
11299.                   endif
11299.                   $I_L11299_50 = 1 + $I_L11299_50
11308.                   if ( $I_L11299_50 >= 1 + max( 0, -1 + _rsh( 255 + n_direction, 8 ) ) ) exit
11308.                enddo
11297.                $I_L11297_52 = 1 + $I_L11297_52
11297.                if ( $I_L11297_52 >= 1 + max( 0, -1 + _rsh( 2 + n_max_order + -ms, 2 ) ) ) exit
11297.             enddo
11297.          endif
11297.       endif
11314.       return
11314.       end
11314.       
11334.       
11334.       subroutine exp_v( n, a, b )
11334.       t$291 = n
11350.       t$1977 = _zla( 0, n )
11364.       if ( n > 0 ) then
11364.          $I_L11364_4 = 0
11364. !dir$ ivdep
11364.          do
11365.             b(1 + $I_L11364_4) = _expn( a(1 + $I_L11364_4) )
11366.             $I_L11364_4 = 1 + $I_L11364_4
11364.             if ( $I_L11364_4 >= n ) exit
11364.          enddo
11364.       endif
11371.       return
11371.       end
11371.       
11389.       
11389.       subroutine gas_optical_properties( n_profile, n_layer, n_gas, i_gas_pointer, k_esft_mono, gas_mix_ratio, k_gas_abs, nd_profile, nd_layer, nd_species )
11389.       t$292 = nd_species
11420.       t$1978 = _zla( 0, nd_species )
11389.       t$293 = nd_profile
11389.       t$294 = nd_layer
11425.       t$1979 = _zla( 0, nd_profile )
11389.       t$1980 = _zla( 0, nd_profile )
11425.       t$1981 = _zla( 0, nd_layer )
11389.       t$1982 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
11389.       t$1983 = _zla( 0, nd_species ) * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
11389.       t$1984 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
11444.       $i_gas_S2 = i_gas_pointer(1)
11445.       if ( nd_layer > 0 ) then
11446.          if ( nd_profile > 0 ) then
11447.             $SC_k_esft_mono_I0 = k_esft_mono($i_gas_S2)
11445.             $I_L11445_24 = 0
11445.             do
11446.                $I_L11446_20 = 0
11446. !dir$ ivdep
11446.                do
11447.                   k_gas_abs(1 + $I_L11446_20, 1 + $I_L11445_24) = $SC_k_esft_mono_I0 * gas_mix_ratio(1 + $I_L11446_20, 1 + $I_L11445_24, $i_gas_S2)
11449.                   $I_L11446_20 = 1 + $I_L11446_20
11446.                   if ( $I_L11446_20 >= nd_profile ) exit
11446.                enddo
11450.                $I_L11445_24 = 1 + $I_L11445_24
11449.                if ( $I_L11445_24 >= nd_layer ) exit
11449.             enddo
11449.          endif
11449.       endif
11451.       if ( -2 + n_gas >= 0 ) then
11453.          if ( nd_layer > 0 ) then
11454.             if ( nd_profile > 0 ) then
11451.                $SI_L11451_32_G2 = 0
11451.                do
11453.                   $SI_L11453_30_G5 = 0
11453.                   do
11454.                      $SI_L11454_22_G8 = 0
11454.                      do
11451.                         $I_L11451_40 = 0
11451. !dir$ shortloop16
11451. !dir$ blocking_size( 2, 2 )
11451.                         do
11453.                            $I_L11453_37 = 0
11453. !dir$ shortloop16
11453. !dir$ blocking_size( 2, 2 )
11453.                            do
11452.                               $i_gas_S6 = i_gas_pointer(2 + $I_L11451_40 + 2 * $SI_L11451_32_G2)
11453.                               $SCA_k_esft_mono_I1 = k_esft_mono($i_gas_S6)
11454.                               $I_L11454_34 = 0
11454. !dir$ ivdep
11454. !dir$ blocking_size( 256, 256 )
11454.                               do
11455.                                  k_gas_abs(1 + $I_L11454_34 + 256 * $SI_L11454_22_G8, 1 + $I_L11453_37 + 2 * $SI_L11453_30_G5) = k_gas_abs(1 + $I_L11454_34 + 256 * $SI_L11454_22_G8, 1 + $I_L11453_37 + 2 * $SI_L11453_30_G5) + $SCA_k_esft_mono_I1 * gas_mix_ratio(1 + $I_L11454_34 + 256 * $SI_L11454_22_G8, 1 + $I_L11453_37 + 2 * $SI_L11453_30_G5, $i_gas_S6)
11454.                                  $I_L11454_34 = 1 + $I_L11454_34
11454.                                  if ( $I_L11454_34 >= min( nd_profile, 256 + 256 * $SI_L11454_22_G8 ) + -256 * $SI_L11454_22_G8 ) exit
11454.                               enddo
11453.                               $I_L11453_37 = 1 + $I_L11453_37
11453.                               if ( $I_L11453_37 >= min( nd_layer, 2 + 2 * $SI_L11453_30_G5 ) + -2 * $SI_L11453_30_G5 ) exit
11453.                            enddo
11451.                            $I_L11451_40 = 1 + $I_L11451_40
11457.                            if ( $I_L11451_40 >= min( -1 + n_gas, 2 + 2 * $SI_L11451_32_G2 ) + -2 * $SI_L11451_32_G2 ) exit
11457.                         enddo
11454.                         $SI_L11454_22_G8 = 1 + $SI_L11454_22_G8
11454.                         if ( $SI_L11454_22_G8 >= _rsh( 255 + nd_profile, 8 ) ) exit
11454.                      enddo
11453.                      $SI_L11453_30_G5 = 1 + $SI_L11453_30_G5
11458.                      if ( $SI_L11453_30_G5 >= _rsh( 1 + nd_layer, 1 ) ) exit
11458.                   enddo
11451.                   $SI_L11451_32_G2 = 1 + $SI_L11451_32_G2
11451.                   if ( $SI_L11451_32_G2 >= _rsh( n_gas, 1 ) ) exit
11451.                enddo
11451.             endif
11451.          endif
11451.       endif
11464.       return
11464.       end
11464.       
11489.       
11489.       subroutine gauss_angle( n_profile, n_layer, n_order_gauss, tau, flux_inc_down, diff_planck, source_ground, albedo_surface_diff, flux_diffuse, l_ir_source_quad, diff_planck_2, nd_profile, nd_layer )
11489.       t$295 = nd_profile
11489.       t$296 = nd_layer
11531.       t$1985 = _zla( 0, nd_profile )
11489.       t$1986 = _zla( 0, nd_profile )
11531.       t$1987 = _zla( 0, nd_layer )
11489.       t$1988 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
11489.       t$297 = ( 2 + 2 * nd_layer )
11544.       t$1989 = _zla( 0, ( 2 + 2 * nd_layer ) )
11489.       t$1990 = _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
11560.       t$1993 = 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
11562.       t$1994 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
11562.       t$1996 = t$1994 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
11556.       t$1997 = 8 * ( 7 + t$1994 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
11556.       t$1999 = t$1997 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
11566.       t$2000 = 8 * ( 7 + t$1997 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) ) ) / 8
11566.       t$2002 = t$2000 + 8 * _zla( 0, nd_profile )
11564.       t$2003 = 8 * ( 7 + t$2000 + 8 * _zla( 0, nd_profile ) ) / 8
11564.       t$2005 = t$2003 + 8 * _zla( 0, nd_profile )
11489.       t$1991 = int( _alloc( t$2003 + 8 * _zla( 0, nd_profile ) ), 8 )
11560.       t$1992 = t$1991
11562.       t$1995 = t$1994 + t$1991
11556.       t$1998 = t$1997 + t$1991
11566.       t$2001 = t$2000 + t$1991
11564.       t$2004 = t$2003 + t$1991
11579.       if ( n_profile > 0 ) then
11579.          $I_L11579_144 = 0
11579. !dir$ ivdep
11579.          do
11580.             source_ground_rad(1 + $I_L11579_144) = 3.1830988618379069e-1 * source_ground(1 + $I_L11579_144)
11581.             radiance_inc(1 + $I_L11579_144) = 3.1830988618379069e-1 * flux_inc_down(1 + $I_L11579_144)
11582.             $I_L11579_144 = 1 + $I_L11579_144
11579.             if ( $I_L11579_144 >= n_profile ) exit
11579.          enddo
11579.       endif
11583.       if ( n_layer > 0 ) then
11584.          if ( n_profile > 0 ) then
11583.             $I_L11583_162 = 0
11583.             do
11584.                $I_L11584_146 = 0
11584. !dir$ ivdep
11584.                do
11585.                   diff_planck_rad(1 + $I_L11584_146, 1 + $I_L11583_162) = 3.1830988618379069e-1 * diff_planck(1 + $I_L11584_146, 1 + $I_L11583_162)
11586.                   $I_L11584_146 = 1 + $I_L11584_146
11584.                   if ( $I_L11584_146 >= n_profile ) exit
11584.                enddo
11587.                $I_L11583_162 = 1 + $I_L11583_162
11586.                if ( $I_L11583_162 >= n_layer ) exit
11586.             enddo
11586.          endif
11586.       endif
11588.       if ( 2 + 2 * n_layer > 0 ) then
11589.          if ( n_profile > 0 ) then
11588.             $I_L11588_164 = 0
11588.             do
11589.                $I_L11589_148 = 0
11589. !dir$ ivdep
11589.                do
11590.                   flux_diffuse(1 + $I_L11589_148, 1 + $I_L11588_164) = 0.0
11591.                   $I_L11589_148 = 1 + $I_L11589_148
11589.                   if ( $I_L11589_148 >= n_profile ) exit
11589.                enddo
11592.                $I_L11588_164 = 1 + $I_L11588_164
11591.                if ( $I_L11588_164 >= 2 + 2 * n_layer ) exit
11591.             enddo
11591.          endif
11591.       endif
11603.       if ( n_order_gauss > 0 ) then
11603.          $I_L11603_174 = 0
11603.          do
11604.             $secant_ray_S10 = ( 2.0 * 1.0/( 1.0 + gauss_point(1 + $I_L11603_174, n_order_gauss) ) )
11608.             t$613 = nd_profile
11608.             t$614 = nd_layer
11608.             t$2396 = max( 0, nd_profile )
11608.             t$2397 = max( 0, nd_profile )
11608.             t$2398 = max( 0, nd_layer )
11608.             t$2399 = max( 0, nd_profile ) * max( 0, nd_layer )
11608.             t$615 = ( 2 + 2 * nd_layer )
11608.             t$2400 = max( 0, ( 2 + 2 * nd_layer ) )
11608.             t$2401 = max( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
11608.             t$2404 = 8 * max( 0, nd_profile ) * max( 0, nd_layer )
11608.             t$2405 = 8 * ( 7 + 8 * max( 0, nd_profile ) * max( 0, nd_layer ) ) / 8
11608.             t$2407 = t$2405 + 8 * max( 0, nd_profile ) * max( 0, nd_layer )
11608.             t$2408 = 8 * ( 7 + t$2405 + 8 * max( 0, nd_profile ) * max( 0, nd_layer ) ) / 8
11608.             t$2410 = t$2408 + 8 * max( 0, nd_profile ) * max( 0, nd_layer )
11608.             t$2402 = int( _alloc( t$2408 + 8 * max( 0, nd_profile ) * max( 0, nd_layer ) ), 8 )
11608.             t$2403 = t$2402
11608.             t$2406 = t$2405 + t$2402
11608.             t$2409 = t$2408 + t$2402
11608.             if ( n_layer > 0 ) then
11608.                if ( n_profile > 0 ) then
11608.                   $I_L11608_166 = 0
11608.                   do
11608.                      $I_L11608_150 = 0
11608. !dir$ ivdep
11608.                      do
11608.                         $trans_WR0_R0 = _expn( -( $secant_ray_S10 * tau(1 + $I_L11608_150, 1 + $I_L11608_166) ) )
11608.                         trans(1 + $I_L11608_150, 1 + $I_L11608_166) = $trans_WR0_R0
11608.                         $source_up_WR0_R1 = ( diff_planck_rad(1 + $I_L11608_150, 1 + $I_L11608_166) * ( 1.0000000149011612 + -$trans_WR0_R0 ) * 1.0/( 1.4901161193847656e-8 + $secant_ray_S10 * tau(1 + $I_L11608_150, 1 + $I_L11608_166) ) )
11608.                         source_up(1 + $I_L11608_150, 1 + $I_L11608_166) = $source_up_WR0_R1
11608.                         source_down(1 + $I_L11608_150, 1 + $I_L11608_166) = -$source_up_WR0_R1
11608.                         $I_L11608_150 = 1 + $I_L11608_150
11608.                         if ( $I_L11608_150 >= n_profile ) exit
11608.                      enddo
11608.                      $I_L11608_166 = 1 + $I_L11608_166
11608.                      if ( $I_L11608_166 >= n_layer ) exit
11608.                   enddo
11608.                endif
11608.             endif
11608.             if ( n_profile > 0 ) then
11608.                $I_L11608_152 = 0
11608. !dir$ ivdep
11608.                do
11608.                   flux_stream(1 + $I_L11608_152, 2) = radiance_inc(1 + $I_L11608_152)
11608.                   $I_L11608_152 = 1 + $I_L11608_152
11608.                   if ( $I_L11608_152 >= n_profile ) exit
11608.                enddo
11608.             endif
11608.             if ( n_layer > 0 ) then
11608.                if ( n_profile > 0 ) then
11608.                   $I_L11608_168 = 0
11608.                   if ( n_layer >= 2 ) then
11608.                      $I_L11608_176 = 0
11608.                      do
11608.                         $I_L11608_154 = 0
11608. !dir$ ivdep
11608.                         do
11608.                            flux_stream(1 + $I_L11608_154, 4 + 4 * $I_L11608_176) = source_down(1 + $I_L11608_154, 1 + 2 * $I_L11608_176) + flux_stream(1 + $I_L11608_154, 2 + 4 * $I_L11608_176) * trans(1 + $I_L11608_154, 1 + 2 * $I_L11608_176)
11608.                            flux_stream(1 + $I_L11608_154, 6 + 4 * $I_L11608_176) = source_down(1 + $I_L11608_154, 2 + 2 * $I_L11608_176) + flux_stream(1 + $I_L11608_154, 4 + 4 * $I_L11608_176) * trans(1 + $I_L11608_154, 2 + 2 * $I_L11608_176)
11608.                            $I_L11608_154 = 1 + $I_L11608_154
11608.                            if ( $I_L11608_154 >= n_profile ) exit
11608.                         enddo
11608.                         $I_L11608_176 = 1 + $I_L11608_176
11608.                         if ( $I_L11608_176 >= _rsh( n_layer, 1 ) ) exit
11608.                      enddo
11608.                      $I_L11608_168 = and( 0xfffffffffffffffeUL, n_layer )
11608.                   endif
11608.                   if ( $I_L11608_168 < n_layer ) then
11608.                      $I_L11608_154 = 0
11608. !dir$ ivdep
11608.                      do
11608.                         flux_stream(1 + $I_L11608_154, 4 + 2 * $I_L11608_168) = source_down(1 + $I_L11608_154, 1 + $I_L11608_168) + trans(1 + $I_L11608_154, 1 + $I_L11608_168) * flux_stream(1 + $I_L11608_154, 2 + 2 * $I_L11608_168)
11608.                         $I_L11608_154 = 1 + $I_L11608_154
11608.                         if ( $I_L11608_154 >= n_profile ) exit
11608.                      enddo
11608.                   endif
11608.                endif
11608.             endif
11608.             if ( n_profile > 0 ) then
11608.                $I_L11608_156 = 0
11608. !dir$ ivdep
11608.                do
11608.                   flux_stream(1 + $I_L11608_156, 1 + 2 * n_layer) = source_ground_rad(1 + $I_L11608_156) + albedo_surface_diff(1 + $I_L11608_156) * flux_stream(1 + $I_L11608_156, 2 + 2 * n_layer)
11608.                   $I_L11608_156 = 1 + $I_L11608_156
11608.                   if ( $I_L11608_156 >= n_profile ) exit
11608.                enddo
11608.             endif
11608.             if ( n_layer > 0 ) then
11608.                if ( n_profile > 0 ) then
11608.                   $I_L11608_170 = 0
11608.                   if ( n_layer >= 2 ) then
11608.                      $I_L11608_178 = 0
11608.                      do
11608.                         $I_L11608_158 = 0
11608. !dir$ ivdep
11608.                         do
11608.                            flux_stream(1 + $I_L11608_158, -1 + 2 * n_layer + -4 * $I_L11608_178) = source_up(1 + $I_L11608_158, n_layer + -2 * $I_L11608_178) + flux_stream(1 + $I_L11608_158, 1 + 2 * n_layer + -4 * $I_L11608_178) * trans(1 + $I_L11608_158, n_layer + -2 * $I_L11608_178)
11608.                            flux_stream(1 + $I_L11608_158, -3 + 2 * n_layer + -4 * $I_L11608_178) = source_up(1 + $I_L11608_158, -1 + n_layer + -2 * $I_L11608_178) + flux_stream(1 + $I_L11608_158, -1 + 2 * n_layer + -4 * $I_L11608_178) * trans(1 + $I_L11608_158, -1 + n_layer + -2 * $I_L11608_178)
11608.                            $I_L11608_158 = 1 + $I_L11608_158
11608.                            if ( $I_L11608_158 >= n_profile ) exit
11608.                         enddo
11608.                         $I_L11608_178 = 1 + $I_L11608_178
11608.                         if ( $I_L11608_178 >= _rsh( n_layer, 1 ) ) exit
11608.                      enddo
11608.                      $I_L11608_170 = and( 0xfffffffffffffffeUL, n_layer )
11608.                   endif
11608.                   if ( $I_L11608_170 < n_layer ) then
11608.                      $I_L11608_158 = 0
11608. !dir$ ivdep
11608.                      do
11608.                         flux_stream(1 + $I_L11608_158, -1 + 2 * n_layer + -2 * $I_L11608_170) = source_up(1 + $I_L11608_158, n_layer + -$I_L11608_170) + trans(1 + $I_L11608_158, n_layer + -$I_L11608_170) * flux_stream(1 + $I_L11608_158, 1 + 2 * n_layer + -2 * $I_L11608_170)
11608.                         $I_L11608_158 = 1 + $I_L11608_158
11608.                         if ( $I_L11608_158 >= n_profile ) exit
11608.                      enddo
11608.                   endif
11608.                endif
11608.             endif
11608.             _free( t$2402 )
11618.             $weight_stream_S21 = 1.5707963267948966 * gauss_weight(1 + $I_L11603_174, n_order_gauss) * ( 1.0 + gauss_point(1 + $I_L11603_174, n_order_gauss) )
11620.             if ( 2 + 2 * n_layer > 0 ) then
11621.                if ( n_profile > 0 ) then
11620.                   $I_L11620_172 = 0
11620.                   do
11621.                      $I_L11621_160 = 0
11621. !dir$ ivdep
11621.                      do
11622.                         flux_diffuse(1 + $I_L11621_160, 1 + $I_L11620_172) = flux_diffuse(1 + $I_L11621_160, 1 + $I_L11620_172) + $weight_stream_S21 * flux_stream(1 + $I_L11621_160, 1 + $I_L11620_172)
11624.                         $I_L11621_160 = 1 + $I_L11621_160
11621.                         if ( $I_L11621_160 >= n_profile ) exit
11621.                      enddo
11625.                      $I_L11620_172 = 1 + $I_L11620_172
11624.                      if ( $I_L11620_172 >= 2 + 2 * n_layer ) exit
11624.                   enddo
11624.                endif
11624.             endif
11627.             $I_L11603_174 = 1 + $I_L11603_174
11625.             if ( $I_L11603_174 >= n_order_gauss ) exit
11625.          enddo
11625.       endif
11489.       _free( t$1991 )
11632.       return
11632.       end
11632.       
11653.       
11653.       subroutine get_free_unit( ierr, iunit )
11682.       ierr = 0
11683.       iunit = 20
11684.       t$5792 = 20
11684.       t$5793(1) = 0x100000000000000L
11684. !dir$ suppress t$5792
11684.       t$5793(2) = int( loc( t$5792 ), 8 )
11684.       t$5793(3) = 0
11684.       t$5793(5) = 0
11684.       t$5793(6) = 0
11684.       t$5793(7) = 0
11684. !dir$ suppress l_open
11684.       t$5793(8) = int( loc( l_open ), 8 )
11684.       t$5793(9) = 0
11684.       t$5793(10) = 0
11684.       t$5793(11) = 0
11684.       t$5793(13) = 0
11684.       t$5793(15) = 0
11684.       t$5793(17) = 0
11684.       t$5793(19) = 0
11684.       t$5793(21) = 0
11684.       t$5793(23) = 0
11684.       t$5793(25) = 0
11684.       t$5793(26) = 0
11684.       t$5793(27) = 0
11684.       t$5793(29) = 0
11684.       t$5793(31) = 0
11684.       t$5793(33) = 0
11684.       t$5793(35) = 0
11684.       t$5793(37) = 0
11684.       t$5793(39) = 0
11684.       t$5793(41) = 0
11684.       t$5793(43) = 0
11684.       t$5793(44) = 0
11684.       t$5793(45) = 0x2000500000000L
11684.       t$5793(46) = 0
11684.       t$5793(47) = 0
11684.       t$5793(48) = 0
11684.       t$5793(49) = 0
11684.       t$5793(50) = 0
11684.       t$5793(52) = 0
11684.       t$5793(54) = 0
11684.       t$5793(56) = 0
11684.       t$5793(57) = 0
11684.       t$5793(58) = 0
11684.       t$5793(60) = 0
11684.       t$5793(61) = 0
11684.       t$5793(62) = 0
11684.       t$5793(63) = 0
11684.       t$5793(64) = 0
11684.       t$5793(66) = 0
11684.       t$5793(68) = 0
11684.       t$5793(69) = 0
11684.       t$5793(70) = 0
11684.       t$5791 = _inquire( t$5793 )
11685.       if ( l_open /= .false. ) then
11685.          do
11686.             if ( l_open /= .false. ) then
11686.                iunit = 1 + iunit
11686.             endif
11687.             t$5792 = iunit
11687.             t$5795(1) = 0x100000000000000L
11687. !dir$ suppress t$5792
11687.             t$5795(2) = int( loc( t$5792 ), 8 )
11687.             t$5795(3) = 0
11687.             t$5795(5) = 0
11687.             t$5795(6) = 0
11687.             t$5795(7) = 0
11687. !dir$ suppress l_open
11687.             t$5795(8) = int( loc( l_open ), 8 )
11687.             t$5795(9) = 0
11687.             t$5795(10) = 0
11687.             t$5795(11) = 0
11687.             t$5795(13) = 0
11687.             t$5795(15) = 0
11687.             t$5795(17) = 0
11687.             t$5795(19) = 0
11687.             t$5795(21) = 0
11687.             t$5795(23) = 0
11687.             t$5795(25) = 0
11687.             t$5795(26) = 0
11687.             t$5795(27) = 0
11687.             t$5795(29) = 0
11687.             t$5795(31) = 0
11687.             t$5795(33) = 0
11687.             t$5795(35) = 0
11687.             t$5795(37) = 0
11687.             t$5795(39) = 0
11687.             t$5795(41) = 0
11687.             t$5795(43) = 0
11687.             t$5795(44) = 0
11687.             t$5795(45) = 0x2000500000000L
11687.             t$5795(46) = 0
11687.             t$5795(47) = 0
11687.             t$5795(48) = 0
11687.             t$5795(49) = 0
11687.             t$5795(50) = 0
11687.             t$5795(52) = 0
11687.             t$5795(54) = 0
11687.             t$5795(56) = 0
11687.             t$5795(57) = 0
11687.             t$5795(58) = 0
11687.             t$5795(60) = 0
11687.             t$5795(61) = 0
11687.             t$5795(62) = 0
11687.             t$5795(63) = 0
11687.             t$5795(64) = 0
11687.             t$5795(66) = 0
11687.             t$5795(68) = 0
11687.             t$5795(69) = 0
11687.             t$5795(70) = 0
11687.             t$5794 = _inquire( t$5795 )
11688.             if ( ( l_open .and. iunit < 100 ) == .false. ) exit
11688.          enddo
11688.       endif
11690.       if ( iunit > 100 ) then
11691.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$299,  _substr(t$298,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: No free units are available for i/o.', 0x800600000000L ) ) )
11693.          ierr = 4
11693.       endif
11700.       return
11700.       end
11700.       
11737.       
11737.       subroutine grey_opt_prop( ierr, n_profile, n_layer, p, t, density, n_order_phase, l_rescale, n_order_forward, l_henyey_greenstein_pf, l_solar_phf, n_order_phase_solar, n_direction, cos_sol_view, l_rayleigh, rayleigh_coeff, l_continuum, n_continuum, i_continuum_pointer, k_continuum, amount_continuum, l_aerosol, n_aerosol, aerosol_mix_ratio, i_aerosol_parametrization, i_humidity_pointer, humidities, delta_humidity, mean_rel_humidity, aerosol_absorption, aerosol_scattering, aerosol_phase_fnc, n_opt_level_aerosol_prsc, aerosol_pressure_prsc, aerosol_absorption_prsc, aerosol_scattering_prsc, aerosol_phase_fnc_prsc, l_cloud, n_cloud_profile, i_cloud_profile, n_cloud_top, n_condensed, l_cloud_cmp, i_phase_cmp, i_condensed_param, condensed_param_list, condensed_mix_ratio, condensed_dim_char, n_cloud_type, i_cloud_type, n_opt_level_drop_prsc, drop_pressure_prsc, drop_absorption_prsc, drop_scattering_prsc, drop_phase_fnc_prsc, n_opt_level_ice_prsc, ice_pressure_prsc, ice_absorption_prsc, ice_scattering_prsc, ice_phase_fnc_prsc, ss_prop, nd_profile, nd_radiance_profile, nd_layer, nd_layer_clr, id_ct, nd_continuum, nd_aerosol_species, nd_humidities, nd_cloud_parameter, nd_cloud_component, nd_phase_term, nd_max_order, nd_direction, nd_profile_aerosol_prsc, nd_profile_cloud_prsc, nd_opt_level_aerosol_prsc, nd_opt_level_cloud_prsc )
11737.       t$300 = nd_profile
11737.       t$301 = nd_layer
11858.       t$2006 = _zla( 0, nd_profile )
11737.       t$2007 = _zla( 0, nd_profile )
11858.       t$2008 = _zla( 0, nd_layer )
11737.       t$2009 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
11737.       t$302 = nd_radiance_profile
11737.       t$303 = nd_direction
11888.       t$2010 = _zla( 0, nd_radiance_profile )
11737.       t$2011 = _zla( 0, nd_radiance_profile )
11888.       t$2012 = _zla( 0, nd_direction )
11737.       t$2013 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
11737.       t$304 = nd_continuum
11912.       t$2014 = _zla( 0, nd_continuum )
11737.       t$2015 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
11737.       t$2016 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_continuum )
11737.       t$305 = nd_aerosol_species
11937.       t$2017 = _zla( 0, nd_aerosol_species )
11737.       t$2018 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_aerosol_species )
11737.       t$306 = nd_humidities
11947.       t$2019 = _zla( 0, nd_humidities )
11737.       t$2020 = _zla( 0, nd_humidities )
11737.       t$2021 = _zla( 0, nd_aerosol_species ) * _zla( 0, nd_humidities )
11737.       t$307 = nd_phase_term
11944.       t$2022 = _zla( 0, nd_phase_term )
11737.       t$2023 = _zla( 0, nd_humidities ) * _zla( 0, nd_phase_term )
11737.       t$2024 = _zla( 0, nd_aerosol_species ) * _zla( 0, nd_humidities ) * _zla( 0, nd_phase_term )
11737.       t$308 = nd_profile_aerosol_prsc
11737.       t$309 = nd_opt_level_aerosol_prsc
11962.       t$2025 = _zla( 0, nd_profile_aerosol_prsc )
11737.       t$2026 = _zla( 0, nd_profile_aerosol_prsc )
11962.       t$2027 = _zla( 0, nd_opt_level_aerosol_prsc )
11737.       t$2028 = _zla( 0, nd_profile_aerosol_prsc ) * _zla( 0, nd_opt_level_aerosol_prsc )
11737.       t$2029 = _zla( 0, nd_aerosol_species ) * _zla( 0, nd_profile_aerosol_prsc ) * _zla( 0, nd_opt_level_aerosol_prsc )
11737.       t$2030 = _zla( 0, nd_phase_term ) * _zla( 0, nd_profile_aerosol_prsc ) * _zla( 0, nd_opt_level_aerosol_prsc )
11737.       t$2031 = _zla( 0, nd_aerosol_species ) * _zla( 0, nd_phase_term ) * _zla( 0, nd_profile_aerosol_prsc ) * _zla( 0, nd_opt_level_aerosol_prsc )
11737.       t$310 = id_ct
11737.       t$2032 = 1 + nd_layer + -id_ct
11992.       t$2033 = _zla( 0, 1 + nd_layer + -id_ct )
11737.       t$2034 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
11737.       t$311 = nd_cloud_component
12009.       t$2035 = _zla( 0, nd_cloud_component )
11737.       t$312 = nd_cloud_parameter
12013.       t$2036 = _zla( 0, nd_cloud_parameter )
11737.       t$2037 = _zla( 0, nd_cloud_parameter )
11737.       t$2038 = _zla( 0, nd_cloud_component ) * _zla( 0, nd_cloud_parameter )
11737.       t$2039 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
11737.       t$2040 = _zla( 0, nd_profile ) * _zla( 0, nd_cloud_component ) * _zla( 0, 1 + nd_layer + -id_ct )
11737.       t$313 = nd_profile_cloud_prsc
11737.       t$314 = nd_opt_level_cloud_prsc
12034.       t$2041 = _zla( 0, nd_profile_cloud_prsc )
11737.       t$2042 = _zla( 0, nd_profile_cloud_prsc )
12034.       t$2043 = _zla( 0, nd_opt_level_cloud_prsc )
11737.       t$2044 = _zla( 0, nd_profile_cloud_prsc ) * _zla( 0, nd_opt_level_cloud_prsc )
11737.       t$2045 = _zla( 0, nd_profile_cloud_prsc ) * _zla( 0, nd_opt_level_cloud_prsc )
11737.       t$2046 = _zla( 0, nd_phase_term ) * _zla( 0, nd_profile_cloud_prsc ) * _zla( 0, nd_opt_level_cloud_prsc )
 2600.       if ( t$27 == 0 ) then
 2600.          t$2051(1) = 4
 2600.          t$2052(1) = 0
 2600.          t$2053(1) = 0
 2600.          t$2048(1) = int( loc( t$26 ), 8 )
 2600.          t$2049(1) = 0
 2600.          t$2050(1) = int( loc( t$2047 ), 8 )
 2600.          t$27 = __get_dynamic_type( 2, t$2048(1), t$2051(1), 1, t$2049(1), t$2050(1), t$2052(1), t$2053(1) )
 2600.       endif
12108.       t$2057 = 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
12110.       t$2058 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct ) ) / 8
12110.       t$2060 = t$2058 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
12091.       t$2062 = t$2058 + 4 * _zla( 0, nd_profile ) + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
12097.       t$2063 = 8 * ( 7 + t$2058 + 4 * _zla( 0, nd_profile ) + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct ) ) / 8
12097.       t$2065 = t$2063 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
12099.       t$2066 = 8 * ( 7 + t$2063 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct ) ) / 8
12099.       t$2068 = t$2066 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
11737.       t$315 = nd_max_order
12101.       t$2069 = max( 0, nd_max_order )
11737.       t$2070 = _zla( 0, nd_profile ) * max( 0, nd_max_order ) * _zla( 0, 1 + nd_layer + -id_ct )
12101.       t$2071 = 8 * ( 7 + t$2066 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct ) ) / 8
12101.       t$2073 = t$2071 + 8 * _zla( 0, nd_profile ) * max( 0, nd_max_order ) * _zla( 0, 1 + nd_layer + -id_ct )
11737.       t$2074 = _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
11737.       t$2075 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * _zla( 0, 1 + nd_layer + -id_ct )
12104.       t$2076 = 8 * ( 7 + t$2071 + 8 * _zla( 0, nd_profile ) * max( 0, nd_max_order ) * _zla( 0, 1 + nd_layer + -id_ct ) ) / 8
12104.       t$2078 = t$2076 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * _zla( 0, 1 + nd_layer + -id_ct )
11737.       t$2055 = int( _alloc( t$2076 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * _zla( 0, 1 + nd_layer + -id_ct ) ), 8 )
12108.       t$2056 = t$2055
12110.       t$2059 = t$2058 + t$2055
12091.       t$2061 = t$2058 + t$2055 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
12097.       t$2064 = t$2063 + t$2055
12099.       t$2067 = t$2066 + t$2055
12101.       t$2072 = t$2071 + t$2055
12104.       t$2077 = t$2076 + t$2055
12128.       if ( nd_layer + -id_ct >= 0 ) then
12131.          $SC_ss_prop_I10 = ss_prop%k_ext_scat%dim_1%SM
12131.          $SC_ss_prop_I9 = ss_prop%k_ext_scat%dim_1%EX
12131.          $SC_ss_prop_I11 = ss_prop%k_ext_scat%dim_1%LB
12131.          $SC_ss_prop_I13 = ss_prop%k_ext_scat%dim_2%SM
12131.          $SC_ss_prop_I12 = ss_prop%k_ext_scat%dim_2%EX
12131.          $SC_ss_prop_I14 = ss_prop%k_ext_scat%dim_2%LB
12131.          $SC_ss_prop_I16 = ss_prop%k_ext_scat%dim_3%SM
12131.          $SC_ss_prop_I15 = ss_prop%k_ext_scat%dim_3%EX
12131.          $SC_ss_prop_I17 = ss_prop%k_ext_scat%dim_3%LB
12130.          $SC_ss_prop_I1 = ss_prop%k_grey_tot%dim_1%SM
12130.          $SC_ss_prop_I0 = ss_prop%k_grey_tot%dim_1%EX
12130.          $SC_ss_prop_I2 = ss_prop%k_grey_tot%dim_1%LB
12130.          $SC_ss_prop_I4 = ss_prop%k_grey_tot%dim_2%SM
12130.          $SC_ss_prop_I3 = ss_prop%k_grey_tot%dim_2%EX
12130.          $SC_ss_prop_I5 = ss_prop%k_grey_tot%dim_2%LB
12130.          $SC_ss_prop_I7 = ss_prop%k_grey_tot%dim_3%SM
12130.          $SC_ss_prop_I6 = ss_prop%k_grey_tot%dim_3%EX
12130.          $SC_ss_prop_I8 = ss_prop%k_grey_tot%dim_3%LB
12129.          if ( nd_profile > 0 ) then
12128.             $I_L12128_709 = 0
12128.             do
12129.                $I_L12129_636 = 0
12129. !dir$ ivdep
12129.                do
12130.                   (ss_prop%k_grey_tot%base_addr)(1 + $I_L12129_636, id_ct + $I_L12128_709, 0, 0) = 0.0
12131.                   (ss_prop%k_ext_scat%base_addr)(1 + $I_L12129_636, id_ct + $I_L12128_709, 0, 0) = 0.0
12132.                   $I_L12129_636 = 1 + $I_L12129_636
12129.                   if ( $I_L12129_636 >= nd_profile ) exit
12129.                enddo
12133.                $I_L12128_709 = 1 + $I_L12128_709
12132.                if ( $I_L12128_709 >= 1 + nd_layer + -id_ct ) exit
12132.             enddo
12132.          endif
12132.       endif
12135.       if ( n_order_phase > 0 ) then
12143.          $SC_ss_prop_I19 = ss_prop%phase_fnc%dim_1%SM
12143.          $SC_ss_prop_I18 = ss_prop%phase_fnc%dim_1%EX
12143.          $SC_ss_prop_I20 = ss_prop%phase_fnc%dim_1%LB
12143.          $SC_ss_prop_I22 = ss_prop%phase_fnc%dim_2%SM
12143.          $SC_ss_prop_I21 = ss_prop%phase_fnc%dim_2%EX
12143.          $SC_ss_prop_I23 = ss_prop%phase_fnc%dim_2%LB
12143.          $SC_ss_prop_I25 = ss_prop%phase_fnc%dim_3%SM
12143.          $SC_ss_prop_I24 = ss_prop%phase_fnc%dim_3%EX
12143.          $SC_ss_prop_I26 = ss_prop%phase_fnc%dim_3%LB
12143.          $SC_ss_prop_I28 = ss_prop%phase_fnc%dim_4%SM
12143.          $SC_ss_prop_I27 = ss_prop%phase_fnc%dim_4%EX
12143.          $SC_ss_prop_I29 = ss_prop%phase_fnc%dim_4%LB
12141.          if ( nd_layer > 0 ) then
12142.             if ( nd_profile + -id_ct >= 0 ) then
12135.                $I_L12135_782 = 0
12135.                do
12141.                   $I_L12141_711 = 0
12141.                   do
12142.                      $I_L12142_638 = 0
12142. !dir$ ivdep
12142.                      do
12143.                         (ss_prop%phase_fnc%base_addr)(id_ct + $I_L12142_638, 1 + $I_L12141_711, 1 + $I_L12135_782, 0, 0) = 0.0
12144.                         $I_L12142_638 = 1 + $I_L12142_638
12142.                         if ( $I_L12142_638 >= 1 + nd_profile + -id_ct ) exit
12142.                      enddo
12145.                      $I_L12141_711 = 1 + $I_L12141_711
12144.                      if ( $I_L12141_711 >= nd_layer ) exit
12144.                   enddo
12146.                   $I_L12135_782 = 1 + $I_L12135_782
12145.                   if ( $I_L12135_782 >= n_order_phase ) exit
12145.                enddo
12145.             endif
12145.          endif
12145.       endif
12149.       if ( l_rescale /= .false. ) then
12156.          if ( nd_layer + -id_ct >= 0 ) then
12158.             $SC_ss_prop_I31 = ss_prop%forward_scatter%dim_1%SM
12158.             $SC_ss_prop_I30 = ss_prop%forward_scatter%dim_1%EX
12158.             $SC_ss_prop_I32 = ss_prop%forward_scatter%dim_1%LB
12158.             $SC_ss_prop_I34 = ss_prop%forward_scatter%dim_2%SM
12158.             $SC_ss_prop_I33 = ss_prop%forward_scatter%dim_2%EX
12158.             $SC_ss_prop_I35 = ss_prop%forward_scatter%dim_2%LB
12158.             $SC_ss_prop_I37 = ss_prop%forward_scatter%dim_3%SM
12158.             $SC_ss_prop_I36 = ss_prop%forward_scatter%dim_3%EX
12158.             $SC_ss_prop_I38 = ss_prop%forward_scatter%dim_3%LB
12157.             if ( nd_profile > 0 ) then
12156.                $I_L12156_713 = 0
12156.                do
12157.                   $I_L12157_640 = 0
12157. !dir$ ivdep
12157.                   do
12158.                      (ss_prop%forward_scatter%base_addr)(1 + $I_L12157_640, id_ct + $I_L12156_713, 0, 0) = 0.0
12159.                      $I_L12157_640 = 1 + $I_L12157_640
12157.                      if ( $I_L12157_640 >= nd_profile ) exit
12157.                   enddo
12160.                   $I_L12156_713 = 1 + $I_L12156_713
12159.                   if ( $I_L12156_713 >= 1 + nd_layer + -id_ct ) exit
12159.                enddo
12159.             endif
12159.          endif
12159.       endif
12163.       if ( l_solar_phf /= .false. ) then
12165.          if ( n_direction > 0 ) then
12173.             $SC_ss_prop_I40 = ss_prop%phase_fnc_solar%dim_1%SM
12173.             $SC_ss_prop_I39 = ss_prop%phase_fnc_solar%dim_1%EX
12173.             $SC_ss_prop_I41 = ss_prop%phase_fnc_solar%dim_1%LB
12173.             $SC_ss_prop_I43 = ss_prop%phase_fnc_solar%dim_2%SM
12173.             $SC_ss_prop_I42 = ss_prop%phase_fnc_solar%dim_2%EX
12173.             $SC_ss_prop_I44 = ss_prop%phase_fnc_solar%dim_2%LB
12173.             $SC_ss_prop_I46 = ss_prop%phase_fnc_solar%dim_3%SM
12173.             $SC_ss_prop_I45 = ss_prop%phase_fnc_solar%dim_3%EX
12173.             $SC_ss_prop_I47 = ss_prop%phase_fnc_solar%dim_3%LB
12173.             $SC_ss_prop_I49 = ss_prop%phase_fnc_solar%dim_4%SM
12173.             $SC_ss_prop_I48 = ss_prop%phase_fnc_solar%dim_4%EX
12173.             $SC_ss_prop_I50 = ss_prop%phase_fnc_solar%dim_4%LB
12171.             if ( nd_layer + -id_ct >= 0 ) then
12172.                if ( nd_profile > 0 ) then
12165.                   $I_L12165_784 = 0
12165.                   do
12171.                      $I_L12171_715 = 0
12171.                      do
12172.                         $I_L12172_642 = 0
12172. !dir$ ivdep
12172.                         do
12173.                            (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12172_642, id_ct + $I_L12171_715, 1 + $I_L12165_784, 0, 0) = 0.0
12174.                            $I_L12172_642 = 1 + $I_L12172_642
12172.                            if ( $I_L12172_642 >= nd_profile ) exit
12172.                         enddo
12175.                         $I_L12171_715 = 1 + $I_L12171_715
12174.                         if ( $I_L12171_715 >= 1 + nd_layer + -id_ct ) exit
12174.                      enddo
12176.                      $I_L12165_784 = 1 + $I_L12165_784
12175.                      if ( $I_L12165_784 >= n_direction ) exit
12175.                   enddo
12175.                endif
12175.             endif
12175.          endif
12183.          if ( nd_layer + -id_ct >= 0 ) then
12185.             $SC_ss_prop_I52 = ss_prop%forward_solar%dim_1%SM
12185.             $SC_ss_prop_I51 = ss_prop%forward_solar%dim_1%EX
12185.             $SC_ss_prop_I53 = ss_prop%forward_solar%dim_1%LB
12185.             $SC_ss_prop_I55 = ss_prop%forward_solar%dim_2%SM
12185.             $SC_ss_prop_I54 = ss_prop%forward_solar%dim_2%EX
12185.             $SC_ss_prop_I56 = ss_prop%forward_solar%dim_2%LB
12185.             $SC_ss_prop_I58 = ss_prop%forward_solar%dim_3%SM
12185.             $SC_ss_prop_I57 = ss_prop%forward_solar%dim_3%EX
12185.             $SC_ss_prop_I59 = ss_prop%forward_solar%dim_3%LB
12184.             if ( nd_profile > 0 ) then
12183.                $I_L12183_717 = 0
12183.                do
12184.                   $I_L12184_644 = 0
12184. !dir$ ivdep
12184.                   do
12185.                      (ss_prop%forward_solar%base_addr)(1 + $I_L12184_644, id_ct + $I_L12183_717, 0, 0) = 0.0
12186.                      $I_L12184_644 = 1 + $I_L12184_644
12184.                      if ( $I_L12184_644 >= nd_profile ) exit
12184.                   enddo
12187.                   $I_L12183_717 = 1 + $I_L12183_717
12186.                   if ( $I_L12183_717 >= 1 + nd_layer + -id_ct ) exit
12186.                enddo
12186.             endif
12186.          endif
12186.       endif
12198.       if ( l_rayleigh /= .false. ) then
12206.          if ( nd_layer + -id_ct >= 0 ) then
12208.             $SC_ss_prop_I10 = ss_prop%k_ext_scat%dim_1%SM
12208.             $SC_ss_prop_I9 = ss_prop%k_ext_scat%dim_1%EX
12208.             $SC_ss_prop_I11 = ss_prop%k_ext_scat%dim_1%LB
12208.             $SC_ss_prop_I13 = ss_prop%k_ext_scat%dim_2%SM
12208.             $SC_ss_prop_I12 = ss_prop%k_ext_scat%dim_2%EX
12208.             $SC_ss_prop_I14 = ss_prop%k_ext_scat%dim_2%LB
12208.             $SC_ss_prop_I16 = ss_prop%k_ext_scat%dim_3%SM
12208.             $SC_ss_prop_I15 = ss_prop%k_ext_scat%dim_3%EX
12208.             $SC_ss_prop_I17 = ss_prop%k_ext_scat%dim_3%LB
12207.             if ( nd_profile > 0 ) then
12206.                $I_L12206_719 = 0
12206.                do
12207.                   $I_L12207_646 = 0
12207. !dir$ ivdep
12207.                   do
12208.                      (ss_prop%k_ext_scat%base_addr)(1 + $I_L12207_646, id_ct + $I_L12206_719, 0, 0) = rayleigh_coeff + (ss_prop%k_ext_scat%base_addr)(1 + $I_L12207_646, id_ct + $I_L12206_719, 0, 0)
12210.                      $I_L12207_646 = 1 + $I_L12207_646
12207.                      if ( $I_L12207_646 >= nd_profile ) exit
12207.                   enddo
12211.                   $I_L12206_719 = 1 + $I_L12206_719
12210.                   if ( $I_L12206_719 >= 1 + nd_layer + -id_ct ) exit
12210.                enddo
12210.             endif
12210.          endif
12214.          if ( n_order_phase >= 2 ) then
12223.             if ( nd_layer + -id_ct >= 0 ) then
12225.                $SC_ss_prop_I19 = ss_prop%phase_fnc%dim_1%SM
12225.                $SC_ss_prop_I18 = ss_prop%phase_fnc%dim_1%EX
12225.                $SC_ss_prop_I20 = ss_prop%phase_fnc%dim_1%LB
12225.                $SC_ss_prop_I22 = ss_prop%phase_fnc%dim_2%SM
12225.                $SC_ss_prop_I21 = ss_prop%phase_fnc%dim_2%EX
12225.                $SC_ss_prop_I23 = ss_prop%phase_fnc%dim_2%LB
12225.                $SC_ss_prop_I25 = ss_prop%phase_fnc%dim_3%SM
12225.                $SC_ss_prop_I24 = ss_prop%phase_fnc%dim_3%EX
12225.                $SC_ss_prop_I26 = ss_prop%phase_fnc%dim_3%LB
12225.                $SC_ss_prop_I28 = ss_prop%phase_fnc%dim_4%SM
12225.                $SC_ss_prop_I27 = ss_prop%phase_fnc%dim_4%EX
12225.                $SC_ss_prop_I29 = ss_prop%phase_fnc%dim_4%LB
12224.                if ( nd_profile > 0 ) then
12223.                   $I_L12223_721 = 0
12223.                   do
12224.                      $I_L12224_648 = 0
12224. !dir$ ivdep
12224.                      do
12225.                         (ss_prop%phase_fnc%base_addr)(1 + $I_L12224_648, id_ct + $I_L12223_721, 2, 0, 0) = (ss_prop%phase_fnc%base_addr)(1 + $I_L12224_648, id_ct + $I_L12223_721, 2, 0, 0) + 1.0000000000000001e-1 * rayleigh_coeff
12228.                         $I_L12224_648 = 1 + $I_L12224_648
12224.                         if ( $I_L12224_648 >= nd_profile ) exit
12224.                      enddo
12229.                      $I_L12223_721 = 1 + $I_L12223_721
12228.                      if ( $I_L12223_721 >= 1 + nd_layer + -id_ct ) exit
12228.                   enddo
12228.                endif
12228.             endif
12228.          endif
12235.          if ( l_solar_phf /= .false. ) then
12237.             if ( n_direction > 0 ) then
12249.                $SC_ss_prop_I40 = ss_prop%phase_fnc_solar%dim_1%SM
12249.                $SC_ss_prop_I39 = ss_prop%phase_fnc_solar%dim_1%EX
12249.                $SC_ss_prop_I41 = ss_prop%phase_fnc_solar%dim_1%LB
12249.                $SC_ss_prop_I43 = ss_prop%phase_fnc_solar%dim_2%SM
12249.                $SC_ss_prop_I42 = ss_prop%phase_fnc_solar%dim_2%EX
12249.                $SC_ss_prop_I44 = ss_prop%phase_fnc_solar%dim_2%LB
12249.                $SC_ss_prop_I46 = ss_prop%phase_fnc_solar%dim_3%SM
12249.                $SC_ss_prop_I45 = ss_prop%phase_fnc_solar%dim_3%EX
12249.                $SC_ss_prop_I47 = ss_prop%phase_fnc_solar%dim_3%LB
12249.                $SC_ss_prop_I49 = ss_prop%phase_fnc_solar%dim_4%SM
12249.                $SC_ss_prop_I48 = ss_prop%phase_fnc_solar%dim_4%EX
12249.                $SC_ss_prop_I50 = ss_prop%phase_fnc_solar%dim_4%LB
12247.                if ( nd_layer + -id_ct >= 0 ) then
12248.                   if ( nd_profile > 0 ) then
12237.                      $I_L12237_786 = 0
12237. !dir$ blocking_size( 1, 1 )
12237.                      do
12247.                         $I_L12247_723 = 0
12247.                         if ( -3 + nd_layer + -id_ct >= 0 ) then
12247.                            $I_L12247_832 = 0
12247. !dir$ blocking_size( 1, 1 )
12247.                            do
12248.                               $I_L12248_650 = 0
12248. !dir$ ivdep
12248. !dir$ blocking_size( 256, 256 )
12248.                               do
12249.                                  (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12248_650, id_ct + 4 * $I_L12247_832, 1 + $I_L12237_786, 0, 0) = (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12248_650, id_ct + 4 * $I_L12247_832, 1 + $I_L12237_786, 0, 0) + 7.5e-1 * rayleigh_coeff * ( 1.0 + cos_sol_view(1 + $I_L12248_650, 1 + $I_L12237_786) * cos_sol_view(1 + $I_L12248_650, 1 + $I_L12237_786) )
12249.                                  (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12248_650, 1 + id_ct + 4 * $I_L12247_832, 1 + $I_L12237_786, 0, 0) = (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12248_650, 1 + id_ct + 4 * $I_L12247_832, 1 + $I_L12237_786, 0, 0) + 7.5e-1 * rayleigh_coeff * ( 1.0 + cos_sol_view(1 + $I_L12248_650, 1 + $I_L12237_786) * cos_sol_view(1 + $I_L12248_650, 1 + $I_L12237_786) )
12249.                                  (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12248_650, 2 + id_ct + 4 * $I_L12247_832, 1 + $I_L12237_786, 0, 0) = (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12248_650, 2 + id_ct + 4 * $I_L12247_832, 1 + $I_L12237_786, 0, 0) + 7.5e-1 * rayleigh_coeff * ( 1.0 + cos_sol_view(1 + $I_L12248_650, 1 + $I_L12237_786) * cos_sol_view(1 + $I_L12248_650, 1 + $I_L12237_786) )
12249.                                  (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12248_650, 3 + id_ct + 4 * $I_L12247_832, 1 + $I_L12237_786, 0, 0) = (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12248_650, 3 + id_ct + 4 * $I_L12247_832, 1 + $I_L12237_786, 0, 0) + 7.5e-1 * rayleigh_coeff * ( 1.0 + cos_sol_view(1 + $I_L12248_650, 1 + $I_L12237_786) * cos_sol_view(1 + $I_L12248_650, 1 + $I_L12237_786) )
12253.                                  $I_L12248_650 = 1 + $I_L12248_650
12248.                                  if ( $I_L12248_650 >= nd_profile ) exit
12248.                               enddo
12254.                               $I_L12247_832 = 1 + $I_L12247_832
12253.                               if ( $I_L12247_832 >= _rsh( 1 + nd_layer + -id_ct, 2 ) ) exit
12253.                            enddo
12254.                            $I_L12247_723 = and( 0xfffffffffffffffcUL, 1 + nd_layer + -id_ct )
12254.                         endif
12247.                         if ( $I_L12247_723 < 1 + nd_layer + -id_ct ) then
12247.                            $I_L12247_829 = 0
12247. !dir$ blocking_size( 1, 1 )
12247.                            do
12248.                               $I_L12248_650 = 0
12248. !dir$ ivdep
12248. !dir$ blocking_size( 256, 256 )
12248.                               do
12249.                                  (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12248_650, id_ct + $I_L12247_723 + $I_L12247_829, 1 + $I_L12237_786, 0, 0) = (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12248_650, id_ct + $I_L12247_723 + $I_L12247_829, 1 + $I_L12237_786, 0, 0) + 7.5e-1 * rayleigh_coeff * ( 1.0 + cos_sol_view(1 + $I_L12248_650, 1 + $I_L12237_786) * cos_sol_view(1 + $I_L12248_650, 1 + $I_L12237_786) )
12253.                                  $I_L12248_650 = 1 + $I_L12248_650
12248.                                  if ( $I_L12248_650 >= nd_profile ) exit
12248.                               enddo
12254.                               $I_L12247_829 = 1 + $I_L12247_829
12253.                               if ( $I_L12247_829 >= 1 + nd_layer + -id_ct + -$I_L12247_723 ) exit
12253.                            enddo
12253.                         endif
12255.                         $I_L12237_786 = 1 + $I_L12237_786
12254.                         if ( $I_L12237_786 >= n_direction ) exit
12254.                      enddo
12254.                   endif
12254.                endif
12254.             endif
12254.          endif
12254.       endif
12261.       if ( l_aerosol /= .false. ) then
12288.          t$5862 = 0
12288.          t$5863 = 0
12288.          $t_S24 = 0
12288.          t$5867 = 0
12288.          if ( ( ss_prop%k_grey_tot%header%a_contig == 1 .or. -ss_prop%k_grey_tot%header%el_len + ss_prop%k_grey_tot%dim_1%SM * ss_prop%k_grey_tot%header%dv_smunit == 0 .and. -ss_prop%k_grey_tot%dim_2%SM + ss_prop%k_grey_tot%dim_1%EX * ss_prop%k_grey_tot%dim_1%SM == 0 ) /= .false. ) then
12288. !dir$ suppress (ss_prop%k_grey_tot%base_addr)(ss_prop%k_grey_tot%dim_1%LB, ss_prop%k_grey_tot%dim_2%LB, 0, 0)
12288.             t$5861 = loc( (ss_prop%k_grey_tot%base_addr)(ss_prop%k_grey_tot%dim_1%LB, ss_prop%k_grey_tot%dim_2%LB, 0, 0) )
12288.          else
12288.             t$5862 = ( max( 0, ( 1 + -1 + ss_prop%k_grey_tot%dim_1%EX ) ) )
12288.             t$5863 = ( max( 0, ( 1 + -1 + ss_prop%k_grey_tot%dim_2%EX ) ) )
12288.             $t_S24 = ( max( 0, ( 1 + -1 + ss_prop%k_grey_tot%dim_1%EX ) ) )
12288.             t$5867 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%k_grey_tot%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%k_grey_tot%dim_1%EX ) ) ) ) ) ), 8 )
12288.             $F_A33 = ( max( 0, ss_prop%k_grey_tot%dim_2%EX ) )
12288.             $F_A34 = ( max( 0, ss_prop%k_grey_tot%dim_1%EX ) )
12288.             if ( and( -$F_A34, -$F_A33 ) < 0 ) then
12288.                $SC_ss_prop_I160 = ss_prop%k_grey_tot%dim_1%SM
12288.                $SC_ss_prop_I159 = ss_prop%k_grey_tot%dim_1%EX
12288.                $SC_ss_prop_I161 = ss_prop%k_grey_tot%dim_1%LB
12288.                $SC_ss_prop_I163 = ss_prop%k_grey_tot%dim_2%SM
12288.                $SC_ss_prop_I162 = ss_prop%k_grey_tot%dim_2%EX
12288.                $SC_ss_prop_I164 = ss_prop%k_grey_tot%dim_2%LB
12288.                $SC_ss_prop_I166 = ss_prop%k_grey_tot%dim_3%SM
12288.                $SC_ss_prop_I165 = ss_prop%k_grey_tot%dim_3%EX
12288.                $SC_ss_prop_I167 = ss_prop%k_grey_tot%dim_3%LB
12288.                $I_L12288_759 = 0
12288.                do
12288.                   $I_L12288_689 = 0
12288. !dir$ ivdep
12288.                   do
12288.                      t$5866(1 + $I_L12288_689, 1 + $I_L12288_759) = (ss_prop%k_grey_tot%base_addr)($SC_ss_prop_I161 + $I_L12288_689, $SC_ss_prop_I164 + $I_L12288_759, 0, 0)
12288.                      $I_L12288_689 = 1 + $I_L12288_689
12288.                      if ( $I_L12288_689 >= $F_A34 ) exit
12288.                   enddo
12288.                   $I_L12288_759 = 1 + $I_L12288_759
12288.                   if ( $I_L12288_759 >= $F_A33 ) exit
12288.                enddo
12288.             endif
12288. !dir$ suppress t$5866
12288.             t$5861 = loc( t$5866 )
12288.          endif
12289.          t$5869 = 0
12289.          t$5870 = 0
12289.          $t_S23 = 0
12289.          t$5874 = 0
12289.          if ( ( ss_prop%k_ext_scat%header%a_contig == 1 .or. -ss_prop%k_ext_scat%header%el_len + ss_prop%k_ext_scat%dim_1%SM * ss_prop%k_ext_scat%header%dv_smunit == 0 .and. -ss_prop%k_ext_scat%dim_2%SM + ss_prop%k_ext_scat%dim_1%EX * ss_prop%k_ext_scat%dim_1%SM == 0 ) /= .false. ) then
12289. !dir$ suppress (ss_prop%k_ext_scat%base_addr)(ss_prop%k_ext_scat%dim_1%LB, ss_prop%k_ext_scat%dim_2%LB, 0, 0)
12289.             t$5868 = loc( (ss_prop%k_ext_scat%base_addr)(ss_prop%k_ext_scat%dim_1%LB, ss_prop%k_ext_scat%dim_2%LB, 0, 0) )
12289.          else
12289.             t$5869 = ( max( 0, ( 1 + -1 + ss_prop%k_ext_scat%dim_1%EX ) ) )
12289.             t$5870 = ( max( 0, ( 1 + -1 + ss_prop%k_ext_scat%dim_2%EX ) ) )
12289.             $t_S23 = ( max( 0, ( 1 + -1 + ss_prop%k_ext_scat%dim_1%EX ) ) )
12289.             t$5874 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%k_ext_scat%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%k_ext_scat%dim_1%EX ) ) ) ) ) ), 8 )
12289.             $F_A35 = ( max( 0, ss_prop%k_ext_scat%dim_2%EX ) )
12289.             $F_A36 = ( max( 0, ss_prop%k_ext_scat%dim_1%EX ) )
12289.             if ( and( -$F_A36, -$F_A35 ) < 0 ) then
12289.                $SC_ss_prop_I169 = ss_prop%k_ext_scat%dim_1%SM
12289.                $SC_ss_prop_I168 = ss_prop%k_ext_scat%dim_1%EX
12289.                $SC_ss_prop_I170 = ss_prop%k_ext_scat%dim_1%LB
12289.                $SC_ss_prop_I172 = ss_prop%k_ext_scat%dim_2%SM
12289.                $SC_ss_prop_I171 = ss_prop%k_ext_scat%dim_2%EX
12289.                $SC_ss_prop_I173 = ss_prop%k_ext_scat%dim_2%LB
12289.                $SC_ss_prop_I175 = ss_prop%k_ext_scat%dim_3%SM
12289.                $SC_ss_prop_I174 = ss_prop%k_ext_scat%dim_3%EX
12289.                $SC_ss_prop_I176 = ss_prop%k_ext_scat%dim_3%LB
12289.                $I_L12289_761 = 0
12289.                do
12289.                   $I_L12289_691 = 0
12289. !dir$ ivdep
12289.                   do
12289.                      t$5873(1 + $I_L12289_691, 1 + $I_L12289_761) = (ss_prop%k_ext_scat%base_addr)($SC_ss_prop_I170 + $I_L12289_691, $SC_ss_prop_I173 + $I_L12289_761, 0, 0)
12289.                      $I_L12289_691 = 1 + $I_L12289_691
12289.                      if ( $I_L12289_691 >= $F_A36 ) exit
12289.                   enddo
12289.                   $I_L12289_761 = 1 + $I_L12289_761
12289.                   if ( $I_L12289_761 >= $F_A35 ) exit
12289.                enddo
12289.             endif
12289. !dir$ suppress t$5873
12289.             t$5868 = loc( t$5873 )
12289.          endif
12290.          t$5876 = 0
12290.          t$5877 = 0
12290.          t$5878 = 0
12290.          $t_S21 = 0
12290.          $t_S22 = 0
12290.          t$5883 = 0
12290.          if ( ( ss_prop%phase_fnc%header%a_contig == 1 .or. -ss_prop%phase_fnc%header%el_len + ss_prop%phase_fnc%dim_1%SM * ss_prop%phase_fnc%header%dv_smunit == 0 .and. -ss_prop%phase_fnc%dim_2%SM + ss_prop%phase_fnc%dim_1%EX * ss_prop%phase_fnc%dim_1%SM == 0 .and. -ss_prop%phase_fnc%dim_3%SM + ss_prop%phase_fnc%dim_2%EX * ss_prop%phase_fnc%dim_2%SM == 0 ) /= .false. ) then
12290. !dir$ suppress (ss_prop%phase_fnc%base_addr)(ss_prop%phase_fnc%dim_1%LB, ss_prop%phase_fnc%dim_2%LB, ss_prop%phase_fnc%dim_3%LB, 0, 0)
12290.             t$5875 = loc( (ss_prop%phase_fnc%base_addr)(ss_prop%phase_fnc%dim_1%LB, ss_prop%phase_fnc%dim_2%LB, ss_prop%phase_fnc%dim_3%LB, 0, 0) )
12290.          else
12290.             t$5876 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_1%EX ) ) )
12290.             t$5877 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_2%EX ) ) )
12290.             t$5878 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_3%EX ) ) )
12290.             $t_S21 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_1%EX ) ) )
12290.             $t_S22 = max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_2%EX ) ) * ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_1%EX ) ) )
12290.             t$5883 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_3%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_1%EX ) ) ) ) ) ), 8 )
12290.             $F_A37 = ( max( 0, ss_prop%phase_fnc%dim_3%EX ) )
12290.             $F_A38 = ( max( 0, ss_prop%phase_fnc%dim_2%EX ) )
12290.             $F_A39 = ( max( 0, ss_prop%phase_fnc%dim_1%EX ) )
12290.             if ( and( and( -$F_A38, -$F_A37 ), -$F_A39 ) < 0 ) then
12290.                $SC_ss_prop_I178 = ss_prop%phase_fnc%dim_1%SM
12290.                $SC_ss_prop_I177 = ss_prop%phase_fnc%dim_1%EX
12290.                $SC_ss_prop_I179 = ss_prop%phase_fnc%dim_1%LB
12290.                $SC_ss_prop_I181 = ss_prop%phase_fnc%dim_2%SM
12290.                $SC_ss_prop_I180 = ss_prop%phase_fnc%dim_2%EX
12290.                $SC_ss_prop_I182 = ss_prop%phase_fnc%dim_2%LB
12290.                $SC_ss_prop_I184 = ss_prop%phase_fnc%dim_3%SM
12290.                $SC_ss_prop_I183 = ss_prop%phase_fnc%dim_3%EX
12290.                $SC_ss_prop_I185 = ss_prop%phase_fnc%dim_3%LB
12290.                $SC_ss_prop_I187 = ss_prop%phase_fnc%dim_4%SM
12290.                $SC_ss_prop_I186 = ss_prop%phase_fnc%dim_4%EX
12290.                $SC_ss_prop_I188 = ss_prop%phase_fnc%dim_4%LB
12290.                $I_L12290_811 = 0
12290.                do
12290.                   $I_L12290_763 = 0
12290.                   do
12290.                      $I_L12290_693 = 0
12290. !dir$ ivdep
12290.                      do
12290.                         t$5882(1 + $I_L12290_693, 1 + $I_L12290_763, 1 + $I_L12290_811) = (ss_prop%phase_fnc%base_addr)($SC_ss_prop_I179 + $I_L12290_693, $SC_ss_prop_I182 + $I_L12290_763, $SC_ss_prop_I185 + $I_L12290_811, 0, 0)
12290.                         $I_L12290_693 = 1 + $I_L12290_693
12290.                         if ( $I_L12290_693 >= $F_A39 ) exit
12290.                      enddo
12290.                      $I_L12290_763 = 1 + $I_L12290_763
12290.                      if ( $I_L12290_763 >= $F_A38 ) exit
12290.                   enddo
12290.                   $I_L12290_811 = 1 + $I_L12290_811
12290.                   if ( $I_L12290_811 >= $F_A37 ) exit
12290.                enddo
12290.             endif
12290. !dir$ suppress t$5882
12290.             t$5875 = loc( t$5882 )
12290.          endif
12291.          t$5885 = 0
12291.          t$5886 = 0
12291.          $t_S20 = 0
12291.          t$5890 = 0
12291.          if ( ( ss_prop%forward_scatter%header%a_contig == 1 .or. -ss_prop%forward_scatter%header%el_len + ss_prop%forward_scatter%dim_1%SM * ss_prop%forward_scatter%header%dv_smunit == 0 .and. -ss_prop%forward_scatter%dim_2%SM + ss_prop%forward_scatter%dim_1%EX * ss_prop%forward_scatter%dim_1%SM == 0 ) /= .false. ) then
12291. !dir$ suppress (ss_prop%forward_scatter%base_addr)(ss_prop%forward_scatter%dim_1%LB, ss_prop%forward_scatter%dim_2%LB, 0, 0)
12291.             t$5884 = loc( (ss_prop%forward_scatter%base_addr)(ss_prop%forward_scatter%dim_1%LB, ss_prop%forward_scatter%dim_2%LB, 0, 0) )
12291.          else
12291.             t$5885 = ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_1%EX ) ) )
12291.             t$5886 = ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_2%EX ) ) )
12291.             $t_S20 = ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_1%EX ) ) )
12291.             t$5890 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_1%EX ) ) ) ) ) ), 8 )
12291.             $F_A40 = ( max( 0, ss_prop%forward_scatter%dim_2%EX ) )
12291.             $F_A41 = ( max( 0, ss_prop%forward_scatter%dim_1%EX ) )
12291.             if ( and( -$F_A41, -$F_A40 ) < 0 ) then
12291.                $SC_ss_prop_I190 = ss_prop%forward_scatter%dim_1%SM
12291.                $SC_ss_prop_I189 = ss_prop%forward_scatter%dim_1%EX
12291.                $SC_ss_prop_I191 = ss_prop%forward_scatter%dim_1%LB
12291.                $SC_ss_prop_I193 = ss_prop%forward_scatter%dim_2%SM
12291.                $SC_ss_prop_I192 = ss_prop%forward_scatter%dim_2%EX
12291.                $SC_ss_prop_I194 = ss_prop%forward_scatter%dim_2%LB
12291.                $SC_ss_prop_I196 = ss_prop%forward_scatter%dim_3%SM
12291.                $SC_ss_prop_I195 = ss_prop%forward_scatter%dim_3%EX
12291.                $SC_ss_prop_I197 = ss_prop%forward_scatter%dim_3%LB
12291.                $I_L12291_765 = 0
12291.                do
12291.                   $I_L12291_695 = 0
12291. !dir$ ivdep
12291.                   do
12291.                      t$5889(1 + $I_L12291_695, 1 + $I_L12291_765) = (ss_prop%forward_scatter%base_addr)($SC_ss_prop_I191 + $I_L12291_695, $SC_ss_prop_I194 + $I_L12291_765, 0, 0)
12291.                      $I_L12291_695 = 1 + $I_L12291_695
12291.                      if ( $I_L12291_695 >= $F_A41 ) exit
12291.                   enddo
12291.                   $I_L12291_765 = 1 + $I_L12291_765
12291.                   if ( $I_L12291_765 >= $F_A40 ) exit
12291.                enddo
12291.             endif
12291. !dir$ suppress t$5889
12291.             t$5884 = loc( t$5889 )
12291.          endif
12292.          t$5892 = 0
12292.          t$5893 = 0
12292.          $t_S19 = 0
12292.          t$5897 = 0
12292.          if ( ( ss_prop%forward_solar%header%a_contig == 1 .or. -ss_prop%forward_solar%header%el_len + ss_prop%forward_solar%dim_1%SM * ss_prop%forward_solar%header%dv_smunit == 0 .and. -ss_prop%forward_solar%dim_2%SM + ss_prop%forward_solar%dim_1%EX * ss_prop%forward_solar%dim_1%SM == 0 ) /= .false. ) then
12292. !dir$ suppress (ss_prop%forward_solar%base_addr)(ss_prop%forward_solar%dim_1%LB, ss_prop%forward_solar%dim_2%LB, 0, 0)
12292.             t$5891 = loc( (ss_prop%forward_solar%base_addr)(ss_prop%forward_solar%dim_1%LB, ss_prop%forward_solar%dim_2%LB, 0, 0) )
12292.          else
12292.             t$5892 = ( max( 0, ( 1 + -1 + ss_prop%forward_solar%dim_1%EX ) ) )
12292.             t$5893 = ( max( 0, ( 1 + -1 + ss_prop%forward_solar%dim_2%EX ) ) )
12292.             $t_S19 = ( max( 0, ( 1 + -1 + ss_prop%forward_solar%dim_1%EX ) ) )
12292.             t$5897 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%forward_solar%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%forward_solar%dim_1%EX ) ) ) ) ) ), 8 )
12292.             $F_A42 = ( max( 0, ss_prop%forward_solar%dim_2%EX ) )
12292.             $F_A43 = ( max( 0, ss_prop%forward_solar%dim_1%EX ) )
12292.             if ( and( -$F_A43, -$F_A42 ) < 0 ) then
12292.                $SC_ss_prop_I199 = ss_prop%forward_solar%dim_1%SM
12292.                $SC_ss_prop_I198 = ss_prop%forward_solar%dim_1%EX
12292.                $SC_ss_prop_I200 = ss_prop%forward_solar%dim_1%LB
12292.                $SC_ss_prop_I202 = ss_prop%forward_solar%dim_2%SM
12292.                $SC_ss_prop_I201 = ss_prop%forward_solar%dim_2%EX
12292.                $SC_ss_prop_I203 = ss_prop%forward_solar%dim_2%LB
12292.                $SC_ss_prop_I205 = ss_prop%forward_solar%dim_3%SM
12292.                $SC_ss_prop_I204 = ss_prop%forward_solar%dim_3%EX
12292.                $SC_ss_prop_I206 = ss_prop%forward_solar%dim_3%LB
12292.                $I_L12292_767 = 0
12292.                do
12292.                   $I_L12292_697 = 0
12292. !dir$ ivdep
12292.                   do
12292.                      t$5896(1 + $I_L12292_697, 1 + $I_L12292_767) = (ss_prop%forward_solar%base_addr)($SC_ss_prop_I200 + $I_L12292_697, $SC_ss_prop_I203 + $I_L12292_767, 0, 0)
12292.                      $I_L12292_697 = 1 + $I_L12292_697
12292.                      if ( $I_L12292_697 >= $F_A43 ) exit
12292.                   enddo
12292.                   $I_L12292_767 = 1 + $I_L12292_767
12292.                   if ( $I_L12292_767 >= $F_A42 ) exit
12292.                enddo
12292.             endif
12292. !dir$ suppress t$5896
12292.             t$5891 = loc( t$5896 )
12292.          endif
12293.          t$5899 = 0
12293.          t$5900 = 0
12293.          t$5901 = 0
12293.          t$5906 = 0
12293.          if ( ( ss_prop%phase_fnc_solar%header%a_contig == 1 .or. -ss_prop%phase_fnc_solar%header%el_len + ss_prop%phase_fnc_solar%dim_1%SM * ss_prop%phase_fnc_solar%header%dv_smunit == 0 .and. -ss_prop%phase_fnc_solar%dim_2%SM + ss_prop%phase_fnc_solar%dim_1%EX * ss_prop%phase_fnc_solar%dim_1%SM == 0 .and. -ss_prop%phase_fnc_solar%dim_3%SM + ss_prop%phase_fnc_solar%dim_2%EX * ss_prop%phase_fnc_solar%dim_2%SM == 0 ) /= .false. ) then
12293. !dir$ suppress (ss_prop%phase_fnc_solar%base_addr)(ss_prop%phase_fnc_solar%dim_1%LB, ss_prop%phase_fnc_solar%dim_2%LB, ss_prop%phase_fnc_solar%dim_3%LB, 0, 0)
12293.             t$5898 = loc( (ss_prop%phase_fnc_solar%base_addr)(ss_prop%phase_fnc_solar%dim_1%LB, ss_prop%phase_fnc_solar%dim_2%LB, ss_prop%phase_fnc_solar%dim_3%LB, 0, 0) )
12293.          else
12293.             t$5899 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_1%EX ) ) )
12293.             t$5900 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_2%EX ) ) )
12293.             t$5901 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_3%EX ) ) )
12293.             t$5906 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_3%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc_solar%dim_1%EX ) ) ) ) ) ), 8 )
12272.             call _f90_copy_from_dv( t$5905, ss_prop%phase_fnc_solar )
12293. !dir$ suppress t$5905
12293.             t$5898 = loc( t$5905 )
12293.          endif
12272.          call opt_prop_aerosol( ierr, n_profile, 1, n_layer, n_order_phase, l_rescale, n_order_forward, l_henyey_greenstein_pf, n_aerosol, aerosol_mix_ratio(1, 1, 1), i_aerosol_parametrization(1), i_humidity_pointer(1, 1), humidities(1, 1), delta_humidity, mean_rel_humidity(1, 1), aerosol_absorption(1, 1), aerosol_scattering(1, 1), aerosol_phase_fnc(1, 1, 1), l_solar_phf, n_order_phase_solar, n_direction, cos_sol_view(1, 1), p(1, 1), density(1, 1), n_opt_level_aerosol_prsc(1), aerosol_pressure_prsc(1, 1, 1), aerosol_absorption_prsc(1, 1, 1), aerosol_scattering_prsc(1, 1, 1), aerosol_phase_fnc_prsc(1, 1, 1, 1), t$5861, t$5868, t$5875, t$5884, t$5891, t$5898, nd_profile, nd_radiance_profile, nd_layer, id_ct, nd_layer, nd_aerosol_species, nd_humidities, nd_phase_term, nd_max_order, nd_direction, nd_profile_aerosol_prsc, nd_opt_level_aerosol_prsc )
12293.          if ( ( ss_prop%phase_fnc_solar%header%a_contig == 1 .or. -ss_prop%phase_fnc_solar%header%el_len + ss_prop%phase_fnc_solar%dim_1%SM * ss_prop%phase_fnc_solar%header%dv_smunit == 0 .and. -ss_prop%phase_fnc_solar%dim_2%SM + ss_prop%phase_fnc_solar%dim_1%EX * ss_prop%phase_fnc_solar%dim_1%SM == 0 .and. -ss_prop%phase_fnc_solar%dim_3%SM + ss_prop%phase_fnc_solar%dim_2%EX * ss_prop%phase_fnc_solar%dim_2%SM == 0 ) == .false. ) then
12272.             call _f90_copy_to_dv( ss_prop%phase_fnc_solar, t$5905 )
12293.             _free( t$5906 )
12293.          endif
12292.          if ( ( ss_prop%forward_solar%header%a_contig == 1 .or. -ss_prop%forward_solar%header%el_len + ss_prop%forward_solar%dim_1%SM * ss_prop%forward_solar%header%dv_smunit == 0 .and. -ss_prop%forward_solar%dim_2%SM + ss_prop%forward_solar%dim_1%EX * ss_prop%forward_solar%dim_1%SM == 0 ) == .false. ) then
12272.             $F_A44 = t$5893
12272.             $F_A45 = t$5892
12272.             if ( and( -$F_A45, -$F_A44 ) < 0 ) then
12272.                $SC_ss_prop_I199 = ss_prop%forward_solar%dim_1%SM
12272.                $SC_ss_prop_I200 = ss_prop%forward_solar%dim_1%LB
12272.                $SC_ss_prop_I202 = ss_prop%forward_solar%dim_2%SM
12272.                $SC_ss_prop_I203 = ss_prop%forward_solar%dim_2%LB
12272.                $SC_ss_prop_I205 = ss_prop%forward_solar%dim_3%SM
12272.                $SC_ss_prop_I204 = ss_prop%forward_solar%dim_3%EX
12272.                $SC_ss_prop_I206 = ss_prop%forward_solar%dim_3%LB
12272.                $I_L12272_769 = 0
12272.                do
12272.                   $I_L12272_699 = 0
12272. !dir$ ivdep
12272.                   do
12272.                      (ss_prop%forward_solar%base_addr)($SC_ss_prop_I200 + $I_L12272_699, $SC_ss_prop_I203 + $I_L12272_769, 0, 0) = t$5896(1 + $I_L12272_699, 1 + $I_L12272_769)
12272.                      $I_L12272_699 = 1 + $I_L12272_699
12272.                      if ( $I_L12272_699 >= $F_A45 ) exit
12272.                   enddo
12272.                   $I_L12272_769 = 1 + $I_L12272_769
12272.                   if ( $I_L12272_769 >= $F_A44 ) exit
12272.                enddo
12272.             endif
12292.             _free( t$5897 )
12292.          endif
12291.          if ( ( ss_prop%forward_scatter%header%a_contig == 1 .or. -ss_prop%forward_scatter%header%el_len + ss_prop%forward_scatter%dim_1%SM * ss_prop%forward_scatter%header%dv_smunit == 0 .and. -ss_prop%forward_scatter%dim_2%SM + ss_prop%forward_scatter%dim_1%EX * ss_prop%forward_scatter%dim_1%SM == 0 ) == .false. ) then
12272.             $F_A46 = t$5886
12272.             $F_A47 = t$5885
12272.             if ( and( -$F_A47, -$F_A46 ) < 0 ) then
12272.                $SC_ss_prop_I190 = ss_prop%forward_scatter%dim_1%SM
12272.                $SC_ss_prop_I191 = ss_prop%forward_scatter%dim_1%LB
12272.                $SC_ss_prop_I193 = ss_prop%forward_scatter%dim_2%SM
12272.                $SC_ss_prop_I194 = ss_prop%forward_scatter%dim_2%LB
12272.                $SC_ss_prop_I196 = ss_prop%forward_scatter%dim_3%SM
12272.                $SC_ss_prop_I195 = ss_prop%forward_scatter%dim_3%EX
12272.                $SC_ss_prop_I197 = ss_prop%forward_scatter%dim_3%LB
12272.                $I_L12272_771 = 0
12272.                do
12272.                   $I_L12272_701 = 0
12272. !dir$ ivdep
12272.                   do
12272.                      (ss_prop%forward_scatter%base_addr)($SC_ss_prop_I191 + $I_L12272_701, $SC_ss_prop_I194 + $I_L12272_771, 0, 0) = t$5889(1 + $I_L12272_701, 1 + $I_L12272_771)
12272.                      $I_L12272_701 = 1 + $I_L12272_701
12272.                      if ( $I_L12272_701 >= $F_A47 ) exit
12272.                   enddo
12272.                   $I_L12272_771 = 1 + $I_L12272_771
12272.                   if ( $I_L12272_771 >= $F_A46 ) exit
12272.                enddo
12272.             endif
12291.             _free( t$5890 )
12291.          endif
12290.          if ( ( ss_prop%phase_fnc%header%a_contig == 1 .or. -ss_prop%phase_fnc%header%el_len + ss_prop%phase_fnc%dim_1%SM * ss_prop%phase_fnc%header%dv_smunit == 0 .and. -ss_prop%phase_fnc%dim_2%SM + ss_prop%phase_fnc%dim_1%EX * ss_prop%phase_fnc%dim_1%SM == 0 .and. -ss_prop%phase_fnc%dim_3%SM + ss_prop%phase_fnc%dim_2%EX * ss_prop%phase_fnc%dim_2%SM == 0 ) == .false. ) then
12272.             $F_A48 = t$5878
12272.             $F_A49 = t$5877
12272.             $F_A50 = t$5876
12272.             if ( and( and( -$F_A49, -$F_A48 ), -$F_A50 ) < 0 ) then
12272.                $SC_ss_prop_I178 = ss_prop%phase_fnc%dim_1%SM
12272.                $SC_ss_prop_I179 = ss_prop%phase_fnc%dim_1%LB
12272.                $SC_ss_prop_I181 = ss_prop%phase_fnc%dim_2%SM
12272.                $SC_ss_prop_I182 = ss_prop%phase_fnc%dim_2%LB
12272.                $SC_ss_prop_I184 = ss_prop%phase_fnc%dim_3%SM
12272.                $SC_ss_prop_I185 = ss_prop%phase_fnc%dim_3%LB
12272.                $SC_ss_prop_I187 = ss_prop%phase_fnc%dim_4%SM
12272.                $SC_ss_prop_I186 = ss_prop%phase_fnc%dim_4%EX
12272.                $SC_ss_prop_I188 = ss_prop%phase_fnc%dim_4%LB
12272.                $I_L12272_813 = 0
12272.                do
12272.                   $I_L12272_773 = 0
12272.                   do
12272.                      $I_L12272_703 = 0
12272. !dir$ ivdep
12272.                      do
12272.                         (ss_prop%phase_fnc%base_addr)($SC_ss_prop_I179 + $I_L12272_703, $SC_ss_prop_I182 + $I_L12272_773, $SC_ss_prop_I185 + $I_L12272_813, 0, 0) = t$5882(1 + $I_L12272_703, 1 + $I_L12272_773, 1 + $I_L12272_813)
12272.                         $I_L12272_703 = 1 + $I_L12272_703
12272.                         if ( $I_L12272_703 >= $F_A50 ) exit
12272.                      enddo
12272.                      $I_L12272_773 = 1 + $I_L12272_773
12272.                      if ( $I_L12272_773 >= $F_A49 ) exit
12272.                   enddo
12272.                   $I_L12272_813 = 1 + $I_L12272_813
12272.                   if ( $I_L12272_813 >= $F_A48 ) exit
12272.                enddo
12272.             endif
12290.             _free( t$5883 )
12290.          endif
12289.          if ( ( ss_prop%k_ext_scat%header%a_contig == 1 .or. -ss_prop%k_ext_scat%header%el_len + ss_prop%k_ext_scat%dim_1%SM * ss_prop%k_ext_scat%header%dv_smunit == 0 .and. -ss_prop%k_ext_scat%dim_2%SM + ss_prop%k_ext_scat%dim_1%EX * ss_prop%k_ext_scat%dim_1%SM == 0 ) == .false. ) then
12272.             $F_A51 = t$5870
12272.             $F_A52 = t$5869
12272.             if ( and( -$F_A52, -$F_A51 ) < 0 ) then
12272.                $SC_ss_prop_I169 = ss_prop%k_ext_scat%dim_1%SM
12272.                $SC_ss_prop_I170 = ss_prop%k_ext_scat%dim_1%LB
12272.                $SC_ss_prop_I172 = ss_prop%k_ext_scat%dim_2%SM
12272.                $SC_ss_prop_I173 = ss_prop%k_ext_scat%dim_2%LB
12272.                $SC_ss_prop_I175 = ss_prop%k_ext_scat%dim_3%SM
12272.                $SC_ss_prop_I174 = ss_prop%k_ext_scat%dim_3%EX
12272.                $SC_ss_prop_I176 = ss_prop%k_ext_scat%dim_3%LB
12272.                $I_L12272_775 = 0
12272.                do
12272.                   $I_L12272_705 = 0
12272. !dir$ ivdep
12272.                   do
12272.                      (ss_prop%k_ext_scat%base_addr)($SC_ss_prop_I170 + $I_L12272_705, $SC_ss_prop_I173 + $I_L12272_775, 0, 0) = t$5873(1 + $I_L12272_705, 1 + $I_L12272_775)
12272.                      $I_L12272_705 = 1 + $I_L12272_705
12272.                      if ( $I_L12272_705 >= $F_A52 ) exit
12272.                   enddo
12272.                   $I_L12272_775 = 1 + $I_L12272_775
12272.                   if ( $I_L12272_775 >= $F_A51 ) exit
12272.                enddo
12272.             endif
12289.             _free( t$5874 )
12289.          endif
12288.          if ( ( ss_prop%k_grey_tot%header%a_contig == 1 .or. -ss_prop%k_grey_tot%header%el_len + ss_prop%k_grey_tot%dim_1%SM * ss_prop%k_grey_tot%header%dv_smunit == 0 .and. -ss_prop%k_grey_tot%dim_2%SM + ss_prop%k_grey_tot%dim_1%EX * ss_prop%k_grey_tot%dim_1%SM == 0 ) == .false. ) then
12272.             $F_A53 = t$5863
12272.             $F_A54 = t$5862
12272.             if ( and( -$F_A54, -$F_A53 ) < 0 ) then
12272.                $SC_ss_prop_I160 = ss_prop%k_grey_tot%dim_1%SM
12272.                $SC_ss_prop_I161 = ss_prop%k_grey_tot%dim_1%LB
12272.                $SC_ss_prop_I163 = ss_prop%k_grey_tot%dim_2%SM
12272.                $SC_ss_prop_I164 = ss_prop%k_grey_tot%dim_2%LB
12272.                $SC_ss_prop_I166 = ss_prop%k_grey_tot%dim_3%SM
12272.                $SC_ss_prop_I165 = ss_prop%k_grey_tot%dim_3%EX
12272.                $SC_ss_prop_I167 = ss_prop%k_grey_tot%dim_3%LB
12272.                $I_L12272_777 = 0
12272.                do
12272.                   $I_L12272_707 = 0
12272. !dir$ ivdep
12272.                   do
12272.                      (ss_prop%k_grey_tot%base_addr)($SC_ss_prop_I161 + $I_L12272_707, $SC_ss_prop_I164 + $I_L12272_777, 0, 0) = t$5866(1 + $I_L12272_707, 1 + $I_L12272_777)
12272.                      $I_L12272_707 = 1 + $I_L12272_707
12272.                      if ( $I_L12272_707 >= $F_A54 ) exit
12272.                   enddo
12272.                   $I_L12272_777 = 1 + $I_L12272_777
12272.                   if ( $I_L12272_777 >= $F_A53 ) exit
12272.                enddo
12272.             endif
12288.             _free( t$5867 )
12288.          endif
12288.       endif
12304.       if ( l_continuum /= .false. ) then
12307.          if ( n_continuum > 0 ) then
12318.             $SC_ss_prop_I1 = ss_prop%k_grey_tot%dim_1%SM
12318.             $SC_ss_prop_I0 = ss_prop%k_grey_tot%dim_1%EX
12318.             $SC_ss_prop_I2 = ss_prop%k_grey_tot%dim_1%LB
12318.             $SC_ss_prop_I4 = ss_prop%k_grey_tot%dim_2%SM
12318.             $SC_ss_prop_I3 = ss_prop%k_grey_tot%dim_2%EX
12318.             $SC_ss_prop_I5 = ss_prop%k_grey_tot%dim_2%LB
12318.             $SC_ss_prop_I7 = ss_prop%k_grey_tot%dim_3%SM
12318.             $SC_ss_prop_I6 = ss_prop%k_grey_tot%dim_3%EX
12318.             $SC_ss_prop_I8 = ss_prop%k_grey_tot%dim_3%LB
12316.             if ( nd_layer + -id_ct >= 0 ) then
12317.                if ( nd_profile > 0 ) then
12307.                   $I_L12307_827 = 0
12307.                   do
12316.                      $I_L12316_825 = 0
12316.                      do
12317.                         $I_L12317_823 = 0
12317.                         do
12307.                            $I_L12307_788 = 0
12307. !dir$ shortloop16
12307. !dir$ blocking_size( 2, 2 )
12307.                            do
12316.                               $I_L12316_779 = 0
12316. !dir$ shortloop16
12316. !dir$ blocking_size( 2, 2 )
12316.                               do
12308.                                  $i_continuum_S28 = i_continuum_pointer(1 + $I_L12307_788 + 2 * $I_L12307_827)
12316.                                  $SCA_k_continuum_I146 = k_continuum($i_continuum_S28)
12317.                                  $I_L12317_652 = 0
12317. !dir$ ivdep
12317. !dir$ blocking_size( 256, 256 )
12317.                                  do
12318.                                     (ss_prop%k_grey_tot%base_addr)(1 + $I_L12317_652 + 256 * $I_L12317_823, id_ct + $I_L12316_779 + 2 * $I_L12316_825, 0, 0) = (ss_prop%k_grey_tot%base_addr)(1 + $I_L12317_652 + 256 * $I_L12317_823, id_ct + $I_L12316_779 + 2 * $I_L12316_825, 0, 0) + $SCA_k_continuum_I146 * amount_continuum(1 + $I_L12317_652 + 256 * $I_L12317_823, id_ct + $I_L12316_779 + 2 * $I_L12316_825, $i_continuum_S28)
12317.                                     $I_L12317_652 = 1 + $I_L12317_652
12317.                                     if ( $I_L12317_652 >= min( nd_profile, 256 + 256 * $I_L12317_823 ) + -256 * $I_L12317_823 ) exit
12317.                                  enddo
12316.                                  $I_L12316_779 = 1 + $I_L12316_779
12316.                                  if ( $I_L12316_779 >= min( 1 + nd_layer + -id_ct, 2 + 2 * $I_L12316_825 ) + -2 * $I_L12316_825 ) exit
12316.                               enddo
12307.                               $I_L12307_788 = 1 + $I_L12307_788
12321.                               if ( $I_L12307_788 >= min( n_continuum, 2 + 2 * $I_L12307_827 ) + -2 * $I_L12307_827 ) exit
12321.                            enddo
12317.                            $I_L12317_823 = 1 + $I_L12317_823
12317.                            if ( $I_L12317_823 >= 1 + max( 0, -1 + _rsh( 255 + nd_profile, 8 ) ) ) exit
12317.                         enddo
12316.                         $I_L12316_825 = 1 + $I_L12316_825
12322.                         if ( $I_L12316_825 >= 1 + max( 0, -1 + _rsh( 2 + nd_layer + -id_ct, 1 ) ) ) exit
12322.                      enddo
12307.                      $I_L12307_827 = 1 + $I_L12307_827
12307.                      if ( $I_L12307_827 >= 1 + max( 0, -1 + _rsh( 1 + n_continuum, 1 ) ) ) exit
12307.                   enddo
12307.                endif
12307.             endif
12307.          endif
12307.       endif
12338.       if ( nd_layer + -id_ct >= 0 ) then
12340.          $SC_ss_prop_I10 = ss_prop%k_ext_scat%dim_1%SM
12340.          $SC_ss_prop_I9 = ss_prop%k_ext_scat%dim_1%EX
12340.          $SC_ss_prop_I11 = ss_prop%k_ext_scat%dim_1%LB
12340.          $SC_ss_prop_I13 = ss_prop%k_ext_scat%dim_2%SM
12340.          $SC_ss_prop_I12 = ss_prop%k_ext_scat%dim_2%EX
12340.          $SC_ss_prop_I14 = ss_prop%k_ext_scat%dim_2%LB
12340.          $SC_ss_prop_I16 = ss_prop%k_ext_scat%dim_3%SM
12340.          $SC_ss_prop_I15 = ss_prop%k_ext_scat%dim_3%EX
12340.          $SC_ss_prop_I17 = ss_prop%k_ext_scat%dim_3%LB
12340.          $SC_ss_prop_I1 = ss_prop%k_grey_tot%dim_1%SM
12340.          $SC_ss_prop_I0 = ss_prop%k_grey_tot%dim_1%EX
12340.          $SC_ss_prop_I2 = ss_prop%k_grey_tot%dim_1%LB
12340.          $SC_ss_prop_I4 = ss_prop%k_grey_tot%dim_2%SM
12340.          $SC_ss_prop_I3 = ss_prop%k_grey_tot%dim_2%EX
12340.          $SC_ss_prop_I5 = ss_prop%k_grey_tot%dim_2%LB
12340.          $SC_ss_prop_I7 = ss_prop%k_grey_tot%dim_3%SM
12340.          $SC_ss_prop_I6 = ss_prop%k_grey_tot%dim_3%EX
12340.          $SC_ss_prop_I8 = ss_prop%k_grey_tot%dim_3%LB
12339.          if ( nd_profile > 0 ) then
12338.             $I_L12338_725 = 0
12338.             do
12339.                $I_L12339_655 = 0
12339. !dir$ unroll 4
12339.                do
12340.                   (ss_prop%k_grey_tot%base_addr)(1 + $I_L12339_655, id_ct + $I_L12338_725, 0, 0) = (ss_prop%k_grey_tot%base_addr)(1 + $I_L12339_655, id_ct + $I_L12338_725, 0, 0) + (ss_prop%k_ext_scat%base_addr)(1 + $I_L12339_655, id_ct + $I_L12338_725, 0, 0)
12342.                   $I_L12339_655 = 1 + $I_L12339_655
12339.                   if ( $I_L12339_655 >= nd_profile ) exit
12339.                enddo
12343.                $I_L12338_725 = 1 + $I_L12338_725
12342.                if ( $I_L12338_725 >= 1 + nd_layer + -id_ct ) exit
12342.             enddo
12342.          endif
12342.       endif
12349.       if ( l_cloud == .false. ) then
12352.          if ( n_order_phase > 0 ) then
12365.             $SC_ss_prop_I19 = ss_prop%phase_fnc%dim_1%SM
12365.             $SC_ss_prop_I18 = ss_prop%phase_fnc%dim_1%EX
12365.             $SC_ss_prop_I20 = ss_prop%phase_fnc%dim_1%LB
12365.             $SC_ss_prop_I22 = ss_prop%phase_fnc%dim_2%SM
12365.             $SC_ss_prop_I21 = ss_prop%phase_fnc%dim_2%EX
12365.             $SC_ss_prop_I23 = ss_prop%phase_fnc%dim_2%LB
12365.             $SC_ss_prop_I25 = ss_prop%phase_fnc%dim_3%SM
12365.             $SC_ss_prop_I24 = ss_prop%phase_fnc%dim_3%EX
12365.             $SC_ss_prop_I26 = ss_prop%phase_fnc%dim_3%LB
12365.             $SC_ss_prop_I28 = ss_prop%phase_fnc%dim_4%SM
12365.             $SC_ss_prop_I27 = ss_prop%phase_fnc%dim_4%EX
12365.             $SC_ss_prop_I29 = ss_prop%phase_fnc%dim_4%LB
12364.             $SC_ss_prop_I10 = ss_prop%k_ext_scat%dim_1%SM
12364.             $SC_ss_prop_I9 = ss_prop%k_ext_scat%dim_1%EX
12364.             $SC_ss_prop_I11 = ss_prop%k_ext_scat%dim_1%LB
12364.             $SC_ss_prop_I13 = ss_prop%k_ext_scat%dim_2%SM
12364.             $SC_ss_prop_I12 = ss_prop%k_ext_scat%dim_2%EX
12364.             $SC_ss_prop_I14 = ss_prop%k_ext_scat%dim_2%LB
12364.             $SC_ss_prop_I16 = ss_prop%k_ext_scat%dim_3%SM
12364.             $SC_ss_prop_I15 = ss_prop%k_ext_scat%dim_3%EX
12364.             $SC_ss_prop_I17 = ss_prop%k_ext_scat%dim_3%LB
12362.             if ( nd_layer + -id_ct >= 0 ) then
12363.                if ( nd_profile > 0 ) then
12352.                   $I_L12352_799 = 0
12352.                   do
12362.                      $I_L12362_743 = 0
12362.                      do
12363.                         $I_L12363_673 = 0
12363. !dir$ unroll 4
12363.                         do
12364.                            if ( (ss_prop%k_ext_scat%base_addr)(1 + $I_L12363_673, id_ct + $I_L12362_743, 0, 0) > 0.0 ) then
12365.                               (ss_prop%phase_fnc%base_addr)(1 + $I_L12363_673, id_ct + $I_L12362_743, 1 + $I_L12352_799, 0, 0) = ( (ss_prop%phase_fnc%base_addr)(1 + $I_L12363_673, id_ct + $I_L12362_743, 1 + $I_L12352_799, 0, 0) * 1.0/(ss_prop%k_ext_scat%base_addr)(1 + $I_L12363_673, id_ct + $I_L12362_743, 0, 0) )
12365.                            endif
12369.                            $I_L12363_673 = 1 + $I_L12363_673
12368.                            if ( $I_L12363_673 >= nd_profile ) exit
12368.                         enddo
12370.                         $I_L12362_743 = 1 + $I_L12362_743
12369.                         if ( $I_L12362_743 >= 1 + nd_layer + -id_ct ) exit
12369.                      enddo
12371.                      $I_L12352_799 = 1 + $I_L12352_799
12370.                      if ( $I_L12352_799 >= n_order_phase ) exit
12370.                   enddo
12370.                endif
12370.             endif
12370.          endif
12373.          if ( l_rescale /= .false. ) then
12384.             if ( nd_layer + -id_ct >= 0 ) then
12387.                $SC_ss_prop_I31 = ss_prop%forward_scatter%dim_1%SM
12387.                $SC_ss_prop_I30 = ss_prop%forward_scatter%dim_1%EX
12387.                $SC_ss_prop_I32 = ss_prop%forward_scatter%dim_1%LB
12387.                $SC_ss_prop_I34 = ss_prop%forward_scatter%dim_2%SM
12387.                $SC_ss_prop_I33 = ss_prop%forward_scatter%dim_2%EX
12387.                $SC_ss_prop_I35 = ss_prop%forward_scatter%dim_2%LB
12387.                $SC_ss_prop_I37 = ss_prop%forward_scatter%dim_3%SM
12387.                $SC_ss_prop_I36 = ss_prop%forward_scatter%dim_3%EX
12387.                $SC_ss_prop_I38 = ss_prop%forward_scatter%dim_3%LB
12386.                $SC_ss_prop_I10 = ss_prop%k_ext_scat%dim_1%SM
12386.                $SC_ss_prop_I9 = ss_prop%k_ext_scat%dim_1%EX
12386.                $SC_ss_prop_I11 = ss_prop%k_ext_scat%dim_1%LB
12386.                $SC_ss_prop_I13 = ss_prop%k_ext_scat%dim_2%SM
12386.                $SC_ss_prop_I12 = ss_prop%k_ext_scat%dim_2%EX
12386.                $SC_ss_prop_I14 = ss_prop%k_ext_scat%dim_2%LB
12386.                $SC_ss_prop_I16 = ss_prop%k_ext_scat%dim_3%SM
12386.                $SC_ss_prop_I15 = ss_prop%k_ext_scat%dim_3%EX
12386.                $SC_ss_prop_I17 = ss_prop%k_ext_scat%dim_3%LB
12385.                if ( nd_profile > 0 ) then
12384.                   $I_L12384_745 = 0
12384.                   do
12385.                      $I_L12385_675 = 0
12385. !dir$ unroll 4
12385.                      do
12386.                         if ( (ss_prop%k_ext_scat%base_addr)(1 + $I_L12385_675, id_ct + $I_L12384_745, 0, 0) > 0.0 ) then
12387.                            (ss_prop%forward_scatter%base_addr)(1 + $I_L12385_675, id_ct + $I_L12384_745, 0, 0) = ( (ss_prop%forward_scatter%base_addr)(1 + $I_L12385_675, id_ct + $I_L12384_745, 0, 0) * 1.0/(ss_prop%k_ext_scat%base_addr)(1 + $I_L12385_675, id_ct + $I_L12384_745, 0, 0) )
12387.                         endif
12391.                         $I_L12385_675 = 1 + $I_L12385_675
12390.                         if ( $I_L12385_675 >= nd_profile ) exit
12390.                      enddo
12392.                      $I_L12384_745 = 1 + $I_L12384_745
12391.                      if ( $I_L12384_745 >= 1 + nd_layer + -id_ct ) exit
12391.                   enddo
12391.                endif
12391.             endif
12391.          endif
12396.          if ( l_solar_phf /= .false. ) then
12408.             if ( nd_layer + -id_ct >= 0 ) then
12411.                $SC_ss_prop_I52 = ss_prop%forward_solar%dim_1%SM
12411.                $SC_ss_prop_I51 = ss_prop%forward_solar%dim_1%EX
12411.                $SC_ss_prop_I53 = ss_prop%forward_solar%dim_1%LB
12411.                $SC_ss_prop_I55 = ss_prop%forward_solar%dim_2%SM
12411.                $SC_ss_prop_I54 = ss_prop%forward_solar%dim_2%EX
12411.                $SC_ss_prop_I56 = ss_prop%forward_solar%dim_2%LB
12411.                $SC_ss_prop_I58 = ss_prop%forward_solar%dim_3%SM
12411.                $SC_ss_prop_I57 = ss_prop%forward_solar%dim_3%EX
12411.                $SC_ss_prop_I59 = ss_prop%forward_solar%dim_3%LB
12410.                $SC_ss_prop_I10 = ss_prop%k_ext_scat%dim_1%SM
12410.                $SC_ss_prop_I9 = ss_prop%k_ext_scat%dim_1%EX
12410.                $SC_ss_prop_I11 = ss_prop%k_ext_scat%dim_1%LB
12410.                $SC_ss_prop_I13 = ss_prop%k_ext_scat%dim_2%SM
12410.                $SC_ss_prop_I12 = ss_prop%k_ext_scat%dim_2%EX
12410.                $SC_ss_prop_I14 = ss_prop%k_ext_scat%dim_2%LB
12410.                $SC_ss_prop_I16 = ss_prop%k_ext_scat%dim_3%SM
12410.                $SC_ss_prop_I15 = ss_prop%k_ext_scat%dim_3%EX
12410.                $SC_ss_prop_I17 = ss_prop%k_ext_scat%dim_3%LB
12409.                if ( nd_profile > 0 ) then
12408.                   $I_L12408_747 = 0
12408.                   do
12409.                      $I_L12409_677 = 0
12409. !dir$ unroll 4
12409.                      do
12410.                         if ( (ss_prop%k_ext_scat%base_addr)(1 + $I_L12409_677, id_ct + $I_L12408_747, 0, 0) > 0.0 ) then
12411.                            (ss_prop%forward_solar%base_addr)(1 + $I_L12409_677, id_ct + $I_L12408_747, 0, 0) = ( (ss_prop%forward_solar%base_addr)(1 + $I_L12409_677, id_ct + $I_L12408_747, 0, 0) * 1.0/(ss_prop%k_ext_scat%base_addr)(1 + $I_L12409_677, id_ct + $I_L12408_747, 0, 0) )
12411.                         endif
12415.                         $I_L12409_677 = 1 + $I_L12409_677
12414.                         if ( $I_L12409_677 >= nd_profile ) exit
12414.                      enddo
12416.                      $I_L12408_747 = 1 + $I_L12408_747
12415.                      if ( $I_L12408_747 >= 1 + nd_layer + -id_ct ) exit
12415.                   enddo
12415.                endif
12415.             endif
12419.             if ( n_direction > 0 ) then
12431.                $SC_ss_prop_I40 = ss_prop%phase_fnc_solar%dim_1%SM
12431.                $SC_ss_prop_I39 = ss_prop%phase_fnc_solar%dim_1%EX
12431.                $SC_ss_prop_I41 = ss_prop%phase_fnc_solar%dim_1%LB
12431.                $SC_ss_prop_I43 = ss_prop%phase_fnc_solar%dim_2%SM
12431.                $SC_ss_prop_I42 = ss_prop%phase_fnc_solar%dim_2%EX
12431.                $SC_ss_prop_I44 = ss_prop%phase_fnc_solar%dim_2%LB
12431.                $SC_ss_prop_I46 = ss_prop%phase_fnc_solar%dim_3%SM
12431.                $SC_ss_prop_I45 = ss_prop%phase_fnc_solar%dim_3%EX
12431.                $SC_ss_prop_I47 = ss_prop%phase_fnc_solar%dim_3%LB
12431.                $SC_ss_prop_I49 = ss_prop%phase_fnc_solar%dim_4%SM
12431.                $SC_ss_prop_I48 = ss_prop%phase_fnc_solar%dim_4%EX
12431.                $SC_ss_prop_I50 = ss_prop%phase_fnc_solar%dim_4%LB
12430.                $SC_ss_prop_I10 = ss_prop%k_ext_scat%dim_1%SM
12430.                $SC_ss_prop_I9 = ss_prop%k_ext_scat%dim_1%EX
12430.                $SC_ss_prop_I11 = ss_prop%k_ext_scat%dim_1%LB
12430.                $SC_ss_prop_I13 = ss_prop%k_ext_scat%dim_2%SM
12430.                $SC_ss_prop_I12 = ss_prop%k_ext_scat%dim_2%EX
12430.                $SC_ss_prop_I14 = ss_prop%k_ext_scat%dim_2%LB
12430.                $SC_ss_prop_I16 = ss_prop%k_ext_scat%dim_3%SM
12430.                $SC_ss_prop_I15 = ss_prop%k_ext_scat%dim_3%EX
12430.                $SC_ss_prop_I17 = ss_prop%k_ext_scat%dim_3%LB
12428.                if ( nd_layer + -id_ct >= 0 ) then
12429.                   if ( nd_profile > 0 ) then
12419.                      $I_L12419_801 = 0
12419.                      do
12428.                         $I_L12428_749 = 0
12428.                         do
12429.                            $I_L12429_679 = 0
12429. !dir$ unroll 4
12429.                            do
12430.                               if ( (ss_prop%k_ext_scat%base_addr)(1 + $I_L12429_679, id_ct + $I_L12428_749, 0, 0) > 0.0 ) then
12431.                                  (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12429_679, id_ct + $I_L12428_749, 1 + $I_L12419_801, 0, 0) = ( (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12429_679, id_ct + $I_L12428_749, 1 + $I_L12419_801, 0, 0) * 1.0/(ss_prop%k_ext_scat%base_addr)(1 + $I_L12429_679, id_ct + $I_L12428_749, 0, 0) )
12431.                               endif
12434.                               $I_L12429_679 = 1 + $I_L12429_679
12430.                               if ( $I_L12429_679 >= nd_profile ) exit
12430.                            enddo
12435.                            $I_L12428_749 = 1 + $I_L12428_749
12434.                            if ( $I_L12428_749 >= 1 + nd_layer + -id_ct ) exit
12434.                         enddo
12436.                         $I_L12419_801 = 1 + $I_L12419_801
12435.                         if ( $I_L12419_801 >= n_direction ) exit
12435.                      enddo
12435.                   endif
12435.                endif
12435.             endif
12435.          endif
11737.          _free( t$2055 )
11737.       else
12456.          if ( n_cloud_type > 0 ) then
12463.             $SC_ss_prop_I52 = ss_prop%forward_solar%dim_1%SM
12463.             $SC_ss_prop_I51 = ss_prop%forward_solar%dim_1%EX
12463.             $SC_ss_prop_I53 = ss_prop%forward_solar%dim_1%LB
12463.             $SC_ss_prop_I55 = ss_prop%forward_solar%dim_2%SM
12463.             $SC_ss_prop_I54 = ss_prop%forward_solar%dim_2%EX
12463.             $SC_ss_prop_I56 = ss_prop%forward_solar%dim_2%LB
12463.             $SC_ss_prop_I58 = ss_prop%forward_solar%dim_3%SM
12463.             $SC_ss_prop_I57 = ss_prop%forward_solar%dim_3%EX
12463.             $SC_ss_prop_I59 = ss_prop%forward_solar%dim_3%LB
12461.             $SC_ss_prop_I31 = ss_prop%forward_scatter%dim_1%SM
12461.             $SC_ss_prop_I30 = ss_prop%forward_scatter%dim_1%EX
12461.             $SC_ss_prop_I32 = ss_prop%forward_scatter%dim_1%LB
12461.             $SC_ss_prop_I34 = ss_prop%forward_scatter%dim_2%SM
12461.             $SC_ss_prop_I33 = ss_prop%forward_scatter%dim_2%EX
12461.             $SC_ss_prop_I35 = ss_prop%forward_scatter%dim_2%LB
12461.             $SC_ss_prop_I37 = ss_prop%forward_scatter%dim_3%SM
12461.             $SC_ss_prop_I36 = ss_prop%forward_scatter%dim_3%EX
12461.             $SC_ss_prop_I38 = ss_prop%forward_scatter%dim_3%LB
12470.             $SC_ss_prop_I19 = ss_prop%phase_fnc%dim_1%SM
12470.             $SC_ss_prop_I18 = ss_prop%phase_fnc%dim_1%EX
12470.             $SC_ss_prop_I20 = ss_prop%phase_fnc%dim_1%LB
12470.             $SC_ss_prop_I22 = ss_prop%phase_fnc%dim_2%SM
12470.             $SC_ss_prop_I21 = ss_prop%phase_fnc%dim_2%EX
12470.             $SC_ss_prop_I23 = ss_prop%phase_fnc%dim_2%LB
12470.             $SC_ss_prop_I25 = ss_prop%phase_fnc%dim_3%SM
12470.             $SC_ss_prop_I24 = ss_prop%phase_fnc%dim_3%EX
12470.             $SC_ss_prop_I26 = ss_prop%phase_fnc%dim_3%LB
12470.             $SC_ss_prop_I28 = ss_prop%phase_fnc%dim_4%SM
12470.             $SC_ss_prop_I27 = ss_prop%phase_fnc%dim_4%EX
12470.             $SC_ss_prop_I29 = ss_prop%phase_fnc%dim_4%LB
12460.             $SC_ss_prop_I10 = ss_prop%k_ext_scat%dim_1%SM
12460.             $SC_ss_prop_I9 = ss_prop%k_ext_scat%dim_1%EX
12460.             $SC_ss_prop_I11 = ss_prop%k_ext_scat%dim_1%LB
12460.             $SC_ss_prop_I13 = ss_prop%k_ext_scat%dim_2%SM
12460.             $SC_ss_prop_I12 = ss_prop%k_ext_scat%dim_2%EX
12460.             $SC_ss_prop_I14 = ss_prop%k_ext_scat%dim_2%LB
12460.             $SC_ss_prop_I16 = ss_prop%k_ext_scat%dim_3%SM
12460.             $SC_ss_prop_I15 = ss_prop%k_ext_scat%dim_3%EX
12460.             $SC_ss_prop_I17 = ss_prop%k_ext_scat%dim_3%LB
12459.             $SC_ss_prop_I1 = ss_prop%k_grey_tot%dim_1%SM
12459.             $SC_ss_prop_I0 = ss_prop%k_grey_tot%dim_1%EX
12459.             $SC_ss_prop_I2 = ss_prop%k_grey_tot%dim_1%LB
12459.             $SC_ss_prop_I4 = ss_prop%k_grey_tot%dim_2%SM
12459.             $SC_ss_prop_I3 = ss_prop%k_grey_tot%dim_2%EX
12459.             $SC_ss_prop_I5 = ss_prop%k_grey_tot%dim_2%LB
12459.             $SC_ss_prop_I7 = ss_prop%k_grey_tot%dim_3%SM
12459.             $SC_ss_prop_I6 = ss_prop%k_grey_tot%dim_3%EX
12459.             $SC_ss_prop_I8 = ss_prop%k_grey_tot%dim_3%LB
12456.             $I_L12456_815 = 0
12456.             do
12457.                if ( nd_layer + -id_ct >= 0 ) then
12458.                   if ( nd_profile > 0 ) then
12457.                      $I_L12457_727 = 0
12457.                      do
12458.                         $I_L12458_657 = 0
12458. !dir$ unroll 2
12458.                         do
12459.                            (ss_prop%k_grey_tot%base_addr)(1 + $I_L12458_657, id_ct + $I_L12457_727, 1 + $I_L12456_815, 0) = (ss_prop%k_grey_tot%base_addr)(1 + $I_L12458_657, id_ct + $I_L12457_727, 0, 0)
12460.                            (ss_prop%k_ext_scat%base_addr)(1 + $I_L12458_657, id_ct + $I_L12457_727, 1 + $I_L12456_815, 0) = (ss_prop%k_ext_scat%base_addr)(1 + $I_L12458_657, id_ct + $I_L12457_727, 0, 0)
12461.                            (ss_prop%forward_scatter%base_addr)(1 + $I_L12458_657, id_ct + $I_L12457_727, 1 + $I_L12456_815, 0) = (ss_prop%forward_scatter%base_addr)(1 + $I_L12458_657, id_ct + $I_L12457_727, 0, 0)
12463.                            (ss_prop%forward_solar%base_addr)(1 + $I_L12458_657, id_ct + $I_L12457_727, 1 + $I_L12456_815, 0) = (ss_prop%forward_solar%base_addr)(1 + $I_L12458_657, id_ct + $I_L12457_727, 0, 0)
12465.                            $I_L12458_657 = 1 + $I_L12458_657
12458.                            if ( $I_L12458_657 >= nd_profile ) exit
12458.                         enddo
12466.                         $I_L12457_727 = 1 + $I_L12457_727
12465.                         if ( $I_L12457_727 >= 1 + nd_layer + -id_ct ) exit
12465.                      enddo
12465.                   endif
12465.                endif
12467.                if ( n_order_phase > 0 ) then
12468.                   if ( nd_layer + -id_ct >= 0 ) then
12469.                      if ( nd_profile > 0 ) then
12467.                         $I_L12467_791 = 0
12467.                         do
12468.                            $I_L12468_729 = 0
12468.                            do
12469.                               $I_L12469_659 = 0
12469. !dir$ ivdep
12469.                               do
12470.                                  (ss_prop%phase_fnc%base_addr)(1 + $I_L12469_659, id_ct + $I_L12468_729, 1 + $I_L12467_791, 1 + $I_L12456_815, 0) = (ss_prop%phase_fnc%base_addr)(1 + $I_L12469_659, id_ct + $I_L12468_729, 1 + $I_L12467_791, 0, 0)
12472.                                  $I_L12469_659 = 1 + $I_L12469_659
12469.                                  if ( $I_L12469_659 >= nd_profile ) exit
12469.                               enddo
12473.                               $I_L12468_729 = 1 + $I_L12468_729
12472.                               if ( $I_L12468_729 >= 1 + nd_layer + -id_ct ) exit
12472.                            enddo
12474.                            $I_L12467_791 = 1 + $I_L12467_791
12473.                            if ( $I_L12467_791 >= n_order_phase ) exit
12473.                         enddo
12473.                      endif
12473.                   endif
12473.                endif
12477.                if ( l_solar_phf /= .false. ) then
12478.                   if ( n_direction > 0 ) then
12479.                      if ( nd_layer + -id_ct >= 0 ) then
12480.                         if ( nd_profile > 0 ) then
12481.                            $SC_ss_prop_I148 = ss_prop%phase_fnc_solar%dim_1%SM
12481.                            $SC_ss_prop_I147 = ss_prop%phase_fnc_solar%dim_1%EX
12481.                            $SC_ss_prop_I149 = ss_prop%phase_fnc_solar%dim_1%LB
12481.                            $SC_ss_prop_I151 = ss_prop%phase_fnc_solar%dim_2%SM
12481.                            $SC_ss_prop_I150 = ss_prop%phase_fnc_solar%dim_2%EX
12481.                            $SC_ss_prop_I152 = ss_prop%phase_fnc_solar%dim_2%LB
12481.                            $SC_ss_prop_I154 = ss_prop%phase_fnc_solar%dim_3%SM
12481.                            $SC_ss_prop_I153 = ss_prop%phase_fnc_solar%dim_3%EX
12481.                            $SC_ss_prop_I155 = ss_prop%phase_fnc_solar%dim_3%LB
12481.                            $SC_ss_prop_I157 = ss_prop%phase_fnc_solar%dim_4%SM
12481.                            $SC_ss_prop_I156 = ss_prop%phase_fnc_solar%dim_4%EX
12481.                            $SC_ss_prop_I158 = ss_prop%phase_fnc_solar%dim_4%LB
12478.                            $I_L12478_793 = 0
12478.                            do
12479.                               $I_L12479_731 = 0
12479.                               do
12480.                                  $I_L12480_661 = 0
12480. !dir$ ivdep
12480.                                  do
12481.                                     (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12480_661, id_ct + $I_L12479_731, 1 + $I_L12478_793, 1 + $I_L12456_815, 0) = (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12480_661, id_ct + $I_L12479_731, 1 + $I_L12478_793, 0, 0)
12483.                                     $I_L12480_661 = 1 + $I_L12480_661
12480.                                     if ( $I_L12480_661 >= nd_profile ) exit
12480.                                  enddo
12484.                                  $I_L12479_731 = 1 + $I_L12479_731
12483.                                  if ( $I_L12479_731 >= 1 + nd_layer + -id_ct ) exit
12483.                               enddo
12485.                               $I_L12478_793 = 1 + $I_L12478_793
12484.                               if ( $I_L12478_793 >= n_direction ) exit
12484.                            enddo
12484.                         endif
12484.                      endif
12484.                   endif
12484.                endif
12487.                $I_L12456_815 = 1 + $I_L12456_815
12486.                if ( $I_L12456_815 >= n_cloud_type ) exit
12486.             enddo
12486.          endif
12497.          if ( n_condensed > 0 ) then
12497.             $I_L12497_817 = 0
12497.             do
12505.                if ( l_cloud_cmp(1 + $I_L12497_817) /= .false. ) then
12507.                   if ( i_phase_cmp(1 + $I_L12497_817) == 1 ) then
12511.                      call opt_prop_water_cloud( ierr, n_profile, n_layer, n_cloud_top, n_cloud_profile(id_ct), i_cloud_profile(1, id_ct), n_order_phase, l_rescale, n_order_forward, l_henyey_greenstein_pf, l_solar_phf, n_order_phase_solar, n_direction, cos_sol_view(1, 1), i_condensed_param(1 + $I_L12497_817), condensed_param_list(1, 1 + $I_L12497_817), condensed_mix_ratio(1, id_ct, 1 + $I_L12497_817), condensed_dim_char(1, id_ct, 1 + $I_L12497_817), p(1, 1), density(1, 1), n_opt_level_drop_prsc, drop_pressure_prsc(1, 1), drop_absorption_prsc(1, 1), drop_scattering_prsc(1, 1), drop_phase_fnc_prsc(1, 1, 1), k_ext_tot_cloud_comp(1, id_ct), k_ext_scat_cloud_comp(1, id_ct), phase_fnc_cloud_comp(1, id_ct, 1), forward_scatter_cloud_comp(1, id_ct), forward_solar_cloud_comp(1, id_ct), phase_fnc_solar_cloud_comp(1, id_ct, 1), nd_profile, nd_radiance_profile, nd_layer, id_ct, nd_direction, nd_phase_term, nd_max_order, nd_cloud_parameter, nd_profile_cloud_prsc, nd_opt_level_cloud_prsc )
12538.                   else if ( i_phase_cmp(1 + $I_L12497_817) == 2 ) then
12542.                      call opt_prop_ice_cloud( ierr, n_profile, n_layer, n_cloud_top, n_cloud_profile(id_ct), i_cloud_profile(1, id_ct), n_order_phase, l_rescale, n_order_forward, l_henyey_greenstein_pf, l_solar_phf, n_order_phase_solar, n_direction, cos_sol_view(1, 1), i_condensed_param(1 + $I_L12497_817), condensed_param_list(1, 1 + $I_L12497_817), condensed_mix_ratio(1, id_ct, 1 + $I_L12497_817), condensed_dim_char(1, id_ct, 1 + $I_L12497_817), p(1, 1), t(1, 1), density(1, 1), n_opt_level_ice_prsc, ice_pressure_prsc(1, 1), ice_absorption_prsc(1, 1), ice_scattering_prsc(1, 1), ice_phase_fnc_prsc(1, 1, 1), k_ext_tot_cloud_comp(1, id_ct), k_ext_scat_cloud_comp(1, id_ct), phase_fnc_cloud_comp(1, id_ct, 1), forward_scatter_cloud_comp(1, id_ct), forward_solar_cloud_comp(1, id_ct), phase_fnc_solar_cloud_comp(1, id_ct, 1), nd_profile, nd_radiance_profile, nd_layer, id_ct, nd_direction, nd_phase_term, nd_max_order, nd_cloud_parameter, nd_profile_cloud_prsc, nd_opt_level_cloud_prsc )
12542.                   endif
12580.                   if ( nd_layer + -id_ct >= 0 ) then
12585.                      $SC_ss_prop_I10 = ss_prop%k_ext_scat%dim_1%SM
12585.                      $SC_ss_prop_I9 = ss_prop%k_ext_scat%dim_1%EX
12585.                      $SC_ss_prop_I11 = ss_prop%k_ext_scat%dim_1%LB
12585.                      $SC_ss_prop_I13 = ss_prop%k_ext_scat%dim_2%SM
12585.                      $SC_ss_prop_I12 = ss_prop%k_ext_scat%dim_2%EX
12585.                      $SC_ss_prop_I14 = ss_prop%k_ext_scat%dim_2%LB
12585.                      $SC_ss_prop_I16 = ss_prop%k_ext_scat%dim_3%SM
12585.                      $SC_ss_prop_I15 = ss_prop%k_ext_scat%dim_3%EX
12585.                      $SC_ss_prop_I17 = ss_prop%k_ext_scat%dim_3%LB
12582.                      $SC_ss_prop_I1 = ss_prop%k_grey_tot%dim_1%SM
12582.                      $SC_ss_prop_I0 = ss_prop%k_grey_tot%dim_1%EX
12582.                      $SC_ss_prop_I2 = ss_prop%k_grey_tot%dim_1%LB
12582.                      $SC_ss_prop_I4 = ss_prop%k_grey_tot%dim_2%SM
12582.                      $SC_ss_prop_I3 = ss_prop%k_grey_tot%dim_2%EX
12582.                      $SC_ss_prop_I5 = ss_prop%k_grey_tot%dim_2%LB
12582.                      $SC_ss_prop_I7 = ss_prop%k_grey_tot%dim_3%SM
12582.                      $SC_ss_prop_I6 = ss_prop%k_grey_tot%dim_3%EX
12582.                      $SC_ss_prop_I8 = ss_prop%k_grey_tot%dim_3%LB
12581.                      if ( nd_profile > 0 ) then
12582.                         $SC_i_cloud_type_I60 = i_cloud_type(1 + $I_L12497_817)
12580.                         $I_L12580_733 = 0
12580.                         do
12581.                            $I_L12581_663 = 0
12581. !dir$ unroll 2
12581.                            do
12582.                               (ss_prop%k_grey_tot%base_addr)(1 + $I_L12581_663, id_ct + $I_L12580_733, $SC_i_cloud_type_I60, 0) = (ss_prop%k_grey_tot%base_addr)(1 + $I_L12581_663, id_ct + $I_L12580_733, $SC_i_cloud_type_I60, 0) + k_ext_tot_cloud_comp(1 + $I_L12581_663, id_ct + $I_L12580_733)
12585.                               $LD_SPLT_P4 = (ss_prop%k_ext_scat%base_addr)(1 + $I_L12581_663, id_ct + $I_L12580_733, $SC_i_cloud_type_I60, 0)
12585.                               (ss_prop%k_ext_scat%base_addr)(1 + $I_L12581_663, id_ct + $I_L12580_733, $SC_i_cloud_type_I60, 0) = $LD_SPLT_P4 + k_ext_scat_cloud_comp(1 + $I_L12581_663, id_ct + $I_L12580_733)
12588.                               $I_L12581_663 = 1 + $I_L12581_663
12581.                               if ( $I_L12581_663 >= nd_profile ) exit
12581.                            enddo
12589.                            $I_L12580_733 = 1 + $I_L12580_733
12588.                            if ( $I_L12580_733 >= 1 + nd_layer + -id_ct ) exit
12588.                         enddo
12588.                      endif
12588.                   endif
12591.                   if ( n_order_phase > 0 ) then
12594.                      $SC_ss_prop_I19 = ss_prop%phase_fnc%dim_1%SM
12594.                      $SC_ss_prop_I18 = ss_prop%phase_fnc%dim_1%EX
12594.                      $SC_ss_prop_I20 = ss_prop%phase_fnc%dim_1%LB
12594.                      $SC_ss_prop_I22 = ss_prop%phase_fnc%dim_2%SM
12594.                      $SC_ss_prop_I21 = ss_prop%phase_fnc%dim_2%EX
12594.                      $SC_ss_prop_I23 = ss_prop%phase_fnc%dim_2%LB
12594.                      $SC_ss_prop_I25 = ss_prop%phase_fnc%dim_3%SM
12594.                      $SC_ss_prop_I24 = ss_prop%phase_fnc%dim_3%EX
12594.                      $SC_ss_prop_I26 = ss_prop%phase_fnc%dim_3%LB
12594.                      $SC_ss_prop_I28 = ss_prop%phase_fnc%dim_4%SM
12594.                      $SC_ss_prop_I27 = ss_prop%phase_fnc%dim_4%EX
12594.                      $SC_ss_prop_I29 = ss_prop%phase_fnc%dim_4%LB
12592.                      if ( nd_layer + -id_ct >= 0 ) then
12593.                         if ( nd_profile > 0 ) then
12594.                            $SC_i_cloud_type_I60 = i_cloud_type(1 + $I_L12497_817)
12591.                            $I_L12591_795 = 0
12591.                            do
12592.                               $I_L12592_735 = 0
12592.                               do
12593.                                  $I_L12593_665 = 0
12593. !dir$ ivdep
12593. !dir$ loop_info (automatic) cache_nt( phase_fnc_cloud_comp )
12593.                                  do
12594.                                     (ss_prop%phase_fnc%base_addr)(1 + $I_L12593_665, id_ct + $I_L12592_735, 1 + $I_L12591_795, $SC_i_cloud_type_I60, 0) = (ss_prop%phase_fnc%base_addr)(1 + $I_L12593_665, id_ct + $I_L12592_735, 1 + $I_L12591_795, $SC_i_cloud_type_I60, 0) + phase_fnc_cloud_comp(1 + $I_L12593_665, id_ct + $I_L12592_735, 1 + $I_L12591_795)
12597.                                     $I_L12593_665 = 1 + $I_L12593_665
12593.                                     if ( $I_L12593_665 >= nd_profile ) exit
12593.                                  enddo
12598.                                  $I_L12592_735 = 1 + $I_L12592_735
12597.                                  if ( $I_L12592_735 >= 1 + nd_layer + -id_ct ) exit
12597.                               enddo
12599.                               $I_L12591_795 = 1 + $I_L12591_795
12598.                               if ( $I_L12591_795 >= n_order_phase ) exit
12598.                            enddo
12598.                         endif
12598.                      endif
12598.                   endif
12600.                   if ( l_rescale /= .false. ) then
12602.                      if ( nd_layer + -id_ct >= 0 ) then
12604.                         $SC_ss_prop_I31 = ss_prop%forward_scatter%dim_1%SM
12604.                         $SC_ss_prop_I30 = ss_prop%forward_scatter%dim_1%EX
12604.                         $SC_ss_prop_I32 = ss_prop%forward_scatter%dim_1%LB
12604.                         $SC_ss_prop_I34 = ss_prop%forward_scatter%dim_2%SM
12604.                         $SC_ss_prop_I33 = ss_prop%forward_scatter%dim_2%EX
12604.                         $SC_ss_prop_I35 = ss_prop%forward_scatter%dim_2%LB
12604.                         $SC_ss_prop_I37 = ss_prop%forward_scatter%dim_3%SM
12604.                         $SC_ss_prop_I36 = ss_prop%forward_scatter%dim_3%EX
12604.                         $SC_ss_prop_I38 = ss_prop%forward_scatter%dim_3%LB
12603.                         if ( nd_profile > 0 ) then
12604.                            $SC_i_cloud_type_I60 = i_cloud_type(1 + $I_L12497_817)
12602.                            $I_L12602_737 = 0
12602.                            do
12603.                               $I_L12603_667 = 0
12603. !dir$ ivdep
12603.                               do
12604.                                  (ss_prop%forward_scatter%base_addr)(1 + $I_L12603_667, id_ct + $I_L12602_737, $SC_i_cloud_type_I60, 0) = (ss_prop%forward_scatter%base_addr)(1 + $I_L12603_667, id_ct + $I_L12602_737, $SC_i_cloud_type_I60, 0) + forward_scatter_cloud_comp(1 + $I_L12603_667, id_ct + $I_L12602_737)
12607.                                  $I_L12603_667 = 1 + $I_L12603_667
12603.                                  if ( $I_L12603_667 >= nd_profile ) exit
12603.                               enddo
12608.                               $I_L12602_737 = 1 + $I_L12602_737
12607.                               if ( $I_L12602_737 >= 1 + nd_layer + -id_ct ) exit
12607.                            enddo
12607.                         endif
12607.                      endif
12607.                   endif
12610.                   if ( l_solar_phf /= .false. ) then
12612.                      if ( nd_layer + -id_ct >= 0 ) then
12614.                         $SC_ss_prop_I52 = ss_prop%forward_solar%dim_1%SM
12614.                         $SC_ss_prop_I51 = ss_prop%forward_solar%dim_1%EX
12614.                         $SC_ss_prop_I53 = ss_prop%forward_solar%dim_1%LB
12614.                         $SC_ss_prop_I55 = ss_prop%forward_solar%dim_2%SM
12614.                         $SC_ss_prop_I54 = ss_prop%forward_solar%dim_2%EX
12614.                         $SC_ss_prop_I56 = ss_prop%forward_solar%dim_2%LB
12614.                         $SC_ss_prop_I58 = ss_prop%forward_solar%dim_3%SM
12614.                         $SC_ss_prop_I57 = ss_prop%forward_solar%dim_3%EX
12614.                         $SC_ss_prop_I59 = ss_prop%forward_solar%dim_3%LB
12613.                         if ( nd_profile > 0 ) then
12614.                            $SC_i_cloud_type_I60 = i_cloud_type(1 + $I_L12497_817)
12612.                            $I_L12612_739 = 0
12612.                            do
12613.                               $I_L12613_669 = 0
12613. !dir$ ivdep
12613.                               do
12614.                                  (ss_prop%forward_solar%base_addr)(1 + $I_L12613_669, id_ct + $I_L12612_739, $SC_i_cloud_type_I60, 0) = (ss_prop%forward_solar%base_addr)(1 + $I_L12613_669, id_ct + $I_L12612_739, $SC_i_cloud_type_I60, 0) + forward_solar_cloud_comp(1 + $I_L12613_669, id_ct + $I_L12612_739)
12617.                                  $I_L12613_669 = 1 + $I_L12613_669
12613.                                  if ( $I_L12613_669 >= nd_profile ) exit
12613.                               enddo
12618.                               $I_L12612_739 = 1 + $I_L12612_739
12617.                               if ( $I_L12612_739 >= 1 + nd_layer + -id_ct ) exit
12617.                            enddo
12617.                         endif
12617.                      endif
12620.                      if ( n_direction > 0 ) then
12623.                         $SC_ss_prop_I40 = ss_prop%phase_fnc_solar%dim_1%SM
12623.                         $SC_ss_prop_I39 = ss_prop%phase_fnc_solar%dim_1%EX
12623.                         $SC_ss_prop_I41 = ss_prop%phase_fnc_solar%dim_1%LB
12623.                         $SC_ss_prop_I43 = ss_prop%phase_fnc_solar%dim_2%SM
12623.                         $SC_ss_prop_I42 = ss_prop%phase_fnc_solar%dim_2%EX
12623.                         $SC_ss_prop_I44 = ss_prop%phase_fnc_solar%dim_2%LB
12623.                         $SC_ss_prop_I46 = ss_prop%phase_fnc_solar%dim_3%SM
12623.                         $SC_ss_prop_I45 = ss_prop%phase_fnc_solar%dim_3%EX
12623.                         $SC_ss_prop_I47 = ss_prop%phase_fnc_solar%dim_3%LB
12623.                         $SC_ss_prop_I49 = ss_prop%phase_fnc_solar%dim_4%SM
12623.                         $SC_ss_prop_I48 = ss_prop%phase_fnc_solar%dim_4%EX
12623.                         $SC_ss_prop_I50 = ss_prop%phase_fnc_solar%dim_4%LB
12621.                         if ( nd_layer + -id_ct >= 0 ) then
12622.                            if ( nd_profile > 0 ) then
12623.                               $SC_i_cloud_type_I60 = i_cloud_type(1 + $I_L12497_817)
12620.                               $I_L12620_797 = 0
12620.                               do
12621.                                  $I_L12621_741 = 0
12621.                                  do
12622.                                     $I_L12622_671 = 0
12622. !dir$ ivdep
12622. !dir$ loop_info (automatic) cache_nt( phase_fnc_solar_cloud_comp )
12622.                                     do
12623.                                        (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12622_671, id_ct + $I_L12621_741, 1 + $I_L12620_797, $SC_i_cloud_type_I60, 0) = (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12622_671, id_ct + $I_L12621_741, 1 + $I_L12620_797, $SC_i_cloud_type_I60, 0) + phase_fnc_solar_cloud_comp(1 + $I_L12622_671, id_ct + $I_L12621_741, 1 + $I_L12620_797)
12626.                                        $I_L12622_671 = 1 + $I_L12622_671
12622.                                        if ( $I_L12622_671 >= nd_profile ) exit
12622.                                     enddo
12627.                                     $I_L12621_741 = 1 + $I_L12621_741
12626.                                     if ( $I_L12621_741 >= 1 + nd_layer + -id_ct ) exit
12626.                                  enddo
12628.                                  $I_L12620_797 = 1 + $I_L12620_797
12627.                                  if ( $I_L12620_797 >= n_direction ) exit
12627.                               enddo
12627.                            endif
12627.                         endif
12627.                      endif
12627.                   endif
12627.                endif
12633.                $I_L12497_817 = 1 + $I_L12497_817
12631.                if ( $I_L12497_817 >= n_condensed ) exit
12631.             enddo
12631.          endif
12656.          if ( n_cloud_type >= 0 ) then
12661.             $SC_ss_prop_I19 = ss_prop%phase_fnc%dim_1%SM
12661.             $SC_ss_prop_I18 = ss_prop%phase_fnc%dim_1%EX
12661.             $SC_ss_prop_I20 = ss_prop%phase_fnc%dim_1%LB
12661.             $SC_ss_prop_I22 = ss_prop%phase_fnc%dim_2%SM
12661.             $SC_ss_prop_I21 = ss_prop%phase_fnc%dim_2%EX
12661.             $SC_ss_prop_I23 = ss_prop%phase_fnc%dim_2%LB
12661.             $SC_ss_prop_I25 = ss_prop%phase_fnc%dim_3%SM
12661.             $SC_ss_prop_I24 = ss_prop%phase_fnc%dim_3%EX
12661.             $SC_ss_prop_I26 = ss_prop%phase_fnc%dim_3%LB
12661.             $SC_ss_prop_I28 = ss_prop%phase_fnc%dim_4%SM
12661.             $SC_ss_prop_I27 = ss_prop%phase_fnc%dim_4%EX
12661.             $SC_ss_prop_I29 = ss_prop%phase_fnc%dim_4%LB
12660.             $SC_ss_prop_I10 = ss_prop%k_ext_scat%dim_1%SM
12660.             $SC_ss_prop_I9 = ss_prop%k_ext_scat%dim_1%EX
12660.             $SC_ss_prop_I11 = ss_prop%k_ext_scat%dim_1%LB
12660.             $SC_ss_prop_I13 = ss_prop%k_ext_scat%dim_2%SM
12660.             $SC_ss_prop_I12 = ss_prop%k_ext_scat%dim_2%EX
12660.             $SC_ss_prop_I14 = ss_prop%k_ext_scat%dim_2%LB
12660.             $SC_ss_prop_I16 = ss_prop%k_ext_scat%dim_3%SM
12660.             $SC_ss_prop_I15 = ss_prop%k_ext_scat%dim_3%EX
12660.             $SC_ss_prop_I17 = ss_prop%k_ext_scat%dim_3%LB
12657.             if ( n_order_phase > 0 ) then
12658.                if ( nd_layer + -id_ct >= 0 ) then
12659.                   if ( nd_profile > 0 ) then
12656.                      $I_L12656_819 = 0
12656.                      do
12657.                         $I_L12657_803 = 0
12657.                         do
12658.                            $I_L12658_751 = 0
12658.                            do
12659.                               $I_L12659_681 = 0
12659. !dir$ unroll 4
12659.                               do
12660.                                  if ( (ss_prop%k_ext_scat%base_addr)(1 + $I_L12659_681, id_ct + $I_L12658_751, $I_L12656_819, 0) > 0.0 ) then
12661.                                     (ss_prop%phase_fnc%base_addr)(1 + $I_L12659_681, id_ct + $I_L12658_751, 1 + $I_L12657_803, $I_L12656_819, 0) = ( (ss_prop%phase_fnc%base_addr)(1 + $I_L12659_681, id_ct + $I_L12658_751, 1 + $I_L12657_803, $I_L12656_819, 0) * 1.0/(ss_prop%k_ext_scat%base_addr)(1 + $I_L12659_681, id_ct + $I_L12658_751, $I_L12656_819, 0) )
12661.                                  endif
12665.                                  $I_L12659_681 = 1 + $I_L12659_681
12664.                                  if ( $I_L12659_681 >= nd_profile ) exit
12664.                               enddo
12666.                               $I_L12658_751 = 1 + $I_L12658_751
12665.                               if ( $I_L12658_751 >= 1 + nd_layer + -id_ct ) exit
12665.                            enddo
12667.                            $I_L12657_803 = 1 + $I_L12657_803
12666.                            if ( $I_L12657_803 >= n_order_phase ) exit
12666.                         enddo
12668.                         $I_L12656_819 = 1 + $I_L12656_819
12667.                         if ( $I_L12656_819 >= 1 + n_cloud_type ) exit
12667.                      enddo
12667.                   endif
12667.                endif
12667.             endif
12667.          endif
12670.          if ( l_rescale /= .false. ) then
12672.             if ( n_cloud_type >= 0 ) then
12676.                $SC_ss_prop_I31 = ss_prop%forward_scatter%dim_1%SM
12676.                $SC_ss_prop_I30 = ss_prop%forward_scatter%dim_1%EX
12676.                $SC_ss_prop_I32 = ss_prop%forward_scatter%dim_1%LB
12676.                $SC_ss_prop_I34 = ss_prop%forward_scatter%dim_2%SM
12676.                $SC_ss_prop_I33 = ss_prop%forward_scatter%dim_2%EX
12676.                $SC_ss_prop_I35 = ss_prop%forward_scatter%dim_2%LB
12676.                $SC_ss_prop_I37 = ss_prop%forward_scatter%dim_3%SM
12676.                $SC_ss_prop_I36 = ss_prop%forward_scatter%dim_3%EX
12676.                $SC_ss_prop_I38 = ss_prop%forward_scatter%dim_3%LB
12675.                $SC_ss_prop_I10 = ss_prop%k_ext_scat%dim_1%SM
12675.                $SC_ss_prop_I9 = ss_prop%k_ext_scat%dim_1%EX
12675.                $SC_ss_prop_I11 = ss_prop%k_ext_scat%dim_1%LB
12675.                $SC_ss_prop_I13 = ss_prop%k_ext_scat%dim_2%SM
12675.                $SC_ss_prop_I12 = ss_prop%k_ext_scat%dim_2%EX
12675.                $SC_ss_prop_I14 = ss_prop%k_ext_scat%dim_2%LB
12675.                $SC_ss_prop_I16 = ss_prop%k_ext_scat%dim_3%SM
12675.                $SC_ss_prop_I15 = ss_prop%k_ext_scat%dim_3%EX
12675.                $SC_ss_prop_I17 = ss_prop%k_ext_scat%dim_3%LB
12673.                if ( nd_layer + -id_ct >= 0 ) then
12674.                   if ( nd_profile > 0 ) then
12672.                      $I_L12672_805 = 0
12672.                      do
12673.                         $I_L12673_753 = 0
12673.                         do
12674.                            $I_L12674_683 = 0
12674. !dir$ unroll 4
12674.                            do
12675.                               if ( (ss_prop%k_ext_scat%base_addr)(1 + $I_L12674_683, id_ct + $I_L12673_753, $I_L12672_805, 0) > 0.0 ) then
12676.                                  (ss_prop%forward_scatter%base_addr)(1 + $I_L12674_683, id_ct + $I_L12673_753, $I_L12672_805, 0) = ( (ss_prop%forward_scatter%base_addr)(1 + $I_L12674_683, id_ct + $I_L12673_753, $I_L12672_805, 0) * 1.0/(ss_prop%k_ext_scat%base_addr)(1 + $I_L12674_683, id_ct + $I_L12673_753, $I_L12672_805, 0) )
12676.                               endif
12680.                               $I_L12674_683 = 1 + $I_L12674_683
12679.                               if ( $I_L12674_683 >= nd_profile ) exit
12679.                            enddo
12681.                            $I_L12673_753 = 1 + $I_L12673_753
12680.                            if ( $I_L12673_753 >= 1 + nd_layer + -id_ct ) exit
12680.                         enddo
12682.                         $I_L12672_805 = 1 + $I_L12672_805
12681.                         if ( $I_L12672_805 >= 1 + n_cloud_type ) exit
12681.                      enddo
12681.                   endif
12681.                endif
12681.             endif
12681.          endif
12685.          if ( l_solar_phf /= .false. ) then
12687.             if ( n_cloud_type >= 0 ) then
12691.                $SC_ss_prop_I52 = ss_prop%forward_solar%dim_1%SM
12691.                $SC_ss_prop_I51 = ss_prop%forward_solar%dim_1%EX
12691.                $SC_ss_prop_I53 = ss_prop%forward_solar%dim_1%LB
12691.                $SC_ss_prop_I55 = ss_prop%forward_solar%dim_2%SM
12691.                $SC_ss_prop_I54 = ss_prop%forward_solar%dim_2%EX
12691.                $SC_ss_prop_I56 = ss_prop%forward_solar%dim_2%LB
12691.                $SC_ss_prop_I58 = ss_prop%forward_solar%dim_3%SM
12691.                $SC_ss_prop_I57 = ss_prop%forward_solar%dim_3%EX
12691.                $SC_ss_prop_I59 = ss_prop%forward_solar%dim_3%LB
12690.                $SC_ss_prop_I10 = ss_prop%k_ext_scat%dim_1%SM
12690.                $SC_ss_prop_I9 = ss_prop%k_ext_scat%dim_1%EX
12690.                $SC_ss_prop_I11 = ss_prop%k_ext_scat%dim_1%LB
12690.                $SC_ss_prop_I13 = ss_prop%k_ext_scat%dim_2%SM
12690.                $SC_ss_prop_I12 = ss_prop%k_ext_scat%dim_2%EX
12690.                $SC_ss_prop_I14 = ss_prop%k_ext_scat%dim_2%LB
12690.                $SC_ss_prop_I16 = ss_prop%k_ext_scat%dim_3%SM
12690.                $SC_ss_prop_I15 = ss_prop%k_ext_scat%dim_3%EX
12690.                $SC_ss_prop_I17 = ss_prop%k_ext_scat%dim_3%LB
12688.                if ( nd_layer + -id_ct >= 0 ) then
12689.                   if ( nd_profile > 0 ) then
12687.                      $I_L12687_807 = 0
12687.                      do
12688.                         $I_L12688_755 = 0
12688.                         do
12689.                            $I_L12689_685 = 0
12689. !dir$ unroll 4
12689.                            do
12690.                               if ( (ss_prop%k_ext_scat%base_addr)(1 + $I_L12689_685, id_ct + $I_L12688_755, $I_L12687_807, 0) > 0.0 ) then
12691.                                  (ss_prop%forward_solar%base_addr)(1 + $I_L12689_685, id_ct + $I_L12688_755, $I_L12687_807, 0) = ( (ss_prop%forward_solar%base_addr)(1 + $I_L12689_685, id_ct + $I_L12688_755, $I_L12687_807, 0) * 1.0/(ss_prop%k_ext_scat%base_addr)(1 + $I_L12689_685, id_ct + $I_L12688_755, $I_L12687_807, 0) )
12691.                               endif
12695.                               $I_L12689_685 = 1 + $I_L12689_685
12694.                               if ( $I_L12689_685 >= nd_profile ) exit
12694.                            enddo
12696.                            $I_L12688_755 = 1 + $I_L12688_755
12695.                            if ( $I_L12688_755 >= 1 + nd_layer + -id_ct ) exit
12695.                         enddo
12697.                         $I_L12687_807 = 1 + $I_L12687_807
12696.                         if ( $I_L12687_807 >= 1 + n_cloud_type ) exit
12696.                      enddo
12696.                   endif
12696.                endif
12704.                $SC_ss_prop_I40 = ss_prop%phase_fnc_solar%dim_1%SM
12704.                $SC_ss_prop_I39 = ss_prop%phase_fnc_solar%dim_1%EX
12704.                $SC_ss_prop_I41 = ss_prop%phase_fnc_solar%dim_1%LB
12704.                $SC_ss_prop_I43 = ss_prop%phase_fnc_solar%dim_2%SM
12704.                $SC_ss_prop_I42 = ss_prop%phase_fnc_solar%dim_2%EX
12704.                $SC_ss_prop_I44 = ss_prop%phase_fnc_solar%dim_2%LB
12704.                $SC_ss_prop_I46 = ss_prop%phase_fnc_solar%dim_3%SM
12704.                $SC_ss_prop_I45 = ss_prop%phase_fnc_solar%dim_3%EX
12704.                $SC_ss_prop_I47 = ss_prop%phase_fnc_solar%dim_3%LB
12704.                $SC_ss_prop_I49 = ss_prop%phase_fnc_solar%dim_4%SM
12704.                $SC_ss_prop_I48 = ss_prop%phase_fnc_solar%dim_4%EX
12704.                $SC_ss_prop_I50 = ss_prop%phase_fnc_solar%dim_4%LB
12703.                $SC_ss_prop_I10 = ss_prop%k_ext_scat%dim_1%SM
12703.                $SC_ss_prop_I9 = ss_prop%k_ext_scat%dim_1%EX
12703.                $SC_ss_prop_I11 = ss_prop%k_ext_scat%dim_1%LB
12703.                $SC_ss_prop_I13 = ss_prop%k_ext_scat%dim_2%SM
12703.                $SC_ss_prop_I12 = ss_prop%k_ext_scat%dim_2%EX
12703.                $SC_ss_prop_I14 = ss_prop%k_ext_scat%dim_2%LB
12703.                $SC_ss_prop_I16 = ss_prop%k_ext_scat%dim_3%SM
12703.                $SC_ss_prop_I15 = ss_prop%k_ext_scat%dim_3%EX
12703.                $SC_ss_prop_I17 = ss_prop%k_ext_scat%dim_3%LB
12700.                if ( n_direction > 0 ) then
12701.                   if ( nd_layer + -id_ct >= 0 ) then
12702.                      if ( nd_profile > 0 ) then
12699.                         $I_L12699_821 = 0
12699.                         do
12700.                            $I_L12700_809 = 0
12700.                            do
12701.                               $I_L12701_757 = 0
12701.                               do
12702.                                  $I_L12702_687 = 0
12702. !dir$ unroll 4
12702.                                  do
12703.                                     if ( (ss_prop%k_ext_scat%base_addr)(1 + $I_L12702_687, id_ct + $I_L12701_757, $I_L12699_821, 0) > 0.0 ) then
12704.                                        (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12702_687, id_ct + $I_L12701_757, 1 + $I_L12700_809, $I_L12699_821, 0) = ( (ss_prop%phase_fnc_solar%base_addr)(1 + $I_L12702_687, id_ct + $I_L12701_757, 1 + $I_L12700_809, $I_L12699_821, 0) * 1.0/(ss_prop%k_ext_scat%base_addr)(1 + $I_L12702_687, id_ct + $I_L12701_757, $I_L12699_821, 0) )
12704.                                     endif
12708.                                     $I_L12702_687 = 1 + $I_L12702_687
12707.                                     if ( $I_L12702_687 >= nd_profile ) exit
12707.                                  enddo
12709.                                  $I_L12701_757 = 1 + $I_L12701_757
12708.                                  if ( $I_L12701_757 >= 1 + nd_layer + -id_ct ) exit
12708.                               enddo
12710.                               $I_L12700_809 = 1 + $I_L12700_809
12709.                               if ( $I_L12700_809 >= n_direction ) exit
12709.                            enddo
12711.                            $I_L12699_821 = 1 + $I_L12699_821
12710.                            if ( $I_L12699_821 >= 1 + n_cloud_type ) exit
12710.                         enddo
12710.                      endif
12710.                   endif
12710.                endif
12710.             endif
12710.          endif
11737.          _free( t$2055 )
11737.       endif
12718.       return
12718.       end
12718.       
12752.       
12752.       subroutine hemi_sph_integ( ls_trunc, ms, uplm_zero, kappa, nd_max_order )
12752.       t$316 = ( 1 + ls_trunc + -ms )
12780.       t$2079 = _zla( 0, ( 1 + ls_trunc + -ms ) )
12752.       t$317 = nd_max_order / 2
12785.       t$2080 = _zla( 0, t$317 )
12752.       t$2081 = _zla( 0, t$317 )
12752.       t$2082 = _zla( 0, t$317 ) * _zla( 0, t$317 )
12801.       if ( ls_trunc + -ms > 0 ) then
12802.          $I_L12802_24 = 0
12802.          do
12801.             $I_L12801_22 = 0
12801.             do
12802.                $I_L12802_19 = 0
12802.                if ( min( ( 1 + ls_trunc + -ms ) / 2, 4 + 4 * $I_L12802_24 ) + -4 * $I_L12802_24 >= 4 ) then
12802.                   $I_L12802_29 = 0
12802. !dir$ shortloop16
12802. !dir$ blocking_size( 4, 4 )
12802.                   do
12801.                      $SCA_uplm_zero#1_U0 = uplm_zero(1 + 8 * $I_L12802_24 + 8 * $I_L12802_29)
12801.                      $SCA_uplm_zero#2_U1 = uplm_zero(3 + 8 * $I_L12802_24 + 8 * $I_L12802_29)
12801.                      $SCA_uplm_zero#3_U2 = uplm_zero(5 + 8 * $I_L12802_24 + 8 * $I_L12802_29)
12801.                      $SCA_uplm_zero#4_U3 = uplm_zero(7 + 8 * $I_L12802_24 + 8 * $I_L12802_29)
12801.                      $I_L12801_16 = 0
12801. !dir$ ivdep
12801. !dir$ blocking_size( 256, 256 )
12801.                      do
12803.                         kappa(1 + $I_L12801_16 + 256 * $I_L12801_22, 1 + 4 * $I_L12802_24 + 4 * $I_L12802_29) = ( 6.2831853071795862 * uplm_zero(2 + 2 * $I_L12801_16 + 512 * $I_L12801_22) * $SCA_uplm_zero#1_U0 * real( 1 + -2 * mod( ( 2 + 2 * $I_L12801_16 + 512 * $I_L12801_22 ), 2 ), 8 ) * 1.0/( real( 1 + -( ( 2 + 2 * $I_L12801_16 + 512 * $I_L12801_22 ) * ( 2 + 2 * $I_L12801_16 + 512 * $I_L12801_22 ) ) + -2 * ms + -4 * ms * $I_L12801_16 + 2 * $I_L12801_16 + -1024 * ms * $I_L12801_22 + 512 * $I_L12801_22 + 16 * ms * $I_L12802_24 + -8 * $I_L12802_24 + ( 1 + 8 * $I_L12802_24 + 8 * $I_L12802_29 ) * ( 1 + 8 * $I_L12802_24 + 8 * $I_L12802_29 ) + -8 * $I_L12802_29 + 16 * ms * $I_L12802_29, 8 ) ) )
12803.                         kappa(1 + $I_L12801_16 + 256 * $I_L12801_22, 2 + 4 * $I_L12802_24 + 4 * $I_L12802_29) = ( 6.2831853071795862 * uplm_zero(2 + 2 * $I_L12801_16 + 512 * $I_L12801_22) * $SCA_uplm_zero#2_U1 * real( 1 + -2 * mod( ( 2 + 2 * $I_L12801_16 + 512 * $I_L12801_22 ), 2 ), 8 ) * 1.0/( real( -1 + -( ( 2 + 2 * $I_L12801_16 + 512 * $I_L12801_22 ) * ( 2 + 2 * $I_L12801_16 + 512 * $I_L12801_22 ) ) + -4 * ms * $I_L12801_16 + 2 * $I_L12801_16 + -1024 * ms * $I_L12801_22 + 512 * $I_L12801_22 + 16 * ms * $I_L12802_24 + -8 * $I_L12802_24 + 2 * ms + -8 * $I_L12802_29 + 16 * ms * $I_L12802_29 + ( 3 + 8 * $I_L12802_24 + 8 * $I_L12802_29 ) * ( 3 + 8 * $I_L12802_24 + 8 * $I_L12802_29 ), 8 ) ) )
12803.                         kappa(1 + $I_L12801_16 + 256 * $I_L12801_22, 3 + 4 * $I_L12802_24 + 4 * $I_L12802_29) = ( 6.2831853071795862 * uplm_zero(2 + 2 * $I_L12801_16 + 512 * $I_L12801_22) * $SCA_uplm_zero#3_U2 * real( 1 + -2 * mod( ( 2 + 2 * $I_L12801_16 + 512 * $I_L12801_22 ), 2 ), 8 ) * 1.0/( real( -3 + -( ( 2 + 2 * $I_L12801_16 + 512 * $I_L12801_22 ) * ( 2 + 2 * $I_L12801_16 + 512 * $I_L12801_22 ) ) + -4 * ms * $I_L12801_16 + 2 * $I_L12801_16 + -1024 * ms * $I_L12801_22 + 512 * $I_L12801_22 + 16 * ms * $I_L12802_24 + -8 * $I_L12802_24 + 6 * ms + -8 * $I_L12802_29 + 16 * ms * $I_L12802_29 + ( 5 + 8 * $I_L12802_24 + 8 * $I_L12802_29 ) * ( 5 + 8 * $I_L12802_24 + 8 * $I_L12802_29 ), 8 ) ) )
12803.                         kappa(1 + $I_L12801_16 + 256 * $I_L12801_22, 4 + 4 * $I_L12802_24 + 4 * $I_L12802_29) = ( 6.2831853071795862 * uplm_zero(2 + 2 * $I_L12801_16 + 512 * $I_L12801_22) * $SCA_uplm_zero#4_U3 * real( 1 + -2 * mod( ( 2 + 2 * $I_L12801_16 + 512 * $I_L12801_22 ), 2 ), 8 ) * 1.0/( real( -5 + -( ( 2 + 2 * $I_L12801_16 + 512 * $I_L12801_22 ) * ( 2 + 2 * $I_L12801_16 + 512 * $I_L12801_22 ) ) + -4 * ms * $I_L12801_16 + 2 * $I_L12801_16 + -1024 * ms * $I_L12801_22 + 512 * $I_L12801_22 + 16 * ms * $I_L12802_24 + -8 * $I_L12802_24 + 10 * ms + -8 * $I_L12802_29 + 16 * ms * $I_L12802_29 + ( 7 + 8 * $I_L12802_24 + 8 * $I_L12802_29 ) * ( 7 + 8 * $I_L12802_24 + 8 * $I_L12802_29 ), 8 ) ) )
12801.                         $I_L12801_16 = 1 + $I_L12801_16
12802.                         if ( $I_L12801_16 >= min( ( 1 + ls_trunc + -ms ) / 2, 256 + 256 * $I_L12801_22 ) + -256 * $I_L12801_22 ) exit
12802.                      enddo
12802.                      $I_L12802_29 = 1 + $I_L12802_29
12802.                      if ( $I_L12802_29 >= _rsh( min( ( 1 + ls_trunc + -ms ) / 2, 4 + 4 * $I_L12802_24 ) + -4 * $I_L12802_24, 2 ) ) exit
12802.                   enddo
12802.                   $I_L12802_19 = and( 0xfffffffffffffffcUL, min( ( 1 + ls_trunc + -ms ) / 2, 4 + 4 * $I_L12802_24 ) + -4 * $I_L12802_24 )
12802.                endif
12802.                if ( $I_L12802_19 < min( ( 1 + ls_trunc + -ms ) / 2, 4 + 4 * $I_L12802_24 ) + -4 * $I_L12802_24 ) then
12802.                   $I_L12802_26 = 0
12802. !dir$ shortloop16
12802. !dir$ blocking_size( 4, 4 )
12802.                   do
12801.                      $SCA_uplm_zero_I0 = uplm_zero(1 + 2 * $I_L12802_19 + 8 * $I_L12802_24 + 2 * $I_L12802_26)
12801.                      $I_L12801_16 = 0
12801. !dir$ ivdep
12801. !dir$ blocking_size( 256, 256 )
12801.                      do
12803.                         kappa(1 + $I_L12801_16 + 256 * $I_L12801_22, 1 + $I_L12802_19 + $I_L12802_26 + 4 * $I_L12802_24) = ( 6.2831853071795862 * uplm_zero(2 + 2 * $I_L12801_16 + 512 * $I_L12801_22) * $SCA_uplm_zero_I0 * real( 1 + -2 * mod( ( 2 + 2 * $I_L12801_16 + 512 * $I_L12801_22 ), 2 ), 8 ) * 1.0/( real( 1 + -( ( 2 + 2 * $I_L12801_16 + 512 * $I_L12801_22 ) * ( 2 + 2 * $I_L12801_16 + 512 * $I_L12801_22 ) ) + -2 * ms + -4 * ms * $I_L12801_16 + 2 * $I_L12801_16 + 4 * ms * $I_L12802_19 + -2 * $I_L12802_19 + -1024 * ms * $I_L12801_22 + 512 * $I_L12801_22 + 16 * ms * $I_L12802_24 + -8 * $I_L12802_24 + -2 * $I_L12802_26 + 4 * ms * $I_L12802_26 + ( 1 + 2 * $I_L12802_19 + 8 * $I_L12802_24 + 2 * $I_L12802_26 ) * ( 1 + 2 * $I_L12802_19 + 8 * $I_L12802_24 + 2 * $I_L12802_26 ), 8 ) ) )
12801.                         $I_L12801_16 = 1 + $I_L12801_16
12802.                         if ( $I_L12801_16 >= min( ( 1 + ls_trunc + -ms ) / 2, 256 + 256 * $I_L12801_22 ) + -256 * $I_L12801_22 ) exit
12802.                      enddo
12802.                      $I_L12802_26 = 1 + $I_L12802_26
12802.                      if ( $I_L12802_26 >= min( ( 1 + ls_trunc + -ms ) / 2, 4 + 4 * $I_L12802_24 ) + -$I_L12802_19 + -4 * $I_L12802_24 ) exit
12802.                   enddo
12802.                endif
12801.                $I_L12801_22 = 1 + $I_L12801_22
12807.                if ( $I_L12801_22 >= 1 + max( 0, -1 + _rsh( 255 + ( 1 + ls_trunc + -ms ) / 2, 8 ) ) ) exit
12807.             enddo
12802.             $I_L12802_24 = 1 + $I_L12802_24
12802.             if ( $I_L12802_24 >= 1 + max( 0, -1 + _rsh( 3 + ( 1 + ls_trunc + -ms ) / 2, 2 ) ) ) exit
12802.          enddo
12802.       endif
12813.       return
12813.       end
12813.       
12836.       
12836.       subroutine increment_rad_cf( n_profile, n_direction, azim_factor, n_viewing_level, i_rad_layer, i_sph_mode, i_sph_algorithm, ms, ls_trunc, euler_factor, isolir, mu_0, kappa, up_lm, n_red_eigensystem, n_equation, weight_u, upm, i_direct, c_ylm, flux_direct, flux_total, radiance, j_radiance, nd_profile, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_layer, nd_direction, nd_viewing_level, nd_max_order, nd_sph_equation, nd_sph_cf_weight, nd_sph_u_range )
12836.       t$319 = nd_profile
12836.       t$320 = nd_direction
12911.       t$2083 = _zla( 0, nd_profile )
12836.       t$2084 = _zla( 0, nd_profile )
12911.       t$2085 = _zla( 0, nd_direction )
12836.       t$2086 = _zla( 0, nd_profile ) * _zla( 0, nd_direction )
12836.       t$318 = nd_viewing_level
12908.       t$2087 = _zla( 0, nd_viewing_level )
12836.       t$321 = nd_max_order / 2
12915.       t$2088 = _zla( 0, t$321 )
12836.       t$2089 = _zla( 0, t$321 )
12836.       t$2090 = _zla( 0, t$321 ) * _zla( 0, t$321 )
12836.       t$322 = ( 1 + nd_max_order )
12917.       t$2091 = _zla( 0, ( 1 + nd_max_order ) )
12836.       t$2092 = _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_max_order ) )
12836.       t$2093 = _zla( 0, nd_profile ) * _zla( 0, nd_direction ) * _zla( 0, ( 1 + nd_max_order ) )
12836.       t$323 = nd_sph_cf_weight
12836.       t$324 = nd_sph_u_range
12836.       t$2094 = _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level )
12941.       t$2095 = _zla( 0, nd_sph_cf_weight )
12836.       t$2096 = _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level ) * _zla( 0, nd_sph_cf_weight )
12941.       t$2097 = _zla( 0, nd_sph_u_range )
12836.       t$2098 = _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level ) * _zla( 0, nd_sph_cf_weight ) * _zla( 0, nd_sph_u_range )
12836.       t$325 = nd_sph_equation
12944.       t$2099 = _zla( 0, nd_sph_equation )
12836.       t$2100 = _zla( 0, nd_profile ) * _zla( 0, nd_sph_equation )
12836.       t$326 = nd_layer
12836.       t$2101 = 1 + nd_layer
12948.       t$2102 = _zla( 0, 1 + nd_layer )
12836.       t$2103 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
12836.       t$327 = ( 1 + ls_trunc + -ms )
12951.       t$2104 = _zla( 0, ( 1 + ls_trunc + -ms ) )
12836.       t$2105 = _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level ) * _zla( 0, ( 1 + ls_trunc + -ms ) )
12836.       t$329 = nd_flux_profile
12959.       t$2106 = _zla( 0, nd_flux_profile )
12836.       t$2107 = _zla( 0, nd_flux_profile )
12836.       t$2108 = _zla( 0, nd_flux_profile ) * _zla( 0, 1 + nd_layer )
12836.       t$330 = ( 2 + 2 * nd_layer )
12961.       t$2109 = _zla( 0, ( 2 + 2 * nd_layer ) )
12836.       t$2110 = _zla( 0, nd_flux_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
12836.       t$328 = nd_radiance_profile
12956.       t$2111 = _zla( 0, nd_radiance_profile )
12836.       t$2112 = _zla( 0, nd_radiance_profile )
12836.       t$2113 = _zla( 0, nd_viewing_level ) * _zla( 0, nd_radiance_profile )
12836.       t$2114 = _zla( 0, nd_direction ) * _zla( 0, nd_viewing_level ) * _zla( 0, nd_radiance_profile )
12836.       t$331 = nd_j_profile
12966.       t$2115 = _zla( 0, nd_j_profile )
12836.       t$2116 = _zla( 0, nd_j_profile )
12836.       t$2117 = _zla( 0, nd_viewing_level ) * _zla( 0, nd_j_profile )
13001.       if ( i_sph_algorithm == 1 ) then
13008.          if ( n_viewing_level > 0 ) then
13010.             if ( 2 * n_red_eigensystem > 0 ) then
13011.                if ( ls_trunc + -ms >= 0 ) then
13012.                   if ( n_profile > 0 ) then
13008.                      $I_L13008_298 = 0
13008. !dir$ ivdep
13008. !dir$ loop_info (automatic) cache_nt( i_rad_layer )
13008.                      do
13009.                         $offset_S4 = -2 * n_red_eigensystem + 2 * n_red_eigensystem * i_rad_layer(1 + $I_L13008_298)
13011.                         $I_L13011_287 = 0
13011.                         do
13010.                            $I_L13010_280 = 0
13010.                            do
13012.                               $I_L13012_269 = 0
13012.                               do
13011.                                  $I_L13011_259 = 0
13011.                                  if ( min( 1 + ls_trunc + -ms, 4 + 4 * $I_L13011_287 ) + -4 * $I_L13011_287 >= 4 ) then
13011.                                     $I_L13011_320 = 0
13011. !dir$ shortloop16
13011. !dir$ blocking_size( 4, 4 )
13011.                                     do
13010.                                        $I_L13010_244 = 0
13010. !dir$ shortloop16
13010. !dir$ blocking_size( 4, 4 )
13010.                                        do
13012.                                           $I_L13012_213 = 0
13012. !dir$ blocking_size( 256, 256 )
13012.                                           do
13013.                                              c_ylm(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $I_L13008_298, 1 + 4 * $I_L13011_287 + 4 * $I_L13011_320) = c_ylm(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $I_L13008_298, 1 + 4 * $I_L13011_287 + 4 * $I_L13011_320) + upm(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $offset_S4 + $I_L13010_244 + 4 * $I_L13010_280) * weight_u(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $I_L13008_298, 1 + 4 * $I_L13011_287 + 4 * $I_L13011_320, 1 + $I_L13010_244 + 4 * $I_L13010_280)
13013.                                              c_ylm(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $I_L13008_298, 2 + 4 * $I_L13011_287 + 4 * $I_L13011_320) = c_ylm(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $I_L13008_298, 2 + 4 * $I_L13011_287 + 4 * $I_L13011_320) + upm(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $offset_S4 + $I_L13010_244 + 4 * $I_L13010_280) * weight_u(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $I_L13008_298, 2 + 4 * $I_L13011_287 + 4 * $I_L13011_320, 1 + $I_L13010_244 + 4 * $I_L13010_280)
13013.                                              c_ylm(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $I_L13008_298, 3 + 4 * $I_L13011_287 + 4 * $I_L13011_320) = c_ylm(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $I_L13008_298, 3 + 4 * $I_L13011_287 + 4 * $I_L13011_320) + upm(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $offset_S4 + $I_L13010_244 + 4 * $I_L13010_280) * weight_u(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $I_L13008_298, 3 + 4 * $I_L13011_287 + 4 * $I_L13011_320, 1 + $I_L13010_244 + 4 * $I_L13010_280)
13013.                                              c_ylm(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $I_L13008_298, 4 + 4 * $I_L13011_287 + 4 * $I_L13011_320) = c_ylm(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $I_L13008_298, 4 + 4 * $I_L13011_287 + 4 * $I_L13011_320) + upm(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $offset_S4 + $I_L13010_244 + 4 * $I_L13010_280) * weight_u(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $I_L13008_298, 4 + 4 * $I_L13011_287 + 4 * $I_L13011_320, 1 + $I_L13010_244 + 4 * $I_L13010_280)
13012.                                              $I_L13012_213 = 1 + $I_L13012_213
13012.                                              if ( $I_L13012_213 >= min( n_profile, 256 + 256 * $I_L13012_269 ) + -256 * $I_L13012_269 ) exit
13012.                                           enddo
13010.                                           $I_L13010_244 = 1 + $I_L13010_244
13010.                                           if ( $I_L13010_244 >= min( ( 2 * n_red_eigensystem ), 4 + 4 * $I_L13010_280 ) + -4 * $I_L13010_280 ) exit
13010.                                        enddo
13011.                                        $I_L13011_320 = 1 + $I_L13011_320
13015.                                        if ( $I_L13011_320 >= _rsh( min( 1 + ls_trunc + -ms, 4 + 4 * $I_L13011_287 ) + -4 * $I_L13011_287, 2 ) ) exit
13015.                                     enddo
13011.                                     $I_L13011_259 = and( 0xfffffffffffffffcUL, min( 1 + ls_trunc + -ms, 4 + 4 * $I_L13011_287 ) + -4 * $I_L13011_287 )
13011.                                  endif
13011.                                  if ( $I_L13011_259 < min( 1 + ls_trunc + -ms, 4 + 4 * $I_L13011_287 ) + -4 * $I_L13011_287 ) then
13011.                                     $I_L13011_317 = 0
13011. !dir$ shortloop16
13011. !dir$ blocking_size( 4, 4 )
13011.                                     do
13010.                                        $I_L13010_244 = 0
13010. !dir$ shortloop16
13010. !dir$ blocking_size( 4, 4 )
13010.                                        do
13012.                                           $I_L13012_213 = 0
13012. !dir$ blocking_size( 256, 256 )
13012.                                           do
13013.                                              c_ylm(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $I_L13008_298, 1 + $I_L13011_259 + $I_L13011_317 + 4 * $I_L13011_287) = c_ylm(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $I_L13008_298, 1 + $I_L13011_259 + $I_L13011_317 + 4 * $I_L13011_287) + upm(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $offset_S4 + $I_L13010_244 + 4 * $I_L13010_280) * weight_u(1 + $I_L13012_213 + 256 * $I_L13012_269, 1 + $I_L13008_298, 1 + $I_L13011_259 + $I_L13011_317 + 4 * $I_L13011_287, 1 + $I_L13010_244 + 4 * $I_L13010_280)
13012.                                              $I_L13012_213 = 1 + $I_L13012_213
13012.                                              if ( $I_L13012_213 >= min( n_profile, 256 + 256 * $I_L13012_269 ) + -256 * $I_L13012_269 ) exit
13012.                                           enddo
13010.                                           $I_L13010_244 = 1 + $I_L13010_244
13010.                                           if ( $I_L13010_244 >= min( ( 2 * n_red_eigensystem ), 4 + 4 * $I_L13010_280 ) + -4 * $I_L13010_280 ) exit
13010.                                        enddo
13011.                                        $I_L13011_317 = 1 + $I_L13011_317
13015.                                        if ( $I_L13011_317 >= min( 1 + ls_trunc + -ms, 4 + 4 * $I_L13011_287 ) + -$I_L13011_259 + -4 * $I_L13011_287 ) exit
13015.                                     enddo
13015.                                  endif
13012.                                  $I_L13012_269 = 1 + $I_L13012_269
13012.                                  if ( $I_L13012_269 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
13012.                               enddo
13010.                               $I_L13010_280 = 1 + $I_L13010_280
13016.                               if ( $I_L13010_280 >= 1 + max( 0, -1 + _rsh( 3 + 2 * n_red_eigensystem, 2 ) ) ) exit
13016.                            enddo
13011.                            $I_L13011_287 = 1 + $I_L13011_287
13011.                            if ( $I_L13011_287 >= 1 + max( 0, -1 + _rsh( 4 + ls_trunc + -ms, 2 ) ) ) exit
13011.                         enddo
13018.                         $I_L13008_298 = 1 + $I_L13008_298
13017.                         if ( $I_L13008_298 >= n_viewing_level ) exit
13017.                      enddo
13017.                   endif
13017.                endif
13017.             endif
13017.          endif
13020.          if ( i_sph_mode == 2 ) then
13026.             if ( n_viewing_level > 0 ) then
13027.                if ( n_profile > 0 ) then
13026.                   $I_L13026_238 = 0
13026.                   do
13027.                      $I_L13027_220 = 0
13027. !dir$ ivdep
13027.                      do
13028.                         $contribution_S7 = 1.0233267079464885 * c_ylm(1 + $I_L13027_220, 1 + $I_L13026_238, 2)
13030.                         flux_total(1 + $I_L13027_220, 1 + 2 * $I_L13026_238) = $contribution_S7
13032.                         flux_total(1 + $I_L13027_220, 2 + 2 * $I_L13026_238) = -$contribution_S7
13033.                         $I_L13027_220 = 1 + $I_L13027_220
13027.                         if ( $I_L13027_220 >= n_profile ) exit
13027.                      enddo
13034.                      $I_L13026_238 = 1 + $I_L13026_238
13033.                      if ( $I_L13026_238 >= n_viewing_level ) exit
13033.                   enddo
13033.                endif
13033.             endif
13035.             if ( ls_trunc >= 0 ) then
13038.                if ( n_viewing_level > 0 ) then
13039.                   if ( n_profile > 0 ) then
13035.                      $I_L13035_262 = 0
13035.                      do
13036.                         $cnst_ls_S11 = 2.046653415892977 * kappa(1, 1 + $I_L13035_262)
13038.                         $I_L13038_240 = 0
13038.                         do
13039.                            $I_L13039_222 = 0
13039. !dir$ ivdep
13039.                            do
13040.                               $contribution_S12 = $cnst_ls_S11 * c_ylm(1 + $I_L13039_222, 1 + $I_L13038_240, 1 + 2 * $I_L13035_262)
13041.                               flux_total(1 + $I_L13039_222, 1 + 2 * $I_L13038_240) = flux_total(1 + $I_L13039_222, 1 + 2 * $I_L13038_240) + -$contribution_S12
13043.                               flux_total(1 + $I_L13039_222, 2 + 2 * $I_L13038_240) = flux_total(1 + $I_L13039_222, 2 + 2 * $I_L13038_240) + -$contribution_S12
13045.                               $I_L13039_222 = 1 + $I_L13039_222
13039.                               if ( $I_L13039_222 >= n_profile ) exit
13039.                            enddo
13046.                            $I_L13038_240 = 1 + $I_L13038_240
13045.                            if ( $I_L13038_240 >= n_viewing_level ) exit
13045.                         enddo
13047.                         $I_L13035_262 = 1 + $I_L13035_262
13046.                         if ( $I_L13035_262 >= ( 2 + ls_trunc ) / 2 ) exit
13046.                      enddo
13046.                   endif
13046.                endif
13046.             endif
13049.             if ( isolir == 1 ) then
13050.                if ( n_viewing_level > 0 ) then
13051.                   if ( n_profile > 0 ) then
13050.                      $I_L13050_242 = 0
13050.                      if ( n_viewing_level >= 4 ) then
13050.                         $I_L13050_311 = 0
13050. !dir$ blocking_size( 1, 1 )
13050.                         do
13051.                            $I_L13051_224 = 0
13051. !dir$ ivdep
13051. !dir$ blocking_size( 256, 256 )
13051.                            do
13052.                               $flux_direct_WR0_R0 = mu_0(1 + $I_L13051_224) * i_direct(1 + $I_L13051_224, 4 * $I_L13050_311)
13052.                               flux_direct(1 + $I_L13051_224, 4 * $I_L13050_311) = $flux_direct_WR0_R0
13053.                               flux_total(1 + $I_L13051_224, 2 + 8 * $I_L13050_311) = $flux_direct_WR0_R0 + flux_total(1 + $I_L13051_224, 2 + 8 * $I_L13050_311)
13052.                               $flux_direct_WR0_R0 = mu_0(1 + $I_L13051_224) * i_direct(1 + $I_L13051_224, 1 + 4 * $I_L13050_311)
13052.                               flux_direct(1 + $I_L13051_224, 1 + 4 * $I_L13050_311) = $flux_direct_WR0_R0
13053.                               flux_total(1 + $I_L13051_224, 4 + 8 * $I_L13050_311) = $flux_direct_WR0_R0 + flux_total(1 + $I_L13051_224, 4 + 8 * $I_L13050_311)
13052.                               $flux_direct_WR0_R0 = mu_0(1 + $I_L13051_224) * i_direct(1 + $I_L13051_224, 2 + 4 * $I_L13050_311)
13052.                               flux_direct(1 + $I_L13051_224, 2 + 4 * $I_L13050_311) = $flux_direct_WR0_R0
13053.                               flux_total(1 + $I_L13051_224, 6 + 8 * $I_L13050_311) = $flux_direct_WR0_R0 + flux_total(1 + $I_L13051_224, 6 + 8 * $I_L13050_311)
13052.                               $flux_direct_WR0_R0 = mu_0(1 + $I_L13051_224) * i_direct(1 + $I_L13051_224, 3 + 4 * $I_L13050_311)
13052.                               flux_direct(1 + $I_L13051_224, 3 + 4 * $I_L13050_311) = $flux_direct_WR0_R0
13053.                               flux_total(1 + $I_L13051_224, 8 + 8 * $I_L13050_311) = $flux_direct_WR0_R0 + flux_total(1 + $I_L13051_224, 8 + 8 * $I_L13050_311)
13055.                               $I_L13051_224 = 1 + $I_L13051_224
13051.                               if ( $I_L13051_224 >= n_profile ) exit
13051.                            enddo
13056.                            $I_L13050_311 = 1 + $I_L13050_311
13055.                            if ( $I_L13050_311 >= _rsh( n_viewing_level, 2 ) ) exit
13055.                         enddo
13056.                         $I_L13050_242 = and( 0xfffffffffffffffcUL, n_viewing_level )
13056.                      endif
13050.                      if ( $I_L13050_242 < n_viewing_level ) then
13050.                         $I_L13050_306 = 0
13050. !dir$ blocking_size( 1, 1 )
13050.                         do
13051.                            $I_L13051_224 = 0
13051. !dir$ ivdep
13051. !dir$ blocking_size( 256, 256 )
13051.                            do
13052.                               $flux_direct_WR0_R0 = mu_0(1 + $I_L13051_224) * i_direct(1 + $I_L13051_224, $I_L13050_242 + $I_L13050_306)
13052.                               flux_direct(1 + $I_L13051_224, $I_L13050_242 + $I_L13050_306) = $flux_direct_WR0_R0
13053.                               flux_total(1 + $I_L13051_224, 2 + 2 * $I_L13050_242 + 2 * $I_L13050_306) = $flux_direct_WR0_R0 + flux_total(1 + $I_L13051_224, 2 + 2 * $I_L13050_242 + 2 * $I_L13050_306)
13055.                               $I_L13051_224 = 1 + $I_L13051_224
13051.                               if ( $I_L13051_224 >= n_profile ) exit
13051.                            enddo
13056.                            $I_L13050_306 = 1 + $I_L13050_306
13055.                            if ( $I_L13050_306 >= n_viewing_level + -$I_L13050_242 ) exit
13055.                         enddo
13055.                      endif
13055.                   endif
13055.                endif
13055.             endif
13059.          else if ( i_sph_mode == 3 ) then
13065.             if ( n_viewing_level > 0 ) then
13066.                if ( n_profile > 0 ) then
13065.                   $I_L13065_234 = 0
13065.                   do
13066.                      $I_L13066_216 = 0
13066. !dir$ ivdep
13066.                      do
13067.                         j_radiance(1 + $I_L13066_216, 1 + $I_L13065_234) = 3.5449077018110318 * c_ylm(1 + $I_L13066_216, 1 + $I_L13065_234, 2)
13068.                         $I_L13066_216 = 1 + $I_L13066_216
13066.                         if ( $I_L13066_216 >= n_profile ) exit
13066.                      enddo
13069.                      $I_L13065_234 = 1 + $I_L13065_234
13068.                      if ( $I_L13065_234 >= n_viewing_level ) exit
13068.                   enddo
13068.                endif
13068.             endif
13071.             if ( isolir == 1 ) then
13072.                if ( n_viewing_level > 0 ) then
13073.                   if ( n_profile > 0 ) then
13072.                      $I_L13072_236 = 0
13072.                      do
13073.                         $I_L13073_218 = 0
13073. !dir$ ivdep
13073.                         do
13074.                            j_radiance(1 + $I_L13073_218, 1 + $I_L13072_236) = j_radiance(1 + $I_L13073_218, 1 + $I_L13072_236) + i_direct(1 + $I_L13073_218, 1 + $I_L13072_236)
13076.                            $I_L13073_218 = 1 + $I_L13073_218
13073.                            if ( $I_L13073_218 >= n_profile ) exit
13073.                         enddo
13077.                         $I_L13072_236 = 1 + $I_L13072_236
13076.                         if ( $I_L13072_236 >= n_viewing_level ) exit
13076.                      enddo
13076.                   endif
13076.                endif
13076.             endif
13076.          else if ( i_sph_mode == 1 ) then
13084.             if ( n_direction > 0 ) then
13089.                if ( n_viewing_level > 0 ) then
13090.                   if ( ls_trunc + -ms > 0 ) then
13091.                      if ( n_profile > 0 ) then
13084.                         $I_L13084_302 = 0
13084.                         do
13089.                            $I_L13089_300 = 0
13089.                            do
13084.                               $I_L13084_289 = 0
13084. !dir$ shortloop16
13084. !dir$ blocking_size( 8, 8 )
13084.                               do
13089.                                  $I_L13089_282 = 0
13089. !dir$ shortloop16
13089. !dir$ blocking_size( 8, 8 )
13089.                                  do
13090.                                     $I_L13090_271 = 0
13090.                                     do
13091.                                        $I_L13091_264 = 0
13091.                                        do
13090.                                           $I_L13090_309 = 0
13090. !dir$ shortloop16
13090. !dir$ blocking_size( 2, 2 )
13090.                                           do
13091.                                              $I_L13091_226 = 0
13091. !dir$ ivdep
13091. !dir$ blocking_size( 256, 256 )
13091.                                              do
13092.                                                 radiance(1 + $I_L13091_226 + 256 * $I_L13091_264, 1 + $I_L13089_282 + 8 * $I_L13089_300, 1 + $I_L13084_289 + 8 * $I_L13084_302) = radiance(1 + $I_L13091_226 + 256 * $I_L13091_264, 1 + $I_L13089_282 + 8 * $I_L13089_300, 1 + $I_L13084_289 + 8 * $I_L13084_302) + c_ylm(1 + $I_L13091_226 + 256 * $I_L13091_264, 1 + $I_L13089_282 + 8 * $I_L13089_300, 1 + $I_L13090_309 + 2 * $I_L13090_271) * azim_factor(1 + $I_L13091_226 + 256 * $I_L13091_264, 1 + $I_L13084_289 + 8 * $I_L13084_302) * up_lm(1 + $I_L13091_226 + 256 * $I_L13091_264, 1 + $I_L13090_309 + 2 * $I_L13090_271, 1 + $I_L13084_289 + 8 * $I_L13084_302)
13091.                                                 $I_L13091_226 = 1 + $I_L13091_226
13091.                                                 if ( $I_L13091_226 >= min( n_profile, 256 + 256 * $I_L13091_264 ) + -256 * $I_L13091_264 ) exit
13091.                                              enddo
13090.                                              $I_L13090_309 = 1 + $I_L13090_309
13090.                                              if ( $I_L13090_309 >= min( ( ls_trunc + -ms ), 2 + 2 * $I_L13090_271 ) + -2 * $I_L13090_271 ) exit
13090.                                           enddo
13091.                                           $I_L13091_264 = 1 + $I_L13091_264
13095.                                           if ( $I_L13091_264 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
13095.                                        enddo
13090.                                        $I_L13090_271 = 1 + $I_L13090_271
13090.                                        if ( $I_L13090_271 >= 1 + max( 0, -1 + _rsh( 1 + ls_trunc + -ms, 1 ) ) ) exit
13090.                                     enddo
13097.                                     $I_L13097_229 = 0
13097. !dir$ ivdep
13097.                                     do
13098.                                        radiance(1 + $I_L13097_229, 1 + $I_L13089_282 + 8 * $I_L13089_300, 1 + $I_L13084_289 + 8 * $I_L13084_302) = radiance(1 + $I_L13097_229, 1 + $I_L13089_282 + 8 * $I_L13089_300, 1 + $I_L13084_289 + 8 * $I_L13084_302) + euler_factor * azim_factor(1 + $I_L13097_229, 1 + $I_L13084_289 + 8 * $I_L13084_302) * c_ylm(1 + $I_L13097_229, 1 + $I_L13089_282 + 8 * $I_L13089_300, 1 + ls_trunc + -ms) * up_lm(1 + $I_L13097_229, 1 + ls_trunc + -ms, 1 + $I_L13084_289 + 8 * $I_L13084_302)
13101.                                        $I_L13097_229 = 1 + $I_L13097_229
13097.                                        if ( $I_L13097_229 >= n_profile ) exit
13097.                                     enddo
13089.                                     $I_L13089_282 = 1 + $I_L13089_282
13101.                                     if ( $I_L13089_282 >= min( n_viewing_level, 8 + 8 * $I_L13089_300 ) + -8 * $I_L13089_300 ) exit
13101.                                  enddo
13084.                                  $I_L13084_289 = 1 + $I_L13084_289
13084.                                  if ( $I_L13084_289 >= min( n_direction, 8 + 8 * $I_L13084_302 ) + -8 * $I_L13084_302 ) exit
13084.                               enddo
13089.                               $I_L13089_300 = 1 + $I_L13089_300
13102.                               if ( $I_L13089_300 >= 1 + max( 0, -1 + _rsh( 7 + n_viewing_level, 3 ) ) ) exit
13102.                            enddo
13084.                            $I_L13084_302 = 1 + $I_L13084_302
13084.                            if ( $I_L13084_302 >= 1 + max( 0, -1 + _rsh( 7 + n_direction, 3 ) ) ) exit
13084.                         enddo
13084.                      endif
13084.                   else if ( n_profile > 0 ) then
13084.                      $I_L13084_292 = 0
13084.                      do
13089.                         $I_L13089_285 = 0
13089.                         do
13097.                            $I_L13097_273 = 0
13097.                            do
13084.                               $I_L13084_266 = 0
13084.                               if ( min( n_direction, 4 + 4 * $I_L13084_292 ) + -4 * $I_L13084_292 >= 2 ) then
13084.                                  $I_L13084_322 = 0
13084. !dir$ shortloop16
13084. !dir$ blocking_size( 4, 4 )
13084.                                  do
13089.                                     $I_L13089_250 = 0
13089.                                     if ( min( n_viewing_level, 8 + 8 * $I_L13089_285 ) + -8 * $I_L13089_285 >= 2 ) then
13089.                                        $I_L13089_313 = 0
13089. !dir$ shortloop16
13089. !dir$ blocking_size( 8, 8 )
13089.                                        do
13097.                                           $I_L13097_231 = 0
13097. !dir$ ivdep
13097. !dir$ loop_info (automatic) cache_nt( radiance )
13097. !dir$ blocking_size( 256, 256 )
13097.                                           do
13098.                                              radiance(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + 8 * $I_L13089_285 + 2 * $I_L13089_313, 1 + 4 * $I_L13084_292 + 2 * $I_L13084_322) = radiance(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + 8 * $I_L13089_285 + 2 * $I_L13089_313, 1 + 4 * $I_L13084_292 + 2 * $I_L13084_322) + euler_factor * azim_factor(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + 4 * $I_L13084_292 + 2 * $I_L13084_322) * c_ylm(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + 8 * $I_L13089_285 + 2 * $I_L13089_313, 1 + ls_trunc + -ms) * up_lm(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + ls_trunc + -ms, 1 + 4 * $I_L13084_292 + 2 * $I_L13084_322)
13098.                                              radiance(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + 8 * $I_L13089_285 + 2 * $I_L13089_313, 2 + 4 * $I_L13084_292 + 2 * $I_L13084_322) = radiance(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + 8 * $I_L13089_285 + 2 * $I_L13089_313, 2 + 4 * $I_L13084_292 + 2 * $I_L13084_322) + euler_factor * azim_factor(1 + $I_L13097_231 + 256 * $I_L13097_273, 2 + 4 * $I_L13084_292 + 2 * $I_L13084_322) * c_ylm(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + 8 * $I_L13089_285 + 2 * $I_L13089_313, 1 + ls_trunc + -ms) * up_lm(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + ls_trunc + -ms, 2 + 4 * $I_L13084_292 + 2 * $I_L13084_322)
13098.                                              radiance(1 + $I_L13097_231 + 256 * $I_L13097_273, 2 + 8 * $I_L13089_285 + 2 * $I_L13089_313, 1 + 4 * $I_L13084_292 + 2 * $I_L13084_322) = radiance(1 + $I_L13097_231 + 256 * $I_L13097_273, 2 + 8 * $I_L13089_285 + 2 * $I_L13089_313, 1 + 4 * $I_L13084_292 + 2 * $I_L13084_322) + euler_factor * azim_factor(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + 4 * $I_L13084_292 + 2 * $I_L13084_322) * c_ylm(1 + $I_L13097_231 + 256 * $I_L13097_273, 2 + 8 * $I_L13089_285 + 2 * $I_L13089_313, 1 + ls_trunc + -ms) * up_lm(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + ls_trunc + -ms, 1 + 4 * $I_L13084_292 + 2 * $I_L13084_322)
13098.                                              radiance(1 + $I_L13097_231 + 256 * $I_L13097_273, 2 + 8 * $I_L13089_285 + 2 * $I_L13089_313, 2 + 4 * $I_L13084_292 + 2 * $I_L13084_322) = radiance(1 + $I_L13097_231 + 256 * $I_L13097_273, 2 + 8 * $I_L13089_285 + 2 * $I_L13089_313, 2 + 4 * $I_L13084_292 + 2 * $I_L13084_322) + euler_factor * azim_factor(1 + $I_L13097_231 + 256 * $I_L13097_273, 2 + 4 * $I_L13084_292 + 2 * $I_L13084_322) * c_ylm(1 + $I_L13097_231 + 256 * $I_L13097_273, 2 + 8 * $I_L13089_285 + 2 * $I_L13089_313, 1 + ls_trunc + -ms) * up_lm(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + ls_trunc + -ms, 2 + 4 * $I_L13084_292 + 2 * $I_L13084_322)
13097.                                              $I_L13097_231 = 1 + $I_L13097_231
13097.                                              if ( $I_L13097_231 >= min( n_profile, 256 + 256 * $I_L13097_273 ) + -256 * $I_L13097_273 ) exit
13097.                                           enddo
13089.                                           $I_L13089_313 = 1 + $I_L13089_313
13089.                                           if ( $I_L13089_313 >= _rsh( min( n_viewing_level, 8 + 8 * $I_L13089_285 ) + -8 * $I_L13089_285, 1 ) ) exit
13089.                                        enddo
13089.                                        $I_L13089_250 = and( 0xfffffffffffffffeUL, min( n_viewing_level, 8 + 8 * $I_L13089_285 ) + -8 * $I_L13089_285 )
13089.                                     endif
13089.                                     if ( $I_L13089_250 < min( n_viewing_level, 8 + 8 * $I_L13089_285 ) + -8 * $I_L13089_285 ) then
13097.                                        $I_L13097_231 = 0
13097. !dir$ ivdep
13097. !dir$ loop_info (automatic) cache_nt( radiance )
13097. !dir$ blocking_size( 256, 256 )
13097.                                        do
13098.                                           radiance(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + $I_L13089_250 + 8 * $I_L13089_285, 1 + 4 * $I_L13084_292 + 2 * $I_L13084_322) = radiance(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + $I_L13089_250 + 8 * $I_L13089_285, 1 + 4 * $I_L13084_292 + 2 * $I_L13084_322) + euler_factor * azim_factor(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + 4 * $I_L13084_292 + 2 * $I_L13084_322) * c_ylm(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + $I_L13089_250 + 8 * $I_L13089_285, 1 + ls_trunc + -ms) * up_lm(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + ls_trunc + -ms, 1 + 4 * $I_L13084_292 + 2 * $I_L13084_322)
13098.                                           radiance(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + $I_L13089_250 + 8 * $I_L13089_285, 2 + 4 * $I_L13084_292 + 2 * $I_L13084_322) = radiance(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + $I_L13089_250 + 8 * $I_L13089_285, 2 + 4 * $I_L13084_292 + 2 * $I_L13084_322) + euler_factor * azim_factor(1 + $I_L13097_231 + 256 * $I_L13097_273, 2 + 4 * $I_L13084_292 + 2 * $I_L13084_322) * c_ylm(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + $I_L13089_250 + 8 * $I_L13089_285, 1 + ls_trunc + -ms) * up_lm(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + ls_trunc + -ms, 2 + 4 * $I_L13084_292 + 2 * $I_L13084_322)
13097.                                           $I_L13097_231 = 1 + $I_L13097_231
13097.                                           if ( $I_L13097_231 >= min( n_profile, 256 + 256 * $I_L13097_273 ) + -256 * $I_L13097_273 ) exit
13097.                                        enddo
13097.                                     endif
13084.                                     $I_L13084_322 = 1 + $I_L13084_322
13101.                                     if ( $I_L13084_322 >= _rsh( min( n_direction, 4 + 4 * $I_L13084_292 ) + -4 * $I_L13084_292, 1 ) ) exit
13101.                                  enddo
13084.                                  $I_L13084_266 = and( 0xfffffffffffffffeUL, min( n_direction, 4 + 4 * $I_L13084_292 ) + -4 * $I_L13084_292 )
13084.                               endif
13084.                               if ( $I_L13084_266 < min( n_direction, 4 + 4 * $I_L13084_292 ) + -4 * $I_L13084_292 ) then
13089.                                  $I_L13089_250 = 0
13089.                                  if ( min( n_viewing_level, 8 + 8 * $I_L13089_285 ) + -8 * $I_L13089_285 >= 2 ) then
13089.                                     $I_L13089_315 = 0
13089. !dir$ shortloop16
13089. !dir$ blocking_size( 8, 8 )
13089.                                     do
13097.                                        $I_L13097_231 = 0
13097. !dir$ ivdep
13097. !dir$ loop_info (automatic) cache_nt( radiance )
13097. !dir$ blocking_size( 256, 256 )
13097.                                        do
13098.                                           radiance(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + 8 * $I_L13089_285 + 2 * $I_L13089_315, 1 + $I_L13084_266 + 4 * $I_L13084_292) = radiance(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + 8 * $I_L13089_285 + 2 * $I_L13089_315, 1 + $I_L13084_266 + 4 * $I_L13084_292) + euler_factor * azim_factor(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + $I_L13084_266 + 4 * $I_L13084_292) * up_lm(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + ls_trunc + -ms, 1 + $I_L13084_266 + 4 * $I_L13084_292) * c_ylm(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + 8 * $I_L13089_285 + 2 * $I_L13089_315, 1 + ls_trunc + -ms)
13098.                                           radiance(1 + $I_L13097_231 + 256 * $I_L13097_273, 2 + 8 * $I_L13089_285 + 2 * $I_L13089_315, 1 + $I_L13084_266 + 4 * $I_L13084_292) = radiance(1 + $I_L13097_231 + 256 * $I_L13097_273, 2 + 8 * $I_L13089_285 + 2 * $I_L13089_315, 1 + $I_L13084_266 + 4 * $I_L13084_292) + euler_factor * azim_factor(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + $I_L13084_266 + 4 * $I_L13084_292) * up_lm(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + ls_trunc + -ms, 1 + $I_L13084_266 + 4 * $I_L13084_292) * c_ylm(1 + $I_L13097_231 + 256 * $I_L13097_273, 2 + 8 * $I_L13089_285 + 2 * $I_L13089_315, 1 + ls_trunc + -ms)
13097.                                           $I_L13097_231 = 1 + $I_L13097_231
13097.                                           if ( $I_L13097_231 >= min( n_profile, 256 + 256 * $I_L13097_273 ) + -256 * $I_L13097_273 ) exit
13097.                                        enddo
13089.                                        $I_L13089_315 = 1 + $I_L13089_315
13089.                                        if ( $I_L13089_315 >= _rsh( min( n_viewing_level, 8 + 8 * $I_L13089_285 ) + -8 * $I_L13089_285, 1 ) ) exit
13089.                                     enddo
13089.                                     $I_L13089_250 = and( 0xfffffffffffffffeUL, min( n_viewing_level, 8 + 8 * $I_L13089_285 ) + -8 * $I_L13089_285 )
13089.                                  endif
13089.                                  if ( $I_L13089_250 < min( n_viewing_level, 8 + 8 * $I_L13089_285 ) + -8 * $I_L13089_285 ) then
13097.                                     $I_L13097_231 = 0
13097. !dir$ ivdep
13097. !dir$ loop_info (automatic) cache_nt( radiance )
13097. !dir$ blocking_size( 256, 256 )
13097.                                     do
13098.                                        radiance(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + $I_L13089_250 + 8 * $I_L13089_285, 1 + $I_L13084_266 + 4 * $I_L13084_292) = radiance(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + $I_L13089_250 + 8 * $I_L13089_285, 1 + $I_L13084_266 + 4 * $I_L13084_292) + euler_factor * azim_factor(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + $I_L13084_266 + 4 * $I_L13084_292) * c_ylm(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + $I_L13089_250 + 8 * $I_L13089_285, 1 + ls_trunc + -ms) * up_lm(1 + $I_L13097_231 + 256 * $I_L13097_273, 1 + ls_trunc + -ms, 1 + $I_L13084_266 + 4 * $I_L13084_292)
13097.                                        $I_L13097_231 = 1 + $I_L13097_231
13097.                                        if ( $I_L13097_231 >= min( n_profile, 256 + 256 * $I_L13097_273 ) + -256 * $I_L13097_273 ) exit
13097.                                     enddo
13097.                                  endif
13097.                               endif
13097.                               $I_L13097_273 = 1 + $I_L13097_273
13097.                               if ( $I_L13097_273 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
13097.                            enddo
13089.                            $I_L13089_285 = 1 + $I_L13089_285
13102.                            if ( $I_L13089_285 >= 1 + max( 0, -1 + _rsh( 7 + n_viewing_level, 3 ) ) ) exit
13102.                         enddo
13084.                         $I_L13084_292 = 1 + $I_L13084_292
13084.                         if ( $I_L13084_292 >= 1 + max( 0, -1 + _rsh( 3 + n_direction, 2 ) ) ) exit
13084.                      enddo
13084.                   endif
13084.                endif
13084.             endif
13084.          endif
13107.       else if ( i_sph_algorithm == 2 ) then
13109.          if ( n_direction > 0 ) then
13110.             if ( n_viewing_level > 0 ) then
13111.                if ( n_equation > 0 ) then
13112.                   if ( n_profile > 0 ) then
13109.                      $I_L13109_304 = 0
13109.                      do
13110.                         $I_L13110_296 = 0
13110.                         do
13111.                            $I_L13111_294 = 0
13111.                            do
13112.                               $I_L13112_278 = 0
13112.                               do
13109.                                  $I_L13109_275 = 0
13109.                                  if ( min( n_direction, 2 + 2 * $I_L13109_304 ) + -2 * $I_L13109_304 >= 2 ) then
13109.                                     $I_L13109_328 = 0
13109. !dir$ shortloop16
13109. !dir$ blocking_size( 2, 2 )
13109.                                     do
13110.                                        $I_L13110_256 = 0
13110.                                        if ( min( n_viewing_level, 2 + 2 * $I_L13110_296 ) + -2 * $I_L13110_296 >= 2 ) then
13110.                                           $I_L13110_324 = 0
13110. !dir$ shortloop16
13110. !dir$ blocking_size( 2, 2 )
13110.                                           do
13111.                                              $I_L13111_253 = 0
13111. !dir$ shortloop16
13111. !dir$ blocking_size( 2, 2 )
13111.                                              do
13112.                                                 $I_L13112_210 = 0
13112. !dir$ ivdep
13112. !dir$ loop_info (automatic) cache_nt( weight_u )
13112. !dir$ blocking_size( 256, 256 )
13112.                                                 do
13113.                                                    radiance(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + 2 * $I_L13110_296 + 2 * $I_L13110_324, 1 + 2 * $I_L13109_304 + 2 * $I_L13109_328) = radiance(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + 2 * $I_L13110_296 + 2 * $I_L13110_324, 1 + 2 * $I_L13109_304 + 2 * $I_L13109_328) + azim_factor(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + 2 * $I_L13109_304 + 2 * $I_L13109_328) * upm(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13111_253 + 2 * $I_L13111_294) * weight_u(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + 2 * $I_L13110_296 + 2 * $I_L13110_324, 1 + 2 * $I_L13109_304 + 2 * $I_L13109_328, 1 + $I_L13111_253 + 2 * $I_L13111_294)
13113.                                                    radiance(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + 2 * $I_L13110_296 + 2 * $I_L13110_324, 2 + 2 * $I_L13109_304 + 2 * $I_L13109_328) = radiance(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + 2 * $I_L13110_296 + 2 * $I_L13110_324, 2 + 2 * $I_L13109_304 + 2 * $I_L13109_328) + azim_factor(1 + $I_L13112_210 + 256 * $I_L13112_278, 2 + 2 * $I_L13109_304 + 2 * $I_L13109_328) * upm(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13111_253 + 2 * $I_L13111_294) * weight_u(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + 2 * $I_L13110_296 + 2 * $I_L13110_324, 2 + 2 * $I_L13109_304 + 2 * $I_L13109_328, 1 + $I_L13111_253 + 2 * $I_L13111_294)
13113.                                                    radiance(1 + $I_L13112_210 + 256 * $I_L13112_278, 2 + 2 * $I_L13110_296 + 2 * $I_L13110_324, 1 + 2 * $I_L13109_304 + 2 * $I_L13109_328) = radiance(1 + $I_L13112_210 + 256 * $I_L13112_278, 2 + 2 * $I_L13110_296 + 2 * $I_L13110_324, 1 + 2 * $I_L13109_304 + 2 * $I_L13109_328) + azim_factor(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + 2 * $I_L13109_304 + 2 * $I_L13109_328) * upm(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13111_253 + 2 * $I_L13111_294) * weight_u(1 + $I_L13112_210 + 256 * $I_L13112_278, 2 + 2 * $I_L13110_296 + 2 * $I_L13110_324, 1 + 2 * $I_L13109_304 + 2 * $I_L13109_328, 1 + $I_L13111_253 + 2 * $I_L13111_294)
13113.                                                    radiance(1 + $I_L13112_210 + 256 * $I_L13112_278, 2 + 2 * $I_L13110_296 + 2 * $I_L13110_324, 2 + 2 * $I_L13109_304 + 2 * $I_L13109_328) = radiance(1 + $I_L13112_210 + 256 * $I_L13112_278, 2 + 2 * $I_L13110_296 + 2 * $I_L13110_324, 2 + 2 * $I_L13109_304 + 2 * $I_L13109_328) + azim_factor(1 + $I_L13112_210 + 256 * $I_L13112_278, 2 + 2 * $I_L13109_304 + 2 * $I_L13109_328) * upm(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13111_253 + 2 * $I_L13111_294) * weight_u(1 + $I_L13112_210 + 256 * $I_L13112_278, 2 + 2 * $I_L13110_296 + 2 * $I_L13110_324, 2 + 2 * $I_L13109_304 + 2 * $I_L13109_328, 1 + $I_L13111_253 + 2 * $I_L13111_294)
13112.                                                    $I_L13112_210 = 1 + $I_L13112_210
13112.                                                    if ( $I_L13112_210 >= min( n_profile, 256 + 256 * $I_L13112_278 ) + -256 * $I_L13112_278 ) exit
13112.                                                 enddo
13111.                                                 $I_L13111_253 = 1 + $I_L13111_253
13111.                                                 if ( $I_L13111_253 >= min( n_equation, 2 + 2 * $I_L13111_294 ) + -2 * $I_L13111_294 ) exit
13111.                                              enddo
13110.                                              $I_L13110_324 = 1 + $I_L13110_324
13116.                                              if ( $I_L13110_324 >= _rsh( min( n_viewing_level, 2 + 2 * $I_L13110_296 ) + -2 * $I_L13110_296, 1 ) ) exit
13116.                                           enddo
13110.                                           $I_L13110_256 = and( 0xfffffffffffffffeUL, min( n_viewing_level, 2 + 2 * $I_L13110_296 ) + -2 * $I_L13110_296 )
13110.                                        endif
13110.                                        if ( $I_L13110_256 < min( n_viewing_level, 2 + 2 * $I_L13110_296 ) + -2 * $I_L13110_296 ) then
13111.                                           $I_L13111_253 = 0
13111. !dir$ shortloop16
13111. !dir$ blocking_size( 2, 2 )
13111.                                           do
13112.                                              $I_L13112_210 = 0
13112. !dir$ ivdep
13112. !dir$ loop_info (automatic) cache_nt( weight_u )
13112. !dir$ blocking_size( 256, 256 )
13112.                                              do
13113.                                                 radiance(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13110_256 + 2 * $I_L13110_296, 1 + 2 * $I_L13109_304 + 2 * $I_L13109_328) = radiance(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13110_256 + 2 * $I_L13110_296, 1 + 2 * $I_L13109_304 + 2 * $I_L13109_328) + azim_factor(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + 2 * $I_L13109_304 + 2 * $I_L13109_328) * upm(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13111_253 + 2 * $I_L13111_294) * weight_u(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13110_256 + 2 * $I_L13110_296, 1 + 2 * $I_L13109_304 + 2 * $I_L13109_328, 1 + $I_L13111_253 + 2 * $I_L13111_294)
13113.                                                 radiance(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13110_256 + 2 * $I_L13110_296, 2 + 2 * $I_L13109_304 + 2 * $I_L13109_328) = radiance(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13110_256 + 2 * $I_L13110_296, 2 + 2 * $I_L13109_304 + 2 * $I_L13109_328) + azim_factor(1 + $I_L13112_210 + 256 * $I_L13112_278, 2 + 2 * $I_L13109_304 + 2 * $I_L13109_328) * upm(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13111_253 + 2 * $I_L13111_294) * weight_u(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13110_256 + 2 * $I_L13110_296, 2 + 2 * $I_L13109_304 + 2 * $I_L13109_328, 1 + $I_L13111_253 + 2 * $I_L13111_294)
13112.                                                 $I_L13112_210 = 1 + $I_L13112_210
13112.                                                 if ( $I_L13112_210 >= min( n_profile, 256 + 256 * $I_L13112_278 ) + -256 * $I_L13112_278 ) exit
13112.                                              enddo
13111.                                              $I_L13111_253 = 1 + $I_L13111_253
13111.                                              if ( $I_L13111_253 >= min( n_equation, 2 + 2 * $I_L13111_294 ) + -2 * $I_L13111_294 ) exit
13111.                                           enddo
13111.                                        endif
13109.                                        $I_L13109_328 = 1 + $I_L13109_328
13109.                                        if ( $I_L13109_328 >= _rsh( min( n_direction, 2 + 2 * $I_L13109_304 ) + -2 * $I_L13109_304, 1 ) ) exit
13109.                                     enddo
13109.                                     $I_L13109_275 = and( 0xfffffffffffffffeUL, min( n_direction, 2 + 2 * $I_L13109_304 ) + -2 * $I_L13109_304 )
13109.                                  endif
13109.                                  if ( $I_L13109_275 < min( n_direction, 2 + 2 * $I_L13109_304 ) + -2 * $I_L13109_304 ) then
13110.                                     $I_L13110_256 = 0
13110.                                     if ( min( n_viewing_level, 2 + 2 * $I_L13110_296 ) + -2 * $I_L13110_296 >= 2 ) then
13110.                                        $I_L13110_326 = 0
13110. !dir$ shortloop16
13110. !dir$ blocking_size( 2, 2 )
13110.                                        do
13111.                                           $I_L13111_253 = 0
13111. !dir$ shortloop16
13111. !dir$ blocking_size( 2, 2 )
13111.                                           do
13112.                                              $I_L13112_210 = 0
13112. !dir$ ivdep
13112. !dir$ loop_info (automatic) cache_nt( weight_u )
13112. !dir$ blocking_size( 256, 256 )
13112.                                              do
13113.                                                 radiance(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + 2 * $I_L13110_296 + 2 * $I_L13110_326, 1 + $I_L13109_275 + 2 * $I_L13109_304) = radiance(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + 2 * $I_L13110_296 + 2 * $I_L13110_326, 1 + $I_L13109_275 + 2 * $I_L13109_304) + azim_factor(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13109_275 + 2 * $I_L13109_304) * upm(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13111_253 + 2 * $I_L13111_294) * weight_u(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + 2 * $I_L13110_296 + 2 * $I_L13110_326, 1 + $I_L13109_275 + 2 * $I_L13109_304, 1 + $I_L13111_253 + 2 * $I_L13111_294)
13113.                                                 radiance(1 + $I_L13112_210 + 256 * $I_L13112_278, 2 + 2 * $I_L13110_296 + 2 * $I_L13110_326, 1 + $I_L13109_275 + 2 * $I_L13109_304) = radiance(1 + $I_L13112_210 + 256 * $I_L13112_278, 2 + 2 * $I_L13110_296 + 2 * $I_L13110_326, 1 + $I_L13109_275 + 2 * $I_L13109_304) + azim_factor(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13109_275 + 2 * $I_L13109_304) * upm(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13111_253 + 2 * $I_L13111_294) * weight_u(1 + $I_L13112_210 + 256 * $I_L13112_278, 2 + 2 * $I_L13110_296 + 2 * $I_L13110_326, 1 + $I_L13109_275 + 2 * $I_L13109_304, 1 + $I_L13111_253 + 2 * $I_L13111_294)
13112.                                                 $I_L13112_210 = 1 + $I_L13112_210
13112.                                                 if ( $I_L13112_210 >= min( n_profile, 256 + 256 * $I_L13112_278 ) + -256 * $I_L13112_278 ) exit
13112.                                              enddo
13111.                                              $I_L13111_253 = 1 + $I_L13111_253
13111.                                              if ( $I_L13111_253 >= min( n_equation, 2 + 2 * $I_L13111_294 ) + -2 * $I_L13111_294 ) exit
13111.                                           enddo
13110.                                           $I_L13110_326 = 1 + $I_L13110_326
13116.                                           if ( $I_L13110_326 >= _rsh( min( n_viewing_level, 2 + 2 * $I_L13110_296 ) + -2 * $I_L13110_296, 1 ) ) exit
13116.                                        enddo
13110.                                        $I_L13110_256 = and( 0xfffffffffffffffeUL, min( n_viewing_level, 2 + 2 * $I_L13110_296 ) + -2 * $I_L13110_296 )
13110.                                     endif
13110.                                     if ( $I_L13110_256 < min( n_viewing_level, 2 + 2 * $I_L13110_296 ) + -2 * $I_L13110_296 ) then
13111.                                        $I_L13111_253 = 0
13111. !dir$ shortloop16
13111. !dir$ blocking_size( 2, 2 )
13111.                                        do
13112.                                           $I_L13112_210 = 0
13112. !dir$ ivdep
13112. !dir$ loop_info (automatic) cache_nt( weight_u )
13112. !dir$ blocking_size( 256, 256 )
13112.                                           do
13113.                                              radiance(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13110_256 + 2 * $I_L13110_296, 1 + $I_L13109_275 + 2 * $I_L13109_304) = radiance(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13110_256 + 2 * $I_L13110_296, 1 + $I_L13109_275 + 2 * $I_L13109_304) + azim_factor(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13109_275 + 2 * $I_L13109_304) * upm(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13111_253 + 2 * $I_L13111_294) * weight_u(1 + $I_L13112_210 + 256 * $I_L13112_278, 1 + $I_L13110_256 + 2 * $I_L13110_296, 1 + $I_L13109_275 + 2 * $I_L13109_304, 1 + $I_L13111_253 + 2 * $I_L13111_294)
13112.                                              $I_L13112_210 = 1 + $I_L13112_210
13112.                                              if ( $I_L13112_210 >= min( n_profile, 256 + 256 * $I_L13112_278 ) + -256 * $I_L13112_278 ) exit
13112.                                           enddo
13111.                                           $I_L13111_253 = 1 + $I_L13111_253
13111.                                           if ( $I_L13111_253 >= min( n_equation, 2 + 2 * $I_L13111_294 ) + -2 * $I_L13111_294 ) exit
13111.                                        enddo
13111.                                     endif
13111.                                  endif
13112.                                  $I_L13112_278 = 1 + $I_L13112_278
13117.                                  if ( $I_L13112_278 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
13117.                               enddo
13111.                               $I_L13111_294 = 1 + $I_L13111_294
13111.                               if ( $I_L13111_294 >= 1 + max( 0, -1 + _rsh( 1 + n_equation, 1 ) ) ) exit
13111.                            enddo
13110.                            $I_L13110_296 = 1 + $I_L13110_296
13118.                            if ( $I_L13110_296 >= 1 + max( 0, -1 + _rsh( 1 + n_viewing_level, 1 ) ) ) exit
13118.                         enddo
13109.                         $I_L13109_304 = 1 + $I_L13109_304
13109.                         if ( $I_L13109_304 >= 1 + max( 0, -1 + _rsh( 1 + n_direction, 1 ) ) ) exit
13109.                      enddo
13109.                   endif
13109.                endif
13109.             endif
13109.          endif
13109.       endif
13126.       return
13126.       end
13126.       
13360.       
13360.       subroutine read_block_int
13373.       $l_block_read_S0 = .false.
13377.       if ( i_type == 0 ) then
13378.          if ( i_subtype == 0 ) then
13379.             if ( i_version == 1 ) then
13380.                call read_block_0_0_1_int
13381.                $l_block_read_S0 = .true.
13381.             endif
13381.          endif
13381.          goto 10
13384.       else if ( i_type == 1 ) then
13385.          if ( i_subtype == 0 ) then
13386.             if ( i_version == 0 ) then
13387.                call read_block_1_0_0_int
13388.                $l_block_read_S0 = .true.
13388.             endif
13388.          endif
13388.          goto 10
13388.       else if ( i_type == 2 ) then
13392.          if ( i_subtype /= 0 ) then
13392.             goto 10
13392.          else if ( i_version == 0 ) then
13394.             call read_block_2_0_0_int
13395.             if ( seat_ierr == 0 ) then
13396.                $l_block_read_S0 = .true.
13396.                goto 10
13396.             endif
13396.          else
13396.             goto 10
13396.          endif
13396.       else if ( i_type == 3 ) then
13400.          if ( i_subtype /= 0 ) then
13400.             goto 10
13400.          else if ( i_version == 0 ) then
13402.             call read_block_3_0_0_int
13403.             if ( seat_ierr == 0 ) then
13404.                $l_block_read_S0 = .true.
13404.                goto 10
13404.             endif
13404.          else
13404.             goto 10
13404.          endif
13404.       else if ( i_type == 4 ) then
13408.          if ( i_subtype /= 0 ) then
13408.             goto 10
13408.          else if ( i_version == 0 ) then
13410.             call read_block_4_0_0_int
13411.             if ( seat_ierr == 0 ) then
13412.                $l_block_read_S0 = .true.
13412.                goto 10
13412.             endif
13412.          else
13412.             goto 10
13412.          endif
13412.       else if ( i_type == 5 ) then
13416.          if ( i_subtype /= 0 ) then
13416.             goto 10
13416.          else if ( i_version == 0 ) then
13418.             call read_block_5_0_0_int
13419.             if ( seat_ierr == 0 ) then
13420.                $l_block_read_S0 = .true.
13420.                goto 10
13420.             endif
13420.          else
13420.             goto 10
13420.          endif
13420.       else if ( i_type == 6 ) then
13424.          if ( i_subtype /= 0 ) then
13424.             goto 10
13424.          else if ( i_version == 0 ) then
13426.             call read_block_6_0_0_int
13427.             if ( seat_ierr == 0 ) then
13428.                $l_block_read_S0 = .true.
13428.                goto 10
13428.             endif
13428.          else
13428.             goto 10
13428.          endif
13428.       else if ( i_type == 7 ) then
13432.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$349,  _substr(t$348,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Warning: Obsolete block.', 0x800600000000L ), _iotype( 'Surface characteristics must be specified using a .surf file:', 0x800600000000L ), _iotype( 'this block will be ignored.', 0x800600000000L ) ) )
13432.          goto 10
13432.       else if ( i_type == 8 ) then
13438.          if ( i_subtype /= 0 ) then
13438.             goto 10
13438.          else if ( i_version == 0 ) then
13440.             call read_block_8_0_0_int
13441.             if ( seat_ierr == 0 ) then
13442.                $l_block_read_S0 = .true.
13442.                goto 10
13442.             endif
13442.          else
13442.             goto 10
13442.          endif
13442.       else if ( i_type == 9 ) then
13446.          if ( i_subtype /= 0 ) then
13446.             goto 10
13446.          else if ( i_version == 0 ) then
13448.             call read_block_9_0_0_int
13449.             if ( seat_ierr == 0 ) then
13450.                $l_block_read_S0 = .true.
13450.                goto 10
13450.             endif
13450.          else
13450.             goto 10
13450.          endif
13450.       else if ( i_type == 10 ) then
13454.          if ( i_subtype /= 0 ) then
13454.             goto 10
13454.          else if ( i_version == 0 ) then
13456.             call read_block_10_0_0_int
13457.             if ( seat_ierr == 0 ) then
13458.                $l_block_read_S0 = .true.
13458.                goto 10
13458.             endif
13458.          else if ( i_version == 1 ) then
13462.             call read_block_10_0_1_int
13463.             if ( seat_ierr == 0 ) then
13464.                $l_block_read_S0 = .true.
13464.                goto 10
13464.             endif
13464.          else if ( i_version == 2 ) then
13469.             call read_block_10_0_2_int
13470.             if ( seat_ierr == 0 ) then
13471.                $l_block_read_S0 = .true.
13471.                goto 10
13471.             endif
13471.          else
13471.             goto 10
13471.          endif
13471.       else if ( i_type /= 11 ) then
13501.          if ( i_type == 12 ) then
13502.             if ( i_subtype == 0 ) then
13503.                if ( i_version == 0 ) then
13504.                   call read_block_12_0_0_int
13505.                   $l_block_read_S0 = .true.
13506.                else if ( i_version == 1 ) then
13507.                   call read_block_12_0_1_int
13508.                   $l_block_read_S0 = .true.
13508.                else if ( i_version == 2 ) then
13510.                   call read_block_12_0_2_int
13511.                   $l_block_read_S0 = .true.
13511.                endif
13511.             endif
13514.          else if ( i_type == 14 ) then
13515.             if ( i_subtype == 0 ) then
13516.                if ( i_version == 0 ) then
13517.                   call read_block_14_0_0_int
13518.                   $l_block_read_S0 = .true.
13518.                endif
13518.             endif
13518.          endif
13518.          goto 10
13518.       else if ( i_subtype == 0 ) then
13477.          if ( i_version == 1 ) then
13478.             call read_block_11_0_1_int
13479.             if ( seat_ierr == 0 ) then
13480.                $l_block_read_S0 = .true.
13480.                goto 10
13480.             endif
13481.          else if ( i_version == 2 ) then
13482.             call read_block_11_0_2_int
13483.             if ( seat_ierr == 0 ) then
13484.                $l_block_read_S0 = .true.
13484.                goto 10
13484.             endif
13484.          else
13484.             goto 10
13484.          endif
13484.       else if ( i_subtype /= 1 ) then
13484.          goto 10
13484.       else if ( i_version == 0 ) then
13488.          call read_block_11_1_0_int
13489.          if ( seat_ierr == 0 ) then
13490.             $l_block_read_S0 = .true.
13490.             goto 10
13490.          endif
13490.       else if ( i_version == 1 ) then
13492.          call read_block_11_1_1_int
13493.          if ( seat_ierr == 0 ) then
13494.             $l_block_read_S0 = .true.
13494.             goto 10
13494.          endif
13494.       else if ( i_version == 2 ) then
13496.          call read_block_11_1_2_int
13497.          if ( seat_ierr == 0 ) then
13498.             $l_block_read_S0 = .true.
13498.             goto 10
13498.          endif
13498.       else
13498.    10    continue
13523.          if ( seat_ierr == 0 ) then
13528.             if ( $l_block_read_S0 == .false. ) then
13530.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$351,  _substr(t$350,1,33), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Warning: This sort of block is not permitted.', 0x800600000000L ), _iotype( 'Type', 0x800600000000L ), _iotype( ' = ', 0x800600000000L ), _iotype( i_type, 0x2000200000000L ), _iotype( 'Subtype', 0x800600000000L ), _iotype( ' = ', 0x800600000000L ), _iotype( i_subtype, 0x2000200000000L ), _iotype( 'Version', 0x800600000000L ), _iotype( ' = ', 0x800600000000L ), _iotype( i_version, 0x2000200000000L ) ) )
13530.                do
13537.                   $Unit_temp_O0 = iu_spc
13537.                   _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$353,  _substr(t$352,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(line_temp,1,80), 0x800600000000L ) ) )
13538.                   if (  _substr(line_temp,1,4) == '*END' ) exit
13538.                enddo
13539.                t$6170 = iu_spc
13539.                t$6169 = __back( t$6170, 0, 0, 0x100000000000000L, 0, 0 )
13539.             endif
13539.          endif
13539.       endif
13548.       return
13548.       end
13548.       
13553.       
13553.       subroutine read_block_0_0_1_int
13566.       $Unit_temp_O0 = iu_spc
13566.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13570.       $Unit_temp_O1 = iu_spc
13570.       t$6171 = _fread( _clist( 0, 1, 3, $Unit_temp_O1, ios, Null_Arg, t$355,  _substr(t$354,1,9), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O16, 0x2000200000000L ) ) )
13570.       seat_spectrum%basic%n_band = $IOitem_O16
13571.       if ( ios /= 0 ) then
13572.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$357,  _substr(t$356,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_0_0_1', 0x800600000000L ) ) )
13574.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'Number of bands could not be read.', 0x800600000000L ) ) )
13575.          seat_ierr = 1
13575.       else
13578.          (nd_band%base_addr)(0) = $IOitem_O16
13579.          seat_spectrum%basic%n_band_exclude%header%a_contig = 1
13579.          seat_spectrum%basic%n_band_exclude%dim_1%LB = 1
13579.          seat_spectrum%basic%n_band_exclude%dim_1%EX = _zla( 0, $IOitem_O16 )
13579.          seat_spectrum%basic%n_band_exclude%dim_1%SM = 1
13579.          $_allo_P0(0) = 0x1000000000001L
13579.          $_allo_P0(1) = loc( seat_spectrum%basic%n_band_exclude )
13579.          call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
13582.          $F_A33 = $IOitem_O16
13582.          if ( $IOitem_O16 > 0 ) then
13582.             $I_A1 = 0
13582. !dir$ ivdep
13582.             do
13582.                (seat_spectrum%basic%n_band_exclude%base_addr)(1 + $I_A1, 0) = 0
13582.                $I_A1 = 1 + $I_A1
13582.                if ( $I_A1 >= $F_A33 ) exit
13582.             enddo
13582.          endif
13584.          $Unit_temp_O2 = iu_spc
13584.          t$6172 = _fread( _clist( 0, 1, 3, $Unit_temp_O2, ios, Null_Arg, t$359,  _substr(t$358,1,9), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O17, 0x2000200000000L ) ) )
13584.          seat_spectrum%gas%n_absorb = $IOitem_O17
13585.          if ( ios /= 0 ) then
13586.             _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$361,  _substr(t$360,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_0_0_1', 0x800600000000L ) ) )
13588.             _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'Number of absorbers could not be read.', 0x800600000000L ) ) )
13589.             seat_ierr = 1
13589.          else
13592.             (nd_species%base_addr)(0) = $IOitem_O17
13594.             $Unit_temp_O3 = iu_spc
13594.             t$6173 = _fread( _clist( 0, 1, 3, $Unit_temp_O3, ios, Null_Arg, t$363,  _substr(t$362,1,9), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O18, 0x2000200000000L ) ) )
13594.             seat_spectrum%aerosol%n_aerosol = $IOitem_O18
13595.             if ( ios /= 0 ) then
13596.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$365,  _substr(t$364,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_0_0_1', 0x800600000000L ) ) )
13598.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'Number of aerosols could not be read.', 0x800600000000L ) ) )
13599.                seat_ierr = 1
13599.             else
13602.                (nd_aerosol_species%base_addr)(0) = $IOitem_O18
13606.                seat_spectrum%gas%type_absorb%header%a_contig = 1
13606.                seat_spectrum%gas%type_absorb%dim_1%LB = 1
13606.                seat_spectrum%gas%type_absorb%dim_1%EX = ( max( 0, (nd_species%base_addr)(0) ) )
13606.                seat_spectrum%gas%type_absorb%dim_1%SM = 1
13606.                $_allo_P1(0) = 0x1000000000001L
13606.                $_allo_P1(1) = loc( seat_spectrum%gas%type_absorb )
13606.                call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
13607.                $Unit_temp_O4 = iu_spc
13607.                _fread( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, t$367,  _substr(t$366,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13608.                if ( $IOitem_O17 > 0 ) then
13608.                   $I_L13608_8 = 0
13608.                   do
13608.                      i = ( 1 + $I_L13608_8 )
13609.                      $Unit_temp_O5 = iu_spc
13609.                      _fread( _clist( 0, 0, 2, $Unit_temp_O5, Null_Arg, Null_Arg, t$369,  _substr(t$368,1,19), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13609.                      $Unit_temp_O6 = iu_spc
13609.                      _fread( _clist( 0, 0, 0, $Unit_temp_O6, Null_Arg, Null_Arg, t$369,  _substr(t$368,1,19), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( idum, 0x2000200000000L ) ) )
13610.                      if ( ( ( 1 + $I_L13608_8 ) < seat_spectrum%gas%type_absorb%dim_1%LB .or. ( 1 + $I_L13608_8 ) > -1 + seat_spectrum%gas%type_absorb%dim_1%LB + seat_spectrum%gas%type_absorb%dim_1%EX ) /= .false. ) then
13610.                          _substr(t$6178,1,13) = 'Rad_UKMO.f90'
13610.                          _substr(t$6179,1,12) = 'TYPE_ABSORB'
13610.                         t$6180 = seat_spectrum%gas%type_absorb%dim_1%LB
13610.                         t$6181 = -1 + seat_spectrum%gas%type_absorb%dim_1%LB + seat_spectrum%gas%type_absorb%dim_1%EX
13610.                         t$6182 = 1 + $I_L13608_8
13610.                         call _bounds_error(  _substr(t$6178,1,13), 13610,  _substr(t$6179,1,12), 1, t$6180, t$6181, t$6182, t$6177 )
13610.                      endif
13609.                      $Unit_temp_O7 = iu_spc
13609.                      $IOindex_O8 = i
13609.                      _fread( _clist( 0, 0, 0, $Unit_temp_O7, Null_Arg, Null_Arg, t$369,  _substr(t$368,1,19), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%gas%type_absorb%base_addr)($IOindex_O8, 0), 0x2000200000000L ), _iotype(  _substr(chdum,1,1), 0x800600000000L ) ) )
13609.                      $Unit_temp_O9 = iu_spc
13609.                      _fread( _clist( 0, 0, 1, $Unit_temp_O9, Null_Arg, Null_Arg, t$369,  _substr(t$368,1,19), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13611.                      $I_L13608_8 = 1 + $I_L13608_8
13611.                      if ( $I_L13608_8 >= $IOitem_O17 ) exit
13611.                   enddo
13611.                endif
13614.                seat_spectrum%aerosol%type_aerosol%header%a_contig = 1
13614.                seat_spectrum%aerosol%type_aerosol%dim_1%LB = 1
13614.                seat_spectrum%aerosol%type_aerosol%dim_1%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
13614.                seat_spectrum%aerosol%type_aerosol%dim_1%SM = 1
13614.                $_allo_P2(0) = 0x1000000000001L
13614.                $_allo_P2(1) = loc( seat_spectrum%aerosol%type_aerosol )
13614.                call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
13615.                $Unit_temp_O10 = iu_spc
13615.                _fread( _clist( 0, 0, 3, $Unit_temp_O10, Null_Arg, Null_Arg, t$371,  _substr(t$370,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13616.                $t_S3 = seat_spectrum%aerosol%n_aerosol
13616.                i = 1
13616.                if ( seat_spectrum%aerosol%n_aerosol > 0 ) then
13616.                   $I_L13616_10 = 0
13616.                   do
13616.                      i = ( 1 + $I_L13616_10 )
13617.                      $Unit_temp_O11 = iu_spc
13617.                      _fread( _clist( 0, 0, 2, $Unit_temp_O11, Null_Arg, Null_Arg, t$373,  _substr(t$372,1,19), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13617.                      $Unit_temp_O12 = iu_spc
13617.                      _fread( _clist( 0, 0, 0, $Unit_temp_O12, Null_Arg, Null_Arg, t$373,  _substr(t$372,1,19), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( idum, 0x2000200000000L ) ) )
13618.                      if ( ( ( 1 + $I_L13616_10 ) < seat_spectrum%aerosol%type_aerosol%dim_1%LB .or. ( 1 + $I_L13616_10 ) > -1 + seat_spectrum%aerosol%type_aerosol%dim_1%LB + seat_spectrum%aerosol%type_aerosol%dim_1%EX ) /= .false. ) then
13618.                          _substr(t$6187,1,13) = 'Rad_UKMO.f90'
13618.                          _substr(t$6188,1,13) = 'TYPE_AEROSOL'
13618.                         t$6180 = seat_spectrum%aerosol%type_aerosol%dim_1%LB
13618.                         t$6181 = -1 + seat_spectrum%aerosol%type_aerosol%dim_1%LB + seat_spectrum%aerosol%type_aerosol%dim_1%EX
13618.                         t$6182 = 1 + $I_L13616_10
13618.                         call _bounds_error(  _substr(t$6187,1,13), 13618,  _substr(t$6188,1,13), 1, t$6180, t$6181, t$6182, t$6186 )
13618.                      endif
13617.                      $Unit_temp_O13 = iu_spc
13617.                      $IOindex_O14 = i
13617.                      _fread( _clist( 0, 0, 0, $Unit_temp_O13, Null_Arg, Null_Arg, t$373,  _substr(t$372,1,19), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%type_aerosol%base_addr)($IOindex_O14, 0), 0x2000200000000L ), _iotype(  _substr(chdum,1,1), 0x800600000000L ) ) )
13617.                      $Unit_temp_O15 = iu_spc
13617.                      _fread( _clist( 0, 0, 1, $Unit_temp_O15, Null_Arg, Null_Arg, t$373,  _substr(t$372,1,19), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13619.                      $I_L13616_10 = 1 + $I_L13616_10
13619.                      if ( $I_L13616_10 >= $t_S3 ) exit
13619.                   enddo
13619.                   i = ( 1 + $t_S3 )
13619.                endif
13619.             endif
13619.          endif
13619.       endif
13624.       return
13624.       end
13624.       
13629.       
13629.       subroutine read_block_1_0_0_int
13640.       $Unit_temp_O0 = iu_spc
13640.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$375,  _substr(t$374,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13643.       seat_spectrum%basic%wavelength_short%header%a_contig = 1
13643.       seat_spectrum%basic%wavelength_short%dim_1%LB = 1
13643.       seat_spectrum%basic%wavelength_short%dim_1%EX = _zla( 0, (nd_band%base_addr)(0) )
13643.       seat_spectrum%basic%wavelength_short%dim_1%SM = 1
13643.       $_allo_P0(0) = 0x1000000000001L
13643.       $_allo_P0(1) = loc( seat_spectrum%basic%wavelength_short )
13643.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
13644.       seat_spectrum%basic%wavelength_long%header%a_contig = 1
13644.       seat_spectrum%basic%wavelength_long%dim_1%LB = 1
13644.       seat_spectrum%basic%wavelength_long%dim_1%EX = _zla( 0, (nd_band%base_addr)(0) )
13644.       seat_spectrum%basic%wavelength_long%dim_1%SM = 1
13644.       $_allo_P1(0) = 0x1000000000001L
13644.       $_allo_P1(1) = loc( seat_spectrum%basic%wavelength_long )
13644.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
13645.       $t_S1 = seat_spectrum%basic%n_band
13645.       i = 1
13645.       if ( seat_spectrum%basic%n_band > 0 ) then
13645.          $I_L13645_4 = 0
13645.          do
13645.             i = ( 1 + $I_L13645_4 )
13646.             $Unit_temp_O1 = iu_spc
13646.             t$6192 = _fread( _clist( 0, 1, 2, $Unit_temp_O1, ios, Null_Arg, t$377,  _substr(t$376,1,30), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13646.             if ( t$6192 == 0 ) then
13646.                $Unit_temp_O2 = iu_spc
13646.                t$6192 = _fread( _clist( 0, 1, 0, $Unit_temp_O2, ios, Null_Arg, t$377,  _substr(t$376,1,30), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( idum, 0x2000200000000L ) ) )
13646.                if ( t$6192 == 0 ) then
13647.                   if ( ( ( 1 + $I_L13645_4 ) < seat_spectrum%basic%wavelength_short%dim_1%LB .or. ( 1 + $I_L13645_4 ) > -1 + seat_spectrum%basic%wavelength_short%dim_1%LB + seat_spectrum%basic%wavelength_short%dim_1%EX ) /= .false. ) then
13647.                       _substr(t$6194,1,13) = 'Rad_UKMO.f90'
13647.                       _substr(t$6195,1,17) = 'WAVELENGTH_SHORT'
13647.                      t$6196 = seat_spectrum%basic%wavelength_short%dim_1%LB
13647.                      t$6197 = -1 + seat_spectrum%basic%wavelength_short%dim_1%LB + seat_spectrum%basic%wavelength_short%dim_1%EX
13647.                      t$6198 = 1 + $I_L13645_4
13647.                      call _bounds_error(  _substr(t$6194,1,13), 13647,  _substr(t$6195,1,17), 1, t$6196, t$6197, t$6198, t$6193 )
13647.                   endif
13646.                   $Unit_temp_O3 = iu_spc
13646.                   $IOindex_O4 = i
13646.                   t$6192 = _fread( _clist( 0, 1, 0, $Unit_temp_O3, ios, Null_Arg, t$377,  _substr(t$376,1,30), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%basic%wavelength_short%base_addr)($IOindex_O4, 0), 0x804060300000000L ) ) )
13646.                   if ( t$6192 == 0 ) then
13648.                      if ( ( i < seat_spectrum%basic%wavelength_long%dim_1%LB .or. i > -1 + seat_spectrum%basic%wavelength_long%dim_1%LB + seat_spectrum%basic%wavelength_long%dim_1%EX ) /= .false. ) then
13648.                          _substr(t$6200,1,13) = 'Rad_UKMO.f90'
13648.                          _substr(t$6201,1,16) = 'WAVELENGTH_LONG'
13648.                         t$6202 = seat_spectrum%basic%wavelength_long%dim_1%LB
13648.                         t$6203 = -1 + seat_spectrum%basic%wavelength_long%dim_1%LB + seat_spectrum%basic%wavelength_long%dim_1%EX
13648.                         t$6204 = i
13648.                         call _bounds_error(  _substr(t$6200,1,13), 13648,  _substr(t$6201,1,16), 1, t$6202, t$6203, t$6204, t$6199 )
13648.                      endif
13646.                      $Unit_temp_O5 = iu_spc
13646.                      $IOindex_O6 = i
13646.                      t$6192 = _fread( _clist( 0, 1, 0, $Unit_temp_O5, ios, Null_Arg, t$377,  _substr(t$376,1,30), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%basic%wavelength_long%base_addr)($IOindex_O6, 0), 0x804060300000000L ) ) )
13646.                      if ( t$6192 == 0 ) then
13646.                         $Unit_temp_O7 = iu_spc
13646.                         t$6192 = _fread( _clist( 0, 1, 1, $Unit_temp_O7, ios, Null_Arg, t$377,  _substr(t$376,1,30), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13646.                      endif
13646.                   endif
13646.                endif
13646.             endif
13649.             if ( ios /= 0 ) then
13650.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$379,  _substr(t$378,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_1_0_0.', 0x800600000000L ), _iotype( 'Wavelength limits of bands could not be read.', 0x800600000000L ) ) )
13653.                seat_ierr = 1
13653.                goto 10
13653.             endif
13656.             $I_L13645_4 = 1 + $I_L13645_4
13656.             if ( $I_L13645_4 >= $t_S1 ) exit
13656.          enddo
13656.          i = ( 1 + $t_S1 )
13656.       endif
13656.    10 continue
13660.       return
13660.       end
13660.       
13665.       
13665.       subroutine read_block_2_0_0_int
13675.       $Unit_temp_O0 = iu_spc
13675.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$381,  _substr(t$380,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13678.       seat_spectrum%solar%solar_flux_band%header%a_contig = 1
13678.       seat_spectrum%solar%solar_flux_band%dim_1%LB = 1
13678.       seat_spectrum%solar%solar_flux_band%dim_1%EX = _zla( 0, (nd_band%base_addr)(0) )
13678.       seat_spectrum%solar%solar_flux_band%dim_1%SM = 1
13678.       $_allo_P0(0) = 0x1000000000001L
13678.       $_allo_P0(1) = loc( seat_spectrum%solar%solar_flux_band )
13678.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
13679.       $t_S1 = seat_spectrum%basic%n_band
13679.       i = 1
13679.       if ( seat_spectrum%basic%n_band > 0 ) then
13679.          $I_L13679_4 = 0
13679.          do
13679.             i = ( 1 + $I_L13679_4 )
13680.             $Unit_temp_O1 = iu_spc
13680.             t$6208 = _fread( _clist( 0, 1, 2, $Unit_temp_O1, ios, Null_Arg, t$383,  _substr(t$382,1,17), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13680.             if ( t$6208 == 0 ) then
13680.                $Unit_temp_O2 = iu_spc
13680.                t$6208 = _fread( _clist( 0, 1, 0, $Unit_temp_O2, ios, Null_Arg, t$383,  _substr(t$382,1,17), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( idum, 0x2000200000000L ) ) )
13680.                if ( t$6208 == 0 ) then
13681.                   if ( ( ( 1 + $I_L13679_4 ) < seat_spectrum%solar%solar_flux_band%dim_1%LB .or. ( 1 + $I_L13679_4 ) > -1 + seat_spectrum%solar%solar_flux_band%dim_1%LB + seat_spectrum%solar%solar_flux_band%dim_1%EX ) /= .false. ) then
13681.                       _substr(t$6210,1,13) = 'Rad_UKMO.f90'
13681.                       _substr(t$6211,1,16) = 'SOLAR_FLUX_BAND'
13681.                      t$6212 = seat_spectrum%solar%solar_flux_band%dim_1%LB
13681.                      t$6213 = -1 + seat_spectrum%solar%solar_flux_band%dim_1%LB + seat_spectrum%solar%solar_flux_band%dim_1%EX
13681.                      t$6214 = 1 + $I_L13679_4
13681.                      call _bounds_error(  _substr(t$6210,1,13), 13681,  _substr(t$6211,1,16), 1, t$6212, t$6213, t$6214, t$6209 )
13681.                   endif
13680.                   $Unit_temp_O3 = iu_spc
13680.                   $IOindex_O4 = i
13680.                   t$6208 = _fread( _clist( 0, 1, 0, $Unit_temp_O3, ios, Null_Arg, t$383,  _substr(t$382,1,17), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%solar%solar_flux_band%base_addr)($IOindex_O4, 0), 0x804060300000000L ) ) )
13680.                   if ( t$6208 == 0 ) then
13680.                      $Unit_temp_O5 = iu_spc
13680.                      t$6208 = _fread( _clist( 0, 1, 1, $Unit_temp_O5, ios, Null_Arg, t$383,  _substr(t$382,1,17), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13680.                   endif
13680.                endif
13680.             endif
13682.             if ( ios /= 0 ) then
13683.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$385,  _substr(t$384,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: solar spectral data are not correct.', 0x800600000000L ) ) )
13685.                seat_ierr = 1
13685.                goto 10
13685.             endif
13688.             $I_L13679_4 = 1 + $I_L13679_4
13688.             if ( $I_L13679_4 >= $t_S1 ) exit
13688.          enddo
13688.          i = ( 1 + $t_S1 )
13688.       endif
13688.    10 continue
13693.       return
13693.       end
13693.       
13698.       
13698.       subroutine read_block_3_0_0_int
13708.       $Unit_temp_O0 = iu_spc
13708.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$387,  _substr(t$386,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13711.       seat_spectrum%rayleigh%rayleigh_coeff%header%a_contig = 1
13711.       seat_spectrum%rayleigh%rayleigh_coeff%dim_1%LB = 1
13711.       seat_spectrum%rayleigh%rayleigh_coeff%dim_1%EX = _zla( 0, (nd_band%base_addr)(0) )
13711.       seat_spectrum%rayleigh%rayleigh_coeff%dim_1%SM = 1
13711.       $_allo_P0(0) = 0x1000000000001L
13711.       $_allo_P0(1) = loc( seat_spectrum%rayleigh%rayleigh_coeff )
13711.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
13712.       $t_S1 = seat_spectrum%basic%n_band
13712.       i = 1
13712.       if ( seat_spectrum%basic%n_band > 0 ) then
13712.          $I_L13712_4 = 0
13712.          do
13712.             i = ( 1 + $I_L13712_4 )
13713.             $Unit_temp_O1 = iu_spc
13713.             t$6218 = _fread( _clist( 0, 1, 2, $Unit_temp_O1, ios, Null_Arg, t$389,  _substr(t$388,1,17), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13713.             if ( t$6218 == 0 ) then
13713.                $Unit_temp_O2 = iu_spc
13713.                t$6218 = _fread( _clist( 0, 1, 0, $Unit_temp_O2, ios, Null_Arg, t$389,  _substr(t$388,1,17), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( idum, 0x2000200000000L ) ) )
13713.                if ( t$6218 == 0 ) then
13714.                   if ( ( ( 1 + $I_L13712_4 ) < seat_spectrum%rayleigh%rayleigh_coeff%dim_1%LB .or. ( 1 + $I_L13712_4 ) > -1 + seat_spectrum%rayleigh%rayleigh_coeff%dim_1%LB + seat_spectrum%rayleigh%rayleigh_coeff%dim_1%EX ) /= .false. ) then
13714.                       _substr(t$6220,1,13) = 'Rad_UKMO.f90'
13714.                       _substr(t$6221,1,15) = 'RAYLEIGH_COEFF'
13714.                      t$6222 = seat_spectrum%rayleigh%rayleigh_coeff%dim_1%LB
13714.                      t$6223 = -1 + seat_spectrum%rayleigh%rayleigh_coeff%dim_1%LB + seat_spectrum%rayleigh%rayleigh_coeff%dim_1%EX
13714.                      t$6224 = 1 + $I_L13712_4
13714.                      call _bounds_error(  _substr(t$6220,1,13), 13714,  _substr(t$6221,1,15), 1, t$6222, t$6223, t$6224, t$6219 )
13714.                   endif
13713.                   $Unit_temp_O3 = iu_spc
13713.                   $IOindex_O4 = i
13713.                   t$6218 = _fread( _clist( 0, 1, 0, $Unit_temp_O3, ios, Null_Arg, t$389,  _substr(t$388,1,17), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%rayleigh%rayleigh_coeff%base_addr)($IOindex_O4, 0), 0x804060300000000L ) ) )
13713.                   if ( t$6218 == 0 ) then
13713.                      $Unit_temp_O5 = iu_spc
13713.                      t$6218 = _fread( _clist( 0, 1, 1, $Unit_temp_O5, ios, Null_Arg, t$389,  _substr(t$388,1,17), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13713.                   endif
13713.                endif
13713.             endif
13715.             if ( ios /= 0 ) then
13716.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$391,  _substr(t$390,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: rayleigh scattering data are not correct.', 0x800600000000L ) ) )
13718.                seat_ierr = 1
13718.                goto 10
13718.             endif
13721.             $I_L13712_4 = 1 + $I_L13712_4
13721.             if ( $I_L13712_4 >= $t_S1 ) exit
13721.          enddo
13721.          i = ( 1 + $t_S1 )
13721.       endif
13721.    10 continue
13726.       return
13726.       end
13726.       
13731.       
13731.       subroutine read_block_4_0_0_int
13743.       $Unit_temp_O0 = iu_spc
13743.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$393,  _substr(t$392,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13746.       seat_spectrum%gas%n_band_absorb%header%a_contig = 1
13746.       seat_spectrum%gas%n_band_absorb%dim_1%LB = 1
13746.       seat_spectrum%gas%n_band_absorb%dim_1%EX = _zla( 0, (nd_band%base_addr)(0) )
13746.       seat_spectrum%gas%n_band_absorb%dim_1%SM = 1
13746.       $_allo_P0(0) = 0x1000000000001L
13746.       $_allo_P0(1) = loc( seat_spectrum%gas%n_band_absorb )
13746.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
13747.       seat_spectrum%gas%index_absorb%header%a_contig = 1
13747.       seat_spectrum%gas%index_absorb%dim_1%LB = 1
13747.       seat_spectrum%gas%index_absorb%dim_1%EX = _zla( 0, (nd_species%base_addr)(0) )
13747.       seat_spectrum%gas%index_absorb%dim_1%SM = 1
13747.       seat_spectrum%gas%index_absorb%dim_2%LB = 1
13747.       seat_spectrum%gas%index_absorb%dim_2%EX = _zla( 0, (nd_band%base_addr)(0) )
13747.       seat_spectrum%gas%index_absorb%dim_2%SM = _zla( 0, (nd_species%base_addr)(0) )
13747.       $_allo_P1(0) = 0x1000000000001L
13747.       $_allo_P1(1) = loc( seat_spectrum%gas%index_absorb )
13747.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
13748.       $t_S3 = seat_spectrum%basic%n_band
13748.       i = 1
13748.       if ( seat_spectrum%basic%n_band > 0 ) then
13748.          $I_L13748_10 = 0
13748.          do
13748.             i = ( 1 + $I_L13748_10 )
13749.             $Unit_temp_O1 = iu_spc
13749.             t$6228 = _fread( _clist( 0, 1, 2, $Unit_temp_O1, ios, Null_Arg, t$395,  _substr(t$394,1,12), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13749.             if ( t$6228 == 0 ) then
13749.                $Unit_temp_O2 = iu_spc
13749.                t$6228 = _fread( _clist( 0, 1, 0, $Unit_temp_O2, ios, Null_Arg, t$395,  _substr(t$394,1,12), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( idum, 0x2000200000000L ) ) )
13749.                if ( t$6228 == 0 ) then
13750.                   if ( ( ( 1 + $I_L13748_10 ) < seat_spectrum%gas%n_band_absorb%dim_1%LB .or. ( 1 + $I_L13748_10 ) > -1 + seat_spectrum%gas%n_band_absorb%dim_1%LB + seat_spectrum%gas%n_band_absorb%dim_1%EX ) /= .false. ) then
13750.                       _substr(t$6230,1,13) = 'Rad_UKMO.f90'
13750.                       _substr(t$6231,1,14) = 'N_BAND_ABSORB'
13750.                      t$6232 = seat_spectrum%gas%n_band_absorb%dim_1%LB
13750.                      t$6233 = -1 + seat_spectrum%gas%n_band_absorb%dim_1%LB + seat_spectrum%gas%n_band_absorb%dim_1%EX
13750.                      t$6234 = 1 + $I_L13748_10
13750.                      call _bounds_error(  _substr(t$6230,1,13), 13750,  _substr(t$6231,1,14), 1, t$6232, t$6233, t$6234, t$6229 )
13750.                   endif
13749.                   $Unit_temp_O3 = iu_spc
13749.                   $IOindex_O4 = i
13749.                   t$6228 = _fread( _clist( 0, 1, 0, $Unit_temp_O3, ios, Null_Arg, t$395,  _substr(t$394,1,12), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%gas%n_band_absorb%base_addr)($IOindex_O4, 0), 0x2000200000000L ) ) )
13749.                   if ( t$6228 == 0 ) then
13749.                      $Unit_temp_O5 = iu_spc
13749.                      t$6228 = _fread( _clist( 0, 1, 1, $Unit_temp_O5, ios, Null_Arg, t$395,  _substr(t$394,1,12), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13749.                   endif
13749.                endif
13749.             endif
13751.             if ( ios /= 0 ) then
13752.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$397,  _substr(t$396,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_4_0_0', 0x800600000000L ) ) )
13754.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'The list of absorbers is not correct.', 0x800600000000L ) ) )
13755.                seat_ierr = 1
13755.                goto 10
13755.             endif
13758.             if ( (seat_spectrum%gas%n_band_absorb%base_addr)(i, 0) > 0 ) then
13759.                $Unit_temp_O6 = iu_spc
13759.                _fread( _clist( 0, 0, 2, $Unit_temp_O6, Null_Arg, Null_Arg, t$399,  _substr(t$398,1,15), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13761.                if ( ( i < seat_spectrum%gas%n_band_absorb%dim_1%LB .or. i > -1 + seat_spectrum%gas%n_band_absorb%dim_1%LB + seat_spectrum%gas%n_band_absorb%dim_1%EX ) /= .false. ) then
13761.                    _substr(t$6236,1,13) = 'Rad_UKMO.f90'
13761.                    _substr(t$6237,1,14) = 'N_BAND_ABSORB'
13761.                   t$6232 = seat_spectrum%gas%n_band_absorb%dim_1%LB
13761.                   t$6233 = -1 + seat_spectrum%gas%n_band_absorb%dim_1%LB + seat_spectrum%gas%n_band_absorb%dim_1%EX
13761.                   t$6234 = i
13761.                   call _bounds_error(  _substr(t$6236,1,13), 13761,  _substr(t$6237,1,14), 1, t$6232, t$6233, t$6234, t$6235 )
13761.                endif
13759.                $t_S1 = (seat_spectrum%gas%n_band_absorb%base_addr)(i, 0)
13759.                if ( $t_S1 > 0 ) then
13759.                   $I_L13759_8 = 0
13759.                   do
13760.                      if ( ( ( 1 + $I_L13759_8 ) < seat_spectrum%gas%index_absorb%dim_1%LB .or. ( 1 + $I_L13759_8 ) > -1 + seat_spectrum%gas%index_absorb%dim_1%LB + seat_spectrum%gas%index_absorb%dim_1%EX ) /= .false. ) then
13760.                          _substr(t$6242,1,13) = 'Rad_UKMO.f90'
13760.                          _substr(t$6243,1,13) = 'INDEX_ABSORB'
13760.                         t$6244 = seat_spectrum%gas%index_absorb%dim_1%LB
13760.                         t$6245 = -1 + seat_spectrum%gas%index_absorb%dim_1%LB + seat_spectrum%gas%index_absorb%dim_1%EX
13760.                         t$6246 = 1 + $I_L13759_8
13760.                         call _bounds_error(  _substr(t$6242,1,13), 13760,  _substr(t$6243,1,13), 1, t$6244, t$6245, t$6246, t$6241 )
13760.                      endif
13760.                      if ( ( i < seat_spectrum%gas%index_absorb%dim_2%LB .or. i > -1 + seat_spectrum%gas%index_absorb%dim_2%LB + seat_spectrum%gas%index_absorb%dim_2%EX ) /= .false. ) then
13760.                          _substr(t$6248,1,13) = 'Rad_UKMO.f90'
13760.                          _substr(t$6249,1,13) = 'INDEX_ABSORB'
13760.                         t$6250 = seat_spectrum%gas%index_absorb%dim_2%LB
13760.                         t$6251 = -1 + seat_spectrum%gas%index_absorb%dim_2%LB + seat_spectrum%gas%index_absorb%dim_2%EX
13760.                         t$6252 = i
13760.                         call _bounds_error(  _substr(t$6248,1,13), 13760,  _substr(t$6249,1,13), 2, t$6250, t$6251, t$6252, t$6247 )
13760.                      endif
13759.                      $Unit_temp_O7 = iu_spc
13759.                      $IOindex_O8 = 1 + $I_L13759_8
13759.                      $IOindex_O9 = i
13759.                      _fread( _clist( 0, 0, 0, $Unit_temp_O7, Null_Arg, Null_Arg, t$399,  _substr(t$398,1,15), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%gas%index_absorb%base_addr)($IOindex_O8, $IOindex_O9, 0), 0x2000200000000L ) ) )
13759.                      $I_L13759_8 = 1 + $I_L13759_8
13759.                      if ( $I_L13759_8 >= $t_S1 ) exit
13759.                   enddo
13759.                endif
13759.                $Unit_temp_O10 = iu_spc
13759.                _fread( _clist( 0, 0, 1, $Unit_temp_O10, Null_Arg, Null_Arg, t$399,  _substr(t$398,1,15), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13759.             endif
13763.             if ( ios /= 0 ) then
13764.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$401,  _substr(t$400,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_4_0_0', 0x800600000000L ) ) )
13766.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'The list of absorbers is not correct.', 0x800600000000L ) ) )
13767.                seat_ierr = 1
13767.                goto 10
13767.             endif
13770.             $I_L13748_10 = 1 + $I_L13748_10
13770.             if ( $I_L13748_10 >= $t_S3 ) exit
13770.          enddo
13770.          i = ( 1 + $t_S3 )
13770.       endif
13770.    10 continue
13775.       return
13775.       end
13775.       
13780.       
13780.       subroutine read_block_5_0_0_int
13805.       seat_spectrum%gas%i_band_k%header%a_contig = 1
13805.       seat_spectrum%gas%i_band_k%dim_1%LB = 1
13805.       seat_spectrum%gas%i_band_k%dim_1%EX = _zla( 0, (nd_band%base_addr)(0) )
13805.       seat_spectrum%gas%i_band_k%dim_1%SM = 1
13805.       seat_spectrum%gas%i_band_k%dim_2%LB = 1
13805.       seat_spectrum%gas%i_band_k%dim_2%EX = _zla( 0, (nd_species%base_addr)(0) )
13805.       seat_spectrum%gas%i_band_k%dim_2%SM = _zla( 0, (nd_band%base_addr)(0) )
13805.       $_allo_P1(0) = 0x1000000000001L
13805.       $_allo_P1(1) = loc( seat_spectrum%gas%i_band_k )
13805.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
13806.       seat_spectrum%gas%i_scale_k%header%a_contig = 1
13806.       seat_spectrum%gas%i_scale_k%dim_1%LB = 1
13806.       seat_spectrum%gas%i_scale_k%dim_1%EX = _zla( 0, (nd_band%base_addr)(0) )
13806.       seat_spectrum%gas%i_scale_k%dim_1%SM = 1
13806.       seat_spectrum%gas%i_scale_k%dim_2%LB = 1
13806.       seat_spectrum%gas%i_scale_k%dim_2%EX = _zla( 0, (nd_species%base_addr)(0) )
13806.       seat_spectrum%gas%i_scale_k%dim_2%SM = _zla( 0, (nd_band%base_addr)(0) )
13806.       $_allo_P2(0) = 0x1000000000001L
13806.       $_allo_P2(1) = loc( seat_spectrum%gas%i_scale_k )
13806.       call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
13807.       seat_spectrum%gas%i_scale_fnc%header%a_contig = 1
13807.       seat_spectrum%gas%i_scale_fnc%dim_1%LB = 1
13807.       seat_spectrum%gas%i_scale_fnc%dim_1%EX = _zla( 0, (nd_band%base_addr)(0) )
13807.       seat_spectrum%gas%i_scale_fnc%dim_1%SM = 1
13807.       seat_spectrum%gas%i_scale_fnc%dim_2%LB = 1
13807.       seat_spectrum%gas%i_scale_fnc%dim_2%EX = _zla( 0, (nd_species%base_addr)(0) )
13807.       seat_spectrum%gas%i_scale_fnc%dim_2%SM = _zla( 0, (nd_band%base_addr)(0) )
13807.       $_allo_P3(0) = 0x1000000000001L
13807.       $_allo_P3(1) = loc( seat_spectrum%gas%i_scale_fnc )
13807.       call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
13808.       seat_spectrum%gas%k%header%a_contig = 1
13808.       seat_spectrum%gas%k%dim_1%LB = 1
13808.       seat_spectrum%gas%k%dim_1%EX = _zla( 0, (nd_k_term%base_addr)(0) )
13808.       seat_spectrum%gas%k%dim_1%SM = 1
13808.       seat_spectrum%gas%k%dim_2%LB = 1
13808.       seat_spectrum%gas%k%dim_2%EX = _zla( 0, (nd_band%base_addr)(0) )
13808.       seat_spectrum%gas%k%dim_2%SM = _zla( 0, (nd_k_term%base_addr)(0) )
13808.       seat_spectrum%gas%k%dim_3%LB = 1
13808.       seat_spectrum%gas%k%dim_3%EX = _zla( 0, (nd_species%base_addr)(0) )
13808.       seat_spectrum%gas%k%dim_3%SM = ( _zla( 0, (nd_k_term%base_addr)(0) ) * _zla( 0, (nd_band%base_addr)(0) ) )
13808.       $_allo_P4(0) = 0x1000000000001L
13808.       $_allo_P4(1) = loc( seat_spectrum%gas%k )
13808.       call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
13809.       seat_spectrum%gas%w%header%a_contig = 1
13809.       seat_spectrum%gas%w%dim_1%LB = 1
13809.       seat_spectrum%gas%w%dim_1%EX = _zla( 0, (nd_k_term%base_addr)(0) )
13809.       seat_spectrum%gas%w%dim_1%SM = 1
13809.       seat_spectrum%gas%w%dim_2%LB = 1
13809.       seat_spectrum%gas%w%dim_2%EX = _zla( 0, (nd_band%base_addr)(0) )
13809.       seat_spectrum%gas%w%dim_2%SM = _zla( 0, (nd_k_term%base_addr)(0) )
13809.       seat_spectrum%gas%w%dim_3%LB = 1
13809.       seat_spectrum%gas%w%dim_3%EX = _zla( 0, (nd_species%base_addr)(0) )
13809.       seat_spectrum%gas%w%dim_3%SM = ( _zla( 0, (nd_k_term%base_addr)(0) ) * _zla( 0, (nd_band%base_addr)(0) ) )
13809.       $_allo_P5(0) = 0x1000000000001L
13809.       $_allo_P5(1) = loc( seat_spectrum%gas%w )
13809.       call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
13810.       seat_spectrum%gas%p_ref%header%a_contig = 1
13810.       seat_spectrum%gas%p_ref%dim_1%LB = 1
13810.       seat_spectrum%gas%p_ref%dim_1%EX = _zla( 0, (nd_species%base_addr)(0) )
13810.       seat_spectrum%gas%p_ref%dim_1%SM = 1
13810.       seat_spectrum%gas%p_ref%dim_2%LB = 1
13810.       seat_spectrum%gas%p_ref%dim_2%EX = _zla( 0, (nd_band%base_addr)(0) )
13810.       seat_spectrum%gas%p_ref%dim_2%SM = _zla( 0, (nd_species%base_addr)(0) )
13810.       $_allo_P6(0) = 0x1000000000001L
13810.       $_allo_P6(1) = loc( seat_spectrum%gas%p_ref )
13810.       call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
13811.       seat_spectrum%gas%t_ref%header%a_contig = 1
13811.       seat_spectrum%gas%t_ref%dim_1%LB = 1
13811.       seat_spectrum%gas%t_ref%dim_1%EX = _zla( 0, (nd_species%base_addr)(0) )
13811.       seat_spectrum%gas%t_ref%dim_1%SM = 1
13811.       seat_spectrum%gas%t_ref%dim_2%LB = 1
13811.       seat_spectrum%gas%t_ref%dim_2%EX = _zla( 0, (nd_band%base_addr)(0) )
13811.       seat_spectrum%gas%t_ref%dim_2%SM = _zla( 0, (nd_species%base_addr)(0) )
13811.       $_allo_P7(0) = 0x1000000000001L
13811.       $_allo_P7(1) = loc( seat_spectrum%gas%t_ref )
13811.       call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
13812.       seat_spectrum%gas%scale%header%a_contig = 1
13812.       seat_spectrum%gas%scale%dim_1%LB = 1
13812.       seat_spectrum%gas%scale%dim_1%EX = _zla( 0, (nd_scale_variable%base_addr)(0) )
13812.       seat_spectrum%gas%scale%dim_1%SM = 1
13812.       seat_spectrum%gas%scale%dim_2%LB = 1
13812.       seat_spectrum%gas%scale%dim_2%EX = _zla( 0, (nd_k_term%base_addr)(0) )
13812.       seat_spectrum%gas%scale%dim_2%SM = _zla( 0, (nd_scale_variable%base_addr)(0) )
13812.       seat_spectrum%gas%scale%dim_3%LB = 1
13812.       seat_spectrum%gas%scale%dim_3%EX = _zla( 0, (nd_band%base_addr)(0) )
13812.       seat_spectrum%gas%scale%dim_3%SM = ( _zla( 0, (nd_k_term%base_addr)(0) ) * _zla( 0, (nd_scale_variable%base_addr)(0) ) )
13812.       seat_spectrum%gas%scale%dim_4%LB = 1
13812.       seat_spectrum%gas%scale%dim_4%EX = _zla( 0, (nd_species%base_addr)(0) )
13812.       seat_spectrum%gas%scale%dim_4%SM = ( _zla( 0, (nd_k_term%base_addr)(0) ) * _zla( 0, (nd_band%base_addr)(0) ) * _zla( 0, (nd_scale_variable%base_addr)(0) ) )
13812.       $_allo_P8(0) = 0x1000000000001L
13812.       $_allo_P8(1) = loc( seat_spectrum%gas%scale )
13812.       call __allocate( $_allo_P8, 0, 0, _fcd( 0, 0 ) )
13816.       $Unit_temp_O0 = iu_spc
13816.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$403,  _substr(t$402,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13819.       $t_S6 = seat_spectrum%basic%n_band
13819.       i = 1
13819.       if ( seat_spectrum%basic%n_band > 0 ) then
13819.          $I_L13819_22 = 0
13819.          do
13819.             i = ( 1 + $I_L13819_22 )
13820.             $t_S1 = (seat_spectrum%gas%n_band_absorb%base_addr)(i, 0)
13820.             if ( $t_S1 > 0 ) then
13820.                $I_L13820_20 = 0
13820.                do
13821.                   $Unit_temp_O1 = iu_spc
13821.                   t$6259 = _fread( _clist( 0, 1, 3, $Unit_temp_O1, ios, Null_Arg, t$405,  _substr(t$404,1,15), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P0(:( 0, 4, 1 )), 0x2000200000000L ) ) )
13821.                   idum_band = $_IOitem_P0(0)
13821.                   idum_species = $_IOitem_P0(1)
13821.                   number_term = $_IOitem_P0(2)
13821.                   idum_scale = $_IOitem_P0(3)
13821.                   idum_fnc = $_IOitem_P0(4)
13823.                   if ( ios /= 0 ) then
13824.                      _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$407,  _substr(t$406,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_5_0_0', 0x800600000000L ), _iotype( 'k-distribution data are not consistent with the summary.', 0x800600000000L ) ) )
13827.                      seat_ierr = 1
13827.                      goto 30
13827.                   endif
13830.                   if ( idum_fnc == 1 .orelse. idum_fnc == 2 .orelse. idum_fnc == 3 .orelse. idum_fnc == 0 ) then
13840.                      if ( number_term > (nd_k_term%base_addr)(0) ) then
13841.                         _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$411,  _substr(t$410,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_5_0_0', 0x800600000000L ), _iotype( 'Too many esft terms have been given.', 0x800600000000L ), _iotype( 'increase NPD_k_term and recompile.', 0x800600000000L ) ) )
13845.                         seat_ierr = 1
13845.                         goto 30
13845.                      endif
13848.                      (seat_spectrum%gas%i_band_k%base_addr)(idum_band, idum_species, 0) = number_term
13849.                      (seat_spectrum%gas%i_scale_k%base_addr)(idum_band, idum_species, 0) = idum_scale
13850.                      (seat_spectrum%gas%i_scale_fnc%base_addr)(idum_band, idum_species, 0) = idum_fnc
13853.                      $Unit_temp_O2 = iu_spc
13853.                      _fread( _clist( 0, 0, 2, $Unit_temp_O2, Null_Arg, Null_Arg, t$413,  _substr(t$412,1,16), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13854.                      if ( ( idum_species < seat_spectrum%gas%p_ref%dim_1%LB .or. idum_species > -1 + seat_spectrum%gas%p_ref%dim_1%LB + seat_spectrum%gas%p_ref%dim_1%EX ) /= .false. ) then
13854.                          _substr(t$6261,1,13) = 'Rad_UKMO.f90'
13854.                          _substr(t$6262,1,6) = 'P_REF'
13854.                         t$6263 = seat_spectrum%gas%p_ref%dim_1%LB
13854.                         t$6264 = -1 + seat_spectrum%gas%p_ref%dim_1%LB + seat_spectrum%gas%p_ref%dim_1%EX
13854.                         t$6265 = idum_species
13854.                         call _bounds_error(  _substr(t$6261,1,13), 13854,  _substr(t$6262,1,6), 1, t$6263, t$6264, t$6265, t$6260 )
13854.                      endif
13854.                      if ( ( idum_band < seat_spectrum%gas%p_ref%dim_2%LB .or. idum_band > -1 + seat_spectrum%gas%p_ref%dim_2%LB + seat_spectrum%gas%p_ref%dim_2%EX ) /= .false. ) then
13854.                          _substr(t$6267,1,13) = 'Rad_UKMO.f90'
13854.                          _substr(t$6268,1,6) = 'P_REF'
13854.                         t$6269 = seat_spectrum%gas%p_ref%dim_2%LB
13854.                         t$6270 = -1 + seat_spectrum%gas%p_ref%dim_2%LB + seat_spectrum%gas%p_ref%dim_2%EX
13854.                         t$6271 = idum_band
13854.                         call _bounds_error(  _substr(t$6267,1,13), 13854,  _substr(t$6268,1,6), 2, t$6269, t$6270, t$6271, t$6266 )
13854.                      endif
13853.                      $Unit_temp_O3 = iu_spc
13853.                      $IOindex_O4 = idum_species
13853.                      $IOindex_O5 = idum_band
13853.                      _fread( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$413,  _substr(t$412,1,16), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%gas%p_ref%base_addr)($IOindex_O4, $IOindex_O5, 0), 0x804060300000000L ) ) )
13855.                      if ( ( idum_species < seat_spectrum%gas%t_ref%dim_1%LB .or. idum_species > -1 + seat_spectrum%gas%t_ref%dim_1%LB + seat_spectrum%gas%t_ref%dim_1%EX ) /= .false. ) then
13855.                          _substr(t$6273,1,13) = 'Rad_UKMO.f90'
13855.                          _substr(t$6274,1,6) = 'T_REF'
13855.                         t$6275 = seat_spectrum%gas%t_ref%dim_1%LB
13855.                         t$6276 = -1 + seat_spectrum%gas%t_ref%dim_1%LB + seat_spectrum%gas%t_ref%dim_1%EX
13855.                         t$6277 = idum_species
13855.                         call _bounds_error(  _substr(t$6273,1,13), 13855,  _substr(t$6274,1,6), 1, t$6275, t$6276, t$6277, t$6272 )
13855.                      endif
13855.                      if ( ( idum_band < seat_spectrum%gas%t_ref%dim_2%LB .or. idum_band > -1 + seat_spectrum%gas%t_ref%dim_2%LB + seat_spectrum%gas%t_ref%dim_2%EX ) /= .false. ) then
13855.                          _substr(t$6279,1,13) = 'Rad_UKMO.f90'
13855.                          _substr(t$6280,1,6) = 'T_REF'
13855.                         t$6281 = seat_spectrum%gas%t_ref%dim_2%LB
13855.                         t$6282 = -1 + seat_spectrum%gas%t_ref%dim_2%LB + seat_spectrum%gas%t_ref%dim_2%EX
13855.                         t$6283 = idum_band
13855.                         call _bounds_error(  _substr(t$6279,1,13), 13855,  _substr(t$6280,1,6), 2, t$6281, t$6282, t$6283, t$6278 )
13855.                      endif
13853.                      $Unit_temp_O6 = iu_spc
13853.                      $IOindex_O7 = idum_species
13853.                      $IOindex_O8 = idum_band
13853.                      _fread( _clist( 0, 0, 0, $Unit_temp_O6, Null_Arg, Null_Arg, t$413,  _substr(t$412,1,16), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%gas%t_ref%base_addr)($IOindex_O7, $IOindex_O8, 0), 0x804060300000000L ) ) )
13853.                      $Unit_temp_O9 = iu_spc
13853.                      _fread( _clist( 0, 0, 1, $Unit_temp_O9, Null_Arg, Null_Arg, t$413,  _substr(t$412,1,16), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13857.                      if ( number_term > 0 ) then
13857.                         $I_L13857_18 = 0
13857.                         do
13858.                            $Unit_temp_O10 = iu_spc
13858.                            t$6287 = _fread( _clist( 0, 1, 2, $Unit_temp_O10, ios, Null_Arg, t$415,  _substr(t$414,1,38), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13858.                            if ( t$6287 == 0 ) then
13860.                               if ( ( ( 1 + $I_L13857_18 ) < seat_spectrum%gas%k%dim_1%LB .or. ( 1 + $I_L13857_18 ) > -1 + seat_spectrum%gas%k%dim_1%LB + seat_spectrum%gas%k%dim_1%EX ) /= .false. ) then
13860.                                   _substr(t$6289,1,13) = 'Rad_UKMO.f90'
13860.                                   _substr(t$6290,1,4) = 'K'
13860.                                  t$6263 = seat_spectrum%gas%k%dim_1%LB
13860.                                  t$6264 = -1 + seat_spectrum%gas%k%dim_1%LB + seat_spectrum%gas%k%dim_1%EX
13860.                                  t$6265 = 1 + $I_L13857_18
13860.                                  call _bounds_error(  _substr(t$6289,1,13), 13860,  _substr(t$6290,1,2), 1, t$6263, t$6264, t$6265, t$6288 )
13860.                               endif
13860.                               if ( ( idum_band < seat_spectrum%gas%k%dim_2%LB .or. idum_band > -1 + seat_spectrum%gas%k%dim_2%LB + seat_spectrum%gas%k%dim_2%EX ) /= .false. ) then
13860.                                   _substr(t$6292,1,13) = 'Rad_UKMO.f90'
13860.                                   _substr(t$6293,1,4) = 'K'
13860.                                  t$6269 = seat_spectrum%gas%k%dim_2%LB
13860.                                  t$6270 = -1 + seat_spectrum%gas%k%dim_2%LB + seat_spectrum%gas%k%dim_2%EX
13860.                                  t$6271 = idum_band
13860.                                  call _bounds_error(  _substr(t$6292,1,13), 13860,  _substr(t$6293,1,2), 2, t$6269, t$6270, t$6271, t$6291 )
13860.                               endif
13860.                               if ( ( idum_species < seat_spectrum%gas%k%dim_3%LB .or. idum_species > -1 + seat_spectrum%gas%k%dim_3%LB + seat_spectrum%gas%k%dim_3%EX ) /= .false. ) then
13860.                                   _substr(t$6295,1,13) = 'Rad_UKMO.f90'
13860.                                   _substr(t$6296,1,4) = 'K'
13860.                                  t$6275 = seat_spectrum%gas%k%dim_3%LB
13860.                                  t$6276 = -1 + seat_spectrum%gas%k%dim_3%LB + seat_spectrum%gas%k%dim_3%EX
13860.                                  t$6277 = idum_species
13860.                                  call _bounds_error(  _substr(t$6295,1,13), 13860,  _substr(t$6296,1,2), 3, t$6275, t$6276, t$6277, t$6294 )
13860.                               endif
13858.                               $Unit_temp_O11 = iu_spc
13858.                               $IOindex_O12 = 1 + $I_L13857_18
13858.                               $IOindex_O13 = idum_band
13858.                               $IOindex_O14 = idum_species
13858.                               t$6287 = _fread( _clist( 0, 1, 0, $Unit_temp_O11, ios, Null_Arg, t$415,  _substr(t$414,1,38), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%gas%k%base_addr)($IOindex_O12, $IOindex_O13, $IOindex_O14, 0), 0x804060300000000L ) ) )
13858.                               if ( t$6287 == 0 ) then
13861.                                  if ( ( ( 1 + $I_L13857_18 ) < seat_spectrum%gas%w%dim_1%LB .or. ( 1 + $I_L13857_18 ) > -1 + seat_spectrum%gas%w%dim_1%LB + seat_spectrum%gas%w%dim_1%EX ) /= .false. ) then
13861.                                      _substr(t$6298,1,13) = 'Rad_UKMO.f90'
13861.                                      _substr(t$6299,1,4) = 'W'
13861.                                     t$6281 = seat_spectrum%gas%w%dim_1%LB
13861.                                     t$6282 = -1 + seat_spectrum%gas%w%dim_1%LB + seat_spectrum%gas%w%dim_1%EX
13861.                                     t$6283 = 1 + $I_L13857_18
13861.                                     call _bounds_error(  _substr(t$6298,1,13), 13861,  _substr(t$6299,1,2), 1, t$6281, t$6282, t$6283, t$6297 )
13861.                                  endif
13861.                                  if ( ( idum_band < seat_spectrum%gas%w%dim_2%LB .or. idum_band > -1 + seat_spectrum%gas%w%dim_2%LB + seat_spectrum%gas%w%dim_2%EX ) /= .false. ) then
13861.                                      _substr(t$6301,1,13) = 'Rad_UKMO.f90'
13861.                                      _substr(t$6302,1,4) = 'W'
13861.                                     t$6303 = seat_spectrum%gas%w%dim_2%LB
13861.                                     t$6304 = -1 + seat_spectrum%gas%w%dim_2%LB + seat_spectrum%gas%w%dim_2%EX
13861.                                     t$6305 = idum_band
13861.                                     call _bounds_error(  _substr(t$6301,1,13), 13861,  _substr(t$6302,1,2), 2, t$6303, t$6304, t$6305, t$6300 )
13861.                                  endif
13861.                                  if ( ( idum_species < seat_spectrum%gas%w%dim_3%LB .or. idum_species > -1 + seat_spectrum%gas%w%dim_3%LB + seat_spectrum%gas%w%dim_3%EX ) /= .false. ) then
13861.                                      _substr(t$6307,1,13) = 'Rad_UKMO.f90'
13861.                                      _substr(t$6308,1,4) = 'W'
13861.                                     t$6309 = seat_spectrum%gas%w%dim_3%LB
13861.                                     t$6310 = -1 + seat_spectrum%gas%w%dim_3%LB + seat_spectrum%gas%w%dim_3%EX
13861.                                     t$6311 = idum_species
13861.                                     call _bounds_error(  _substr(t$6307,1,13), 13861,  _substr(t$6308,1,2), 3, t$6309, t$6310, t$6311, t$6306 )
13861.                                  endif
13858.                                  $Unit_temp_O15 = iu_spc
13858.                                  $IOindex_O16 = 1 + $I_L13857_18
13858.                                  $IOindex_O17 = idum_band
13858.                                  $IOindex_O18 = idum_species
13858.                                  t$6287 = _fread( _clist( 0, 1, 0, $Unit_temp_O15, ios, Null_Arg, t$415,  _substr(t$414,1,38), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%gas%w%base_addr)($IOindex_O16, $IOindex_O17, $IOindex_O18, 0), 0x804060300000000L ) ) )
13858.                                  if ( t$6287 == 0 ) then
13858.                                     $t_S3 = n_scale_variable(idum_fnc)
13858.                                     if ( $t_S3 > 0 ) then
13858.                                        $I_L13858_16 = 0
13858.                                        do
13862.                                           if ( ( ( 1 + $I_L13858_16 ) < seat_spectrum%gas%scale%dim_1%LB .or. ( 1 + $I_L13858_16 ) > -1 + seat_spectrum%gas%scale%dim_1%LB + seat_spectrum%gas%scale%dim_1%EX ) /= .false. ) then
13862.                                               _substr(t$6316,1,13) = 'Rad_UKMO.f90'
13862.                                               _substr(t$6317,1,6) = 'SCALE'
13862.                                              t$6318 = seat_spectrum%gas%scale%dim_1%LB
13862.                                              t$6319 = -1 + seat_spectrum%gas%scale%dim_1%LB + seat_spectrum%gas%scale%dim_1%EX
13862.                                              t$6320 = 1 + $I_L13858_16
13862.                                              call _bounds_error(  _substr(t$6316,1,13), 13862,  _substr(t$6317,1,6), 1, t$6318, t$6319, t$6320, t$6315 )
13862.                                           endif
13862.                                           if ( ( ( 1 + $I_L13857_18 ) < seat_spectrum%gas%scale%dim_2%LB .or. ( 1 + $I_L13857_18 ) > -1 + seat_spectrum%gas%scale%dim_2%LB + seat_spectrum%gas%scale%dim_2%EX ) /= .false. ) then
13862.                                               _substr(t$6322,1,13) = 'Rad_UKMO.f90'
13862.                                               _substr(t$6323,1,6) = 'SCALE'
13862.                                              t$6324 = seat_spectrum%gas%scale%dim_2%LB
13862.                                              t$6325 = -1 + seat_spectrum%gas%scale%dim_2%LB + seat_spectrum%gas%scale%dim_2%EX
13862.                                              t$6326 = 1 + $I_L13857_18
13862.                                              call _bounds_error(  _substr(t$6322,1,13), 13862,  _substr(t$6323,1,6), 2, t$6324, t$6325, t$6326, t$6321 )
13862.                                           endif
13862.                                           if ( ( idum_band < seat_spectrum%gas%scale%dim_3%LB .or. idum_band > -1 + seat_spectrum%gas%scale%dim_3%LB + seat_spectrum%gas%scale%dim_3%EX ) /= .false. ) then
13862.                                               _substr(t$6328,1,13) = 'Rad_UKMO.f90'
13862.                                               _substr(t$6329,1,6) = 'SCALE'
13862.                                              t$6330 = seat_spectrum%gas%scale%dim_3%LB
13862.                                              t$6331 = -1 + seat_spectrum%gas%scale%dim_3%LB + seat_spectrum%gas%scale%dim_3%EX
13862.                                              t$6332 = idum_band
13862.                                              call _bounds_error(  _substr(t$6328,1,13), 13862,  _substr(t$6329,1,6), 3, t$6330, t$6331, t$6332, t$6327 )
13862.                                           endif
13862.                                           if ( ( idum_species < seat_spectrum%gas%scale%dim_4%LB .or. idum_species > -1 + seat_spectrum%gas%scale%dim_4%LB + seat_spectrum%gas%scale%dim_4%EX ) /= .false. ) then
13862.                                               _substr(t$6334,1,13) = 'Rad_UKMO.f90'
13862.                                               _substr(t$6335,1,6) = 'SCALE'
13862.                                              t$6336 = seat_spectrum%gas%scale%dim_4%LB
13862.                                              t$6337 = -1 + seat_spectrum%gas%scale%dim_4%LB + seat_spectrum%gas%scale%dim_4%EX
13862.                                              t$6338 = idum_species
13862.                                              call _bounds_error(  _substr(t$6334,1,13), 13862,  _substr(t$6335,1,6), 4, t$6336, t$6337, t$6338, t$6333 )
13862.                                           endif
13858.                                           $Unit_temp_O19 = iu_spc
13858.                                           $IOindex_O20 = 1 + $I_L13858_16
13858.                                           $IOindex_O21 = 1 + $I_L13857_18
13858.                                           $IOindex_O22 = idum_band
13858.                                           $IOindex_O23 = idum_species
13858.                                           t$6287 = _fread( _clist( 0, 1, 0, $Unit_temp_O19, ios, Null_Arg, t$415,  _substr(t$414,1,38), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%gas%scale%base_addr)($IOindex_O20, $IOindex_O21, $IOindex_O22, $IOindex_O23, 0), 0x804060300000000L ) ) )
13858.                                           if ( t$6287 /= 0 ) goto 20
13858.                                           $I_L13858_16 = 1 + $I_L13858_16
13858.                                           if ( $I_L13858_16 >= $t_S3 ) exit
13858.                                        enddo
13858.                                        goto 10
13858.                                     else
13858.    10                                  continue
13858.                                        $Unit_temp_O24 = iu_spc
13858.                                        t$6287 = _fread( _clist( 0, 1, 1, $Unit_temp_O24, ios, Null_Arg, t$415,  _substr(t$414,1,38), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13858.                                     endif
13858.                                  endif
13858.                               endif
13858.                            endif
13858.    20                      continue
13864.                            if ( ios /= 0 ) then
13865.                               _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$417,  _substr(t$416,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_5_0_0', 0x800600000000L ), _iotype( 'k-distribution data are not consistent with the summary.', 0x800600000000L ) ) )
13868.                               seat_ierr = 1
13868.                               goto 30
13868.                            endif
13871.                            $I_L13857_18 = 1 + $I_L13857_18
13871.                            if ( $I_L13857_18 >= number_term ) exit
13871.                         enddo
13872.                         $I_L13820_20 = 1 + $I_L13820_20
13871.                      else
13871.                      endif
13871.                   else
13871.                   endif
13871.                   if ( $I_L13820_20 >= $t_S1 ) exit
13871.                enddo
13873.                $I_L13819_22 = 1 + $I_L13819_22
13872.             else
13872.             endif
13872.             if ( $I_L13819_22 >= $t_S6 ) exit
13872.          enddo
13873.          i = ( 1 + $t_S6 )
13873.       endif
13873.    30 continue
13878.       return
13878.       end
13878.       
13883.       
13883.       subroutine read_block_6_0_0_int
13894.       $Unit_temp_O0 = iu_spc
13894.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$419,  _substr(t$418,1,26), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O8, 0x2000200000000L ), _iotype( $IOitem_O9, 0x804060300000000L ) ) )
13894.       seat_spectrum%planck%n_deg_fit = $IOitem_O8
13894.       seat_spectrum%planck%t_ref_planck = $IOitem_O9
13896.       (nd_thermal_coeff%base_addr)(0) = 1 + $IOitem_O8
13897.       seat_spectrum%planck%thermal_coeff%header%a_contig = 1
13897.       seat_spectrum%planck%thermal_coeff%dim_1%LB = 0
13897.       seat_spectrum%planck%thermal_coeff%dim_1%EX = _zla( 0, ( 1 + $IOitem_O8 ) )
13897.       seat_spectrum%planck%thermal_coeff%dim_1%SM = 1
13897.       seat_spectrum%planck%thermal_coeff%dim_2%LB = 1
13897.       seat_spectrum%planck%thermal_coeff%dim_2%EX = _zla( 0, (nd_band%base_addr)(0) )
13897.       seat_spectrum%planck%thermal_coeff%dim_2%SM = _zla( 0, ( 1 + $IOitem_O8 ) )
13897.       $_allo_P0(0) = 0x1000000000001L
13897.       $_allo_P0(1) = loc( seat_spectrum%planck%thermal_coeff )
13897.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
13899.       $Unit_temp_O1 = iu_spc
13899.       _fread( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$421,  _substr(t$420,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13900.       $t_S3 = seat_spectrum%basic%n_band
13900.       i = 1
13900.       if ( seat_spectrum%basic%n_band > 0 ) then
13900.          $I_L13900_10 = 0
13900.          do
13900.             i = ( 1 + $I_L13900_10 )
13901.             $Unit_temp_O2 = iu_spc
13901.             t$6342 = _fread( _clist( 0, 1, 2, $Unit_temp_O2, ios, Null_Arg, t$423,  _substr(t$422,1,31), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13901.             if ( t$6342 == 0 ) then
13901.                $Unit_temp_O3 = iu_spc
13901.                t$6342 = _fread( _clist( 0, 1, 0, $Unit_temp_O3, ios, Null_Arg, t$423,  _substr(t$422,1,31), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i_band, 0x2000200000000L ) ) )
13901.                if ( t$6342 == 0 ) then
13901.                   $t_S2 = seat_spectrum%planck%n_deg_fit
13901.                   if ( seat_spectrum%planck%n_deg_fit >= 0 ) then
13901.                      $I_L13901_8 = 0
13901.                      do
13902.                         if ( ( $I_L13901_8 < seat_spectrum%planck%thermal_coeff%dim_1%LB .or. $I_L13901_8 > -1 + seat_spectrum%planck%thermal_coeff%dim_1%LB + seat_spectrum%planck%thermal_coeff%dim_1%EX ) /= .false. ) then
13902.                             _substr(t$6347,1,13) = 'Rad_UKMO.f90'
13902.                             _substr(t$6348,1,14) = 'THERMAL_COEFF'
13902.                            t$6349 = seat_spectrum%planck%thermal_coeff%dim_1%LB
13902.                            t$6350 = -1 + seat_spectrum%planck%thermal_coeff%dim_1%LB + seat_spectrum%planck%thermal_coeff%dim_1%EX
13902.                            t$6351 = $I_L13901_8
13902.                            call _bounds_error(  _substr(t$6347,1,13), 13902,  _substr(t$6348,1,14), 1, t$6349, t$6350, t$6351, t$6346 )
13902.                         endif
13902.                         if ( ( i < seat_spectrum%planck%thermal_coeff%dim_2%LB .or. i > -1 + seat_spectrum%planck%thermal_coeff%dim_2%LB + seat_spectrum%planck%thermal_coeff%dim_2%EX ) /= .false. ) then
13902.                             _substr(t$6353,1,13) = 'Rad_UKMO.f90'
13902.                             _substr(t$6354,1,14) = 'THERMAL_COEFF'
13902.                            t$6355 = seat_spectrum%planck%thermal_coeff%dim_2%LB
13902.                            t$6356 = -1 + seat_spectrum%planck%thermal_coeff%dim_2%LB + seat_spectrum%planck%thermal_coeff%dim_2%EX
13902.                            t$6357 = i
13902.                            call _bounds_error(  _substr(t$6353,1,13), 13902,  _substr(t$6354,1,14), 2, t$6355, t$6356, t$6357, t$6352 )
13902.                         endif
13901.                         $Unit_temp_O4 = iu_spc
13901.                         $IOindex_O5 = $I_L13901_8
13901.                         $IOindex_O6 = i
13901.                         t$6342 = _fread( _clist( 0, 1, 0, $Unit_temp_O4, ios, Null_Arg, t$423,  _substr(t$422,1,31), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%planck%thermal_coeff%base_addr)($IOindex_O5, $IOindex_O6, 0), 0x804060300000000L ) ) )
13901.                         if ( t$6342 /= 0 ) goto 20
13901.                         $I_L13901_8 = 1 + $I_L13901_8
13901.                         if ( $I_L13901_8 >= 1 + max( 0, $t_S2 ) ) exit
13901.                      enddo
13901.                      goto 10
13901.                   else
13901.    10                continue
13901.                      $Unit_temp_O7 = iu_spc
13901.                      t$6342 = _fread( _clist( 0, 1, 1, $Unit_temp_O7, ios, Null_Arg, t$423,  _substr(t$422,1,31), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13901.                   endif
13901.                endif
13901.             endif
13901.    20       continue
13904.             if ( ios /= 0 ) then
13905.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$425,  _substr(t$424,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_6_0_0', 0x800600000000L ), _iotype( 'The data for the thermal source function could not be read.', 0x800600000000L ) ) )
13908.                seat_ierr = 1
13908.                goto 30
13908.             endif
13911.             $I_L13900_10 = 1 + $I_L13900_10
13911.             if ( $I_L13900_10 >= $t_S3 ) exit
13911.          enddo
13911.          i = ( 1 + $t_S3 )
13911.       endif
13911.    30 continue
13916.       return
13916.       end
13916.       
13921.       
13921.       subroutine read_block_8_0_0_int
13934.       seat_spectrum%cont%n_band_continuum%header%a_contig = 1
13934.       seat_spectrum%cont%n_band_continuum%dim_1%LB = 1
13934.       seat_spectrum%cont%n_band_continuum%dim_1%EX = _zla( 0, (nd_band%base_addr)(0) )
13934.       seat_spectrum%cont%n_band_continuum%dim_1%SM = 1
13934.       $_allo_P0(0) = 0x1000000000001L
13934.       $_allo_P0(1) = loc( seat_spectrum%cont%n_band_continuum )
13934.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
13935.       seat_spectrum%cont%index_continuum%header%a_contig = 1
13935.       seat_spectrum%cont%index_continuum%dim_1%LB = 1
13935.       seat_spectrum%cont%index_continuum%dim_1%EX = _zla( 0, (nd_band%base_addr)(0) )
13935.       seat_spectrum%cont%index_continuum%dim_1%SM = 1
13935.       seat_spectrum%cont%index_continuum%dim_2%LB = 1
13935.       seat_spectrum%cont%index_continuum%dim_2%EX = _zla( 0, (nd_continuum%base_addr)(0) )
13935.       seat_spectrum%cont%index_continuum%dim_2%SM = _zla( 0, (nd_band%base_addr)(0) )
13935.       $_allo_P1(0) = 0x1000000000001L
13935.       $_allo_P1(1) = loc( seat_spectrum%cont%index_continuum )
13935.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
13937.       $F_A33 = seat_spectrum%cont%n_band_continuum%dim_1%EX
13937.       if ( seat_spectrum%cont%n_band_continuum%dim_1%EX > 0 ) then
13937.          $SC_spectrum_I10 = seat_spectrum%cont%n_band_continuum%dim_1%SM
13937.          $SC_spectrum_I9 = seat_spectrum%cont%n_band_continuum%dim_1%EX
13937.          $SC_spectrum_I11 = seat_spectrum%cont%n_band_continuum%dim_1%LB
13937.          $I_L13937_18 = 0
13937. !dir$ ivdep
13937.          do
13937.             (seat_spectrum%cont%n_band_continuum%base_addr)($SC_spectrum_I11 + $I_L13937_18, 0) = 0
13937.             $I_L13937_18 = 1 + $I_L13937_18
13937.             if ( $I_L13937_18 >= $F_A33 ) exit
13937.          enddo
13937.       endif
13938.       $F_A34 = seat_spectrum%cont%index_continuum%dim_2%EX
13938.       $F_A35 = seat_spectrum%cont%index_continuum%dim_1%EX
13938.       if ( and( -$F_A35, -$F_A34 ) < 0 ) then
13938.          $SC_spectrum_I16 = seat_spectrum%cont%index_continuum%dim_2%SM
13938.          $SC_spectrum_I15 = seat_spectrum%cont%index_continuum%dim_2%EX
13938.          $SC_spectrum_I17 = seat_spectrum%cont%index_continuum%dim_2%LB
13938.          $SC_spectrum_I13 = seat_spectrum%cont%index_continuum%dim_1%SM
13938.          $SC_spectrum_I12 = seat_spectrum%cont%index_continuum%dim_1%EX
13938.          $SC_spectrum_I14 = seat_spectrum%cont%index_continuum%dim_1%LB
13938.          $I_L13938_24 = 0
13938.          do
13938.             $I_L13938_20 = 0
13938. !dir$ ivdep
13938.             do
13938.                (seat_spectrum%cont%index_continuum%base_addr)($SC_spectrum_I14 + $I_L13938_20, $SC_spectrum_I17 + $I_L13938_24, 0) = 0
13938.                $I_L13938_20 = 1 + $I_L13938_20
13938.                if ( $I_L13938_20 >= $F_A35 ) exit
13938.             enddo
13938.             $I_L13938_24 = 1 + $I_L13938_24
13938.             if ( $I_L13938_24 >= $F_A34 ) exit
13938.          enddo
13938.       endif
13940.       $Unit_temp_O0 = iu_spc
13940.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$427,  _substr(t$426,1,6), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13943.       $t_S3 = seat_spectrum%basic%n_band
13943.       i = 1
13943.       if ( seat_spectrum%basic%n_band > 0 ) then
13943.          $I_L13943_22 = 0
13943.          do
13943.             i = ( 1 + $I_L13943_22 )
13944.             $Unit_temp_O1 = iu_spc
13944.             t$6361 = _fread( _clist( 0, 1, 2, $Unit_temp_O1, ios, Null_Arg, t$429,  _substr(t$428,1,12), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13944.             if ( t$6361 == 0 ) then
13944.                $Unit_temp_O2 = iu_spc
13944.                t$6361 = _fread( _clist( 0, 1, 0, $Unit_temp_O2, ios, Null_Arg, t$429,  _substr(t$428,1,12), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( idum, 0x2000200000000L ) ) )
13944.                if ( t$6361 == 0 ) then
13945.                   if ( ( ( 1 + $I_L13943_22 ) < seat_spectrum%cont%n_band_continuum%dim_1%LB .or. ( 1 + $I_L13943_22 ) > -1 + seat_spectrum%cont%n_band_continuum%dim_1%LB + seat_spectrum%cont%n_band_continuum%dim_1%EX ) /= .false. ) then
13945.                       _substr(t$6363,1,13) = 'Rad_UKMO.f90'
13945.                       _substr(t$6364,1,17) = 'N_BAND_CONTINUUM'
13945.                      t$6365 = seat_spectrum%cont%n_band_continuum%dim_1%LB
13945.                      t$6366 = -1 + seat_spectrum%cont%n_band_continuum%dim_1%LB + seat_spectrum%cont%n_band_continuum%dim_1%EX
13945.                      t$6367 = 1 + $I_L13943_22
13945.                      call _bounds_error(  _substr(t$6363,1,13), 13945,  _substr(t$6364,1,17), 1, t$6365, t$6366, t$6367, t$6362 )
13945.                   endif
13944.                   $Unit_temp_O3 = iu_spc
13944.                   $IOindex_O4 = i
13944.                   t$6361 = _fread( _clist( 0, 1, 0, $Unit_temp_O3, ios, Null_Arg, t$429,  _substr(t$428,1,12), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%cont%n_band_continuum%base_addr)($IOindex_O4, 0), 0x2000200000000L ) ) )
13944.                   if ( t$6361 == 0 ) then
13944.                      $Unit_temp_O5 = iu_spc
13944.                      t$6361 = _fread( _clist( 0, 1, 1, $Unit_temp_O5, ios, Null_Arg, t$429,  _substr(t$428,1,12), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13944.                   endif
13944.                endif
13944.             endif
13946.             if ( ios /= 0 ) then
13947.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$431,  _substr(t$430,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_8_0_0', 0x800600000000L ), _iotype( 'the list of continua is not correct.', 0x800600000000L ) ) )
13950.                seat_ierr = 1
13950.                goto 20
13950.             endif
13953.             if ( (seat_spectrum%cont%n_band_continuum%base_addr)(i, 0) > (nd_continuum%base_addr)(0) ) then
13954.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$433,  _substr(t$432,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_8_0_0', 0x800600000000L ), _iotype( 'There are too many continua:', 0x800600000000L ), _iotype( 'increase npd_continuum and recompile.', 0x800600000000L ) ) )
13958.                seat_ierr = 1
13958.                goto 20
13958.             endif
13961.             if ( (seat_spectrum%cont%n_band_continuum%base_addr)(i, 0) > 0 ) then
13962.                $Unit_temp_O6 = iu_spc
13962.                _fread( _clist( 0, 0, 2, $Unit_temp_O6, Null_Arg, Null_Arg, t$435,  _substr(t$434,1,15), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13964.                if ( ( i < seat_spectrum%cont%n_band_continuum%dim_1%LB .or. i > -1 + seat_spectrum%cont%n_band_continuum%dim_1%LB + seat_spectrum%cont%n_band_continuum%dim_1%EX ) /= .false. ) then
13964.                    _substr(t$6369,1,13) = 'Rad_UKMO.f90'
13964.                    _substr(t$6370,1,17) = 'N_BAND_CONTINUUM'
13964.                   t$6365 = seat_spectrum%cont%n_band_continuum%dim_1%LB
13964.                   t$6366 = -1 + seat_spectrum%cont%n_band_continuum%dim_1%LB + seat_spectrum%cont%n_band_continuum%dim_1%EX
13964.                   t$6367 = i
13964.                   call _bounds_error(  _substr(t$6369,1,13), 13964,  _substr(t$6370,1,17), 1, t$6365, t$6366, t$6367, t$6368 )
13964.                endif
13962.                $t_S1 = (seat_spectrum%cont%n_band_continuum%base_addr)(i, 0)
13962.                if ( $t_S1 > 0 ) then
13962.                   $I_L13962_16 = 0
13962.                   do
13963.                      if ( ( i < seat_spectrum%cont%index_continuum%dim_1%LB .or. i > -1 + seat_spectrum%cont%index_continuum%dim_1%LB + seat_spectrum%cont%index_continuum%dim_1%EX ) /= .false. ) then
13963.                          _substr(t$6375,1,13) = 'Rad_UKMO.f90'
13963.                          _substr(t$6376,1,16) = 'INDEX_CONTINUUM'
13963.                         t$6377 = seat_spectrum%cont%index_continuum%dim_1%LB
13963.                         t$6378 = -1 + seat_spectrum%cont%index_continuum%dim_1%LB + seat_spectrum%cont%index_continuum%dim_1%EX
13963.                         t$6379 = i
13963.                         call _bounds_error(  _substr(t$6375,1,13), 13963,  _substr(t$6376,1,16), 1, t$6377, t$6378, t$6379, t$6374 )
13963.                      endif
13963.                      if ( ( ( 1 + $I_L13962_16 ) < seat_spectrum%cont%index_continuum%dim_2%LB .or. ( 1 + $I_L13962_16 ) > -1 + seat_spectrum%cont%index_continuum%dim_2%LB + seat_spectrum%cont%index_continuum%dim_2%EX ) /= .false. ) then
13963.                          _substr(t$6381,1,13) = 'Rad_UKMO.f90'
13963.                          _substr(t$6382,1,16) = 'INDEX_CONTINUUM'
13963.                         t$6383 = seat_spectrum%cont%index_continuum%dim_2%LB
13963.                         t$6384 = -1 + seat_spectrum%cont%index_continuum%dim_2%LB + seat_spectrum%cont%index_continuum%dim_2%EX
13963.                         t$6385 = 1 + $I_L13962_16
13963.                         call _bounds_error(  _substr(t$6381,1,13), 13963,  _substr(t$6382,1,16), 2, t$6383, t$6384, t$6385, t$6380 )
13963.                      endif
13962.                      $Unit_temp_O7 = iu_spc
13962.                      $IOindex_O8 = i
13962.                      $IOindex_O9 = 1 + $I_L13962_16
13962.                      _fread( _clist( 0, 0, 0, $Unit_temp_O7, Null_Arg, Null_Arg, t$435,  _substr(t$434,1,15), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%cont%index_continuum%base_addr)($IOindex_O8, $IOindex_O9, 0), 0x2000200000000L ) ) )
13962.                      $I_L13962_16 = 1 + $I_L13962_16
13962.                      if ( $I_L13962_16 >= $t_S1 ) exit
13962.                   enddo
13962.                endif
13962.                $Unit_temp_O10 = iu_spc
13962.                _fread( _clist( 0, 0, 1, $Unit_temp_O10, Null_Arg, Null_Arg, t$435,  _substr(t$434,1,15), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
13962.             endif
13966.             if ( ios /= 0 ) then
13967.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$437,  _substr(t$436,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_8_0_0', 0x800600000000L ), _iotype( 'the list of continua is not correct.', 0x800600000000L ) ) )
13970.                seat_ierr = 1
13970.                goto 20
13970.             endif
13973.             $I_L13943_22 = 1 + $I_L13943_22
13973.             if ( $I_L13943_22 >= $t_S3 ) exit
13973.          enddo
13973.          i = ( 1 + $t_S3 )
13973.          goto 10
13973.       else
13973.    10    continue
13976.          $Unit_temp_O11 = iu_spc
13976.          _fread( _clist( 0, 0, 3, $Unit_temp_O11, Null_Arg, Null_Arg, t$439,  _substr(t$438,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O12, 0x2000200000000L ) ) )
13976.          seat_spectrum%cont%index_water = $IOitem_O12
13976.       endif
13976.    20 continue
13981.       return
13981.       end
13981.       
13986.       
13986.       subroutine read_block_9_0_0_int
14005.       seat_spectrum%cont%k_cont%header%a_contig = 1
14005.       seat_spectrum%cont%k_cont%dim_1%LB = 1
14005.       seat_spectrum%cont%k_cont%dim_1%EX = _zla( 0, (nd_band%base_addr)(0) )
14005.       seat_spectrum%cont%k_cont%dim_1%SM = 1
14005.       seat_spectrum%cont%k_cont%dim_2%LB = 1
14005.       seat_spectrum%cont%k_cont%dim_2%EX = _zla( 0, (nd_continuum%base_addr)(0) )
14005.       seat_spectrum%cont%k_cont%dim_2%SM = _zla( 0, (nd_band%base_addr)(0) )
14005.       $_allo_P1(0) = 0x1000000000001L
14005.       $_allo_P1(1) = loc( seat_spectrum%cont%k_cont )
14005.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
14006.       seat_spectrum%cont%i_scale_fnc_cont%header%a_contig = 1
14006.       seat_spectrum%cont%i_scale_fnc_cont%dim_1%LB = 1
14006.       seat_spectrum%cont%i_scale_fnc_cont%dim_1%EX = _zla( 0, (nd_band%base_addr)(0) )
14006.       seat_spectrum%cont%i_scale_fnc_cont%dim_1%SM = 1
14006.       seat_spectrum%cont%i_scale_fnc_cont%dim_2%LB = 1
14006.       seat_spectrum%cont%i_scale_fnc_cont%dim_2%EX = _zla( 0, (nd_continuum%base_addr)(0) )
14006.       seat_spectrum%cont%i_scale_fnc_cont%dim_2%SM = _zla( 0, (nd_band%base_addr)(0) )
14006.       $_allo_P2(0) = 0x1000000000001L
14006.       $_allo_P2(1) = loc( seat_spectrum%cont%i_scale_fnc_cont )
14006.       call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
14007.       seat_spectrum%cont%scale_cont%header%a_contig = 1
14007.       seat_spectrum%cont%scale_cont%dim_1%LB = 1
14007.       seat_spectrum%cont%scale_cont%dim_1%EX = _zla( 0, (nd_scale_variable%base_addr)(0) )
14007.       seat_spectrum%cont%scale_cont%dim_1%SM = 1
14007.       seat_spectrum%cont%scale_cont%dim_2%LB = 1
14007.       seat_spectrum%cont%scale_cont%dim_2%EX = _zla( 0, (nd_band%base_addr)(0) )
14007.       seat_spectrum%cont%scale_cont%dim_2%SM = _zla( 0, (nd_scale_variable%base_addr)(0) )
14007.       seat_spectrum%cont%scale_cont%dim_3%LB = 1
14007.       seat_spectrum%cont%scale_cont%dim_3%EX = _zla( 0, (nd_continuum%base_addr)(0) )
14007.       seat_spectrum%cont%scale_cont%dim_3%SM = ( _zla( 0, (nd_scale_variable%base_addr)(0) ) * _zla( 0, (nd_band%base_addr)(0) ) )
14007.       $_allo_P3(0) = 0x1000000000001L
14007.       $_allo_P3(1) = loc( seat_spectrum%cont%scale_cont )
14007.       call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
14009.       seat_spectrum%cont%t_ref_cont%header%a_contig = 1
14009.       seat_spectrum%cont%t_ref_cont%dim_1%LB = 1
14009.       seat_spectrum%cont%t_ref_cont%dim_1%EX = _zla( 0, (nd_continuum%base_addr)(0) )
14009.       seat_spectrum%cont%t_ref_cont%dim_1%SM = 1
14009.       seat_spectrum%cont%t_ref_cont%dim_2%LB = 1
14009.       seat_spectrum%cont%t_ref_cont%dim_2%EX = _zla( 0, (nd_band%base_addr)(0) )
14009.       seat_spectrum%cont%t_ref_cont%dim_2%SM = _zla( 0, (nd_continuum%base_addr)(0) )
14009.       $_allo_P4(0) = 0x1000000000001L
14009.       $_allo_P4(1) = loc( seat_spectrum%cont%t_ref_cont )
14009.       call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
14010.       seat_spectrum%cont%p_ref_cont%header%a_contig = 1
14010.       seat_spectrum%cont%p_ref_cont%dim_1%LB = 1
14010.       seat_spectrum%cont%p_ref_cont%dim_1%EX = _zla( 0, (nd_continuum%base_addr)(0) )
14010.       seat_spectrum%cont%p_ref_cont%dim_1%SM = 1
14010.       seat_spectrum%cont%p_ref_cont%dim_2%LB = 1
14010.       seat_spectrum%cont%p_ref_cont%dim_2%EX = _zla( 0, (nd_band%base_addr)(0) )
14010.       seat_spectrum%cont%p_ref_cont%dim_2%SM = _zla( 0, (nd_continuum%base_addr)(0) )
14010.       $_allo_P5(0) = 0x1000000000001L
14010.       $_allo_P5(1) = loc( seat_spectrum%cont%p_ref_cont )
14010.       call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
14012.       $F_A33 = seat_spectrum%cont%k_cont%dim_2%EX
14012.       $F_A34 = seat_spectrum%cont%k_cont%dim_1%EX
14012.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
14012.          $SC_spectrum_I31 = seat_spectrum%cont%k_cont%dim_2%SM
14012.          $SC_spectrum_I30 = seat_spectrum%cont%k_cont%dim_2%EX
14012.          $SC_spectrum_I32 = seat_spectrum%cont%k_cont%dim_2%LB
14012.          $SC_spectrum_I28 = seat_spectrum%cont%k_cont%dim_1%SM
14012.          $SC_spectrum_I27 = seat_spectrum%cont%k_cont%dim_1%EX
14012.          $SC_spectrum_I29 = seat_spectrum%cont%k_cont%dim_1%LB
14012.          $I_L14012_38 = 0
14012.          do
14012.             $I_L14012_28 = 0
14012. !dir$ ivdep
14012.             do
14012.                (seat_spectrum%cont%k_cont%base_addr)($SC_spectrum_I29 + $I_L14012_28, $SC_spectrum_I32 + $I_L14012_38, 0) = 0.0
14012.                $I_L14012_28 = 1 + $I_L14012_28
14012.                if ( $I_L14012_28 >= $F_A34 ) exit
14012.             enddo
14012.             $I_L14012_38 = 1 + $I_L14012_38
14012.             if ( $I_L14012_38 >= $F_A33 ) exit
14012.          enddo
14012.       endif
14013.       $F_A35 = seat_spectrum%cont%i_scale_fnc_cont%dim_2%EX
14013.       $F_A36 = seat_spectrum%cont%i_scale_fnc_cont%dim_1%EX
14013.       if ( and( -$F_A36, -$F_A35 ) < 0 ) then
14013.          $SC_spectrum_I37 = seat_spectrum%cont%i_scale_fnc_cont%dim_2%SM
14013.          $SC_spectrum_I36 = seat_spectrum%cont%i_scale_fnc_cont%dim_2%EX
14013.          $SC_spectrum_I38 = seat_spectrum%cont%i_scale_fnc_cont%dim_2%LB
14013.          $SC_spectrum_I34 = seat_spectrum%cont%i_scale_fnc_cont%dim_1%SM
14013.          $SC_spectrum_I33 = seat_spectrum%cont%i_scale_fnc_cont%dim_1%EX
14013.          $SC_spectrum_I35 = seat_spectrum%cont%i_scale_fnc_cont%dim_1%LB
14013.          $I_L14013_40 = 0
14013.          do
14013.             $I_L14013_30 = 0
14013. !dir$ ivdep
14013.             do
14013.                (seat_spectrum%cont%i_scale_fnc_cont%base_addr)($SC_spectrum_I35 + $I_L14013_30, $SC_spectrum_I38 + $I_L14013_40, 0) = 0
14013.                $I_L14013_30 = 1 + $I_L14013_30
14013.                if ( $I_L14013_30 >= $F_A36 ) exit
14013.             enddo
14013.             $I_L14013_40 = 1 + $I_L14013_40
14013.             if ( $I_L14013_40 >= $F_A35 ) exit
14013.          enddo
14013.       endif
14014.       $F_A37 = seat_spectrum%cont%scale_cont%dim_3%EX
14014.       $F_A38 = seat_spectrum%cont%scale_cont%dim_2%EX
14014.       $F_A39 = seat_spectrum%cont%scale_cont%dim_1%EX
14014.       if ( and( and( -$F_A38, -$F_A37 ), -$F_A39 ) < 0 ) then
14014.          $SC_spectrum_I46 = seat_spectrum%cont%scale_cont%dim_3%SM
14014.          $SC_spectrum_I45 = seat_spectrum%cont%scale_cont%dim_3%EX
14014.          $SC_spectrum_I47 = seat_spectrum%cont%scale_cont%dim_3%LB
14014.          $SC_spectrum_I43 = seat_spectrum%cont%scale_cont%dim_2%SM
14014.          $SC_spectrum_I42 = seat_spectrum%cont%scale_cont%dim_2%EX
14014.          $SC_spectrum_I44 = seat_spectrum%cont%scale_cont%dim_2%LB
14014.          $SC_spectrum_I40 = seat_spectrum%cont%scale_cont%dim_1%SM
14014.          $SC_spectrum_I39 = seat_spectrum%cont%scale_cont%dim_1%EX
14014.          $SC_spectrum_I41 = seat_spectrum%cont%scale_cont%dim_1%LB
14014.          $I_L14014_48 = 0
14014.          do
14014.             $I_L14014_42 = 0
14014.             do
14014.                $I_L14014_32 = 0
14014. !dir$ ivdep
14014.                do
14014.                   (seat_spectrum%cont%scale_cont%base_addr)($SC_spectrum_I41 + $I_L14014_32, $SC_spectrum_I44 + $I_L14014_42, $SC_spectrum_I47 + $I_L14014_48, 0) = 0.0
14014.                   $I_L14014_32 = 1 + $I_L14014_32
14014.                   if ( $I_L14014_32 >= $F_A39 ) exit
14014.                enddo
14014.                $I_L14014_42 = 1 + $I_L14014_42
14014.                if ( $I_L14014_42 >= $F_A38 ) exit
14014.             enddo
14014.             $I_L14014_48 = 1 + $I_L14014_48
14014.             if ( $I_L14014_48 >= $F_A37 ) exit
14014.          enddo
14014.       endif
14015.       $F_A40 = seat_spectrum%cont%p_ref_cont%dim_2%EX
14015.       $F_A41 = seat_spectrum%cont%p_ref_cont%dim_1%EX
14015.       if ( and( -$F_A41, -$F_A40 ) < 0 ) then
14015.          $SC_spectrum_I52 = seat_spectrum%cont%p_ref_cont%dim_2%SM
14015.          $SC_spectrum_I51 = seat_spectrum%cont%p_ref_cont%dim_2%EX
14015.          $SC_spectrum_I53 = seat_spectrum%cont%p_ref_cont%dim_2%LB
14015.          $SC_spectrum_I49 = seat_spectrum%cont%p_ref_cont%dim_1%SM
14015.          $SC_spectrum_I48 = seat_spectrum%cont%p_ref_cont%dim_1%EX
14015.          $SC_spectrum_I50 = seat_spectrum%cont%p_ref_cont%dim_1%LB
14015.          $I_L14015_44 = 0
14015.          do
14015.             $I_L14015_34 = 0
14015. !dir$ ivdep
14015.             do
14015.                (seat_spectrum%cont%p_ref_cont%base_addr)($SC_spectrum_I50 + $I_L14015_34, $SC_spectrum_I53 + $I_L14015_44, 0) = 0.0
14015.                $I_L14015_34 = 1 + $I_L14015_34
14015.                if ( $I_L14015_34 >= $F_A41 ) exit
14015.             enddo
14015.             $I_L14015_44 = 1 + $I_L14015_44
14015.             if ( $I_L14015_44 >= $F_A40 ) exit
14015.          enddo
14015.       endif
14018.       $Unit_temp_O0 = iu_spc
14018.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$441,  _substr(t$440,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14020.       $t_S5 = seat_spectrum%basic%n_band
14020.       i = 1
14020.       if ( seat_spectrum%basic%n_band > 0 ) then
14020.          $I_L14020_46 = 0
14020.          do
14020.             i = ( 1 + $I_L14020_46 )
14021.             $t_S1 = (seat_spectrum%cont%n_band_continuum%base_addr)(i, 0)
14021.             if ( $t_S1 > 0 ) then
14021.                $I_L14021_36 = 0
14021.                do
14022.                   $Unit_temp_O1 = iu_spc
14022.                   t$6392 = _fread( _clist( 0, 1, 3, $Unit_temp_O1, ios, Null_Arg, t$443,  _substr(t$442,1,15), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P0(:( 0, 2, 1 )), 0x2000200000000L ) ) )
14022.                   idum_band = $_IOitem_P0(0)
14022.                   idum_continuum = $_IOitem_P0(1)
14022.                   idum_fnc = $_IOitem_P0(2)
14024.                   if ( ios /= 0 ) then
14025.                      _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$445,  _substr(t$444,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_9_0_0', 0x800600000000L ), _iotype( 'continua in band could not be read.', 0x800600000000L ) ) )
14028.                      seat_ierr = 1
14028.                      goto 30
14028.                   endif
14031.                   (seat_spectrum%cont%i_scale_fnc_cont%base_addr)(idum_band, idum_continuum, 0) = idum_fnc
14033.                   $Unit_temp_O2 = iu_spc
14033.                   _fread( _clist( 0, 0, 2, $Unit_temp_O2, Null_Arg, Null_Arg, t$447,  _substr(t$446,1,16), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14034.                   if ( ( idum_continuum < seat_spectrum%cont%p_ref_cont%dim_1%LB .or. idum_continuum > -1 + seat_spectrum%cont%p_ref_cont%dim_1%LB + seat_spectrum%cont%p_ref_cont%dim_1%EX ) /= .false. ) then
14034.                       _substr(t$6394,1,13) = 'Rad_UKMO.f90'
14034.                       _substr(t$6395,1,11) = 'P_REF_CONT'
14034.                      t$6396 = seat_spectrum%cont%p_ref_cont%dim_1%LB
14034.                      t$6397 = -1 + seat_spectrum%cont%p_ref_cont%dim_1%LB + seat_spectrum%cont%p_ref_cont%dim_1%EX
14034.                      t$6398 = idum_continuum
14034.                      call _bounds_error(  _substr(t$6394,1,13), 14034,  _substr(t$6395,1,11), 1, t$6396, t$6397, t$6398, t$6393 )
14034.                   endif
14034.                   if ( ( idum_band < seat_spectrum%cont%p_ref_cont%dim_2%LB .or. idum_band > -1 + seat_spectrum%cont%p_ref_cont%dim_2%LB + seat_spectrum%cont%p_ref_cont%dim_2%EX ) /= .false. ) then
14034.                       _substr(t$6400,1,13) = 'Rad_UKMO.f90'
14034.                       _substr(t$6401,1,11) = 'P_REF_CONT'
14034.                      t$6402 = seat_spectrum%cont%p_ref_cont%dim_2%LB
14034.                      t$6403 = -1 + seat_spectrum%cont%p_ref_cont%dim_2%LB + seat_spectrum%cont%p_ref_cont%dim_2%EX
14034.                      t$6404 = idum_band
14034.                      call _bounds_error(  _substr(t$6400,1,13), 14034,  _substr(t$6401,1,11), 2, t$6402, t$6403, t$6404, t$6399 )
14034.                   endif
14033.                   $Unit_temp_O3 = iu_spc
14033.                   $IOindex_O4 = idum_continuum
14033.                   $IOindex_O5 = idum_band
14033.                   _fread( _clist( 0, 0, 0, $Unit_temp_O3, Null_Arg, Null_Arg, t$447,  _substr(t$446,1,16), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%cont%p_ref_cont%base_addr)($IOindex_O4, $IOindex_O5, 0), 0x804060300000000L ) ) )
14035.                   if ( ( idum_continuum < seat_spectrum%cont%t_ref_cont%dim_1%LB .or. idum_continuum > -1 + seat_spectrum%cont%t_ref_cont%dim_1%LB + seat_spectrum%cont%t_ref_cont%dim_1%EX ) /= .false. ) then
14035.                       _substr(t$6406,1,13) = 'Rad_UKMO.f90'
14035.                       _substr(t$6407,1,11) = 'T_REF_CONT'
14035.                      t$6408 = seat_spectrum%cont%t_ref_cont%dim_1%LB
14035.                      t$6409 = -1 + seat_spectrum%cont%t_ref_cont%dim_1%LB + seat_spectrum%cont%t_ref_cont%dim_1%EX
14035.                      t$6410 = idum_continuum
14035.                      call _bounds_error(  _substr(t$6406,1,13), 14035,  _substr(t$6407,1,11), 1, t$6408, t$6409, t$6410, t$6405 )
14035.                   endif
14035.                   if ( ( idum_band < seat_spectrum%cont%t_ref_cont%dim_2%LB .or. idum_band > -1 + seat_spectrum%cont%t_ref_cont%dim_2%LB + seat_spectrum%cont%t_ref_cont%dim_2%EX ) /= .false. ) then
14035.                       _substr(t$6412,1,13) = 'Rad_UKMO.f90'
14035.                       _substr(t$6413,1,11) = 'T_REF_CONT'
14035.                      t$6414 = seat_spectrum%cont%t_ref_cont%dim_2%LB
14035.                      t$6415 = -1 + seat_spectrum%cont%t_ref_cont%dim_2%LB + seat_spectrum%cont%t_ref_cont%dim_2%EX
14035.                      t$6416 = idum_band
14035.                      call _bounds_error(  _substr(t$6412,1,13), 14035,  _substr(t$6413,1,11), 2, t$6414, t$6415, t$6416, t$6411 )
14035.                   endif
14033.                   $Unit_temp_O6 = iu_spc
14033.                   $IOindex_O7 = idum_continuum
14033.                   $IOindex_O8 = idum_band
14033.                   _fread( _clist( 0, 0, 0, $Unit_temp_O6, Null_Arg, Null_Arg, t$447,  _substr(t$446,1,16), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%cont%t_ref_cont%base_addr)($IOindex_O7, $IOindex_O8, 0), 0x804060300000000L ) ) )
14033.                   $Unit_temp_O9 = iu_spc
14033.                   _fread( _clist( 0, 0, 1, $Unit_temp_O9, Null_Arg, Null_Arg, t$447,  _substr(t$446,1,16), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14037.                   $Unit_temp_O10 = iu_spc
14037.                   t$6417 = _fread( _clist( 0, 1, 2, $Unit_temp_O10, ios, Null_Arg, t$449,  _substr(t$448,1,36), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14037.                   if ( t$6417 == 0 ) then
14039.                      if ( ( idum_band < seat_spectrum%cont%k_cont%dim_1%LB .or. idum_band > -1 + seat_spectrum%cont%k_cont%dim_1%LB + seat_spectrum%cont%k_cont%dim_1%EX ) /= .false. ) then
14039.                          _substr(t$6419,1,13) = 'Rad_UKMO.f90'
14039.                          _substr(t$6420,1,7) = 'K_CONT'
14039.                         t$6396 = seat_spectrum%cont%k_cont%dim_1%LB
14039.                         t$6397 = -1 + seat_spectrum%cont%k_cont%dim_1%LB + seat_spectrum%cont%k_cont%dim_1%EX
14039.                         t$6398 = idum_band
14039.                         call _bounds_error(  _substr(t$6419,1,13), 14039,  _substr(t$6420,1,7), 1, t$6396, t$6397, t$6398, t$6418 )
14039.                      endif
14039.                      if ( ( idum_continuum < seat_spectrum%cont%k_cont%dim_2%LB .or. idum_continuum > -1 + seat_spectrum%cont%k_cont%dim_2%LB + seat_spectrum%cont%k_cont%dim_2%EX ) /= .false. ) then
14039.                          _substr(t$6422,1,13) = 'Rad_UKMO.f90'
14039.                          _substr(t$6423,1,7) = 'K_CONT'
14039.                         t$6402 = seat_spectrum%cont%k_cont%dim_2%LB
14039.                         t$6403 = -1 + seat_spectrum%cont%k_cont%dim_2%LB + seat_spectrum%cont%k_cont%dim_2%EX
14039.                         t$6404 = idum_continuum
14039.                         call _bounds_error(  _substr(t$6422,1,13), 14039,  _substr(t$6423,1,7), 2, t$6402, t$6403, t$6404, t$6421 )
14039.                      endif
14037.                      $Unit_temp_O11 = iu_spc
14037.                      $IOindex_O12 = idum_band
14037.                      $IOindex_O13 = idum_continuum
14037.                      t$6417 = _fread( _clist( 0, 1, 0, $Unit_temp_O11, ios, Null_Arg, t$449,  _substr(t$448,1,36), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%cont%k_cont%base_addr)($IOindex_O12, $IOindex_O13, 0), 0x804060300000000L ) ) )
14037.                      if ( t$6417 == 0 ) then
14037.                         $t_S2 = n_scale_variable(idum_fnc)
14037.                         if ( $t_S2 > 0 ) then
14037.                            $I_L14037_26 = 0
14037.                            do
14040.                               if ( ( ( 1 + $I_L14037_26 ) < seat_spectrum%cont%scale_cont%dim_1%LB .or. ( 1 + $I_L14037_26 ) > -1 + seat_spectrum%cont%scale_cont%dim_1%LB + seat_spectrum%cont%scale_cont%dim_1%EX ) /= .false. ) then
14040.                                   _substr(t$6428,1,13) = 'Rad_UKMO.f90'
14040.                                   _substr(t$6429,1,11) = 'SCALE_CONT'
14040.                                  t$6408 = seat_spectrum%cont%scale_cont%dim_1%LB
14040.                                  t$6409 = -1 + seat_spectrum%cont%scale_cont%dim_1%LB + seat_spectrum%cont%scale_cont%dim_1%EX
14040.                                  t$6410 = 1 + $I_L14037_26
14040.                                  call _bounds_error(  _substr(t$6428,1,13), 14040,  _substr(t$6429,1,11), 1, t$6408, t$6409, t$6410, t$6427 )
14040.                               endif
14040.                               if ( ( idum_band < seat_spectrum%cont%scale_cont%dim_2%LB .or. idum_band > -1 + seat_spectrum%cont%scale_cont%dim_2%LB + seat_spectrum%cont%scale_cont%dim_2%EX ) /= .false. ) then
14040.                                   _substr(t$6431,1,13) = 'Rad_UKMO.f90'
14040.                                   _substr(t$6432,1,11) = 'SCALE_CONT'
14040.                                  t$6414 = seat_spectrum%cont%scale_cont%dim_2%LB
14040.                                  t$6415 = -1 + seat_spectrum%cont%scale_cont%dim_2%LB + seat_spectrum%cont%scale_cont%dim_2%EX
14040.                                  t$6416 = idum_band
14040.                                  call _bounds_error(  _substr(t$6431,1,13), 14040,  _substr(t$6432,1,11), 2, t$6414, t$6415, t$6416, t$6430 )
14040.                               endif
14040.                               if ( ( idum_continuum < seat_spectrum%cont%scale_cont%dim_3%LB .or. idum_continuum > -1 + seat_spectrum%cont%scale_cont%dim_3%LB + seat_spectrum%cont%scale_cont%dim_3%EX ) /= .false. ) then
14040.                                   _substr(t$6434,1,13) = 'Rad_UKMO.f90'
14040.                                   _substr(t$6435,1,11) = 'SCALE_CONT'
14040.                                  t$6436 = seat_spectrum%cont%scale_cont%dim_3%LB
14040.                                  t$6437 = -1 + seat_spectrum%cont%scale_cont%dim_3%LB + seat_spectrum%cont%scale_cont%dim_3%EX
14040.                                  t$6438 = idum_continuum
14040.                                  call _bounds_error(  _substr(t$6434,1,13), 14040,  _substr(t$6435,1,11), 3, t$6436, t$6437, t$6438, t$6433 )
14040.                               endif
14037.                               $Unit_temp_O14 = iu_spc
14037.                               $IOindex_O15 = 1 + $I_L14037_26
14037.                               $IOindex_O16 = idum_band
14037.                               $IOindex_O17 = idum_continuum
14037.                               t$6417 = _fread( _clist( 0, 1, 0, $Unit_temp_O14, ios, Null_Arg, t$449,  _substr(t$448,1,36), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%cont%scale_cont%base_addr)($IOindex_O15, $IOindex_O16, $IOindex_O17, 0), 0x804060300000000L ) ) )
14037.                               if ( t$6417 /= 0 ) goto 20
14037.                               $I_L14037_26 = 1 + $I_L14037_26
14037.                               if ( $I_L14037_26 >= $t_S2 ) exit
14037.                            enddo
14037.                            goto 10
14037.                         else
14037.    10                      continue
14037.                            $Unit_temp_O18 = iu_spc
14037.                            t$6417 = _fread( _clist( 0, 1, 1, $Unit_temp_O18, ios, Null_Arg, t$449,  _substr(t$448,1,36), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14037.                         endif
14037.                      endif
14037.                   endif
14037.    20             continue
14042.                   if ( ios /= 0 ) then
14043.                      _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$451,  _substr(t$450,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_9_0_0', 0x800600000000L ), _iotype( 'continuum data could not be read.', 0x800600000000L ) ) )
14046.                      seat_ierr = 1
14046.                      goto 30
14046.                   endif
14049.                   $I_L14021_36 = 1 + $I_L14021_36
14049.                   if ( $I_L14021_36 >= $t_S1 ) exit
14049.                enddo
14050.                $I_L14020_46 = 1 + $I_L14020_46
14049.             else
14049.             endif
14049.             if ( $I_L14020_46 >= $t_S5 ) exit
14049.          enddo
14050.          i = ( 1 + $t_S5 )
14050.       endif
14050.    30 continue
14055.       return
14055.       end
14055.       
14060.       
14060.       subroutine read_block_10_0_0_int
14080.       if ( seat_spectrum%drop%l_drop_type%header%assoc /= 1 ) then
14081.          seat_spectrum%drop%l_drop_type%header%a_contig = 1
14081.          seat_spectrum%drop%l_drop_type%dim_1%LB = 1
14081.          seat_spectrum%drop%l_drop_type%dim_1%EX = _zla( 0, (nd_drop_type%base_addr)(0) )
14081.          seat_spectrum%drop%l_drop_type%dim_1%SM = 1
14081.          $_allo_P1(0) = 0x1000000000001L
14081.          $_allo_P1(1) = loc( seat_spectrum%drop%l_drop_type )
14081.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
14082.          $F_A34 = (nd_drop_type%base_addr)(0)
14082.          if ( (nd_drop_type%base_addr)(0) > 0 ) then
14082.             $SC_spectrum_I2 = seat_spectrum%drop%l_drop_type%dim_1%EX
14082.             $I_L14082_22 = 0
14082. !dir$ ivdep
14082.             do
14082.                (seat_spectrum%drop%l_drop_type%base_addr)(1 + $I_L14082_22, 0) = .false.
14082.                $I_L14082_22 = 1 + $I_L14082_22
14082.                if ( $I_L14082_22 >= $F_A34 ) exit
14082.             enddo
14082.          endif
14083.          seat_spectrum%drop%i_drop_parm%header%a_contig = 1
14083.          seat_spectrum%drop%i_drop_parm%dim_1%LB = 1
14083.          seat_spectrum%drop%i_drop_parm%dim_1%EX = ( max( 0, (nd_drop_type%base_addr)(0) ) )
14083.          seat_spectrum%drop%i_drop_parm%dim_1%SM = 1
14083.          $_allo_P2(0) = 0x1000000000001L
14083.          $_allo_P2(1) = loc( seat_spectrum%drop%i_drop_parm )
14083.          call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
14084.          seat_spectrum%drop%parm_min_dim%header%a_contig = 1
14084.          seat_spectrum%drop%parm_min_dim%dim_1%LB = 1
14084.          seat_spectrum%drop%parm_min_dim%dim_1%EX = ( max( 0, (nd_drop_type%base_addr)(0) ) )
14084.          seat_spectrum%drop%parm_min_dim%dim_1%SM = 1
14084.          $_allo_P3(0) = 0x1000000000001L
14084.          $_allo_P3(1) = loc( seat_spectrum%drop%parm_min_dim )
14084.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
14085.          seat_spectrum%drop%parm_max_dim%header%a_contig = 1
14085.          seat_spectrum%drop%parm_max_dim%dim_1%LB = 1
14085.          seat_spectrum%drop%parm_max_dim%dim_1%EX = ( max( 0, (nd_drop_type%base_addr)(0) ) )
14085.          seat_spectrum%drop%parm_max_dim%dim_1%SM = 1
14085.          $_allo_P4(0) = 0x1000000000001L
14085.          $_allo_P4(1) = loc( seat_spectrum%drop%parm_max_dim )
14085.          call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
14086.          seat_spectrum%drop%n_phf%header%a_contig = 1
14086.          seat_spectrum%drop%n_phf%dim_1%LB = 1
14086.          seat_spectrum%drop%n_phf%dim_1%EX = ( max( 0, (nd_drop_type%base_addr)(0) ) )
14086.          seat_spectrum%drop%n_phf%dim_1%SM = 1
14086.          $_allo_P5(0) = 0x1000000000001L
14086.          $_allo_P5(1) = loc( seat_spectrum%drop%n_phf )
14086.          call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
14087.          seat_spectrum%drop%parm_list%header%a_contig = 1
14087.          seat_spectrum%drop%parm_list%dim_1%LB = 1
14087.          seat_spectrum%drop%parm_list%dim_1%EX = ( max( 0, (nd_cloud_parameter%base_addr)(0) ) )
14087.          seat_spectrum%drop%parm_list%dim_1%SM = 1
14087.          seat_spectrum%drop%parm_list%dim_2%LB = 1
14087.          seat_spectrum%drop%parm_list%dim_2%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14087.          seat_spectrum%drop%parm_list%dim_2%SM = ( max( 0, (nd_cloud_parameter%base_addr)(0) ) )
14087.          seat_spectrum%drop%parm_list%dim_3%LB = 1
14087.          seat_spectrum%drop%parm_list%dim_3%EX = ( max( 0, (nd_drop_type%base_addr)(0) ) )
14087.          seat_spectrum%drop%parm_list%dim_3%SM = ( max( 0, (nd_cloud_parameter%base_addr)(0) ) * max( 0, (nd_band%base_addr)(0) ) )
14087.          $_allo_P6(0) = 0x1000000000001L
14087.          $_allo_P6(1) = loc( seat_spectrum%drop%parm_list )
14087.          call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
14087.       endif
14092.       $Unit_temp_O0 = iu_spc
14092.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$453,  _substr(t$452,1,33), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P0(:( 0, 2, 1 )), 0x2000200000000L ) ) )
14092.       i_drop = $_IOitem_P0(0)
14092.       i_parametrization_drop = $_IOitem_P0(1)
14092.       i_dummy = $_IOitem_P0(2)
14094.       if ( i_drop > (nd_drop_type%base_addr)(0) ) then
14095.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$455,  _substr(t$454,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_10_0_0', 0x800600000000L ), _iotype( 'Indexing number of droplet exceeds maximum permitted value:', 0x800600000000L ), _iotype( 'Increase npd_drop_type and recompile.', 0x800600000000L ) ) )
14099.          seat_ierr = 1
14101.       else if ( i_parametrization_drop == 1 ) then
14101.          goto 10
14101.       else if ( i_parametrization_drop == 2 ) then
14101.          goto 10
14101.       else if ( i_parametrization_drop == 5 ) then
14101.    10    continue
14111.          (seat_spectrum%drop%parm_min_dim%base_addr)(i_drop, 0) = 0.0
14112.          (seat_spectrum%drop%parm_max_dim%base_addr)(i_drop, 0) = 0.0
14114.          (seat_spectrum%drop%n_phf%base_addr)(i_drop, 0) = 1
14119.          $t_S2 = seat_spectrum%basic%n_band
14119.          i = 1
14119.          if ( seat_spectrum%basic%n_band <= 0 ) then
14103.             goto 20
14103.          else if ( i_dummy > 0 ) then
14119.             $I_L14119_24 = 0
14119.             do
14119.                i = ( 1 + $I_L14119_24 )
14120.                $Unit_temp_O1 = iu_spc
14120.                t$6442 = _fread( _clist( 0, 1, 2, $Unit_temp_O1, ios, Null_Arg, t$457,  _substr(t$456,1,21), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14120.                if ( t$6442 == 0 ) then
14120.                   $I_L14120_18 = 0
14120.                   do
14121.                      if ( ( ( 1 + $I_L14120_18 ) < seat_spectrum%drop%parm_list%dim_1%LB .or. ( 1 + $I_L14120_18 ) > -1 + seat_spectrum%drop%parm_list%dim_1%LB + seat_spectrum%drop%parm_list%dim_1%EX ) /= .false. ) then
14121.                          _substr(t$6447,1,13) = 'Rad_UKMO.f90'
14121.                          _substr(t$6448,1,10) = 'PARM_LIST'
14121.                         t$6449 = seat_spectrum%drop%parm_list%dim_1%LB
14121.                         t$6450 = -1 + seat_spectrum%drop%parm_list%dim_1%LB + seat_spectrum%drop%parm_list%dim_1%EX
14121.                         t$6451 = 1 + $I_L14120_18
14121.                         call _bounds_error(  _substr(t$6447,1,13), 14121,  _substr(t$6448,1,10), 1, t$6449, t$6450, t$6451, t$6446 )
14121.                      endif
14121.                      if ( ( i < seat_spectrum%drop%parm_list%dim_2%LB .or. i > -1 + seat_spectrum%drop%parm_list%dim_2%LB + seat_spectrum%drop%parm_list%dim_2%EX ) /= .false. ) then
14121.                          _substr(t$6453,1,13) = 'Rad_UKMO.f90'
14121.                          _substr(t$6454,1,10) = 'PARM_LIST'
14121.                         t$6455 = seat_spectrum%drop%parm_list%dim_2%LB
14121.                         t$6456 = -1 + seat_spectrum%drop%parm_list%dim_2%LB + seat_spectrum%drop%parm_list%dim_2%EX
14121.                         t$6457 = i
14121.                         call _bounds_error(  _substr(t$6453,1,13), 14121,  _substr(t$6454,1,10), 2, t$6455, t$6456, t$6457, t$6452 )
14121.                      endif
14121.                      if ( ( i_drop < seat_spectrum%drop%parm_list%dim_3%LB .or. i_drop > -1 + seat_spectrum%drop%parm_list%dim_3%LB + seat_spectrum%drop%parm_list%dim_3%EX ) /= .false. ) then
14121.                          _substr(t$6459,1,13) = 'Rad_UKMO.f90'
14121.                          _substr(t$6460,1,10) = 'PARM_LIST'
14121.                         t$6461 = seat_spectrum%drop%parm_list%dim_3%LB
14121.                         t$6462 = -1 + seat_spectrum%drop%parm_list%dim_3%LB + seat_spectrum%drop%parm_list%dim_3%EX
14121.                         t$6463 = i_drop
14121.                         call _bounds_error(  _substr(t$6459,1,13), 14121,  _substr(t$6460,1,10), 3, t$6461, t$6462, t$6463, t$6458 )
14121.                      endif
14120.                      $Unit_temp_O2 = iu_spc
14120.                      $IOindex_O3 = 1 + $I_L14120_18
14120.                      $IOindex_O4 = i
14120.                      $IOindex_O5 = i_drop
14120.                      t$6442 = _fread( _clist( 0, 1, 0, $Unit_temp_O2, ios, Null_Arg, t$457,  _substr(t$456,1,21), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%drop%parm_list%base_addr)($IOindex_O3, $IOindex_O4, $IOindex_O5, 0), 0x804060300000000L ) ) )
14120.                      if ( t$6442 /= 0 ) goto 30
14120.                      $I_L14120_18 = 1 + $I_L14120_18
14120.                      if ( $I_L14120_18 >= i_dummy ) exit
14120.                   enddo
14120.                   $Unit_temp_O6 = iu_spc
14120.                   t$6442 = _fread( _clist( 0, 1, 1, $Unit_temp_O6, ios, Null_Arg, t$457,  _substr(t$456,1,21), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14120.                endif
14120.    30          continue
14124.                if ( ios /= 0 ) then
14120.                   goto 40
14120.                endif
14131.                $I_L14119_24 = 1 + $I_L14119_24
14131.                if ( $I_L14119_24 >= $t_S2 ) exit
14131.             enddo
14131.             goto 50
14131.          else
14131.             $SC_spectrum_I0 = seat_spectrum%basic%n_band
14119.             $I_L14119_20 = 0
14119.             do
14120.                $Unit_temp_O1 = iu_spc
14120.                t$6442 = _fread( _clist( 0, 1, 2, $Unit_temp_O1, ios, Null_Arg, t$457,  _substr(t$456,1,21), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14120.                if ( t$6442 == 0 ) then
14120.                   $Unit_temp_O6 = iu_spc
14120.                   t$6442 = _fread( _clist( 0, 1, 1, $Unit_temp_O6, ios, Null_Arg, t$457,  _substr(t$456,1,21), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14120.                endif
14124.                if ( ios /= 0 ) then
14119.                   i = ( 1 + $I_L14119_20 )
14119.    40             continue
14125.                   _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$459,  _substr(t$458,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_10_0_0', 0x800600000000L ), _iotype( 'data for droplets are not in the correct format.', 0x800600000000L ) ) )
14128.                   seat_ierr = 1
14128.                   goto 60
14128.                endif
14131.                $I_L14119_20 = 1 + $I_L14119_20
14131.                if ( $I_L14119_20 >= $SC_spectrum_I0 ) exit
14131.             enddo
14131.    50       continue
14131.             i = ( 1 + $t_S2 )
14131.    20       continue
14143.             (seat_spectrum%drop%l_drop_type%base_addr)(i_drop, 0) = .true.
14144.             (seat_spectrum%drop%i_drop_parm%base_addr)(i_drop, 0) = i_parametrization_drop
14144.          endif
14144.       else
14134.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$461,  _substr(t$460,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_10_0_0', 0x800600000000L ), _iotype( 'an unknown parametrization scheme has been specified.', 0x800600000000L ) ) )
14137.          seat_ierr = 1
14137.       endif
14137.    60 continue
14149.       return
14149.       end
14149.       
14154.       
14154.       subroutine read_block_10_0_1_int
14178.       if ( seat_spectrum%drop%l_drop_type%header%assoc /= 1 ) then
14179.          seat_spectrum%drop%l_drop_type%header%a_contig = 1
14179.          seat_spectrum%drop%l_drop_type%dim_1%LB = 1
14179.          seat_spectrum%drop%l_drop_type%dim_1%EX = _zla( 0, (nd_drop_type%base_addr)(0) )
14179.          seat_spectrum%drop%l_drop_type%dim_1%SM = 1
14179.          $_allo_P1(0) = 0x1000000000001L
14179.          $_allo_P1(1) = loc( seat_spectrum%drop%l_drop_type )
14179.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
14180.          $F_A34 = (nd_drop_type%base_addr)(0)
14180.          if ( (nd_drop_type%base_addr)(0) > 0 ) then
14180.             $SC_spectrum_I2 = seat_spectrum%drop%l_drop_type%dim_1%EX
14180.             $I_L14180_22 = 0
14180. !dir$ ivdep
14180.             do
14180.                (seat_spectrum%drop%l_drop_type%base_addr)(1 + $I_L14180_22, 0) = .false.
14180.                $I_L14180_22 = 1 + $I_L14180_22
14180.                if ( $I_L14180_22 >= $F_A34 ) exit
14180.             enddo
14180.          endif
14181.          seat_spectrum%drop%i_drop_parm%header%a_contig = 1
14181.          seat_spectrum%drop%i_drop_parm%dim_1%LB = 1
14181.          seat_spectrum%drop%i_drop_parm%dim_1%EX = ( max( 0, (nd_drop_type%base_addr)(0) ) )
14181.          seat_spectrum%drop%i_drop_parm%dim_1%SM = 1
14181.          $_allo_P2(0) = 0x1000000000001L
14181.          $_allo_P2(1) = loc( seat_spectrum%drop%i_drop_parm )
14181.          call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
14182.          seat_spectrum%drop%parm_min_dim%header%a_contig = 1
14182.          seat_spectrum%drop%parm_min_dim%dim_1%LB = 1
14182.          seat_spectrum%drop%parm_min_dim%dim_1%EX = ( max( 0, (nd_drop_type%base_addr)(0) ) )
14182.          seat_spectrum%drop%parm_min_dim%dim_1%SM = 1
14182.          $_allo_P3(0) = 0x1000000000001L
14182.          $_allo_P3(1) = loc( seat_spectrum%drop%parm_min_dim )
14182.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
14183.          seat_spectrum%drop%parm_max_dim%header%a_contig = 1
14183.          seat_spectrum%drop%parm_max_dim%dim_1%LB = 1
14183.          seat_spectrum%drop%parm_max_dim%dim_1%EX = ( max( 0, (nd_drop_type%base_addr)(0) ) )
14183.          seat_spectrum%drop%parm_max_dim%dim_1%SM = 1
14183.          $_allo_P4(0) = 0x1000000000001L
14183.          $_allo_P4(1) = loc( seat_spectrum%drop%parm_max_dim )
14183.          call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
14184.          seat_spectrum%drop%n_phf%header%a_contig = 1
14184.          seat_spectrum%drop%n_phf%dim_1%LB = 1
14184.          seat_spectrum%drop%n_phf%dim_1%EX = ( max( 0, (nd_drop_type%base_addr)(0) ) )
14184.          seat_spectrum%drop%n_phf%dim_1%SM = 1
14184.          $_allo_P5(0) = 0x1000000000001L
14184.          $_allo_P5(1) = loc( seat_spectrum%drop%n_phf )
14184.          call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
14185.          seat_spectrum%drop%parm_list%header%a_contig = 1
14185.          seat_spectrum%drop%parm_list%dim_1%LB = 1
14185.          seat_spectrum%drop%parm_list%dim_1%EX = ( max( 0, (nd_cloud_parameter%base_addr)(0) ) )
14185.          seat_spectrum%drop%parm_list%dim_1%SM = 1
14185.          seat_spectrum%drop%parm_list%dim_2%LB = 1
14185.          seat_spectrum%drop%parm_list%dim_2%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14185.          seat_spectrum%drop%parm_list%dim_2%SM = ( max( 0, (nd_cloud_parameter%base_addr)(0) ) )
14185.          seat_spectrum%drop%parm_list%dim_3%LB = 1
14185.          seat_spectrum%drop%parm_list%dim_3%EX = ( max( 0, (nd_drop_type%base_addr)(0) ) )
14185.          seat_spectrum%drop%parm_list%dim_3%SM = ( max( 0, (nd_cloud_parameter%base_addr)(0) ) * max( 0, (nd_band%base_addr)(0) ) )
14185.          $_allo_P6(0) = 0x1000000000001L
14185.          $_allo_P6(1) = loc( seat_spectrum%drop%parm_list )
14185.          call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
14185.       endif
14190.       $Unit_temp_O0 = iu_spc
14190.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$463,  _substr(t$462,1,33), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P0(:( 0, 2, 1 )), 0x2000200000000L ) ) )
14190.       i_drop = $_IOitem_P0(0)
14190.       i_parametrization_drop = $_IOitem_P0(1)
14190.       i_dummy = $_IOitem_P0(2)
14192.       if ( i_drop > (nd_drop_type%base_addr)(0) ) then
14193.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$465,  _substr(t$464,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_10_0_1', 0x800600000000L ), _iotype( 'The indexing number of a droplet exceeds the maximum permitted value:', 0x800600000000L ), _iotype( 'increase npd_drop_type and recompile.', 0x800600000000L ) ) )
14198.          seat_ierr = 1
14200.       else if ( i_parametrization_drop == 1 ) then
14200.          goto 10
14200.       else if ( i_parametrization_drop == 2 ) then
14200.          goto 10
14200.       else if ( i_parametrization_drop == 5 ) then
14200.    10    continue
14209.          (seat_spectrum%drop%n_phf%base_addr)(i_drop, 0) = 1
14211.          $Unit_temp_O1 = iu_spc
14211.          _fread( _clist( 0, 0, 2, $Unit_temp_O1, Null_Arg, Null_Arg, t$467,  _substr(t$466,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14212.          if ( ( i_drop < seat_spectrum%drop%parm_min_dim%dim_1%LB .or. i_drop > -1 + seat_spectrum%drop%parm_min_dim%dim_1%LB + seat_spectrum%drop%parm_min_dim%dim_1%EX ) /= .false. ) then
14212.              _substr(t$6465,1,13) = 'Rad_UKMO.f90'
14212.              _substr(t$6466,1,13) = 'PARM_MIN_DIM'
14212.             t$6467 = seat_spectrum%drop%parm_min_dim%dim_1%LB
14212.             t$6468 = -1 + seat_spectrum%drop%parm_min_dim%dim_1%LB + seat_spectrum%drop%parm_min_dim%dim_1%EX
14212.             t$6469 = i_drop
14212.             call _bounds_error(  _substr(t$6465,1,13), 14212,  _substr(t$6466,1,13), 1, t$6467, t$6468, t$6469, t$6464 )
14212.          endif
14211.          $Unit_temp_O2 = iu_spc
14211.          $IOindex_O3 = i_drop
14211.          _fread( _clist( 0, 0, 0, $Unit_temp_O2, Null_Arg, Null_Arg, t$467,  _substr(t$466,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%drop%parm_min_dim%base_addr)($IOindex_O3, 0), 0x804060300000000L ) ) )
14213.          if ( ( i_drop < seat_spectrum%drop%parm_max_dim%dim_1%LB .or. i_drop > -1 + seat_spectrum%drop%parm_max_dim%dim_1%LB + seat_spectrum%drop%parm_max_dim%dim_1%EX ) /= .false. ) then
14213.              _substr(t$6471,1,13) = 'Rad_UKMO.f90'
14213.              _substr(t$6472,1,13) = 'PARM_MAX_DIM'
14213.             t$6473 = seat_spectrum%drop%parm_max_dim%dim_1%LB
14213.             t$6474 = -1 + seat_spectrum%drop%parm_max_dim%dim_1%LB + seat_spectrum%drop%parm_max_dim%dim_1%EX
14213.             t$6475 = i_drop
14213.             call _bounds_error(  _substr(t$6471,1,13), 14213,  _substr(t$6472,1,13), 1, t$6473, t$6474, t$6475, t$6470 )
14213.          endif
14211.          $Unit_temp_O4 = iu_spc
14211.          $IOindex_O5 = i_drop
14211.          _fread( _clist( 0, 0, 0, $Unit_temp_O4, Null_Arg, Null_Arg, t$467,  _substr(t$466,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%drop%parm_max_dim%base_addr)($IOindex_O5, 0), 0x804060300000000L ) ) )
14211.          $Unit_temp_O6 = iu_spc
14211.          _fread( _clist( 0, 0, 1, $Unit_temp_O6, Null_Arg, Null_Arg, t$467,  _substr(t$466,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14217.          $t_S2 = seat_spectrum%basic%n_band
14217.          if ( seat_spectrum%basic%n_band <= 0 ) then
14215.             goto 20
14215.          else if ( i_dummy > 0 ) then
14217.             $I_L14217_24 = 0
14217.             do
14218.                $Unit_temp_O7 = iu_spc
14218.                t$6479 = _fread( _clist( 0, 1, 2, $Unit_temp_O7, ios, Null_Arg, t$469,  _substr(t$468,1,21), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14218.                if ( t$6479 == 0 ) then
14218.                   $I_L14218_18 = 0
14218.                   do
14219.                      if ( ( ( 1 + $I_L14218_18 ) < seat_spectrum%drop%parm_list%dim_1%LB .or. ( 1 + $I_L14218_18 ) > -1 + seat_spectrum%drop%parm_list%dim_1%LB + seat_spectrum%drop%parm_list%dim_1%EX ) /= .false. ) then
14219.                          _substr(t$6484,1,13) = 'Rad_UKMO.f90'
14219.                          _substr(t$6485,1,10) = 'PARM_LIST'
14219.                         t$6467 = seat_spectrum%drop%parm_list%dim_1%LB
14219.                         t$6468 = -1 + seat_spectrum%drop%parm_list%dim_1%LB + seat_spectrum%drop%parm_list%dim_1%EX
14219.                         t$6469 = 1 + $I_L14218_18
14219.                         call _bounds_error(  _substr(t$6484,1,13), 14219,  _substr(t$6485,1,10), 1, t$6467, t$6468, t$6469, t$6483 )
14219.                      endif
14219.                      if ( ( ( 1 + $I_L14217_24 ) < seat_spectrum%drop%parm_list%dim_2%LB .or. ( 1 + $I_L14217_24 ) > -1 + seat_spectrum%drop%parm_list%dim_2%LB + seat_spectrum%drop%parm_list%dim_2%EX ) /= .false. ) then
14219.                          _substr(t$6487,1,13) = 'Rad_UKMO.f90'
14219.                          _substr(t$6488,1,10) = 'PARM_LIST'
14219.                         t$6473 = seat_spectrum%drop%parm_list%dim_2%LB
14219.                         t$6474 = -1 + seat_spectrum%drop%parm_list%dim_2%LB + seat_spectrum%drop%parm_list%dim_2%EX
14219.                         t$6475 = 1 + $I_L14217_24
14219.                         call _bounds_error(  _substr(t$6487,1,13), 14219,  _substr(t$6488,1,10), 2, t$6473, t$6474, t$6475, t$6486 )
14219.                      endif
14219.                      if ( ( i_drop < seat_spectrum%drop%parm_list%dim_3%LB .or. i_drop > -1 + seat_spectrum%drop%parm_list%dim_3%LB + seat_spectrum%drop%parm_list%dim_3%EX ) /= .false. ) then
14219.                          _substr(t$6490,1,13) = 'Rad_UKMO.f90'
14219.                          _substr(t$6491,1,10) = 'PARM_LIST'
14219.                         t$6492 = seat_spectrum%drop%parm_list%dim_3%LB
14219.                         t$6493 = -1 + seat_spectrum%drop%parm_list%dim_3%LB + seat_spectrum%drop%parm_list%dim_3%EX
14219.                         t$6494 = i_drop
14219.                         call _bounds_error(  _substr(t$6490,1,13), 14219,  _substr(t$6491,1,10), 3, t$6492, t$6493, t$6494, t$6489 )
14219.                      endif
14218.                      $Unit_temp_O8 = iu_spc
14218.                      $IOindex_O9 = 1 + $I_L14218_18
14218.                      $IOindex_O10 = 1 + $I_L14217_24
14218.                      $IOindex_O11 = i_drop
14218.                      t$6479 = _fread( _clist( 0, 1, 0, $Unit_temp_O8, ios, Null_Arg, t$469,  _substr(t$468,1,21), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%drop%parm_list%base_addr)($IOindex_O9, $IOindex_O10, $IOindex_O11, 0), 0x804060300000000L ) ) )
14218.                      if ( t$6479 /= 0 ) goto 30
14218.                      $I_L14218_18 = 1 + $I_L14218_18
14218.                      if ( $I_L14218_18 >= i_dummy ) exit
14218.                   enddo
14218.                   $Unit_temp_O12 = iu_spc
14218.                   t$6479 = _fread( _clist( 0, 1, 1, $Unit_temp_O12, ios, Null_Arg, t$469,  _substr(t$468,1,21), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14218.                endif
14218.    30          continue
14221.                if ( ios /= 0 ) then
14218.                   goto 40
14218.                endif
14228.                $I_L14217_24 = 1 + $I_L14217_24
14228.                if ( $I_L14217_24 >= $t_S2 ) exit
14228.             enddo
14228.             goto 20
14228.          else
14228.             $SC_spectrum_I0 = seat_spectrum%basic%n_band
14217.             $I_L14217_20 = 0
14217.             do
14218.                $Unit_temp_O7 = iu_spc
14218.                t$6479 = _fread( _clist( 0, 1, 2, $Unit_temp_O7, ios, Null_Arg, t$469,  _substr(t$468,1,21), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14218.                if ( t$6479 == 0 ) then
14218.                   $Unit_temp_O12 = iu_spc
14218.                   t$6479 = _fread( _clist( 0, 1, 1, $Unit_temp_O12, ios, Null_Arg, t$469,  _substr(t$468,1,21), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14218.                endif
14221.                if ( ios /= 0 ) then
14218.    40             continue
14222.                   _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$471,  _substr(t$470,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_10_0_1', 0x800600000000L ), _iotype( 'Data for droplets are not in the correct format.', 0x800600000000L ) ) )
14225.                   seat_ierr = 1
14225.                   goto 50
14225.                endif
14228.                $I_L14217_20 = 1 + $I_L14217_20
14228.                if ( $I_L14217_20 >= $SC_spectrum_I0 ) exit
14228.             enddo
14228.    20       continue
14240.             (seat_spectrum%drop%l_drop_type%base_addr)(i_drop, 0) = .true.
14241.             (seat_spectrum%drop%i_drop_parm%base_addr)(i_drop, 0) = i_parametrization_drop
14241.          endif
14241.       else
14231.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$473,  _substr(t$472,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_10_0_1', 0x800600000000L ), _iotype( 'An unknown parametrization scheme has been specified.', 0x800600000000L ) ) )
14234.          seat_ierr = 1
14234.       endif
14234.    50 continue
14246.       return
14246.       end
14246.       
14251.       
14251.       subroutine read_block_10_0_2_int
14275.       if ( seat_spectrum%drop%l_drop_type%header%assoc /= 1 ) then
14276.          seat_spectrum%drop%l_drop_type%header%a_contig = 1
14276.          seat_spectrum%drop%l_drop_type%dim_1%LB = 1
14276.          seat_spectrum%drop%l_drop_type%dim_1%EX = _zla( 0, (nd_drop_type%base_addr)(0) )
14276.          seat_spectrum%drop%l_drop_type%dim_1%SM = 1
14276.          $_allo_P1(0) = 0x1000000000001L
14276.          $_allo_P1(1) = loc( seat_spectrum%drop%l_drop_type )
14276.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
14277.          $F_A34 = (nd_drop_type%base_addr)(0)
14277.          if ( (nd_drop_type%base_addr)(0) > 0 ) then
14277.             $SC_spectrum_I2 = seat_spectrum%drop%l_drop_type%dim_1%EX
14277.             $I_L14277_22 = 0
14277. !dir$ ivdep
14277.             do
14277.                (seat_spectrum%drop%l_drop_type%base_addr)(1 + $I_L14277_22, 0) = .false.
14277.                $I_L14277_22 = 1 + $I_L14277_22
14277.                if ( $I_L14277_22 >= $F_A34 ) exit
14277.             enddo
14277.          endif
14278.          seat_spectrum%drop%i_drop_parm%header%a_contig = 1
14278.          seat_spectrum%drop%i_drop_parm%dim_1%LB = 1
14278.          seat_spectrum%drop%i_drop_parm%dim_1%EX = ( max( 0, (nd_drop_type%base_addr)(0) ) )
14278.          seat_spectrum%drop%i_drop_parm%dim_1%SM = 1
14278.          $_allo_P2(0) = 0x1000000000001L
14278.          $_allo_P2(1) = loc( seat_spectrum%drop%i_drop_parm )
14278.          call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
14279.          seat_spectrum%drop%parm_min_dim%header%a_contig = 1
14279.          seat_spectrum%drop%parm_min_dim%dim_1%LB = 1
14279.          seat_spectrum%drop%parm_min_dim%dim_1%EX = ( max( 0, (nd_drop_type%base_addr)(0) ) )
14279.          seat_spectrum%drop%parm_min_dim%dim_1%SM = 1
14279.          $_allo_P3(0) = 0x1000000000001L
14279.          $_allo_P3(1) = loc( seat_spectrum%drop%parm_min_dim )
14279.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
14280.          seat_spectrum%drop%parm_max_dim%header%a_contig = 1
14280.          seat_spectrum%drop%parm_max_dim%dim_1%LB = 1
14280.          seat_spectrum%drop%parm_max_dim%dim_1%EX = ( max( 0, (nd_drop_type%base_addr)(0) ) )
14280.          seat_spectrum%drop%parm_max_dim%dim_1%SM = 1
14280.          $_allo_P4(0) = 0x1000000000001L
14280.          $_allo_P4(1) = loc( seat_spectrum%drop%parm_max_dim )
14280.          call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
14281.          seat_spectrum%drop%n_phf%header%a_contig = 1
14281.          seat_spectrum%drop%n_phf%dim_1%LB = 1
14281.          seat_spectrum%drop%n_phf%dim_1%EX = ( max( 0, (nd_drop_type%base_addr)(0) ) )
14281.          seat_spectrum%drop%n_phf%dim_1%SM = 1
14281.          $_allo_P5(0) = 0x1000000000001L
14281.          $_allo_P5(1) = loc( seat_spectrum%drop%n_phf )
14281.          call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
14282.          seat_spectrum%drop%parm_list%header%a_contig = 1
14282.          seat_spectrum%drop%parm_list%dim_1%LB = 1
14282.          seat_spectrum%drop%parm_list%dim_1%EX = ( max( 0, (nd_cloud_parameter%base_addr)(0) ) )
14282.          seat_spectrum%drop%parm_list%dim_1%SM = 1
14282.          seat_spectrum%drop%parm_list%dim_2%LB = 1
14282.          seat_spectrum%drop%parm_list%dim_2%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14282.          seat_spectrum%drop%parm_list%dim_2%SM = ( max( 0, (nd_cloud_parameter%base_addr)(0) ) )
14282.          seat_spectrum%drop%parm_list%dim_3%LB = 1
14282.          seat_spectrum%drop%parm_list%dim_3%EX = ( max( 0, (nd_drop_type%base_addr)(0) ) )
14282.          seat_spectrum%drop%parm_list%dim_3%SM = ( max( 0, (nd_cloud_parameter%base_addr)(0) ) * max( 0, (nd_band%base_addr)(0) ) )
14282.          $_allo_P6(0) = 0x1000000000001L
14282.          $_allo_P6(1) = loc( seat_spectrum%drop%parm_list )
14282.          call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
14282.       endif
14287.       $Unit_temp_O0 = iu_spc
14287.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$475,  _substr(t$474,1,33), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P0(:( 0, 2, 1 )), 0x2000200000000L ) ) )
14287.       i_drop = $_IOitem_P0(0)
14287.       i_parametrization_drop = $_IOitem_P0(1)
14287.       i_dummy = $_IOitem_P0(2)
14289.       if ( i_drop > (nd_drop_type%base_addr)(0) ) then
14290.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$477,  _substr(t$476,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_10_0_2', 0x800600000000L ), _iotype( 'The indexing number of a droplet exceeds the maximum permitted value:', 0x800600000000L ), _iotype( 'increase npd_drop_type and recompile.', 0x800600000000L ) ) )
14295.          seat_ierr = 1
14297.       else if ( i_parametrization_drop == 1 ) then
14297.          goto 10
14297.       else if ( i_parametrization_drop == 6 ) then
14297.          goto 10
14297.       else if ( i_parametrization_drop == 2 ) then
14297.          goto 10
14297.       else if ( i_parametrization_drop == 5 ) then
14297.    10    continue
14305.          if ( ( i_drop < seat_spectrum%drop%n_phf%dim_1%LB .or. i_drop > -1 + seat_spectrum%drop%n_phf%dim_1%LB + seat_spectrum%drop%n_phf%dim_1%EX ) /= .false. ) then
14305.              _substr(t$6496,1,13) = 'Rad_UKMO.f90'
14305.              _substr(t$6497,1,6) = 'N_PHF'
14305.             t$6498 = seat_spectrum%drop%n_phf%dim_1%LB
14305.             t$6499 = -1 + seat_spectrum%drop%n_phf%dim_1%LB + seat_spectrum%drop%n_phf%dim_1%EX
14305.             t$6500 = i_drop
14305.             call _bounds_error(  _substr(t$6496,1,13), 14305,  _substr(t$6497,1,6), 1, t$6498, t$6499, t$6500, t$6495 )
14305.          endif
14305.          $Unit_temp_O1 = iu_spc
14305.          $IOindex_O2 = i_drop
14305.          _fread( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$479,  _substr(t$478,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%drop%n_phf%base_addr)($IOindex_O2, 0), 0x2000200000000L ) ) )
14307.          $Unit_temp_O3 = iu_spc
14307.          _fread( _clist( 0, 0, 2, $Unit_temp_O3, Null_Arg, Null_Arg, t$481,  _substr(t$480,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14308.          if ( ( i_drop < seat_spectrum%drop%parm_min_dim%dim_1%LB .or. i_drop > -1 + seat_spectrum%drop%parm_min_dim%dim_1%LB + seat_spectrum%drop%parm_min_dim%dim_1%EX ) /= .false. ) then
14308.              _substr(t$6502,1,13) = 'Rad_UKMO.f90'
14308.              _substr(t$6503,1,13) = 'PARM_MIN_DIM'
14308.             t$6498 = seat_spectrum%drop%parm_min_dim%dim_1%LB
14308.             t$6499 = -1 + seat_spectrum%drop%parm_min_dim%dim_1%LB + seat_spectrum%drop%parm_min_dim%dim_1%EX
14308.             t$6500 = i_drop
14308.             call _bounds_error(  _substr(t$6502,1,13), 14308,  _substr(t$6503,1,13), 1, t$6498, t$6499, t$6500, t$6501 )
14308.          endif
14307.          $Unit_temp_O4 = iu_spc
14307.          $IOindex_O5 = i_drop
14307.          _fread( _clist( 0, 0, 0, $Unit_temp_O4, Null_Arg, Null_Arg, t$481,  _substr(t$480,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%drop%parm_min_dim%base_addr)($IOindex_O5, 0), 0x804060300000000L ) ) )
14309.          if ( ( i_drop < seat_spectrum%drop%parm_max_dim%dim_1%LB .or. i_drop > -1 + seat_spectrum%drop%parm_max_dim%dim_1%LB + seat_spectrum%drop%parm_max_dim%dim_1%EX ) /= .false. ) then
14309.              _substr(t$6505,1,13) = 'Rad_UKMO.f90'
14309.              _substr(t$6506,1,13) = 'PARM_MAX_DIM'
14309.             t$6507 = seat_spectrum%drop%parm_max_dim%dim_1%LB
14309.             t$6508 = -1 + seat_spectrum%drop%parm_max_dim%dim_1%LB + seat_spectrum%drop%parm_max_dim%dim_1%EX
14309.             t$6509 = i_drop
14309.             call _bounds_error(  _substr(t$6505,1,13), 14309,  _substr(t$6506,1,13), 1, t$6507, t$6508, t$6509, t$6504 )
14309.          endif
14307.          $Unit_temp_O6 = iu_spc
14307.          $IOindex_O7 = i_drop
14307.          _fread( _clist( 0, 0, 0, $Unit_temp_O6, Null_Arg, Null_Arg, t$481,  _substr(t$480,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%drop%parm_max_dim%base_addr)($IOindex_O7, 0), 0x804060300000000L ) ) )
14307.          $Unit_temp_O8 = iu_spc
14307.          _fread( _clist( 0, 0, 1, $Unit_temp_O8, Null_Arg, Null_Arg, t$481,  _substr(t$480,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14313.          $t_S2 = seat_spectrum%basic%n_band
14313.          if ( seat_spectrum%basic%n_band <= 0 ) then
14311.             goto 20
14311.          else if ( i_dummy > 0 ) then
14313.             $I_L14313_24 = 0
14313.             do
14314.                $Unit_temp_O9 = iu_spc
14314.                t$6513 = _fread( _clist( 0, 1, 2, $Unit_temp_O9, ios, Null_Arg, t$483,  _substr(t$482,1,21), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14314.                if ( t$6513 == 0 ) then
14314.                   $I_L14314_18 = 0
14314.                   do
14315.                      if ( ( ( 1 + $I_L14314_18 ) < seat_spectrum%drop%parm_list%dim_1%LB .or. ( 1 + $I_L14314_18 ) > -1 + seat_spectrum%drop%parm_list%dim_1%LB + seat_spectrum%drop%parm_list%dim_1%EX ) /= .false. ) then
14315.                          _substr(t$6518,1,13) = 'Rad_UKMO.f90'
14315.                          _substr(t$6519,1,10) = 'PARM_LIST'
14315.                         t$6498 = seat_spectrum%drop%parm_list%dim_1%LB
14315.                         t$6499 = -1 + seat_spectrum%drop%parm_list%dim_1%LB + seat_spectrum%drop%parm_list%dim_1%EX
14315.                         t$6500 = 1 + $I_L14314_18
14315.                         call _bounds_error(  _substr(t$6518,1,13), 14315,  _substr(t$6519,1,10), 1, t$6498, t$6499, t$6500, t$6517 )
14315.                      endif
14315.                      if ( ( ( 1 + $I_L14313_24 ) < seat_spectrum%drop%parm_list%dim_2%LB .or. ( 1 + $I_L14313_24 ) > -1 + seat_spectrum%drop%parm_list%dim_2%LB + seat_spectrum%drop%parm_list%dim_2%EX ) /= .false. ) then
14315.                          _substr(t$6521,1,13) = 'Rad_UKMO.f90'
14315.                          _substr(t$6522,1,10) = 'PARM_LIST'
14315.                         t$6507 = seat_spectrum%drop%parm_list%dim_2%LB
14315.                         t$6508 = -1 + seat_spectrum%drop%parm_list%dim_2%LB + seat_spectrum%drop%parm_list%dim_2%EX
14315.                         t$6509 = 1 + $I_L14313_24
14315.                         call _bounds_error(  _substr(t$6521,1,13), 14315,  _substr(t$6522,1,10), 2, t$6507, t$6508, t$6509, t$6520 )
14315.                      endif
14315.                      if ( ( i_drop < seat_spectrum%drop%parm_list%dim_3%LB .or. i_drop > -1 + seat_spectrum%drop%parm_list%dim_3%LB + seat_spectrum%drop%parm_list%dim_3%EX ) /= .false. ) then
14315.                          _substr(t$6524,1,13) = 'Rad_UKMO.f90'
14315.                          _substr(t$6525,1,10) = 'PARM_LIST'
14315.                         t$6526 = seat_spectrum%drop%parm_list%dim_3%LB
14315.                         t$6527 = -1 + seat_spectrum%drop%parm_list%dim_3%LB + seat_spectrum%drop%parm_list%dim_3%EX
14315.                         t$6528 = i_drop
14315.                         call _bounds_error(  _substr(t$6524,1,13), 14315,  _substr(t$6525,1,10), 3, t$6526, t$6527, t$6528, t$6523 )
14315.                      endif
14314.                      $Unit_temp_O10 = iu_spc
14314.                      $IOindex_O11 = 1 + $I_L14314_18
14314.                      $IOindex_O12 = 1 + $I_L14313_24
14314.                      $IOindex_O13 = i_drop
14314.                      t$6513 = _fread( _clist( 0, 1, 0, $Unit_temp_O10, ios, Null_Arg, t$483,  _substr(t$482,1,21), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%drop%parm_list%base_addr)($IOindex_O11, $IOindex_O12, $IOindex_O13, 0), 0x804060300000000L ) ) )
14314.                      if ( t$6513 /= 0 ) goto 30
14314.                      $I_L14314_18 = 1 + $I_L14314_18
14314.                      if ( $I_L14314_18 >= i_dummy ) exit
14314.                   enddo
14314.                   $Unit_temp_O14 = iu_spc
14314.                   t$6513 = _fread( _clist( 0, 1, 1, $Unit_temp_O14, ios, Null_Arg, t$483,  _substr(t$482,1,21), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14314.                endif
14314.    30          continue
14317.                if ( ios /= 0 ) then
14314.                   goto 40
14314.                endif
14324.                $I_L14313_24 = 1 + $I_L14313_24
14324.                if ( $I_L14313_24 >= $t_S2 ) exit
14324.             enddo
14324.             goto 20
14324.          else
14324.             $SC_spectrum_I0 = seat_spectrum%basic%n_band
14313.             $I_L14313_20 = 0
14313.             do
14314.                $Unit_temp_O9 = iu_spc
14314.                t$6513 = _fread( _clist( 0, 1, 2, $Unit_temp_O9, ios, Null_Arg, t$483,  _substr(t$482,1,21), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14314.                if ( t$6513 == 0 ) then
14314.                   $Unit_temp_O14 = iu_spc
14314.                   t$6513 = _fread( _clist( 0, 1, 1, $Unit_temp_O14, ios, Null_Arg, t$483,  _substr(t$482,1,21), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14314.                endif
14317.                if ( ios /= 0 ) then
14314.    40             continue
14318.                   _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$485,  _substr(t$484,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_10_0_2', 0x800600000000L ), _iotype( 'Data for droplets are not in the correct format.', 0x800600000000L ) ) )
14321.                   seat_ierr = 1
14321.                   goto 50
14321.                endif
14324.                $I_L14313_20 = 1 + $I_L14313_20
14324.                if ( $I_L14313_20 >= $SC_spectrum_I0 ) exit
14324.             enddo
14324.    20       continue
14336.             (seat_spectrum%drop%l_drop_type%base_addr)(i_drop, 0) = .true.
14337.             (seat_spectrum%drop%i_drop_parm%base_addr)(i_drop, 0) = i_parametrization_drop
14337.          endif
14337.       else
14327.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$487,  _substr(t$486,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_10_0_2', 0x800600000000L ), _iotype( 'An unknown parametrization scheme has been specified.', 0x800600000000L ) ) )
14330.          seat_ierr = 1
14330.       endif
14330.    50 continue
14342.       return
14342.       end
14342.       
14347.       
14347.       subroutine read_block_11_0_1_int
14360.       if ( seat_spectrum%aerosol%l_aero_spec%header%assoc /= 1 ) then
14361.          (nd_phase_term%base_addr)(0) = 1
14362.          seat_spectrum%aerosol%l_aero_spec%header%a_contig = 1
14362.          seat_spectrum%aerosol%l_aero_spec%dim_1%LB = 1
14362.          seat_spectrum%aerosol%l_aero_spec%dim_1%EX = _zla( 0, (nd_aerosol_species%base_addr)(0) )
14362.          seat_spectrum%aerosol%l_aero_spec%dim_1%SM = 1
14362.          $_allo_P0(0) = 0x1000000000001L
14362.          $_allo_P0(1) = loc( seat_spectrum%aerosol%l_aero_spec )
14362.          call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
14363.          $F_A34 = (nd_aerosol_species%base_addr)(0)
14363.          if ( (nd_aerosol_species%base_addr)(0) > 0 ) then
14363.             $SC_spectrum_I1 = seat_spectrum%aerosol%l_aero_spec%dim_1%EX
14363.             $I_L14363_10 = 0
14363. !dir$ ivdep
14363.             do
14363.                (seat_spectrum%aerosol%l_aero_spec%base_addr)(1 + $I_L14363_10, 0) = .false.
14363.                $I_L14363_10 = 1 + $I_L14363_10
14363.                if ( $I_L14363_10 >= $F_A34 ) exit
14363.             enddo
14363.          endif
14364.          seat_spectrum%aerosol%i_aerosol_parm%header%a_contig = 1
14364.          seat_spectrum%aerosol%i_aerosol_parm%dim_1%LB = 1
14364.          seat_spectrum%aerosol%i_aerosol_parm%dim_1%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14364.          seat_spectrum%aerosol%i_aerosol_parm%dim_1%SM = 1
14364.          $_allo_P1(0) = 0x1000000000001L
14364.          $_allo_P1(1) = loc( seat_spectrum%aerosol%i_aerosol_parm )
14364.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
14365.          seat_spectrum%aerosol%nhumidity%header%a_contig = 1
14365.          seat_spectrum%aerosol%nhumidity%dim_1%LB = 1
14365.          seat_spectrum%aerosol%nhumidity%dim_1%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14365.          seat_spectrum%aerosol%nhumidity%dim_1%SM = 1
14365.          $_allo_P2(0) = 0x1000000000001L
14365.          $_allo_P2(1) = loc( seat_spectrum%aerosol%nhumidity )
14365.          call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
14366.          seat_spectrum%aerosol%humidities%header%a_contig = 1
14366.          seat_spectrum%aerosol%humidities%dim_1%LB = 1
14366.          seat_spectrum%aerosol%humidities%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14366.          seat_spectrum%aerosol%humidities%dim_1%SM = 1
14366.          seat_spectrum%aerosol%humidities%dim_2%LB = 1
14366.          seat_spectrum%aerosol%humidities%dim_2%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14366.          seat_spectrum%aerosol%humidities%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14366.          $_allo_P3(0) = 0x1000000000001L
14366.          $_allo_P3(1) = loc( seat_spectrum%aerosol%humidities )
14366.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
14367.          seat_spectrum%aerosol%n_aerosol_phf_term%header%a_contig = 1
14367.          seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB = 1
14367.          seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14367.          seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%SM = 1
14367.          $_allo_P4(0) = 0x1000000000001L
14367.          $_allo_P4(1) = loc( seat_spectrum%aerosol%n_aerosol_phf_term )
14367.          call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
14368.          seat_spectrum%aerosol%abs%header%a_contig = 1
14368.          seat_spectrum%aerosol%abs%dim_1%LB = 1
14368.          seat_spectrum%aerosol%abs%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14368.          seat_spectrum%aerosol%abs%dim_1%SM = 1
14368.          seat_spectrum%aerosol%abs%dim_2%LB = 1
14368.          seat_spectrum%aerosol%abs%dim_2%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14368.          seat_spectrum%aerosol%abs%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14368.          seat_spectrum%aerosol%abs%dim_3%LB = 1
14368.          seat_spectrum%aerosol%abs%dim_3%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14368.          seat_spectrum%aerosol%abs%dim_3%SM = ( max( 0, (nd_aerosol_species%base_addr)(0) ) * max( 0, (nd_humidity%base_addr)(0) ) )
14368.          $_allo_P5(0) = 0x1000000000001L
14368.          $_allo_P5(1) = loc( seat_spectrum%aerosol%abs )
14368.          call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
14369.          seat_spectrum%aerosol%scat%header%a_contig = 1
14369.          seat_spectrum%aerosol%scat%dim_1%LB = 1
14369.          seat_spectrum%aerosol%scat%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14369.          seat_spectrum%aerosol%scat%dim_1%SM = 1
14369.          seat_spectrum%aerosol%scat%dim_2%LB = 1
14369.          seat_spectrum%aerosol%scat%dim_2%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14369.          seat_spectrum%aerosol%scat%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14369.          seat_spectrum%aerosol%scat%dim_3%LB = 1
14369.          seat_spectrum%aerosol%scat%dim_3%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14369.          seat_spectrum%aerosol%scat%dim_3%SM = ( max( 0, (nd_aerosol_species%base_addr)(0) ) * max( 0, (nd_humidity%base_addr)(0) ) )
14369.          $_allo_P6(0) = 0x1000000000001L
14369.          $_allo_P6(1) = loc( seat_spectrum%aerosol%scat )
14369.          call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
14370.          seat_spectrum%aerosol%phf_fnc%header%a_contig = 1
14370.          seat_spectrum%aerosol%phf_fnc%dim_1%LB = 1
14370.          seat_spectrum%aerosol%phf_fnc%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14370.          seat_spectrum%aerosol%phf_fnc%dim_1%SM = 1
14370.          seat_spectrum%aerosol%phf_fnc%dim_2%LB = 1
14370.          seat_spectrum%aerosol%phf_fnc%dim_2%EX = ( max( 0, (nd_phase_term%base_addr)(0) ) )
14370.          seat_spectrum%aerosol%phf_fnc%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14370.          seat_spectrum%aerosol%phf_fnc%dim_3%LB = 1
14370.          seat_spectrum%aerosol%phf_fnc%dim_3%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14370.          seat_spectrum%aerosol%phf_fnc%dim_3%SM = ( max( 0, (nd_humidity%base_addr)(0) ) * max( 0, (nd_phase_term%base_addr)(0) ) )
14370.          seat_spectrum%aerosol%phf_fnc%dim_4%LB = 1
14370.          seat_spectrum%aerosol%phf_fnc%dim_4%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14370.          seat_spectrum%aerosol%phf_fnc%dim_4%SM = ( max( 0, (nd_aerosol_species%base_addr)(0) ) * max( 0, (nd_humidity%base_addr)(0) ) * max( 0, (nd_phase_term%base_addr)(0) ) )
14370.          $_allo_P7(0) = 0x1000000000001L
14370.          $_allo_P7(1) = loc( seat_spectrum%aerosol%phf_fnc )
14370.          call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
14370.       endif
14373.       $Unit_temp_O0 = iu_spc
14373.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$489,  _substr(t$488,1,16), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i_species, 0x2000200000000L ) ) )
14376.       $t_S1 = seat_spectrum%basic%n_band
14376.       i = 1
14376.       if ( seat_spectrum%basic%n_band > 0 ) then
14376.          $I_L14376_8 = 0
14376.          do
14376.             i = ( 1 + $I_L14376_8 )
14377.             $Unit_temp_O1 = iu_spc
14377.             t$6532 = _fread( _clist( 0, 1, 2, $Unit_temp_O1, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14377.             if ( t$6532 == 0 ) then
14377.                $Unit_temp_O2 = iu_spc
14377.                t$6532 = _fread( _clist( 0, 1, 0, $Unit_temp_O2, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( idum, 0x2000200000000L ) ) )
14377.                if ( t$6532 == 0 ) then
14378.                   if ( ( 1 < seat_spectrum%aerosol%abs%dim_1%LB .or. 0 >= -1 + seat_spectrum%aerosol%abs%dim_1%LB + seat_spectrum%aerosol%abs%dim_1%EX ) /= .false. ) then
14378.                       _substr(t$6534,1,13) = 'Rad_UKMO.f90'
14378.                       _substr(t$6535,1,4) = 'ABS'
14378.                      t$6536 = seat_spectrum%aerosol%abs%dim_1%LB
14378.                      t$6537 = -1 + seat_spectrum%aerosol%abs%dim_1%LB + seat_spectrum%aerosol%abs%dim_1%EX
14378.                      call _bounds_error(  _substr(t$6534,1,13), 14378,  _substr(t$6535,1,4), 1, t$6536, t$6537, 1, t$6533 )
14378.                   endif
14378.                   if ( ( i_species < seat_spectrum%aerosol%abs%dim_2%LB .or. i_species > -1 + seat_spectrum%aerosol%abs%dim_2%LB + seat_spectrum%aerosol%abs%dim_2%EX ) /= .false. ) then
14378.                       _substr(t$6539,1,13) = 'Rad_UKMO.f90'
14378.                       _substr(t$6540,1,4) = 'ABS'
14378.                      t$6541 = seat_spectrum%aerosol%abs%dim_2%LB
14378.                      t$6542 = -1 + seat_spectrum%aerosol%abs%dim_2%LB + seat_spectrum%aerosol%abs%dim_2%EX
14378.                      t$6543 = i_species
14378.                      call _bounds_error(  _substr(t$6539,1,13), 14378,  _substr(t$6540,1,4), 2, t$6541, t$6542, t$6543, t$6538 )
14378.                   endif
14378.                   if ( ( i < seat_spectrum%aerosol%abs%dim_3%LB .or. i > -1 + seat_spectrum%aerosol%abs%dim_3%LB + seat_spectrum%aerosol%abs%dim_3%EX ) /= .false. ) then
14378.                       _substr(t$6545,1,13) = 'Rad_UKMO.f90'
14378.                       _substr(t$6546,1,4) = 'ABS'
14378.                      t$6547 = seat_spectrum%aerosol%abs%dim_3%LB
14378.                      t$6548 = -1 + seat_spectrum%aerosol%abs%dim_3%LB + seat_spectrum%aerosol%abs%dim_3%EX
14378.                      t$6549 = i
14378.                      call _bounds_error(  _substr(t$6545,1,13), 14378,  _substr(t$6546,1,4), 3, t$6547, t$6548, t$6549, t$6544 )
14378.                   endif
14377.                   $Unit_temp_O3 = iu_spc
14377.                   $IOindex_O4 = i_species
14377.                   $IOindex_O5 = i
14377.                   t$6532 = _fread( _clist( 0, 1, 0, $Unit_temp_O3, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%abs%base_addr)(1, $IOindex_O4, $IOindex_O5, 0), 0x804060300000000L ) ) )
14377.                   if ( t$6532 == 0 ) then
14379.                      if ( ( 1 < seat_spectrum%aerosol%scat%dim_1%LB .or. 0 >= -1 + seat_spectrum%aerosol%scat%dim_1%LB + seat_spectrum%aerosol%scat%dim_1%EX ) /= .false. ) then
14379.                          _substr(t$6551,1,13) = 'Rad_UKMO.f90'
14379.                          _substr(t$6552,1,5) = 'SCAT'
14379.                         t$6553 = seat_spectrum%aerosol%scat%dim_1%LB
14379.                         t$6554 = -1 + seat_spectrum%aerosol%scat%dim_1%LB + seat_spectrum%aerosol%scat%dim_1%EX
14379.                         call _bounds_error(  _substr(t$6551,1,13), 14379,  _substr(t$6552,1,5), 1, t$6553, t$6554, 1, t$6550 )
14379.                      endif
14379.                      if ( ( i_species < seat_spectrum%aerosol%scat%dim_2%LB .or. i_species > -1 + seat_spectrum%aerosol%scat%dim_2%LB + seat_spectrum%aerosol%scat%dim_2%EX ) /= .false. ) then
14379.                          _substr(t$6556,1,13) = 'Rad_UKMO.f90'
14379.                          _substr(t$6557,1,5) = 'SCAT'
14379.                         t$6558 = seat_spectrum%aerosol%scat%dim_2%LB
14379.                         t$6559 = -1 + seat_spectrum%aerosol%scat%dim_2%LB + seat_spectrum%aerosol%scat%dim_2%EX
14379.                         t$6560 = i_species
14379.                         call _bounds_error(  _substr(t$6556,1,13), 14379,  _substr(t$6557,1,5), 2, t$6558, t$6559, t$6560, t$6555 )
14379.                      endif
14379.                      if ( ( i < seat_spectrum%aerosol%scat%dim_3%LB .or. i > -1 + seat_spectrum%aerosol%scat%dim_3%LB + seat_spectrum%aerosol%scat%dim_3%EX ) /= .false. ) then
14379.                          _substr(t$6562,1,13) = 'Rad_UKMO.f90'
14379.                          _substr(t$6563,1,5) = 'SCAT'
14379.                         t$6564 = seat_spectrum%aerosol%scat%dim_3%LB
14379.                         t$6565 = -1 + seat_spectrum%aerosol%scat%dim_3%LB + seat_spectrum%aerosol%scat%dim_3%EX
14379.                         t$6566 = i
14379.                         call _bounds_error(  _substr(t$6562,1,13), 14379,  _substr(t$6563,1,5), 3, t$6564, t$6565, t$6566, t$6561 )
14379.                      endif
14377.                      $Unit_temp_O6 = iu_spc
14377.                      $IOindex_O7 = i_species
14377.                      $IOindex_O8 = i
14377.                      t$6532 = _fread( _clist( 0, 1, 0, $Unit_temp_O6, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%scat%base_addr)(1, $IOindex_O7, $IOindex_O8, 0), 0x804060300000000L ) ) )
14377.                      if ( t$6532 == 0 ) then
14380.                         if ( ( 1 < seat_spectrum%aerosol%phf_fnc%dim_1%LB .or. 0 >= -1 + seat_spectrum%aerosol%phf_fnc%dim_1%LB + seat_spectrum%aerosol%phf_fnc%dim_1%EX ) /= .false. ) then
14380.                             _substr(t$6568,1,13) = 'Rad_UKMO.f90'
14380.                             _substr(t$6569,1,8) = 'PHF_FNC'
14380.                            t$6570 = seat_spectrum%aerosol%phf_fnc%dim_1%LB
14380.                            t$6571 = -1 + seat_spectrum%aerosol%phf_fnc%dim_1%LB + seat_spectrum%aerosol%phf_fnc%dim_1%EX
14380.                            call _bounds_error(  _substr(t$6568,1,13), 14380,  _substr(t$6569,1,8), 1, t$6570, t$6571, 1, t$6567 )
14380.                         endif
14380.                         if ( ( 1 < seat_spectrum%aerosol%phf_fnc%dim_2%LB .or. 0 >= -1 + seat_spectrum%aerosol%phf_fnc%dim_2%LB + seat_spectrum%aerosol%phf_fnc%dim_2%EX ) /= .false. ) then
14380.                             _substr(t$6573,1,13) = 'Rad_UKMO.f90'
14380.                             _substr(t$6574,1,8) = 'PHF_FNC'
14380.                            t$6575 = seat_spectrum%aerosol%phf_fnc%dim_2%LB
14380.                            t$6576 = -1 + seat_spectrum%aerosol%phf_fnc%dim_2%LB + seat_spectrum%aerosol%phf_fnc%dim_2%EX
14380.                            call _bounds_error(  _substr(t$6573,1,13), 14380,  _substr(t$6574,1,8), 2, t$6575, t$6576, 1, t$6572 )
14380.                         endif
14380.                         if ( ( i_species < seat_spectrum%aerosol%phf_fnc%dim_3%LB .or. i_species > -1 + seat_spectrum%aerosol%phf_fnc%dim_3%LB + seat_spectrum%aerosol%phf_fnc%dim_3%EX ) /= .false. ) then
14380.                             _substr(t$6578,1,13) = 'Rad_UKMO.f90'
14380.                             _substr(t$6579,1,8) = 'PHF_FNC'
14380.                            t$6580 = seat_spectrum%aerosol%phf_fnc%dim_3%LB
14380.                            t$6581 = -1 + seat_spectrum%aerosol%phf_fnc%dim_3%LB + seat_spectrum%aerosol%phf_fnc%dim_3%EX
14380.                            t$6582 = i_species
14380.                            call _bounds_error(  _substr(t$6578,1,13), 14380,  _substr(t$6579,1,8), 3, t$6580, t$6581, t$6582, t$6577 )
14380.                         endif
14380.                         if ( ( i < seat_spectrum%aerosol%phf_fnc%dim_4%LB .or. i > -1 + seat_spectrum%aerosol%phf_fnc%dim_4%LB + seat_spectrum%aerosol%phf_fnc%dim_4%EX ) /= .false. ) then
14380.                             _substr(t$6584,1,13) = 'Rad_UKMO.f90'
14380.                             _substr(t$6585,1,8) = 'PHF_FNC'
14380.                            t$6586 = seat_spectrum%aerosol%phf_fnc%dim_4%LB
14380.                            t$6587 = -1 + seat_spectrum%aerosol%phf_fnc%dim_4%LB + seat_spectrum%aerosol%phf_fnc%dim_4%EX
14380.                            t$6588 = i
14380.                            call _bounds_error(  _substr(t$6584,1,13), 14380,  _substr(t$6585,1,8), 4, t$6586, t$6587, t$6588, t$6583 )
14380.                         endif
14377.                         $Unit_temp_O9 = iu_spc
14377.                         $IOindex_O10 = i_species
14377.                         $IOindex_O11 = i
14377.                         t$6532 = _fread( _clist( 0, 1, 0, $Unit_temp_O9, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%phf_fnc%base_addr)(1, 1, $IOindex_O10, $IOindex_O11, 0), 0x804060300000000L ) ) )
14377.                         if ( t$6532 == 0 ) then
14377.                            $Unit_temp_O12 = iu_spc
14377.                            t$6532 = _fread( _clist( 0, 1, 1, $Unit_temp_O12, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14377.                         endif
14377.                      endif
14377.                   endif
14377.                endif
14377.             endif
14381.             if ( ios /= 0 ) then
14382.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$491,  _substr(t$490,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_11_0_1', 0x800600000000L ) ) )
14384.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$493,  _substr(t$492,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'Dry aerosol scattering data are not in the correct format.', 0x800600000000L ) ) )
14386.                seat_ierr = 1
14386.                goto 20
14386.             endif
14389.             $I_L14376_8 = 1 + $I_L14376_8
14389.             if ( $I_L14376_8 >= $t_S1 ) exit
14389.          enddo
14389.          i = ( 1 + $t_S1 )
14389.          goto 10
14389.       else
14389.    10    continue
14390.          (seat_spectrum%aerosol%nhumidity%base_addr)(i_species, 0) = 0
14391.          (seat_spectrum%aerosol%i_aerosol_parm%base_addr)(i_species, 0) = 1
14392.          (seat_spectrum%aerosol%n_aerosol_phf_term%base_addr)(i_species, 0) = 1
14395.          (seat_spectrum%aerosol%l_aero_spec%base_addr)(i_species, 0) = .true.
14395.       endif
14395.    20 continue
14400.       return
14400.       end
14400.       
14405.       
14405.       subroutine read_block_11_0_2_int
14420.       if ( seat_spectrum%aerosol%l_aero_spec%header%assoc /= 1 ) then
14421.          seat_spectrum%aerosol%l_aero_spec%header%a_contig = 1
14421.          seat_spectrum%aerosol%l_aero_spec%dim_1%LB = 1
14421.          seat_spectrum%aerosol%l_aero_spec%dim_1%EX = _zla( 0, (nd_aerosol_species%base_addr)(0) )
14421.          seat_spectrum%aerosol%l_aero_spec%dim_1%SM = 1
14421.          $_allo_P0(0) = 0x1000000000001L
14421.          $_allo_P0(1) = loc( seat_spectrum%aerosol%l_aero_spec )
14421.          call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
14422.          $F_A34 = (nd_aerosol_species%base_addr)(0)
14422.          if ( (nd_aerosol_species%base_addr)(0) > 0 ) then
14422.             $SC_spectrum_I1 = seat_spectrum%aerosol%l_aero_spec%dim_1%EX
14422.             $I_L14422_16 = 0
14422. !dir$ ivdep
14422.             do
14422.                (seat_spectrum%aerosol%l_aero_spec%base_addr)(1 + $I_L14422_16, 0) = .false.
14422.                $I_L14422_16 = 1 + $I_L14422_16
14422.                if ( $I_L14422_16 >= $F_A34 ) exit
14422.             enddo
14422.          endif
14423.          seat_spectrum%aerosol%i_aerosol_parm%header%a_contig = 1
14423.          seat_spectrum%aerosol%i_aerosol_parm%dim_1%LB = 1
14423.          seat_spectrum%aerosol%i_aerosol_parm%dim_1%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14423.          seat_spectrum%aerosol%i_aerosol_parm%dim_1%SM = 1
14423.          $_allo_P1(0) = 0x1000000000001L
14423.          $_allo_P1(1) = loc( seat_spectrum%aerosol%i_aerosol_parm )
14423.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
14424.          seat_spectrum%aerosol%nhumidity%header%a_contig = 1
14424.          seat_spectrum%aerosol%nhumidity%dim_1%LB = 1
14424.          seat_spectrum%aerosol%nhumidity%dim_1%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14424.          seat_spectrum%aerosol%nhumidity%dim_1%SM = 1
14424.          $_allo_P2(0) = 0x1000000000001L
14424.          $_allo_P2(1) = loc( seat_spectrum%aerosol%nhumidity )
14424.          call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
14425.          seat_spectrum%aerosol%n_aerosol_phf_term%header%a_contig = 1
14425.          seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB = 1
14425.          seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14425.          seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%SM = 1
14425.          $_allo_P3(0) = 0x1000000000001L
14425.          $_allo_P3(1) = loc( seat_spectrum%aerosol%n_aerosol_phf_term )
14425.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
14426.          seat_spectrum%aerosol%humidities%header%a_contig = 1
14426.          seat_spectrum%aerosol%humidities%dim_1%LB = 1
14426.          seat_spectrum%aerosol%humidities%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14426.          seat_spectrum%aerosol%humidities%dim_1%SM = 1
14426.          seat_spectrum%aerosol%humidities%dim_2%LB = 1
14426.          seat_spectrum%aerosol%humidities%dim_2%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14426.          seat_spectrum%aerosol%humidities%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14426.          $_allo_P4(0) = 0x1000000000001L
14426.          $_allo_P4(1) = loc( seat_spectrum%aerosol%humidities )
14426.          call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
14426.       endif
14429.       $Unit_temp_O0 = iu_spc
14429.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$495,  _substr(t$494,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i_species, 0x2000200000000L ) ) )
14431.       if ( ( i_species < seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB .or. i_species > -1 + seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB + seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%EX ) /= .false. ) then
14431.           _substr(t$6590,1,13) = 'Rad_UKMO.f90'
14431.           _substr(t$6591,1,19) = 'N_AEROSOL_PHF_TERM'
14431.          t$6592 = seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB
14431.          t$6593 = -1 + seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB + seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%EX
14431.          t$6594 = i_species
14431.          call _bounds_error(  _substr(t$6590,1,13), 14431,  _substr(t$6591,1,19), 1, t$6592, t$6593, t$6594, t$6589 )
14431.       endif
14430.       $Unit_temp_O1 = iu_spc
14430.       $IOindex_O2 = i_species
14430.       _fread( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$497,  _substr(t$496,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%n_aerosol_phf_term%base_addr)($IOindex_O2, 0), 0x2000200000000L ) ) )
14433.       (nd_phase_term%base_addr)(0) = (seat_spectrum%aerosol%n_aerosol_phf_term%base_addr)(i_species, 0)
14434.       if ( seat_spectrum%aerosol%abs%header%assoc /= 1 ) then
14435.          seat_spectrum%aerosol%abs%header%a_contig = 1
14435.          seat_spectrum%aerosol%abs%dim_1%LB = 1
14435.          seat_spectrum%aerosol%abs%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14435.          seat_spectrum%aerosol%abs%dim_1%SM = 1
14435.          seat_spectrum%aerosol%abs%dim_2%LB = 1
14435.          seat_spectrum%aerosol%abs%dim_2%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14435.          seat_spectrum%aerosol%abs%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14435.          seat_spectrum%aerosol%abs%dim_3%LB = 1
14435.          seat_spectrum%aerosol%abs%dim_3%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14435.          seat_spectrum%aerosol%abs%dim_3%SM = ( max( 0, (nd_aerosol_species%base_addr)(0) ) * max( 0, (nd_humidity%base_addr)(0) ) )
14435.          $_allo_P5(0) = 0x1000000000001L
14435.          $_allo_P5(1) = loc( seat_spectrum%aerosol%abs )
14435.          call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
14437.          seat_spectrum%aerosol%scat%header%a_contig = 1
14437.          seat_spectrum%aerosol%scat%dim_1%LB = 1
14437.          seat_spectrum%aerosol%scat%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14437.          seat_spectrum%aerosol%scat%dim_1%SM = 1
14437.          seat_spectrum%aerosol%scat%dim_2%LB = 1
14437.          seat_spectrum%aerosol%scat%dim_2%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14437.          seat_spectrum%aerosol%scat%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14437.          seat_spectrum%aerosol%scat%dim_3%LB = 1
14437.          seat_spectrum%aerosol%scat%dim_3%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14437.          seat_spectrum%aerosol%scat%dim_3%SM = ( max( 0, (nd_aerosol_species%base_addr)(0) ) * max( 0, (nd_humidity%base_addr)(0) ) )
14437.          $_allo_P6(0) = 0x1000000000001L
14437.          $_allo_P6(1) = loc( seat_spectrum%aerosol%scat )
14437.          call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
14439.          seat_spectrum%aerosol%phf_fnc%header%a_contig = 1
14439.          seat_spectrum%aerosol%phf_fnc%dim_1%LB = 1
14439.          seat_spectrum%aerosol%phf_fnc%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14439.          seat_spectrum%aerosol%phf_fnc%dim_1%SM = 1
14439.          seat_spectrum%aerosol%phf_fnc%dim_2%LB = 1
14439.          seat_spectrum%aerosol%phf_fnc%dim_2%EX = ( max( 0, (nd_phase_term%base_addr)(0) ) )
14439.          seat_spectrum%aerosol%phf_fnc%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14439.          seat_spectrum%aerosol%phf_fnc%dim_3%LB = 1
14439.          seat_spectrum%aerosol%phf_fnc%dim_3%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14439.          seat_spectrum%aerosol%phf_fnc%dim_3%SM = ( max( 0, (nd_humidity%base_addr)(0) ) * max( 0, (nd_phase_term%base_addr)(0) ) )
14439.          seat_spectrum%aerosol%phf_fnc%dim_4%LB = 1
14439.          seat_spectrum%aerosol%phf_fnc%dim_4%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14439.          seat_spectrum%aerosol%phf_fnc%dim_4%SM = ( max( 0, (nd_aerosol_species%base_addr)(0) ) * max( 0, (nd_humidity%base_addr)(0) ) * max( 0, (nd_phase_term%base_addr)(0) ) )
14439.          $_allo_P7(0) = 0x1000000000001L
14439.          $_allo_P7(1) = loc( seat_spectrum%aerosol%phf_fnc )
14439.          call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
14439.       endif
14444.       $t_S3 = seat_spectrum%basic%n_band
14444.       i = 1
14444.       if ( seat_spectrum%basic%n_band > 0 ) then
14444.          $I_L14444_18 = 0
14444.          do
14444.             i = ( 1 + $I_L14444_18 )
14445.             $Unit_temp_O3 = iu_spc
14445.             t$6598 = _fread( _clist( 0, 1, 2, $Unit_temp_O3, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14445.             if ( t$6598 == 0 ) then
14445.                $Unit_temp_O4 = iu_spc
14445.                t$6598 = _fread( _clist( 0, 1, 0, $Unit_temp_O4, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( idum, 0x2000200000000L ) ) )
14445.                if ( t$6598 == 0 ) then
14446.                   if ( ( 1 < seat_spectrum%aerosol%abs%dim_1%LB .or. 0 >= -1 + seat_spectrum%aerosol%abs%dim_1%LB + seat_spectrum%aerosol%abs%dim_1%EX ) /= .false. ) then
14446.                       _substr(t$6600,1,13) = 'Rad_UKMO.f90'
14446.                       _substr(t$6601,1,4) = 'ABS'
14446.                      t$6592 = seat_spectrum%aerosol%abs%dim_1%LB
14446.                      t$6593 = -1 + seat_spectrum%aerosol%abs%dim_1%LB + seat_spectrum%aerosol%abs%dim_1%EX
14446.                      call _bounds_error(  _substr(t$6600,1,13), 14446,  _substr(t$6601,1,4), 1, t$6592, t$6593, 1, t$6599 )
14446.                   endif
14446.                   if ( ( i_species < seat_spectrum%aerosol%abs%dim_2%LB .or. i_species > -1 + seat_spectrum%aerosol%abs%dim_2%LB + seat_spectrum%aerosol%abs%dim_2%EX ) /= .false. ) then
14446.                       _substr(t$6603,1,13) = 'Rad_UKMO.f90'
14446.                       _substr(t$6604,1,4) = 'ABS'
14446.                      t$6594 = seat_spectrum%aerosol%abs%dim_2%LB
14446.                      t$6605 = -1 + seat_spectrum%aerosol%abs%dim_2%LB + seat_spectrum%aerosol%abs%dim_2%EX
14446.                      t$6606 = i_species
14446.                      call _bounds_error(  _substr(t$6603,1,13), 14446,  _substr(t$6604,1,4), 2, t$6594, t$6605, t$6606, t$6602 )
14446.                   endif
14446.                   if ( ( i < seat_spectrum%aerosol%abs%dim_3%LB .or. i > -1 + seat_spectrum%aerosol%abs%dim_3%LB + seat_spectrum%aerosol%abs%dim_3%EX ) /= .false. ) then
14446.                       _substr(t$6608,1,13) = 'Rad_UKMO.f90'
14446.                       _substr(t$6609,1,4) = 'ABS'
14446.                      t$6610 = seat_spectrum%aerosol%abs%dim_3%LB
14446.                      t$6611 = -1 + seat_spectrum%aerosol%abs%dim_3%LB + seat_spectrum%aerosol%abs%dim_3%EX
14446.                      t$6612 = i
14446.                      call _bounds_error(  _substr(t$6608,1,13), 14446,  _substr(t$6609,1,4), 3, t$6610, t$6611, t$6612, t$6607 )
14446.                   endif
14445.                   $Unit_temp_O5 = iu_spc
14445.                   $IOindex_O6 = i_species
14445.                   $IOindex_O7 = i
14445.                   t$6598 = _fread( _clist( 0, 1, 0, $Unit_temp_O5, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%abs%base_addr)(1, $IOindex_O6, $IOindex_O7, 0), 0x804060300000000L ) ) )
14445.                   if ( t$6598 == 0 ) then
14447.                      if ( ( 1 < seat_spectrum%aerosol%scat%dim_1%LB .or. 0 >= -1 + seat_spectrum%aerosol%scat%dim_1%LB + seat_spectrum%aerosol%scat%dim_1%EX ) /= .false. ) then
14447.                          _substr(t$6614,1,13) = 'Rad_UKMO.f90'
14447.                          _substr(t$6615,1,5) = 'SCAT'
14447.                         t$6616 = seat_spectrum%aerosol%scat%dim_1%LB
14447.                         t$6617 = -1 + seat_spectrum%aerosol%scat%dim_1%LB + seat_spectrum%aerosol%scat%dim_1%EX
14447.                         call _bounds_error(  _substr(t$6614,1,13), 14447,  _substr(t$6615,1,5), 1, t$6616, t$6617, 1, t$6613 )
14447.                      endif
14447.                      if ( ( i_species < seat_spectrum%aerosol%scat%dim_2%LB .or. i_species > -1 + seat_spectrum%aerosol%scat%dim_2%LB + seat_spectrum%aerosol%scat%dim_2%EX ) /= .false. ) then
14447.                          _substr(t$6619,1,13) = 'Rad_UKMO.f90'
14447.                          _substr(t$6620,1,5) = 'SCAT'
14447.                         t$6621 = seat_spectrum%aerosol%scat%dim_2%LB
14447.                         t$6622 = -1 + seat_spectrum%aerosol%scat%dim_2%LB + seat_spectrum%aerosol%scat%dim_2%EX
14447.                         t$6623 = i_species
14447.                         call _bounds_error(  _substr(t$6619,1,13), 14447,  _substr(t$6620,1,5), 2, t$6621, t$6622, t$6623, t$6618 )
14447.                      endif
14447.                      if ( ( i < seat_spectrum%aerosol%scat%dim_3%LB .or. i > -1 + seat_spectrum%aerosol%scat%dim_3%LB + seat_spectrum%aerosol%scat%dim_3%EX ) /= .false. ) then
14447.                          _substr(t$6625,1,13) = 'Rad_UKMO.f90'
14447.                          _substr(t$6626,1,5) = 'SCAT'
14447.                         t$6627 = seat_spectrum%aerosol%scat%dim_3%LB
14447.                         t$6628 = -1 + seat_spectrum%aerosol%scat%dim_3%LB + seat_spectrum%aerosol%scat%dim_3%EX
14447.                         t$6629 = i
14447.                         call _bounds_error(  _substr(t$6625,1,13), 14447,  _substr(t$6626,1,5), 3, t$6627, t$6628, t$6629, t$6624 )
14447.                      endif
14445.                      $Unit_temp_O8 = iu_spc
14445.                      $IOindex_O9 = i_species
14445.                      $IOindex_O10 = i
14445.                      t$6598 = _fread( _clist( 0, 1, 0, $Unit_temp_O8, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%scat%base_addr)(1, $IOindex_O9, $IOindex_O10, 0), 0x804060300000000L ) ) )
14445.                      if ( t$6598 == 0 ) then
14449.                         if ( ( i_species < seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB .or. i_species > -1 + seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB + seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%EX ) /= .false. ) then
14449.                             _substr(t$6631,1,13) = 'Rad_UKMO.f90'
14449.                             _substr(t$6632,1,19) = 'N_AEROSOL_PHF_TERM'
14449.                            t$6633 = seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB
14449.                            t$6634 = -1 + seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB + seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%EX
14449.                            t$6635 = i_species
14449.                            call _bounds_error(  _substr(t$6631,1,13), 14449,  _substr(t$6632,1,19), 1, t$6633, t$6634, t$6635, t$6630 )
14449.                         endif
14445.                         $t_S1 = (seat_spectrum%aerosol%n_aerosol_phf_term%base_addr)(i_species, 0)
14445.                         if ( $t_S1 > 0 ) then
14445.                            $I_L14445_14 = 0
14445.                            do
14448.                               if ( ( 1 < seat_spectrum%aerosol%phf_fnc%dim_1%LB .or. 0 >= -1 + seat_spectrum%aerosol%phf_fnc%dim_1%LB + seat_spectrum%aerosol%phf_fnc%dim_1%EX ) /= .false. ) then
14448.                                   _substr(t$6640,1,13) = 'Rad_UKMO.f90'
14448.                                   _substr(t$6641,1,8) = 'PHF_FNC'
14448.                                  t$6642 = seat_spectrum%aerosol%phf_fnc%dim_1%LB
14448.                                  t$6643 = -1 + seat_spectrum%aerosol%phf_fnc%dim_1%LB + seat_spectrum%aerosol%phf_fnc%dim_1%EX
14448.                                  call _bounds_error(  _substr(t$6640,1,13), 14448,  _substr(t$6641,1,8), 1, t$6642, t$6643, 1, t$6639 )
14448.                               endif
14448.                               if ( ( ( 1 + $I_L14445_14 ) < seat_spectrum%aerosol%phf_fnc%dim_2%LB .or. ( 1 + $I_L14445_14 ) > -1 + seat_spectrum%aerosol%phf_fnc%dim_2%LB + seat_spectrum%aerosol%phf_fnc%dim_2%EX ) /= .false. ) then
14448.                                   _substr(t$6645,1,13) = 'Rad_UKMO.f90'
14448.                                   _substr(t$6646,1,8) = 'PHF_FNC'
14448.                                  t$6647 = seat_spectrum%aerosol%phf_fnc%dim_2%LB
14448.                                  t$6648 = -1 + seat_spectrum%aerosol%phf_fnc%dim_2%LB + seat_spectrum%aerosol%phf_fnc%dim_2%EX
14448.                                  t$6649 = 1 + $I_L14445_14
14448.                                  call _bounds_error(  _substr(t$6645,1,13), 14448,  _substr(t$6646,1,8), 2, t$6647, t$6648, t$6649, t$6644 )
14448.                               endif
14448.                               if ( ( i_species < seat_spectrum%aerosol%phf_fnc%dim_3%LB .or. i_species > -1 + seat_spectrum%aerosol%phf_fnc%dim_3%LB + seat_spectrum%aerosol%phf_fnc%dim_3%EX ) /= .false. ) then
14448.                                   _substr(t$6651,1,13) = 'Rad_UKMO.f90'
14448.                                   _substr(t$6652,1,8) = 'PHF_FNC'
14448.                                  t$6653 = seat_spectrum%aerosol%phf_fnc%dim_3%LB
14448.                                  t$6654 = -1 + seat_spectrum%aerosol%phf_fnc%dim_3%LB + seat_spectrum%aerosol%phf_fnc%dim_3%EX
14448.                                  t$6655 = i_species
14448.                                  call _bounds_error(  _substr(t$6651,1,13), 14448,  _substr(t$6652,1,8), 3, t$6653, t$6654, t$6655, t$6650 )
14448.                               endif
14448.                               if ( ( i < seat_spectrum%aerosol%phf_fnc%dim_4%LB .or. i > -1 + seat_spectrum%aerosol%phf_fnc%dim_4%LB + seat_spectrum%aerosol%phf_fnc%dim_4%EX ) /= .false. ) then
14448.                                   _substr(t$6657,1,13) = 'Rad_UKMO.f90'
14448.                                   _substr(t$6658,1,8) = 'PHF_FNC'
14448.                                  t$6659 = seat_spectrum%aerosol%phf_fnc%dim_4%LB
14448.                                  t$6660 = -1 + seat_spectrum%aerosol%phf_fnc%dim_4%LB + seat_spectrum%aerosol%phf_fnc%dim_4%EX
14448.                                  t$6661 = i
14448.                                  call _bounds_error(  _substr(t$6657,1,13), 14448,  _substr(t$6658,1,8), 4, t$6659, t$6660, t$6661, t$6656 )
14448.                               endif
14445.                               $Unit_temp_O11 = iu_spc
14445.                               $IOindex_O12 = 1 + $I_L14445_14
14445.                               $IOindex_O13 = i_species
14445.                               $IOindex_O14 = i
14445.                               t$6598 = _fread( _clist( 0, 1, 0, $Unit_temp_O11, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%phf_fnc%base_addr)(1, $IOindex_O12, $IOindex_O13, $IOindex_O14, 0), 0x804060300000000L ) ) )
14445.                               if ( t$6598 /= 0 ) goto 20
14445.                               $I_L14445_14 = 1 + $I_L14445_14
14445.                               if ( $I_L14445_14 >= $t_S1 ) exit
14445.                            enddo
14445.                            goto 10
14445.                         else
14445.    10                      continue
14445.                            $Unit_temp_O15 = iu_spc
14445.                            t$6598 = _fread( _clist( 0, 1, 1, $Unit_temp_O15, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14445.                         endif
14445.                      endif
14445.                   endif
14445.                endif
14445.             endif
14445.    20       continue
14450.             if ( ios /= 0 ) then
14451.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$499,  _substr(t$498,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_11_0_2', 0x800600000000L ) ) )
14453.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$501,  _substr(t$500,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'Dry aerosol scattering data are not in the correct format.', 0x800600000000L ) ) )
14455.                seat_ierr = 1
14455.                goto 40
14455.             endif
14458.             $I_L14444_18 = 1 + $I_L14444_18
14458.             if ( $I_L14444_18 >= $t_S3 ) exit
14458.          enddo
14458.          i = ( 1 + $t_S3 )
14458.          goto 30
14458.       else
14458.    30    continue
14459.          (seat_spectrum%aerosol%nhumidity%base_addr)(i_species, 0) = 0
14460.          if ( (seat_spectrum%aerosol%n_aerosol_phf_term%base_addr)(i_species, 0) == 1 ) then
14461.             (seat_spectrum%aerosol%i_aerosol_parm%base_addr)(i_species, 0) = 1
14462.          else if ( (seat_spectrum%aerosol%n_aerosol_phf_term%base_addr)(i_species, 0) > 1 ) then
14463.             (seat_spectrum%aerosol%i_aerosol_parm%base_addr)(i_species, 0) = 4
14463.          endif
14467.          (seat_spectrum%aerosol%l_aero_spec%base_addr)(i_species, 0) = .true.
14467.       endif
14467.    40 continue
14472.       return
14472.       end
14472.       
14477.       
14477.       subroutine read_block_11_1_0_int
14490.       (nd_phase_term%base_addr)(0) = 1
14491.       if ( seat_spectrum%aerosol%l_aero_spec%header%assoc /= 1 ) then
14492.          seat_spectrum%aerosol%l_aero_spec%header%a_contig = 1
14492.          seat_spectrum%aerosol%l_aero_spec%dim_1%LB = 1
14492.          seat_spectrum%aerosol%l_aero_spec%dim_1%EX = _zla( 0, (nd_aerosol_species%base_addr)(0) )
14492.          seat_spectrum%aerosol%l_aero_spec%dim_1%SM = 1
14492.          $_allo_P0(0) = 0x1000000000001L
14492.          $_allo_P0(1) = loc( seat_spectrum%aerosol%l_aero_spec )
14492.          call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
14493.          $F_A34 = (nd_aerosol_species%base_addr)(0)
14493.          if ( (nd_aerosol_species%base_addr)(0) > 0 ) then
14493.             $SC_spectrum_I1 = seat_spectrum%aerosol%l_aero_spec%dim_1%EX
14493.             $I_L14493_16 = 0
14493. !dir$ ivdep
14493.             do
14493.                (seat_spectrum%aerosol%l_aero_spec%base_addr)(1 + $I_L14493_16, 0) = .false.
14493.                $I_L14493_16 = 1 + $I_L14493_16
14493.                if ( $I_L14493_16 >= $F_A34 ) exit
14493.             enddo
14493.          endif
14494.          seat_spectrum%aerosol%i_aerosol_parm%header%a_contig = 1
14494.          seat_spectrum%aerosol%i_aerosol_parm%dim_1%LB = 1
14494.          seat_spectrum%aerosol%i_aerosol_parm%dim_1%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14494.          seat_spectrum%aerosol%i_aerosol_parm%dim_1%SM = 1
14494.          $_allo_P1(0) = 0x1000000000001L
14494.          $_allo_P1(1) = loc( seat_spectrum%aerosol%i_aerosol_parm )
14494.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
14495.          seat_spectrum%aerosol%n_aerosol_phf_term%header%a_contig = 1
14495.          seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB = 1
14495.          seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14495.          seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%SM = 1
14495.          $_allo_P2(0) = 0x1000000000001L
14495.          $_allo_P2(1) = loc( seat_spectrum%aerosol%n_aerosol_phf_term )
14495.          call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
14496.          seat_spectrum%aerosol%nhumidity%header%a_contig = 1
14496.          seat_spectrum%aerosol%nhumidity%dim_1%LB = 1
14496.          seat_spectrum%aerosol%nhumidity%dim_1%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14496.          seat_spectrum%aerosol%nhumidity%dim_1%SM = 1
14496.          $_allo_P3(0) = 0x1000000000001L
14496.          $_allo_P3(1) = loc( seat_spectrum%aerosol%nhumidity )
14496.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
14497.          seat_spectrum%aerosol%humidities%header%a_contig = 1
14497.          seat_spectrum%aerosol%humidities%dim_1%LB = 1
14497.          seat_spectrum%aerosol%humidities%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14497.          seat_spectrum%aerosol%humidities%dim_1%SM = 1
14497.          seat_spectrum%aerosol%humidities%dim_2%LB = 1
14497.          seat_spectrum%aerosol%humidities%dim_2%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14497.          seat_spectrum%aerosol%humidities%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14497.          $_allo_P4(0) = 0x1000000000001L
14497.          $_allo_P4(1) = loc( seat_spectrum%aerosol%humidities )
14497.          call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
14497.       endif
14500.       $Unit_temp_O0 = iu_spc
14500.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$503,  _substr(t$502,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i_component, 0x2000200000000L ) ) )
14501.       if ( ( i_component < seat_spectrum%aerosol%nhumidity%dim_1%LB .or. i_component > -1 + seat_spectrum%aerosol%nhumidity%dim_1%LB + seat_spectrum%aerosol%nhumidity%dim_1%EX ) /= .false. ) then
14501.           _substr(t$6663,1,13) = 'Rad_UKMO.f90'
14501.           _substr(t$6664,1,10) = 'NHUMIDITY'
14501.          t$6665 = seat_spectrum%aerosol%nhumidity%dim_1%LB
14501.          t$6666 = -1 + seat_spectrum%aerosol%nhumidity%dim_1%LB + seat_spectrum%aerosol%nhumidity%dim_1%EX
14501.          t$6667 = i_component
14501.          call _bounds_error(  _substr(t$6663,1,13), 14501,  _substr(t$6664,1,10), 1, t$6665, t$6666, t$6667, t$6662 )
14501.       endif
14501.       $Unit_temp_O1 = iu_spc
14501.       $IOindex_O2 = i_component
14501.       _fread( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$505,  _substr(t$504,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%nhumidity%base_addr)($IOindex_O2, 0), 0x2000200000000L ) ) )
14505.       if ( seat_spectrum%aerosol%abs%header%assoc /= 1 ) then
14506.          seat_spectrum%aerosol%abs%header%a_contig = 1
14506.          seat_spectrum%aerosol%abs%dim_1%LB = 1
14506.          seat_spectrum%aerosol%abs%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14506.          seat_spectrum%aerosol%abs%dim_1%SM = 1
14506.          seat_spectrum%aerosol%abs%dim_2%LB = 1
14506.          seat_spectrum%aerosol%abs%dim_2%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14506.          seat_spectrum%aerosol%abs%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14506.          seat_spectrum%aerosol%abs%dim_3%LB = 1
14506.          seat_spectrum%aerosol%abs%dim_3%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14506.          seat_spectrum%aerosol%abs%dim_3%SM = ( max( 0, (nd_aerosol_species%base_addr)(0) ) * max( 0, (nd_humidity%base_addr)(0) ) )
14506.          $_allo_P5(0) = 0x1000000000001L
14506.          $_allo_P5(1) = loc( seat_spectrum%aerosol%abs )
14506.          call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
14508.          seat_spectrum%aerosol%scat%header%a_contig = 1
14508.          seat_spectrum%aerosol%scat%dim_1%LB = 1
14508.          seat_spectrum%aerosol%scat%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14508.          seat_spectrum%aerosol%scat%dim_1%SM = 1
14508.          seat_spectrum%aerosol%scat%dim_2%LB = 1
14508.          seat_spectrum%aerosol%scat%dim_2%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14508.          seat_spectrum%aerosol%scat%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14508.          seat_spectrum%aerosol%scat%dim_3%LB = 1
14508.          seat_spectrum%aerosol%scat%dim_3%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14508.          seat_spectrum%aerosol%scat%dim_3%SM = ( max( 0, (nd_aerosol_species%base_addr)(0) ) * max( 0, (nd_humidity%base_addr)(0) ) )
14508.          $_allo_P6(0) = 0x1000000000001L
14508.          $_allo_P6(1) = loc( seat_spectrum%aerosol%scat )
14508.          call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
14510.          seat_spectrum%aerosol%phf_fnc%header%a_contig = 1
14510.          seat_spectrum%aerosol%phf_fnc%dim_1%LB = 1
14510.          seat_spectrum%aerosol%phf_fnc%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14510.          seat_spectrum%aerosol%phf_fnc%dim_1%SM = 1
14510.          seat_spectrum%aerosol%phf_fnc%dim_2%LB = 1
14510.          seat_spectrum%aerosol%phf_fnc%dim_2%EX = ( max( 0, (nd_phase_term%base_addr)(0) ) )
14510.          seat_spectrum%aerosol%phf_fnc%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14510.          seat_spectrum%aerosol%phf_fnc%dim_3%LB = 1
14510.          seat_spectrum%aerosol%phf_fnc%dim_3%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14510.          seat_spectrum%aerosol%phf_fnc%dim_3%SM = ( max( 0, (nd_humidity%base_addr)(0) ) * max( 0, (nd_phase_term%base_addr)(0) ) )
14510.          seat_spectrum%aerosol%phf_fnc%dim_4%LB = 1
14510.          seat_spectrum%aerosol%phf_fnc%dim_4%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14510.          seat_spectrum%aerosol%phf_fnc%dim_4%SM = ( max( 0, (nd_aerosol_species%base_addr)(0) ) * max( 0, (nd_humidity%base_addr)(0) ) * max( 0, (nd_phase_term%base_addr)(0) ) )
14510.          $_allo_P7(0) = 0x1000000000001L
14510.          $_allo_P7(1) = loc( seat_spectrum%aerosol%phf_fnc )
14510.          call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
14510.       endif
14515.       $t_S3 = seat_spectrum%basic%n_band
14515.       i = 1
14515.       if ( seat_spectrum%basic%n_band > 0 ) then
14515.          $I_L14515_18 = 0
14515.          do
14515.             i = ( 1 + $I_L14515_18 )
14516.             $Unit_temp_O3 = iu_spc
14516.             _fread( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, t$507,  _substr(t$506,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14517.             $t_S1 = (seat_spectrum%aerosol%nhumidity%base_addr)(i_component, 0)
14517.             if ( $t_S1 > 0 ) then
14517.                $I_L14517_14 = 0
14517.                do
14518.                   $Unit_temp_O4 = iu_spc
14518.                   t$6674 = _fread( _clist( 0, 1, 2, $Unit_temp_O4, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14518.                   if ( t$6674 == 0 ) then
14519.                      if ( ( ( 1 + $I_L14517_14 ) < seat_spectrum%aerosol%humidities%dim_1%LB .or. ( 1 + $I_L14517_14 ) > -1 + seat_spectrum%aerosol%humidities%dim_1%LB + seat_spectrum%aerosol%humidities%dim_1%EX ) /= .false. ) then
14519.                          _substr(t$6676,1,13) = 'Rad_UKMO.f90'
14519.                          _substr(t$6677,1,11) = 'HUMIDITIES'
14519.                         t$6665 = seat_spectrum%aerosol%humidities%dim_1%LB
14519.                         t$6666 = -1 + seat_spectrum%aerosol%humidities%dim_1%LB + seat_spectrum%aerosol%humidities%dim_1%EX
14519.                         t$6667 = 1 + $I_L14517_14
14519.                         call _bounds_error(  _substr(t$6676,1,13), 14519,  _substr(t$6677,1,11), 1, t$6665, t$6666, t$6667, t$6675 )
14519.                      endif
14519.                      if ( ( i_component < seat_spectrum%aerosol%humidities%dim_2%LB .or. i_component > -1 + seat_spectrum%aerosol%humidities%dim_2%LB + seat_spectrum%aerosol%humidities%dim_2%EX ) /= .false. ) then
14519.                          _substr(t$6679,1,13) = 'Rad_UKMO.f90'
14519.                          _substr(t$6680,1,11) = 'HUMIDITIES'
14519.                         t$6681 = seat_spectrum%aerosol%humidities%dim_2%LB
14519.                         t$6682 = -1 + seat_spectrum%aerosol%humidities%dim_2%LB + seat_spectrum%aerosol%humidities%dim_2%EX
14519.                         t$6683 = i_component
14519.                         call _bounds_error(  _substr(t$6679,1,13), 14519,  _substr(t$6680,1,11), 2, t$6681, t$6682, t$6683, t$6678 )
14519.                      endif
14518.                      $Unit_temp_O5 = iu_spc
14518.                      $IOindex_O6 = 1 + $I_L14517_14
14518.                      $IOindex_O7 = i_component
14518.                      t$6674 = _fread( _clist( 0, 1, 0, $Unit_temp_O5, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%humidities%base_addr)($IOindex_O6, $IOindex_O7, 0), 0x804060300000000L ) ) )
14518.                      if ( t$6674 == 0 ) then
14520.                         if ( ( ( 1 + $I_L14517_14 ) < seat_spectrum%aerosol%abs%dim_1%LB .or. ( 1 + $I_L14517_14 ) > -1 + seat_spectrum%aerosol%abs%dim_1%LB + seat_spectrum%aerosol%abs%dim_1%EX ) /= .false. ) then
14520.                             _substr(t$6685,1,13) = 'Rad_UKMO.f90'
14520.                             _substr(t$6686,1,4) = 'ABS'
14520.                            t$6687 = seat_spectrum%aerosol%abs%dim_1%LB
14520.                            t$6688 = -1 + seat_spectrum%aerosol%abs%dim_1%LB + seat_spectrum%aerosol%abs%dim_1%EX
14520.                            t$6689 = 1 + $I_L14517_14
14520.                            call _bounds_error(  _substr(t$6685,1,13), 14520,  _substr(t$6686,1,4), 1, t$6687, t$6688, t$6689, t$6684 )
14520.                         endif
14520.                         if ( ( i_component < seat_spectrum%aerosol%abs%dim_2%LB .or. i_component > -1 + seat_spectrum%aerosol%abs%dim_2%LB + seat_spectrum%aerosol%abs%dim_2%EX ) /= .false. ) then
14520.                             _substr(t$6691,1,13) = 'Rad_UKMO.f90'
14520.                             _substr(t$6692,1,4) = 'ABS'
14520.                            t$6693 = seat_spectrum%aerosol%abs%dim_2%LB
14520.                            t$6694 = -1 + seat_spectrum%aerosol%abs%dim_2%LB + seat_spectrum%aerosol%abs%dim_2%EX
14520.                            t$6695 = i_component
14520.                            call _bounds_error(  _substr(t$6691,1,13), 14520,  _substr(t$6692,1,4), 2, t$6693, t$6694, t$6695, t$6690 )
14520.                         endif
14520.                         if ( ( i < seat_spectrum%aerosol%abs%dim_3%LB .or. i > -1 + seat_spectrum%aerosol%abs%dim_3%LB + seat_spectrum%aerosol%abs%dim_3%EX ) /= .false. ) then
14520.                             _substr(t$6697,1,13) = 'Rad_UKMO.f90'
14520.                             _substr(t$6698,1,4) = 'ABS'
14520.                            t$6699 = seat_spectrum%aerosol%abs%dim_3%LB
14520.                            t$6700 = -1 + seat_spectrum%aerosol%abs%dim_3%LB + seat_spectrum%aerosol%abs%dim_3%EX
14520.                            t$6701 = i
14520.                            call _bounds_error(  _substr(t$6697,1,13), 14520,  _substr(t$6698,1,4), 3, t$6699, t$6700, t$6701, t$6696 )
14520.                         endif
14518.                         $Unit_temp_O8 = iu_spc
14518.                         $IOindex_O9 = 1 + $I_L14517_14
14518.                         $IOindex_O10 = i_component
14518.                         $IOindex_O11 = i
14518.                         t$6674 = _fread( _clist( 0, 1, 0, $Unit_temp_O8, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%abs%base_addr)($IOindex_O9, $IOindex_O10, $IOindex_O11, 0), 0x804060300000000L ) ) )
14518.                         if ( t$6674 == 0 ) then
14521.                            if ( ( ( 1 + $I_L14517_14 ) < seat_spectrum%aerosol%scat%dim_1%LB .or. ( 1 + $I_L14517_14 ) > -1 + seat_spectrum%aerosol%scat%dim_1%LB + seat_spectrum%aerosol%scat%dim_1%EX ) /= .false. ) then
14521.                                _substr(t$6703,1,13) = 'Rad_UKMO.f90'
14521.                                _substr(t$6704,1,5) = 'SCAT'
14521.                               t$6705 = seat_spectrum%aerosol%scat%dim_1%LB
14521.                               t$6706 = -1 + seat_spectrum%aerosol%scat%dim_1%LB + seat_spectrum%aerosol%scat%dim_1%EX
14521.                               t$6707 = 1 + $I_L14517_14
14521.                               call _bounds_error(  _substr(t$6703,1,13), 14521,  _substr(t$6704,1,5), 1, t$6705, t$6706, t$6707, t$6702 )
14521.                            endif
14521.                            if ( ( i_component < seat_spectrum%aerosol%scat%dim_2%LB .or. i_component > -1 + seat_spectrum%aerosol%scat%dim_2%LB + seat_spectrum%aerosol%scat%dim_2%EX ) /= .false. ) then
14521.                                _substr(t$6709,1,13) = 'Rad_UKMO.f90'
14521.                                _substr(t$6710,1,5) = 'SCAT'
14521.                               t$6711 = seat_spectrum%aerosol%scat%dim_2%LB
14521.                               t$6712 = -1 + seat_spectrum%aerosol%scat%dim_2%LB + seat_spectrum%aerosol%scat%dim_2%EX
14521.                               t$6713 = i_component
14521.                               call _bounds_error(  _substr(t$6709,1,13), 14521,  _substr(t$6710,1,5), 2, t$6711, t$6712, t$6713, t$6708 )
14521.                            endif
14521.                            if ( ( i < seat_spectrum%aerosol%scat%dim_3%LB .or. i > -1 + seat_spectrum%aerosol%scat%dim_3%LB + seat_spectrum%aerosol%scat%dim_3%EX ) /= .false. ) then
14521.                                _substr(t$6715,1,13) = 'Rad_UKMO.f90'
14521.                                _substr(t$6716,1,5) = 'SCAT'
14521.                               t$6717 = seat_spectrum%aerosol%scat%dim_3%LB
14521.                               t$6718 = -1 + seat_spectrum%aerosol%scat%dim_3%LB + seat_spectrum%aerosol%scat%dim_3%EX
14521.                               t$6719 = i
14521.                               call _bounds_error(  _substr(t$6715,1,13), 14521,  _substr(t$6716,1,5), 3, t$6717, t$6718, t$6719, t$6714 )
14521.                            endif
14518.                            $Unit_temp_O12 = iu_spc
14518.                            $IOindex_O13 = 1 + $I_L14517_14
14518.                            $IOindex_O14 = i_component
14518.                            $IOindex_O15 = i
14518.                            t$6674 = _fread( _clist( 0, 1, 0, $Unit_temp_O12, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%scat%base_addr)($IOindex_O13, $IOindex_O14, $IOindex_O15, 0), 0x804060300000000L ) ) )
14518.                            if ( t$6674 == 0 ) then
14522.                               if ( ( ( 1 + $I_L14517_14 ) < seat_spectrum%aerosol%phf_fnc%dim_1%LB .or. ( 1 + $I_L14517_14 ) > -1 + seat_spectrum%aerosol%phf_fnc%dim_1%LB + seat_spectrum%aerosol%phf_fnc%dim_1%EX ) /= .false. ) then
14522.                                   _substr(t$6721,1,13) = 'Rad_UKMO.f90'
14522.                                   _substr(t$6722,1,8) = 'PHF_FNC'
14522.                                  t$6723 = seat_spectrum%aerosol%phf_fnc%dim_1%LB
14522.                                  t$6724 = -1 + seat_spectrum%aerosol%phf_fnc%dim_1%LB + seat_spectrum%aerosol%phf_fnc%dim_1%EX
14522.                                  t$6725 = 1 + $I_L14517_14
14522.                                  call _bounds_error(  _substr(t$6721,1,13), 14522,  _substr(t$6722,1,8), 1, t$6723, t$6724, t$6725, t$6720 )
14522.                               endif
14522.                               if ( ( 1 < seat_spectrum%aerosol%phf_fnc%dim_2%LB .or. 0 >= -1 + seat_spectrum%aerosol%phf_fnc%dim_2%LB + seat_spectrum%aerosol%phf_fnc%dim_2%EX ) /= .false. ) then
14522.                                   _substr(t$6727,1,13) = 'Rad_UKMO.f90'
14522.                                   _substr(t$6728,1,8) = 'PHF_FNC'
14522.                                  t$6729 = seat_spectrum%aerosol%phf_fnc%dim_2%LB
14522.                                  t$6730 = -1 + seat_spectrum%aerosol%phf_fnc%dim_2%LB + seat_spectrum%aerosol%phf_fnc%dim_2%EX
14522.                                  call _bounds_error(  _substr(t$6727,1,13), 14522,  _substr(t$6728,1,8), 2, t$6729, t$6730, 1, t$6726 )
14522.                               endif
14522.                               if ( ( i_component < seat_spectrum%aerosol%phf_fnc%dim_3%LB .or. i_component > -1 + seat_spectrum%aerosol%phf_fnc%dim_3%LB + seat_spectrum%aerosol%phf_fnc%dim_3%EX ) /= .false. ) then
14522.                                   _substr(t$6732,1,13) = 'Rad_UKMO.f90'
14522.                                   _substr(t$6733,1,8) = 'PHF_FNC'
14522.                                  t$6734 = seat_spectrum%aerosol%phf_fnc%dim_3%LB
14522.                                  t$6735 = -1 + seat_spectrum%aerosol%phf_fnc%dim_3%LB + seat_spectrum%aerosol%phf_fnc%dim_3%EX
14522.                                  t$6736 = i_component
14522.                                  call _bounds_error(  _substr(t$6732,1,13), 14522,  _substr(t$6733,1,8), 3, t$6734, t$6735, t$6736, t$6731 )
14522.                               endif
14522.                               if ( ( i < seat_spectrum%aerosol%phf_fnc%dim_4%LB .or. i > -1 + seat_spectrum%aerosol%phf_fnc%dim_4%LB + seat_spectrum%aerosol%phf_fnc%dim_4%EX ) /= .false. ) then
14522.                                   _substr(t$6738,1,13) = 'Rad_UKMO.f90'
14522.                                   _substr(t$6739,1,8) = 'PHF_FNC'
14522.                                  t$6740 = seat_spectrum%aerosol%phf_fnc%dim_4%LB
14522.                                  t$6741 = -1 + seat_spectrum%aerosol%phf_fnc%dim_4%LB + seat_spectrum%aerosol%phf_fnc%dim_4%EX
14522.                                  t$6742 = i
14522.                                  call _bounds_error(  _substr(t$6738,1,13), 14522,  _substr(t$6739,1,8), 4, t$6740, t$6741, t$6742, t$6737 )
14522.                               endif
14518.                               $Unit_temp_O16 = iu_spc
14518.                               $IOindex_O17 = 1 + $I_L14517_14
14518.                               $IOindex_O18 = i_component
14518.                               $IOindex_O19 = i
14518.                               t$6674 = _fread( _clist( 0, 1, 0, $Unit_temp_O16, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%phf_fnc%base_addr)($IOindex_O17, 1, $IOindex_O18, $IOindex_O19, 0), 0x804060300000000L ) ) )
14518.                               if ( t$6674 == 0 ) then
14518.                                  $Unit_temp_O20 = iu_spc
14518.                                  t$6674 = _fread( _clist( 0, 1, 1, $Unit_temp_O20, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14518.                               endif
14518.                            endif
14518.                         endif
14518.                      endif
14518.                   endif
14523.                   if ( ios /= 0 ) then
14524.                      _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$509,  _substr(t$508,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_11_1_0', 0x800600000000L ) ) )
14526.                      _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$511,  _substr(t$510,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'Moist aerosol scattering data are not in the correct format.', 0x800600000000L ) ) )
14528.                      seat_ierr = 1
14528.                      goto 20
14528.                   endif
14531.                   $I_L14517_14 = 1 + $I_L14517_14
14531.                   if ( $I_L14517_14 >= $t_S1 ) exit
14531.                enddo
14532.                $I_L14515_18 = 1 + $I_L14515_18
14531.             else
14531.             endif
14531.             if ( $I_L14515_18 >= $t_S3 ) exit
14531.          enddo
14532.          i = ( 1 + $t_S3 )
14532.          goto 10
14532.       else
14532.    10    continue
14534.          (seat_spectrum%aerosol%i_aerosol_parm%base_addr)(i_component, 0) = 2
14535.          (seat_spectrum%aerosol%n_aerosol_phf_term%base_addr)(i_component, 0) = 1
14539.          (seat_spectrum%aerosol%l_aero_spec%base_addr)(i_component, 0) = .true.
14539.       endif
14539.    20 continue
14544.       return
14544.       end
14544.       
14549.       
14549.       subroutine read_block_11_1_1_int
14560.       (nd_phase_term%base_addr)(0) = 1
14561.       if ( seat_spectrum%aerosol%l_aero_spec%header%assoc /= 1 ) then
14562.          seat_spectrum%aerosol%l_aero_spec%header%a_contig = 1
14562.          seat_spectrum%aerosol%l_aero_spec%dim_1%LB = 1
14562.          seat_spectrum%aerosol%l_aero_spec%dim_1%EX = _zla( 0, (nd_aerosol_species%base_addr)(0) )
14562.          seat_spectrum%aerosol%l_aero_spec%dim_1%SM = 1
14562.          $_allo_P0(0) = 0x1000000000001L
14562.          $_allo_P0(1) = loc( seat_spectrum%aerosol%l_aero_spec )
14562.          call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
14563.          $F_A34 = (nd_aerosol_species%base_addr)(0)
14563.          if ( (nd_aerosol_species%base_addr)(0) > 0 ) then
14563.             $SC_spectrum_I1 = seat_spectrum%aerosol%l_aero_spec%dim_1%EX
14563.             $I_L14563_16 = 0
14563. !dir$ ivdep
14563.             do
14563.                (seat_spectrum%aerosol%l_aero_spec%base_addr)(1 + $I_L14563_16, 0) = .false.
14563.                $I_L14563_16 = 1 + $I_L14563_16
14563.                if ( $I_L14563_16 >= $F_A34 ) exit
14563.             enddo
14563.          endif
14564.          seat_spectrum%aerosol%i_aerosol_parm%header%a_contig = 1
14564.          seat_spectrum%aerosol%i_aerosol_parm%dim_1%LB = 1
14564.          seat_spectrum%aerosol%i_aerosol_parm%dim_1%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14564.          seat_spectrum%aerosol%i_aerosol_parm%dim_1%SM = 1
14564.          $_allo_P1(0) = 0x1000000000001L
14564.          $_allo_P1(1) = loc( seat_spectrum%aerosol%i_aerosol_parm )
14564.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
14565.          seat_spectrum%aerosol%n_aerosol_phf_term%header%a_contig = 1
14565.          seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB = 1
14565.          seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14565.          seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%SM = 1
14565.          $_allo_P2(0) = 0x1000000000001L
14565.          $_allo_P2(1) = loc( seat_spectrum%aerosol%n_aerosol_phf_term )
14565.          call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
14566.          seat_spectrum%aerosol%nhumidity%header%a_contig = 1
14566.          seat_spectrum%aerosol%nhumidity%dim_1%LB = 1
14566.          seat_spectrum%aerosol%nhumidity%dim_1%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14566.          seat_spectrum%aerosol%nhumidity%dim_1%SM = 1
14566.          $_allo_P3(0) = 0x1000000000001L
14566.          $_allo_P3(1) = loc( seat_spectrum%aerosol%nhumidity )
14566.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
14567.          seat_spectrum%aerosol%humidities%header%a_contig = 1
14567.          seat_spectrum%aerosol%humidities%dim_1%LB = 1
14567.          seat_spectrum%aerosol%humidities%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14567.          seat_spectrum%aerosol%humidities%dim_1%SM = 1
14567.          seat_spectrum%aerosol%humidities%dim_2%LB = 1
14567.          seat_spectrum%aerosol%humidities%dim_2%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14567.          seat_spectrum%aerosol%humidities%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14567.          $_allo_P4(0) = 0x1000000000001L
14567.          $_allo_P4(1) = loc( seat_spectrum%aerosol%humidities )
14567.          call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
14567.       endif
14570.       $Unit_temp_O0 = iu_spc
14570.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$513,  _substr(t$512,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i_species, 0x2000200000000L ) ) )
14571.       if ( ( i_species < seat_spectrum%aerosol%nhumidity%dim_1%LB .or. i_species > -1 + seat_spectrum%aerosol%nhumidity%dim_1%LB + seat_spectrum%aerosol%nhumidity%dim_1%EX ) /= .false. ) then
14571.           _substr(t$6744,1,13) = 'Rad_UKMO.f90'
14571.           _substr(t$6745,1,10) = 'NHUMIDITY'
14571.          t$6746 = seat_spectrum%aerosol%nhumidity%dim_1%LB
14571.          t$6747 = -1 + seat_spectrum%aerosol%nhumidity%dim_1%LB + seat_spectrum%aerosol%nhumidity%dim_1%EX
14571.          t$6748 = i_species
14571.          call _bounds_error(  _substr(t$6744,1,13), 14571,  _substr(t$6745,1,10), 1, t$6746, t$6747, t$6748, t$6743 )
14571.       endif
14571.       $Unit_temp_O1 = iu_spc
14571.       $IOindex_O2 = i_species
14571.       _fread( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$515,  _substr(t$514,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%nhumidity%base_addr)($IOindex_O2, 0), 0x2000200000000L ) ) )
14575.       if ( seat_spectrum%aerosol%abs%header%assoc /= 1 ) then
14576.          seat_spectrum%aerosol%abs%header%a_contig = 1
14576.          seat_spectrum%aerosol%abs%dim_1%LB = 1
14576.          seat_spectrum%aerosol%abs%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14576.          seat_spectrum%aerosol%abs%dim_1%SM = 1
14576.          seat_spectrum%aerosol%abs%dim_2%LB = 1
14576.          seat_spectrum%aerosol%abs%dim_2%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14576.          seat_spectrum%aerosol%abs%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14576.          seat_spectrum%aerosol%abs%dim_3%LB = 1
14576.          seat_spectrum%aerosol%abs%dim_3%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14576.          seat_spectrum%aerosol%abs%dim_3%SM = ( max( 0, (nd_aerosol_species%base_addr)(0) ) * max( 0, (nd_humidity%base_addr)(0) ) )
14576.          $_allo_P5(0) = 0x1000000000001L
14576.          $_allo_P5(1) = loc( seat_spectrum%aerosol%abs )
14576.          call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
14578.          seat_spectrum%aerosol%scat%header%a_contig = 1
14578.          seat_spectrum%aerosol%scat%dim_1%LB = 1
14578.          seat_spectrum%aerosol%scat%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14578.          seat_spectrum%aerosol%scat%dim_1%SM = 1
14578.          seat_spectrum%aerosol%scat%dim_2%LB = 1
14578.          seat_spectrum%aerosol%scat%dim_2%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14578.          seat_spectrum%aerosol%scat%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14578.          seat_spectrum%aerosol%scat%dim_3%LB = 1
14578.          seat_spectrum%aerosol%scat%dim_3%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14578.          seat_spectrum%aerosol%scat%dim_3%SM = ( max( 0, (nd_aerosol_species%base_addr)(0) ) * max( 0, (nd_humidity%base_addr)(0) ) )
14578.          $_allo_P6(0) = 0x1000000000001L
14578.          $_allo_P6(1) = loc( seat_spectrum%aerosol%scat )
14578.          call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
14580.          seat_spectrum%aerosol%phf_fnc%header%a_contig = 1
14580.          seat_spectrum%aerosol%phf_fnc%dim_1%LB = 1
14580.          seat_spectrum%aerosol%phf_fnc%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14580.          seat_spectrum%aerosol%phf_fnc%dim_1%SM = 1
14580.          seat_spectrum%aerosol%phf_fnc%dim_2%LB = 1
14580.          seat_spectrum%aerosol%phf_fnc%dim_2%EX = ( max( 0, (nd_phase_term%base_addr)(0) ) )
14580.          seat_spectrum%aerosol%phf_fnc%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14580.          seat_spectrum%aerosol%phf_fnc%dim_3%LB = 1
14580.          seat_spectrum%aerosol%phf_fnc%dim_3%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14580.          seat_spectrum%aerosol%phf_fnc%dim_3%SM = ( max( 0, (nd_humidity%base_addr)(0) ) * max( 0, (nd_phase_term%base_addr)(0) ) )
14580.          seat_spectrum%aerosol%phf_fnc%dim_4%LB = 1
14580.          seat_spectrum%aerosol%phf_fnc%dim_4%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14580.          seat_spectrum%aerosol%phf_fnc%dim_4%SM = ( max( 0, (nd_aerosol_species%base_addr)(0) ) * max( 0, (nd_humidity%base_addr)(0) ) * max( 0, (nd_phase_term%base_addr)(0) ) )
14580.          $_allo_P7(0) = 0x1000000000001L
14580.          $_allo_P7(1) = loc( seat_spectrum%aerosol%phf_fnc )
14580.          call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
14580.       endif
14586.       $t_S3 = seat_spectrum%basic%n_band
14586.       i = 1
14586.       if ( seat_spectrum%basic%n_band > 0 ) then
14586.          $I_L14586_18 = 0
14586.          do
14586.             i = ( 1 + $I_L14586_18 )
14587.             $Unit_temp_O3 = iu_spc
14587.             _fread( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, t$517,  _substr(t$516,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14588.             $t_S1 = (seat_spectrum%aerosol%nhumidity%base_addr)(i_species, 0)
14588.             if ( $t_S1 > 0 ) then
14588.                $I_L14588_14 = 0
14588.                do
14589.                   $Unit_temp_O4 = iu_spc
14589.                   t$6755 = _fread( _clist( 0, 1, 2, $Unit_temp_O4, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14589.                   if ( t$6755 == 0 ) then
14590.                      if ( ( ( 1 + $I_L14588_14 ) < seat_spectrum%aerosol%humidities%dim_1%LB .or. ( 1 + $I_L14588_14 ) > -1 + seat_spectrum%aerosol%humidities%dim_1%LB + seat_spectrum%aerosol%humidities%dim_1%EX ) /= .false. ) then
14590.                          _substr(t$6757,1,13) = 'Rad_UKMO.f90'
14590.                          _substr(t$6758,1,11) = 'HUMIDITIES'
14590.                         t$6746 = seat_spectrum%aerosol%humidities%dim_1%LB
14590.                         t$6747 = -1 + seat_spectrum%aerosol%humidities%dim_1%LB + seat_spectrum%aerosol%humidities%dim_1%EX
14590.                         t$6748 = 1 + $I_L14588_14
14590.                         call _bounds_error(  _substr(t$6757,1,13), 14590,  _substr(t$6758,1,11), 1, t$6746, t$6747, t$6748, t$6756 )
14590.                      endif
14590.                      if ( ( i_species < seat_spectrum%aerosol%humidities%dim_2%LB .or. i_species > -1 + seat_spectrum%aerosol%humidities%dim_2%LB + seat_spectrum%aerosol%humidities%dim_2%EX ) /= .false. ) then
14590.                          _substr(t$6760,1,13) = 'Rad_UKMO.f90'
14590.                          _substr(t$6761,1,11) = 'HUMIDITIES'
14590.                         t$6762 = seat_spectrum%aerosol%humidities%dim_2%LB
14590.                         t$6763 = -1 + seat_spectrum%aerosol%humidities%dim_2%LB + seat_spectrum%aerosol%humidities%dim_2%EX
14590.                         t$6764 = i_species
14590.                         call _bounds_error(  _substr(t$6760,1,13), 14590,  _substr(t$6761,1,11), 2, t$6762, t$6763, t$6764, t$6759 )
14590.                      endif
14589.                      $Unit_temp_O5 = iu_spc
14589.                      $IOindex_O6 = 1 + $I_L14588_14
14589.                      $IOindex_O7 = i_species
14589.                      t$6755 = _fread( _clist( 0, 1, 0, $Unit_temp_O5, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%humidities%base_addr)($IOindex_O6, $IOindex_O7, 0), 0x804060300000000L ) ) )
14589.                      if ( t$6755 == 0 ) then
14591.                         if ( ( ( 1 + $I_L14588_14 ) < seat_spectrum%aerosol%abs%dim_1%LB .or. ( 1 + $I_L14588_14 ) > -1 + seat_spectrum%aerosol%abs%dim_1%LB + seat_spectrum%aerosol%abs%dim_1%EX ) /= .false. ) then
14591.                             _substr(t$6766,1,13) = 'Rad_UKMO.f90'
14591.                             _substr(t$6767,1,4) = 'ABS'
14591.                            t$6768 = seat_spectrum%aerosol%abs%dim_1%LB
14591.                            t$6769 = -1 + seat_spectrum%aerosol%abs%dim_1%LB + seat_spectrum%aerosol%abs%dim_1%EX
14591.                            t$6770 = 1 + $I_L14588_14
14591.                            call _bounds_error(  _substr(t$6766,1,13), 14591,  _substr(t$6767,1,4), 1, t$6768, t$6769, t$6770, t$6765 )
14591.                         endif
14591.                         if ( ( i_species < seat_spectrum%aerosol%abs%dim_2%LB .or. i_species > -1 + seat_spectrum%aerosol%abs%dim_2%LB + seat_spectrum%aerosol%abs%dim_2%EX ) /= .false. ) then
14591.                             _substr(t$6772,1,13) = 'Rad_UKMO.f90'
14591.                             _substr(t$6773,1,4) = 'ABS'
14591.                            t$6774 = seat_spectrum%aerosol%abs%dim_2%LB
14591.                            t$6775 = -1 + seat_spectrum%aerosol%abs%dim_2%LB + seat_spectrum%aerosol%abs%dim_2%EX
14591.                            t$6776 = i_species
14591.                            call _bounds_error(  _substr(t$6772,1,13), 14591,  _substr(t$6773,1,4), 2, t$6774, t$6775, t$6776, t$6771 )
14591.                         endif
14591.                         if ( ( i < seat_spectrum%aerosol%abs%dim_3%LB .or. i > -1 + seat_spectrum%aerosol%abs%dim_3%LB + seat_spectrum%aerosol%abs%dim_3%EX ) /= .false. ) then
14591.                             _substr(t$6778,1,13) = 'Rad_UKMO.f90'
14591.                             _substr(t$6779,1,4) = 'ABS'
14591.                            t$6780 = seat_spectrum%aerosol%abs%dim_3%LB
14591.                            t$6781 = -1 + seat_spectrum%aerosol%abs%dim_3%LB + seat_spectrum%aerosol%abs%dim_3%EX
14591.                            t$6782 = i
14591.                            call _bounds_error(  _substr(t$6778,1,13), 14591,  _substr(t$6779,1,4), 3, t$6780, t$6781, t$6782, t$6777 )
14591.                         endif
14589.                         $Unit_temp_O8 = iu_spc
14589.                         $IOindex_O9 = 1 + $I_L14588_14
14589.                         $IOindex_O10 = i_species
14589.                         $IOindex_O11 = i
14589.                         t$6755 = _fread( _clist( 0, 1, 0, $Unit_temp_O8, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%abs%base_addr)($IOindex_O9, $IOindex_O10, $IOindex_O11, 0), 0x804060300000000L ) ) )
14589.                         if ( t$6755 == 0 ) then
14592.                            if ( ( ( 1 + $I_L14588_14 ) < seat_spectrum%aerosol%scat%dim_1%LB .or. ( 1 + $I_L14588_14 ) > -1 + seat_spectrum%aerosol%scat%dim_1%LB + seat_spectrum%aerosol%scat%dim_1%EX ) /= .false. ) then
14592.                                _substr(t$6784,1,13) = 'Rad_UKMO.f90'
14592.                                _substr(t$6785,1,5) = 'SCAT'
14592.                               t$6786 = seat_spectrum%aerosol%scat%dim_1%LB
14592.                               t$6787 = -1 + seat_spectrum%aerosol%scat%dim_1%LB + seat_spectrum%aerosol%scat%dim_1%EX
14592.                               t$6788 = 1 + $I_L14588_14
14592.                               call _bounds_error(  _substr(t$6784,1,13), 14592,  _substr(t$6785,1,5), 1, t$6786, t$6787, t$6788, t$6783 )
14592.                            endif
14592.                            if ( ( i_species < seat_spectrum%aerosol%scat%dim_2%LB .or. i_species > -1 + seat_spectrum%aerosol%scat%dim_2%LB + seat_spectrum%aerosol%scat%dim_2%EX ) /= .false. ) then
14592.                                _substr(t$6790,1,13) = 'Rad_UKMO.f90'
14592.                                _substr(t$6791,1,5) = 'SCAT'
14592.                               t$6792 = seat_spectrum%aerosol%scat%dim_2%LB
14592.                               t$6793 = -1 + seat_spectrum%aerosol%scat%dim_2%LB + seat_spectrum%aerosol%scat%dim_2%EX
14592.                               t$6794 = i_species
14592.                               call _bounds_error(  _substr(t$6790,1,13), 14592,  _substr(t$6791,1,5), 2, t$6792, t$6793, t$6794, t$6789 )
14592.                            endif
14592.                            if ( ( i < seat_spectrum%aerosol%scat%dim_3%LB .or. i > -1 + seat_spectrum%aerosol%scat%dim_3%LB + seat_spectrum%aerosol%scat%dim_3%EX ) /= .false. ) then
14592.                                _substr(t$6796,1,13) = 'Rad_UKMO.f90'
14592.                                _substr(t$6797,1,5) = 'SCAT'
14592.                               t$6798 = seat_spectrum%aerosol%scat%dim_3%LB
14592.                               t$6799 = -1 + seat_spectrum%aerosol%scat%dim_3%LB + seat_spectrum%aerosol%scat%dim_3%EX
14592.                               t$6800 = i
14592.                               call _bounds_error(  _substr(t$6796,1,13), 14592,  _substr(t$6797,1,5), 3, t$6798, t$6799, t$6800, t$6795 )
14592.                            endif
14589.                            $Unit_temp_O12 = iu_spc
14589.                            $IOindex_O13 = 1 + $I_L14588_14
14589.                            $IOindex_O14 = i_species
14589.                            $IOindex_O15 = i
14589.                            t$6755 = _fread( _clist( 0, 1, 0, $Unit_temp_O12, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%scat%base_addr)($IOindex_O13, $IOindex_O14, $IOindex_O15, 0), 0x804060300000000L ) ) )
14589.                            if ( t$6755 == 0 ) then
14593.                               if ( ( ( 1 + $I_L14588_14 ) < seat_spectrum%aerosol%phf_fnc%dim_1%LB .or. ( 1 + $I_L14588_14 ) > -1 + seat_spectrum%aerosol%phf_fnc%dim_1%LB + seat_spectrum%aerosol%phf_fnc%dim_1%EX ) /= .false. ) then
14593.                                   _substr(t$6802,1,13) = 'Rad_UKMO.f90'
14593.                                   _substr(t$6803,1,8) = 'PHF_FNC'
14593.                                  t$6804 = seat_spectrum%aerosol%phf_fnc%dim_1%LB
14593.                                  t$6805 = -1 + seat_spectrum%aerosol%phf_fnc%dim_1%LB + seat_spectrum%aerosol%phf_fnc%dim_1%EX
14593.                                  t$6806 = 1 + $I_L14588_14
14593.                                  call _bounds_error(  _substr(t$6802,1,13), 14593,  _substr(t$6803,1,8), 1, t$6804, t$6805, t$6806, t$6801 )
14593.                               endif
14593.                               if ( ( 1 < seat_spectrum%aerosol%phf_fnc%dim_2%LB .or. 0 >= -1 + seat_spectrum%aerosol%phf_fnc%dim_2%LB + seat_spectrum%aerosol%phf_fnc%dim_2%EX ) /= .false. ) then
14593.                                   _substr(t$6808,1,13) = 'Rad_UKMO.f90'
14593.                                   _substr(t$6809,1,8) = 'PHF_FNC'
14593.                                  t$6810 = seat_spectrum%aerosol%phf_fnc%dim_2%LB
14593.                                  t$6811 = -1 + seat_spectrum%aerosol%phf_fnc%dim_2%LB + seat_spectrum%aerosol%phf_fnc%dim_2%EX
14593.                                  call _bounds_error(  _substr(t$6808,1,13), 14593,  _substr(t$6809,1,8), 2, t$6810, t$6811, 1, t$6807 )
14593.                               endif
14593.                               if ( ( i_species < seat_spectrum%aerosol%phf_fnc%dim_3%LB .or. i_species > -1 + seat_spectrum%aerosol%phf_fnc%dim_3%LB + seat_spectrum%aerosol%phf_fnc%dim_3%EX ) /= .false. ) then
14593.                                   _substr(t$6813,1,13) = 'Rad_UKMO.f90'
14593.                                   _substr(t$6814,1,8) = 'PHF_FNC'
14593.                                  t$6815 = seat_spectrum%aerosol%phf_fnc%dim_3%LB
14593.                                  t$6816 = -1 + seat_spectrum%aerosol%phf_fnc%dim_3%LB + seat_spectrum%aerosol%phf_fnc%dim_3%EX
14593.                                  t$6817 = i_species
14593.                                  call _bounds_error(  _substr(t$6813,1,13), 14593,  _substr(t$6814,1,8), 3, t$6815, t$6816, t$6817, t$6812 )
14593.                               endif
14593.                               if ( ( i < seat_spectrum%aerosol%phf_fnc%dim_4%LB .or. i > -1 + seat_spectrum%aerosol%phf_fnc%dim_4%LB + seat_spectrum%aerosol%phf_fnc%dim_4%EX ) /= .false. ) then
14593.                                   _substr(t$6819,1,13) = 'Rad_UKMO.f90'
14593.                                   _substr(t$6820,1,8) = 'PHF_FNC'
14593.                                  t$6821 = seat_spectrum%aerosol%phf_fnc%dim_4%LB
14593.                                  t$6822 = -1 + seat_spectrum%aerosol%phf_fnc%dim_4%LB + seat_spectrum%aerosol%phf_fnc%dim_4%EX
14593.                                  t$6823 = i
14593.                                  call _bounds_error(  _substr(t$6819,1,13), 14593,  _substr(t$6820,1,8), 4, t$6821, t$6822, t$6823, t$6818 )
14593.                               endif
14589.                               $Unit_temp_O16 = iu_spc
14589.                               $IOindex_O17 = 1 + $I_L14588_14
14589.                               $IOindex_O18 = i_species
14589.                               $IOindex_O19 = i
14589.                               t$6755 = _fread( _clist( 0, 1, 0, $Unit_temp_O16, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%phf_fnc%base_addr)($IOindex_O17, 1, $IOindex_O18, $IOindex_O19, 0), 0x804060300000000L ) ) )
14589.                               if ( t$6755 == 0 ) then
14589.                                  $Unit_temp_O20 = iu_spc
14589.                                  t$6755 = _fread( _clist( 0, 1, 1, $Unit_temp_O20, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14589.                               endif
14589.                            endif
14589.                         endif
14589.                      endif
14589.                   endif
14594.                   if ( ios /= 0 ) then
14595.                      _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$519,  _substr(t$518,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_11_1_1', 0x800600000000L ) ) )
14597.                      _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$521,  _substr(t$520,1,3), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'Moist aerosol scattering data are not in the correct format.', 0x800600000000L ) ) )
14599.                      seat_ierr = 1
14599.                      goto 20
14599.                   endif
14602.                   $I_L14588_14 = 1 + $I_L14588_14
14602.                   if ( $I_L14588_14 >= $t_S1 ) exit
14602.                enddo
14603.                $I_L14586_18 = 1 + $I_L14586_18
14602.             else
14602.             endif
14602.             if ( $I_L14586_18 >= $t_S3 ) exit
14602.          enddo
14603.          i = ( 1 + $t_S3 )
14603.          goto 10
14603.       else
14603.    10    continue
14605.          (seat_spectrum%aerosol%i_aerosol_parm%base_addr)(i_species, 0) = 2
14606.          (seat_spectrum%aerosol%n_aerosol_phf_term%base_addr)(i_species, 0) = 1
14609.          (seat_spectrum%aerosol%l_aero_spec%base_addr)(i_species, 0) = .true.
14609.       endif
14609.    20 continue
14614.       return
14614.       end
14614.       
14619.       
14619.       subroutine read_block_11_1_2_int
14633.       if ( seat_spectrum%aerosol%l_aero_spec%header%assoc /= 1 ) then
14634.          seat_spectrum%aerosol%l_aero_spec%header%a_contig = 1
14634.          seat_spectrum%aerosol%l_aero_spec%dim_1%LB = 1
14634.          seat_spectrum%aerosol%l_aero_spec%dim_1%EX = _zla( 0, (nd_aerosol_species%base_addr)(0) )
14634.          seat_spectrum%aerosol%l_aero_spec%dim_1%SM = 1
14634.          $_allo_P0(0) = 0x1000000000001L
14634.          $_allo_P0(1) = loc( seat_spectrum%aerosol%l_aero_spec )
14634.          call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
14635.          $F_A34 = (nd_aerosol_species%base_addr)(0)
14635.          if ( (nd_aerosol_species%base_addr)(0) > 0 ) then
14635.             $SC_spectrum_I1 = seat_spectrum%aerosol%l_aero_spec%dim_1%EX
14635.             $I_L14635_22 = 0
14635. !dir$ ivdep
14635.             do
14635.                (seat_spectrum%aerosol%l_aero_spec%base_addr)(1 + $I_L14635_22, 0) = .false.
14635.                $I_L14635_22 = 1 + $I_L14635_22
14635.                if ( $I_L14635_22 >= $F_A34 ) exit
14635.             enddo
14635.          endif
14636.          seat_spectrum%aerosol%i_aerosol_parm%header%a_contig = 1
14636.          seat_spectrum%aerosol%i_aerosol_parm%dim_1%LB = 1
14636.          seat_spectrum%aerosol%i_aerosol_parm%dim_1%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14636.          seat_spectrum%aerosol%i_aerosol_parm%dim_1%SM = 1
14636.          $_allo_P1(0) = 0x1000000000001L
14636.          $_allo_P1(1) = loc( seat_spectrum%aerosol%i_aerosol_parm )
14636.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
14637.          seat_spectrum%aerosol%n_aerosol_phf_term%header%a_contig = 1
14637.          seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB = 1
14637.          seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14637.          seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%SM = 1
14637.          $_allo_P2(0) = 0x1000000000001L
14637.          $_allo_P2(1) = loc( seat_spectrum%aerosol%n_aerosol_phf_term )
14637.          call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
14638.          seat_spectrum%aerosol%nhumidity%header%a_contig = 1
14638.          seat_spectrum%aerosol%nhumidity%dim_1%LB = 1
14638.          seat_spectrum%aerosol%nhumidity%dim_1%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14638.          seat_spectrum%aerosol%nhumidity%dim_1%SM = 1
14638.          $_allo_P3(0) = 0x1000000000001L
14638.          $_allo_P3(1) = loc( seat_spectrum%aerosol%nhumidity )
14638.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
14639.          seat_spectrum%aerosol%humidities%header%a_contig = 1
14639.          seat_spectrum%aerosol%humidities%dim_1%LB = 1
14639.          seat_spectrum%aerosol%humidities%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14639.          seat_spectrum%aerosol%humidities%dim_1%SM = 1
14639.          seat_spectrum%aerosol%humidities%dim_2%LB = 1
14639.          seat_spectrum%aerosol%humidities%dim_2%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14639.          seat_spectrum%aerosol%humidities%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14639.          $_allo_P4(0) = 0x1000000000001L
14639.          $_allo_P4(1) = loc( seat_spectrum%aerosol%humidities )
14639.          call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
14639.       endif
14642.       $Unit_temp_O0 = iu_spc
14642.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$523,  _substr(t$522,1,13), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( i_species, 0x2000200000000L ) ) )
14643.       if ( ( i_species < seat_spectrum%aerosol%nhumidity%dim_1%LB .or. i_species > -1 + seat_spectrum%aerosol%nhumidity%dim_1%LB + seat_spectrum%aerosol%nhumidity%dim_1%EX ) /= .false. ) then
14643.           _substr(t$6825,1,13) = 'Rad_UKMO.f90'
14643.           _substr(t$6826,1,10) = 'NHUMIDITY'
14643.          t$6827 = seat_spectrum%aerosol%nhumidity%dim_1%LB
14643.          t$6828 = -1 + seat_spectrum%aerosol%nhumidity%dim_1%LB + seat_spectrum%aerosol%nhumidity%dim_1%EX
14643.          t$6829 = i_species
14643.          call _bounds_error(  _substr(t$6825,1,13), 14643,  _substr(t$6826,1,10), 1, t$6827, t$6828, t$6829, t$6824 )
14643.       endif
14643.       $Unit_temp_O1 = iu_spc
14643.       $IOindex_O2 = i_species
14643.       _fread( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$525,  _substr(t$524,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%nhumidity%base_addr)($IOindex_O2, 0), 0x2000200000000L ) ) )
14644.       if ( ( i_species < seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB .or. i_species > -1 + seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB + seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%EX ) /= .false. ) then
14644.           _substr(t$6831,1,13) = 'Rad_UKMO.f90'
14644.           _substr(t$6832,1,19) = 'N_AEROSOL_PHF_TERM'
14644.          t$6827 = seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB
14644.          t$6828 = -1 + seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB + seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%EX
14644.          t$6829 = i_species
14644.          call _bounds_error(  _substr(t$6831,1,13), 14644,  _substr(t$6832,1,19), 1, t$6827, t$6828, t$6829, t$6830 )
14644.       endif
14644.       $Unit_temp_O3 = iu_spc
14644.       $IOindex_O4 = i_species
14644.       _fread( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, t$527,  _substr(t$526,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%n_aerosol_phf_term%base_addr)($IOindex_O4, 0), 0x2000200000000L ) ) )
14646.       if ( seat_spectrum%aerosol%abs%header%assoc /= 1 ) then
14647.          seat_spectrum%aerosol%abs%header%a_contig = 1
14647.          seat_spectrum%aerosol%abs%dim_1%LB = 1
14647.          seat_spectrum%aerosol%abs%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14647.          seat_spectrum%aerosol%abs%dim_1%SM = 1
14647.          seat_spectrum%aerosol%abs%dim_2%LB = 1
14647.          seat_spectrum%aerosol%abs%dim_2%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14647.          seat_spectrum%aerosol%abs%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14647.          seat_spectrum%aerosol%abs%dim_3%LB = 1
14647.          seat_spectrum%aerosol%abs%dim_3%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14647.          seat_spectrum%aerosol%abs%dim_3%SM = ( max( 0, (nd_aerosol_species%base_addr)(0) ) * max( 0, (nd_humidity%base_addr)(0) ) )
14647.          $_allo_P5(0) = 0x1000000000001L
14647.          $_allo_P5(1) = loc( seat_spectrum%aerosol%abs )
14647.          call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
14649.          seat_spectrum%aerosol%scat%header%a_contig = 1
14649.          seat_spectrum%aerosol%scat%dim_1%LB = 1
14649.          seat_spectrum%aerosol%scat%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14649.          seat_spectrum%aerosol%scat%dim_1%SM = 1
14649.          seat_spectrum%aerosol%scat%dim_2%LB = 1
14649.          seat_spectrum%aerosol%scat%dim_2%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14649.          seat_spectrum%aerosol%scat%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14649.          seat_spectrum%aerosol%scat%dim_3%LB = 1
14649.          seat_spectrum%aerosol%scat%dim_3%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14649.          seat_spectrum%aerosol%scat%dim_3%SM = ( max( 0, (nd_aerosol_species%base_addr)(0) ) * max( 0, (nd_humidity%base_addr)(0) ) )
14649.          $_allo_P6(0) = 0x1000000000001L
14649.          $_allo_P6(1) = loc( seat_spectrum%aerosol%scat )
14649.          call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
14651.          seat_spectrum%aerosol%phf_fnc%header%a_contig = 1
14651.          seat_spectrum%aerosol%phf_fnc%dim_1%LB = 1
14651.          seat_spectrum%aerosol%phf_fnc%dim_1%EX = ( max( 0, (nd_humidity%base_addr)(0) ) )
14651.          seat_spectrum%aerosol%phf_fnc%dim_1%SM = 1
14651.          seat_spectrum%aerosol%phf_fnc%dim_2%LB = 1
14651.          seat_spectrum%aerosol%phf_fnc%dim_2%EX = ( max( 0, (nd_phase_term%base_addr)(0) ) )
14651.          seat_spectrum%aerosol%phf_fnc%dim_2%SM = ( max( 0, (nd_humidity%base_addr)(0) ) )
14651.          seat_spectrum%aerosol%phf_fnc%dim_3%LB = 1
14651.          seat_spectrum%aerosol%phf_fnc%dim_3%EX = ( max( 0, (nd_aerosol_species%base_addr)(0) ) )
14651.          seat_spectrum%aerosol%phf_fnc%dim_3%SM = ( max( 0, (nd_humidity%base_addr)(0) ) * max( 0, (nd_phase_term%base_addr)(0) ) )
14651.          seat_spectrum%aerosol%phf_fnc%dim_4%LB = 1
14651.          seat_spectrum%aerosol%phf_fnc%dim_4%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14651.          seat_spectrum%aerosol%phf_fnc%dim_4%SM = ( max( 0, (nd_aerosol_species%base_addr)(0) ) * max( 0, (nd_humidity%base_addr)(0) ) * max( 0, (nd_phase_term%base_addr)(0) ) )
14651.          $_allo_P7(0) = 0x1000000000001L
14651.          $_allo_P7(1) = loc( seat_spectrum%aerosol%phf_fnc )
14651.          call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
14651.       endif
14656.       $t_S5 = seat_spectrum%basic%n_band
14656.       i = 1
14656.       if ( seat_spectrum%basic%n_band > 0 ) then
14656.          $I_L14656_26 = 0
14656.          do
14656.             i = ( 1 + $I_L14656_26 )
14657.             $Unit_temp_O5 = iu_spc
14657.             _fread( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, t$529,  _substr(t$528,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14658.             $t_S1 = (seat_spectrum%aerosol%nhumidity%base_addr)(i_species, 0)
14658.             if ( $t_S1 > 0 ) then
14658.                $I_L14658_24 = 0
14658.                do
14659.                   $Unit_temp_O6 = iu_spc
14659.                   t$6839 = _fread( _clist( 0, 1, 2, $Unit_temp_O6, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14659.                   if ( t$6839 == 0 ) then
14660.                      if ( ( ( 1 + $I_L14658_24 ) < seat_spectrum%aerosol%humidities%dim_1%LB .or. ( 1 + $I_L14658_24 ) > -1 + seat_spectrum%aerosol%humidities%dim_1%LB + seat_spectrum%aerosol%humidities%dim_1%EX ) /= .false. ) then
14660.                          _substr(t$6841,1,13) = 'Rad_UKMO.f90'
14660.                          _substr(t$6842,1,11) = 'HUMIDITIES'
14660.                         t$6827 = seat_spectrum%aerosol%humidities%dim_1%LB
14660.                         t$6828 = -1 + seat_spectrum%aerosol%humidities%dim_1%LB + seat_spectrum%aerosol%humidities%dim_1%EX
14660.                         t$6829 = 1 + $I_L14658_24
14660.                         call _bounds_error(  _substr(t$6841,1,13), 14660,  _substr(t$6842,1,11), 1, t$6827, t$6828, t$6829, t$6840 )
14660.                      endif
14660.                      if ( ( i_species < seat_spectrum%aerosol%humidities%dim_2%LB .or. i_species > -1 + seat_spectrum%aerosol%humidities%dim_2%LB + seat_spectrum%aerosol%humidities%dim_2%EX ) /= .false. ) then
14660.                          _substr(t$6844,1,13) = 'Rad_UKMO.f90'
14660.                          _substr(t$6845,1,11) = 'HUMIDITIES'
14660.                         t$6846 = seat_spectrum%aerosol%humidities%dim_2%LB
14660.                         t$6847 = -1 + seat_spectrum%aerosol%humidities%dim_2%LB + seat_spectrum%aerosol%humidities%dim_2%EX
14660.                         t$6848 = i_species
14660.                         call _bounds_error(  _substr(t$6844,1,13), 14660,  _substr(t$6845,1,11), 2, t$6846, t$6847, t$6848, t$6843 )
14660.                      endif
14659.                      $Unit_temp_O7 = iu_spc
14659.                      $IOindex_O8 = 1 + $I_L14658_24
14659.                      $IOindex_O9 = i_species
14659.                      t$6839 = _fread( _clist( 0, 1, 0, $Unit_temp_O7, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%humidities%base_addr)($IOindex_O8, $IOindex_O9, 0), 0x804060300000000L ) ) )
14659.                      if ( t$6839 == 0 ) then
14661.                         if ( ( ( 1 + $I_L14658_24 ) < seat_spectrum%aerosol%abs%dim_1%LB .or. ( 1 + $I_L14658_24 ) > -1 + seat_spectrum%aerosol%abs%dim_1%LB + seat_spectrum%aerosol%abs%dim_1%EX ) /= .false. ) then
14661.                             _substr(t$6850,1,13) = 'Rad_UKMO.f90'
14661.                             _substr(t$6851,1,4) = 'ABS'
14661.                            t$6852 = seat_spectrum%aerosol%abs%dim_1%LB
14661.                            t$6853 = -1 + seat_spectrum%aerosol%abs%dim_1%LB + seat_spectrum%aerosol%abs%dim_1%EX
14661.                            t$6854 = 1 + $I_L14658_24
14661.                            call _bounds_error(  _substr(t$6850,1,13), 14661,  _substr(t$6851,1,4), 1, t$6852, t$6853, t$6854, t$6849 )
14661.                         endif
14661.                         if ( ( i_species < seat_spectrum%aerosol%abs%dim_2%LB .or. i_species > -1 + seat_spectrum%aerosol%abs%dim_2%LB + seat_spectrum%aerosol%abs%dim_2%EX ) /= .false. ) then
14661.                             _substr(t$6856,1,13) = 'Rad_UKMO.f90'
14661.                             _substr(t$6857,1,4) = 'ABS'
14661.                            t$6858 = seat_spectrum%aerosol%abs%dim_2%LB
14661.                            t$6859 = -1 + seat_spectrum%aerosol%abs%dim_2%LB + seat_spectrum%aerosol%abs%dim_2%EX
14661.                            t$6860 = i_species
14661.                            call _bounds_error(  _substr(t$6856,1,13), 14661,  _substr(t$6857,1,4), 2, t$6858, t$6859, t$6860, t$6855 )
14661.                         endif
14661.                         if ( ( i < seat_spectrum%aerosol%abs%dim_3%LB .or. i > -1 + seat_spectrum%aerosol%abs%dim_3%LB + seat_spectrum%aerosol%abs%dim_3%EX ) /= .false. ) then
14661.                             _substr(t$6862,1,13) = 'Rad_UKMO.f90'
14661.                             _substr(t$6863,1,4) = 'ABS'
14661.                            t$6864 = seat_spectrum%aerosol%abs%dim_3%LB
14661.                            t$6865 = -1 + seat_spectrum%aerosol%abs%dim_3%LB + seat_spectrum%aerosol%abs%dim_3%EX
14661.                            t$6866 = i
14661.                            call _bounds_error(  _substr(t$6862,1,13), 14661,  _substr(t$6863,1,4), 3, t$6864, t$6865, t$6866, t$6861 )
14661.                         endif
14659.                         $Unit_temp_O10 = iu_spc
14659.                         $IOindex_O11 = 1 + $I_L14658_24
14659.                         $IOindex_O12 = i_species
14659.                         $IOindex_O13 = i
14659.                         t$6839 = _fread( _clist( 0, 1, 0, $Unit_temp_O10, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%abs%base_addr)($IOindex_O11, $IOindex_O12, $IOindex_O13, 0), 0x804060300000000L ) ) )
14659.                         if ( t$6839 == 0 ) then
14662.                            if ( ( ( 1 + $I_L14658_24 ) < seat_spectrum%aerosol%scat%dim_1%LB .or. ( 1 + $I_L14658_24 ) > -1 + seat_spectrum%aerosol%scat%dim_1%LB + seat_spectrum%aerosol%scat%dim_1%EX ) /= .false. ) then
14662.                                _substr(t$6868,1,13) = 'Rad_UKMO.f90'
14662.                                _substr(t$6869,1,5) = 'SCAT'
14662.                               t$6870 = seat_spectrum%aerosol%scat%dim_1%LB
14662.                               t$6871 = -1 + seat_spectrum%aerosol%scat%dim_1%LB + seat_spectrum%aerosol%scat%dim_1%EX
14662.                               t$6872 = 1 + $I_L14658_24
14662.                               call _bounds_error(  _substr(t$6868,1,13), 14662,  _substr(t$6869,1,5), 1, t$6870, t$6871, t$6872, t$6867 )
14662.                            endif
14662.                            if ( ( i_species < seat_spectrum%aerosol%scat%dim_2%LB .or. i_species > -1 + seat_spectrum%aerosol%scat%dim_2%LB + seat_spectrum%aerosol%scat%dim_2%EX ) /= .false. ) then
14662.                                _substr(t$6874,1,13) = 'Rad_UKMO.f90'
14662.                                _substr(t$6875,1,5) = 'SCAT'
14662.                               t$6876 = seat_spectrum%aerosol%scat%dim_2%LB
14662.                               t$6877 = -1 + seat_spectrum%aerosol%scat%dim_2%LB + seat_spectrum%aerosol%scat%dim_2%EX
14662.                               t$6878 = i_species
14662.                               call _bounds_error(  _substr(t$6874,1,13), 14662,  _substr(t$6875,1,5), 2, t$6876, t$6877, t$6878, t$6873 )
14662.                            endif
14662.                            if ( ( i < seat_spectrum%aerosol%scat%dim_3%LB .or. i > -1 + seat_spectrum%aerosol%scat%dim_3%LB + seat_spectrum%aerosol%scat%dim_3%EX ) /= .false. ) then
14662.                                _substr(t$6880,1,13) = 'Rad_UKMO.f90'
14662.                                _substr(t$6881,1,5) = 'SCAT'
14662.                               t$6882 = seat_spectrum%aerosol%scat%dim_3%LB
14662.                               t$6883 = -1 + seat_spectrum%aerosol%scat%dim_3%LB + seat_spectrum%aerosol%scat%dim_3%EX
14662.                               t$6884 = i
14662.                               call _bounds_error(  _substr(t$6880,1,13), 14662,  _substr(t$6881,1,5), 3, t$6882, t$6883, t$6884, t$6879 )
14662.                            endif
14659.                            $Unit_temp_O14 = iu_spc
14659.                            $IOindex_O15 = 1 + $I_L14658_24
14659.                            $IOindex_O16 = i_species
14659.                            $IOindex_O17 = i
14659.                            t$6839 = _fread( _clist( 0, 1, 0, $Unit_temp_O14, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%scat%base_addr)($IOindex_O15, $IOindex_O16, $IOindex_O17, 0), 0x804060300000000L ) ) )
14659.                            if ( t$6839 == 0 ) then
14664.                               if ( ( i_species < seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB .or. i_species > -1 + seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB + seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%EX ) /= .false. ) then
14664.                                   _substr(t$6886,1,13) = 'Rad_UKMO.f90'
14664.                                   _substr(t$6887,1,19) = 'N_AEROSOL_PHF_TERM'
14664.                                  t$6888 = seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB
14664.                                  t$6889 = -1 + seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%LB + seat_spectrum%aerosol%n_aerosol_phf_term%dim_1%EX
14664.                                  t$6890 = i_species
14664.                                  call _bounds_error(  _substr(t$6886,1,13), 14664,  _substr(t$6887,1,19), 1, t$6888, t$6889, t$6890, t$6885 )
14664.                               endif
14659.                               $t_S3 = (seat_spectrum%aerosol%n_aerosol_phf_term%base_addr)(i_species, 0)
14659.                               if ( $t_S3 > 0 ) then
14659.                                  $I_L14659_20 = 0
14659.                                  do
14663.                                     if ( ( ( 1 + $I_L14658_24 ) < seat_spectrum%aerosol%phf_fnc%dim_1%LB .or. ( 1 + $I_L14658_24 ) > -1 + seat_spectrum%aerosol%phf_fnc%dim_1%LB + seat_spectrum%aerosol%phf_fnc%dim_1%EX ) /= .false. ) then
14663.                                         _substr(t$6895,1,13) = 'Rad_UKMO.f90'
14663.                                         _substr(t$6896,1,8) = 'PHF_FNC'
14663.                                        t$6897 = seat_spectrum%aerosol%phf_fnc%dim_1%LB
14663.                                        t$6898 = -1 + seat_spectrum%aerosol%phf_fnc%dim_1%LB + seat_spectrum%aerosol%phf_fnc%dim_1%EX
14663.                                        t$6899 = 1 + $I_L14658_24
14663.                                        call _bounds_error(  _substr(t$6895,1,13), 14663,  _substr(t$6896,1,8), 1, t$6897, t$6898, t$6899, t$6894 )
14663.                                     endif
14663.                                     if ( ( ( 1 + $I_L14659_20 ) < seat_spectrum%aerosol%phf_fnc%dim_2%LB .or. ( 1 + $I_L14659_20 ) > -1 + seat_spectrum%aerosol%phf_fnc%dim_2%LB + seat_spectrum%aerosol%phf_fnc%dim_2%EX ) /= .false. ) then
14663.                                         _substr(t$6901,1,13) = 'Rad_UKMO.f90'
14663.                                         _substr(t$6902,1,8) = 'PHF_FNC'
14663.                                        t$6903 = seat_spectrum%aerosol%phf_fnc%dim_2%LB
14663.                                        t$6904 = -1 + seat_spectrum%aerosol%phf_fnc%dim_2%LB + seat_spectrum%aerosol%phf_fnc%dim_2%EX
14663.                                        t$6905 = 1 + $I_L14659_20
14663.                                        call _bounds_error(  _substr(t$6901,1,13), 14663,  _substr(t$6902,1,8), 2, t$6903, t$6904, t$6905, t$6900 )
14663.                                     endif
14663.                                     if ( ( i_species < seat_spectrum%aerosol%phf_fnc%dim_3%LB .or. i_species > -1 + seat_spectrum%aerosol%phf_fnc%dim_3%LB + seat_spectrum%aerosol%phf_fnc%dim_3%EX ) /= .false. ) then
14663.                                         _substr(t$6907,1,13) = 'Rad_UKMO.f90'
14663.                                         _substr(t$6908,1,8) = 'PHF_FNC'
14663.                                        t$6909 = seat_spectrum%aerosol%phf_fnc%dim_3%LB
14663.                                        t$6910 = -1 + seat_spectrum%aerosol%phf_fnc%dim_3%LB + seat_spectrum%aerosol%phf_fnc%dim_3%EX
14663.                                        t$6911 = i_species
14663.                                        call _bounds_error(  _substr(t$6907,1,13), 14663,  _substr(t$6908,1,8), 3, t$6909, t$6910, t$6911, t$6906 )
14663.                                     endif
14663.                                     if ( ( i < seat_spectrum%aerosol%phf_fnc%dim_4%LB .or. i > -1 + seat_spectrum%aerosol%phf_fnc%dim_4%LB + seat_spectrum%aerosol%phf_fnc%dim_4%EX ) /= .false. ) then
14663.                                         _substr(t$6913,1,13) = 'Rad_UKMO.f90'
14663.                                         _substr(t$6914,1,8) = 'PHF_FNC'
14663.                                        t$6915 = seat_spectrum%aerosol%phf_fnc%dim_4%LB
14663.                                        t$6916 = -1 + seat_spectrum%aerosol%phf_fnc%dim_4%LB + seat_spectrum%aerosol%phf_fnc%dim_4%EX
14663.                                        t$6917 = i
14663.                                        call _bounds_error(  _substr(t$6913,1,13), 14663,  _substr(t$6914,1,8), 4, t$6915, t$6916, t$6917, t$6912 )
14663.                                     endif
14659.                                     $Unit_temp_O18 = iu_spc
14659.                                     $IOindex_O19 = 1 + $I_L14658_24
14659.                                     $IOindex_O20 = 1 + $I_L14659_20
14659.                                     $IOindex_O21 = i_species
14659.                                     $IOindex_O22 = i
14659.                                     t$6839 = _fread( _clist( 0, 1, 0, $Unit_temp_O18, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%aerosol%phf_fnc%base_addr)($IOindex_O19, $IOindex_O20, $IOindex_O21, $IOindex_O22, 0), 0x804060300000000L ) ) )
14659.                                     if ( t$6839 /= 0 ) goto 20
14659.                                     $I_L14659_20 = 1 + $I_L14659_20
14659.                                     if ( $I_L14659_20 >= $t_S3 ) exit
14659.                                  enddo
14659.                                  goto 10
14659.                               else
14659.    10                            continue
14659.                                  $Unit_temp_O23 = iu_spc
14659.                                  t$6839 = _fread( _clist( 0, 1, 1, $Unit_temp_O23, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14659.                               endif
14659.                            endif
14659.                         endif
14659.                      endif
14659.                   endif
14659.    20             continue
14665.                   if ( ios /= 0 ) then
14666.                      _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$531,  _substr(t$530,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_11_1_2', 0x800600000000L ), _iotype( 'Moist aerosol scattering data are not in the correct format.', 0x800600000000L ) ) )
14669.                      seat_ierr = 1
14669.                      goto 40
14669.                   endif
14672.                   $I_L14658_24 = 1 + $I_L14658_24
14672.                   if ( $I_L14658_24 >= $t_S1 ) exit
14672.                enddo
14673.                $I_L14656_26 = 1 + $I_L14656_26
14672.             else
14672.             endif
14672.             if ( $I_L14656_26 >= $t_S5 ) exit
14672.          enddo
14673.          i = ( 1 + $t_S5 )
14673.          goto 30
14673.       else
14673.    30    continue
14675.          if ( (seat_spectrum%aerosol%n_aerosol_phf_term%base_addr)(i_species, 0) == 1 ) then
14676.             (seat_spectrum%aerosol%i_aerosol_parm%base_addr)(i_species, 0) = 2
14677.          else if ( (seat_spectrum%aerosol%n_aerosol_phf_term%base_addr)(i_species, 0) > 1 ) then
14678.             (seat_spectrum%aerosol%i_aerosol_parm%base_addr)(i_species, 0) = 5
14678.          endif
14682.          (seat_spectrum%aerosol%l_aero_spec%base_addr)(i_species, 0) = .true.
14682.       endif
14682.    40 continue
14687.       return
14687.       end
14687.       
14692.       
14692.       subroutine read_block_12_0_0_int
14711.       if ( seat_spectrum%ice%l_ice_type%header%assoc /= 1 ) then
14712.          seat_spectrum%ice%l_ice_type%header%a_contig = 1
14712.          seat_spectrum%ice%l_ice_type%dim_1%LB = 1
14712.          seat_spectrum%ice%l_ice_type%dim_1%EX = _zla( 0, (nd_ice_type%base_addr)(0) )
14712.          seat_spectrum%ice%l_ice_type%dim_1%SM = 1
14712.          $_allo_P1(0) = 0x1000000000001L
14712.          $_allo_P1(1) = loc( seat_spectrum%ice%l_ice_type )
14712.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
14713.          $F_A34 = (nd_ice_type%base_addr)(0)
14713.          if ( (nd_ice_type%base_addr)(0) > 0 ) then
14713.             $SC_spectrum_I2 = seat_spectrum%ice%l_ice_type%dim_1%EX
14713.             $I_L14713_22 = 0
14713. !dir$ ivdep
14713.             do
14713.                (seat_spectrum%ice%l_ice_type%base_addr)(1 + $I_L14713_22, 0) = .false.
14713.                $I_L14713_22 = 1 + $I_L14713_22
14713.                if ( $I_L14713_22 >= $F_A34 ) exit
14713.             enddo
14713.          endif
14714.          seat_spectrum%ice%i_ice_parm%header%a_contig = 1
14714.          seat_spectrum%ice%i_ice_parm%dim_1%LB = 1
14714.          seat_spectrum%ice%i_ice_parm%dim_1%EX = ( max( 0, (nd_ice_type%base_addr)(0) ) )
14714.          seat_spectrum%ice%i_ice_parm%dim_1%SM = 1
14714.          $_allo_P2(0) = 0x1000000000001L
14714.          $_allo_P2(1) = loc( seat_spectrum%ice%i_ice_parm )
14714.          call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
14715.          seat_spectrum%ice%parm_min_dim%header%a_contig = 1
14715.          seat_spectrum%ice%parm_min_dim%dim_1%LB = 1
14715.          seat_spectrum%ice%parm_min_dim%dim_1%EX = ( max( 0, (nd_ice_type%base_addr)(0) ) )
14715.          seat_spectrum%ice%parm_min_dim%dim_1%SM = 1
14715.          $_allo_P3(0) = 0x1000000000001L
14715.          $_allo_P3(1) = loc( seat_spectrum%ice%parm_min_dim )
14715.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
14716.          seat_spectrum%ice%parm_max_dim%header%a_contig = 1
14716.          seat_spectrum%ice%parm_max_dim%dim_1%LB = 1
14716.          seat_spectrum%ice%parm_max_dim%dim_1%EX = ( max( 0, (nd_ice_type%base_addr)(0) ) )
14716.          seat_spectrum%ice%parm_max_dim%dim_1%SM = 1
14716.          $_allo_P4(0) = 0x1000000000001L
14716.          $_allo_P4(1) = loc( seat_spectrum%ice%parm_max_dim )
14716.          call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
14717.          seat_spectrum%ice%n_phf%header%a_contig = 1
14717.          seat_spectrum%ice%n_phf%dim_1%LB = 1
14717.          seat_spectrum%ice%n_phf%dim_1%EX = ( max( 0, (nd_ice_type%base_addr)(0) ) )
14717.          seat_spectrum%ice%n_phf%dim_1%SM = 1
14717.          $_allo_P5(0) = 0x1000000000001L
14717.          $_allo_P5(1) = loc( seat_spectrum%ice%n_phf )
14717.          call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
14718.          seat_spectrum%ice%parm_list%header%a_contig = 1
14718.          seat_spectrum%ice%parm_list%dim_1%LB = 1
14718.          seat_spectrum%ice%parm_list%dim_1%EX = ( max( 0, (nd_cloud_parameter%base_addr)(0) ) )
14718.          seat_spectrum%ice%parm_list%dim_1%SM = 1
14718.          seat_spectrum%ice%parm_list%dim_2%LB = 1
14718.          seat_spectrum%ice%parm_list%dim_2%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14718.          seat_spectrum%ice%parm_list%dim_2%SM = ( max( 0, (nd_cloud_parameter%base_addr)(0) ) )
14718.          seat_spectrum%ice%parm_list%dim_3%LB = 1
14718.          seat_spectrum%ice%parm_list%dim_3%EX = ( max( 0, (nd_ice_type%base_addr)(0) ) )
14718.          seat_spectrum%ice%parm_list%dim_3%SM = ( max( 0, (nd_cloud_parameter%base_addr)(0) ) * max( 0, (nd_band%base_addr)(0) ) )
14718.          $_allo_P6(0) = 0x1000000000001L
14718.          $_allo_P6(1) = loc( seat_spectrum%ice%parm_list )
14718.          call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
14718.       endif
14723.       $Unit_temp_O0 = iu_spc
14723.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$533,  _substr(t$532,1,33), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P0(:( 0, 2, 1 )), 0x2000200000000L ) ) )
14723.       i_ice = $_IOitem_P0(0)
14723.       i_parametrization_ice = $_IOitem_P0(1)
14723.       i_dummy = $_IOitem_P0(2)
14725.       if ( i_ice > (nd_ice_type%base_addr)(0) ) then
14726.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$535,  _substr(t$534,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_12_0_0', 0x800600000000L ), _iotype( 'Type of ice crystal exceeds maximum permitted value:', 0x800600000000L ), _iotype( 'Increase npd_ice_type and recompile.', 0x800600000000L ) ) )
14730.          seat_ierr = 1
14732.       else if ( i_parametrization_ice == 1 ) then
14732.          goto 10
14732.       else if ( i_parametrization_ice == 6 ) then
14732.          goto 10
14732.       else if ( i_parametrization_ice == 7 ) then
14732.          goto 10
14732.       else if ( i_parametrization_ice == 9 ) then
14732.          goto 10
14732.       else if ( i_parametrization_ice == 10 ) then
14732.          goto 10
14732.       else if ( i_parametrization_ice == 4 ) then
14732.          goto 10
14732.       else if ( i_parametrization_ice == 5 ) then
14732.    10    continue
14747.          (seat_spectrum%ice%parm_min_dim%base_addr)(i_ice, 0) = 0.0
14748.          (seat_spectrum%ice%parm_max_dim%base_addr)(i_ice, 0) = 0.0
14750.          (seat_spectrum%ice%n_phf%base_addr)(i_ice, 0) = 1
14753.          $t_S2 = seat_spectrum%basic%n_band
14753.          i = 1
14753.          if ( seat_spectrum%basic%n_band <= 0 ) then
14734.             goto 20
14734.          else if ( i_dummy > 0 ) then
14753.             $I_L14753_24 = 0
14753.             do
14753.                i = ( 1 + $I_L14753_24 )
14754.                $Unit_temp_O1 = iu_spc
14754.                _fread( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$537,  _substr(t$536,1,2), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14755.                $Unit_temp_O2 = iu_spc
14755.                t$6921 = _fread( _clist( 0, 1, 2, $Unit_temp_O2, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14755.                if ( t$6921 == 0 ) then
14755.                   $I_L14755_18 = 0
14755.                   do
14756.                      if ( ( ( 1 + $I_L14755_18 ) < seat_spectrum%ice%parm_list%dim_1%LB .or. ( 1 + $I_L14755_18 ) > -1 + seat_spectrum%ice%parm_list%dim_1%LB + seat_spectrum%ice%parm_list%dim_1%EX ) /= .false. ) then
14756.                          _substr(t$6926,1,13) = 'Rad_UKMO.f90'
14756.                          _substr(t$6927,1,10) = 'PARM_LIST'
14756.                         t$6928 = seat_spectrum%ice%parm_list%dim_1%LB
14756.                         t$6929 = -1 + seat_spectrum%ice%parm_list%dim_1%LB + seat_spectrum%ice%parm_list%dim_1%EX
14756.                         t$6930 = 1 + $I_L14755_18
14756.                         call _bounds_error(  _substr(t$6926,1,13), 14756,  _substr(t$6927,1,10), 1, t$6928, t$6929, t$6930, t$6925 )
14756.                      endif
14756.                      if ( ( i < seat_spectrum%ice%parm_list%dim_2%LB .or. i > -1 + seat_spectrum%ice%parm_list%dim_2%LB + seat_spectrum%ice%parm_list%dim_2%EX ) /= .false. ) then
14756.                          _substr(t$6932,1,13) = 'Rad_UKMO.f90'
14756.                          _substr(t$6933,1,10) = 'PARM_LIST'
14756.                         t$6934 = seat_spectrum%ice%parm_list%dim_2%LB
14756.                         t$6935 = -1 + seat_spectrum%ice%parm_list%dim_2%LB + seat_spectrum%ice%parm_list%dim_2%EX
14756.                         t$6936 = i
14756.                         call _bounds_error(  _substr(t$6932,1,13), 14756,  _substr(t$6933,1,10), 2, t$6934, t$6935, t$6936, t$6931 )
14756.                      endif
14756.                      if ( ( i_ice < seat_spectrum%ice%parm_list%dim_3%LB .or. i_ice > -1 + seat_spectrum%ice%parm_list%dim_3%LB + seat_spectrum%ice%parm_list%dim_3%EX ) /= .false. ) then
14756.                          _substr(t$6938,1,13) = 'Rad_UKMO.f90'
14756.                          _substr(t$6939,1,10) = 'PARM_LIST'
14756.                         t$6940 = seat_spectrum%ice%parm_list%dim_3%LB
14756.                         t$6941 = -1 + seat_spectrum%ice%parm_list%dim_3%LB + seat_spectrum%ice%parm_list%dim_3%EX
14756.                         t$6942 = i_ice
14756.                         call _bounds_error(  _substr(t$6938,1,13), 14756,  _substr(t$6939,1,10), 3, t$6940, t$6941, t$6942, t$6937 )
14756.                      endif
14755.                      $Unit_temp_O3 = iu_spc
14755.                      $IOindex_O4 = 1 + $I_L14755_18
14755.                      $IOindex_O5 = i
14755.                      $IOindex_O6 = i_ice
14755.                      t$6921 = _fread( _clist( 0, 1, 0, $Unit_temp_O3, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%ice%parm_list%base_addr)($IOindex_O4, $IOindex_O5, $IOindex_O6, 0), 0x804060300000000L ) ) )
14755.                      if ( t$6921 /= 0 ) goto 30
14755.                      $I_L14755_18 = 1 + $I_L14755_18
14755.                      if ( $I_L14755_18 >= i_dummy ) exit
14755.                   enddo
14755.                   $Unit_temp_O7 = iu_spc
14755.                   t$6921 = _fread( _clist( 0, 1, 1, $Unit_temp_O7, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14755.                endif
14755.    30          continue
14758.                if ( ios /= 0 ) then
14755.                   goto 40
14755.                endif
14765.                $I_L14753_24 = 1 + $I_L14753_24
14765.                if ( $I_L14753_24 >= $t_S2 ) exit
14765.             enddo
14765.             goto 50
14765.          else
14765.             $SC_spectrum_I0 = seat_spectrum%basic%n_band
14753.             $I_L14753_20 = 0
14753.             do
14754.                $Unit_temp_O1 = iu_spc
14754.                _fread( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$537,  _substr(t$536,1,2), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14755.                $Unit_temp_O2 = iu_spc
14755.                t$6921 = _fread( _clist( 0, 1, 2, $Unit_temp_O2, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14755.                if ( t$6921 == 0 ) then
14755.                   $Unit_temp_O7 = iu_spc
14755.                   t$6921 = _fread( _clist( 0, 1, 1, $Unit_temp_O7, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14755.                endif
14758.                if ( ios /= 0 ) then
14753.                   i = ( 1 + $I_L14753_20 )
14753.    40             continue
14759.                   _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$539,  _substr(t$538,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_12_0_0', 0x800600000000L ), _iotype( 'Data for ice crystals are not in the correct format.', 0x800600000000L ) ) )
14762.                   seat_ierr = 1
14762.                   goto 60
14762.                endif
14765.                $I_L14753_20 = 1 + $I_L14753_20
14765.                if ( $I_L14753_20 >= $SC_spectrum_I0 ) exit
14765.             enddo
14765.    50       continue
14765.             i = ( 1 + $t_S2 )
14765.    20       continue
14777.             (seat_spectrum%ice%l_ice_type%base_addr)(i_ice, 0) = .true.
14778.             (seat_spectrum%ice%i_ice_parm%base_addr)(i_ice, 0) = i_parametrization_ice
14778.          endif
14778.       else
14768.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$541,  _substr(t$540,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** error in subroutine read_block_12_0_0', 0x800600000000L ), _iotype( 'An unknown parametrization scheme has been specified.', 0x800600000000L ) ) )
14771.          seat_ierr = 1
14771.       endif
14771.    60 continue
14783.       return
14783.       end
14783.       
14788.       
14788.       subroutine read_block_12_0_1_int
14805.       if ( seat_spectrum%ice%l_ice_type%header%assoc /= 1 ) then
14806.          seat_spectrum%ice%l_ice_type%header%a_contig = 1
14806.          seat_spectrum%ice%l_ice_type%dim_1%LB = 1
14806.          seat_spectrum%ice%l_ice_type%dim_1%EX = _zla( 0, (nd_ice_type%base_addr)(0) )
14806.          seat_spectrum%ice%l_ice_type%dim_1%SM = 1
14806.          $_allo_P1(0) = 0x1000000000001L
14806.          $_allo_P1(1) = loc( seat_spectrum%ice%l_ice_type )
14806.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
14807.          $F_A34 = (nd_ice_type%base_addr)(0)
14807.          if ( (nd_ice_type%base_addr)(0) > 0 ) then
14807.             $SC_spectrum_I1 = seat_spectrum%ice%l_ice_type%dim_1%EX
14807.             $I_L14807_10 = 0
14807. !dir$ ivdep
14807.             do
14807.                (seat_spectrum%ice%l_ice_type%base_addr)(1 + $I_L14807_10, 0) = .false.
14807.                $I_L14807_10 = 1 + $I_L14807_10
14807.                if ( $I_L14807_10 >= $F_A34 ) exit
14807.             enddo
14807.          endif
14808.          seat_spectrum%ice%i_ice_parm%header%a_contig = 1
14808.          seat_spectrum%ice%i_ice_parm%dim_1%LB = 1
14808.          seat_spectrum%ice%i_ice_parm%dim_1%EX = ( max( 0, (nd_ice_type%base_addr)(0) ) )
14808.          seat_spectrum%ice%i_ice_parm%dim_1%SM = 1
14808.          $_allo_P2(0) = 0x1000000000001L
14808.          $_allo_P2(1) = loc( seat_spectrum%ice%i_ice_parm )
14808.          call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
14809.          seat_spectrum%ice%parm_min_dim%header%a_contig = 1
14809.          seat_spectrum%ice%parm_min_dim%dim_1%LB = 1
14809.          seat_spectrum%ice%parm_min_dim%dim_1%EX = ( max( 0, (nd_ice_type%base_addr)(0) ) )
14809.          seat_spectrum%ice%parm_min_dim%dim_1%SM = 1
14809.          $_allo_P3(0) = 0x1000000000001L
14809.          $_allo_P3(1) = loc( seat_spectrum%ice%parm_min_dim )
14809.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
14810.          seat_spectrum%ice%parm_max_dim%header%a_contig = 1
14810.          seat_spectrum%ice%parm_max_dim%dim_1%LB = 1
14810.          seat_spectrum%ice%parm_max_dim%dim_1%EX = ( max( 0, (nd_ice_type%base_addr)(0) ) )
14810.          seat_spectrum%ice%parm_max_dim%dim_1%SM = 1
14810.          $_allo_P4(0) = 0x1000000000001L
14810.          $_allo_P4(1) = loc( seat_spectrum%ice%parm_max_dim )
14810.          call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
14811.          seat_spectrum%ice%n_phf%header%a_contig = 1
14811.          seat_spectrum%ice%n_phf%dim_1%LB = 1
14811.          seat_spectrum%ice%n_phf%dim_1%EX = ( max( 0, (nd_ice_type%base_addr)(0) ) )
14811.          seat_spectrum%ice%n_phf%dim_1%SM = 1
14811.          $_allo_P5(0) = 0x1000000000001L
14811.          $_allo_P5(1) = loc( seat_spectrum%ice%n_phf )
14811.          call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
14812.          seat_spectrum%ice%parm_list%header%a_contig = 1
14812.          seat_spectrum%ice%parm_list%dim_1%LB = 1
14812.          seat_spectrum%ice%parm_list%dim_1%EX = ( max( 0, (nd_cloud_parameter%base_addr)(0) ) )
14812.          seat_spectrum%ice%parm_list%dim_1%SM = 1
14812.          seat_spectrum%ice%parm_list%dim_2%LB = 1
14812.          seat_spectrum%ice%parm_list%dim_2%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14812.          seat_spectrum%ice%parm_list%dim_2%SM = ( max( 0, (nd_cloud_parameter%base_addr)(0) ) )
14812.          seat_spectrum%ice%parm_list%dim_3%LB = 1
14812.          seat_spectrum%ice%parm_list%dim_3%EX = ( max( 0, (nd_ice_type%base_addr)(0) ) )
14812.          seat_spectrum%ice%parm_list%dim_3%SM = ( max( 0, (nd_cloud_parameter%base_addr)(0) ) * max( 0, (nd_band%base_addr)(0) ) )
14812.          $_allo_P6(0) = 0x1000000000001L
14812.          $_allo_P6(1) = loc( seat_spectrum%ice%parm_list )
14812.          call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
14812.       endif
14817.       $Unit_temp_O0 = iu_spc
14817.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$543,  _substr(t$542,1,33), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P0(:( 0, 2, 1 )), 0x2000200000000L ) ) )
14817.       i_ice = $_IOitem_P0(0)
14817.       i_parametrization_ice = $_IOitem_P0(1)
14817.       i_dummy = $_IOitem_P0(2)
14819.       if ( i_ice > (nd_ice_type%base_addr)(0) ) then
14820.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$545,  _substr(t$544,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_12_0_1', 0x800600000000L ), _iotype( 'The indexing number of an ice crystal exceeds the maximum permitted value:', 0x800600000000L ), _iotype( 'Increase npd_ice_type and recompile.', 0x800600000000L ) ) )
14825.          seat_ierr = 1
14827.       else if ( i_parametrization_ice == 1 ) then
14827.          goto 10
14827.       else if ( i_parametrization_ice == 6 ) then
14827.          goto 10
14827.       else if ( i_parametrization_ice == 7 ) then
14827.          goto 10
14827.       else if ( i_parametrization_ice == 9 ) then
14827.          goto 10
14827.       else if ( i_parametrization_ice == 10 ) then
14827.          goto 10
14827.       else if ( i_parametrization_ice == 4 ) then
14827.          goto 10
14827.       else if ( i_parametrization_ice == 5 ) then
14827.    10    continue
14841.          (seat_spectrum%ice%n_phf%base_addr)(i_ice, 0) = 1
14843.          $Unit_temp_O1 = iu_spc
14843.          _fread( _clist( 0, 0, 2, $Unit_temp_O1, Null_Arg, Null_Arg, t$547,  _substr(t$546,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14844.          if ( ( i_ice < seat_spectrum%ice%parm_min_dim%dim_1%LB .or. i_ice > -1 + seat_spectrum%ice%parm_min_dim%dim_1%LB + seat_spectrum%ice%parm_min_dim%dim_1%EX ) /= .false. ) then
14844.              _substr(t$6944,1,13) = 'Rad_UKMO.f90'
14844.              _substr(t$6945,1,13) = 'PARM_MIN_DIM'
14844.             t$6946 = seat_spectrum%ice%parm_min_dim%dim_1%LB
14844.             t$6947 = -1 + seat_spectrum%ice%parm_min_dim%dim_1%LB + seat_spectrum%ice%parm_min_dim%dim_1%EX
14844.             t$6948 = i_ice
14844.             call _bounds_error(  _substr(t$6944,1,13), 14844,  _substr(t$6945,1,13), 1, t$6946, t$6947, t$6948, t$6943 )
14844.          endif
14843.          $Unit_temp_O2 = iu_spc
14843.          $IOindex_O3 = i_ice
14843.          _fread( _clist( 0, 0, 0, $Unit_temp_O2, Null_Arg, Null_Arg, t$547,  _substr(t$546,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%ice%parm_min_dim%base_addr)($IOindex_O3, 0), 0x804060300000000L ) ) )
14845.          if ( ( i_ice < seat_spectrum%ice%parm_max_dim%dim_1%LB .or. i_ice > -1 + seat_spectrum%ice%parm_max_dim%dim_1%LB + seat_spectrum%ice%parm_max_dim%dim_1%EX ) /= .false. ) then
14845.              _substr(t$6950,1,13) = 'Rad_UKMO.f90'
14845.              _substr(t$6951,1,13) = 'PARM_MAX_DIM'
14845.             t$6952 = seat_spectrum%ice%parm_max_dim%dim_1%LB
14845.             t$6953 = -1 + seat_spectrum%ice%parm_max_dim%dim_1%LB + seat_spectrum%ice%parm_max_dim%dim_1%EX
14845.             t$6954 = i_ice
14845.             call _bounds_error(  _substr(t$6950,1,13), 14845,  _substr(t$6951,1,13), 1, t$6952, t$6953, t$6954, t$6949 )
14845.          endif
14843.          $Unit_temp_O4 = iu_spc
14843.          $IOindex_O5 = i_ice
14843.          _fread( _clist( 0, 0, 0, $Unit_temp_O4, Null_Arg, Null_Arg, t$547,  _substr(t$546,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%ice%parm_max_dim%base_addr)($IOindex_O5, 0), 0x804060300000000L ) ) )
14843.          $Unit_temp_O6 = iu_spc
14843.          _fread( _clist( 0, 0, 1, $Unit_temp_O6, Null_Arg, Null_Arg, t$547,  _substr(t$546,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14847.          $t_S1 = seat_spectrum%basic%n_band
14847.          i = 1
14847.          if ( seat_spectrum%basic%n_band > 0 ) then
14847.             $I_L14847_8 = 0
14847.             do
14847.                i = ( 1 + $I_L14847_8 )
14848.                $Unit_temp_O7 = iu_spc
14848.                _fread( _clist( 0, 0, 3, $Unit_temp_O7, Null_Arg, Null_Arg, t$549,  _substr(t$548,1,2), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14850.                if ( ( ( 1 < seat_spectrum%ice%parm_list%dim_1%LB .or. 0 >= -1 + seat_spectrum%ice%parm_list%dim_1%LB + seat_spectrum%ice%parm_list%dim_1%EX .or. i_dummy < seat_spectrum%ice%parm_list%dim_1%LB .or. i_dummy > -1 + seat_spectrum%ice%parm_list%dim_1%LB + seat_spectrum%ice%parm_list%dim_1%EX ) .and. i_dummy > 0 ) /= .false. ) then
14850.                    _substr(t$6960,1,13) = 'Rad_UKMO.f90'
14850.                    _substr(t$6961,1,10) = 'PARM_LIST'
14850.                   t$6946 = seat_spectrum%ice%parm_list%dim_1%LB
14850.                   t$6947 = -1 + seat_spectrum%ice%parm_list%dim_1%LB + seat_spectrum%ice%parm_list%dim_1%EX
14850.                   t$6948 = i_dummy
14850.                   call _rbounds_error(  _substr(t$6960,1,13), 14850,  _substr(t$6961,1,10), 1, t$6946, t$6947, 1, t$6948, 1, t$6959 )
14850.                endif
14850.                if ( ( i < seat_spectrum%ice%parm_list%dim_2%LB .or. i > -1 + seat_spectrum%ice%parm_list%dim_2%LB + seat_spectrum%ice%parm_list%dim_2%EX ) /= .false. ) then
14850.                    _substr(t$6963,1,13) = 'Rad_UKMO.f90'
14850.                    _substr(t$6964,1,10) = 'PARM_LIST'
14850.                   t$6952 = seat_spectrum%ice%parm_list%dim_2%LB
14850.                   t$6953 = -1 + seat_spectrum%ice%parm_list%dim_2%LB + seat_spectrum%ice%parm_list%dim_2%EX
14850.                   t$6954 = i
14850.                   call _bounds_error(  _substr(t$6963,1,13), 14850,  _substr(t$6964,1,10), 2, t$6952, t$6953, t$6954, t$6962 )
14850.                endif
14850.                if ( ( i_ice < seat_spectrum%ice%parm_list%dim_3%LB .or. i_ice > -1 + seat_spectrum%ice%parm_list%dim_3%LB + seat_spectrum%ice%parm_list%dim_3%EX ) /= .false. ) then
14850.                    _substr(t$6966,1,13) = 'Rad_UKMO.f90'
14850.                    _substr(t$6967,1,10) = 'PARM_LIST'
14850.                   t$6968 = seat_spectrum%ice%parm_list%dim_3%LB
14850.                   t$6969 = -1 + seat_spectrum%ice%parm_list%dim_3%LB + seat_spectrum%ice%parm_list%dim_3%EX
14850.                   t$6970 = i_ice
14850.                   call _bounds_error(  _substr(t$6966,1,13), 14850,  _substr(t$6967,1,10), 3, t$6968, t$6969, t$6970, t$6965 )
14850.                endif
14849.                $Unit_temp_O8 = iu_spc
14849.                $IOindex_O9 = i_dummy
14849.                $IOindex_O10 = i
14849.                $IOindex_O11 = i_ice
14849.                t$6958 = _fread( _clist( 0, 1, 3, $Unit_temp_O8, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(seat_spectrum%ice%parm_list%base_addr)(:( 1, $IOindex_O9, 1 ), $IOindex_O10, $IOindex_O11, 0), 0x804060300000000L ) ) )
14852.                if ( ios /= 0 ) then
14853.                   _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$551,  _substr(t$550,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_12_0_1', 0x800600000000L ) ) )
14855.                   _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'Data for ice crystals are not in the correct format.', 0x800600000000L ) ) )
14857.                   seat_ierr = 1
14857.                   goto 30
14857.                endif
14860.                $I_L14847_8 = 1 + $I_L14847_8
14860.                if ( $I_L14847_8 >= $t_S1 ) exit
14860.             enddo
14860.             i = ( 1 + $t_S1 )
14860.             goto 20
14860.          else
14860.    20       continue
14873.             (seat_spectrum%ice%l_ice_type%base_addr)(i_ice, 0) = .true.
14874.             (seat_spectrum%ice%i_ice_parm%base_addr)(i_ice, 0) = i_parametrization_ice
14874.          endif
14874.       else
14863.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$553,  _substr(t$552,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_12_0_1', 0x800600000000L ) ) )
14865.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$555,  _substr(t$554,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'An unknown parametrization scheme has been specified.', 0x800600000000L ) ) )
14867.          seat_ierr = 1
14867.       endif
14867.    30 continue
14879.       return
14879.       end
14879.       
14884.       
14884.       subroutine read_block_12_0_2_int
14901.       if ( seat_spectrum%ice%l_ice_type%header%assoc /= 1 ) then
14902.          seat_spectrum%ice%l_ice_type%header%a_contig = 1
14902.          seat_spectrum%ice%l_ice_type%dim_1%LB = 1
14902.          seat_spectrum%ice%l_ice_type%dim_1%EX = _zla( 0, (nd_ice_type%base_addr)(0) )
14902.          seat_spectrum%ice%l_ice_type%dim_1%SM = 1
14902.          $_allo_P1(0) = 0x1000000000001L
14902.          $_allo_P1(1) = loc( seat_spectrum%ice%l_ice_type )
14902.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
14903.          $F_A34 = (nd_ice_type%base_addr)(0)
14903.          if ( (nd_ice_type%base_addr)(0) > 0 ) then
14903.             $SC_spectrum_I1 = seat_spectrum%ice%l_ice_type%dim_1%EX
14903.             $I_L14903_10 = 0
14903. !dir$ ivdep
14903.             do
14903.                (seat_spectrum%ice%l_ice_type%base_addr)(1 + $I_L14903_10, 0) = .false.
14903.                $I_L14903_10 = 1 + $I_L14903_10
14903.                if ( $I_L14903_10 >= $F_A34 ) exit
14903.             enddo
14903.          endif
14904.          seat_spectrum%ice%i_ice_parm%header%a_contig = 1
14904.          seat_spectrum%ice%i_ice_parm%dim_1%LB = 1
14904.          seat_spectrum%ice%i_ice_parm%dim_1%EX = ( max( 0, (nd_ice_type%base_addr)(0) ) )
14904.          seat_spectrum%ice%i_ice_parm%dim_1%SM = 1
14904.          $_allo_P2(0) = 0x1000000000001L
14904.          $_allo_P2(1) = loc( seat_spectrum%ice%i_ice_parm )
14904.          call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
14905.          seat_spectrum%ice%parm_min_dim%header%a_contig = 1
14905.          seat_spectrum%ice%parm_min_dim%dim_1%LB = 1
14905.          seat_spectrum%ice%parm_min_dim%dim_1%EX = ( max( 0, (nd_ice_type%base_addr)(0) ) )
14905.          seat_spectrum%ice%parm_min_dim%dim_1%SM = 1
14905.          $_allo_P3(0) = 0x1000000000001L
14905.          $_allo_P3(1) = loc( seat_spectrum%ice%parm_min_dim )
14905.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
14906.          seat_spectrum%ice%parm_max_dim%header%a_contig = 1
14906.          seat_spectrum%ice%parm_max_dim%dim_1%LB = 1
14906.          seat_spectrum%ice%parm_max_dim%dim_1%EX = ( max( 0, (nd_ice_type%base_addr)(0) ) )
14906.          seat_spectrum%ice%parm_max_dim%dim_1%SM = 1
14906.          $_allo_P4(0) = 0x1000000000001L
14906.          $_allo_P4(1) = loc( seat_spectrum%ice%parm_max_dim )
14906.          call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
14907.          seat_spectrum%ice%n_phf%header%a_contig = 1
14907.          seat_spectrum%ice%n_phf%dim_1%LB = 1
14907.          seat_spectrum%ice%n_phf%dim_1%EX = ( max( 0, (nd_ice_type%base_addr)(0) ) )
14907.          seat_spectrum%ice%n_phf%dim_1%SM = 1
14907.          $_allo_P5(0) = 0x1000000000001L
14907.          $_allo_P5(1) = loc( seat_spectrum%ice%n_phf )
14907.          call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
14908.          seat_spectrum%ice%parm_list%header%a_contig = 1
14908.          seat_spectrum%ice%parm_list%dim_1%LB = 1
14908.          seat_spectrum%ice%parm_list%dim_1%EX = ( max( 0, (nd_cloud_parameter%base_addr)(0) ) )
14908.          seat_spectrum%ice%parm_list%dim_1%SM = 1
14908.          seat_spectrum%ice%parm_list%dim_2%LB = 1
14908.          seat_spectrum%ice%parm_list%dim_2%EX = ( max( 0, (nd_band%base_addr)(0) ) )
14908.          seat_spectrum%ice%parm_list%dim_2%SM = ( max( 0, (nd_cloud_parameter%base_addr)(0) ) )
14908.          seat_spectrum%ice%parm_list%dim_3%LB = 1
14908.          seat_spectrum%ice%parm_list%dim_3%EX = ( max( 0, (nd_ice_type%base_addr)(0) ) )
14908.          seat_spectrum%ice%parm_list%dim_3%SM = ( max( 0, (nd_cloud_parameter%base_addr)(0) ) * max( 0, (nd_band%base_addr)(0) ) )
14908.          $_allo_P6(0) = 0x1000000000001L
14908.          $_allo_P6(1) = loc( seat_spectrum%ice%parm_list )
14908.          call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
14908.       endif
14913.       $Unit_temp_O0 = iu_spc
14913.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$557,  _substr(t$556,1,33), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P0(:( 0, 2, 1 )), 0x2000200000000L ) ) )
14913.       i_ice = $_IOitem_P0(0)
14913.       i_parametrization_ice = $_IOitem_P0(1)
14913.       i_dummy = $_IOitem_P0(2)
14915.       if ( i_ice > (nd_ice_type%base_addr)(0) ) then
14916.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$559,  _substr(t$558,1,12), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_12_0_2', 0x800600000000L ), _iotype( 'The indexing number of an ice crystal exceeds the maximum permitted value:', 0x800600000000L ), _iotype( 'Increase npd_ice_type and recompile.', 0x800600000000L ) ) )
14921.          seat_ierr = 1
14923.       else if ( i_parametrization_ice == 1 ) then
14923.          goto 10
14923.       else if ( i_parametrization_ice == 6 ) then
14923.          goto 10
14923.       else if ( i_parametrization_ice == 7 ) then
14923.          goto 10
14923.       else if ( i_parametrization_ice == 9 ) then
14923.          goto 10
14923.       else if ( i_parametrization_ice == 10 ) then
14923.          goto 10
14923.       else if ( i_parametrization_ice == 11 ) then
14923.          goto 10
14923.       else if ( i_parametrization_ice == 12 ) then
14923.          goto 10
14923.       else if ( i_parametrization_ice == 4 ) then
14923.          goto 10
14923.       else if ( i_parametrization_ice == 5 ) then
14923.    10    continue
14937.          if ( ( i_ice < seat_spectrum%ice%n_phf%dim_1%LB .or. i_ice > -1 + seat_spectrum%ice%n_phf%dim_1%LB + seat_spectrum%ice%n_phf%dim_1%EX ) /= .false. ) then
14937.              _substr(t$6972,1,13) = 'Rad_UKMO.f90'
14937.              _substr(t$6973,1,6) = 'N_PHF'
14937.             t$6974 = seat_spectrum%ice%n_phf%dim_1%LB
14937.             t$6975 = -1 + seat_spectrum%ice%n_phf%dim_1%LB + seat_spectrum%ice%n_phf%dim_1%EX
14937.             t$6976 = i_ice
14937.             call _bounds_error(  _substr(t$6972,1,13), 14937,  _substr(t$6973,1,6), 1, t$6974, t$6975, t$6976, t$6971 )
14937.          endif
14937.          $Unit_temp_O1 = iu_spc
14937.          $IOindex_O2 = i_ice
14937.          _fread( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$561,  _substr(t$560,1,9), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%ice%n_phf%base_addr)($IOindex_O2, 0), 0x2000200000000L ) ) )
14939.          $Unit_temp_O3 = iu_spc
14939.          _fread( _clist( 0, 0, 2, $Unit_temp_O3, Null_Arg, Null_Arg, t$563,  _substr(t$562,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14940.          if ( ( i_ice < seat_spectrum%ice%parm_min_dim%dim_1%LB .or. i_ice > -1 + seat_spectrum%ice%parm_min_dim%dim_1%LB + seat_spectrum%ice%parm_min_dim%dim_1%EX ) /= .false. ) then
14940.              _substr(t$6978,1,13) = 'Rad_UKMO.f90'
14940.              _substr(t$6979,1,13) = 'PARM_MIN_DIM'
14940.             t$6974 = seat_spectrum%ice%parm_min_dim%dim_1%LB
14940.             t$6975 = -1 + seat_spectrum%ice%parm_min_dim%dim_1%LB + seat_spectrum%ice%parm_min_dim%dim_1%EX
14940.             t$6976 = i_ice
14940.             call _bounds_error(  _substr(t$6978,1,13), 14940,  _substr(t$6979,1,13), 1, t$6974, t$6975, t$6976, t$6977 )
14940.          endif
14939.          $Unit_temp_O4 = iu_spc
14939.          $IOindex_O5 = i_ice
14939.          _fread( _clist( 0, 0, 0, $Unit_temp_O4, Null_Arg, Null_Arg, t$563,  _substr(t$562,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%ice%parm_min_dim%base_addr)($IOindex_O5, 0), 0x804060300000000L ) ) )
14941.          if ( ( i_ice < seat_spectrum%ice%parm_max_dim%dim_1%LB .or. i_ice > -1 + seat_spectrum%ice%parm_max_dim%dim_1%LB + seat_spectrum%ice%parm_max_dim%dim_1%EX ) /= .false. ) then
14941.              _substr(t$6981,1,13) = 'Rad_UKMO.f90'
14941.              _substr(t$6982,1,13) = 'PARM_MAX_DIM'
14941.             t$6983 = seat_spectrum%ice%parm_max_dim%dim_1%LB
14941.             t$6984 = -1 + seat_spectrum%ice%parm_max_dim%dim_1%LB + seat_spectrum%ice%parm_max_dim%dim_1%EX
14941.             t$6985 = i_ice
14941.             call _bounds_error(  _substr(t$6981,1,13), 14941,  _substr(t$6982,1,13), 1, t$6983, t$6984, t$6985, t$6980 )
14941.          endif
14939.          $Unit_temp_O6 = iu_spc
14939.          $IOindex_O7 = i_ice
14939.          _fread( _clist( 0, 0, 0, $Unit_temp_O6, Null_Arg, Null_Arg, t$563,  _substr(t$562,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%ice%parm_max_dim%base_addr)($IOindex_O7, 0), 0x804060300000000L ) ) )
14939.          $Unit_temp_O8 = iu_spc
14939.          _fread( _clist( 0, 0, 1, $Unit_temp_O8, Null_Arg, Null_Arg, t$563,  _substr(t$562,1,27), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14943.          $t_S1 = seat_spectrum%basic%n_band
14943.          i = 1
14943.          if ( seat_spectrum%basic%n_band > 0 ) then
14943.             $I_L14943_8 = 0
14943.             do
14943.                i = ( 1 + $I_L14943_8 )
14944.                $Unit_temp_O9 = iu_spc
14944.                _fread( _clist( 0, 0, 3, $Unit_temp_O9, Null_Arg, Null_Arg, t$565,  _substr(t$564,1,2), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
14946.                if ( ( ( 1 < seat_spectrum%ice%parm_list%dim_1%LB .or. 0 >= -1 + seat_spectrum%ice%parm_list%dim_1%LB + seat_spectrum%ice%parm_list%dim_1%EX .or. i_dummy < seat_spectrum%ice%parm_list%dim_1%LB .or. i_dummy > -1 + seat_spectrum%ice%parm_list%dim_1%LB + seat_spectrum%ice%parm_list%dim_1%EX ) .and. i_dummy > 0 ) /= .false. ) then
14946.                    _substr(t$6991,1,13) = 'Rad_UKMO.f90'
14946.                    _substr(t$6992,1,10) = 'PARM_LIST'
14946.                   t$6974 = seat_spectrum%ice%parm_list%dim_1%LB
14946.                   t$6975 = -1 + seat_spectrum%ice%parm_list%dim_1%LB + seat_spectrum%ice%parm_list%dim_1%EX
14946.                   t$6976 = i_dummy
14946.                   call _rbounds_error(  _substr(t$6991,1,13), 14946,  _substr(t$6992,1,10), 1, t$6974, t$6975, 1, t$6976, 1, t$6990 )
14946.                endif
14946.                if ( ( i < seat_spectrum%ice%parm_list%dim_2%LB .or. i > -1 + seat_spectrum%ice%parm_list%dim_2%LB + seat_spectrum%ice%parm_list%dim_2%EX ) /= .false. ) then
14946.                    _substr(t$6994,1,13) = 'Rad_UKMO.f90'
14946.                    _substr(t$6995,1,10) = 'PARM_LIST'
14946.                   t$6983 = seat_spectrum%ice%parm_list%dim_2%LB
14946.                   t$6984 = -1 + seat_spectrum%ice%parm_list%dim_2%LB + seat_spectrum%ice%parm_list%dim_2%EX
14946.                   t$6985 = i
14946.                   call _bounds_error(  _substr(t$6994,1,13), 14946,  _substr(t$6995,1,10), 2, t$6983, t$6984, t$6985, t$6993 )
14946.                endif
14946.                if ( ( i_ice < seat_spectrum%ice%parm_list%dim_3%LB .or. i_ice > -1 + seat_spectrum%ice%parm_list%dim_3%LB + seat_spectrum%ice%parm_list%dim_3%EX ) /= .false. ) then
14946.                    _substr(t$6997,1,13) = 'Rad_UKMO.f90'
14946.                    _substr(t$6998,1,10) = 'PARM_LIST'
14946.                   t$6999 = seat_spectrum%ice%parm_list%dim_3%LB
14946.                   t$7000 = -1 + seat_spectrum%ice%parm_list%dim_3%LB + seat_spectrum%ice%parm_list%dim_3%EX
14946.                   t$7001 = i_ice
14946.                   call _bounds_error(  _substr(t$6997,1,13), 14946,  _substr(t$6998,1,10), 3, t$6999, t$7000, t$7001, t$6996 )
14946.                endif
14945.                $Unit_temp_O10 = iu_spc
14945.                $IOindex_O11 = i_dummy
14945.                $IOindex_O12 = i
14945.                $IOindex_O13 = i_ice
14945.                t$6989 = _fread( _clist( 0, 1, 3, $Unit_temp_O10, ios, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(seat_spectrum%ice%parm_list%base_addr)(:( 1, $IOindex_O11, 1 ), $IOindex_O12, $IOindex_O13, 0), 0x804060300000000L ) ) )
14948.                if ( ios /= 0 ) then
14949.                   _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$567,  _substr(t$566,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_12_0_2', 0x800600000000L ) ) )
14951.                   _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'Data for ice crystals are not in the correct format.', 0x800600000000L ) ) )
14953.                   seat_ierr = 1
14953.                   goto 30
14953.                endif
14956.                $I_L14943_8 = 1 + $I_L14943_8
14956.                if ( $I_L14943_8 >= $t_S1 ) exit
14956.             enddo
14956.             i = ( 1 + $t_S1 )
14956.             goto 20
14956.          else
14956.    20       continue
14969.             (seat_spectrum%ice%l_ice_type%base_addr)(i_ice, 0) = .true.
14970.             (seat_spectrum%ice%i_ice_parm%base_addr)(i_ice, 0) = i_parametrization_ice
14970.          endif
14970.       else
14959.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$569,  _substr(t$568,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_12_0_2', 0x800600000000L ) ) )
14961.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$571,  _substr(t$570,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'An unknown parametrization scheme has been specified.', 0x800600000000L ) ) )
14963.          seat_ierr = 1
14963.       endif
14963.    30 continue
14975.       return
14975.       end
14975.       
14980.       
14980.       subroutine read_block_14_0_0_int
14994.       (nd_exclude%base_addr)(0) = 2
14995.       seat_spectrum%basic%index_exclude%header%a_contig = 1
14995.       seat_spectrum%basic%index_exclude%dim_1%LB = 1
14995.       seat_spectrum%basic%index_exclude%dim_1%EX = 2
14995.       seat_spectrum%basic%index_exclude%dim_1%SM = 1
14995.       seat_spectrum%basic%index_exclude%dim_2%LB = 1
14995.       seat_spectrum%basic%index_exclude%dim_2%EX = _zla( 0, (nd_band%base_addr)(0) )
14995.       seat_spectrum%basic%index_exclude%dim_2%SM = 2
14995.       $_allo_P0(0) = 0x1000000000001L
14995.       $_allo_P0(1) = loc( seat_spectrum%basic%index_exclude )
14995.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
14997.       $Unit_temp_O0 = iu_spc
14997.       _fread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$573,  _substr(t$572,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
15000.       $t_S3 = seat_spectrum%basic%n_band
15000.       i = 1
15000.       if ( seat_spectrum%basic%n_band > 0 ) then
15000.          $I_L15000_10 = 0
15000.          do
15000.             i = ( 1 + $I_L15000_10 )
15001.             $Unit_temp_O1 = iu_spc
15001.             t$7005 = _fread( _clist( 0, 1, 2, $Unit_temp_O1, ios, Null_Arg, t$575,  _substr(t$574,1,12), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
15001.             if ( t$7005 == 0 ) then
15001.                $Unit_temp_O2 = iu_spc
15001.                t$7005 = _fread( _clist( 0, 1, 0, $Unit_temp_O2, ios, Null_Arg, t$575,  _substr(t$574,1,12), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( idum, 0x2000200000000L ) ) )
15001.                if ( t$7005 == 0 ) then
15002.                   if ( ( ( 1 + $I_L15000_10 ) < seat_spectrum%basic%n_band_exclude%dim_1%LB .or. ( 1 + $I_L15000_10 ) > -1 + seat_spectrum%basic%n_band_exclude%dim_1%EX + seat_spectrum%basic%n_band_exclude%dim_1%LB ) /= .false. ) then
15002.                       _substr(t$7007,1,13) = 'Rad_UKMO.f90'
15002.                       _substr(t$7008,1,15) = 'N_BAND_EXCLUDE'
15002.                      t$7009 = seat_spectrum%basic%n_band_exclude%dim_1%LB
15002.                      t$7010 = -1 + seat_spectrum%basic%n_band_exclude%dim_1%EX + seat_spectrum%basic%n_band_exclude%dim_1%LB
15002.                      t$7011 = 1 + $I_L15000_10
15002.                      call _bounds_error(  _substr(t$7007,1,13), 15002,  _substr(t$7008,1,15), 1, t$7009, t$7010, t$7011, t$7006 )
15002.                   endif
15001.                   $Unit_temp_O3 = iu_spc
15001.                   $IOindex_O4 = i
15001.                   t$7005 = _fread( _clist( 0, 1, 0, $Unit_temp_O3, ios, Null_Arg, t$575,  _substr(t$574,1,12), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%basic%n_band_exclude%base_addr)($IOindex_O4, 0), 0x2000200000000L ) ) )
15001.                   if ( t$7005 == 0 ) then
15001.                      $Unit_temp_O5 = iu_spc
15001.                      t$7005 = _fread( _clist( 0, 1, 1, $Unit_temp_O5, ios, Null_Arg, t$575,  _substr(t$574,1,12), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
15001.                   endif
15001.                endif
15001.             endif
15003.             if ( ios /= 0 ) then
15004.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$577,  _substr(t$576,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error in subroutine read_block_14_0_0', 0x800600000000L ) ) )
15006.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'The list of excluded bands is not correct.', 0x800600000000L ) ) )
15008.                seat_ierr = 1
15008.                goto 10
15008.             endif
15011.             if ( (seat_spectrum%basic%n_band_exclude%base_addr)(i, 0) > 0 ) then
15012.                $Unit_temp_O6 = iu_spc
15012.                _fread( _clist( 0, 0, 2, $Unit_temp_O6, Null_Arg, Null_Arg, t$579,  _substr(t$578,1,16), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
15014.                if ( ( i < seat_spectrum%basic%n_band_exclude%dim_1%LB .or. i > -1 + seat_spectrum%basic%n_band_exclude%dim_1%EX + seat_spectrum%basic%n_band_exclude%dim_1%LB ) /= .false. ) then
15014.                    _substr(t$7013,1,13) = 'Rad_UKMO.f90'
15014.                    _substr(t$7014,1,15) = 'N_BAND_EXCLUDE'
15014.                   t$7009 = seat_spectrum%basic%n_band_exclude%dim_1%LB
15014.                   t$7010 = -1 + seat_spectrum%basic%n_band_exclude%dim_1%EX + seat_spectrum%basic%n_band_exclude%dim_1%LB
15014.                   t$7011 = i
15014.                   call _bounds_error(  _substr(t$7013,1,13), 15014,  _substr(t$7014,1,15), 1, t$7009, t$7010, t$7011, t$7012 )
15014.                endif
15012.                $t_S1 = (seat_spectrum%basic%n_band_exclude%base_addr)(i, 0)
15012.                if ( $t_S1 > 0 ) then
15012.                   $I_L15012_8 = 0
15012.                   do
15013.                      if ( ( ( 1 + $I_L15012_8 ) < seat_spectrum%basic%index_exclude%dim_1%LB .or. ( 1 + $I_L15012_8 ) > -1 + seat_spectrum%basic%index_exclude%dim_1%LB + seat_spectrum%basic%index_exclude%dim_1%EX ) /= .false. ) then
15013.                          _substr(t$7019,1,13) = 'Rad_UKMO.f90'
15013.                          _substr(t$7020,1,14) = 'INDEX_EXCLUDE'
15013.                         t$7021 = seat_spectrum%basic%index_exclude%dim_1%LB
15013.                         t$7022 = -1 + seat_spectrum%basic%index_exclude%dim_1%LB + seat_spectrum%basic%index_exclude%dim_1%EX
15013.                         t$7023 = 1 + $I_L15012_8
15013.                         call _bounds_error(  _substr(t$7019,1,13), 15013,  _substr(t$7020,1,14), 1, t$7021, t$7022, t$7023, t$7018 )
15013.                      endif
15013.                      if ( ( i < seat_spectrum%basic%index_exclude%dim_2%LB .or. i > -1 + seat_spectrum%basic%index_exclude%dim_2%LB + seat_spectrum%basic%index_exclude%dim_2%EX ) /= .false. ) then
15013.                          _substr(t$7025,1,13) = 'Rad_UKMO.f90'
15013.                          _substr(t$7026,1,14) = 'INDEX_EXCLUDE'
15013.                         t$7027 = seat_spectrum%basic%index_exclude%dim_2%LB
15013.                         t$7028 = -1 + seat_spectrum%basic%index_exclude%dim_2%LB + seat_spectrum%basic%index_exclude%dim_2%EX
15013.                         t$7029 = i
15013.                         call _bounds_error(  _substr(t$7025,1,13), 15013,  _substr(t$7026,1,14), 2, t$7027, t$7028, t$7029, t$7024 )
15013.                      endif
15012.                      $Unit_temp_O7 = iu_spc
15012.                      $IOindex_O8 = 1 + $I_L15012_8
15012.                      $IOindex_O9 = i
15012.                      _fread( _clist( 0, 0, 0, $Unit_temp_O7, Null_Arg, Null_Arg, t$579,  _substr(t$578,1,16), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (seat_spectrum%basic%index_exclude%base_addr)($IOindex_O8, $IOindex_O9, 0), 0x2000200000000L ) ) )
15012.                      $I_L15012_8 = 1 + $I_L15012_8
15012.                      if ( $I_L15012_8 >= $t_S1 ) exit
15012.                   enddo
15012.                endif
15012.                $Unit_temp_O10 = iu_spc
15012.                _fread( _clist( 0, 0, 1, $Unit_temp_O10, Null_Arg, Null_Arg, t$579,  _substr(t$578,1,16), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
15012.             endif
15016.             if ( ios /= 0 ) then
15017.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$581,  _substr(t$580,1,5), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** error in subroutine read_block_14_0_0', 0x800600000000L ) ) )
15019.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'The list of excluded bands is not correct.', 0x800600000000L ) ) )
15021.                seat_ierr = 1
15021.                goto 10
15021.             endif
15024.             $I_L15000_10 = 1 + $I_L15000_10
15024.             if ( $I_L15000_10 >= $t_S3 ) exit
15024.          enddo
15024.          i = ( 1 + $t_S3 )
15024.       endif
15024.    10 continue
15029.       return
15029.       end
15029.       
13130.       
13130.       subroutine read_spectrum_90( file_spectral, spectrum, ierr )
13130.       seatp_ierr = loc( ierr )
13130.       seatp_spectrum = loc( spectrum )
13154.       if ( t$21 == 0 ) then
13154.          t$2122(1) = 4
13154.          t$2123(1) = 0
13154.          t$2124(1) = 0
13154.          t$2119(1) = int( loc( t$8 ), 8 )
13154.          t$2120(1) = 0
13154.          t$2121(1) = int( loc( t$2118 ), 8 )
13154.          t$21 = __get_dynamic_type( 2, t$2119(1), t$2122(1), 1, t$2120(1), t$2121(1), t$2123(1), t$2124(1) )
13154.       endif
13154.       if ( t$24 == 0 ) then
13154.          t$2130(1) = 4
13154.          t$2131(1) = 0
13154.          t$2132(1) = 0
13154.          t$2127(1) = int( loc( t$5 ), 8 )
13154.          t$2128(1) = 0
13154.          t$2129(1) = int( loc( t$2126 ), 8 )
13154.          t$24 = __get_dynamic_type( 2, t$2127(1), t$2130(1), 1, t$2128(1), t$2129(1), t$2131(1), t$2132(1) )
13154.       endif
13154.       if ( t$15 == 0 ) then
13154.          t$2138(1) = 4
13154.          t$2139(1) = 0
13154.          t$2140(1) = 0
13154.          t$2135(1) = int( loc( t$9 ), 8 )
13154.          t$2136(1) = 0
13154.          t$2137(1) = int( loc( t$2134 ), 8 )
13154.          t$15 = __get_dynamic_type( 2, t$2135(1), t$2138(1), 1, t$2136(1), t$2137(1), t$2139(1), t$2140(1) )
13154.       endif
13154.       if ( t$16 == 0 ) then
13154.          t$2146(1) = 4
13154.          t$2147(1) = 0
13154.          t$2148(1) = 0
13154.          t$2143(1) = int( loc( t$10 ), 8 )
13154.          t$2144(1) = 0
13154.          t$2145(1) = int( loc( t$2142 ), 8 )
13154.          t$16 = __get_dynamic_type( 2, t$2143(1), t$2146(1), 1, t$2144(1), t$2145(1), t$2147(1), t$2148(1) )
13154.       endif
13154.       if ( t$19 == 0 ) then
13154.          t$2154(1) = 4
13154.          t$2155(1) = 0
13154.          t$2156(1) = 0
13154.          t$2151(1) = int( loc( t$11 ), 8 )
13154.          t$2152(1) = 0
13154.          t$2153(1) = int( loc( t$2150 ), 8 )
13154.          t$19 = __get_dynamic_type( 2, t$2151(1), t$2154(1), 1, t$2152(1), t$2153(1), t$2155(1), t$2156(1) )
13154.       endif
13154.       if ( t$17 == 0 ) then
13154.          t$2162(1) = 4
13154.          t$2163(1) = 0
13154.          t$2164(1) = 0
13154.          t$2159(1) = int( loc( t$12 ), 8 )
13154.          t$2160(1) = 0
13154.          t$2161(1) = int( loc( t$2158 ), 8 )
13154.          t$17 = __get_dynamic_type( 2, t$2159(1), t$2162(1), 1, t$2160(1), t$2161(1), t$2163(1), t$2164(1) )
13154.       endif
13154.       if ( t$23 == 0 ) then
13154.          t$2170(1) = 4
13154.          t$2171(1) = 0
13154.          t$2172(1) = 0
13154.          t$2167(1) = int( loc( t$6 ), 8 )
13154.          t$2168(1) = 0
13154.          t$2169(1) = int( loc( t$2166 ), 8 )
13154.          t$23 = __get_dynamic_type( 2, t$2167(1), t$2170(1), 1, t$2168(1), t$2169(1), t$2171(1), t$2172(1) )
13154.       endif
13154.       if ( t$22 == 0 ) then
13154.          t$2178(1) = 4
13154.          t$2179(1) = 0
13154.          t$2180(1) = 0
13154.          t$2175(1) = int( loc( t$4 ), 8 )
13154.          t$2176(1) = 0
13154.          t$2177(1) = int( loc( t$2174 ), 8 )
13154.          t$22 = __get_dynamic_type( 2, t$2175(1), t$2178(1), 1, t$2176(1), t$2177(1), t$2179(1), t$2180(1) )
13154.       endif
13154.       if ( t$20 == 0 ) then
13154.          t$2186(1) = 4
13154.          t$2187(1) = 0
13154.          t$2188(1) = 0
13154.          t$2183(1) = int( loc( t$13 ), 8 )
13154.          t$2184(1) = 0
13154.          t$2185(1) = int( loc( t$2182 ), 8 )
13154.          t$20 = __get_dynamic_type( 2, t$2183(1), t$2186(1), 1, t$2184(1), t$2185(1), t$2187(1), t$2188(1) )
13154.       endif
13154.       if ( t$18 == 0 ) then
13154.          t$2194(1) = 4
13154.          t$2195(1) = 0
13154.          t$2196(1) = 0
13154.          t$2191(1) = int( loc( t$14 ), 8 )
13154.          t$2192(1) = 0
13154.          t$2193(1) = int( loc( t$2190 ), 8 )
13154.          t$18 = __get_dynamic_type( 2, t$2191(1), t$2194(1), 1, t$2192(1), t$2193(1), t$2195(1), t$2196(1) )
13154.       endif
13154.       if ( t$25 == 0 ) then
13154.          t$2202(1) = 4
13154.          t$2203(1) = 0
13154.          t$2204(1) = 0
13154.          t$2199(1) = int( loc( t$7 ), 8 )
13154.          t$2200(1) = 0
13154.          t$2201(1) = int( loc( t$2198 ), 8 )
13154.          t$25 = __get_dynamic_type( 2, t$2199(1), t$2202(1), 1, t$2200(1), t$2201(1), t$2203(1), t$2204(1) )
13154.       endif
13199.       nd_aerosol_species = $_StaticDV_P1
13199.       nd_aerosol_species%base_addr = pointer to integer( 0 )
13199.       nd_aerosol_species%header%el_len = 32
13199.       nd_aerosol_species%header%assoc = 0
13199.       nd_aerosol_species%header%ptr_alloc = 0
13199.       nd_aerosol_species%header%p_or_a = 1
13199.       nd_aerosol_species%header%a_contig = 0
13199.       nd_aerosol_species%header%n_dim = 0
13199.       nd_aerosol_species%header%orig_base = 0
13199.       nd_aerosol_species%header%orig_size = 0
13199.       nd_aerosol_species%header%n_codim = 0
13199.       nd_aerosol_species%header%dv_versn = 2
13199.       nd_aerosol_species%header%dv_smunit = 32
13199.       nd_aerosol_species%header%d_type = 0
13199.       nd_aerosol_species%header%n_params = 0
13199.       nd_aerosol_species%header%d_type_idx = 10
13219.       nd_band = $_StaticDV_P2
13219.       nd_band%base_addr = pointer to integer( 0 )
13219.       nd_band%header%el_len = 32
13219.       nd_band%header%assoc = 0
13219.       nd_band%header%ptr_alloc = 0
13219.       nd_band%header%p_or_a = 1
13219.       nd_band%header%a_contig = 0
13219.       nd_band%header%n_dim = 0
13219.       nd_band%header%orig_base = 0
13219.       nd_band%header%orig_size = 0
13219.       nd_band%header%n_codim = 0
13219.       nd_band%header%dv_versn = 2
13219.       nd_band%header%dv_smunit = 32
13219.       nd_band%header%d_type = 0
13219.       nd_band%header%n_params = 0
13219.       nd_band%header%d_type_idx = 10
13209.       nd_cloud_parameter = $_StaticDV_P3
13209.       nd_cloud_parameter%base_addr = pointer to integer( 0 )
13209.       nd_cloud_parameter%header%el_len = 32
13209.       nd_cloud_parameter%header%assoc = 0
13209.       nd_cloud_parameter%header%ptr_alloc = 0
13209.       nd_cloud_parameter%header%p_or_a = 1
13209.       nd_cloud_parameter%header%a_contig = 0
13209.       nd_cloud_parameter%header%n_dim = 0
13209.       nd_cloud_parameter%header%orig_base = 0
13209.       nd_cloud_parameter%header%orig_size = 0
13209.       nd_cloud_parameter%header%n_codim = 0
13209.       nd_cloud_parameter%header%dv_versn = 2
13209.       nd_cloud_parameter%header%dv_smunit = 32
13209.       nd_cloud_parameter%header%d_type = 0
13209.       nd_cloud_parameter%header%n_params = 0
13209.       nd_cloud_parameter%header%d_type_idx = 10
13211.       nd_continuum = $_StaticDV_P4
13211.       nd_continuum%base_addr = pointer to integer( 0 )
13211.       nd_continuum%header%el_len = 32
13211.       nd_continuum%header%assoc = 0
13211.       nd_continuum%header%ptr_alloc = 0
13211.       nd_continuum%header%p_or_a = 1
13211.       nd_continuum%header%a_contig = 0
13211.       nd_continuum%header%n_dim = 0
13211.       nd_continuum%header%orig_base = 0
13211.       nd_continuum%header%orig_size = 0
13211.       nd_continuum%header%n_codim = 0
13211.       nd_continuum%header%dv_versn = 2
13211.       nd_continuum%header%dv_smunit = 32
13211.       nd_continuum%header%d_type = 0
13211.       nd_continuum%header%n_params = 0
13211.       nd_continuum%header%d_type_idx = 10
13201.       nd_drop_type = $_StaticDV_P5
13201.       nd_drop_type%base_addr = pointer to integer( 0 )
13201.       nd_drop_type%header%el_len = 32
13201.       nd_drop_type%header%assoc = 0
13201.       nd_drop_type%header%ptr_alloc = 0
13201.       nd_drop_type%header%p_or_a = 1
13201.       nd_drop_type%header%a_contig = 0
13201.       nd_drop_type%header%n_dim = 0
13201.       nd_drop_type%header%orig_base = 0
13201.       nd_drop_type%header%orig_size = 0
13201.       nd_drop_type%header%n_codim = 0
13201.       nd_drop_type%header%dv_versn = 2
13201.       nd_drop_type%header%dv_smunit = 32
13201.       nd_drop_type%header%d_type = 0
13201.       nd_drop_type%header%n_params = 0
13201.       nd_drop_type%header%d_type_idx = 10
13221.       nd_exclude = $_StaticDV_P6
13221.       nd_exclude%base_addr = pointer to integer( 0 )
13221.       nd_exclude%header%el_len = 32
13221.       nd_exclude%header%assoc = 0
13221.       nd_exclude%header%ptr_alloc = 0
13221.       nd_exclude%header%p_or_a = 1
13221.       nd_exclude%header%a_contig = 0
13221.       nd_exclude%header%n_dim = 0
13221.       nd_exclude%header%orig_base = 0
13221.       nd_exclude%header%orig_size = 0
13221.       nd_exclude%header%n_codim = 0
13221.       nd_exclude%header%dv_versn = 2
13221.       nd_exclude%header%dv_smunit = 32
13221.       nd_exclude%header%d_type = 0
13221.       nd_exclude%header%n_params = 0
13221.       nd_exclude%header%d_type_idx = 10
13213.       nd_humidity = $_StaticDV_P7
13213.       nd_humidity%base_addr = pointer to integer( 0 )
13213.       nd_humidity%header%el_len = 32
13213.       nd_humidity%header%assoc = 0
13213.       nd_humidity%header%ptr_alloc = 0
13213.       nd_humidity%header%p_or_a = 1
13213.       nd_humidity%header%a_contig = 0
13213.       nd_humidity%header%n_dim = 0
13213.       nd_humidity%header%orig_base = 0
13213.       nd_humidity%header%orig_size = 0
13213.       nd_humidity%header%n_codim = 0
13213.       nd_humidity%header%dv_versn = 2
13213.       nd_humidity%header%dv_smunit = 32
13213.       nd_humidity%header%d_type = 0
13213.       nd_humidity%header%n_params = 0
13213.       nd_humidity%header%d_type_idx = 10
13203.       nd_ice_type = $_StaticDV_P8
13203.       nd_ice_type%base_addr = pointer to integer( 0 )
13203.       nd_ice_type%header%el_len = 32
13203.       nd_ice_type%header%assoc = 0
13203.       nd_ice_type%header%ptr_alloc = 0
13203.       nd_ice_type%header%p_or_a = 1
13203.       nd_ice_type%header%a_contig = 0
13203.       nd_ice_type%header%n_dim = 0
13203.       nd_ice_type%header%orig_base = 0
13203.       nd_ice_type%header%orig_size = 0
13203.       nd_ice_type%header%n_codim = 0
13203.       nd_ice_type%header%dv_versn = 2
13203.       nd_ice_type%header%dv_smunit = 32
13203.       nd_ice_type%header%d_type = 0
13203.       nd_ice_type%header%n_params = 0
13203.       nd_ice_type%header%d_type_idx = 10
13223.       nd_k_term = $_StaticDV_P9
13223.       nd_k_term%base_addr = pointer to integer( 0 )
13223.       nd_k_term%header%el_len = 32
13223.       nd_k_term%header%assoc = 0
13223.       nd_k_term%header%ptr_alloc = 0
13223.       nd_k_term%header%p_or_a = 1
13223.       nd_k_term%header%a_contig = 0
13223.       nd_k_term%header%n_dim = 0
13223.       nd_k_term%header%orig_base = 0
13223.       nd_k_term%header%orig_size = 0
13223.       nd_k_term%header%n_codim = 0
13223.       nd_k_term%header%dv_versn = 2
13223.       nd_k_term%header%dv_smunit = 32
13223.       nd_k_term%header%d_type = 0
13223.       nd_k_term%header%n_params = 0
13223.       nd_k_term%header%d_type_idx = 10
13207.       nd_phase_term = $_StaticDV_P10
13207.       nd_phase_term%base_addr = pointer to integer( 0 )
13207.       nd_phase_term%header%el_len = 32
13207.       nd_phase_term%header%assoc = 0
13207.       nd_phase_term%header%ptr_alloc = 0
13207.       nd_phase_term%header%p_or_a = 1
13207.       nd_phase_term%header%a_contig = 0
13207.       nd_phase_term%header%n_dim = 0
13207.       nd_phase_term%header%orig_base = 0
13207.       nd_phase_term%header%orig_size = 0
13207.       nd_phase_term%header%n_codim = 0
13207.       nd_phase_term%header%dv_versn = 2
13207.       nd_phase_term%header%dv_smunit = 32
13207.       nd_phase_term%header%d_type = 0
13207.       nd_phase_term%header%n_params = 0
13207.       nd_phase_term%header%d_type_idx = 10
13205.       nd_scale_variable = $_StaticDV_P11
13205.       nd_scale_variable%base_addr = pointer to integer( 0 )
13205.       nd_scale_variable%header%el_len = 32
13205.       nd_scale_variable%header%assoc = 0
13205.       nd_scale_variable%header%ptr_alloc = 0
13205.       nd_scale_variable%header%p_or_a = 1
13205.       nd_scale_variable%header%a_contig = 0
13205.       nd_scale_variable%header%n_dim = 0
13205.       nd_scale_variable%header%orig_base = 0
13205.       nd_scale_variable%header%orig_size = 0
13205.       nd_scale_variable%header%n_codim = 0
13205.       nd_scale_variable%header%dv_versn = 2
13205.       nd_scale_variable%header%dv_smunit = 32
13205.       nd_scale_variable%header%d_type = 0
13205.       nd_scale_variable%header%n_params = 0
13205.       nd_scale_variable%header%d_type_idx = 10
13217.       nd_species = $_StaticDV_P12
13217.       nd_species%base_addr = pointer to integer( 0 )
13217.       nd_species%header%el_len = 32
13217.       nd_species%header%assoc = 0
13217.       nd_species%header%ptr_alloc = 0
13217.       nd_species%header%p_or_a = 1
13217.       nd_species%header%a_contig = 0
13217.       nd_species%header%n_dim = 0
13217.       nd_species%header%orig_base = 0
13217.       nd_species%header%orig_size = 0
13217.       nd_species%header%n_codim = 0
13217.       nd_species%header%dv_versn = 2
13217.       nd_species%header%dv_smunit = 32
13217.       nd_species%header%d_type = 0
13217.       nd_species%header%n_params = 0
13217.       nd_species%header%d_type_idx = 10
13154.       nd_thermal_coeff = $_StaticDV_P13
13154.       nd_thermal_coeff%base_addr = pointer to integer( 0 )
13154.       nd_thermal_coeff%header%el_len = 32
13154.       nd_thermal_coeff%header%assoc = 0
13154.       nd_thermal_coeff%header%ptr_alloc = 0
13154.       nd_thermal_coeff%header%p_or_a = 1
13154.       nd_thermal_coeff%header%a_contig = 0
13154.       nd_thermal_coeff%header%n_dim = 0
13154.       nd_thermal_coeff%header%orig_base = 0
13154.       nd_thermal_coeff%header%orig_size = 0
13154.       nd_thermal_coeff%header%n_codim = 0
13154.       nd_thermal_coeff%header%dv_versn = 2
13154.       nd_thermal_coeff%header%dv_smunit = 32
13154.       nd_thermal_coeff%header%d_type = 0
13154.       nd_thermal_coeff%header%n_params = 0
13154.       nd_thermal_coeff%header%d_type_idx = 10
13229.       nd_band%header%a_contig = 0
13229.       nd_band%header%assoc = 1
13229.       nd_band%header%d_type_idx = 10
13229.       nd_band%header%ptr_alloc = 0
13229.       nd_band%header%orig_base = 0
13229.       nd_band%header%orig_size = 0
13229.       nd_band%base_addr = loc( seat_spectrum%dim%nd_band )
13230.       nd_exclude%header%a_contig = 0
13230.       nd_exclude%header%assoc = 1
13230.       nd_exclude%header%d_type_idx = 10
13230.       nd_exclude%header%ptr_alloc = 0
13230.       nd_exclude%header%orig_base = 0
13230.       nd_exclude%header%orig_size = 0
13230.       nd_exclude%base_addr = loc( seat_spectrum%dim%nd_exclude )
13231.       nd_k_term%header%a_contig = 0
13231.       nd_k_term%header%assoc = 1
13231.       nd_k_term%header%d_type_idx = 10
13231.       nd_k_term%header%ptr_alloc = 0
13231.       nd_k_term%header%orig_base = 0
13231.       nd_k_term%header%orig_size = 0
13231.       nd_k_term%base_addr = loc( seat_spectrum%dim%nd_k_term )
13232.       nd_species%header%a_contig = 0
13232.       nd_species%header%assoc = 1
13232.       nd_species%header%d_type_idx = 10
13232.       nd_species%header%ptr_alloc = 0
13232.       nd_species%header%orig_base = 0
13232.       nd_species%header%orig_size = 0
13232.       nd_species%base_addr = loc( seat_spectrum%dim%nd_species )
13233.       nd_scale_variable%header%a_contig = 0
13233.       nd_scale_variable%header%assoc = 1
13233.       nd_scale_variable%header%d_type_idx = 10
13233.       nd_scale_variable%header%ptr_alloc = 0
13233.       nd_scale_variable%header%orig_base = 0
13233.       nd_scale_variable%header%orig_size = 0
13233.       nd_scale_variable%base_addr = loc( seat_spectrum%dim%nd_scale_variable )
13234.       nd_continuum%header%a_contig = 0
13234.       nd_continuum%header%assoc = 1
13234.       nd_continuum%header%d_type_idx = 10
13234.       nd_continuum%header%ptr_alloc = 0
13234.       nd_continuum%header%orig_base = 0
13234.       nd_continuum%header%orig_size = 0
13234.       nd_continuum%base_addr = loc( seat_spectrum%dim%nd_continuum )
13235.       nd_drop_type%header%a_contig = 0
13235.       nd_drop_type%header%assoc = 1
13235.       nd_drop_type%header%d_type_idx = 10
13235.       nd_drop_type%header%ptr_alloc = 0
13235.       nd_drop_type%header%orig_base = 0
13235.       nd_drop_type%header%orig_size = 0
13235.       nd_drop_type%base_addr = loc( seat_spectrum%dim%nd_drop_type )
13236.       nd_ice_type%header%a_contig = 0
13236.       nd_ice_type%header%assoc = 1
13236.       nd_ice_type%header%d_type_idx = 10
13236.       nd_ice_type%header%ptr_alloc = 0
13236.       nd_ice_type%header%orig_base = 0
13236.       nd_ice_type%header%orig_size = 0
13236.       nd_ice_type%base_addr = loc( seat_spectrum%dim%nd_ice_type )
13237.       nd_aerosol_species%header%a_contig = 0
13237.       nd_aerosol_species%header%assoc = 1
13237.       nd_aerosol_species%header%d_type_idx = 10
13237.       nd_aerosol_species%header%ptr_alloc = 0
13237.       nd_aerosol_species%header%orig_base = 0
13237.       nd_aerosol_species%header%orig_size = 0
13237.       nd_aerosol_species%base_addr = loc( seat_spectrum%dim%nd_aerosol_species )
13238.       nd_thermal_coeff%header%a_contig = 0
13238.       nd_thermal_coeff%header%assoc = 1
13238.       nd_thermal_coeff%header%d_type_idx = 10
13238.       nd_thermal_coeff%header%ptr_alloc = 0
13238.       nd_thermal_coeff%header%orig_base = 0
13238.       nd_thermal_coeff%header%orig_size = 0
13238.       nd_thermal_coeff%base_addr = loc( seat_spectrum%dim%nd_thermal_coeff )
13239.       nd_cloud_parameter%header%a_contig = 0
13239.       nd_cloud_parameter%header%assoc = 1
13239.       nd_cloud_parameter%header%d_type_idx = 10
13239.       nd_cloud_parameter%header%ptr_alloc = 0
13239.       nd_cloud_parameter%header%orig_base = 0
13239.       nd_cloud_parameter%header%orig_size = 0
13239.       nd_cloud_parameter%base_addr = loc( seat_spectrum%dim%nd_cloud_parameter )
13240.       nd_humidity%header%a_contig = 0
13240.       nd_humidity%header%assoc = 1
13240.       nd_humidity%header%d_type_idx = 10
13240.       nd_humidity%header%ptr_alloc = 0
13240.       nd_humidity%header%orig_base = 0
13240.       nd_humidity%header%orig_size = 0
13240.       nd_humidity%base_addr = loc( seat_spectrum%dim%nd_humidity )
13241.       nd_phase_term%header%a_contig = 0
13241.       nd_phase_term%header%assoc = 1
13241.       nd_phase_term%header%d_type_idx = 10
13241.       nd_phase_term%header%ptr_alloc = 0
13241.       nd_phase_term%header%orig_base = 0
13241.       nd_phase_term%header%orig_size = 0
13241.       nd_phase_term%base_addr = loc( seat_spectrum%dim%nd_phase_term )
13246.       seat_spectrum%dim%nd_k_term = 25
13247.       seat_spectrum%dim%nd_scale_variable = 4
13248.       seat_spectrum%dim%nd_continuum = 3
13249.       seat_spectrum%dim%nd_drop_type = 6
13250.       seat_spectrum%dim%nd_ice_type = 10
13251.       seat_spectrum%dim%nd_cloud_parameter = 501
13252.       seat_spectrum%dim%nd_humidity = 21
13258.       seat_spectrum%cont%index_water = 0
13261.       $I_A1 = 0
13261. !dir$ ivdep
13261.       do
13261.          ((&)seat_spectrum%basic%l_present)($I_A1) = .false.
13261.          $I_A1 = 1 + $I_A1
13261.          if ( $I_A1 >= 21 ) exit
13261.       enddo
13264.       t$6157(1) = 0x100000000000000L
13264.       t$6157(2) = 0
13264. !dir$ suppress  _substr(file_spectral,1,80)
13264.       t$6157(3) = int( loc(  _substr(file_spectral,1,80) ), 8 )
13264.       t$6157(4) = 80
13264.       t$6157(5) = 0
13264.       t$6157(6) = 0
13264. !dir$ suppress l_exist
13264.       t$6157(7) = int( loc( l_exist ), 8 )
13264.       t$6157(8) = 0
13264.       t$6157(9) = 0
13264.       t$6157(10) = 0
13264.       t$6157(11) = 0
13264.       t$6157(13) = 0
13264.       t$6157(15) = 0
13264.       t$6157(17) = 0
13264.       t$6157(19) = 0
13264.       t$6157(21) = 0
13264.       t$6157(23) = 0
13264.       t$6157(25) = 0
13264.       t$6157(26) = 0
13264.       t$6157(27) = 0
13264.       t$6157(29) = 0
13264.       t$6157(31) = 0
13264.       t$6157(33) = 0
13264.       t$6157(35) = 0
13264.       t$6157(37) = 0
13264.       t$6157(39) = 0
13264.       t$6157(41) = 0
13264.       t$6157(43) = 0
13264.       t$6157(44) = 0x2000500000000L
13264.       t$6157(45) = 0
13264.       t$6157(46) = 0
13264.       t$6157(47) = 0
13264.       t$6157(48) = 0
13264.       t$6157(49) = 0
13264.       t$6157(50) = 0
13264.       t$6157(52) = 0
13264.       t$6157(54) = 0
13264.       t$6157(56) = 0
13264.       t$6157(57) = 0
13264.       t$6157(58) = 0
13264.       t$6157(60) = 0
13264.       t$6157(61) = 0
13264.       t$6157(62) = 0
13264.       t$6157(63) = 0
13264.       t$6157(64) = 0
13264.       t$6157(66) = 0
13264.       t$6157(68) = 0
13264.       t$6157(69) = 0
13264.       t$6157(70) = 0
13264.       t$6156 = _inquire( t$6157 )
13265.       if ( l_exist == .false. ) then
13266.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$333,  _substr(t$332,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Spectral file does not exist.', 0x800600000000L ) ) )
13267.          seat_ierr = 6
13267.       else
13272.          call get_free_unit( seat_ierr, iu_spc )
13273.          if ( seat_ierr == 0 ) then
13276.             ios = 0
13276.             t$6159 = iu_spc
13276.              _substr(t$6160,1,4) = 'OLD'
13276.             t$6161(1) = 0x100000000000000L
13276. !dir$ suppress t$6159
13276.             t$6161(2) = int( loc( t$6159 ), 8 )
13276. !dir$ suppress ios
13276.             t$6161(3) = int( loc( ios ), 8 )
13276.             t$6161(4) = 0
13276. !dir$ suppress  _substr(file_spectral,1,80)
13276.             t$6161(5) = int( loc(  _substr(file_spectral,1,80) ), 8 )
13276.             t$6161(6) = 80
13276. !dir$ suppress  _substr(t$6160,1,3)
13276.             t$6161(7) = int( loc(  _substr(t$6160,1,3) ), 8 )
13276.             t$6161(8) = 3
13276.             t$6161(9) = 0
13276.             t$6161(11) = 0
13276.             t$6161(13) = 0
13276.             t$6161(14) = 0
13276.             t$6161(16) = 0
13276.             t$6161(18) = 0
13276.             t$6161(20) = 0
13276.             t$6161(22) = 0
13276.             t$6161(24) = 0x2000200000000L
13276.             t$6161(25) = 0
13276.             t$6161(27) = 0
13276.             t$6161(29) = 0
13276.             t$6161(31) = 0
13276.             t$6161(33) = 0
13276.             t$6161(35) = 0
13276.             t$6158 = _open( t$6161 )
13277.             if ( ios /= 0 ) then
13278.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$335,  _substr(t$334,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Spectral file could not be opened.', 0x800600000000L ) ) )
13280.                seat_ierr = 1
13280.             else
13280.                do
13290.                   $Unit_temp_O0 = iu_spc
13290.                   t$6162 = _fread( _clist( 0, 1, 3, $Unit_temp_O0, ios, Null_Arg, t$337,  _substr(t$336,1,5), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(line,1,80), 0x800600000000L ) ) )
13292.                   if ( ios /= 0 ) then
13329.                      t$6159 = iu_spc
13329.                      t$6165(1) = 0x100000000000000L
13329. !dir$ suppress t$6159
13329.                      t$6165(2) = int( loc( t$6159 ), 8 )
13329.                      t$6165(3) = 0
13329.                      t$6165(4) = 0
13329.                      t$6165(5) = 0
13329.                      t$6165(7) = 0
13329.                      t$6165(8) = 0
13329.                      t$6164 = _close( t$6165 )
13332.                      i = 1
13332.                      if ( seat_spectrum%gas%n_absorb > 0 ) then
13333.                         $SC_spectrum_I0 = seat_spectrum%gas%type_absorb%dim_1%EX
13333.                         $SC_spectrum_I2 = seat_spectrum%gas%type_absorb%dim_1%LB
13333.                         $SC_spectrum_I1 = seat_spectrum%gas%type_absorb%dim_1%SM
13334.                         $SC_spectrum_I4 = seat_spectrum%gas%n_absorb
13333.                         $SC_spectrum_I3 = seat_spectrum%cont%index_water
13332.                         $I_L13332_4 = 0
13332. !dir$ ivdep
13332.                         do
13333.                            if ( (seat_spectrum%gas%type_absorb%base_addr)(1 + $I_L13332_4, 0) == 1 ) then
13333.                               $SC_spectrum_I3 = ( 1 + $I_L13332_4 )
13333.                            endif
13334.                            $I_L13332_4 = 1 + $I_L13332_4
13333.                            if ( $I_L13332_4 >= $SC_spectrum_I4 ) exit
13333.                         enddo
13333.                         seat_spectrum%cont%index_water = $SC_spectrum_I3
13334.                         i = ( 1 + seat_spectrum%gas%n_absorb )
13334.                      endif
13337.                      nd_band%header%assoc = 0
13338.                      nd_exclude%header%assoc = 0
13339.                      nd_k_term%header%assoc = 0
13340.                      nd_species%header%assoc = 0
13341.                      nd_scale_variable%header%assoc = 0
13342.                      nd_continuum%header%assoc = 0
13343.                      nd_drop_type%header%assoc = 0
13344.                      nd_ice_type%header%assoc = 0
13345.                      nd_aerosol_species%header%assoc = 0
13346.                      nd_thermal_coeff%header%assoc = 0
13347.                      nd_cloud_parameter%header%assoc = 0
13348.                      nd_humidity%header%assoc = 0
13349.                      nd_phase_term%header%assoc = 0
13349.                      goto 10
13349.                   endif
13295.                   if (  _substr(line,1,6) == '*BLOCK' ) then
13296.                      t$6163 = _fread( _clist( 0, 1, 3,  _substr(line,1,80), ios, Null_Arg, t$339,  _substr(t$338,1,27), Null_Arg, Null_Arg, Null_Arg, 0x2000200000000L, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(char_dum,1,80), 0x800600000000L ), _iotype( (&)$_IOitem_P0(:( 0, 2, 1 )), 0x2000200000000L ) ) )
13296.                      i_type = $_IOitem_P0(0)
13296.                      i_subtype = $_IOitem_P0(1)
13296.                      i_version = $_IOitem_P0(2)
13298.                      if ( ios == 0 ) then
13306.                         call read_block_int
13307.                         if ( seat_ierr == 0 ) then
13310.                            $Unit_temp_O1 = iu_spc
13310.                            _fread( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$343,  _substr(t$342,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(char_dum,1,80), 0x800600000000L ) ) )
13311.                            if (  _substr(char_dum,1,4) == '*END' ) then
13323.                               ((&)seat_spectrum%basic%l_present)(i_type) = .true.
13325.                            else
13325.                            endif
13325.                         endif
13325.                      else
13325.                      endif
13325.                   else
13325.                   endif
13325.                enddo
13325.             endif
13325.          endif
13325.       endif
13325.    10 continue
15032.       return
15032.       end
15032.       
15055.       
15055.       subroutine ir_source( n_profile, i_layer_first, i_layer_last, source_coeff, del_planck, l_ir_source_quad, diff_planck_2, s_down, s_up, nd_profile, nd_layer, nd_source_coeff )
15055.       t$582 = nd_profile
15055.       t$583 = nd_layer
15055.       t$584 = nd_source_coeff
15095.       t$2206 = _zla( 0, nd_profile )
15055.       t$2207 = _zla( 0, nd_profile )
15095.       t$2208 = _zla( 0, nd_layer )
15055.       t$2209 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
15095.       t$2210 = _zla( 0, nd_source_coeff )
15055.       t$2211 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff )
15055.       t$2212 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
15122.       if ( l_ir_source_quad /= .false. ) then
15124.          if ( nd_layer > 0 ) then
15125.             if ( nd_profile > 0 ) then
15124.                $I_L15124_30 = 0
15124.                do
15125.                   $I_L15125_26 = 0
15125. !dir$ ivdep
15125.                   do
15126.                      s_up(1 + $I_L15125_26, 1 + $I_L15124_30) = diff_planck_2(1 + $I_L15125_26, 1 + $I_L15124_30) * source_coeff(1 + $I_L15125_26, 1 + $I_L15124_30, 2) + del_planck(1 + $I_L15125_26, 1 + $I_L15124_30) * source_coeff(1 + $I_L15125_26, 1 + $I_L15124_30, 1)
15130.                      s_down(1 + $I_L15125_26, 1 + $I_L15124_30) = -( del_planck(1 + $I_L15125_26, 1 + $I_L15124_30) * source_coeff(1 + $I_L15125_26, 1 + $I_L15124_30, 1) ) + diff_planck_2(1 + $I_L15125_26, 1 + $I_L15124_30) * source_coeff(1 + $I_L15125_26, 1 + $I_L15124_30, 2)
15134.                      $I_L15125_26 = 1 + $I_L15125_26
15125.                      if ( $I_L15125_26 >= nd_profile ) exit
15125.                   enddo
15136.                   $I_L15124_30 = 1 + $I_L15124_30
15134.                   if ( $I_L15124_30 >= nd_layer ) exit
15134.                enddo
15134.             endif
15134.          endif
15138.       else if ( nd_layer > 0 ) then
15141.          if ( nd_profile > 0 ) then
15140.             $I_L15140_28 = 0
15140.             do
15141.                $I_L15141_24 = 0
15141. !dir$ ivdep
15141.                do
15142.                   $s_up_WR0_R0 = del_planck(1 + $I_L15141_24, 1 + $I_L15140_28) * source_coeff(1 + $I_L15141_24, 1 + $I_L15140_28, 1)
15142.                   s_up(1 + $I_L15141_24, 1 + $I_L15140_28) = $s_up_WR0_R0
15144.                   s_down(1 + $I_L15141_24, 1 + $I_L15140_28) = -$s_up_WR0_R0
15145.                   $I_L15141_24 = 1 + $I_L15141_24
15141.                   if ( $I_L15141_24 >= nd_profile ) exit
15141.                enddo
15146.                $I_L15140_28 = 1 + $I_L15140_28
15145.                if ( $I_L15140_28 >= nd_layer ) exit
15145.             enddo
15145.          endif
15145.       endif
15153.       return
15153.       end
15153.       
15180.       
15180.       subroutine layer_part_integ( n_profile, ls_trunc, ms, n_red_eigensystem, cg_coeff, mu, eig_vec, theta, isolir, i_direct_top, mu_0, uplm_sol, diff_planck, l_ir_source_quad, diff_planck_2, tau, sqs2, source_top, source_bottom, upm_c, k_sol, z_sol, q_0, q_1, nd_profile, nd_max_order, nd_red_eigensystem )
15180.       t$585 = ( 1 + ls_trunc + -ms )
15233.       t$2213 = _zla( 0, ( 1 + ls_trunc + -ms ) )
15180.       t$586 = nd_profile
15180.       t$587 = nd_red_eigensystem
15235.       t$2214 = _zla( 0, nd_profile )
15180.       t$2215 = _zla( 0, nd_profile )
15235.       t$2216 = _zla( 0, nd_red_eigensystem )
15180.       t$2217 = _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem )
15180.       t$588 = ( 2 * nd_red_eigensystem )
15237.       t$2218 = _zla( 0, ( 2 * nd_red_eigensystem ) )
15180.       t$2219 = _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) )
15180.       t$2220 = _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem ) * _zla( 0, ( 2 * nd_red_eigensystem ) )
15180.       t$590 = ( 2 + ls_trunc + -ms )
15254.       t$2221 = _zla( 0, ( 2 + ls_trunc + -ms ) )
15180.       t$2222 = _zla( 0, nd_profile ) * _zla( 0, ( 2 + ls_trunc + -ms ) )
15180.       t$589 = nd_max_order
15180.       t$2223 = 1 + nd_max_order
15247.       t$2224 = _zla( 0, 1 + nd_max_order )
15180.       t$2225 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_max_order )
15180.       t$2226 = _zla( 0, ( 1 + ls_trunc + -ms ) ) * _zla( 0, nd_profile )
15180.       t$2227 = _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) )
15303.       t$2230 = 8 * _zla( 0, nd_profile )
15306.       t$2231 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) ) / 8
15306.       t$2233 = t$2231 + 8 * _zla( 0, nd_profile )
15297.       t$2234 = 8 * ( 7 + t$2231 + 8 * _zla( 0, nd_profile ) ) / 8
15297.       t$2236 = t$2234 + 8 * _zla( 0, nd_profile )
15295.       t$2237 = 8 * ( 7 + t$2234 + 8 * _zla( 0, nd_profile ) ) / 8
15295.       t$2239 = t$2237 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + ls_trunc + -ms ) )
15299.       t$2240 = 8 * ( 7 + t$2237 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + ls_trunc + -ms ) ) ) / 8
15299.       t$2242 = t$2240 + 8 * _zla( 0, nd_profile )
15180.       t$2228 = int( _alloc( t$2240 + 8 * _zla( 0, nd_profile ) ), 8 )
15303.       t$2229 = t$2228
15306.       t$2232 = t$2231 + t$2228
15297.       t$2235 = t$2234 + t$2228
15295.       t$2238 = t$2237 + t$2228
15299.       t$2241 = t$2240 + t$2228
15314.       $F_A33 = 2 * nd_red_eigensystem
15314.       $F_A34 = nd_profile
15314.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
15314.          $I_L15314_253 = 0
15314.          do
15314.             $I_L15314_247 = 0
15314. !dir$ ivdep
15314.             do
15314.                upm_c(1 + $I_L15314_247, 1 + $I_L15314_253) = 0.0
15314.                $I_L15314_247 = 1 + $I_L15314_247
15314.                if ( $I_L15314_247 >= $F_A34 ) exit
15314.             enddo
15314.             $I_L15314_253 = 1 + $I_L15314_253
15314.             if ( $I_L15314_253 >= $F_A33 ) exit
15314.          enddo
15314.       endif
15316.       if ( isolir == 1 ) then
15325.          if ( n_profile > 0 ) then
15325.             $I_L15325_208 = 0
15325. !dir$ ivdep
15325.             do
15326.                k_sol(1 + $I_L15325_208) = 1
15327.                eig_sep(1 + $I_L15325_208) = abs( mu(1 + $I_L15325_208, 1) + -mu_0(1 + $I_L15325_208) )
15328.                $I_L15325_208 = 1 + $I_L15325_208
15325.                if ( $I_L15325_208 >= n_profile ) exit
15325.             enddo
15325.          endif
15329.          if ( n_red_eigensystem > 0 ) then
15330.             if ( n_profile > 0 ) then
15329.                $I_L15329_280 = 0
15329.                do
15330.                   $I_L15330_274 = 0
15330.                   do
15329.                      $I_L15329_255 = 0
15329. !dir$ shortloop16
15329. !dir$ blocking_size( 4, 4 )
15329.                      do
15330.                         $I_L15330_234 = 0
15330. !dir$ ivdep
15330. !dir$ blocking_size( 256, 256 )
15330.                         do
15331.                            $eig_sep_tmp_WR0_R0 = abs( mu(1 + $I_L15330_234 + 256 * $I_L15330_274, 1 + $I_L15329_255 + 4 * $I_L15329_280) + -mu_0(1 + $I_L15330_234 + 256 * $I_L15330_274) )
15332.                            if ( $eig_sep_tmp_WR0_R0 < eig_sep(1 + $I_L15330_234 + 256 * $I_L15330_274) ) then
15333.                               k_sol(1 + $I_L15330_234 + 256 * $I_L15330_274) = ( 1 + $I_L15329_255 + 4 * $I_L15329_280 )
15334.                               eig_sep(1 + $I_L15330_234 + 256 * $I_L15330_274) = $eig_sep_tmp_WR0_R0
15334.                            endif
15330.                            $I_L15330_234 = 1 + $I_L15330_234
15335.                            if ( $I_L15330_234 >= min( n_profile, 256 + 256 * $I_L15330_274 ) + -256 * $I_L15330_274 ) exit
15335.                         enddo
15329.                         $I_L15329_255 = 1 + $I_L15329_255
15329.                         if ( $I_L15329_255 >= min( n_red_eigensystem, 4 + 4 * $I_L15329_280 ) + -4 * $I_L15329_280 ) exit
15329.                      enddo
15330.                      $I_L15330_274 = 1 + $I_L15330_274
15336.                      if ( $I_L15330_274 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
15336.                   enddo
15329.                   $I_L15329_280 = 1 + $I_L15329_280
15329.                   if ( $I_L15329_280 >= 1 + max( 0, -1 + _rsh( 3 + n_red_eigensystem, 2 ) ) ) exit
15329.                enddo
15329.             endif
15329.          endif
15342.          if ( n_profile > 0 ) then
15347.             $SC_cg_coeff_I0 = cg_coeff(1)
15342.             $I_L15342_237 = 0
15342. !dir$ ivdep
15342.             do
15343.                v_dif(1 + $I_L15342_237, 1) = 0.0
15347.                v_dif(1 + $I_L15342_237, 2) = ( 1.0/$SC_cg_coeff_I0 * ( -( sqs2(1 + $I_L15342_237, ms) * eig_vec(1 + $I_L15342_237, 1, k_sol(1 + $I_L15342_237)) ) ) )
15350.                $I_L15342_237 = 1 + $I_L15342_237
15342.                if ( $I_L15342_237 >= n_profile ) exit
15342.             enddo
15342.          endif
15355.          if ( ls_trunc + -ms > 0 ) then
15356.             if ( n_profile > 0 ) then
15355.                $I_L15355_282 = 0
15355.                do
15356.                   $I_L15356_276 = 0
15356.                   do
15355.                      $I_L15355_258 = 0
15355.                      if ( min( ( ls_trunc + -ms ), 2 + 2 * $I_L15355_282 ) + -2 * $I_L15355_282 >= 2 ) then
15355.                         $I_L15355_294 = 0
15355. !dir$ shortloop16
15355. !dir$ blocking_size( 2, 2 )
15355.                         do
15356.                            $SCA_cg_coeff#1_U0 = cg_coeff(2 + 2 * $I_L15355_282 + 2 * $I_L15355_294)
15356.                            $SCA_cg_coeff#1_U2 = cg_coeff(1 + 2 * $I_L15355_282 + 2 * $I_L15355_294)
15356.                            $SCA_cg_coeff#2_U1 = cg_coeff(3 + 2 * $I_L15355_282 + 2 * $I_L15355_294)
15356.                            $I_L15356_239 = 0
15356. !dir$ ivdep
15356. !dir$ blocking_size( 256, 256 )
15356.                            do
15360.                               v_dif(1 + $I_L15356_239 + 256 * $I_L15356_276, 3 + 2 * $I_L15355_282 + 2 * $I_L15355_294) = ( 1.0/$SCA_cg_coeff#1_U0 * ( -( sqs2(1 + $I_L15356_239 + 256 * $I_L15356_276, 1 + ms + 2 * $I_L15355_282 + 2 * $I_L15355_294) * mu_0(1 + $I_L15356_239 + 256 * $I_L15356_276) * v_dif(1 + $I_L15356_239 + 256 * $I_L15356_276, 2 + 2 * $I_L15355_282 + 2 * $I_L15355_294) ) + -( $SCA_cg_coeff#1_U2 * v_dif(1 + $I_L15356_239 + 256 * $I_L15356_276, 1 + 2 * $I_L15355_282 + 2 * $I_L15355_294) ) + sqs2(1 + $I_L15356_239 + 256 * $I_L15356_276, 1 + ms + 2 * $I_L15355_282 + 2 * $I_L15355_294) * eig_vec(1 + $I_L15356_239 + 256 * $I_L15356_276, 2 + 2 * $I_L15355_282 + 2 * $I_L15355_294, k_sol(1 + $I_L15356_239 + 256 * $I_L15356_276)) * real( 1 + -2 * mod( ( 2 + 2 * $I_L15355_282 + 2 * $I_L15355_294 ), 2 ), 8 ) ) )
15360.                               v_dif(1 + $I_L15356_239 + 256 * $I_L15356_276, 4 + 2 * $I_L15355_282 + 2 * $I_L15355_294) = ( 1.0/$SCA_cg_coeff#2_U1 * ( -( sqs2(1 + $I_L15356_239 + 256 * $I_L15356_276, 2 + ms + 2 * $I_L15355_282 + 2 * $I_L15355_294) * mu_0(1 + $I_L15356_239 + 256 * $I_L15356_276) * v_dif(1 + $I_L15356_239 + 256 * $I_L15356_276, 3 + 2 * $I_L15355_282 + 2 * $I_L15355_294) ) + -( $SCA_cg_coeff#1_U0 * v_dif(1 + $I_L15356_239 + 256 * $I_L15356_276, 2 + 2 * $I_L15355_282 + 2 * $I_L15355_294) ) + sqs2(1 + $I_L15356_239 + 256 * $I_L15356_276, 2 + ms + 2 * $I_L15355_282 + 2 * $I_L15355_294) * eig_vec(1 + $I_L15356_239 + 256 * $I_L15356_276, 3 + 2 * $I_L15355_282 + 2 * $I_L15355_294, k_sol(1 + $I_L15356_239 + 256 * $I_L15356_276)) * real( 1 + -2 * mod( ( 3 + 2 * $I_L15355_282 + 2 * $I_L15355_294 ), 2 ), 8 ) ) )
15356.                               $I_L15356_239 = 1 + $I_L15356_239
15356.                               if ( $I_L15356_239 >= min( n_profile, 256 + 256 * $I_L15356_276 ) + -256 * $I_L15356_276 ) exit
15356.                            enddo
15355.                            $I_L15355_294 = 1 + $I_L15355_294
15355.                            if ( $I_L15355_294 >= _rsh( min( ( ls_trunc + -ms ), 2 + 2 * $I_L15355_282 ) + -2 * $I_L15355_282, 1 ) ) exit
15355.                         enddo
15355.                         $I_L15355_258 = and( 0xfffffffffffffffeUL, min( ( ls_trunc + -ms ), 2 + 2 * $I_L15355_282 ) + -2 * $I_L15355_282 )
15355.                      endif
15355.                      if ( $I_L15355_258 < min( ( ls_trunc + -ms ), 2 + 2 * $I_L15355_282 ) + -2 * $I_L15355_282 ) then
15356.                         $SCA_cg_coeff_I3 = cg_coeff(2 + $I_L15355_258 + 2 * $I_L15355_282)
15356.                         $SCA_cg_coeff_I4 = cg_coeff(1 + $I_L15355_258 + 2 * $I_L15355_282)
15356.                         $I_L15356_239 = 0
15356. !dir$ ivdep
15356. !dir$ blocking_size( 256, 256 )
15356.                         do
15360.                            v_dif(1 + $I_L15356_239 + 256 * $I_L15356_276, 3 + $I_L15355_258 + 2 * $I_L15355_282) = ( 1.0/$SCA_cg_coeff_I3 * ( -( sqs2(1 + $I_L15356_239 + 256 * $I_L15356_276, 1 + ms + $I_L15355_258 + 2 * $I_L15355_282) * mu_0(1 + $I_L15356_239 + 256 * $I_L15356_276) * v_dif(1 + $I_L15356_239 + 256 * $I_L15356_276, 2 + $I_L15355_258 + 2 * $I_L15355_282) ) + -( $SCA_cg_coeff_I4 * v_dif(1 + $I_L15356_239 + 256 * $I_L15356_276, 1 + $I_L15355_258 + 2 * $I_L15355_282) ) + sqs2(1 + $I_L15356_239 + 256 * $I_L15356_276, 1 + ms + $I_L15355_258 + 2 * $I_L15355_282) * eig_vec(1 + $I_L15356_239 + 256 * $I_L15356_276, 2 + $I_L15355_258 + 2 * $I_L15355_282, k_sol(1 + $I_L15356_239 + 256 * $I_L15356_276)) * real( 1 + -2 * mod( ( 2 + $I_L15355_258 + 2 * $I_L15355_282 ), 2 ), 8 ) ) )
15356.                            $I_L15356_239 = 1 + $I_L15356_239
15356.                            if ( $I_L15356_239 >= min( n_profile, 256 + 256 * $I_L15356_276 ) + -256 * $I_L15356_276 ) exit
15356.                         enddo
15356.                      endif
15356.                      $I_L15356_276 = 1 + $I_L15356_276
15366.                      if ( $I_L15356_276 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
15366.                   enddo
15355.                   $I_L15355_282 = 1 + $I_L15355_282
15355.                   if ( $I_L15355_282 >= 1 + max( 0, -1 + _rsh( 1 + ls_trunc + -ms, 1 ) ) ) exit
15355.                enddo
15355.             endif
15355.          endif
15368.          if ( n_profile > 0 ) then
15368.             $I_L15368_242 = 0
15368. !dir$ ivdep
15368.             do
15369.                gamma(1 + $I_L15368_242) = ( uplm_sol(1 + $I_L15368_242, 2 + ls_trunc + -ms) * 1.0/v_dif(1 + $I_L15368_242, 2 + ls_trunc + -ms) )
15370.                $I_L15368_242 = 1 + $I_L15368_242
15368.                if ( $I_L15368_242 >= n_profile ) exit
15368.             enddo
15368.          endif
15383.          if ( ls_trunc + -ms >= 0 ) then
15384.             if ( n_profile > 0 ) then
15383.                $I_L15383_284 = 0
15383.                do
15384.                   $I_L15384_278 = 0
15384.                   do
15383.                      $I_L15383_261 = 0
15383. !dir$ shortloop16
15383. !dir$ ivdep
15383. !dir$ blocking_size( 8, 8 )
15383.                      do
15384.                         $I_L15384_244 = 0
15384. !dir$ blocking_size( 256, 256 )
15384.                         do
15386.                            z_sol(1 + $I_L15384_244 + 256 * $I_L15384_278, 1 + $I_L15383_261 + 8 * $I_L15383_284) = i_direct_top(1 + $I_L15384_244 + 256 * $I_L15384_278) * ( -uplm_sol(1 + $I_L15384_244 + 256 * $I_L15384_278, 1 + $I_L15383_261 + 8 * $I_L15383_284) + gamma(1 + $I_L15384_244 + 256 * $I_L15384_278) * v_dif(1 + $I_L15384_244 + 256 * $I_L15384_278, 1 + $I_L15383_261 + 8 * $I_L15383_284) )
15389.                            source_top(1 + $I_L15384_244 + 256 * $I_L15384_278, 1 + $I_L15383_261 + 8 * $I_L15383_284) = i_direct_top(1 + $I_L15384_244 + 256 * $I_L15384_278) * ( -uplm_sol(1 + $I_L15384_244 + 256 * $I_L15384_278, 1 + $I_L15383_261 + 8 * $I_L15383_284) + gamma(1 + $I_L15384_244 + 256 * $I_L15384_278) * v_dif(1 + $I_L15384_244 + 256 * $I_L15384_278, 1 + $I_L15383_261 + 8 * $I_L15383_284) )
15393.                            if ( eig_sep(1 + $I_L15384_244 + 256 * $I_L15384_278) < 1.0e-6 ) then
15396.                               $eig_diff_S9 = ( tau(1 + $I_L15384_244 + 256 * $I_L15384_278) * 1.0/( mu(1 + $I_L15384_244 + 256 * $I_L15384_278, k_sol(1 + $I_L15384_244 + 256 * $I_L15384_278)) * mu_0(1 + $I_L15384_244 + 256 * $I_L15384_278) ) )
15398.                               $const_S11 = -( gamma(1 + $I_L15384_244 + 256 * $I_L15384_278) * ( $eig_diff_S9 + 5.0e-1 * $eig_diff_S9 * $eig_diff_S9 * ( mu(1 + $I_L15384_244 + 256 * $I_L15384_278, k_sol(1 + $I_L15384_244 + 256 * $I_L15384_278)) + -mu_0(1 + $I_L15384_244 + 256 * $I_L15384_278) ) ) * _expn( -( tau(1 + $I_L15384_244 + 256 * $I_L15384_278) * 1.0/mu_0(1 + $I_L15384_244 + 256 * $I_L15384_278) ) ) )
15398.                            else
15404.                               $eig_diff_S10 = tau(1 + $I_L15384_244 + 256 * $I_L15384_278) * ( 1.0/mu(1 + $I_L15384_244 + 256 * $I_L15384_278, k_sol(1 + $I_L15384_244 + 256 * $I_L15384_278)) + -( 1.0/mu_0(1 + $I_L15384_244 + 256 * $I_L15384_278) ) )
15406.                               if ( tau(1 + $I_L15384_244 + 256 * $I_L15384_278) * ( 1.0/mu(1 + $I_L15384_244 + 256 * $I_L15384_278, k_sol(1 + $I_L15384_244 + 256 * $I_L15384_278)) + -( 1.0/mu_0(1 + $I_L15384_244 + 256 * $I_L15384_278) ) ) < 0.0 ) then
15408.                                  $const_S11 = ( gamma(1 + $I_L15384_244 + 256 * $I_L15384_278) * 1.0/( mu(1 + $I_L15384_244 + 256 * $I_L15384_278, k_sol(1 + $I_L15384_244 + 256 * $I_L15384_278)) + -mu_0(1 + $I_L15384_244 + 256 * $I_L15384_278) ) * ( -1.0 + _expn( $eig_diff_S10 ) ) * _expn( -( tau(1 + $I_L15384_244 + 256 * $I_L15384_278) * 1.0/mu(1 + $I_L15384_244 + 256 * $I_L15384_278, k_sol(1 + $I_L15384_244 + 256 * $I_L15384_278)) ) ) )
15408.                               else
15414.                                  $const_S11 = ( gamma(1 + $I_L15384_244 + 256 * $I_L15384_278) * 1.0/( mu(1 + $I_L15384_244 + 256 * $I_L15384_278, k_sol(1 + $I_L15384_244 + 256 * $I_L15384_278)) + -mu_0(1 + $I_L15384_244 + 256 * $I_L15384_278) ) * ( 1.0 + -_expn( -$eig_diff_S10 ) ) * _expn( -( tau(1 + $I_L15384_244 + 256 * $I_L15384_278) * 1.0/mu_0(1 + $I_L15384_244 + 256 * $I_L15384_278) ) ) )
15414.                               endif
15414.                            endif
15423.                            source_bottom(1 + $I_L15384_244 + 256 * $I_L15384_278, 1 + $I_L15383_261 + 8 * $I_L15383_284) = i_direct_top(1 + $I_L15384_244 + 256 * $I_L15384_278) * _expn( -( tau(1 + $I_L15384_244 + 256 * $I_L15384_278) * 1.0/mu_0(1 + $I_L15384_244 + 256 * $I_L15384_278) ) ) * ( -uplm_sol(1 + $I_L15384_244 + 256 * $I_L15384_278, 1 + $I_L15383_261 + 8 * $I_L15383_284) + gamma(1 + $I_L15384_244 + 256 * $I_L15384_278) * v_dif(1 + $I_L15384_244 + 256 * $I_L15384_278, 1 + $I_L15383_261 + 8 * $I_L15383_284) ) + $const_S11 * i_direct_top(1 + $I_L15384_244 + 256 * $I_L15384_278) * eig_vec(1 + $I_L15384_244 + 256 * $I_L15384_278, 1 + $I_L15383_261 + 8 * $I_L15383_284, k_sol(1 + $I_L15384_244 + 256 * $I_L15384_278)) * real( 1 + -2 * mod( ( $I_L15383_261 + 8 * $I_L15383_284 ), 2 ), 8 )
15384.                            $I_L15384_244 = 1 + $I_L15384_244
15419.                            if ( $I_L15384_244 >= min( n_profile, 256 + 256 * $I_L15384_278 ) + -256 * $I_L15384_278 ) exit
15419.                         enddo
15383.                         $I_L15383_261 = 1 + $I_L15383_261
15383.                         if ( $I_L15383_261 >= min( 1 + ls_trunc + -ms, 8 + 8 * $I_L15383_284 ) + -8 * $I_L15383_284 ) exit
15383.                      enddo
15384.                      $I_L15384_278 = 1 + $I_L15384_278
15428.                      if ( $I_L15384_278 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
15428.                   enddo
15383.                   $I_L15383_284 = 1 + $I_L15383_284
15383.                   if ( $I_L15383_284 >= 1 + max( 0, -1 + _rsh( 8 + ls_trunc + -ms, 3 ) ) ) exit
15383.                enddo
15383.             endif
15383.          endif
15431.       else if ( isolir == 2 ) then
15448.          if ( ms == 0 ) then
15450.             if ( n_profile > 0 ) then
15450.                $I_L15450_210 = 0
15450. !dir$ ivdep
15450.                do
15451.                   q_0(1 + $I_L15450_210) = ( 6.5147001587055997e-1 * diff_planck(1 + $I_L15450_210) * 1.0/( 2.2204460492503131e-16 + tau(1 + $I_L15450_210) * sqs2(1 + $I_L15450_210, 1) ) )
15453.                   $I_L15450_210 = 1 + $I_L15450_210
15450.                   if ( $I_L15450_210 >= n_profile ) exit
15450.                enddo
15450.             endif
15455.             if ( l_ir_source_quad /= .false. ) then
15457.                if ( n_profile > 0 ) then
15461.                   $SC_cg_coeff_I1 = cg_coeff(1)
15457.                   $I_L15457_212 = 0
15457. !dir$ ivdep
15457.                   do
15458.                      $q_1_WR0_R1 = ( 1.3029400317411199 * diff_planck_2(1 + $I_L15457_212) * 1.0/( 2.2204460492503131e-16 + sqs2(1 + $I_L15457_212, 1) * tau(1 + $I_L15457_212) * tau(1 + $I_L15457_212) ) )
15458.                      q_1(1 + $I_L15457_212) = $q_1_WR0_R1
15461.                      $source_top_WR0_R2 = ( $q_1_WR0_R1 * $SC_cg_coeff_I1 * 1.0/sqs2(1 + $I_L15457_212, 0) )
15461.                      source_top(1 + $I_L15457_212, 1) = $source_top_WR0_R2
15463.                      source_bottom(1 + $I_L15457_212, 1) = $source_top_WR0_R2
15464.                      source_top(1 + $I_L15457_212, 2) = q_0(1 + $I_L15457_212) + -5.0e-1 * $q_1_WR0_R1
15465.                      source_bottom(1 + $I_L15457_212, 2) = q_0(1 + $I_L15457_212) + 5.0e-1 * $q_1_WR0_R1
15466.                      $I_L15457_212 = 1 + $I_L15457_212
15457.                      if ( $I_L15457_212 >= n_profile ) exit
15457.                   enddo
15457.                endif
15467.                if ( ls_trunc > 1 ) then
15468.                   if ( n_profile > 0 ) then
15469.                      $SC_cg_coeff_I2 = cg_coeff(2)
15468.                      $I_L15468_214 = 0
15468. !dir$ ivdep
15468.                      do
15469.                         $source_top_WR0_R3 = ( q_1(1 + $I_L15468_214) * $SC_cg_coeff_I2 * 1.0/sqs2(1 + $I_L15468_214, 2) )
15469.                         source_top(1 + $I_L15468_214, 3) = $source_top_WR0_R3
15470.                         source_bottom(1 + $I_L15468_214, 3) = $source_top_WR0_R3
15471.                         $I_L15468_214 = 1 + $I_L15468_214
15468.                         if ( $I_L15468_214 >= n_profile ) exit
15468.                      enddo
15468.                   endif
15468.                endif
15468.             else
15476.                if ( n_profile > 0 ) then
15476.                   $I_L15476_216 = 0
15476. !dir$ ivdep
15476.                   do
15477.                      source_top(1 + $I_L15476_216, 1) = 0.0
15478.                      source_bottom(1 + $I_L15476_216, 1) = 0.0
15479.                      $source_top_WR0_R4 = q_0(1 + $I_L15476_216)
15479.                      source_top(1 + $I_L15476_216, 2) = $source_top_WR0_R4
15480.                      source_bottom(1 + $I_L15476_216, 2) = $source_top_WR0_R4
15481.                      $I_L15476_216 = 1 + $I_L15476_216
15476.                      if ( $I_L15476_216 >= n_profile ) exit
15476.                   enddo
15476.                endif
15482.                if ( ls_trunc > 1 ) then
15483.                   if ( n_profile > 0 ) then
15483.                      $I_L15483_218 = 0
15483. !dir$ ivdep
15483.                      do
15484.                         source_top(1 + $I_L15483_218, 3) = 0.0
15485.                         source_bottom(1 + $I_L15483_218, 3) = 0.0
15486.                         $I_L15483_218 = 1 + $I_L15483_218
15483.                         if ( $I_L15483_218 >= n_profile ) exit
15483.                      enddo
15483.                   endif
15483.                endif
15483.             endif
15492.             if ( -3 + ls_trunc >= 0 ) then
15493.                if ( n_profile > 0 ) then
15492.                   $I_L15492_251 = 0
15492.                   do
15493.                      $I_L15493_222 = 0
15493. !dir$ ivdep
15493.                      do
15494.                         source_top(1 + $I_L15493_222, 4 + $I_L15492_251) = 0.0
15495.                         source_bottom(1 + $I_L15493_222, 4 + $I_L15492_251) = 0.0
15496.                         $I_L15493_222 = 1 + $I_L15493_222
15493.                         if ( $I_L15493_222 >= n_profile ) exit
15493.                      enddo
15497.                      $I_L15492_251 = 1 + $I_L15492_251
15496.                      if ( $I_L15492_251 >= -2 + ls_trunc ) exit
15496.                   enddo
15496.                endif
15496.             endif
15501.             if ( n_red_eigensystem > 0 ) then
15502.                if ( n_profile > 0 ) then
15501.                   $I_L15501_286 = 0
15501.                   do
15502.                      $I_L15502_270 = 0
15502.                      do
15501.                         $I_L15501_292 = 0
15501. !dir$ shortloop16
15501. !dir$ blocking_size( 2, 2 )
15501.                         do
15502.                            $I_L15502_224 = 0
15502. !dir$ ivdep
15502. !dir$ blocking_size( 256, 256 )
15502.                            do
15503.                               $upm_c_WR0_R5 = -( sqs2(1 + $I_L15502_224 + 256 * $I_L15502_270, 1) * q_0(1 + $I_L15502_224 + 256 * $I_L15502_270) * eig_vec(1 + $I_L15502_224 + 256 * $I_L15502_270, 2, 1 + $I_L15501_292 + 2 * $I_L15501_286) )
15503.                               upm_c(1 + $I_L15502_224 + 256 * $I_L15502_270, 1 + n_red_eigensystem + $I_L15501_292 + 2 * $I_L15501_286) = $upm_c_WR0_R5
15505.                               upm_c(1 + $I_L15502_224 + 256 * $I_L15502_270, 1 + $I_L15501_292 + 2 * $I_L15501_286) = -$upm_c_WR0_R5
15502.                               $I_L15502_224 = 1 + $I_L15502_224
15502.                               if ( $I_L15502_224 >= min( n_profile, 256 + 256 * $I_L15502_270 ) + -256 * $I_L15502_270 ) exit
15502.                            enddo
15501.                            $I_L15501_292 = 1 + $I_L15501_292
15501.                            if ( $I_L15501_292 >= min( n_red_eigensystem, 2 + 2 * $I_L15501_286 ) + -2 * $I_L15501_286 ) exit
15501.                         enddo
15502.                         $I_L15502_270 = 1 + $I_L15502_270
15506.                         if ( $I_L15502_270 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
15506.                      enddo
15501.                      $I_L15501_286 = 1 + $I_L15501_286
15501.                      if ( $I_L15501_286 >= 1 + max( 0, -1 + _rsh( 1 + n_red_eigensystem, 1 ) ) ) exit
15501.                   enddo
15501.                endif
15501.             endif
15512.             if ( ls_trunc >= 0 ) then
15512.                $I_L15512_290 = 0
15512.                do
15514.                   if ( n_profile > 0 ) then
15514.                      $I_L15514_227 = 0
15514. !dir$ ivdep
15514.                      do
15515.                         x(1 + $I_L15514_227) = eig_vec(1 + $I_L15514_227, 1 + $I_L15512_290, 1) * upm_c(1 + $I_L15514_227, 1 + n_red_eigensystem) * ( theta(1 + $I_L15514_227, 1) + -( real( 1 + -2 * mod( $I_L15512_290, 2 ), 8 ) ) )
15517.                         $I_L15514_227 = 1 + $I_L15514_227
15514.                         if ( $I_L15514_227 >= n_profile ) exit
15514.                      enddo
15514.                   endif
15518.                   if ( -2 + n_red_eigensystem >= 0 ) then
15519.                      if ( n_profile > 0 ) then
15518.                         $I_L15518_288 = 0
15518.                         do
15519.                            $I_L15519_272 = 0
15519.                            do
15518.                               $I_L15518_267 = 0
15518. !dir$ shortloop16
15518. !dir$ blocking_size( 2, 2 )
15518.                               do
15519.                                  $I_L15519_229 = 0
15519. !dir$ ivdep
15519. !dir$ blocking_size( 256, 256 )
15519.                                  do
15520.                                     x(1 + $I_L15519_229 + 256 * $I_L15519_272) = x(1 + $I_L15519_229 + 256 * $I_L15519_272) + upm_c(1 + $I_L15519_229 + 256 * $I_L15519_272, 2 + n_red_eigensystem + $I_L15518_267 + 2 * $I_L15518_288) * eig_vec(1 + $I_L15519_229 + 256 * $I_L15519_272, 1 + $I_L15512_290, 2 + $I_L15518_267 + 2 * $I_L15518_288) * ( theta(1 + $I_L15519_229 + 256 * $I_L15519_272, 2 + $I_L15518_267 + 2 * $I_L15518_288) + -( real( 1 + -2 * mod( $I_L15512_290, 2 ), 8 ) ) )
15519.                                     $I_L15519_229 = 1 + $I_L15519_229
15519.                                     if ( $I_L15519_229 >= min( n_profile, 256 + 256 * $I_L15519_272 ) + -256 * $I_L15519_272 ) exit
15519.                                  enddo
15518.                                  $I_L15518_267 = 1 + $I_L15518_267
15518.                                  if ( $I_L15518_267 >= min( -1 + n_red_eigensystem, 2 + 2 * $I_L15518_288 ) + -2 * $I_L15518_288 ) exit
15518.                               enddo
15519.                               $I_L15519_272 = 1 + $I_L15519_272
15523.                               if ( $I_L15519_272 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
15523.                            enddo
15518.                            $I_L15518_288 = 1 + $I_L15518_288
15518.                            if ( $I_L15518_288 >= 1 + max( 0, -1 + _rsh( n_red_eigensystem, 1 ) ) ) exit
15518.                         enddo
15518.                      endif
15518.                   endif
15525.                   if ( n_profile > 0 ) then
15525.                      $I_L15525_232 = 0
15525. !dir$ ivdep
15525.                      do
15526.                         source_top(1 + $I_L15525_232, 1 + $I_L15512_290) = x(1 + $I_L15525_232) + source_top(1 + $I_L15525_232, 1 + $I_L15512_290)
15527.                         source_bottom(1 + $I_L15525_232, 1 + $I_L15512_290) = source_bottom(1 + $I_L15525_232, 1 + $I_L15512_290) + -( x(1 + $I_L15525_232) * real( 1 + -2 * mod( $I_L15512_290, 2 ), 8 ) )
15528.                         $I_L15525_232 = 1 + $I_L15525_232
15525.                         if ( $I_L15525_232 >= n_profile ) exit
15525.                      enddo
15525.                   endif
15529.                   $I_L15512_290 = 1 + $I_L15512_290
15528.                   if ( $I_L15512_290 >= 1 + ls_trunc ) exit
15528.                enddo
15528.             endif
15531.          else if ( ls_trunc + -ms >= 0 ) then
15537.             if ( n_profile > 0 ) then
15536.                $I_L15536_249 = 0
15536.                do
15537.                   $I_L15537_220 = 0
15537. !dir$ ivdep
15537.                   do
15538.                      source_top(1 + $I_L15537_220, 1 + $I_L15536_249) = 0.0
15539.                      source_bottom(1 + $I_L15537_220, 1 + $I_L15536_249) = 0.0
15540.                      $I_L15537_220 = 1 + $I_L15537_220
15537.                      if ( $I_L15537_220 >= n_profile ) exit
15537.                   enddo
15541.                   $I_L15536_249 = 1 + $I_L15536_249
15540.                   if ( $I_L15536_249 >= 1 + ls_trunc + -ms ) exit
15540.                enddo
15540.             endif
15540.          endif
15540.       endif
15180.       _free( t$2228 )
15549.       return
15549.       end
15549.       
15566.       
15566.       logical
15566.       function l_cloud_density( n_condensed, i_phase_cmp, l_cloud_cmp, i_condensed_param, nd_cloud_component )
15566.       t$591 = nd_cloud_component
15593.       t$2243 = _zla( 0, nd_cloud_component )
15611.       l_cloud_density = .false.
15615.       if ( n_condensed > 0 ) then
15615.          $I_L15615_4 = 0
15615. !dir$ ivdep
15615.          do
15616.             l_cloud_density = l_cloud_density .or. l_cloud_cmp(1 + $I_L15615_4) .and. i_phase_cmp(1 + $I_L15615_4) == 2 .and. ( i_condensed_param(1 + $I_L15615_4) == 4 .or. i_condensed_param(1 + $I_L15615_4) == 5 ) .or. i_phase_cmp(1 + $I_L15615_4) == 1 .and. i_condensed_param(1 + $I_L15615_4) == 3 .or. i_phase_cmp(1 + $I_L15615_4) == 2 .and. i_condensed_param(1 + $I_L15615_4) == 3
15626.             $I_L15615_4 = 1 + $I_L15615_4
15615.             if ( $I_L15615_4 >= n_condensed ) exit
15615.          enddo
15615.       endif
15631.       l_cloud_density = l_cloud_density
15631.       return
15631.       end
15631.       
15653.       
15653.       subroutine mix_app_scat( n_profile, n_layer, n_cloud_top, t_free, r_free, s_down_free, s_up_free, t_cloud, r_cloud, s_down_cloud, s_up_cloud, g_ff, g_fc, g_cf, g_cc, b_ff, b_fc, b_cf, b_cc, flux_inc_down, source_ground, albedo_surface_diff, flux_diffuse, nd_profile, nd_layer, id_ct )
15653.       t$592 = nd_profile
15653.       t$593 = nd_layer
15691.       t$2244 = _zla( 0, nd_profile )
15653.       t$2245 = _zla( 0, nd_profile )
15691.       t$2246 = _zla( 0, nd_layer )
15653.       t$2247 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
15653.       t$594 = ( -1 + id_ct )
15653.       t$2248 = 2 + nd_layer + -id_ct
15708.       t$2249 = _zla( 0, 2 + nd_layer + -id_ct )
15653.       t$2250 = _zla( 0, nd_profile ) * _zla( 0, 2 + nd_layer + -id_ct )
15653.       t$595 = ( 2 + 2 * nd_layer )
15732.       t$2251 = _zla( 0, ( 2 + 2 * nd_layer ) )
15653.       t$2252 = _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
15755.       t$2255 = 8 * _zla( 0, nd_profile )
15653.       t$2256 = 1 + nd_layer
15743.       t$2257 = _zla( 0, 1 + nd_layer )
15653.       t$2258 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
15743.       t$2259 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) ) / 8
15743.       t$2261 = t$2259 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
15745.       t$2262 = 8 * ( 7 + t$2259 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
15745.       t$2264 = t$2262 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
15747.       t$2265 = 8 * ( 7 + t$2262 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
15747.       t$2267 = t$2265 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
15749.       t$2268 = 8 * ( 7 + t$2265 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
15749.       t$2270 = t$2268 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
15653.       t$2253 = int( _alloc( t$2268 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ), 8 )
15755.       t$2254 = t$2253
15743.       t$2260 = t$2259 + t$2253
15745.       t$2263 = t$2262 + t$2253
15747.       t$2266 = t$2265 + t$2253
15749.       t$2269 = t$2268 + t$2253
15769.       if ( n_profile > 0 ) then
15769.          $I_L15769_126 = 0
15769. !dir$ ivdep
15769.          do
15770.             flux_down(1 + $I_L15769_126, 0) = flux_inc_down(1 + $I_L15769_126)
15771.             $I_L15769_126 = 1 + $I_L15769_126
15769.             if ( $I_L15769_126 >= n_profile ) exit
15769.          enddo
15769.       endif
15772.       if ( -1 + n_cloud_top > 0 ) then
15773.          if ( n_profile > 0 ) then
15772.             $I_L15772_160 = 0
15772.             do
15773.                $I_L15773_158 = 0
15773.                do
15772.                   $I_L15772_155 = 0
15772.                   if ( min( -1 + n_cloud_top, 2 + 2 * $I_L15772_160 ) + -2 * $I_L15772_160 >= 2 ) then
15772.                      $I_L15772_162 = 0
15772. !dir$ shortloop16
15772. !dir$ blocking_size( 2, 2 )
15772.                      do
15773.                         $I_L15773_128 = 0
15773. !dir$ ivdep
15773. !dir$ blocking_size( 256, 256 )
15773.                         do
15774.                            flux_down(1 + $I_L15773_128 + 256 * $I_L15773_158, 1 + 2 * $I_L15772_160 + 2 * $I_L15772_162) = s_down_free(1 + $I_L15773_128 + 256 * $I_L15773_158, 1 + 2 * $I_L15772_160 + 2 * $I_L15772_162) + flux_down(1 + $I_L15773_128 + 256 * $I_L15773_158, 2 * $I_L15772_160 + 2 * $I_L15772_162) * t_free(1 + $I_L15773_128 + 256 * $I_L15773_158, 1 + 2 * $I_L15772_160 + 2 * $I_L15772_162)
15774.                            flux_down(1 + $I_L15773_128 + 256 * $I_L15773_158, 2 + 2 * $I_L15772_160 + 2 * $I_L15772_162) = s_down_free(1 + $I_L15773_128 + 256 * $I_L15773_158, 2 + 2 * $I_L15772_160 + 2 * $I_L15772_162) + flux_down(1 + $I_L15773_128 + 256 * $I_L15773_158, 1 + 2 * $I_L15772_160 + 2 * $I_L15772_162) * t_free(1 + $I_L15773_128 + 256 * $I_L15773_158, 2 + 2 * $I_L15772_160 + 2 * $I_L15772_162)
15773.                            $I_L15773_128 = 1 + $I_L15773_128
15773.                            if ( $I_L15773_128 >= min( n_profile, 256 + 256 * $I_L15773_158 ) + -256 * $I_L15773_158 ) exit
15773.                         enddo
15772.                         $I_L15772_162 = 1 + $I_L15772_162
15772.                         if ( $I_L15772_162 >= _rsh( min( -1 + n_cloud_top, 2 + 2 * $I_L15772_160 ) + -2 * $I_L15772_160, 1 ) ) exit
15772.                      enddo
15772.                      $I_L15772_155 = and( 0xfffffffffffffffeUL, min( -1 + n_cloud_top, 2 + 2 * $I_L15772_160 ) + -2 * $I_L15772_160 )
15772.                   endif
15772.                   if ( $I_L15772_155 < min( -1 + n_cloud_top, 2 + 2 * $I_L15772_160 ) + -2 * $I_L15772_160 ) then
15773.                      $I_L15773_128 = 0
15773. !dir$ ivdep
15773. !dir$ blocking_size( 256, 256 )
15773.                      do
15774.                         flux_down(1 + $I_L15773_128 + 256 * $I_L15773_158, 1 + $I_L15772_155 + 2 * $I_L15772_160) = s_down_free(1 + $I_L15773_128 + 256 * $I_L15773_158, 1 + $I_L15772_155 + 2 * $I_L15772_160) + t_free(1 + $I_L15773_128 + 256 * $I_L15773_158, 1 + $I_L15772_155 + 2 * $I_L15772_160) * flux_down(1 + $I_L15773_128 + 256 * $I_L15773_158, $I_L15772_155 + 2 * $I_L15772_160)
15773.                         $I_L15773_128 = 1 + $I_L15773_128
15773.                         if ( $I_L15773_128 >= min( n_profile, 256 + 256 * $I_L15773_158 ) + -256 * $I_L15773_158 ) exit
15773.                      enddo
15773.                   endif
15773.                   $I_L15773_158 = 1 + $I_L15773_158
15776.                   if ( $I_L15773_158 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
15776.                enddo
15772.                $I_L15772_160 = 1 + $I_L15772_160
15772.                if ( $I_L15772_160 >= 1 + max( 0, -1 + _rsh( n_cloud_top, 1 ) ) ) exit
15772.             enddo
15772.          endif
15772.       endif
15778.       if ( n_profile > 0 ) then
15778.          $I_L15778_131 = 0
15778. !dir$ ivdep
15778.          do
15779.             $flux_cloud_top_WR0_R0 = flux_down(1 + $I_L15778_131, -1 + n_cloud_top)
15784.             flux_down(1 + $I_L15778_131, -1 + n_cloud_top) = $flux_cloud_top_WR0_R0 * g_ff(1 + $I_L15778_131, -1 + n_cloud_top)
15786.             flux_down_cloud(1 + $I_L15778_131, -1 + n_cloud_top) = $flux_cloud_top_WR0_R0 * g_fc(1 + $I_L15778_131, -1 + n_cloud_top)
15780.             $I_L15778_131 = 1 + $I_L15778_131
15778.             if ( $I_L15778_131 >= n_profile ) exit
15778.          enddo
15778.       endif
15790.       if ( n_layer + -n_cloud_top > 0 ) then
15791.          if ( n_profile > 0 ) then
15790.             $I_L15790_145 = 0
15790.             if ( ( n_layer + -n_cloud_top ) >= 2 ) then
15790.                $I_L15790_164 = 0
15790. !dir$ blocking_size( 1, 1 )
15790.                do
15791.                   $I_L15791_133 = 0
15791. !dir$ ivdep
15791. !dir$ blocking_size( 256, 256 )
15791.                   do
15794.                      $flux_propagated_S8 = s_down_free(1 + $I_L15791_133, n_cloud_top + 2 * $I_L15790_164) + flux_down(1 + $I_L15791_133, -1 + n_cloud_top + 2 * $I_L15790_164) * t_free(1 + $I_L15791_133, n_cloud_top + 2 * $I_L15790_164)
15796.                      $flux_propagated_cloud_S7 = s_down_cloud(1 + $I_L15791_133, n_cloud_top + 2 * $I_L15790_164) + flux_down_cloud(1 + $I_L15791_133, -1 + n_cloud_top + 2 * $I_L15790_164) * t_cloud(1 + $I_L15791_133, n_cloud_top + 2 * $I_L15790_164)
15799.                      flux_down(1 + $I_L15791_133, n_cloud_top + 2 * $I_L15790_164) = $flux_propagated_S8 * g_ff(1 + $I_L15791_133, n_cloud_top + 2 * $I_L15790_164) + $flux_propagated_cloud_S7 * g_cf(1 + $I_L15791_133, n_cloud_top + 2 * $I_L15790_164)
15802.                      flux_down_cloud(1 + $I_L15791_133, n_cloud_top + 2 * $I_L15790_164) = $flux_propagated_S8 * g_fc(1 + $I_L15791_133, n_cloud_top + 2 * $I_L15790_164) + $flux_propagated_cloud_S7 * g_cc(1 + $I_L15791_133, n_cloud_top + 2 * $I_L15790_164)
15794.                      $flux_propagated_S8 = s_down_free(1 + $I_L15791_133, 1 + n_cloud_top + 2 * $I_L15790_164) + flux_down(1 + $I_L15791_133, n_cloud_top + 2 * $I_L15790_164) * t_free(1 + $I_L15791_133, 1 + n_cloud_top + 2 * $I_L15790_164)
15796.                      $flux_propagated_cloud_S7 = s_down_cloud(1 + $I_L15791_133, 1 + n_cloud_top + 2 * $I_L15790_164) + flux_down_cloud(1 + $I_L15791_133, n_cloud_top + 2 * $I_L15790_164) * t_cloud(1 + $I_L15791_133, 1 + n_cloud_top + 2 * $I_L15790_164)
15799.                      flux_down(1 + $I_L15791_133, 1 + n_cloud_top + 2 * $I_L15790_164) = $flux_propagated_cloud_S7 * g_cf(1 + $I_L15791_133, 1 + n_cloud_top + 2 * $I_L15790_164) + $flux_propagated_S8 * g_ff(1 + $I_L15791_133, 1 + n_cloud_top + 2 * $I_L15790_164)
15802.                      flux_down_cloud(1 + $I_L15791_133, 1 + n_cloud_top + 2 * $I_L15790_164) = $flux_propagated_cloud_S7 * g_cc(1 + $I_L15791_133, 1 + n_cloud_top + 2 * $I_L15790_164) + $flux_propagated_S8 * g_fc(1 + $I_L15791_133, 1 + n_cloud_top + 2 * $I_L15790_164)
15806.                      $I_L15791_133 = 1 + $I_L15791_133
15791.                      if ( $I_L15791_133 >= n_profile ) exit
15791.                   enddo
15807.                   $I_L15790_164 = 1 + $I_L15790_164
15806.                   if ( $I_L15790_164 >= _rsh( ( n_layer + -n_cloud_top ), 1 ) ) exit
15806.                enddo
15807.                $I_L15790_145 = and( 0xfffffffffffffffeUL, ( n_layer + -n_cloud_top ) )
15807.             endif
15790.             if ( $I_L15790_145 < ( n_layer + -n_cloud_top ) ) then
15791.                $I_L15791_133 = 0
15791. !dir$ ivdep
15791. !dir$ blocking_size( 256, 256 )
15791.                do
15794.                   $flux_propagated_S8 = s_down_free(1 + $I_L15791_133, n_cloud_top + $I_L15790_145) + t_free(1 + $I_L15791_133, n_cloud_top + $I_L15790_145) * flux_down(1 + $I_L15791_133, -1 + n_cloud_top + $I_L15790_145)
15796.                   $flux_propagated_cloud_S7 = s_down_cloud(1 + $I_L15791_133, n_cloud_top + $I_L15790_145) + t_cloud(1 + $I_L15791_133, n_cloud_top + $I_L15790_145) * flux_down_cloud(1 + $I_L15791_133, -1 + n_cloud_top + $I_L15790_145)
15799.                   flux_down(1 + $I_L15791_133, n_cloud_top + $I_L15790_145) = $flux_propagated_cloud_S7 * g_cf(1 + $I_L15791_133, n_cloud_top + $I_L15790_145) + $flux_propagated_S8 * g_ff(1 + $I_L15791_133, n_cloud_top + $I_L15790_145)
15802.                   flux_down_cloud(1 + $I_L15791_133, n_cloud_top + $I_L15790_145) = $flux_propagated_cloud_S7 * g_cc(1 + $I_L15791_133, n_cloud_top + $I_L15790_145) + $flux_propagated_S8 * g_fc(1 + $I_L15791_133, n_cloud_top + $I_L15790_145)
15806.                   $I_L15791_133 = 1 + $I_L15791_133
15791.                   if ( $I_L15791_133 >= n_profile ) exit
15791.                enddo
15791.             endif
15791.          endif
15791.       endif
15811.       if ( n_profile > 0 ) then
15811.          $I_L15811_135 = 0
15811. !dir$ ivdep
15811.          do
15813.             $flux_down_WR0_R1 = s_down_free(1 + $I_L15811_135, n_layer) + t_free(1 + $I_L15811_135, n_layer) * flux_down(1 + $I_L15811_135, -1 + n_layer)
15813.             flux_down(1 + $I_L15811_135, n_layer) = $flux_down_WR0_R1
15816.             $flux_down_cloud_WR0_R2 = s_down_cloud(1 + $I_L15811_135, n_layer) + t_cloud(1 + $I_L15811_135, n_layer) * flux_down_cloud(1 + $I_L15811_135, -1 + n_layer)
15816.             flux_down_cloud(1 + $I_L15811_135, n_layer) = $flux_down_cloud_WR0_R2
15819.             flux_up(1 + $I_L15811_135, n_layer) = b_ff(1 + $I_L15811_135, n_layer) * source_ground(1 + $I_L15811_135) + $flux_down_WR0_R1 * albedo_surface_diff(1 + $I_L15811_135)
15822.             flux_up_cloud(1 + $I_L15811_135, n_layer) = source_ground(1 + $I_L15811_135) * b_cf(1 + $I_L15811_135, n_layer) + $flux_down_cloud_WR0_R2 * albedo_surface_diff(1 + $I_L15811_135)
15825.             $I_L15811_135 = 1 + $I_L15811_135
15811.             if ( $I_L15811_135 >= n_profile ) exit
15811.          enddo
15811.       endif
15830.       if ( n_cloud_top + -n_layer <= 0 ) then
15831.          if ( n_profile > 0 ) then
15830.             $I_L15830_147 = 0
15830.             if ( n_layer + -n_cloud_top > 0 ) then
15830.                $I_L15830_166 = 0
15830. !dir$ blocking_size( 1, 1 )
15830.                do
15831.                   $I_L15831_137 = 0
15831. !dir$ ivdep
15831. !dir$ blocking_size( 256, 256 )
15831.                   do
15834.                      $flux_propagated_S13 = s_up_free(1 + $I_L15831_137, n_layer + -2 * $I_L15830_166) + r_free(1 + $I_L15831_137, n_layer + -2 * $I_L15830_166) * flux_down(1 + $I_L15831_137, -1 + n_layer + -2 * $I_L15830_166) + flux_up(1 + $I_L15831_137, n_layer + -2 * $I_L15830_166) * t_free(1 + $I_L15831_137, n_layer + -2 * $I_L15830_166)
15836.                      $flux_propagated_cloud_S12 = s_up_cloud(1 + $I_L15831_137, n_layer + -2 * $I_L15830_166) + r_cloud(1 + $I_L15831_137, n_layer + -2 * $I_L15830_166) * flux_down_cloud(1 + $I_L15831_137, -1 + n_layer + -2 * $I_L15830_166) + flux_up_cloud(1 + $I_L15831_137, n_layer + -2 * $I_L15830_166) * t_cloud(1 + $I_L15831_137, n_layer + -2 * $I_L15830_166)
15839.                      flux_up(1 + $I_L15831_137, -1 + n_layer + -2 * $I_L15830_166) = $flux_propagated_S13 * b_ff(1 + $I_L15831_137, -1 + n_layer + -2 * $I_L15830_166) + $flux_propagated_cloud_S12 * b_fc(1 + $I_L15831_137, -1 + n_layer + -2 * $I_L15830_166)
15841.                      flux_up_cloud(1 + $I_L15831_137, -1 + n_layer + -2 * $I_L15830_166) = $flux_propagated_S13 * b_cf(1 + $I_L15831_137, -1 + n_layer + -2 * $I_L15830_166) + $flux_propagated_cloud_S12 * b_cc(1 + $I_L15831_137, -1 + n_layer + -2 * $I_L15830_166)
15834.                      $flux_propagated_S13 = s_up_free(1 + $I_L15831_137, -1 + n_layer + -2 * $I_L15830_166) + flux_up(1 + $I_L15831_137, -1 + n_layer + -2 * $I_L15830_166) * t_free(1 + $I_L15831_137, -1 + n_layer + -2 * $I_L15830_166) + flux_down(1 + $I_L15831_137, -2 + n_layer + -2 * $I_L15830_166) * r_free(1 + $I_L15831_137, -1 + n_layer + -2 * $I_L15830_166)
15836.                      $flux_propagated_cloud_S12 = s_up_cloud(1 + $I_L15831_137, -1 + n_layer + -2 * $I_L15830_166) + flux_up_cloud(1 + $I_L15831_137, -1 + n_layer + -2 * $I_L15830_166) * t_cloud(1 + $I_L15831_137, -1 + n_layer + -2 * $I_L15830_166) + flux_down_cloud(1 + $I_L15831_137, -2 + n_layer + -2 * $I_L15830_166) * r_cloud(1 + $I_L15831_137, -1 + n_layer + -2 * $I_L15830_166)
15839.                      flux_up(1 + $I_L15831_137, -2 + n_layer + -2 * $I_L15830_166) = $flux_propagated_cloud_S12 * b_fc(1 + $I_L15831_137, -2 + n_layer + -2 * $I_L15830_166) + $flux_propagated_S13 * b_ff(1 + $I_L15831_137, -2 + n_layer + -2 * $I_L15830_166)
15841.                      flux_up_cloud(1 + $I_L15831_137, -2 + n_layer + -2 * $I_L15830_166) = $flux_propagated_cloud_S12 * b_cc(1 + $I_L15831_137, -2 + n_layer + -2 * $I_L15830_166) + $flux_propagated_S13 * b_cf(1 + $I_L15831_137, -2 + n_layer + -2 * $I_L15830_166)
15844.                      $I_L15831_137 = 1 + $I_L15831_137
15831.                      if ( $I_L15831_137 >= n_profile ) exit
15831.                   enddo
15845.                   $I_L15830_166 = 1 + $I_L15830_166
15844.                   if ( $I_L15830_166 >= _rsh( 1 + n_layer + -n_cloud_top, 1 ) ) exit
15844.                enddo
15845.                $I_L15830_147 = and( 0xfffffffffffffffeUL, 1 + n_layer + -n_cloud_top )
15845.             endif
15830.             if ( $I_L15830_147 < 1 + n_layer + -n_cloud_top ) then
15831.                $I_L15831_137 = 0
15831. !dir$ ivdep
15831. !dir$ blocking_size( 256, 256 )
15831.                do
15834.                   $flux_propagated_S13 = s_up_free(1 + $I_L15831_137, n_layer + -$I_L15830_147) + t_free(1 + $I_L15831_137, n_layer + -$I_L15830_147) * flux_up(1 + $I_L15831_137, n_layer + -$I_L15830_147) + flux_down(1 + $I_L15831_137, -1 + n_layer + -$I_L15830_147) * r_free(1 + $I_L15831_137, n_layer + -$I_L15830_147)
15836.                   $flux_propagated_cloud_S12 = s_up_cloud(1 + $I_L15831_137, n_layer + -$I_L15830_147) + t_cloud(1 + $I_L15831_137, n_layer + -$I_L15830_147) * flux_up_cloud(1 + $I_L15831_137, n_layer + -$I_L15830_147) + flux_down_cloud(1 + $I_L15831_137, -1 + n_layer + -$I_L15830_147) * r_cloud(1 + $I_L15831_137, n_layer + -$I_L15830_147)
15839.                   flux_up(1 + $I_L15831_137, -1 + n_layer + -$I_L15830_147) = $flux_propagated_cloud_S12 * b_fc(1 + $I_L15831_137, -1 + n_layer + -$I_L15830_147) + $flux_propagated_S13 * b_ff(1 + $I_L15831_137, -1 + n_layer + -$I_L15830_147)
15841.                   flux_up_cloud(1 + $I_L15831_137, -1 + n_layer + -$I_L15830_147) = $flux_propagated_cloud_S12 * b_cc(1 + $I_L15831_137, -1 + n_layer + -$I_L15830_147) + $flux_propagated_S13 * b_cf(1 + $I_L15831_137, -1 + n_layer + -$I_L15830_147)
15844.                   $I_L15831_137 = 1 + $I_L15831_137
15831.                   if ( $I_L15831_137 >= n_profile ) exit
15831.                enddo
15831.             endif
15831.          endif
15831.       endif
15848.       if ( 1 + -n_cloud_top < 0 ) then
15849.          if ( n_profile > 0 ) then
15848.             $I_L15848_149 = 0
15848.             if ( -3 + n_cloud_top >= 0 ) then
15848.                $I_L15848_168 = 0
15848. !dir$ blocking_size( 1, 1 )
15848.                do
15849.                   $I_L15849_139 = 0
15849. !dir$ ivdep
15849. !dir$ blocking_size( 256, 256 )
15849.                   do
15850.                      flux_up(1 + $I_L15849_139, -2 + n_cloud_top + -2 * $I_L15848_168) = s_up_free(1 + $I_L15849_139, -1 + n_cloud_top + -2 * $I_L15848_168) + r_free(1 + $I_L15849_139, -1 + n_cloud_top + -2 * $I_L15848_168) * flux_down(1 + $I_L15849_139, -2 + n_cloud_top + -2 * $I_L15848_168) + flux_up(1 + $I_L15849_139, -1 + n_cloud_top + -2 * $I_L15848_168) * t_free(1 + $I_L15849_139, -1 + n_cloud_top + -2 * $I_L15848_168)
15850.                      flux_up(1 + $I_L15849_139, -3 + n_cloud_top + -2 * $I_L15848_168) = s_up_free(1 + $I_L15849_139, -2 + n_cloud_top + -2 * $I_L15848_168) + flux_up(1 + $I_L15849_139, -2 + n_cloud_top + -2 * $I_L15848_168) * t_free(1 + $I_L15849_139, -2 + n_cloud_top + -2 * $I_L15848_168) + flux_down(1 + $I_L15849_139, -3 + n_cloud_top + -2 * $I_L15848_168) * r_free(1 + $I_L15849_139, -2 + n_cloud_top + -2 * $I_L15848_168)
15852.                      $I_L15849_139 = 1 + $I_L15849_139
15849.                      if ( $I_L15849_139 >= n_profile ) exit
15849.                   enddo
15853.                   $I_L15848_168 = 1 + $I_L15848_168
15852.                   if ( $I_L15848_168 >= _rsh( -1 + n_cloud_top, 1 ) ) exit
15852.                enddo
15853.                $I_L15848_149 = and( 0xfffffffffffffffeUL, -1 + n_cloud_top )
15853.             endif
15848.             if ( $I_L15848_149 < -1 + n_cloud_top ) then
15849.                $I_L15849_139 = 0
15849. !dir$ ivdep
15849. !dir$ blocking_size( 256, 256 )
15849.                do
15850.                   flux_up(1 + $I_L15849_139, -2 + n_cloud_top + -$I_L15848_149) = s_up_free(1 + $I_L15849_139, -1 + n_cloud_top + -$I_L15848_149) + t_free(1 + $I_L15849_139, -1 + n_cloud_top + -$I_L15848_149) * flux_up(1 + $I_L15849_139, -1 + n_cloud_top + -$I_L15848_149) + flux_down(1 + $I_L15849_139, -2 + n_cloud_top + -$I_L15848_149) * r_free(1 + $I_L15849_139, -1 + n_cloud_top + -$I_L15848_149)
15852.                   $I_L15849_139 = 1 + $I_L15849_139
15849.                   if ( $I_L15849_139 >= n_profile ) exit
15849.                enddo
15849.             endif
15849.          endif
15849.       endif
15858.       if ( -2 + n_cloud_top >= 0 ) then
15859.          if ( n_profile > 0 ) then
15858.             $I_L15858_151 = 0
15858.             do
15859.                $I_L15859_141 = 0
15859. !dir$ ivdep
15859.                do
15860.                   flux_diffuse(1 + $I_L15859_141, 1 + 2 * $I_L15858_151) = flux_up(1 + $I_L15859_141, $I_L15858_151)
15861.                   flux_diffuse(1 + $I_L15859_141, 2 + 2 * $I_L15858_151) = flux_down(1 + $I_L15859_141, $I_L15858_151)
15862.                   $I_L15859_141 = 1 + $I_L15859_141
15859.                   if ( $I_L15859_141 >= n_profile ) exit
15859.                enddo
15863.                $I_L15858_151 = 1 + $I_L15858_151
15862.                if ( $I_L15858_151 >= -1 + n_cloud_top ) exit
15862.             enddo
15862.          endif
15862.       endif
15864.       if ( 1 + n_layer + -n_cloud_top >= 0 ) then
15865.          if ( n_profile > 0 ) then
15864.             $I_L15864_153 = 0
15864.             do
15865.                $I_L15865_143 = 0
15865. !dir$ ivdep
15865.                do
15866.                   flux_diffuse(1 + $I_L15865_143, -1 + 2 * n_cloud_top + 2 * $I_L15864_153) = flux_up(1 + $I_L15865_143, -1 + n_cloud_top + $I_L15864_153) + flux_up_cloud(1 + $I_L15865_143, -1 + n_cloud_top + $I_L15864_153)
15867.                   flux_diffuse(1 + $I_L15865_143, 2 * n_cloud_top + 2 * $I_L15864_153) = flux_down(1 + $I_L15865_143, -1 + n_cloud_top + $I_L15864_153) + flux_down_cloud(1 + $I_L15865_143, -1 + n_cloud_top + $I_L15864_153)
15869.                   $I_L15865_143 = 1 + $I_L15865_143
15865.                   if ( $I_L15865_143 >= n_profile ) exit
15865.                enddo
15870.                $I_L15864_153 = 1 + $I_L15864_153
15869.                if ( $I_L15864_153 >= 2 + n_layer + -n_cloud_top ) exit
15869.             enddo
15869.          endif
15869.       endif
15653.       _free( t$2253 )
15875.       return
15875.       end
15875.       
15898.       
15898.       subroutine mix_column( ierr, n_profile, n_layer, k_clr, i_2stream, i_solver, l_scale_solar, adjust_solar_ke, isolir, diff_planck, l_ir_source_quad, diff_planck_2, flux_inc_down, flux_inc_direct, sec_00, diffuse_albedo, direct_albedo, d_planck_flux_surface, ss_prop, n_cloud_top, n_cloud_type, frac_cloud, w_free, w_cloud, cloud_overlap, flux_direct, flux_total, l_clear, i_solver_clear, flux_direct_clear, flux_total_clear, nd_profile, nd_layer, nd_layer_clr, id_ct, nd_max_order, nd_source_coeff, nd_cloud_type, nd_overlap_coeff )
15898.       t$596 = nd_profile
15898.       t$598 = nd_layer
16030.       t$2271 = _zla( 0, nd_profile )
15898.       t$2272 = _zla( 0, nd_profile )
16030.       t$2273 = _zla( 0, nd_layer )
15898.       t$2274 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 2600.       if ( t$27 == 0 ) then
 2600.          t$2279(1) = 4
 2600.          t$2280(1) = 0
 2600.          t$2281(1) = 0
 2600.          t$2276(1) = int( loc( t$26 ), 8 )
 2600.          t$2277(1) = 0
 2600.          t$2278(1) = int( loc( t$2275 ), 8 )
 2600.          t$27 = __get_dynamic_type( 2, t$2276(1), t$2279(1), 1, t$2277(1), t$2278(1), t$2280(1), t$2281(1) )
 2600.       endif
15898.       t$597 = id_ct
15898.       t$599 = nd_cloud_type
15898.       t$2283 = 1 + nd_layer + -id_ct
16010.       t$2284 = max( 0, 1 + nd_layer + -id_ct )
15898.       t$2285 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
16010.       t$2286 = max( 0, nd_cloud_type )
15898.       t$2287 = _zla( 0, nd_profile ) * max( 0, nd_cloud_type ) * max( 0, 1 + nd_layer + -id_ct )
15898.       t$2288 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
15898.       t$600 = ( -1 + id_ct )
15898.       t$601 = nd_overlap_coeff
15898.       t$2289 = 2 + nd_layer + -id_ct
16012.       t$2290 = max( 0, 2 + nd_layer + -id_ct )
15898.       t$2291 = _zla( 0, nd_profile ) * max( 0, 2 + nd_layer + -id_ct )
16012.       t$2292 = max( 0, nd_overlap_coeff )
15898.       t$2293 = _zla( 0, nd_profile ) * max( 0, nd_overlap_coeff ) * max( 0, 2 + nd_layer + -id_ct )
15898.       t$2294 = 1 + nd_layer
16037.       t$2295 = max( 0, 1 + nd_layer )
15898.       t$2296 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer )
15898.       t$602 = ( 2 + 2 * nd_layer )
16039.       t$2297 = max( 0, ( 2 + 2 * nd_layer ) )
15898.       t$2298 = _zla( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
16130.       t$2301 = 8 * _zla( 0, nd_profile )
16113.       t$2302 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) ) / 8
16113.       t$2304 = t$2302 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16094.       t$2305 = 8 * ( 7 + t$2302 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
16094.       t$2307 = t$2305 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
15898.       t$603 = nd_source_coeff
15898.       t$2308 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16117.       t$2309 = max( 0, nd_source_coeff )
15898.       t$2310 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_source_coeff )
16117.       t$2311 = 8 * ( 7 + t$2305 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
16117.       t$2313 = t$2311 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_source_coeff )
16098.       t$2314 = 8 * ( 7 + t$2311 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_source_coeff ) ) / 8
16098.       t$2316 = t$2314 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_source_coeff )
16128.       t$2317 = 8 * ( 7 + t$2314 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_source_coeff ) ) / 8
16128.       t$2319 = t$2317 + 8 * _zla( 0, nd_profile )
16126.       t$2320 = 8 * ( 7 + t$2317 + 8 * _zla( 0, nd_profile ) ) / 8
16126.       t$2322 = t$2320 + 8 * _zla( 0, nd_profile )
16104.       t$2323 = 8 * ( 7 + t$2320 + 8 * _zla( 0, nd_profile ) ) / 8
16104.       t$2325 = t$2323 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16119.       t$2326 = 8 * ( 7 + t$2323 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
16119.       t$2328 = t$2326 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16100.       t$2329 = 8 * ( 7 + t$2326 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
16100.       t$2331 = t$2329 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16106.       t$2332 = 8 * ( 7 + t$2329 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
16106.       t$2334 = t$2332 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16121.       t$2335 = 8 * ( 7 + t$2332 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
16121.       t$2337 = t$2335 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16102.       t$2338 = 8 * ( 7 + t$2335 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
16102.       t$2340 = t$2338 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16115.       t$2341 = 8 * ( 7 + t$2338 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
16115.       t$2343 = t$2341 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16096.       t$2344 = 8 * ( 7 + t$2341 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
16096.       t$2346 = t$2344 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16111.       t$2347 = 8 * ( 7 + t$2344 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
16111.       t$2349 = t$2347 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16092.       t$2350 = 8 * ( 7 + t$2347 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
16092.       t$2352 = t$2350 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
15898.       t$2299 = int( _alloc( t$2350 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ), 8 )
16130.       t$2300 = t$2299
16113.       t$2303 = t$2302 + t$2299
16094.       t$2306 = t$2305 + t$2299
16117.       t$2312 = t$2311 + t$2299
16098.       t$2315 = t$2314 + t$2299
16128.       t$2318 = t$2317 + t$2299
16126.       t$2321 = t$2320 + t$2299
16104.       t$2324 = t$2323 + t$2299
16119.       t$2327 = t$2326 + t$2299
16100.       t$2330 = t$2329 + t$2299
16106.       t$2333 = t$2332 + t$2299
16121.       t$2336 = t$2335 + t$2299
16102.       t$2339 = t$2338 + t$2299
16115.       t$2342 = t$2341 + t$2299
16096.       t$2345 = t$2344 + t$2299
16111.       t$2348 = t$2347 + t$2299
16092.       t$2351 = t$2350 + t$2299
16159.       n_source_coeff = cvmg( cvmg( 2, 1, l_ir_source_quad ), 2, isolir /= 1 )
16184.       t$7173 = 0
16184.       t$7174 = 0
16184.       t$7175 = 0
16184.       t$7180 = 0
16184.       if ( ( ss_prop%phase_fnc%header%a_contig == 1 .or. -ss_prop%phase_fnc%header%el_len + ss_prop%phase_fnc%dim_1%SM * ss_prop%phase_fnc%header%dv_smunit == 0 .and. -ss_prop%phase_fnc%dim_2%SM + ss_prop%phase_fnc%dim_1%SM * ss_prop%phase_fnc%dim_1%EX == 0 .and. -ss_prop%phase_fnc%dim_3%SM + ss_prop%phase_fnc%dim_2%SM * ss_prop%phase_fnc%dim_2%EX == 0 ) /= .false. ) then
16184. !dir$ suppress (ss_prop%phase_fnc%base_addr)(ss_prop%phase_fnc%dim_1%LB, ss_prop%phase_fnc%dim_2%LB, ss_prop%phase_fnc%dim_3%LB, 0, 0)
16184.          t$7172 = loc( (ss_prop%phase_fnc%base_addr)(ss_prop%phase_fnc%dim_1%LB, ss_prop%phase_fnc%dim_2%LB, ss_prop%phase_fnc%dim_3%LB, 0, 0) )
16184.       else
16184.          t$7173 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_1%EX ) ) )
16184.          t$7174 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_2%EX ) ) )
16184.          t$7175 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_3%EX ) ) )
16184.          t$7180 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_3%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_1%EX ) ) ) ) ) ), 8 )
16181.          call _f90_copy_from_dv( t$7179, ss_prop%phase_fnc )
16184. !dir$ suppress t$7179
16184.          t$7172 = loc( t$7179 )
16184.       endif
16185.       t$7182 = 0
16185.       t$7183 = 0
16185.       t$7187 = 0
16185.       if ( ( ss_prop%omega%header%a_contig == 1 .or. -ss_prop%omega%header%el_len + ss_prop%omega%dim_1%SM * ss_prop%omega%header%dv_smunit == 0 .and. -ss_prop%omega%dim_2%SM + ss_prop%omega%dim_1%SM * ss_prop%omega%dim_1%EX == 0 ) /= .false. ) then
16185. !dir$ suppress (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, 0, 0)
16185.          t$7181 = loc( (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, 0, 0) )
16185.       else
16185.          t$7182 = ( max( 0, ( 1 + -1 + ss_prop%omega%dim_1%EX ) ) )
16185.          t$7183 = ( max( 0, ( 1 + -1 + ss_prop%omega%dim_2%EX ) ) )
16185.          t$7187 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%omega%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%omega%dim_1%EX ) ) ) ) ) ), 8 )
16181.          call _f90_copy_from_dv( t$7186, ss_prop%omega )
16185. !dir$ suppress t$7186
16185.          t$7181 = loc( t$7186 )
16185.       endif
16185.       t$7189 = 0
16185.       t$7190 = 0
16185.       t$7194 = 0
16185.       if ( ( ss_prop%tau%header%a_contig == 1 .or. -ss_prop%tau%header%el_len + ss_prop%tau%dim_1%SM * ss_prop%tau%header%dv_smunit == 0 .and. -ss_prop%tau%dim_2%SM + ss_prop%tau%dim_1%SM * ss_prop%tau%dim_1%EX == 0 ) /= .false. ) then
16185. !dir$ suppress (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, 0, 0)
16185.          t$7188 = loc( (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, 0, 0) )
16185.       else
16185.          t$7189 = ( max( 0, ( 1 + -1 + ss_prop%tau%dim_1%EX ) ) )
16185.          t$7190 = ( max( 0, ( 1 + -1 + ss_prop%tau%dim_2%EX ) ) )
16185.          t$7194 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%tau%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%tau%dim_1%EX ) ) ) ) ) ), 8 )
16181.          call _f90_copy_from_dv( t$7193, ss_prop%tau )
16185. !dir$ suppress t$7193
16185.          t$7188 = loc( t$7193 )
16185.       endif
16181.       call two_coeff( ierr, n_profile, 1, n_layer, i_2stream, l_ir_source_quad, t$7172, t$7181, t$7188, isolir, sec_00(1, 1), trans_free(1, 1), reflect_free(1, 1), trans_0_free(1, 1), source_coeff_free(1, 1, 1), nd_profile, id_ct, nd_layer, 1, nd_layer, nd_source_coeff )
16185.       if ( ( ss_prop%tau%header%a_contig == 1 .or. -ss_prop%tau%header%el_len + ss_prop%tau%dim_1%SM * ss_prop%tau%header%dv_smunit == 0 .and. -ss_prop%tau%dim_2%SM + ss_prop%tau%dim_1%SM * ss_prop%tau%dim_1%EX == 0 ) == .false. ) then
16185.          _free( t$7194 )
16185.       endif
16185.       if ( ( ss_prop%omega%header%a_contig == 1 .or. -ss_prop%omega%header%el_len + ss_prop%omega%dim_1%SM * ss_prop%omega%header%dv_smunit == 0 .and. -ss_prop%omega%dim_2%SM + ss_prop%omega%dim_1%SM * ss_prop%omega%dim_1%EX == 0 ) == .false. ) then
16185.          _free( t$7187 )
16185.       endif
16184.       if ( ( ss_prop%phase_fnc%header%a_contig == 1 .or. -ss_prop%phase_fnc%header%el_len + ss_prop%phase_fnc%dim_1%SM * ss_prop%phase_fnc%header%dv_smunit == 0 .and. -ss_prop%phase_fnc%dim_2%SM + ss_prop%phase_fnc%dim_1%SM * ss_prop%phase_fnc%dim_1%EX == 0 .and. -ss_prop%phase_fnc%dim_3%SM + ss_prop%phase_fnc%dim_2%SM * ss_prop%phase_fnc%dim_2%EX == 0 ) == .false. ) then
16184.          _free( t$7180 )
16184.       endif
16191.       if ( ierr /= 0 ) then
15898.          _free( t$2299 )
15898.       else
16198.          if ( isolir == 2 ) then
16200.             t$582 = nd_profile
16200.             t$583 = nd_layer
16200.             t$584 = nd_source_coeff
16200.             t$2206 = max( 0, nd_profile )
16200.             t$2207 = max( 0, nd_profile )
16200.             t$2208 = max( 0, nd_layer )
16200.             t$2209 = max( 0, nd_profile ) * max( 0, nd_layer )
16200.             t$2210 = max( 0, nd_source_coeff )
16200.             t$2211 = max( 0, nd_profile ) * max( 0, nd_layer ) * max( 0, nd_source_coeff )
16200.             t$2212 = max( 0, nd_profile ) * max( 0, nd_layer )
16200.             if ( l_ir_source_quad /= .false. ) then
16200.                if ( nd_layer > 0 ) then
16200.                   if ( nd_profile > 0 ) then
16200.                      $I_L16200_262 = 0
16200.                      do
16200.                         $I_L16200_226 = 0
16200. !dir$ ivdep
16200.                         do
16200.                            s_up_free(1 + $I_L16200_226, 1 + $I_L16200_262) = diff_planck_2(1 + $I_L16200_226, 1 + $I_L16200_262) * source_coeff_free(1 + $I_L16200_226, 1 + $I_L16200_262, 2) + diff_planck(1 + $I_L16200_226, 1 + $I_L16200_262) * source_coeff_free(1 + $I_L16200_226, 1 + $I_L16200_262, 1)
16200.                            s_down_free(1 + $I_L16200_226, 1 + $I_L16200_262) = -( diff_planck(1 + $I_L16200_226, 1 + $I_L16200_262) * source_coeff_free(1 + $I_L16200_226, 1 + $I_L16200_262, 1) ) + diff_planck_2(1 + $I_L16200_226, 1 + $I_L16200_262) * source_coeff_free(1 + $I_L16200_226, 1 + $I_L16200_262, 2)
16200.                            $I_L16200_226 = 1 + $I_L16200_226
16200.                            if ( $I_L16200_226 >= nd_profile ) exit
16200.                         enddo
16200.                         $I_L16200_262 = 1 + $I_L16200_262
16200.                         if ( $I_L16200_262 >= nd_layer ) exit
16200.                      enddo
16200.                   endif
16200.                endif
16200.             else if ( nd_layer > 0 ) then
16200.                if ( nd_profile > 0 ) then
16200.                   $I_L16200_260 = 0
16200.                   do
16200.                      $I_L16200_224 = 0
16200. !dir$ ivdep
16200.                      do
16200.                         $s_up_free_WR0_R0 = diff_planck(1 + $I_L16200_224, 1 + $I_L16200_260) * source_coeff_free(1 + $I_L16200_224, 1 + $I_L16200_260, 1)
16200.                         s_up_free(1 + $I_L16200_224, 1 + $I_L16200_260) = $s_up_free_WR0_R0
16200.                         s_down_free(1 + $I_L16200_224, 1 + $I_L16200_260) = -$s_up_free_WR0_R0
16200.                         $I_L16200_224 = 1 + $I_L16200_224
16200.                         if ( $I_L16200_224 >= nd_profile ) exit
16200.                      enddo
16200.                      $I_L16200_260 = 1 + $I_L16200_260
16200.                      if ( $I_L16200_260 >= nd_layer ) exit
16200.                   enddo
16200.                endif
16200.             endif
16209.             if ( l_clear /= .false. ) then
16210.                if ( n_layer > 0 ) then
16211.                   if ( n_profile > 0 ) then
16210.                      $I_L16210_264 = 0
16210.                      do
16211.                         $I_L16211_228 = 0
16211. !dir$ ivdep
16211.                         do
16212.                            s_down_clear(1 + $I_L16211_228, 1 + $I_L16210_264) = s_down_free(1 + $I_L16211_228, 1 + $I_L16210_264)
16213.                            s_up_clear(1 + $I_L16211_228, 1 + $I_L16210_264) = s_up_free(1 + $I_L16211_228, 1 + $I_L16210_264)
16214.                            $I_L16211_228 = 1 + $I_L16211_228
16211.                            if ( $I_L16211_228 >= n_profile ) exit
16211.                         enddo
16215.                         $I_L16210_264 = 1 + $I_L16210_264
16214.                         if ( $I_L16210_264 >= n_layer ) exit
16214.                      enddo
16214.                   endif
16214.                endif
16214.             endif
16220.             if ( n_layer + -n_cloud_top >= 0 ) then
16221.                if ( n_profile > 0 ) then
16220.                   $I_L16220_266 = 0
16220.                   do
16221.                      $I_L16221_230 = 0
16221. !dir$ ivdep
16221.                      do
16223.                         s_up_free(1 + $I_L16221_230, n_cloud_top + $I_L16220_266) = w_free(1 + $I_L16221_230, n_cloud_top + $I_L16220_266) * s_up_free(1 + $I_L16221_230, n_cloud_top + $I_L16220_266)
16222.                         s_down_free(1 + $I_L16221_230, n_cloud_top + $I_L16220_266) = s_down_free(1 + $I_L16221_230, n_cloud_top + $I_L16220_266) * w_free(1 + $I_L16221_230, n_cloud_top + $I_L16220_266)
16224.                         $I_L16221_230 = 1 + $I_L16221_230
16221.                         if ( $I_L16221_230 >= n_profile ) exit
16221.                      enddo
16225.                      $I_L16220_266 = 1 + $I_L16220_266
16224.                      if ( $I_L16220_266 >= 1 + n_layer + -n_cloud_top ) exit
16224.                   enddo
16224.                endif
16224.             endif
16224.          endif
16241.          t$7209 = 0
16241.          t$7210 = 0
16241.          t$7211 = 0
16241.          t$7212 = 0
16241.          t$7218 = 0
16241.          if ( ss_prop%phase_fnc%header%a_contig == 1 ) then
16241. !dir$ suppress (ss_prop%phase_fnc%base_addr)(ss_prop%phase_fnc%dim_1%LB, ss_prop%phase_fnc%dim_2%LB, ss_prop%phase_fnc%dim_3%LB, 1, 0)
16241.             t$7208 = loc( (ss_prop%phase_fnc%base_addr)(ss_prop%phase_fnc%dim_1%LB, ss_prop%phase_fnc%dim_2%LB, ss_prop%phase_fnc%dim_3%LB, 1, 0) )
16241.          else
16241.             t$7209 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_1%EX ) ) )
16241.             t$7210 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_2%EX ) ) )
16241.             t$7211 = ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_3%EX ) ) )
16241.             t$7212 = ( max( 0, ( 1 + -2 + ss_prop%phase_fnc%dim_4%LB + ss_prop%phase_fnc%dim_4%EX ) ) )
16241.             t$7218 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_3%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%phase_fnc%dim_1%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -2 + ss_prop%phase_fnc%dim_4%LB + ss_prop%phase_fnc%dim_4%EX ) ) ) ) ) ), 8 )
16237.             call _f90_copy_from_dv( t$7217, ss_prop%phase_fnc )
16241. !dir$ suppress t$7217
16241.             t$7208 = loc( t$7217 )
16241.          endif
16242.          t$7220 = 0
16242.          t$7221 = 0
16242.          t$7222 = 0
16242.          t$7227 = 0
16242.          if ( ss_prop%omega%header%a_contig == 1 ) then
16242. !dir$ suppress (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, 1, 0)
16242.             t$7219 = loc( (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, 1, 0) )
16242.          else
16242.             t$7220 = ( max( 0, ( 1 + -1 + ss_prop%omega%dim_1%EX ) ) )
16242.             t$7221 = ( max( 0, ( 1 + -1 + ss_prop%omega%dim_2%EX ) ) )
16242.             t$7222 = ( max( 0, ( 1 + -2 + ss_prop%omega%dim_3%LB + ss_prop%omega%dim_3%EX ) ) )
16242.             t$7227 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%omega%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%omega%dim_1%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -2 + ss_prop%omega%dim_3%LB + ss_prop%omega%dim_3%EX ) ) ) ) ) ), 8 )
16237.             call _f90_copy_from_dv( t$7226, ss_prop%omega )
16242. !dir$ suppress t$7226
16242.             t$7219 = loc( t$7226 )
16242.          endif
16242.          t$7229 = 0
16242.          t$7230 = 0
16242.          t$7231 = 0
16242.          t$7236 = 0
16242.          if ( ss_prop%tau%header%a_contig == 1 ) then
16242. !dir$ suppress (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, 1, 0)
16242.             t$7228 = loc( (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, 1, 0) )
16242.          else
16242.             t$7229 = ( max( 0, ( 1 + -1 + ss_prop%tau%dim_1%EX ) ) )
16242.             t$7230 = ( max( 0, ( 1 + -1 + ss_prop%tau%dim_2%EX ) ) )
16242.             t$7231 = ( max( 0, ( 1 + -2 + ss_prop%tau%dim_3%LB + ss_prop%tau%dim_3%EX ) ) )
16242.             t$7236 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%tau%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%tau%dim_1%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -2 + ss_prop%tau%dim_3%LB + ss_prop%tau%dim_3%EX ) ) ) ) ) ), 8 )
16237.             call _f90_copy_from_dv( t$7235, ss_prop%tau )
16242. !dir$ suppress t$7235
16242.             t$7228 = loc( t$7235 )
16242.          endif
16237.          call two_coeff_cloud( ierr, n_profile, n_cloud_top, n_layer, i_2stream, l_ir_source_quad, n_source_coeff, n_cloud_type, frac_cloud(1, id_ct, 1), t$7208, t$7219, t$7228, isolir, sec_00(1, 1), trans_cloud(1, 1), reflect_cloud(1, 1), trans_0_cloud(1, 1), source_coeff_cloud(1, 1, 1), nd_profile, nd_layer, id_ct, nd_max_order, nd_source_coeff, nd_cloud_type )
16242.          if ( ss_prop%tau%header%a_contig /= 1 ) then
16242.             _free( t$7236 )
16242.          endif
16242.          if ( ss_prop%omega%header%a_contig /= 1 ) then
16242.             _free( t$7227 )
16242.          endif
16241.          if ( ss_prop%phase_fnc%header%a_contig /= 1 ) then
16241.             _free( t$7218 )
16241.          endif
16249.          if ( ierr /= 0 ) then
15898.             _free( t$2299 )
15898.          else
16252.             if ( isolir == 2 ) then
16254.                t$582 = nd_profile
16254.                t$583 = nd_layer
16254.                t$584 = nd_source_coeff
16254.                t$2206 = max( 0, nd_profile )
16254.                t$2207 = max( 0, nd_profile )
16254.                t$2208 = max( 0, nd_layer )
16254.                t$2209 = max( 0, nd_profile ) * max( 0, nd_layer )
16254.                t$2210 = max( 0, nd_source_coeff )
16254.                t$2211 = max( 0, nd_profile ) * max( 0, nd_layer ) * max( 0, nd_source_coeff )
16254.                t$2212 = max( 0, nd_profile ) * max( 0, nd_layer )
16254.                if ( l_ir_source_quad /= .false. ) then
16254.                   if ( nd_layer > 0 ) then
16254.                      if ( nd_profile > 0 ) then
16254.                         $I_L16254_270 = 0
16254.                         do
16254.                            $I_L16254_234 = 0
16254. !dir$ ivdep
16254.                            do
16254.                               s_up_cloud(1 + $I_L16254_234, 1 + $I_L16254_270) = diff_planck_2(1 + $I_L16254_234, 1 + $I_L16254_270) * source_coeff_cloud(1 + $I_L16254_234, 1 + $I_L16254_270, 2) + diff_planck(1 + $I_L16254_234, 1 + $I_L16254_270) * source_coeff_cloud(1 + $I_L16254_234, 1 + $I_L16254_270, 1)
16254.                               s_down_cloud(1 + $I_L16254_234, 1 + $I_L16254_270) = -( diff_planck(1 + $I_L16254_234, 1 + $I_L16254_270) * source_coeff_cloud(1 + $I_L16254_234, 1 + $I_L16254_270, 1) ) + diff_planck_2(1 + $I_L16254_234, 1 + $I_L16254_270) * source_coeff_cloud(1 + $I_L16254_234, 1 + $I_L16254_270, 2)
16254.                               $I_L16254_234 = 1 + $I_L16254_234
16254.                               if ( $I_L16254_234 >= nd_profile ) exit
16254.                            enddo
16254.                            $I_L16254_270 = 1 + $I_L16254_270
16254.                            if ( $I_L16254_270 >= nd_layer ) exit
16254.                         enddo
16254.                      endif
16254.                   endif
16254.                else if ( nd_layer > 0 ) then
16254.                   if ( nd_profile > 0 ) then
16254.                      $I_L16254_268 = 0
16254.                      do
16254.                         $I_L16254_232 = 0
16254. !dir$ ivdep
16254.                         do
16254.                            $s_up_cloud_WR0_R1 = diff_planck(1 + $I_L16254_232, 1 + $I_L16254_268) * source_coeff_cloud(1 + $I_L16254_232, 1 + $I_L16254_268, 1)
16254.                            s_up_cloud(1 + $I_L16254_232, 1 + $I_L16254_268) = $s_up_cloud_WR0_R1
16254.                            s_down_cloud(1 + $I_L16254_232, 1 + $I_L16254_268) = -$s_up_cloud_WR0_R1
16254.                            $I_L16254_232 = 1 + $I_L16254_232
16254.                            if ( $I_L16254_232 >= nd_profile ) exit
16254.                         enddo
16254.                         $I_L16254_268 = 1 + $I_L16254_268
16254.                         if ( $I_L16254_268 >= nd_layer ) exit
16254.                      enddo
16254.                   endif
16254.                endif
16261.                if ( n_layer + -n_cloud_top >= 0 ) then
16262.                   if ( n_profile > 0 ) then
16261.                      $I_L16261_272 = 0
16261.                      do
16262.                         $I_L16262_236 = 0
16262. !dir$ ivdep
16262.                         do
16264.                            s_up_cloud(1 + $I_L16262_236, n_cloud_top + $I_L16261_272) = w_cloud(1 + $I_L16262_236, n_cloud_top + $I_L16261_272) * s_up_cloud(1 + $I_L16262_236, n_cloud_top + $I_L16261_272)
16263.                            s_down_cloud(1 + $I_L16262_236, n_cloud_top + $I_L16261_272) = s_down_cloud(1 + $I_L16262_236, n_cloud_top + $I_L16261_272) * w_cloud(1 + $I_L16262_236, n_cloud_top + $I_L16261_272)
16265.                            $I_L16262_236 = 1 + $I_L16262_236
16262.                            if ( $I_L16262_236 >= n_profile ) exit
16262.                         enddo
16266.                         $I_L16261_272 = 1 + $I_L16261_272
16265.                         if ( $I_L16261_272 >= 1 + n_layer + -n_cloud_top ) exit
16265.                      enddo
16265.                   endif
16265.                endif
16265.             endif
16274.             if ( isolir == 1 ) then
16276.                tm$1594 = loc( cloud_overlap(1, -1 + id_ct, -2 + 3 * k_clr) )
16276.                g_ff = _copyin( cloud_overlap(1, -1 + id_ct, -2 + 3 * k_clr) )
16276.                tm$1596 = loc( cloud_overlap(1, -1 + id_ct, 4 + -k_clr) )
16276.                g_fc = _copyin( cloud_overlap(1, -1 + id_ct, 4 + -k_clr) )
16276.                tm$1598 = loc( cloud_overlap(1, -1 + id_ct, 1 + k_clr) )
16276.                g_cf = _copyin( cloud_overlap(1, -1 + id_ct, 1 + k_clr) )
16276.                tm$1600 = loc( cloud_overlap(1, -1 + id_ct, 7 + -3 * k_clr) )
16276.                g_cc = _copyin( cloud_overlap(1, -1 + id_ct, 7 + -3 * k_clr) )
16276.                t$606 = nd_profile
16276.                t$2353 = max( 0, nd_profile )
16276.                t$607 = nd_layer
16276.                t$2354 = max( 0, nd_profile )
16276.                t$2355 = max( 0, nd_layer )
16276.                t$2356 = max( 0, nd_profile ) * max( 0, nd_layer )
16276.                t$608 = nd_source_coeff
16276.                t$2357 = max( 0, nd_profile ) * max( 0, nd_layer )
16276.                t$2358 = max( 0, nd_source_coeff )
16276.                t$2359 = max( 0, nd_profile ) * max( 0, nd_layer ) * max( 0, nd_source_coeff )
16276.                t$609 = ( -1 + id_ct )
16276.                t$2360 = 2 + nd_layer + -id_ct
16276.                t$2361 = max( 0, 2 + nd_layer + -id_ct )
16276.                t$2362 = max( 0, nd_profile ) * max( 0, 2 + nd_layer + -id_ct )
16276.                t$2363 = 1 + nd_layer
16276.                t$2364 = max( 0, 1 + nd_layer )
16276.                t$2365 = max( 0, nd_profile ) * max( 0, 1 + nd_layer )
16276.                t$2368 = 8 * max( 0, nd_profile )
16276.                t$2369 = 8 * ( 7 + 8 * max( 0, nd_profile ) ) / 8
16276.                t$2371 = t$2369 + 8 * max( 0, nd_profile )
16276.                t$2372 = 8 * ( 7 + t$2369 + 8 * max( 0, nd_profile ) ) / 8
16276.                t$2374 = t$2372 + 8 * max( 0, nd_profile )
16276.                t$2375 = 8 * ( 7 + t$2372 + 8 * max( 0, nd_profile ) ) / 8
16276.                t$2377 = t$2375 + 8 * max( 0, nd_profile )
16276.                t$2366 = int( _alloc( t$2375 + 8 * max( 0, nd_profile ) ), 8 )
16276.                t$2367 = t$2366
16276.                t$2370 = t$2369 + t$2366
16276.                t$2373 = t$2372 + t$2366
16276.                t$2376 = t$2375 + t$2366
16276.                if ( n_profile > 0 ) then
16276.                   $I_L16276_238 = 0
16276. !dir$ ivdep
16276.                   do
16276.                      flux_direct(1 + $I_L16276_238, 0) = flux_inc_direct(1 + $I_L16276_238)
16276.                      $I_L16276_238 = 1 + $I_L16276_238
16276.                      if ( $I_L16276_238 >= n_profile ) exit
16276.                   enddo
16276.                endif
16276.                if ( l_scale_solar /= .false. ) then
16276.                   if ( -1 + n_cloud_top > 0 ) then
16276.                      if ( n_profile > 0 ) then
16276.                         $I_L16276_276 = 0
16276.                         if ( -3 + n_cloud_top >= 0 ) then
16276.                            $I_L16276_280 = 0
16276. !dir$ blocking_size( 1, 1 )
16276.                            do
16276.                               $I_L16276_242 = 0
16276. !dir$ ivdep
16276. !dir$ blocking_size( 256, 256 )
16276.                               do
16276.                                  $flux_direct_WR0_R2 = trans_0_free(1 + $I_L16276_242, 1 + 2 * $I_L16276_280) * adjust_solar_ke(1 + $I_L16276_242, 1 + 2 * $I_L16276_280) * flux_direct(1 + $I_L16276_242, 2 * $I_L16276_280)
16276.                                  flux_direct(1 + $I_L16276_242, 1 + 2 * $I_L16276_280) = $flux_direct_WR0_R2
16276.                                  s_up_free(1 + $I_L16276_242, 1 + 2 * $I_L16276_280) = flux_direct(1 + $I_L16276_242, 2 * $I_L16276_280) * source_coeff_free(1 + $I_L16276_242, 1 + 2 * $I_L16276_280, 1)
16276.                                  s_down_free(1 + $I_L16276_242, 1 + 2 * $I_L16276_280) = $flux_direct_WR0_R2 + flux_direct(1 + $I_L16276_242, 2 * $I_L16276_280) * ( source_coeff_free(1 + $I_L16276_242, 1 + 2 * $I_L16276_280, 2) + -trans_0_free(1 + $I_L16276_242, 1 + 2 * $I_L16276_280) )
16276.                                  $flux_direct_WR0_R2 = trans_0_free(1 + $I_L16276_242, 2 + 2 * $I_L16276_280) * $flux_direct_WR0_R2 * adjust_solar_ke(1 + $I_L16276_242, 2 + 2 * $I_L16276_280)
16276.                                  flux_direct(1 + $I_L16276_242, 2 + 2 * $I_L16276_280) = $flux_direct_WR0_R2
16276.                                  s_up_free(1 + $I_L16276_242, 2 + 2 * $I_L16276_280) = flux_direct(1 + $I_L16276_242, 1 + 2 * $I_L16276_280) * source_coeff_free(1 + $I_L16276_242, 2 + 2 * $I_L16276_280, 1)
16276.                                  s_down_free(1 + $I_L16276_242, 2 + 2 * $I_L16276_280) = $flux_direct_WR0_R2 + flux_direct(1 + $I_L16276_242, 1 + 2 * $I_L16276_280) * ( source_coeff_free(1 + $I_L16276_242, 2 + 2 * $I_L16276_280, 2) + -trans_0_free(1 + $I_L16276_242, 2 + 2 * $I_L16276_280) )
16276.                                  $I_L16276_242 = 1 + $I_L16276_242
16276.                                  if ( $I_L16276_242 >= n_profile ) exit
16276.                               enddo
16276.                               $I_L16276_280 = 1 + $I_L16276_280
16276.                               if ( $I_L16276_280 >= _rsh( -1 + n_cloud_top, 1 ) ) exit
16276.                            enddo
16276.                            $I_L16276_276 = and( 0xfffffffffffffffeUL, -1 + n_cloud_top )
16276.                         endif
16276.                         if ( $I_L16276_276 < -1 + n_cloud_top ) then
16276.                            $I_L16276_242 = 0
16276. !dir$ ivdep
16276. !dir$ blocking_size( 256, 256 )
16276.                            do
16276.                               $flux_direct_WR0_R2 = trans_0_free(1 + $I_L16276_242, 1 + $I_L16276_276) * flux_direct(1 + $I_L16276_242, $I_L16276_276) * adjust_solar_ke(1 + $I_L16276_242, 1 + $I_L16276_276)
16276.                               flux_direct(1 + $I_L16276_242, 1 + $I_L16276_276) = $flux_direct_WR0_R2
16276.                               s_up_free(1 + $I_L16276_242, 1 + $I_L16276_276) = flux_direct(1 + $I_L16276_242, $I_L16276_276) * source_coeff_free(1 + $I_L16276_242, 1 + $I_L16276_276, 1)
16276.                               s_down_free(1 + $I_L16276_242, 1 + $I_L16276_276) = $flux_direct_WR0_R2 + flux_direct(1 + $I_L16276_242, $I_L16276_276) * ( source_coeff_free(1 + $I_L16276_242, 1 + $I_L16276_276, 2) + -trans_0_free(1 + $I_L16276_242, 1 + $I_L16276_276) )
16276.                               $I_L16276_242 = 1 + $I_L16276_242
16276.                               if ( $I_L16276_242 >= n_profile ) exit
16276.                            enddo
16276.                         endif
16276.                      endif
16276.                   endif
16276.                else if ( -1 + n_cloud_top > 0 ) then
16276.                   if ( n_profile > 0 ) then
16276.                      $I_L16276_274 = 0
16276.                      if ( -3 + n_cloud_top >= 0 ) then
16276.                         $I_L16276_282 = 0
16276. !dir$ blocking_size( 1, 1 )
16276.                         do
16276.                            $I_L16276_240 = 0
16276. !dir$ ivdep
16276. !dir$ blocking_size( 256, 256 )
16276.                            do
16276.                               flux_direct(1 + $I_L16276_240, 1 + 2 * $I_L16276_282) = trans_0_free(1 + $I_L16276_240, 1 + 2 * $I_L16276_282) * flux_direct(1 + $I_L16276_240, 2 * $I_L16276_282)
16276.                               s_up_free(1 + $I_L16276_240, 1 + 2 * $I_L16276_282) = flux_direct(1 + $I_L16276_240, 2 * $I_L16276_282) * source_coeff_free(1 + $I_L16276_240, 1 + 2 * $I_L16276_282, 1)
16276.                               s_down_free(1 + $I_L16276_240, 1 + 2 * $I_L16276_282) = flux_direct(1 + $I_L16276_240, 2 * $I_L16276_282) * source_coeff_free(1 + $I_L16276_240, 1 + 2 * $I_L16276_282, 2)
16276.                               flux_direct(1 + $I_L16276_240, 2 + 2 * $I_L16276_282) = flux_direct(1 + $I_L16276_240, 1 + 2 * $I_L16276_282) * trans_0_free(1 + $I_L16276_240, 2 + 2 * $I_L16276_282)
16276.                               s_up_free(1 + $I_L16276_240, 2 + 2 * $I_L16276_282) = flux_direct(1 + $I_L16276_240, 1 + 2 * $I_L16276_282) * source_coeff_free(1 + $I_L16276_240, 2 + 2 * $I_L16276_282, 1)
16276.                               s_down_free(1 + $I_L16276_240, 2 + 2 * $I_L16276_282) = flux_direct(1 + $I_L16276_240, 1 + 2 * $I_L16276_282) * source_coeff_free(1 + $I_L16276_240, 2 + 2 * $I_L16276_282, 2)
16276.                               $I_L16276_240 = 1 + $I_L16276_240
16276.                               if ( $I_L16276_240 >= n_profile ) exit
16276.                            enddo
16276.                            $I_L16276_282 = 1 + $I_L16276_282
16276.                            if ( $I_L16276_282 >= _rsh( -1 + n_cloud_top, 1 ) ) exit
16276.                         enddo
16276.                         $I_L16276_274 = and( 0xfffffffffffffffeUL, -1 + n_cloud_top )
16276.                      endif
16276.                      if ( $I_L16276_274 < -1 + n_cloud_top ) then
16276.                         $I_L16276_240 = 0
16276. !dir$ ivdep
16276. !dir$ blocking_size( 256, 256 )
16276.                         do
16276.                            flux_direct(1 + $I_L16276_240, 1 + $I_L16276_274) = flux_direct(1 + $I_L16276_240, $I_L16276_274) * trans_0_free(1 + $I_L16276_240, 1 + $I_L16276_274)
16276.                            s_up_free(1 + $I_L16276_240, 1 + $I_L16276_274) = flux_direct(1 + $I_L16276_240, $I_L16276_274) * source_coeff_free(1 + $I_L16276_240, 1 + $I_L16276_274, 1)
16276.                            s_down_free(1 + $I_L16276_240, 1 + $I_L16276_274) = flux_direct(1 + $I_L16276_240, $I_L16276_274) * source_coeff_free(1 + $I_L16276_240, 1 + $I_L16276_274, 2)
16276.                            $I_L16276_240 = 1 + $I_L16276_240
16276.                            if ( $I_L16276_240 >= n_profile ) exit
16276.                         enddo
16276.                      endif
16276.                   endif
16276.                endif
16276.                if ( n_profile > 0 ) then
16276.                   $I_L16276_244 = 0
16276. !dir$ ivdep
16276.                   do
16276.                      solar_base_free(1 + $I_L16276_244) = flux_direct(1 + $I_L16276_244, -1 + n_cloud_top)
16276.                      solar_base_cloud(1 + $I_L16276_244) = 0.0
16276.                      $I_L16276_244 = 1 + $I_L16276_244
16276.                      if ( $I_L16276_244 >= n_profile ) exit
16276.                   enddo
16276.                endif
16276.                if ( n_layer + -n_cloud_top >= 0 ) then
16276.                   $I_L16276_278 = 0
16276.                   do
16276.                      if ( n_profile > 0 ) then
16276.                         $I_L16276_246 = 0
16276. !dir$ ivdep
16276.                         do
16276.                            solar_top_cloud(1 + $I_L16276_246) = solar_base_cloud(1 + $I_L16276_246) * g_cc(1 + $I_L16276_246, -1 + n_cloud_top + $I_L16276_278) + solar_base_free(1 + $I_L16276_246) * g_fc(1 + $I_L16276_246, -1 + n_cloud_top + $I_L16276_278)
16276.                            solar_top_free(1 + $I_L16276_246) = solar_base_free(1 + $I_L16276_246) * g_ff(1 + $I_L16276_246, -1 + n_cloud_top + $I_L16276_278) + solar_base_cloud(1 + $I_L16276_246) * g_cf(1 + $I_L16276_246, -1 + n_cloud_top + $I_L16276_278)
16276.                            $I_L16276_246 = 1 + $I_L16276_246
16276.                            if ( $I_L16276_246 >= n_profile ) exit
16276.                         enddo
16276.                      endif
16276.                      if ( l_scale_solar /= .false. ) then
16276.                         if ( n_profile > 0 ) then
16276.                            $I_L16276_248 = 0
16276. !dir$ ivdep
16276.                            do
16276.                               $solar_base_free_WR0_R3 = trans_0_free(1 + $I_L16276_248, n_cloud_top + $I_L16276_278) * solar_top_free(1 + $I_L16276_248) * adjust_solar_ke(1 + $I_L16276_248, n_cloud_top + $I_L16276_278)
16276.                               solar_base_free(1 + $I_L16276_248) = $solar_base_free_WR0_R3
16276.                               $solar_base_cloud_WR0_R4 = trans_0_cloud(1 + $I_L16276_248, n_cloud_top + $I_L16276_278) * solar_top_cloud(1 + $I_L16276_248) * adjust_solar_ke(1 + $I_L16276_248, n_cloud_top + $I_L16276_278)
16276.                               solar_base_cloud(1 + $I_L16276_248) = $solar_base_cloud_WR0_R4
16276.                               s_up_free(1 + $I_L16276_248, n_cloud_top + $I_L16276_278) = solar_top_free(1 + $I_L16276_248) * source_coeff_free(1 + $I_L16276_248, n_cloud_top + $I_L16276_278, 1)
16276.                               s_down_free(1 + $I_L16276_248, n_cloud_top + $I_L16276_278) = $solar_base_free_WR0_R3 + solar_top_free(1 + $I_L16276_248) * ( source_coeff_free(1 + $I_L16276_248, n_cloud_top + $I_L16276_278, 2) + -trans_0_free(1 + $I_L16276_248, n_cloud_top + $I_L16276_278) )
16276.                               s_up_cloud(1 + $I_L16276_248, n_cloud_top + $I_L16276_278) = solar_top_cloud(1 + $I_L16276_248) * source_coeff_cloud(1 + $I_L16276_248, n_cloud_top + $I_L16276_278, 1)
16276.                               s_down_cloud(1 + $I_L16276_248, n_cloud_top + $I_L16276_278) = $solar_base_cloud_WR0_R4 + solar_top_cloud(1 + $I_L16276_248) * ( source_coeff_cloud(1 + $I_L16276_248, n_cloud_top + $I_L16276_278, 2) + -trans_0_cloud(1 + $I_L16276_248, n_cloud_top + $I_L16276_278) )
16276.                               $I_L16276_248 = 1 + $I_L16276_248
16276.                               if ( $I_L16276_248 >= n_profile ) exit
16276.                            enddo
16276.                         endif
16276.                      else if ( n_profile > 0 ) then
16276.                         $I_L16276_250 = 0
16276. !dir$ ivdep
16276.                         do
16276.                            solar_base_free(1 + $I_L16276_250) = solar_top_free(1 + $I_L16276_250) * trans_0_free(1 + $I_L16276_250, n_cloud_top + $I_L16276_278)
16276.                            solar_base_cloud(1 + $I_L16276_250) = solar_top_cloud(1 + $I_L16276_250) * trans_0_cloud(1 + $I_L16276_250, n_cloud_top + $I_L16276_278)
16276.                            s_up_free(1 + $I_L16276_250, n_cloud_top + $I_L16276_278) = solar_top_free(1 + $I_L16276_250) * source_coeff_free(1 + $I_L16276_250, n_cloud_top + $I_L16276_278, 1)
16276.                            s_down_free(1 + $I_L16276_250, n_cloud_top + $I_L16276_278) = solar_top_free(1 + $I_L16276_250) * source_coeff_free(1 + $I_L16276_250, n_cloud_top + $I_L16276_278, 2)
16276.                            s_up_cloud(1 + $I_L16276_250, n_cloud_top + $I_L16276_278) = solar_top_cloud(1 + $I_L16276_250) * source_coeff_cloud(1 + $I_L16276_250, n_cloud_top + $I_L16276_278, 1)
16276.                            s_down_cloud(1 + $I_L16276_250, n_cloud_top + $I_L16276_278) = solar_top_cloud(1 + $I_L16276_250) * source_coeff_cloud(1 + $I_L16276_250, n_cloud_top + $I_L16276_278, 2)
16276.                            $I_L16276_250 = 1 + $I_L16276_250
16276.                            if ( $I_L16276_250 >= n_profile ) exit
16276.                         enddo
16276.                      endif
16276.                      if ( n_profile > 0 ) then
16276.                         $I_L16276_252 = 0
16276. !dir$ ivdep
16276.                         do
16276.                            flux_direct(1 + $I_L16276_252, n_cloud_top + $I_L16276_278) = solar_base_free(1 + $I_L16276_252) + solar_base_cloud(1 + $I_L16276_252)
16276.                            $I_L16276_252 = 1 + $I_L16276_252
16276.                            if ( $I_L16276_252 >= n_profile ) exit
16276.                         enddo
16276.                      endif
16276.                      $I_L16276_278 = 1 + $I_L16276_278
16276.                      if ( $I_L16276_278 >= 1 + n_layer + -n_cloud_top ) exit
16276.                   enddo
16276.                endif
16276.                if ( n_profile > 0 ) then
16276.                   $I_L16276_254 = 0
16276. !dir$ ivdep
16276.                   do
16276.                      flux_direct_ground_cloud(1 + $I_L16276_254) = solar_base_cloud(1 + $I_L16276_254)
16276.                      $I_L16276_254 = 1 + $I_L16276_254
16276.                      if ( $I_L16276_254 >= n_profile ) exit
16276.                   enddo
16276.                endif
16276.                _free( t$2366 )
16276.                cloud_overlap(1, -1 + id_ct, 7 + -3 * k_clr) = _copyout( g_cc )
16276.                cloud_overlap(1, -1 + id_ct, 1 + k_clr) = _copyout( g_cf )
16276.                cloud_overlap(1, -1 + id_ct, 4 + -k_clr) = _copyout( g_fc )
16276.                cloud_overlap(1, -1 + id_ct, -2 + 3 * k_clr) = _copyout( g_ff )
16276.             endif
16297.             if ( i_solver == 16 ) then
16291.                goto 10
16291.                goto 20
16319.             else if ( i_solver == 11 ) then
16319.    10          continue
16322.                if ( isolir == 1 ) then
16323.                   if ( n_profile > 0 ) then
16323.                      $I_L16323_256 = 0
16323. !dir$ ivdep
16323.                      do
16324.                         source_ground_free(1 + $I_L16323_256) = ( flux_direct(1 + $I_L16323_256, n_layer) + -flux_direct_ground_cloud(1 + $I_L16323_256) ) * ( direct_albedo(1 + $I_L16323_256) + -diffuse_albedo(1 + $I_L16323_256) )
16328.                         source_ground_cloud(1 + $I_L16323_256) = flux_direct_ground_cloud(1 + $I_L16323_256) * ( direct_albedo(1 + $I_L16323_256) + -diffuse_albedo(1 + $I_L16323_256) )
16331.                         $I_L16323_256 = 1 + $I_L16323_256
16323.                         if ( $I_L16323_256 >= n_profile ) exit
16323.                      enddo
16323.                   endif
16332.                else if ( n_profile > 0 ) then
16333.                   $I_L16333_258 = 0
16333. !dir$ ivdep
16333.                   do
16334.                      source_ground_free(1 + $I_L16333_258) = d_planck_flux_surface(1 + $I_L16333_258) * cloud_overlap(1 + $I_L16333_258, n_layer, 2 + 3 * k_clr) * ( 1.0 + -diffuse_albedo(1 + $I_L16333_258) )
16337.                      source_ground_cloud(1 + $I_L16333_258) = cloud_overlap(1 + $I_L16333_258, n_layer, 8 + -k_clr) * d_planck_flux_surface(1 + $I_L16333_258) * ( 1.0 + -diffuse_albedo(1 + $I_L16333_258) )
16340.                      $I_L16333_258 = 1 + $I_L16333_258
16333.                      if ( $I_L16333_258 >= n_profile ) exit
16333.                   enddo
16333.                endif
16343.                if ( i_solver == 11 ) then
16344.                   call solver_mix_direct( n_profile, n_layer, n_cloud_top, trans_free(1, 1), reflect_free(1, 1), s_down_free(1, 1), s_up_free(1, 1), trans_cloud(1, 1), reflect_cloud(1, 1), s_down_cloud(1, 1), s_up_cloud(1, 1), cloud_overlap(1, -1 + id_ct, -2 + 3 * k_clr), cloud_overlap(1, -1 + id_ct, 4 + -k_clr), cloud_overlap(1, -1 + id_ct, 1 + k_clr), cloud_overlap(1, -1 + id_ct, 7 + -3 * k_clr), cloud_overlap(1, -1 + id_ct, 2 + 3 * k_clr), cloud_overlap(1, -1 + id_ct, 5 + k_clr), cloud_overlap(1, -1 + id_ct, 8 + -k_clr), cloud_overlap(1, -1 + id_ct, 11 + -3 * k_clr), flux_inc_down(1), source_ground_free(1), source_ground_cloud(1), diffuse_albedo(1), flux_total(1, 1), nd_profile, nd_layer, id_ct )
16363.                else if ( i_solver == 16 ) then
16364.                   call solver_mix_direct_hogan( n_profile, n_layer, n_cloud_top, trans_free(1, 1), reflect_free(1, 1), s_down_free(1, 1), s_up_free(1, 1), trans_cloud(1, 1), reflect_cloud(1, 1), s_down_cloud(1, 1), s_up_cloud(1, 1), cloud_overlap(1, -1 + id_ct, -2 + 3 * k_clr), cloud_overlap(1, -1 + id_ct, 4 + -k_clr), cloud_overlap(1, -1 + id_ct, 1 + k_clr), cloud_overlap(1, -1 + id_ct, 7 + -3 * k_clr), cloud_overlap(1, -1 + id_ct, 2 + 3 * k_clr), cloud_overlap(1, -1 + id_ct, 5 + k_clr), cloud_overlap(1, -1 + id_ct, 8 + -k_clr), cloud_overlap(1, -1 + id_ct, 11 + -3 * k_clr), flux_inc_down(1), source_ground_free(1), source_ground_cloud(1), diffuse_albedo(1), flux_total(1, 1), nd_profile, nd_layer, id_ct )
16364.                endif
16364.                goto 20
16364.             else if ( i_solver == 9 ) then
16301.                call mix_app_scat( n_profile, n_layer, n_cloud_top, trans_free(1, 1), reflect_free(1, 1), s_down_free(1, 1), s_up_free(1, 1), trans_cloud(1, 1), reflect_cloud(1, 1), s_down_cloud(1, 1), s_up_cloud(1, 1), cloud_overlap(1, -1 + id_ct, -2 + 3 * k_clr), cloud_overlap(1, -1 + id_ct, 4 + -k_clr), cloud_overlap(1, -1 + id_ct, 1 + k_clr), cloud_overlap(1, -1 + id_ct, 7 + -3 * k_clr), cloud_overlap(1, -1 + id_ct, 2 + 3 * k_clr), cloud_overlap(1, -1 + id_ct, 5 + k_clr), cloud_overlap(1, -1 + id_ct, 8 + -k_clr), cloud_overlap(1, -1 + id_ct, 11 + -3 * k_clr), flux_inc_down(1), d_planck_flux_surface(1), diffuse_albedo(1), flux_total(1, 1), nd_profile, nd_layer, id_ct )
16301.    20          continue
16396.                if ( l_clear /= .false. ) then
16398.                   call clear_supplement( ierr, n_profile, n_layer, i_solver_clear, trans_free(1, 1), reflect_free(1, 1), trans_0_free(1, 1), source_coeff_free(1, 1, 1), isolir, flux_inc_direct(1), flux_inc_down(1), s_down_clear(1, 1), s_up_clear(1, 1), diffuse_albedo(1), direct_albedo(1), d_planck_flux_surface(1), l_scale_solar, adjust_solar_ke(1, 1), flux_direct_clear(1, 0), flux_total_clear(1, 1), nd_profile, nd_layer, nd_source_coeff )
16398.                endif
15898.                _free( t$2299 )
15898.             else
16387.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$605,  _substr(t$604,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: The solver specified is not valid here.', 0x800600000000L ) ) )
16389.                ierr = 1
15898.                _free( t$2299 )
15898.             endif
15898.          endif
15898.       endif
16413.       return
16413.       end
16413.       
16433.       
16433.       subroutine mixed_solar_source( n_profile, n_layer, n_cloud_top, flux_inc_direct, l_scale_solar, adjust_solar_ke, trans_0_free, source_coeff_free, g_ff, g_fc, g_cf, g_cc, trans_0_cloud, source_coeff_cloud, flux_direct, flux_direct_ground_cloud, s_up_free, s_down_free, s_up_cloud, s_down_cloud, nd_profile, nd_layer, id_ct, nd_source_coeff )
16433.       t$606 = nd_profile
16487.       t$2353 = _zla( 0, nd_profile )
16433.       t$607 = nd_layer
16433.       t$2354 = _zla( 0, nd_profile )
16483.       t$2355 = _zla( 0, nd_layer )
16433.       t$2356 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16433.       t$608 = nd_source_coeff
16433.       t$2357 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16494.       t$2358 = _zla( 0, nd_source_coeff )
16433.       t$2359 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff )
16433.       t$609 = ( -1 + id_ct )
16433.       t$2360 = 2 + nd_layer + -id_ct
16506.       t$2361 = _zla( 0, 2 + nd_layer + -id_ct )
16433.       t$2362 = _zla( 0, nd_profile ) * _zla( 0, 2 + nd_layer + -id_ct )
16433.       t$2363 = 1 + nd_layer
16517.       t$2364 = _zla( 0, 1 + nd_layer )
16433.       t$2365 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
16545.       t$2368 = 8 * _zla( 0, nd_profile )
16543.       t$2369 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) ) / 8
16543.       t$2371 = t$2369 + 8 * _zla( 0, nd_profile )
16541.       t$2372 = 8 * ( 7 + t$2369 + 8 * _zla( 0, nd_profile ) ) / 8
16541.       t$2374 = t$2372 + 8 * _zla( 0, nd_profile )
16539.       t$2375 = 8 * ( 7 + t$2372 + 8 * _zla( 0, nd_profile ) ) / 8
16539.       t$2377 = t$2375 + 8 * _zla( 0, nd_profile )
16433.       t$2366 = int( _alloc( t$2375 + 8 * _zla( 0, nd_profile ) ), 8 )
16545.       t$2367 = t$2366
16543.       t$2370 = t$2369 + t$2366
16541.       t$2373 = t$2372 + t$2366
16539.       t$2376 = t$2375 + t$2366
16554.       if ( n_profile > 0 ) then
16554.          $I_L16554_96 = 0
16554. !dir$ ivdep
16554.          do
16555.             flux_direct(1 + $I_L16554_96, 0) = flux_inc_direct(1 + $I_L16554_96)
16556.             $I_L16554_96 = 1 + $I_L16554_96
16554.             if ( $I_L16554_96 >= n_profile ) exit
16554.          enddo
16554.       endif
16561.       if ( l_scale_solar /= .false. ) then
16563.          if ( -1 + n_cloud_top > 0 ) then
16564.             if ( n_profile > 0 ) then
16563.                $I_L16563_116 = 0
16563.                if ( -3 + n_cloud_top >= 0 ) then
16563.                   $I_L16563_120 = 0
16563. !dir$ blocking_size( 1, 1 )
16563.                   do
16564.                      $I_L16564_100 = 0
16564. !dir$ ivdep
16564. !dir$ blocking_size( 256, 256 )
16564.                      do
16565.                         $flux_direct_WR0_R0 = trans_0_free(1 + $I_L16564_100, 1 + 2 * $I_L16563_120) * adjust_solar_ke(1 + $I_L16564_100, 1 + 2 * $I_L16563_120) * flux_direct(1 + $I_L16564_100, 2 * $I_L16563_120)
16565.                         flux_direct(1 + $I_L16564_100, 1 + 2 * $I_L16563_120) = $flux_direct_WR0_R0
16568.                         s_up_free(1 + $I_L16564_100, 1 + 2 * $I_L16563_120) = flux_direct(1 + $I_L16564_100, 2 * $I_L16563_120) * source_coeff_free(1 + $I_L16564_100, 1 + 2 * $I_L16563_120, 1)
16570.                         s_down_free(1 + $I_L16564_100, 1 + 2 * $I_L16563_120) = $flux_direct_WR0_R0 + flux_direct(1 + $I_L16564_100, 2 * $I_L16563_120) * ( source_coeff_free(1 + $I_L16564_100, 1 + 2 * $I_L16563_120, 2) + -trans_0_free(1 + $I_L16564_100, 1 + 2 * $I_L16563_120) )
16565.                         $flux_direct_WR0_R0 = trans_0_free(1 + $I_L16564_100, 2 + 2 * $I_L16563_120) * $flux_direct_WR0_R0 * adjust_solar_ke(1 + $I_L16564_100, 2 + 2 * $I_L16563_120)
16565.                         flux_direct(1 + $I_L16564_100, 2 + 2 * $I_L16563_120) = $flux_direct_WR0_R0
16568.                         s_up_free(1 + $I_L16564_100, 2 + 2 * $I_L16563_120) = flux_direct(1 + $I_L16564_100, 1 + 2 * $I_L16563_120) * source_coeff_free(1 + $I_L16564_100, 2 + 2 * $I_L16563_120, 1)
16570.                         s_down_free(1 + $I_L16564_100, 2 + 2 * $I_L16563_120) = $flux_direct_WR0_R0 + flux_direct(1 + $I_L16564_100, 1 + 2 * $I_L16563_120) * ( source_coeff_free(1 + $I_L16564_100, 2 + 2 * $I_L16563_120, 2) + -trans_0_free(1 + $I_L16564_100, 2 + 2 * $I_L16563_120) )
16574.                         $I_L16564_100 = 1 + $I_L16564_100
16564.                         if ( $I_L16564_100 >= n_profile ) exit
16564.                      enddo
16575.                      $I_L16563_120 = 1 + $I_L16563_120
16574.                      if ( $I_L16563_120 >= _rsh( -1 + n_cloud_top, 1 ) ) exit
16574.                   enddo
16575.                   $I_L16563_116 = and( 0xfffffffffffffffeUL, -1 + n_cloud_top )
16575.                endif
16563.                if ( $I_L16563_116 < -1 + n_cloud_top ) then
16564.                   $I_L16564_100 = 0
16564. !dir$ ivdep
16564. !dir$ blocking_size( 256, 256 )
16564.                   do
16565.                      $flux_direct_WR0_R0 = trans_0_free(1 + $I_L16564_100, 1 + $I_L16563_116) * flux_direct(1 + $I_L16564_100, $I_L16563_116) * adjust_solar_ke(1 + $I_L16564_100, 1 + $I_L16563_116)
16565.                      flux_direct(1 + $I_L16564_100, 1 + $I_L16563_116) = $flux_direct_WR0_R0
16568.                      s_up_free(1 + $I_L16564_100, 1 + $I_L16563_116) = flux_direct(1 + $I_L16564_100, $I_L16563_116) * source_coeff_free(1 + $I_L16564_100, 1 + $I_L16563_116, 1)
16570.                      s_down_free(1 + $I_L16564_100, 1 + $I_L16563_116) = $flux_direct_WR0_R0 + flux_direct(1 + $I_L16564_100, $I_L16563_116) * ( source_coeff_free(1 + $I_L16564_100, 1 + $I_L16563_116, 2) + -trans_0_free(1 + $I_L16564_100, 1 + $I_L16563_116) )
16574.                      $I_L16564_100 = 1 + $I_L16564_100
16564.                      if ( $I_L16564_100 >= n_profile ) exit
16564.                   enddo
16564.                endif
16564.             endif
16564.          endif
16577.       else if ( -1 + n_cloud_top > 0 ) then
16580.          if ( n_profile > 0 ) then
16579.             $I_L16579_114 = 0
16579.             if ( -3 + n_cloud_top >= 0 ) then
16579.                $I_L16579_122 = 0
16579. !dir$ blocking_size( 1, 1 )
16579.                do
16580.                   $I_L16580_98 = 0
16580. !dir$ ivdep
16580. !dir$ blocking_size( 256, 256 )
16580.                   do
16581.                      flux_direct(1 + $I_L16580_98, 1 + 2 * $I_L16579_122) = trans_0_free(1 + $I_L16580_98, 1 + 2 * $I_L16579_122) * flux_direct(1 + $I_L16580_98, 2 * $I_L16579_122)
16583.                      s_up_free(1 + $I_L16580_98, 1 + 2 * $I_L16579_122) = flux_direct(1 + $I_L16580_98, 2 * $I_L16579_122) * source_coeff_free(1 + $I_L16580_98, 1 + 2 * $I_L16579_122, 1)
16585.                      s_down_free(1 + $I_L16580_98, 1 + 2 * $I_L16579_122) = flux_direct(1 + $I_L16580_98, 2 * $I_L16579_122) * source_coeff_free(1 + $I_L16580_98, 1 + 2 * $I_L16579_122, 2)
16581.                      flux_direct(1 + $I_L16580_98, 2 + 2 * $I_L16579_122) = flux_direct(1 + $I_L16580_98, 1 + 2 * $I_L16579_122) * trans_0_free(1 + $I_L16580_98, 2 + 2 * $I_L16579_122)
16583.                      s_up_free(1 + $I_L16580_98, 2 + 2 * $I_L16579_122) = flux_direct(1 + $I_L16580_98, 1 + 2 * $I_L16579_122) * source_coeff_free(1 + $I_L16580_98, 2 + 2 * $I_L16579_122, 1)
16585.                      s_down_free(1 + $I_L16580_98, 2 + 2 * $I_L16579_122) = flux_direct(1 + $I_L16580_98, 1 + 2 * $I_L16579_122) * source_coeff_free(1 + $I_L16580_98, 2 + 2 * $I_L16579_122, 2)
16588.                      $I_L16580_98 = 1 + $I_L16580_98
16580.                      if ( $I_L16580_98 >= n_profile ) exit
16580.                   enddo
16589.                   $I_L16579_122 = 1 + $I_L16579_122
16588.                   if ( $I_L16579_122 >= _rsh( -1 + n_cloud_top, 1 ) ) exit
16588.                enddo
16589.                $I_L16579_114 = and( 0xfffffffffffffffeUL, -1 + n_cloud_top )
16589.             endif
16579.             if ( $I_L16579_114 < -1 + n_cloud_top ) then
16580.                $I_L16580_98 = 0
16580. !dir$ ivdep
16580. !dir$ blocking_size( 256, 256 )
16580.                do
16581.                   flux_direct(1 + $I_L16580_98, 1 + $I_L16579_114) = flux_direct(1 + $I_L16580_98, $I_L16579_114) * trans_0_free(1 + $I_L16580_98, 1 + $I_L16579_114)
16583.                   s_up_free(1 + $I_L16580_98, 1 + $I_L16579_114) = flux_direct(1 + $I_L16580_98, $I_L16579_114) * source_coeff_free(1 + $I_L16580_98, 1 + $I_L16579_114, 1)
16585.                   s_down_free(1 + $I_L16580_98, 1 + $I_L16579_114) = flux_direct(1 + $I_L16580_98, $I_L16579_114) * source_coeff_free(1 + $I_L16580_98, 1 + $I_L16579_114, 2)
16588.                   $I_L16580_98 = 1 + $I_L16580_98
16580.                   if ( $I_L16580_98 >= n_profile ) exit
16580.                enddo
16580.             endif
16580.          endif
16580.       endif
16597.       if ( n_profile > 0 ) then
16597.          $I_L16597_102 = 0
16597. !dir$ ivdep
16597.          do
16598.             solar_base_free(1 + $I_L16597_102) = flux_direct(1 + $I_L16597_102, -1 + n_cloud_top)
16599.             solar_base_cloud(1 + $I_L16597_102) = 0.0
16600.             $I_L16597_102 = 1 + $I_L16597_102
16597.             if ( $I_L16597_102 >= n_profile ) exit
16597.          enddo
16597.       endif
16603.       if ( n_layer + -n_cloud_top >= 0 ) then
16603.          $I_L16603_118 = 0
16603.          do
16609.             if ( n_profile > 0 ) then
16609.                $I_L16609_104 = 0
16609. !dir$ ivdep
16609.                do
16610.                   solar_top_cloud(1 + $I_L16609_104) = solar_base_cloud(1 + $I_L16609_104) * g_cc(1 + $I_L16609_104, -1 + n_cloud_top + $I_L16603_118) + solar_base_free(1 + $I_L16609_104) * g_fc(1 + $I_L16609_104, -1 + n_cloud_top + $I_L16603_118)
16612.                   solar_top_free(1 + $I_L16609_104) = solar_base_free(1 + $I_L16609_104) * g_ff(1 + $I_L16609_104, -1 + n_cloud_top + $I_L16603_118) + solar_base_cloud(1 + $I_L16609_104) * g_cf(1 + $I_L16609_104, -1 + n_cloud_top + $I_L16603_118)
16614.                   $I_L16609_104 = 1 + $I_L16609_104
16609.                   if ( $I_L16609_104 >= n_profile ) exit
16609.                enddo
16609.             endif
16619.             if ( l_scale_solar /= .false. ) then
16621.                if ( n_profile > 0 ) then
16621.                   $I_L16621_106 = 0
16621. !dir$ ivdep
16621.                   do
16622.                      $solar_base_free_WR0_R1 = trans_0_free(1 + $I_L16621_106, n_cloud_top + $I_L16603_118) * solar_top_free(1 + $I_L16621_106) * adjust_solar_ke(1 + $I_L16621_106, n_cloud_top + $I_L16603_118)
16622.                      solar_base_free(1 + $I_L16621_106) = $solar_base_free_WR0_R1
16624.                      $solar_base_cloud_WR0_R2 = trans_0_cloud(1 + $I_L16621_106, n_cloud_top + $I_L16603_118) * solar_top_cloud(1 + $I_L16621_106) * adjust_solar_ke(1 + $I_L16621_106, n_cloud_top + $I_L16603_118)
16624.                      solar_base_cloud(1 + $I_L16621_106) = $solar_base_cloud_WR0_R2
16626.                      s_up_free(1 + $I_L16621_106, n_cloud_top + $I_L16603_118) = solar_top_free(1 + $I_L16621_106) * source_coeff_free(1 + $I_L16621_106, n_cloud_top + $I_L16603_118, 1)
16628.                      s_down_free(1 + $I_L16621_106, n_cloud_top + $I_L16603_118) = $solar_base_free_WR0_R1 + solar_top_free(1 + $I_L16621_106) * ( source_coeff_free(1 + $I_L16621_106, n_cloud_top + $I_L16603_118, 2) + -trans_0_free(1 + $I_L16621_106, n_cloud_top + $I_L16603_118) )
16632.                      s_up_cloud(1 + $I_L16621_106, n_cloud_top + $I_L16603_118) = solar_top_cloud(1 + $I_L16621_106) * source_coeff_cloud(1 + $I_L16621_106, n_cloud_top + $I_L16603_118, 1)
16635.                      s_down_cloud(1 + $I_L16621_106, n_cloud_top + $I_L16603_118) = $solar_base_cloud_WR0_R2 + solar_top_cloud(1 + $I_L16621_106) * ( source_coeff_cloud(1 + $I_L16621_106, n_cloud_top + $I_L16603_118, 2) + -trans_0_cloud(1 + $I_L16621_106, n_cloud_top + $I_L16603_118) )
16639.                      $I_L16621_106 = 1 + $I_L16621_106
16621.                      if ( $I_L16621_106 >= n_profile ) exit
16621.                   enddo
16621.                endif
16641.             else if ( n_profile > 0 ) then
16643.                $I_L16643_108 = 0
16643. !dir$ ivdep
16643.                do
16644.                   solar_base_free(1 + $I_L16643_108) = solar_top_free(1 + $I_L16643_108) * trans_0_free(1 + $I_L16643_108, n_cloud_top + $I_L16603_118)
16646.                   solar_base_cloud(1 + $I_L16643_108) = solar_top_cloud(1 + $I_L16643_108) * trans_0_cloud(1 + $I_L16643_108, n_cloud_top + $I_L16603_118)
16648.                   s_up_free(1 + $I_L16643_108, n_cloud_top + $I_L16603_118) = solar_top_free(1 + $I_L16643_108) * source_coeff_free(1 + $I_L16643_108, n_cloud_top + $I_L16603_118, 1)
16650.                   s_down_free(1 + $I_L16643_108, n_cloud_top + $I_L16603_118) = solar_top_free(1 + $I_L16643_108) * source_coeff_free(1 + $I_L16643_108, n_cloud_top + $I_L16603_118, 2)
16653.                   s_up_cloud(1 + $I_L16643_108, n_cloud_top + $I_L16603_118) = solar_top_cloud(1 + $I_L16643_108) * source_coeff_cloud(1 + $I_L16643_108, n_cloud_top + $I_L16603_118, 1)
16656.                   s_down_cloud(1 + $I_L16643_108, n_cloud_top + $I_L16603_118) = solar_top_cloud(1 + $I_L16643_108) * source_coeff_cloud(1 + $I_L16643_108, n_cloud_top + $I_L16603_118, 2)
16659.                   $I_L16643_108 = 1 + $I_L16643_108
16643.                   if ( $I_L16643_108 >= n_profile ) exit
16643.                enddo
16643.             endif
16666.             if ( n_profile > 0 ) then
16666.                $I_L16666_110 = 0
16666. !dir$ ivdep
16666.                do
16667.                   flux_direct(1 + $I_L16666_110, n_cloud_top + $I_L16603_118) = solar_base_free(1 + $I_L16666_110) + solar_base_cloud(1 + $I_L16666_110)
16668.                   $I_L16666_110 = 1 + $I_L16666_110
16666.                   if ( $I_L16666_110 >= n_profile ) exit
16666.                enddo
16666.             endif
16670.             $I_L16603_118 = 1 + $I_L16603_118
16668.             if ( $I_L16603_118 >= 1 + n_layer + -n_cloud_top ) exit
16668.          enddo
16668.       endif
16673.       if ( n_profile > 0 ) then
16673.          $I_L16673_112 = 0
16673. !dir$ ivdep
16673.          do
16674.             flux_direct_ground_cloud(1 + $I_L16673_112) = solar_base_cloud(1 + $I_L16673_112)
16675.             $I_L16673_112 = 1 + $I_L16673_112
16673.             if ( $I_L16673_112 >= n_profile ) exit
16673.          enddo
16673.       endif
16433.       _free( t$2366 )
16680.       return
16680.       end
16680.       
16701.       
16701.       subroutine monochromatic_gas_flux( n_profile, n_layer, tau_gas, isolir, sec_0, flux_inc_direct, flux_inc_down, diff_planck, d_planck_flux_surface, diffuse_albedo, direct_albedo, diffusivity_factor, flux_direct, flux_diffuse, nd_profile, nd_layer )
16701.       t$610 = nd_profile
16701.       t$611 = nd_layer
16737.       t$2378 = _zla( 0, nd_profile )
16701.       t$2379 = _zla( 0, nd_profile )
16737.       t$2380 = _zla( 0, nd_layer )
16701.       t$2381 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16701.       t$2382 = 1 + nd_layer
16757.       t$2383 = _zla( 0, 1 + nd_layer )
16701.       t$2384 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
16701.       t$612 = ( 2 + 2 * nd_layer )
16759.       t$2385 = _zla( 0, ( 2 + 2 * nd_layer ) )
16701.       t$2386 = _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
16773.       t$2389 = 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16771.       t$2390 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
16771.       t$2392 = t$2390 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16769.       t$2393 = 8 * ( 7 + t$2390 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
16769.       t$2395 = t$2393 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16701.       t$2387 = int( _alloc( t$2393 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ), 8 )
16773.       t$2388 = t$2387
16771.       t$2391 = t$2390 + t$2387
16769.       t$2394 = t$2393 + t$2387
16792.       if ( nd_layer > 0 ) then
16793.          if ( nd_profile > 0 ) then
16792.             $I_L16792_149 = 0
16792.             do
16793.                $I_L16793_128 = 0
16793. !dir$ ivdep
16793.                do
16794.                   trans(1 + $I_L16793_128, 1 + $I_L16792_149) = _expn( -( diffusivity_factor * tau_gas(1 + $I_L16793_128, 1 + $I_L16792_149) ) )
16795.                   $I_L16793_128 = 1 + $I_L16793_128
16793.                   if ( $I_L16793_128 >= nd_profile ) exit
16793.                enddo
16796.                $I_L16792_149 = 1 + $I_L16792_149
16795.                if ( $I_L16792_149 >= nd_layer ) exit
16795.             enddo
16795.          endif
16795.       endif
16798.       if ( isolir == 1 ) then
16800.          if ( nd_layer > 0 ) then
16801.             if ( nd_profile > 0 ) then
16800.                $I_L16800_153 = 0
16800.                do
16801.                   $I_L16801_132 = 0
16801. !dir$ ivdep
16801.                   do
16802.                      source_up(1 + $I_L16801_132, 1 + $I_L16800_153) = 0.0
16803.                      source_down(1 + $I_L16801_132, 1 + $I_L16800_153) = 0.0
16804.                      $I_L16801_132 = 1 + $I_L16801_132
16801.                      if ( $I_L16801_132 >= nd_profile ) exit
16801.                   enddo
16805.                   $I_L16800_153 = 1 + $I_L16800_153
16804.                   if ( $I_L16800_153 >= nd_layer ) exit
16804.                enddo
16804.             endif
16804.          endif
16820.          if ( nd_profile > 0 ) then
16820.             $I_L16820_134 = 0
16820. !dir$ ivdep
16820.             do
16821.                flux_direct(1 + $I_L16820_134, 0) = flux_inc_direct(1 + $I_L16820_134)
16822.                $I_L16820_134 = 1 + $I_L16820_134
16820.                if ( $I_L16820_134 >= nd_profile ) exit
16820.             enddo
16820.          endif
16824.          if ( nd_layer > 0 ) then
16825.             if ( nd_profile > 0 ) then
16824.                $I_L16824_164 = 0
16824.                do
16825.                   $I_L16825_162 = 0
16825.                   do
16824.                      $I_L16824_166 = 0
16824. !dir$ shortloop16
16824. !dir$ blocking_size( 2, 2 )
16824.                      do
16825.                         $I_L16825_136 = 0
16825. !dir$ ivdep
16825. !dir$ blocking_size( 256, 256 )
16825.                         do
16826.                            flux_direct(1 + $I_L16825_136 + 256 * $I_L16825_162, 1 + $I_L16824_166 + 2 * $I_L16824_164) = flux_direct(1 + $I_L16825_136 + 256 * $I_L16825_162, $I_L16824_166 + 2 * $I_L16824_164) * _expn( -( sec_0(1 + $I_L16825_136 + 256 * $I_L16825_162) * tau_gas(1 + $I_L16825_136 + 256 * $I_L16825_162, 1 + $I_L16824_166 + 2 * $I_L16824_164) ) )
16825.                            $I_L16825_136 = 1 + $I_L16825_136
16825.                            if ( $I_L16825_136 >= min( nd_profile, 256 + 256 * $I_L16825_162 ) + -256 * $I_L16825_162 ) exit
16825.                         enddo
16824.                         $I_L16824_166 = 1 + $I_L16824_166
16824.                         if ( $I_L16824_166 >= min( nd_layer, 2 + 2 * $I_L16824_164 ) + -2 * $I_L16824_164 ) exit
16824.                      enddo
16825.                      $I_L16825_162 = 1 + $I_L16825_162
16828.                      if ( $I_L16825_162 >= 1 + max( 0, -1 + _rsh( 255 + nd_profile, 8 ) ) ) exit
16828.                   enddo
16824.                   $I_L16824_164 = 1 + $I_L16824_164
16824.                   if ( $I_L16824_164 >= 1 + max( 0, -1 + _rsh( 1 + nd_layer, 1 ) ) ) exit
16824.                enddo
16824.             endif
16824.          endif
16806.       else if ( isolir == 2 ) then
16808.          if ( nd_layer > 0 ) then
16809.             if ( nd_profile > 0 ) then
16808.                $I_L16808_151 = 0
16808.                do
16809.                   $I_L16809_130 = 0
16809. !dir$ ivdep
16809.                   do
16810.                      $source_up_WR0_R0 = ( diff_planck(1 + $I_L16809_130, 1 + $I_L16808_151) * ( 1.0000000149011612 + -trans(1 + $I_L16809_130, 1 + $I_L16808_151) ) * 1.0/( 1.4901161193847656e-8 + diffusivity_factor * tau_gas(1 + $I_L16809_130, 1 + $I_L16808_151) ) )
16810.                      source_up(1 + $I_L16809_130, 1 + $I_L16808_151) = $source_up_WR0_R0
16813.                      source_down(1 + $I_L16809_130, 1 + $I_L16808_151) = -$source_up_WR0_R0
16814.                      $I_L16809_130 = 1 + $I_L16809_130
16809.                      if ( $I_L16809_130 >= nd_profile ) exit
16809.                   enddo
16815.                   $I_L16808_151 = 1 + $I_L16808_151
16814.                   if ( $I_L16808_151 >= nd_layer ) exit
16814.                enddo
16814.             endif
16814.          endif
16814.       endif
16833.       if ( nd_profile > 0 ) then
16833.          $I_L16833_139 = 0
16833. !dir$ ivdep
16833.          do
16834.             flux_diffuse(1 + $I_L16833_139, 2) = flux_inc_down(1 + $I_L16833_139)
16835.             $I_L16833_139 = 1 + $I_L16833_139
16833.             if ( $I_L16833_139 >= nd_profile ) exit
16833.          enddo
16833.       endif
16837.       if ( nd_layer > 0 ) then
16838.          if ( nd_profile > 0 ) then
16837.             $I_L16837_155 = 0
16837.             if ( nd_layer >= 2 ) then
16837.                $I_L16837_168 = 0
16837.                do
16838.                   $I_L16838_141 = 0
16838. !dir$ ivdep
16838.                   do
16839.                      flux_diffuse(1 + $I_L16838_141, 4 + 4 * $I_L16837_168) = source_down(1 + $I_L16838_141, 1 + 2 * $I_L16837_168) + flux_diffuse(1 + $I_L16838_141, 2 + 4 * $I_L16837_168) * trans(1 + $I_L16838_141, 1 + 2 * $I_L16837_168)
16839.                      flux_diffuse(1 + $I_L16838_141, 6 + 4 * $I_L16837_168) = source_down(1 + $I_L16838_141, 2 + 2 * $I_L16837_168) + flux_diffuse(1 + $I_L16838_141, 4 + 4 * $I_L16837_168) * trans(1 + $I_L16838_141, 2 + 2 * $I_L16837_168)
16841.                      $I_L16838_141 = 1 + $I_L16838_141
16838.                      if ( $I_L16838_141 >= nd_profile ) exit
16838.                   enddo
16842.                   $I_L16837_168 = 1 + $I_L16837_168
16841.                   if ( $I_L16837_168 >= _rsh( nd_layer, 1 ) ) exit
16841.                enddo
16842.                $I_L16837_155 = and( 0xfffffffffffffffeUL, nd_layer )
16842.             endif
16837.             if ( $I_L16837_155 < nd_layer ) then
16838.                $I_L16838_141 = 0
16838. !dir$ ivdep
16838.                do
16839.                   flux_diffuse(1 + $I_L16838_141, 4 + 2 * $I_L16837_155) = source_down(1 + $I_L16838_141, 1 + $I_L16837_155) + trans(1 + $I_L16838_141, 1 + $I_L16837_155) * flux_diffuse(1 + $I_L16838_141, 2 + 2 * $I_L16837_155)
16841.                   $I_L16838_141 = 1 + $I_L16838_141
16838.                   if ( $I_L16838_141 >= nd_profile ) exit
16838.                enddo
16838.             endif
16838.          endif
16838.       endif
16845.       if ( isolir == 1 ) then
16846.          if ( nd_profile > 0 ) then
16846.             $I_L16846_143 = 0
16846. !dir$ ivdep
16846.             do
16847.                flux_diffuse(1 + $I_L16846_143, 1 + 2 * n_layer) = diffuse_albedo(1 + $I_L16846_143) * flux_diffuse(1 + $I_L16846_143, 2 + 2 * n_layer) + direct_albedo(1 + $I_L16846_143) * flux_direct(1 + $I_L16846_143, n_layer)
16850.                $I_L16846_143 = 1 + $I_L16846_143
16846.                if ( $I_L16846_143 >= nd_profile ) exit
16846.             enddo
16846.          endif
16851.       else if ( nd_profile > 0 ) then
16852.          $I_L16852_145 = 0
16852. !dir$ ivdep
16852.          do
16853.             flux_diffuse(1 + $I_L16852_145, 1 + 2 * n_layer) = d_planck_flux_surface(1 + $I_L16852_145) + diffuse_albedo(1 + $I_L16852_145) * flux_diffuse(1 + $I_L16852_145, 2 + 2 * n_layer)
16855.             $I_L16852_145 = 1 + $I_L16852_145
16852.             if ( $I_L16852_145 >= nd_profile ) exit
16852.          enddo
16852.       endif
16858.       if ( nd_layer > 0 ) then
16859.          if ( nd_profile > 0 ) then
16858.             $I_L16858_157 = 0
16858.             if ( nd_layer >= 2 ) then
16858.                $I_L16858_170 = 0
16858.                do
16859.                   $I_L16859_147 = 0
16859. !dir$ ivdep
16859.                   do
16860.                      flux_diffuse(1 + $I_L16859_147, -1 + 2 * nd_layer + -4 * $I_L16858_170) = source_up(1 + $I_L16859_147, nd_layer + -2 * $I_L16858_170) + flux_diffuse(1 + $I_L16859_147, 1 + 2 * nd_layer + -4 * $I_L16858_170) * trans(1 + $I_L16859_147, nd_layer + -2 * $I_L16858_170)
16860.                      flux_diffuse(1 + $I_L16859_147, -3 + 2 * nd_layer + -4 * $I_L16858_170) = source_up(1 + $I_L16859_147, -1 + nd_layer + -2 * $I_L16858_170) + flux_diffuse(1 + $I_L16859_147, -1 + 2 * nd_layer + -4 * $I_L16858_170) * trans(1 + $I_L16859_147, -1 + nd_layer + -2 * $I_L16858_170)
16862.                      $I_L16859_147 = 1 + $I_L16859_147
16859.                      if ( $I_L16859_147 >= nd_profile ) exit
16859.                   enddo
16863.                   $I_L16858_170 = 1 + $I_L16858_170
16862.                   if ( $I_L16858_170 >= _rsh( nd_layer, 1 ) ) exit
16862.                enddo
16863.                $I_L16858_157 = and( 0xfffffffffffffffeUL, nd_layer )
16863.             endif
16858.             if ( $I_L16858_157 < nd_layer ) then
16859.                $I_L16859_147 = 0
16859. !dir$ ivdep
16859.                do
16860.                   flux_diffuse(1 + $I_L16859_147, -1 + 2 * nd_layer + -2 * $I_L16858_157) = source_up(1 + $I_L16859_147, nd_layer + -$I_L16858_157) + trans(1 + $I_L16859_147, nd_layer + -$I_L16858_157) * flux_diffuse(1 + $I_L16859_147, 1 + 2 * nd_layer + -2 * $I_L16858_157)
16862.                   $I_L16859_147 = 1 + $I_L16859_147
16859.                   if ( $I_L16859_147 >= nd_profile ) exit
16859.                enddo
16859.             endif
16859.          endif
16859.       endif
16701.       _free( t$2387 )
16868.       return
16868.       end
16868.       
16889.       
16889.       subroutine monochromatic_ir_radiance( n_profile, n_layer, tau, rad_inc_down, diff_planck, source_ground, albedo_surface_diff, secant_ray, radiance, nd_profile, nd_layer )
16889.       t$613 = nd_profile
16889.       t$614 = nd_layer
16921.       t$2396 = _zla( 0, nd_profile )
16889.       t$2397 = _zla( 0, nd_profile )
16921.       t$2398 = _zla( 0, nd_layer )
16889.       t$2399 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16889.       t$615 = ( 2 + 2 * nd_layer )
16934.       t$2400 = _zla( 0, ( 2 + 2 * nd_layer ) )
16889.       t$2401 = _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
16948.       t$2404 = 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16946.       t$2405 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
16946.       t$2407 = t$2405 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16944.       t$2408 = 8 * ( 7 + t$2405 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
16944.       t$2410 = t$2408 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
16889.       t$2402 = int( _alloc( t$2408 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ), 8 )
16948.       t$2403 = t$2402
16946.       t$2406 = t$2405 + t$2402
16944.       t$2409 = t$2408 + t$2402
16966.       if ( n_layer > 0 ) then
16967.          if ( n_profile > 0 ) then
16966.             $I_L16966_86 = 0
16966.             do
16967.                $I_L16967_76 = 0
16967. !dir$ ivdep
16967.                do
16968.                   $trans_WR0_R0 = _expn( -( secant_ray * tau(1 + $I_L16967_76, 1 + $I_L16966_86) ) )
16968.                   trans(1 + $I_L16967_76, 1 + $I_L16966_86) = $trans_WR0_R0
16974.                   $source_up_WR0_R1 = ( diff_planck(1 + $I_L16967_76, 1 + $I_L16966_86) * ( 1.0000000149011612 + -$trans_WR0_R0 ) * 1.0/( 1.4901161193847656e-8 + secant_ray * tau(1 + $I_L16967_76, 1 + $I_L16966_86) ) )
16974.                   source_up(1 + $I_L16967_76, 1 + $I_L16966_86) = $source_up_WR0_R1
16977.                   source_down(1 + $I_L16967_76, 1 + $I_L16966_86) = -$source_up_WR0_R1
16969.                   $I_L16967_76 = 1 + $I_L16967_76
16967.                   if ( $I_L16967_76 >= n_profile ) exit
16967.                enddo
16970.                $I_L16966_86 = 1 + $I_L16966_86
16969.                if ( $I_L16966_86 >= n_layer ) exit
16969.             enddo
16969.          endif
16969.       endif
16982.       if ( n_profile > 0 ) then
16982.          $I_L16982_78 = 0
16982. !dir$ ivdep
16982.          do
16983.             radiance(1 + $I_L16982_78, 2) = rad_inc_down(1 + $I_L16982_78)
16984.             $I_L16982_78 = 1 + $I_L16982_78
16982.             if ( $I_L16982_78 >= n_profile ) exit
16982.          enddo
16982.       endif
16985.       if ( n_layer > 0 ) then
16986.          if ( n_profile > 0 ) then
16985.             $I_L16985_88 = 0
16985.             if ( n_layer >= 2 ) then
16985.                $I_L16985_92 = 0
16985.                do
16986.                   $I_L16986_80 = 0
16986. !dir$ ivdep
16986.                   do
16987.                      radiance(1 + $I_L16986_80, 4 + 4 * $I_L16985_92) = source_down(1 + $I_L16986_80, 1 + 2 * $I_L16985_92) + radiance(1 + $I_L16986_80, 2 + 4 * $I_L16985_92) * trans(1 + $I_L16986_80, 1 + 2 * $I_L16985_92)
16987.                      radiance(1 + $I_L16986_80, 6 + 4 * $I_L16985_92) = source_down(1 + $I_L16986_80, 2 + 2 * $I_L16985_92) + radiance(1 + $I_L16986_80, 4 + 4 * $I_L16985_92) * trans(1 + $I_L16986_80, 2 + 2 * $I_L16985_92)
16989.                      $I_L16986_80 = 1 + $I_L16986_80
16986.                      if ( $I_L16986_80 >= n_profile ) exit
16986.                   enddo
16990.                   $I_L16985_92 = 1 + $I_L16985_92
16989.                   if ( $I_L16985_92 >= _rsh( n_layer, 1 ) ) exit
16989.                enddo
16990.                $I_L16985_88 = and( 0xfffffffffffffffeUL, n_layer )
16990.             endif
16985.             if ( $I_L16985_88 < n_layer ) then
16986.                $I_L16986_80 = 0
16986. !dir$ ivdep
16986.                do
16987.                   radiance(1 + $I_L16986_80, 4 + 2 * $I_L16985_88) = source_down(1 + $I_L16986_80, 1 + $I_L16985_88) + trans(1 + $I_L16986_80, 1 + $I_L16985_88) * radiance(1 + $I_L16986_80, 2 + 2 * $I_L16985_88)
16989.                   $I_L16986_80 = 1 + $I_L16986_80
16986.                   if ( $I_L16986_80 >= n_profile ) exit
16986.                enddo
16986.             endif
16986.          endif
16986.       endif
16993.       if ( n_profile > 0 ) then
16993.          $I_L16993_82 = 0
16993. !dir$ ivdep
16993.          do
16994.             radiance(1 + $I_L16993_82, 1 + 2 * n_layer) = source_ground(1 + $I_L16993_82) + albedo_surface_diff(1 + $I_L16993_82) * radiance(1 + $I_L16993_82, 2 + 2 * n_layer)
16996.             $I_L16993_82 = 1 + $I_L16993_82
16993.             if ( $I_L16993_82 >= n_profile ) exit
16993.          enddo
16993.       endif
16997.       if ( n_layer > 0 ) then
16998.          if ( n_profile > 0 ) then
16997.             $I_L16997_90 = 0
16997.             if ( n_layer >= 2 ) then
16997.                $I_L16997_94 = 0
16997.                do
16998.                   $I_L16998_84 = 0
16998. !dir$ ivdep
16998.                   do
16999.                      radiance(1 + $I_L16998_84, -1 + 2 * n_layer + -4 * $I_L16997_94) = source_up(1 + $I_L16998_84, n_layer + -2 * $I_L16997_94) + radiance(1 + $I_L16998_84, 1 + 2 * n_layer + -4 * $I_L16997_94) * trans(1 + $I_L16998_84, n_layer + -2 * $I_L16997_94)
16999.                      radiance(1 + $I_L16998_84, -3 + 2 * n_layer + -4 * $I_L16997_94) = source_up(1 + $I_L16998_84, -1 + n_layer + -2 * $I_L16997_94) + radiance(1 + $I_L16998_84, -1 + 2 * n_layer + -4 * $I_L16997_94) * trans(1 + $I_L16998_84, -1 + n_layer + -2 * $I_L16997_94)
17001.                      $I_L16998_84 = 1 + $I_L16998_84
16998.                      if ( $I_L16998_84 >= n_profile ) exit
16998.                   enddo
17002.                   $I_L16997_94 = 1 + $I_L16997_94
17001.                   if ( $I_L16997_94 >= _rsh( n_layer, 1 ) ) exit
17001.                enddo
17002.                $I_L16997_90 = and( 0xfffffffffffffffeUL, n_layer )
17002.             endif
16997.             if ( $I_L16997_90 < n_layer ) then
16998.                $I_L16998_84 = 0
16998. !dir$ ivdep
16998.                do
16999.                   radiance(1 + $I_L16998_84, -1 + 2 * n_layer + -2 * $I_L16997_90) = source_up(1 + $I_L16998_84, n_layer + -$I_L16997_90) + trans(1 + $I_L16998_84, n_layer + -$I_L16997_90) * radiance(1 + $I_L16998_84, 1 + 2 * n_layer + -2 * $I_L16997_90)
17001.                   $I_L16998_84 = 1 + $I_L16998_84
16998.                   if ( $I_L16998_84 >= n_profile ) exit
16998.                enddo
16998.             endif
16998.          endif
16998.       endif
16889.       _free( t$2402 )
17007.       return
17007.       end
17007.       
17028.       
17028.       subroutine monochromatic_radiance( ierr, n_profile, n_layer, d_mass, i_angular_integration, i_2stream, l_rescale, n_order_gauss, n_order_phase, ms_min, ms_max, i_truncation, ls_local_trunc, accuracy_adaptive, euler_factor, i_sph_algorithm, i_sph_mode, ia_sph_mm, cg_coeff, uplm_zero, uplm_sol, i_scatter_method, i_solver, k_gas_abs, l_scale_solar, adjust_solar_ke, isolir, diff_planck, l_ir_source_quad, diff_planck_2, zen_0, zen_00, flux_inc_direct, flux_inc_down, i_direct, d_planck_flux_surface, ls_brdf_trunc, n_brdf_basis_fnc, rho_alb, f_brdf, brdf_sol, brdf_hemi, ss_prop, l_cloud, i_cloud, n_cloud_top, n_cloud_type, frac_cloud, n_region, k_clr, i_region_cloud, frac_region, w_free, w_cloud, cloud_overlap, n_column_slv, list_column_slv, i_clm_lyr_chn, i_clm_cld_typ, area_column, n_viewing_level, i_rad_layer, frac_rad_layer, n_direction, direction, flux_direct, flux_total, radiance, j_radiance, l_clear, i_solver_clear, flux_direct_clear, flux_total_clear, nd_profile, nd_layer, nd_layer_clr, id_ct, nd_column, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_cloud_type, nd_region, nd_overlap_coeff, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc, nd_viewing_level, nd_direction, nd_source_coeff )
17028.       t$616 = nd_profile
17028.       t$617 = nd_layer
17157.       t$2411 = _zla( 0, nd_profile )
17028.       t$2412 = _zla( 0, nd_profile )
17157.       t$2413 = _zla( 0, nd_layer )
17028.       t$2414 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
17028.       t$618 = nd_max_order
17028.       t$2415 = 1 + nd_max_order
17178.       t$2416 = _zla( 0, 1 + nd_max_order )
17028.       t$619 = nd_sph_coeff
17188.       t$2417 = _zla( 0, nd_sph_coeff )
17028.       t$620 = nd_radiance_profile
17192.       t$2418 = _zla( 0, nd_radiance_profile )
17028.       t$2419 = _zla( 0, nd_radiance_profile )
17028.       t$2420 = _zla( 0, nd_sph_coeff ) * _zla( 0, nd_radiance_profile )
17028.       t$2421 = 1 + nd_layer
17248.       t$2422 = _zla( 0, 1 + nd_layer )
17028.       t$2423 = _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer )
17028.       t$621 = nd_brdf_basis_fnc
17262.       t$2424 = _zla( 0, nd_brdf_basis_fnc )
17028.       t$2425 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
17028.       t$622 = nd_brdf_trunc / 2
17028.       t$623 = nd_brdf_trunc
17028.       t$2426 = _zla( 0, nd_brdf_basis_fnc )
17028.       t$2427 = 1 + t$622
17264.       t$2428 = _zla( 0, 1 + t$622 )
17028.       t$2429 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$622 )
17028.       t$2430 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$622 ) * _zla( 0, 1 + t$622 )
17028.       t$2431 = 1 + nd_brdf_trunc
17264.       t$2432 = _zla( 0, 1 + nd_brdf_trunc )
17028.       t$2433 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$622 ) * _zla( 0, 1 + t$622 ) * _zla( 0, 1 + nd_brdf_trunc )
17028.       t$624 = nd_direction
17028.       t$2434 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
17267.       t$2435 = _zla( 0, nd_direction )
17028.       t$2436 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_direction )
 2600.       if ( t$27 == 0 ) then
 2600.          t$2441(1) = 4
 2600.          t$2442(1) = 0
 2600.          t$2443(1) = 0
 2600.          t$2438(1) = int( loc( t$26 ), 8 )
 2600.          t$2439(1) = 0
 2600.          t$2440(1) = int( loc( t$2437 ), 8 )
 2600.          t$27 = __get_dynamic_type( 2, t$2438(1), t$2441(1), 1, t$2439(1), t$2440(1), t$2442(1), t$2443(1) )
 2600.       endif
17028.       t$627 = id_ct
17028.       t$625 = nd_cloud_type
17028.       t$2445 = 1 + nd_layer + -id_ct
17312.       t$2446 = max( 0, 1 + nd_layer + -id_ct )
17028.       t$2447 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
17312.       t$2448 = max( 0, nd_cloud_type )
17028.       t$2449 = _zla( 0, nd_profile ) * max( 0, nd_cloud_type ) * max( 0, 1 + nd_layer + -id_ct )
17028.       t$630 = nd_region
17321.       t$2450 = max( 0, nd_region )
17028.       t$2451 = _zla( 0, nd_profile ) * max( 0, nd_region ) * max( 0, 1 + nd_layer + -id_ct )
17028.       t$2452 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
17028.       t$628 = ( -1 + id_ct )
17028.       t$629 = nd_overlap_coeff
17028.       t$2453 = 2 + nd_layer + -id_ct
17316.       t$2454 = max( 0, 2 + nd_layer + -id_ct )
17028.       t$2455 = _zla( 0, nd_profile ) * max( 0, 2 + nd_layer + -id_ct )
17316.       t$2456 = max( 0, nd_overlap_coeff )
17028.       t$2457 = _zla( 0, nd_profile ) * max( 0, nd_overlap_coeff ) * max( 0, 2 + nd_layer + -id_ct )
17028.       t$626 = nd_column
17303.       t$2458 = max( 0, nd_column )
17028.       t$2459 = _zla( 0, nd_profile ) * max( 0, nd_column )
17028.       t$631 = nd_viewing_level
17329.       t$2460 = max( 0, nd_viewing_level )
17028.       t$2461 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
17028.       t$2462 = 2 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
17028.       t$632 = nd_flux_profile
17345.       t$2463 = max( 0, nd_flux_profile )
17028.       t$2464 = max( 0, nd_flux_profile )
17028.       t$2465 = max( 0, nd_flux_profile ) * _zla( 0, 1 + nd_layer )
17028.       t$633 = ( 2 + 2 * nd_layer )
17347.       t$2466 = max( 0, ( 2 + 2 * nd_layer ) )
17028.       t$2467 = max( 0, nd_flux_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
17028.       t$2468 = _zla( 0, nd_radiance_profile ) * max( 0, nd_viewing_level )
17028.       t$2469 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * max( 0, nd_viewing_level )
17028.       t$634 = nd_j_profile
17356.       t$2470 = max( 0, nd_j_profile )
17028.       t$2471 = max( 0, nd_j_profile )
17385.       t$2472 = max( 0, nd_viewing_level ) * max( 0, nd_j_profile )
17028.       tau_clr_f = $_StaticDV_P0
17028.       tau_clr_f%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
17028.       tau_clr_f%header%el_len = 64
17028.       tau_clr_f%header%assoc = 0
17028.       tau_clr_f%header%ptr_alloc = 0
17028.       tau_clr_f%header%p_or_a = 2
17028.       tau_clr_f%header%a_contig = 1
17028.       tau_clr_f%header%n_dim = 2
17028.       tau_clr_f%header%orig_base = 0
17028.       tau_clr_f%header%orig_size = 0
17028.       tau_clr_f%header%n_codim = 0
17028.       tau_clr_f%header%dv_versn = 2
17028.       tau_clr_f%header%dv_smunit = 64
17028.       tau_clr_f%header%d_type = 0
17028.       tau_clr_f%header%n_params = 0
17028.       tau_clr_f%header%d_type_idx = 13
17028.       tau_clr_f%dim_1%LB = 1
17028.       tau_clr_f%dim_1%EX = 0
17028.       tau_clr_f%dim_1%SM = 1
17028.       tau_clr_f%dim_2%LB = 1
17028.       tau_clr_f%dim_2%EX = 0
17028.       tau_clr_f%dim_2%SM = 1
17402.       call single_scattering_all( i_scatter_method, n_profile, n_layer, d_mass(1, 1), l_cloud, n_cloud_top, n_cloud_type, ss_prop, k_gas_abs(1, 1), nd_profile, nd_layer, nd_layer_clr, id_ct )
17417.       if ( i_angular_integration == 1 ) then
17417.          goto 10
17417.       else if ( i_angular_integration == 3 ) then
17417.    10    continue
17422.          if ( l_rescale /= .false. ) then
17425.             if ( l_cloud == .false. ) then
17440.                t$7393 = 0
17440.                t$7394 = 0
17440.                t$7398 = 0
17440.                if ( ( ss_prop%tau%header%a_contig == 1 .or. -ss_prop%tau%header%el_len + ss_prop%tau%dim_1%SM * ss_prop%tau%header%dv_smunit == 0 .and. -ss_prop%tau%dim_2%SM + ss_prop%tau%dim_1%SM * ss_prop%tau%dim_1%EX == 0 ) /= .false. ) then
17440. !dir$ suppress (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, 0, 0)
17440.                   t$7392 = loc( (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, 0, 0) )
17440.                else
17440.                   t$7393 = ( max( 0, ( 1 + -1 + ss_prop%tau%dim_1%EX ) ) )
17440.                   t$7394 = ( max( 0, ( 1 + -1 + ss_prop%tau%dim_2%EX ) ) )
17440.                   t$7398 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%tau%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%tau%dim_1%EX ) ) ) ) ) ), 8 )
17438.                   call _f90_copy_from_dv( t$7397, ss_prop%tau )
17440. !dir$ suppress t$7397
17440.                   t$7392 = loc( t$7397 )
17440.                endif
17440.                t$7400 = 0
17440.                t$7401 = 0
17440.                t$7405 = 0
17440.                if ( ( ss_prop%omega%header%a_contig == 1 .or. -ss_prop%omega%header%el_len + ss_prop%omega%dim_1%SM * ss_prop%omega%header%dv_smunit == 0 .and. -ss_prop%omega%dim_2%SM + ss_prop%omega%dim_1%SM * ss_prop%omega%dim_1%EX == 0 ) /= .false. ) then
17440. !dir$ suppress (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, 0, 0)
17440.                   t$7399 = loc( (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, 0, 0) )
17440.                else
17440.                   t$7400 = ( max( 0, ( 1 + -1 + ss_prop%omega%dim_1%EX ) ) )
17440.                   t$7401 = ( max( 0, ( 1 + -1 + ss_prop%omega%dim_2%EX ) ) )
17440.                   t$7405 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%omega%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%omega%dim_1%EX ) ) ) ) ) ), 8 )
17438.                   call _f90_copy_from_dv( t$7404, ss_prop%omega )
17440. !dir$ suppress t$7404
17440.                   t$7399 = loc( t$7404 )
17440.                endif
17441.                t$7407 = 0
17441.                t$7408 = 0
17441.                t$7412 = 0
17441.                if ( ( ss_prop%forward_scatter%header%a_contig == 1 .or. -ss_prop%forward_scatter%header%el_len + ss_prop%forward_scatter%dim_1%SM * ss_prop%forward_scatter%header%dv_smunit == 0 .and. -ss_prop%forward_scatter%dim_2%SM + ss_prop%forward_scatter%dim_1%SM * ss_prop%forward_scatter%dim_1%EX == 0 ) /= .false. ) then
17441. !dir$ suppress (ss_prop%forward_scatter%base_addr)(ss_prop%forward_scatter%dim_1%LB, ss_prop%forward_scatter%dim_2%LB, 0, 0)
17441.                   t$7406 = loc( (ss_prop%forward_scatter%base_addr)(ss_prop%forward_scatter%dim_1%LB, ss_prop%forward_scatter%dim_2%LB, 0, 0) )
17441.                else
17441.                   t$7407 = ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_1%EX ) ) )
17441.                   t$7408 = ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_2%EX ) ) )
17441.                   t$7412 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_1%EX ) ) ) ) ) ), 8 )
17438.                   call _f90_copy_from_dv( t$7411, ss_prop%forward_scatter )
17441. !dir$ suppress t$7411
17441.                   t$7406 = loc( t$7411 )
17441.                endif
17438.                call rescale_tau_omega( n_profile, 1, n_layer, t$7392, t$7399, t$7406, nd_profile, nd_layer, id_ct )
17441.                if ( ( ss_prop%forward_scatter%header%a_contig == 1 .or. -ss_prop%forward_scatter%header%el_len + ss_prop%forward_scatter%dim_1%SM * ss_prop%forward_scatter%header%dv_smunit == 0 .and. -ss_prop%forward_scatter%dim_2%SM + ss_prop%forward_scatter%dim_1%SM * ss_prop%forward_scatter%dim_1%EX == 0 ) == .false. ) then
17441.                   _free( t$7412 )
17441.                endif
17440.                if ( ( ss_prop%omega%header%a_contig == 1 .or. -ss_prop%omega%header%el_len + ss_prop%omega%dim_1%SM * ss_prop%omega%header%dv_smunit == 0 .and. -ss_prop%omega%dim_2%SM + ss_prop%omega%dim_1%SM * ss_prop%omega%dim_1%EX == 0 ) == .false. ) then
17438.                   call _f90_copy_to_dv( ss_prop%omega, t$7404 )
17440.                   _free( t$7405 )
17440.                endif
17440.                if ( ( ss_prop%tau%header%a_contig == 1 .or. -ss_prop%tau%header%el_len + ss_prop%tau%dim_1%SM * ss_prop%tau%header%dv_smunit == 0 .and. -ss_prop%tau%dim_2%SM + ss_prop%tau%dim_1%SM * ss_prop%tau%dim_1%EX == 0 ) == .false. ) then
17438.                   call _f90_copy_to_dv( ss_prop%tau, t$7397 )
17440.                   _free( t$7398 )
17440.                endif
17428.             else if ( n_cloud_type >= 0 ) then
17428.                $I_L17428_184 = 0
17428.                do
17431.                   t$7370 = 0
17431.                   t$7371 = 0
17431.                   t$7375 = 0
17431.                   if ( ( ss_prop%tau%header%a_contig == 1 .or. -ss_prop%tau%header%el_len + ss_prop%tau%dim_1%SM * ss_prop%tau%header%dv_smunit == 0 .and. -ss_prop%tau%dim_2%SM + ss_prop%tau%dim_1%SM * ss_prop%tau%dim_1%EX == 0 ) /= .false. ) then
17431. !dir$ suppress (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, t$7368, 0)
17431.                      t$7369 = loc( (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, $I_L17428_184, 0) )
17431.                   else
17431.                      t$7370 = ( max( 0, ( 1 + -1 + ss_prop%tau%dim_1%EX ) ) )
17431.                      t$7371 = ( max( 0, ( 1 + -1 + ss_prop%tau%dim_2%EX ) ) )
17431.                      t$7375 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%tau%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%tau%dim_1%EX ) ) ) ) ) ), 8 )
17429.                      call _f90_copy_from_dv( t$7374, ss_prop%tau )
17431. !dir$ suppress t$7374
17431.                      t$7369 = loc( t$7374 )
17431.                   endif
17431.                   t$7378 = 0
17431.                   t$7379 = 0
17431.                   t$7383 = 0
17431.                   if ( ( ss_prop%omega%header%a_contig == 1 .or. -ss_prop%omega%header%el_len + ss_prop%omega%dim_1%SM * ss_prop%omega%header%dv_smunit == 0 .and. -ss_prop%omega%dim_2%SM + ss_prop%omega%dim_1%SM * ss_prop%omega%dim_1%EX == 0 ) /= .false. ) then
17431. !dir$ suppress (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, t$7376, 0)
17431.                      t$7377 = loc( (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, $I_L17428_184, 0) )
17431.                   else
17431.                      t$7378 = ( max( 0, ( 1 + -1 + ss_prop%omega%dim_1%EX ) ) )
17431.                      t$7379 = ( max( 0, ( 1 + -1 + ss_prop%omega%dim_2%EX ) ) )
17431.                      t$7383 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%omega%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%omega%dim_1%EX ) ) ) ) ) ), 8 )
17429.                      call _f90_copy_from_dv( t$7382, ss_prop%omega )
17431. !dir$ suppress t$7382
17431.                      t$7377 = loc( t$7382 )
17431.                   endif
17432.                   t$7386 = 0
17432.                   t$7387 = 0
17432.                   t$7391 = 0
17432.                   if ( ( ss_prop%forward_scatter%header%a_contig == 1 .or. -ss_prop%forward_scatter%header%el_len + ss_prop%forward_scatter%dim_1%SM * ss_prop%forward_scatter%header%dv_smunit == 0 .and. -ss_prop%forward_scatter%dim_2%SM + ss_prop%forward_scatter%dim_1%SM * ss_prop%forward_scatter%dim_1%EX == 0 ) /= .false. ) then
17432. !dir$ suppress (ss_prop%forward_scatter%base_addr)(ss_prop%forward_scatter%dim_1%LB, ss_prop%forward_scatter%dim_2%LB, t$7384, 0)
17432.                      t$7385 = loc( (ss_prop%forward_scatter%base_addr)(ss_prop%forward_scatter%dim_1%LB, ss_prop%forward_scatter%dim_2%LB, $I_L17428_184, 0) )
17432.                   else
17432.                      t$7386 = ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_1%EX ) ) )
17432.                      t$7387 = ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_2%EX ) ) )
17432.                      t$7391 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%forward_scatter%dim_1%EX ) ) ) ) ) ), 8 )
17429.                      call _f90_copy_from_dv( t$7390, ss_prop%forward_scatter )
17432. !dir$ suppress t$7390
17432.                      t$7385 = loc( t$7390 )
17432.                   endif
17429.                   call rescale_tau_omega( n_profile, 1, n_layer, t$7369, t$7377, t$7385, nd_profile, nd_layer, id_ct )
17432.                   if ( ( ss_prop%forward_scatter%header%a_contig == 1 .or. -ss_prop%forward_scatter%header%el_len + ss_prop%forward_scatter%dim_1%SM * ss_prop%forward_scatter%header%dv_smunit == 0 .and. -ss_prop%forward_scatter%dim_2%SM + ss_prop%forward_scatter%dim_1%SM * ss_prop%forward_scatter%dim_1%EX == 0 ) == .false. ) then
17432.                      _free( t$7391 )
17432.                   endif
17431.                   if ( ( ss_prop%omega%header%a_contig == 1 .or. -ss_prop%omega%header%el_len + ss_prop%omega%dim_1%SM * ss_prop%omega%header%dv_smunit == 0 .and. -ss_prop%omega%dim_2%SM + ss_prop%omega%dim_1%SM * ss_prop%omega%dim_1%EX == 0 ) == .false. ) then
17429.                      call _f90_copy_to_dv( ss_prop%omega, t$7382 )
17431.                      _free( t$7383 )
17431.                   endif
17431.                   if ( ( ss_prop%tau%header%a_contig == 1 .or. -ss_prop%tau%header%el_len + ss_prop%tau%dim_1%SM * ss_prop%tau%header%dv_smunit == 0 .and. -ss_prop%tau%dim_2%SM + ss_prop%tau%dim_1%SM * ss_prop%tau%dim_1%EX == 0 ) == .false. ) then
17429.                      call _f90_copy_to_dv( ss_prop%tau, t$7374 )
17431.                      _free( t$7375 )
17431.                   endif
17435.                   $I_L17428_184 = 1 + $I_L17428_184
17431.                   if ( $I_L17428_184 >= 1 + n_cloud_type ) exit
17431.                enddo
17431.             endif
17431.          endif
17431.       endif
17454.       if ( i_angular_integration == 1 ) then
17457.          call monochromatic_radiance_tseq( ierr, n_profile, n_layer, i_2stream, i_solver, i_scatter_method, l_scale_solar, adjust_solar_ke(1, 1), isolir, diff_planck(1, 1), l_ir_source_quad, diff_planck_2(1, 1), zen_0(1), zen_00(1, 1), flux_inc_direct(1), flux_inc_down(1), d_planck_flux_surface(1), rho_alb(1, 1), ss_prop, i_cloud, n_cloud_top, n_cloud_type, frac_cloud(1, id_ct, 1), n_region, k_clr, i_region_cloud(1), frac_region(1, id_ct, 1), w_free(1, id_ct), w_cloud(1, id_ct), cloud_overlap(1, -1 + id_ct, 1), n_column_slv(1), list_column_slv(1, 1), i_clm_lyr_chn(1, 1), i_clm_cld_typ(1, 1), area_column(1, 1), flux_direct(1, 0), flux_total(1, 1), l_clear, i_solver_clear, flux_direct_clear(1, 0), flux_total_clear(1, 1), nd_profile, nd_layer, nd_layer_clr, id_ct, nd_column, nd_cloud_type, nd_region, nd_overlap_coeff, nd_source_coeff, nd_max_order )
17496.       else if ( i_angular_integration == 3 ) then
17499.          call monochromatic_radiance_sph( ierr, n_profile, n_layer, n_order_phase, ms_min, ms_max, i_truncation, ls_local_trunc(0), accuracy_adaptive, euler_factor, i_sph_algorithm, i_sph_mode, l_rescale, ia_sph_mm(0), cg_coeff(1), uplm_zero(1), uplm_sol(1, 1), l_scale_solar, adjust_solar_ke(1, 1), isolir, diff_planck(1, 1), l_ir_source_quad, diff_planck_2(1, 1), zen_0(1), zen_00(1, 1), flux_inc_down(1), i_direct(1, 0), d_planck_flux_surface(1), ls_brdf_trunc, n_brdf_basis_fnc, rho_alb(1, 1), f_brdf(1, 0, 0, 0), brdf_sol(1, 1, 1), brdf_hemi(1, 1, 1), ss_prop, i_cloud, n_cloud_top, n_column_slv(1), list_column_slv(1, 1), i_clm_lyr_chn(1, 1), i_clm_cld_typ(1, 1), area_column(1, 1), n_viewing_level, i_rad_layer(1), frac_rad_layer(1), n_direction, direction(1, 1, 1), flux_direct(1, 0), flux_total(1, 1), radiance(1, 1, 1), j_radiance(1, 1), nd_profile, nd_layer, nd_layer_clr, id_ct, nd_column, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc, nd_viewing_level, nd_direction )
17499.       else if ( i_angular_integration == 2 ) then
17551.          tau_clr_f%header%a_contig = 1
17551.          tau_clr_f%dim_1%LB = 1
17551.          tau_clr_f%dim_1%EX = ( max( 0, nd_profile ) )
17551.          tau_clr_f%dim_1%SM = 1
17551.          tau_clr_f%dim_2%LB = 1
17551.          tau_clr_f%dim_2%EX = ( max( 0, nd_layer ) )
17551.          tau_clr_f%dim_2%SM = ( max( 0, nd_profile ) )
17551.          $_allo_P1(0) = 0x1000000000001L
17551.          $_allo_P1(1) = loc( tau_clr_f )
17551.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
17552.          if ( -1 + n_cloud_top > 0 ) then
17554.             $SC_ss_prop_I1 = ss_prop%tau_clr%dim_1%SM
17554.             $SC_ss_prop_I0 = ss_prop%tau_clr%dim_1%EX
17554.             $SC_ss_prop_I2 = ss_prop%tau_clr%dim_1%LB
17554.             $SC_ss_prop_I4 = ss_prop%tau_clr%dim_2%SM
17554.             $SC_ss_prop_I3 = ss_prop%tau_clr%dim_2%EX
17554.             $SC_ss_prop_I5 = ss_prop%tau_clr%dim_2%LB
17553.             if ( n_profile > 0 ) then
17552.                $I_L17552_208 = 0
17552.                do
17553.                   $I_L17553_186 = 0
17553. !dir$ ivdep
17553.                   do
17554.                      (tau_clr_f%base_addr)(1 + $I_L17553_186, 1 + $I_L17552_208, 0) = (ss_prop%tau_clr%base_addr)(1 + $I_L17553_186, 1 + $I_L17552_208, 0)
17555.                      $I_L17553_186 = 1 + $I_L17553_186
17553.                      if ( $I_L17553_186 >= n_profile ) exit
17553.                   enddo
17556.                   $I_L17552_208 = 1 + $I_L17552_208
17555.                   if ( $I_L17552_208 >= -1 + n_cloud_top ) exit
17555.                enddo
17555.             endif
17555.          endif
17557.          if ( n_layer + -n_cloud_top >= 0 ) then
17559.             $SC_ss_prop_I1 = ss_prop%tau_clr%dim_1%SM
17559.             $SC_ss_prop_I0 = ss_prop%tau_clr%dim_1%EX
17559.             $SC_ss_prop_I2 = ss_prop%tau_clr%dim_1%LB
17559.             $SC_ss_prop_I4 = ss_prop%tau_clr%dim_2%SM
17559.             $SC_ss_prop_I3 = ss_prop%tau_clr%dim_2%EX
17559.             $SC_ss_prop_I5 = ss_prop%tau_clr%dim_2%LB
17558.             if ( n_profile > 0 ) then
17557.                $I_L17557_210 = 0
17557.                do
17558.                   $I_L17558_188 = 0
17558. !dir$ ivdep
17558.                   do
17559.                      (tau_clr_f%base_addr)(1 + $I_L17558_188, n_cloud_top + $I_L17557_210, 0) = (ss_prop%tau_clr%base_addr)(1 + $I_L17558_188, n_cloud_top + $I_L17557_210, 0)
17560.                      $I_L17558_188 = 1 + $I_L17558_188
17558.                      if ( $I_L17558_188 >= n_profile ) exit
17558.                   enddo
17561.                   $I_L17557_210 = 1 + $I_L17557_210
17560.                   if ( $I_L17557_210 >= 1 + n_layer + -n_cloud_top ) exit
17560.                enddo
17560.             endif
17560.          endif
17563.          tm$1878 = loc( (tau_clr_f%base_addr)(1, 1, 0) )
17563.          tau = _copyin( (tau_clr_f%base_addr)(1, 1, 0) )
17563.          tm$1880 = loc( rho_alb(1, 1) )
17563.          albedo_surface_diff = _copyin( rho_alb(1, 1) )
17563.          tm$1882 = loc( flux_total(1, 1) )
17563.          flux_diffuse = _copyin( flux_total(1, 1) )
17563.          t$295 = nd_profile
17563.          t$296 = nd_layer
17563.          t$1985 = max( 0, nd_profile )
17563.          t$1986 = max( 0, nd_profile )
17563.          t$1987 = max( 0, nd_layer )
17563.          t$1988 = max( 0, nd_profile ) * max( 0, nd_layer )
17563.          t$297 = ( 2 + 2 * nd_layer )
17563.          t$1989 = max( 0, ( 2 + 2 * nd_layer ) )
17563.          t$1990 = max( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
17563.          t$1993 = 8 * max( 0, nd_profile ) * max( 0, nd_layer )
17563.          t$1994 = 8 * ( 7 + 8 * max( 0, nd_profile ) * max( 0, nd_layer ) ) / 8
17563.          t$1996 = t$1994 + 8 * max( 0, nd_profile ) * max( 0, nd_layer )
17563.          t$1997 = 8 * ( 7 + t$1994 + 8 * max( 0, nd_profile ) * max( 0, nd_layer ) ) / 8
17563.          t$1999 = t$1997 + 8 * max( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
17563.          t$2000 = 8 * ( 7 + t$1997 + 8 * max( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) ) ) / 8
17563.          t$2002 = t$2000 + 8 * max( 0, nd_profile )
17563.          t$2003 = 8 * ( 7 + t$2000 + 8 * max( 0, nd_profile ) ) / 8
17563.          t$2005 = t$2003 + 8 * max( 0, nd_profile )
17563.          t$1991 = int( _alloc( t$2003 + 8 * max( 0, nd_profile ) ), 8 )
17563.          t$1992 = t$1991
17563.          t$1995 = t$1994 + t$1991
17563.          t$1998 = t$1997 + t$1991
17563.          t$2001 = t$2000 + t$1991
17563.          t$2004 = t$2003 + t$1991
17563.          if ( n_profile > 0 ) then
17563.             $I_L17563_190 = 0
17563. !dir$ ivdep
17563.             do
17563.                source_ground_rad(1 + $I_L17563_190) = 3.1830988618379069e-1 * d_planck_flux_surface(1 + $I_L17563_190)
17563.                radiance_inc(1 + $I_L17563_190) = 3.1830988618379069e-1 * flux_inc_down(1 + $I_L17563_190)
17563.                $I_L17563_190 = 1 + $I_L17563_190
17563.                if ( $I_L17563_190 >= n_profile ) exit
17563.             enddo
17563.          endif
17563.          if ( n_layer > 0 ) then
17563.             if ( n_profile > 0 ) then
17563.                $I_L17563_212 = 0
17563.                do
17563.                   $I_L17563_192 = 0
17563. !dir$ ivdep
17563.                   do
17563.                      diff_planck_rad(1 + $I_L17563_192, 1 + $I_L17563_212) = 3.1830988618379069e-1 * diff_planck(1 + $I_L17563_192, 1 + $I_L17563_212)
17563.                      $I_L17563_192 = 1 + $I_L17563_192
17563.                      if ( $I_L17563_192 >= n_profile ) exit
17563.                   enddo
17563.                   $I_L17563_212 = 1 + $I_L17563_212
17563.                   if ( $I_L17563_212 >= n_layer ) exit
17563.                enddo
17563.             endif
17563.          endif
17563.          if ( 2 + 2 * n_layer > 0 ) then
17563.             if ( n_profile > 0 ) then
17563.                $I_L17563_214 = 0
17563.                do
17563.                   $I_L17563_194 = 0
17563. !dir$ ivdep
17563.                   do
17563.                      flux_diffuse(1 + $I_L17563_194, 1 + $I_L17563_214) = 0.0
17563.                      $I_L17563_194 = 1 + $I_L17563_194
17563.                      if ( $I_L17563_194 >= n_profile ) exit
17563.                   enddo
17563.                   $I_L17563_214 = 1 + $I_L17563_214
17563.                   if ( $I_L17563_214 >= 2 + 2 * n_layer ) exit
17563.                enddo
17563.             endif
17563.          endif
17563.          if ( n_order_gauss > 0 ) then
17563.             $I_L17563_224 = 0
17563.             do
17563.                $secant_ray_S15 = ( 2.0 * 1.0/( 1.0 + gauss_point(1 + $I_L17563_224, n_order_gauss) ) )
17563.                tm$1893 = loc( tau(1, 1) )
17563.                tau = _copyin( tau(1, 1) )
17563.                tm$1895 = loc( diff_planck_rad(1, 1) )
17563.                diff_planck = _copyin( diff_planck_rad(1, 1) )
17563.                tm$1897 = loc( flux_stream(1, 1) )
17563.                radiance = _copyin( flux_stream(1, 1) )
17563.                t$613 = nd_profile
17563.                t$614 = nd_layer
17563.                t$2396 = max( 0, nd_profile )
17563.                t$2397 = max( 0, nd_profile )
17563.                t$2398 = max( 0, nd_layer )
17563.                t$2399 = max( 0, nd_profile ) * max( 0, nd_layer )
17563.                t$615 = ( 2 + 2 * nd_layer )
17563.                t$2400 = max( 0, ( 2 + 2 * nd_layer ) )
17563.                t$2401 = max( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
17563.                t$2404 = 8 * max( 0, nd_profile ) * max( 0, nd_layer )
17563.                t$2405 = 8 * ( 7 + 8 * max( 0, nd_profile ) * max( 0, nd_layer ) ) / 8
17563.                t$2407 = t$2405 + 8 * max( 0, nd_profile ) * max( 0, nd_layer )
17563.                t$2408 = 8 * ( 7 + t$2405 + 8 * max( 0, nd_profile ) * max( 0, nd_layer ) ) / 8
17563.                t$2410 = t$2408 + 8 * max( 0, nd_profile ) * max( 0, nd_layer )
17563.                t$2402 = int( _alloc( t$2408 + 8 * max( 0, nd_profile ) * max( 0, nd_layer ) ), 8 )
17563.                t$2403 = t$2402
17563.                t$2406 = t$2405 + t$2402
17563.                t$2409 = t$2408 + t$2402
17563.                if ( n_layer > 0 ) then
17563.                   if ( n_profile > 0 ) then
17563.                      $I_L17563_216 = 0
17563.                      do
17563.                         $I_L17563_196 = 0
17563. !dir$ ivdep
17563.                         do
17563.                            $trans_WR0_R0 = _expn( -( $secant_ray_S15 * tau(1 + $I_L17563_196, 1 + $I_L17563_216) ) )
17563.                            trans(1 + $I_L17563_196, 1 + $I_L17563_216) = $trans_WR0_R0
17563.                            $source_up_WR0_R1 = ( diff_planck(1 + $I_L17563_196, 1 + $I_L17563_216) * ( 1.0000000149011612 + -$trans_WR0_R0 ) * 1.0/( 1.4901161193847656e-8 + $secant_ray_S15 * tau(1 + $I_L17563_196, 1 + $I_L17563_216) ) )
17563.                            source_up(1 + $I_L17563_196, 1 + $I_L17563_216) = $source_up_WR0_R1
17563.                            source_down(1 + $I_L17563_196, 1 + $I_L17563_216) = -$source_up_WR0_R1
17563.                            $I_L17563_196 = 1 + $I_L17563_196
17563.                            if ( $I_L17563_196 >= n_profile ) exit
17563.                         enddo
17563.                         $I_L17563_216 = 1 + $I_L17563_216
17563.                         if ( $I_L17563_216 >= n_layer ) exit
17563.                      enddo
17563.                   endif
17563.                endif
17563.                if ( n_profile > 0 ) then
17563.                   $I_L17563_198 = 0
17563. !dir$ ivdep
17563.                   do
17563.                      radiance(1 + $I_L17563_198, 2) = radiance_inc(1 + $I_L17563_198)
17563.                      $I_L17563_198 = 1 + $I_L17563_198
17563.                      if ( $I_L17563_198 >= n_profile ) exit
17563.                   enddo
17563.                endif
17563.                if ( n_layer > 0 ) then
17563.                   if ( n_profile > 0 ) then
17563.                      $I_L17563_218 = 0
17563.                      if ( n_layer >= 2 ) then
17563.                         $I_L17563_226 = 0
17563.                         do
17563.                            $I_L17563_200 = 0
17563. !dir$ ivdep
17563.                            do
17563.                               radiance(1 + $I_L17563_200, 4 + 4 * $I_L17563_226) = source_down(1 + $I_L17563_200, 1 + 2 * $I_L17563_226) + radiance(1 + $I_L17563_200, 2 + 4 * $I_L17563_226) * trans(1 + $I_L17563_200, 1 + 2 * $I_L17563_226)
17563.                               radiance(1 + $I_L17563_200, 6 + 4 * $I_L17563_226) = source_down(1 + $I_L17563_200, 2 + 2 * $I_L17563_226) + radiance(1 + $I_L17563_200, 4 + 4 * $I_L17563_226) * trans(1 + $I_L17563_200, 2 + 2 * $I_L17563_226)
17563.                               $I_L17563_200 = 1 + $I_L17563_200
17563.                               if ( $I_L17563_200 >= n_profile ) exit
17563.                            enddo
17563.                            $I_L17563_226 = 1 + $I_L17563_226
17563.                            if ( $I_L17563_226 >= _rsh( n_layer, 1 ) ) exit
17563.                         enddo
17563.                         $I_L17563_218 = and( 0xfffffffffffffffeUL, n_layer )
17563.                      endif
17563.                      if ( $I_L17563_218 < n_layer ) then
17563.                         $I_L17563_200 = 0
17563. !dir$ ivdep
17563.                         do
17563.                            radiance(1 + $I_L17563_200, 4 + 2 * $I_L17563_218) = source_down(1 + $I_L17563_200, 1 + $I_L17563_218) + trans(1 + $I_L17563_200, 1 + $I_L17563_218) * radiance(1 + $I_L17563_200, 2 + 2 * $I_L17563_218)
17563.                            $I_L17563_200 = 1 + $I_L17563_200
17563.                            if ( $I_L17563_200 >= n_profile ) exit
17563.                         enddo
17563.                      endif
17563.                   endif
17563.                endif
17563.                if ( n_profile > 0 ) then
17563.                   $I_L17563_202 = 0
17563. !dir$ ivdep
17563.                   do
17563.                      radiance(1 + $I_L17563_202, 1 + 2 * n_layer) = source_ground_rad(1 + $I_L17563_202) + albedo_surface_diff(1 + $I_L17563_202) * radiance(1 + $I_L17563_202, 2 + 2 * n_layer)
17563.                      $I_L17563_202 = 1 + $I_L17563_202
17563.                      if ( $I_L17563_202 >= n_profile ) exit
17563.                   enddo
17563.                endif
17563.                if ( n_layer > 0 ) then
17563.                   if ( n_profile > 0 ) then
17563.                      $I_L17563_220 = 0
17563.                      if ( n_layer >= 2 ) then
17563.                         $I_L17563_228 = 0
17563.                         do
17563.                            $I_L17563_204 = 0
17563. !dir$ ivdep
17563.                            do
17563.                               radiance(1 + $I_L17563_204, -1 + 2 * n_layer + -4 * $I_L17563_228) = source_up(1 + $I_L17563_204, n_layer + -2 * $I_L17563_228) + radiance(1 + $I_L17563_204, 1 + 2 * n_layer + -4 * $I_L17563_228) * trans(1 + $I_L17563_204, n_layer + -2 * $I_L17563_228)
17563.                               radiance(1 + $I_L17563_204, -3 + 2 * n_layer + -4 * $I_L17563_228) = source_up(1 + $I_L17563_204, -1 + n_layer + -2 * $I_L17563_228) + radiance(1 + $I_L17563_204, -1 + 2 * n_layer + -4 * $I_L17563_228) * trans(1 + $I_L17563_204, -1 + n_layer + -2 * $I_L17563_228)
17563.                               $I_L17563_204 = 1 + $I_L17563_204
17563.                               if ( $I_L17563_204 >= n_profile ) exit
17563.                            enddo
17563.                            $I_L17563_228 = 1 + $I_L17563_228
17563.                            if ( $I_L17563_228 >= _rsh( n_layer, 1 ) ) exit
17563.                         enddo
17563.                         $I_L17563_220 = and( 0xfffffffffffffffeUL, n_layer )
17563.                      endif
17563.                      if ( $I_L17563_220 < n_layer ) then
17563.                         $I_L17563_204 = 0
17563. !dir$ ivdep
17563.                         do
17563.                            radiance(1 + $I_L17563_204, -1 + 2 * n_layer + -2 * $I_L17563_220) = source_up(1 + $I_L17563_204, n_layer + -$I_L17563_220) + trans(1 + $I_L17563_204, n_layer + -$I_L17563_220) * radiance(1 + $I_L17563_204, 1 + 2 * n_layer + -2 * $I_L17563_220)
17563.                            $I_L17563_204 = 1 + $I_L17563_204
17563.                            if ( $I_L17563_204 >= n_profile ) exit
17563.                         enddo
17563.                      endif
17563.                   endif
17563.                endif
17563.                _free( t$2402 )
17563.                flux_stream(1, 1) = _copyout( radiance )
17563.                diff_planck_rad(1, 1) = _copyout( diff_planck )
17563.                tau(1, 1) = _copyout( tau )
17563.                $weight_stream_S26 = 1.5707963267948966 * gauss_weight(1 + $I_L17563_224, n_order_gauss) * ( 1.0 + gauss_point(1 + $I_L17563_224, n_order_gauss) )
17563.                if ( 2 + 2 * n_layer > 0 ) then
17563.                   if ( n_profile > 0 ) then
17563.                      $I_L17563_222 = 0
17563.                      do
17563.                         $I_L17563_206 = 0
17563. !dir$ ivdep
17563.                         do
17563.                            flux_diffuse(1 + $I_L17563_206, 1 + $I_L17563_222) = flux_diffuse(1 + $I_L17563_206, 1 + $I_L17563_222) + $weight_stream_S26 * flux_stream(1 + $I_L17563_206, 1 + $I_L17563_222)
17563.                            $I_L17563_206 = 1 + $I_L17563_206
17563.                            if ( $I_L17563_206 >= n_profile ) exit
17563.                         enddo
17563.                         $I_L17563_222 = 1 + $I_L17563_222
17563.                         if ( $I_L17563_222 >= 2 + 2 * n_layer ) exit
17563.                      enddo
17563.                   endif
17563.                endif
17563.                $I_L17563_224 = 1 + $I_L17563_224
17563.                if ( $I_L17563_224 >= n_order_gauss ) exit
17563.             enddo
17563.          endif
17563.          _free( t$1991 )
17563.          flux_total(1, 1) = _copyout( flux_diffuse )
17563.          rho_alb(1, 1) = _copyout( albedo_surface_diff )
17563.          (tau_clr_f%base_addr)(1, 1, 0) = _copyout( tau )
17574.          $_allo_P2(0) = 0x1000000000001L
17574.          $_allo_P2(1) = loc( tau_clr_f )
17574.          call __deallocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
17574.          tau_clr_f%header%assoc = 0
17574.       endif
17385.       $_allo_P3(0) = 0x1000000000001L
17385.       $_allo_P3(1) = loc( tau_clr_f )
17385.       call _dealloc( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
17581.       return
17581.       end
17581.       
17602.       
17602.       subroutine monochromatic_radiance_sph( ierr, n_profile, n_layer, n_order_phase, ms_min, ms_max, i_truncation, ls_local_trunc, accuracy_adaptive, euler_factor, i_sph_algorithm, i_sph_mode, l_rescale, ia_sph_mm, cg_coeff, uplm_zero, uplm_sol, l_scale_solar, adjust_solar_ke, isolir, diff_planck, l_ir_source_quad, diff_planck_2, zen_0, zen_00, flux_inc_down, i_direct, d_planck_flux_surface, ls_brdf_trunc, n_brdf_basis_fnc, rho_alb, f_brdf, brdf_sol, brdf_hemi, ss_prop, i_cloud, n_cloud_top, n_column_slv, list_column_slv, i_clm_lyr_chn, i_clm_cld_typ, area_column, n_viewing_level, i_rad_layer, frac_rad_layer, n_direction, direction, flux_direct, flux_total, radiance, j_radiance, nd_profile, nd_layer, nd_layer_clr, id_ct, nd_column, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc, nd_viewing_level, nd_direction )
17602.       t$635 = nd_max_order
17602.       t$2473 = 1 + nd_max_order
17725.       t$2474 = _zla( 0, 1 + nd_max_order )
17602.       t$636 = nd_sph_coeff
17735.       t$2475 = _zla( 0, nd_sph_coeff )
17602.       t$637 = nd_profile
17739.       t$2476 = _zla( 0, nd_profile )
17602.       t$2477 = _zla( 0, nd_profile )
17602.       t$2478 = _zla( 0, nd_sph_coeff ) * _zla( 0, nd_profile )
17602.       t$638 = nd_layer
17752.       t$2479 = _zla( 0, nd_layer )
17602.       t$2480 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
17602.       t$2481 = 1 + nd_layer
17779.       t$2482 = _zla( 0, 1 + nd_layer )
17602.       t$2483 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
17602.       t$639 = nd_brdf_basis_fnc
17793.       t$2484 = _zla( 0, nd_brdf_basis_fnc )
17602.       t$2485 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
17602.       t$640 = nd_brdf_trunc / 2
17602.       t$641 = nd_brdf_trunc
17602.       t$2486 = _zla( 0, nd_brdf_basis_fnc )
17602.       t$2487 = 1 + t$640
17795.       t$2488 = _zla( 0, 1 + t$640 )
17602.       t$2489 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$640 )
17602.       t$2490 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$640 ) * _zla( 0, 1 + t$640 )
17602.       t$2491 = 1 + nd_brdf_trunc
17795.       t$2492 = _zla( 0, 1 + nd_brdf_trunc )
17602.       t$2493 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$640 ) * _zla( 0, 1 + t$640 ) * _zla( 0, 1 + nd_brdf_trunc )
17602.       t$642 = nd_direction
17602.       t$2494 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
17798.       t$2495 = _zla( 0, nd_direction )
17602.       t$2496 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_direction )
 2600.       if ( t$27 == 0 ) then
 2600.          t$2501(1) = 4
 2600.          t$2502(1) = 0
 2600.          t$2503(1) = 0
 2600.          t$2498(1) = int( loc( t$26 ), 8 )
 2600.          t$2499(1) = 0
 2600.          t$2500(1) = int( loc( t$2497 ), 8 )
 2600.          t$27 = __get_dynamic_type( 2, t$2498(1), t$2501(1), 1, t$2499(1), t$2500(1), t$2502(1), t$2503(1) )
 2600.       endif
17602.       t$643 = nd_column
17822.       t$2505 = max( 0, nd_column )
17602.       t$2506 = _zla( 0, nd_profile ) * max( 0, nd_column )
17602.       t$644 = nd_viewing_level
17837.       t$2507 = max( 0, nd_viewing_level )
17602.       t$645 = nd_radiance_profile
17848.       t$2508 = max( 0, nd_radiance_profile )
17602.       t$2509 = max( 0, nd_radiance_profile )
17602.       t$2510 = _zla( 0, nd_direction ) * max( 0, nd_radiance_profile )
17602.       t$2511 = 2 * _zla( 0, nd_direction ) * max( 0, nd_radiance_profile )
17602.       t$646 = nd_flux_profile
17853.       t$2512 = max( 0, nd_flux_profile )
17602.       t$2513 = max( 0, nd_flux_profile )
17602.       t$2514 = max( 0, nd_flux_profile ) * _zla( 0, 1 + nd_layer )
17602.       t$647 = ( 2 + 2 * nd_layer )
17855.       t$2515 = max( 0, ( 2 + 2 * nd_layer ) )
17602.       t$2516 = max( 0, nd_flux_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
17602.       t$2517 = max( 0, nd_viewing_level ) * max( 0, nd_radiance_profile )
17602.       t$2518 = _zla( 0, nd_direction ) * max( 0, nd_viewing_level ) * max( 0, nd_radiance_profile )
17602.       t$648 = nd_j_profile
17865.       t$2519 = max( 0, nd_j_profile )
17602.       t$2520 = max( 0, nd_j_profile )
17897.       t$2521 = max( 0, nd_viewing_level ) * max( 0, nd_j_profile )
17893.       forward_scatter_clr_f = $_StaticDV_P0
17893.       forward_scatter_clr_f%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
17893.       forward_scatter_clr_f%header%el_len = 64
17893.       forward_scatter_clr_f%header%assoc = 0
17893.       forward_scatter_clr_f%header%ptr_alloc = 0
17893.       forward_scatter_clr_f%header%p_or_a = 2
17893.       forward_scatter_clr_f%header%a_contig = 1
17893.       forward_scatter_clr_f%header%n_dim = 2
17893.       forward_scatter_clr_f%header%orig_base = 0
17893.       forward_scatter_clr_f%header%orig_size = 0
17893.       forward_scatter_clr_f%header%n_codim = 0
17893.       forward_scatter_clr_f%header%dv_versn = 2
17893.       forward_scatter_clr_f%header%dv_smunit = 64
17893.       forward_scatter_clr_f%header%d_type = 0
17893.       forward_scatter_clr_f%header%n_params = 0
17893.       forward_scatter_clr_f%header%d_type_idx = 13
17893.       forward_scatter_clr_f%dim_1%LB = 1
17893.       forward_scatter_clr_f%dim_1%EX = 0
17893.       forward_scatter_clr_f%dim_1%SM = 1
17893.       forward_scatter_clr_f%dim_2%LB = 1
17893.       forward_scatter_clr_f%dim_2%EX = 0
17893.       forward_scatter_clr_f%dim_2%SM = 1
17895.       omega_clr_f = $_StaticDV_P1
17895.       omega_clr_f%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
17895.       omega_clr_f%header%el_len = 64
17895.       omega_clr_f%header%assoc = 0
17895.       omega_clr_f%header%ptr_alloc = 0
17895.       omega_clr_f%header%p_or_a = 2
17895.       omega_clr_f%header%a_contig = 1
17895.       omega_clr_f%header%n_dim = 2
17895.       omega_clr_f%header%orig_base = 0
17895.       omega_clr_f%header%orig_size = 0
17895.       omega_clr_f%header%n_codim = 0
17895.       omega_clr_f%header%dv_versn = 2
17895.       omega_clr_f%header%dv_smunit = 64
17895.       omega_clr_f%header%d_type = 0
17895.       omega_clr_f%header%n_params = 0
17895.       omega_clr_f%header%d_type_idx = 13
17895.       omega_clr_f%dim_1%LB = 1
17895.       omega_clr_f%dim_1%EX = 0
17895.       omega_clr_f%dim_1%SM = 1
17895.       omega_clr_f%dim_2%LB = 1
17895.       omega_clr_f%dim_2%EX = 0
17895.       omega_clr_f%dim_2%SM = 1
17899.       phase_fnc_clr_f = $_StaticDV_P2
17899.       phase_fnc_clr_f%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
17899.       phase_fnc_clr_f%header%el_len = 64
17899.       phase_fnc_clr_f%header%assoc = 0
17899.       phase_fnc_clr_f%header%ptr_alloc = 0
17899.       phase_fnc_clr_f%header%p_or_a = 2
17899.       phase_fnc_clr_f%header%a_contig = 1
17899.       phase_fnc_clr_f%header%n_dim = 3
17899.       phase_fnc_clr_f%header%orig_base = 0
17899.       phase_fnc_clr_f%header%orig_size = 0
17899.       phase_fnc_clr_f%header%n_codim = 0
17899.       phase_fnc_clr_f%header%dv_versn = 2
17899.       phase_fnc_clr_f%header%dv_smunit = 64
17899.       phase_fnc_clr_f%header%d_type = 0
17899.       phase_fnc_clr_f%header%n_params = 0
17899.       phase_fnc_clr_f%header%d_type_idx = 13
17899.       phase_fnc_clr_f%dim_1%LB = 1
17899.       phase_fnc_clr_f%dim_1%EX = 0
17899.       phase_fnc_clr_f%dim_1%SM = 1
17899.       phase_fnc_clr_f%dim_2%LB = 1
17899.       phase_fnc_clr_f%dim_2%EX = 0
17899.       phase_fnc_clr_f%dim_2%SM = 1
17899.       phase_fnc_clr_f%dim_3%LB = 1
17899.       phase_fnc_clr_f%dim_3%EX = 0
17899.       phase_fnc_clr_f%dim_3%SM = 1
17891.       phase_fnc_solar_clr_f = $_StaticDV_P3
17891.       phase_fnc_solar_clr_f%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
17891.       phase_fnc_solar_clr_f%header%el_len = 64
17891.       phase_fnc_solar_clr_f%header%assoc = 0
17891.       phase_fnc_solar_clr_f%header%ptr_alloc = 0
17891.       phase_fnc_solar_clr_f%header%p_or_a = 2
17891.       phase_fnc_solar_clr_f%header%a_contig = 1
17891.       phase_fnc_solar_clr_f%header%n_dim = 3
17891.       phase_fnc_solar_clr_f%header%orig_base = 0
17891.       phase_fnc_solar_clr_f%header%orig_size = 0
17891.       phase_fnc_solar_clr_f%header%n_codim = 0
17891.       phase_fnc_solar_clr_f%header%dv_versn = 2
17891.       phase_fnc_solar_clr_f%header%dv_smunit = 64
17891.       phase_fnc_solar_clr_f%header%d_type = 0
17891.       phase_fnc_solar_clr_f%header%n_params = 0
17891.       phase_fnc_solar_clr_f%header%d_type_idx = 13
17891.       phase_fnc_solar_clr_f%dim_1%LB = 1
17891.       phase_fnc_solar_clr_f%dim_1%EX = 0
17891.       phase_fnc_solar_clr_f%dim_1%SM = 1
17891.       phase_fnc_solar_clr_f%dim_2%LB = 1
17891.       phase_fnc_solar_clr_f%dim_2%EX = 0
17891.       phase_fnc_solar_clr_f%dim_2%SM = 1
17891.       phase_fnc_solar_clr_f%dim_3%LB = 1
17891.       phase_fnc_solar_clr_f%dim_3%EX = 0
17891.       phase_fnc_solar_clr_f%dim_3%SM = 1
17602.       tau_clr_f = $_StaticDV_P4
17602.       tau_clr_f%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
17602.       tau_clr_f%header%el_len = 64
17602.       tau_clr_f%header%assoc = 0
17602.       tau_clr_f%header%ptr_alloc = 0
17602.       tau_clr_f%header%p_or_a = 2
17602.       tau_clr_f%header%a_contig = 1
17602.       tau_clr_f%header%n_dim = 2
17602.       tau_clr_f%header%orig_base = 0
17602.       tau_clr_f%header%orig_size = 0
17602.       tau_clr_f%header%n_codim = 0
17602.       tau_clr_f%header%dv_versn = 2
17602.       tau_clr_f%header%dv_smunit = 64
17602.       tau_clr_f%header%d_type = 0
17602.       tau_clr_f%header%n_params = 0
17602.       tau_clr_f%header%d_type_idx = 13
17602.       tau_clr_f%dim_1%LB = 1
17602.       tau_clr_f%dim_1%EX = 0
17602.       tau_clr_f%dim_1%SM = 1
17602.       tau_clr_f%dim_2%LB = 1
17602.       tau_clr_f%dim_2%EX = 0
17602.       tau_clr_f%dim_2%SM = 1
17912.       if ( i_cloud == 5 ) then
17916.          nd_red_eigensystem = ( 1 + nd_max_order ) / 2
17917.          nd_sph_equation = 2 * nd_layer * ( 1 + nd_max_order ) / 2
17918.          nd_sph_diagonal = 6 * ( 1 + nd_max_order ) / 2
17919.          if ( i_sph_algorithm == 1 ) then
17920.             nd_sph_cf_weight = 1 + nd_max_order
17921.             nd_sph_u_range = 2 * ( 1 + nd_max_order ) / 2
17922.          else if ( i_sph_algorithm == 2 ) then
17923.             nd_sph_cf_weight = nd_direction
17924.             nd_sph_u_range = 2 * nd_layer * ( 1 + nd_max_order ) / 2
17924.          endif
17928.          tau_clr_f%header%a_contig = 1
17928.          tau_clr_f%dim_1%LB = 1
17928.          tau_clr_f%dim_1%EX = ( max( 0, nd_profile ) )
17928.          tau_clr_f%dim_1%SM = 1
17928.          tau_clr_f%dim_2%LB = 1
17928.          tau_clr_f%dim_2%EX = ( max( 0, nd_layer ) )
17928.          tau_clr_f%dim_2%SM = ( max( 0, nd_profile ) )
17928.          $_allo_P5(0) = 0x1000000000001L
17928.          $_allo_P5(1) = loc( tau_clr_f )
17928.          call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
17929.          omega_clr_f%header%a_contig = 1
17929.          omega_clr_f%dim_1%LB = 1
17929.          omega_clr_f%dim_1%EX = ( max( 0, nd_profile ) )
17929.          omega_clr_f%dim_1%SM = 1
17929.          omega_clr_f%dim_2%LB = 1
17929.          omega_clr_f%dim_2%EX = ( max( 0, nd_layer ) )
17929.          omega_clr_f%dim_2%SM = ( max( 0, nd_profile ) )
17929.          $_allo_P6(0) = 0x1000000000001L
17929.          $_allo_P6(1) = loc( omega_clr_f )
17929.          call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
17930.          phase_fnc_clr_f%header%a_contig = 1
17930.          phase_fnc_clr_f%dim_1%LB = 1
17930.          phase_fnc_clr_f%dim_1%EX = ( max( 0, nd_profile ) )
17930.          phase_fnc_clr_f%dim_1%SM = 1
17930.          phase_fnc_clr_f%dim_2%LB = 1
17930.          phase_fnc_clr_f%dim_2%EX = ( max( 0, nd_layer ) )
17930.          phase_fnc_clr_f%dim_2%SM = ( max( 0, nd_profile ) )
17930.          phase_fnc_clr_f%dim_3%LB = 1
17930.          phase_fnc_clr_f%dim_3%EX = ( max( 0, nd_max_order ) )
17930.          phase_fnc_clr_f%dim_3%SM = ( max( 0, nd_profile ) * max( 0, nd_layer ) )
17930.          $_allo_P7(0) = 0x1000000000001L
17930.          $_allo_P7(1) = loc( phase_fnc_clr_f )
17930.          call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
17931.          forward_scatter_clr_f%header%a_contig = 1
17931.          forward_scatter_clr_f%dim_1%LB = 1
17931.          forward_scatter_clr_f%dim_1%EX = ( max( 0, nd_profile ) )
17931.          forward_scatter_clr_f%dim_1%SM = 1
17931.          forward_scatter_clr_f%dim_2%LB = 1
17931.          forward_scatter_clr_f%dim_2%EX = ( max( 0, nd_layer ) )
17931.          forward_scatter_clr_f%dim_2%SM = ( max( 0, nd_profile ) )
17931.          $_allo_P8(0) = 0x1000000000001L
17931.          $_allo_P8(1) = loc( forward_scatter_clr_f )
17931.          call __allocate( $_allo_P8, 0, 0, _fcd( 0, 0 ) )
17932.          phase_fnc_solar_clr_f%header%a_contig = 1
17932.          phase_fnc_solar_clr_f%dim_1%LB = 1
17932.          phase_fnc_solar_clr_f%dim_1%EX = ( max( 0, nd_radiance_profile ) )
17932.          phase_fnc_solar_clr_f%dim_1%SM = 1
17932.          phase_fnc_solar_clr_f%dim_2%LB = 1
17932.          phase_fnc_solar_clr_f%dim_2%EX = ( max( 0, nd_layer ) )
17932.          phase_fnc_solar_clr_f%dim_2%SM = ( max( 0, nd_radiance_profile ) )
17932.          phase_fnc_solar_clr_f%dim_3%LB = 1
17932.          phase_fnc_solar_clr_f%dim_3%EX = ( max( 0, nd_direction ) )
17932.          phase_fnc_solar_clr_f%dim_3%SM = ( max( 0, nd_layer ) * max( 0, nd_radiance_profile ) )
17932.          $_allo_P9(0) = 0x1000000000001L
17932.          $_allo_P9(1) = loc( phase_fnc_solar_clr_f )
17932.          call __allocate( $_allo_P9, 0, 0, _fcd( 0, 0 ) )
17937.          t$7427 = 0
17937.          t$7428 = 0
17937.          t$7432 = 0
17937.          if ( ss_prop%tau_clr%header%a_contig == 1 ) then
17937. !dir$ suppress (ss_prop%tau_clr%base_addr)(ss_prop%tau_clr%dim_1%LB, ss_prop%tau_clr%dim_2%LB, 0)
17937.             t$7426 = loc( (ss_prop%tau_clr%base_addr)(ss_prop%tau_clr%dim_1%LB, ss_prop%tau_clr%dim_2%LB, 0) )
17937.          else
17937.             t$7427 = ss_prop%tau_clr%dim_1%EX
17937.             t$7428 = ss_prop%tau_clr%dim_2%EX
17937.             t$7432 = int( _alloc( max( 0, 8 * max( 0, ss_prop%tau_clr%dim_2%EX ) * max( 0, ss_prop%tau_clr%dim_1%EX ) ) ), 8 )
17935.             call _f90_copy_from_dv( t$7431, ss_prop%tau_clr )
17937. !dir$ suppress t$7431
17937.             t$7426 = loc( t$7431 )
17937.          endif
17937.          t$7434 = 0
17937.          t$7435 = 0
17937.          t$7439 = 0
17937.          if ( ss_prop%omega_clr%header%a_contig == 1 ) then
17937. !dir$ suppress (ss_prop%omega_clr%base_addr)(ss_prop%omega_clr%dim_1%LB, ss_prop%omega_clr%dim_2%LB, 0)
17937.             t$7433 = loc( (ss_prop%omega_clr%base_addr)(ss_prop%omega_clr%dim_1%LB, ss_prop%omega_clr%dim_2%LB, 0) )
17937.          else
17937.             t$7434 = ss_prop%omega_clr%dim_1%EX
17937.             t$7435 = ss_prop%omega_clr%dim_2%EX
17937.             t$7439 = int( _alloc( max( 0, 8 * max( 0, ss_prop%omega_clr%dim_2%EX ) * max( 0, ss_prop%omega_clr%dim_1%EX ) ) ), 8 )
17935.             call _f90_copy_from_dv( t$7438, ss_prop%omega_clr )
17937. !dir$ suppress t$7438
17937.             t$7433 = loc( t$7438 )
17937.          endif
17937.          t$7441 = 0
17937.          t$7442 = 0
17937.          t$7443 = 0
17937.          t$7448 = 0
17937.          if ( ss_prop%phase_fnc_clr%header%a_contig == 1 ) then
17937. !dir$ suppress (ss_prop%phase_fnc_clr%base_addr)(ss_prop%phase_fnc_clr%dim_1%LB, ss_prop%phase_fnc_clr%dim_2%LB, ss_prop%phase_fnc_clr%dim_3%LB, 0)
17937.             t$7440 = loc( (ss_prop%phase_fnc_clr%base_addr)(ss_prop%phase_fnc_clr%dim_1%LB, ss_prop%phase_fnc_clr%dim_2%LB, ss_prop%phase_fnc_clr%dim_3%LB, 0) )
17937.          else
17937.             t$7441 = ss_prop%phase_fnc_clr%dim_1%EX
17937.             t$7442 = ss_prop%phase_fnc_clr%dim_2%EX
17937.             t$7443 = ss_prop%phase_fnc_clr%dim_3%EX
17937.             t$7448 = int( _alloc( max( 0, 8 * max( 0, ss_prop%phase_fnc_clr%dim_3%EX ) * max( 0, ss_prop%phase_fnc_clr%dim_2%EX ) * max( 0, ss_prop%phase_fnc_clr%dim_1%EX ) ) ), 8 )
17935.             call _f90_copy_from_dv( t$7447, ss_prop%phase_fnc_clr )
17937. !dir$ suppress t$7447
17937.             t$7440 = loc( t$7447 )
17937.          endif
17938.          t$7450 = 0
17938.          t$7451 = 0
17938.          t$7452 = 0
17938.          t$7457 = 0
17938.          if ( ss_prop%tau%header%a_contig == 1 ) then
17938. !dir$ suppress (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, ss_prop%tau%dim_3%LB, 0)
17938.             t$7449 = loc( (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, ss_prop%tau%dim_3%LB, 0) )
17938.          else
17938.             t$7450 = ss_prop%tau%dim_1%EX
17938.             t$7451 = ss_prop%tau%dim_2%EX
17938.             t$7452 = ss_prop%tau%dim_3%EX
17938.             t$7457 = int( _alloc( max( 0, 8 * max( 0, ss_prop%tau%dim_3%EX ) * max( 0, ss_prop%tau%dim_2%EX ) * max( 0, ss_prop%tau%dim_1%EX ) ) ), 8 )
17935.             call _f90_copy_from_dv( t$7456, ss_prop%tau )
17938. !dir$ suppress t$7456
17938.             t$7449 = loc( t$7456 )
17938.          endif
17938.          t$7459 = 0
17938.          t$7460 = 0
17938.          t$7461 = 0
17938.          t$7466 = 0
17938.          if ( ss_prop%omega%header%a_contig == 1 ) then
17938. !dir$ suppress (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, ss_prop%omega%dim_3%LB, 0)
17938.             t$7458 = loc( (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, ss_prop%omega%dim_3%LB, 0) )
17938.          else
17938.             t$7459 = ss_prop%omega%dim_1%EX
17938.             t$7460 = ss_prop%omega%dim_2%EX
17938.             t$7461 = ss_prop%omega%dim_3%EX
17938.             t$7466 = int( _alloc( max( 0, 8 * max( 0, ss_prop%omega%dim_3%EX ) * max( 0, ss_prop%omega%dim_2%EX ) * max( 0, ss_prop%omega%dim_1%EX ) ) ), 8 )
17935.             call _f90_copy_from_dv( t$7465, ss_prop%omega )
17938. !dir$ suppress t$7465
17938.             t$7458 = loc( t$7465 )
17938.          endif
17938.          t$7468 = 0
17938.          t$7469 = 0
17938.          t$7470 = 0
17938.          t$7471 = 0
17938.          t$7477 = 0
17938.          if ( ss_prop%phase_fnc%header%a_contig == 1 ) then
17938. !dir$ suppress (ss_prop%phase_fnc%base_addr)(ss_prop%phase_fnc%dim_1%LB, ss_prop%phase_fnc%dim_2%LB, ss_prop%phase_fnc%dim_3%LB, ss_prop%phase_fnc%dim_4%LB, 0)
17938.             t$7467 = loc( (ss_prop%phase_fnc%base_addr)(ss_prop%phase_fnc%dim_1%LB, ss_prop%phase_fnc%dim_2%LB, ss_prop%phase_fnc%dim_3%LB, ss_prop%phase_fnc%dim_4%LB, 0) )
17938.          else
17938.             t$7468 = ss_prop%phase_fnc%dim_1%EX
17938.             t$7469 = ss_prop%phase_fnc%dim_2%EX
17938.             t$7470 = ss_prop%phase_fnc%dim_3%EX
17938.             t$7471 = ss_prop%phase_fnc%dim_4%EX
17938.             t$7477 = int( _alloc( max( 0, 8 * max( 0, ss_prop%phase_fnc%dim_4%EX ) * max( 0, ss_prop%phase_fnc%dim_3%EX ) * max( 0, ss_prop%phase_fnc%dim_2%EX ) * max( 0, ss_prop%phase_fnc%dim_1%EX ) ) ), 8 )
17935.             call _f90_copy_from_dv( t$7476, ss_prop%phase_fnc )
17938. !dir$ suppress t$7476
17938.             t$7467 = loc( t$7476 )
17938.          endif
17935.          call copy_clr_full( n_profile, n_layer, n_cloud_top, n_order_phase, t$7426, t$7433, t$7440, t$7449, t$7458, t$7467, (tau_clr_f%base_addr)(1, 1, 0), (omega_clr_f%base_addr)(1, 1, 0), (phase_fnc_clr_f%base_addr)(1, 1, 1, 0), nd_profile, nd_layer, nd_layer_clr, id_ct, nd_max_order )
17938.          if ( ss_prop%phase_fnc%header%a_contig /= 1 ) then
17938.             _free( t$7477 )
17938.          endif
17938.          if ( ss_prop%omega%header%a_contig /= 1 ) then
17938.             _free( t$7466 )
17938.          endif
17938.          if ( ss_prop%tau%header%a_contig /= 1 ) then
17938.             _free( t$7457 )
17938.          endif
17937.          if ( ss_prop%phase_fnc_clr%header%a_contig /= 1 ) then
17937.             _free( t$7448 )
17937.          endif
17937.          if ( ss_prop%omega_clr%header%a_contig /= 1 ) then
17937.             _free( t$7439 )
17937.          endif
17937.          if ( ss_prop%tau_clr%header%a_contig /= 1 ) then
17937.             _free( t$7432 )
17937.          endif
17943.          if ( i_sph_algorithm == 2 ) then
17943.             if ( isolir == 1 ) then
17947.                t$7479 = 0
17947.                t$7480 = 0
17947.                t$7484 = 0
17947.                if ( ss_prop%forward_scatter_clr%header%a_contig == 1 ) then
17947. !dir$ suppress (ss_prop%forward_scatter_clr%base_addr)(ss_prop%forward_scatter_clr%dim_1%LB, ss_prop%forward_scatter_clr%dim_2%LB, 0)
17947.                   t$7478 = loc( (ss_prop%forward_scatter_clr%base_addr)(ss_prop%forward_scatter_clr%dim_1%LB, ss_prop%forward_scatter_clr%dim_2%LB, 0) )
17947.                else
17947.                   t$7479 = ss_prop%forward_scatter_clr%dim_1%EX
17947.                   t$7480 = ss_prop%forward_scatter_clr%dim_2%EX
17947.                   t$7484 = int( _alloc( max( 0, 8 * max( 0, ss_prop%forward_scatter_clr%dim_2%EX ) * max( 0, ss_prop%forward_scatter_clr%dim_1%EX ) ) ), 8 )
17945.                   call _f90_copy_from_dv( t$7483, ss_prop%forward_scatter_clr )
17947. !dir$ suppress t$7483
17947.                   t$7478 = loc( t$7483 )
17947.                endif
17948.                t$7486 = 0
17948.                t$7487 = 0
17948.                t$7488 = 0
17948.                t$7493 = 0
17948.                if ( ss_prop%phase_fnc_solar_clr%header%a_contig == 1 ) then
17948. !dir$ suppress (ss_prop%phase_fnc_solar_clr%base_addr)(ss_prop%phase_fnc_solar_clr%dim_1%LB, ss_prop%phase_fnc_solar_clr%dim_2%LB, ss_prop%phase_fnc_solar_clr%dim_3%LB, 0)
17948.                   t$7485 = loc( (ss_prop%phase_fnc_solar_clr%base_addr)(ss_prop%phase_fnc_solar_clr%dim_1%LB, ss_prop%phase_fnc_solar_clr%dim_2%LB, ss_prop%phase_fnc_solar_clr%dim_3%LB, 0) )
17948.                else
17948.                   t$7486 = ss_prop%phase_fnc_solar_clr%dim_1%EX
17948.                   t$7487 = ss_prop%phase_fnc_solar_clr%dim_2%EX
17948.                   t$7488 = ss_prop%phase_fnc_solar_clr%dim_3%EX
17948.                   t$7493 = int( _alloc( max( 0, 8 * max( 0, ss_prop%phase_fnc_solar_clr%dim_3%EX ) * max( 0, ss_prop%phase_fnc_solar_clr%dim_2%EX ) * max( 0, ss_prop%phase_fnc_solar_clr%dim_1%EX ) ) ), 8 )
17945.                   call _f90_copy_from_dv( t$7492, ss_prop%phase_fnc_solar_clr )
17948. !dir$ suppress t$7492
17948.                   t$7485 = loc( t$7492 )
17948.                endif
17949.                t$7495 = 0
17949.                t$7496 = 0
17949.                t$7497 = 0
17949.                t$7502 = 0
17949.                if ( ss_prop%forward_scatter%header%a_contig == 1 ) then
17949. !dir$ suppress (ss_prop%forward_scatter%base_addr)(ss_prop%forward_scatter%dim_1%LB, ss_prop%forward_scatter%dim_2%LB, ss_prop%forward_scatter%dim_3%LB, 0)
17949.                   t$7494 = loc( (ss_prop%forward_scatter%base_addr)(ss_prop%forward_scatter%dim_1%LB, ss_prop%forward_scatter%dim_2%LB, ss_prop%forward_scatter%dim_3%LB, 0) )
17949.                else
17949.                   t$7495 = ss_prop%forward_scatter%dim_1%EX
17949.                   t$7496 = ss_prop%forward_scatter%dim_2%EX
17949.                   t$7497 = ss_prop%forward_scatter%dim_3%EX
17949.                   t$7502 = int( _alloc( max( 0, 8 * max( 0, ss_prop%forward_scatter%dim_3%EX ) * max( 0, ss_prop%forward_scatter%dim_2%EX ) * max( 0, ss_prop%forward_scatter%dim_1%EX ) ) ), 8 )
17945.                   call _f90_copy_from_dv( t$7501, ss_prop%forward_scatter )
17949. !dir$ suppress t$7501
17949.                   t$7494 = loc( t$7501 )
17949.                endif
17949.                t$7504 = 0
17949.                t$7505 = 0
17949.                t$7506 = 0
17949.                t$7507 = 0
17949.                t$7513 = 0
17949.                if ( ss_prop%phase_fnc_solar%header%a_contig == 1 ) then
17949. !dir$ suppress (ss_prop%phase_fnc_solar%base_addr)(ss_prop%phase_fnc_solar%dim_1%LB, ss_prop%phase_fnc_solar%dim_2%LB, ss_prop%phase_fnc_solar%dim_3%LB, ss_prop%phase_fnc_solar%dim_4%LB, 0)
17949.                   t$7503 = loc( (ss_prop%phase_fnc_solar%base_addr)(ss_prop%phase_fnc_solar%dim_1%LB, ss_prop%phase_fnc_solar%dim_2%LB, ss_prop%phase_fnc_solar%dim_3%LB, ss_prop%phase_fnc_solar%dim_4%LB, 0) )
17949.                else
17949.                   t$7504 = ss_prop%phase_fnc_solar%dim_1%EX
17949.                   t$7505 = ss_prop%phase_fnc_solar%dim_2%EX
17949.                   t$7506 = ss_prop%phase_fnc_solar%dim_3%EX
17949.                   t$7507 = ss_prop%phase_fnc_solar%dim_4%EX
17949.                   t$7513 = int( _alloc( max( 0, 8 * max( 0, ss_prop%phase_fnc_solar%dim_4%EX ) * max( 0, ss_prop%phase_fnc_solar%dim_3%EX ) * max( 0, ss_prop%phase_fnc_solar%dim_2%EX ) * max( 0, ss_prop%phase_fnc_solar%dim_1%EX ) ) ), 8 )
17945.                   call _f90_copy_from_dv( t$7512, ss_prop%phase_fnc_solar )
17949. !dir$ suppress t$7512
17949.                   t$7503 = loc( t$7512 )
17949.                endif
17945.                call copy_clr_sol( n_profile, n_layer, n_cloud_top, n_direction, l_rescale, t$7478, t$7485, t$7494, t$7503, (forward_scatter_clr_f%base_addr)(1, 1, 0), (phase_fnc_solar_clr_f%base_addr)(1, 1, 1, 0), nd_profile, nd_layer, nd_layer_clr, id_ct, nd_direction )
17949.                if ( ss_prop%phase_fnc_solar%header%a_contig /= 1 ) then
17949.                   _free( t$7513 )
17949.                endif
17949.                if ( ss_prop%forward_scatter%header%a_contig /= 1 ) then
17949.                   _free( t$7502 )
17949.                endif
17948.                if ( ss_prop%phase_fnc_solar_clr%header%a_contig /= 1 ) then
17948.                   _free( t$7493 )
17948.                endif
17947.                if ( ss_prop%forward_scatter_clr%header%a_contig /= 1 ) then
17947.                   _free( t$7484 )
17947.                endif
17947.             endif
17947.          endif
17957.          call sph_solver( ierr, n_profile, n_layer, ms_min, ms_max, i_truncation, ls_local_trunc(0), cg_coeff(1), uplm_zero(1), ia_sph_mm(0), accuracy_adaptive, euler_factor, i_sph_algorithm, i_sph_mode, isolir, l_scale_solar, adjust_solar_ke(1, 1), i_direct(1, 0), zen_0(1), uplm_sol(1, 1), diff_planck(1, 1), flux_inc_down(1), l_ir_source_quad, diff_planck_2(1, 1), (tau_clr_f%base_addr)(1, 1, 0), (omega_clr_f%base_addr)(1, 1, 0), (phase_fnc_clr_f%base_addr)(1, 1, 1, 0), (phase_fnc_solar_clr_f%base_addr)(1, 1, 1, 0), ls_brdf_trunc, n_brdf_basis_fnc, rho_alb(1, 1), f_brdf(1, 0, 0, 0), brdf_sol(1, 1, 1), brdf_hemi(1, 1, 1), d_planck_flux_surface(1), n_viewing_level, i_rad_layer(1), frac_rad_layer(1), n_direction, direction(1, 1, 1), flux_direct(1, 0), flux_total(1, 1), radiance(1, 1, 1), j_radiance(1, 1), nd_profile, nd_layer, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc, nd_red_eigensystem, nd_sph_equation, nd_sph_diagonal, nd_sph_cf_weight, nd_sph_u_range, nd_viewing_level, nd_direction )
17997.          if ( ierr /= 0 ) then
17897.             $_allo_P10(0) = 0x5000000000001L
17897.             $_allo_P10(1) = loc( tau_clr_f )
17897.             $_allo_P10(2) = loc( phase_fnc_solar_clr_f )
17897.             $_allo_P10(3) = loc( phase_fnc_clr_f )
17897.             $_allo_P10(4) = loc( omega_clr_f )
17897.             $_allo_P10(5) = loc( forward_scatter_clr_f )
17897.             call _dealloc( $_allo_P10, 0, 0, _fcd( 0, 0 ) )
17897.          else
17897.             goto 10
17897.          endif
17999.       else if ( i_cloud == 2 ) then
17999.          goto 20
17999.       else if ( i_cloud == 4 ) then
17999.          goto 20
17999.       else if ( i_cloud == 6 ) then
17999.          goto 20
17999.       else if ( i_cloud == 7 ) then
17999.          goto 20
17999.       else if ( i_cloud == 8 ) then
17999.    20    continue
18005.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$650,  _substr(t$649,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Radiances cannot yet be computed using coupled overlaps.', 0x800600000000L ) ) )
18008.          ierr = 1
17897.          $_allo_P13(0) = 0x5000000000001L
17897.          $_allo_P13(1) = loc( tau_clr_f )
17897.          $_allo_P13(2) = loc( phase_fnc_solar_clr_f )
17897.          $_allo_P13(3) = loc( phase_fnc_clr_f )
17897.          $_allo_P13(4) = loc( omega_clr_f )
17897.          $_allo_P13(5) = loc( forward_scatter_clr_f )
17897.          call _dealloc( $_allo_P13, 0, 0, _fcd( 0, 0 ) )
17897.       else if ( i_cloud == 3 ) then
18092.          nd_profile_column = max( 1, n_profile )
18093.          if ( n_profile > 0 ) then
18093.             $I_L18093_4 = 0
18093. !dir$ ivdep
18093.             do
18094.                nd_profile_column = max( nd_profile_column, n_column_slv(1 + $I_L18093_4) )
18095.                $I_L18093_4 = 1 + $I_L18093_4
18093.                if ( $I_L18093_4 >= n_profile ) exit
18093.             enddo
18093.          endif
18099.          nd_red_eigensystem = ( 1 + nd_max_order ) / 2
18100.          nd_sph_equation = 2 * nd_layer * ( 1 + nd_max_order ) / 2
18101.          nd_sph_diagonal = 6 * ( 1 + nd_max_order ) / 2
18102.          if ( i_sph_algorithm == 1 ) then
18103.             nd_sph_cf_weight = 1 + nd_max_order
18104.             nd_sph_u_range = 2 * ( 1 + nd_max_order ) / 2
18105.          else if ( i_sph_algorithm == 2 ) then
18106.             nd_sph_cf_weight = nd_direction
18107.             nd_sph_u_range = 2 * nd_layer * ( 1 + nd_max_order ) / 2
18107.          endif
18111.          call calc_radiance_ipa( ierr, n_profile, n_layer, n_cloud_top, n_order_phase, ms_min, ms_max, ls_local_trunc(0), i_truncation, accuracy_adaptive, euler_factor, i_sph_algorithm, i_sph_mode, l_rescale, ia_sph_mm(0), cg_coeff(1), uplm_zero(1), uplm_sol(1, 1), l_scale_solar, adjust_solar_ke(1, 1), isolir, diff_planck(1, 1), l_ir_source_quad, diff_planck_2(1, 1), flux_inc_down(1), zen_0(1), d_planck_flux_surface(1), ls_brdf_trunc, n_brdf_basis_fnc, rho_alb(1, 1), f_brdf(1, 0, 0, 0), brdf_sol(1, 1, 1), brdf_hemi(1, 1, 1), ss_prop, n_column_slv(1), list_column_slv(1, 1), i_clm_lyr_chn(1, 1), i_clm_cld_typ(1, 1), area_column(1, 1), n_viewing_level, i_rad_layer(1), frac_rad_layer(1), n_direction, direction(1, 1, 1), flux_direct(1, 0), flux_total(1, 1), i_direct(1, 0), radiance(1, 1, 1), j_radiance(1, 1), nd_profile, nd_layer, nd_column, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc, nd_red_eigensystem, nd_sph_equation, nd_sph_diagonal, nd_sph_cf_weight, nd_sph_u_range, nd_viewing_level, nd_direction, nd_profile_column )
18156.          if ( ierr /= 0 ) then
17897.             $_allo_P11(0) = 0x5000000000001L
17897.             $_allo_P11(1) = loc( tau_clr_f )
17897.             $_allo_P11(2) = loc( phase_fnc_solar_clr_f )
17897.             $_allo_P11(3) = loc( phase_fnc_clr_f )
17897.             $_allo_P11(4) = loc( omega_clr_f )
17897.             $_allo_P11(5) = loc( forward_scatter_clr_f )
17897.             call _dealloc( $_allo_P11, 0, 0, _fcd( 0, 0 ) )
17897.          else
17897.             goto 10
17897.          endif
17897.       else
17897.    10    continue
17897.          $_allo_P12(0) = 0x5000000000001L
17897.          $_allo_P12(1) = loc( tau_clr_f )
17897.          $_allo_P12(2) = loc( phase_fnc_solar_clr_f )
17897.          $_allo_P12(3) = loc( phase_fnc_clr_f )
17897.          $_allo_P12(4) = loc( omega_clr_f )
17897.          $_allo_P12(5) = loc( forward_scatter_clr_f )
17897.          call _dealloc( $_allo_P12, 0, 0, _fcd( 0, 0 ) )
17897.       endif
18164.       return
18164.       end
18164.       
18185.       
18185.       subroutine monochromatic_radiance_tseq( ierr, n_profile, n_layer, i_2stream, i_solver, i_scatter_method, l_scale_solar, adjust_solar_ke, isolir, diff_planck, l_ir_source_quad, diff_planck_2, sec_0, sec_00, flux_inc_direct, flux_inc_down, d_planck_flux_surface, rho_alb, ss_prop, i_cloud, n_cloud_top, n_cloud_type, frac_cloud, n_region, k_clr, i_region_cloud, frac_region, w_free, w_cloud, cloud_overlap, n_column_slv, list_column_slv, i_clm_lyr_chn, i_clm_cld_typ, area_column, flux_direct, flux_total, l_clear, i_solver_clear, flux_direct_clear, flux_total_clear, nd_profile, nd_layer, nd_layer_clr, id_ct, nd_column, nd_cloud_type, nd_region, nd_overlap_coeff, nd_source_coeff, nd_max_order )
18185.       t$651 = nd_profile
18185.       t$652 = nd_layer
18294.       t$2522 = _zla( 0, nd_profile )
18185.       t$2523 = _zla( 0, nd_profile )
18294.       t$2524 = _zla( 0, nd_layer )
18185.       t$2525 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
18185.       t$2526 = 2 * _zla( 0, nd_profile )
 2600.       if ( t$27 == 0 ) then
 2600.          t$2531(1) = 4
 2600.          t$2532(1) = 0
 2600.          t$2533(1) = 0
 2600.          t$2528(1) = int( loc( t$26 ), 8 )
 2600.          t$2529(1) = 0
 2600.          t$2530(1) = int( loc( t$2527 ), 8 )
 2600.          t$27 = __get_dynamic_type( 2, t$2528(1), t$2531(1), 1, t$2529(1), t$2530(1), t$2532(1), t$2533(1) )
 2600.       endif
18185.       t$655 = id_ct
18185.       t$653 = nd_cloud_type
18185.       t$2535 = 1 + nd_layer + -id_ct
18366.       t$2536 = max( 0, 1 + nd_layer + -id_ct )
18185.       t$2537 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
18366.       t$2538 = max( 0, nd_cloud_type )
18185.       t$2539 = _zla( 0, nd_profile ) * max( 0, nd_cloud_type ) * max( 0, 1 + nd_layer + -id_ct )
18185.       t$658 = nd_region
18375.       t$2540 = max( 0, nd_region )
18185.       t$2541 = _zla( 0, nd_profile ) * max( 0, nd_region ) * max( 0, 1 + nd_layer + -id_ct )
18185.       t$2542 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
18185.       t$656 = ( -1 + id_ct )
18185.       t$657 = nd_overlap_coeff
18185.       t$2543 = 2 + nd_layer + -id_ct
18370.       t$2544 = max( 0, 2 + nd_layer + -id_ct )
18185.       t$2545 = _zla( 0, nd_profile ) * max( 0, 2 + nd_layer + -id_ct )
18370.       t$2546 = max( 0, nd_overlap_coeff )
18185.       t$2547 = _zla( 0, nd_profile ) * max( 0, nd_overlap_coeff ) * max( 0, 2 + nd_layer + -id_ct )
18185.       t$654 = nd_column
18357.       t$2548 = max( 0, nd_column )
18185.       t$2549 = _zla( 0, nd_profile ) * max( 0, nd_column )
18185.       t$2550 = 1 + nd_layer
18392.       t$2551 = max( 0, 1 + nd_layer )
18185.       t$2552 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer )
18185.       t$659 = ( 2 + 2 * nd_layer )
18394.       t$2553 = max( 0, ( 2 + 2 * nd_layer ) )
18428.       t$2554 = _zla( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
18430.       omega_clr_f = $_StaticDV_P0
18430.       omega_clr_f%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
18430.       omega_clr_f%header%el_len = 64
18430.       omega_clr_f%header%assoc = 0
18430.       omega_clr_f%header%ptr_alloc = 0
18430.       omega_clr_f%header%p_or_a = 2
18430.       omega_clr_f%header%a_contig = 1
18430.       omega_clr_f%header%n_dim = 2
18430.       omega_clr_f%header%orig_base = 0
18430.       omega_clr_f%header%orig_size = 0
18430.       omega_clr_f%header%n_codim = 0
18430.       omega_clr_f%header%dv_versn = 2
18430.       omega_clr_f%header%dv_smunit = 64
18430.       omega_clr_f%header%d_type = 0
18430.       omega_clr_f%header%n_params = 0
18430.       omega_clr_f%header%d_type_idx = 13
18430.       omega_clr_f%dim_1%LB = 1
18430.       omega_clr_f%dim_1%EX = 0
18430.       omega_clr_f%dim_1%SM = 1
18430.       omega_clr_f%dim_2%LB = 1
18430.       omega_clr_f%dim_2%EX = 0
18430.       omega_clr_f%dim_2%SM = 1
18426.       phase_fnc_clr_f = $_StaticDV_P1
18426.       phase_fnc_clr_f%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
18426.       phase_fnc_clr_f%header%el_len = 64
18426.       phase_fnc_clr_f%header%assoc = 0
18426.       phase_fnc_clr_f%header%ptr_alloc = 0
18426.       phase_fnc_clr_f%header%p_or_a = 2
18426.       phase_fnc_clr_f%header%a_contig = 1
18426.       phase_fnc_clr_f%header%n_dim = 3
18426.       phase_fnc_clr_f%header%orig_base = 0
18426.       phase_fnc_clr_f%header%orig_size = 0
18426.       phase_fnc_clr_f%header%n_codim = 0
18426.       phase_fnc_clr_f%header%dv_versn = 2
18426.       phase_fnc_clr_f%header%dv_smunit = 64
18426.       phase_fnc_clr_f%header%d_type = 0
18426.       phase_fnc_clr_f%header%n_params = 0
18426.       phase_fnc_clr_f%header%d_type_idx = 13
18426.       phase_fnc_clr_f%dim_1%LB = 1
18426.       phase_fnc_clr_f%dim_1%EX = 0
18426.       phase_fnc_clr_f%dim_1%SM = 1
18426.       phase_fnc_clr_f%dim_2%LB = 1
18426.       phase_fnc_clr_f%dim_2%EX = 0
18426.       phase_fnc_clr_f%dim_2%SM = 1
18426.       phase_fnc_clr_f%dim_3%LB = 1
18426.       phase_fnc_clr_f%dim_3%EX = 0
18426.       phase_fnc_clr_f%dim_3%SM = 1
18185.       tau_clr_f = $_StaticDV_P2
18185.       tau_clr_f%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
18185.       tau_clr_f%header%el_len = 64
18185.       tau_clr_f%header%assoc = 0
18185.       tau_clr_f%header%ptr_alloc = 0
18185.       tau_clr_f%header%p_or_a = 2
18185.       tau_clr_f%header%a_contig = 1
18185.       tau_clr_f%header%n_dim = 2
18185.       tau_clr_f%header%orig_base = 0
18185.       tau_clr_f%header%orig_size = 0
18185.       tau_clr_f%header%n_codim = 0
18185.       tau_clr_f%header%dv_versn = 2
18185.       tau_clr_f%header%dv_smunit = 64
18185.       tau_clr_f%header%d_type = 0
18185.       tau_clr_f%header%n_params = 0
18185.       tau_clr_f%header%d_type_idx = 13
18185.       tau_clr_f%dim_1%LB = 1
18185.       tau_clr_f%dim_1%EX = 0
18185.       tau_clr_f%dim_1%SM = 1
18185.       tau_clr_f%dim_2%LB = 1
18185.       tau_clr_f%dim_2%EX = 0
18185.       tau_clr_f%dim_2%SM = 1
18443.       if ( i_cloud == 5 ) then
18445.          tau_clr_f%header%a_contig = 1
18445.          tau_clr_f%dim_1%LB = 1
18445.          tau_clr_f%dim_1%EX = ( max( 0, nd_profile ) )
18445.          tau_clr_f%dim_1%SM = 1
18445.          tau_clr_f%dim_2%LB = 1
18445.          tau_clr_f%dim_2%EX = ( max( 0, nd_layer ) )
18445.          tau_clr_f%dim_2%SM = ( max( 0, nd_profile ) )
18445.          $_allo_P3(0) = 0x1000000000001L
18445.          $_allo_P3(1) = loc( tau_clr_f )
18445.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
18446.          omega_clr_f%header%a_contig = 1
18446.          omega_clr_f%dim_1%LB = 1
18446.          omega_clr_f%dim_1%EX = ( max( 0, nd_profile ) )
18446.          omega_clr_f%dim_1%SM = 1
18446.          omega_clr_f%dim_2%LB = 1
18446.          omega_clr_f%dim_2%EX = ( max( 0, nd_layer ) )
18446.          omega_clr_f%dim_2%SM = ( max( 0, nd_profile ) )
18446.          $_allo_P4(0) = 0x1000000000001L
18446.          $_allo_P4(1) = loc( omega_clr_f )
18446.          call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
18447.          phase_fnc_clr_f%header%a_contig = 1
18447.          phase_fnc_clr_f%dim_1%LB = 1
18447.          phase_fnc_clr_f%dim_1%EX = ( max( 0, nd_profile ) )
18447.          phase_fnc_clr_f%dim_1%SM = 1
18447.          phase_fnc_clr_f%dim_2%LB = 1
18447.          phase_fnc_clr_f%dim_2%EX = ( max( 0, nd_layer ) )
18447.          phase_fnc_clr_f%dim_2%SM = ( max( 0, nd_profile ) )
18447.          phase_fnc_clr_f%dim_3%LB = 1
18447.          phase_fnc_clr_f%dim_3%EX = 1
18447.          phase_fnc_clr_f%dim_3%SM = ( max( 0, nd_profile ) * max( 0, nd_layer ) )
18447.          $_allo_P5(0) = 0x1000000000001L
18447.          $_allo_P5(1) = loc( phase_fnc_clr_f )
18447.          call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
18451.          t$7518 = 0
18451.          t$7519 = 0
18451.          t$7523 = 0
18451.          if ( ss_prop%tau_clr%header%a_contig == 1 ) then
18451. !dir$ suppress (ss_prop%tau_clr%base_addr)(ss_prop%tau_clr%dim_1%LB, ss_prop%tau_clr%dim_2%LB, 0)
18451.             t$7517 = loc( (ss_prop%tau_clr%base_addr)(ss_prop%tau_clr%dim_1%LB, ss_prop%tau_clr%dim_2%LB, 0) )
18451.          else
18451.             t$7518 = ss_prop%tau_clr%dim_1%EX
18451.             t$7519 = ss_prop%tau_clr%dim_2%EX
18451.             t$7523 = int( _alloc( max( 0, 8 * max( 0, ss_prop%tau_clr%dim_2%EX ) * max( 0, ss_prop%tau_clr%dim_1%EX ) ) ), 8 )
18449.             call _f90_copy_from_dv( t$7522, ss_prop%tau_clr )
18451. !dir$ suppress t$7522
18451.             t$7517 = loc( t$7522 )
18451.          endif
18451.          t$7525 = 0
18451.          t$7526 = 0
18451.          t$7530 = 0
18451.          if ( ss_prop%omega_clr%header%a_contig == 1 ) then
18451. !dir$ suppress (ss_prop%omega_clr%base_addr)(ss_prop%omega_clr%dim_1%LB, ss_prop%omega_clr%dim_2%LB, 0)
18451.             t$7524 = loc( (ss_prop%omega_clr%base_addr)(ss_prop%omega_clr%dim_1%LB, ss_prop%omega_clr%dim_2%LB, 0) )
18451.          else
18451.             t$7525 = ss_prop%omega_clr%dim_1%EX
18451.             t$7526 = ss_prop%omega_clr%dim_2%EX
18451.             t$7530 = int( _alloc( max( 0, 8 * max( 0, ss_prop%omega_clr%dim_2%EX ) * max( 0, ss_prop%omega_clr%dim_1%EX ) ) ), 8 )
18449.             call _f90_copy_from_dv( t$7529, ss_prop%omega_clr )
18451. !dir$ suppress t$7529
18451.             t$7524 = loc( t$7529 )
18451.          endif
18452.          t$7532 = 0
18452.          t$7533 = 0
18452.          t$7534 = 0
18452.          t$7539 = 0
18452.          if ( ss_prop%phase_fnc_clr%header%a_contig == 1 ) then
18452. !dir$ suppress (ss_prop%phase_fnc_clr%base_addr)(ss_prop%phase_fnc_clr%dim_1%LB, ss_prop%phase_fnc_clr%dim_2%LB, ss_prop%phase_fnc_clr%dim_3%LB, 0)
18452.             t$7531 = loc( (ss_prop%phase_fnc_clr%base_addr)(ss_prop%phase_fnc_clr%dim_1%LB, ss_prop%phase_fnc_clr%dim_2%LB, ss_prop%phase_fnc_clr%dim_3%LB, 0) )
18452.          else
18452.             t$7532 = ss_prop%phase_fnc_clr%dim_1%EX
18452.             t$7533 = ss_prop%phase_fnc_clr%dim_2%EX
18452.             t$7534 = ss_prop%phase_fnc_clr%dim_3%EX
18452.             t$7539 = int( _alloc( max( 0, 8 * max( 0, ss_prop%phase_fnc_clr%dim_3%EX ) * max( 0, ss_prop%phase_fnc_clr%dim_2%EX ) * max( 0, ss_prop%phase_fnc_clr%dim_1%EX ) ) ), 8 )
18449.             call _f90_copy_from_dv( t$7538, ss_prop%phase_fnc_clr )
18452. !dir$ suppress t$7538
18452.             t$7531 = loc( t$7538 )
18452.          endif
18453.          t$7541 = 0
18453.          t$7542 = 0
18453.          t$7543 = 0
18453.          t$7548 = 0
18453.          if ( ss_prop%tau%header%a_contig == 1 ) then
18453. !dir$ suppress (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, ss_prop%tau%dim_3%LB, 0)
18453.             t$7540 = loc( (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, ss_prop%tau%dim_3%LB, 0) )
18453.          else
18453.             t$7541 = ss_prop%tau%dim_1%EX
18453.             t$7542 = ss_prop%tau%dim_2%EX
18453.             t$7543 = ss_prop%tau%dim_3%EX
18453.             t$7548 = int( _alloc( max( 0, 8 * max( 0, ss_prop%tau%dim_3%EX ) * max( 0, ss_prop%tau%dim_2%EX ) * max( 0, ss_prop%tau%dim_1%EX ) ) ), 8 )
18449.             call _f90_copy_from_dv( t$7547, ss_prop%tau )
18453. !dir$ suppress t$7547
18453.             t$7540 = loc( t$7547 )
18453.          endif
18453.          t$7550 = 0
18453.          t$7551 = 0
18453.          t$7552 = 0
18453.          t$7557 = 0
18453.          if ( ss_prop%omega%header%a_contig == 1 ) then
18453. !dir$ suppress (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, ss_prop%omega%dim_3%LB, 0)
18453.             t$7549 = loc( (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, ss_prop%omega%dim_3%LB, 0) )
18453.          else
18453.             t$7550 = ss_prop%omega%dim_1%EX
18453.             t$7551 = ss_prop%omega%dim_2%EX
18453.             t$7552 = ss_prop%omega%dim_3%EX
18453.             t$7557 = int( _alloc( max( 0, 8 * max( 0, ss_prop%omega%dim_3%EX ) * max( 0, ss_prop%omega%dim_2%EX ) * max( 0, ss_prop%omega%dim_1%EX ) ) ), 8 )
18449.             call _f90_copy_from_dv( t$7556, ss_prop%omega )
18453. !dir$ suppress t$7556
18453.             t$7549 = loc( t$7556 )
18453.          endif
18453.          t$7559 = 0
18453.          t$7560 = 0
18453.          t$7561 = 0
18453.          t$7562 = 0
18453.          t$7568 = 0
18453.          if ( ss_prop%phase_fnc%header%a_contig == 1 ) then
18453. !dir$ suppress (ss_prop%phase_fnc%base_addr)(ss_prop%phase_fnc%dim_1%LB, ss_prop%phase_fnc%dim_2%LB, ss_prop%phase_fnc%dim_3%LB, ss_prop%phase_fnc%dim_4%LB, 0)
18453.             t$7558 = loc( (ss_prop%phase_fnc%base_addr)(ss_prop%phase_fnc%dim_1%LB, ss_prop%phase_fnc%dim_2%LB, ss_prop%phase_fnc%dim_3%LB, ss_prop%phase_fnc%dim_4%LB, 0) )
18453.          else
18453.             t$7559 = ss_prop%phase_fnc%dim_1%EX
18453.             t$7560 = ss_prop%phase_fnc%dim_2%EX
18453.             t$7561 = ss_prop%phase_fnc%dim_3%EX
18453.             t$7562 = ss_prop%phase_fnc%dim_4%EX
18453.             t$7568 = int( _alloc( max( 0, 8 * max( 0, ss_prop%phase_fnc%dim_4%EX ) * max( 0, ss_prop%phase_fnc%dim_3%EX ) * max( 0, ss_prop%phase_fnc%dim_2%EX ) * max( 0, ss_prop%phase_fnc%dim_1%EX ) ) ), 8 )
18449.             call _f90_copy_from_dv( t$7567, ss_prop%phase_fnc )
18453. !dir$ suppress t$7567
18453.             t$7558 = loc( t$7567 )
18453.          endif
18449.          call copy_clr_full( n_profile, n_layer, n_cloud_top, 1, t$7517, t$7524, t$7531, t$7540, t$7549, t$7558, (tau_clr_f%base_addr)(1, 1, 0), (omega_clr_f%base_addr)(1, 1, 0), (phase_fnc_clr_f%base_addr)(1, 1, 1, 0), nd_profile, nd_layer, nd_layer_clr, id_ct, 1 )
18453.          if ( ss_prop%phase_fnc%header%a_contig /= 1 ) then
18453.             _free( t$7568 )
18453.          endif
18453.          if ( ss_prop%omega%header%a_contig /= 1 ) then
18453.             _free( t$7557 )
18453.          endif
18453.          if ( ss_prop%tau%header%a_contig /= 1 ) then
18453.             _free( t$7548 )
18453.          endif
18452.          if ( ss_prop%phase_fnc_clr%header%a_contig /= 1 ) then
18452.             _free( t$7539 )
18452.          endif
18451.          if ( ss_prop%omega_clr%header%a_contig /= 1 ) then
18451.             _free( t$7530 )
18451.          endif
18451.          if ( ss_prop%tau_clr%header%a_contig /= 1 ) then
18451.             _free( t$7523 )
18451.          endif
18460.          call two_stream( ierr, n_profile, n_layer, i_2stream, i_solver, l_scale_solar, adjust_solar_ke(1, 1), isolir, diff_planck(1, 1), l_ir_source_quad, diff_planck_2(1, 1), flux_inc_down(1), flux_inc_direct(1), sec_00(1, 1), rho_alb(1, 1), rho_alb(1, 2), d_planck_flux_surface(1), (tau_clr_f%base_addr)(1, 1, 0), (omega_clr_f%base_addr)(1, 1, 0), (phase_fnc_clr_f%base_addr)(1, 1, 1, 0), flux_direct(1, 0), flux_total(1, 1), nd_profile, nd_layer, nd_source_coeff )
18488.          $_allo_P6(0) = 0x1000000000001L
18488.          $_allo_P6(1) = loc( tau_clr_f )
18488.          call __deallocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
18488.          tau_clr_f%header%assoc = 0
18489.          $_allo_P7(0) = 0x1000000000001L
18489.          $_allo_P7(1) = loc( omega_clr_f )
18489.          call __deallocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
18489.          omega_clr_f%header%assoc = 0
18490.          $_allo_P8(0) = 0x1000000000001L
18490.          $_allo_P8(1) = loc( phase_fnc_clr_f )
18490.          call __deallocate( $_allo_P8, 0, 0, _fcd( 0, 0 ) )
18490.          phase_fnc_clr_f%header%assoc = 0
18492.          if ( l_clear /= .false. ) then
18495.             if ( isolir == 1 ) then
18498.                if ( nd_layer >= 0 ) then
18499.                   if ( nd_profile > 0 ) then
18498.                      $I_L18498_26 = 0
18498.                      do
18499.                         $I_L18499_22 = 0
18499. !dir$ ivdep
18499.                         do
18500.                            flux_direct_clear(1 + $I_L18499_22, $I_L18498_26) = flux_direct(1 + $I_L18499_22, $I_L18498_26)
18501.                            $I_L18499_22 = 1 + $I_L18499_22
18499.                            if ( $I_L18499_22 >= nd_profile ) exit
18499.                         enddo
18502.                         $I_L18498_26 = 1 + $I_L18498_26
18501.                         if ( $I_L18498_26 >= 1 + nd_layer ) exit
18501.                      enddo
18501.                   endif
18501.                endif
18501.             endif
18506.             if ( 2 + 2 * nd_layer > 0 ) then
18507.                if ( nd_profile > 0 ) then
18506.                   $I_L18506_28 = 0
18506.                   do
18507.                      $I_L18507_24 = 0
18507. !dir$ ivdep
18507.                      do
18508.                         flux_total_clear(1 + $I_L18507_24, 1 + $I_L18506_28) = flux_total(1 + $I_L18507_24, 1 + $I_L18506_28)
18509.                         $I_L18507_24 = 1 + $I_L18507_24
18507.                         if ( $I_L18507_24 >= nd_profile ) exit
18507.                      enddo
18510.                      $I_L18506_28 = 1 + $I_L18506_28
18509.                      if ( $I_L18506_28 >= 2 + 2 * nd_layer ) exit
18509.                   enddo
18509.                endif
18509.             endif
18509.          endif
18509.          goto 10
18513.       else if ( i_cloud == 2 ) then
18513.          goto 20
18513.       else if ( i_cloud == 4 ) then
18513.          goto 20
18513.       else if ( i_cloud /= 7 ) then
18513.          goto 30
18513.       else if ( n_region == 2 ) then
18513.    20    continue
18521.          call mix_column( ierr, n_profile, n_layer, k_clr, i_2stream, i_solver, l_scale_solar, adjust_solar_ke(1, 1), isolir, diff_planck(1, 1), l_ir_source_quad, diff_planck_2(1, 1), flux_inc_down(1), flux_inc_direct(1), sec_00(1, 1), rho_alb(1, 1), rho_alb(1, 2), d_planck_flux_surface(1), ss_prop, n_cloud_top, n_cloud_type, frac_cloud(1, id_ct, 1), w_free(1, id_ct), w_cloud(1, id_ct), cloud_overlap(1, -1 + id_ct, 1), flux_direct(1, 0), flux_total(1, 1), l_clear, i_solver_clear, flux_direct_clear(1, 0), flux_total_clear(1, 1), nd_profile, nd_layer, nd_layer_clr, id_ct, nd_max_order, nd_source_coeff, nd_cloud_type, nd_overlap_coeff )
18558.          if ( ierr /= 0 ) then
18428.             $_allo_P11(0) = 0x3000000000001L
18428.             $_allo_P11(1) = loc( tau_clr_f )
18428.             $_allo_P11(2) = loc( phase_fnc_clr_f )
18428.             $_allo_P11(3) = loc( omega_clr_f )
18428.             call _dealloc( $_allo_P11, 0, 0, _fcd( 0, 0 ) )
18428.          else
18428.             goto 10
18428.          endif
18428.       else
18428.    30    continue
18560.          if ( i_cloud == 6 ) then
18560.             goto 40
18560.          else if ( i_cloud /= 8 ) then
18560.             goto 50
18560.          else if ( n_region == 3 ) then
18560.    40       continue
18567.             call triple_column( ierr, n_profile, n_layer, i_2stream, i_solver, i_scatter_method, l_scale_solar, adjust_solar_ke(1, 1), isolir, diff_planck(1, 1), l_ir_source_quad, diff_planck_2(1, 1), flux_inc_down(1), flux_inc_direct(1), sec_00(1, 1), rho_alb(1, 1), rho_alb(1, 2), d_planck_flux_surface(1), ss_prop, n_cloud_top, n_cloud_type, frac_cloud(1, id_ct, 1), n_region, i_region_cloud(1), frac_region(1, id_ct, 1), w_free(1, id_ct), w_cloud(1, id_ct), cloud_overlap(1, -1 + id_ct, 1), flux_direct(1, 0), flux_total(1, 1), l_clear, i_solver_clear, flux_direct_clear(1, 0), flux_total_clear(1, 1), nd_profile, nd_layer, nd_layer_clr, id_ct, nd_max_order, nd_source_coeff, nd_cloud_type, nd_region, nd_overlap_coeff )
18605.             if ( ierr /= 0 ) then
18428.                $_allo_P10(0) = 0x3000000000001L
18428.                $_allo_P10(1) = loc( tau_clr_f )
18428.                $_allo_P10(2) = loc( phase_fnc_clr_f )
18428.                $_allo_P10(3) = loc( omega_clr_f )
18428.                call _dealloc( $_allo_P10, 0, 0, _fcd( 0, 0 ) )
18428.             else
18428.                goto 10
18428.             endif
18428.          else
18428.    50       continue
18608.             if ( i_cloud == 3 ) then
18620.                nd_profile_column = max( 1, n_profile )
18621.                if ( nd_profile > 0 ) then
18621.                   $I_L18621_20 = 0
18621. !dir$ ivdep
18621.                   do
18622.                      nd_profile_column = max( nd_profile_column, n_column_slv(1 + $I_L18621_20) )
18623.                      $I_L18621_20 = 1 + $I_L18621_20
18621.                      if ( $I_L18621_20 >= nd_profile ) exit
18621.                   enddo
18621.                endif
18625.                call calc_flux_ipa( ierr, n_profile, n_layer, n_cloud_top, l_scale_solar, adjust_solar_ke(1, 1), i_2stream, i_solver, isolir, diff_planck(1, 1), l_ir_source_quad, diff_planck_2(1, 1), flux_inc_down(1), flux_inc_direct(1), sec_00(1, 1), d_planck_flux_surface(1), rho_alb(1, 1), ss_prop, n_column_slv(1), list_column_slv(1, 1), i_clm_lyr_chn(1, 1), i_clm_cld_typ(1, 1), area_column(1, 1), flux_direct(1, 0), flux_total(1, 1), l_clear, i_solver_clear, flux_direct_clear(1, 0), flux_total_clear(1, 1), nd_profile, nd_layer, nd_layer_clr, id_ct, nd_column, nd_profile_column, nd_source_coeff )
18656.                if ( ierr /= 0 ) then
18428.                   $_allo_P9(0) = 0x3000000000001L
18428.                   $_allo_P9(1) = loc( tau_clr_f )
18428.                   $_allo_P9(2) = loc( phase_fnc_clr_f )
18428.                   $_allo_P9(3) = loc( omega_clr_f )
18428.                   call _dealloc( $_allo_P9, 0, 0, _fcd( 0, 0 ) )
18428.                else
18428.                   goto 10
18428.                endif
18428.             else
18428.    10          continue
18428.                $_allo_P12(0) = 0x3000000000001L
18428.                $_allo_P12(1) = loc( tau_clr_f )
18428.                $_allo_P12(2) = loc( phase_fnc_clr_f )
18428.                $_allo_P12(3) = loc( omega_clr_f )
18428.                call _dealloc( $_allo_P12, 0, 0, _fcd( 0, 0 ) )
18428.             endif
18428.          endif
18428.       endif
18663.       return
18663.       end
18663.       
18686.       
18686.       subroutine opt_prop_aerosol( ierr, n_profile, first_layer, last_layer, n_order_phase, l_rescale, n_order_forward, l_henyey_greenstein_pf, n_aerosol, aerosol_mix_ratio, i_aerosol_parametrization, i_humidity_pointer, humidities, delta_humidity, mean_rel_humidity, aerosol_absorption, aerosol_scattering, aerosol_phase_fnc, l_solar_phf, n_order_phase_solar, n_direction, cos_sol_view, p, density, n_opt_level_aerosol_prsc, aerosol_pressure_prsc, aerosol_absorption_prsc, aerosol_scattering_prsc, aerosol_phase_fnc_prsc, k_ext_tot, k_ext_scat, phase_fnc, forward_scatter, forward_solar, phase_fnc_solar, nd_profile, nd_radiance_profile, nd_layer, id_lt, id_lb, nd_aerosol_species, nd_humidities, nd_phase_term, nd_max_order, nd_direction, nd_profile_prsc, nd_opt_level_prsc )
18686.       t$661 = nd_profile
18686.       t$662 = nd_layer
18686.       t$660 = nd_aerosol_species
18798.       t$2555 = _zla( 0, nd_profile )
18686.       t$2556 = _zla( 0, nd_profile )
18798.       t$2557 = _zla( 0, nd_layer )
18686.       t$2558 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
18798.       t$2559 = _zla( 0, nd_aerosol_species )
18686.       t$2560 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_aerosol_species )
18686.       t$2561 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
18686.       t$665 = nd_humidities
18808.       t$2562 = _zla( 0, nd_humidities )
18686.       t$2563 = _zla( 0, nd_humidities )
18686.       t$2564 = _zla( 0, nd_aerosol_species ) * _zla( 0, nd_humidities )
18686.       t$666 = nd_phase_term
18805.       t$2565 = _zla( 0, nd_phase_term )
18686.       t$2566 = _zla( 0, nd_humidities ) * _zla( 0, nd_phase_term )
18686.       t$2567 = _zla( 0, nd_aerosol_species ) * _zla( 0, nd_humidities ) * _zla( 0, nd_phase_term )
18686.       t$663 = nd_radiance_profile
18686.       t$664 = nd_direction
18793.       t$2568 = _zla( 0, nd_radiance_profile )
18686.       t$2569 = _zla( 0, nd_radiance_profile )
18793.       t$2570 = _zla( 0, nd_direction )
18686.       t$2571 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
18686.       t$667 = nd_profile_prsc
18686.       t$668 = nd_opt_level_prsc
18825.       t$2572 = _zla( 0, nd_profile_prsc )
18686.       t$2573 = _zla( 0, nd_profile_prsc )
18825.       t$2574 = _zla( 0, nd_opt_level_prsc )
18686.       t$2575 = _zla( 0, nd_profile_prsc ) * _zla( 0, nd_opt_level_prsc )
18686.       t$2576 = _zla( 0, nd_aerosol_species ) * _zla( 0, nd_profile_prsc ) * _zla( 0, nd_opt_level_prsc )
18686.       t$2577 = _zla( 0, nd_phase_term ) * _zla( 0, nd_profile_prsc ) * _zla( 0, nd_opt_level_prsc )
18686.       t$2578 = _zla( 0, nd_aerosol_species ) * _zla( 0, nd_phase_term ) * _zla( 0, nd_profile_prsc ) * _zla( 0, nd_opt_level_prsc )
18686.       t$669 = id_lt
18686.       t$670 = id_lb
18686.       t$2579 = 1 + id_lb + -id_lt
18841.       t$2580 = _zla( 0, 1 + id_lb + -id_lt )
18686.       t$2581 = _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt )
18686.       t$671 = nd_max_order
18686.       t$2582 = _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt )
18843.       t$2583 = _zla( 0, nd_max_order )
18686.       t$2584 = _zla( 0, nd_profile ) * _zla( 0, nd_max_order ) * _zla( 0, 1 + id_lb + -id_lt )
18686.       t$2585 = _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + id_lb + -id_lt )
18686.       t$2586 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * _zla( 0, 1 + id_lb + -id_lt )
18876.       t$2589 = 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt )
18902.       t$2590 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt ) ) / 8
18902.       t$2592 = t$2590 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt )
18904.       t$2593 = 8 * ( 7 + t$2590 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt ) ) / 8
18904.       t$2595 = t$2593 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt )
18878.       t$2596 = 8 * ( 7 + t$2593 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt ) ) / 8
18878.       t$2598 = t$2596 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt )
18893.       t$2599 = 8 * ( 7 + t$2596 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt ) ) / 8
18893.       t$2601 = t$2599 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt )
18895.       t$2602 = 8 * ( 7 + t$2599 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt ) ) / 8
18895.       t$2604 = t$2602 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt )
18874.       t$2605 = 8 * ( 7 + t$2602 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt ) ) / 8
18874.       t$2607 = t$2605 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt )
18897.       t$2608 = 8 * ( 7 + t$2605 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt ) ) / 8
18897.       t$2610 = t$2608 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_max_order ) * _zla( 0, 1 + id_lb + -id_lt )
18899.       t$2611 = 8 * ( 7 + t$2608 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_max_order ) * _zla( 0, 1 + id_lb + -id_lt ) ) / 8
18899.       t$2613 = t$2611 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * _zla( 0, 1 + id_lb + -id_lt )
18686.       t$2614 = _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + id_lb + -id_lt )
18918.       t$2615 = 8 * ( 7 + t$2611 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * _zla( 0, 1 + id_lb + -id_lt ) ) / 8
18918.       t$2617 = t$2615 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + id_lb + -id_lt )
18881.       t$2618 = 8 * ( 7 + t$2615 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + id_lb + -id_lt ) ) / 8
18881.       t$2620 = t$2618 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt )
18912.       t$2621 = 8 * ( 7 + t$2618 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt ) ) / 8
18912.       t$2623 = t$2621 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + id_lb + -id_lt )
18914.       t$2624 = 8 * ( 7 + t$2621 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + id_lb + -id_lt ) ) / 8
18914.       t$2626 = t$2624 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + id_lb + -id_lt )
18916.       t$2627 = 8 * ( 7 + t$2624 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + id_lb + -id_lt ) ) / 8
18916.       t$2629 = t$2627 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + id_lb + -id_lt )
18885.       t$2630 = 8 * ( 7 + t$2627 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + id_lb + -id_lt ) ) / 8
18885.       t$2632 = t$2630 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt )
18686.       t$2587 = int( _alloc( t$2630 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt ) ), 8 )
18876.       t$2588 = t$2587
18902.       t$2591 = t$2590 + t$2587
18904.       t$2594 = t$2593 + t$2587
18878.       t$2597 = t$2596 + t$2587
18893.       t$2600 = t$2599 + t$2587
18895.       t$2603 = t$2602 + t$2587
18874.       t$2606 = t$2605 + t$2587
18897.       t$2609 = t$2608 + t$2587
18899.       t$2612 = t$2611 + t$2587
18918.       t$2616 = t$2615 + t$2587
18881.       t$2619 = t$2618 + t$2587
18912.       t$2622 = t$2621 + t$2587
18914.       t$2625 = t$2624 + t$2587
18916.       t$2628 = t$2627 + t$2587
18885.       t$2631 = t$2630 + t$2587
18929.       if ( n_aerosol > 0 ) then
18929.          $I_L18929_707 = 0
18929.          do
18934.             $l_use_hg_phf_S22 = l_henyey_greenstein_pf .or. i_aerosol_parametrization(1 + $I_L18929_707) == 1 .or. i_aerosol_parametrization(1 + $I_L18929_707) == 2
18939.             $l_interpolate_hum_S13 = i_aerosol_parametrization(1 + $I_L18929_707) == 2 .or. i_aerosol_parametrization(1 + $I_L18929_707) == 5
18943.             if ( i_aerosol_parametrization(1 + $I_L18929_707) == 1 ) then
18953.                if ( $l_interpolate_hum_S13 /= .false. ) then
18958.                   if ( nd_layer > 0 ) then
18959.                      if ( nd_profile > 0 ) then
18958.                         $I_L18958_633 = 0
18958.                         do
18959.                            $I_L18959_562 = 0
18959. !dir$ ivdep
18959.                            do
18960.                               $i_pointer_S16 = i_humidity_pointer(1 + $I_L18959_562, 1 + $I_L18958_633)
18961.                               $weight_upper_WR0_R0 = ( 1.0/delta_humidity * ( mean_rel_humidity(1 + $I_L18959_562, 1 + $I_L18958_633) + -humidities($i_pointer_S16, 1 + $I_L18929_707) ) )
18961.                               weight_upper(1 + $I_L18959_562, 1 + $I_L18958_633) = $weight_upper_WR0_R0
18978.                               $k_scatter_WR0_R1 = aerosol_mix_ratio(1 + $I_L18959_562, 1 + $I_L18958_633, 1 + $I_L18929_707) * ( aerosol_scattering($i_pointer_S16, 1 + $I_L18929_707) + $weight_upper_WR0_R0 * ( aerosol_scattering(1 + $i_pointer_S16, 1 + $I_L18929_707) + -aerosol_scattering($i_pointer_S16, 1 + $I_L18929_707) ) )
18978.                               k_scatter(1 + $I_L18959_562, 1 + $I_L18958_633) = $k_scatter_WR0_R1
18972.                               k_ext_tot(1 + $I_L18959_562, 1 + $I_L18958_633) = k_ext_tot(1 + $I_L18959_562, 1 + $I_L18958_633) + aerosol_mix_ratio(1 + $I_L18959_562, 1 + $I_L18958_633, 1 + $I_L18929_707) * ( aerosol_absorption($i_pointer_S16, 1 + $I_L18929_707) + $weight_upper_WR0_R0 * ( aerosol_absorption(1 + $i_pointer_S16, 1 + $I_L18929_707) + -aerosol_absorption($i_pointer_S16, 1 + $I_L18929_707) ) )
18983.                               k_ext_scat(1 + $I_L18959_562, 1 + $I_L18958_633) = $k_scatter_WR0_R1 + k_ext_scat(1 + $I_L18959_562, 1 + $I_L18958_633)
18964.                               $I_L18959_562 = 1 + $I_L18959_562
18959.                               if ( $I_L18959_562 >= nd_profile ) exit
18959.                            enddo
18965.                            $I_L18958_633 = 1 + $I_L18958_633
18964.                            if ( $I_L18958_633 >= nd_layer ) exit
18964.                         enddo
18964.                      endif
18964.                   endif
18988.                else if ( nd_layer > 0 ) then
18992.                   if ( nd_profile > 0 ) then
18996.                      $SC_aerosol_absorption_I1 = aerosol_absorption(1, 1 + $I_L18929_707)
18999.                      $SC_aerosol_scattering_I0 = aerosol_scattering(1, 1 + $I_L18929_707)
18991.                      $I_L18991_631 = 0
18991.                      do
18992.                         $I_L18992_560 = 0
18992. !dir$ ivdep
18992.                         do
18999.                            $k_scatter_WR0_R2 = $SC_aerosol_scattering_I0 * aerosol_mix_ratio(1 + $I_L18992_560, 1 + $I_L18991_631, 1 + $I_L18929_707)
18999.                            k_scatter(1 + $I_L18992_560, 1 + $I_L18991_631) = $k_scatter_WR0_R2
18996.                            k_ext_tot(1 + $I_L18992_560, 1 + $I_L18991_631) = k_ext_tot(1 + $I_L18992_560, 1 + $I_L18991_631) + $SC_aerosol_absorption_I1 * aerosol_mix_ratio(1 + $I_L18992_560, 1 + $I_L18991_631, 1 + $I_L18929_707)
19001.                            k_ext_scat(1 + $I_L18992_560, 1 + $I_L18991_631) = $k_scatter_WR0_R2 + k_ext_scat(1 + $I_L18992_560, 1 + $I_L18991_631)
19004.                            $I_L18992_560 = 1 + $I_L18992_560
18992.                            if ( $I_L18992_560 >= nd_profile ) exit
18992.                         enddo
19005.                         $I_L18991_631 = 1 + $I_L18991_631
19004.                         if ( $I_L18991_631 >= nd_layer ) exit
19004.                      enddo
19004.                   endif
19004.                endif
19011.                if ( $l_use_hg_phf_S22 /= .false. ) then
19024.                   if ( $l_interpolate_hum_S13 /= .false. ) then
19026.                      if ( nd_layer > 0 ) then
19027.                         if ( nd_profile > 0 ) then
19026.                            $I_L19026_637 = 0
19026.                            do
19027.                               $I_L19027_566 = 0
19027. !dir$ ivdep
19027.                               do
19028.                                  $i_pointer_S25 = i_humidity_pointer(1 + $I_L19027_566, 1 + $I_L19026_637)
19029.                                  asymmetry(1 + $I_L19027_566, 1 + $I_L19026_637) = aerosol_phase_fnc($i_pointer_S25, 1, 1 + $I_L18929_707) + weight_upper(1 + $I_L19027_566, 1 + $I_L19026_637) * ( aerosol_phase_fnc(1 + $i_pointer_S25, 1, 1 + $I_L18929_707) + -aerosol_phase_fnc($i_pointer_S25, 1, 1 + $I_L18929_707) )
19034.                                  $I_L19027_566 = 1 + $I_L19027_566
19027.                                  if ( $I_L19027_566 >= nd_profile ) exit
19027.                               enddo
19035.                               $I_L19026_637 = 1 + $I_L19026_637
19034.                               if ( $I_L19026_637 >= nd_layer ) exit
19034.                            enddo
19034.                         endif
19034.                      endif
19036.                   else if ( nd_layer > 0 ) then
19039.                      if ( nd_profile > 0 ) then
19040.                         $SC_aerosol_phase_fnc_I2 = aerosol_phase_fnc(1, 1, 1 + $I_L18929_707)
19038.                         $I_L19038_635 = 0
19038.                         do
19039.                            $I_L19039_564 = 0
19039. !dir$ ivdep
19039.                            do
19040.                               asymmetry(1 + $I_L19039_564, 1 + $I_L19038_635) = $SC_aerosol_phase_fnc_I2
19041.                               $I_L19039_564 = 1 + $I_L19039_564
19039.                               if ( $I_L19039_564 >= nd_profile ) exit
19039.                            enddo
19042.                            $I_L19038_635 = 1 + $I_L19038_635
19041.                            if ( $I_L19038_635 >= nd_layer ) exit
19041.                         enddo
19041.                      endif
19041.                   endif
19048.                   if ( nd_layer > 0 ) then
19049.                      if ( nd_profile > 0 ) then
19048.                         $I_L19048_639 = 0
19048.                         do
19049.                            $I_L19049_568 = 0
19049. !dir$ ivdep
19049.                            do
19050.                               phase_fnc(1 + $I_L19049_568, 1 + $I_L19048_639, 1) = phase_fnc(1 + $I_L19049_568, 1 + $I_L19048_639, 1) + k_scatter(1 + $I_L19049_568, 1 + $I_L19048_639) * asymmetry(1 + $I_L19049_568, 1 + $I_L19048_639)
19052.                               $I_L19049_568 = 1 + $I_L19049_568
19049.                               if ( $I_L19049_568 >= nd_profile ) exit
19049.                            enddo
19053.                            $I_L19048_639 = 1 + $I_L19048_639
19052.                            if ( $I_L19048_639 >= nd_layer ) exit
19052.                         enddo
19052.                      endif
19052.                   endif
19059.                   if ( l_rescale /= .false. ) then
19053.                      goto 10
19053.                   else if ( n_order_phase >= 2 ) then
19053.    10                continue
19061.                      if ( nd_layer > 0 ) then
19062.                         if ( nd_profile > 0 ) then
19061.                            $I_L19061_641 = 0
19061.                            do
19062.                               $I_L19062_570 = 0
19062. !dir$ ivdep
19062.                               do
19063.                                  ks_phf(1 + $I_L19062_570, 1 + $I_L19061_641) = k_scatter(1 + $I_L19062_570, 1 + $I_L19061_641) * asymmetry(1 + $I_L19062_570, 1 + $I_L19061_641)
19064.                                  $I_L19062_570 = 1 + $I_L19062_570
19062.                                  if ( $I_L19062_570 >= nd_profile ) exit
19062.                               enddo
19065.                               $I_L19061_641 = 1 + $I_L19061_641
19064.                               if ( $I_L19061_641 >= nd_layer ) exit
19064.                            enddo
19064.                         endif
19064.                      endif
19064.                   endif
19069.                   if ( -2 + n_order_phase >= 0 ) then
19071.                      if ( nd_layer > 0 ) then
19072.                         if ( nd_profile > 0 ) then
19071.                            $I_L19071_703 = 0
19071.                            do
19069.                               $I_L19069_699 = 0
19069.                               do
19072.                                  $I_L19072_694 = 0
19072.                                  do
19071.                                     $I_L19071_682 = 0
19071. !dir$ shortloop16
19071. !dir$ blocking_size( 4, 4 )
19071.                                     do
19069.                                        $I_L19069_679 = 0
19069.                                        if ( min( -1 + n_order_phase, 8 + 8 * $I_L19069_699 ) + -8 * $I_L19069_699 >= 4 ) then
19069.                                           $I_L19069_712 = 0
19069. !dir$ shortloop16
19069. !dir$ blocking_size( 8, 8 )
19069.                                           do
19072.                                              $I_L19072_572 = 0
19072. !dir$ ivdep
19072. !dir$ loop_info (automatic) cache_nt( phase_fnc )
19072. !dir$ blocking_size( 256, 256 )
19072.                                              do
19073.                                                 $ks_phf_WR0_R3 = ks_phf(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703) * asymmetry(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703)
19073.                                                 ks_phf(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703) = $ks_phf_WR0_R3
19074.                                                 phase_fnc(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703, 2 + 8 * $I_L19069_699 + 4 * $I_L19069_712) = $ks_phf_WR0_R3 + phase_fnc(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703, 2 + 8 * $I_L19069_699 + 4 * $I_L19069_712)
19073.                                                 $ks_phf_WR0_R3 = $ks_phf_WR0_R3 * asymmetry(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703)
19073.                                                 ks_phf(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703) = $ks_phf_WR0_R3
19074.                                                 phase_fnc(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703, 3 + 8 * $I_L19069_699 + 4 * $I_L19069_712) = $ks_phf_WR0_R3 + phase_fnc(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703, 3 + 8 * $I_L19069_699 + 4 * $I_L19069_712)
19073.                                                 $ks_phf_WR0_R3 = $ks_phf_WR0_R3 * asymmetry(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703)
19073.                                                 ks_phf(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703) = $ks_phf_WR0_R3
19074.                                                 phase_fnc(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703, 4 + 8 * $I_L19069_699 + 4 * $I_L19069_712) = $ks_phf_WR0_R3 + phase_fnc(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703, 4 + 8 * $I_L19069_699 + 4 * $I_L19069_712)
19073.                                                 $ks_phf_WR0_R3 = $ks_phf_WR0_R3 * asymmetry(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703)
19073.                                                 ks_phf(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703) = $ks_phf_WR0_R3
19074.                                                 phase_fnc(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703, 5 + 8 * $I_L19069_699 + 4 * $I_L19069_712) = $ks_phf_WR0_R3 + phase_fnc(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703, 5 + 8 * $I_L19069_699 + 4 * $I_L19069_712)
19072.                                                 $I_L19072_572 = 1 + $I_L19072_572
19072.                                                 if ( $I_L19072_572 >= min( nd_profile, 256 + 256 * $I_L19072_694 ) + -256 * $I_L19072_694 ) exit
19072.                                              enddo
19069.                                              $I_L19069_712 = 1 + $I_L19069_712
19069.                                              if ( $I_L19069_712 >= _rsh( min( -1 + n_order_phase, 8 + 8 * $I_L19069_699 ) + -8 * $I_L19069_699, 2 ) ) exit
19069.                                           enddo
19069.                                           $I_L19069_679 = and( 0xfffffffffffffffcUL, min( -1 + n_order_phase, 8 + 8 * $I_L19069_699 ) + -8 * $I_L19069_699 )
19069.                                        endif
19069.                                        if ( $I_L19069_679 < min( -1 + n_order_phase, 8 + 8 * $I_L19069_699 ) + -8 * $I_L19069_699 ) then
19069.                                           $I_L19069_709 = 0
19069. !dir$ shortloop16
19069. !dir$ blocking_size( 8, 8 )
19069.                                           do
19072.                                              $I_L19072_572 = 0
19072. !dir$ ivdep
19072. !dir$ loop_info (automatic) cache_nt( phase_fnc )
19072. !dir$ blocking_size( 256, 256 )
19072.                                              do
19073.                                                 $ks_phf_WR0_R3 = ks_phf(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703) * asymmetry(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703)
19073.                                                 ks_phf(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703) = $ks_phf_WR0_R3
19074.                                                 phase_fnc(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703, 2 + $I_L19069_679 + $I_L19069_709 + 8 * $I_L19069_699) = $ks_phf_WR0_R3 + phase_fnc(1 + $I_L19072_572 + 256 * $I_L19072_694, 1 + $I_L19071_682 + 4 * $I_L19071_703, 2 + $I_L19069_679 + $I_L19069_709 + 8 * $I_L19069_699)
19072.                                                 $I_L19072_572 = 1 + $I_L19072_572
19072.                                                 if ( $I_L19072_572 >= min( nd_profile, 256 + 256 * $I_L19072_694 ) + -256 * $I_L19072_694 ) exit
19072.                                              enddo
19069.                                              $I_L19069_709 = 1 + $I_L19069_709
19069.                                              if ( $I_L19069_709 >= min( -1 + n_order_phase, 8 + 8 * $I_L19069_699 ) + -$I_L19069_679 + -8 * $I_L19069_699 ) exit
19069.                                           enddo
19069.                                        endif
19071.                                        $I_L19071_682 = 1 + $I_L19071_682
19076.                                        if ( $I_L19071_682 >= min( nd_layer, 4 + 4 * $I_L19071_703 ) + -4 * $I_L19071_703 ) exit
19076.                                     enddo
19072.                                     $I_L19072_694 = 1 + $I_L19072_694
19072.                                     if ( $I_L19072_694 >= 1 + max( 0, -1 + _rsh( 255 + nd_profile, 8 ) ) ) exit
19072.                                  enddo
19069.                                  $I_L19069_699 = 1 + $I_L19069_699
19077.                                  if ( $I_L19069_699 >= 1 + max( 0, -1 + _rsh( 6 + n_order_phase, 3 ) ) ) exit
19077.                               enddo
19071.                               $I_L19071_703 = 1 + $I_L19071_703
19071.                               if ( $I_L19071_703 >= 1 + max( 0, -1 + _rsh( 3 + nd_layer, 2 ) ) ) exit
19071.                            enddo
19071.                         endif
19071.                      endif
19071.                   endif
19084.                   if ( l_rescale /= .false. ) then
19086.                      if ( n_order_forward + -n_order_phase == 0 ) then
19088.                         if ( nd_layer > 0 ) then
19089.                            if ( nd_profile > 0 ) then
19088.                               $I_L19088_647 = 0
19088.                               do
19089.                                  $I_L19089_579 = 0
19089. !dir$ ivdep
19089.                                  do
19090.                                     forward_scatter(1 + $I_L19089_579, 1 + $I_L19088_647) = forward_scatter(1 + $I_L19089_579, 1 + $I_L19088_647) + ks_phf(1 + $I_L19089_579, 1 + $I_L19088_647)
19092.                                     $I_L19089_579 = 1 + $I_L19089_579
19089.                                     if ( $I_L19089_579 >= nd_profile ) exit
19089.                                  enddo
19093.                                  $I_L19088_647 = 1 + $I_L19088_647
19092.                                  if ( $I_L19088_647 >= nd_layer ) exit
19092.                               enddo
19092.                            endif
19092.                         endif
19094.                      else if ( n_order_phase + -n_order_forward == -1 ) then
19096.                         if ( nd_layer > 0 ) then
19097.                            if ( nd_profile > 0 ) then
19096.                               $I_L19096_645 = 0
19096.                               do
19097.                                  $I_L19097_577 = 0
19097. !dir$ ivdep
19097.                                  do
19098.                                     forward_scatter(1 + $I_L19097_577, 1 + $I_L19096_645) = forward_scatter(1 + $I_L19097_577, 1 + $I_L19096_645) + asymmetry(1 + $I_L19097_577, 1 + $I_L19096_645) * ks_phf(1 + $I_L19097_577, 1 + $I_L19096_645)
19100.                                     $I_L19097_577 = 1 + $I_L19097_577
19097.                                     if ( $I_L19097_577 >= nd_profile ) exit
19097.                                  enddo
19101.                                  $I_L19096_645 = 1 + $I_L19096_645
19100.                                  if ( $I_L19096_645 >= nd_layer ) exit
19100.                               enddo
19100.                            endif
19100.                         endif
19100.                      else if ( nd_layer > 0 ) then
19107.                         if ( nd_profile > 0 ) then
19106.                            $I_L19106_643 = 0
19106.                            do
19107.                               $I_L19107_575 = 0
19107. !dir$ ivdep
19107.                               do
19108.                                  forward_scatter(1 + $I_L19107_575, 1 + $I_L19106_643) = forward_scatter(1 + $I_L19107_575, 1 + $I_L19106_643) + k_scatter(1 + $I_L19107_575, 1 + $I_L19106_643) * asymmetry(1 + $I_L19107_575, 1 + $I_L19106_643) ** n_order_forward
19111.                                  $I_L19107_575 = 1 + $I_L19107_575
19107.                                  if ( $I_L19107_575 >= nd_profile ) exit
19107.                               enddo
19112.                               $I_L19106_643 = 1 + $I_L19106_643
19111.                               if ( $I_L19106_643 >= nd_layer ) exit
19111.                            enddo
19111.                         endif
19111.                      endif
19111.                   endif
19111.                else
19124.                   if ( n_order_phase > 0 ) then
19124.                      $I_L19124_685 = 0
19124.                      do
19125.                         if ( $l_interpolate_hum_S13 /= .false. ) then
19127.                            if ( nd_layer > 0 ) then
19128.                               if ( nd_profile > 0 ) then
19127.                                  $I_L19127_651 = 0
19127.                                  do
19128.                                     $I_L19128_583 = 0
19128. !dir$ ivdep
19128.                                     do
19129.                                        $i_pointer_S43 = i_humidity_pointer(1 + $I_L19128_583, 1 + $I_L19127_651)
19130.                                        phf_coeff(1 + $I_L19128_583, 1 + $I_L19127_651) = aerosol_phase_fnc($i_pointer_S43, 1 + $I_L19124_685, 1 + $I_L18929_707) + weight_upper(1 + $I_L19128_583, 1 + $I_L19127_651) * ( aerosol_phase_fnc(1 + $i_pointer_S43, 1 + $I_L19124_685, 1 + $I_L18929_707) + -aerosol_phase_fnc($i_pointer_S43, 1 + $I_L19124_685, 1 + $I_L18929_707) )
19134.                                        $I_L19128_583 = 1 + $I_L19128_583
19128.                                        if ( $I_L19128_583 >= nd_profile ) exit
19128.                                     enddo
19135.                                     $I_L19127_651 = 1 + $I_L19127_651
19134.                                     if ( $I_L19127_651 >= nd_layer ) exit
19134.                                  enddo
19134.                               endif
19134.                            endif
19136.                         else if ( nd_layer > 0 ) then
19139.                            if ( nd_profile > 0 ) then
19138.                               $SCA_aerosol_phase_fnc_I4 = aerosol_phase_fnc(1, 1 + $I_L19124_685, 1 + $I_L18929_707)
19138.                               $I_L19138_649 = 0
19138.                               do
19139.                                  $I_L19139_581 = 0
19139. !dir$ ivdep
19139.                                  do
19140.                                     phf_coeff(1 + $I_L19139_581, 1 + $I_L19138_649) = $SCA_aerosol_phase_fnc_I4
19141.                                     $I_L19139_581 = 1 + $I_L19139_581
19139.                                     if ( $I_L19139_581 >= nd_profile ) exit
19139.                                  enddo
19142.                                  $I_L19138_649 = 1 + $I_L19138_649
19141.                                  if ( $I_L19138_649 >= nd_layer ) exit
19141.                               enddo
19141.                            endif
19141.                         endif
19145.                         if ( nd_layer > 0 ) then
19146.                            if ( nd_profile > 0 ) then
19145.                               $I_L19145_653 = 0
19145.                               do
19146.                                  $I_L19146_585 = 0
19146. !dir$ ivdep
19146. !dir$ loop_info (automatic) cache_nt( phase_fnc )
19146.                                  do
19147.                                     phase_fnc(1 + $I_L19146_585, 1 + $I_L19145_653, 1 + $I_L19124_685) = phase_fnc(1 + $I_L19146_585, 1 + $I_L19145_653, 1 + $I_L19124_685) + k_scatter(1 + $I_L19146_585, 1 + $I_L19145_653) * phf_coeff(1 + $I_L19146_585, 1 + $I_L19145_653)
19149.                                     $I_L19146_585 = 1 + $I_L19146_585
19146.                                     if ( $I_L19146_585 >= nd_profile ) exit
19146.                                  enddo
19150.                                  $I_L19145_653 = 1 + $I_L19145_653
19149.                                  if ( $I_L19145_653 >= nd_layer ) exit
19149.                               enddo
19149.                            endif
19149.                         endif
19151.                         $I_L19124_685 = 1 + $I_L19124_685
19150.                         if ( $I_L19124_685 >= n_order_phase ) exit
19150.                      enddo
19150.                   endif
19153.                   if ( l_rescale /= .false. ) then
19154.                      if ( $l_interpolate_hum_S13 /= .false. ) then
19156.                         if ( nd_layer > 0 ) then
19157.                            if ( nd_profile > 0 ) then
19156.                               $I_L19156_657 = 0
19156.                               do
19157.                                  $I_L19157_589 = 0
19157. !dir$ ivdep
19157.                                  do
19158.                                     $i_pointer_S51 = i_humidity_pointer(1 + $I_L19157_589, 1 + $I_L19156_657)
19159.                                     phf_coeff(1 + $I_L19157_589, 1 + $I_L19156_657) = aerosol_phase_fnc($i_pointer_S51, n_order_forward, 1 + $I_L18929_707) + weight_upper(1 + $I_L19157_589, 1 + $I_L19156_657) * ( aerosol_phase_fnc(1 + $i_pointer_S51, n_order_forward, 1 + $I_L18929_707) + -aerosol_phase_fnc($i_pointer_S51, n_order_forward, 1 + $I_L18929_707) )
19166.                                     $I_L19157_589 = 1 + $I_L19157_589
19157.                                     if ( $I_L19157_589 >= nd_profile ) exit
19157.                                  enddo
19167.                                  $I_L19156_657 = 1 + $I_L19156_657
19166.                                  if ( $I_L19156_657 >= nd_layer ) exit
19166.                               enddo
19166.                            endif
19166.                         endif
19168.                      else if ( nd_layer > 0 ) then
19171.                         if ( nd_profile > 0 ) then
19172.                            $SC_aerosol_phase_fnc_I3 = aerosol_phase_fnc(1, n_order_forward, 1 + $I_L18929_707)
19170.                            $I_L19170_655 = 0
19170.                            do
19171.                               $I_L19171_587 = 0
19171. !dir$ ivdep
19171.                               do
19172.                                  phf_coeff(1 + $I_L19171_587, 1 + $I_L19170_655) = $SC_aerosol_phase_fnc_I3
19174.                                  $I_L19171_587 = 1 + $I_L19171_587
19171.                                  if ( $I_L19171_587 >= nd_profile ) exit
19171.                               enddo
19175.                               $I_L19170_655 = 1 + $I_L19170_655
19174.                               if ( $I_L19170_655 >= nd_layer ) exit
19174.                            enddo
19174.                         endif
19174.                      endif
19178.                      if ( nd_layer > 0 ) then
19179.                         if ( nd_profile > 0 ) then
19178.                            $I_L19178_659 = 0
19178.                            do
19179.                               $I_L19179_591 = 0
19179. !dir$ ivdep
19179.                               do
19180.                                  forward_scatter(1 + $I_L19179_591, 1 + $I_L19178_659) = forward_scatter(1 + $I_L19179_591, 1 + $I_L19178_659) + k_scatter(1 + $I_L19179_591, 1 + $I_L19178_659) * phf_coeff(1 + $I_L19179_591, 1 + $I_L19178_659)
19183.                                  $I_L19179_591 = 1 + $I_L19179_591
19179.                                  if ( $I_L19179_591 >= nd_profile ) exit
19179.                               enddo
19184.                               $I_L19178_659 = 1 + $I_L19178_659
19183.                               if ( $I_L19178_659 >= nd_layer ) exit
19183.                            enddo
19183.                         endif
19183.                      endif
19183.                   endif
19183.                endif
19189.                if ( last_layer + -first_layer >= 0 ) then
19190.                   if ( l_solar_phf /= .false. ) then
19192.                      if ( n_direction > 0 ) then
19189.                         $I_L19189_705 = 0
19189.                         do
19192.                            $I_L19192_701 = 0
19192.                            do
19189.                               $I_L19189_696 = 0
19189. !dir$ shortloop16
19189. !dir$ blocking_size( 8, 8 )
19189.                               do
19192.                                  $I_L19192_691 = 0
19192. !dir$ shortloop16
19192. !dir$ blocking_size( 8, 8 )
19192.                                  do
19196.                                     if ( $l_interpolate_hum_S13 /= .false. ) then
19197.                                        if ( n_profile > 0 ) then
19197.                                           $I_L19197_601 = 0
19197. !dir$ ivdep
19197.                                           do
19198.                                              $i_pointer_S58 = i_humidity_pointer(1 + $I_L19197_601, first_layer + $I_L19189_696 + 8 * $I_L19189_705)
19199.                                              phf_coeff(1 + $I_L19197_601, first_layer + $I_L19189_696 + 8 * $I_L19189_705) = aerosol_phase_fnc($i_pointer_S58, 1, 1 + $I_L18929_707) + weight_upper(1 + $I_L19197_601, first_layer + $I_L19189_696 + 8 * $I_L19189_705) * ( aerosol_phase_fnc(1 + $i_pointer_S58, 1, 1 + $I_L18929_707) + -aerosol_phase_fnc($i_pointer_S58, 1, 1 + $I_L18929_707) )
19203.                                              $I_L19197_601 = 1 + $I_L19197_601
19197.                                              if ( $I_L19197_601 >= n_profile ) exit
19197.                                           enddo
19197.                                        endif
19204.                                     else if ( n_profile > 0 ) then
19206.                                        $SC_aerosol_phase_fnc_I6 = aerosol_phase_fnc(1, 1, 1 + $I_L18929_707)
19205.                                        $I_L19205_603 = 0
19205. !dir$ ivdep
19205.                                        do
19206.                                           phf_coeff(1 + $I_L19205_603, first_layer + $I_L19189_696 + 8 * $I_L19189_705) = $SC_aerosol_phase_fnc_I6
19207.                                           $I_L19205_603 = 1 + $I_L19205_603
19205.                                           if ( $I_L19205_603 >= n_profile ) exit
19205.                                        enddo
19205.                                     endif
19209.                                     if ( n_profile > 0 ) then
19209.                                        $I_L19209_605 = 0
19209. !dir$ ivdep
19209.                                        do
19212.                                           p_legendre_ls_m1(1 + $I_L19209_605, first_layer + $I_L19189_696 + 8 * $I_L19189_705) = 1.0
19213.                                           $p_legendre_ls_WR0_R4 = cos_sol_view(1 + $I_L19209_605, 1 + $I_L19192_691 + 8 * $I_L19192_701)
19213.                                           p_legendre_ls(1 + $I_L19209_605, first_layer + $I_L19189_696 + 8 * $I_L19189_705) = $p_legendre_ls_WR0_R4
19214.                                           phase_fnc_solar_tmp(1 + $I_L19209_605, first_layer + $I_L19189_696 + 8 * $I_L19189_705) = 1.0 + 3.0 * $p_legendre_ls_WR0_R4 * phf_coeff(1 + $I_L19209_605, first_layer + $I_L19189_696 + 8 * $I_L19189_705)
19216.                                           $I_L19209_605 = 1 + $I_L19209_605
19209.                                           if ( $I_L19209_605 >= n_profile ) exit
19209.                                        enddo
19209.                                     endif
19218.                                     if ( $l_use_hg_phf_S22 /= .false. ) then
19220.                                        if ( n_profile > 0 ) then
19220.                                           $I_L19220_607 = 0
19220. !dir$ ivdep
19220.                                           do
19221.                                              asymmetry(1 + $I_L19220_607, first_layer + $I_L19189_696 + 8 * $I_L19189_705) = phf_coeff(1 + $I_L19220_607, first_layer + $I_L19189_696 + 8 * $I_L19189_705)
19222.                                              $I_L19220_607 = 1 + $I_L19220_607
19220.                                              if ( $I_L19220_607 >= n_profile ) exit
19220.                                           enddo
19220.                                        endif
19220.                                     endif
19225.                                     if ( -2 + n_order_phase_solar >= 0 ) then
19225.                                        $I_L19225_669 = 0
19225.                                        do
19227.                                           $cnst1_S65 = 1.0 + -( 1.0/( real( 2 + $I_L19225_669, 8 ) ) )
19228.                                           if ( n_profile > 0 ) then
19228.                                              $I_L19228_609 = 0
19228. !dir$ ivdep
19228.                                              do
19229.                                                 $p_legendre_tmp_WR0_R5 = p_legendre_ls(1 + $I_L19228_609, first_layer + $I_L19189_696 + 8 * $I_L19189_705)
19230.                                                 p_legendre_ls(1 + $I_L19228_609, first_layer + $I_L19189_696 + 8 * $I_L19189_705) = -( $cnst1_S65 * p_legendre_ls_m1(1 + $I_L19228_609, first_layer + $I_L19189_696 + 8 * $I_L19189_705) ) + cos_sol_view(1 + $I_L19228_609, 1 + $I_L19192_691 + 8 * $I_L19192_701) * $p_legendre_tmp_WR0_R5 * ( 1.0 + $cnst1_S65 )
19233.                                                 p_legendre_ls_m1(1 + $I_L19228_609, first_layer + $I_L19189_696 + 8 * $I_L19189_705) = $p_legendre_tmp_WR0_R5
19234.                                                 $I_L19228_609 = 1 + $I_L19228_609
19228.                                                 if ( $I_L19228_609 >= n_profile ) exit
19228.                                              enddo
19228.                                           endif
19237.                                           if ( $l_use_hg_phf_S22 /= .false. ) then
19238.                                              if ( n_profile > 0 ) then
19238.                                                 $I_L19238_611 = 0
19238. !dir$ ivdep
19238.                                                 do
19239.                                                    phf_coeff(1 + $I_L19238_611, first_layer + $I_L19189_696 + 8 * $I_L19189_705) = phf_coeff(1 + $I_L19238_611, first_layer + $I_L19189_696 + 8 * $I_L19189_705) * asymmetry(1 + $I_L19238_611, first_layer + $I_L19189_696 + 8 * $I_L19189_705)
19240.                                                    $I_L19238_611 = 1 + $I_L19238_611
19238.                                                    if ( $I_L19238_611 >= n_profile ) exit
19238.                                                 enddo
19238.                                              endif
19241.                                           else if ( $l_interpolate_hum_S13 /= .false. ) then
19243.                                              if ( n_profile > 0 ) then
19243.                                                 $I_L19243_613 = 0
19243. !dir$ ivdep
19243.                                                 do
19244.                                                    $i_pointer_S68 = i_humidity_pointer(1 + $I_L19243_613, first_layer + $I_L19189_696 + 8 * $I_L19189_705)
19245.                                                    phf_coeff(1 + $I_L19243_613, first_layer + $I_L19189_696 + 8 * $I_L19189_705) = aerosol_phase_fnc($i_pointer_S68, 2 + $I_L19225_669, 1 + $I_L18929_707) + weight_upper(1 + $I_L19243_613, first_layer + $I_L19189_696 + 8 * $I_L19189_705) * ( aerosol_phase_fnc(1 + $i_pointer_S68, 2 + $I_L19225_669, 1 + $I_L18929_707) + -aerosol_phase_fnc($i_pointer_S68, 2 + $I_L19225_669, 1 + $I_L18929_707) )
19250.                                                    $I_L19243_613 = 1 + $I_L19243_613
19243.                                                    if ( $I_L19243_613 >= n_profile ) exit
19243.                                                 enddo
19243.                                              endif
19243.                                           else if ( n_profile > 0 ) then
19252.                                              $SCA_aerosol_phase_fnc_I5 = aerosol_phase_fnc(1, 2 + $I_L19225_669, 1 + $I_L18929_707)
19252.                                              $I_L19252_615 = 0
19252. !dir$ ivdep
19252.                                              do
19253.                                                 phf_coeff(1 + $I_L19252_615, first_layer + $I_L19189_696 + 8 * $I_L19189_705) = $SCA_aerosol_phase_fnc_I5
19254.                                                 $I_L19252_615 = 1 + $I_L19252_615
19252.                                                 if ( $I_L19252_615 >= n_profile ) exit
19252.                                              enddo
19252.                                           endif
19257.                                           if ( n_profile > 0 ) then
19257.                                              $I_L19257_617 = 0
19257. !dir$ ivdep
19257.                                              do
19258.                                                 phase_fnc_solar_tmp(1 + $I_L19257_617, first_layer + $I_L19189_696 + 8 * $I_L19189_705) = phase_fnc_solar_tmp(1 + $I_L19257_617, first_layer + $I_L19189_696 + 8 * $I_L19189_705) + phf_coeff(1 + $I_L19257_617, first_layer + $I_L19189_696 + 8 * $I_L19189_705) * p_legendre_ls(1 + $I_L19257_617, first_layer + $I_L19189_696 + 8 * $I_L19189_705) * real( 5 + 2 * $I_L19225_669, 8 )
19261.                                                 $I_L19257_617 = 1 + $I_L19257_617
19257.                                                 if ( $I_L19257_617 >= n_profile ) exit
19257.                                              enddo
19257.                                           endif
19262.                                           $I_L19225_669 = 1 + $I_L19225_669
19261.                                           if ( $I_L19225_669 >= -1 + n_order_phase_solar ) exit
19261.                                        enddo
19261.                                     endif
19264.                                     if ( n_profile > 0 ) then
19264.                                        $I_L19264_619 = 0
19264. !dir$ ivdep
19264. !dir$ loop_info (automatic) cache_nt( phase_fnc_solar )
19264.                                        do
19265.                                           phase_fnc_solar(1 + $I_L19264_619, first_layer + $I_L19189_696 + 8 * $I_L19189_705, 1 + $I_L19192_691 + 8 * $I_L19192_701) = phase_fnc_solar(1 + $I_L19264_619, first_layer + $I_L19189_696 + 8 * $I_L19189_705, 1 + $I_L19192_691 + 8 * $I_L19192_701) + phase_fnc_solar_tmp(1 + $I_L19264_619, first_layer + $I_L19189_696 + 8 * $I_L19189_705) * k_scatter(1 + $I_L19264_619, first_layer + $I_L19189_696 + 8 * $I_L19189_705)
19268.                                           $I_L19264_619 = 1 + $I_L19264_619
19264.                                           if ( $I_L19264_619 >= n_profile ) exit
19264.                                        enddo
19264.                                     endif
19192.                                     $I_L19192_691 = 1 + $I_L19192_691
19268.                                     if ( $I_L19192_691 >= min( n_direction, 8 + 8 * $I_L19192_701 ) + -8 * $I_L19192_701 ) exit
19268.                                  enddo
19189.                                  $I_L19189_696 = 1 + $I_L19189_696
19189.                                  if ( $I_L19189_696 >= min( 1 + last_layer + -first_layer, 8 + 8 * $I_L19189_705 ) + -8 * $I_L19189_705 ) exit
19189.                               enddo
19192.                               $I_L19192_701 = 1 + $I_L19192_701
19301.                               if ( $I_L19192_701 >= 1 + max( 0, -1 + _rsh( 7 + n_direction, 3 ) ) ) exit
19301.                            enddo
19189.                            $I_L19189_705 = 1 + $I_L19189_705
19189.                            if ( $I_L19189_705 >= 1 + max( 0, -1 + _rsh( 8 + last_layer + -first_layer, 3 ) ) ) exit
19189.                         enddo
19189.                      endif
19273.                      if ( l_rescale /= .false. ) then
19274.                         if ( $l_use_hg_phf_S22 /= .false. ) then
19275.                            if ( n_profile > 0 ) then
19189.                               $I_L19189_671 = 0
19189.                               do
19275.                                  $I_L19275_621 = 0
19275. !dir$ ivdep
19275.                                  do
19276.                                     phf_coeff(1 + $I_L19275_621, first_layer + $I_L19189_671) = phf_coeff(1 + $I_L19275_621, first_layer + $I_L19189_671) * asymmetry(1 + $I_L19275_621, first_layer + $I_L19189_671)
19277.                                     $I_L19275_621 = 1 + $I_L19275_621
19275.                                     if ( $I_L19275_621 >= n_profile ) exit
19275.                                  enddo
19303.                                  $I_L19189_671 = 1 + $I_L19189_671
19301.                                  if ( $I_L19189_671 >= 1 + last_layer + -first_layer ) exit
19301.                               enddo
19301.                            endif
19301.                         else if ( $l_interpolate_hum_S13 /= .false. ) then
19281.                            if ( n_profile > 0 ) then
19189.                               $I_L19189_673 = 0
19189.                               do
19281.                                  $I_L19281_623 = 0
19281. !dir$ ivdep
19281.                                  do
19282.                                     $i_pointer_S74 = i_humidity_pointer(1 + $I_L19281_623, first_layer + $I_L19189_673)
19283.                                     phf_coeff(1 + $I_L19281_623, first_layer + $I_L19189_673) = aerosol_phase_fnc($i_pointer_S74, 1 + n_order_phase_solar, 1 + $I_L18929_707) + weight_upper(1 + $I_L19281_623, first_layer + $I_L19189_673) * ( aerosol_phase_fnc(1 + $i_pointer_S74, 1 + n_order_phase_solar, 1 + $I_L18929_707) + -aerosol_phase_fnc($i_pointer_S74, 1 + n_order_phase_solar, 1 + $I_L18929_707) )
19288.                                     $I_L19281_623 = 1 + $I_L19281_623
19281.                                     if ( $I_L19281_623 >= n_profile ) exit
19281.                                  enddo
19303.                                  $I_L19189_673 = 1 + $I_L19189_673
19301.                                  if ( $I_L19189_673 >= 1 + last_layer + -first_layer ) exit
19301.                               enddo
19301.                            endif
19301.                         else if ( n_profile > 0 ) then
19291.                            $SC_aerosol_phase_fnc_I8 = aerosol_phase_fnc(1, 1 + n_order_phase_solar, 1 + $I_L18929_707)
19189.                            $I_L19189_675 = 0
19189.                            do
19291.                               $SC_aerosol_phase_fnc_I7 = $SC_aerosol_phase_fnc_I8
19290.                               $I_L19290_625 = 0
19290. !dir$ ivdep
19290.                               do
19291.                                  phf_coeff(1 + $I_L19290_625, first_layer + $I_L19189_675) = $SC_aerosol_phase_fnc_I7
19292.                                  $I_L19290_625 = 1 + $I_L19290_625
19290.                                  if ( $I_L19290_625 >= n_profile ) exit
19290.                               enddo
19303.                               $I_L19189_675 = 1 + $I_L19189_675
19301.                               if ( $I_L19189_675 >= 1 + last_layer + -first_layer ) exit
19301.                            enddo
19301.                         endif
19295.                         if ( n_profile > 0 ) then
19189.                            $I_L19189_677 = 0
19189.                            do
19295.                               $I_L19295_627 = 0
19295. !dir$ ivdep
19295.                               do
19296.                                  forward_solar(1 + $I_L19295_627, first_layer + $I_L19189_677) = forward_solar(1 + $I_L19295_627, first_layer + $I_L19189_677) + phf_coeff(1 + $I_L19295_627, first_layer + $I_L19189_677) * k_scatter(1 + $I_L19295_627, first_layer + $I_L19189_677)
19298.                                  $I_L19295_627 = 1 + $I_L19295_627
19295.                                  if ( $I_L19295_627 >= n_profile ) exit
19295.                               enddo
19303.                               $I_L19189_677 = 1 + $I_L19189_677
19301.                               if ( $I_L19189_677 >= 1 + last_layer + -first_layer ) exit
19301.                            enddo
19301.                         endif
19301.                      endif
19301.                   endif
19301.                endif
19388.                $I_L18929_707 = 1 + $I_L18929_707
18943.             else if ( i_aerosol_parametrization(1 + $I_L18929_707) == 4 ) then
18943.             else if ( i_aerosol_parametrization(1 + $I_L18929_707) == 2 ) then
18943.             else if ( i_aerosol_parametrization(1 + $I_L18929_707) == 5 ) then
18943.             else if ( i_aerosol_parametrization(1 + $I_L18929_707) == 3 ) then
18943.             else
18943.             endif
18943.             if ( $I_L18929_707 >= n_aerosol ) exit
18943.          enddo
18943.          goto 20
18943.       else
18943.    20    continue
18686.          _free( t$2587 )
18686.       endif
19393.       return
19393.       end
19393.       
19416.       
19416.       subroutine opt_prop_ice_cloud( ierr, n_profile, n_layer, n_cloud_top, n_cloud_profile, i_cloud_profile, n_order_phase, l_rescale, n_order_forward, l_henyey_greenstein_pf, l_solar_phf, n_order_phase_solar, n_direction, cos_sol_view, i_parametrization_ice, ice_cloud_parameter, ice_mass_frac, dim_char_ice, p, t, density, n_opt_level_cloud_prsc, ice_pressure_prsc, ice_absorption_prsc, ice_scattering_prsc, ice_phase_fnc_prsc, k_ext_tot_cloud, k_ext_scat_cloud, phase_fnc_cloud, forward_scatter_cloud, forward_solar_cloud, phase_fnc_solar_cloud, nd_profile, nd_radiance_profile, nd_layer, id_ct, nd_direction, nd_phase_term, nd_max_order, nd_cloud_parameter, nd_profile_prsc, nd_opt_level_prsc )
19416.       t$674 = id_ct
19416.       t$675 = nd_layer
19416.       t$2633 = 1 + nd_layer + -id_ct
19504.       t$2634 = _zla( 0, 1 + nd_layer + -id_ct )
19416.       t$676 = nd_profile
19506.       t$2635 = _zla( 0, nd_profile )
19416.       t$2636 = _zla( 0, nd_profile )
19416.       t$2637 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
19416.       t$677 = nd_radiance_profile
19416.       t$678 = nd_direction
19522.       t$2638 = _zla( 0, nd_radiance_profile )
19416.       t$2639 = _zla( 0, nd_radiance_profile )
19522.       t$2640 = _zla( 0, nd_direction )
19416.       t$2641 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
19416.       t$679 = nd_cloud_parameter
19527.       t$2642 = _zla( 0, nd_cloud_parameter )
19539.       t$2643 = _zla( 0, nd_layer )
19416.       t$2644 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
19416.       t$680 = nd_profile_prsc
19416.       t$681 = nd_opt_level_prsc
19541.       t$2645 = _zla( 0, nd_profile_prsc )
19416.       t$2646 = _zla( 0, nd_profile_prsc )
19541.       t$2647 = _zla( 0, nd_opt_level_prsc )
19416.       t$2648 = _zla( 0, nd_profile_prsc ) * _zla( 0, nd_opt_level_prsc )
19416.       t$682 = nd_phase_term
19416.       t$2649 = _zla( 0, nd_profile_prsc ) * _zla( 0, nd_opt_level_prsc )
19547.       t$2650 = _zla( 0, nd_phase_term )
19416.       t$2651 = _zla( 0, nd_profile_prsc ) * _zla( 0, nd_opt_level_prsc ) * _zla( 0, nd_phase_term )
19416.       t$683 = nd_max_order
19416.       t$2652 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
19556.       t$2653 = _zla( 0, nd_max_order )
19416.       t$2654 = _zla( 0, nd_profile ) * _zla( 0, nd_max_order ) * _zla( 0, 1 + nd_layer + -id_ct )
19416.       t$2655 = _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
19416.       t$2656 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * _zla( 0, 1 + nd_layer + -id_ct )
19579.       t$2659 = 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
19604.       t$2660 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct ) ) / 8
19604.       t$2662 = t$2660 + 8 * _zla( 0, nd_radiance_profile )
19598.       t$2663 = 8 * ( 7 + t$2660 + 8 * _zla( 0, nd_radiance_profile ) ) / 8
19598.       t$2665 = t$2663 + 8 * _zla( 0, nd_radiance_profile )
19600.       t$2666 = 8 * ( 7 + t$2663 + 8 * _zla( 0, nd_radiance_profile ) ) / 8
19600.       t$2668 = t$2666 + 8 * _zla( 0, nd_radiance_profile )
19602.       t$2669 = 8 * ( 7 + t$2666 + 8 * _zla( 0, nd_radiance_profile ) ) / 8
19602.       t$2671 = t$2669 + 8 * _zla( 0, nd_radiance_profile )
19416.       t$2657 = int( _alloc( t$2669 + 8 * _zla( 0, nd_radiance_profile ) ), 8 )
19579.       t$2658 = t$2657
19604.       t$2661 = t$2660 + t$2657
19598.       t$2664 = t$2663 + t$2657
19600.       t$2667 = t$2666 + t$2657
19602.       t$2670 = t$2669 + t$2657
19616.       if ( i_parametrization_ice == 1 .orelse. i_parametrization_ice == 6 .orelse. i_parametrization_ice == 7 .orelse. i_parametrization_ice == 9 .orelse. i_parametrization_ice == 10 .orelse. i_parametrization_ice == 5 ) then
19616.          goto 10
19616.       else
19616.          if ( l_henyey_greenstein_pf == .false. .orelse. i_parametrization_ice /= 11 ) then
19616.             if ( l_henyey_greenstein_pf == .false. .orelse. i_parametrization_ice /= 12 ) then
20009.                if ( l_henyey_greenstein_pf == .false. ) then
20009.                   if ( i_parametrization_ice == 11 ) then
20009.                      goto 30
20009.                   else if ( i_parametrization_ice == 12 ) then
20009.    30                continue
20020.                      if ( i_parametrization_ice == 11 ) then
20023.                         if ( nd_layer + -id_ct >= 0 ) then
20028.                            $SC_ice_cloud_parameter_I2 = ice_cloud_parameter(4)
20028.                            $SC_ice_cloud_parameter_I3 = ice_cloud_parameter(3)
20025.                            $SC_ice_cloud_parameter_I1 = ice_cloud_parameter(1)
20025.                            $SC_ice_cloud_parameter_I0 = ice_cloud_parameter(2)
20024.                            if ( nd_profile > 0 ) then
20047.                               $SC_ice_cloud_parameter_I37 = ice_cloud_parameter(3 + 2 * n_order_forward)
20047.                               $SC_ice_cloud_parameter_I36 = ice_cloud_parameter(4 + 2 * n_order_forward)
20023.                               $I_L20023_642 = 0
20023.                               do
20024.                                  $I_L20024_572 = 0
20024. !dir$ ivdep
20024.                                  do
20025.                                     $k_ext_tot_cloud_WR0_R0 = ice_mass_frac(1 + $I_L20024_572, id_ct + $I_L20023_642) * ( $SC_ice_cloud_parameter_I1 + ( $SC_ice_cloud_parameter_I0 * 1.0/dim_char_ice(1 + $I_L20024_572, id_ct + $I_L20023_642) ) )
20025.                                     k_ext_tot_cloud(1 + $I_L20024_572, id_ct + $I_L20023_642) = $k_ext_tot_cloud_WR0_R0
20028.                                     $k_ext_scat_cloud_WR0_R1 = $k_ext_tot_cloud_WR0_R0 * ( 1.0 + -$SC_ice_cloud_parameter_I3 + -( $SC_ice_cloud_parameter_I2 * dim_char_ice(1 + $I_L20024_572, id_ct + $I_L20023_642) ) )
20028.                                     k_ext_scat_cloud(1 + $I_L20024_572, id_ct + $I_L20023_642) = $k_ext_scat_cloud_WR0_R1
20047.                                     forward_scatter_cloud(1 + $I_L20024_572, id_ct + $I_L20023_642) = $k_ext_scat_cloud_WR0_R1 * ( $SC_ice_cloud_parameter_I37 + $SC_ice_cloud_parameter_I36 * dim_char_ice(1 + $I_L20024_572, id_ct + $I_L20023_642) )
20031.                                     $I_L20024_572 = 1 + $I_L20024_572
20024.                                     if ( $I_L20024_572 >= nd_profile ) exit
20024.                                  enddo
20032.                                  $I_L20023_642 = 1 + $I_L20023_642
20031.                                  if ( $I_L20023_642 >= 1 + nd_layer + -id_ct ) exit
20031.                               enddo
20031.                            endif
20031.                         endif
20033.                         if ( n_order_phase > 0 ) then
20035.                            if ( nd_layer + -id_ct >= 0 ) then
20036.                               if ( nd_profile > 0 ) then
20035.                                  $I_L20035_733 = 0
20035.                                  do
20033.                                     $I_L20033_725 = 0
20033.                                     do
20036.                                        $I_L20036_717 = 0
20036.                                        do
20035.                                           $I_L20035_692 = 0
20035. !dir$ shortloop16
20035. !dir$ blocking_size( 2, 2 )
20035.                                           do
20033.                                              $I_L20033_739 = 0
20033. !dir$ shortloop16
20033. !dir$ blocking_size( 2, 2 )
20033.                                              do
20036.                                                 $SCA_ice_cloud_parameter_I46 = ice_cloud_parameter(6 + 4 * $I_L20033_725 + 2 * $I_L20033_739)
20036.                                                 $SCA_ice_cloud_parameter_I47 = ice_cloud_parameter(5 + 4 * $I_L20033_725 + 2 * $I_L20033_739)
20036.                                                 $I_L20036_588 = 0
20036. !dir$ ivdep
20036. !dir$ blocking_size( 256, 256 )
20036.                                                 do
20037.                                                    phase_fnc_cloud(1 + $I_L20036_588 + 256 * $I_L20036_717, id_ct + $I_L20035_692 + 2 * $I_L20035_733, 1 + $I_L20033_739 + 2 * $I_L20033_725) = k_ext_scat_cloud(1 + $I_L20036_588 + 256 * $I_L20036_717, id_ct + $I_L20035_692 + 2 * $I_L20035_733) * ( $SCA_ice_cloud_parameter_I47 + $SCA_ice_cloud_parameter_I46 * dim_char_ice(1 + $I_L20036_588 + 256 * $I_L20036_717, id_ct + $I_L20035_692 + 2 * $I_L20035_733) )
20036.                                                    $I_L20036_588 = 1 + $I_L20036_588
20036.                                                    if ( $I_L20036_588 >= min( nd_profile, 256 + 256 * $I_L20036_717 ) + -256 * $I_L20036_717 ) exit
20036.                                                 enddo
20033.                                                 $I_L20033_739 = 1 + $I_L20033_739
20033.                                                 if ( $I_L20033_739 >= min( n_order_phase, 2 + 2 * $I_L20033_725 ) + -2 * $I_L20033_725 ) exit
20033.                                              enddo
20035.                                              $I_L20035_692 = 1 + $I_L20035_692
20040.                                              if ( $I_L20035_692 >= min( 1 + nd_layer + -id_ct, 2 + 2 * $I_L20035_733 ) + -2 * $I_L20035_733 ) exit
20040.                                           enddo
20036.                                           $I_L20036_717 = 1 + $I_L20036_717
20036.                                           if ( $I_L20036_717 >= 1 + max( 0, -1 + _rsh( 255 + nd_profile, 8 ) ) ) exit
20036.                                        enddo
20033.                                        $I_L20033_725 = 1 + $I_L20033_725
20041.                                        if ( $I_L20033_725 >= 1 + max( 0, -1 + _rsh( 1 + n_order_phase, 1 ) ) ) exit
20041.                                     enddo
20035.                                     $I_L20035_733 = 1 + $I_L20035_733
20035.                                     if ( $I_L20035_733 >= 1 + max( 0, -1 + _rsh( 2 + nd_layer + -id_ct, 1 ) ) ) exit
20035.                                  enddo
20035.                               endif
20035.                            endif
20035.                         endif
20053.                      else if ( i_parametrization_ice == 12 ) then
20056.                         if ( nd_layer + -id_ct >= 0 ) then
20064.                            $SC_ice_cloud_parameter_I8 = ice_cloud_parameter(5)
20064.                            $SC_ice_cloud_parameter_I7 = ice_cloud_parameter(6)
20064.                            $SC_ice_cloud_parameter_I6 = ice_cloud_parameter(7)
20064.                            $SC_ice_cloud_parameter_I5 = ice_cloud_parameter(8)
20063.                            $SC_ice_cloud_parameter_I4 = ice_cloud_parameter(9)
20058.                            $SC_ice_cloud_parameter_I2 = ice_cloud_parameter(4)
20059.                            $SC_ice_cloud_parameter_I3 = ice_cloud_parameter(3)
20059.                            $SC_ice_cloud_parameter_I1 = ice_cloud_parameter(1)
20059.                            $SC_ice_cloud_parameter_I0 = ice_cloud_parameter(2)
20057.                            if ( nd_profile > 0 ) then
20090.                               $SC_ice_cloud_parameter_I42 = ice_cloud_parameter(5 + 5 * n_order_forward)
20090.                               $SC_ice_cloud_parameter_I41 = ice_cloud_parameter(6 + 5 * n_order_forward)
20090.                               $SC_ice_cloud_parameter_I40 = ice_cloud_parameter(7 + 5 * n_order_forward)
20090.                               $SC_ice_cloud_parameter_I39 = ice_cloud_parameter(8 + 5 * n_order_forward)
20089.                               $SC_ice_cloud_parameter_I38 = ice_cloud_parameter(9 + 5 * n_order_forward)
20056.                               $I_L20056_640 = 0
20056.                               do
20057.                                  $I_L20057_570 = 0
20057. !dir$ ivdep
20057.                                  do
20058.                                     $x_S9 = ( dim_char_ice(1 + $I_L20057_570, id_ct + $I_L20056_640) * 1.0/$SC_ice_cloud_parameter_I2 )
20059.                                     $k_ext_tot_cloud_WR0_R2 = ice_mass_frac(1 + $I_L20057_570, id_ct + $I_L20056_640) * ( $SC_ice_cloud_parameter_I1 + ( 1.0/$x_S9 * ( $SC_ice_cloud_parameter_I0 + ( $SC_ice_cloud_parameter_I3 * 1.0/$x_S9 ) ) ) )
20059.                                     k_ext_tot_cloud(1 + $I_L20057_570, id_ct + $I_L20056_640) = $k_ext_tot_cloud_WR0_R2
20063.                                     $x_S10 = ( dim_char_ice(1 + $I_L20057_570, id_ct + $I_L20056_640) * 1.0/$SC_ice_cloud_parameter_I4 )
20064.                                     k_ext_scat_cloud(1 + $I_L20057_570, id_ct + $I_L20056_640) = ( $k_ext_tot_cloud_WR0_R2 * ( 1.0 + -( $SC_ice_cloud_parameter_I8 + $x_S10 * ( $SC_ice_cloud_parameter_I7 + $x_S10 * ( $SC_ice_cloud_parameter_I6 + $x_S10 * $SC_ice_cloud_parameter_I5 ) ) ) ) )
20089.                                     $x_S17 = ( dim_char_ice(1 + $I_L20057_570, id_ct + $I_L20056_640) * 1.0/$SC_ice_cloud_parameter_I38 )
20090.                                     forward_scatter_cloud(1 + $I_L20057_570, id_ct + $I_L20056_640) = ( $SC_ice_cloud_parameter_I42 + $x_S17 * ( $SC_ice_cloud_parameter_I41 + $x_S17 * ( $SC_ice_cloud_parameter_I40 + $x_S17 * $SC_ice_cloud_parameter_I39 ) ) ) * ( $k_ext_tot_cloud_WR0_R2 * ( 1.0 + -( $SC_ice_cloud_parameter_I8 + $x_S10 * ( $SC_ice_cloud_parameter_I7 + $x_S10 * ( $SC_ice_cloud_parameter_I6 + $x_S10 * $SC_ice_cloud_parameter_I5 ) ) ) ) )
20070.                                     $I_L20057_570 = 1 + $I_L20057_570
20057.                                     if ( $I_L20057_570 >= nd_profile ) exit
20057.                                  enddo
20071.                                  $I_L20056_640 = 1 + $I_L20056_640
20070.                                  if ( $I_L20056_640 >= 1 + nd_layer + -id_ct ) exit
20070.                               enddo
20070.                            endif
20070.                         endif
20072.                         if ( n_order_phase > 0 ) then
20074.                            if ( nd_layer + -id_ct >= 0 ) then
20075.                               if ( nd_profile > 0 ) then
20072.                                  $I_L20072_735 = 0
20072.                                  do
20074.                                     $I_L20074_727 = 0
20074.                                     do
20075.                                        $I_L20075_719 = 0
20075.                                        do
20072.                                           $I_L20072_745 = 0
20072. !dir$ shortloop16
20072. !dir$ loop_info (automatic) cache_nt( ice_cloud_parameter )
20072. !dir$ blocking_size( 2, 2 )
20072.                                           do
20074.                                              $I_L20074_683 = 0
20074. !dir$ shortloop16
20074. !dir$ blocking_size( 2, 2 )
20074.                                              do
20074.                                                 $SCA_ice_cloud_parameter_I48 = ice_cloud_parameter(14 + 10 * $I_L20072_735 + 5 * $I_L20072_745)
20074.                                                 $SCA_ice_cloud_parameter_I49 = ice_cloud_parameter(13 + 10 * $I_L20072_735 + 5 * $I_L20072_745)
20074.                                                 $SCA_ice_cloud_parameter_I50 = ice_cloud_parameter(12 + 10 * $I_L20072_735 + 5 * $I_L20072_745)
20074.                                                 $SCA_ice_cloud_parameter_I51 = ice_cloud_parameter(11 + 10 * $I_L20072_735 + 5 * $I_L20072_745)
20074.                                                 $SCA_ice_cloud_parameter_I52 = ice_cloud_parameter(10 + 10 * $I_L20072_735 + 5 * $I_L20072_745)
20075.                                                 $I_L20075_591 = 0
20075. !dir$ ivdep
20075. !dir$ blocking_size( 256, 256 )
20075.                                                 do
20076.                                                    $x_S14 = ( dim_char_ice(1 + $I_L20075_591 + 256 * $I_L20075_719, id_ct + $I_L20074_683 + 2 * $I_L20074_727) * 1.0/$SCA_ice_cloud_parameter_I48 )
20077.                                                    phase_fnc_cloud(1 + $I_L20075_591 + 256 * $I_L20075_719, id_ct + $I_L20074_683 + 2 * $I_L20074_727, 1 + $I_L20072_745 + 2 * $I_L20072_735) = k_ext_scat_cloud(1 + $I_L20075_591 + 256 * $I_L20075_719, id_ct + $I_L20074_683 + 2 * $I_L20074_727) * ( $SCA_ice_cloud_parameter_I52 + $x_S14 * ( $SCA_ice_cloud_parameter_I51 + $x_S14 * ( $SCA_ice_cloud_parameter_I50 + $x_S14 * $SCA_ice_cloud_parameter_I49 ) ) )
20075.                                                    $I_L20075_591 = 1 + $I_L20075_591
20075.                                                    if ( $I_L20075_591 >= min( nd_profile, 256 + 256 * $I_L20075_719 ) + -256 * $I_L20075_719 ) exit
20075.                                                 enddo
20074.                                                 $I_L20074_683 = 1 + $I_L20074_683
20074.                                                 if ( $I_L20074_683 >= min( 1 + nd_layer + -id_ct, 2 + 2 * $I_L20074_727 ) + -2 * $I_L20074_727 ) exit
20074.                                              enddo
20072.                                              $I_L20072_745 = 1 + $I_L20072_745
20082.                                              if ( $I_L20072_745 >= min( n_order_phase, 2 + 2 * $I_L20072_735 ) + -2 * $I_L20072_735 ) exit
20082.                                           enddo
20075.                                           $I_L20075_719 = 1 + $I_L20075_719
20075.                                           if ( $I_L20075_719 >= 1 + max( 0, -1 + _rsh( 255 + nd_profile, 8 ) ) ) exit
20075.                                        enddo
20074.                                        $I_L20074_727 = 1 + $I_L20074_727
20083.                                        if ( $I_L20074_727 >= 1 + max( 0, -1 + _rsh( 2 + nd_layer + -id_ct, 1 ) ) ) exit
20083.                                     enddo
20072.                                     $I_L20072_735 = 1 + $I_L20072_735
20072.                                     if ( $I_L20072_735 >= 1 + max( 0, -1 + _rsh( 1 + n_order_phase, 1 ) ) ) exit
20072.                                  enddo
20072.                               endif
20072.                            endif
20072.                         endif
20072.                      endif
20102.                      if ( l_solar_phf /= .false. ) then
20103.                         if ( n_layer + -n_cloud_top >= 0 ) then
20103.                            $I_L20103_715 = 0
20103. !dir$ loop_info (automatic) cache_nt( n_cloud_profile )
20103.                            do
20105.                               if ( n_direction > 0 ) then
20119.                                  if ( -2 + n_order_phase_solar < 0 ) then
20105.                                     $SCA_n_cloud_profile_I45 = n_cloud_profile(n_cloud_top + $I_L20103_715)
20109.                                     if ( $SCA_n_cloud_profile_I45 > 0 ) then
20105.                                        $I_L20105_670 = 0
20105.                                        do
20109.                                           $I_L20109_617 = 0
20109. !dir$ ivdep
20109. !dir$ loop_info (automatic) cache_nt( p_legendre_ls_m1 )
20109.                                           do
20110.                                              $l_S21 = i_cloud_profile(1 + $I_L20109_617, n_cloud_top + $I_L20103_715)
20113.                                              p_legendre_ls_m1($l_S21) = 1.0
20114.                                              $SVU_P12 = cos_sol_view($l_S21, 1 + $I_L20105_670)
20114.                                              p_legendre_ls($l_S21) = $SVU_P12
20115.                                              phase_fnc_solar_cloud($l_S21, n_cloud_top + $I_L20103_715, 1 + $I_L20105_670) = k_ext_scat_cloud($l_S21, n_cloud_top + $I_L20103_715) + 3.0 * $SVU_P12 * phase_fnc_cloud($l_S21, n_cloud_top + $I_L20103_715, 1)
20118.                                              $I_L20109_617 = 1 + $I_L20109_617
20109.                                              if ( $I_L20109_617 >= $SCA_n_cloud_profile_I45 ) exit
20109.                                           enddo
20156.                                           $I_L20105_670 = 1 + $I_L20105_670
20155.                                           if ( $I_L20105_670 >= n_direction ) exit
20155.                                        enddo
20155.                                     endif
20155.                                  else if ( i_parametrization_ice == 12 ) then
20105.                                     $SCA_n_cloud_profile_I44 = n_cloud_profile(n_cloud_top + $I_L20103_715)
20109.                                     if ( $SCA_n_cloud_profile_I44 > 0 ) then
20105.                                        $I_L20105_709 = 0
20105.                                        do
20109.                                           $I_L20109_632 = 0
20109. !dir$ ivdep
20109.                                           do
20110.                                              $l_S21 = i_cloud_profile(1 + $I_L20109_632, n_cloud_top + $I_L20103_715)
20113.                                              p_legendre_ls_m1($l_S21) = 1.0
20114.                                              $SVU_P9 = cos_sol_view($l_S21, 1 + $I_L20105_709)
20114.                                              p_legendre_ls($l_S21) = $SVU_P9
20115.                                              phase_fnc_solar_cloud($l_S21, n_cloud_top + $I_L20103_715, 1 + $I_L20105_709) = k_ext_scat_cloud($l_S21, n_cloud_top + $I_L20103_715) + 3.0 * $SVU_P9 * phase_fnc_cloud($l_S21, n_cloud_top + $I_L20103_715, 1)
20118.                                              $I_L20109_632 = 1 + $I_L20109_632
20109.                                              if ( $I_L20109_632 >= $SCA_n_cloud_profile_I44 ) exit
20109.                                           enddo
20119.                                           $I_L20119_676 = 0
20119.                                           do
20123.                                              $cnst1_S26 = 1.0 + -( 1.0/( real( 2 + $I_L20119_676, 8 ) ) )
20124.                                              $SCA_ice_cloud_parameter_I56 = ice_cloud_parameter(19 + 5 * $I_L20119_676)
20124.                                              $SCA_ice_cloud_parameter_I57 = ice_cloud_parameter(18 + 5 * $I_L20119_676)
20124.                                              $SCA_ice_cloud_parameter_I58 = ice_cloud_parameter(17 + 5 * $I_L20119_676)
20124.                                              $SCA_ice_cloud_parameter_I59 = ice_cloud_parameter(16 + 5 * $I_L20119_676)
20124.                                              $SCA_ice_cloud_parameter_I60 = ice_cloud_parameter(15 + 5 * $I_L20119_676)
20124.                                              $I_L20124_634 = 0
20124.                                              do
20125.                                                 $l_S25 = i_cloud_profile(1 + $I_L20124_634, n_cloud_top + $I_L20103_715)
20126.                                                 $SVU_P10 = p_legendre_ls($l_S25)
20127.                                                 $SCF_P22 = cos_sol_view($l_S25, 1 + $I_L20105_709) * $SVU_P10 * ( 1.0 + $cnst1_S26 )
20127.                                                 $SVU_P26 = $SCF_P22 + -( $cnst1_S26 * p_legendre_ls_m1($l_S25) )
20127.                                                 p_legendre_ls($l_S25) = $SVU_P26
20130.                                                 p_legendre_ls_m1($l_S25) = $SVU_P10
20140.                                                 $x_S27 = ( dim_char_ice($l_S25, n_cloud_top + $I_L20103_715) * 1.0/$SCA_ice_cloud_parameter_I56 )
20149.                                                 $SVU_P11 = k_ext_scat_cloud($l_S25, n_cloud_top + $I_L20103_715) * ( $SCA_ice_cloud_parameter_I60 + $x_S27 * ( $SCA_ice_cloud_parameter_I59 + $x_S27 * ( $SCA_ice_cloud_parameter_I58 + $x_S27 * $SCA_ice_cloud_parameter_I57 ) ) )
20150.                                                 phase_fnc_solar_cloud($l_S25, n_cloud_top + $I_L20103_715, 1 + $I_L20105_709) = phase_fnc_solar_cloud($l_S25, n_cloud_top + $I_L20103_715, 1 + $I_L20105_709) + $SVU_P26 * $SVU_P11 * real( 5 + 2 * $I_L20119_676, 8 )
20154.                                                 $I_L20124_634 = 1 + $I_L20124_634
20147.                                                 if ( $I_L20124_634 >= $SCA_n_cloud_profile_I44 ) exit
20147.                                              enddo
20155.                                              $I_L20119_676 = 1 + $I_L20119_676
20154.                                              if ( $I_L20119_676 >= -1 + n_order_phase_solar ) exit
20154.                                           enddo
20156.                                           $I_L20105_709 = 1 + $I_L20105_709
20155.                                           if ( $I_L20105_709 >= n_direction ) exit
20155.                                        enddo
20141.                                        phf_tmp = ( $SCA_ice_cloud_parameter_I60 + $x_S27 * ( $SCA_ice_cloud_parameter_I59 + $x_S27 * ( $SCA_ice_cloud_parameter_I58 + $x_S27 * $SCA_ice_cloud_parameter_I57 ) ) )
20141.                                     endif
20141.                                  else if ( i_parametrization_ice == 11 ) then
20105.                                     $SCA_n_cloud_profile_I53 = n_cloud_profile(n_cloud_top + $I_L20103_715)
20109.                                     if ( $SCA_n_cloud_profile_I53 > 0 ) then
20105.                                        $I_L20105_703 = 0
20105.                                        do
20109.                                           $I_L20109_609 = 0
20109. !dir$ ivdep
20109.                                           do
20110.                                              $l_S21 = i_cloud_profile(1 + $I_L20109_609, n_cloud_top + $I_L20103_715)
20113.                                              p_legendre_ls_m1($l_S21) = 1.0
20114.                                              $SVU_P3 = cos_sol_view($l_S21, 1 + $I_L20105_703)
20114.                                              p_legendre_ls($l_S21) = $SVU_P3
20115.                                              phase_fnc_solar_cloud($l_S21, n_cloud_top + $I_L20103_715, 1 + $I_L20105_703) = k_ext_scat_cloud($l_S21, n_cloud_top + $I_L20103_715) + 3.0 * $SVU_P3 * phase_fnc_cloud($l_S21, n_cloud_top + $I_L20103_715, 1)
20118.                                              $I_L20109_609 = 1 + $I_L20109_609
20109.                                              if ( $I_L20109_609 >= $SCA_n_cloud_profile_I53 ) exit
20109.                                           enddo
20119.                                           $I_L20119_666 = 0
20119.                                           do
20123.                                              $cnst1_S26 = 1.0 + -( 1.0/( real( 2 + $I_L20119_666, 8 ) ) )
20124.                                              $SCA_ice_cloud_parameter_I54 = ice_cloud_parameter(8 + 2 * $I_L20119_666)
20124.                                              $SCA_ice_cloud_parameter_I55 = ice_cloud_parameter(7 + 2 * $I_L20119_666)
20124.                                              $I_L20124_611 = 0
20124. !dir$ unroll 2
20124.                                              do
20125.                                                 $l_S25 = i_cloud_profile(1 + $I_L20124_611, n_cloud_top + $I_L20103_715)
20126.                                                 $SVU_P4 = p_legendre_ls($l_S25)
20127.                                                 $SCF_P20 = cos_sol_view($l_S25, 1 + $I_L20105_703) * $SVU_P4 * ( 1.0 + $cnst1_S26 )
20127.                                                 $SVU_P24 = $SCF_P20 + -( $cnst1_S26 * p_legendre_ls_m1($l_S25) )
20127.                                                 p_legendre_ls($l_S25) = $SVU_P24
20130.                                                 p_legendre_ls_m1($l_S25) = $SVU_P4
20135.                                                 phf_tmp = $SCA_ice_cloud_parameter_I55 + $SCA_ice_cloud_parameter_I54 * dim_char_ice($l_S25, n_cloud_top + $I_L20103_715)
20149.                                                 $SVU_P5 = phf_tmp * k_ext_scat_cloud($l_S25, n_cloud_top + $I_L20103_715)
20150.                                                 phase_fnc_solar_cloud($l_S25, n_cloud_top + $I_L20103_715, 1 + $I_L20105_703) = phase_fnc_solar_cloud($l_S25, n_cloud_top + $I_L20103_715, 1 + $I_L20105_703) + $SVU_P24 * $SVU_P5 * real( 5 + 2 * $I_L20119_666, 8 )
20154.                                                 $I_L20124_611 = 1 + $I_L20124_611
20147.                                                 if ( $I_L20124_611 >= $SCA_n_cloud_profile_I53 ) exit
20147.                                              enddo
20155.                                              $I_L20119_666 = 1 + $I_L20119_666
20154.                                              if ( $I_L20119_666 >= -1 + n_order_phase_solar ) exit
20154.                                           enddo
20156.                                           $I_L20105_703 = 1 + $I_L20105_703
20155.                                           if ( $I_L20105_703 >= n_direction ) exit
20155.                                        enddo
20155.                                     endif
20155.                                  else
20105.                                     $SCA_n_cloud_profile_I43 = n_cloud_profile(n_cloud_top + $I_L20103_715)
20109.                                     if ( $SCA_n_cloud_profile_I43 > 0 ) then
20105.                                        $I_L20105_711 = 0
20105.                                        do
20109.                                           $I_L20109_636 = 0
20109. !dir$ ivdep
20109.                                           do
20110.                                              $l_S21 = i_cloud_profile(1 + $I_L20109_636, n_cloud_top + $I_L20103_715)
20113.                                              p_legendre_ls_m1($l_S21) = 1.0
20114.                                              $SVU_P6 = cos_sol_view($l_S21, 1 + $I_L20105_711)
20114.                                              p_legendre_ls($l_S21) = $SVU_P6
20115.                                              phase_fnc_solar_cloud($l_S21, n_cloud_top + $I_L20103_715, 1 + $I_L20105_711) = k_ext_scat_cloud($l_S21, n_cloud_top + $I_L20103_715) + 3.0 * $SVU_P6 * phase_fnc_cloud($l_S21, n_cloud_top + $I_L20103_715, 1)
20118.                                              $I_L20109_636 = 1 + $I_L20109_636
20109.                                              if ( $I_L20109_636 >= $SCA_n_cloud_profile_I43 ) exit
20109.                                           enddo
20119.                                           $I_L20119_678 = 0
20119.                                           do
20123.                                              $cnst1_S26 = 1.0 + -( 1.0/( real( 2 + $I_L20119_678, 8 ) ) )
20124.                                              $I_L20124_638 = 0
20124. !dir$ unroll 2
20124.                                              do
20125.                                                 $l_S25 = i_cloud_profile(1 + $I_L20124_638, n_cloud_top + $I_L20103_715)
20126.                                                 $SVU_P7 = p_legendre_ls($l_S25)
20127.                                                 $SCF_P21 = cos_sol_view($l_S25, 1 + $I_L20105_711) * $SVU_P7 * ( 1.0 + $cnst1_S26 )
20127.                                                 $SVU_P25 = $SCF_P21 + -( $cnst1_S26 * p_legendre_ls_m1($l_S25) )
20127.                                                 p_legendre_ls($l_S25) = $SVU_P25
20130.                                                 p_legendre_ls_m1($l_S25) = $SVU_P7
20149.                                                 $SVU_P8 = phf_tmp * k_ext_scat_cloud($l_S25, n_cloud_top + $I_L20103_715)
20150.                                                 phase_fnc_solar_cloud($l_S25, n_cloud_top + $I_L20103_715, 1 + $I_L20105_711) = phase_fnc_solar_cloud($l_S25, n_cloud_top + $I_L20103_715, 1 + $I_L20105_711) + $SVU_P25 * $SVU_P8 * real( 5 + 2 * $I_L20119_678, 8 )
20154.                                                 $I_L20124_638 = 1 + $I_L20124_638
20147.                                                 if ( $I_L20124_638 >= $SCA_n_cloud_profile_I43 ) exit
20147.                                              enddo
20155.                                              $I_L20119_678 = 1 + $I_L20119_678
20154.                                              if ( $I_L20119_678 >= -1 + n_order_phase_solar ) exit
20154.                                           enddo
20156.                                           $I_L20105_711 = 1 + $I_L20105_711
20155.                                           if ( $I_L20105_711 >= n_direction ) exit
20155.                                        enddo
20155.                                     endif
20155.                                  endif
20155.                               endif
20160.                               if ( l_rescale /= .false. ) then
20162.                                  $t_S28 = n_cloud_profile(n_cloud_top + $I_L20103_715)
20162.                                  if ( $t_S28 > 0 ) then
20165.                                     if ( i_parametrization_ice == 12 ) then
20174.                                        $SC_ice_cloud_parameter_I70 = ice_cloud_parameter(10 + 5 * n_order_phase_solar)
20174.                                        $SC_ice_cloud_parameter_I69 = ice_cloud_parameter(11 + 5 * n_order_phase_solar)
20174.                                        $SC_ice_cloud_parameter_I68 = ice_cloud_parameter(12 + 5 * n_order_phase_solar)
20174.                                        $SC_ice_cloud_parameter_I67 = ice_cloud_parameter(13 + 5 * n_order_phase_solar)
20173.                                        $SC_ice_cloud_parameter_I66 = ice_cloud_parameter(14 + 5 * n_order_phase_solar)
20162.                                        $I_L20162_619 = 0
20162. !dir$ ivdep
20162. !dir$ loop_info (automatic) cache_nt( k_ext_scat_cloud, i_cloud_profile, forward_solar_cloud )
20162.                                        do
20163.                                           $l_S30 = i_cloud_profile(1 + $I_L20162_619, n_cloud_top + $I_L20103_715)
20173.                                           $x_S31 = ( dim_char_ice($l_S30, n_cloud_top + $I_L20103_715) * 1.0/$SC_ice_cloud_parameter_I66 )
20182.                                           forward_solar_cloud($l_S30, n_cloud_top + $I_L20103_715) = k_ext_scat_cloud($l_S30, n_cloud_top + $I_L20103_715) * ( $SC_ice_cloud_parameter_I70 + $x_S31 * ( $SC_ice_cloud_parameter_I69 + $x_S31 * ( $SC_ice_cloud_parameter_I68 + $x_S31 * $SC_ice_cloud_parameter_I67 ) ) )
20184.                                           $I_L20162_619 = 1 + $I_L20162_619
20180.                                           if ( $I_L20162_619 >= $t_S28 ) exit
20180.                                        enddo
20174.                                        phf_tmp = ( $SC_ice_cloud_parameter_I70 + $x_S31 * ( $SC_ice_cloud_parameter_I69 + $x_S31 * ( $SC_ice_cloud_parameter_I68 + $x_S31 * $SC_ice_cloud_parameter_I67 ) ) )
20174.                                     else if ( i_parametrization_ice == 11 ) then
20168.                                        $SC_ice_cloud_parameter_I65 = ice_cloud_parameter(5 + 2 * n_order_phase_solar)
20168.                                        $SC_ice_cloud_parameter_I64 = ice_cloud_parameter(6 + 2 * n_order_phase_solar)
20162.                                        $I_L20162_613 = 0
20162. !dir$ ivdep
20162. !dir$ loop_info (automatic) cache_nt( k_ext_scat_cloud, i_cloud_profile, forward_solar_cloud )
20162.                                        do
20163.                                           $l_S30 = i_cloud_profile(1 + $I_L20162_613, n_cloud_top + $I_L20103_715)
20168.                                           phf_tmp = $SC_ice_cloud_parameter_I65 + $SC_ice_cloud_parameter_I64 * dim_char_ice($l_S30, n_cloud_top + $I_L20103_715)
20182.                                           forward_solar_cloud($l_S30, n_cloud_top + $I_L20103_715) = phf_tmp * k_ext_scat_cloud($l_S30, n_cloud_top + $I_L20103_715)
20184.                                           $I_L20162_613 = 1 + $I_L20162_613
20180.                                           if ( $I_L20162_613 >= $t_S28 ) exit
20180.                                        enddo
20180.                                     else
20162.                                        $I_L20162_621 = 0
20162. !dir$ ivdep
20162. !dir$ loop_info (automatic) cache_nt( k_ext_scat_cloud, i_cloud_profile, forward_solar_cloud )
20162.                                        do
20163.                                           $l_S30 = i_cloud_profile(1 + $I_L20162_621, n_cloud_top + $I_L20103_715)
20182.                                           forward_solar_cloud($l_S30, n_cloud_top + $I_L20103_715) = phf_tmp * k_ext_scat_cloud($l_S30, n_cloud_top + $I_L20103_715)
20184.                                           $I_L20162_621 = 1 + $I_L20162_621
20180.                                           if ( $I_L20162_621 >= $t_S28 ) exit
20180.                                        enddo
20180.                                     endif
20180.                                  endif
20180.                               endif
20187.                               $I_L20103_715 = 1 + $I_L20103_715
20185.                               if ( $I_L20103_715 >= 1 + n_layer + -n_cloud_top ) exit
20185.                            enddo
20185.                         endif
20185.                      endif
20185.                   endif
20185.                endif
20185.             else
20185.                goto 10
20185.             endif
20185.          else
20185.    10       continue
19637.             if ( i_parametrization_ice /= 12 ) then
19637.                if ( i_parametrization_ice /= 10 ) then
19637.                   if ( i_parametrization_ice /= 9 ) then
19637.                      if ( i_parametrization_ice /= 5 ) then
19637.                         if ( i_parametrization_ice /= 4 ) then
19637.                            if ( i_parametrization_ice /= 7 ) then
19637.                               if ( i_parametrization_ice /= 6 ) then
19637.                                  if ( i_parametrization_ice == 11 ) then
19639.                                     goto 20
19639.                                  else if ( i_parametrization_ice == 1 ) then
19639.    20                               continue
19643.                                     if ( nd_layer + -id_ct >= 0 ) then
19651.                                        $SC_ice_cloud_parameter_I8 = ice_cloud_parameter(5)
19651.                                        $SC_ice_cloud_parameter_I7 = ice_cloud_parameter(6)
19648.                                        $SC_ice_cloud_parameter_I2 = ice_cloud_parameter(4)
19648.                                        $SC_ice_cloud_parameter_I3 = ice_cloud_parameter(3)
19645.                                        $SC_ice_cloud_parameter_I1 = ice_cloud_parameter(1)
19645.                                        $SC_ice_cloud_parameter_I0 = ice_cloud_parameter(2)
19644.                                        if ( nd_profile > 0 ) then
19643.                                           $I_L19643_656 = 0
19643.                                           do
19644.                                              $I_L19644_586 = 0
19644. !dir$ ivdep
19644.                                              do
19645.                                                 $k_ext_tot_cloud_WR0_R4 = ice_mass_frac(1 + $I_L19644_586, id_ct + $I_L19643_656) * ( $SC_ice_cloud_parameter_I1 + ( $SC_ice_cloud_parameter_I0 * 1.0/dim_char_ice(1 + $I_L19644_586, id_ct + $I_L19643_656) ) )
19645.                                                 k_ext_tot_cloud(1 + $I_L19644_586, id_ct + $I_L19643_656) = $k_ext_tot_cloud_WR0_R4
19648.                                                 $k_ext_scat_cloud_WR0_R5 = $k_ext_tot_cloud_WR0_R4 * ( 1.0 + -$SC_ice_cloud_parameter_I3 + -( $SC_ice_cloud_parameter_I2 * dim_char_ice(1 + $I_L19644_586, id_ct + $I_L19643_656) ) )
19648.                                                 k_ext_scat_cloud(1 + $I_L19644_586, id_ct + $I_L19643_656) = $k_ext_scat_cloud_WR0_R5
19651.                                                 $asymmetry_process_WR0_R6 = $SC_ice_cloud_parameter_I8 + $SC_ice_cloud_parameter_I7 * dim_char_ice(1 + $I_L19644_586, id_ct + $I_L19643_656)
19651.                                                 asymmetry_process(1 + $I_L19644_586, id_ct + $I_L19643_656) = $asymmetry_process_WR0_R6
19654.                                                 phase_fnc_cloud(1 + $I_L19644_586, id_ct + $I_L19643_656, 1) = $k_ext_scat_cloud_WR0_R5 * $asymmetry_process_WR0_R6
19656.                                                 $I_L19644_586 = 1 + $I_L19644_586
19644.                                                 if ( $I_L19644_586 >= nd_profile ) exit
19644.                                              enddo
19657.                                              $I_L19643_656 = 1 + $I_L19643_656
19656.                                              if ( $I_L19643_656 >= 1 + nd_layer + -id_ct ) exit
19656.                                           enddo
19656.                                        endif
19656.                                     endif
19656.                                  endif
19660.                               else if ( nd_layer + -id_ct >= 0 ) then
19712.                                  $SC_ice_cloud_parameter_I29 = ice_cloud_parameter(26)
19712.                                  $SC_ice_cloud_parameter_I28 = ice_cloud_parameter(27)
19712.                                  $SC_ice_cloud_parameter_I27 = ice_cloud_parameter(28)
19712.                                  $SC_ice_cloud_parameter_I26 = ice_cloud_parameter(29)
19705.                                  $SC_ice_cloud_parameter_I25 = ice_cloud_parameter(21)
19705.                                  $SC_ice_cloud_parameter_I24 = ice_cloud_parameter(22)
19705.                                  $SC_ice_cloud_parameter_I23 = ice_cloud_parameter(23)
19705.                                  $SC_ice_cloud_parameter_I22 = ice_cloud_parameter(24)
19705.                                  $SC_ice_cloud_parameter_I21 = ice_cloud_parameter(25)
19702.                                  $SC_ice_cloud_parameter_I20 = ice_cloud_parameter(30)
19695.                                  $SC_ice_cloud_parameter_I19 = ice_cloud_parameter(16)
19695.                                  $SC_ice_cloud_parameter_I18 = ice_cloud_parameter(17)
19695.                                  $SC_ice_cloud_parameter_I17 = ice_cloud_parameter(18)
19695.                                  $SC_ice_cloud_parameter_I16 = ice_cloud_parameter(19)
19687.                                  $SC_ice_cloud_parameter_I15 = ice_cloud_parameter(11)
19687.                                  $SC_ice_cloud_parameter_I14 = ice_cloud_parameter(12)
19687.                                  $SC_ice_cloud_parameter_I13 = ice_cloud_parameter(13)
19687.                                  $SC_ice_cloud_parameter_I12 = ice_cloud_parameter(14)
19687.                                  $SC_ice_cloud_parameter_I11 = ice_cloud_parameter(15)
19684.                                  $SC_ice_cloud_parameter_I10 = ice_cloud_parameter(20)
19666.                                  $SC_ice_cloud_parameter_I9 = ice_cloud_parameter(10)
19669.                                  $SC_ice_cloud_parameter_I8 = ice_cloud_parameter(5)
19677.                                  $SC_ice_cloud_parameter_I7 = ice_cloud_parameter(6)
19677.                                  $SC_ice_cloud_parameter_I6 = ice_cloud_parameter(7)
19677.                                  $SC_ice_cloud_parameter_I5 = ice_cloud_parameter(8)
19677.                                  $SC_ice_cloud_parameter_I4 = ice_cloud_parameter(9)
19669.                                  $SC_ice_cloud_parameter_I2 = ice_cloud_parameter(4)
19669.                                  $SC_ice_cloud_parameter_I3 = ice_cloud_parameter(3)
19669.                                  $SC_ice_cloud_parameter_I1 = ice_cloud_parameter(1)
19669.                                  $SC_ice_cloud_parameter_I0 = ice_cloud_parameter(2)
19665.                                  if ( nd_profile > 0 ) then
19664.                                     $I_L19664_658 = 0
19664.                                     do
19665.                                        $I_L19665_594 = 0
19665. !dir$ ivdep
19665.                                        do
19666.                                           $x_S36 = log( ( dim_char_ice(1 + $I_L19665_594, id_ct + $I_L19664_658) * 1.0/$SC_ice_cloud_parameter_I9 ) )
19667.                                           if ( log( ( dim_char_ice(1 + $I_L19665_594, id_ct + $I_L19664_658) * 1.0/$SC_ice_cloud_parameter_I9 ) ) > 0.0 ) then
19669.                                              k_ext_tot_cloud(1 + $I_L19665_594, id_ct + $I_L19664_658) = ice_mass_frac(1 + $I_L19665_594, id_ct + $I_L19664_658) * _expn( $SC_ice_cloud_parameter_I1 + $x_S36 * ( $SC_ice_cloud_parameter_I0 + $x_S36 * ( $SC_ice_cloud_parameter_I3 + $x_S36 * ( $SC_ice_cloud_parameter_I2 + $x_S36 * $SC_ice_cloud_parameter_I8 ) ) ) )
19669.                                           else
19677.                                              k_ext_tot_cloud(1 + $I_L19665_594, id_ct + $I_L19664_658) = ice_mass_frac(1 + $I_L19665_594, id_ct + $I_L19664_658) * _expn( $SC_ice_cloud_parameter_I1 + $x_S36 * ( $SC_ice_cloud_parameter_I7 + $x_S36 * ( $SC_ice_cloud_parameter_I6 + $x_S36 * ( $SC_ice_cloud_parameter_I5 + $x_S36 * $SC_ice_cloud_parameter_I4 ) ) ) )
19677.                                           endif
19684.                                           $x_S37 = log( ( dim_char_ice(1 + $I_L19665_594, id_ct + $I_L19664_658) * 1.0/$SC_ice_cloud_parameter_I10 ) )
19685.                                           if ( log( ( dim_char_ice(1 + $I_L19665_594, id_ct + $I_L19664_658) * 1.0/$SC_ice_cloud_parameter_I10 ) ) > 0.0 ) then
19687.                                              k_ext_scat_cloud(1 + $I_L19665_594, id_ct + $I_L19664_658) = k_ext_tot_cloud(1 + $I_L19665_594, id_ct + $I_L19664_658) * ( 1.0 + -( $SC_ice_cloud_parameter_I15 + $x_S37 * ( $SC_ice_cloud_parameter_I14 + $x_S37 * ( $SC_ice_cloud_parameter_I13 + $x_S37 * ( $SC_ice_cloud_parameter_I12 + $x_S37 * $SC_ice_cloud_parameter_I11 ) ) ) ) )
19687.                                           else
19695.                                              k_ext_scat_cloud(1 + $I_L19665_594, id_ct + $I_L19664_658) = k_ext_tot_cloud(1 + $I_L19665_594, id_ct + $I_L19664_658) * ( 1.0 + -( $SC_ice_cloud_parameter_I15 + $x_S37 * ( $SC_ice_cloud_parameter_I19 + $x_S37 * ( $SC_ice_cloud_parameter_I18 + $x_S37 * ( $SC_ice_cloud_parameter_I17 + $x_S37 * $SC_ice_cloud_parameter_I16 ) ) ) ) )
19695.                                           endif
19702.                                           $x_S38 = log( ( dim_char_ice(1 + $I_L19665_594, id_ct + $I_L19664_658) * 1.0/$SC_ice_cloud_parameter_I20 ) )
19703.                                           if ( log( ( dim_char_ice(1 + $I_L19665_594, id_ct + $I_L19664_658) * 1.0/$SC_ice_cloud_parameter_I20 ) ) > 0.0 ) then
19705.                                              asymmetry_process(1 + $I_L19665_594, id_ct + $I_L19664_658) = $SC_ice_cloud_parameter_I25 + $x_S38 * ( $SC_ice_cloud_parameter_I24 + $x_S38 * ( $SC_ice_cloud_parameter_I23 + $x_S38 * ( $SC_ice_cloud_parameter_I22 + $x_S38 * $SC_ice_cloud_parameter_I21 ) ) )
19705.                                           else
19712.                                              asymmetry_process(1 + $I_L19665_594, id_ct + $I_L19664_658) = $SC_ice_cloud_parameter_I25 + $x_S38 * ( $SC_ice_cloud_parameter_I29 + $x_S38 * ( $SC_ice_cloud_parameter_I28 + $x_S38 * ( $SC_ice_cloud_parameter_I27 + $x_S38 * $SC_ice_cloud_parameter_I26 ) ) )
19712.                                           endif
19718.                                           phase_fnc_cloud(1 + $I_L19665_594, id_ct + $I_L19664_658, 1) = k_ext_scat_cloud(1 + $I_L19665_594, id_ct + $I_L19664_658) * asymmetry_process(1 + $I_L19665_594, id_ct + $I_L19664_658)
19720.                                           $I_L19665_594 = 1 + $I_L19665_594
19717.                                           if ( $I_L19665_594 >= nd_profile ) exit
19717.                                        enddo
19721.                                        $I_L19664_658 = 1 + $I_L19664_658
19720.                                        if ( $I_L19664_658 >= 1 + nd_layer + -id_ct ) exit
19720.                                     enddo
19720.                                  endif
19720.                               endif
19724.                            else if ( nd_layer + -id_ct >= 0 ) then
19759.                               $SC_ice_cloud_parameter_I35 = ice_cloud_parameter(31)
19759.                               $SC_ice_cloud_parameter_I34 = ice_cloud_parameter(32)
19759.                               $SC_ice_cloud_parameter_I33 = ice_cloud_parameter(33)
19759.                               $SC_ice_cloud_parameter_I32 = ice_cloud_parameter(34)
19759.                               $SC_ice_cloud_parameter_I31 = ice_cloud_parameter(35)
19758.                               $SC_ice_cloud_parameter_I30 = ice_cloud_parameter(36)
19765.                               $SC_ice_cloud_parameter_I29 = ice_cloud_parameter(26)
19765.                               $SC_ice_cloud_parameter_I28 = ice_cloud_parameter(27)
19765.                               $SC_ice_cloud_parameter_I27 = ice_cloud_parameter(28)
19765.                               $SC_ice_cloud_parameter_I26 = ice_cloud_parameter(29)
19745.                               $SC_ice_cloud_parameter_I25 = ice_cloud_parameter(21)
19745.                               $SC_ice_cloud_parameter_I24 = ice_cloud_parameter(22)
19745.                               $SC_ice_cloud_parameter_I23 = ice_cloud_parameter(23)
19744.                               $SC_ice_cloud_parameter_I22 = ice_cloud_parameter(24)
19765.                               $SC_ice_cloud_parameter_I21 = ice_cloud_parameter(25)
19759.                               $SC_ice_cloud_parameter_I20 = ice_cloud_parameter(30)
19751.                               $SC_ice_cloud_parameter_I19 = ice_cloud_parameter(16)
19751.                               $SC_ice_cloud_parameter_I18 = ice_cloud_parameter(17)
19745.                               $SC_ice_cloud_parameter_I17 = ice_cloud_parameter(18)
19745.                               $SC_ice_cloud_parameter_I16 = ice_cloud_parameter(19)
19731.                               $SC_ice_cloud_parameter_I15 = ice_cloud_parameter(11)
19730.                               $SC_ice_cloud_parameter_I14 = ice_cloud_parameter(12)
19751.                               $SC_ice_cloud_parameter_I13 = ice_cloud_parameter(13)
19751.                               $SC_ice_cloud_parameter_I12 = ice_cloud_parameter(14)
19751.                               $SC_ice_cloud_parameter_I11 = ice_cloud_parameter(15)
19745.                               $SC_ice_cloud_parameter_I10 = ice_cloud_parameter(20)
19731.                               $SC_ice_cloud_parameter_I9 = ice_cloud_parameter(10)
19737.                               $SC_ice_cloud_parameter_I8 = ice_cloud_parameter(5)
19731.                               $SC_ice_cloud_parameter_I7 = ice_cloud_parameter(6)
19731.                               $SC_ice_cloud_parameter_I6 = ice_cloud_parameter(7)
19731.                               $SC_ice_cloud_parameter_I5 = ice_cloud_parameter(8)
19731.                               $SC_ice_cloud_parameter_I4 = ice_cloud_parameter(9)
19737.                               $SC_ice_cloud_parameter_I2 = ice_cloud_parameter(4)
19737.                               $SC_ice_cloud_parameter_I3 = ice_cloud_parameter(3)
19737.                               $SC_ice_cloud_parameter_I1 = ice_cloud_parameter(1)
19737.                               $SC_ice_cloud_parameter_I0 = ice_cloud_parameter(2)
19729.                               if ( nd_profile > 0 ) then
19728.                                  $I_L19728_654 = 0
19728.                                  do
19729.                                     $I_L19729_584 = 0
19729. !dir$ ivdep
19729.                                     do
19730.                                        $x_S41 = ( dim_char_ice(1 + $I_L19729_584, id_ct + $I_L19728_654) * 1.0/$SC_ice_cloud_parameter_I14 )
19737.                                        $k_ext_tot_cloud_WR0_R7 = ice_mass_frac(1 + $I_L19729_584, id_ct + $I_L19728_654) * _expn( $SC_ice_cloud_parameter_I1 + $x_S41 * ( $SC_ice_cloud_parameter_I0 + $x_S41 * ( $SC_ice_cloud_parameter_I3 + $x_S41 * ( $SC_ice_cloud_parameter_I2 + $x_S41 * ( $SC_ice_cloud_parameter_I8 + $x_S41 * ( $SC_ice_cloud_parameter_I7 + $x_S41 * ( $SC_ice_cloud_parameter_I6 + $x_S41 * ( $SC_ice_cloud_parameter_I5 + $x_S41 * ( $SC_ice_cloud_parameter_I4 + $x_S41 * ( $SC_ice_cloud_parameter_I9 + $x_S41 * $SC_ice_cloud_parameter_I15 ) ) ) ) ) ) ) ) ) )
19737.                                        k_ext_tot_cloud(1 + $I_L19729_584, id_ct + $I_L19728_654) = $k_ext_tot_cloud_WR0_R7
19744.                                        $x_S43 = ( dim_char_ice(1 + $I_L19729_584, id_ct + $I_L19728_654) * 1.0/$SC_ice_cloud_parameter_I22 )
19751.                                        k_ext_scat_cloud(1 + $I_L19729_584, id_ct + $I_L19728_654) = ( $k_ext_tot_cloud_WR0_R7 * ( 1.0 + -( $SC_ice_cloud_parameter_I13 + $x_S43 * ( $SC_ice_cloud_parameter_I12 + $x_S43 * ( $SC_ice_cloud_parameter_I11 + $x_S43 * ( $SC_ice_cloud_parameter_I19 + $x_S43 * ( $SC_ice_cloud_parameter_I18 + $x_S43 * ( $SC_ice_cloud_parameter_I17 + $x_S43 * ( $SC_ice_cloud_parameter_I16 + $x_S43 * ( $SC_ice_cloud_parameter_I10 + $x_S43 * ( $SC_ice_cloud_parameter_I25 + $x_S43 * ( $SC_ice_cloud_parameter_I24 + $x_S43 * $SC_ice_cloud_parameter_I23 ) ) ) ) ) ) ) ) ) ) ) )
19758.                                        $x_S45 = ( dim_char_ice(1 + $I_L19729_584, id_ct + $I_L19728_654) * 1.0/$SC_ice_cloud_parameter_I30 )
19765.                                        asymmetry_process(1 + $I_L19729_584, id_ct + $I_L19728_654) = ( $SC_ice_cloud_parameter_I21 + $x_S45 * ( $SC_ice_cloud_parameter_I29 + $x_S45 * ( $SC_ice_cloud_parameter_I28 + $x_S45 * ( $SC_ice_cloud_parameter_I27 + $x_S45 * ( $SC_ice_cloud_parameter_I26 + $x_S45 * ( $SC_ice_cloud_parameter_I20 + $x_S45 * ( $SC_ice_cloud_parameter_I35 + $x_S45 * ( $SC_ice_cloud_parameter_I34 + $x_S45 * ( $SC_ice_cloud_parameter_I33 + $x_S45 * ( $SC_ice_cloud_parameter_I32 + $x_S45 * $SC_ice_cloud_parameter_I31 ) ) ) ) ) ) ) ) ) )
19771.                                        phase_fnc_cloud(1 + $I_L19729_584, id_ct + $I_L19728_654, 1) = ( $k_ext_tot_cloud_WR0_R7 * ( 1.0 + -( $SC_ice_cloud_parameter_I13 + $x_S43 * ( $SC_ice_cloud_parameter_I12 + $x_S43 * ( $SC_ice_cloud_parameter_I11 + $x_S43 * ( $SC_ice_cloud_parameter_I19 + $x_S43 * ( $SC_ice_cloud_parameter_I18 + $x_S43 * ( $SC_ice_cloud_parameter_I17 + $x_S43 * ( $SC_ice_cloud_parameter_I16 + $x_S43 * ( $SC_ice_cloud_parameter_I10 + $x_S43 * ( $SC_ice_cloud_parameter_I25 + $x_S43 * ( $SC_ice_cloud_parameter_I24 + $x_S43 * $SC_ice_cloud_parameter_I23 ) ) ) ) ) ) ) ) ) ) ) ) * ( $SC_ice_cloud_parameter_I21 + $x_S45 * ( $SC_ice_cloud_parameter_I29 + $x_S45 * ( $SC_ice_cloud_parameter_I28 + $x_S45 * ( $SC_ice_cloud_parameter_I27 + $x_S45 * ( $SC_ice_cloud_parameter_I26 + $x_S45 * ( $SC_ice_cloud_parameter_I20 + $x_S45 * ( $SC_ice_cloud_parameter_I35 + $x_S45 * ( $SC_ice_cloud_parameter_I34 + $x_S45 * ( $SC_ice_cloud_parameter_I33 + $x_S45 * ( $SC_ice_cloud_parameter_I32 + $x_S45 * $SC_ice_cloud_parameter_I31 ) ) ) ) ) ) ) ) ) )
19773.                                        $I_L19729_584 = 1 + $I_L19729_584
19729.                                        if ( $I_L19729_584 >= nd_profile ) exit
19729.                                     enddo
19774.                                     $I_L19728_654 = 1 + $I_L19728_654
19773.                                     if ( $I_L19728_654 >= 1 + nd_layer + -id_ct ) exit
19773.                                  enddo
19773.                               endif
19773.                            endif
19777.                         else if ( nd_layer + -id_ct >= 0 ) then
19790.                            $SC_ice_cloud_parameter_I8 = ice_cloud_parameter(5)
19796.                            $SC_ice_cloud_parameter_I7 = ice_cloud_parameter(6)
19796.                            $SC_ice_cloud_parameter_I2 = ice_cloud_parameter(4)
19796.                            $SC_ice_cloud_parameter_I3 = ice_cloud_parameter(3)
19790.                            $SC_ice_cloud_parameter_I1 = ice_cloud_parameter(1)
19790.                            $SC_ice_cloud_parameter_I0 = ice_cloud_parameter(2)
19782.                            if ( nd_profile > 0 ) then
19781.                               $I_L19781_652 = 0
19781.                               do
19782.                                  $I_L19782_582 = 0
19782. !dir$ ivdep
19782.                                  do
19783.                                     $t_celsius_S49 = -273.16000000000003 + t(1 + $I_L19782_582, id_ct + $I_L19781_652)
19787.                                     $k_ext_tot_cloud_WR0_R10 = ( ice_mass_frac(1 + $I_L19782_582, id_ct + $I_L19781_652) * ( 1.0469999999999999 + $t_celsius_S49 * ( -9.1299999999999997e-5 + $t_celsius_S49 * ( 2.0259999999999999e-4 + -1.0560000000000001e-5 * $t_celsius_S49 ) ) ) * 1.0/( 3.05548e-2 + 254.80199999999999 * ice_mass_frac(1 + $I_L19782_582, id_ct + $I_L19781_652) * density(1 + $I_L19782_582, id_ct + $I_L19781_652) ) )
19787.                                     k_ext_tot_cloud(1 + $I_L19782_582, id_ct + $I_L19781_652) = $k_ext_tot_cloud_WR0_R10
19790.                                     $k_ext_scat_cloud_WR0_R11 = $k_ext_tot_cloud_WR0_R10 * ( 1.0 + ( $SC_ice_cloud_parameter_I8 * ( 4.6999999999999931e-2 + ( $t_celsius_S49 * ( -9.1299999999999997e-5 + $t_celsius_S49 * ( 2.0259999999999999e-4 + -1.0560000000000001e-5 * $t_celsius_S49 ) ) ) ) * 1.0/( 1.0469999999999999 + $t_celsius_S49 * ( -9.1299999999999997e-5 + $t_celsius_S49 * ( 2.0259999999999999e-4 + -1.0560000000000001e-5 * $t_celsius_S49 ) ) ) ) ) * ( 1.0 + -( $SC_ice_cloud_parameter_I1 * _expn( $SC_ice_cloud_parameter_I0 * log( 9.9999999999999998e-13 + ice_mass_frac(1 + $I_L19782_582, id_ct + $I_L19781_652) * density(1 + $I_L19782_582, id_ct + $I_L19781_652) ) ) ) )
19790.                                     k_ext_scat_cloud(1 + $I_L19782_582, id_ct + $I_L19781_652) = $k_ext_scat_cloud_WR0_R11
19796.                                     $asymmetry_process_WR0_R12 = $SC_ice_cloud_parameter_I3 * ( 1.0 + ( $SC_ice_cloud_parameter_I7 * ( 4.6999999999999931e-2 + ( $t_celsius_S49 * ( -9.1299999999999997e-5 + $t_celsius_S49 * ( 2.0259999999999999e-4 + -1.0560000000000001e-5 * $t_celsius_S49 ) ) ) ) * 1.0/( 1.0469999999999999 + $t_celsius_S49 * ( -9.1299999999999997e-5 + $t_celsius_S49 * ( 2.0259999999999999e-4 + -1.0560000000000001e-5 * $t_celsius_S49 ) ) ) ) ) * _expn( $SC_ice_cloud_parameter_I2 * log( 9.9999999999999998e-13 + ice_mass_frac(1 + $I_L19782_582, id_ct + $I_L19781_652) * density(1 + $I_L19782_582, id_ct + $I_L19781_652) ) )
19796.                                     asymmetry_process(1 + $I_L19782_582, id_ct + $I_L19781_652) = $asymmetry_process_WR0_R12
19801.                                     phase_fnc_cloud(1 + $I_L19782_582, id_ct + $I_L19781_652, 1) = $k_ext_scat_cloud_WR0_R11 * $asymmetry_process_WR0_R12
19803.                                     $I_L19782_582 = 1 + $I_L19782_582
19782.                                     if ( $I_L19782_582 >= nd_profile ) exit
19782.                                  enddo
19804.                                  $I_L19781_652 = 1 + $I_L19781_652
19803.                                  if ( $I_L19781_652 >= 1 + nd_layer + -id_ct ) exit
19803.                               enddo
19803.                            endif
19803.                         endif
19807.                      else if ( nd_layer + -id_ct >= 0 ) then
19812.                         if ( nd_profile > 0 ) then
19811.                            $I_L19811_650 = 0
19811.                            do
19812.                               $I_L19812_580 = 0
19812. !dir$ ivdep
19812.                               do
19813.                                  $t_celsius_S53 = -273.16000000000003 + t(1 + $I_L19812_580, id_ct + $I_L19811_650)
19817.                                  k_ext_tot_cloud(1 + $I_L19812_580, id_ct + $I_L19811_650) = ( ice_mass_frac(1 + $I_L19812_580, id_ct + $I_L19811_650) * ( 1.0469999999999999 + $t_celsius_S53 * ( -9.1299999999999997e-5 + $t_celsius_S53 * ( 2.0259999999999999e-4 + -1.0560000000000001e-5 * $t_celsius_S53 ) ) ) * 1.0/( 6.3068899999999997e-2 + 265.87400000000002 * ice_mass_frac(1 + $I_L19812_580, id_ct + $I_L19811_650) * density(1 + $I_L19812_580, id_ct + $I_L19811_650) ) )
19820.                                  $I_L19812_580 = 1 + $I_L19812_580
19812.                                  if ( $I_L19812_580 >= nd_profile ) exit
19812.                               enddo
19821.                               $I_L19811_650 = 1 + $I_L19811_650
19820.                               if ( $I_L19811_650 >= 1 + nd_layer + -id_ct ) exit
19820.                            enddo
19820.                         endif
19820.                      endif
19824.                   else if ( nd_layer + -id_ct >= 0 ) then
19846.                      $SC_ice_cloud_parameter_I15 = ice_cloud_parameter(11)
19846.                      $SC_ice_cloud_parameter_I14 = ice_cloud_parameter(12)
19846.                      $SC_ice_cloud_parameter_I13 = ice_cloud_parameter(13)
19846.                      $SC_ice_cloud_parameter_I12 = ice_cloud_parameter(14)
19838.                      $SC_ice_cloud_parameter_I9 = ice_cloud_parameter(10)
19833.                      $SC_ice_cloud_parameter_I8 = ice_cloud_parameter(5)
19833.                      $SC_ice_cloud_parameter_I7 = ice_cloud_parameter(6)
19838.                      $SC_ice_cloud_parameter_I6 = ice_cloud_parameter(7)
19838.                      $SC_ice_cloud_parameter_I5 = ice_cloud_parameter(8)
19838.                      $SC_ice_cloud_parameter_I4 = ice_cloud_parameter(9)
19833.                      $SC_ice_cloud_parameter_I2 = ice_cloud_parameter(4)
19833.                      $SC_ice_cloud_parameter_I3 = ice_cloud_parameter(3)
19830.                      $SC_ice_cloud_parameter_I1 = ice_cloud_parameter(1)
19830.                      $SC_ice_cloud_parameter_I0 = ice_cloud_parameter(2)
19829.                      if ( nd_profile > 0 ) then
19828.                         $I_L19828_648 = 0
19828.                         do
19829.                            $I_L19829_578 = 0
19829. !dir$ ivdep
19829.                            do
19830.                               $k_ext_tot_cloud_WR0_R13 = ice_mass_frac(1 + $I_L19829_578, id_ct + $I_L19828_648) * ( $SC_ice_cloud_parameter_I1 + ( $SC_ice_cloud_parameter_I0 * 1.0/dim_char_ice(1 + $I_L19829_578, id_ct + $I_L19828_648) ) )
19830.                               k_ext_tot_cloud(1 + $I_L19829_578, id_ct + $I_L19828_648) = $k_ext_tot_cloud_WR0_R13
19833.                               $omega_S56 = 1.0 + -( $SC_ice_cloud_parameter_I3 + dim_char_ice(1 + $I_L19829_578, id_ct + $I_L19828_648) * ( $SC_ice_cloud_parameter_I2 + dim_char_ice(1 + $I_L19829_578, id_ct + $I_L19828_648) * ( $SC_ice_cloud_parameter_I8 + $SC_ice_cloud_parameter_I7 * dim_char_ice(1 + $I_L19829_578, id_ct + $I_L19828_648) ) ) )
19837.                               $k_ext_scat_cloud_WR0_R14 = $omega_S56 * $k_ext_tot_cloud_WR0_R13
19837.                               k_ext_scat_cloud(1 + $I_L19829_578, id_ct + $I_L19828_648) = ( $omega_S56 * $k_ext_tot_cloud_WR0_R13 )
19838.                               $asymmetry_process_WR0_R15 = $SC_ice_cloud_parameter_I6 + dim_char_ice(1 + $I_L19829_578, id_ct + $I_L19828_648) * ( $SC_ice_cloud_parameter_I5 + dim_char_ice(1 + $I_L19829_578, id_ct + $I_L19828_648) * ( $SC_ice_cloud_parameter_I4 + $SC_ice_cloud_parameter_I9 * dim_char_ice(1 + $I_L19829_578, id_ct + $I_L19828_648) ) )
19838.                               asymmetry_process(1 + $I_L19829_578, id_ct + $I_L19828_648) = $asymmetry_process_WR0_R15
19843.                               phase_fnc_cloud(1 + $I_L19829_578, id_ct + $I_L19828_648, 1) = $asymmetry_process_WR0_R15 * ( $omega_S56 * $k_ext_tot_cloud_WR0_R13 )
19846.                               forward_scatter_cloud(1 + $I_L19829_578, id_ct + $I_L19828_648) = $k_ext_scat_cloud_WR0_R14 * ( $SC_ice_cloud_parameter_I15 + 1.0/max( 1.0, 2.0 * $omega_S56 ) + dim_char_ice(1 + $I_L19829_578, id_ct + $I_L19828_648) * ( $SC_ice_cloud_parameter_I14 + dim_char_ice(1 + $I_L19829_578, id_ct + $I_L19828_648) * ( $SC_ice_cloud_parameter_I13 + $SC_ice_cloud_parameter_I12 * dim_char_ice(1 + $I_L19829_578, id_ct + $I_L19828_648) ) ) )
19853.                               $I_L19829_578 = 1 + $I_L19829_578
19829.                               if ( $I_L19829_578 >= nd_profile ) exit
19829.                            enddo
19854.                            $I_L19828_648 = 1 + $I_L19828_648
19853.                            if ( $I_L19828_648 >= 1 + nd_layer + -id_ct ) exit
19853.                         enddo
19853.                      endif
19853.                   endif
19857.                else if ( nd_layer + -id_ct >= 0 ) then
19873.                   $SC_ice_cloud_parameter_I15 = ice_cloud_parameter(11)
19873.                   $SC_ice_cloud_parameter_I9 = ice_cloud_parameter(10)
19867.                   $SC_ice_cloud_parameter_I8 = ice_cloud_parameter(5)
19867.                   $SC_ice_cloud_parameter_I7 = ice_cloud_parameter(6)
19867.                   $SC_ice_cloud_parameter_I6 = ice_cloud_parameter(7)
19873.                   $SC_ice_cloud_parameter_I5 = ice_cloud_parameter(8)
19873.                   $SC_ice_cloud_parameter_I4 = ice_cloud_parameter(9)
19867.                   $SC_ice_cloud_parameter_I2 = ice_cloud_parameter(4)
19863.                   $SC_ice_cloud_parameter_I3 = ice_cloud_parameter(3)
19863.                   $SC_ice_cloud_parameter_I1 = ice_cloud_parameter(1)
19863.                   $SC_ice_cloud_parameter_I0 = ice_cloud_parameter(2)
19862.                   if ( nd_profile > 0 ) then
19861.                      $I_L19861_646 = 0
19861.                      do
19862.                         $I_L19862_576 = 0
19862. !dir$ ivdep
19862.                         do
19863.                            $k_ext_tot_cloud_WR0_R16 = ice_mass_frac(1 + $I_L19862_576, id_ct + $I_L19861_646) * ( $SC_ice_cloud_parameter_I1 + ( 1.0/dim_char_ice(1 + $I_L19862_576, id_ct + $I_L19861_646) * ( $SC_ice_cloud_parameter_I0 + ( $SC_ice_cloud_parameter_I3 * 1.0/dim_char_ice(1 + $I_L19862_576, id_ct + $I_L19861_646) ) ) ) )
19863.                            k_ext_tot_cloud(1 + $I_L19862_576, id_ct + $I_L19861_646) = $k_ext_tot_cloud_WR0_R16
19867.                            $k_ext_scat_cloud_WR0_R17 = $k_ext_tot_cloud_WR0_R16 + -( ( ice_mass_frac(1 + $I_L19862_576, id_ct + $I_L19861_646) * 1.0/dim_char_ice(1 + $I_L19862_576, id_ct + $I_L19861_646) ) * ( $SC_ice_cloud_parameter_I2 + dim_char_ice(1 + $I_L19862_576, id_ct + $I_L19861_646) * ( $SC_ice_cloud_parameter_I8 + dim_char_ice(1 + $I_L19862_576, id_ct + $I_L19861_646) * ( $SC_ice_cloud_parameter_I7 + $SC_ice_cloud_parameter_I6 * dim_char_ice(1 + $I_L19862_576, id_ct + $I_L19861_646) ) ) ) )
19867.                            k_ext_scat_cloud(1 + $I_L19862_576, id_ct + $I_L19861_646) = $k_ext_scat_cloud_WR0_R17
19873.                            $asymmetry_process_WR0_R18 = $SC_ice_cloud_parameter_I5 + dim_char_ice(1 + $I_L19862_576, id_ct + $I_L19861_646) * ( $SC_ice_cloud_parameter_I4 + dim_char_ice(1 + $I_L19862_576, id_ct + $I_L19861_646) * ( $SC_ice_cloud_parameter_I9 + $SC_ice_cloud_parameter_I15 * dim_char_ice(1 + $I_L19862_576, id_ct + $I_L19861_646) ) )
19873.                            asymmetry_process(1 + $I_L19862_576, id_ct + $I_L19861_646) = $asymmetry_process_WR0_R18
19878.                            phase_fnc_cloud(1 + $I_L19862_576, id_ct + $I_L19861_646, 1) = $k_ext_scat_cloud_WR0_R17 * $asymmetry_process_WR0_R18
19880.                            $I_L19862_576 = 1 + $I_L19862_576
19862.                            if ( $I_L19862_576 >= nd_profile ) exit
19862.                         enddo
19881.                         $I_L19861_646 = 1 + $I_L19861_646
19880.                         if ( $I_L19861_646 >= 1 + nd_layer + -id_ct ) exit
19880.                      enddo
19880.                   endif
19880.                endif
19884.             else if ( nd_layer + -id_ct >= 0 ) then
19903.                $SC_ice_cloud_parameter_I15 = ice_cloud_parameter(11)
19903.                $SC_ice_cloud_parameter_I14 = ice_cloud_parameter(12)
19903.                $SC_ice_cloud_parameter_I13 = ice_cloud_parameter(13)
19902.                $SC_ice_cloud_parameter_I12 = ice_cloud_parameter(14)
19903.                $SC_ice_cloud_parameter_I9 = ice_cloud_parameter(10)
19896.                $SC_ice_cloud_parameter_I8 = ice_cloud_parameter(5)
19896.                $SC_ice_cloud_parameter_I7 = ice_cloud_parameter(6)
19896.                $SC_ice_cloud_parameter_I6 = ice_cloud_parameter(7)
19896.                $SC_ice_cloud_parameter_I5 = ice_cloud_parameter(8)
19895.                $SC_ice_cloud_parameter_I4 = ice_cloud_parameter(9)
19890.                $SC_ice_cloud_parameter_I2 = ice_cloud_parameter(4)
19891.                $SC_ice_cloud_parameter_I3 = ice_cloud_parameter(3)
19891.                $SC_ice_cloud_parameter_I1 = ice_cloud_parameter(1)
19891.                $SC_ice_cloud_parameter_I0 = ice_cloud_parameter(2)
19889.                if ( nd_profile > 0 ) then
19888.                   $I_L19888_644 = 0
19888.                   do
19889.                      $I_L19889_574 = 0
19889. !dir$ ivdep
19889.                      do
19890.                         $x_S61 = ( dim_char_ice(1 + $I_L19889_574, id_ct + $I_L19888_644) * 1.0/$SC_ice_cloud_parameter_I2 )
19891.                         $k_ext_tot_cloud_WR0_R19 = ice_mass_frac(1 + $I_L19889_574, id_ct + $I_L19888_644) * ( $SC_ice_cloud_parameter_I1 + ( 1.0/$x_S61 * ( $SC_ice_cloud_parameter_I0 + ( $SC_ice_cloud_parameter_I3 * 1.0/$x_S61 ) ) ) )
19891.                         k_ext_tot_cloud(1 + $I_L19889_574, id_ct + $I_L19888_644) = $k_ext_tot_cloud_WR0_R19
19895.                         $x_S62 = ( dim_char_ice(1 + $I_L19889_574, id_ct + $I_L19888_644) * 1.0/$SC_ice_cloud_parameter_I4 )
19896.                         k_ext_scat_cloud(1 + $I_L19889_574, id_ct + $I_L19888_644) = ( $k_ext_tot_cloud_WR0_R19 * ( 1.0 + -( $SC_ice_cloud_parameter_I8 + $x_S62 * ( $SC_ice_cloud_parameter_I7 + $x_S62 * ( $SC_ice_cloud_parameter_I6 + $x_S62 * $SC_ice_cloud_parameter_I5 ) ) ) ) )
19902.                         $x_S63 = ( dim_char_ice(1 + $I_L19889_574, id_ct + $I_L19888_644) * 1.0/$SC_ice_cloud_parameter_I12 )
19903.                         asymmetry_process(1 + $I_L19889_574, id_ct + $I_L19888_644) = ( $SC_ice_cloud_parameter_I9 + $x_S63 * ( $SC_ice_cloud_parameter_I15 + $x_S63 * ( $SC_ice_cloud_parameter_I14 + $x_S63 * $SC_ice_cloud_parameter_I13 ) ) )
19907.                         phase_fnc_cloud(1 + $I_L19889_574, id_ct + $I_L19888_644, 1) = ( $k_ext_tot_cloud_WR0_R19 * ( 1.0 + -( $SC_ice_cloud_parameter_I8 + $x_S62 * ( $SC_ice_cloud_parameter_I7 + $x_S62 * ( $SC_ice_cloud_parameter_I6 + $x_S62 * $SC_ice_cloud_parameter_I5 ) ) ) ) ) * ( $SC_ice_cloud_parameter_I9 + $x_S63 * ( $SC_ice_cloud_parameter_I15 + $x_S63 * ( $SC_ice_cloud_parameter_I14 + $x_S63 * $SC_ice_cloud_parameter_I13 ) ) )
19909.                         $I_L19889_574 = 1 + $I_L19889_574
19889.                         if ( $I_L19889_574 >= nd_profile ) exit
19889.                      enddo
19910.                      $I_L19888_644 = 1 + $I_L19888_644
19909.                      if ( $I_L19888_644 >= 1 + nd_layer + -id_ct ) exit
19909.                   enddo
19909.                endif
19909.             endif
19920.             if ( -2 + n_order_phase >= 0 ) then
19922.                if ( nd_layer + -id_ct >= 0 ) then
19923.                   if ( nd_profile > 0 ) then
19922.                      $I_L19922_737 = 0
19922.                      do
19920.                         $I_L19920_729 = 0
19920.                         do
19923.                            $I_L19923_721 = 0
19923.                            do
19922.                               $I_L19922_698 = 0
19922. !dir$ shortloop16
19922. !dir$ blocking_size( 2, 2 )
19922.                               do
19920.                                  $I_L19920_741 = 0
19920. !dir$ shortloop16
19920. !dir$ blocking_size( 2, 2 )
19920.                                  do
19923.                                     $I_L19923_596 = 0
19923. !dir$ ivdep
19923. !dir$ blocking_size( 256, 256 )
19923.                                     do
19924.                                        phase_fnc_cloud(1 + $I_L19923_596 + 256 * $I_L19923_721, id_ct + $I_L19922_698 + 2 * $I_L19922_737, 2 + $I_L19920_741 + 2 * $I_L19920_729) = asymmetry_process(1 + $I_L19923_596 + 256 * $I_L19923_721, id_ct + $I_L19922_698 + 2 * $I_L19922_737) * phase_fnc_cloud(1 + $I_L19923_596 + 256 * $I_L19923_721, id_ct + $I_L19922_698 + 2 * $I_L19922_737, 1 + $I_L19920_741 + 2 * $I_L19920_729)
19923.                                        $I_L19923_596 = 1 + $I_L19923_596
19923.                                        if ( $I_L19923_596 >= min( nd_profile, 256 + 256 * $I_L19923_721 ) + -256 * $I_L19923_721 ) exit
19923.                                     enddo
19920.                                     $I_L19920_741 = 1 + $I_L19920_741
19920.                                     if ( $I_L19920_741 >= min( -1 + n_order_phase, 2 + 2 * $I_L19920_729 ) + -2 * $I_L19920_729 ) exit
19920.                                  enddo
19922.                                  $I_L19922_698 = 1 + $I_L19922_698
19926.                                  if ( $I_L19922_698 >= min( 1 + nd_layer + -id_ct, 2 + 2 * $I_L19922_737 ) + -2 * $I_L19922_737 ) exit
19926.                               enddo
19923.                               $I_L19923_721 = 1 + $I_L19923_721
19923.                               if ( $I_L19923_721 >= 1 + max( 0, -1 + _rsh( 255 + nd_profile, 8 ) ) ) exit
19923.                            enddo
19920.                            $I_L19920_729 = 1 + $I_L19920_729
19927.                            if ( $I_L19920_729 >= 1 + max( 0, -1 + _rsh( n_order_phase, 1 ) ) ) exit
19927.                         enddo
19922.                         $I_L19922_737 = 1 + $I_L19922_737
19922.                         if ( $I_L19922_737 >= 1 + max( 0, -1 + _rsh( 2 + nd_layer + -id_ct, 1 ) ) ) exit
19922.                      enddo
19922.                   endif
19922.                endif
19922.             endif
19930.             if ( l_rescale /= .false. ) then
19936.                if ( i_parametrization_ice == 9 ) then
19938.                   if ( nd_layer + -id_ct >= 0 ) then
19939.                      if ( nd_profile > 0 ) then
19938.                         $I_L19938_662 = 0
19938.                         do
19939.                            $I_L19939_601 = 0
19939. !dir$ ivdep
19939.                            do
19940.                               forward_scatter_cloud(1 + $I_L19939_601, id_ct + $I_L19938_662) = min( forward_scatter_cloud(1 + $I_L19939_601, id_ct + $I_L19938_662), k_ext_scat_cloud(1 + $I_L19939_601, id_ct + $I_L19938_662) * asymmetry_process(1 + $I_L19939_601, id_ct + $I_L19938_662) ** ( -1 + n_order_forward ) )
19944.                               $I_L19939_601 = 1 + $I_L19939_601
19939.                               if ( $I_L19939_601 >= nd_profile ) exit
19939.                            enddo
19945.                            $I_L19938_662 = 1 + $I_L19938_662
19944.                            if ( $I_L19938_662 >= 1 + nd_layer + -id_ct ) exit
19944.                         enddo
19944.                      endif
19944.                   endif
19946.                else if ( nd_layer + -id_ct >= 0 ) then
19949.                   if ( nd_profile > 0 ) then
19948.                      $I_L19948_660 = 0
19948.                      do
19949.                         $I_L19949_599 = 0
19949. !dir$ ivdep
19949.                         do
19950.                            forward_scatter_cloud(1 + $I_L19949_599, id_ct + $I_L19948_660) = k_ext_scat_cloud(1 + $I_L19949_599, id_ct + $I_L19948_660) * asymmetry_process(1 + $I_L19949_599, id_ct + $I_L19948_660) ** n_order_forward
19953.                            $I_L19949_599 = 1 + $I_L19949_599
19949.                            if ( $I_L19949_599 >= nd_profile ) exit
19949.                         enddo
19954.                         $I_L19948_660 = 1 + $I_L19948_660
19953.                         if ( $I_L19948_660 >= 1 + nd_layer + -id_ct ) exit
19953.                      enddo
19953.                   endif
19953.                endif
19953.             endif
19959.             if ( l_solar_phf /= .false. ) then
19960.                if ( n_layer + -n_cloud_top >= 0 ) then
19962.                   if ( n_direction > 0 ) then
19976.                      if ( -2 + n_order_phase_solar >= 0 ) then
19960.                         $I_L19960_713 = 0
19960. !dir$ loop_info (automatic) cache_nt( n_cloud_profile )
19960.                         do
19962.                            $SCA_n_cloud_profile_I61 = n_cloud_profile(n_cloud_top + $I_L19960_713)
19966.                            if ( $SCA_n_cloud_profile_I61 > 0 ) then
19962.                               $I_L19962_701 = 0
19962.                               do
19966.                                  $I_L19966_603 = 0
19966. !dir$ ivdep
19966.                                  do
19967.                                     $l_S74 = i_cloud_profile(1 + $I_L19966_603, n_cloud_top + $I_L19960_713)
19970.                                     p_legendre_ls_m1($l_S74) = 1.0
19971.                                     $SVU_P13 = cos_sol_view($l_S74, 1 + $I_L19962_701)
19971.                                     p_legendre_ls($l_S74) = $SVU_P13
19972.                                     $SVU_P14 = k_ext_scat_cloud($l_S74, n_cloud_top + $I_L19960_713) * asymmetry_process($l_S74, n_cloud_top + $I_L19960_713)
19972.                                     ks_phf($l_S74) = $SVU_P14
19973.                                     phase_fnc_solar_cloud($l_S74, n_cloud_top + $I_L19960_713, 1 + $I_L19962_701) = k_ext_scat_cloud($l_S74, n_cloud_top + $I_L19960_713) + 3.0 * $SVU_P13 * $SVU_P14
19975.                                     $I_L19966_603 = 1 + $I_L19966_603
19966.                                     if ( $I_L19966_603 >= $SCA_n_cloud_profile_I61 ) exit
19966.                                  enddo
19976.                                  $I_L19976_664 = 0
19976.                                  do
19978.                                     $cnst1_S79 = 1.0 + -( 1.0/( real( 2 + $I_L19976_664, 8 ) ) )
19979.                                     $I_L19979_605 = 0
19979. !dir$ unroll 2
19979.                                     do
19980.                                        $l_S78 = i_cloud_profile(1 + $I_L19979_605, n_cloud_top + $I_L19960_713)
19981.                                        $SVU_P15 = p_legendre_ls($l_S78)
19982.                                        $SCF_P23 = $SVU_P15 * cos_sol_view($l_S78, 1 + $I_L19962_701) * ( 1.0 + $cnst1_S79 )
19982.                                        $SVU_P27 = $SCF_P23 + -( $cnst1_S79 * p_legendre_ls_m1($l_S78) )
19982.                                        p_legendre_ls($l_S78) = $SVU_P27
19985.                                        p_legendre_ls_m1($l_S78) = $SVU_P15
19986.                                        ks_phf($l_S78) = ks_phf($l_S78) * asymmetry_process($l_S78, n_cloud_top + $I_L19960_713)
19987.                                        phase_fnc_solar_cloud($l_S78, n_cloud_top + $I_L19960_713, 1 + $I_L19962_701) = phase_fnc_solar_cloud($l_S78, n_cloud_top + $I_L19960_713, 1 + $I_L19962_701) + ks_phf($l_S78) * $SVU_P27 * real( 5 + 2 * $I_L19976_664, 8 )
19991.                                        $I_L19979_605 = 1 + $I_L19979_605
19979.                                        if ( $I_L19979_605 >= $SCA_n_cloud_profile_I61 ) exit
19979.                                     enddo
19992.                                     $I_L19976_664 = 1 + $I_L19976_664
19991.                                     if ( $I_L19976_664 >= -1 + n_order_phase_solar ) exit
19991.                                  enddo
19993.                                  $I_L19962_701 = 1 + $I_L19962_701
19992.                                  if ( $I_L19962_701 >= n_direction ) exit
19992.                               enddo
19992.                            endif
19997.                            if ( l_rescale /= .false. ) then
19998.                               if ( $SCA_n_cloud_profile_I61 > 0 ) then
19998.                                  $I_L19998_607 = 0
19998. !dir$ ivdep
19998. !dir$ loop_info (automatic) cache_nt( ks_phf, asymmetry_process, i_cloud_profile, forward_solar_cloud )
19998.                                  do
19999.                                     $l_S82 = i_cloud_profile(1 + $I_L19998_607, n_cloud_top + $I_L19960_713)
20000.                                     forward_solar_cloud($l_S82, n_cloud_top + $I_L19960_713) = ks_phf($l_S82) * asymmetry_process($l_S82, n_cloud_top + $I_L19960_713)
20002.                                     $I_L19998_607 = 1 + $I_L19998_607
19998.                                     if ( $I_L19998_607 >= $SCA_n_cloud_profile_I61 ) exit
19998.                                  enddo
19998.                               endif
19998.                            endif
20005.                            $I_L19960_713 = 1 + $I_L19960_713
20003.                            if ( $I_L19960_713 >= 1 + n_layer + -n_cloud_top ) exit
20003.                         enddo
20003.                      else if ( l_rescale /= .false. ) then
19960.                         $I_L19960_705 = 0
19960. !dir$ loop_info (automatic) cache_nt( n_cloud_profile )
19960.                         do
19962.                            $SCA_n_cloud_profile_I62 = n_cloud_profile(n_cloud_top + $I_L19960_705)
19966.                            if ( $SCA_n_cloud_profile_I62 > 0 ) then
19962.                               $I_L19962_674 = 0
19962.                               do
19966.                                  $I_L19966_625 = 0
19966. !dir$ ivdep
19966.                                  do
19967.                                     $l_S74 = i_cloud_profile(1 + $I_L19966_625, n_cloud_top + $I_L19960_705)
19971.                                     $SVU_P16 = cos_sol_view($l_S74, 1 + $I_L19962_674)
19972.                                     $SVU_P17 = k_ext_scat_cloud($l_S74, n_cloud_top + $I_L19960_705) * asymmetry_process($l_S74, n_cloud_top + $I_L19960_705)
19972.                                     ks_phf($l_S74) = $SVU_P17
19973.                                     phase_fnc_solar_cloud($l_S74, n_cloud_top + $I_L19960_705, 1 + $I_L19962_674) = k_ext_scat_cloud($l_S74, n_cloud_top + $I_L19960_705) + 3.0 * $SVU_P16 * $SVU_P17
19975.                                     $I_L19966_625 = 1 + $I_L19966_625
19966.                                     if ( $I_L19966_625 >= $SCA_n_cloud_profile_I62 ) exit
19966.                                  enddo
19993.                                  $I_L19962_674 = 1 + $I_L19962_674
19992.                                  if ( $I_L19962_674 >= n_direction ) exit
19992.                               enddo
19998.                               $I_L19998_627 = 0
19998. !dir$ ivdep
19998.                               do
19999.                                  $l_S82 = i_cloud_profile(1 + $I_L19998_627, n_cloud_top + $I_L19960_705)
20000.                                  forward_solar_cloud($l_S82, n_cloud_top + $I_L19960_705) = ks_phf($l_S82) * asymmetry_process($l_S82, n_cloud_top + $I_L19960_705)
20002.                                  $I_L19998_627 = 1 + $I_L19998_627
19998.                                  if ( $I_L19998_627 >= $SCA_n_cloud_profile_I62 ) exit
19998.                               enddo
19998.                            endif
20005.                            $I_L19960_705 = 1 + $I_L19960_705
20003.                            if ( $I_L19960_705 >= 1 + n_layer + -n_cloud_top ) exit
20003.                         enddo
20003.                      else
19960.                         $I_L19960_731 = 0
19960. !dir$ loop_info (automatic) cache_nt( n_cloud_profile )
19960.                         do
19962.                            $SCA_n_cloud_profile_I63 = n_cloud_profile(n_cloud_top + $I_L19960_731)
19966.                            if ( $SCA_n_cloud_profile_I63 > 0 ) then
19962.                               $I_L19962_723 = 0
19962.                               do
19966.                                  $I_L19966_707 = 0
19966.                                  do
19962.                                     $I_L19962_743 = 0
19962. !dir$ shortloop16
19962. !dir$ blocking_size( 2, 2 )
19962.                                     do
19966.                                        $I_L19966_629 = 0
19966. !dir$ ivdep
19966. !dir$ blocking_size( 256, 256 )
19966.                                        do
19967.                                           $l_S74 = i_cloud_profile(1 + $I_L19966_629 + 256 * $I_L19966_707, n_cloud_top + $I_L19960_731)
19971.                                           $SVU_P18 = cos_sol_view($l_S74, 1 + $I_L19962_743 + 2 * $I_L19962_723)
19972.                                           $SVU_P19 = k_ext_scat_cloud($l_S74, n_cloud_top + $I_L19960_731) * asymmetry_process($l_S74, n_cloud_top + $I_L19960_731)
19973.                                           phase_fnc_solar_cloud($l_S74, n_cloud_top + $I_L19960_731, 1 + $I_L19962_743 + 2 * $I_L19962_723) = k_ext_scat_cloud($l_S74, n_cloud_top + $I_L19960_731) + 3.0 * $SVU_P18 * $SVU_P19
19966.                                           $I_L19966_629 = 1 + $I_L19966_629
19966.                                           if ( $I_L19966_629 >= min( $SCA_n_cloud_profile_I63, 256 + 256 * $I_L19966_707 ) + -256 * $I_L19966_707 ) exit
19966.                                        enddo
19962.                                        $I_L19962_743 = 1 + $I_L19962_743
19962.                                        if ( $I_L19962_743 >= min( n_direction, 2 + 2 * $I_L19962_723 ) + -2 * $I_L19962_723 ) exit
19962.                                     enddo
19966.                                     $I_L19966_707 = 1 + $I_L19966_707
19992.                                     if ( $I_L19966_707 >= 1 + max( 0, -1 + _rsh( 255 + $SCA_n_cloud_profile_I63, 8 ) ) ) exit
19992.                                  enddo
19962.                                  $I_L19962_723 = 1 + $I_L19962_723
19962.                                  if ( $I_L19962_723 >= 1 + max( 0, -1 + _rsh( 1 + n_direction, 1 ) ) ) exit
19962.                               enddo
19962.                            endif
20005.                            $I_L19960_731 = 1 + $I_L19960_731
20003.                            if ( $I_L19960_731 >= 1 + n_layer + -n_cloud_top ) exit
20003.                         enddo
20003.                      endif
20003.                   else if ( l_rescale /= .false. ) then
19960.                      $I_L19960_672 = 0
19960.                      do
19998.                         $t_S80 = n_cloud_profile(n_cloud_top + $I_L19960_672)
19998.                         if ( $t_S80 > 0 ) then
19998.                            $I_L19998_623 = 0
19998. !dir$ ivdep
19998.                            do
19999.                               $l_S82 = i_cloud_profile(1 + $I_L19998_623, n_cloud_top + $I_L19960_672)
20000.                               forward_solar_cloud($l_S82, n_cloud_top + $I_L19960_672) = ks_phf($l_S82) * asymmetry_process($l_S82, n_cloud_top + $I_L19960_672)
20002.                               $I_L19998_623 = 1 + $I_L19998_623
19998.                               if ( $I_L19998_623 >= $t_S80 ) exit
19998.                            enddo
19998.                         endif
20005.                         $I_L19960_672 = 1 + $I_L19960_672
20003.                         if ( $I_L19960_672 >= 1 + n_layer + -n_cloud_top ) exit
20003.                      enddo
20003.                   endif
20003.                endif
20003.             endif
20003.          endif
20003.       endif
20195.       if ( i_parametrization_ice == 3 ) then
20197.          call prsc_opt_prop( ierr, n_profile, n_cloud_top, n_layer, l_rescale, n_order_forward, l_henyey_greenstein_pf, n_order_phase, p(1, 1), density(1, 1), n_opt_level_cloud_prsc, ice_pressure_prsc(1, 1), ice_absorption_prsc(1, 1), ice_scattering_prsc(1, 1), ice_phase_fnc_prsc(1, 1, 1), k_ext_tot_cloud(1, id_ct), k_ext_scat_cloud(1, id_ct), phase_fnc_cloud(1, id_ct, 1), forward_scatter_cloud(1, id_ct), forward_solar_cloud(1, id_ct), l_solar_phf, n_order_phase_solar, n_direction, cos_sol_view(1, 1), phase_fnc_solar_cloud(1, id_ct, 1), nd_profile, nd_radiance_profile, nd_layer, id_ct, nd_layer, nd_direction, nd_profile_prsc, nd_opt_level_prsc, nd_phase_term, nd_max_order )
20217.          if ( n_layer + -n_cloud_top >= 0 ) then
20217.             $I_L20217_668 = 0
20217.             do
20218.                $t_S84 = n_cloud_profile(n_cloud_top + $I_L20217_668)
20218.                if ( $t_S84 > 0 ) then
20218.                   $I_L20218_615 = 0
20218. !dir$ ivdep
20218.                   do
20219.                      $l_S86 = i_cloud_profile(1 + $I_L20218_615, n_cloud_top + $I_L20217_668)
20220.                      k_ext_tot_cloud($l_S86, n_cloud_top + $I_L20217_668) = _vu_plus( k_ext_tot_cloud($l_S86, n_cloud_top + $I_L20217_668), k_ext_scat_cloud($l_S86, n_cloud_top + $I_L20217_668) )
20222.                      $I_L20218_615 = 1 + $I_L20218_615
20218.                      if ( $I_L20218_615 >= $t_S84 ) exit
20218.                   enddo
20218.                endif
20223.                $I_L20217_668 = 1 + $I_L20217_668
20222.                if ( $I_L20217_668 >= 1 + n_layer + -n_cloud_top ) exit
20222.             enddo
20222.          endif
20222.       endif
20228.       if ( i_parametrization_ice == 1 ) then
20225.          goto 40
20228.       else if ( i_parametrization_ice == 6 ) then
20228.          goto 40
20228.       else if ( i_parametrization_ice == 7 ) then
20228.          goto 40
20228.       else if ( i_parametrization_ice == 4 ) then
20228.          goto 40
20228.       else if ( i_parametrization_ice == 5 ) then
20228.          goto 40
20228.       else if ( i_parametrization_ice == 9 ) then
20228.          goto 40
20228.       else if ( i_parametrization_ice == 10 ) then
20228.          goto 40
20228.       else if ( i_parametrization_ice == 11 ) then
20228.          goto 40
20228.       else if ( i_parametrization_ice == 12 ) then
20228.          goto 40
20228.       else if ( i_parametrization_ice /= 3 ) then
20239.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$685,  _substr(t$684,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: An invalid parametrization of ice crystals has been used.', 0x800600000000L ) ) )
20241.          ierr = 1
19416.          _free( t$2657 )
19416.       else
19416.    40    continue
19416.          _free( t$2657 )
19416.       endif
20249.       return
20249.       end
20249.       
20275.       
20275.       subroutine opt_prop_water_cloud( ierr, n_profile, n_layer, n_cloud_top, n_cloud_profile, i_cloud_profile, n_order_phase, l_rescale, n_order_forward, l_henyey_greenstein_pf, l_solar_phf, n_order_phase_solar, n_direction, cos_sol_view, i_parametrization_drop, cloud_parameter, liq_water_mass_frac, radius_effect, p, density, n_opt_level_cloud_prsc, drop_pressure_prsc, drop_absorption_prsc, drop_scattering_prsc, drop_phase_fnc_prsc, k_ext_tot_cloud, k_ext_scat_cloud, phase_fnc_cloud, forward_scatter_cloud, forward_solar_cloud, phase_fnc_solar_cloud, nd_profile, nd_radiance_profile, nd_layer, id_ct, nd_direction, nd_phase_term, nd_max_order, nd_cloud_parameter, nd_profile_prsc, nd_opt_level_prsc )
20275.       t$686 = id_ct
20275.       t$687 = nd_layer
20275.       t$2672 = 1 + nd_layer + -id_ct
20362.       t$2673 = _zla( 0, 1 + nd_layer + -id_ct )
20275.       t$688 = nd_profile
20364.       t$2674 = _zla( 0, nd_profile )
20275.       t$2675 = _zla( 0, nd_profile )
20275.       t$2676 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
20275.       t$689 = nd_radiance_profile
20275.       t$690 = nd_direction
20380.       t$2677 = _zla( 0, nd_radiance_profile )
20275.       t$2678 = _zla( 0, nd_radiance_profile )
20380.       t$2679 = _zla( 0, nd_direction )
20275.       t$2680 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
20275.       t$691 = nd_cloud_parameter
20385.       t$2681 = _zla( 0, nd_cloud_parameter )
20393.       t$2682 = _zla( 0, nd_layer )
20275.       t$2683 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
20275.       t$692 = nd_profile_prsc
20275.       t$693 = nd_opt_level_prsc
20397.       t$2684 = _zla( 0, nd_profile_prsc )
20275.       t$2685 = _zla( 0, nd_profile_prsc )
20397.       t$2686 = _zla( 0, nd_opt_level_prsc )
20275.       t$2687 = _zla( 0, nd_profile_prsc ) * _zla( 0, nd_opt_level_prsc )
20275.       t$694 = nd_phase_term
20275.       t$2688 = _zla( 0, nd_profile_prsc ) * _zla( 0, nd_opt_level_prsc )
20403.       t$2689 = _zla( 0, nd_phase_term )
20275.       t$2690 = _zla( 0, nd_profile_prsc ) * _zla( 0, nd_opt_level_prsc ) * _zla( 0, nd_phase_term )
20275.       t$695 = nd_max_order
20275.       t$2691 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
20412.       t$2692 = _zla( 0, nd_max_order )
20275.       t$2693 = _zla( 0, nd_profile ) * _zla( 0, nd_max_order ) * _zla( 0, 1 + nd_layer + -id_ct )
20275.       t$2694 = _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
20275.       t$2695 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * _zla( 0, 1 + nd_layer + -id_ct )
20435.       t$2698 = 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
20448.       t$2699 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct ) ) / 8
20448.       t$2701 = t$2699 + 8 * _zla( 0, nd_radiance_profile )
20442.       t$2702 = 8 * ( 7 + t$2699 + 8 * _zla( 0, nd_radiance_profile ) ) / 8
20442.       t$2704 = t$2702 + 8 * _zla( 0, nd_radiance_profile )
20444.       t$2705 = 8 * ( 7 + t$2702 + 8 * _zla( 0, nd_radiance_profile ) ) / 8
20444.       t$2707 = t$2705 + 8 * _zla( 0, nd_radiance_profile )
20446.       t$2708 = 8 * ( 7 + t$2705 + 8 * _zla( 0, nd_radiance_profile ) ) / 8
20446.       t$2710 = t$2708 + 8 * _zla( 0, nd_radiance_profile )
20275.       t$2696 = int( _alloc( t$2708 + 8 * _zla( 0, nd_radiance_profile ) ), 8 )
20435.       t$2697 = t$2696
20448.       t$2700 = t$2699 + t$2696
20442.       t$2703 = t$2702 + t$2696
20444.       t$2706 = t$2705 + t$2696
20446.       t$2709 = t$2708 + t$2696
20460.       if ( i_parametrization_drop == 1 ) then
20435.          goto 10
20460.       else if ( i_parametrization_drop == 2 ) then
20460.          goto 10
20460.       else if ( i_parametrization_drop == 5 ) then
20460.    10    continue
20473.          if ( i_parametrization_drop == 1 ) then
20476.             if ( nd_layer + -id_ct >= 0 ) then
20484.                $SC_cloud_parameter_I5 = cloud_parameter(5)
20484.                $SC_cloud_parameter_I4 = cloud_parameter(6)
20481.                $SC_cloud_parameter_I2 = cloud_parameter(4)
20481.                $SC_cloud_parameter_I3 = cloud_parameter(3)
20478.                $SC_cloud_parameter_I1 = cloud_parameter(1)
20478.                $SC_cloud_parameter_I0 = cloud_parameter(2)
20477.                if ( nd_profile > 0 ) then
20476.                   $I_L20476_250 = 0
20476.                   do
20477.                      $I_L20477_222 = 0
20477. !dir$ ivdep
20477.                      do
20478.                         $k_ext_tot_cloud_WR0_R0 = liq_water_mass_frac(1 + $I_L20477_222, id_ct + $I_L20476_250) * ( $SC_cloud_parameter_I1 + ( $SC_cloud_parameter_I0 * 1.0/radius_effect(1 + $I_L20477_222, id_ct + $I_L20476_250) ) )
20478.                         k_ext_tot_cloud(1 + $I_L20477_222, id_ct + $I_L20476_250) = $k_ext_tot_cloud_WR0_R0
20481.                         $k_ext_scat_cloud_WR0_R1 = $k_ext_tot_cloud_WR0_R0 * ( 1.0 + -$SC_cloud_parameter_I3 + -( $SC_cloud_parameter_I2 * radius_effect(1 + $I_L20477_222, id_ct + $I_L20476_250) ) )
20481.                         k_ext_scat_cloud(1 + $I_L20477_222, id_ct + $I_L20476_250) = $k_ext_scat_cloud_WR0_R1
20484.                         $asymmetry_process_WR0_R2 = $SC_cloud_parameter_I5 + $SC_cloud_parameter_I4 * radius_effect(1 + $I_L20477_222, id_ct + $I_L20476_250)
20484.                         asymmetry_process(1 + $I_L20477_222, id_ct + $I_L20476_250) = $asymmetry_process_WR0_R2
20487.                         phase_fnc_cloud(1 + $I_L20477_222, id_ct + $I_L20476_250, 1) = $k_ext_scat_cloud_WR0_R1 * $asymmetry_process_WR0_R2
20489.                         $I_L20477_222 = 1 + $I_L20477_222
20477.                         if ( $I_L20477_222 >= nd_profile ) exit
20477.                      enddo
20490.                      $I_L20476_250 = 1 + $I_L20476_250
20489.                      if ( $I_L20476_250 >= 1 + nd_layer + -id_ct ) exit
20489.                   enddo
20489.                endif
20489.             endif
20493.          else if ( i_parametrization_drop == 2 ) then
20497.             if ( nd_layer + -id_ct >= 0 ) then
20506.                $SC_cloud_parameter_I8 = cloud_parameter(7)
20506.                $SC_cloud_parameter_I7 = cloud_parameter(8)
20506.                $SC_cloud_parameter_I6 = cloud_parameter(9)
20502.                $SC_cloud_parameter_I5 = cloud_parameter(5)
20502.                $SC_cloud_parameter_I4 = cloud_parameter(6)
20502.                $SC_cloud_parameter_I2 = cloud_parameter(4)
20499.                $SC_cloud_parameter_I3 = cloud_parameter(3)
20499.                $SC_cloud_parameter_I1 = cloud_parameter(1)
20499.                $SC_cloud_parameter_I0 = cloud_parameter(2)
20498.                if ( nd_profile > 0 ) then
20497.                   $I_L20497_248 = 0
20497.                   do
20498.                      $I_L20498_220 = 0
20498. !dir$ ivdep
20498.                      do
20499.                         $k_ext_tot_cloud_WR0_R3 = liq_water_mass_frac(1 + $I_L20498_220, id_ct + $I_L20497_248) * ( $SC_cloud_parameter_I1 + $SC_cloud_parameter_I0 * _expn( $SC_cloud_parameter_I3 * log( radius_effect(1 + $I_L20498_220, id_ct + $I_L20497_248) ) ) )
20499.                         k_ext_tot_cloud(1 + $I_L20498_220, id_ct + $I_L20497_248) = $k_ext_tot_cloud_WR0_R3
20502.                         $k_ext_scat_cloud_WR0_R4 = $k_ext_tot_cloud_WR0_R3 * ( 1.0 + -$SC_cloud_parameter_I2 + -( $SC_cloud_parameter_I5 * _expn( $SC_cloud_parameter_I4 * log( radius_effect(1 + $I_L20498_220, id_ct + $I_L20497_248) ) ) ) )
20502.                         k_ext_scat_cloud(1 + $I_L20498_220, id_ct + $I_L20497_248) = $k_ext_scat_cloud_WR0_R4
20506.                         $asymmetry_process_WR0_R5 = $SC_cloud_parameter_I8 + $SC_cloud_parameter_I7 * _expn( $SC_cloud_parameter_I6 * log( radius_effect(1 + $I_L20498_220, id_ct + $I_L20497_248) ) )
20506.                         asymmetry_process(1 + $I_L20498_220, id_ct + $I_L20497_248) = $asymmetry_process_WR0_R5
20509.                         phase_fnc_cloud(1 + $I_L20498_220, id_ct + $I_L20497_248, 1) = $k_ext_scat_cloud_WR0_R4 * $asymmetry_process_WR0_R5
20511.                         $I_L20498_220 = 1 + $I_L20498_220
20498.                         if ( $I_L20498_220 >= nd_profile ) exit
20498.                      enddo
20512.                      $I_L20497_248 = 1 + $I_L20497_248
20511.                      if ( $I_L20497_248 >= 1 + nd_layer + -id_ct ) exit
20511.                   enddo
20511.                endif
20511.             endif
20511.          else if ( i_parametrization_drop == 5 ) then
20519.             if ( nd_layer + -id_ct >= 0 ) then
20537.                $SC_cloud_parameter_I12 = cloud_parameter(15)
20537.                $SC_cloud_parameter_I11 = cloud_parameter(16)
20537.                $SC_cloud_parameter_I15 = cloud_parameter(12)
20537.                $SC_cloud_parameter_I14 = cloud_parameter(13)
20537.                $SC_cloud_parameter_I13 = cloud_parameter(14)
20529.                $SC_cloud_parameter_I10 = cloud_parameter(10)
20529.                $SC_cloud_parameter_I9 = cloud_parameter(11)
20529.                $SC_cloud_parameter_I8 = cloud_parameter(7)
20529.                $SC_cloud_parameter_I7 = cloud_parameter(8)
20529.                $SC_cloud_parameter_I6 = cloud_parameter(9)
20521.                $SC_cloud_parameter_I5 = cloud_parameter(5)
20521.                $SC_cloud_parameter_I4 = cloud_parameter(6)
20521.                $SC_cloud_parameter_I2 = cloud_parameter(4)
20521.                $SC_cloud_parameter_I3 = cloud_parameter(3)
20521.                $SC_cloud_parameter_I1 = cloud_parameter(1)
20521.                $SC_cloud_parameter_I0 = cloud_parameter(2)
20520.                if ( nd_profile > 0 ) then
20519.                   $I_L20519_246 = 0
20519.                   do
20520.                      $I_L20520_218 = 0
20520. !dir$ ivdep
20520.                      do
20521.                         $k_ext_tot_cloud_WR0_R6 = ( liq_water_mass_frac(1 + $I_L20520_218, id_ct + $I_L20519_246) * 1.0/( 1.0 + radius_effect(1 + $I_L20520_218, id_ct + $I_L20519_246) * ( $SC_cloud_parameter_I2 + radius_effect(1 + $I_L20520_218, id_ct + $I_L20519_246) * ( $SC_cloud_parameter_I5 + $SC_cloud_parameter_I4 * radius_effect(1 + $I_L20520_218, id_ct + $I_L20519_246) ) ) ) * ( $SC_cloud_parameter_I1 + radius_effect(1 + $I_L20520_218, id_ct + $I_L20519_246) * ( $SC_cloud_parameter_I0 + $SC_cloud_parameter_I3 * radius_effect(1 + $I_L20520_218, id_ct + $I_L20519_246) ) ) )
20521.                         k_ext_tot_cloud(1 + $I_L20520_218, id_ct + $I_L20519_246) = $k_ext_tot_cloud_WR0_R6
20529.                         $k_ext_scat_cloud_WR0_R7 = $k_ext_tot_cloud_WR0_R6 * ( 1.0 + -( 1.0/( 1.0 + radius_effect(1 + $I_L20520_218, id_ct + $I_L20519_246) * ( $SC_cloud_parameter_I10 + $SC_cloud_parameter_I9 * radius_effect(1 + $I_L20520_218, id_ct + $I_L20519_246) ) ) * ( $SC_cloud_parameter_I8 + radius_effect(1 + $I_L20520_218, id_ct + $I_L20519_246) * ( $SC_cloud_parameter_I7 + $SC_cloud_parameter_I6 * radius_effect(1 + $I_L20520_218, id_ct + $I_L20519_246) ) ) ) )
20529.                         k_ext_scat_cloud(1 + $I_L20520_218, id_ct + $I_L20519_246) = $k_ext_scat_cloud_WR0_R7
20537.                         $asymmetry_process_WR0_R8 = ( 1.0/( 1.0 + radius_effect(1 + $I_L20520_218, id_ct + $I_L20519_246) * ( $SC_cloud_parameter_I12 + $SC_cloud_parameter_I11 * radius_effect(1 + $I_L20520_218, id_ct + $I_L20519_246) ) ) * ( $SC_cloud_parameter_I15 + radius_effect(1 + $I_L20520_218, id_ct + $I_L20519_246) * ( $SC_cloud_parameter_I14 + $SC_cloud_parameter_I13 * radius_effect(1 + $I_L20520_218, id_ct + $I_L20519_246) ) ) )
20537.                         asymmetry_process(1 + $I_L20520_218, id_ct + $I_L20519_246) = $asymmetry_process_WR0_R8
20544.                         phase_fnc_cloud(1 + $I_L20520_218, id_ct + $I_L20519_246, 1) = $k_ext_scat_cloud_WR0_R7 * $asymmetry_process_WR0_R8
20546.                         $I_L20520_218 = 1 + $I_L20520_218
20520.                         if ( $I_L20520_218 >= nd_profile ) exit
20520.                      enddo
20547.                      $I_L20519_246 = 1 + $I_L20519_246
20546.                      if ( $I_L20519_246 >= 1 + nd_layer + -id_ct ) exit
20546.                   enddo
20546.                endif
20546.             endif
20546.          endif
20557.          if ( -2 + n_order_phase >= 0 ) then
20559.             if ( nd_layer + -id_ct >= 0 ) then
20560.                if ( nd_profile > 0 ) then
20559.                   $I_L20559_287 = 0
20559.                   do
20557.                      $I_L20557_283 = 0
20557.                      do
20560.                         $I_L20560_279 = 0
20560.                         do
20559.                            $I_L20559_268 = 0
20559. !dir$ shortloop16
20559. !dir$ blocking_size( 2, 2 )
20559.                            do
20557.                               $I_L20557_289 = 0
20557. !dir$ shortloop16
20557. !dir$ blocking_size( 2, 2 )
20557.                               do
20560.                                  $I_L20560_224 = 0
20560. !dir$ ivdep
20560. !dir$ blocking_size( 256, 256 )
20560.                                  do
20561.                                     phase_fnc_cloud(1 + $I_L20560_224 + 256 * $I_L20560_279, id_ct + $I_L20559_268 + 2 * $I_L20559_287, 2 + $I_L20557_289 + 2 * $I_L20557_283) = asymmetry_process(1 + $I_L20560_224 + 256 * $I_L20560_279, id_ct + $I_L20559_268 + 2 * $I_L20559_287) * phase_fnc_cloud(1 + $I_L20560_224 + 256 * $I_L20560_279, id_ct + $I_L20559_268 + 2 * $I_L20559_287, 1 + $I_L20557_289 + 2 * $I_L20557_283)
20560.                                     $I_L20560_224 = 1 + $I_L20560_224
20560.                                     if ( $I_L20560_224 >= min( nd_profile, 256 + 256 * $I_L20560_279 ) + -256 * $I_L20560_279 ) exit
20560.                                  enddo
20557.                                  $I_L20557_289 = 1 + $I_L20557_289
20557.                                  if ( $I_L20557_289 >= min( -1 + n_order_phase, 2 + 2 * $I_L20557_283 ) + -2 * $I_L20557_283 ) exit
20557.                               enddo
20559.                               $I_L20559_268 = 1 + $I_L20559_268
20563.                               if ( $I_L20559_268 >= min( 1 + nd_layer + -id_ct, 2 + 2 * $I_L20559_287 ) + -2 * $I_L20559_287 ) exit
20563.                            enddo
20560.                            $I_L20560_279 = 1 + $I_L20560_279
20560.                            if ( $I_L20560_279 >= 1 + max( 0, -1 + _rsh( 255 + nd_profile, 8 ) ) ) exit
20560.                         enddo
20557.                         $I_L20557_283 = 1 + $I_L20557_283
20564.                         if ( $I_L20557_283 >= 1 + max( 0, -1 + _rsh( n_order_phase, 1 ) ) ) exit
20564.                      enddo
20559.                      $I_L20559_287 = 1 + $I_L20559_287
20559.                      if ( $I_L20559_287 >= 1 + max( 0, -1 + _rsh( 2 + nd_layer + -id_ct, 1 ) ) ) exit
20559.                   enddo
20559.                endif
20559.             endif
20559.          endif
20567.          if ( l_rescale /= .false. ) then
20569.             if ( nd_layer + -id_ct >= 0 ) then
20570.                if ( nd_profile > 0 ) then
20569.                   $I_L20569_252 = 0
20569.                   do
20570.                      $I_L20570_227 = 0
20570. !dir$ ivdep
20570.                      do
20571.                         forward_scatter_cloud(1 + $I_L20570_227, id_ct + $I_L20569_252) = k_ext_scat_cloud(1 + $I_L20570_227, id_ct + $I_L20569_252) * asymmetry_process(1 + $I_L20570_227, id_ct + $I_L20569_252) ** n_order_forward
20574.                         $I_L20570_227 = 1 + $I_L20570_227
20570.                         if ( $I_L20570_227 >= nd_profile ) exit
20570.                      enddo
20575.                      $I_L20569_252 = 1 + $I_L20569_252
20574.                      if ( $I_L20569_252 >= 1 + nd_layer + -id_ct ) exit
20574.                   enddo
20574.                endif
20574.             endif
20574.          endif
20579.          if ( l_solar_phf /= .false. ) then
20580.             if ( n_layer + -n_cloud_top >= 0 ) then
20582.                if ( n_direction > 0 ) then
20596.                   if ( -2 + n_order_phase_solar >= 0 ) then
20580.                      $I_L20580_277 = 0
20580. !dir$ loop_info (automatic) cache_nt( n_cloud_profile )
20580.                      do
20582.                         $SCA_n_cloud_profile_I16 = n_cloud_profile(n_cloud_top + $I_L20580_277)
20586.                         if ( $SCA_n_cloud_profile_I16 > 0 ) then
20582.                            $I_L20582_271 = 0
20582.                            do
20586.                               $I_L20586_229 = 0
20586. !dir$ ivdep
20586.                               do
20587.                                  $l_S14 = i_cloud_profile(1 + $I_L20586_229, n_cloud_top + $I_L20580_277)
20590.                                  p_legendre_ls_m1($l_S14) = 1.0
20591.                                  $SVU_P0 = cos_sol_view($l_S14, 1 + $I_L20582_271)
20591.                                  p_legendre_ls($l_S14) = $SVU_P0
20592.                                  $SVU_P1 = k_ext_scat_cloud($l_S14, n_cloud_top + $I_L20580_277) * asymmetry_process($l_S14, n_cloud_top + $I_L20580_277)
20592.                                  ks_phf($l_S14) = $SVU_P1
20593.                                  phase_fnc_solar_cloud($l_S14, n_cloud_top + $I_L20580_277, 1 + $I_L20582_271) = k_ext_scat_cloud($l_S14, n_cloud_top + $I_L20580_277) + 3.0 * $SVU_P0 * $SVU_P1
20595.                                  $I_L20586_229 = 1 + $I_L20586_229
20586.                                  if ( $I_L20586_229 >= $SCA_n_cloud_profile_I16 ) exit
20586.                               enddo
20596.                               $I_L20596_254 = 0
20596.                               do
20598.                                  $cnst1_S19 = 1.0 + -( 1.0/( real( 2 + $I_L20596_254, 8 ) ) )
20599.                                  $I_L20599_231 = 0
20599. !dir$ unroll 2
20599.                                  do
20600.                                     $l_S18 = i_cloud_profile(1 + $I_L20599_231, n_cloud_top + $I_L20580_277)
20601.                                     $SVU_P2 = p_legendre_ls($l_S18)
20602.                                     $SCF_P7 = $SVU_P2 * cos_sol_view($l_S18, 1 + $I_L20582_271) * ( 1.0 + $cnst1_S19 )
20602.                                     $SVU_P8 = $SCF_P7 + -( $cnst1_S19 * p_legendre_ls_m1($l_S18) )
20602.                                     p_legendre_ls($l_S18) = $SVU_P8
20605.                                     p_legendre_ls_m1($l_S18) = $SVU_P2
20606.                                     ks_phf($l_S18) = ks_phf($l_S18) * asymmetry_process($l_S18, n_cloud_top + $I_L20580_277)
20607.                                     phase_fnc_solar_cloud($l_S18, n_cloud_top + $I_L20580_277, 1 + $I_L20582_271) = phase_fnc_solar_cloud($l_S18, n_cloud_top + $I_L20580_277, 1 + $I_L20582_271) + ks_phf($l_S18) * $SVU_P8 * real( 5 + 2 * $I_L20596_254, 8 )
20611.                                     $I_L20599_231 = 1 + $I_L20599_231
20599.                                     if ( $I_L20599_231 >= $SCA_n_cloud_profile_I16 ) exit
20599.                                  enddo
20612.                                  $I_L20596_254 = 1 + $I_L20596_254
20611.                                  if ( $I_L20596_254 >= -1 + n_order_phase_solar ) exit
20611.                               enddo
20614.                               $I_L20582_271 = 1 + $I_L20582_271
20612.                               if ( $I_L20582_271 >= n_direction ) exit
20612.                            enddo
20612.                         endif
20618.                         if ( l_rescale /= .false. ) then
20619.                            if ( $SCA_n_cloud_profile_I16 > 0 ) then
20619.                               $I_L20619_233 = 0
20619. !dir$ ivdep
20619. !dir$ loop_info (automatic) cache_nt( ks_phf, asymmetry_process, i_cloud_profile, forward_solar_cloud )
20619.                               do
20620.                                  $l_S22 = i_cloud_profile(1 + $I_L20619_233, n_cloud_top + $I_L20580_277)
20621.                                  forward_solar_cloud($l_S22, n_cloud_top + $I_L20580_277) = ks_phf($l_S22) * asymmetry_process($l_S22, n_cloud_top + $I_L20580_277)
20623.                                  $I_L20619_233 = 1 + $I_L20619_233
20619.                                  if ( $I_L20619_233 >= $SCA_n_cloud_profile_I16 ) exit
20619.                               enddo
20619.                            endif
20619.                         endif
20626.                         $I_L20580_277 = 1 + $I_L20580_277
20624.                         if ( $I_L20580_277 >= 1 + n_layer + -n_cloud_top ) exit
20624.                      enddo
20624.                   else if ( l_rescale /= .false. ) then
20580.                      $I_L20580_273 = 0
20580. !dir$ loop_info (automatic) cache_nt( n_cloud_profile )
20580.                      do
20582.                         $SCA_n_cloud_profile_I17 = n_cloud_profile(n_cloud_top + $I_L20580_273)
20586.                         if ( $SCA_n_cloud_profile_I17 > 0 ) then
20582.                            $I_L20582_260 = 0
20582.                            do
20586.                               $I_L20586_239 = 0
20586. !dir$ ivdep
20586.                               do
20587.                                  $l_S14 = i_cloud_profile(1 + $I_L20586_239, n_cloud_top + $I_L20580_273)
20591.                                  $SVU_P3 = cos_sol_view($l_S14, 1 + $I_L20582_260)
20592.                                  $SVU_P4 = k_ext_scat_cloud($l_S14, n_cloud_top + $I_L20580_273) * asymmetry_process($l_S14, n_cloud_top + $I_L20580_273)
20592.                                  ks_phf($l_S14) = $SVU_P4
20593.                                  phase_fnc_solar_cloud($l_S14, n_cloud_top + $I_L20580_273, 1 + $I_L20582_260) = k_ext_scat_cloud($l_S14, n_cloud_top + $I_L20580_273) + 3.0 * $SVU_P3 * $SVU_P4
20595.                                  $I_L20586_239 = 1 + $I_L20586_239
20586.                                  if ( $I_L20586_239 >= $SCA_n_cloud_profile_I17 ) exit
20586.                               enddo
20614.                               $I_L20582_260 = 1 + $I_L20582_260
20612.                               if ( $I_L20582_260 >= n_direction ) exit
20612.                            enddo
20619.                            $I_L20619_241 = 0
20619. !dir$ ivdep
20619.                            do
20620.                               $l_S22 = i_cloud_profile(1 + $I_L20619_241, n_cloud_top + $I_L20580_273)
20621.                               forward_solar_cloud($l_S22, n_cloud_top + $I_L20580_273) = ks_phf($l_S22) * asymmetry_process($l_S22, n_cloud_top + $I_L20580_273)
20623.                               $I_L20619_241 = 1 + $I_L20619_241
20619.                               if ( $I_L20619_241 >= $SCA_n_cloud_profile_I17 ) exit
20619.                            enddo
20619.                         endif
20626.                         $I_L20580_273 = 1 + $I_L20580_273
20624.                         if ( $I_L20580_273 >= 1 + n_layer + -n_cloud_top ) exit
20624.                      enddo
20624.                   else
20580.                      $I_L20580_285 = 0
20580. !dir$ loop_info (automatic) cache_nt( n_cloud_profile )
20580.                      do
20582.                         $SCA_n_cloud_profile_I18 = n_cloud_profile(n_cloud_top + $I_L20580_285)
20586.                         if ( $SCA_n_cloud_profile_I18 > 0 ) then
20582.                            $I_L20582_281 = 0
20582.                            do
20586.                               $I_L20586_275 = 0
20586.                               do
20582.                                  $I_L20582_291 = 0
20582. !dir$ shortloop16
20582. !dir$ blocking_size( 2, 2 )
20582.                                  do
20586.                                     $I_L20586_243 = 0
20586. !dir$ ivdep
20586. !dir$ blocking_size( 256, 256 )
20586.                                     do
20587.                                        $l_S14 = i_cloud_profile(1 + $I_L20586_243 + 256 * $I_L20586_275, n_cloud_top + $I_L20580_285)
20591.                                        $SVU_P5 = cos_sol_view($l_S14, 1 + $I_L20582_291 + 2 * $I_L20582_281)
20592.                                        $SVU_P6 = k_ext_scat_cloud($l_S14, n_cloud_top + $I_L20580_285) * asymmetry_process($l_S14, n_cloud_top + $I_L20580_285)
20593.                                        phase_fnc_solar_cloud($l_S14, n_cloud_top + $I_L20580_285, 1 + $I_L20582_291 + 2 * $I_L20582_281) = k_ext_scat_cloud($l_S14, n_cloud_top + $I_L20580_285) + 3.0 * $SVU_P5 * $SVU_P6
20586.                                        $I_L20586_243 = 1 + $I_L20586_243
20586.                                        if ( $I_L20586_243 >= min( $SCA_n_cloud_profile_I18, 256 + 256 * $I_L20586_275 ) + -256 * $I_L20586_275 ) exit
20586.                                     enddo
20582.                                     $I_L20582_291 = 1 + $I_L20582_291
20582.                                     if ( $I_L20582_291 >= min( n_direction, 2 + 2 * $I_L20582_281 ) + -2 * $I_L20582_281 ) exit
20582.                                  enddo
20586.                                  $I_L20586_275 = 1 + $I_L20586_275
20612.                                  if ( $I_L20586_275 >= 1 + max( 0, -1 + _rsh( 255 + $SCA_n_cloud_profile_I18, 8 ) ) ) exit
20612.                               enddo
20582.                               $I_L20582_281 = 1 + $I_L20582_281
20582.                               if ( $I_L20582_281 >= 1 + max( 0, -1 + _rsh( 1 + n_direction, 1 ) ) ) exit
20582.                            enddo
20582.                         endif
20626.                         $I_L20580_285 = 1 + $I_L20580_285
20624.                         if ( $I_L20580_285 >= 1 + n_layer + -n_cloud_top ) exit
20624.                      enddo
20624.                   endif
20624.                else if ( l_rescale /= .false. ) then
20580.                   $I_L20580_258 = 0
20580.                   do
20619.                      $t_S20 = n_cloud_profile(n_cloud_top + $I_L20580_258)
20619.                      if ( $t_S20 > 0 ) then
20619.                         $I_L20619_237 = 0
20619. !dir$ ivdep
20619.                         do
20620.                            $l_S22 = i_cloud_profile(1 + $I_L20619_237, n_cloud_top + $I_L20580_258)
20621.                            forward_solar_cloud($l_S22, n_cloud_top + $I_L20580_258) = ks_phf($l_S22) * asymmetry_process($l_S22, n_cloud_top + $I_L20580_258)
20623.                            $I_L20619_237 = 1 + $I_L20619_237
20619.                            if ( $I_L20619_237 >= $t_S20 ) exit
20619.                         enddo
20619.                      endif
20626.                      $I_L20580_258 = 1 + $I_L20580_258
20624.                      if ( $I_L20580_258 >= 1 + n_layer + -n_cloud_top ) exit
20624.                   enddo
20624.                endif
20624.             endif
20624.          endif
20624.       endif
20633.       if ( i_parametrization_drop == 3 ) then
20636.          call prsc_opt_prop( ierr, n_profile, n_cloud_top, n_layer, l_rescale, n_order_forward, l_henyey_greenstein_pf, n_order_phase, p(1, 1), density(1, 1), n_opt_level_cloud_prsc, drop_pressure_prsc(1, 1), drop_absorption_prsc(1, 1), drop_scattering_prsc(1, 1), drop_phase_fnc_prsc(1, 1, 1), k_ext_tot_cloud(1, id_ct), k_ext_scat_cloud(1, id_ct), phase_fnc_cloud(1, id_ct, 1), forward_scatter_cloud(1, id_ct), forward_solar_cloud(1, id_ct), l_solar_phf, n_order_phase_solar, n_direction, cos_sol_view(1, 1), phase_fnc_solar_cloud(1, id_ct, 1), nd_profile, nd_radiance_profile, nd_layer, id_ct, nd_layer, nd_direction, nd_profile_prsc, nd_opt_level_prsc, nd_phase_term, nd_max_order )
20656.          if ( n_layer + -n_cloud_top >= 0 ) then
20656.             $I_L20656_256 = 0
20656.             do
20657.                $t_S24 = n_cloud_profile(n_cloud_top + $I_L20656_256)
20657.                if ( $t_S24 > 0 ) then
20657.                   $I_L20657_235 = 0
20657. !dir$ ivdep
20657.                   do
20658.                      $l_S26 = i_cloud_profile(1 + $I_L20657_235, n_cloud_top + $I_L20656_256)
20659.                      k_ext_tot_cloud($l_S26, n_cloud_top + $I_L20656_256) = _vu_plus( k_ext_tot_cloud($l_S26, n_cloud_top + $I_L20656_256), k_ext_scat_cloud($l_S26, n_cloud_top + $I_L20656_256) )
20661.                      $I_L20657_235 = 1 + $I_L20657_235
20657.                      if ( $I_L20657_235 >= $t_S24 ) exit
20657.                   enddo
20657.                endif
20662.                $I_L20656_256 = 1 + $I_L20656_256
20661.                if ( $I_L20656_256 >= 1 + n_layer + -n_cloud_top ) exit
20661.             enddo
20661.          endif
20661.       endif
20667.       if ( i_parametrization_drop == 1 ) then
20664.          goto 20
20667.       else if ( i_parametrization_drop == 2 ) then
20667.          goto 20
20667.       else if ( i_parametrization_drop == 3 ) then
20667.          goto 20
20667.       else if ( i_parametrization_drop /= 5 ) then
20671.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$697,  _substr(t$696,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: An invalid parametrization of cloud droplets has been selected.', 0x800600000000L ) ) )
20673.          ierr = 1
20275.          _free( t$2696 )
20275.       else
20275.    20    continue
20275.          _free( t$2696 )
20275.       endif
20681.       return
20681.       end
20681.       
20712.       
20712.       subroutine overlap_coupled( n_profile, n_layer, n_cloud_top, w_cloud, w_free, n_region, type_region, frac_region, p, i_cloud, cloud_overlap, nd_profile, nd_layer, nd_overlap_coeff, nd_region, id_ct, dp_corr_strat, dp_corr_conv )
20712.       t$699 = nd_profile
20712.       t$700 = id_ct
20712.       t$701 = nd_layer
20760.       t$2711 = _zla( 0, nd_profile )
20712.       t$2712 = _zla( 0, nd_profile )
20712.       t$2713 = 1 + nd_layer + -id_ct
20760.       t$2714 = _zla( 0, 1 + nd_layer + -id_ct )
20712.       t$2715 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
20712.       t$698 = nd_region
20755.       t$2716 = _zla( 0, nd_region )
20712.       t$2717 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
20712.       t$2718 = _zla( 0, nd_profile ) * _zla( 0, nd_region ) * _zla( 0, 1 + nd_layer + -id_ct )
20765.       t$2719 = _zla( 0, nd_layer )
20712.       t$2720 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
20712.       t$702 = ( -1 + id_ct )
20712.       t$703 = nd_overlap_coeff
20712.       t$2721 = 2 + nd_layer + -id_ct
20775.       t$2722 = _zla( 0, 2 + nd_layer + -id_ct )
20712.       t$2723 = _zla( 0, nd_profile ) * _zla( 0, 2 + nd_layer + -id_ct )
20775.       t$2724 = _zla( 0, nd_overlap_coeff )
20712.       t$2725 = _zla( 0, nd_profile ) * _zla( 0, nd_overlap_coeff ) * _zla( 0, 2 + nd_layer + -id_ct )
20712.       t$2726 = _zla( 0, nd_profile ) * _zla( 0, nd_region )
20803.       t$2729 = 8 * _zla( 0, nd_profile ) * _zla( 0, nd_region )
20712.       t$2730 = _zla( 0, nd_profile ) * _zla( 0, nd_region )
20712.       t$2731 = _zla( 0, nd_profile ) * _zla( 0, nd_region ) * _zla( 0, nd_region )
20807.       t$2732 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_region ) ) / 8
20807.       t$2734 = t$2732 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_region ) * _zla( 0, nd_region )
20813.       t$2735 = 8 * ( 7 + t$2732 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_region ) * _zla( 0, nd_region ) ) / 8
20813.       t$2737 = t$2735 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_region )
20816.       t$2738 = 8 * ( 7 + t$2735 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_region ) ) / 8
20816.       t$2740 = t$2738 + 8 * _zla( 0, nd_profile )
20810.       t$2741 = 8 * ( 7 + t$2738 + 8 * _zla( 0, nd_profile ) ) / 8
20810.       t$2743 = t$2741 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_region )
20805.       t$2744 = 8 * ( 7 + t$2741 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_region ) ) / 8
20805.       t$2746 = t$2744 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_region )
20797.       t$2747 = 8 * ( 7 + t$2744 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_region ) ) / 8
20797.       t$2749 = t$2747 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_region )
20712.       t$2727 = int( _alloc( t$2747 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_region ) ), 8 )
20803.       t$2728 = t$2727
20807.       t$2733 = t$2732 + t$2727
20813.       t$2736 = t$2735 + t$2727
20816.       t$2739 = t$2738 + t$2727
20810.       t$2742 = t$2741 + t$2727
20805.       t$2745 = t$2744 + t$2727
20797.       t$2748 = t$2747 + t$2727
20827.       if ( nd_layer > 0 ) then
20828.          if ( nd_profile > 0 ) then
20827.             $I_L20827_374 = 0
20827.             do
20828.                $I_L20828_318 = 0
20828. !dir$ ivdep
20828. !dir$ loop_info (automatic) cache_nt( w_cloud, w_free )
20828.                do
20829.                   w_free(1 + $I_L20828_318, 1 + $I_L20827_374) = 1.0 + -w_cloud(1 + $I_L20828_318, 1 + $I_L20827_374)
20830.                   $I_L20828_318 = 1 + $I_L20828_318
20828.                   if ( $I_L20828_318 >= nd_profile ) exit
20828.                enddo
20831.                $I_L20827_374 = 1 + $I_L20827_374
20830.                if ( $I_L20827_374 >= nd_layer ) exit
20830.             enddo
20830.          endif
20830.       endif
20840.       if ( n_region > 0 ) then
20842.          if ( n_profile > 0 ) then
20840.             $I_L20840_406 = 0
20840.             do
20841.                if ( type_region(1 + $I_L20840_406) == 1 ) then
20842.                   $I_L20842_366 = 0
20842. !dir$ ivdep
20842.                   do
20843.                      area_upper(1 + $I_L20842_366, 1 + $I_L20840_406) = 1.0
20844.                      $I_L20842_366 = 1 + $I_L20842_366
20842.                      if ( $I_L20842_366 >= n_profile ) exit
20842.                   enddo
20842.                else
20846.                   $I_L20846_368 = 0
20846. !dir$ ivdep
20846.                   do
20847.                      area_upper(1 + $I_L20846_368, 1 + $I_L20840_406) = 0.0
20848.                      $I_L20846_368 = 1 + $I_L20846_368
20846.                      if ( $I_L20846_368 >= n_profile ) exit
20846.                   enddo
20846.                endif
20850.                $I_L20840_406 = 1 + $I_L20840_406
20849.                if ( $I_L20840_406 >= n_region ) exit
20849.             enddo
20849.          endif
20849.       endif
20852.       if ( 1 + n_layer + -n_cloud_top >= 0 ) then
20852.          $I_L20852_422 = 0
20852.          do
20856.             if ( i_cloud == 6 .orelse. i_cloud == 2 ) then
20860.                if ( nd_region > 0 ) then
20861.                   if ( nd_profile > 0 ) then
20860.                      $I_L20860_380 = 0
20860.                      do
20861.                         $I_L20861_326 = 0
20861. !dir$ ivdep
20861.                         do
20862.                            corr_factor(1 + $I_L20861_326, 1 + $I_L20860_380) = 1.0
20863.                            $I_L20861_326 = 1 + $I_L20861_326
20861.                            if ( $I_L20861_326 >= nd_profile ) exit
20861.                         enddo
20864.                         $I_L20860_380 = 1 + $I_L20860_380
20863.                         if ( $I_L20860_380 >= nd_region ) exit
20863.                      enddo
20863.                   endif
20863.                endif
20863.             else
20866.                if ( i_cloud == 4 ) then
20869.                   if ( nd_region > 0 ) then
20870.                      if ( nd_profile > 0 ) then
20869.                         $I_L20869_378 = 0
20869.                         do
20870.                            $I_L20870_324 = 0
20870. !dir$ ivdep
20870.                            do
20871.                               corr_factor(1 + $I_L20870_324, 1 + $I_L20869_378) = 0.0
20872.                               $I_L20870_324 = 1 + $I_L20870_324
20870.                               if ( $I_L20870_324 >= nd_profile ) exit
20870.                            enddo
20873.                            $I_L20869_378 = 1 + $I_L20869_378
20872.                            if ( $I_L20869_378 >= nd_region ) exit
20872.                         enddo
20872.                      endif
20872.                   endif
20875.                else if ( i_cloud == 7 ) then
20875.                   goto 10
20875.                else if ( i_cloud == 8 ) then
20875.    10             continue
20878.                   if ( n_region > 0 ) then
20878.                      $I_L20878_376 = 0
20878.                      do
20882.                         if ( type_region(1 + $I_L20878_376) == 1 ) then
20883.                            dp_corr = 1.0
20884.                         else if ( type_region(1 + $I_L20878_376) == 2 ) then
20885.                            dp_corr = dp_corr_strat
20885.                         else if ( type_region(1 + $I_L20878_376) == 3 ) then
20887.                            dp_corr = dp_corr_conv
20887.                         endif
20890.                         if ( ( -1 + n_cloud_top + $I_L20852_422 ) >= n_layer .orelse. ( -1 + n_cloud_top + $I_L20852_422 ) <= 1 ) then
20897.                            if ( n_profile > 0 ) then
20897.                               $I_L20897_322 = 0
20897. !dir$ ivdep
20897.                               do
20898.                                  corr_factor(1 + $I_L20897_322, 1 + $I_L20878_376) = 1.0
20899.                                  $I_L20897_322 = 1 + $I_L20897_322
20897.                                  if ( $I_L20897_322 >= n_profile ) exit
20897.                               enddo
20897.                            endif
20897.                         else
20891.                            if ( n_profile > 0 ) then
20891.                               $I_L20891_320 = 0
20891. !dir$ ivdep
20891.                               do
20892.                                  corr_factor(1 + $I_L20891_320, 1 + $I_L20878_376) = _expn( ( 1.0/dp_corr * ( p(1 + $I_L20891_320, -1 + n_cloud_top + $I_L20852_422) + -p(1 + $I_L20891_320, n_cloud_top + $I_L20852_422) ) ) )
20893.                                  $I_L20891_320 = 1 + $I_L20891_320
20891.                                  if ( $I_L20891_320 >= n_profile ) exit
20891.                               enddo
20891.                            endif
20891.                         endif
20902.                         $I_L20878_376 = 1 + $I_L20878_376
20900.                         if ( $I_L20878_376 >= n_region ) exit
20900.                      enddo
20900.                   endif
20900.                endif
20900.             endif
20907.             if ( n_region > 0 ) then
20908.                if ( ( -1 + n_cloud_top + $I_L20852_422 ) < n_layer ) then
20910.                   if ( n_profile > 0 ) then
20907.                      $I_L20907_398 = 0
20907.                      do
20909.                         if ( type_region(1 + $I_L20907_398) == 1 ) then
20910.                            $I_L20910_350 = 0
20910. !dir$ ivdep
20910.                            do
20911.                               area_lower(1 + $I_L20910_350, 1 + $I_L20907_398) = w_free(1 + $I_L20910_350, n_cloud_top + $I_L20852_422)
20912.                               $I_L20910_350 = 1 + $I_L20910_350
20910.                               if ( $I_L20910_350 >= n_profile ) exit
20910.                            enddo
20910.                         else
20914.                            $I_L20914_352 = 0
20914. !dir$ ivdep
20914. !dir$ loop_info (automatic) cache_nt( frac_region )
20914.                            do
20915.                               area_lower(1 + $I_L20914_352, 1 + $I_L20907_398) = frac_region(1 + $I_L20914_352, n_cloud_top + $I_L20852_422, 1 + $I_L20907_398) * w_cloud(1 + $I_L20914_352, n_cloud_top + $I_L20852_422)
20917.                               $I_L20914_352 = 1 + $I_L20914_352
20914.                               if ( $I_L20914_352 >= n_profile ) exit
20914.                            enddo
20914.                         endif
20938.                         $I_L20938_354 = 0
20938. !dir$ ivdep
20938.                         do
20939.                            area_overlap(1 + $I_L20938_354, 1 + $I_L20907_398, 1 + $I_L20907_398) = corr_factor(1 + $I_L20938_354, 1 + $I_L20907_398) * min( area_upper(1 + $I_L20938_354, 1 + $I_L20907_398), area_lower(1 + $I_L20938_354, 1 + $I_L20907_398) )
20941.                            $I_L20938_354 = 1 + $I_L20938_354
20938.                            if ( $I_L20938_354 >= n_profile ) exit
20938.                         enddo
20943.                         $I_L20907_398 = 1 + $I_L20907_398
20941.                         if ( $I_L20907_398 >= n_region ) exit
20941.                      enddo
20941.                   endif
20941.                else if ( n_profile > 0 ) then
20907.                   $I_L20907_404 = 0
20907.                   do
20922.                      if ( type_region(1 + $I_L20907_404) == 1 ) then
20923.                         $I_L20923_360 = 0
20923. !dir$ ivdep
20923.                         do
20924.                            area_lower(1 + $I_L20923_360, 1 + $I_L20907_404) = 1.0
20925.                            $I_L20923_360 = 1 + $I_L20923_360
20923.                            if ( $I_L20923_360 >= n_profile ) exit
20923.                         enddo
20923.                      else
20927.                         $I_L20927_362 = 0
20927. !dir$ ivdep
20927.                         do
20928.                            area_lower(1 + $I_L20927_362, 1 + $I_L20907_404) = 0.0
20929.                            $I_L20927_362 = 1 + $I_L20927_362
20927.                            if ( $I_L20927_362 >= n_profile ) exit
20927.                         enddo
20927.                      endif
20938.                      $I_L20938_364 = 0
20938. !dir$ ivdep
20938.                      do
20939.                         area_overlap(1 + $I_L20938_364, 1 + $I_L20907_404, 1 + $I_L20907_404) = corr_factor(1 + $I_L20938_364, 1 + $I_L20907_404) * min( area_upper(1 + $I_L20938_364, 1 + $I_L20907_404), area_lower(1 + $I_L20938_364, 1 + $I_L20907_404) )
20941.                         $I_L20938_364 = 1 + $I_L20938_364
20938.                         if ( $I_L20938_364 >= n_profile ) exit
20938.                      enddo
20943.                      $I_L20907_404 = 1 + $I_L20907_404
20941.                      if ( $I_L20907_404 >= n_region ) exit
20941.                   enddo
20941.                endif
20950.                if ( n_profile > 0 ) then
20955.                   if ( 1 < n_region ) then
20948.                      $I_L20948_418 = 0
20948.                      do
20949.                         $I_L20949_400 = 0
20949.                         do
20950.                            $I_L20950_356 = 0
20950. !dir$ ivdep
20950.                            do
20951.                               area_overlap(1 + $I_L20950_356, 2 + $I_L20948_418, 1 + $I_L20949_400) = 0.0
20953.                               $I_L20950_356 = 1 + $I_L20950_356
20950.                               if ( $I_L20950_356 >= n_profile ) exit
20950.                            enddo
20954.                            $I_L20949_400 = 1 + $I_L20949_400
20953.                            if ( $I_L20949_400 >= 1 + $I_L20948_418 ) exit
20953.                         enddo
20955.                         $I_L20948_418 = 1 + $I_L20948_418
20954.                         if ( $I_L20948_418 >= -1 + n_region ) exit
20954.                      enddo
20948.                      $I_L20948_420 = 0
20948.                      do
20949.                         $I_L20949_402 = 0
20949.                         do
20950.                            $I_L20950_358 = 0
20950. !dir$ ivdep
20950.                            do
20952.                               area_overlap(1 + $I_L20950_358, 1 + $I_L20949_402, 2 + $I_L20948_420) = 0.0
20953.                               $I_L20950_358 = 1 + $I_L20950_358
20950.                               if ( $I_L20950_358 >= n_profile ) exit
20950.                            enddo
20954.                            $I_L20949_402 = 1 + $I_L20949_402
20953.                            if ( $I_L20949_402 >= 1 + $I_L20948_420 ) exit
20953.                         enddo
20955.                         $I_L20948_420 = 1 + $I_L20948_420
20954.                         if ( $I_L20948_420 >= -1 + n_region ) exit
20954.                      enddo
20954.                   endif
20954.                endif
20954.             endif
20957.             if ( n_profile > 0 ) then
20957.                $I_L20957_328 = 0
20957. !dir$ ivdep
20957.                do
20958.                   area_random_tot(1 + $I_L20957_328) = 1.0 + -area_overlap(1 + $I_L20957_328, 1, 1)
20959.                   $I_L20957_328 = 1 + $I_L20957_328
20957.                   if ( $I_L20957_328 >= n_profile ) exit
20957.                enddo
20957.             endif
20960.             if ( -2 + n_region >= 0 ) then
20961.                if ( n_profile > 0 ) then
20960.                   $SI_L20960_382_G7 = 0
20960.                   do
20961.                      $SI_L20961_330_G10 = 0
20961.                      do
20960.                         $I_L20960_430 = 0
20960. !dir$ shortloop16
20960. !dir$ blocking_size( 4, 4 )
20960.                         do
20961.                            $I_L20961_424 = 0
20961. !dir$ ivdep
20961. !dir$ blocking_size( 256, 256 )
20961.                            do
20962.                               area_random_tot(1 + $I_L20961_424 + 256 * $SI_L20961_330_G10) = area_random_tot(1 + $I_L20961_424 + 256 * $SI_L20961_330_G10) + -area_overlap(1 + $I_L20961_424 + 256 * $SI_L20961_330_G10, 2 + $I_L20960_430 + 4 * $SI_L20960_382_G7, 2 + $I_L20960_430 + 4 * $SI_L20960_382_G7)
20961.                               $I_L20961_424 = 1 + $I_L20961_424
20961.                               if ( $I_L20961_424 >= min( n_profile, 256 + 256 * $SI_L20961_330_G10 ) + -256 * $SI_L20961_330_G10 ) exit
20961.                            enddo
20960.                            $I_L20960_430 = 1 + $I_L20960_430
20960.                            if ( $I_L20960_430 >= min( -1 + n_region, 4 + 4 * $SI_L20960_382_G7 ) + -4 * $SI_L20960_382_G7 ) exit
20960.                         enddo
20961.                         $SI_L20961_330_G10 = 1 + $SI_L20961_330_G10
20963.                         if ( $SI_L20961_330_G10 >= _rsh( 255 + n_profile, 8 ) ) exit
20963.                      enddo
20960.                      $SI_L20960_382_G7 = 1 + $SI_L20960_382_G7
20960.                      if ( $SI_L20960_382_G7 >= _rsh( 2 + n_region, 2 ) ) exit
20960.                   enddo
20960.                endif
20960.             endif
20966.             if ( nd_region > 0 ) then
20967.                if ( nd_profile > 0 ) then
20966.                   $I_L20966_384 = 0
20966.                   do
20967.                      $I_L20967_332 = 0
20967. !dir$ ivdep
20967.                      do
20968.                         area_random_upper(1 + $I_L20967_332, 1 + $I_L20966_384) = area_upper(1 + $I_L20967_332, 1 + $I_L20966_384) + -area_overlap(1 + $I_L20967_332, 1 + $I_L20966_384, 1 + $I_L20966_384)
20970.                         area_random_lower(1 + $I_L20967_332, 1 + $I_L20966_384) = area_lower(1 + $I_L20967_332, 1 + $I_L20966_384) + -area_overlap(1 + $I_L20967_332, 1 + $I_L20966_384, 1 + $I_L20966_384)
20972.                         $I_L20967_332 = 1 + $I_L20967_332
20967.                         if ( $I_L20967_332 >= nd_profile ) exit
20967.                      enddo
20973.                      $I_L20966_384 = 1 + $I_L20966_384
20972.                      if ( $I_L20966_384 >= nd_region ) exit
20972.                   enddo
20985.                   $SI_L20985_408_G13 = 0
20985.                   do
20986.                      $SI_L20986_386_G16 = 0
20986.                      do
20987.                         $SI_L20987_334_G19 = 0
20987.                         do
20985.                            $I_L20985_436 = 0
20985. !dir$ shortloop16
20985. !dir$ blocking_size( 4, 4 )
20985.                            do
20986.                               $I_L20986_433 = 0
20986. !dir$ shortloop16
20986. !dir$ blocking_size( 8, 8 )
20986.                               do
20987.                                  $I_L20987_427 = 0
20987. !dir$ ivdep
20987. !dir$ loop_info (automatic) cache_nt( area_overlap )
20987. !dir$ blocking_size( 256, 256 )
20987.                                  do
20988.                                     if ( area_random_tot(1 + $I_L20987_427 + 256 * $SI_L20987_334_G19) > 2.2204460492503131e-14 ) then
20989.                                        area_overlap(1 + $I_L20987_427 + 256 * $SI_L20987_334_G19, 1 + $I_L20985_436 + 4 * $SI_L20985_408_G13, 1 + $I_L20986_433 + 8 * $SI_L20986_386_G16) = area_overlap(1 + $I_L20987_427 + 256 * $SI_L20987_334_G19, 1 + $I_L20985_436 + 4 * $SI_L20985_408_G13, 1 + $I_L20986_433 + 8 * $SI_L20986_386_G16) + ( area_random_lower(1 + $I_L20987_427 + 256 * $SI_L20987_334_G19, 1 + $I_L20986_433 + 8 * $SI_L20986_386_G16) * area_random_upper(1 + $I_L20987_427 + 256 * $SI_L20987_334_G19, 1 + $I_L20985_436 + 4 * $SI_L20985_408_G13) * 1.0/area_random_tot(1 + $I_L20987_427 + 256 * $SI_L20987_334_G19) )
20989.                                     endif
20987.                                     $I_L20987_427 = 1 + $I_L20987_427
20992.                                     if ( $I_L20987_427 >= min( nd_profile, 256 + 256 * $SI_L20987_334_G19 ) + -256 * $SI_L20987_334_G19 ) exit
20992.                                  enddo
20986.                                  $I_L20986_433 = 1 + $I_L20986_433
20986.                                  if ( $I_L20986_433 >= min( nd_region, 8 + 8 * $SI_L20986_386_G16 ) + -8 * $SI_L20986_386_G16 ) exit
20986.                               enddo
20985.                               $I_L20985_436 = 1 + $I_L20985_436
20993.                               if ( $I_L20985_436 >= min( nd_region, 4 + 4 * $SI_L20985_408_G13 ) + -4 * $SI_L20985_408_G13 ) exit
20993.                            enddo
20987.                            $SI_L20987_334_G19 = 1 + $SI_L20987_334_G19
20987.                            if ( $SI_L20987_334_G19 >= _rsh( 255 + nd_profile, 8 ) ) exit
20987.                         enddo
20986.                         $SI_L20986_386_G16 = 1 + $SI_L20986_386_G16
20994.                         if ( $SI_L20986_386_G16 >= _rsh( 7 + nd_region, 3 ) ) exit
20994.                      enddo
20985.                      $SI_L20985_408_G13 = 1 + $SI_L20985_408_G13
20985.                      if ( $SI_L20985_408_G13 >= _rsh( 3 + nd_region, 2 ) ) exit
20985.                   enddo
21006.                   $I_L21006_372 = 0
21006. !dir$ ivdep
21006.                   do
21007.                      cloud_overlap(1 + $I_L21006_372, -1 + n_cloud_top + $I_L20852_422, 1) = 1.0
21008.                      $I_L21006_372 = 1 + $I_L21006_372
21006.                      if ( $I_L21006_372 >= nd_profile ) exit
21006.                   enddo
21006.                endif
21015.                if ( 1 < nd_region ) then
21006.                   if ( nd_profile > 0 ) then
21005.                      $I_L21005_410 = 0
21005.                      do
21006.                         $I_L21006_336 = 0
21006. !dir$ ivdep
21006.                         do
21007.                            cloud_overlap(1 + $I_L21006_336, -1 + n_cloud_top + $I_L20852_422, 2 + n_region + $I_L21005_410 + n_region * $I_L21005_410) = 1.0
21008.                            $I_L21006_336 = 1 + $I_L21006_336
21006.                            if ( $I_L21006_336 >= nd_profile ) exit
21006.                         enddo
21009.                         $I_L21009_388 = 0
21009.                         do
21010.                            $I_L21010_338 = 0
21010. !dir$ ivdep
21010.                            do
21011.                               cloud_overlap(1 + $I_L21010_338, -1 + n_cloud_top + $I_L20852_422, 2 + $I_L21005_410 + n_region * $I_L21009_388) = 0.0
21012.                               cloud_overlap(1 + $I_L21010_338, -1 + n_cloud_top + $I_L20852_422, 1 + n_region + $I_L21009_388 + n_region * $I_L21005_410) = 0.0
21013.                               $I_L21010_338 = 1 + $I_L21010_338
21010.                               if ( $I_L21010_338 >= nd_profile ) exit
21010.                            enddo
21014.                            $I_L21009_388 = 1 + $I_L21009_388
21013.                            if ( $I_L21009_388 >= 1 + $I_L21005_410 ) exit
21013.                         enddo
21015.                         $I_L21005_410 = 1 + $I_L21005_410
21014.                         if ( $I_L21005_410 >= -1 + nd_region ) exit
21014.                      enddo
21014.                   endif
21014.                endif
21019.                if ( nd_profile > 0 ) then
21018.                   $I_L21018_412 = 0
21018.                   do
21019.                      $I_L21019_390 = 0
21019.                      do
21020.                         if ( area_upper(1 + $I_L21019_390, 1 + $I_L21018_412) > 2.2204460492503131e-14 ) then
21022.                            $SC_area_upper_I0 = area_upper(1 + $I_L21019_390, 1 + $I_L21018_412)
21021.                            $I_L21021_340 = 0
21021. !dir$ ivdep
21021.                            do
21022.                               cloud_overlap(1 + $I_L21019_390, -1 + n_cloud_top + $I_L20852_422, 1 + $I_L21018_412 + n_region * $I_L21021_340) = ( area_overlap(1 + $I_L21019_390, 1 + $I_L21018_412, 1 + $I_L21021_340) * 1.0/$SC_area_upper_I0 )
21024.                               $I_L21021_340 = 1 + $I_L21021_340
21021.                               if ( $I_L21021_340 >= nd_region ) exit
21021.                            enddo
21021.                         endif
21026.                         $I_L21019_390 = 1 + $I_L21019_390
21025.                         if ( $I_L21019_390 >= nd_profile ) exit
21025.                      enddo
21027.                      $I_L21018_412 = 1 + $I_L21018_412
21026.                      if ( $I_L21018_412 >= nd_region ) exit
21026.                   enddo
21026.                endif
21026.             endif
21034.             if ( n_region > 0 ) then
21035.                if ( n_profile > 0 ) then
21035.                   $I_L21035_370 = 0
21035. !dir$ ivdep
21035.                   do
21036.                      cloud_overlap(1 + $I_L21035_370, -1 + n_cloud_top + $I_L20852_422, 1 + n_region * n_region) = 1.0
21038.                      $I_L21035_370 = 1 + $I_L21035_370
21035.                      if ( $I_L21035_370 >= n_profile ) exit
21035.                   enddo
21035.                endif
21047.                if ( 1 < n_region ) then
21035.                   if ( n_profile > 0 ) then
21034.                      $I_L21034_414 = 0
21034.                      do
21035.                         $I_L21035_342 = 0
21035. !dir$ ivdep
21035.                         do
21036.                            cloud_overlap(1 + $I_L21035_342, -1 + n_cloud_top + $I_L20852_422, 2 + n_region + $I_L21034_414 + n_region * n_region + n_region * $I_L21034_414) = 1.0
21038.                            $I_L21035_342 = 1 + $I_L21035_342
21035.                            if ( $I_L21035_342 >= n_profile ) exit
21035.                         enddo
21039.                         $I_L21039_392 = 0
21039.                         do
21040.                            $I_L21040_344 = 0
21040. !dir$ ivdep
21040.                            do
21041.                               cloud_overlap(1 + $I_L21040_344, -1 + n_cloud_top + $I_L20852_422, 2 + $I_L21034_414 + n_region * n_region + n_region * $I_L21039_392) = 0.0
21043.                               cloud_overlap(1 + $I_L21040_344, -1 + n_cloud_top + $I_L20852_422, 1 + n_region + $I_L21039_392 + n_region * n_region + n_region * $I_L21034_414) = 0.0
21045.                               $I_L21040_344 = 1 + $I_L21040_344
21040.                               if ( $I_L21040_344 >= n_profile ) exit
21040.                            enddo
21046.                            $I_L21039_392 = 1 + $I_L21039_392
21045.                            if ( $I_L21039_392 >= 1 + $I_L21034_414 ) exit
21045.                         enddo
21047.                         $I_L21034_414 = 1 + $I_L21034_414
21046.                         if ( $I_L21034_414 >= -1 + n_region ) exit
21046.                      enddo
21046.                   endif
21046.                endif
21050.                if ( n_profile > 0 ) then
21049.                   $I_L21049_416 = 0
21049.                   do
21050.                      $I_L21050_394 = 0
21050.                      do
21051.                         if ( area_lower(1 + $I_L21050_394, 1 + $I_L21049_416) > 2.2204460492503131e-14 ) then
21053.                            $SC_area_lower_I1 = area_lower(1 + $I_L21050_394, 1 + $I_L21049_416)
21052.                            $I_L21052_346 = 0
21052. !dir$ ivdep
21052.                            do
21053.                               cloud_overlap(1 + $I_L21050_394, -1 + n_cloud_top + $I_L20852_422, 1 + $I_L21049_416 + n_region * n_region + n_region * $I_L21052_346) = ( area_overlap(1 + $I_L21050_394, 1 + $I_L21052_346, 1 + $I_L21049_416) * 1.0/$SC_area_lower_I1 )
21055.                               $I_L21052_346 = 1 + $I_L21052_346
21052.                               if ( $I_L21052_346 >= n_region ) exit
21052.                            enddo
21052.                         endif
21057.                         $I_L21050_394 = 1 + $I_L21050_394
21056.                         if ( $I_L21050_394 >= n_profile ) exit
21056.                      enddo
21058.                      $I_L21049_416 = 1 + $I_L21049_416
21057.                      if ( $I_L21049_416 >= n_region ) exit
21057.                   enddo
21057.                endif
21057.             endif
21063.             if ( ( -1 + n_cloud_top + $I_L20852_422 ) < n_layer ) then
21064.                if ( n_region > 0 ) then
21065.                   if ( n_profile > 0 ) then
21064.                      $I_L21064_396 = 0
21064.                      do
21065.                         $I_L21065_348 = 0
21065. !dir$ ivdep
21065.                         do
21066.                            area_upper(1 + $I_L21065_348, 1 + $I_L21064_396) = area_lower(1 + $I_L21065_348, 1 + $I_L21064_396)
21067.                            $I_L21065_348 = 1 + $I_L21065_348
21065.                            if ( $I_L21065_348 >= n_profile ) exit
21065.                         enddo
21068.                         $I_L21064_396 = 1 + $I_L21064_396
21067.                         if ( $I_L21064_396 >= n_region ) exit
21067.                      enddo
21067.                   endif
21067.                endif
21067.             endif
21071.             $I_L20852_422 = 1 + $I_L20852_422
21069.             if ( $I_L20852_422 >= 2 + n_layer + -n_cloud_top ) exit
21069.          enddo
21069.       endif
20712.       _free( t$2727 )
21076.       return
21076.       end
21076.       
21099.       
21099.       subroutine prsc_gather_spline( ierr, n_profile, i_first_layer, i_last_layer, p_eval, n_opt_level_prsc, prsc_pressure, prsc_opt_property, opt_property, nd_profile, nd_layer, id_1, id_2, nd_profile_prsc, nd_opt_level_prsc )
21099.       t$706 = nd_profile
21099.       t$707 = nd_layer
21155.       t$2750 = _zla( 0, nd_profile )
21099.       t$2751 = _zla( 0, nd_profile )
21155.       t$2752 = _zla( 0, nd_layer )
21099.       t$2753 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
21099.       t$704 = nd_profile_prsc
21099.       t$705 = nd_opt_level_prsc
21151.       t$2754 = _zla( 0, nd_profile_prsc )
21099.       t$2755 = _zla( 0, nd_profile_prsc )
21151.       t$2756 = _zla( 0, nd_opt_level_prsc )
21099.       t$2757 = _zla( 0, nd_profile_prsc ) * _zla( 0, nd_opt_level_prsc )
21099.       t$708 = id_1
21099.       t$709 = id_2
21099.       t$2758 = 1 + id_2 + -id_1
21159.       t$2759 = _zla( 0, 1 + id_2 + -id_1 )
21099.       t$2760 = _zla( 0, nd_profile ) * _zla( 0, 1 + id_2 + -id_1 )
21175.       t$2763 = 8 * _zla( 0, nd_opt_level_prsc )
21172.       t$2764 = 8 * ( 7 + 8 * _zla( 0, nd_opt_level_prsc ) ) / 8
21172.       t$2766 = t$2764 + 8 * _zla( 0, nd_opt_level_prsc )
21169.       t$2767 = 8 * ( 7 + t$2764 + 8 * _zla( 0, nd_opt_level_prsc ) ) / 8
21169.       t$2769 = t$2767 + 8 * _zla( 0, nd_opt_level_prsc )
21177.       t$2770 = 8 * ( 7 + t$2767 + 8 * _zla( 0, nd_opt_level_prsc ) ) / 8
21177.       t$2772 = t$2770 + 8 * _zla( 0, nd_opt_level_prsc )
21099.       t$2761 = int( _alloc( t$2770 + 8 * _zla( 0, nd_opt_level_prsc ) ), 8 )
21175.       t$2762 = t$2761
21172.       t$2765 = t$2764 + t$2761
21169.       t$2768 = t$2767 + t$2761
21177.       t$2771 = t$2770 + t$2761
21187.       if ( n_profile > 0 ) then
21187.          $I_L21187_50 = 0
21187.          do
21193.             if ( n_opt_level_prsc > 0 ) then
21193.                $I_L21193_40 = 0
21193. !dir$ ivdep
21193.                do
21194.                   prsc_pressure_g(1 + $I_L21193_40) = prsc_pressure(1 + $I_L21187_50, 1 + $I_L21193_40)
21195.                   prsc_opt_property_g(1 + $I_L21193_40) = prsc_opt_property(1 + $I_L21187_50, 1 + $I_L21193_40)
21196.                   $I_L21193_40 = 1 + $I_L21193_40
21193.                   if ( $I_L21193_40 >= n_opt_level_prsc ) exit
21193.                enddo
21193.             endif
21199.             t$950 = n_opt_level_prsc
21199.             t$4077 = max( 0, n_opt_level_prsc )
21199.             if ( n_opt_level_prsc /= 1 ) then
21199.                d2(1) = 0.0
21199.                work(1) = 0.0
21199.                if ( -3 + n_opt_level_prsc >= 0 ) then
21199.                   $d2_WR0_R0 = 0.0
21199.                   $work_WR0_R1 = 0.0
21199.                   $I_L21199_42 = 0
21199. !dir$ unroll 2
21199.                   do
21199.                      $sigma_S3 = ( ( prsc_pressure_g(2 + $I_L21199_42) + -prsc_pressure_g(1 + $I_L21199_42) ) * 1.0/( prsc_pressure_g(3 + $I_L21199_42) + -prsc_pressure_g(1 + $I_L21199_42) ) )
21199.                      d2(2 + $I_L21199_42) = ( ( -1.0 + $sigma_S3 ) * 1.0/( 2.0 + $sigma_S3 * $d2_WR0_R0 ) )
21199.                      $SCF_P0 = ( 6.0 * 1.0/( prsc_pressure_g(3 + $I_L21199_42) + -prsc_pressure_g(1 + $I_L21199_42) ) * ( -( 1.0/( prsc_pressure_g(2 + $I_L21199_42) + -prsc_pressure_g(1 + $I_L21199_42) ) * ( prsc_opt_property_g(2 + $I_L21199_42) + -prsc_opt_property_g(1 + $I_L21199_42) ) ) + ( 1.0/( prsc_pressure_g(3 + $I_L21199_42) + -prsc_pressure_g(2 + $I_L21199_42) ) * ( prsc_opt_property_g(3 + $I_L21199_42) + -prsc_opt_property_g(2 + $I_L21199_42) ) ) ) )
21199.                      $work_WR0_R1 = ( ( $SCF_P0 + -( $sigma_S3 * $work_WR0_R1 ) ) * 1.0/( 2.0 + $sigma_S3 * $d2_WR0_R0 ) )
21199.                      work(2 + $I_L21199_42) = $work_WR0_R1
21199.                      $d2_WR0_R0 = ( ( -1.0 + $sigma_S3 ) * 1.0/( 2.0 + $sigma_S3 * $d2_WR0_R0 ) )
21199.                      $I_L21199_42 = 1 + $I_L21199_42
21199.                      if ( $I_L21199_42 >= -2 + n_opt_level_prsc ) exit
21199.                   enddo
21199.                endif
21199.                d2(n_opt_level_prsc) = 0.0
21199.                if ( 1 + -n_opt_level_prsc < 0 ) then
21199.                   $d2_WR0_R2 = 0.0
21199.                   $I_L21199_44 = 0
21199. !dir$ unroll 4
21199.                   do
21199.                      $d2_WR0_R2 = work(-1 + n_opt_level_prsc + -$I_L21199_44) + $d2_WR0_R2 * d2(-1 + n_opt_level_prsc + -$I_L21199_44)
21199.                      d2(-1 + n_opt_level_prsc + -$I_L21199_44) = $d2_WR0_R2
21199.                      $I_L21199_44 = 1 + $I_L21199_44
21199.                      if ( $I_L21199_44 >= -1 + n_opt_level_prsc ) exit
21199.                   enddo
21199.                endif
21199.             endif
21202.             if ( i_last_layer + -i_first_layer < 0 ) then
21222.                $I_L21187_50 = 1 + $I_L21187_50
21220.             else if ( n_opt_level_prsc == 1 ) then
21220.             else
21220.             endif
21220.             if ( $I_L21187_50 >= n_profile ) exit
21220.          enddo
21220.          goto 10
21220.       else
21220.    10    continue
21099.          _free( t$2761 )
21099.       endif
21227.       return
21227.       end
21227.       
21248.       
21248.       subroutine prsc_opt_prop( ierr, n_profile, i_first_layer, i_last_layer, l_rescale, n_order_forward, l_henyey_greenstein_pf, n_order_phase, p, density, n_opt_level_prsc, prsc_pressure, prsc_absorption, prsc_scattering, prsc_phase_fnc, k_ext_tot, k_ext_scat, phase_fnc, forward_scatter, forward_solar, l_solar_phf, n_order_phase_solar, n_direction, mu_v, phase_fnc_solar, nd_profile, nd_radiance_profile, nd_layer, id_1, id_2, nd_direction, nd_profile_prsc, nd_opt_level_prsc, nd_phase_term, nd_max_order )
21248.       t$710 = nd_profile
21248.       t$711 = nd_layer
21329.       t$2773 = _zla( 0, nd_profile )
21248.       t$2774 = _zla( 0, nd_profile )
21329.       t$2775 = _zla( 0, nd_layer )
21248.       t$2776 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
21248.       t$713 = nd_opt_level_prsc
21340.       t$2777 = _zla( 0, nd_opt_level_prsc )
21248.       t$714 = nd_profile_prsc
21342.       t$2778 = _zla( 0, nd_profile_prsc )
21248.       t$2779 = _zla( 0, nd_profile_prsc )
21248.       t$2780 = _zla( 0, nd_opt_level_prsc ) * _zla( 0, nd_profile_prsc )
21248.       t$715 = nd_phase_term
21248.       t$2781 = _zla( 0, nd_opt_level_prsc ) * _zla( 0, nd_profile_prsc )
21346.       t$2782 = _zla( 0, nd_phase_term )
21248.       t$2783 = _zla( 0, nd_opt_level_prsc ) * _zla( 0, nd_profile_prsc ) * _zla( 0, nd_phase_term )
21248.       t$716 = id_1
21248.       t$717 = id_2
21248.       t$2784 = 1 + id_2 + -id_1
21352.       t$2785 = _zla( 0, 1 + id_2 + -id_1 )
21248.       t$2786 = _zla( 0, nd_profile ) * _zla( 0, 1 + id_2 + -id_1 )
21248.       t$718 = nd_max_order
21248.       t$2787 = _zla( 0, nd_profile ) * _zla( 0, 1 + id_2 + -id_1 )
21356.       t$2788 = _zla( 0, nd_max_order )
21248.       t$2789 = _zla( 0, nd_profile ) * _zla( 0, nd_max_order ) * _zla( 0, 1 + id_2 + -id_1 )
21248.       t$712 = nd_direction
21333.       t$2790 = _zla( 0, nd_direction )
21248.       t$2791 = _zla( 0, nd_profile ) * _zla( 0, nd_direction )
21248.       t$719 = nd_radiance_profile
21365.       t$2792 = _zla( 0, nd_radiance_profile )
21248.       t$2793 = _zla( 0, nd_radiance_profile )
21248.       t$2794 = _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + id_2 + -id_1 )
21248.       t$2795 = _zla( 0, nd_direction ) * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + id_2 + -id_1 )
21397.       t$2798 = 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_2 + -id_1 )
21399.       t$2799 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_2 + -id_1 ) ) / 8
21399.       t$2801 = t$2799 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_2 + -id_1 )
21388.       t$2802 = 8 * ( 7 + t$2799 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_2 + -id_1 ) ) / 8
21388.       t$2804 = t$2802 + 8 * _zla( 0, nd_profile )
21390.       t$2805 = 8 * ( 7 + t$2802 + 8 * _zla( 0, nd_profile ) ) / 8
21390.       t$2807 = t$2805 + 8 * _zla( 0, nd_profile )
21392.       t$2808 = 8 * ( 7 + t$2805 + 8 * _zla( 0, nd_profile ) ) / 8
21392.       t$2810 = t$2808 + 8 * _zla( 0, nd_profile )
21248.       t$2796 = int( _alloc( t$2808 + 8 * _zla( 0, nd_profile ) ), 8 )
21397.       t$2797 = t$2796
21399.       t$2800 = t$2799 + t$2796
21388.       t$2803 = t$2802 + t$2796
21390.       t$2806 = t$2805 + t$2796
21392.       t$2809 = t$2808 + t$2796
21411.       tm$2259 = loc( prsc_pressure(1) )
21411.       prsc_pressure = _copyin( prsc_pressure(1) )
21411.       t$706 = nd_profile
21411.       t$707 = nd_layer
21411.       t$2750 = _zla( 0, nd_profile )
21411.       t$2751 = _zla( 0, nd_profile )
21411.       t$2752 = _zla( 0, nd_layer )
21411.       t$2753 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
21411.       t$704 = nd_profile_prsc
21411.       t$705 = nd_opt_level_prsc
21411.       t$2754 = _zla( 0, nd_profile_prsc )
21411.       t$2755 = _zla( 0, nd_profile_prsc )
21411.       t$2756 = _zla( 0, nd_opt_level_prsc )
21411.       t$2757 = _zla( 0, nd_opt_level_prsc ) * _zla( 0, nd_profile_prsc )
21411.       t$708 = id_1
21411.       t$709 = id_2
21411.       t$2758 = 1 + id_2 + -id_1
21411.       t$2759 = _zla( 0, 1 + id_2 + -id_1 )
21411.       t$2760 = _zla( 0, nd_profile ) * _zla( 0, 1 + id_2 + -id_1 )
21411.       t$2763 = 8 * _zla( 0, nd_opt_level_prsc )
21411.       t$2764 = 8 * ( 7 + 8 * _zla( 0, nd_opt_level_prsc ) ) / 8
21411.       t$2766 = t$2764 + 8 * _zla( 0, nd_opt_level_prsc )
21411.       t$2767 = 8 * ( 7 + t$2764 + 8 * _zla( 0, nd_opt_level_prsc ) ) / 8
21411.       t$2769 = t$2767 + 8 * _zla( 0, nd_opt_level_prsc )
21411.       t$2770 = 8 * ( 7 + t$2767 + 8 * _zla( 0, nd_opt_level_prsc ) ) / 8
21411.       t$2772 = t$2770 + 8 * _zla( 0, nd_opt_level_prsc )
21411.       t$2761 = int( _alloc( t$2770 + 8 * _zla( 0, nd_opt_level_prsc ) ), 8 )
21411.       t$2762 = t$2761
21411.       t$2765 = t$2764 + t$2761
21411.       t$2768 = t$2767 + t$2761
21411.       t$2771 = t$2770 + t$2761
21411.       if ( n_profile > 0 ) then
21411.          $I_L21411_778 = 0
21411.          do
21411.             if ( n_opt_level_prsc > 0 ) then
21411.                $I_L21411_642 = 0
21411. !dir$ ivdep
21411.                do
21411.                   prsc_pressure_g(1 + $I_L21411_642) = prsc_pressure(1 + $I_L21411_778, 1 + $I_L21411_642)
21411.                   prsc_opt_property_g(1 + $I_L21411_642) = prsc_absorption(1 + $I_L21411_778, 1 + $I_L21411_642)
21411.                   $I_L21411_642 = 1 + $I_L21411_642
21411.                   if ( $I_L21411_642 >= n_opt_level_prsc ) exit
21411.                enddo
21411.             endif
21411.             t$950 = n_opt_level_prsc
21411.             t$4077 = max( 0, n_opt_level_prsc )
21411.             if ( n_opt_level_prsc /= 1 ) then
21411.                d2(1) = 0.0
21411.                work(1) = 0.0
21411.                if ( -3 + n_opt_level_prsc >= 0 ) then
21411.                   $d2_WR0_R0 = 0.0
21411.                   $work_WR0_R1 = 0.0
21411.                   $I_L21411_644 = 0
21411. !dir$ unroll 2
21411.                   do
21411.                      $sigma_S3 = ( 1.0/( prsc_pressure_g(3 + $I_L21411_644) + -prsc_pressure_g(1 + $I_L21411_644) ) * ( prsc_pressure_g(2 + $I_L21411_644) + -prsc_pressure_g(1 + $I_L21411_644) ) )
21411.                      d2(2 + $I_L21411_644) = ( ( -1.0 + $sigma_S3 ) * 1.0/( 2.0 + $sigma_S3 * $d2_WR0_R0 ) )
21411.                      $SCF_P0 = ( 6.0 * 1.0/( prsc_pressure_g(3 + $I_L21411_644) + -prsc_pressure_g(1 + $I_L21411_644) ) * ( ( ( prsc_opt_property_g(3 + $I_L21411_644) + -prsc_opt_property_g(2 + $I_L21411_644) ) * 1.0/( prsc_pressure_g(3 + $I_L21411_644) + -prsc_pressure_g(2 + $I_L21411_644) ) ) + -( ( prsc_opt_property_g(2 + $I_L21411_644) + -prsc_opt_property_g(1 + $I_L21411_644) ) * 1.0/( prsc_pressure_g(2 + $I_L21411_644) + -prsc_pressure_g(1 + $I_L21411_644) ) ) ) )
21411.                      $work_WR0_R1 = ( ( $SCF_P0 + -( $sigma_S3 * $work_WR0_R1 ) ) * 1.0/( 2.0 + $sigma_S3 * $d2_WR0_R0 ) )
21411.                      work(2 + $I_L21411_644) = $work_WR0_R1
21411.                      $d2_WR0_R0 = ( ( -1.0 + $sigma_S3 ) * 1.0/( 2.0 + $sigma_S3 * $d2_WR0_R0 ) )
21411.                      $I_L21411_644 = 1 + $I_L21411_644
21411.                      if ( $I_L21411_644 >= -2 + n_opt_level_prsc ) exit
21411.                   enddo
21411.                endif
21411.                d2(n_opt_level_prsc) = 0.0
21411.                if ( 1 + -n_opt_level_prsc < 0 ) then
21411.                   $d2_WR0_R2 = 0.0
21411.                   $I_L21411_646 = 0
21411. !dir$ unroll 4
21411.                   do
21411.                      $d2_WR0_R2 = work(-1 + n_opt_level_prsc + -$I_L21411_646) + $d2_WR0_R2 * d2(-1 + n_opt_level_prsc + -$I_L21411_646)
21411.                      d2(-1 + n_opt_level_prsc + -$I_L21411_646) = $d2_WR0_R2
21411.                      $I_L21411_646 = 1 + $I_L21411_646
21411.                      if ( $I_L21411_646 >= -1 + n_opt_level_prsc ) exit
21411.                   enddo
21411.                endif
21411.             endif
21411.             if ( i_last_layer + -i_first_layer < 0 ) then
21411.                $I_L21411_778 = 1 + $I_L21411_778
21411.             else if ( n_opt_level_prsc == 1 ) then
21411.             else
21411.             endif
21411.             if ( $I_L21411_778 >= n_profile ) exit
21411.          enddo
21411.          goto 10
21411.       else
21411.    10    continue
21411.          _free( t$2761 )
21411.       endif
21411.       prsc_pressure(1) = _copyout( prsc_pressure )
21419.       tm$2279 = loc( prsc_pressure(1) )
21419.       prsc_pressure = _copyin( prsc_pressure(1) )
21419.       t$706 = nd_profile
21419.       t$707 = nd_layer
21419.       t$2750 = max( 0, nd_profile )
21419.       t$2751 = max( 0, nd_profile )
21419.       t$2752 = max( 0, nd_layer )
21419.       t$2753 = max( 0, nd_profile ) * max( 0, nd_layer )
21419.       t$704 = nd_profile_prsc
21419.       t$705 = nd_opt_level_prsc
21419.       t$2754 = max( 0, nd_profile_prsc )
21419.       t$2755 = max( 0, nd_profile_prsc )
21419.       t$2756 = max( 0, nd_opt_level_prsc )
21419.       t$2757 = max( 0, nd_opt_level_prsc ) * max( 0, nd_profile_prsc )
21419.       t$708 = id_1
21419.       t$709 = id_2
21419.       t$2758 = 1 + id_2 + -id_1
21419.       t$2759 = max( 0, 1 + id_2 + -id_1 )
21419.       t$2760 = max( 0, nd_profile ) * max( 0, 1 + id_2 + -id_1 )
21419.       t$2763 = 8 * max( 0, nd_opt_level_prsc )
21419.       t$2764 = 8 * ( 7 + 8 * max( 0, nd_opt_level_prsc ) ) / 8
21419.       t$2766 = t$2764 + 8 * max( 0, nd_opt_level_prsc )
21419.       t$2767 = 8 * ( 7 + t$2764 + 8 * max( 0, nd_opt_level_prsc ) ) / 8
21419.       t$2769 = t$2767 + 8 * max( 0, nd_opt_level_prsc )
21419.       t$2770 = 8 * ( 7 + t$2767 + 8 * max( 0, nd_opt_level_prsc ) ) / 8
21419.       t$2772 = t$2770 + 8 * max( 0, nd_opt_level_prsc )
21419.       t$2761 = int( _alloc( t$2770 + 8 * max( 0, nd_opt_level_prsc ) ), 8 )
21419.       t$2762 = t$2761
21419.       t$2765 = t$2764 + t$2761
21419.       t$2768 = t$2767 + t$2761
21419.       t$2771 = t$2770 + t$2761
21419.       if ( n_profile > 0 ) then
21419.          $I_L21419_780 = 0
21419.          do
21419.             if ( n_opt_level_prsc > 0 ) then
21419.                $I_L21419_650 = 0
21419. !dir$ ivdep
21419.                do
21419.                   prsc_pressure_g(1 + $I_L21419_650) = prsc_pressure(1 + $I_L21419_780, 1 + $I_L21419_650)
21419.                   prsc_opt_property_g(1 + $I_L21419_650) = prsc_scattering(1 + $I_L21419_780, 1 + $I_L21419_650)
21419.                   $I_L21419_650 = 1 + $I_L21419_650
21419.                   if ( $I_L21419_650 >= n_opt_level_prsc ) exit
21419.                enddo
21419.             endif
21419.             t$950 = n_opt_level_prsc
21419.             t$4077 = max( 0, n_opt_level_prsc )
21419.             if ( n_opt_level_prsc /= 1 ) then
21419.                d2(1) = 0.0
21419.                work(1) = 0.0
21419.                if ( -3 + n_opt_level_prsc >= 0 ) then
21419.                   $d2_WR0_R3 = 0.0
21419.                   $work_WR0_R4 = 0.0
21419.                   $I_L21419_652 = 0
21419. !dir$ unroll 2
21419.                   do
21419.                      $sigma_S14 = ( 1.0/( prsc_pressure_g(3 + $I_L21419_652) + -prsc_pressure_g(1 + $I_L21419_652) ) * ( prsc_pressure_g(2 + $I_L21419_652) + -prsc_pressure_g(1 + $I_L21419_652) ) )
21419.                      d2(2 + $I_L21419_652) = ( ( -1.0 + $sigma_S14 ) * 1.0/( 2.0 + $sigma_S14 * $d2_WR0_R3 ) )
21419.                      $SCF_P1 = ( 6.0 * 1.0/( prsc_pressure_g(3 + $I_L21419_652) + -prsc_pressure_g(1 + $I_L21419_652) ) * ( ( ( prsc_opt_property_g(3 + $I_L21419_652) + -prsc_opt_property_g(2 + $I_L21419_652) ) * 1.0/( prsc_pressure_g(3 + $I_L21419_652) + -prsc_pressure_g(2 + $I_L21419_652) ) ) + -( ( prsc_opt_property_g(2 + $I_L21419_652) + -prsc_opt_property_g(1 + $I_L21419_652) ) * 1.0/( prsc_pressure_g(2 + $I_L21419_652) + -prsc_pressure_g(1 + $I_L21419_652) ) ) ) )
21419.                      $work_WR0_R4 = ( ( $SCF_P1 + -( $sigma_S14 * $work_WR0_R4 ) ) * 1.0/( 2.0 + $sigma_S14 * $d2_WR0_R3 ) )
21419.                      work(2 + $I_L21419_652) = $work_WR0_R4
21419.                      $d2_WR0_R3 = ( ( -1.0 + $sigma_S14 ) * 1.0/( 2.0 + $sigma_S14 * $d2_WR0_R3 ) )
21419.                      $I_L21419_652 = 1 + $I_L21419_652
21419.                      if ( $I_L21419_652 >= -2 + n_opt_level_prsc ) exit
21419.                   enddo
21419.                endif
21419.                d2(n_opt_level_prsc) = 0.0
21419.                if ( 1 + -n_opt_level_prsc < 0 ) then
21419.                   $d2_WR0_R5 = 0.0
21419.                   $I_L21419_654 = 0
21419. !dir$ unroll 4
21419.                   do
21419.                      $d2_WR0_R5 = work(-1 + n_opt_level_prsc + -$I_L21419_654) + $d2_WR0_R5 * d2(-1 + n_opt_level_prsc + -$I_L21419_654)
21419.                      d2(-1 + n_opt_level_prsc + -$I_L21419_654) = $d2_WR0_R5
21419.                      $I_L21419_654 = 1 + $I_L21419_654
21419.                      if ( $I_L21419_654 >= -1 + n_opt_level_prsc ) exit
21419.                   enddo
21419.                endif
21419.             endif
21419.             if ( i_last_layer + -i_first_layer < 0 ) then
21419.                $I_L21419_780 = 1 + $I_L21419_780
21419.             else if ( n_opt_level_prsc == 1 ) then
21419.             else
21419.             endif
21419.             if ( $I_L21419_780 >= n_profile ) exit
21419.          enddo
21419.          goto 20
21419.       else
21419.    20    continue
21419.          _free( t$2761 )
21419.       endif
21419.       prsc_pressure(1) = _copyout( prsc_pressure )
21428.       if ( i_last_layer + -i_first_layer >= 0 ) then
21429.          if ( n_profile > 0 ) then
21428.             $I_L21428_733 = 0
21428.             do
21429.                $I_L21429_658 = 0
21429. !dir$ ivdep
21429.                do
21431.                   k_ext_tot(1 + $I_L21429_658, i_first_layer + $I_L21428_733) = ( k_ext_tot(1 + $I_L21429_658, i_first_layer + $I_L21428_733) * 1.0/density(1 + $I_L21429_658, i_first_layer + $I_L21428_733) )
21430.                   k_ext_scat(1 + $I_L21429_658, i_first_layer + $I_L21428_733) = ( k_ext_scat(1 + $I_L21429_658, i_first_layer + $I_L21428_733) * 1.0/density(1 + $I_L21429_658, i_first_layer + $I_L21428_733) )
21432.                   $I_L21429_658 = 1 + $I_L21429_658
21429.                   if ( $I_L21429_658 >= n_profile ) exit
21429.                enddo
21433.                $I_L21428_733 = 1 + $I_L21428_733
21432.                if ( $I_L21428_733 >= 1 + i_last_layer + -i_first_layer ) exit
21432.             enddo
21432.          endif
21432.       endif
21438.       if ( l_henyey_greenstein_pf /= .false. ) then
21441.          tm$2300 = loc( prsc_pressure(1) )
21441.          prsc_pressure = _copyin( prsc_pressure(1) )
21441.          tm$2302 = loc( prsc_phase_fnc(1, 1, 1) )
21441.          prsc_opt_property = _copyin( prsc_phase_fnc(1, 1, 1) )
21441.          t$706 = nd_profile
21441.          t$707 = nd_layer
21441.          t$2750 = max( 0, nd_profile )
21441.          t$2751 = max( 0, nd_profile )
21441.          t$2752 = max( 0, nd_layer )
21441.          t$2753 = max( 0, nd_profile ) * max( 0, nd_layer )
21441.          t$704 = nd_profile_prsc
21441.          t$705 = nd_opt_level_prsc
21441.          t$2754 = max( 0, nd_profile_prsc )
21441.          t$2755 = max( 0, nd_profile_prsc )
21441.          t$2756 = max( 0, nd_opt_level_prsc )
21441.          t$2757 = max( 0, nd_opt_level_prsc ) * max( 0, nd_profile_prsc )
21441.          t$708 = id_1
21441.          t$709 = id_2
21441.          t$2758 = 1 + id_2 + -id_1
21441.          t$2759 = max( 0, 1 + id_2 + -id_1 )
21441.          t$2760 = max( 0, nd_profile ) * max( 0, 1 + id_2 + -id_1 )
21441.          t$2763 = 8 * max( 0, nd_opt_level_prsc )
21441.          t$2764 = 8 * ( 7 + 8 * max( 0, nd_opt_level_prsc ) ) / 8
21441.          t$2766 = t$2764 + 8 * max( 0, nd_opt_level_prsc )
21441.          t$2767 = 8 * ( 7 + t$2764 + 8 * max( 0, nd_opt_level_prsc ) ) / 8
21441.          t$2769 = t$2767 + 8 * max( 0, nd_opt_level_prsc )
21441.          t$2770 = 8 * ( 7 + t$2767 + 8 * max( 0, nd_opt_level_prsc ) ) / 8
21441.          t$2772 = t$2770 + 8 * max( 0, nd_opt_level_prsc )
21441.          t$2761 = int( _alloc( t$2770 + 8 * max( 0, nd_opt_level_prsc ) ), 8 )
21441.          t$2762 = t$2761
21441.          t$2765 = t$2764 + t$2761
21441.          t$2768 = t$2767 + t$2761
21441.          t$2771 = t$2770 + t$2761
21441.          if ( n_profile > 0 ) then
21441.             $I_L21441_782 = 0
21441.             do
21441.                if ( n_opt_level_prsc > 0 ) then
21441.                   $I_L21441_660 = 0
21441. !dir$ ivdep
21441.                   do
21441.                      prsc_pressure_g(1 + $I_L21441_660) = prsc_pressure(1 + $I_L21441_782, 1 + $I_L21441_660)
21441.                      prsc_opt_property_g(1 + $I_L21441_660) = prsc_opt_property(1 + $I_L21441_782, 1 + $I_L21441_660)
21441.                      $I_L21441_660 = 1 + $I_L21441_660
21441.                      if ( $I_L21441_660 >= n_opt_level_prsc ) exit
21441.                   enddo
21441.                endif
21441.                t$950 = n_opt_level_prsc
21441.                t$4077 = max( 0, n_opt_level_prsc )
21441.                if ( n_opt_level_prsc /= 1 ) then
21441.                   d2(1) = 0.0
21441.                   work(1) = 0.0
21441.                   if ( -3 + n_opt_level_prsc >= 0 ) then
21441.                      $d2_WR0_R6 = 0.0
21441.                      $work_WR0_R7 = 0.0
21441.                      $I_L21441_662 = 0
21441. !dir$ unroll 2
21441.                      do
21441.                         $sigma_S27 = ( 1.0/( prsc_pressure_g(3 + $I_L21441_662) + -prsc_pressure_g(1 + $I_L21441_662) ) * ( prsc_pressure_g(2 + $I_L21441_662) + -prsc_pressure_g(1 + $I_L21441_662) ) )
21441.                         d2(2 + $I_L21441_662) = ( ( -1.0 + $sigma_S27 ) * 1.0/( 2.0 + $sigma_S27 * $d2_WR0_R6 ) )
21441.                         $SCF_P2 = ( 6.0 * 1.0/( prsc_pressure_g(3 + $I_L21441_662) + -prsc_pressure_g(1 + $I_L21441_662) ) * ( ( ( prsc_opt_property_g(3 + $I_L21441_662) + -prsc_opt_property_g(2 + $I_L21441_662) ) * 1.0/( prsc_pressure_g(3 + $I_L21441_662) + -prsc_pressure_g(2 + $I_L21441_662) ) ) + -( ( prsc_opt_property_g(2 + $I_L21441_662) + -prsc_opt_property_g(1 + $I_L21441_662) ) * 1.0/( prsc_pressure_g(2 + $I_L21441_662) + -prsc_pressure_g(1 + $I_L21441_662) ) ) ) )
21441.                         $work_WR0_R7 = ( ( $SCF_P2 + -( $sigma_S27 * $work_WR0_R7 ) ) * 1.0/( 2.0 + $sigma_S27 * $d2_WR0_R6 ) )
21441.                         work(2 + $I_L21441_662) = $work_WR0_R7
21441.                         $d2_WR0_R6 = ( ( -1.0 + $sigma_S27 ) * 1.0/( 2.0 + $sigma_S27 * $d2_WR0_R6 ) )
21441.                         $I_L21441_662 = 1 + $I_L21441_662
21441.                         if ( $I_L21441_662 >= -2 + n_opt_level_prsc ) exit
21441.                      enddo
21441.                   endif
21441.                   d2(n_opt_level_prsc) = 0.0
21441.                   if ( 1 + -n_opt_level_prsc < 0 ) then
21441.                      $d2_WR0_R8 = 0.0
21441.                      $I_L21441_664 = 0
21441. !dir$ unroll 4
21441.                      do
21441.                         $d2_WR0_R8 = work(-1 + n_opt_level_prsc + -$I_L21441_664) + $d2_WR0_R8 * d2(-1 + n_opt_level_prsc + -$I_L21441_664)
21441.                         d2(-1 + n_opt_level_prsc + -$I_L21441_664) = $d2_WR0_R8
21441.                         $I_L21441_664 = 1 + $I_L21441_664
21441.                         if ( $I_L21441_664 >= -1 + n_opt_level_prsc ) exit
21441.                      enddo
21441.                   endif
21441.                endif
21441.                if ( i_last_layer + -i_first_layer < 0 ) then
21441.                   $I_L21441_782 = 1 + $I_L21441_782
21441.                else if ( n_opt_level_prsc == 1 ) then
21441.                else
21441.                endif
21441.                if ( $I_L21441_782 >= n_profile ) exit
21441.             enddo
21441.             goto 30
21441.          else
21441.    30       continue
21441.             _free( t$2761 )
21441.          endif
21441.          prsc_phase_fnc(1, 1, 1) = _copyout( prsc_opt_property )
21441.          prsc_pressure(1) = _copyout( prsc_pressure )
21450.          if ( i_last_layer + -i_first_layer >= 0 ) then
21451.             if ( n_profile > 0 ) then
21450.                $I_L21450_735 = 0
21450.                do
21451.                   $I_L21451_668 = 0
21451. !dir$ ivdep
21451.                   do
21452.                      phase_fnc(1 + $I_L21451_668, i_first_layer + $I_L21450_735, 1) = k_ext_scat(1 + $I_L21451_668, i_first_layer + $I_L21450_735) * asymmetry(1 + $I_L21451_668, i_first_layer + $I_L21450_735)
21453.                      $I_L21451_668 = 1 + $I_L21451_668
21451.                      if ( $I_L21451_668 >= n_profile ) exit
21451.                   enddo
21454.                   $I_L21450_735 = 1 + $I_L21450_735
21453.                   if ( $I_L21450_735 >= 1 + i_last_layer + -i_first_layer ) exit
21453.                enddo
21453.             endif
21453.          endif
21457.          if ( -2 + n_order_phase >= 0 ) then
21458.             if ( i_last_layer + -i_first_layer >= 0 ) then
21459.                if ( n_profile > 0 ) then
21458.                   $I_L21458_813 = 0
21458.                   do
21457.                      $I_L21457_807 = 0
21457.                      do
21459.                         $I_L21459_801 = 0
21459.                         do
21458.                            $I_L21458_784 = 0
21458. !dir$ shortloop16
21458. !dir$ blocking_size( 2, 2 )
21458.                            do
21457.                               $I_L21457_815 = 0
21457. !dir$ shortloop16
21457. !dir$ blocking_size( 2, 2 )
21457.                               do
21459.                                  $I_L21459_670 = 0
21459. !dir$ ivdep
21459. !dir$ blocking_size( 256, 256 )
21459.                                  do
21460.                                     phase_fnc(1 + $I_L21459_670 + 256 * $I_L21459_801, i_first_layer + $I_L21458_784 + 2 * $I_L21458_813, 2 + $I_L21457_815 + 2 * $I_L21457_807) = asymmetry(1 + $I_L21459_670 + 256 * $I_L21459_801, i_first_layer + $I_L21458_784 + 2 * $I_L21458_813) * phase_fnc(1 + $I_L21459_670 + 256 * $I_L21459_801, i_first_layer + $I_L21458_784 + 2 * $I_L21458_813, 1 + $I_L21457_815 + 2 * $I_L21457_807)
21459.                                     $I_L21459_670 = 1 + $I_L21459_670
21459.                                     if ( $I_L21459_670 >= min( n_profile, 256 + 256 * $I_L21459_801 ) + -256 * $I_L21459_801 ) exit
21459.                                  enddo
21457.                                  $I_L21457_815 = 1 + $I_L21457_815
21457.                                  if ( $I_L21457_815 >= min( -1 + n_order_phase, 2 + 2 * $I_L21457_807 ) + -2 * $I_L21457_807 ) exit
21457.                               enddo
21458.                               $I_L21458_784 = 1 + $I_L21458_784
21462.                               if ( $I_L21458_784 >= min( 1 + i_last_layer + -i_first_layer, 2 + 2 * $I_L21458_813 ) + -2 * $I_L21458_813 ) exit
21462.                            enddo
21459.                            $I_L21459_801 = 1 + $I_L21459_801
21459.                            if ( $I_L21459_801 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
21459.                         enddo
21457.                         $I_L21457_807 = 1 + $I_L21457_807
21463.                         if ( $I_L21457_807 >= 1 + max( 0, -1 + _rsh( n_order_phase, 1 ) ) ) exit
21463.                      enddo
21458.                      $I_L21458_813 = 1 + $I_L21458_813
21458.                      if ( $I_L21458_813 >= 1 + max( 0, -1 + _rsh( 2 + i_last_layer + -i_first_layer, 1 ) ) ) exit
21458.                   enddo
21458.                endif
21458.             endif
21458.          endif
21468.          if ( l_rescale /= .false. ) then
21469.             if ( n_order_forward + -n_order_phase == 0 ) then
21470.                if ( i_last_layer + -i_first_layer >= 0 ) then
21471.                   if ( n_profile > 0 ) then
21470.                      $I_L21470_741 = 0
21470.                      do
21471.                         $I_L21471_677 = 0
21471. !dir$ ivdep
21471.                         do
21472.                            forward_scatter(1 + $I_L21471_677, i_first_layer + $I_L21470_741) = phase_fnc(1 + $I_L21471_677, i_first_layer + $I_L21470_741, n_order_phase)
21473.                            $I_L21471_677 = 1 + $I_L21471_677
21471.                            if ( $I_L21471_677 >= n_profile ) exit
21471.                         enddo
21474.                         $I_L21470_741 = 1 + $I_L21470_741
21473.                         if ( $I_L21470_741 >= 1 + i_last_layer + -i_first_layer ) exit
21473.                      enddo
21473.                   endif
21473.                endif
21475.             else if ( n_order_phase + -n_order_forward == -1 ) then
21476.                if ( i_last_layer + -i_first_layer >= 0 ) then
21477.                   if ( n_profile > 0 ) then
21476.                      $I_L21476_739 = 0
21476.                      do
21477.                         $I_L21477_675 = 0
21477. !dir$ ivdep
21477.                         do
21478.                            forward_scatter(1 + $I_L21477_675, i_first_layer + $I_L21476_739) = asymmetry(1 + $I_L21477_675, i_first_layer + $I_L21476_739) * phase_fnc(1 + $I_L21477_675, i_first_layer + $I_L21476_739, n_order_phase)
21480.                            $I_L21477_675 = 1 + $I_L21477_675
21477.                            if ( $I_L21477_675 >= n_profile ) exit
21477.                         enddo
21481.                         $I_L21476_739 = 1 + $I_L21476_739
21480.                         if ( $I_L21476_739 >= 1 + i_last_layer + -i_first_layer ) exit
21480.                      enddo
21480.                   endif
21480.                endif
21480.             else if ( i_last_layer + -i_first_layer >= 0 ) then
21485.                if ( n_profile > 0 ) then
21484.                   $I_L21484_737 = 0
21484.                   do
21485.                      $I_L21485_673 = 0
21485. !dir$ ivdep
21485.                      do
21486.                         forward_scatter(1 + $I_L21485_673, i_first_layer + $I_L21484_737) = k_ext_scat(1 + $I_L21485_673, i_first_layer + $I_L21484_737) * asymmetry(1 + $I_L21485_673, i_first_layer + $I_L21484_737) ** n_order_forward
21488.                         $I_L21485_673 = 1 + $I_L21485_673
21485.                         if ( $I_L21485_673 >= n_profile ) exit
21485.                      enddo
21489.                      $I_L21484_737 = 1 + $I_L21484_737
21488.                      if ( $I_L21484_737 >= 1 + i_last_layer + -i_first_layer ) exit
21488.                   enddo
21488.                endif
21488.             endif
21488.          endif
21488.       else
21501.          if ( cvmg( max( n_order_phase, n_order_forward ), n_order_phase, l_rescale ) > 0 ) then
21501.             $I_L21501_799 = 0
21501.             do
21503.                tm$2324 = loc( prsc_pressure(1) )
21503.                prsc_pressure = _copyin( prsc_pressure(1) )
21503.                tm$2326 = loc( prsc_phase_fnc(1, 1, 1 + $I_L21501_799) )
21503.                prsc_opt_property = _copyin( prsc_phase_fnc(1, 1, 1 + $I_L21501_799) )
21503.                tm$2328 = loc( phase_fnc(1, 1, 1 + $I_L21501_799) )
21503.                opt_property = _copyin( phase_fnc(1, 1, 1 + $I_L21501_799) )
21503.                t$706 = nd_profile
21503.                t$707 = nd_layer
21503.                t$2750 = max( 0, nd_profile )
21503.                t$2751 = max( 0, nd_profile )
21503.                t$2752 = max( 0, nd_layer )
21503.                t$2753 = max( 0, nd_profile ) * max( 0, nd_layer )
21503.                t$704 = nd_profile_prsc
21503.                t$705 = nd_opt_level_prsc
21503.                t$2754 = max( 0, nd_profile_prsc )
21503.                t$2755 = max( 0, nd_profile_prsc )
21503.                t$2756 = max( 0, nd_opt_level_prsc )
21503.                t$2757 = max( 0, nd_opt_level_prsc ) * max( 0, nd_profile_prsc )
21503.                t$708 = id_1
21503.                t$709 = id_2
21503.                t$2758 = 1 + id_2 + -id_1
21503.                t$2759 = max( 0, 1 + id_2 + -id_1 )
21503.                t$2760 = max( 0, nd_profile ) * max( 0, 1 + id_2 + -id_1 )
21503.                t$2763 = 8 * max( 0, nd_opt_level_prsc )
21503.                t$2764 = 8 * ( 7 + 8 * max( 0, nd_opt_level_prsc ) ) / 8
21503.                t$2766 = t$2764 + 8 * max( 0, nd_opt_level_prsc )
21503.                t$2767 = 8 * ( 7 + t$2764 + 8 * max( 0, nd_opt_level_prsc ) ) / 8
21503.                t$2769 = t$2767 + 8 * max( 0, nd_opt_level_prsc )
21503.                t$2770 = 8 * ( 7 + t$2767 + 8 * max( 0, nd_opt_level_prsc ) ) / 8
21503.                t$2772 = t$2770 + 8 * max( 0, nd_opt_level_prsc )
21503.                t$2761 = int( _alloc( t$2770 + 8 * max( 0, nd_opt_level_prsc ) ), 8 )
21503.                t$2762 = t$2761
21503.                t$2765 = t$2764 + t$2761
21503.                t$2768 = t$2767 + t$2761
21503.                t$2771 = t$2770 + t$2761
21503.                if ( n_profile > 0 ) then
21503.                   $I_L21503_787 = 0
21503.                   do
21503.                      if ( n_opt_level_prsc > 0 ) then
21503.                         $I_L21503_679 = 0
21503. !dir$ ivdep
21503.                         do
21503.                            prsc_pressure_g(1 + $I_L21503_679) = prsc_pressure(1 + $I_L21503_787, 1 + $I_L21503_679)
21503.                            prsc_opt_property_g(1 + $I_L21503_679) = prsc_opt_property(1 + $I_L21503_787, 1 + $I_L21503_679)
21503.                            $I_L21503_679 = 1 + $I_L21503_679
21503.                            if ( $I_L21503_679 >= n_opt_level_prsc ) exit
21503.                         enddo
21503.                      endif
21503.                      t$950 = n_opt_level_prsc
21503.                      t$4077 = max( 0, n_opt_level_prsc )
21503.                      if ( n_opt_level_prsc /= 1 ) then
21503.                         d2(1) = 0.0
21503.                         work(1) = 0.0
21503.                         if ( -3 + n_opt_level_prsc >= 0 ) then
21503.                            $d2_WR0_R9 = 0.0
21503.                            $work_WR0_R10 = 0.0
21503.                            $I_L21503_681 = 0
21503. !dir$ unroll 2
21503.                            do
21503.                               $sigma_S50 = ( 1.0/( prsc_pressure_g(3 + $I_L21503_681) + -prsc_pressure_g(1 + $I_L21503_681) ) * ( prsc_pressure_g(2 + $I_L21503_681) + -prsc_pressure_g(1 + $I_L21503_681) ) )
21503.                               d2(2 + $I_L21503_681) = ( ( -1.0 + $sigma_S50 ) * 1.0/( 2.0 + $sigma_S50 * $d2_WR0_R9 ) )
21503.                               $SCF_P3 = ( 6.0 * 1.0/( prsc_pressure_g(3 + $I_L21503_681) + -prsc_pressure_g(1 + $I_L21503_681) ) * ( ( ( prsc_opt_property_g(3 + $I_L21503_681) + -prsc_opt_property_g(2 + $I_L21503_681) ) * 1.0/( prsc_pressure_g(3 + $I_L21503_681) + -prsc_pressure_g(2 + $I_L21503_681) ) ) + -( ( prsc_opt_property_g(2 + $I_L21503_681) + -prsc_opt_property_g(1 + $I_L21503_681) ) * 1.0/( prsc_pressure_g(2 + $I_L21503_681) + -prsc_pressure_g(1 + $I_L21503_681) ) ) ) )
21503.                               $work_WR0_R10 = ( ( $SCF_P3 + -( $sigma_S50 * $work_WR0_R10 ) ) * 1.0/( 2.0 + $sigma_S50 * $d2_WR0_R9 ) )
21503.                               work(2 + $I_L21503_681) = $work_WR0_R10
21503.                               $d2_WR0_R9 = ( ( -1.0 + $sigma_S50 ) * 1.0/( 2.0 + $sigma_S50 * $d2_WR0_R9 ) )
21503.                               $I_L21503_681 = 1 + $I_L21503_681
21503.                               if ( $I_L21503_681 >= -2 + n_opt_level_prsc ) exit
21503.                            enddo
21503.                         endif
21503.                         d2(n_opt_level_prsc) = 0.0
21503.                         if ( 1 + -n_opt_level_prsc < 0 ) then
21503.                            $d2_WR0_R11 = 0.0
21503.                            $I_L21503_683 = 0
21503. !dir$ unroll 4
21503.                            do
21503.                               $d2_WR0_R11 = work(-1 + n_opt_level_prsc + -$I_L21503_683) + $d2_WR0_R11 * d2(-1 + n_opt_level_prsc + -$I_L21503_683)
21503.                               d2(-1 + n_opt_level_prsc + -$I_L21503_683) = $d2_WR0_R11
21503.                               $I_L21503_683 = 1 + $I_L21503_683
21503.                               if ( $I_L21503_683 >= -1 + n_opt_level_prsc ) exit
21503.                            enddo
21503.                         endif
21503.                      endif
21503.                      if ( i_last_layer + -i_first_layer < 0 ) then
21503.                         $I_L21503_787 = 1 + $I_L21503_787
21503.                      else if ( n_opt_level_prsc == 1 ) then
21503.                      else
21503.                      endif
21503.                      if ( $I_L21503_787 >= n_profile ) exit
21503.                   enddo
21503.                   goto 40
21503.                else
21503.    40             continue
21503.                   _free( t$2761 )
21503.                endif
21503.                phase_fnc(1, 1, 1 + $I_L21501_799) = _copyout( opt_property )
21503.                prsc_phase_fnc(1, 1, 1 + $I_L21501_799) = _copyout( prsc_opt_property )
21503.                prsc_pressure(1) = _copyout( prsc_pressure )
21513.                if ( i_last_layer + -i_first_layer >= 0 ) then
21514.                   if ( n_profile > 0 ) then
21513.                      $I_L21513_743 = 0
21513.                      do
21514.                         $I_L21514_687 = 0
21514. !dir$ ivdep
21514.                         do
21515.                            phase_fnc(1 + $I_L21514_687, i_first_layer + $I_L21513_743, 1 + $I_L21501_799) = k_ext_scat(1 + $I_L21514_687, i_first_layer + $I_L21513_743) * phase_fnc(1 + $I_L21514_687, i_first_layer + $I_L21513_743, 1 + $I_L21501_799)
21516.                            $I_L21514_687 = 1 + $I_L21514_687
21514.                            if ( $I_L21514_687 >= n_profile ) exit
21514.                         enddo
21517.                         $I_L21513_743 = 1 + $I_L21513_743
21516.                         if ( $I_L21513_743 >= 1 + i_last_layer + -i_first_layer ) exit
21516.                      enddo
21516.                   endif
21516.                endif
21519.                $I_L21501_799 = 1 + $I_L21501_799
21517.                if ( $I_L21501_799 >= cvmg( max( n_order_phase, n_order_forward ), n_order_phase, l_rescale ) ) exit
21517.             enddo
21517.          endif
21524.          if ( l_rescale /= .false. ) then
21525.             if ( i_last_layer + -i_first_layer >= 0 ) then
21526.                if ( n_profile > 0 ) then
21525.                   $I_L21525_745 = 0
21525.                   do
21526.                      $I_L21526_689 = 0
21526. !dir$ ivdep
21526.                      do
21527.                         forward_scatter(1 + $I_L21526_689, i_first_layer + $I_L21525_745) = phase_fnc(1 + $I_L21526_689, i_first_layer + $I_L21525_745, n_order_forward)
21528.                         $I_L21526_689 = 1 + $I_L21526_689
21526.                         if ( $I_L21526_689 >= n_profile ) exit
21526.                      enddo
21529.                      $I_L21525_745 = 1 + $I_L21525_745
21528.                      if ( $I_L21525_745 >= 1 + i_last_layer + -i_first_layer ) exit
21528.                   enddo
21528.                endif
21528.             endif
21528.          endif
21528.       endif
21536.       if ( l_solar_phf /= .false. ) then
21545.          if ( n_direction > 0 ) then
21545.             $I_L21545_811 = 0
21545.             do
21548.                tm$2349 = loc( prsc_pressure(1) )
21548.                prsc_pressure = _copyin( prsc_pressure(1) )
21548.                tm$2351 = loc( prsc_phase_fnc(1, 1, 1) )
21548.                prsc_opt_property = _copyin( prsc_phase_fnc(1, 1, 1) )
21548.                t$706 = nd_profile
21548.                t$707 = nd_layer
21548.                t$2750 = max( 0, nd_profile )
21548.                t$2751 = max( 0, nd_profile )
21548.                t$2752 = max( 0, nd_layer )
21548.                t$2753 = max( 0, nd_profile ) * max( 0, nd_layer )
21548.                t$704 = nd_profile_prsc
21548.                t$705 = nd_opt_level_prsc
21548.                t$2754 = max( 0, nd_profile_prsc )
21548.                t$2755 = max( 0, nd_profile_prsc )
21548.                t$2756 = max( 0, nd_opt_level_prsc )
21548.                t$2757 = max( 0, nd_opt_level_prsc ) * max( 0, nd_profile_prsc )
21548.                t$708 = id_1
21548.                t$709 = id_2
21548.                t$2758 = 1 + id_2 + -id_1
21548.                t$2759 = max( 0, 1 + id_2 + -id_1 )
21548.                t$2760 = max( 0, nd_profile ) * max( 0, 1 + id_2 + -id_1 )
21548.                t$2763 = 8 * max( 0, nd_opt_level_prsc )
21548.                t$2764 = 8 * ( 7 + 8 * max( 0, nd_opt_level_prsc ) ) / 8
21548.                t$2766 = t$2764 + 8 * max( 0, nd_opt_level_prsc )
21548.                t$2767 = 8 * ( 7 + t$2764 + 8 * max( 0, nd_opt_level_prsc ) ) / 8
21548.                t$2769 = t$2767 + 8 * max( 0, nd_opt_level_prsc )
21548.                t$2770 = 8 * ( 7 + t$2767 + 8 * max( 0, nd_opt_level_prsc ) ) / 8
21548.                t$2772 = t$2770 + 8 * max( 0, nd_opt_level_prsc )
21548.                t$2761 = int( _alloc( t$2770 + 8 * max( 0, nd_opt_level_prsc ) ), 8 )
21548.                t$2762 = t$2761
21548.                t$2765 = t$2764 + t$2761
21548.                t$2768 = t$2767 + t$2761
21548.                t$2771 = t$2770 + t$2761
21548.                if ( n_profile > 0 ) then
21548.                   $I_L21548_789 = 0
21548.                   do
21548.                      if ( n_opt_level_prsc > 0 ) then
21548.                         $I_L21548_691 = 0
21548. !dir$ ivdep
21548.                         do
21548.                            prsc_pressure_g(1 + $I_L21548_691) = prsc_pressure(1 + $I_L21548_789, 1 + $I_L21548_691)
21548.                            prsc_opt_property_g(1 + $I_L21548_691) = prsc_opt_property(1 + $I_L21548_789, 1 + $I_L21548_691)
21548.                            $I_L21548_691 = 1 + $I_L21548_691
21548.                            if ( $I_L21548_691 >= n_opt_level_prsc ) exit
21548.                         enddo
21548.                      endif
21548.                      t$950 = n_opt_level_prsc
21548.                      t$4077 = max( 0, n_opt_level_prsc )
21548.                      if ( n_opt_level_prsc /= 1 ) then
21548.                         d2(1) = 0.0
21548.                         work(1) = 0.0
21548.                         if ( -3 + n_opt_level_prsc >= 0 ) then
21548.                            $d2_WR0_R12 = 0.0
21548.                            $work_WR0_R13 = 0.0
21548.                            $I_L21548_693 = 0
21548. !dir$ unroll 2
21548.                            do
21548.                               $sigma_S65 = ( 1.0/( prsc_pressure_g(3 + $I_L21548_693) + -prsc_pressure_g(1 + $I_L21548_693) ) * ( prsc_pressure_g(2 + $I_L21548_693) + -prsc_pressure_g(1 + $I_L21548_693) ) )
21548.                               d2(2 + $I_L21548_693) = ( ( -1.0 + $sigma_S65 ) * 1.0/( 2.0 + $sigma_S65 * $d2_WR0_R12 ) )
21548.                               $SCF_P4 = ( 6.0 * 1.0/( prsc_pressure_g(3 + $I_L21548_693) + -prsc_pressure_g(1 + $I_L21548_693) ) * ( ( ( prsc_opt_property_g(3 + $I_L21548_693) + -prsc_opt_property_g(2 + $I_L21548_693) ) * 1.0/( prsc_pressure_g(3 + $I_L21548_693) + -prsc_pressure_g(2 + $I_L21548_693) ) ) + -( ( prsc_opt_property_g(2 + $I_L21548_693) + -prsc_opt_property_g(1 + $I_L21548_693) ) * 1.0/( prsc_pressure_g(2 + $I_L21548_693) + -prsc_pressure_g(1 + $I_L21548_693) ) ) ) )
21548.                               $work_WR0_R13 = ( ( $SCF_P4 + -( $sigma_S65 * $work_WR0_R13 ) ) * 1.0/( 2.0 + $sigma_S65 * $d2_WR0_R12 ) )
21548.                               work(2 + $I_L21548_693) = $work_WR0_R13
21548.                               $d2_WR0_R12 = ( ( -1.0 + $sigma_S65 ) * 1.0/( 2.0 + $sigma_S65 * $d2_WR0_R12 ) )
21548.                               $I_L21548_693 = 1 + $I_L21548_693
21548.                               if ( $I_L21548_693 >= -2 + n_opt_level_prsc ) exit
21548.                            enddo
21548.                         endif
21548.                         d2(n_opt_level_prsc) = 0.0
21548.                         if ( 1 + -n_opt_level_prsc < 0 ) then
21548.                            $d2_WR0_R14 = 0.0
21548.                            $I_L21548_695 = 0
21548. !dir$ unroll 4
21548.                            do
21548.                               $d2_WR0_R14 = work(-1 + n_opt_level_prsc + -$I_L21548_695) + $d2_WR0_R14 * d2(-1 + n_opt_level_prsc + -$I_L21548_695)
21548.                               d2(-1 + n_opt_level_prsc + -$I_L21548_695) = $d2_WR0_R14
21548.                               $I_L21548_695 = 1 + $I_L21548_695
21548.                               if ( $I_L21548_695 >= -1 + n_opt_level_prsc ) exit
21548.                            enddo
21548.                         endif
21548.                      endif
21548.                      if ( i_last_layer + -i_first_layer < 0 ) then
21548.                         $I_L21548_789 = 1 + $I_L21548_789
21548.                      else if ( n_opt_level_prsc == 1 ) then
21548.                      else
21548.                      endif
21548.                      if ( $I_L21548_789 >= n_profile ) exit
21548.                   enddo
21548.                   goto 50
21548.                else
21548.    50             continue
21548.                   _free( t$2761 )
21548.                endif
21548.                prsc_phase_fnc(1, 1, 1) = _copyout( prsc_opt_property )
21548.                prsc_pressure(1) = _copyout( prsc_pressure )
21555.                if ( n_profile > 0 ) then
21555.                   $I_L21555_699 = 0
21555. !dir$ ivdep
21555.                   do
21558.                      p_legendre_ls_m1(1 + $I_L21555_699) = 1.0
21559.                      p_legendre_ls(1 + $I_L21555_699) = mu_v(1 + $I_L21555_699, 1 + $I_L21545_811)
21560.                      $I_L21555_699 = 1 + $I_L21555_699
21555.                      if ( $I_L21555_699 >= n_profile ) exit
21555.                   enddo
21555.                endif
21561.                if ( i_last_layer + -i_first_layer >= 0 ) then
21562.                   if ( n_profile > 0 ) then
21561.                      $I_L21561_803 = 0
21561.                      do
21562.                         $I_L21562_791 = 0
21562.                         do
21561.                            $I_L21561_817 = 0
21561. !dir$ shortloop16
21561. !dir$ blocking_size( 2, 2 )
21561.                            do
21562.                               $I_L21562_701 = 0
21562. !dir$ ivdep
21562. !dir$ blocking_size( 256, 256 )
21562.                               do
21563.                                  phase_fnc_solar(1 + $I_L21562_701 + 256 * $I_L21562_791, i_first_layer + $I_L21561_817 + 2 * $I_L21561_803, 1 + $I_L21545_811) = 1.0 + 3.0 * p_legendre_ls(1 + $I_L21562_701 + 256 * $I_L21562_791) * phf_coeff(1 + $I_L21562_701 + 256 * $I_L21562_791, i_first_layer + $I_L21561_817 + 2 * $I_L21561_803)
21562.                                  $I_L21562_701 = 1 + $I_L21562_701
21562.                                  if ( $I_L21562_701 >= min( n_profile, 256 + 256 * $I_L21562_791 ) + -256 * $I_L21562_791 ) exit
21562.                               enddo
21561.                               $I_L21561_817 = 1 + $I_L21561_817
21561.                               if ( $I_L21561_817 >= min( 1 + i_last_layer + -i_first_layer, 2 + 2 * $I_L21561_803 ) + -2 * $I_L21561_803 ) exit
21561.                            enddo
21562.                            $I_L21562_791 = 1 + $I_L21562_791
21565.                            if ( $I_L21562_791 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
21565.                         enddo
21561.                         $I_L21561_803 = 1 + $I_L21561_803
21561.                         if ( $I_L21561_803 >= 1 + max( 0, -1 + _rsh( 2 + i_last_layer + -i_first_layer, 1 ) ) ) exit
21561.                      enddo
21561.                   endif
21561.                endif
21568.                if ( -2 + n_order_phase_solar >= 0 ) then
21568.                   $I_L21568_809 = 0
21568.                   do
21571.                      if ( l_henyey_greenstein_pf == .false. ) then
21580.                         tm$2372 = loc( prsc_pressure(1) )
21580.                         prsc_pressure = _copyin( prsc_pressure(1) )
21580.                         tm$2374 = loc( prsc_phase_fnc(1, 1, 2 + $I_L21568_809) )
21580.                         prsc_opt_property = _copyin( prsc_phase_fnc(1, 1, 2 + $I_L21568_809) )
21580.                         t$706 = nd_profile
21580.                         t$707 = nd_layer
21580.                         t$2750 = max( 0, nd_profile )
21580.                         t$2751 = max( 0, nd_profile )
21580.                         t$2752 = max( 0, nd_layer )
21580.                         t$2753 = max( 0, nd_profile ) * max( 0, nd_layer )
21580.                         t$704 = nd_profile_prsc
21580.                         t$705 = nd_opt_level_prsc
21580.                         t$2754 = max( 0, nd_profile_prsc )
21580.                         t$2755 = max( 0, nd_profile_prsc )
21580.                         t$2756 = max( 0, nd_opt_level_prsc )
21580.                         t$2757 = max( 0, nd_opt_level_prsc ) * max( 0, nd_profile_prsc )
21580.                         t$708 = id_1
21580.                         t$709 = id_2
21580.                         t$2758 = 1 + id_2 + -id_1
21580.                         t$2759 = max( 0, 1 + id_2 + -id_1 )
21580.                         t$2760 = max( 0, nd_profile ) * max( 0, 1 + id_2 + -id_1 )
21580.                         t$2763 = 8 * max( 0, nd_opt_level_prsc )
21580.                         t$2764 = 8 * ( 7 + 8 * max( 0, nd_opt_level_prsc ) ) / 8
21580.                         t$2766 = t$2764 + 8 * max( 0, nd_opt_level_prsc )
21580.                         t$2767 = 8 * ( 7 + t$2764 + 8 * max( 0, nd_opt_level_prsc ) ) / 8
21580.                         t$2769 = t$2767 + 8 * max( 0, nd_opt_level_prsc )
21580.                         t$2770 = 8 * ( 7 + t$2767 + 8 * max( 0, nd_opt_level_prsc ) ) / 8
21580.                         t$2772 = t$2770 + 8 * max( 0, nd_opt_level_prsc )
21580.                         t$2761 = int( _alloc( t$2770 + 8 * max( 0, nd_opt_level_prsc ) ), 8 )
21580.                         t$2762 = t$2761
21580.                         t$2765 = t$2764 + t$2761
21580.                         t$2768 = t$2767 + t$2761
21580.                         t$2771 = t$2770 + t$2761
21580.                         if ( n_profile > 0 ) then
21580.                            $I_L21580_793 = 0
21580.                            do
21580.                               if ( n_opt_level_prsc > 0 ) then
21580.                                  $I_L21580_706 = 0
21580. !dir$ ivdep
21580.                                  do
21580.                                     prsc_pressure_g(1 + $I_L21580_706) = prsc_pressure(1 + $I_L21580_793, 1 + $I_L21580_706)
21580.                                     prsc_opt_property_g(1 + $I_L21580_706) = prsc_opt_property(1 + $I_L21580_793, 1 + $I_L21580_706)
21580.                                     $I_L21580_706 = 1 + $I_L21580_706
21580.                                     if ( $I_L21580_706 >= n_opt_level_prsc ) exit
21580.                                  enddo
21580.                               endif
21580.                               t$950 = n_opt_level_prsc
21580.                               t$4077 = max( 0, n_opt_level_prsc )
21580.                               if ( n_opt_level_prsc /= 1 ) then
21580.                                  d2(1) = 0.0
21580.                                  work(1) = 0.0
21580.                                  if ( -3 + n_opt_level_prsc >= 0 ) then
21580.                                     $d2_WR0_R15 = 0.0
21580.                                     $work_WR0_R16 = 0.0
21580.                                     $I_L21580_708 = 0
21580. !dir$ unroll 2
21580.                                     do
21580.                                        $sigma_S82 = ( 1.0/( prsc_pressure_g(3 + $I_L21580_708) + -prsc_pressure_g(1 + $I_L21580_708) ) * ( prsc_pressure_g(2 + $I_L21580_708) + -prsc_pressure_g(1 + $I_L21580_708) ) )
21580.                                        d2(2 + $I_L21580_708) = ( ( -1.0 + $sigma_S82 ) * 1.0/( 2.0 + $sigma_S82 * $d2_WR0_R15 ) )
21580.                                        $SCF_P5 = ( 6.0 * 1.0/( prsc_pressure_g(3 + $I_L21580_708) + -prsc_pressure_g(1 + $I_L21580_708) ) * ( ( ( prsc_opt_property_g(3 + $I_L21580_708) + -prsc_opt_property_g(2 + $I_L21580_708) ) * 1.0/( prsc_pressure_g(3 + $I_L21580_708) + -prsc_pressure_g(2 + $I_L21580_708) ) ) + -( ( prsc_opt_property_g(2 + $I_L21580_708) + -prsc_opt_property_g(1 + $I_L21580_708) ) * 1.0/( prsc_pressure_g(2 + $I_L21580_708) + -prsc_pressure_g(1 + $I_L21580_708) ) ) ) )
21580.                                        $work_WR0_R16 = ( ( $SCF_P5 + -( $sigma_S82 * $work_WR0_R16 ) ) * 1.0/( 2.0 + $sigma_S82 * $d2_WR0_R15 ) )
21580.                                        work(2 + $I_L21580_708) = $work_WR0_R16
21580.                                        $d2_WR0_R15 = ( ( -1.0 + $sigma_S82 ) * 1.0/( 2.0 + $sigma_S82 * $d2_WR0_R15 ) )
21580.                                        $I_L21580_708 = 1 + $I_L21580_708
21580.                                        if ( $I_L21580_708 >= -2 + n_opt_level_prsc ) exit
21580.                                     enddo
21580.                                  endif
21580.                                  d2(n_opt_level_prsc) = 0.0
21580.                                  if ( 1 + -n_opt_level_prsc < 0 ) then
21580.                                     $d2_WR0_R17 = 0.0
21580.                                     $I_L21580_710 = 0
21580. !dir$ unroll 4
21580.                                     do
21580.                                        $d2_WR0_R17 = work(-1 + n_opt_level_prsc + -$I_L21580_710) + $d2_WR0_R17 * d2(-1 + n_opt_level_prsc + -$I_L21580_710)
21580.                                        d2(-1 + n_opt_level_prsc + -$I_L21580_710) = $d2_WR0_R17
21580.                                        $I_L21580_710 = 1 + $I_L21580_710
21580.                                        if ( $I_L21580_710 >= -1 + n_opt_level_prsc ) exit
21580.                                     enddo
21580.                                  endif
21580.                               endif
21580.                               if ( i_last_layer + -i_first_layer < 0 ) then
21580.                                  $I_L21580_793 = 1 + $I_L21580_793
21580.                               else if ( n_opt_level_prsc == 1 ) then
21580.                               else
21580.                               endif
21580.                               if ( $I_L21580_793 >= n_profile ) exit
21580.                            enddo
21580.                            goto 60
21580.                         else
21580.    60                      continue
21580.                            _free( t$2761 )
21580.                         endif
21580.                         prsc_phase_fnc(1, 1, 2 + $I_L21568_809) = _copyout( prsc_opt_property )
21580.                         prsc_pressure(1) = _copyout( prsc_pressure )
21574.                      else if ( i_last_layer + -i_first_layer >= 0 ) then
21575.                         if ( n_profile > 0 ) then
21574.                            $I_L21574_747 = 0
21574.                            do
21575.                               $I_L21575_704 = 0
21575. !dir$ ivdep
21575.                               do
21576.                                  phf_coeff(1 + $I_L21575_704, i_first_layer + $I_L21574_747) = phf_coeff(1 + $I_L21575_704, i_first_layer + $I_L21574_747) * asymmetry(1 + $I_L21575_704, i_first_layer + $I_L21574_747)
21577.                                  $I_L21575_704 = 1 + $I_L21575_704
21575.                                  if ( $I_L21575_704 >= n_profile ) exit
21575.                               enddo
21578.                               $I_L21574_747 = 1 + $I_L21574_747
21577.                               if ( $I_L21574_747 >= 1 + i_last_layer + -i_first_layer ) exit
21577.                            enddo
21577.                         endif
21577.                      endif
21590.                      $cnst1_S90 = 1.0 + -( 1.0/( real( 2 + $I_L21568_809, 8 ) ) )
21591.                      if ( n_profile > 0 ) then
21591.                         $I_L21591_714 = 0
21591. !dir$ ivdep
21591.                         do
21592.                            $p_legendre_tmp_WR0_R18 = p_legendre_ls(1 + $I_L21591_714)
21593.                            p_legendre_ls(1 + $I_L21591_714) = -( $cnst1_S90 * p_legendre_ls_m1(1 + $I_L21591_714) ) + mu_v(1 + $I_L21591_714, 1 + $I_L21545_811) * $p_legendre_tmp_WR0_R18 * ( 1.0 + $cnst1_S90 )
21596.                            p_legendre_ls_m1(1 + $I_L21591_714) = $p_legendre_tmp_WR0_R18
21597.                            $I_L21591_714 = 1 + $I_L21591_714
21591.                            if ( $I_L21591_714 >= n_profile ) exit
21591.                         enddo
21591.                      endif
21599.                      if ( i_last_layer + -i_first_layer >= 0 ) then
21600.                         if ( n_profile > 0 ) then
21599.                            $I_L21599_805 = 0
21599.                            do
21600.                               $I_L21600_795 = 0
21600.                               do
21599.                                  $I_L21599_819 = 0
21599. !dir$ shortloop16
21599. !dir$ blocking_size( 2, 2 )
21599.                                  do
21600.                                     $I_L21600_716 = 0
21600. !dir$ ivdep
21600. !dir$ blocking_size( 256, 256 )
21600.                                     do
21601.                                        phase_fnc_solar(1 + $I_L21600_716 + 256 * $I_L21600_795, i_first_layer + $I_L21599_819 + 2 * $I_L21599_805, 1 + $I_L21545_811) = phase_fnc_solar(1 + $I_L21600_716 + 256 * $I_L21600_795, i_first_layer + $I_L21599_819 + 2 * $I_L21599_805, 1 + $I_L21545_811) + p_legendre_ls(1 + $I_L21600_716 + 256 * $I_L21600_795) * phf_coeff(1 + $I_L21600_716 + 256 * $I_L21600_795, i_first_layer + $I_L21599_819 + 2 * $I_L21599_805) * real( 5 + 2 * $I_L21568_809, 8 )
21600.                                        $I_L21600_716 = 1 + $I_L21600_716
21600.                                        if ( $I_L21600_716 >= min( n_profile, 256 + 256 * $I_L21600_795 ) + -256 * $I_L21600_795 ) exit
21600.                                     enddo
21599.                                     $I_L21599_819 = 1 + $I_L21599_819
21599.                                     if ( $I_L21599_819 >= min( 1 + i_last_layer + -i_first_layer, 2 + 2 * $I_L21599_805 ) + -2 * $I_L21599_805 ) exit
21599.                                  enddo
21600.                                  $I_L21600_795 = 1 + $I_L21600_795
21604.                                  if ( $I_L21600_795 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
21604.                               enddo
21599.                               $I_L21599_805 = 1 + $I_L21599_805
21599.                               if ( $I_L21599_805 >= 1 + max( 0, -1 + _rsh( 2 + i_last_layer + -i_first_layer, 1 ) ) ) exit
21599.                            enddo
21599.                         endif
21599.                      endif
21607.                      $I_L21568_809 = 1 + $I_L21568_809
21605.                      if ( $I_L21568_809 >= -1 + n_order_phase_solar ) exit
21605.                   enddo
21605.                endif
21611.                if ( i_last_layer + -i_first_layer >= 0 ) then
21612.                   if ( n_profile > 0 ) then
21611.                      $I_L21611_749 = 0
21611.                      do
21612.                         $I_L21612_719 = 0
21612. !dir$ ivdep
21612.                         do
21613.                            phase_fnc_solar(1 + $I_L21612_719, i_first_layer + $I_L21611_749, 1 + $I_L21545_811) = k_ext_scat(1 + $I_L21612_719, i_first_layer + $I_L21611_749) * phase_fnc_solar(1 + $I_L21612_719, i_first_layer + $I_L21611_749, 1 + $I_L21545_811)
21615.                            $I_L21612_719 = 1 + $I_L21612_719
21612.                            if ( $I_L21612_719 >= n_profile ) exit
21612.                         enddo
21616.                         $I_L21611_749 = 1 + $I_L21611_749
21615.                         if ( $I_L21611_749 >= 1 + i_last_layer + -i_first_layer ) exit
21615.                      enddo
21615.                   endif
21615.                endif
21618.                if ( l_rescale /= .false. ) then
21621.                   if ( l_henyey_greenstein_pf == .false. ) then
21631.                      tm$2395 = loc( prsc_pressure(1) )
21631.                      prsc_pressure = _copyin( prsc_pressure(1) )
21631.                      tm$2397 = loc( prsc_phase_fnc(1, 1, 1 + n_order_phase_solar) )
21631.                      prsc_opt_property = _copyin( prsc_phase_fnc(1, 1, 1 + n_order_phase_solar) )
21631.                      t$706 = nd_profile
21631.                      t$707 = nd_layer
21631.                      t$2750 = max( 0, nd_profile )
21631.                      t$2751 = max( 0, nd_profile )
21631.                      t$2752 = max( 0, nd_layer )
21631.                      t$2753 = max( 0, nd_profile ) * max( 0, nd_layer )
21631.                      t$704 = nd_profile_prsc
21631.                      t$705 = nd_opt_level_prsc
21631.                      t$2754 = max( 0, nd_profile_prsc )
21631.                      t$2755 = max( 0, nd_profile_prsc )
21631.                      t$2756 = max( 0, nd_opt_level_prsc )
21631.                      t$2757 = max( 0, nd_opt_level_prsc ) * max( 0, nd_profile_prsc )
21631.                      t$708 = id_1
21631.                      t$709 = id_2
21631.                      t$2758 = 1 + id_2 + -id_1
21631.                      t$2759 = max( 0, 1 + id_2 + -id_1 )
21631.                      t$2760 = max( 0, nd_profile ) * max( 0, 1 + id_2 + -id_1 )
21631.                      t$2763 = 8 * max( 0, nd_opt_level_prsc )
21631.                      t$2764 = 8 * ( 7 + 8 * max( 0, nd_opt_level_prsc ) ) / 8
21631.                      t$2766 = t$2764 + 8 * max( 0, nd_opt_level_prsc )
21631.                      t$2767 = 8 * ( 7 + t$2764 + 8 * max( 0, nd_opt_level_prsc ) ) / 8
21631.                      t$2769 = t$2767 + 8 * max( 0, nd_opt_level_prsc )
21631.                      t$2770 = 8 * ( 7 + t$2767 + 8 * max( 0, nd_opt_level_prsc ) ) / 8
21631.                      t$2772 = t$2770 + 8 * max( 0, nd_opt_level_prsc )
21631.                      t$2761 = int( _alloc( t$2770 + 8 * max( 0, nd_opt_level_prsc ) ), 8 )
21631.                      t$2762 = t$2761
21631.                      t$2765 = t$2764 + t$2761
21631.                      t$2768 = t$2767 + t$2761
21631.                      t$2771 = t$2770 + t$2761
21631.                      if ( n_profile > 0 ) then
21631.                         $I_L21631_797 = 0
21631.                         do
21631.                            if ( n_opt_level_prsc > 0 ) then
21631.                               $I_L21631_723 = 0
21631. !dir$ ivdep
21631.                               do
21631.                                  prsc_pressure_g(1 + $I_L21631_723) = prsc_pressure(1 + $I_L21631_797, 1 + $I_L21631_723)
21631.                                  prsc_opt_property_g(1 + $I_L21631_723) = prsc_opt_property(1 + $I_L21631_797, 1 + $I_L21631_723)
21631.                                  $I_L21631_723 = 1 + $I_L21631_723
21631.                                  if ( $I_L21631_723 >= n_opt_level_prsc ) exit
21631.                               enddo
21631.                            endif
21631.                            t$950 = n_opt_level_prsc
21631.                            t$4077 = max( 0, n_opt_level_prsc )
21631.                            if ( n_opt_level_prsc /= 1 ) then
21631.                               d2(1) = 0.0
21631.                               work(1) = 0.0
21631.                               if ( -3 + n_opt_level_prsc >= 0 ) then
21631.                                  $d2_WR0_R19 = 0.0
21631.                                  $work_WR0_R20 = 0.0
21631.                                  $I_L21631_725 = 0
21631. !dir$ unroll 2
21631.                                  do
21631.                                     $sigma_S100 = ( 1.0/( prsc_pressure_g(3 + $I_L21631_725) + -prsc_pressure_g(1 + $I_L21631_725) ) * ( prsc_pressure_g(2 + $I_L21631_725) + -prsc_pressure_g(1 + $I_L21631_725) ) )
21631.                                     d2(2 + $I_L21631_725) = ( ( -1.0 + $sigma_S100 ) * 1.0/( 2.0 + $sigma_S100 * $d2_WR0_R19 ) )
21631.                                     $SCF_P6 = ( 6.0 * 1.0/( prsc_pressure_g(3 + $I_L21631_725) + -prsc_pressure_g(1 + $I_L21631_725) ) * ( ( ( prsc_opt_property_g(3 + $I_L21631_725) + -prsc_opt_property_g(2 + $I_L21631_725) ) * 1.0/( prsc_pressure_g(3 + $I_L21631_725) + -prsc_pressure_g(2 + $I_L21631_725) ) ) + -( ( prsc_opt_property_g(2 + $I_L21631_725) + -prsc_opt_property_g(1 + $I_L21631_725) ) * 1.0/( prsc_pressure_g(2 + $I_L21631_725) + -prsc_pressure_g(1 + $I_L21631_725) ) ) ) )
21631.                                     $work_WR0_R20 = ( ( $SCF_P6 + -( $sigma_S100 * $work_WR0_R20 ) ) * 1.0/( 2.0 + $sigma_S100 * $d2_WR0_R19 ) )
21631.                                     work(2 + $I_L21631_725) = $work_WR0_R20
21631.                                     $d2_WR0_R19 = ( ( -1.0 + $sigma_S100 ) * 1.0/( 2.0 + $sigma_S100 * $d2_WR0_R19 ) )
21631.                                     $I_L21631_725 = 1 + $I_L21631_725
21631.                                     if ( $I_L21631_725 >= -2 + n_opt_level_prsc ) exit
21631.                                  enddo
21631.                               endif
21631.                               d2(n_opt_level_prsc) = 0.0
21631.                               if ( 1 + -n_opt_level_prsc < 0 ) then
21631.                                  $d2_WR0_R21 = 0.0
21631.                                  $I_L21631_727 = 0
21631. !dir$ unroll 4
21631.                                  do
21631.                                     $d2_WR0_R21 = work(-1 + n_opt_level_prsc + -$I_L21631_727) + $d2_WR0_R21 * d2(-1 + n_opt_level_prsc + -$I_L21631_727)
21631.                                     d2(-1 + n_opt_level_prsc + -$I_L21631_727) = $d2_WR0_R21
21631.                                     $I_L21631_727 = 1 + $I_L21631_727
21631.                                     if ( $I_L21631_727 >= -1 + n_opt_level_prsc ) exit
21631.                                  enddo
21631.                               endif
21631.                            endif
21631.                            if ( i_last_layer + -i_first_layer < 0 ) then
21631.                               $I_L21631_797 = 1 + $I_L21631_797
21631.                            else if ( n_opt_level_prsc == 1 ) then
21631.                            else
21631.                            endif
21631.                            if ( $I_L21631_797 >= n_profile ) exit
21631.                         enddo
21631.                         goto 70
21631.                      else
21631.    70                   continue
21631.                         _free( t$2761 )
21631.                      endif
21631.                      prsc_phase_fnc(1, 1, 1 + n_order_phase_solar) = _copyout( prsc_opt_property )
21631.                      prsc_pressure(1) = _copyout( prsc_pressure )
21624.                   else if ( i_last_layer + -i_first_layer >= 0 ) then
21625.                      if ( n_profile > 0 ) then
21624.                         $I_L21624_751 = 0
21624.                         do
21625.                            $I_L21625_721 = 0
21625. !dir$ ivdep
21625.                            do
21626.                               phf_coeff(1 + $I_L21625_721, i_first_layer + $I_L21624_751) = phf_coeff(1 + $I_L21625_721, i_first_layer + $I_L21624_751) * asymmetry(1 + $I_L21625_721, i_first_layer + $I_L21624_751)
21627.                               $I_L21625_721 = 1 + $I_L21625_721
21625.                               if ( $I_L21625_721 >= n_profile ) exit
21625.                            enddo
21628.                            $I_L21624_751 = 1 + $I_L21624_751
21627.                            if ( $I_L21624_751 >= 1 + i_last_layer + -i_first_layer ) exit
21627.                         enddo
21627.                      endif
21627.                   endif
21642.                   if ( i_last_layer + -i_first_layer >= 0 ) then
21643.                      if ( n_profile > 0 ) then
21642.                         $I_L21642_753 = 0
21642.                         do
21643.                            $I_L21643_731 = 0
21643. !dir$ ivdep
21643.                            do
21644.                               forward_solar(1 + $I_L21643_731, i_first_layer + $I_L21642_753) = k_ext_scat(1 + $I_L21643_731, i_first_layer + $I_L21642_753) * phf_coeff(1 + $I_L21643_731, i_first_layer + $I_L21642_753)
21646.                               $I_L21643_731 = 1 + $I_L21643_731
21643.                               if ( $I_L21643_731 >= n_profile ) exit
21643.                            enddo
21647.                            $I_L21642_753 = 1 + $I_L21642_753
21646.                            if ( $I_L21642_753 >= 1 + i_last_layer + -i_first_layer ) exit
21646.                         enddo
21646.                      endif
21646.                   endif
21646.                endif
21651.                $I_L21545_811 = 1 + $I_L21545_811
21649.                if ( $I_L21545_811 >= n_direction ) exit
21649.             enddo
21649.          endif
21649.       endif
21248.       _free( t$2796 )
21658.       return
21658.       end
21658.       
21676.       
21676.       subroutine qsat_gill( sat_spec_hum, t, p, n_profile, n_layer, nd_profile, nd_layer )
21676.       t$720 = nd_profile
21676.       t$721 = nd_layer
21720.       t$2811 = _zla( 0, nd_profile )
21676.       t$2812 = _zla( 0, nd_profile )
21720.       t$2813 = _zla( 0, nd_layer )
21676.       t$2814 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
21756.       if ( n_layer > 0 ) then
21757.          if ( n_profile > 0 ) then
21756.             $I_L21756_10 = 0
21756.             do
21757.                $I_L21757_8 = 0
21757. !dir$ ivdep
21757.                do
21761.                   $temp_S2 = -273.14999999999998 + t(1 + $I_L21757_8, 1 + $I_L21756_10)
21762.                   $press_S3 = 1.0e-2 * p(1 + $I_L21757_8, 1 + $I_L21756_10)
21773.                   $ew_S4 = 10.0 ** ( 1.0/( 1.0 + 4.1200000000000004e-3 * $temp_S2 ) * ( 7.8590000000000004e-1 + 3.4770000000000002e-2 * $temp_S2 ) )
21777.                   $ewdash_S5 = $ew_S4 * ( 1.0 + 9.9999999999999995e-7 * $press_S3 * ( 4.5 + 5.9999999999999995e-4 * $temp_S2 * $temp_S2 ) )
21785.                   if ( $press_S3 > ( $ew_S4 * ( 1.0 + 9.9999999999999995e-7 * $press_S3 * ( 4.5 + 5.9999999999999995e-4 * $temp_S2 * $temp_S2 ) ) ) ) then
21786.                      sat_spec_hum(1 + $I_L21757_8, 1 + $I_L21756_10) = ( 1.0/( $press_S3 + -3.7802000000000002e-1 * $ewdash_S5 ) * ( 6.2197999999999998e-1 * $ewdash_S5 ) )
21786.                   else
21788.                      sat_spec_hum(1 + $I_L21757_8, 1 + $I_L21756_10) = 1.0
21788.                   endif
21793.                   $I_L21757_8 = 1 + $I_L21757_8
21789.                   if ( $I_L21757_8 >= n_profile ) exit
21789.                enddo
21794.                $I_L21756_10 = 1 + $I_L21756_10
21793.                if ( $I_L21756_10 >= n_layer ) exit
21793.             enddo
21793.          endif
21793.       endif
21799.       return
21799.       end
21799.       
21819.       
21819.       subroutine rescale_continuum( n_profile, n_layer, i_continuum, p, t, i_top, density, molar_density_water, molar_density_frn, water_frac, amount_continuum, i_fnc, p_reference, t_reference, scale_parameter, nd_profile, nd_layer, nd_scale_variable )
21819.       t$722 = nd_profile
21819.       t$723 = nd_layer
21868.       t$2815 = _zla( 0, nd_profile )
21819.       t$2816 = _zla( 0, nd_profile )
21868.       t$2817 = _zla( 0, nd_layer )
21819.       t$2818 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
21819.       t$724 = nd_scale_variable
21882.       t$2819 = _zla( 0, nd_scale_variable )
21897.       if ( i_fnc == 1 ) then
21898.          if ( nd_layer > 0 ) then
21900.             $SC_scale_parameter_I0 = scale_parameter(2)
21900.             $SC_scale_parameter_I1 = scale_parameter(1)
21899.             if ( nd_profile > 0 ) then
21898.                $I_L21898_52 = 0
21898.                do
21899.                   $I_L21899_42 = 0
21899. !dir$ ivdep
21899.                   do
21900.                      amount_continuum(1 + $I_L21899_42, 1 + $I_L21898_52) = _expn( $SC_scale_parameter_I0 * log( ( t(1 + $I_L21899_42, 1 + $I_L21898_52) * 1.0/t_reference ) ) + $SC_scale_parameter_I1 * log( ( p(1 + $I_L21899_42, 1 + $I_L21898_52) * 1.0/p_reference ) ) )
21903.                      $I_L21899_42 = 1 + $I_L21899_42
21899.                      if ( $I_L21899_42 >= nd_profile ) exit
21899.                   enddo
21904.                   $I_L21898_52 = 1 + $I_L21898_52
21903.                   if ( $I_L21898_52 >= nd_layer ) exit
21903.                enddo
21903.             endif
21903.          endif
21905.       else if ( i_fnc == 2 ) then
21906.          if ( nd_layer > 0 ) then
21908.             $SC_scale_parameter_I2 = scale_parameter(3)
21908.             $SC_scale_parameter_I0 = scale_parameter(2)
21908.             $SC_scale_parameter_I1 = scale_parameter(1)
21907.             if ( nd_profile > 0 ) then
21906.                $I_L21906_50 = 0
21906.                do
21907.                   $I_L21907_40 = 0
21907. !dir$ ivdep
21907.                   do
21908.                      amount_continuum(1 + $I_L21907_40, 1 + $I_L21906_50) = ( 1.0 + $SC_scale_parameter_I2 * ( -1.0 + ( t(1 + $I_L21907_40, 1 + $I_L21906_50) * 1.0/t_reference ) ) * ( -1.0 + ( t(1 + $I_L21907_40, 1 + $I_L21906_50) * 1.0/t_reference ) ) + $SC_scale_parameter_I0 * ( -1.0 + ( t(1 + $I_L21907_40, 1 + $I_L21906_50) * 1.0/t_reference ) ) ) * _expn( $SC_scale_parameter_I1 * log( ( p(1 + $I_L21907_40, 1 + $I_L21906_50) * 1.0/p_reference ) ) )
21914.                      $I_L21907_40 = 1 + $I_L21907_40
21907.                      if ( $I_L21907_40 >= nd_profile ) exit
21907.                   enddo
21915.                   $I_L21906_50 = 1 + $I_L21906_50
21914.                   if ( $I_L21906_50 >= nd_layer ) exit
21914.                enddo
21914.             endif
21914.          endif
21914.       endif
21918.       if ( i_continuum == 1 ) then
21919.          if ( nd_layer > 0 ) then
21920.             if ( nd_profile > 0 ) then
21919.                $I_L21919_58 = 0
21919.                do
21920.                   $I_L21920_48 = 0
21920. !dir$ ivdep
21920.                   do
21921.                      amount_continuum(1 + $I_L21920_48, 1 + $I_L21919_58) = amount_continuum(1 + $I_L21920_48, 1 + $I_L21919_58) * molar_density_water(1 + $I_L21920_48, 1 + $I_L21919_58) * water_frac(1 + $I_L21920_48, 1 + $I_L21919_58)
21923.                      $I_L21920_48 = 1 + $I_L21920_48
21920.                      if ( $I_L21920_48 >= nd_profile ) exit
21920.                   enddo
21924.                   $I_L21919_58 = 1 + $I_L21919_58
21923.                   if ( $I_L21919_58 >= nd_layer ) exit
21923.                enddo
21923.             endif
21923.          endif
21925.       else if ( i_continuum == 2 ) then
21926.          if ( nd_layer > 0 ) then
21927.             if ( nd_profile > 0 ) then
21926.                $I_L21926_56 = 0
21926.                do
21927.                   $I_L21927_46 = 0
21927. !dir$ ivdep
21927.                   do
21928.                      amount_continuum(1 + $I_L21927_46, 1 + $I_L21926_56) = amount_continuum(1 + $I_L21927_46, 1 + $I_L21926_56) * water_frac(1 + $I_L21927_46, 1 + $I_L21926_56) * molar_density_frn(1 + $I_L21927_46, 1 + $I_L21926_56)
21930.                      $I_L21927_46 = 1 + $I_L21927_46
21927.                      if ( $I_L21927_46 >= nd_profile ) exit
21927.                   enddo
21931.                   $I_L21926_56 = 1 + $I_L21926_56
21930.                   if ( $I_L21926_56 >= nd_layer ) exit
21930.                enddo
21930.             endif
21930.          endif
21930.       else if ( i_continuum == 3 ) then
21933.          if ( nd_layer > 0 ) then
21934.             if ( nd_profile > 0 ) then
21933.                $I_L21933_54 = 0
21933.                do
21934.                   $I_L21934_44 = 0
21934. !dir$ ivdep
21934.                   do
21935.                      amount_continuum(1 + $I_L21934_44, 1 + $I_L21933_54) = 7.8100000000000003e-1 * amount_continuum(1 + $I_L21934_44, 1 + $I_L21933_54) * density(1 + $I_L21934_44, 1 + $I_L21933_54)
21937.                      $I_L21934_44 = 1 + $I_L21934_44
21934.                      if ( $I_L21934_44 >= nd_profile ) exit
21934.                   enddo
21938.                   $I_L21933_54 = 1 + $I_L21933_54
21937.                   if ( $I_L21933_54 >= nd_layer ) exit
21937.                enddo
21937.             endif
21937.          endif
21937.       endif
21944.       return
21944.       end
21944.       
21962.       
21962.       subroutine rescale_phase_fnc( n_profile, i_layer_first, i_layer_last, n_direction, cos_sol_view, n_order_phase, phase_fnc, forward_scatter, forward_solar, l_rescale_solar_phf, n_order_phase_solar, phase_fnc_solar, nd_profile, nd_radiance_profile, nd_layer, id_1, nd_direction, nd_max_order )
21962.       t$728 = nd_radiance_profile
21962.       t$729 = nd_direction
22013.       t$2820 = _zla( 0, nd_radiance_profile )
21962.       t$2821 = _zla( 0, nd_radiance_profile )
22013.       t$2822 = _zla( 0, nd_direction )
21962.       t$2823 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
21962.       t$725 = nd_profile
21962.       t$726 = id_1
21962.       t$727 = nd_layer
21962.       t$730 = nd_max_order
22023.       t$2824 = _zla( 0, nd_profile )
21962.       t$2825 = _zla( 0, nd_profile )
21962.       t$2826 = 1 + nd_layer + -id_1
22023.       t$2827 = _zla( 0, 1 + nd_layer + -id_1 )
21962.       t$2828 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_1 )
22023.       t$2829 = _zla( 0, nd_max_order )
21962.       t$2830 = _zla( 0, nd_profile ) * _zla( 0, nd_max_order ) * _zla( 0, 1 + nd_layer + -id_1 )
21962.       t$2831 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_1 )
21962.       t$2832 = _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer + -id_1 )
21962.       t$2833 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * _zla( 0, 1 + nd_layer + -id_1 )
22054.       t$2836 = 8 * _zla( 0, nd_profile )
22046.       t$2837 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) ) / 8
22046.       t$2839 = t$2837 + 8 * _zla( 0, nd_radiance_profile )
22048.       t$2840 = 8 * ( 7 + t$2837 + 8 * _zla( 0, nd_radiance_profile ) ) / 8
22048.       t$2842 = t$2840 + 8 * _zla( 0, nd_radiance_profile )
22050.       t$2843 = 8 * ( 7 + t$2840 + 8 * _zla( 0, nd_radiance_profile ) ) / 8
22050.       t$2845 = t$2843 + 8 * _zla( 0, nd_radiance_profile )
21962.       t$2834 = int( _alloc( t$2843 + 8 * _zla( 0, nd_radiance_profile ) ), 8 )
22054.       t$2835 = t$2834
22046.       t$2838 = t$2837 + t$2834
22048.       t$2841 = t$2840 + t$2834
22050.       t$2844 = t$2843 + t$2834
22060.       if ( n_order_phase > 0 ) then
22061.          if ( nd_layer + -id_1 >= 0 ) then
22062.             if ( nd_profile > 0 ) then
22061.                $I_L22061_103 = 0
22061.                do
22060.                   $I_L22060_99 = 0
22060.                   do
22062.                      $I_L22062_95 = 0
22062.                      do
22061.                         $I_L22061_90 = 0
22061. !dir$ shortloop16
22061. !dir$ blocking_size( 16, 16 )
22061.                         do
22060.                            $I_L22060_84 = 0
22060.                            if ( min( n_order_phase, 16 + 16 * $I_L22060_99 ) + -16 * $I_L22060_99 >= 4 ) then
22060.                               $I_L22060_110 = 0
22060. !dir$ shortloop16
22060. !dir$ blocking_size( 16, 16 )
22060.                               do
22062.                                  $I_L22062_72 = 0
22062. !dir$ ivdep
22062. !dir$ loop_info (automatic) cache_nt( phase_fnc )
22062. !dir$ blocking_size( 256, 256 )
22062.                                  do
22063.                                     phase_fnc(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103, 1 + 16 * $I_L22060_99 + 4 * $I_L22060_110) = ( 1.0/( 1.0 + -forward_scatter(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103) ) * ( phase_fnc(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103, 1 + 16 * $I_L22060_99 + 4 * $I_L22060_110) + -forward_scatter(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103) ) )
22063.                                     phase_fnc(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103, 2 + 16 * $I_L22060_99 + 4 * $I_L22060_110) = ( 1.0/( 1.0 + -forward_scatter(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103) ) * ( phase_fnc(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103, 2 + 16 * $I_L22060_99 + 4 * $I_L22060_110) + -forward_scatter(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103) ) )
22063.                                     phase_fnc(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103, 3 + 16 * $I_L22060_99 + 4 * $I_L22060_110) = ( 1.0/( 1.0 + -forward_scatter(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103) ) * ( phase_fnc(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103, 3 + 16 * $I_L22060_99 + 4 * $I_L22060_110) + -forward_scatter(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103) ) )
22063.                                     phase_fnc(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103, 4 + 16 * $I_L22060_99 + 4 * $I_L22060_110) = ( 1.0/( 1.0 + -forward_scatter(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103) ) * ( phase_fnc(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103, 4 + 16 * $I_L22060_99 + 4 * $I_L22060_110) + -forward_scatter(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103) ) )
22062.                                     $I_L22062_72 = 1 + $I_L22062_72
22062.                                     if ( $I_L22062_72 >= min( nd_profile, 256 + 256 * $I_L22062_95 ) + -256 * $I_L22062_95 ) exit
22062.                                  enddo
22060.                                  $I_L22060_110 = 1 + $I_L22060_110
22060.                                  if ( $I_L22060_110 >= _rsh( min( n_order_phase, 16 + 16 * $I_L22060_99 ) + -16 * $I_L22060_99, 2 ) ) exit
22060.                               enddo
22060.                               $I_L22060_84 = and( 0xfffffffffffffffcUL, min( n_order_phase, 16 + 16 * $I_L22060_99 ) + -16 * $I_L22060_99 )
22060.                            endif
22060.                            if ( $I_L22060_84 < min( n_order_phase, 16 + 16 * $I_L22060_99 ) + -16 * $I_L22060_99 ) then
22060.                               $I_L22060_105 = 0
22060. !dir$ shortloop16
22060. !dir$ blocking_size( 16, 16 )
22060.                               do
22062.                                  $I_L22062_72 = 0
22062. !dir$ ivdep
22062. !dir$ loop_info (automatic) cache_nt( phase_fnc )
22062. !dir$ blocking_size( 256, 256 )
22062.                                  do
22063.                                     phase_fnc(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103, 1 + $I_L22060_84 + $I_L22060_105 + 16 * $I_L22060_99) = ( 1.0/( 1.0 + -forward_scatter(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103) ) * ( phase_fnc(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103, 1 + $I_L22060_84 + $I_L22060_105 + 16 * $I_L22060_99) + -forward_scatter(1 + $I_L22062_72 + 256 * $I_L22062_95, id_1 + $I_L22061_90 + 16 * $I_L22061_103) ) )
22062.                                     $I_L22062_72 = 1 + $I_L22062_72
22062.                                     if ( $I_L22062_72 >= min( nd_profile, 256 + 256 * $I_L22062_95 ) + -256 * $I_L22062_95 ) exit
22062.                                  enddo
22060.                                  $I_L22060_105 = 1 + $I_L22060_105
22060.                                  if ( $I_L22060_105 >= min( n_order_phase, 16 + 16 * $I_L22060_99 ) + -$I_L22060_84 + -16 * $I_L22060_99 ) exit
22060.                               enddo
22060.                            endif
22061.                            $I_L22061_90 = 1 + $I_L22061_90
22066.                            if ( $I_L22061_90 >= min( 1 + nd_layer + -id_1, 16 + 16 * $I_L22061_103 ) + -16 * $I_L22061_103 ) exit
22066.                         enddo
22062.                         $I_L22062_95 = 1 + $I_L22062_95
22062.                         if ( $I_L22062_95 >= 1 + max( 0, -1 + _rsh( 255 + nd_profile, 8 ) ) ) exit
22062.                      enddo
22060.                      $I_L22060_99 = 1 + $I_L22060_99
22067.                      if ( $I_L22060_99 >= 1 + max( 0, -1 + _rsh( 15 + n_order_phase, 4 ) ) ) exit
22067.                   enddo
22061.                   $I_L22061_103 = 1 + $I_L22061_103
22061.                   if ( $I_L22061_103 >= 1 + max( 0, -1 + _rsh( 16 + nd_layer + -id_1, 4 ) ) ) exit
22061.                enddo
22061.             endif
22061.          endif
22061.       endif
22071.       if ( l_rescale_solar_phf /= .false. ) then
22073.          if ( n_direction > 0 ) then
22073.             $I_L22073_101 = 0
22073.             do
22076.                if ( n_profile > 0 ) then
22076.                   $I_L22076_75 = 0
22076. !dir$ ivdep
22076.                   do
22077.                      p_legendre_ls_m1(1 + $I_L22076_75) = 1.0
22078.                      $p_legendre_ls_WR0_R0 = cos_sol_view(1 + $I_L22076_75, 1 + $I_L22073_101)
22078.                      p_legendre_ls(1 + $I_L22076_75) = $p_legendre_ls_WR0_R0
22079.                      peak(1 + $I_L22076_75) = 1.0 + 3.0 * $p_legendre_ls_WR0_R0
22080.                      $I_L22076_75 = 1 + $I_L22076_75
22076.                      if ( $I_L22076_75 >= n_profile ) exit
22076.                   enddo
22076.                endif
22082.                if ( -2 + n_order_phase_solar >= 0 ) then
22085.                   if ( n_profile > 0 ) then
22082.                      $I_L22082_82 = 0
22082.                      do
22084.                         $cnst1_S7 = 1.0 + -( 1.0/( real( 2 + $I_L22082_82, 8 ) ) )
22085.                         $I_L22085_77 = 0
22085. !dir$ ivdep
22085.                         do
22086.                            $p_legendre_tmp_WR0_R2 = p_legendre_ls(1 + $I_L22085_77)
22087.                            $p_legendre_ls_WR0_R1 = -( $cnst1_S7 * p_legendre_ls_m1(1 + $I_L22085_77) ) + $p_legendre_tmp_WR0_R2 * cos_sol_view(1 + $I_L22085_77, 1 + $I_L22073_101) * ( 1.0 + $cnst1_S7 )
22087.                            p_legendre_ls(1 + $I_L22085_77) = $p_legendre_ls_WR0_R1
22090.                            p_legendre_ls_m1(1 + $I_L22085_77) = $p_legendre_tmp_WR0_R2
22091.                            peak(1 + $I_L22085_77) = peak(1 + $I_L22085_77) + $p_legendre_ls_WR0_R1 * real( 5 + 2 * $I_L22082_82, 8 )
22092.                            $I_L22085_77 = 1 + $I_L22085_77
22085.                            if ( $I_L22085_77 >= n_profile ) exit
22085.                         enddo
22093.                         $I_L22082_82 = 1 + $I_L22082_82
22092.                         if ( $I_L22082_82 >= -1 + n_order_phase_solar ) exit
22092.                      enddo
22092.                   endif
22092.                endif
22099.                if ( nd_layer + -id_1 >= 0 ) then
22100.                   if ( nd_profile > 0 ) then
22099.                      $I_L22099_97 = 0
22099.                      do
22100.                         $I_L22100_93 = 0
22100.                         do
22099.                            $I_L22099_108 = 0
22099. !dir$ shortloop16
22099. !dir$ blocking_size( 2, 2 )
22099.                            do
22100.                               $I_L22100_79 = 0
22100. !dir$ ivdep
22100. !dir$ loop_info (automatic) cache_nt( phase_fnc_solar )
22100. !dir$ blocking_size( 256, 256 )
22100.                               do
22101.                                  phase_fnc_solar(1 + $I_L22100_79 + 256 * $I_L22100_93, id_1 + $I_L22099_108 + 2 * $I_L22099_97, 1 + $I_L22073_101) = ( ( phase_fnc_solar(1 + $I_L22100_79 + 256 * $I_L22100_93, id_1 + $I_L22099_108 + 2 * $I_L22099_97, 1 + $I_L22073_101) + -( peak(1 + $I_L22100_79 + 256 * $I_L22100_93) * forward_solar(1 + $I_L22100_79 + 256 * $I_L22100_93, id_1 + $I_L22099_108 + 2 * $I_L22099_97) ) ) * 1.0/( 1.0 + -forward_scatter(1 + $I_L22100_79 + 256 * $I_L22100_93, id_1 + $I_L22099_108 + 2 * $I_L22099_97) ) )
22100.                                  $I_L22100_79 = 1 + $I_L22100_79
22100.                                  if ( $I_L22100_79 >= min( nd_profile, 256 + 256 * $I_L22100_93 ) + -256 * $I_L22100_93 ) exit
22100.                               enddo
22099.                               $I_L22099_108 = 1 + $I_L22099_108
22099.                               if ( $I_L22099_108 >= min( 1 + nd_layer + -id_1, 2 + 2 * $I_L22099_97 ) + -2 * $I_L22099_97 ) exit
22099.                            enddo
22100.                            $I_L22100_93 = 1 + $I_L22100_93
22104.                            if ( $I_L22100_93 >= 1 + max( 0, -1 + _rsh( 255 + nd_profile, 8 ) ) ) exit
22104.                         enddo
22099.                         $I_L22099_97 = 1 + $I_L22099_97
22099.                         if ( $I_L22099_97 >= 1 + max( 0, -1 + _rsh( 2 + nd_layer + -id_1, 1 ) ) ) exit
22099.                      enddo
22099.                   endif
22099.                endif
22107.                $I_L22073_101 = 1 + $I_L22073_101
22105.                if ( $I_L22073_101 >= n_direction ) exit
22105.             enddo
22105.          endif
22105.       endif
21962.       _free( t$2834 )
22114.       return
22114.       end
22114.       
22132.       
22132.       subroutine rescale_tau_omega( n_profile, i_layer_first, i_layer_last, tau, omega, forward_scatter, nd_profile, nd_layer, id_1 )
22132.       t$731 = nd_profile
22132.       t$732 = id_1
22132.       t$733 = nd_layer
22167.       t$2846 = _zla( 0, nd_profile )
22132.       t$2847 = _zla( 0, nd_profile )
22132.       t$2848 = 1 + nd_layer + -id_1
22167.       t$2849 = _zla( 0, 1 + nd_layer + -id_1 )
22132.       t$2850 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_1 )
22181.       if ( nd_layer + -id_1 >= 0 ) then
22182.          if ( nd_profile > 0 ) then
22181.             $I_L22181_10 = 0
22181.             do
22182.                $I_L22182_8 = 0
22182. !dir$ ivdep
22182.                do
22183.                   tau(1 + $I_L22182_8, id_1 + $I_L22181_10) = tau(1 + $I_L22182_8, id_1 + $I_L22181_10) * ( 1.0 + -( forward_scatter(1 + $I_L22182_8, id_1 + $I_L22181_10) * omega(1 + $I_L22182_8, id_1 + $I_L22181_10) ) )
22185.                   omega(1 + $I_L22182_8, id_1 + $I_L22181_10) = ( omega(1 + $I_L22182_8, id_1 + $I_L22181_10) * ( 1.0 + -forward_scatter(1 + $I_L22182_8, id_1 + $I_L22181_10) ) * 1.0/( 1.0 + -( forward_scatter(1 + $I_L22182_8, id_1 + $I_L22181_10) * omega(1 + $I_L22182_8, id_1 + $I_L22181_10) ) ) )
22187.                   $I_L22182_8 = 1 + $I_L22182_8
22182.                   if ( $I_L22182_8 >= nd_profile ) exit
22182.                enddo
22188.                $I_L22181_10 = 1 + $I_L22181_10
22187.                if ( $I_L22181_10 >= 1 + nd_layer + -id_1 ) exit
22187.             enddo
22187.          endif
22187.       endif
22193.       return
22193.       end
22193.       
22213.       
22213.       subroutine scale_absorb( ierr, n_profile, n_layer, gas_mix_ratio, p, t, i_top, gas_frac_rescaled, i_fnc, p_reference, t_reference, scale_parameter, l_doppler, doppler_correction, nd_profile, nd_layer, nd_scale_variable )
22213.       t$734 = nd_profile
22213.       t$735 = nd_layer
22263.       t$2851 = _zla( 0, nd_profile )
22213.       t$2852 = _zla( 0, nd_profile )
22263.       t$2853 = _zla( 0, nd_layer )
22213.       t$2854 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
22213.       t$736 = nd_scale_variable
22273.       t$2855 = _zla( 0, nd_scale_variable )
22304.       if ( i_fnc == 1 ) then
22305.          if ( nd_layer > 0 ) then
22307.             $SC_scale_parameter_I0 = scale_parameter(2)
22307.             $SC_scale_parameter_I1 = scale_parameter(1)
22306.             if ( nd_profile > 0 ) then
22305.                $I_L22305_44 = 0
22305.                do
22306.                   $I_L22306_36 = 0
22306. !dir$ ivdep
22306.                   do
22307.                      gas_frac_rescaled(1 + $I_L22306_36, 1 + $I_L22305_44) = _expn( $SC_scale_parameter_I0 * log( ( t(1 + $I_L22306_36, 1 + $I_L22305_44) * 1.0/t_reference ) ) + $SC_scale_parameter_I1 * log( ( 1.0/( p_reference + cvmg( doppler_correction, 0.0, l_doppler ) ) * ( p(1 + $I_L22306_36, 1 + $I_L22305_44) + cvmg( doppler_correction, 0.0, l_doppler ) ) ) ) )
22312.                      $I_L22306_36 = 1 + $I_L22306_36
22306.                      if ( $I_L22306_36 >= nd_profile ) exit
22306.                   enddo
22313.                   $I_L22305_44 = 1 + $I_L22305_44
22312.                   if ( $I_L22305_44 >= nd_layer ) exit
22312.                enddo
22312.             endif
22312.          endif
22312.          goto 10
22314.       else if ( i_fnc /= 0 ) then
22316.          if ( i_fnc == 2 ) then
22317.             if ( nd_layer > 0 ) then
22319.                $SC_scale_parameter_I2 = scale_parameter(3)
22319.                $SC_scale_parameter_I0 = scale_parameter(2)
22319.                $SC_scale_parameter_I1 = scale_parameter(1)
22318.                if ( nd_profile > 0 ) then
22317.                   $I_L22317_42 = 0
22317.                   do
22318.                      $I_L22318_34 = 0
22318. !dir$ ivdep
22318.                      do
22319.                         gas_frac_rescaled(1 + $I_L22318_34, 1 + $I_L22317_42) = ( 1.0 + $SC_scale_parameter_I2 * ( -1.0 + ( t(1 + $I_L22318_34, 1 + $I_L22317_42) * 1.0/t_reference ) ) * ( -1.0 + ( t(1 + $I_L22318_34, 1 + $I_L22317_42) * 1.0/t_reference ) ) + $SC_scale_parameter_I0 * ( -1.0 + ( t(1 + $I_L22318_34, 1 + $I_L22317_42) * 1.0/t_reference ) ) ) * _expn( $SC_scale_parameter_I1 * log( ( 1.0/( p_reference + cvmg( doppler_correction, 0.0, l_doppler ) ) * ( p(1 + $I_L22318_34, 1 + $I_L22317_42) + cvmg( doppler_correction, 0.0, l_doppler ) ) ) ) )
22327.                         $I_L22318_34 = 1 + $I_L22318_34
22318.                         if ( $I_L22318_34 >= nd_profile ) exit
22318.                      enddo
22328.                      $I_L22317_42 = 1 + $I_L22317_42
22327.                      if ( $I_L22317_42 >= nd_layer ) exit
22327.                   enddo
22327.                endif
22327.             endif
22327.             goto 10
22329.          else if ( i_fnc == 3 ) then
22332.             if ( nd_layer > 0 ) then
22334.                $SC_scale_parameter_I3 = scale_parameter(4)
22334.                $SC_scale_parameter_I2 = scale_parameter(3)
22334.                $SC_scale_parameter_I0 = scale_parameter(2)
22334.                $SC_scale_parameter_I1 = scale_parameter(1)
22333.                if ( nd_profile > 0 ) then
22332.                   $I_L22332_40 = 0
22332.                   do
22333.                      $I_L22333_32 = 0
22333. !dir$ ivdep
22333.                      do
22334.                         gas_frac_rescaled(1 + $I_L22333_32, 1 + $I_L22332_40) = ( 1.0 + $SC_scale_parameter_I3 * ( -1.0 + ( t(1 + $I_L22333_32, 1 + $I_L22332_40) * 1.0/t_reference ) ) * ( -1.0 + ( t(1 + $I_L22333_32, 1 + $I_L22332_40) * 1.0/t_reference ) ) + $SC_scale_parameter_I2 * ( -1.0 + ( t(1 + $I_L22333_32, 1 + $I_L22332_40) * 1.0/t_reference ) ) ) * _expn( $SC_scale_parameter_I1 * log( ( 1.0/( p_reference + $SC_scale_parameter_I0 ) * ( $SC_scale_parameter_I0 + p(1 + $I_L22333_32, 1 + $I_L22332_40) ) ) ) )
22342.                         $I_L22333_32 = 1 + $I_L22333_32
22333.                         if ( $I_L22333_32 >= nd_profile ) exit
22333.                      enddo
22343.                      $I_L22332_40 = 1 + $I_L22332_40
22342.                      if ( $I_L22332_40 >= nd_layer ) exit
22342.                   enddo
22342.                endif
22342.             endif
22342.    10       continue
22352.             if ( nd_layer > 0 ) then
22353.                if ( nd_profile > 0 ) then
22352.                   $I_L22352_46 = 0
22352.                   do
22353.                      $I_L22353_38 = 0
22353. !dir$ ivdep
22353.                      do
22354.                         gas_frac_rescaled(1 + $I_L22353_38, 1 + $I_L22352_46) = max( 0.0, gas_frac_rescaled(1 + $I_L22353_38, 1 + $I_L22352_46) * gas_mix_ratio(1 + $I_L22353_38, 1 + $I_L22352_46) )
22356.                         $I_L22353_38 = 1 + $I_L22353_38
22353.                         if ( $I_L22353_38 >= nd_profile ) exit
22353.                      enddo
22357.                      $I_L22352_46 = 1 + $I_L22352_46
22356.                      if ( $I_L22352_46 >= nd_layer ) exit
22356.                   enddo
22356.                endif
22356.             endif
22356.          else
22345.             _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$738,  _substr(t$737,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: An illegal type of scaling has been given.', 0x800600000000L ) ) )
22347.             ierr = 1
22347.          endif
22347.       endif
22362.       return
22362.       end
22362.       
22383.       
22383.       subroutine set_cloud_geometry( n_profile, n_layer, l_global_cloud_top, n_cloud_top_global, w_cloud, n_cloud_top, n_cloud_profile, i_cloud_profile, nd_profile, nd_layer, id_ct )
22383.       t$739 = nd_profile
22383.       t$740 = id_ct
22383.       t$741 = nd_layer
22422.       t$2856 = _zla( 0, nd_profile )
22383.       t$2857 = _zla( 0, nd_profile )
22383.       t$2858 = 1 + nd_layer + -id_ct
22422.       t$2859 = _zla( 0, 1 + nd_layer + -id_ct )
22383.       t$2860 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
22443.       if ( n_layer + -id_ct >= 0 ) then
22445.          if ( n_profile > 0 ) then
22443.             $I_L22443_14 = 0
22443. !dir$ ivdep
22443.             do
22444.                n_cloud_profile(id_ct + $I_L22443_14) = 0
22451.                $I_L22443_14 = 1 + $I_L22443_14
22450.                if ( $I_L22443_14 >= 1 + n_layer + -id_ct ) exit
22450.             enddo
22443.             $I_L22443_14 = 0
22443.             do
22445.                $I_L22445_10 = 0
22445. !dir$ ivdep
22445.                do
22446.                   if ( w_cloud(1 + $I_L22445_10, id_ct + $I_L22443_14) > 0.0 ) then
22447.                      n_cloud_profile(id_ct + $I_L22443_14) = 1 + n_cloud_profile(id_ct + $I_L22443_14)
22448.                      i_cloud_profile(n_cloud_profile(id_ct + $I_L22443_14), id_ct + $I_L22443_14) = ( 1 + $I_L22445_10 )
22448.                   endif
22450.                   $I_L22445_10 = 1 + $I_L22445_10
22449.                   if ( $I_L22445_10 >= n_profile ) exit
22449.                enddo
22451.                $I_L22443_14 = 1 + $I_L22443_14
22450.                if ( $I_L22443_14 >= 1 + n_layer + -id_ct ) exit
22450.             enddo
22450.          else
22443.             $I_L22443_12 = 0
22443. !dir$ ivdep
22443.             do
22444.                n_cloud_profile(id_ct + $I_L22443_12) = 0
22451.                $I_L22443_12 = 1 + $I_L22443_12
22450.                if ( $I_L22443_12 >= 1 + n_layer + -id_ct ) exit
22450.             enddo
22450.          endif
22450.       endif
22453.       if ( l_global_cloud_top /= .false. ) then
22454.          n_cloud_top = n_cloud_top_global
22454.       else
22456.          n_cloud_top = id_ct
22457.          if ( ( id_ct < n_layer .and. n_cloud_profile(id_ct) == 0 ) /= .false. ) then
22455.             do
22459.                n_cloud_top = 1 + n_cloud_top
22459.                if ( ( n_cloud_top < n_layer .and. n_cloud_profile(n_cloud_top) == 0 ) == .false. ) exit
22459.             enddo
22459.          endif
22459.       endif
22466.       return
22466.       end
22466.       
22486.       
22486.       subroutine set_cloud_pointer( ierr, n_condensed, type_condensed, i_cloud_representation, l_drop, l_ice, i_phase_cmp, i_cloud_type, l_cloud_cmp, nd_cloud_component )
22486.       t$742 = nd_cloud_component
22520.       t$2861 = _zla( 0, nd_cloud_component )
22547.       if ( n_condensed > 0 ) then
22547.          $I_L22547_4 = 0
22547. !dir$ ivdep
22547.          do
22549.             i_cloud_type(1 + $I_L22547_4) = 0
22551.             if ( i_cloud_representation == 1 ) then
22553.                if ( type_condensed(1 + $I_L22547_4) == 1 ) then
22554.                   i_cloud_type(1 + $I_L22547_4) = 1
22555.                else if ( type_condensed(1 + $I_L22547_4) == 2 ) then
22556.                   i_cloud_type(1 + $I_L22547_4) = 1
22556.                endif
22559.             else if ( i_cloud_representation == 2 ) then
22561.                if ( type_condensed(1 + $I_L22547_4) == 1 ) then
22562.                   i_cloud_type(1 + $I_L22547_4) = 1
22563.                else if ( type_condensed(1 + $I_L22547_4) == 2 ) then
22564.                   i_cloud_type(1 + $I_L22547_4) = 2
22564.                endif
22564.             else if ( i_cloud_representation == 3 ) then
22569.                if ( type_condensed(1 + $I_L22547_4) == 1 ) then
22570.                   i_cloud_type(1 + $I_L22547_4) = 1
22571.                else if ( type_condensed(1 + $I_L22547_4) == 2 ) then
22572.                   i_cloud_type(1 + $I_L22547_4) = 1
22572.                else if ( type_condensed(1 + $I_L22547_4) == 3 ) then
22574.                   i_cloud_type(1 + $I_L22547_4) = 2
22574.                else if ( type_condensed(1 + $I_L22547_4) == 4 ) then
22576.                   i_cloud_type(1 + $I_L22547_4) = 2
22576.                endif
22576.             else if ( i_cloud_representation == 4 ) then
22581.                if ( type_condensed(1 + $I_L22547_4) == 1 ) then
22582.                   i_cloud_type(1 + $I_L22547_4) = 1
22583.                else if ( type_condensed(1 + $I_L22547_4) == 2 ) then
22584.                   i_cloud_type(1 + $I_L22547_4) = 2
22584.                else if ( type_condensed(1 + $I_L22547_4) == 3 ) then
22586.                   i_cloud_type(1 + $I_L22547_4) = 3
22586.                else if ( type_condensed(1 + $I_L22547_4) == 4 ) then
22588.                   i_cloud_type(1 + $I_L22547_4) = 4
22588.                endif
22588.             endif
22594.             if ( i_cloud_type(1 + $I_L22547_4) == 0 ) then
22595.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$744,  _substr(t$743,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: A component is not compatible with the representation of clouds selected.', 0x800600000000L ) ) )
22598.                ierr = 1
22598.                goto 10
22598.             endif
22602.             if ( type_condensed(1 + $I_L22547_4) == 1 ) then
22604.                i_phase_cmp(1 + $I_L22547_4) = 1
22605.                l_cloud_cmp(1 + $I_L22547_4) = l_drop
22607.             else if ( type_condensed(1 + $I_L22547_4) == 2 ) then
22609.                i_phase_cmp(1 + $I_L22547_4) = 2
22610.                l_cloud_cmp(1 + $I_L22547_4) = l_ice
22610.             else if ( type_condensed(1 + $I_L22547_4) == 3 ) then
22614.                i_phase_cmp(1 + $I_L22547_4) = 1
22615.                l_cloud_cmp(1 + $I_L22547_4) = l_drop
22615.             else if ( type_condensed(1 + $I_L22547_4) == 4 ) then
22619.                i_phase_cmp(1 + $I_L22547_4) = 2
22620.                l_cloud_cmp(1 + $I_L22547_4) = l_ice
22620.             endif
22624.             $I_L22547_4 = 1 + $I_L22547_4
22622.             if ( $I_L22547_4 >= n_condensed ) exit
22622.          enddo
22622.       endif
22622.    10 continue
22629.       return
22629.       end
22629.       
22652.       
22652.       subroutine set_dirn_weights( n_profile, ms, ls_trunc, up_lm, n_direction, mu_v, azim_factor, n_viewing_level, i_rad_layer, frac_rad_layer, i, n_red_eigensystem, mu, eig_vec, isolir, z_sol, mu_0, l_ir_source_quad, diff_planck, upm_c, k_sol, tau, omega, phase_fnc, weight_u, radiance, nd_profile, nd_layer, nd_direction, nd_viewing_level, nd_red_eigensystem, nd_max_order )
22652.       t$746 = nd_profile
22652.       t$753 = ( 1 + nd_max_order )
22652.       t$747 = nd_direction
22808.       t$2862 = _zla( 0, nd_profile )
22652.       t$2863 = _zla( 0, nd_profile )
22808.       t$2864 = _zla( 0, ( 1 + nd_max_order ) )
22652.       t$2865 = _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_max_order ) )
22808.       t$2866 = _zla( 0, nd_direction )
22652.       t$2867 = _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_max_order ) ) * _zla( 0, nd_direction )
22652.       t$2868 = _zla( 0, nd_profile ) * _zla( 0, nd_direction )
22652.       t$745 = nd_viewing_level
22701.       t$2869 = _zla( 0, nd_viewing_level )
22652.       t$750 = nd_red_eigensystem
22731.       t$2870 = _zla( 0, nd_red_eigensystem )
22652.       t$2871 = _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem )
22652.       t$751 = ( 2 * nd_red_eigensystem )
22733.       t$2872 = _zla( 0, ( 2 * nd_red_eigensystem ) )
22652.       t$2873 = _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) )
22652.       t$2874 = _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem ) * _zla( 0, ( 2 * nd_red_eigensystem ) )
22652.       t$752 = ( 1 + ls_trunc + -ms )
22737.       t$2875 = _zla( 0, ( 1 + ls_trunc + -ms ) )
22652.       t$2876 = _zla( 0, nd_profile ) * _zla( 0, ( 1 + ls_trunc + -ms ) )
22652.       t$748 = nd_layer
22743.       t$2877 = _zla( 0, nd_layer )
22652.       t$2878 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
22652.       t$2879 = _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) )
22652.       t$749 = nd_max_order
22652.       t$2880 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
22729.       t$2881 = _zla( 0, nd_max_order )
22652.       t$2882 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_max_order )
22652.       t$2883 = _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level )
22652.       t$2884 = _zla( 0, nd_profile ) * _zla( 0, nd_direction ) * _zla( 0, nd_viewing_level )
22652.       t$2885 = _zla( 0, nd_profile ) * _zla( 0, nd_direction ) * _zla( 0, nd_viewing_level ) * _zla( 0, ( 2 * nd_red_eigensystem ) )
22652.       t$2886 = _zla( 0, nd_profile ) * _zla( 0, nd_direction ) * _zla( 0, nd_viewing_level )
22820.       t$2889 = 8 * _zla( 0, nd_profile )
22797.       t$2890 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) ) / 8
22797.       t$2892 = t$2890 + 8 * _zla( 0, nd_profile )
22799.       t$2893 = 8 * ( 7 + t$2890 + 8 * _zla( 0, nd_profile ) ) / 8
22799.       t$2895 = t$2893 + 8 * _zla( 0, nd_profile )
22795.       t$2896 = 8 * ( 7 + t$2893 + 8 * _zla( 0, nd_profile ) ) / 8
22795.       t$2898 = t$2896 + 8 * _zla( 0, nd_profile )
22791.       t$2900 = t$2896 + 12 * _zla( 0, nd_profile )
22785.       t$2902 = t$2896 + 16 * _zla( 0, nd_profile )
22815.       t$2903 = 8 * ( 7 + t$2896 + 16 * _zla( 0, nd_profile ) ) / 8
22815.       t$2905 = t$2903 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem )
22812.       t$2906 = 8 * ( 7 + t$2903 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem ) ) / 8
22812.       t$2908 = t$2906 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem )
22810.       t$2909 = 8 * ( 7 + t$2906 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem ) ) / 8
22810.       t$2911 = t$2909 + 8 * _zla( 0, nd_profile )
22804.       t$2912 = 8 * ( 7 + t$2909 + 8 * _zla( 0, nd_profile ) ) / 8
22804.       t$2914 = t$2912 + 8 * _zla( 0, nd_profile )
22801.       t$2915 = 8 * ( 7 + t$2912 + 8 * _zla( 0, nd_profile ) ) / 8
22801.       t$2917 = t$2915 + 8 * _zla( 0, nd_profile )
22818.       t$2918 = 8 * ( 7 + t$2915 + 8 * _zla( 0, nd_profile ) ) / 8
22818.       t$2920 = t$2918 + 8 * _zla( 0, nd_profile )
22823.       t$2921 = 8 * ( 7 + t$2918 + 8 * _zla( 0, nd_profile ) ) / 8
22823.       t$2923 = t$2921 + 8 * _zla( 0, nd_profile )
22652.       t$2887 = int( _alloc( t$2921 + 8 * _zla( 0, nd_profile ) ), 8 )
22820.       t$2888 = t$2887
22797.       t$2891 = t$2890 + t$2887
22799.       t$2894 = t$2893 + t$2887
22795.       t$2897 = t$2896 + t$2887
22791.       t$2899 = t$2896 + t$2887 + 8 * _zla( 0, nd_profile )
22785.       t$2901 = t$2896 + t$2887 + 12 * _zla( 0, nd_profile )
22815.       t$2904 = t$2903 + t$2887
22812.       t$2907 = t$2906 + t$2887
22810.       t$2910 = t$2909 + t$2887
22804.       t$2913 = t$2912 + t$2887
22801.       t$2916 = t$2915 + t$2887
22818.       t$2919 = t$2918 + t$2887
22823.       t$2922 = t$2921 + t$2887
22859.       if ( n_direction > 0 ) then
22859.          $I_L22859_420 = 0
22859.          do
22864.             $n_list_up_S2 = 0
22865.             $n_list_down_S3 = 0
22866.             if ( n_profile > 0 ) then
22866.                $I_L22866_328 = 0
22866. !dir$ ivdep
22866.                do
22867.                   if ( mu_v(1 + $I_L22866_328, 1 + $I_L22859_420) > 0.0 ) then
22868.                      $n_list_up_S2 = 1 + $n_list_up_S2
22869.                      list_up($n_list_up_S2) = ( 1 + $I_L22866_328 )
22870.                   else if ( mu_v(1 + $I_L22866_328, 1 + $I_L22859_420) < 0.0 ) then
22871.                      $n_list_down_S3 = 1 + $n_list_down_S3
22872.                      list_down($n_list_down_S3) = ( 1 + $I_L22866_328 )
22872.                   endif
22874.                   $I_L22866_328 = 1 + $I_L22866_328
22873.                   if ( $I_L22866_328 >= n_profile ) exit
22873.                enddo
22873.             endif
22879.             if ( isolir == 1 ) then
22881.                if ( ms == 0 ) then
22885.                   if ( n_profile > 0 ) then
22885.                      $I_L22885_330 = 0
22885. !dir$ ivdep
22885.                      do
22886.                         ls_sum_s(1 + $I_L22885_330) = z_sol(1 + $I_L22885_330, 1) * up_lm(1 + $I_L22885_330, 1, 1 + $I_L22859_420)
22887.                         $I_L22885_330 = 1 + $I_L22885_330
22885.                         if ( $I_L22885_330 >= n_profile ) exit
22885.                      enddo
22885.                   endif
22888.                else if ( n_profile > 0 ) then
22889.                   $I_L22889_332 = 0
22889. !dir$ ivdep
22889.                   do
22890.                      ls_sum_s(1 + $I_L22889_332) = up_lm(1 + $I_L22889_332, 1, 1 + $I_L22859_420) * z_sol(1 + $I_L22889_332, 1) * phase_fnc(1 + $I_L22889_332, i, ms)
22892.                      $I_L22889_332 = 1 + $I_L22889_332
22889.                      if ( $I_L22889_332 >= n_profile ) exit
22889.                   enddo
22889.                endif
22894.                if ( ls_trunc + -ms > 0 ) then
22895.                   if ( n_profile > 0 ) then
22894.                      $I_L22894_414 = 0
22894.                      do
22895.                         $I_L22895_408 = 0
22895.                         do
22894.                            $I_L22894_402 = 0
22894. !dir$ shortloop16
22894. !dir$ blocking_size( 2, 2 )
22894.                            do
22895.                               $I_L22895_334 = 0
22895. !dir$ ivdep
22895. !dir$ blocking_size( 256, 256 )
22895.                               do
22896.                                  ls_sum_s(1 + $I_L22895_334 + 256 * $I_L22895_408) = ls_sum_s(1 + $I_L22895_334 + 256 * $I_L22895_408) + z_sol(1 + $I_L22895_334 + 256 * $I_L22895_408, 2 + $I_L22894_402 + 2 * $I_L22894_414) * phase_fnc(1 + $I_L22895_334 + 256 * $I_L22895_408, i, 1 + ms + $I_L22894_402 + 2 * $I_L22894_414) * up_lm(1 + $I_L22895_334 + 256 * $I_L22895_408, 2 + $I_L22894_402 + 2 * $I_L22894_414, 1 + $I_L22859_420)
22895.                                  $I_L22895_334 = 1 + $I_L22895_334
22895.                                  if ( $I_L22895_334 >= min( n_profile, 256 + 256 * $I_L22895_408 ) + -256 * $I_L22895_408 ) exit
22895.                               enddo
22894.                               $I_L22894_402 = 1 + $I_L22894_402
22894.                               if ( $I_L22894_402 >= min( ( ls_trunc + -ms ), 2 + 2 * $I_L22894_414 ) + -2 * $I_L22894_414 ) exit
22894.                            enddo
22895.                            $I_L22895_408 = 1 + $I_L22895_408
22898.                            if ( $I_L22895_408 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
22898.                         enddo
22894.                         $I_L22894_414 = 1 + $I_L22894_414
22894.                         if ( $I_L22894_414 >= 1 + max( 0, -1 + _rsh( 1 + ls_trunc + -ms, 1 ) ) ) exit
22894.                      enddo
22894.                   endif
22894.                endif
22894.             endif
22904.             if ( n_red_eigensystem > 0 ) then
22904.                $I_L22904_418 = 0
22904.                do
22905.                   if ( ms == 0 ) then
22906.                      if ( n_profile > 0 ) then
22906.                         $I_L22906_337 = 0
22906. !dir$ ivdep
22906.                         do
22907.                            $ls_sum_p_WR0_R0 = eig_vec(1 + $I_L22906_337, 1, 1 + $I_L22904_418) * up_lm(1 + $I_L22906_337, 1, 1 + $I_L22859_420)
22907.                            ls_sum_p(1 + $I_L22906_337, 1 + $I_L22904_418) = $ls_sum_p_WR0_R0
22908.                            ls_sum_m(1 + $I_L22906_337, 1 + $I_L22904_418) = $ls_sum_p_WR0_R0
22909.                            $I_L22906_337 = 1 + $I_L22906_337
22906.                            if ( $I_L22906_337 >= n_profile ) exit
22906.                         enddo
22906.                      endif
22910.                   else if ( n_profile > 0 ) then
22911.                      $I_L22911_339 = 0
22911. !dir$ ivdep
22911.                      do
22912.                         $ls_sum_p_WR0_R1 = eig_vec(1 + $I_L22911_339, 1, 1 + $I_L22904_418) * phase_fnc(1 + $I_L22911_339, i, ms) * up_lm(1 + $I_L22911_339, 1, 1 + $I_L22859_420)
22912.                         ls_sum_p(1 + $I_L22911_339, 1 + $I_L22904_418) = $ls_sum_p_WR0_R1
22914.                         ls_sum_m(1 + $I_L22911_339, 1 + $I_L22904_418) = $ls_sum_p_WR0_R1
22915.                         $I_L22911_339 = 1 + $I_L22911_339
22911.                         if ( $I_L22911_339 >= n_profile ) exit
22911.                      enddo
22911.                   endif
22917.                   if ( ls_trunc + -ms > 0 ) then
22919.                      if ( n_profile > 0 ) then
22917.                         $I_L22917_416 = 0
22917.                         do
22919.                            $I_L22919_410 = 0
22919.                            do
22917.                               $I_L22917_405 = 0
22917. !dir$ shortloop16
22917. !dir$ blocking_size( 2, 2 )
22917.                               do
22919.                                  $I_L22919_341 = 0
22919. !dir$ ivdep
22919. !dir$ blocking_size( 256, 256 )
22919.                                  do
22920.                                     $x_S13 = phase_fnc(1 + $I_L22919_341 + 256 * $I_L22919_410, i, 1 + ms + $I_L22917_405 + 2 * $I_L22917_416) * eig_vec(1 + $I_L22919_341 + 256 * $I_L22919_410, 2 + $I_L22917_405 + 2 * $I_L22917_416, 1 + $I_L22904_418) * up_lm(1 + $I_L22919_341 + 256 * $I_L22919_410, 2 + $I_L22917_405 + 2 * $I_L22917_416, 1 + $I_L22859_420)
22922.                                     ls_sum_p(1 + $I_L22919_341 + 256 * $I_L22919_410, 1 + $I_L22904_418) = $x_S13 + ls_sum_p(1 + $I_L22919_341 + 256 * $I_L22919_410, 1 + $I_L22904_418)
22923.                                     ls_sum_m(1 + $I_L22919_341 + 256 * $I_L22919_410, 1 + $I_L22904_418) = ls_sum_m(1 + $I_L22919_341 + 256 * $I_L22919_410, 1 + $I_L22904_418) + $x_S13 * real( 1 + -2 * mod( ( 1 + $I_L22917_405 + 2 * ms + 2 * $I_L22917_416 ), 2 ), 8 )
22919.                                     $I_L22919_341 = 1 + $I_L22919_341
22919.                                     if ( $I_L22919_341 >= min( n_profile, 256 + 256 * $I_L22919_410 ) + -256 * $I_L22919_410 ) exit
22919.                                  enddo
22917.                                  $I_L22917_405 = 1 + $I_L22917_405
22917.                                  if ( $I_L22917_405 >= min( ( ls_trunc + -ms ), 2 + 2 * $I_L22917_416 ) + -2 * $I_L22917_416 ) exit
22917.                               enddo
22919.                               $I_L22919_410 = 1 + $I_L22919_410
22924.                               if ( $I_L22919_410 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
22924.                            enddo
22917.                            $I_L22917_416 = 1 + $I_L22917_416
22917.                            if ( $I_L22917_416 >= 1 + max( 0, -1 + _rsh( 1 + ls_trunc + -ms, 1 ) ) ) exit
22917.                         enddo
22917.                      endif
22917.                   endif
22926.                   $I_L22904_418 = 1 + $I_L22904_418
22925.                   if ( $I_L22904_418 >= n_red_eigensystem ) exit
22925.                enddo
22925.             endif
22929.             if ( n_viewing_level > 0 ) then
22929.                $I_L22929_412 = 0
22929.                do
22932.                   if ( 2 * n_red_eigensystem > 0 ) then
22933.                      if ( n_profile > 0 ) then
22932.                         $I_L22932_390 = 0
22932.                         do
22933.                            $I_L22933_344 = 0
22933. !dir$ ivdep
22933.                            do
22934.                               weight_u(1 + $I_L22933_344, 1 + $I_L22929_412, 1 + $I_L22859_420, 1 + $I_L22932_390) = 0.0
22935.                               $I_L22933_344 = 1 + $I_L22933_344
22933.                               if ( $I_L22933_344 >= n_profile ) exit
22933.                            enddo
22936.                            $I_L22932_390 = 1 + $I_L22932_390
22935.                            if ( $I_L22932_390 >= ( 2 * n_red_eigensystem ) ) exit
22935.                         enddo
22935.                      endif
22935.                   endif
22941.                   if ( i >= i_rad_layer(1 + $I_L22929_412) ) then
22948.                      if ( i > i_rad_layer(1 + $I_L22929_412) ) then
22950.                         if ( $n_list_up_S2 > 0 ) then
22952.                            $SC_frac_rad_layer_I0 = frac_rad_layer(1 + $I_L22929_412)
22952.                            $SC_i_rad_layer_I1 = i_rad_layer(1 + $I_L22929_412)
22950.                            $I_L22950_346 = 0
22950. !dir$ ivdep
22950.                            do
22951.                               $l_S18 = list_up(1 + $I_L22950_346)
22952.                               m_slant_depth_near($l_S18) = tau($l_S18, $SC_i_rad_layer_I1) * ( 1.0 + -$SC_frac_rad_layer_I0 )
22955.                               $I_L22950_346 = 1 + $I_L22950_346
22950.                               if ( $I_L22950_346 >= $n_list_up_S2 ) exit
22950.                            enddo
22950.                         endif
22956.                         $t_S19 = 1 + i_rad_layer(1 + $I_L22929_412)
22956.                         if ( i + -$t_S19 > 0 ) then
22957.                            if ( $n_list_up_S2 > 0 ) then
22956.                               $I_L22956_392 = 0
22956.                               do
22957.                                  $I_L22957_352 = 0
22957. !dir$ ivdep
22957.                                  do
22958.                                     $l_S21 = list_up(1 + $I_L22957_352)
22959.                                     m_slant_depth_near($l_S21) = _vu_plus( m_slant_depth_near($l_S21), tau($l_S21, $t_S19 + $I_L22956_392) )
22961.                                     $I_L22957_352 = 1 + $I_L22957_352
22957.                                     if ( $I_L22957_352 >= $n_list_up_S2 ) exit
22957.                                  enddo
22962.                                  $I_L22956_392 = 1 + $I_L22956_392
22961.                                  if ( $I_L22956_392 >= ( i + -$t_S19 ) ) exit
22961.                               enddo
22961.                            endif
22961.                         endif
22963.                         if ( $n_list_up_S2 > 0 ) then
22963.                            $I_L22963_354 = 0
22963. !dir$ unroll 2
22963.                            do
22964.                               $l_S24 = list_up(1 + $I_L22963_354)
22967.                               m_slant_depth_inc($l_S24) = -( tau($l_S24, i) * 1.0/mu_v($l_S24, 1 + $I_L22859_420) )
22968.                               tau_i($l_S24) = tau($l_S24, i)
22969.                               frac_tau_i($l_S24) = 1.0
22965.                               $SCF_P1 = 1.0/mu_v($l_S24, 1 + $I_L22859_420)
22965.                               m_slant_depth_near($l_S24) = -( m_slant_depth_near($l_S24) * $SCF_P1 )
22970.                               $I_L22963_354 = 1 + $I_L22963_354
22963.                               if ( $I_L22963_354 >= $n_list_up_S2 ) exit
22963.                            enddo
22963.                         endif
22971.                         if ( isolir == 1 ) then
22972.                            if ( $n_list_up_S2 > 0 ) then
22972.                               $I_L22972_356 = 0
22972. !dir$ ivdep
22972.                               do
22973.                                  $l_S26 = list_up(1 + $I_L22972_356)
22974.                                  trans_top($l_S26) = 1.0
22975.                                  $I_L22972_356 = 1 + $I_L22972_356
22972.                                  if ( $I_L22972_356 >= $n_list_up_S2 ) exit
22972.                               enddo
22972.                            endif
22972.                         endif
22977.                      else if ( i_rad_layer(1 + $I_L22929_412) + -i == 0 ) then
22979.                         if ( $n_list_up_S2 > 0 ) then
22982.                            $SC_frac_rad_layer_I0 = frac_rad_layer(1 + $I_L22929_412)
22979.                            $I_L22979_348 = 0
22979. !dir$ ivdep
22979.                            do
22980.                               $l_S28 = list_up(1 + $I_L22979_348)
22981.                               m_slant_depth_near($l_S28) = 0.0
22982.                               frac_tau_i($l_S28) = 1.0 + -$SC_frac_rad_layer_I0
22983.                               $SVU_P0 = tau($l_S28, i) * ( 1.0 + -$SC_frac_rad_layer_I0 )
22983.                               tau_i($l_S28) = $SVU_P0
22984.                               m_slant_depth_inc($l_S28) = -( $SVU_P0 * 1.0/mu_v($l_S28, 1 + $I_L22859_420) )
22985.                               $I_L22979_348 = 1 + $I_L22979_348
22979.                               if ( $I_L22979_348 >= $n_list_up_S2 ) exit
22979.                            enddo
22979.                         endif
22986.                         if ( isolir == 1 ) then
22987.                            if ( $n_list_up_S2 > 0 ) then
22989.                               $SC_frac_rad_layer_I0 = frac_rad_layer(1 + $I_L22929_412)
22987.                               $I_L22987_350 = 0
22987. !dir$ ivdep
22987.                               do
22988.                                  $l_S30 = list_up(1 + $I_L22987_350)
22989.                                  trans_top($l_S30) = _expn( -( tau($l_S30, i) * $SC_frac_rad_layer_I0 * 1.0/mu_0($l_S30) ) )
22991.                                  $I_L22987_350 = 1 + $I_L22987_350
22987.                                  if ( $I_L22987_350 >= $n_list_up_S2 ) exit
22987.                               enddo
22987.                            endif
22987.                         endif
22987.                      endif
22996.                      if ( isolir == 1 ) then
22998.                         if ( $n_list_up_S2 > 0 ) then
22998.                            $I_L22998_358 = 0
22998. !dir$ ivdep
22998.                            do
22999.                               $l_S32 = list_up(1 + $I_L22998_358)
23000.                               geom_solar($l_S32) = ( mu_0($l_S32) * 1.0/( mu_0($l_S32) + mu_v($l_S32, 1 + $I_L22859_420) ) ) * ( 1.0 + -_expn( m_slant_depth_inc($l_S32) + -( tau_i($l_S32) * 1.0/mu_0($l_S32) ) ) ) * _expn( m_slant_depth_near($l_S32) )
23003.                               $I_L22998_358 = 1 + $I_L22998_358
22998.                               if ( $I_L22998_358 >= $n_list_up_S2 ) exit
22998.                            enddo
23010.                            $I_L23010_360 = 0
23010. !dir$ ivdep
23010.                            do
23011.                               $l_S34 = list_up(1 + $I_L23010_360)
23012.                               radiance($l_S34, 1 + $I_L22929_412, 1 + $I_L22859_420) = _vu_plus( radiance($l_S34, 1 + $I_L22929_412, 1 + $I_L22859_420), azim_factor($l_S34, 1 + $I_L22859_420) * omega($l_S34, i) * ls_sum_s($l_S34) * geom_solar($l_S34) * trans_top($l_S34) )
23015.                               $I_L23010_360 = 1 + $I_L23010_360
23010.                               if ( $I_L23010_360 >= $n_list_up_S2 ) exit
23010.                            enddo
23010.                         endif
23016.                      else if ( isolir == 2 ) then
23017.                         if ( ms == 0 ) then
23018.                            if ( l_ir_source_quad /= .false. ) then
23019.                               _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'not done', 0x800600000000L ) ) )
23020.                            else if ( $n_list_up_S2 > 0 ) then
23021.                               $I_L23021_362 = 0
23021. !dir$ ivdep
23021.                               do
23022.                                  $l_S36 = list_up(1 + $I_L23021_362)
23027.                                  if ( m_slant_depth_inc($l_S36) < -1.4901161193847656e-8 ) then
23028.                                     $x_S37 = ( _expn( m_slant_depth_near($l_S36) ) * 1.0/m_slant_depth_inc($l_S36) * ( 1.0 + -_expn( m_slant_depth_inc($l_S36) ) ) )
23028.                                  else
23034.                                     $x_S37 = -( ( 1.0 + 5.0e-1 * m_slant_depth_inc($l_S36) ) * _expn( m_slant_depth_near($l_S36) ) )
23034.                                  endif
23037.                                  radiance($l_S36, 1 + $I_L22929_412, 1 + $I_L22859_420) = _vu_plus( radiance($l_S36, 1 + $I_L22929_412, 1 + $I_L22859_420), -( $x_S37 * frac_tau_i($l_S36) * 1.0/( 1.0 + -( phase_fnc($l_S36, i, 1) * omega($l_S36, i) ) ) * ( 3.1830988618379069e-1 * diff_planck($l_S36, i) ) ) )
23041.                                  $I_L23021_362 = 1 + $I_L23021_362
23036.                                  if ( $I_L23021_362 >= $n_list_up_S2 ) exit
23036.                               enddo
23036.                            endif
23036.                         endif
23036.                      endif
23047.                      if ( n_red_eigensystem > 0 ) then
23048.                         if ( $n_list_up_S2 > 0 ) then
23047.                            $I_L23047_394 = 0
23047.                            do
23048.                               $I_L23048_364 = 0
23048. !dir$ ivdep
23048.                               do
23049.                                  $l_S39 = list_up(1 + $I_L23048_364)
23054.                                  $d_mu_S41 = mu($l_S39, 1 + $I_L23047_394) + -mu_v($l_S39, 1 + $I_L22859_420)
23055.                                  $eta_S43 = ( 2.2204460492503131e-16 * 1.0/( $d_mu_S41 + sign( 1.4901161193847656e-8, $d_mu_S41 ) ) )
23056.                                  $x_S42 = ( tau_i($l_S39) * 1.0/( mu($l_S39, 1 + $I_L23047_394) * mu_v($l_S39, 1 + $I_L22859_420) ) )
23058.                                  geom_integ_p($l_S39) = _expn( m_slant_depth_near($l_S39) ) * ( mu($l_S39, 1 + $I_L23047_394) * 1.0/( $d_mu_S41 + $eta_S43 ) ) * ( -_expn( m_slant_depth_inc($l_S39) ) + ( 1.0 + -( $x_S42 * $eta_S43 * ( 1.0 + 4.0 * $d_mu_S41 * $x_S42 ) ) ) * _expn( -( tau_i($l_S39) * 1.0/mu($l_S39, 1 + $I_L23047_394) ) ) )
23062.                                  geom_integ_m($l_S39) = _expn( m_slant_depth_near($l_S39) ) * ( -_expn( m_slant_depth_inc($l_S39) + -( tau($l_S39, i) * 1.0/mu($l_S39, 1 + $I_L23047_394) ) ) + _expn( -( ( tau($l_S39, i) + -tau_i($l_S39) ) * 1.0/mu($l_S39, 1 + $I_L23047_394) ) ) ) * ( mu($l_S39, 1 + $I_L23047_394) * 1.0/( mu($l_S39, 1 + $I_L23047_394) + mu_v($l_S39, 1 + $I_L22859_420) ) )
23067.                                  $I_L23048_364 = 1 + $I_L23048_364
23048.                                  if ( $I_L23048_364 >= $n_list_up_S2 ) exit
23048.                               enddo
23073.                               $I_L23073_366 = 0
23073. !dir$ ivdep
23073.                               do
23074.                                  $l_S45 = list_up(1 + $I_L23073_366)
23075.                                  weight_u($l_S45, 1 + $I_L22929_412, 1 + $I_L22859_420, 1 + $I_L23047_394) = omega($l_S45, i) * geom_integ_m($l_S45) * ls_sum_m($l_S45, 1 + $I_L23047_394)
23077.                                  weight_u($l_S45, 1 + $I_L22929_412, 1 + $I_L22859_420, 1 + n_red_eigensystem + $I_L23047_394) = ls_sum_p($l_S45, 1 + $I_L23047_394) * geom_integ_p($l_S45) * omega($l_S45, i)
23079.                                  $I_L23073_366 = 1 + $I_L23073_366
23073.                                  if ( $I_L23073_366 >= $n_list_up_S2 ) exit
23073.                               enddo
23080.                               $I_L23047_394 = 1 + $I_L23047_394
23079.                               if ( $I_L23047_394 >= n_red_eigensystem ) exit
23079.                            enddo
23079.                         endif
23079.                      endif
23079.                   endif
23087.                   if ( i <= i_rad_layer(1 + $I_L22929_412) ) then
23094.                      if ( i < i_rad_layer(1 + $I_L22929_412) ) then
23095.                         if ( $n_list_down_S3 > 0 ) then
23097.                            $SC_frac_rad_layer_I0 = frac_rad_layer(1 + $I_L22929_412)
23097.                            $SC_i_rad_layer_I1 = i_rad_layer(1 + $I_L22929_412)
23095.                            $I_L23095_368 = 0
23095. !dir$ ivdep
23095.                            do
23096.                               $l_S47 = list_down(1 + $I_L23095_368)
23097.                               m_slant_depth_near($l_S47) = $SC_frac_rad_layer_I0 * tau($l_S47, $SC_i_rad_layer_I1)
23099.                               $I_L23095_368 = 1 + $I_L23095_368
23095.                               if ( $I_L23095_368 >= $n_list_down_S3 ) exit
23095.                            enddo
23095.                         endif
23100.                         $t_S48 = -1 + i_rad_layer(1 + $I_L22929_412)
23100.                         if ( i + -$t_S48 < 0 ) then
23101.                            if ( $n_list_down_S3 > 0 ) then
23100.                               $I_L23100_396 = 0
23100.                               do
23101.                                  $I_L23101_372 = 0
23101. !dir$ ivdep
23101.                                  do
23102.                                     $l_S50 = list_down(1 + $I_L23101_372)
23103.                                     m_slant_depth_near($l_S50) = _vu_plus( m_slant_depth_near($l_S50), tau($l_S50, $t_S48 + -$I_L23100_396) )
23105.                                     $I_L23101_372 = 1 + $I_L23101_372
23101.                                     if ( $I_L23101_372 >= $n_list_down_S3 ) exit
23101.                                  enddo
23106.                                  $I_L23100_396 = 1 + $I_L23100_396
23105.                                  if ( $I_L23100_396 >= ( $t_S48 + -i ) ) exit
23105.                               enddo
23105.                            endif
23105.                         endif
23107.                         if ( $n_list_down_S3 > 0 ) then
23107.                            $I_L23107_374 = 0
23107. !dir$ unroll 2
23107.                            do
23108.                               $l_S53 = list_down(1 + $I_L23107_374)
23111.                               m_slant_depth_inc($l_S53) = ( tau($l_S53, i) * 1.0/mu_v($l_S53, 1 + $I_L22859_420) )
23112.                               tau_i($l_S53) = tau($l_S53, i)
23113.                               frac_tau_i($l_S53) = 1.0
23109.                               $SCF_P3 = 1.0/mu_v($l_S53, 1 + $I_L22859_420)
23109.                               m_slant_depth_near($l_S53) = ( m_slant_depth_near($l_S53) * $SCF_P3 )
23114.                               $I_L23107_374 = 1 + $I_L23107_374
23107.                               if ( $I_L23107_374 >= $n_list_down_S3 ) exit
23107.                            enddo
23107.                         endif
23115.                      else if ( $n_list_down_S3 > 0 ) then
23119.                         $SC_frac_rad_layer_I0 = frac_rad_layer(1 + $I_L22929_412)
23117.                         $I_L23117_370 = 0
23117. !dir$ ivdep
23117.                         do
23118.                            $l_S55 = list_down(1 + $I_L23117_370)
23119.                            $SVU_P2 = tau($l_S55, i) * $SC_frac_rad_layer_I0
23119.                            tau_i($l_S55) = $SVU_P2
23120.                            m_slant_depth_near($l_S55) = 0.0
23121.                            m_slant_depth_inc($l_S55) = ( $SVU_P2 * 1.0/mu_v($l_S55, 1 + $I_L22859_420) )
23122.                            frac_tau_i($l_S55) = $SC_frac_rad_layer_I0
23123.                            $I_L23117_370 = 1 + $I_L23117_370
23117.                            if ( $I_L23117_370 >= $n_list_down_S3 ) exit
23117.                         enddo
23117.                      endif
23127.                      if ( isolir == 1 ) then
23129.                         if ( $n_list_down_S3 > 0 ) then
23129.                            $I_L23129_376 = 0
23129. !dir$ ivdep
23129.                            do
23130.                               $l_S57 = list_down(1 + $I_L23129_376)
23134.                               $d_mu_S58 = mu_0($l_S57) + mu_v($l_S57, 1 + $I_L22859_420)
23136.                               $x_S59 = ( tau_i($l_S57) * 1.0/( mu_0($l_S57) * mu_v($l_S57, 1 + $I_L22859_420) ) )
23138.                               geom_solar($l_S57) = _expn( m_slant_depth_near($l_S57) ) * ( mu_0($l_S57) * 1.0/( $d_mu_S58 + ( 2.2204460492503131e-16 * 1.0/( $d_mu_S58 + sign( 1.4901161193847656e-8, $d_mu_S58 ) ) ) ) ) * ( -_expn( m_slant_depth_inc($l_S57) ) + _expn( -( tau_i($l_S57) * 1.0/mu_0($l_S57) ) ) * ( 1.0 + -( $x_S59 * ( 2.2204460492503131e-16 * 1.0/( $d_mu_S58 + sign( 1.4901161193847656e-8, $d_mu_S58 ) ) ) * ( 1.0 + 5.0e-1 * $d_mu_S58 * $x_S59 ) ) ) )
23142.                               $I_L23129_376 = 1 + $I_L23129_376
23129.                               if ( $I_L23129_376 >= $n_list_down_S3 ) exit
23129.                            enddo
23147.                            $I_L23147_378 = 0
23147. !dir$ ivdep
23147.                            do
23148.                               $l_S62 = list_down(1 + $I_L23147_378)
23149.                               radiance($l_S62, 1 + $I_L22929_412, 1 + $I_L22859_420) = _vu_plus( radiance($l_S62, 1 + $I_L22929_412, 1 + $I_L22859_420), azim_factor($l_S62, 1 + $I_L22859_420) * omega($l_S62, i) * ls_sum_s($l_S62) * geom_solar($l_S62) )
23152.                               $I_L23147_378 = 1 + $I_L23147_378
23147.                               if ( $I_L23147_378 >= $n_list_down_S3 ) exit
23147.                            enddo
23147.                         endif
23153.                      else if ( isolir == 2 ) then
23154.                         if ( ms == 0 ) then
23155.                            if ( l_ir_source_quad /= .false. ) then
23156.                               _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'not done', 0x800600000000L ) ) )
23157.                            else if ( $n_list_down_S3 > 0 ) then
23158.                               $I_L23158_380 = 0
23158. !dir$ ivdep
23158.                               do
23159.                                  $l_S64 = list_down(1 + $I_L23158_380)
23161.                                  if ( m_slant_depth_inc($l_S64) < -1.4901161193847656e-8 ) then
23162.                                     $x_S65 = ( _expn( m_slant_depth_near($l_S64) ) * 1.0/m_slant_depth_inc($l_S64) * ( 1.0 + -_expn( m_slant_depth_inc($l_S64) ) ) )
23162.                                  else
23168.                                     $x_S65 = -( ( 1.0 + 5.0e-1 * m_slant_depth_inc($l_S64) ) * _expn( m_slant_depth_near($l_S64) ) )
23168.                                  endif
23171.                                  radiance($l_S64, 1 + $I_L22929_412, 1 + $I_L22859_420) = _vu_plus( radiance($l_S64, 1 + $I_L22929_412, 1 + $I_L22859_420), ( $x_S65 * frac_tau_i($l_S64) * 1.0/( 1.0 + -( phase_fnc($l_S64, i, 1) * omega($l_S64, i) ) ) * ( 3.1830988618379069e-1 * diff_planck($l_S64, i) ) ) )
23175.                                  $I_L23158_380 = 1 + $I_L23158_380
23170.                                  if ( $I_L23158_380 >= $n_list_down_S3 ) exit
23170.                               enddo
23170.                            endif
23170.                         endif
23170.                      endif
23181.                      if ( n_red_eigensystem > 0 ) then
23183.                         if ( $n_list_down_S3 > 0 ) then
23181.                            $I_L23181_398 = 0
23181.                            do
23183.                               $I_L23183_382 = 0
23183. !dir$ ivdep
23183.                               do
23184.                                  $l_S67 = list_down(1 + $I_L23183_382)
23185.                                  geom_integ_p($l_S67) = _expn( m_slant_depth_near($l_S67) ) * ( -_expn( m_slant_depth_inc($l_S67) + -( tau($l_S67, i) * 1.0/mu($l_S67, 1 + $I_L23181_398) ) ) + _expn( -( ( tau($l_S67, i) + -tau_i($l_S67) ) * 1.0/mu($l_S67, 1 + $I_L23181_398) ) ) ) * ( mu($l_S67, 1 + $I_L23181_398) * 1.0/( mu($l_S67, 1 + $I_L23181_398) + -mu_v($l_S67, 1 + $I_L22859_420) ) )
23193.                                  $d_mu_S69 = mu($l_S67, 1 + $I_L23181_398) + mu_v($l_S67, 1 + $I_L22859_420)
23194.                                  $eta_S71 = ( 2.2204460492503131e-16 * 1.0/( $d_mu_S69 + sign( 1.4901161193847656e-8, $d_mu_S69 ) ) )
23195.                                  $x_S70 = ( tau_i($l_S67) * 1.0/( mu($l_S67, 1 + $I_L23181_398) * mu_v($l_S67, 1 + $I_L22859_420) ) )
23197.                                  geom_integ_m($l_S67) = _expn( m_slant_depth_near($l_S67) ) * ( -_expn( m_slant_depth_inc($l_S67) ) + ( 1.0 + -( $x_S70 * $eta_S71 * ( 1.0 + 5.0e-1 * $d_mu_S69 * $x_S70 ) ) ) * _expn( -( tau_i($l_S67) * 1.0/mu($l_S67, 1 + $I_L23181_398) ) ) ) * ( mu($l_S67, 1 + $I_L23181_398) * 1.0/( $d_mu_S69 + ( 2.2204460492503131e-16 * 1.0/( $d_mu_S69 + sign( 1.4901161193847656e-8, $d_mu_S69 ) ) ) ) )
23202.                                  $I_L23183_382 = 1 + $I_L23183_382
23183.                                  if ( $I_L23183_382 >= $n_list_down_S3 ) exit
23183.                               enddo
23206.                               $I_L23206_384 = 0
23206. !dir$ ivdep
23206.                               do
23207.                                  $l_S73 = list_down(1 + $I_L23206_384)
23208.                                  weight_u($l_S73, 1 + $I_L22929_412, 1 + $I_L22859_420, 1 + $I_L23181_398) = omega($l_S73, i) * geom_integ_m($l_S73) * ls_sum_m($l_S73, 1 + $I_L23181_398)
23210.                                  weight_u($l_S73, 1 + $I_L22929_412, 1 + $I_L22859_420, 1 + n_red_eigensystem + $I_L23181_398) = ls_sum_p($l_S73, 1 + $I_L23181_398) * geom_integ_p($l_S73) * omega($l_S73, i)
23212.                                  $I_L23206_384 = 1 + $I_L23206_384
23206.                                  if ( $I_L23206_384 >= $n_list_down_S3 ) exit
23206.                               enddo
23214.                               $I_L23181_398 = 1 + $I_L23181_398
23212.                               if ( $I_L23181_398 >= n_red_eigensystem ) exit
23212.                            enddo
23212.                         endif
23212.                      endif
23212.                   endif
23222.                   if ( isolir == 1 ) then
23224.                      if ( n_profile > 0 ) then
23224.                         $I_L23224_386 = 0
23224. !dir$ ivdep
23224.                         do
23225.                            radiance(1 + $I_L23224_386, 1 + $I_L22929_412, 1 + $I_L22859_420) = radiance(1 + $I_L23224_386, 1 + $I_L22929_412, 1 + $I_L22859_420) + weight_u(1 + $I_L23224_386, 1 + $I_L22929_412, 1 + $I_L22859_420, k_sol(1 + $I_L23224_386)) * upm_c(1 + $I_L23224_386, k_sol(1 + $I_L23224_386)) * azim_factor(1 + $I_L23224_386, 1 + $I_L22859_420)
23228.                            $I_L23224_386 = 1 + $I_L23224_386
23224.                            if ( $I_L23224_386 >= n_profile ) exit
23224.                         enddo
23224.                      endif
23230.                   else if ( isolir == 2 ) then
23232.                      if ( n_red_eigensystem > 0 ) then
23233.                         if ( n_profile > 0 ) then
23232.                            $I_L23232_400 = 0
23232.                            if ( n_red_eigensystem >= 4 ) then
23232.                               $I_L23232_425 = 0
23232. !dir$ blocking_size( 1, 1 )
23232.                               do
23233.                                  $I_L23233_388 = 0
23233. !dir$ ivdep
23233. !dir$ blocking_size( 256, 256 )
23233.                                  do
23234.                                     radiance(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420) = radiance(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420) + azim_factor(1 + $I_L23233_388, 1 + $I_L22859_420) * ( weight_u(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420, 1 + 4 * $I_L23232_425) * upm_c(1 + $I_L23233_388, 1 + 4 * $I_L23232_425) + weight_u(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420, 1 + n_red_eigensystem + 4 * $I_L23232_425) * upm_c(1 + $I_L23233_388, 1 + n_red_eigensystem + 4 * $I_L23232_425) )
23234.                                     radiance(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420) = radiance(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420) + azim_factor(1 + $I_L23233_388, 1 + $I_L22859_420) * ( upm_c(1 + $I_L23233_388, 2 + n_red_eigensystem + 4 * $I_L23232_425) * weight_u(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420, 2 + n_red_eigensystem + 4 * $I_L23232_425) + upm_c(1 + $I_L23233_388, 2 + 4 * $I_L23232_425) * weight_u(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420, 2 + 4 * $I_L23232_425) )
23234.                                     radiance(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420) = radiance(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420) + azim_factor(1 + $I_L23233_388, 1 + $I_L22859_420) * ( upm_c(1 + $I_L23233_388, 3 + n_red_eigensystem + 4 * $I_L23232_425) * weight_u(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420, 3 + n_red_eigensystem + 4 * $I_L23232_425) + upm_c(1 + $I_L23233_388, 3 + 4 * $I_L23232_425) * weight_u(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420, 3 + 4 * $I_L23232_425) )
23234.                                     radiance(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420) = radiance(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420) + azim_factor(1 + $I_L23233_388, 1 + $I_L22859_420) * ( upm_c(1 + $I_L23233_388, 4 + n_red_eigensystem + 4 * $I_L23232_425) * weight_u(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420, 4 + n_red_eigensystem + 4 * $I_L23232_425) + upm_c(1 + $I_L23233_388, 4 + 4 * $I_L23232_425) * weight_u(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420, 4 + 4 * $I_L23232_425) )
23239.                                     $I_L23233_388 = 1 + $I_L23233_388
23233.                                     if ( $I_L23233_388 >= n_profile ) exit
23233.                                  enddo
23240.                                  $I_L23232_425 = 1 + $I_L23232_425
23239.                                  if ( $I_L23232_425 >= _rsh( n_red_eigensystem, 2 ) ) exit
23239.                               enddo
23240.                               $I_L23232_400 = and( 0xfffffffffffffffcUL, n_red_eigensystem )
23240.                            endif
23232.                            if ( $I_L23232_400 < n_red_eigensystem ) then
23232.                               $I_L23232_422 = 0
23232. !dir$ blocking_size( 1, 1 )
23232.                               do
23233.                                  $I_L23233_388 = 0
23233. !dir$ ivdep
23233. !dir$ blocking_size( 256, 256 )
23233.                                  do
23234.                                     radiance(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420) = radiance(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420) + azim_factor(1 + $I_L23233_388, 1 + $I_L22859_420) * ( upm_c(1 + $I_L23233_388, 1 + n_red_eigensystem + $I_L23232_400 + $I_L23232_422) * weight_u(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420, 1 + n_red_eigensystem + $I_L23232_400 + $I_L23232_422) + upm_c(1 + $I_L23233_388, 1 + $I_L23232_400 + $I_L23232_422) * weight_u(1 + $I_L23233_388, 1 + $I_L22929_412, 1 + $I_L22859_420, 1 + $I_L23232_400 + $I_L23232_422) )
23239.                                     $I_L23233_388 = 1 + $I_L23233_388
23233.                                     if ( $I_L23233_388 >= n_profile ) exit
23233.                                  enddo
23240.                                  $I_L23232_422 = 1 + $I_L23232_422
23239.                                  if ( $I_L23232_422 >= n_red_eigensystem + -$I_L23232_400 ) exit
23239.                               enddo
23239.                            endif
23239.                         endif
23239.                      endif
23239.                   endif
23244.                   $I_L22929_412 = 1 + $I_L22929_412
23242.                   if ( $I_L22929_412 >= n_viewing_level ) exit
23242.                enddo
23242.             endif
23245.             $I_L22859_420 = 1 + $I_L22859_420
23244.             if ( $I_L22859_420 >= n_direction ) exit
23244.          enddo
23244.       endif
22652.       _free( t$2887 )
23250.       return
23250.       end
23250.       
23275.       
23275.       subroutine set_level_weights( i, n_profile, ls_trunc, ms, n_red_eigensystem, cg_coeff, mu, eig_vec, isolir, z_sol, mu_0, q_0, l_ir_source_quad, q_1, upm_c, k_sol, tau, sqs2, n_viewing_level, i_rad_layer, frac_rad_layer, l_assign, i_assign_level, c_ylm, weight_u, nd_profile, nd_viewing_level, nd_max_order, nd_red_eigensystem, nd_sph_cf_weight )
23275.       t$755 = ( 1 + ls_trunc + -ms )
23374.       t$2924 = _zla( 0, ( 1 + ls_trunc + -ms ) )
23275.       t$754 = nd_profile
23275.       t$758 = nd_red_eigensystem
23376.       t$2925 = _zla( 0, nd_profile )
23275.       t$2926 = _zla( 0, nd_profile )
23376.       t$2927 = _zla( 0, nd_red_eigensystem )
23275.       t$2928 = _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem )
23275.       t$756 = ( 2 * nd_red_eigensystem )
23378.       t$2929 = _zla( 0, ( 2 * nd_red_eigensystem ) )
23275.       t$2930 = _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) )
23275.       t$2931 = _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem ) * _zla( 0, ( 2 * nd_red_eigensystem ) )
23275.       t$2932 = _zla( 0, ( 1 + ls_trunc + -ms ) ) * _zla( 0, nd_profile )
23275.       t$2933 = _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) )
23275.       t$757 = nd_max_order
23275.       t$2934 = 1 + nd_max_order
23372.       t$2935 = _zla( 0, 1 + nd_max_order )
23275.       t$2936 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_max_order )
23275.       t$759 = nd_viewing_level
23387.       t$2937 = _zla( 0, nd_viewing_level )
23275.       t$2938 = _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level )
23275.       t$2939 = _zla( 0, ( 1 + ls_trunc + -ms ) ) * _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level )
23275.       t$760 = nd_sph_cf_weight
23398.       t$2940 = _zla( 0, nd_sph_cf_weight )
23275.       t$2941 = _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level ) * _zla( 0, nd_sph_cf_weight )
23275.       t$2942 = _zla( 0, nd_profile ) * _zla( 0, ( 2 * nd_red_eigensystem ) ) * _zla( 0, nd_viewing_level ) * _zla( 0, nd_sph_cf_weight )
23420.       t$2945 = 8 * _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem )
23422.       t$2946 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem ) ) / 8
23422.       t$2948 = t$2946 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem )
23424.       t$2949 = 8 * ( 7 + t$2946 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_red_eigensystem ) ) / 8
23424.       t$2951 = t$2949 + 8 * _zla( 0, nd_profile )
23426.       t$2952 = 8 * ( 7 + t$2949 + 8 * _zla( 0, nd_profile ) ) / 8
23426.       t$2954 = t$2952 + 8 * _zla( 0, nd_profile )
23275.       t$2943 = int( _alloc( t$2952 + 8 * _zla( 0, nd_profile ) ), 8 )
23420.       t$2944 = t$2943
23422.       t$2947 = t$2946 + t$2943
23424.       t$2950 = t$2949 + t$2943
23426.       t$2953 = t$2952 + t$2943
23431.       if ( l_assign /= .false. ) then
23488.          $SC_cg_coeff_I1 = cg_coeff(2)
23478.          $SC_cg_coeff_I0 = cg_coeff(1)
23478. !dir$ loop_info (automatic) cache_nt( frac_rad_layer, i_rad_layer )
23478.          do
23434.             if ( n_red_eigensystem > 0 ) then
23435.                if ( n_profile > 0 ) then
23434.                   $SCA_frac_rad_layer_I4 = frac_rad_layer(i_assign_level)
23434.                   $I_L23434_162 = 0
23434.                   do
23435.                      $I_L23435_151 = 0
23435.                      do
23434.                         $I_L23434_168 = 0
23434. !dir$ shortloop16
23434. !dir$ blocking_size( 2, 2 )
23434.                         do
23435.                            $I_L23435_114 = 0
23435. !dir$ ivdep
23435. !dir$ loop_info (automatic) cache_nt( mu )
23435. !dir$ blocking_size( 256, 256 )
23435.                            do
23436.                               exp_minus(1 + $I_L23435_114 + 256 * $I_L23435_151, 1 + $I_L23434_168 + 2 * $I_L23434_162) = _expn( -( $SCA_frac_rad_layer_I4 * tau(1 + $I_L23435_114 + 256 * $I_L23435_151) * 1.0/mu(1 + $I_L23435_114 + 256 * $I_L23435_151, 1 + $I_L23434_168 + 2 * $I_L23434_162) ) )
23439.                               exp_plus(1 + $I_L23435_114 + 256 * $I_L23435_151, 1 + $I_L23434_168 + 2 * $I_L23434_162) = _expn( ( tau(1 + $I_L23435_114 + 256 * $I_L23435_151) * ( -1.0 + $SCA_frac_rad_layer_I4 ) * 1.0/mu(1 + $I_L23435_114 + 256 * $I_L23435_151, 1 + $I_L23434_168 + 2 * $I_L23434_162) ) )
23435.                               $I_L23435_114 = 1 + $I_L23435_114
23435.                               if ( $I_L23435_114 >= min( n_profile, 256 + 256 * $I_L23435_151 ) + -256 * $I_L23435_151 ) exit
23435.                            enddo
23434.                            $I_L23434_168 = 1 + $I_L23434_168
23434.                            if ( $I_L23434_168 >= min( n_red_eigensystem, 2 + 2 * $I_L23434_162 ) + -2 * $I_L23434_162 ) exit
23434.                         enddo
23435.                         $I_L23435_151 = 1 + $I_L23435_151
23442.                         if ( $I_L23435_151 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
23442.                      enddo
23434.                      $I_L23434_162 = 1 + $I_L23434_162
23434.                      if ( $I_L23434_162 >= 1 + max( 0, -1 + _rsh( 1 + n_red_eigensystem, 1 ) ) ) exit
23434.                   enddo
23434.                endif
23527.                if ( ls_trunc + -ms >= 0 ) then
23529.                   if ( n_profile > 0 ) then
23523.                      $I_L23523_166 = 0
23523.                      do
23527.                         $I_L23527_160 = 0
23527.                         do
23523.                            $I_L23523_157 = 0
23523. !dir$ shortloop16
23523. !dir$ blocking_size( 8, 8 )
23523.                            do
23527.                               $I_L23527_142 = 0
23527. !dir$ shortloop16
23527. !dir$ blocking_size( 8, 8 )
23527.                               do
23528.                                  $m1ls_S20 = int( real( 1 + -2 * mod( ( $I_L23527_142 + 8 * $I_L23527_160 ), 2 ), 8 ) )
23529.                                  $I_L23529_136 = 0
23529. !dir$ ivdep
23529. !dir$ loop_info (automatic) cache_nt( weight_u )
23529.                                  do
23530.                                     weight_u(1 + $I_L23529_136, i_assign_level, 1 + $I_L23527_142 + 8 * $I_L23527_160, 1 + $I_L23523_157 + 8 * $I_L23523_166) = $m1ls_S20 * eig_vec(1 + $I_L23529_136, 1 + $I_L23527_142 + 8 * $I_L23527_160, 1 + $I_L23523_157 + 8 * $I_L23523_166) * exp_minus(1 + $I_L23529_136, 1 + $I_L23523_157 + 8 * $I_L23523_166)
23532.                                     weight_u(1 + $I_L23529_136, i_assign_level, 1 + $I_L23527_142 + 8 * $I_L23527_160, 1 + n_red_eigensystem + $I_L23523_157 + 8 * $I_L23523_166) = eig_vec(1 + $I_L23529_136, 1 + $I_L23527_142 + 8 * $I_L23527_160, 1 + $I_L23523_157 + 8 * $I_L23523_166) * exp_plus(1 + $I_L23529_136, 1 + $I_L23523_157 + 8 * $I_L23523_166)
23534.                                     $I_L23529_136 = 1 + $I_L23529_136
23529.                                     if ( $I_L23529_136 >= n_profile ) exit
23529.                                  enddo
23527.                                  $I_L23527_142 = 1 + $I_L23527_142
23534.                                  if ( $I_L23527_142 >= min( 1 + ls_trunc + -ms, 8 + 8 * $I_L23527_160 ) + -8 * $I_L23527_160 ) exit
23534.                               enddo
23523.                               $I_L23523_157 = 1 + $I_L23523_157
23523.                               if ( $I_L23523_157 >= min( n_red_eigensystem, 8 + 8 * $I_L23523_166 ) + -8 * $I_L23523_166 ) exit
23523.                            enddo
23527.                            $I_L23527_160 = 1 + $I_L23527_160
23535.                            if ( $I_L23527_160 >= 1 + max( 0, -1 + _rsh( 8 + ls_trunc + -ms, 3 ) ) ) exit
23535.                         enddo
23523.                         $I_L23523_166 = 1 + $I_L23523_166
23523.                         if ( $I_L23523_166 >= 1 + max( 0, -1 + _rsh( 7 + n_red_eigensystem, 3 ) ) ) exit
23523.                      enddo
23523.                   endif
23523.                endif
23523.             endif
23446.             if ( isolir == 1 ) then
23447.                if ( n_profile > 0 ) then
23447.                   $SCA_frac_rad_layer_I3 = frac_rad_layer(i_assign_level)
23447.                   $I_L23447_117 = 0
23447. !dir$ ivdep
23447. !dir$ loop_info (automatic) cache_nt( mu_0 )
23447.                   do
23448.                      x_m(1 + $I_L23447_117) = _expn( -( $SCA_frac_rad_layer_I3 * tau(1 + $I_L23447_117) * 1.0/mu_0(1 + $I_L23447_117) ) )
23450.                      $I_L23447_117 = 1 + $I_L23447_117
23447.                      if ( $I_L23447_117 >= n_profile ) exit
23447.                   enddo
23447.                endif
23451.                if ( ls_trunc + -ms >= 0 ) then
23452.                   if ( n_profile > 0 ) then
23451.                      $I_L23451_164 = 0
23451.                      do
23452.                         $I_L23452_153 = 0
23452.                         do
23451.                            $I_L23451_170 = 0
23451. !dir$ shortloop16
23451. !dir$ blocking_size( 2, 2 )
23451.                            do
23452.                               $I_L23452_125 = 0
23452. !dir$ ivdep
23452. !dir$ loop_info (automatic) cache_nt( z_sol )
23452. !dir$ blocking_size( 256, 256 )
23452.                               do
23453.                                  c_ylm(1 + $I_L23452_125 + 256 * $I_L23452_153, i_assign_level, 1 + $I_L23451_170 + 2 * $I_L23451_164) = c_ylm(1 + $I_L23452_125 + 256 * $I_L23452_153, i_assign_level, 1 + $I_L23451_170 + 2 * $I_L23451_164) + x_m(1 + $I_L23452_125 + 256 * $I_L23452_153) * z_sol(1 + $I_L23452_125 + 256 * $I_L23452_153, 1 + $I_L23451_170 + 2 * $I_L23451_164)
23452.                                  $I_L23452_125 = 1 + $I_L23452_125
23452.                                  if ( $I_L23452_125 >= min( n_profile, 256 + 256 * $I_L23452_153 ) + -256 * $I_L23452_153 ) exit
23452.                               enddo
23451.                               $I_L23451_170 = 1 + $I_L23451_170
23451.                               if ( $I_L23451_170 >= min( 1 + ls_trunc + -ms, 2 + 2 * $I_L23451_164 ) + -2 * $I_L23451_164 ) exit
23451.                            enddo
23452.                            $I_L23452_153 = 1 + $I_L23452_153
23455.                            if ( $I_L23452_153 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
23455.                         enddo
23451.                         $I_L23451_164 = 1 + $I_L23451_164
23451.                         if ( $I_L23451_164 >= 1 + max( 0, -1 + _rsh( 2 + ls_trunc + -ms, 1 ) ) ) exit
23451.                      enddo
23451.                   endif
23451.                endif
23459.                if ( n_profile > 0 ) then
23459.                   $I_L23459_128 = 0
23459. !dir$ ivdep
23459. !dir$ loop_info (automatic) cache_nt( upm_c )
23459.                   do
23460.                      x_m(1 + $I_L23459_128) = exp_minus(1 + $I_L23459_128, k_sol(1 + $I_L23459_128)) * upm_c(1 + $I_L23459_128, k_sol(1 + $I_L23459_128))
23461.                      $I_L23459_128 = 1 + $I_L23459_128
23459.                      if ( $I_L23459_128 >= n_profile ) exit
23459.                   enddo
23459.                endif
23462.                if ( ls_trunc + -ms >= 0 ) then
23464.                   if ( n_profile > 0 ) then
23462.                      $I_L23462_138 = 0
23462.                      do
23463.                         $m1ls_S8 = int( real( 1 + -2 * mod( $I_L23462_138, 2 ), 8 ) )
23464.                         $I_L23464_130 = 0
23464. !dir$ ivdep
23464.                         do
23465.                            c_ylm(1 + $I_L23464_130, i_assign_level, 1 + $I_L23462_138) = c_ylm(1 + $I_L23464_130, i_assign_level, 1 + $I_L23462_138) + $m1ls_S8 * x_m(1 + $I_L23464_130) * eig_vec(1 + $I_L23464_130, 1 + $I_L23462_138, k_sol(1 + $I_L23464_130))
23468.                            $I_L23464_130 = 1 + $I_L23464_130
23464.                            if ( $I_L23464_130 >= n_profile ) exit
23464.                         enddo
23469.                         $I_L23462_138 = 1 + $I_L23462_138
23468.                         if ( $I_L23462_138 >= 1 + ls_trunc + -ms ) exit
23468.                      enddo
23468.                   endif
23468.                endif
23471.             else if ( isolir == 2 ) then
23473.                if ( ms == 0 ) then
23475.                   if ( l_ir_source_quad /= .false. ) then
23477.                      if ( n_profile > 0 ) then
23477.                         $SCA_frac_rad_layer_I2 = frac_rad_layer(i_assign_level)
23477.                         $I_L23477_119 = 0
23477. !dir$ ivdep
23477. !dir$ loop_info (automatic) cache_nt( q_0 )
23477.                         do
23478.                            c_ylm(1 + $I_L23477_119, i_assign_level, 1) = c_ylm(1 + $I_L23477_119, i_assign_level, 1) + ( q_1(1 + $I_L23477_119) * $SC_cg_coeff_I0 * 1.0/sqs2(1 + $I_L23477_119, 0) )
23481.                            c_ylm(1 + $I_L23477_119, i_assign_level, 2) = c_ylm(1 + $I_L23477_119, i_assign_level, 2) + q_0(1 + $I_L23477_119) + q_1(1 + $I_L23477_119) * ( -5.0e-1 + $SCA_frac_rad_layer_I2 )
23485.                            $I_L23477_119 = 1 + $I_L23477_119
23477.                            if ( $I_L23477_119 >= n_profile ) exit
23477.                         enddo
23477.                      endif
23486.                      if ( ls_trunc > 1 ) then
23487.                         if ( n_profile > 0 ) then
23487.                            $I_L23487_121 = 0
23487. !dir$ ivdep
23487.                            do
23488.                               c_ylm(1 + $I_L23487_121, i_assign_level, 3) = ( c_ylm(1 + $I_L23487_121, i_assign_level, 3) * q_1(1 + $I_L23487_121) * $SC_cg_coeff_I1 * 1.0/sqs2(1 + $I_L23487_121, 2) )
23491.                               $I_L23487_121 = 1 + $I_L23487_121
23487.                               if ( $I_L23487_121 >= n_profile ) exit
23487.                            enddo
23487.                         endif
23487.                      endif
23487.                   else
23496.                      if ( n_profile > 0 ) then
23496.                         $I_L23496_123 = 0
23496. !dir$ ivdep
23496. !dir$ loop_info (automatic) cache_nt( q_0 )
23496.                         do
23497.                            c_ylm(1 + $I_L23496_123, i_assign_level, 2) = c_ylm(1 + $I_L23496_123, i_assign_level, 2) + q_0(1 + $I_L23496_123)
23499.                            $I_L23496_123 = 1 + $I_L23496_123
23496.                            if ( $I_L23496_123 >= n_profile ) exit
23496.                         enddo
23496.                      endif
23502.                      if ( n_red_eigensystem > 0 ) then
23502.                         $I_L23502_155 = 0
23502.                         do
23503.                            if ( n_profile > 0 ) then
23503.                               $I_L23503_132 = 0
23503. !dir$ ivdep
23503.                               do
23504.                                  x_m(1 + $I_L23503_132) = exp_minus(1 + $I_L23503_132, 1 + $I_L23502_155) * upm_c(1 + $I_L23503_132, 1 + $I_L23502_155)
23505.                                  x_p(1 + $I_L23503_132) = exp_plus(1 + $I_L23503_132, 1 + $I_L23502_155) * upm_c(1 + $I_L23503_132, 1 + n_red_eigensystem + $I_L23502_155)
23506.                                  $I_L23503_132 = 1 + $I_L23503_132
23503.                                  if ( $I_L23503_132 >= n_profile ) exit
23503.                               enddo
23503.                            endif
23507.                            if ( ls_trunc >= 0 ) then
23510.                               if ( n_profile > 0 ) then
23507.                                  $I_L23507_140 = 0
23507.                                  do
23508.                                     $m1ls_S16 = int( real( 1 + -2 * mod( $I_L23507_140, 2 ), 8 ) )
23510.                                     $I_L23510_134 = 0
23510. !dir$ ivdep
23510.                                     do
23511.                                        c_ylm(1 + $I_L23510_134, i_assign_level, 1 + $I_L23507_140) = c_ylm(1 + $I_L23510_134, i_assign_level, 1 + $I_L23507_140) + eig_vec(1 + $I_L23510_134, 1 + $I_L23507_140, 1 + $I_L23502_155) * ( x_p(1 + $I_L23510_134) + $m1ls_S16 * x_m(1 + $I_L23510_134) )
23514.                                        $I_L23510_134 = 1 + $I_L23510_134
23510.                                        if ( $I_L23510_134 >= n_profile ) exit
23510.                                     enddo
23515.                                     $I_L23507_140 = 1 + $I_L23507_140
23514.                                     if ( $I_L23507_140 >= 1 + ls_trunc ) exit
23514.                                  enddo
23514.                               endif
23514.                            endif
23516.                            $I_L23502_155 = 1 + $I_L23502_155
23515.                            if ( $I_L23502_155 >= n_red_eigensystem ) exit
23515.                         enddo
23515.                      endif
23515.                   endif
23515.                endif
23515.             endif
23539.             i_assign_level = 1 + i_assign_level
23540.             if ( i_assign_level > n_viewing_level ) then
23543.                l_assign = .false.
23541.             else if ( i_rad_layer(i_assign_level) > i ) then
23541.                l_assign = .false.
23541.             endif
23544.             if ( l_assign == .false. ) exit
23544.          enddo
23544.       endif
23275.       _free( t$2943 )
23551.       return
23551.       end
23551.       
23569.       
23569.       subroutine set_matrix_pentadiagonal( n_profile, n_layer, trans, reflect, s_down, s_up, diffuse_albedo, direct_albedo, flux_direct_ground, flux_inc_down, d_planck_flux_surface, a5, b, nd_profile, nd_layer )
23569.       t$761 = nd_profile
23569.       t$762 = nd_layer
23602.       t$2955 = _zla( 0, nd_profile )
23569.       t$2956 = _zla( 0, nd_profile )
23602.       t$2957 = _zla( 0, nd_layer )
23569.       t$2958 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
23569.       t$763 = ( 2 + 2 * nd_layer )
23569.       t$2959 = 5 * _zla( 0, nd_profile )
23621.       t$2960 = _zla( 0, ( 2 + 2 * nd_layer ) )
23569.       t$2961 = 5 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
23569.       t$2962 = _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
23636.       if ( n_profile > 0 ) then
23636.          $I_L23636_16 = 0
23636. !dir$ ivdep
23636.          do
23637.             a5(1 + $I_L23636_16, 4, 2) = 0.0
23638.             a5(1 + $I_L23636_16, 3, 2) = 1.0
23639.             a5(1 + $I_L23636_16, 2, 2) = 0.0
23640.             a5(1 + $I_L23636_16, 1, 2) = 0.0
23641.             b(1 + $I_L23636_16, 2) = flux_inc_down(1 + $I_L23636_16)
23642.             $I_L23636_16 = 1 + $I_L23636_16
23636.             if ( $I_L23636_16 >= n_profile ) exit
23636.          enddo
23636.       endif
23646.       if ( n_layer > 0 ) then
23647.          if ( n_profile > 0 ) then
23646.             $I_L23646_22 = 0
23646.             do
23647.                $I_L23647_18 = 0
23647. !dir$ ivdep
23647.                do
23649.                   a5(1 + $I_L23647_18, 5, 1 + 2 * $I_L23646_22) = 0.0
23650.                   a5(1 + $I_L23647_18, 4, 1 + 2 * $I_L23646_22) = 0.0
23651.                   a5(1 + $I_L23647_18, 3, 1 + 2 * $I_L23646_22) = -1.0
23652.                   a5(1 + $I_L23647_18, 2, 1 + 2 * $I_L23646_22) = reflect(1 + $I_L23647_18, 1 + $I_L23646_22)
23653.                   a5(1 + $I_L23647_18, 1, 1 + 2 * $I_L23646_22) = trans(1 + $I_L23647_18, 1 + $I_L23646_22)
23654.                   b(1 + $I_L23647_18, 1 + 2 * $I_L23646_22) = -s_up(1 + $I_L23647_18, 1 + $I_L23646_22)
23656.                   a5(1 + $I_L23647_18, 5, 4 + 2 * $I_L23646_22) = trans(1 + $I_L23647_18, 1 + $I_L23646_22)
23657.                   a5(1 + $I_L23647_18, 4, 4 + 2 * $I_L23646_22) = reflect(1 + $I_L23647_18, 1 + $I_L23646_22)
23658.                   a5(1 + $I_L23647_18, 3, 4 + 2 * $I_L23646_22) = -1.0
23659.                   a5(1 + $I_L23647_18, 2, 4 + 2 * $I_L23646_22) = 0.0
23660.                   a5(1 + $I_L23647_18, 1, 4 + 2 * $I_L23646_22) = 0.0
23661.                   b(1 + $I_L23647_18, 4 + 2 * $I_L23646_22) = -s_down(1 + $I_L23647_18, 1 + $I_L23646_22)
23663.                   $I_L23647_18 = 1 + $I_L23647_18
23647.                   if ( $I_L23647_18 >= n_profile ) exit
23647.                enddo
23664.                $I_L23646_22 = 1 + $I_L23646_22
23663.                if ( $I_L23646_22 >= n_layer ) exit
23663.             enddo
23663.          endif
23663.       endif
23667.       if ( n_profile > 0 ) then
23667.          $I_L23667_20 = 0
23667. !dir$ ivdep
23667.          do
23668.             a5(1 + $I_L23667_20, 5, 1 + 2 * n_layer) = 0.0
23669.             a5(1 + $I_L23667_20, 4, 1 + 2 * n_layer) = 0.0
23670.             a5(1 + $I_L23667_20, 3, 1 + 2 * n_layer) = 1.0
23671.             a5(1 + $I_L23667_20, 2, 1 + 2 * n_layer) = -diffuse_albedo(1 + $I_L23667_20)
23672.             b(1 + $I_L23667_20, 1 + 2 * n_layer) = d_planck_flux_surface(1 + $I_L23667_20) * ( 1.0 + -diffuse_albedo(1 + $I_L23667_20) ) + flux_direct_ground(1 + $I_L23667_20) * ( direct_albedo(1 + $I_L23667_20) + -diffuse_albedo(1 + $I_L23667_20) )
23676.             $I_L23667_20 = 1 + $I_L23667_20
23667.             if ( $I_L23667_20 >= n_profile ) exit
23667.          enddo
23667.       endif
23681.       return
23681.       end
23681.       
23700.       
23700.       subroutine set_moist_aerosol_properties( ierr, n_profile, n_layer, n_aerosol, i_aerosol_parametrization, nhumidity, water_mix_ratio, t, p, delta_humidity, mean_rel_humidity, i_humidity_pointer, nd_profile, nd_layer, nd_aerosol_species )
23700.       t$764 = nd_aerosol_species
23742.       t$2963 = _zla( 0, nd_aerosol_species )
23700.       t$765 = nd_profile
23700.       t$766 = nd_layer
23750.       t$2964 = _zla( 0, nd_profile )
23700.       t$2965 = _zla( 0, nd_profile )
23750.       t$2966 = _zla( 0, nd_layer )
23700.       t$2967 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
23774.       t$2970 = 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
23700.       t$2968 = int( _alloc( 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ), 8 )
23774.       t$2969 = t$2968
23792.       t$720 = nd_profile
23792.       t$721 = nd_layer
23792.       t$2811 = _zla( 0, nd_profile )
23792.       t$2812 = _zla( 0, nd_profile )
23792.       t$2813 = _zla( 0, nd_layer )
23792.       t$2814 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
23792.       if ( n_layer > 0 ) then
23792.          if ( n_profile > 0 ) then
23792.             $I_L23792_36 = 0
23792.             do
23792.                $I_L23792_30 = 0
23792. !dir$ ivdep
23792.                do
23792.                   $temp_S2 = -273.14999999999998 + t(1 + $I_L23792_30, 1 + $I_L23792_36)
23792.                   $press_S3 = 1.0e-2 * p(1 + $I_L23792_30, 1 + $I_L23792_36)
23792.                   $ew_S4 = 10.0 ** ( 1.0/( 1.0 + 4.1200000000000004e-3 * $temp_S2 ) * ( 7.8590000000000004e-1 + 3.4770000000000002e-2 * $temp_S2 ) )
23792.                   $ewdash_S5 = $ew_S4 * ( 1.0 + 9.9999999999999995e-7 * $press_S3 * ( 4.5 + 5.9999999999999995e-4 * $temp_S2 * $temp_S2 ) )
23792.                   if ( $press_S3 > ( $ew_S4 * ( 1.0 + 9.9999999999999995e-7 * $press_S3 * ( 4.5 + 5.9999999999999995e-4 * $temp_S2 * $temp_S2 ) ) ) ) then
23792.                      mix_ratio_sat(1 + $I_L23792_30, 1 + $I_L23792_36) = ( 1.0/( $press_S3 + -3.7802000000000002e-1 * $ewdash_S5 ) * ( 6.2197999999999998e-1 * $ewdash_S5 ) )
23792.                   else
23792.                      mix_ratio_sat(1 + $I_L23792_30, 1 + $I_L23792_36) = 1.0
23792.                   endif
23792.                   $I_L23792_30 = 1 + $I_L23792_30
23792.                   if ( $I_L23792_30 >= n_profile ) exit
23792.                enddo
23792.                $I_L23792_36 = 1 + $I_L23792_36
23792.                if ( $I_L23792_36 >= n_layer ) exit
23792.             enddo
23792.          endif
23792.       endif
23806.       $nhumidity_common_S7 = 0
23807.       if ( n_aerosol > 0 ) then
23807.          $I_L23807_32 = 0
23807.          do
23808.             if ( i_aerosol_parametrization(1 + $I_L23807_32) /= 2 .orelse. nhumidity(1 + $I_L23807_32) <= 0 ) then
23824.                $I_L23807_32 = 1 + $I_L23807_32
23823.             else
23823.             endif
23823.             if ( $I_L23807_32 >= n_aerosol ) exit
23823.          enddo
23823.          goto 10
23823.       else
23823.    10    continue
23826.          delta_humidity = 1.0/( -1.0 + real( $nhumidity_common_S7, 8 ) )
23828.          if ( nd_layer > 0 ) then
23829.             if ( nd_profile > 0 ) then
23828.                $I_L23828_38 = 0
23828.                do
23829.                   $I_L23829_34 = 0
23829. !dir$ ivdep
23829.                   do
23830.                      $mean_rel_humidity_WR0_R0 = ( water_mix_ratio(1 + $I_L23829_34, 1 + $I_L23828_38) * ( 1.0 + -mix_ratio_sat(1 + $I_L23829_34, 1 + $I_L23828_38) ) * 1.0/( mix_ratio_sat(1 + $I_L23829_34, 1 + $I_L23828_38) * ( 1.0 + -water_mix_ratio(1 + $I_L23829_34, 1 + $I_L23828_38) ) ) )
23835.                      $mean_rel_humidity_WR0_R0 = min( 9.9999000000000005e-1, $mean_rel_humidity_WR0_R0 )
23835.                      mean_rel_humidity(1 + $I_L23829_34, 1 + $I_L23828_38) = $mean_rel_humidity_WR0_R0
23837.                      i_humidity_pointer(1 + $I_L23829_34, 1 + $I_L23828_38) = 1 + int( $mean_rel_humidity_WR0_R0 * ( -1 + $nhumidity_common_S7 ) )
23839.                      $I_L23829_34 = 1 + $I_L23829_34
23829.                      if ( $I_L23829_34 >= nd_profile ) exit
23829.                   enddo
23840.                   $I_L23828_38 = 1 + $I_L23828_38
23839.                   if ( $I_L23828_38 >= nd_layer ) exit
23839.                enddo
23839.             endif
23839.          endif
23700.          _free( t$2968 )
23700.       endif
23845.       return
23845.       end
23845.       
23864.       
23864.       integer
23864.       function set_n_source_coeff( isolir, l_ir_source_quad )
23905.       set_n_source_coeff = cvmg( cvmg( 2, 1, l_ir_source_quad ), 2, isolir /= 1 )
23905.       return
23905.       end
23905.       
23928.       
23928.       subroutine set_rad_layer( ierr, n_layer, n_viewing_level, viewing_level, i_rad_layer, frac_rad_layer, nd_viewing_level )
23928.       t$769 = nd_viewing_level
23963.       t$2971 = _zla( 0, nd_viewing_level )
23987.       if ( n_viewing_level > 0 ) then
23987.          $I_L23987_4 = 0
23987. !dir$ ivdep
23987.          do
23990.             if ( viewing_level(1 + $I_L23987_4) < 0.0 ) then
23991.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$771,  _substr(t$770,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: A viewing level is above the TOA.', 0x800600000000L ) ) )
23993.                ierr = 1
23993.                goto 10
23993.             endif
23997.             i_rad_layer(1 + $I_L23987_4) = 1 + int( viewing_level(1 + $I_L23987_4) )
23998.             frac_rad_layer(1 + $I_L23987_4) = 1.0 + viewing_level(1 + $I_L23987_4) + -( real( i_rad_layer(1 + $I_L23987_4), 8 ) )
24005.             if ( i_rad_layer(1 + $I_L23987_4) <= n_layer ) then
24017.                $I_L23987_4 = 1 + $I_L23987_4
24006.             else if ( frac_rad_layer(1 + $I_L23987_4) < 3.5527136788005009e-15 ) then
24006.             else
24006.             endif
24006.             if ( $I_L23987_4 >= n_viewing_level ) exit
24006.          enddo
24006.       endif
24006.    10 continue
24022.       return
24022.       end
24022.       
24044.       
24044.       subroutine set_truncation( ierr, i_truncation, ls_global_trunc, ls_max_order, ls_local_trunc, ms_min, ms_max, ms_trunc, ia_sph_mm, n_order_phase, nd_max_order )
24044.       t$774 = nd_max_order
24044.       t$2972 = 1 + nd_max_order
24087.       t$2973 = _zla( 0, 1 + nd_max_order )
24112.       if ( i_truncation /= 3 ) then
24044.          goto 10
24044.       else if ( ms_max > 0 ) then
24115.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$776,  _substr(t$775,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: An azimuthally symmetric truncation is not appropriate IF ms_max > 0.', 0x800600000000L ) ) )
24118.          ierr = 1
24118.       else
24118.    10    continue
24123.          if ( i_truncation == 1 ) then
24121.             goto 20
24121.             goto 30
24123.          else if ( i_truncation == 4 ) then
24123.    20       continue
24142.             ls_max_order = 1 + ls_global_trunc
24143.             ms_trunc(ms_min) = ms_min
24144.             if ( ls_global_trunc + -ms_min >= 0 ) then
24144.                $I_L24144_48 = 0
24144. !dir$ ivdep
24144.                do
24145.                   ms_trunc(1 + ms_min + $I_L24144_48) = min( ms_max, min( ls_global_trunc, ( 1 + ms_min + $I_L24144_48 ) ) )
24146.                   $I_L24144_48 = 1 + $I_L24144_48
24144.                   if ( $I_L24144_48 >= 1 + ls_global_trunc + -ms_min ) exit
24144.                enddo
24144.             endif
24147.             ia_sph_mm(ms_min) = 1
24148.             if ( ms_max + -ms_min > 0 ) then
24148.                $ia_sph_mm_WR0_R0 = 1
24148.                $I_L24148_50 = 0
24148. !dir$ unroll 4
24148.                do
24149.                   $ia_sph_mm_WR0_R0 = ( 3 + ls_global_trunc + $ia_sph_mm_WR0_R0 + -ms_min + -$I_L24148_50 )
24149.                   ia_sph_mm(1 + ms_min + $I_L24148_50) = $ia_sph_mm_WR0_R0
24150.                   $I_L24148_50 = 1 + $I_L24148_50
24148.                   if ( $I_L24148_50 >= ( ms_max + -ms_min ) ) exit
24148.                enddo
24148.             endif
24153.             if ( ms_max + -ms_min >= 0 ) then
24153.                $I_L24153_52 = 0
24153. !dir$ ivdep
24153.                do
24154.                   ls_local_trunc(ms_min + $I_L24153_52) = ls_global_trunc + mod( ( ms_min + $I_L24153_52 ), 2 )
24155.                   $I_L24153_52 = 1 + $I_L24153_52
24153.                   if ( $I_L24153_52 >= 1 + ms_max + -ms_min ) exit
24153.                enddo
24153.             endif
24153.             goto 30
24153.          else if ( i_truncation == 2 ) then
24163.             ls_max_order = ls_global_trunc + mod( ms_min, 2 )
24169.             ms_trunc(ms_min) = ms_min
24170.             if ( ls_global_trunc + mod( ms_min, 2 ) + -ms_min > 0 ) then
24170.                $I_L24170_54 = 0
24170. !dir$ ivdep
24170.                do
24171.                   ms_trunc(1 + ms_min + $I_L24170_54) = min( ms_max, min( ( -1 + ls_global_trunc + mod( ms_min, 2 ) + -$I_L24170_54 ), ( 1 + ms_min + $I_L24170_54 ) ) )
24172.                   $I_L24170_54 = 1 + $I_L24170_54
24170.                   if ( $I_L24170_54 >= ( ls_global_trunc + mod( ms_min, 2 ) + -ms_min ) ) exit
24170.                enddo
24170.             endif
24173.             ia_sph_mm(ms_min) = 1
24177.             if ( ms_max + -ms_min > 0 ) then
24177.                $ia_sph_mm_WR0_R1 = 1
24177.                $I_L24177_56 = 0
24177. !dir$ unroll 4
24177.                do
24178.                   $ia_sph_mm_WR0_R1 = ( 3 + ls_global_trunc + $ia_sph_mm_WR0_R1 + -ms_min + -2 * $I_L24177_56 )
24178.                   ia_sph_mm(1 + ms_min + $I_L24177_56) = $ia_sph_mm_WR0_R1
24180.                   $I_L24177_56 = 1 + $I_L24177_56
24177.                   if ( $I_L24177_56 >= ( ms_max + -ms_min ) ) exit
24177.                enddo
24177.             endif
24183.             if ( ms_max + -ms_min >= 0 ) then
24183.                $I_L24183_58 = 0
24183. !dir$ ivdep
24183.                do
24184.                   ls_local_trunc(ms_min + $I_L24183_58) = ( ls_global_trunc + mod( ms_min, 2 ) + -$I_L24183_58 )
24186.                   $I_L24183_58 = 1 + $I_L24183_58
24183.                   if ( $I_L24183_58 >= 1 + ms_max + -ms_min ) exit
24183.                enddo
24183.             endif
24183.             goto 30
24183.          else if ( i_truncation == 3 ) then
24192.             ls_max_order = ls_global_trunc
24193.             ms_trunc(0) = 0
24194.             ia_sph_mm(0) = 1
24195.             if ( ls_global_trunc > 0 ) then
24195.                $I_L24195_60 = 0
24195. !dir$ ivdep
24195.                do
24196.                   ms_trunc(1 + $I_L24195_60) = 0
24197.                   $I_L24195_60 = 1 + $I_L24195_60
24195.                   if ( $I_L24195_60 >= ls_global_trunc ) exit
24195.                enddo
24195.             endif
24199.             ls_local_trunc(0) = ls_global_trunc
24199.    30       continue
24212.             n_order_phase = 1
24213.             if ( ms_max + -ms_min >= 0 ) then
24213.                $I_L24213_62 = 0
24213. !dir$ ivdep
24213.                do
24214.                   n_order_phase = max( n_order_phase, ls_local_trunc(ms_min + $I_L24213_62) )
24215.                   $I_L24213_62 = 1 + $I_L24213_62
24213.                   if ( $I_L24213_62 >= 1 + ms_max + -ms_min ) exit
24213.                enddo
24213.             endif
24213.          else
24203.             _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$778,  _substr(t$777,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '***Error: An illegal truncation has been requested.', 0x800600000000L ) ) )
24205.             ierr = 1
24205.          endif
24205.       endif
24220.       return
24220.       end
24220.       
24238.       
24238.       subroutine shell_sort( n, pointer, key )
24238.       t$779 = n
24254.       t$2974 = _zla( 0, n )
24272.       if ( n == 1 ) then
24273.          pointer(1) = 1
24273.       else
24277.          $gap_S0 = n
24278.          if ( n >= 2 ) then
24275.             do
24279.                $gap_S0 = $gap_S0 / 2
24280.                if ( n + -$gap_S0 > 0 ) then
24280.                   $I_L24280_14 = 0
24280.                   do
24281.                      if ( ( $I_L24280_14 /= 0 .and. xor( -$gap_S0, -$I_L24280_14 ) < 0 ) == .false. ) then
24281.                         $t_S4 = ( $gap_S0 + $I_L24280_14 ) / $gap_S0
24281.                         $I_L24281_12 = 0
24281.                         if ( mod( -$gap_S0, $gap_S0 ) == 0 ) then
24281.                            do
24282.                               if ( key(pointer(1 + $I_L24280_14 + -( $gap_S0 * $I_L24281_12 ))) > key(pointer(1 + $gap_S0 + $I_L24280_14 + -( $gap_S0 * $I_L24281_12 ))) ) then
24283.                                  $pointer_temp_S3 = pointer(1 + $I_L24280_14 + -( $gap_S0 * $I_L24281_12 ))
24284.                                  pointer(1 + $I_L24280_14 + -( $gap_S0 * $I_L24281_12 )) = pointer(1 + $gap_S0 + $I_L24280_14 + -( $gap_S0 * $I_L24281_12 ))
24285.                                  pointer(1 + $gap_S0 + $I_L24280_14 + -( $gap_S0 * $I_L24281_12 )) = $pointer_temp_S3
24285.                               endif
24287.                               $I_L24281_12 = 1 + $I_L24281_12
24286.                               if ( $I_L24281_12 >= $t_S4 ) exit
24286.                            enddo
24286.                         else
24286. !dir$ ivdep safevl = 4
24286.                            do
24282.                               if ( key(pointer(1 + $I_L24280_14 + -( $gap_S0 * $I_L24281_12 ))) > key(pointer(1 + $gap_S0 + $I_L24280_14 + -( $gap_S0 * $I_L24281_12 ))) ) then
24283.                                  $pointer_temp_S3 = pointer(1 + $I_L24280_14 + -( $gap_S0 * $I_L24281_12 ))
24284.                                  pointer(1 + $I_L24280_14 + -( $gap_S0 * $I_L24281_12 )) = pointer(1 + $gap_S0 + $I_L24280_14 + -( $gap_S0 * $I_L24281_12 ))
24285.                                  pointer(1 + $gap_S0 + $I_L24280_14 + -( $gap_S0 * $I_L24281_12 )) = $pointer_temp_S3
24285.                               endif
24287.                               $I_L24281_12 = 1 + $I_L24281_12
24286.                               if ( $I_L24281_12 >= $t_S4 ) exit
24286.                            enddo
24286.                         endif
24286.                      endif
24288.                      $I_L24280_14 = 1 + $I_L24280_14
24287.                      if ( $I_L24280_14 >= ( n + -$gap_S0 ) ) exit
24287.                   enddo
24287.                endif
24288.                if ( $gap_S0 < 2 ) exit
24288.             enddo
24288.          endif
24288.       endif
24294.       return
24294.       end
24294.       
24323.       
24323.       subroutine single_scat_sol( n_profile, n_layer, n_direction, direction, n_viewing_level, i_rad_layer, frac_rad_layer, i_direct, mu_0, tau, omega, phase_fnc_solar, radiance, nd_profile, nd_radiance_profile, nd_layer, nd_direction, nd_viewing_level )
24323.       t$781 = nd_radiance_profile
24323.       t$782 = nd_direction
24375.       t$2975 = _zla( 0, nd_radiance_profile )
24323.       t$2976 = _zla( 0, nd_radiance_profile )
24375.       t$2977 = _zla( 0, nd_direction )
24323.       t$2978 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
24323.       t$2979 = 2 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
24323.       t$780 = nd_viewing_level
24372.       t$2980 = _zla( 0, nd_viewing_level )
24323.       t$783 = nd_profile
24323.       t$784 = nd_layer
24382.       t$2981 = _zla( 0, nd_profile )
24323.       t$2982 = _zla( 0, nd_profile )
24323.       t$2983 = 1 + nd_layer
24382.       t$2984 = _zla( 0, 1 + nd_layer )
24323.       t$2985 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
24389.       t$2986 = _zla( 0, nd_layer )
24323.       t$2987 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
24323.       t$2988 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_layer )
24323.       t$2989 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * _zla( 0, nd_layer )
24323.       t$2990 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_viewing_level )
24323.       t$2991 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * _zla( 0, nd_viewing_level )
24430.       t$2994 = 8 * _zla( 0, nd_profile )
24426.       t$2996 = 12 * _zla( 0, nd_profile )
24420.       t$2998 = 16 * _zla( 0, nd_profile )
24435.       t$2999 = 8 * ( 7 + 16 * _zla( 0, nd_profile ) ) / 8
24435.       t$3001 = t$2999 + 8 * _zla( 0, nd_profile )
24432.       t$3002 = 8 * ( 7 + t$2999 + 8 * _zla( 0, nd_profile ) ) / 8
24432.       t$3004 = t$3002 + 8 * _zla( 0, nd_profile )
24438.       t$3005 = 8 * ( 7 + t$3002 + 8 * _zla( 0, nd_profile ) ) / 8
24438.       t$3007 = t$3005 + 8 * _zla( 0, nd_profile )
24440.       t$3008 = 8 * ( 7 + t$3005 + 8 * _zla( 0, nd_profile ) ) / 8
24440.       t$3010 = t$3008 + 8 * _zla( 0, nd_profile )
24323.       t$2992 = int( _alloc( t$3008 + 8 * _zla( 0, nd_profile ) ), 8 )
24430.       t$2993 = t$2992
24426.       t$2995 = t$2992 + 8 * _zla( 0, nd_profile )
24420.       t$2997 = t$2992 + 12 * _zla( 0, nd_profile )
24435.       t$3000 = t$2999 + t$2992
24432.       t$3003 = t$3002 + t$2992
24438.       t$3006 = t$3005 + t$2992
24440.       t$3009 = t$3008 + t$2992
24468.       if ( n_direction > 0 ) then
24468.          $I_L24468_114 = 0
24468.          do
24472.             $n_list_up_S2 = 0
24473.             if ( n_profile > 0 ) then
24473.                $I_L24473_68 = 0
24473. !dir$ ivdep
24473. !dir$ loop_info (automatic) cache_nt( list_up )
24473.                do
24474.                   if ( direction(1 + $I_L24473_68, 1 + $I_L24468_114, 1) > 0.0 ) then
24475.                      $n_list_up_S2 = 1 + $n_list_up_S2
24476.                      list_up($n_list_up_S2) = ( 1 + $I_L24473_68 )
24476.                   endif
24478.                   $I_L24473_68 = 1 + $I_L24473_68
24477.                   if ( $I_L24473_68 >= n_profile ) exit
24477.                enddo
24477.             endif
24481.             $n_list_down_S4 = 0
24482.             if ( n_profile > 0 ) then
24482.                $I_L24482_70 = 0
24482. !dir$ ivdep
24482. !dir$ loop_info (automatic) cache_nt( list_down )
24482.                do
24483.                   if ( direction(1 + $I_L24482_70, 1 + $I_L24468_114, 1) < 0.0 ) then
24484.                      $n_list_down_S4 = 1 + $n_list_down_S4
24485.                      list_down($n_list_down_S4) = ( 1 + $I_L24482_70 )
24485.                   endif
24487.                   $I_L24482_70 = 1 + $I_L24482_70
24486.                   if ( $I_L24482_70 >= n_profile ) exit
24486.                enddo
24486.             endif
24491.             if ( n_layer > 0 ) then
24494.                if ( n_viewing_level > 0 ) then
24491.                   $I_L24491_112 = 0
24491.                   do
24494.                      $I_L24494_110 = 0
24494.                      do
24499.                         if ( ( 1 + $I_L24491_112 ) >= i_rad_layer(1 + $I_L24494_110) ) then
24506.                            if ( ( 1 + $I_L24491_112 ) > i_rad_layer(1 + $I_L24494_110) ) then
24508.                               if ( $n_list_up_S2 > 0 ) then
24508.                                  $SCA_frac_rad_layer_I4 = frac_rad_layer(1 + $I_L24494_110)
24508.                                  $SCA_i_rad_layer_I5 = i_rad_layer(1 + $I_L24494_110)
24508.                                  $I_L24508_102 = 0
24508. !dir$ ivdep
24508.                                  do
24509.                                     $l_S8 = list_up(1 + $I_L24508_102)
24510.                                     m_slant_depth_near($l_S8) = tau($l_S8, $SCA_i_rad_layer_I5) * ( 1.0 + -$SCA_frac_rad_layer_I4 )
24513.                                     $I_L24508_102 = 1 + $I_L24508_102
24508.                                     if ( $I_L24508_102 >= $n_list_up_S2 ) exit
24508.                                  enddo
24508.                               endif
24514.                               $t_S9 = 1 + i_rad_layer(1 + $I_L24494_110)
24514.                               if ( ( 1 + $I_L24491_112 + -$t_S9 ) > 0 ) then
24515.                                  if ( $n_list_up_S2 > 0 ) then
24514.                                     $I_L24514_92 = 0
24514.                                     do
24515.                                        $I_L24515_76 = 0
24515. !dir$ ivdep
24515.                                        do
24516.                                           $l_S11 = list_up(1 + $I_L24515_76)
24517.                                           m_slant_depth_near($l_S11) = _vu_plus( m_slant_depth_near($l_S11), tau($l_S11, $t_S9 + $I_L24514_92) )
24519.                                           $I_L24515_76 = 1 + $I_L24515_76
24515.                                           if ( $I_L24515_76 >= $n_list_up_S2 ) exit
24515.                                        enddo
24520.                                        $I_L24514_92 = 1 + $I_L24514_92
24519.                                        if ( $I_L24514_92 >= 1 + $I_L24491_112 + -$t_S9 ) exit
24519.                                     enddo
24519.                                  endif
24519.                               endif
24521.                               if ( $n_list_up_S2 > 0 ) then
24521.                                  $I_L24521_78 = 0
24521. !dir$ unroll 2
24521.                                  do
24522.                                     $l_S14 = list_up(1 + $I_L24521_78)
24523.                                     $SCF_P3 = 1.0/direction($l_S14, 1 + $I_L24468_114, 1)
24523.                                     m_slant_depth_near($l_S14) = -( m_slant_depth_near($l_S14) * $SCF_P3 )
24525.                                     m_slant_depth_far($l_S14) = m_slant_depth_near($l_S14) + -( tau($l_S14, 1 + $I_L24491_112) * 1.0/direction($l_S14, 1 + $I_L24468_114, 1) )
24529.                                     tau_i($l_S14) = tau($l_S14, 1 + $I_L24491_112)
24530.                                     trans_d($l_S14) = 1.0
24531.                                     $I_L24521_78 = 1 + $I_L24521_78
24521.                                     if ( $I_L24521_78 >= $n_list_up_S2 ) exit
24521.                                  enddo
24521.                               endif
24532.                            else if ( i_rad_layer(1 + $I_L24494_110) + -$I_L24491_112 == 1 ) then
24534.                               if ( $n_list_up_S2 > 0 ) then
24534.                                  $SCA_frac_rad_layer_I3 = frac_rad_layer(1 + $I_L24494_110)
24534.                                  $I_L24534_104 = 0
24534. !dir$ ivdep
24534.                                  do
24535.                                     $l_S16 = list_up(1 + $I_L24534_104)
24536.                                     m_slant_depth_near($l_S16) = 0.0
24537.                                     m_slant_depth_far($l_S16) = -( tau($l_S16, 1 + $I_L24491_112) * ( 1.0 + -$SCA_frac_rad_layer_I3 ) * 1.0/direction($l_S16, 1 + $I_L24468_114, 1) )
24540.                                     tau_i($l_S16) = tau($l_S16, 1 + $I_L24491_112) * ( 1.0 + -$SCA_frac_rad_layer_I3 )
24541.                                     trans_d($l_S16) = _expn( -( $SCA_frac_rad_layer_I3 * tau($l_S16, 1 + $I_L24491_112) * 1.0/mu_0($l_S16) ) )
24543.                                     $I_L24534_104 = 1 + $I_L24534_104
24534.                                     if ( $I_L24534_104 >= $n_list_up_S2 ) exit
24534.                                  enddo
24534.                               endif
24534.                            endif
24548.                            if ( $n_list_up_S2 > 0 ) then
24548.                               $I_L24548_80 = 0
24548. !dir$ ivdep
24548.                               do
24549.                                  $l_S18 = list_up(1 + $I_L24548_80)
24550.                                  $SVU_P0 = ( -_expn( m_slant_depth_far($l_S18) + -( tau_i($l_S18) * 1.0/mu_0($l_S18) ) ) + _expn( m_slant_depth_near($l_S18) ) ) * ( mu_0($l_S18) * 1.0/( mu_0($l_S18) + direction($l_S18, 1 + $I_L24468_114, 1) ) )
24553.                                  radiance($l_S18, 1 + $I_L24494_110, 1 + $I_L24468_114) = _vu_plus( radiance($l_S18, 1 + $I_L24494_110, 1 + $I_L24468_114), i_direct($l_S18, $I_L24491_112) * phase_fnc_solar($l_S18, 1 + $I_L24491_112, 1 + $I_L24468_114) * $SVU_P0 * trans_d($l_S18) * ( 7.9577471545947673e-2 * omega($l_S18, 1 + $I_L24491_112) ) )
24556.                                  $I_L24548_80 = 1 + $I_L24548_80
24548.                                  if ( $I_L24548_80 >= $n_list_up_S2 ) exit
24548.                               enddo
24548.                            endif
24548.                         endif
24564.                         if ( ( 1 + $I_L24491_112 ) <= i_rad_layer(1 + $I_L24494_110) ) then
24571.                            if ( ( 1 + $I_L24491_112 ) < i_rad_layer(1 + $I_L24494_110) ) then
24572.                               if ( $n_list_down_S4 > 0 ) then
24572.                                  $SCA_i_rad_layer_I0 = i_rad_layer(1 + $I_L24494_110)
24572.                                  $SCA_frac_rad_layer_I2 = frac_rad_layer(1 + $I_L24494_110)
24572.                                  $I_L24572_106 = 0
24572. !dir$ ivdep
24572.                                  do
24573.                                     $l_S20 = list_down(1 + $I_L24572_106)
24574.                                     m_slant_depth_near($l_S20) = tau($l_S20, $SCA_i_rad_layer_I0) * $SCA_frac_rad_layer_I2
24576.                                     $I_L24572_106 = 1 + $I_L24572_106
24572.                                     if ( $I_L24572_106 >= $n_list_down_S4 ) exit
24572.                                  enddo
24572.                               endif
24577.                               $t_S21 = -1 + i_rad_layer(1 + $I_L24494_110)
24577.                               if ( ( 1 + $I_L24491_112 + -$t_S21 ) < 0 ) then
24578.                                  if ( $n_list_down_S4 > 0 ) then
24577.                                     $I_L24577_94 = 0
24577.                                     do
24578.                                        $I_L24578_86 = 0
24578. !dir$ ivdep
24578.                                        do
24579.                                           $l_S23 = list_down(1 + $I_L24578_86)
24580.                                           m_slant_depth_near($l_S23) = _vu_plus( m_slant_depth_near($l_S23), tau($l_S23, $t_S21 + -$I_L24577_94) )
24582.                                           $I_L24578_86 = 1 + $I_L24578_86
24578.                                           if ( $I_L24578_86 >= $n_list_down_S4 ) exit
24578.                                        enddo
24583.                                        $I_L24577_94 = 1 + $I_L24577_94
24582.                                        if ( $I_L24577_94 >= -1 + $t_S21 + -$I_L24491_112 ) exit
24582.                                     enddo
24582.                                  endif
24582.                               endif
24584.                               if ( $n_list_down_S4 > 0 ) then
24584.                                  $I_L24584_88 = 0
24584. !dir$ unroll 2
24584.                                  do
24585.                                     $l_S26 = list_down(1 + $I_L24584_88)
24586.                                     $SCF_P4 = 1.0/direction($l_S26, 1 + $I_L24468_114, 1)
24586.                                     m_slant_depth_near($l_S26) = ( m_slant_depth_near($l_S26) * $SCF_P4 )
24588.                                     m_slant_depth_far($l_S26) = m_slant_depth_near($l_S26) + ( tau($l_S26, 1 + $I_L24491_112) * 1.0/direction($l_S26, 1 + $I_L24468_114, 1) )
24590.                                     tau_i($l_S26) = tau($l_S26, 1 + $I_L24491_112)
24591.                                     $I_L24584_88 = 1 + $I_L24584_88
24584.                                     if ( $I_L24584_88 >= $n_list_down_S4 ) exit
24584.                                  enddo
24584.                               endif
24592.                            else if ( $n_list_down_S4 > 0 ) then
24594.                               $SCA_frac_rad_layer_I1 = frac_rad_layer(1 + $I_L24494_110)
24594.                               $I_L24594_108 = 0
24594. !dir$ ivdep
24594.                               do
24595.                                  $l_S28 = list_down(1 + $I_L24594_108)
24596.                                  $SVU_P1 = $SCA_frac_rad_layer_I1 * tau($l_S28, 1 + $I_L24491_112)
24596.                                  tau_i($l_S28) = $SVU_P1
24597.                                  m_slant_depth_near($l_S28) = 0.0
24598.                                  m_slant_depth_far($l_S28) = ( $SVU_P1 * 1.0/direction($l_S28, 1 + $I_L24468_114, 1) )
24599.                                  $I_L24594_108 = 1 + $I_L24594_108
24594.                                  if ( $I_L24594_108 >= $n_list_down_S4 ) exit
24594.                               enddo
24594.                            endif
24604.                            if ( $n_list_down_S4 > 0 ) then
24604.                               $I_L24604_90 = 0
24604. !dir$ ivdep
24604.                               do
24605.                                  $l_S30 = list_down(1 + $I_L24604_90)
24608.                                  $d_mu_S31 = mu_0($l_S30) + direction($l_S30, 1 + $I_L24468_114, 1)
24610.                                  $eta_nm_S32 = ( 1.0 + -( tau_i($l_S30) * ( 2.2204460492503131e-16 * 1.0/( $d_mu_S31 + sign( 1.4901161193847656e-8, $d_mu_S31 ) ) ) * 1.0/( mu_0($l_S30) * direction($l_S30, 1 + $I_L24468_114, 1) ) ) )
24612.                                  $SVU_P2 = ( mu_0($l_S30) * 1.0/( $d_mu_S31 + ( 2.2204460492503131e-16 * 1.0/( $d_mu_S31 + sign( 1.4901161193847656e-8, $d_mu_S31 ) ) ) ) ) * ( -_expn( m_slant_depth_far($l_S30) ) + $eta_nm_S32 * _expn( m_slant_depth_near($l_S30) + -( tau_i($l_S30) * 1.0/mu_0($l_S30) ) ) )
24616.                                  radiance($l_S30, 1 + $I_L24494_110, 1 + $I_L24468_114) = _vu_plus( radiance($l_S30, 1 + $I_L24494_110, 1 + $I_L24468_114), i_direct($l_S30, $I_L24491_112) * phase_fnc_solar($l_S30, 1 + $I_L24491_112, 1 + $I_L24468_114) * $SVU_P2 * ( 7.9577471545947673e-2 * omega($l_S30, 1 + $I_L24491_112) ) )
24620.                                  $I_L24604_90 = 1 + $I_L24604_90
24604.                                  if ( $I_L24604_90 >= $n_list_down_S4 ) exit
24604.                               enddo
24604.                            endif
24604.                         endif
24624.                         $I_L24494_110 = 1 + $I_L24494_110
24622.                         if ( $I_L24494_110 >= n_viewing_level ) exit
24622.                      enddo
24625.                      $I_L24491_112 = 1 + $I_L24491_112
24624.                      if ( $I_L24491_112 >= n_layer ) exit
24624.                   enddo
24624.                endif
24624.             endif
24626.             $I_L24468_114 = 1 + $I_L24468_114
24625.             if ( $I_L24468_114 >= n_direction ) exit
24625.          enddo
24625.       endif
24323.       _free( t$2992 )
24631.       return
24631.       end
24631.       
24649.       
24649.       subroutine single_scattering_all( i_scatter_method_band, n_profile, n_layer, d_mass, l_cloud, n_cloud_top, n_cloud_type, ss_prop, k_gas_abs, nd_profile, nd_layer, nd_layer_clr, id_ct )
24649.       t$785 = nd_profile
24649.       t$786 = nd_layer
24694.       t$3011 = _zla( 0, nd_profile )
24649.       t$3012 = _zla( 0, nd_profile )
24694.       t$3013 = _zla( 0, nd_layer )
24649.       t$3014 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 2600.       if ( t$27 == 0 ) then
 2600.          t$3019(1) = 4
 2600.          t$3020(1) = 0
 2600.          t$3021(1) = 0
 2600.          t$3016(1) = int( loc( t$26 ), 8 )
 2600.          t$3017(1) = 0
 2600.          t$3018(1) = int( loc( t$3015 ), 8 )
 2600.          t$27 = __get_dynamic_type( 2, t$3016(1), t$3019(1), 1, t$3017(1), t$3018(1), t$3020(1), t$3021(1) )
 2600.       endif
24734.       if ( l_cloud == .false. ) then
24752.          t$8729 = 0
24752.          t$8730 = 0
24752.          t$8734 = 0
24752.          if ( ( ss_prop%k_grey_tot%header%a_contig == 1 .or. -ss_prop%k_grey_tot%header%el_len + ss_prop%k_grey_tot%dim_1%SM * ss_prop%k_grey_tot%header%dv_smunit == 0 .and. -ss_prop%k_grey_tot%dim_2%SM + ss_prop%k_grey_tot%dim_1%SM * ss_prop%k_grey_tot%dim_1%EX == 0 ) /= .false. ) then
24752. !dir$ suppress (ss_prop%k_grey_tot%base_addr)(ss_prop%k_grey_tot%dim_1%LB, ss_prop%k_grey_tot%dim_2%LB, 0, 0)
24752.             t$8728 = loc( (ss_prop%k_grey_tot%base_addr)(ss_prop%k_grey_tot%dim_1%LB, ss_prop%k_grey_tot%dim_2%LB, 0, 0) )
24752.          else
24752.             t$8729 = ( max( 0, ( 1 + -1 + ss_prop%k_grey_tot%dim_1%EX ) ) )
24752.             t$8730 = ( max( 0, ( 1 + -1 + ss_prop%k_grey_tot%dim_2%EX ) ) )
24752.             t$8734 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%k_grey_tot%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%k_grey_tot%dim_1%EX ) ) ) ) ) ), 8 )
24749.             call _f90_copy_from_dv( t$8733, ss_prop%k_grey_tot )
24752. !dir$ suppress t$8733
24752.             t$8728 = loc( t$8733 )
24752.          endif
24753.          t$8736 = 0
24753.          t$8737 = 0
24753.          t$8741 = 0
24753.          if ( ( ss_prop%k_ext_scat%header%a_contig == 1 .or. -ss_prop%k_ext_scat%header%el_len + ss_prop%k_ext_scat%dim_1%SM * ss_prop%k_ext_scat%header%dv_smunit == 0 .and. -ss_prop%k_ext_scat%dim_2%SM + ss_prop%k_ext_scat%dim_1%SM * ss_prop%k_ext_scat%dim_1%EX == 0 ) /= .false. ) then
24753. !dir$ suppress (ss_prop%k_ext_scat%base_addr)(ss_prop%k_ext_scat%dim_1%LB, ss_prop%k_ext_scat%dim_2%LB, 0, 0)
24753.             t$8735 = loc( (ss_prop%k_ext_scat%base_addr)(ss_prop%k_ext_scat%dim_1%LB, ss_prop%k_ext_scat%dim_2%LB, 0, 0) )
24753.          else
24753.             t$8736 = ( max( 0, ( 1 + -1 + ss_prop%k_ext_scat%dim_1%EX ) ) )
24753.             t$8737 = ( max( 0, ( 1 + -1 + ss_prop%k_ext_scat%dim_2%EX ) ) )
24753.             t$8741 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%k_ext_scat%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%k_ext_scat%dim_1%EX ) ) ) ) ) ), 8 )
24749.             call _f90_copy_from_dv( t$8740, ss_prop%k_ext_scat )
24753. !dir$ suppress t$8740
24753.             t$8735 = loc( t$8740 )
24753.          endif
24755.          t$8743 = 0
24755.          t$8744 = 0
24755.          t$8748 = 0
24755.          if ( ( ss_prop%tau%header%a_contig == 1 .or. -ss_prop%tau%header%el_len + ss_prop%tau%dim_1%SM * ss_prop%tau%header%dv_smunit == 0 .and. -ss_prop%tau%dim_2%SM + ss_prop%tau%dim_1%SM * ss_prop%tau%dim_1%EX == 0 ) /= .false. ) then
24755. !dir$ suppress (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, 0, 0)
24755.             t$8742 = loc( (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, 0, 0) )
24755.          else
24755.             t$8743 = ( max( 0, ( 1 + -1 + ss_prop%tau%dim_1%EX ) ) )
24755.             t$8744 = ( max( 0, ( 1 + -1 + ss_prop%tau%dim_2%EX ) ) )
24755.             t$8748 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%tau%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%tau%dim_1%EX ) ) ) ) ) ), 8 )
24755. !dir$ suppress t$8747
24755.             t$8742 = loc( t$8747 )
24755.          endif
24755.          t$8750 = 0
24755.          t$8751 = 0
24755.          t$8755 = 0
24755.          if ( ( ss_prop%omega%header%a_contig == 1 .or. -ss_prop%omega%header%el_len + ss_prop%omega%dim_1%SM * ss_prop%omega%header%dv_smunit == 0 .and. -ss_prop%omega%dim_2%SM + ss_prop%omega%dim_1%SM * ss_prop%omega%dim_1%EX == 0 ) /= .false. ) then
24755. !dir$ suppress (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, 0, 0)
24755.             t$8749 = loc( (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, 0, 0) )
24755.          else
24755.             t$8750 = ( max( 0, ( 1 + -1 + ss_prop%omega%dim_1%EX ) ) )
24755.             t$8751 = ( max( 0, ( 1 + -1 + ss_prop%omega%dim_2%EX ) ) )
24755.             t$8755 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%omega%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%omega%dim_1%EX ) ) ) ) ) ), 8 )
24755. !dir$ suppress t$8754
24755.             t$8749 = loc( t$8754 )
24755.          endif
24749.          call single_scattering( i_scatter_method_band, n_profile, 1, n_layer, d_mass(1, 1), t$8728, t$8735, k_gas_abs(1, 1), t$8742, t$8749, nd_profile, nd_layer, id_ct, nd_layer )
24755.          if ( ( ss_prop%omega%header%a_contig == 1 .or. -ss_prop%omega%header%el_len + ss_prop%omega%dim_1%SM * ss_prop%omega%header%dv_smunit == 0 .and. -ss_prop%omega%dim_2%SM + ss_prop%omega%dim_1%SM * ss_prop%omega%dim_1%EX == 0 ) == .false. ) then
24749.             call _f90_copy_to_dv( ss_prop%omega, t$8754 )
24755.             _free( t$8755 )
24755.          endif
24755.          if ( ( ss_prop%tau%header%a_contig == 1 .or. -ss_prop%tau%header%el_len + ss_prop%tau%dim_1%SM * ss_prop%tau%header%dv_smunit == 0 .and. -ss_prop%tau%dim_2%SM + ss_prop%tau%dim_1%SM * ss_prop%tau%dim_1%EX == 0 ) == .false. ) then
24749.             call _f90_copy_to_dv( ss_prop%tau, t$8747 )
24755.             _free( t$8748 )
24755.          endif
24753.          if ( ( ss_prop%k_ext_scat%header%a_contig == 1 .or. -ss_prop%k_ext_scat%header%el_len + ss_prop%k_ext_scat%dim_1%SM * ss_prop%k_ext_scat%header%dv_smunit == 0 .and. -ss_prop%k_ext_scat%dim_2%SM + ss_prop%k_ext_scat%dim_1%SM * ss_prop%k_ext_scat%dim_1%EX == 0 ) == .false. ) then
24753.             _free( t$8741 )
24753.          endif
24752.          if ( ( ss_prop%k_grey_tot%header%a_contig == 1 .or. -ss_prop%k_grey_tot%header%el_len + ss_prop%k_grey_tot%dim_1%SM * ss_prop%k_grey_tot%header%dv_smunit == 0 .and. -ss_prop%k_grey_tot%dim_2%SM + ss_prop%k_grey_tot%dim_1%SM * ss_prop%k_grey_tot%dim_1%EX == 0 ) == .false. ) then
24752.             _free( t$8734 )
24752.          endif
24736.       else if ( n_cloud_type >= 0 ) then
24736.          $I_L24736_4 = 0
24736.          do
24740.             t$8698 = 0
24740.             t$8699 = 0
24740.             t$8703 = 0
24740.             if ( ( ss_prop%k_grey_tot%header%a_contig == 1 .or. -ss_prop%k_grey_tot%header%el_len + ss_prop%k_grey_tot%dim_1%SM * ss_prop%k_grey_tot%header%dv_smunit == 0 .and. -ss_prop%k_grey_tot%dim_2%SM + ss_prop%k_grey_tot%dim_1%SM * ss_prop%k_grey_tot%dim_1%EX == 0 ) /= .false. ) then
24740. !dir$ suppress (ss_prop%k_grey_tot%base_addr)(ss_prop%k_grey_tot%dim_1%LB, ss_prop%k_grey_tot%dim_2%LB, t$8696, 0)
24740.                t$8697 = loc( (ss_prop%k_grey_tot%base_addr)(ss_prop%k_grey_tot%dim_1%LB, ss_prop%k_grey_tot%dim_2%LB, $I_L24736_4, 0) )
24740.             else
24740.                t$8698 = ( max( 0, ( 1 + -1 + ss_prop%k_grey_tot%dim_1%EX ) ) )
24740.                t$8699 = ( max( 0, ( 1 + -1 + ss_prop%k_grey_tot%dim_2%EX ) ) )
24740.                t$8703 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%k_grey_tot%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%k_grey_tot%dim_1%EX ) ) ) ) ) ), 8 )
24737.                call _f90_copy_from_dv( t$8702, ss_prop%k_grey_tot )
24740. !dir$ suppress t$8702
24740.                t$8697 = loc( t$8702 )
24740.             endif
24741.             t$8706 = 0
24741.             t$8707 = 0
24741.             t$8711 = 0
24741.             if ( ( ss_prop%k_ext_scat%header%a_contig == 1 .or. -ss_prop%k_ext_scat%header%el_len + ss_prop%k_ext_scat%dim_1%SM * ss_prop%k_ext_scat%header%dv_smunit == 0 .and. -ss_prop%k_ext_scat%dim_2%SM + ss_prop%k_ext_scat%dim_1%SM * ss_prop%k_ext_scat%dim_1%EX == 0 ) /= .false. ) then
24741. !dir$ suppress (ss_prop%k_ext_scat%base_addr)(ss_prop%k_ext_scat%dim_1%LB, ss_prop%k_ext_scat%dim_2%LB, t$8704, 0)
24741.                t$8705 = loc( (ss_prop%k_ext_scat%base_addr)(ss_prop%k_ext_scat%dim_1%LB, ss_prop%k_ext_scat%dim_2%LB, $I_L24736_4, 0) )
24741.             else
24741.                t$8706 = ( max( 0, ( 1 + -1 + ss_prop%k_ext_scat%dim_1%EX ) ) )
24741.                t$8707 = ( max( 0, ( 1 + -1 + ss_prop%k_ext_scat%dim_2%EX ) ) )
24741.                t$8711 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%k_ext_scat%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%k_ext_scat%dim_1%EX ) ) ) ) ) ), 8 )
24737.                call _f90_copy_from_dv( t$8710, ss_prop%k_ext_scat )
24741. !dir$ suppress t$8710
24741.                t$8705 = loc( t$8710 )
24741.             endif
24743.             t$8714 = 0
24743.             t$8715 = 0
24743.             t$8719 = 0
24743.             if ( ( ss_prop%tau%header%a_contig == 1 .or. -ss_prop%tau%header%el_len + ss_prop%tau%dim_1%SM * ss_prop%tau%header%dv_smunit == 0 .and. -ss_prop%tau%dim_2%SM + ss_prop%tau%dim_1%SM * ss_prop%tau%dim_1%EX == 0 ) /= .false. ) then
24743. !dir$ suppress (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, t$8712, 0)
24743.                t$8713 = loc( (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, $I_L24736_4, 0) )
24743.             else
24743.                t$8714 = ( max( 0, ( 1 + -1 + ss_prop%tau%dim_1%EX ) ) )
24743.                t$8715 = ( max( 0, ( 1 + -1 + ss_prop%tau%dim_2%EX ) ) )
24743.                t$8719 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%tau%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%tau%dim_1%EX ) ) ) ) ) ), 8 )
24743. !dir$ suppress t$8718
24743.                t$8713 = loc( t$8718 )
24743.             endif
24743.             t$8722 = 0
24743.             t$8723 = 0
24743.             t$8727 = 0
24743.             if ( ( ss_prop%omega%header%a_contig == 1 .or. -ss_prop%omega%header%el_len + ss_prop%omega%dim_1%SM * ss_prop%omega%header%dv_smunit == 0 .and. -ss_prop%omega%dim_2%SM + ss_prop%omega%dim_1%SM * ss_prop%omega%dim_1%EX == 0 ) /= .false. ) then
24743. !dir$ suppress (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, t$8720, 0)
24743.                t$8721 = loc( (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, $I_L24736_4, 0) )
24743.             else
24743.                t$8722 = ( max( 0, ( 1 + -1 + ss_prop%omega%dim_1%EX ) ) )
24743.                t$8723 = ( max( 0, ( 1 + -1 + ss_prop%omega%dim_2%EX ) ) )
24743.                t$8727 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ( 1 + -1 + ss_prop%omega%dim_2%EX ) ) ) ) * max( 0, ( max( 0, ( 1 + -1 + ss_prop%omega%dim_1%EX ) ) ) ) ) ), 8 )
24743. !dir$ suppress t$8726
24743.                t$8721 = loc( t$8726 )
24743.             endif
24737.             call single_scattering( i_scatter_method_band, n_profile, 1, n_layer, d_mass(1, 1), t$8697, t$8705, k_gas_abs(1, 1), t$8713, t$8721, nd_profile, nd_layer, id_ct, nd_layer )
24743.             if ( ( ss_prop%omega%header%a_contig == 1 .or. -ss_prop%omega%header%el_len + ss_prop%omega%dim_1%SM * ss_prop%omega%header%dv_smunit == 0 .and. -ss_prop%omega%dim_2%SM + ss_prop%omega%dim_1%SM * ss_prop%omega%dim_1%EX == 0 ) == .false. ) then
24737.                call _f90_copy_to_dv( ss_prop%omega, t$8726 )
24743.                _free( t$8727 )
24743.             endif
24743.             if ( ( ss_prop%tau%header%a_contig == 1 .or. -ss_prop%tau%header%el_len + ss_prop%tau%dim_1%SM * ss_prop%tau%header%dv_smunit == 0 .and. -ss_prop%tau%dim_2%SM + ss_prop%tau%dim_1%SM * ss_prop%tau%dim_1%EX == 0 ) == .false. ) then
24737.                call _f90_copy_to_dv( ss_prop%tau, t$8718 )
24743.                _free( t$8719 )
24743.             endif
24741.             if ( ( ss_prop%k_ext_scat%header%a_contig == 1 .or. -ss_prop%k_ext_scat%header%el_len + ss_prop%k_ext_scat%dim_1%SM * ss_prop%k_ext_scat%header%dv_smunit == 0 .and. -ss_prop%k_ext_scat%dim_2%SM + ss_prop%k_ext_scat%dim_1%SM * ss_prop%k_ext_scat%dim_1%EX == 0 ) == .false. ) then
24741.                _free( t$8711 )
24741.             endif
24740.             if ( ( ss_prop%k_grey_tot%header%a_contig == 1 .or. -ss_prop%k_grey_tot%header%el_len + ss_prop%k_grey_tot%dim_1%SM * ss_prop%k_grey_tot%header%dv_smunit == 0 .and. -ss_prop%k_grey_tot%dim_2%SM + ss_prop%k_grey_tot%dim_1%SM * ss_prop%k_grey_tot%dim_1%EX == 0 ) == .false. ) then
24740.                _free( t$8703 )
24740.             endif
24746.             $I_L24736_4 = 1 + $I_L24736_4
24740.             if ( $I_L24736_4 >= 1 + n_cloud_type ) exit
24740.          enddo
24740.       endif
24763.       return
24763.       end
24763.       
24783.       
24783.       subroutine single_scattering( i_scatter_method_band, n_profile, i_first_layer, i_last_layer, d_mass, k_grey_tot, k_ext_scat, k_gas_abs, tau, omega, nd_profile, nd_layer, id_lt, id_lb )
24783.       t$787 = nd_profile
24783.       t$788 = nd_layer
24829.       t$3023 = _zla( 0, nd_profile )
24783.       t$3024 = _zla( 0, nd_profile )
24829.       t$3025 = _zla( 0, nd_layer )
24783.       t$3026 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
24783.       t$789 = id_lt
24783.       t$790 = id_lb
24783.       t$3027 = 1 + id_lb + -id_lt
24834.       t$3028 = _zla( 0, 1 + id_lb + -id_lt )
24783.       t$3029 = _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt )
24858.       t$3032 = 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt )
24783.       t$3030 = int( _alloc( 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt ) ), 8 )
24858.       t$3031 = t$3030
24876.       if ( i_scatter_method_band == 1 ) then
24879.          if ( id_lb + -id_lt >= 0 ) then
24880.             if ( nd_profile > 0 ) then
24879.                $I_L24879_60 = 0
24879.                do
24880.                   $I_L24880_52 = 0
24880. !dir$ ivdep
24880.                   do
24881.                      k_total(1 + $I_L24880_52, id_lt + $I_L24879_60) = k_grey_tot(1 + $I_L24880_52, id_lt + $I_L24879_60) + k_gas_abs(1 + $I_L24880_52, id_lt + $I_L24879_60)
24882.                      $I_L24880_52 = 1 + $I_L24880_52
24880.                      if ( $I_L24880_52 >= nd_profile ) exit
24880.                   enddo
24886.                   $I_L24886_54 = 0
24886. !dir$ ivdep
24886.                   do
24887.                      tau(1 + $I_L24886_54, id_lt + $I_L24879_60) = k_total(1 + $I_L24886_54, id_lt + $I_L24879_60) * d_mass(1 + $I_L24886_54, id_lt + $I_L24879_60)
24888.                      if ( k_total(1 + $I_L24886_54, id_lt + $I_L24879_60) > 0.0 ) then
24889.                         omega(1 + $I_L24886_54, id_lt + $I_L24879_60) = ( k_ext_scat(1 + $I_L24886_54, id_lt + $I_L24879_60) * 1.0/k_total(1 + $I_L24886_54, id_lt + $I_L24879_60) )
24889.                      else
24891.                         omega(1 + $I_L24886_54, id_lt + $I_L24879_60) = 0.0
24891.                      endif
24893.                      omega(1 + $I_L24886_54, id_lt + $I_L24879_60) = min( 9.9999999999999289e-1, omega(1 + $I_L24886_54, id_lt + $I_L24879_60) )
24895.                      $I_L24886_54 = 1 + $I_L24886_54
24892.                      if ( $I_L24886_54 >= nd_profile ) exit
24892.                   enddo
24883.                   $I_L24879_60 = 1 + $I_L24879_60
24882.                   if ( $I_L24879_60 >= 1 + id_lb + -id_lt ) exit
24882.                enddo
24882.             endif
24882.          endif
24898.       else if ( i_scatter_method_band == 2 ) then
24907.          if ( id_lb + -id_lt >= 0 ) then
24908.             if ( nd_profile > 0 ) then
24907.                $I_L24907_58 = 0
24907.                do
24908.                   $I_L24908_50 = 0
24908. !dir$ ivdep
24908.                   do
24909.                      tau(1 + $I_L24908_50, id_lt + $I_L24907_58) = d_mass(1 + $I_L24908_50, id_lt + $I_L24907_58) * ( k_grey_tot(1 + $I_L24908_50, id_lt + $I_L24907_58) + k_gas_abs(1 + $I_L24908_50, id_lt + $I_L24907_58) + -k_ext_scat(1 + $I_L24908_50, id_lt + $I_L24907_58) )
24911.                      omega(1 + $I_L24908_50, id_lt + $I_L24907_58) = 0.0
24912.                      $I_L24908_50 = 1 + $I_L24908_50
24908.                      if ( $I_L24908_50 >= nd_profile ) exit
24908.                   enddo
24913.                   $I_L24907_58 = 1 + $I_L24907_58
24912.                   if ( $I_L24907_58 >= 1 + id_lb + -id_lt ) exit
24912.                enddo
24912.             endif
24912.          endif
24912.       else if ( i_scatter_method_band == 3 ) then
24922.          if ( id_lb + -id_lt >= 0 ) then
24923.             if ( nd_profile > 0 ) then
24922.                $I_L24922_56 = 0
24922.                do
24923.                   $I_L24923_48 = 0
24923. !dir$ ivdep
24923.                   do
24924.                      tau(1 + $I_L24923_48, id_lt + $I_L24922_56) = d_mass(1 + $I_L24923_48, id_lt + $I_L24922_56) * ( k_grey_tot(1 + $I_L24923_48, id_lt + $I_L24922_56) + k_gas_abs(1 + $I_L24923_48, id_lt + $I_L24922_56) )
24926.                      omega(1 + $I_L24923_48, id_lt + $I_L24922_56) = 0.0
24927.                      $I_L24923_48 = 1 + $I_L24923_48
24923.                      if ( $I_L24923_48 >= nd_profile ) exit
24923.                   enddo
24928.                   $I_L24922_56 = 1 + $I_L24922_56
24927.                   if ( $I_L24922_56 >= 1 + id_lb + -id_lt ) exit
24927.                enddo
24927.             endif
24927.          endif
24927.       endif
24783.       _free( t$3030 )
24935.       return
24935.       end
24935.       
24953.       
24953.       subroutine solar_coefficient_basic( ierr, n_profile, i_layer_first, i_layer_last, omega, asymmetry, sec_00, i_2stream, sum, diff, lambda, gamma_up, gamma_down, nd_profile, id_lt, id_lb )
24953.       t$791 = nd_profile
24953.       t$792 = id_lt
24953.       t$793 = id_lb
25000.       t$3033 = _zla( 0, nd_profile )
24953.       t$3034 = _zla( 0, nd_profile )
24953.       t$3035 = 1 + id_lb + -id_lt
25000.       t$3036 = _zla( 0, 1 + id_lb + -id_lt )
24953.       t$3037 = _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt )
25029.       t$3040 = 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt )
24953.       t$3038 = int( _alloc( 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt ) ), 8 )
25029.       t$3039 = t$3038
25053.       if ( id_lb + -id_lt >= 0 ) then
25054.          if ( nd_profile > 0 ) then
25053.             $I_L25053_40 = 0
25053.             do
25054.                $I_L25054_32 = 0
25054. !dir$ ivdep
25054.                do
25055.                   if ( abs( lambda(1 + $I_L25054_32, id_lt + $I_L25053_40) + -sec_00(1 + $I_L25054_32, id_lt + $I_L25053_40) ) < 7.1054273576010019e-15 ) then
25056.                      sum(1 + $I_L25054_32, id_lt + $I_L25053_40) = 1.0000000000000071 * sum(1 + $I_L25054_32, id_lt + $I_L25053_40)
25057.                      diff(1 + $I_L25054_32, id_lt + $I_L25053_40) = 1.0000000000000071 * diff(1 + $I_L25054_32, id_lt + $I_L25053_40)
25058.                      lambda(1 + $I_L25054_32, id_lt + $I_L25053_40) = 1.0000000000000071 * lambda(1 + $I_L25054_32, id_lt + $I_L25053_40)
25058.                   endif
25060.                   $I_L25054_32 = 1 + $I_L25054_32
25059.                   if ( $I_L25054_32 >= nd_profile ) exit
25059.                enddo
25061.                $I_L25053_40 = 1 + $I_L25053_40
25060.                if ( $I_L25053_40 >= 1 + id_lb + -id_lt ) exit
25060.             enddo
25060.          endif
25060.       endif
25063.       if ( i_2stream == 2 ) then
25061.          goto 10
25061.          goto 20
25063.       else if ( i_2stream == 12 ) then
25063.          goto 10
25063.          goto 20
25063.       else if ( i_2stream == 6 ) then
25063.          goto 10
25063.          goto 20
25063.       else if ( i_2stream == 14 ) then
25063.          goto 10
25063.          goto 20
25063.       else if ( i_2stream == 15 ) then
25063.          goto 10
25063.          goto 20
25063.       else if ( i_2stream == 16 ) then
25063.    10    continue
25071.          if ( id_lb + -id_lt >= 0 ) then
25072.             if ( nd_profile > 0 ) then
25071.                $I_L25071_44 = 0
25071.                do
25072.                   $I_L25072_36 = 0
25072. !dir$ ivdep
25072.                   do
25073.                      ksi_0(1 + $I_L25072_36, id_lt + $I_L25071_44) = ( 1.5 * asymmetry(1 + $I_L25072_36, id_lt + $I_L25071_44) * 1.0/sec_00(1 + $I_L25072_36, id_lt + $I_L25071_44) )
25074.                      $I_L25072_36 = 1 + $I_L25072_36
25072.                      if ( $I_L25072_36 >= nd_profile ) exit
25072.                   enddo
25075.                   $I_L25071_44 = 1 + $I_L25071_44
25074.                   if ( $I_L25071_44 >= 1 + id_lb + -id_lt ) exit
25074.                enddo
25074.             endif
25074.          endif
25074.          goto 20
25074.       else if ( i_2stream == 4 ) then
25080.          if ( id_lb + -id_lt >= 0 ) then
25081.             if ( nd_profile > 0 ) then
25080.                $I_L25080_42 = 0
25080.                do
25081.                   $I_L25081_34 = 0
25081. !dir$ ivdep
25081.                   do
25082.                      ksi_0(1 + $I_L25081_34, id_lt + $I_L25080_42) = ( 1.7320508075688772 * asymmetry(1 + $I_L25081_34, id_lt + $I_L25080_42) * 1.0/sec_00(1 + $I_L25081_34, id_lt + $I_L25080_42) )
25083.                      $I_L25081_34 = 1 + $I_L25081_34
25081.                      if ( $I_L25081_34 >= nd_profile ) exit
25081.                   enddo
25084.                   $I_L25080_42 = 1 + $I_L25080_42
25083.                   if ( $I_L25080_42 >= 1 + id_lb + -id_lt ) exit
25083.                enddo
25083.             endif
25083.          endif
25083.    20    continue
25101.          if ( id_lb + -id_lt >= 0 ) then
25102.             if ( nd_profile > 0 ) then
25101.                $I_L25101_46 = 0
25101.                do
25102.                   $I_L25102_38 = 0
25102. !dir$ ivdep
25102.                   do
25103.                      $factor_S8 = ( 5.0e-1 * sec_00(1 + $I_L25102_38, id_lt + $I_L25101_46) * omega(1 + $I_L25102_38, id_lt + $I_L25101_46) * 1.0/( ( lambda(1 + $I_L25102_38, id_lt + $I_L25101_46) + -sec_00(1 + $I_L25102_38, id_lt + $I_L25101_46) ) * ( sec_00(1 + $I_L25102_38, id_lt + $I_L25101_46) + lambda(1 + $I_L25102_38, id_lt + $I_L25101_46) ) ) )
25105.                      gamma_up(1 + $I_L25102_38, id_lt + $I_L25101_46) = $factor_S8 * ( sum(1 + $I_L25102_38, id_lt + $I_L25101_46) + -sec_00(1 + $I_L25102_38, id_lt + $I_L25101_46) + -( ksi_0(1 + $I_L25102_38, id_lt + $I_L25101_46) * ( diff(1 + $I_L25102_38, id_lt + $I_L25101_46) + -sec_00(1 + $I_L25102_38, id_lt + $I_L25101_46) ) ) )
25107.                      gamma_down(1 + $I_L25102_38, id_lt + $I_L25101_46) = $factor_S8 * ( sec_00(1 + $I_L25102_38, id_lt + $I_L25101_46) + sum(1 + $I_L25102_38, id_lt + $I_L25101_46) + ksi_0(1 + $I_L25102_38, id_lt + $I_L25101_46) * ( sec_00(1 + $I_L25102_38, id_lt + $I_L25101_46) + diff(1 + $I_L25102_38, id_lt + $I_L25101_46) ) )
25109.                      $I_L25102_38 = 1 + $I_L25102_38
25102.                      if ( $I_L25102_38 >= nd_profile ) exit
25102.                   enddo
25110.                   $I_L25101_46 = 1 + $I_L25101_46
25109.                   if ( $I_L25101_46 >= 1 + id_lb + -id_lt ) exit
25109.                enddo
25109.             endif
25109.          endif
24953.          _free( t$3038 )
24953.       else
25088.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$795,  _substr(t$794,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: An illegal solar two-stream scheme has been selected.', 0x800600000000L ) ) )
25091.          ierr = 1
24953.          _free( t$3038 )
24953.       endif
25115.       return
25115.       end
25115.       
25133.       
25133.       subroutine solar_source( n_profile, n_layer, flux_inc_direct, trans_0, source_coeff, l_scale_solar, adjust_solar_ke, flux_direct, s_down, s_up, nd_profile, nd_layer, nd_source_coeff )
25133.       t$796 = nd_profile
25173.       t$3041 = _zla( 0, nd_profile )
25133.       t$797 = nd_layer
25133.       t$3042 = _zla( 0, nd_profile )
25175.       t$3043 = _zla( 0, nd_layer )
25133.       t$3044 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
25133.       t$798 = nd_source_coeff
25133.       t$3045 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
25177.       t$3046 = _zla( 0, nd_source_coeff )
25133.       t$3047 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff )
25133.       t$3048 = 1 + nd_layer
25184.       t$3049 = _zla( 0, 1 + nd_layer )
25133.       t$3050 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
25201.       if ( n_profile > 0 ) then
25201.          $I_L25201_64 = 0
25201. !dir$ ivdep
25201.          do
25202.             flux_direct(1 + $I_L25201_64, 0) = flux_inc_direct(1 + $I_L25201_64)
25203.             $I_L25201_64 = 1 + $I_L25201_64
25201.             if ( $I_L25201_64 >= n_profile ) exit
25201.          enddo
25201.       endif
25208.       if ( l_scale_solar /= .false. ) then
25211.          if ( nd_layer > 0 ) then
25212.             if ( nd_profile > 0 ) then
25211.                $I_L25211_72 = 0
25211.                if ( nd_layer >= 2 ) then
25211.                   $I_L25211_74 = 0
25211. !dir$ blocking_size( 1, 1 )
25211.                   do
25212.                      $I_L25212_68 = 0
25212. !dir$ ivdep
25212. !dir$ blocking_size( 256, 256 )
25212.                      do
25213.                         $flux_direct_WR0_R0 = flux_direct(1 + $I_L25212_68, 2 * $I_L25211_74) * adjust_solar_ke(1 + $I_L25212_68, 1 + 2 * $I_L25211_74) * trans_0(1 + $I_L25212_68, 1 + 2 * $I_L25211_74)
25213.                         flux_direct(1 + $I_L25212_68, 1 + 2 * $I_L25211_74) = $flux_direct_WR0_R0
25221.                         s_up(1 + $I_L25212_68, 1 + 2 * $I_L25211_74) = flux_direct(1 + $I_L25212_68, 2 * $I_L25211_74) * source_coeff(1 + $I_L25212_68, 1 + 2 * $I_L25211_74, 1)
25223.                         s_down(1 + $I_L25212_68, 1 + 2 * $I_L25211_74) = $flux_direct_WR0_R0 + flux_direct(1 + $I_L25212_68, 2 * $I_L25211_74) * ( source_coeff(1 + $I_L25212_68, 1 + 2 * $I_L25211_74, 2) + -trans_0(1 + $I_L25212_68, 1 + 2 * $I_L25211_74) )
25213.                         $flux_direct_WR0_R0 = $flux_direct_WR0_R0 * trans_0(1 + $I_L25212_68, 2 + 2 * $I_L25211_74) * adjust_solar_ke(1 + $I_L25212_68, 2 + 2 * $I_L25211_74)
25213.                         flux_direct(1 + $I_L25212_68, 2 + 2 * $I_L25211_74) = $flux_direct_WR0_R0
25221.                         s_up(1 + $I_L25212_68, 2 + 2 * $I_L25211_74) = flux_direct(1 + $I_L25212_68, 1 + 2 * $I_L25211_74) * source_coeff(1 + $I_L25212_68, 2 + 2 * $I_L25211_74, 1)
25223.                         s_down(1 + $I_L25212_68, 2 + 2 * $I_L25211_74) = $flux_direct_WR0_R0 + flux_direct(1 + $I_L25212_68, 1 + 2 * $I_L25211_74) * ( source_coeff(1 + $I_L25212_68, 2 + 2 * $I_L25211_74, 2) + -trans_0(1 + $I_L25212_68, 2 + 2 * $I_L25211_74) )
25216.                         $I_L25212_68 = 1 + $I_L25212_68
25212.                         if ( $I_L25212_68 >= nd_profile ) exit
25212.                      enddo
25217.                      $I_L25211_74 = 1 + $I_L25211_74
25216.                      if ( $I_L25211_74 >= _rsh( nd_layer, 1 ) ) exit
25216.                   enddo
25217.                   $I_L25211_72 = and( 0xfffffffffffffffeUL, nd_layer )
25217.                endif
25211.                if ( $I_L25211_72 < nd_layer ) then
25212.                   $I_L25212_68 = 0
25212. !dir$ ivdep
25212. !dir$ blocking_size( 256, 256 )
25212.                   do
25213.                      $flux_direct_WR0_R0 = flux_direct(1 + $I_L25212_68, $I_L25211_72) * trans_0(1 + $I_L25212_68, 1 + $I_L25211_72) * adjust_solar_ke(1 + $I_L25212_68, 1 + $I_L25211_72)
25213.                      flux_direct(1 + $I_L25212_68, 1 + $I_L25211_72) = $flux_direct_WR0_R0
25221.                      s_up(1 + $I_L25212_68, 1 + $I_L25211_72) = flux_direct(1 + $I_L25212_68, $I_L25211_72) * source_coeff(1 + $I_L25212_68, 1 + $I_L25211_72, 1)
25223.                      s_down(1 + $I_L25212_68, 1 + $I_L25211_72) = $flux_direct_WR0_R0 + flux_direct(1 + $I_L25212_68, $I_L25211_72) * ( source_coeff(1 + $I_L25212_68, 1 + $I_L25211_72, 2) + -trans_0(1 + $I_L25212_68, 1 + $I_L25211_72) )
25216.                      $I_L25212_68 = 1 + $I_L25212_68
25212.                      if ( $I_L25212_68 >= nd_profile ) exit
25212.                   enddo
25212.                endif
25212.             endif
25212.          endif
25229.       else if ( nd_layer > 0 ) then
25233.          if ( nd_profile > 0 ) then
25232.             $I_L25232_70 = 0
25232.             if ( nd_layer >= 2 ) then
25232.                $I_L25232_76 = 0
25232. !dir$ blocking_size( 1, 1 )
25232.                do
25233.                   $I_L25233_66 = 0
25233. !dir$ ivdep
25233. !dir$ blocking_size( 256, 256 )
25233.                   do
25234.                      flux_direct(1 + $I_L25233_66, 1 + 2 * $I_L25232_76) = trans_0(1 + $I_L25233_66, 1 + 2 * $I_L25232_76) * flux_direct(1 + $I_L25233_66, 2 * $I_L25232_76)
25241.                      s_up(1 + $I_L25233_66, 1 + 2 * $I_L25232_76) = flux_direct(1 + $I_L25233_66, 2 * $I_L25232_76) * source_coeff(1 + $I_L25233_66, 1 + 2 * $I_L25232_76, 1)
25243.                      s_down(1 + $I_L25233_66, 1 + 2 * $I_L25232_76) = flux_direct(1 + $I_L25233_66, 2 * $I_L25232_76) * source_coeff(1 + $I_L25233_66, 1 + 2 * $I_L25232_76, 2)
25234.                      flux_direct(1 + $I_L25233_66, 2 + 2 * $I_L25232_76) = flux_direct(1 + $I_L25233_66, 1 + 2 * $I_L25232_76) * trans_0(1 + $I_L25233_66, 2 + 2 * $I_L25232_76)
25241.                      s_up(1 + $I_L25233_66, 2 + 2 * $I_L25232_76) = flux_direct(1 + $I_L25233_66, 1 + 2 * $I_L25232_76) * source_coeff(1 + $I_L25233_66, 2 + 2 * $I_L25232_76, 1)
25243.                      s_down(1 + $I_L25233_66, 2 + 2 * $I_L25232_76) = flux_direct(1 + $I_L25233_66, 1 + 2 * $I_L25232_76) * source_coeff(1 + $I_L25233_66, 2 + 2 * $I_L25232_76, 2)
25236.                      $I_L25233_66 = 1 + $I_L25233_66
25233.                      if ( $I_L25233_66 >= nd_profile ) exit
25233.                   enddo
25237.                   $I_L25232_76 = 1 + $I_L25232_76
25236.                   if ( $I_L25232_76 >= _rsh( nd_layer, 1 ) ) exit
25236.                enddo
25237.                $I_L25232_70 = and( 0xfffffffffffffffeUL, nd_layer )
25237.             endif
25232.             if ( $I_L25232_70 < nd_layer ) then
25233.                $I_L25233_66 = 0
25233. !dir$ ivdep
25233. !dir$ blocking_size( 256, 256 )
25233.                do
25234.                   flux_direct(1 + $I_L25233_66, 1 + $I_L25232_70) = flux_direct(1 + $I_L25233_66, $I_L25232_70) * trans_0(1 + $I_L25233_66, 1 + $I_L25232_70)
25241.                   s_up(1 + $I_L25233_66, 1 + $I_L25232_70) = flux_direct(1 + $I_L25233_66, $I_L25232_70) * source_coeff(1 + $I_L25233_66, 1 + $I_L25232_70, 1)
25243.                   s_down(1 + $I_L25233_66, 1 + $I_L25232_70) = flux_direct(1 + $I_L25233_66, $I_L25232_70) * source_coeff(1 + $I_L25233_66, 1 + $I_L25232_70, 2)
25236.                   $I_L25233_66 = 1 + $I_L25233_66
25233.                   if ( $I_L25233_66 >= nd_profile ) exit
25233.                enddo
25233.             endif
25233.          endif
25233.       endif
25253.       return
25253.       end
25253.       
25278.       
25278.       subroutine sol_scat_cos( n_profile, n_direction, mu_0, direction, cos_sol_view, nd_profile, nd_direction )
25278.       t$799 = nd_profile
25304.       t$3051 = _zla( 0, nd_profile )
25278.       t$800 = nd_direction
25278.       t$3052 = _zla( 0, nd_profile )
25306.       t$3053 = _zla( 0, nd_direction )
25278.       t$3054 = _zla( 0, nd_profile ) * _zla( 0, nd_direction )
25278.       t$3055 = 2 * _zla( 0, nd_profile ) * _zla( 0, nd_direction )
25278.       t$3056 = _zla( 0, nd_profile ) * _zla( 0, nd_direction )
25325.       if ( n_direction > 0 ) then
25326.          if ( n_profile > 0 ) then
25325.             $I_L25325_20 = 0
25325.             do
25326.                $I_L25326_18 = 0
25326.                do
25325.                   $I_L25325_22 = 0
25325. !dir$ shortloop16
25325. !dir$ blocking_size( 2, 2 )
25325.                   do
25326.                      $I_L25326_12 = 0
25326. !dir$ ivdep
25326. !dir$ blocking_size( 256, 256 )
25326.                      do
25327.                         $Flat_S2 = cos( direction(1 + $I_L25326_12 + 256 * $I_L25326_18, 1 + $I_L25325_22 + 2 * $I_L25325_20, 2) )
25327.                         cos_sol_view(1 + $I_L25326_12 + 256 * $I_L25326_18, 1 + $I_L25325_22 + 2 * $I_L25325_20) = -( mu_0(1 + $I_L25326_12 + 256 * $I_L25326_18) * direction(1 + $I_L25326_12 + 256 * $I_L25326_18, 1 + $I_L25325_22 + 2 * $I_L25325_20, 1) ) + $Flat_S2 * _sqrt( ( 1.0 + -( mu_0(1 + $I_L25326_12 + 256 * $I_L25326_18) * mu_0(1 + $I_L25326_12 + 256 * $I_L25326_18) ) ) * ( 1.0 + -( direction(1 + $I_L25326_12 + 256 * $I_L25326_18, 1 + $I_L25325_22 + 2 * $I_L25325_20, 1) * direction(1 + $I_L25326_12 + 256 * $I_L25326_18, 1 + $I_L25325_22 + 2 * $I_L25325_20, 1) ) ) )
25326.                         $I_L25326_12 = 1 + $I_L25326_12
25326.                         if ( $I_L25326_12 >= min( n_profile, 256 + 256 * $I_L25326_18 ) + -256 * $I_L25326_18 ) exit
25326.                      enddo
25325.                      $I_L25325_22 = 1 + $I_L25325_22
25325.                      if ( $I_L25325_22 >= min( n_direction, 2 + 2 * $I_L25325_20 ) + -2 * $I_L25325_20 ) exit
25325.                   enddo
25326.                   $I_L25326_18 = 1 + $I_L25326_18
25331.                   if ( $I_L25326_18 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
25331.                enddo
25325.                $I_L25325_20 = 1 + $I_L25325_20
25325.                if ( $I_L25325_20 >= 1 + max( 0, -1 + _rsh( 1 + n_direction, 1 ) ) ) exit
25325.             enddo
25325.          endif
25325.       endif
25337.       return
25337.       end
25337.       
25357.       
25357.       subroutine solve_band_k_eqv( ierr, n_profile, n_layer, i_top, p, t, d_mass, i_angular_integration, i_2stream, n_order_phase, l_rescale, n_order_gauss, ms_min, ms_max, i_truncation, ls_local_trunc, accuracy_adaptive, euler_factor, i_sph_algorithm, i_sph_mode, ia_sph_mm, cg_coeff, uplm_zero, uplm_sol, i_scatter_method, i_solver, i_band, n_gas, index_absorb, i_band_esft, i_scale_esft, i_scale_fnc, k_esft, w_esft, scale_vector, p_reference, t_reference, gas_mix_ratio, gas_frac_rescaled, l_doppler, doppler_correction, isolir, zen_0, zen_00, solar_irrad, planck_flux_band, diff_planck_band, l_ir_source_quad, diff_planck_band_2, ls_brdf_trunc, n_brdf_basis_fnc, rho_alb, f_brdf, brdf_sol, brdf_hemi, diff_albedo_basis, planck_flux_surface, l_tile, n_point_tile, n_tile, list_tile, rho_alb_tile, planck_flux_tile, ss_prop, l_cloud, i_cloud, n_cloud_top, n_cloud_type, frac_cloud, n_region, k_clr, i_region_cloud, frac_region, w_free, w_cloud, cloud_overlap, n_column_slv, list_column_slv, i_clm_lyr_chn, i_clm_cld_typ, area_column, n_viewing_level, i_rad_layer, frac_rad_layer, n_direction, direction, weight_band, l_initial, flux_direct, flux_down, flux_up, i_direct, radiance, photolysis, l_clear, i_solver_clear, flux_direct_clear, flux_down_clear, flux_up_clear, flux_up_tile, flux_up_blue_tile, l_blue_flux_surf, weight_blue, flux_direct_blue_surf, flux_down_blue_surf, flux_up_blue_surf, nd_profile, nd_layer, nd_layer_clr, id_ct, nd_column, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_band, nd_species, nd_esft_term, nd_scale_variable, nd_cloud_type, nd_region, nd_overlap_coeff, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc, nd_viewing_level, nd_direction, nd_source_coeff, nd_point_tile, nd_tile )
25357.       t$801 = nd_profile
25357.       t$802 = nd_layer
25526.       t$3057 = _zla( 0, nd_profile )
25357.       t$3058 = _zla( 0, nd_profile )
25526.       t$3059 = _zla( 0, nd_layer )
25357.       t$3060 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
25357.       t$803 = nd_max_order
25357.       t$3061 = 1 + nd_max_order
25550.       t$3062 = _zla( 0, 1 + nd_max_order )
25357.       t$804 = nd_sph_coeff
25567.       t$3063 = _zla( 0, nd_sph_coeff )
25357.       t$805 = nd_radiance_profile
25571.       t$3064 = _zla( 0, nd_radiance_profile )
25357.       t$3065 = _zla( 0, nd_radiance_profile )
25357.       t$3066 = _zla( 0, nd_sph_coeff ) * _zla( 0, nd_radiance_profile )
25357.       t$806 = nd_species
25357.       t$807 = nd_band
25594.       t$3067 = _zla( 0, nd_species )
25357.       t$3068 = _zla( 0, nd_species )
25594.       t$3069 = _zla( 0, nd_band )
25357.       t$3070 = _zla( 0, nd_species ) * _zla( 0, nd_band )
25357.       t$3071 = _zla( 0, nd_band )
25357.       t$3072 = _zla( 0, nd_species ) * _zla( 0, nd_band )
25357.       t$808 = nd_esft_term
25606.       t$3073 = _zla( 0, nd_esft_term )
25357.       t$3074 = _zla( 0, nd_esft_term )
25357.       t$3075 = _zla( 0, nd_band ) * _zla( 0, nd_esft_term )
25357.       t$3076 = _zla( 0, nd_species ) * _zla( 0, nd_band ) * _zla( 0, nd_esft_term )
25357.       t$809 = nd_scale_variable
25610.       t$3077 = _zla( 0, nd_scale_variable )
25357.       t$3078 = _zla( 0, nd_scale_variable )
25357.       t$3079 = _zla( 0, nd_esft_term ) * _zla( 0, nd_scale_variable )
25357.       t$3080 = _zla( 0, nd_band ) * _zla( 0, nd_esft_term ) * _zla( 0, nd_scale_variable )
25357.       t$3081 = _zla( 0, nd_species ) * _zla( 0, nd_band ) * _zla( 0, nd_esft_term ) * _zla( 0, nd_scale_variable )
25357.       t$3082 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
25357.       t$3083 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_species )
25357.       t$3084 = 1 + nd_layer
25644.       t$3085 = _zla( 0, 1 + nd_layer )
25357.       t$3086 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
25357.       t$810 = nd_brdf_basis_fnc
25662.       t$3087 = _zla( 0, nd_brdf_basis_fnc )
25357.       t$3088 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
25357.       t$811 = nd_brdf_trunc / 2
25357.       t$812 = nd_brdf_trunc
25357.       t$3089 = _zla( 0, nd_brdf_basis_fnc )
25357.       t$3090 = 1 + t$811
25664.       t$3091 = _zla( 0, 1 + t$811 )
25357.       t$3092 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$811 )
25357.       t$3093 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$811 ) * _zla( 0, 1 + t$811 )
25357.       t$3094 = 1 + nd_brdf_trunc
25664.       t$3095 = _zla( 0, 1 + nd_brdf_trunc )
25357.       t$3096 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$811 ) * _zla( 0, 1 + t$811 ) * _zla( 0, 1 + nd_brdf_trunc )
25357.       t$813 = nd_direction
25357.       t$3097 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
25667.       t$3098 = _zla( 0, nd_direction )
25357.       t$3099 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_direction )
25357.       t$814 = nd_point_tile
25685.       t$3100 = _zla( 0, nd_point_tile )
25357.       t$815 = nd_tile
25357.       t$3101 = _zla( 0, nd_point_tile )
25357.       t$3102 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_point_tile )
25688.       t$3103 = _zla( 0, nd_tile )
25357.       t$3104 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_point_tile ) * _zla( 0, nd_tile )
25357.       t$3105 = _zla( 0, nd_point_tile ) * _zla( 0, nd_tile )
 2600.       if ( t$27 == 0 ) then
 2600.          t$3110(1) = 4
 2600.          t$3111(1) = 0
 2600.          t$3112(1) = 0
 2600.          t$3107(1) = int( loc( t$26 ), 8 )
 2600.          t$3108(1) = 0
 2600.          t$3109(1) = int( loc( t$3106 ), 8 )
 2600.          t$27 = __get_dynamic_type( 2, t$3107(1), t$3110(1), 1, t$3108(1), t$3109(1), t$3111(1), t$3112(1) )
 2600.       endif
25357.       t$818 = id_ct
25357.       t$816 = nd_cloud_type
25357.       t$3114 = 1 + nd_layer + -id_ct
25732.       t$3115 = max( 0, 1 + nd_layer + -id_ct )
25357.       t$3116 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
25732.       t$3117 = max( 0, nd_cloud_type )
25357.       t$3118 = _zla( 0, nd_profile ) * max( 0, nd_cloud_type ) * max( 0, 1 + nd_layer + -id_ct )
25357.       t$821 = nd_region
25741.       t$3119 = max( 0, nd_region )
25357.       t$3120 = _zla( 0, nd_profile ) * max( 0, nd_region ) * max( 0, 1 + nd_layer + -id_ct )
25357.       t$3121 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
25357.       t$819 = ( -1 + id_ct )
25357.       t$820 = nd_overlap_coeff
25357.       t$3122 = 2 + nd_layer + -id_ct
25736.       t$3123 = max( 0, 2 + nd_layer + -id_ct )
25357.       t$3124 = _zla( 0, nd_profile ) * max( 0, 2 + nd_layer + -id_ct )
25736.       t$3125 = max( 0, nd_overlap_coeff )
25357.       t$3126 = _zla( 0, nd_profile ) * max( 0, nd_overlap_coeff ) * max( 0, 2 + nd_layer + -id_ct )
25357.       t$817 = nd_column
25723.       t$3127 = max( 0, nd_column )
25357.       t$3128 = _zla( 0, nd_profile ) * max( 0, nd_column )
25357.       t$822 = nd_viewing_level
25749.       t$3129 = max( 0, nd_viewing_level )
25357.       t$3130 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
25357.       t$3131 = 2 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
25357.       t$823 = nd_flux_profile
25765.       t$3132 = max( 0, nd_flux_profile )
25357.       t$3133 = max( 0, nd_flux_profile )
25357.       t$3134 = max( 0, nd_flux_profile ) * _zla( 0, 1 + nd_layer )
25357.       t$3135 = _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer )
25357.       t$3136 = _zla( 0, nd_radiance_profile ) * max( 0, nd_viewing_level )
25357.       t$3137 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * max( 0, nd_viewing_level )
25357.       t$824 = nd_j_profile
25781.       t$3138 = max( 0, nd_j_profile )
25357.       t$3139 = max( 0, nd_j_profile )
25357.       t$3140 = max( 0, nd_viewing_level ) * max( 0, nd_j_profile )
25851.       t$3143 = 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
25862.       t$3144 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
25862.       t$3146 = t$3144 + 8 * _zla( 0, nd_profile )
25842.       t$3147 = 8 * ( 7 + t$3144 + 8 * _zla( 0, nd_profile ) ) / 8
25842.       t$3149 = t$3147 + 8 * _zla( 0, nd_profile )
25869.       t$3150 = 8 * ( 7 + t$3147 + 8 * _zla( 0, nd_profile ) ) / 8
25869.       t$3152 = t$3150 + 8 * max( 0, nd_flux_profile ) * _zla( 0, 1 + nd_layer )
25865.       t$3153 = 8 * ( 7 + t$3150 + 8 * max( 0, nd_flux_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
25865.       t$3155 = t$3153 + 8 * max( 0, nd_flux_profile ) * _zla( 0, 1 + nd_layer )
25898.       t$3156 = 8 * ( 7 + t$3153 + 8 * max( 0, nd_flux_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
25898.       t$3158 = t$3156 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
25845.       t$3159 = 8 * ( 7 + t$3156 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
25845.       t$3161 = t$3159 + 8 * _zla( 0, nd_profile )
25847.       t$3162 = 8 * ( 7 + t$3159 + 8 * _zla( 0, nd_profile ) ) / 8
25847.       t$3164 = t$3162 + 8 * _zla( 0, nd_profile )
25357.       t$825 = ( 2 + 2 * nd_layer )
25896.       t$3165 = max( 0, ( 2 + 2 * nd_layer ) )
25357.       t$3166 = _zla( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
25896.       t$3167 = 8 * ( 7 + t$3162 + 8 * _zla( 0, nd_profile ) ) / 8
25896.       t$3169 = t$3167 + 8 * _zla( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
25357.       t$3170 = max( 0, nd_flux_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
25871.       t$3171 = 8 * ( 7 + t$3167 + 8 * _zla( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) ) ) / 8
25871.       t$3173 = t$3171 + 8 * max( 0, nd_flux_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
25867.       t$3174 = 8 * ( 7 + t$3171 + 8 * max( 0, nd_flux_profile ) * max( 0, ( 2 + 2 * nd_layer ) ) ) / 8
25867.       t$3176 = t$3174 + 8 * max( 0, nd_flux_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
25874.       t$3177 = 8 * ( 7 + t$3174 + 8 * max( 0, nd_flux_profile ) * max( 0, ( 2 + 2 * nd_layer ) ) ) / 8
25874.       t$3179 = t$3177 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer )
25837.       t$3181 = t$3177 + 4 * _zla( 0, nd_species ) + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer )
25854.       t$3182 = 8 * ( 7 + t$3177 + 4 * _zla( 0, nd_species ) + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
25854.       t$3184 = t$3182 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
25858.       t$3185 = 8 * ( 7 + t$3182 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
25858.       t$3187 = t$3185 + 8 * _zla( 0, nd_species )
25860.       t$3188 = 8 * ( 7 + t$3185 + 8 * _zla( 0, nd_species ) ) / 8
25860.       t$3190 = t$3188 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
25357.       t$3191 = 1 + nd_cloud_type
25911.       t$3192 = max( 0, 1 + nd_cloud_type )
25357.       t$3193 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct ) * max( 0, 1 + nd_cloud_type )
25911.       t$3194 = 8 * ( 7 + t$3188 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
25911.       t$3196 = t$3194 + 8 * _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct ) * max( 0, 1 + nd_cloud_type )
25357.       t$826 = nd_layer_clr
25908.       t$3197 = max( 0, nd_layer_clr )
25357.       t$3198 = _zla( 0, nd_profile ) * max( 0, nd_layer_clr )
25908.       t$3199 = 8 * ( 7 + t$3194 + 8 * _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct ) * max( 0, 1 + nd_cloud_type ) ) / 8
25908.       t$3201 = t$3199 + 8 * _zla( 0, nd_profile ) * max( 0, nd_layer_clr )
25880.       t$3202 = 8 * ( 7 + t$3199 + 8 * _zla( 0, nd_profile ) * max( 0, nd_layer_clr ) ) / 8
25880.       t$3204 = t$3202 + 8 * max( 0, nd_viewing_level ) * max( 0, nd_j_profile )
25876.       t$3205 = 8 * ( 7 + t$3202 + 8 * max( 0, nd_viewing_level ) * max( 0, nd_j_profile ) ) / 8
25876.       t$3207 = t$3205 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * max( 0, nd_viewing_level )
25357.       t$3208 = _zla( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
25357.       t$3209 = _zla( 0, nd_profile ) * _zla( 0, nd_species ) * max( 0, ( 2 + 2 * nd_layer ) )
25892.       t$3210 = 8 * ( 7 + t$3205 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * max( 0, nd_viewing_level ) ) / 8
25892.       t$3212 = t$3210 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_species ) * max( 0, ( 2 + 2 * nd_layer ) )
25894.       t$3213 = 8 * ( 7 + t$3210 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_species ) * max( 0, ( 2 + 2 * nd_layer ) ) ) / 8
25894.       t$3215 = t$3213 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_species ) * max( 0, ( 2 + 2 * nd_layer ) )
25856.       t$3216 = 8 * ( 7 + t$3213 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_species ) * max( 0, ( 2 + 2 * nd_layer ) ) ) / 8
25856.       t$3218 = t$3216 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
25357.       t$3141 = int( _alloc( t$3216 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ), 8 )
25851.       t$3142 = t$3141
25862.       t$3145 = t$3144 + t$3141
25842.       t$3148 = t$3147 + t$3141
25869.       t$3151 = t$3150 + t$3141
25865.       t$3154 = t$3153 + t$3141
25898.       t$3157 = t$3156 + t$3141
25845.       t$3160 = t$3159 + t$3141
25847.       t$3163 = t$3162 + t$3141
25896.       t$3168 = t$3167 + t$3141
25871.       t$3172 = t$3171 + t$3141
25867.       t$3175 = t$3174 + t$3141
25874.       t$3178 = t$3177 + t$3141
25837.       t$3180 = t$3177 + t$3141 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, 1 + nd_layer )
25854.       t$3183 = t$3182 + t$3141
25858.       t$3186 = t$3185 + t$3141
25860.       t$3189 = t$3188 + t$3141
25911.       t$3195 = t$3194 + t$3141
25908.       t$3200 = t$3199 + t$3141
25880.       t$3203 = t$3202 + t$3141
25876.       t$3206 = t$3205 + t$3141
25892.       t$3211 = t$3210 + t$3141
25894.       t$3214 = t$3213 + t$3141
25856.       t$3217 = t$3216 + t$3141
25923.       $i_gas_S74 = index_absorb(1, i_band)
25925.       if ( isolir == 1 ) then
25933.          if ( n_layer > 0 ) then
25934.             if ( n_profile > 0 ) then
25933.                $I_L25933_965 = 0
25933.                do
25934.                   $I_L25934_863 = 0
25934. !dir$ ivdep
25934.                   do
25935.                      adjust_solar_ke(1 + $I_L25934_863, 1 + $I_L25933_965) = 1.0
25936.                      k_eqv(1 + $I_L25934_863, 1 + $I_L25933_965) = 0.0
25937.                      $I_L25934_863 = 1 + $I_L25934_863
25934.                      if ( $I_L25934_863 >= n_profile ) exit
25934.                   enddo
25938.                   $I_L25933_965 = 1 + $I_L25933_965
25937.                   if ( $I_L25933_965 >= n_layer ) exit
25937.                enddo
25937.             endif
25937.          endif
25940.          if ( -2 + n_gas >= 0 ) then
25940.             $I_L25940_1060 = 0
25940.             do
25943.                if ( n_profile > 0 ) then
25943.                   $I_L25943_865 = 0
25943. !dir$ ivdep
25943.                   do
25944.                      flux_gas(1 + $I_L25943_865, 0) = 1.0
25945.                      sum_k_flux(1 + $I_L25943_865, n_layer, 2 + $I_L25940_1060) = 0.0
25946.                      sum_flux(1 + $I_L25943_865, n_layer, 2 + $I_L25940_1060) = 0.0
25947.                      $I_L25943_865 = 1 + $I_L25943_865
25943.                      if ( $I_L25943_865 >= n_profile ) exit
25943.                   enddo
25943.                endif
25948.                if ( n_layer > 0 ) then
25949.                   if ( n_profile > 0 ) then
25948.                      $I_L25948_967 = 0
25948.                      do
25949.                         $I_L25949_867 = 0
25949. !dir$ ivdep
25949.                         do
25950.                            flux_gas(1 + $I_L25949_867, 1 + $I_L25948_967) = 0.0
25951.                            $I_L25949_867 = 1 + $I_L25949_867
25949.                            if ( $I_L25949_867 >= n_profile ) exit
25949.                         enddo
25952.                         $I_L25948_967 = 1 + $I_L25948_967
25951.                         if ( $I_L25948_967 >= n_layer ) exit
25951.                      enddo
25951.                   endif
25951.                endif
25954.                $i_gas_band_S6 = index_absorb(2 + $I_L25940_1060, i_band)
25955.                $t_S7 = i_band_esft(i_band, $i_gas_band_S6)
25955.                if ( $t_S7 > 0 ) then
25961.                   $SC_i_scale_esft_I0 = i_scale_esft(i_band, $i_gas_band_S6)
25955.                   $I_L25955_1050 = 0
25955.                   do
25958.                      $esft_weight_S18 = w_esft(1 + $I_L25955_1050, i_band, $i_gas_band_S6)
25961.                      if ( $SC_i_scale_esft_I0 == 2 ) then
25962.                         tm$2446 = loc( gas_mix_ratio(1, 1, $i_gas_band_S6) )
25962.                         gas_mix_ratio = _copyin( gas_mix_ratio(1, 1, $i_gas_band_S6) )
25962.                         tm$2448 = loc( gas_frac_rescaled(1, 1, $i_gas_band_S6) )
25962.                         gas_frac_rescaled = _copyin( gas_frac_rescaled(1, 1, $i_gas_band_S6) )
25962.                         tm$2450 = loc( scale_vector(1, 1 + $I_L25955_1050, i_band, $i_gas_band_S6) )
25962.                         scale_parameter = _copyin( scale_vector(1, 1 + $I_L25955_1050, i_band, $i_gas_band_S6) )
25962.                         t$734 = nd_profile
25962.                         t$735 = nd_layer
25962.                         t$2851 = max( 0, nd_profile )
25962.                         t$2852 = max( 0, nd_profile )
25962.                         t$2853 = max( 0, nd_layer )
25962.                         t$2854 = max( 0, nd_profile ) * max( 0, nd_layer )
25962.                         t$736 = nd_scale_variable
25962.                         t$2855 = max( 0, nd_scale_variable )
25962.                         if ( l_doppler($i_gas_band_S6) /= .false. ) then
25962.                            $pressure_offset_S11 = doppler_correction($i_gas_band_S6)
25962.                         else
25962.                            $pressure_offset_S11 = 0.0
25962.                         endif
25962.                         if ( i_scale_fnc(i_band, $i_gas_band_S6) == 1 ) then
25962.                            if ( nd_layer > 0 ) then
25962.                               $SC_scale_parameter_I2 = scale_parameter(2)
25962.                               $SC_scale_parameter_I1 = scale_parameter(1)
25962.                               if ( nd_profile > 0 ) then
25962.                                  $SC_p_reference_I33 = p_reference($i_gas_band_S6, i_band)
25962.                                  $SC_t_reference_I32 = t_reference($i_gas_band_S6, i_band)
25962.                                  $I_L25962_973 = 0
25962.                                  do
25962.                                     $I_L25962_873 = 0
25962. !dir$ ivdep
25962.                                     do
25962.                                        gas_frac_rescaled(1 + $I_L25962_873, 1 + $I_L25962_973) = _expn( $SC_scale_parameter_I2 * log( ( t(1 + $I_L25962_873, 1 + $I_L25962_973) * 1.0/$SC_t_reference_I32 ) ) + $SC_scale_parameter_I1 * log( ( 1.0/( $pressure_offset_S11 + $SC_p_reference_I33 ) * ( $pressure_offset_S11 + p(1 + $I_L25962_873, 1 + $I_L25962_973) ) ) ) )
25962.                                        $I_L25962_873 = 1 + $I_L25962_873
25962.                                        if ( $I_L25962_873 >= nd_profile ) exit
25962.                                     enddo
25962.                                     $I_L25962_973 = 1 + $I_L25962_973
25962.                                     if ( $I_L25962_973 >= nd_layer ) exit
25962.                                  enddo
25962.                               endif
25962.                            endif
25962.                            goto 10
25962.                         else if ( i_scale_fnc(i_band, $i_gas_band_S6) /= 0 ) then
25962.                            if ( i_scale_fnc(i_band, $i_gas_band_S6) == 2 ) then
25962.                               if ( nd_layer > 0 ) then
25962.                                  $SC_scale_parameter_I3 = scale_parameter(3)
25962.                                  $SC_scale_parameter_I2 = scale_parameter(2)
25962.                                  $SC_scale_parameter_I1 = scale_parameter(1)
25962.                                  if ( nd_profile > 0 ) then
25962.                                     $SC_p_reference_I33 = p_reference($i_gas_band_S6, i_band)
25962.                                     $SC_t_reference_I32 = t_reference($i_gas_band_S6, i_band)
25962.                                     $I_L25962_971 = 0
25962.                                     do
25962.                                        $I_L25962_871 = 0
25962. !dir$ ivdep
25962.                                        do
25962.                                           gas_frac_rescaled(1 + $I_L25962_871, 1 + $I_L25962_971) = ( 1.0 + $SC_scale_parameter_I3 * ( -1.0 + ( t(1 + $I_L25962_871, 1 + $I_L25962_971) * 1.0/$SC_t_reference_I32 ) ) * ( -1.0 + ( t(1 + $I_L25962_871, 1 + $I_L25962_971) * 1.0/$SC_t_reference_I32 ) ) + $SC_scale_parameter_I2 * ( -1.0 + ( t(1 + $I_L25962_871, 1 + $I_L25962_971) * 1.0/$SC_t_reference_I32 ) ) ) * _expn( $SC_scale_parameter_I1 * log( ( 1.0/( $pressure_offset_S11 + $SC_p_reference_I33 ) * ( $pressure_offset_S11 + p(1 + $I_L25962_871, 1 + $I_L25962_971) ) ) ) )
25962.                                           $I_L25962_871 = 1 + $I_L25962_871
25962.                                           if ( $I_L25962_871 >= nd_profile ) exit
25962.                                        enddo
25962.                                        $I_L25962_971 = 1 + $I_L25962_971
25962.                                        if ( $I_L25962_971 >= nd_layer ) exit
25962.                                     enddo
25962.                                  endif
25962.                               endif
25962.                               goto 10
25962.                            else if ( i_scale_fnc(i_band, $i_gas_band_S6) == 3 ) then
25962.                               if ( nd_layer > 0 ) then
25962.                                  $SC_scale_parameter_I4 = scale_parameter(4)
25962.                                  $SC_scale_parameter_I3 = scale_parameter(3)
25962.                                  $SC_scale_parameter_I2 = scale_parameter(2)
25962.                                  $SC_scale_parameter_I1 = scale_parameter(1)
25962.                                  if ( nd_profile > 0 ) then
25962.                                     $SC_p_reference_I33 = p_reference($i_gas_band_S6, i_band)
25962.                                     $SC_t_reference_I32 = t_reference($i_gas_band_S6, i_band)
25962.                                     $I_L25962_969 = 0
25962.                                     do
25962.                                        $I_L25962_869 = 0
25962. !dir$ ivdep
25962.                                        do
25962.                                           gas_frac_rescaled(1 + $I_L25962_869, 1 + $I_L25962_969) = ( 1.0 + $SC_scale_parameter_I4 * ( -1.0 + ( t(1 + $I_L25962_869, 1 + $I_L25962_969) * 1.0/$SC_t_reference_I32 ) ) * ( -1.0 + ( t(1 + $I_L25962_869, 1 + $I_L25962_969) * 1.0/$SC_t_reference_I32 ) ) + $SC_scale_parameter_I3 * ( -1.0 + ( t(1 + $I_L25962_869, 1 + $I_L25962_969) * 1.0/$SC_t_reference_I32 ) ) ) * _expn( $SC_scale_parameter_I1 * log( ( 1.0/( $SC_scale_parameter_I2 + $SC_p_reference_I33 ) * ( $SC_scale_parameter_I2 + p(1 + $I_L25962_869, 1 + $I_L25962_969) ) ) ) )
25962.                                           $I_L25962_869 = 1 + $I_L25962_869
25962.                                           if ( $I_L25962_869 >= nd_profile ) exit
25962.                                        enddo
25962.                                        $I_L25962_969 = 1 + $I_L25962_969
25962.                                        if ( $I_L25962_969 >= nd_layer ) exit
25962.                                     enddo
25962.                                  endif
25962.                               endif
25962.    10                         continue
25962.                               if ( nd_layer > 0 ) then
25962.                                  if ( nd_profile > 0 ) then
25962.                                     $I_L25962_975 = 0
25962.                                     do
25962.                                        $I_L25962_875 = 0
25962. !dir$ ivdep
25962.                                        do
25962.                                           gas_frac_rescaled(1 + $I_L25962_875, 1 + $I_L25962_975) = max( 0.0, gas_frac_rescaled(1 + $I_L25962_875, 1 + $I_L25962_975) * gas_mix_ratio(1 + $I_L25962_875, 1 + $I_L25962_975) )
25962.                                           $I_L25962_875 = 1 + $I_L25962_875
25962.                                           if ( $I_L25962_875 >= nd_profile ) exit
25962.                                        enddo
25962.                                        $I_L25962_975 = 1 + $I_L25962_975
25962.                                        if ( $I_L25962_975 >= nd_layer ) exit
25962.                                     enddo
25962.                                  endif
25962.                               endif
25962.                            else
25962.                               _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$738,  _substr(t$737,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: An illegal type of scaling has been given.', 0x800600000000L ) ) )
25962.                               ierr = 1
25962.                            endif
25962.                         endif
25962.                         scale_vector(1, 1 + $I_L25955_1050, i_band, $i_gas_band_S6) = _copyout( scale_parameter )
25962.                         gas_frac_rescaled(1, 1, $i_gas_band_S6) = _copyout( gas_frac_rescaled )
25962.                         gas_mix_ratio(1, 1, $i_gas_band_S6) = _copyout( gas_mix_ratio )
25975.                         if ( ierr /= 0 ) then
25357.                            _free( t$3141 )
25357.                            goto 100
25357.                         endif
25981.                         if ( n_profile > 0 ) then
25981.                            $I_L25981_877 = 0
25981. !dir$ ivdep
25981.                            do
25982.                               flux_term(1 + $I_L25981_877, 1) = $esft_weight_S18
25983.                               $I_L25981_877 = 1 + $I_L25981_877
25981.                               if ( $I_L25981_877 >= n_profile ) exit
25981.                            enddo
25981.                         endif
25986.                         if ( i_angular_integration == 1 ) then
25987.                            if ( n_layer > 0 ) then
25988.                               if ( n_profile > 0 ) then
25989.                                  $SC_k_esft_I34 = k_esft(1 + $I_L25955_1050, i_band, $i_gas_band_S6)
25987.                                  $I_L25987_979 = 0
25987.                                  if ( n_layer >= 2 ) then
25987.                                     $I_L25987_1089 = 0
25987. !dir$ blocking_size( 1, 1 )
25987.                                     do
25988.                                        $I_L25988_881 = 0
25988. !dir$ ivdep
25988. !dir$ blocking_size( 256, 256 )
25988.                                        do
25989.                                           $flux_term_WR0_R0 = flux_term(1 + $I_L25988_881, 1 + 2 * $I_L25987_1089) * _expn( -( $SC_k_esft_I34 * d_mass(1 + $I_L25988_881, 1 + 2 * $I_L25987_1089) * gas_frac_rescaled(1 + $I_L25988_881, 1 + 2 * $I_L25987_1089, $i_gas_band_S6) * zen_00(1 + $I_L25988_881, 1 + 2 * $I_L25987_1089) ) )
25989.                                           flux_term(1 + $I_L25988_881, 2 + 2 * $I_L25987_1089) = $flux_term_WR0_R0
25993.                                           flux_gas(1 + $I_L25988_881, 1 + 2 * $I_L25987_1089) = $flux_term_WR0_R0 + flux_gas(1 + $I_L25988_881, 1 + 2 * $I_L25987_1089)
25989.                                           $flux_term_WR0_R0 = $flux_term_WR0_R0 * _expn( -( $SC_k_esft_I34 * d_mass(1 + $I_L25988_881, 2 + 2 * $I_L25987_1089) * zen_00(1 + $I_L25988_881, 2 + 2 * $I_L25987_1089) * gas_frac_rescaled(1 + $I_L25988_881, 2 + 2 * $I_L25987_1089, $i_gas_band_S6) ) )
25989.                                           flux_term(1 + $I_L25988_881, 3 + 2 * $I_L25987_1089) = $flux_term_WR0_R0
25993.                                           flux_gas(1 + $I_L25988_881, 2 + 2 * $I_L25987_1089) = $flux_term_WR0_R0 + flux_gas(1 + $I_L25988_881, 2 + 2 * $I_L25987_1089)
25994.                                           $I_L25988_881 = 1 + $I_L25988_881
25988.                                           if ( $I_L25988_881 >= n_profile ) exit
25988.                                        enddo
25995.                                        $I_L25987_1089 = 1 + $I_L25987_1089
25994.                                        if ( $I_L25987_1089 >= _rsh( n_layer, 1 ) ) exit
25994.                                     enddo
25995.                                     $I_L25987_979 = and( 0xfffffffffffffffeUL, n_layer )
25995.                                  endif
25987.                                  if ( $I_L25987_979 < n_layer ) then
25988.                                     $I_L25988_881 = 0
25988. !dir$ ivdep
25988. !dir$ blocking_size( 256, 256 )
25988.                                     do
25989.                                        $flux_term_WR0_R0 = flux_term(1 + $I_L25988_881, 1 + $I_L25987_979) * _expn( -( $SC_k_esft_I34 * d_mass(1 + $I_L25988_881, 1 + $I_L25987_979) * zen_00(1 + $I_L25988_881, 1 + $I_L25987_979) * gas_frac_rescaled(1 + $I_L25988_881, 1 + $I_L25987_979, $i_gas_band_S6) ) )
25989.                                        flux_term(1 + $I_L25988_881, 2 + $I_L25987_979) = $flux_term_WR0_R0
25993.                                        flux_gas(1 + $I_L25988_881, 1 + $I_L25987_979) = $flux_term_WR0_R0 + flux_gas(1 + $I_L25988_881, 1 + $I_L25987_979)
25994.                                        $I_L25988_881 = 1 + $I_L25988_881
25988.                                        if ( $I_L25988_881 >= n_profile ) exit
25988.                                     enddo
25988.                                  endif
25988.                               endif
25988.                            endif
25996.                         else if ( i_angular_integration == 3 ) then
25998.                            if ( n_layer > 0 ) then
25999.                               if ( n_profile > 0 ) then
26000.                                  $SC_k_esft_I34 = k_esft(1 + $I_L25955_1050, i_band, $i_gas_band_S6)
25998.                                  $I_L25998_977 = 0
25998.                                  if ( n_layer >= 2 ) then
25998.                                     $I_L25998_1091 = 0
25998. !dir$ blocking_size( 1, 1 )
25998.                                     do
25999.                                        $I_L25999_879 = 0
25999. !dir$ ivdep
25999. !dir$ blocking_size( 256, 256 )
25999.                                        do
26000.                                           $flux_term_WR0_R1 = flux_term(1 + $I_L25999_879, 1 + 2 * $I_L25998_1091) * _expn( -( $SC_k_esft_I34 * d_mass(1 + $I_L25999_879, 1 + 2 * $I_L25998_1091) * gas_frac_rescaled(1 + $I_L25999_879, 1 + 2 * $I_L25998_1091, $i_gas_band_S6) * 1.0/zen_00(1 + $I_L25999_879, 1 + 2 * $I_L25998_1091) ) )
26000.                                           flux_term(1 + $I_L25999_879, 2 + 2 * $I_L25998_1091) = $flux_term_WR0_R1
26004.                                           flux_gas(1 + $I_L25999_879, 1 + 2 * $I_L25998_1091) = $flux_term_WR0_R1 + flux_gas(1 + $I_L25999_879, 1 + 2 * $I_L25998_1091)
26000.                                           $flux_term_WR0_R1 = $flux_term_WR0_R1 * _expn( -( $SC_k_esft_I34 * d_mass(1 + $I_L25999_879, 2 + 2 * $I_L25998_1091) * gas_frac_rescaled(1 + $I_L25999_879, 2 + 2 * $I_L25998_1091, $i_gas_band_S6) * 1.0/zen_00(1 + $I_L25999_879, 2 + 2 * $I_L25998_1091) ) )
26000.                                           flux_term(1 + $I_L25999_879, 3 + 2 * $I_L25998_1091) = $flux_term_WR0_R1
26004.                                           flux_gas(1 + $I_L25999_879, 2 + 2 * $I_L25998_1091) = $flux_term_WR0_R1 + flux_gas(1 + $I_L25999_879, 2 + 2 * $I_L25998_1091)
26005.                                           $I_L25999_879 = 1 + $I_L25999_879
25999.                                           if ( $I_L25999_879 >= n_profile ) exit
25999.                                        enddo
26006.                                        $I_L25998_1091 = 1 + $I_L25998_1091
26005.                                        if ( $I_L25998_1091 >= _rsh( n_layer, 1 ) ) exit
26005.                                     enddo
26006.                                     $I_L25998_977 = and( 0xfffffffffffffffeUL, n_layer )
26006.                                  endif
25998.                                  if ( $I_L25998_977 < n_layer ) then
25999.                                     $I_L25999_879 = 0
25999. !dir$ ivdep
25999. !dir$ blocking_size( 256, 256 )
25999.                                     do
26000.                                        $flux_term_WR0_R1 = flux_term(1 + $I_L25999_879, 1 + $I_L25998_977) * _expn( -( $SC_k_esft_I34 * d_mass(1 + $I_L25999_879, 1 + $I_L25998_977) * gas_frac_rescaled(1 + $I_L25999_879, 1 + $I_L25998_977, $i_gas_band_S6) * 1.0/zen_00(1 + $I_L25999_879, 1 + $I_L25998_977) ) )
26000.                                        flux_term(1 + $I_L25999_879, 2 + $I_L25998_977) = $flux_term_WR0_R1
26004.                                        flux_gas(1 + $I_L25999_879, 1 + $I_L25998_977) = $flux_term_WR0_R1 + flux_gas(1 + $I_L25999_879, 1 + $I_L25998_977)
26005.                                        $I_L25999_879 = 1 + $I_L25999_879
25999.                                        if ( $I_L25999_879 >= n_profile ) exit
25999.                                     enddo
25999.                                  endif
25999.                               endif
25999.                            endif
25999.                         endif
26010.                         if ( n_profile > 0 ) then
26011.                            $SC_k_esft_I5 = k_esft(1 + $I_L25955_1050, i_band, $i_gas_band_S6)
26010.                            $I_L26010_883 = 0
26010. !dir$ ivdep
26010.                            do
26015.                               sum_flux(1 + $I_L26010_883, n_layer, 2 + $I_L25940_1060) = flux_term(1 + $I_L26010_883, 1 + n_layer) + sum_flux(1 + $I_L26010_883, n_layer, 2 + $I_L25940_1060)
26011.                               sum_k_flux(1 + $I_L26010_883, n_layer, 2 + $I_L25940_1060) = sum_k_flux(1 + $I_L26010_883, n_layer, 2 + $I_L25940_1060) + $SC_k_esft_I5 * flux_term(1 + $I_L26010_883, 1 + n_layer)
26017.                               $I_L26010_883 = 1 + $I_L26010_883
26010.                               if ( $I_L26010_883 >= n_profile ) exit
26010.                            enddo
26010.                         endif
26019.                         $I_L25955_1050 = 1 + $I_L25955_1050
26017.                      else
26017.                      endif
26017.                      if ( $I_L25955_1050 >= $t_S7 ) exit
26017.                   enddo
26023.                   if ( n_layer > 0 ) then
26024.                      if ( n_profile > 0 ) then
26023.                         $I_L26023_981 = 0
26023. !dir$ blocking_size( 1, 1 )
26023.                         do
26024.                            $I_L26024_885 = 0
26024. !dir$ ivdep
26024. !dir$ blocking_size( 256, 256 )
26024.                            do
26029.                               adjust_solar_ke(1 + $I_L26024_885, 1 + $I_L26023_981) = ( adjust_solar_ke(1 + $I_L26024_885, 1 + $I_L26023_981) * flux_gas(1 + $I_L26024_885, 1 + $I_L26023_981) * 1.0/flux_gas(1 + $I_L26024_885, $I_L26023_981) )
26025.                               k_eqv(1 + $I_L26024_885, 1 + $I_L26023_981) = k_eqv(1 + $I_L26024_885, 1 + $I_L26023_981) + ( sum_k_flux(1 + $I_L26024_885, n_layer, 2 + $I_L25940_1060) * gas_frac_rescaled(1 + $I_L26024_885, 1 + $I_L26023_981, $i_gas_band_S6) * 1.0/sum_flux(1 + $I_L26024_885, n_layer, 2 + $I_L25940_1060) )
26032.                               $I_L26024_885 = 1 + $I_L26024_885
26024.                               if ( $I_L26024_885 >= n_profile ) exit
26024.                            enddo
26033.                            $I_L26023_981 = 1 + $I_L26023_981
26032.                            if ( $I_L26023_981 >= n_layer ) exit
26032.                         enddo
26032.                      endif
26032.                   endif
26035.                   $I_L25940_1060 = 1 + $I_L25940_1060
26033.                else
26033.                endif
26033.                if ( $I_L25940_1060 >= -1 + n_gas ) exit
26033.             enddo
26033.             goto 20
26033.             goto 30
26033.          else
26033.    20       continue
26039.             if ( i_angular_integration == 1 ) then
26040.                if ( n_layer > 0 ) then
26041.                   if ( n_profile > 0 ) then
26040.                      $I_L26040_985 = 0
26040.                      do
26041.                         $I_L26041_889 = 0
26041. !dir$ ivdep
26041.                         do
26042.                            adjust_solar_ke(1 + $I_L26041_889, 1 + $I_L26040_985) = adjust_solar_ke(1 + $I_L26041_889, 1 + $I_L26040_985) * _expn( k_eqv(1 + $I_L26041_889, 1 + $I_L26040_985) * d_mass(1 + $I_L26041_889, 1 + $I_L26040_985) * zen_00(1 + $I_L26041_889, 1 + $I_L26040_985) )
26044.                            $I_L26041_889 = 1 + $I_L26041_889
26041.                            if ( $I_L26041_889 >= n_profile ) exit
26041.                         enddo
26045.                         $I_L26040_985 = 1 + $I_L26040_985
26044.                         if ( $I_L26040_985 >= n_layer ) exit
26044.                      enddo
26044.                   endif
26044.                endif
26046.             else if ( i_angular_integration == 3 ) then
26047.                if ( n_layer > 0 ) then
26048.                   if ( n_profile > 0 ) then
26047.                      $I_L26047_983 = 0
26047.                      do
26048.                         $I_L26048_887 = 0
26048. !dir$ ivdep
26048.                         do
26049.                            adjust_solar_ke(1 + $I_L26048_887, 1 + $I_L26047_983) = adjust_solar_ke(1 + $I_L26048_887, 1 + $I_L26047_983) * _expn( ( k_eqv(1 + $I_L26048_887, 1 + $I_L26047_983) * d_mass(1 + $I_L26048_887, 1 + $I_L26047_983) * 1.0/zen_00(1 + $I_L26048_887, 1 + $I_L26047_983) ) )
26051.                            $I_L26048_887 = 1 + $I_L26048_887
26048.                            if ( $I_L26048_887 >= n_profile ) exit
26048.                         enddo
26052.                         $I_L26047_983 = 1 + $I_L26047_983
26051.                         if ( $I_L26047_983 >= n_layer ) exit
26051.                      enddo
26051.                   endif
26051.                endif
26051.             endif
26051.             goto 30
26051.          endif
26055.       else if ( isolir == 2 ) then
26058.          if ( i_angular_integration == 1 ) then
26059.             if ( n_profile > 0 ) then
26059.                $I_L26059_854 = 0
26059. !dir$ ivdep
26059.                do
26060.                   diffuse_albedo(1 + $I_L26059_854) = rho_alb(1 + $I_L26059_854, 1)
26061.                   $I_L26059_854 = 1 + $I_L26059_854
26059.                   if ( $I_L26059_854 >= n_profile ) exit
26059.                enddo
26059.             endif
26062.          else if ( i_angular_integration == 2 ) then
26065.             if ( n_profile > 0 ) then
26065.                $I_L26065_856 = 0
26065. !dir$ ivdep
26065.                do
26066.                   diffuse_albedo(1 + $I_L26065_856) = 0.0
26067.                   $I_L26065_856 = 1 + $I_L26065_856
26065.                   if ( $I_L26065_856 >= n_profile ) exit
26065.                enddo
26065.             endif
26065.          else if ( i_angular_integration == 3 ) then
26070.             if ( n_profile > 0 ) then
26071.                $SC_diff_albedo_basis_I6 = diff_albedo_basis(1)
26070.                $I_L26070_858 = 0
26070. !dir$ ivdep
26070.                do
26071.                   diffuse_albedo(1 + $I_L26070_858) = $SC_diff_albedo_basis_I6 * rho_alb(1 + $I_L26070_858, 1)
26072.                   $I_L26070_858 = 1 + $I_L26070_858
26070.                   if ( $I_L26070_858 >= n_profile ) exit
26070.                enddo
26070.             endif
26073.             if ( n_brdf_basis_fnc > 0 ) then
26074.                if ( n_profile > 0 ) then
26073.                   $I_L26073_1066 = 0
26073.                   do
26074.                      $I_L26074_1048 = 0
26074.                      do
26073.                         $I_L26073_1045 = 0
26073. !dir$ shortloop16
26073. !dir$ blocking_size( 4, 4 )
26073.                         do
26074.                            $SCA_diff_albedo_basis_I41 = diff_albedo_basis(1 + $I_L26073_1045 + 4 * $I_L26073_1066)
26074.                            $I_L26074_860 = 0
26074. !dir$ ivdep
26074. !dir$ blocking_size( 256, 256 )
26074.                            do
26075.                               diffuse_albedo(1 + $I_L26074_860 + 256 * $I_L26074_1048) = $SCA_diff_albedo_basis_I41 * rho_alb(1 + $I_L26074_860 + 256 * $I_L26074_1048, 1 + $I_L26073_1045 + 4 * $I_L26073_1066)
26074.                               $I_L26074_860 = 1 + $I_L26074_860
26074.                               if ( $I_L26074_860 >= min( n_profile, 256 + 256 * $I_L26074_1048 ) + -256 * $I_L26074_1048 ) exit
26074.                            enddo
26073.                            $I_L26073_1045 = 1 + $I_L26073_1045
26073.                            if ( $I_L26073_1045 >= min( n_brdf_basis_fnc, 4 + 4 * $I_L26073_1066 ) + -4 * $I_L26073_1066 ) exit
26073.                         enddo
26074.                         $I_L26074_1048 = 1 + $I_L26074_1048
26076.                         if ( $I_L26074_1048 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
26076.                      enddo
26073.                      $I_L26073_1066 = 1 + $I_L26073_1066
26073.                      if ( $I_L26073_1066 >= 1 + max( 0, -1 + _rsh( 3 + n_brdf_basis_fnc, 2 ) ) ) exit
26073.                   enddo
26073.                endif
26073.             endif
26073.          endif
26082.          if ( -2 + n_gas >= 0 ) then
26082.             $I_L26082_1062 = 0
26082.             do
26086.                if ( 2 + 2 * n_layer > 0 ) then
26087.                   if ( n_profile > 0 ) then
26086.                      $I_L26086_987 = 0
26086.                      do
26087.                         $I_L26087_891 = 0
26087. !dir$ ivdep
26087.                         do
26088.                            sum_flux(1 + $I_L26087_891, 1 + $I_L26086_987, 2 + $I_L26082_1062) = 0.0
26089.                            sum_k_flux(1 + $I_L26087_891, 1 + $I_L26086_987, 2 + $I_L26082_1062) = 0.0
26090.                            $I_L26087_891 = 1 + $I_L26087_891
26087.                            if ( $I_L26087_891 >= n_profile ) exit
26087.                         enddo
26091.                         $I_L26086_987 = 1 + $I_L26086_987
26090.                         if ( $I_L26086_987 >= 2 + 2 * n_layer ) exit
26090.                      enddo
26090.                   endif
26090.                endif
26093.                $i_gas_band_S39 = index_absorb(2 + $I_L26082_1062, i_band)
26094.                $t_S40 = i_band_esft(i_band, $i_gas_band_S39)
26094.                if ( $t_S40 > 0 ) then
26101.                   $SC_i_scale_esft_I7 = i_scale_esft(i_band, $i_gas_band_S39)
26094.                   $I_L26094_1052 = 0
26094.                   do
26097.                      $esft_weight_S66 = w_esft(1 + $I_L26094_1052, i_band, $i_gas_band_S39)
26101.                      if ( $SC_i_scale_esft_I7 == 2 ) then
26103.                         tm$2474 = loc( gas_mix_ratio(1, 1, $i_gas_band_S39) )
26103.                         gas_mix_ratio = _copyin( gas_mix_ratio(1, 1, $i_gas_band_S39) )
26103.                         tm$2476 = loc( gas_frac_rescaled(1, 1, $i_gas_band_S39) )
26103.                         gas_frac_rescaled = _copyin( gas_frac_rescaled(1, 1, $i_gas_band_S39) )
26103.                         tm$2478 = loc( scale_vector(1, 1 + $I_L26094_1052, i_band, $i_gas_band_S39) )
26103.                         scale_parameter = _copyin( scale_vector(1, 1 + $I_L26094_1052, i_band, $i_gas_band_S39) )
26103.                         t$734 = nd_profile
26103.                         t$735 = nd_layer
26103.                         t$2851 = max( 0, nd_profile )
26103.                         t$2852 = max( 0, nd_profile )
26103.                         t$2853 = max( 0, nd_layer )
26103.                         t$2854 = max( 0, nd_profile ) * max( 0, nd_layer )
26103.                         t$736 = nd_scale_variable
26103.                         t$2855 = max( 0, nd_scale_variable )
26103.                         if ( l_doppler($i_gas_band_S39) /= .false. ) then
26103.                            $pressure_offset_S44 = doppler_correction($i_gas_band_S39)
26103.                         else
26103.                            $pressure_offset_S44 = 0.0
26103.                         endif
26103.                         if ( i_scale_fnc(i_band, $i_gas_band_S39) == 1 ) then
26103.                            if ( nd_layer > 0 ) then
26103.                               $SC_scale_parameter_I9 = scale_parameter(2)
26103.                               $SC_scale_parameter_I8 = scale_parameter(1)
26103.                               if ( nd_profile > 0 ) then
26103.                                  $SC_p_reference_I36 = p_reference($i_gas_band_S39, i_band)
26103.                                  $SC_t_reference_I35 = t_reference($i_gas_band_S39, i_band)
26103.                                  $I_L26103_993 = 0
26103.                                  do
26103.                                     $I_L26103_897 = 0
26103. !dir$ ivdep
26103.                                     do
26103.                                        gas_frac_rescaled(1 + $I_L26103_897, 1 + $I_L26103_993) = _expn( $SC_scale_parameter_I9 * log( ( t(1 + $I_L26103_897, 1 + $I_L26103_993) * 1.0/$SC_t_reference_I35 ) ) + $SC_scale_parameter_I8 * log( ( 1.0/( $pressure_offset_S44 + $SC_p_reference_I36 ) * ( $pressure_offset_S44 + p(1 + $I_L26103_897, 1 + $I_L26103_993) ) ) ) )
26103.                                        $I_L26103_897 = 1 + $I_L26103_897
26103.                                        if ( $I_L26103_897 >= nd_profile ) exit
26103.                                     enddo
26103.                                     $I_L26103_993 = 1 + $I_L26103_993
26103.                                     if ( $I_L26103_993 >= nd_layer ) exit
26103.                                  enddo
26103.                               endif
26103.                            endif
26103.                            goto 80
26103.                         else if ( i_scale_fnc(i_band, $i_gas_band_S39) /= 0 ) then
26103.                            if ( i_scale_fnc(i_band, $i_gas_band_S39) == 2 ) then
26103.                               if ( nd_layer > 0 ) then
26103.                                  $SC_scale_parameter_I10 = scale_parameter(3)
26103.                                  $SC_scale_parameter_I9 = scale_parameter(2)
26103.                                  $SC_scale_parameter_I8 = scale_parameter(1)
26103.                                  if ( nd_profile > 0 ) then
26103.                                     $SC_p_reference_I36 = p_reference($i_gas_band_S39, i_band)
26103.                                     $SC_t_reference_I35 = t_reference($i_gas_band_S39, i_band)
26103.                                     $I_L26103_991 = 0
26103.                                     do
26103.                                        $I_L26103_895 = 0
26103. !dir$ ivdep
26103.                                        do
26103.                                           gas_frac_rescaled(1 + $I_L26103_895, 1 + $I_L26103_991) = ( 1.0 + $SC_scale_parameter_I10 * ( -1.0 + ( t(1 + $I_L26103_895, 1 + $I_L26103_991) * 1.0/$SC_t_reference_I35 ) ) * ( -1.0 + ( t(1 + $I_L26103_895, 1 + $I_L26103_991) * 1.0/$SC_t_reference_I35 ) ) + $SC_scale_parameter_I9 * ( -1.0 + ( t(1 + $I_L26103_895, 1 + $I_L26103_991) * 1.0/$SC_t_reference_I35 ) ) ) * _expn( $SC_scale_parameter_I8 * log( ( 1.0/( $pressure_offset_S44 + $SC_p_reference_I36 ) * ( $pressure_offset_S44 + p(1 + $I_L26103_895, 1 + $I_L26103_991) ) ) ) )
26103.                                           $I_L26103_895 = 1 + $I_L26103_895
26103.                                           if ( $I_L26103_895 >= nd_profile ) exit
26103.                                        enddo
26103.                                        $I_L26103_991 = 1 + $I_L26103_991
26103.                                        if ( $I_L26103_991 >= nd_layer ) exit
26103.                                     enddo
26103.                                  endif
26103.                               endif
26103.                               goto 80
26103.                            else if ( i_scale_fnc(i_band, $i_gas_band_S39) == 3 ) then
26103.                               if ( nd_layer > 0 ) then
26103.                                  $SC_scale_parameter_I11 = scale_parameter(4)
26103.                                  $SC_scale_parameter_I10 = scale_parameter(3)
26103.                                  $SC_scale_parameter_I9 = scale_parameter(2)
26103.                                  $SC_scale_parameter_I8 = scale_parameter(1)
26103.                                  if ( nd_profile > 0 ) then
26103.                                     $SC_p_reference_I36 = p_reference($i_gas_band_S39, i_band)
26103.                                     $SC_t_reference_I35 = t_reference($i_gas_band_S39, i_band)
26103.                                     $I_L26103_989 = 0
26103.                                     do
26103.                                        $I_L26103_893 = 0
26103. !dir$ ivdep
26103.                                        do
26103.                                           gas_frac_rescaled(1 + $I_L26103_893, 1 + $I_L26103_989) = ( 1.0 + $SC_scale_parameter_I11 * ( -1.0 + ( t(1 + $I_L26103_893, 1 + $I_L26103_989) * 1.0/$SC_t_reference_I35 ) ) * ( -1.0 + ( t(1 + $I_L26103_893, 1 + $I_L26103_989) * 1.0/$SC_t_reference_I35 ) ) + $SC_scale_parameter_I10 * ( -1.0 + ( t(1 + $I_L26103_893, 1 + $I_L26103_989) * 1.0/$SC_t_reference_I35 ) ) ) * _expn( $SC_scale_parameter_I8 * log( ( 1.0/( $SC_scale_parameter_I9 + $SC_p_reference_I36 ) * ( $SC_scale_parameter_I9 + p(1 + $I_L26103_893, 1 + $I_L26103_989) ) ) ) )
26103.                                           $I_L26103_893 = 1 + $I_L26103_893
26103.                                           if ( $I_L26103_893 >= nd_profile ) exit
26103.                                        enddo
26103.                                        $I_L26103_989 = 1 + $I_L26103_989
26103.                                        if ( $I_L26103_989 >= nd_layer ) exit
26103.                                     enddo
26103.                                  endif
26103.                               endif
26103.    80                         continue
26103.                               if ( nd_layer > 0 ) then
26103.                                  if ( nd_profile > 0 ) then
26103.                                     $I_L26103_995 = 0
26103.                                     do
26103.                                        $I_L26103_899 = 0
26103. !dir$ ivdep
26103.                                        do
26103.                                           gas_frac_rescaled(1 + $I_L26103_899, 1 + $I_L26103_995) = max( 0.0, gas_frac_rescaled(1 + $I_L26103_899, 1 + $I_L26103_995) * gas_mix_ratio(1 + $I_L26103_899, 1 + $I_L26103_995) )
26103.                                           $I_L26103_899 = 1 + $I_L26103_899
26103.                                           if ( $I_L26103_899 >= nd_profile ) exit
26103.                                        enddo
26103.                                        $I_L26103_995 = 1 + $I_L26103_995
26103.                                        if ( $I_L26103_995 >= nd_layer ) exit
26103.                                     enddo
26103.                                  endif
26103.                               endif
26103.                            else
26103.                               _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$738,  _substr(t$737,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: An illegal type of scaling has been given.', 0x800600000000L ) ) )
26103.                               ierr = 1
26103.                            endif
26103.                         endif
26103.                         scale_vector(1, 1 + $I_L26094_1052, i_band, $i_gas_band_S39) = _copyout( scale_parameter )
26103.                         gas_frac_rescaled(1, 1, $i_gas_band_S39) = _copyout( gas_frac_rescaled )
26103.                         gas_mix_ratio(1, 1, $i_gas_band_S39) = _copyout( gas_mix_ratio )
26116.                         if ( ierr /= 0 ) then
25357.                            _free( t$3141 )
25357.                            goto 100
25357.                         endif
26122.                         if ( n_profile > 0 ) then
26122.                            $I_L26122_901 = 0
26122. !dir$ ivdep
26122.                            do
26123.                               flux_inc_direct(1 + $I_L26122_901) = 0.0
26124.                               flux_inc_down(1 + $I_L26122_901) = -planck_flux_band(1 + $I_L26122_901, 0)
26125.                               d_planck_flux_surface(1 + $I_L26122_901) = planck_flux_surface(1 + $I_L26122_901) + -planck_flux_band(1 + $I_L26122_901, n_layer)
26127.                               $I_L26122_901 = 1 + $I_L26122_901
26122.                               if ( $I_L26122_901 >= n_profile ) exit
26122.                            enddo
26122.                         endif
26130.                         if ( n_layer > 0 ) then
26131.                            if ( n_profile > 0 ) then
26132.                               $SC_k_esft_I37 = k_esft(1 + $I_L26094_1052, i_band, $i_gas_band_S39)
26130.                               $I_L26130_997 = 0
26130.                               do
26131.                                  $I_L26131_903 = 0
26131. !dir$ ivdep
26131.                                  do
26132.                                     tau_gas(1 + $I_L26131_903, 1 + $I_L26130_997) = $SC_k_esft_I37 * d_mass(1 + $I_L26131_903, 1 + $I_L26130_997) * gas_frac_rescaled(1 + $I_L26131_903, 1 + $I_L26130_997, $i_gas_band_S39)
26135.                                     $I_L26131_903 = 1 + $I_L26131_903
26131.                                     if ( $I_L26131_903 >= n_profile ) exit
26131.                                  enddo
26136.                                  $I_L26130_997 = 1 + $I_L26130_997
26135.                                  if ( $I_L26130_997 >= n_layer ) exit
26135.                               enddo
26135.                            endif
26135.                         endif
26141.                         tm$2494 = loc( diffuse_albedo(1) )
26141.                         diffuse_albedo = _copyin( diffuse_albedo(1) )
26141.                         tm$2496 = loc( diffuse_albedo(1) )
26141.                         direct_albedo = _copyin( diffuse_albedo(1) )
26141.                         tm$2498 = loc( flux_term(1, 1) )
26141.                         flux_direct = _copyin( flux_term(1, 1) )
26141.                         tm$2500 = loc( flux_term(1, 1) )
26141.                         flux_diffuse = _copyin( flux_term(1, 1) )
26141.                         t$610 = nd_profile
26141.                         t$611 = nd_layer
26141.                         t$2378 = max( 0, nd_profile )
26141.                         t$2379 = max( 0, nd_profile )
26141.                         t$2380 = max( 0, nd_layer )
26141.                         t$2381 = max( 0, nd_profile ) * max( 0, nd_layer )
26141.                         t$2382 = 1 + nd_layer
26141.                         t$2383 = max( 0, 1 + nd_layer )
26141.                         t$2384 = max( 0, nd_profile ) * max( 0, 1 + nd_layer )
26141.                         t$612 = ( 2 + 2 * nd_layer )
26141.                         t$2385 = max( 0, ( 2 + 2 * nd_layer ) )
26141.                         t$2386 = max( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
26141.                         t$2389 = 8 * max( 0, nd_profile ) * max( 0, nd_layer )
26141.                         t$2390 = 8 * ( 7 + 8 * max( 0, nd_profile ) * max( 0, nd_layer ) ) / 8
26141.                         t$2392 = t$2390 + 8 * max( 0, nd_profile ) * max( 0, nd_layer )
26141.                         t$2393 = 8 * ( 7 + t$2390 + 8 * max( 0, nd_profile ) * max( 0, nd_layer ) ) / 8
26141.                         t$2395 = t$2393 + 8 * max( 0, nd_profile ) * max( 0, nd_layer )
26141.                         t$2387 = int( _alloc( t$2393 + 8 * max( 0, nd_profile ) * max( 0, nd_layer ) ), 8 )
26141.                         t$2388 = t$2387
26141.                         t$2391 = t$2390 + t$2387
26141.                         t$2394 = t$2393 + t$2387
26141.                         if ( nd_layer > 0 ) then
26141.                            if ( nd_profile > 0 ) then
26141.                               $I_L26141_999 = 0
26141.                               do
26141.                                  $I_L26141_905 = 0
26141. !dir$ ivdep
26141.                                  do
26141.                                     $trans_WR0_R2 = _expn( -1.6599999999999999 * tau_gas(1 + $I_L26141_905, 1 + $I_L26141_999) )
26141.                                     trans(1 + $I_L26141_905, 1 + $I_L26141_999) = $trans_WR0_R2
26141.                                     $source_up_WR0_R3 = ( diff_planck_band(1 + $I_L26141_905, 1 + $I_L26141_999) * ( 1.0000000149011612 + -$trans_WR0_R2 ) * 1.0/( 1.4901161193847656e-8 + 1.6599999999999999 * tau_gas(1 + $I_L26141_905, 1 + $I_L26141_999) ) )
26141.                                     source_up(1 + $I_L26141_905, 1 + $I_L26141_999) = $source_up_WR0_R3
26141.                                     source_down(1 + $I_L26141_905, 1 + $I_L26141_999) = -$source_up_WR0_R3
26141.                                     $I_L26141_905 = 1 + $I_L26141_905
26141.                                     if ( $I_L26141_905 >= nd_profile ) exit
26141.                                  enddo
26141.                                  $I_L26141_999 = 1 + $I_L26141_999
26141.                                  if ( $I_L26141_999 >= nd_layer ) exit
26141.                               enddo
26141.                            endif
26141.                         endif
26141.                         if ( nd_profile > 0 ) then
26141.                            $I_L26141_907 = 0
26141. !dir$ ivdep
26141.                            do
26141.                               flux_diffuse(1 + $I_L26141_907, 2) = flux_inc_down(1 + $I_L26141_907)
26141.                               $I_L26141_907 = 1 + $I_L26141_907
26141.                               if ( $I_L26141_907 >= nd_profile ) exit
26141.                            enddo
26141.                         endif
26141.                         if ( nd_layer > 0 ) then
26141.                            if ( nd_profile > 0 ) then
26141.                               $I_L26141_1001 = 0
26141.                               if ( nd_layer >= 2 ) then
26141.                                  $I_L26141_1093 = 0
26141.                                  do
26141.                                     $I_L26141_909 = 0
26141. !dir$ ivdep
26141.                                     do
26141.                                        flux_diffuse(1 + $I_L26141_909, 4 + 4 * $I_L26141_1093) = source_down(1 + $I_L26141_909, 1 + 2 * $I_L26141_1093) + flux_diffuse(1 + $I_L26141_909, 2 + 4 * $I_L26141_1093) * trans(1 + $I_L26141_909, 1 + 2 * $I_L26141_1093)
26141.                                        flux_diffuse(1 + $I_L26141_909, 6 + 4 * $I_L26141_1093) = source_down(1 + $I_L26141_909, 2 + 2 * $I_L26141_1093) + flux_diffuse(1 + $I_L26141_909, 4 + 4 * $I_L26141_1093) * trans(1 + $I_L26141_909, 2 + 2 * $I_L26141_1093)
26141.                                        $I_L26141_909 = 1 + $I_L26141_909
26141.                                        if ( $I_L26141_909 >= nd_profile ) exit
26141.                                     enddo
26141.                                     $I_L26141_1093 = 1 + $I_L26141_1093
26141.                                     if ( $I_L26141_1093 >= _rsh( nd_layer, 1 ) ) exit
26141.                                  enddo
26141.                                  $I_L26141_1001 = and( 0xfffffffffffffffeUL, nd_layer )
26141.                               endif
26141.                               if ( $I_L26141_1001 < nd_layer ) then
26141.                                  $I_L26141_909 = 0
26141. !dir$ ivdep
26141.                                  do
26141.                                     flux_diffuse(1 + $I_L26141_909, 4 + 2 * $I_L26141_1001) = source_down(1 + $I_L26141_909, 1 + $I_L26141_1001) + trans(1 + $I_L26141_909, 1 + $I_L26141_1001) * flux_diffuse(1 + $I_L26141_909, 2 + 2 * $I_L26141_1001)
26141.                                     $I_L26141_909 = 1 + $I_L26141_909
26141.                                     if ( $I_L26141_909 >= nd_profile ) exit
26141.                                  enddo
26141.                               endif
26141.                            endif
26141.                         endif
26141.                         if ( nd_profile > 0 ) then
26141.                            $I_L26141_911 = 0
26141. !dir$ ivdep
26141.                            do
26141.                               flux_diffuse(1 + $I_L26141_911, 1 + 2 * n_layer) = d_planck_flux_surface(1 + $I_L26141_911) + diffuse_albedo(1 + $I_L26141_911) * flux_diffuse(1 + $I_L26141_911, 2 + 2 * n_layer)
26141.                               $I_L26141_911 = 1 + $I_L26141_911
26141.                               if ( $I_L26141_911 >= nd_profile ) exit
26141.                            enddo
26141.                         endif
26141.                         if ( nd_layer > 0 ) then
26141.                            if ( nd_profile > 0 ) then
26141.                               $I_L26141_1003 = 0
26141.                               if ( nd_layer >= 2 ) then
26141.                                  $I_L26141_1095 = 0
26141.                                  do
26141.                                     $I_L26141_913 = 0
26141. !dir$ ivdep
26141.                                     do
26141.                                        flux_diffuse(1 + $I_L26141_913, -1 + 2 * nd_layer + -4 * $I_L26141_1095) = source_up(1 + $I_L26141_913, nd_layer + -2 * $I_L26141_1095) + flux_diffuse(1 + $I_L26141_913, 1 + 2 * nd_layer + -4 * $I_L26141_1095) * trans(1 + $I_L26141_913, nd_layer + -2 * $I_L26141_1095)
26141.                                        flux_diffuse(1 + $I_L26141_913, -3 + 2 * nd_layer + -4 * $I_L26141_1095) = source_up(1 + $I_L26141_913, -1 + nd_layer + -2 * $I_L26141_1095) + flux_diffuse(1 + $I_L26141_913, -1 + 2 * nd_layer + -4 * $I_L26141_1095) * trans(1 + $I_L26141_913, -1 + nd_layer + -2 * $I_L26141_1095)
26141.                                        $I_L26141_913 = 1 + $I_L26141_913
26141.                                        if ( $I_L26141_913 >= nd_profile ) exit
26141.                                     enddo
26141.                                     $I_L26141_1095 = 1 + $I_L26141_1095
26141.                                     if ( $I_L26141_1095 >= _rsh( nd_layer, 1 ) ) exit
26141.                                  enddo
26141.                                  $I_L26141_1003 = and( 0xfffffffffffffffeUL, nd_layer )
26141.                               endif
26141.                               if ( $I_L26141_1003 < nd_layer ) then
26141.                                  $I_L26141_913 = 0
26141. !dir$ ivdep
26141.                                  do
26141.                                     flux_diffuse(1 + $I_L26141_913, -1 + 2 * nd_layer + -2 * $I_L26141_1003) = source_up(1 + $I_L26141_913, nd_layer + -$I_L26141_1003) + trans(1 + $I_L26141_913, nd_layer + -$I_L26141_1003) * flux_diffuse(1 + $I_L26141_913, 1 + 2 * nd_layer + -2 * $I_L26141_1003)
26141.                                     $I_L26141_913 = 1 + $I_L26141_913
26141.                                     if ( $I_L26141_913 >= nd_profile ) exit
26141.                                  enddo
26141.                               endif
26141.                            endif
26141.                         endif
26141.                         _free( t$2387 )
26141.                         flux_term(1, 1) = _copyout( flux_diffuse )
26141.                         flux_term(1, 1) = _copyout( flux_direct )
26141.                         diffuse_albedo(1) = _copyout( direct_albedo )
26141.                         diffuse_albedo(1) = _copyout( diffuse_albedo )
26151.                         if ( 2 + 2 * n_layer > 0 ) then
26152.                            if ( n_profile > 0 ) then
26153.                               $SC_k_esft_I37 = k_esft(1 + $I_L26094_1052, i_band, $i_gas_band_S39)
26151.                               $I_L26151_1005 = 0
26151.                               do
26152.                                  $I_L26152_915 = 0
26152. !dir$ ivdep
26152.                                  do
26156.                                     sum_flux(1 + $I_L26152_915, 1 + $I_L26151_1005, 2 + $I_L26082_1062) = sum_flux(1 + $I_L26152_915, 1 + $I_L26151_1005, 2 + $I_L26082_1062) + $esft_weight_S66 * flux_term(1 + $I_L26152_915, 1 + $I_L26151_1005)
26153.                                     sum_k_flux(1 + $I_L26152_915, 1 + $I_L26151_1005, 2 + $I_L26082_1062) = sum_k_flux(1 + $I_L26152_915, 1 + $I_L26151_1005, 2 + $I_L26082_1062) + $esft_weight_S66 * $SC_k_esft_I37 * flux_term(1 + $I_L26152_915, 1 + $I_L26151_1005)
26158.                                     $I_L26152_915 = 1 + $I_L26152_915
26152.                                     if ( $I_L26152_915 >= n_profile ) exit
26152.                                  enddo
26159.                                  $I_L26151_1005 = 1 + $I_L26151_1005
26158.                                  if ( $I_L26151_1005 >= 2 + 2 * n_layer ) exit
26158.                               enddo
26158.                            endif
26158.                         endif
26161.                         $I_L26094_1052 = 1 + $I_L26094_1052
26159.                      else
26159.                      endif
26159.                      if ( $I_L26094_1052 >= $t_S40 ) exit
26159.                   enddo
26163.                   $I_L26082_1062 = 1 + $I_L26082_1062
26161.                else
26161.                endif
26161.                if ( $I_L26082_1062 >= -1 + n_gas ) exit
26161.             enddo
26161.             goto 90
26161.             goto 30
26161.          else
26161.    90       continue
26166.             if ( n_layer > 0 ) then
26167.                if ( n_profile > 0 ) then
26166.                   $I_L26166_1007 = 0
26166.                   do
26167.                      $I_L26167_917 = 0
26167. !dir$ ivdep
26167. !dir$ loop_info (automatic) cache_nt( k_eqv )
26167.                      do
26168.                         k_eqv(1 + $I_L26167_917, 1 + $I_L26166_1007) = 0.0
26169.                         $I_L26167_917 = 1 + $I_L26167_917
26167.                         if ( $I_L26167_917 >= n_profile ) exit
26167.                      enddo
26170.                      $I_L26166_1007 = 1 + $I_L26166_1007
26169.                      if ( $I_L26166_1007 >= n_layer ) exit
26169.                   enddo
26169.                endif
26169.             endif
26172.             if ( -2 + n_gas >= 0 ) then
26173.                if ( n_layer > 0 ) then
26174.                   if ( n_profile > 0 ) then
26173.                      $I_L26173_1054 = 0
26173. !dir$ blocking_size( 1, 1 )
26173.                      do
26172.                         $I_L26172_1009 = 0
26172. !dir$ blocking_size( 1, 1 )
26172.                         do
26174.                            $SCA_index_absorb_I42 = index_absorb(2 + $I_L26172_1009, i_band)
26174.                            $I_L26174_919 = 0
26174. !dir$ ivdep
26174. !dir$ blocking_size( 256, 256 )
26174.                            do
26175.                               $mean_k_net_flux_S73 = 5.0e-1 * ( sum_k_flux(1 + $I_L26174_919, 2 + 2 * $I_L26173_1054, 2 + $I_L26172_1009) + sum_k_flux(1 + $I_L26174_919, 4 + 2 * $I_L26173_1054, 2 + $I_L26172_1009) + -sum_k_flux(1 + $I_L26174_919, 1 + 2 * $I_L26173_1054, 2 + $I_L26172_1009) + -sum_k_flux(1 + $I_L26174_919, 3 + 2 * $I_L26173_1054, 2 + $I_L26172_1009) )
26179.                               $mean_net_flux_S72 = 5.0e-1 * ( sum_flux(1 + $I_L26174_919, 2 + 2 * $I_L26173_1054, 2 + $I_L26172_1009) + sum_flux(1 + $I_L26174_919, 4 + 2 * $I_L26173_1054, 2 + $I_L26172_1009) + -sum_flux(1 + $I_L26174_919, 1 + 2 * $I_L26173_1054, 2 + $I_L26172_1009) + -sum_flux(1 + $I_L26174_919, 3 + 2 * $I_L26173_1054, 2 + $I_L26172_1009) )
26186.                               k_eqv(1 + $I_L26174_919, 1 + $I_L26173_1054) = k_eqv(1 + $I_L26174_919, 1 + $I_L26173_1054) + gas_frac_rescaled(1 + $I_L26174_919, 1 + $I_L26173_1054, $SCA_index_absorb_I42) * ( max( 0.0, ( $mean_k_net_flux_S73 * 1.0/$mean_net_flux_S72 ) ) )
26188.                               $I_L26174_919 = 1 + $I_L26174_919
26174.                               if ( $I_L26174_919 >= n_profile ) exit
26174.                            enddo
26190.                            $I_L26172_1009 = 1 + $I_L26172_1009
26188.                            if ( $I_L26172_1009 >= -1 + n_gas ) exit
26188.                         enddo
26189.                         $I_L26173_1054 = 1 + $I_L26173_1054
26189.                         if ( $I_L26173_1054 >= n_layer ) exit
26189.                      enddo
26189.                   endif
26189.                endif
26189.             endif
26189.             goto 30
26189.          endif
26189.       else
26189.    30    continue
26197.          $t_S75 = i_band_esft(i_band, $i_gas_S74)
26197.          if ( $t_S75 > 0 ) then
26203.             $SC_i_scale_esft_I12 = i_scale_esft(i_band, $i_gas_S74)
26197.             $I_L26197_1064 = 0
26197.             do
26200.                $esft_weight_S107 = w_esft(1 + $I_L26197_1064, i_band, $i_gas_S74)
26203.                if ( $SC_i_scale_esft_I12 == 2 ) then
26204.                   tm$2524 = loc( gas_mix_ratio(1, 1, $i_gas_S74) )
26204.                   gas_mix_ratio = _copyin( gas_mix_ratio(1, 1, $i_gas_S74) )
26204.                   tm$2526 = loc( gas_frac_rescaled(1, 1, $i_gas_S74) )
26204.                   gas_frac_rescaled = _copyin( gas_frac_rescaled(1, 1, $i_gas_S74) )
26204.                   tm$2528 = loc( scale_vector(1, 1 + $I_L26197_1064, i_band, $i_gas_S74) )
26204.                   scale_parameter = _copyin( scale_vector(1, 1 + $I_L26197_1064, i_band, $i_gas_S74) )
26204.                   t$734 = nd_profile
26204.                   t$735 = nd_layer
26204.                   t$2851 = max( 0, nd_profile )
26204.                   t$2852 = max( 0, nd_profile )
26204.                   t$2853 = max( 0, nd_layer )
26204.                   t$2854 = max( 0, nd_profile ) * max( 0, nd_layer )
26204.                   t$736 = nd_scale_variable
26204.                   t$2855 = max( 0, nd_scale_variable )
26204.                   if ( l_doppler($i_gas_S74) /= .false. ) then
26204.                      $pressure_offset_S79 = doppler_correction($i_gas_S74)
26204.                   else
26204.                      $pressure_offset_S79 = 0.0
26204.                   endif
26204.                   if ( i_scale_fnc(i_band, $i_gas_S74) == 1 ) then
26204.                      if ( nd_layer > 0 ) then
26204.                         $SC_scale_parameter_I14 = scale_parameter(2)
26204.                         $SC_scale_parameter_I13 = scale_parameter(1)
26204.                         if ( nd_profile > 0 ) then
26204.                            $SC_p_reference_I39 = p_reference($i_gas_S74, i_band)
26204.                            $SC_t_reference_I38 = t_reference($i_gas_S74, i_band)
26204.                            $I_L26204_1015 = 0
26204.                            do
26204.                               $I_L26204_925 = 0
26204. !dir$ ivdep
26204.                               do
26204.                                  gas_frac_rescaled(1 + $I_L26204_925, 1 + $I_L26204_1015) = _expn( $SC_scale_parameter_I14 * log( ( t(1 + $I_L26204_925, 1 + $I_L26204_1015) * 1.0/$SC_t_reference_I38 ) ) + $SC_scale_parameter_I13 * log( ( 1.0/( $pressure_offset_S79 + $SC_p_reference_I39 ) * ( $pressure_offset_S79 + p(1 + $I_L26204_925, 1 + $I_L26204_1015) ) ) ) )
26204.                                  $I_L26204_925 = 1 + $I_L26204_925
26204.                                  if ( $I_L26204_925 >= nd_profile ) exit
26204.                               enddo
26204.                               $I_L26204_1015 = 1 + $I_L26204_1015
26204.                               if ( $I_L26204_1015 >= nd_layer ) exit
26204.                            enddo
26204.                         endif
26204.                      endif
26204.                      goto 40
26204.                   else if ( i_scale_fnc(i_band, $i_gas_S74) /= 0 ) then
26204.                      if ( i_scale_fnc(i_band, $i_gas_S74) == 2 ) then
26204.                         if ( nd_layer > 0 ) then
26204.                            $SC_scale_parameter_I15 = scale_parameter(3)
26204.                            $SC_scale_parameter_I14 = scale_parameter(2)
26204.                            $SC_scale_parameter_I13 = scale_parameter(1)
26204.                            if ( nd_profile > 0 ) then
26204.                               $SC_p_reference_I39 = p_reference($i_gas_S74, i_band)
26204.                               $SC_t_reference_I38 = t_reference($i_gas_S74, i_band)
26204.                               $I_L26204_1013 = 0
26204.                               do
26204.                                  $I_L26204_923 = 0
26204. !dir$ ivdep
26204.                                  do
26204.                                     gas_frac_rescaled(1 + $I_L26204_923, 1 + $I_L26204_1013) = ( 1.0 + $SC_scale_parameter_I15 * ( -1.0 + ( t(1 + $I_L26204_923, 1 + $I_L26204_1013) * 1.0/$SC_t_reference_I38 ) ) * ( -1.0 + ( t(1 + $I_L26204_923, 1 + $I_L26204_1013) * 1.0/$SC_t_reference_I38 ) ) + $SC_scale_parameter_I14 * ( -1.0 + ( t(1 + $I_L26204_923, 1 + $I_L26204_1013) * 1.0/$SC_t_reference_I38 ) ) ) * _expn( $SC_scale_parameter_I13 * log( ( 1.0/( $pressure_offset_S79 + $SC_p_reference_I39 ) * ( $pressure_offset_S79 + p(1 + $I_L26204_923, 1 + $I_L26204_1013) ) ) ) )
26204.                                     $I_L26204_923 = 1 + $I_L26204_923
26204.                                     if ( $I_L26204_923 >= nd_profile ) exit
26204.                                  enddo
26204.                                  $I_L26204_1013 = 1 + $I_L26204_1013
26204.                                  if ( $I_L26204_1013 >= nd_layer ) exit
26204.                               enddo
26204.                            endif
26204.                         endif
26204.                         goto 40
26204.                      else if ( i_scale_fnc(i_band, $i_gas_S74) == 3 ) then
26204.                         if ( nd_layer > 0 ) then
26204.                            $SC_scale_parameter_I16 = scale_parameter(4)
26204.                            $SC_scale_parameter_I15 = scale_parameter(3)
26204.                            $SC_scale_parameter_I14 = scale_parameter(2)
26204.                            $SC_scale_parameter_I13 = scale_parameter(1)
26204.                            if ( nd_profile > 0 ) then
26204.                               $SC_p_reference_I39 = p_reference($i_gas_S74, i_band)
26204.                               $SC_t_reference_I38 = t_reference($i_gas_S74, i_band)
26204.                               $I_L26204_1011 = 0
26204.                               do
26204.                                  $I_L26204_921 = 0
26204. !dir$ ivdep
26204.                                  do
26204.                                     gas_frac_rescaled(1 + $I_L26204_921, 1 + $I_L26204_1011) = ( 1.0 + $SC_scale_parameter_I16 * ( -1.0 + ( t(1 + $I_L26204_921, 1 + $I_L26204_1011) * 1.0/$SC_t_reference_I38 ) ) * ( -1.0 + ( t(1 + $I_L26204_921, 1 + $I_L26204_1011) * 1.0/$SC_t_reference_I38 ) ) + $SC_scale_parameter_I15 * ( -1.0 + ( t(1 + $I_L26204_921, 1 + $I_L26204_1011) * 1.0/$SC_t_reference_I38 ) ) ) * _expn( $SC_scale_parameter_I13 * log( ( 1.0/( $SC_scale_parameter_I14 + $SC_p_reference_I39 ) * ( $SC_scale_parameter_I14 + p(1 + $I_L26204_921, 1 + $I_L26204_1011) ) ) ) )
26204.                                     $I_L26204_921 = 1 + $I_L26204_921
26204.                                     if ( $I_L26204_921 >= nd_profile ) exit
26204.                                  enddo
26204.                                  $I_L26204_1011 = 1 + $I_L26204_1011
26204.                                  if ( $I_L26204_1011 >= nd_layer ) exit
26204.                               enddo
26204.                            endif
26204.                         endif
26204.    40                   continue
26204.                         if ( nd_layer > 0 ) then
26204.                            if ( nd_profile > 0 ) then
26204.                               $I_L26204_1017 = 0
26204.                               do
26204.                                  $I_L26204_927 = 0
26204. !dir$ ivdep
26204.                                  do
26204.                                     gas_frac_rescaled(1 + $I_L26204_927, 1 + $I_L26204_1017) = max( 0.0, gas_frac_rescaled(1 + $I_L26204_927, 1 + $I_L26204_1017) * gas_mix_ratio(1 + $I_L26204_927, 1 + $I_L26204_1017) )
26204.                                     $I_L26204_927 = 1 + $I_L26204_927
26204.                                     if ( $I_L26204_927 >= nd_profile ) exit
26204.                                  enddo
26204.                                  $I_L26204_1017 = 1 + $I_L26204_1017
26204.                                  if ( $I_L26204_1017 >= nd_layer ) exit
26204.                               enddo
26204.                            endif
26204.                         endif
26204.                      else
26204.                         _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$738,  _substr(t$737,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: An illegal type of scaling has been given.', 0x800600000000L ) ) )
26204.                         ierr = 1
26204.                      endif
26204.                   endif
26204.                   scale_vector(1, 1 + $I_L26197_1064, i_band, $i_gas_S74) = _copyout( scale_parameter )
26204.                   gas_frac_rescaled(1, 1, $i_gas_S74) = _copyout( gas_frac_rescaled )
26204.                   gas_mix_ratio(1, 1, $i_gas_S74) = _copyout( gas_mix_ratio )
26216.                   if ( ierr /= 0 ) then
25357.                      _free( t$3141 )
25357.                      goto 100
25357.                   endif
26222.                   if ( i_angular_integration == 1 .orelse. i_angular_integration == 2 ) then
26225.                      if ( isolir == 1 ) then
26227.                         if ( n_profile > 0 ) then
26227.                            $I_L26227_929 = 0
26227. !dir$ ivdep
26227.                            do
26228.                               d_planck_flux_surface(1 + $I_L26227_929) = 0.0
26229.                               flux_inc_down(1 + $I_L26227_929) = ( solar_irrad(1 + $I_L26227_929) * 1.0/zen_0(1 + $I_L26227_929) )
26230.                               flux_inc_direct(1 + $I_L26227_929) = ( solar_irrad(1 + $I_L26227_929) * 1.0/zen_0(1 + $I_L26227_929) )
26231.                               $I_L26227_929 = 1 + $I_L26227_929
26227.                               if ( $I_L26227_929 >= n_profile ) exit
26227.                            enddo
26227.                         endif
26232.                      else if ( isolir == 2 ) then
26234.                         if ( n_profile > 0 ) then
26234.                            $I_L26234_931 = 0
26234. !dir$ ivdep
26234.                            do
26235.                               flux_inc_direct(1 + $I_L26234_931) = 0.0
26236.                               flux_direct_part(1 + $I_L26234_931, n_layer) = 0.0
26237.                               flux_inc_down(1 + $I_L26234_931) = -planck_flux_band(1 + $I_L26234_931, 0)
26238.                               d_planck_flux_surface(1 + $I_L26234_931) = planck_flux_surface(1 + $I_L26234_931) + -planck_flux_band(1 + $I_L26234_931, n_layer)
26241.                               $I_L26234_931 = 1 + $I_L26234_931
26234.                               if ( $I_L26234_931 >= n_profile ) exit
26234.                            enddo
26234.                         endif
26242.                         if ( l_clear /= .false. ) then
26243.                            if ( n_profile > 0 ) then
26243.                               $I_L26243_933 = 0
26243. !dir$ ivdep
26243.                               do
26244.                                  flux_direct_clear_part(1 + $I_L26243_933, n_layer) = 0.0
26245.                                  $I_L26243_933 = 1 + $I_L26243_933
26243.                                  if ( $I_L26243_933 >= n_profile ) exit
26243.                               enddo
26243.                            endif
26243.                         endif
26243.                      endif
26243.                   else
26249.                      if ( i_angular_integration == 3 ) then
26251.                         if ( isolir == 1 ) then
26252.                            if ( n_profile > 0 ) then
26252.                               $I_L26252_935 = 0
26252. !dir$ ivdep
26252.                               do
26253.                                  i_direct_part(1 + $I_L26252_935, 0) = solar_irrad(1 + $I_L26252_935)
26254.                                  flux_inc_down(1 + $I_L26252_935) = 0.0
26255.                                  $I_L26252_935 = 1 + $I_L26252_935
26252.                                  if ( $I_L26252_935 >= n_profile ) exit
26252.                               enddo
26252.                            endif
26256.                         else if ( n_profile > 0 ) then
26257.                            $I_L26257_937 = 0
26257. !dir$ ivdep
26257.                            do
26258.                               flux_inc_down(1 + $I_L26257_937) = -planck_flux_band(1 + $I_L26257_937, 0)
26259.                               d_planck_flux_surface(1 + $I_L26257_937) = planck_flux_surface(1 + $I_L26257_937) + -planck_flux_band(1 + $I_L26257_937, n_layer)
26261.                               $I_L26257_937 = 1 + $I_L26257_937
26257.                               if ( $I_L26257_937 >= n_profile ) exit
26257.                            enddo
26257.                         endif
26257.                      endif
26257.                   endif
26272.                   if ( -1 + n_cloud_top > 0 ) then
26274.                      $SC_ss_prop_I18 = ss_prop%k_grey_tot_clr%dim_1%SM
26274.                      $SC_ss_prop_I17 = ss_prop%k_grey_tot_clr%dim_1%EX
26274.                      $SC_ss_prop_I19 = ss_prop%k_grey_tot_clr%dim_1%LB
26274.                      $SC_ss_prop_I21 = ss_prop%k_grey_tot_clr%dim_2%SM
26274.                      $SC_ss_prop_I20 = ss_prop%k_grey_tot_clr%dim_2%EX
26274.                      $SC_ss_prop_I22 = ss_prop%k_grey_tot_clr%dim_2%LB
26273.                      if ( n_profile > 0 ) then
26272.                         $I_L26272_1019 = 0
26272.                         do
26273.                            $I_L26273_939 = 0
26273. !dir$ ivdep
26273.                            do
26274.                               k_no_gas_tot_clr(1 + $I_L26273_939, 1 + $I_L26272_1019) = (ss_prop%k_grey_tot_clr%base_addr)(1 + $I_L26273_939, 1 + $I_L26272_1019, 0)
26275.                               (ss_prop%k_grey_tot_clr%base_addr)(1 + $I_L26273_939, 1 + $I_L26272_1019, 0) = (ss_prop%k_grey_tot_clr%base_addr)(1 + $I_L26273_939, 1 + $I_L26272_1019, 0) + k_eqv(1 + $I_L26273_939, 1 + $I_L26272_1019)
26277.                               $I_L26273_939 = 1 + $I_L26273_939
26273.                               if ( $I_L26273_939 >= n_profile ) exit
26273.                            enddo
26278.                            $I_L26272_1019 = 1 + $I_L26272_1019
26277.                            if ( $I_L26272_1019 >= -1 + n_cloud_top ) exit
26277.                         enddo
26277.                      endif
26277.                   endif
26279.                   if ( n_layer + -n_cloud_top >= 0 ) then
26281.                      $SC_ss_prop_I24 = ss_prop%k_grey_tot%dim_1%SM
26281.                      $SC_ss_prop_I23 = ss_prop%k_grey_tot%dim_1%EX
26281.                      $SC_ss_prop_I25 = ss_prop%k_grey_tot%dim_1%LB
26281.                      $SC_ss_prop_I27 = ss_prop%k_grey_tot%dim_2%SM
26281.                      $SC_ss_prop_I26 = ss_prop%k_grey_tot%dim_2%EX
26281.                      $SC_ss_prop_I28 = ss_prop%k_grey_tot%dim_2%LB
26281.                      $SC_ss_prop_I30 = ss_prop%k_grey_tot%dim_3%SM
26281.                      $SC_ss_prop_I29 = ss_prop%k_grey_tot%dim_3%EX
26281.                      $SC_ss_prop_I31 = ss_prop%k_grey_tot%dim_3%LB
26280.                      if ( n_profile > 0 ) then
26279.                         $I_L26279_1021 = 0
26279.                         do
26280.                            $I_L26280_941 = 0
26280. !dir$ ivdep
26280. !dir$ loop_info (automatic) cache_nt( k_eqv, k_no_gas_tot )
26280.                            do
26281.                               k_no_gas_tot(1 + $I_L26280_941, n_cloud_top + $I_L26279_1021, 0) = (ss_prop%k_grey_tot%base_addr)(1 + $I_L26280_941, n_cloud_top + $I_L26279_1021, 0, 0)
26282.                               (ss_prop%k_grey_tot%base_addr)(1 + $I_L26280_941, n_cloud_top + $I_L26279_1021, 0, 0) = (ss_prop%k_grey_tot%base_addr)(1 + $I_L26280_941, n_cloud_top + $I_L26279_1021, 0, 0) + k_eqv(1 + $I_L26280_941, n_cloud_top + $I_L26279_1021)
26284.                               $I_L26280_941 = 1 + $I_L26280_941
26280.                               if ( $I_L26280_941 >= n_profile ) exit
26280.                            enddo
26285.                            $I_L26279_1021 = 1 + $I_L26279_1021
26284.                            if ( $I_L26279_1021 >= 1 + n_layer + -n_cloud_top ) exit
26284.                         enddo
26284.                      endif
26284.                   endif
26286.                   if ( l_cloud /= .false. ) then
26287.                      if ( n_cloud_type > 0 ) then
26290.                         $SC_ss_prop_I24 = ss_prop%k_grey_tot%dim_1%SM
26290.                         $SC_ss_prop_I23 = ss_prop%k_grey_tot%dim_1%EX
26290.                         $SC_ss_prop_I25 = ss_prop%k_grey_tot%dim_1%LB
26290.                         $SC_ss_prop_I27 = ss_prop%k_grey_tot%dim_2%SM
26290.                         $SC_ss_prop_I26 = ss_prop%k_grey_tot%dim_2%EX
26290.                         $SC_ss_prop_I28 = ss_prop%k_grey_tot%dim_2%LB
26290.                         $SC_ss_prop_I30 = ss_prop%k_grey_tot%dim_3%SM
26290.                         $SC_ss_prop_I29 = ss_prop%k_grey_tot%dim_3%EX
26290.                         $SC_ss_prop_I31 = ss_prop%k_grey_tot%dim_3%LB
26288.                         if ( n_layer + -n_cloud_top >= 0 ) then
26289.                            if ( n_profile > 0 ) then
26288.                               $I_L26288_1056 = 0
26288. !dir$ blocking_size( 1, 1 )
26288.                               do
26287.                                  $I_L26287_1023 = 0
26287.                                  if ( n_cloud_type >= 4 ) then
26287.                                     $I_L26287_1097 = 0
26287. !dir$ blocking_size( 1, 1 )
26287.                                     do
26289.                                        $I_L26289_943 = 0
26289. !dir$ ivdep
26289. !dir$ loop_info (automatic) cache_nt( k_no_gas_tot )
26289. !dir$ blocking_size( 256, 256 )
26289.                                        do
26290.                                           k_no_gas_tot(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 1 + 4 * $I_L26287_1097) = (ss_prop%k_grey_tot%base_addr)(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 1 + 4 * $I_L26287_1097, 0)
26291.                                           (ss_prop%k_grey_tot%base_addr)(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 1 + 4 * $I_L26287_1097, 0) = k_eqv(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056) + (ss_prop%k_grey_tot%base_addr)(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 1 + 4 * $I_L26287_1097, 0)
26290.                                           k_no_gas_tot(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 2 + 4 * $I_L26287_1097) = (ss_prop%k_grey_tot%base_addr)(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 2 + 4 * $I_L26287_1097, 0)
26291.                                           (ss_prop%k_grey_tot%base_addr)(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 2 + 4 * $I_L26287_1097, 0) = k_eqv(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056) + (ss_prop%k_grey_tot%base_addr)(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 2 + 4 * $I_L26287_1097, 0)
26290.                                           k_no_gas_tot(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 3 + 4 * $I_L26287_1097) = (ss_prop%k_grey_tot%base_addr)(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 3 + 4 * $I_L26287_1097, 0)
26291.                                           (ss_prop%k_grey_tot%base_addr)(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 3 + 4 * $I_L26287_1097, 0) = k_eqv(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056) + (ss_prop%k_grey_tot%base_addr)(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 3 + 4 * $I_L26287_1097, 0)
26290.                                           k_no_gas_tot(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 4 + 4 * $I_L26287_1097) = (ss_prop%k_grey_tot%base_addr)(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 4 + 4 * $I_L26287_1097, 0)
26291.                                           (ss_prop%k_grey_tot%base_addr)(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 4 + 4 * $I_L26287_1097, 0) = k_eqv(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056) + (ss_prop%k_grey_tot%base_addr)(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 4 + 4 * $I_L26287_1097, 0)
26293.                                           $I_L26289_943 = 1 + $I_L26289_943
26289.                                           if ( $I_L26289_943 >= n_profile ) exit
26289.                                        enddo
26295.                                        $I_L26287_1097 = 1 + $I_L26287_1097
26293.                                        if ( $I_L26287_1097 >= _rsh( n_cloud_type, 2 ) ) exit
26293.                                     enddo
26295.                                     $I_L26287_1023 = and( 0xfffffffffffffffcUL, n_cloud_type )
26295.                                  endif
26287.                                  if ( $I_L26287_1023 < n_cloud_type ) then
26287.                                     $I_L26287_1068 = 0
26287. !dir$ blocking_size( 1, 1 )
26287.                                     do
26289.                                        $I_L26289_943 = 0
26289. !dir$ ivdep
26289. !dir$ loop_info (automatic) cache_nt( k_no_gas_tot )
26289. !dir$ blocking_size( 256, 256 )
26289.                                        do
26290.                                           k_no_gas_tot(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 1 + $I_L26287_1023 + $I_L26287_1068) = (ss_prop%k_grey_tot%base_addr)(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 1 + $I_L26287_1023 + $I_L26287_1068, 0)
26291.                                           (ss_prop%k_grey_tot%base_addr)(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 1 + $I_L26287_1023 + $I_L26287_1068, 0) = k_eqv(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056) + (ss_prop%k_grey_tot%base_addr)(1 + $I_L26289_943, n_cloud_top + $I_L26288_1056, 1 + $I_L26287_1023 + $I_L26287_1068, 0)
26293.                                           $I_L26289_943 = 1 + $I_L26289_943
26289.                                           if ( $I_L26289_943 >= n_profile ) exit
26289.                                        enddo
26295.                                        $I_L26287_1068 = 1 + $I_L26287_1068
26293.                                        if ( $I_L26287_1068 >= n_cloud_type + -$I_L26287_1023 ) exit
26293.                                     enddo
26293.                                  endif
26294.                                  $I_L26288_1056 = 1 + $I_L26288_1056
26294.                                  if ( $I_L26288_1056 >= 1 + n_layer + -n_cloud_top ) exit
26294.                               enddo
26294.                            endif
26294.                         endif
26294.                      endif
26294.                   endif
26299.                   k_esft_mono($i_gas_S74) = k_esft(1 + $I_L26197_1064, i_band, $i_gas_S74)
26301.                   t$292 = nd_species
26301.                   t$1978 = max( 0, nd_species )
26301.                   t$293 = nd_profile
26301.                   t$294 = nd_layer
26301.                   t$1979 = max( 0, nd_profile )
26301.                   t$1980 = max( 0, nd_profile )
26301.                   t$1981 = max( 0, nd_layer )
26301.                   t$1982 = max( 0, nd_profile ) * max( 0, nd_layer )
26301.                   t$1983 = max( 0, nd_profile ) * max( 0, nd_layer ) * max( 0, nd_species )
26301.                   t$1984 = max( 0, nd_profile ) * max( 0, nd_layer )
26301.                   if ( nd_layer > 0 ) then
26301.                      if ( nd_profile > 0 ) then
26301.                         $SC_k_esft_mono_I40 = k_esft_mono($i_gas_S74)
26301.                         $I_L26301_1025 = 0
26301.                         do
26301.                            $I_L26301_945 = 0
26301. !dir$ ivdep
26301.                            do
26301.                               k_gas_abs(1 + $I_L26301_945, 1 + $I_L26301_1025) = $SC_k_esft_mono_I40 * gas_frac_rescaled(1 + $I_L26301_945, 1 + $I_L26301_1025, $i_gas_S74)
26301.                               $I_L26301_945 = 1 + $I_L26301_945
26301.                               if ( $I_L26301_945 >= nd_profile ) exit
26301.                            enddo
26301.                            $I_L26301_1025 = 1 + $I_L26301_1025
26301.                            if ( $I_L26301_1025 >= nd_layer ) exit
26301.                         enddo
26301.                      endif
26301.                   endif
26309.                   call monochromatic_radiance( ierr, n_profile, n_layer, d_mass(1, 1), i_angular_integration, i_2stream, l_rescale, n_order_gauss, n_order_phase, ms_min, ms_max, i_truncation, ls_local_trunc(0), accuracy_adaptive, euler_factor, i_sph_algorithm, i_sph_mode, ia_sph_mm(0), cg_coeff(1), uplm_zero(1), uplm_sol(1, 1), i_scatter_method, i_solver, k_gas_abs(1, 1), .true., adjust_solar_ke(1, 1), isolir, diff_planck_band(1, 1), l_ir_source_quad, diff_planck_band_2(1, 1), zen_0(1), zen_00(1, 1), flux_inc_direct(1), flux_inc_down(1), i_direct_part(1, 0), d_planck_flux_surface(1), ls_brdf_trunc, n_brdf_basis_fnc, rho_alb(1, 1), f_brdf(1, 0, 0, 0), brdf_sol(1, 1, 1), brdf_hemi(1, 1, 1), ss_prop, l_cloud, i_cloud, n_cloud_top, n_cloud_type, frac_cloud(1, id_ct, 1), n_region, k_clr, i_region_cloud(1), frac_region(1, id_ct, 1), w_free(1, id_ct), w_cloud(1, id_ct), cloud_overlap(1, -1 + id_ct, 1), n_column_slv(1), list_column_slv(1, 1), i_clm_lyr_chn(1, 1), i_clm_cld_typ(1, 1), area_column(1, 1), n_viewing_level, i_rad_layer(1), frac_rad_layer(1), n_direction, direction(1, 1, 1), flux_direct_part(1, 0), flux_total_part(1, 1), radiance_part(1, 1, 1), photolysis_part(1, 1), l_clear, i_solver_clear, flux_direct_clear_part(1, 0), flux_total_clear_part(1, 1), nd_profile, nd_layer, nd_layer_clr, id_ct, nd_column, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_cloud_type, nd_region, nd_overlap_coeff, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc, nd_viewing_level, nd_direction, nd_source_coeff )
26373.                   if ( ierr /= 0 ) then
25357.                      _free( t$3141 )
25357.                      goto 100
25357.                   endif
26376.                   if ( -1 + n_cloud_top > 0 ) then
26378.                      $SC_ss_prop_I18 = ss_prop%k_grey_tot_clr%dim_1%SM
26378.                      $SC_ss_prop_I17 = ss_prop%k_grey_tot_clr%dim_1%EX
26378.                      $SC_ss_prop_I19 = ss_prop%k_grey_tot_clr%dim_1%LB
26378.                      $SC_ss_prop_I21 = ss_prop%k_grey_tot_clr%dim_2%SM
26378.                      $SC_ss_prop_I20 = ss_prop%k_grey_tot_clr%dim_2%EX
26378.                      $SC_ss_prop_I22 = ss_prop%k_grey_tot_clr%dim_2%LB
26377.                      if ( n_profile > 0 ) then
26376.                         $I_L26376_1027 = 0
26376.                         do
26377.                            $I_L26377_947 = 0
26377. !dir$ ivdep
26377.                            do
26378.                               (ss_prop%k_grey_tot_clr%base_addr)(1 + $I_L26377_947, 1 + $I_L26376_1027, 0) = k_no_gas_tot_clr(1 + $I_L26377_947, 1 + $I_L26376_1027)
26379.                               $I_L26377_947 = 1 + $I_L26377_947
26377.                               if ( $I_L26377_947 >= n_profile ) exit
26377.                            enddo
26380.                            $I_L26376_1027 = 1 + $I_L26376_1027
26379.                            if ( $I_L26376_1027 >= -1 + n_cloud_top ) exit
26379.                         enddo
26379.                      endif
26379.                   endif
26381.                   if ( n_layer + -n_cloud_top >= 0 ) then
26383.                      $SC_ss_prop_I24 = ss_prop%k_grey_tot%dim_1%SM
26383.                      $SC_ss_prop_I23 = ss_prop%k_grey_tot%dim_1%EX
26383.                      $SC_ss_prop_I25 = ss_prop%k_grey_tot%dim_1%LB
26383.                      $SC_ss_prop_I27 = ss_prop%k_grey_tot%dim_2%SM
26383.                      $SC_ss_prop_I26 = ss_prop%k_grey_tot%dim_2%EX
26383.                      $SC_ss_prop_I28 = ss_prop%k_grey_tot%dim_2%LB
26383.                      $SC_ss_prop_I30 = ss_prop%k_grey_tot%dim_3%SM
26383.                      $SC_ss_prop_I29 = ss_prop%k_grey_tot%dim_3%EX
26383.                      $SC_ss_prop_I31 = ss_prop%k_grey_tot%dim_3%LB
26382.                      if ( n_profile > 0 ) then
26381.                         $I_L26381_1029 = 0
26381.                         do
26382.                            $I_L26382_949 = 0
26382. !dir$ ivdep
26382.                            do
26383.                               (ss_prop%k_grey_tot%base_addr)(1 + $I_L26382_949, n_cloud_top + $I_L26381_1029, 0, 0) = k_no_gas_tot(1 + $I_L26382_949, n_cloud_top + $I_L26381_1029, 0)
26384.                               $I_L26382_949 = 1 + $I_L26382_949
26382.                               if ( $I_L26382_949 >= n_profile ) exit
26382.                            enddo
26385.                            $I_L26381_1029 = 1 + $I_L26381_1029
26384.                            if ( $I_L26381_1029 >= 1 + n_layer + -n_cloud_top ) exit
26384.                         enddo
26384.                      endif
26384.                   endif
26386.                   if ( l_cloud /= .false. ) then
26387.                      if ( n_cloud_type > 0 ) then
26390.                         $SC_ss_prop_I24 = ss_prop%k_grey_tot%dim_1%SM
26390.                         $SC_ss_prop_I23 = ss_prop%k_grey_tot%dim_1%EX
26390.                         $SC_ss_prop_I25 = ss_prop%k_grey_tot%dim_1%LB
26390.                         $SC_ss_prop_I27 = ss_prop%k_grey_tot%dim_2%SM
26390.                         $SC_ss_prop_I26 = ss_prop%k_grey_tot%dim_2%EX
26390.                         $SC_ss_prop_I28 = ss_prop%k_grey_tot%dim_2%LB
26390.                         $SC_ss_prop_I30 = ss_prop%k_grey_tot%dim_3%SM
26390.                         $SC_ss_prop_I29 = ss_prop%k_grey_tot%dim_3%EX
26390.                         $SC_ss_prop_I31 = ss_prop%k_grey_tot%dim_3%LB
26388.                         if ( n_layer + -n_cloud_top >= 0 ) then
26389.                            if ( n_profile > 0 ) then
26387.                               $I_L26387_1058 = 0
26387.                               do
26388.                                  $I_L26388_1031 = 0
26388.                                  do
26389.                                     $I_L26389_951 = 0
26389. !dir$ ivdep
26389. !dir$ loop_info (automatic) cache_nt( k_no_gas_tot )
26389.                                     do
26390.                                        (ss_prop%k_grey_tot%base_addr)(1 + $I_L26389_951, n_cloud_top + $I_L26388_1031, 1 + $I_L26387_1058, 0) = k_no_gas_tot(1 + $I_L26389_951, n_cloud_top + $I_L26388_1031, 1 + $I_L26387_1058)
26391.                                        $I_L26389_951 = 1 + $I_L26389_951
26389.                                        if ( $I_L26389_951 >= n_profile ) exit
26389.                                     enddo
26392.                                     $I_L26388_1031 = 1 + $I_L26388_1031
26391.                                     if ( $I_L26388_1031 >= 1 + n_layer + -n_cloud_top ) exit
26391.                                  enddo
26393.                                  $I_L26387_1058 = 1 + $I_L26387_1058
26392.                                  if ( $I_L26387_1058 >= n_cloud_type ) exit
26392.                               enddo
26392.                            endif
26392.                         endif
26392.                      endif
26392.                   endif
26397.                   weight_incr = weight_band * $esft_weight_S107
26398.                   if ( l_blue_flux_surf /= .false. ) then
26399.                      weight_blue_incr = weight_blue * $esft_weight_S107
26399.                   endif
26401.                   call augment_radiance( n_profile, n_layer, i_angular_integration, i_sph_mode, n_viewing_level, n_direction, isolir, l_clear, l_initial, weight_incr, l_blue_flux_surf, weight_blue_incr, flux_direct(1, 0), flux_down(1, 0), flux_up(1, 0), flux_direct_blue_surf(1), flux_down_blue_surf(1), flux_up_blue_surf(1), i_direct(1, 0), radiance(1, 1, 1), photolysis(1, 1), flux_direct_clear(1, 0), flux_down_clear(1, 0), flux_up_clear(1, 0), flux_direct_part(1, 0), flux_total_part(1, 1), i_direct_part(1, 0), radiance_part(1, 1, 1), photolysis_part(1, 1), flux_direct_clear_part(1, 0), flux_total_clear_part(1, 1), nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_layer, nd_viewing_level, nd_direction )
26422.                   if ( l_tile /= .false. ) then
26423.                      tm$2667 = loc( flux_direct_part(1, n_layer) )
26423.                      flux_direct_incr = _copyin( flux_direct_part(1, n_layer) )
26423.                      tm$2669 = loc( flux_total_part(1, 2 + 2 * n_layer) )
26423.                      flux_down_incr = _copyin( flux_total_part(1, 2 + 2 * n_layer) )
26423.                      tm$2671 = loc( planck_flux_band(1, n_layer) )
26423.                      planck_flux_air = _copyin( planck_flux_band(1, n_layer) )
26423.                      t$132 = nd_point_tile
26423.                      t$1331 = max( 0, nd_point_tile )
26423.                      t$133 = nd_brdf_basis_fnc
26423.                      t$134 = nd_tile
26423.                      t$1332 = max( 0, nd_point_tile )
26423.                      t$1333 = max( 0, nd_brdf_basis_fnc )
26423.                      t$1334 = max( 0, nd_brdf_basis_fnc ) * max( 0, nd_point_tile )
26423.                      t$1335 = max( 0, nd_tile )
26423.                      t$1336 = max( 0, nd_brdf_basis_fnc ) * max( 0, nd_point_tile ) * max( 0, nd_tile )
26423.                      t$1337 = max( 0, nd_point_tile ) * max( 0, nd_tile )
26423.                      t$135 = nd_flux_profile
26423.                      t$1338 = max( 0, nd_flux_profile )
26423.                      if ( l_initial == .false. ) then
26423.                         if ( i_angular_integration == 1 .orelse. i_angular_integration == 2 ) then
26423.                            if ( isolir == 1 ) then
26423.                               if ( n_tile > 0 ) then
26423.                                  if ( n_point_tile > 0 ) then
26423.                                     $I_L26423_1041 = 0
26423.                                     if ( n_tile >= 4 ) then
26423.                                        $I_L26423_1099 = 0
26423. !dir$ blocking_size( 1, 1 )
26423.                                        do
26423.                                           $I_L26423_961 = 0
26423. !dir$ ivdep
26423. !dir$ blocking_size( 256, 256 )
26423.                                           do
26423.                                              $l_S110 = list_tile(1 + $I_L26423_961)
26423.                                              flux_up_tile(1 + $I_L26423_961, 1 + 4 * $I_L26423_1099) = flux_up_tile(1 + $I_L26423_961, 1 + 4 * $I_L26423_1099) + weight_incr * ( flux_direct_incr($l_S110) * ( rho_alb_tile(1 + $I_L26423_961, 2, 1 + 4 * $I_L26423_1099) + -rho_alb_tile(1 + $I_L26423_961, 1, 1 + 4 * $I_L26423_1099) ) + flux_down_incr($l_S110) * rho_alb_tile(1 + $I_L26423_961, 1, 1 + 4 * $I_L26423_1099) )
26423.                                              $l_S110 = list_tile(1 + $I_L26423_961)
26423.                                              flux_up_tile(1 + $I_L26423_961, 2 + 4 * $I_L26423_1099) = flux_up_tile(1 + $I_L26423_961, 2 + 4 * $I_L26423_1099) + weight_incr * ( flux_down_incr($l_S110) * rho_alb_tile(1 + $I_L26423_961, 1, 2 + 4 * $I_L26423_1099) + flux_direct_incr($l_S110) * ( rho_alb_tile(1 + $I_L26423_961, 2, 2 + 4 * $I_L26423_1099) + -rho_alb_tile(1 + $I_L26423_961, 1, 2 + 4 * $I_L26423_1099) ) )
26423.                                              $l_S110 = list_tile(1 + $I_L26423_961)
26423.                                              flux_up_tile(1 + $I_L26423_961, 3 + 4 * $I_L26423_1099) = flux_up_tile(1 + $I_L26423_961, 3 + 4 * $I_L26423_1099) + weight_incr * ( flux_down_incr($l_S110) * rho_alb_tile(1 + $I_L26423_961, 1, 3 + 4 * $I_L26423_1099) + flux_direct_incr($l_S110) * ( rho_alb_tile(1 + $I_L26423_961, 2, 3 + 4 * $I_L26423_1099) + -rho_alb_tile(1 + $I_L26423_961, 1, 3 + 4 * $I_L26423_1099) ) )
26423.                                              $l_S110 = list_tile(1 + $I_L26423_961)
26423.                                              flux_up_tile(1 + $I_L26423_961, 4 + 4 * $I_L26423_1099) = flux_up_tile(1 + $I_L26423_961, 4 + 4 * $I_L26423_1099) + weight_incr * ( flux_down_incr($l_S110) * rho_alb_tile(1 + $I_L26423_961, 1, 4 + 4 * $I_L26423_1099) + flux_direct_incr($l_S110) * ( rho_alb_tile(1 + $I_L26423_961, 2, 4 + 4 * $I_L26423_1099) + -rho_alb_tile(1 + $I_L26423_961, 1, 4 + 4 * $I_L26423_1099) ) )
26423.                                              $I_L26423_961 = 1 + $I_L26423_961
26423.                                              if ( $I_L26423_961 >= n_point_tile ) exit
26423.                                           enddo
26423.                                           $I_L26423_1099 = 1 + $I_L26423_1099
26423.                                           if ( $I_L26423_1099 >= _rsh( n_tile, 2 ) ) exit
26423.                                        enddo
26423.                                        $I_L26423_1041 = and( 0xfffffffffffffffcUL, n_tile )
26423.                                     endif
26423.                                     if ( $I_L26423_1041 < n_tile ) then
26423.                                        $I_L26423_1083 = 0
26423. !dir$ blocking_size( 1, 1 )
26423.                                        do
26423.                                           $I_L26423_961 = 0
26423. !dir$ ivdep
26423. !dir$ blocking_size( 256, 256 )
26423.                                           do
26423.                                              $l_S110 = list_tile(1 + $I_L26423_961)
26423.                                              flux_up_tile(1 + $I_L26423_961, 1 + $I_L26423_1041 + $I_L26423_1083) = flux_up_tile(1 + $I_L26423_961, 1 + $I_L26423_1041 + $I_L26423_1083) + weight_incr * ( flux_down_incr($l_S110) * rho_alb_tile(1 + $I_L26423_961, 1, 1 + $I_L26423_1041 + $I_L26423_1083) + flux_direct_incr($l_S110) * ( rho_alb_tile(1 + $I_L26423_961, 2, 1 + $I_L26423_1041 + $I_L26423_1083) + -rho_alb_tile(1 + $I_L26423_961, 1, 1 + $I_L26423_1041 + $I_L26423_1083) ) )
26423.                                              $I_L26423_961 = 1 + $I_L26423_961
26423.                                              if ( $I_L26423_961 >= n_point_tile ) exit
26423.                                           enddo
26423.                                           $I_L26423_1083 = 1 + $I_L26423_1083
26423.                                           if ( $I_L26423_1083 >= n_tile + -$I_L26423_1041 ) exit
26423.                                        enddo
26423.                                     endif
26423.                                  endif
26423.                               endif
26423.                               if ( l_blue_flux_surf /= .false. ) then
26423.                                  if ( n_tile > 0 ) then
26423.                                     if ( n_point_tile > 0 ) then
26423.                                        $I_L26423_1043 = 0
26423.                                        if ( n_tile >= 4 ) then
26423.                                           $I_L26423_1101 = 0
26423. !dir$ blocking_size( 1, 1 )
26423.                                           do
26423.                                              $I_L26423_963 = 0
26423. !dir$ ivdep
26423. !dir$ blocking_size( 256, 256 )
26423.                                              do
26423.                                                 $l_S113 = list_tile(1 + $I_L26423_963)
26423.                                                 flux_up_blue_tile(1 + $I_L26423_963, 1 + 4 * $I_L26423_1101) = flux_up_blue_tile(1 + $I_L26423_963, 1 + 4 * $I_L26423_1101) + weight_blue_incr * ( flux_direct_incr($l_S113) * ( rho_alb_tile(1 + $I_L26423_963, 2, 1 + 4 * $I_L26423_1101) + -rho_alb_tile(1 + $I_L26423_963, 1, 1 + 4 * $I_L26423_1101) ) + flux_down_incr($l_S113) * rho_alb_tile(1 + $I_L26423_963, 1, 1 + 4 * $I_L26423_1101) )
26423.                                                 $l_S113 = list_tile(1 + $I_L26423_963)
26423.                                                 flux_up_blue_tile(1 + $I_L26423_963, 2 + 4 * $I_L26423_1101) = flux_up_blue_tile(1 + $I_L26423_963, 2 + 4 * $I_L26423_1101) + weight_blue_incr * ( flux_down_incr($l_S113) * rho_alb_tile(1 + $I_L26423_963, 1, 2 + 4 * $I_L26423_1101) + flux_direct_incr($l_S113) * ( rho_alb_tile(1 + $I_L26423_963, 2, 2 + 4 * $I_L26423_1101) + -rho_alb_tile(1 + $I_L26423_963, 1, 2 + 4 * $I_L26423_1101) ) )
26423.                                                 $l_S113 = list_tile(1 + $I_L26423_963)
26423.                                                 flux_up_blue_tile(1 + $I_L26423_963, 3 + 4 * $I_L26423_1101) = flux_up_blue_tile(1 + $I_L26423_963, 3 + 4 * $I_L26423_1101) + weight_blue_incr * ( flux_down_incr($l_S113) * rho_alb_tile(1 + $I_L26423_963, 1, 3 + 4 * $I_L26423_1101) + flux_direct_incr($l_S113) * ( rho_alb_tile(1 + $I_L26423_963, 2, 3 + 4 * $I_L26423_1101) + -rho_alb_tile(1 + $I_L26423_963, 1, 3 + 4 * $I_L26423_1101) ) )
26423.                                                 $l_S113 = list_tile(1 + $I_L26423_963)
26423.                                                 flux_up_blue_tile(1 + $I_L26423_963, 4 + 4 * $I_L26423_1101) = flux_up_blue_tile(1 + $I_L26423_963, 4 + 4 * $I_L26423_1101) + weight_blue_incr * ( flux_down_incr($l_S113) * rho_alb_tile(1 + $I_L26423_963, 1, 4 + 4 * $I_L26423_1101) + flux_direct_incr($l_S113) * ( rho_alb_tile(1 + $I_L26423_963, 2, 4 + 4 * $I_L26423_1101) + -rho_alb_tile(1 + $I_L26423_963, 1, 4 + 4 * $I_L26423_1101) ) )
26423.                                                 $I_L26423_963 = 1 + $I_L26423_963
26423.                                                 if ( $I_L26423_963 >= n_point_tile ) exit
26423.                                              enddo
26423.                                              $I_L26423_1101 = 1 + $I_L26423_1101
26423.                                              if ( $I_L26423_1101 >= _rsh( n_tile, 2 ) ) exit
26423.                                           enddo
26423.                                           $I_L26423_1043 = and( 0xfffffffffffffffcUL, n_tile )
26423.                                        endif
26423.                                        if ( $I_L26423_1043 < n_tile ) then
26423.                                           $I_L26423_1086 = 0
26423. !dir$ blocking_size( 1, 1 )
26423.                                           do
26423.                                              $I_L26423_963 = 0
26423. !dir$ ivdep
26423. !dir$ blocking_size( 256, 256 )
26423.                                              do
26423.                                                 $l_S113 = list_tile(1 + $I_L26423_963)
26423.                                                 flux_up_blue_tile(1 + $I_L26423_963, 1 + $I_L26423_1043 + $I_L26423_1086) = flux_up_blue_tile(1 + $I_L26423_963, 1 + $I_L26423_1043 + $I_L26423_1086) + weight_blue_incr * ( flux_down_incr($l_S113) * rho_alb_tile(1 + $I_L26423_963, 1, 1 + $I_L26423_1043 + $I_L26423_1086) + flux_direct_incr($l_S113) * ( rho_alb_tile(1 + $I_L26423_963, 2, 1 + $I_L26423_1043 + $I_L26423_1086) + -rho_alb_tile(1 + $I_L26423_963, 1, 1 + $I_L26423_1043 + $I_L26423_1086) ) )
26423.                                                 $I_L26423_963 = 1 + $I_L26423_963
26423.                                                 if ( $I_L26423_963 >= n_point_tile ) exit
26423.                                              enddo
26423.                                              $I_L26423_1086 = 1 + $I_L26423_1086
26423.                                              if ( $I_L26423_1086 >= n_tile + -$I_L26423_1043 ) exit
26423.                                           enddo
26423.                                        endif
26423.                                     endif
26423.                                  endif
26423.                               endif
26423.                            else if ( isolir == 2 ) then
26423.                               if ( n_tile > 0 ) then
26423.                                  if ( n_point_tile > 0 ) then
26423.                                     $I_L26423_1039 = 0
26423.                                     if ( n_tile >= 4 ) then
26423.                                        $I_L26423_1103 = 0
26423. !dir$ blocking_size( 1, 1 )
26423.                                        do
26423.                                           $I_L26423_959 = 0
26423. !dir$ ivdep
26423. !dir$ blocking_size( 256, 256 )
26423.                                           do
26423.                                              $l_S116 = list_tile(1 + $I_L26423_959)
26423.                                              flux_up_tile(1 + $I_L26423_959, 1 + 4 * $I_L26423_1103) = flux_up_tile(1 + $I_L26423_959, 1 + 4 * $I_L26423_1103) + weight_incr * ( planck_flux_tile(1 + $I_L26423_959, 1 + 4 * $I_L26423_1103) + rho_alb_tile(1 + $I_L26423_959, 1, 1 + 4 * $I_L26423_1103) * ( planck_flux_air($l_S116) + flux_down_incr($l_S116) + -planck_flux_tile(1 + $I_L26423_959, 1 + 4 * $I_L26423_1103) ) )
26423.                                              $l_S116 = list_tile(1 + $I_L26423_959)
26423.                                              flux_up_tile(1 + $I_L26423_959, 2 + 4 * $I_L26423_1103) = flux_up_tile(1 + $I_L26423_959, 2 + 4 * $I_L26423_1103) + weight_incr * ( planck_flux_tile(1 + $I_L26423_959, 2 + 4 * $I_L26423_1103) + rho_alb_tile(1 + $I_L26423_959, 1, 2 + 4 * $I_L26423_1103) * ( planck_flux_air($l_S116) + flux_down_incr($l_S116) + -planck_flux_tile(1 + $I_L26423_959, 2 + 4 * $I_L26423_1103) ) )
26423.                                              $l_S116 = list_tile(1 + $I_L26423_959)
26423.                                              flux_up_tile(1 + $I_L26423_959, 3 + 4 * $I_L26423_1103) = flux_up_tile(1 + $I_L26423_959, 3 + 4 * $I_L26423_1103) + weight_incr * ( planck_flux_tile(1 + $I_L26423_959, 3 + 4 * $I_L26423_1103) + rho_alb_tile(1 + $I_L26423_959, 1, 3 + 4 * $I_L26423_1103) * ( planck_flux_air($l_S116) + flux_down_incr($l_S116) + -planck_flux_tile(1 + $I_L26423_959, 3 + 4 * $I_L26423_1103) ) )
26423.                                              $l_S116 = list_tile(1 + $I_L26423_959)
26423.                                              flux_up_tile(1 + $I_L26423_959, 4 + 4 * $I_L26423_1103) = flux_up_tile(1 + $I_L26423_959, 4 + 4 * $I_L26423_1103) + weight_incr * ( planck_flux_tile(1 + $I_L26423_959, 4 + 4 * $I_L26423_1103) + rho_alb_tile(1 + $I_L26423_959, 1, 4 + 4 * $I_L26423_1103) * ( planck_flux_air($l_S116) + flux_down_incr($l_S116) + -planck_flux_tile(1 + $I_L26423_959, 4 + 4 * $I_L26423_1103) ) )
26423.                                              $I_L26423_959 = 1 + $I_L26423_959
26423.                                              if ( $I_L26423_959 >= n_point_tile ) exit
26423.                                           enddo
26423.                                           $I_L26423_1103 = 1 + $I_L26423_1103
26423.                                           if ( $I_L26423_1103 >= _rsh( n_tile, 2 ) ) exit
26423.                                        enddo
26423.                                        $I_L26423_1039 = and( 0xfffffffffffffffcUL, n_tile )
26423.                                     endif
26423.                                     if ( $I_L26423_1039 < n_tile ) then
26423.                                        $I_L26423_1080 = 0
26423. !dir$ blocking_size( 1, 1 )
26423.                                        do
26423.                                           $I_L26423_959 = 0
26423. !dir$ ivdep
26423. !dir$ blocking_size( 256, 256 )
26423.                                           do
26423.                                              $l_S116 = list_tile(1 + $I_L26423_959)
26423.                                              flux_up_tile(1 + $I_L26423_959, 1 + $I_L26423_1039 + $I_L26423_1080) = flux_up_tile(1 + $I_L26423_959, 1 + $I_L26423_1039 + $I_L26423_1080) + weight_incr * ( planck_flux_tile(1 + $I_L26423_959, 1 + $I_L26423_1039 + $I_L26423_1080) + rho_alb_tile(1 + $I_L26423_959, 1, 1 + $I_L26423_1039 + $I_L26423_1080) * ( planck_flux_air($l_S116) + flux_down_incr($l_S116) + -planck_flux_tile(1 + $I_L26423_959, 1 + $I_L26423_1039 + $I_L26423_1080) ) )
26423.                                              $I_L26423_959 = 1 + $I_L26423_959
26423.                                              if ( $I_L26423_959 >= n_point_tile ) exit
26423.                                           enddo
26423.                                           $I_L26423_1080 = 1 + $I_L26423_1080
26423.                                           if ( $I_L26423_1080 >= n_tile + -$I_L26423_1039 ) exit
26423.                                        enddo
26423.                                     endif
26423.                                  endif
26423.                               endif
26423.                            endif
26423.                         else
26423.                            if ( i_angular_integration == 3 ) then
26423.                               _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$137,  _substr(t$136,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Tiled surfaces have not yet been ', 0x800600000000L ), _iotype( 'implemented with the spherical harmonic solver.', 0x800600000000L ) ) )
26423.                               ierr = 1
26423.                            endif
26423.                         endif
26423.                      else if ( i_angular_integration == 1 ) then
26423.                         goto 50
26423.                         goto 60
26423.                      else if ( i_angular_integration == 2 ) then
26423.    50                   continue
26423.                         if ( isolir == 1 ) then
26423.                            if ( n_tile > 0 ) then
26423.                               if ( n_point_tile > 0 ) then
26423.                                  $I_L26423_1035 = 0
26423.                                  if ( n_tile >= 4 ) then
26423.                                     $I_L26423_1105 = 0
26423. !dir$ blocking_size( 1, 1 )
26423.                                     do
26423.                                        $I_L26423_955 = 0
26423. !dir$ ivdep
26423. !dir$ blocking_size( 256, 256 )
26423.                                        do
26423.                                           $l_S119 = list_tile(1 + $I_L26423_955)
26423.                                           flux_up_tile(1 + $I_L26423_955, 1 + 4 * $I_L26423_1105) = weight_incr * ( flux_direct_incr($l_S119) * ( rho_alb_tile(1 + $I_L26423_955, 2, 1 + 4 * $I_L26423_1105) + -rho_alb_tile(1 + $I_L26423_955, 1, 1 + 4 * $I_L26423_1105) ) + flux_down_incr($l_S119) * rho_alb_tile(1 + $I_L26423_955, 1, 1 + 4 * $I_L26423_1105) )
26423.                                           $l_S119 = list_tile(1 + $I_L26423_955)
26423.                                           flux_up_tile(1 + $I_L26423_955, 2 + 4 * $I_L26423_1105) = weight_incr * ( flux_down_incr($l_S119) * rho_alb_tile(1 + $I_L26423_955, 1, 2 + 4 * $I_L26423_1105) + flux_direct_incr($l_S119) * ( rho_alb_tile(1 + $I_L26423_955, 2, 2 + 4 * $I_L26423_1105) + -rho_alb_tile(1 + $I_L26423_955, 1, 2 + 4 * $I_L26423_1105) ) )
26423.                                           $l_S119 = list_tile(1 + $I_L26423_955)
26423.                                           flux_up_tile(1 + $I_L26423_955, 3 + 4 * $I_L26423_1105) = weight_incr * ( flux_down_incr($l_S119) * rho_alb_tile(1 + $I_L26423_955, 1, 3 + 4 * $I_L26423_1105) + flux_direct_incr($l_S119) * ( rho_alb_tile(1 + $I_L26423_955, 2, 3 + 4 * $I_L26423_1105) + -rho_alb_tile(1 + $I_L26423_955, 1, 3 + 4 * $I_L26423_1105) ) )
26423.                                           $l_S119 = list_tile(1 + $I_L26423_955)
26423.                                           flux_up_tile(1 + $I_L26423_955, 4 + 4 * $I_L26423_1105) = weight_incr * ( flux_down_incr($l_S119) * rho_alb_tile(1 + $I_L26423_955, 1, 4 + 4 * $I_L26423_1105) + flux_direct_incr($l_S119) * ( rho_alb_tile(1 + $I_L26423_955, 2, 4 + 4 * $I_L26423_1105) + -rho_alb_tile(1 + $I_L26423_955, 1, 4 + 4 * $I_L26423_1105) ) )
26423.                                           $I_L26423_955 = 1 + $I_L26423_955
26423.                                           if ( $I_L26423_955 >= n_point_tile ) exit
26423.                                        enddo
26423.                                        $I_L26423_1105 = 1 + $I_L26423_1105
26423.                                        if ( $I_L26423_1105 >= _rsh( n_tile, 2 ) ) exit
26423.                                     enddo
26423.                                     $I_L26423_1035 = and( 0xfffffffffffffffcUL, n_tile )
26423.                                  endif
26423.                                  if ( $I_L26423_1035 < n_tile ) then
26423.                                     $I_L26423_1074 = 0
26423. !dir$ blocking_size( 1, 1 )
26423.                                     do
26423.                                        $I_L26423_955 = 0
26423. !dir$ ivdep
26423. !dir$ blocking_size( 256, 256 )
26423.                                        do
26423.                                           $l_S119 = list_tile(1 + $I_L26423_955)
26423.                                           flux_up_tile(1 + $I_L26423_955, 1 + $I_L26423_1035 + $I_L26423_1074) = weight_incr * ( flux_down_incr($l_S119) * rho_alb_tile(1 + $I_L26423_955, 1, 1 + $I_L26423_1035 + $I_L26423_1074) + flux_direct_incr($l_S119) * ( rho_alb_tile(1 + $I_L26423_955, 2, 1 + $I_L26423_1035 + $I_L26423_1074) + -rho_alb_tile(1 + $I_L26423_955, 1, 1 + $I_L26423_1035 + $I_L26423_1074) ) )
26423.                                           $I_L26423_955 = 1 + $I_L26423_955
26423.                                           if ( $I_L26423_955 >= n_point_tile ) exit
26423.                                        enddo
26423.                                        $I_L26423_1074 = 1 + $I_L26423_1074
26423.                                        if ( $I_L26423_1074 >= n_tile + -$I_L26423_1035 ) exit
26423.                                     enddo
26423.                                  endif
26423.                               endif
26423.                            endif
26423.                            if ( l_blue_flux_surf /= .false. ) then
26423.                               if ( n_tile > 0 ) then
26423.                                  if ( n_point_tile > 0 ) then
26423.                                     $I_L26423_1037 = 0
26423.                                     if ( n_tile >= 4 ) then
26423.                                        $I_L26423_1107 = 0
26423. !dir$ blocking_size( 1, 1 )
26423.                                        do
26423.                                           $I_L26423_957 = 0
26423. !dir$ ivdep
26423. !dir$ blocking_size( 256, 256 )
26423.                                           do
26423.                                              $l_S122 = list_tile(1 + $I_L26423_957)
26423.                                              flux_up_blue_tile(1 + $I_L26423_957, 1 + 4 * $I_L26423_1107) = weight_blue_incr * ( flux_direct_incr($l_S122) * ( rho_alb_tile(1 + $I_L26423_957, 2, 1 + 4 * $I_L26423_1107) + -rho_alb_tile(1 + $I_L26423_957, 1, 1 + 4 * $I_L26423_1107) ) + flux_down_incr($l_S122) * rho_alb_tile(1 + $I_L26423_957, 1, 1 + 4 * $I_L26423_1107) )
26423.                                              $l_S122 = list_tile(1 + $I_L26423_957)
26423.                                              flux_up_blue_tile(1 + $I_L26423_957, 2 + 4 * $I_L26423_1107) = weight_blue_incr * ( flux_down_incr($l_S122) * rho_alb_tile(1 + $I_L26423_957, 1, 2 + 4 * $I_L26423_1107) + flux_direct_incr($l_S122) * ( rho_alb_tile(1 + $I_L26423_957, 2, 2 + 4 * $I_L26423_1107) + -rho_alb_tile(1 + $I_L26423_957, 1, 2 + 4 * $I_L26423_1107) ) )
26423.                                              $l_S122 = list_tile(1 + $I_L26423_957)
26423.                                              flux_up_blue_tile(1 + $I_L26423_957, 3 + 4 * $I_L26423_1107) = weight_blue_incr * ( flux_down_incr($l_S122) * rho_alb_tile(1 + $I_L26423_957, 1, 3 + 4 * $I_L26423_1107) + flux_direct_incr($l_S122) * ( rho_alb_tile(1 + $I_L26423_957, 2, 3 + 4 * $I_L26423_1107) + -rho_alb_tile(1 + $I_L26423_957, 1, 3 + 4 * $I_L26423_1107) ) )
26423.                                              $l_S122 = list_tile(1 + $I_L26423_957)
26423.                                              flux_up_blue_tile(1 + $I_L26423_957, 4 + 4 * $I_L26423_1107) = weight_blue_incr * ( flux_down_incr($l_S122) * rho_alb_tile(1 + $I_L26423_957, 1, 4 + 4 * $I_L26423_1107) + flux_direct_incr($l_S122) * ( rho_alb_tile(1 + $I_L26423_957, 2, 4 + 4 * $I_L26423_1107) + -rho_alb_tile(1 + $I_L26423_957, 1, 4 + 4 * $I_L26423_1107) ) )
26423.                                              $I_L26423_957 = 1 + $I_L26423_957
26423.                                              if ( $I_L26423_957 >= n_point_tile ) exit
26423.                                           enddo
26423.                                           $I_L26423_1107 = 1 + $I_L26423_1107
26423.                                           if ( $I_L26423_1107 >= _rsh( n_tile, 2 ) ) exit
26423.                                        enddo
26423.                                        $I_L26423_1037 = and( 0xfffffffffffffffcUL, n_tile )
26423.                                     endif
26423.                                     if ( $I_L26423_1037 < n_tile ) then
26423.                                        $I_L26423_1077 = 0
26423. !dir$ blocking_size( 1, 1 )
26423.                                        do
26423.                                           $I_L26423_957 = 0
26423. !dir$ ivdep
26423. !dir$ blocking_size( 256, 256 )
26423.                                           do
26423.                                              $l_S122 = list_tile(1 + $I_L26423_957)
26423.                                              flux_up_blue_tile(1 + $I_L26423_957, 1 + $I_L26423_1037 + $I_L26423_1077) = weight_blue_incr * ( flux_down_incr($l_S122) * rho_alb_tile(1 + $I_L26423_957, 1, 1 + $I_L26423_1037 + $I_L26423_1077) + flux_direct_incr($l_S122) * ( rho_alb_tile(1 + $I_L26423_957, 2, 1 + $I_L26423_1037 + $I_L26423_1077) + -rho_alb_tile(1 + $I_L26423_957, 1, 1 + $I_L26423_1037 + $I_L26423_1077) ) )
26423.                                              $I_L26423_957 = 1 + $I_L26423_957
26423.                                              if ( $I_L26423_957 >= n_point_tile ) exit
26423.                                           enddo
26423.                                           $I_L26423_1077 = 1 + $I_L26423_1077
26423.                                           if ( $I_L26423_1077 >= n_tile + -$I_L26423_1037 ) exit
26423.                                        enddo
26423.                                     endif
26423.                                  endif
26423.                               endif
26423.                            endif
26423.                         else if ( isolir == 2 ) then
26423.                            if ( n_tile > 0 ) then
26423.                               if ( n_point_tile > 0 ) then
26423.                                  $I_L26423_1033 = 0
26423.                                  if ( n_tile >= 4 ) then
26423.                                     $I_L26423_1109 = 0
26423. !dir$ blocking_size( 1, 1 )
26423.                                     do
26423.                                        $I_L26423_953 = 0
26423. !dir$ ivdep
26423. !dir$ blocking_size( 256, 256 )
26423.                                        do
26423.                                           $l_S125 = list_tile(1 + $I_L26423_953)
26423.                                           flux_up_tile(1 + $I_L26423_953, 1 + 4 * $I_L26423_1109) = weight_incr * ( planck_flux_tile(1 + $I_L26423_953, 1 + 4 * $I_L26423_1109) + rho_alb_tile(1 + $I_L26423_953, 1, 1 + 4 * $I_L26423_1109) * ( planck_flux_air($l_S125) + flux_down_incr($l_S125) + -planck_flux_tile(1 + $I_L26423_953, 1 + 4 * $I_L26423_1109) ) )
26423.                                           $l_S125 = list_tile(1 + $I_L26423_953)
26423.                                           flux_up_tile(1 + $I_L26423_953, 2 + 4 * $I_L26423_1109) = weight_incr * ( planck_flux_tile(1 + $I_L26423_953, 2 + 4 * $I_L26423_1109) + rho_alb_tile(1 + $I_L26423_953, 1, 2 + 4 * $I_L26423_1109) * ( planck_flux_air($l_S125) + flux_down_incr($l_S125) + -planck_flux_tile(1 + $I_L26423_953, 2 + 4 * $I_L26423_1109) ) )
26423.                                           $l_S125 = list_tile(1 + $I_L26423_953)
26423.                                           flux_up_tile(1 + $I_L26423_953, 3 + 4 * $I_L26423_1109) = weight_incr * ( planck_flux_tile(1 + $I_L26423_953, 3 + 4 * $I_L26423_1109) + rho_alb_tile(1 + $I_L26423_953, 1, 3 + 4 * $I_L26423_1109) * ( planck_flux_air($l_S125) + flux_down_incr($l_S125) + -planck_flux_tile(1 + $I_L26423_953, 3 + 4 * $I_L26423_1109) ) )
26423.                                           $l_S125 = list_tile(1 + $I_L26423_953)
26423.                                           flux_up_tile(1 + $I_L26423_953, 4 + 4 * $I_L26423_1109) = weight_incr * ( planck_flux_tile(1 + $I_L26423_953, 4 + 4 * $I_L26423_1109) + rho_alb_tile(1 + $I_L26423_953, 1, 4 + 4 * $I_L26423_1109) * ( planck_flux_air($l_S125) + flux_down_incr($l_S125) + -planck_flux_tile(1 + $I_L26423_953, 4 + 4 * $I_L26423_1109) ) )
26423.                                           $I_L26423_953 = 1 + $I_L26423_953
26423.                                           if ( $I_L26423_953 >= n_point_tile ) exit
26423.                                        enddo
26423.                                        $I_L26423_1109 = 1 + $I_L26423_1109
26423.                                        if ( $I_L26423_1109 >= _rsh( n_tile, 2 ) ) exit
26423.                                     enddo
26423.                                     $I_L26423_1033 = and( 0xfffffffffffffffcUL, n_tile )
26423.                                  endif
26423.                                  if ( $I_L26423_1033 < n_tile ) then
26423.                                     $I_L26423_1071 = 0
26423. !dir$ blocking_size( 1, 1 )
26423.                                     do
26423.                                        $I_L26423_953 = 0
26423. !dir$ ivdep
26423. !dir$ blocking_size( 256, 256 )
26423.                                        do
26423.                                           $l_S125 = list_tile(1 + $I_L26423_953)
26423.                                           flux_up_tile(1 + $I_L26423_953, 1 + $I_L26423_1033 + $I_L26423_1071) = weight_incr * ( planck_flux_tile(1 + $I_L26423_953, 1 + $I_L26423_1033 + $I_L26423_1071) + rho_alb_tile(1 + $I_L26423_953, 1, 1 + $I_L26423_1033 + $I_L26423_1071) * ( planck_flux_air($l_S125) + flux_down_incr($l_S125) + -planck_flux_tile(1 + $I_L26423_953, 1 + $I_L26423_1033 + $I_L26423_1071) ) )
26423.                                           $I_L26423_953 = 1 + $I_L26423_953
26423.                                           if ( $I_L26423_953 >= n_point_tile ) exit
26423.                                        enddo
26423.                                        $I_L26423_1071 = 1 + $I_L26423_1071
26423.                                        if ( $I_L26423_1071 >= n_tile + -$I_L26423_1033 ) exit
26423.                                     enddo
26423.                                  endif
26423.                               endif
26423.                            endif
26423.                         endif
26423.                         goto 60
26423.                      else if ( i_angular_integration == 3 ) then
26423.                         _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$139,  _substr(t$138,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Tiled surfaces have not yet been ', 0x800600000000L ), _iotype( 'implemented with the spherical harmonic solver.', 0x800600000000L ) ) )
26423.                         ierr = 1
26423.                      else
26423.    60                   continue
26423.                         l_initial = .false.
26423.                      endif
26423.                      planck_flux_band(1, n_layer) = _copyout( planck_flux_air )
26423.                      flux_total_part(1, 2 + 2 * n_layer) = _copyout( flux_down_incr )
26423.                      flux_direct_part(1, n_layer) = _copyout( flux_direct_incr )
26439.                      if ( ierr /= 0 ) then
25357.                         _free( t$3141 )
25357.                         goto 100
25357.                      endif
26444.                      l_initial = .false.
26446.                      $I_L26197_1064 = 1 + $I_L26197_1064
26440.                   else
26440.                   endif
26440.                else
26440.                endif
26440.                if ( $I_L26197_1064 >= $t_S75 ) exit
26440.             enddo
26440.             goto 70
26440.          else
26440.    70       continue
25357.             _free( t$3141 )
25357.          endif
25357.       endif
25357.   100 continue
26451.       return
26451.       end
26451.       
26470.       
26470.       subroutine solve_band_one_gas( ierr, n_profile, n_layer, i_top, p, t, d_mass, i_angular_integration, i_2stream, n_order_phase, l_rescale, n_order_gauss, ms_min, ms_max, i_truncation, ls_local_trunc, accuracy_adaptive, euler_factor, i_sph_algorithm, i_sph_mode, ia_sph_mm, cg_coeff, uplm_zero, uplm_sol, i_scatter_method, i_solver, i_band, i_gas, i_band_esft, i_scale_esft, i_scale_fnc, k_esft, w_esft, scale_vector, p_reference, t_reference, gas_mix_ratio, gas_frac_rescaled, l_doppler, doppler_correction, isolir, zen_0, zen_00, solar_irrad, planck_flux_top, planck_flux_bottom, diff_planck_band, l_ir_source_quad, diff_planck_band_2, ls_brdf_trunc, n_brdf_basis_fnc, rho_alb, f_brdf, brdf_sol, brdf_hemi, planck_flux_ground, l_tile, n_point_tile, n_tile, list_tile, rho_alb_tile, planck_flux_tile, ss_prop, l_cloud, i_cloud, n_cloud_top, n_cloud_type, frac_cloud, n_region, k_clr, i_region_cloud, frac_region, w_free, w_cloud, cloud_overlap, n_column_slv, list_column_slv, i_clm_lyr_chn, i_clm_cld_typ, area_column, n_viewing_level, i_rad_layer, frac_rad_layer, n_direction, direction, weight_band, l_initial, flux_direct, flux_down, flux_up, i_direct, radiance, photolysis, l_clear, i_solver_clear, flux_direct_clear, flux_down_clear, flux_up_clear, flux_up_tile, flux_up_blue_tile, l_blue_flux_surf, weight_blue, flux_direct_blue_surf, flux_down_blue_surf, flux_up_blue_surf, nd_profile, nd_layer, nd_layer_clr, id_ct, nd_column, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_band, nd_species, nd_esft_term, nd_scale_variable, nd_cloud_type, nd_region, nd_overlap_coeff, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc, nd_viewing_level, nd_direction, nd_source_coeff, nd_point_tile, nd_tile )
26470.       t$827 = nd_profile
26470.       t$828 = nd_layer
26634.       t$3219 = _zla( 0, nd_profile )
26470.       t$3220 = _zla( 0, nd_profile )
26634.       t$3221 = _zla( 0, nd_layer )
26470.       t$3222 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
26470.       t$829 = nd_max_order
26470.       t$3223 = 1 + nd_max_order
26660.       t$3224 = _zla( 0, 1 + nd_max_order )
26470.       t$830 = nd_sph_coeff
26670.       t$3225 = _zla( 0, nd_sph_coeff )
26470.       t$831 = nd_radiance_profile
26674.       t$3226 = _zla( 0, nd_radiance_profile )
26470.       t$3227 = _zla( 0, nd_radiance_profile )
26470.       t$3228 = _zla( 0, nd_sph_coeff ) * _zla( 0, nd_radiance_profile )
26470.       t$832 = nd_band
26470.       t$833 = nd_species
26703.       t$3229 = _zla( 0, nd_band )
26470.       t$3230 = _zla( 0, nd_band )
26703.       t$3231 = _zla( 0, nd_species )
26470.       t$3232 = _zla( 0, nd_band ) * _zla( 0, nd_species )
26470.       t$834 = nd_esft_term
26713.       t$3233 = _zla( 0, nd_esft_term )
26470.       t$3234 = _zla( 0, nd_esft_term )
26470.       t$3235 = _zla( 0, nd_band ) * _zla( 0, nd_esft_term )
26470.       t$3236 = _zla( 0, nd_band ) * _zla( 0, nd_species ) * _zla( 0, nd_esft_term )
26470.       t$835 = nd_scale_variable
26717.       t$3237 = _zla( 0, nd_scale_variable )
26470.       t$3238 = _zla( 0, nd_scale_variable )
26470.       t$3239 = _zla( 0, nd_esft_term ) * _zla( 0, nd_scale_variable )
26470.       t$3240 = _zla( 0, nd_band ) * _zla( 0, nd_esft_term ) * _zla( 0, nd_scale_variable )
26470.       t$3241 = _zla( 0, nd_band ) * _zla( 0, nd_species ) * _zla( 0, nd_esft_term ) * _zla( 0, nd_scale_variable )
26470.       t$3242 = _zla( 0, nd_species )
26470.       t$3243 = _zla( 0, nd_band ) * _zla( 0, nd_species )
26470.       t$3244 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
26470.       t$3245 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_species )
26470.       t$836 = nd_brdf_basis_fnc
26770.       t$3246 = _zla( 0, nd_brdf_basis_fnc )
26470.       t$3247 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
26470.       t$837 = nd_brdf_trunc / 2
26470.       t$838 = nd_brdf_trunc
26470.       t$3248 = _zla( 0, nd_brdf_basis_fnc )
26470.       t$3249 = 1 + t$837
26772.       t$3250 = _zla( 0, 1 + t$837 )
26470.       t$3251 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$837 )
26470.       t$3252 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$837 ) * _zla( 0, 1 + t$837 )
26470.       t$3253 = 1 + nd_brdf_trunc
26772.       t$3254 = _zla( 0, 1 + nd_brdf_trunc )
26470.       t$3255 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$837 ) * _zla( 0, 1 + t$837 ) * _zla( 0, 1 + nd_brdf_trunc )
26470.       t$839 = nd_direction
26470.       t$3256 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
26775.       t$3257 = _zla( 0, nd_direction )
26470.       t$3258 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_direction )
26470.       t$840 = nd_point_tile
26791.       t$3259 = _zla( 0, nd_point_tile )
26470.       t$841 = nd_tile
26470.       t$3260 = _zla( 0, nd_point_tile )
26470.       t$3261 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_point_tile )
26794.       t$3262 = _zla( 0, nd_tile )
26470.       t$3263 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_point_tile ) * _zla( 0, nd_tile )
26470.       t$3264 = _zla( 0, nd_point_tile ) * _zla( 0, nd_tile )
 2600.       if ( t$27 == 0 ) then
 2600.          t$3269(1) = 4
 2600.          t$3270(1) = 0
 2600.          t$3271(1) = 0
 2600.          t$3266(1) = int( loc( t$26 ), 8 )
 2600.          t$3267(1) = 0
 2600.          t$3268(1) = int( loc( t$3265 ), 8 )
 2600.          t$27 = __get_dynamic_type( 2, t$3266(1), t$3269(1), 1, t$3267(1), t$3268(1), t$3270(1), t$3271(1) )
 2600.       endif
26470.       t$844 = id_ct
26470.       t$842 = nd_cloud_type
26470.       t$3273 = 1 + nd_layer + -id_ct
26840.       t$3274 = max( 0, 1 + nd_layer + -id_ct )
26470.       t$3275 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
26840.       t$3276 = max( 0, nd_cloud_type )
26470.       t$3277 = _zla( 0, nd_profile ) * max( 0, nd_cloud_type ) * max( 0, 1 + nd_layer + -id_ct )
26470.       t$847 = nd_region
26846.       t$3278 = max( 0, nd_region )
26470.       t$3279 = _zla( 0, nd_profile ) * max( 0, nd_region ) * max( 0, 1 + nd_layer + -id_ct )
26470.       t$3280 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
26470.       t$845 = ( -1 + id_ct )
26470.       t$846 = nd_overlap_coeff
26470.       t$3281 = 2 + nd_layer + -id_ct
26842.       t$3282 = max( 0, 2 + nd_layer + -id_ct )
26470.       t$3283 = _zla( 0, nd_profile ) * max( 0, 2 + nd_layer + -id_ct )
26842.       t$3284 = max( 0, nd_overlap_coeff )
26470.       t$3285 = _zla( 0, nd_profile ) * max( 0, nd_overlap_coeff ) * max( 0, 2 + nd_layer + -id_ct )
26470.       t$843 = nd_column
26829.       t$3286 = max( 0, nd_column )
26470.       t$3287 = _zla( 0, nd_profile ) * max( 0, nd_column )
26470.       t$848 = nd_viewing_level
26871.       t$3288 = max( 0, nd_viewing_level )
26470.       t$3289 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
26470.       t$3290 = 2 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
26470.       t$849 = nd_flux_profile
26887.       t$3291 = max( 0, nd_flux_profile )
26470.       t$3292 = max( 0, nd_flux_profile )
26470.       t$3293 = 1 + nd_layer
26887.       t$3294 = max( 0, 1 + nd_layer )
26470.       t$3295 = max( 0, nd_flux_profile ) * max( 0, 1 + nd_layer )
26470.       t$3296 = _zla( 0, nd_radiance_profile ) * max( 0, 1 + nd_layer )
26470.       t$3297 = _zla( 0, nd_radiance_profile ) * max( 0, nd_viewing_level )
26470.       t$3298 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * max( 0, nd_viewing_level )
26470.       t$850 = nd_j_profile
26904.       t$3299 = max( 0, nd_j_profile )
26470.       t$3300 = max( 0, nd_j_profile )
26470.       t$3301 = max( 0, nd_viewing_level ) * max( 0, nd_j_profile )
26470.       t$3302 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer )
26965.       t$3305 = 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
26959.       t$3306 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
26959.       t$3308 = t$3306 + 8 * _zla( 0, nd_profile )
26974.       t$3309 = 8 * ( 7 + t$3306 + 8 * _zla( 0, nd_profile ) ) / 8
26974.       t$3311 = t$3309 + 8 * _zla( 0, nd_profile ) * max( 0, 1 + nd_layer )
26970.       t$3312 = 8 * ( 7 + t$3309 + 8 * _zla( 0, nd_profile ) * max( 0, 1 + nd_layer ) ) / 8
26970.       t$3314 = t$3312 + 8 * _zla( 0, nd_profile ) * max( 0, 1 + nd_layer )
26961.       t$3315 = 8 * ( 7 + t$3312 + 8 * _zla( 0, nd_profile ) * max( 0, 1 + nd_layer ) ) / 8
26961.       t$3317 = t$3315 + 8 * _zla( 0, nd_profile )
26963.       t$3318 = 8 * ( 7 + t$3315 + 8 * _zla( 0, nd_profile ) ) / 8
26963.       t$3320 = t$3318 + 8 * _zla( 0, nd_profile )
26470.       t$851 = ( 2 + 2 * nd_layer )
26976.       t$3321 = max( 0, ( 2 + 2 * nd_layer ) )
26470.       t$3322 = _zla( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
26976.       t$3323 = 8 * ( 7 + t$3318 + 8 * _zla( 0, nd_profile ) ) / 8
26976.       t$3325 = t$3323 + 8 * _zla( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
26972.       t$3326 = 8 * ( 7 + t$3323 + 8 * _zla( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) ) ) / 8
26972.       t$3328 = t$3326 + 8 * _zla( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
26979.       t$3329 = 8 * ( 7 + t$3326 + 8 * _zla( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) ) ) / 8
26979.       t$3331 = t$3329 + 8 * _zla( 0, nd_radiance_profile ) * max( 0, 1 + nd_layer )
26950.       t$3333 = t$3329 + 4 * _zla( 0, nd_species ) + 8 * _zla( 0, nd_radiance_profile ) * max( 0, 1 + nd_layer )
26955.       t$3334 = 8 * ( 7 + t$3329 + 4 * _zla( 0, nd_species ) + 8 * _zla( 0, nd_radiance_profile ) * max( 0, 1 + nd_layer ) ) / 8
26955.       t$3336 = t$3334 + 8 * _zla( 0, nd_species )
26957.       t$3337 = 8 * ( 7 + t$3334 + 8 * _zla( 0, nd_species ) ) / 8
26957.       t$3339 = t$3337 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
26985.       t$3340 = 8 * ( 7 + t$3337 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
26985.       t$3342 = t$3340 + 8 * max( 0, nd_viewing_level ) * max( 0, nd_j_profile )
26981.       t$3343 = 8 * ( 7 + t$3340 + 8 * max( 0, nd_viewing_level ) * max( 0, nd_j_profile ) ) / 8
26981.       t$3345 = t$3343 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * max( 0, nd_viewing_level )
26470.       t$3303 = int( _alloc( t$3343 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * max( 0, nd_viewing_level ) ), 8 )
26965.       t$3304 = t$3303
26959.       t$3307 = t$3306 + t$3303
26974.       t$3310 = t$3309 + t$3303
26970.       t$3313 = t$3312 + t$3303
26961.       t$3316 = t$3315 + t$3303
26963.       t$3319 = t$3318 + t$3303
26976.       t$3324 = t$3323 + t$3303
26972.       t$3327 = t$3326 + t$3303
26979.       t$3330 = t$3329 + t$3303
26950.       t$3332 = t$3329 + t$3303 + 8 * _zla( 0, nd_radiance_profile ) * max( 0, 1 + nd_layer )
26955.       t$3335 = t$3334 + t$3303
26957.       t$3338 = t$3337 + t$3303
26985.       t$3341 = t$3340 + t$3303
26981.       t$3344 = t$3343 + t$3303
27002.       $t_S0 = i_band_esft(i_band, i_gas)
27002.       if ( $t_S0 > 0 ) then
27005.          $SC_i_scale_esft_I0 = i_scale_esft(i_band, i_gas)
27002.          $I_L27002_268 = 0
27002.          do
27005.             if ( $SC_i_scale_esft_I0 == 2 ) then
27006.                tm$2695 = loc( gas_mix_ratio(1, 1, i_gas) )
27006.                gas_mix_ratio = _copyin( gas_mix_ratio(1, 1, i_gas) )
27006.                tm$2697 = loc( gas_frac_rescaled(1, 1, i_gas) )
27006.                gas_frac_rescaled = _copyin( gas_frac_rescaled(1, 1, i_gas) )
27006.                tm$2699 = loc( scale_vector(1, 1 + $I_L27002_268, i_band, i_gas) )
27006.                scale_parameter = _copyin( scale_vector(1, 1 + $I_L27002_268, i_band, i_gas) )
27006.                t$734 = nd_profile
27006.                t$735 = nd_layer
27006.                t$2851 = max( 0, nd_profile )
27006.                t$2852 = max( 0, nd_profile )
27006.                t$2853 = max( 0, nd_layer )
27006.                t$2854 = max( 0, nd_profile ) * max( 0, nd_layer )
27006.                t$736 = nd_scale_variable
27006.                t$2855 = max( 0, nd_scale_variable )
27006.                if ( l_doppler(i_gas) /= .false. ) then
27006.                   $pressure_offset_S4 = doppler_correction(i_gas)
27006.                else
27006.                   $pressure_offset_S4 = 0.0
27006.                endif
27006.                if ( i_scale_fnc(i_band, i_gas) == 1 ) then
27006.                   if ( nd_layer > 0 ) then
27006.                      $SC_scale_parameter_I2 = scale_parameter(2)
27006.                      $SC_scale_parameter_I1 = scale_parameter(1)
27006.                      if ( nd_profile > 0 ) then
27006.                         $SC_t_reference_I5 = t_reference(i_gas, i_band)
27006.                         $SC_p_reference_I6 = p_reference(i_gas, i_band)
27006.                         $I_L27006_250 = 0
27006.                         do
27006.                            $I_L27006_220 = 0
27006. !dir$ ivdep
27006.                            do
27006.                               gas_frac_rescaled(1 + $I_L27006_220, 1 + $I_L27006_250) = _expn( $SC_scale_parameter_I2 * log( ( t(1 + $I_L27006_220, 1 + $I_L27006_250) * 1.0/$SC_t_reference_I5 ) ) + $SC_scale_parameter_I1 * log( ( 1.0/( $pressure_offset_S4 + $SC_p_reference_I6 ) * ( $pressure_offset_S4 + p(1 + $I_L27006_220, 1 + $I_L27006_250) ) ) ) )
27006.                               $I_L27006_220 = 1 + $I_L27006_220
27006.                               if ( $I_L27006_220 >= nd_profile ) exit
27006.                            enddo
27006.                            $I_L27006_250 = 1 + $I_L27006_250
27006.                            if ( $I_L27006_250 >= nd_layer ) exit
27006.                         enddo
27006.                      endif
27006.                   endif
27006.                   goto 10
27006.                else if ( i_scale_fnc(i_band, i_gas) /= 0 ) then
27006.                   if ( i_scale_fnc(i_band, i_gas) == 2 ) then
27006.                      if ( nd_layer > 0 ) then
27006.                         $SC_scale_parameter_I3 = scale_parameter(3)
27006.                         $SC_scale_parameter_I2 = scale_parameter(2)
27006.                         $SC_scale_parameter_I1 = scale_parameter(1)
27006.                         if ( nd_profile > 0 ) then
27006.                            $SC_t_reference_I5 = t_reference(i_gas, i_band)
27006.                            $SC_p_reference_I6 = p_reference(i_gas, i_band)
27006.                            $I_L27006_248 = 0
27006.                            do
27006.                               $I_L27006_218 = 0
27006. !dir$ ivdep
27006.                               do
27006.                                  gas_frac_rescaled(1 + $I_L27006_218, 1 + $I_L27006_248) = ( 1.0 + $SC_scale_parameter_I2 * ( -1.0 + ( t(1 + $I_L27006_218, 1 + $I_L27006_248) * 1.0/$SC_t_reference_I5 ) ) + $SC_scale_parameter_I3 * ( -1.0 + ( t(1 + $I_L27006_218, 1 + $I_L27006_248) * 1.0/$SC_t_reference_I5 ) ) * ( -1.0 + ( t(1 + $I_L27006_218, 1 + $I_L27006_248) * 1.0/$SC_t_reference_I5 ) ) ) * _expn( $SC_scale_parameter_I1 * log( ( 1.0/( $pressure_offset_S4 + $SC_p_reference_I6 ) * ( $pressure_offset_S4 + p(1 + $I_L27006_218, 1 + $I_L27006_248) ) ) ) )
27006.                                  $I_L27006_218 = 1 + $I_L27006_218
27006.                                  if ( $I_L27006_218 >= nd_profile ) exit
27006.                               enddo
27006.                               $I_L27006_248 = 1 + $I_L27006_248
27006.                               if ( $I_L27006_248 >= nd_layer ) exit
27006.                            enddo
27006.                         endif
27006.                      endif
27006.                      goto 10
27006.                   else if ( i_scale_fnc(i_band, i_gas) == 3 ) then
27006.                      if ( nd_layer > 0 ) then
27006.                         $SC_scale_parameter_I4 = scale_parameter(4)
27006.                         $SC_scale_parameter_I3 = scale_parameter(3)
27006.                         $SC_scale_parameter_I2 = scale_parameter(2)
27006.                         $SC_scale_parameter_I1 = scale_parameter(1)
27006.                         if ( nd_profile > 0 ) then
27006.                            $SC_t_reference_I5 = t_reference(i_gas, i_band)
27006.                            $SC_p_reference_I6 = p_reference(i_gas, i_band)
27006.                            $I_L27006_246 = 0
27006.                            do
27006.                               $I_L27006_216 = 0
27006. !dir$ ivdep
27006.                               do
27006.                                  gas_frac_rescaled(1 + $I_L27006_216, 1 + $I_L27006_246) = _expn( $SC_scale_parameter_I1 * log( ( 1.0/( $SC_scale_parameter_I2 + $SC_p_reference_I6 ) * ( $SC_scale_parameter_I2 + p(1 + $I_L27006_216, 1 + $I_L27006_246) ) ) ) ) * ( 1.0 + $SC_scale_parameter_I3 * ( -1.0 + ( t(1 + $I_L27006_216, 1 + $I_L27006_246) * 1.0/$SC_t_reference_I5 ) ) + $SC_scale_parameter_I4 * ( -1.0 + ( t(1 + $I_L27006_216, 1 + $I_L27006_246) * 1.0/$SC_t_reference_I5 ) ) * ( -1.0 + ( t(1 + $I_L27006_216, 1 + $I_L27006_246) * 1.0/$SC_t_reference_I5 ) ) )
27006.                                  $I_L27006_216 = 1 + $I_L27006_216
27006.                                  if ( $I_L27006_216 >= nd_profile ) exit
27006.                               enddo
27006.                               $I_L27006_246 = 1 + $I_L27006_246
27006.                               if ( $I_L27006_246 >= nd_layer ) exit
27006.                            enddo
27006.                         endif
27006.                      endif
27006.    10                continue
27006.                      if ( nd_layer > 0 ) then
27006.                         if ( nd_profile > 0 ) then
27006.                            $I_L27006_252 = 0
27006.                            do
27006.                               $I_L27006_222 = 0
27006. !dir$ ivdep
27006.                               do
27006.                                  gas_frac_rescaled(1 + $I_L27006_222, 1 + $I_L27006_252) = max( 0.0, gas_frac_rescaled(1 + $I_L27006_222, 1 + $I_L27006_252) * gas_mix_ratio(1 + $I_L27006_222, 1 + $I_L27006_252) )
27006.                                  $I_L27006_222 = 1 + $I_L27006_222
27006.                                  if ( $I_L27006_222 >= nd_profile ) exit
27006.                               enddo
27006.                               $I_L27006_252 = 1 + $I_L27006_252
27006.                               if ( $I_L27006_252 >= nd_layer ) exit
27006.                            enddo
27006.                         endif
27006.                      endif
27006.                   else
27006.                      _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$738,  _substr(t$737,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: An illegal type of scaling has been given.', 0x800600000000L ) ) )
27006.                      ierr = 1
27006.                   endif
27006.                endif
27006.                scale_vector(1, 1 + $I_L27002_268, i_band, i_gas) = _copyout( scale_parameter )
27006.                gas_frac_rescaled(1, 1, i_gas) = _copyout( gas_frac_rescaled )
27006.                gas_mix_ratio(1, 1, i_gas) = _copyout( gas_mix_ratio )
27018.                if ( ierr /= 0 ) then
26470.                   _free( t$3303 )
26470.                   goto 50
26470.                endif
27024.                if ( i_angular_integration == 1 .orelse. i_angular_integration == 2 ) then
27027.                   if ( isolir == 1 ) then
27029.                      if ( n_profile > 0 ) then
27029.                         $I_L27029_224 = 0
27029. !dir$ ivdep
27029.                         do
27030.                            d_planck_flux_surface(1 + $I_L27029_224) = 0.0
27031.                            flux_inc_down(1 + $I_L27029_224) = ( solar_irrad(1 + $I_L27029_224) * 1.0/zen_0(1 + $I_L27029_224) )
27032.                            flux_inc_direct(1 + $I_L27029_224) = ( solar_irrad(1 + $I_L27029_224) * 1.0/zen_0(1 + $I_L27029_224) )
27033.                            $I_L27029_224 = 1 + $I_L27029_224
27029.                            if ( $I_L27029_224 >= n_profile ) exit
27029.                         enddo
27029.                      endif
27034.                   else if ( isolir == 2 ) then
27036.                      if ( n_profile > 0 ) then
27036.                         $I_L27036_226 = 0
27036. !dir$ ivdep
27036.                         do
27037.                            flux_inc_direct(1 + $I_L27036_226) = 0.0
27038.                            flux_inc_down(1 + $I_L27036_226) = -planck_flux_top(1 + $I_L27036_226)
27039.                            d_planck_flux_surface(1 + $I_L27036_226) = ( 1.0 + -rho_alb(1 + $I_L27036_226, 1) ) * ( planck_flux_ground(1 + $I_L27036_226) + -planck_flux_bottom(1 + $I_L27036_226) )
27042.                            $I_L27036_226 = 1 + $I_L27036_226
27036.                            if ( $I_L27036_226 >= n_profile ) exit
27036.                         enddo
27036.                      endif
27036.                   endif
27036.                else
27045.                   if ( i_angular_integration == 3 ) then
27047.                      if ( isolir == 1 ) then
27048.                         if ( n_profile > 0 ) then
27048.                            $I_L27048_228 = 0
27048. !dir$ ivdep
27048.                            do
27049.                               i_direct_part(1 + $I_L27048_228, 0) = solar_irrad(1 + $I_L27048_228)
27050.                               flux_inc_down(1 + $I_L27048_228) = 0.0
27051.                               $I_L27048_228 = 1 + $I_L27048_228
27048.                               if ( $I_L27048_228 >= n_profile ) exit
27048.                            enddo
27048.                         endif
27052.                      else if ( n_profile > 0 ) then
27053.                         $I_L27053_230 = 0
27053. !dir$ ivdep
27053.                         do
27054.                            flux_inc_down(1 + $I_L27053_230) = -planck_flux_top(1 + $I_L27053_230)
27055.                            d_planck_flux_surface(1 + $I_L27053_230) = planck_flux_ground(1 + $I_L27053_230) + -planck_flux_bottom(1 + $I_L27053_230)
27057.                            $I_L27053_230 = 1 + $I_L27053_230
27053.                            if ( $I_L27053_230 >= n_profile ) exit
27053.                         enddo
27053.                      endif
27053.                   endif
27053.                endif
27063.                k_esft_mono(i_gas) = k_esft(1 + $I_L27002_268, i_band, i_gas)
27065.                t$292 = nd_species
27065.                t$1978 = max( 0, nd_species )
27065.                t$293 = nd_profile
27065.                t$294 = nd_layer
27065.                t$1979 = max( 0, nd_profile )
27065.                t$1980 = max( 0, nd_profile )
27065.                t$1981 = max( 0, nd_layer )
27065.                t$1982 = max( 0, nd_profile ) * max( 0, nd_layer )
27065.                t$1983 = max( 0, nd_profile ) * max( 0, nd_layer ) * max( 0, nd_species )
27065.                t$1984 = max( 0, nd_profile ) * max( 0, nd_layer )
27065.                if ( nd_layer > 0 ) then
27065.                   if ( nd_profile > 0 ) then
27065.                      $SC_k_esft_mono_I7 = k_esft_mono(i_gas)
27065.                      $I_L27065_254 = 0
27065.                      do
27065.                         $I_L27065_232 = 0
27065. !dir$ ivdep
27065.                         do
27065.                            k_gas_abs(1 + $I_L27065_232, 1 + $I_L27065_254) = $SC_k_esft_mono_I7 * gas_frac_rescaled(1 + $I_L27065_232, 1 + $I_L27065_254, i_gas)
27065.                            $I_L27065_232 = 1 + $I_L27065_232
27065.                            if ( $I_L27065_232 >= nd_profile ) exit
27065.                         enddo
27065.                         $I_L27065_254 = 1 + $I_L27065_254
27065.                         if ( $I_L27065_254 >= nd_layer ) exit
27065.                      enddo
27065.                   endif
27065.                endif
27073.                call monochromatic_radiance( ierr, n_profile, n_layer, d_mass(1, 1), i_angular_integration, i_2stream, l_rescale, n_order_gauss, n_order_phase, ms_min, ms_max, i_truncation, ls_local_trunc(0), accuracy_adaptive, euler_factor, i_sph_algorithm, i_sph_mode, ia_sph_mm(0), cg_coeff(1), uplm_zero(1), uplm_sol(1, 1), i_scatter_method, i_solver, k_gas_abs(1, 1), .false., dummy_ke(1, 1), isolir, diff_planck_band(1, 1), l_ir_source_quad, diff_planck_band_2(1, 1), zen_0(1), zen_00(1, 1), flux_inc_direct(1), flux_inc_down(1), i_direct_part(1, 0), d_planck_flux_surface(1), ls_brdf_trunc, n_brdf_basis_fnc, rho_alb(1, 1), f_brdf(1, 0, 0, 0), brdf_sol(1, 1, 1), brdf_hemi(1, 1, 1), ss_prop, l_cloud, i_cloud, n_cloud_top, n_cloud_type, frac_cloud(1, id_ct, 1), n_region, k_clr, i_region_cloud(1), frac_region(1, id_ct, 1), w_free(1, id_ct), w_cloud(1, id_ct), cloud_overlap(1, -1 + id_ct, 1), n_column_slv(1), list_column_slv(1, 1), i_clm_lyr_chn(1, 1), i_clm_cld_typ(1, 1), area_column(1, 1), n_viewing_level, i_rad_layer(1), frac_rad_layer(1), n_direction, direction(1, 1, 1), flux_direct_part(1, 0), flux_total_part(1, 1), radiance_part(1, 1, 1), photolysis_part(1, 1), l_clear, i_solver_clear, flux_direct_clear_part(1, 0), flux_total_clear_part(1, 1), nd_profile, nd_layer, nd_layer_clr, id_ct, nd_column, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_cloud_type, nd_region, nd_overlap_coeff, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc, nd_viewing_level, nd_direction, nd_source_coeff )
27136.                if ( ierr /= 0 ) then
26470.                   _free( t$3303 )
26470.                   goto 50
26470.                endif
27143.                weight_incr = weight_band * w_esft(1 + $I_L27002_268, i_band, i_gas)
27144.                if ( l_blue_flux_surf /= .false. ) then
27145.                   weight_blue_incr = weight_blue * w_esft(1 + $I_L27002_268, i_band, i_gas)
27145.                endif
27146.                call augment_radiance( n_profile, n_layer, i_angular_integration, i_sph_mode, n_viewing_level, n_direction, isolir, l_clear, l_initial, weight_incr, l_blue_flux_surf, weight_blue_incr, flux_direct(1, 0), flux_down(1, 0), flux_up(1, 0), flux_direct_blue_surf(1), flux_down_blue_surf(1), flux_up_blue_surf(1), i_direct(1, 0), radiance(1, 1, 1), photolysis(1, 1), flux_direct_clear(1, 0), flux_down_clear(1, 0), flux_up_clear(1, 0), flux_direct_part(1, 0), flux_total_part(1, 1), i_direct_part(1, 0), radiance_part(1, 1, 1), photolysis_part(1, 1), flux_direct_clear_part(1, 0), flux_total_clear_part(1, 1), nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_layer, nd_viewing_level, nd_direction )
27167.                if ( l_tile /= .false. ) then
27168.                   tm$2837 = loc( flux_direct_part(1, n_layer) )
27168.                   flux_direct_incr = _copyin( flux_direct_part(1, n_layer) )
27168.                   tm$2839 = loc( flux_total_part(1, 2 + 2 * n_layer) )
27168.                   flux_down_incr = _copyin( flux_total_part(1, 2 + 2 * n_layer) )
27168.                   t$132 = nd_point_tile
27168.                   t$1331 = max( 0, nd_point_tile )
27168.                   t$133 = nd_brdf_basis_fnc
27168.                   t$134 = nd_tile
27168.                   t$1332 = max( 0, nd_point_tile )
27168.                   t$1333 = max( 0, nd_brdf_basis_fnc )
27168.                   t$1334 = max( 0, nd_brdf_basis_fnc ) * max( 0, nd_point_tile )
27168.                   t$1335 = max( 0, nd_tile )
27168.                   t$1336 = max( 0, nd_brdf_basis_fnc ) * max( 0, nd_point_tile ) * max( 0, nd_tile )
27168.                   t$1337 = max( 0, nd_point_tile ) * max( 0, nd_tile )
27168.                   t$135 = nd_flux_profile
27168.                   t$1338 = max( 0, nd_flux_profile )
27168.                   if ( l_initial == .false. ) then
27168.                      if ( i_angular_integration == 1 .orelse. i_angular_integration == 2 ) then
27168.                         if ( isolir == 1 ) then
27168.                            if ( n_tile > 0 ) then
27168.                               if ( n_point_tile > 0 ) then
27168.                                  $I_L27168_264 = 0
27168.                                  if ( n_tile >= 4 ) then
27168.                                     $I_L27168_288 = 0
27168. !dir$ blocking_size( 1, 1 )
27168.                                     do
27168.                                        $I_L27168_242 = 0
27168. !dir$ ivdep
27168. !dir$ blocking_size( 256, 256 )
27168.                                        do
27168.                                           $l_S19 = list_tile(1 + $I_L27168_242)
27168.                                           flux_up_tile(1 + $I_L27168_242, 1 + 4 * $I_L27168_288) = flux_up_tile(1 + $I_L27168_242, 1 + 4 * $I_L27168_288) + weight_incr * ( flux_direct_incr($l_S19) * ( rho_alb_tile(1 + $I_L27168_242, 2, 1 + 4 * $I_L27168_288) + -rho_alb_tile(1 + $I_L27168_242, 1, 1 + 4 * $I_L27168_288) ) + flux_down_incr($l_S19) * rho_alb_tile(1 + $I_L27168_242, 1, 1 + 4 * $I_L27168_288) )
27168.                                           $l_S19 = list_tile(1 + $I_L27168_242)
27168.                                           flux_up_tile(1 + $I_L27168_242, 2 + 4 * $I_L27168_288) = flux_up_tile(1 + $I_L27168_242, 2 + 4 * $I_L27168_288) + weight_incr * ( flux_down_incr($l_S19) * rho_alb_tile(1 + $I_L27168_242, 1, 2 + 4 * $I_L27168_288) + flux_direct_incr($l_S19) * ( rho_alb_tile(1 + $I_L27168_242, 2, 2 + 4 * $I_L27168_288) + -rho_alb_tile(1 + $I_L27168_242, 1, 2 + 4 * $I_L27168_288) ) )
27168.                                           $l_S19 = list_tile(1 + $I_L27168_242)
27168.                                           flux_up_tile(1 + $I_L27168_242, 3 + 4 * $I_L27168_288) = flux_up_tile(1 + $I_L27168_242, 3 + 4 * $I_L27168_288) + weight_incr * ( flux_down_incr($l_S19) * rho_alb_tile(1 + $I_L27168_242, 1, 3 + 4 * $I_L27168_288) + flux_direct_incr($l_S19) * ( rho_alb_tile(1 + $I_L27168_242, 2, 3 + 4 * $I_L27168_288) + -rho_alb_tile(1 + $I_L27168_242, 1, 3 + 4 * $I_L27168_288) ) )
27168.                                           $l_S19 = list_tile(1 + $I_L27168_242)
27168.                                           flux_up_tile(1 + $I_L27168_242, 4 + 4 * $I_L27168_288) = flux_up_tile(1 + $I_L27168_242, 4 + 4 * $I_L27168_288) + weight_incr * ( flux_down_incr($l_S19) * rho_alb_tile(1 + $I_L27168_242, 1, 4 + 4 * $I_L27168_288) + flux_direct_incr($l_S19) * ( rho_alb_tile(1 + $I_L27168_242, 2, 4 + 4 * $I_L27168_288) + -rho_alb_tile(1 + $I_L27168_242, 1, 4 + 4 * $I_L27168_288) ) )
27168.                                           $I_L27168_242 = 1 + $I_L27168_242
27168.                                           if ( $I_L27168_242 >= n_point_tile ) exit
27168.                                        enddo
27168.                                        $I_L27168_288 = 1 + $I_L27168_288
27168.                                        if ( $I_L27168_288 >= _rsh( n_tile, 2 ) ) exit
27168.                                     enddo
27168.                                     $I_L27168_264 = and( 0xfffffffffffffffcUL, n_tile )
27168.                                  endif
27168.                                  if ( $I_L27168_264 < n_tile ) then
27168.                                     $I_L27168_282 = 0
27168. !dir$ blocking_size( 1, 1 )
27168.                                     do
27168.                                        $I_L27168_242 = 0
27168. !dir$ ivdep
27168. !dir$ blocking_size( 256, 256 )
27168.                                        do
27168.                                           $l_S19 = list_tile(1 + $I_L27168_242)
27168.                                           flux_up_tile(1 + $I_L27168_242, 1 + $I_L27168_264 + $I_L27168_282) = flux_up_tile(1 + $I_L27168_242, 1 + $I_L27168_264 + $I_L27168_282) + weight_incr * ( flux_down_incr($l_S19) * rho_alb_tile(1 + $I_L27168_242, 1, 1 + $I_L27168_264 + $I_L27168_282) + flux_direct_incr($l_S19) * ( rho_alb_tile(1 + $I_L27168_242, 2, 1 + $I_L27168_264 + $I_L27168_282) + -rho_alb_tile(1 + $I_L27168_242, 1, 1 + $I_L27168_264 + $I_L27168_282) ) )
27168.                                           $I_L27168_242 = 1 + $I_L27168_242
27168.                                           if ( $I_L27168_242 >= n_point_tile ) exit
27168.                                        enddo
27168.                                        $I_L27168_282 = 1 + $I_L27168_282
27168.                                        if ( $I_L27168_282 >= n_tile + -$I_L27168_264 ) exit
27168.                                     enddo
27168.                                  endif
27168.                               endif
27168.                            endif
27168.                            if ( l_blue_flux_surf /= .false. ) then
27168.                               if ( n_tile > 0 ) then
27168.                                  if ( n_point_tile > 0 ) then
27168.                                     $I_L27168_266 = 0
27168.                                     if ( n_tile >= 4 ) then
27168.                                        $I_L27168_290 = 0
27168. !dir$ blocking_size( 1, 1 )
27168.                                        do
27168.                                           $I_L27168_244 = 0
27168. !dir$ ivdep
27168. !dir$ blocking_size( 256, 256 )
27168.                                           do
27168.                                              $l_S22 = list_tile(1 + $I_L27168_244)
27168.                                              flux_up_blue_tile(1 + $I_L27168_244, 1 + 4 * $I_L27168_290) = flux_up_blue_tile(1 + $I_L27168_244, 1 + 4 * $I_L27168_290) + weight_blue_incr * ( flux_direct_incr($l_S22) * ( rho_alb_tile(1 + $I_L27168_244, 2, 1 + 4 * $I_L27168_290) + -rho_alb_tile(1 + $I_L27168_244, 1, 1 + 4 * $I_L27168_290) ) + flux_down_incr($l_S22) * rho_alb_tile(1 + $I_L27168_244, 1, 1 + 4 * $I_L27168_290) )
27168.                                              $l_S22 = list_tile(1 + $I_L27168_244)
27168.                                              flux_up_blue_tile(1 + $I_L27168_244, 2 + 4 * $I_L27168_290) = flux_up_blue_tile(1 + $I_L27168_244, 2 + 4 * $I_L27168_290) + weight_blue_incr * ( flux_down_incr($l_S22) * rho_alb_tile(1 + $I_L27168_244, 1, 2 + 4 * $I_L27168_290) + flux_direct_incr($l_S22) * ( rho_alb_tile(1 + $I_L27168_244, 2, 2 + 4 * $I_L27168_290) + -rho_alb_tile(1 + $I_L27168_244, 1, 2 + 4 * $I_L27168_290) ) )
27168.                                              $l_S22 = list_tile(1 + $I_L27168_244)
27168.                                              flux_up_blue_tile(1 + $I_L27168_244, 3 + 4 * $I_L27168_290) = flux_up_blue_tile(1 + $I_L27168_244, 3 + 4 * $I_L27168_290) + weight_blue_incr * ( flux_down_incr($l_S22) * rho_alb_tile(1 + $I_L27168_244, 1, 3 + 4 * $I_L27168_290) + flux_direct_incr($l_S22) * ( rho_alb_tile(1 + $I_L27168_244, 2, 3 + 4 * $I_L27168_290) + -rho_alb_tile(1 + $I_L27168_244, 1, 3 + 4 * $I_L27168_290) ) )
27168.                                              $l_S22 = list_tile(1 + $I_L27168_244)
27168.                                              flux_up_blue_tile(1 + $I_L27168_244, 4 + 4 * $I_L27168_290) = flux_up_blue_tile(1 + $I_L27168_244, 4 + 4 * $I_L27168_290) + weight_blue_incr * ( flux_down_incr($l_S22) * rho_alb_tile(1 + $I_L27168_244, 1, 4 + 4 * $I_L27168_290) + flux_direct_incr($l_S22) * ( rho_alb_tile(1 + $I_L27168_244, 2, 4 + 4 * $I_L27168_290) + -rho_alb_tile(1 + $I_L27168_244, 1, 4 + 4 * $I_L27168_290) ) )
27168.                                              $I_L27168_244 = 1 + $I_L27168_244
27168.                                              if ( $I_L27168_244 >= n_point_tile ) exit
27168.                                           enddo
27168.                                           $I_L27168_290 = 1 + $I_L27168_290
27168.                                           if ( $I_L27168_290 >= _rsh( n_tile, 2 ) ) exit
27168.                                        enddo
27168.                                        $I_L27168_266 = and( 0xfffffffffffffffcUL, n_tile )
27168.                                     endif
27168.                                     if ( $I_L27168_266 < n_tile ) then
27168.                                        $I_L27168_285 = 0
27168. !dir$ blocking_size( 1, 1 )
27168.                                        do
27168.                                           $I_L27168_244 = 0
27168. !dir$ ivdep
27168. !dir$ blocking_size( 256, 256 )
27168.                                           do
27168.                                              $l_S22 = list_tile(1 + $I_L27168_244)
27168.                                              flux_up_blue_tile(1 + $I_L27168_244, 1 + $I_L27168_266 + $I_L27168_285) = flux_up_blue_tile(1 + $I_L27168_244, 1 + $I_L27168_266 + $I_L27168_285) + weight_blue_incr * ( flux_down_incr($l_S22) * rho_alb_tile(1 + $I_L27168_244, 1, 1 + $I_L27168_266 + $I_L27168_285) + flux_direct_incr($l_S22) * ( rho_alb_tile(1 + $I_L27168_244, 2, 1 + $I_L27168_266 + $I_L27168_285) + -rho_alb_tile(1 + $I_L27168_244, 1, 1 + $I_L27168_266 + $I_L27168_285) ) )
27168.                                              $I_L27168_244 = 1 + $I_L27168_244
27168.                                              if ( $I_L27168_244 >= n_point_tile ) exit
27168.                                           enddo
27168.                                           $I_L27168_285 = 1 + $I_L27168_285
27168.                                           if ( $I_L27168_285 >= n_tile + -$I_L27168_266 ) exit
27168.                                        enddo
27168.                                     endif
27168.                                  endif
27168.                               endif
27168.                            endif
27168.                         else if ( isolir == 2 ) then
27168.                            if ( n_tile > 0 ) then
27168.                               if ( n_point_tile > 0 ) then
27168.                                  $I_L27168_262 = 0
27168.                                  if ( n_tile >= 4 ) then
27168.                                     $I_L27168_292 = 0
27168. !dir$ blocking_size( 1, 1 )
27168.                                     do
27168.                                        $I_L27168_240 = 0
27168. !dir$ ivdep
27168. !dir$ blocking_size( 256, 256 )
27168.                                        do
27168.                                           $l_S25 = list_tile(1 + $I_L27168_240)
27168.                                           flux_up_tile(1 + $I_L27168_240, 1 + 4 * $I_L27168_292) = flux_up_tile(1 + $I_L27168_240, 1 + 4 * $I_L27168_292) + weight_incr * ( planck_flux_tile(1 + $I_L27168_240, 1 + 4 * $I_L27168_292) + rho_alb_tile(1 + $I_L27168_240, 1, 1 + 4 * $I_L27168_292) * ( planck_flux_bottom($l_S25) + flux_down_incr($l_S25) + -planck_flux_tile(1 + $I_L27168_240, 1 + 4 * $I_L27168_292) ) )
27168.                                           $l_S25 = list_tile(1 + $I_L27168_240)
27168.                                           flux_up_tile(1 + $I_L27168_240, 2 + 4 * $I_L27168_292) = flux_up_tile(1 + $I_L27168_240, 2 + 4 * $I_L27168_292) + weight_incr * ( planck_flux_tile(1 + $I_L27168_240, 2 + 4 * $I_L27168_292) + rho_alb_tile(1 + $I_L27168_240, 1, 2 + 4 * $I_L27168_292) * ( planck_flux_bottom($l_S25) + flux_down_incr($l_S25) + -planck_flux_tile(1 + $I_L27168_240, 2 + 4 * $I_L27168_292) ) )
27168.                                           $l_S25 = list_tile(1 + $I_L27168_240)
27168.                                           flux_up_tile(1 + $I_L27168_240, 3 + 4 * $I_L27168_292) = flux_up_tile(1 + $I_L27168_240, 3 + 4 * $I_L27168_292) + weight_incr * ( planck_flux_tile(1 + $I_L27168_240, 3 + 4 * $I_L27168_292) + rho_alb_tile(1 + $I_L27168_240, 1, 3 + 4 * $I_L27168_292) * ( planck_flux_bottom($l_S25) + flux_down_incr($l_S25) + -planck_flux_tile(1 + $I_L27168_240, 3 + 4 * $I_L27168_292) ) )
27168.                                           $l_S25 = list_tile(1 + $I_L27168_240)
27168.                                           flux_up_tile(1 + $I_L27168_240, 4 + 4 * $I_L27168_292) = flux_up_tile(1 + $I_L27168_240, 4 + 4 * $I_L27168_292) + weight_incr * ( planck_flux_tile(1 + $I_L27168_240, 4 + 4 * $I_L27168_292) + rho_alb_tile(1 + $I_L27168_240, 1, 4 + 4 * $I_L27168_292) * ( planck_flux_bottom($l_S25) + flux_down_incr($l_S25) + -planck_flux_tile(1 + $I_L27168_240, 4 + 4 * $I_L27168_292) ) )
27168.                                           $I_L27168_240 = 1 + $I_L27168_240
27168.                                           if ( $I_L27168_240 >= n_point_tile ) exit
27168.                                        enddo
27168.                                        $I_L27168_292 = 1 + $I_L27168_292
27168.                                        if ( $I_L27168_292 >= _rsh( n_tile, 2 ) ) exit
27168.                                     enddo
27168.                                     $I_L27168_262 = and( 0xfffffffffffffffcUL, n_tile )
27168.                                  endif
27168.                                  if ( $I_L27168_262 < n_tile ) then
27168.                                     $I_L27168_279 = 0
27168. !dir$ blocking_size( 1, 1 )
27168.                                     do
27168.                                        $I_L27168_240 = 0
27168. !dir$ ivdep
27168. !dir$ blocking_size( 256, 256 )
27168.                                        do
27168.                                           $l_S25 = list_tile(1 + $I_L27168_240)
27168.                                           flux_up_tile(1 + $I_L27168_240, 1 + $I_L27168_262 + $I_L27168_279) = flux_up_tile(1 + $I_L27168_240, 1 + $I_L27168_262 + $I_L27168_279) + weight_incr * ( planck_flux_tile(1 + $I_L27168_240, 1 + $I_L27168_262 + $I_L27168_279) + rho_alb_tile(1 + $I_L27168_240, 1, 1 + $I_L27168_262 + $I_L27168_279) * ( planck_flux_bottom($l_S25) + flux_down_incr($l_S25) + -planck_flux_tile(1 + $I_L27168_240, 1 + $I_L27168_262 + $I_L27168_279) ) )
27168.                                           $I_L27168_240 = 1 + $I_L27168_240
27168.                                           if ( $I_L27168_240 >= n_point_tile ) exit
27168.                                        enddo
27168.                                        $I_L27168_279 = 1 + $I_L27168_279
27168.                                        if ( $I_L27168_279 >= n_tile + -$I_L27168_262 ) exit
27168.                                     enddo
27168.                                  endif
27168.                               endif
27168.                            endif
27168.                         endif
27168.                      else
27168.                         if ( i_angular_integration == 3 ) then
27168.                            _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$137,  _substr(t$136,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Tiled surfaces have not yet been ', 0x800600000000L ), _iotype( 'implemented with the spherical harmonic solver.', 0x800600000000L ) ) )
27168.                            ierr = 1
27168.                         endif
27168.                      endif
27168.                   else if ( i_angular_integration == 1 ) then
27168.                      goto 20
27168.                      goto 30
27168.                   else if ( i_angular_integration == 2 ) then
27168.    20                continue
27168.                      if ( isolir == 1 ) then
27168.                         if ( n_tile > 0 ) then
27168.                            if ( n_point_tile > 0 ) then
27168.                               $I_L27168_258 = 0
27168.                               if ( n_tile >= 4 ) then
27168.                                  $I_L27168_294 = 0
27168. !dir$ blocking_size( 1, 1 )
27168.                                  do
27168.                                     $I_L27168_236 = 0
27168. !dir$ ivdep
27168. !dir$ blocking_size( 256, 256 )
27168.                                     do
27168.                                        $l_S28 = list_tile(1 + $I_L27168_236)
27168.                                        flux_up_tile(1 + $I_L27168_236, 1 + 4 * $I_L27168_294) = weight_incr * ( flux_direct_incr($l_S28) * ( rho_alb_tile(1 + $I_L27168_236, 2, 1 + 4 * $I_L27168_294) + -rho_alb_tile(1 + $I_L27168_236, 1, 1 + 4 * $I_L27168_294) ) + flux_down_incr($l_S28) * rho_alb_tile(1 + $I_L27168_236, 1, 1 + 4 * $I_L27168_294) )
27168.                                        $l_S28 = list_tile(1 + $I_L27168_236)
27168.                                        flux_up_tile(1 + $I_L27168_236, 2 + 4 * $I_L27168_294) = weight_incr * ( flux_down_incr($l_S28) * rho_alb_tile(1 + $I_L27168_236, 1, 2 + 4 * $I_L27168_294) + flux_direct_incr($l_S28) * ( rho_alb_tile(1 + $I_L27168_236, 2, 2 + 4 * $I_L27168_294) + -rho_alb_tile(1 + $I_L27168_236, 1, 2 + 4 * $I_L27168_294) ) )
27168.                                        $l_S28 = list_tile(1 + $I_L27168_236)
27168.                                        flux_up_tile(1 + $I_L27168_236, 3 + 4 * $I_L27168_294) = weight_incr * ( flux_down_incr($l_S28) * rho_alb_tile(1 + $I_L27168_236, 1, 3 + 4 * $I_L27168_294) + flux_direct_incr($l_S28) * ( rho_alb_tile(1 + $I_L27168_236, 2, 3 + 4 * $I_L27168_294) + -rho_alb_tile(1 + $I_L27168_236, 1, 3 + 4 * $I_L27168_294) ) )
27168.                                        $l_S28 = list_tile(1 + $I_L27168_236)
27168.                                        flux_up_tile(1 + $I_L27168_236, 4 + 4 * $I_L27168_294) = weight_incr * ( flux_down_incr($l_S28) * rho_alb_tile(1 + $I_L27168_236, 1, 4 + 4 * $I_L27168_294) + flux_direct_incr($l_S28) * ( rho_alb_tile(1 + $I_L27168_236, 2, 4 + 4 * $I_L27168_294) + -rho_alb_tile(1 + $I_L27168_236, 1, 4 + 4 * $I_L27168_294) ) )
27168.                                        $I_L27168_236 = 1 + $I_L27168_236
27168.                                        if ( $I_L27168_236 >= n_point_tile ) exit
27168.                                     enddo
27168.                                     $I_L27168_294 = 1 + $I_L27168_294
27168.                                     if ( $I_L27168_294 >= _rsh( n_tile, 2 ) ) exit
27168.                                  enddo
27168.                                  $I_L27168_258 = and( 0xfffffffffffffffcUL, n_tile )
27168.                               endif
27168.                               if ( $I_L27168_258 < n_tile ) then
27168.                                  $I_L27168_273 = 0
27168. !dir$ blocking_size( 1, 1 )
27168.                                  do
27168.                                     $I_L27168_236 = 0
27168. !dir$ ivdep
27168. !dir$ blocking_size( 256, 256 )
27168.                                     do
27168.                                        $l_S28 = list_tile(1 + $I_L27168_236)
27168.                                        flux_up_tile(1 + $I_L27168_236, 1 + $I_L27168_258 + $I_L27168_273) = weight_incr * ( flux_down_incr($l_S28) * rho_alb_tile(1 + $I_L27168_236, 1, 1 + $I_L27168_258 + $I_L27168_273) + flux_direct_incr($l_S28) * ( rho_alb_tile(1 + $I_L27168_236, 2, 1 + $I_L27168_258 + $I_L27168_273) + -rho_alb_tile(1 + $I_L27168_236, 1, 1 + $I_L27168_258 + $I_L27168_273) ) )
27168.                                        $I_L27168_236 = 1 + $I_L27168_236
27168.                                        if ( $I_L27168_236 >= n_point_tile ) exit
27168.                                     enddo
27168.                                     $I_L27168_273 = 1 + $I_L27168_273
27168.                                     if ( $I_L27168_273 >= n_tile + -$I_L27168_258 ) exit
27168.                                  enddo
27168.                               endif
27168.                            endif
27168.                         endif
27168.                         if ( l_blue_flux_surf /= .false. ) then
27168.                            if ( n_tile > 0 ) then
27168.                               if ( n_point_tile > 0 ) then
27168.                                  $I_L27168_260 = 0
27168.                                  if ( n_tile >= 4 ) then
27168.                                     $I_L27168_296 = 0
27168. !dir$ blocking_size( 1, 1 )
27168.                                     do
27168.                                        $I_L27168_238 = 0
27168. !dir$ ivdep
27168. !dir$ blocking_size( 256, 256 )
27168.                                        do
27168.                                           $l_S31 = list_tile(1 + $I_L27168_238)
27168.                                           flux_up_blue_tile(1 + $I_L27168_238, 1 + 4 * $I_L27168_296) = weight_blue_incr * ( flux_direct_incr($l_S31) * ( rho_alb_tile(1 + $I_L27168_238, 2, 1 + 4 * $I_L27168_296) + -rho_alb_tile(1 + $I_L27168_238, 1, 1 + 4 * $I_L27168_296) ) + flux_down_incr($l_S31) * rho_alb_tile(1 + $I_L27168_238, 1, 1 + 4 * $I_L27168_296) )
27168.                                           $l_S31 = list_tile(1 + $I_L27168_238)
27168.                                           flux_up_blue_tile(1 + $I_L27168_238, 2 + 4 * $I_L27168_296) = weight_blue_incr * ( flux_down_incr($l_S31) * rho_alb_tile(1 + $I_L27168_238, 1, 2 + 4 * $I_L27168_296) + flux_direct_incr($l_S31) * ( rho_alb_tile(1 + $I_L27168_238, 2, 2 + 4 * $I_L27168_296) + -rho_alb_tile(1 + $I_L27168_238, 1, 2 + 4 * $I_L27168_296) ) )
27168.                                           $l_S31 = list_tile(1 + $I_L27168_238)
27168.                                           flux_up_blue_tile(1 + $I_L27168_238, 3 + 4 * $I_L27168_296) = weight_blue_incr * ( flux_down_incr($l_S31) * rho_alb_tile(1 + $I_L27168_238, 1, 3 + 4 * $I_L27168_296) + flux_direct_incr($l_S31) * ( rho_alb_tile(1 + $I_L27168_238, 2, 3 + 4 * $I_L27168_296) + -rho_alb_tile(1 + $I_L27168_238, 1, 3 + 4 * $I_L27168_296) ) )
27168.                                           $l_S31 = list_tile(1 + $I_L27168_238)
27168.                                           flux_up_blue_tile(1 + $I_L27168_238, 4 + 4 * $I_L27168_296) = weight_blue_incr * ( flux_down_incr($l_S31) * rho_alb_tile(1 + $I_L27168_238, 1, 4 + 4 * $I_L27168_296) + flux_direct_incr($l_S31) * ( rho_alb_tile(1 + $I_L27168_238, 2, 4 + 4 * $I_L27168_296) + -rho_alb_tile(1 + $I_L27168_238, 1, 4 + 4 * $I_L27168_296) ) )
27168.                                           $I_L27168_238 = 1 + $I_L27168_238
27168.                                           if ( $I_L27168_238 >= n_point_tile ) exit
27168.                                        enddo
27168.                                        $I_L27168_296 = 1 + $I_L27168_296
27168.                                        if ( $I_L27168_296 >= _rsh( n_tile, 2 ) ) exit
27168.                                     enddo
27168.                                     $I_L27168_260 = and( 0xfffffffffffffffcUL, n_tile )
27168.                                  endif
27168.                                  if ( $I_L27168_260 < n_tile ) then
27168.                                     $I_L27168_276 = 0
27168. !dir$ blocking_size( 1, 1 )
27168.                                     do
27168.                                        $I_L27168_238 = 0
27168. !dir$ ivdep
27168. !dir$ blocking_size( 256, 256 )
27168.                                        do
27168.                                           $l_S31 = list_tile(1 + $I_L27168_238)
27168.                                           flux_up_blue_tile(1 + $I_L27168_238, 1 + $I_L27168_260 + $I_L27168_276) = weight_blue_incr * ( flux_down_incr($l_S31) * rho_alb_tile(1 + $I_L27168_238, 1, 1 + $I_L27168_260 + $I_L27168_276) + flux_direct_incr($l_S31) * ( rho_alb_tile(1 + $I_L27168_238, 2, 1 + $I_L27168_260 + $I_L27168_276) + -rho_alb_tile(1 + $I_L27168_238, 1, 1 + $I_L27168_260 + $I_L27168_276) ) )
27168.                                           $I_L27168_238 = 1 + $I_L27168_238
27168.                                           if ( $I_L27168_238 >= n_point_tile ) exit
27168.                                        enddo
27168.                                        $I_L27168_276 = 1 + $I_L27168_276
27168.                                        if ( $I_L27168_276 >= n_tile + -$I_L27168_260 ) exit
27168.                                     enddo
27168.                                  endif
27168.                               endif
27168.                            endif
27168.                         endif
27168.                      else if ( isolir == 2 ) then
27168.                         if ( n_tile > 0 ) then
27168.                            if ( n_point_tile > 0 ) then
27168.                               $I_L27168_256 = 0
27168.                               if ( n_tile >= 4 ) then
27168.                                  $I_L27168_298 = 0
27168. !dir$ blocking_size( 1, 1 )
27168.                                  do
27168.                                     $I_L27168_234 = 0
27168. !dir$ ivdep
27168. !dir$ blocking_size( 256, 256 )
27168.                                     do
27168.                                        $l_S34 = list_tile(1 + $I_L27168_234)
27168.                                        flux_up_tile(1 + $I_L27168_234, 1 + 4 * $I_L27168_298) = weight_incr * ( planck_flux_tile(1 + $I_L27168_234, 1 + 4 * $I_L27168_298) + rho_alb_tile(1 + $I_L27168_234, 1, 1 + 4 * $I_L27168_298) * ( planck_flux_bottom($l_S34) + flux_down_incr($l_S34) + -planck_flux_tile(1 + $I_L27168_234, 1 + 4 * $I_L27168_298) ) )
27168.                                        $l_S34 = list_tile(1 + $I_L27168_234)
27168.                                        flux_up_tile(1 + $I_L27168_234, 2 + 4 * $I_L27168_298) = weight_incr * ( planck_flux_tile(1 + $I_L27168_234, 2 + 4 * $I_L27168_298) + rho_alb_tile(1 + $I_L27168_234, 1, 2 + 4 * $I_L27168_298) * ( planck_flux_bottom($l_S34) + flux_down_incr($l_S34) + -planck_flux_tile(1 + $I_L27168_234, 2 + 4 * $I_L27168_298) ) )
27168.                                        $l_S34 = list_tile(1 + $I_L27168_234)
27168.                                        flux_up_tile(1 + $I_L27168_234, 3 + 4 * $I_L27168_298) = weight_incr * ( planck_flux_tile(1 + $I_L27168_234, 3 + 4 * $I_L27168_298) + rho_alb_tile(1 + $I_L27168_234, 1, 3 + 4 * $I_L27168_298) * ( planck_flux_bottom($l_S34) + flux_down_incr($l_S34) + -planck_flux_tile(1 + $I_L27168_234, 3 + 4 * $I_L27168_298) ) )
27168.                                        $l_S34 = list_tile(1 + $I_L27168_234)
27168.                                        flux_up_tile(1 + $I_L27168_234, 4 + 4 * $I_L27168_298) = weight_incr * ( planck_flux_tile(1 + $I_L27168_234, 4 + 4 * $I_L27168_298) + rho_alb_tile(1 + $I_L27168_234, 1, 4 + 4 * $I_L27168_298) * ( planck_flux_bottom($l_S34) + flux_down_incr($l_S34) + -planck_flux_tile(1 + $I_L27168_234, 4 + 4 * $I_L27168_298) ) )
27168.                                        $I_L27168_234 = 1 + $I_L27168_234
27168.                                        if ( $I_L27168_234 >= n_point_tile ) exit
27168.                                     enddo
27168.                                     $I_L27168_298 = 1 + $I_L27168_298
27168.                                     if ( $I_L27168_298 >= _rsh( n_tile, 2 ) ) exit
27168.                                  enddo
27168.                                  $I_L27168_256 = and( 0xfffffffffffffffcUL, n_tile )
27168.                               endif
27168.                               if ( $I_L27168_256 < n_tile ) then
27168.                                  $I_L27168_270 = 0
27168. !dir$ blocking_size( 1, 1 )
27168.                                  do
27168.                                     $I_L27168_234 = 0
27168. !dir$ ivdep
27168. !dir$ blocking_size( 256, 256 )
27168.                                     do
27168.                                        $l_S34 = list_tile(1 + $I_L27168_234)
27168.                                        flux_up_tile(1 + $I_L27168_234, 1 + $I_L27168_256 + $I_L27168_270) = weight_incr * ( planck_flux_tile(1 + $I_L27168_234, 1 + $I_L27168_256 + $I_L27168_270) + rho_alb_tile(1 + $I_L27168_234, 1, 1 + $I_L27168_256 + $I_L27168_270) * ( planck_flux_bottom($l_S34) + flux_down_incr($l_S34) + -planck_flux_tile(1 + $I_L27168_234, 1 + $I_L27168_256 + $I_L27168_270) ) )
27168.                                        $I_L27168_234 = 1 + $I_L27168_234
27168.                                        if ( $I_L27168_234 >= n_point_tile ) exit
27168.                                     enddo
27168.                                     $I_L27168_270 = 1 + $I_L27168_270
27168.                                     if ( $I_L27168_270 >= n_tile + -$I_L27168_256 ) exit
27168.                                  enddo
27168.                               endif
27168.                            endif
27168.                         endif
27168.                      endif
27168.                      goto 30
27168.                   else if ( i_angular_integration == 3 ) then
27168.                      _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$139,  _substr(t$138,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Tiled surfaces have not yet been ', 0x800600000000L ), _iotype( 'implemented with the spherical harmonic solver.', 0x800600000000L ) ) )
27168.                      ierr = 1
27168.                   else
27168.    30                continue
27168.                      l_initial = .false.
27168.                   endif
27168.                   flux_total_part(1, 2 + 2 * n_layer) = _copyout( flux_down_incr )
27168.                   flux_direct_part(1, n_layer) = _copyout( flux_direct_incr )
27184.                   if ( ierr /= 0 ) then
26470.                      _free( t$3303 )
26470.                      goto 50
26470.                   endif
27189.                   l_initial = .false.
27191.                   $I_L27002_268 = 1 + $I_L27002_268
27185.                else
27185.                endif
27185.             else
27185.             endif
27185.             if ( $I_L27002_268 >= $t_S0 ) exit
27185.          enddo
27185.          goto 40
27185.       else
27185.    40    continue
26470.          _free( t$3303 )
26470.       endif
26470.    50 continue
27196.       return
27196.       end
27196.       
27215.       
27215.       subroutine solve_band_random_overlap( ierr, n_profile, n_layer, i_top, p, t, d_mass, i_angular_integration, i_2stream, n_order_phase, l_rescale, n_order_gauss, ms_min, ms_max, i_truncation, ls_local_trunc, accuracy_adaptive, euler_factor, i_sph_algorithm, i_sph_mode, ia_sph_mm, cg_coeff, uplm_zero, uplm_sol, i_scatter_method, i_solver, i_band, n_gas, index_absorb, i_band_esft, i_scale_esft, i_scale_fnc, k_esft, w_esft, scale_vector, p_reference, t_reference, gas_mix_ratio, gas_frac_rescaled, l_doppler, doppler_correction, isolir, zen_0, zen_00, solar_irrad, planck_flux_top, planck_flux_bottom, diff_planck_band, l_ir_source_quad, diff_planck_band_2, ls_brdf_trunc, n_brdf_basis_fnc, rho_alb, f_brdf, brdf_sol, brdf_hemi, planck_flux_ground, l_tile, n_point_tile, n_tile, list_tile, rho_alb_tile, planck_flux_tile, ss_prop, l_cloud, i_cloud, n_cloud_top, n_cloud_type, frac_cloud, n_region, k_clr, i_region_cloud, frac_region, w_free, w_cloud, cloud_overlap, n_column_slv, list_column_slv, i_clm_lyr_chn, i_clm_cld_typ, area_column, n_viewing_level, i_rad_layer, frac_rad_layer, n_direction, direction, weight_band, l_initial, flux_direct, flux_down, flux_up, i_direct, radiance, photolysis, l_clear, i_solver_clear, flux_direct_clear, flux_down_clear, flux_up_clear, flux_up_tile, flux_up_blue_tile, l_blue_flux_surf, weight_blue, flux_direct_blue_surf, flux_down_blue_surf, flux_up_blue_surf, nd_profile, nd_layer, nd_layer_clr, id_ct, nd_column, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_band, nd_species, nd_esft_term, nd_scale_variable, nd_cloud_type, nd_region, nd_overlap_coeff, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc, nd_viewing_level, nd_direction, nd_source_coeff, nd_point_tile, nd_tile )
27215.       t$852 = nd_profile
27215.       t$853 = nd_layer
27381.       t$3346 = _zla( 0, nd_profile )
27215.       t$3347 = _zla( 0, nd_profile )
27381.       t$3348 = _zla( 0, nd_layer )
27215.       t$3349 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
27215.       t$854 = nd_max_order
27215.       t$3350 = 1 + nd_max_order
27405.       t$3351 = _zla( 0, 1 + nd_max_order )
27215.       t$855 = nd_sph_coeff
27415.       t$3352 = _zla( 0, nd_sph_coeff )
27215.       t$856 = nd_radiance_profile
27419.       t$3353 = _zla( 0, nd_radiance_profile )
27215.       t$3354 = _zla( 0, nd_radiance_profile )
27215.       t$3355 = _zla( 0, nd_sph_coeff ) * _zla( 0, nd_radiance_profile )
27215.       t$857 = nd_species
27215.       t$858 = nd_band
27448.       t$3356 = _zla( 0, nd_species )
27215.       t$3357 = _zla( 0, nd_species )
27448.       t$3358 = _zla( 0, nd_band )
27215.       t$3359 = _zla( 0, nd_species ) * _zla( 0, nd_band )
27215.       t$3360 = _zla( 0, nd_band )
27215.       t$3361 = _zla( 0, nd_species ) * _zla( 0, nd_band )
27215.       t$859 = nd_esft_term
27460.       t$3362 = _zla( 0, nd_esft_term )
27215.       t$3363 = _zla( 0, nd_esft_term )
27215.       t$3364 = _zla( 0, nd_band ) * _zla( 0, nd_esft_term )
27215.       t$3365 = _zla( 0, nd_species ) * _zla( 0, nd_band ) * _zla( 0, nd_esft_term )
27215.       t$860 = nd_scale_variable
27464.       t$3366 = _zla( 0, nd_scale_variable )
27215.       t$3367 = _zla( 0, nd_scale_variable )
27215.       t$3368 = _zla( 0, nd_esft_term ) * _zla( 0, nd_scale_variable )
27215.       t$3369 = _zla( 0, nd_band ) * _zla( 0, nd_esft_term ) * _zla( 0, nd_scale_variable )
27215.       t$3370 = _zla( 0, nd_species ) * _zla( 0, nd_band ) * _zla( 0, nd_esft_term ) * _zla( 0, nd_scale_variable )
27215.       t$3371 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
27215.       t$3372 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_species )
27215.       t$861 = nd_brdf_basis_fnc
27517.       t$3373 = _zla( 0, nd_brdf_basis_fnc )
27215.       t$3374 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
27215.       t$862 = nd_brdf_trunc / 2
27215.       t$863 = nd_brdf_trunc
27215.       t$3375 = _zla( 0, nd_brdf_basis_fnc )
27215.       t$3376 = 1 + t$862
27519.       t$3377 = _zla( 0, 1 + t$862 )
27215.       t$3378 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$862 )
27215.       t$3379 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$862 ) * _zla( 0, 1 + t$862 )
27215.       t$3380 = 1 + nd_brdf_trunc
27519.       t$3381 = _zla( 0, 1 + nd_brdf_trunc )
27215.       t$3382 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$862 ) * _zla( 0, 1 + t$862 ) * _zla( 0, 1 + nd_brdf_trunc )
27215.       t$864 = nd_direction
27215.       t$3383 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
27522.       t$3384 = _zla( 0, nd_direction )
27215.       t$3385 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_direction )
27215.       t$865 = nd_point_tile
27538.       t$3386 = _zla( 0, nd_point_tile )
27215.       t$866 = nd_tile
27215.       t$3387 = _zla( 0, nd_point_tile )
27215.       t$3388 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_point_tile )
27541.       t$3389 = _zla( 0, nd_tile )
27215.       t$3390 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_point_tile ) * _zla( 0, nd_tile )
27215.       t$3391 = _zla( 0, nd_point_tile ) * _zla( 0, nd_tile )
 2600.       if ( t$27 == 0 ) then
 2600.          t$3396(1) = 4
 2600.          t$3397(1) = 0
 2600.          t$3398(1) = 0
 2600.          t$3393(1) = int( loc( t$26 ), 8 )
 2600.          t$3394(1) = 0
 2600.          t$3395(1) = int( loc( t$3392 ), 8 )
 2600.          t$27 = __get_dynamic_type( 2, t$3393(1), t$3396(1), 1, t$3394(1), t$3395(1), t$3397(1), t$3398(1) )
 2600.       endif
27215.       t$869 = id_ct
27215.       t$867 = nd_cloud_type
27215.       t$3400 = 1 + nd_layer + -id_ct
27585.       t$3401 = max( 0, 1 + nd_layer + -id_ct )
27215.       t$3402 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
27585.       t$3403 = max( 0, nd_cloud_type )
27215.       t$3404 = _zla( 0, nd_profile ) * max( 0, nd_cloud_type ) * max( 0, 1 + nd_layer + -id_ct )
27215.       t$872 = nd_region
27594.       t$3405 = max( 0, nd_region )
27215.       t$3406 = _zla( 0, nd_profile ) * max( 0, nd_region ) * max( 0, 1 + nd_layer + -id_ct )
27215.       t$3407 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
27215.       t$870 = ( -1 + id_ct )
27215.       t$871 = nd_overlap_coeff
27215.       t$3408 = 2 + nd_layer + -id_ct
27589.       t$3409 = max( 0, 2 + nd_layer + -id_ct )
27215.       t$3410 = _zla( 0, nd_profile ) * max( 0, 2 + nd_layer + -id_ct )
27589.       t$3411 = max( 0, nd_overlap_coeff )
27215.       t$3412 = _zla( 0, nd_profile ) * max( 0, nd_overlap_coeff ) * max( 0, 2 + nd_layer + -id_ct )
27215.       t$868 = nd_column
27576.       t$3413 = max( 0, nd_column )
27215.       t$3414 = _zla( 0, nd_profile ) * max( 0, nd_column )
27215.       t$873 = nd_viewing_level
27609.       t$3415 = max( 0, nd_viewing_level )
27215.       t$3416 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
27215.       t$3417 = 2 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
27215.       t$874 = nd_flux_profile
27625.       t$3418 = max( 0, nd_flux_profile )
27215.       t$3419 = max( 0, nd_flux_profile )
27215.       t$3420 = 1 + nd_layer
27625.       t$3421 = max( 0, 1 + nd_layer )
27215.       t$3422 = max( 0, nd_flux_profile ) * max( 0, 1 + nd_layer )
27215.       t$3423 = _zla( 0, nd_radiance_profile ) * max( 0, 1 + nd_layer )
27215.       t$3424 = _zla( 0, nd_radiance_profile ) * max( 0, nd_viewing_level )
27215.       t$3425 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * max( 0, nd_viewing_level )
27215.       t$875 = nd_j_profile
27642.       t$3426 = max( 0, nd_j_profile )
27215.       t$3427 = max( 0, nd_j_profile )
27215.       t$3428 = max( 0, nd_viewing_level ) * max( 0, nd_j_profile )
27712.       t$3431 = 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
27703.       t$3432 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
27703.       t$3434 = t$3432 + 8 * _zla( 0, nd_profile )
27721.       t$3435 = 8 * ( 7 + t$3432 + 8 * _zla( 0, nd_profile ) ) / 8
27721.       t$3437 = t$3435 + 8 * max( 0, nd_flux_profile ) * max( 0, 1 + nd_layer )
27717.       t$3438 = 8 * ( 7 + t$3435 + 8 * max( 0, nd_flux_profile ) * max( 0, 1 + nd_layer ) ) / 8
27717.       t$3440 = t$3438 + 8 * max( 0, nd_flux_profile ) * max( 0, 1 + nd_layer )
27706.       t$3441 = 8 * ( 7 + t$3438 + 8 * max( 0, nd_flux_profile ) * max( 0, 1 + nd_layer ) ) / 8
27706.       t$3443 = t$3441 + 8 * _zla( 0, nd_profile )
27708.       t$3444 = 8 * ( 7 + t$3441 + 8 * _zla( 0, nd_profile ) ) / 8
27708.       t$3446 = t$3444 + 8 * _zla( 0, nd_profile )
27215.       t$876 = ( 2 + 2 * nd_layer )
27723.       t$3447 = max( 0, ( 2 + 2 * nd_layer ) )
27215.       t$3448 = max( 0, nd_flux_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
27723.       t$3449 = 8 * ( 7 + t$3444 + 8 * _zla( 0, nd_profile ) ) / 8
27723.       t$3451 = t$3449 + 8 * max( 0, nd_flux_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
27719.       t$3452 = 8 * ( 7 + t$3449 + 8 * max( 0, nd_flux_profile ) * max( 0, ( 2 + 2 * nd_layer ) ) ) / 8
27719.       t$3454 = t$3452 + 8 * max( 0, nd_flux_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
27726.       t$3455 = 8 * ( 7 + t$3452 + 8 * max( 0, nd_flux_profile ) * max( 0, ( 2 + 2 * nd_layer ) ) ) / 8
27726.       t$3457 = t$3455 + 8 * _zla( 0, nd_radiance_profile ) * max( 0, 1 + nd_layer )
27688.       t$3459 = t$3455 + 4 * _zla( 0, nd_species ) + 8 * _zla( 0, nd_radiance_profile ) * max( 0, 1 + nd_layer )
27686.       t$3461 = t$3455 + 8 * _zla( 0, nd_species ) + 8 * _zla( 0, nd_radiance_profile ) * max( 0, 1 + nd_layer )
27699.       t$3462 = 8 * ( 7 + t$3455 + 8 * _zla( 0, nd_species ) + 8 * _zla( 0, nd_radiance_profile ) * max( 0, 1 + nd_layer ) ) / 8
27699.       t$3464 = t$3462 + 8 * _zla( 0, nd_species )
27701.       t$3465 = 8 * ( 7 + t$3462 + 8 * _zla( 0, nd_species ) ) / 8
27701.       t$3467 = t$3465 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
27732.       t$3468 = 8 * ( 7 + t$3465 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
27732.       t$3470 = t$3468 + 8 * max( 0, nd_viewing_level ) * max( 0, nd_j_profile )
27728.       t$3471 = 8 * ( 7 + t$3468 + 8 * max( 0, nd_viewing_level ) * max( 0, nd_j_profile ) ) / 8
27728.       t$3473 = t$3471 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * max( 0, nd_viewing_level )
27215.       t$3429 = int( _alloc( t$3471 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * max( 0, nd_viewing_level ) ), 8 )
27712.       t$3430 = t$3429
27703.       t$3433 = t$3432 + t$3429
27721.       t$3436 = t$3435 + t$3429
27717.       t$3439 = t$3438 + t$3429
27706.       t$3442 = t$3441 + t$3429
27708.       t$3445 = t$3444 + t$3429
27723.       t$3450 = t$3449 + t$3429
27719.       t$3453 = t$3452 + t$3429
27726.       t$3456 = t$3455 + t$3429
27688.       t$3458 = t$3455 + t$3429 + 8 * _zla( 0, nd_radiance_profile ) * max( 0, 1 + nd_layer )
27686.       t$3460 = t$3455 + t$3429 + 4 * _zla( 0, nd_species ) + 8 * _zla( 0, nd_radiance_profile ) * max( 0, 1 + nd_layer )
27699.       t$3463 = t$3462 + t$3429
27701.       t$3466 = t$3465 + t$3429
27732.       t$3469 = t$3468 + t$3429
27728.       t$3472 = t$3471 + t$3429
27749.       if ( n_gas > 0 ) then
27749.          $I_L27749_311 = 0
27749. !dir$ ivdep
27749.          do
27750.             i_gas_pointer(1 + $I_L27749_311) = index_absorb(1 + $I_L27749_311, i_band)
27751.             i_esft_pointer(index_absorb(1 + $I_L27749_311, i_band)) = 1
27752.             $I_L27749_311 = 1 + $I_L27749_311
27749.             if ( $I_L27749_311 >= n_gas ) exit
27749.          enddo
27749.       endif
27753.       $index_last_S12 = index_absorb(n_gas, i_band)
27760.       if ( -1 + n_gas > 0 ) then
27760.          $I_L27760_409 = 0
27760.          do
27761.             $i_gas_band_S2 = i_gas_pointer(1 + $I_L27760_409)
27763.             k_esft_mono($i_gas_band_S2) = k_esft(1, i_band, $i_gas_band_S2)
27765.             if ( i_scale_esft(i_band, $i_gas_band_S2) == 2 ) then
27766.                tm$2863 = loc( gas_mix_ratio(1, 1, $i_gas_band_S2) )
27766.                gas_mix_ratio = _copyin( gas_mix_ratio(1, 1, $i_gas_band_S2) )
27766.                tm$2865 = loc( gas_frac_rescaled(1, 1, $i_gas_band_S2) )
27766.                gas_frac_rescaled = _copyin( gas_frac_rescaled(1, 1, $i_gas_band_S2) )
27766.                tm$2867 = loc( scale_vector(1, 1, i_band, $i_gas_band_S2) )
27766.                scale_parameter = _copyin( scale_vector(1, 1, i_band, $i_gas_band_S2) )
27766.                t$734 = nd_profile
27766.                t$735 = nd_layer
27766.                t$2851 = max( 0, nd_profile )
27766.                t$2852 = max( 0, nd_profile )
27766.                t$2853 = max( 0, nd_layer )
27766.                t$2854 = max( 0, nd_profile ) * max( 0, nd_layer )
27766.                t$736 = nd_scale_variable
27766.                t$2855 = max( 0, nd_scale_variable )
27766.                if ( l_doppler($i_gas_band_S2) /= .false. ) then
27766.                   $pressure_offset_S5 = doppler_correction($i_gas_band_S2)
27766.                else
27766.                   $pressure_offset_S5 = 0.0
27766.                endif
27766.                if ( i_scale_fnc(i_band, $i_gas_band_S2) == 1 ) then
27766.                   if ( nd_layer > 0 ) then
27766.                      $SC_scale_parameter_I1 = scale_parameter(2)
27766.                      $SC_scale_parameter_I0 = scale_parameter(1)
27766.                      if ( nd_profile > 0 ) then
27766.                         $SC_p_reference_I16 = p_reference($i_gas_band_S2, i_band)
27766.                         $SC_t_reference_I15 = t_reference($i_gas_band_S2, i_band)
27766.                         $I_L27766_372 = 0
27766.                         do
27766.                            $I_L27766_317 = 0
27766. !dir$ ivdep
27766.                            do
27766.                               gas_frac_rescaled(1 + $I_L27766_317, 1 + $I_L27766_372) = _expn( $SC_scale_parameter_I1 * log( ( t(1 + $I_L27766_317, 1 + $I_L27766_372) * 1.0/$SC_t_reference_I15 ) ) + $SC_scale_parameter_I0 * log( ( 1.0/( $pressure_offset_S5 + $SC_p_reference_I16 ) * ( $pressure_offset_S5 + p(1 + $I_L27766_317, 1 + $I_L27766_372) ) ) ) )
27766.                               $I_L27766_317 = 1 + $I_L27766_317
27766.                               if ( $I_L27766_317 >= nd_profile ) exit
27766.                            enddo
27766.                            $I_L27766_372 = 1 + $I_L27766_372
27766.                            if ( $I_L27766_372 >= nd_layer ) exit
27766.                         enddo
27766.                      endif
27766.                   endif
27766.                   goto 10
27766.                else if ( i_scale_fnc(i_band, $i_gas_band_S2) /= 0 ) then
27766.                   if ( i_scale_fnc(i_band, $i_gas_band_S2) == 2 ) then
27766.                      if ( nd_layer > 0 ) then
27766.                         $SC_scale_parameter_I2 = scale_parameter(3)
27766.                         $SC_scale_parameter_I1 = scale_parameter(2)
27766.                         $SC_scale_parameter_I0 = scale_parameter(1)
27766.                         if ( nd_profile > 0 ) then
27766.                            $SC_p_reference_I16 = p_reference($i_gas_band_S2, i_band)
27766.                            $SC_t_reference_I15 = t_reference($i_gas_band_S2, i_band)
27766.                            $I_L27766_370 = 0
27766.                            do
27766.                               $I_L27766_315 = 0
27766. !dir$ ivdep
27766.                               do
27766.                                  gas_frac_rescaled(1 + $I_L27766_315, 1 + $I_L27766_370) = ( 1.0 + $SC_scale_parameter_I2 * ( -1.0 + ( t(1 + $I_L27766_315, 1 + $I_L27766_370) * 1.0/$SC_t_reference_I15 ) ) * ( -1.0 + ( t(1 + $I_L27766_315, 1 + $I_L27766_370) * 1.0/$SC_t_reference_I15 ) ) + $SC_scale_parameter_I1 * ( -1.0 + ( t(1 + $I_L27766_315, 1 + $I_L27766_370) * 1.0/$SC_t_reference_I15 ) ) ) * _expn( $SC_scale_parameter_I0 * log( ( 1.0/( $pressure_offset_S5 + $SC_p_reference_I16 ) * ( $pressure_offset_S5 + p(1 + $I_L27766_315, 1 + $I_L27766_370) ) ) ) )
27766.                                  $I_L27766_315 = 1 + $I_L27766_315
27766.                                  if ( $I_L27766_315 >= nd_profile ) exit
27766.                               enddo
27766.                               $I_L27766_370 = 1 + $I_L27766_370
27766.                               if ( $I_L27766_370 >= nd_layer ) exit
27766.                            enddo
27766.                         endif
27766.                      endif
27766.                      goto 10
27766.                   else if ( i_scale_fnc(i_band, $i_gas_band_S2) == 3 ) then
27766.                      if ( nd_layer > 0 ) then
27766.                         $SC_scale_parameter_I3 = scale_parameter(4)
27766.                         $SC_scale_parameter_I2 = scale_parameter(3)
27766.                         $SC_scale_parameter_I1 = scale_parameter(2)
27766.                         $SC_scale_parameter_I0 = scale_parameter(1)
27766.                         if ( nd_profile > 0 ) then
27766.                            $SC_p_reference_I16 = p_reference($i_gas_band_S2, i_band)
27766.                            $SC_t_reference_I15 = t_reference($i_gas_band_S2, i_band)
27766.                            $I_L27766_368 = 0
27766.                            do
27766.                               $I_L27766_313 = 0
27766. !dir$ ivdep
27766.                               do
27766.                                  gas_frac_rescaled(1 + $I_L27766_313, 1 + $I_L27766_368) = ( 1.0 + $SC_scale_parameter_I3 * ( -1.0 + ( t(1 + $I_L27766_313, 1 + $I_L27766_368) * 1.0/$SC_t_reference_I15 ) ) * ( -1.0 + ( t(1 + $I_L27766_313, 1 + $I_L27766_368) * 1.0/$SC_t_reference_I15 ) ) + $SC_scale_parameter_I2 * ( -1.0 + ( t(1 + $I_L27766_313, 1 + $I_L27766_368) * 1.0/$SC_t_reference_I15 ) ) ) * _expn( $SC_scale_parameter_I0 * log( ( 1.0/( $SC_scale_parameter_I1 + $SC_p_reference_I16 ) * ( $SC_scale_parameter_I1 + p(1 + $I_L27766_313, 1 + $I_L27766_368) ) ) ) )
27766.                                  $I_L27766_313 = 1 + $I_L27766_313
27766.                                  if ( $I_L27766_313 >= nd_profile ) exit
27766.                               enddo
27766.                               $I_L27766_368 = 1 + $I_L27766_368
27766.                               if ( $I_L27766_368 >= nd_layer ) exit
27766.                            enddo
27766.                         endif
27766.                      endif
27766.    10                continue
27766.                      if ( nd_layer > 0 ) then
27766.                         if ( nd_profile > 0 ) then
27766.                            $I_L27766_374 = 0
27766.                            do
27766.                               $I_L27766_319 = 0
27766. !dir$ ivdep
27766.                               do
27766.                                  gas_frac_rescaled(1 + $I_L27766_319, 1 + $I_L27766_374) = max( 0.0, gas_frac_rescaled(1 + $I_L27766_319, 1 + $I_L27766_374) * gas_mix_ratio(1 + $I_L27766_319, 1 + $I_L27766_374) )
27766.                                  $I_L27766_319 = 1 + $I_L27766_319
27766.                                  if ( $I_L27766_319 >= nd_profile ) exit
27766.                               enddo
27766.                               $I_L27766_374 = 1 + $I_L27766_374
27766.                               if ( $I_L27766_374 >= nd_layer ) exit
27766.                            enddo
27766.                         endif
27766.                      endif
27766.                   else
27766.                      _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$738,  _substr(t$737,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: An illegal type of scaling has been given.', 0x800600000000L ) ) )
27766.                      ierr = 1
27766.                   endif
27766.                endif
27766.                scale_vector(1, 1, i_band, $i_gas_band_S2) = _copyout( scale_parameter )
27766.                gas_frac_rescaled(1, 1, $i_gas_band_S2) = _copyout( gas_frac_rescaled )
27766.                gas_mix_ratio(1, 1, $i_gas_band_S2) = _copyout( gas_mix_ratio )
27778.                if ( ierr /= 0 ) then
27215.                   _free( t$3429 )
27215.                   goto 70
27215.                endif
27780.                $I_L27760_409 = 1 + $I_L27760_409
27779.             else
27779.             endif
27779.             if ( $I_L27760_409 >= -1 + n_gas ) exit
27779.          enddo
27779.          goto 20
27779.       else
27779.    20    continue
27784.          $SC_i_band_esft_I4 = i_band_esft(i_band, $index_last_S12)
27869.          $SC_i_gas_pointer_I10 = i_gas_pointer(1)
27869.          do
27783.             i_esft_pointer($index_last_S12) = 0
27784.             if ( $SC_i_band_esft_I4 > 0 ) then
27793.                $SC_i_scale_esft_I5 = i_scale_esft(i_band, $index_last_S12)
27784.                $I_L27784_420 = 0
27784.                do
27785.                   i_esft_pointer($index_last_S12) = $I_L27784_420
27785.                   i_esft_pointer($index_last_S12) = ( 1 + $I_L27784_420 )
27791.                   k_esft_mono($index_last_S12) = k_esft(1 + $I_L27784_420, i_band, $index_last_S12)
27793.                   if ( $SC_i_scale_esft_I5 == 2 ) then
27794.                      tm$2891 = loc( gas_mix_ratio(1, 1, $index_last_S12) )
27794.                      gas_mix_ratio = _copyin( gas_mix_ratio(1, 1, $index_last_S12) )
27794.                      tm$2893 = loc( gas_frac_rescaled(1, 1, $index_last_S12) )
27794.                      gas_frac_rescaled = _copyin( gas_frac_rescaled(1, 1, $index_last_S12) )
27794.                      tm$2895 = loc( scale_vector(1, 1 + $I_L27784_420, i_band, $index_last_S12) )
27794.                      scale_parameter = _copyin( scale_vector(1, 1 + $I_L27784_420, i_band, $index_last_S12) )
27794.                      t$734 = nd_profile
27794.                      t$735 = nd_layer
27794.                      t$2851 = max( 0, nd_profile )
27794.                      t$2852 = max( 0, nd_profile )
27794.                      t$2853 = max( 0, nd_layer )
27794.                      t$2854 = max( 0, nd_profile ) * max( 0, nd_layer )
27794.                      t$736 = nd_scale_variable
27794.                      t$2855 = max( 0, nd_scale_variable )
27794.                      if ( l_doppler($index_last_S12) /= .false. ) then
27794.                         $pressure_offset_S17 = doppler_correction($index_last_S12)
27794.                      else
27794.                         $pressure_offset_S17 = 0.0
27794.                      endif
27794.                      if ( i_scale_fnc(i_band, $index_last_S12) == 1 ) then
27794.                         if ( nd_layer > 0 ) then
27794.                            $SC_scale_parameter_I7 = scale_parameter(2)
27794.                            $SC_scale_parameter_I6 = scale_parameter(1)
27794.                            if ( nd_profile > 0 ) then
27794.                               $SC_p_reference_I18 = p_reference($index_last_S12, i_band)
27794.                               $SC_t_reference_I17 = t_reference($index_last_S12, i_band)
27794.                               $I_L27794_380 = 0
27794.                               do
27794.                                  $I_L27794_325 = 0
27794. !dir$ ivdep
27794.                                  do
27794.                                     gas_frac_rescaled(1 + $I_L27794_325, 1 + $I_L27794_380) = _expn( $SC_scale_parameter_I7 * log( ( t(1 + $I_L27794_325, 1 + $I_L27794_380) * 1.0/$SC_t_reference_I17 ) ) + $SC_scale_parameter_I6 * log( ( 1.0/( $pressure_offset_S17 + $SC_p_reference_I18 ) * ( $pressure_offset_S17 + p(1 + $I_L27794_325, 1 + $I_L27794_380) ) ) ) )
27794.                                     $I_L27794_325 = 1 + $I_L27794_325
27794.                                     if ( $I_L27794_325 >= nd_profile ) exit
27794.                                  enddo
27794.                                  $I_L27794_380 = 1 + $I_L27794_380
27794.                                  if ( $I_L27794_380 >= nd_layer ) exit
27794.                               enddo
27794.                            endif
27794.                         endif
27794.                         goto 30
27794.                      else if ( i_scale_fnc(i_band, $index_last_S12) /= 0 ) then
27794.                         if ( i_scale_fnc(i_band, $index_last_S12) == 2 ) then
27794.                            if ( nd_layer > 0 ) then
27794.                               $SC_scale_parameter_I8 = scale_parameter(3)
27794.                               $SC_scale_parameter_I7 = scale_parameter(2)
27794.                               $SC_scale_parameter_I6 = scale_parameter(1)
27794.                               if ( nd_profile > 0 ) then
27794.                                  $SC_p_reference_I18 = p_reference($index_last_S12, i_band)
27794.                                  $SC_t_reference_I17 = t_reference($index_last_S12, i_band)
27794.                                  $I_L27794_378 = 0
27794.                                  do
27794.                                     $I_L27794_323 = 0
27794. !dir$ ivdep
27794.                                     do
27794.                                        gas_frac_rescaled(1 + $I_L27794_323, 1 + $I_L27794_378) = ( 1.0 + $SC_scale_parameter_I8 * ( -1.0 + ( t(1 + $I_L27794_323, 1 + $I_L27794_378) * 1.0/$SC_t_reference_I17 ) ) * ( -1.0 + ( t(1 + $I_L27794_323, 1 + $I_L27794_378) * 1.0/$SC_t_reference_I17 ) ) + $SC_scale_parameter_I7 * ( -1.0 + ( t(1 + $I_L27794_323, 1 + $I_L27794_378) * 1.0/$SC_t_reference_I17 ) ) ) * _expn( $SC_scale_parameter_I6 * log( ( 1.0/( $pressure_offset_S17 + $SC_p_reference_I18 ) * ( $pressure_offset_S17 + p(1 + $I_L27794_323, 1 + $I_L27794_378) ) ) ) )
27794.                                        $I_L27794_323 = 1 + $I_L27794_323
27794.                                        if ( $I_L27794_323 >= nd_profile ) exit
27794.                                     enddo
27794.                                     $I_L27794_378 = 1 + $I_L27794_378
27794.                                     if ( $I_L27794_378 >= nd_layer ) exit
27794.                                  enddo
27794.                               endif
27794.                            endif
27794.                            goto 30
27794.                         else if ( i_scale_fnc(i_band, $index_last_S12) == 3 ) then
27794.                            if ( nd_layer > 0 ) then
27794.                               $SC_scale_parameter_I9 = scale_parameter(4)
27794.                               $SC_scale_parameter_I8 = scale_parameter(3)
27794.                               $SC_scale_parameter_I7 = scale_parameter(2)
27794.                               $SC_scale_parameter_I6 = scale_parameter(1)
27794.                               if ( nd_profile > 0 ) then
27794.                                  $SC_p_reference_I18 = p_reference($index_last_S12, i_band)
27794.                                  $SC_t_reference_I17 = t_reference($index_last_S12, i_band)
27794.                                  $I_L27794_376 = 0
27794.                                  do
27794.                                     $I_L27794_321 = 0
27794. !dir$ ivdep
27794.                                     do
27794.                                        gas_frac_rescaled(1 + $I_L27794_321, 1 + $I_L27794_376) = ( 1.0 + $SC_scale_parameter_I9 * ( -1.0 + ( t(1 + $I_L27794_321, 1 + $I_L27794_376) * 1.0/$SC_t_reference_I17 ) ) * ( -1.0 + ( t(1 + $I_L27794_321, 1 + $I_L27794_376) * 1.0/$SC_t_reference_I17 ) ) + $SC_scale_parameter_I8 * ( -1.0 + ( t(1 + $I_L27794_321, 1 + $I_L27794_376) * 1.0/$SC_t_reference_I17 ) ) ) * _expn( $SC_scale_parameter_I6 * log( ( 1.0/( $SC_scale_parameter_I7 + $SC_p_reference_I18 ) * ( $SC_scale_parameter_I7 + p(1 + $I_L27794_321, 1 + $I_L27794_376) ) ) ) )
27794.                                        $I_L27794_321 = 1 + $I_L27794_321
27794.                                        if ( $I_L27794_321 >= nd_profile ) exit
27794.                                     enddo
27794.                                     $I_L27794_376 = 1 + $I_L27794_376
27794.                                     if ( $I_L27794_376 >= nd_layer ) exit
27794.                                  enddo
27794.                               endif
27794.                            endif
27794.    30                      continue
27794.                            if ( nd_layer > 0 ) then
27794.                               if ( nd_profile > 0 ) then
27794.                                  $I_L27794_382 = 0
27794.                                  do
27794.                                     $I_L27794_327 = 0
27794. !dir$ ivdep
27794.                                     do
27794.                                        gas_frac_rescaled(1 + $I_L27794_327, 1 + $I_L27794_382) = max( 0.0, gas_frac_rescaled(1 + $I_L27794_327, 1 + $I_L27794_382) * gas_mix_ratio(1 + $I_L27794_327, 1 + $I_L27794_382) )
27794.                                        $I_L27794_327 = 1 + $I_L27794_327
27794.                                        if ( $I_L27794_327 >= nd_profile ) exit
27794.                                     enddo
27794.                                     $I_L27794_382 = 1 + $I_L27794_382
27794.                                     if ( $I_L27794_382 >= nd_layer ) exit
27794.                                  enddo
27794.                               endif
27794.                            endif
27794.                         else
27794.                            _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$738,  _substr(t$737,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: An illegal type of scaling has been given.', 0x800600000000L ) ) )
27794.                            ierr = 1
27794.                         endif
27794.                      endif
27794.                      scale_vector(1, 1 + $I_L27784_420, i_band, $index_last_S12) = _copyout( scale_parameter )
27794.                      gas_frac_rescaled(1, 1, $index_last_S12) = _copyout( gas_frac_rescaled )
27794.                      gas_mix_ratio(1, 1, $index_last_S12) = _copyout( gas_mix_ratio )
27807.                      if ( ierr /= 0 ) then
27215.                         _free( t$3429 )
27215.                         goto 70
27215.                      endif
27814.                      product_weight = 1.0
27815.                      if ( n_gas > 0 ) then
27815.                         $I_L27815_329 = 0
27815. !dir$ ivdep
27815.                         do
27816.                            $i_gas_band_S25 = i_gas_pointer(1 + $I_L27815_329)
27817.                            $iex_S26 = i_esft_pointer($i_gas_band_S25)
27818.                            product_weight = product_weight * w_esft($iex_S26, i_band, $i_gas_band_S25)
27820.                            $I_L27815_329 = 1 + $I_L27815_329
27815.                            if ( $I_L27815_329 >= n_gas ) exit
27815.                         enddo
27815.                      endif
27822.                      if ( i_angular_integration == 1 .orelse. i_angular_integration == 2 ) then
27825.                         if ( isolir == 1 ) then
27828.                            if ( n_profile > 0 ) then
27828.                               $I_L27828_331 = 0
27828. !dir$ ivdep
27828.                               do
27829.                                  d_planck_flux_surface(1 + $I_L27828_331) = 0.0
27830.                                  flux_inc_down(1 + $I_L27828_331) = ( solar_irrad(1 + $I_L27828_331) * 1.0/zen_0(1 + $I_L27828_331) )
27831.                                  flux_inc_direct(1 + $I_L27828_331) = ( solar_irrad(1 + $I_L27828_331) * 1.0/zen_0(1 + $I_L27828_331) )
27832.                                  $I_L27828_331 = 1 + $I_L27828_331
27828.                                  if ( $I_L27828_331 >= n_profile ) exit
27828.                               enddo
27828.                            endif
27834.                         else if ( isolir == 2 ) then
27837.                            if ( n_profile > 0 ) then
27837.                               $I_L27837_333 = 0
27837. !dir$ ivdep
27837.                               do
27838.                                  flux_inc_direct(1 + $I_L27837_333) = 0.0
27839.                                  flux_direct_part(1 + $I_L27837_333, n_layer) = 0.0
27840.                                  flux_inc_down(1 + $I_L27837_333) = -planck_flux_top(1 + $I_L27837_333)
27841.                                  d_planck_flux_surface(1 + $I_L27837_333) = planck_flux_ground(1 + $I_L27837_333) + -planck_flux_bottom(1 + $I_L27837_333)
27843.                                  $I_L27837_333 = 1 + $I_L27837_333
27837.                                  if ( $I_L27837_333 >= n_profile ) exit
27837.                               enddo
27837.                            endif
27844.                            if ( l_clear /= .false. ) then
27845.                               if ( n_profile > 0 ) then
27845.                                  $I_L27845_335 = 0
27845. !dir$ ivdep
27845.                                  do
27846.                                     flux_direct_clear_part(1 + $I_L27845_335, n_layer) = 0.0
27847.                                     $I_L27845_335 = 1 + $I_L27845_335
27845.                                     if ( $I_L27845_335 >= n_profile ) exit
27845.                                  enddo
27845.                               endif
27845.                            endif
27845.                         endif
27845.                      else
27852.                         if ( i_angular_integration == 3 ) then
27854.                            if ( isolir == 1 ) then
27855.                               if ( n_profile > 0 ) then
27855.                                  $I_L27855_337 = 0
27855. !dir$ ivdep
27855.                                  do
27856.                                     i_direct_part(1 + $I_L27855_337, 0) = solar_irrad(1 + $I_L27855_337)
27857.                                     flux_inc_down(1 + $I_L27855_337) = 0.0
27858.                                     $I_L27855_337 = 1 + $I_L27855_337
27855.                                     if ( $I_L27855_337 >= n_profile ) exit
27855.                                  enddo
27855.                               endif
27859.                            else if ( n_profile > 0 ) then
27860.                               $I_L27860_339 = 0
27860. !dir$ ivdep
27860.                               do
27861.                                  flux_inc_down(1 + $I_L27860_339) = -planck_flux_top(1 + $I_L27860_339)
27862.                                  d_planck_flux_surface(1 + $I_L27860_339) = planck_flux_ground(1 + $I_L27860_339) + -planck_flux_bottom(1 + $I_L27860_339)
27864.                                  $I_L27860_339 = 1 + $I_L27860_339
27860.                                  if ( $I_L27860_339 >= n_profile ) exit
27860.                               enddo
27860.                            endif
27860.                         endif
27860.                      endif
27869.                      t$292 = nd_species
27869.                      t$1978 = max( 0, nd_species )
27869.                      t$293 = nd_profile
27869.                      t$294 = nd_layer
27869.                      t$1979 = max( 0, nd_profile )
27869.                      t$1980 = max( 0, nd_profile )
27869.                      t$1981 = max( 0, nd_layer )
27869.                      t$1982 = max( 0, nd_profile ) * max( 0, nd_layer )
27869.                      t$1983 = max( 0, nd_profile ) * max( 0, nd_layer ) * max( 0, nd_species )
27869.                      t$1984 = max( 0, nd_profile ) * max( 0, nd_layer )
27869.                      if ( nd_layer > 0 ) then
27869.                         if ( nd_profile > 0 ) then
27869.                            $SC_k_esft_mono_I19 = k_esft_mono($SC_i_gas_pointer_I10)
27869.                            $I_L27869_384 = 0
27869.                            do
27869.                               $I_L27869_341 = 0
27869. !dir$ ivdep
27869.                               do
27869.                                  k_gas_abs(1 + $I_L27869_341, 1 + $I_L27869_384) = $SC_k_esft_mono_I19 * gas_frac_rescaled(1 + $I_L27869_341, 1 + $I_L27869_384, $SC_i_gas_pointer_I10)
27869.                                  $I_L27869_341 = 1 + $I_L27869_341
27869.                                  if ( $I_L27869_341 >= nd_profile ) exit
27869.                               enddo
27869.                               $I_L27869_384 = 1 + $I_L27869_384
27869.                               if ( $I_L27869_384 >= nd_layer ) exit
27869.                            enddo
27869.                         endif
27869.                      endif
27869.                      if ( -2 + n_gas >= 0 ) then
27869.                         if ( nd_layer > 0 ) then
27869.                            if ( nd_profile > 0 ) then
27869.                               $I_L27869_418 = 0
27869.                               do
27869.                                  $I_L27869_416 = 0
27869.                                  do
27869.                                     $I_L27869_414 = 0
27869.                                     do
27869.                                        $I_L27869_411 = 0
27869. !dir$ shortloop16
27869. !dir$ blocking_size( 2, 2 )
27869.                                        do
27869.                                           $I_L27869_406 = 0
27869. !dir$ shortloop16
27869. !dir$ blocking_size( 2, 2 )
27869.                                           do
27869.                                              $i_gas_S38 = i_gas_pointer(2 + $I_L27869_411 + 2 * $I_L27869_418)
27869.                                              $SC_k_esft_mono_I22 = k_esft_mono($i_gas_S38)
27869.                                              $I_L27869_343 = 0
27869. !dir$ ivdep
27869. !dir$ blocking_size( 256, 256 )
27869.                                              do
27869.                                                 k_gas_abs(1 + $I_L27869_343 + 256 * $I_L27869_414, 1 + $I_L27869_406 + 2 * $I_L27869_416) = k_gas_abs(1 + $I_L27869_343 + 256 * $I_L27869_414, 1 + $I_L27869_406 + 2 * $I_L27869_416) + $SC_k_esft_mono_I22 * gas_frac_rescaled(1 + $I_L27869_343 + 256 * $I_L27869_414, 1 + $I_L27869_406 + 2 * $I_L27869_416, $i_gas_S38)
27869.                                                 $I_L27869_343 = 1 + $I_L27869_343
27869.                                                 if ( $I_L27869_343 >= min( nd_profile, 256 + 256 * $I_L27869_414 ) + -256 * $I_L27869_414 ) exit
27869.                                              enddo
27869.                                              $I_L27869_406 = 1 + $I_L27869_406
27869.                                              if ( $I_L27869_406 >= min( nd_layer, 2 + 2 * $I_L27869_416 ) + -2 * $I_L27869_416 ) exit
27869.                                           enddo
27869.                                           $I_L27869_411 = 1 + $I_L27869_411
27869.                                           if ( $I_L27869_411 >= min( -1 + n_gas, 2 + 2 * $I_L27869_418 ) + -2 * $I_L27869_418 ) exit
27869.                                        enddo
27869.                                        $I_L27869_414 = 1 + $I_L27869_414
27869.                                        if ( $I_L27869_414 >= 1 + max( 0, -1 + _rsh( 255 + nd_profile, 8 ) ) ) exit
27869.                                     enddo
27869.                                     $I_L27869_416 = 1 + $I_L27869_416
27869.                                     if ( $I_L27869_416 >= 1 + max( 0, -1 + _rsh( 1 + nd_layer, 1 ) ) ) exit
27869.                                  enddo
27869.                                  $I_L27869_418 = 1 + $I_L27869_418
27869.                                  if ( $I_L27869_418 >= 1 + max( 0, -1 + _rsh( n_gas, 1 ) ) ) exit
27869.                               enddo
27869.                            endif
27869.                         endif
27869.                      endif
27877.                      call monochromatic_radiance( ierr, n_profile, n_layer, d_mass(1, 1), i_angular_integration, i_2stream, l_rescale, n_order_gauss, n_order_phase, ms_min, ms_max, i_truncation, ls_local_trunc(0), accuracy_adaptive, euler_factor, i_sph_algorithm, i_sph_mode, ia_sph_mm(0), cg_coeff(1), uplm_zero(1), uplm_sol(1, 1), i_scatter_method, i_solver, k_gas_abs(1, 1), .false., dummy_ke(1, 1), isolir, diff_planck_band(1, 1), l_ir_source_quad, diff_planck_band_2(1, 1), zen_0(1), zen_00(1, 1), flux_inc_direct(1), flux_inc_down(1), i_direct_part(1, 0), d_planck_flux_surface(1), ls_brdf_trunc, n_brdf_basis_fnc, rho_alb(1, 1), f_brdf(1, 0, 0, 0), brdf_sol(1, 1, 1), brdf_hemi(1, 1, 1), ss_prop, l_cloud, i_cloud, n_cloud_top, n_cloud_type, frac_cloud(1, id_ct, 1), n_region, k_clr, i_region_cloud(1), frac_region(1, id_ct, 1), w_free(1, id_ct), w_cloud(1, id_ct), cloud_overlap(1, -1 + id_ct, 1), n_column_slv(1), list_column_slv(1, 1), i_clm_lyr_chn(1, 1), i_clm_cld_typ(1, 1), area_column(1, 1), n_viewing_level, i_rad_layer(1), frac_rad_layer(1), n_direction, direction(1, 1, 1), flux_direct_part(1, 0), flux_total_part(1, 1), radiance_part(1, 1, 1), photolysis_part(1, 1), l_clear, i_solver_clear, flux_direct_clear_part(1, 0), flux_total_clear_part(1, 1), nd_profile, nd_layer, nd_layer_clr, id_ct, nd_column, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_cloud_type, nd_region, nd_overlap_coeff, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc, nd_viewing_level, nd_direction, nd_source_coeff )
27941.                      if ( ierr /= 0 ) then
27215.                         _free( t$3429 )
27215.                         goto 70
27215.                      endif
27944.                      weight_incr = product_weight * weight_band
27945.                      if ( l_blue_flux_surf /= .false. ) then
27946.                         weight_blue_incr = product_weight * weight_blue
27946.                      endif
27947.                      call augment_radiance( n_profile, n_layer, i_angular_integration, i_sph_mode, n_viewing_level, n_direction, isolir, l_clear, l_initial, weight_incr, l_blue_flux_surf, weight_blue_incr, flux_direct(1, 0), flux_down(1, 0), flux_up(1, 0), flux_direct_blue_surf(1), flux_down_blue_surf(1), flux_up_blue_surf(1), i_direct(1, 0), radiance(1, 1, 1), photolysis(1, 1), flux_direct_clear(1, 0), flux_down_clear(1, 0), flux_up_clear(1, 0), flux_direct_part(1, 0), flux_total_part(1, 1), i_direct_part(1, 0), radiance_part(1, 1, 1), photolysis_part(1, 1), flux_direct_clear_part(1, 0), flux_total_clear_part(1, 1), nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_layer, nd_viewing_level, nd_direction )
27968.                      if ( l_tile /= .false. ) then
27969.                         tm$3033 = loc( flux_direct_part(1, n_layer) )
27969.                         flux_direct_incr = _copyin( flux_direct_part(1, n_layer) )
27969.                         tm$3035 = loc( flux_total_part(1, 2 + 2 * n_layer) )
27969.                         flux_down_incr = _copyin( flux_total_part(1, 2 + 2 * n_layer) )
27969.                         t$132 = nd_point_tile
27969.                         t$1331 = max( 0, nd_point_tile )
27969.                         t$133 = nd_brdf_basis_fnc
27969.                         t$134 = nd_tile
27969.                         t$1332 = max( 0, nd_point_tile )
27969.                         t$1333 = max( 0, nd_brdf_basis_fnc )
27969.                         t$1334 = max( 0, nd_brdf_basis_fnc ) * max( 0, nd_point_tile )
27969.                         t$1335 = max( 0, nd_tile )
27969.                         t$1336 = max( 0, nd_brdf_basis_fnc ) * max( 0, nd_point_tile ) * max( 0, nd_tile )
27969.                         t$1337 = max( 0, nd_point_tile ) * max( 0, nd_tile )
27969.                         t$135 = nd_flux_profile
27969.                         t$1338 = max( 0, nd_flux_profile )
27969.                         if ( l_initial == .false. ) then
27969.                            if ( i_angular_integration == 1 .orelse. i_angular_integration == 2 ) then
27969.                               if ( isolir == 1 ) then
27969.                                  if ( n_tile > 0 ) then
27969.                                     if ( n_point_tile > 0 ) then
27969.                                        $I_L27969_394 = 0
27969.                                        if ( n_tile >= 4 ) then
27969.                                           $I_L27969_440 = 0
27969. !dir$ blocking_size( 1, 1 )
27969.                                           do
27969.                                              $I_L27969_354 = 0
27969. !dir$ ivdep
27969. !dir$ blocking_size( 256, 256 )
27969.                                              do
27969.                                                 $l_S41 = list_tile(1 + $I_L27969_354)
27969.                                                 flux_up_tile(1 + $I_L27969_354, 1 + 4 * $I_L27969_440) = flux_up_tile(1 + $I_L27969_354, 1 + 4 * $I_L27969_440) + weight_incr * ( flux_direct_incr($l_S41) * ( rho_alb_tile(1 + $I_L27969_354, 2, 1 + 4 * $I_L27969_440) + -rho_alb_tile(1 + $I_L27969_354, 1, 1 + 4 * $I_L27969_440) ) + flux_down_incr($l_S41) * rho_alb_tile(1 + $I_L27969_354, 1, 1 + 4 * $I_L27969_440) )
27969.                                                 $l_S41 = list_tile(1 + $I_L27969_354)
27969.                                                 flux_up_tile(1 + $I_L27969_354, 2 + 4 * $I_L27969_440) = flux_up_tile(1 + $I_L27969_354, 2 + 4 * $I_L27969_440) + weight_incr * ( flux_down_incr($l_S41) * rho_alb_tile(1 + $I_L27969_354, 1, 2 + 4 * $I_L27969_440) + flux_direct_incr($l_S41) * ( rho_alb_tile(1 + $I_L27969_354, 2, 2 + 4 * $I_L27969_440) + -rho_alb_tile(1 + $I_L27969_354, 1, 2 + 4 * $I_L27969_440) ) )
27969.                                                 $l_S41 = list_tile(1 + $I_L27969_354)
27969.                                                 flux_up_tile(1 + $I_L27969_354, 3 + 4 * $I_L27969_440) = flux_up_tile(1 + $I_L27969_354, 3 + 4 * $I_L27969_440) + weight_incr * ( flux_down_incr($l_S41) * rho_alb_tile(1 + $I_L27969_354, 1, 3 + 4 * $I_L27969_440) + flux_direct_incr($l_S41) * ( rho_alb_tile(1 + $I_L27969_354, 2, 3 + 4 * $I_L27969_440) + -rho_alb_tile(1 + $I_L27969_354, 1, 3 + 4 * $I_L27969_440) ) )
27969.                                                 $l_S41 = list_tile(1 + $I_L27969_354)
27969.                                                 flux_up_tile(1 + $I_L27969_354, 4 + 4 * $I_L27969_440) = flux_up_tile(1 + $I_L27969_354, 4 + 4 * $I_L27969_440) + weight_incr * ( flux_down_incr($l_S41) * rho_alb_tile(1 + $I_L27969_354, 1, 4 + 4 * $I_L27969_440) + flux_direct_incr($l_S41) * ( rho_alb_tile(1 + $I_L27969_354, 2, 4 + 4 * $I_L27969_440) + -rho_alb_tile(1 + $I_L27969_354, 1, 4 + 4 * $I_L27969_440) ) )
27969.                                                 $I_L27969_354 = 1 + $I_L27969_354
27969.                                                 if ( $I_L27969_354 >= n_point_tile ) exit
27969.                                              enddo
27969.                                              $I_L27969_440 = 1 + $I_L27969_440
27969.                                              if ( $I_L27969_440 >= _rsh( n_tile, 2 ) ) exit
27969.                                           enddo
27969.                                           $I_L27969_394 = and( 0xfffffffffffffffcUL, n_tile )
27969.                                        endif
27969.                                        if ( $I_L27969_394 < n_tile ) then
27969.                                           $I_L27969_434 = 0
27969. !dir$ blocking_size( 1, 1 )
27969.                                           do
27969.                                              $I_L27969_354 = 0
27969. !dir$ ivdep
27969. !dir$ blocking_size( 256, 256 )
27969.                                              do
27969.                                                 $l_S41 = list_tile(1 + $I_L27969_354)
27969.                                                 flux_up_tile(1 + $I_L27969_354, 1 + $I_L27969_394 + $I_L27969_434) = flux_up_tile(1 + $I_L27969_354, 1 + $I_L27969_394 + $I_L27969_434) + weight_incr * ( flux_down_incr($l_S41) * rho_alb_tile(1 + $I_L27969_354, 1, 1 + $I_L27969_394 + $I_L27969_434) + flux_direct_incr($l_S41) * ( rho_alb_tile(1 + $I_L27969_354, 2, 1 + $I_L27969_394 + $I_L27969_434) + -rho_alb_tile(1 + $I_L27969_354, 1, 1 + $I_L27969_394 + $I_L27969_434) ) )
27969.                                                 $I_L27969_354 = 1 + $I_L27969_354
27969.                                                 if ( $I_L27969_354 >= n_point_tile ) exit
27969.                                              enddo
27969.                                              $I_L27969_434 = 1 + $I_L27969_434
27969.                                              if ( $I_L27969_434 >= n_tile + -$I_L27969_394 ) exit
27969.                                           enddo
27969.                                        endif
27969.                                     endif
27969.                                  endif
27969.                                  if ( l_blue_flux_surf /= .false. ) then
27969.                                     if ( n_tile > 0 ) then
27969.                                        if ( n_point_tile > 0 ) then
27969.                                           $I_L27969_396 = 0
27969.                                           if ( n_tile >= 4 ) then
27969.                                              $I_L27969_442 = 0
27969. !dir$ blocking_size( 1, 1 )
27969.                                              do
27969.                                                 $I_L27969_356 = 0
27969. !dir$ ivdep
27969. !dir$ blocking_size( 256, 256 )
27969.                                                 do
27969.                                                    $l_S44 = list_tile(1 + $I_L27969_356)
27969.                                                    flux_up_blue_tile(1 + $I_L27969_356, 1 + 4 * $I_L27969_442) = flux_up_blue_tile(1 + $I_L27969_356, 1 + 4 * $I_L27969_442) + weight_blue_incr * ( flux_direct_incr($l_S44) * ( rho_alb_tile(1 + $I_L27969_356, 2, 1 + 4 * $I_L27969_442) + -rho_alb_tile(1 + $I_L27969_356, 1, 1 + 4 * $I_L27969_442) ) + flux_down_incr($l_S44) * rho_alb_tile(1 + $I_L27969_356, 1, 1 + 4 * $I_L27969_442) )
27969.                                                    $l_S44 = list_tile(1 + $I_L27969_356)
27969.                                                    flux_up_blue_tile(1 + $I_L27969_356, 2 + 4 * $I_L27969_442) = flux_up_blue_tile(1 + $I_L27969_356, 2 + 4 * $I_L27969_442) + weight_blue_incr * ( flux_down_incr($l_S44) * rho_alb_tile(1 + $I_L27969_356, 1, 2 + 4 * $I_L27969_442) + flux_direct_incr($l_S44) * ( rho_alb_tile(1 + $I_L27969_356, 2, 2 + 4 * $I_L27969_442) + -rho_alb_tile(1 + $I_L27969_356, 1, 2 + 4 * $I_L27969_442) ) )
27969.                                                    $l_S44 = list_tile(1 + $I_L27969_356)
27969.                                                    flux_up_blue_tile(1 + $I_L27969_356, 3 + 4 * $I_L27969_442) = flux_up_blue_tile(1 + $I_L27969_356, 3 + 4 * $I_L27969_442) + weight_blue_incr * ( flux_down_incr($l_S44) * rho_alb_tile(1 + $I_L27969_356, 1, 3 + 4 * $I_L27969_442) + flux_direct_incr($l_S44) * ( rho_alb_tile(1 + $I_L27969_356, 2, 3 + 4 * $I_L27969_442) + -rho_alb_tile(1 + $I_L27969_356, 1, 3 + 4 * $I_L27969_442) ) )
27969.                                                    $l_S44 = list_tile(1 + $I_L27969_356)
27969.                                                    flux_up_blue_tile(1 + $I_L27969_356, 4 + 4 * $I_L27969_442) = flux_up_blue_tile(1 + $I_L27969_356, 4 + 4 * $I_L27969_442) + weight_blue_incr * ( flux_down_incr($l_S44) * rho_alb_tile(1 + $I_L27969_356, 1, 4 + 4 * $I_L27969_442) + flux_direct_incr($l_S44) * ( rho_alb_tile(1 + $I_L27969_356, 2, 4 + 4 * $I_L27969_442) + -rho_alb_tile(1 + $I_L27969_356, 1, 4 + 4 * $I_L27969_442) ) )
27969.                                                    $I_L27969_356 = 1 + $I_L27969_356
27969.                                                    if ( $I_L27969_356 >= n_point_tile ) exit
27969.                                                 enddo
27969.                                                 $I_L27969_442 = 1 + $I_L27969_442
27969.                                                 if ( $I_L27969_442 >= _rsh( n_tile, 2 ) ) exit
27969.                                              enddo
27969.                                              $I_L27969_396 = and( 0xfffffffffffffffcUL, n_tile )
27969.                                           endif
27969.                                           if ( $I_L27969_396 < n_tile ) then
27969.                                              $I_L27969_437 = 0
27969. !dir$ blocking_size( 1, 1 )
27969.                                              do
27969.                                                 $I_L27969_356 = 0
27969. !dir$ ivdep
27969. !dir$ blocking_size( 256, 256 )
27969.                                                 do
27969.                                                    $l_S44 = list_tile(1 + $I_L27969_356)
27969.                                                    flux_up_blue_tile(1 + $I_L27969_356, 1 + $I_L27969_396 + $I_L27969_437) = flux_up_blue_tile(1 + $I_L27969_356, 1 + $I_L27969_396 + $I_L27969_437) + weight_blue_incr * ( flux_down_incr($l_S44) * rho_alb_tile(1 + $I_L27969_356, 1, 1 + $I_L27969_396 + $I_L27969_437) + flux_direct_incr($l_S44) * ( rho_alb_tile(1 + $I_L27969_356, 2, 1 + $I_L27969_396 + $I_L27969_437) + -rho_alb_tile(1 + $I_L27969_356, 1, 1 + $I_L27969_396 + $I_L27969_437) ) )
27969.                                                    $I_L27969_356 = 1 + $I_L27969_356
27969.                                                    if ( $I_L27969_356 >= n_point_tile ) exit
27969.                                                 enddo
27969.                                                 $I_L27969_437 = 1 + $I_L27969_437
27969.                                                 if ( $I_L27969_437 >= n_tile + -$I_L27969_396 ) exit
27969.                                              enddo
27969.                                           endif
27969.                                        endif
27969.                                     endif
27969.                                  endif
27969.                               else if ( isolir == 2 ) then
27969.                                  if ( n_tile > 0 ) then
27969.                                     if ( n_point_tile > 0 ) then
27969.                                        $I_L27969_392 = 0
27969.                                        if ( n_tile >= 4 ) then
27969.                                           $I_L27969_444 = 0
27969. !dir$ blocking_size( 1, 1 )
27969.                                           do
27969.                                              $I_L27969_352 = 0
27969. !dir$ ivdep
27969. !dir$ blocking_size( 256, 256 )
27969.                                              do
27969.                                                 $l_S47 = list_tile(1 + $I_L27969_352)
27969.                                                 flux_up_tile(1 + $I_L27969_352, 1 + 4 * $I_L27969_444) = flux_up_tile(1 + $I_L27969_352, 1 + 4 * $I_L27969_444) + weight_incr * ( planck_flux_tile(1 + $I_L27969_352, 1 + 4 * $I_L27969_444) + rho_alb_tile(1 + $I_L27969_352, 1, 1 + 4 * $I_L27969_444) * ( planck_flux_bottom($l_S47) + flux_down_incr($l_S47) + -planck_flux_tile(1 + $I_L27969_352, 1 + 4 * $I_L27969_444) ) )
27969.                                                 $l_S47 = list_tile(1 + $I_L27969_352)
27969.                                                 flux_up_tile(1 + $I_L27969_352, 2 + 4 * $I_L27969_444) = flux_up_tile(1 + $I_L27969_352, 2 + 4 * $I_L27969_444) + weight_incr * ( planck_flux_tile(1 + $I_L27969_352, 2 + 4 * $I_L27969_444) + rho_alb_tile(1 + $I_L27969_352, 1, 2 + 4 * $I_L27969_444) * ( planck_flux_bottom($l_S47) + flux_down_incr($l_S47) + -planck_flux_tile(1 + $I_L27969_352, 2 + 4 * $I_L27969_444) ) )
27969.                                                 $l_S47 = list_tile(1 + $I_L27969_352)
27969.                                                 flux_up_tile(1 + $I_L27969_352, 3 + 4 * $I_L27969_444) = flux_up_tile(1 + $I_L27969_352, 3 + 4 * $I_L27969_444) + weight_incr * ( planck_flux_tile(1 + $I_L27969_352, 3 + 4 * $I_L27969_444) + rho_alb_tile(1 + $I_L27969_352, 1, 3 + 4 * $I_L27969_444) * ( planck_flux_bottom($l_S47) + flux_down_incr($l_S47) + -planck_flux_tile(1 + $I_L27969_352, 3 + 4 * $I_L27969_444) ) )
27969.                                                 $l_S47 = list_tile(1 + $I_L27969_352)
27969.                                                 flux_up_tile(1 + $I_L27969_352, 4 + 4 * $I_L27969_444) = flux_up_tile(1 + $I_L27969_352, 4 + 4 * $I_L27969_444) + weight_incr * ( planck_flux_tile(1 + $I_L27969_352, 4 + 4 * $I_L27969_444) + rho_alb_tile(1 + $I_L27969_352, 1, 4 + 4 * $I_L27969_444) * ( planck_flux_bottom($l_S47) + flux_down_incr($l_S47) + -planck_flux_tile(1 + $I_L27969_352, 4 + 4 * $I_L27969_444) ) )
27969.                                                 $I_L27969_352 = 1 + $I_L27969_352
27969.                                                 if ( $I_L27969_352 >= n_point_tile ) exit
27969.                                              enddo
27969.                                              $I_L27969_444 = 1 + $I_L27969_444
27969.                                              if ( $I_L27969_444 >= _rsh( n_tile, 2 ) ) exit
27969.                                           enddo
27969.                                           $I_L27969_392 = and( 0xfffffffffffffffcUL, n_tile )
27969.                                        endif
27969.                                        if ( $I_L27969_392 < n_tile ) then
27969.                                           $I_L27969_431 = 0
27969. !dir$ blocking_size( 1, 1 )
27969.                                           do
27969.                                              $I_L27969_352 = 0
27969. !dir$ ivdep
27969. !dir$ blocking_size( 256, 256 )
27969.                                              do
27969.                                                 $l_S47 = list_tile(1 + $I_L27969_352)
27969.                                                 flux_up_tile(1 + $I_L27969_352, 1 + $I_L27969_392 + $I_L27969_431) = flux_up_tile(1 + $I_L27969_352, 1 + $I_L27969_392 + $I_L27969_431) + weight_incr * ( planck_flux_tile(1 + $I_L27969_352, 1 + $I_L27969_392 + $I_L27969_431) + rho_alb_tile(1 + $I_L27969_352, 1, 1 + $I_L27969_392 + $I_L27969_431) * ( planck_flux_bottom($l_S47) + flux_down_incr($l_S47) + -planck_flux_tile(1 + $I_L27969_352, 1 + $I_L27969_392 + $I_L27969_431) ) )
27969.                                                 $I_L27969_352 = 1 + $I_L27969_352
27969.                                                 if ( $I_L27969_352 >= n_point_tile ) exit
27969.                                              enddo
27969.                                              $I_L27969_431 = 1 + $I_L27969_431
27969.                                              if ( $I_L27969_431 >= n_tile + -$I_L27969_392 ) exit
27969.                                           enddo
27969.                                        endif
27969.                                     endif
27969.                                  endif
27969.                               endif
27969.                            else
27969.                               if ( i_angular_integration == 3 ) then
27969.                                  _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$137,  _substr(t$136,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Tiled surfaces have not yet been ', 0x800600000000L ), _iotype( 'implemented with the spherical harmonic solver.', 0x800600000000L ) ) )
27969.                                  ierr = 1
27969.                               endif
27969.                            endif
27969.                         else if ( i_angular_integration == 1 ) then
27969.                            goto 40
27969.                            goto 50
27969.                         else if ( i_angular_integration == 2 ) then
27969.    40                      continue
27969.                            if ( isolir == 1 ) then
27969.                               if ( n_tile > 0 ) then
27969.                                  if ( n_point_tile > 0 ) then
27969.                                     $I_L27969_388 = 0
27969.                                     if ( n_tile >= 4 ) then
27969.                                        $I_L27969_446 = 0
27969. !dir$ blocking_size( 1, 1 )
27969.                                        do
27969.                                           $I_L27969_348 = 0
27969. !dir$ ivdep
27969. !dir$ blocking_size( 256, 256 )
27969.                                           do
27969.                                              $l_S50 = list_tile(1 + $I_L27969_348)
27969.                                              flux_up_tile(1 + $I_L27969_348, 1 + 4 * $I_L27969_446) = weight_incr * ( flux_direct_incr($l_S50) * ( rho_alb_tile(1 + $I_L27969_348, 2, 1 + 4 * $I_L27969_446) + -rho_alb_tile(1 + $I_L27969_348, 1, 1 + 4 * $I_L27969_446) ) + flux_down_incr($l_S50) * rho_alb_tile(1 + $I_L27969_348, 1, 1 + 4 * $I_L27969_446) )
27969.                                              $l_S50 = list_tile(1 + $I_L27969_348)
27969.                                              flux_up_tile(1 + $I_L27969_348, 2 + 4 * $I_L27969_446) = weight_incr * ( flux_down_incr($l_S50) * rho_alb_tile(1 + $I_L27969_348, 1, 2 + 4 * $I_L27969_446) + flux_direct_incr($l_S50) * ( rho_alb_tile(1 + $I_L27969_348, 2, 2 + 4 * $I_L27969_446) + -rho_alb_tile(1 + $I_L27969_348, 1, 2 + 4 * $I_L27969_446) ) )
27969.                                              $l_S50 = list_tile(1 + $I_L27969_348)
27969.                                              flux_up_tile(1 + $I_L27969_348, 3 + 4 * $I_L27969_446) = weight_incr * ( flux_down_incr($l_S50) * rho_alb_tile(1 + $I_L27969_348, 1, 3 + 4 * $I_L27969_446) + flux_direct_incr($l_S50) * ( rho_alb_tile(1 + $I_L27969_348, 2, 3 + 4 * $I_L27969_446) + -rho_alb_tile(1 + $I_L27969_348, 1, 3 + 4 * $I_L27969_446) ) )
27969.                                              $l_S50 = list_tile(1 + $I_L27969_348)
27969.                                              flux_up_tile(1 + $I_L27969_348, 4 + 4 * $I_L27969_446) = weight_incr * ( flux_down_incr($l_S50) * rho_alb_tile(1 + $I_L27969_348, 1, 4 + 4 * $I_L27969_446) + flux_direct_incr($l_S50) * ( rho_alb_tile(1 + $I_L27969_348, 2, 4 + 4 * $I_L27969_446) + -rho_alb_tile(1 + $I_L27969_348, 1, 4 + 4 * $I_L27969_446) ) )
27969.                                              $I_L27969_348 = 1 + $I_L27969_348
27969.                                              if ( $I_L27969_348 >= n_point_tile ) exit
27969.                                           enddo
27969.                                           $I_L27969_446 = 1 + $I_L27969_446
27969.                                           if ( $I_L27969_446 >= _rsh( n_tile, 2 ) ) exit
27969.                                        enddo
27969.                                        $I_L27969_388 = and( 0xfffffffffffffffcUL, n_tile )
27969.                                     endif
27969.                                     if ( $I_L27969_388 < n_tile ) then
27969.                                        $I_L27969_425 = 0
27969. !dir$ blocking_size( 1, 1 )
27969.                                        do
27969.                                           $I_L27969_348 = 0
27969. !dir$ ivdep
27969. !dir$ blocking_size( 256, 256 )
27969.                                           do
27969.                                              $l_S50 = list_tile(1 + $I_L27969_348)
27969.                                              flux_up_tile(1 + $I_L27969_348, 1 + $I_L27969_388 + $I_L27969_425) = weight_incr * ( flux_down_incr($l_S50) * rho_alb_tile(1 + $I_L27969_348, 1, 1 + $I_L27969_388 + $I_L27969_425) + flux_direct_incr($l_S50) * ( rho_alb_tile(1 + $I_L27969_348, 2, 1 + $I_L27969_388 + $I_L27969_425) + -rho_alb_tile(1 + $I_L27969_348, 1, 1 + $I_L27969_388 + $I_L27969_425) ) )
27969.                                              $I_L27969_348 = 1 + $I_L27969_348
27969.                                              if ( $I_L27969_348 >= n_point_tile ) exit
27969.                                           enddo
27969.                                           $I_L27969_425 = 1 + $I_L27969_425
27969.                                           if ( $I_L27969_425 >= n_tile + -$I_L27969_388 ) exit
27969.                                        enddo
27969.                                     endif
27969.                                  endif
27969.                               endif
27969.                               if ( l_blue_flux_surf /= .false. ) then
27969.                                  if ( n_tile > 0 ) then
27969.                                     if ( n_point_tile > 0 ) then
27969.                                        $I_L27969_390 = 0
27969.                                        if ( n_tile >= 4 ) then
27969.                                           $I_L27969_448 = 0
27969. !dir$ blocking_size( 1, 1 )
27969.                                           do
27969.                                              $I_L27969_350 = 0
27969. !dir$ ivdep
27969. !dir$ blocking_size( 256, 256 )
27969.                                              do
27969.                                                 $l_S53 = list_tile(1 + $I_L27969_350)
27969.                                                 flux_up_blue_tile(1 + $I_L27969_350, 1 + 4 * $I_L27969_448) = weight_blue_incr * ( flux_direct_incr($l_S53) * ( rho_alb_tile(1 + $I_L27969_350, 2, 1 + 4 * $I_L27969_448) + -rho_alb_tile(1 + $I_L27969_350, 1, 1 + 4 * $I_L27969_448) ) + flux_down_incr($l_S53) * rho_alb_tile(1 + $I_L27969_350, 1, 1 + 4 * $I_L27969_448) )
27969.                                                 $l_S53 = list_tile(1 + $I_L27969_350)
27969.                                                 flux_up_blue_tile(1 + $I_L27969_350, 2 + 4 * $I_L27969_448) = weight_blue_incr * ( flux_down_incr($l_S53) * rho_alb_tile(1 + $I_L27969_350, 1, 2 + 4 * $I_L27969_448) + flux_direct_incr($l_S53) * ( rho_alb_tile(1 + $I_L27969_350, 2, 2 + 4 * $I_L27969_448) + -rho_alb_tile(1 + $I_L27969_350, 1, 2 + 4 * $I_L27969_448) ) )
27969.                                                 $l_S53 = list_tile(1 + $I_L27969_350)
27969.                                                 flux_up_blue_tile(1 + $I_L27969_350, 3 + 4 * $I_L27969_448) = weight_blue_incr * ( flux_down_incr($l_S53) * rho_alb_tile(1 + $I_L27969_350, 1, 3 + 4 * $I_L27969_448) + flux_direct_incr($l_S53) * ( rho_alb_tile(1 + $I_L27969_350, 2, 3 + 4 * $I_L27969_448) + -rho_alb_tile(1 + $I_L27969_350, 1, 3 + 4 * $I_L27969_448) ) )
27969.                                                 $l_S53 = list_tile(1 + $I_L27969_350)
27969.                                                 flux_up_blue_tile(1 + $I_L27969_350, 4 + 4 * $I_L27969_448) = weight_blue_incr * ( flux_down_incr($l_S53) * rho_alb_tile(1 + $I_L27969_350, 1, 4 + 4 * $I_L27969_448) + flux_direct_incr($l_S53) * ( rho_alb_tile(1 + $I_L27969_350, 2, 4 + 4 * $I_L27969_448) + -rho_alb_tile(1 + $I_L27969_350, 1, 4 + 4 * $I_L27969_448) ) )
27969.                                                 $I_L27969_350 = 1 + $I_L27969_350
27969.                                                 if ( $I_L27969_350 >= n_point_tile ) exit
27969.                                              enddo
27969.                                              $I_L27969_448 = 1 + $I_L27969_448
27969.                                              if ( $I_L27969_448 >= _rsh( n_tile, 2 ) ) exit
27969.                                           enddo
27969.                                           $I_L27969_390 = and( 0xfffffffffffffffcUL, n_tile )
27969.                                        endif
27969.                                        if ( $I_L27969_390 < n_tile ) then
27969.                                           $I_L27969_428 = 0
27969. !dir$ blocking_size( 1, 1 )
27969.                                           do
27969.                                              $I_L27969_350 = 0
27969. !dir$ ivdep
27969. !dir$ blocking_size( 256, 256 )
27969.                                              do
27969.                                                 $l_S53 = list_tile(1 + $I_L27969_350)
27969.                                                 flux_up_blue_tile(1 + $I_L27969_350, 1 + $I_L27969_390 + $I_L27969_428) = weight_blue_incr * ( flux_down_incr($l_S53) * rho_alb_tile(1 + $I_L27969_350, 1, 1 + $I_L27969_390 + $I_L27969_428) + flux_direct_incr($l_S53) * ( rho_alb_tile(1 + $I_L27969_350, 2, 1 + $I_L27969_390 + $I_L27969_428) + -rho_alb_tile(1 + $I_L27969_350, 1, 1 + $I_L27969_390 + $I_L27969_428) ) )
27969.                                                 $I_L27969_350 = 1 + $I_L27969_350
27969.                                                 if ( $I_L27969_350 >= n_point_tile ) exit
27969.                                              enddo
27969.                                              $I_L27969_428 = 1 + $I_L27969_428
27969.                                              if ( $I_L27969_428 >= n_tile + -$I_L27969_390 ) exit
27969.                                           enddo
27969.                                        endif
27969.                                     endif
27969.                                  endif
27969.                               endif
27969.                            else if ( isolir == 2 ) then
27969.                               if ( n_tile > 0 ) then
27969.                                  if ( n_point_tile > 0 ) then
27969.                                     $I_L27969_386 = 0
27969.                                     if ( n_tile >= 4 ) then
27969.                                        $I_L27969_450 = 0
27969. !dir$ blocking_size( 1, 1 )
27969.                                        do
27969.                                           $I_L27969_346 = 0
27969. !dir$ ivdep
27969. !dir$ blocking_size( 256, 256 )
27969.                                           do
27969.                                              $l_S56 = list_tile(1 + $I_L27969_346)
27969.                                              flux_up_tile(1 + $I_L27969_346, 1 + 4 * $I_L27969_450) = weight_incr * ( planck_flux_tile(1 + $I_L27969_346, 1 + 4 * $I_L27969_450) + rho_alb_tile(1 + $I_L27969_346, 1, 1 + 4 * $I_L27969_450) * ( planck_flux_bottom($l_S56) + flux_down_incr($l_S56) + -planck_flux_tile(1 + $I_L27969_346, 1 + 4 * $I_L27969_450) ) )
27969.                                              $l_S56 = list_tile(1 + $I_L27969_346)
27969.                                              flux_up_tile(1 + $I_L27969_346, 2 + 4 * $I_L27969_450) = weight_incr * ( planck_flux_tile(1 + $I_L27969_346, 2 + 4 * $I_L27969_450) + rho_alb_tile(1 + $I_L27969_346, 1, 2 + 4 * $I_L27969_450) * ( planck_flux_bottom($l_S56) + flux_down_incr($l_S56) + -planck_flux_tile(1 + $I_L27969_346, 2 + 4 * $I_L27969_450) ) )
27969.                                              $l_S56 = list_tile(1 + $I_L27969_346)
27969.                                              flux_up_tile(1 + $I_L27969_346, 3 + 4 * $I_L27969_450) = weight_incr * ( planck_flux_tile(1 + $I_L27969_346, 3 + 4 * $I_L27969_450) + rho_alb_tile(1 + $I_L27969_346, 1, 3 + 4 * $I_L27969_450) * ( planck_flux_bottom($l_S56) + flux_down_incr($l_S56) + -planck_flux_tile(1 + $I_L27969_346, 3 + 4 * $I_L27969_450) ) )
27969.                                              $l_S56 = list_tile(1 + $I_L27969_346)
27969.                                              flux_up_tile(1 + $I_L27969_346, 4 + 4 * $I_L27969_450) = weight_incr * ( planck_flux_tile(1 + $I_L27969_346, 4 + 4 * $I_L27969_450) + rho_alb_tile(1 + $I_L27969_346, 1, 4 + 4 * $I_L27969_450) * ( planck_flux_bottom($l_S56) + flux_down_incr($l_S56) + -planck_flux_tile(1 + $I_L27969_346, 4 + 4 * $I_L27969_450) ) )
27969.                                              $I_L27969_346 = 1 + $I_L27969_346
27969.                                              if ( $I_L27969_346 >= n_point_tile ) exit
27969.                                           enddo
27969.                                           $I_L27969_450 = 1 + $I_L27969_450
27969.                                           if ( $I_L27969_450 >= _rsh( n_tile, 2 ) ) exit
27969.                                        enddo
27969.                                        $I_L27969_386 = and( 0xfffffffffffffffcUL, n_tile )
27969.                                     endif
27969.                                     if ( $I_L27969_386 < n_tile ) then
27969.                                        $I_L27969_422 = 0
27969. !dir$ blocking_size( 1, 1 )
27969.                                        do
27969.                                           $I_L27969_346 = 0
27969. !dir$ ivdep
27969. !dir$ blocking_size( 256, 256 )
27969.                                           do
27969.                                              $l_S56 = list_tile(1 + $I_L27969_346)
27969.                                              flux_up_tile(1 + $I_L27969_346, 1 + $I_L27969_386 + $I_L27969_422) = weight_incr * ( planck_flux_tile(1 + $I_L27969_346, 1 + $I_L27969_386 + $I_L27969_422) + rho_alb_tile(1 + $I_L27969_346, 1, 1 + $I_L27969_386 + $I_L27969_422) * ( planck_flux_bottom($l_S56) + flux_down_incr($l_S56) + -planck_flux_tile(1 + $I_L27969_346, 1 + $I_L27969_386 + $I_L27969_422) ) )
27969.                                              $I_L27969_346 = 1 + $I_L27969_346
27969.                                              if ( $I_L27969_346 >= n_point_tile ) exit
27969.                                           enddo
27969.                                           $I_L27969_422 = 1 + $I_L27969_422
27969.                                           if ( $I_L27969_422 >= n_tile + -$I_L27969_386 ) exit
27969.                                        enddo
27969.                                     endif
27969.                                  endif
27969.                               endif
27969.                            endif
27969.                            goto 50
27969.                         else if ( i_angular_integration == 3 ) then
27969.                            _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$139,  _substr(t$138,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Tiled surfaces have not yet been ', 0x800600000000L ), _iotype( 'implemented with the spherical harmonic solver.', 0x800600000000L ) ) )
27969.                            ierr = 1
27969.                         else
27969.    50                      continue
27969.                            l_initial = .false.
27969.                         endif
27969.                         flux_total_part(1, 2 + 2 * n_layer) = _copyout( flux_down_incr )
27969.                         flux_direct_part(1, n_layer) = _copyout( flux_direct_incr )
27985.                         if ( ierr /= 0 ) then
27215.                            _free( t$3429 )
27215.                            goto 70
27215.                         endif
27990.                         l_initial = .false.
27992.                         $I_L27784_420 = 1 + $I_L27784_420
27986.                      else
27986.                      endif
27986.                   else
27986.                   endif
27986.                   if ( $I_L27784_420 >= $SC_i_band_esft_I4 ) exit
27986.                enddo
27994.                if ( n_gas <= 1 ) then
27215.                   _free( t$3429 )
27215.                   goto 70
27215.                endif
27999.                $index_change_S59 = index_absorb(-1 + n_gas, i_band)
28000.                if ( i_band_esft(i_band, $index_change_S59) > i_esft_pointer($index_change_S59) ) then
28002.                   i_esft_pointer($index_change_S59) = 1 + i_esft_pointer($index_change_S59)
28005.                   k_esft_mono($index_change_S59) = k_esft(i_esft_pointer($index_change_S59), i_band, $index_change_S59)
28008.                   if ( i_scale_esft(i_band, $index_change_S59) == 2 ) then
28010.                      tm$3059 = loc( gas_mix_ratio(1, 1, $index_change_S59) )
28010.                      gas_mix_ratio = _copyin( gas_mix_ratio(1, 1, $index_change_S59) )
28010.                      tm$3061 = loc( gas_frac_rescaled(1, 1, $index_change_S59) )
28010.                      gas_frac_rescaled = _copyin( gas_frac_rescaled(1, 1, $index_change_S59) )
28010.                      tm$3063 = loc( scale_vector(1, i_esft_pointer($index_change_S59), i_band, $index_change_S59) )
28010.                      scale_parameter = _copyin( scale_vector(1, i_esft_pointer($index_change_S59), i_band, $index_change_S59) )
28010.                      t$734 = nd_profile
28010.                      t$735 = nd_layer
28010.                      t$2851 = max( 0, nd_profile )
28010.                      t$2852 = max( 0, nd_profile )
28010.                      t$2853 = max( 0, nd_layer )
28010.                      t$2854 = max( 0, nd_profile ) * max( 0, nd_layer )
28010.                      t$736 = nd_scale_variable
28010.                      t$2855 = max( 0, nd_scale_variable )
28010.                      if ( l_doppler($index_change_S59) /= .false. ) then
28010.                         $pressure_offset_S62 = doppler_correction($index_change_S59)
28010.                      else
28010.                         $pressure_offset_S62 = 0.0
28010.                      endif
28010.                      if ( i_scale_fnc(i_band, $index_change_S59) == 1 ) then
28010.                         if ( nd_layer > 0 ) then
28010.                            $SC_scale_parameter_I12 = scale_parameter(2)
28010.                            $SC_scale_parameter_I11 = scale_parameter(1)
28010.                            if ( nd_profile > 0 ) then
28010.                               $SC_p_reference_I21 = p_reference($index_change_S59, i_band)
28010.                               $SC_t_reference_I20 = t_reference($index_change_S59, i_band)
28010.                               $I_L28010_402 = 0
28010.                               do
28010.                                  $I_L28010_364 = 0
28010. !dir$ ivdep
28010.                                  do
28010.                                     gas_frac_rescaled(1 + $I_L28010_364, 1 + $I_L28010_402) = _expn( $SC_scale_parameter_I12 * log( ( t(1 + $I_L28010_364, 1 + $I_L28010_402) * 1.0/$SC_t_reference_I20 ) ) + $SC_scale_parameter_I11 * log( ( 1.0/( $pressure_offset_S62 + $SC_p_reference_I21 ) * ( $pressure_offset_S62 + p(1 + $I_L28010_364, 1 + $I_L28010_402) ) ) ) )
28010.                                     $I_L28010_364 = 1 + $I_L28010_364
28010.                                     if ( $I_L28010_364 >= nd_profile ) exit
28010.                                  enddo
28010.                                  $I_L28010_402 = 1 + $I_L28010_402
28010.                                  if ( $I_L28010_402 >= nd_layer ) exit
28010.                               enddo
28010.                            endif
28010.                         endif
28010.                         goto 60
28010.                      else if ( i_scale_fnc(i_band, $index_change_S59) /= 0 ) then
28010.                         if ( i_scale_fnc(i_band, $index_change_S59) == 2 ) then
28010.                            if ( nd_layer > 0 ) then
28010.                               $SC_scale_parameter_I13 = scale_parameter(3)
28010.                               $SC_scale_parameter_I12 = scale_parameter(2)
28010.                               $SC_scale_parameter_I11 = scale_parameter(1)
28010.                               if ( nd_profile > 0 ) then
28010.                                  $SC_p_reference_I21 = p_reference($index_change_S59, i_band)
28010.                                  $SC_t_reference_I20 = t_reference($index_change_S59, i_band)
28010.                                  $I_L28010_400 = 0
28010.                                  do
28010.                                     $I_L28010_362 = 0
28010. !dir$ ivdep
28010.                                     do
28010.                                        gas_frac_rescaled(1 + $I_L28010_362, 1 + $I_L28010_400) = ( 1.0 + $SC_scale_parameter_I13 * ( -1.0 + ( t(1 + $I_L28010_362, 1 + $I_L28010_400) * 1.0/$SC_t_reference_I20 ) ) * ( -1.0 + ( t(1 + $I_L28010_362, 1 + $I_L28010_400) * 1.0/$SC_t_reference_I20 ) ) + $SC_scale_parameter_I12 * ( -1.0 + ( t(1 + $I_L28010_362, 1 + $I_L28010_400) * 1.0/$SC_t_reference_I20 ) ) ) * _expn( $SC_scale_parameter_I11 * log( ( 1.0/( $pressure_offset_S62 + $SC_p_reference_I21 ) * ( $pressure_offset_S62 + p(1 + $I_L28010_362, 1 + $I_L28010_400) ) ) ) )
28010.                                        $I_L28010_362 = 1 + $I_L28010_362
28010.                                        if ( $I_L28010_362 >= nd_profile ) exit
28010.                                     enddo
28010.                                     $I_L28010_400 = 1 + $I_L28010_400
28010.                                     if ( $I_L28010_400 >= nd_layer ) exit
28010.                                  enddo
28010.                               endif
28010.                            endif
28010.                            goto 60
28010.                         else if ( i_scale_fnc(i_band, $index_change_S59) == 3 ) then
28010.                            if ( nd_layer > 0 ) then
28010.                               $SC_scale_parameter_I14 = scale_parameter(4)
28010.                               $SC_scale_parameter_I13 = scale_parameter(3)
28010.                               $SC_scale_parameter_I12 = scale_parameter(2)
28010.                               $SC_scale_parameter_I11 = scale_parameter(1)
28010.                               if ( nd_profile > 0 ) then
28010.                                  $SC_p_reference_I21 = p_reference($index_change_S59, i_band)
28010.                                  $SC_t_reference_I20 = t_reference($index_change_S59, i_band)
28010.                                  $I_L28010_398 = 0
28010.                                  do
28010.                                     $I_L28010_360 = 0
28010. !dir$ ivdep
28010.                                     do
28010.                                        gas_frac_rescaled(1 + $I_L28010_360, 1 + $I_L28010_398) = ( 1.0 + $SC_scale_parameter_I14 * ( -1.0 + ( t(1 + $I_L28010_360, 1 + $I_L28010_398) * 1.0/$SC_t_reference_I20 ) ) * ( -1.0 + ( t(1 + $I_L28010_360, 1 + $I_L28010_398) * 1.0/$SC_t_reference_I20 ) ) + $SC_scale_parameter_I13 * ( -1.0 + ( t(1 + $I_L28010_360, 1 + $I_L28010_398) * 1.0/$SC_t_reference_I20 ) ) ) * _expn( $SC_scale_parameter_I11 * log( ( 1.0/( $SC_scale_parameter_I12 + $SC_p_reference_I21 ) * ( $SC_scale_parameter_I12 + p(1 + $I_L28010_360, 1 + $I_L28010_398) ) ) ) )
28010.                                        $I_L28010_360 = 1 + $I_L28010_360
28010.                                        if ( $I_L28010_360 >= nd_profile ) exit
28010.                                     enddo
28010.                                     $I_L28010_398 = 1 + $I_L28010_398
28010.                                     if ( $I_L28010_398 >= nd_layer ) exit
28010.                                  enddo
28010.                               endif
28010.                            endif
28010.    60                      continue
28010.                            if ( nd_layer > 0 ) then
28010.                               if ( nd_profile > 0 ) then
28010.                                  $I_L28010_404 = 0
28010.                                  do
28010.                                     $I_L28010_366 = 0
28010. !dir$ ivdep
28010.                                     do
28010.                                        gas_frac_rescaled(1 + $I_L28010_366, 1 + $I_L28010_404) = max( 0.0, gas_frac_rescaled(1 + $I_L28010_366, 1 + $I_L28010_404) * gas_mix_ratio(1 + $I_L28010_366, 1 + $I_L28010_404) )
28010.                                        $I_L28010_366 = 1 + $I_L28010_366
28010.                                        if ( $I_L28010_366 >= nd_profile ) exit
28010.                                     enddo
28010.                                     $I_L28010_404 = 1 + $I_L28010_404
28010.                                     if ( $I_L28010_404 >= nd_layer ) exit
28010.                                  enddo
28010.                               endif
28010.                            endif
28010.                         else
28010.                            _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$738,  _substr(t$737,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: An illegal type of scaling has been given.', 0x800600000000L ) ) )
28010.                            ierr = 1
28010.                         endif
28010.                      endif
28010.                      scale_vector(1, i_esft_pointer($index_change_S59), i_band, $index_change_S59) = _copyout( scale_parameter )
28010.                      gas_frac_rescaled(1, 1, $index_change_S59) = _copyout( gas_frac_rescaled )
28010.                      gas_mix_ratio(1, 1, $index_change_S59) = _copyout( gas_mix_ratio )
28024.                      if ( ierr /= 0 ) then
27215.                         _free( t$3429 )
27215.                         goto 70
27215.                      endif
28025.                   else
28025.                   endif
28027.                else if ( -2 + n_gas > 0 ) then
28027.                else
28027.                endif
28027.             else
28027.             endif
28027.          enddo
28027.       endif
28027.    70 continue
28040.       return
28040.       end
28040.       
28059.       
28059.       subroutine solve_band_without_gas( ierr, n_profile, n_layer, d_mass, i_angular_integration, i_2stream, n_order_phase, l_rescale, n_order_gauss, ms_min, ms_max, i_truncation, ls_local_trunc, accuracy_adaptive, euler_factor, i_sph_algorithm, i_sph_mode, ia_sph_mm, cg_coeff, uplm_zero, uplm_sol, i_scatter_method, i_solver, isolir, zen_0, zen_00, solar_irrad, planck_flux_top, planck_flux_bottom, diff_planck_band, l_ir_source_quad, diff_planck_band_2, ls_brdf_trunc, n_brdf_basis_fnc, rho_alb, f_brdf, brdf_sol, brdf_hemi, planck_flux_ground, l_tile, n_point_tile, n_tile, list_tile, rho_alb_tile, planck_flux_tile, ss_prop, l_cloud, i_cloud, n_cloud_top, n_cloud_type, frac_cloud, n_region, k_clr, i_region_cloud, frac_region, w_free, w_cloud, cloud_overlap, n_column_slv, list_column_slv, i_clm_lyr_chn, i_clm_cld_typ, area_column, n_viewing_level, i_rad_layer, frac_rad_layer, n_direction, direction, weight_band, l_initial, flux_direct, flux_down, flux_up, i_direct, radiance, photolysis, l_clear, i_solver_clear, flux_direct_clear, flux_down_clear, flux_up_clear, flux_up_tile, flux_up_blue_tile, l_blue_flux_surf, weight_blue, flux_direct_blue_surf, flux_down_blue_surf, flux_up_blue_surf, nd_profile, nd_layer, nd_layer_clr, id_ct, nd_column, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_cloud_type, nd_region, nd_overlap_coeff, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc, nd_viewing_level, nd_direction, nd_source_coeff, nd_point_tile, nd_tile )
28059.       t$877 = nd_profile
28059.       t$878 = nd_layer
28201.       t$3474 = _zla( 0, nd_profile )
28059.       t$3475 = _zla( 0, nd_profile )
28201.       t$3476 = _zla( 0, nd_layer )
28059.       t$3477 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
28059.       t$879 = nd_max_order
28059.       t$3478 = 1 + nd_max_order
28223.       t$3479 = _zla( 0, 1 + nd_max_order )
28059.       t$880 = nd_sph_coeff
28233.       t$3480 = _zla( 0, nd_sph_coeff )
28059.       t$881 = nd_radiance_profile
28237.       t$3481 = _zla( 0, nd_radiance_profile )
28059.       t$3482 = _zla( 0, nd_radiance_profile )
28059.       t$3483 = _zla( 0, nd_sph_coeff ) * _zla( 0, nd_radiance_profile )
28059.       t$882 = nd_brdf_basis_fnc
28300.       t$3484 = _zla( 0, nd_brdf_basis_fnc )
28059.       t$3485 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
28059.       t$883 = nd_brdf_trunc / 2
28059.       t$884 = nd_brdf_trunc
28059.       t$3486 = _zla( 0, nd_brdf_basis_fnc )
28059.       t$3487 = 1 + t$883
28302.       t$3488 = _zla( 0, 1 + t$883 )
28059.       t$3489 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$883 )
28059.       t$3490 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$883 ) * _zla( 0, 1 + t$883 )
28059.       t$3491 = 1 + nd_brdf_trunc
28302.       t$3492 = _zla( 0, 1 + nd_brdf_trunc )
28059.       t$3493 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$883 ) * _zla( 0, 1 + t$883 ) * _zla( 0, 1 + nd_brdf_trunc )
28059.       t$885 = nd_direction
28059.       t$3494 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
28305.       t$3495 = _zla( 0, nd_direction )
28059.       t$3496 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_direction )
28059.       t$886 = nd_point_tile
28321.       t$3497 = _zla( 0, nd_point_tile )
28059.       t$887 = nd_tile
28059.       t$3498 = _zla( 0, nd_point_tile )
28059.       t$3499 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_point_tile )
28324.       t$3500 = _zla( 0, nd_tile )
28059.       t$3501 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, nd_point_tile ) * _zla( 0, nd_tile )
28059.       t$3502 = _zla( 0, nd_point_tile ) * _zla( 0, nd_tile )
 2600.       if ( t$27 == 0 ) then
 2600.          t$3507(1) = 4
 2600.          t$3508(1) = 0
 2600.          t$3509(1) = 0
 2600.          t$3504(1) = int( loc( t$26 ), 8 )
 2600.          t$3505(1) = 0
 2600.          t$3506(1) = int( loc( t$3503 ), 8 )
 2600.          t$27 = __get_dynamic_type( 2, t$3504(1), t$3507(1), 1, t$3505(1), t$3506(1), t$3508(1), t$3509(1) )
 2600.       endif
28059.       t$890 = id_ct
28059.       t$888 = nd_cloud_type
28059.       t$3511 = 1 + nd_layer + -id_ct
28370.       t$3512 = max( 0, 1 + nd_layer + -id_ct )
28059.       t$3513 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
28370.       t$3514 = max( 0, nd_cloud_type )
28059.       t$3515 = _zla( 0, nd_profile ) * max( 0, nd_cloud_type ) * max( 0, 1 + nd_layer + -id_ct )
28059.       t$893 = nd_region
28376.       t$3516 = max( 0, nd_region )
28059.       t$3517 = _zla( 0, nd_profile ) * max( 0, nd_region ) * max( 0, 1 + nd_layer + -id_ct )
28059.       t$3518 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
28059.       t$891 = ( -1 + id_ct )
28059.       t$892 = nd_overlap_coeff
28059.       t$3519 = 2 + nd_layer + -id_ct
28372.       t$3520 = max( 0, 2 + nd_layer + -id_ct )
28059.       t$3521 = _zla( 0, nd_profile ) * max( 0, 2 + nd_layer + -id_ct )
28372.       t$3522 = max( 0, nd_overlap_coeff )
28059.       t$3523 = _zla( 0, nd_profile ) * max( 0, nd_overlap_coeff ) * max( 0, 2 + nd_layer + -id_ct )
28059.       t$889 = nd_column
28359.       t$3524 = max( 0, nd_column )
28059.       t$3525 = _zla( 0, nd_profile ) * max( 0, nd_column )
28059.       t$894 = nd_viewing_level
28383.       t$3526 = max( 0, nd_viewing_level )
28059.       t$3527 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
28059.       t$3528 = 2 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
28059.       t$895 = nd_flux_profile
28399.       t$3529 = max( 0, nd_flux_profile )
28059.       t$3530 = max( 0, nd_flux_profile )
28059.       t$3531 = 1 + nd_layer
28399.       t$3532 = max( 0, 1 + nd_layer )
28059.       t$3533 = max( 0, nd_flux_profile ) * max( 0, 1 + nd_layer )
28059.       t$3534 = _zla( 0, nd_radiance_profile ) * max( 0, 1 + nd_layer )
28059.       t$3535 = _zla( 0, nd_radiance_profile ) * max( 0, nd_viewing_level )
28059.       t$3536 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * max( 0, nd_viewing_level )
28059.       t$896 = nd_j_profile
28416.       t$3537 = max( 0, nd_j_profile )
28059.       t$3538 = max( 0, nd_j_profile )
28059.       t$3539 = max( 0, nd_viewing_level ) * max( 0, nd_j_profile )
28472.       t$3542 = 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
28468.       t$3543 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
28468.       t$3545 = t$3543 + 8 * _zla( 0, nd_profile )
28477.       t$3546 = 8 * ( 7 + t$3543 + 8 * _zla( 0, nd_profile ) ) / 8
28477.       t$3548 = t$3546 + 8 * max( 0, nd_flux_profile ) * max( 0, 1 + nd_layer )
28481.       t$3549 = 8 * ( 7 + t$3546 + 8 * max( 0, nd_flux_profile ) * max( 0, 1 + nd_layer ) ) / 8
28481.       t$3551 = t$3549 + 8 * max( 0, nd_flux_profile ) * max( 0, 1 + nd_layer )
28464.       t$3552 = 8 * ( 7 + t$3549 + 8 * max( 0, nd_flux_profile ) * max( 0, 1 + nd_layer ) ) / 8
28464.       t$3554 = t$3552 + 8 * _zla( 0, nd_profile )
28466.       t$3555 = 8 * ( 7 + t$3552 + 8 * _zla( 0, nd_profile ) ) / 8
28466.       t$3557 = t$3555 + 8 * _zla( 0, nd_profile )
28059.       t$897 = ( 2 + 2 * nd_layer )
28479.       t$3558 = max( 0, ( 2 + 2 * nd_layer ) )
28059.       t$3559 = max( 0, nd_flux_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
28479.       t$3560 = 8 * ( 7 + t$3555 + 8 * _zla( 0, nd_profile ) ) / 8
28479.       t$3562 = t$3560 + 8 * max( 0, nd_flux_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
28483.       t$3563 = 8 * ( 7 + t$3560 + 8 * max( 0, nd_flux_profile ) * max( 0, ( 2 + 2 * nd_layer ) ) ) / 8
28483.       t$3565 = t$3563 + 8 * max( 0, nd_flux_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
28487.       t$3566 = 8 * ( 7 + t$3563 + 8 * max( 0, nd_flux_profile ) * max( 0, ( 2 + 2 * nd_layer ) ) ) / 8
28487.       t$3568 = t$3566 + 8 * _zla( 0, nd_radiance_profile ) * max( 0, 1 + nd_layer )
28470.       t$3569 = 8 * ( 7 + t$3566 + 8 * _zla( 0, nd_radiance_profile ) * max( 0, 1 + nd_layer ) ) / 8
28470.       t$3571 = t$3569 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
28493.       t$3572 = 8 * ( 7 + t$3569 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
28493.       t$3574 = t$3572 + 8 * max( 0, nd_viewing_level ) * max( 0, nd_j_profile )
28489.       t$3575 = 8 * ( 7 + t$3572 + 8 * max( 0, nd_viewing_level ) * max( 0, nd_j_profile ) ) / 8
28489.       t$3577 = t$3575 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * max( 0, nd_viewing_level )
28059.       t$3540 = int( _alloc( t$3575 + 8 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * max( 0, nd_viewing_level ) ), 8 )
28472.       t$3541 = t$3540
28468.       t$3544 = t$3543 + t$3540
28477.       t$3547 = t$3546 + t$3540
28481.       t$3550 = t$3549 + t$3540
28464.       t$3553 = t$3552 + t$3540
28466.       t$3556 = t$3555 + t$3540
28479.       t$3561 = t$3560 + t$3540
28483.       t$3564 = t$3563 + t$3540
28487.       t$3567 = t$3566 + t$3540
28470.       t$3570 = t$3569 + t$3540
28493.       t$3573 = t$3572 + t$3540
28489.       t$3576 = t$3575 + t$3540
28505.       if ( i_angular_integration == 1 .orelse. i_angular_integration == 2 ) then
28507.          if ( isolir == 1 ) then
28509.             if ( n_profile > 0 ) then
28509.                $I_L28509_114 = 0
28509. !dir$ ivdep
28509.                do
28510.                   d_planck_flux_surface(1 + $I_L28509_114) = 0.0
28511.                   flux_inc_down(1 + $I_L28509_114) = ( solar_irrad(1 + $I_L28509_114) * 1.0/zen_0(1 + $I_L28509_114) )
28512.                   flux_inc_direct(1 + $I_L28509_114) = ( solar_irrad(1 + $I_L28509_114) * 1.0/zen_0(1 + $I_L28509_114) )
28513.                   $I_L28509_114 = 1 + $I_L28509_114
28509.                   if ( $I_L28509_114 >= n_profile ) exit
28509.                enddo
28509.             endif
28514.          else if ( isolir == 2 ) then
28516.             if ( n_profile > 0 ) then
28516.                $I_L28516_116 = 0
28516. !dir$ ivdep
28516.                do
28517.                   flux_inc_direct(1 + $I_L28516_116) = 0.0
28518.                   flux_direct_band(1 + $I_L28516_116, n_layer) = 0.0
28519.                   flux_inc_down(1 + $I_L28516_116) = -planck_flux_top(1 + $I_L28516_116)
28520.                   d_planck_flux_surface(1 + $I_L28516_116) = planck_flux_ground(1 + $I_L28516_116) + -planck_flux_bottom(1 + $I_L28516_116)
28522.                   $I_L28516_116 = 1 + $I_L28516_116
28516.                   if ( $I_L28516_116 >= n_profile ) exit
28516.                enddo
28516.             endif
28523.             if ( l_clear /= .false. ) then
28524.                if ( n_profile > 0 ) then
28524.                   $I_L28524_118 = 0
28524. !dir$ ivdep
28524.                   do
28525.                      flux_direct_clear_band(1 + $I_L28524_118, n_layer) = 0.0
28526.                      $I_L28524_118 = 1 + $I_L28524_118
28524.                      if ( $I_L28524_118 >= n_profile ) exit
28524.                   enddo
28524.                endif
28524.             endif
28524.          endif
28524.       else
28530.          if ( i_angular_integration == 3 ) then
28532.             if ( isolir == 1 ) then
28533.                if ( n_profile > 0 ) then
28533.                   $I_L28533_120 = 0
28533. !dir$ ivdep
28533.                   do
28534.                      i_direct_band(1 + $I_L28533_120, 0) = solar_irrad(1 + $I_L28533_120)
28535.                      flux_inc_down(1 + $I_L28533_120) = 0.0
28536.                      $I_L28533_120 = 1 + $I_L28533_120
28533.                      if ( $I_L28533_120 >= n_profile ) exit
28533.                   enddo
28533.                endif
28537.             else if ( n_profile > 0 ) then
28538.                $I_L28538_122 = 0
28538. !dir$ ivdep
28538.                do
28539.                   flux_inc_down(1 + $I_L28538_122) = -planck_flux_top(1 + $I_L28538_122)
28540.                   d_planck_flux_surface(1 + $I_L28538_122) = planck_flux_ground(1 + $I_L28538_122) + -planck_flux_bottom(1 + $I_L28538_122)
28542.                   $I_L28538_122 = 1 + $I_L28538_122
28538.                   if ( $I_L28538_122 >= n_profile ) exit
28538.                enddo
28538.             endif
28538.          endif
28538.       endif
28547.       if ( n_layer > 0 ) then
28548.          if ( n_profile > 0 ) then
28547.             $I_L28547_138 = 0
28547.             do
28548.                $I_L28548_124 = 0
28548. !dir$ ivdep
28548.                do
28549.                   k_null(1 + $I_L28548_124, 1 + $I_L28547_138) = 0.0
28550.                   $I_L28548_124 = 1 + $I_L28548_124
28548.                   if ( $I_L28548_124 >= n_profile ) exit
28548.                enddo
28551.                $I_L28547_138 = 1 + $I_L28547_138
28550.                if ( $I_L28547_138 >= n_layer ) exit
28550.             enddo
28550.          endif
28550.       endif
28554.       call monochromatic_radiance( ierr, n_profile, n_layer, d_mass(1, 1), i_angular_integration, i_2stream, l_rescale, n_order_gauss, n_order_phase, ms_min, ms_max, i_truncation, ls_local_trunc(0), accuracy_adaptive, euler_factor, i_sph_algorithm, i_sph_mode, ia_sph_mm(0), cg_coeff(1), uplm_zero(1), uplm_sol(1, 1), i_scatter_method, i_solver, k_null(1, 1), .false., dummy_ke(1, 1), isolir, diff_planck_band(1, 1), l_ir_source_quad, diff_planck_band_2(1, 1), zen_0(1), zen_00(1, 1), flux_inc_direct(1), flux_inc_down(1), i_direct_band(1, 0), d_planck_flux_surface(1), ls_brdf_trunc, n_brdf_basis_fnc, rho_alb(1, 1), f_brdf(1, 0, 0, 0), brdf_sol(1, 1, 1), brdf_hemi(1, 1, 1), ss_prop, l_cloud, i_cloud, n_cloud_top, n_cloud_type, frac_cloud(1, id_ct, 1), n_region, k_clr, i_region_cloud(1), frac_region(1, id_ct, 1), w_free(1, id_ct), w_cloud(1, id_ct), cloud_overlap(1, -1 + id_ct, 1), n_column_slv(1), list_column_slv(1, 1), i_clm_lyr_chn(1, 1), i_clm_cld_typ(1, 1), area_column(1, 1), n_viewing_level, i_rad_layer(1), frac_rad_layer(1), n_direction, direction(1, 1, 1), flux_direct_band(1, 0), flux_total_band(1, 1), radiance_band(1, 1, 1), photolysis_band(1, 1), l_clear, i_solver_clear, flux_direct_clear_band(1, 0), flux_total_clear_band(1, 1), nd_profile, nd_layer, nd_layer_clr, id_ct, nd_column, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_cloud_type, nd_region, nd_overlap_coeff, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc, nd_viewing_level, nd_direction, nd_source_coeff )
28619.       call augment_radiance( n_profile, n_layer, i_angular_integration, i_sph_mode, n_viewing_level, n_direction, isolir, l_clear, l_initial, weight_band, l_blue_flux_surf, weight_blue, flux_direct(1, 0), flux_down(1, 0), flux_up(1, 0), flux_direct_blue_surf(1), flux_down_blue_surf(1), flux_up_blue_surf(1), i_direct(1, 0), radiance(1, 1, 1), photolysis(1, 1), flux_direct_clear(1, 0), flux_down_clear(1, 0), flux_up_clear(1, 0), flux_direct_band(1, 0), flux_total_band(1, 1), i_direct_band(1, 0), radiance_band(1, 1, 1), photolysis_band(1, 1), flux_direct_clear_band(1, 0), flux_total_clear_band(1, 1), nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_layer, nd_viewing_level, nd_direction )
28641.       if ( l_tile /= .false. ) then
28642.          tm$3194 = loc( flux_direct_band(1, n_layer) )
28642.          flux_direct_incr = _copyin( flux_direct_band(1, n_layer) )
28642.          tm$3196 = loc( flux_total_band(1, 2 + 2 * n_layer) )
28642.          flux_down_incr = _copyin( flux_total_band(1, 2 + 2 * n_layer) )
28642.          t$132 = nd_point_tile
28642.          t$1331 = max( 0, nd_point_tile )
28642.          t$133 = nd_brdf_basis_fnc
28642.          t$134 = nd_tile
28642.          t$1332 = max( 0, nd_point_tile )
28642.          t$1333 = max( 0, nd_brdf_basis_fnc )
28642.          t$1334 = max( 0, nd_brdf_basis_fnc ) * max( 0, nd_point_tile )
28642.          t$1335 = max( 0, nd_tile )
28642.          t$1336 = max( 0, nd_brdf_basis_fnc ) * max( 0, nd_point_tile ) * max( 0, nd_tile )
28642.          t$1337 = max( 0, nd_point_tile ) * max( 0, nd_tile )
28642.          t$135 = nd_flux_profile
28642.          t$1338 = max( 0, nd_flux_profile )
28642.          if ( l_initial == .false. ) then
28642.             if ( i_angular_integration == 1 .orelse. i_angular_integration == 2 ) then
28642.                if ( isolir == 1 ) then
28642.                   if ( n_tile > 0 ) then
28642.                      if ( n_point_tile > 0 ) then
28642.                         $I_L28642_148 = 0
28642.                         if ( n_tile >= 4 ) then
28642.                            $I_L28642_170 = 0
28642. !dir$ blocking_size( 1, 1 )
28642.                            do
28642.                               $I_L28642_134 = 0
28642. !dir$ ivdep
28642. !dir$ blocking_size( 256, 256 )
28642.                               do
28642.                                  $l_S9 = list_tile(1 + $I_L28642_134)
28642.                                  flux_up_tile(1 + $I_L28642_134, 1 + 4 * $I_L28642_170) = flux_up_tile(1 + $I_L28642_134, 1 + 4 * $I_L28642_170) + weight_band * ( flux_direct_incr($l_S9) * ( rho_alb_tile(1 + $I_L28642_134, 2, 1 + 4 * $I_L28642_170) + -rho_alb_tile(1 + $I_L28642_134, 1, 1 + 4 * $I_L28642_170) ) + flux_down_incr($l_S9) * rho_alb_tile(1 + $I_L28642_134, 1, 1 + 4 * $I_L28642_170) )
28642.                                  $l_S9 = list_tile(1 + $I_L28642_134)
28642.                                  flux_up_tile(1 + $I_L28642_134, 2 + 4 * $I_L28642_170) = flux_up_tile(1 + $I_L28642_134, 2 + 4 * $I_L28642_170) + weight_band * ( flux_down_incr($l_S9) * rho_alb_tile(1 + $I_L28642_134, 1, 2 + 4 * $I_L28642_170) + flux_direct_incr($l_S9) * ( rho_alb_tile(1 + $I_L28642_134, 2, 2 + 4 * $I_L28642_170) + -rho_alb_tile(1 + $I_L28642_134, 1, 2 + 4 * $I_L28642_170) ) )
28642.                                  $l_S9 = list_tile(1 + $I_L28642_134)
28642.                                  flux_up_tile(1 + $I_L28642_134, 3 + 4 * $I_L28642_170) = flux_up_tile(1 + $I_L28642_134, 3 + 4 * $I_L28642_170) + weight_band * ( flux_down_incr($l_S9) * rho_alb_tile(1 + $I_L28642_134, 1, 3 + 4 * $I_L28642_170) + flux_direct_incr($l_S9) * ( rho_alb_tile(1 + $I_L28642_134, 2, 3 + 4 * $I_L28642_170) + -rho_alb_tile(1 + $I_L28642_134, 1, 3 + 4 * $I_L28642_170) ) )
28642.                                  $l_S9 = list_tile(1 + $I_L28642_134)
28642.                                  flux_up_tile(1 + $I_L28642_134, 4 + 4 * $I_L28642_170) = flux_up_tile(1 + $I_L28642_134, 4 + 4 * $I_L28642_170) + weight_band * ( flux_down_incr($l_S9) * rho_alb_tile(1 + $I_L28642_134, 1, 4 + 4 * $I_L28642_170) + flux_direct_incr($l_S9) * ( rho_alb_tile(1 + $I_L28642_134, 2, 4 + 4 * $I_L28642_170) + -rho_alb_tile(1 + $I_L28642_134, 1, 4 + 4 * $I_L28642_170) ) )
28642.                                  $I_L28642_134 = 1 + $I_L28642_134
28642.                                  if ( $I_L28642_134 >= n_point_tile ) exit
28642.                               enddo
28642.                               $I_L28642_170 = 1 + $I_L28642_170
28642.                               if ( $I_L28642_170 >= _rsh( n_tile, 2 ) ) exit
28642.                            enddo
28642.                            $I_L28642_148 = and( 0xfffffffffffffffcUL, n_tile )
28642.                         endif
28642.                         if ( $I_L28642_148 < n_tile ) then
28642.                            $I_L28642_164 = 0
28642. !dir$ blocking_size( 1, 1 )
28642.                            do
28642.                               $I_L28642_134 = 0
28642. !dir$ ivdep
28642. !dir$ blocking_size( 256, 256 )
28642.                               do
28642.                                  $l_S9 = list_tile(1 + $I_L28642_134)
28642.                                  flux_up_tile(1 + $I_L28642_134, 1 + $I_L28642_148 + $I_L28642_164) = flux_up_tile(1 + $I_L28642_134, 1 + $I_L28642_148 + $I_L28642_164) + weight_band * ( flux_down_incr($l_S9) * rho_alb_tile(1 + $I_L28642_134, 1, 1 + $I_L28642_148 + $I_L28642_164) + flux_direct_incr($l_S9) * ( rho_alb_tile(1 + $I_L28642_134, 2, 1 + $I_L28642_148 + $I_L28642_164) + -rho_alb_tile(1 + $I_L28642_134, 1, 1 + $I_L28642_148 + $I_L28642_164) ) )
28642.                                  $I_L28642_134 = 1 + $I_L28642_134
28642.                                  if ( $I_L28642_134 >= n_point_tile ) exit
28642.                               enddo
28642.                               $I_L28642_164 = 1 + $I_L28642_164
28642.                               if ( $I_L28642_164 >= n_tile + -$I_L28642_148 ) exit
28642.                            enddo
28642.                         endif
28642.                      endif
28642.                   endif
28642.                   if ( l_blue_flux_surf /= .false. ) then
28642.                      if ( n_tile > 0 ) then
28642.                         if ( n_point_tile > 0 ) then
28642.                            $I_L28642_150 = 0
28642.                            if ( n_tile >= 4 ) then
28642.                               $I_L28642_172 = 0
28642. !dir$ blocking_size( 1, 1 )
28642.                               do
28642.                                  $I_L28642_136 = 0
28642. !dir$ ivdep
28642. !dir$ blocking_size( 256, 256 )
28642.                                  do
28642.                                     $l_S12 = list_tile(1 + $I_L28642_136)
28642.                                     flux_up_blue_tile(1 + $I_L28642_136, 1 + 4 * $I_L28642_172) = flux_up_blue_tile(1 + $I_L28642_136, 1 + 4 * $I_L28642_172) + weight_blue * ( flux_direct_incr($l_S12) * ( rho_alb_tile(1 + $I_L28642_136, 2, 1 + 4 * $I_L28642_172) + -rho_alb_tile(1 + $I_L28642_136, 1, 1 + 4 * $I_L28642_172) ) + flux_down_incr($l_S12) * rho_alb_tile(1 + $I_L28642_136, 1, 1 + 4 * $I_L28642_172) )
28642.                                     $l_S12 = list_tile(1 + $I_L28642_136)
28642.                                     flux_up_blue_tile(1 + $I_L28642_136, 2 + 4 * $I_L28642_172) = flux_up_blue_tile(1 + $I_L28642_136, 2 + 4 * $I_L28642_172) + weight_blue * ( flux_down_incr($l_S12) * rho_alb_tile(1 + $I_L28642_136, 1, 2 + 4 * $I_L28642_172) + flux_direct_incr($l_S12) * ( rho_alb_tile(1 + $I_L28642_136, 2, 2 + 4 * $I_L28642_172) + -rho_alb_tile(1 + $I_L28642_136, 1, 2 + 4 * $I_L28642_172) ) )
28642.                                     $l_S12 = list_tile(1 + $I_L28642_136)
28642.                                     flux_up_blue_tile(1 + $I_L28642_136, 3 + 4 * $I_L28642_172) = flux_up_blue_tile(1 + $I_L28642_136, 3 + 4 * $I_L28642_172) + weight_blue * ( flux_down_incr($l_S12) * rho_alb_tile(1 + $I_L28642_136, 1, 3 + 4 * $I_L28642_172) + flux_direct_incr($l_S12) * ( rho_alb_tile(1 + $I_L28642_136, 2, 3 + 4 * $I_L28642_172) + -rho_alb_tile(1 + $I_L28642_136, 1, 3 + 4 * $I_L28642_172) ) )
28642.                                     $l_S12 = list_tile(1 + $I_L28642_136)
28642.                                     flux_up_blue_tile(1 + $I_L28642_136, 4 + 4 * $I_L28642_172) = flux_up_blue_tile(1 + $I_L28642_136, 4 + 4 * $I_L28642_172) + weight_blue * ( flux_down_incr($l_S12) * rho_alb_tile(1 + $I_L28642_136, 1, 4 + 4 * $I_L28642_172) + flux_direct_incr($l_S12) * ( rho_alb_tile(1 + $I_L28642_136, 2, 4 + 4 * $I_L28642_172) + -rho_alb_tile(1 + $I_L28642_136, 1, 4 + 4 * $I_L28642_172) ) )
28642.                                     $I_L28642_136 = 1 + $I_L28642_136
28642.                                     if ( $I_L28642_136 >= n_point_tile ) exit
28642.                                  enddo
28642.                                  $I_L28642_172 = 1 + $I_L28642_172
28642.                                  if ( $I_L28642_172 >= _rsh( n_tile, 2 ) ) exit
28642.                               enddo
28642.                               $I_L28642_150 = and( 0xfffffffffffffffcUL, n_tile )
28642.                            endif
28642.                            if ( $I_L28642_150 < n_tile ) then
28642.                               $I_L28642_167 = 0
28642. !dir$ blocking_size( 1, 1 )
28642.                               do
28642.                                  $I_L28642_136 = 0
28642. !dir$ ivdep
28642. !dir$ blocking_size( 256, 256 )
28642.                                  do
28642.                                     $l_S12 = list_tile(1 + $I_L28642_136)
28642.                                     flux_up_blue_tile(1 + $I_L28642_136, 1 + $I_L28642_150 + $I_L28642_167) = flux_up_blue_tile(1 + $I_L28642_136, 1 + $I_L28642_150 + $I_L28642_167) + weight_blue * ( flux_down_incr($l_S12) * rho_alb_tile(1 + $I_L28642_136, 1, 1 + $I_L28642_150 + $I_L28642_167) + flux_direct_incr($l_S12) * ( rho_alb_tile(1 + $I_L28642_136, 2, 1 + $I_L28642_150 + $I_L28642_167) + -rho_alb_tile(1 + $I_L28642_136, 1, 1 + $I_L28642_150 + $I_L28642_167) ) )
28642.                                     $I_L28642_136 = 1 + $I_L28642_136
28642.                                     if ( $I_L28642_136 >= n_point_tile ) exit
28642.                                  enddo
28642.                                  $I_L28642_167 = 1 + $I_L28642_167
28642.                                  if ( $I_L28642_167 >= n_tile + -$I_L28642_150 ) exit
28642.                               enddo
28642.                            endif
28642.                         endif
28642.                      endif
28642.                   endif
28642.                else if ( isolir == 2 ) then
28642.                   if ( n_tile > 0 ) then
28642.                      if ( n_point_tile > 0 ) then
28642.                         $I_L28642_146 = 0
28642.                         if ( n_tile >= 4 ) then
28642.                            $I_L28642_174 = 0
28642. !dir$ blocking_size( 1, 1 )
28642.                            do
28642.                               $I_L28642_132 = 0
28642. !dir$ ivdep
28642. !dir$ blocking_size( 256, 256 )
28642.                               do
28642.                                  $l_S15 = list_tile(1 + $I_L28642_132)
28642.                                  flux_up_tile(1 + $I_L28642_132, 1 + 4 * $I_L28642_174) = flux_up_tile(1 + $I_L28642_132, 1 + 4 * $I_L28642_174) + weight_band * ( planck_flux_tile(1 + $I_L28642_132, 1 + 4 * $I_L28642_174) + rho_alb_tile(1 + $I_L28642_132, 1, 1 + 4 * $I_L28642_174) * ( planck_flux_bottom($l_S15) + flux_down_incr($l_S15) + -planck_flux_tile(1 + $I_L28642_132, 1 + 4 * $I_L28642_174) ) )
28642.                                  $l_S15 = list_tile(1 + $I_L28642_132)
28642.                                  flux_up_tile(1 + $I_L28642_132, 2 + 4 * $I_L28642_174) = flux_up_tile(1 + $I_L28642_132, 2 + 4 * $I_L28642_174) + weight_band * ( planck_flux_tile(1 + $I_L28642_132, 2 + 4 * $I_L28642_174) + rho_alb_tile(1 + $I_L28642_132, 1, 2 + 4 * $I_L28642_174) * ( planck_flux_bottom($l_S15) + flux_down_incr($l_S15) + -planck_flux_tile(1 + $I_L28642_132, 2 + 4 * $I_L28642_174) ) )
28642.                                  $l_S15 = list_tile(1 + $I_L28642_132)
28642.                                  flux_up_tile(1 + $I_L28642_132, 3 + 4 * $I_L28642_174) = flux_up_tile(1 + $I_L28642_132, 3 + 4 * $I_L28642_174) + weight_band * ( planck_flux_tile(1 + $I_L28642_132, 3 + 4 * $I_L28642_174) + rho_alb_tile(1 + $I_L28642_132, 1, 3 + 4 * $I_L28642_174) * ( planck_flux_bottom($l_S15) + flux_down_incr($l_S15) + -planck_flux_tile(1 + $I_L28642_132, 3 + 4 * $I_L28642_174) ) )
28642.                                  $l_S15 = list_tile(1 + $I_L28642_132)
28642.                                  flux_up_tile(1 + $I_L28642_132, 4 + 4 * $I_L28642_174) = flux_up_tile(1 + $I_L28642_132, 4 + 4 * $I_L28642_174) + weight_band * ( planck_flux_tile(1 + $I_L28642_132, 4 + 4 * $I_L28642_174) + rho_alb_tile(1 + $I_L28642_132, 1, 4 + 4 * $I_L28642_174) * ( planck_flux_bottom($l_S15) + flux_down_incr($l_S15) + -planck_flux_tile(1 + $I_L28642_132, 4 + 4 * $I_L28642_174) ) )
28642.                                  $I_L28642_132 = 1 + $I_L28642_132
28642.                                  if ( $I_L28642_132 >= n_point_tile ) exit
28642.                               enddo
28642.                               $I_L28642_174 = 1 + $I_L28642_174
28642.                               if ( $I_L28642_174 >= _rsh( n_tile, 2 ) ) exit
28642.                            enddo
28642.                            $I_L28642_146 = and( 0xfffffffffffffffcUL, n_tile )
28642.                         endif
28642.                         if ( $I_L28642_146 < n_tile ) then
28642.                            $I_L28642_161 = 0
28642. !dir$ blocking_size( 1, 1 )
28642.                            do
28642.                               $I_L28642_132 = 0
28642. !dir$ ivdep
28642. !dir$ blocking_size( 256, 256 )
28642.                               do
28642.                                  $l_S15 = list_tile(1 + $I_L28642_132)
28642.                                  flux_up_tile(1 + $I_L28642_132, 1 + $I_L28642_146 + $I_L28642_161) = flux_up_tile(1 + $I_L28642_132, 1 + $I_L28642_146 + $I_L28642_161) + weight_band * ( planck_flux_tile(1 + $I_L28642_132, 1 + $I_L28642_146 + $I_L28642_161) + rho_alb_tile(1 + $I_L28642_132, 1, 1 + $I_L28642_146 + $I_L28642_161) * ( planck_flux_bottom($l_S15) + flux_down_incr($l_S15) + -planck_flux_tile(1 + $I_L28642_132, 1 + $I_L28642_146 + $I_L28642_161) ) )
28642.                                  $I_L28642_132 = 1 + $I_L28642_132
28642.                                  if ( $I_L28642_132 >= n_point_tile ) exit
28642.                               enddo
28642.                               $I_L28642_161 = 1 + $I_L28642_161
28642.                               if ( $I_L28642_161 >= n_tile + -$I_L28642_146 ) exit
28642.                            enddo
28642.                         endif
28642.                      endif
28642.                   endif
28642.                endif
28642.             else
28642.                if ( i_angular_integration == 3 ) then
28642.                   _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$137,  _substr(t$136,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Tiled surfaces have not yet been ', 0x800600000000L ), _iotype( 'implemented with the spherical harmonic solver.', 0x800600000000L ) ) )
28642.                   ierr = 1
28642.                endif
28642.             endif
28642.          else if ( i_angular_integration == 1 ) then
28642.             goto 10
28642.             goto 20
28642.          else if ( i_angular_integration == 2 ) then
28642.    10       continue
28642.             if ( isolir == 1 ) then
28642.                if ( n_tile > 0 ) then
28642.                   if ( n_point_tile > 0 ) then
28642.                      $I_L28642_142 = 0
28642.                      if ( n_tile >= 4 ) then
28642.                         $I_L28642_176 = 0
28642. !dir$ blocking_size( 1, 1 )
28642.                         do
28642.                            $I_L28642_128 = 0
28642. !dir$ ivdep
28642. !dir$ blocking_size( 256, 256 )
28642.                            do
28642.                               $l_S18 = list_tile(1 + $I_L28642_128)
28642.                               flux_up_tile(1 + $I_L28642_128, 1 + 4 * $I_L28642_176) = weight_band * ( flux_direct_incr($l_S18) * ( rho_alb_tile(1 + $I_L28642_128, 2, 1 + 4 * $I_L28642_176) + -rho_alb_tile(1 + $I_L28642_128, 1, 1 + 4 * $I_L28642_176) ) + flux_down_incr($l_S18) * rho_alb_tile(1 + $I_L28642_128, 1, 1 + 4 * $I_L28642_176) )
28642.                               $l_S18 = list_tile(1 + $I_L28642_128)
28642.                               flux_up_tile(1 + $I_L28642_128, 2 + 4 * $I_L28642_176) = weight_band * ( flux_down_incr($l_S18) * rho_alb_tile(1 + $I_L28642_128, 1, 2 + 4 * $I_L28642_176) + flux_direct_incr($l_S18) * ( rho_alb_tile(1 + $I_L28642_128, 2, 2 + 4 * $I_L28642_176) + -rho_alb_tile(1 + $I_L28642_128, 1, 2 + 4 * $I_L28642_176) ) )
28642.                               $l_S18 = list_tile(1 + $I_L28642_128)
28642.                               flux_up_tile(1 + $I_L28642_128, 3 + 4 * $I_L28642_176) = weight_band * ( flux_down_incr($l_S18) * rho_alb_tile(1 + $I_L28642_128, 1, 3 + 4 * $I_L28642_176) + flux_direct_incr($l_S18) * ( rho_alb_tile(1 + $I_L28642_128, 2, 3 + 4 * $I_L28642_176) + -rho_alb_tile(1 + $I_L28642_128, 1, 3 + 4 * $I_L28642_176) ) )
28642.                               $l_S18 = list_tile(1 + $I_L28642_128)
28642.                               flux_up_tile(1 + $I_L28642_128, 4 + 4 * $I_L28642_176) = weight_band * ( flux_down_incr($l_S18) * rho_alb_tile(1 + $I_L28642_128, 1, 4 + 4 * $I_L28642_176) + flux_direct_incr($l_S18) * ( rho_alb_tile(1 + $I_L28642_128, 2, 4 + 4 * $I_L28642_176) + -rho_alb_tile(1 + $I_L28642_128, 1, 4 + 4 * $I_L28642_176) ) )
28642.                               $I_L28642_128 = 1 + $I_L28642_128
28642.                               if ( $I_L28642_128 >= n_point_tile ) exit
28642.                            enddo
28642.                            $I_L28642_176 = 1 + $I_L28642_176
28642.                            if ( $I_L28642_176 >= _rsh( n_tile, 2 ) ) exit
28642.                         enddo
28642.                         $I_L28642_142 = and( 0xfffffffffffffffcUL, n_tile )
28642.                      endif
28642.                      if ( $I_L28642_142 < n_tile ) then
28642.                         $I_L28642_155 = 0
28642. !dir$ blocking_size( 1, 1 )
28642.                         do
28642.                            $I_L28642_128 = 0
28642. !dir$ ivdep
28642. !dir$ blocking_size( 256, 256 )
28642.                            do
28642.                               $l_S18 = list_tile(1 + $I_L28642_128)
28642.                               flux_up_tile(1 + $I_L28642_128, 1 + $I_L28642_142 + $I_L28642_155) = weight_band * ( flux_down_incr($l_S18) * rho_alb_tile(1 + $I_L28642_128, 1, 1 + $I_L28642_142 + $I_L28642_155) + flux_direct_incr($l_S18) * ( rho_alb_tile(1 + $I_L28642_128, 2, 1 + $I_L28642_142 + $I_L28642_155) + -rho_alb_tile(1 + $I_L28642_128, 1, 1 + $I_L28642_142 + $I_L28642_155) ) )
28642.                               $I_L28642_128 = 1 + $I_L28642_128
28642.                               if ( $I_L28642_128 >= n_point_tile ) exit
28642.                            enddo
28642.                            $I_L28642_155 = 1 + $I_L28642_155
28642.                            if ( $I_L28642_155 >= n_tile + -$I_L28642_142 ) exit
28642.                         enddo
28642.                      endif
28642.                   endif
28642.                endif
28642.                if ( l_blue_flux_surf /= .false. ) then
28642.                   if ( n_tile > 0 ) then
28642.                      if ( n_point_tile > 0 ) then
28642.                         $I_L28642_144 = 0
28642.                         if ( n_tile >= 4 ) then
28642.                            $I_L28642_178 = 0
28642. !dir$ blocking_size( 1, 1 )
28642.                            do
28642.                               $I_L28642_130 = 0
28642. !dir$ ivdep
28642. !dir$ blocking_size( 256, 256 )
28642.                               do
28642.                                  $l_S21 = list_tile(1 + $I_L28642_130)
28642.                                  flux_up_blue_tile(1 + $I_L28642_130, 1 + 4 * $I_L28642_178) = weight_blue * ( flux_direct_incr($l_S21) * ( rho_alb_tile(1 + $I_L28642_130, 2, 1 + 4 * $I_L28642_178) + -rho_alb_tile(1 + $I_L28642_130, 1, 1 + 4 * $I_L28642_178) ) + flux_down_incr($l_S21) * rho_alb_tile(1 + $I_L28642_130, 1, 1 + 4 * $I_L28642_178) )
28642.                                  $l_S21 = list_tile(1 + $I_L28642_130)
28642.                                  flux_up_blue_tile(1 + $I_L28642_130, 2 + 4 * $I_L28642_178) = weight_blue * ( flux_down_incr($l_S21) * rho_alb_tile(1 + $I_L28642_130, 1, 2 + 4 * $I_L28642_178) + flux_direct_incr($l_S21) * ( rho_alb_tile(1 + $I_L28642_130, 2, 2 + 4 * $I_L28642_178) + -rho_alb_tile(1 + $I_L28642_130, 1, 2 + 4 * $I_L28642_178) ) )
28642.                                  $l_S21 = list_tile(1 + $I_L28642_130)
28642.                                  flux_up_blue_tile(1 + $I_L28642_130, 3 + 4 * $I_L28642_178) = weight_blue * ( flux_down_incr($l_S21) * rho_alb_tile(1 + $I_L28642_130, 1, 3 + 4 * $I_L28642_178) + flux_direct_incr($l_S21) * ( rho_alb_tile(1 + $I_L28642_130, 2, 3 + 4 * $I_L28642_178) + -rho_alb_tile(1 + $I_L28642_130, 1, 3 + 4 * $I_L28642_178) ) )
28642.                                  $l_S21 = list_tile(1 + $I_L28642_130)
28642.                                  flux_up_blue_tile(1 + $I_L28642_130, 4 + 4 * $I_L28642_178) = weight_blue * ( flux_down_incr($l_S21) * rho_alb_tile(1 + $I_L28642_130, 1, 4 + 4 * $I_L28642_178) + flux_direct_incr($l_S21) * ( rho_alb_tile(1 + $I_L28642_130, 2, 4 + 4 * $I_L28642_178) + -rho_alb_tile(1 + $I_L28642_130, 1, 4 + 4 * $I_L28642_178) ) )
28642.                                  $I_L28642_130 = 1 + $I_L28642_130
28642.                                  if ( $I_L28642_130 >= n_point_tile ) exit
28642.                               enddo
28642.                               $I_L28642_178 = 1 + $I_L28642_178
28642.                               if ( $I_L28642_178 >= _rsh( n_tile, 2 ) ) exit
28642.                            enddo
28642.                            $I_L28642_144 = and( 0xfffffffffffffffcUL, n_tile )
28642.                         endif
28642.                         if ( $I_L28642_144 < n_tile ) then
28642.                            $I_L28642_158 = 0
28642. !dir$ blocking_size( 1, 1 )
28642.                            do
28642.                               $I_L28642_130 = 0
28642. !dir$ ivdep
28642. !dir$ blocking_size( 256, 256 )
28642.                               do
28642.                                  $l_S21 = list_tile(1 + $I_L28642_130)
28642.                                  flux_up_blue_tile(1 + $I_L28642_130, 1 + $I_L28642_144 + $I_L28642_158) = weight_blue * ( flux_down_incr($l_S21) * rho_alb_tile(1 + $I_L28642_130, 1, 1 + $I_L28642_144 + $I_L28642_158) + flux_direct_incr($l_S21) * ( rho_alb_tile(1 + $I_L28642_130, 2, 1 + $I_L28642_144 + $I_L28642_158) + -rho_alb_tile(1 + $I_L28642_130, 1, 1 + $I_L28642_144 + $I_L28642_158) ) )
28642.                                  $I_L28642_130 = 1 + $I_L28642_130
28642.                                  if ( $I_L28642_130 >= n_point_tile ) exit
28642.                               enddo
28642.                               $I_L28642_158 = 1 + $I_L28642_158
28642.                               if ( $I_L28642_158 >= n_tile + -$I_L28642_144 ) exit
28642.                            enddo
28642.                         endif
28642.                      endif
28642.                   endif
28642.                endif
28642.             else if ( isolir == 2 ) then
28642.                if ( n_tile > 0 ) then
28642.                   if ( n_point_tile > 0 ) then
28642.                      $I_L28642_140 = 0
28642.                      if ( n_tile >= 4 ) then
28642.                         $I_L28642_180 = 0
28642. !dir$ blocking_size( 1, 1 )
28642.                         do
28642.                            $I_L28642_126 = 0
28642. !dir$ ivdep
28642. !dir$ blocking_size( 256, 256 )
28642.                            do
28642.                               $l_S24 = list_tile(1 + $I_L28642_126)
28642.                               flux_up_tile(1 + $I_L28642_126, 1 + 4 * $I_L28642_180) = weight_band * ( planck_flux_tile(1 + $I_L28642_126, 1 + 4 * $I_L28642_180) + rho_alb_tile(1 + $I_L28642_126, 1, 1 + 4 * $I_L28642_180) * ( planck_flux_bottom($l_S24) + flux_down_incr($l_S24) + -planck_flux_tile(1 + $I_L28642_126, 1 + 4 * $I_L28642_180) ) )
28642.                               $l_S24 = list_tile(1 + $I_L28642_126)
28642.                               flux_up_tile(1 + $I_L28642_126, 2 + 4 * $I_L28642_180) = weight_band * ( planck_flux_tile(1 + $I_L28642_126, 2 + 4 * $I_L28642_180) + rho_alb_tile(1 + $I_L28642_126, 1, 2 + 4 * $I_L28642_180) * ( planck_flux_bottom($l_S24) + flux_down_incr($l_S24) + -planck_flux_tile(1 + $I_L28642_126, 2 + 4 * $I_L28642_180) ) )
28642.                               $l_S24 = list_tile(1 + $I_L28642_126)
28642.                               flux_up_tile(1 + $I_L28642_126, 3 + 4 * $I_L28642_180) = weight_band * ( planck_flux_tile(1 + $I_L28642_126, 3 + 4 * $I_L28642_180) + rho_alb_tile(1 + $I_L28642_126, 1, 3 + 4 * $I_L28642_180) * ( planck_flux_bottom($l_S24) + flux_down_incr($l_S24) + -planck_flux_tile(1 + $I_L28642_126, 3 + 4 * $I_L28642_180) ) )
28642.                               $l_S24 = list_tile(1 + $I_L28642_126)
28642.                               flux_up_tile(1 + $I_L28642_126, 4 + 4 * $I_L28642_180) = weight_band * ( planck_flux_tile(1 + $I_L28642_126, 4 + 4 * $I_L28642_180) + rho_alb_tile(1 + $I_L28642_126, 1, 4 + 4 * $I_L28642_180) * ( planck_flux_bottom($l_S24) + flux_down_incr($l_S24) + -planck_flux_tile(1 + $I_L28642_126, 4 + 4 * $I_L28642_180) ) )
28642.                               $I_L28642_126 = 1 + $I_L28642_126
28642.                               if ( $I_L28642_126 >= n_point_tile ) exit
28642.                            enddo
28642.                            $I_L28642_180 = 1 + $I_L28642_180
28642.                            if ( $I_L28642_180 >= _rsh( n_tile, 2 ) ) exit
28642.                         enddo
28642.                         $I_L28642_140 = and( 0xfffffffffffffffcUL, n_tile )
28642.                      endif
28642.                      if ( $I_L28642_140 < n_tile ) then
28642.                         $I_L28642_152 = 0
28642. !dir$ blocking_size( 1, 1 )
28642.                         do
28642.                            $I_L28642_126 = 0
28642. !dir$ ivdep
28642. !dir$ blocking_size( 256, 256 )
28642.                            do
28642.                               $l_S24 = list_tile(1 + $I_L28642_126)
28642.                               flux_up_tile(1 + $I_L28642_126, 1 + $I_L28642_140 + $I_L28642_152) = weight_band * ( planck_flux_tile(1 + $I_L28642_126, 1 + $I_L28642_140 + $I_L28642_152) + rho_alb_tile(1 + $I_L28642_126, 1, 1 + $I_L28642_140 + $I_L28642_152) * ( planck_flux_bottom($l_S24) + flux_down_incr($l_S24) + -planck_flux_tile(1 + $I_L28642_126, 1 + $I_L28642_140 + $I_L28642_152) ) )
28642.                               $I_L28642_126 = 1 + $I_L28642_126
28642.                               if ( $I_L28642_126 >= n_point_tile ) exit
28642.                            enddo
28642.                            $I_L28642_152 = 1 + $I_L28642_152
28642.                            if ( $I_L28642_152 >= n_tile + -$I_L28642_140 ) exit
28642.                         enddo
28642.                      endif
28642.                   endif
28642.                endif
28642.             endif
28642.             goto 20
28642.          else if ( i_angular_integration == 3 ) then
28642.             _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$139,  _substr(t$138,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Tiled surfaces have not yet been ', 0x800600000000L ), _iotype( 'implemented with the spherical harmonic solver.', 0x800600000000L ) ) )
28642.             ierr = 1
28642.          else
28642.    20       continue
28642.             l_initial = .false.
28642.          endif
28642.          flux_total_band(1, 2 + 2 * n_layer) = _copyout( flux_down_incr )
28642.          flux_direct_band(1, n_layer) = _copyout( flux_direct_incr )
28658.          if ( ierr /= 0 ) then
28059.             _free( t$3540 )
28059.          else
28059.             goto 30
28059.          endif
28059.       else
28059.    30    continue
28663.          l_initial = .false.
28059.          _free( t$3540 )
28059.       endif
28668.       return
28668.       end
28668.       
28686.       
28686.       subroutine solver_homogen_direct( n_profile, n_layer, trans, reflect, s_down, s_up, isolir, diffuse_albedo, direct_albedo, flux_direct_ground, flux_inc_down, d_planck_flux_surface, flux_total, nd_profile, nd_layer )
28686.       t$898 = nd_profile
28686.       t$899 = nd_layer
28724.       t$3578 = _zla( 0, nd_profile )
28686.       t$3579 = _zla( 0, nd_profile )
28724.       t$3580 = _zla( 0, nd_layer )
28686.       t$3581 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
28686.       t$900 = ( 2 + 2 * nd_layer )
28745.       t$3582 = _zla( 0, ( 2 + 2 * nd_layer ) )
28686.       t$3583 = _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
28686.       t$901 = ( 1 + nd_layer )
28756.       t$3584 = _zla( 0, ( 1 + nd_layer ) )
28686.       t$3585 = _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
28756.       t$3588 = 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
28758.       t$3589 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
28758.       t$3591 = t$3589 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
28760.       t$3592 = 8 * ( 7 + t$3589 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
28760.       t$3594 = t$3592 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
28762.       t$3595 = 8 * ( 7 + t$3592 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
28762.       t$3597 = t$3595 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
28764.       t$3598 = 8 * ( 7 + t$3595 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
28764.       t$3600 = t$3598 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
28686.       t$3586 = int( _alloc( t$3598 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ), 8 )
28756.       t$3587 = t$3586
28758.       t$3590 = t$3589 + t$3586
28760.       t$3593 = t$3592 + t$3586
28762.       t$3596 = t$3595 + t$3586
28764.       t$3599 = t$3598 + t$3586
28770.       if ( isolir == 1 ) then
28771.          if ( n_profile > 0 ) then
28771.             $I_L28771_56 = 0
28771. !dir$ ivdep
28771.             do
28772.                alpha(1 + $I_L28771_56, 1 + n_layer) = diffuse_albedo(1 + $I_L28771_56)
28773.                s_up_prime(1 + $I_L28771_56, 1 + n_layer) = flux_direct_ground(1 + $I_L28771_56) * ( direct_albedo(1 + $I_L28771_56) + -diffuse_albedo(1 + $I_L28771_56) )
28776.                $I_L28771_56 = 1 + $I_L28771_56
28771.                if ( $I_L28771_56 >= n_profile ) exit
28771.             enddo
28771.          endif
28777.       else if ( isolir == 2 ) then
28778.          if ( n_profile > 0 ) then
28778.             $I_L28778_58 = 0
28778. !dir$ ivdep
28778.             do
28779.                alpha(1 + $I_L28778_58, 1 + n_layer) = diffuse_albedo(1 + $I_L28778_58)
28780.                s_up_prime(1 + $I_L28778_58, 1 + n_layer) = d_planck_flux_surface(1 + $I_L28778_58) * ( 1.0 + -diffuse_albedo(1 + $I_L28778_58) )
28783.                $I_L28778_58 = 1 + $I_L28778_58
28778.                if ( $I_L28778_58 >= n_profile ) exit
28778.             enddo
28778.          endif
28778.       endif
28787.       if ( n_layer > 0 ) then
28788.          if ( n_profile > 0 ) then
28787.             $I_L28787_66 = 0
28787.             if ( n_layer >= 2 ) then
28787.                $I_L28787_70 = 0
28787. !dir$ blocking_size( 1, 1 )
28787.                do
28788.                   $I_L28788_60 = 0
28788. !dir$ ivdep
28788. !dir$ blocking_size( 256, 256 )
28788.                   do
28789.                      $beta_WR0_R0 = 1.0/( 1.0 + -( alpha(1 + $I_L28788_60, 1 + n_layer + -2 * $I_L28787_70) * reflect(1 + $I_L28788_60, n_layer + -2 * $I_L28787_70) ) )
28789.                      beta(1 + $I_L28788_60, n_layer + -2 * $I_L28787_70) = $beta_WR0_R0
28791.                      $gamma_WR0_R1 = alpha(1 + $I_L28788_60, 1 + n_layer + -2 * $I_L28787_70) * trans(1 + $I_L28788_60, n_layer + -2 * $I_L28787_70)
28791.                      gamma(1 + $I_L28788_60, n_layer + -2 * $I_L28787_70) = $gamma_WR0_R1
28792.                      $h_WR0_R2 = s_up_prime(1 + $I_L28788_60, 1 + n_layer + -2 * $I_L28787_70) + alpha(1 + $I_L28788_60, 1 + n_layer + -2 * $I_L28787_70) * s_down(1 + $I_L28788_60, n_layer + -2 * $I_L28787_70)
28792.                      h(1 + $I_L28788_60, n_layer + -2 * $I_L28787_70) = $h_WR0_R2
28793.                      alpha(1 + $I_L28788_60, n_layer + -2 * $I_L28787_70) = reflect(1 + $I_L28788_60, n_layer + -2 * $I_L28787_70) + $beta_WR0_R0 * $gamma_WR0_R1 * trans(1 + $I_L28788_60, n_layer + -2 * $I_L28787_70)
28795.                      s_up_prime(1 + $I_L28788_60, n_layer + -2 * $I_L28787_70) = s_up(1 + $I_L28788_60, n_layer + -2 * $I_L28787_70) + $beta_WR0_R0 * $h_WR0_R2 * trans(1 + $I_L28788_60, n_layer + -2 * $I_L28787_70)
28789.                      $beta_WR0_R0 = 1.0/( 1.0 + -( alpha(1 + $I_L28788_60, n_layer + -2 * $I_L28787_70) * reflect(1 + $I_L28788_60, -1 + n_layer + -2 * $I_L28787_70) ) )
28789.                      beta(1 + $I_L28788_60, -1 + n_layer + -2 * $I_L28787_70) = $beta_WR0_R0
28791.                      $gamma_WR0_R1 = alpha(1 + $I_L28788_60, n_layer + -2 * $I_L28787_70) * trans(1 + $I_L28788_60, -1 + n_layer + -2 * $I_L28787_70)
28791.                      gamma(1 + $I_L28788_60, -1 + n_layer + -2 * $I_L28787_70) = $gamma_WR0_R1
28792.                      $h_WR0_R2 = s_up_prime(1 + $I_L28788_60, n_layer + -2 * $I_L28787_70) + alpha(1 + $I_L28788_60, n_layer + -2 * $I_L28787_70) * s_down(1 + $I_L28788_60, -1 + n_layer + -2 * $I_L28787_70)
28792.                      h(1 + $I_L28788_60, -1 + n_layer + -2 * $I_L28787_70) = $h_WR0_R2
28793.                      alpha(1 + $I_L28788_60, -1 + n_layer + -2 * $I_L28787_70) = reflect(1 + $I_L28788_60, -1 + n_layer + -2 * $I_L28787_70) + $beta_WR0_R0 * $gamma_WR0_R1 * trans(1 + $I_L28788_60, -1 + n_layer + -2 * $I_L28787_70)
28795.                      s_up_prime(1 + $I_L28788_60, -1 + n_layer + -2 * $I_L28787_70) = s_up(1 + $I_L28788_60, -1 + n_layer + -2 * $I_L28787_70) + $beta_WR0_R0 * $h_WR0_R2 * trans(1 + $I_L28788_60, -1 + n_layer + -2 * $I_L28787_70)
28796.                      $I_L28788_60 = 1 + $I_L28788_60
28788.                      if ( $I_L28788_60 >= n_profile ) exit
28788.                   enddo
28797.                   $I_L28787_70 = 1 + $I_L28787_70
28796.                   if ( $I_L28787_70 >= _rsh( n_layer, 1 ) ) exit
28796.                enddo
28797.                $I_L28787_66 = and( 0xfffffffffffffffeUL, n_layer )
28797.             endif
28787.             if ( $I_L28787_66 < n_layer ) then
28788.                $I_L28788_60 = 0
28788. !dir$ ivdep
28788. !dir$ blocking_size( 256, 256 )
28788.                do
28789.                   $beta_WR0_R0 = 1.0/( 1.0 + -( reflect(1 + $I_L28788_60, n_layer + -$I_L28787_66) * alpha(1 + $I_L28788_60, 1 + n_layer + -$I_L28787_66) ) )
28789.                   beta(1 + $I_L28788_60, n_layer + -$I_L28787_66) = $beta_WR0_R0
28791.                   $gamma_WR0_R1 = alpha(1 + $I_L28788_60, 1 + n_layer + -$I_L28787_66) * trans(1 + $I_L28788_60, n_layer + -$I_L28787_66)
28791.                   gamma(1 + $I_L28788_60, n_layer + -$I_L28787_66) = $gamma_WR0_R1
28792.                   $h_WR0_R2 = s_up_prime(1 + $I_L28788_60, 1 + n_layer + -$I_L28787_66) + alpha(1 + $I_L28788_60, 1 + n_layer + -$I_L28787_66) * s_down(1 + $I_L28788_60, n_layer + -$I_L28787_66)
28792.                   h(1 + $I_L28788_60, n_layer + -$I_L28787_66) = $h_WR0_R2
28793.                   alpha(1 + $I_L28788_60, n_layer + -$I_L28787_66) = reflect(1 + $I_L28788_60, n_layer + -$I_L28787_66) + $beta_WR0_R0 * $gamma_WR0_R1 * trans(1 + $I_L28788_60, n_layer + -$I_L28787_66)
28795.                   s_up_prime(1 + $I_L28788_60, n_layer + -$I_L28787_66) = s_up(1 + $I_L28788_60, n_layer + -$I_L28787_66) + $beta_WR0_R0 * $h_WR0_R2 * trans(1 + $I_L28788_60, n_layer + -$I_L28787_66)
28796.                   $I_L28788_60 = 1 + $I_L28788_60
28788.                   if ( $I_L28788_60 >= n_profile ) exit
28788.                enddo
28788.             endif
28788.          endif
28788.       endif
28800.       if ( n_profile > 0 ) then
28800.          $I_L28800_62 = 0
28800. !dir$ ivdep
28800.          do
28801.             $flux_total_WR0_R3 = flux_inc_down(1 + $I_L28800_62)
28801.             flux_total(1 + $I_L28800_62, 2) = $flux_total_WR0_R3
28802.             flux_total(1 + $I_L28800_62, 1) = s_up_prime(1 + $I_L28800_62, 1) + $flux_total_WR0_R3 * alpha(1 + $I_L28800_62, 1)
28803.             $I_L28800_62 = 1 + $I_L28800_62
28800.             if ( $I_L28800_62 >= n_profile ) exit
28800.          enddo
28800.       endif
28806.       if ( n_layer > 0 ) then
28807.          if ( n_profile > 0 ) then
28806.             $I_L28806_68 = 0
28806.             if ( n_layer >= 2 ) then
28806.                $I_L28806_72 = 0
28806.                do
28807.                   $I_L28807_64 = 0
28807. !dir$ ivdep
28807.                   do
28809.                      $flux_total_WR0_R4 = beta(1 + $I_L28807_64, 1 + 2 * $I_L28806_72) * ( h(1 + $I_L28807_64, 1 + 2 * $I_L28806_72) + gamma(1 + $I_L28807_64, 1 + 2 * $I_L28806_72) * flux_total(1 + $I_L28807_64, 2 + 4 * $I_L28806_72) )
28809.                      flux_total(1 + $I_L28807_64, 3 + 4 * $I_L28806_72) = $flux_total_WR0_R4
28812.                      flux_total(1 + $I_L28807_64, 4 + 4 * $I_L28806_72) = s_down(1 + $I_L28807_64, 1 + 2 * $I_L28806_72) + $flux_total_WR0_R4 * reflect(1 + $I_L28807_64, 1 + 2 * $I_L28806_72) + flux_total(1 + $I_L28807_64, 2 + 4 * $I_L28806_72) * trans(1 + $I_L28807_64, 1 + 2 * $I_L28806_72)
28809.                      $flux_total_WR0_R4 = beta(1 + $I_L28807_64, 2 + 2 * $I_L28806_72) * ( h(1 + $I_L28807_64, 2 + 2 * $I_L28806_72) + flux_total(1 + $I_L28807_64, 4 + 4 * $I_L28806_72) * gamma(1 + $I_L28807_64, 2 + 2 * $I_L28806_72) )
28809.                      flux_total(1 + $I_L28807_64, 5 + 4 * $I_L28806_72) = $flux_total_WR0_R4
28812.                      flux_total(1 + $I_L28807_64, 6 + 4 * $I_L28806_72) = s_down(1 + $I_L28807_64, 2 + 2 * $I_L28806_72) + flux_total(1 + $I_L28807_64, 4 + 4 * $I_L28806_72) * trans(1 + $I_L28807_64, 2 + 2 * $I_L28806_72) + $flux_total_WR0_R4 * reflect(1 + $I_L28807_64, 2 + 2 * $I_L28806_72)
28815.                      $I_L28807_64 = 1 + $I_L28807_64
28807.                      if ( $I_L28807_64 >= n_profile ) exit
28807.                   enddo
28816.                   $I_L28806_72 = 1 + $I_L28806_72
28815.                   if ( $I_L28806_72 >= _rsh( n_layer, 1 ) ) exit
28815.                enddo
28816.                $I_L28806_68 = and( 0xfffffffffffffffeUL, n_layer )
28816.             endif
28806.             if ( $I_L28806_68 < n_layer ) then
28807.                $I_L28807_64 = 0
28807. !dir$ ivdep
28807.                do
28809.                   $flux_total_WR0_R4 = beta(1 + $I_L28807_64, 1 + $I_L28806_68) * ( h(1 + $I_L28807_64, 1 + $I_L28806_68) + flux_total(1 + $I_L28807_64, 2 + 2 * $I_L28806_68) * gamma(1 + $I_L28807_64, 1 + $I_L28806_68) )
28809.                   flux_total(1 + $I_L28807_64, 3 + 2 * $I_L28806_68) = $flux_total_WR0_R4
28812.                   flux_total(1 + $I_L28807_64, 4 + 2 * $I_L28806_68) = s_down(1 + $I_L28807_64, 1 + $I_L28806_68) + flux_total(1 + $I_L28807_64, 2 + 2 * $I_L28806_68) * trans(1 + $I_L28807_64, 1 + $I_L28806_68) + $flux_total_WR0_R4 * reflect(1 + $I_L28807_64, 1 + $I_L28806_68)
28815.                   $I_L28807_64 = 1 + $I_L28807_64
28807.                   if ( $I_L28807_64 >= n_profile ) exit
28807.                enddo
28807.             endif
28807.          endif
28807.       endif
28686.       _free( t$3586 )
28821.       return
28821.       end
28821.       
28842.       
28842.       subroutine solver_mix_direct( n_profile, n_layer, n_cloud_top, t, r, s_down, s_up, t_cloud, r_cloud, s_down_cloud, s_up_cloud, v11, v21, v12, v22, u11, u12, u21, u22, flux_inc_down, source_ground_free, source_ground_cloud, albedo_surface_diff, flux_total, nd_profile, nd_layer, id_ct )
28842.       t$902 = nd_profile
28842.       t$903 = nd_layer
28880.       t$3601 = _zla( 0, nd_profile )
28842.       t$3602 = _zla( 0, nd_profile )
28880.       t$3603 = _zla( 0, nd_layer )
28842.       t$3604 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
28842.       t$904 = ( -1 + id_ct )
28842.       t$3605 = 2 + nd_layer + -id_ct
28897.       t$3606 = _zla( 0, 2 + nd_layer + -id_ct )
28842.       t$3607 = _zla( 0, nd_profile ) * _zla( 0, 2 + nd_layer + -id_ct )
28842.       t$905 = ( 2 + 2 * nd_layer )
28923.       t$3608 = _zla( 0, ( 2 + 2 * nd_layer ) )
28842.       t$3609 = _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
28842.       t$906 = ( 1 + nd_layer )
28935.       t$3610 = _zla( 0, ( 1 + nd_layer ) )
28842.       t$3611 = _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
28935.       t$3614 = 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
28938.       t$3615 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
28938.       t$3617 = t$3615 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
28937.       t$3618 = 8 * ( 7 + t$3615 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
28937.       t$3620 = t$3618 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
28936.       t$3621 = 8 * ( 7 + t$3618 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
28936.       t$3623 = t$3621 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
28947.       t$3624 = 8 * ( 7 + t$3621 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
28947.       t$3626 = t$3624 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
28948.       t$3627 = 8 * ( 7 + t$3624 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
28948.       t$3629 = t$3627 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
28949.       t$3630 = 8 * ( 7 + t$3627 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
28949.       t$3632 = t$3630 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
28842.       t$3633 = 1 + nd_layer
28964.       t$3634 = _zla( 0, 1 + nd_layer )
28842.       t$3635 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
28964.       t$3636 = 8 * ( 7 + t$3630 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
28964.       t$3638 = t$3636 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
28966.       t$3639 = 8 * ( 7 + t$3636 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
28966.       t$3641 = t$3639 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
28968.       t$3642 = 8 * ( 7 + t$3639 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
28968.       t$3644 = t$3642 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
28970.       t$3645 = 8 * ( 7 + t$3642 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
28970.       t$3647 = t$3645 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
28939.       t$3648 = 8 * ( 7 + t$3645 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
28939.       t$3650 = t$3648 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
28940.       t$3651 = 8 * ( 7 + t$3648 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
28940.       t$3653 = t$3651 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
28943.       t$3654 = 8 * ( 7 + t$3651 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
28943.       t$3656 = t$3654 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
28944.       t$3657 = 8 * ( 7 + t$3654 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
28944.       t$3659 = t$3657 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
28945.       t$3660 = 8 * ( 7 + t$3657 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
28945.       t$3662 = t$3660 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
28946.       t$3663 = 8 * ( 7 + t$3660 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
28946.       t$3665 = t$3663 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
28950.       t$3666 = 8 * ( 7 + t$3663 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
28950.       t$3668 = t$3666 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
28951.       t$3669 = 8 * ( 7 + t$3666 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
28951.       t$3671 = t$3669 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
28842.       t$3612 = int( _alloc( t$3669 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ), 8 )
28935.       t$3613 = t$3612
28938.       t$3616 = t$3615 + t$3612
28937.       t$3619 = t$3618 + t$3612
28936.       t$3622 = t$3621 + t$3612
28947.       t$3625 = t$3624 + t$3612
28948.       t$3628 = t$3627 + t$3612
28949.       t$3631 = t$3630 + t$3612
28964.       t$3637 = t$3636 + t$3612
28966.       t$3640 = t$3639 + t$3612
28968.       t$3643 = t$3642 + t$3612
28970.       t$3646 = t$3645 + t$3612
28939.       t$3649 = t$3648 + t$3612
28940.       t$3652 = t$3651 + t$3612
28943.       t$3655 = t$3654 + t$3612
28944.       t$3658 = t$3657 + t$3612
28945.       t$3661 = t$3660 + t$3612
28946.       t$3664 = t$3663 + t$3612
28950.       t$3667 = t$3666 + t$3612
28951.       t$3670 = t$3669 + t$3612
28976.       if ( n_profile > 0 ) then
28976.          $I_L28976_132 = 0
28976. !dir$ ivdep
28976.          do
28977.             alpha11(1 + $I_L28976_132, 1 + n_layer) = albedo_surface_diff(1 + $I_L28976_132)
28978.             alpha22(1 + $I_L28976_132, 1 + n_layer) = albedo_surface_diff(1 + $I_L28976_132)
28979.             alpha21(1 + $I_L28976_132, 1 + n_layer) = 0.0
28980.             alpha12(1 + $I_L28976_132, 1 + n_layer) = 0.0
28981.             g1(1 + $I_L28976_132, 1 + n_layer) = source_ground_free(1 + $I_L28976_132)
28982.             g2(1 + $I_L28976_132, 1 + n_layer) = source_ground_cloud(1 + $I_L28976_132)
29077.             flux_total(1 + $I_L28976_132, 2) = flux_inc_down(1 + $I_L28976_132)
28983.             $I_L28976_132 = 1 + $I_L28976_132
28976.             if ( $I_L28976_132 >= n_profile ) exit
28976.          enddo
28976.       endif
28986.       if ( n_cloud_top + -n_layer <= 0 ) then
28987.          if ( n_profile > 0 ) then
28986.             $I_L28986_154 = 0
28986. !dir$ blocking_size( 1, 1 )
28986.             do
28987.                $I_L28987_134 = 0
28987. !dir$ ivdep
28987. !dir$ blocking_size( 256, 256 )
28987.                do
28989.                   $theta11_S8 = v11(1 + $I_L28987_134, n_layer + -$I_L28986_154) * alpha11(1 + $I_L28987_134, 1 + n_layer + -$I_L28986_154) + v21(1 + $I_L28987_134, n_layer + -$I_L28986_154) * alpha12(1 + $I_L28987_134, 1 + n_layer + -$I_L28986_154)
28990.                   $theta12_S6 = alpha11(1 + $I_L28987_134, 1 + n_layer + -$I_L28986_154) * v12(1 + $I_L28987_134, n_layer + -$I_L28986_154) + alpha12(1 + $I_L28987_134, 1 + n_layer + -$I_L28986_154) * v22(1 + $I_L28987_134, n_layer + -$I_L28986_154)
28991.                   $theta21_S4 = v11(1 + $I_L28987_134, n_layer + -$I_L28986_154) * alpha21(1 + $I_L28987_134, 1 + n_layer + -$I_L28986_154) + v21(1 + $I_L28987_134, n_layer + -$I_L28986_154) * alpha22(1 + $I_L28987_134, 1 + n_layer + -$I_L28986_154)
28992.                   $theta22_S5 = v12(1 + $I_L28987_134, n_layer + -$I_L28986_154) * alpha21(1 + $I_L28987_134, 1 + n_layer + -$I_L28986_154) + v22(1 + $I_L28987_134, n_layer + -$I_L28986_154) * alpha22(1 + $I_L28987_134, 1 + n_layer + -$I_L28986_154)
28993.                   $beta21_WR0_R0 = -( $theta21_S4 * r(1 + $I_L28987_134, n_layer + -$I_L28986_154) )
28993.                   beta21(1 + $I_L28987_134, n_layer + -$I_L28986_154) = $beta21_WR0_R0
28994.                   $beta22_inv_WR0_R1 = 1.0/( 1.0 + -( $theta22_S5 * r_cloud(1 + $I_L28987_134, n_layer + -$I_L28986_154) ) )
28994.                   beta22_inv(1 + $I_L28987_134, n_layer + -$I_L28986_154) = $beta22_inv_WR0_R1
28996.                   $gamma21_WR0_R2 = $theta21_S4 * t(1 + $I_L28987_134, n_layer + -$I_L28986_154)
28996.                   gamma21(1 + $I_L28987_134, n_layer + -$I_L28986_154) = $gamma21_WR0_R2
28997.                   $gamma22_WR0_R3 = $theta22_S5 * t_cloud(1 + $I_L28987_134, n_layer + -$I_L28986_154)
28997.                   gamma22(1 + $I_L28987_134, n_layer + -$I_L28986_154) = $gamma22_WR0_R3
28998.                   $h2_WR0_R4 = g2(1 + $I_L28987_134, 1 + n_layer + -$I_L28986_154) + $theta21_S4 * s_down(1 + $I_L28987_134, n_layer + -$I_L28986_154) + $theta22_S5 * s_down_cloud(1 + $I_L28987_134, n_layer + -$I_L28986_154)
28998.                   h2(1 + $I_L28987_134, n_layer + -$I_L28986_154) = $h2_WR0_R4
29000.                   $lambda_S7 = $theta12_S6 * $beta22_inv_WR0_R1 * r_cloud(1 + $I_L28987_134, n_layer + -$I_L28986_154)
29001.                   $beta11_inv_WR0_R5 = 1.0/( 1.0 + -( $theta11_S8 * r(1 + $I_L28987_134, n_layer + -$I_L28986_154) ) + $lambda_S7 * $beta21_WR0_R0 )
29001.                   beta11_inv(1 + $I_L28987_134, n_layer + -$I_L28986_154) = $beta11_inv_WR0_R5
29003.                   $gamma11_WR0_R6 = $lambda_S7 * $gamma21_WR0_R2 + $theta11_S8 * t(1 + $I_L28987_134, n_layer + -$I_L28986_154)
29003.                   gamma11(1 + $I_L28987_134, n_layer + -$I_L28986_154) = $gamma11_WR0_R6
29004.                   $gamma12_WR0_R7 = $lambda_S7 * $gamma22_WR0_R3 + $theta12_S6 * t_cloud(1 + $I_L28987_134, n_layer + -$I_L28986_154)
29004.                   gamma12(1 + $I_L28987_134, n_layer + -$I_L28986_154) = $gamma12_WR0_R7
29005.                   $h1_WR0_R8 = g1(1 + $I_L28987_134, 1 + n_layer + -$I_L28986_154) + $theta12_S6 * s_down_cloud(1 + $I_L28987_134, n_layer + -$I_L28986_154) + $lambda_S7 * $h2_WR0_R4 + $theta11_S8 * s_down(1 + $I_L28987_134, n_layer + -$I_L28986_154)
29005.                   h1(1 + $I_L28987_134, n_layer + -$I_L28986_154) = $h1_WR0_R8
29007.                   $lambda_S9 = $beta22_inv_WR0_R1 * t_cloud(1 + $I_L28987_134, n_layer + -$I_L28986_154) * u22(1 + $I_L28987_134, -1 + n_layer + -$I_L28986_154)
29008.                   $lambda_bar_S10 = $beta11_inv_WR0_R5 * ( $lambda_S9 * $beta21_WR0_R0 + t(1 + $I_L28987_134, n_layer + -$I_L28986_154) * u21(1 + $I_L28987_134, -1 + n_layer + -$I_L28986_154) )
29010.                   alpha21(1 + $I_L28987_134, n_layer + -$I_L28986_154) = r(1 + $I_L28987_134, n_layer + -$I_L28986_154) * u21(1 + $I_L28987_134, -1 + n_layer + -$I_L28986_154) + $lambda_S9 * $gamma21_WR0_R2 + $lambda_bar_S10 * $gamma11_WR0_R6
29012.                   alpha22(1 + $I_L28987_134, n_layer + -$I_L28986_154) = r_cloud(1 + $I_L28987_134, n_layer + -$I_L28986_154) * u22(1 + $I_L28987_134, -1 + n_layer + -$I_L28986_154) + $lambda_S9 * $gamma22_WR0_R3 + $lambda_bar_S10 * $gamma12_WR0_R7
29014.                   g2(1 + $I_L28987_134, n_layer + -$I_L28986_154) = u21(1 + $I_L28987_134, -1 + n_layer + -$I_L28986_154) * s_up(1 + $I_L28987_134, n_layer + -$I_L28986_154) + u22(1 + $I_L28987_134, -1 + n_layer + -$I_L28986_154) * s_up_cloud(1 + $I_L28987_134, n_layer + -$I_L28986_154) + $lambda_S9 * $h2_WR0_R4 + $lambda_bar_S10 * $h1_WR0_R8
29017.                   $lambda_S11 = u12(1 + $I_L28987_134, -1 + n_layer + -$I_L28986_154) * $beta22_inv_WR0_R1 * t_cloud(1 + $I_L28987_134, n_layer + -$I_L28986_154)
29018.                   $lambda_bar_S12 = $beta11_inv_WR0_R5 * ( $lambda_S11 * $beta21_WR0_R0 + t(1 + $I_L28987_134, n_layer + -$I_L28986_154) * u11(1 + $I_L28987_134, -1 + n_layer + -$I_L28986_154) )
29020.                   alpha11(1 + $I_L28987_134, n_layer + -$I_L28986_154) = r(1 + $I_L28987_134, n_layer + -$I_L28986_154) * u11(1 + $I_L28987_134, -1 + n_layer + -$I_L28986_154) + $lambda_S11 * $gamma21_WR0_R2 + $lambda_bar_S12 * $gamma11_WR0_R6
29022.                   alpha12(1 + $I_L28987_134, n_layer + -$I_L28986_154) = r_cloud(1 + $I_L28987_134, n_layer + -$I_L28986_154) * u12(1 + $I_L28987_134, -1 + n_layer + -$I_L28986_154) + $lambda_S11 * $gamma22_WR0_R3 + $lambda_bar_S12 * $gamma12_WR0_R7
29024.                   g1(1 + $I_L28987_134, n_layer + -$I_L28986_154) = s_up(1 + $I_L28987_134, n_layer + -$I_L28986_154) * u11(1 + $I_L28987_134, -1 + n_layer + -$I_L28986_154) + s_up_cloud(1 + $I_L28987_134, n_layer + -$I_L28986_154) * u12(1 + $I_L28987_134, -1 + n_layer + -$I_L28986_154) + $lambda_S11 * $h2_WR0_R4 + $lambda_bar_S12 * $h1_WR0_R8
29027.                   $I_L28987_134 = 1 + $I_L28987_134
28987.                   if ( $I_L28987_134 >= n_profile ) exit
28987.                enddo
29028.                $I_L28986_154 = 1 + $I_L28986_154
29027.                if ( $I_L28986_154 >= 1 + n_layer + -n_cloud_top ) exit
29027.             enddo
29027.          endif
29027.       endif
29033.       if ( n_cloud_top > 1 ) then
29036.          if ( n_profile > 0 ) then
29038.             if ( n_cloud_top < n_layer ) then
29036.                $I_L29036_136 = 0
29036. !dir$ ivdep
29036.                do
29041.                   $theta11_S14 = alpha11(1 + $I_L29036_136, n_cloud_top) * v11(1 + $I_L29036_136, -1 + n_cloud_top) + alpha12(1 + $I_L29036_136, n_cloud_top) * v21(1 + $I_L29036_136, -1 + n_cloud_top)
29046.                   $beta11_inv_WR0_R9 = 1.0/( 1.0 + -( $theta11_S14 * r(1 + $I_L29036_136, -1 + n_cloud_top) ) )
29046.                   beta11_inv(1 + $I_L29036_136, -1 + n_cloud_top) = $beta11_inv_WR0_R9
29047.                   $gamma11_WR0_R10 = $theta11_S14 * t(1 + $I_L29036_136, -1 + n_cloud_top)
29047.                   gamma11(1 + $I_L29036_136, -1 + n_cloud_top) = $gamma11_WR0_R10
29048.                   $h1_WR0_R11 = g1(1 + $I_L29036_136, n_cloud_top) + $theta11_S14 * s_down(1 + $I_L29036_136, -1 + n_cloud_top)
29048.                   h1(1 + $I_L29036_136, -1 + n_cloud_top) = $h1_WR0_R11
29050.                   $lambda_S15 = $beta11_inv_WR0_R9 * t(1 + $I_L29036_136, -1 + n_cloud_top)
29051.                   alpha11(1 + $I_L29036_136, -1 + n_cloud_top) = r(1 + $I_L29036_136, -1 + n_cloud_top) + $lambda_S15 * $gamma11_WR0_R10
29052.                   g1(1 + $I_L29036_136, -1 + n_cloud_top) = s_up(1 + $I_L29036_136, -1 + n_cloud_top) + $lambda_S15 * $h1_WR0_R11
29054.                   $I_L29036_136 = 1 + $I_L29036_136
29044.                   if ( $I_L29036_136 >= n_profile ) exit
29044.                enddo
29044.             else
29036.                $I_L29036_152 = 0
29036. !dir$ ivdep
29036.                do
29043.                   $theta11_S14 = alpha11(1 + $I_L29036_152, n_cloud_top)
29046.                   $beta11_inv_WR0_R12 = 1.0/( 1.0 + -( $theta11_S14 * r(1 + $I_L29036_152, -1 + n_cloud_top) ) )
29046.                   beta11_inv(1 + $I_L29036_152, -1 + n_cloud_top) = $beta11_inv_WR0_R12
29047.                   $gamma11_WR0_R13 = $theta11_S14 * t(1 + $I_L29036_152, -1 + n_cloud_top)
29047.                   gamma11(1 + $I_L29036_152, -1 + n_cloud_top) = $gamma11_WR0_R13
29048.                   $h1_WR0_R14 = g1(1 + $I_L29036_152, n_cloud_top) + $theta11_S14 * s_down(1 + $I_L29036_152, -1 + n_cloud_top)
29048.                   h1(1 + $I_L29036_152, -1 + n_cloud_top) = $h1_WR0_R14
29050.                   $lambda_S15 = $beta11_inv_WR0_R12 * t(1 + $I_L29036_152, -1 + n_cloud_top)
29051.                   alpha11(1 + $I_L29036_152, -1 + n_cloud_top) = r(1 + $I_L29036_152, -1 + n_cloud_top) + $lambda_S15 * $gamma11_WR0_R13
29052.                   g1(1 + $I_L29036_152, -1 + n_cloud_top) = s_up(1 + $I_L29036_152, -1 + n_cloud_top) + $lambda_S15 * $h1_WR0_R14
29054.                   $I_L29036_152 = 1 + $I_L29036_152
29044.                   if ( $I_L29036_152 >= n_profile ) exit
29044.                enddo
29044.             endif
29044.          endif
29044.       endif
29059.       if ( 2 + -n_cloud_top < 0 ) then
29060.          if ( n_profile > 0 ) then
29059.             $I_L29059_156 = 0
29059.             if ( -4 + n_cloud_top >= 0 ) then
29059.                $I_L29059_164 = 0
29059. !dir$ blocking_size( 1, 1 )
29059.                do
29060.                   $I_L29060_138 = 0
29060. !dir$ ivdep
29060. !dir$ blocking_size( 256, 256 )
29060.                   do
29062.                      $beta11_inv_WR0_R15 = 1.0/( 1.0 + -( alpha11(1 + $I_L29060_138, -1 + n_cloud_top + -2 * $I_L29059_164) * r(1 + $I_L29060_138, -2 + n_cloud_top + -2 * $I_L29059_164) ) )
29062.                      beta11_inv(1 + $I_L29060_138, -2 + n_cloud_top + -2 * $I_L29059_164) = $beta11_inv_WR0_R15
29064.                      $gamma11_WR0_R16 = alpha11(1 + $I_L29060_138, -1 + n_cloud_top + -2 * $I_L29059_164) * t(1 + $I_L29060_138, -2 + n_cloud_top + -2 * $I_L29059_164)
29064.                      gamma11(1 + $I_L29060_138, -2 + n_cloud_top + -2 * $I_L29059_164) = $gamma11_WR0_R16
29065.                      $h1_WR0_R17 = g1(1 + $I_L29060_138, -1 + n_cloud_top + -2 * $I_L29059_164) + alpha11(1 + $I_L29060_138, -1 + n_cloud_top + -2 * $I_L29059_164) * s_down(1 + $I_L29060_138, -2 + n_cloud_top + -2 * $I_L29059_164)
29065.                      h1(1 + $I_L29060_138, -2 + n_cloud_top + -2 * $I_L29059_164) = $h1_WR0_R17
29067.                      $lambda_S18 = $beta11_inv_WR0_R15 * t(1 + $I_L29060_138, -2 + n_cloud_top + -2 * $I_L29059_164)
29068.                      alpha11(1 + $I_L29060_138, -2 + n_cloud_top + -2 * $I_L29059_164) = r(1 + $I_L29060_138, -2 + n_cloud_top + -2 * $I_L29059_164) + $lambda_S18 * $gamma11_WR0_R16
29069.                      g1(1 + $I_L29060_138, -2 + n_cloud_top + -2 * $I_L29059_164) = s_up(1 + $I_L29060_138, -2 + n_cloud_top + -2 * $I_L29059_164) + $lambda_S18 * $h1_WR0_R17
29062.                      $beta11_inv_WR0_R15 = 1.0/( 1.0 + -( alpha11(1 + $I_L29060_138, -2 + n_cloud_top + -2 * $I_L29059_164) * r(1 + $I_L29060_138, -3 + n_cloud_top + -2 * $I_L29059_164) ) )
29062.                      beta11_inv(1 + $I_L29060_138, -3 + n_cloud_top + -2 * $I_L29059_164) = $beta11_inv_WR0_R15
29064.                      $gamma11_WR0_R16 = alpha11(1 + $I_L29060_138, -2 + n_cloud_top + -2 * $I_L29059_164) * t(1 + $I_L29060_138, -3 + n_cloud_top + -2 * $I_L29059_164)
29064.                      gamma11(1 + $I_L29060_138, -3 + n_cloud_top + -2 * $I_L29059_164) = $gamma11_WR0_R16
29065.                      $h1_WR0_R17 = g1(1 + $I_L29060_138, -2 + n_cloud_top + -2 * $I_L29059_164) + alpha11(1 + $I_L29060_138, -2 + n_cloud_top + -2 * $I_L29059_164) * s_down(1 + $I_L29060_138, -3 + n_cloud_top + -2 * $I_L29059_164)
29065.                      h1(1 + $I_L29060_138, -3 + n_cloud_top + -2 * $I_L29059_164) = $h1_WR0_R17
29067.                      $lambda_S18 = $beta11_inv_WR0_R15 * t(1 + $I_L29060_138, -3 + n_cloud_top + -2 * $I_L29059_164)
29068.                      alpha11(1 + $I_L29060_138, -3 + n_cloud_top + -2 * $I_L29059_164) = r(1 + $I_L29060_138, -3 + n_cloud_top + -2 * $I_L29059_164) + $lambda_S18 * $gamma11_WR0_R16
29069.                      g1(1 + $I_L29060_138, -3 + n_cloud_top + -2 * $I_L29059_164) = s_up(1 + $I_L29060_138, -3 + n_cloud_top + -2 * $I_L29059_164) + $lambda_S18 * $h1_WR0_R17
29071.                      $I_L29060_138 = 1 + $I_L29060_138
29060.                      if ( $I_L29060_138 >= n_profile ) exit
29060.                   enddo
29072.                   $I_L29059_164 = 1 + $I_L29059_164
29071.                   if ( $I_L29059_164 >= _rsh( -2 + n_cloud_top, 1 ) ) exit
29071.                enddo
29072.                $I_L29059_156 = and( 0xfffffffffffffffeUL, -2 + n_cloud_top )
29072.             endif
29059.             if ( $I_L29059_156 < -2 + n_cloud_top ) then
29060.                $I_L29060_138 = 0
29060. !dir$ ivdep
29060. !dir$ blocking_size( 256, 256 )
29060.                do
29062.                   $beta11_inv_WR0_R15 = 1.0/( 1.0 + -( r(1 + $I_L29060_138, -2 + n_cloud_top + -$I_L29059_156) * alpha11(1 + $I_L29060_138, -1 + n_cloud_top + -$I_L29059_156) ) )
29062.                   beta11_inv(1 + $I_L29060_138, -2 + n_cloud_top + -$I_L29059_156) = $beta11_inv_WR0_R15
29064.                   $gamma11_WR0_R16 = alpha11(1 + $I_L29060_138, -1 + n_cloud_top + -$I_L29059_156) * t(1 + $I_L29060_138, -2 + n_cloud_top + -$I_L29059_156)
29064.                   gamma11(1 + $I_L29060_138, -2 + n_cloud_top + -$I_L29059_156) = $gamma11_WR0_R16
29065.                   $h1_WR0_R17 = g1(1 + $I_L29060_138, -1 + n_cloud_top + -$I_L29059_156) + alpha11(1 + $I_L29060_138, -1 + n_cloud_top + -$I_L29059_156) * s_down(1 + $I_L29060_138, -2 + n_cloud_top + -$I_L29059_156)
29065.                   h1(1 + $I_L29060_138, -2 + n_cloud_top + -$I_L29059_156) = $h1_WR0_R17
29067.                   $lambda_S18 = $beta11_inv_WR0_R15 * t(1 + $I_L29060_138, -2 + n_cloud_top + -$I_L29059_156)
29068.                   alpha11(1 + $I_L29060_138, -2 + n_cloud_top + -$I_L29059_156) = r(1 + $I_L29060_138, -2 + n_cloud_top + -$I_L29059_156) + $lambda_S18 * $gamma11_WR0_R16
29069.                   g1(1 + $I_L29060_138, -2 + n_cloud_top + -$I_L29059_156) = s_up(1 + $I_L29060_138, -2 + n_cloud_top + -$I_L29059_156) + $lambda_S18 * $h1_WR0_R17
29071.                   $I_L29060_138 = 1 + $I_L29060_138
29060.                   if ( $I_L29060_138 >= n_profile ) exit
29060.                enddo
29060.             endif
29060.          endif
29060.       endif
29079.       if ( n_cloud_top > 1 ) then
29080.          if ( n_profile > 0 ) then
29080.             $I_L29080_140 = 0
29080. !dir$ ivdep
29080.             do
29081.                flux_total(1 + $I_L29080_140, 1) = g1(1 + $I_L29080_140, 1) + flux_total(1 + $I_L29080_140, 2) * alpha11(1 + $I_L29080_140, 1)
29082.                $I_L29080_140 = 1 + $I_L29080_140
29080.                if ( $I_L29080_140 >= n_profile ) exit
29080.             enddo
29092.             $I_L29092_158 = 0
29092.             if ( -3 + n_cloud_top >= 0 ) then
29092.                $I_L29092_166 = 0
29092.                do
29093.                   $I_L29093_144 = 0
29093. !dir$ ivdep
29093.                   do
29094.                      $flux_total_WR0_R18 = beta11_inv(1 + $I_L29093_144, 1 + 2 * $I_L29092_166) * ( h1(1 + $I_L29093_144, 1 + 2 * $I_L29092_166) + gamma11(1 + $I_L29093_144, 1 + 2 * $I_L29092_166) * flux_total(1 + $I_L29093_144, 2 + 4 * $I_L29092_166) )
29094.                      flux_total(1 + $I_L29093_144, 3 + 4 * $I_L29092_166) = $flux_total_WR0_R18
29096.                      flux_total(1 + $I_L29093_144, 4 + 4 * $I_L29092_166) = s_down(1 + $I_L29093_144, 1 + 2 * $I_L29092_166) + $flux_total_WR0_R18 * r(1 + $I_L29093_144, 1 + 2 * $I_L29092_166) + flux_total(1 + $I_L29093_144, 2 + 4 * $I_L29092_166) * t(1 + $I_L29093_144, 1 + 2 * $I_L29092_166)
29094.                      $flux_total_WR0_R18 = beta11_inv(1 + $I_L29093_144, 2 + 2 * $I_L29092_166) * ( h1(1 + $I_L29093_144, 2 + 2 * $I_L29092_166) + flux_total(1 + $I_L29093_144, 4 + 4 * $I_L29092_166) * gamma11(1 + $I_L29093_144, 2 + 2 * $I_L29092_166) )
29094.                      flux_total(1 + $I_L29093_144, 5 + 4 * $I_L29092_166) = $flux_total_WR0_R18
29096.                      flux_total(1 + $I_L29093_144, 6 + 4 * $I_L29092_166) = s_down(1 + $I_L29093_144, 2 + 2 * $I_L29092_166) + flux_total(1 + $I_L29093_144, 4 + 4 * $I_L29092_166) * t(1 + $I_L29093_144, 2 + 2 * $I_L29092_166) + $flux_total_WR0_R18 * r(1 + $I_L29093_144, 2 + 2 * $I_L29092_166)
29098.                      $I_L29093_144 = 1 + $I_L29093_144
29093.                      if ( $I_L29093_144 >= n_profile ) exit
29093.                   enddo
29099.                   $I_L29092_166 = 1 + $I_L29092_166
29098.                   if ( $I_L29092_166 >= _rsh( -1 + n_cloud_top, 1 ) ) exit
29098.                enddo
29099.                $I_L29092_158 = and( 0xfffffffffffffffeUL, -1 + n_cloud_top )
29099.             endif
29092.             if ( $I_L29092_158 < -1 + n_cloud_top ) then
29093.                $I_L29093_144 = 0
29093. !dir$ ivdep
29093.                do
29094.                   $flux_total_WR0_R18 = beta11_inv(1 + $I_L29093_144, 1 + $I_L29092_158) * ( h1(1 + $I_L29093_144, 1 + $I_L29092_158) + flux_total(1 + $I_L29093_144, 2 + 2 * $I_L29092_158) * gamma11(1 + $I_L29093_144, 1 + $I_L29092_158) )
29094.                   flux_total(1 + $I_L29093_144, 3 + 2 * $I_L29092_158) = $flux_total_WR0_R18
29096.                   flux_total(1 + $I_L29093_144, 4 + 2 * $I_L29092_158) = s_down(1 + $I_L29093_144, 1 + $I_L29092_158) + flux_total(1 + $I_L29093_144, 2 + 2 * $I_L29092_158) * t(1 + $I_L29093_144, 1 + $I_L29092_158) + $flux_total_WR0_R18 * r(1 + $I_L29093_144, 1 + $I_L29092_158)
29098.                   $I_L29093_144 = 1 + $I_L29093_144
29093.                   if ( $I_L29093_144 >= n_profile ) exit
29093.                enddo
29093.             endif
29093.          endif
29083.       else if ( n_profile > 0 ) then
29084.          $I_L29084_142 = 0
29084. !dir$ ivdep
29084.          do
29085.             flux_total(1 + $I_L29084_142, 1) = g1(1 + $I_L29084_142, 1) + flux_inc_down(1 + $I_L29084_142) * ( alpha11(1 + $I_L29084_142, 1) * v11(1 + $I_L29084_142, 0) + v21(1 + $I_L29084_142, 0) * alpha12(1 + $I_L29084_142, 1) )
29087.             $I_L29084_142 = 1 + $I_L29084_142
29084.             if ( $I_L29084_142 >= n_profile ) exit
29084.          enddo
29084.       endif
29105.       if ( n_cloud_top <= n_layer ) then
29109.          if ( n_profile > 0 ) then
29109.             $I_L29109_146 = 0
29109. !dir$ ivdep
29109.             do
29110.                $flux_down_1_WR0_R19 = v11(1 + $I_L29109_146, -1 + n_cloud_top) * flux_total(1 + $I_L29109_146, 2 * n_cloud_top)
29111.                $flux_down_2_WR0_R20 = flux_total(1 + $I_L29109_146, 2 * n_cloud_top) * v21(1 + $I_L29109_146, -1 + n_cloud_top)
29112.                $flux_up_1_WR0_R21 = beta11_inv(1 + $I_L29109_146, n_cloud_top) * ( h1(1 + $I_L29109_146, n_cloud_top) + $flux_down_1_WR0_R19 * gamma11(1 + $I_L29109_146, n_cloud_top) + $flux_down_2_WR0_R20 * gamma12(1 + $I_L29109_146, n_cloud_top) )
29112.                flux_up_1(1 + $I_L29109_146, n_cloud_top) = $flux_up_1_WR0_R21
29114.                $flux_up_2_WR0_R22 = beta22_inv(1 + $I_L29109_146, n_cloud_top) * ( h2(1 + $I_L29109_146, n_cloud_top) + -( $flux_up_1_WR0_R21 * beta21(1 + $I_L29109_146, n_cloud_top) ) + $flux_down_1_WR0_R19 * gamma21(1 + $I_L29109_146, n_cloud_top) + $flux_down_2_WR0_R20 * gamma22(1 + $I_L29109_146, n_cloud_top) )
29114.                flux_up_2(1 + $I_L29109_146, n_cloud_top) = $flux_up_2_WR0_R22
29117.                $flux_down_1_WR0_R19 = s_down(1 + $I_L29109_146, n_cloud_top) + $flux_down_1_WR0_R19 * t(1 + $I_L29109_146, n_cloud_top) + $flux_up_1_WR0_R21 * r(1 + $I_L29109_146, n_cloud_top)
29117.                flux_down_1(1 + $I_L29109_146, n_cloud_top) = $flux_down_1_WR0_R19
29119.                $flux_down_2_WR0_R20 = s_down_cloud(1 + $I_L29109_146, n_cloud_top) + $flux_down_2_WR0_R20 * t_cloud(1 + $I_L29109_146, n_cloud_top) + $flux_up_2_WR0_R22 * r_cloud(1 + $I_L29109_146, n_cloud_top)
29119.                flux_down_2(1 + $I_L29109_146, n_cloud_top) = $flux_down_2_WR0_R20
29121.                $I_L29109_146 = 1 + $I_L29109_146
29109.                if ( $I_L29109_146 >= n_profile ) exit
29109.             enddo
29109.          endif
29109.       endif
29126.       if ( n_layer + -n_cloud_top > 0 ) then
29127.          if ( n_profile > 0 ) then
29126.             $I_L29126_160 = 0
29126. !dir$ blocking_size( 1, 1 )
29126.             do
29127.                $I_L29127_148 = 0
29127. !dir$ ivdep
29127. !dir$ blocking_size( 256, 256 )
29127.                do
29128.                   $flux_down_1_WR0_R24 = flux_down_1(1 + $I_L29127_148, n_cloud_top + $I_L29126_160) * v11(1 + $I_L29127_148, n_cloud_top + $I_L29126_160) + flux_down_2(1 + $I_L29127_148, n_cloud_top + $I_L29126_160) * v12(1 + $I_L29127_148, n_cloud_top + $I_L29126_160)
29128.                   flux_down_1(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) = $flux_down_1_WR0_R24
29130.                   $flux_down_2_WR0_R23 = flux_down_1(1 + $I_L29127_148, n_cloud_top + $I_L29126_160) * v21(1 + $I_L29127_148, n_cloud_top + $I_L29126_160) + flux_down_2(1 + $I_L29127_148, n_cloud_top + $I_L29126_160) * v22(1 + $I_L29127_148, n_cloud_top + $I_L29126_160)
29130.                   flux_down_2(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) = $flux_down_2_WR0_R23
29132.                   $flux_up_1_WR0_R25 = beta11_inv(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) * ( h1(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) + $flux_down_2_WR0_R23 * gamma12(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) + $flux_down_1_WR0_R24 * gamma11(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) )
29132.                   flux_up_1(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) = $flux_up_1_WR0_R25
29135.                   $flux_up_2_WR0_R26 = beta22_inv(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) * ( h2(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) + -( $flux_up_1_WR0_R25 * beta21(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) ) + $flux_down_2_WR0_R23 * gamma22(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) + $flux_down_1_WR0_R24 * gamma21(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) )
29135.                   flux_up_2(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) = $flux_up_2_WR0_R26
29139.                   $flux_down_1_WR0_R24 = s_down(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) + $flux_down_1_WR0_R24 * t(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) + $flux_up_1_WR0_R25 * r(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160)
29139.                   flux_down_1(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) = $flux_down_1_WR0_R24
29141.                   $flux_down_2_WR0_R23 = s_down_cloud(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) + $flux_down_2_WR0_R23 * t_cloud(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) + $flux_up_2_WR0_R26 * r_cloud(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160)
29141.                   flux_down_2(1 + $I_L29127_148, 1 + n_cloud_top + $I_L29126_160) = $flux_down_2_WR0_R23
29143.                   $I_L29127_148 = 1 + $I_L29127_148
29127.                   if ( $I_L29127_148 >= n_profile ) exit
29127.                enddo
29144.                $I_L29126_160 = 1 + $I_L29126_160
29143.                if ( $I_L29126_160 >= ( n_layer + -n_cloud_top ) ) exit
29143.             enddo
29143.          endif
29143.       endif
29148.       if ( n_layer + -n_cloud_top >= 0 ) then
29149.          if ( n_profile > 0 ) then
29148.             $I_L29148_162 = 0
29148.             do
29149.                $I_L29149_150 = 0
29149. !dir$ ivdep
29149.                do
29150.                   flux_total(1 + $I_L29149_150, 1 + 2 * n_cloud_top + 2 * $I_L29148_162) = flux_up_1(1 + $I_L29149_150, n_cloud_top + $I_L29148_162) + flux_up_2(1 + $I_L29149_150, n_cloud_top + $I_L29148_162)
29151.                   flux_total(1 + $I_L29149_150, 2 + 2 * n_cloud_top + 2 * $I_L29148_162) = flux_down_1(1 + $I_L29149_150, n_cloud_top + $I_L29148_162) + flux_down_2(1 + $I_L29149_150, n_cloud_top + $I_L29148_162)
29152.                   $I_L29149_150 = 1 + $I_L29149_150
29149.                   if ( $I_L29149_150 >= n_profile ) exit
29149.                enddo
29153.                $I_L29148_162 = 1 + $I_L29148_162
29152.                if ( $I_L29148_162 >= 1 + n_layer + -n_cloud_top ) exit
29152.             enddo
29152.          endif
29152.       endif
28842.       _free( t$3612 )
29158.       return
29158.       end
29158.       
29181.       
29181.       subroutine solver_mix_direct_hogan( n_profile, n_layer, n_cloud_top, t, r, s_down, s_up, t_cloud, r_cloud, s_down_cloud, s_up_cloud, v11, v21, v12, v22, u11, u12, u21, u22, flux_inc_down, source_ground_free, source_ground_cloud, albedo_surface_diff, flux_total, nd_profile, nd_layer, id_ct )
29181.       t$907 = nd_profile
29181.       t$908 = nd_layer
29219.       t$3672 = _zla( 0, nd_profile )
29181.       t$3673 = _zla( 0, nd_profile )
29219.       t$3674 = _zla( 0, nd_layer )
29181.       t$3675 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29181.       t$909 = ( -1 + id_ct )
29181.       t$3676 = 2 + nd_layer + -id_ct
29236.       t$3677 = _zla( 0, 2 + nd_layer + -id_ct )
29181.       t$3678 = _zla( 0, nd_profile ) * _zla( 0, 2 + nd_layer + -id_ct )
29181.       t$910 = ( 2 + 2 * nd_layer )
29262.       t$3679 = _zla( 0, ( 2 + 2 * nd_layer ) )
29181.       t$3680 = _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
29181.       t$911 = ( 1 + nd_layer )
29274.       t$3681 = _zla( 0, ( 1 + nd_layer ) )
29181.       t$3682 = _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
29274.       t$3685 = 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
29275.       t$3686 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
29275.       t$3688 = t$3686 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
29282.       t$3689 = 8 * ( 7 + t$3686 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
29282.       t$3691 = t$3689 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29283.       t$3692 = 8 * ( 7 + t$3689 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29283.       t$3694 = t$3692 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29181.       t$3695 = 1 + nd_layer
29297.       t$3696 = _zla( 0, 1 + nd_layer )
29181.       t$3697 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29297.       t$3698 = 8 * ( 7 + t$3692 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29297.       t$3700 = t$3698 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29299.       t$3701 = 8 * ( 7 + t$3698 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
29299.       t$3703 = t$3701 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29301.       t$3704 = 8 * ( 7 + t$3701 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
29301.       t$3706 = t$3704 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29303.       t$3707 = 8 * ( 7 + t$3704 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
29303.       t$3709 = t$3707 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29276.       t$3710 = 8 * ( 7 + t$3707 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
29276.       t$3712 = t$3710 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
29277.       t$3713 = 8 * ( 7 + t$3710 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
29277.       t$3715 = t$3713 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
29280.       t$3716 = 8 * ( 7 + t$3713 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
29280.       t$3718 = t$3716 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29281.       t$3719 = 8 * ( 7 + t$3716 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29281.       t$3721 = t$3719 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29284.       t$3722 = 8 * ( 7 + t$3719 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29284.       t$3724 = t$3722 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29285.       t$3725 = 8 * ( 7 + t$3722 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29285.       t$3727 = t$3725 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29181.       t$3683 = int( _alloc( t$3725 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ), 8 )
29274.       t$3684 = t$3683
29275.       t$3687 = t$3686 + t$3683
29282.       t$3690 = t$3689 + t$3683
29283.       t$3693 = t$3692 + t$3683
29297.       t$3699 = t$3698 + t$3683
29299.       t$3702 = t$3701 + t$3683
29301.       t$3705 = t$3704 + t$3683
29303.       t$3708 = t$3707 + t$3683
29276.       t$3711 = t$3710 + t$3683
29277.       t$3714 = t$3713 + t$3683
29280.       t$3717 = t$3716 + t$3683
29281.       t$3720 = t$3719 + t$3683
29284.       t$3723 = t$3722 + t$3683
29285.       t$3726 = t$3725 + t$3683
29309.       if ( n_profile > 0 ) then
29309.          $I_L29309_132 = 0
29309. !dir$ ivdep
29309.          do
29310.             alpha11(1 + $I_L29309_132, 1 + n_layer) = albedo_surface_diff(1 + $I_L29309_132)
29311.             alpha22(1 + $I_L29309_132, 1 + n_layer) = albedo_surface_diff(1 + $I_L29309_132)
29312.             g1(1 + $I_L29309_132, 1 + n_layer) = source_ground_free(1 + $I_L29309_132)
29313.             g2(1 + $I_L29309_132, 1 + n_layer) = source_ground_cloud(1 + $I_L29309_132)
29393.             flux_total(1 + $I_L29309_132, 2) = flux_inc_down(1 + $I_L29309_132)
29314.             $I_L29309_132 = 1 + $I_L29309_132
29309.             if ( $I_L29309_132 >= n_profile ) exit
29309.          enddo
29309.       endif
29317.       if ( n_cloud_top + -n_layer <= 0 ) then
29318.          if ( n_profile > 0 ) then
29317.             $I_L29317_154 = 0
29317. !dir$ blocking_size( 1, 1 )
29317.             do
29318.                $I_L29318_134 = 0
29318. !dir$ ivdep
29318. !dir$ blocking_size( 256, 256 )
29318.                do
29320.                   $theta11_S4 = alpha11(1 + $I_L29318_134, 1 + n_layer + -$I_L29317_154) * v11(1 + $I_L29318_134, n_layer + -$I_L29317_154) + alpha22(1 + $I_L29318_134, 1 + n_layer + -$I_L29317_154) * v21(1 + $I_L29318_134, n_layer + -$I_L29317_154)
29321.                   $theta22_S5 = alpha11(1 + $I_L29318_134, 1 + n_layer + -$I_L29317_154) * v12(1 + $I_L29318_134, n_layer + -$I_L29317_154) + alpha22(1 + $I_L29318_134, 1 + n_layer + -$I_L29317_154) * v22(1 + $I_L29318_134, n_layer + -$I_L29317_154)
29323.                   $beta11_inv_WR0_R0 = 1.0/( 1.0 + -( $theta11_S4 * r(1 + $I_L29318_134, n_layer + -$I_L29317_154) ) )
29323.                   beta11_inv(1 + $I_L29318_134, n_layer + -$I_L29317_154) = $beta11_inv_WR0_R0
29324.                   gamma11(1 + $I_L29318_134, n_layer + -$I_L29317_154) = $theta11_S4 * t(1 + $I_L29318_134, n_layer + -$I_L29317_154)
29325.                   $h1_WR0_R1 = g1(1 + $I_L29318_134, 1 + n_layer + -$I_L29317_154) + $theta11_S4 * s_down(1 + $I_L29318_134, n_layer + -$I_L29317_154)
29325.                   h1(1 + $I_L29318_134, n_layer + -$I_L29317_154) = $h1_WR0_R1
29327.                   $beta22_inv_WR0_R2 = 1.0/( 1.0 + -( $theta22_S5 * r_cloud(1 + $I_L29318_134, n_layer + -$I_L29317_154) ) )
29327.                   beta22_inv(1 + $I_L29318_134, n_layer + -$I_L29317_154) = $beta22_inv_WR0_R2
29328.                   gamma22(1 + $I_L29318_134, n_layer + -$I_L29317_154) = $theta22_S5 * t_cloud(1 + $I_L29318_134, n_layer + -$I_L29317_154)
29329.                   $h2_WR0_R3 = g2(1 + $I_L29318_134, 1 + n_layer + -$I_L29317_154) + $theta22_S5 * s_down_cloud(1 + $I_L29318_134, n_layer + -$I_L29317_154)
29329.                   h2(1 + $I_L29318_134, n_layer + -$I_L29317_154) = $h2_WR0_R3
29331.                   $lambda1_S7 = s_up(1 + $I_L29318_134, n_layer + -$I_L29317_154) + $beta11_inv_WR0_R0 * $h1_WR0_R1 * t(1 + $I_L29318_134, n_layer + -$I_L29317_154)
29332.                   $lambda2_S6 = s_up_cloud(1 + $I_L29318_134, n_layer + -$I_L29317_154) + $beta22_inv_WR0_R2 * $h2_WR0_R3 * t_cloud(1 + $I_L29318_134, n_layer + -$I_L29317_154)
29335.                   alpha11(1 + $I_L29318_134, n_layer + -$I_L29317_154) = r(1 + $I_L29318_134, n_layer + -$I_L29317_154) + $theta11_S4 * $beta11_inv_WR0_R0 * t(1 + $I_L29318_134, n_layer + -$I_L29317_154) * t(1 + $I_L29318_134, n_layer + -$I_L29317_154)
29337.                   g1(1 + $I_L29318_134, n_layer + -$I_L29317_154) = $lambda2_S6 * u12(1 + $I_L29318_134, -1 + n_layer + -$I_L29317_154) + $lambda1_S7 * u11(1 + $I_L29318_134, -1 + n_layer + -$I_L29317_154)
29339.                   alpha22(1 + $I_L29318_134, n_layer + -$I_L29317_154) = r_cloud(1 + $I_L29318_134, n_layer + -$I_L29317_154) + $theta22_S5 * $beta22_inv_WR0_R2 * t_cloud(1 + $I_L29318_134, n_layer + -$I_L29317_154) * t_cloud(1 + $I_L29318_134, n_layer + -$I_L29317_154)
29341.                   g2(1 + $I_L29318_134, n_layer + -$I_L29317_154) = $lambda2_S6 * u22(1 + $I_L29318_134, -1 + n_layer + -$I_L29317_154) + $lambda1_S7 * u21(1 + $I_L29318_134, -1 + n_layer + -$I_L29317_154)
29343.                   $I_L29318_134 = 1 + $I_L29318_134
29318.                   if ( $I_L29318_134 >= n_profile ) exit
29318.                enddo
29344.                $I_L29317_154 = 1 + $I_L29317_154
29343.                if ( $I_L29317_154 >= 1 + n_layer + -n_cloud_top ) exit
29343.             enddo
29343.          endif
29343.       endif
29349.       if ( n_cloud_top > 1 ) then
29352.          if ( n_profile > 0 ) then
29354.             if ( n_cloud_top < n_layer ) then
29352.                $I_L29352_136 = 0
29352. !dir$ ivdep
29352.                do
29357.                   $theta11_S9 = alpha11(1 + $I_L29352_136, n_cloud_top) * v11(1 + $I_L29352_136, -1 + n_cloud_top) + alpha22(1 + $I_L29352_136, n_cloud_top) * v21(1 + $I_L29352_136, -1 + n_cloud_top)
29362.                   $beta11_inv_WR0_R4 = 1.0/( 1.0 + -( $theta11_S9 * r(1 + $I_L29352_136, -1 + n_cloud_top) ) )
29362.                   beta11_inv(1 + $I_L29352_136, -1 + n_cloud_top) = $beta11_inv_WR0_R4
29363.                   $gamma11_WR0_R5 = $theta11_S9 * t(1 + $I_L29352_136, -1 + n_cloud_top)
29363.                   gamma11(1 + $I_L29352_136, -1 + n_cloud_top) = $gamma11_WR0_R5
29364.                   $h1_WR0_R6 = g1(1 + $I_L29352_136, n_cloud_top) + $theta11_S9 * s_down(1 + $I_L29352_136, -1 + n_cloud_top)
29364.                   h1(1 + $I_L29352_136, -1 + n_cloud_top) = $h1_WR0_R6
29366.                   $lambda_S10 = $beta11_inv_WR0_R4 * t(1 + $I_L29352_136, -1 + n_cloud_top)
29367.                   alpha11(1 + $I_L29352_136, -1 + n_cloud_top) = r(1 + $I_L29352_136, -1 + n_cloud_top) + $lambda_S10 * $gamma11_WR0_R5
29368.                   g1(1 + $I_L29352_136, -1 + n_cloud_top) = s_up(1 + $I_L29352_136, -1 + n_cloud_top) + $lambda_S10 * $h1_WR0_R6
29370.                   $I_L29352_136 = 1 + $I_L29352_136
29360.                   if ( $I_L29352_136 >= n_profile ) exit
29360.                enddo
29360.             else
29352.                $I_L29352_152 = 0
29352. !dir$ ivdep
29352.                do
29359.                   $theta11_S9 = alpha11(1 + $I_L29352_152, n_cloud_top)
29362.                   $beta11_inv_WR0_R7 = 1.0/( 1.0 + -( $theta11_S9 * r(1 + $I_L29352_152, -1 + n_cloud_top) ) )
29362.                   beta11_inv(1 + $I_L29352_152, -1 + n_cloud_top) = $beta11_inv_WR0_R7
29363.                   $gamma11_WR0_R8 = $theta11_S9 * t(1 + $I_L29352_152, -1 + n_cloud_top)
29363.                   gamma11(1 + $I_L29352_152, -1 + n_cloud_top) = $gamma11_WR0_R8
29364.                   $h1_WR0_R9 = g1(1 + $I_L29352_152, n_cloud_top) + $theta11_S9 * s_down(1 + $I_L29352_152, -1 + n_cloud_top)
29364.                   h1(1 + $I_L29352_152, -1 + n_cloud_top) = $h1_WR0_R9
29366.                   $lambda_S10 = $beta11_inv_WR0_R7 * t(1 + $I_L29352_152, -1 + n_cloud_top)
29367.                   alpha11(1 + $I_L29352_152, -1 + n_cloud_top) = r(1 + $I_L29352_152, -1 + n_cloud_top) + $lambda_S10 * $gamma11_WR0_R8
29368.                   g1(1 + $I_L29352_152, -1 + n_cloud_top) = s_up(1 + $I_L29352_152, -1 + n_cloud_top) + $lambda_S10 * $h1_WR0_R9
29370.                   $I_L29352_152 = 1 + $I_L29352_152
29360.                   if ( $I_L29352_152 >= n_profile ) exit
29360.                enddo
29360.             endif
29360.          endif
29360.       endif
29375.       if ( 2 + -n_cloud_top < 0 ) then
29376.          if ( n_profile > 0 ) then
29375.             $I_L29375_156 = 0
29375.             if ( -4 + n_cloud_top >= 0 ) then
29375.                $I_L29375_164 = 0
29375. !dir$ blocking_size( 1, 1 )
29375.                do
29376.                   $I_L29376_138 = 0
29376. !dir$ ivdep
29376. !dir$ blocking_size( 256, 256 )
29376.                   do
29378.                      $beta11_inv_WR0_R10 = 1.0/( 1.0 + -( alpha11(1 + $I_L29376_138, -1 + n_cloud_top + -2 * $I_L29375_164) * r(1 + $I_L29376_138, -2 + n_cloud_top + -2 * $I_L29375_164) ) )
29378.                      beta11_inv(1 + $I_L29376_138, -2 + n_cloud_top + -2 * $I_L29375_164) = $beta11_inv_WR0_R10
29380.                      $gamma11_WR0_R11 = alpha11(1 + $I_L29376_138, -1 + n_cloud_top + -2 * $I_L29375_164) * t(1 + $I_L29376_138, -2 + n_cloud_top + -2 * $I_L29375_164)
29380.                      gamma11(1 + $I_L29376_138, -2 + n_cloud_top + -2 * $I_L29375_164) = $gamma11_WR0_R11
29381.                      $h1_WR0_R12 = g1(1 + $I_L29376_138, -1 + n_cloud_top + -2 * $I_L29375_164) + alpha11(1 + $I_L29376_138, -1 + n_cloud_top + -2 * $I_L29375_164) * s_down(1 + $I_L29376_138, -2 + n_cloud_top + -2 * $I_L29375_164)
29381.                      h1(1 + $I_L29376_138, -2 + n_cloud_top + -2 * $I_L29375_164) = $h1_WR0_R12
29383.                      $lambda_S13 = $beta11_inv_WR0_R10 * t(1 + $I_L29376_138, -2 + n_cloud_top + -2 * $I_L29375_164)
29384.                      alpha11(1 + $I_L29376_138, -2 + n_cloud_top + -2 * $I_L29375_164) = r(1 + $I_L29376_138, -2 + n_cloud_top + -2 * $I_L29375_164) + $lambda_S13 * $gamma11_WR0_R11
29385.                      g1(1 + $I_L29376_138, -2 + n_cloud_top + -2 * $I_L29375_164) = s_up(1 + $I_L29376_138, -2 + n_cloud_top + -2 * $I_L29375_164) + $lambda_S13 * $h1_WR0_R12
29378.                      $beta11_inv_WR0_R10 = 1.0/( 1.0 + -( alpha11(1 + $I_L29376_138, -2 + n_cloud_top + -2 * $I_L29375_164) * r(1 + $I_L29376_138, -3 + n_cloud_top + -2 * $I_L29375_164) ) )
29378.                      beta11_inv(1 + $I_L29376_138, -3 + n_cloud_top + -2 * $I_L29375_164) = $beta11_inv_WR0_R10
29380.                      $gamma11_WR0_R11 = alpha11(1 + $I_L29376_138, -2 + n_cloud_top + -2 * $I_L29375_164) * t(1 + $I_L29376_138, -3 + n_cloud_top + -2 * $I_L29375_164)
29380.                      gamma11(1 + $I_L29376_138, -3 + n_cloud_top + -2 * $I_L29375_164) = $gamma11_WR0_R11
29381.                      $h1_WR0_R12 = g1(1 + $I_L29376_138, -2 + n_cloud_top + -2 * $I_L29375_164) + alpha11(1 + $I_L29376_138, -2 + n_cloud_top + -2 * $I_L29375_164) * s_down(1 + $I_L29376_138, -3 + n_cloud_top + -2 * $I_L29375_164)
29381.                      h1(1 + $I_L29376_138, -3 + n_cloud_top + -2 * $I_L29375_164) = $h1_WR0_R12
29383.                      $lambda_S13 = $beta11_inv_WR0_R10 * t(1 + $I_L29376_138, -3 + n_cloud_top + -2 * $I_L29375_164)
29384.                      alpha11(1 + $I_L29376_138, -3 + n_cloud_top + -2 * $I_L29375_164) = r(1 + $I_L29376_138, -3 + n_cloud_top + -2 * $I_L29375_164) + $lambda_S13 * $gamma11_WR0_R11
29385.                      g1(1 + $I_L29376_138, -3 + n_cloud_top + -2 * $I_L29375_164) = s_up(1 + $I_L29376_138, -3 + n_cloud_top + -2 * $I_L29375_164) + $lambda_S13 * $h1_WR0_R12
29387.                      $I_L29376_138 = 1 + $I_L29376_138
29376.                      if ( $I_L29376_138 >= n_profile ) exit
29376.                   enddo
29388.                   $I_L29375_164 = 1 + $I_L29375_164
29387.                   if ( $I_L29375_164 >= _rsh( -2 + n_cloud_top, 1 ) ) exit
29387.                enddo
29388.                $I_L29375_156 = and( 0xfffffffffffffffeUL, -2 + n_cloud_top )
29388.             endif
29375.             if ( $I_L29375_156 < -2 + n_cloud_top ) then
29376.                $I_L29376_138 = 0
29376. !dir$ ivdep
29376. !dir$ blocking_size( 256, 256 )
29376.                do
29378.                   $beta11_inv_WR0_R10 = 1.0/( 1.0 + -( r(1 + $I_L29376_138, -2 + n_cloud_top + -$I_L29375_156) * alpha11(1 + $I_L29376_138, -1 + n_cloud_top + -$I_L29375_156) ) )
29378.                   beta11_inv(1 + $I_L29376_138, -2 + n_cloud_top + -$I_L29375_156) = $beta11_inv_WR0_R10
29380.                   $gamma11_WR0_R11 = alpha11(1 + $I_L29376_138, -1 + n_cloud_top + -$I_L29375_156) * t(1 + $I_L29376_138, -2 + n_cloud_top + -$I_L29375_156)
29380.                   gamma11(1 + $I_L29376_138, -2 + n_cloud_top + -$I_L29375_156) = $gamma11_WR0_R11
29381.                   $h1_WR0_R12 = g1(1 + $I_L29376_138, -1 + n_cloud_top + -$I_L29375_156) + alpha11(1 + $I_L29376_138, -1 + n_cloud_top + -$I_L29375_156) * s_down(1 + $I_L29376_138, -2 + n_cloud_top + -$I_L29375_156)
29381.                   h1(1 + $I_L29376_138, -2 + n_cloud_top + -$I_L29375_156) = $h1_WR0_R12
29383.                   $lambda_S13 = $beta11_inv_WR0_R10 * t(1 + $I_L29376_138, -2 + n_cloud_top + -$I_L29375_156)
29384.                   alpha11(1 + $I_L29376_138, -2 + n_cloud_top + -$I_L29375_156) = r(1 + $I_L29376_138, -2 + n_cloud_top + -$I_L29375_156) + $lambda_S13 * $gamma11_WR0_R11
29385.                   g1(1 + $I_L29376_138, -2 + n_cloud_top + -$I_L29375_156) = s_up(1 + $I_L29376_138, -2 + n_cloud_top + -$I_L29375_156) + $lambda_S13 * $h1_WR0_R12
29387.                   $I_L29376_138 = 1 + $I_L29376_138
29376.                   if ( $I_L29376_138 >= n_profile ) exit
29376.                enddo
29376.             endif
29376.          endif
29376.       endif
29395.       if ( n_cloud_top > 1 ) then
29396.          if ( n_profile > 0 ) then
29396.             $I_L29396_140 = 0
29396. !dir$ ivdep
29396.             do
29397.                flux_total(1 + $I_L29396_140, 1) = g1(1 + $I_L29396_140, 1) + flux_total(1 + $I_L29396_140, 2) * alpha11(1 + $I_L29396_140, 1)
29398.                $I_L29396_140 = 1 + $I_L29396_140
29396.                if ( $I_L29396_140 >= n_profile ) exit
29396.             enddo
29408.             $I_L29408_158 = 0
29408.             if ( -3 + n_cloud_top >= 0 ) then
29408.                $I_L29408_166 = 0
29408.                do
29409.                   $I_L29409_144 = 0
29409. !dir$ ivdep
29409.                   do
29410.                      $flux_total_WR0_R13 = beta11_inv(1 + $I_L29409_144, 1 + 2 * $I_L29408_166) * ( h1(1 + $I_L29409_144, 1 + 2 * $I_L29408_166) + gamma11(1 + $I_L29409_144, 1 + 2 * $I_L29408_166) * flux_total(1 + $I_L29409_144, 2 + 4 * $I_L29408_166) )
29410.                      flux_total(1 + $I_L29409_144, 3 + 4 * $I_L29408_166) = $flux_total_WR0_R13
29412.                      flux_total(1 + $I_L29409_144, 4 + 4 * $I_L29408_166) = s_down(1 + $I_L29409_144, 1 + 2 * $I_L29408_166) + $flux_total_WR0_R13 * r(1 + $I_L29409_144, 1 + 2 * $I_L29408_166) + flux_total(1 + $I_L29409_144, 2 + 4 * $I_L29408_166) * t(1 + $I_L29409_144, 1 + 2 * $I_L29408_166)
29410.                      $flux_total_WR0_R13 = beta11_inv(1 + $I_L29409_144, 2 + 2 * $I_L29408_166) * ( h1(1 + $I_L29409_144, 2 + 2 * $I_L29408_166) + flux_total(1 + $I_L29409_144, 4 + 4 * $I_L29408_166) * gamma11(1 + $I_L29409_144, 2 + 2 * $I_L29408_166) )
29410.                      flux_total(1 + $I_L29409_144, 5 + 4 * $I_L29408_166) = $flux_total_WR0_R13
29412.                      flux_total(1 + $I_L29409_144, 6 + 4 * $I_L29408_166) = s_down(1 + $I_L29409_144, 2 + 2 * $I_L29408_166) + flux_total(1 + $I_L29409_144, 4 + 4 * $I_L29408_166) * t(1 + $I_L29409_144, 2 + 2 * $I_L29408_166) + $flux_total_WR0_R13 * r(1 + $I_L29409_144, 2 + 2 * $I_L29408_166)
29414.                      $I_L29409_144 = 1 + $I_L29409_144
29409.                      if ( $I_L29409_144 >= n_profile ) exit
29409.                   enddo
29415.                   $I_L29408_166 = 1 + $I_L29408_166
29414.                   if ( $I_L29408_166 >= _rsh( -1 + n_cloud_top, 1 ) ) exit
29414.                enddo
29415.                $I_L29408_158 = and( 0xfffffffffffffffeUL, -1 + n_cloud_top )
29415.             endif
29408.             if ( $I_L29408_158 < -1 + n_cloud_top ) then
29409.                $I_L29409_144 = 0
29409. !dir$ ivdep
29409.                do
29410.                   $flux_total_WR0_R13 = beta11_inv(1 + $I_L29409_144, 1 + $I_L29408_158) * ( h1(1 + $I_L29409_144, 1 + $I_L29408_158) + flux_total(1 + $I_L29409_144, 2 + 2 * $I_L29408_158) * gamma11(1 + $I_L29409_144, 1 + $I_L29408_158) )
29410.                   flux_total(1 + $I_L29409_144, 3 + 2 * $I_L29408_158) = $flux_total_WR0_R13
29412.                   flux_total(1 + $I_L29409_144, 4 + 2 * $I_L29408_158) = s_down(1 + $I_L29409_144, 1 + $I_L29408_158) + flux_total(1 + $I_L29409_144, 2 + 2 * $I_L29408_158) * t(1 + $I_L29409_144, 1 + $I_L29408_158) + $flux_total_WR0_R13 * r(1 + $I_L29409_144, 1 + $I_L29408_158)
29414.                   $I_L29409_144 = 1 + $I_L29409_144
29409.                   if ( $I_L29409_144 >= n_profile ) exit
29409.                enddo
29409.             endif
29409.          endif
29399.       else if ( n_profile > 0 ) then
29400.          $I_L29400_142 = 0
29400. !dir$ ivdep
29400.          do
29401.             flux_total(1 + $I_L29400_142, 1) = g1(1 + $I_L29400_142, 1) + flux_inc_down(1 + $I_L29400_142) * ( alpha11(1 + $I_L29400_142, 1) * v11(1 + $I_L29400_142, 0) + v21(1 + $I_L29400_142, 0) * alpha22(1 + $I_L29400_142, 1) )
29403.             $I_L29400_142 = 1 + $I_L29400_142
29400.             if ( $I_L29400_142 >= n_profile ) exit
29400.          enddo
29400.       endif
29421.       if ( n_cloud_top <= n_layer ) then
29425.          if ( n_profile > 0 ) then
29425.             $I_L29425_146 = 0
29425. !dir$ ivdep
29425.             do
29426.                $flux_down_1_WR0_R14 = v11(1 + $I_L29425_146, -1 + n_cloud_top) * flux_total(1 + $I_L29425_146, 2 * n_cloud_top)
29427.                $flux_down_2_WR0_R15 = flux_total(1 + $I_L29425_146, 2 * n_cloud_top) * v21(1 + $I_L29425_146, -1 + n_cloud_top)
29428.                $flux_up_1_WR0_R16 = beta11_inv(1 + $I_L29425_146, n_cloud_top) * ( h1(1 + $I_L29425_146, n_cloud_top) + $flux_down_1_WR0_R14 * gamma11(1 + $I_L29425_146, n_cloud_top) )
29428.                flux_up_1(1 + $I_L29425_146, n_cloud_top) = $flux_up_1_WR0_R16
29430.                $flux_up_2_WR0_R17 = beta22_inv(1 + $I_L29425_146, n_cloud_top) * ( h2(1 + $I_L29425_146, n_cloud_top) + $flux_down_2_WR0_R15 * gamma22(1 + $I_L29425_146, n_cloud_top) )
29430.                flux_up_2(1 + $I_L29425_146, n_cloud_top) = $flux_up_2_WR0_R17
29432.                $flux_down_1_WR0_R14 = s_down(1 + $I_L29425_146, n_cloud_top) + $flux_down_1_WR0_R14 * t(1 + $I_L29425_146, n_cloud_top) + $flux_up_1_WR0_R16 * r(1 + $I_L29425_146, n_cloud_top)
29432.                flux_down_1(1 + $I_L29425_146, n_cloud_top) = $flux_down_1_WR0_R14
29434.                $flux_down_2_WR0_R15 = s_down_cloud(1 + $I_L29425_146, n_cloud_top) + $flux_down_2_WR0_R15 * t_cloud(1 + $I_L29425_146, n_cloud_top) + $flux_up_2_WR0_R17 * r_cloud(1 + $I_L29425_146, n_cloud_top)
29434.                flux_down_2(1 + $I_L29425_146, n_cloud_top) = $flux_down_2_WR0_R15
29436.                $I_L29425_146 = 1 + $I_L29425_146
29425.                if ( $I_L29425_146 >= n_profile ) exit
29425.             enddo
29425.          endif
29425.       endif
29441.       if ( n_layer + -n_cloud_top > 0 ) then
29442.          if ( n_profile > 0 ) then
29441.             $I_L29441_160 = 0
29441. !dir$ blocking_size( 1, 1 )
29441.             do
29442.                $I_L29442_148 = 0
29442. !dir$ ivdep
29442. !dir$ blocking_size( 256, 256 )
29442.                do
29443.                   $flux_down_1_WR0_R19 = flux_down_1(1 + $I_L29442_148, n_cloud_top + $I_L29441_160) * v11(1 + $I_L29442_148, n_cloud_top + $I_L29441_160) + flux_down_2(1 + $I_L29442_148, n_cloud_top + $I_L29441_160) * v12(1 + $I_L29442_148, n_cloud_top + $I_L29441_160)
29443.                   flux_down_1(1 + $I_L29442_148, 1 + n_cloud_top + $I_L29441_160) = $flux_down_1_WR0_R19
29445.                   $flux_down_2_WR0_R18 = flux_down_1(1 + $I_L29442_148, n_cloud_top + $I_L29441_160) * v21(1 + $I_L29442_148, n_cloud_top + $I_L29441_160) + flux_down_2(1 + $I_L29442_148, n_cloud_top + $I_L29441_160) * v22(1 + $I_L29442_148, n_cloud_top + $I_L29441_160)
29445.                   flux_down_2(1 + $I_L29442_148, 1 + n_cloud_top + $I_L29441_160) = $flux_down_2_WR0_R18
29447.                   $flux_up_1_WR0_R20 = beta11_inv(1 + $I_L29442_148, 1 + n_cloud_top + $I_L29441_160) * ( h1(1 + $I_L29442_148, 1 + n_cloud_top + $I_L29441_160) + $flux_down_1_WR0_R19 * gamma11(1 + $I_L29442_148, 1 + n_cloud_top + $I_L29441_160) )
29447.                   flux_up_1(1 + $I_L29442_148, 1 + n_cloud_top + $I_L29441_160) = $flux_up_1_WR0_R20
29449.                   $flux_up_2_WR0_R21 = beta22_inv(1 + $I_L29442_148, 1 + n_cloud_top + $I_L29441_160) * ( h2(1 + $I_L29442_148, 1 + n_cloud_top + $I_L29441_160) + $flux_down_2_WR0_R18 * gamma22(1 + $I_L29442_148, 1 + n_cloud_top + $I_L29441_160) )
29449.                   flux_up_2(1 + $I_L29442_148, 1 + n_cloud_top + $I_L29441_160) = $flux_up_2_WR0_R21
29451.                   $flux_down_1_WR0_R19 = s_down(1 + $I_L29442_148, 1 + n_cloud_top + $I_L29441_160) + $flux_down_1_WR0_R19 * t(1 + $I_L29442_148, 1 + n_cloud_top + $I_L29441_160) + $flux_up_1_WR0_R20 * r(1 + $I_L29442_148, 1 + n_cloud_top + $I_L29441_160)
29451.                   flux_down_1(1 + $I_L29442_148, 1 + n_cloud_top + $I_L29441_160) = $flux_down_1_WR0_R19
29453.                   $flux_down_2_WR0_R18 = s_down_cloud(1 + $I_L29442_148, 1 + n_cloud_top + $I_L29441_160) + $flux_down_2_WR0_R18 * t_cloud(1 + $I_L29442_148, 1 + n_cloud_top + $I_L29441_160) + $flux_up_2_WR0_R21 * r_cloud(1 + $I_L29442_148, 1 + n_cloud_top + $I_L29441_160)
29453.                   flux_down_2(1 + $I_L29442_148, 1 + n_cloud_top + $I_L29441_160) = $flux_down_2_WR0_R18
29455.                   $I_L29442_148 = 1 + $I_L29442_148
29442.                   if ( $I_L29442_148 >= n_profile ) exit
29442.                enddo
29456.                $I_L29441_160 = 1 + $I_L29441_160
29455.                if ( $I_L29441_160 >= ( n_layer + -n_cloud_top ) ) exit
29455.             enddo
29455.          endif
29455.       endif
29460.       if ( n_layer + -n_cloud_top >= 0 ) then
29461.          if ( n_profile > 0 ) then
29460.             $I_L29460_162 = 0
29460.             do
29461.                $I_L29461_150 = 0
29461. !dir$ ivdep
29461.                do
29462.                   flux_total(1 + $I_L29461_150, 1 + 2 * n_cloud_top + 2 * $I_L29460_162) = flux_up_1(1 + $I_L29461_150, n_cloud_top + $I_L29460_162) + flux_up_2(1 + $I_L29461_150, n_cloud_top + $I_L29460_162)
29463.                   flux_total(1 + $I_L29461_150, 2 + 2 * n_cloud_top + 2 * $I_L29460_162) = flux_down_1(1 + $I_L29461_150, n_cloud_top + $I_L29460_162) + flux_down_2(1 + $I_L29461_150, n_cloud_top + $I_L29460_162)
29464.                   $I_L29461_150 = 1 + $I_L29461_150
29461.                   if ( $I_L29461_150 >= n_profile ) exit
29461.                enddo
29465.                $I_L29460_162 = 1 + $I_L29460_162
29464.                if ( $I_L29460_162 >= 1 + n_layer + -n_cloud_top ) exit
29464.             enddo
29464.          endif
29464.       endif
29181.       _free( t$3683 )
29470.       return
29470.       end
29470.       
29492.       
29492.       subroutine solver_triple_app_scat( n_profile, n_layer, n_cloud_top, t, r, s_down, s_up, t_strat, r_strat, s_down_strat, s_up_strat, t_conv, r_conv, s_down_conv, s_up_conv, v11, v12, v13, v21, v22, v23, v31, v32, v33, u11, u12, u13, u21, u22, u23, u31, u32, u33, flux_inc_down, source_ground_free, source_ground_strat, source_ground_conv, albedo_surface_diff, flux_total, nd_profile, nd_layer, id_ct )
29492.       t$912 = nd_profile
29492.       t$913 = nd_layer
29531.       t$3728 = _zla( 0, nd_profile )
29492.       t$3729 = _zla( 0, nd_profile )
29531.       t$3730 = _zla( 0, nd_layer )
29492.       t$3731 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29492.       t$914 = ( -1 + id_ct )
29492.       t$3732 = 2 + nd_layer + -id_ct
29556.       t$3733 = _zla( 0, 2 + nd_layer + -id_ct )
29492.       t$3734 = _zla( 0, nd_profile ) * _zla( 0, 2 + nd_layer + -id_ct )
29492.       t$915 = ( 2 + 2 * nd_layer )
29605.       t$3735 = _zla( 0, ( 2 + 2 * nd_layer ) )
29492.       t$3736 = _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
29492.       t$3737 = 1 + nd_layer
29618.       t$3738 = _zla( 0, 1 + nd_layer )
29492.       t$3739 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29618.       t$3742 = 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29620.       t$3743 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
29620.       t$3745 = t$3743 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29622.       t$3746 = 8 * ( 7 + t$3743 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
29622.       t$3748 = t$3746 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29630.       t$3749 = 8 * ( 7 + t$3746 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
29630.       t$3751 = t$3749 + 8 * _zla( 0, nd_profile )
29632.       t$3752 = 8 * ( 7 + t$3749 + 8 * _zla( 0, nd_profile ) ) / 8
29632.       t$3754 = t$3752 + 8 * _zla( 0, nd_profile )
29634.       t$3755 = 8 * ( 7 + t$3752 + 8 * _zla( 0, nd_profile ) ) / 8
29634.       t$3757 = t$3755 + 8 * _zla( 0, nd_profile )
29624.       t$3758 = 8 * ( 7 + t$3755 + 8 * _zla( 0, nd_profile ) ) / 8
29624.       t$3760 = t$3758 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29626.       t$3761 = 8 * ( 7 + t$3758 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
29626.       t$3763 = t$3761 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29628.       t$3764 = 8 * ( 7 + t$3761 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
29628.       t$3766 = t$3764 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29492.       t$3740 = int( _alloc( t$3764 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ), 8 )
29618.       t$3741 = t$3740
29620.       t$3744 = t$3743 + t$3740
29622.       t$3747 = t$3746 + t$3740
29630.       t$3750 = t$3749 + t$3740
29632.       t$3753 = t$3752 + t$3740
29634.       t$3756 = t$3755 + t$3740
29624.       t$3759 = t$3758 + t$3740
29626.       t$3762 = t$3761 + t$3740
29628.       t$3765 = t$3764 + t$3740
29649.       if ( n_profile > 0 ) then
29649.          $I_L29649_112 = 0
29649. !dir$ ivdep
29649.          do
29650.             flux_total(1 + $I_L29649_112, 2) = flux_inc_down(1 + $I_L29649_112)
29651.             $I_L29649_112 = 1 + $I_L29649_112
29649.             if ( $I_L29649_112 >= n_profile ) exit
29649.          enddo
29649.       endif
29652.       if ( -1 + n_cloud_top > 0 ) then
29653.          if ( n_profile > 0 ) then
29652.             $I_L29652_130 = 0
29652.             if ( -3 + n_cloud_top >= 0 ) then
29652.                $I_L29652_140 = 0
29652.                do
29653.                   $I_L29653_114 = 0
29653. !dir$ ivdep
29653.                   do
29654.                      flux_total(1 + $I_L29653_114, 4 + 4 * $I_L29652_140) = s_down(1 + $I_L29653_114, 1 + 2 * $I_L29652_140) + flux_total(1 + $I_L29653_114, 2 + 4 * $I_L29652_140) * t(1 + $I_L29653_114, 1 + 2 * $I_L29652_140)
29654.                      flux_total(1 + $I_L29653_114, 6 + 4 * $I_L29652_140) = s_down(1 + $I_L29653_114, 2 + 2 * $I_L29652_140) + flux_total(1 + $I_L29653_114, 4 + 4 * $I_L29652_140) * t(1 + $I_L29653_114, 2 + 2 * $I_L29652_140)
29656.                      $I_L29653_114 = 1 + $I_L29653_114
29653.                      if ( $I_L29653_114 >= n_profile ) exit
29653.                   enddo
29657.                   $I_L29652_140 = 1 + $I_L29652_140
29656.                   if ( $I_L29652_140 >= _rsh( -1 + n_cloud_top, 1 ) ) exit
29656.                enddo
29657.                $I_L29652_130 = and( 0xfffffffffffffffeUL, -1 + n_cloud_top )
29657.             endif
29652.             if ( $I_L29652_130 < -1 + n_cloud_top ) then
29653.                $I_L29653_114 = 0
29653. !dir$ ivdep
29653.                do
29654.                   flux_total(1 + $I_L29653_114, 4 + 2 * $I_L29652_130) = s_down(1 + $I_L29653_114, 1 + $I_L29652_130) + t(1 + $I_L29653_114, 1 + $I_L29652_130) * flux_total(1 + $I_L29653_114, 2 + 2 * $I_L29652_130)
29656.                   $I_L29653_114 = 1 + $I_L29653_114
29653.                   if ( $I_L29653_114 >= n_profile ) exit
29653.                enddo
29653.             endif
29653.          endif
29653.       endif
29663.       if ( n_profile > 0 ) then
29663.          $I_L29663_116 = 0
29663. !dir$ ivdep
29663.          do
29664.             flux_down_1(1 + $I_L29663_116, -1 + n_cloud_top) = v11(1 + $I_L29663_116, -1 + n_cloud_top) * flux_total(1 + $I_L29663_116, 2 * n_cloud_top)
29665.             flux_down_2(1 + $I_L29663_116, -1 + n_cloud_top) = flux_total(1 + $I_L29663_116, 2 * n_cloud_top) * v21(1 + $I_L29663_116, -1 + n_cloud_top)
29666.             flux_down_3(1 + $I_L29663_116, -1 + n_cloud_top) = flux_total(1 + $I_L29663_116, 2 * n_cloud_top) * v31(1 + $I_L29663_116, -1 + n_cloud_top)
29667.             $I_L29663_116 = 1 + $I_L29663_116
29663.             if ( $I_L29663_116 >= n_profile ) exit
29663.          enddo
29663.       endif
29669.       $i_S7 = n_cloud_top
29669.       if ( n_layer + -n_cloud_top > 0 ) then
29670.          if ( n_profile > 0 ) then
29669.             $I_L29669_132 = 0
29669. !dir$ blocking_size( 1, 1 )
29669.             do
29670.                $I_L29670_118 = 0
29670. !dir$ ivdep
29670. !dir$ blocking_size( 256, 256 )
29670.                do
29673.                   $flux_propag_1_WR0_R0 = s_down(1 + $I_L29670_118, n_cloud_top + $I_L29669_132) + t(1 + $I_L29670_118, n_cloud_top + $I_L29669_132) * flux_down_1(1 + $I_L29670_118, -1 + n_cloud_top + $I_L29669_132)
29673.                   flux_propag_1(1 + $I_L29670_118) = $flux_propag_1_WR0_R0
29675.                   $flux_propag_2_WR0_R1 = s_down_strat(1 + $I_L29670_118, n_cloud_top + $I_L29669_132) + t_strat(1 + $I_L29670_118, n_cloud_top + $I_L29669_132) * flux_down_2(1 + $I_L29670_118, -1 + n_cloud_top + $I_L29669_132)
29675.                   flux_propag_2(1 + $I_L29670_118) = $flux_propag_2_WR0_R1
29677.                   $flux_propag_3_WR0_R2 = s_down_conv(1 + $I_L29670_118, n_cloud_top + $I_L29669_132) + t_conv(1 + $I_L29670_118, n_cloud_top + $I_L29669_132) * flux_down_3(1 + $I_L29670_118, -1 + n_cloud_top + $I_L29669_132)
29677.                   flux_propag_3(1 + $I_L29670_118) = $flux_propag_3_WR0_R2
29681.                   flux_down_1(1 + $I_L29670_118, n_cloud_top + $I_L29669_132) = $flux_propag_1_WR0_R0 * v11(1 + $I_L29670_118, n_cloud_top + $I_L29669_132) + $flux_propag_2_WR0_R1 * v12(1 + $I_L29670_118, n_cloud_top + $I_L29669_132) + $flux_propag_3_WR0_R2 * v13(1 + $I_L29670_118, n_cloud_top + $I_L29669_132)
29684.                   flux_down_2(1 + $I_L29670_118, n_cloud_top + $I_L29669_132) = $flux_propag_1_WR0_R0 * v21(1 + $I_L29670_118, n_cloud_top + $I_L29669_132) + $flux_propag_2_WR0_R1 * v22(1 + $I_L29670_118, n_cloud_top + $I_L29669_132) + $flux_propag_3_WR0_R2 * v23(1 + $I_L29670_118, n_cloud_top + $I_L29669_132)
29687.                   flux_down_3(1 + $I_L29670_118, n_cloud_top + $I_L29669_132) = $flux_propag_1_WR0_R0 * v31(1 + $I_L29670_118, n_cloud_top + $I_L29669_132) + $flux_propag_2_WR0_R1 * v32(1 + $I_L29670_118, n_cloud_top + $I_L29669_132) + $flux_propag_3_WR0_R2 * v33(1 + $I_L29670_118, n_cloud_top + $I_L29669_132)
29691.                   $I_L29670_118 = 1 + $I_L29670_118
29670.                   if ( $I_L29670_118 >= n_profile ) exit
29670.                enddo
29692.                $I_L29669_132 = 1 + $I_L29669_132
29691.                if ( $I_L29669_132 >= ( n_layer + -n_cloud_top ) ) exit
29691.             enddo
29691.          endif
29692.          $i_S7 = n_layer
29692.       endif
29697.       if ( n_profile > 0 ) then
29697.          $I_L29697_120 = 0
29697. !dir$ ivdep
29697.          do
29700.             $flux_down_1_WR0_R3 = s_down(1 + $I_L29697_120, n_layer) + t(1 + $I_L29697_120, n_layer) * flux_down_1(1 + $I_L29697_120, -1 + n_layer)
29700.             flux_down_1(1 + $I_L29697_120, n_layer) = $flux_down_1_WR0_R3
29703.             $flux_down_2_WR0_R4 = s_down_strat(1 + $I_L29697_120, n_layer) + t_strat(1 + $I_L29697_120, n_layer) * flux_down_2(1 + $I_L29697_120, -1 + n_layer)
29703.             flux_down_2(1 + $I_L29697_120, n_layer) = $flux_down_2_WR0_R4
29706.             $flux_down_3_WR0_R5 = s_down_conv(1 + $I_L29697_120, n_layer) + t_conv(1 + $I_L29697_120, n_layer) * flux_down_3(1 + $I_L29697_120, -1 + n_layer)
29706.             flux_down_3(1 + $I_L29697_120, n_layer) = $flux_down_3_WR0_R5
29711.             $flux_up_1_WR0_R6 = source_ground_free(1 + $I_L29697_120) + $flux_down_1_WR0_R3 * albedo_surface_diff(1 + $I_L29697_120)
29711.             flux_up_1(1 + $I_L29697_120, n_layer) = $flux_up_1_WR0_R6
29714.             flux_up_2(1 + $I_L29697_120, $i_S7) = source_ground_strat(1 + $I_L29697_120) + $flux_down_2_WR0_R4 * albedo_surface_diff(1 + $I_L29697_120)
29717.             flux_up_3(1 + $I_L29697_120, $i_S7) = source_ground_conv(1 + $I_L29697_120) + $flux_down_3_WR0_R5 * albedo_surface_diff(1 + $I_L29697_120)
29722.             flux_propag_1(1 + $I_L29697_120) = s_up(1 + $I_L29697_120, n_layer) + flux_down_1(1 + $I_L29697_120, -1 + n_layer) * r(1 + $I_L29697_120, n_layer) + $flux_up_1_WR0_R6 * t(1 + $I_L29697_120, n_layer)
29725.             flux_propag_2(1 + $I_L29697_120) = s_up_strat(1 + $I_L29697_120, n_layer) + t_strat(1 + $I_L29697_120, n_layer) * flux_up_2(1 + $I_L29697_120, n_layer) + flux_down_2(1 + $I_L29697_120, -1 + n_layer) * r_strat(1 + $I_L29697_120, n_layer)
29729.             flux_propag_3(1 + $I_L29697_120) = s_up_conv(1 + $I_L29697_120, n_layer) + t_conv(1 + $I_L29697_120, n_layer) * flux_up_3(1 + $I_L29697_120, n_layer) + flux_down_3(1 + $I_L29697_120, -1 + n_layer) * r_conv(1 + $I_L29697_120, n_layer)
29734.             $I_L29697_120 = 1 + $I_L29697_120
29697.             if ( $I_L29697_120 >= n_profile ) exit
29697.          enddo
29697.       endif
29739.       if ( n_cloud_top + -n_layer < 0 ) then
29740.          if ( n_profile > 0 ) then
29739.             $I_L29739_134 = 0
29739. !dir$ blocking_size( 1, 1 )
29739.             do
29740.                $I_L29740_122 = 0
29740. !dir$ ivdep
29740. !dir$ blocking_size( 256, 256 )
29740.                do
29742.                   $flux_up_1_WR0_R7 = flux_propag_1(1 + $I_L29740_122) * u11(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134) + flux_propag_2(1 + $I_L29740_122) * u12(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134) + flux_propag_3(1 + $I_L29740_122) * u13(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134)
29742.                   flux_up_1(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134) = $flux_up_1_WR0_R7
29745.                   $flux_up_2_WR0_R8 = flux_propag_1(1 + $I_L29740_122) * u21(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134) + flux_propag_2(1 + $I_L29740_122) * u22(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134) + flux_propag_3(1 + $I_L29740_122) * u23(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134)
29745.                   flux_up_2(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134) = $flux_up_2_WR0_R8
29748.                   $flux_up_3_WR0_R9 = flux_propag_1(1 + $I_L29740_122) * u31(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134) + flux_propag_2(1 + $I_L29740_122) * u32(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134) + flux_propag_3(1 + $I_L29740_122) * u33(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134)
29748.                   flux_up_3(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134) = $flux_up_3_WR0_R9
29752.                   flux_propag_1(1 + $I_L29740_122) = s_up(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134) + flux_down_1(1 + $I_L29740_122, -2 + n_layer + -$I_L29739_134) * r(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134) + $flux_up_1_WR0_R7 * t(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134)
29754.                   flux_propag_2(1 + $I_L29740_122) = s_up_strat(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134) + flux_down_2(1 + $I_L29740_122, -2 + n_layer + -$I_L29739_134) * r_strat(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134) + $flux_up_2_WR0_R8 * t_strat(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134)
29756.                   flux_propag_3(1 + $I_L29740_122) = s_up_conv(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134) + flux_down_3(1 + $I_L29740_122, -2 + n_layer + -$I_L29739_134) * r_conv(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134) + $flux_up_3_WR0_R9 * t_conv(1 + $I_L29740_122, -1 + n_layer + -$I_L29739_134)
29759.                   $I_L29740_122 = 1 + $I_L29740_122
29740.                   if ( $I_L29740_122 >= n_profile ) exit
29740.                enddo
29760.                $I_L29739_134 = 1 + $I_L29739_134
29759.                if ( $I_L29739_134 >= ( n_layer + -n_cloud_top ) ) exit
29759.             enddo
29759.          endif
29759.       endif
29764.       if ( n_profile > 0 ) then
29764.          $I_L29764_124 = 0
29764. !dir$ ivdep
29764.          do
29765.             flux_total(1 + $I_L29764_124, -1 + 2 * n_cloud_top) = flux_propag_3(1 + $I_L29764_124) + flux_propag_1(1 + $I_L29764_124) + flux_propag_2(1 + $I_L29764_124)
29767.             $I_L29764_124 = 1 + $I_L29764_124
29764.             if ( $I_L29764_124 >= n_profile ) exit
29764.          enddo
29764.       endif
29770.       if ( 1 + -n_cloud_top < 0 ) then
29771.          if ( n_profile > 0 ) then
29770.             $I_L29770_136 = 0
29770.             if ( -3 + n_cloud_top >= 0 ) then
29770.                $I_L29770_142 = 0
29770.                do
29771.                   $I_L29771_126 = 0
29771. !dir$ ivdep
29771.                   do
29772.                      flux_total(1 + $I_L29771_126, -3 + 2 * n_cloud_top + -4 * $I_L29770_142) = s_up(1 + $I_L29771_126, -1 + n_cloud_top + -2 * $I_L29770_142) + r(1 + $I_L29771_126, -1 + n_cloud_top + -2 * $I_L29770_142) * flux_total(1 + $I_L29771_126, -2 + 2 * n_cloud_top + -4 * $I_L29770_142) + flux_total(1 + $I_L29771_126, -1 + 2 * n_cloud_top + -4 * $I_L29770_142) * t(1 + $I_L29771_126, -1 + n_cloud_top + -2 * $I_L29770_142)
29772.                      flux_total(1 + $I_L29771_126, -5 + 2 * n_cloud_top + -4 * $I_L29770_142) = s_up(1 + $I_L29771_126, -2 + n_cloud_top + -2 * $I_L29770_142) + flux_total(1 + $I_L29771_126, -3 + 2 * n_cloud_top + -4 * $I_L29770_142) * t(1 + $I_L29771_126, -2 + n_cloud_top + -2 * $I_L29770_142) + flux_total(1 + $I_L29771_126, -4 + 2 * n_cloud_top + -4 * $I_L29770_142) * r(1 + $I_L29771_126, -2 + n_cloud_top + -2 * $I_L29770_142)
29774.                      $I_L29771_126 = 1 + $I_L29771_126
29771.                      if ( $I_L29771_126 >= n_profile ) exit
29771.                   enddo
29775.                   $I_L29770_142 = 1 + $I_L29770_142
29774.                   if ( $I_L29770_142 >= _rsh( -1 + n_cloud_top, 1 ) ) exit
29774.                enddo
29775.                $I_L29770_136 = and( 0xfffffffffffffffeUL, -1 + n_cloud_top )
29775.             endif
29770.             if ( $I_L29770_136 < -1 + n_cloud_top ) then
29771.                $I_L29771_126 = 0
29771. !dir$ ivdep
29771.                do
29772.                   flux_total(1 + $I_L29771_126, -3 + 2 * n_cloud_top + -2 * $I_L29770_136) = s_up(1 + $I_L29771_126, -1 + n_cloud_top + -$I_L29770_136) + t(1 + $I_L29771_126, -1 + n_cloud_top + -$I_L29770_136) * flux_total(1 + $I_L29771_126, -1 + 2 * n_cloud_top + -2 * $I_L29770_136) + flux_total(1 + $I_L29771_126, -2 + 2 * n_cloud_top + -2 * $I_L29770_136) * r(1 + $I_L29771_126, -1 + n_cloud_top + -$I_L29770_136)
29774.                   $I_L29771_126 = 1 + $I_L29771_126
29771.                   if ( $I_L29771_126 >= n_profile ) exit
29771.                enddo
29771.             endif
29771.          endif
29771.       endif
29778.       if ( n_layer + -n_cloud_top >= 0 ) then
29779.          if ( n_profile > 0 ) then
29778.             $I_L29778_138 = 0
29778.             do
29779.                $I_L29779_128 = 0
29779. !dir$ ivdep
29779.                do
29780.                   flux_total(1 + $I_L29779_128, 1 + 2 * n_cloud_top + 2 * $I_L29778_138) = flux_up_2(1 + $I_L29779_128, n_cloud_top + $I_L29778_138) + flux_up_3(1 + $I_L29779_128, n_cloud_top + $I_L29778_138) + flux_up_1(1 + $I_L29779_128, n_cloud_top + $I_L29778_138)
29782.                   flux_total(1 + $I_L29779_128, 2 + 2 * n_cloud_top + 2 * $I_L29778_138) = flux_down_1(1 + $I_L29779_128, n_cloud_top + $I_L29778_138) + flux_down_2(1 + $I_L29779_128, n_cloud_top + $I_L29778_138) + flux_down_3(1 + $I_L29779_128, n_cloud_top + $I_L29778_138)
29784.                   $I_L29779_128 = 1 + $I_L29779_128
29779.                   if ( $I_L29779_128 >= n_profile ) exit
29779.                enddo
29785.                $I_L29778_138 = 1 + $I_L29778_138
29784.                if ( $I_L29778_138 >= 1 + n_layer + -n_cloud_top ) exit
29784.             enddo
29784.          endif
29784.       endif
29492.       _free( t$3740 )
29790.       return
29790.       end
29790.       
29811.       
29811.       subroutine solver_triple( n_profile, n_layer, n_cloud_top, t, r, s_down, s_up, t_strat, r_strat, s_down_strat, s_up_strat, t_conv, r_conv, s_down_conv, s_up_conv, v11, v12, v13, v21, v22, v23, v31, v32, v33, u11, u12, u13, u21, u22, u23, u31, u32, u33, flux_inc_down, source_ground_free, source_ground_strat, source_ground_conv, albedo_surface_diff, flux_total, nd_profile, nd_layer, id_ct )
29811.       t$916 = nd_profile
29811.       t$917 = nd_layer
29850.       t$3767 = _zla( 0, nd_profile )
29811.       t$3768 = _zla( 0, nd_profile )
29850.       t$3769 = _zla( 0, nd_layer )
29811.       t$3770 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29811.       t$918 = ( -1 + id_ct )
29811.       t$3771 = 2 + nd_layer + -id_ct
29875.       t$3772 = _zla( 0, 2 + nd_layer + -id_ct )
29811.       t$3773 = _zla( 0, nd_profile ) * _zla( 0, 2 + nd_layer + -id_ct )
29811.       t$919 = ( 2 + 2 * nd_layer )
29924.       t$3774 = _zla( 0, ( 2 + 2 * nd_layer ) )
29811.       t$3775 = _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
29811.       t$920 = ( 1 + nd_layer )
29936.       t$3776 = _zla( 0, ( 1 + nd_layer ) )
29811.       t$3777 = _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
29936.       t$3780 = 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
29937.       t$3781 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
29937.       t$3783 = t$3781 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
29938.       t$3784 = 8 * ( 7 + t$3781 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
29938.       t$3786 = t$3784 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
29939.       t$3787 = 8 * ( 7 + t$3784 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
29939.       t$3789 = t$3787 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
29940.       t$3790 = 8 * ( 7 + t$3787 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
29940.       t$3792 = t$3790 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
29941.       t$3793 = 8 * ( 7 + t$3790 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
29941.       t$3795 = t$3793 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
29942.       t$3796 = 8 * ( 7 + t$3793 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
29942.       t$3798 = t$3796 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
29943.       t$3799 = 8 * ( 7 + t$3796 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
29943.       t$3801 = t$3799 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
29944.       t$3802 = 8 * ( 7 + t$3799 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
29944.       t$3804 = t$3802 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
29959.       t$3805 = 8 * ( 7 + t$3802 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
29959.       t$3807 = t$3805 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29960.       t$3808 = 8 * ( 7 + t$3805 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29960.       t$3810 = t$3808 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29961.       t$3811 = 8 * ( 7 + t$3808 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29961.       t$3813 = t$3811 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29962.       t$3814 = 8 * ( 7 + t$3811 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29962.       t$3816 = t$3814 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29963.       t$3817 = 8 * ( 7 + t$3814 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29963.       t$3819 = t$3817 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29964.       t$3820 = 8 * ( 7 + t$3817 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29964.       t$3822 = t$3820 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29811.       t$3823 = 1 + nd_layer
29987.       t$3824 = _zla( 0, 1 + nd_layer )
29811.       t$3825 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29987.       t$3826 = 8 * ( 7 + t$3820 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29987.       t$3828 = t$3826 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29989.       t$3829 = 8 * ( 7 + t$3826 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
29989.       t$3831 = t$3829 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29991.       t$3832 = 8 * ( 7 + t$3829 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
29991.       t$3834 = t$3832 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29993.       t$3835 = 8 * ( 7 + t$3832 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
29993.       t$3837 = t$3835 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29995.       t$3838 = 8 * ( 7 + t$3835 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
29995.       t$3840 = t$3838 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29997.       t$3841 = 8 * ( 7 + t$3838 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
29997.       t$3843 = t$3841 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
29945.       t$3844 = 8 * ( 7 + t$3841 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
29945.       t$3846 = t$3844 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
29946.       t$3847 = 8 * ( 7 + t$3844 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
29946.       t$3849 = t$3847 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
29947.       t$3850 = 8 * ( 7 + t$3847 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
29947.       t$3852 = t$3850 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
29950.       t$3853 = 8 * ( 7 + t$3850 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
29950.       t$3855 = t$3853 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29951.       t$3856 = 8 * ( 7 + t$3853 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29951.       t$3858 = t$3856 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29952.       t$3859 = 8 * ( 7 + t$3856 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29952.       t$3861 = t$3859 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29953.       t$3862 = 8 * ( 7 + t$3859 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29953.       t$3864 = t$3862 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29954.       t$3865 = 8 * ( 7 + t$3862 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29954.       t$3867 = t$3865 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29955.       t$3868 = 8 * ( 7 + t$3865 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29955.       t$3870 = t$3868 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29956.       t$3871 = 8 * ( 7 + t$3868 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29956.       t$3873 = t$3871 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29957.       t$3874 = 8 * ( 7 + t$3871 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29957.       t$3876 = t$3874 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29958.       t$3877 = 8 * ( 7 + t$3874 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29958.       t$3879 = t$3877 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29965.       t$3880 = 8 * ( 7 + t$3877 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29965.       t$3882 = t$3880 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29966.       t$3883 = 8 * ( 7 + t$3880 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29966.       t$3885 = t$3883 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29967.       t$3886 = 8 * ( 7 + t$3883 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
29967.       t$3888 = t$3886 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
29811.       t$3778 = int( _alloc( t$3886 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ), 8 )
29936.       t$3779 = t$3778
29937.       t$3782 = t$3781 + t$3778
29938.       t$3785 = t$3784 + t$3778
29939.       t$3788 = t$3787 + t$3778
29940.       t$3791 = t$3790 + t$3778
29941.       t$3794 = t$3793 + t$3778
29942.       t$3797 = t$3796 + t$3778
29943.       t$3800 = t$3799 + t$3778
29944.       t$3803 = t$3802 + t$3778
29959.       t$3806 = t$3805 + t$3778
29960.       t$3809 = t$3808 + t$3778
29961.       t$3812 = t$3811 + t$3778
29962.       t$3815 = t$3814 + t$3778
29963.       t$3818 = t$3817 + t$3778
29964.       t$3821 = t$3820 + t$3778
29987.       t$3827 = t$3826 + t$3778
29989.       t$3830 = t$3829 + t$3778
29991.       t$3833 = t$3832 + t$3778
29993.       t$3836 = t$3835 + t$3778
29995.       t$3839 = t$3838 + t$3778
29997.       t$3842 = t$3841 + t$3778
29945.       t$3845 = t$3844 + t$3778
29946.       t$3848 = t$3847 + t$3778
29947.       t$3851 = t$3850 + t$3778
29950.       t$3854 = t$3853 + t$3778
29951.       t$3857 = t$3856 + t$3778
29952.       t$3860 = t$3859 + t$3778
29953.       t$3863 = t$3862 + t$3778
29954.       t$3866 = t$3865 + t$3778
29955.       t$3869 = t$3868 + t$3778
29956.       t$3872 = t$3871 + t$3778
29957.       t$3875 = t$3874 + t$3778
29958.       t$3878 = t$3877 + t$3778
29965.       t$3881 = t$3880 + t$3778
29966.       t$3884 = t$3883 + t$3778
29967.       t$3887 = t$3886 + t$3778
30007.       if ( n_profile > 0 ) then
30007.          $I_L30007_134 = 0
30007. !dir$ ivdep
30007.          do
30008.             alpha11(1 + $I_L30007_134, 1 + n_layer) = albedo_surface_diff(1 + $I_L30007_134)
30009.             alpha12(1 + $I_L30007_134, 1 + n_layer) = 0.0
30010.             alpha13(1 + $I_L30007_134, 1 + n_layer) = 0.0
30011.             alpha21(1 + $I_L30007_134, 1 + n_layer) = 0.0
30012.             alpha22(1 + $I_L30007_134, 1 + n_layer) = albedo_surface_diff(1 + $I_L30007_134)
30013.             alpha23(1 + $I_L30007_134, 1 + n_layer) = 0.0
30014.             alpha31(1 + $I_L30007_134, 1 + n_layer) = 0.0
30015.             alpha32(1 + $I_L30007_134, 1 + n_layer) = 0.0
30016.             alpha33(1 + $I_L30007_134, 1 + n_layer) = albedo_surface_diff(1 + $I_L30007_134)
30017.             g1(1 + $I_L30007_134, 1 + n_layer) = source_ground_free(1 + $I_L30007_134)
30018.             g2(1 + $I_L30007_134, 1 + n_layer) = source_ground_strat(1 + $I_L30007_134)
30019.             g3(1 + $I_L30007_134, 1 + n_layer) = source_ground_conv(1 + $I_L30007_134)
30020.             $I_L30007_134 = 1 + $I_L30007_134
30007.             if ( $I_L30007_134 >= n_profile ) exit
30007.          enddo
30185.          $I_L30185_142 = 0
30185. !dir$ ivdep
30185.          do
30186.             flux_total(1 + $I_L30185_142, 2) = flux_inc_down(1 + $I_L30185_142)
30187.             $I_L30185_142 = 1 + $I_L30185_142
30185.             if ( $I_L30185_142 >= n_profile ) exit
30185.          enddo
30185.       endif
30023.       if ( n_cloud_top + -n_layer <= 0 ) then
30024.          if ( n_profile > 0 ) then
30023.             $I_L30023_158 = 0
30023. !dir$ blocking_size( 1, 1 )
30023.             do
30024.                $I_L30024_136 = 0
30024. !dir$ ivdep
30024. !dir$ loop_info (automatic) cache_nt( u33, u32, u31, u23, u22, u21, u13, u12, u11, s_up_conv, s_up_strat, g2, g3, alpha33 )
30024. !dir$ blocking_size( 256, 256 )
30024.                do
30026.                   $theta11_S15 = v11(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha11(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) + v21(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha12(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) + v31(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha13(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158)
30028.                   $theta12_S12 = alpha11(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) * v12(1 + $I_L30024_136, n_layer + -$I_L30023_158) + alpha12(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) * v22(1 + $I_L30024_136, n_layer + -$I_L30023_158) + alpha13(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) * v32(1 + $I_L30024_136, n_layer + -$I_L30023_158)
30030.                   $theta13_S11 = alpha11(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) * v13(1 + $I_L30024_136, n_layer + -$I_L30023_158) + alpha12(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) * v23(1 + $I_L30024_136, n_layer + -$I_L30023_158) + alpha13(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) * v33(1 + $I_L30024_136, n_layer + -$I_L30023_158)
30032.                   $theta21_S10 = v11(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha21(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) + v21(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha22(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) + v31(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha23(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158)
30034.                   $theta22_S9 = v12(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha21(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) + v22(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha22(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) + v32(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha23(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158)
30036.                   $theta23_S7 = v13(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha21(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) + v23(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha22(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) + v33(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha23(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158)
30038.                   $theta31_S4 = v11(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha31(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) + v21(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha32(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) + v31(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha33(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158)
30040.                   $theta32_S5 = v12(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha31(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) + v22(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha32(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) + v32(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha33(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158)
30042.                   $theta33_S6 = v13(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha31(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) + v23(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha32(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) + v33(1 + $I_L30024_136, n_layer + -$I_L30023_158) * alpha33(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158)
30044.                   $beta31_WR0_R0 = -( $theta31_S4 * r(1 + $I_L30024_136, n_layer + -$I_L30023_158) )
30044.                   beta31(1 + $I_L30024_136, n_layer + -$I_L30023_158) = $beta31_WR0_R0
30045.                   $beta32_WR0_R1 = -( $theta32_S5 * r_strat(1 + $I_L30024_136, n_layer + -$I_L30023_158) )
30045.                   beta32(1 + $I_L30024_136, n_layer + -$I_L30023_158) = $beta32_WR0_R1
30046.                   $beta33_inv_WR0_R2 = 1.0/( 1.0 + -( $theta33_S6 * r_conv(1 + $I_L30024_136, n_layer + -$I_L30023_158) ) )
30046.                   beta33_inv(1 + $I_L30024_136, n_layer + -$I_L30023_158) = $beta33_inv_WR0_R2
30048.                   $gamma31_WR0_R3 = $theta31_S4 * t(1 + $I_L30024_136, n_layer + -$I_L30023_158)
30048.                   gamma31(1 + $I_L30024_136, n_layer + -$I_L30023_158) = $gamma31_WR0_R3
30049.                   $gamma32_WR0_R4 = $theta32_S5 * t_strat(1 + $I_L30024_136, n_layer + -$I_L30023_158)
30049.                   gamma32(1 + $I_L30024_136, n_layer + -$I_L30023_158) = $gamma32_WR0_R4
30050.                   $gamma33_WR0_R5 = $theta33_S6 * t_conv(1 + $I_L30024_136, n_layer + -$I_L30023_158)
30050.                   gamma33(1 + $I_L30024_136, n_layer + -$I_L30023_158) = $gamma33_WR0_R5
30051.                   $h3_WR0_R6 = g3(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) + $theta31_S4 * s_down(1 + $I_L30024_136, n_layer + -$I_L30023_158) + $theta32_S5 * s_down_strat(1 + $I_L30024_136, n_layer + -$I_L30023_158) + $theta33_S6 * s_down_conv(1 + $I_L30024_136, n_layer + -$I_L30023_158)
30051.                   h3(1 + $I_L30024_136, n_layer + -$I_L30023_158) = $h3_WR0_R6
30055.                   $lambda3_S8 = $theta23_S7 * $beta33_inv_WR0_R2 * r_conv(1 + $I_L30024_136, n_layer + -$I_L30023_158)
30056.                   $beta22_inv_WR0_R7 = 1.0/( 1.0 + -( $theta22_S9 * r_strat(1 + $I_L30024_136, n_layer + -$I_L30023_158) ) + $lambda3_S8 * $beta32_WR0_R1 )
30056.                   beta22_inv(1 + $I_L30024_136, n_layer + -$I_L30023_158) = $beta22_inv_WR0_R7
30058.                   $beta21_WR0_R8 = -( $theta21_S10 * r(1 + $I_L30024_136, n_layer + -$I_L30023_158) ) + $lambda3_S8 * $beta31_WR0_R0
30058.                   beta21(1 + $I_L30024_136, n_layer + -$I_L30023_158) = $beta21_WR0_R8
30059.                   $gamma21_WR0_R9 = $lambda3_S8 * $gamma31_WR0_R3 + $theta21_S10 * t(1 + $I_L30024_136, n_layer + -$I_L30023_158)
30059.                   gamma21(1 + $I_L30024_136, n_layer + -$I_L30023_158) = $gamma21_WR0_R9
30060.                   $gamma22_WR0_R10 = $lambda3_S8 * $gamma32_WR0_R4 + $theta22_S9 * t_strat(1 + $I_L30024_136, n_layer + -$I_L30023_158)
30060.                   gamma22(1 + $I_L30024_136, n_layer + -$I_L30023_158) = $gamma22_WR0_R10
30061.                   $gamma23_WR0_R11 = $lambda3_S8 * $gamma33_WR0_R5 + $theta23_S7 * t_conv(1 + $I_L30024_136, n_layer + -$I_L30023_158)
30061.                   gamma23(1 + $I_L30024_136, n_layer + -$I_L30023_158) = $gamma23_WR0_R11
30062.                   $h2_WR0_R12 = g2(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) + $theta23_S7 * s_down_conv(1 + $I_L30024_136, n_layer + -$I_L30023_158) + $lambda3_S8 * $h3_WR0_R6 + $theta22_S9 * s_down_strat(1 + $I_L30024_136, n_layer + -$I_L30023_158) + $theta21_S10 * s_down(1 + $I_L30024_136, n_layer + -$I_L30023_158)
30062.                   h2(1 + $I_L30024_136, n_layer + -$I_L30023_158) = $h2_WR0_R12
30066.                   $lambda3_S13 = $theta13_S11 * $beta33_inv_WR0_R2 * r_conv(1 + $I_L30024_136, n_layer + -$I_L30023_158)
30067.                   $lambda2_S14 = $beta22_inv_WR0_R7 * ( -( $lambda3_S13 * $beta32_WR0_R1 ) + $theta12_S12 * r_strat(1 + $I_L30024_136, n_layer + -$I_L30023_158) )
30069.                   $beta11_inv_WR0_R13 = 1.0/( 1.0 + -( $theta11_S15 * r(1 + $I_L30024_136, n_layer + -$I_L30023_158) ) + $lambda3_S13 * $beta31_WR0_R0 + $lambda2_S14 * $beta21_WR0_R8 )
30069.                   beta11_inv(1 + $I_L30024_136, n_layer + -$I_L30023_158) = $beta11_inv_WR0_R13
30072.                   $gamma11_WR0_R14 = $lambda3_S13 * $gamma31_WR0_R3 + $lambda2_S14 * $gamma21_WR0_R9 + $theta11_S15 * t(1 + $I_L30024_136, n_layer + -$I_L30023_158)
30072.                   gamma11(1 + $I_L30024_136, n_layer + -$I_L30023_158) = $gamma11_WR0_R14
30074.                   $gamma12_WR0_R15 = $theta12_S12 * t_strat(1 + $I_L30024_136, n_layer + -$I_L30023_158) + $lambda3_S13 * $gamma32_WR0_R4 + $lambda2_S14 * $gamma22_WR0_R10
30074.                   gamma12(1 + $I_L30024_136, n_layer + -$I_L30023_158) = $gamma12_WR0_R15
30076.                   $gamma13_WR0_R16 = $theta13_S11 * t_conv(1 + $I_L30024_136, n_layer + -$I_L30023_158) + $lambda3_S13 * $gamma33_WR0_R5 + $lambda2_S14 * $gamma23_WR0_R11
30076.                   gamma13(1 + $I_L30024_136, n_layer + -$I_L30023_158) = $gamma13_WR0_R16
30078.                   $h1_WR0_R17 = g1(1 + $I_L30024_136, 1 + n_layer + -$I_L30023_158) + $theta13_S11 * s_down_conv(1 + $I_L30024_136, n_layer + -$I_L30023_158) + $theta12_S12 * s_down_strat(1 + $I_L30024_136, n_layer + -$I_L30023_158) + $lambda3_S13 * $h3_WR0_R6 + $lambda2_S14 * $h2_WR0_R12 + $theta11_S15 * s_down(1 + $I_L30024_136, n_layer + -$I_L30023_158)
30078.                   h1(1 + $I_L30024_136, n_layer + -$I_L30023_158) = $h1_WR0_R17
30082.                   $lambda3_S16 = $beta33_inv_WR0_R2 * t_conv(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u33(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158)
30083.                   $lambda2_S17 = $beta22_inv_WR0_R7 * ( $lambda3_S16 * $beta32_WR0_R1 + t_strat(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u32(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) )
30085.                   $lambda1_S18 = $beta11_inv_WR0_R13 * ( t(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u31(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) + $lambda3_S16 * $beta31_WR0_R0 + $lambda2_S17 * $beta21_WR0_R8 )
30087.                   alpha31(1 + $I_L30024_136, n_layer + -$I_L30023_158) = r(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u31(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) + $lambda3_S16 * $gamma31_WR0_R3 + $lambda2_S17 * $gamma21_WR0_R9 + $lambda1_S18 * $gamma11_WR0_R14
30089.                   alpha32(1 + $I_L30024_136, n_layer + -$I_L30023_158) = r_strat(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u32(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) + $lambda3_S16 * $gamma32_WR0_R4 + $lambda2_S17 * $gamma22_WR0_R10 + $lambda1_S18 * $gamma12_WR0_R15
30092.                   alpha33(1 + $I_L30024_136, n_layer + -$I_L30023_158) = r_conv(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u33(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) + $lambda3_S16 * $gamma33_WR0_R5 + $lambda2_S17 * $gamma23_WR0_R11 + $lambda1_S18 * $gamma13_WR0_R16
30095.                   g3(1 + $I_L30024_136, n_layer + -$I_L30023_158) = u31(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) * s_up(1 + $I_L30024_136, n_layer + -$I_L30023_158) + u32(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) * s_up_strat(1 + $I_L30024_136, n_layer + -$I_L30023_158) + u33(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) * s_up_conv(1 + $I_L30024_136, n_layer + -$I_L30023_158) + $lambda3_S16 * $h3_WR0_R6 + $lambda2_S17 * $h2_WR0_R12 + $lambda1_S18 * $h1_WR0_R17
30099.                   $lambda3_S19 = $beta33_inv_WR0_R2 * t_conv(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u23(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158)
30100.                   $lambda2_S20 = $beta22_inv_WR0_R7 * ( $lambda3_S19 * $beta32_WR0_R1 + t_strat(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u22(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) )
30102.                   $lambda1_S21 = $beta11_inv_WR0_R13 * ( t(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u21(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) + $lambda3_S19 * $beta31_WR0_R0 + $lambda2_S20 * $beta21_WR0_R8 )
30104.                   alpha21(1 + $I_L30024_136, n_layer + -$I_L30023_158) = r(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u21(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) + $lambda3_S19 * $gamma31_WR0_R3 + $lambda2_S20 * $gamma21_WR0_R9 + $lambda1_S21 * $gamma11_WR0_R14
30106.                   alpha22(1 + $I_L30024_136, n_layer + -$I_L30023_158) = r_strat(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u22(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) + $lambda3_S19 * $gamma32_WR0_R4 + $lambda2_S20 * $gamma22_WR0_R10 + $lambda1_S21 * $gamma12_WR0_R15
30109.                   alpha23(1 + $I_L30024_136, n_layer + -$I_L30023_158) = r_conv(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u23(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) + $lambda3_S19 * $gamma33_WR0_R5 + $lambda2_S20 * $gamma23_WR0_R11 + $lambda1_S21 * $gamma13_WR0_R16
30112.                   g2(1 + $I_L30024_136, n_layer + -$I_L30023_158) = s_up(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u21(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) + s_up_strat(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u22(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) + s_up_conv(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u23(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) + $lambda3_S19 * $h3_WR0_R6 + $lambda2_S20 * $h2_WR0_R12 + $lambda1_S21 * $h1_WR0_R17
30116.                   $lambda3_S22 = u13(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) * $beta33_inv_WR0_R2 * t_conv(1 + $I_L30024_136, n_layer + -$I_L30023_158)
30117.                   $lambda2_S23 = $beta22_inv_WR0_R7 * ( $lambda3_S22 * $beta32_WR0_R1 + t_strat(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u12(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) )
30119.                   $lambda1_S24 = $beta11_inv_WR0_R13 * ( t(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u11(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) + $lambda3_S22 * $beta31_WR0_R0 + $lambda2_S23 * $beta21_WR0_R8 )
30121.                   alpha11(1 + $I_L30024_136, n_layer + -$I_L30023_158) = r(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u11(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) + $lambda3_S22 * $gamma31_WR0_R3 + $lambda2_S23 * $gamma21_WR0_R9 + $lambda1_S24 * $gamma11_WR0_R14
30123.                   alpha12(1 + $I_L30024_136, n_layer + -$I_L30023_158) = r_strat(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u12(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) + $lambda3_S22 * $gamma32_WR0_R4 + $lambda2_S23 * $gamma22_WR0_R10 + $lambda1_S24 * $gamma12_WR0_R15
30126.                   alpha13(1 + $I_L30024_136, n_layer + -$I_L30023_158) = r_conv(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u13(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) + $lambda3_S22 * $gamma33_WR0_R5 + $lambda2_S23 * $gamma23_WR0_R11 + $lambda1_S24 * $gamma13_WR0_R16
30129.                   g1(1 + $I_L30024_136, n_layer + -$I_L30023_158) = s_up(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u11(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) + s_up_strat(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u12(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) + s_up_conv(1 + $I_L30024_136, n_layer + -$I_L30023_158) * u13(1 + $I_L30024_136, -1 + n_layer + -$I_L30023_158) + $lambda3_S22 * $h3_WR0_R6 + $lambda2_S23 * $h2_WR0_R12 + $lambda1_S24 * $h1_WR0_R17
30133.                   $I_L30024_136 = 1 + $I_L30024_136
30024.                   if ( $I_L30024_136 >= n_profile ) exit
30024.                enddo
30134.                $I_L30023_158 = 1 + $I_L30023_158
30133.                if ( $I_L30023_158 >= 1 + n_layer + -n_cloud_top ) exit
30133.             enddo
30133.          endif
30133.       endif
30139.       if ( n_cloud_top > 1 ) then
30142.          if ( n_profile > 0 ) then
30144.             if ( n_cloud_top < n_layer ) then
30142.                $I_L30142_138 = 0
30142. !dir$ ivdep
30142.                do
30147.                   $theta11_S26 = alpha13(1 + $I_L30142_138, n_cloud_top) * v31(1 + $I_L30142_138, -1 + n_cloud_top) + alpha11(1 + $I_L30142_138, n_cloud_top) * v11(1 + $I_L30142_138, -1 + n_cloud_top) + alpha12(1 + $I_L30142_138, n_cloud_top) * v21(1 + $I_L30142_138, -1 + n_cloud_top)
30153.                   $beta11_inv_WR0_R18 = 1.0/( 1.0 + -( $theta11_S26 * r(1 + $I_L30142_138, -1 + n_cloud_top) ) )
30153.                   beta11_inv(1 + $I_L30142_138, -1 + n_cloud_top) = $beta11_inv_WR0_R18
30154.                   $gamma11_WR0_R19 = $theta11_S26 * t(1 + $I_L30142_138, -1 + n_cloud_top)
30154.                   gamma11(1 + $I_L30142_138, -1 + n_cloud_top) = $gamma11_WR0_R19
30155.                   $h1_WR0_R20 = g1(1 + $I_L30142_138, n_cloud_top) + $theta11_S26 * s_down(1 + $I_L30142_138, -1 + n_cloud_top)
30155.                   h1(1 + $I_L30142_138, -1 + n_cloud_top) = $h1_WR0_R20
30157.                   $lambda_S27 = $beta11_inv_WR0_R18 * t(1 + $I_L30142_138, -1 + n_cloud_top)
30158.                   alpha11(1 + $I_L30142_138, -1 + n_cloud_top) = r(1 + $I_L30142_138, -1 + n_cloud_top) + $lambda_S27 * $gamma11_WR0_R19
30159.                   g1(1 + $I_L30142_138, -1 + n_cloud_top) = s_up(1 + $I_L30142_138, -1 + n_cloud_top) + $lambda_S27 * $h1_WR0_R20
30161.                   $I_L30142_138 = 1 + $I_L30142_138
30151.                   if ( $I_L30142_138 >= n_profile ) exit
30151.                enddo
30151.             else
30142.                $I_L30142_156 = 0
30142. !dir$ ivdep
30142.                do
30150.                   $theta11_S26 = alpha11(1 + $I_L30142_156, n_cloud_top)
30153.                   $beta11_inv_WR0_R21 = 1.0/( 1.0 + -( $theta11_S26 * r(1 + $I_L30142_156, -1 + n_cloud_top) ) )
30153.                   beta11_inv(1 + $I_L30142_156, -1 + n_cloud_top) = $beta11_inv_WR0_R21
30154.                   $gamma11_WR0_R22 = $theta11_S26 * t(1 + $I_L30142_156, -1 + n_cloud_top)
30154.                   gamma11(1 + $I_L30142_156, -1 + n_cloud_top) = $gamma11_WR0_R22
30155.                   $h1_WR0_R23 = g1(1 + $I_L30142_156, n_cloud_top) + $theta11_S26 * s_down(1 + $I_L30142_156, -1 + n_cloud_top)
30155.                   h1(1 + $I_L30142_156, -1 + n_cloud_top) = $h1_WR0_R23
30157.                   $lambda_S27 = $beta11_inv_WR0_R21 * t(1 + $I_L30142_156, -1 + n_cloud_top)
30158.                   alpha11(1 + $I_L30142_156, -1 + n_cloud_top) = r(1 + $I_L30142_156, -1 + n_cloud_top) + $lambda_S27 * $gamma11_WR0_R22
30159.                   g1(1 + $I_L30142_156, -1 + n_cloud_top) = s_up(1 + $I_L30142_156, -1 + n_cloud_top) + $lambda_S27 * $h1_WR0_R23
30161.                   $I_L30142_156 = 1 + $I_L30142_156
30151.                   if ( $I_L30142_156 >= n_profile ) exit
30151.                enddo
30151.             endif
30151.          endif
30151.       endif
30168.       if ( 2 + -n_cloud_top < 0 ) then
30169.          if ( n_profile > 0 ) then
30168.             $I_L30168_160 = 0
30168.             if ( -4 + n_cloud_top >= 0 ) then
30168.                $I_L30168_168 = 0
30168. !dir$ blocking_size( 1, 1 )
30168.                do
30169.                   $I_L30169_140 = 0
30169. !dir$ ivdep
30169. !dir$ blocking_size( 256, 256 )
30169.                   do
30171.                      $beta11_inv_WR0_R24 = 1.0/( 1.0 + -( alpha11(1 + $I_L30169_140, -1 + n_cloud_top + -2 * $I_L30168_168) * r(1 + $I_L30169_140, -2 + n_cloud_top + -2 * $I_L30168_168) ) )
30171.                      beta11_inv(1 + $I_L30169_140, -2 + n_cloud_top + -2 * $I_L30168_168) = $beta11_inv_WR0_R24
30173.                      $gamma11_WR0_R25 = alpha11(1 + $I_L30169_140, -1 + n_cloud_top + -2 * $I_L30168_168) * t(1 + $I_L30169_140, -2 + n_cloud_top + -2 * $I_L30168_168)
30173.                      gamma11(1 + $I_L30169_140, -2 + n_cloud_top + -2 * $I_L30168_168) = $gamma11_WR0_R25
30174.                      $h1_WR0_R26 = g1(1 + $I_L30169_140, -1 + n_cloud_top + -2 * $I_L30168_168) + alpha11(1 + $I_L30169_140, -1 + n_cloud_top + -2 * $I_L30168_168) * s_down(1 + $I_L30169_140, -2 + n_cloud_top + -2 * $I_L30168_168)
30174.                      h1(1 + $I_L30169_140, -2 + n_cloud_top + -2 * $I_L30168_168) = $h1_WR0_R26
30176.                      $lambda1_S30 = $beta11_inv_WR0_R24 * t(1 + $I_L30169_140, -2 + n_cloud_top + -2 * $I_L30168_168)
30177.                      alpha11(1 + $I_L30169_140, -2 + n_cloud_top + -2 * $I_L30168_168) = r(1 + $I_L30169_140, -2 + n_cloud_top + -2 * $I_L30168_168) + $lambda1_S30 * $gamma11_WR0_R25
30178.                      g1(1 + $I_L30169_140, -2 + n_cloud_top + -2 * $I_L30168_168) = s_up(1 + $I_L30169_140, -2 + n_cloud_top + -2 * $I_L30168_168) + $lambda1_S30 * $h1_WR0_R26
30171.                      $beta11_inv_WR0_R24 = 1.0/( 1.0 + -( alpha11(1 + $I_L30169_140, -2 + n_cloud_top + -2 * $I_L30168_168) * r(1 + $I_L30169_140, -3 + n_cloud_top + -2 * $I_L30168_168) ) )
30171.                      beta11_inv(1 + $I_L30169_140, -3 + n_cloud_top + -2 * $I_L30168_168) = $beta11_inv_WR0_R24
30173.                      $gamma11_WR0_R25 = alpha11(1 + $I_L30169_140, -2 + n_cloud_top + -2 * $I_L30168_168) * t(1 + $I_L30169_140, -3 + n_cloud_top + -2 * $I_L30168_168)
30173.                      gamma11(1 + $I_L30169_140, -3 + n_cloud_top + -2 * $I_L30168_168) = $gamma11_WR0_R25
30174.                      $h1_WR0_R26 = g1(1 + $I_L30169_140, -2 + n_cloud_top + -2 * $I_L30168_168) + alpha11(1 + $I_L30169_140, -2 + n_cloud_top + -2 * $I_L30168_168) * s_down(1 + $I_L30169_140, -3 + n_cloud_top + -2 * $I_L30168_168)
30174.                      h1(1 + $I_L30169_140, -3 + n_cloud_top + -2 * $I_L30168_168) = $h1_WR0_R26
30176.                      $lambda1_S30 = $beta11_inv_WR0_R24 * t(1 + $I_L30169_140, -3 + n_cloud_top + -2 * $I_L30168_168)
30177.                      alpha11(1 + $I_L30169_140, -3 + n_cloud_top + -2 * $I_L30168_168) = r(1 + $I_L30169_140, -3 + n_cloud_top + -2 * $I_L30168_168) + $lambda1_S30 * $gamma11_WR0_R25
30178.                      g1(1 + $I_L30169_140, -3 + n_cloud_top + -2 * $I_L30168_168) = s_up(1 + $I_L30169_140, -3 + n_cloud_top + -2 * $I_L30168_168) + $lambda1_S30 * $h1_WR0_R26
30180.                      $I_L30169_140 = 1 + $I_L30169_140
30169.                      if ( $I_L30169_140 >= n_profile ) exit
30169.                   enddo
30181.                   $I_L30168_168 = 1 + $I_L30168_168
30180.                   if ( $I_L30168_168 >= _rsh( -2 + n_cloud_top, 1 ) ) exit
30180.                enddo
30181.                $I_L30168_160 = and( 0xfffffffffffffffeUL, -2 + n_cloud_top )
30181.             endif
30168.             if ( $I_L30168_160 < -2 + n_cloud_top ) then
30169.                $I_L30169_140 = 0
30169. !dir$ ivdep
30169. !dir$ blocking_size( 256, 256 )
30169.                do
30171.                   $beta11_inv_WR0_R24 = 1.0/( 1.0 + -( r(1 + $I_L30169_140, -2 + n_cloud_top + -$I_L30168_160) * alpha11(1 + $I_L30169_140, -1 + n_cloud_top + -$I_L30168_160) ) )
30171.                   beta11_inv(1 + $I_L30169_140, -2 + n_cloud_top + -$I_L30168_160) = $beta11_inv_WR0_R24
30173.                   $gamma11_WR0_R25 = alpha11(1 + $I_L30169_140, -1 + n_cloud_top + -$I_L30168_160) * t(1 + $I_L30169_140, -2 + n_cloud_top + -$I_L30168_160)
30173.                   gamma11(1 + $I_L30169_140, -2 + n_cloud_top + -$I_L30168_160) = $gamma11_WR0_R25
30174.                   $h1_WR0_R26 = g1(1 + $I_L30169_140, -1 + n_cloud_top + -$I_L30168_160) + alpha11(1 + $I_L30169_140, -1 + n_cloud_top + -$I_L30168_160) * s_down(1 + $I_L30169_140, -2 + n_cloud_top + -$I_L30168_160)
30174.                   h1(1 + $I_L30169_140, -2 + n_cloud_top + -$I_L30168_160) = $h1_WR0_R26
30176.                   $lambda1_S30 = $beta11_inv_WR0_R24 * t(1 + $I_L30169_140, -2 + n_cloud_top + -$I_L30168_160)
30177.                   alpha11(1 + $I_L30169_140, -2 + n_cloud_top + -$I_L30168_160) = r(1 + $I_L30169_140, -2 + n_cloud_top + -$I_L30168_160) + $lambda1_S30 * $gamma11_WR0_R25
30178.                   g1(1 + $I_L30169_140, -2 + n_cloud_top + -$I_L30168_160) = s_up(1 + $I_L30169_140, -2 + n_cloud_top + -$I_L30168_160) + $lambda1_S30 * $h1_WR0_R26
30180.                   $I_L30169_140 = 1 + $I_L30169_140
30169.                   if ( $I_L30169_140 >= n_profile ) exit
30169.                enddo
30169.             endif
30169.          endif
30169.       endif
30188.       if ( n_cloud_top > 1 ) then
30189.          if ( n_profile > 0 ) then
30189.             $I_L30189_144 = 0
30189. !dir$ ivdep
30189.             do
30190.                flux_total(1 + $I_L30189_144, 1) = g1(1 + $I_L30189_144, 1) + flux_total(1 + $I_L30189_144, 2) * alpha11(1 + $I_L30189_144, 1)
30191.                $I_L30189_144 = 1 + $I_L30189_144
30189.                if ( $I_L30189_144 >= n_profile ) exit
30189.             enddo
30202.             $I_L30202_162 = 0
30202.             if ( -3 + n_cloud_top >= 0 ) then
30202.                $I_L30202_170 = 0
30202.                do
30203.                   $I_L30203_148 = 0
30203. !dir$ ivdep
30203.                   do
30204.                      $flux_total_WR0_R27 = beta11_inv(1 + $I_L30203_148, 1 + 2 * $I_L30202_170) * ( h1(1 + $I_L30203_148, 1 + 2 * $I_L30202_170) + gamma11(1 + $I_L30203_148, 1 + 2 * $I_L30202_170) * flux_total(1 + $I_L30203_148, 2 + 4 * $I_L30202_170) )
30204.                      flux_total(1 + $I_L30203_148, 3 + 4 * $I_L30202_170) = $flux_total_WR0_R27
30206.                      flux_total(1 + $I_L30203_148, 4 + 4 * $I_L30202_170) = s_down(1 + $I_L30203_148, 1 + 2 * $I_L30202_170) + $flux_total_WR0_R27 * r(1 + $I_L30203_148, 1 + 2 * $I_L30202_170) + flux_total(1 + $I_L30203_148, 2 + 4 * $I_L30202_170) * t(1 + $I_L30203_148, 1 + 2 * $I_L30202_170)
30204.                      $flux_total_WR0_R27 = beta11_inv(1 + $I_L30203_148, 2 + 2 * $I_L30202_170) * ( h1(1 + $I_L30203_148, 2 + 2 * $I_L30202_170) + flux_total(1 + $I_L30203_148, 4 + 4 * $I_L30202_170) * gamma11(1 + $I_L30203_148, 2 + 2 * $I_L30202_170) )
30204.                      flux_total(1 + $I_L30203_148, 5 + 4 * $I_L30202_170) = $flux_total_WR0_R27
30206.                      flux_total(1 + $I_L30203_148, 6 + 4 * $I_L30202_170) = s_down(1 + $I_L30203_148, 2 + 2 * $I_L30202_170) + flux_total(1 + $I_L30203_148, 4 + 4 * $I_L30202_170) * t(1 + $I_L30203_148, 2 + 2 * $I_L30202_170) + $flux_total_WR0_R27 * r(1 + $I_L30203_148, 2 + 2 * $I_L30202_170)
30208.                      $I_L30203_148 = 1 + $I_L30203_148
30203.                      if ( $I_L30203_148 >= n_profile ) exit
30203.                   enddo
30209.                   $I_L30202_170 = 1 + $I_L30202_170
30208.                   if ( $I_L30202_170 >= _rsh( -1 + n_cloud_top, 1 ) ) exit
30208.                enddo
30209.                $I_L30202_162 = and( 0xfffffffffffffffeUL, -1 + n_cloud_top )
30209.             endif
30202.             if ( $I_L30202_162 < -1 + n_cloud_top ) then
30203.                $I_L30203_148 = 0
30203. !dir$ ivdep
30203.                do
30204.                   $flux_total_WR0_R27 = beta11_inv(1 + $I_L30203_148, 1 + $I_L30202_162) * ( h1(1 + $I_L30203_148, 1 + $I_L30202_162) + flux_total(1 + $I_L30203_148, 2 + 2 * $I_L30202_162) * gamma11(1 + $I_L30203_148, 1 + $I_L30202_162) )
30204.                   flux_total(1 + $I_L30203_148, 3 + 2 * $I_L30202_162) = $flux_total_WR0_R27
30206.                   flux_total(1 + $I_L30203_148, 4 + 2 * $I_L30202_162) = s_down(1 + $I_L30203_148, 1 + $I_L30202_162) + flux_total(1 + $I_L30203_148, 2 + 2 * $I_L30202_162) * t(1 + $I_L30203_148, 1 + $I_L30202_162) + $flux_total_WR0_R27 * r(1 + $I_L30203_148, 1 + $I_L30202_162)
30208.                   $I_L30203_148 = 1 + $I_L30203_148
30203.                   if ( $I_L30203_148 >= n_profile ) exit
30203.                enddo
30203.             endif
30203.          endif
30192.       else if ( n_profile > 0 ) then
30193.          $I_L30193_146 = 0
30193. !dir$ ivdep
30193.          do
30194.             flux_total(1 + $I_L30193_146, 1) = g1(1 + $I_L30193_146, 1) + flux_inc_down(1 + $I_L30193_146) * ( v31(1 + $I_L30193_146, 0) * alpha13(1 + $I_L30193_146, 1) + alpha11(1 + $I_L30193_146, 1) * v11(1 + $I_L30193_146, 0) + v21(1 + $I_L30193_146, 0) * alpha12(1 + $I_L30193_146, 1) )
30197.             $I_L30193_146 = 1 + $I_L30193_146
30193.             if ( $I_L30193_146 >= n_profile ) exit
30193.          enddo
30193.       endif
30215.       if ( n_cloud_top <= n_layer ) then
30219.          if ( n_profile > 0 ) then
30219.             $I_L30219_150 = 0
30219. !dir$ ivdep
30219.             do
30220.                $flux_down_1_WR0_R28 = v11(1 + $I_L30219_150, -1 + n_cloud_top) * flux_total(1 + $I_L30219_150, 2 * n_cloud_top)
30221.                $flux_down_2_WR0_R29 = flux_total(1 + $I_L30219_150, 2 * n_cloud_top) * v21(1 + $I_L30219_150, -1 + n_cloud_top)
30222.                $flux_down_3_WR0_R30 = flux_total(1 + $I_L30219_150, 2 * n_cloud_top) * v31(1 + $I_L30219_150, -1 + n_cloud_top)
30223.                $flux_up_1_WR0_R31 = beta11_inv(1 + $I_L30219_150, n_cloud_top) * ( h1(1 + $I_L30219_150, n_cloud_top) + $flux_down_3_WR0_R30 * gamma13(1 + $I_L30219_150, n_cloud_top) + $flux_down_1_WR0_R28 * gamma11(1 + $I_L30219_150, n_cloud_top) + $flux_down_2_WR0_R29 * gamma12(1 + $I_L30219_150, n_cloud_top) )
30223.                flux_up_1(1 + $I_L30219_150, n_cloud_top) = $flux_up_1_WR0_R31
30227.                $flux_up_2_WR0_R32 = beta22_inv(1 + $I_L30219_150, n_cloud_top) * ( h2(1 + $I_L30219_150, n_cloud_top) + -( $flux_up_1_WR0_R31 * beta21(1 + $I_L30219_150, n_cloud_top) ) + $flux_down_3_WR0_R30 * gamma23(1 + $I_L30219_150, n_cloud_top) + $flux_down_1_WR0_R28 * gamma21(1 + $I_L30219_150, n_cloud_top) + $flux_down_2_WR0_R29 * gamma22(1 + $I_L30219_150, n_cloud_top) )
30227.                flux_up_2(1 + $I_L30219_150, n_cloud_top) = $flux_up_2_WR0_R32
30231.                $flux_up_3_WR0_R33 = beta33_inv(1 + $I_L30219_150, n_cloud_top) * ( h3(1 + $I_L30219_150, n_cloud_top) + -( $flux_up_2_WR0_R32 * beta32(1 + $I_L30219_150, n_cloud_top) ) + -( $flux_up_1_WR0_R31 * beta31(1 + $I_L30219_150, n_cloud_top) ) + $flux_down_3_WR0_R30 * gamma33(1 + $I_L30219_150, n_cloud_top) + $flux_down_1_WR0_R28 * gamma31(1 + $I_L30219_150, n_cloud_top) + $flux_down_2_WR0_R29 * gamma32(1 + $I_L30219_150, n_cloud_top) )
30231.                flux_up_3(1 + $I_L30219_150, n_cloud_top) = $flux_up_3_WR0_R33
30236.                $flux_down_1_WR0_R28 = s_down(1 + $I_L30219_150, n_cloud_top) + $flux_down_1_WR0_R28 * t(1 + $I_L30219_150, n_cloud_top) + $flux_up_1_WR0_R31 * r(1 + $I_L30219_150, n_cloud_top)
30236.                flux_down_1(1 + $I_L30219_150, n_cloud_top) = $flux_down_1_WR0_R28
30238.                $flux_down_2_WR0_R29 = s_down_strat(1 + $I_L30219_150, n_cloud_top) + $flux_down_2_WR0_R29 * t_strat(1 + $I_L30219_150, n_cloud_top) + $flux_up_2_WR0_R32 * r_strat(1 + $I_L30219_150, n_cloud_top)
30238.                flux_down_2(1 + $I_L30219_150, n_cloud_top) = $flux_down_2_WR0_R29
30240.                $flux_down_3_WR0_R30 = s_down_conv(1 + $I_L30219_150, n_cloud_top) + $flux_down_3_WR0_R30 * t_conv(1 + $I_L30219_150, n_cloud_top) + $flux_up_3_WR0_R33 * r_conv(1 + $I_L30219_150, n_cloud_top)
30240.                flux_down_3(1 + $I_L30219_150, n_cloud_top) = $flux_down_3_WR0_R30
30242.                $I_L30219_150 = 1 + $I_L30219_150
30219.                if ( $I_L30219_150 >= n_profile ) exit
30219.             enddo
30219.          endif
30219.       endif
30247.       if ( n_layer + -n_cloud_top > 0 ) then
30248.          if ( n_profile > 0 ) then
30247.             $I_L30247_164 = 0
30247. !dir$ blocking_size( 1, 1 )
30247.             do
30248.                $I_L30248_152 = 0
30248. !dir$ ivdep
30248. !dir$ blocking_size( 256, 256 )
30248.                do
30249.                   $flux_down_1_WR0_R36 = flux_down_1(1 + $I_L30248_152, n_cloud_top + $I_L30247_164) * v11(1 + $I_L30248_152, n_cloud_top + $I_L30247_164) + flux_down_2(1 + $I_L30248_152, n_cloud_top + $I_L30247_164) * v12(1 + $I_L30248_152, n_cloud_top + $I_L30247_164) + flux_down_3(1 + $I_L30248_152, n_cloud_top + $I_L30247_164) * v13(1 + $I_L30248_152, n_cloud_top + $I_L30247_164)
30249.                   flux_down_1(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) = $flux_down_1_WR0_R36
30252.                   $flux_down_2_WR0_R35 = flux_down_1(1 + $I_L30248_152, n_cloud_top + $I_L30247_164) * v21(1 + $I_L30248_152, n_cloud_top + $I_L30247_164) + flux_down_2(1 + $I_L30248_152, n_cloud_top + $I_L30247_164) * v22(1 + $I_L30248_152, n_cloud_top + $I_L30247_164) + flux_down_3(1 + $I_L30248_152, n_cloud_top + $I_L30247_164) * v23(1 + $I_L30248_152, n_cloud_top + $I_L30247_164)
30252.                   flux_down_2(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) = $flux_down_2_WR0_R35
30255.                   $flux_down_3_WR0_R34 = flux_down_1(1 + $I_L30248_152, n_cloud_top + $I_L30247_164) * v31(1 + $I_L30248_152, n_cloud_top + $I_L30247_164) + flux_down_2(1 + $I_L30248_152, n_cloud_top + $I_L30247_164) * v32(1 + $I_L30248_152, n_cloud_top + $I_L30247_164) + flux_down_3(1 + $I_L30248_152, n_cloud_top + $I_L30247_164) * v33(1 + $I_L30248_152, n_cloud_top + $I_L30247_164)
30255.                   flux_down_3(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) = $flux_down_3_WR0_R34
30258.                   $flux_up_1_WR0_R37 = beta11_inv(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) * ( h1(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) + $flux_down_1_WR0_R36 * gamma11(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) + $flux_down_3_WR0_R34 * gamma13(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) + $flux_down_2_WR0_R35 * gamma12(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) )
30258.                   flux_up_1(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) = $flux_up_1_WR0_R37
30262.                   $flux_up_2_WR0_R38 = beta22_inv(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) * ( h2(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) + -( $flux_up_1_WR0_R37 * beta21(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) ) + $flux_down_1_WR0_R36 * gamma21(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) + $flux_down_3_WR0_R34 * gamma23(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) + $flux_down_2_WR0_R35 * gamma22(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) )
30262.                   flux_up_2(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) = $flux_up_2_WR0_R38
30266.                   $flux_up_3_WR0_R39 = beta33_inv(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) * ( h3(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) + -( $flux_up_1_WR0_R37 * beta31(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) ) + -( $flux_up_2_WR0_R38 * beta32(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) ) + $flux_down_1_WR0_R36 * gamma31(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) + $flux_down_3_WR0_R34 * gamma33(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) + $flux_down_2_WR0_R35 * gamma32(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) )
30266.                   flux_up_3(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) = $flux_up_3_WR0_R39
30272.                   $flux_down_1_WR0_R36 = s_down(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) + $flux_down_1_WR0_R36 * t(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) + $flux_up_1_WR0_R37 * r(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164)
30272.                   flux_down_1(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) = $flux_down_1_WR0_R36
30274.                   $flux_down_2_WR0_R35 = s_down_strat(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) + $flux_down_2_WR0_R35 * t_strat(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) + $flux_up_2_WR0_R38 * r_strat(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164)
30274.                   flux_down_2(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) = $flux_down_2_WR0_R35
30276.                   $flux_down_3_WR0_R34 = s_down_conv(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) + $flux_down_3_WR0_R34 * t_conv(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) + $flux_up_3_WR0_R39 * r_conv(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164)
30276.                   flux_down_3(1 + $I_L30248_152, 1 + n_cloud_top + $I_L30247_164) = $flux_down_3_WR0_R34
30278.                   $I_L30248_152 = 1 + $I_L30248_152
30248.                   if ( $I_L30248_152 >= n_profile ) exit
30248.                enddo
30279.                $I_L30247_164 = 1 + $I_L30247_164
30278.                if ( $I_L30247_164 >= ( n_layer + -n_cloud_top ) ) exit
30278.             enddo
30278.          endif
30278.       endif
30283.       if ( n_layer + -n_cloud_top >= 0 ) then
30284.          if ( n_profile > 0 ) then
30283.             $I_L30283_166 = 0
30283.             do
30284.                $I_L30284_154 = 0
30284. !dir$ ivdep
30284.                do
30285.                   flux_total(1 + $I_L30284_154, 1 + 2 * n_cloud_top + 2 * $I_L30283_166) = flux_up_1(1 + $I_L30284_154, n_cloud_top + $I_L30283_166) + flux_up_2(1 + $I_L30284_154, n_cloud_top + $I_L30283_166) + flux_up_3(1 + $I_L30284_154, n_cloud_top + $I_L30283_166)
30287.                   flux_total(1 + $I_L30284_154, 2 + 2 * n_cloud_top + 2 * $I_L30283_166) = flux_down_1(1 + $I_L30284_154, n_cloud_top + $I_L30283_166) + flux_down_2(1 + $I_L30284_154, n_cloud_top + $I_L30283_166) + flux_down_3(1 + $I_L30284_154, n_cloud_top + $I_L30283_166)
30289.                   $I_L30284_154 = 1 + $I_L30284_154
30284.                   if ( $I_L30284_154 >= n_profile ) exit
30284.                enddo
30290.                $I_L30283_166 = 1 + $I_L30283_166
30289.                if ( $I_L30283_166 >= 1 + n_layer + -n_cloud_top ) exit
30289.             enddo
30289.          endif
30289.       endif
29811.       _free( t$3778 )
30295.       return
30295.       end
30295.       
30320.       
30320.       subroutine solver_triple_hogan( n_profile, n_layer, n_cloud_top, t, r, s_down, s_up, t_strat, r_strat, s_down_strat, s_up_strat, t_conv, r_conv, s_down_conv, s_up_conv, v11, v12, v13, v21, v22, v23, v31, v32, v33, u11, u12, u13, u21, u22, u23, u31, u32, u33, flux_inc_down, source_ground_free, source_ground_strat, source_ground_conv, albedo_surface_diff, flux_total, nd_profile, nd_layer, id_ct )
30320.       t$921 = nd_profile
30320.       t$922 = nd_layer
30359.       t$3889 = _zla( 0, nd_profile )
30320.       t$3890 = _zla( 0, nd_profile )
30359.       t$3891 = _zla( 0, nd_layer )
30320.       t$3892 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
30320.       t$923 = ( -1 + id_ct )
30320.       t$3893 = 2 + nd_layer + -id_ct
30384.       t$3894 = _zla( 0, 2 + nd_layer + -id_ct )
30320.       t$3895 = _zla( 0, nd_profile ) * _zla( 0, 2 + nd_layer + -id_ct )
30320.       t$924 = ( 2 + 2 * nd_layer )
30433.       t$3896 = _zla( 0, ( 2 + 2 * nd_layer ) )
30320.       t$3897 = _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
30320.       t$925 = ( 1 + nd_layer )
30445.       t$3898 = _zla( 0, ( 1 + nd_layer ) )
30320.       t$3899 = _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
30445.       t$3902 = 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
30446.       t$3903 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
30446.       t$3905 = t$3903 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
30447.       t$3906 = 8 * ( 7 + t$3903 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
30447.       t$3908 = t$3906 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
30456.       t$3909 = 8 * ( 7 + t$3906 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
30456.       t$3911 = t$3909 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
30457.       t$3912 = 8 * ( 7 + t$3909 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
30457.       t$3914 = t$3912 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
30458.       t$3915 = 8 * ( 7 + t$3912 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
30458.       t$3917 = t$3915 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
30320.       t$3918 = 1 + nd_layer
30475.       t$3919 = _zla( 0, 1 + nd_layer )
30320.       t$3920 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
30475.       t$3921 = 8 * ( 7 + t$3915 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
30475.       t$3923 = t$3921 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
30477.       t$3924 = 8 * ( 7 + t$3921 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
30477.       t$3926 = t$3924 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
30479.       t$3927 = 8 * ( 7 + t$3924 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
30479.       t$3929 = t$3927 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
30481.       t$3930 = 8 * ( 7 + t$3927 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
30481.       t$3932 = t$3930 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
30483.       t$3933 = 8 * ( 7 + t$3930 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
30483.       t$3935 = t$3933 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
30485.       t$3936 = 8 * ( 7 + t$3933 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
30485.       t$3938 = t$3936 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
30448.       t$3939 = 8 * ( 7 + t$3936 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer ) ) / 8
30448.       t$3941 = t$3939 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
30449.       t$3942 = 8 * ( 7 + t$3939 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
30449.       t$3944 = t$3942 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
30450.       t$3945 = 8 * ( 7 + t$3942 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
30450.       t$3947 = t$3945 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) )
30453.       t$3948 = 8 * ( 7 + t$3945 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_layer ) ) ) / 8
30453.       t$3950 = t$3948 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
30454.       t$3951 = 8 * ( 7 + t$3948 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
30454.       t$3953 = t$3951 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
30455.       t$3954 = 8 * ( 7 + t$3951 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
30455.       t$3956 = t$3954 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
30459.       t$3957 = 8 * ( 7 + t$3954 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
30459.       t$3959 = t$3957 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
30460.       t$3960 = 8 * ( 7 + t$3957 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
30460.       t$3962 = t$3960 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
30461.       t$3963 = 8 * ( 7 + t$3960 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
30461.       t$3965 = t$3963 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
30320.       t$3900 = int( _alloc( t$3963 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ), 8 )
30445.       t$3901 = t$3900
30446.       t$3904 = t$3903 + t$3900
30447.       t$3907 = t$3906 + t$3900
30456.       t$3910 = t$3909 + t$3900
30457.       t$3913 = t$3912 + t$3900
30458.       t$3916 = t$3915 + t$3900
30475.       t$3922 = t$3921 + t$3900
30477.       t$3925 = t$3924 + t$3900
30479.       t$3928 = t$3927 + t$3900
30481.       t$3931 = t$3930 + t$3900
30483.       t$3934 = t$3933 + t$3900
30485.       t$3937 = t$3936 + t$3900
30448.       t$3940 = t$3939 + t$3900
30449.       t$3943 = t$3942 + t$3900
30450.       t$3946 = t$3945 + t$3900
30453.       t$3949 = t$3948 + t$3900
30454.       t$3952 = t$3951 + t$3900
30455.       t$3955 = t$3954 + t$3900
30459.       t$3958 = t$3957 + t$3900
30460.       t$3961 = t$3960 + t$3900
30461.       t$3964 = t$3963 + t$3900
30495.       if ( n_profile > 0 ) then
30495.          $I_L30495_132 = 0
30495. !dir$ ivdep
30495.          do
30496.             alpha11(1 + $I_L30495_132, 1 + n_layer) = albedo_surface_diff(1 + $I_L30495_132)
30497.             alpha22(1 + $I_L30495_132, 1 + n_layer) = albedo_surface_diff(1 + $I_L30495_132)
30498.             alpha33(1 + $I_L30495_132, 1 + n_layer) = albedo_surface_diff(1 + $I_L30495_132)
30499.             g1(1 + $I_L30495_132, 1 + n_layer) = source_ground_free(1 + $I_L30495_132)
30500.             g2(1 + $I_L30495_132, 1 + n_layer) = source_ground_strat(1 + $I_L30495_132)
30501.             g3(1 + $I_L30495_132, 1 + n_layer) = source_ground_conv(1 + $I_L30495_132)
30605.             flux_total(1 + $I_L30495_132, 2) = flux_inc_down(1 + $I_L30495_132)
30502.             $I_L30495_132 = 1 + $I_L30495_132
30495.             if ( $I_L30495_132 >= n_profile ) exit
30495.          enddo
30495.       endif
30505.       if ( n_cloud_top + -n_layer <= 0 ) then
30506.          if ( n_profile > 0 ) then
30505.             $I_L30505_154 = 0
30505. !dir$ blocking_size( 1, 1 )
30505.             do
30506.                $I_L30506_134 = 0
30506. !dir$ ivdep
30506. !dir$ blocking_size( 256, 256 )
30506.                do
30508.                   $theta11_S4 = alpha11(1 + $I_L30506_134, 1 + n_layer + -$I_L30505_154) * v11(1 + $I_L30506_134, n_layer + -$I_L30505_154) + alpha22(1 + $I_L30506_134, 1 + n_layer + -$I_L30505_154) * v21(1 + $I_L30506_134, n_layer + -$I_L30505_154) + alpha33(1 + $I_L30506_134, 1 + n_layer + -$I_L30505_154) * v31(1 + $I_L30506_134, n_layer + -$I_L30505_154)
30510.                   $theta22_S5 = alpha11(1 + $I_L30506_134, 1 + n_layer + -$I_L30505_154) * v12(1 + $I_L30506_134, n_layer + -$I_L30505_154) + alpha22(1 + $I_L30506_134, 1 + n_layer + -$I_L30505_154) * v22(1 + $I_L30506_134, n_layer + -$I_L30505_154) + alpha33(1 + $I_L30506_134, 1 + n_layer + -$I_L30505_154) * v32(1 + $I_L30506_134, n_layer + -$I_L30505_154)
30512.                   $theta33_S6 = alpha11(1 + $I_L30506_134, 1 + n_layer + -$I_L30505_154) * v13(1 + $I_L30506_134, n_layer + -$I_L30505_154) + alpha22(1 + $I_L30506_134, 1 + n_layer + -$I_L30505_154) * v23(1 + $I_L30506_134, n_layer + -$I_L30505_154) + alpha33(1 + $I_L30506_134, 1 + n_layer + -$I_L30505_154) * v33(1 + $I_L30506_134, n_layer + -$I_L30505_154)
30515.                   $beta11_inv_WR0_R0 = 1.0/( 1.0 + -( $theta11_S4 * r(1 + $I_L30506_134, n_layer + -$I_L30505_154) ) )
30515.                   beta11_inv(1 + $I_L30506_134, n_layer + -$I_L30505_154) = $beta11_inv_WR0_R0
30517.                   gamma11(1 + $I_L30506_134, n_layer + -$I_L30505_154) = $theta11_S4 * t(1 + $I_L30506_134, n_layer + -$I_L30505_154)
30518.                   $h1_WR0_R1 = g1(1 + $I_L30506_134, 1 + n_layer + -$I_L30505_154) + $theta11_S4 * s_down(1 + $I_L30506_134, n_layer + -$I_L30505_154)
30518.                   h1(1 + $I_L30506_134, n_layer + -$I_L30505_154) = $h1_WR0_R1
30520.                   $beta22_inv_WR0_R2 = 1.0/( 1.0 + -( $theta22_S5 * r_strat(1 + $I_L30506_134, n_layer + -$I_L30505_154) ) )
30520.                   beta22_inv(1 + $I_L30506_134, n_layer + -$I_L30505_154) = $beta22_inv_WR0_R2
30522.                   gamma22(1 + $I_L30506_134, n_layer + -$I_L30505_154) = $theta22_S5 * t_strat(1 + $I_L30506_134, n_layer + -$I_L30505_154)
30523.                   $h2_WR0_R3 = g2(1 + $I_L30506_134, 1 + n_layer + -$I_L30505_154) + $theta22_S5 * s_down_strat(1 + $I_L30506_134, n_layer + -$I_L30505_154)
30523.                   h2(1 + $I_L30506_134, n_layer + -$I_L30505_154) = $h2_WR0_R3
30525.                   $beta33_inv_WR0_R4 = 1.0/( 1.0 + -( $theta33_S6 * r_conv(1 + $I_L30506_134, n_layer + -$I_L30505_154) ) )
30525.                   beta33_inv(1 + $I_L30506_134, n_layer + -$I_L30505_154) = $beta33_inv_WR0_R4
30527.                   gamma33(1 + $I_L30506_134, n_layer + -$I_L30505_154) = $theta33_S6 * t_conv(1 + $I_L30506_134, n_layer + -$I_L30505_154)
30528.                   $h3_WR0_R5 = g3(1 + $I_L30506_134, 1 + n_layer + -$I_L30505_154) + $theta33_S6 * s_down_conv(1 + $I_L30506_134, n_layer + -$I_L30505_154)
30528.                   h3(1 + $I_L30506_134, n_layer + -$I_L30505_154) = $h3_WR0_R5
30530.                   $lambda1_S9 = s_up(1 + $I_L30506_134, n_layer + -$I_L30505_154) + $beta11_inv_WR0_R0 * $h1_WR0_R1 * t(1 + $I_L30506_134, n_layer + -$I_L30505_154)
30531.                   $lambda2_S8 = s_up_strat(1 + $I_L30506_134, n_layer + -$I_L30505_154) + $beta22_inv_WR0_R2 * $h2_WR0_R3 * t_strat(1 + $I_L30506_134, n_layer + -$I_L30505_154)
30533.                   $lambda3_S7 = s_up_conv(1 + $I_L30506_134, n_layer + -$I_L30505_154) + $beta33_inv_WR0_R4 * $h3_WR0_R5 * t_conv(1 + $I_L30506_134, n_layer + -$I_L30505_154)
30536.                   alpha11(1 + $I_L30506_134, n_layer + -$I_L30505_154) = r(1 + $I_L30506_134, n_layer + -$I_L30505_154) + $theta11_S4 * $beta11_inv_WR0_R0 * t(1 + $I_L30506_134, n_layer + -$I_L30505_154) * t(1 + $I_L30506_134, n_layer + -$I_L30505_154)
30538.                   g1(1 + $I_L30506_134, n_layer + -$I_L30505_154) = $lambda3_S7 * u13(1 + $I_L30506_134, -1 + n_layer + -$I_L30505_154) + $lambda2_S8 * u12(1 + $I_L30506_134, -1 + n_layer + -$I_L30505_154) + $lambda1_S9 * u11(1 + $I_L30506_134, -1 + n_layer + -$I_L30505_154)
30541.                   alpha22(1 + $I_L30506_134, n_layer + -$I_L30505_154) = r_strat(1 + $I_L30506_134, n_layer + -$I_L30505_154) + $theta22_S5 * $beta22_inv_WR0_R2 * t_strat(1 + $I_L30506_134, n_layer + -$I_L30505_154) * t_strat(1 + $I_L30506_134, n_layer + -$I_L30505_154)
30543.                   g2(1 + $I_L30506_134, n_layer + -$I_L30505_154) = $lambda3_S7 * u23(1 + $I_L30506_134, -1 + n_layer + -$I_L30505_154) + $lambda2_S8 * u22(1 + $I_L30506_134, -1 + n_layer + -$I_L30505_154) + $lambda1_S9 * u21(1 + $I_L30506_134, -1 + n_layer + -$I_L30505_154)
30546.                   alpha33(1 + $I_L30506_134, n_layer + -$I_L30505_154) = r_conv(1 + $I_L30506_134, n_layer + -$I_L30505_154) + $theta33_S6 * $beta33_inv_WR0_R4 * t_conv(1 + $I_L30506_134, n_layer + -$I_L30505_154) * t_conv(1 + $I_L30506_134, n_layer + -$I_L30505_154)
30549.                   g3(1 + $I_L30506_134, n_layer + -$I_L30505_154) = $lambda3_S7 * u33(1 + $I_L30506_134, -1 + n_layer + -$I_L30505_154) + $lambda2_S8 * u32(1 + $I_L30506_134, -1 + n_layer + -$I_L30505_154) + $lambda1_S9 * u31(1 + $I_L30506_134, -1 + n_layer + -$I_L30505_154)
30552.                   $I_L30506_134 = 1 + $I_L30506_134
30506.                   if ( $I_L30506_134 >= n_profile ) exit
30506.                enddo
30553.                $I_L30505_154 = 1 + $I_L30505_154
30552.                if ( $I_L30505_154 >= 1 + n_layer + -n_cloud_top ) exit
30552.             enddo
30552.          endif
30552.       endif
30558.       if ( n_cloud_top > 1 ) then
30561.          if ( n_profile > 0 ) then
30563.             if ( n_cloud_top < n_layer ) then
30561.                $I_L30561_136 = 0
30561. !dir$ ivdep
30561.                do
30566.                   $theta11_S11 = alpha33(1 + $I_L30561_136, n_cloud_top) * v31(1 + $I_L30561_136, -1 + n_cloud_top) + alpha11(1 + $I_L30561_136, n_cloud_top) * v11(1 + $I_L30561_136, -1 + n_cloud_top) + alpha22(1 + $I_L30561_136, n_cloud_top) * v21(1 + $I_L30561_136, -1 + n_cloud_top)
30572.                   $beta11_inv_WR0_R6 = 1.0/( 1.0 + -( $theta11_S11 * r(1 + $I_L30561_136, -1 + n_cloud_top) ) )
30572.                   beta11_inv(1 + $I_L30561_136, -1 + n_cloud_top) = $beta11_inv_WR0_R6
30573.                   $gamma11_WR0_R7 = $theta11_S11 * t(1 + $I_L30561_136, -1 + n_cloud_top)
30573.                   gamma11(1 + $I_L30561_136, -1 + n_cloud_top) = $gamma11_WR0_R7
30574.                   $h1_WR0_R8 = g1(1 + $I_L30561_136, n_cloud_top) + $theta11_S11 * s_down(1 + $I_L30561_136, -1 + n_cloud_top)
30574.                   h1(1 + $I_L30561_136, -1 + n_cloud_top) = $h1_WR0_R8
30576.                   $lambda_S12 = $beta11_inv_WR0_R6 * t(1 + $I_L30561_136, -1 + n_cloud_top)
30577.                   alpha11(1 + $I_L30561_136, -1 + n_cloud_top) = r(1 + $I_L30561_136, -1 + n_cloud_top) + $lambda_S12 * $gamma11_WR0_R7
30578.                   g1(1 + $I_L30561_136, -1 + n_cloud_top) = s_up(1 + $I_L30561_136, -1 + n_cloud_top) + $lambda_S12 * $h1_WR0_R8
30580.                   $I_L30561_136 = 1 + $I_L30561_136
30570.                   if ( $I_L30561_136 >= n_profile ) exit
30570.                enddo
30570.             else
30561.                $I_L30561_152 = 0
30561. !dir$ ivdep
30561.                do
30569.                   $theta11_S11 = alpha11(1 + $I_L30561_152, n_cloud_top)
30572.                   $beta11_inv_WR0_R9 = 1.0/( 1.0 + -( $theta11_S11 * r(1 + $I_L30561_152, -1 + n_cloud_top) ) )
30572.                   beta11_inv(1 + $I_L30561_152, -1 + n_cloud_top) = $beta11_inv_WR0_R9
30573.                   $gamma11_WR0_R10 = $theta11_S11 * t(1 + $I_L30561_152, -1 + n_cloud_top)
30573.                   gamma11(1 + $I_L30561_152, -1 + n_cloud_top) = $gamma11_WR0_R10
30574.                   $h1_WR0_R11 = g1(1 + $I_L30561_152, n_cloud_top) + $theta11_S11 * s_down(1 + $I_L30561_152, -1 + n_cloud_top)
30574.                   h1(1 + $I_L30561_152, -1 + n_cloud_top) = $h1_WR0_R11
30576.                   $lambda_S12 = $beta11_inv_WR0_R9 * t(1 + $I_L30561_152, -1 + n_cloud_top)
30577.                   alpha11(1 + $I_L30561_152, -1 + n_cloud_top) = r(1 + $I_L30561_152, -1 + n_cloud_top) + $lambda_S12 * $gamma11_WR0_R10
30578.                   g1(1 + $I_L30561_152, -1 + n_cloud_top) = s_up(1 + $I_L30561_152, -1 + n_cloud_top) + $lambda_S12 * $h1_WR0_R11
30580.                   $I_L30561_152 = 1 + $I_L30561_152
30570.                   if ( $I_L30561_152 >= n_profile ) exit
30570.                enddo
30570.             endif
30570.          endif
30570.       endif
30587.       if ( 2 + -n_cloud_top < 0 ) then
30588.          if ( n_profile > 0 ) then
30587.             $I_L30587_156 = 0
30587.             if ( -4 + n_cloud_top >= 0 ) then
30587.                $I_L30587_164 = 0
30587. !dir$ blocking_size( 1, 1 )
30587.                do
30588.                   $I_L30588_138 = 0
30588. !dir$ ivdep
30588. !dir$ blocking_size( 256, 256 )
30588.                   do
30590.                      $beta11_inv_WR0_R12 = 1.0/( 1.0 + -( alpha11(1 + $I_L30588_138, -1 + n_cloud_top + -2 * $I_L30587_164) * r(1 + $I_L30588_138, -2 + n_cloud_top + -2 * $I_L30587_164) ) )
30590.                      beta11_inv(1 + $I_L30588_138, -2 + n_cloud_top + -2 * $I_L30587_164) = $beta11_inv_WR0_R12
30592.                      $gamma11_WR0_R13 = alpha11(1 + $I_L30588_138, -1 + n_cloud_top + -2 * $I_L30587_164) * t(1 + $I_L30588_138, -2 + n_cloud_top + -2 * $I_L30587_164)
30592.                      gamma11(1 + $I_L30588_138, -2 + n_cloud_top + -2 * $I_L30587_164) = $gamma11_WR0_R13
30593.                      $h1_WR0_R14 = g1(1 + $I_L30588_138, -1 + n_cloud_top + -2 * $I_L30587_164) + alpha11(1 + $I_L30588_138, -1 + n_cloud_top + -2 * $I_L30587_164) * s_down(1 + $I_L30588_138, -2 + n_cloud_top + -2 * $I_L30587_164)
30593.                      h1(1 + $I_L30588_138, -2 + n_cloud_top + -2 * $I_L30587_164) = $h1_WR0_R14
30595.                      $lambda1_S15 = $beta11_inv_WR0_R12 * t(1 + $I_L30588_138, -2 + n_cloud_top + -2 * $I_L30587_164)
30596.                      alpha11(1 + $I_L30588_138, -2 + n_cloud_top + -2 * $I_L30587_164) = r(1 + $I_L30588_138, -2 + n_cloud_top + -2 * $I_L30587_164) + $lambda1_S15 * $gamma11_WR0_R13
30597.                      g1(1 + $I_L30588_138, -2 + n_cloud_top + -2 * $I_L30587_164) = s_up(1 + $I_L30588_138, -2 + n_cloud_top + -2 * $I_L30587_164) + $lambda1_S15 * $h1_WR0_R14
30590.                      $beta11_inv_WR0_R12 = 1.0/( 1.0 + -( alpha11(1 + $I_L30588_138, -2 + n_cloud_top + -2 * $I_L30587_164) * r(1 + $I_L30588_138, -3 + n_cloud_top + -2 * $I_L30587_164) ) )
30590.                      beta11_inv(1 + $I_L30588_138, -3 + n_cloud_top + -2 * $I_L30587_164) = $beta11_inv_WR0_R12
30592.                      $gamma11_WR0_R13 = alpha11(1 + $I_L30588_138, -2 + n_cloud_top + -2 * $I_L30587_164) * t(1 + $I_L30588_138, -3 + n_cloud_top + -2 * $I_L30587_164)
30592.                      gamma11(1 + $I_L30588_138, -3 + n_cloud_top + -2 * $I_L30587_164) = $gamma11_WR0_R13
30593.                      $h1_WR0_R14 = g1(1 + $I_L30588_138, -2 + n_cloud_top + -2 * $I_L30587_164) + alpha11(1 + $I_L30588_138, -2 + n_cloud_top + -2 * $I_L30587_164) * s_down(1 + $I_L30588_138, -3 + n_cloud_top + -2 * $I_L30587_164)
30593.                      h1(1 + $I_L30588_138, -3 + n_cloud_top + -2 * $I_L30587_164) = $h1_WR0_R14
30595.                      $lambda1_S15 = $beta11_inv_WR0_R12 * t(1 + $I_L30588_138, -3 + n_cloud_top + -2 * $I_L30587_164)
30596.                      alpha11(1 + $I_L30588_138, -3 + n_cloud_top + -2 * $I_L30587_164) = r(1 + $I_L30588_138, -3 + n_cloud_top + -2 * $I_L30587_164) + $lambda1_S15 * $gamma11_WR0_R13
30597.                      g1(1 + $I_L30588_138, -3 + n_cloud_top + -2 * $I_L30587_164) = s_up(1 + $I_L30588_138, -3 + n_cloud_top + -2 * $I_L30587_164) + $lambda1_S15 * $h1_WR0_R14
30599.                      $I_L30588_138 = 1 + $I_L30588_138
30588.                      if ( $I_L30588_138 >= n_profile ) exit
30588.                   enddo
30600.                   $I_L30587_164 = 1 + $I_L30587_164
30599.                   if ( $I_L30587_164 >= _rsh( -2 + n_cloud_top, 1 ) ) exit
30599.                enddo
30600.                $I_L30587_156 = and( 0xfffffffffffffffeUL, -2 + n_cloud_top )
30600.             endif
30587.             if ( $I_L30587_156 < -2 + n_cloud_top ) then
30588.                $I_L30588_138 = 0
30588. !dir$ ivdep
30588. !dir$ blocking_size( 256, 256 )
30588.                do
30590.                   $beta11_inv_WR0_R12 = 1.0/( 1.0 + -( r(1 + $I_L30588_138, -2 + n_cloud_top + -$I_L30587_156) * alpha11(1 + $I_L30588_138, -1 + n_cloud_top + -$I_L30587_156) ) )
30590.                   beta11_inv(1 + $I_L30588_138, -2 + n_cloud_top + -$I_L30587_156) = $beta11_inv_WR0_R12
30592.                   $gamma11_WR0_R13 = alpha11(1 + $I_L30588_138, -1 + n_cloud_top + -$I_L30587_156) * t(1 + $I_L30588_138, -2 + n_cloud_top + -$I_L30587_156)
30592.                   gamma11(1 + $I_L30588_138, -2 + n_cloud_top + -$I_L30587_156) = $gamma11_WR0_R13
30593.                   $h1_WR0_R14 = g1(1 + $I_L30588_138, -1 + n_cloud_top + -$I_L30587_156) + alpha11(1 + $I_L30588_138, -1 + n_cloud_top + -$I_L30587_156) * s_down(1 + $I_L30588_138, -2 + n_cloud_top + -$I_L30587_156)
30593.                   h1(1 + $I_L30588_138, -2 + n_cloud_top + -$I_L30587_156) = $h1_WR0_R14
30595.                   $lambda1_S15 = $beta11_inv_WR0_R12 * t(1 + $I_L30588_138, -2 + n_cloud_top + -$I_L30587_156)
30596.                   alpha11(1 + $I_L30588_138, -2 + n_cloud_top + -$I_L30587_156) = r(1 + $I_L30588_138, -2 + n_cloud_top + -$I_L30587_156) + $lambda1_S15 * $gamma11_WR0_R13
30597.                   g1(1 + $I_L30588_138, -2 + n_cloud_top + -$I_L30587_156) = s_up(1 + $I_L30588_138, -2 + n_cloud_top + -$I_L30587_156) + $lambda1_S15 * $h1_WR0_R14
30599.                   $I_L30588_138 = 1 + $I_L30588_138
30588.                   if ( $I_L30588_138 >= n_profile ) exit
30588.                enddo
30588.             endif
30588.          endif
30588.       endif
30607.       if ( n_cloud_top > 1 ) then
30608.          if ( n_profile > 0 ) then
30608.             $I_L30608_140 = 0
30608. !dir$ ivdep
30608.             do
30609.                flux_total(1 + $I_L30608_140, 1) = g1(1 + $I_L30608_140, 1) + flux_total(1 + $I_L30608_140, 2) * alpha11(1 + $I_L30608_140, 1)
30610.                $I_L30608_140 = 1 + $I_L30608_140
30608.                if ( $I_L30608_140 >= n_profile ) exit
30608.             enddo
30621.             $I_L30621_158 = 0
30621.             if ( -3 + n_cloud_top >= 0 ) then
30621.                $I_L30621_166 = 0
30621.                do
30622.                   $I_L30622_144 = 0
30622. !dir$ ivdep
30622.                   do
30623.                      $flux_total_WR0_R15 = beta11_inv(1 + $I_L30622_144, 1 + 2 * $I_L30621_166) * ( h1(1 + $I_L30622_144, 1 + 2 * $I_L30621_166) + gamma11(1 + $I_L30622_144, 1 + 2 * $I_L30621_166) * flux_total(1 + $I_L30622_144, 2 + 4 * $I_L30621_166) )
30623.                      flux_total(1 + $I_L30622_144, 3 + 4 * $I_L30621_166) = $flux_total_WR0_R15
30625.                      flux_total(1 + $I_L30622_144, 4 + 4 * $I_L30621_166) = s_down(1 + $I_L30622_144, 1 + 2 * $I_L30621_166) + $flux_total_WR0_R15 * r(1 + $I_L30622_144, 1 + 2 * $I_L30621_166) + flux_total(1 + $I_L30622_144, 2 + 4 * $I_L30621_166) * t(1 + $I_L30622_144, 1 + 2 * $I_L30621_166)
30623.                      $flux_total_WR0_R15 = beta11_inv(1 + $I_L30622_144, 2 + 2 * $I_L30621_166) * ( h1(1 + $I_L30622_144, 2 + 2 * $I_L30621_166) + flux_total(1 + $I_L30622_144, 4 + 4 * $I_L30621_166) * gamma11(1 + $I_L30622_144, 2 + 2 * $I_L30621_166) )
30623.                      flux_total(1 + $I_L30622_144, 5 + 4 * $I_L30621_166) = $flux_total_WR0_R15
30625.                      flux_total(1 + $I_L30622_144, 6 + 4 * $I_L30621_166) = s_down(1 + $I_L30622_144, 2 + 2 * $I_L30621_166) + flux_total(1 + $I_L30622_144, 4 + 4 * $I_L30621_166) * t(1 + $I_L30622_144, 2 + 2 * $I_L30621_166) + $flux_total_WR0_R15 * r(1 + $I_L30622_144, 2 + 2 * $I_L30621_166)
30627.                      $I_L30622_144 = 1 + $I_L30622_144
30622.                      if ( $I_L30622_144 >= n_profile ) exit
30622.                   enddo
30628.                   $I_L30621_166 = 1 + $I_L30621_166
30627.                   if ( $I_L30621_166 >= _rsh( -1 + n_cloud_top, 1 ) ) exit
30627.                enddo
30628.                $I_L30621_158 = and( 0xfffffffffffffffeUL, -1 + n_cloud_top )
30628.             endif
30621.             if ( $I_L30621_158 < -1 + n_cloud_top ) then
30622.                $I_L30622_144 = 0
30622. !dir$ ivdep
30622.                do
30623.                   $flux_total_WR0_R15 = beta11_inv(1 + $I_L30622_144, 1 + $I_L30621_158) * ( h1(1 + $I_L30622_144, 1 + $I_L30621_158) + flux_total(1 + $I_L30622_144, 2 + 2 * $I_L30621_158) * gamma11(1 + $I_L30622_144, 1 + $I_L30621_158) )
30623.                   flux_total(1 + $I_L30622_144, 3 + 2 * $I_L30621_158) = $flux_total_WR0_R15
30625.                   flux_total(1 + $I_L30622_144, 4 + 2 * $I_L30621_158) = s_down(1 + $I_L30622_144, 1 + $I_L30621_158) + flux_total(1 + $I_L30622_144, 2 + 2 * $I_L30621_158) * t(1 + $I_L30622_144, 1 + $I_L30621_158) + $flux_total_WR0_R15 * r(1 + $I_L30622_144, 1 + $I_L30621_158)
30627.                   $I_L30622_144 = 1 + $I_L30622_144
30622.                   if ( $I_L30622_144 >= n_profile ) exit
30622.                enddo
30622.             endif
30622.          endif
30611.       else if ( n_profile > 0 ) then
30612.          $I_L30612_142 = 0
30612. !dir$ ivdep
30612.          do
30613.             flux_total(1 + $I_L30612_142, 1) = g1(1 + $I_L30612_142, 1) + flux_inc_down(1 + $I_L30612_142) * ( v31(1 + $I_L30612_142, 0) * alpha33(1 + $I_L30612_142, 1) + alpha11(1 + $I_L30612_142, 1) * v11(1 + $I_L30612_142, 0) + v21(1 + $I_L30612_142, 0) * alpha22(1 + $I_L30612_142, 1) )
30616.             $I_L30612_142 = 1 + $I_L30612_142
30612.             if ( $I_L30612_142 >= n_profile ) exit
30612.          enddo
30612.       endif
30634.       if ( n_cloud_top <= n_layer ) then
30638.          if ( n_profile > 0 ) then
30638.             $I_L30638_146 = 0
30638. !dir$ ivdep
30638.             do
30639.                $flux_down_1_WR0_R16 = v11(1 + $I_L30638_146, -1 + n_cloud_top) * flux_total(1 + $I_L30638_146, 2 * n_cloud_top)
30640.                $flux_down_2_WR0_R17 = flux_total(1 + $I_L30638_146, 2 * n_cloud_top) * v21(1 + $I_L30638_146, -1 + n_cloud_top)
30641.                $flux_down_3_WR0_R18 = flux_total(1 + $I_L30638_146, 2 * n_cloud_top) * v31(1 + $I_L30638_146, -1 + n_cloud_top)
30643.                $flux_up_1_WR0_R19 = beta11_inv(1 + $I_L30638_146, n_cloud_top) * ( h1(1 + $I_L30638_146, n_cloud_top) + $flux_down_1_WR0_R16 * gamma11(1 + $I_L30638_146, n_cloud_top) )
30643.                flux_up_1(1 + $I_L30638_146, n_cloud_top) = $flux_up_1_WR0_R19
30645.                $flux_up_2_WR0_R20 = beta22_inv(1 + $I_L30638_146, n_cloud_top) * ( h2(1 + $I_L30638_146, n_cloud_top) + $flux_down_2_WR0_R17 * gamma22(1 + $I_L30638_146, n_cloud_top) )
30645.                flux_up_2(1 + $I_L30638_146, n_cloud_top) = $flux_up_2_WR0_R20
30647.                $flux_up_3_WR0_R21 = beta33_inv(1 + $I_L30638_146, n_cloud_top) * ( h3(1 + $I_L30638_146, n_cloud_top) + $flux_down_3_WR0_R18 * gamma33(1 + $I_L30638_146, n_cloud_top) )
30647.                flux_up_3(1 + $I_L30638_146, n_cloud_top) = $flux_up_3_WR0_R21
30650.                $flux_down_1_WR0_R16 = s_down(1 + $I_L30638_146, n_cloud_top) + $flux_down_1_WR0_R16 * t(1 + $I_L30638_146, n_cloud_top) + $flux_up_1_WR0_R19 * r(1 + $I_L30638_146, n_cloud_top)
30650.                flux_down_1(1 + $I_L30638_146, n_cloud_top) = $flux_down_1_WR0_R16
30652.                $flux_down_2_WR0_R17 = s_down_strat(1 + $I_L30638_146, n_cloud_top) + $flux_down_2_WR0_R17 * t_strat(1 + $I_L30638_146, n_cloud_top) + $flux_up_2_WR0_R20 * r_strat(1 + $I_L30638_146, n_cloud_top)
30652.                flux_down_2(1 + $I_L30638_146, n_cloud_top) = $flux_down_2_WR0_R17
30654.                $flux_down_3_WR0_R18 = s_down_conv(1 + $I_L30638_146, n_cloud_top) + $flux_down_3_WR0_R18 * t_conv(1 + $I_L30638_146, n_cloud_top) + $flux_up_3_WR0_R21 * r_conv(1 + $I_L30638_146, n_cloud_top)
30654.                flux_down_3(1 + $I_L30638_146, n_cloud_top) = $flux_down_3_WR0_R18
30656.                $I_L30638_146 = 1 + $I_L30638_146
30638.                if ( $I_L30638_146 >= n_profile ) exit
30638.             enddo
30638.          endif
30638.       endif
30661.       if ( n_layer + -n_cloud_top > 0 ) then
30662.          if ( n_profile > 0 ) then
30661.             $I_L30661_160 = 0
30661. !dir$ blocking_size( 1, 1 )
30661.             do
30662.                $I_L30662_148 = 0
30662. !dir$ ivdep
30662. !dir$ blocking_size( 256, 256 )
30662.                do
30663.                   $flux_down_1_WR0_R24 = flux_down_1(1 + $I_L30662_148, n_cloud_top + $I_L30661_160) * v11(1 + $I_L30662_148, n_cloud_top + $I_L30661_160) + flux_down_2(1 + $I_L30662_148, n_cloud_top + $I_L30661_160) * v12(1 + $I_L30662_148, n_cloud_top + $I_L30661_160) + flux_down_3(1 + $I_L30662_148, n_cloud_top + $I_L30661_160) * v13(1 + $I_L30662_148, n_cloud_top + $I_L30661_160)
30663.                   flux_down_1(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) = $flux_down_1_WR0_R24
30666.                   $flux_down_2_WR0_R23 = flux_down_1(1 + $I_L30662_148, n_cloud_top + $I_L30661_160) * v21(1 + $I_L30662_148, n_cloud_top + $I_L30661_160) + flux_down_2(1 + $I_L30662_148, n_cloud_top + $I_L30661_160) * v22(1 + $I_L30662_148, n_cloud_top + $I_L30661_160) + flux_down_3(1 + $I_L30662_148, n_cloud_top + $I_L30661_160) * v23(1 + $I_L30662_148, n_cloud_top + $I_L30661_160)
30666.                   flux_down_2(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) = $flux_down_2_WR0_R23
30669.                   $flux_down_3_WR0_R22 = flux_down_1(1 + $I_L30662_148, n_cloud_top + $I_L30661_160) * v31(1 + $I_L30662_148, n_cloud_top + $I_L30661_160) + flux_down_2(1 + $I_L30662_148, n_cloud_top + $I_L30661_160) * v32(1 + $I_L30662_148, n_cloud_top + $I_L30661_160) + flux_down_3(1 + $I_L30662_148, n_cloud_top + $I_L30661_160) * v33(1 + $I_L30662_148, n_cloud_top + $I_L30661_160)
30669.                   flux_down_3(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) = $flux_down_3_WR0_R22
30673.                   $flux_up_1_WR0_R25 = beta11_inv(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) * ( h1(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) + $flux_down_1_WR0_R24 * gamma11(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) )
30673.                   flux_up_1(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) = $flux_up_1_WR0_R25
30675.                   $flux_up_2_WR0_R26 = beta22_inv(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) * ( h2(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) + $flux_down_2_WR0_R23 * gamma22(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) )
30675.                   flux_up_2(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) = $flux_up_2_WR0_R26
30677.                   $flux_up_3_WR0_R27 = beta33_inv(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) * ( h3(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) + $flux_down_3_WR0_R22 * gamma33(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) )
30677.                   flux_up_3(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) = $flux_up_3_WR0_R27
30680.                   $flux_down_1_WR0_R24 = s_down(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) + $flux_down_1_WR0_R24 * t(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) + $flux_up_1_WR0_R25 * r(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160)
30680.                   flux_down_1(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) = $flux_down_1_WR0_R24
30682.                   $flux_down_2_WR0_R23 = s_down_strat(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) + $flux_down_2_WR0_R23 * t_strat(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) + $flux_up_2_WR0_R26 * r_strat(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160)
30682.                   flux_down_2(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) = $flux_down_2_WR0_R23
30684.                   $flux_down_3_WR0_R22 = s_down_conv(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) + $flux_down_3_WR0_R22 * t_conv(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) + $flux_up_3_WR0_R27 * r_conv(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160)
30684.                   flux_down_3(1 + $I_L30662_148, 1 + n_cloud_top + $I_L30661_160) = $flux_down_3_WR0_R22
30686.                   $I_L30662_148 = 1 + $I_L30662_148
30662.                   if ( $I_L30662_148 >= n_profile ) exit
30662.                enddo
30687.                $I_L30661_160 = 1 + $I_L30661_160
30686.                if ( $I_L30661_160 >= ( n_layer + -n_cloud_top ) ) exit
30686.             enddo
30686.          endif
30686.       endif
30691.       if ( n_layer + -n_cloud_top >= 0 ) then
30692.          if ( n_profile > 0 ) then
30691.             $I_L30691_162 = 0
30691.             do
30692.                $I_L30692_150 = 0
30692. !dir$ ivdep
30692.                do
30693.                   flux_total(1 + $I_L30692_150, 1 + 2 * n_cloud_top + 2 * $I_L30691_162) = flux_up_1(1 + $I_L30692_150, n_cloud_top + $I_L30691_162) + flux_up_2(1 + $I_L30692_150, n_cloud_top + $I_L30691_162) + flux_up_3(1 + $I_L30692_150, n_cloud_top + $I_L30691_162)
30695.                   flux_total(1 + $I_L30692_150, 2 + 2 * n_cloud_top + 2 * $I_L30691_162) = flux_down_1(1 + $I_L30692_150, n_cloud_top + $I_L30691_162) + flux_down_2(1 + $I_L30692_150, n_cloud_top + $I_L30691_162) + flux_down_3(1 + $I_L30692_150, n_cloud_top + $I_L30691_162)
30697.                   $I_L30692_150 = 1 + $I_L30692_150
30692.                   if ( $I_L30692_150 >= n_profile ) exit
30692.                enddo
30698.                $I_L30691_162 = 1 + $I_L30691_162
30697.                if ( $I_L30691_162 >= 1 + n_layer + -n_cloud_top ) exit
30697.             enddo
30697.          endif
30697.       endif
30320.       _free( t$3900 )
30703.       return
30703.       end
30703.       
30726.       
30726.       subroutine sph_matrix_solver( n_matrix, n_step, n_block, a, b, x, nd_matrix, nd_equation, nd_diagonal )
30726.       t$926 = nd_matrix
30726.       t$927 = nd_equation
30726.       t$928 = nd_diagonal
30759.       t$3966 = _zla( 0, nd_matrix )
30726.       t$3967 = _zla( 0, nd_matrix )
30759.       t$3968 = _zla( 0, nd_equation )
30726.       t$3969 = _zla( 0, nd_matrix ) * _zla( 0, nd_equation )
30759.       t$3970 = _zla( 0, nd_diagonal )
30726.       t$3971 = _zla( 0, nd_matrix ) * _zla( 0, nd_equation ) * _zla( 0, nd_diagonal )
30726.       t$3972 = _zla( 0, nd_matrix ) * _zla( 0, nd_equation )
30787.       t$3975 = 4 * _zla( 0, nd_matrix )
30789.       t$3977 = 8 * _zla( 0, nd_matrix )
30801.       t$3978 = 8 * ( 7 + 8 * _zla( 0, nd_matrix ) ) / 8
30801.       t$3980 = t$3978 + 8 * _zla( 0, nd_matrix )
30803.       t$3981 = 8 * ( 7 + t$3978 + 8 * _zla( 0, nd_matrix ) ) / 8
30803.       t$3983 = t$3981 + 8 * _zla( 0, nd_matrix )
30726.       t$3973 = int( _alloc( t$3981 + 8 * _zla( 0, nd_matrix ) ), 8 )
30787.       t$3974 = t$3973
30789.       t$3976 = t$3973 + 4 * _zla( 0, nd_matrix )
30801.       t$3979 = t$3978 + t$3973
30803.       t$3982 = t$3981 + t$3973
30814.       if ( 0 < n_step ) then
30821.          if ( n_block > 0 ) then
30814.             $I_i_step_206 = 0
30814.             do
30819.                $I_L30819_202 = 0
30819.                do
30821.                   $I_L30821_198 = 0
30821.                   do
30834.                      if ( n_matrix > 0 ) then
30834.                         $I_L30834_156 = 0
30834. !dir$ ivdep
30834.                         do
30835.                            pivot(1 + $I_L30834_156) = abs( a(1 + $I_L30834_156, 1 + $I_L30821_198 + n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206, 1 + $I_L30821_198 + -( n_block * $I_L30819_202 ) + 2 * n_block) )
30836.                            i_pivot(1 + $I_L30834_156) = ( 1 + $I_L30821_198 + n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206 )
30837.                            offset_pivot(1 + $I_L30834_156) = 0
30838.                            $I_L30834_156 = 1 + $I_L30834_156
30834.                            if ( $I_L30834_156 >= n_matrix ) exit
30834.                         enddo
30834.                      endif
30842.                      if ( ( -1 + min( ( n_block + 2 * n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206 ), 2 * n_step * n_block ) + -$I_L30821_198 + -( n_block * $I_L30819_202 ) + -2 * n_block * $I_i_step_206 ) > 0 ) then
30843.                         if ( n_matrix > 0 ) then
30842.                            $SI_L30842_180_G1 = 0
30842.                            do
30843.                               $SI_L30843_158_G4 = 0
30843.                               do
30842.                                  $I_L30842_223 = 0
30842. !dir$ shortloop16
30842. !dir$ blocking_size( 4, 4 )
30842.                                  do
30843.                                     $I_L30843_208 = 0
30843. !dir$ ivdep
30843. !dir$ blocking_size( 256, 256 )
30843.                                     do
30844.                                        $aabs_S6 = abs( a(1 + $I_L30843_208 + 256 * $SI_L30843_158_G4, 2 + $I_L30821_198 + $I_L30842_223 + n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206 + 4 * $SI_L30842_180_G1, 1 + $I_L30821_198 + -( n_block * $I_L30819_202 ) + 2 * n_block) )
30845.                                        if ( $aabs_S6 > pivot(1 + $I_L30843_208 + 256 * $SI_L30843_158_G4) ) then
30846.                                           pivot(1 + $I_L30843_208 + 256 * $SI_L30843_158_G4) = $aabs_S6
30847.                                           i_pivot(1 + $I_L30843_208 + 256 * $SI_L30843_158_G4) = ( 2 + $I_L30821_198 + $I_L30842_223 + n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206 + 4 * $SI_L30842_180_G1 )
30847.                                        endif
30843.                                        $I_L30843_208 = 1 + $I_L30843_208
30848.                                        if ( $I_L30843_208 >= min( n_matrix, 256 + 256 * $SI_L30843_158_G4 ) + -256 * $SI_L30843_158_G4 ) exit
30848.                                     enddo
30842.                                     $I_L30842_223 = 1 + $I_L30842_223
30842.                                     if ( $I_L30842_223 >= min( -1 + min( ( n_block + 2 * n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206 ), 2 * n_step * n_block ) + -$I_L30821_198 + -( n_block * $I_L30819_202 ) + -2 * n_block * $I_i_step_206, 4 + 4 * $SI_L30842_180_G1 ) + -4 * $SI_L30842_180_G1 ) exit
30842.                                  enddo
30843.                                  $SI_L30843_158_G4 = 1 + $SI_L30843_158_G4
30849.                                  if ( $SI_L30843_158_G4 >= _rsh( 255 + n_matrix, 8 ) ) exit
30849.                               enddo
30842.                               $SI_L30842_180_G1 = 1 + $SI_L30842_180_G1
30842.                               if ( $SI_L30842_180_G1 >= _rsh( 2 + min( ( n_block + 2 * n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206 ), 2 * n_step * n_block ) + -$I_L30821_198 + -( n_block * $I_L30819_202 ) + -2 * n_block * $I_i_step_206, 2 ) ) exit
30842.                            enddo
30842.                         endif
30842.                      endif
30854.                      if ( $I_L30819_202 == 0 ) then
30855.                         if ( ( -n_block + -2 * n_block * $I_i_step_206 + n_block * min( ( 3 + 2 * $I_i_step_206 ), 2 * n_step ) ) > 0 ) then
30857.                            if ( n_matrix > 0 ) then
30855.                               $SI_L30855_182_G7 = 0
30855.                               do
30857.                                  $SI_L30857_160_G10 = 0
30857.                                  do
30855.                                     $I_L30855_226 = 0
30855. !dir$ shortloop16
30855. !dir$ blocking_size( 4, 4 )
30855.                                     do
30857.                                        $I_L30857_211 = 0
30857. !dir$ ivdep
30857. !dir$ blocking_size( 256, 256 )
30857.                                        do
30858.                                           $aabs_S9 = abs( a(1 + $I_L30857_211 + 256 * $SI_L30857_160_G10, 1 + n_block + $I_L30855_226 + 2 * n_block * $I_i_step_206 + 4 * $SI_L30855_182_G7, 1 + $I_L30821_198) )
30859.                                           if ( $aabs_S9 > pivot(1 + $I_L30857_211 + 256 * $SI_L30857_160_G10) ) then
30860.                                              pivot(1 + $I_L30857_211 + 256 * $SI_L30857_160_G10) = $aabs_S9
30861.                                              i_pivot(1 + $I_L30857_211 + 256 * $SI_L30857_160_G10) = ( 1 + n_block + $I_L30855_226 + 2 * n_block * $I_i_step_206 + 4 * $SI_L30855_182_G7 )
30862.                                              offset_pivot(1 + $I_L30857_211 + 256 * $SI_L30857_160_G10) = 2 * n_block
30862.                                           endif
30857.                                           $I_L30857_211 = 1 + $I_L30857_211
30863.                                           if ( $I_L30857_211 >= min( n_matrix, 256 + 256 * $SI_L30857_160_G10 ) + -256 * $SI_L30857_160_G10 ) exit
30863.                                        enddo
30855.                                        $I_L30855_226 = 1 + $I_L30855_226
30855.                                        if ( $I_L30855_226 >= min( -n_block + -2 * n_block * $I_i_step_206 + n_block * min( ( 3 + 2 * $I_i_step_206 ), 2 * n_step ), 4 + 4 * $SI_L30855_182_G7 ) + -4 * $SI_L30855_182_G7 ) exit
30855.                                     enddo
30857.                                     $SI_L30857_160_G10 = 1 + $SI_L30857_160_G10
30864.                                     if ( $SI_L30857_160_G10 >= _rsh( 255 + n_matrix, 8 ) ) exit
30864.                                  enddo
30855.                                  $SI_L30855_182_G7 = 1 + $SI_L30855_182_G7
30855.                                  if ( $SI_L30855_182_G7 >= _rsh( 3 + -n_block + -2 * n_block * $I_i_step_206 + n_block * min( ( 3 + 2 * $I_i_step_206 ), 2 * n_step ), 2 ) ) exit
30855.                               enddo
30855.                            endif
30855.                         endif
30855.                      endif
30869.                      if ( ( -1 + -$I_L30821_198 + cvmg( ( 4 * n_block + -2 * n_block * $I_L30819_202 ), ( 6 * n_block + -2 * n_block * $I_L30819_202 ), ( 1 + $I_i_step_206 ) >= n_step ) + -2 * n_block + n_block * $I_L30819_202 ) >= 0 ) then
30870.                         if ( n_matrix > 0 ) then
30869.                            $I_L30869_184 = 0
30869.                            do
30870.                               $I_L30870_162 = 0
30870. !dir$ ivdep
30870. !dir$ loop_info (automatic) cache_nt( a )
30870.                               do
30871.                                  $tmp_S12 = a(1 + $I_L30870_162, 1 + $I_L30821_198 + n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206, 1 + $I_L30869_184 + $I_L30821_198 + -( n_block * $I_L30819_202 ) + 2 * n_block)
30872.                                  a(1 + $I_L30870_162, 1 + $I_L30821_198 + n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206, 1 + $I_L30869_184 + $I_L30821_198 + -( n_block * $I_L30819_202 ) + 2 * n_block) = a(1 + $I_L30870_162, i_pivot(1 + $I_L30870_162), 1 + $I_L30869_184 + $I_L30821_198 + -offset_pivot(1 + $I_L30870_162) + -( n_block * $I_L30819_202 ) + 2 * n_block)
30873.                                  a(1 + $I_L30870_162, i_pivot(1 + $I_L30870_162), 1 + $I_L30869_184 + $I_L30821_198 + -offset_pivot(1 + $I_L30870_162) + -( n_block * $I_L30819_202 ) + 2 * n_block) = $tmp_S12
30874.                                  $I_L30870_162 = 1 + $I_L30870_162
30870.                                  if ( $I_L30870_162 >= n_matrix ) exit
30870.                               enddo
30875.                               $I_L30869_184 = 1 + $I_L30869_184
30874.                               if ( $I_L30869_184 >= -$I_L30821_198 + cvmg( ( 4 * n_block + -2 * n_block * $I_L30819_202 ), ( 6 * n_block + -2 * n_block * $I_L30819_202 ), ( 1 + $I_i_step_206 ) >= n_step ) + -2 * n_block + n_block * $I_L30819_202 ) exit
30874.                            enddo
30874.                         endif
30874.                      endif
30876.                      if ( n_matrix > 0 ) then
30876.                         $I_L30876_164 = 0
30876. !dir$ ivdep
30876. !dir$ loop_info (automatic) cache_nt( b )
30876.                         do
30877.                            $tmp_S14 = b(1 + $I_L30876_164, 1 + $I_L30821_198 + n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206)
30878.                            b(1 + $I_L30876_164, 1 + $I_L30821_198 + n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206) = b(1 + $I_L30876_164, i_pivot(1 + $I_L30876_164))
30879.                            b(1 + $I_L30876_164, i_pivot(1 + $I_L30876_164)) = $tmp_S14
30880.                            $I_L30876_164 = 1 + $I_L30876_164
30876.                            if ( $I_L30876_164 >= n_matrix ) exit
30876.                         enddo
30876.                      endif
30892.                      if ( ( -2 + -$I_L30821_198 + -( n_block * $I_L30819_202 ) + cvmg( ( n_block + n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206 ), ( n_block + 2 * n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206 ), ( 1 + $I_i_step_206 ) >= n_step ) + -2 * n_block * $I_i_step_206 ) >= 0 ) then
30892.                         $I_L30892_192 = 0
30892.                         do
30893.                            if ( n_matrix > 0 ) then
30893.                               $I_L30893_166 = 0
30893. !dir$ ivdep
30893.                               do
30894.                                  $rho_WR0_R0 = ( a(1 + $I_L30893_166, 2 + $I_L30892_192 + $I_L30821_198 + n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206, 1 + $I_L30821_198 + -( n_block * $I_L30819_202 ) + 2 * n_block) * 1.0/a(1 + $I_L30893_166, 1 + $I_L30821_198 + n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206, 1 + $I_L30821_198 + -( n_block * $I_L30819_202 ) + 2 * n_block) )
30894.                                  rho(1 + $I_L30893_166) = $rho_WR0_R0
30895.                                  b(1 + $I_L30893_166, 2 + $I_L30892_192 + $I_L30821_198 + n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206) = b(1 + $I_L30893_166, 2 + $I_L30892_192 + $I_L30821_198 + n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206) + -( $rho_WR0_R0 * b(1 + $I_L30893_166, 1 + $I_L30821_198 + n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206) )
30896.                                  $I_L30893_166 = 1 + $I_L30893_166
30893.                                  if ( $I_L30893_166 >= n_matrix ) exit
30893.                               enddo
30893.                            endif
30897.                            if ( ( -1 + -$I_L30821_198 + cvmg( ( 4 * n_block + -2 * n_block * $I_L30819_202 ), ( 6 * n_block + -2 * n_block * $I_L30819_202 ), ( 1 + $I_i_step_206 ) >= n_step ) + -2 * n_block + n_block * $I_L30819_202 ) > 0 ) then
30898.                               if ( n_matrix > 0 ) then
30897.                                  $SI_L30897_186_G13 = 0
30897.                                  do
30898.                                     $SI_L30898_168_G16 = 0
30898.                                     do
30897.                                        $I_L30897_229 = 0
30897. !dir$ shortloop16
30897. !dir$ blocking_size( 2, 2 )
30897.                                        do
30898.                                           $I_L30898_214 = 0
30898. !dir$ ivdep
30898. !dir$ blocking_size( 256, 256 )
30898.                                           do
30899.                                              a(1 + $I_L30898_214 + 256 * $SI_L30898_168_G16, 2 + $I_L30892_192 + $I_L30821_198 + n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206, 2 + $I_L30821_198 + $I_L30897_229 + -( n_block * $I_L30819_202 ) + 2 * n_block + 2 * $SI_L30897_186_G13) = a(1 + $I_L30898_214 + 256 * $SI_L30898_168_G16, 2 + $I_L30892_192 + $I_L30821_198 + n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206, 2 + $I_L30821_198 + $I_L30897_229 + -( n_block * $I_L30819_202 ) + 2 * n_block + 2 * $SI_L30897_186_G13) + -( rho(1 + $I_L30898_214 + 256 * $SI_L30898_168_G16) * a(1 + $I_L30898_214 + 256 * $SI_L30898_168_G16, 1 + $I_L30821_198 + n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206, 2 + $I_L30821_198 + $I_L30897_229 + -( n_block * $I_L30819_202 ) + 2 * n_block + 2 * $SI_L30897_186_G13) )
30898.                                              $I_L30898_214 = 1 + $I_L30898_214
30898.                                              if ( $I_L30898_214 >= min( n_matrix, 256 + 256 * $SI_L30898_168_G16 ) + -256 * $SI_L30898_168_G16 ) exit
30898.                                           enddo
30897.                                           $I_L30897_229 = 1 + $I_L30897_229
30897.                                           if ( $I_L30897_229 >= min( -1 + -$I_L30821_198 + cvmg( ( 4 * n_block + -2 * n_block * $I_L30819_202 ), ( 6 * n_block + -2 * n_block * $I_L30819_202 ), ( 1 + $I_i_step_206 ) >= n_step ) + -2 * n_block + n_block * $I_L30819_202, 2 + 2 * $SI_L30897_186_G13 ) + -2 * $SI_L30897_186_G13 ) exit
30897.                                        enddo
30898.                                        $SI_L30898_168_G16 = 1 + $SI_L30898_168_G16
30900.                                        if ( $SI_L30898_168_G16 >= _rsh( 255 + n_matrix, 8 ) ) exit
30900.                                     enddo
30897.                                     $SI_L30897_186_G13 = 1 + $SI_L30897_186_G13
30897.                                     if ( $SI_L30897_186_G13 >= _rsh( -$I_L30821_198 + cvmg( ( 4 * n_block + -2 * n_block * $I_L30819_202 ), ( 6 * n_block + -2 * n_block * $I_L30819_202 ), ( 1 + $I_i_step_206 ) >= n_step ) + -2 * n_block + n_block * $I_L30819_202, 1 ) ) exit
30897.                                  enddo
30897.                               endif
30897.                            endif
30902.                            $I_L30892_192 = 1 + $I_L30892_192
30901.                            if ( $I_L30892_192 >= -1 + -$I_L30821_198 + -( n_block * $I_L30819_202 ) + cvmg( ( n_block + n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206 ), ( n_block + 2 * n_block * $I_L30819_202 + 2 * n_block * $I_i_step_206 ), ( 1 + $I_i_step_206 ) >= n_step ) + -2 * n_block * $I_i_step_206 ) exit
30901.                         enddo
30901.                      endif
30905.                      if ( $I_L30819_202 == 0 ) then
30912.                         if ( ( -n_block + cvmg( ( 2 * n_block + 2 * n_block * $I_i_step_206 ), ( 3 * n_block + 2 * n_block * $I_i_step_206 ), ( 1 + $I_i_step_206 ) >= n_step ) + -2 * n_block * $I_i_step_206 ) > 0 ) then
30912.                            $I_L30912_194 = 0
30912.                            do
30913.                               if ( n_matrix > 0 ) then
30913.                                  $I_L30913_170 = 0
30913. !dir$ ivdep
30913.                                  do
30914.                                     $rho_WR0_R1 = ( a(1 + $I_L30913_170, 1 + n_block + $I_L30912_194 + 2 * n_block * $I_i_step_206, 1 + $I_L30821_198) * 1.0/a(1 + $I_L30913_170, 1 + $I_L30821_198 + 2 * n_block * $I_i_step_206, 1 + $I_L30821_198 + 2 * n_block) )
30914.                                     rho(1 + $I_L30913_170) = $rho_WR0_R1
30915.                                     b(1 + $I_L30913_170, 1 + n_block + $I_L30912_194 + 2 * n_block * $I_i_step_206) = b(1 + $I_L30913_170, 1 + n_block + $I_L30912_194 + 2 * n_block * $I_i_step_206) + -( $rho_WR0_R1 * b(1 + $I_L30913_170, 1 + $I_L30821_198 + 2 * n_block * $I_i_step_206) )
30916.                                     $I_L30913_170 = 1 + $I_L30913_170
30913.                                     if ( $I_L30913_170 >= n_matrix ) exit
30913.                                  enddo
30913.                               endif
30917.                               if ( ( -1 + -$I_L30821_198 + cvmg( 4 * n_block, 6 * n_block, ( 1 + $I_i_step_206 ) >= n_step ) + -2 * n_block ) > 0 ) then
30918.                                  if ( n_matrix > 0 ) then
30917.                                     $SI_L30917_188_G19 = 0
30917.                                     do
30918.                                        $SI_L30918_172_G22 = 0
30918.                                        do
30917.                                           $I_L30917_232 = 0
30917. !dir$ shortloop16
30917. !dir$ blocking_size( 2, 2 )
30917.                                           do
30918.                                              $I_L30918_217 = 0
30918. !dir$ ivdep
30918. !dir$ blocking_size( 256, 256 )
30918.                                              do
30919.                                                 a(1 + $I_L30918_217 + 256 * $SI_L30918_172_G22, 1 + n_block + $I_L30912_194 + 2 * n_block * $I_i_step_206, 2 + $I_L30821_198 + $I_L30917_232 + 2 * $SI_L30917_188_G19) = a(1 + $I_L30918_217 + 256 * $SI_L30918_172_G22, 1 + n_block + $I_L30912_194 + 2 * n_block * $I_i_step_206, 2 + $I_L30821_198 + $I_L30917_232 + 2 * $SI_L30917_188_G19) + -( rho(1 + $I_L30918_217 + 256 * $SI_L30918_172_G22) * a(1 + $I_L30918_217 + 256 * $SI_L30918_172_G22, 1 + $I_L30821_198 + 2 * n_block * $I_i_step_206, 2 + $I_L30821_198 + $I_L30917_232 + 2 * n_block + 2 * $SI_L30917_188_G19) )
30918.                                                 $I_L30918_217 = 1 + $I_L30918_217
30918.                                                 if ( $I_L30918_217 >= min( n_matrix, 256 + 256 * $SI_L30918_172_G22 ) + -256 * $SI_L30918_172_G22 ) exit
30918.                                              enddo
30917.                                              $I_L30917_232 = 1 + $I_L30917_232
30917.                                              if ( $I_L30917_232 >= min( -1 + -$I_L30821_198 + cvmg( 4 * n_block, 6 * n_block, ( 1 + $I_i_step_206 ) >= n_step ) + -2 * n_block, 2 + 2 * $SI_L30917_188_G19 ) + -2 * $SI_L30917_188_G19 ) exit
30917.                                           enddo
30918.                                           $SI_L30918_172_G22 = 1 + $SI_L30918_172_G22
30921.                                           if ( $SI_L30918_172_G22 >= _rsh( 255 + n_matrix, 8 ) ) exit
30921.                                        enddo
30917.                                        $SI_L30917_188_G19 = 1 + $SI_L30917_188_G19
30917.                                        if ( $SI_L30917_188_G19 >= _rsh( -$I_L30821_198 + cvmg( 4 * n_block, 6 * n_block, ( 1 + $I_i_step_206 ) >= n_step ) + -2 * n_block, 1 ) ) exit
30917.                                     enddo
30917.                                  endif
30917.                               endif
30923.                               $I_L30912_194 = 1 + $I_L30912_194
30922.                               if ( $I_L30912_194 >= -n_block + cvmg( ( 2 * n_block + 2 * n_block * $I_i_step_206 ), ( 3 * n_block + 2 * n_block * $I_i_step_206 ), ( 1 + $I_i_step_206 ) >= n_step ) + -2 * n_block * $I_i_step_206 ) exit
30922.                            enddo
30922.                         endif
30922.                      endif
30926.                      $I_L30821_198 = 1 + $I_L30821_198
30924.                      if ( $I_L30821_198 >= n_block ) exit
30924.                   enddo
30927.                   $I_L30819_202 = 1 + $I_L30819_202
30926.                   if ( $I_L30819_202 >= 2 ) exit
30926.                enddo
30931.                $I_i_step_206 = 1 + $I_i_step_206
30927.                if ( $I_i_step_206 >= n_step ) exit
30927.             enddo
30937.             $I_i_step_204 = 0
30937.             do
30940.                $I_L30940_200 = 0
30940.                do
30948.                   $I_L30948_196 = 0
30948.                   do
30953.                      if ( n_matrix > 0 ) then
30953.                         $I_L30953_174 = 0
30953. !dir$ ivdep
30953. !dir$ loop_info (automatic) cache_nt( b )
30953.                         do
30954.                            x(1 + $I_L30953_174, -$I_L30948_196 + -( n_block * $I_L30940_200 ) + 2 * n_step * n_block + -2 * n_block * $I_i_step_204) = b(1 + $I_L30953_174, -$I_L30948_196 + -( n_block * $I_L30940_200 ) + 2 * n_step * n_block + -2 * n_block * $I_i_step_204)
30955.                            $I_L30953_174 = 1 + $I_L30953_174
30953.                            if ( $I_L30953_174 >= n_matrix ) exit
30953.                         enddo
30953.                      endif
30956.                      if ( ( $I_L30948_196 + -( n_block * $I_L30940_200 ) + cvmg( ( 2 * n_block + 2 * n_block * $I_L30940_200 ), ( 4 * n_block + 2 * n_block * $I_L30940_200 ), ( n_step + -$I_i_step_204 ) >= n_step ) + -2 * n_block ) > 0 ) then
30957.                         if ( n_matrix > 0 ) then
30956.                            $SI_L30956_190_G25 = 0
30956.                            do
30957.                               $SI_L30957_176_G28 = 0
30957.                               do
30956.                                  $I_L30956_235 = 0
30956. !dir$ shortloop16
30956. !dir$ blocking_size( 4, 4 )
30956.                                  do
30957.                                     $I_L30957_220 = 0
30957. !dir$ ivdep
30957. !dir$ blocking_size( 256, 256 )
30957.                                     do
30958.                                        x(1 + $I_L30957_220 + 256 * $SI_L30957_176_G28, -$I_L30948_196 + -( n_block * $I_L30940_200 ) + 2 * n_step * n_block + -2 * n_block * $I_i_step_204) = x(1 + $I_L30957_220 + 256 * $SI_L30957_176_G28, -$I_L30948_196 + -( n_block * $I_L30940_200 ) + 2 * n_step * n_block + -2 * n_block * $I_i_step_204) + -( a(1 + $I_L30957_220 + 256 * $SI_L30957_176_G28, -$I_L30948_196 + -( n_block * $I_L30940_200 ) + 2 * n_step * n_block + -2 * n_block * $I_i_step_204, 1 + $I_L30956_235 + -$I_L30948_196 + 2 * n_block + n_block * $I_L30940_200 + 4 * $SI_L30956_190_G25) * x(1 + $I_L30957_220 + 256 * $SI_L30957_176_G28, 1 + $I_L30956_235 + -$I_L30948_196 + -( n_block * $I_L30940_200 ) + 2 * n_step * n_block + -2 * n_block * $I_i_step_204 + 4 * $SI_L30956_190_G25) )
30957.                                        $I_L30957_220 = 1 + $I_L30957_220
30957.                                        if ( $I_L30957_220 >= min( n_matrix, 256 + 256 * $SI_L30957_176_G28 ) + -256 * $SI_L30957_176_G28 ) exit
30957.                                     enddo
30956.                                     $I_L30956_235 = 1 + $I_L30956_235
30956.                                     if ( $I_L30956_235 >= min( $I_L30948_196 + -n_block + -n_block + -( n_block * $I_L30940_200 ) + cvmg( ( 2 * n_block + 2 * n_block * $I_L30940_200 ), ( 4 * n_block + 2 * n_block * $I_L30940_200 ), ( n_step + -$I_i_step_204 ) >= n_step ), 4 + 4 * $SI_L30956_190_G25 ) + -4 * $SI_L30956_190_G25 ) exit
30956.                                  enddo
30957.                                  $SI_L30957_176_G28 = 1 + $SI_L30957_176_G28
30959.                                  if ( $SI_L30957_176_G28 >= _rsh( 255 + n_matrix, 8 ) ) exit
30959.                               enddo
30956.                               $SI_L30956_190_G25 = 1 + $SI_L30956_190_G25
30956.                               if ( $SI_L30956_190_G25 >= _rsh( 3 + $I_L30948_196 + -n_block + -n_block + -( n_block * $I_L30940_200 ) + cvmg( ( 2 * n_block + 2 * n_block * $I_L30940_200 ), ( 4 * n_block + 2 * n_block * $I_L30940_200 ), ( n_step + -$I_i_step_204 ) >= n_step ), 2 ) ) exit
30956.                            enddo
30956.                         endif
30956.                      endif
30961.                      if ( n_matrix > 0 ) then
30961.                         $I_L30961_178 = 0
30961. !dir$ ivdep
30961.                         do
30962.                            x(1 + $I_L30961_178, -$I_L30948_196 + -( n_block * $I_L30940_200 ) + 2 * n_step * n_block + -2 * n_block * $I_i_step_204) = ( x(1 + $I_L30961_178, -$I_L30948_196 + -( n_block * $I_L30940_200 ) + 2 * n_step * n_block + -2 * n_block * $I_i_step_204) * 1.0/a(1 + $I_L30961_178, -$I_L30948_196 + -( n_block * $I_L30940_200 ) + 2 * n_step * n_block + -2 * n_block * $I_i_step_204, -$I_L30948_196 + 2 * n_block + n_block * $I_L30940_200) )
30963.                            $I_L30961_178 = 1 + $I_L30961_178
30961.                            if ( $I_L30961_178 >= n_matrix ) exit
30961.                         enddo
30961.                      endif
30965.                      $I_L30948_196 = 1 + $I_L30948_196
30963.                      if ( $I_L30948_196 >= n_block ) exit
30963.                   enddo
30966.                   $I_L30940_200 = 1 + $I_L30940_200
30965.                   if ( $I_L30940_200 >= 2 ) exit
30965.                enddo
30971.                $I_i_step_204 = 1 + $I_i_step_204
30966.                if ( $I_i_step_204 >= n_step ) exit
30966.             enddo
30966.          endif
30966.       endif
30726.       _free( t$3973 )
30976.       return
30976.       end
30976.       
30995.       
30995.       subroutine sph_solver( ierr, n_profile, n_layer, ms_min, ms_max, i_truncation, ls_local_trunc, cg_coeff, uplm_zero, ia_sph_mm, accuracy_adaptive, euler_factor, i_sph_algorithm, i_sph_mode, isolir, l_scale_solar, adjust_solar_ke, i_direct, mu_0, uplm_sol, diff_planck, flux_inc_down, l_ir_source_quad, diff_planck_2, tau, omega, phase_fnc, phase_fnc_solar, ls_brdf_trunc, n_brdf_basis_fnc, rho_alb, f_brdf, brdf_sol, brdf_hemi, d_planck_flux_surface, n_viewing_level, i_rad_layer, frac_rad_layer, n_direction, direction, flux_direct, flux_total, radiance_mono, photolysis, nd_profile, nd_layer, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_max_order, nd_sph_coeff, nd_brdf_basis_fnc, nd_brdf_trunc, nd_red_eigensystem, nd_sph_equation, nd_sph_diagonal, nd_sph_cf_weight, nd_sph_u_range, nd_viewing_level, nd_direction )
30995.       t$929 = nd_max_order
30995.       t$3984 = 1 + nd_max_order
31109.       t$3985 = _zla( 0, 1 + nd_max_order )
30995.       t$930 = nd_sph_coeff
31118.       t$3986 = _zla( 0, nd_sph_coeff )
30995.       t$931 = nd_profile
30995.       t$932 = nd_layer
31137.       t$3987 = _zla( 0, nd_profile )
30995.       t$3988 = _zla( 0, nd_profile )
31137.       t$3989 = _zla( 0, nd_layer )
30995.       t$3990 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
30995.       t$3991 = 1 + nd_layer
31161.       t$3992 = _zla( 0, 1 + nd_layer )
30995.       t$3993 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
30995.       t$3994 = _zla( 0, nd_sph_coeff ) * _zla( 0, nd_profile )
30995.       t$3995 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
31145.       t$3996 = _zla( 0, nd_max_order )
30995.       t$3997 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_max_order )
30995.       t$933 = nd_radiance_profile
30995.       t$934 = nd_direction
31147.       t$3998 = _zla( 0, nd_radiance_profile )
30995.       t$3999 = _zla( 0, nd_radiance_profile )
30995.       t$4000 = _zla( 0, nd_layer ) * _zla( 0, nd_radiance_profile )
31147.       t$4001 = _zla( 0, nd_direction )
30995.       t$4002 = _zla( 0, nd_layer ) * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
30995.       t$935 = nd_brdf_basis_fnc
31171.       t$4003 = _zla( 0, nd_brdf_basis_fnc )
30995.       t$4004 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
30995.       t$936 = nd_brdf_trunc / 2
30995.       t$937 = nd_brdf_trunc
30995.       t$4005 = _zla( 0, nd_brdf_basis_fnc )
30995.       t$4006 = 1 + t$936
31173.       t$4007 = _zla( 0, 1 + t$936 )
30995.       t$4008 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$936 )
30995.       t$4009 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$936 ) * _zla( 0, 1 + t$936 )
30995.       t$4010 = 1 + nd_brdf_trunc
31173.       t$4011 = _zla( 0, 1 + nd_brdf_trunc )
30995.       t$4012 = _zla( 0, nd_brdf_basis_fnc ) * _zla( 0, 1 + t$936 ) * _zla( 0, 1 + t$936 ) * _zla( 0, 1 + nd_brdf_trunc )
30995.       t$4013 = _zla( 0, nd_profile ) * _zla( 0, nd_brdf_basis_fnc )
30995.       t$4014 = _zla( 0, nd_profile ) * _zla( 0, nd_direction ) * _zla( 0, nd_brdf_basis_fnc )
30995.       t$938 = nd_viewing_level
31189.       t$4015 = _zla( 0, nd_viewing_level )
30995.       t$4016 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
30995.       t$4017 = 2 * _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction )
30995.       t$939 = nd_flux_profile
31199.       t$4018 = _zla( 0, nd_flux_profile )
30995.       t$4019 = _zla( 0, nd_flux_profile )
30995.       t$4020 = _zla( 0, nd_flux_profile ) * _zla( 0, 1 + nd_layer )
30995.       t$940 = ( 2 + 2 * nd_layer )
31201.       t$4021 = _zla( 0, ( 2 + 2 * nd_layer ) )
30995.       t$4022 = _zla( 0, nd_flux_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
30995.       t$4023 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_viewing_level )
30995.       t$4024 = _zla( 0, nd_radiance_profile ) * _zla( 0, nd_direction ) * _zla( 0, nd_viewing_level )
30995.       t$941 = nd_j_profile
31206.       t$4025 = _zla( 0, nd_j_profile )
30995.       t$4026 = _zla( 0, nd_j_profile )
30995.       t$4027 = _zla( 0, nd_viewing_level ) * _zla( 0, nd_j_profile )
30995.       t$947 = nd_sph_equation
30995.       t$948 = nd_sph_diagonal
31242.       t$4028 = _zla( 0, nd_sph_equation )
30995.       t$4029 = _zla( 0, nd_profile ) * _zla( 0, nd_sph_equation )
31242.       t$4030 = _zla( 0, nd_sph_diagonal )
30995.       t$4031 = _zla( 0, nd_profile ) * _zla( 0, nd_sph_equation ) * _zla( 0, nd_sph_diagonal )
31242.       t$4034 = 8 * _zla( 0, nd_profile ) * _zla( 0, nd_sph_equation ) * _zla( 0, nd_sph_diagonal )
30995.       t$4035 = _zla( 0, nd_profile ) * _zla( 0, nd_direction )
31249.       t$4036 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_sph_equation ) * _zla( 0, nd_sph_diagonal ) ) / 8
31249.       t$4038 = t$4036 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_direction )
30995.       t$4039 = _zla( 0, nd_profile ) * _zla( 0, nd_sph_equation )
31245.       t$4040 = 8 * ( 7 + t$4036 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_direction ) ) / 8
31245.       t$4042 = t$4040 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_sph_equation )
30995.       t$943 = ( 1 + nd_brdf_trunc / 2 )
31230.       t$4043 = _zla( 0, t$943 )
30995.       t$4044 = _zla( 0, t$943 )
30995.       t$4045 = _zla( 0, t$943 ) * _zla( 0, nd_max_order )
31230.       t$4046 = 8 * ( 7 + t$4040 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_sph_equation ) ) / 8
31230.       t$4048 = t$4046 + 8 * _zla( 0, t$943 ) * _zla( 0, nd_max_order )
30995.       t$944 = ( 1 + nd_max_order )
30995.       t$4049 = _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level )
31239.       t$4050 = _zla( 0, ( 1 + nd_max_order ) )
30995.       t$4051 = _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level ) * _zla( 0, ( 1 + nd_max_order ) )
31239.       t$4052 = 8 * ( 7 + t$4046 + 8 * _zla( 0, t$943 ) * _zla( 0, nd_max_order ) ) / 8
31239.       t$4054 = t$4052 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level ) * _zla( 0, ( 1 + nd_max_order ) )
30995.       t$942 = nd_max_order / 2
31227.       t$4055 = _zla( 0, t$942 )
30995.       t$4056 = _zla( 0, t$942 )
30995.       t$4057 = _zla( 0, t$942 ) * _zla( 0, t$942 )
31227.       t$4058 = 8 * ( 7 + t$4052 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level ) * _zla( 0, ( 1 + nd_max_order ) ) ) / 8
31227.       t$4060 = t$4058 + 8 * _zla( 0, t$942 ) * _zla( 0, t$942 )
31247.       t$4061 = 8 * ( 7 + t$4058 + 8 * _zla( 0, t$942 ) * _zla( 0, t$942 ) ) / 8
31247.       t$4063 = t$4061 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_sph_equation )
30995.       t$4064 = _zla( 0, nd_profile ) * _zla( 0, ( 1 + nd_max_order ) )
30995.       t$4065 = _zla( 0, nd_profile ) * _zla( 0, nd_direction ) * _zla( 0, ( 1 + nd_max_order ) )
31233.       t$4066 = 8 * ( 7 + t$4061 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_sph_equation ) ) / 8
31233.       t$4068 = t$4066 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_direction ) * _zla( 0, ( 1 + nd_max_order ) )
30995.       t$945 = nd_sph_cf_weight
30995.       t$946 = nd_sph_u_range
31235.       t$4069 = _zla( 0, nd_sph_cf_weight )
30995.       t$4070 = _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level ) * _zla( 0, nd_sph_cf_weight )
31235.       t$4071 = _zla( 0, nd_sph_u_range )
30995.       t$4072 = _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level ) * _zla( 0, nd_sph_cf_weight ) * _zla( 0, nd_sph_u_range )
31235.       t$4073 = 8 * ( 7 + t$4066 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_direction ) * _zla( 0, ( 1 + nd_max_order ) ) ) / 8
31235.       t$4075 = t$4073 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level ) * _zla( 0, nd_sph_cf_weight ) * _zla( 0, nd_sph_u_range )
30995.       t$4032 = int( _alloc( t$4073 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_viewing_level ) * _zla( 0, nd_sph_cf_weight ) * _zla( 0, nd_sph_u_range ) ), 8 )
31242.       t$4033 = t$4032
31249.       t$4037 = t$4036 + t$4032
31245.       t$4041 = t$4040 + t$4032
31230.       t$4047 = t$4046 + t$4032
31239.       t$4053 = t$4052 + t$4032
31227.       t$4059 = t$4058 + t$4032
31247.       t$4062 = t$4061 + t$4032
31233.       t$4067 = t$4066 + t$4032
31235.       t$4074 = t$4073 + t$4032
31268.       if ( isolir == 1 ) then
31270.          if ( l_scale_solar /= .false. ) then
31271.             if ( n_layer > 0 ) then
31272.                if ( n_profile > 0 ) then
31271.                   $I_L31271_294 = 0
31271.                   do
31272.                      $I_L31272_280 = 0
31272.                      do
31271.                         $I_L31271_308 = 0
31271. !dir$ shortloop16
31271. !dir$ blocking_size( 2, 2 )
31271.                         do
31272.                            $I_L31272_211 = 0
31272. !dir$ ivdep
31272. !dir$ blocking_size( 256, 256 )
31272.                            do
31273.                               i_direct(1 + $I_L31272_211 + 256 * $I_L31272_280, 1 + $I_L31271_308 + 2 * $I_L31271_294) = i_direct(1 + $I_L31272_211 + 256 * $I_L31272_280, $I_L31271_308 + 2 * $I_L31271_294) * adjust_solar_ke(1 + $I_L31272_211 + 256 * $I_L31272_280, 1 + $I_L31271_308 + 2 * $I_L31271_294) * _expn( -( tau(1 + $I_L31272_211 + 256 * $I_L31272_280, 1 + $I_L31271_308 + 2 * $I_L31271_294) * 1.0/mu_0(1 + $I_L31272_211 + 256 * $I_L31272_280) ) )
31272.                               $I_L31272_211 = 1 + $I_L31272_211
31272.                               if ( $I_L31272_211 >= min( n_profile, 256 + 256 * $I_L31272_280 ) + -256 * $I_L31272_280 ) exit
31272.                            enddo
31271.                            $I_L31271_308 = 1 + $I_L31271_308
31271.                            if ( $I_L31271_308 >= min( n_layer, 2 + 2 * $I_L31271_294 ) + -2 * $I_L31271_294 ) exit
31271.                         enddo
31272.                         $I_L31272_280 = 1 + $I_L31272_280
31275.                         if ( $I_L31272_280 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
31275.                      enddo
31271.                      $I_L31271_294 = 1 + $I_L31271_294
31271.                      if ( $I_L31271_294 >= 1 + max( 0, -1 + _rsh( 1 + n_layer, 1 ) ) ) exit
31271.                   enddo
31271.                endif
31271.             endif
31277.          else if ( n_layer > 0 ) then
31279.             if ( n_profile > 0 ) then
31278.                $I_L31278_296 = 0
31278.                do
31279.                   $I_L31279_278 = 0
31279.                   do
31278.                      $I_L31278_310 = 0
31278. !dir$ shortloop16
31278. !dir$ blocking_size( 2, 2 )
31278.                      do
31279.                         $I_L31279_208 = 0
31279. !dir$ ivdep
31279. !dir$ blocking_size( 256, 256 )
31279.                         do
31280.                            i_direct(1 + $I_L31279_208 + 256 * $I_L31279_278, 1 + $I_L31278_310 + 2 * $I_L31278_296) = i_direct(1 + $I_L31279_208 + 256 * $I_L31279_278, $I_L31278_310 + 2 * $I_L31278_296) * _expn( -( tau(1 + $I_L31279_208 + 256 * $I_L31279_278, 1 + $I_L31278_310 + 2 * $I_L31278_296) * 1.0/mu_0(1 + $I_L31279_208 + 256 * $I_L31279_278) ) )
31279.                            $I_L31279_208 = 1 + $I_L31279_208
31279.                            if ( $I_L31279_208 >= min( n_profile, 256 + 256 * $I_L31279_278 ) + -256 * $I_L31279_278 ) exit
31279.                         enddo
31278.                         $I_L31278_310 = 1 + $I_L31278_310
31278.                         if ( $I_L31278_310 >= min( n_layer, 2 + 2 * $I_L31278_296 ) + -2 * $I_L31278_296 ) exit
31278.                      enddo
31279.                      $I_L31279_278 = 1 + $I_L31279_278
31281.                      if ( $I_L31279_278 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
31281.                   enddo
31278.                   $I_L31278_296 = 1 + $I_L31278_296
31278.                   if ( $I_L31278_296 >= 1 + max( 0, -1 + _rsh( 1 + n_layer, 1 ) ) ) exit
31278.                enddo
31278.             endif
31278.          endif
31278.       endif
31288.       if ( i_sph_mode == 1 ) then
31289.          if ( n_direction > 0 ) then
31290.             if ( n_viewing_level > 0 ) then
31291.                if ( n_profile > 0 ) then
31289.                   $I_L31289_282 = 0
31289.                   do
31290.                      $I_L31290_251 = 0
31290.                      do
31291.                         $I_L31291_214 = 0
31291. !dir$ ivdep
31291.                         do
31292.                            radiance_mono(1 + $I_L31291_214, 1 + $I_L31290_251, 1 + $I_L31289_282) = 0.0
31293.                            $I_L31291_214 = 1 + $I_L31291_214
31291.                            if ( $I_L31291_214 >= n_profile ) exit
31291.                         enddo
31294.                         $I_L31290_251 = 1 + $I_L31290_251
31293.                         if ( $I_L31290_251 >= n_viewing_level ) exit
31293.                      enddo
31295.                      $I_L31289_282 = 1 + $I_L31289_282
31294.                      if ( $I_L31289_282 >= n_direction ) exit
31294.                   enddo
31294.                endif
31294.             endif
31294.          endif
31294.       endif
31302.       if ( ms_max + -ms_min >= 0 ) then
31302.          $I_L31302_306 = 0
31302.          do
31311.             if ( i_truncation /= 4 ) then
31322.                ls_trunc_calc = ls_local_trunc(ms_min + $I_L31302_306)
31322.             else if ( $I_L31302_306 == 0 ) then
31313.                ls_trunc_calc = ls_local_trunc(ms_min)
31313.             else
31319.                ls_trunc_calc = min( ls_local_trunc(ms_min + $I_L31302_306), max( ls_significant, ( 1 + ms_min + $I_L31302_306 ) ) + mod( ( 1 + ms_min + $I_L31302_306 + max( ls_significant, ( 1 + ms_min + $I_L31302_306 ) ) ), 2 ) )
31319.             endif
31326.             if ( i_sph_mode == 1 ) then
31334.                if ( ms_min + $I_L31302_306 == 0 ) then
31335.                   if ( n_direction > 0 ) then
31336.                      if ( n_profile > 0 ) then
31335.                         $I_L31335_255 = 0
31335.                         do
31336.                            $I_L31336_218 = 0
31336. !dir$ ivdep
31336.                            do
31337.                               azim_factor(1 + $I_L31336_218, 1 + $I_L31335_255) = 1.0
31338.                               $I_L31336_218 = 1 + $I_L31336_218
31336.                               if ( $I_L31336_218 >= n_profile ) exit
31336.                            enddo
31339.                            $I_L31335_255 = 1 + $I_L31335_255
31338.                            if ( $I_L31335_255 >= n_direction ) exit
31338.                         enddo
31338.                      endif
31338.                   endif
31340.                else if ( n_direction > 0 ) then
31342.                   if ( n_profile > 0 ) then
31341.                      $I_L31341_253 = 0
31341.                      do
31342.                         $I_L31342_216 = 0
31342. !dir$ ivdep
31342.                         do
31343.                            $Flat_S12 = cos( direction(1 + $I_L31342_216, 1 + $I_L31341_253, 2) * real( ms_min + $I_L31302_306, 8 ) )
31343.                            azim_factor(1 + $I_L31342_216, 1 + $I_L31341_253) = 2.0 * $Flat_S12
31345.                            $I_L31342_216 = 1 + $I_L31342_216
31342.                            if ( $I_L31342_216 >= n_profile ) exit
31342.                         enddo
31346.                         $I_L31341_253 = 1 + $I_L31341_253
31345.                         if ( $I_L31341_253 >= n_direction ) exit
31345.                      enddo
31345.                   endif
31345.                endif
31353.                if ( n_direction > 0 ) then
31353.                   $I_L31353_304 = 0
31353.                   do
31354.                      tm$3204 = loc( direction(1, 1 + $I_L31353_304, 1) )
31354.                      x = _copyin( direction(1, 1 + $I_L31353_304, 1) )
31354.                      tm$3206 = loc( up_lm(1, 1, 1 + $I_L31353_304) )
31354.                      up_lm = _copyin( up_lm(1, 1, 1 + $I_L31353_304) )
31354.                      t$289 = nd_profile
31354.                      t$1973 = max( 0, nd_profile )
31354.                      t$290 = 1 + ls_trunc_calc + -ms_min + -$I_L31302_306
31354.                      t$1974 = max( 0, nd_profile )
31354.                      t$1975 = max( 0, 1 + ls_trunc_calc + -ms_min + -$I_L31302_306 )
31354.                      t$1976 = max( 0, nd_profile ) * max( 0, 1 + ls_trunc_calc + -ms_min + -$I_L31302_306 )
31354.                      product = 1.0
31354.                      if ( ( ms_min + $I_L31302_306 ) > 0 ) then
31354.                         $I_L31354_220 = 0
31354. !dir$ ivdep
31354.                         do
31354.                            product = product * ( 1.0 + -( 5.0e-1 * 1.0/( real( 1 + $I_L31354_220, 8 ) ) ) )
31354.                            $I_L31354_220 = 1 + $I_L31354_220
31354.                            if ( $I_L31354_220 >= ms_min + $I_L31302_306 ) exit
31354.                         enddo
31354.                         if ( n_profile > 0 ) then
31354.                            $I_L31354_222 = 0
31354. !dir$ ivdep
31354.                            do
31354.                               up_lm(1 + $I_L31354_222, 1) = _sqrt( 7.9577471545947673e-2 * product * ( 1.0 + -( x(1 + $I_L31354_222) * x(1 + $I_L31354_222) ) ) ** ( ms_min + $I_L31302_306 ) * ( 1.0 + 2.0 * real( ms_min + $I_L31302_306, 8 ) ) ) * cvmg( -1.0, 1.0, and( 1, ( ms_min + $I_L31302_306 ) ) /= 0 )
31354.                               $I_L31354_222 = 1 + $I_L31354_222
31354.                               if ( $I_L31354_222 >= n_profile ) exit
31354.                            enddo
31354.                         endif
31354.                      else if ( n_profile > 0 ) then
31354.                         $I_L31354_224 = 0
31354. !dir$ ivdep
31354.                         do
31354.                            up_lm(1 + $I_L31354_224, 1) = 2.8209479177387814e-1
31354.                            $I_L31354_224 = 1 + $I_L31354_224
31354.                            if ( $I_L31354_224 >= n_profile ) exit
31354.                         enddo
31354.                      endif
31354.                      if ( ( ms_min + $I_L31302_306 ) < ls_trunc_calc ) then
31354.                         if ( n_profile > 0 ) then
31354.                            $I_L31354_226 = 0
31354. !dir$ ivdep
31354.                            do
31354.                               up_lm(1 + $I_L31354_226, 2) = up_lm(1 + $I_L31354_226, 1) * x(1 + $I_L31354_226) * _sqrt( 3.0 + 2.0 * real( ms_min + $I_L31302_306, 8 ) )
31354.                               $I_L31354_226 = 1 + $I_L31354_226
31354.                               if ( $I_L31354_226 >= n_profile ) exit
31354.                            enddo
31354.                         endif
31354.                      endif
31354.                      if ( ( -2 + ls_trunc_calc + -ms_min + -$I_L31302_306 ) >= 0 ) then
31354.                         if ( n_profile > 0 ) then
31354.                            $I_L31354_298 = 0
31354.                            do
31354.                               $I_L31354_284 = 0
31354.                               do
31354.                                  $I_L31354_269 = 0
31354. !dir$ shortloop16
31354. !dir$ blocking_size( 4, 4 )
31354.                                  do
31354.                                     $I_L31354_228 = 0
31354. !dir$ ivdep
31354. !dir$ blocking_size( 256, 256 )
31354.                                     do
31354.                                        up_lm(1 + $I_L31354_228 + 256 * $I_L31354_284, 3 + $I_L31354_269 + 4 * $I_L31354_298) = -( up_lm(1 + $I_L31354_228 + 256 * $I_L31354_284, 1 + $I_L31354_269 + 4 * $I_L31354_298) * _sqrt( 1.0/( ( real( ms_min + $I_L31302_306, 8 ) + real( 2 + ms_min + $I_L31354_269 + $I_L31302_306 + 4 * $I_L31354_298, 8 ) ) * ( real( 2 + ms_min + $I_L31354_269 + $I_L31302_306 + 4 * $I_L31354_298, 8 ) + -( real( ms_min + $I_L31302_306, 8 ) ) ) * ( -3.0 + 2.0 * real( 2 + ms_min + $I_L31354_269 + $I_L31302_306 + 4 * $I_L31354_298, 8 ) ) ) * ( ( 1.0 + 2.0 * real( 2 + ms_min + $I_L31354_269 + $I_L31302_306 + 4 * $I_L31354_298, 8 ) ) * ( -1.0 + real( ms_min + $I_L31302_306, 8 ) + real( 2 + ms_min + $I_L31354_269 + $I_L31302_306 + 4 * $I_L31354_298, 8 ) ) * ( -1.0 + real( 2 + ms_min + $I_L31354_269 + $I_L31302_306 + 4 * $I_L31354_298, 8 ) + -( real( ms_min + $I_L31302_306, 8 ) ) ) ) ) ) + up_lm(1 + $I_L31354_228 + 256 * $I_L31354_284, 2 + $I_L31354_269 + 4 * $I_L31354_298) * x(1 + $I_L31354_228 + 256 * $I_L31354_284) * _sqrt( 1.0/( ( real( 2 + ms_min + $I_L31354_269 + $I_L31302_306 + 4 * $I_L31354_298, 8 ) + -( real( ms_min + $I_L31302_306, 8 ) ) ) * ( real( ms_min + $I_L31302_306, 8 ) + real( 2 + ms_min + $I_L31354_269 + $I_L31302_306 + 4 * $I_L31354_298, 8 ) ) ) * ( ( 1.0 + 2.0 * real( 2 + ms_min + $I_L31354_269 + $I_L31302_306 + 4 * $I_L31354_298, 8 ) ) * ( -1.0 + 2.0 * real( 2 + ms_min + $I_L31354_269 + $I_L31302_306 + 4 * $I_L31354_298, 8 ) ) ) )
31354.                                        $I_L31354_228 = 1 + $I_L31354_228
31354.                                        if ( $I_L31354_228 >= min( n_profile, 256 + 256 * $I_L31354_284 ) + -256 * $I_L31354_284 ) exit
31354.                                     enddo
31354.                                     $I_L31354_269 = 1 + $I_L31354_269
31354.                                     if ( $I_L31354_269 >= min( 4 + 4 * $I_L31354_298, -1 + ls_trunc_calc + -ms_min + -$I_L31302_306 ) + -4 * $I_L31354_298 ) exit
31354.                                  enddo
31354.                                  $I_L31354_284 = 1 + $I_L31354_284
31354.                                  if ( $I_L31354_284 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
31354.                               enddo
31354.                               $I_L31354_298 = 1 + $I_L31354_298
31354.                               if ( $I_L31354_298 >= 1 + max( 0, -1 + _rsh( 2 + ls_trunc_calc + -ms_min + -$I_L31302_306, 2 ) ) ) exit
31354.                            enddo
31354.                         endif
31354.                      endif
31354.                      up_lm(1, 1, 1 + $I_L31353_304) = _copyout( up_lm )
31354.                      direction(1, 1 + $I_L31353_304, 1) = _copyout( x )
31357.                      $I_L31353_304 = 1 + $I_L31353_304
31354.                      if ( $I_L31353_304 >= n_direction ) exit
31354.                   enddo
31354.                endif
31354.             endif
31363.             $tm_S21 = ia_sph_mm(ms_min + $I_L31302_306)
31363.             tm$3211 = loc( kappa(1, 1) )
31363.             kappa = _copyin( kappa(1, 1) )
31363.             t$316 = 1 + ls_trunc_calc + -ms_min + -$I_L31302_306
31363.             t$2079 = max( 0, 1 + ls_trunc_calc + -ms_min + -$I_L31302_306 )
31363.             t$317 = nd_max_order / 2
31363.             t$2080 = max( 0, t$317 )
31363.             t$2081 = max( 0, t$317 )
31363.             t$2082 = max( 0, t$317 ) * max( 0, t$317 )
31363.             if ( ( ls_trunc_calc + -ms_min + -$I_L31302_306 ) > 0 ) then
31363.                $I_L31363_300 = 0
31363.                do
31363.                   $I_L31363_286 = 0
31363.                   do
31363.                      $I_L31363_272 = 0
31363.                      if ( min( ( 1 + ls_trunc_calc + -ms_min + -$I_L31302_306 ) / 2, 4 + 4 * $I_L31363_300 ) + -4 * $I_L31363_300 >= 4 ) then
31363.                         $I_L31363_317 = 0
31363. !dir$ shortloop16
31363. !dir$ blocking_size( 4, 4 )
31363.                         do
31363.                            $SCA_uplm_zero#1_U0 = uplm_zero($tm_S21 + 8 * $I_L31363_300 + 8 * $I_L31363_317)
31363.                            $SCA_uplm_zero#2_U1 = uplm_zero(2 + $tm_S21 + 8 * $I_L31363_300 + 8 * $I_L31363_317)
31363.                            $SCA_uplm_zero#3_U2 = uplm_zero(4 + $tm_S21 + 8 * $I_L31363_300 + 8 * $I_L31363_317)
31363.                            $SCA_uplm_zero#4_U3 = uplm_zero(6 + $tm_S21 + 8 * $I_L31363_300 + 8 * $I_L31363_317)
31363.                            $I_L31363_231 = 0
31363. !dir$ ivdep
31363. !dir$ blocking_size( 256, 256 )
31363.                            do
31363.                               kappa(1 + $I_L31363_231 + 256 * $I_L31363_286, 1 + 4 * $I_L31363_300 + 4 * $I_L31363_317) = ( 6.2831853071795862 * $SCA_uplm_zero#1_U0 * uplm_zero(1 + $tm_S21 + 2 * $I_L31363_231 + 512 * $I_L31363_286) * real( 1 + -2 * mod( ( 2 + 2 * $I_L31363_231 + 512 * $I_L31363_286 ), 2 ), 8 ) * 1.0/( real( 1 + -( ( 2 + 2 * $I_L31363_231 + 512 * $I_L31363_286 ) * ( 2 + 2 * $I_L31363_231 + 512 * $I_L31363_286 ) ) + -2 * ms_min + 2 * $I_L31363_231 + -4 * ms_min * $I_L31363_231 + -1024 * ms_min * $I_L31363_286 + 512 * $I_L31363_286 + -8 * $I_L31363_300 + 16 * ms_min * $I_L31363_300 + 16 * $I_L31363_300 * $I_L31302_306 + -1024 * $I_L31363_286 * $I_L31302_306 + -4 * $I_L31363_231 * $I_L31302_306 + -2 * $I_L31302_306 + 16 * $I_L31302_306 * $I_L31363_317 + ( 1 + 8 * $I_L31363_300 + 8 * $I_L31363_317 ) * ( 1 + 8 * $I_L31363_300 + 8 * $I_L31363_317 ) + 16 * ms_min * $I_L31363_317 + -8 * $I_L31363_317, 8 ) ) )
31363.                               kappa(1 + $I_L31363_231 + 256 * $I_L31363_286, 2 + 4 * $I_L31363_300 + 4 * $I_L31363_317) = ( 6.2831853071795862 * $SCA_uplm_zero#2_U1 * uplm_zero(1 + $tm_S21 + 2 * $I_L31363_231 + 512 * $I_L31363_286) * real( 1 + -2 * mod( ( 2 + 2 * $I_L31363_231 + 512 * $I_L31363_286 ), 2 ), 8 ) * 1.0/( real( -1 + -( ( 2 + 2 * $I_L31363_231 + 512 * $I_L31363_286 ) * ( 2 + 2 * $I_L31363_231 + 512 * $I_L31363_286 ) ) + 2 * ms_min + 2 * $I_L31363_231 + -4 * ms_min * $I_L31363_231 + -1024 * ms_min * $I_L31363_286 + 512 * $I_L31363_286 + -8 * $I_L31363_300 + 16 * ms_min * $I_L31363_300 + 16 * $I_L31363_300 * $I_L31302_306 + -1024 * $I_L31363_286 * $I_L31302_306 + -4 * $I_L31363_231 * $I_L31302_306 + 2 * $I_L31302_306 + 16 * $I_L31302_306 * $I_L31363_317 + 16 * ms_min * $I_L31363_317 + -8 * $I_L31363_317 + ( 3 + 8 * $I_L31363_300 + 8 * $I_L31363_317 ) * ( 3 + 8 * $I_L31363_300 + 8 * $I_L31363_317 ), 8 ) ) )
31363.                               kappa(1 + $I_L31363_231 + 256 * $I_L31363_286, 3 + 4 * $I_L31363_300 + 4 * $I_L31363_317) = ( 6.2831853071795862 * $SCA_uplm_zero#3_U2 * uplm_zero(1 + $tm_S21 + 2 * $I_L31363_231 + 512 * $I_L31363_286) * real( 1 + -2 * mod( ( 2 + 2 * $I_L31363_231 + 512 * $I_L31363_286 ), 2 ), 8 ) * 1.0/( real( -3 + -( ( 2 + 2 * $I_L31363_231 + 512 * $I_L31363_286 ) * ( 2 + 2 * $I_L31363_231 + 512 * $I_L31363_286 ) ) + 2 * $I_L31363_231 + -4 * ms_min * $I_L31363_231 + -1024 * ms_min * $I_L31363_286 + 512 * $I_L31363_286 + -8 * $I_L31363_300 + 16 * ms_min * $I_L31363_300 + 16 * $I_L31363_300 * $I_L31302_306 + -1024 * $I_L31363_286 * $I_L31302_306 + -4 * $I_L31363_231 * $I_L31302_306 + 6 * $I_L31302_306 + 6 * ms_min + 16 * $I_L31302_306 * $I_L31363_317 + 16 * ms_min * $I_L31363_317 + -8 * $I_L31363_317 + ( 5 + 8 * $I_L31363_300 + 8 * $I_L31363_317 ) * ( 5 + 8 * $I_L31363_300 + 8 * $I_L31363_317 ), 8 ) ) )
31363.                               kappa(1 + $I_L31363_231 + 256 * $I_L31363_286, 4 + 4 * $I_L31363_300 + 4 * $I_L31363_317) = ( 6.2831853071795862 * $SCA_uplm_zero#4_U3 * uplm_zero(1 + $tm_S21 + 2 * $I_L31363_231 + 512 * $I_L31363_286) * real( 1 + -2 * mod( ( 2 + 2 * $I_L31363_231 + 512 * $I_L31363_286 ), 2 ), 8 ) * 1.0/( real( -5 + -( ( 2 + 2 * $I_L31363_231 + 512 * $I_L31363_286 ) * ( 2 + 2 * $I_L31363_231 + 512 * $I_L31363_286 ) ) + 2 * $I_L31363_231 + -4 * ms_min * $I_L31363_231 + -1024 * ms_min * $I_L31363_286 + 512 * $I_L31363_286 + -8 * $I_L31363_300 + 16 * ms_min * $I_L31363_300 + 16 * $I_L31363_300 * $I_L31302_306 + -1024 * $I_L31363_286 * $I_L31302_306 + -4 * $I_L31363_231 * $I_L31302_306 + 10 * $I_L31302_306 + 10 * ms_min + 16 * $I_L31302_306 * $I_L31363_317 + 16 * ms_min * $I_L31363_317 + -8 * $I_L31363_317 + ( 7 + 8 * $I_L31363_300 + 8 * $I_L31363_317 ) * ( 7 + 8 * $I_L31363_300 + 8 * $I_L31363_317 ), 8 ) ) )
31363.                               $I_L31363_231 = 1 + $I_L31363_231
31363.                               if ( $I_L31363_231 >= min( ( 1 + ls_trunc_calc + -ms_min + -$I_L31302_306 ) / 2, 256 + 256 * $I_L31363_286 ) + -256 * $I_L31363_286 ) exit
31363.                            enddo
31363.                            $I_L31363_317 = 1 + $I_L31363_317
31363.                            if ( $I_L31363_317 >= _rsh( min( ( 1 + ls_trunc_calc + -ms_min + -$I_L31302_306 ) / 2, 4 + 4 * $I_L31363_300 ) + -4 * $I_L31363_300, 2 ) ) exit
31363.                         enddo
31363.                         $I_L31363_272 = and( 0xfffffffffffffffcUL, min( ( 1 + ls_trunc_calc + -ms_min + -$I_L31302_306 ) / 2, 4 + 4 * $I_L31363_300 ) + -4 * $I_L31363_300 )
31363.                      endif
31363.                      if ( $I_L31363_272 < min( ( 1 + ls_trunc_calc + -ms_min + -$I_L31302_306 ) / 2, 4 + 4 * $I_L31363_300 ) + -4 * $I_L31363_300 ) then
31363.                         $I_L31363_312 = 0
31363. !dir$ shortloop16
31363. !dir$ blocking_size( 4, 4 )
31363.                         do
31363.                            $SCA_uplm_zero_I2 = uplm_zero($tm_S21 + 2 * $I_L31363_272 + 8 * $I_L31363_300 + 2 * $I_L31363_312)
31363.                            $I_L31363_231 = 0
31363. !dir$ ivdep
31363. !dir$ blocking_size( 256, 256 )
31363.                            do
31363.                               kappa(1 + $I_L31363_231 + 256 * $I_L31363_286, 1 + $I_L31363_272 + $I_L31363_312 + 4 * $I_L31363_300) = ( 6.2831853071795862 * $SCA_uplm_zero_I2 * uplm_zero(1 + $tm_S21 + 2 * $I_L31363_231 + 512 * $I_L31363_286) * real( 1 + -2 * mod( ( 2 + 2 * $I_L31363_231 + 512 * $I_L31363_286 ), 2 ), 8 ) * 1.0/( real( 1 + -( ( 2 + 2 * $I_L31363_231 + 512 * $I_L31363_286 ) * ( 2 + 2 * $I_L31363_231 + 512 * $I_L31363_286 ) ) + -2 * ms_min + 2 * $I_L31363_231 + -4 * ms_min * $I_L31363_231 + -2 * $I_L31363_272 + 4 * ms_min * $I_L31363_272 + -1024 * ms_min * $I_L31363_286 + 512 * $I_L31363_286 + -8 * $I_L31363_300 + 16 * ms_min * $I_L31363_300 + 16 * $I_L31363_300 * $I_L31302_306 + -1024 * $I_L31363_286 * $I_L31302_306 + 4 * $I_L31363_272 * $I_L31302_306 + -4 * $I_L31363_231 * $I_L31302_306 + -2 * $I_L31302_306 + 4 * $I_L31302_306 * $I_L31363_312 + 4 * ms_min * $I_L31363_312 + -2 * $I_L31363_312 + ( 1 + 2 * $I_L31363_272 + 8 * $I_L31363_300 + 2 * $I_L31363_312 ) * ( 1 + 2 * $I_L31363_272 + 8 * $I_L31363_300 + 2 * $I_L31363_312 ), 8 ) ) )
31363.                               $I_L31363_231 = 1 + $I_L31363_231
31363.                               if ( $I_L31363_231 >= min( ( 1 + ls_trunc_calc + -ms_min + -$I_L31302_306 ) / 2, 256 + 256 * $I_L31363_286 ) + -256 * $I_L31363_286 ) exit
31363.                            enddo
31363.                            $I_L31363_312 = 1 + $I_L31363_312
31363.                            if ( $I_L31363_312 >= min( ( 1 + ls_trunc_calc + -ms_min + -$I_L31302_306 ) / 2, 4 + 4 * $I_L31363_300 ) + -$I_L31363_272 + -4 * $I_L31363_300 ) exit
31363.                         enddo
31363.                      endif
31363.                      $I_L31363_286 = 1 + $I_L31363_286
31363.                      if ( $I_L31363_286 >= 1 + max( 0, -1 + _rsh( 255 + ( 1 + ls_trunc_calc + -ms_min + -$I_L31302_306 ) / 2, 8 ) ) ) exit
31363.                   enddo
31363.                   $I_L31363_300 = 1 + $I_L31363_300
31363.                   if ( $I_L31363_300 >= 1 + max( 0, -1 + _rsh( 3 + ( 1 + ls_trunc_calc + -ms_min + -$I_L31302_306 ) / 2, 2 ) ) ) exit
31363.                enddo
31363.             endif
31363.             kappa(1, 1) = _copyout( kappa )
31370.             ls_brdf_trunc_calc = min( ls_brdf_trunc, ls_trunc_calc + -mod( ls_trunc_calc, 2 ) )
31372.             tm$3218 = loc( kappa(1, 1) )
31372.             kappa = _copyin( kappa(1, 1) )
31372.             tm$3220 = loc( cgk(1, 1) )
31372.             cgk = _copyin( cgk(1, 1) )
31372.             t$219 = 1 + ls_trunc_calc + -ms_min + -$I_L31302_306
31372.             t$1794 = max( 0, 1 + ls_trunc_calc + -ms_min + -$I_L31302_306 )
31372.             t$220 = nd_max_order / 2
31372.             t$1795 = max( 0, t$220 )
31372.             t$1796 = max( 0, t$220 )
31372.             t$1797 = max( 0, t$220 ) * max( 0, t$220 )
31372.             t$221 = ( 1 + nd_brdf_trunc / 2 )
31372.             t$222 = nd_max_order
31372.             t$1798 = max( 0, t$221 )
31372.             t$1799 = max( 0, t$221 )
31372.             t$1800 = max( 0, nd_max_order )
31372.             t$1801 = max( 0, t$221 ) * max( 0, nd_max_order )
31372.             if ( ( 1 + ls_trunc_calc + -ms_min + -$I_L31302_306 ) > 0 ) then
31372.                $SC_cg_coeff_I0 = cg_coeff(1)
31372.                if ( ( -2 + min( ls_brdf_trunc, ls_trunc_calc + -mod( ls_trunc_calc, 2 ) ) + -ms_min + -$I_L31302_306 + -mod( ( ms_min + $I_L31302_306 ), 2 ) ) >= 0 ) then
31372.                   $I_L31372_246 = 0
31372. !dir$ ivdep
31372.                   do
31372.                      cgk(1, 1 + 2 * $I_L31372_246) = $SC_cg_coeff_I0 * kappa(1, 1 + $I_L31372_246)
31372.                      $I_L31372_246 = 1 + $I_L31372_246
31372.                      if ( $I_L31372_246 >= ( 2 + ls_trunc_calc + -ms_min + -$I_L31302_306 ) / 2 ) exit
31372.                   enddo
31372.                   $I_L31372_302 = 0
31372.                   do
31372.                      $I_L31372_292 = 0
31372.                      do
31372.                         $I_L31372_315 = 0
31372. !dir$ shortloop16
31372. !dir$ blocking_size( 2, 2 )
31372.                         do
31372.                            $I_L31372_248 = 0
31372. !dir$ ivdep
31372. !dir$ blocking_size( 256, 256 )
31372.                            do
31372.                               cgk(2 + $I_L31372_248 + 256 * $I_L31372_292, 1 + 4 * $I_L31372_302 + 2 * $I_L31372_315) = cg_coeff(2 + 2 * $I_L31372_248 + 512 * $I_L31372_292) * kappa(1 + $I_L31372_248 + 256 * $I_L31372_292, 1 + $I_L31372_315 + 2 * $I_L31372_302) + cg_coeff(3 + 2 * $I_L31372_248 + 512 * $I_L31372_292) * kappa(2 + $I_L31372_248 + 256 * $I_L31372_292, 1 + $I_L31372_315 + 2 * $I_L31372_302)
31372.                               $I_L31372_248 = 1 + $I_L31372_248
31372.                               if ( $I_L31372_248 >= min( ( min( ls_brdf_trunc, ls_trunc_calc + -mod( ls_trunc_calc, 2 ) ) + -ms_min + -$I_L31302_306 + -mod( ( ms_min + $I_L31302_306 ), 2 ) ) / 2, 256 + 256 * $I_L31372_292 ) + -256 * $I_L31372_292 ) exit
31372.                            enddo
31372.                            $I_L31372_315 = 1 + $I_L31372_315
31372.                            if ( $I_L31372_315 >= min( ( 2 + ls_trunc_calc + -ms_min + -$I_L31302_306 ) / 2, 2 + 2 * $I_L31372_302 ) + -2 * $I_L31372_302 ) exit
31372.                         enddo
31372.                         $I_L31372_292 = 1 + $I_L31372_292
31372.                         if ( $I_L31372_292 >= 1 + max( 0, -1 + _rsh( 255 + ( min( ls_brdf_trunc, ls_trunc_calc + -mod( ls_trunc_calc, 2 ) ) + -ms_min + -$I_L31302_306 + -mod( ( ms_min + $I_L31302_306 ), 2 ) ) / 2, 8 ) ) ) exit
31372.                      enddo
31372.                      $I_L31372_302 = 1 + $I_L31372_302
31372.                      if ( $I_L31372_302 >= 1 + max( 0, -1 + _rsh( 1 + ( 2 + ls_trunc_calc + -ms_min + -$I_L31302_306 ) / 2, 1 ) ) ) exit
31372.                   enddo
31372.                else
31372.                   $I_L31372_244 = 0
31372. !dir$ ivdep
31372.                   do
31372.                      cgk(1, 1 + 2 * $I_L31372_244) = $SC_cg_coeff_I0 * kappa(1, 1 + $I_L31372_244)
31372.                      $I_L31372_244 = 1 + $I_L31372_244
31372.                      if ( $I_L31372_244 >= ( 2 + ls_trunc_calc + -ms_min + -$I_L31302_306 ) / 2 ) exit
31372.                   enddo
31372.                endif
31372.             endif
31372.             if ( ( ls_trunc_calc + -ms_min + -$I_L31302_306 ) > 0 ) then
31372.                if ( ( 1 + min( ls_brdf_trunc, ls_trunc_calc + -mod( ls_trunc_calc, 2 ) ) + -ms_min + -$I_L31302_306 + -mod( ( ms_min + $I_L31302_306 ), 2 ) ) > 0 ) then
31372.                   $I_L31372_257 = 0
31372.                   do
31372.                      $I_L31372_234 = 0
31372. !dir$ ivdep
31372.                      do
31372.                         cgk(1 + $I_L31372_234, 2 + 2 * $I_L31372_257) = 0.0
31372.                         $I_L31372_234 = 1 + $I_L31372_234
31372.                         if ( $I_L31372_234 >= ( 2 + min( ls_brdf_trunc, ls_trunc_calc + -mod( ls_trunc_calc, 2 ) ) + -ms_min + -$I_L31302_306 + -mod( ( ms_min + $I_L31302_306 ), 2 ) ) / 2 ) exit
31372.                      enddo
31372.                      $I_L31372_257 = 1 + $I_L31372_257
31372.                      if ( $I_L31372_257 >= ( 1 + ls_trunc_calc + -ms_min + -$I_L31302_306 ) / 2 ) exit
31372.                   enddo
31372.                endif
31372.             endif
31372.             if ( ( min( ls_brdf_trunc, ls_trunc_calc + -mod( ls_trunc_calc, 2 ) ) + -ms_min + -$I_L31302_306 + -mod( ( ms_min + $I_L31302_306 ), 2 ) ) >= 0 ) then
31372.                $I_L31372_236 = 0
31372. !dir$ ivdep
31372.                do
31372.                   cgk(1 + $I_L31372_236, 2 + 2 * $I_L31372_236) = 5.0e-1 * cg_coeff(1 + 2 * $I_L31372_236)
31372.                   $I_L31372_236 = 1 + $I_L31372_236
31372.                   if ( $I_L31372_236 >= ( 2 + min( ls_brdf_trunc, ls_trunc_calc + -mod( ls_trunc_calc, 2 ) ) + -ms_min + -$I_L31302_306 + -mod( ( ms_min + $I_L31302_306 ), 2 ) ) / 2 ) exit
31372.                enddo
31372.             endif
31372.             if ( ( -2 + min( ls_brdf_trunc, ls_trunc_calc + -mod( ls_trunc_calc, 2 ) ) + -ms_min + -$I_L31302_306 + -mod( ( ms_min + $I_L31302_306 ), 2 ) ) >= 0 ) then
31372.                $I_L31372_238 = 0
31372. !dir$ ivdep
31372.                do
31372.                   cgk(2 + $I_L31372_238, 2 + 2 * $I_L31372_238) = 5.0e-1 * cg_coeff(2 + 2 * $I_L31372_238)
31372.                   $I_L31372_238 = 1 + $I_L31372_238
31372.                   if ( $I_L31372_238 >= ( min( ls_brdf_trunc, ls_trunc_calc + -mod( ls_trunc_calc, 2 ) ) + -ms_min + -$I_L31302_306 + -mod( ( ms_min + $I_L31302_306 ), 2 ) ) / 2 ) exit
31372.                enddo
31372.             endif
31372.             cgk(1, 1) = _copyout( cgk )
31372.             kappa(1, 1) = _copyout( kappa )
31379.             if ( i_sph_mode == 2 ) then
31372.                goto 10
31379.             else if ( i_sph_algorithm == 1 ) then
31379.    10          continue
31381.                if ( n_viewing_level > 0 ) then
31382.                   $SC_ls_local_trunc_I1 = ls_local_trunc(ms_min + $I_L31302_306)
31382.                   if ( ( 1 + $SC_ls_local_trunc_I1 + -ms_min + -$I_L31302_306 ) > 0 ) then
31383.                      if ( n_profile > 0 ) then
31381.                         $I_L31381_288 = 0
31381.                         do
31382.                            $I_L31382_259 = 0
31382.                            do
31383.                               $I_L31383_240 = 0
31383. !dir$ ivdep
31383.                               do
31384.                                  c_ylm(1 + $I_L31383_240, 1 + $I_L31381_288, 1 + $I_L31382_259) = 0.0
31385.                                  $I_L31383_240 = 1 + $I_L31383_240
31383.                                  if ( $I_L31383_240 >= n_profile ) exit
31383.                               enddo
31386.                               $I_L31382_259 = 1 + $I_L31382_259
31385.                               if ( $I_L31382_259 >= 1 + $SC_ls_local_trunc_I1 + -ms_min + -$I_L31302_306 ) exit
31385.                            enddo
31387.                            $I_L31381_288 = 1 + $I_L31381_288
31386.                            if ( $I_L31381_288 >= n_viewing_level ) exit
31386.                         enddo
31386.                      endif
31386.                   endif
31386.                endif
31386.             endif
31397.             n_red_eigensystem = ( 1 + ls_trunc_calc + -ms_min + -$I_L31302_306 ) / 2
31402.             t$9471 = ( ms_min + $I_L31302_306 )
31399.             call build_sph_matrix( i_sph_algorithm, euler_factor, n_profile, n_layer, ls_trunc_calc, t$9471, n_red_eigensystem, cg_coeff($tm_S21), kappa(1, 1), up_lm(1, 1, 1), isolir, i_direct(1, 0), mu_0(1), uplm_sol(1, $tm_S21), azim_factor(1, 1), diff_planck(1, 1), l_ir_source_quad, diff_planck_2(1, 1), flux_inc_down(1), tau(1, 1), omega(1, 1), phase_fnc(1, 1, 1), ls_brdf_trunc_calc, n_brdf_basis_fnc, rho_alb(1, 1), f_brdf(1, 0, 0, 0), brdf_sol(1, 1, 1), brdf_hemi(1, 1, 1), cgk(1, 1), d_planck_flux_surface(1), n_viewing_level, i_rad_layer(1), frac_rad_layer(1), n_direction, direction(1, 1, 1), a(1, 1, 1), b(1, 1), c_ylm(1, 1, 1), weight_u(1, 1, 1, 1), radiance_mono(1, 1, 1), nd_profile, nd_radiance_profile, nd_layer, nd_viewing_level, nd_direction, nd_max_order, nd_brdf_basis_fnc, nd_brdf_trunc, nd_red_eigensystem, nd_sph_equation, nd_sph_diagonal, nd_sph_cf_weight, nd_sph_u_range )
31431.             if ( ierr /= 0 ) then
30995.                _free( t$4032 )
30995.                goto 30
30995.             endif
31436.             n_equation = 2 * n_layer * n_red_eigensystem
31438.             call sph_matrix_solver( n_profile, n_layer, n_red_eigensystem, a(1, 1, 1), b(1, 1), upm(1, 1), nd_profile, nd_sph_equation, nd_sph_diagonal )
31450.             t$9471 = ( ms_min + $I_L31302_306 )
31446.             call increment_rad_cf( n_profile, n_direction, azim_factor(1, 1), n_viewing_level, i_rad_layer(1), i_sph_mode, i_sph_algorithm, t$9471, ls_trunc_calc, euler_factor, isolir, mu_0(1), kappa(1, 1), up_lm(1, 1, 1), n_red_eigensystem, n_equation, weight_u(1, 1, 1, 1), upm(1, 1), i_direct(1, 0), c_ylm(1, 1, 1), flux_direct(1, 0), flux_total(1, 1), radiance_mono(1, 1, 1), photolysis(1, 1), nd_profile, nd_flux_profile, nd_radiance_profile, nd_j_profile, nd_layer, nd_direction, nd_viewing_level, nd_max_order, nd_sph_equation, nd_sph_cf_weight, nd_sph_u_range )
31462.             if ( i_truncation == 4 ) then
31467.                ls_significant = ( 1 + ms_min + $I_L31302_306 )
31468.                if ( ( ls_trunc_calc + -2 * ms_min + -2 * $I_L31302_306 ) > 0 ) then
31469.                   if ( n_viewing_level > 0 ) then
31470.                      if ( n_profile > 0 ) then
31468.                         $I_L31468_290 = 0
31468.                         do
31468.                            lsr = ( 2 + ms_min + $I_L31468_290 + $I_L31302_306 )
31469.                            $I_L31469_261 = 0
31469.                            do
31470.                               $I_L31470_242 = 0
31470. !dir$ ivdep
31470.                               do
31471.                                  if ( abs( c_ylm(1 + $I_L31470_242, 1 + $I_L31469_261, lsr) ) > accuracy_adaptive * abs( c_ylm(1 + $I_L31470_242, 1 + $I_L31469_261, 1) ) ) then
31472.                                     ls_significant = ( 1 + $I_L31468_290 + 2 * ms_min + 2 * $I_L31302_306 )
31472.                                  endif
31473.                                  $I_L31470_242 = 1 + $I_L31470_242
31471.                                  if ( $I_L31470_242 >= n_profile ) exit
31471.                               enddo
31474.                               $I_L31469_261 = 1 + $I_L31469_261
31473.                               if ( $I_L31469_261 >= n_viewing_level ) exit
31473.                            enddo
31475.                            $I_L31468_290 = 1 + $I_L31468_290
31474.                            if ( $I_L31468_290 >= ls_trunc_calc + -2 * ms_min + -2 * $I_L31302_306 ) exit
31474.                         enddo
31474.                      endif
31474.                   endif
31474.                endif
31474.             endif
31478.             $I_L31302_306 = 1 + $I_L31302_306
31476.             if ( $I_L31302_306 >= 1 + ms_max + -ms_min ) exit
31476.          enddo
31476.          goto 20
31476.       else
31476.    20    continue
31480.          if ( i_sph_algorithm == 2 ) then
31480.             if ( isolir == 1 ) then
31484.                call single_scat_sol( n_profile, n_layer, n_direction, direction(1, 1, 1), n_viewing_level, i_rad_layer(1), frac_rad_layer(1), i_direct(1, 0), mu_0(1), tau(1, 1), omega(1, 1), phase_fnc_solar(1, 1, 1), radiance_mono(1, 1, 1), nd_profile, nd_radiance_profile, nd_layer, nd_direction, nd_viewing_level )
31484.             endif
31484.          endif
30995.          _free( t$4032 )
30995.       endif
30995.    30 continue
31498.       return
31498.       end
31498.       
31516.       
31516.       subroutine spline_evaluate( ierr, n_data, x, y, y2, x_point, y_point )
31516.       t$949 = n_data
31540.       t$4076 = _zla( 0, n_data )
31571.       if ( n_data == 1 ) then
31573.          y_point = y(1)
31574.       else if ( x_point > x(n_data) ) then
31574.          goto 10
31574.       else if ( x_point < x(1) ) then
31574.    10    continue
31576.          ierr = 5
31576.       else
31580.          $i_low_S0 = 1
31581.          $i_high_S1 = n_data
31581.          do
31582.             if ( $i_high_S1 + -$i_low_S0 <= 1 ) goto 20
31584.             if ( x_point > x(( $i_low_S0 + $i_high_S1 ) / 2) ) then
31585.                $i_low_S0 = ( $i_low_S0 + $i_high_S1 ) / 2
31585.             else
31587.                $i_high_S1 = ( $i_low_S0 + $i_high_S1 ) / 2
31587.             endif
31588.          enddo
31588.    20    continue
31591.          $delta_S2 = x($i_high_S1) + -x($i_low_S0)
31592.          $a_S4 = ( ( x($i_high_S1) + -x_point ) * 1.0/$delta_S2 )
31593.          $b_S3 = ( ( x_point + -x($i_low_S0) ) * 1.0/$delta_S2 )
31595.          y_point = $b_S3 * ( y($i_high_S1) + y2($i_high_S1) * ( 1.6666666666666666e-1 * $delta_S2 * $delta_S2 ) * ( -1.0 + $b_S3 * $b_S3 ) ) + $a_S4 * ( y($i_low_S0) + y2($i_low_S0) * ( 1.6666666666666666e-1 * $delta_S2 * $delta_S2 ) * ( -1.0 + $a_S4 * $a_S4 ) )
31595.       endif
31602.       return
31602.       end
31602.       
31621.       
31621.       subroutine spline_fit( n_data, x, y, y2, u )
31621.       t$950 = n_data
31641.       t$4077 = _zla( 0, n_data )
31663.       if ( n_data /= 1 ) then
31667.          y2(1) = 0.0
31668.          u(1) = 0.0
31669.          if ( -3 + n_data >= 0 ) then
31669.             $y2_WR0_R0 = 0.0
31669.             $u_WR0_R1 = 0.0
31669.             $I_L31669_12 = 0
31669. !dir$ unroll 2
31669.             do
31670.                $sigma_S1 = ( ( x(2 + $I_L31669_12) + -x(1 + $I_L31669_12) ) * 1.0/( x(3 + $I_L31669_12) + -x(1 + $I_L31669_12) ) )
31672.                y2(2 + $I_L31669_12) = ( ( -1.0 + $sigma_S1 ) * 1.0/( 2.0 + $sigma_S1 * $y2_WR0_R0 ) )
31673.                $SCF_P0 = ( 6.0 * 1.0/( x(3 + $I_L31669_12) + -x(1 + $I_L31669_12) ) * ( -( 1.0/( x(2 + $I_L31669_12) + -x(1 + $I_L31669_12) ) * ( y(2 + $I_L31669_12) + -y(1 + $I_L31669_12) ) ) + ( 1.0/( x(3 + $I_L31669_12) + -x(2 + $I_L31669_12) ) * ( y(3 + $I_L31669_12) + -y(2 + $I_L31669_12) ) ) ) )
31673.                $u_WR0_R1 = ( ( $SCF_P0 + -( $sigma_S1 * $u_WR0_R1 ) ) * 1.0/( 2.0 + $sigma_S1 * $y2_WR0_R0 ) )
31673.                u(2 + $I_L31669_12) = $u_WR0_R1
31672.                $y2_WR0_R0 = ( ( -1.0 + $sigma_S1 ) * 1.0/( 2.0 + $sigma_S1 * $y2_WR0_R0 ) )
31675.                $I_L31669_12 = 1 + $I_L31669_12
31669.                if ( $I_L31669_12 >= -2 + n_data ) exit
31669.             enddo
31669.          endif
31676.          y2(n_data) = 0.0
31679.          if ( 1 + -n_data < 0 ) then
31679.             $y2_WR0_R2 = 0.0
31679.             $I_L31679_14 = 0
31679. !dir$ unroll 4
31679.             do
31680.                $y2_WR0_R2 = u(-1 + n_data + -$I_L31679_14) + $y2_WR0_R2 * y2(-1 + n_data + -$I_L31679_14)
31680.                y2(-1 + n_data + -$I_L31679_14) = $y2_WR0_R2
31681.                $I_L31679_14 = 1 + $I_L31679_14
31679.                if ( $I_L31679_14 >= -1 + n_data ) exit
31679.             enddo
31679.          endif
31679.       endif
31686.       return
31686.       end
31686.       
31704.       
31704.       subroutine trans_source_coeff( n_profile, i_layer_first, i_layer_last, isolir, l_ir_source_quad, tau, sum, diff, lambda, sec_00, gamma_up, gamma_down, trans, reflect, trans_0, source_coeff, nd_profile, id_op_lt, id_op_lb, id_trs_lt, id_trs_lb, nd_source_coeff )
31704.       t$951 = nd_profile
31704.       t$952 = id_op_lt
31704.       t$953 = id_op_lb
31760.       t$4078 = _zla( 0, nd_profile )
31704.       t$4079 = _zla( 0, nd_profile )
31704.       t$4080 = 1 + id_op_lb + -id_op_lt
31760.       t$4081 = _zla( 0, 1 + id_op_lb + -id_op_lt )
31704.       t$4082 = _zla( 0, nd_profile ) * _zla( 0, 1 + id_op_lb + -id_op_lt )
31704.       t$954 = id_trs_lt
31704.       t$955 = id_trs_lb
31704.       t$4083 = 1 + id_trs_lb + -id_trs_lt
31778.       t$4084 = _zla( 0, 1 + id_trs_lb + -id_trs_lt )
31704.       t$4085 = _zla( 0, nd_profile ) * _zla( 0, 1 + id_trs_lb + -id_trs_lt )
31704.       t$956 = nd_source_coeff
31704.       t$4086 = _zla( 0, nd_profile ) * _zla( 0, 1 + id_trs_lb + -id_trs_lt )
31784.       t$4087 = _zla( 0, nd_source_coeff )
31704.       t$4088 = _zla( 0, nd_profile ) * _zla( 0, nd_source_coeff ) * _zla( 0, 1 + id_trs_lb + -id_trs_lt )
31823.       if ( id_trs_lb + -id_trs_lt >= 0 ) then
31824.          if ( nd_profile > 0 ) then
31823.             $I_L31823_56 = 0
31823.             do
31824.                $I_L31824_48 = 0
31824. !dir$ ivdep
31824.                do
31825.                   $exponential_S3 = _expn( -( lambda(1 + $I_L31824_48, id_trs_lt + $I_L31823_56) * tau(1 + $I_L31824_48, id_trs_lt + $I_L31823_56) ) )
31826.                   $gamma_S2 = ( ( sum(1 + $I_L31824_48, id_trs_lt + $I_L31823_56) + -lambda(1 + $I_L31824_48, id_trs_lt + $I_L31823_56) ) * 1.0/( lambda(1 + $I_L31824_48, id_trs_lt + $I_L31823_56) + sum(1 + $I_L31824_48, id_trs_lt + $I_L31823_56) ) )
31830.                   trans(1 + $I_L31824_48, id_trs_lt + $I_L31823_56) = $exponential_S3 * ( 1.0 + -( $gamma_S2 * $gamma_S2 ) ) * 1.0/( 1.0 + -( ( $gamma_S2 * $exponential_S3 ) * ( $gamma_S2 * $exponential_S3 ) ) )
31832.                   reflect(1 + $I_L31824_48, id_trs_lt + $I_L31823_56) = $gamma_S2 * 1.0/( 1.0 + -( ( $gamma_S2 * $exponential_S3 ) * ( $gamma_S2 * $exponential_S3 ) ) ) * ( 1.0 + -( $exponential_S3 * $exponential_S3 ) )
31834.                   $I_L31824_48 = 1 + $I_L31824_48
31824.                   if ( $I_L31824_48 >= nd_profile ) exit
31824.                enddo
31835.                $I_L31823_56 = 1 + $I_L31823_56
31834.                if ( $I_L31823_56 >= 1 + id_trs_lb + -id_trs_lt ) exit
31834.             enddo
31834.          endif
31834.       endif
31839.       if ( isolir == 1 ) then
31847.          if ( id_trs_lb + -id_trs_lt >= 0 ) then
31848.             if ( nd_profile > 0 ) then
31847.                $I_L31847_60 = 0
31847.                do
31848.                   $I_L31848_52 = 0
31848. !dir$ ivdep
31848.                   do
31849.                      $trans_0_WR0_R0 = _expn( -( tau(1 + $I_L31848_52, id_trs_lt + $I_L31847_60) * sec_00(1 + $I_L31848_52, id_trs_lt + $I_L31847_60) ) )
31849.                      trans_0(1 + $I_L31848_52, id_trs_lt + $I_L31847_60) = $trans_0_WR0_R0
31850.                      source_coeff(1 + $I_L31848_52, id_trs_lt + $I_L31847_60, 1) = ( gamma_up(1 + $I_L31848_52, id_trs_lt + $I_L31847_60) + -( reflect(1 + $I_L31848_52, id_trs_lt + $I_L31847_60) * ( 1.0 + gamma_down(1 + $I_L31848_52, id_trs_lt + $I_L31847_60) ) ) ) + -( gamma_up(1 + $I_L31848_52, id_trs_lt + $I_L31847_60) * $trans_0_WR0_R0 * trans(1 + $I_L31848_52, id_trs_lt + $I_L31847_60) )
31854.                      source_coeff(1 + $I_L31848_52, id_trs_lt + $I_L31847_60, 2) = -( trans(1 + $I_L31848_52, id_trs_lt + $I_L31847_60) * ( 1.0 + gamma_down(1 + $I_L31848_52, id_trs_lt + $I_L31847_60) ) ) + $trans_0_WR0_R0 * ( 1.0 + gamma_down(1 + $I_L31848_52, id_trs_lt + $I_L31847_60) + -( reflect(1 + $I_L31848_52, id_trs_lt + $I_L31847_60) * gamma_up(1 + $I_L31848_52, id_trs_lt + $I_L31847_60) ) )
31858.                      $I_L31848_52 = 1 + $I_L31848_52
31848.                      if ( $I_L31848_52 >= nd_profile ) exit
31848.                   enddo
31859.                   $I_L31847_60 = 1 + $I_L31847_60
31858.                   if ( $I_L31847_60 >= 1 + id_trs_lb + -id_trs_lt ) exit
31858.                enddo
31858.             endif
31858.          endif
31862.       else if ( isolir == 2 ) then
31869.          if ( id_trs_lb + -id_trs_lt >= 0 ) then
31870.             if ( nd_profile > 0 ) then
31869.                $I_L31869_58 = 0
31869.                do
31870.                   $I_L31870_50 = 0
31870. !dir$ ivdep
31870.                   do
31881.                      source_coeff(1 + $I_L31870_50, id_trs_lt + $I_L31869_58, 1) = ( ( ( 1.0 + reflect(1 + $I_L31870_50, id_trs_lt + $I_L31869_58) + -trans(1 + $I_L31870_50, id_trs_lt + $I_L31869_58) ) + ( 2.2204460492503131e-16 * 1.0/( 1.4901161193847656e-8 + tau(1 + $I_L31870_50, id_trs_lt + $I_L31869_58) ) ) ) * 1.0/( ( 2.2204460492503131e-16 * 1.0/( 1.4901161193847656e-8 + tau(1 + $I_L31870_50, id_trs_lt + $I_L31869_58) ) ) + tau(1 + $I_L31870_50, id_trs_lt + $I_L31869_58) * sum(1 + $I_L31870_50, id_trs_lt + $I_L31869_58) ) )
31888.                      $I_L31870_50 = 1 + $I_L31870_50
31870.                      if ( $I_L31870_50 >= nd_profile ) exit
31870.                   enddo
31889.                   $I_L31869_58 = 1 + $I_L31869_58
31888.                   if ( $I_L31869_58 >= 1 + id_trs_lb + -id_trs_lt ) exit
31888.                enddo
31888.             endif
31888.          endif
31892.          if ( l_ir_source_quad /= .false. ) then
31898.             if ( id_trs_lb + -id_trs_lt >= 0 ) then
31899.                if ( nd_profile > 0 ) then
31898.                   $I_L31898_62 = 0
31898.                   do
31899.                      $I_L31899_54 = 0
31899. !dir$ ivdep
31899.                      do
31900.                         if ( tau(1 + $I_L31899_54, id_trs_lt + $I_L31898_62) > 6.828499381469513e-6 ) then
31901.                            source_coeff(1 + $I_L31899_54, id_trs_lt + $I_L31898_62, 2) = -( 2.0 * ( 1.0000000149011612 + -trans(1 + $I_L31899_54, id_trs_lt + $I_L31898_62) + -reflect(1 + $I_L31899_54, id_trs_lt + $I_L31898_62) ) * 1.0/( 1.4901161193847656e-8 + tau(1 + $I_L31899_54, id_trs_lt + $I_L31898_62) * diff(1 + $I_L31899_54, id_trs_lt + $I_L31898_62) ) )
31901.                         else
31907.                            source_coeff(1 + $I_L31899_54, id_trs_lt + $I_L31898_62, 2) = -2.0 + tau(1 + $I_L31899_54, id_trs_lt + $I_L31898_62) * diff(1 + $I_L31899_54, id_trs_lt + $I_L31898_62)
31907.                         endif
31910.                         source_coeff(1 + $I_L31899_54, id_trs_lt + $I_L31898_62, 2) = -( 1.0/( 1.4901161193847656e-8 + tau(1 + $I_L31899_54, id_trs_lt + $I_L31898_62) * sum(1 + $I_L31899_54, id_trs_lt + $I_L31898_62) ) * ( 1.0 + trans(1 + $I_L31899_54, id_trs_lt + $I_L31898_62) + source_coeff(1 + $I_L31899_54, id_trs_lt + $I_L31898_62, 2) + reflect(1 + $I_L31899_54, id_trs_lt + $I_L31898_62) ) )
31914.                         $I_L31899_54 = 1 + $I_L31899_54
31909.                         if ( $I_L31899_54 >= nd_profile ) exit
31909.                      enddo
31915.                      $I_L31898_62 = 1 + $I_L31898_62
31914.                      if ( $I_L31898_62 >= 1 + id_trs_lb + -id_trs_lt ) exit
31914.                   enddo
31914.                endif
31914.             endif
31914.          endif
31914.       endif
31924.       return
31924.       end
31924.       
31946.       
31946.       subroutine triple_column( ierr, n_profile, n_layer, i_2stream, i_solver, i_scatter_method, l_scale_solar, adjust_solar_ke, isolir, diff_planck, l_ir_source_quad, diff_planck_2, flux_inc_down, flux_inc_direct, sec_00, diffuse_albedo, direct_albedo, d_planck_flux_surface, ss_prop, n_cloud_top, n_cloud_type, frac_cloud, n_region, i_region_cloud, frac_region, w_free, w_cloud, cloud_overlap, flux_direct, flux_total, l_clear, i_solver_clear, flux_direct_clear, flux_total_clear, nd_profile, nd_layer, nd_layer_clr, id_ct, nd_max_order, nd_source_coeff, nd_cloud_type, nd_region, nd_overlap_coeff )
31946.       t$958 = nd_profile
31946.       t$960 = nd_layer
32091.       t$4089 = _zla( 0, nd_profile )
31946.       t$4090 = _zla( 0, nd_profile )
32091.       t$4091 = _zla( 0, nd_layer )
31946.       t$4092 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
 2600.       if ( t$27 == 0 ) then
 2600.          t$4097(1) = 4
 2600.          t$4098(1) = 0
 2600.          t$4099(1) = 0
 2600.          t$4094(1) = int( loc( t$26 ), 8 )
 2600.          t$4095(1) = 0
 2600.          t$4096(1) = int( loc( t$4093 ), 8 )
 2600.          t$27 = __get_dynamic_type( 2, t$4094(1), t$4097(1), 1, t$4095(1), t$4096(1), t$4098(1), t$4099(1) )
 2600.       endif
31946.       t$959 = id_ct
31946.       t$957 = nd_cloud_type
31946.       t$4101 = 1 + nd_layer + -id_ct
32068.       t$4102 = max( 0, 1 + nd_layer + -id_ct )
31946.       t$4103 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
32068.       t$4104 = max( 0, nd_cloud_type )
31946.       t$4105 = _zla( 0, nd_profile ) * max( 0, nd_cloud_type ) * max( 0, 1 + nd_layer + -id_ct )
31946.       t$963 = nd_region
32073.       t$4106 = max( 0, nd_region )
31946.       t$4107 = _zla( 0, nd_profile ) * max( 0, nd_region ) * max( 0, 1 + nd_layer + -id_ct )
31946.       t$4108 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
31946.       t$961 = ( -1 + id_ct )
31946.       t$962 = nd_overlap_coeff
31946.       t$4109 = 2 + nd_layer + -id_ct
32070.       t$4110 = max( 0, 2 + nd_layer + -id_ct )
31946.       t$4111 = _zla( 0, nd_profile ) * max( 0, 2 + nd_layer + -id_ct )
32070.       t$4112 = max( 0, nd_overlap_coeff )
31946.       t$4113 = _zla( 0, nd_profile ) * max( 0, nd_overlap_coeff ) * max( 0, 2 + nd_layer + -id_ct )
31946.       t$4114 = 1 + nd_layer
32098.       t$4115 = max( 0, 1 + nd_layer )
31946.       t$4116 = _zla( 0, nd_profile ) * max( 0, 1 + nd_layer )
31946.       t$964 = ( 2 + 2 * nd_layer )
32100.       t$4117 = max( 0, ( 2 + 2 * nd_layer ) )
31946.       t$4118 = _zla( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
31946.       t$4119 = _zla( 0, nd_profile ) * max( 0, nd_region )
32147.       t$4122 = 8 * _zla( 0, nd_profile ) * max( 0, nd_region )
31946.       t$4123 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
31946.       t$4124 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_region )
32127.       t$4125 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * max( 0, nd_region ) ) / 8
32127.       t$4127 = t$4125 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_region )
31946.       t$965 = nd_source_coeff
32131.       t$4128 = max( 0, nd_source_coeff )
31946.       t$4129 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_source_coeff )
31946.       t$4130 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_region ) * max( 0, nd_source_coeff )
32131.       t$4131 = 8 * ( 7 + t$4125 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_region ) ) / 8
32131.       t$4133 = t$4131 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_region ) * max( 0, nd_source_coeff )
32145.       t$4134 = 8 * ( 7 + t$4131 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_region ) * max( 0, nd_source_coeff ) ) / 8
32145.       t$4136 = t$4134 + 8 * _zla( 0, nd_profile ) * max( 0, nd_region )
32134.       t$4137 = 8 * ( 7 + t$4134 + 8 * _zla( 0, nd_profile ) * max( 0, nd_region ) ) / 8
32134.       t$4139 = t$4137 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_region )
32138.       t$4140 = 8 * ( 7 + t$4137 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_region ) ) / 8
32138.       t$4142 = t$4140 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
32136.       t$4143 = 8 * ( 7 + t$4140 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
32136.       t$4145 = t$4143 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_region )
32140.       t$4146 = 8 * ( 7 + t$4143 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_region ) ) / 8
32140.       t$4148 = t$4146 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
32125.       t$4149 = 8 * ( 7 + t$4146 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
32125.       t$4151 = t$4149 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_region )
32129.       t$4152 = 8 * ( 7 + t$4149 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_region ) ) / 8
32129.       t$4154 = t$4152 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_region )
31946.       t$4120 = int( _alloc( t$4152 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * max( 0, nd_region ) ), 8 )
32147.       t$4121 = t$4120
32127.       t$4126 = t$4125 + t$4120
32131.       t$4132 = t$4131 + t$4120
32145.       t$4135 = t$4134 + t$4120
32134.       t$4138 = t$4137 + t$4120
32138.       t$4141 = t$4140 + t$4120
32136.       t$4144 = t$4143 + t$4120
32140.       t$4147 = t$4146 + t$4120
32125.       t$4150 = t$4149 + t$4120
32129.       t$4153 = t$4152 + t$4120
32166.       n_source_coeff = cvmg( cvmg( 2, 1, l_ir_source_quad ), 2, isolir /= 1 )
32169.       if ( i_scatter_method == 1 ) then
32175.          t$9527 = 0
32175.          t$9528 = 0
32175.          t$9529 = 0
32175.          t$9534 = 0
32175.          if ( ss_prop%phase_fnc_clr%header%a_contig == 1 ) then
32175. !dir$ suppress (ss_prop%phase_fnc_clr%base_addr)(ss_prop%phase_fnc_clr%dim_1%LB, ss_prop%phase_fnc_clr%dim_2%LB, ss_prop%phase_fnc_clr%dim_3%LB, 0)
32175.             t$9526 = loc( (ss_prop%phase_fnc_clr%base_addr)(ss_prop%phase_fnc_clr%dim_1%LB, ss_prop%phase_fnc_clr%dim_2%LB, ss_prop%phase_fnc_clr%dim_3%LB, 0) )
32175.          else
32175.             t$9527 = ss_prop%phase_fnc_clr%dim_1%EX
32175.             t$9528 = ss_prop%phase_fnc_clr%dim_2%EX
32175.             t$9529 = ss_prop%phase_fnc_clr%dim_3%EX
32175.             t$9534 = int( _alloc( max( 0, 8 * max( 0, ss_prop%phase_fnc_clr%dim_3%EX ) * max( 0, ss_prop%phase_fnc_clr%dim_2%EX ) * max( 0, ss_prop%phase_fnc_clr%dim_1%EX ) ) ), 8 )
32170.             call _f90_copy_from_dv( t$9533, ss_prop%phase_fnc_clr )
32175. !dir$ suppress t$9533
32175.             t$9526 = loc( t$9533 )
32175.          endif
32175.          t$9536 = 0
32175.          t$9537 = 0
32175.          t$9541 = 0
32175.          if ( ss_prop%omega_clr%header%a_contig == 1 ) then
32175. !dir$ suppress (ss_prop%omega_clr%base_addr)(ss_prop%omega_clr%dim_1%LB, ss_prop%omega_clr%dim_2%LB, 0)
32175.             t$9535 = loc( (ss_prop%omega_clr%base_addr)(ss_prop%omega_clr%dim_1%LB, ss_prop%omega_clr%dim_2%LB, 0) )
32175.          else
32175.             t$9536 = ss_prop%omega_clr%dim_1%EX
32175.             t$9537 = ss_prop%omega_clr%dim_2%EX
32175.             t$9541 = int( _alloc( max( 0, 8 * max( 0, ss_prop%omega_clr%dim_2%EX ) * max( 0, ss_prop%omega_clr%dim_1%EX ) ) ), 8 )
32170.             call _f90_copy_from_dv( t$9540, ss_prop%omega_clr )
32175. !dir$ suppress t$9540
32175.             t$9535 = loc( t$9540 )
32175.          endif
32175.          t$9543 = 0
32175.          t$9544 = 0
32175.          t$9548 = 0
32175.          if ( ss_prop%tau_clr%header%a_contig == 1 ) then
32175. !dir$ suppress (ss_prop%tau_clr%base_addr)(ss_prop%tau_clr%dim_1%LB, ss_prop%tau_clr%dim_2%LB, 0)
32175.             t$9542 = loc( (ss_prop%tau_clr%base_addr)(ss_prop%tau_clr%dim_1%LB, ss_prop%tau_clr%dim_2%LB, 0) )
32175.          else
32175.             t$9543 = ss_prop%tau_clr%dim_1%EX
32175.             t$9544 = ss_prop%tau_clr%dim_2%EX
32175.             t$9548 = int( _alloc( max( 0, 8 * max( 0, ss_prop%tau_clr%dim_2%EX ) * max( 0, ss_prop%tau_clr%dim_1%EX ) ) ), 8 )
32170.             call _f90_copy_from_dv( t$9547, ss_prop%tau_clr )
32175. !dir$ suppress t$9547
32175.             t$9542 = loc( t$9547 )
32175.          endif
32176.          t$9550 = 0
32176.          t$9551 = 0
32176.          t$9552 = 0
32176.          t$9553 = 0
32176.          t$9559 = 0
32176.          if ( ss_prop%phase_fnc%header%a_contig == 1 ) then
32176. !dir$ suppress (ss_prop%phase_fnc%base_addr)(ss_prop%phase_fnc%dim_1%LB, ss_prop%phase_fnc%dim_2%LB, ss_prop%phase_fnc%dim_3%LB, ss_prop%phase_fnc%dim_4%LB, 0)
32176.             t$9549 = loc( (ss_prop%phase_fnc%base_addr)(ss_prop%phase_fnc%dim_1%LB, ss_prop%phase_fnc%dim_2%LB, ss_prop%phase_fnc%dim_3%LB, ss_prop%phase_fnc%dim_4%LB, 0) )
32176.          else
32176.             t$9550 = ss_prop%phase_fnc%dim_1%EX
32176.             t$9551 = ss_prop%phase_fnc%dim_2%EX
32176.             t$9552 = ss_prop%phase_fnc%dim_3%EX
32176.             t$9553 = ss_prop%phase_fnc%dim_4%EX
32176.             t$9559 = int( _alloc( max( 0, 8 * max( 0, ss_prop%phase_fnc%dim_4%EX ) * max( 0, ss_prop%phase_fnc%dim_3%EX ) * max( 0, ss_prop%phase_fnc%dim_2%EX ) * max( 0, ss_prop%phase_fnc%dim_1%EX ) ) ), 8 )
32170.             call _f90_copy_from_dv( t$9558, ss_prop%phase_fnc )
32176. !dir$ suppress t$9558
32176.             t$9549 = loc( t$9558 )
32176.          endif
32176.          t$9561 = 0
32176.          t$9562 = 0
32176.          t$9563 = 0
32176.          t$9568 = 0
32176.          if ( ss_prop%omega%header%a_contig == 1 ) then
32176. !dir$ suppress (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, ss_prop%omega%dim_3%LB, 0)
32176.             t$9560 = loc( (ss_prop%omega%base_addr)(ss_prop%omega%dim_1%LB, ss_prop%omega%dim_2%LB, ss_prop%omega%dim_3%LB, 0) )
32176.          else
32176.             t$9561 = ss_prop%omega%dim_1%EX
32176.             t$9562 = ss_prop%omega%dim_2%EX
32176.             t$9563 = ss_prop%omega%dim_3%EX
32176.             t$9568 = int( _alloc( max( 0, 8 * max( 0, ss_prop%omega%dim_3%EX ) * max( 0, ss_prop%omega%dim_2%EX ) * max( 0, ss_prop%omega%dim_1%EX ) ) ), 8 )
32170.             call _f90_copy_from_dv( t$9567, ss_prop%omega )
32176. !dir$ suppress t$9567
32176.             t$9560 = loc( t$9567 )
32176.          endif
32176.          t$9570 = 0
32176.          t$9571 = 0
32176.          t$9572 = 0
32176.          t$9577 = 0
32176.          if ( ss_prop%tau%header%a_contig == 1 ) then
32176. !dir$ suppress (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, ss_prop%tau%dim_3%LB, 0)
32176.             t$9569 = loc( (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, ss_prop%tau%dim_3%LB, 0) )
32176.          else
32176.             t$9570 = ss_prop%tau%dim_1%EX
32176.             t$9571 = ss_prop%tau%dim_2%EX
32176.             t$9572 = ss_prop%tau%dim_3%EX
32176.             t$9577 = int( _alloc( max( 0, 8 * max( 0, ss_prop%tau%dim_3%EX ) * max( 0, ss_prop%tau%dim_2%EX ) * max( 0, ss_prop%tau%dim_1%EX ) ) ), 8 )
32170.             call _f90_copy_from_dv( t$9576, ss_prop%tau )
32176. !dir$ suppress t$9576
32176.             t$9569 = loc( t$9576 )
32176.          endif
32170.          call two_coeff_region( ierr, n_profile, n_layer, n_cloud_top, i_2stream, l_ir_source_quad, n_source_coeff, n_cloud_type, frac_cloud(1, id_ct, 1), n_region, i_region_cloud(1), frac_region(1, id_ct, 1), t$9526, t$9535, t$9542, t$9549, t$9560, t$9569, isolir, sec_00(1, 1), trans(1, 1, 1), reflect(1, 1, 1), trans_0(1, 1, 1), source_coeff(1, 1, 1, 1), nd_profile, nd_layer, nd_layer_clr, id_ct, nd_max_order, nd_source_coeff, nd_cloud_type, nd_region )
32176.          if ( ss_prop%tau%header%a_contig /= 1 ) then
32176.             _free( t$9577 )
32176.          endif
32176.          if ( ss_prop%omega%header%a_contig /= 1 ) then
32176.             _free( t$9568 )
32176.          endif
32176.          if ( ss_prop%phase_fnc%header%a_contig /= 1 ) then
32176.             _free( t$9559 )
32176.          endif
32175.          if ( ss_prop%tau_clr%header%a_contig /= 1 ) then
32175.             _free( t$9548 )
32175.          endif
32175.          if ( ss_prop%omega_clr%header%a_contig /= 1 ) then
32175.             _free( t$9541 )
32175.          endif
32175.          if ( ss_prop%phase_fnc_clr%header%a_contig /= 1 ) then
32175.             _free( t$9534 )
32175.          endif
32183.       else if ( i_scatter_method == 2 ) then
32189.          t$9579 = 0
32189.          t$9580 = 0
32189.          t$9584 = 0
32189.          if ( ss_prop%tau_clr%header%a_contig == 1 ) then
32189. !dir$ suppress (ss_prop%tau_clr%base_addr)(ss_prop%tau_clr%dim_1%LB, ss_prop%tau_clr%dim_2%LB, 0)
32189.             t$9578 = loc( (ss_prop%tau_clr%base_addr)(ss_prop%tau_clr%dim_1%LB, ss_prop%tau_clr%dim_2%LB, 0) )
32189.          else
32189.             t$9579 = ss_prop%tau_clr%dim_1%EX
32189.             t$9580 = ss_prop%tau_clr%dim_2%EX
32189.             t$9584 = int( _alloc( max( 0, 8 * max( 0, ss_prop%tau_clr%dim_2%EX ) * max( 0, ss_prop%tau_clr%dim_1%EX ) ) ), 8 )
32184.             call _f90_copy_from_dv( t$9583, ss_prop%tau_clr )
32189. !dir$ suppress t$9583
32189.             t$9578 = loc( t$9583 )
32189.          endif
32189.          t$9586 = 0
32189.          t$9587 = 0
32189.          t$9588 = 0
32189.          t$9593 = 0
32189.          if ( ss_prop%tau%header%a_contig == 1 ) then
32189. !dir$ suppress (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, ss_prop%tau%dim_3%LB, 0)
32189.             t$9585 = loc( (ss_prop%tau%base_addr)(ss_prop%tau%dim_1%LB, ss_prop%tau%dim_2%LB, ss_prop%tau%dim_3%LB, 0) )
32189.          else
32189.             t$9586 = ss_prop%tau%dim_1%EX
32189.             t$9587 = ss_prop%tau%dim_2%EX
32189.             t$9588 = ss_prop%tau%dim_3%EX
32189.             t$9593 = int( _alloc( max( 0, 8 * max( 0, ss_prop%tau%dim_3%EX ) * max( 0, ss_prop%tau%dim_2%EX ) * max( 0, ss_prop%tau%dim_1%EX ) ) ), 8 )
32184.             call _f90_copy_from_dv( t$9592, ss_prop%tau )
32189. !dir$ suppress t$9592
32189.             t$9585 = loc( t$9592 )
32189.          endif
32184.          call two_coeff_region_fast_lw( ierr, n_profile, n_layer, n_cloud_top, l_ir_source_quad, n_source_coeff, n_cloud_type, frac_cloud(1, id_ct, 1), n_region, i_region_cloud(1), frac_region(1, id_ct, 1), t$9578, t$9585, isolir, trans(1, 1, 1), reflect(1, 1, 1), source_coeff(1, 1, 1, 1), nd_profile, nd_layer, nd_layer_clr, id_ct, nd_source_coeff, nd_cloud_type, nd_region )
32189.          if ( ss_prop%tau%header%a_contig /= 1 ) then
32189.             _free( t$9593 )
32189.          endif
32189.          if ( ss_prop%tau_clr%header%a_contig /= 1 ) then
32189.             _free( t$9584 )
32189.          endif
32189.       endif
32196.       if ( ierr /= 0 ) then
31946.          _free( t$4120 )
31946.       else
32199.          if ( isolir == 2 ) then
32201.             if ( n_region > 0 ) then
32208.                if ( l_ir_source_quad /= .false. ) then
32208.                   if ( nd_layer <= 0 ) then
32201.                      $I_L32201_98 = 0
32201.                      do
32208.                         tm$3389 = loc( source_coeff(1, 1, 1, 1 + $I_L32201_98) )
32208.                         source_coeff = _copyin( source_coeff(1, 1, 1, 1 + $I_L32201_98) )
32208.                         tm$3391 = loc( s_down(1, 1, 1 + $I_L32201_98) )
32208.                         s_down = _copyin( s_down(1, 1, 1 + $I_L32201_98) )
32208.                         tm$3393 = loc( s_up(1, 1, 1 + $I_L32201_98) )
32208.                         s_up = _copyin( s_up(1, 1, 1 + $I_L32201_98) )
32208.                         t$582 = nd_profile
32208.                         t$583 = nd_layer
32208.                         t$584 = nd_source_coeff
32208.                         t$2206 = max( 0, nd_profile )
32208.                         t$2207 = max( 0, nd_profile )
32208.                         t$2208 = max( 0, nd_layer )
32208.                         t$2209 = max( 0, nd_profile ) * max( 0, nd_layer )
32208.                         t$2210 = max( 0, nd_source_coeff )
32208.                         t$2211 = max( 0, nd_profile ) * max( 0, nd_layer ) * max( 0, nd_source_coeff )
32208.                         t$2212 = max( 0, nd_profile ) * max( 0, nd_layer )
32208.                         s_up(1, 1, 1 + $I_L32201_98) = _copyout( s_up )
32208.                         s_down(1, 1, 1 + $I_L32201_98) = _copyout( s_down )
32208.                         source_coeff(1, 1, 1, 1 + $I_L32201_98) = _copyout( source_coeff )
32214.                         $I_L32201_98 = 1 + $I_L32201_98
32208.                         if ( $I_L32201_98 >= n_region ) exit
32208.                      enddo
32208.                   else if ( nd_profile > 0 ) then
32201.                      $I_L32201_114 = 0
32201.                      do
32208.                         tm$3389 = loc( source_coeff(1, 1, 1, 1 + $I_L32201_114) )
32208.                         source_coeff = _copyin( source_coeff(1, 1, 1, 1 + $I_L32201_114) )
32208.                         tm$3391 = loc( s_down(1, 1, 1 + $I_L32201_114) )
32208.                         s_down = _copyin( s_down(1, 1, 1 + $I_L32201_114) )
32208.                         tm$3393 = loc( s_up(1, 1, 1 + $I_L32201_114) )
32208.                         s_up = _copyin( s_up(1, 1, 1 + $I_L32201_114) )
32208.                         t$582 = nd_profile
32208.                         t$583 = nd_layer
32208.                         t$584 = nd_source_coeff
32208.                         t$2206 = max( 0, nd_profile )
32208.                         t$2207 = max( 0, nd_profile )
32208.                         t$2208 = max( 0, nd_layer )
32208.                         t$2209 = max( 0, nd_profile ) * max( 0, nd_layer )
32208.                         t$2210 = max( 0, nd_source_coeff )
32208.                         t$2211 = max( 0, nd_profile ) * max( 0, nd_layer ) * max( 0, nd_source_coeff )
32208.                         t$2212 = max( 0, nd_profile ) * max( 0, nd_layer )
32208.                         $I_L32208_106 = 0
32208.                         do
32208.                            $I_L32208_86 = 0
32208. !dir$ ivdep
32208.                            do
32208.                               s_up(1 + $I_L32208_86, 1 + $I_L32208_106) = diff_planck_2(1 + $I_L32208_86, 1 + $I_L32208_106) * source_coeff(1 + $I_L32208_86, 1 + $I_L32208_106, 2) + diff_planck(1 + $I_L32208_86, 1 + $I_L32208_106) * source_coeff(1 + $I_L32208_86, 1 + $I_L32208_106, 1)
32208.                               s_down(1 + $I_L32208_86, 1 + $I_L32208_106) = -( diff_planck(1 + $I_L32208_86, 1 + $I_L32208_106) * source_coeff(1 + $I_L32208_86, 1 + $I_L32208_106, 1) ) + diff_planck_2(1 + $I_L32208_86, 1 + $I_L32208_106) * source_coeff(1 + $I_L32208_86, 1 + $I_L32208_106, 2)
32208.                               $I_L32208_86 = 1 + $I_L32208_86
32208.                               if ( $I_L32208_86 >= nd_profile ) exit
32208.                            enddo
32208.                            $I_L32208_106 = 1 + $I_L32208_106
32208.                            if ( $I_L32208_106 >= nd_layer ) exit
32208.                         enddo
32208.                         s_up(1, 1, 1 + $I_L32201_114) = _copyout( s_up )
32208.                         s_down(1, 1, 1 + $I_L32201_114) = _copyout( s_down )
32208.                         source_coeff(1, 1, 1, 1 + $I_L32201_114) = _copyout( source_coeff )
32214.                         $I_L32201_114 = 1 + $I_L32201_114
32208.                         if ( $I_L32201_114 >= n_region ) exit
32208.                      enddo
32208.                   else
32201.                      $I_L32201_102 = 0
32201.                      do
32208.                         tm$3389 = loc( source_coeff(1, 1, 1, 1 + $I_L32201_102) )
32208.                         source_coeff = _copyin( source_coeff(1, 1, 1, 1 + $I_L32201_102) )
32208.                         tm$3391 = loc( s_down(1, 1, 1 + $I_L32201_102) )
32208.                         s_down = _copyin( s_down(1, 1, 1 + $I_L32201_102) )
32208.                         tm$3393 = loc( s_up(1, 1, 1 + $I_L32201_102) )
32208.                         s_up = _copyin( s_up(1, 1, 1 + $I_L32201_102) )
32208.                         t$582 = nd_profile
32208.                         t$583 = nd_layer
32208.                         t$584 = nd_source_coeff
32208.                         t$2206 = max( 0, nd_profile )
32208.                         t$2207 = max( 0, nd_profile )
32208.                         t$2208 = max( 0, nd_layer )
32208.                         t$2209 = max( 0, nd_profile ) * max( 0, nd_layer )
32208.                         t$2210 = max( 0, nd_source_coeff )
32208.                         t$2211 = max( 0, nd_profile ) * max( 0, nd_layer ) * max( 0, nd_source_coeff )
32208.                         t$2212 = max( 0, nd_profile ) * max( 0, nd_layer )
32208.                         s_up(1, 1, 1 + $I_L32201_102) = _copyout( s_up )
32208.                         s_down(1, 1, 1 + $I_L32201_102) = _copyout( s_down )
32208.                         source_coeff(1, 1, 1, 1 + $I_L32201_102) = _copyout( source_coeff )
32214.                         $I_L32201_102 = 1 + $I_L32201_102
32208.                         if ( $I_L32201_102 >= n_region ) exit
32208.                      enddo
32208.                   endif
32208.                else if ( nd_layer <= 0 ) then
32201.                   $I_L32201_100 = 0
32201.                   do
32208.                      tm$3389 = loc( source_coeff(1, 1, 1, 1 + $I_L32201_100) )
32208.                      source_coeff = _copyin( source_coeff(1, 1, 1, 1 + $I_L32201_100) )
32208.                      tm$3391 = loc( s_down(1, 1, 1 + $I_L32201_100) )
32208.                      s_down = _copyin( s_down(1, 1, 1 + $I_L32201_100) )
32208.                      tm$3393 = loc( s_up(1, 1, 1 + $I_L32201_100) )
32208.                      s_up = _copyin( s_up(1, 1, 1 + $I_L32201_100) )
32208.                      t$582 = nd_profile
32208.                      t$583 = nd_layer
32208.                      t$584 = nd_source_coeff
32208.                      t$2206 = max( 0, nd_profile )
32208.                      t$2207 = max( 0, nd_profile )
32208.                      t$2208 = max( 0, nd_layer )
32208.                      t$2209 = max( 0, nd_profile ) * max( 0, nd_layer )
32208.                      t$2210 = max( 0, nd_source_coeff )
32208.                      t$2211 = max( 0, nd_profile ) * max( 0, nd_layer ) * max( 0, nd_source_coeff )
32208.                      t$2212 = max( 0, nd_profile ) * max( 0, nd_layer )
32208.                      s_up(1, 1, 1 + $I_L32201_100) = _copyout( s_up )
32208.                      s_down(1, 1, 1 + $I_L32201_100) = _copyout( s_down )
32208.                      source_coeff(1, 1, 1, 1 + $I_L32201_100) = _copyout( source_coeff )
32214.                      $I_L32201_100 = 1 + $I_L32201_100
32208.                      if ( $I_L32201_100 >= n_region ) exit
32208.                   enddo
32208.                else if ( nd_profile > 0 ) then
32201.                   $I_L32201_116 = 0
32201.                   do
32208.                      tm$3389 = loc( source_coeff(1, 1, 1, 1 + $I_L32201_116) )
32208.                      source_coeff = _copyin( source_coeff(1, 1, 1, 1 + $I_L32201_116) )
32208.                      tm$3391 = loc( s_down(1, 1, 1 + $I_L32201_116) )
32208.                      s_down = _copyin( s_down(1, 1, 1 + $I_L32201_116) )
32208.                      tm$3393 = loc( s_up(1, 1, 1 + $I_L32201_116) )
32208.                      s_up = _copyin( s_up(1, 1, 1 + $I_L32201_116) )
32208.                      t$582 = nd_profile
32208.                      t$583 = nd_layer
32208.                      t$584 = nd_source_coeff
32208.                      t$2206 = max( 0, nd_profile )
32208.                      t$2207 = max( 0, nd_profile )
32208.                      t$2208 = max( 0, nd_layer )
32208.                      t$2209 = max( 0, nd_profile ) * max( 0, nd_layer )
32208.                      t$2210 = max( 0, nd_source_coeff )
32208.                      t$2211 = max( 0, nd_profile ) * max( 0, nd_layer ) * max( 0, nd_source_coeff )
32208.                      t$2212 = max( 0, nd_profile ) * max( 0, nd_layer )
32208.                      $I_L32208_112 = 0
32208.                      do
32208.                         $I_L32208_96 = 0
32208. !dir$ ivdep
32208.                         do
32208.                            $s_up_WR0_R0 = diff_planck(1 + $I_L32208_96, 1 + $I_L32208_112) * source_coeff(1 + $I_L32208_96, 1 + $I_L32208_112, 1)
32208.                            s_up(1 + $I_L32208_96, 1 + $I_L32208_112) = $s_up_WR0_R0
32208.                            s_down(1 + $I_L32208_96, 1 + $I_L32208_112) = -$s_up_WR0_R0
32208.                            $I_L32208_96 = 1 + $I_L32208_96
32208.                            if ( $I_L32208_96 >= nd_profile ) exit
32208.                         enddo
32208.                         $I_L32208_112 = 1 + $I_L32208_112
32208.                         if ( $I_L32208_112 >= nd_layer ) exit
32208.                      enddo
32208.                      s_up(1, 1, 1 + $I_L32201_116) = _copyout( s_up )
32208.                      s_down(1, 1, 1 + $I_L32201_116) = _copyout( s_down )
32208.                      source_coeff(1, 1, 1, 1 + $I_L32201_116) = _copyout( source_coeff )
32214.                      $I_L32201_116 = 1 + $I_L32201_116
32208.                      if ( $I_L32201_116 >= n_region ) exit
32208.                   enddo
32208.                else
32201.                   $I_L32201_104 = 0
32201.                   do
32208.                      tm$3389 = loc( source_coeff(1, 1, 1, 1 + $I_L32201_104) )
32208.                      source_coeff = _copyin( source_coeff(1, 1, 1, 1 + $I_L32201_104) )
32208.                      tm$3391 = loc( s_down(1, 1, 1 + $I_L32201_104) )
32208.                      s_down = _copyin( s_down(1, 1, 1 + $I_L32201_104) )
32208.                      tm$3393 = loc( s_up(1, 1, 1 + $I_L32201_104) )
32208.                      s_up = _copyin( s_up(1, 1, 1 + $I_L32201_104) )
32208.                      t$582 = nd_profile
32208.                      t$583 = nd_layer
32208.                      t$584 = nd_source_coeff
32208.                      t$2206 = max( 0, nd_profile )
32208.                      t$2207 = max( 0, nd_profile )
32208.                      t$2208 = max( 0, nd_layer )
32208.                      t$2209 = max( 0, nd_profile ) * max( 0, nd_layer )
32208.                      t$2210 = max( 0, nd_source_coeff )
32208.                      t$2211 = max( 0, nd_profile ) * max( 0, nd_layer ) * max( 0, nd_source_coeff )
32208.                      t$2212 = max( 0, nd_profile ) * max( 0, nd_layer )
32208.                      s_up(1, 1, 1 + $I_L32201_104) = _copyout( s_up )
32208.                      s_down(1, 1, 1 + $I_L32201_104) = _copyout( s_down )
32208.                      source_coeff(1, 1, 1, 1 + $I_L32201_104) = _copyout( source_coeff )
32214.                      $I_L32201_104 = 1 + $I_L32201_104
32208.                      if ( $I_L32201_104 >= n_region ) exit
32208.                   enddo
32208.                endif
32208.             endif
32220.             if ( l_clear /= .false. ) then
32222.                if ( nd_layer > 0 ) then
32223.                   if ( nd_profile > 0 ) then
32222.                      $I_L32222_108 = 0
32222.                      do
32223.                         $I_L32223_88 = 0
32223. !dir$ ivdep
32223.                         do
32224.                            s_down_clear(1 + $I_L32223_88, 1 + $I_L32222_108) = s_down(1 + $I_L32223_88, 1 + $I_L32222_108, 1)
32225.                            s_up_clear(1 + $I_L32223_88, 1 + $I_L32222_108) = s_up(1 + $I_L32223_88, 1 + $I_L32222_108, 1)
32226.                            $I_L32223_88 = 1 + $I_L32223_88
32223.                            if ( $I_L32223_88 >= nd_profile ) exit
32223.                         enddo
32227.                         $I_L32222_108 = 1 + $I_L32222_108
32226.                         if ( $I_L32222_108 >= nd_layer ) exit
32226.                      enddo
32226.                   endif
32226.                endif
32226.             endif
32230.             if ( nd_layer > 0 ) then
32231.                if ( nd_profile > 0 ) then
32230.                   $I_L32230_110 = 0
32230.                   do
32231.                      $I_L32231_90 = 0
32231. !dir$ ivdep
32231.                      do
32232.                         s_down(1 + $I_L32231_90, 1 + $I_L32230_110, 1) = s_down(1 + $I_L32231_90, 1 + $I_L32230_110, 1) * w_free(1 + $I_L32231_90, 1 + $I_L32230_110)
32236.                         s_down(1 + $I_L32231_90, 1 + $I_L32230_110, 2) = w_cloud(1 + $I_L32231_90, 1 + $I_L32230_110) * s_down(1 + $I_L32231_90, 1 + $I_L32230_110, 2) * frac_region(1 + $I_L32231_90, 1 + $I_L32230_110, 2)
32244.                         s_down(1 + $I_L32231_90, 1 + $I_L32230_110, 3) = w_cloud(1 + $I_L32231_90, 1 + $I_L32230_110) * s_down(1 + $I_L32231_90, 1 + $I_L32230_110, 3) * frac_region(1 + $I_L32231_90, 1 + $I_L32230_110, 3)
32234.                         s_up(1 + $I_L32231_90, 1 + $I_L32230_110, 1) = w_free(1 + $I_L32231_90, 1 + $I_L32230_110) * s_up(1 + $I_L32231_90, 1 + $I_L32230_110, 1)
32240.                         s_up(1 + $I_L32231_90, 1 + $I_L32230_110, 2) = w_cloud(1 + $I_L32231_90, 1 + $I_L32230_110) * frac_region(1 + $I_L32231_90, 1 + $I_L32230_110, 2) * s_up(1 + $I_L32231_90, 1 + $I_L32230_110, 2)
32248.                         s_up(1 + $I_L32231_90, 1 + $I_L32230_110, 3) = w_cloud(1 + $I_L32231_90, 1 + $I_L32230_110) * frac_region(1 + $I_L32231_90, 1 + $I_L32230_110, 3) * s_up(1 + $I_L32231_90, 1 + $I_L32230_110, 3)
32252.                         $I_L32231_90 = 1 + $I_L32231_90
32231.                         if ( $I_L32231_90 >= nd_profile ) exit
32231.                      enddo
32253.                      $I_L32230_110 = 1 + $I_L32230_110
32252.                      if ( $I_L32230_110 >= nd_layer ) exit
32252.                   enddo
32252.                endif
32252.             endif
32252.          endif
32261.          if ( isolir == 1 ) then
32263.             call triple_solar_source( n_profile, n_layer, n_cloud_top, n_region, flux_inc_direct(1), l_scale_solar, adjust_solar_ke(1, 1), trans_0(1, 1, 1), source_coeff(1, 1, 1, 1), cloud_overlap(1, -1 + id_ct, 1), cloud_overlap(1, -1 + id_ct, 2), cloud_overlap(1, -1 + id_ct, 3), cloud_overlap(1, -1 + id_ct, 4), cloud_overlap(1, -1 + id_ct, 5), cloud_overlap(1, -1 + id_ct, 6), cloud_overlap(1, -1 + id_ct, 7), cloud_overlap(1, -1 + id_ct, 8), cloud_overlap(1, -1 + id_ct, 9), flux_direct(1, 0), flux_direct_ground(1, 1), s_up(1, 1, 1), s_down(1, 1, 1), nd_profile, nd_layer, id_ct, nd_source_coeff, nd_region )
32284.             if ( n_profile > 0 ) then
32284.                $I_L32284_92 = 0
32284. !dir$ ivdep
32284.                do
32285.                   source_flux_ground(1 + $I_L32284_92, 1) = flux_direct_ground(1 + $I_L32284_92, 1) * ( direct_albedo(1 + $I_L32284_92) + -diffuse_albedo(1 + $I_L32284_92) )
32288.                   source_flux_ground(1 + $I_L32284_92, 2) = flux_direct_ground(1 + $I_L32284_92, 2) * ( direct_albedo(1 + $I_L32284_92) + -diffuse_albedo(1 + $I_L32284_92) )
32291.                   source_flux_ground(1 + $I_L32284_92, 3) = flux_direct_ground(1 + $I_L32284_92, 3) * ( direct_albedo(1 + $I_L32284_92) + -diffuse_albedo(1 + $I_L32284_92) )
32294.                   $I_L32284_92 = 1 + $I_L32284_92
32284.                   if ( $I_L32284_92 >= n_profile ) exit
32284.                enddo
32284.             endif
32295.          else if ( n_profile > 0 ) then
32296.             $I_L32296_94 = 0
32296. !dir$ ivdep
32296.             do
32297.                source_flux_ground(1 + $I_L32296_94, 1) = d_planck_flux_surface(1 + $I_L32296_94) * cloud_overlap(1 + $I_L32296_94, n_layer, 10) * ( 1.0 + -diffuse_albedo(1 + $I_L32296_94) )
32301.                source_flux_ground(1 + $I_L32296_94, 2) = d_planck_flux_surface(1 + $I_L32296_94) * cloud_overlap(1 + $I_L32296_94, n_layer, 13) * ( 1.0 + -diffuse_albedo(1 + $I_L32296_94) )
32305.                source_flux_ground(1 + $I_L32296_94, 3) = cloud_overlap(1 + $I_L32296_94, n_layer, 16) * d_planck_flux_surface(1 + $I_L32296_94) * ( 1.0 + -diffuse_albedo(1 + $I_L32296_94) )
32309.                $I_L32296_94 = 1 + $I_L32296_94
32296.                if ( $I_L32296_94 >= n_profile ) exit
32296.             enddo
32296.          endif
32314.          if ( i_solver == 15 ) then
32402.             call solver_triple_app_scat( n_profile, n_layer, n_cloud_top, trans(1, 1, 1), reflect(1, 1, 1), s_down(1, 1, 1), s_up(1, 1, 1), trans(1, 1, 2), reflect(1, 1, 2), s_down(1, 1, 2), s_up(1, 1, 2), trans(1, 1, 3), reflect(1, 1, 3), s_down(1, 1, 3), s_up(1, 1, 3), cloud_overlap(1, -1 + id_ct, 1), cloud_overlap(1, -1 + id_ct, 2), cloud_overlap(1, -1 + id_ct, 3), cloud_overlap(1, -1 + id_ct, 4), cloud_overlap(1, -1 + id_ct, 5), cloud_overlap(1, -1 + id_ct, 6), cloud_overlap(1, -1 + id_ct, 7), cloud_overlap(1, -1 + id_ct, 8), cloud_overlap(1, -1 + id_ct, 9), cloud_overlap(1, -1 + id_ct, 10), cloud_overlap(1, -1 + id_ct, 11), cloud_overlap(1, -1 + id_ct, 12), cloud_overlap(1, -1 + id_ct, 13), cloud_overlap(1, -1 + id_ct, 14), cloud_overlap(1, -1 + id_ct, 15), cloud_overlap(1, -1 + id_ct, 16), cloud_overlap(1, -1 + id_ct, 17), cloud_overlap(1, -1 + id_ct, 18), flux_inc_down(1), source_flux_ground(1, 1), source_flux_ground(1, 2), source_flux_ground(1, 3), diffuse_albedo(1), flux_total(1, 1), nd_profile, nd_layer, id_ct )
32402.             goto 10
32358.          else if ( i_solver == 17 ) then
32360.             call solver_triple_hogan( n_profile, n_layer, n_cloud_top, trans(1, 1, 1), reflect(1, 1, 1), s_down(1, 1, 1), s_up(1, 1, 1), trans(1, 1, 2), reflect(1, 1, 2), s_down(1, 1, 2), s_up(1, 1, 2), trans(1, 1, 3), reflect(1, 1, 3), s_down(1, 1, 3), s_up(1, 1, 3), cloud_overlap(1, -1 + id_ct, 1), cloud_overlap(1, -1 + id_ct, 2), cloud_overlap(1, -1 + id_ct, 3), cloud_overlap(1, -1 + id_ct, 4), cloud_overlap(1, -1 + id_ct, 5), cloud_overlap(1, -1 + id_ct, 6), cloud_overlap(1, -1 + id_ct, 7), cloud_overlap(1, -1 + id_ct, 8), cloud_overlap(1, -1 + id_ct, 9), cloud_overlap(1, -1 + id_ct, 10), cloud_overlap(1, -1 + id_ct, 11), cloud_overlap(1, -1 + id_ct, 12), cloud_overlap(1, -1 + id_ct, 13), cloud_overlap(1, -1 + id_ct, 14), cloud_overlap(1, -1 + id_ct, 15), cloud_overlap(1, -1 + id_ct, 16), cloud_overlap(1, -1 + id_ct, 17), cloud_overlap(1, -1 + id_ct, 18), flux_inc_down(1), source_flux_ground(1, 1), source_flux_ground(1, 2), source_flux_ground(1, 3), diffuse_albedo(1), flux_total(1, 1), nd_profile, nd_layer, id_ct )
32360.             goto 10
32360.          else if ( i_solver == 14 ) then
32318.             call solver_triple( n_profile, n_layer, n_cloud_top, trans(1, 1, 1), reflect(1, 1, 1), s_down(1, 1, 1), s_up(1, 1, 1), trans(1, 1, 2), reflect(1, 1, 2), s_down(1, 1, 2), s_up(1, 1, 2), trans(1, 1, 3), reflect(1, 1, 3), s_down(1, 1, 3), s_up(1, 1, 3), cloud_overlap(1, -1 + id_ct, 1), cloud_overlap(1, -1 + id_ct, 2), cloud_overlap(1, -1 + id_ct, 3), cloud_overlap(1, -1 + id_ct, 4), cloud_overlap(1, -1 + id_ct, 5), cloud_overlap(1, -1 + id_ct, 6), cloud_overlap(1, -1 + id_ct, 7), cloud_overlap(1, -1 + id_ct, 8), cloud_overlap(1, -1 + id_ct, 9), cloud_overlap(1, -1 + id_ct, 10), cloud_overlap(1, -1 + id_ct, 11), cloud_overlap(1, -1 + id_ct, 12), cloud_overlap(1, -1 + id_ct, 13), cloud_overlap(1, -1 + id_ct, 14), cloud_overlap(1, -1 + id_ct, 15), cloud_overlap(1, -1 + id_ct, 16), cloud_overlap(1, -1 + id_ct, 17), cloud_overlap(1, -1 + id_ct, 18), flux_inc_down(1), source_flux_ground(1, 1), source_flux_ground(1, 2), source_flux_ground(1, 3), diffuse_albedo(1), flux_total(1, 1), nd_profile, nd_layer, id_ct )
32318.    10       continue
32453.             if ( l_clear /= .false. ) then
32455.                call clear_supplement( ierr, n_profile, n_layer, i_solver_clear, trans(1, 1, 1), reflect(1, 1, 1), trans_0(1, 1, 1), source_coeff(1, 1, 1, 1), isolir, flux_inc_direct(1), flux_inc_down(1), s_down_clear(1, 1), s_up_clear(1, 1), diffuse_albedo(1), direct_albedo(1), d_planck_flux_surface(1), l_scale_solar, adjust_solar_ke(1, 1), flux_direct_clear(1, 0), flux_total_clear(1, 1), nd_profile, nd_layer, nd_source_coeff )
32455.             endif
31946.             _free( t$4120 )
31946.          else
32444.             _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$967,  _substr(t$966,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: The solver specified is not valid here.', 0x800600000000L ) ) )
32446.             ierr = 1
31946.             _free( t$4120 )
31946.          endif
31946.       endif
32473.       return
32473.       end
32473.       
32493.       
32493.       subroutine triple_solar_source( n_profile, n_layer, n_cloud_top, n_region, flux_inc_direct, l_scale_solar, adjust_solar_ke, trans_0, source_coeff, v11, v12, v13, v21, v22, v23, v31, v32, v33, flux_direct, flux_direct_ground, s_up, s_down, nd_profile, nd_layer, id_ct, nd_source_coeff, nd_region )
32493.       t$968 = nd_profile
32549.       t$4155 = _zla( 0, nd_profile )
32493.       t$969 = nd_layer
32493.       t$4156 = _zla( 0, nd_profile )
32545.       t$4157 = _zla( 0, nd_layer )
32493.       t$4158 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
32493.       t$970 = nd_region
32493.       t$4159 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
32554.       t$4160 = _zla( 0, nd_region )
32493.       t$4161 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_region )
32493.       t$971 = nd_source_coeff
32556.       t$4162 = _zla( 0, nd_source_coeff )
32493.       t$4163 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff )
32493.       t$4164 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_region ) * _zla( 0, nd_source_coeff )
32493.       t$972 = ( -1 + id_ct )
32493.       t$4165 = 2 + nd_layer + -id_ct
32562.       t$4166 = _zla( 0, 2 + nd_layer + -id_ct )
32493.       t$4167 = _zla( 0, nd_profile ) * _zla( 0, 2 + nd_layer + -id_ct )
32493.       t$4168 = 1 + nd_layer
32583.       t$4169 = _zla( 0, 1 + nd_layer )
32493.       t$4170 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
32493.       t$4171 = _zla( 0, nd_profile ) * _zla( 0, nd_region )
32493.       t$4172 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
32493.       t$4173 = _zla( 0, nd_profile ) * _zla( 0, nd_region ) * _zla( 0, 1 + nd_layer )
32605.       t$4176 = 8 * _zla( 0, nd_profile ) * _zla( 0, nd_region ) * _zla( 0, 1 + nd_layer )
32603.       t$4177 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_region ) * _zla( 0, 1 + nd_layer ) ) / 8
32603.       t$4179 = t$4177 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_region ) * _zla( 0, 1 + nd_layer )
32493.       t$4174 = int( _alloc( t$4177 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_region ) * _zla( 0, 1 + nd_layer ) ), 8 )
32605.       t$4175 = t$4174
32603.       t$4178 = t$4177 + t$4174
32613.       if ( n_profile > 0 ) then
32613.          $I_L32613_142 = 0
32613. !dir$ ivdep
32613. !dir$ loop_info (automatic) cache_nt( solar_base, flux_direct )
32613.          do
32614.             $flux_direct_WR0_R0 = flux_inc_direct(1 + $I_L32613_142)
32614.             flux_direct(1 + $I_L32613_142, 0) = $flux_direct_WR0_R0
32627.             solar_base(1 + $I_L32613_142, 0, 1) = $flux_direct_WR0_R0
32628.             solar_base(1 + $I_L32613_142, 0, 2) = 0.0
32629.             solar_base(1 + $I_L32613_142, 0, 3) = 0.0
32615.             $I_L32613_142 = 1 + $I_L32613_142
32613.             if ( $I_L32613_142 >= n_profile ) exit
32613.          enddo
32613.       endif
32633.       if ( nd_layer > 0 ) then
32633.          $I_L32633_180 = 0
32633.          do
32637.             if ( nd_profile > 0 ) then
32637.                $I_L32637_144 = 0
32637. !dir$ ivdep
32637. !dir$ loop_info (automatic) cache_nt( v33, v32, v31, v23, v22, v21, v13, v12, v11 )
32637.                do
32638.                   solar_top(1 + $I_L32637_144, 1 + $I_L32633_180, 1) = solar_base(1 + $I_L32637_144, $I_L32633_180, 3) * v13(1 + $I_L32637_144, $I_L32633_180) + solar_base(1 + $I_L32637_144, $I_L32633_180, 2) * v12(1 + $I_L32637_144, $I_L32633_180) + solar_base(1 + $I_L32637_144, $I_L32633_180, 1) * v11(1 + $I_L32637_144, $I_L32633_180)
32642.                   solar_top(1 + $I_L32637_144, 1 + $I_L32633_180, 2) = solar_base(1 + $I_L32637_144, $I_L32633_180, 3) * v23(1 + $I_L32637_144, $I_L32633_180) + solar_base(1 + $I_L32637_144, $I_L32633_180, 2) * v22(1 + $I_L32637_144, $I_L32633_180) + solar_base(1 + $I_L32637_144, $I_L32633_180, 1) * v21(1 + $I_L32637_144, $I_L32633_180)
32646.                   solar_top(1 + $I_L32637_144, 1 + $I_L32633_180, 3) = solar_base(1 + $I_L32637_144, $I_L32633_180, 3) * v33(1 + $I_L32637_144, $I_L32633_180) + solar_base(1 + $I_L32637_144, $I_L32633_180, 2) * v32(1 + $I_L32637_144, $I_L32633_180) + solar_base(1 + $I_L32637_144, $I_L32633_180, 1) * v31(1 + $I_L32637_144, $I_L32633_180)
32650.                   $I_L32637_144 = 1 + $I_L32637_144
32637.                   if ( $I_L32637_144 >= nd_profile ) exit
32637.                enddo
32637.             endif
32655.             if ( l_scale_solar /= .false. ) then
32657.                if ( n_region > 0 ) then
32658.                   if ( nd_profile > 0 ) then
32657.                      $I_L32657_178 = 0
32657.                      do
32658.                         $I_L32658_172 = 0
32658.                         do
32657.                            $I_L32657_182 = 0
32657. !dir$ shortloop16
32657. !dir$ blocking_size( 2, 2 )
32657.                            do
32658.                               $I_L32658_148 = 0
32658. !dir$ ivdep
32658. !dir$ loop_info (automatic) cache_nt( trans_0 )
32658. !dir$ blocking_size( 256, 256 )
32658.                               do
32659.                                  solar_base(1 + $I_L32658_148 + 256 * $I_L32658_172, 1 + $I_L32633_180, 1 + $I_L32657_182 + 2 * $I_L32657_178) = adjust_solar_ke(1 + $I_L32658_148 + 256 * $I_L32658_172, 1 + $I_L32633_180) * solar_top(1 + $I_L32658_148 + 256 * $I_L32658_172, 1 + $I_L32633_180, 1 + $I_L32657_182 + 2 * $I_L32657_178) * trans_0(1 + $I_L32658_148 + 256 * $I_L32658_172, 1 + $I_L32633_180, 1 + $I_L32657_182 + 2 * $I_L32657_178)
32658.                                  $I_L32658_148 = 1 + $I_L32658_148
32658.                                  if ( $I_L32658_148 >= min( nd_profile, 256 + 256 * $I_L32658_172 ) + -256 * $I_L32658_172 ) exit
32658.                               enddo
32657.                               $I_L32657_182 = 1 + $I_L32657_182
32657.                               if ( $I_L32657_182 >= min( n_region, 2 + 2 * $I_L32657_178 ) + -2 * $I_L32657_178 ) exit
32657.                            enddo
32658.                            $I_L32658_172 = 1 + $I_L32658_172
32662.                            if ( $I_L32658_172 >= 1 + max( 0, -1 + _rsh( 255 + nd_profile, 8 ) ) ) exit
32662.                         enddo
32657.                         $I_L32657_178 = 1 + $I_L32657_178
32657.                         if ( $I_L32657_178 >= 1 + max( 0, -1 + _rsh( 1 + n_region, 1 ) ) ) exit
32657.                      enddo
32657.                   endif
32657.                endif
32665.             else if ( n_region > 0 ) then
32668.                if ( nd_profile > 0 ) then
32667.                   $I_L32667_159 = 0
32667.                   do
32668.                      $I_L32668_146 = 0
32668. !dir$ ivdep
32668. !dir$ loop_info (automatic) cache_nt( trans_0 )
32668.                      do
32669.                         solar_base(1 + $I_L32668_146, 1 + $I_L32633_180, 1 + $I_L32667_159) = trans_0(1 + $I_L32668_146, 1 + $I_L32633_180, 1 + $I_L32667_159) * solar_top(1 + $I_L32668_146, 1 + $I_L32633_180, 1 + $I_L32667_159)
32671.                         $I_L32668_146 = 1 + $I_L32668_146
32668.                         if ( $I_L32668_146 >= nd_profile ) exit
32668.                      enddo
32672.                      $I_L32667_159 = 1 + $I_L32667_159
32671.                      if ( $I_L32667_159 >= n_region ) exit
32671.                   enddo
32671.                endif
32671.             endif
32675.             $I_L32633_180 = 1 + $I_L32633_180
32674.             if ( $I_L32633_180 >= nd_layer ) exit
32674.          enddo
32714.          if ( nd_profile > 0 ) then
32713.             $I_L32713_165 = 0
32713.             do
32714.                $I_L32714_155 = 0
32714. !dir$ ivdep
32714.                do
32715.                   flux_direct(1 + $I_L32714_155, 1 + $I_L32713_165) = solar_base(1 + $I_L32714_155, 1 + $I_L32713_165, 3) + solar_base(1 + $I_L32714_155, 1 + $I_L32713_165, 2) + solar_base(1 + $I_L32714_155, 1 + $I_L32713_165, 1)
32718.                   $I_L32714_155 = 1 + $I_L32714_155
32714.                   if ( $I_L32714_155 >= nd_profile ) exit
32714.                enddo
32720.                $I_L32713_165 = 1 + $I_L32713_165
32718.                if ( $I_L32713_165 >= nd_layer ) exit
32718.             enddo
32718.          endif
32718.       endif
32677.       if ( l_scale_solar /= .false. ) then
32679.          if ( n_region > 0 ) then
32680.             if ( nd_layer > 0 ) then
32681.                if ( nd_profile > 0 ) then
32679.                   $I_L32679_176 = 0
32679.                   do
32680.                      $I_L32680_163 = 0
32680.                      do
32681.                         $I_L32681_153 = 0
32681. !dir$ ivdep
32681. !dir$ loop_info (automatic) cache_nt( solar_top, source_coeff, trans_0, s_down, s_up )
32681.                         do
32682.                            s_up(1 + $I_L32681_153, 1 + $I_L32680_163, 1 + $I_L32679_176) = source_coeff(1 + $I_L32681_153, 1 + $I_L32680_163, 1, 1 + $I_L32679_176) * solar_top(1 + $I_L32681_153, 1 + $I_L32680_163, 1 + $I_L32679_176)
32685.                            s_down(1 + $I_L32681_153, 1 + $I_L32680_163, 1 + $I_L32679_176) = solar_base(1 + $I_L32681_153, 1 + $I_L32680_163, 1 + $I_L32679_176) + solar_top(1 + $I_L32681_153, 1 + $I_L32680_163, 1 + $I_L32679_176) * ( source_coeff(1 + $I_L32681_153, 1 + $I_L32680_163, 2, 1 + $I_L32679_176) + -trans_0(1 + $I_L32681_153, 1 + $I_L32680_163, 1 + $I_L32679_176) )
32689.                            $I_L32681_153 = 1 + $I_L32681_153
32681.                            if ( $I_L32681_153 >= nd_profile ) exit
32681.                         enddo
32690.                         $I_L32680_163 = 1 + $I_L32680_163
32689.                         if ( $I_L32680_163 >= nd_layer ) exit
32689.                      enddo
32691.                      $I_L32679_176 = 1 + $I_L32679_176
32690.                      if ( $I_L32679_176 >= n_region ) exit
32690.                   enddo
32690.                endif
32690.             endif
32690.          endif
32692.       else if ( n_region > 0 ) then
32695.          if ( nd_layer > 0 ) then
32696.             if ( nd_profile > 0 ) then
32694.                $I_L32694_174 = 0
32694.                do
32695.                   $I_L32695_161 = 0
32695.                   do
32696.                      $I_L32696_151 = 0
32696. !dir$ ivdep
32696. !dir$ loop_info (automatic) cache_nt( solar_top, source_coeff, s_down )
32696.                      do
32697.                         s_up(1 + $I_L32696_151, 1 + $I_L32695_161, 1 + $I_L32694_174) = source_coeff(1 + $I_L32696_151, 1 + $I_L32695_161, 1, 1 + $I_L32694_174) * solar_top(1 + $I_L32696_151, 1 + $I_L32695_161, 1 + $I_L32694_174)
32700.                         s_down(1 + $I_L32696_151, 1 + $I_L32695_161, 1 + $I_L32694_174) = solar_top(1 + $I_L32696_151, 1 + $I_L32695_161, 1 + $I_L32694_174) * source_coeff(1 + $I_L32696_151, 1 + $I_L32695_161, 2, 1 + $I_L32694_174)
32703.                         $I_L32696_151 = 1 + $I_L32696_151
32696.                         if ( $I_L32696_151 >= nd_profile ) exit
32696.                      enddo
32704.                      $I_L32695_161 = 1 + $I_L32695_161
32703.                      if ( $I_L32695_161 >= nd_layer ) exit
32703.                   enddo
32705.                   $I_L32694_174 = 1 + $I_L32694_174
32704.                   if ( $I_L32694_174 >= n_region ) exit
32704.                enddo
32704.             endif
32704.          endif
32704.       endif
32723.       if ( n_region > 0 ) then
32724.          if ( nd_profile > 0 ) then
32723.             $I_L32723_167 = 0
32723.             do
32724.                $I_L32724_157 = 0
32724. !dir$ ivdep
32724.                do
32725.                   flux_direct_ground(1 + $I_L32724_157, 1 + $I_L32723_167) = solar_base(1 + $I_L32724_157, nd_layer, 1 + $I_L32723_167)
32726.                   $I_L32724_157 = 1 + $I_L32724_157
32724.                   if ( $I_L32724_157 >= nd_profile ) exit
32724.                enddo
32727.                $I_L32723_167 = 1 + $I_L32723_167
32726.                if ( $I_L32723_167 >= n_region ) exit
32726.             enddo
32726.          endif
32726.       endif
32493.       _free( t$4174 )
32732.       return
32732.       end
32732.       
32751.       
32751.       subroutine two_coeff_basic( ierr, n_profile, i_layer_first, i_layer_last, i_2stream, asymmetry, omega, sum, diff, nd_profile, id_lt, id_lb )
32751.       t$973 = nd_profile
32751.       t$974 = id_lt
32751.       t$975 = id_lb
32799.       t$4180 = _zla( 0, nd_profile )
32751.       t$4181 = _zla( 0, nd_profile )
32751.       t$4182 = 1 + id_lb + -id_lt
32799.       t$4183 = _zla( 0, 1 + id_lb + -id_lt )
32751.       t$4184 = _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt )
32831.       if ( i_2stream == 2 ) then
32832.          if ( id_lb + -id_lt >= 0 ) then
32833.             if ( nd_profile > 0 ) then
32832.                $I_L32832_82 = 0
32832.                do
32833.                   $I_L32833_68 = 0
32833. !dir$ ivdep
32833.                   do
32834.                      sum(1 + $I_L32833_68, id_lt + $I_L32832_82) = 1.5 * ( 1.0 + -( omega(1 + $I_L32833_68, id_lt + $I_L32832_82) * asymmetry(1 + $I_L32833_68, id_lt + $I_L32832_82) ) )
32836.                      diff(1 + $I_L32833_68, id_lt + $I_L32832_82) = 2.0 * ( 1.0 + -omega(1 + $I_L32833_68, id_lt + $I_L32832_82) )
32837.                      $I_L32833_68 = 1 + $I_L32833_68
32833.                      if ( $I_L32833_68 >= nd_profile ) exit
32833.                   enddo
32838.                   $I_L32832_82 = 1 + $I_L32832_82
32837.                   if ( $I_L32832_82 >= 1 + id_lb + -id_lt ) exit
32837.                enddo
32837.             endif
32837.          endif
32840.       else if ( i_2stream == 12 ) then
32841.          if ( id_lb + -id_lt >= 0 ) then
32842.             if ( nd_profile > 0 ) then
32841.                $I_L32841_80 = 0
32841.                do
32842.                   $I_L32842_66 = 0
32842. !dir$ ivdep
32842.                   do
32843.                      sum(1 + $I_L32842_66, id_lt + $I_L32841_80) = 1.6599999999999999 + -1.5 * omega(1 + $I_L32842_66, id_lt + $I_L32841_80) * asymmetry(1 + $I_L32842_66, id_lt + $I_L32841_80)
32845.                      diff(1 + $I_L32842_66, id_lt + $I_L32841_80) = 1.6599999999999999 * ( 1.0 + -omega(1 + $I_L32842_66, id_lt + $I_L32841_80) )
32846.                      $I_L32842_66 = 1 + $I_L32842_66
32842.                      if ( $I_L32842_66 >= nd_profile ) exit
32842.                   enddo
32847.                   $I_L32841_80 = 1 + $I_L32841_80
32846.                   if ( $I_L32841_80 >= 1 + id_lb + -id_lt ) exit
32846.                enddo
32846.             endif
32846.          endif
32846.       else if ( i_2stream == 4 ) then
32850.          if ( id_lb + -id_lt >= 0 ) then
32851.             if ( nd_profile > 0 ) then
32850.                $I_L32850_78 = 0
32850.                do
32851.                   $I_L32851_64 = 0
32851. !dir$ ivdep
32851.                   do
32852.                      sum(1 + $I_L32851_64, id_lt + $I_L32850_78) = 1.7320508075688772 * ( 1.0 + -( omega(1 + $I_L32851_64, id_lt + $I_L32850_78) * asymmetry(1 + $I_L32851_64, id_lt + $I_L32850_78) ) )
32854.                      diff(1 + $I_L32851_64, id_lt + $I_L32850_78) = 1.7320508075688772 * ( 1.0 + -omega(1 + $I_L32851_64, id_lt + $I_L32850_78) )
32855.                      $I_L32851_64 = 1 + $I_L32851_64
32851.                      if ( $I_L32851_64 >= nd_profile ) exit
32851.                   enddo
32856.                   $I_L32850_78 = 1 + $I_L32850_78
32855.                   if ( $I_L32850_78 >= 1 + id_lb + -id_lt ) exit
32855.                enddo
32855.             endif
32855.          endif
32855.       else if ( i_2stream == 6 ) then
32859.          if ( id_lb + -id_lt >= 0 ) then
32860.             if ( nd_profile > 0 ) then
32859.                $I_L32859_76 = 0
32859.                do
32860.                   $I_L32860_62 = 0
32860. !dir$ ivdep
32860.                   do
32861.                      sum(1 + $I_L32860_62, id_lt + $I_L32859_76) = 2.0 + -1.5 * omega(1 + $I_L32860_62, id_lt + $I_L32859_76) * asymmetry(1 + $I_L32860_62, id_lt + $I_L32859_76)
32863.                      diff(1 + $I_L32860_62, id_lt + $I_L32859_76) = 2.0 * ( 1.0 + -omega(1 + $I_L32860_62, id_lt + $I_L32859_76) )
32864.                      $I_L32860_62 = 1 + $I_L32860_62
32860.                      if ( $I_L32860_62 >= nd_profile ) exit
32860.                   enddo
32865.                   $I_L32859_76 = 1 + $I_L32859_76
32864.                   if ( $I_L32859_76 >= 1 + id_lb + -id_lt ) exit
32864.                enddo
32864.             endif
32864.          endif
32864.       else if ( i_2stream == 14 ) then
32868.          if ( id_lb + -id_lt >= 0 ) then
32869.             if ( nd_profile > 0 ) then
32868.                $I_L32868_74 = 0
32868.                do
32869.                   $I_L32869_60 = 0
32869. !dir$ ivdep
32869.                   do
32870.                      sum(1 + $I_L32869_60, id_lt + $I_L32868_74) = 1.5 + -1.5 * omega(1 + $I_L32869_60, id_lt + $I_L32868_74) * asymmetry(1 + $I_L32869_60, id_lt + $I_L32868_74)
32872.                      diff(1 + $I_L32869_60, id_lt + $I_L32868_74) = 1.5 * ( 1.0 + -omega(1 + $I_L32869_60, id_lt + $I_L32868_74) )
32873.                      $I_L32869_60 = 1 + $I_L32869_60
32869.                      if ( $I_L32869_60 >= nd_profile ) exit
32869.                   enddo
32874.                   $I_L32868_74 = 1 + $I_L32868_74
32873.                   if ( $I_L32868_74 >= 1 + id_lb + -id_lt ) exit
32873.                enddo
32873.             endif
32873.          endif
32873.       else if ( i_2stream == 15 ) then
32877.          if ( id_lb + -id_lt >= 0 ) then
32878.             if ( nd_profile > 0 ) then
32877.                $I_L32877_72 = 0
32877.                do
32878.                   $I_L32878_58 = 0
32878. !dir$ ivdep
32878.                   do
32879.                      sum(1 + $I_L32878_58, id_lt + $I_L32877_72) = 2.0 * ( 1.0 + -( omega(1 + $I_L32878_58, id_lt + $I_L32877_72) * asymmetry(1 + $I_L32878_58, id_lt + $I_L32877_72) ) )
32881.                      diff(1 + $I_L32878_58, id_lt + $I_L32877_72) = 2.0 * ( 1.0 + -omega(1 + $I_L32878_58, id_lt + $I_L32877_72) )
32882.                      $I_L32878_58 = 1 + $I_L32878_58
32878.                      if ( $I_L32878_58 >= nd_profile ) exit
32878.                   enddo
32883.                   $I_L32877_72 = 1 + $I_L32877_72
32882.                   if ( $I_L32877_72 >= 1 + id_lb + -id_lt ) exit
32882.                enddo
32882.             endif
32882.          endif
32882.       else if ( i_2stream == 16 ) then
32886.          if ( id_lb + -id_lt >= 0 ) then
32887.             if ( nd_profile > 0 ) then
32886.                $I_L32886_70 = 0
32886.                do
32887.                   $I_L32887_56 = 0
32887. !dir$ ivdep
32887.                   do
32888.                      sum(1 + $I_L32887_56, id_lt + $I_L32886_70) = 2.0 + -1.5 * asymmetry(1 + $I_L32887_56, id_lt + $I_L32886_70) * omega(1 + $I_L32887_56, id_lt + $I_L32886_70) + -5.0e-1 * omega(1 + $I_L32887_56, id_lt + $I_L32886_70)
32891.                      diff(1 + $I_L32887_56, id_lt + $I_L32886_70) = 2.0 * ( 1.0 + -omega(1 + $I_L32887_56, id_lt + $I_L32886_70) )
32892.                      $I_L32887_56 = 1 + $I_L32887_56
32887.                      if ( $I_L32887_56 >= nd_profile ) exit
32887.                   enddo
32893.                   $I_L32886_70 = 1 + $I_L32886_70
32892.                   if ( $I_L32886_70 >= 1 + id_lb + -id_lt ) exit
32892.                enddo
32892.             endif
32892.          endif
32892.       else if ( i_2stream == 5 ) then
32896.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$977,  _substr(t$976,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: The improved flux mathod has not been implemented.', 0x800600000000L ) ) )
32899.          ierr = 1
32899.       else if ( i_2stream == 7 ) then
32903.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$979,  _substr(t$978,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Zdunkowski's flux method has not been implemented.', 0x800600000000L ) ) )
32906.          ierr = 1
32906.       else if ( i_2stream == 8 ) then
32910.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$981,  _substr(t$980,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Kerschgen's flux method has not been implemented.', 0x800600000000L ) ) )
32913.          ierr = 1
32913.       else if ( i_2stream == 9 ) then
32917.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$983,  _substr(t$982,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Coakley and Chylek's first method has not been implemented.', 0x800600000000L ) ) )
32920.          ierr = 1
32920.       else if ( i_2stream == 10 ) then
32924.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$985,  _substr(t$984,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Coakley and Chylek's second method has not been implemented.', 0x800600000000L ) ) )
32927.          ierr = 1
32927.       else if ( i_2stream == 11 ) then
32931.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$987,  _substr(t$986,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Meador and Weaver's method has not been implemented.', 0x800600000000L ) ) )
32934.          ierr = 1
32934.       else
32938.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$989,  _substr(t$988,1,8), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: An unrecognized value has been specified to define the two-stream scheme.', 0x800600000000L ) ) )
32941.          ierr = 1
32941.       endif
32949.       return
32949.       end
32949.       
32981.       
32981.       subroutine two_coeff_cloud( ierr, n_profile, i_layer_first, i_layer_last, i_2stream, l_ir_source_quad, n_source_coeff, n_cloud_type, frac_cloud, phase_fnc_cloud, omega_cloud, tau_cloud, isolir, sec_00, trans_cloud, reflect_cloud, trans_0_cloud, source_coeff_cloud, nd_profile, nd_layer, id_ct, nd_max_order, nd_source_coeff, nd_cloud_type )
32981.       t$990 = nd_profile
32981.       t$991 = id_ct
32981.       t$992 = nd_layer
32981.       t$993 = nd_cloud_type
33046.       t$4185 = _zla( 0, nd_profile )
32981.       t$4186 = _zla( 0, nd_profile )
32981.       t$4187 = 1 + nd_layer + -id_ct
33046.       t$4188 = _zla( 0, 1 + nd_layer + -id_ct )
32981.       t$4189 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
33046.       t$4190 = _zla( 0, nd_cloud_type )
32981.       t$4191 = _zla( 0, nd_profile ) * _zla( 0, nd_cloud_type ) * _zla( 0, 1 + nd_layer + -id_ct )
32981.       t$994 = nd_max_order
33048.       t$4192 = _zla( 0, nd_max_order )
32981.       t$4193 = _zla( 0, nd_profile ) * _zla( 0, nd_max_order ) * _zla( 0, 1 + nd_layer + -id_ct )
32981.       t$4194 = _zla( 0, nd_profile ) * _zla( 0, nd_cloud_type ) * _zla( 0, nd_max_order ) * _zla( 0, 1 + nd_layer + -id_ct )
32981.       t$4195 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
33064.       t$4196 = _zla( 0, nd_layer )
32981.       t$4197 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
32981.       t$995 = nd_source_coeff
32981.       t$4198 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
33070.       t$4199 = _zla( 0, nd_source_coeff )
32981.       t$4200 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff )
32981.       t$4201 = _zla( 0, nd_profile )
33109.       t$4204 = 8 * _zla( 0, nd_profile )
33100.       t$4206 = 12 * _zla( 0, nd_profile )
33107.       t$4207 = 8 * ( 7 + 12 * _zla( 0, nd_profile ) ) / 8
33107.       t$4209 = t$4207 + 8 * _zla( 0, nd_profile )
33089.       t$4210 = 8 * ( 7 + t$4207 + 8 * _zla( 0, nd_profile ) ) / 8
33089.       t$4212 = t$4210 + 8 * _zla( 0, nd_profile )
33111.       t$4213 = 8 * ( 7 + t$4210 + 8 * _zla( 0, nd_profile ) ) / 8
33111.       t$4215 = t$4213 + 8 * _zla( 0, nd_profile )
32981.       t$4216 = _zla( 0, nd_profile )
32981.       t$4217 = _zla( 0, nd_profile ) * _zla( 0, nd_source_coeff )
33093.       t$4218 = 8 * ( 7 + t$4213 + 8 * _zla( 0, nd_profile ) ) / 8
33093.       t$4220 = t$4218 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_source_coeff )
33105.       t$4221 = 8 * ( 7 + t$4218 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_source_coeff ) ) / 8
33105.       t$4223 = t$4221 + 8 * _zla( 0, nd_profile )
33091.       t$4224 = 8 * ( 7 + t$4221 + 8 * _zla( 0, nd_profile ) ) / 8
33091.       t$4226 = t$4224 + 8 * _zla( 0, nd_profile )
33087.       t$4227 = 8 * ( 7 + t$4224 + 8 * _zla( 0, nd_profile ) ) / 8
33087.       t$4229 = t$4227 + 8 * _zla( 0, nd_profile )
32981.       t$4202 = int( _alloc( t$4227 + 8 * _zla( 0, nd_profile ) ), 8 )
33109.       t$4203 = t$4202
33100.       t$4205 = t$4202 + 8 * _zla( 0, nd_profile )
33107.       t$4208 = t$4207 + t$4202
33089.       t$4211 = t$4210 + t$4202
33111.       t$4214 = t$4213 + t$4202
33093.       t$4219 = t$4218 + t$4202
33105.       t$4222 = t$4221 + t$4202
33091.       t$4225 = t$4224 + t$4202
33087.       t$4228 = t$4227 + t$4202
33122.       if ( i_layer_last + -i_layer_first >= 0 ) then
33123.          if ( n_profile > 0 ) then
33122.             $I_L33122_82 = 0
33122.             do
33123.                $I_L33123_64 = 0
33123. !dir$ ivdep
33123.                do
33124.                   trans_cloud(1 + $I_L33123_64, i_layer_first + $I_L33122_82) = 0.0
33125.                   reflect_cloud(1 + $I_L33123_64, i_layer_first + $I_L33122_82) = 0.0
33126.                   $I_L33123_64 = 1 + $I_L33123_64
33123.                   if ( $I_L33123_64 >= n_profile ) exit
33123.                enddo
33127.                $I_L33122_82 = 1 + $I_L33122_82
33126.                if ( $I_L33122_82 >= 1 + i_layer_last + -i_layer_first ) exit
33126.             enddo
33126.          endif
33126.       endif
33128.       if ( n_source_coeff > 0 ) then
33129.          if ( i_layer_last + -i_layer_first >= 0 ) then
33130.             if ( n_profile > 0 ) then
33128.                $I_L33128_90 = 0
33128.                do
33129.                   $I_L33129_84 = 0
33129.                   do
33130.                      $I_L33130_66 = 0
33130. !dir$ ivdep
33130.                      do
33131.                         source_coeff_cloud(1 + $I_L33130_66, i_layer_first + $I_L33129_84, 1 + $I_L33128_90) = 0.0
33132.                         $I_L33130_66 = 1 + $I_L33130_66
33130.                         if ( $I_L33130_66 >= n_profile ) exit
33130.                      enddo
33133.                      $I_L33129_84 = 1 + $I_L33129_84
33132.                      if ( $I_L33129_84 >= 1 + i_layer_last + -i_layer_first ) exit
33132.                   enddo
33134.                   $I_L33128_90 = 1 + $I_L33128_90
33133.                   if ( $I_L33128_90 >= n_source_coeff ) exit
33133.                enddo
33133.             endif
33133.          endif
33133.       endif
33136.       if ( isolir == 1 ) then
33137.          if ( i_layer_last + -i_layer_first >= 0 ) then
33138.             if ( n_profile > 0 ) then
33137.                $I_L33137_86 = 0
33137.                do
33138.                   $I_L33138_68 = 0
33138. !dir$ ivdep
33138.                   do
33139.                      trans_0_cloud(1 + $I_L33138_68, i_layer_first + $I_L33137_86) = 0.0
33140.                      $I_L33138_68 = 1 + $I_L33138_68
33138.                      if ( $I_L33138_68 >= n_profile ) exit
33138.                   enddo
33141.                   $I_L33137_86 = 1 + $I_L33137_86
33140.                   if ( $I_L33137_86 >= 1 + i_layer_last + -i_layer_first ) exit
33140.                enddo
33140.             endif
33140.          endif
33140.       endif
33149.       if ( n_cloud_type <= 0 ) then
33142.          goto 10
33142.       else if ( i_layer_last + -i_layer_first >= 0 ) then
33149.          $I_L33149_94 = 0
33149.          do
33151.             $I_L33151_92 = 0
33151.             do
33155.                n_list = 0
33156.                if ( n_profile > 0 ) then
33156.                   $I_L33156_70 = 0
33156. !dir$ ivdep
33156.                   do
33157.                      if ( frac_cloud(1 + $I_L33156_70, i_layer_first + $I_L33151_92, 1 + $I_L33149_94) > 0.0 ) then
33158.                         n_list = 1 + n_list
33159.                         l_list(n_list) = ( 1 + $I_L33156_70 )
33159.                      endif
33161.                      $I_L33156_70 = 1 + $I_L33156_70
33160.                      if ( $I_L33156_70 >= n_profile ) exit
33160.                   enddo
33160.                endif
33164.                if ( n_list > 0 ) then
33173.                   $I_L33173_72 = 0
33173. !dir$ ivdep
33173.                   do
33174.                      tau_gathered(1 + $I_L33173_72, 1) = tau_cloud(l_list(1 + $I_L33173_72), i_layer_first + $I_L33151_92, 1 + $I_L33149_94)
33176.                      omega_gathered(1 + $I_L33173_72, 1) = omega_cloud(l_list(1 + $I_L33173_72), i_layer_first + $I_L33151_92, 1 + $I_L33149_94)
33178.                      asymmetry_gathered(1 + $I_L33173_72, 1) = phase_fnc_cloud(l_list(1 + $I_L33173_72), i_layer_first + $I_L33151_92, 1, 1 + $I_L33149_94)
33180.                      $I_L33173_72 = 1 + $I_L33173_72
33173.                      if ( $I_L33173_72 >= n_list ) exit
33173.                   enddo
33181.                   if ( isolir == 1 ) then
33182.                      $I_L33182_74 = 0
33182. !dir$ ivdep
33182.                      do
33183.                         sec_0_gathered(1 + $I_L33182_74) = sec_00(l_list(1 + $I_L33182_74), 1)
33184.                         $I_L33182_74 = 1 + $I_L33182_74
33182.                         if ( $I_L33182_74 >= n_list ) exit
33182.                      enddo
33182.                   endif
33189.                   t$9758 = ( i_layer_first + $I_L33151_92 )
33189.                   t$9759 = ( i_layer_first + $I_L33151_92 )
33196.                   t$9760 = ( i_layer_first + $I_L33151_92 )
33196.                   t$9761 = ( i_layer_first + $I_L33151_92 )
33196.                   t$9762 = ( i_layer_first + $I_L33151_92 )
33196.                   t$9763 = ( i_layer_first + $I_L33151_92 )
33188.                   call two_coeff( ierr, n_list, t$9758, t$9759, i_2stream, l_ir_source_quad, asymmetry_gathered(1, 1), omega_gathered(1, 1), tau_gathered(1, 1), isolir, sec_0_gathered(1), trans_temp(1, 1), reflect_temp(1, 1), trans_0_temp(1, 1), source_coeff_temp(1, 1, 1), nd_profile, t$9760, t$9761, t$9762, t$9763, nd_source_coeff )
33198.                   if ( ierr == 0 ) then
33200.                      if ( n_list > 0 ) then
33200.                         $I_L33200_76 = 0
33200. !dir$ ivdep
33200.                         do
33201.                            $ll_S13 = l_list(1 + $I_L33200_76)
33202.                            trans_cloud($ll_S13, i_layer_first + $I_L33151_92) = _vu_plus( trans_cloud($ll_S13, i_layer_first + $I_L33151_92), trans_temp(1 + $I_L33200_76, 1) * frac_cloud($ll_S13, i_layer_first + $I_L33151_92, 1 + $I_L33149_94) )
33204.                            reflect_cloud($ll_S13, i_layer_first + $I_L33151_92) = _vu_plus( reflect_cloud($ll_S13, i_layer_first + $I_L33151_92), reflect_temp(1 + $I_L33200_76, 1) * frac_cloud($ll_S13, i_layer_first + $I_L33151_92, 1 + $I_L33149_94) )
33206.                            $I_L33200_76 = 1 + $I_L33200_76
33200.                            if ( $I_L33200_76 >= n_list ) exit
33200.                         enddo
33200.                      endif
33207.                      if ( n_source_coeff > 0 ) then
33208.                         if ( n_list > 0 ) then
33207.                            $SI_L33207_88_G1 = 0
33207.                            do
33208.                               $SI_L33208_78_G4 = 0
33208.                               do
33207.                                  $I_L33207_99 = 0
33207. !dir$ shortloop16
33207. !dir$ blocking_size( 2, 2 )
33207.                                  do
33208.                                     $I_L33208_96 = 0
33208. !dir$ ivdep
33208. !dir$ blocking_size( 256, 256 )
33208.                                     do
33209.                                        $ll_S16 = l_list(1 + $I_L33208_96 + 256 * $SI_L33208_78_G4)
33210.                                        source_coeff_cloud($ll_S16, i_layer_first + $I_L33151_92, 1 + $I_L33207_99 + 2 * $SI_L33207_88_G1) = _vu_plus( source_coeff_cloud($ll_S16, i_layer_first + $I_L33151_92, 1 + $I_L33207_99 + 2 * $SI_L33207_88_G1), frac_cloud($ll_S16, i_layer_first + $I_L33151_92, 1 + $I_L33149_94) * source_coeff_temp(1 + $I_L33208_96 + 256 * $SI_L33208_78_G4, 1, 1 + $I_L33207_99 + 2 * $SI_L33207_88_G1) )
33208.                                        $I_L33208_96 = 1 + $I_L33208_96
33208.                                        if ( $I_L33208_96 >= min( n_list, 256 + 256 * $SI_L33208_78_G4 ) + -256 * $SI_L33208_78_G4 ) exit
33208.                                     enddo
33207.                                     $I_L33207_99 = 1 + $I_L33207_99
33207.                                     if ( $I_L33207_99 >= min( n_source_coeff, 2 + 2 * $SI_L33207_88_G1 ) + -2 * $SI_L33207_88_G1 ) exit
33207.                                  enddo
33208.                                  $SI_L33208_78_G4 = 1 + $SI_L33208_78_G4
33213.                                  if ( $SI_L33208_78_G4 >= _rsh( 255 + n_list, 8 ) ) exit
33213.                               enddo
33207.                               $SI_L33207_88_G1 = 1 + $SI_L33207_88_G1
33207.                               if ( $SI_L33207_88_G1 >= _rsh( 1 + n_source_coeff, 1 ) ) exit
33207.                            enddo
33207.                         endif
33207.                      endif
33215.                      if ( isolir == 1 ) then
33216.                         if ( n_list > 0 ) then
33216.                            $I_L33216_80 = 0
33216. !dir$ ivdep
33216.                            do
33217.                               $ll_S18 = l_list(1 + $I_L33216_80)
33218.                               trans_0_cloud($ll_S18, i_layer_first + $I_L33151_92) = _vu_plus( trans_0_cloud($ll_S18, i_layer_first + $I_L33151_92), trans_0_temp(1 + $I_L33216_80, 1) * frac_cloud($ll_S18, i_layer_first + $I_L33151_92, 1 + $I_L33149_94) )
33220.                               $I_L33216_80 = 1 + $I_L33216_80
33216.                               if ( $I_L33216_80 >= n_list ) exit
33216.                            enddo
33216.                         endif
33216.                      endif
33224.                      $I_L33151_92 = 1 + $I_L33151_92
33222.                   else
33222.                   endif
33222.                else
33222.                endif
33222.                if ( $I_L33151_92 >= 1 + i_layer_last + -i_layer_first ) exit
33222.             enddo
33225.             $I_L33149_94 = 1 + $I_L33149_94
33224.             if ( $I_L33149_94 >= n_cloud_type ) exit
33224.          enddo
33224.          goto 10
33224.       else
33224.    10    continue
32981.          _free( t$4202 )
32981.       endif
33230.       return
33230.       end
33230.       
33251.       
33251.       subroutine two_coeff( ierr, n_profile, i_layer_first, i_layer_last, i_2stream, l_ir_source_quad, asymmetry, omega, tau, isolir, sec_00, trans, reflect, trans_0, source_coeff, nd_profile, id_op_lt, id_op_lb, id_trs_lt, id_trs_lb, nd_source_coeff )
33251.       t$996 = nd_profile
33251.       t$997 = id_op_lt
33251.       t$998 = id_op_lb
33311.       t$4230 = _zla( 0, nd_profile )
33251.       t$4231 = _zla( 0, nd_profile )
33251.       t$4232 = 1 + id_op_lb + -id_op_lt
33311.       t$4233 = _zla( 0, 1 + id_op_lb + -id_op_lt )
33251.       t$4234 = _zla( 0, nd_profile ) * _zla( 0, 1 + id_op_lb + -id_op_lt )
33251.       t$999 = id_trs_lt
33251.       t$1000 = id_trs_lb
33251.       t$4235 = 1 + id_trs_lb + -id_trs_lt
33326.       t$4236 = _zla( 0, 1 + id_trs_lb + -id_trs_lt )
33251.       t$4237 = _zla( 0, nd_profile ) * _zla( 0, 1 + id_trs_lb + -id_trs_lt )
33251.       t$1001 = nd_source_coeff
33251.       t$4238 = _zla( 0, nd_profile ) * _zla( 0, 1 + id_trs_lb + -id_trs_lt )
33332.       t$4239 = _zla( 0, nd_source_coeff )
33251.       t$4240 = _zla( 0, nd_profile ) * _zla( 0, nd_source_coeff ) * _zla( 0, 1 + id_trs_lb + -id_trs_lt )
33350.       t$4243 = 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_op_lb + -id_op_lt )
33354.       t$4244 = 8 * ( 7 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_op_lb + -id_op_lt ) ) / 8
33354.       t$4246 = t$4244 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_op_lb + -id_op_lt )
33352.       t$4247 = 8 * ( 7 + t$4244 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_op_lb + -id_op_lt ) ) / 8
33352.       t$4249 = t$4247 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_op_lb + -id_op_lt )
33346.       t$4250 = 8 * ( 7 + t$4247 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_op_lb + -id_op_lt ) ) / 8
33346.       t$4252 = t$4250 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_op_lb + -id_op_lt )
33348.       t$4253 = 8 * ( 7 + t$4250 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_op_lb + -id_op_lt ) ) / 8
33348.       t$4255 = t$4253 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_op_lb + -id_op_lt )
33251.       t$4241 = int( _alloc( t$4253 + 8 * _zla( 0, nd_profile ) * _zla( 0, 1 + id_op_lb + -id_op_lt ) ), 8 )
33350.       t$4242 = t$4241
33354.       t$4245 = t$4244 + t$4241
33352.       t$4248 = t$4247 + t$4241
33346.       t$4251 = t$4250 + t$4241
33348.       t$4254 = t$4253 + t$4241
33368.       call two_coeff_basic( ierr, n_profile, i_layer_first, i_layer_last, i_2stream, asymmetry(1, id_op_lt), omega(1, id_op_lt), sum(1, id_op_lt), diff(1, id_op_lt), nd_profile, id_op_lt, id_op_lb )
33375.       if ( ierr /= 0 ) then
33251.          _free( t$4241 )
33251.       else
33383.          if ( id_op_lb + -id_op_lt >= 0 ) then
33384.             if ( nd_profile > 0 ) then
33383.                $I_L33383_126 = 0
33383.                do
33384.                   $I_L33384_108 = 0
33384. !dir$ ivdep
33384.                   do
33385.                      lambda(1 + $I_L33384_108, id_op_lt + $I_L33383_126) = _sqrt( sum(1 + $I_L33384_108, id_op_lt + $I_L33383_126) * diff(1 + $I_L33384_108, id_op_lt + $I_L33383_126) )
33386.                      $I_L33384_108 = 1 + $I_L33384_108
33384.                      if ( $I_L33384_108 >= nd_profile ) exit
33384.                   enddo
33387.                   $I_L33383_126 = 1 + $I_L33383_126
33386.                   if ( $I_L33383_126 >= 1 + id_op_lb + -id_op_lt ) exit
33386.                enddo
33386.             endif
33386.          endif
33391.          if ( isolir == 1 ) then
33394.             t$791 = nd_profile
33394.             t$792 = id_op_lt
33394.             t$793 = id_op_lb
33394.             t$3033 = max( 0, nd_profile )
33394.             t$3034 = max( 0, nd_profile )
33394.             t$3035 = 1 + id_op_lb + -id_op_lt
33394.             t$3036 = max( 0, 1 + id_op_lb + -id_op_lt )
33394.             t$3037 = max( 0, nd_profile ) * max( 0, 1 + id_op_lb + -id_op_lt )
33394.             t$3040 = 8 * max( 0, nd_profile ) * max( 0, 1 + id_op_lb + -id_op_lt )
33394.             t$3038 = int( _alloc( 8 * max( 0, nd_profile ) * max( 0, 1 + id_op_lb + -id_op_lt ) ), 8 )
33394.             t$3039 = t$3038
33394.             if ( id_op_lb + -id_op_lt >= 0 ) then
33394.                if ( nd_profile > 0 ) then
33394.                   $I_L33394_128 = 0
33394.                   do
33394.                      $I_L33394_110 = 0
33394. !dir$ ivdep
33394.                      do
33394.                         if ( abs( lambda(1 + $I_L33394_110, id_op_lt + $I_L33394_128) + -sec_00(1 + $I_L33394_110, id_op_lt + $I_L33394_128) ) < 7.1054273576010019e-15 ) then
33394.                            lambda(1 + $I_L33394_110, id_op_lt + $I_L33394_128) = 1.0000000000000071 * lambda(1 + $I_L33394_110, id_op_lt + $I_L33394_128)
33394.                            diff(1 + $I_L33394_110, id_op_lt + $I_L33394_128) = 1.0000000000000071 * diff(1 + $I_L33394_110, id_op_lt + $I_L33394_128)
33394.                            sum(1 + $I_L33394_110, id_op_lt + $I_L33394_128) = 1.0000000000000071 * sum(1 + $I_L33394_110, id_op_lt + $I_L33394_128)
33394.                         endif
33394.                         $I_L33394_110 = 1 + $I_L33394_110
33394.                         if ( $I_L33394_110 >= nd_profile ) exit
33394.                      enddo
33394.                      $I_L33394_128 = 1 + $I_L33394_128
33394.                      if ( $I_L33394_128 >= 1 + id_op_lb + -id_op_lt ) exit
33394.                   enddo
33394.                endif
33394.             endif
33394.             if ( i_2stream == 2 ) then
33394.                goto 10
33394.                goto 20
33394.             else if ( i_2stream == 12 ) then
33394.                goto 10
33394.                goto 20
33394.             else if ( i_2stream == 6 ) then
33394.                goto 10
33394.                goto 20
33394.             else if ( i_2stream == 14 ) then
33394.                goto 10
33394.                goto 20
33394.             else if ( i_2stream == 15 ) then
33394.                goto 10
33394.                goto 20
33394.             else if ( i_2stream == 16 ) then
33394.    10          continue
33394.                if ( id_op_lb + -id_op_lt >= 0 ) then
33394.                   if ( nd_profile > 0 ) then
33394.                      $I_L33394_132 = 0
33394.                      do
33394.                         $I_L33394_114 = 0
33394. !dir$ ivdep
33394.                         do
33394.                            ksi_0(1 + $I_L33394_114, id_op_lt + $I_L33394_132) = ( 1.5 * asymmetry(1 + $I_L33394_114, id_op_lt + $I_L33394_132) * 1.0/sec_00(1 + $I_L33394_114, id_op_lt + $I_L33394_132) )
33394.                            $I_L33394_114 = 1 + $I_L33394_114
33394.                            if ( $I_L33394_114 >= nd_profile ) exit
33394.                         enddo
33394.                         $I_L33394_132 = 1 + $I_L33394_132
33394.                         if ( $I_L33394_132 >= 1 + id_op_lb + -id_op_lt ) exit
33394.                      enddo
33394.                   endif
33394.                endif
33394.                goto 20
33394.             else if ( i_2stream == 4 ) then
33394.                if ( id_op_lb + -id_op_lt >= 0 ) then
33394.                   if ( nd_profile > 0 ) then
33394.                      $I_L33394_130 = 0
33394.                      do
33394.                         $I_L33394_112 = 0
33394. !dir$ ivdep
33394.                         do
33394.                            ksi_0(1 + $I_L33394_112, id_op_lt + $I_L33394_130) = ( 1.7320508075688772 * asymmetry(1 + $I_L33394_112, id_op_lt + $I_L33394_130) * 1.0/sec_00(1 + $I_L33394_112, id_op_lt + $I_L33394_130) )
33394.                            $I_L33394_112 = 1 + $I_L33394_112
33394.                            if ( $I_L33394_112 >= nd_profile ) exit
33394.                         enddo
33394.                         $I_L33394_130 = 1 + $I_L33394_130
33394.                         if ( $I_L33394_130 >= 1 + id_op_lb + -id_op_lt ) exit
33394.                      enddo
33394.                   endif
33394.                endif
33394.    20          continue
33394.                if ( id_op_lb + -id_op_lt >= 0 ) then
33394.                   if ( nd_profile > 0 ) then
33394.                      $I_L33394_134 = 0
33394.                      do
33394.                         $I_L33394_116 = 0
33394. !dir$ ivdep
33394.                         do
33394.                            $factor_S10 = ( 5.0e-1 * sec_00(1 + $I_L33394_116, id_op_lt + $I_L33394_134) * omega(1 + $I_L33394_116, id_op_lt + $I_L33394_134) * 1.0/( ( lambda(1 + $I_L33394_116, id_op_lt + $I_L33394_134) + -sec_00(1 + $I_L33394_116, id_op_lt + $I_L33394_134) ) * ( sec_00(1 + $I_L33394_116, id_op_lt + $I_L33394_134) + lambda(1 + $I_L33394_116, id_op_lt + $I_L33394_134) ) ) )
33394.                            gamma_up(1 + $I_L33394_116, id_op_lt + $I_L33394_134) = $factor_S10 * ( sum(1 + $I_L33394_116, id_op_lt + $I_L33394_134) + -sec_00(1 + $I_L33394_116, id_op_lt + $I_L33394_134) + -( ksi_0(1 + $I_L33394_116, id_op_lt + $I_L33394_134) * ( diff(1 + $I_L33394_116, id_op_lt + $I_L33394_134) + -sec_00(1 + $I_L33394_116, id_op_lt + $I_L33394_134) ) ) )
33394.                            gamma_down(1 + $I_L33394_116, id_op_lt + $I_L33394_134) = $factor_S10 * ( sec_00(1 + $I_L33394_116, id_op_lt + $I_L33394_134) + sum(1 + $I_L33394_116, id_op_lt + $I_L33394_134) + ksi_0(1 + $I_L33394_116, id_op_lt + $I_L33394_134) * ( sec_00(1 + $I_L33394_116, id_op_lt + $I_L33394_134) + diff(1 + $I_L33394_116, id_op_lt + $I_L33394_134) ) )
33394.                            $I_L33394_116 = 1 + $I_L33394_116
33394.                            if ( $I_L33394_116 >= nd_profile ) exit
33394.                         enddo
33394.                         $I_L33394_134 = 1 + $I_L33394_134
33394.                         if ( $I_L33394_134 >= 1 + id_op_lb + -id_op_lt ) exit
33394.                      enddo
33394.                   endif
33394.                endif
33394.                _free( t$3038 )
33394.             else
33394.                _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$795,  _substr(t$794,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: An illegal solar two-stream scheme has been selected.', 0x800600000000L ) ) )
33394.                ierr = 1
33394.                _free( t$3038 )
33394.             endif
33402.             if ( ierr /= 0 ) then
33251.                _free( t$4241 )
33251.             else
33251.                goto 30
33251.             endif
33251.          else
33251.    30       continue
33407.             t$951 = nd_profile
33407.             t$952 = id_op_lt
33407.             t$953 = id_op_lb
33407.             t$4078 = max( 0, nd_profile )
33407.             t$4079 = max( 0, nd_profile )
33407.             t$4080 = 1 + id_op_lb + -id_op_lt
33407.             t$4081 = max( 0, 1 + id_op_lb + -id_op_lt )
33407.             t$4082 = max( 0, nd_profile ) * max( 0, 1 + id_op_lb + -id_op_lt )
33407.             t$954 = id_trs_lt
33407.             t$955 = id_trs_lb
33407.             t$4083 = 1 + id_trs_lb + -id_trs_lt
33407.             t$4084 = max( 0, 1 + id_trs_lb + -id_trs_lt )
33407.             t$4085 = max( 0, nd_profile ) * max( 0, 1 + id_trs_lb + -id_trs_lt )
33407.             t$956 = nd_source_coeff
33407.             t$4086 = max( 0, nd_profile ) * max( 0, 1 + id_trs_lb + -id_trs_lt )
33407.             t$4087 = max( 0, nd_source_coeff )
33407.             t$4088 = max( 0, nd_profile ) * max( 0, nd_source_coeff ) * max( 0, 1 + id_trs_lb + -id_trs_lt )
33407.             if ( id_trs_lb + -id_trs_lt >= 0 ) then
33407.                if ( nd_profile > 0 ) then
33407.                   $I_L33407_136 = 0
33407.                   do
33407.                      $I_L33407_118 = 0
33407. !dir$ ivdep
33407.                      do
33407.                         $exponential_S14 = _expn( -( lambda(1 + $I_L33407_118, id_trs_lt + $I_L33407_136) * tau(1 + $I_L33407_118, id_trs_lt + $I_L33407_136) ) )
33407.                         $gamma_S13 = ( ( sum(1 + $I_L33407_118, id_trs_lt + $I_L33407_136) + -lambda(1 + $I_L33407_118, id_trs_lt + $I_L33407_136) ) * 1.0/( lambda(1 + $I_L33407_118, id_trs_lt + $I_L33407_136) + sum(1 + $I_L33407_118, id_trs_lt + $I_L33407_136) ) )
33407.                         trans(1 + $I_L33407_118, id_trs_lt + $I_L33407_136) = $exponential_S14 * ( 1.0 + -( $gamma_S13 * $gamma_S13 ) ) * 1.0/( 1.0 + -( ( $gamma_S13 * $exponential_S14 ) * ( $gamma_S13 * $exponential_S14 ) ) )
33407.                         reflect(1 + $I_L33407_118, id_trs_lt + $I_L33407_136) = $gamma_S13 * 1.0/( 1.0 + -( ( $gamma_S13 * $exponential_S14 ) * ( $gamma_S13 * $exponential_S14 ) ) ) * ( 1.0 + -( $exponential_S14 * $exponential_S14 ) )
33407.                         $I_L33407_118 = 1 + $I_L33407_118
33407.                         if ( $I_L33407_118 >= nd_profile ) exit
33407.                      enddo
33407.                      $I_L33407_136 = 1 + $I_L33407_136
33407.                      if ( $I_L33407_136 >= 1 + id_trs_lb + -id_trs_lt ) exit
33407.                   enddo
33407.                endif
33407.             endif
33407.             if ( isolir == 1 ) then
33407.                if ( id_trs_lb + -id_trs_lt >= 0 ) then
33407.                   if ( nd_profile > 0 ) then
33407.                      $I_L33407_140 = 0
33407.                      do
33407.                         $I_L33407_122 = 0
33407. !dir$ ivdep
33407.                         do
33407.                            $trans_0_WR0_R0 = _expn( -( tau(1 + $I_L33407_122, id_trs_lt + $I_L33407_140) * sec_00(1 + $I_L33407_122, id_trs_lt + $I_L33407_140) ) )
33407.                            trans_0(1 + $I_L33407_122, id_trs_lt + $I_L33407_140) = $trans_0_WR0_R0
33407.                            source_coeff(1 + $I_L33407_122, id_trs_lt + $I_L33407_140, 1) = ( gamma_up(1 + $I_L33407_122, id_trs_lt + $I_L33407_140) + -( reflect(1 + $I_L33407_122, id_trs_lt + $I_L33407_140) * ( 1.0 + gamma_down(1 + $I_L33407_122, id_trs_lt + $I_L33407_140) ) ) ) + -( gamma_up(1 + $I_L33407_122, id_trs_lt + $I_L33407_140) * $trans_0_WR0_R0 * trans(1 + $I_L33407_122, id_trs_lt + $I_L33407_140) )
33407.                            source_coeff(1 + $I_L33407_122, id_trs_lt + $I_L33407_140, 2) = -( trans(1 + $I_L33407_122, id_trs_lt + $I_L33407_140) * ( 1.0 + gamma_down(1 + $I_L33407_122, id_trs_lt + $I_L33407_140) ) ) + $trans_0_WR0_R0 * ( 1.0 + gamma_down(1 + $I_L33407_122, id_trs_lt + $I_L33407_140) + -( reflect(1 + $I_L33407_122, id_trs_lt + $I_L33407_140) * gamma_up(1 + $I_L33407_122, id_trs_lt + $I_L33407_140) ) )
33407.                            $I_L33407_122 = 1 + $I_L33407_122
33407.                            if ( $I_L33407_122 >= nd_profile ) exit
33407.                         enddo
33407.                         $I_L33407_140 = 1 + $I_L33407_140
33407.                         if ( $I_L33407_140 >= 1 + id_trs_lb + -id_trs_lt ) exit
33407.                      enddo
33407.                   endif
33407.                endif
33407.             else if ( isolir == 2 ) then
33407.                if ( id_trs_lb + -id_trs_lt >= 0 ) then
33407.                   if ( nd_profile > 0 ) then
33407.                      $I_L33407_138 = 0
33407.                      do
33407.                         $I_L33407_120 = 0
33407. !dir$ ivdep
33407.                         do
33407.                            source_coeff(1 + $I_L33407_120, id_trs_lt + $I_L33407_138, 1) = ( ( ( 1.0 + reflect(1 + $I_L33407_120, id_trs_lt + $I_L33407_138) + -trans(1 + $I_L33407_120, id_trs_lt + $I_L33407_138) ) + ( 2.2204460492503131e-16 * 1.0/( 1.4901161193847656e-8 + tau(1 + $I_L33407_120, id_trs_lt + $I_L33407_138) ) ) ) * 1.0/( ( 2.2204460492503131e-16 * 1.0/( 1.4901161193847656e-8 + tau(1 + $I_L33407_120, id_trs_lt + $I_L33407_138) ) ) + tau(1 + $I_L33407_120, id_trs_lt + $I_L33407_138) * sum(1 + $I_L33407_120, id_trs_lt + $I_L33407_138) ) )
33407.                            $I_L33407_120 = 1 + $I_L33407_120
33407.                            if ( $I_L33407_120 >= nd_profile ) exit
33407.                         enddo
33407.                         $I_L33407_138 = 1 + $I_L33407_138
33407.                         if ( $I_L33407_138 >= 1 + id_trs_lb + -id_trs_lt ) exit
33407.                      enddo
33407.                   endif
33407.                endif
33407.                if ( l_ir_source_quad /= .false. ) then
33407.                   if ( id_trs_lb + -id_trs_lt >= 0 ) then
33407.                      if ( nd_profile > 0 ) then
33407.                         $I_L33407_142 = 0
33407.                         do
33407.                            $I_L33407_124 = 0
33407. !dir$ ivdep
33407.                            do
33407.                               if ( tau(1 + $I_L33407_124, id_trs_lt + $I_L33407_142) > 6.828499381469513e-6 ) then
33407.                                  source_coeff(1 + $I_L33407_124, id_trs_lt + $I_L33407_142, 2) = -( 2.0 * ( 1.0000000149011612 + -trans(1 + $I_L33407_124, id_trs_lt + $I_L33407_142) + -reflect(1 + $I_L33407_124, id_trs_lt + $I_L33407_142) ) * 1.0/( 1.4901161193847656e-8 + tau(1 + $I_L33407_124, id_trs_lt + $I_L33407_142) * diff(1 + $I_L33407_124, id_trs_lt + $I_L33407_142) ) )
33407.                               else
33407.                                  source_coeff(1 + $I_L33407_124, id_trs_lt + $I_L33407_142, 2) = -2.0 + tau(1 + $I_L33407_124, id_trs_lt + $I_L33407_142) * diff(1 + $I_L33407_124, id_trs_lt + $I_L33407_142)
33407.                               endif
33407.                               source_coeff(1 + $I_L33407_124, id_trs_lt + $I_L33407_142, 2) = -( 1.0/( 1.4901161193847656e-8 + tau(1 + $I_L33407_124, id_trs_lt + $I_L33407_142) * sum(1 + $I_L33407_124, id_trs_lt + $I_L33407_142) ) * ( 1.0 + trans(1 + $I_L33407_124, id_trs_lt + $I_L33407_142) + source_coeff(1 + $I_L33407_124, id_trs_lt + $I_L33407_142, 2) + reflect(1 + $I_L33407_124, id_trs_lt + $I_L33407_142) ) )
33407.                               $I_L33407_124 = 1 + $I_L33407_124
33407.                               if ( $I_L33407_124 >= nd_profile ) exit
33407.                            enddo
33407.                            $I_L33407_142 = 1 + $I_L33407_142
33407.                            if ( $I_L33407_142 >= 1 + id_trs_lb + -id_trs_lt ) exit
33407.                         enddo
33407.                      endif
33407.                   endif
33407.                endif
33407.             endif
33251.             _free( t$4241 )
33251.          endif
33251.       endif
33420.       return
33420.       end
33420.       
33443.       
33443.       subroutine two_coeff_fast_lw( n_profile, i_layer_first, i_layer_last, l_ir_source_quad, tau, trans, source_coeff, nd_profile, nd_layer, id_lt, id_lb, nd_source_coeff )
33443.       t$1002 = nd_profile
33443.       t$1003 = id_lt
33443.       t$1004 = id_lb
33490.       t$4256 = _zla( 0, nd_profile )
33443.       t$4257 = _zla( 0, nd_profile )
33443.       t$4258 = 1 + id_lb + -id_lt
33490.       t$4259 = _zla( 0, 1 + id_lb + -id_lt )
33443.       t$4260 = _zla( 0, nd_profile ) * _zla( 0, 1 + id_lb + -id_lt )
33443.       t$1005 = nd_layer
33496.       t$4261 = _zla( 0, nd_layer )
33443.       t$4262 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
33443.       t$1006 = nd_source_coeff
33443.       t$4263 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
33498.       t$4264 = _zla( 0, nd_source_coeff )
33443.       t$4265 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff )
33526.       if ( i_layer_last + -i_layer_first >= 0 ) then
33527.          if ( n_profile > 0 ) then
33530.             if ( nd_profile + -n_profile > 0 ) then
33526.                $I_L33526_54 = 0
33526.                do
33527.                   $I_L33527_40 = 0
33527. !dir$ ivdep
33527.                   do
33528.                      trans(1 + $I_L33527_40, i_layer_first + $I_L33526_54) = -1.6599999999999999 * tau(1 + $I_L33527_40, i_layer_first + $I_L33526_54)
33529.                      $I_L33527_40 = 1 + $I_L33527_40
33527.                      if ( $I_L33527_40 >= n_profile ) exit
33527.                   enddo
33530.                   $I_L33530_42 = 0
33530. !dir$ ivdep
33530.                   do
33531.                      trans(1 + n_profile + $I_L33530_42, i_layer_first + $I_L33526_54) = 0.0
33532.                      $I_L33530_42 = 1 + $I_L33530_42
33530.                      if ( $I_L33530_42 >= ( nd_profile + -n_profile ) ) exit
33530.                   enddo
33533.                   $I_L33526_54 = 1 + $I_L33526_54
33532.                   if ( $I_L33526_54 >= 1 + i_layer_last + -i_layer_first ) exit
33532.                enddo
33532.             else
33526.                $I_L33526_62 = 0
33526.                do
33527.                   $I_L33527_52 = 0
33527. !dir$ ivdep
33527.                   do
33528.                      trans(1 + $I_L33527_52, i_layer_first + $I_L33526_62) = -1.6599999999999999 * tau(1 + $I_L33527_52, i_layer_first + $I_L33526_62)
33529.                      $I_L33527_52 = 1 + $I_L33527_52
33527.                      if ( $I_L33527_52 >= n_profile ) exit
33527.                   enddo
33533.                   $I_L33526_62 = 1 + $I_L33526_62
33532.                   if ( $I_L33526_62 >= 1 + i_layer_last + -i_layer_first ) exit
33532.                enddo
33532.             endif
33532.          else if ( nd_profile + -n_profile > 0 ) then
33526.             $I_L33526_60 = 0
33526.             do
33530.                $I_L33530_50 = 0
33530. !dir$ ivdep
33530.                do
33531.                   trans(1 + n_profile + $I_L33530_50, i_layer_first + $I_L33526_60) = 0.0
33532.                   $I_L33530_50 = 1 + $I_L33530_50
33530.                   if ( $I_L33530_50 >= ( nd_profile + -n_profile ) ) exit
33530.                enddo
33533.                $I_L33526_60 = 1 + $I_L33526_60
33532.                if ( $I_L33526_60 >= 1 + i_layer_last + -i_layer_first ) exit
33532.             enddo
33532.          endif
33532.       endif
33535.       tm$3837 = loc( trans(1, i_layer_first) )
33535.       a = _copyin( trans(1, i_layer_first) )
33535.       tm$3839 = loc( trans(1, i_layer_first) )
33535.       b = _copyin( trans(1, i_layer_first) )
33535.       t$291 = ( nd_profile + -( nd_profile * i_layer_first ) + nd_profile * i_layer_last )
33535.       t$1977 = max( 0, ( nd_profile + -( nd_profile * i_layer_first ) + nd_profile * i_layer_last ) )
33535.       if ( nd_profile + -( nd_profile * i_layer_first ) + nd_profile * i_layer_last > 0 ) then
33535.          $I_L33535_44 = 0
33535. !dir$ ivdep
33535.          do
33535.             b(1 + $I_L33535_44) = _expn( a(1 + $I_L33535_44) )
33535.             $I_L33535_44 = 1 + $I_L33535_44
33535.             if ( $I_L33535_44 >= ( nd_profile + -( nd_profile * i_layer_first ) + nd_profile * i_layer_last ) ) exit
33535.          enddo
33535.       endif
33535.       trans(1, i_layer_first) = _copyout( b )
33535.       trans(1, i_layer_first) = _copyout( a )
33538.       if ( i_layer_last + -i_layer_first >= 0 ) then
33539.          if ( n_profile > 0 ) then
33538.             $I_L33538_56 = 0
33538.             do
33539.                $I_L33539_46 = 0
33539. !dir$ ivdep
33539.                do
33540.                   source_coeff(1 + $I_L33539_46, i_layer_first + $I_L33538_56, 1) = ( ( 1.0000000149011612 + -trans(1 + $I_L33539_46, i_layer_first + $I_L33538_56) ) * 1.0/( 1.4901161193847656e-8 + 1.6599999999999999 * tau(1 + $I_L33539_46, i_layer_first + $I_L33538_56) ) )
33543.                   $I_L33539_46 = 1 + $I_L33539_46
33539.                   if ( $I_L33539_46 >= n_profile ) exit
33539.                enddo
33544.                $I_L33538_56 = 1 + $I_L33538_56
33543.                if ( $I_L33538_56 >= 1 + i_layer_last + -i_layer_first ) exit
33543.             enddo
33543.          endif
33543.       endif
33546.       if ( l_ir_source_quad /= .false. ) then
33547.          if ( i_layer_last + -i_layer_first >= 0 ) then
33548.             if ( n_profile > 0 ) then
33547.                $I_L33547_58 = 0
33547.                do
33548.                   $I_L33548_48 = 0
33548. !dir$ ivdep
33548.                   do
33549.                      source_coeff(1 + $I_L33548_48, i_layer_first + $I_L33547_58, 2) = -( 1.0/( 1.4901161193847656e-8 + 1.6599999999999999 * tau(1 + $I_L33548_48, i_layer_first + $I_L33547_58) ) * ( 1.0 + trans(1 + $I_L33548_48, i_layer_first + $I_L33547_58) + -2.0 * source_coeff(1 + $I_L33548_48, i_layer_first + $I_L33547_58, 1) ) )
33553.                      $I_L33548_48 = 1 + $I_L33548_48
33548.                      if ( $I_L33548_48 >= n_profile ) exit
33548.                   enddo
33554.                   $I_L33547_58 = 1 + $I_L33547_58
33553.                   if ( $I_L33547_58 >= 1 + i_layer_last + -i_layer_first ) exit
33553.                enddo
33553.             endif
33553.          endif
33553.       endif
33560.       return
33560.       end
33560.       
33592.       
33592.       subroutine two_coeff_region( ierr, n_profile, n_layer, n_cloud_top, i_2stream, l_ir_source_quad, n_source_coeff, n_cloud_type, frac_cloud, n_region, i_region_cloud, frac_region, phase_fnc_clr, omega_clr, tau_clr, phase_fnc, omega, tau, isolir, sec_00, trans, reflect, trans_0, source_coeff, nd_profile, nd_layer, nd_layer_clr, id_ct, nd_max_order, nd_source_coeff, nd_cloud_type, nd_region )
33592.       t$1008 = nd_profile
33592.       t$1009 = id_ct
33592.       t$1010 = nd_layer
33592.       t$1007 = nd_cloud_type
33671.       t$4266 = _zla( 0, nd_profile )
33592.       t$4267 = _zla( 0, nd_profile )
33592.       t$4268 = 1 + nd_layer + -id_ct
33671.       t$4269 = _zla( 0, 1 + nd_layer + -id_ct )
33592.       t$4270 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
33671.       t$4271 = _zla( 0, nd_cloud_type )
33592.       t$4272 = _zla( 0, nd_profile ) * _zla( 0, nd_cloud_type ) * _zla( 0, 1 + nd_layer + -id_ct )
33592.       t$1011 = nd_region
33673.       t$4273 = _zla( 0, nd_region )
33592.       t$4274 = _zla( 0, nd_profile ) * _zla( 0, nd_region ) * _zla( 0, 1 + nd_layer + -id_ct )
33592.       t$1012 = nd_layer_clr
33592.       t$1013 = nd_max_order
33675.       t$4275 = _zla( 0, nd_layer_clr )
33592.       t$4276 = _zla( 0, nd_profile ) * _zla( 0, nd_layer_clr )
33675.       t$4277 = _zla( 0, nd_max_order )
33592.       t$4278 = _zla( 0, nd_profile ) * _zla( 0, nd_layer_clr ) * _zla( 0, nd_max_order )
33592.       t$4279 = _zla( 0, nd_profile ) * _zla( 0, nd_layer_clr )
33592.       t$4280 = _zla( 0, nd_profile ) * _zla( 0, nd_max_order ) * _zla( 0, 1 + nd_layer + -id_ct )
33592.       t$4281 = 1 + nd_cloud_type
33685.       t$4282 = _zla( 0, 1 + nd_cloud_type )
33592.       t$4283 = _zla( 0, nd_profile ) * _zla( 0, nd_max_order ) * _zla( 0, 1 + nd_layer + -id_ct ) * _zla( 0, 1 + nd_cloud_type )
33592.       t$4284 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct ) * _zla( 0, 1 + nd_cloud_type )
33707.       t$4285 = _zla( 0, nd_layer )
33592.       t$4286 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
33592.       t$4287 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
33592.       t$4288 = _zla( 0, nd_profile ) * _zla( 0, nd_region ) * _zla( 0, nd_layer )
33592.       t$1014 = nd_source_coeff
33719.       t$4289 = _zla( 0, nd_source_coeff )
33592.       t$4290 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff )
33592.       t$4291 = _zla( 0, nd_profile ) * _zla( 0, nd_region ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff )
33751.       t$4294 = 4 * _zla( 0, nd_profile )
33740.       t$4295 = 8 * ( 7 + 4 * _zla( 0, nd_profile ) ) / 8
33740.       t$4297 = t$4295 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
33592.       t$4298 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff )
33744.       t$4299 = 8 * ( 7 + t$4295 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
33744.       t$4301 = t$4299 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff )
33742.       t$4302 = 8 * ( 7 + t$4299 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff ) ) / 8
33742.       t$4304 = t$4302 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
33738.       t$4305 = 8 * ( 7 + t$4302 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
33738.       t$4307 = t$4305 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
33592.       t$4292 = int( _alloc( t$4305 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ), 8 )
33751.       t$4293 = t$4292
33740.       t$4296 = t$4295 + t$4292
33744.       t$4300 = t$4299 + t$4292
33742.       t$4303 = t$4302 + t$4292
33738.       t$4306 = t$4305 + t$4292
33766.       call two_coeff( ierr, n_profile, 1, n_layer, i_2stream, l_ir_source_quad, phase_fnc(1, id_ct, 1, 0), omega(1, id_ct, 0), tau(1, id_ct, 0), isolir, sec_00(1, 1), trans(1, 1, 1), reflect(1, 1, 1), trans_0(1, 1, 1), source_coeff(1, 1, 1, 1), nd_profile, id_ct, nd_layer, 1, nd_layer, nd_source_coeff )
33779.       if ( ierr /= 0 ) then
33592.          _free( t$4292 )
33592.       else
33786.          if ( n_region > 0 ) then
33812.             if ( 1 < n_region ) then
33788.                if ( n_layer + -n_cloud_top >= 0 ) then
33789.                   if ( n_profile > 0 ) then
33786.                      $I_L33786_199 = 0
33786.                      do
33788.                         $I_L33788_180 = 0
33788.                         do
33789.                            $I_L33789_163 = 0
33789. !dir$ ivdep
33789. !dir$ loop_info (automatic) cache_nt( reflect )
33789.                            do
33790.                               trans(1 + $I_L33789_163, n_cloud_top + $I_L33788_180, 2 + $I_L33786_199) = 0.0
33791.                               reflect(1 + $I_L33789_163, n_cloud_top + $I_L33788_180, 2 + $I_L33786_199) = 0.0
33792.                               $I_L33789_163 = 1 + $I_L33789_163
33789.                               if ( $I_L33789_163 >= n_profile ) exit
33789.                            enddo
33793.                            $I_L33788_180 = 1 + $I_L33788_180
33792.                            if ( $I_L33788_180 >= 1 + n_layer + -n_cloud_top ) exit
33792.                         enddo
33812.                         $I_L33786_199 = 1 + $I_L33786_199
33810.                         if ( $I_L33786_199 >= -1 + n_region ) exit
33810.                      enddo
33810.                   endif
33810.                endif
33802.                if ( isolir == 1 ) then
33803.                   if ( nd_layer > 0 ) then
33804.                      if ( nd_profile > 0 ) then
33786.                         $I_L33786_203 = 0
33786.                         do
33803.                            $I_L33803_184 = 0
33803.                            do
33804.                               $I_L33804_167 = 0
33804. !dir$ ivdep
33804.                               do
33805.                                  trans_0(1 + $I_L33804_167, 1 + $I_L33803_184, 2 + $I_L33786_203) = 0.0
33806.                                  $I_L33804_167 = 1 + $I_L33804_167
33804.                                  if ( $I_L33804_167 >= nd_profile ) exit
33804.                               enddo
33807.                               $I_L33803_184 = 1 + $I_L33803_184
33806.                               if ( $I_L33803_184 >= nd_layer ) exit
33806.                            enddo
33812.                            $I_L33786_203 = 1 + $I_L33786_203
33810.                            if ( $I_L33786_203 >= -1 + n_region ) exit
33810.                         enddo
33810.                      endif
33810.                   endif
33810.                endif
33794.                if ( n_source_coeff > 0 ) then
33795.                   if ( nd_layer > 0 ) then
33796.                      if ( nd_profile > 0 ) then
33786.                         $I_L33786_212 = 0
33786.                         do
33794.                            $I_L33794_201 = 0
33794.                            do
33795.                               $I_L33795_182 = 0
33795.                               do
33796.                                  $I_L33796_165 = 0
33796. !dir$ ivdep
33796. !dir$ loop_info (automatic) cache_nt( source_coeff )
33796.                                  do
33797.                                     source_coeff(1 + $I_L33796_165, 1 + $I_L33795_182, 1 + $I_L33794_201, 2 + $I_L33786_212) = 0.0
33798.                                     $I_L33796_165 = 1 + $I_L33796_165
33796.                                     if ( $I_L33796_165 >= nd_profile ) exit
33796.                                  enddo
33799.                                  $I_L33795_182 = 1 + $I_L33795_182
33798.                                  if ( $I_L33795_182 >= nd_layer ) exit
33798.                               enddo
33800.                               $I_L33794_201 = 1 + $I_L33794_201
33799.                               if ( $I_L33794_201 >= n_source_coeff ) exit
33799.                            enddo
33812.                            $I_L33786_212 = 1 + $I_L33786_212
33810.                            if ( $I_L33786_212 >= -1 + n_region ) exit
33810.                         enddo
33810.                      endif
33810.                   endif
33810.                endif
33810.             endif
33810.          endif
33819.          if ( n_cloud_type > 0 ) then
33819.             $I_L33819_227 = 0
33819.             do
33823.                $i_region_S11 = i_region_cloud(1 + $I_L33819_227)
33825.                call two_coeff( ierr, nd_profile, 1, nd_layer, i_2stream, l_ir_source_quad, phase_fnc(1, 1, 1, 1 + $I_L33819_227), omega(1, 1, 1 + $I_L33819_227), tau(1, 1, 1 + $I_L33819_227), isolir, sec_00(1, 1), trans_temp(1, 1), reflect_temp(1, 1), trans_0_temp(1, 1), source_coeff_temp(1, 1, 1), nd_profile, 1, nd_layer, 1, nd_layer, nd_source_coeff )
33835.                if ( ierr /= 0 ) then
33592.                   _free( t$4292 )
33592.                   goto 20
33592.                endif
33839.                if ( nd_layer > 0 ) then
33840.                   if ( nd_profile > 0 ) then
33839.                      $I_L33839_176 = 0
33839.                      do
33840.                         $I_L33840_156 = 0
33840. !dir$ ivdep
33840.                         do
33843.                            reflect(1 + $I_L33840_156, 1 + $I_L33839_176, $i_region_S11) = reflect(1 + $I_L33840_156, 1 + $I_L33839_176, $i_region_S11) + reflect_temp(1 + $I_L33840_156, 1 + $I_L33839_176) * frac_cloud(1 + $I_L33840_156, 1 + $I_L33839_176, 1 + $I_L33819_227)
33841.                            trans(1 + $I_L33840_156, 1 + $I_L33839_176, $i_region_S11) = trans(1 + $I_L33840_156, 1 + $I_L33839_176, $i_region_S11) + trans_temp(1 + $I_L33840_156, 1 + $I_L33839_176) * frac_cloud(1 + $I_L33840_156, 1 + $I_L33839_176, 1 + $I_L33819_227)
33845.                            $I_L33840_156 = 1 + $I_L33840_156
33840.                            if ( $I_L33840_156 >= nd_profile ) exit
33840.                         enddo
33846.                         $I_L33839_176 = 1 + $I_L33839_176
33845.                         if ( $I_L33839_176 >= nd_layer ) exit
33845.                      enddo
33845.                   endif
33845.                endif
33848.                if ( n_source_coeff > 0 ) then
33849.                   if ( nd_layer > 0 ) then
33850.                      if ( nd_profile > 0 ) then
33849.                         $I_L33849_223 = 0
33849.                         do
33848.                            $I_L33848_219 = 0
33848.                            do
33850.                               $I_L33850_214 = 0
33850.                               do
33849.                                  $I_L33849_196 = 0
33849. !dir$ shortloop16
33849. !dir$ blocking_size( 2, 2 )
33849.                                  do
33848.                                     $I_L33848_233 = 0
33848. !dir$ shortloop16
33848. !dir$ blocking_size( 2, 2 )
33848.                                     do
33850.                                        $I_L33850_158 = 0
33850. !dir$ ivdep
33850. !dir$ loop_info (automatic) cache_nt( source_coeff )
33850. !dir$ blocking_size( 256, 256 )
33850.                                        do
33851.                                           source_coeff(1 + $I_L33850_158 + 256 * $I_L33850_214, 1 + $I_L33849_196 + 2 * $I_L33849_223, 1 + $I_L33848_233 + 2 * $I_L33848_219, $i_region_S11) = source_coeff(1 + $I_L33850_158 + 256 * $I_L33850_214, 1 + $I_L33849_196 + 2 * $I_L33849_223, 1 + $I_L33848_233 + 2 * $I_L33848_219, $i_region_S11) + frac_cloud(1 + $I_L33850_158 + 256 * $I_L33850_214, 1 + $I_L33849_196 + 2 * $I_L33849_223, 1 + $I_L33819_227) * source_coeff_temp(1 + $I_L33850_158 + 256 * $I_L33850_214, 1 + $I_L33849_196 + 2 * $I_L33849_223, 1 + $I_L33848_233 + 2 * $I_L33848_219)
33850.                                           $I_L33850_158 = 1 + $I_L33850_158
33850.                                           if ( $I_L33850_158 >= min( nd_profile, 256 + 256 * $I_L33850_214 ) + -256 * $I_L33850_214 ) exit
33850.                                        enddo
33848.                                        $I_L33848_233 = 1 + $I_L33848_233
33848.                                        if ( $I_L33848_233 >= min( n_source_coeff, 2 + 2 * $I_L33848_219 ) + -2 * $I_L33848_219 ) exit
33848.                                     enddo
33849.                                     $I_L33849_196 = 1 + $I_L33849_196
33855.                                     if ( $I_L33849_196 >= min( nd_layer, 2 + 2 * $I_L33849_223 ) + -2 * $I_L33849_223 ) exit
33855.                                  enddo
33850.                                  $I_L33850_214 = 1 + $I_L33850_214
33850.                                  if ( $I_L33850_214 >= 1 + max( 0, -1 + _rsh( 255 + nd_profile, 8 ) ) ) exit
33850.                               enddo
33848.                               $I_L33848_219 = 1 + $I_L33848_219
33856.                               if ( $I_L33848_219 >= 1 + max( 0, -1 + _rsh( 1 + n_source_coeff, 1 ) ) ) exit
33856.                            enddo
33849.                            $I_L33849_223 = 1 + $I_L33849_223
33849.                            if ( $I_L33849_223 >= 1 + max( 0, -1 + _rsh( 1 + nd_layer, 1 ) ) ) exit
33849.                         enddo
33849.                      endif
33849.                   endif
33849.                endif
33858.                if ( isolir == 1 ) then
33860.                   if ( nd_layer > 0 ) then
33861.                      if ( nd_profile > 0 ) then
33860.                         $I_L33860_178 = 0
33860.                         do
33861.                            $I_L33861_161 = 0
33861. !dir$ ivdep
33861.                            do
33862.                               trans_0(1 + $I_L33861_161, 1 + $I_L33860_178, $i_region_S11) = trans_0(1 + $I_L33861_161, 1 + $I_L33860_178, $i_region_S11) + trans_0_temp(1 + $I_L33861_161, 1 + $I_L33860_178) * frac_cloud(1 + $I_L33861_161, 1 + $I_L33860_178, 1 + $I_L33819_227)
33864.                               $I_L33861_161 = 1 + $I_L33861_161
33861.                               if ( $I_L33861_161 >= nd_profile ) exit
33861.                            enddo
33865.                            $I_L33860_178 = 1 + $I_L33860_178
33864.                            if ( $I_L33860_178 >= nd_layer ) exit
33864.                         enddo
33864.                      endif
33864.                   endif
33864.                endif
33867.                $I_L33819_227 = 1 + $I_L33819_227
33866.                if ( $I_L33819_227 >= n_cloud_type ) exit
33866.             enddo
33866.             goto 10
33866.          else
33866.    10       continue
33871.             if ( n_region > 0 ) then
33918.                if ( 1 < n_region ) then
33875.                   if ( nd_layer > 0 ) then
33876.                      if ( nd_profile > 0 ) then
33871.                         $I_L33871_205 = 0
33871.                         do
33875.                            $I_L33875_186 = 0
33875.                            do
33876.                               $I_L33876_169 = 0
33876. !dir$ ivdep
33876. !dir$ loop_info (automatic) cache_nt( trans, reflect )
33876.                               do
33877.                                  if ( frac_region(1 + $I_L33876_169, 1 + $I_L33875_186, 2 + $I_L33871_205) > 0.0 ) then
33880.                                     reflect(1 + $I_L33876_169, 1 + $I_L33875_186, 2 + $I_L33871_205) = ( reflect(1 + $I_L33876_169, 1 + $I_L33875_186, 2 + $I_L33871_205) * 1.0/frac_region(1 + $I_L33876_169, 1 + $I_L33875_186, 2 + $I_L33871_205) )
33878.                                     trans(1 + $I_L33876_169, 1 + $I_L33875_186, 2 + $I_L33871_205) = ( trans(1 + $I_L33876_169, 1 + $I_L33875_186, 2 + $I_L33871_205) * 1.0/frac_region(1 + $I_L33876_169, 1 + $I_L33875_186, 2 + $I_L33871_205) )
33878.                                  endif
33883.                                  $I_L33876_169 = 1 + $I_L33876_169
33882.                                  if ( $I_L33876_169 >= nd_profile ) exit
33882.                               enddo
33884.                               $I_L33875_186 = 1 + $I_L33875_186
33883.                               if ( $I_L33875_186 >= nd_layer ) exit
33883.                            enddo
33918.                            $I_L33871_205 = 1 + $I_L33871_205
33917.                            if ( $I_L33871_205 >= -1 + n_region ) exit
33917.                         enddo
33917.                      endif
33917.                   endif
33906.                   if ( isolir == 1 ) then
33908.                      if ( nd_layer > 0 ) then
33909.                         if ( nd_profile > 0 ) then
33871.                            $I_L33871_210 = 0
33871.                            do
33908.                               $I_L33908_188 = 0
33908.                               do
33909.                                  $I_L33909_174 = 0
33909. !dir$ ivdep
33909. !dir$ loop_info (automatic) cache_nt( trans_0 )
33909.                                  do
33910.                                     if ( frac_region(1 + $I_L33909_174, 1 + $I_L33908_188, 2 + $I_L33871_210) > 0.0 ) then
33911.                                        trans_0(1 + $I_L33909_174, 1 + $I_L33908_188, 2 + $I_L33871_210) = ( trans_0(1 + $I_L33909_174, 1 + $I_L33908_188, 2 + $I_L33871_210) * 1.0/frac_region(1 + $I_L33909_174, 1 + $I_L33908_188, 2 + $I_L33871_210) )
33911.                                     endif
33914.                                     $I_L33909_174 = 1 + $I_L33909_174
33913.                                     if ( $I_L33909_174 >= nd_profile ) exit
33913.                                  enddo
33915.                                  $I_L33908_188 = 1 + $I_L33908_188
33914.                                  if ( $I_L33908_188 >= nd_layer ) exit
33914.                               enddo
33918.                               $I_L33871_210 = 1 + $I_L33871_210
33917.                               if ( $I_L33871_210 >= -1 + n_region ) exit
33917.                            enddo
33917.                         endif
33917.                      endif
33917.                   endif
33894.                   if ( n_source_coeff > 0 ) then
33895.                      if ( nd_layer > 0 ) then
33896.                         if ( nd_profile > 0 ) then
33871.                            $I_L33871_231 = 0
33871.                            do
33895.                               $I_L33895_229 = 0
33895.                               do
33894.                                  $I_L33894_225 = 0
33894.                                  do
33896.                                     $I_L33896_221 = 0
33896.                                     do
33871.                                        $I_L33871_216 = 0
33871. !dir$ shortloop16
33871. !dir$ blocking_size( 2, 2 )
33871.                                        do
33895.                                           $I_L33895_207 = 0
33895. !dir$ shortloop16
33895. !dir$ blocking_size( 4, 4 )
33895.                                           do
33894.                                              $I_L33894_193 = 0
33894. !dir$ shortloop16
33894. !dir$ blocking_size( 4, 4 )
33894.                                              do
33896.                                                 $I_L33896_171 = 0
33896. !dir$ ivdep
33896. !dir$ loop_info (automatic) cache_nt( source_coeff )
33896. !dir$ blocking_size( 256, 256 )
33896.                                                 do
33897.                                                    if ( frac_region(1 + $I_L33896_171 + 256 * $I_L33896_221, 1 + $I_L33895_207 + 4 * $I_L33895_229, 2 + $I_L33871_216 + 2 * $I_L33871_231) > 0.0 ) then
33898.                                                       source_coeff(1 + $I_L33896_171 + 256 * $I_L33896_221, 1 + $I_L33895_207 + 4 * $I_L33895_229, 1 + $I_L33894_193 + 4 * $I_L33894_225, 2 + $I_L33871_216 + 2 * $I_L33871_231) = ( source_coeff(1 + $I_L33896_171 + 256 * $I_L33896_221, 1 + $I_L33895_207 + 4 * $I_L33895_229, 1 + $I_L33894_193 + 4 * $I_L33894_225, 2 + $I_L33871_216 + 2 * $I_L33871_231) * 1.0/frac_region(1 + $I_L33896_171 + 256 * $I_L33896_221, 1 + $I_L33895_207 + 4 * $I_L33895_229, 2 + $I_L33871_216 + 2 * $I_L33871_231) )
33898.                                                    endif
33896.                                                    $I_L33896_171 = 1 + $I_L33896_171
33901.                                                    if ( $I_L33896_171 >= min( nd_profile, 256 + 256 * $I_L33896_221 ) + -256 * $I_L33896_221 ) exit
33901.                                                 enddo
33894.                                                 $I_L33894_193 = 1 + $I_L33894_193
33894.                                                 if ( $I_L33894_193 >= min( n_source_coeff, 4 + 4 * $I_L33894_225 ) + -4 * $I_L33894_225 ) exit
33894.                                              enddo
33895.                                              $I_L33895_207 = 1 + $I_L33895_207
33902.                                              if ( $I_L33895_207 >= min( nd_layer, 4 + 4 * $I_L33895_229 ) + -4 * $I_L33895_229 ) exit
33902.                                           enddo
33871.                                           $I_L33871_216 = 1 + $I_L33871_216
33871.                                           if ( $I_L33871_216 >= min( -1 + n_region, 2 + 2 * $I_L33871_231 ) + -2 * $I_L33871_231 ) exit
33871.                                        enddo
33896.                                        $I_L33896_221 = 1 + $I_L33896_221
33903.                                        if ( $I_L33896_221 >= 1 + max( 0, -1 + _rsh( 255 + nd_profile, 8 ) ) ) exit
33903.                                     enddo
33894.                                     $I_L33894_225 = 1 + $I_L33894_225
33894.                                     if ( $I_L33894_225 >= 1 + max( 0, -1 + _rsh( 3 + n_source_coeff, 2 ) ) ) exit
33894.                                  enddo
33895.                                  $I_L33895_229 = 1 + $I_L33895_229
33917.                                  if ( $I_L33895_229 >= 1 + max( 0, -1 + _rsh( 3 + nd_layer, 2 ) ) ) exit
33917.                               enddo
33871.                               $I_L33871_231 = 1 + $I_L33871_231
33871.                               if ( $I_L33871_231 >= 1 + max( 0, -1 + _rsh( n_region, 1 ) ) ) exit
33871.                            enddo
33871.                         endif
33871.                      endif
33871.                   endif
33871.                endif
33871.             endif
33592.             _free( t$4292 )
33592.          endif
33592.       endif
33592.    20 continue
33923.       return
33923.       end
33923.       
33955.       
33955.       subroutine two_coeff_region_fast_lw( ierr, n_profile, n_layer, n_cloud_top, l_ir_source_quad, n_source_coeff, n_cloud_type, frac_cloud, n_region, i_region_cloud, frac_region, tau_clr, tau, isolir, trans, reflect, source_coeff, nd_profile, nd_layer, nd_layer_clr, id_ct, nd_source_coeff, nd_cloud_type, nd_region )
33955.       t$1016 = nd_profile
33955.       t$1017 = nd_layer
33955.       t$1015 = nd_cloud_type
34030.       t$4308 = _zla( 0, nd_profile )
33955.       t$4309 = _zla( 0, nd_profile )
34030.       t$4310 = _zla( 0, nd_layer )
33955.       t$4311 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
34030.       t$4312 = _zla( 0, nd_cloud_type )
33955.       t$4313 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_cloud_type )
33955.       t$1018 = nd_region
34032.       t$4314 = _zla( 0, nd_region )
33955.       t$4315 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_region )
33955.       t$1019 = nd_layer_clr
34034.       t$4316 = _zla( 0, nd_layer_clr )
33955.       t$4317 = _zla( 0, nd_profile ) * _zla( 0, nd_layer_clr )
33955.       t$1020 = id_ct
33955.       t$4318 = 1 + nd_layer + -id_ct
34036.       t$4319 = _zla( 0, 1 + nd_layer + -id_ct )
33955.       t$4320 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct )
33955.       t$4321 = 1 + nd_cloud_type
34036.       t$4322 = _zla( 0, 1 + nd_cloud_type )
33955.       t$4323 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer + -id_ct ) * _zla( 0, 1 + nd_cloud_type )
33955.       t$1021 = nd_source_coeff
34045.       t$4324 = _zla( 0, nd_source_coeff )
33955.       t$4325 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff )
33955.       t$4326 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_region ) * _zla( 0, nd_source_coeff )
34073.       t$4329 = 4 * _zla( 0, nd_profile )
33955.       t$4330 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff )
34066.       t$4331 = 8 * ( 7 + 4 * _zla( 0, nd_profile ) ) / 8
34066.       t$4333 = t$4331 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff )
33955.       t$4334 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
34077.       t$4335 = 8 * ( 7 + t$4331 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff ) ) / 8
34077.       t$4337 = t$4335 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
34079.       t$4338 = 8 * ( 7 + t$4335 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
34079.       t$4340 = t$4338 + 8 * _zla( 0, nd_profile )
34064.       t$4341 = 8 * ( 7 + t$4338 + 8 * _zla( 0, nd_profile ) ) / 8
34064.       t$4343 = t$4341 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
33955.       t$4327 = int( _alloc( t$4341 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ), 8 )
34073.       t$4328 = t$4327
34066.       t$4332 = t$4331 + t$4327
34077.       t$4336 = t$4335 + t$4327
34079.       t$4339 = t$4338 + t$4327
34064.       t$4342 = t$4341 + t$4327
34089.       if ( isolir /= 2 ) then
34090.          _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$1023,  _substr(t$1022,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '*** Error: Erroneous USE of non-scattering code.', 0x800600000000L ) ) )
34092.          ierr = 1
33955.          _free( t$4327 )
33955.       else
34099.          tm$3896 = loc( trans(1, 1, 1) )
34099.          trans = _copyin( trans(1, 1, 1) )
34099.          tm$3898 = loc( source_coeff(1, 1, 1, 1) )
34099.          source_coeff = _copyin( source_coeff(1, 1, 1, 1) )
34099.          t$1002 = nd_profile
34099.          t$1003 = 1
34099.          t$1004 = nd_layer_clr
34099.          t$4256 = max( 0, nd_profile )
34099.          t$4257 = max( 0, nd_profile )
34099.          t$4258 = nd_layer_clr
34099.          t$4259 = max( 0, nd_layer_clr )
34099.          t$4260 = max( 0, nd_profile ) * max( 0, nd_layer_clr )
34099.          t$1005 = nd_layer
34099.          t$4261 = max( 0, nd_layer )
34099.          t$4262 = max( 0, nd_profile ) * max( 0, nd_layer )
34099.          t$1006 = nd_source_coeff
34099.          t$4263 = max( 0, nd_profile ) * max( 0, nd_layer )
34099.          t$4264 = max( 0, nd_source_coeff )
34099.          t$4265 = max( 0, nd_profile ) * max( 0, nd_layer ) * max( 0, nd_source_coeff )
34099.          if ( -1 + n_cloud_top > 0 ) then
34099.             if ( n_profile > 0 ) then
34099.                if ( nd_profile + -n_profile > 0 ) then
34099.                   $I_L34099_346 = 0
34099.                   do
34099.                      $I_L34099_290 = 0
34099. !dir$ ivdep
34099.                      do
34099.                         trans(1 + $I_L34099_290, 1 + $I_L34099_346) = -1.6599999999999999 * tau_clr(1 + $I_L34099_290, 1 + $I_L34099_346)
34099.                         $I_L34099_290 = 1 + $I_L34099_290
34099.                         if ( $I_L34099_290 >= n_profile ) exit
34099.                      enddo
34099.                      $I_L34099_292 = 0
34099. !dir$ ivdep
34099.                      do
34099.                         trans(1 + n_profile + $I_L34099_292, 1 + $I_L34099_346) = 0.0
34099.                         $I_L34099_292 = 1 + $I_L34099_292
34099.                         if ( $I_L34099_292 >= ( nd_profile + -n_profile ) ) exit
34099.                      enddo
34099.                      $I_L34099_346 = 1 + $I_L34099_346
34099.                      if ( $I_L34099_346 >= -1 + n_cloud_top ) exit
34099.                   enddo
34099.                else
34099.                   $I_L34099_368 = 0
34099.                   do
34099.                      $I_L34099_338 = 0
34099. !dir$ ivdep
34099.                      do
34099.                         trans(1 + $I_L34099_338, 1 + $I_L34099_368) = -1.6599999999999999 * tau_clr(1 + $I_L34099_338, 1 + $I_L34099_368)
34099.                         $I_L34099_338 = 1 + $I_L34099_338
34099.                         if ( $I_L34099_338 >= n_profile ) exit
34099.                      enddo
34099.                      $I_L34099_368 = 1 + $I_L34099_368
34099.                      if ( $I_L34099_368 >= -1 + n_cloud_top ) exit
34099.                   enddo
34099.                endif
34099.             else if ( nd_profile + -n_profile > 0 ) then
34099.                $I_L34099_364 = 0
34099.                do
34099.                   $I_L34099_334 = 0
34099. !dir$ ivdep
34099.                   do
34099.                      trans(1 + n_profile + $I_L34099_334, 1 + $I_L34099_364) = 0.0
34099.                      $I_L34099_334 = 1 + $I_L34099_334
34099.                      if ( $I_L34099_334 >= ( nd_profile + -n_profile ) ) exit
34099.                   enddo
34099.                   $I_L34099_364 = 1 + $I_L34099_364
34099.                   if ( $I_L34099_364 >= -1 + n_cloud_top ) exit
34099.                enddo
34099.             endif
34099.          endif
34099.          tm$3904 = loc( trans(1, 1) )
34099.          a = _copyin( trans(1, 1) )
34099.          tm$3906 = loc( trans(1, 1) )
34099.          b = _copyin( trans(1, 1) )
34099.          t$291 = ( -nd_profile + nd_profile * n_cloud_top )
34099.          t$1977 = max( 0, ( -nd_profile + nd_profile * n_cloud_top ) )
34099.          if ( -nd_profile + nd_profile * n_cloud_top > 0 ) then
34099.             $I_L34099_294 = 0
34099. !dir$ ivdep
34099.             do
34099.                b(1 + $I_L34099_294) = _expn( a(1 + $I_L34099_294) )
34099.                $I_L34099_294 = 1 + $I_L34099_294
34099.                if ( $I_L34099_294 >= ( -nd_profile + nd_profile * n_cloud_top ) ) exit
34099.             enddo
34099.          endif
34099.          trans(1, 1) = _copyout( b )
34099.          trans(1, 1) = _copyout( a )
34099.          if ( -1 + n_cloud_top > 0 ) then
34099.             if ( n_profile > 0 ) then
34099.                $I_L34099_348 = 0
34099.                do
34099.                   $I_L34099_296 = 0
34099. !dir$ ivdep
34099.                   do
34099.                      source_coeff(1 + $I_L34099_296, 1 + $I_L34099_348, 1) = ( ( 1.0000000149011612 + -trans(1 + $I_L34099_296, 1 + $I_L34099_348) ) * 1.0/( 1.4901161193847656e-8 + 1.6599999999999999 * tau_clr(1 + $I_L34099_296, 1 + $I_L34099_348) ) )
34099.                      $I_L34099_296 = 1 + $I_L34099_296
34099.                      if ( $I_L34099_296 >= n_profile ) exit
34099.                   enddo
34099.                   $I_L34099_348 = 1 + $I_L34099_348
34099.                   if ( $I_L34099_348 >= -1 + n_cloud_top ) exit
34099.                enddo
34099.             endif
34099.          endif
34099.          if ( l_ir_source_quad /= .false. ) then
34099.             if ( -1 + n_cloud_top > 0 ) then
34099.                if ( n_profile > 0 ) then
34099.                   $I_L34099_350 = 0
34099.                   do
34099.                      $I_L34099_298 = 0
34099. !dir$ ivdep
34099.                      do
34099.                         source_coeff(1 + $I_L34099_298, 1 + $I_L34099_350, 2) = -( 1.0/( 1.4901161193847656e-8 + 1.6599999999999999 * tau_clr(1 + $I_L34099_298, 1 + $I_L34099_350) ) * ( 1.0 + trans(1 + $I_L34099_298, 1 + $I_L34099_350) + -2.0 * source_coeff(1 + $I_L34099_298, 1 + $I_L34099_350, 1) ) )
34099.                         $I_L34099_298 = 1 + $I_L34099_298
34099.                         if ( $I_L34099_298 >= n_profile ) exit
34099.                      enddo
34099.                      $I_L34099_350 = 1 + $I_L34099_350
34099.                      if ( $I_L34099_350 >= -1 + n_cloud_top ) exit
34099.                   enddo
34099.                endif
34099.             endif
34099.          endif
34099.          source_coeff(1, 1, 1, 1) = _copyout( source_coeff )
34099.          trans(1, 1, 1) = _copyout( trans )
34105.          tm$3917 = loc( trans(1, 1, 1) )
34105.          trans = _copyin( trans(1, 1, 1) )
34105.          tm$3919 = loc( source_coeff(1, 1, 1, 1) )
34105.          source_coeff = _copyin( source_coeff(1, 1, 1, 1) )
34105.          t$1002 = nd_profile
34105.          t$1003 = id_ct
34105.          t$1004 = nd_layer
34105.          t$4256 = max( 0, nd_profile )
34105.          t$4257 = max( 0, nd_profile )
34105.          t$4258 = 1 + nd_layer + -id_ct
34105.          t$4259 = max( 0, 1 + nd_layer + -id_ct )
34105.          t$4260 = max( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
34105.          t$1005 = nd_layer
34105.          t$4261 = max( 0, nd_layer )
34105.          t$4262 = max( 0, nd_profile ) * max( 0, nd_layer )
34105.          t$1006 = nd_source_coeff
34105.          t$4263 = max( 0, nd_profile ) * max( 0, nd_layer )
34105.          t$4264 = max( 0, nd_source_coeff )
34105.          t$4265 = max( 0, nd_profile ) * max( 0, nd_layer ) * max( 0, nd_source_coeff )
34105.          if ( n_layer + -n_cloud_top >= 0 ) then
34105.             if ( n_profile > 0 ) then
34105.                if ( nd_profile + -n_profile > 0 ) then
34105.                   $I_L34105_352 = 0
34105.                   do
34105.                      $I_L34105_300 = 0
34105. !dir$ ivdep
34105.                      do
34105.                         trans(1 + $I_L34105_300, n_cloud_top + $I_L34105_352) = -1.6599999999999999 * tau_clr(1 + $I_L34105_300, 1 + n_cloud_top + $I_L34105_352 + -id_ct)
34105.                         $I_L34105_300 = 1 + $I_L34105_300
34105.                         if ( $I_L34105_300 >= n_profile ) exit
34105.                      enddo
34105.                      $I_L34105_302 = 0
34105. !dir$ ivdep
34105.                      do
34105.                         trans(1 + n_profile + $I_L34105_302, n_cloud_top + $I_L34105_352) = 0.0
34105.                         $I_L34105_302 = 1 + $I_L34105_302
34105.                         if ( $I_L34105_302 >= ( nd_profile + -n_profile ) ) exit
34105.                      enddo
34105.                      $I_L34105_352 = 1 + $I_L34105_352
34105.                      if ( $I_L34105_352 >= 1 + n_layer + -n_cloud_top ) exit
34105.                   enddo
34105.                else
34105.                   $I_L34105_370 = 0
34105.                   do
34105.                      $I_L34105_340 = 0
34105. !dir$ ivdep
34105.                      do
34105.                         trans(1 + $I_L34105_340, n_cloud_top + $I_L34105_370) = -1.6599999999999999 * tau_clr(1 + $I_L34105_340, 1 + n_cloud_top + $I_L34105_370 + -id_ct)
34105.                         $I_L34105_340 = 1 + $I_L34105_340
34105.                         if ( $I_L34105_340 >= n_profile ) exit
34105.                      enddo
34105.                      $I_L34105_370 = 1 + $I_L34105_370
34105.                      if ( $I_L34105_370 >= 1 + n_layer + -n_cloud_top ) exit
34105.                   enddo
34105.                endif
34105.             else if ( nd_profile + -n_profile > 0 ) then
34105.                $I_L34105_366 = 0
34105.                do
34105.                   $I_L34105_336 = 0
34105. !dir$ ivdep
34105.                   do
34105.                      trans(1 + n_profile + $I_L34105_336, n_cloud_top + $I_L34105_366) = 0.0
34105.                      $I_L34105_336 = 1 + $I_L34105_336
34105.                      if ( $I_L34105_336 >= ( nd_profile + -n_profile ) ) exit
34105.                   enddo
34105.                   $I_L34105_366 = 1 + $I_L34105_366
34105.                   if ( $I_L34105_366 >= 1 + n_layer + -n_cloud_top ) exit
34105.                enddo
34105.             endif
34105.          endif
34105.          tm$3925 = loc( trans(1, n_cloud_top) )
34105.          a = _copyin( trans(1, n_cloud_top) )
34105.          tm$3927 = loc( trans(1, n_cloud_top) )
34105.          b = _copyin( trans(1, n_cloud_top) )
34105.          t$291 = ( nd_profile + -( nd_profile * n_cloud_top ) + nd_profile * n_layer )
34105.          t$1977 = max( 0, ( nd_profile + -( nd_profile * n_cloud_top ) + nd_profile * n_layer ) )
34105.          if ( nd_profile + -( nd_profile * n_cloud_top ) + nd_profile * n_layer > 0 ) then
34105.             $I_L34105_304 = 0
34105. !dir$ ivdep
34105.             do
34105.                b(1 + $I_L34105_304) = _expn( a(1 + $I_L34105_304) )
34105.                $I_L34105_304 = 1 + $I_L34105_304
34105.                if ( $I_L34105_304 >= ( nd_profile + -( nd_profile * n_cloud_top ) + nd_profile * n_layer ) ) exit
34105.             enddo
34105.          endif
34105.          trans(1, n_cloud_top) = _copyout( b )
34105.          trans(1, n_cloud_top) = _copyout( a )
34105.          if ( n_layer + -n_cloud_top >= 0 ) then
34105.             if ( n_profile > 0 ) then
34105.                $I_L34105_354 = 0
34105.                do
34105.                   $I_L34105_306 = 0
34105. !dir$ ivdep
34105.                   do
34105.                      source_coeff(1 + $I_L34105_306, n_cloud_top + $I_L34105_354, 1) = ( 1.0/( 1.4901161193847656e-8 + 1.6599999999999999 * tau_clr(1 + $I_L34105_306, 1 + n_cloud_top + $I_L34105_354 + -id_ct) ) * ( 1.0000000149011612 + -trans(1 + $I_L34105_306, n_cloud_top + $I_L34105_354) ) )
34105.                      $I_L34105_306 = 1 + $I_L34105_306
34105.                      if ( $I_L34105_306 >= n_profile ) exit
34105.                   enddo
34105.                   $I_L34105_354 = 1 + $I_L34105_354
34105.                   if ( $I_L34105_354 >= 1 + n_layer + -n_cloud_top ) exit
34105.                enddo
34105.             endif
34105.          endif
34105.          if ( l_ir_source_quad /= .false. ) then
34105.             if ( n_layer + -n_cloud_top >= 0 ) then
34105.                if ( n_profile > 0 ) then
34105.                   $I_L34105_356 = 0
34105.                   do
34105.                      $I_L34105_308 = 0
34105. !dir$ ivdep
34105.                      do
34105.                         source_coeff(1 + $I_L34105_308, n_cloud_top + $I_L34105_356, 2) = -( 1.0/( 1.4901161193847656e-8 + 1.6599999999999999 * tau_clr(1 + $I_L34105_308, 1 + n_cloud_top + $I_L34105_356 + -id_ct) ) * ( 1.0 + trans(1 + $I_L34105_308, n_cloud_top + $I_L34105_356) + -2.0 * source_coeff(1 + $I_L34105_308, n_cloud_top + $I_L34105_356, 1) ) )
34105.                         $I_L34105_308 = 1 + $I_L34105_308
34105.                         if ( $I_L34105_308 >= n_profile ) exit
34105.                      enddo
34105.                      $I_L34105_356 = 1 + $I_L34105_356
34105.                      if ( $I_L34105_356 >= 1 + n_layer + -n_cloud_top ) exit
34105.                   enddo
34105.                endif
34105.             endif
34105.          endif
34105.          source_coeff(1, 1, 1, 1) = _copyout( source_coeff )
34105.          trans(1, 1, 1) = _copyout( trans )
34111.          if ( ierr /= 0 ) then
33955.             _free( t$4327 )
33955.          else
34112.             if ( n_layer > 0 ) then
34113.                if ( n_profile > 0 ) then
34112.                   $I_L34112_358 = 0
34112.                   do
34113.                      $I_L34113_310 = 0
34113. !dir$ ivdep
34113.                      do
34114.                         reflect(1 + $I_L34113_310, 1 + $I_L34112_358, 1) = 0.0
34115.                         $I_L34113_310 = 1 + $I_L34113_310
34113.                         if ( $I_L34113_310 >= n_profile ) exit
34113.                      enddo
34116.                      $I_L34112_358 = 1 + $I_L34112_358
34115.                      if ( $I_L34112_358 >= n_layer ) exit
34115.                   enddo
34115.                endif
34115.             endif
34123.             if ( n_region > 0 ) then
34141.                if ( 1 < n_region ) then
34125.                   if ( n_layer + -n_cloud_top >= 0 ) then
34126.                      if ( n_profile > 0 ) then
34123.                         $I_L34123_380 = 0
34123.                         do
34125.                            $I_L34125_372 = 0
34125.                            do
34126.                               $I_L34126_342 = 0
34126. !dir$ ivdep
34126. !dir$ loop_info (automatic) cache_nt( reflect )
34126.                               do
34127.                                  trans(1 + $I_L34126_342, n_cloud_top + $I_L34125_372, 2 + $I_L34123_380) = 0.0
34128.                                  reflect(1 + $I_L34126_342, n_cloud_top + $I_L34125_372, 2 + $I_L34123_380) = 0.0
34129.                                  $I_L34126_342 = 1 + $I_L34126_342
34126.                                  if ( $I_L34126_342 >= n_profile ) exit
34126.                               enddo
34130.                               $I_L34125_372 = 1 + $I_L34125_372
34129.                               if ( $I_L34125_372 >= 1 + n_layer + -n_cloud_top ) exit
34129.                            enddo
34141.                            $I_L34123_380 = 1 + $I_L34123_380
34139.                            if ( $I_L34123_380 >= -1 + n_region ) exit
34139.                         enddo
34139.                      endif
34139.                   endif
34131.                   if ( n_source_coeff > 0 ) then
34132.                      if ( n_layer + -n_cloud_top >= 0 ) then
34133.                         if ( n_profile > 0 ) then
34123.                            $I_L34123_388 = 0
34123.                            do
34131.                               $I_L34131_382 = 0
34131.                               do
34132.                                  $I_L34132_374 = 0
34132.                                  do
34133.                                     $I_L34133_344 = 0
34133. !dir$ ivdep
34133. !dir$ loop_info (automatic) cache_nt( source_coeff )
34133.                                     do
34134.                                        source_coeff(1 + $I_L34133_344, n_cloud_top + $I_L34132_374, 1 + $I_L34131_382, 2 + $I_L34123_388) = 0.0
34135.                                        $I_L34133_344 = 1 + $I_L34133_344
34133.                                        if ( $I_L34133_344 >= n_profile ) exit
34133.                                     enddo
34136.                                     $I_L34132_374 = 1 + $I_L34132_374
34135.                                     if ( $I_L34132_374 >= 1 + n_layer + -n_cloud_top ) exit
34135.                                  enddo
34137.                                  $I_L34131_382 = 1 + $I_L34131_382
34136.                                  if ( $I_L34131_382 >= n_source_coeff ) exit
34136.                               enddo
34141.                               $I_L34123_388 = 1 + $I_L34123_388
34139.                               if ( $I_L34123_388 >= -1 + n_region ) exit
34139.                            enddo
34139.                         endif
34139.                      endif
34139.                   endif
34139.                endif
34139.             endif
34148.             if ( n_cloud_type <= 0 ) then
34141.                goto 10
34141.             else if ( n_layer + -n_cloud_top >= 0 ) then
34148.                $I_L34148_384 = 0
34148. !dir$ loop_info (automatic) cache_nt( i_region_cloud )
34148.                do
34152.                   $i_region_S39 = i_region_cloud(1 + $I_L34148_384)
34154.                   $I_L34154_376 = 0
34154.                   do
34158.                      $n_list_S27 = 0
34159.                      if ( n_profile > 0 ) then
34159.                         $I_L34159_312 = 0
34159. !dir$ ivdep
34159.                         do
34160.                            if ( frac_cloud(1 + $I_L34159_312, n_cloud_top + $I_L34154_376, 1 + $I_L34148_384) > 0.0 ) then
34161.                               $n_list_S27 = 1 + $n_list_S27
34162.                               l_list($n_list_S27) = ( 1 + $I_L34159_312 )
34162.                            endif
34164.                            $I_L34159_312 = 1 + $I_L34159_312
34163.                            if ( $I_L34159_312 >= n_profile ) exit
34163.                         enddo
34163.                      endif
34167.                      if ( $n_list_S27 > 0 ) then
34174.                         $I_L34174_314 = 0
34174. !dir$ ivdep
34174.                         do
34175.                            tau_gathered(1 + $I_L34174_314, n_cloud_top + $I_L34154_376) = tau(l_list(1 + $I_L34174_314), n_cloud_top + $I_L34154_376, 1 + $I_L34148_384)
34178.                            trans_temp(1 + $I_L34174_314, n_cloud_top + $I_L34154_376) = -1.6599999999999999 * tau_gathered(1 + $I_L34174_314, 1 + n_cloud_top + $I_L34154_376 + -id_ct)
34176.                            $I_L34174_314 = 1 + $I_L34174_314
34174.                            if ( $I_L34174_314 >= $n_list_S27 ) exit
34174.                         enddo
34178.                         t$1002 = nd_profile
34178.                         t$1003 = id_ct
34178.                         t$1004 = nd_layer
34178.                         t$4256 = max( 0, nd_profile )
34178.                         t$4257 = max( 0, nd_profile )
34178.                         t$4258 = 1 + nd_layer + -id_ct
34178.                         t$4259 = max( 0, 1 + nd_layer + -id_ct )
34178.                         t$4260 = max( 0, nd_profile ) * max( 0, 1 + nd_layer + -id_ct )
34178.                         t$1005 = nd_layer
34178.                         t$4261 = max( 0, nd_layer )
34178.                         t$4262 = max( 0, nd_profile ) * max( 0, nd_layer )
34178.                         t$1006 = nd_source_coeff
34178.                         t$4263 = max( 0, nd_profile ) * max( 0, nd_layer )
34178.                         t$4264 = max( 0, nd_source_coeff )
34178.                         t$4265 = max( 0, nd_profile ) * max( 0, nd_layer ) * max( 0, nd_source_coeff )
34178.                         if ( nd_profile + -$n_list_S27 > 0 ) then
34178.                            $I_L34178_316 = 0
34178. !dir$ ivdep
34178.                            do
34178.                               trans_temp(1 + $n_list_S27 + $I_L34178_316, n_cloud_top + $I_L34154_376) = 0.0
34178.                               $I_L34178_316 = 1 + $I_L34178_316
34178.                               if ( $I_L34178_316 >= ( nd_profile + -$n_list_S27 ) ) exit
34178.                            enddo
34178.                         endif
34178.                         tm$3940 = loc( trans_temp(1, n_cloud_top + $I_L34154_376) )
34178.                         a = _copyin( trans_temp(1, n_cloud_top + $I_L34154_376) )
34178.                         tm$3942 = loc( trans_temp(1, n_cloud_top + $I_L34154_376) )
34178.                         b = _copyin( trans_temp(1, n_cloud_top + $I_L34154_376) )
34178.                         t$291 = nd_profile
34178.                         t$1977 = max( 0, nd_profile )
34178.                         if ( nd_profile > 0 ) then
34178.                            $I_L34178_318 = 0
34178. !dir$ ivdep
34178.                            do
34178.                               b(1 + $I_L34178_318) = _expn( a(1 + $I_L34178_318) )
34178.                               $I_L34178_318 = 1 + $I_L34178_318
34178.                               if ( $I_L34178_318 >= nd_profile ) exit
34178.                            enddo
34178.                         endif
34178.                         trans_temp(1, n_cloud_top + $I_L34154_376) = _copyout( b )
34178.                         trans_temp(1, n_cloud_top + $I_L34154_376) = _copyout( a )
34178.                         $I_L34178_320 = 0
34178. !dir$ ivdep
34178.                         do
34178.                            source_coeff_temp(1 + $I_L34178_320, n_cloud_top + $I_L34154_376, 1) = ( 1.0/( 1.4901161193847656e-8 + 1.6599999999999999 * tau_gathered(1 + $I_L34178_320, 1 + n_cloud_top + $I_L34154_376 + -id_ct) ) * ( 1.0000000149011612 + -trans_temp(1 + $I_L34178_320, n_cloud_top + $I_L34154_376) ) )
34178.                            $I_L34178_320 = 1 + $I_L34178_320
34178.                            if ( $I_L34178_320 >= $n_list_S27 ) exit
34178.                         enddo
34178.                         if ( l_ir_source_quad /= .false. ) then
34178.                            $I_L34178_322 = 0
34178. !dir$ ivdep
34178.                            do
34178.                               source_coeff_temp(1 + $I_L34178_322, n_cloud_top + $I_L34154_376, 2) = -( ( 1.0 + trans_temp(1 + $I_L34178_322, n_cloud_top + $I_L34154_376) + -2.0 * source_coeff_temp(1 + $I_L34178_322, n_cloud_top + $I_L34154_376, 1) ) * 1.0/( 1.4901161193847656e-8 + 1.6599999999999999 * tau_gathered(1 + $I_L34178_322, 1 + n_cloud_top + $I_L34154_376 + -id_ct) ) )
34178.                               $I_L34178_322 = 1 + $I_L34178_322
34178.                               if ( $I_L34178_322 >= $n_list_S27 ) exit
34178.                            enddo
34178.                         endif
34186.                         $I_L34186_324 = 0
34186. !dir$ ivdep
34186.                         do
34187.                            $l_S38 = l_list(1 + $I_L34186_324)
34188.                            trans($l_S38, n_cloud_top + $I_L34154_376, $i_region_S39) = _vu_plus( trans($l_S38, n_cloud_top + $I_L34154_376, $i_region_S39), trans_temp(1 + $I_L34186_324, n_cloud_top + $I_L34154_376) * frac_cloud($l_S38, n_cloud_top + $I_L34154_376, 1 + $I_L34148_384) )
34190.                            $I_L34186_324 = 1 + $I_L34186_324
34186.                            if ( $I_L34186_324 >= $n_list_S27 ) exit
34186.                         enddo
34191.                         if ( n_source_coeff > 0 ) then
34191.                            $SI_L34191_360_G3 = 0
34191.                            do
34192.                               $SI_L34192_326_G6 = 0
34192.                               do
34191.                                  $I_L34191_396 = 0
34191. !dir$ shortloop16
34191. !dir$ blocking_size( 2, 2 )
34191.                                  do
34192.                                     $I_L34192_390 = 0
34192. !dir$ ivdep
34192. !dir$ blocking_size( 256, 256 )
34192.                                     do
34193.                                        $l_S42 = l_list(1 + $I_L34192_390 + 256 * $SI_L34192_326_G6)
34194.                                        source_coeff($l_S42, n_cloud_top + $I_L34154_376, 1 + $I_L34191_396 + 2 * $SI_L34191_360_G3, $i_region_S39) = _vu_plus( source_coeff($l_S42, n_cloud_top + $I_L34154_376, 1 + $I_L34191_396 + 2 * $SI_L34191_360_G3, $i_region_S39), frac_cloud($l_S42, n_cloud_top + $I_L34154_376, 1 + $I_L34148_384) * source_coeff_temp(1 + $I_L34192_390 + 256 * $SI_L34192_326_G6, n_cloud_top + $I_L34154_376, 1 + $I_L34191_396 + 2 * $SI_L34191_360_G3) )
34192.                                        $I_L34192_390 = 1 + $I_L34192_390
34192.                                        if ( $I_L34192_390 >= min( $n_list_S27, 256 + 256 * $SI_L34192_326_G6 ) + -256 * $SI_L34192_326_G6 ) exit
34192.                                     enddo
34191.                                     $I_L34191_396 = 1 + $I_L34191_396
34191.                                     if ( $I_L34191_396 >= min( n_source_coeff, 2 + 2 * $SI_L34191_360_G3 ) + -2 * $SI_L34191_360_G3 ) exit
34191.                                  enddo
34192.                                  $SI_L34192_326_G6 = 1 + $SI_L34192_326_G6
34198.                                  if ( $SI_L34192_326_G6 >= _rsh( 255 + $n_list_S27, 8 ) ) exit
34198.                               enddo
34191.                               $SI_L34191_360_G3 = 1 + $SI_L34191_360_G3
34191.                               if ( $SI_L34191_360_G3 >= _rsh( 1 + n_source_coeff, 1 ) ) exit
34191.                            enddo
34191.                         endif
34203.                         $I_L34154_376 = 1 + $I_L34154_376
34201.                      else
34201.                      endif
34201.                      if ( $I_L34154_376 >= 1 + n_layer + -n_cloud_top ) exit
34201.                   enddo
34204.                   $I_L34148_384 = 1 + $I_L34148_384
34203.                   if ( $I_L34148_384 >= n_cloud_type ) exit
34203.                enddo
34203.                goto 10
34203.             else
34203.    10          continue
34208.                if ( n_region > 0 ) then
34210.                   if ( n_layer + -n_cloud_top >= 0 ) then
34236.                      if ( 1 < n_region ) then
34208.                         $SI_L34208_386_G9 = 0
34208.                         do
34210.                            $SI_L34210_378_G12 = 0
34210.                            do
34208.                               $I_L34208_405 = 0
34208. !dir$ shortloop16
34208. !dir$ blocking_size( 8, 8 )
34208.                               do
34210.                                  $I_L34210_402 = 0
34210. !dir$ shortloop16
34210. !dir$ blocking_size( 8, 8 )
34210.                                  do
34213.                                     $n_list_S46 = 0
34214.                                     if ( n_profile > 0 ) then
34214.                                        $I_L34214_328 = 0
34214. !dir$ ivdep
34214.                                        do
34215.                                           if ( frac_region(1 + $I_L34214_328, n_cloud_top + $I_L34210_402 + 8 * $SI_L34210_378_G12, 2 + $I_L34208_405 + 8 * $SI_L34208_386_G9) > 0.0 ) then
34216.                                              $n_list_S46 = 1 + $n_list_S46
34217.                                              l_list($n_list_S46) = ( 1 + $I_L34214_328 )
34217.                                           endif
34219.                                           $I_L34214_328 = 1 + $I_L34214_328
34218.                                           if ( $I_L34214_328 >= n_profile ) exit
34218.                                        enddo
34218.                                     endif
34220.                                     if ( $n_list_S46 > 0 ) then
34220.                                        $I_L34220_330 = 0
34220. !dir$ ivdep
34220.                                        do
34221.                                           $l_S48 = l_list(1 + $I_L34220_330)
34222.                                           $tmp_inv_WR0_R0 = 1.0/frac_region($l_S48, n_cloud_top + $I_L34210_402 + 8 * $SI_L34210_378_G12, 2 + $I_L34208_405 + 8 * $SI_L34208_386_G9)
34222.                                           tmp_inv(1 + $I_L34220_330) = $tmp_inv_WR0_R0
34223.                                           trans($l_S48, n_cloud_top + $I_L34210_402 + 8 * $SI_L34210_378_G12, 2 + $I_L34208_405 + 8 * $SI_L34208_386_G9) = _vu_mlt( trans($l_S48, n_cloud_top + $I_L34210_402 + 8 * $SI_L34210_378_G12, 2 + $I_L34208_405 + 8 * $SI_L34208_386_G9), $tmp_inv_WR0_R0 )
34225.                                           $I_L34220_330 = 1 + $I_L34220_330
34220.                                           if ( $I_L34220_330 >= $n_list_S46 ) exit
34220.                                        enddo
34220.                                     endif
34226.                                     if ( n_source_coeff > 0 ) then
34227.                                        if ( $n_list_S46 > 0 ) then
34226.                                           $SI_L34226_362_G15 = 0
34226.                                           do
34227.                                              $SI_L34227_332_G18 = 0
34227.                                              do
34226.                                                 $I_L34226_399 = 0
34226. !dir$ shortloop16
34226. !dir$ blocking_size( 4, 4 )
34226.                                                 do
34227.                                                    $I_L34227_393 = 0
34227. !dir$ ivdep
34227. !dir$ blocking_size( 256, 256 )
34227.                                                    do
34228.                                                       $l_S50 = l_list(1 + $I_L34227_393 + 256 * $SI_L34227_332_G18)
34229.                                                       source_coeff($l_S50, n_cloud_top + $I_L34210_402 + 8 * $SI_L34210_378_G12, 1 + $I_L34226_399 + 4 * $SI_L34226_362_G15, 2 + $I_L34208_405 + 8 * $SI_L34208_386_G9) = _vu_mlt( source_coeff($l_S50, n_cloud_top + $I_L34210_402 + 8 * $SI_L34210_378_G12, 1 + $I_L34226_399 + 4 * $SI_L34226_362_G15, 2 + $I_L34208_405 + 8 * $SI_L34208_386_G9), tmp_inv(1 + $I_L34227_393 + 256 * $SI_L34227_332_G18) )
34227.                                                       $I_L34227_393 = 1 + $I_L34227_393
34227.                                                       if ( $I_L34227_393 >= min( $n_list_S46, 256 + 256 * $SI_L34227_332_G18 ) + -256 * $SI_L34227_332_G18 ) exit
34227.                                                    enddo
34226.                                                    $I_L34226_399 = 1 + $I_L34226_399
34226.                                                    if ( $I_L34226_399 >= min( n_source_coeff, 4 + 4 * $SI_L34226_362_G15 ) + -4 * $SI_L34226_362_G15 ) exit
34226.                                                 enddo
34227.                                                 $SI_L34227_332_G18 = 1 + $SI_L34227_332_G18
34232.                                                 if ( $SI_L34227_332_G18 >= _rsh( 255 + $n_list_S46, 8 ) ) exit
34232.                                              enddo
34226.                                              $SI_L34226_362_G15 = 1 + $SI_L34226_362_G15
34226.                                              if ( $SI_L34226_362_G15 >= _rsh( 3 + n_source_coeff, 2 ) ) exit
34226.                                           enddo
34226.                                        endif
34226.                                     endif
34210.                                     $I_L34210_402 = 1 + $I_L34210_402
34233.                                     if ( $I_L34210_402 >= min( 1 + n_layer + -n_cloud_top, 8 + 8 * $SI_L34210_378_G12 ) + -8 * $SI_L34210_378_G12 ) exit
34233.                                  enddo
34208.                                  $I_L34208_405 = 1 + $I_L34208_405
34208.                                  if ( $I_L34208_405 >= min( -1 + n_region, 8 + 8 * $SI_L34208_386_G9 ) + -8 * $SI_L34208_386_G9 ) exit
34208.                               enddo
34210.                               $SI_L34210_378_G12 = 1 + $SI_L34210_378_G12
34235.                               if ( $SI_L34210_378_G12 >= _rsh( 8 + n_layer + -n_cloud_top, 3 ) ) exit
34235.                            enddo
34208.                            $SI_L34208_386_G9 = 1 + $SI_L34208_386_G9
34208.                            if ( $SI_L34208_386_G9 >= _rsh( 6 + n_region, 3 ) ) exit
34208.                         enddo
34208.                      endif
34208.                   endif
34208.                endif
33955.                _free( t$4327 )
33955.             endif
33955.          endif
33955.       endif
34241.       return
34241.       end
34241.       
34263.       
34263.       subroutine two_stream( ierr, n_profile, n_layer, i_2stream, i_solver, l_scale_solar, adjust_solar_ke, isolir, diff_planck, l_ir_source_quad, diff_planck_2, flux_inc_down, flux_inc_direct, sec_00, diffuse_albedo, direct_albedo, d_planck_flux_surface, tau, omega, asymmetry, flux_direct, flux_total, nd_profile, nd_layer, nd_source_coeff )
34263.       t$1024 = nd_profile
34263.       t$1025 = nd_layer
34353.       t$4344 = _zla( 0, nd_profile )
34263.       t$4345 = _zla( 0, nd_profile )
34353.       t$4346 = _zla( 0, nd_layer )
34263.       t$4347 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
34263.       t$4348 = 1 + nd_layer
34358.       t$4349 = _zla( 0, 1 + nd_layer )
34263.       t$4350 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
34263.       t$1026 = ( 2 + 2 * nd_layer )
34360.       t$4351 = _zla( 0, ( 2 + 2 * nd_layer ) )
34263.       t$4352 = _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
34263.       t$4353 = 5 * _zla( 0, nd_profile )
34263.       t$4354 = 5 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
34382.       t$4357 = 40 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
34384.       t$4358 = 8 * ( 7 + 40 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) ) ) / 8
34384.       t$4360 = t$4358 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
34371.       t$4361 = 8 * ( 7 + t$4358 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) ) ) / 8
34371.       t$4363 = t$4361 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
34263.       t$1027 = nd_source_coeff
34263.       t$4364 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
34375.       t$4365 = _zla( 0, nd_source_coeff )
34263.       t$4366 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff )
34375.       t$4367 = 8 * ( 7 + t$4361 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
34375.       t$4369 = t$4367 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff )
34377.       t$4370 = 8 * ( 7 + t$4367 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff ) ) / 8
34377.       t$4372 = t$4370 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
34379.       t$4373 = 8 * ( 7 + t$4370 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
34379.       t$4375 = t$4373 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
34369.       t$4376 = 8 * ( 7 + t$4373 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
34369.       t$4378 = t$4376 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
34373.       t$4379 = 8 * ( 7 + t$4376 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
34373.       t$4381 = t$4379 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer )
34386.       t$4382 = 8 * ( 7 + t$4379 + 8 * _zla( 0, nd_profile ) * _zla( 0, nd_layer ) ) / 8
34386.       t$4384 = t$4382 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) )
34263.       t$4355 = int( _alloc( t$4382 + 8 * _zla( 0, nd_profile ) * _zla( 0, ( 2 + 2 * nd_layer ) ) ), 8 )
34382.       t$4356 = t$4355
34384.       t$4359 = t$4358 + t$4355
34371.       t$4362 = t$4361 + t$4355
34375.       t$4368 = t$4367 + t$4355
34377.       t$4371 = t$4370 + t$4355
34379.       t$4374 = t$4373 + t$4355
34369.       t$4377 = t$4376 + t$4355
34373.       t$4380 = t$4379 + t$4355
34386.       t$4383 = t$4382 + t$4355
34398.       call two_coeff( ierr, n_profile, 1, n_layer, i_2stream, l_ir_source_quad, asymmetry(1, 1), omega(1, 1), tau(1, 1), isolir, sec_00(1, 1), trans(1, 1), reflect(1, 1), trans_0(1, 1), source_coeff(1, 1, 1), nd_profile, 1, nd_layer, 1, nd_layer, nd_source_coeff )
34407.       if ( ierr /= 0 ) then
34263.          _free( t$4355 )
34263.       else
34410.          if ( isolir == 1 ) then
34411.             t$796 = nd_profile
34411.             t$3041 = _zla( 0, nd_profile )
34411.             t$797 = nd_layer
34411.             t$3042 = _zla( 0, nd_profile )
34411.             t$3043 = _zla( 0, nd_layer )
34411.             t$3044 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
34411.             t$798 = nd_source_coeff
34411.             t$3045 = _zla( 0, nd_profile ) * _zla( 0, nd_layer )
34411.             t$3046 = _zla( 0, nd_source_coeff )
34411.             t$3047 = _zla( 0, nd_profile ) * _zla( 0, nd_layer ) * _zla( 0, nd_source_coeff )
34411.             t$3048 = 1 + nd_layer
34411.             t$3049 = _zla( 0, 1 + nd_layer )
34411.             t$3050 = _zla( 0, nd_profile ) * _zla( 0, 1 + nd_layer )
34411.             if ( n_profile > 0 ) then
34411.                $I_L34411_254 = 0
34411. !dir$ ivdep
34411.                do
34411.                   flux_direct(1 + $I_L34411_254, 0) = flux_inc_direct(1 + $I_L34411_254)
34411.                   $I_L34411_254 = 1 + $I_L34411_254
34411.                   if ( $I_L34411_254 >= n_profile ) exit
34411.                enddo
34411.             endif
34411.             if ( l_scale_solar /= .false. ) then
34411.                if ( nd_layer > 0 ) then
34411.                   if ( nd_profile > 0 ) then
34411.                      $I_L34411_295 = 0
34411.                      if ( nd_layer >= 2 ) then
34411.                         $I_L34411_313 = 0
34411. !dir$ blocking_size( 1, 1 )
34411.                         do
34411.                            $I_L34411_262 = 0
34411. !dir$ ivdep
34411. !dir$ blocking_size( 256, 256 )
34411.                            do
34411.                               $flux_direct_WR0_R0 = flux_direct(1 + $I_L34411_262, 2 * $I_L34411_313) * adjust_solar_ke(1 + $I_L34411_262, 1 + 2 * $I_L34411_313) * trans_0(1 + $I_L34411_262, 1 + 2 * $I_L34411_313)
34411.                               flux_direct(1 + $I_L34411_262, 1 + 2 * $I_L34411_313) = $flux_direct_WR0_R0
34411.                               s_up(1 + $I_L34411_262, 1 + 2 * $I_L34411_313) = flux_direct(1 + $I_L34411_262, 2 * $I_L34411_313) * source_coeff(1 + $I_L34411_262, 1 + 2 * $I_L34411_313, 1)
34411.                               s_down(1 + $I_L34411_262, 1 + 2 * $I_L34411_313) = $flux_direct_WR0_R0 + flux_direct(1 + $I_L34411_262, 2 * $I_L34411_313) * ( source_coeff(1 + $I_L34411_262, 1 + 2 * $I_L34411_313, 2) + -trans_0(1 + $I_L34411_262, 1 + 2 * $I_L34411_313) )
34411.                               $flux_direct_WR0_R0 = $flux_direct_WR0_R0 * trans_0(1 + $I_L34411_262, 2 + 2 * $I_L34411_313) * adjust_solar_ke(1 + $I_L34411_262, 2 + 2 * $I_L34411_313)
34411.                               flux_direct(1 + $I_L34411_262, 2 + 2 * $I_L34411_313) = $flux_direct_WR0_R0
34411.                               s_up(1 + $I_L34411_262, 2 + 2 * $I_L34411_313) = flux_direct(1 + $I_L34411_262, 1 + 2 * $I_L34411_313) * source_coeff(1 + $I_L34411_262, 2 + 2 * $I_L34411_313, 1)
34411.                               s_down(1 + $I_L34411_262, 2 + 2 * $I_L34411_313) = $flux_direct_WR0_R0 + flux_direct(1 + $I_L34411_262, 1 + 2 * $I_L34411_313) * ( source_coeff(1 + $I_L34411_262, 2 + 2 * $I_L34411_313, 2) + -trans_0(1 + $I_L34411_262, 2 + 2 * $I_L34411_313) )
34411.                               $I_L34411_262 = 1 + $I_L34411_262
34411.                               if ( $I_L34411_262 >= nd_profile ) exit
34411.                            enddo
34411.                            $I_L34411_313 = 1 + $I_L34411_313
34411.                            if ( $I_L34411_313 >= _rsh( nd_layer, 1 ) ) exit
34411.                         enddo
34411.                         $I_L34411_295 = and( 0xfffffffffffffffeUL, nd_layer )
34411.                      endif
34411.                      if ( $I_L34411_295 < nd_layer ) then
34411.                         $I_L34411_262 = 0
34411. !dir$ ivdep
34411. !dir$ blocking_size( 256, 256 )
34411.                         do
34411.                            $flux_direct_WR0_R0 = flux_direct(1 + $I_L34411_262, $I_L34411_295) * trans_0(1 + $I_L34411_262, 1 + $I_L34411_295) * adjust_solar_ke(1 + $I_L34411_262, 1 + $I_L34411_295)
34411.                            flux_direct(1 + $I_L34411_262, 1 + $I_L34411_295) = $flux_direct_WR0_R0
34411.                            s_up(1 + $I_L34411_262, 1 + $I_L34411_295) = flux_direct(1 + $I_L34411_262, $I_L34411_295) * source_coeff(1 + $I_L34411_262, 1 + $I_L34411_295, 1)
34411.                            s_down(1 + $I_L34411_262, 1 + $I_L34411_295) = $flux_direct_WR0_R0 + flux_direct(1 + $I_L34411_262, $I_L34411_295) * ( source_coeff(1 + $I_L34411_262, 1 + $I_L34411_295, 2) + -trans_0(1 + $I_L34411_262, 1 + $I_L34411_295) )
34411.                            $I_L34411_262 = 1 + $I_L34411_262
34411.                            if ( $I_L34411_262 >= nd_profile ) exit
34411.                         enddo
34411.                      endif
34411.                   endif
34411.                endif
34411.             else if ( nd_layer > 0 ) then
34411.                if ( nd_profile > 0 ) then
34411.                   $I_L34411_293 = 0
34411.                   if ( nd_layer >= 2 ) then
34411.                      $I_L34411_315 = 0
34411. !dir$ blocking_size( 1, 1 )
34411.                      do
34411.                         $I_L34411_260 = 0
34411. !dir$ ivdep
34411. !dir$ blocking_size( 256, 256 )
34411.                         do
34411.                            flux_direct(1 + $I_L34411_260, 1 + 2 * $I_L34411_315) = trans_0(1 + $I_L34411_260, 1 + 2 * $I_L34411_315) * flux_direct(1 + $I_L34411_260, 2 * $I_L34411_315)
34411.                            s_up(1 + $I_L34411_260, 1 + 2 * $I_L34411_315) = flux_direct(1 + $I_L34411_260, 2 * $I_L34411_315) * source_coeff(1 + $I_L34411_260, 1 + 2 * $I_L34411_315, 1)
34411.                            s_down(1 + $I_L34411_260, 1 + 2 * $I_L34411_315) = flux_direct(1 + $I_L34411_260, 2 * $I_L34411_315) * source_coeff(1 + $I_L34411_260, 1 + 2 * $I_L34411_315, 2)
34411.                            flux_direct(1 + $I_L34411_260, 2 + 2 * $I_L34411_315) = flux_direct(1 + $I_L34411_260, 1 + 2 * $I_L34411_315) * trans_0(1 + $I_L34411_260, 2 + 2 * $I_L34411_315)
34411.                            s_up(1 + $I_L34411_260, 2 + 2 * $I_L34411_315) = flux_direct(1 + $I_L34411_260, 1 + 2 * $I_L34411_315) * source_coeff(1 + $I_L34411_260, 2 + 2 * $I_L34411_315, 1)
34411.                            s_down(1 + $I_L34411_260, 2 + 2 * $I_L34411_315) = flux_direct(1 + $I_L34411_260, 1 + 2 * $I_L34411_315) * source_coeff(1 + $I_L34411_260, 2 + 2 * $I_L34411_315, 2)
34411.                            $I_L34411_260 = 1 + $I_L34411_260
34411.                            if ( $I_L34411_260 >= nd_profile ) exit
34411.                         enddo
34411.                         $I_L34411_315 = 1 + $I_L34411_315
34411.                         if ( $I_L34411_315 >= _rsh( nd_layer, 1 ) ) exit
34411.                      enddo
34411.                      $I_L34411_293 = and( 0xfffffffffffffffeUL, nd_layer )
34411.                   endif
34411.                   if ( $I_L34411_293 < nd_layer ) then
34411.                      $I_L34411_260 = 0
34411. !dir$ ivdep
34411. !dir$ blocking_size( 256, 256 )
34411.                      do
34411.                         flux_direct(1 + $I_L34411_260, 1 + $I_L34411_293) = flux_direct(1 + $I_L34411_260, $I_L34411_293) * trans_0(1 + $I_L34411_260, 1 + $I_L34411_293)
34411.                         s_up(1 + $I_L34411_260, 1 + $I_L34411_293) = flux_direct(1 + $I_L34411_260, $I_L34411_293) * source_coeff(1 + $I_L34411_260, 1 + $I_L34411_293, 1)
34411.                         s_down(1 + $I_L34411_260, 1 + $I_L34411_293) = flux_direct(1 + $I_L34411_260, $I_L34411_293) * source_coeff(1 + $I_L34411_260, 1 + $I_L34411_293, 2)
34411.                         $I_L34411_260 = 1 + $I_L34411_260
34411.                         if ( $I_L34411_260 >= nd_profile ) exit
34411.                      enddo
34411.                   endif
34411.                endif
34411.             endif
34419.          else if ( isolir == 2 ) then
34420.             t$582 = nd_profile
34420.             t$583 = nd_layer
34420.             t$584 = nd_source_coeff
34420.             t$2206 = max( 0, nd_profile )
34420.             t$2207 = max( 0, nd_profile )
34420.             t$2208 = max( 0, nd_layer )
34420.             t$2209 = max( 0, nd_profile ) * max( 0, nd_layer )
34420.             t$2210 = max( 0, nd_source_coeff )
34420.             t$2211 = max( 0, nd_profile ) * max( 0, nd_layer ) * max( 0, nd_source_coeff )
34420.             t$2212 = max( 0, nd_profile ) * max( 0, nd_layer )
34420.             if ( l_ir_source_quad /= .false. ) then
34420.                if ( nd_layer > 0 ) then
34420.                   if ( nd_profile > 0 ) then
34420.                      $I_L34420_291 = 0
34420.                      do
34420.                         $I_L34420_258 = 0
34420. !dir$ ivdep
34420.                         do
34420.                            s_up(1 + $I_L34420_258, 1 + $I_L34420_291) = diff_planck_2(1 + $I_L34420_258, 1 + $I_L34420_291) * source_coeff(1 + $I_L34420_258, 1 + $I_L34420_291, 2) + diff_planck(1 + $I_L34420_258, 1 + $I_L34420_291) * source_coeff(1 + $I_L34420_258, 1 + $I_L34420_291, 1)
34420.                            s_down(1 + $I_L34420_258, 1 + $I_L34420_291) = -( diff_planck(1 + $I_L34420_258, 1 + $I_L34420_291) * source_coeff(1 + $I_L34420_258, 1 + $I_L34420_291, 1) ) + diff_planck_2(1 + $I_L34420_258, 1 + $I_L34420_291) * source_coeff(1 + $I_L34420_258, 1 + $I_L34420_291, 2)
34420.                            $I_L34420_258 = 1 + $I_L34420_258
34420.                            if ( $I_L34420_258 >= nd_profile ) exit
34420.                         enddo
34420.                         $I_L34420_291 = 1 + $I_L34420_291
34420.                         if ( $I_L34420_291 >= nd_layer ) exit
34420.                      enddo
34420.                   endif
34420.                endif
34420.             else if ( nd_layer > 0 ) then
34420.                if ( nd_profile > 0 ) then
34420.                   $I_L34420_289 = 0
34420.                   do
34420.                      $I_L34420_256 = 0
34420. !dir$ ivdep
34420.                      do
34420.                         $s_up_WR0_R1 = diff_planck(1 + $I_L34420_256, 1 + $I_L34420_289) * source_coeff(1 + $I_L34420_256, 1 + $I_L34420_289, 1)
34420.                         s_up(1 + $I_L34420_256, 1 + $I_L34420_289) = $s_up_WR0_R1
34420.                         s_down(1 + $I_L34420_256, 1 + $I_L34420_289) = -$s_up_WR0_R1
34420.                         $I_L34420_256 = 1 + $I_L34420_256
34420.                         if ( $I_L34420_256 >= nd_profile ) exit
34420.                      enddo
34420.                      $I_L34420_289 = 1 + $I_L34420_289
34420.                      if ( $I_L34420_289 >= nd_layer ) exit
34420.                   enddo
34420.                endif
34420.             endif
34420.          endif
34430.          if ( i_solver == 1 ) then
34431.             tm$4005 = loc( flux_direct(1, n_layer) )
34431.             flux_direct_ground = _copyin( flux_direct(1, n_layer) )
34431.             t$761 = nd_profile
34431.             t$762 = nd_layer
34431.             t$2955 = max( 0, nd_profile )
34431.             t$2956 = max( 0, nd_profile )
34431.             t$2957 = max( 0, nd_layer )
34431.             t$2958 = max( 0, nd_profile ) * max( 0, nd_layer )
34431.             t$763 = ( 2 + 2 * nd_layer )
34431.             t$2959 = 5 * max( 0, nd_profile )
34431.             t$2960 = max( 0, ( 2 + 2 * nd_layer ) )
34431.             t$2961 = 5 * max( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
34431.             t$2962 = max( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
34431.             if ( n_profile > 0 ) then
34431.                $I_L34431_264 = 0
34431. !dir$ ivdep
34431.                do
34431.                   a5(1 + $I_L34431_264, 4, 2) = 0.0
34431.                   a5(1 + $I_L34431_264, 3, 2) = 1.0
34431.                   a5(1 + $I_L34431_264, 2, 2) = 0.0
34431.                   a5(1 + $I_L34431_264, 1, 2) = 0.0
34431.                   b(1 + $I_L34431_264, 2) = flux_inc_down(1 + $I_L34431_264)
34431.                   $I_L34431_264 = 1 + $I_L34431_264
34431.                   if ( $I_L34431_264 >= n_profile ) exit
34431.                enddo
34431.             endif
34431.             if ( n_layer > 0 ) then
34431.                if ( n_profile > 0 ) then
34431.                   $I_L34431_301 = 0
34431.                   do
34431.                      $I_L34431_276 = 0
34431. !dir$ ivdep
34431.                      do
34431.                         a5(1 + $I_L34431_276, 5, 1 + 2 * $I_L34431_301) = 0.0
34431.                         a5(1 + $I_L34431_276, 4, 1 + 2 * $I_L34431_301) = 0.0
34431.                         a5(1 + $I_L34431_276, 3, 1 + 2 * $I_L34431_301) = -1.0
34431.                         a5(1 + $I_L34431_276, 2, 1 + 2 * $I_L34431_301) = reflect(1 + $I_L34431_276, 1 + $I_L34431_301)
34431.                         a5(1 + $I_L34431_276, 1, 1 + 2 * $I_L34431_301) = trans(1 + $I_L34431_276, 1 + $I_L34431_301)
34431.                         b(1 + $I_L34431_276, 1 + 2 * $I_L34431_301) = -s_up(1 + $I_L34431_276, 1 + $I_L34431_301)
34431.                         a5(1 + $I_L34431_276, 5, 4 + 2 * $I_L34431_301) = trans(1 + $I_L34431_276, 1 + $I_L34431_301)
34431.                         a5(1 + $I_L34431_276, 4, 4 + 2 * $I_L34431_301) = reflect(1 + $I_L34431_276, 1 + $I_L34431_301)
34431.                         a5(1 + $I_L34431_276, 3, 4 + 2 * $I_L34431_301) = -1.0
34431.                         a5(1 + $I_L34431_276, 2, 4 + 2 * $I_L34431_301) = 0.0
34431.                         a5(1 + $I_L34431_276, 1, 4 + 2 * $I_L34431_301) = 0.0
34431.                         b(1 + $I_L34431_276, 4 + 2 * $I_L34431_301) = -s_down(1 + $I_L34431_276, 1 + $I_L34431_301)
34431.                         $I_L34431_276 = 1 + $I_L34431_276
34431.                         if ( $I_L34431_276 >= n_profile ) exit
34431.                      enddo
34431.                      $I_L34431_301 = 1 + $I_L34431_301
34431.                      if ( $I_L34431_301 >= n_layer ) exit
34431.                   enddo
34431.                endif
34431.             endif
34431.             if ( n_profile > 0 ) then
34431.                $I_L34431_278 = 0
34431. !dir$ ivdep
34431.                do
34431.                   a5(1 + $I_L34431_278, 5, 1 + 2 * n_layer) = 0.0
34431.                   a5(1 + $I_L34431_278, 4, 1 + 2 * n_layer) = 0.0
34431.                   a5(1 + $I_L34431_278, 3, 1 + 2 * n_layer) = 1.0
34431.                   a5(1 + $I_L34431_278, 2, 1 + 2 * n_layer) = -diffuse_albedo(1 + $I_L34431_278)
34431.                   b(1 + $I_L34431_278, 1 + 2 * n_layer) = d_planck_flux_surface(1 + $I_L34431_278) * ( 1.0 + -diffuse_albedo(1 + $I_L34431_278) ) + flux_direct_ground(1 + $I_L34431_278) * ( direct_albedo(1 + $I_L34431_278) + -diffuse_albedo(1 + $I_L34431_278) )
34431.                   $I_L34431_278 = 1 + $I_L34431_278
34431.                   if ( $I_L34431_278 >= n_profile ) exit
34431.                enddo
34431.             endif
34431.             flux_direct(1, n_layer) = _copyout( flux_direct_ground )
34442.             tm$4016 = loc( work_1(1, 1) )
34442.             rho = _copyin( work_1(1, 1) )
34442.             t$140 = nd_profile
34442.             t$141 = 5
34442.             t$142 = ( 2 + 2 * nd_layer )
34442.             t$1339 = max( 0, nd_profile )
34442.             t$1340 = max( 0, nd_profile )
34442.             t$1341 = 5
34442.             t$1342 = 5 * max( 0, nd_profile )
34442.             t$1343 = max( 0, ( 2 + 2 * nd_layer ) )
34442.             t$1344 = 5 * max( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
34442.             t$1345 = max( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
34442.             if ( -2 * n_layer <= 0 ) then
34442.                if ( n_profile > 0 ) then
34442.                   $I_L34442_311 = 0
34442.                   do
34442.                      $I_L34442_309 = 0
34442.                      do
34442.                         j = ( 1 + $I_L34442_309 )
34442.                         $I_L34442_280 = 0
34442. !dir$ ivdep
34442.                         do
34442.                            $rho_WR0_R2 = ( a5(1 + $I_L34442_280, 3 + -j, 2 + -j + -$I_L34442_311 + 2 * n_layer) * 1.0/a5(1 + $I_L34442_280, 3, 2 + -$I_L34442_311 + 2 * n_layer) )
34442.                            rho(1 + $I_L34442_280) = $rho_WR0_R2
34442.                            b(1 + $I_L34442_280, 1 + -$I_L34442_309 + -$I_L34442_311 + 2 * n_layer) = b(1 + $I_L34442_280, 2 + -j + -$I_L34442_311 + 2 * n_layer) + -( $rho_WR0_R2 * b(1 + $I_L34442_280, 2 + -$I_L34442_311 + 2 * n_layer) )
34442.                            $I_L34442_280 = 1 + $I_L34442_280
34442.                            if ( $I_L34442_280 >= n_profile ) exit
34442.                         enddo
34442.                         $I_L34442_307 = 0
34442.                         do
34442.                            $I_L34442_305 = 0
34442. !dir$ blocking_size( 2, 2 )
34442.                            do
34442.                               $I_L34442_282 = 0
34442. !dir$ ivdep
34442. !dir$ blocking_size( 256, 256 )
34442.                               do
34442.                                  a5(1 + $I_L34442_282 + 256 * $I_L34442_307, 3 + $I_L34442_305 + -$I_L34442_309, 1 + -$I_L34442_309 + -$I_L34442_311 + 2 * n_layer) = a5(1 + $I_L34442_282 + 256 * $I_L34442_307, 4 + $I_L34442_305 + -j, 2 + -j + -$I_L34442_311 + 2 * n_layer) + -( rho(1 + $I_L34442_282 + 256 * $I_L34442_307) * a5(1 + $I_L34442_282 + 256 * $I_L34442_307, 4 + $I_L34442_305, 2 + -$I_L34442_311 + 2 * n_layer) )
34442.                                  $I_L34442_282 = 1 + $I_L34442_282
34442.                                  if ( $I_L34442_282 >= min( n_profile, 256 + 256 * $I_L34442_307 ) + -256 * $I_L34442_307 ) exit
34442.                               enddo
34442.                               $I_L34442_305 = 1 + $I_L34442_305
34442.                               if ( $I_L34442_305 >= ( min( 2, ( 1 + -$I_L34442_311 + 2 * n_layer ) ) ) ) exit
34442.                            enddo
34442.                            $I_L34442_307 = 1 + $I_L34442_307
34442.                            if ( $I_L34442_307 >= 1 + max( 0, -1 + _rsh( 255 + n_profile, 8 ) ) ) exit
34442.                         enddo
34442.                         $I_L34442_309 = 1 + $I_L34442_309
34442.                         if ( $I_L34442_309 >= ( min( 2, ( 1 + -$I_L34442_311 + 2 * n_layer ) ) ) ) exit
34442.                      enddo
34442.                      $I_L34442_311 = 1 + $I_L34442_311
34442.                      if ( $I_L34442_311 >= 1 + 2 * n_layer ) exit
34442.                   enddo
34442.                endif
34442.             endif
34442.             if ( n_profile > 0 ) then
34442.                $I_L34442_285 = 0
34442. !dir$ ivdep
34442.                do
34442.                   $flux_total_WR0_R3 = ( b(1 + $I_L34442_285, 1) * 1.0/a5(1 + $I_L34442_285, 3, 1) )
34442.                   flux_total(1 + $I_L34442_285, 1) = $flux_total_WR0_R3
34442.                   flux_total(1 + $I_L34442_285, 2) = ( 1.0/a5(1 + $I_L34442_285, 3, 2) * ( b(1 + $I_L34442_285, 2) + -( $flux_total_WR0_R3 * a5(1 + $I_L34442_285, 4, 2) ) ) )
34442.                   $I_L34442_285 = 1 + $I_L34442_285
34442.                   if ( $I_L34442_285 >= n_profile ) exit
34442.                enddo
34442.             endif
34442.             if ( 2 * n_layer > 0 ) then
34442.                if ( n_profile > 0 ) then
34442.                   $I_L34442_303 = 0
34442. !dir$ blocking_size( 1, 1 )
34442.                   do
34442.                      $I_L34442_287 = 0
34442. !dir$ ivdep
34442. !dir$ blocking_size( 256, 256 )
34442.                      do
34442.                         flux_total(1 + $I_L34442_287, 3 + $I_L34442_303) = ( 1.0/a5(1 + $I_L34442_287, 3, 3 + $I_L34442_303) * ( b(1 + $I_L34442_287, 3 + $I_L34442_303) + -( flux_total(1 + $I_L34442_287, 1 + $I_L34442_303) * a5(1 + $I_L34442_287, 5, 3 + $I_L34442_303) ) + -( flux_total(1 + $I_L34442_287, 2 + $I_L34442_303) * a5(1 + $I_L34442_287, 4, 3 + $I_L34442_303) ) ) )
34442.                         $I_L34442_287 = 1 + $I_L34442_287
34442.                         if ( $I_L34442_287 >= n_profile ) exit
34442.                      enddo
34442.                      $I_L34442_303 = 1 + $I_L34442_303
34442.                      if ( $I_L34442_303 >= ( 2 * n_layer ) ) exit
34442.                   enddo
34442.                endif
34442.             endif
34442.             work_1(1, 1) = _copyout( rho )
34442.             goto 10
34450.          else if ( i_solver == 13 ) then
34452.             tm$4034 = loc( flux_direct(1, n_layer) )
34452.             flux_direct_ground = _copyin( flux_direct(1, n_layer) )
34452.             t$898 = nd_profile
34452.             t$899 = nd_layer
34452.             t$3578 = max( 0, nd_profile )
34452.             t$3579 = max( 0, nd_profile )
34452.             t$3580 = max( 0, nd_layer )
34452.             t$3581 = max( 0, nd_profile ) * max( 0, nd_layer )
34452.             t$900 = ( 2 + 2 * nd_layer )
34452.             t$3582 = max( 0, ( 2 + 2 * nd_layer ) )
34452.             t$3583 = max( 0, nd_profile ) * max( 0, ( 2 + 2 * nd_layer ) )
34452.             t$901 = ( 1 + nd_layer )
34452.             t$3584 = max( 0, ( 1 + nd_layer ) )
34452.             t$3585 = max( 0, nd_profile ) * max( 0, ( 1 + nd_layer ) )
34452.             t$3588 = 8 * max( 0, nd_profile ) * max( 0, ( 1 + nd_layer ) )
34452.             t$3589 = 8 * ( 7 + 8 * max( 0, nd_profile ) * max( 0, ( 1 + nd_layer ) ) ) / 8
34452.             t$3591 = t$3589 + 8 * max( 0, nd_profile ) * max( 0, nd_layer )
34452.             t$3592 = 8 * ( 7 + t$3589 + 8 * max( 0, nd_profile ) * max( 0, nd_layer ) ) / 8
34452.             t$3594 = t$3592 + 8 * max( 0, nd_profile ) * max( 0, nd_layer )
34452.             t$3595 = 8 * ( 7 + t$3592 + 8 * max( 0, nd_profile ) * max( 0, nd_layer ) ) / 8
34452.             t$3597 = t$3595 + 8 * max( 0, nd_profile ) * max( 0, nd_layer )
34452.             t$3598 = 8 * ( 7 + t$3595 + 8 * max( 0, nd_profile ) * max( 0, nd_layer ) ) / 8
34452.             t$3600 = t$3598 + 8 * max( 0, nd_profile ) * max( 0, ( 1 + nd_layer ) )
34452.             t$3586 = int( _alloc( t$3598 + 8 * max( 0, nd_profile ) * max( 0, ( 1 + nd_layer ) ) ), 8 )
34452.             t$3587 = t$3586
34452.             t$3590 = t$3589 + t$3586
34452.             t$3593 = t$3592 + t$3586
34452.             t$3596 = t$3595 + t$3586
34452.             t$3599 = t$3598 + t$3586
34452.             if ( isolir == 1 ) then
34452.                if ( n_profile > 0 ) then
34452.                   $I_L34452_266 = 0
34452. !dir$ ivdep
34452.                   do
34452.                      alpha(1 + $I_L34452_266, 1 + n_layer) = diffuse_albedo(1 + $I_L34452_266)
34452.                      s_up_prime(1 + $I_L34452_266, 1 + n_layer) = flux_direct_ground(1 + $I_L34452_266) * ( direct_albedo(1 + $I_L34452_266) + -diffuse_albedo(1 + $I_L34452_266) )
34452.                      $I_L34452_266 = 1 + $I_L34452_266
34452.                      if ( $I_L34452_266 >= n_profile ) exit
34452.                   enddo
34452.                endif
34452.             else if ( isolir == 2 ) then
34452.                if ( n_profile > 0 ) then
34452.                   $I_L34452_268 = 0
34452. !dir$ ivdep
34452.                   do
34452.                      alpha(1 + $I_L34452_268, 1 + n_layer) = diffuse_albedo(1 + $I_L34452_268)
34452.                      s_up_prime(1 + $I_L34452_268, 1 + n_layer) = d_planck_flux_surface(1 + $I_L34452_268) * ( 1.0 + -diffuse_albedo(1 + $I_L34452_268) )
34452.                      $I_L34452_268 = 1 + $I_L34452_268
34452.                      if ( $I_L34452_268 >= n_profile ) exit
34452.                   enddo
34452.                endif
34452.             endif
34452.             if ( n_layer > 0 ) then
34452.                if ( n_profile > 0 ) then
34452.                   $I_L34452_297 = 0
34452.                   if ( n_layer >= 2 ) then
34452.                      $I_L34452_317 = 0
34452. !dir$ blocking_size( 1, 1 )
34452.                      do
34452.                         $I_L34452_270 = 0
34452. !dir$ ivdep
34452. !dir$ blocking_size( 256, 256 )
34452.                         do
34452.                            $beta_WR0_R4 = 1.0/( 1.0 + -( alpha(1 + $I_L34452_270, 1 + n_layer + -2 * $I_L34452_317) * reflect(1 + $I_L34452_270, n_layer + -2 * $I_L34452_317) ) )
34452.                            beta(1 + $I_L34452_270, n_layer + -2 * $I_L34452_317) = $beta_WR0_R4
34452.                            $gamma_WR0_R5 = alpha(1 + $I_L34452_270, 1 + n_layer + -2 * $I_L34452_317) * trans(1 + $I_L34452_270, n_layer + -2 * $I_L34452_317)
34452.                            gamma(1 + $I_L34452_270, n_layer + -2 * $I_L34452_317) = $gamma_WR0_R5
34452.                            $h_WR0_R6 = s_up_prime(1 + $I_L34452_270, 1 + n_layer + -2 * $I_L34452_317) + alpha(1 + $I_L34452_270, 1 + n_layer + -2 * $I_L34452_317) * s_down(1 + $I_L34452_270, n_layer + -2 * $I_L34452_317)
34452.                            h(1 + $I_L34452_270, n_layer + -2 * $I_L34452_317) = $h_WR0_R6
34452.                            alpha(1 + $I_L34452_270, n_layer + -2 * $I_L34452_317) = reflect(1 + $I_L34452_270, n_layer + -2 * $I_L34452_317) + $beta_WR0_R4 * $gamma_WR0_R5 * trans(1 + $I_L34452_270, n_layer + -2 * $I_L34452_317)
34452.                            s_up_prime(1 + $I_L34452_270, n_layer + -2 * $I_L34452_317) = s_up(1 + $I_L34452_270, n_layer + -2 * $I_L34452_317) + $beta_WR0_R4 * $h_WR0_R6 * trans(1 + $I_L34452_270, n_layer + -2 * $I_L34452_317)
34452.                            $beta_WR0_R4 = 1.0/( 1.0 + -( alpha(1 + $I_L34452_270, n_layer + -2 * $I_L34452_317) * reflect(1 + $I_L34452_270, -1 + n_layer + -2 * $I_L34452_317) ) )
34452.                            beta(1 + $I_L34452_270, -1 + n_layer + -2 * $I_L34452_317) = $beta_WR0_R4
34452.                            $gamma_WR0_R5 = alpha(1 + $I_L34452_270, n_layer + -2 * $I_L34452_317) * trans(1 + $I_L34452_270, -1 + n_layer + -2 * $I_L34452_317)
34452.                            gamma(1 + $I_L34452_270, -1 + n_layer + -2 * $I_L34452_317) = $gamma_WR0_R5
34452.                            $h_WR0_R6 = s_up_prime(1 + $I_L34452_270, n_layer + -2 * $I_L34452_317) + alpha(1 + $I_L34452_270, n_layer + -2 * $I_L34452_317) * s_down(1 + $I_L34452_270, -1 + n_layer + -2 * $I_L34452_317)
34452.                            h(1 + $I_L34452_270, -1 + n_layer + -2 * $I_L34452_317) = $h_WR0_R6
34452.                            alpha(1 + $I_L34452_270, -1 + n_layer + -2 * $I_L34452_317) = reflect(1 + $I_L34452_270, -1 + n_layer + -2 * $I_L34452_317) + $beta_WR0_R4 * $gamma_WR0_R5 * trans(1 + $I_L34452_270, -1 + n_layer + -2 * $I_L34452_317)
34452.                            s_up_prime(1 + $I_L34452_270, -1 + n_layer + -2 * $I_L34452_317) = s_up(1 + $I_L34452_270, -1 + n_layer + -2 * $I_L34452_317) + $beta_WR0_R4 * $h_WR0_R6 * trans(1 + $I_L34452_270, -1 + n_layer + -2 * $I_L34452_317)
34452.                            $I_L34452_270 = 1 + $I_L34452_270
34452.                            if ( $I_L34452_270 >= n_profile ) exit
34452.                         enddo
34452.                         $I_L34452_317 = 1 + $I_L34452_317
34452.                         if ( $I_L34452_317 >= _rsh( n_layer, 1 ) ) exit
34452.                      enddo
34452.                      $I_L34452_297 = and( 0xfffffffffffffffeUL, n_layer )
34452.                   endif
34452.                   if ( $I_L34452_297 < n_layer ) then
34452.                      $I_L34452_270 = 0
34452. !dir$ ivdep
34452. !dir$ blocking_size( 256, 256 )
34452.                      do
34452.                         $beta_WR0_R4 = 1.0/( 1.0 + -( reflect(1 + $I_L34452_270, n_layer + -$I_L34452_297) * alpha(1 + $I_L34452_270, 1 + n_layer + -$I_L34452_297) ) )
34452.                         beta(1 + $I_L34452_270, n_layer + -$I_L34452_297) = $beta_WR0_R4
34452.                         $gamma_WR0_R5 = alpha(1 + $I_L34452_270, 1 + n_layer + -$I_L34452_297) * trans(1 + $I_L34452_270, n_layer + -$I_L34452_297)
34452.                         gamma(1 + $I_L34452_270, n_layer + -$I_L34452_297) = $gamma_WR0_R5
34452.                         $h_WR0_R6 = s_up_prime(1 + $I_L34452_270, 1 + n_layer + -$I_L34452_297) + alpha(1 + $I_L34452_270, 1 + n_layer + -$I_L34452_297) * s_down(1 + $I_L34452_270, n_layer + -$I_L34452_297)
34452.                         h(1 + $I_L34452_270, n_layer + -$I_L34452_297) = $h_WR0_R6
34452.                         alpha(1 + $I_L34452_270, n_layer + -$I_L34452_297) = reflect(1 + $I_L34452_270, n_layer + -$I_L34452_297) + $beta_WR0_R4 * $gamma_WR0_R5 * trans(1 + $I_L34452_270, n_layer + -$I_L34452_297)
34452.                         s_up_prime(1 + $I_L34452_270, n_layer + -$I_L34452_297) = s_up(1 + $I_L34452_270, n_layer + -$I_L34452_297) + $beta_WR0_R4 * $h_WR0_R6 * trans(1 + $I_L34452_270, n_layer + -$I_L34452_297)
34452.                         $I_L34452_270 = 1 + $I_L34452_270
34452.                         if ( $I_L34452_270 >= n_profile ) exit
34452.                      enddo
34452.                   endif
34452.                endif
34452.             endif
34452.             if ( n_profile > 0 ) then
34452.                $I_L34452_272 = 0
34452. !dir$ ivdep
34452.                do
34452.                   $flux_total_WR0_R7 = flux_inc_down(1 + $I_L34452_272)
34452.                   flux_total(1 + $I_L34452_272, 2) = $flux_total_WR0_R7
34452.                   flux_total(1 + $I_L34452_272, 1) = s_up_prime(1 + $I_L34452_272, 1) + $flux_total_WR0_R7 * alpha(1 + $I_L34452_272, 1)
34452.                   $I_L34452_272 = 1 + $I_L34452_272
34452.                   if ( $I_L34452_272 >= n_profile ) exit
34452.                enddo
34452.             endif
34452.             if ( n_layer > 0 ) then
34452.                if ( n_profile > 0 ) then
34452.                   $I_L34452_299 = 0
34452.                   if ( n_layer >= 2 ) then
34452.                      $I_L34452_319 = 0
34452.                      do
34452.                         $I_L34452_274 = 0
34452. !dir$ ivdep
34452.                         do
34452.                            $flux_total_WR0_R8 = beta(1 + $I_L34452_274, 1 + 2 * $I_L34452_319) * ( h(1 + $I_L34452_274, 1 + 2 * $I_L34452_319) + gamma(1 + $I_L34452_274, 1 + 2 * $I_L34452_319) * flux_total(1 + $I_L34452_274, 2 + 4 * $I_L34452_319) )
34452.                            flux_total(1 + $I_L34452_274, 3 + 4 * $I_L34452_319) = $flux_total_WR0_R8
34452.                            flux_total(1 + $I_L34452_274, 4 + 4 * $I_L34452_319) = s_down(1 + $I_L34452_274, 1 + 2 * $I_L34452_319) + $flux_total_WR0_R8 * reflect(1 + $I_L34452_274, 1 + 2 * $I_L34452_319) + flux_total(1 + $I_L34452_274, 2 + 4 * $I_L34452_319) * trans(1 + $I_L34452_274, 1 + 2 * $I_L34452_319)
34452.                            $flux_total_WR0_R8 = beta(1 + $I_L34452_274, 2 + 2 * $I_L34452_319) * ( h(1 + $I_L34452_274, 2 + 2 * $I_L34452_319) + flux_total(1 + $I_L34452_274, 4 + 4 * $I_L34452_319) * gamma(1 + $I_L34452_274, 2 + 2 * $I_L34452_319) )
34452.                            flux_total(1 + $I_L34452_274, 5 + 4 * $I_L34452_319) = $flux_total_WR0_R8
34452.                            flux_total(1 + $I_L34452_274, 6 + 4 * $I_L34452_319) = s_down(1 + $I_L34452_274, 2 + 2 * $I_L34452_319) + flux_total(1 + $I_L34452_274, 4 + 4 * $I_L34452_319) * trans(1 + $I_L34452_274, 2 + 2 * $I_L34452_319) + $flux_total_WR0_R8 * reflect(1 + $I_L34452_274, 2 + 2 * $I_L34452_319)
34452.                            $I_L34452_274 = 1 + $I_L34452_274
34452.                            if ( $I_L34452_274 >= n_profile ) exit
34452.                         enddo
34452.                         $I_L34452_319 = 1 + $I_L34452_319
34452.                         if ( $I_L34452_319 >= _rsh( n_layer, 1 ) ) exit
34452.                      enddo
34452.                      $I_L34452_299 = and( 0xfffffffffffffffeUL, n_layer )
34452.                   endif
34452.                   if ( $I_L34452_299 < n_layer ) then
34452.                      $I_L34452_274 = 0
34452. !dir$ ivdep
34452.                      do
34452.                         $flux_total_WR0_R8 = beta(1 + $I_L34452_274, 1 + $I_L34452_299) * ( h(1 + $I_L34452_274, 1 + $I_L34452_299) + flux_total(1 + $I_L34452_274, 2 + 2 * $I_L34452_299) * gamma(1 + $I_L34452_274, 1 + $I_L34452_299) )
34452.                         flux_total(1 + $I_L34452_274, 3 + 2 * $I_L34452_299) = $flux_total_WR0_R8
34452.                         flux_total(1 + $I_L34452_274, 4 + 2 * $I_L34452_299) = s_down(1 + $I_L34452_274, 1 + $I_L34452_299) + flux_total(1 + $I_L34452_274, 2 + 2 * $I_L34452_299) * trans(1 + $I_L34452_274, 1 + $I_L34452_299) + $flux_total_WR0_R8 * reflect(1 + $I_L34452_274, 1 + $I_L34452_299)
34452.                         $I_L34452_274 = 1 + $I_L34452_274
34452.                         if ( $I_L34452_274 >= n_profile ) exit
34452.                      enddo
34452.                   endif
34452.                endif
34452.             endif
34452.             _free( t$3586 )
34452.             flux_direct(1, n_layer) = _copyout( flux_direct_ground )
34452.    10       continue
34263.             _free( t$4355 )
34263.          else
34464.             _fwrite( _clist( 0, 0, 3, 6, Null_Arg, Null_Arg, t$1029,  _substr(t$1028,1,4), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '***Error: The solver and the cloud scheme are incompatiable.', 0x800600000000L ) ) )
34466.             ierr = 1
34263.             _free( t$4355 )
34263.          endif
34263.       endif
34474.       return
34474.       end
34474.       
 2457.       
 2457.       module esrad
 2457.       end
 2457.       
34564.       
34564.       subroutine initradukmo( kmax, sl, nls )
34564.       t$9951 = kmax
34572.       t$9999 = _zla( 0, kmax )
34578.        _substr(t$10178,1,17) = '**(InitRadUKMO)**'
34578.        _substr(t$10179,1,30) = ' Reading UKMO SW Spectral file'
34578.       call msgone(  _substr(t$10178,1,17),  _substr(t$10179,1,30) )
34579.       call read_spectrum_90(  _substr(fnamespecsw,1,206), swdat, ierr )
34582.        _substr(t$10180,1,17) = '**(InitRadUKMO)**'
34582.        _substr(t$10181,1,30) = ' Reading UKMO LW Spectral file'
34582.       call msgone(  _substr(t$10180,1,17),  _substr(t$10181,1,30) )
34583.       call read_spectrum_90(  _substr(fnamespeclw,1,206), lwdat, ierr )
34586.        _substr(t$10182,1,17) = '**(InitRadUKMO)**'
34586.        _substr(t$10183,1,29) = ' Creating Aerosol Climatology'
34586.       call msgone(  _substr(t$10182,1,17),  _substr(t$10183,1,29) )
34587.       call initaerclim( kmax, sl(1), nls )
34589.       return
34589.       end
34589.       
34591.       
34591.       subroutine initaerclim( kmax, sl, nls )
34591.       t$9952 = kmax
34596.       t$10000 = _zla( 0, kmax )
34600.       t$10003 = 8 * _zla( 0, kmax )
34591.       t$10001 = int( _alloc( 8 * _zla( 0, kmax ) ), 8 )
34600.       t$10002 = t$10001
34636.       aerosol_clim_land%header%a_contig = 1
34636.       aerosol_clim_land%dim_1%LB = 1
34636.       aerosol_clim_land%dim_1%EX = _zla( 0, kmax )
34636.       aerosol_clim_land%dim_1%SM = 1
34636.       aerosol_clim_land%dim_2%LB = 1
34636.       aerosol_clim_land%dim_2%EX = 5
34636.       aerosol_clim_land%dim_2%SM = _zla( 0, kmax )
34636.       $_allo_P1(0) = 0x1000000000001L
34636.       $_allo_P1(1) = loc( aerosol_clim_land )
34636.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
34637.       aerosol_clim_ocean%header%a_contig = 1
34637.       aerosol_clim_ocean%dim_1%LB = 1
34637.       aerosol_clim_ocean%dim_1%EX = _zla( 0, kmax )
34637.       aerosol_clim_ocean%dim_1%SM = 1
34637.       aerosol_clim_ocean%dim_2%LB = 1
34637.       aerosol_clim_ocean%dim_2%EX = 5
34637.       aerosol_clim_ocean%dim_2%SM = _zla( 0, kmax )
34637.       $_allo_P2(0) = 0x1000000000001L
34637.       $_allo_P2(1) = loc( aerosol_clim_ocean )
34637.       call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
34640.       if ( sl(1) > sl(2) ) then
34642.          $F_A33 = kmax
34642.          if ( kmax > 0 ) then
34642.             $I_A1 = 0
34642. !dir$ ivdep
34642.             do
34642.                flipsl(1 + $I_A1) = sl(kmax + -$I_A1)
34642.                $I_A1 = 1 + $I_A1
34642.                if ( $I_A1 >= $F_A33 ) exit
34642.             enddo
34642.          endif
34642.       else
34645.          $F_A34 = kmax
34645.          if ( kmax > 0 ) then
34645.             $I_A1 = 0
34645. !dir$ ivdep
34645.             do
34645.                flipsl(1 + $I_A1) = sl(1 + $I_A1)
34645.                $I_A1 = 1 + $I_A1
34645.                if ( $I_A1 >= $F_A34 ) exit
34645.             enddo
34645.          endif
34645.       endif
34649.        _substr(t$10184,1,17) = '**(InitAerClim)**'
34649.        _substr(t$10185,1,37) = ' Number of climatological aerosols: 5'
34649.       call msgone(  _substr(t$10184,1,17),  _substr(t$10185,1,37) )
34650.        _substr(t$10186,1,17) = '**(InitAerClim)**'
34650.        _substr(t$10187,1,55) = '                            Total column mass (kg m-2) '
34650.       call msgone(  _substr(t$10186,1,17),  _substr(t$10187,1,55) )
34651.        _substr(t$10188,1,17) = '**(InitAerClim)**'
34651.        _substr(t$10189,1,63) = ' Index   Aertype  bl_land      bl_ocean     free_trop    strat '
34651.       call msgone(  _substr(t$10188,1,17),  _substr(t$10189,1,63) )
34652.       $I_L34652_20 = 0
34652.       do
34653.          if ( ( ( 1 + $I_L34652_20 ) < lwdat%aerosol%type_aerosol%dim_1%LB .or. ( 1 + $I_L34652_20 ) > -1 + lwdat%aerosol%type_aerosol%dim_1%LB + lwdat%aerosol%type_aerosol%dim_1%EX ) /= .false. ) then
34653.              _substr(t$10192,1,13) = 'Rad_UKMO.f90'
34653.              _substr(t$10193,1,13) = 'TYPE_AEROSOL'
34653.             t$10194 = lwdat%aerosol%type_aerosol%dim_1%LB
34653.             t$10195 = -1 + lwdat%aerosol%type_aerosol%dim_1%LB + lwdat%aerosol%type_aerosol%dim_1%EX
34653.             t$10196 = 1 + $I_L34652_20
34653.             call _bounds_error(  _substr(t$10192,1,13), 34653,  _substr(t$10193,1,13), 1, t$10194, t$10195, t$10196, t$10191 )
34653.          endif
34654.          if ( ( ( 1 + $I_L34652_20 ) <= 0 .or. ( 1 + $I_L34652_20 ) > 5 ) /= .false. ) then
34654.              _substr(t$10198,1,13) = 'Rad_UKMO.f90'
34654.              _substr(t$10199,1,12) = 'BL_LANDMASS'
34654.             t$10200 = 1 + $I_L34652_20
34654.             call _bounds_error(  _substr(t$10198,1,13), 34654,  _substr(t$10199,1,12), 1, 1, 5, t$10200, t$10197 )
34654.          endif
34654.          if ( ( ( 1 + $I_L34652_20 ) <= 0 .or. ( 1 + $I_L34652_20 ) > 5 ) /= .false. ) then
34654.              _substr(t$10202,1,13) = 'Rad_UKMO.f90'
34654.              _substr(t$10203,1,13) = 'BL_OCEANMASS'
34654.             t$10204 = 1 + $I_L34652_20
34654.             call _bounds_error(  _substr(t$10202,1,13), 34654,  _substr(t$10203,1,13), 1, 1, 5, t$10204, t$10201 )
34654.          endif
34654.          if ( ( ( 1 + $I_L34652_20 ) <= 0 .or. ( 1 + $I_L34652_20 ) > 5 ) /= .false. ) then
34654.              _substr(t$10206,1,13) = 'Rad_UKMO.f90'
34654.              _substr(t$10207,1,14) = 'FREETROP_MASS'
34654.             t$10208 = 1 + $I_L34652_20
34654.             call _bounds_error(  _substr(t$10206,1,13), 34654,  _substr(t$10207,1,14), 1, 1, 5, t$10208, t$10205 )
34654.          endif
34654.          if ( ( ( 1 + $I_L34652_20 ) <= 0 .or. ( 1 + $I_L34652_20 ) > 5 ) /= .false. ) then
34654.              _substr(t$10210,1,13) = 'Rad_UKMO.f90'
34654.              _substr(t$10211,1,11) = 'STRAT_MASS'
34654.             t$10212 = 1 + $I_L34652_20
34654.             call _bounds_error(  _substr(t$10210,1,13), 34654,  _substr(t$10211,1,11), 1, 1, 5, t$10212, t$10209 )
34654.          endif
34653.          $IOitem_O0 = ( 1 + $I_L34652_20 )
34653.          $_IOitem_P0(0) = bl_landmass(1 + $I_L34652_20)
34653.          $_IOitem_P0(1) = bl_oceanmass(1 + $I_L34652_20)
34653.          $_IOitem_P0(2) = freetrop_mass(1 + $I_L34652_20)
34653.          $_IOitem_P0(3) = strat_mass(1 + $I_L34652_20)
34653.          _fwrite( _clist( 0, 0, 3,  _substr(line,1,128), Null_Arg, Null_Arg, t$9954,  _substr(t$9953,1,25), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O0, 0x2000200000000L ), _iotype( (lwdat%aerosol%type_aerosol%base_addr)(1 + $I_L34652_20, 0), 0x2000200000000L ), _iotype( (&)$_IOitem_P0(:( 0, 3, 1 )), 0x2000300000000L ) ) )
34655.           _substr(t$10213,1,17) = '**(InitAerClim)**'
34655.          call msgone(  _substr(t$10213,1,17),  _substr(line,1,_ltrim(  _substr(line,1,128) )) )
34656.          $I_L34652_20 = 1 + $I_L34652_20
34655.          if ( $I_L34652_20 >= 5 ) exit
34655.       enddo
34661.       k = 1
34661.       if ( kmax > 0 ) then
34661.          $I_L34661_22 = 0
34661. !dir$ ivdep
34661.          do
34662.             if ( flipsl(2 + $I_L34661_22) > 7.5e-1 ) then
34661.                k = ( 1 + $I_L34661_22 )
34661.                goto 10
34661.             endif
34663.             $I_L34661_22 = 1 + $I_L34661_22
34663.             if ( $I_L34661_22 >= kmax ) exit
34663.          enddo
34663.          k = ( 1 + kmax )
34663.       endif
34663.    10 continue
34667.       if ( ( k <= 0 .or. k > kmax ) /= .false. ) then
34667.           _substr(t$10218,1,13) = 'Rad_UKMO.f90'
34667.           _substr(t$10219,1,7) = 'FLIPSL'
34667.          t$10194 = k
34667.          call _bounds_error(  _substr(t$10218,1,13), 34667,  _substr(t$10219,1,7), 1, 1, t$9952, t$10194, t$10217 )
34667.       endif
34666.       $IOitem_O1 = flipsl(k)
34666.       _fwrite( _clist( 0, 0, 3,  _substr(line,1,128), Null_Arg, Null_Arg, t$9956,  _substr(t$9955,1,61), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( k, 0x2000200000000L ), _iotype( $IOitem_O1, 0x804060300000000L ) ) )
34668.        _substr(t$10220,1,17) = '**(InitAerClim)**'
34668.       call msgone(  _substr(t$10220,1,17),  _substr(line,1,_ltrim(  _substr(line,1,128) )) )
34672.       if ( ( nls <= 0 .or. nls > t$9952 ) /= .false. ) then
34672.           _substr(t$10222,1,13) = 'Rad_UKMO.f90'
34672.           _substr(t$10223,1,7) = 'FLIPSL'
34672.          t$10195 = nls
34672.          call _bounds_error(  _substr(t$10222,1,13), 34672,  _substr(t$10223,1,7), 1, 1, t$9952, t$10195, t$10221 )
34672.       endif
34671.       $IOitem_O2 = flipsl(nls)
34671.       _fwrite( _clist( 0, 0, 3,  _substr(line,1,128), Null_Arg, Null_Arg, t$9958,  _substr(t$9957,1,71), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( nls, 0x2000200000000L ), _iotype( $IOitem_O2, 0x804060300000000L ) ) )
34673.        _substr(t$10224,1,17) = '**(InitAerClim)**'
34673.       call msgone(  _substr(t$10224,1,17),  _substr(line,1,_ltrim(  _substr(line,1,128) )) )
34685.       $SC_flipsl_I0 = flipsl(nls)
34688.       $SC_aerosol_clim_ocean_I9 = aerosol_clim_ocean%dim_2%SM
34688.       $SC_aerosol_clim_ocean_I8 = aerosol_clim_ocean%dim_2%EX
34688.       $SC_aerosol_clim_ocean_I10 = aerosol_clim_ocean%dim_2%LB
34688.       $SC_aerosol_clim_ocean_I6 = aerosol_clim_ocean%dim_1%EX
34688.       $SC_aerosol_clim_ocean_I7 = aerosol_clim_ocean%dim_1%LB
34685.       $SC_aerosol_clim_land_I4 = aerosol_clim_land%dim_2%SM
34685.       $SC_aerosol_clim_land_I3 = aerosol_clim_land%dim_2%EX
34685.       $SC_aerosol_clim_land_I5 = aerosol_clim_land%dim_2%LB
34685.       $SC_aerosol_clim_land_I1 = aerosol_clim_land%dim_1%EX
34685.       $SC_aerosol_clim_land_I2 = aerosol_clim_land%dim_1%LB
34684.       $I_L34684_42 = 0
34684.       do
34685.          $F_A35 = nls
34685.          if ( nls > 0 ) then
34685.             $SCA_strat_mass_I15 = strat_mass(1 + $I_L34684_42)
34685.             $I_L34685_30 = 0
34685. !dir$ ivdep
34685.             do
34685.                (aerosol_clim_land%base_addr)(1 + $I_L34685_30, 1 + $I_L34684_42, 0) = ( 9.8086599999999997 * $SCA_strat_mass_I15 * 1.0/$SC_flipsl_I0 )
34685.                $I_L34685_30 = 1 + $I_L34685_30
34685.                if ( $I_L34685_30 >= $F_A35 ) exit
34685.             enddo
34685.          endif
34688.          $F_A36 = nls
34688.          if ( nls > 0 ) then
34688.             $SCA_strat_mass_I14 = strat_mass(1 + $I_L34684_42)
34688.             $I_L34688_32 = 0
34688. !dir$ ivdep
34688.             do
34688.                (aerosol_clim_ocean%base_addr)(1 + $I_L34688_32, 1 + $I_L34684_42, 0) = ( 9.8086599999999997 * $SCA_strat_mass_I14 * 1.0/$SC_flipsl_I0 )
34688.                $I_L34688_32 = 1 + $I_L34688_32
34688.                if ( $I_L34688_32 >= $F_A36 ) exit
34688.             enddo
34688.          endif
34690.          $I_L34684_42 = 1 + $I_L34684_42
34684.          if ( $I_L34684_42 >= 5 ) exit
34684.       enddo
34695.       $SC_flipsl_I11 = flipsl(k)
34695.       $SC_flipsl_I0 = flipsl(nls)
34698.       $SC_aerosol_clim_ocean_I9 = aerosol_clim_ocean%dim_2%SM
34698.       $SC_aerosol_clim_ocean_I8 = aerosol_clim_ocean%dim_2%EX
34698.       $SC_aerosol_clim_ocean_I10 = aerosol_clim_ocean%dim_2%LB
34698.       $SC_aerosol_clim_ocean_I6 = aerosol_clim_ocean%dim_1%EX
34698.       $SC_aerosol_clim_ocean_I7 = aerosol_clim_ocean%dim_1%LB
34695.       $SC_aerosol_clim_land_I4 = aerosol_clim_land%dim_2%SM
34695.       $SC_aerosol_clim_land_I3 = aerosol_clim_land%dim_2%EX
34695.       $SC_aerosol_clim_land_I5 = aerosol_clim_land%dim_2%LB
34695.       $SC_aerosol_clim_land_I1 = aerosol_clim_land%dim_1%EX
34695.       $SC_aerosol_clim_land_I2 = aerosol_clim_land%dim_1%LB
34694.       $I_L34694_44 = 0
34694.       do
34695.          $F_A37 = ( k + -nls )
34695.          if ( k + -nls > 0 ) then
34695.             $SCA_freetrop_mass_I16 = freetrop_mass(1 + $I_L34694_44)
34695.             $I_L34695_34 = 0
34695. !dir$ ivdep
34695.             do
34695.                (aerosol_clim_land%base_addr)(1 + nls + $I_L34695_34, 1 + $I_L34694_44, 0) = 9.6827838104639684e-5 * ( $SCA_freetrop_mass_I16 * 1.0/( $SC_flipsl_I11 + -$SC_flipsl_I0 ) )
34695.                $I_L34695_34 = 1 + $I_L34695_34
34695.                if ( $I_L34695_34 >= $F_A37 ) exit
34695.             enddo
34695.          endif
34698.          $F_A38 = ( k + -nls )
34698.          if ( k + -nls > 0 ) then
34698.             $SCA_freetrop_mass_I13 = freetrop_mass(1 + $I_L34694_44)
34698.             $I_L34698_36 = 0
34698. !dir$ ivdep
34698.             do
34698.                (aerosol_clim_ocean%base_addr)(1 + nls + $I_L34698_36, 1 + $I_L34694_44, 0) = 9.6827838104639684e-5 * ( $SCA_freetrop_mass_I13 * 1.0/( $SC_flipsl_I11 + -$SC_flipsl_I0 ) )
34698.                $I_L34698_36 = 1 + $I_L34698_36
34698.                if ( $I_L34698_36 >= $F_A38 ) exit
34698.             enddo
34698.          endif
34700.          $I_L34694_44 = 1 + $I_L34694_44
34694.          if ( $I_L34694_44 >= 5 ) exit
34694.       enddo
34709.       $SC_flipsl_I12 = $SC_flipsl_I11
34712.       $SC_aerosol_clim_ocean_I9 = aerosol_clim_ocean%dim_2%SM
34712.       $SC_aerosol_clim_ocean_I8 = aerosol_clim_ocean%dim_2%EX
34712.       $SC_aerosol_clim_ocean_I10 = aerosol_clim_ocean%dim_2%LB
34712.       $SC_aerosol_clim_ocean_I6 = aerosol_clim_ocean%dim_1%EX
34712.       $SC_aerosol_clim_ocean_I7 = aerosol_clim_ocean%dim_1%LB
34709.       $SC_aerosol_clim_land_I4 = aerosol_clim_land%dim_2%SM
34709.       $SC_aerosol_clim_land_I3 = aerosol_clim_land%dim_2%EX
34709.       $SC_aerosol_clim_land_I5 = aerosol_clim_land%dim_2%LB
34709.       $SC_aerosol_clim_land_I1 = aerosol_clim_land%dim_1%EX
34709.       $SC_aerosol_clim_land_I2 = aerosol_clim_land%dim_1%LB
34708.       $I_L34708_46 = 0
34708.       do
34709.          $F_A39 = ( kmax + -k )
34709.          if ( kmax + -k > 0 ) then
34709.             $SCA_bl_landmass_I17 = bl_landmass(1 + $I_L34708_46)
34709.             $I_L34709_38 = 0
34709. !dir$ ivdep
34709.             do
34709.                (aerosol_clim_land%base_addr)(1 + k + $I_L34709_38, 1 + $I_L34708_46, 0) = 9.6827838104639684e-5 * ( $SCA_bl_landmass_I17 * 1.0/( 1.0 + -$SC_flipsl_I12 ) )
34709.                $I_L34709_38 = 1 + $I_L34709_38
34709.                if ( $I_L34709_38 >= $F_A39 ) exit
34709.             enddo
34709.          endif
34712.          $F_A40 = ( kmax + -k )
34712.          if ( kmax + -k > 0 ) then
34712.             $SCA_bl_oceanmass_I18 = bl_oceanmass(1 + $I_L34708_46)
34712.             $I_L34712_40 = 0
34712. !dir$ ivdep
34712.             do
34712.                (aerosol_clim_ocean%base_addr)(1 + k + $I_L34712_40, 1 + $I_L34708_46, 0) = 9.6827838104639684e-5 * ( $SCA_bl_oceanmass_I18 * 1.0/( 1.0 + -$SC_flipsl_I12 ) )
34712.                $I_L34712_40 = 1 + $I_L34712_40
34712.                if ( $I_L34712_40 >= $F_A40 ) exit
34712.             enddo
34712.          endif
34714.          $I_L34708_46 = 1 + $I_L34708_46
34708.          if ( $I_L34708_46 >= 5 ) exit
34708.       enddo
34591.       _free( t$10001 )
34717.       return
34717.       end
34717.       
34719.       
34719.       subroutine destroyradukmo
34724.       $_allo_P0(0) = 0x1000000000001L
34724.       $_allo_P0(1) = loc( aerosol_clim_land )
34724.       call __deallocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
34724.       aerosol_clim_land%header%assoc = 0
34725.       $_allo_P1(0) = 0x1000000000001L
34725.       $_allo_P1(1) = loc( aerosol_clim_ocean )
34725.       call __deallocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
34725.       aerosol_clim_ocean%header%assoc = 0
34727.       return
34727.       end
34727.       
34739.       
34739.       subroutine ukmo_swintf( ncols, kmax, cosz, s0, pbot, pmid, dp, te, qe, o3, co2val, tg, imask, albvisdiff, albnirdiff, albvisbeam, albnirbeam, toadown, sfcvisbeam, sfcvisdiff, sfcnirbeam, sfcnirdiff, sfcvisbeamc, sfcvisdiffc, sfcnirbeamc, sfcnirdiffc, toanetc, toanet, sfcnet, sfcnetc, heatratec, heatrate, cld, clu, fice, rei, rel, lmixr )
34739.       t$9959 = ncols
34778.       t$10004 = _zla( 0, ncols )
34739.       t$9960 = kmax
34739.       t$10005 = _zla( 0, ncols )
34792.       t$10006 = _zla( 0, kmax )
34739.       t$10007 = _zla( 0, ncols ) * _zla( 0, kmax )
34503.       if ( t$21 == 0 ) then
34503.          t$10012(1) = 4
34503.          t$10013(1) = 0
34503.          t$10014(1) = 0
34503.          t$10009(1) = int( loc( t$8 ), 8 )
34503.          t$10010(1) = 0
34503.          t$10011(1) = int( loc( t$10008 ), 8 )
34503.          t$21 = __get_dynamic_type( 2, t$10009(1), t$10012(1), 1, t$10010(1), t$10011(1), t$10013(1), t$10014(1) )
34503.       endif
34739.       t$9969 = swdat%dim%nd_aerosol_species
34739.       t$9961 = swdat%dim%nd_band
35135.       t$10016 = max( 0, swdat%dim%nd_aerosol_species )
34739.       t$10017 = max( 0, swdat%dim%nd_aerosol_species )
35135.       t$10018 = max( 0, swdat%dim%nd_band )
34739.       t$10019 = max( 0, swdat%dim%nd_aerosol_species ) * max( 0, swdat%dim%nd_band )
35228.       t$10022 = 8 * max( 0, swdat%dim%nd_aerosol_species ) * max( 0, swdat%dim%nd_band )
35135.       aerosol_mix_ratio = $_StaticDV_P1
35135.       aerosol_mix_ratio%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
35135.       aerosol_mix_ratio%header%el_len = 64
35135.       aerosol_mix_ratio%header%assoc = 0
35135.       aerosol_mix_ratio%header%ptr_alloc = 0
35135.       aerosol_mix_ratio%header%p_or_a = 2
35135.       aerosol_mix_ratio%header%a_contig = 1
35135.       aerosol_mix_ratio%header%n_dim = 3
35135.       aerosol_mix_ratio%header%orig_base = 0
35135.       aerosol_mix_ratio%header%orig_size = 0
35135.       aerosol_mix_ratio%header%n_codim = 0
35135.       aerosol_mix_ratio%header%dv_versn = 2
35135.       aerosol_mix_ratio%header%dv_smunit = 64
35135.       aerosol_mix_ratio%header%d_type = 0
35135.       aerosol_mix_ratio%header%n_params = 0
35135.       aerosol_mix_ratio%header%d_type_idx = 13
35135.       aerosol_mix_ratio%dim_1%LB = 1
35135.       aerosol_mix_ratio%dim_1%EX = 0
35135.       aerosol_mix_ratio%dim_1%SM = 1
35135.       aerosol_mix_ratio%dim_2%LB = 1
35135.       aerosol_mix_ratio%dim_2%EX = 0
35135.       aerosol_mix_ratio%dim_2%SM = 1
35135.       aerosol_mix_ratio%dim_3%LB = 1
35135.       aerosol_mix_ratio%dim_3%EX = 0
35135.       aerosol_mix_ratio%dim_3%SM = 1
34739.       t$9968 = swdat%dim%nd_phase_term
35141.       t$10023 = max( 0, swdat%dim%nd_phase_term )
34739.       t$10024 = max( 0, swdat%dim%nd_phase_term )
34739.       t$10025 = max( 0, swdat%dim%nd_aerosol_species ) * max( 0, swdat%dim%nd_phase_term )
34739.       t$10026 = max( 0, swdat%dim%nd_aerosol_species ) * max( 0, swdat%dim%nd_band ) * max( 0, swdat%dim%nd_phase_term )
35141.       t$10027 = 8 * ( 7 + 8 * max( 0, swdat%dim%nd_aerosol_species ) * max( 0, swdat%dim%nd_band ) ) / 8
35141.       t$10029 = t$10027 + 8 * max( 0, swdat%dim%nd_aerosol_species ) * max( 0, swdat%dim%nd_band ) * max( 0, swdat%dim%nd_phase_term )
34739.       t$10030 = max( 0, swdat%dim%nd_aerosol_species )
35131.       t$10031 = 8 * ( 7 + t$10027 + 8 * max( 0, swdat%dim%nd_aerosol_species ) * max( 0, swdat%dim%nd_band ) * max( 0, swdat%dim%nd_phase_term ) ) / 8
35131.       t$10033 = t$10031 + 8 * max( 0, swdat%dim%nd_aerosol_species )
35138.       t$10034 = 8 * ( 7 + t$10031 + 8 * max( 0, swdat%dim%nd_aerosol_species ) ) / 8
35138.       t$10036 = t$10034 + 8 * max( 0, swdat%dim%nd_aerosol_species ) * max( 0, swdat%dim%nd_band )
35224.       t$10038 = t$10034 + 4 * _zla( 0, ncols ) + 8 * max( 0, swdat%dim%nd_aerosol_species ) * max( 0, swdat%dim%nd_band )
35216.       clouds = $_StaticDV_P2
35216.       clouds%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
35216.       clouds%header%el_len = 64
35216.       clouds%header%assoc = 0
35216.       clouds%header%ptr_alloc = 0
35216.       clouds%header%p_or_a = 2
35216.       clouds%header%a_contig = 1
35216.       clouds%header%n_dim = 3
35216.       clouds%header%orig_base = 0
35216.       clouds%header%orig_size = 0
35216.       clouds%header%n_codim = 0
35216.       clouds%header%dv_versn = 2
35216.       clouds%header%dv_smunit = 64
35216.       clouds%header%d_type = 0
35216.       clouds%header%n_params = 0
35216.       clouds%header%d_type_idx = 13
35216.       clouds%dim_1%LB = 1
35216.       clouds%dim_1%EX = 0
35216.       clouds%dim_1%SM = 1
35216.       clouds%dim_2%LB = 1
35216.       clouds%dim_2%EX = 0
35216.       clouds%dim_2%SM = 1
35216.       clouds%dim_3%LB = 1
35216.       clouds%dim_3%EX = 0
35216.       clouds%dim_3%SM = 1
35214.       condensed_dim_char = $_StaticDV_P3
35214.       condensed_dim_char%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
35214.       condensed_dim_char%header%el_len = 64
35214.       condensed_dim_char%header%assoc = 0
35214.       condensed_dim_char%header%ptr_alloc = 0
35214.       condensed_dim_char%header%p_or_a = 2
35214.       condensed_dim_char%header%a_contig = 1
35214.       condensed_dim_char%header%n_dim = 3
35214.       condensed_dim_char%header%orig_base = 0
35214.       condensed_dim_char%header%orig_size = 0
35214.       condensed_dim_char%header%n_codim = 0
35214.       condensed_dim_char%header%dv_versn = 2
35214.       condensed_dim_char%header%dv_smunit = 64
35214.       condensed_dim_char%header%d_type = 0
35214.       condensed_dim_char%header%n_params = 0
35214.       condensed_dim_char%header%d_type_idx = 13
35214.       condensed_dim_char%dim_1%LB = 1
35214.       condensed_dim_char%dim_1%EX = 0
35214.       condensed_dim_char%dim_1%SM = 1
35214.       condensed_dim_char%dim_2%LB = 1
35214.       condensed_dim_char%dim_2%EX = 0
35214.       condensed_dim_char%dim_2%SM = 1
35214.       condensed_dim_char%dim_3%LB = 1
35214.       condensed_dim_char%dim_3%EX = 0
35214.       condensed_dim_char%dim_3%SM = 1
35278.       condensed_mix_ratio = $_StaticDV_P4
35278.       condensed_mix_ratio%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
35278.       condensed_mix_ratio%header%el_len = 64
35278.       condensed_mix_ratio%header%assoc = 0
35278.       condensed_mix_ratio%header%ptr_alloc = 0
35278.       condensed_mix_ratio%header%p_or_a = 2
35278.       condensed_mix_ratio%header%a_contig = 1
35278.       condensed_mix_ratio%header%n_dim = 3
35278.       condensed_mix_ratio%header%orig_base = 0
35278.       condensed_mix_ratio%header%orig_size = 0
35278.       condensed_mix_ratio%header%n_codim = 0
35278.       condensed_mix_ratio%header%dv_versn = 2
35278.       condensed_mix_ratio%header%dv_smunit = 64
35278.       condensed_mix_ratio%header%d_type = 0
35278.       condensed_mix_ratio%header%n_params = 0
35278.       condensed_mix_ratio%header%d_type_idx = 13
35278.       condensed_mix_ratio%dim_1%LB = 1
35278.       condensed_mix_ratio%dim_1%EX = 0
35278.       condensed_mix_ratio%dim_1%SM = 1
35278.       condensed_mix_ratio%dim_2%LB = 1
35278.       condensed_mix_ratio%dim_2%EX = 0
35278.       condensed_mix_ratio%dim_2%SM = 1
35278.       condensed_mix_ratio%dim_3%LB = 1
35278.       condensed_mix_ratio%dim_3%EX = 0
35278.       condensed_mix_ratio%dim_3%SM = 1
34739.       t$9976 = swdat%dim%nd_cloud_parameter
35219.       t$10039 = max( 0, swdat%dim%nd_cloud_parameter )
34739.       t$10040 = max( 0, swdat%dim%nd_cloud_parameter )
34739.       t$10041 = 4 * max( 0, swdat%dim%nd_cloud_parameter )
34739.       t$10042 = 4 * max( 0, swdat%dim%nd_band ) * max( 0, swdat%dim%nd_cloud_parameter )
35219.       t$10043 = 8 * ( 7 + t$10034 + 4 * _zla( 0, ncols ) + 8 * max( 0, swdat%dim%nd_aerosol_species ) * max( 0, swdat%dim%nd_band ) ) / 8
35219.       t$10045 = t$10043 + 32 * max( 0, swdat%dim%nd_band ) * max( 0, swdat%dim%nd_cloud_parameter )
34739.       t$9962 = swdat%dim%nd_species
34964.       t$10046 = max( 0, swdat%dim%nd_species )
34964.       t$10047 = 8 * ( 7 + t$10043 + 32 * max( 0, swdat%dim%nd_band ) * max( 0, swdat%dim%nd_cloud_parameter ) ) / 8
34964.       t$10049 = t$10047 + 8 * max( 0, swdat%dim%nd_species )
34739.       t$10050 = max( 0, swdat%dim%nd_band )
35090.       t$10051 = 8 * ( 7 + t$10047 + 8 * max( 0, swdat%dim%nd_species ) ) / 8
35090.       t$10053 = t$10051 + 8 * max( 0, swdat%dim%nd_band )
34739.       t$10054 = max( 0, swdat%dim%nd_band ) * max( 0, swdat%dim%nd_phase_term )
35096.       t$10055 = 8 * ( 7 + t$10051 + 8 * max( 0, swdat%dim%nd_band ) ) / 8
35096.       t$10057 = t$10055 + 8 * max( 0, swdat%dim%nd_band ) * max( 0, swdat%dim%nd_phase_term )
35093.       t$10058 = 8 * ( 7 + t$10055 + 8 * max( 0, swdat%dim%nd_band ) * max( 0, swdat%dim%nd_phase_term ) ) / 8
35059.       t$10060 = t$10058 + 8 * max( 0, swdat%dim%nd_band )
35233.       d_mass = $_StaticDV_P5
35233.       d_mass%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
35233.       d_mass%header%el_len = 64
35233.       d_mass%header%assoc = 0
35233.       d_mass%header%ptr_alloc = 0
35233.       d_mass%header%p_or_a = 2
35233.       d_mass%header%a_contig = 1
35233.       d_mass%header%n_dim = 2
35233.       d_mass%header%orig_base = 0
35233.       d_mass%header%orig_size = 0
35233.       d_mass%header%n_codim = 0
35233.       d_mass%header%dv_versn = 2
35233.       d_mass%header%dv_smunit = 64
35233.       d_mass%header%d_type = 0
35233.       d_mass%header%n_params = 0
35233.       d_mass%header%d_type_idx = 13
35233.       d_mass%dim_1%LB = 1
35233.       d_mass%dim_1%EX = 0
35233.       d_mass%dim_1%SM = 1
35233.       d_mass%dim_2%LB = 1
35233.       d_mass%dim_2%EX = 0
35233.       d_mass%dim_2%SM = 1
35241.       flux_direct = $_StaticDV_P6
35241.       flux_direct%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
35241.       flux_direct%header%el_len = 64
35241.       flux_direct%header%assoc = 0
35241.       flux_direct%header%ptr_alloc = 0
35241.       flux_direct%header%p_or_a = 2
35241.       flux_direct%header%a_contig = 1
35241.       flux_direct%header%n_dim = 3
35241.       flux_direct%header%orig_base = 0
35241.       flux_direct%header%orig_size = 0
35241.       flux_direct%header%n_codim = 0
35241.       flux_direct%header%dv_versn = 2
35241.       flux_direct%header%dv_smunit = 64
35241.       flux_direct%header%d_type = 0
35241.       flux_direct%header%n_params = 0
35241.       flux_direct%header%d_type_idx = 13
35241.       flux_direct%dim_1%LB = 1
35241.       flux_direct%dim_1%EX = 0
35241.       flux_direct%dim_1%SM = 1
35241.       flux_direct%dim_2%LB = 1
35241.       flux_direct%dim_2%EX = 0
35241.       flux_direct%dim_2%SM = 1
35241.       flux_direct%dim_3%LB = 1
35241.       flux_direct%dim_3%EX = 0
35241.       flux_direct%dim_3%SM = 1
35235.       flux_direct_clear = $_StaticDV_P7
35235.       flux_direct_clear%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
35235.       flux_direct_clear%header%el_len = 64
35235.       flux_direct_clear%header%assoc = 0
35235.       flux_direct_clear%header%ptr_alloc = 0
35235.       flux_direct_clear%header%p_or_a = 2
35235.       flux_direct_clear%header%a_contig = 1
35235.       flux_direct_clear%header%n_dim = 3
35235.       flux_direct_clear%header%orig_base = 0
35235.       flux_direct_clear%header%orig_size = 0
35235.       flux_direct_clear%header%n_codim = 0
35235.       flux_direct_clear%header%dv_versn = 2
35235.       flux_direct_clear%header%dv_smunit = 64
35235.       flux_direct_clear%header%d_type = 0
35235.       flux_direct_clear%header%n_params = 0
35235.       flux_direct_clear%header%d_type_idx = 13
35235.       flux_direct_clear%dim_1%LB = 1
35235.       flux_direct_clear%dim_1%EX = 0
35235.       flux_direct_clear%dim_1%SM = 1
35235.       flux_direct_clear%dim_2%LB = 1
35235.       flux_direct_clear%dim_2%EX = 0
35235.       flux_direct_clear%dim_2%SM = 1
35235.       flux_direct_clear%dim_3%LB = 1
35235.       flux_direct_clear%dim_3%EX = 0
35235.       flux_direct_clear%dim_3%SM = 1
35243.       flux_down = $_StaticDV_P8
35243.       flux_down%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
35243.       flux_down%header%el_len = 64
35243.       flux_down%header%assoc = 0
35243.       flux_down%header%ptr_alloc = 0
35243.       flux_down%header%p_or_a = 2
35243.       flux_down%header%a_contig = 1
35243.       flux_down%header%n_dim = 3
35243.       flux_down%header%orig_base = 0
35243.       flux_down%header%orig_size = 0
35243.       flux_down%header%n_codim = 0
35243.       flux_down%header%dv_versn = 2
35243.       flux_down%header%dv_smunit = 64
35243.       flux_down%header%d_type = 0
35243.       flux_down%header%n_params = 0
35243.       flux_down%header%d_type_idx = 13
35243.       flux_down%dim_1%LB = 1
35243.       flux_down%dim_1%EX = 0
35243.       flux_down%dim_1%SM = 1
35243.       flux_down%dim_2%LB = 1
35243.       flux_down%dim_2%EX = 0
35243.       flux_down%dim_2%SM = 1
35243.       flux_down%dim_3%LB = 1
35243.       flux_down%dim_3%EX = 0
35243.       flux_down%dim_3%SM = 1
35239.       flux_down_clear = $_StaticDV_P9
35239.       flux_down_clear%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
35239.       flux_down_clear%header%el_len = 64
35239.       flux_down_clear%header%assoc = 0
35239.       flux_down_clear%header%ptr_alloc = 0
35239.       flux_down_clear%header%p_or_a = 2
35239.       flux_down_clear%header%a_contig = 1
35239.       flux_down_clear%header%n_dim = 3
35239.       flux_down_clear%header%orig_base = 0
35239.       flux_down_clear%header%orig_size = 0
35239.       flux_down_clear%header%n_codim = 0
35239.       flux_down_clear%header%dv_versn = 2
35239.       flux_down_clear%header%dv_smunit = 64
35239.       flux_down_clear%header%d_type = 0
35239.       flux_down_clear%header%n_params = 0
35239.       flux_down_clear%header%d_type_idx = 13
35239.       flux_down_clear%dim_1%LB = 1
35239.       flux_down_clear%dim_1%EX = 0
35239.       flux_down_clear%dim_1%SM = 1
35239.       flux_down_clear%dim_2%LB = 1
35239.       flux_down_clear%dim_2%EX = 0
35239.       flux_down_clear%dim_2%SM = 1
35239.       flux_down_clear%dim_3%LB = 1
35239.       flux_down_clear%dim_3%EX = 0
35239.       flux_down_clear%dim_3%SM = 1
35247.       flux_net = $_StaticDV_P10
35247.       flux_net%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
35247.       flux_net%header%el_len = 64
35247.       flux_net%header%assoc = 0
35247.       flux_net%header%ptr_alloc = 0
35247.       flux_net%header%p_or_a = 2
35247.       flux_net%header%a_contig = 1
35247.       flux_net%header%n_dim = 3
35247.       flux_net%header%orig_base = 0
35247.       flux_net%header%orig_size = 0
35247.       flux_net%header%n_codim = 0
35247.       flux_net%header%dv_versn = 2
35247.       flux_net%header%dv_smunit = 64
35247.       flux_net%header%d_type = 0
35247.       flux_net%header%n_params = 0
35247.       flux_net%header%d_type_idx = 13
35247.       flux_net%dim_1%LB = 1
35247.       flux_net%dim_1%EX = 0
35247.       flux_net%dim_1%SM = 1
35247.       flux_net%dim_2%LB = 1
35247.       flux_net%dim_2%EX = 0
35247.       flux_net%dim_2%SM = 1
35247.       flux_net%dim_3%LB = 1
35247.       flux_net%dim_3%EX = 0
35247.       flux_net%dim_3%SM = 1
35237.       flux_net_clear = $_StaticDV_P11
35237.       flux_net_clear%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
35237.       flux_net_clear%header%el_len = 64
35237.       flux_net_clear%header%assoc = 0
35237.       flux_net_clear%header%ptr_alloc = 0
35237.       flux_net_clear%header%p_or_a = 2
35237.       flux_net_clear%header%a_contig = 1
35237.       flux_net_clear%header%n_dim = 3
35237.       flux_net_clear%header%orig_base = 0
35237.       flux_net_clear%header%orig_size = 0
35237.       flux_net_clear%header%n_codim = 0
35237.       flux_net_clear%header%dv_versn = 2
35237.       flux_net_clear%header%dv_smunit = 64
35237.       flux_net_clear%header%d_type = 0
35237.       flux_net_clear%header%n_params = 0
35237.       flux_net_clear%header%d_type_idx = 13
35237.       flux_net_clear%dim_1%LB = 1
35237.       flux_net_clear%dim_1%EX = 0
35237.       flux_net_clear%dim_1%SM = 1
35237.       flux_net_clear%dim_2%LB = 1
35237.       flux_net_clear%dim_2%EX = 0
35237.       flux_net_clear%dim_2%SM = 1
35237.       flux_net_clear%dim_3%LB = 1
35237.       flux_net_clear%dim_3%EX = 0
35237.       flux_net_clear%dim_3%SM = 1
35245.       flux_up = $_StaticDV_P12
35245.       flux_up%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
35245.       flux_up%header%el_len = 64
35245.       flux_up%header%assoc = 0
35245.       flux_up%header%ptr_alloc = 0
35245.       flux_up%header%p_or_a = 2
35245.       flux_up%header%a_contig = 1
35245.       flux_up%header%n_dim = 3
35245.       flux_up%header%orig_base = 0
35245.       flux_up%header%orig_size = 0
35245.       flux_up%header%n_codim = 0
35245.       flux_up%header%dv_versn = 2
35245.       flux_up%header%dv_smunit = 64
35245.       flux_up%header%d_type = 0
35245.       flux_up%header%n_params = 0
35245.       flux_up%header%d_type_idx = 13
35245.       flux_up%dim_1%LB = 1
35245.       flux_up%dim_1%EX = 0
35245.       flux_up%dim_1%SM = 1
35245.       flux_up%dim_2%LB = 1
35245.       flux_up%dim_2%EX = 0
35245.       flux_up%dim_2%SM = 1
35245.       flux_up%dim_3%LB = 1
35245.       flux_up%dim_3%EX = 0
35245.       flux_up%dim_3%SM = 1
35212.       flux_up_clear = $_StaticDV_P13
35212.       flux_up_clear%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
35212.       flux_up_clear%header%el_len = 64
35212.       flux_up_clear%header%assoc = 0
35212.       flux_up_clear%header%ptr_alloc = 0
35212.       flux_up_clear%header%p_or_a = 2
35212.       flux_up_clear%header%a_contig = 1
35212.       flux_up_clear%header%n_dim = 3
35212.       flux_up_clear%header%orig_base = 0
35212.       flux_up_clear%header%orig_size = 0
35212.       flux_up_clear%header%n_codim = 0
35212.       flux_up_clear%header%dv_versn = 2
35212.       flux_up_clear%header%dv_smunit = 64
35212.       flux_up_clear%header%d_type = 0
35212.       flux_up_clear%header%n_params = 0
35212.       flux_up_clear%header%d_type_idx = 13
35212.       flux_up_clear%dim_1%LB = 1
35212.       flux_up_clear%dim_1%EX = 0
35212.       flux_up_clear%dim_1%SM = 1
35212.       flux_up_clear%dim_2%LB = 1
35212.       flux_up_clear%dim_2%EX = 0
35212.       flux_up_clear%dim_2%SM = 1
35212.       flux_up_clear%dim_3%LB = 1
35212.       flux_up_clear%dim_3%EX = 0
35212.       flux_up_clear%dim_3%SM = 1
35166.       frac_cloud = $_StaticDV_P14
35166.       frac_cloud%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
35166.       frac_cloud%header%el_len = 64
35166.       frac_cloud%header%assoc = 0
35166.       frac_cloud%header%ptr_alloc = 0
35166.       frac_cloud%header%p_or_a = 2
35166.       frac_cloud%header%a_contig = 1
35166.       frac_cloud%header%n_dim = 3
35166.       frac_cloud%header%orig_base = 0
35166.       frac_cloud%header%orig_size = 0
35166.       frac_cloud%header%n_codim = 0
35166.       frac_cloud%header%dv_versn = 2
35166.       frac_cloud%header%dv_smunit = 64
35166.       frac_cloud%header%d_type = 0
35166.       frac_cloud%header%n_params = 0
35166.       frac_cloud%header%d_type_idx = 13
35166.       frac_cloud%dim_1%LB = 1
35166.       frac_cloud%dim_1%EX = 0
35166.       frac_cloud%dim_1%SM = 1
35166.       frac_cloud%dim_2%LB = 1
35166.       frac_cloud%dim_2%EX = 0
35166.       frac_cloud%dim_2%SM = 1
35166.       frac_cloud%dim_3%LB = 1
35166.       frac_cloud%dim_3%EX = 0
35166.       frac_cloud%dim_3%SM = 1
35093.       gas_mix_ratio = $_StaticDV_P15
35093.       gas_mix_ratio%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
35093.       gas_mix_ratio%header%el_len = 64
35093.       gas_mix_ratio%header%assoc = 0
35093.       gas_mix_ratio%header%ptr_alloc = 0
35093.       gas_mix_ratio%header%p_or_a = 2
35093.       gas_mix_ratio%header%a_contig = 1
35093.       gas_mix_ratio%header%n_dim = 3
35093.       gas_mix_ratio%header%orig_base = 0
35093.       gas_mix_ratio%header%orig_size = 0
35093.       gas_mix_ratio%header%n_codim = 0
35093.       gas_mix_ratio%header%dv_versn = 2
35093.       gas_mix_ratio%header%dv_smunit = 64
35093.       gas_mix_ratio%header%d_type = 0
35093.       gas_mix_ratio%header%n_params = 0
35093.       gas_mix_ratio%header%d_type_idx = 13
35093.       gas_mix_ratio%dim_1%LB = 1
35093.       gas_mix_ratio%dim_1%EX = 0
35093.       gas_mix_ratio%dim_1%SM = 1
35093.       gas_mix_ratio%dim_2%LB = 1
35093.       gas_mix_ratio%dim_2%EX = 0
35093.       gas_mix_ratio%dim_2%SM = 1
35093.       gas_mix_ratio%dim_3%LB = 1
35093.       gas_mix_ratio%dim_3%EX = 0
35093.       gas_mix_ratio%dim_3%SM = 1
35112.       t$10061 = 8 * ( 7 + t$10058 + 8 * max( 0, swdat%dim%nd_band ) ) / 8
35112.       t$10063 = t$10061 + 8 * max( 0, swdat%dim%nd_band )
35118.       t$10064 = 8 * ( 7 + t$10061 + 8 * max( 0, swdat%dim%nd_band ) ) / 8
35118.       t$10066 = t$10064 + 8 * max( 0, swdat%dim%nd_band ) * max( 0, swdat%dim%nd_phase_term )
35115.       t$10067 = 8 * ( 7 + t$10064 + 8 * max( 0, swdat%dim%nd_band ) * max( 0, swdat%dim%nd_phase_term ) ) / 8
35115.       t$10069 = t$10067 + 8 * max( 0, swdat%dim%nd_band )
35160.       t$10071 = t$10067 + 12 * max( 0, swdat%dim%nd_band )
35010.       t$10073 = t$10067 + 16 * max( 0, swdat%dim%nd_band )
35277.       t$10075 = t$10067 + 4 * _zla( 0, ncols ) + 16 * max( 0, swdat%dim%nd_band )
35277.       t$10077 = t$10067 + 8 * _zla( 0, ncols ) + 16 * max( 0, swdat%dim%nd_band )
34956.       t$10079 = t$10067 + 8 * _zla( 0, ncols ) + 16 * max( 0, swdat%dim%nd_band ) + 4 * max( 0, swdat%dim%nd_species )
35032.       t$10081 = t$10067 + 8 * _zla( 0, ncols ) + 4 * max( 0, swdat%dim%nd_species ) + 20 * max( 0, swdat%dim%nd_band )
35124.       t$10083 = t$10067 + 8 * _zla( 0, ncols ) + 4 * max( 0, swdat%dim%nd_species ) + 20 * max( 0, swdat%dim%nd_band ) + 4 * max( 0, swdat%dim%nd_aerosol_species )
35053.       t$10085 = t$10067 + 8 * _zla( 0, ncols ) + 8 * max( 0, swdat%dim%nd_aerosol_species ) + 4 * max( 0, swdat%dim%nd_species ) + 20 * max( 0, swdat%dim%nd_band )
35174.       pres = $_StaticDV_P16
35174.       pres%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
35174.       pres%header%el_len = 64
35174.       pres%header%assoc = 0
35174.       pres%header%ptr_alloc = 0
35174.       pres%header%p_or_a = 2
35174.       pres%header%a_contig = 1
35174.       pres%header%n_dim = 2
35174.       pres%header%orig_base = 0
35174.       pres%header%orig_size = 0
35174.       pres%header%n_codim = 0
35174.       pres%header%dv_versn = 2
35174.       pres%header%dv_smunit = 64
35174.       pres%header%d_type = 0
35174.       pres%header%n_params = 0
35174.       pres%header%d_type_idx = 13
35174.       pres%dim_1%LB = 1
35174.       pres%dim_1%EX = 0
35174.       pres%dim_1%SM = 1
35174.       pres%dim_2%LB = 1
35174.       pres%dim_2%EX = 0
35174.       pres%dim_2%SM = 1
35127.       rho_alb = $_StaticDV_P17
35127.       rho_alb%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
35127.       rho_alb%header%el_len = 64
35127.       rho_alb%header%assoc = 0
35127.       rho_alb%header%ptr_alloc = 0
35127.       rho_alb%header%p_or_a = 2
35127.       rho_alb%header%a_contig = 1
35127.       rho_alb%header%n_dim = 3
35127.       rho_alb%header%orig_base = 0
35127.       rho_alb%header%orig_size = 0
35127.       rho_alb%header%n_codim = 0
35127.       rho_alb%header%dv_versn = 2
35127.       rho_alb%header%dv_smunit = 64
35127.       rho_alb%header%d_type = 0
35127.       rho_alb%header%n_params = 0
35127.       rho_alb%header%d_type_idx = 13
35127.       rho_alb%dim_1%LB = 1
35127.       rho_alb%dim_1%EX = 0
35127.       rho_alb%dim_1%SM = 1
35127.       rho_alb%dim_2%LB = 1
35127.       rho_alb%dim_2%EX = 0
35127.       rho_alb%dim_2%SM = 1
35127.       rho_alb%dim_3%LB = 1
35127.       rho_alb%dim_3%EX = 0
35127.       rho_alb%dim_3%SM = 1
34739.       t$10086 = 2 * max( 0, swdat%dim%nd_band )
35269.       t$10087 = 8 * ( 7 + t$10067 + 8 * _zla( 0, ncols ) + 8 * max( 0, swdat%dim%nd_aerosol_species ) + 4 * max( 0, swdat%dim%nd_species ) + 20 * max( 0, swdat%dim%nd_band ) ) / 8
35152.       t$10089 = t$10087 + 16 * max( 0, swdat%dim%nd_band )
35055.       solar_irrad = $_StaticDV_P18
35055.       solar_irrad%base_addr = pointer to array[1] of real (kind=8)( 0 )
35055.       solar_irrad%header%el_len = 64
35055.       solar_irrad%header%assoc = 0
35055.       solar_irrad%header%ptr_alloc = 0
35055.       solar_irrad%header%p_or_a = 2
35055.       solar_irrad%header%a_contig = 1
35055.       solar_irrad%header%n_dim = 1
35055.       solar_irrad%header%orig_base = 0
35055.       solar_irrad%header%orig_size = 0
35055.       solar_irrad%header%n_codim = 0
35055.       solar_irrad%header%dv_versn = 2
35055.       solar_irrad%header%dv_smunit = 64
35055.       solar_irrad%header%d_type = 0
35055.       solar_irrad%header%n_params = 0
35055.       solar_irrad%header%d_type_idx = 13
35055.       solar_irrad%dim_1%LB = 1
35055.       solar_irrad%dim_1%EX = 0
35055.       solar_irrad%dim_1%SM = 1
35269.       temp = $_StaticDV_P19
35269.       temp%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
35269.       temp%header%el_len = 64
35269.       temp%header%assoc = 0
35269.       temp%header%ptr_alloc = 0
35269.       temp%header%p_or_a = 2
35269.       temp%header%a_contig = 1
35269.       temp%header%n_dim = 2
35269.       temp%header%orig_base = 0
35269.       temp%header%orig_size = 0
35269.       temp%header%n_codim = 0
35269.       temp%header%dv_versn = 2
35269.       temp%header%dv_smunit = 64
35269.       temp%header%d_type = 0
35269.       temp%header%n_params = 0
35269.       temp%header%d_type_idx = 13
35269.       temp%dim_1%LB = 1
35269.       temp%dim_1%EX = 0
35269.       temp%dim_1%SM = 1
35269.       temp%dim_2%LB = 1
35269.       temp%dim_2%EX = 0
35269.       temp%dim_2%SM = 1
34739.       t$10090 = max( 0, swdat%dim%nd_band )
35270.       t$10091 = 8 * ( 7 + t$10087 + 16 * max( 0, swdat%dim%nd_band ) ) / 8
35181.       t$10093 = t$10091 + 8 * max( 0, swdat%dim%nd_band )
35057.       t_ground = $_StaticDV_P20
35057.       t_ground%base_addr = pointer to array[1] of real (kind=8)( 0 )
35057.       t_ground%header%el_len = 64
35057.       t_ground%header%assoc = 0
35057.       t_ground%header%ptr_alloc = 0
35057.       t_ground%header%p_or_a = 2
35057.       t_ground%header%a_contig = 1
35057.       t_ground%header%n_dim = 1
35057.       t_ground%header%orig_base = 0
35057.       t_ground%header%orig_size = 0
35057.       t_ground%header%n_codim = 0
35057.       t_ground%header%dv_versn = 2
35057.       t_ground%header%dv_smunit = 64
35057.       t_ground%header%d_type = 0
35057.       t_ground%header%n_params = 0
35057.       t_ground%header%d_type_idx = 13
35057.       t_ground%dim_1%LB = 1
35057.       t_ground%dim_1%EX = 0
35057.       t_ground%dim_1%SM = 1
35270.       t_level = $_StaticDV_P21
35270.       t_level%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
35270.       t_level%header%el_len = 64
35270.       t_level%header%assoc = 0
35270.       t_level%header%ptr_alloc = 0
35270.       t_level%header%p_or_a = 2
35270.       t_level%header%a_contig = 1
35270.       t_level%header%n_dim = 2
35270.       t_level%header%orig_base = 0
35270.       t_level%header%orig_size = 0
35270.       t_level%header%n_codim = 0
35270.       t_level%header%dv_versn = 2
35270.       t_level%header%dv_smunit = 64
35270.       t_level%header%d_type = 0
35270.       t_level%header%n_params = 0
35270.       t_level%header%d_type_idx = 13
35270.       t_level%dim_1%LB = 1
35270.       t_level%dim_1%EX = 0
35270.       t_level%dim_1%SM = 1
35270.       t_level%dim_2%LB = 1
35270.       t_level%dim_2%EX = 0
35270.       t_level%dim_2%SM = 1
35266.       t$10094 = 8 * ( 7 + t$10091 + 8 * max( 0, swdat%dim%nd_band ) ) / 8
35266.       t$10096 = t$10094 + 8 * max( 0, swdat%dim%nd_band )
34931.       t$10097 = 8 * ( 7 + t$10094 + 8 * max( 0, swdat%dim%nd_band ) ) / 8
35209.       t$10099 = t$10097 + 8 * max( 0, swdat%dim%nd_band )
35154.       w_cloud = $_StaticDV_P22
35154.       w_cloud%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
35154.       w_cloud%header%el_len = 64
35154.       w_cloud%header%assoc = 0
35154.       w_cloud%header%ptr_alloc = 0
35154.       w_cloud%header%p_or_a = 2
35154.       w_cloud%header%a_contig = 1
35154.       w_cloud%header%n_dim = 2
35154.       w_cloud%header%orig_base = 0
35154.       w_cloud%header%orig_size = 0
35154.       w_cloud%header%n_codim = 0
35154.       w_cloud%header%dv_versn = 2
35154.       w_cloud%header%dv_smunit = 64
35154.       w_cloud%header%d_type = 0
35154.       w_cloud%header%n_params = 0
35154.       w_cloud%header%d_type_idx = 13
35154.       w_cloud%dim_1%LB = 1
35154.       w_cloud%dim_1%EX = 0
35154.       w_cloud%dim_1%SM = 1
35154.       w_cloud%dim_2%LB = 1
35154.       w_cloud%dim_2%EX = 0
35154.       w_cloud%dim_2%SM = 1
34931.       zen_0 = $_StaticDV_P23
34931.       zen_0%base_addr = pointer to array[1] of real (kind=8)( 0 )
34931.       zen_0%header%el_len = 64
34931.       zen_0%header%assoc = 0
34931.       zen_0%header%ptr_alloc = 0
34931.       zen_0%header%p_or_a = 2
34931.       zen_0%header%a_contig = 1
34931.       zen_0%header%n_dim = 1
34931.       zen_0%header%orig_base = 0
34931.       zen_0%header%orig_size = 0
34931.       zen_0%header%n_codim = 0
34931.       zen_0%header%dv_versn = 2
34931.       zen_0%header%dv_smunit = 64
34931.       zen_0%header%d_type = 0
34931.       zen_0%header%n_params = 0
34931.       zen_0%header%d_type_idx = 13
34931.       zen_0%dim_1%LB = 1
34931.       zen_0%dim_1%EX = 0
34931.       zen_0%dim_1%SM = 1
34739.       t$10020 = int( _alloc( t$10097 + 8 * max( 0, swdat%dim%nd_band ) ), 8 )
35135.       t$10021 = t$10020
35141.       t$10028 = t$10027 + t$10020
35131.       t$10032 = t$10031 + t$10020
35138.       t$10035 = t$10034 + t$10020
35278.       t$10037 = t$10034 + t$10020 + 8 * max( 0, swdat%dim%nd_aerosol_species ) * max( 0, swdat%dim%nd_band )
35219.       t$10044 = t$10043 + t$10020
34964.       t$10048 = t$10047 + t$10020
35090.       t$10052 = t$10051 + t$10020
35096.       t$10056 = t$10055 + t$10020
35093.       t$10059 = t$10058 + t$10020
35112.       t$10062 = t$10061 + t$10020
35118.       t$10065 = t$10064 + t$10020
35115.       t$10068 = t$10067 + t$10020
35160.       t$10070 = t$10067 + t$10020 + 8 * max( 0, swdat%dim%nd_band )
35010.       t$10072 = t$10067 + t$10020 + 12 * max( 0, swdat%dim%nd_band )
35277.       t$10074 = t$10067 + t$10020 + 16 * max( 0, swdat%dim%nd_band )
35277.       t$10076 = t$10067 + t$10020 + 4 * _zla( 0, ncols ) + 16 * max( 0, swdat%dim%nd_band )
34956.       t$10078 = t$10067 + t$10020 + 8 * _zla( 0, ncols ) + 16 * max( 0, swdat%dim%nd_band )
35032.       t$10080 = t$10067 + t$10020 + 8 * _zla( 0, ncols ) + 16 * max( 0, swdat%dim%nd_band ) + 4 * max( 0, swdat%dim%nd_species )
35124.       t$10082 = t$10067 + t$10020 + 8 * _zla( 0, ncols ) + 4 * max( 0, swdat%dim%nd_species ) + 20 * max( 0, swdat%dim%nd_band )
35127.       t$10084 = t$10067 + t$10020 + 8 * _zla( 0, ncols ) + 4 * max( 0, swdat%dim%nd_species ) + 20 * max( 0, swdat%dim%nd_band ) + 4 * max( 0, swdat%dim%nd_aerosol_species )
35269.       t$10088 = t$10087 + t$10020
35270.       t$10092 = t$10091 + t$10020
35266.       t$10095 = t$10094 + t$10020
34931.       t$10098 = t$10097 + t$10020
35292.       $F_A35 = kmax
35292.       $F_A36 = ncols
35292.       if ( and( -$F_A36, -$F_A35 ) < 0 ) then
35292.          $I_A4 = 0
35292.          do
35292.             $I_A3 = 0
35292. !dir$ ivdep
35292.             do
35292.                heatrate(1 + $I_A3, 1 + $I_A4) = 0.0
35292.                $I_A3 = 1 + $I_A3
35292.                if ( $I_A3 >= $F_A36 ) exit
35292.             enddo
35292.             $I_A4 = 1 + $I_A4
35292.             if ( $I_A4 >= $F_A35 ) exit
35292.          enddo
35292.       endif
35293.       $F_A37 = kmax
35293.       $F_A38 = ncols
35293.       if ( and( -$F_A38, -$F_A37 ) < 0 ) then
35293.          $I_A4 = 0
35293.          do
35293.             $I_A3 = 0
35293. !dir$ ivdep
35293.             do
35293.                heatratec(1 + $I_A3, 1 + $I_A4) = 0.0
35293.                $I_A3 = 1 + $I_A3
35293.                if ( $I_A3 >= $F_A38 ) exit
35293.             enddo
35293.             $I_A4 = 1 + $I_A4
35293.             if ( $I_A4 >= $F_A37 ) exit
35293.          enddo
35293.       endif
35295.       $F_A39 = ncols
35295.       if ( ncols > 0 ) then
35295.          $I_A3 = 0
35295. !dir$ ivdep
35295.          do
35295.             toadown(1 + $I_A3) = 0.0
35295.             $I_A3 = 1 + $I_A3
35295.             if ( $I_A3 >= $F_A39 ) exit
35295.          enddo
35319.          $I_L35319_118 = 0
35319. !dir$ ivdep
35319.          do
35319.             listim(1 + $I_L35319_118) = ( 1 + $I_L35319_118 )
35319.             $I_L35319_118 = 1 + $I_L35319_118
35319.             if ( $I_L35319_118 >= ncols ) exit
35319.          enddo
35319.       endif
35297.       $F_A40 = ncols
35297.       if ( ncols > 0 ) then
35297.          $I_A3 = 0
35297. !dir$ ivdep
35297.          do
35297.             sfcvisbeamc(1 + $I_A3) = 0.0
35297.             $I_A3 = 1 + $I_A3
35297.             if ( $I_A3 >= $F_A40 ) exit
35297.          enddo
35297.       endif
35298.       $F_A41 = ncols
35298.       if ( ncols > 0 ) then
35298.          $I_A3 = 0
35298. !dir$ ivdep
35298.          do
35298.             sfcvisdiffc(1 + $I_A3) = 0.0
35298.             $I_A3 = 1 + $I_A3
35298.             if ( $I_A3 >= $F_A41 ) exit
35298.          enddo
35298.       endif
35299.       $F_A42 = ncols
35299.       if ( ncols > 0 ) then
35299.          $I_A3 = 0
35299. !dir$ ivdep
35299.          do
35299.             sfcnirbeamc(1 + $I_A3) = 0.0
35299.             $I_A3 = 1 + $I_A3
35299.             if ( $I_A3 >= $F_A42 ) exit
35299.          enddo
35299.       endif
35300.       $F_A43 = ncols
35300.       if ( ncols > 0 ) then
35300.          $I_A3 = 0
35300. !dir$ ivdep
35300.          do
35300.             sfcnirdiffc(1 + $I_A3) = 0.0
35300.             $I_A3 = 1 + $I_A3
35300.             if ( $I_A3 >= $F_A43 ) exit
35300.          enddo
35300.       endif
35302.       $F_A44 = ncols
35302.       if ( ncols > 0 ) then
35302.          $I_A3 = 0
35302. !dir$ ivdep
35302.          do
35302.             sfcvisbeam(1 + $I_A3) = 0.0
35302.             $I_A3 = 1 + $I_A3
35302.             if ( $I_A3 >= $F_A44 ) exit
35302.          enddo
35302.       endif
35303.       $F_A45 = ncols
35303.       if ( ncols > 0 ) then
35303.          $I_A3 = 0
35303. !dir$ ivdep
35303.          do
35303.             sfcvisdiff(1 + $I_A3) = 0.0
35303.             $I_A3 = 1 + $I_A3
35303.             if ( $I_A3 >= $F_A45 ) exit
35303.          enddo
35303.       endif
35304.       $F_A46 = ncols
35304.       if ( ncols > 0 ) then
35304.          $I_A3 = 0
35304. !dir$ ivdep
35304.          do
35304.             sfcnirbeam(1 + $I_A3) = 0.0
35304.             $I_A3 = 1 + $I_A3
35304.             if ( $I_A3 >= $F_A46 ) exit
35304.          enddo
35304.       endif
35305.       $F_A47 = ncols
35305.       if ( ncols > 0 ) then
35305.          $I_A3 = 0
35305. !dir$ ivdep
35305.          do
35305.             sfcnirdiff(1 + $I_A3) = 0.0
35305.             $I_A3 = 1 + $I_A3
35305.             if ( $I_A3 >= $F_A47 ) exit
35305.          enddo
35305.       endif
35307.       $F_A48 = ncols
35307.       if ( ncols > 0 ) then
35307.          $I_A3 = 0
35307. !dir$ ivdep
35307.          do
35307.             toanet(1 + $I_A3) = 0.0
35307.             $I_A3 = 1 + $I_A3
35307.             if ( $I_A3 >= $F_A48 ) exit
35307.          enddo
35307.       endif
35308.       $F_A49 = ncols
35308.       if ( ncols > 0 ) then
35308.          $I_A3 = 0
35308. !dir$ ivdep
35308.          do
35308.             toanetc(1 + $I_A3) = 0.0
35308.             $I_A3 = 1 + $I_A3
35308.             if ( $I_A3 >= $F_A49 ) exit
35308.          enddo
35308.       endif
35309.       $F_A50 = ncols
35309.       if ( ncols > 0 ) then
35309.          $I_A3 = 0
35309. !dir$ ivdep
35309.          do
35309.             sfcnet(1 + $I_A3) = 0.0
35309.             $I_A3 = 1 + $I_A3
35309.             if ( $I_A3 >= $F_A50 ) exit
35309.          enddo
35309.       endif
35310.       $F_A51 = ncols
35310.       if ( ncols > 0 ) then
35310.          $I_A3 = 0
35310. !dir$ ivdep
35310.          do
35310.             sfcnetc(1 + $I_A3) = 0.0
35310.             $I_A3 = 1 + $I_A3
35310.             if ( $I_A3 >= $F_A51 ) exit
35310.          enddo
35310.       endif
35312.       ierr = 0
35323.       $F_A52 = ncols
35323.       if ( ncols > 0 ) then
35323.          $I_A3 = 0
35323. !dir$ ivdep
35323.          do
35323.             bitx(1 + $I_A3) = cosz(1 + $I_A3) >= 9.9999998e-3
35323.             $I_A3 = 1 + $I_A3
35323.             if ( $I_A3 >= $F_A52 ) exit
35323.          enddo
35323.       endif
35326.       $Reduc_A53 = 0
35326.       $F_A55 = ncols
35326.       if ( ncols > 0 ) then
35326.          $I_A54 = 0
35326. !dir$ ivdep
35326.          do
35326.             if ( bitx(1 + $I_A54) /= 0 ) then
35326.                $Reduc_A53 = 1 + $Reduc_A53
35326.             endif
35326.             $I_A54 = 1 + $I_A54
35326.             if ( $I_A54 >= $F_A55 ) exit
35326.          enddo
35326.       endif
35329.       if ( $Reduc_A53 == 0 ) then
35228.          $_allo_P24(0) = 0x17000000000001L
35228.          $_allo_P24(1) = loc( zen_0 )
35228.          $_allo_P24(2) = loc( w_cloud )
35228.          $_allo_P24(3) = loc( t_level )
35228.          $_allo_P24(4) = loc( t_ground )
35228.          $_allo_P24(5) = loc( temp )
35228.          $_allo_P24(6) = loc( solar_irrad )
35228.          $_allo_P24(7) = loc( rho_alb )
35228.          $_allo_P24(8) = loc( pres )
35228.          $_allo_P24(9) = loc( gas_mix_ratio )
35228.          $_allo_P24(10) = loc( frac_cloud )
35228.          $_allo_P24(11) = loc( flux_up_clear )
35228.          $_allo_P24(12) = loc( flux_up )
35228.          $_allo_P24(13) = loc( flux_net_clear )
35228.          $_allo_P24(14) = loc( flux_net )
35228.          $_allo_P24(15) = loc( flux_down_clear )
35228.          $_allo_P24(16) = loc( flux_down )
35228.          $_allo_P24(17) = loc( flux_direct_clear )
35228.          $_allo_P24(18) = loc( flux_direct )
35228.          $_allo_P24(19) = loc( d_mass )
35228.          $_allo_P24(20) = loc( condensed_mix_ratio )
35228.          $_allo_P24(21) = loc( condensed_dim_char )
35228.          $_allo_P24(22) = loc( clouds )
35228.          $_allo_P24(23) = loc( aerosol_mix_ratio )
35228.          call _dealloc( $_allo_P24, 0, 0, _fcd( 0, 0 ) )
34739.          _free( t$10020 )
34739.       else
35334.          $F_A56 = ncols
35334.          if ( ncols > 0 ) then
35334.             $I_L35334_614 = 0
35334. !dir$ ivdep
35334.             do
35334.                litx(1 + $I_L35334_614) = 0
35334.                $I_L35334_614 = 1 + $I_L35334_614
35334.                if ( $I_L35334_614 >= $F_A56 ) exit
35334.             enddo
35334.          endif
35335.          t$10232 = ( max( 0, ncols ) )
35335.          t$10235 = int( _alloc( max( 0, 4 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
35335.          $F_A57 = ncols
35335.          if ( ncols > 0 ) then
35335.             $I_L35335_616 = 0
35335. !dir$ ivdep
35335.             do
35335.                t$10234(1 + $I_L35335_616) = listim(1 + $I_L35335_616)
35335.                $I_L35335_616 = 1 + $I_L35335_616
35335.                if ( $I_L35335_616 >= $F_A57 ) exit
35335.             enddo
35335.          endif
35335.          t$10236 = ( max( 0, ncols ) )
35335.          t$10239 = int( _alloc( max( 0, 4 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
35335.          $F_A58 = ncols
35335.          if ( ncols > 0 ) then
35335.             $I_L35335_618 = 0
35335. !dir$ ivdep
35335.             do
35335.                t$10238(1 + $I_L35335_618) = bitx(1 + $I_L35335_618)
35335.                $I_L35335_618 = 1 + $I_L35335_618
35335.                if ( $I_L35335_618 >= $F_A58 ) exit
35335.             enddo
35335.          endif
35335.          $PackIdx_A0 = 0
35335.          if ( ncols > 0 ) then
35335.             $I_L35335_612 = 0
35335. !dir$ ivdep
35335.             do
35335.                if ( t$10238(1 + $I_L35335_612) /= .false. ) then
35335.                   litx(1 + $PackIdx_A0) = t$10234(1 + $I_L35335_612)
35335.                   $PackIdx_A0 = 1 + $PackIdx_A0
35335.                endif
35335.                $I_L35335_612 = 1 + $I_L35335_612
35335.                if ( $I_L35335_612 >= max( 0, ncols ) ) exit
35335.             enddo
35335.          endif
35335.          _free( t$10239 )
35335.          _free( t$10235 )
35340.          n_profile = $Reduc_A53
35341.          n_layer = kmax
35343.          nd_profile = $Reduc_A53
35344.          nd_layer = kmax
35346.          nd_2sg_profile = $Reduc_A53
35347.          nd_flux_profile = $Reduc_A53
35353.          pres%header%a_contig = 1
35353.          pres%dim_1%LB = 1
35353.          pres%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35353.          pres%dim_1%SM = 1
35353.          pres%dim_2%LB = 1
35353.          pres%dim_2%EX = ( max( 0, kmax ) )
35353.          pres%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35353.          $_allo_P25(0) = 0x1000000000001L
35353.          $_allo_P25(1) = loc( pres )
35353.          call __allocate( $_allo_P25, 0, 0, _fcd( 0, 0 ) )
35354.          $F_A59 = ( max( 0, kmax ) )
35354.          $F_A60 = ( max( 0, $Reduc_A53 ) )
35354.          if ( and( -$F_A60, -$F_A59 ) < 0 ) then
35354.             $I_L35354_760 = 0
35354.             do
35354.                $I_L35354_620 = 0
35354. !dir$ ivdep
35354.                do
35354.                   (pres%base_addr)(1 + $I_L35354_620, 1 + $I_L35354_760, 0) = 0.0
35354.                   $I_L35354_620 = 1 + $I_L35354_620
35354.                   if ( $I_L35354_620 >= $F_A60 ) exit
35354.                enddo
35354.                $I_L35354_760 = 1 + $I_L35354_760
35354.                if ( $I_L35354_760 >= $F_A59 ) exit
35354.             enddo
35354.          endif
35355.          temp%header%a_contig = 1
35355.          temp%dim_1%LB = 1
35355.          temp%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35355.          temp%dim_1%SM = 1
35355.          temp%dim_2%LB = 1
35355.          temp%dim_2%EX = ( max( 0, kmax ) )
35355.          temp%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35355.          $_allo_P26(0) = 0x1000000000001L
35355.          $_allo_P26(1) = loc( temp )
35355.          call __allocate( $_allo_P26, 0, 0, _fcd( 0, 0 ) )
35356.          $F_A61 = ( max( 0, kmax ) )
35356.          $F_A62 = ( max( 0, $Reduc_A53 ) )
35356.          if ( and( -$F_A62, -$F_A61 ) < 0 ) then
35356.             $I_L35356_762 = 0
35356.             do
35356.                $I_L35356_622 = 0
35356. !dir$ ivdep
35356.                do
35356.                   (temp%base_addr)(1 + $I_L35356_622, 1 + $I_L35356_762, 0) = 0.0
35356.                   $I_L35356_622 = 1 + $I_L35356_622
35356.                   if ( $I_L35356_622 >= $F_A62 ) exit
35356.                enddo
35356.                $I_L35356_762 = 1 + $I_L35356_762
35356.                if ( $I_L35356_762 >= $F_A61 ) exit
35356.             enddo
35356.          endif
35357.          d_mass%header%a_contig = 1
35357.          d_mass%dim_1%LB = 1
35357.          d_mass%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35357.          d_mass%dim_1%SM = 1
35357.          d_mass%dim_2%LB = 1
35357.          d_mass%dim_2%EX = ( max( 0, kmax ) )
35357.          d_mass%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35357.          $_allo_P27(0) = 0x1000000000001L
35357.          $_allo_P27(1) = loc( d_mass )
35357.          call __allocate( $_allo_P27, 0, 0, _fcd( 0, 0 ) )
35358.          $F_A63 = ( max( 0, kmax ) )
35358.          $F_A64 = ( max( 0, $Reduc_A53 ) )
35358.          if ( and( -$F_A64, -$F_A63 ) < 0 ) then
35358.             $I_L35358_764 = 0
35358.             do
35358.                $I_L35358_624 = 0
35358. !dir$ ivdep
35358.                do
35358.                   (d_mass%base_addr)(1 + $I_L35358_624, 1 + $I_L35358_764, 0) = 0.0
35358.                   $I_L35358_624 = 1 + $I_L35358_624
35358.                   if ( $I_L35358_624 >= $F_A64 ) exit
35358.                enddo
35358.                $I_L35358_764 = 1 + $I_L35358_764
35358.                if ( $I_L35358_764 >= $F_A63 ) exit
35358.             enddo
35358.          endif
35359.          t_ground%header%a_contig = 1
35359.          t_ground%dim_1%LB = 1
35359.          t_ground%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35359.          t_ground%dim_1%SM = 1
35359.          $_allo_P28(0) = 0x1000000000001L
35359.          $_allo_P28(1) = loc( t_ground )
35359.          call __allocate( $_allo_P28, 0, 0, _fcd( 0, 0 ) )
35360.          $F_A65 = ( max( 0, $Reduc_A53 ) )
35360.          if ( $Reduc_A53 > 0 ) then
35360.             $I_L35360_626 = 0
35360. !dir$ ivdep
35360.             do
35360.                (t_ground%base_addr)(1 + $I_L35360_626, 0) = 0.0
35360.                $I_L35360_626 = 1 + $I_L35360_626
35360.                if ( $I_L35360_626 >= $F_A65 ) exit
35360.             enddo
35360.          endif
35361.          t_level%header%a_contig = 1
35361.          t_level%dim_1%LB = 1
35361.          t_level%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35361.          t_level%dim_1%SM = 1
35361.          t_level%dim_2%LB = 0
35361.          t_level%dim_2%EX = ( max( 0, 1 + kmax ) )
35361.          t_level%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35361.          $_allo_P29(0) = 0x1000000000001L
35361.          $_allo_P29(1) = loc( t_level )
35361.          call __allocate( $_allo_P29, 0, 0, _fcd( 0, 0 ) )
35362.          $F_A66 = ( max( 0, 1 + kmax ) )
35362.          $F_A67 = ( max( 0, $Reduc_A53 ) )
35362.          if ( and( -$F_A67, -$F_A66 ) < 0 ) then
35362.             $I_L35362_766 = 0
35362.             do
35362.                $I_L35362_628 = 0
35362. !dir$ ivdep
35362.                do
35362.                   (t_level%base_addr)(1 + $I_L35362_628, $I_L35362_766, 0) = 0.0
35362.                   $I_L35362_628 = 1 + $I_L35362_628
35362.                   if ( $I_L35362_628 >= $F_A67 ) exit
35362.                enddo
35362.                $I_L35362_766 = 1 + $I_L35362_766
35362.                if ( $I_L35362_766 >= $F_A66 ) exit
35362.             enddo
35362.          endif
35363.          zen_0%header%a_contig = 1
35363.          zen_0%dim_1%LB = 1
35363.          zen_0%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35363.          zen_0%dim_1%SM = 1
35363.          $_allo_P30(0) = 0x1000000000001L
35363.          $_allo_P30(1) = loc( zen_0 )
35363.          call __allocate( $_allo_P30, 0, 0, _fcd( 0, 0 ) )
35364.          $F_A68 = ( max( 0, $Reduc_A53 ) )
35364.          if ( $Reduc_A53 > 0 ) then
35364.             $I_L35364_630 = 0
35364. !dir$ ivdep
35364.             do
35364.                (zen_0%base_addr)(1 + $I_L35364_630, 0) = 0.0
35364.                $I_L35364_630 = 1 + $I_L35364_630
35364.                if ( $I_L35364_630 >= $F_A68 ) exit
35364.             enddo
35364.          endif
35365.          solar_irrad%header%a_contig = 1
35365.          solar_irrad%dim_1%LB = 1
35365.          solar_irrad%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35365.          solar_irrad%dim_1%SM = 1
35365.          $_allo_P31(0) = 0x1000000000001L
35365.          $_allo_P31(1) = loc( solar_irrad )
35365.          call __allocate( $_allo_P31, 0, 0, _fcd( 0, 0 ) )
35366.          $F_A69 = ( max( 0, $Reduc_A53 ) )
35366.          if ( $Reduc_A53 > 0 ) then
35366.             $I_L35366_632 = 0
35366. !dir$ ivdep
35366.             do
35366.                (solar_irrad%base_addr)(1 + $I_L35366_632, 0) = 0.0
35366.                $I_L35366_632 = 1 + $I_L35366_632
35366.                if ( $I_L35366_632 >= $F_A69 ) exit
35366.             enddo
35366.          endif
35367.          rho_alb%header%a_contig = 1
35367.          rho_alb%dim_1%LB = 1
35367.          rho_alb%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35367.          rho_alb%dim_1%SM = 1
35367.          rho_alb%dim_2%LB = 1
35367.          rho_alb%dim_2%EX = 2
35367.          rho_alb%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35367.          rho_alb%dim_3%LB = 1
35367.          rho_alb%dim_3%EX = ( max( 0, swdat%dim%nd_band ) )
35367.          rho_alb%dim_3%SM = ( 2 * max( 0, $Reduc_A53 ) )
35367.          $_allo_P32(0) = 0x1000000000001L
35367.          $_allo_P32(1) = loc( rho_alb )
35367.          call __allocate( $_allo_P32, 0, 0, _fcd( 0, 0 ) )
35368.          $F_A70 = ( max( 0, swdat%dim%nd_band ) )
35368.          $F_A71 = ( max( 0, $Reduc_A53 ) )
35368.          if ( and( -$F_A71, -$F_A70 ) < 0 ) then
35368.             $SC_swdat_I173 = swdat%dim%nd_band
35368.             $I_L35368_856 = 0
35368.             do
35368.                $I_L35368_768 = 0
35368.                do
35368.                   $I_L35368_634 = 0
35368. !dir$ ivdep
35368.                   do
35368.                      (rho_alb%base_addr)(1 + $I_L35368_634, 1 + $I_L35368_768, 1 + $I_L35368_856, 0) = 0.0
35368.                      $I_L35368_634 = 1 + $I_L35368_634
35368.                      if ( $I_L35368_634 >= $F_A71 ) exit
35368.                   enddo
35368.                   $I_L35368_768 = 1 + $I_L35368_768
35368.                   if ( $I_L35368_768 >= 2 ) exit
35368.                enddo
35368.                $I_L35368_856 = 1 + $I_L35368_856
35368.                if ( $I_L35368_856 >= $F_A70 ) exit
35368.             enddo
35368.          endif
35370.          gas_mix_ratio%header%a_contig = 1
35370.          gas_mix_ratio%dim_1%LB = 1
35370.          gas_mix_ratio%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35370.          gas_mix_ratio%dim_1%SM = 1
35370.          gas_mix_ratio%dim_2%LB = 1
35370.          gas_mix_ratio%dim_2%EX = ( max( 0, kmax ) )
35370.          gas_mix_ratio%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35370.          gas_mix_ratio%dim_3%LB = 1
35370.          gas_mix_ratio%dim_3%EX = ( max( 0, swdat%dim%nd_species ) )
35370.          gas_mix_ratio%dim_3%SM = ( max( 0, kmax ) * max( 0, $Reduc_A53 ) )
35370.          $_allo_P33(0) = 0x1000000000001L
35370.          $_allo_P33(1) = loc( gas_mix_ratio )
35370.          call __allocate( $_allo_P33, 0, 0, _fcd( 0, 0 ) )
35371.          $F_A72 = ( max( 0, swdat%dim%nd_species ) )
35371.          $F_A73 = ( max( 0, kmax ) )
35371.          $F_A74 = ( max( 0, $Reduc_A53 ) )
35371.          if ( and( and( -$F_A73, -$F_A72 ), -$F_A74 ) < 0 ) then
35371.             $SC_swdat_I174 = swdat%dim%nd_species
35371.             $I_L35371_858 = 0
35371.             do
35371.                $I_L35371_770 = 0
35371.                do
35371.                   $I_L35371_636 = 0
35371. !dir$ ivdep
35371.                   do
35371.                      (gas_mix_ratio%base_addr)(1 + $I_L35371_636, 1 + $I_L35371_770, 1 + $I_L35371_858, 0) = 0.0
35371.                      $I_L35371_636 = 1 + $I_L35371_636
35371.                      if ( $I_L35371_636 >= $F_A74 ) exit
35371.                   enddo
35371.                   $I_L35371_770 = 1 + $I_L35371_770
35371.                   if ( $I_L35371_770 >= $F_A73 ) exit
35371.                enddo
35371.                $I_L35371_858 = 1 + $I_L35371_858
35371.                if ( $I_L35371_858 >= $F_A72 ) exit
35371.             enddo
35371.          endif
35372.          aerosol_mix_ratio%header%a_contig = 1
35372.          aerosol_mix_ratio%dim_1%LB = 1
35372.          aerosol_mix_ratio%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35372.          aerosol_mix_ratio%dim_1%SM = 1
35372.          aerosol_mix_ratio%dim_2%LB = 1
35372.          aerosol_mix_ratio%dim_2%EX = ( max( 0, kmax ) )
35372.          aerosol_mix_ratio%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35372.          aerosol_mix_ratio%dim_3%LB = 1
35372.          aerosol_mix_ratio%dim_3%EX = ( max( 0, swdat%dim%nd_aerosol_species ) )
35372.          aerosol_mix_ratio%dim_3%SM = ( max( 0, kmax ) * max( 0, $Reduc_A53 ) )
35372.          $_allo_P34(0) = 0x1000000000001L
35372.          $_allo_P34(1) = loc( aerosol_mix_ratio )
35372.          call __allocate( $_allo_P34, 0, 0, _fcd( 0, 0 ) )
35373.          $F_A75 = ( max( 0, swdat%dim%nd_aerosol_species ) )
35373.          $F_A76 = ( max( 0, kmax ) )
35373.          $F_A77 = ( max( 0, $Reduc_A53 ) )
35373.          if ( and( and( -$F_A76, -$F_A75 ), -$F_A77 ) < 0 ) then
35373.             $SC_swdat_I175 = swdat%dim%nd_aerosol_species
35373.             $I_L35373_860 = 0
35373.             do
35373.                $I_L35373_772 = 0
35373.                do
35373.                   $I_L35373_638 = 0
35373. !dir$ ivdep
35373.                   do
35373.                      (aerosol_mix_ratio%base_addr)(1 + $I_L35373_638, 1 + $I_L35373_772, 1 + $I_L35373_860, 0) = 0.0
35373.                      $I_L35373_638 = 1 + $I_L35373_638
35373.                      if ( $I_L35373_638 >= $F_A77 ) exit
35373.                   enddo
35373.                   $I_L35373_772 = 1 + $I_L35373_772
35373.                   if ( $I_L35373_772 >= $F_A76 ) exit
35373.                enddo
35373.                $I_L35373_860 = 1 + $I_L35373_860
35373.                if ( $I_L35373_860 >= $F_A75 ) exit
35373.             enddo
35373.          endif
35375.          w_cloud%header%a_contig = 1
35375.          w_cloud%dim_1%LB = 1
35375.          w_cloud%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35375.          w_cloud%dim_1%SM = 1
35375.          w_cloud%dim_2%LB = 1
35375.          w_cloud%dim_2%EX = ( max( 0, kmax ) )
35375.          w_cloud%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35375.          $_allo_P35(0) = 0x1000000000001L
35375.          $_allo_P35(1) = loc( w_cloud )
35375.          call __allocate( $_allo_P35, 0, 0, _fcd( 0, 0 ) )
35376.          $F_A78 = ( max( 0, kmax ) )
35376.          $F_A79 = ( max( 0, $Reduc_A53 ) )
35376.          if ( and( -$F_A79, -$F_A78 ) < 0 ) then
35376.             $I_L35376_774 = 0
35376.             do
35376.                $I_L35376_640 = 0
35376. !dir$ ivdep
35376.                do
35376.                   (w_cloud%base_addr)(1 + $I_L35376_640, 1 + $I_L35376_774, 0) = 0.0
35376.                   $I_L35376_640 = 1 + $I_L35376_640
35376.                   if ( $I_L35376_640 >= $F_A79 ) exit
35376.                enddo
35376.                $I_L35376_774 = 1 + $I_L35376_774
35376.                if ( $I_L35376_774 >= $F_A78 ) exit
35376.             enddo
35376.          endif
35377.          frac_cloud%header%a_contig = 1
35377.          frac_cloud%dim_1%LB = 1
35377.          frac_cloud%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35377.          frac_cloud%dim_1%SM = 1
35377.          frac_cloud%dim_2%LB = 1
35377.          frac_cloud%dim_2%EX = ( max( 0, kmax ) )
35377.          frac_cloud%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35377.          frac_cloud%dim_3%LB = 1
35377.          frac_cloud%dim_3%EX = 4
35377.          frac_cloud%dim_3%SM = ( max( 0, kmax ) * max( 0, $Reduc_A53 ) )
35377.          $_allo_P36(0) = 0x1000000000001L
35377.          $_allo_P36(1) = loc( frac_cloud )
35377.          call __allocate( $_allo_P36, 0, 0, _fcd( 0, 0 ) )
35378.          $F_A80 = ( max( 0, kmax ) )
35378.          $F_A81 = ( max( 0, $Reduc_A53 ) )
35378.          if ( and( -$F_A81, -$F_A80 ) < 0 ) then
35378.             $I_L35378_862 = 0
35378.             do
35378.                $I_L35378_776 = 0
35378.                do
35378.                   $I_L35378_642 = 0
35378. !dir$ ivdep
35378.                   do
35378.                      (frac_cloud%base_addr)(1 + $I_L35378_642, 1 + $I_L35378_776, 1 + $I_L35378_862, 0) = 0.0
35378.                      $I_L35378_642 = 1 + $I_L35378_642
35378.                      if ( $I_L35378_642 >= $F_A81 ) exit
35378.                   enddo
35378.                   $I_L35378_776 = 1 + $I_L35378_776
35378.                   if ( $I_L35378_776 >= $F_A80 ) exit
35378.                enddo
35378.                $I_L35378_862 = 1 + $I_L35378_862
35378.                if ( $I_L35378_862 >= 4 ) exit
35378.             enddo
35378.          endif
35379.          condensed_mix_ratio%header%a_contig = 1
35379.          condensed_mix_ratio%dim_1%LB = 1
35379.          condensed_mix_ratio%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35379.          condensed_mix_ratio%dim_1%SM = 1
35379.          condensed_mix_ratio%dim_2%LB = 1
35379.          condensed_mix_ratio%dim_2%EX = ( max( 0, kmax ) )
35379.          condensed_mix_ratio%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35379.          condensed_mix_ratio%dim_3%LB = 1
35379.          condensed_mix_ratio%dim_3%EX = 4
35379.          condensed_mix_ratio%dim_3%SM = ( max( 0, kmax ) * max( 0, $Reduc_A53 ) )
35379.          $_allo_P37(0) = 0x1000000000001L
35379.          $_allo_P37(1) = loc( condensed_mix_ratio )
35379.          call __allocate( $_allo_P37, 0, 0, _fcd( 0, 0 ) )
35380.          $F_A82 = ( max( 0, kmax ) )
35380.          $F_A83 = ( max( 0, $Reduc_A53 ) )
35380.          if ( and( -$F_A83, -$F_A82 ) < 0 ) then
35380.             $I_L35380_864 = 0
35380.             do
35380.                $I_L35380_778 = 0
35380.                do
35380.                   $I_L35380_644 = 0
35380. !dir$ ivdep
35380.                   do
35380.                      (condensed_mix_ratio%base_addr)(1 + $I_L35380_644, 1 + $I_L35380_778, 1 + $I_L35380_864, 0) = 0.0
35380.                      $I_L35380_644 = 1 + $I_L35380_644
35380.                      if ( $I_L35380_644 >= $F_A83 ) exit
35380.                   enddo
35380.                   $I_L35380_778 = 1 + $I_L35380_778
35380.                   if ( $I_L35380_778 >= $F_A82 ) exit
35380.                enddo
35380.                $I_L35380_864 = 1 + $I_L35380_864
35380.                if ( $I_L35380_864 >= 4 ) exit
35380.             enddo
35380.          endif
35381.          condensed_dim_char%header%a_contig = 1
35381.          condensed_dim_char%dim_1%LB = 1
35381.          condensed_dim_char%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35381.          condensed_dim_char%dim_1%SM = 1
35381.          condensed_dim_char%dim_2%LB = 1
35381.          condensed_dim_char%dim_2%EX = ( max( 0, kmax ) )
35381.          condensed_dim_char%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35381.          condensed_dim_char%dim_3%LB = 1
35381.          condensed_dim_char%dim_3%EX = 4
35381.          condensed_dim_char%dim_3%SM = ( max( 0, kmax ) * max( 0, $Reduc_A53 ) )
35381.          $_allo_P38(0) = 0x1000000000001L
35381.          $_allo_P38(1) = loc( condensed_dim_char )
35381.          call __allocate( $_allo_P38, 0, 0, _fcd( 0, 0 ) )
35382.          $F_A84 = ( max( 0, kmax ) )
35382.          $F_A85 = ( max( 0, $Reduc_A53 ) )
35382.          if ( and( -$F_A85, -$F_A84 ) < 0 ) then
35382.             $I_L35382_866 = 0
35382.             do
35382.                $I_L35382_780 = 0
35382.                do
35382.                   $I_L35382_646 = 0
35382. !dir$ ivdep
35382.                   do
35382.                      (condensed_dim_char%base_addr)(1 + $I_L35382_646, 1 + $I_L35382_780, 1 + $I_L35382_866, 0) = 0.0
35382.                      $I_L35382_646 = 1 + $I_L35382_646
35382.                      if ( $I_L35382_646 >= $F_A85 ) exit
35382.                   enddo
35382.                   $I_L35382_780 = 1 + $I_L35382_780
35382.                   if ( $I_L35382_780 >= $F_A84 ) exit
35382.                enddo
35382.                $I_L35382_866 = 1 + $I_L35382_866
35382.                if ( $I_L35382_866 >= 4 ) exit
35382.             enddo
35382.          endif
35384.          clouds%header%a_contig = 1
35384.          clouds%dim_1%LB = 1
35384.          clouds%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35384.          clouds%dim_1%SM = 1
35384.          clouds%dim_2%LB = 1
35384.          clouds%dim_2%EX = ( max( 0, kmax ) )
35384.          clouds%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35384.          clouds%dim_3%LB = 1
35384.          clouds%dim_3%EX = 4
35384.          clouds%dim_3%SM = ( max( 0, kmax ) * max( 0, $Reduc_A53 ) )
35384.          $_allo_P39(0) = 0x1000000000001L
35384.          $_allo_P39(1) = loc( clouds )
35384.          call __allocate( $_allo_P39, 0, 0, _fcd( 0, 0 ) )
35385.          $F_A86 = ( max( 0, kmax ) )
35385.          $F_A87 = ( max( 0, $Reduc_A53 ) )
35385.          if ( and( -$F_A87, -$F_A86 ) < 0 ) then
35385.             $I_L35385_868 = 0
35385.             do
35385.                $I_L35385_782 = 0
35385.                do
35385.                   $I_L35385_648 = 0
35385. !dir$ ivdep
35385.                   do
35385.                      (clouds%base_addr)(1 + $I_L35385_648, 1 + $I_L35385_782, 1 + $I_L35385_868, 0) = 0.0
35385.                      $I_L35385_648 = 1 + $I_L35385_648
35385.                      if ( $I_L35385_648 >= $F_A87 ) exit
35385.                   enddo
35385.                   $I_L35385_782 = 1 + $I_L35385_782
35385.                   if ( $I_L35385_782 >= $F_A86 ) exit
35385.                enddo
35385.                $I_L35385_868 = 1 + $I_L35385_868
35385.                if ( $I_L35385_868 >= 4 ) exit
35385.             enddo
35385.          endif
35387.          flux_direct%header%a_contig = 1
35387.          flux_direct%dim_1%LB = 1
35387.          flux_direct%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35387.          flux_direct%dim_1%SM = 1
35387.          flux_direct%dim_2%LB = 0
35387.          flux_direct%dim_2%EX = ( max( 0, 1 + kmax ) )
35387.          flux_direct%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35387.          flux_direct%dim_3%LB = 1
35387.          flux_direct%dim_3%EX = 2
35387.          flux_direct%dim_3%SM = ( max( 0, 1 + kmax ) * max( 0, $Reduc_A53 ) )
35387.          $_allo_P40(0) = 0x1000000000001L
35387.          $_allo_P40(1) = loc( flux_direct )
35387.          call __allocate( $_allo_P40, 0, 0, _fcd( 0, 0 ) )
35388.          $F_A88 = ( max( 0, 1 + kmax ) )
35388.          $F_A89 = ( max( 0, $Reduc_A53 ) )
35388.          if ( and( -$F_A89, -$F_A88 ) < 0 ) then
35388.             $I_L35388_870 = 0
35388.             do
35388.                $I_L35388_784 = 0
35388.                do
35388.                   $I_L35388_650 = 0
35388. !dir$ ivdep
35388.                   do
35388.                      (flux_direct%base_addr)(1 + $I_L35388_650, $I_L35388_784, 1 + $I_L35388_870, 0) = 0.0
35388.                      $I_L35388_650 = 1 + $I_L35388_650
35388.                      if ( $I_L35388_650 >= $F_A89 ) exit
35388.                   enddo
35388.                   $I_L35388_784 = 1 + $I_L35388_784
35388.                   if ( $I_L35388_784 >= $F_A88 ) exit
35388.                enddo
35388.                $I_L35388_870 = 1 + $I_L35388_870
35388.                if ( $I_L35388_870 >= 2 ) exit
35388.             enddo
35388.          endif
35389.          flux_down%header%a_contig = 1
35389.          flux_down%dim_1%LB = 1
35389.          flux_down%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35389.          flux_down%dim_1%SM = 1
35389.          flux_down%dim_2%LB = 0
35389.          flux_down%dim_2%EX = ( max( 0, 1 + kmax ) )
35389.          flux_down%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35389.          flux_down%dim_3%LB = 1
35389.          flux_down%dim_3%EX = 2
35389.          flux_down%dim_3%SM = ( max( 0, 1 + kmax ) * max( 0, $Reduc_A53 ) )
35389.          $_allo_P41(0) = 0x1000000000001L
35389.          $_allo_P41(1) = loc( flux_down )
35389.          call __allocate( $_allo_P41, 0, 0, _fcd( 0, 0 ) )
35390.          $F_A90 = ( max( 0, 1 + kmax ) )
35390.          $F_A91 = ( max( 0, $Reduc_A53 ) )
35390.          if ( and( -$F_A91, -$F_A90 ) < 0 ) then
35390.             $I_L35390_872 = 0
35390.             do
35390.                $I_L35390_786 = 0
35390.                do
35390.                   $I_L35390_652 = 0
35390. !dir$ ivdep
35390.                   do
35390.                      (flux_down%base_addr)(1 + $I_L35390_652, $I_L35390_786, 1 + $I_L35390_872, 0) = 0.0
35390.                      $I_L35390_652 = 1 + $I_L35390_652
35390.                      if ( $I_L35390_652 >= $F_A91 ) exit
35390.                   enddo
35390.                   $I_L35390_786 = 1 + $I_L35390_786
35390.                   if ( $I_L35390_786 >= $F_A90 ) exit
35390.                enddo
35390.                $I_L35390_872 = 1 + $I_L35390_872
35390.                if ( $I_L35390_872 >= 2 ) exit
35390.             enddo
35390.          endif
35391.          flux_up%header%a_contig = 1
35391.          flux_up%dim_1%LB = 1
35391.          flux_up%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35391.          flux_up%dim_1%SM = 1
35391.          flux_up%dim_2%LB = 0
35391.          flux_up%dim_2%EX = ( max( 0, 1 + kmax ) )
35391.          flux_up%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35391.          flux_up%dim_3%LB = 1
35391.          flux_up%dim_3%EX = 2
35391.          flux_up%dim_3%SM = ( max( 0, 1 + kmax ) * max( 0, $Reduc_A53 ) )
35391.          $_allo_P42(0) = 0x1000000000001L
35391.          $_allo_P42(1) = loc( flux_up )
35391.          call __allocate( $_allo_P42, 0, 0, _fcd( 0, 0 ) )
35392.          $F_A92 = ( max( 0, 1 + kmax ) )
35392.          $F_A93 = ( max( 0, $Reduc_A53 ) )
35392.          if ( and( -$F_A93, -$F_A92 ) < 0 ) then
35392.             $I_L35392_874 = 0
35392.             do
35392.                $I_L35392_788 = 0
35392.                do
35392.                   $I_L35392_654 = 0
35392. !dir$ ivdep
35392.                   do
35392.                      (flux_up%base_addr)(1 + $I_L35392_654, $I_L35392_788, 1 + $I_L35392_874, 0) = 0.0
35392.                      $I_L35392_654 = 1 + $I_L35392_654
35392.                      if ( $I_L35392_654 >= $F_A93 ) exit
35392.                   enddo
35392.                   $I_L35392_788 = 1 + $I_L35392_788
35392.                   if ( $I_L35392_788 >= $F_A92 ) exit
35392.                enddo
35392.                $I_L35392_874 = 1 + $I_L35392_874
35392.                if ( $I_L35392_874 >= 2 ) exit
35392.             enddo
35392.          endif
35393.          flux_net%header%a_contig = 1
35393.          flux_net%dim_1%LB = 1
35393.          flux_net%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35393.          flux_net%dim_1%SM = 1
35393.          flux_net%dim_2%LB = 0
35393.          flux_net%dim_2%EX = ( max( 0, 1 + kmax ) )
35393.          flux_net%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35393.          flux_net%dim_3%LB = 1
35393.          flux_net%dim_3%EX = 2
35393.          flux_net%dim_3%SM = ( max( 0, 1 + kmax ) * max( 0, $Reduc_A53 ) )
35393.          $_allo_P43(0) = 0x1000000000001L
35393.          $_allo_P43(1) = loc( flux_net )
35393.          call __allocate( $_allo_P43, 0, 0, _fcd( 0, 0 ) )
35394.          $F_A94 = ( max( 0, 1 + kmax ) )
35394.          $F_A95 = ( max( 0, $Reduc_A53 ) )
35394.          if ( and( -$F_A95, -$F_A94 ) < 0 ) then
35394.             $I_L35394_876 = 0
35394.             do
35394.                $I_L35394_790 = 0
35394.                do
35394.                   $I_L35394_656 = 0
35394. !dir$ ivdep
35394.                   do
35394.                      (flux_net%base_addr)(1 + $I_L35394_656, $I_L35394_790, 1 + $I_L35394_876, 0) = 0.0
35394.                      $I_L35394_656 = 1 + $I_L35394_656
35394.                      if ( $I_L35394_656 >= $F_A95 ) exit
35394.                   enddo
35394.                   $I_L35394_790 = 1 + $I_L35394_790
35394.                   if ( $I_L35394_790 >= $F_A94 ) exit
35394.                enddo
35394.                $I_L35394_876 = 1 + $I_L35394_876
35394.                if ( $I_L35394_876 >= 2 ) exit
35394.             enddo
35394.          endif
35396.          flux_direct_clear%header%a_contig = 1
35396.          flux_direct_clear%dim_1%LB = 1
35396.          flux_direct_clear%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35396.          flux_direct_clear%dim_1%SM = 1
35396.          flux_direct_clear%dim_2%LB = 0
35396.          flux_direct_clear%dim_2%EX = ( max( 0, 1 + kmax ) )
35396.          flux_direct_clear%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35396.          flux_direct_clear%dim_3%LB = 1
35396.          flux_direct_clear%dim_3%EX = 2
35396.          flux_direct_clear%dim_3%SM = ( max( 0, 1 + kmax ) * max( 0, $Reduc_A53 ) )
35396.          $_allo_P44(0) = 0x1000000000001L
35396.          $_allo_P44(1) = loc( flux_direct_clear )
35396.          call __allocate( $_allo_P44, 0, 0, _fcd( 0, 0 ) )
35397.          $F_A96 = ( max( 0, 1 + kmax ) )
35397.          $F_A97 = ( max( 0, $Reduc_A53 ) )
35397.          if ( and( -$F_A97, -$F_A96 ) < 0 ) then
35397.             $I_L35397_878 = 0
35397.             do
35397.                $I_L35397_792 = 0
35397.                do
35397.                   $I_L35397_658 = 0
35397. !dir$ ivdep
35397.                   do
35397.                      (flux_direct_clear%base_addr)(1 + $I_L35397_658, $I_L35397_792, 1 + $I_L35397_878, 0) = 0.0
35397.                      $I_L35397_658 = 1 + $I_L35397_658
35397.                      if ( $I_L35397_658 >= $F_A97 ) exit
35397.                   enddo
35397.                   $I_L35397_792 = 1 + $I_L35397_792
35397.                   if ( $I_L35397_792 >= $F_A96 ) exit
35397.                enddo
35397.                $I_L35397_878 = 1 + $I_L35397_878
35397.                if ( $I_L35397_878 >= 2 ) exit
35397.             enddo
35397.          endif
35398.          flux_down_clear%header%a_contig = 1
35398.          flux_down_clear%dim_1%LB = 1
35398.          flux_down_clear%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35398.          flux_down_clear%dim_1%SM = 1
35398.          flux_down_clear%dim_2%LB = 0
35398.          flux_down_clear%dim_2%EX = ( max( 0, 1 + kmax ) )
35398.          flux_down_clear%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35398.          flux_down_clear%dim_3%LB = 1
35398.          flux_down_clear%dim_3%EX = 2
35398.          flux_down_clear%dim_3%SM = ( max( 0, 1 + kmax ) * max( 0, $Reduc_A53 ) )
35398.          $_allo_P45(0) = 0x1000000000001L
35398.          $_allo_P45(1) = loc( flux_down_clear )
35398.          call __allocate( $_allo_P45, 0, 0, _fcd( 0, 0 ) )
35399.          $F_A98 = ( max( 0, 1 + kmax ) )
35399.          $F_A99 = ( max( 0, $Reduc_A53 ) )
35399.          if ( and( -$F_A99, -$F_A98 ) < 0 ) then
35399.             $I_L35399_880 = 0
35399.             do
35399.                $I_L35399_794 = 0
35399.                do
35399.                   $I_L35399_660 = 0
35399. !dir$ ivdep
35399.                   do
35399.                      (flux_down_clear%base_addr)(1 + $I_L35399_660, $I_L35399_794, 1 + $I_L35399_880, 0) = 0.0
35399.                      $I_L35399_660 = 1 + $I_L35399_660
35399.                      if ( $I_L35399_660 >= $F_A99 ) exit
35399.                   enddo
35399.                   $I_L35399_794 = 1 + $I_L35399_794
35399.                   if ( $I_L35399_794 >= $F_A98 ) exit
35399.                enddo
35399.                $I_L35399_880 = 1 + $I_L35399_880
35399.                if ( $I_L35399_880 >= 2 ) exit
35399.             enddo
35399.          endif
35400.          flux_up_clear%header%a_contig = 1
35400.          flux_up_clear%dim_1%LB = 1
35400.          flux_up_clear%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35400.          flux_up_clear%dim_1%SM = 1
35400.          flux_up_clear%dim_2%LB = 0
35400.          flux_up_clear%dim_2%EX = ( max( 0, 1 + kmax ) )
35400.          flux_up_clear%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35400.          flux_up_clear%dim_3%LB = 1
35400.          flux_up_clear%dim_3%EX = 2
35400.          flux_up_clear%dim_3%SM = ( max( 0, 1 + kmax ) * max( 0, $Reduc_A53 ) )
35400.          $_allo_P46(0) = 0x1000000000001L
35400.          $_allo_P46(1) = loc( flux_up_clear )
35400.          call __allocate( $_allo_P46, 0, 0, _fcd( 0, 0 ) )
35401.          $F_A100 = ( max( 0, 1 + kmax ) )
35401.          $F_A101 = ( max( 0, $Reduc_A53 ) )
35401.          if ( and( -$F_A101, -$F_A100 ) < 0 ) then
35401.             $I_L35401_882 = 0
35401.             do
35401.                $I_L35401_796 = 0
35401.                do
35401.                   $I_L35401_662 = 0
35401. !dir$ ivdep
35401.                   do
35401.                      (flux_up_clear%base_addr)(1 + $I_L35401_662, $I_L35401_796, 1 + $I_L35401_882, 0) = 0.0
35401.                      $I_L35401_662 = 1 + $I_L35401_662
35401.                      if ( $I_L35401_662 >= $F_A101 ) exit
35401.                   enddo
35401.                   $I_L35401_796 = 1 + $I_L35401_796
35401.                   if ( $I_L35401_796 >= $F_A100 ) exit
35401.                enddo
35401.                $I_L35401_882 = 1 + $I_L35401_882
35401.                if ( $I_L35401_882 >= 2 ) exit
35401.             enddo
35401.          endif
35402.          flux_net_clear%header%a_contig = 1
35402.          flux_net_clear%dim_1%LB = 1
35402.          flux_net_clear%dim_1%EX = ( max( 0, $Reduc_A53 ) )
35402.          flux_net_clear%dim_1%SM = 1
35402.          flux_net_clear%dim_2%LB = 0
35402.          flux_net_clear%dim_2%EX = ( max( 0, 1 + kmax ) )
35402.          flux_net_clear%dim_2%SM = ( max( 0, $Reduc_A53 ) )
35402.          flux_net_clear%dim_3%LB = 1
35402.          flux_net_clear%dim_3%EX = 2
35402.          flux_net_clear%dim_3%SM = ( max( 0, 1 + kmax ) * max( 0, $Reduc_A53 ) )
35402.          $_allo_P47(0) = 0x1000000000001L
35402.          $_allo_P47(1) = loc( flux_net_clear )
35402.          call __allocate( $_allo_P47, 0, 0, _fcd( 0, 0 ) )
35403.          $F_A102 = ( max( 0, 1 + kmax ) )
35403.          $F_A103 = ( max( 0, $Reduc_A53 ) )
35403.          if ( and( -$F_A103, -$F_A102 ) < 0 ) then
35403.             $I_L35403_884 = 0
35403.             do
35403.                $I_L35403_798 = 0
35403.                do
35403.                   $I_L35403_664 = 0
35403. !dir$ ivdep
35403.                   do
35403.                      (flux_net_clear%base_addr)(1 + $I_L35403_664, $I_L35403_798, 1 + $I_L35403_884, 0) = 0.0
35403.                      $I_L35403_664 = 1 + $I_L35403_664
35403.                      if ( $I_L35403_664 >= $F_A103 ) exit
35403.                   enddo
35403.                   $I_L35403_798 = 1 + $I_L35403_798
35403.                   if ( $I_L35403_798 >= $F_A102 ) exit
35403.                enddo
35403.                $I_L35403_884 = 1 + $I_L35403_884
35403.                if ( $I_L35403_884 >= 2 ) exit
35403.             enddo
35403.          endif
35409.          if ( $Reduc_A53 > 0 ) then
35411.             if ( kmax > 0 ) then
35411.                $I_L35411_846 = 0
35411.                if ( kmax >= 4 ) then
35411.                   $I_L35411_910 = 0
35411. !dir$ blocking_size( 1, 1 )
35411.                   do
35409.                      $I_L35409_734 = 0
35409. !dir$ ivdep
35409. !dir$ blocking_size( 256, 256 )
35409.                      do
35412.                         (temp%base_addr)(1 + $I_L35409_734, 1 + 4 * $I_L35411_910, 0) = te(litx(1 + $I_L35409_734), 1 + 4 * $I_L35411_910)
35413.                         (d_mass%base_addr)(1 + $I_L35409_734, 1 + 4 * $I_L35411_910, 0) = 10.195072517550816 * dp(litx(1 + $I_L35409_734), 1 + 4 * $I_L35411_910)
35414.                         (pres%base_addr)(1 + $I_L35409_734, 1 + 4 * $I_L35411_910, 0) = 100.0 * pmid(litx(1 + $I_L35409_734), 1 + 4 * $I_L35411_910)
35412.                         (temp%base_addr)(1 + $I_L35409_734, 2 + 4 * $I_L35411_910, 0) = te(litx(1 + $I_L35409_734), 2 + 4 * $I_L35411_910)
35413.                         (d_mass%base_addr)(1 + $I_L35409_734, 2 + 4 * $I_L35411_910, 0) = 10.195072517550816 * dp(litx(1 + $I_L35409_734), 2 + 4 * $I_L35411_910)
35414.                         (pres%base_addr)(1 + $I_L35409_734, 2 + 4 * $I_L35411_910, 0) = 100.0 * pmid(litx(1 + $I_L35409_734), 2 + 4 * $I_L35411_910)
35412.                         (temp%base_addr)(1 + $I_L35409_734, 3 + 4 * $I_L35411_910, 0) = te(litx(1 + $I_L35409_734), 3 + 4 * $I_L35411_910)
35413.                         (d_mass%base_addr)(1 + $I_L35409_734, 3 + 4 * $I_L35411_910, 0) = 10.195072517550816 * dp(litx(1 + $I_L35409_734), 3 + 4 * $I_L35411_910)
35414.                         (pres%base_addr)(1 + $I_L35409_734, 3 + 4 * $I_L35411_910, 0) = 100.0 * pmid(litx(1 + $I_L35409_734), 3 + 4 * $I_L35411_910)
35412.                         (temp%base_addr)(1 + $I_L35409_734, 4 + 4 * $I_L35411_910, 0) = te(litx(1 + $I_L35409_734), 4 + 4 * $I_L35411_910)
35413.                         (d_mass%base_addr)(1 + $I_L35409_734, 4 + 4 * $I_L35411_910, 0) = 10.195072517550816 * dp(litx(1 + $I_L35409_734), 4 + 4 * $I_L35411_910)
35414.                         (pres%base_addr)(1 + $I_L35409_734, 4 + 4 * $I_L35411_910, 0) = 100.0 * pmid(litx(1 + $I_L35409_734), 4 + 4 * $I_L35411_910)
35429.                         $I_L35409_734 = 1 + $I_L35409_734
35411.                         if ( $I_L35409_734 >= $Reduc_A53 ) exit
35411.                      enddo
35415.                      $I_L35411_910 = 1 + $I_L35411_910
35415.                      if ( $I_L35411_910 >= _rsh( kmax, 2 ) ) exit
35415.                   enddo
35415.                   $I_L35411_846 = and( 0xfffffffffffffffcUL, kmax )
35415.                endif
35411.                if ( $I_L35411_846 < kmax ) then
35411.                   $I_L35411_907 = 0
35411. !dir$ blocking_size( 1, 1 )
35411.                   do
35409.                      $I_L35409_734 = 0
35409. !dir$ ivdep
35409. !dir$ blocking_size( 256, 256 )
35409.                      do
35412.                         (temp%base_addr)(1 + $I_L35409_734, 1 + $I_L35411_846 + $I_L35411_907, 0) = te(litx(1 + $I_L35409_734), 1 + $I_L35411_846 + $I_L35411_907)
35413.                         (d_mass%base_addr)(1 + $I_L35409_734, 1 + $I_L35411_846 + $I_L35411_907, 0) = 10.195072517550816 * dp(litx(1 + $I_L35409_734), 1 + $I_L35411_846 + $I_L35411_907)
35414.                         (pres%base_addr)(1 + $I_L35409_734, 1 + $I_L35411_846 + $I_L35411_907, 0) = 100.0 * pmid(litx(1 + $I_L35409_734), 1 + $I_L35411_846 + $I_L35411_907)
35429.                         $I_L35409_734 = 1 + $I_L35409_734
35411.                         if ( $I_L35409_734 >= $Reduc_A53 ) exit
35411.                      enddo
35415.                      $I_L35411_907 = 1 + $I_L35411_907
35415.                      if ( $I_L35411_907 >= kmax + -$I_L35411_846 ) exit
35415.                   enddo
35415.                endif
35409.                $I_L35409_736 = 0
35409. !dir$ ivdep
35409. !dir$ loop_info (automatic) cache_nt( tg, te, dp )
35409.                do
35420.                   (temp%base_addr)(1 + $I_L35409_736, 1, 0) = te(litx(1 + $I_L35409_736), 1)
35421.                   (d_mass%base_addr)(1 + $I_L35409_736, 1, 0) = ( 10.195072517550816 * dp(litx(1 + $I_L35409_736), 1) )
35422.                   (pres%base_addr)(1 + $I_L35409_736, 1, 0) = 50.0 * dp(litx(1 + $I_L35409_736), 1)
35425.                   (t_ground%base_addr)(1 + $I_L35409_736, 0) = tg(litx(1 + $I_L35409_736))
35429.                   $I_L35409_736 = 1 + $I_L35409_736
35415.                   if ( $I_L35409_736 >= $Reduc_A53 ) exit
35415.                enddo
35563.                $I_L35563_746 = 0
35563. !dir$ blocking_size( 1, 1 )
35563.                do
35562.                   $I_L35562_596 = 0
35562. !dir$ ivdep
35562. !dir$ blocking_size( 256, 256 )
35562.                   do
35564.                      (clouds%base_addr)(1 + $I_L35562_596, 1 + $I_L35563_746, 1, 0) = cld(litx(1 + $I_L35562_596), 1 + $I_L35563_746) * ( 1.0 + -fice(litx(1 + $I_L35562_596), 1 + $I_L35563_746) )
35566.                      (clouds%base_addr)(1 + $I_L35562_596, 1 + $I_L35563_746, 2, 0) = fice(litx(1 + $I_L35562_596), 1 + $I_L35563_746) * cld(litx(1 + $I_L35562_596), 1 + $I_L35563_746)
35568.                      (clouds%base_addr)(1 + $I_L35562_596, 1 + $I_L35563_746, 3, 0) = clu(litx(1 + $I_L35562_596), 1 + $I_L35563_746) * ( 1.0 + -fice(litx(1 + $I_L35562_596), 1 + $I_L35563_746) )
35570.                      (clouds%base_addr)(1 + $I_L35562_596, 1 + $I_L35563_746, 4, 0) = fice(litx(1 + $I_L35562_596), 1 + $I_L35563_746) * clu(litx(1 + $I_L35562_596), 1 + $I_L35563_746)
35578.                      $I_L35562_596 = 1 + $I_L35562_596
35563.                      if ( $I_L35562_596 >= $Reduc_A53 ) exit
35563.                   enddo
35572.                   $I_L35563_746 = 1 + $I_L35563_746
35572.                   if ( $I_L35563_746 >= kmax ) exit
35572.                enddo
35585.                if ( n_condensed > 0 ) then
35581.                   $I_L35581_850 = 0
35581.                   do
35580.                      $I_L35580_748 = 0
35580.                      do
35584.                         aux = 0.0
35586.                         $SC_w_cloud_I172 = 1.0
35585.                         $I_L35585_598 = 0
35585. !dir$ ivdep
35585.                         do
35587.                            aux = real( aux + (clouds%base_addr)(1 + $I_L35580_748, 1 + $I_L35581_850, 1 + $I_L35585_598, 0) )
35586.                            $SC_w_cloud_I172 = $SC_w_cloud_I172 * ( 1.0 + -(clouds%base_addr)(1 + $I_L35580_748, 1 + $I_L35581_850, 1 + $I_L35585_598, 0) )
35588.                            $I_L35585_598 = 1 + $I_L35585_598
35585.                            if ( $I_L35585_598 >= n_condensed ) exit
35585.                         enddo
35590.                         (w_cloud%base_addr)(1 + $I_L35580_748, 1 + $I_L35581_850, 0) = 1.0 + -$SC_w_cloud_I172
35595.                         if ( aux > 0.0 ) then
35595.                            $I_L35595_666 = 0
35595. !dir$ ivdep
35595.                            do
35595.                               (frac_cloud%base_addr)(1 + $I_L35580_748, 1 + $I_L35581_850, 1 + $I_L35595_666, 0) = ( (clouds%base_addr)(1 + $I_L35580_748, 1 + $I_L35581_850, 1 + $I_L35595_666, 0) * 1.0/aux )
35595.                               $I_L35595_666 = 1 + $I_L35595_666
35595.                               if ( $I_L35595_666 >= 4 ) exit
35595.                            enddo
35595.                         endif
35597.                         $I_L35580_748 = 1 + $I_L35580_748
35595.                         if ( $I_L35580_748 >= $Reduc_A53 ) exit
35595.                      enddo
35596.                      $I_L35581_850 = 1 + $I_L35581_850
35596.                      if ( $I_L35581_850 >= kmax ) exit
35596.                   enddo
35596.                else
35581.                   $I_L35581_758 = 0
35581.                   do
35580.                      $I_L35580_610 = 0
35580. !dir$ ivdep
35580.                      do
35590.                         (w_cloud%base_addr)(1 + $I_L35580_610, 1 + $I_L35581_758, 0) = 0.0
35597.                         $I_L35580_610 = 1 + $I_L35580_610
35595.                         if ( $I_L35580_610 >= $Reduc_A53 ) exit
35595.                      enddo
35596.                      $I_L35581_758 = 1 + $I_L35581_758
35596.                      if ( $I_L35581_758 >= kmax ) exit
35596.                   enddo
35596.                endif
35596.             else
35409.                $I_L35409_608 = 0
35409. !dir$ ivdep
35409. !dir$ loop_info (automatic) cache_nt( tg, te, dp )
35409.                do
35420.                   (temp%base_addr)(1 + $I_L35409_608, 1, 0) = te(litx(1 + $I_L35409_608), 1)
35421.                   (d_mass%base_addr)(1 + $I_L35409_608, 1, 0) = ( 10.195072517550816 * dp(litx(1 + $I_L35409_608), 1) )
35422.                   (pres%base_addr)(1 + $I_L35409_608, 1, 0) = 50.0 * dp(litx(1 + $I_L35409_608), 1)
35425.                   (t_ground%base_addr)(1 + $I_L35409_608, 0) = tg(litx(1 + $I_L35409_608))
35429.                   $I_L35409_608 = 1 + $I_L35409_608
35415.                   if ( $I_L35409_608 >= $Reduc_A53 ) exit
35415.                enddo
35415.             endif
35434.             $I_L35434_588 = 0
35434. !dir$ ivdep
35434. !dir$ loop_info (automatic) cache_nt( cosz )
35434.             do
35435.                (zen_0%base_addr)(1 + $I_L35434_588, 0) = 1.0/cosz(litx(1 + $I_L35434_588))
35436.                (solar_irrad%base_addr)(1 + $I_L35434_588, 0) = s0
35437.                $I_L35434_588 = 1 + $I_L35434_588
35434.                if ( $I_L35434_588 >= $Reduc_A53 ) exit
35434.             enddo
35464.             $SC_swdat_I0 = swdat%dim%nd_species
35462.             if ( kmax > 0 ) then
35462.                $I_L35462_740 = 0
35462.                if ( kmax >= 4 ) then
35462.                   $I_L35462_912 = 0
35462. !dir$ blocking_size( 1, 1 )
35462.                   do
35461.                      $I_L35461_590 = 0
35461. !dir$ ivdep
35461. !dir$ blocking_size( 256, 256 )
35461.                      do
35464.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 1 + 4 * $I_L35462_912, 1, 0) = ( qe(litx(1 + $I_L35461_590), 1 + 4 * $I_L35462_912) * 1.0/( 1.0 + -qe(litx(1 + $I_L35461_590), 1 + 4 * $I_L35462_912) ) )
35466.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 1 + 4 * $I_L35462_912, 2, 0) = 1.5193502412431012e-6 * co2val
35468.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 1 + 4 * $I_L35462_912, 3, 0) = o3(litx(1 + $I_L35461_590), 1 + 4 * $I_L35462_912)
35470.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 1 + 4 * $I_L35462_912, 4, 0) = 2.3139090531019088e-1
35464.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 2 + 4 * $I_L35462_912, 1, 0) = ( qe(litx(1 + $I_L35461_590), 2 + 4 * $I_L35462_912) * 1.0/( 1.0 + -qe(litx(1 + $I_L35461_590), 2 + 4 * $I_L35462_912) ) )
35466.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 2 + 4 * $I_L35462_912, 2, 0) = 1.5193502412431012e-6 * co2val
35468.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 2 + 4 * $I_L35462_912, 3, 0) = o3(litx(1 + $I_L35461_590), 2 + 4 * $I_L35462_912)
35470.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 2 + 4 * $I_L35462_912, 4, 0) = 2.3139090531019088e-1
35464.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 3 + 4 * $I_L35462_912, 1, 0) = ( qe(litx(1 + $I_L35461_590), 3 + 4 * $I_L35462_912) * 1.0/( 1.0 + -qe(litx(1 + $I_L35461_590), 3 + 4 * $I_L35462_912) ) )
35466.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 3 + 4 * $I_L35462_912, 2, 0) = 1.5193502412431012e-6 * co2val
35468.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 3 + 4 * $I_L35462_912, 3, 0) = o3(litx(1 + $I_L35461_590), 3 + 4 * $I_L35462_912)
35470.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 3 + 4 * $I_L35462_912, 4, 0) = 2.3139090531019088e-1
35464.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 4 + 4 * $I_L35462_912, 1, 0) = ( qe(litx(1 + $I_L35461_590), 4 + 4 * $I_L35462_912) * 1.0/( 1.0 + -qe(litx(1 + $I_L35461_590), 4 + 4 * $I_L35462_912) ) )
35466.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 4 + 4 * $I_L35462_912, 2, 0) = 1.5193502412431012e-6 * co2val
35468.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 4 + 4 * $I_L35462_912, 3, 0) = o3(litx(1 + $I_L35461_590), 4 + 4 * $I_L35462_912)
35470.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 4 + 4 * $I_L35462_912, 4, 0) = 2.3139090531019088e-1
35478.                         $I_L35461_590 = 1 + $I_L35461_590
35462.                         if ( $I_L35461_590 >= $Reduc_A53 ) exit
35462.                      enddo
35471.                      $I_L35462_912 = 1 + $I_L35462_912
35476.                      if ( $I_L35462_912 >= _rsh( kmax, 2 ) ) exit
35476.                   enddo
35471.                   $I_L35462_740 = and( 0xfffffffffffffffcUL, kmax )
35471.                endif
35462.                if ( $I_L35462_740 < kmax ) then
35462.                   $I_L35462_904 = 0
35462. !dir$ blocking_size( 1, 1 )
35462.                   do
35461.                      $I_L35461_590 = 0
35461. !dir$ ivdep
35461. !dir$ blocking_size( 256, 256 )
35461.                      do
35464.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 1 + $I_L35462_740 + $I_L35462_904, 1, 0) = ( qe(litx(1 + $I_L35461_590), 1 + $I_L35462_740 + $I_L35462_904) * 1.0/( 1.0 + -qe(litx(1 + $I_L35461_590), 1 + $I_L35462_740 + $I_L35462_904) ) )
35466.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 1 + $I_L35462_740 + $I_L35462_904, 2, 0) = 1.5193502412431012e-6 * co2val
35468.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 1 + $I_L35462_740 + $I_L35462_904, 3, 0) = o3(litx(1 + $I_L35461_590), 1 + $I_L35462_740 + $I_L35462_904)
35470.                         (gas_mix_ratio%base_addr)(1 + $I_L35461_590, 1 + $I_L35462_740 + $I_L35462_904, 4, 0) = 2.3139090531019088e-1
35478.                         $I_L35461_590 = 1 + $I_L35461_590
35462.                         if ( $I_L35461_590 >= $Reduc_A53 ) exit
35462.                      enddo
35471.                      $I_L35462_904 = 1 + $I_L35462_904
35476.                      if ( $I_L35462_904 >= kmax + -$I_L35462_740 ) exit
35476.                   enddo
35476.                endif
35476.             endif
35476.          endif
35440.          $F_A104 = swdat%dim%nd_band
35440.          if ( swdat%dim%nd_band > 0 ) then
35440.             $SC_swdat_I173 = swdat%dim%nd_band
35440.             $I_L35440_668 = 0
35440. !dir$ ivdep
35440.             do
35440.                weight_band(1 + $I_L35440_668) = 1.0
35440.                $I_L35440_668 = 1 + $I_L35440_668
35440.                if ( $I_L35440_668 >= $F_A104 ) exit
35440.             enddo
35440.          endif
35443.          $F_A105 = swdat%dim%nd_band
35443.          if ( swdat%dim%nd_band > 0 ) then
35443.             $SC_swdat_I173 = swdat%dim%nd_band
35443.             $I_L35443_670 = 0
35443. !dir$ ivdep
35443.             do
35443.                i_scatter_method(1 + $I_L35443_670) = 1
35443.                $I_L35443_670 = 1 + $I_L35443_670
35443.                if ( $I_L35443_670 >= $F_A105 ) exit
35443.             enddo
35443.          endif
35450.          $F_A106 = swdat%dim%nd_band
35450.          if ( swdat%dim%nd_band > 0 ) then
35450.             $SC_swdat_I173 = swdat%dim%nd_band
35450.             $I_L35450_672 = 0
35450. !dir$ ivdep
35450.             do
35450.                i_gas_overlap(1 + $I_L35450_672) = 5
35450.                $I_L35450_672 = 1 + $I_L35450_672
35450.                if ( $I_L35450_672 >= $F_A106 ) exit
35450.             enddo
35450.          endif
35446.          $SC_swdat_I173 = swdat%dim%nd_band
35446.          $I_L35446_674 = 0
35446. !dir$ ivdep
35446.          do
35446.             map_band_channel(1 + $I_L35446_674) = 1
35447.             map_band_channel(4 + $I_L35446_674) = 2
35446.             $I_L35446_674 = 1 + $I_L35446_674
35446.             if ( $I_L35446_674 >= 3 ) exit
35446.          enddo
35483.          $F_A107 = swdat%dim%nd_species
35483.          if ( swdat%dim%nd_species > 0 ) then
35483.             $SC_swdat_I174 = swdat%dim%nd_species
35483.             $I_L35483_676 = 0
35483. !dir$ ivdep
35483.             do
35483.                l_doppler(1 + $I_L35483_676) = .false.
35483.                $I_L35483_676 = 1 + $I_L35483_676
35483.                if ( $I_L35483_676 >= $F_A107 ) exit
35483.             enddo
35483.          endif
35484.          $F_A108 = swdat%dim%nd_species
35484.          if ( swdat%dim%nd_species > 0 ) then
35484.             $SC_swdat_I174 = swdat%dim%nd_species
35484.             $I_L35484_678 = 0
35484. !dir$ ivdep
35484.             do
35484.                doppler_correction(1 + $I_L35484_678) = 0.0
35484.                $I_L35484_678 = 1 + $I_L35484_678
35484.                if ( $I_L35484_678 >= $F_A108 ) exit
35484.             enddo
35484.          endif
35492.          $F_A109 = ( max( 0, swdat%dim%nd_band ) )
35492.          $F_A110 = ( max( 0, $Reduc_A53 ) )
35492.          if ( and( -$F_A110, -$F_A109 ) < 0 ) then
35492.             $SC_swdat_I173 = swdat%dim%nd_band
35492.             $I_L35492_886 = 0
35492.             do
35492.                $I_L35492_800 = 0
35492.                do
35492.                   $I_L35492_680 = 0
35492. !dir$ ivdep
35492.                   do
35492.                      (rho_alb%base_addr)(1 + $I_L35492_680, 1 + $I_L35492_800, 1 + $I_L35492_886, 0) = 0.0
35492.                      $I_L35492_680 = 1 + $I_L35492_680
35492.                      if ( $I_L35492_680 >= $F_A110 ) exit
35492.                   enddo
35492.                   $I_L35492_800 = 1 + $I_L35492_800
35492.                   if ( $I_L35492_800 >= 2 ) exit
35492.                enddo
35492.                $I_L35492_886 = 1 + $I_L35492_886
35492.                if ( $I_L35492_886 >= $F_A109 ) exit
35492.             enddo
35492.          endif
35493.          if ( $Reduc_A53 > 0 ) then
35494.             $SC_swdat_I1 = swdat%dim%nd_band
35494.             if ( swdat%dim%nd_band > 0 ) then
35494.                $I_L35494_742 = 0
35494.                do
35493.                   $SCA_map_band_channel_I45 = map_band_channel(1 + $I_L35494_742)
35495.                   if ( $SCA_map_band_channel_I45 == 1 ) then
35493.                      $I_L35493_592 = 0
35493. !dir$ ivdep
35493.                      do
35496.                         (rho_alb%base_addr)(1 + $I_L35493_592, 1, 1 + $I_L35494_742, 0) = albvisdiff(litx(1 + $I_L35493_592))
35497.                         (rho_alb%base_addr)(1 + $I_L35493_592, 2, 1 + $I_L35494_742, 0) = albvisbeam(litx(1 + $I_L35493_592))
35503.                         $I_L35493_592 = 1 + $I_L35493_592
35501.                         if ( $I_L35493_592 >= $Reduc_A53 ) exit
35501.                      enddo
35501.                   else
35493.                      $I_L35493_738 = 0
35493. !dir$ ivdep
35493.                      do
35499.                         (rho_alb%base_addr)(1 + $I_L35493_738, 1, 1 + $I_L35494_742, 0) = albnirdiff(litx(1 + $I_L35493_738))
35500.                         (rho_alb%base_addr)(1 + $I_L35493_738, 2, 1 + $I_L35494_742, 0) = albnirbeam(litx(1 + $I_L35493_738))
35503.                         $I_L35493_738 = 1 + $I_L35493_738
35501.                         if ( $I_L35493_738 >= $Reduc_A53 ) exit
35501.                      enddo
35501.                   endif
35502.                   $I_L35494_742 = 1 + $I_L35494_742
35502.                   if ( $I_L35494_742 >= $SC_swdat_I1 ) exit
35502.                enddo
35502.             endif
35502.          endif
35509.          $F_A111 = ( max( 0, swdat%dim%nd_aerosol_species ) )
35509.          $F_A112 = ( max( 0, kmax ) )
35509.          $F_A113 = ( max( 0, $Reduc_A53 ) )
35509.          if ( and( and( -$F_A112, -$F_A111 ), -$F_A113 ) < 0 ) then
35509.             $SC_swdat_I175 = swdat%dim%nd_aerosol_species
35509.             $I_L35509_888 = 0
35509.             do
35509.                $I_L35509_802 = 0
35509.                do
35509.                   $I_L35509_682 = 0
35509. !dir$ ivdep
35509.                   do
35509.                      (aerosol_mix_ratio%base_addr)(1 + $I_L35509_682, 1 + $I_L35509_802, 1 + $I_L35509_888, 0) = 0.0
35509.                      $I_L35509_682 = 1 + $I_L35509_682
35509.                      if ( $I_L35509_682 >= $F_A113 ) exit
35509.                   enddo
35509.                   $I_L35509_802 = 1 + $I_L35509_802
35509.                   if ( $I_L35509_802 >= $F_A112 ) exit
35509.                enddo
35509.                $I_L35509_888 = 1 + $I_L35509_888
35509.                if ( $I_L35509_888 >= $F_A111 ) exit
35509.             enddo
35509.          endif
35513.          if ( $Reduc_A53 > 0 ) then
35520.             $SC_aerosol_clim_land_I2 = aerosol_clim_land%dim_1%EX
35520.             $SC_aerosol_clim_land_I3 = aerosol_clim_land%dim_1%LB
35520.             $SC_aerosol_clim_land_I5 = aerosol_clim_land%dim_2%SM
35520.             $SC_aerosol_clim_land_I4 = aerosol_clim_land%dim_2%EX
35520.             $SC_aerosol_clim_land_I6 = aerosol_clim_land%dim_2%LB
35515.             $SC_aerosol_clim_ocean_I8 = aerosol_clim_ocean%dim_1%EX
35515.             $SC_aerosol_clim_ocean_I9 = aerosol_clim_ocean%dim_1%LB
35515.             $SC_aerosol_clim_ocean_I11 = aerosol_clim_ocean%dim_2%SM
35515.             $SC_aerosol_clim_ocean_I10 = aerosol_clim_ocean%dim_2%EX
35515.             $SC_aerosol_clim_ocean_I12 = aerosol_clim_ocean%dim_2%LB
35520.             $SC_swdat_I7 = swdat%dim%nd_aerosol_species
35513.             $I_L35513_848 = 0
35513. !dir$ loop_info (automatic) cache_nt( pbot )
35513.             do
35514.                if ( imask(litx(1 + $I_L35513_848)) <= 0 .orelse. imask(litx(1 + $I_L35513_848)) == 13 ) then
35515.                   $F_A116 = nls
35515.                   if ( nls > 0 ) then
35515.                      $SCA_pbot_I36 = pbot(litx(1 + $I_L35513_848), kmax)
35515.                      $I_L35515_808 = 0
35515.                      do
35515.                         $I_L35515_688 = 0
35515. !dir$ ivdep
35515.                         do
35515.                            (aerosol_mix_ratio%base_addr)(1 + $I_L35513_848, 1 + $I_L35515_688, 1 + $I_L35515_808, 0) = 1.0e-2 * ( (aerosol_clim_ocean%base_addr)(1 + $I_L35515_688, 1 + $I_L35515_808, 0) * 1.0/$SCA_pbot_I36 )
35515.                            $I_L35515_688 = 1 + $I_L35515_688
35515.                            if ( $I_L35515_688 >= $F_A116 ) exit
35515.                         enddo
35515.                         $I_L35515_808 = 1 + $I_L35515_808
35515.                         if ( $I_L35515_808 >= 5 ) exit
35515.                      enddo
35515.                   endif
35517.                   $F_A117 = ( kmax + -nls )
35517.                   if ( kmax + -nls > 0 ) then
35517.                      $I_L35517_810 = 0
35517.                      do
35517.                         $I_L35517_690 = 0
35517. !dir$ ivdep
35517.                         do
35517.                            (aerosol_mix_ratio%base_addr)(1 + $I_L35513_848, 1 + nls + $I_L35517_690, 1 + $I_L35517_810, 0) = (aerosol_clim_ocean%base_addr)(1 + nls + $I_L35517_690, 1 + $I_L35517_810, 0)
35517.                            $I_L35517_690 = 1 + $I_L35517_690
35517.                            if ( $I_L35517_690 >= $F_A117 ) exit
35517.                         enddo
35517.                         $I_L35517_810 = 1 + $I_L35517_810
35517.                         if ( $I_L35517_810 >= 5 ) exit
35517.                      enddo
35517.                   endif
35517.                else
35520.                   $F_A114 = nls
35520.                   if ( nls > 0 ) then
35520.                      $SCA_litx_I47 = litx(1 + $I_L35513_848)
35520.                      $SCA_pbot_I48 = pbot($SCA_litx_I47, kmax)
35520.                      $I_L35520_804 = 0
35520.                      do
35520.                         $I_L35520_684 = 0
35520. !dir$ ivdep
35520.                         do
35520.                            (aerosol_mix_ratio%base_addr)(1 + $I_L35513_848, 1 + $I_L35520_684, 1 + $I_L35520_804, 0) = 1.0e-2 * ( (aerosol_clim_land%base_addr)(1 + $I_L35520_684, 1 + $I_L35520_804, 0) * 1.0/$SCA_pbot_I48 )
35520.                            $I_L35520_684 = 1 + $I_L35520_684
35520.                            if ( $I_L35520_684 >= $F_A114 ) exit
35520.                         enddo
35520.                         $I_L35520_804 = 1 + $I_L35520_804
35520.                         if ( $I_L35520_804 >= 5 ) exit
35520.                      enddo
35520.                   endif
35522.                   $F_A115 = ( kmax + -nls )
35522.                   if ( kmax + -nls > 0 ) then
35522.                      $I_L35522_806 = 0
35522.                      do
35522.                         $I_L35522_686 = 0
35522. !dir$ ivdep
35522.                         do
35522.                            (aerosol_mix_ratio%base_addr)(1 + $I_L35513_848, 1 + nls + $I_L35522_686, 1 + $I_L35522_806, 0) = (aerosol_clim_land%base_addr)(1 + nls + $I_L35522_686, 1 + $I_L35522_806, 0)
35522.                            $I_L35522_686 = 1 + $I_L35522_686
35522.                            if ( $I_L35522_686 >= $F_A115 ) exit
35522.                         enddo
35522.                         $I_L35522_806 = 1 + $I_L35522_806
35522.                         if ( $I_L35522_806 >= 5 ) exit
35522.                      enddo
35522.                   endif
35522.                endif
35531.                $I_L35513_848 = 1 + $I_L35513_848
35524.                if ( $I_L35513_848 >= $Reduc_A53 ) exit
35524.             enddo
35524.          endif
35540.          type_condensed(1) = 1
35541.          type_condensed(2) = 2
35542.          type_condensed(3) = 3
35543.          type_condensed(4) = 4
35545.          i_condensed_param(1) = (swdat%drop%i_drop_parm%base_addr)(5, 0)
35546.          i_condensed_param(2) = (swdat%ice%i_ice_parm%base_addr)(8, 0)
35547.          i_condensed_param(3) = (swdat%drop%i_drop_parm%base_addr)(5, 0)
35548.          i_condensed_param(4) = (swdat%ice%i_ice_parm%base_addr)(8, 0)
35550.          if ( swdat%dim%nd_cloud_parameter > 0 ) then
35553.             $SC_swdat_I24 = swdat%ice%parm_list%dim_1%SM
35553.             $SC_swdat_I23 = swdat%ice%parm_list%dim_1%EX
35553.             $SC_swdat_I25 = swdat%ice%parm_list%dim_1%LB
35553.             $SC_swdat_I27 = swdat%ice%parm_list%dim_2%SM
35553.             $SC_swdat_I26 = swdat%ice%parm_list%dim_2%EX
35553.             $SC_swdat_I28 = swdat%ice%parm_list%dim_2%LB
35553.             $SC_swdat_I30 = swdat%ice%parm_list%dim_3%SM
35553.             $SC_swdat_I29 = swdat%ice%parm_list%dim_3%EX
35553.             $SC_swdat_I31 = swdat%ice%parm_list%dim_3%LB
35552.             $SC_swdat_I14 = swdat%drop%parm_list%dim_1%SM
35552.             $SC_swdat_I13 = swdat%drop%parm_list%dim_1%EX
35552.             $SC_swdat_I15 = swdat%drop%parm_list%dim_1%LB
35552.             $SC_swdat_I17 = swdat%drop%parm_list%dim_2%SM
35552.             $SC_swdat_I16 = swdat%drop%parm_list%dim_2%EX
35552.             $SC_swdat_I18 = swdat%drop%parm_list%dim_2%LB
35552.             $SC_swdat_I20 = swdat%drop%parm_list%dim_3%SM
35552.             $SC_swdat_I19 = swdat%drop%parm_list%dim_3%EX
35552.             $SC_swdat_I21 = swdat%drop%parm_list%dim_3%LB
35552.             $SC_swdat_I22 = swdat%dim%nd_cloud_parameter
35551.             $SC_swdat_I1 = swdat%dim%nd_band
35551.             if ( swdat%dim%nd_band > 0 ) then
35551.                $I_L35551_744 = 0
35551.                do
35550.                   $I_L35550_594 = 0
35550. !dir$ ivdep
35550.                   do
35552.                      condensed_param_list(1 + $I_L35550_594, 1, 1 + $I_L35551_744) = (swdat%drop%parm_list%base_addr)(1 + $I_L35550_594, 1 + $I_L35551_744, 5, 0)
35553.                      condensed_param_list(1 + $I_L35550_594, 2, 1 + $I_L35551_744) = (swdat%ice%parm_list%base_addr)(1 + $I_L35550_594, 1 + $I_L35551_744, 8, 0)
35554.                      condensed_param_list(1 + $I_L35550_594, 3, 1 + $I_L35551_744) = (swdat%drop%parm_list%base_addr)(1 + $I_L35550_594, 1 + $I_L35551_744, 5, 0)
35555.                      condensed_param_list(1 + $I_L35550_594, 4, 1 + $I_L35551_744) = (swdat%ice%parm_list%base_addr)(1 + $I_L35550_594, 1 + $I_L35551_744, 8, 0)
35557.                      $I_L35550_594 = 1 + $I_L35550_594
35551.                      if ( $I_L35550_594 >= $SC_swdat_I22 ) exit
35551.                   enddo
35556.                   $I_L35551_744 = 1 + $I_L35551_744
35556.                   if ( $I_L35551_744 >= $SC_swdat_I1 ) exit
35556.                enddo
35556.             endif
35556.          endif
35602.          $F_A118 = ( max( 0, kmax ) )
35602.          $F_A119 = ( max( 0, $Reduc_A53 ) )
35602.          if ( and( -$F_A119, -$F_A118 ) < 0 ) then
35602.             $I_L35602_890 = 0
35602.             do
35602.                $I_L35602_812 = 0
35602.                do
35602.                   $I_L35602_692 = 0
35602. !dir$ ivdep
35602.                   do
35602.                      (condensed_mix_ratio%base_addr)(1 + $I_L35602_692, 1 + $I_L35602_812, 1 + $I_L35602_890, 0) = 0.0
35602.                      $I_L35602_692 = 1 + $I_L35602_692
35602.                      if ( $I_L35602_692 >= $F_A119 ) exit
35602.                   enddo
35602.                   $I_L35602_812 = 1 + $I_L35602_812
35602.                   if ( $I_L35602_812 >= $F_A118 ) exit
35602.                enddo
35602.                $I_L35602_890 = 1 + $I_L35602_890
35602.                if ( $I_L35602_890 >= 4 ) exit
35602.             enddo
35602.          endif
35603.          $F_A120 = ( max( 0, kmax ) )
35603.          $F_A121 = ( max( 0, $Reduc_A53 ) )
35603.          if ( and( -$F_A121, -$F_A120 ) < 0 ) then
35603.             $I_L35603_892 = 0
35603.             do
35603.                $I_L35603_814 = 0
35603.                do
35603.                   $I_L35603_694 = 0
35603. !dir$ ivdep
35603.                   do
35603.                      (condensed_dim_char%base_addr)(1 + $I_L35603_694, 1 + $I_L35603_814, 1 + $I_L35603_892, 0) = 0.0
35603.                      $I_L35603_694 = 1 + $I_L35603_694
35603.                      if ( $I_L35603_694 >= $F_A121 ) exit
35603.                   enddo
35603.                   $I_L35603_814 = 1 + $I_L35603_814
35603.                   if ( $I_L35603_814 >= $F_A120 ) exit
35603.                enddo
35603.                $I_L35603_892 = 1 + $I_L35603_892
35603.                if ( $I_L35603_892 >= 4 ) exit
35603.             enddo
35603.          endif
35604.          if ( $Reduc_A53 > 0 ) then
35605.             if ( kmax > 0 ) then
35605.                $I_L35605_750 = 0
35605. !dir$ blocking_size( 1, 1 )
35605.                do
35604.                   $I_L35604_600 = 0
35604. !dir$ ivdep
35604. !dir$ blocking_size( 256, 256 )
35604.                   do
35606.                      (condensed_mix_ratio%base_addr)(1 + $I_L35604_600, 1 + $I_L35605_750, 1, 0) = lmixr(litx(1 + $I_L35604_600), 1 + $I_L35605_750) * ( 1.0 + -fice(litx(1 + $I_L35604_600), 1 + $I_L35605_750) )
35608.                      (condensed_mix_ratio%base_addr)(1 + $I_L35604_600, 1 + $I_L35605_750, 2, 0) = fice(litx(1 + $I_L35604_600), 1 + $I_L35605_750) * lmixr(litx(1 + $I_L35604_600), 1 + $I_L35605_750)
35610.                      (condensed_mix_ratio%base_addr)(1 + $I_L35604_600, 1 + $I_L35605_750, 3, 0) = lmixr(litx(1 + $I_L35604_600), 1 + $I_L35605_750) * ( 1.0 + -fice(litx(1 + $I_L35604_600), 1 + $I_L35605_750) )
35612.                      (condensed_mix_ratio%base_addr)(1 + $I_L35604_600, 1 + $I_L35605_750, 4, 0) = fice(litx(1 + $I_L35604_600), 1 + $I_L35605_750) * lmixr(litx(1 + $I_L35604_600), 1 + $I_L35605_750)
35615.                      (condensed_dim_char%base_addr)(1 + $I_L35604_600, 1 + $I_L35605_750, 1, 0) = 9.9999999747524271e-7 * rel(litx(1 + $I_L35604_600), 1 + $I_L35605_750)
35616.                      (condensed_dim_char%base_addr)(1 + $I_L35604_600, 1 + $I_L35605_750, 2, 0) = 9.9999999747524271e-7 * rei(litx(1 + $I_L35604_600), 1 + $I_L35605_750)
35617.                      (condensed_dim_char%base_addr)(1 + $I_L35604_600, 1 + $I_L35605_750, 3, 0) = 9.9999999747524271e-7 * rel(litx(1 + $I_L35604_600), 1 + $I_L35605_750)
35618.                      (condensed_dim_char%base_addr)(1 + $I_L35604_600, 1 + $I_L35605_750, 4, 0) = 9.9999999747524271e-7 * rei(litx(1 + $I_L35604_600), 1 + $I_L35605_750)
35640.                      $I_L35604_600 = 1 + $I_L35604_600
35605.                      if ( $I_L35604_600 >= $Reduc_A53 ) exit
35605.                   enddo
35619.                   $I_L35605_750 = 1 + $I_L35605_750
35619.                   if ( $I_L35605_750 >= kmax ) exit
35619.                enddo
35619.             endif
35619.          endif
35676.          t$10300 = 0
35676.          t$10303 = 0
35676.          if ( swdat%solar%solar_flux_band%header%a_contig == 1 ) then
35676. !dir$ suppress (swdat%solar%solar_flux_band%base_addr)(swdat%solar%solar_flux_band%dim_1%LB, 0)
35676.             t$10299 = loc( (swdat%solar%solar_flux_band%base_addr)(swdat%solar%solar_flux_band%dim_1%LB, 0) )
35676.          else
35676.             t$10300 = swdat%solar%solar_flux_band%dim_1%EX
35676.             t$10303 = int( _alloc( max( 0, 8 * max( 0, swdat%solar%solar_flux_band%dim_1%EX ) ) ), 8 )
35676.             $F_A122 = swdat%solar%solar_flux_band%dim_1%EX
35676.             if ( swdat%solar%solar_flux_band%dim_1%EX > 0 ) then
35676.                $SC_swdat_I177 = swdat%solar%solar_flux_band%dim_1%SM
35676.                $SC_swdat_I176 = swdat%solar%solar_flux_band%dim_1%EX
35676.                $SC_swdat_I178 = swdat%solar%solar_flux_band%dim_1%LB
35676.                $I_L35676_696 = 0
35676. !dir$ ivdep
35676.                do
35676.                   t$10302(1 + $I_L35676_696) = (swdat%solar%solar_flux_band%base_addr)($SC_swdat_I178 + $I_L35676_696, 0)
35676.                   $I_L35676_696 = 1 + $I_L35676_696
35676.                   if ( $I_L35676_696 >= $F_A122 ) exit
35676.                enddo
35676.             endif
35676. !dir$ suppress t$10302
35676.             t$10299 = loc( t$10302 )
35676.          endif
35677.          t$10305 = 0
35677.          t$10308 = 0
35677.          if ( swdat%rayleigh%rayleigh_coeff%header%a_contig == 1 ) then
35677. !dir$ suppress (swdat%rayleigh%rayleigh_coeff%base_addr)(swdat%rayleigh%rayleigh_coeff%dim_1%LB, 0)
35677.             t$10304 = loc( (swdat%rayleigh%rayleigh_coeff%base_addr)(swdat%rayleigh%rayleigh_coeff%dim_1%LB, 0) )
35677.          else
35677.             t$10305 = swdat%rayleigh%rayleigh_coeff%dim_1%EX
35677.             t$10308 = int( _alloc( max( 0, 8 * max( 0, swdat%rayleigh%rayleigh_coeff%dim_1%EX ) ) ), 8 )
35677.             $F_A123 = swdat%rayleigh%rayleigh_coeff%dim_1%EX
35677.             if ( swdat%rayleigh%rayleigh_coeff%dim_1%EX > 0 ) then
35677.                $SC_swdat_I180 = swdat%rayleigh%rayleigh_coeff%dim_1%SM
35677.                $SC_swdat_I179 = swdat%rayleigh%rayleigh_coeff%dim_1%EX
35677.                $SC_swdat_I181 = swdat%rayleigh%rayleigh_coeff%dim_1%LB
35677.                $I_L35677_698 = 0
35677. !dir$ ivdep
35677.                do
35677.                   t$10307(1 + $I_L35677_698) = (swdat%rayleigh%rayleigh_coeff%base_addr)($SC_swdat_I181 + $I_L35677_698, 0)
35677.                   $I_L35677_698 = 1 + $I_L35677_698
35677.                   if ( $I_L35677_698 >= $F_A123 ) exit
35677.                enddo
35677.             endif
35677. !dir$ suppress t$10307
35677.             t$10304 = loc( t$10307 )
35677.          endif
35683.          t$10310 = 0
35683.          t$10313 = 0
35683.          if ( swdat%gas%n_band_absorb%header%a_contig == 1 ) then
35683. !dir$ suppress (swdat%gas%n_band_absorb%base_addr)(swdat%gas%n_band_absorb%dim_1%LB, 0)
35683.             t$10309 = loc( (swdat%gas%n_band_absorb%base_addr)(swdat%gas%n_band_absorb%dim_1%LB, 0) )
35683.          else
35683.             t$10310 = swdat%gas%n_band_absorb%dim_1%EX
35683.             t$10313 = int( _alloc( max( 0, 4 * max( 0, swdat%gas%n_band_absorb%dim_1%EX ) ) ), 8 )
35683.             $F_A124 = swdat%gas%n_band_absorb%dim_1%EX
35683.             if ( swdat%gas%n_band_absorb%dim_1%EX > 0 ) then
35683.                $SC_swdat_I183 = swdat%gas%n_band_absorb%dim_1%SM
35683.                $SC_swdat_I182 = swdat%gas%n_band_absorb%dim_1%EX
35683.                $SC_swdat_I184 = swdat%gas%n_band_absorb%dim_1%LB
35683.                $I_L35683_700 = 0
35683. !dir$ ivdep
35683.                do
35683.                   t$10312(1 + $I_L35683_700) = (swdat%gas%n_band_absorb%base_addr)($SC_swdat_I184 + $I_L35683_700, 0)
35683.                   $I_L35683_700 = 1 + $I_L35683_700
35683.                   if ( $I_L35683_700 >= $F_A124 ) exit
35683.                enddo
35683.             endif
35683. !dir$ suppress t$10312
35683.             t$10309 = loc( t$10312 )
35683.          endif
35683.          t$10315 = 0
35683.          t$10316 = 0
35683.          t$10320 = 0
35683.          if ( swdat%gas%index_absorb%header%a_contig == 1 ) then
35683. !dir$ suppress (swdat%gas%index_absorb%base_addr)(swdat%gas%index_absorb%dim_1%LB, swdat%gas%index_absorb%dim_2%LB, 0)
35683.             t$10314 = loc( (swdat%gas%index_absorb%base_addr)(swdat%gas%index_absorb%dim_1%LB, swdat%gas%index_absorb%dim_2%LB, 0) )
35683.          else
35683.             t$10315 = swdat%gas%index_absorb%dim_1%EX
35683.             t$10316 = swdat%gas%index_absorb%dim_2%EX
35683.             t$10320 = int( _alloc( max( 0, 4 * max( 0, swdat%gas%index_absorb%dim_2%EX ) * max( 0, swdat%gas%index_absorb%dim_1%EX ) ) ), 8 )
35683.             $F_A125 = swdat%gas%index_absorb%dim_2%EX
35683.             $F_A126 = swdat%gas%index_absorb%dim_1%EX
35683.             if ( and( -$F_A126, -$F_A125 ) < 0 ) then
35683.                $SC_swdat_I186 = swdat%gas%index_absorb%dim_1%SM
35683.                $SC_swdat_I185 = swdat%gas%index_absorb%dim_1%EX
35683.                $SC_swdat_I187 = swdat%gas%index_absorb%dim_1%LB
35683.                $SC_swdat_I189 = swdat%gas%index_absorb%dim_2%SM
35683.                $SC_swdat_I188 = swdat%gas%index_absorb%dim_2%EX
35683.                $SC_swdat_I190 = swdat%gas%index_absorb%dim_2%LB
35683.                $I_L35683_816 = 0
35683.                do
35683.                   $I_L35683_702 = 0
35683. !dir$ ivdep
35683.                   do
35683.                      t$10319(1 + $I_L35683_702, 1 + $I_L35683_816) = (swdat%gas%index_absorb%base_addr)($SC_swdat_I187 + $I_L35683_702, $SC_swdat_I190 + $I_L35683_816, 0)
35683.                      $I_L35683_702 = 1 + $I_L35683_702
35683.                      if ( $I_L35683_702 >= $F_A126 ) exit
35683.                   enddo
35683.                   $I_L35683_816 = 1 + $I_L35683_816
35683.                   if ( $I_L35683_816 >= $F_A125 ) exit
35683.                enddo
35683.             endif
35683. !dir$ suppress t$10319
35683.             t$10314 = loc( t$10319 )
35683.          endif
35684.          t$10322 = 0
35684.          t$10323 = 0
35684.          t$10327 = 0
35684.          if ( swdat%gas%i_band_k%header%a_contig == 1 ) then
35684. !dir$ suppress (swdat%gas%i_band_k%base_addr)(swdat%gas%i_band_k%dim_1%LB, swdat%gas%i_band_k%dim_2%LB, 0)
35684.             t$10321 = loc( (swdat%gas%i_band_k%base_addr)(swdat%gas%i_band_k%dim_1%LB, swdat%gas%i_band_k%dim_2%LB, 0) )
35684.          else
35684.             t$10322 = swdat%gas%i_band_k%dim_1%EX
35684.             t$10323 = swdat%gas%i_band_k%dim_2%EX
35684.             t$10327 = int( _alloc( max( 0, 4 * max( 0, swdat%gas%i_band_k%dim_2%EX ) * max( 0, swdat%gas%i_band_k%dim_1%EX ) ) ), 8 )
35684.             $F_A127 = swdat%gas%i_band_k%dim_2%EX
35684.             $F_A128 = swdat%gas%i_band_k%dim_1%EX
35684.             if ( and( -$F_A128, -$F_A127 ) < 0 ) then
35684.                $SC_swdat_I192 = swdat%gas%i_band_k%dim_1%SM
35684.                $SC_swdat_I191 = swdat%gas%i_band_k%dim_1%EX
35684.                $SC_swdat_I193 = swdat%gas%i_band_k%dim_1%LB
35684.                $SC_swdat_I195 = swdat%gas%i_band_k%dim_2%SM
35684.                $SC_swdat_I194 = swdat%gas%i_band_k%dim_2%EX
35684.                $SC_swdat_I196 = swdat%gas%i_band_k%dim_2%LB
35684.                $I_L35684_818 = 0
35684.                do
35684.                   $I_L35684_704 = 0
35684. !dir$ ivdep
35684.                   do
35684.                      t$10326(1 + $I_L35684_704, 1 + $I_L35684_818) = (swdat%gas%i_band_k%base_addr)($SC_swdat_I193 + $I_L35684_704, $SC_swdat_I196 + $I_L35684_818, 0)
35684.                      $I_L35684_704 = 1 + $I_L35684_704
35684.                      if ( $I_L35684_704 >= $F_A128 ) exit
35684.                   enddo
35684.                   $I_L35684_818 = 1 + $I_L35684_818
35684.                   if ( $I_L35684_818 >= $F_A127 ) exit
35684.                enddo
35684.             endif
35684. !dir$ suppress t$10326
35684.             t$10321 = loc( t$10326 )
35684.          endif
35684.          t$10329 = 0
35684.          t$10330 = 0
35684.          t$10331 = 0
35684.          t$10336 = 0
35684.          if ( swdat%gas%w%header%a_contig == 1 ) then
35684. !dir$ suppress (swdat%gas%w%base_addr)(swdat%gas%w%dim_1%LB, swdat%gas%w%dim_2%LB, swdat%gas%w%dim_3%LB, 0)
35684.             t$10328 = loc( (swdat%gas%w%base_addr)(swdat%gas%w%dim_1%LB, swdat%gas%w%dim_2%LB, swdat%gas%w%dim_3%LB, 0) )
35684.          else
35684.             t$10329 = swdat%gas%w%dim_1%EX
35684.             t$10330 = swdat%gas%w%dim_2%EX
35684.             t$10331 = swdat%gas%w%dim_3%EX
35684.             t$10336 = int( _alloc( max( 0, 8 * max( 0, swdat%gas%w%dim_3%EX ) * max( 0, swdat%gas%w%dim_2%EX ) * max( 0, swdat%gas%w%dim_1%EX ) ) ), 8 )
35684.             $F_A129 = swdat%gas%w%dim_3%EX
35684.             $F_A130 = swdat%gas%w%dim_2%EX
35684.             $F_A131 = swdat%gas%w%dim_1%EX
35684.             if ( and( and( -$F_A130, -$F_A129 ), -$F_A131 ) < 0 ) then
35684.                $SC_swdat_I198 = swdat%gas%w%dim_1%SM
35684.                $SC_swdat_I197 = swdat%gas%w%dim_1%EX
35684.                $SC_swdat_I199 = swdat%gas%w%dim_1%LB
35684.                $SC_swdat_I201 = swdat%gas%w%dim_2%SM
35684.                $SC_swdat_I200 = swdat%gas%w%dim_2%EX
35684.                $SC_swdat_I202 = swdat%gas%w%dim_2%LB
35684.                $SC_swdat_I204 = swdat%gas%w%dim_3%SM
35684.                $SC_swdat_I203 = swdat%gas%w%dim_3%EX
35684.                $SC_swdat_I205 = swdat%gas%w%dim_3%LB
35684.                $I_L35684_894 = 0
35684.                do
35684.                   $I_L35684_820 = 0
35684.                   do
35684.                      $I_L35684_706 = 0
35684. !dir$ ivdep
35684.                      do
35684.                         t$10335(1 + $I_L35684_706, 1 + $I_L35684_820, 1 + $I_L35684_894) = (swdat%gas%w%base_addr)($SC_swdat_I199 + $I_L35684_706, $SC_swdat_I202 + $I_L35684_820, $SC_swdat_I205 + $I_L35684_894, 0)
35684.                         $I_L35684_706 = 1 + $I_L35684_706
35684.                         if ( $I_L35684_706 >= $F_A131 ) exit
35684.                      enddo
35684.                      $I_L35684_820 = 1 + $I_L35684_820
35684.                      if ( $I_L35684_820 >= $F_A130 ) exit
35684.                   enddo
35684.                   $I_L35684_894 = 1 + $I_L35684_894
35684.                   if ( $I_L35684_894 >= $F_A129 ) exit
35684.                enddo
35684.             endif
35684. !dir$ suppress t$10335
35684.             t$10328 = loc( t$10335 )
35684.          endif
35684.          t$10338 = 0
35684.          t$10339 = 0
35684.          t$10340 = 0
35684.          t$10345 = 0
35684.          if ( swdat%gas%k%header%a_contig == 1 ) then
35684. !dir$ suppress (swdat%gas%k%base_addr)(swdat%gas%k%dim_1%LB, swdat%gas%k%dim_2%LB, swdat%gas%k%dim_3%LB, 0)
35684.             t$10337 = loc( (swdat%gas%k%base_addr)(swdat%gas%k%dim_1%LB, swdat%gas%k%dim_2%LB, swdat%gas%k%dim_3%LB, 0) )
35684.          else
35684.             t$10338 = swdat%gas%k%dim_1%EX
35684.             t$10339 = swdat%gas%k%dim_2%EX
35684.             t$10340 = swdat%gas%k%dim_3%EX
35684.             t$10345 = int( _alloc( max( 0, 8 * max( 0, swdat%gas%k%dim_3%EX ) * max( 0, swdat%gas%k%dim_2%EX ) * max( 0, swdat%gas%k%dim_1%EX ) ) ), 8 )
35684.             $F_A132 = swdat%gas%k%dim_3%EX
35684.             $F_A133 = swdat%gas%k%dim_2%EX
35684.             $F_A134 = swdat%gas%k%dim_1%EX
35684.             if ( and( and( -$F_A133, -$F_A132 ), -$F_A134 ) < 0 ) then
35684.                $SC_swdat_I207 = swdat%gas%k%dim_1%SM
35684.                $SC_swdat_I206 = swdat%gas%k%dim_1%EX
35684.                $SC_swdat_I208 = swdat%gas%k%dim_1%LB
35684.                $SC_swdat_I210 = swdat%gas%k%dim_2%SM
35684.                $SC_swdat_I209 = swdat%gas%k%dim_2%EX
35684.                $SC_swdat_I211 = swdat%gas%k%dim_2%LB
35684.                $SC_swdat_I213 = swdat%gas%k%dim_3%SM
35684.                $SC_swdat_I212 = swdat%gas%k%dim_3%EX
35684.                $SC_swdat_I214 = swdat%gas%k%dim_3%LB
35684.                $I_L35684_896 = 0
35684.                do
35684.                   $I_L35684_822 = 0
35684.                   do
35684.                      $I_L35684_708 = 0
35684. !dir$ ivdep
35684.                      do
35684.                         t$10344(1 + $I_L35684_708, 1 + $I_L35684_822, 1 + $I_L35684_896) = (swdat%gas%k%base_addr)($SC_swdat_I208 + $I_L35684_708, $SC_swdat_I211 + $I_L35684_822, $SC_swdat_I214 + $I_L35684_896, 0)
35684.                         $I_L35684_708 = 1 + $I_L35684_708
35684.                         if ( $I_L35684_708 >= $F_A134 ) exit
35684.                      enddo
35684.                      $I_L35684_822 = 1 + $I_L35684_822
35684.                      if ( $I_L35684_822 >= $F_A133 ) exit
35684.                   enddo
35684.                   $I_L35684_896 = 1 + $I_L35684_896
35684.                   if ( $I_L35684_896 >= $F_A132 ) exit
35684.                enddo
35684.             endif
35684. !dir$ suppress t$10344
35684.             t$10337 = loc( t$10344 )
35684.          endif
35684.          t$10347 = 0
35684.          t$10348 = 0
35684.          t$10352 = 0
35684.          if ( swdat%gas%i_scale_k%header%a_contig == 1 ) then
35684. !dir$ suppress (swdat%gas%i_scale_k%base_addr)(swdat%gas%i_scale_k%dim_1%LB, swdat%gas%i_scale_k%dim_2%LB, 0)
35684.             t$10346 = loc( (swdat%gas%i_scale_k%base_addr)(swdat%gas%i_scale_k%dim_1%LB, swdat%gas%i_scale_k%dim_2%LB, 0) )
35684.          else
35684.             t$10347 = swdat%gas%i_scale_k%dim_1%EX
35684.             t$10348 = swdat%gas%i_scale_k%dim_2%EX
35684.             t$10352 = int( _alloc( max( 0, 4 * max( 0, swdat%gas%i_scale_k%dim_2%EX ) * max( 0, swdat%gas%i_scale_k%dim_1%EX ) ) ), 8 )
35684.             $F_A135 = swdat%gas%i_scale_k%dim_2%EX
35684.             $F_A136 = swdat%gas%i_scale_k%dim_1%EX
35684.             if ( and( -$F_A136, -$F_A135 ) < 0 ) then
35684.                $SC_swdat_I216 = swdat%gas%i_scale_k%dim_1%SM
35684.                $SC_swdat_I215 = swdat%gas%i_scale_k%dim_1%EX
35684.                $SC_swdat_I217 = swdat%gas%i_scale_k%dim_1%LB
35684.                $SC_swdat_I219 = swdat%gas%i_scale_k%dim_2%SM
35684.                $SC_swdat_I218 = swdat%gas%i_scale_k%dim_2%EX
35684.                $SC_swdat_I220 = swdat%gas%i_scale_k%dim_2%LB
35684.                $I_L35684_824 = 0
35684.                do
35684.                   $I_L35684_710 = 0
35684. !dir$ ivdep
35684.                   do
35684.                      t$10351(1 + $I_L35684_710, 1 + $I_L35684_824) = (swdat%gas%i_scale_k%base_addr)($SC_swdat_I217 + $I_L35684_710, $SC_swdat_I220 + $I_L35684_824, 0)
35684.                      $I_L35684_710 = 1 + $I_L35684_710
35684.                      if ( $I_L35684_710 >= $F_A136 ) exit
35684.                   enddo
35684.                   $I_L35684_824 = 1 + $I_L35684_824
35684.                   if ( $I_L35684_824 >= $F_A135 ) exit
35684.                enddo
35684.             endif
35684. !dir$ suppress t$10351
35684.             t$10346 = loc( t$10351 )
35684.          endif
35685.          t$10354 = 0
35685.          t$10355 = 0
35685.          t$10359 = 0
35685.          if ( swdat%gas%i_scale_fnc%header%a_contig == 1 ) then
35685. !dir$ suppress (swdat%gas%i_scale_fnc%base_addr)(swdat%gas%i_scale_fnc%dim_1%LB, swdat%gas%i_scale_fnc%dim_2%LB, 0)
35685.             t$10353 = loc( (swdat%gas%i_scale_fnc%base_addr)(swdat%gas%i_scale_fnc%dim_1%LB, swdat%gas%i_scale_fnc%dim_2%LB, 0) )
35685.          else
35685.             t$10354 = swdat%gas%i_scale_fnc%dim_1%EX
35685.             t$10355 = swdat%gas%i_scale_fnc%dim_2%EX
35685.             t$10359 = int( _alloc( max( 0, 4 * max( 0, swdat%gas%i_scale_fnc%dim_2%EX ) * max( 0, swdat%gas%i_scale_fnc%dim_1%EX ) ) ), 8 )
35685.             $F_A137 = swdat%gas%i_scale_fnc%dim_2%EX
35685.             $F_A138 = swdat%gas%i_scale_fnc%dim_1%EX
35685.             if ( and( -$F_A138, -$F_A137 ) < 0 ) then
35685.                $SC_swdat_I222 = swdat%gas%i_scale_fnc%dim_1%SM
35685.                $SC_swdat_I221 = swdat%gas%i_scale_fnc%dim_1%EX
35685.                $SC_swdat_I223 = swdat%gas%i_scale_fnc%dim_1%LB
35685.                $SC_swdat_I225 = swdat%gas%i_scale_fnc%dim_2%SM
35685.                $SC_swdat_I224 = swdat%gas%i_scale_fnc%dim_2%EX
35685.                $SC_swdat_I226 = swdat%gas%i_scale_fnc%dim_2%LB
35685.                $I_L35685_826 = 0
35685.                do
35685.                   $I_L35685_712 = 0
35685. !dir$ ivdep
35685.                   do
35685.                      t$10358(1 + $I_L35685_712, 1 + $I_L35685_826) = (swdat%gas%i_scale_fnc%base_addr)($SC_swdat_I223 + $I_L35685_712, $SC_swdat_I226 + $I_L35685_826, 0)
35685.                      $I_L35685_712 = 1 + $I_L35685_712
35685.                      if ( $I_L35685_712 >= $F_A138 ) exit
35685.                   enddo
35685.                   $I_L35685_826 = 1 + $I_L35685_826
35685.                   if ( $I_L35685_826 >= $F_A137 ) exit
35685.                enddo
35685.             endif
35685. !dir$ suppress t$10358
35685.             t$10353 = loc( t$10358 )
35685.          endif
35685.          t$10361 = 0
35685.          t$10362 = 0
35685.          t$10363 = 0
35685.          t$10364 = 0
35685.          t$10370 = 0
35685.          if ( swdat%gas%scale%header%a_contig == 1 ) then
35685. !dir$ suppress (swdat%gas%scale%base_addr)(swdat%gas%scale%dim_1%LB, swdat%gas%scale%dim_2%LB, swdat%gas%scale%dim_3%LB, swdat%gas%scale%dim_4%LB, 0)
35685.             t$10360 = loc( (swdat%gas%scale%base_addr)(swdat%gas%scale%dim_1%LB, swdat%gas%scale%dim_2%LB, swdat%gas%scale%dim_3%LB, swdat%gas%scale%dim_4%LB, 0) )
35685.          else
35685.             t$10361 = swdat%gas%scale%dim_1%EX
35685.             t$10362 = swdat%gas%scale%dim_2%EX
35685.             t$10363 = swdat%gas%scale%dim_3%EX
35685.             t$10364 = swdat%gas%scale%dim_4%EX
35685.             t$10370 = int( _alloc( max( 0, 8 * max( 0, swdat%gas%scale%dim_4%EX ) * max( 0, swdat%gas%scale%dim_3%EX ) * max( 0, swdat%gas%scale%dim_2%EX ) * max( 0, swdat%gas%scale%dim_1%EX ) ) ), 8 )
35685.             $F_A139 = swdat%gas%scale%dim_4%EX
35685.             $F_A140 = swdat%gas%scale%dim_3%EX
35685.             $F_A141 = swdat%gas%scale%dim_2%EX
35685.             $F_A142 = swdat%gas%scale%dim_1%EX
35685.             if ( and( and( and( -$F_A140, -$F_A139 ), -$F_A141 ), -$F_A142 ) < 0 ) then
35685.                $SC_swdat_I228 = swdat%gas%scale%dim_1%SM
35685.                $SC_swdat_I227 = swdat%gas%scale%dim_1%EX
35685.                $SC_swdat_I229 = swdat%gas%scale%dim_1%LB
35685.                $SC_swdat_I231 = swdat%gas%scale%dim_2%SM
35685.                $SC_swdat_I230 = swdat%gas%scale%dim_2%EX
35685.                $SC_swdat_I232 = swdat%gas%scale%dim_2%LB
35685.                $SC_swdat_I234 = swdat%gas%scale%dim_3%SM
35685.                $SC_swdat_I233 = swdat%gas%scale%dim_3%EX
35685.                $SC_swdat_I235 = swdat%gas%scale%dim_3%LB
35685.                $SC_swdat_I237 = swdat%gas%scale%dim_4%SM
35685.                $SC_swdat_I236 = swdat%gas%scale%dim_4%EX
35685.                $SC_swdat_I238 = swdat%gas%scale%dim_4%LB
35685.                $I_L35685_902 = 0
35685.                do
35685.                   $I_L35685_898 = 0
35685.                   do
35685.                      $I_L35685_828 = 0
35685.                      do
35685.                         $I_L35685_714 = 0
35685. !dir$ ivdep
35685.                         do
35685.                            t$10369(1 + $I_L35685_714, 1 + $I_L35685_828, 1 + $I_L35685_898, 1 + $I_L35685_902) = (swdat%gas%scale%base_addr)($SC_swdat_I229 + $I_L35685_714, $SC_swdat_I232 + $I_L35685_828, $SC_swdat_I235 + $I_L35685_898, $SC_swdat_I238 + $I_L35685_902, 0)
35685.                            $I_L35685_714 = 1 + $I_L35685_714
35685.                            if ( $I_L35685_714 >= $F_A142 ) exit
35685.                         enddo
35685.                         $I_L35685_828 = 1 + $I_L35685_828
35685.                         if ( $I_L35685_828 >= $F_A141 ) exit
35685.                      enddo
35685.                      $I_L35685_898 = 1 + $I_L35685_898
35685.                      if ( $I_L35685_898 >= $F_A140 ) exit
35685.                   enddo
35685.                   $I_L35685_902 = 1 + $I_L35685_902
35685.                   if ( $I_L35685_902 >= $F_A139 ) exit
35685.                enddo
35685.             endif
35685. !dir$ suppress t$10369
35685.             t$10360 = loc( t$10369 )
35685.          endif
35686.          t$10372 = 0
35686.          t$10373 = 0
35686.          t$10377 = 0
35686.          if ( swdat%gas%p_ref%header%a_contig == 1 ) then
35686. !dir$ suppress (swdat%gas%p_ref%base_addr)(swdat%gas%p_ref%dim_1%LB, swdat%gas%p_ref%dim_2%LB, 0)
35686.             t$10371 = loc( (swdat%gas%p_ref%base_addr)(swdat%gas%p_ref%dim_1%LB, swdat%gas%p_ref%dim_2%LB, 0) )
35686.          else
35686.             t$10372 = swdat%gas%p_ref%dim_1%EX
35686.             t$10373 = swdat%gas%p_ref%dim_2%EX
35686.             t$10377 = int( _alloc( max( 0, 8 * max( 0, swdat%gas%p_ref%dim_2%EX ) * max( 0, swdat%gas%p_ref%dim_1%EX ) ) ), 8 )
35686.             $F_A143 = swdat%gas%p_ref%dim_2%EX
35686.             $F_A144 = swdat%gas%p_ref%dim_1%EX
35686.             if ( and( -$F_A144, -$F_A143 ) < 0 ) then
35686.                $SC_swdat_I240 = swdat%gas%p_ref%dim_1%SM
35686.                $SC_swdat_I239 = swdat%gas%p_ref%dim_1%EX
35686.                $SC_swdat_I241 = swdat%gas%p_ref%dim_1%LB
35686.                $SC_swdat_I243 = swdat%gas%p_ref%dim_2%SM
35686.                $SC_swdat_I242 = swdat%gas%p_ref%dim_2%EX
35686.                $SC_swdat_I244 = swdat%gas%p_ref%dim_2%LB
35686.                $I_L35686_830 = 0
35686.                do
35686.                   $I_L35686_716 = 0
35686. !dir$ ivdep
35686.                   do
35686.                      t$10376(1 + $I_L35686_716, 1 + $I_L35686_830) = (swdat%gas%p_ref%base_addr)($SC_swdat_I241 + $I_L35686_716, $SC_swdat_I244 + $I_L35686_830, 0)
35686.                      $I_L35686_716 = 1 + $I_L35686_716
35686.                      if ( $I_L35686_716 >= $F_A144 ) exit
35686.                   enddo
35686.                   $I_L35686_830 = 1 + $I_L35686_830
35686.                   if ( $I_L35686_830 >= $F_A143 ) exit
35686.                enddo
35686.             endif
35686. !dir$ suppress t$10376
35686.             t$10371 = loc( t$10376 )
35686.          endif
35686.          t$10379 = 0
35686.          t$10380 = 0
35686.          t$10384 = 0
35686.          if ( swdat%gas%t_ref%header%a_contig == 1 ) then
35686. !dir$ suppress (swdat%gas%t_ref%base_addr)(swdat%gas%t_ref%dim_1%LB, swdat%gas%t_ref%dim_2%LB, 0)
35686.             t$10378 = loc( (swdat%gas%t_ref%base_addr)(swdat%gas%t_ref%dim_1%LB, swdat%gas%t_ref%dim_2%LB, 0) )
35686.          else
35686.             t$10379 = swdat%gas%t_ref%dim_1%EX
35686.             t$10380 = swdat%gas%t_ref%dim_2%EX
35686.             t$10384 = int( _alloc( max( 0, 8 * max( 0, swdat%gas%t_ref%dim_2%EX ) * max( 0, swdat%gas%t_ref%dim_1%EX ) ) ), 8 )
35686.             $F_A145 = swdat%gas%t_ref%dim_2%EX
35686.             $F_A146 = swdat%gas%t_ref%dim_1%EX
35686.             if ( and( -$F_A146, -$F_A145 ) < 0 ) then
35686.                $SC_swdat_I246 = swdat%gas%t_ref%dim_1%SM
35686.                $SC_swdat_I245 = swdat%gas%t_ref%dim_1%EX
35686.                $SC_swdat_I247 = swdat%gas%t_ref%dim_1%LB
35686.                $SC_swdat_I249 = swdat%gas%t_ref%dim_2%SM
35686.                $SC_swdat_I248 = swdat%gas%t_ref%dim_2%EX
35686.                $SC_swdat_I250 = swdat%gas%t_ref%dim_2%LB
35686.                $I_L35686_832 = 0
35686.                do
35686.                   $I_L35686_718 = 0
35686. !dir$ ivdep
35686.                   do
35686.                      t$10383(1 + $I_L35686_718, 1 + $I_L35686_832) = (swdat%gas%t_ref%base_addr)($SC_swdat_I247 + $I_L35686_718, $SC_swdat_I250 + $I_L35686_832, 0)
35686.                      $I_L35686_718 = 1 + $I_L35686_718
35686.                      if ( $I_L35686_718 >= $F_A146 ) exit
35686.                   enddo
35686.                   $I_L35686_832 = 1 + $I_L35686_832
35686.                   if ( $I_L35686_832 >= $F_A145 ) exit
35686.                enddo
35686.             endif
35686. !dir$ suppress t$10383
35686.             t$10378 = loc( t$10383 )
35686.          endif
35695.          t$10386 = 0
35695.          t$10389 = 0
35695.          if ( swdat%cont%n_band_continuum%header%a_contig == 1 ) then
35695. !dir$ suppress (swdat%cont%n_band_continuum%base_addr)(swdat%cont%n_band_continuum%dim_1%LB, 0)
35695.             t$10385 = loc( (swdat%cont%n_band_continuum%base_addr)(swdat%cont%n_band_continuum%dim_1%LB, 0) )
35695.          else
35695.             t$10386 = swdat%cont%n_band_continuum%dim_1%EX
35695.             t$10389 = int( _alloc( max( 0, 4 * max( 0, swdat%cont%n_band_continuum%dim_1%EX ) ) ), 8 )
35695.             $F_A147 = swdat%cont%n_band_continuum%dim_1%EX
35695.             if ( swdat%cont%n_band_continuum%dim_1%EX > 0 ) then
35695.                $SC_swdat_I252 = swdat%cont%n_band_continuum%dim_1%SM
35695.                $SC_swdat_I251 = swdat%cont%n_band_continuum%dim_1%EX
35695.                $SC_swdat_I253 = swdat%cont%n_band_continuum%dim_1%LB
35695.                $I_L35695_720 = 0
35695. !dir$ ivdep
35695.                do
35695.                   t$10388(1 + $I_L35695_720) = (swdat%cont%n_band_continuum%base_addr)($SC_swdat_I253 + $I_L35695_720, 0)
35695.                   $I_L35695_720 = 1 + $I_L35695_720
35695.                   if ( $I_L35695_720 >= $F_A147 ) exit
35695.                enddo
35695.             endif
35695. !dir$ suppress t$10388
35695.             t$10385 = loc( t$10388 )
35695.          endif
35695.          t$10391 = 0
35695.          t$10392 = 0
35695.          t$10396 = 0
35695.          if ( swdat%cont%index_continuum%header%a_contig == 1 ) then
35695. !dir$ suppress (swdat%cont%index_continuum%base_addr)(swdat%cont%index_continuum%dim_1%LB, swdat%cont%index_continuum%dim_2%LB, 0)
35695.             t$10390 = loc( (swdat%cont%index_continuum%base_addr)(swdat%cont%index_continuum%dim_1%LB, swdat%cont%index_continuum%dim_2%LB, 0) )
35695.          else
35695.             t$10391 = swdat%cont%index_continuum%dim_1%EX
35695.             t$10392 = swdat%cont%index_continuum%dim_2%EX
35695.             t$10396 = int( _alloc( max( 0, 4 * max( 0, swdat%cont%index_continuum%dim_2%EX ) * max( 0, swdat%cont%index_continuum%dim_1%EX ) ) ), 8 )
35695.             $F_A148 = swdat%cont%index_continuum%dim_2%EX
35695.             $F_A149 = swdat%cont%index_continuum%dim_1%EX
35695.             if ( and( -$F_A149, -$F_A148 ) < 0 ) then
35695.                $SC_swdat_I255 = swdat%cont%index_continuum%dim_1%SM
35695.                $SC_swdat_I254 = swdat%cont%index_continuum%dim_1%EX
35695.                $SC_swdat_I256 = swdat%cont%index_continuum%dim_1%LB
35695.                $SC_swdat_I258 = swdat%cont%index_continuum%dim_2%SM
35695.                $SC_swdat_I257 = swdat%cont%index_continuum%dim_2%EX
35695.                $SC_swdat_I259 = swdat%cont%index_continuum%dim_2%LB
35695.                $I_L35695_834 = 0
35695.                do
35695.                   $I_L35695_722 = 0
35695. !dir$ ivdep
35695.                   do
35695.                      t$10395(1 + $I_L35695_722, 1 + $I_L35695_834) = (swdat%cont%index_continuum%base_addr)($SC_swdat_I256 + $I_L35695_722, $SC_swdat_I259 + $I_L35695_834, 0)
35695.                      $I_L35695_722 = 1 + $I_L35695_722
35695.                      if ( $I_L35695_722 >= $F_A149 ) exit
35695.                   enddo
35695.                   $I_L35695_834 = 1 + $I_L35695_834
35695.                   if ( $I_L35695_834 >= $F_A148 ) exit
35695.                enddo
35695.             endif
35695. !dir$ suppress t$10395
35695.             t$10390 = loc( t$10395 )
35695.          endif
35696.          t$10398 = 0
35696.          t$10399 = 0
35696.          t$10403 = 0
35696.          if ( swdat%cont%k_cont%header%a_contig == 1 ) then
35696. !dir$ suppress (swdat%cont%k_cont%base_addr)(swdat%cont%k_cont%dim_1%LB, swdat%cont%k_cont%dim_2%LB, 0)
35696.             t$10397 = loc( (swdat%cont%k_cont%base_addr)(swdat%cont%k_cont%dim_1%LB, swdat%cont%k_cont%dim_2%LB, 0) )
35696.          else
35696.             t$10398 = swdat%cont%k_cont%dim_1%EX
35696.             t$10399 = swdat%cont%k_cont%dim_2%EX
35696.             t$10403 = int( _alloc( max( 0, 8 * max( 0, swdat%cont%k_cont%dim_2%EX ) * max( 0, swdat%cont%k_cont%dim_1%EX ) ) ), 8 )
35696.             $F_A150 = swdat%cont%k_cont%dim_2%EX
35696.             $F_A151 = swdat%cont%k_cont%dim_1%EX
35696.             if ( and( -$F_A151, -$F_A150 ) < 0 ) then
35696.                $SC_swdat_I261 = swdat%cont%k_cont%dim_1%SM
35696.                $SC_swdat_I260 = swdat%cont%k_cont%dim_1%EX
35696.                $SC_swdat_I262 = swdat%cont%k_cont%dim_1%LB
35696.                $SC_swdat_I264 = swdat%cont%k_cont%dim_2%SM
35696.                $SC_swdat_I263 = swdat%cont%k_cont%dim_2%EX
35696.                $SC_swdat_I265 = swdat%cont%k_cont%dim_2%LB
35696.                $I_L35696_836 = 0
35696.                do
35696.                   $I_L35696_724 = 0
35696. !dir$ ivdep
35696.                   do
35696.                      t$10402(1 + $I_L35696_724, 1 + $I_L35696_836) = (swdat%cont%k_cont%base_addr)($SC_swdat_I262 + $I_L35696_724, $SC_swdat_I265 + $I_L35696_836, 0)
35696.                      $I_L35696_724 = 1 + $I_L35696_724
35696.                      if ( $I_L35696_724 >= $F_A151 ) exit
35696.                   enddo
35696.                   $I_L35696_836 = 1 + $I_L35696_836
35696.                   if ( $I_L35696_836 >= $F_A150 ) exit
35696.                enddo
35696.             endif
35696. !dir$ suppress t$10402
35696.             t$10397 = loc( t$10402 )
35696.          endif
35696.          t$10405 = 0
35696.          t$10406 = 0
35696.          t$10410 = 0
35696.          if ( swdat%cont%i_scale_fnc_cont%header%a_contig == 1 ) then
35696. !dir$ suppress (swdat%cont%i_scale_fnc_cont%base_addr)(swdat%cont%i_scale_fnc_cont%dim_1%LB, swdat%cont%i_scale_fnc_cont%dim_2%LB, 0)
35696.             t$10404 = loc( (swdat%cont%i_scale_fnc_cont%base_addr)(swdat%cont%i_scale_fnc_cont%dim_1%LB, swdat%cont%i_scale_fnc_cont%dim_2%LB, 0) )
35696.          else
35696.             t$10405 = swdat%cont%i_scale_fnc_cont%dim_1%EX
35696.             t$10406 = swdat%cont%i_scale_fnc_cont%dim_2%EX
35696.             t$10410 = int( _alloc( max( 0, 4 * max( 0, swdat%cont%i_scale_fnc_cont%dim_2%EX ) * max( 0, swdat%cont%i_scale_fnc_cont%dim_1%EX ) ) ), 8 )
35696.             $F_A152 = swdat%cont%i_scale_fnc_cont%dim_2%EX
35696.             $F_A153 = swdat%cont%i_scale_fnc_cont%dim_1%EX
35696.             if ( and( -$F_A153, -$F_A152 ) < 0 ) then
35696.                $SC_swdat_I267 = swdat%cont%i_scale_fnc_cont%dim_1%SM
35696.                $SC_swdat_I266 = swdat%cont%i_scale_fnc_cont%dim_1%EX
35696.                $SC_swdat_I268 = swdat%cont%i_scale_fnc_cont%dim_1%LB
35696.                $SC_swdat_I270 = swdat%cont%i_scale_fnc_cont%dim_2%SM
35696.                $SC_swdat_I269 = swdat%cont%i_scale_fnc_cont%dim_2%EX
35696.                $SC_swdat_I271 = swdat%cont%i_scale_fnc_cont%dim_2%LB
35696.                $I_L35696_838 = 0
35696.                do
35696.                   $I_L35696_726 = 0
35696. !dir$ ivdep
35696.                   do
35696.                      t$10409(1 + $I_L35696_726, 1 + $I_L35696_838) = (swdat%cont%i_scale_fnc_cont%base_addr)($SC_swdat_I268 + $I_L35696_726, $SC_swdat_I271 + $I_L35696_838, 0)
35696.                      $I_L35696_726 = 1 + $I_L35696_726
35696.                      if ( $I_L35696_726 >= $F_A153 ) exit
35696.                   enddo
35696.                   $I_L35696_838 = 1 + $I_L35696_838
35696.                   if ( $I_L35696_838 >= $F_A152 ) exit
35696.                enddo
35696.             endif
35696. !dir$ suppress t$10409
35696.             t$10404 = loc( t$10409 )
35696.          endif
35696.          t$10412 = 0
35696.          t$10413 = 0
35696.          t$10414 = 0
35696.          t$10419 = 0
35696.          if ( swdat%cont%scale_cont%header%a_contig == 1 ) then
35696. !dir$ suppress (swdat%cont%scale_cont%base_addr)(swdat%cont%scale_cont%dim_1%LB, swdat%cont%scale_cont%dim_2%LB, swdat%cont%scale_cont%dim_3%LB, 0)
35696.             t$10411 = loc( (swdat%cont%scale_cont%base_addr)(swdat%cont%scale_cont%dim_1%LB, swdat%cont%scale_cont%dim_2%LB, swdat%cont%scale_cont%dim_3%LB, 0) )
35696.          else
35696.             t$10412 = swdat%cont%scale_cont%dim_1%EX
35696.             t$10413 = swdat%cont%scale_cont%dim_2%EX
35696.             t$10414 = swdat%cont%scale_cont%dim_3%EX
35696.             t$10419 = int( _alloc( max( 0, 8 * max( 0, swdat%cont%scale_cont%dim_3%EX ) * max( 0, swdat%cont%scale_cont%dim_2%EX ) * max( 0, swdat%cont%scale_cont%dim_1%EX ) ) ), 8 )
35696.             $F_A154 = swdat%cont%scale_cont%dim_3%EX
35696.             $F_A155 = swdat%cont%scale_cont%dim_2%EX
35696.             $F_A156 = swdat%cont%scale_cont%dim_1%EX
35696.             if ( and( and( -$F_A155, -$F_A154 ), -$F_A156 ) < 0 ) then
35696.                $SC_swdat_I273 = swdat%cont%scale_cont%dim_1%SM
35696.                $SC_swdat_I272 = swdat%cont%scale_cont%dim_1%EX
35696.                $SC_swdat_I274 = swdat%cont%scale_cont%dim_1%LB
35696.                $SC_swdat_I276 = swdat%cont%scale_cont%dim_2%SM
35696.                $SC_swdat_I275 = swdat%cont%scale_cont%dim_2%EX
35696.                $SC_swdat_I277 = swdat%cont%scale_cont%dim_2%LB
35696.                $SC_swdat_I279 = swdat%cont%scale_cont%dim_3%SM
35696.                $SC_swdat_I278 = swdat%cont%scale_cont%dim_3%EX
35696.                $SC_swdat_I280 = swdat%cont%scale_cont%dim_3%LB
35696.                $I_L35696_900 = 0
35696.                do
35696.                   $I_L35696_840 = 0
35696.                   do
35696.                      $I_L35696_728 = 0
35696. !dir$ ivdep
35696.                      do
35696.                         t$10418(1 + $I_L35696_728, 1 + $I_L35696_840, 1 + $I_L35696_900) = (swdat%cont%scale_cont%base_addr)($SC_swdat_I274 + $I_L35696_728, $SC_swdat_I277 + $I_L35696_840, $SC_swdat_I280 + $I_L35696_900, 0)
35696.                         $I_L35696_728 = 1 + $I_L35696_728
35696.                         if ( $I_L35696_728 >= $F_A156 ) exit
35696.                      enddo
35696.                      $I_L35696_840 = 1 + $I_L35696_840
35696.                      if ( $I_L35696_840 >= $F_A155 ) exit
35696.                   enddo
35696.                   $I_L35696_900 = 1 + $I_L35696_900
35696.                   if ( $I_L35696_900 >= $F_A154 ) exit
35696.                enddo
35696.             endif
35696. !dir$ suppress t$10418
35696.             t$10411 = loc( t$10418 )
35696.          endif
35697.          t$10421 = 0
35697.          t$10422 = 0
35697.          t$10426 = 0
35697.          if ( swdat%cont%p_ref_cont%header%a_contig == 1 ) then
35697. !dir$ suppress (swdat%cont%p_ref_cont%base_addr)(swdat%cont%p_ref_cont%dim_1%LB, swdat%cont%p_ref_cont%dim_2%LB, 0)
35697.             t$10420 = loc( (swdat%cont%p_ref_cont%base_addr)(swdat%cont%p_ref_cont%dim_1%LB, swdat%cont%p_ref_cont%dim_2%LB, 0) )
35697.          else
35697.             t$10421 = swdat%cont%p_ref_cont%dim_1%EX
35697.             t$10422 = swdat%cont%p_ref_cont%dim_2%EX
35697.             t$10426 = int( _alloc( max( 0, 8 * max( 0, swdat%cont%p_ref_cont%dim_2%EX ) * max( 0, swdat%cont%p_ref_cont%dim_1%EX ) ) ), 8 )
35697.             $F_A157 = swdat%cont%p_ref_cont%dim_2%EX
35697.             $F_A158 = swdat%cont%p_ref_cont%dim_1%EX
35697.             if ( and( -$F_A158, -$F_A157 ) < 0 ) then
35697.                $SC_swdat_I282 = swdat%cont%p_ref_cont%dim_1%SM
35697.                $SC_swdat_I281 = swdat%cont%p_ref_cont%dim_1%EX
35697.                $SC_swdat_I283 = swdat%cont%p_ref_cont%dim_1%LB
35697.                $SC_swdat_I285 = swdat%cont%p_ref_cont%dim_2%SM
35697.                $SC_swdat_I284 = swdat%cont%p_ref_cont%dim_2%EX
35697.                $SC_swdat_I286 = swdat%cont%p_ref_cont%dim_2%LB
35697.                $I_L35697_842 = 0
35697.                do
35697.                   $I_L35697_730 = 0
35697. !dir$ ivdep
35697.                   do
35697.                      t$10425(1 + $I_L35697_730, 1 + $I_L35697_842) = (swdat%cont%p_ref_cont%base_addr)($SC_swdat_I283 + $I_L35697_730, $SC_swdat_I286 + $I_L35697_842, 0)
35697.                      $I_L35697_730 = 1 + $I_L35697_730
35697.                      if ( $I_L35697_730 >= $F_A158 ) exit
35697.                   enddo
35697.                   $I_L35697_842 = 1 + $I_L35697_842
35697.                   if ( $I_L35697_842 >= $F_A157 ) exit
35697.                enddo
35697.             endif
35697. !dir$ suppress t$10425
35697.             t$10420 = loc( t$10425 )
35697.          endif
35697.          t$10428 = 0
35697.          t$10429 = 0
35697.          t$10433 = 0
35697.          if ( swdat%cont%t_ref_cont%header%a_contig == 1 ) then
35697. !dir$ suppress (swdat%cont%t_ref_cont%base_addr)(swdat%cont%t_ref_cont%dim_1%LB, swdat%cont%t_ref_cont%dim_2%LB, 0)
35697.             t$10427 = loc( (swdat%cont%t_ref_cont%base_addr)(swdat%cont%t_ref_cont%dim_1%LB, swdat%cont%t_ref_cont%dim_2%LB, 0) )
35697.          else
35697.             t$10428 = swdat%cont%t_ref_cont%dim_1%EX
35697.             t$10429 = swdat%cont%t_ref_cont%dim_2%EX
35697.             t$10433 = int( _alloc( max( 0, 8 * max( 0, swdat%cont%t_ref_cont%dim_2%EX ) * max( 0, swdat%cont%t_ref_cont%dim_1%EX ) ) ), 8 )
35697.             $F_A159 = swdat%cont%t_ref_cont%dim_2%EX
35697.             $F_A160 = swdat%cont%t_ref_cont%dim_1%EX
35697.             if ( and( -$F_A160, -$F_A159 ) < 0 ) then
35697.                $SC_swdat_I288 = swdat%cont%t_ref_cont%dim_1%SM
35697.                $SC_swdat_I287 = swdat%cont%t_ref_cont%dim_1%EX
35697.                $SC_swdat_I289 = swdat%cont%t_ref_cont%dim_1%LB
35697.                $SC_swdat_I291 = swdat%cont%t_ref_cont%dim_2%SM
35697.                $SC_swdat_I290 = swdat%cont%t_ref_cont%dim_2%EX
35697.                $SC_swdat_I292 = swdat%cont%t_ref_cont%dim_2%LB
35697.                $I_L35697_844 = 0
35697.                do
35697.                   $I_L35697_732 = 0
35697. !dir$ ivdep
35697.                   do
35697.                      t$10432(1 + $I_L35697_732, 1 + $I_L35697_844) = (swdat%cont%t_ref_cont%base_addr)($SC_swdat_I289 + $I_L35697_732, $SC_swdat_I292 + $I_L35697_844, 0)
35697.                      $I_L35697_732 = 1 + $I_L35697_732
35697.                      if ( $I_L35697_732 >= $F_A160 ) exit
35697.                   enddo
35697.                   $I_L35697_844 = 1 + $I_L35697_844
35697.                   if ( $I_L35697_844 >= $F_A159 ) exit
35697.                enddo
35697.             endif
35697. !dir$ suppress t$10432
35697.             t$10427 = loc( t$10432 )
35697.          endif
35700.          t$10435 = 0
35700.          t$10436 = 0
35700.          t$10437 = 0
35700.          t$10442 = 0
35700.          if ( swdat%aerosol%abs%header%a_contig == 1 ) then
35700. !dir$ suppress (swdat%aerosol%abs%base_addr)(swdat%aerosol%abs%dim_1%LB, swdat%aerosol%abs%dim_2%LB, swdat%aerosol%abs%dim_3%LB, 0)
35700.             t$10434 = loc( (swdat%aerosol%abs%base_addr)(swdat%aerosol%abs%dim_1%LB, swdat%aerosol%abs%dim_2%LB, swdat%aerosol%abs%dim_3%LB, 0) )
35700.          else
35700.             t$10435 = swdat%aerosol%abs%dim_1%EX
35700.             t$10436 = swdat%aerosol%abs%dim_2%EX
35700.             t$10437 = swdat%aerosol%abs%dim_3%EX
35700.             t$10442 = int( _alloc( max( 0, 8 * max( 0, swdat%aerosol%abs%dim_3%EX ) * max( 0, swdat%aerosol%abs%dim_2%EX ) * max( 0, swdat%aerosol%abs%dim_1%EX ) ) ), 8 )
35646.             call _f90_copy_from_dv( t$10441, swdat%aerosol%abs )
35700. !dir$ suppress t$10441
35700.             t$10434 = loc( t$10441 )
35700.          endif
35700.          t$10444 = 0
35700.          t$10445 = 0
35700.          t$10446 = 0
35700.          t$10451 = 0
35700.          if ( swdat%aerosol%scat%header%a_contig == 1 ) then
35700. !dir$ suppress (swdat%aerosol%scat%base_addr)(swdat%aerosol%scat%dim_1%LB, swdat%aerosol%scat%dim_2%LB, swdat%aerosol%scat%dim_3%LB, 0)
35700.             t$10443 = loc( (swdat%aerosol%scat%base_addr)(swdat%aerosol%scat%dim_1%LB, swdat%aerosol%scat%dim_2%LB, swdat%aerosol%scat%dim_3%LB, 0) )
35700.          else
35700.             t$10444 = swdat%aerosol%scat%dim_1%EX
35700.             t$10445 = swdat%aerosol%scat%dim_2%EX
35700.             t$10446 = swdat%aerosol%scat%dim_3%EX
35700.             t$10451 = int( _alloc( max( 0, 8 * max( 0, swdat%aerosol%scat%dim_3%EX ) * max( 0, swdat%aerosol%scat%dim_2%EX ) * max( 0, swdat%aerosol%scat%dim_1%EX ) ) ), 8 )
35646.             call _f90_copy_from_dv( t$10450, swdat%aerosol%scat )
35700. !dir$ suppress t$10450
35700.             t$10443 = loc( t$10450 )
35700.          endif
35701.          t$10453 = 0
35701.          t$10456 = 0
35701.          if ( swdat%aerosol%n_aerosol_phf_term%header%a_contig == 1 ) then
35701. !dir$ suppress (swdat%aerosol%n_aerosol_phf_term%base_addr)(swdat%aerosol%n_aerosol_phf_term%dim_1%LB, 0)
35701.             t$10452 = loc( (swdat%aerosol%n_aerosol_phf_term%base_addr)(swdat%aerosol%n_aerosol_phf_term%dim_1%LB, 0) )
35701.          else
35701.             t$10453 = swdat%aerosol%n_aerosol_phf_term%dim_1%EX
35701.             t$10456 = int( _alloc( max( 0, 4 * max( 0, swdat%aerosol%n_aerosol_phf_term%dim_1%EX ) ) ), 8 )
35646.             call _f90_copy_from_dv( t$10455, swdat%aerosol%n_aerosol_phf_term )
35701. !dir$ suppress t$10455
35701.             t$10452 = loc( t$10455 )
35701.          endif
35701.          t$10458 = 0
35701.          t$10459 = 0
35701.          t$10460 = 0
35701.          t$10461 = 0
35701.          t$10467 = 0
35701.          if ( swdat%aerosol%phf_fnc%header%a_contig == 1 ) then
35701. !dir$ suppress (swdat%aerosol%phf_fnc%base_addr)(swdat%aerosol%phf_fnc%dim_1%LB, swdat%aerosol%phf_fnc%dim_2%LB, swdat%aerosol%phf_fnc%dim_3%LB, swdat%aerosol%phf_fnc%dim_4%LB, 0)
35701.             t$10457 = loc( (swdat%aerosol%phf_fnc%base_addr)(swdat%aerosol%phf_fnc%dim_1%LB, swdat%aerosol%phf_fnc%dim_2%LB, swdat%aerosol%phf_fnc%dim_3%LB, swdat%aerosol%phf_fnc%dim_4%LB, 0) )
35701.          else
35701.             t$10458 = swdat%aerosol%phf_fnc%dim_1%EX
35701.             t$10459 = swdat%aerosol%phf_fnc%dim_2%EX
35701.             t$10460 = swdat%aerosol%phf_fnc%dim_3%EX
35701.             t$10461 = swdat%aerosol%phf_fnc%dim_4%EX
35701.             t$10467 = int( _alloc( max( 0, 8 * max( 0, swdat%aerosol%phf_fnc%dim_4%EX ) * max( 0, swdat%aerosol%phf_fnc%dim_3%EX ) * max( 0, swdat%aerosol%phf_fnc%dim_2%EX ) * max( 0, swdat%aerosol%phf_fnc%dim_1%EX ) ) ), 8 )
35646.             call _f90_copy_from_dv( t$10466, swdat%aerosol%phf_fnc )
35701. !dir$ suppress t$10466
35701.             t$10457 = loc( t$10466 )
35701.          endif
35702.          t$10469 = 0
35702.          t$10472 = 0
35702.          if ( swdat%aerosol%i_aerosol_parm%header%a_contig == 1 ) then
35702. !dir$ suppress (swdat%aerosol%i_aerosol_parm%base_addr)(swdat%aerosol%i_aerosol_parm%dim_1%LB, 0)
35702.             t$10468 = loc( (swdat%aerosol%i_aerosol_parm%base_addr)(swdat%aerosol%i_aerosol_parm%dim_1%LB, 0) )
35702.          else
35702.             t$10469 = swdat%aerosol%i_aerosol_parm%dim_1%EX
35702.             t$10472 = int( _alloc( max( 0, 4 * max( 0, swdat%aerosol%i_aerosol_parm%dim_1%EX ) ) ), 8 )
35646.             call _f90_copy_from_dv( t$10471, swdat%aerosol%i_aerosol_parm )
35702. !dir$ suppress t$10471
35702.             t$10468 = loc( t$10471 )
35702.          endif
35702.          t$10474 = 0
35702.          t$10477 = 0
35702.          if ( swdat%aerosol%nhumidity%header%a_contig == 1 ) then
35702. !dir$ suppress (swdat%aerosol%nhumidity%base_addr)(swdat%aerosol%nhumidity%dim_1%LB, 0)
35702.             t$10473 = loc( (swdat%aerosol%nhumidity%base_addr)(swdat%aerosol%nhumidity%dim_1%LB, 0) )
35702.          else
35702.             t$10474 = swdat%aerosol%nhumidity%dim_1%EX
35702.             t$10477 = int( _alloc( max( 0, 4 * max( 0, swdat%aerosol%nhumidity%dim_1%EX ) ) ), 8 )
35646.             call _f90_copy_from_dv( t$10476, swdat%aerosol%nhumidity )
35702. !dir$ suppress t$10476
35702.             t$10473 = loc( t$10476 )
35702.          endif
35702.          t$10479 = 0
35702.          t$10480 = 0
35702.          t$10484 = 0
35702.          if ( swdat%aerosol%humidities%header%a_contig == 1 ) then
35702. !dir$ suppress (swdat%aerosol%humidities%base_addr)(swdat%aerosol%humidities%dim_1%LB, swdat%aerosol%humidities%dim_2%LB, 0)
35702.             t$10478 = loc( (swdat%aerosol%humidities%base_addr)(swdat%aerosol%humidities%dim_1%LB, swdat%aerosol%humidities%dim_2%LB, 0) )
35702.          else
35702.             t$10479 = swdat%aerosol%humidities%dim_1%EX
35702.             t$10480 = swdat%aerosol%humidities%dim_2%EX
35702.             t$10484 = int( _alloc( max( 0, 8 * max( 0, swdat%aerosol%humidities%dim_2%EX ) * max( 0, swdat%aerosol%humidities%dim_1%EX ) ) ), 8 )
35646.             call _f90_copy_from_dv( t$10483, swdat%aerosol%humidities )
35702. !dir$ suppress t$10483
35702.             t$10478 = loc( t$10483 )
35702.          endif
35646.          call radiance_calc( ierr, .true., .true., .true., .true., .true., .true., .true., 1, .true., 2, 16, 0, 0, 0, 0, 0, 0.0, 0.0, .true., 0, 0, 1, 0, direction(1, 1, 1), 0, viewing_level(1), 0, i_scatter_method(1), .true., 1, 14, map_band_channel(1), swdat%dim%nd_band, 1, 6, weight_band(1), n_profile, n_layer, (pres%base_addr)(1, 1, 0), (temp%base_addr)(1, 1, 0), (t_ground%base_addr)(1, 0), (t_level%base_addr)(1, 0, 0), (d_mass%base_addr)(1, 1, 0), 1, (zen_0%base_addr)(1, 0), (solar_irrad%base_addr)(1, 0), t$10299, t$10304, swdat%planck%n_deg_fit, therm_dummy(1, 1), swdat%planck%t_ref_planck, .false., i_gas_overlap(1), i_gas, (gas_mix_ratio%base_addr)(1, 1, 1, 0), t$10309, t$10314, t$10321, t$10328, t$10337, t$10346, t$10353, t$10360, t$10371, t$10378, l_doppler(1), doppler_correction(1), 2, (rho_alb%base_addr)(1, 1, 1, 0), f_brdf(1, 0, 0, 0), .false., i_dummy, i_dummy, list_dummy(1), rho_alb_dummy(1, 1, 1, 1), tt_dummy(1, 1), tt_dummy(1, 1), t$10385, t$10390, swdat%cont%index_water, t$10397, t$10404, t$10411, t$10420, t$10427, swdat%aerosol%n_aerosol, (aerosol_mix_ratio%base_addr)(1, 1, 1, 0), t$10434, t$10443, t$10452, t$10457, t$10468, t$10473, t$10478, n_opt_level_aerosol_prsc(1), n_phase_term_aerosol_prsc(1), aerosol_pressure_prsc(1, 1, 1), aerosol_absorption_prsc(1, 1, 1, 1), aerosol_scattering_prsc(1, 1, 1, 1), aerosol_phase_fnc_prsc(1, 1, 1, 1, 1), n_condensed, type_condensed(1), i_cloud, i_cloud_representation, (w_cloud%base_addr)(1, 1, 0), n_cloud_type, (frac_cloud%base_addr)(1, 1, 1, 0), (condensed_mix_ratio%base_addr)(1, 1, 1, 0), (condensed_dim_char%base_addr)(1, 1, 1, 0), i_condensed_param(1), condensed_n_phf(1), condensed_param_list(1, 1, 1), 0.0, 0.0, 1, 1, drop_pressure_prsc(1, 1), drop_absorption_prsc(1, 1, 1), drop_scattering_prsc(1, 1, 1), drop_phase_fnc_prsc(1, 1, 1, 1), 1, 1, ice_pressure_prsc(1, 1), ice_absorption_prsc(1, 1, 1), ice_scattering_prsc(1, 1, 1), ice_phase_fnc_prsc(1, 1, 1, 1), (flux_direct%base_addr)(1, 0, 1, 0), (flux_down%base_addr)(1, 0, 1, 0), (flux_up%base_addr)(1, 0, 1, 0), radiance(1, 1, 1, 1), photolysis(1, 1, 1), .true., 13, (flux_direct_clear%base_addr)(1, 0, 1, 0), (flux_down_clear%base_addr)(1, 0, 1, 0), (flux_up_clear%base_addr)(1, 0, 1, 0), .false., wb_dummy(1), tt_dummy(1, 1), tt_dummy(1, 1), tt_dummy(1, 1), ft_dummy(1, 1, 1), ft_dummy(1, 1, 1), nd_profile, nd_layer, 1, nd_layer, 1, nd_2sg_profile, nd_flux_profile, 1, 1, 2, swdat%dim%nd_band, swdat%dim%nd_species, 25, swdat%dim%nd_scale_variable, swdat%dim%nd_continuum, swdat%dim%nd_aerosol_species, swdat%dim%nd_humidity, swdat%dim%nd_cloud_parameter, i_therm_dummy, 2, 2, 5, 1, 1, 1, 1, swdat%dim%nd_phase_term, 1, 1, 1, 1, 3, 4, 4, 18, 1, 1 )
35702.          if ( swdat%aerosol%humidities%header%a_contig /= 1 ) then
35702.             _free( t$10484 )
35702.          endif
35702.          if ( swdat%aerosol%nhumidity%header%a_contig /= 1 ) then
35702.             _free( t$10477 )
35702.          endif
35702.          if ( swdat%aerosol%i_aerosol_parm%header%a_contig /= 1 ) then
35702.             _free( t$10472 )
35702.          endif
35701.          if ( swdat%aerosol%phf_fnc%header%a_contig /= 1 ) then
35701.             _free( t$10467 )
35701.          endif
35701.          if ( swdat%aerosol%n_aerosol_phf_term%header%a_contig /= 1 ) then
35701.             _free( t$10456 )
35701.          endif
35700.          if ( swdat%aerosol%scat%header%a_contig /= 1 ) then
35700.             _free( t$10451 )
35700.          endif
35700.          if ( swdat%aerosol%abs%header%a_contig /= 1 ) then
35700.             _free( t$10442 )
35700.          endif
35697.          if ( swdat%cont%t_ref_cont%header%a_contig /= 1 ) then
35697.             _free( t$10433 )
35697.          endif
35697.          if ( swdat%cont%p_ref_cont%header%a_contig /= 1 ) then
35697.             _free( t$10426 )
35697.          endif
35696.          if ( swdat%cont%scale_cont%header%a_contig /= 1 ) then
35696.             _free( t$10419 )
35696.          endif
35696.          if ( swdat%cont%i_scale_fnc_cont%header%a_contig /= 1 ) then
35696.             _free( t$10410 )
35696.          endif
35696.          if ( swdat%cont%k_cont%header%a_contig /= 1 ) then
35696.             _free( t$10403 )
35696.          endif
35695.          if ( swdat%cont%index_continuum%header%a_contig /= 1 ) then
35695.             _free( t$10396 )
35695.          endif
35695.          if ( swdat%cont%n_band_continuum%header%a_contig /= 1 ) then
35695.             _free( t$10389 )
35695.          endif
35686.          if ( swdat%gas%t_ref%header%a_contig /= 1 ) then
35686.             _free( t$10384 )
35686.          endif
35686.          if ( swdat%gas%p_ref%header%a_contig /= 1 ) then
35686.             _free( t$10377 )
35686.          endif
35685.          if ( swdat%gas%scale%header%a_contig /= 1 ) then
35685.             _free( t$10370 )
35685.          endif
35685.          if ( swdat%gas%i_scale_fnc%header%a_contig /= 1 ) then
35685.             _free( t$10359 )
35685.          endif
35684.          if ( swdat%gas%i_scale_k%header%a_contig /= 1 ) then
35684.             _free( t$10352 )
35684.          endif
35684.          if ( swdat%gas%k%header%a_contig /= 1 ) then
35684.             _free( t$10345 )
35684.          endif
35684.          if ( swdat%gas%w%header%a_contig /= 1 ) then
35684.             _free( t$10336 )
35684.          endif
35684.          if ( swdat%gas%i_band_k%header%a_contig /= 1 ) then
35684.             _free( t$10327 )
35684.          endif
35683.          if ( swdat%gas%index_absorb%header%a_contig /= 1 ) then
35683.             _free( t$10320 )
35683.          endif
35683.          if ( swdat%gas%n_band_absorb%header%a_contig /= 1 ) then
35683.             _free( t$10313 )
35683.          endif
35677.          if ( swdat%rayleigh%rayleigh_coeff%header%a_contig /= 1 ) then
35677.             _free( t$10308 )
35677.          endif
35676.          if ( swdat%solar%solar_flux_band%header%a_contig /= 1 ) then
35676.             _free( t$10303 )
35676.          endif
35750.          if ( ierr /= 0 ) then
35750.              _substr(t$10485,1,4) = ' '
35750.             call _stop(  _substr(t$10485,1,1) )
35750.          else
35753.             if ( $Reduc_A53 > 0 ) then
35754.                if ( nd_layer >= 0 ) then
35755.                   $I_L35755_852 = 0
35755.                   do
35754.                      $I_L35754_752 = 0
35754.                      do
35753.                         $I_L35753_602 = 0
35753. !dir$ ivdep
35753.                         do
35756.                            (flux_net%base_addr)(1 + $I_L35753_602, $I_L35754_752, 1 + $I_L35755_852, 0) = (flux_down%base_addr)(1 + $I_L35753_602, $I_L35754_752, 1 + $I_L35755_852, 0) + -(flux_up%base_addr)(1 + $I_L35753_602, $I_L35754_752, 1 + $I_L35755_852, 0)
35757.                            (flux_net_clear%base_addr)(1 + $I_L35753_602, $I_L35754_752, 1 + $I_L35755_852, 0) = (flux_down_clear%base_addr)(1 + $I_L35753_602, $I_L35754_752, 1 + $I_L35755_852, 0) + -(flux_up_clear%base_addr)(1 + $I_L35753_602, $I_L35754_752, 1 + $I_L35755_852, 0)
35760.                            $I_L35753_602 = 1 + $I_L35753_602
35755.                            if ( $I_L35753_602 >= $Reduc_A53 ) exit
35755.                         enddo
35759.                         $I_L35754_752 = 1 + $I_L35754_752
35758.                         if ( $I_L35754_752 >= 1 + nd_layer ) exit
35758.                      enddo
35758.                      $I_L35755_852 = 1 + $I_L35755_852
35759.                      if ( $I_L35755_852 >= 2 ) exit
35759.                   enddo
35759.                endif
35770.                $I_L35770_754 = 0
35770.                do
35771.                   $SCA_toanet_I166 = toanet(litx(1 + $I_L35770_754))
35771.                   $SCA_toanetc_I167 = toanetc(litx(1 + $I_L35770_754))
35771.                   $SCA_sfcnet_I168 = sfcnet(litx(1 + $I_L35770_754))
35771.                   $SCA_sfcnetc_I169 = sfcnetc(litx(1 + $I_L35770_754))
35771.                   $SCA_litx_I170 = litx(1 + $I_L35770_754)
35771.                   $SCA_toadown_I171 = toadown($SCA_litx_I170)
35771.                   $I_L35771_604 = 0
35771. !dir$ ivdep
35771.                   do
35777.                      $SCA_sfcnetc_I169 = $SCA_sfcnetc_I169 + (flux_net_clear%base_addr)(1 + $I_L35770_754, nd_layer, 1 + $I_L35771_604, 0)
35776.                      $SCA_sfcnet_I168 = $SCA_sfcnet_I168 + (flux_net%base_addr)(1 + $I_L35770_754, nd_layer, 1 + $I_L35771_604, 0)
35774.                      $SCA_toanetc_I167 = $SCA_toanetc_I167 + (flux_net_clear%base_addr)(1 + $I_L35770_754, 0, 1 + $I_L35771_604, 0)
35773.                      $SCA_toanet_I166 = $SCA_toanet_I166 + (flux_net%base_addr)(1 + $I_L35770_754, 0, 1 + $I_L35771_604, 0)
35772.                      $SCA_toadown_I171 = $SCA_toadown_I171 + (flux_down%base_addr)(1 + $I_L35770_754, 0, 1 + $I_L35771_604, 0)
35778.                      $I_L35771_604 = 1 + $I_L35771_604
35771.                      if ( $I_L35771_604 >= 2 ) exit
35771.                   enddo
35771.                   toadown($SCA_litx_I170) = $SCA_toadown_I171
35771.                   sfcnetc($SCA_litx_I170) = $SCA_sfcnetc_I169
35771.                   sfcnet($SCA_litx_I170) = $SCA_sfcnet_I168
35771.                   toanetc($SCA_litx_I170) = $SCA_toanetc_I167
35771.                   toanet($SCA_litx_I170) = $SCA_toanet_I166
35781.                   sfcvisbeamc($SCA_litx_I170) = (flux_direct_clear%base_addr)(1 + $I_L35770_754, nd_layer, 1, 0)
35782.                   sfcvisdiffc($SCA_litx_I170) = (flux_down_clear%base_addr)(1 + $I_L35770_754, nd_layer, 1, 0) + -(flux_direct_clear%base_addr)(1 + $I_L35770_754, nd_layer, 1, 0)
35783.                   sfcnirbeamc($SCA_litx_I170) = (flux_direct_clear%base_addr)(1 + $I_L35770_754, nd_layer, 2, 0)
35784.                   sfcnirdiffc($SCA_litx_I170) = (flux_down_clear%base_addr)(1 + $I_L35770_754, nd_layer, 2, 0) + -(flux_direct_clear%base_addr)(1 + $I_L35770_754, nd_layer, 2, 0)
35786.                   sfcvisbeam($SCA_litx_I170) = (flux_direct%base_addr)(1 + $I_L35770_754, nd_layer, 1, 0)
35787.                   sfcvisdiff($SCA_litx_I170) = (flux_down%base_addr)(1 + $I_L35770_754, nd_layer, 1, 0) + -(flux_direct%base_addr)(1 + $I_L35770_754, nd_layer, 1, 0)
35788.                   sfcnirbeam($SCA_litx_I170) = (flux_direct%base_addr)(1 + $I_L35770_754, nd_layer, 2, 0)
35789.                   sfcnirdiff($SCA_litx_I170) = (flux_down%base_addr)(1 + $I_L35770_754, nd_layer, 2, 0) + -(flux_direct%base_addr)(1 + $I_L35770_754, nd_layer, 2, 0)
35790.                   $I_L35770_754 = 1 + $I_L35770_754
35778.                   if ( $I_L35770_754 >= $Reduc_A53 ) exit
35778.                enddo
35801.                if ( kmax > 0 ) then
35801.                   $I_L35801_854 = 0
35801. !dir$ ivdep
35801. !dir$ blocking_size( 32, 32 )
35801.                   do
35802.                      $I_L35802_756 = 0
35802. !dir$ blocking_size( 2, 2 )
35802.                      do
35800.                         $I_L35800_606 = 0
35800.                         do
35807.                            heatratec(litx(1 + $I_L35800_606), 1 + $I_L35801_854) = heatratec(litx(1 + $I_L35800_606), 1 + $I_L35801_854) + ( 9.9502487562189048e-4 * 1.0/(d_mass%base_addr)(1 + $I_L35800_606, 1 + $I_L35801_854, 0) * ( (flux_net_clear%base_addr)(1 + $I_L35800_606, $I_L35801_854, 1 + $I_L35802_756, 0) + -(flux_net_clear%base_addr)(1 + $I_L35800_606, 1 + $I_L35801_854, 1 + $I_L35802_756, 0) ) )
35803.                            heatrate(litx(1 + $I_L35800_606), 1 + $I_L35801_854) = heatrate(litx(1 + $I_L35800_606), 1 + $I_L35801_854) + ( 9.9502487562189048e-4 * ( (flux_net%base_addr)(1 + $I_L35800_606, $I_L35801_854, 1 + $I_L35802_756, 0) + -(flux_net%base_addr)(1 + $I_L35800_606, 1 + $I_L35801_854, 1 + $I_L35802_756, 0) ) * 1.0/(d_mass%base_addr)(1 + $I_L35800_606, 1 + $I_L35801_854, 0) )
35812.                            $I_L35800_606 = 1 + $I_L35800_606
35802.                            if ( $I_L35800_606 >= $Reduc_A53 ) exit
35802.                         enddo
35810.                         $I_L35802_756 = 1 + $I_L35802_756
35810.                         if ( $I_L35802_756 >= 2 ) exit
35810.                      enddo
35811.                      $I_L35801_854 = 1 + $I_L35801_854
35811.                      if ( $I_L35801_854 >= kmax ) exit
35811.                   enddo
35811.                endif
35811.             endif
35818.             $_allo_P48(0) = 0x1000000000001L
35818.             $_allo_P48(1) = loc( pres )
35818.             call __deallocate( $_allo_P48, 0, 0, _fcd( 0, 0 ) )
35818.             pres%header%assoc = 0
35819.             $_allo_P49(0) = 0x1000000000001L
35819.             $_allo_P49(1) = loc( temp )
35819.             call __deallocate( $_allo_P49, 0, 0, _fcd( 0, 0 ) )
35819.             temp%header%assoc = 0
35820.             $_allo_P50(0) = 0x1000000000001L
35820.             $_allo_P50(1) = loc( d_mass )
35820.             call __deallocate( $_allo_P50, 0, 0, _fcd( 0, 0 ) )
35820.             d_mass%header%assoc = 0
35821.             $_allo_P51(0) = 0x1000000000001L
35821.             $_allo_P51(1) = loc( t_ground )
35821.             call __deallocate( $_allo_P51, 0, 0, _fcd( 0, 0 ) )
35821.             t_ground%header%assoc = 0
35822.             $_allo_P52(0) = 0x1000000000001L
35822.             $_allo_P52(1) = loc( t_level )
35822.             call __deallocate( $_allo_P52, 0, 0, _fcd( 0, 0 ) )
35822.             t_level%header%assoc = 0
35823.             $_allo_P53(0) = 0x1000000000001L
35823.             $_allo_P53(1) = loc( zen_0 )
35823.             call __deallocate( $_allo_P53, 0, 0, _fcd( 0, 0 ) )
35823.             zen_0%header%assoc = 0
35824.             $_allo_P54(0) = 0x1000000000001L
35824.             $_allo_P54(1) = loc( solar_irrad )
35824.             call __deallocate( $_allo_P54, 0, 0, _fcd( 0, 0 ) )
35824.             solar_irrad%header%assoc = 0
35825.             $_allo_P55(0) = 0x1000000000001L
35825.             $_allo_P55(1) = loc( rho_alb )
35825.             call __deallocate( $_allo_P55, 0, 0, _fcd( 0, 0 ) )
35825.             rho_alb%header%assoc = 0
35827.             $_allo_P56(0) = 0x1000000000001L
35827.             $_allo_P56(1) = loc( gas_mix_ratio )
35827.             call __deallocate( $_allo_P56, 0, 0, _fcd( 0, 0 ) )
35827.             gas_mix_ratio%header%assoc = 0
35828.             $_allo_P57(0) = 0x1000000000001L
35828.             $_allo_P57(1) = loc( aerosol_mix_ratio )
35828.             call __deallocate( $_allo_P57, 0, 0, _fcd( 0, 0 ) )
35828.             aerosol_mix_ratio%header%assoc = 0
35830.             $_allo_P58(0) = 0x1000000000001L
35830.             $_allo_P58(1) = loc( w_cloud )
35830.             call __deallocate( $_allo_P58, 0, 0, _fcd( 0, 0 ) )
35830.             w_cloud%header%assoc = 0
35831.             $_allo_P59(0) = 0x1000000000001L
35831.             $_allo_P59(1) = loc( frac_cloud )
35831.             call __deallocate( $_allo_P59, 0, 0, _fcd( 0, 0 ) )
35831.             frac_cloud%header%assoc = 0
35832.             $_allo_P60(0) = 0x1000000000001L
35832.             $_allo_P60(1) = loc( condensed_mix_ratio )
35832.             call __deallocate( $_allo_P60, 0, 0, _fcd( 0, 0 ) )
35832.             condensed_mix_ratio%header%assoc = 0
35833.             $_allo_P61(0) = 0x1000000000001L
35833.             $_allo_P61(1) = loc( condensed_dim_char )
35833.             call __deallocate( $_allo_P61, 0, 0, _fcd( 0, 0 ) )
35833.             condensed_dim_char%header%assoc = 0
35834.             $_allo_P62(0) = 0x1000000000001L
35834.             $_allo_P62(1) = loc( clouds )
35834.             call __deallocate( $_allo_P62, 0, 0, _fcd( 0, 0 ) )
35834.             clouds%header%assoc = 0
35836.             $_allo_P63(0) = 0x1000000000001L
35836.             $_allo_P63(1) = loc( flux_direct )
35836.             call __deallocate( $_allo_P63, 0, 0, _fcd( 0, 0 ) )
35836.             flux_direct%header%assoc = 0
35837.             $_allo_P64(0) = 0x1000000000001L
35837.             $_allo_P64(1) = loc( flux_down )
35837.             call __deallocate( $_allo_P64, 0, 0, _fcd( 0, 0 ) )
35837.             flux_down%header%assoc = 0
35838.             $_allo_P65(0) = 0x1000000000001L
35838.             $_allo_P65(1) = loc( flux_up )
35838.             call __deallocate( $_allo_P65, 0, 0, _fcd( 0, 0 ) )
35838.             flux_up%header%assoc = 0
35839.             $_allo_P66(0) = 0x1000000000001L
35839.             $_allo_P66(1) = loc( flux_net )
35839.             call __deallocate( $_allo_P66, 0, 0, _fcd( 0, 0 ) )
35839.             flux_net%header%assoc = 0
35841.             $_allo_P67(0) = 0x1000000000001L
35841.             $_allo_P67(1) = loc( flux_direct_clear )
35841.             call __deallocate( $_allo_P67, 0, 0, _fcd( 0, 0 ) )
35841.             flux_direct_clear%header%assoc = 0
35842.             $_allo_P68(0) = 0x1000000000001L
35842.             $_allo_P68(1) = loc( flux_down_clear )
35842.             call __deallocate( $_allo_P68, 0, 0, _fcd( 0, 0 ) )
35842.             flux_down_clear%header%assoc = 0
35843.             $_allo_P69(0) = 0x1000000000001L
35843.             $_allo_P69(1) = loc( flux_up_clear )
35843.             call __deallocate( $_allo_P69, 0, 0, _fcd( 0, 0 ) )
35843.             flux_up_clear%header%assoc = 0
35844.             $_allo_P70(0) = 0x1000000000001L
35844.             $_allo_P70(1) = loc( flux_net_clear )
35844.             call __deallocate( $_allo_P70, 0, 0, _fcd( 0, 0 ) )
35844.             flux_net_clear%header%assoc = 0
35228.             $_allo_P71(0) = 0x17000000000001L
35228.             $_allo_P71(1) = loc( zen_0 )
35228.             $_allo_P71(2) = loc( w_cloud )
35228.             $_allo_P71(3) = loc( t_level )
35228.             $_allo_P71(4) = loc( t_ground )
35228.             $_allo_P71(5) = loc( temp )
35228.             $_allo_P71(6) = loc( solar_irrad )
35228.             $_allo_P71(7) = loc( rho_alb )
35228.             $_allo_P71(8) = loc( pres )
35228.             $_allo_P71(9) = loc( gas_mix_ratio )
35228.             $_allo_P71(10) = loc( frac_cloud )
35228.             $_allo_P71(11) = loc( flux_up_clear )
35228.             $_allo_P71(12) = loc( flux_up )
35228.             $_allo_P71(13) = loc( flux_net_clear )
35228.             $_allo_P71(14) = loc( flux_net )
35228.             $_allo_P71(15) = loc( flux_down_clear )
35228.             $_allo_P71(16) = loc( flux_down )
35228.             $_allo_P71(17) = loc( flux_direct_clear )
35228.             $_allo_P71(18) = loc( flux_direct )
35228.             $_allo_P71(19) = loc( d_mass )
35228.             $_allo_P71(20) = loc( condensed_mix_ratio )
35228.             $_allo_P71(21) = loc( condensed_dim_char )
35228.             $_allo_P71(22) = loc( clouds )
35228.             $_allo_P71(23) = loc( aerosol_mix_ratio )
35228.             call _dealloc( $_allo_P71, 0, 0, _fcd( 0, 0 ) )
34739.             _free( t$10020 )
34739.          endif
34739.       endif
35847.       return
35847.       end
35847.       
35859.       
35859.       subroutine ukmo_lwintf( ncols, kmax, pbot, pmid, dp, te, qe, o3, co2val, tg, imask, lw_toa_up_clr, lw_toa_up, lw_cool_clr, lw_cool, lw_sfc_net_clr, lw_sfc_net, lw_sfc_down_clr, lw_sfc_down, cld, clu, fice, rei, rel, lmixr )
35859.       t$9979 = ncols
35859.       t$9980 = kmax
35892.       t$10100 = _zla( 0, ncols )
35859.       t$10101 = _zla( 0, ncols )
35892.       t$10102 = _zla( 0, kmax )
35859.       t$10103 = _zla( 0, ncols ) * _zla( 0, kmax )
35859.       t$9989 = lwdat%dim%nd_aerosol_species
35859.       t$9981 = lwdat%dim%nd_band
36222.       t$10104 = _zla( 0, lwdat%dim%nd_aerosol_species )
35859.       t$10105 = _zla( 0, lwdat%dim%nd_aerosol_species )
36222.       t$10106 = _zla( 0, lwdat%dim%nd_band )
35859.       t$10107 = _zla( 0, lwdat%dim%nd_aerosol_species ) * _zla( 0, lwdat%dim%nd_band )
36315.       t$10110 = 8 * _zla( 0, lwdat%dim%nd_aerosol_species ) * _zla( 0, lwdat%dim%nd_band )
36222.       aerosol_mix_ratio = $_StaticDV_P0
36222.       aerosol_mix_ratio%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
36222.       aerosol_mix_ratio%header%el_len = 64
36222.       aerosol_mix_ratio%header%assoc = 0
36222.       aerosol_mix_ratio%header%ptr_alloc = 0
36222.       aerosol_mix_ratio%header%p_or_a = 2
36222.       aerosol_mix_ratio%header%a_contig = 1
36222.       aerosol_mix_ratio%header%n_dim = 3
36222.       aerosol_mix_ratio%header%orig_base = 0
36222.       aerosol_mix_ratio%header%orig_size = 0
36222.       aerosol_mix_ratio%header%n_codim = 0
36222.       aerosol_mix_ratio%header%dv_versn = 2
36222.       aerosol_mix_ratio%header%dv_smunit = 64
36222.       aerosol_mix_ratio%header%d_type = 0
36222.       aerosol_mix_ratio%header%n_params = 0
36222.       aerosol_mix_ratio%header%d_type_idx = 13
36222.       aerosol_mix_ratio%dim_1%LB = 1
36222.       aerosol_mix_ratio%dim_1%EX = 0
36222.       aerosol_mix_ratio%dim_1%SM = 1
36222.       aerosol_mix_ratio%dim_2%LB = 1
36222.       aerosol_mix_ratio%dim_2%EX = 0
36222.       aerosol_mix_ratio%dim_2%SM = 1
36222.       aerosol_mix_ratio%dim_3%LB = 1
36222.       aerosol_mix_ratio%dim_3%EX = 0
36222.       aerosol_mix_ratio%dim_3%SM = 1
35859.       t$9988 = lwdat%dim%nd_phase_term
36228.       t$10111 = _zla( 0, lwdat%dim%nd_phase_term )
35859.       t$10112 = _zla( 0, lwdat%dim%nd_phase_term )
35859.       t$10113 = _zla( 0, lwdat%dim%nd_aerosol_species ) * _zla( 0, lwdat%dim%nd_phase_term )
35859.       t$10114 = _zla( 0, lwdat%dim%nd_aerosol_species ) * _zla( 0, lwdat%dim%nd_band ) * _zla( 0, lwdat%dim%nd_phase_term )
36228.       t$10115 = 8 * ( 7 + 8 * _zla( 0, lwdat%dim%nd_aerosol_species ) * _zla( 0, lwdat%dim%nd_band ) ) / 8
36228.       t$10117 = t$10115 + 8 * _zla( 0, lwdat%dim%nd_aerosol_species ) * _zla( 0, lwdat%dim%nd_band ) * _zla( 0, lwdat%dim%nd_phase_term )
35859.       t$10118 = _zla( 0, lwdat%dim%nd_aerosol_species )
36218.       t$10119 = 8 * ( 7 + t$10115 + 8 * _zla( 0, lwdat%dim%nd_aerosol_species ) * _zla( 0, lwdat%dim%nd_band ) * _zla( 0, lwdat%dim%nd_phase_term ) ) / 8
36218.       t$10121 = t$10119 + 8 * _zla( 0, lwdat%dim%nd_aerosol_species )
36225.       t$10122 = 8 * ( 7 + t$10119 + 8 * _zla( 0, lwdat%dim%nd_aerosol_species ) ) / 8
36311.       t$10124 = t$10122 + 8 * _zla( 0, lwdat%dim%nd_aerosol_species ) * _zla( 0, lwdat%dim%nd_band )
36303.       clouds = $_StaticDV_P1
36303.       clouds%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
36303.       clouds%header%el_len = 64
36303.       clouds%header%assoc = 0
36303.       clouds%header%ptr_alloc = 0
36303.       clouds%header%p_or_a = 2
36303.       clouds%header%a_contig = 1
36303.       clouds%header%n_dim = 3
36303.       clouds%header%orig_base = 0
36303.       clouds%header%orig_size = 0
36303.       clouds%header%n_codim = 0
36303.       clouds%header%dv_versn = 2
36303.       clouds%header%dv_smunit = 64
36303.       clouds%header%d_type = 0
36303.       clouds%header%n_params = 0
36303.       clouds%header%d_type_idx = 13
36303.       clouds%dim_1%LB = 1
36303.       clouds%dim_1%EX = 0
36303.       clouds%dim_1%SM = 1
36303.       clouds%dim_2%LB = 1
36303.       clouds%dim_2%EX = 0
36303.       clouds%dim_2%SM = 1
36303.       clouds%dim_3%LB = 1
36303.       clouds%dim_3%EX = 0
36303.       clouds%dim_3%SM = 1
36301.       condensed_dim_char = $_StaticDV_P2
36301.       condensed_dim_char%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
36301.       condensed_dim_char%header%el_len = 64
36301.       condensed_dim_char%header%assoc = 0
36301.       condensed_dim_char%header%ptr_alloc = 0
36301.       condensed_dim_char%header%p_or_a = 2
36301.       condensed_dim_char%header%a_contig = 1
36301.       condensed_dim_char%header%n_dim = 3
36301.       condensed_dim_char%header%orig_base = 0
36301.       condensed_dim_char%header%orig_size = 0
36301.       condensed_dim_char%header%n_codim = 0
36301.       condensed_dim_char%header%dv_versn = 2
36301.       condensed_dim_char%header%dv_smunit = 64
36301.       condensed_dim_char%header%d_type = 0
36301.       condensed_dim_char%header%n_params = 0
36301.       condensed_dim_char%header%d_type_idx = 13
36301.       condensed_dim_char%dim_1%LB = 1
36301.       condensed_dim_char%dim_1%EX = 0
36301.       condensed_dim_char%dim_1%SM = 1
36301.       condensed_dim_char%dim_2%LB = 1
36301.       condensed_dim_char%dim_2%EX = 0
36301.       condensed_dim_char%dim_2%SM = 1
36301.       condensed_dim_char%dim_3%LB = 1
36301.       condensed_dim_char%dim_3%EX = 0
36301.       condensed_dim_char%dim_3%SM = 1
36225.       condensed_mix_ratio = $_StaticDV_P3
36225.       condensed_mix_ratio%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
36225.       condensed_mix_ratio%header%el_len = 64
36225.       condensed_mix_ratio%header%assoc = 0
36225.       condensed_mix_ratio%header%ptr_alloc = 0
36225.       condensed_mix_ratio%header%p_or_a = 2
36225.       condensed_mix_ratio%header%a_contig = 1
36225.       condensed_mix_ratio%header%n_dim = 3
36225.       condensed_mix_ratio%header%orig_base = 0
36225.       condensed_mix_ratio%header%orig_size = 0
36225.       condensed_mix_ratio%header%n_codim = 0
36225.       condensed_mix_ratio%header%dv_versn = 2
36225.       condensed_mix_ratio%header%dv_smunit = 64
36225.       condensed_mix_ratio%header%d_type = 0
36225.       condensed_mix_ratio%header%n_params = 0
36225.       condensed_mix_ratio%header%d_type_idx = 13
36225.       condensed_mix_ratio%dim_1%LB = 1
36225.       condensed_mix_ratio%dim_1%EX = 0
36225.       condensed_mix_ratio%dim_1%SM = 1
36225.       condensed_mix_ratio%dim_2%LB = 1
36225.       condensed_mix_ratio%dim_2%EX = 0
36225.       condensed_mix_ratio%dim_2%SM = 1
36225.       condensed_mix_ratio%dim_3%LB = 1
36225.       condensed_mix_ratio%dim_3%EX = 0
36225.       condensed_mix_ratio%dim_3%SM = 1
35859.       t$9996 = lwdat%dim%nd_cloud_parameter
36306.       t$10125 = _zla( 0, lwdat%dim%nd_cloud_parameter )
35859.       t$10126 = _zla( 0, lwdat%dim%nd_cloud_parameter )
35859.       t$10127 = 4 * _zla( 0, lwdat%dim%nd_cloud_parameter )
35859.       t$10128 = 4 * _zla( 0, lwdat%dim%nd_band ) * _zla( 0, lwdat%dim%nd_cloud_parameter )
36306.       t$10129 = 8 * ( 7 + t$10122 + 8 * _zla( 0, lwdat%dim%nd_aerosol_species ) * _zla( 0, lwdat%dim%nd_band ) ) / 8
36306.       t$10131 = t$10129 + 32 * _zla( 0, lwdat%dim%nd_band ) * _zla( 0, lwdat%dim%nd_cloud_parameter )
35859.       t$9982 = lwdat%dim%nd_species
36049.       t$10132 = _zla( 0, lwdat%dim%nd_species )
36049.       t$10133 = 8 * ( 7 + t$10129 + 32 * _zla( 0, lwdat%dim%nd_band ) * _zla( 0, lwdat%dim%nd_cloud_parameter ) ) / 8
36049.       t$10135 = t$10133 + 8 * _zla( 0, lwdat%dim%nd_species )
35859.       t$10136 = _zla( 0, lwdat%dim%nd_band )
36177.       t$10137 = 8 * ( 7 + t$10133 + 8 * _zla( 0, lwdat%dim%nd_species ) ) / 8
36177.       t$10139 = t$10137 + 8 * _zla( 0, lwdat%dim%nd_band )
35859.       t$10140 = _zla( 0, lwdat%dim%nd_band ) * _zla( 0, lwdat%dim%nd_phase_term )
36183.       t$10141 = 8 * ( 7 + t$10137 + 8 * _zla( 0, lwdat%dim%nd_band ) ) / 8
36183.       t$10143 = t$10141 + 8 * _zla( 0, lwdat%dim%nd_band ) * _zla( 0, lwdat%dim%nd_phase_term )
36180.       t$10144 = 8 * ( 7 + t$10141 + 8 * _zla( 0, lwdat%dim%nd_band ) * _zla( 0, lwdat%dim%nd_phase_term ) ) / 8
36146.       t$10146 = t$10144 + 8 * _zla( 0, lwdat%dim%nd_band )
36320.       d_mass = $_StaticDV_P4
36320.       d_mass%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
36320.       d_mass%header%el_len = 64
36320.       d_mass%header%assoc = 0
36320.       d_mass%header%ptr_alloc = 0
36320.       d_mass%header%p_or_a = 2
36320.       d_mass%header%a_contig = 1
36320.       d_mass%header%n_dim = 2
36320.       d_mass%header%orig_base = 0
36320.       d_mass%header%orig_size = 0
36320.       d_mass%header%n_codim = 0
36320.       d_mass%header%dv_versn = 2
36320.       d_mass%header%dv_smunit = 64
36320.       d_mass%header%d_type = 0
36320.       d_mass%header%n_params = 0
36320.       d_mass%header%d_type_idx = 13
36320.       d_mass%dim_1%LB = 1
36320.       d_mass%dim_1%EX = 0
36320.       d_mass%dim_1%SM = 1
36320.       d_mass%dim_2%LB = 1
36320.       d_mass%dim_2%EX = 0
36320.       d_mass%dim_2%SM = 1
36328.       flux_direct = $_StaticDV_P5
36328.       flux_direct%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
36328.       flux_direct%header%el_len = 64
36328.       flux_direct%header%assoc = 0
36328.       flux_direct%header%ptr_alloc = 0
36328.       flux_direct%header%p_or_a = 2
36328.       flux_direct%header%a_contig = 1
36328.       flux_direct%header%n_dim = 3
36328.       flux_direct%header%orig_base = 0
36328.       flux_direct%header%orig_size = 0
36328.       flux_direct%header%n_codim = 0
36328.       flux_direct%header%dv_versn = 2
36328.       flux_direct%header%dv_smunit = 64
36328.       flux_direct%header%d_type = 0
36328.       flux_direct%header%n_params = 0
36328.       flux_direct%header%d_type_idx = 13
36328.       flux_direct%dim_1%LB = 1
36328.       flux_direct%dim_1%EX = 0
36328.       flux_direct%dim_1%SM = 1
36328.       flux_direct%dim_2%LB = 1
36328.       flux_direct%dim_2%EX = 0
36328.       flux_direct%dim_2%SM = 1
36328.       flux_direct%dim_3%LB = 1
36328.       flux_direct%dim_3%EX = 0
36328.       flux_direct%dim_3%SM = 1
36322.       flux_direct_clear = $_StaticDV_P6
36322.       flux_direct_clear%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
36322.       flux_direct_clear%header%el_len = 64
36322.       flux_direct_clear%header%assoc = 0
36322.       flux_direct_clear%header%ptr_alloc = 0
36322.       flux_direct_clear%header%p_or_a = 2
36322.       flux_direct_clear%header%a_contig = 1
36322.       flux_direct_clear%header%n_dim = 3
36322.       flux_direct_clear%header%orig_base = 0
36322.       flux_direct_clear%header%orig_size = 0
36322.       flux_direct_clear%header%n_codim = 0
36322.       flux_direct_clear%header%dv_versn = 2
36322.       flux_direct_clear%header%dv_smunit = 64
36322.       flux_direct_clear%header%d_type = 0
36322.       flux_direct_clear%header%n_params = 0
36322.       flux_direct_clear%header%d_type_idx = 13
36322.       flux_direct_clear%dim_1%LB = 1
36322.       flux_direct_clear%dim_1%EX = 0
36322.       flux_direct_clear%dim_1%SM = 1
36322.       flux_direct_clear%dim_2%LB = 1
36322.       flux_direct_clear%dim_2%EX = 0
36322.       flux_direct_clear%dim_2%SM = 1
36322.       flux_direct_clear%dim_3%LB = 1
36322.       flux_direct_clear%dim_3%EX = 0
36322.       flux_direct_clear%dim_3%SM = 1
36330.       flux_down = $_StaticDV_P7
36330.       flux_down%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
36330.       flux_down%header%el_len = 64
36330.       flux_down%header%assoc = 0
36330.       flux_down%header%ptr_alloc = 0
36330.       flux_down%header%p_or_a = 2
36330.       flux_down%header%a_contig = 1
36330.       flux_down%header%n_dim = 3
36330.       flux_down%header%orig_base = 0
36330.       flux_down%header%orig_size = 0
36330.       flux_down%header%n_codim = 0
36330.       flux_down%header%dv_versn = 2
36330.       flux_down%header%dv_smunit = 64
36330.       flux_down%header%d_type = 0
36330.       flux_down%header%n_params = 0
36330.       flux_down%header%d_type_idx = 13
36330.       flux_down%dim_1%LB = 1
36330.       flux_down%dim_1%EX = 0
36330.       flux_down%dim_1%SM = 1
36330.       flux_down%dim_2%LB = 1
36330.       flux_down%dim_2%EX = 0
36330.       flux_down%dim_2%SM = 1
36330.       flux_down%dim_3%LB = 1
36330.       flux_down%dim_3%EX = 0
36330.       flux_down%dim_3%SM = 1
36326.       flux_down_clear = $_StaticDV_P8
36326.       flux_down_clear%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
36326.       flux_down_clear%header%el_len = 64
36326.       flux_down_clear%header%assoc = 0
36326.       flux_down_clear%header%ptr_alloc = 0
36326.       flux_down_clear%header%p_or_a = 2
36326.       flux_down_clear%header%a_contig = 1
36326.       flux_down_clear%header%n_dim = 3
36326.       flux_down_clear%header%orig_base = 0
36326.       flux_down_clear%header%orig_size = 0
36326.       flux_down_clear%header%n_codim = 0
36326.       flux_down_clear%header%dv_versn = 2
36326.       flux_down_clear%header%dv_smunit = 64
36326.       flux_down_clear%header%d_type = 0
36326.       flux_down_clear%header%n_params = 0
36326.       flux_down_clear%header%d_type_idx = 13
36326.       flux_down_clear%dim_1%LB = 1
36326.       flux_down_clear%dim_1%EX = 0
36326.       flux_down_clear%dim_1%SM = 1
36326.       flux_down_clear%dim_2%LB = 1
36326.       flux_down_clear%dim_2%EX = 0
36326.       flux_down_clear%dim_2%SM = 1
36326.       flux_down_clear%dim_3%LB = 1
36326.       flux_down_clear%dim_3%EX = 0
36326.       flux_down_clear%dim_3%SM = 1
36334.       flux_net = $_StaticDV_P9
36334.       flux_net%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
36334.       flux_net%header%el_len = 64
36334.       flux_net%header%assoc = 0
36334.       flux_net%header%ptr_alloc = 0
36334.       flux_net%header%p_or_a = 2
36334.       flux_net%header%a_contig = 1
36334.       flux_net%header%n_dim = 3
36334.       flux_net%header%orig_base = 0
36334.       flux_net%header%orig_size = 0
36334.       flux_net%header%n_codim = 0
36334.       flux_net%header%dv_versn = 2
36334.       flux_net%header%dv_smunit = 64
36334.       flux_net%header%d_type = 0
36334.       flux_net%header%n_params = 0
36334.       flux_net%header%d_type_idx = 13
36334.       flux_net%dim_1%LB = 1
36334.       flux_net%dim_1%EX = 0
36334.       flux_net%dim_1%SM = 1
36334.       flux_net%dim_2%LB = 1
36334.       flux_net%dim_2%EX = 0
36334.       flux_net%dim_2%SM = 1
36334.       flux_net%dim_3%LB = 1
36334.       flux_net%dim_3%EX = 0
36334.       flux_net%dim_3%SM = 1
36324.       flux_net_clear = $_StaticDV_P10
36324.       flux_net_clear%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
36324.       flux_net_clear%header%el_len = 64
36324.       flux_net_clear%header%assoc = 0
36324.       flux_net_clear%header%ptr_alloc = 0
36324.       flux_net_clear%header%p_or_a = 2
36324.       flux_net_clear%header%a_contig = 1
36324.       flux_net_clear%header%n_dim = 3
36324.       flux_net_clear%header%orig_base = 0
36324.       flux_net_clear%header%orig_size = 0
36324.       flux_net_clear%header%n_codim = 0
36324.       flux_net_clear%header%dv_versn = 2
36324.       flux_net_clear%header%dv_smunit = 64
36324.       flux_net_clear%header%d_type = 0
36324.       flux_net_clear%header%n_params = 0
36324.       flux_net_clear%header%d_type_idx = 13
36324.       flux_net_clear%dim_1%LB = 1
36324.       flux_net_clear%dim_1%EX = 0
36324.       flux_net_clear%dim_1%SM = 1
36324.       flux_net_clear%dim_2%LB = 1
36324.       flux_net_clear%dim_2%EX = 0
36324.       flux_net_clear%dim_2%SM = 1
36324.       flux_net_clear%dim_3%LB = 1
36324.       flux_net_clear%dim_3%EX = 0
36324.       flux_net_clear%dim_3%SM = 1
36332.       flux_up = $_StaticDV_P11
36332.       flux_up%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
36332.       flux_up%header%el_len = 64
36332.       flux_up%header%assoc = 0
36332.       flux_up%header%ptr_alloc = 0
36332.       flux_up%header%p_or_a = 2
36332.       flux_up%header%a_contig = 1
36332.       flux_up%header%n_dim = 3
36332.       flux_up%header%orig_base = 0
36332.       flux_up%header%orig_size = 0
36332.       flux_up%header%n_codim = 0
36332.       flux_up%header%dv_versn = 2
36332.       flux_up%header%dv_smunit = 64
36332.       flux_up%header%d_type = 0
36332.       flux_up%header%n_params = 0
36332.       flux_up%header%d_type_idx = 13
36332.       flux_up%dim_1%LB = 1
36332.       flux_up%dim_1%EX = 0
36332.       flux_up%dim_1%SM = 1
36332.       flux_up%dim_2%LB = 1
36332.       flux_up%dim_2%EX = 0
36332.       flux_up%dim_2%SM = 1
36332.       flux_up%dim_3%LB = 1
36332.       flux_up%dim_3%EX = 0
36332.       flux_up%dim_3%SM = 1
36299.       flux_up_clear = $_StaticDV_P12
36299.       flux_up_clear%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
36299.       flux_up_clear%header%el_len = 64
36299.       flux_up_clear%header%assoc = 0
36299.       flux_up_clear%header%ptr_alloc = 0
36299.       flux_up_clear%header%p_or_a = 2
36299.       flux_up_clear%header%a_contig = 1
36299.       flux_up_clear%header%n_dim = 3
36299.       flux_up_clear%header%orig_base = 0
36299.       flux_up_clear%header%orig_size = 0
36299.       flux_up_clear%header%n_codim = 0
36299.       flux_up_clear%header%dv_versn = 2
36299.       flux_up_clear%header%dv_smunit = 64
36299.       flux_up_clear%header%d_type = 0
36299.       flux_up_clear%header%n_params = 0
36299.       flux_up_clear%header%d_type_idx = 13
36299.       flux_up_clear%dim_1%LB = 1
36299.       flux_up_clear%dim_1%EX = 0
36299.       flux_up_clear%dim_1%SM = 1
36299.       flux_up_clear%dim_2%LB = 1
36299.       flux_up_clear%dim_2%EX = 0
36299.       flux_up_clear%dim_2%SM = 1
36299.       flux_up_clear%dim_3%LB = 1
36299.       flux_up_clear%dim_3%EX = 0
36299.       flux_up_clear%dim_3%SM = 1
36253.       frac_cloud = $_StaticDV_P13
36253.       frac_cloud%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
36253.       frac_cloud%header%el_len = 64
36253.       frac_cloud%header%assoc = 0
36253.       frac_cloud%header%ptr_alloc = 0
36253.       frac_cloud%header%p_or_a = 2
36253.       frac_cloud%header%a_contig = 1
36253.       frac_cloud%header%n_dim = 3
36253.       frac_cloud%header%orig_base = 0
36253.       frac_cloud%header%orig_size = 0
36253.       frac_cloud%header%n_codim = 0
36253.       frac_cloud%header%dv_versn = 2
36253.       frac_cloud%header%dv_smunit = 64
36253.       frac_cloud%header%d_type = 0
36253.       frac_cloud%header%n_params = 0
36253.       frac_cloud%header%d_type_idx = 13
36253.       frac_cloud%dim_1%LB = 1
36253.       frac_cloud%dim_1%EX = 0
36253.       frac_cloud%dim_1%SM = 1
36253.       frac_cloud%dim_2%LB = 1
36253.       frac_cloud%dim_2%EX = 0
36253.       frac_cloud%dim_2%SM = 1
36253.       frac_cloud%dim_3%LB = 1
36253.       frac_cloud%dim_3%EX = 0
36253.       frac_cloud%dim_3%SM = 1
36180.       gas_mix_ratio = $_StaticDV_P14
36180.       gas_mix_ratio%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
36180.       gas_mix_ratio%header%el_len = 64
36180.       gas_mix_ratio%header%assoc = 0
36180.       gas_mix_ratio%header%ptr_alloc = 0
36180.       gas_mix_ratio%header%p_or_a = 2
36180.       gas_mix_ratio%header%a_contig = 1
36180.       gas_mix_ratio%header%n_dim = 3
36180.       gas_mix_ratio%header%orig_base = 0
36180.       gas_mix_ratio%header%orig_size = 0
36180.       gas_mix_ratio%header%n_codim = 0
36180.       gas_mix_ratio%header%dv_versn = 2
36180.       gas_mix_ratio%header%dv_smunit = 64
36180.       gas_mix_ratio%header%d_type = 0
36180.       gas_mix_ratio%header%n_params = 0
36180.       gas_mix_ratio%header%d_type_idx = 13
36180.       gas_mix_ratio%dim_1%LB = 1
36180.       gas_mix_ratio%dim_1%EX = 0
36180.       gas_mix_ratio%dim_1%SM = 1
36180.       gas_mix_ratio%dim_2%LB = 1
36180.       gas_mix_ratio%dim_2%EX = 0
36180.       gas_mix_ratio%dim_2%SM = 1
36180.       gas_mix_ratio%dim_3%LB = 1
36180.       gas_mix_ratio%dim_3%EX = 0
36180.       gas_mix_ratio%dim_3%SM = 1
36199.       t$10147 = 8 * ( 7 + t$10144 + 8 * _zla( 0, lwdat%dim%nd_band ) ) / 8
36199.       t$10149 = t$10147 + 8 * _zla( 0, lwdat%dim%nd_band )
36205.       t$10150 = 8 * ( 7 + t$10147 + 8 * _zla( 0, lwdat%dim%nd_band ) ) / 8
36205.       t$10152 = t$10150 + 8 * _zla( 0, lwdat%dim%nd_band ) * _zla( 0, lwdat%dim%nd_phase_term )
36202.       t$10153 = 8 * ( 7 + t$10150 + 8 * _zla( 0, lwdat%dim%nd_band ) * _zla( 0, lwdat%dim%nd_phase_term ) ) / 8
36202.       t$10155 = t$10153 + 8 * _zla( 0, lwdat%dim%nd_band )
36247.       t$10157 = t$10153 + 12 * _zla( 0, lwdat%dim%nd_band )
36096.       t$10159 = t$10153 + 16 * _zla( 0, lwdat%dim%nd_band )
36042.       t$10161 = t$10153 + 16 * _zla( 0, lwdat%dim%nd_band ) + 4 * _zla( 0, lwdat%dim%nd_species )
36118.       t$10163 = t$10153 + 4 * _zla( 0, lwdat%dim%nd_species ) + 20 * _zla( 0, lwdat%dim%nd_band )
36211.       t$10165 = t$10153 + 4 * _zla( 0, lwdat%dim%nd_species ) + 20 * _zla( 0, lwdat%dim%nd_band ) + 4 * _zla( 0, lwdat%dim%nd_aerosol_species )
36140.       t$10167 = t$10153 + 8 * _zla( 0, lwdat%dim%nd_aerosol_species ) + 4 * _zla( 0, lwdat%dim%nd_species ) + 20 * _zla( 0, lwdat%dim%nd_band )
36261.       pres = $_StaticDV_P15
36261.       pres%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
36261.       pres%header%el_len = 64
36261.       pres%header%assoc = 0
36261.       pres%header%ptr_alloc = 0
36261.       pres%header%p_or_a = 2
36261.       pres%header%a_contig = 1
36261.       pres%header%n_dim = 2
36261.       pres%header%orig_base = 0
36261.       pres%header%orig_size = 0
36261.       pres%header%n_codim = 0
36261.       pres%header%dv_versn = 2
36261.       pres%header%dv_smunit = 64
36261.       pres%header%d_type = 0
36261.       pres%header%n_params = 0
36261.       pres%header%d_type_idx = 13
36261.       pres%dim_1%LB = 1
36261.       pres%dim_1%EX = 0
36261.       pres%dim_1%SM = 1
36261.       pres%dim_2%LB = 1
36261.       pres%dim_2%EX = 0
36261.       pres%dim_2%SM = 1
36214.       rho_alb = $_StaticDV_P16
36214.       rho_alb%base_addr = pointer to array[1] of array[1] of array[1] of real (kind=8)( 0 )
36214.       rho_alb%header%el_len = 64
36214.       rho_alb%header%assoc = 0
36214.       rho_alb%header%ptr_alloc = 0
36214.       rho_alb%header%p_or_a = 2
36214.       rho_alb%header%a_contig = 1
36214.       rho_alb%header%n_dim = 3
36214.       rho_alb%header%orig_base = 0
36214.       rho_alb%header%orig_size = 0
36214.       rho_alb%header%n_codim = 0
36214.       rho_alb%header%dv_versn = 2
36214.       rho_alb%header%dv_smunit = 64
36214.       rho_alb%header%d_type = 0
36214.       rho_alb%header%n_params = 0
36214.       rho_alb%header%d_type_idx = 13
36214.       rho_alb%dim_1%LB = 1
36214.       rho_alb%dim_1%EX = 0
36214.       rho_alb%dim_1%SM = 1
36214.       rho_alb%dim_2%LB = 1
36214.       rho_alb%dim_2%EX = 0
36214.       rho_alb%dim_2%SM = 1
36214.       rho_alb%dim_3%LB = 1
36214.       rho_alb%dim_3%EX = 0
36214.       rho_alb%dim_3%SM = 1
35859.       t$10168 = 2 * _zla( 0, lwdat%dim%nd_band )
36355.       t$10169 = 8 * ( 7 + t$10153 + 8 * _zla( 0, lwdat%dim%nd_aerosol_species ) + 4 * _zla( 0, lwdat%dim%nd_species ) + 20 * _zla( 0, lwdat%dim%nd_band ) ) / 8
36239.       t$10171 = t$10169 + 16 * _zla( 0, lwdat%dim%nd_band )
36142.       solar_irrad = $_StaticDV_P17
36142.       solar_irrad%base_addr = pointer to array[1] of real (kind=8)( 0 )
36142.       solar_irrad%header%el_len = 64
36142.       solar_irrad%header%assoc = 0
36142.       solar_irrad%header%ptr_alloc = 0
36142.       solar_irrad%header%p_or_a = 2
36142.       solar_irrad%header%a_contig = 1
36142.       solar_irrad%header%n_dim = 1
36142.       solar_irrad%header%orig_base = 0
36142.       solar_irrad%header%orig_size = 0
36142.       solar_irrad%header%n_codim = 0
36142.       solar_irrad%header%dv_versn = 2
36142.       solar_irrad%header%dv_smunit = 64
36142.       solar_irrad%header%d_type = 0
36142.       solar_irrad%header%n_params = 0
36142.       solar_irrad%header%d_type_idx = 13
36142.       solar_irrad%dim_1%LB = 1
36142.       solar_irrad%dim_1%EX = 0
36142.       solar_irrad%dim_1%SM = 1
36268.       temp = $_StaticDV_P18
36268.       temp%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
36268.       temp%header%el_len = 64
36268.       temp%header%assoc = 0
36268.       temp%header%ptr_alloc = 0
36268.       temp%header%p_or_a = 2
36268.       temp%header%a_contig = 1
36268.       temp%header%n_dim = 2
36268.       temp%header%orig_base = 0
36268.       temp%header%orig_size = 0
36268.       temp%header%n_codim = 0
36268.       temp%header%dv_versn = 2
36268.       temp%header%dv_smunit = 64
36268.       temp%header%d_type = 0
36268.       temp%header%n_params = 0
36268.       temp%header%d_type_idx = 13
36268.       temp%dim_1%LB = 1
36268.       temp%dim_1%EX = 0
36268.       temp%dim_1%SM = 1
36268.       temp%dim_2%LB = 1
36268.       temp%dim_2%EX = 0
36268.       temp%dim_2%SM = 1
36144.       t_ground = $_StaticDV_P19
36144.       t_ground%base_addr = pointer to array[1] of real (kind=8)( 0 )
36144.       t_ground%header%el_len = 64
36144.       t_ground%header%assoc = 0
36144.       t_ground%header%ptr_alloc = 0
36144.       t_ground%header%p_or_a = 2
36144.       t_ground%header%a_contig = 1
36144.       t_ground%header%n_dim = 1
36144.       t_ground%header%orig_base = 0
36144.       t_ground%header%orig_size = 0
36144.       t_ground%header%n_codim = 0
36144.       t_ground%header%dv_versn = 2
36144.       t_ground%header%dv_smunit = 64
36144.       t_ground%header%d_type = 0
36144.       t_ground%header%n_params = 0
36144.       t_ground%header%d_type_idx = 13
36144.       t_ground%dim_1%LB = 1
36144.       t_ground%dim_1%EX = 0
36144.       t_ground%dim_1%SM = 1
36355.       t_level = $_StaticDV_P20
36355.       t_level%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
36355.       t_level%header%el_len = 64
36355.       t_level%header%assoc = 0
36355.       t_level%header%ptr_alloc = 0
36355.       t_level%header%p_or_a = 2
36355.       t_level%header%a_contig = 1
36355.       t_level%header%n_dim = 2
36355.       t_level%header%orig_base = 0
36355.       t_level%header%orig_size = 0
36355.       t_level%header%n_codim = 0
36355.       t_level%header%dv_versn = 2
36355.       t_level%header%dv_smunit = 64
36355.       t_level%header%d_type = 0
36355.       t_level%header%n_params = 0
36355.       t_level%header%d_type_idx = 13
36355.       t_level%dim_1%LB = 1
36355.       t_level%dim_1%EX = 0
36355.       t_level%dim_1%SM = 1
36355.       t_level%dim_2%LB = 1
36355.       t_level%dim_2%EX = 0
36355.       t_level%dim_2%SM = 1
36352.       t$10172 = 8 * ( 7 + t$10169 + 16 * _zla( 0, lwdat%dim%nd_band ) ) / 8
36352.       t$10174 = t$10172 + 8 * _zla( 0, lwdat%dim%nd_band )
36017.       t$10175 = 8 * ( 7 + t$10172 + 8 * _zla( 0, lwdat%dim%nd_band ) ) / 8
36296.       t$10177 = t$10175 + 8 * _zla( 0, lwdat%dim%nd_band )
36241.       w_cloud = $_StaticDV_P21
36241.       w_cloud%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
36241.       w_cloud%header%el_len = 64
36241.       w_cloud%header%assoc = 0
36241.       w_cloud%header%ptr_alloc = 0
36241.       w_cloud%header%p_or_a = 2
36241.       w_cloud%header%a_contig = 1
36241.       w_cloud%header%n_dim = 2
36241.       w_cloud%header%orig_base = 0
36241.       w_cloud%header%orig_size = 0
36241.       w_cloud%header%n_codim = 0
36241.       w_cloud%header%dv_versn = 2
36241.       w_cloud%header%dv_smunit = 64
36241.       w_cloud%header%d_type = 0
36241.       w_cloud%header%n_params = 0
36241.       w_cloud%header%d_type_idx = 13
36241.       w_cloud%dim_1%LB = 1
36241.       w_cloud%dim_1%EX = 0
36241.       w_cloud%dim_1%SM = 1
36241.       w_cloud%dim_2%LB = 1
36241.       w_cloud%dim_2%EX = 0
36241.       w_cloud%dim_2%SM = 1
36017.       zen_0 = $_StaticDV_P22
36017.       zen_0%base_addr = pointer to array[1] of real (kind=8)( 0 )
36017.       zen_0%header%el_len = 64
36017.       zen_0%header%assoc = 0
36017.       zen_0%header%ptr_alloc = 0
36017.       zen_0%header%p_or_a = 2
36017.       zen_0%header%a_contig = 1
36017.       zen_0%header%n_dim = 1
36017.       zen_0%header%orig_base = 0
36017.       zen_0%header%orig_size = 0
36017.       zen_0%header%n_codim = 0
36017.       zen_0%header%dv_versn = 2
36017.       zen_0%header%dv_smunit = 64
36017.       zen_0%header%d_type = 0
36017.       zen_0%header%n_params = 0
36017.       zen_0%header%d_type_idx = 13
36017.       zen_0%dim_1%LB = 1
36017.       zen_0%dim_1%EX = 0
36017.       zen_0%dim_1%SM = 1
35859.       t$10108 = int( _alloc( t$10175 + 8 * _zla( 0, lwdat%dim%nd_band ) ), 8 )
36222.       t$10109 = t$10108
36228.       t$10116 = t$10115 + t$10108
36218.       t$10120 = t$10119 + t$10108
36225.       t$10123 = t$10122 + t$10108
36306.       t$10130 = t$10129 + t$10108
36049.       t$10134 = t$10133 + t$10108
36177.       t$10138 = t$10137 + t$10108
36183.       t$10142 = t$10141 + t$10108
36180.       t$10145 = t$10144 + t$10108
36199.       t$10148 = t$10147 + t$10108
36205.       t$10151 = t$10150 + t$10108
36202.       t$10154 = t$10153 + t$10108
36247.       t$10156 = t$10153 + t$10108 + 8 * _zla( 0, lwdat%dim%nd_band )
36096.       t$10158 = t$10153 + t$10108 + 12 * _zla( 0, lwdat%dim%nd_band )
36042.       t$10160 = t$10153 + t$10108 + 16 * _zla( 0, lwdat%dim%nd_band )
36118.       t$10162 = t$10153 + t$10108 + 16 * _zla( 0, lwdat%dim%nd_band ) + 4 * _zla( 0, lwdat%dim%nd_species )
36211.       t$10164 = t$10153 + t$10108 + 4 * _zla( 0, lwdat%dim%nd_species ) + 20 * _zla( 0, lwdat%dim%nd_band )
36214.       t$10166 = t$10153 + t$10108 + 4 * _zla( 0, lwdat%dim%nd_species ) + 20 * _zla( 0, lwdat%dim%nd_band ) + 4 * _zla( 0, lwdat%dim%nd_aerosol_species )
36355.       t$10170 = t$10169 + t$10108
36352.       t$10173 = t$10172 + t$10108
36017.       t$10176 = t$10175 + t$10108
36373.       $F_A33 = ncols
36373.       if ( ncols > 0 ) then
36373.          $I_L36373_446 = 0
36373. !dir$ ivdep
36373.          do
36373.             lw_toa_up_clr(1 + $I_L36373_446) = 0.0
36373.             $I_L36373_446 = 1 + $I_L36373_446
36373.             if ( $I_L36373_446 >= $F_A33 ) exit
36373.          enddo
36373.       endif
36374.       $F_A34 = ncols
36374.       if ( ncols > 0 ) then
36374.          $I_L36374_448 = 0
36374. !dir$ ivdep
36374.          do
36374.             lw_toa_up(1 + $I_L36374_448) = 0.0
36374.             $I_L36374_448 = 1 + $I_L36374_448
36374.             if ( $I_L36374_448 >= $F_A34 ) exit
36374.          enddo
36374.       endif
36377.       $F_A35 = ncols
36377.       if ( ncols > 0 ) then
36377.          $I_L36377_450 = 0
36377. !dir$ ivdep
36377.          do
36377.             lw_sfc_net_clr(1 + $I_L36377_450) = 0.0
36377.             $I_L36377_450 = 1 + $I_L36377_450
36377.             if ( $I_L36377_450 >= $F_A35 ) exit
36377.          enddo
36377.       endif
36378.       $F_A36 = ncols
36378.       if ( ncols > 0 ) then
36378.          $I_L36378_452 = 0
36378. !dir$ ivdep
36378.          do
36378.             lw_sfc_net(1 + $I_L36378_452) = 0.0
36378.             $I_L36378_452 = 1 + $I_L36378_452
36378.             if ( $I_L36378_452 >= $F_A36 ) exit
36378.          enddo
36378.       endif
36379.       $F_A37 = ncols
36379.       if ( ncols > 0 ) then
36379.          $I_L36379_454 = 0
36379. !dir$ ivdep
36379.          do
36379.             lw_sfc_down_clr(1 + $I_L36379_454) = 0.0
36379.             $I_L36379_454 = 1 + $I_L36379_454
36379.             if ( $I_L36379_454 >= $F_A37 ) exit
36379.          enddo
36379.       endif
36380.       $F_A38 = ncols
36380.       if ( ncols > 0 ) then
36380.          $I_L36380_456 = 0
36380. !dir$ ivdep
36380.          do
36380.             lw_sfc_down(1 + $I_L36380_456) = 0.0
36380.             $I_L36380_456 = 1 + $I_L36380_456
36380.             if ( $I_L36380_456 >= $F_A38 ) exit
36380.          enddo
36380.       endif
36375.       $F_A39 = kmax
36375.       $F_A40 = ncols
36375.       if ( and( -$F_A40, -$F_A39 ) < 0 ) then
36375.          $I_L36375_569 = 0
36375.          do
36375.             $I_L36375_458 = 0
36375. !dir$ ivdep
36375.             do
36375.                lw_cool_clr(1 + $I_L36375_458, 1 + $I_L36375_569) = 0.0
36375.                $I_L36375_458 = 1 + $I_L36375_458
36375.                if ( $I_L36375_458 >= $F_A40 ) exit
36375.             enddo
36375.             $I_L36375_569 = 1 + $I_L36375_569
36375.             if ( $I_L36375_569 >= $F_A39 ) exit
36375.          enddo
36375.       endif
36376.       $F_A41 = kmax
36376.       $F_A42 = ncols
36376.       if ( and( -$F_A42, -$F_A41 ) < 0 ) then
36376.          $I_L36376_571 = 0
36376.          do
36376.             $I_L36376_460 = 0
36376. !dir$ ivdep
36376.             do
36376.                lw_cool(1 + $I_L36376_460, 1 + $I_L36376_571) = 0.0
36376.                $I_L36376_460 = 1 + $I_L36376_460
36376.                if ( $I_L36376_460 >= $F_A42 ) exit
36376.             enddo
36376.             $I_L36376_571 = 1 + $I_L36376_571
36376.             if ( $I_L36376_571 >= $F_A41 ) exit
36376.          enddo
36376.       endif
36382.       ierr = 0
36390.       nd_profile = ncols
36391.       nd_layer = kmax
36393.       nd_2sg_profile = ncols
36394.       nd_flux_profile = ncols
36400.       pres%header%a_contig = 1
36400.       pres%dim_1%LB = 1
36400.       pres%dim_1%EX = ( max( 0, ncols ) )
36400.       pres%dim_1%SM = 1
36400.       pres%dim_2%LB = 1
36400.       pres%dim_2%EX = ( max( 0, kmax ) )
36400.       pres%dim_2%SM = ( max( 0, ncols ) )
36400.       $_allo_P23(0) = 0x1000000000001L
36400.       $_allo_P23(1) = loc( pres )
36400.       call __allocate( $_allo_P23, 0, 0, _fcd( 0, 0 ) )
36401.       $F_A43 = ( max( 0, kmax ) )
36401.       $F_A44 = ( max( 0, ncols ) )
36401.       if ( and( -$F_A44, -$F_A43 ) < 0 ) then
36401.          $I_L36401_573 = 0
36401.          do
36401.             $I_L36401_462 = 0
36401. !dir$ ivdep
36401.             do
36401.                (pres%base_addr)(1 + $I_L36401_462, 1 + $I_L36401_573, 0) = 0.0
36401.                $I_L36401_462 = 1 + $I_L36401_462
36401.                if ( $I_L36401_462 >= $F_A44 ) exit
36401.             enddo
36401.             $I_L36401_573 = 1 + $I_L36401_573
36401.             if ( $I_L36401_573 >= $F_A43 ) exit
36401.          enddo
36401.       endif
36402.       temp%header%a_contig = 1
36402.       temp%dim_1%LB = 1
36402.       temp%dim_1%EX = ( max( 0, ncols ) )
36402.       temp%dim_1%SM = 1
36402.       temp%dim_2%LB = 1
36402.       temp%dim_2%EX = ( max( 0, kmax ) )
36402.       temp%dim_2%SM = ( max( 0, ncols ) )
36402.       $_allo_P24(0) = 0x1000000000001L
36402.       $_allo_P24(1) = loc( temp )
36402.       call __allocate( $_allo_P24, 0, 0, _fcd( 0, 0 ) )
36403.       $F_A45 = ( max( 0, kmax ) )
36403.       $F_A46 = ( max( 0, ncols ) )
36403.       if ( and( -$F_A46, -$F_A45 ) < 0 ) then
36403.          $I_L36403_575 = 0
36403.          do
36403.             $I_L36403_464 = 0
36403. !dir$ ivdep
36403.             do
36403.                (temp%base_addr)(1 + $I_L36403_464, 1 + $I_L36403_575, 0) = 0.0
36403.                $I_L36403_464 = 1 + $I_L36403_464
36403.                if ( $I_L36403_464 >= $F_A46 ) exit
36403.             enddo
36403.             $I_L36403_575 = 1 + $I_L36403_575
36403.             if ( $I_L36403_575 >= $F_A45 ) exit
36403.          enddo
36403.       endif
36404.       d_mass%header%a_contig = 1
36404.       d_mass%dim_1%LB = 1
36404.       d_mass%dim_1%EX = ( max( 0, ncols ) )
36404.       d_mass%dim_1%SM = 1
36404.       d_mass%dim_2%LB = 1
36404.       d_mass%dim_2%EX = ( max( 0, kmax ) )
36404.       d_mass%dim_2%SM = ( max( 0, ncols ) )
36404.       $_allo_P25(0) = 0x1000000000001L
36404.       $_allo_P25(1) = loc( d_mass )
36404.       call __allocate( $_allo_P25, 0, 0, _fcd( 0, 0 ) )
36405.       $F_A47 = ( max( 0, kmax ) )
36405.       $F_A48 = ( max( 0, ncols ) )
36405.       if ( and( -$F_A48, -$F_A47 ) < 0 ) then
36405.          $I_L36405_577 = 0
36405.          do
36405.             $I_L36405_466 = 0
36405. !dir$ ivdep
36405.             do
36405.                (d_mass%base_addr)(1 + $I_L36405_466, 1 + $I_L36405_577, 0) = 0.0
36405.                $I_L36405_466 = 1 + $I_L36405_466
36405.                if ( $I_L36405_466 >= $F_A48 ) exit
36405.             enddo
36405.             $I_L36405_577 = 1 + $I_L36405_577
36405.             if ( $I_L36405_577 >= $F_A47 ) exit
36405.          enddo
36405.       endif
36406.       t_ground%header%a_contig = 1
36406.       t_ground%dim_1%LB = 1
36406.       t_ground%dim_1%EX = ( max( 0, ncols ) )
36406.       t_ground%dim_1%SM = 1
36406.       $_allo_P26(0) = 0x1000000000001L
36406.       $_allo_P26(1) = loc( t_ground )
36406.       call __allocate( $_allo_P26, 0, 0, _fcd( 0, 0 ) )
36407.       $F_A49 = ( max( 0, ncols ) )
36407.       if ( ncols > 0 ) then
36407.          $I_L36407_468 = 0
36407. !dir$ ivdep
36407.          do
36407.             (t_ground%base_addr)(1 + $I_L36407_468, 0) = 0.0
36407.             $I_L36407_468 = 1 + $I_L36407_468
36407.             if ( $I_L36407_468 >= $F_A49 ) exit
36407.          enddo
36407.       endif
36408.       t_level%header%a_contig = 1
36408.       t_level%dim_1%LB = 1
36408.       t_level%dim_1%EX = ( max( 0, ncols ) )
36408.       t_level%dim_1%SM = 1
36408.       t_level%dim_2%LB = 0
36408.       t_level%dim_2%EX = ( max( 0, 1 + kmax ) )
36408.       t_level%dim_2%SM = ( max( 0, ncols ) )
36408.       $_allo_P27(0) = 0x1000000000001L
36408.       $_allo_P27(1) = loc( t_level )
36408.       call __allocate( $_allo_P27, 0, 0, _fcd( 0, 0 ) )
36409.       $F_A50 = ( max( 0, 1 + kmax ) )
36409.       $F_A51 = ( max( 0, ncols ) )
36409.       if ( and( -$F_A51, -$F_A50 ) < 0 ) then
36409.          $I_L36409_579 = 0
36409.          do
36409.             $I_L36409_470 = 0
36409. !dir$ ivdep
36409.             do
36409.                (t_level%base_addr)(1 + $I_L36409_470, $I_L36409_579, 0) = 0.0
36409.                $I_L36409_470 = 1 + $I_L36409_470
36409.                if ( $I_L36409_470 >= $F_A51 ) exit
36409.             enddo
36409.             $I_L36409_579 = 1 + $I_L36409_579
36409.             if ( $I_L36409_579 >= $F_A50 ) exit
36409.          enddo
36409.       endif
36410.       zen_0%header%a_contig = 1
36410.       zen_0%dim_1%LB = 1
36410.       zen_0%dim_1%EX = ( max( 0, ncols ) )
36410.       zen_0%dim_1%SM = 1
36410.       $_allo_P28(0) = 0x1000000000001L
36410.       $_allo_P28(1) = loc( zen_0 )
36410.       call __allocate( $_allo_P28, 0, 0, _fcd( 0, 0 ) )
36411.       $F_A52 = ( max( 0, ncols ) )
36411.       if ( ncols > 0 ) then
36411.          $I_L36411_472 = 0
36411. !dir$ ivdep
36411.          do
36411.             (zen_0%base_addr)(1 + $I_L36411_472, 0) = 0.0
36411.             $I_L36411_472 = 1 + $I_L36411_472
36411.             if ( $I_L36411_472 >= $F_A52 ) exit
36411.          enddo
36411.       endif
36412.       solar_irrad%header%a_contig = 1
36412.       solar_irrad%dim_1%LB = 1
36412.       solar_irrad%dim_1%EX = ( max( 0, ncols ) )
36412.       solar_irrad%dim_1%SM = 1
36412.       $_allo_P29(0) = 0x1000000000001L
36412.       $_allo_P29(1) = loc( solar_irrad )
36412.       call __allocate( $_allo_P29, 0, 0, _fcd( 0, 0 ) )
36413.       $F_A53 = ( max( 0, ncols ) )
36413.       if ( ncols > 0 ) then
36413.          $I_L36413_474 = 0
36413. !dir$ ivdep
36413.          do
36413.             (solar_irrad%base_addr)(1 + $I_L36413_474, 0) = 0.0
36413.             $I_L36413_474 = 1 + $I_L36413_474
36413.             if ( $I_L36413_474 >= $F_A53 ) exit
36413.          enddo
36413.       endif
36414.       rho_alb%header%a_contig = 1
36414.       rho_alb%dim_1%LB = 1
36414.       rho_alb%dim_1%EX = ( max( 0, ncols ) )
36414.       rho_alb%dim_1%SM = 1
36414.       rho_alb%dim_2%LB = 1
36414.       rho_alb%dim_2%EX = 2
36414.       rho_alb%dim_2%SM = ( max( 0, ncols ) )
36414.       rho_alb%dim_3%LB = 1
36414.       rho_alb%dim_3%EX = ( max( 0, lwdat%dim%nd_band ) )
36414.       rho_alb%dim_3%SM = ( 2 * max( 0, ncols ) )
36414.       $_allo_P30(0) = 0x1000000000001L
36414.       $_allo_P30(1) = loc( rho_alb )
36414.       call __allocate( $_allo_P30, 0, 0, _fcd( 0, 0 ) )
36415.       $F_A54 = ( max( 0, lwdat%dim%nd_band ) )
36415.       $F_A55 = ( max( 0, ncols ) )
36415.       if ( and( -$F_A55, -$F_A54 ) < 0 ) then
36415.          $SC_lwdat_I46 = lwdat%dim%nd_band
36415.          $I_L36415_640 = 0
36415.          do
36415.             $I_L36415_581 = 0
36415.             do
36415.                $I_L36415_476 = 0
36415. !dir$ ivdep
36415.                do
36415.                   (rho_alb%base_addr)(1 + $I_L36415_476, 1 + $I_L36415_581, 1 + $I_L36415_640, 0) = 0.0
36415.                   $I_L36415_476 = 1 + $I_L36415_476
36415.                   if ( $I_L36415_476 >= $F_A55 ) exit
36415.                enddo
36415.                $I_L36415_581 = 1 + $I_L36415_581
36415.                if ( $I_L36415_581 >= 2 ) exit
36415.             enddo
36415.             $I_L36415_640 = 1 + $I_L36415_640
36415.             if ( $I_L36415_640 >= $F_A54 ) exit
36415.          enddo
36415.       endif
36417.       gas_mix_ratio%header%a_contig = 1
36417.       gas_mix_ratio%dim_1%LB = 1
36417.       gas_mix_ratio%dim_1%EX = ( max( 0, ncols ) )
36417.       gas_mix_ratio%dim_1%SM = 1
36417.       gas_mix_ratio%dim_2%LB = 1
36417.       gas_mix_ratio%dim_2%EX = ( max( 0, kmax ) )
36417.       gas_mix_ratio%dim_2%SM = ( max( 0, ncols ) )
36417.       gas_mix_ratio%dim_3%LB = 1
36417.       gas_mix_ratio%dim_3%EX = ( max( 0, lwdat%dim%nd_species ) )
36417.       gas_mix_ratio%dim_3%SM = ( max( 0, ncols ) * max( 0, kmax ) )
36417.       $_allo_P31(0) = 0x1000000000001L
36417.       $_allo_P31(1) = loc( gas_mix_ratio )
36417.       call __allocate( $_allo_P31, 0, 0, _fcd( 0, 0 ) )
36418.       $F_A56 = ( max( 0, lwdat%dim%nd_species ) )
36418.       $F_A57 = ( max( 0, kmax ) )
36418.       $F_A58 = ( max( 0, ncols ) )
36418.       if ( and( and( -$F_A57, -$F_A56 ), -$F_A58 ) < 0 ) then
36418.          $SC_lwdat_I47 = lwdat%dim%nd_species
36418.          $I_L36418_642 = 0
36418.          do
36418.             $I_L36418_583 = 0
36418.             do
36418.                $I_L36418_478 = 0
36418. !dir$ ivdep
36418.                do
36418.                   (gas_mix_ratio%base_addr)(1 + $I_L36418_478, 1 + $I_L36418_583, 1 + $I_L36418_642, 0) = 0.0
36418.                   $I_L36418_478 = 1 + $I_L36418_478
36418.                   if ( $I_L36418_478 >= $F_A58 ) exit
36418.                enddo
36418.                $I_L36418_583 = 1 + $I_L36418_583
36418.                if ( $I_L36418_583 >= $F_A57 ) exit
36418.             enddo
36418.             $I_L36418_642 = 1 + $I_L36418_642
36418.             if ( $I_L36418_642 >= $F_A56 ) exit
36418.          enddo
36418.       endif
36419.       aerosol_mix_ratio%header%a_contig = 1
36419.       aerosol_mix_ratio%dim_1%LB = 1
36419.       aerosol_mix_ratio%dim_1%EX = ( max( 0, ncols ) )
36419.       aerosol_mix_ratio%dim_1%SM = 1
36419.       aerosol_mix_ratio%dim_2%LB = 1
36419.       aerosol_mix_ratio%dim_2%EX = ( max( 0, kmax ) )
36419.       aerosol_mix_ratio%dim_2%SM = ( max( 0, ncols ) )
36419.       aerosol_mix_ratio%dim_3%LB = 1
36419.       aerosol_mix_ratio%dim_3%EX = ( max( 0, lwdat%dim%nd_aerosol_species ) )
36419.       aerosol_mix_ratio%dim_3%SM = ( max( 0, ncols ) * max( 0, kmax ) )
36419.       $_allo_P32(0) = 0x1000000000001L
36419.       $_allo_P32(1) = loc( aerosol_mix_ratio )
36419.       call __allocate( $_allo_P32, 0, 0, _fcd( 0, 0 ) )
36420.       $F_A59 = ( max( 0, lwdat%dim%nd_aerosol_species ) )
36420.       $F_A60 = ( max( 0, kmax ) )
36420.       $F_A61 = ( max( 0, ncols ) )
36420.       if ( and( and( -$F_A60, -$F_A59 ), -$F_A61 ) < 0 ) then
36420.          $SC_lwdat_I48 = lwdat%dim%nd_aerosol_species
36420.          $I_L36420_644 = 0
36420.          do
36420.             $I_L36420_585 = 0
36420.             do
36420.                $I_L36420_480 = 0
36420. !dir$ ivdep
36420.                do
36420.                   (aerosol_mix_ratio%base_addr)(1 + $I_L36420_480, 1 + $I_L36420_585, 1 + $I_L36420_644, 0) = 0.0
36420.                   $I_L36420_480 = 1 + $I_L36420_480
36420.                   if ( $I_L36420_480 >= $F_A61 ) exit
36420.                enddo
36420.                $I_L36420_585 = 1 + $I_L36420_585
36420.                if ( $I_L36420_585 >= $F_A60 ) exit
36420.             enddo
36420.             $I_L36420_644 = 1 + $I_L36420_644
36420.             if ( $I_L36420_644 >= $F_A59 ) exit
36420.          enddo
36420.       endif
36422.       w_cloud%header%a_contig = 1
36422.       w_cloud%dim_1%LB = 1
36422.       w_cloud%dim_1%EX = ( max( 0, ncols ) )
36422.       w_cloud%dim_1%SM = 1
36422.       w_cloud%dim_2%LB = 1
36422.       w_cloud%dim_2%EX = ( max( 0, kmax ) )
36422.       w_cloud%dim_2%SM = ( max( 0, ncols ) )
36422.       $_allo_P33(0) = 0x1000000000001L
36422.       $_allo_P33(1) = loc( w_cloud )
36422.       call __allocate( $_allo_P33, 0, 0, _fcd( 0, 0 ) )
36423.       $F_A62 = ( max( 0, kmax ) )
36423.       $F_A63 = ( max( 0, ncols ) )
36423.       if ( and( -$F_A63, -$F_A62 ) < 0 ) then
36423.          $I_L36423_587 = 0
36423.          do
36423.             $I_L36423_482 = 0
36423. !dir$ ivdep
36423.             do
36423.                (w_cloud%base_addr)(1 + $I_L36423_482, 1 + $I_L36423_587, 0) = 0.0
36423.                $I_L36423_482 = 1 + $I_L36423_482
36423.                if ( $I_L36423_482 >= $F_A63 ) exit
36423.             enddo
36423.             $I_L36423_587 = 1 + $I_L36423_587
36423.             if ( $I_L36423_587 >= $F_A62 ) exit
36423.          enddo
36423.       endif
36424.       frac_cloud%header%a_contig = 1
36424.       frac_cloud%dim_1%LB = 1
36424.       frac_cloud%dim_1%EX = ( max( 0, ncols ) )
36424.       frac_cloud%dim_1%SM = 1
36424.       frac_cloud%dim_2%LB = 1
36424.       frac_cloud%dim_2%EX = ( max( 0, kmax ) )
36424.       frac_cloud%dim_2%SM = ( max( 0, ncols ) )
36424.       frac_cloud%dim_3%LB = 1
36424.       frac_cloud%dim_3%EX = 4
36424.       frac_cloud%dim_3%SM = ( max( 0, ncols ) * max( 0, kmax ) )
36424.       $_allo_P34(0) = 0x1000000000001L
36424.       $_allo_P34(1) = loc( frac_cloud )
36424.       call __allocate( $_allo_P34, 0, 0, _fcd( 0, 0 ) )
36425.       $F_A64 = ( max( 0, kmax ) )
36425.       $F_A65 = ( max( 0, ncols ) )
36425.       if ( and( -$F_A65, -$F_A64 ) < 0 ) then
36425.          $I_L36425_646 = 0
36425.          do
36425.             $I_L36425_589 = 0
36425.             do
36425.                $I_L36425_484 = 0
36425. !dir$ ivdep
36425.                do
36425.                   (frac_cloud%base_addr)(1 + $I_L36425_484, 1 + $I_L36425_589, 1 + $I_L36425_646, 0) = 0.0
36425.                   $I_L36425_484 = 1 + $I_L36425_484
36425.                   if ( $I_L36425_484 >= $F_A65 ) exit
36425.                enddo
36425.                $I_L36425_589 = 1 + $I_L36425_589
36425.                if ( $I_L36425_589 >= $F_A64 ) exit
36425.             enddo
36425.             $I_L36425_646 = 1 + $I_L36425_646
36425.             if ( $I_L36425_646 >= 4 ) exit
36425.          enddo
36425.       endif
36426.       condensed_mix_ratio%header%a_contig = 1
36426.       condensed_mix_ratio%dim_1%LB = 1
36426.       condensed_mix_ratio%dim_1%EX = ( max( 0, ncols ) )
36426.       condensed_mix_ratio%dim_1%SM = 1
36426.       condensed_mix_ratio%dim_2%LB = 1
36426.       condensed_mix_ratio%dim_2%EX = ( max( 0, kmax ) )
36426.       condensed_mix_ratio%dim_2%SM = ( max( 0, ncols ) )
36426.       condensed_mix_ratio%dim_3%LB = 1
36426.       condensed_mix_ratio%dim_3%EX = 4
36426.       condensed_mix_ratio%dim_3%SM = ( max( 0, ncols ) * max( 0, kmax ) )
36426.       $_allo_P35(0) = 0x1000000000001L
36426.       $_allo_P35(1) = loc( condensed_mix_ratio )
36426.       call __allocate( $_allo_P35, 0, 0, _fcd( 0, 0 ) )
36427.       $F_A66 = ( max( 0, kmax ) )
36427.       $F_A67 = ( max( 0, ncols ) )
36427.       if ( and( -$F_A67, -$F_A66 ) < 0 ) then
36427.          $I_L36427_648 = 0
36427.          do
36427.             $I_L36427_591 = 0
36427.             do
36427.                $I_L36427_486 = 0
36427. !dir$ ivdep
36427.                do
36427.                   (condensed_mix_ratio%base_addr)(1 + $I_L36427_486, 1 + $I_L36427_591, 1 + $I_L36427_648, 0) = 0.0
36427.                   $I_L36427_486 = 1 + $I_L36427_486
36427.                   if ( $I_L36427_486 >= $F_A67 ) exit
36427.                enddo
36427.                $I_L36427_591 = 1 + $I_L36427_591
36427.                if ( $I_L36427_591 >= $F_A66 ) exit
36427.             enddo
36427.             $I_L36427_648 = 1 + $I_L36427_648
36427.             if ( $I_L36427_648 >= 4 ) exit
36427.          enddo
36427.       endif
36428.       condensed_dim_char%header%a_contig = 1
36428.       condensed_dim_char%dim_1%LB = 1
36428.       condensed_dim_char%dim_1%EX = ( max( 0, ncols ) )
36428.       condensed_dim_char%dim_1%SM = 1
36428.       condensed_dim_char%dim_2%LB = 1
36428.       condensed_dim_char%dim_2%EX = ( max( 0, kmax ) )
36428.       condensed_dim_char%dim_2%SM = ( max( 0, ncols ) )
36428.       condensed_dim_char%dim_3%LB = 1
36428.       condensed_dim_char%dim_3%EX = 4
36428.       condensed_dim_char%dim_3%SM = ( max( 0, ncols ) * max( 0, kmax ) )
36428.       $_allo_P36(0) = 0x1000000000001L
36428.       $_allo_P36(1) = loc( condensed_dim_char )
36428.       call __allocate( $_allo_P36, 0, 0, _fcd( 0, 0 ) )
36429.       $F_A68 = ( max( 0, kmax ) )
36429.       $F_A69 = ( max( 0, ncols ) )
36429.       if ( and( -$F_A69, -$F_A68 ) < 0 ) then
36429.          $I_L36429_650 = 0
36429.          do
36429.             $I_L36429_593 = 0
36429.             do
36429.                $I_L36429_488 = 0
36429. !dir$ ivdep
36429.                do
36429.                   (condensed_dim_char%base_addr)(1 + $I_L36429_488, 1 + $I_L36429_593, 1 + $I_L36429_650, 0) = 0.0
36429.                   $I_L36429_488 = 1 + $I_L36429_488
36429.                   if ( $I_L36429_488 >= $F_A69 ) exit
36429.                enddo
36429.                $I_L36429_593 = 1 + $I_L36429_593
36429.                if ( $I_L36429_593 >= $F_A68 ) exit
36429.             enddo
36429.             $I_L36429_650 = 1 + $I_L36429_650
36429.             if ( $I_L36429_650 >= 4 ) exit
36429.          enddo
36429.       endif
36431.       clouds%header%a_contig = 1
36431.       clouds%dim_1%LB = 1
36431.       clouds%dim_1%EX = ( max( 0, ncols ) )
36431.       clouds%dim_1%SM = 1
36431.       clouds%dim_2%LB = 1
36431.       clouds%dim_2%EX = ( max( 0, kmax ) )
36431.       clouds%dim_2%SM = ( max( 0, ncols ) )
36431.       clouds%dim_3%LB = 1
36431.       clouds%dim_3%EX = 4
36431.       clouds%dim_3%SM = ( max( 0, ncols ) * max( 0, kmax ) )
36431.       $_allo_P37(0) = 0x1000000000001L
36431.       $_allo_P37(1) = loc( clouds )
36431.       call __allocate( $_allo_P37, 0, 0, _fcd( 0, 0 ) )
36432.       $F_A70 = ( max( 0, kmax ) )
36432.       $F_A71 = ( max( 0, ncols ) )
36432.       if ( and( -$F_A71, -$F_A70 ) < 0 ) then
36432.          $I_L36432_652 = 0
36432.          do
36432.             $I_L36432_595 = 0
36432.             do
36432.                $I_L36432_490 = 0
36432. !dir$ ivdep
36432.                do
36432.                   (clouds%base_addr)(1 + $I_L36432_490, 1 + $I_L36432_595, 1 + $I_L36432_652, 0) = 0.0
36432.                   $I_L36432_490 = 1 + $I_L36432_490
36432.                   if ( $I_L36432_490 >= $F_A71 ) exit
36432.                enddo
36432.                $I_L36432_595 = 1 + $I_L36432_595
36432.                if ( $I_L36432_595 >= $F_A70 ) exit
36432.             enddo
36432.             $I_L36432_652 = 1 + $I_L36432_652
36432.             if ( $I_L36432_652 >= 4 ) exit
36432.          enddo
36432.       endif
36434.       flux_direct%header%a_contig = 1
36434.       flux_direct%dim_1%LB = 1
36434.       flux_direct%dim_1%EX = ( max( 0, ncols ) )
36434.       flux_direct%dim_1%SM = 1
36434.       flux_direct%dim_2%LB = 0
36434.       flux_direct%dim_2%EX = ( max( 0, 1 + kmax ) )
36434.       flux_direct%dim_2%SM = ( max( 0, ncols ) )
36434.       flux_direct%dim_3%LB = 1
36434.       flux_direct%dim_3%EX = 1
36434.       flux_direct%dim_3%SM = ( max( 0, ncols ) * max( 0, 1 + kmax ) )
36434.       $_allo_P38(0) = 0x1000000000001L
36434.       $_allo_P38(1) = loc( flux_direct )
36434.       call __allocate( $_allo_P38, 0, 0, _fcd( 0, 0 ) )
36435.       $F_A72 = ( max( 0, 1 + kmax ) )
36435.       $F_A73 = ( max( 0, ncols ) )
36435.       if ( and( -$F_A73, -$F_A72 ) < 0 ) then
36435.          $I_L36435_597 = 0
36435.          do
36435.             $I_L36435_492 = 0
36435. !dir$ ivdep
36435.             do
36435.                (flux_direct%base_addr)(1 + $I_L36435_492, $I_L36435_597, 1, 0) = 0.0
36435.                $I_L36435_492 = 1 + $I_L36435_492
36435.                if ( $I_L36435_492 >= $F_A73 ) exit
36435.             enddo
36435.             $I_L36435_597 = 1 + $I_L36435_597
36435.             if ( $I_L36435_597 >= $F_A72 ) exit
36435.          enddo
36435.       endif
36436.       flux_down%header%a_contig = 1
36436.       flux_down%dim_1%LB = 1
36436.       flux_down%dim_1%EX = ( max( 0, ncols ) )
36436.       flux_down%dim_1%SM = 1
36436.       flux_down%dim_2%LB = 0
36436.       flux_down%dim_2%EX = ( max( 0, 1 + kmax ) )
36436.       flux_down%dim_2%SM = ( max( 0, ncols ) )
36436.       flux_down%dim_3%LB = 1
36436.       flux_down%dim_3%EX = 1
36436.       flux_down%dim_3%SM = ( max( 0, ncols ) * max( 0, 1 + kmax ) )
36436.       $_allo_P39(0) = 0x1000000000001L
36436.       $_allo_P39(1) = loc( flux_down )
36436.       call __allocate( $_allo_P39, 0, 0, _fcd( 0, 0 ) )
36437.       $F_A74 = ( max( 0, 1 + kmax ) )
36437.       $F_A75 = ( max( 0, ncols ) )
36437.       if ( and( -$F_A75, -$F_A74 ) < 0 ) then
36437.          $I_L36437_599 = 0
36437.          do
36437.             $I_L36437_494 = 0
36437. !dir$ ivdep
36437.             do
36437.                (flux_down%base_addr)(1 + $I_L36437_494, $I_L36437_599, 1, 0) = 0.0
36437.                $I_L36437_494 = 1 + $I_L36437_494
36437.                if ( $I_L36437_494 >= $F_A75 ) exit
36437.             enddo
36437.             $I_L36437_599 = 1 + $I_L36437_599
36437.             if ( $I_L36437_599 >= $F_A74 ) exit
36437.          enddo
36437.       endif
36438.       flux_up%header%a_contig = 1
36438.       flux_up%dim_1%LB = 1
36438.       flux_up%dim_1%EX = ( max( 0, ncols ) )
36438.       flux_up%dim_1%SM = 1
36438.       flux_up%dim_2%LB = 0
36438.       flux_up%dim_2%EX = ( max( 0, 1 + kmax ) )
36438.       flux_up%dim_2%SM = ( max( 0, ncols ) )
36438.       flux_up%dim_3%LB = 1
36438.       flux_up%dim_3%EX = 1
36438.       flux_up%dim_3%SM = ( max( 0, ncols ) * max( 0, 1 + kmax ) )
36438.       $_allo_P40(0) = 0x1000000000001L
36438.       $_allo_P40(1) = loc( flux_up )
36438.       call __allocate( $_allo_P40, 0, 0, _fcd( 0, 0 ) )
36439.       $F_A76 = ( max( 0, 1 + kmax ) )
36439.       $F_A77 = ( max( 0, ncols ) )
36439.       if ( and( -$F_A77, -$F_A76 ) < 0 ) then
36439.          $I_L36439_601 = 0
36439.          do
36439.             $I_L36439_496 = 0
36439. !dir$ ivdep
36439.             do
36439.                (flux_up%base_addr)(1 + $I_L36439_496, $I_L36439_601, 1, 0) = 0.0
36439.                $I_L36439_496 = 1 + $I_L36439_496
36439.                if ( $I_L36439_496 >= $F_A77 ) exit
36439.             enddo
36439.             $I_L36439_601 = 1 + $I_L36439_601
36439.             if ( $I_L36439_601 >= $F_A76 ) exit
36439.          enddo
36439.       endif
36440.       flux_net%header%a_contig = 1
36440.       flux_net%dim_1%LB = 1
36440.       flux_net%dim_1%EX = ( max( 0, ncols ) )
36440.       flux_net%dim_1%SM = 1
36440.       flux_net%dim_2%LB = 0
36440.       flux_net%dim_2%EX = ( max( 0, 1 + kmax ) )
36440.       flux_net%dim_2%SM = ( max( 0, ncols ) )
36440.       flux_net%dim_3%LB = 1
36440.       flux_net%dim_3%EX = 1
36440.       flux_net%dim_3%SM = ( max( 0, ncols ) * max( 0, 1 + kmax ) )
36440.       $_allo_P41(0) = 0x1000000000001L
36440.       $_allo_P41(1) = loc( flux_net )
36440.       call __allocate( $_allo_P41, 0, 0, _fcd( 0, 0 ) )
36441.       $F_A78 = ( max( 0, 1 + kmax ) )
36441.       $F_A79 = ( max( 0, ncols ) )
36441.       if ( and( -$F_A79, -$F_A78 ) < 0 ) then
36441.          $I_L36441_603 = 0
36441.          do
36441.             $I_L36441_498 = 0
36441. !dir$ ivdep
36441.             do
36441.                (flux_net%base_addr)(1 + $I_L36441_498, $I_L36441_603, 1, 0) = 0.0
36441.                $I_L36441_498 = 1 + $I_L36441_498
36441.                if ( $I_L36441_498 >= $F_A79 ) exit
36441.             enddo
36441.             $I_L36441_603 = 1 + $I_L36441_603
36441.             if ( $I_L36441_603 >= $F_A78 ) exit
36441.          enddo
36441.       endif
36443.       flux_direct_clear%header%a_contig = 1
36443.       flux_direct_clear%dim_1%LB = 1
36443.       flux_direct_clear%dim_1%EX = ( max( 0, ncols ) )
36443.       flux_direct_clear%dim_1%SM = 1
36443.       flux_direct_clear%dim_2%LB = 0
36443.       flux_direct_clear%dim_2%EX = ( max( 0, 1 + kmax ) )
36443.       flux_direct_clear%dim_2%SM = ( max( 0, ncols ) )
36443.       flux_direct_clear%dim_3%LB = 1
36443.       flux_direct_clear%dim_3%EX = 1
36443.       flux_direct_clear%dim_3%SM = ( max( 0, ncols ) * max( 0, 1 + kmax ) )
36443.       $_allo_P42(0) = 0x1000000000001L
36443.       $_allo_P42(1) = loc( flux_direct_clear )
36443.       call __allocate( $_allo_P42, 0, 0, _fcd( 0, 0 ) )
36444.       $F_A80 = ( max( 0, 1 + kmax ) )
36444.       $F_A81 = ( max( 0, ncols ) )
36444.       if ( and( -$F_A81, -$F_A80 ) < 0 ) then
36444.          $I_L36444_605 = 0
36444.          do
36444.             $I_L36444_500 = 0
36444. !dir$ ivdep
36444.             do
36444.                (flux_direct_clear%base_addr)(1 + $I_L36444_500, $I_L36444_605, 1, 0) = 0.0
36444.                $I_L36444_500 = 1 + $I_L36444_500
36444.                if ( $I_L36444_500 >= $F_A81 ) exit
36444.             enddo
36444.             $I_L36444_605 = 1 + $I_L36444_605
36444.             if ( $I_L36444_605 >= $F_A80 ) exit
36444.          enddo
36444.       endif
36445.       flux_down_clear%header%a_contig = 1
36445.       flux_down_clear%dim_1%LB = 1
36445.       flux_down_clear%dim_1%EX = ( max( 0, ncols ) )
36445.       flux_down_clear%dim_1%SM = 1
36445.       flux_down_clear%dim_2%LB = 0
36445.       flux_down_clear%dim_2%EX = ( max( 0, 1 + kmax ) )
36445.       flux_down_clear%dim_2%SM = ( max( 0, ncols ) )
36445.       flux_down_clear%dim_3%LB = 1
36445.       flux_down_clear%dim_3%EX = 1
36445.       flux_down_clear%dim_3%SM = ( max( 0, ncols ) * max( 0, 1 + kmax ) )
36445.       $_allo_P43(0) = 0x1000000000001L
36445.       $_allo_P43(1) = loc( flux_down_clear )
36445.       call __allocate( $_allo_P43, 0, 0, _fcd( 0, 0 ) )
36446.       $F_A82 = ( max( 0, 1 + kmax ) )
36446.       $F_A83 = ( max( 0, ncols ) )
36446.       if ( and( -$F_A83, -$F_A82 ) < 0 ) then
36446.          $I_L36446_607 = 0
36446.          do
36446.             $I_L36446_502 = 0
36446. !dir$ ivdep
36446.             do
36446.                (flux_down_clear%base_addr)(1 + $I_L36446_502, $I_L36446_607, 1, 0) = 0.0
36446.                $I_L36446_502 = 1 + $I_L36446_502
36446.                if ( $I_L36446_502 >= $F_A83 ) exit
36446.             enddo
36446.             $I_L36446_607 = 1 + $I_L36446_607
36446.             if ( $I_L36446_607 >= $F_A82 ) exit
36446.          enddo
36446.       endif
36447.       flux_up_clear%header%a_contig = 1
36447.       flux_up_clear%dim_1%LB = 1
36447.       flux_up_clear%dim_1%EX = ( max( 0, ncols ) )
36447.       flux_up_clear%dim_1%SM = 1
36447.       flux_up_clear%dim_2%LB = 0
36447.       flux_up_clear%dim_2%EX = ( max( 0, 1 + kmax ) )
36447.       flux_up_clear%dim_2%SM = ( max( 0, ncols ) )
36447.       flux_up_clear%dim_3%LB = 1
36447.       flux_up_clear%dim_3%EX = 1
36447.       flux_up_clear%dim_3%SM = ( max( 0, ncols ) * max( 0, 1 + kmax ) )
36447.       $_allo_P44(0) = 0x1000000000001L
36447.       $_allo_P44(1) = loc( flux_up_clear )
36447.       call __allocate( $_allo_P44, 0, 0, _fcd( 0, 0 ) )
36448.       $F_A84 = ( max( 0, 1 + kmax ) )
36448.       $F_A85 = ( max( 0, ncols ) )
36448.       if ( and( -$F_A85, -$F_A84 ) < 0 ) then
36448.          $I_L36448_609 = 0
36448.          do
36448.             $I_L36448_504 = 0
36448. !dir$ ivdep
36448.             do
36448.                (flux_up_clear%base_addr)(1 + $I_L36448_504, $I_L36448_609, 1, 0) = 0.0
36448.                $I_L36448_504 = 1 + $I_L36448_504
36448.                if ( $I_L36448_504 >= $F_A85 ) exit
36448.             enddo
36448.             $I_L36448_609 = 1 + $I_L36448_609
36448.             if ( $I_L36448_609 >= $F_A84 ) exit
36448.          enddo
36448.       endif
36449.       flux_net_clear%header%a_contig = 1
36449.       flux_net_clear%dim_1%LB = 1
36449.       flux_net_clear%dim_1%EX = ( max( 0, ncols ) )
36449.       flux_net_clear%dim_1%SM = 1
36449.       flux_net_clear%dim_2%LB = 0
36449.       flux_net_clear%dim_2%EX = ( max( 0, 1 + kmax ) )
36449.       flux_net_clear%dim_2%SM = ( max( 0, ncols ) )
36449.       flux_net_clear%dim_3%LB = 1
36449.       flux_net_clear%dim_3%EX = 1
36449.       flux_net_clear%dim_3%SM = ( max( 0, ncols ) * max( 0, 1 + kmax ) )
36449.       $_allo_P45(0) = 0x1000000000001L
36449.       $_allo_P45(1) = loc( flux_net_clear )
36449.       call __allocate( $_allo_P45, 0, 0, _fcd( 0, 0 ) )
36450.       $F_A86 = ( max( 0, 1 + kmax ) )
36450.       $F_A87 = ( max( 0, ncols ) )
36450.       if ( and( -$F_A87, -$F_A86 ) < 0 ) then
36450.          $I_L36450_611 = 0
36450.          do
36450.             $I_L36450_506 = 0
36450. !dir$ ivdep
36450.             do
36450.                (flux_net_clear%base_addr)(1 + $I_L36450_506, $I_L36450_611, 1, 0) = 0.0
36450.                $I_L36450_506 = 1 + $I_L36450_506
36450.                if ( $I_L36450_506 >= $F_A87 ) exit
36450.             enddo
36450.             $I_L36450_611 = 1 + $I_L36450_611
36450.             if ( $I_L36450_611 >= $F_A86 ) exit
36450.          enddo
36450.       endif
36457.       if ( ncols > 0 ) then
36459.          if ( kmax > 0 ) then
36476.             if ( -2 + kmax >= 0 ) then
36459.                $I_L36459_629 = 0
36459.                do
36457.                   $I_L36457_540 = 0
36457. !dir$ ivdep
36457.                   do
36460.                      (temp%base_addr)(1 + $I_L36457_540, 1 + $I_L36459_629, 0) = te(1 + $I_L36457_540, 1 + $I_L36459_629)
36461.                      (d_mass%base_addr)(1 + $I_L36457_540, 1 + $I_L36459_629, 0) = 10.195072517550816 * dp(1 + $I_L36457_540, 1 + $I_L36459_629)
36462.                      (pres%base_addr)(1 + $I_L36457_540, 1 + $I_L36459_629, 0) = 100.0 * pmid(1 + $I_L36457_540, 1 + $I_L36459_629)
36485.                      $I_L36457_540 = 1 + $I_L36457_540
36459.                      if ( $I_L36457_540 >= ncols ) exit
36459.                   enddo
36463.                   $I_L36459_629 = 1 + $I_L36459_629
36478.                   if ( $I_L36459_629 >= kmax ) exit
36478.                enddo
36457.                $I_L36457_542 = 0
36457. !dir$ ivdep
36457.                do
36468.                   (temp%base_addr)(1 + $I_L36457_542, 1, 0) = te(1 + $I_L36457_542, 1)
36469.                   (d_mass%base_addr)(1 + $I_L36457_542, 1, 0) = ( 10.195072517550816 * dp(1 + $I_L36457_542, 1) )
36470.                   (pres%base_addr)(1 + $I_L36457_542, 1, 0) = 50.0 * dp(1 + $I_L36457_542, 1)
36473.                   (t_ground%base_addr)(1 + $I_L36457_542, 0) = tg(1 + $I_L36457_542)
36485.                   $I_L36457_542 = 1 + $I_L36457_542
36478.                   if ( $I_L36457_542 >= ncols ) exit
36478.                enddo
36476.                $I_L36476_664 = 0
36476.                do
36457.                   $I_L36457_662 = 0
36457.                   do
36476.                      $I_L36476_633 = 0
36476.                      if ( min( -1 + kmax, 4 + 4 * $I_L36476_664 ) + -4 * $I_L36476_664 >= 4 ) then
36476.                         $I_L36476_669 = 0
36476. !dir$ shortloop16
36476. !dir$ blocking_size( 4, 4 )
36476.                         do
36457.                            $I_L36457_544 = 0
36457. !dir$ ivdep
36457. !dir$ blocking_size( 256, 256 )
36457.                            do
36477.                               (t_level%base_addr)(1 + $I_L36457_544 + 256 * $I_L36457_662, 1 + 4 * $I_L36476_664 + 4 * $I_L36476_669, 0) = 5.0e-1 * ( te(1 + $I_L36457_544 + 256 * $I_L36457_662, 2 + 4 * $I_L36476_664 + 4 * $I_L36476_669) + te(1 + $I_L36457_544 + 256 * $I_L36457_662, 1 + 4 * $I_L36476_664 + 4 * $I_L36476_669) )
36477.                               (t_level%base_addr)(1 + $I_L36457_544 + 256 * $I_L36457_662, 2 + 4 * $I_L36476_664 + 4 * $I_L36476_669, 0) = 5.0e-1 * ( te(1 + $I_L36457_544 + 256 * $I_L36457_662, 2 + 4 * $I_L36476_664 + 4 * $I_L36476_669) + te(1 + $I_L36457_544 + 256 * $I_L36457_662, 3 + 4 * $I_L36476_664 + 4 * $I_L36476_669) )
36477.                               (t_level%base_addr)(1 + $I_L36457_544 + 256 * $I_L36457_662, 3 + 4 * $I_L36476_664 + 4 * $I_L36476_669, 0) = 5.0e-1 * ( te(1 + $I_L36457_544 + 256 * $I_L36457_662, 3 + 4 * $I_L36476_664 + 4 * $I_L36476_669) + te(1 + $I_L36457_544 + 256 * $I_L36457_662, 4 + 4 * $I_L36476_664 + 4 * $I_L36476_669) )
36477.                               (t_level%base_addr)(1 + $I_L36457_544 + 256 * $I_L36457_662, 4 + 4 * $I_L36476_664 + 4 * $I_L36476_669, 0) = 5.0e-1 * ( te(1 + $I_L36457_544 + 256 * $I_L36457_662, 4 + 4 * $I_L36476_664 + 4 * $I_L36476_669) + te(1 + $I_L36457_544 + 256 * $I_L36457_662, 5 + 4 * $I_L36476_664 + 4 * $I_L36476_669) )
36457.                               $I_L36457_544 = 1 + $I_L36457_544
36476.                               if ( $I_L36457_544 >= min( ncols, 256 + 256 * $I_L36457_662 ) + -256 * $I_L36457_662 ) exit
36476.                            enddo
36476.                            $I_L36476_669 = 1 + $I_L36476_669
36476.                            if ( $I_L36476_669 >= _rsh( min( -1 + kmax, 4 + 4 * $I_L36476_664 ) + -4 * $I_L36476_664, 2 ) ) exit
36476.                         enddo
36476.                         $I_L36476_633 = and( 0xfffffffffffffffcUL, min( -1 + kmax, 4 + 4 * $I_L36476_664 ) + -4 * $I_L36476_664 )
36476.                      endif
36476.                      if ( $I_L36476_633 < min( -1 + kmax, 4 + 4 * $I_L36476_664 ) + -4 * $I_L36476_664 ) then
36476.                         $I_L36476_666 = 0
36476. !dir$ shortloop16
36476. !dir$ blocking_size( 4, 4 )
36476.                         do
36457.                            $I_L36457_544 = 0
36457. !dir$ ivdep
36457. !dir$ blocking_size( 256, 256 )
36457.                            do
36477.                               (t_level%base_addr)(1 + $I_L36457_544 + 256 * $I_L36457_662, 1 + $I_L36476_633 + $I_L36476_666 + 4 * $I_L36476_664, 0) = 5.0e-1 * ( te(1 + $I_L36457_544 + 256 * $I_L36457_662, 1 + $I_L36476_633 + $I_L36476_666 + 4 * $I_L36476_664) + te(1 + $I_L36457_544 + 256 * $I_L36457_662, 2 + $I_L36476_633 + $I_L36476_666 + 4 * $I_L36476_664) )
36457.                               $I_L36457_544 = 1 + $I_L36457_544
36476.                               if ( $I_L36457_544 >= min( ncols, 256 + 256 * $I_L36457_662 ) + -256 * $I_L36457_662 ) exit
36476.                            enddo
36476.                            $I_L36476_666 = 1 + $I_L36476_666
36476.                            if ( $I_L36476_666 >= min( -1 + kmax, 4 + 4 * $I_L36476_664 ) + -$I_L36476_633 + -4 * $I_L36476_664 ) exit
36476.                         enddo
36476.                      endif
36457.                      $I_L36457_662 = 1 + $I_L36457_662
36478.                      if ( $I_L36457_662 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
36478.                   enddo
36476.                   $I_L36476_664 = 1 + $I_L36476_664
36476.                   if ( $I_L36476_664 >= 1 + max( 0, -1 + _rsh( 2 + kmax, 2 ) ) ) exit
36476.                enddo
36457.                $I_L36457_547 = 0
36457. !dir$ ivdep
36457.                do
36479.                   (t_level%base_addr)(1 + $I_L36457_547, kmax, 0) = tg(1 + $I_L36457_547)
36483.                   (t_level%base_addr)(1 + $I_L36457_547, 0, 0) = te(1 + $I_L36457_547, 1)
36485.                   $I_L36457_547 = 1 + $I_L36457_547
36478.                   if ( $I_L36457_547 >= ncols ) exit
36478.                enddo
36478.             else
36459.                $I_L36459_631 = 0
36459.                do
36457.                   $I_L36457_549 = 0
36457. !dir$ ivdep
36457.                   do
36460.                      (temp%base_addr)(1 + $I_L36457_549, 1 + $I_L36459_631, 0) = te(1 + $I_L36457_549, 1 + $I_L36459_631)
36461.                      (d_mass%base_addr)(1 + $I_L36457_549, 1 + $I_L36459_631, 0) = 10.195072517550816 * dp(1 + $I_L36457_549, 1 + $I_L36459_631)
36462.                      (pres%base_addr)(1 + $I_L36457_549, 1 + $I_L36459_631, 0) = 100.0 * pmid(1 + $I_L36457_549, 1 + $I_L36459_631)
36485.                      $I_L36457_549 = 1 + $I_L36457_549
36459.                      if ( $I_L36457_549 >= ncols ) exit
36459.                   enddo
36463.                   $I_L36459_631 = 1 + $I_L36459_631
36478.                   if ( $I_L36459_631 >= kmax ) exit
36478.                enddo
36457.                $I_L36457_551 = 0
36457. !dir$ ivdep
36457.                do
36468.                   (temp%base_addr)(1 + $I_L36457_551, 1, 0) = te(1 + $I_L36457_551, 1)
36469.                   (d_mass%base_addr)(1 + $I_L36457_551, 1, 0) = ( 10.195072517550816 * dp(1 + $I_L36457_551, 1) )
36470.                   (pres%base_addr)(1 + $I_L36457_551, 1, 0) = 50.0 * dp(1 + $I_L36457_551, 1)
36473.                   (t_ground%base_addr)(1 + $I_L36457_551, 0) = tg(1 + $I_L36457_551)
36479.                   (t_level%base_addr)(1 + $I_L36457_551, kmax, 0) = tg(1 + $I_L36457_551)
36483.                   (t_level%base_addr)(1 + $I_L36457_551, 0, 0) = te(1 + $I_L36457_551, 1)
36485.                   $I_L36457_551 = 1 + $I_L36457_551
36478.                   if ( $I_L36457_551 >= ncols ) exit
36478.                enddo
36478.             endif
36628.             $I_L36628_557 = 0
36628.             do
36627.                $I_L36627_430 = 0
36627. !dir$ ivdep
36627.                do
36629.                   (clouds%base_addr)(1 + $I_L36627_430, 1 + $I_L36628_557, 1, 0) = cld(1 + $I_L36627_430, 1 + $I_L36628_557) * ( 1.0 + -fice(1 + $I_L36627_430, 1 + $I_L36628_557) )
36631.                   (clouds%base_addr)(1 + $I_L36627_430, 1 + $I_L36628_557, 2, 0) = fice(1 + $I_L36627_430, 1 + $I_L36628_557) * cld(1 + $I_L36627_430, 1 + $I_L36628_557)
36633.                   (clouds%base_addr)(1 + $I_L36627_430, 1 + $I_L36628_557, 3, 0) = clu(1 + $I_L36627_430, 1 + $I_L36628_557) * ( 1.0 + -fice(1 + $I_L36627_430, 1 + $I_L36628_557) )
36635.                   (clouds%base_addr)(1 + $I_L36627_430, 1 + $I_L36628_557, 4, 0) = fice(1 + $I_L36627_430, 1 + $I_L36628_557) * clu(1 + $I_L36627_430, 1 + $I_L36628_557)
36643.                   $I_L36627_430 = 1 + $I_L36627_430
36628.                   if ( $I_L36627_430 >= ncols ) exit
36628.                enddo
36637.                $I_L36628_557 = 1 + $I_L36628_557
36637.                if ( $I_L36628_557 >= kmax ) exit
36637.             enddo
36650.             if ( n_condensed > 0 ) then
36646.                $I_L36646_638 = 0
36646.                do
36645.                   $I_L36645_559 = 0
36645.                   do
36649.                      aux = 0.0
36651.                      $SC_w_cloud_I45 = 1.0
36650.                      $I_L36650_432 = 0
36650. !dir$ ivdep
36650.                      do
36652.                         aux = real( aux + (clouds%base_addr)(1 + $I_L36645_559, 1 + $I_L36646_638, 1 + $I_L36650_432, 0) )
36651.                         $SC_w_cloud_I45 = $SC_w_cloud_I45 * ( 1.0 + -(clouds%base_addr)(1 + $I_L36645_559, 1 + $I_L36646_638, 1 + $I_L36650_432, 0) )
36653.                         $I_L36650_432 = 1 + $I_L36650_432
36650.                         if ( $I_L36650_432 >= n_condensed ) exit
36650.                      enddo
36654.                      (w_cloud%base_addr)(1 + $I_L36645_559, 1 + $I_L36646_638, 0) = 1.0 + -$SC_w_cloud_I45
36658.                      if ( aux > 0.0 ) then
36658.                         $I_L36658_508 = 0
36658. !dir$ ivdep
36658.                         do
36658.                            (frac_cloud%base_addr)(1 + $I_L36645_559, 1 + $I_L36646_638, 1 + $I_L36658_508, 0) = ( (clouds%base_addr)(1 + $I_L36645_559, 1 + $I_L36646_638, 1 + $I_L36658_508, 0) * 1.0/aux )
36658.                            $I_L36658_508 = 1 + $I_L36658_508
36658.                            if ( $I_L36658_508 >= 4 ) exit
36658.                         enddo
36658.                      endif
36660.                      $I_L36645_559 = 1 + $I_L36645_559
36658.                      if ( $I_L36645_559 >= ncols ) exit
36658.                   enddo
36659.                   $I_L36646_638 = 1 + $I_L36646_638
36659.                   if ( $I_L36646_638 >= kmax ) exit
36659.                enddo
36659.             else
36646.                $I_L36646_567 = 0
36646.                do
36645.                   $I_L36645_442 = 0
36645. !dir$ ivdep
36645.                   do
36654.                      (w_cloud%base_addr)(1 + $I_L36645_442, 1 + $I_L36646_567, 0) = 0.0
36660.                      $I_L36645_442 = 1 + $I_L36645_442
36658.                      if ( $I_L36645_442 >= ncols ) exit
36658.                   enddo
36659.                   $I_L36646_567 = 1 + $I_L36646_567
36659.                   if ( $I_L36646_567 >= kmax ) exit
36659.                enddo
36659.             endif
36659.          else
36457.             $I_L36457_444 = 0
36457. !dir$ ivdep
36457.             do
36468.                (temp%base_addr)(1 + $I_L36457_444, 1, 0) = te(1 + $I_L36457_444, 1)
36469.                (d_mass%base_addr)(1 + $I_L36457_444, 1, 0) = ( 10.195072517550816 * dp(1 + $I_L36457_444, 1) )
36470.                (pres%base_addr)(1 + $I_L36457_444, 1, 0) = 50.0 * dp(1 + $I_L36457_444, 1)
36473.                (t_ground%base_addr)(1 + $I_L36457_444, 0) = tg(1 + $I_L36457_444)
36479.                (t_level%base_addr)(1 + $I_L36457_444, kmax, 0) = tg(1 + $I_L36457_444)
36483.                (t_level%base_addr)(1 + $I_L36457_444, 0, 0) = te(1 + $I_L36457_444, 1)
36485.                $I_L36457_444 = 1 + $I_L36457_444
36478.                if ( $I_L36457_444 >= ncols ) exit
36478.             enddo
36478.          endif
36526.          $SC_lwdat_I0 = lwdat%dim%nd_species
36524.          if ( kmax > 0 ) then
36524.             $I_L36524_553 = 0
36524.             do
36523.                $I_L36523_426 = 0
36523. !dir$ ivdep
36523.                do
36526.                   (gas_mix_ratio%base_addr)(1 + $I_L36523_426, 1 + $I_L36524_553, 1, 0) = ( qe(1 + $I_L36523_426, 1 + $I_L36524_553) * 1.0/( 1.0 + -qe(1 + $I_L36523_426, 1 + $I_L36524_553) ) )
36528.                   (gas_mix_ratio%base_addr)(1 + $I_L36523_426, 1 + $I_L36524_553, 2, 0) = 1.5193502412431012e-6 * co2val
36530.                   (gas_mix_ratio%base_addr)(1 + $I_L36523_426, 1 + $I_L36524_553, 3, 0) = o3(1 + $I_L36523_426, 1 + $I_L36524_553)
36548.                   $I_L36523_426 = 1 + $I_L36523_426
36524.                   if ( $I_L36523_426 >= ncols ) exit
36524.                enddo
36542.                $I_L36524_553 = 1 + $I_L36524_553
36547.                if ( $I_L36524_553 >= kmax ) exit
36547.             enddo
36547.          endif
36547.       endif
36491.       $F_A88 = ( max( 0, ncols ) )
36491.       if ( ncols > 0 ) then
36491.          $I_L36491_510 = 0
36491. !dir$ ivdep
36491.          do
36491.             (zen_0%base_addr)(1 + $I_L36491_510, 0) = -999.0
36491.             $I_L36491_510 = 1 + $I_L36491_510
36491.             if ( $I_L36491_510 >= $F_A88 ) exit
36491.          enddo
36491.       endif
36492.       $F_A89 = ( max( 0, ncols ) )
36492.       if ( ncols > 0 ) then
36492.          $I_L36492_512 = 0
36492. !dir$ ivdep
36492.          do
36492.             (solar_irrad%base_addr)(1 + $I_L36492_512, 0) = -999.0
36492.             $I_L36492_512 = 1 + $I_L36492_512
36492.             if ( $I_L36492_512 >= $F_A89 ) exit
36492.          enddo
36492.       endif
36495.       $F_A90 = lwdat%dim%nd_band
36495.       if ( lwdat%dim%nd_band > 0 ) then
36495.          $SC_lwdat_I46 = lwdat%dim%nd_band
36495.          $I_L36495_514 = 0
36495. !dir$ ivdep
36495.          do
36495.             weight_band(1 + $I_L36495_514) = 1.0
36495.             $I_L36495_514 = 1 + $I_L36495_514
36495.             if ( $I_L36495_514 >= $F_A90 ) exit
36495.          enddo
36495.       endif
36502.       $F_A91 = lwdat%dim%nd_band
36502.       if ( lwdat%dim%nd_band > 0 ) then
36502.          $SC_lwdat_I46 = lwdat%dim%nd_band
36502.          $I_L36502_516 = 0
36502. !dir$ ivdep
36502.          do
36502.             i_scatter_method(1 + $I_L36502_516) = 1
36502.             $I_L36502_516 = 1 + $I_L36502_516
36502.             if ( $I_L36502_516 >= $F_A91 ) exit
36502.          enddo
36502.       endif
36509.       $F_A92 = lwdat%dim%nd_band
36509.       if ( lwdat%dim%nd_band > 0 ) then
36509.          $SC_lwdat_I46 = lwdat%dim%nd_band
36509.          $I_L36509_518 = 0
36509. !dir$ ivdep
36509.          do
36509.             map_band_channel(1 + $I_L36509_518) = 1
36509.             $I_L36509_518 = 1 + $I_L36509_518
36509.             if ( $I_L36509_518 >= $F_A92 ) exit
36509.          enddo
36509.       endif
36512.       $F_A93 = lwdat%dim%nd_band
36512.       if ( lwdat%dim%nd_band > 0 ) then
36512.          $SC_lwdat_I46 = lwdat%dim%nd_band
36512.          $I_L36512_520 = 0
36512. !dir$ ivdep
36512.          do
36512.             i_gas_overlap(1 + $I_L36512_520) = 5
36512.             $I_L36512_520 = 1 + $I_L36512_520
36512.             if ( $I_L36512_520 >= $F_A93 ) exit
36512.          enddo
36512.       endif
36554.       $SC_lwdat_I47 = lwdat%dim%nd_species
36554.       $I_L36554_522 = 0
36554. !dir$ ivdep
36554.       do
36554.          l_doppler(1 + $I_L36554_522) = t$10529(1 + $I_L36554_522)
36558.          doppler_correction(1 + $I_L36554_522) = t$10531(1 + $I_L36554_522)
36554.          $I_L36554_522 = 1 + $I_L36554_522
36554.          if ( $I_L36554_522 >= 11 ) exit
36554.       enddo
36568.       $F_A94 = ( max( 0, lwdat%dim%nd_band ) )
36568.       $F_A95 = ( max( 0, ncols ) )
36568.       if ( and( -$F_A95, -$F_A94 ) < 0 ) then
36568.          $SC_lwdat_I46 = lwdat%dim%nd_band
36568.          $I_L36568_654 = 0
36568.          do
36568.             $I_L36568_613 = 0
36568.             do
36568.                $I_L36568_524 = 0
36568. !dir$ ivdep
36568.                do
36568.                   (rho_alb%base_addr)(1 + $I_L36568_524, 1 + $I_L36568_613, 1 + $I_L36568_654, 0) = 0.0
36568.                   $I_L36568_524 = 1 + $I_L36568_524
36568.                   if ( $I_L36568_524 >= $F_A95 ) exit
36568.                enddo
36568.                $I_L36568_613 = 1 + $I_L36568_613
36568.                if ( $I_L36568_613 >= 2 ) exit
36568.             enddo
36568.             $I_L36568_654 = 1 + $I_L36568_654
36568.             if ( $I_L36568_654 >= $F_A94 ) exit
36568.          enddo
36568.       endif
36574.       $F_A96 = ( max( 0, lwdat%dim%nd_aerosol_species ) )
36574.       $F_A97 = ( max( 0, kmax ) )
36574.       $F_A98 = ( max( 0, ncols ) )
36574.       if ( and( and( -$F_A97, -$F_A96 ), -$F_A98 ) < 0 ) then
36574.          $SC_lwdat_I48 = lwdat%dim%nd_aerosol_species
36574.          $I_L36574_656 = 0
36574.          do
36574.             $I_L36574_615 = 0
36574.             do
36574.                $I_L36574_526 = 0
36574. !dir$ ivdep
36574.                do
36574.                   (aerosol_mix_ratio%base_addr)(1 + $I_L36574_526, 1 + $I_L36574_615, 1 + $I_L36574_656, 0) = 0.0
36574.                   $I_L36574_526 = 1 + $I_L36574_526
36574.                   if ( $I_L36574_526 >= $F_A98 ) exit
36574.                enddo
36574.                $I_L36574_615 = 1 + $I_L36574_615
36574.                if ( $I_L36574_615 >= $F_A97 ) exit
36574.             enddo
36574.             $I_L36574_656 = 1 + $I_L36574_656
36574.             if ( $I_L36574_656 >= $F_A96 ) exit
36574.          enddo
36574.       endif
36578.       if ( ncols > 0 ) then
36585.          $SC_aerosol_clim_land_I1 = aerosol_clim_land%dim_1%EX
36585.          $SC_aerosol_clim_land_I2 = aerosol_clim_land%dim_1%LB
36585.          $SC_aerosol_clim_land_I4 = aerosol_clim_land%dim_2%SM
36585.          $SC_aerosol_clim_land_I3 = aerosol_clim_land%dim_2%EX
36585.          $SC_aerosol_clim_land_I5 = aerosol_clim_land%dim_2%LB
36580.          $SC_aerosol_clim_ocean_I7 = aerosol_clim_ocean%dim_1%EX
36580.          $SC_aerosol_clim_ocean_I8 = aerosol_clim_ocean%dim_1%LB
36580.          $SC_aerosol_clim_ocean_I10 = aerosol_clim_ocean%dim_2%SM
36580.          $SC_aerosol_clim_ocean_I9 = aerosol_clim_ocean%dim_2%EX
36580.          $SC_aerosol_clim_ocean_I11 = aerosol_clim_ocean%dim_2%LB
36585.          $SC_lwdat_I6 = lwdat%dim%nd_aerosol_species
36578.          $I_L36578_636 = 0
36578.          do
36579.             if ( imask(1 + $I_L36578_636) <= 0 .orelse. imask(1 + $I_L36578_636) == 13 ) then
36580.                $F_A101 = nls
36580.                if ( nls > 0 ) then
36580.                   $SCA_pbot_I36 = pbot(1 + $I_L36578_636, kmax)
36580.                   $I_L36580_621 = 0
36580.                   do
36580.                      $I_L36580_532 = 0
36580. !dir$ ivdep
36580.                      do
36580.                         (aerosol_mix_ratio%base_addr)(1 + $I_L36578_636, 1 + $I_L36580_532, 1 + $I_L36580_621, 0) = 1.0e-2 * ( (aerosol_clim_ocean%base_addr)(1 + $I_L36580_532, 1 + $I_L36580_621, 0) * 1.0/$SCA_pbot_I36 )
36580.                         $I_L36580_532 = 1 + $I_L36580_532
36580.                         if ( $I_L36580_532 >= $F_A101 ) exit
36580.                      enddo
36580.                      $I_L36580_621 = 1 + $I_L36580_621
36580.                      if ( $I_L36580_621 >= 5 ) exit
36580.                   enddo
36580.                endif
36582.                $F_A102 = ( kmax + -nls )
36582.                if ( kmax + -nls > 0 ) then
36582.                   $I_L36582_623 = 0
36582.                   do
36582.                      $I_L36582_534 = 0
36582. !dir$ ivdep
36582.                      do
36582.                         (aerosol_mix_ratio%base_addr)(1 + $I_L36578_636, 1 + nls + $I_L36582_534, 1 + $I_L36582_623, 0) = (aerosol_clim_ocean%base_addr)(1 + nls + $I_L36582_534, 1 + $I_L36582_623, 0)
36582.                         $I_L36582_534 = 1 + $I_L36582_534
36582.                         if ( $I_L36582_534 >= $F_A102 ) exit
36582.                      enddo
36582.                      $I_L36582_623 = 1 + $I_L36582_623
36582.                      if ( $I_L36582_623 >= 5 ) exit
36582.                   enddo
36582.                endif
36582.             else
36585.                $F_A99 = nls
36585.                if ( nls > 0 ) then
36585.                   $SCA_pbot_I44 = pbot(1 + $I_L36578_636, kmax)
36585.                   $I_L36585_617 = 0
36585.                   do
36585.                      $I_L36585_528 = 0
36585. !dir$ ivdep
36585.                      do
36585.                         (aerosol_mix_ratio%base_addr)(1 + $I_L36578_636, 1 + $I_L36585_528, 1 + $I_L36585_617, 0) = 1.0e-2 * ( (aerosol_clim_land%base_addr)(1 + $I_L36585_528, 1 + $I_L36585_617, 0) * 1.0/$SCA_pbot_I44 )
36585.                         $I_L36585_528 = 1 + $I_L36585_528
36585.                         if ( $I_L36585_528 >= $F_A99 ) exit
36585.                      enddo
36585.                      $I_L36585_617 = 1 + $I_L36585_617
36585.                      if ( $I_L36585_617 >= 5 ) exit
36585.                   enddo
36585.                endif
36587.                $F_A100 = ( kmax + -nls )
36587.                if ( kmax + -nls > 0 ) then
36587.                   $I_L36587_619 = 0
36587.                   do
36587.                      $I_L36587_530 = 0
36587. !dir$ ivdep
36587.                      do
36587.                         (aerosol_mix_ratio%base_addr)(1 + $I_L36578_636, 1 + nls + $I_L36587_530, 1 + $I_L36587_619, 0) = (aerosol_clim_land%base_addr)(1 + nls + $I_L36587_530, 1 + $I_L36587_619, 0)
36587.                         $I_L36587_530 = 1 + $I_L36587_530
36587.                         if ( $I_L36587_530 >= $F_A100 ) exit
36587.                      enddo
36587.                      $I_L36587_619 = 1 + $I_L36587_619
36587.                      if ( $I_L36587_619 >= 5 ) exit
36587.                   enddo
36587.                endif
36587.             endif
36596.             $I_L36578_636 = 1 + $I_L36578_636
36589.             if ( $I_L36578_636 >= ncols ) exit
36589.          enddo
36589.       endif
36605.       type_condensed(1) = 1
36606.       type_condensed(2) = 2
36607.       type_condensed(3) = 3
36608.       type_condensed(4) = 4
36610.       i_condensed_param(1) = (lwdat%drop%i_drop_parm%base_addr)(5, 0)
36611.       i_condensed_param(2) = (lwdat%ice%i_ice_parm%base_addr)(8, 0)
36612.       i_condensed_param(3) = (lwdat%drop%i_drop_parm%base_addr)(5, 0)
36613.       i_condensed_param(4) = (lwdat%ice%i_ice_parm%base_addr)(8, 0)
36615.       if ( lwdat%dim%nd_cloud_parameter > 0 ) then
36618.          $SC_lwdat_I24 = lwdat%ice%parm_list%dim_1%SM
36618.          $SC_lwdat_I23 = lwdat%ice%parm_list%dim_1%EX
36618.          $SC_lwdat_I25 = lwdat%ice%parm_list%dim_1%LB
36618.          $SC_lwdat_I27 = lwdat%ice%parm_list%dim_2%SM
36618.          $SC_lwdat_I26 = lwdat%ice%parm_list%dim_2%EX
36618.          $SC_lwdat_I28 = lwdat%ice%parm_list%dim_2%LB
36618.          $SC_lwdat_I30 = lwdat%ice%parm_list%dim_3%SM
36618.          $SC_lwdat_I29 = lwdat%ice%parm_list%dim_3%EX
36618.          $SC_lwdat_I31 = lwdat%ice%parm_list%dim_3%LB
36617.          $SC_lwdat_I14 = lwdat%drop%parm_list%dim_1%SM
36617.          $SC_lwdat_I13 = lwdat%drop%parm_list%dim_1%EX
36617.          $SC_lwdat_I15 = lwdat%drop%parm_list%dim_1%LB
36617.          $SC_lwdat_I17 = lwdat%drop%parm_list%dim_2%SM
36617.          $SC_lwdat_I16 = lwdat%drop%parm_list%dim_2%EX
36617.          $SC_lwdat_I18 = lwdat%drop%parm_list%dim_2%LB
36617.          $SC_lwdat_I20 = lwdat%drop%parm_list%dim_3%SM
36617.          $SC_lwdat_I19 = lwdat%drop%parm_list%dim_3%EX
36617.          $SC_lwdat_I21 = lwdat%drop%parm_list%dim_3%LB
36617.          $SC_lwdat_I22 = lwdat%dim%nd_cloud_parameter
36616.          $SC_lwdat_I12 = lwdat%dim%nd_band
36616.          if ( lwdat%dim%nd_band > 0 ) then
36616.             $I_L36616_555 = 0
36616.             do
36615.                $I_L36615_428 = 0
36615. !dir$ ivdep
36615.                do
36617.                   condensed_param_list(1 + $I_L36615_428, 1, 1 + $I_L36616_555) = (lwdat%drop%parm_list%base_addr)(1 + $I_L36615_428, 1 + $I_L36616_555, 5, 0)
36618.                   condensed_param_list(1 + $I_L36615_428, 2, 1 + $I_L36616_555) = (lwdat%ice%parm_list%base_addr)(1 + $I_L36615_428, 1 + $I_L36616_555, 8, 0)
36619.                   condensed_param_list(1 + $I_L36615_428, 3, 1 + $I_L36616_555) = (lwdat%drop%parm_list%base_addr)(1 + $I_L36615_428, 1 + $I_L36616_555, 5, 0)
36620.                   condensed_param_list(1 + $I_L36615_428, 4, 1 + $I_L36616_555) = (lwdat%ice%parm_list%base_addr)(1 + $I_L36615_428, 1 + $I_L36616_555, 8, 0)
36622.                   $I_L36615_428 = 1 + $I_L36615_428
36616.                   if ( $I_L36615_428 >= $SC_lwdat_I22 ) exit
36616.                enddo
36621.                $I_L36616_555 = 1 + $I_L36616_555
36621.                if ( $I_L36616_555 >= $SC_lwdat_I12 ) exit
36621.             enddo
36621.          endif
36621.       endif
36665.       $F_A103 = ( max( 0, kmax ) )
36665.       $F_A104 = ( max( 0, ncols ) )
36665.       if ( and( -$F_A104, -$F_A103 ) < 0 ) then
36665.          $I_L36665_658 = 0
36665.          do
36665.             $I_L36665_625 = 0
36665.             do
36665.                $I_L36665_536 = 0
36665. !dir$ ivdep
36665.                do
36665.                   (condensed_mix_ratio%base_addr)(1 + $I_L36665_536, 1 + $I_L36665_625, 1 + $I_L36665_658, 0) = 0.0
36665.                   $I_L36665_536 = 1 + $I_L36665_536
36665.                   if ( $I_L36665_536 >= $F_A104 ) exit
36665.                enddo
36665.                $I_L36665_625 = 1 + $I_L36665_625
36665.                if ( $I_L36665_625 >= $F_A103 ) exit
36665.             enddo
36665.             $I_L36665_658 = 1 + $I_L36665_658
36665.             if ( $I_L36665_658 >= 4 ) exit
36665.          enddo
36665.       endif
36666.       $F_A105 = ( max( 0, kmax ) )
36666.       $F_A106 = ( max( 0, ncols ) )
36666.       if ( and( -$F_A106, -$F_A105 ) < 0 ) then
36666.          $I_L36666_660 = 0
36666.          do
36666.             $I_L36666_627 = 0
36666.             do
36666.                $I_L36666_538 = 0
36666. !dir$ ivdep
36666.                do
36666.                   (condensed_dim_char%base_addr)(1 + $I_L36666_538, 1 + $I_L36666_627, 1 + $I_L36666_660, 0) = 0.0
36666.                   $I_L36666_538 = 1 + $I_L36666_538
36666.                   if ( $I_L36666_538 >= $F_A106 ) exit
36666.                enddo
36666.                $I_L36666_627 = 1 + $I_L36666_627
36666.                if ( $I_L36666_627 >= $F_A105 ) exit
36666.             enddo
36666.             $I_L36666_660 = 1 + $I_L36666_660
36666.             if ( $I_L36666_660 >= 4 ) exit
36666.          enddo
36666.       endif
36667.       if ( ncols > 0 ) then
36668.          if ( kmax > 0 ) then
36668.             $I_L36668_561 = 0
36668.             do
36667.                $I_L36667_434 = 0
36667. !dir$ ivdep
36667.                do
36669.                   (condensed_mix_ratio%base_addr)(1 + $I_L36667_434, 1 + $I_L36668_561, 1, 0) = lmixr(1 + $I_L36667_434, 1 + $I_L36668_561) * ( 1.0 + -fice(1 + $I_L36667_434, 1 + $I_L36668_561) )
36671.                   (condensed_mix_ratio%base_addr)(1 + $I_L36667_434, 1 + $I_L36668_561, 2, 0) = fice(1 + $I_L36667_434, 1 + $I_L36668_561) * lmixr(1 + $I_L36667_434, 1 + $I_L36668_561)
36673.                   (condensed_mix_ratio%base_addr)(1 + $I_L36667_434, 1 + $I_L36668_561, 3, 0) = lmixr(1 + $I_L36667_434, 1 + $I_L36668_561) * ( 1.0 + -fice(1 + $I_L36667_434, 1 + $I_L36668_561) )
36675.                   (condensed_mix_ratio%base_addr)(1 + $I_L36667_434, 1 + $I_L36668_561, 4, 0) = fice(1 + $I_L36667_434, 1 + $I_L36668_561) * lmixr(1 + $I_L36667_434, 1 + $I_L36668_561)
36678.                   (condensed_dim_char%base_addr)(1 + $I_L36667_434, 1 + $I_L36668_561, 1, 0) = 9.9999999747524271e-7 * rel(1 + $I_L36667_434, 1 + $I_L36668_561)
36679.                   (condensed_dim_char%base_addr)(1 + $I_L36667_434, 1 + $I_L36668_561, 2, 0) = 9.9999999747524271e-7 * rei(1 + $I_L36667_434, 1 + $I_L36668_561)
36680.                   (condensed_dim_char%base_addr)(1 + $I_L36667_434, 1 + $I_L36668_561, 3, 0) = 9.9999999747524271e-7 * rel(1 + $I_L36667_434, 1 + $I_L36668_561)
36681.                   (condensed_dim_char%base_addr)(1 + $I_L36667_434, 1 + $I_L36668_561, 4, 0) = 9.9999999747524271e-7 * rei(1 + $I_L36667_434, 1 + $I_L36668_561)
36703.                   $I_L36667_434 = 1 + $I_L36667_434
36668.                   if ( $I_L36667_434 >= ncols ) exit
36668.                enddo
36682.                $I_L36668_561 = 1 + $I_L36668_561
36682.                if ( $I_L36668_561 >= kmax ) exit
36682.             enddo
36682.          endif
36682.       endif
36742.       t$10565 = 0
36742.       t$10566 = 0
36742.       t$10570 = 0
36742.       if ( lwdat%planck%thermal_coeff%header%a_contig == 1 ) then
36742. !dir$ suppress (lwdat%planck%thermal_coeff%base_addr)(lwdat%planck%thermal_coeff%dim_1%LB, lwdat%planck%thermal_coeff%dim_2%LB, 0)
36742.          t$10564 = loc( (lwdat%planck%thermal_coeff%base_addr)(lwdat%planck%thermal_coeff%dim_1%LB, lwdat%planck%thermal_coeff%dim_2%LB, 0) )
36742.       else
36742.          t$10565 = lwdat%planck%thermal_coeff%dim_1%EX
36742.          t$10566 = lwdat%planck%thermal_coeff%dim_2%EX
36742.          t$10570 = int( _alloc( max( 0, 8 * max( 0, lwdat%planck%thermal_coeff%dim_2%EX ) * max( 0, lwdat%planck%thermal_coeff%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10569, lwdat%planck%thermal_coeff )
36742. !dir$ suppress t$10569
36742.          t$10564 = loc( t$10569 )
36742.       endif
36746.       t$10572 = 0
36746.       t$10575 = 0
36746.       if ( lwdat%gas%n_band_absorb%header%a_contig == 1 ) then
36746. !dir$ suppress (lwdat%gas%n_band_absorb%base_addr)(lwdat%gas%n_band_absorb%dim_1%LB, 0)
36746.          t$10571 = loc( (lwdat%gas%n_band_absorb%base_addr)(lwdat%gas%n_band_absorb%dim_1%LB, 0) )
36746.       else
36746.          t$10572 = lwdat%gas%n_band_absorb%dim_1%EX
36746.          t$10575 = int( _alloc( max( 0, 4 * max( 0, lwdat%gas%n_band_absorb%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10574, lwdat%gas%n_band_absorb )
36746. !dir$ suppress t$10574
36746.          t$10571 = loc( t$10574 )
36746.       endif
36746.       t$10577 = 0
36746.       t$10578 = 0
36746.       t$10582 = 0
36746.       if ( lwdat%gas%index_absorb%header%a_contig == 1 ) then
36746. !dir$ suppress (lwdat%gas%index_absorb%base_addr)(lwdat%gas%index_absorb%dim_1%LB, lwdat%gas%index_absorb%dim_2%LB, 0)
36746.          t$10576 = loc( (lwdat%gas%index_absorb%base_addr)(lwdat%gas%index_absorb%dim_1%LB, lwdat%gas%index_absorb%dim_2%LB, 0) )
36746.       else
36746.          t$10577 = lwdat%gas%index_absorb%dim_1%EX
36746.          t$10578 = lwdat%gas%index_absorb%dim_2%EX
36746.          t$10582 = int( _alloc( max( 0, 4 * max( 0, lwdat%gas%index_absorb%dim_2%EX ) * max( 0, lwdat%gas%index_absorb%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10581, lwdat%gas%index_absorb )
36746. !dir$ suppress t$10581
36746.          t$10576 = loc( t$10581 )
36746.       endif
36747.       t$10584 = 0
36747.       t$10585 = 0
36747.       t$10589 = 0
36747.       if ( lwdat%gas%i_band_k%header%a_contig == 1 ) then
36747. !dir$ suppress (lwdat%gas%i_band_k%base_addr)(lwdat%gas%i_band_k%dim_1%LB, lwdat%gas%i_band_k%dim_2%LB, 0)
36747.          t$10583 = loc( (lwdat%gas%i_band_k%base_addr)(lwdat%gas%i_band_k%dim_1%LB, lwdat%gas%i_band_k%dim_2%LB, 0) )
36747.       else
36747.          t$10584 = lwdat%gas%i_band_k%dim_1%EX
36747.          t$10585 = lwdat%gas%i_band_k%dim_2%EX
36747.          t$10589 = int( _alloc( max( 0, 4 * max( 0, lwdat%gas%i_band_k%dim_2%EX ) * max( 0, lwdat%gas%i_band_k%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10588, lwdat%gas%i_band_k )
36747. !dir$ suppress t$10588
36747.          t$10583 = loc( t$10588 )
36747.       endif
36747.       t$10591 = 0
36747.       t$10592 = 0
36747.       t$10593 = 0
36747.       t$10598 = 0
36747.       if ( lwdat%gas%w%header%a_contig == 1 ) then
36747. !dir$ suppress (lwdat%gas%w%base_addr)(lwdat%gas%w%dim_1%LB, lwdat%gas%w%dim_2%LB, lwdat%gas%w%dim_3%LB, 0)
36747.          t$10590 = loc( (lwdat%gas%w%base_addr)(lwdat%gas%w%dim_1%LB, lwdat%gas%w%dim_2%LB, lwdat%gas%w%dim_3%LB, 0) )
36747.       else
36747.          t$10591 = lwdat%gas%w%dim_1%EX
36747.          t$10592 = lwdat%gas%w%dim_2%EX
36747.          t$10593 = lwdat%gas%w%dim_3%EX
36747.          t$10598 = int( _alloc( max( 0, 8 * max( 0, lwdat%gas%w%dim_3%EX ) * max( 0, lwdat%gas%w%dim_2%EX ) * max( 0, lwdat%gas%w%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10597, lwdat%gas%w )
36747. !dir$ suppress t$10597
36747.          t$10590 = loc( t$10597 )
36747.       endif
36747.       t$10600 = 0
36747.       t$10601 = 0
36747.       t$10602 = 0
36747.       t$10607 = 0
36747.       if ( lwdat%gas%k%header%a_contig == 1 ) then
36747. !dir$ suppress (lwdat%gas%k%base_addr)(lwdat%gas%k%dim_1%LB, lwdat%gas%k%dim_2%LB, lwdat%gas%k%dim_3%LB, 0)
36747.          t$10599 = loc( (lwdat%gas%k%base_addr)(lwdat%gas%k%dim_1%LB, lwdat%gas%k%dim_2%LB, lwdat%gas%k%dim_3%LB, 0) )
36747.       else
36747.          t$10600 = lwdat%gas%k%dim_1%EX
36747.          t$10601 = lwdat%gas%k%dim_2%EX
36747.          t$10602 = lwdat%gas%k%dim_3%EX
36747.          t$10607 = int( _alloc( max( 0, 8 * max( 0, lwdat%gas%k%dim_3%EX ) * max( 0, lwdat%gas%k%dim_2%EX ) * max( 0, lwdat%gas%k%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10606, lwdat%gas%k )
36747. !dir$ suppress t$10606
36747.          t$10599 = loc( t$10606 )
36747.       endif
36747.       t$10609 = 0
36747.       t$10610 = 0
36747.       t$10614 = 0
36747.       if ( lwdat%gas%i_scale_k%header%a_contig == 1 ) then
36747. !dir$ suppress (lwdat%gas%i_scale_k%base_addr)(lwdat%gas%i_scale_k%dim_1%LB, lwdat%gas%i_scale_k%dim_2%LB, 0)
36747.          t$10608 = loc( (lwdat%gas%i_scale_k%base_addr)(lwdat%gas%i_scale_k%dim_1%LB, lwdat%gas%i_scale_k%dim_2%LB, 0) )
36747.       else
36747.          t$10609 = lwdat%gas%i_scale_k%dim_1%EX
36747.          t$10610 = lwdat%gas%i_scale_k%dim_2%EX
36747.          t$10614 = int( _alloc( max( 0, 4 * max( 0, lwdat%gas%i_scale_k%dim_2%EX ) * max( 0, lwdat%gas%i_scale_k%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10613, lwdat%gas%i_scale_k )
36747. !dir$ suppress t$10613
36747.          t$10608 = loc( t$10613 )
36747.       endif
36748.       t$10616 = 0
36748.       t$10617 = 0
36748.       t$10621 = 0
36748.       if ( lwdat%gas%i_scale_fnc%header%a_contig == 1 ) then
36748. !dir$ suppress (lwdat%gas%i_scale_fnc%base_addr)(lwdat%gas%i_scale_fnc%dim_1%LB, lwdat%gas%i_scale_fnc%dim_2%LB, 0)
36748.          t$10615 = loc( (lwdat%gas%i_scale_fnc%base_addr)(lwdat%gas%i_scale_fnc%dim_1%LB, lwdat%gas%i_scale_fnc%dim_2%LB, 0) )
36748.       else
36748.          t$10616 = lwdat%gas%i_scale_fnc%dim_1%EX
36748.          t$10617 = lwdat%gas%i_scale_fnc%dim_2%EX
36748.          t$10621 = int( _alloc( max( 0, 4 * max( 0, lwdat%gas%i_scale_fnc%dim_2%EX ) * max( 0, lwdat%gas%i_scale_fnc%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10620, lwdat%gas%i_scale_fnc )
36748. !dir$ suppress t$10620
36748.          t$10615 = loc( t$10620 )
36748.       endif
36748.       t$10623 = 0
36748.       t$10624 = 0
36748.       t$10625 = 0
36748.       t$10626 = 0
36748.       t$10632 = 0
36748.       if ( lwdat%gas%scale%header%a_contig == 1 ) then
36748. !dir$ suppress (lwdat%gas%scale%base_addr)(lwdat%gas%scale%dim_1%LB, lwdat%gas%scale%dim_2%LB, lwdat%gas%scale%dim_3%LB, lwdat%gas%scale%dim_4%LB, 0)
36748.          t$10622 = loc( (lwdat%gas%scale%base_addr)(lwdat%gas%scale%dim_1%LB, lwdat%gas%scale%dim_2%LB, lwdat%gas%scale%dim_3%LB, lwdat%gas%scale%dim_4%LB, 0) )
36748.       else
36748.          t$10623 = lwdat%gas%scale%dim_1%EX
36748.          t$10624 = lwdat%gas%scale%dim_2%EX
36748.          t$10625 = lwdat%gas%scale%dim_3%EX
36748.          t$10626 = lwdat%gas%scale%dim_4%EX
36748.          t$10632 = int( _alloc( max( 0, 8 * max( 0, lwdat%gas%scale%dim_4%EX ) * max( 0, lwdat%gas%scale%dim_3%EX ) * max( 0, lwdat%gas%scale%dim_2%EX ) * max( 0, lwdat%gas%scale%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10631, lwdat%gas%scale )
36748. !dir$ suppress t$10631
36748.          t$10622 = loc( t$10631 )
36748.       endif
36749.       t$10634 = 0
36749.       t$10635 = 0
36749.       t$10639 = 0
36749.       if ( lwdat%gas%p_ref%header%a_contig == 1 ) then
36749. !dir$ suppress (lwdat%gas%p_ref%base_addr)(lwdat%gas%p_ref%dim_1%LB, lwdat%gas%p_ref%dim_2%LB, 0)
36749.          t$10633 = loc( (lwdat%gas%p_ref%base_addr)(lwdat%gas%p_ref%dim_1%LB, lwdat%gas%p_ref%dim_2%LB, 0) )
36749.       else
36749.          t$10634 = lwdat%gas%p_ref%dim_1%EX
36749.          t$10635 = lwdat%gas%p_ref%dim_2%EX
36749.          t$10639 = int( _alloc( max( 0, 8 * max( 0, lwdat%gas%p_ref%dim_2%EX ) * max( 0, lwdat%gas%p_ref%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10638, lwdat%gas%p_ref )
36749. !dir$ suppress t$10638
36749.          t$10633 = loc( t$10638 )
36749.       endif
36749.       t$10641 = 0
36749.       t$10642 = 0
36749.       t$10646 = 0
36749.       if ( lwdat%gas%t_ref%header%a_contig == 1 ) then
36749. !dir$ suppress (lwdat%gas%t_ref%base_addr)(lwdat%gas%t_ref%dim_1%LB, lwdat%gas%t_ref%dim_2%LB, 0)
36749.          t$10640 = loc( (lwdat%gas%t_ref%base_addr)(lwdat%gas%t_ref%dim_1%LB, lwdat%gas%t_ref%dim_2%LB, 0) )
36749.       else
36749.          t$10641 = lwdat%gas%t_ref%dim_1%EX
36749.          t$10642 = lwdat%gas%t_ref%dim_2%EX
36749.          t$10646 = int( _alloc( max( 0, 8 * max( 0, lwdat%gas%t_ref%dim_2%EX ) * max( 0, lwdat%gas%t_ref%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10645, lwdat%gas%t_ref )
36749. !dir$ suppress t$10645
36749.          t$10640 = loc( t$10645 )
36749.       endif
36758.       t$10648 = 0
36758.       t$10651 = 0
36758.       if ( lwdat%cont%n_band_continuum%header%a_contig == 1 ) then
36758. !dir$ suppress (lwdat%cont%n_band_continuum%base_addr)(lwdat%cont%n_band_continuum%dim_1%LB, 0)
36758.          t$10647 = loc( (lwdat%cont%n_band_continuum%base_addr)(lwdat%cont%n_band_continuum%dim_1%LB, 0) )
36758.       else
36758.          t$10648 = lwdat%cont%n_band_continuum%dim_1%EX
36758.          t$10651 = int( _alloc( max( 0, 4 * max( 0, lwdat%cont%n_band_continuum%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10650, lwdat%cont%n_band_continuum )
36758. !dir$ suppress t$10650
36758.          t$10647 = loc( t$10650 )
36758.       endif
36758.       t$10653 = 0
36758.       t$10654 = 0
36758.       t$10658 = 0
36758.       if ( lwdat%cont%index_continuum%header%a_contig == 1 ) then
36758. !dir$ suppress (lwdat%cont%index_continuum%base_addr)(lwdat%cont%index_continuum%dim_1%LB, lwdat%cont%index_continuum%dim_2%LB, 0)
36758.          t$10652 = loc( (lwdat%cont%index_continuum%base_addr)(lwdat%cont%index_continuum%dim_1%LB, lwdat%cont%index_continuum%dim_2%LB, 0) )
36758.       else
36758.          t$10653 = lwdat%cont%index_continuum%dim_1%EX
36758.          t$10654 = lwdat%cont%index_continuum%dim_2%EX
36758.          t$10658 = int( _alloc( max( 0, 4 * max( 0, lwdat%cont%index_continuum%dim_2%EX ) * max( 0, lwdat%cont%index_continuum%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10657, lwdat%cont%index_continuum )
36758. !dir$ suppress t$10657
36758.          t$10652 = loc( t$10657 )
36758.       endif
36759.       t$10660 = 0
36759.       t$10661 = 0
36759.       t$10665 = 0
36759.       if ( lwdat%cont%k_cont%header%a_contig == 1 ) then
36759. !dir$ suppress (lwdat%cont%k_cont%base_addr)(lwdat%cont%k_cont%dim_1%LB, lwdat%cont%k_cont%dim_2%LB, 0)
36759.          t$10659 = loc( (lwdat%cont%k_cont%base_addr)(lwdat%cont%k_cont%dim_1%LB, lwdat%cont%k_cont%dim_2%LB, 0) )
36759.       else
36759.          t$10660 = lwdat%cont%k_cont%dim_1%EX
36759.          t$10661 = lwdat%cont%k_cont%dim_2%EX
36759.          t$10665 = int( _alloc( max( 0, 8 * max( 0, lwdat%cont%k_cont%dim_2%EX ) * max( 0, lwdat%cont%k_cont%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10664, lwdat%cont%k_cont )
36759. !dir$ suppress t$10664
36759.          t$10659 = loc( t$10664 )
36759.       endif
36759.       t$10667 = 0
36759.       t$10668 = 0
36759.       t$10672 = 0
36759.       if ( lwdat%cont%i_scale_fnc_cont%header%a_contig == 1 ) then
36759. !dir$ suppress (lwdat%cont%i_scale_fnc_cont%base_addr)(lwdat%cont%i_scale_fnc_cont%dim_1%LB, lwdat%cont%i_scale_fnc_cont%dim_2%LB, 0)
36759.          t$10666 = loc( (lwdat%cont%i_scale_fnc_cont%base_addr)(lwdat%cont%i_scale_fnc_cont%dim_1%LB, lwdat%cont%i_scale_fnc_cont%dim_2%LB, 0) )
36759.       else
36759.          t$10667 = lwdat%cont%i_scale_fnc_cont%dim_1%EX
36759.          t$10668 = lwdat%cont%i_scale_fnc_cont%dim_2%EX
36759.          t$10672 = int( _alloc( max( 0, 4 * max( 0, lwdat%cont%i_scale_fnc_cont%dim_2%EX ) * max( 0, lwdat%cont%i_scale_fnc_cont%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10671, lwdat%cont%i_scale_fnc_cont )
36759. !dir$ suppress t$10671
36759.          t$10666 = loc( t$10671 )
36759.       endif
36759.       t$10674 = 0
36759.       t$10675 = 0
36759.       t$10676 = 0
36759.       t$10681 = 0
36759.       if ( lwdat%cont%scale_cont%header%a_contig == 1 ) then
36759. !dir$ suppress (lwdat%cont%scale_cont%base_addr)(lwdat%cont%scale_cont%dim_1%LB, lwdat%cont%scale_cont%dim_2%LB, lwdat%cont%scale_cont%dim_3%LB, 0)
36759.          t$10673 = loc( (lwdat%cont%scale_cont%base_addr)(lwdat%cont%scale_cont%dim_1%LB, lwdat%cont%scale_cont%dim_2%LB, lwdat%cont%scale_cont%dim_3%LB, 0) )
36759.       else
36759.          t$10674 = lwdat%cont%scale_cont%dim_1%EX
36759.          t$10675 = lwdat%cont%scale_cont%dim_2%EX
36759.          t$10676 = lwdat%cont%scale_cont%dim_3%EX
36759.          t$10681 = int( _alloc( max( 0, 8 * max( 0, lwdat%cont%scale_cont%dim_3%EX ) * max( 0, lwdat%cont%scale_cont%dim_2%EX ) * max( 0, lwdat%cont%scale_cont%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10680, lwdat%cont%scale_cont )
36759. !dir$ suppress t$10680
36759.          t$10673 = loc( t$10680 )
36759.       endif
36760.       t$10683 = 0
36760.       t$10684 = 0
36760.       t$10688 = 0
36760.       if ( lwdat%cont%p_ref_cont%header%a_contig == 1 ) then
36760. !dir$ suppress (lwdat%cont%p_ref_cont%base_addr)(lwdat%cont%p_ref_cont%dim_1%LB, lwdat%cont%p_ref_cont%dim_2%LB, 0)
36760.          t$10682 = loc( (lwdat%cont%p_ref_cont%base_addr)(lwdat%cont%p_ref_cont%dim_1%LB, lwdat%cont%p_ref_cont%dim_2%LB, 0) )
36760.       else
36760.          t$10683 = lwdat%cont%p_ref_cont%dim_1%EX
36760.          t$10684 = lwdat%cont%p_ref_cont%dim_2%EX
36760.          t$10688 = int( _alloc( max( 0, 8 * max( 0, lwdat%cont%p_ref_cont%dim_2%EX ) * max( 0, lwdat%cont%p_ref_cont%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10687, lwdat%cont%p_ref_cont )
36760. !dir$ suppress t$10687
36760.          t$10682 = loc( t$10687 )
36760.       endif
36760.       t$10690 = 0
36760.       t$10691 = 0
36760.       t$10695 = 0
36760.       if ( lwdat%cont%t_ref_cont%header%a_contig == 1 ) then
36760. !dir$ suppress (lwdat%cont%t_ref_cont%base_addr)(lwdat%cont%t_ref_cont%dim_1%LB, lwdat%cont%t_ref_cont%dim_2%LB, 0)
36760.          t$10689 = loc( (lwdat%cont%t_ref_cont%base_addr)(lwdat%cont%t_ref_cont%dim_1%LB, lwdat%cont%t_ref_cont%dim_2%LB, 0) )
36760.       else
36760.          t$10690 = lwdat%cont%t_ref_cont%dim_1%EX
36760.          t$10691 = lwdat%cont%t_ref_cont%dim_2%EX
36760.          t$10695 = int( _alloc( max( 0, 8 * max( 0, lwdat%cont%t_ref_cont%dim_2%EX ) * max( 0, lwdat%cont%t_ref_cont%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10694, lwdat%cont%t_ref_cont )
36760. !dir$ suppress t$10694
36760.          t$10689 = loc( t$10694 )
36760.       endif
36763.       t$10697 = 0
36763.       t$10698 = 0
36763.       t$10699 = 0
36763.       t$10704 = 0
36763.       if ( lwdat%aerosol%abs%header%a_contig == 1 ) then
36763. !dir$ suppress (lwdat%aerosol%abs%base_addr)(lwdat%aerosol%abs%dim_1%LB, lwdat%aerosol%abs%dim_2%LB, lwdat%aerosol%abs%dim_3%LB, 0)
36763.          t$10696 = loc( (lwdat%aerosol%abs%base_addr)(lwdat%aerosol%abs%dim_1%LB, lwdat%aerosol%abs%dim_2%LB, lwdat%aerosol%abs%dim_3%LB, 0) )
36763.       else
36763.          t$10697 = lwdat%aerosol%abs%dim_1%EX
36763.          t$10698 = lwdat%aerosol%abs%dim_2%EX
36763.          t$10699 = lwdat%aerosol%abs%dim_3%EX
36763.          t$10704 = int( _alloc( max( 0, 8 * max( 0, lwdat%aerosol%abs%dim_3%EX ) * max( 0, lwdat%aerosol%abs%dim_2%EX ) * max( 0, lwdat%aerosol%abs%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10703, lwdat%aerosol%abs )
36763. !dir$ suppress t$10703
36763.          t$10696 = loc( t$10703 )
36763.       endif
36763.       t$10706 = 0
36763.       t$10707 = 0
36763.       t$10708 = 0
36763.       t$10713 = 0
36763.       if ( lwdat%aerosol%scat%header%a_contig == 1 ) then
36763. !dir$ suppress (lwdat%aerosol%scat%base_addr)(lwdat%aerosol%scat%dim_1%LB, lwdat%aerosol%scat%dim_2%LB, lwdat%aerosol%scat%dim_3%LB, 0)
36763.          t$10705 = loc( (lwdat%aerosol%scat%base_addr)(lwdat%aerosol%scat%dim_1%LB, lwdat%aerosol%scat%dim_2%LB, lwdat%aerosol%scat%dim_3%LB, 0) )
36763.       else
36763.          t$10706 = lwdat%aerosol%scat%dim_1%EX
36763.          t$10707 = lwdat%aerosol%scat%dim_2%EX
36763.          t$10708 = lwdat%aerosol%scat%dim_3%EX
36763.          t$10713 = int( _alloc( max( 0, 8 * max( 0, lwdat%aerosol%scat%dim_3%EX ) * max( 0, lwdat%aerosol%scat%dim_2%EX ) * max( 0, lwdat%aerosol%scat%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10712, lwdat%aerosol%scat )
36763. !dir$ suppress t$10712
36763.          t$10705 = loc( t$10712 )
36763.       endif
36764.       t$10715 = 0
36764.       t$10718 = 0
36764.       if ( lwdat%aerosol%n_aerosol_phf_term%header%a_contig == 1 ) then
36764. !dir$ suppress (lwdat%aerosol%n_aerosol_phf_term%base_addr)(lwdat%aerosol%n_aerosol_phf_term%dim_1%LB, 0)
36764.          t$10714 = loc( (lwdat%aerosol%n_aerosol_phf_term%base_addr)(lwdat%aerosol%n_aerosol_phf_term%dim_1%LB, 0) )
36764.       else
36764.          t$10715 = lwdat%aerosol%n_aerosol_phf_term%dim_1%EX
36764.          t$10718 = int( _alloc( max( 0, 4 * max( 0, lwdat%aerosol%n_aerosol_phf_term%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10717, lwdat%aerosol%n_aerosol_phf_term )
36764. !dir$ suppress t$10717
36764.          t$10714 = loc( t$10717 )
36764.       endif
36764.       t$10720 = 0
36764.       t$10721 = 0
36764.       t$10722 = 0
36764.       t$10723 = 0
36764.       t$10729 = 0
36764.       if ( lwdat%aerosol%phf_fnc%header%a_contig == 1 ) then
36764. !dir$ suppress (lwdat%aerosol%phf_fnc%base_addr)(lwdat%aerosol%phf_fnc%dim_1%LB, lwdat%aerosol%phf_fnc%dim_2%LB, lwdat%aerosol%phf_fnc%dim_3%LB, lwdat%aerosol%phf_fnc%dim_4%LB, 0)
36764.          t$10719 = loc( (lwdat%aerosol%phf_fnc%base_addr)(lwdat%aerosol%phf_fnc%dim_1%LB, lwdat%aerosol%phf_fnc%dim_2%LB, lwdat%aerosol%phf_fnc%dim_3%LB, lwdat%aerosol%phf_fnc%dim_4%LB, 0) )
36764.       else
36764.          t$10720 = lwdat%aerosol%phf_fnc%dim_1%EX
36764.          t$10721 = lwdat%aerosol%phf_fnc%dim_2%EX
36764.          t$10722 = lwdat%aerosol%phf_fnc%dim_3%EX
36764.          t$10723 = lwdat%aerosol%phf_fnc%dim_4%EX
36764.          t$10729 = int( _alloc( max( 0, 8 * max( 0, lwdat%aerosol%phf_fnc%dim_4%EX ) * max( 0, lwdat%aerosol%phf_fnc%dim_3%EX ) * max( 0, lwdat%aerosol%phf_fnc%dim_2%EX ) * max( 0, lwdat%aerosol%phf_fnc%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10728, lwdat%aerosol%phf_fnc )
36764. !dir$ suppress t$10728
36764.          t$10719 = loc( t$10728 )
36764.       endif
36765.       t$10731 = 0
36765.       t$10734 = 0
36765.       if ( lwdat%aerosol%i_aerosol_parm%header%a_contig == 1 ) then
36765. !dir$ suppress (lwdat%aerosol%i_aerosol_parm%base_addr)(lwdat%aerosol%i_aerosol_parm%dim_1%LB, 0)
36765.          t$10730 = loc( (lwdat%aerosol%i_aerosol_parm%base_addr)(lwdat%aerosol%i_aerosol_parm%dim_1%LB, 0) )
36765.       else
36765.          t$10731 = lwdat%aerosol%i_aerosol_parm%dim_1%EX
36765.          t$10734 = int( _alloc( max( 0, 4 * max( 0, lwdat%aerosol%i_aerosol_parm%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10733, lwdat%aerosol%i_aerosol_parm )
36765. !dir$ suppress t$10733
36765.          t$10730 = loc( t$10733 )
36765.       endif
36765.       t$10736 = 0
36765.       t$10739 = 0
36765.       if ( lwdat%aerosol%nhumidity%header%a_contig == 1 ) then
36765. !dir$ suppress (lwdat%aerosol%nhumidity%base_addr)(lwdat%aerosol%nhumidity%dim_1%LB, 0)
36765.          t$10735 = loc( (lwdat%aerosol%nhumidity%base_addr)(lwdat%aerosol%nhumidity%dim_1%LB, 0) )
36765.       else
36765.          t$10736 = lwdat%aerosol%nhumidity%dim_1%EX
36765.          t$10739 = int( _alloc( max( 0, 4 * max( 0, lwdat%aerosol%nhumidity%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10738, lwdat%aerosol%nhumidity )
36765. !dir$ suppress t$10738
36765.          t$10735 = loc( t$10738 )
36765.       endif
36765.       t$10741 = 0
36765.       t$10742 = 0
36765.       t$10746 = 0
36765.       if ( lwdat%aerosol%humidities%header%a_contig == 1 ) then
36765. !dir$ suppress (lwdat%aerosol%humidities%base_addr)(lwdat%aerosol%humidities%dim_1%LB, lwdat%aerosol%humidities%dim_2%LB, 0)
36765.          t$10740 = loc( (lwdat%aerosol%humidities%base_addr)(lwdat%aerosol%humidities%dim_1%LB, lwdat%aerosol%humidities%dim_2%LB, 0) )
36765.       else
36765.          t$10741 = lwdat%aerosol%humidities%dim_1%EX
36765.          t$10742 = lwdat%aerosol%humidities%dim_2%EX
36765.          t$10746 = int( _alloc( max( 0, 8 * max( 0, lwdat%aerosol%humidities%dim_2%EX ) * max( 0, lwdat%aerosol%humidities%dim_1%EX ) ) ), 8 )
36709.          call _f90_copy_from_dv( t$10745, lwdat%aerosol%humidities )
36765. !dir$ suppress t$10745
36765.          t$10740 = loc( t$10745 )
36765.       endif
36709.       call radiance_calc( ierr, .false., .true., .true., .true., .true., .true., .true., 1, .true., 2, 12, 0, 0, 0, 0, 0, 0.0, 0.0, .true., 0, 0, 1, 0, direction(1, 1, 1), 0, viewing_level(1), 0, i_scatter_method(1), .true., 1, 14, map_band_channel(1), lwdat%dim%nd_band, 1, 9, weight_band(1), nd_profile, nd_layer, (pres%base_addr)(1, 1, 0), (temp%base_addr)(1, 1, 0), (t_ground%base_addr)(1, 0), (t_level%base_addr)(1, 0, 0), (d_mass%base_addr)(1, 1, 0), 2, (zen_0%base_addr)(1, 0), (solar_irrad%base_addr)(1, 0), wb_dummy(1), wb_dummy(1), lwdat%planck%n_deg_fit, t$10564, lwdat%planck%t_ref_planck, .true., i_gas_overlap(1), i_gas, (gas_mix_ratio%base_addr)(1, 1, 1, 0), t$10571, t$10576, t$10583, t$10590, t$10599, t$10608, t$10615, t$10622, t$10633, t$10640, l_doppler(1), doppler_correction(1), 1, (rho_alb%base_addr)(1, 1, 1, 0), f_brdf(1, 0, 0, 0), .false., i_dummy, i_dummy, list_dummy(1), rho_alb_dummy(1, 1, 1, 1), tt_dummy(1, 1), tt_dummy(1, 1), t$10647, t$10652, lwdat%cont%index_water, t$10659, t$10666, t$10673, t$10682, t$10689, lwdat%aerosol%n_aerosol, (aerosol_mix_ratio%base_addr)(1, 1, 1, 0), t$10696, t$10705, t$10714, t$10719, t$10730, t$10735, t$10740, n_opt_level_aerosol_prsc(1), n_phase_term_aerosol_prsc(1), aerosol_pressure_prsc(1, 1, 1), aerosol_absorption_prsc(1, 1, 1, 1), aerosol_scattering_prsc(1, 1, 1, 1), aerosol_phase_fnc_prsc(1, 1, 1, 1, 1), n_condensed, type_condensed(1), i_cloud, i_cloud_representation, (w_cloud%base_addr)(1, 1, 0), n_cloud_type, (frac_cloud%base_addr)(1, 1, 1, 0), (condensed_mix_ratio%base_addr)(1, 1, 1, 0), (condensed_dim_char%base_addr)(1, 1, 1, 0), i_condensed_param(1), condensed_n_phf(1), condensed_param_list(1, 1, 1), 0.0, 0.0, 1, 1, drop_pressure_prsc(1, 1), drop_absorption_prsc(1, 1, 1), drop_scattering_prsc(1, 1, 1), drop_phase_fnc_prsc(1, 1, 1, 1), 1, 1, ice_pressure_prsc(1, 1), ice_absorption_prsc(1, 1, 1), ice_scattering_prsc(1, 1, 1), ice_phase_fnc_prsc(1, 1, 1, 1), (flux_direct%base_addr)(1, 0, 1, 0), (flux_down%base_addr)(1, 0, 1, 0), (flux_up%base_addr)(1, 0, 1, 0), radiance(1, 1, 1, 1), photolysis(1, 1, 1), .true., 13, (flux_direct_clear%base_addr)(1, 0, 1, 0), (flux_down_clear%base_addr)(1, 0, 1, 0), (flux_up_clear%base_addr)(1, 0, 1, 0), .false., wb_dummy(1), tt_dummy(1, 1), tt_dummy(1, 1), tt_dummy(1, 1), ft_dummy(1, 1, 1), ft_dummy(1, 1, 1), nd_profile, nd_layer, 1, nd_layer, 1, nd_2sg_profile, nd_flux_profile, 1, 1, 1, lwdat%dim%nd_band, lwdat%dim%nd_species, 25, lwdat%dim%nd_scale_variable, lwdat%dim%nd_continuum, lwdat%dim%nd_aerosol_species, lwdat%dim%nd_humidity, lwdat%dim%nd_cloud_parameter, lwdat%dim%nd_thermal_coeff, 2, 2, 5, 1, 1, 1, 1, lwdat%dim%nd_phase_term, 1, 1, 1, 1, 3, 4, 4, 18, 1, 1 )
36765.       if ( lwdat%aerosol%humidities%header%a_contig /= 1 ) then
36765.          _free( t$10746 )
36765.       endif
36765.       if ( lwdat%aerosol%nhumidity%header%a_contig /= 1 ) then
36765.          _free( t$10739 )
36765.       endif
36765.       if ( lwdat%aerosol%i_aerosol_parm%header%a_contig /= 1 ) then
36765.          _free( t$10734 )
36765.       endif
36764.       if ( lwdat%aerosol%phf_fnc%header%a_contig /= 1 ) then
36764.          _free( t$10729 )
36764.       endif
36764.       if ( lwdat%aerosol%n_aerosol_phf_term%header%a_contig /= 1 ) then
36764.          _free( t$10718 )
36764.       endif
36763.       if ( lwdat%aerosol%scat%header%a_contig /= 1 ) then
36763.          _free( t$10713 )
36763.       endif
36763.       if ( lwdat%aerosol%abs%header%a_contig /= 1 ) then
36763.          _free( t$10704 )
36763.       endif
36760.       if ( lwdat%cont%t_ref_cont%header%a_contig /= 1 ) then
36760.          _free( t$10695 )
36760.       endif
36760.       if ( lwdat%cont%p_ref_cont%header%a_contig /= 1 ) then
36760.          _free( t$10688 )
36760.       endif
36759.       if ( lwdat%cont%scale_cont%header%a_contig /= 1 ) then
36759.          _free( t$10681 )
36759.       endif
36759.       if ( lwdat%cont%i_scale_fnc_cont%header%a_contig /= 1 ) then
36759.          _free( t$10672 )
36759.       endif
36759.       if ( lwdat%cont%k_cont%header%a_contig /= 1 ) then
36759.          _free( t$10665 )
36759.       endif
36758.       if ( lwdat%cont%index_continuum%header%a_contig /= 1 ) then
36758.          _free( t$10658 )
36758.       endif
36758.       if ( lwdat%cont%n_band_continuum%header%a_contig /= 1 ) then
36758.          _free( t$10651 )
36758.       endif
36749.       if ( lwdat%gas%t_ref%header%a_contig /= 1 ) then
36749.          _free( t$10646 )
36749.       endif
36749.       if ( lwdat%gas%p_ref%header%a_contig /= 1 ) then
36749.          _free( t$10639 )
36749.       endif
36748.       if ( lwdat%gas%scale%header%a_contig /= 1 ) then
36748.          _free( t$10632 )
36748.       endif
36748.       if ( lwdat%gas%i_scale_fnc%header%a_contig /= 1 ) then
36748.          _free( t$10621 )
36748.       endif
36747.       if ( lwdat%gas%i_scale_k%header%a_contig /= 1 ) then
36747.          _free( t$10614 )
36747.       endif
36747.       if ( lwdat%gas%k%header%a_contig /= 1 ) then
36747.          _free( t$10607 )
36747.       endif
36747.       if ( lwdat%gas%w%header%a_contig /= 1 ) then
36747.          _free( t$10598 )
36747.       endif
36747.       if ( lwdat%gas%i_band_k%header%a_contig /= 1 ) then
36747.          _free( t$10589 )
36747.       endif
36746.       if ( lwdat%gas%index_absorb%header%a_contig /= 1 ) then
36746.          _free( t$10582 )
36746.       endif
36746.       if ( lwdat%gas%n_band_absorb%header%a_contig /= 1 ) then
36746.          _free( t$10575 )
36746.       endif
36742.       if ( lwdat%planck%thermal_coeff%header%a_contig /= 1 ) then
36742.          _free( t$10570 )
36742.       endif
36814.       if ( ierr /= 0 ) then
36814.           _substr(t$10747,1,4) = ' '
36814.          call _stop(  _substr(t$10747,1,1) )
36814.       else
36817.          if ( nd_profile > 0 ) then
36818.             if ( nd_layer >= 0 ) then
36818.                $I_L36818_563 = 0
36818.                do
36817.                   $I_L36817_436 = 0
36817. !dir$ ivdep
36817.                   do
36820.                      (flux_net%base_addr)(1 + $I_L36817_436, $I_L36818_563, 1, 0) = (flux_down%base_addr)(1 + $I_L36817_436, $I_L36818_563, 1, 0) + -(flux_up%base_addr)(1 + $I_L36817_436, $I_L36818_563, 1, 0)
36821.                      (flux_net_clear%base_addr)(1 + $I_L36817_436, $I_L36818_563, 1, 0) = (flux_down_clear%base_addr)(1 + $I_L36817_436, $I_L36818_563, 1, 0) + -(flux_up_clear%base_addr)(1 + $I_L36817_436, $I_L36818_563, 1, 0)
36824.                      $I_L36817_436 = 1 + $I_L36817_436
36818.                      if ( $I_L36817_436 >= nd_profile ) exit
36818.                   enddo
36823.                   $I_L36818_563 = 1 + $I_L36818_563
36823.                   if ( $I_L36818_563 >= 1 + nd_layer ) exit
36823.                enddo
36823.             endif
36835.             $I_L36835_438 = 0
36835. !dir$ ivdep
36835.             do
36843.                lw_sfc_down(1 + $I_L36835_438) = lw_sfc_down(1 + $I_L36835_438) + (flux_down%base_addr)(1 + $I_L36835_438, nd_layer, 1, 0)
36842.                lw_sfc_down_clr(1 + $I_L36835_438) = lw_sfc_down_clr(1 + $I_L36835_438) + (flux_down_clear%base_addr)(1 + $I_L36835_438, nd_layer, 1, 0)
36841.                lw_sfc_net(1 + $I_L36835_438) = lw_sfc_net(1 + $I_L36835_438) + -(flux_net%base_addr)(1 + $I_L36835_438, nd_layer, 1, 0)
36840.                lw_sfc_net_clr(1 + $I_L36835_438) = lw_sfc_net_clr(1 + $I_L36835_438) + -(flux_net_clear%base_addr)(1 + $I_L36835_438, nd_layer, 1, 0)
36838.                lw_toa_up(1 + $I_L36835_438) = lw_toa_up(1 + $I_L36835_438) + (flux_up%base_addr)(1 + $I_L36835_438, 0, 1, 0)
36837.                lw_toa_up_clr(1 + $I_L36835_438) = lw_toa_up_clr(1 + $I_L36835_438) + (flux_up_clear%base_addr)(1 + $I_L36835_438, 0, 1, 0)
36845.                $I_L36835_438 = 1 + $I_L36835_438
36835.                if ( $I_L36835_438 >= nd_profile ) exit
36835.             enddo
36856.             if ( kmax > 0 ) then
36856.                $I_L36856_565 = 0
36856. !dir$ blocking_size( 1, 1 )
36856.                do
36855.                   $I_L36855_440 = 0
36855. !dir$ ivdep
36855. !dir$ blocking_size( 256, 256 )
36855.                   do
36862.                      lw_cool_clr(1 + $I_L36855_440, 1 + $I_L36856_565) = lw_cool_clr(1 + $I_L36855_440, 1 + $I_L36856_565) + ( 9.9502487562189048e-4 * 1.0/(d_mass%base_addr)(1 + $I_L36855_440, 1 + $I_L36856_565, 0) * ( (flux_net_clear%base_addr)(1 + $I_L36855_440, $I_L36856_565, 1, 0) + -(flux_net_clear%base_addr)(1 + $I_L36855_440, 1 + $I_L36856_565, 1, 0) ) )
36858.                      lw_cool(1 + $I_L36855_440, 1 + $I_L36856_565) = lw_cool(1 + $I_L36855_440, 1 + $I_L36856_565) + ( 9.9502487562189048e-4 * ( (flux_net%base_addr)(1 + $I_L36855_440, $I_L36856_565, 1, 0) + -(flux_net%base_addr)(1 + $I_L36855_440, 1 + $I_L36856_565, 1, 0) ) * 1.0/(d_mass%base_addr)(1 + $I_L36855_440, 1 + $I_L36856_565, 0) )
36867.                      $I_L36855_440 = 1 + $I_L36855_440
36856.                      if ( $I_L36855_440 >= nd_profile ) exit
36856.                   enddo
36866.                   $I_L36856_565 = 1 + $I_L36856_565
36866.                   if ( $I_L36856_565 >= kmax ) exit
36866.                enddo
36866.             endif
36866.          endif
36873.          $_allo_P46(0) = 0x1000000000001L
36873.          $_allo_P46(1) = loc( pres )
36873.          call __deallocate( $_allo_P46, 0, 0, _fcd( 0, 0 ) )
36873.          pres%header%assoc = 0
36874.          $_allo_P47(0) = 0x1000000000001L
36874.          $_allo_P47(1) = loc( temp )
36874.          call __deallocate( $_allo_P47, 0, 0, _fcd( 0, 0 ) )
36874.          temp%header%assoc = 0
36875.          $_allo_P48(0) = 0x1000000000001L
36875.          $_allo_P48(1) = loc( d_mass )
36875.          call __deallocate( $_allo_P48, 0, 0, _fcd( 0, 0 ) )
36875.          d_mass%header%assoc = 0
36876.          $_allo_P49(0) = 0x1000000000001L
36876.          $_allo_P49(1) = loc( t_ground )
36876.          call __deallocate( $_allo_P49, 0, 0, _fcd( 0, 0 ) )
36876.          t_ground%header%assoc = 0
36877.          $_allo_P50(0) = 0x1000000000001L
36877.          $_allo_P50(1) = loc( t_level )
36877.          call __deallocate( $_allo_P50, 0, 0, _fcd( 0, 0 ) )
36877.          t_level%header%assoc = 0
36878.          $_allo_P51(0) = 0x1000000000001L
36878.          $_allo_P51(1) = loc( zen_0 )
36878.          call __deallocate( $_allo_P51, 0, 0, _fcd( 0, 0 ) )
36878.          zen_0%header%assoc = 0
36879.          $_allo_P52(0) = 0x1000000000001L
36879.          $_allo_P52(1) = loc( solar_irrad )
36879.          call __deallocate( $_allo_P52, 0, 0, _fcd( 0, 0 ) )
36879.          solar_irrad%header%assoc = 0
36880.          $_allo_P53(0) = 0x1000000000001L
36880.          $_allo_P53(1) = loc( rho_alb )
36880.          call __deallocate( $_allo_P53, 0, 0, _fcd( 0, 0 ) )
36880.          rho_alb%header%assoc = 0
36882.          $_allo_P54(0) = 0x1000000000001L
36882.          $_allo_P54(1) = loc( gas_mix_ratio )
36882.          call __deallocate( $_allo_P54, 0, 0, _fcd( 0, 0 ) )
36882.          gas_mix_ratio%header%assoc = 0
36883.          $_allo_P55(0) = 0x1000000000001L
36883.          $_allo_P55(1) = loc( aerosol_mix_ratio )
36883.          call __deallocate( $_allo_P55, 0, 0, _fcd( 0, 0 ) )
36883.          aerosol_mix_ratio%header%assoc = 0
36885.          $_allo_P56(0) = 0x1000000000001L
36885.          $_allo_P56(1) = loc( w_cloud )
36885.          call __deallocate( $_allo_P56, 0, 0, _fcd( 0, 0 ) )
36885.          w_cloud%header%assoc = 0
36886.          $_allo_P57(0) = 0x1000000000001L
36886.          $_allo_P57(1) = loc( frac_cloud )
36886.          call __deallocate( $_allo_P57, 0, 0, _fcd( 0, 0 ) )
36886.          frac_cloud%header%assoc = 0
36887.          $_allo_P58(0) = 0x1000000000001L
36887.          $_allo_P58(1) = loc( condensed_mix_ratio )
36887.          call __deallocate( $_allo_P58, 0, 0, _fcd( 0, 0 ) )
36887.          condensed_mix_ratio%header%assoc = 0
36888.          $_allo_P59(0) = 0x1000000000001L
36888.          $_allo_P59(1) = loc( condensed_dim_char )
36888.          call __deallocate( $_allo_P59, 0, 0, _fcd( 0, 0 ) )
36888.          condensed_dim_char%header%assoc = 0
36889.          $_allo_P60(0) = 0x1000000000001L
36889.          $_allo_P60(1) = loc( clouds )
36889.          call __deallocate( $_allo_P60, 0, 0, _fcd( 0, 0 ) )
36889.          clouds%header%assoc = 0
36891.          $_allo_P61(0) = 0x1000000000001L
36891.          $_allo_P61(1) = loc( flux_direct )
36891.          call __deallocate( $_allo_P61, 0, 0, _fcd( 0, 0 ) )
36891.          flux_direct%header%assoc = 0
36892.          $_allo_P62(0) = 0x1000000000001L
36892.          $_allo_P62(1) = loc( flux_down )
36892.          call __deallocate( $_allo_P62, 0, 0, _fcd( 0, 0 ) )
36892.          flux_down%header%assoc = 0
36893.          $_allo_P63(0) = 0x1000000000001L
36893.          $_allo_P63(1) = loc( flux_up )
36893.          call __deallocate( $_allo_P63, 0, 0, _fcd( 0, 0 ) )
36893.          flux_up%header%assoc = 0
36894.          $_allo_P64(0) = 0x1000000000001L
36894.          $_allo_P64(1) = loc( flux_net )
36894.          call __deallocate( $_allo_P64, 0, 0, _fcd( 0, 0 ) )
36894.          flux_net%header%assoc = 0
36896.          $_allo_P65(0) = 0x1000000000001L
36896.          $_allo_P65(1) = loc( flux_direct_clear )
36896.          call __deallocate( $_allo_P65, 0, 0, _fcd( 0, 0 ) )
36896.          flux_direct_clear%header%assoc = 0
36897.          $_allo_P66(0) = 0x1000000000001L
36897.          $_allo_P66(1) = loc( flux_down_clear )
36897.          call __deallocate( $_allo_P66, 0, 0, _fcd( 0, 0 ) )
36897.          flux_down_clear%header%assoc = 0
36898.          $_allo_P67(0) = 0x1000000000001L
36898.          $_allo_P67(1) = loc( flux_up_clear )
36898.          call __deallocate( $_allo_P67, 0, 0, _fcd( 0, 0 ) )
36898.          flux_up_clear%header%assoc = 0
36899.          $_allo_P68(0) = 0x1000000000001L
36899.          $_allo_P68(1) = loc( flux_net_clear )
36899.          call __deallocate( $_allo_P68, 0, 0, _fcd( 0, 0 ) )
36899.          flux_net_clear%header%assoc = 0
36315.          $_allo_P69(0) = 0x17000000000001L
36315.          $_allo_P69(1) = loc( zen_0 )
36315.          $_allo_P69(2) = loc( w_cloud )
36315.          $_allo_P69(3) = loc( t_level )
36315.          $_allo_P69(4) = loc( t_ground )
36315.          $_allo_P69(5) = loc( temp )
36315.          $_allo_P69(6) = loc( solar_irrad )
36315.          $_allo_P69(7) = loc( rho_alb )
36315.          $_allo_P69(8) = loc( pres )
36315.          $_allo_P69(9) = loc( gas_mix_ratio )
36315.          $_allo_P69(10) = loc( frac_cloud )
36315.          $_allo_P69(11) = loc( flux_up_clear )
36315.          $_allo_P69(12) = loc( flux_up )
36315.          $_allo_P69(13) = loc( flux_net_clear )
36315.          $_allo_P69(14) = loc( flux_net )
36315.          $_allo_P69(15) = loc( flux_down_clear )
36315.          $_allo_P69(16) = loc( flux_down )
36315.          $_allo_P69(17) = loc( flux_direct_clear )
36315.          $_allo_P69(18) = loc( flux_direct )
36315.          $_allo_P69(19) = loc( d_mass )
36315.          $_allo_P69(20) = loc( condensed_mix_ratio )
36315.          $_allo_P69(21) = loc( condensed_dim_char )
36315.          $_allo_P69(22) = loc( clouds )
36315.          $_allo_P69(23) = loc( aerosol_mix_ratio )
36315.          call _dealloc( $_allo_P69, 0, 0, _fcd( 0, 0 ) )
35859.          _free( t$10108 )
35859.       endif
36902.       return
36902.       end
36902.       
34535.       
34535.       module rad_ukmo
34535.       end
34535.       
