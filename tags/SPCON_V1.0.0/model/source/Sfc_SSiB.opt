       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  Sfc_SSiB.f90
       !        File                  :  Sfc_SSiB.opt
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
  183.       
  183.       subroutine initssib( ibmax, jbmax, delsig, path, fnamesibveg_in, fnamesibalb_in )
  183.       delsig%dim_1%LB = 1
  183.       t$1454 = _len( path )
  183.       t$1455 = _len( fnamesibveg_in )
  183.       t$1456 = _len( fnamesibalb_in )
  190.       expcut = -122.03700992868443
  191.       rbyg = 14.645408163265305 * (delsig%base_addr)(1, 0)
  192.        _substr(path_in,1,200) =  _substr(path,1,_len( path ))
  193.        _substr(fnamesibveg,1,200) =  _substr(fnamesibveg_in,1,_len( fnamesibveg_in ))
  194.        _substr(fnamesibalb,1,200) =  _substr(fnamesibalb_in,1,_len( fnamesibalb_in ))
  195.       vcover_gbl%header%a_contig = 1
  195.       vcover_gbl%dim_1%LB = 1
  195.       vcover_gbl%dim_1%EX = ( max( 0, ibmax ) )
  195.       vcover_gbl%dim_1%SM = 1
  195.       vcover_gbl%dim_2%LB = 1
  195.       vcover_gbl%dim_2%EX = ( max( 0, jbmax ) )
  195.       vcover_gbl%dim_2%SM = ( max( 0, ibmax ) )
  195.       vcover_gbl%dim_3%LB = 1
  195.       vcover_gbl%dim_3%EX = 2
  195.       vcover_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  195.       $_allo_P0(0) = 0x1000000000001L
  195.       $_allo_P0(1) = loc( vcover_gbl )
  195.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
  196.       zlt_gbl%header%a_contig = 1
  196.       zlt_gbl%dim_1%LB = 1
  196.       zlt_gbl%dim_1%EX = ( max( 0, ibmax ) )
  196.       zlt_gbl%dim_1%SM = 1
  196.       zlt_gbl%dim_2%LB = 1
  196.       zlt_gbl%dim_2%EX = ( max( 0, jbmax ) )
  196.       zlt_gbl%dim_2%SM = ( max( 0, ibmax ) )
  196.       zlt_gbl%dim_3%LB = 1
  196.       zlt_gbl%dim_3%EX = 2
  196.       zlt_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  196.       $_allo_P1(0) = 0x1000000000001L
  196.       $_allo_P1(1) = loc( zlt_gbl )
  196.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
  197.       green_gbl%header%a_contig = 1
  197.       green_gbl%dim_1%LB = 1
  197.       green_gbl%dim_1%EX = ( max( 0, ibmax ) )
  197.       green_gbl%dim_1%SM = 1
  197.       green_gbl%dim_2%LB = 1
  197.       green_gbl%dim_2%EX = ( max( 0, jbmax ) )
  197.       green_gbl%dim_2%SM = ( max( 0, ibmax ) )
  197.       green_gbl%dim_3%LB = 1
  197.       green_gbl%dim_3%EX = 2
  197.       green_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  197.       $_allo_P2(0) = 0x1000000000001L
  197.       $_allo_P2(1) = loc( green_gbl )
  197.       call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
  198.       chil_gbl%header%a_contig = 1
  198.       chil_gbl%dim_1%LB = 1
  198.       chil_gbl%dim_1%EX = ( max( 0, ibmax ) )
  198.       chil_gbl%dim_1%SM = 1
  198.       chil_gbl%dim_2%LB = 1
  198.       chil_gbl%dim_2%EX = ( max( 0, jbmax ) )
  198.       chil_gbl%dim_2%SM = ( max( 0, ibmax ) )
  198.       chil_gbl%dim_3%LB = 1
  198.       chil_gbl%dim_3%EX = 2
  198.       chil_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  198.       $_allo_P3(0) = 0x1000000000001L
  198.       $_allo_P3(1) = loc( chil_gbl )
  198.       call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
  199.       topt_gbl%header%a_contig = 1
  199.       topt_gbl%dim_1%LB = 1
  199.       topt_gbl%dim_1%EX = ( max( 0, ibmax ) )
  199.       topt_gbl%dim_1%SM = 1
  199.       topt_gbl%dim_2%LB = 1
  199.       topt_gbl%dim_2%EX = ( max( 0, jbmax ) )
  199.       topt_gbl%dim_2%SM = ( max( 0, ibmax ) )
  199.       topt_gbl%dim_3%LB = 1
  199.       topt_gbl%dim_3%EX = 2
  199.       topt_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  199.       $_allo_P4(0) = 0x1000000000001L
  199.       $_allo_P4(1) = loc( topt_gbl )
  199.       call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
  200.       tll_gbl%header%a_contig = 1
  200.       tll_gbl%dim_1%LB = 1
  200.       tll_gbl%dim_1%EX = ( max( 0, ibmax ) )
  200.       tll_gbl%dim_1%SM = 1
  200.       tll_gbl%dim_2%LB = 1
  200.       tll_gbl%dim_2%EX = ( max( 0, jbmax ) )
  200.       tll_gbl%dim_2%SM = ( max( 0, ibmax ) )
  200.       tll_gbl%dim_3%LB = 1
  200.       tll_gbl%dim_3%EX = 2
  200.       tll_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  200.       $_allo_P5(0) = 0x1000000000001L
  200.       $_allo_P5(1) = loc( tll_gbl )
  200.       call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
  201.       tu_gbl%header%a_contig = 1
  201.       tu_gbl%dim_1%LB = 1
  201.       tu_gbl%dim_1%EX = ( max( 0, ibmax ) )
  201.       tu_gbl%dim_1%SM = 1
  201.       tu_gbl%dim_2%LB = 1
  201.       tu_gbl%dim_2%EX = ( max( 0, jbmax ) )
  201.       tu_gbl%dim_2%SM = ( max( 0, ibmax ) )
  201.       tu_gbl%dim_3%LB = 1
  201.       tu_gbl%dim_3%EX = 2
  201.       tu_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  201.       $_allo_P6(0) = 0x1000000000001L
  201.       $_allo_P6(1) = loc( tu_gbl )
  201.       call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
  202.       defac_gbl%header%a_contig = 1
  202.       defac_gbl%dim_1%LB = 1
  202.       defac_gbl%dim_1%EX = ( max( 0, ibmax ) )
  202.       defac_gbl%dim_1%SM = 1
  202.       defac_gbl%dim_2%LB = 1
  202.       defac_gbl%dim_2%EX = ( max( 0, jbmax ) )
  202.       defac_gbl%dim_2%SM = ( max( 0, ibmax ) )
  202.       defac_gbl%dim_3%LB = 1
  202.       defac_gbl%dim_3%EX = 2
  202.       defac_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  202.       $_allo_P7(0) = 0x1000000000001L
  202.       $_allo_P7(1) = loc( defac_gbl )
  202.       call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
  203.       ph2_gbl%header%a_contig = 1
  203.       ph2_gbl%dim_1%LB = 1
  203.       ph2_gbl%dim_1%EX = ( max( 0, ibmax ) )
  203.       ph2_gbl%dim_1%SM = 1
  203.       ph2_gbl%dim_2%LB = 1
  203.       ph2_gbl%dim_2%EX = ( max( 0, jbmax ) )
  203.       ph2_gbl%dim_2%SM = ( max( 0, ibmax ) )
  203.       ph2_gbl%dim_3%LB = 1
  203.       ph2_gbl%dim_3%EX = 2
  203.       ph2_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  203.       $_allo_P8(0) = 0x1000000000001L
  203.       $_allo_P8(1) = loc( ph2_gbl )
  203.       call __allocate( $_allo_P8, 0, 0, _fcd( 0, 0 ) )
  204.       ph1_gbl%header%a_contig = 1
  204.       ph1_gbl%dim_1%LB = 1
  204.       ph1_gbl%dim_1%EX = ( max( 0, ibmax ) )
  204.       ph1_gbl%dim_1%SM = 1
  204.       ph1_gbl%dim_2%LB = 1
  204.       ph1_gbl%dim_2%EX = ( max( 0, jbmax ) )
  204.       ph1_gbl%dim_2%SM = ( max( 0, ibmax ) )
  204.       ph1_gbl%dim_3%LB = 1
  204.       ph1_gbl%dim_3%EX = 2
  204.       ph1_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  204.       $_allo_P9(0) = 0x1000000000001L
  204.       $_allo_P9(1) = loc( ph1_gbl )
  204.       call __allocate( $_allo_P9, 0, 0, _fcd( 0, 0 ) )
  205.       rstpar_gbl%header%a_contig = 1
  205.       rstpar_gbl%dim_1%LB = 1
  205.       rstpar_gbl%dim_1%EX = ( max( 0, ibmax ) )
  205.       rstpar_gbl%dim_1%SM = 1
  205.       rstpar_gbl%dim_2%LB = 1
  205.       rstpar_gbl%dim_2%EX = ( max( 0, jbmax ) )
  205.       rstpar_gbl%dim_2%SM = ( max( 0, ibmax ) )
  205.       rstpar_gbl%dim_3%LB = 1
  205.       rstpar_gbl%dim_3%EX = 2
  205.       rstpar_gbl%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  205.       rstpar_gbl%dim_4%LB = 1
  205.       rstpar_gbl%dim_4%EX = 3
  205.       rstpar_gbl%dim_4%SM = ( 2 * max( 0, ibmax ) * max( 0, jbmax ) )
  205.       $_allo_P10(0) = 0x1000000000001L
  205.       $_allo_P10(1) = loc( rstpar_gbl )
  205.       call __allocate( $_allo_P10, 0, 0, _fcd( 0, 0 ) )
  206.       return
  206.       end
  206.       
  208.       
  208.       subroutine ssib_driver( jdt, latitu, bps, psb, dzm, em, gmt, gmq, gmu, cu, cuni, ctni, ustar, cosz, sinclt, rhoair, psy, rcp, wc, wg, fc, fg, hr, ect, eci, egt, egi, egs, ec, eg, hc, hg, ecidif, egidif, ecmass, egmass, etmass, hflux, chf, shf, fluxef, roff, drag, ra, rb, rd, rc, rg, tcta, tgta, ta, ea, etc, etg, btc, btg, u2, radt, par, pd, rst, rsoil, phroot, hrr, phsoil, cc, cg, satcap, snow, dtc, dtg, dtm, dqm, stm, extk, radfac, closs, gloss, thermk, p1f, p2f, tc, tg, td, capac, w, qm, tm, um, vm, psur, ppc, ppl, radn, itype, dtc3x, mon, nmax, ncols, zlwup, salb, tgeff, nsx, tmtx, qmtx, umtx, gt, gq, gu, gv, gps, imask, kmax, ktm, initlz, tcm, tgm, tdm, wm, beam_visb, beam_visd, beam_nirb, beam_nird, cos2, dlwbot, capacm, td0, tg0, zenith, kt, iswrad, ilwrad, xvisb, xvisd, xnirb, xnird, ppli, ppci, tsea, ssib, w0, tc0, capac0, intg, slrad, tseam, tsurf, qsurf, colrad, sigki, delsig, sens, evap, umom, vmom, zorl, rmi, rhi, cond, stor, z0x, speedm, ustarm, z0sea, rho, d, qsfc0, tsfc0, qsfcm, tsfcm, qsfc, tsfc, qm0, qmm, tm0, tmm, mskant )
  208.       t$1 = ncols
  329.       t$1457 = _zla( 0, ncols )
  208.       t$1458 = _zla( 0, ncols )
  208.       t$1459 = 3 * _zla( 0, ncols )
  208.       t$1460 = 4 * _zla( 0, ncols )
  208.       t$1461 = 2 * _zla( 0, ncols )
  208.       t$1462 = 3 * _zla( 0, ncols )
  208.       t$1463 = 2 * _zla( 0, ncols )
  208.       t$1464 = 6 * _zla( 0, ncols )
  208.       t$1465 = 12 * _zla( 0, ncols )
  208.       t$1466 = 2 * _zla( 0, ncols )
  208.       t$1467 = 3 * _zla( 0, ncols )
  208.       t$1468 = 6 * _zla( 0, ncols )
  208.       t$1469 = 2 * _zla( 0, ncols )
  208.       t$119 = kmax
  358.       t$1470 = _zla( 0, kmax )
  208.       t$1471 = _zla( 0, ncols ) * _zla( 0, kmax )
  208.       t$1472 = 3 * _zla( 0, ncols ) * _zla( 0, kmax )
  208.       t$1473 = 4 * _zla( 0, ncols ) * _zla( 0, kmax )
  208.       t$1474 = _zla( 0, ncols ) * _zla( 0, kmax )
  208.       t$1475 = _len( iswrad )
  208.       t$1476 = _len( ilwrad )
  437.       t$1479 = 16 * _zla( 0, ncols )
  445.       t$1480 = 8 * ( 7 + 16 * _zla( 0, ncols ) ) / 8
  445.       t$1482 = t$1480 + 16 * _zla( 0, ncols )
  436.       t$1483 = 8 * ( 7 + t$1480 + 16 * _zla( 0, ncols ) ) / 8
  436.       t$1485 = t$1483 + 16 * _zla( 0, ncols )
  450.       t$1486 = 8 * ( 7 + t$1483 + 16 * _zla( 0, ncols ) ) / 8
  450.       t$1488 = t$1486 + 16 * _zla( 0, ncols )
  449.       t$1489 = 8 * ( 7 + t$1486 + 16 * _zla( 0, ncols ) ) / 8
  449.       t$1491 = t$1489 + 16 * _zla( 0, ncols )
  440.       t$1492 = 8 * ( 7 + t$1489 + 16 * _zla( 0, ncols ) ) / 8
  440.       t$1494 = t$1492 + 8 * _zla( 0, ncols )
  439.       t$1495 = 8 * ( 7 + t$1492 + 8 * _zla( 0, ncols ) ) / 8
  439.       t$1497 = t$1495 + 8 * _zla( 0, ncols )
  434.       t$1498 = 8 * ( 7 + t$1495 + 8 * _zla( 0, ncols ) ) / 8
  434.       t$1500 = t$1498 + 48 * _zla( 0, ncols )
  443.       t$1501 = 8 * ( 7 + t$1498 + 48 * _zla( 0, ncols ) ) / 8
  443.       t$1503 = t$1501 + 16 * _zla( 0, ncols )
  448.       t$1504 = 8 * ( 7 + t$1501 + 16 * _zla( 0, ncols ) ) / 8
  448.       t$1506 = t$1504 + 8 * _zla( 0, ncols )
  447.       t$1507 = 8 * ( 7 + t$1504 + 8 * _zla( 0, ncols ) ) / 8
  447.       t$1509 = t$1507 + 8 * _zla( 0, ncols )
  442.       t$1510 = 8 * ( 7 + t$1507 + 8 * _zla( 0, ncols ) ) / 8
  442.       t$1512 = t$1510 + 16 * _zla( 0, ncols )
  444.       t$1513 = 8 * ( 7 + t$1510 + 16 * _zla( 0, ncols ) ) / 8
  444.       t$1515 = t$1513 + 16 * _zla( 0, ncols )
  438.       t$1516 = 8 * ( 7 + t$1513 + 16 * _zla( 0, ncols ) ) / 8
  438.       t$1518 = t$1516 + 16 * _zla( 0, ncols )
  446.       t$1519 = 8 * ( 7 + t$1516 + 16 * _zla( 0, ncols ) ) / 8
  446.       t$1521 = t$1519 + 8 * _zla( 0, ncols )
  441.       t$1522 = 8 * ( 7 + t$1519 + 8 * _zla( 0, ncols ) ) / 8
  441.       t$1524 = t$1522 + 8 * _zla( 0, ncols )
  435.       t$1525 = 8 * ( 7 + t$1522 + 8 * _zla( 0, ncols ) ) / 8
  435.       t$1527 = t$1525 + 16 * _zla( 0, ncols )
  208.       t$1477 = int( _alloc( t$1525 + 16 * _zla( 0, ncols ) ), 8 )
  437.       t$1478 = t$1477
  445.       t$1481 = t$1480 + t$1477
  436.       t$1484 = t$1483 + t$1477
  450.       t$1487 = t$1486 + t$1477
  449.       t$1490 = t$1489 + t$1477
  440.       t$1493 = t$1492 + t$1477
  439.       t$1496 = t$1495 + t$1477
  434.       t$1499 = t$1498 + t$1477
  443.       t$1502 = t$1501 + t$1477
  448.       t$1505 = t$1504 + t$1477
  447.       t$1508 = t$1507 + t$1477
  442.       t$1511 = t$1510 + t$1477
  444.       t$1514 = t$1513 + t$1477
  438.       t$1517 = t$1516 + t$1477
  446.       t$1520 = t$1519 + t$1477
  441.       t$1523 = t$1522 + t$1477
  435.       t$1526 = t$1525 + t$1477
  461.       $SC_tll_gbl_I40 = tll_gbl%dim_1%EX
  461.       $SC_tll_gbl_I41 = tll_gbl%dim_1%LB
  461.       $SC_tll_gbl_I43 = tll_gbl%dim_2%SM
  461.       $SC_tll_gbl_I42 = tll_gbl%dim_2%EX
  461.       $SC_tll_gbl_I44 = tll_gbl%dim_2%LB
  461.       $SC_tll_gbl_I46 = tll_gbl%dim_3%SM
  461.       $SC_tll_gbl_I45 = tll_gbl%dim_3%EX
  461.       $SC_tll_gbl_I47 = tll_gbl%dim_3%LB
  460.       $SC_topt_gbl_I32 = topt_gbl%dim_1%EX
  460.       $SC_topt_gbl_I33 = topt_gbl%dim_1%LB
  460.       $SC_topt_gbl_I35 = topt_gbl%dim_2%SM
  460.       $SC_topt_gbl_I34 = topt_gbl%dim_2%EX
  460.       $SC_topt_gbl_I36 = topt_gbl%dim_2%LB
  460.       $SC_topt_gbl_I38 = topt_gbl%dim_3%SM
  460.       $SC_topt_gbl_I37 = topt_gbl%dim_3%EX
  460.       $SC_topt_gbl_I39 = topt_gbl%dim_3%LB
  459.       $SC_chil_gbl_I24 = chil_gbl%dim_1%EX
  459.       $SC_chil_gbl_I25 = chil_gbl%dim_1%LB
  459.       $SC_chil_gbl_I27 = chil_gbl%dim_2%SM
  459.       $SC_chil_gbl_I26 = chil_gbl%dim_2%EX
  459.       $SC_chil_gbl_I28 = chil_gbl%dim_2%LB
  459.       $SC_chil_gbl_I30 = chil_gbl%dim_3%SM
  459.       $SC_chil_gbl_I29 = chil_gbl%dim_3%EX
  459.       $SC_chil_gbl_I31 = chil_gbl%dim_3%LB
  458.       $SC_green_gbl_I16 = green_gbl%dim_1%EX
  458.       $SC_green_gbl_I17 = green_gbl%dim_1%LB
  458.       $SC_green_gbl_I19 = green_gbl%dim_2%SM
  458.       $SC_green_gbl_I18 = green_gbl%dim_2%EX
  458.       $SC_green_gbl_I20 = green_gbl%dim_2%LB
  458.       $SC_green_gbl_I22 = green_gbl%dim_3%SM
  458.       $SC_green_gbl_I21 = green_gbl%dim_3%EX
  458.       $SC_green_gbl_I23 = green_gbl%dim_3%LB
  457.       $SC_zlt_gbl_I8 = zlt_gbl%dim_1%EX
  457.       $SC_zlt_gbl_I9 = zlt_gbl%dim_1%LB
  457.       $SC_zlt_gbl_I11 = zlt_gbl%dim_2%SM
  457.       $SC_zlt_gbl_I10 = zlt_gbl%dim_2%EX
  457.       $SC_zlt_gbl_I12 = zlt_gbl%dim_2%LB
  457.       $SC_zlt_gbl_I14 = zlt_gbl%dim_3%SM
  457.       $SC_zlt_gbl_I13 = zlt_gbl%dim_3%EX
  457.       $SC_zlt_gbl_I15 = zlt_gbl%dim_3%LB
  456.       $SC_vcover_gbl_I0 = vcover_gbl%dim_1%EX
  456.       $SC_vcover_gbl_I1 = vcover_gbl%dim_1%LB
  456.       $SC_vcover_gbl_I3 = vcover_gbl%dim_2%SM
  456.       $SC_vcover_gbl_I2 = vcover_gbl%dim_2%EX
  456.       $SC_vcover_gbl_I4 = vcover_gbl%dim_2%LB
  456.       $SC_vcover_gbl_I6 = vcover_gbl%dim_3%SM
  456.       $SC_vcover_gbl_I5 = vcover_gbl%dim_3%EX
  456.       $SC_vcover_gbl_I7 = vcover_gbl%dim_3%LB
  455.       if ( nmax > 0 ) then
  454.          $I_L454_348 = 0
  454.          do
  466.             $SC_rstpar_gbl_I143 = rstpar_gbl%dim_1%EX
  466.             $SC_rstpar_gbl_I144 = rstpar_gbl%dim_1%LB
  466.             $SC_rstpar_gbl_I146 = rstpar_gbl%dim_2%SM
  466.             $SC_rstpar_gbl_I145 = rstpar_gbl%dim_2%EX
  466.             $SC_rstpar_gbl_I147 = rstpar_gbl%dim_2%LB
  466.             $SC_rstpar_gbl_I149 = rstpar_gbl%dim_3%SM
  466.             $SC_rstpar_gbl_I148 = rstpar_gbl%dim_3%EX
  466.             $SC_rstpar_gbl_I150 = rstpar_gbl%dim_3%LB
  466.             $SC_rstpar_gbl_I152 = rstpar_gbl%dim_4%SM
  466.             $SC_rstpar_gbl_I151 = rstpar_gbl%dim_4%EX
  466.             $SC_rstpar_gbl_I153 = rstpar_gbl%dim_4%LB
  465.             $SC_ph2_gbl_I135 = ph2_gbl%dim_1%EX
  465.             $SC_ph2_gbl_I136 = ph2_gbl%dim_1%LB
  465.             $SC_ph2_gbl_I138 = ph2_gbl%dim_2%SM
  465.             $SC_ph2_gbl_I137 = ph2_gbl%dim_2%EX
  465.             $SC_ph2_gbl_I139 = ph2_gbl%dim_2%LB
  465.             $SC_ph2_gbl_I141 = ph2_gbl%dim_3%SM
  465.             $SC_ph2_gbl_I140 = ph2_gbl%dim_3%EX
  465.             $SC_ph2_gbl_I142 = ph2_gbl%dim_3%LB
  464.             $SC_ph1_gbl_I127 = ph1_gbl%dim_1%EX
  464.             $SC_ph1_gbl_I128 = ph1_gbl%dim_1%LB
  464.             $SC_ph1_gbl_I130 = ph1_gbl%dim_2%SM
  464.             $SC_ph1_gbl_I129 = ph1_gbl%dim_2%EX
  464.             $SC_ph1_gbl_I131 = ph1_gbl%dim_2%LB
  464.             $SC_ph1_gbl_I133 = ph1_gbl%dim_3%SM
  464.             $SC_ph1_gbl_I132 = ph1_gbl%dim_3%EX
  464.             $SC_ph1_gbl_I134 = ph1_gbl%dim_3%LB
  463.             $SC_defac_gbl_I119 = defac_gbl%dim_1%EX
  463.             $SC_defac_gbl_I120 = defac_gbl%dim_1%LB
  463.             $SC_defac_gbl_I122 = defac_gbl%dim_2%SM
  463.             $SC_defac_gbl_I121 = defac_gbl%dim_2%EX
  463.             $SC_defac_gbl_I123 = defac_gbl%dim_2%LB
  463.             $SC_defac_gbl_I125 = defac_gbl%dim_3%SM
  463.             $SC_defac_gbl_I124 = defac_gbl%dim_3%EX
  463.             $SC_defac_gbl_I126 = defac_gbl%dim_3%LB
  462.             $SC_tu_gbl_I111 = tu_gbl%dim_1%EX
  462.             $SC_tu_gbl_I112 = tu_gbl%dim_1%LB
  462.             $SC_tu_gbl_I114 = tu_gbl%dim_2%SM
  462.             $SC_tu_gbl_I113 = tu_gbl%dim_2%EX
  462.             $SC_tu_gbl_I115 = tu_gbl%dim_2%LB
  462.             $SC_tu_gbl_I117 = tu_gbl%dim_3%SM
  462.             $SC_tu_gbl_I116 = tu_gbl%dim_3%EX
  462.             $SC_tu_gbl_I118 = tu_gbl%dim_3%LB
  455.             $I_L455_112 = 0
  455. !dir$ ivdep
  455.             do
  456.                vcover(1 + $I_L455_112, 1 + $I_L454_348) = (vcover_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_348, 0)
  457.                zlt2(1 + $I_L455_112, 1 + $I_L454_348) = (zlt_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_348, 0)
  458.                green2(1 + $I_L455_112, 1 + $I_L454_348) = (green_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_348, 0)
  459.                chil2(1 + $I_L455_112, 1 + $I_L454_348) = (chil_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_348, 0)
  460.                topt2(1 + $I_L455_112, 1 + $I_L454_348) = (topt_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_348, 0)
  461.                tll2(1 + $I_L455_112, 1 + $I_L454_348) = (tll_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_348, 0)
  462.                tu2(1 + $I_L455_112, 1 + $I_L454_348) = (tu_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_348, 0)
  463.                defac2(1 + $I_L455_112, 1 + $I_L454_348) = (defac_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_348, 0)
  464.                ph12(1 + $I_L455_112, 1 + $I_L454_348) = (ph1_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_348, 0)
  465.                ph22(1 + $I_L455_112, 1 + $I_L454_348) = (ph2_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_348, 0)
  466.                rstpar2(1 + $I_L455_112, 1 + $I_L454_348, 1) = (rstpar_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_348, 1, 0)
  467.                rstpar2(1 + $I_L455_112, 1 + $I_L454_348, 2) = (rstpar_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_348, 2, 0)
  468.                rstpar2(1 + $I_L455_112, 1 + $I_L454_348, 3) = (rstpar_gbl%base_addr)(1 + $I_L455_112, latitu, 1 + $I_L454_348, 3, 0)
  469.                $I_L455_112 = 1 + $I_L455_112
  455.                if ( $I_L455_112 >= nmax ) exit
  455.             enddo
  470.             $I_L454_348 = 1 + $I_L454_348
  469.             if ( $I_L454_348 >= 2 ) exit
  469.          enddo
  478.          $SC_xd_I63 = xd%dim_1%EX
  478.          $SC_xd_I64 = xd%dim_1%LB
  478.          $SC_xd_I66 = xd%dim_2%SM
  478.          $SC_xd_I65 = xd%dim_2%EX
  478.          $SC_xd_I67 = xd%dim_2%LB
  477.          $SC_x0x_I58 = x0x%dim_1%EX
  477.          $SC_x0x_I59 = x0x%dim_1%LB
  477.          $SC_x0x_I61 = x0x%dim_2%SM
  477.          $SC_x0x_I60 = x0x%dim_2%EX
  477.          $SC_x0x_I62 = x0x%dim_2%LB
  476.          $SC_xdc_I53 = xdc%dim_1%EX
  476.          $SC_xdc_I54 = xdc%dim_1%LB
  476.          $SC_xdc_I56 = xdc%dim_2%SM
  476.          $SC_xdc_I55 = xdc%dim_2%EX
  476.          $SC_xdc_I57 = xdc%dim_2%LB
  475.          $SC_xbc_I48 = xbc%dim_1%EX
  475.          $SC_xbc_I49 = xbc%dim_1%LB
  475.          $SC_xbc_I51 = xbc%dim_2%SM
  475.          $SC_xbc_I50 = xbc%dim_2%EX
  475.          $SC_xbc_I52 = xbc%dim_2%LB
  474.          $I_L474_114 = 0
  474. !dir$ ivdep
  474.          do
  475.             rbc(1 + $I_L474_114) = (xbc%base_addr)(itype(1 + $I_L474_114), mon(1 + $I_L474_114), 0)
  476.             rdc(1 + $I_L474_114) = (xdc%base_addr)(itype(1 + $I_L474_114), mon(1 + $I_L474_114), 0)
  477.             z0x(1 + $I_L474_114) = (x0x%base_addr)(itype(1 + $I_L474_114), mon(1 + $I_L474_114), 0)
  478.             d(1 + $I_L474_114) = (xd%base_addr)(itype(1 + $I_L474_114), mon(1 + $I_L474_114), 0)
  479.             $I_L474_114 = 1 + $I_L474_114
  474.             if ( $I_L474_114 >= nmax ) exit
  474.          enddo
  474.       endif
  483.       if ( ( initlz >= 0 .and. ktm == -1 .and. kt == 0 .and. nmax > 0 ) /= .false. ) then
  484.          $nint_S3 = 2
  485.          $intsib_S7 = 5
  485.       else
  487.          $nint_S3 = 1
  488.          $intsib_S7 = 1
  488.       endif
  491.       if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,_len( iswrad )) )) /= 'NON' ) then
  491.          if (  _substr(ilwrad,1,_ltrim(  _substr(ilwrad,1,_len( ilwrad )) )) /= 'NON' ) then
  492.             if ( ( initlz >= 0 .and. ktm == -1 .and. kt == 0 .and. nmax > 0 ) /= .false. ) then
  494.                if ( $nint_S3 > 0 ) then
  494.                   $I_L494_634 = 0
  494.                   do
  495.                      $ncount_S5 = 0
  496.                      if ( ncols > 0 ) then
  499.                         if ( $I_L494_634 == 0 ) then
  496.                            $I_L496_116 = 0
  496. !dir$ ivdep
  496.                            do
  497.                               if ( imask(1 + $I_L496_116) > 0 ) then
  498.                                  $ncount_S5 = 1 + $ncount_S5
  503.                                  radn($ncount_S5, 1, 1) = 0.0
  504.                                  radn($ncount_S5, 1, 2) = 0.0
  505.                                  radn($ncount_S5, 2, 1) = 0.0
  506.                                  radn($ncount_S5, 2, 2) = 0.0
  507.                                  cosz($ncount_S5) = 0.0
  518.                                  radn($ncount_S5, 3, 1) = 0.0
  519.                                  radn($ncount_S5, 3, 2) = dlwbot(1 + $I_L496_116)
  523.                                  ppl($ncount_S5) = 0.0
  524.                                  ppc($ncount_S5) = 0.0
  524.                               endif
  526.                               $I_L496_116 = 1 + $I_L496_116
  525.                               if ( $I_L496_116 >= ncols ) exit
  525.                            enddo
  525.                         else
  496.                            $I_L496_134 = 0
  496. !dir$ ivdep
  496.                            do
  497.                               if ( imask(1 + $I_L496_134) > 0 ) then
  498.                                  $ncount_S5 = 1 + $ncount_S5
  512.                                  radn($ncount_S5, 1, 1) = beam_visb(1 + $I_L496_134)
  513.                                  radn($ncount_S5, 1, 2) = beam_visd(1 + $I_L496_134)
  514.                                  radn($ncount_S5, 2, 1) = beam_nirb(1 + $I_L496_134)
  515.                                  radn($ncount_S5, 2, 2) = beam_nird(1 + $I_L496_134)
  516.                                  cosz($ncount_S5) = cos2(1 + $I_L496_134)
  518.                                  radn($ncount_S5, 3, 1) = 0.0
  519.                                  radn($ncount_S5, 3, 2) = dlwbot(1 + $I_L496_134)
  523.                                  ppl($ncount_S5) = 0.0
  524.                                  ppc($ncount_S5) = 0.0
  524.                               endif
  526.                               $I_L496_134 = 1 + $I_L496_134
  525.                               if ( $I_L496_134 >= ncols ) exit
  525.                            enddo
  525.                         endif
  525.                      endif
  527.                      if ( $intsib_S7 > 0 ) then
  527.                         $I_L527_632 = 0
  527.                         do
  530.                            t$2353 = ( max( 0, nmax ) )
  530.                            t$2357 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  530.                            $F_A33 = nmax
  530.                            if ( nmax > 0 ) then
  530.                               $I_L530_350 = 0
  530.                               do
  530.                                  $I_L530_138 = 0
  530. !dir$ ivdep
  530.                                  do
  530.                                     t$2356(1 + $I_L530_138, 1 + $I_L530_350) = capac(1 + $I_L530_138, 1 + $I_L530_350)
  530.                                     $I_L530_138 = 1 + $I_L530_138
  530.                                     if ( $I_L530_138 >= $F_A33 ) exit
  530.                                  enddo
  530.                                  $I_L530_350 = 1 + $I_L530_350
  530.                                  if ( $I_L530_350 >= 2 ) exit
  530.                               enddo
  530.                            endif
  531.                            t$2359 = ( max( 0, nmax ) )
  531.                            t$2363 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  531.                            $F_A34 = nmax
  531.                            if ( nmax > 0 ) then
  531.                               $I_L531_352 = 0
  531.                               do
  531.                                  $I_L531_140 = 0
  531. !dir$ ivdep
  531.                                  do
  531.                                     t$2362(1 + $I_L531_140, 1 + $I_L531_352) = satcap(1 + $I_L531_140, 1 + $I_L531_352)
  531.                                     $I_L531_140 = 1 + $I_L531_140
  531.                                     if ( $I_L531_140 >= $F_A34 ) exit
  531.                                  enddo
  531.                                  $I_L531_352 = 1 + $I_L531_352
  531.                                  if ( $I_L531_352 >= 2 ) exit
  531.                               enddo
  531.                            endif
  531.                            t$2365 = ( max( 0, nmax ) )
  531.                            t$2371 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  531.                            $F_A35 = nmax
  531.                            if ( nmax > 0 ) then
  531.                               $I_L531_604 = 0
  531.                               do
  531.                                  $I_L531_560 = 0
  531.                                  do
  531.                                     $I_L531_354 = 0
  531.                                     do
  531.                                        $I_L531_142 = 0
  531. !dir$ ivdep
  531.                                        do
  531.                                           t$2370(1 + $I_L531_142, 1 + $I_L531_354, 1 + $I_L531_560, 1 + $I_L531_604) = extk(1 + $I_L531_142, 1 + $I_L531_354, 1 + $I_L531_560, 1 + $I_L531_604)
  531.                                           $I_L531_142 = 1 + $I_L531_142
  531.                                           if ( $I_L531_142 >= $F_A35 ) exit
  531.                                        enddo
  531.                                        $I_L531_354 = 1 + $I_L531_354
  531.                                        if ( $I_L531_354 >= 2 ) exit
  531.                                     enddo
  531.                                     $I_L531_560 = 1 + $I_L531_560
  531.                                     if ( $I_L531_560 >= 3 ) exit
  531.                                  enddo
  531.                                  $I_L531_604 = 1 + $I_L531_604
  531.                                  if ( $I_L531_604 >= 2 ) exit
  531.                               enddo
  531.                            endif
  531.                            t$2373 = ( max( 0, nmax ) )
  531.                            t$2379 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  531.                            $F_A36 = nmax
  531.                            if ( nmax > 0 ) then
  531.                               $I_L531_606 = 0
  531.                               do
  531.                                  $I_L531_562 = 0
  531.                                  do
  531.                                     $I_L531_356 = 0
  531.                                     do
  531.                                        $I_L531_144 = 0
  531. !dir$ ivdep
  531.                                        do
  531.                                           t$2378(1 + $I_L531_144, 1 + $I_L531_356, 1 + $I_L531_562, 1 + $I_L531_606) = radfac(1 + $I_L531_144, 1 + $I_L531_356, 1 + $I_L531_562, 1 + $I_L531_606)
  531.                                           $I_L531_144 = 1 + $I_L531_144
  531.                                           if ( $I_L531_144 >= $F_A36 ) exit
  531.                                        enddo
  531.                                        $I_L531_356 = 1 + $I_L531_356
  531.                                        if ( $I_L531_356 >= 2 ) exit
  531.                                     enddo
  531.                                     $I_L531_562 = 1 + $I_L531_562
  531.                                     if ( $I_L531_562 >= 3 ) exit
  531.                                  enddo
  531.                                  $I_L531_606 = 1 + $I_L531_606
  531.                                  if ( $I_L531_606 >= 2 ) exit
  531.                               enddo
  531.                            endif
  533.                            t$2381 = ( max( 0, nmax ) )
  533.                            t$2386 = int( _alloc( max( 0, 32 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  533.                            $F_A37 = nmax
  533.                            if ( nmax > 0 ) then
  533.                               $I_L533_564 = 0
  533.                               do
  533.                                  $I_L533_358 = 0
  533.                                  do
  533.                                     $I_L533_146 = 0
  533. !dir$ ivdep
  533.                                     do
  533.                                        t$2385(1 + $I_L533_146, 1 + $I_L533_358, 1 + $I_L533_564) = salb(1 + $I_L533_146, 1 + $I_L533_358, 1 + $I_L533_564)
  533.                                        $I_L533_146 = 1 + $I_L533_146
  533.                                        if ( $I_L533_146 >= $F_A37 ) exit
  533.                                     enddo
  533.                                     $I_L533_358 = 1 + $I_L533_358
  533.                                     if ( $I_L533_358 >= 2 ) exit
  533.                                  enddo
  533.                                  $I_L533_564 = 1 + $I_L533_564
  533.                                  if ( $I_L533_564 >= 2 ) exit
  533.                               enddo
  533.                            endif
  528.                            call radalb( nmax, mon(1), nmax, itype(1), tc(1), tg(1), t$2356(1, 1), t$2362(1, 1), t$2370(1, 1, 1, 1), t$2378(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), zlwup(1), t$2385(1, 1, 1), tgeff(1), cosz(1), nsx(1), latitu )
  528.                            $F_A38 = nmax
  528.                            if ( nmax > 0 ) then
  528.                               $I_L528_566 = 0
  528.                               do
  528.                                  $I_L528_360 = 0
  528.                                  do
  528.                                     $I_L528_148 = 0
  528. !dir$ ivdep
  528.                                     do
  528.                                        salb(1 + $I_L528_148, 1 + $I_L528_360, 1 + $I_L528_566) = t$2385(1 + $I_L528_148, 1 + $I_L528_360, 1 + $I_L528_566)
  528.                                        $I_L528_148 = 1 + $I_L528_148
  528.                                        if ( $I_L528_148 >= $F_A38 ) exit
  528.                                     enddo
  528.                                     $I_L528_360 = 1 + $I_L528_360
  528.                                     if ( $I_L528_360 >= 2 ) exit
  528.                                  enddo
  528.                                  $I_L528_566 = 1 + $I_L528_566
  528.                                  if ( $I_L528_566 >= 2 ) exit
  528.                               enddo
  528.                            endif
  533.                            _free( t$2386 )
  528.                            $F_A39 = nmax
  528.                            if ( nmax > 0 ) then
  528.                               $I_L528_608 = 0
  528.                               do
  528.                                  $I_L528_568 = 0
  528.                                  do
  528.                                     $I_L528_362 = 0
  528.                                     do
  528.                                        $I_L528_150 = 0
  528. !dir$ ivdep
  528.                                        do
  528.                                           radfac(1 + $I_L528_150, 1 + $I_L528_362, 1 + $I_L528_568, 1 + $I_L528_608) = t$2378(1 + $I_L528_150, 1 + $I_L528_362, 1 + $I_L528_568, 1 + $I_L528_608)
  528.                                           $I_L528_150 = 1 + $I_L528_150
  528.                                           if ( $I_L528_150 >= $F_A39 ) exit
  528.                                        enddo
  528.                                        $I_L528_362 = 1 + $I_L528_362
  528.                                        if ( $I_L528_362 >= 2 ) exit
  528.                                     enddo
  528.                                     $I_L528_568 = 1 + $I_L528_568
  528.                                     if ( $I_L528_568 >= 3 ) exit
  528.                                  enddo
  528.                                  $I_L528_608 = 1 + $I_L528_608
  528.                                  if ( $I_L528_608 >= 2 ) exit
  528.                               enddo
  528.                            endif
  531.                            _free( t$2379 )
  528.                            $F_A40 = nmax
  528.                            if ( nmax > 0 ) then
  528.                               $I_L528_610 = 0
  528.                               do
  528.                                  $I_L528_570 = 0
  528.                                  do
  528.                                     $I_L528_364 = 0
  528.                                     do
  528.                                        $I_L528_152 = 0
  528. !dir$ ivdep
  528.                                        do
  528.                                           extk(1 + $I_L528_152, 1 + $I_L528_364, 1 + $I_L528_570, 1 + $I_L528_610) = t$2370(1 + $I_L528_152, 1 + $I_L528_364, 1 + $I_L528_570, 1 + $I_L528_610)
  528.                                           $I_L528_152 = 1 + $I_L528_152
  528.                                           if ( $I_L528_152 >= $F_A40 ) exit
  528.                                        enddo
  528.                                        $I_L528_364 = 1 + $I_L528_364
  528.                                        if ( $I_L528_364 >= 2 ) exit
  528.                                     enddo
  528.                                     $I_L528_570 = 1 + $I_L528_570
  528.                                     if ( $I_L528_570 >= 3 ) exit
  528.                                  enddo
  528.                                  $I_L528_610 = 1 + $I_L528_610
  528.                                  if ( $I_L528_610 >= 2 ) exit
  528.                               enddo
  528.                            endif
  531.                            _free( t$2371 )
  528.                            $F_A41 = nmax
  528.                            if ( nmax > 0 ) then
  528.                               $I_L528_366 = 0
  528.                               do
  528.                                  $I_L528_154 = 0
  528. !dir$ ivdep
  528.                                  do
  528.                                     satcap(1 + $I_L528_154, 1 + $I_L528_366) = t$2362(1 + $I_L528_154, 1 + $I_L528_366)
  528.                                     $I_L528_154 = 1 + $I_L528_154
  528.                                     if ( $I_L528_154 >= $F_A41 ) exit
  528.                                  enddo
  528.                                  $I_L528_366 = 1 + $I_L528_366
  528.                                  if ( $I_L528_366 >= 2 ) exit
  528.                               enddo
  528.                            endif
  531.                            _free( t$2363 )
  530.                            _free( t$2357 )
  537.                            t$2388 = ( max( 0, nmax ) )
  537.                            t$2392 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  537.                            $F_A42 = nmax
  537.                            if ( nmax > 0 ) then
  537.                               $I_L537_368 = 0
  537.                               do
  537.                                  $I_L537_156 = 0
  537. !dir$ ivdep
  537.                                  do
  537.                                     t$2391(1 + $I_L537_156, 1 + $I_L537_368) = vcover(1 + $I_L537_156, 1 + $I_L537_368)
  537.                                     $I_L537_156 = 1 + $I_L537_156
  537.                                     if ( $I_L537_156 >= $F_A42 ) exit
  537.                                  enddo
  537.                                  $I_L537_368 = 1 + $I_L537_368
  537.                                  if ( $I_L537_368 >= 2 ) exit
  537.                               enddo
  537.                            endif
  540.                            t$2394 = ( max( 0, nmax ) )
  540.                            t$2398 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  540.                            $F_A43 = nmax
  540.                            if ( nmax > 0 ) then
  540.                               $I_L540_370 = 0
  540.                               do
  540.                                  $I_L540_158 = 0
  540. !dir$ ivdep
  540.                                  do
  540.                                     t$2397(1 + $I_L540_158, 1 + $I_L540_370) = gmt(1 + $I_L540_158, 1 + $I_L540_370)
  540.                                     $I_L540_158 = 1 + $I_L540_158
  540.                                     if ( $I_L540_158 >= $F_A43 ) exit
  540.                                  enddo
  540.                                  $I_L540_370 = 1 + $I_L540_370
  540.                                  if ( $I_L540_370 >= 3 ) exit
  540.                               enddo
  540.                            endif
  540.                            t$2400 = ( max( 0, nmax ) )
  540.                            t$2404 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  540.                            $F_A44 = nmax
  540.                            if ( nmax > 0 ) then
  540.                               $I_L540_372 = 0
  540.                               do
  540.                                  $I_L540_160 = 0
  540. !dir$ ivdep
  540.                                  do
  540.                                     t$2403(1 + $I_L540_160, 1 + $I_L540_372) = gmq(1 + $I_L540_160, 1 + $I_L540_372)
  540.                                     $I_L540_160 = 1 + $I_L540_160
  540.                                     if ( $I_L540_160 >= $F_A44 ) exit
  540.                                  enddo
  540.                                  $I_L540_372 = 1 + $I_L540_372
  540.                                  if ( $I_L540_372 >= 3 ) exit
  540.                               enddo
  540.                            endif
  540.                            t$2406 = ( max( 0, nmax ) )
  540.                            t$2410 = int( _alloc( max( 0, 32 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  540.                            $F_A45 = nmax
  540.                            if ( nmax > 0 ) then
  540.                               $I_L540_374 = 0
  540.                               do
  540.                                  $I_L540_162 = 0
  540. !dir$ ivdep
  540.                                  do
  540.                                     t$2409(1 + $I_L540_162, 1 + $I_L540_374) = gmu(1 + $I_L540_162, 1 + $I_L540_374)
  540.                                     $I_L540_162 = 1 + $I_L540_162
  540.                                     if ( $I_L540_162 >= $F_A45 ) exit
  540.                                  enddo
  540.                                  $I_L540_374 = 1 + $I_L540_374
  540.                                  if ( $I_L540_374 >= 4 ) exit
  540.                               enddo
  540.                            endif
  552.                            t$2412 = ( max( 0, nmax ) )
  552.                            t$2416 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  552.                            $F_A46 = nmax
  552.                            if ( nmax > 0 ) then
  552.                               $I_L552_376 = 0
  552.                               do
  552.                                  $I_L552_164 = 0
  552. !dir$ ivdep
  552.                                  do
  552.                                     t$2415(1 + $I_L552_164, 1 + $I_L552_376) = radt(1 + $I_L552_164, 1 + $I_L552_376)
  552.                                     $I_L552_164 = 1 + $I_L552_164
  552.                                     if ( $I_L552_164 >= $F_A46 ) exit
  552.                                  enddo
  552.                                  $I_L552_376 = 1 + $I_L552_376
  552.                                  if ( $I_L552_376 >= 2 ) exit
  552.                               enddo
  552.                            endif
  553.                            t$2418 = ( max( 0, nmax ) )
  553.                            t$2422 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  553.                            $F_A47 = nmax
  553.                            if ( nmax > 0 ) then
  553.                               $I_L553_378 = 0
  553.                               do
  553.                                  $I_L553_166 = 0
  553. !dir$ ivdep
  553.                                  do
  553.                                     t$2421(1 + $I_L553_166, 1 + $I_L553_378) = par(1 + $I_L553_166, 1 + $I_L553_378)
  553.                                     $I_L553_166 = 1 + $I_L553_166
  553.                                     if ( $I_L553_166 >= $F_A47 ) exit
  553.                                  enddo
  553.                                  $I_L553_378 = 1 + $I_L553_378
  553.                                  if ( $I_L553_378 >= 2 ) exit
  553.                               enddo
  553.                            endif
  553.                            t$2424 = ( max( 0, nmax ) )
  553.                            t$2428 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  553.                            $F_A48 = nmax
  553.                            if ( nmax > 0 ) then
  553.                               $I_L553_380 = 0
  553.                               do
  553.                                  $I_L553_168 = 0
  553. !dir$ ivdep
  553.                                  do
  553.                                     t$2427(1 + $I_L553_168, 1 + $I_L553_380) = pd(1 + $I_L553_168, 1 + $I_L553_380)
  553.                                     $I_L553_168 = 1 + $I_L553_168
  553.                                     if ( $I_L553_168 >= $F_A48 ) exit
  553.                                  enddo
  553.                                  $I_L553_380 = 1 + $I_L553_380
  553.                                  if ( $I_L553_380 >= 2 ) exit
  553.                               enddo
  553.                            endif
  553.                            t$2430 = ( max( 0, nmax ) )
  553.                            t$2434 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  553.                            $F_A49 = nmax
  553.                            if ( nmax > 0 ) then
  553.                               $I_L553_382 = 0
  553.                               do
  553.                                  $I_L553_170 = 0
  553. !dir$ ivdep
  553.                                  do
  553.                                     t$2433(1 + $I_L553_170, 1 + $I_L553_382) = rst(1 + $I_L553_170, 1 + $I_L553_382)
  553.                                     $I_L553_170 = 1 + $I_L553_170
  553.                                     if ( $I_L553_170 >= $F_A49 ) exit
  553.                                  enddo
  553.                                  $I_L553_382 = 1 + $I_L553_382
  553.                                  if ( $I_L553_382 >= 2 ) exit
  553.                               enddo
  553.                            endif
  554.                            t$2436 = ( max( 0, nmax ) )
  554.                            t$2440 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  554.                            $F_A50 = nmax
  554.                            if ( nmax > 0 ) then
  554.                               $I_L554_384 = 0
  554.                               do
  554.                                  $I_L554_172 = 0
  554. !dir$ ivdep
  554.                                  do
  554.                                     t$2439(1 + $I_L554_172, 1 + $I_L554_384) = phroot(1 + $I_L554_172, 1 + $I_L554_384)
  554.                                     $I_L554_172 = 1 + $I_L554_172
  554.                                     if ( $I_L554_172 >= $F_A50 ) exit
  554.                                  enddo
  554.                                  $I_L554_384 = 1 + $I_L554_384
  554.                                  if ( $I_L554_384 >= 2 ) exit
  554.                               enddo
  554.                            endif
  554.                            t$2442 = ( max( 0, nmax ) )
  554.                            t$2446 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  554.                            $F_A51 = nmax
  554.                            if ( nmax > 0 ) then
  554.                               $I_L554_386 = 0
  554.                               do
  554.                                  $I_L554_174 = 0
  554. !dir$ ivdep
  554.                                  do
  554.                                     t$2445(1 + $I_L554_174, 1 + $I_L554_386) = phsoil(1 + $I_L554_174, 1 + $I_L554_386)
  554.                                     $I_L554_174 = 1 + $I_L554_174
  554.                                     if ( $I_L554_174 >= $F_A51 ) exit
  554.                                  enddo
  554.                                  $I_L554_386 = 1 + $I_L554_386
  554.                                  if ( $I_L554_386 >= 3 ) exit
  554.                               enddo
  554.                            endif
  555.                            t$2448 = ( max( 0, nmax ) )
  555.                            t$2452 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  555.                            $F_A52 = nmax
  555.                            if ( nmax > 0 ) then
  555.                               $I_L555_388 = 0
  555.                               do
  555.                                  $I_L555_176 = 0
  555. !dir$ ivdep
  555.                                  do
  555.                                     t$2451(1 + $I_L555_176, 1 + $I_L555_388) = satcap(1 + $I_L555_176, 1 + $I_L555_388)
  555.                                     $I_L555_176 = 1 + $I_L555_176
  555.                                     if ( $I_L555_176 >= $F_A52 ) exit
  555.                                  enddo
  555.                                  $I_L555_388 = 1 + $I_L555_388
  555.                                  if ( $I_L555_388 >= 2 ) exit
  555.                               enddo
  555.                            endif
  555.                            t$2454 = ( max( 0, nmax ) )
  555.                            t$2458 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  555.                            $F_A53 = nmax
  555.                            if ( nmax > 0 ) then
  555.                               $I_L555_390 = 0
  555.                               do
  555.                                  $I_L555_178 = 0
  555. !dir$ ivdep
  555.                                  do
  555.                                     t$2457(1 + $I_L555_178, 1 + $I_L555_390) = snow(1 + $I_L555_178, 1 + $I_L555_390)
  555.                                     $I_L555_178 = 1 + $I_L555_178
  555.                                     if ( $I_L555_178 >= $F_A53 ) exit
  555.                                  enddo
  555.                                  $I_L555_390 = 1 + $I_L555_390
  555.                                  if ( $I_L555_390 >= 2 ) exit
  555.                               enddo
  555.                            endif
  556.                            t$2460 = ( max( 0, nmax ) )
  556.                            t$2464 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  556.                            $F_A54 = nmax
  556.                            if ( nmax > 0 ) then
  556.                               $I_L556_392 = 0
  556.                               do
  556.                                  $I_L556_180 = 0
  556. !dir$ ivdep
  556.                                  do
  556.                                     t$2463(1 + $I_L556_180, 1 + $I_L556_392) = stm(1 + $I_L556_180, 1 + $I_L556_392)
  556.                                     $I_L556_180 = 1 + $I_L556_180
  556.                                     if ( $I_L556_180 >= $F_A54 ) exit
  556.                                  enddo
  556.                                  $I_L556_392 = 1 + $I_L556_392
  556.                                  if ( $I_L556_392 >= 2 ) exit
  556.                               enddo
  556.                            endif
  557.                            t$2466 = ( max( 0, nmax ) )
  557.                            t$2472 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  557.                            $F_A55 = nmax
  557.                            if ( nmax > 0 ) then
  557.                               $I_L557_612 = 0
  557.                               do
  557.                                  $I_L557_572 = 0
  557.                                  do
  557.                                     $I_L557_394 = 0
  557.                                     do
  557.                                        $I_L557_182 = 0
  557. !dir$ ivdep
  557.                                        do
  557.                                           t$2471(1 + $I_L557_182, 1 + $I_L557_394, 1 + $I_L557_572, 1 + $I_L557_612) = extk(1 + $I_L557_182, 1 + $I_L557_394, 1 + $I_L557_572, 1 + $I_L557_612)
  557.                                           $I_L557_182 = 1 + $I_L557_182
  557.                                           if ( $I_L557_182 >= $F_A55 ) exit
  557.                                        enddo
  557.                                        $I_L557_394 = 1 + $I_L557_394
  557.                                        if ( $I_L557_394 >= 2 ) exit
  557.                                     enddo
  557.                                     $I_L557_572 = 1 + $I_L557_572
  557.                                     if ( $I_L557_572 >= 3 ) exit
  557.                                  enddo
  557.                                  $I_L557_612 = 1 + $I_L557_612
  557.                                  if ( $I_L557_612 >= 2 ) exit
  557.                               enddo
  557.                            endif
  557.                            t$2474 = ( max( 0, nmax ) )
  557.                            t$2480 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  557.                            $F_A56 = nmax
  557.                            if ( nmax > 0 ) then
  557.                               $I_L557_614 = 0
  557.                               do
  557.                                  $I_L557_574 = 0
  557.                                  do
  557.                                     $I_L557_396 = 0
  557.                                     do
  557.                                        $I_L557_184 = 0
  557. !dir$ ivdep
  557.                                        do
  557.                                           t$2479(1 + $I_L557_184, 1 + $I_L557_396, 1 + $I_L557_574, 1 + $I_L557_614) = radfac(1 + $I_L557_184, 1 + $I_L557_396, 1 + $I_L557_574, 1 + $I_L557_614)
  557.                                           $I_L557_184 = 1 + $I_L557_184
  557.                                           if ( $I_L557_184 >= $F_A56 ) exit
  557.                                        enddo
  557.                                        $I_L557_396 = 1 + $I_L557_396
  557.                                        if ( $I_L557_396 >= 2 ) exit
  557.                                     enddo
  557.                                     $I_L557_574 = 1 + $I_L557_574
  557.                                     if ( $I_L557_574 >= 3 ) exit
  557.                                  enddo
  557.                                  $I_L557_614 = 1 + $I_L557_614
  557.                                  if ( $I_L557_614 >= 2 ) exit
  557.                               enddo
  557.                            endif
  559.                            t$2482 = ( max( 0, nmax ) )
  559.                            t$2486 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  559.                            $F_A57 = nmax
  559.                            if ( nmax > 0 ) then
  559.                               $I_L559_398 = 0
  559.                               do
  559.                                  $I_L559_186 = 0
  559. !dir$ ivdep
  559.                                  do
  559.                                     t$2485(1 + $I_L559_186, 1 + $I_L559_398) = capac(1 + $I_L559_186, 1 + $I_L559_398)
  559.                                     $I_L559_186 = 1 + $I_L559_186
  559.                                     if ( $I_L559_186 >= $F_A57 ) exit
  559.                                  enddo
  559.                                  $I_L559_398 = 1 + $I_L559_398
  559.                                  if ( $I_L559_398 >= 2 ) exit
  559.                               enddo
  559.                            endif
  559.                            t$2488 = ( max( 0, nmax ) )
  559.                            t$2492 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  559.                            $F_A58 = nmax
  559.                            if ( nmax > 0 ) then
  559.                               $I_L559_400 = 0
  559.                               do
  559.                                  $I_L559_188 = 0
  559. !dir$ ivdep
  559.                                  do
  559.                                     t$2491(1 + $I_L559_188, 1 + $I_L559_400) = w(1 + $I_L559_188, 1 + $I_L559_400)
  559.                                     $I_L559_188 = 1 + $I_L559_188
  559.                                     if ( $I_L559_188 >= $F_A58 ) exit
  559.                                  enddo
  559.                                  $I_L559_400 = 1 + $I_L559_400
  559.                                  if ( $I_L559_400 >= 3 ) exit
  559.                               enddo
  559.                            endif
  561.                            t$2494 = ( max( 0, nmax ) )
  561.                            t$2499 = int( _alloc( max( 0, 48 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  561.                            $F_A59 = nmax
  561.                            if ( nmax > 0 ) then
  561.                               $I_L561_576 = 0
  561.                               do
  561.                                  $I_L561_402 = 0
  561.                                  do
  561.                                     $I_L561_190 = 0
  561. !dir$ ivdep
  561.                                     do
  561.                                        t$2498(1 + $I_L561_190, 1 + $I_L561_402, 1 + $I_L561_576) = radn(1 + $I_L561_190, 1 + $I_L561_402, 1 + $I_L561_576)
  561.                                        $I_L561_190 = 1 + $I_L561_190
  561.                                        if ( $I_L561_190 >= $F_A59 ) exit
  561.                                     enddo
  561.                                     $I_L561_402 = 1 + $I_L561_402
  561.                                     if ( $I_L561_402 >= 3 ) exit
  561.                                  enddo
  561.                                  $I_L561_576 = 1 + $I_L561_576
  561.                                  if ( $I_L561_576 >= 2 ) exit
  561.                               enddo
  561.                            endif
  563.                            t$2501 = ( max( 0, nmax ) )
  563.                            t$2505 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  563.                            $F_A60 = nmax
  563.                            if ( nmax > 0 ) then
  563.                               $I_L563_404 = 0
  563.                               do
  563.                                  $I_L563_192 = 0
  563. !dir$ ivdep
  563.                                  do
  563.                                     t$2504(1 + $I_L563_192, 1 + $I_L563_404) = zlt2(1 + $I_L563_192, 1 + $I_L563_404)
  563.                                     $I_L563_192 = 1 + $I_L563_192
  563.                                     if ( $I_L563_192 >= $F_A60 ) exit
  563.                                  enddo
  563.                                  $I_L563_404 = 1 + $I_L563_404
  563.                                  if ( $I_L563_404 >= 2 ) exit
  563.                               enddo
  563.                            endif
  563.                            t$2507 = ( max( 0, nmax ) )
  563.                            t$2511 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  563.                            $F_A61 = nmax
  563.                            if ( nmax > 0 ) then
  563.                               $I_L563_406 = 0
  563.                               do
  563.                                  $I_L563_194 = 0
  563. !dir$ ivdep
  563.                                  do
  563.                                     t$2510(1 + $I_L563_194, 1 + $I_L563_406) = green2(1 + $I_L563_194, 1 + $I_L563_406)
  563.                                     $I_L563_194 = 1 + $I_L563_194
  563.                                     if ( $I_L563_194 >= $F_A61 ) exit
  563.                                  enddo
  563.                                  $I_L563_406 = 1 + $I_L563_406
  563.                                  if ( $I_L563_406 >= 2 ) exit
  563.                               enddo
  563.                            endif
  563.                            t$2513 = ( max( 0, nmax ) )
  563.                            t$2517 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  563.                            $F_A62 = nmax
  563.                            if ( nmax > 0 ) then
  563.                               $I_L563_408 = 0
  563.                               do
  563.                                  $I_L563_196 = 0
  563. !dir$ ivdep
  563.                                  do
  563.                                     t$2516(1 + $I_L563_196, 1 + $I_L563_408) = chil2(1 + $I_L563_196, 1 + $I_L563_408)
  563.                                     $I_L563_196 = 1 + $I_L563_196
  563.                                     if ( $I_L563_196 >= $F_A62 ) exit
  563.                                  enddo
  563.                                  $I_L563_408 = 1 + $I_L563_408
  563.                                  if ( $I_L563_408 >= 2 ) exit
  563.                               enddo
  563.                            endif
  564.                            t$2519 = ( max( 0, nmax ) )
  564.                            t$2524 = int( _alloc( max( 0, 48 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  564.                            $F_A63 = nmax
  564.                            if ( nmax > 0 ) then
  564.                               $I_L564_578 = 0
  564.                               do
  564.                                  $I_L564_410 = 0
  564.                                  do
  564.                                     $I_L564_198 = 0
  564. !dir$ ivdep
  564.                                     do
  564.                                        t$2523(1 + $I_L564_198, 1 + $I_L564_410, 1 + $I_L564_578) = rstpar2(1 + $I_L564_198, 1 + $I_L564_410, 1 + $I_L564_578)
  564.                                        $I_L564_198 = 1 + $I_L564_198
  564.                                        if ( $I_L564_198 >= $F_A63 ) exit
  564.                                     enddo
  564.                                     $I_L564_410 = 1 + $I_L564_410
  564.                                     if ( $I_L564_410 >= 2 ) exit
  564.                                  enddo
  564.                                  $I_L564_578 = 1 + $I_L564_578
  564.                                  if ( $I_L564_578 >= 3 ) exit
  564.                               enddo
  564.                            endif
  564.                            t$2526 = ( max( 0, nmax ) )
  564.                            t$2530 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  564.                            $F_A64 = nmax
  564.                            if ( nmax > 0 ) then
  564.                               $I_L564_412 = 0
  564.                               do
  564.                                  $I_L564_200 = 0
  564. !dir$ ivdep
  564.                                  do
  564.                                     t$2529(1 + $I_L564_200, 1 + $I_L564_412) = topt2(1 + $I_L564_200, 1 + $I_L564_412)
  564.                                     $I_L564_200 = 1 + $I_L564_200
  564.                                     if ( $I_L564_200 >= $F_A64 ) exit
  564.                                  enddo
  564.                                  $I_L564_412 = 1 + $I_L564_412
  564.                                  if ( $I_L564_412 >= 2 ) exit
  564.                               enddo
  564.                            endif
  564.                            t$2532 = ( max( 0, nmax ) )
  564.                            t$2536 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  564.                            $F_A65 = nmax
  564.                            if ( nmax > 0 ) then
  564.                               $I_L564_414 = 0
  564.                               do
  564.                                  $I_L564_202 = 0
  564. !dir$ ivdep
  564.                                  do
  564.                                     t$2535(1 + $I_L564_202, 1 + $I_L564_414) = tll2(1 + $I_L564_202, 1 + $I_L564_414)
  564.                                     $I_L564_202 = 1 + $I_L564_202
  564.                                     if ( $I_L564_202 >= $F_A65 ) exit
  564.                                  enddo
  564.                                  $I_L564_414 = 1 + $I_L564_414
  564.                                  if ( $I_L564_414 >= 2 ) exit
  564.                               enddo
  564.                            endif
  564.                            t$2538 = ( max( 0, nmax ) )
  564.                            t$2542 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  564.                            $F_A66 = nmax
  564.                            if ( nmax > 0 ) then
  564.                               $I_L564_416 = 0
  564.                               do
  564.                                  $I_L564_204 = 0
  564. !dir$ ivdep
  564.                                  do
  564.                                     t$2541(1 + $I_L564_204, 1 + $I_L564_416) = tu2(1 + $I_L564_204, 1 + $I_L564_416)
  564.                                     $I_L564_204 = 1 + $I_L564_204
  564.                                     if ( $I_L564_204 >= $F_A66 ) exit
  564.                                  enddo
  564.                                  $I_L564_416 = 1 + $I_L564_416
  564.                                  if ( $I_L564_416 >= 2 ) exit
  564.                               enddo
  564.                            endif
  565.                            t$2544 = ( max( 0, nmax ) )
  565.                            t$2548 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  565.                            $F_A67 = nmax
  565.                            if ( nmax > 0 ) then
  565.                               $I_L565_418 = 0
  565.                               do
  565.                                  $I_L565_206 = 0
  565. !dir$ ivdep
  565.                                  do
  565.                                     t$2547(1 + $I_L565_206, 1 + $I_L565_418) = defac2(1 + $I_L565_206, 1 + $I_L565_418)
  565.                                     $I_L565_206 = 1 + $I_L565_206
  565.                                     if ( $I_L565_206 >= $F_A67 ) exit
  565.                                  enddo
  565.                                  $I_L565_418 = 1 + $I_L565_418
  565.                                  if ( $I_L565_418 >= 2 ) exit
  565.                               enddo
  565.                            endif
  565.                            t$2550 = ( max( 0, nmax ) )
  565.                            t$2554 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  565.                            $F_A68 = nmax
  565.                            if ( nmax > 0 ) then
  565.                               $I_L565_420 = 0
  565.                               do
  565.                                  $I_L565_208 = 0
  565. !dir$ ivdep
  565.                                  do
  565.                                     t$2553(1 + $I_L565_208, 1 + $I_L565_420) = ph12(1 + $I_L565_208, 1 + $I_L565_420)
  565.                                     $I_L565_208 = 1 + $I_L565_208
  565.                                     if ( $I_L565_208 >= $F_A68 ) exit
  565.                                  enddo
  565.                                  $I_L565_420 = 1 + $I_L565_420
  565.                                  if ( $I_L565_420 >= 2 ) exit
  565.                               enddo
  565.                            endif
  565.                            t$2556 = ( max( 0, nmax ) )
  565.                            t$2560 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  565.                            $F_A69 = nmax
  565.                            if ( nmax > 0 ) then
  565.                               $I_L565_422 = 0
  565.                               do
  565.                                  $I_L565_210 = 0
  565. !dir$ ivdep
  565.                                  do
  565.                                     t$2559(1 + $I_L565_210, 1 + $I_L565_422) = ph22(1 + $I_L565_210, 1 + $I_L565_422)
  565.                                     $I_L565_210 = 1 + $I_L565_210
  565.                                     if ( $I_L565_210 >= $F_A69 ) exit
  565.                                  enddo
  565.                                  $I_L565_422 = 1 + $I_L565_422
  565.                                  if ( $I_L565_422 >= 2 ) exit
  565.                               enddo
  565.                            endif
  536.                            call fysiks( t$2391(1, 1), z0x(1), d(1), rdc(1), rbc(1), z0(1), jdt, latitu, bps(1), psb(1), dzm(1), em(1), t$2397(1, 1), t$2403(1, 1), t$2409(1, 1), cu(1), cuni(1), ctni(1), ustar(1), cosz(1), sinclt(1), rhoair(1), psy(1), rcp(1), wc(1), wg(1), fc(1), fg(1), hr(1), ect(1), eci(1), egt(1), egi(1), egs(1), ec(1), eg(1), hc(1), hg(1), ecidif(1), egidif(1), ecmass(1), egmass(1), etmass(1), hflux(1), chf(1), shf(1), fluxef(1), roff(1), drag(1), ra(1), rb(1), rd(1), rc(1), rg(1), tcta(1), tgta(1), ta(1), ea(1), etc(1), etg(1), btc(1), btg(1), u2(1), t$2415(1, 1), t$2421(1, 1), t$2427(1, 1), t$2433(1, 1), rsoil(1), t$2439(1, 1), hrr(1), t$2445(1, 1), cc(1), cg(1), t$2451(1, 1), t$2457(1, 1), dtc(1), dtg(1), dtm(1), dqm(1), t$2463(1, 1), t$2471(1, 1, 1, 1), t$2479(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), tc(1), tg(1), td(1), t$2485(1, 1), t$2491(1, 1), qm(1), tm(1), um(1), vm(1), psur(1), ppc(1), ppl(1), t$2498(1, 1, 1), itype(1), dtc3x, mon(1), nmax, nmax, t$2504(1, 1), t$2510(1, 1), t$2516(1, 1), t$2523(1, 1, 1), t$2529(1, 1), t$2535(1, 1), t$2541(1, 1), t$2547(1, 1), t$2553(1, 1), t$2559(1, 1) )
  565.                            _free( t$2560 )
  565.                            _free( t$2554 )
  565.                            _free( t$2548 )
  564.                            _free( t$2542 )
  564.                            _free( t$2536 )
  564.                            _free( t$2530 )
  564.                            _free( t$2524 )
  563.                            _free( t$2517 )
  563.                            _free( t$2511 )
  563.                            _free( t$2505 )
  561.                            _free( t$2499 )
  536.                            $F_A70 = nmax
  536.                            if ( nmax > 0 ) then
  536.                               $I_L536_424 = 0
  536.                               do
  536.                                  $I_L536_212 = 0
  536. !dir$ ivdep
  536.                                  do
  536.                                     w(1 + $I_L536_212, 1 + $I_L536_424) = t$2491(1 + $I_L536_212, 1 + $I_L536_424)
  536.                                     $I_L536_212 = 1 + $I_L536_212
  536.                                     if ( $I_L536_212 >= $F_A70 ) exit
  536.                                  enddo
  536.                                  $I_L536_424 = 1 + $I_L536_424
  536.                                  if ( $I_L536_424 >= 3 ) exit
  536.                               enddo
  536.                            endif
  559.                            _free( t$2492 )
  536.                            $F_A71 = nmax
  536.                            if ( nmax > 0 ) then
  536.                               $I_L536_426 = 0
  536.                               do
  536.                                  $I_L536_214 = 0
  536. !dir$ ivdep
  536.                                  do
  536.                                     capac(1 + $I_L536_214, 1 + $I_L536_426) = t$2485(1 + $I_L536_214, 1 + $I_L536_426)
  536.                                     $I_L536_214 = 1 + $I_L536_214
  536.                                     if ( $I_L536_214 >= $F_A71 ) exit
  536.                                  enddo
  536.                                  $I_L536_426 = 1 + $I_L536_426
  536.                                  if ( $I_L536_426 >= 2 ) exit
  536.                               enddo
  536.                            endif
  559.                            _free( t$2486 )
  557.                            _free( t$2480 )
  536.                            $F_A72 = nmax
  536.                            if ( nmax > 0 ) then
  536.                               $I_L536_616 = 0
  536.                               do
  536.                                  $I_L536_580 = 0
  536.                                  do
  536.                                     $I_L536_428 = 0
  536.                                     do
  536.                                        $I_L536_216 = 0
  536. !dir$ ivdep
  536.                                        do
  536.                                           extk(1 + $I_L536_216, 1 + $I_L536_428, 1 + $I_L536_580, 1 + $I_L536_616) = t$2471(1 + $I_L536_216, 1 + $I_L536_428, 1 + $I_L536_580, 1 + $I_L536_616)
  536.                                           $I_L536_216 = 1 + $I_L536_216
  536.                                           if ( $I_L536_216 >= $F_A72 ) exit
  536.                                        enddo
  536.                                        $I_L536_428 = 1 + $I_L536_428
  536.                                        if ( $I_L536_428 >= 2 ) exit
  536.                                     enddo
  536.                                     $I_L536_580 = 1 + $I_L536_580
  536.                                     if ( $I_L536_580 >= 3 ) exit
  536.                                  enddo
  536.                                  $I_L536_616 = 1 + $I_L536_616
  536.                                  if ( $I_L536_616 >= 2 ) exit
  536.                               enddo
  536.                            endif
  557.                            _free( t$2472 )
  536.                            $F_A73 = nmax
  536.                            if ( nmax > 0 ) then
  536.                               $I_L536_430 = 0
  536.                               do
  536.                                  $I_L536_218 = 0
  536. !dir$ ivdep
  536.                                  do
  536.                                     stm(1 + $I_L536_218, 1 + $I_L536_430) = t$2463(1 + $I_L536_218, 1 + $I_L536_430)
  536.                                     $I_L536_218 = 1 + $I_L536_218
  536.                                     if ( $I_L536_218 >= $F_A73 ) exit
  536.                                  enddo
  536.                                  $I_L536_430 = 1 + $I_L536_430
  536.                                  if ( $I_L536_430 >= 2 ) exit
  536.                               enddo
  536.                            endif
  556.                            _free( t$2464 )
  536.                            $F_A74 = nmax
  536.                            if ( nmax > 0 ) then
  536.                               $I_L536_432 = 0
  536.                               do
  536.                                  $I_L536_220 = 0
  536. !dir$ ivdep
  536.                                  do
  536.                                     snow(1 + $I_L536_220, 1 + $I_L536_432) = t$2457(1 + $I_L536_220, 1 + $I_L536_432)
  536.                                     $I_L536_220 = 1 + $I_L536_220
  536.                                     if ( $I_L536_220 >= $F_A74 ) exit
  536.                                  enddo
  536.                                  $I_L536_432 = 1 + $I_L536_432
  536.                                  if ( $I_L536_432 >= 2 ) exit
  536.                               enddo
  536.                            endif
  555.                            _free( t$2458 )
  536.                            $F_A75 = nmax
  536.                            if ( nmax > 0 ) then
  536.                               $I_L536_434 = 0
  536.                               do
  536.                                  $I_L536_222 = 0
  536. !dir$ ivdep
  536.                                  do
  536.                                     satcap(1 + $I_L536_222, 1 + $I_L536_434) = t$2451(1 + $I_L536_222, 1 + $I_L536_434)
  536.                                     $I_L536_222 = 1 + $I_L536_222
  536.                                     if ( $I_L536_222 >= $F_A75 ) exit
  536.                                  enddo
  536.                                  $I_L536_434 = 1 + $I_L536_434
  536.                                  if ( $I_L536_434 >= 2 ) exit
  536.                               enddo
  536.                            endif
  555.                            _free( t$2452 )
  536.                            $F_A76 = nmax
  536.                            if ( nmax > 0 ) then
  536.                               $I_L536_436 = 0
  536.                               do
  536.                                  $I_L536_224 = 0
  536. !dir$ ivdep
  536.                                  do
  536.                                     phsoil(1 + $I_L536_224, 1 + $I_L536_436) = t$2445(1 + $I_L536_224, 1 + $I_L536_436)
  536.                                     $I_L536_224 = 1 + $I_L536_224
  536.                                     if ( $I_L536_224 >= $F_A76 ) exit
  536.                                  enddo
  536.                                  $I_L536_436 = 1 + $I_L536_436
  536.                                  if ( $I_L536_436 >= 3 ) exit
  536.                               enddo
  536.                            endif
  554.                            _free( t$2446 )
  536.                            $F_A77 = nmax
  536.                            if ( nmax > 0 ) then
  536.                               $I_L536_438 = 0
  536.                               do
  536.                                  $I_L536_226 = 0
  536. !dir$ ivdep
  536.                                  do
  536.                                     phroot(1 + $I_L536_226, 1 + $I_L536_438) = t$2439(1 + $I_L536_226, 1 + $I_L536_438)
  536.                                     $I_L536_226 = 1 + $I_L536_226
  536.                                     if ( $I_L536_226 >= $F_A77 ) exit
  536.                                  enddo
  536.                                  $I_L536_438 = 1 + $I_L536_438
  536.                                  if ( $I_L536_438 >= 2 ) exit
  536.                               enddo
  536.                            endif
  554.                            _free( t$2440 )
  536.                            $F_A78 = nmax
  536.                            if ( nmax > 0 ) then
  536.                               $I_L536_440 = 0
  536.                               do
  536.                                  $I_L536_228 = 0
  536. !dir$ ivdep
  536.                                  do
  536.                                     rst(1 + $I_L536_228, 1 + $I_L536_440) = t$2433(1 + $I_L536_228, 1 + $I_L536_440)
  536.                                     $I_L536_228 = 1 + $I_L536_228
  536.                                     if ( $I_L536_228 >= $F_A78 ) exit
  536.                                  enddo
  536.                                  $I_L536_440 = 1 + $I_L536_440
  536.                                  if ( $I_L536_440 >= 2 ) exit
  536.                               enddo
  536.                            endif
  553.                            _free( t$2434 )
  536.                            $F_A79 = nmax
  536.                            if ( nmax > 0 ) then
  536.                               $I_L536_442 = 0
  536.                               do
  536.                                  $I_L536_230 = 0
  536. !dir$ ivdep
  536.                                  do
  536.                                     pd(1 + $I_L536_230, 1 + $I_L536_442) = t$2427(1 + $I_L536_230, 1 + $I_L536_442)
  536.                                     $I_L536_230 = 1 + $I_L536_230
  536.                                     if ( $I_L536_230 >= $F_A79 ) exit
  536.                                  enddo
  536.                                  $I_L536_442 = 1 + $I_L536_442
  536.                                  if ( $I_L536_442 >= 2 ) exit
  536.                               enddo
  536.                            endif
  553.                            _free( t$2428 )
  536.                            $F_A80 = nmax
  536.                            if ( nmax > 0 ) then
  536.                               $I_L536_444 = 0
  536.                               do
  536.                                  $I_L536_232 = 0
  536. !dir$ ivdep
  536.                                  do
  536.                                     par(1 + $I_L536_232, 1 + $I_L536_444) = t$2421(1 + $I_L536_232, 1 + $I_L536_444)
  536.                                     $I_L536_232 = 1 + $I_L536_232
  536.                                     if ( $I_L536_232 >= $F_A80 ) exit
  536.                                  enddo
  536.                                  $I_L536_444 = 1 + $I_L536_444
  536.                                  if ( $I_L536_444 >= 2 ) exit
  536.                               enddo
  536.                            endif
  553.                            _free( t$2422 )
  536.                            $F_A81 = nmax
  536.                            if ( nmax > 0 ) then
  536.                               $I_L536_446 = 0
  536.                               do
  536.                                  $I_L536_234 = 0
  536. !dir$ ivdep
  536.                                  do
  536.                                     radt(1 + $I_L536_234, 1 + $I_L536_446) = t$2415(1 + $I_L536_234, 1 + $I_L536_446)
  536.                                     $I_L536_234 = 1 + $I_L536_234
  536.                                     if ( $I_L536_234 >= $F_A81 ) exit
  536.                                  enddo
  536.                                  $I_L536_446 = 1 + $I_L536_446
  536.                                  if ( $I_L536_446 >= 2 ) exit
  536.                               enddo
  536.                            endif
  552.                            _free( t$2416 )
  536.                            $F_A82 = nmax
  536.                            if ( nmax > 0 ) then
  536.                               $I_L536_448 = 0
  536.                               do
  536.                                  $I_L536_236 = 0
  536. !dir$ ivdep
  536.                                  do
  536.                                     gmu(1 + $I_L536_236, 1 + $I_L536_448) = t$2409(1 + $I_L536_236, 1 + $I_L536_448)
  536.                                     $I_L536_236 = 1 + $I_L536_236
  536.                                     if ( $I_L536_236 >= $F_A82 ) exit
  536.                                  enddo
  536.                                  $I_L536_448 = 1 + $I_L536_448
  536.                                  if ( $I_L536_448 >= 4 ) exit
  536.                               enddo
  536.                            endif
  540.                            _free( t$2410 )
  536.                            $F_A83 = nmax
  536.                            if ( nmax > 0 ) then
  536.                               $I_L536_450 = 0
  536.                               do
  536.                                  $I_L536_238 = 0
  536. !dir$ ivdep
  536.                                  do
  536.                                     gmq(1 + $I_L536_238, 1 + $I_L536_450) = t$2403(1 + $I_L536_238, 1 + $I_L536_450)
  536.                                     $I_L536_238 = 1 + $I_L536_238
  536.                                     if ( $I_L536_238 >= $F_A83 ) exit
  536.                                  enddo
  536.                                  $I_L536_450 = 1 + $I_L536_450
  536.                                  if ( $I_L536_450 >= 3 ) exit
  536.                               enddo
  536.                            endif
  540.                            _free( t$2404 )
  536.                            $F_A84 = nmax
  536.                            if ( nmax > 0 ) then
  536.                               $I_L536_452 = 0
  536.                               do
  536.                                  $I_L536_240 = 0
  536. !dir$ ivdep
  536.                                  do
  536.                                     gmt(1 + $I_L536_240, 1 + $I_L536_452) = t$2397(1 + $I_L536_240, 1 + $I_L536_452)
  536.                                     $I_L536_240 = 1 + $I_L536_240
  536.                                     if ( $I_L536_240 >= $F_A84 ) exit
  536.                                  enddo
  536.                                  $I_L536_452 = 1 + $I_L536_452
  536.                                  if ( $I_L536_452 >= 3 ) exit
  536.                               enddo
  536.                            endif
  540.                            _free( t$2398 )
  536.                            $F_A85 = nmax
  536.                            if ( nmax > 0 ) then
  536.                               $I_L536_454 = 0
  536.                               do
  536.                                  $I_L536_242 = 0
  536. !dir$ ivdep
  536.                                  do
  536.                                     vcover(1 + $I_L536_242, 1 + $I_L536_454) = t$2391(1 + $I_L536_242, 1 + $I_L536_454)
  536.                                     $I_L536_242 = 1 + $I_L536_242
  536.                                     if ( $I_L536_242 >= $F_A85 ) exit
  536.                                  enddo
  536.                                  $I_L536_454 = 1 + $I_L536_454
  536.                                  if ( $I_L536_454 >= 2 ) exit
  536.                               enddo
  536.                            endif
  537.                            _free( t$2392 )
  566.                            $ncount_S9 = 0
  567.                            if ( ncols > 0 ) then
  567.                               $I_L567_118 = 0
  567. !dir$ ivdep
  567.                               do
  568.                                  if ( imask(1 + $I_L567_118) > 0 ) then
  569.                                     $ncount_S9 = 1 + $ncount_S9
  570.                                     tm($ncount_S9) = gt(1 + $I_L567_118, 1)
  571.                                     qm($ncount_S9) = gq(1 + $I_L567_118, 1)
  572.                                     gmt($ncount_S9, 1) = tmtx(1 + $I_L567_118, 1, 1)
  573.                                     gmt($ncount_S9, 2) = tmtx(1 + $I_L567_118, 1, 2)
  574.                                     gmt($ncount_S9, 3) = tmtx(1 + $I_L567_118, 1, 3)
  575.                                     gmq($ncount_S9, 1) = qmtx(1 + $I_L567_118, 1, 1)
  576.                                     gmq($ncount_S9, 2) = qmtx(1 + $I_L567_118, 1, 2)
  577.                                     gmq($ncount_S9, 3) = qmtx(1 + $I_L567_118, 1, 3)
  578.                                     gmu($ncount_S9, 1) = umtx(1 + $I_L567_118, 1, 1)
  579.                                     gmu($ncount_S9, 2) = umtx(1 + $I_L567_118, 1, 2)
  580.                                     gmu($ncount_S9, 3) = umtx(1 + $I_L567_118, 1, 3)
  581.                                     gmu($ncount_S9, 4) = umtx(1 + $I_L567_118, 1, 4)
  581.                                  endif
  583.                                  $I_L567_118 = 1 + $I_L567_118
  582.                                  if ( $I_L567_118 >= ncols ) exit
  582.                               enddo
  582.                            endif
  584.                            $I_L527_632 = 1 + $I_L527_632
  583.                            if ( $I_L527_632 >= $intsib_S7 ) exit
  583.                         enddo
  583.                      endif
  585.                      if ( nmax > 0 ) then
  593.                         if ( $I_L494_634 == 0 ) then
  585.                            $I_L585_120 = 0
  585. !dir$ ivdep
  585.                            do
  586.                               capac(1 + $I_L585_120, 1) = capacm(1 + $I_L585_120, 1)
  587.                               capac(1 + $I_L585_120, 2) = capacm(1 + $I_L585_120, 2)
  588.                               w(1 + $I_L585_120, 1) = wm(1 + $I_L585_120, 1)
  589.                               w(1 + $I_L585_120, 2) = wm(1 + $I_L585_120, 2)
  590.                               w(1 + $I_L585_120, 3) = wm(1 + $I_L585_120, 3)
  591.                               td(1 + $I_L585_120) = tdm(1 + $I_L585_120)
  592.                               tc(1 + $I_L585_120) = tcm(1 + $I_L585_120)
  594.                               tmin(1 + $I_L585_120) = tg(1 + $I_L585_120)
  598.                               tg(1 + $I_L585_120) = tgm(1 + $I_L585_120)
  599.                               $I_L585_120 = 1 + $I_L585_120
  597.                               if ( $I_L585_120 >= nmax ) exit
  597.                            enddo
  597.                         else
  585.                            $I_L585_136 = 0
  585. !dir$ ivdep
  585.                            do
  586.                               capac(1 + $I_L585_136, 1) = capacm(1 + $I_L585_136, 1)
  587.                               capac(1 + $I_L585_136, 2) = capacm(1 + $I_L585_136, 2)
  588.                               w(1 + $I_L585_136, 1) = wm(1 + $I_L585_136, 1)
  589.                               w(1 + $I_L585_136, 2) = wm(1 + $I_L585_136, 2)
  590.                               w(1 + $I_L585_136, 3) = wm(1 + $I_L585_136, 3)
  591.                               td(1 + $I_L585_136) = tdm(1 + $I_L585_136)
  592.                               tc(1 + $I_L585_136) = tcm(1 + $I_L585_136)
  596.                               tmax(1 + $I_L585_136) = tg(1 + $I_L585_136)
  598.                               tg(1 + $I_L585_136) = tgm(1 + $I_L585_136)
  599.                               $I_L585_136 = 1 + $I_L585_136
  597.                               if ( $I_L585_136 >= nmax ) exit
  597.                            enddo
  597.                         endif
  597.                      endif
  600.                      $I_L494_634 = 1 + $I_L494_634
  599.                      if ( $I_L494_634 >= $nint_S3 ) exit
  599.                   enddo
  599.                endif
  601.                if ( nmax > 0 ) then
  601.                   $I_L601_122 = 0
  601. !dir$ ivdep
  601.                   do
  602.                      $td_WR0_R0 = 1.0000000000000001e-1 * tdm(1 + $I_L601_122) + 4.5000000000000001e-1 * ( tmax(1 + $I_L601_122) + tmin(1 + $I_L601_122) )
  602.                      td(1 + $I_L601_122) = $td_WR0_R0
  603.                      tdm(1 + $I_L601_122) = $td_WR0_R0
  604.                      td0(1 + $I_L601_122) = $td_WR0_R0
  605.                      $I_L601_122 = 1 + $I_L601_122
  601.                      if ( $I_L601_122 >= nmax ) exit
  601.                   enddo
  601.                endif
  609.                $ncount_S14 = 0
  610.                if ( ncols > 0 ) then
  610.                   $I_L610_124 = 0
  610. !dir$ ivdep
  610.                   do
  611.                      if ( imask(1 + $I_L610_124) > 0 ) then
  612.                         $ncount_S14 = 1 + $ncount_S14
  613.                         cosz($ncount_S14) = zenith(1 + $I_L610_124)
  613.                      endif
  615.                      $I_L610_124 = 1 + $I_L610_124
  614.                      if ( $I_L610_124 >= ncols ) exit
  614.                   enddo
  614.                endif
  616.                if ( nmax > 0 ) then
  616.                   $I_L616_126 = 0
  616. !dir$ ivdep
  616.                   do
  617.                      if ( cosz(1 + $I_L616_126) < 0.0 ) then
  618.                         tgm(1 + $I_L616_126) = tmin(1 + $I_L616_126)
  619.                         tg0(1 + $I_L616_126) = tmin(1 + $I_L616_126)
  619.                      endif
  621.                      $I_L616_126 = 1 + $I_L616_126
  620.                      if ( $I_L616_126 >= nmax ) exit
  620.                   enddo
  620.                endif
  624.                t$2577 = ( max( 0, nmax ) )
  624.                t$2581 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  624.                $F_A86 = nmax
  624.                if ( nmax > 0 ) then
  624.                   $I_L624_456 = 0
  624.                   do
  624.                      $I_L624_244 = 0
  624. !dir$ ivdep
  624.                      do
  624.                         t$2580(1 + $I_L624_244, 1 + $I_L624_456) = capac(1 + $I_L624_244, 1 + $I_L624_456)
  624.                         $I_L624_244 = 1 + $I_L624_244
  624.                         if ( $I_L624_244 >= $F_A86 ) exit
  624.                      enddo
  624.                      $I_L624_456 = 1 + $I_L624_456
  624.                      if ( $I_L624_456 >= 2 ) exit
  624.                   enddo
  624.                endif
  625.                t$2583 = ( max( 0, nmax ) )
  625.                t$2587 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  625.                $F_A87 = nmax
  625.                if ( nmax > 0 ) then
  625.                   $I_L625_458 = 0
  625.                   do
  625.                      $I_L625_246 = 0
  625. !dir$ ivdep
  625.                      do
  625.                         t$2586(1 + $I_L625_246, 1 + $I_L625_458) = satcap(1 + $I_L625_246, 1 + $I_L625_458)
  625.                         $I_L625_246 = 1 + $I_L625_246
  625.                         if ( $I_L625_246 >= $F_A87 ) exit
  625.                      enddo
  625.                      $I_L625_458 = 1 + $I_L625_458
  625.                      if ( $I_L625_458 >= 2 ) exit
  625.                   enddo
  625.                endif
  625.                t$2589 = ( max( 0, nmax ) )
  625.                t$2595 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  625.                $F_A88 = nmax
  625.                if ( nmax > 0 ) then
  625.                   $I_L625_618 = 0
  625.                   do
  625.                      $I_L625_582 = 0
  625.                      do
  625.                         $I_L625_460 = 0
  625.                         do
  625.                            $I_L625_248 = 0
  625. !dir$ ivdep
  625.                            do
  625.                               t$2594(1 + $I_L625_248, 1 + $I_L625_460, 1 + $I_L625_582, 1 + $I_L625_618) = extk(1 + $I_L625_248, 1 + $I_L625_460, 1 + $I_L625_582, 1 + $I_L625_618)
  625.                               $I_L625_248 = 1 + $I_L625_248
  625.                               if ( $I_L625_248 >= $F_A88 ) exit
  625.                            enddo
  625.                            $I_L625_460 = 1 + $I_L625_460
  625.                            if ( $I_L625_460 >= 2 ) exit
  625.                         enddo
  625.                         $I_L625_582 = 1 + $I_L625_582
  625.                         if ( $I_L625_582 >= 3 ) exit
  625.                      enddo
  625.                      $I_L625_618 = 1 + $I_L625_618
  625.                      if ( $I_L625_618 >= 2 ) exit
  625.                   enddo
  625.                endif
  625.                t$2597 = ( max( 0, nmax ) )
  625.                t$2603 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  625.                $F_A89 = nmax
  625.                if ( nmax > 0 ) then
  625.                   $I_L625_620 = 0
  625.                   do
  625.                      $I_L625_584 = 0
  625.                      do
  625.                         $I_L625_462 = 0
  625.                         do
  625.                            $I_L625_250 = 0
  625. !dir$ ivdep
  625.                            do
  625.                               t$2602(1 + $I_L625_250, 1 + $I_L625_462, 1 + $I_L625_584, 1 + $I_L625_620) = radfac(1 + $I_L625_250, 1 + $I_L625_462, 1 + $I_L625_584, 1 + $I_L625_620)
  625.                               $I_L625_250 = 1 + $I_L625_250
  625.                               if ( $I_L625_250 >= $F_A89 ) exit
  625.                            enddo
  625.                            $I_L625_462 = 1 + $I_L625_462
  625.                            if ( $I_L625_462 >= 2 ) exit
  625.                         enddo
  625.                         $I_L625_584 = 1 + $I_L625_584
  625.                         if ( $I_L625_584 >= 3 ) exit
  625.                      enddo
  625.                      $I_L625_620 = 1 + $I_L625_620
  625.                      if ( $I_L625_620 >= 2 ) exit
  625.                   enddo
  625.                endif
  627.                t$2605 = ( max( 0, nmax ) )
  627.                t$2610 = int( _alloc( max( 0, 32 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  627.                $F_A90 = nmax
  627.                if ( nmax > 0 ) then
  627.                   $I_L627_586 = 0
  627.                   do
  627.                      $I_L627_464 = 0
  627.                      do
  627.                         $I_L627_252 = 0
  627. !dir$ ivdep
  627.                         do
  627.                            t$2609(1 + $I_L627_252, 1 + $I_L627_464, 1 + $I_L627_586) = salb(1 + $I_L627_252, 1 + $I_L627_464, 1 + $I_L627_586)
  627.                            $I_L627_252 = 1 + $I_L627_252
  627.                            if ( $I_L627_252 >= $F_A90 ) exit
  627.                         enddo
  627.                         $I_L627_464 = 1 + $I_L627_464
  627.                         if ( $I_L627_464 >= 2 ) exit
  627.                      enddo
  627.                      $I_L627_586 = 1 + $I_L627_586
  627.                      if ( $I_L627_586 >= 2 ) exit
  627.                   enddo
  627.                endif
  622.                call radalb( nmax, mon(1), nmax, itype(1), tc(1), tg(1), t$2580(1, 1), t$2586(1, 1), t$2594(1, 1, 1, 1), t$2602(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), zlwup(1), t$2609(1, 1, 1), tgeff(1), cosz(1), nsx(1), latitu )
  622.                $F_A91 = nmax
  622.                if ( nmax > 0 ) then
  622.                   $I_L622_588 = 0
  622.                   do
  622.                      $I_L622_466 = 0
  622.                      do
  622.                         $I_L622_254 = 0
  622. !dir$ ivdep
  622.                         do
  622.                            salb(1 + $I_L622_254, 1 + $I_L622_466, 1 + $I_L622_588) = t$2609(1 + $I_L622_254, 1 + $I_L622_466, 1 + $I_L622_588)
  622.                            $I_L622_254 = 1 + $I_L622_254
  622.                            if ( $I_L622_254 >= $F_A91 ) exit
  622.                         enddo
  622.                         $I_L622_466 = 1 + $I_L622_466
  622.                         if ( $I_L622_466 >= 2 ) exit
  622.                      enddo
  622.                      $I_L622_588 = 1 + $I_L622_588
  622.                      if ( $I_L622_588 >= 2 ) exit
  622.                   enddo
  622.                endif
  627.                _free( t$2610 )
  622.                $F_A92 = nmax
  622.                if ( nmax > 0 ) then
  622.                   $I_L622_622 = 0
  622.                   do
  622.                      $I_L622_590 = 0
  622.                      do
  622.                         $I_L622_468 = 0
  622.                         do
  622.                            $I_L622_256 = 0
  622. !dir$ ivdep
  622.                            do
  622.                               radfac(1 + $I_L622_256, 1 + $I_L622_468, 1 + $I_L622_590, 1 + $I_L622_622) = t$2602(1 + $I_L622_256, 1 + $I_L622_468, 1 + $I_L622_590, 1 + $I_L622_622)
  622.                               $I_L622_256 = 1 + $I_L622_256
  622.                               if ( $I_L622_256 >= $F_A92 ) exit
  622.                            enddo
  622.                            $I_L622_468 = 1 + $I_L622_468
  622.                            if ( $I_L622_468 >= 2 ) exit
  622.                         enddo
  622.                         $I_L622_590 = 1 + $I_L622_590
  622.                         if ( $I_L622_590 >= 3 ) exit
  622.                      enddo
  622.                      $I_L622_622 = 1 + $I_L622_622
  622.                      if ( $I_L622_622 >= 2 ) exit
  622.                   enddo
  622.                endif
  625.                _free( t$2603 )
  622.                $F_A93 = nmax
  622.                if ( nmax > 0 ) then
  622.                   $I_L622_624 = 0
  622.                   do
  622.                      $I_L622_592 = 0
  622.                      do
  622.                         $I_L622_470 = 0
  622.                         do
  622.                            $I_L622_258 = 0
  622. !dir$ ivdep
  622.                            do
  622.                               extk(1 + $I_L622_258, 1 + $I_L622_470, 1 + $I_L622_592, 1 + $I_L622_624) = t$2594(1 + $I_L622_258, 1 + $I_L622_470, 1 + $I_L622_592, 1 + $I_L622_624)
  622.                               $I_L622_258 = 1 + $I_L622_258
  622.                               if ( $I_L622_258 >= $F_A93 ) exit
  622.                            enddo
  622.                            $I_L622_470 = 1 + $I_L622_470
  622.                            if ( $I_L622_470 >= 2 ) exit
  622.                         enddo
  622.                         $I_L622_592 = 1 + $I_L622_592
  622.                         if ( $I_L622_592 >= 3 ) exit
  622.                      enddo
  622.                      $I_L622_624 = 1 + $I_L622_624
  622.                      if ( $I_L622_624 >= 2 ) exit
  622.                   enddo
  622.                endif
  625.                _free( t$2595 )
  622.                $F_A94 = nmax
  622.                if ( nmax > 0 ) then
  622.                   $I_L622_472 = 0
  622.                   do
  622.                      $I_L622_260 = 0
  622. !dir$ ivdep
  622.                      do
  622.                         satcap(1 + $I_L622_260, 1 + $I_L622_472) = t$2586(1 + $I_L622_260, 1 + $I_L622_472)
  622.                         $I_L622_260 = 1 + $I_L622_260
  622.                         if ( $I_L622_260 >= $F_A94 ) exit
  622.                      enddo
  622.                      $I_L622_472 = 1 + $I_L622_472
  622.                      if ( $I_L622_472 >= 2 ) exit
  622.                   enddo
  622.                endif
  625.                _free( t$2587 )
  624.                _free( t$2581 )
  624.             endif
  624.          endif
  624.       endif
  631.       if ( nmax > 0 ) then
  632.          $ncount_S17 = 0
  633.          if ( ncols > 0 ) then
  633.             $I_L633_128 = 0
  633. !dir$ ivdep
  633.             do
  634.                if ( imask(1 + $I_L633_128) > 0 ) then
  635.                   $ncount_S17 = 1 + $ncount_S17
  639.                   if ( cosz($ncount_S17) >= 1.746e-2 ) then
  640.                      radn($ncount_S17, 1, 1) = xvisb(1 + $I_L633_128)
  641.                      radn($ncount_S17, 1, 2) = xvisd(1 + $I_L633_128)
  642.                      radn($ncount_S17, 2, 1) = xnirb(1 + $I_L633_128)
  643.                      radn($ncount_S17, 2, 2) = xnird(1 + $I_L633_128)
  643.                   else
  645.                      radn($ncount_S17, 1, 1) = 0.0
  646.                      radn($ncount_S17, 1, 2) = 0.0
  647.                      radn($ncount_S17, 2, 1) = 0.0
  648.                      radn($ncount_S17, 2, 2) = 0.0
  648.                   endif
  650.                   radn($ncount_S17, 3, 1) = 0.0
  651.                   radn($ncount_S17, 3, 2) = dlwbot(1 + $I_L633_128)
  655.                   ppl($ncount_S17) = ppli(1 + $I_L633_128)
  656.                   ppc($ncount_S17) = ppci(1 + $I_L633_128)
  656.                endif
  658.                $I_L633_128 = 1 + $I_L633_128
  657.                if ( $I_L633_128 >= ncols ) exit
  657.             enddo
  657.          endif
  660.          t$2615 = ( max( 0, nmax ) )
  660.          t$2619 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  660.          $F_A95 = nmax
  660.          $I_L660_474 = 0
  660.          do
  660.             $I_L660_262 = 0
  660. !dir$ ivdep
  660.             do
  660.                t$2618(1 + $I_L660_262, 1 + $I_L660_474) = vcover(1 + $I_L660_262, 1 + $I_L660_474)
  660.                $I_L660_262 = 1 + $I_L660_262
  660.                if ( $I_L660_262 >= $F_A95 ) exit
  660.             enddo
  660.             $I_L660_474 = 1 + $I_L660_474
  660.             if ( $I_L660_474 >= 2 ) exit
  660.          enddo
  663.          t$2621 = ( max( 0, nmax ) )
  663.          t$2625 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  663.          $F_A96 = nmax
  663.          $I_L663_476 = 0
  663.          do
  663.             $I_L663_264 = 0
  663. !dir$ ivdep
  663.             do
  663.                t$2624(1 + $I_L663_264, 1 + $I_L663_476) = gmt(1 + $I_L663_264, 1 + $I_L663_476)
  663.                $I_L663_264 = 1 + $I_L663_264
  663.                if ( $I_L663_264 >= $F_A96 ) exit
  663.             enddo
  663.             $I_L663_476 = 1 + $I_L663_476
  663.             if ( $I_L663_476 >= 3 ) exit
  663.          enddo
  663.          t$2627 = ( max( 0, nmax ) )
  663.          t$2631 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  663.          $F_A97 = nmax
  663.          $I_L663_478 = 0
  663.          do
  663.             $I_L663_266 = 0
  663. !dir$ ivdep
  663.             do
  663.                t$2630(1 + $I_L663_266, 1 + $I_L663_478) = gmq(1 + $I_L663_266, 1 + $I_L663_478)
  663.                $I_L663_266 = 1 + $I_L663_266
  663.                if ( $I_L663_266 >= $F_A97 ) exit
  663.             enddo
  663.             $I_L663_478 = 1 + $I_L663_478
  663.             if ( $I_L663_478 >= 3 ) exit
  663.          enddo
  663.          t$2633 = ( max( 0, nmax ) )
  663.          t$2637 = int( _alloc( max( 0, 32 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  663.          $F_A98 = nmax
  663.          $I_L663_480 = 0
  663.          do
  663.             $I_L663_268 = 0
  663. !dir$ ivdep
  663.             do
  663.                t$2636(1 + $I_L663_268, 1 + $I_L663_480) = gmu(1 + $I_L663_268, 1 + $I_L663_480)
  663.                $I_L663_268 = 1 + $I_L663_268
  663.                if ( $I_L663_268 >= $F_A98 ) exit
  663.             enddo
  663.             $I_L663_480 = 1 + $I_L663_480
  663.             if ( $I_L663_480 >= 4 ) exit
  663.          enddo
  675.          t$2639 = ( max( 0, nmax ) )
  675.          t$2643 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  675.          $F_A99 = nmax
  675.          $I_L675_482 = 0
  675.          do
  675.             $I_L675_270 = 0
  675. !dir$ ivdep
  675.             do
  675.                t$2642(1 + $I_L675_270, 1 + $I_L675_482) = radt(1 + $I_L675_270, 1 + $I_L675_482)
  675.                $I_L675_270 = 1 + $I_L675_270
  675.                if ( $I_L675_270 >= $F_A99 ) exit
  675.             enddo
  675.             $I_L675_482 = 1 + $I_L675_482
  675.             if ( $I_L675_482 >= 2 ) exit
  675.          enddo
  676.          t$2645 = ( max( 0, nmax ) )
  676.          t$2649 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  676.          $F_A100 = nmax
  676.          $I_L676_484 = 0
  676.          do
  676.             $I_L676_272 = 0
  676. !dir$ ivdep
  676.             do
  676.                t$2648(1 + $I_L676_272, 1 + $I_L676_484) = par(1 + $I_L676_272, 1 + $I_L676_484)
  676.                $I_L676_272 = 1 + $I_L676_272
  676.                if ( $I_L676_272 >= $F_A100 ) exit
  676.             enddo
  676.             $I_L676_484 = 1 + $I_L676_484
  676.             if ( $I_L676_484 >= 2 ) exit
  676.          enddo
  676.          t$2651 = ( max( 0, nmax ) )
  676.          t$2655 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  676.          $F_A101 = nmax
  676.          $I_L676_486 = 0
  676.          do
  676.             $I_L676_274 = 0
  676. !dir$ ivdep
  676.             do
  676.                t$2654(1 + $I_L676_274, 1 + $I_L676_486) = pd(1 + $I_L676_274, 1 + $I_L676_486)
  676.                $I_L676_274 = 1 + $I_L676_274
  676.                if ( $I_L676_274 >= $F_A101 ) exit
  676.             enddo
  676.             $I_L676_486 = 1 + $I_L676_486
  676.             if ( $I_L676_486 >= 2 ) exit
  676.          enddo
  676.          t$2657 = ( max( 0, nmax ) )
  676.          t$2661 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  676.          $F_A102 = nmax
  676.          $I_L676_488 = 0
  676.          do
  676.             $I_L676_276 = 0
  676. !dir$ ivdep
  676.             do
  676.                t$2660(1 + $I_L676_276, 1 + $I_L676_488) = rst(1 + $I_L676_276, 1 + $I_L676_488)
  676.                $I_L676_276 = 1 + $I_L676_276
  676.                if ( $I_L676_276 >= $F_A102 ) exit
  676.             enddo
  676.             $I_L676_488 = 1 + $I_L676_488
  676.             if ( $I_L676_488 >= 2 ) exit
  676.          enddo
  677.          t$2663 = ( max( 0, nmax ) )
  677.          t$2667 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  677.          $F_A103 = nmax
  677.          $I_L677_490 = 0
  677.          do
  677.             $I_L677_278 = 0
  677. !dir$ ivdep
  677.             do
  677.                t$2666(1 + $I_L677_278, 1 + $I_L677_490) = phroot(1 + $I_L677_278, 1 + $I_L677_490)
  677.                $I_L677_278 = 1 + $I_L677_278
  677.                if ( $I_L677_278 >= $F_A103 ) exit
  677.             enddo
  677.             $I_L677_490 = 1 + $I_L677_490
  677.             if ( $I_L677_490 >= 2 ) exit
  677.          enddo
  677.          t$2669 = ( max( 0, nmax ) )
  677.          t$2673 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  677.          $F_A104 = nmax
  677.          $I_L677_492 = 0
  677.          do
  677.             $I_L677_280 = 0
  677. !dir$ ivdep
  677.             do
  677.                t$2672(1 + $I_L677_280, 1 + $I_L677_492) = phsoil(1 + $I_L677_280, 1 + $I_L677_492)
  677.                $I_L677_280 = 1 + $I_L677_280
  677.                if ( $I_L677_280 >= $F_A104 ) exit
  677.             enddo
  677.             $I_L677_492 = 1 + $I_L677_492
  677.             if ( $I_L677_492 >= 3 ) exit
  677.          enddo
  678.          t$2675 = ( max( 0, nmax ) )
  678.          t$2679 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  678.          $F_A105 = nmax
  678.          $I_L678_494 = 0
  678.          do
  678.             $I_L678_282 = 0
  678. !dir$ ivdep
  678.             do
  678.                t$2678(1 + $I_L678_282, 1 + $I_L678_494) = satcap(1 + $I_L678_282, 1 + $I_L678_494)
  678.                $I_L678_282 = 1 + $I_L678_282
  678.                if ( $I_L678_282 >= $F_A105 ) exit
  678.             enddo
  678.             $I_L678_494 = 1 + $I_L678_494
  678.             if ( $I_L678_494 >= 2 ) exit
  678.          enddo
  678.          t$2681 = ( max( 0, nmax ) )
  678.          t$2685 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  678.          $F_A106 = nmax
  678.          $I_L678_496 = 0
  678.          do
  678.             $I_L678_284 = 0
  678. !dir$ ivdep
  678.             do
  678.                t$2684(1 + $I_L678_284, 1 + $I_L678_496) = snow(1 + $I_L678_284, 1 + $I_L678_496)
  678.                $I_L678_284 = 1 + $I_L678_284
  678.                if ( $I_L678_284 >= $F_A106 ) exit
  678.             enddo
  678.             $I_L678_496 = 1 + $I_L678_496
  678.             if ( $I_L678_496 >= 2 ) exit
  678.          enddo
  679.          t$2687 = ( max( 0, nmax ) )
  679.          t$2691 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  679.          $F_A107 = nmax
  679.          $I_L679_498 = 0
  679.          do
  679.             $I_L679_286 = 0
  679. !dir$ ivdep
  679.             do
  679.                t$2690(1 + $I_L679_286, 1 + $I_L679_498) = stm(1 + $I_L679_286, 1 + $I_L679_498)
  679.                $I_L679_286 = 1 + $I_L679_286
  679.                if ( $I_L679_286 >= $F_A107 ) exit
  679.             enddo
  679.             $I_L679_498 = 1 + $I_L679_498
  679.             if ( $I_L679_498 >= 2 ) exit
  679.          enddo
  680.          t$2693 = ( max( 0, nmax ) )
  680.          t$2699 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  680.          $F_A108 = nmax
  680.          $I_L680_626 = 0
  680.          do
  680.             $I_L680_594 = 0
  680.             do
  680.                $I_L680_500 = 0
  680.                do
  680.                   $I_L680_288 = 0
  680. !dir$ ivdep
  680.                   do
  680.                      t$2698(1 + $I_L680_288, 1 + $I_L680_500, 1 + $I_L680_594, 1 + $I_L680_626) = extk(1 + $I_L680_288, 1 + $I_L680_500, 1 + $I_L680_594, 1 + $I_L680_626)
  680.                      $I_L680_288 = 1 + $I_L680_288
  680.                      if ( $I_L680_288 >= $F_A108 ) exit
  680.                   enddo
  680.                   $I_L680_500 = 1 + $I_L680_500
  680.                   if ( $I_L680_500 >= 2 ) exit
  680.                enddo
  680.                $I_L680_594 = 1 + $I_L680_594
  680.                if ( $I_L680_594 >= 3 ) exit
  680.             enddo
  680.             $I_L680_626 = 1 + $I_L680_626
  680.             if ( $I_L680_626 >= 2 ) exit
  680.          enddo
  680.          t$2701 = ( max( 0, nmax ) )
  680.          t$2707 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  680.          $F_A109 = nmax
  680.          $I_L680_628 = 0
  680.          do
  680.             $I_L680_596 = 0
  680.             do
  680.                $I_L680_502 = 0
  680.                do
  680.                   $I_L680_290 = 0
  680. !dir$ ivdep
  680.                   do
  680.                      t$2706(1 + $I_L680_290, 1 + $I_L680_502, 1 + $I_L680_596, 1 + $I_L680_628) = radfac(1 + $I_L680_290, 1 + $I_L680_502, 1 + $I_L680_596, 1 + $I_L680_628)
  680.                      $I_L680_290 = 1 + $I_L680_290
  680.                      if ( $I_L680_290 >= $F_A109 ) exit
  680.                   enddo
  680.                   $I_L680_502 = 1 + $I_L680_502
  680.                   if ( $I_L680_502 >= 2 ) exit
  680.                enddo
  680.                $I_L680_596 = 1 + $I_L680_596
  680.                if ( $I_L680_596 >= 3 ) exit
  680.             enddo
  680.             $I_L680_628 = 1 + $I_L680_628
  680.             if ( $I_L680_628 >= 2 ) exit
  680.          enddo
  682.          t$2709 = ( max( 0, nmax ) )
  682.          t$2713 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  682.          $F_A110 = nmax
  682.          $I_L682_504 = 0
  682.          do
  682.             $I_L682_292 = 0
  682. !dir$ ivdep
  682.             do
  682.                t$2712(1 + $I_L682_292, 1 + $I_L682_504) = capac(1 + $I_L682_292, 1 + $I_L682_504)
  682.                $I_L682_292 = 1 + $I_L682_292
  682.                if ( $I_L682_292 >= $F_A110 ) exit
  682.             enddo
  682.             $I_L682_504 = 1 + $I_L682_504
  682.             if ( $I_L682_504 >= 2 ) exit
  682.          enddo
  682.          t$2715 = ( max( 0, nmax ) )
  682.          t$2719 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  682.          $F_A111 = nmax
  682.          $I_L682_506 = 0
  682.          do
  682.             $I_L682_294 = 0
  682. !dir$ ivdep
  682.             do
  682.                t$2718(1 + $I_L682_294, 1 + $I_L682_506) = w(1 + $I_L682_294, 1 + $I_L682_506)
  682.                $I_L682_294 = 1 + $I_L682_294
  682.                if ( $I_L682_294 >= $F_A111 ) exit
  682.             enddo
  682.             $I_L682_506 = 1 + $I_L682_506
  682.             if ( $I_L682_506 >= 3 ) exit
  682.          enddo
  684.          t$2721 = ( max( 0, nmax ) )
  684.          t$2726 = int( _alloc( max( 0, 48 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  684.          $F_A112 = nmax
  684.          $I_L684_598 = 0
  684.          do
  684.             $I_L684_508 = 0
  684.             do
  684.                $I_L684_296 = 0
  684. !dir$ ivdep
  684.                do
  684.                   t$2725(1 + $I_L684_296, 1 + $I_L684_508, 1 + $I_L684_598) = radn(1 + $I_L684_296, 1 + $I_L684_508, 1 + $I_L684_598)
  684.                   $I_L684_296 = 1 + $I_L684_296
  684.                   if ( $I_L684_296 >= $F_A112 ) exit
  684.                enddo
  684.                $I_L684_508 = 1 + $I_L684_508
  684.                if ( $I_L684_508 >= 3 ) exit
  684.             enddo
  684.             $I_L684_598 = 1 + $I_L684_598
  684.             if ( $I_L684_598 >= 2 ) exit
  684.          enddo
  686.          t$2728 = ( max( 0, nmax ) )
  686.          t$2732 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  686.          $F_A113 = nmax
  686.          $I_L686_510 = 0
  686.          do
  686.             $I_L686_298 = 0
  686. !dir$ ivdep
  686.             do
  686.                t$2731(1 + $I_L686_298, 1 + $I_L686_510) = zlt2(1 + $I_L686_298, 1 + $I_L686_510)
  686.                $I_L686_298 = 1 + $I_L686_298
  686.                if ( $I_L686_298 >= $F_A113 ) exit
  686.             enddo
  686.             $I_L686_510 = 1 + $I_L686_510
  686.             if ( $I_L686_510 >= 2 ) exit
  686.          enddo
  686.          t$2734 = ( max( 0, nmax ) )
  686.          t$2738 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  686.          $F_A114 = nmax
  686.          $I_L686_512 = 0
  686.          do
  686.             $I_L686_300 = 0
  686. !dir$ ivdep
  686.             do
  686.                t$2737(1 + $I_L686_300, 1 + $I_L686_512) = green2(1 + $I_L686_300, 1 + $I_L686_512)
  686.                $I_L686_300 = 1 + $I_L686_300
  686.                if ( $I_L686_300 >= $F_A114 ) exit
  686.             enddo
  686.             $I_L686_512 = 1 + $I_L686_512
  686.             if ( $I_L686_512 >= 2 ) exit
  686.          enddo
  686.          t$2740 = ( max( 0, nmax ) )
  686.          t$2744 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  686.          $F_A115 = nmax
  686.          $I_L686_514 = 0
  686.          do
  686.             $I_L686_302 = 0
  686. !dir$ ivdep
  686.             do
  686.                t$2743(1 + $I_L686_302, 1 + $I_L686_514) = chil2(1 + $I_L686_302, 1 + $I_L686_514)
  686.                $I_L686_302 = 1 + $I_L686_302
  686.                if ( $I_L686_302 >= $F_A115 ) exit
  686.             enddo
  686.             $I_L686_514 = 1 + $I_L686_514
  686.             if ( $I_L686_514 >= 2 ) exit
  686.          enddo
  687.          t$2746 = ( max( 0, nmax ) )
  687.          t$2751 = int( _alloc( max( 0, 48 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  687.          $F_A116 = nmax
  687.          $I_L687_600 = 0
  687.          do
  687.             $I_L687_516 = 0
  687.             do
  687.                $I_L687_304 = 0
  687. !dir$ ivdep
  687.                do
  687.                   t$2750(1 + $I_L687_304, 1 + $I_L687_516, 1 + $I_L687_600) = rstpar2(1 + $I_L687_304, 1 + $I_L687_516, 1 + $I_L687_600)
  687.                   $I_L687_304 = 1 + $I_L687_304
  687.                   if ( $I_L687_304 >= $F_A116 ) exit
  687.                enddo
  687.                $I_L687_516 = 1 + $I_L687_516
  687.                if ( $I_L687_516 >= 2 ) exit
  687.             enddo
  687.             $I_L687_600 = 1 + $I_L687_600
  687.             if ( $I_L687_600 >= 3 ) exit
  687.          enddo
  687.          t$2753 = ( max( 0, nmax ) )
  687.          t$2757 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  687.          $F_A117 = nmax
  687.          $I_L687_518 = 0
  687.          do
  687.             $I_L687_306 = 0
  687. !dir$ ivdep
  687.             do
  687.                t$2756(1 + $I_L687_306, 1 + $I_L687_518) = topt2(1 + $I_L687_306, 1 + $I_L687_518)
  687.                $I_L687_306 = 1 + $I_L687_306
  687.                if ( $I_L687_306 >= $F_A117 ) exit
  687.             enddo
  687.             $I_L687_518 = 1 + $I_L687_518
  687.             if ( $I_L687_518 >= 2 ) exit
  687.          enddo
  687.          t$2759 = ( max( 0, nmax ) )
  687.          t$2763 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  687.          $F_A118 = nmax
  687.          $I_L687_520 = 0
  687.          do
  687.             $I_L687_308 = 0
  687. !dir$ ivdep
  687.             do
  687.                t$2762(1 + $I_L687_308, 1 + $I_L687_520) = tll2(1 + $I_L687_308, 1 + $I_L687_520)
  687.                $I_L687_308 = 1 + $I_L687_308
  687.                if ( $I_L687_308 >= $F_A118 ) exit
  687.             enddo
  687.             $I_L687_520 = 1 + $I_L687_520
  687.             if ( $I_L687_520 >= 2 ) exit
  687.          enddo
  687.          t$2765 = ( max( 0, nmax ) )
  687.          t$2769 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  687.          $F_A119 = nmax
  687.          $I_L687_522 = 0
  687.          do
  687.             $I_L687_310 = 0
  687. !dir$ ivdep
  687.             do
  687.                t$2768(1 + $I_L687_310, 1 + $I_L687_522) = tu2(1 + $I_L687_310, 1 + $I_L687_522)
  687.                $I_L687_310 = 1 + $I_L687_310
  687.                if ( $I_L687_310 >= $F_A119 ) exit
  687.             enddo
  687.             $I_L687_522 = 1 + $I_L687_522
  687.             if ( $I_L687_522 >= 2 ) exit
  687.          enddo
  688.          t$2771 = ( max( 0, nmax ) )
  688.          t$2775 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  688.          $F_A120 = nmax
  688.          $I_L688_524 = 0
  688.          do
  688.             $I_L688_312 = 0
  688. !dir$ ivdep
  688.             do
  688.                t$2774(1 + $I_L688_312, 1 + $I_L688_524) = defac2(1 + $I_L688_312, 1 + $I_L688_524)
  688.                $I_L688_312 = 1 + $I_L688_312
  688.                if ( $I_L688_312 >= $F_A120 ) exit
  688.             enddo
  688.             $I_L688_524 = 1 + $I_L688_524
  688.             if ( $I_L688_524 >= 2 ) exit
  688.          enddo
  688.          t$2777 = ( max( 0, nmax ) )
  688.          t$2781 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  688.          $F_A121 = nmax
  688.          $I_L688_526 = 0
  688.          do
  688.             $I_L688_314 = 0
  688. !dir$ ivdep
  688.             do
  688.                t$2780(1 + $I_L688_314, 1 + $I_L688_526) = ph12(1 + $I_L688_314, 1 + $I_L688_526)
  688.                $I_L688_314 = 1 + $I_L688_314
  688.                if ( $I_L688_314 >= $F_A121 ) exit
  688.             enddo
  688.             $I_L688_526 = 1 + $I_L688_526
  688.             if ( $I_L688_526 >= 2 ) exit
  688.          enddo
  688.          t$2783 = ( max( 0, nmax ) )
  688.          t$2787 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
  688.          $F_A122 = nmax
  688.          $I_L688_528 = 0
  688.          do
  688.             $I_L688_316 = 0
  688. !dir$ ivdep
  688.             do
  688.                t$2786(1 + $I_L688_316, 1 + $I_L688_528) = ph22(1 + $I_L688_316, 1 + $I_L688_528)
  688.                $I_L688_316 = 1 + $I_L688_316
  688.                if ( $I_L688_316 >= $F_A122 ) exit
  688.             enddo
  688.             $I_L688_528 = 1 + $I_L688_528
  688.             if ( $I_L688_528 >= 2 ) exit
  688.          enddo
  659.          call fysiks( t$2618(1, 1), z0x(1), d(1), rdc(1), rbc(1), z0(1), jdt, latitu, bps(1), psb(1), dzm(1), em(1), t$2624(1, 1), t$2630(1, 1), t$2636(1, 1), cu(1), cuni(1), ctni(1), ustar(1), cosz(1), sinclt(1), rhoair(1), psy(1), rcp(1), wc(1), wg(1), fc(1), fg(1), hr(1), ect(1), eci(1), egt(1), egi(1), egs(1), ec(1), eg(1), hc(1), hg(1), ecidif(1), egidif(1), ecmass(1), egmass(1), etmass(1), hflux(1), chf(1), shf(1), fluxef(1), roff(1), drag(1), ra(1), rb(1), rd(1), rc(1), rg(1), tcta(1), tgta(1), ta(1), ea(1), etc(1), etg(1), btc(1), btg(1), u2(1), t$2642(1, 1), t$2648(1, 1), t$2654(1, 1), t$2660(1, 1), rsoil(1), t$2666(1, 1), hrr(1), t$2672(1, 1), cc(1), cg(1), t$2678(1, 1), t$2684(1, 1), dtc(1), dtg(1), dtm(1), dqm(1), t$2690(1, 1), t$2698(1, 1, 1, 1), t$2706(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), tc(1), tg(1), td(1), t$2712(1, 1), t$2718(1, 1), qm(1), tm(1), um(1), vm(1), psur(1), ppc(1), ppl(1), t$2725(1, 1, 1), itype(1), dtc3x, mon(1), nmax, nmax, t$2731(1, 1), t$2737(1, 1), t$2743(1, 1), t$2750(1, 1, 1), t$2756(1, 1), t$2762(1, 1), t$2768(1, 1), t$2774(1, 1), t$2780(1, 1), t$2786(1, 1) )
  688.          _free( t$2787 )
  688.          _free( t$2781 )
  688.          _free( t$2775 )
  687.          _free( t$2769 )
  687.          _free( t$2763 )
  687.          _free( t$2757 )
  687.          _free( t$2751 )
  686.          _free( t$2744 )
  686.          _free( t$2738 )
  686.          _free( t$2732 )
  684.          _free( t$2726 )
  659.          $F_A123 = nmax
  659.          $I_L659_530 = 0
  659.          do
  659.             $I_L659_318 = 0
  659. !dir$ ivdep
  659.             do
  659.                w(1 + $I_L659_318, 1 + $I_L659_530) = t$2718(1 + $I_L659_318, 1 + $I_L659_530)
  659.                $I_L659_318 = 1 + $I_L659_318
  659.                if ( $I_L659_318 >= $F_A123 ) exit
  659.             enddo
  659.             $I_L659_530 = 1 + $I_L659_530
  659.             if ( $I_L659_530 >= 3 ) exit
  659.          enddo
  682.          _free( t$2719 )
  659.          $F_A124 = nmax
  659.          $I_L659_532 = 0
  659.          do
  659.             $I_L659_320 = 0
  659. !dir$ ivdep
  659.             do
  659.                capac(1 + $I_L659_320, 1 + $I_L659_532) = t$2712(1 + $I_L659_320, 1 + $I_L659_532)
  659.                $I_L659_320 = 1 + $I_L659_320
  659.                if ( $I_L659_320 >= $F_A124 ) exit
  659.             enddo
  659.             $I_L659_532 = 1 + $I_L659_532
  659.             if ( $I_L659_532 >= 2 ) exit
  659.          enddo
  682.          _free( t$2713 )
  680.          _free( t$2707 )
  659.          $F_A125 = nmax
  659.          $I_L659_630 = 0
  659.          do
  659.             $I_L659_602 = 0
  659.             do
  659.                $I_L659_534 = 0
  659.                do
  659.                   $I_L659_322 = 0
  659. !dir$ ivdep
  659.                   do
  659.                      extk(1 + $I_L659_322, 1 + $I_L659_534, 1 + $I_L659_602, 1 + $I_L659_630) = t$2698(1 + $I_L659_322, 1 + $I_L659_534, 1 + $I_L659_602, 1 + $I_L659_630)
  659.                      $I_L659_322 = 1 + $I_L659_322
  659.                      if ( $I_L659_322 >= $F_A125 ) exit
  659.                   enddo
  659.                   $I_L659_534 = 1 + $I_L659_534
  659.                   if ( $I_L659_534 >= 2 ) exit
  659.                enddo
  659.                $I_L659_602 = 1 + $I_L659_602
  659.                if ( $I_L659_602 >= 3 ) exit
  659.             enddo
  659.             $I_L659_630 = 1 + $I_L659_630
  659.             if ( $I_L659_630 >= 2 ) exit
  659.          enddo
  680.          _free( t$2699 )
  659.          $F_A126 = nmax
  659.          $I_L659_536 = 0
  659.          do
  659.             $I_L659_324 = 0
  659. !dir$ ivdep
  659.             do
  659.                stm(1 + $I_L659_324, 1 + $I_L659_536) = t$2690(1 + $I_L659_324, 1 + $I_L659_536)
  659.                $I_L659_324 = 1 + $I_L659_324
  659.                if ( $I_L659_324 >= $F_A126 ) exit
  659.             enddo
  659.             $I_L659_536 = 1 + $I_L659_536
  659.             if ( $I_L659_536 >= 2 ) exit
  659.          enddo
  679.          _free( t$2691 )
  659.          $F_A127 = nmax
  659.          $I_L659_538 = 0
  659.          do
  659.             $I_L659_326 = 0
  659. !dir$ ivdep
  659.             do
  659.                snow(1 + $I_L659_326, 1 + $I_L659_538) = t$2684(1 + $I_L659_326, 1 + $I_L659_538)
  659.                $I_L659_326 = 1 + $I_L659_326
  659.                if ( $I_L659_326 >= $F_A127 ) exit
  659.             enddo
  659.             $I_L659_538 = 1 + $I_L659_538
  659.             if ( $I_L659_538 >= 2 ) exit
  659.          enddo
  678.          _free( t$2685 )
  659.          $F_A128 = nmax
  659.          $I_L659_540 = 0
  659.          do
  659.             $I_L659_328 = 0
  659. !dir$ ivdep
  659.             do
  659.                satcap(1 + $I_L659_328, 1 + $I_L659_540) = t$2678(1 + $I_L659_328, 1 + $I_L659_540)
  659.                $I_L659_328 = 1 + $I_L659_328
  659.                if ( $I_L659_328 >= $F_A128 ) exit
  659.             enddo
  659.             $I_L659_540 = 1 + $I_L659_540
  659.             if ( $I_L659_540 >= 2 ) exit
  659.          enddo
  678.          _free( t$2679 )
  659.          $F_A129 = nmax
  659.          $I_L659_542 = 0
  659.          do
  659.             $I_L659_330 = 0
  659. !dir$ ivdep
  659.             do
  659.                phsoil(1 + $I_L659_330, 1 + $I_L659_542) = t$2672(1 + $I_L659_330, 1 + $I_L659_542)
  659.                $I_L659_330 = 1 + $I_L659_330
  659.                if ( $I_L659_330 >= $F_A129 ) exit
  659.             enddo
  659.             $I_L659_542 = 1 + $I_L659_542
  659.             if ( $I_L659_542 >= 3 ) exit
  659.          enddo
  677.          _free( t$2673 )
  659.          $F_A130 = nmax
  659.          $I_L659_544 = 0
  659.          do
  659.             $I_L659_332 = 0
  659. !dir$ ivdep
  659.             do
  659.                phroot(1 + $I_L659_332, 1 + $I_L659_544) = t$2666(1 + $I_L659_332, 1 + $I_L659_544)
  659.                $I_L659_332 = 1 + $I_L659_332
  659.                if ( $I_L659_332 >= $F_A130 ) exit
  659.             enddo
  659.             $I_L659_544 = 1 + $I_L659_544
  659.             if ( $I_L659_544 >= 2 ) exit
  659.          enddo
  677.          _free( t$2667 )
  659.          $F_A131 = nmax
  659.          $I_L659_546 = 0
  659.          do
  659.             $I_L659_334 = 0
  659. !dir$ ivdep
  659.             do
  659.                rst(1 + $I_L659_334, 1 + $I_L659_546) = t$2660(1 + $I_L659_334, 1 + $I_L659_546)
  659.                $I_L659_334 = 1 + $I_L659_334
  659.                if ( $I_L659_334 >= $F_A131 ) exit
  659.             enddo
  659.             $I_L659_546 = 1 + $I_L659_546
  659.             if ( $I_L659_546 >= 2 ) exit
  659.          enddo
  676.          _free( t$2661 )
  659.          $F_A132 = nmax
  659.          $I_L659_548 = 0
  659.          do
  659.             $I_L659_336 = 0
  659. !dir$ ivdep
  659.             do
  659.                pd(1 + $I_L659_336, 1 + $I_L659_548) = t$2654(1 + $I_L659_336, 1 + $I_L659_548)
  659.                $I_L659_336 = 1 + $I_L659_336
  659.                if ( $I_L659_336 >= $F_A132 ) exit
  659.             enddo
  659.             $I_L659_548 = 1 + $I_L659_548
  659.             if ( $I_L659_548 >= 2 ) exit
  659.          enddo
  676.          _free( t$2655 )
  659.          $F_A133 = nmax
  659.          $I_L659_550 = 0
  659.          do
  659.             $I_L659_338 = 0
  659. !dir$ ivdep
  659.             do
  659.                par(1 + $I_L659_338, 1 + $I_L659_550) = t$2648(1 + $I_L659_338, 1 + $I_L659_550)
  659.                $I_L659_338 = 1 + $I_L659_338
  659.                if ( $I_L659_338 >= $F_A133 ) exit
  659.             enddo
  659.             $I_L659_550 = 1 + $I_L659_550
  659.             if ( $I_L659_550 >= 2 ) exit
  659.          enddo
  676.          _free( t$2649 )
  659.          $F_A134 = nmax
  659.          $I_L659_552 = 0
  659.          do
  659.             $I_L659_340 = 0
  659. !dir$ ivdep
  659.             do
  659.                radt(1 + $I_L659_340, 1 + $I_L659_552) = t$2642(1 + $I_L659_340, 1 + $I_L659_552)
  659.                $I_L659_340 = 1 + $I_L659_340
  659.                if ( $I_L659_340 >= $F_A134 ) exit
  659.             enddo
  659.             $I_L659_552 = 1 + $I_L659_552
  659.             if ( $I_L659_552 >= 2 ) exit
  659.          enddo
  675.          _free( t$2643 )
  659.          $F_A135 = nmax
  659.          $I_L659_554 = 0
  659.          do
  659.             $I_L659_342 = 0
  659. !dir$ ivdep
  659.             do
  659.                gmu(1 + $I_L659_342, 1 + $I_L659_554) = t$2636(1 + $I_L659_342, 1 + $I_L659_554)
  659.                $I_L659_342 = 1 + $I_L659_342
  659.                if ( $I_L659_342 >= $F_A135 ) exit
  659.             enddo
  659.             $I_L659_554 = 1 + $I_L659_554
  659.             if ( $I_L659_554 >= 4 ) exit
  659.          enddo
  663.          _free( t$2637 )
  659.          $F_A136 = nmax
  659.          $I_L659_556 = 0
  659.          do
  659.             $I_L659_344 = 0
  659. !dir$ ivdep
  659.             do
  659.                gmq(1 + $I_L659_344, 1 + $I_L659_556) = t$2630(1 + $I_L659_344, 1 + $I_L659_556)
  659.                $I_L659_344 = 1 + $I_L659_344
  659.                if ( $I_L659_344 >= $F_A136 ) exit
  659.             enddo
  659.             $I_L659_556 = 1 + $I_L659_556
  659.             if ( $I_L659_556 >= 3 ) exit
  659.          enddo
  663.          _free( t$2631 )
  659.          $F_A137 = nmax
  659.          $I_L659_558 = 0
  659.          do
  659.             $I_L659_346 = 0
  659. !dir$ ivdep
  659.             do
  659.                gmt(1 + $I_L659_346, 1 + $I_L659_558) = t$2624(1 + $I_L659_346, 1 + $I_L659_558)
  659.                $I_L659_346 = 1 + $I_L659_346
  659.                if ( $I_L659_346 >= $F_A137 ) exit
  659.             enddo
  659.             $I_L659_558 = 1 + $I_L659_558
  659.             if ( $I_L659_558 >= 3 ) exit
  659.          enddo
  663.          _free( t$2625 )
  660.          _free( t$2619 )
  693.          $I_L693_130 = 0
  693. !dir$ ivdep
  693.          do
  696.             qm(1 + $I_L693_130) = max( 9.9999999999999998e-13, qm(1 + $I_L693_130) )
  697.             $I_L693_130 = 1 + $I_L693_130
  693.             if ( $I_L693_130 >= nmax ) exit
  693.          enddo
  693.       endif
  698.       call sextrp( td(1), tg(1), tc(1), w(1, 1), capac(1, 1), td0(1), tg0(1), tc0(1), w0(1, 1), capac0(1, 1), tdm(1), tgm(1), tcm(1), wm(1, 1), capacm(1, 1), istrt, ncols, nmax, epsflt, intg, latitu, tm0(1), qm0(1), tm(1), qm(1), tmm(1), qmm(1) )
  705.       if ( nmax > 0 ) then
  705.          $I_L705_132 = 0
  705. !dir$ ivdep
  705.          do
  706.             if ( ssib(1 + $I_L705_132) > 0.0 ) then
  708.                w0(1 + $I_L705_132, 1) = ssib(1 + $I_L705_132)
  709.                w0(1 + $I_L705_132, 2) = ssib(1 + $I_L705_132)
  710.                w0(1 + $I_L705_132, 3) = ssib(1 + $I_L705_132)
  711.                wm(1 + $I_L705_132, 1) = ssib(1 + $I_L705_132)
  712.                wm(1 + $I_L705_132, 2) = ssib(1 + $I_L705_132)
  713.                wm(1 + $I_L705_132, 3) = ssib(1 + $I_L705_132)
  707.                qm(1 + $I_L705_132) = max( 9.9999999999999998e-13, qm(1 + $I_L705_132) )
  707.             endif
  715.             $I_L705_132 = 1 + $I_L705_132
  714.             if ( $I_L705_132 >= nmax ) exit
  714.          enddo
  714.       endif
  716.       $ncount_S21 = 0
  717.       if ( ncols > 0 ) then
  717.          $I_L717_636 = 0
  717. !dir$ ivdep
  717.          do
  718.             if ( imask(1 + $I_L717_636) > 0 ) then
  719.                $ncount_S21 = 1 + $ncount_S21
  720.                tmtx(1 + $I_L717_636, 1, 3) = gmt($ncount_S21, 3)
  721.                qmtx(1 + $I_L717_636, 1, 3) = gmq($ncount_S21, 3)
  722.                umtx(1 + $I_L717_636, 1, 3) = gmu($ncount_S21, 3)
  723.                umtx(1 + $I_L717_636, 1, 4) = gmu($ncount_S21, 4)
  724.                tsea(1 + $I_L717_636) = tgeff($ncount_S21)
  725.                z0x($ncount_S21) = z0($ncount_S21)
  725.             endif
  727.             $I_L717_636 = 1 + $I_L717_636
  726.             if ( $I_L717_636 >= ncols ) exit
  726.          enddo
  733.          $I_L733_638 = 0
  733. !dir$ ivdep
  733.          do
  734.             if ( mskant(1 + $I_L733_638) == 1 ) then
  735.                xsea(1 + $I_L733_638) = tseam(1 + $I_L733_638)
  736.                tsfc(1 + $I_L733_638) = tsfcm(1 + $I_L733_638)
  737.                qsfc(1 + $I_L733_638) = qsfcm(1 + $I_L733_638)
  737.             endif
  739.             $I_L733_638 = 1 + $I_L733_638
  738.             if ( $I_L733_638 >= ncols ) exit
  738.          enddo
  738.       endif
  742.       t$2801 = ( max( 0, ncols ) )
  742.       t$2802 = ( max( 0, kmax ) )
  742.       t$2807 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, ncols ) ) ) * max( 0, ( max( 0, kmax ) ) ) ) ), 8 )
  742.       $F_A138 = kmax
  742.       $F_A139 = ncols
  742.       if ( and( -$F_A139, -$F_A138 ) < 0 ) then
  742.          $I_L742_668 = 0
  742.          do
  742.             $I_L742_656 = 0
  742.             do
  742.                $I_L742_642 = 0
  742. !dir$ ivdep
  742.                do
  742.                   t$2806(1 + $I_L742_642, 1 + $I_L742_656, 1 + $I_L742_668) = tmtx(1 + $I_L742_642, 1 + $I_L742_656, 1 + $I_L742_668)
  742.                   $I_L742_642 = 1 + $I_L742_642
  742.                   if ( $I_L742_642 >= $F_A139 ) exit
  742.                enddo
  742.                $I_L742_656 = 1 + $I_L742_656
  742.                if ( $I_L742_656 >= $F_A138 ) exit
  742.             enddo
  742.             $I_L742_668 = 1 + $I_L742_668
  742.             if ( $I_L742_668 >= 3 ) exit
  742.          enddo
  742.       endif
  742.       t$2809 = ( max( 0, ncols ) )
  742.       t$2810 = ( max( 0, kmax ) )
  742.       t$2815 = int( _alloc( max( 0, 32 * max( 0, ( max( 0, ncols ) ) ) * max( 0, ( max( 0, kmax ) ) ) ) ), 8 )
  742.       $F_A140 = kmax
  742.       $F_A141 = ncols
  742.       if ( and( -$F_A141, -$F_A140 ) < 0 ) then
  742.          $I_L742_670 = 0
  742.          do
  742.             $I_L742_658 = 0
  742.             do
  742.                $I_L742_644 = 0
  742. !dir$ ivdep
  742.                do
  742.                   t$2814(1 + $I_L742_644, 1 + $I_L742_658, 1 + $I_L742_670) = umtx(1 + $I_L742_644, 1 + $I_L742_658, 1 + $I_L742_670)
  742.                   $I_L742_644 = 1 + $I_L742_644
  742.                   if ( $I_L742_644 >= $F_A141 ) exit
  742.                enddo
  742.                $I_L742_658 = 1 + $I_L742_658
  742.                if ( $I_L742_658 >= $F_A140 ) exit
  742.             enddo
  742.             $I_L742_670 = 1 + $I_L742_670
  742.             if ( $I_L742_670 >= 4 ) exit
  742.          enddo
  742.       endif
  742.       t$2817 = ( max( 0, ncols ) )
  742.       t$2818 = ( max( 0, kmax ) )
  742.       t$2823 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, ncols ) ) ) * max( 0, ( max( 0, kmax ) ) ) ) ), 8 )
  742.       $F_A142 = kmax
  742.       $F_A143 = ncols
  742.       if ( and( -$F_A143, -$F_A142 ) < 0 ) then
  742.          $I_L742_672 = 0
  742.          do
  742.             $I_L742_660 = 0
  742.             do
  742.                $I_L742_646 = 0
  742. !dir$ ivdep
  742.                do
  742.                   t$2822(1 + $I_L742_646, 1 + $I_L742_660, 1 + $I_L742_672) = qmtx(1 + $I_L742_646, 1 + $I_L742_660, 1 + $I_L742_672)
  742.                   $I_L742_646 = 1 + $I_L742_646
  742.                   if ( $I_L742_646 >= $F_A143 ) exit
  742.                enddo
  742.                $I_L742_660 = 1 + $I_L742_660
  742.                if ( $I_L742_660 >= $F_A142 ) exit
  742.             enddo
  742.             $I_L742_672 = 1 + $I_L742_672
  742.             if ( $I_L742_672 >= 3 ) exit
  742.          enddo
  742.       endif
  747.       t$2824 = ( max( 0, ncols ) )
  747.       t$2827 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  747.       $F_A144 = ncols
  747.       if ( ncols > 0 ) then
  747.          $I_L747_648 = 0
  747. !dir$ ivdep
  747.          do
  747.             t$2826(1 + $I_L747_648) = sin( colrad(1 + $I_L747_648) )
  747.             $I_L747_648 = 1 + $I_L747_648
  747.             if ( $I_L747_648 >= $F_A144 ) exit
  747.          enddo
  747.       endif
  741.       call seasfc( t$2806(1, 1, 1), t$2814(1, 1, 1), t$2822(1, 1, 1), kmax, kmax, slrad(1), tsurf(1), qsurf(1), gu(1, 1), gv(1, 1), gt(1, 1), gq(1, 1), gps(1), xsea(1), dtc3x, t$2826(1), sigki(1), delsig(1), sens(1), evap(1), umom(1), vmom(1), rmi(1), rhi(1), cond(1), stor(1), zorl(1), ncols, speedm(1), ustarm(1), z0sea(1), rho(1), qsfc(1), tsfc(1), mskant(1) )
  747.       _free( t$2827 )
  741.       $F_A145 = kmax
  741.       $F_A146 = ncols
  741.       if ( and( -$F_A146, -$F_A145 ) < 0 ) then
  741.          $I_L741_674 = 0
  741.          do
  741.             $I_L741_662 = 0
  741.             do
  741.                $I_L741_650 = 0
  741. !dir$ ivdep
  741.                do
  741.                   qmtx(1 + $I_L741_650, 1 + $I_L741_662, 1 + $I_L741_674) = t$2822(1 + $I_L741_650, 1 + $I_L741_662, 1 + $I_L741_674)
  741.                   $I_L741_650 = 1 + $I_L741_650
  741.                   if ( $I_L741_650 >= $F_A146 ) exit
  741.                enddo
  741.                $I_L741_662 = 1 + $I_L741_662
  741.                if ( $I_L741_662 >= $F_A145 ) exit
  741.             enddo
  741.             $I_L741_674 = 1 + $I_L741_674
  741.             if ( $I_L741_674 >= 3 ) exit
  741.          enddo
  741.       endif
  742.       _free( t$2823 )
  741.       $F_A147 = kmax
  741.       $F_A148 = ncols
  741.       if ( and( -$F_A148, -$F_A147 ) < 0 ) then
  741.          $I_L741_676 = 0
  741.          do
  741.             $I_L741_664 = 0
  741.             do
  741.                $I_L741_652 = 0
  741. !dir$ ivdep
  741.                do
  741.                   umtx(1 + $I_L741_652, 1 + $I_L741_664, 1 + $I_L741_676) = t$2814(1 + $I_L741_652, 1 + $I_L741_664, 1 + $I_L741_676)
  741.                   $I_L741_652 = 1 + $I_L741_652
  741.                   if ( $I_L741_652 >= $F_A148 ) exit
  741.                enddo
  741.                $I_L741_664 = 1 + $I_L741_664
  741.                if ( $I_L741_664 >= $F_A147 ) exit
  741.             enddo
  741.             $I_L741_676 = 1 + $I_L741_676
  741.             if ( $I_L741_676 >= 4 ) exit
  741.          enddo
  741.       endif
  742.       _free( t$2815 )
  741.       $F_A149 = kmax
  741.       $F_A150 = ncols
  741.       if ( and( -$F_A150, -$F_A149 ) < 0 ) then
  741.          $I_L741_678 = 0
  741.          do
  741.             $I_L741_666 = 0
  741.             do
  741.                $I_L741_654 = 0
  741. !dir$ ivdep
  741.                do
  741.                   tmtx(1 + $I_L741_654, 1 + $I_L741_666, 1 + $I_L741_678) = t$2806(1 + $I_L741_654, 1 + $I_L741_666, 1 + $I_L741_678)
  741.                   $I_L741_654 = 1 + $I_L741_654
  741.                   if ( $I_L741_654 >= $F_A150 ) exit
  741.                enddo
  741.                $I_L741_666 = 1 + $I_L741_666
  741.                if ( $I_L741_666 >= $F_A149 ) exit
  741.             enddo
  741.             $I_L741_678 = 1 + $I_L741_678
  741.             if ( $I_L741_678 >= 3 ) exit
  741.          enddo
  741.       endif
  742.       _free( t$2807 )
  755.       if ( ncols > 0 ) then
  755.          $I_L755_640 = 0
  755. !dir$ ivdep
  755.          do
  756.             if ( mskant(1 + $I_L755_640) == 1 ) then
  756.                if ( tsea(1 + $I_L755_640) <= 0.0 ) then
  756.                   if ( tsurf(1 + $I_L755_640) < 271.17000000000002 ) then
  757.                      if ( intg == 2 ) then
  758.                         if ( istrt == 0 ) then
  760.                            $qsfc_WR0_R1 = max( 9.9999999999999998e-13, qsfc(1 + $I_L755_640) )
  760.                            qsfc(1 + $I_L755_640) = $qsfc_WR0_R1
  762.                            qsfcm(1 + $I_L755_640) = epsflt * ( $qsfc_WR0_R1 + qsfcm(1 + $I_L755_640) ) + filta * qsfc0(1 + $I_L755_640)
  761.                            tsfcm(1 + $I_L755_640) = epsflt * ( tsfcm(1 + $I_L755_640) + tsfc(1 + $I_L755_640) ) + filta * tsfc0(1 + $I_L755_640)
  759.                            tseam(1 + $I_L755_640) = epsflt * ( tseam(1 + $I_L755_640) + xsea(1 + $I_L755_640) ) + filta * tsea(1 + $I_L755_640)
  759.                         endif
  764.                         tsea(1 + $I_L755_640) = xsea(1 + $I_L755_640)
  766.                         tsfc0(1 + $I_L755_640) = tsfc(1 + $I_L755_640)
  765.                         $qsfc_WR0_R1 = max( 9.9999999999999998e-13, qsfc(1 + $I_L755_640) )
  765.                         qsfc(1 + $I_L755_640) = $qsfc_WR0_R1
  767.                         qsfc0(1 + $I_L755_640) = $qsfc_WR0_R1
  767.                      else
  769.                         tsea(1 + $I_L755_640) = xsea(1 + $I_L755_640)
  770.                         tseam(1 + $I_L755_640) = xsea(1 + $I_L755_640)
  772.                         tsfc0(1 + $I_L755_640) = tsfc(1 + $I_L755_640)
  771.                         $qsfc_WR0_R2 = max( 9.9999999999999998e-13, qsfc(1 + $I_L755_640) )
  771.                         qsfc(1 + $I_L755_640) = $qsfc_WR0_R2
  773.                         qsfc0(1 + $I_L755_640) = $qsfc_WR0_R2
  774.                         tsfcm(1 + $I_L755_640) = tsfc(1 + $I_L755_640)
  775.                         qsfcm(1 + $I_L755_640) = $qsfc_WR0_R2
  775.                      endif
  775.                   endif
  775.                endif
  778.                if ( tsea(1 + $I_L755_640) < 0.0 ) then
  778.                   if ( tsurf(1 + $I_L755_640) >= 271.17000000000002 ) then
  779.                      tseam(1 + $I_L755_640) = tsea(1 + $I_L755_640)
  780.                      tsfcm(1 + $I_L755_640) = tsfc0(1 + $I_L755_640)
  781.                      qsfcm(1 + $I_L755_640) = qsfc0(1 + $I_L755_640)
  781.                   endif
  781.                endif
  781.             endif
  783.             $I_L755_640 = 1 + $I_L755_640
  782.             if ( $I_L755_640 >= ncols ) exit
  782.          enddo
  782.       endif
  208.       _free( t$1477 )
  785.       return
  785.       end
  785.       
  787.       
  787.       subroutine copysurfacedata( itype, mon, colrad2, xday, idatec, nsx, ncols, nmax, latitu )
  787.       t$215 = ncols
  791.       t$1528 = _zla( 0, ncols )
  798.       $F_A33 = xcover%dim_3%EX
  798.       $F_A34 = xcover%dim_2%EX
  798.       $F_A35 = xcover%dim_1%EX
  798.       if ( and( and( -$F_A34, -$F_A33 ), -$F_A35 ) < 0 ) then
  798.          $SC_xcover_fixed_I267 = xcover_fixed%dim_1%LB
  798.          $SC_xcover_fixed_I269 = xcover_fixed%dim_2%SM
  798.          $SC_xcover_fixed_I270 = xcover_fixed%dim_2%LB
  798.          $SC_xcover_fixed_I272 = xcover_fixed%dim_3%SM
  798.          $SC_xcover_fixed_I273 = xcover_fixed%dim_3%LB
  798.          $SC_xcover_I266 = xcover%dim_1%EX
  798.          $SC_xcover_I274 = xcover%dim_1%LB
  798.          $SC_xcover_I275 = xcover%dim_2%SM
  798.          $SC_xcover_I268 = xcover%dim_2%EX
  798.          $SC_xcover_I276 = xcover%dim_2%LB
  798.          $SC_xcover_I277 = xcover%dim_3%SM
  798.          $SC_xcover_I271 = xcover%dim_3%EX
  798.          $SC_xcover_I278 = xcover%dim_3%LB
  798.          $I_L798_84 = 0
  798.          do
  798.             $I_L798_62 = 0
  798.             do
  798.                $I_L798_38 = 0
  798. !dir$ ivdep
  798. !dir$ loop_info (automatic) cache_nt( xcover )
  798.                do
  798.                   (xcover%base_addr)($SC_xcover_I274 + $I_L798_38, $SC_xcover_I276 + $I_L798_62, $SC_xcover_I278 + $I_L798_84, 0) = (xcover_fixed%base_addr)($SC_xcover_fixed_I267 + $I_L798_38, $SC_xcover_fixed_I270 + $I_L798_62, $SC_xcover_fixed_I273 + $I_L798_84, 0)
  798.                   $I_L798_38 = 1 + $I_L798_38
  798.                   if ( $I_L798_38 >= $F_A35 ) exit
  798.                enddo
  798.                $I_L798_62 = 1 + $I_L798_62
  798.                if ( $I_L798_62 >= $F_A34 ) exit
  798.             enddo
  798.             $I_L798_84 = 1 + $I_L798_84
  798.             if ( $I_L798_84 >= $F_A33 ) exit
  798.          enddo
  798.       endif
  799.       $F_A36 = zlt%dim_3%EX
  799.       $F_A37 = zlt%dim_2%EX
  799.       $F_A38 = zlt%dim_1%EX
  799.       if ( and( and( -$F_A37, -$F_A36 ), -$F_A38 ) < 0 ) then
  799.          $SC_zlt_fixed_I280 = zlt_fixed%dim_1%LB
  799.          $SC_zlt_fixed_I282 = zlt_fixed%dim_2%SM
  799.          $SC_zlt_fixed_I283 = zlt_fixed%dim_2%LB
  799.          $SC_zlt_fixed_I285 = zlt_fixed%dim_3%SM
  799.          $SC_zlt_fixed_I286 = zlt_fixed%dim_3%LB
  799.          $SC_zlt_I279 = zlt%dim_1%EX
  799.          $SC_zlt_I287 = zlt%dim_1%LB
  799.          $SC_zlt_I288 = zlt%dim_2%SM
  799.          $SC_zlt_I281 = zlt%dim_2%EX
  799.          $SC_zlt_I289 = zlt%dim_2%LB
  799.          $SC_zlt_I290 = zlt%dim_3%SM
  799.          $SC_zlt_I284 = zlt%dim_3%EX
  799.          $SC_zlt_I291 = zlt%dim_3%LB
  799.          $I_L799_86 = 0
  799.          do
  799.             $I_L799_64 = 0
  799.             do
  799.                $I_L799_40 = 0
  799. !dir$ ivdep
  799. !dir$ loop_info (automatic) cache_nt( zlt )
  799.                do
  799.                   (zlt%base_addr)($SC_zlt_I287 + $I_L799_40, $SC_zlt_I289 + $I_L799_64, $SC_zlt_I291 + $I_L799_86, 0) = (zlt_fixed%base_addr)($SC_zlt_fixed_I280 + $I_L799_40, $SC_zlt_fixed_I283 + $I_L799_64, $SC_zlt_fixed_I286 + $I_L799_86, 0)
  799.                   $I_L799_40 = 1 + $I_L799_40
  799.                   if ( $I_L799_40 >= $F_A38 ) exit
  799.                enddo
  799.                $I_L799_64 = 1 + $I_L799_64
  799.                if ( $I_L799_64 >= $F_A37 ) exit
  799.             enddo
  799.             $I_L799_86 = 1 + $I_L799_86
  799.             if ( $I_L799_86 >= $F_A36 ) exit
  799.          enddo
  799.       endif
  800.       $F_A39 = green%dim_3%EX
  800.       $F_A40 = green%dim_2%EX
  800.       $F_A41 = green%dim_1%EX
  800.       if ( and( and( -$F_A40, -$F_A39 ), -$F_A41 ) < 0 ) then
  800.          $SC_green_fixed_I293 = green_fixed%dim_1%LB
  800.          $SC_green_fixed_I295 = green_fixed%dim_2%SM
  800.          $SC_green_fixed_I296 = green_fixed%dim_2%LB
  800.          $SC_green_fixed_I298 = green_fixed%dim_3%SM
  800.          $SC_green_fixed_I299 = green_fixed%dim_3%LB
  800.          $SC_green_I292 = green%dim_1%EX
  800.          $SC_green_I300 = green%dim_1%LB
  800.          $SC_green_I301 = green%dim_2%SM
  800.          $SC_green_I294 = green%dim_2%EX
  800.          $SC_green_I302 = green%dim_2%LB
  800.          $SC_green_I303 = green%dim_3%SM
  800.          $SC_green_I297 = green%dim_3%EX
  800.          $SC_green_I304 = green%dim_3%LB
  800.          $I_L800_88 = 0
  800.          do
  800.             $I_L800_66 = 0
  800.             do
  800.                $I_L800_42 = 0
  800. !dir$ ivdep
  800. !dir$ loop_info (automatic) cache_nt( green )
  800.                do
  800.                   (green%base_addr)($SC_green_I300 + $I_L800_42, $SC_green_I302 + $I_L800_66, $SC_green_I304 + $I_L800_88, 0) = (green_fixed%base_addr)($SC_green_fixed_I293 + $I_L800_42, $SC_green_fixed_I296 + $I_L800_66, $SC_green_fixed_I299 + $I_L800_88, 0)
  800.                   $I_L800_42 = 1 + $I_L800_42
  800.                   if ( $I_L800_42 >= $F_A41 ) exit
  800.                enddo
  800.                $I_L800_66 = 1 + $I_L800_66
  800.                if ( $I_L800_66 >= $F_A40 ) exit
  800.             enddo
  800.             $I_L800_88 = 1 + $I_L800_88
  800.             if ( $I_L800_88 >= $F_A39 ) exit
  800.          enddo
  800.       endif
  801.       $F_A42 = ph2%dim_2%EX
  801.       $F_A43 = ph2%dim_1%EX
  801.       if ( and( -$F_A43, -$F_A42 ) < 0 ) then
  801.          $SC_ph2_fixed_I306 = ph2_fixed%dim_1%LB
  801.          $SC_ph2_fixed_I308 = ph2_fixed%dim_2%SM
  801.          $SC_ph2_fixed_I309 = ph2_fixed%dim_2%LB
  801.          $SC_ph2_I305 = ph2%dim_1%EX
  801.          $SC_ph2_I310 = ph2%dim_1%LB
  801.          $SC_ph2_I311 = ph2%dim_2%SM
  801.          $SC_ph2_I307 = ph2%dim_2%EX
  801.          $SC_ph2_I312 = ph2%dim_2%LB
  801.          $I_L801_68 = 0
  801.          do
  801.             $I_L801_44 = 0
  801. !dir$ ivdep
  801.             do
  801.                (ph2%base_addr)($SC_ph2_I310 + $I_L801_44, $SC_ph2_I312 + $I_L801_68, 0) = (ph2_fixed%base_addr)($SC_ph2_fixed_I306 + $I_L801_44, $SC_ph2_fixed_I309 + $I_L801_68, 0)
  801.                $I_L801_44 = 1 + $I_L801_44
  801.                if ( $I_L801_44 >= $F_A43 ) exit
  801.             enddo
  801.             $I_L801_68 = 1 + $I_L801_68
  801.             if ( $I_L801_68 >= $F_A42 ) exit
  801.          enddo
  801.       endif
  802.       $F_A44 = ph1%dim_2%EX
  802.       $F_A45 = ph1%dim_1%EX
  802.       if ( and( -$F_A45, -$F_A44 ) < 0 ) then
  802.          $SC_ph1_fixed_I314 = ph1_fixed%dim_1%LB
  802.          $SC_ph1_fixed_I316 = ph1_fixed%dim_2%SM
  802.          $SC_ph1_fixed_I317 = ph1_fixed%dim_2%LB
  802.          $SC_ph1_I313 = ph1%dim_1%EX
  802.          $SC_ph1_I318 = ph1%dim_1%LB
  802.          $SC_ph1_I319 = ph1%dim_2%SM
  802.          $SC_ph1_I315 = ph1%dim_2%EX
  802.          $SC_ph1_I320 = ph1%dim_2%LB
  802.          $I_L802_70 = 0
  802.          do
  802.             $I_L802_46 = 0
  802. !dir$ ivdep
  802.             do
  802.                (ph1%base_addr)($SC_ph1_I318 + $I_L802_46, $SC_ph1_I320 + $I_L802_70, 0) = (ph1_fixed%base_addr)($SC_ph1_fixed_I314 + $I_L802_46, $SC_ph1_fixed_I317 + $I_L802_70, 0)
  802.                $I_L802_46 = 1 + $I_L802_46
  802.                if ( $I_L802_46 >= $F_A45 ) exit
  802.             enddo
  802.             $I_L802_70 = 1 + $I_L802_70
  802.             if ( $I_L802_70 >= $F_A44 ) exit
  802.          enddo
  802.       endif
  803.       $F_A46 = defac%dim_2%EX
  803.       $F_A47 = defac%dim_1%EX
  803.       if ( and( -$F_A47, -$F_A46 ) < 0 ) then
  803.          $SC_defac_fixed_I322 = defac_fixed%dim_1%LB
  803.          $SC_defac_fixed_I324 = defac_fixed%dim_2%SM
  803.          $SC_defac_fixed_I325 = defac_fixed%dim_2%LB
  803.          $SC_defac_I321 = defac%dim_1%EX
  803.          $SC_defac_I326 = defac%dim_1%LB
  803.          $SC_defac_I327 = defac%dim_2%SM
  803.          $SC_defac_I323 = defac%dim_2%EX
  803.          $SC_defac_I328 = defac%dim_2%LB
  803.          $I_L803_72 = 0
  803.          do
  803.             $I_L803_48 = 0
  803. !dir$ ivdep
  803.             do
  803.                (defac%base_addr)($SC_defac_I326 + $I_L803_48, $SC_defac_I328 + $I_L803_72, 0) = (defac_fixed%base_addr)($SC_defac_fixed_I322 + $I_L803_48, $SC_defac_fixed_I325 + $I_L803_72, 0)
  803.                $I_L803_48 = 1 + $I_L803_48
  803.                if ( $I_L803_48 >= $F_A47 ) exit
  803.             enddo
  803.             $I_L803_72 = 1 + $I_L803_72
  803.             if ( $I_L803_72 >= $F_A46 ) exit
  803.          enddo
  803.       endif
  804.       $F_A48 = tu%dim_2%EX
  804.       $F_A49 = tu%dim_1%EX
  804.       if ( and( -$F_A49, -$F_A48 ) < 0 ) then
  804.          $SC_tu_fixed_I330 = tu_fixed%dim_1%LB
  804.          $SC_tu_fixed_I332 = tu_fixed%dim_2%SM
  804.          $SC_tu_fixed_I333 = tu_fixed%dim_2%LB
  804.          $SC_tu_I329 = tu%dim_1%EX
  804.          $SC_tu_I334 = tu%dim_1%LB
  804.          $SC_tu_I335 = tu%dim_2%SM
  804.          $SC_tu_I331 = tu%dim_2%EX
  804.          $SC_tu_I336 = tu%dim_2%LB
  804.          $I_L804_74 = 0
  804.          do
  804.             $I_L804_50 = 0
  804. !dir$ ivdep
  804.             do
  804.                (tu%base_addr)($SC_tu_I334 + $I_L804_50, $SC_tu_I336 + $I_L804_74, 0) = (tu_fixed%base_addr)($SC_tu_fixed_I330 + $I_L804_50, $SC_tu_fixed_I333 + $I_L804_74, 0)
  804.                $I_L804_50 = 1 + $I_L804_50
  804.                if ( $I_L804_50 >= $F_A49 ) exit
  804.             enddo
  804.             $I_L804_74 = 1 + $I_L804_74
  804.             if ( $I_L804_74 >= $F_A48 ) exit
  804.          enddo
  804.       endif
  805.       $F_A50 = tll%dim_2%EX
  805.       $F_A51 = tll%dim_1%EX
  805.       if ( and( -$F_A51, -$F_A50 ) < 0 ) then
  805.          $SC_tll_fixed_I338 = tll_fixed%dim_1%LB
  805.          $SC_tll_fixed_I340 = tll_fixed%dim_2%SM
  805.          $SC_tll_fixed_I341 = tll_fixed%dim_2%LB
  805.          $SC_tll_I337 = tll%dim_1%EX
  805.          $SC_tll_I342 = tll%dim_1%LB
  805.          $SC_tll_I343 = tll%dim_2%SM
  805.          $SC_tll_I339 = tll%dim_2%EX
  805.          $SC_tll_I344 = tll%dim_2%LB
  805.          $I_L805_76 = 0
  805.          do
  805.             $I_L805_52 = 0
  805. !dir$ ivdep
  805.             do
  805.                (tll%base_addr)($SC_tll_I342 + $I_L805_52, $SC_tll_I344 + $I_L805_76, 0) = (tll_fixed%base_addr)($SC_tll_fixed_I338 + $I_L805_52, $SC_tll_fixed_I341 + $I_L805_76, 0)
  805.                $I_L805_52 = 1 + $I_L805_52
  805.                if ( $I_L805_52 >= $F_A51 ) exit
  805.             enddo
  805.             $I_L805_76 = 1 + $I_L805_76
  805.             if ( $I_L805_76 >= $F_A50 ) exit
  805.          enddo
  805.       endif
  806.       $F_A52 = topt%dim_2%EX
  806.       $F_A53 = topt%dim_1%EX
  806.       if ( and( -$F_A53, -$F_A52 ) < 0 ) then
  806.          $SC_topt_fixed_I346 = topt_fixed%dim_1%LB
  806.          $SC_topt_fixed_I348 = topt_fixed%dim_2%SM
  806.          $SC_topt_fixed_I349 = topt_fixed%dim_2%LB
  806.          $SC_topt_I345 = topt%dim_1%EX
  806.          $SC_topt_I350 = topt%dim_1%LB
  806.          $SC_topt_I351 = topt%dim_2%SM
  806.          $SC_topt_I347 = topt%dim_2%EX
  806.          $SC_topt_I352 = topt%dim_2%LB
  806.          $I_L806_78 = 0
  806.          do
  806.             $I_L806_54 = 0
  806. !dir$ ivdep
  806.             do
  806.                (topt%base_addr)($SC_topt_I350 + $I_L806_54, $SC_topt_I352 + $I_L806_78, 0) = (topt_fixed%base_addr)($SC_topt_fixed_I346 + $I_L806_54, $SC_topt_fixed_I349 + $I_L806_78, 0)
  806.                $I_L806_54 = 1 + $I_L806_54
  806.                if ( $I_L806_54 >= $F_A53 ) exit
  806.             enddo
  806.             $I_L806_78 = 1 + $I_L806_78
  806.             if ( $I_L806_78 >= $F_A52 ) exit
  806.          enddo
  806.       endif
  807.       $F_A54 = rstpar%dim_3%EX
  807.       $F_A55 = rstpar%dim_2%EX
  807.       $F_A56 = rstpar%dim_1%EX
  807.       if ( and( and( -$F_A55, -$F_A54 ), -$F_A56 ) < 0 ) then
  807.          $SC_rstpar_fixed_I354 = rstpar_fixed%dim_1%LB
  807.          $SC_rstpar_fixed_I356 = rstpar_fixed%dim_2%SM
  807.          $SC_rstpar_fixed_I357 = rstpar_fixed%dim_2%LB
  807.          $SC_rstpar_fixed_I359 = rstpar_fixed%dim_3%SM
  807.          $SC_rstpar_fixed_I360 = rstpar_fixed%dim_3%LB
  807.          $SC_rstpar_I353 = rstpar%dim_1%EX
  807.          $SC_rstpar_I361 = rstpar%dim_1%LB
  807.          $SC_rstpar_I362 = rstpar%dim_2%SM
  807.          $SC_rstpar_I355 = rstpar%dim_2%EX
  807.          $SC_rstpar_I363 = rstpar%dim_2%LB
  807.          $SC_rstpar_I364 = rstpar%dim_3%SM
  807.          $SC_rstpar_I358 = rstpar%dim_3%EX
  807.          $SC_rstpar_I365 = rstpar%dim_3%LB
  807.          $I_L807_90 = 0
  807.          do
  807.             $I_L807_80 = 0
  807.             do
  807.                $I_L807_56 = 0
  807. !dir$ ivdep
  807. !dir$ loop_info (automatic) cache_nt( rstpar )
  807.                do
  807.                   (rstpar%base_addr)($SC_rstpar_I361 + $I_L807_56, $SC_rstpar_I363 + $I_L807_80, $SC_rstpar_I365 + $I_L807_90, 0) = (rstpar_fixed%base_addr)($SC_rstpar_fixed_I354 + $I_L807_56, $SC_rstpar_fixed_I357 + $I_L807_80, $SC_rstpar_fixed_I360 + $I_L807_90, 0)
  807.                   $I_L807_56 = 1 + $I_L807_56
  807.                   if ( $I_L807_56 >= $F_A56 ) exit
  807.                enddo
  807.                $I_L807_80 = 1 + $I_L807_80
  807.                if ( $I_L807_80 >= $F_A55 ) exit
  807.             enddo
  807.             $I_L807_90 = 1 + $I_L807_90
  807.             if ( $I_L807_90 >= $F_A54 ) exit
  807.          enddo
  807.       endif
  808.       $F_A57 = chil%dim_2%EX
  808.       $F_A58 = chil%dim_1%EX
  808.       if ( and( -$F_A58, -$F_A57 ) < 0 ) then
  808.          $SC_chil_fixed_I367 = chil_fixed%dim_1%LB
  808.          $SC_chil_fixed_I369 = chil_fixed%dim_2%SM
  808.          $SC_chil_fixed_I370 = chil_fixed%dim_2%LB
  808.          $SC_chil_I366 = chil%dim_1%EX
  808.          $SC_chil_I371 = chil%dim_1%LB
  808.          $SC_chil_I372 = chil%dim_2%SM
  808.          $SC_chil_I368 = chil%dim_2%EX
  808.          $SC_chil_I373 = chil%dim_2%LB
  808.          $I_L808_82 = 0
  808.          do
  808.             $I_L808_58 = 0
  808. !dir$ ivdep
  808.             do
  808.                (chil%base_addr)($SC_chil_I371 + $I_L808_58, $SC_chil_I373 + $I_L808_82, 0) = (chil_fixed%base_addr)($SC_chil_fixed_I367 + $I_L808_58, $SC_chil_fixed_I370 + $I_L808_82, 0)
  808.                $I_L808_58 = 1 + $I_L808_58
  808.                if ( $I_L808_58 >= $F_A58 ) exit
  808.             enddo
  808.             $I_L808_82 = 1 + $I_L808_82
  808.             if ( $I_L808_82 >= $F_A57 ) exit
  808.          enddo
  808.       endif
  813.       $SC_green_gbl_I40 = green_gbl%dim_1%EX
  813.       $SC_green_gbl_I41 = green_gbl%dim_1%LB
  813.       $SC_green_gbl_I43 = green_gbl%dim_2%SM
  813.       $SC_green_gbl_I42 = green_gbl%dim_2%EX
  813.       $SC_green_gbl_I44 = green_gbl%dim_2%LB
  813.       $SC_green_gbl_I46 = green_gbl%dim_3%SM
  813.       $SC_green_gbl_I45 = green_gbl%dim_3%EX
  813.       $SC_green_gbl_I47 = green_gbl%dim_3%LB
  812.       $SC_zlt_gbl_I24 = zlt_gbl%dim_1%EX
  812.       $SC_zlt_gbl_I25 = zlt_gbl%dim_1%LB
  812.       $SC_zlt_gbl_I27 = zlt_gbl%dim_2%SM
  812.       $SC_zlt_gbl_I26 = zlt_gbl%dim_2%EX
  812.       $SC_zlt_gbl_I28 = zlt_gbl%dim_2%LB
  812.       $SC_zlt_gbl_I30 = zlt_gbl%dim_3%SM
  812.       $SC_zlt_gbl_I29 = zlt_gbl%dim_3%EX
  812.       $SC_zlt_gbl_I31 = zlt_gbl%dim_3%LB
  811.       $SC_vcover_gbl_I8 = vcover_gbl%dim_1%EX
  811.       $SC_vcover_gbl_I9 = vcover_gbl%dim_1%LB
  811.       $SC_vcover_gbl_I11 = vcover_gbl%dim_2%SM
  811.       $SC_vcover_gbl_I10 = vcover_gbl%dim_2%EX
  811.       $SC_vcover_gbl_I12 = vcover_gbl%dim_2%LB
  811.       $SC_vcover_gbl_I14 = vcover_gbl%dim_3%SM
  811.       $SC_vcover_gbl_I13 = vcover_gbl%dim_3%EX
  811.       $SC_vcover_gbl_I15 = vcover_gbl%dim_3%LB
  813.       $SC_green_fixed_I32 = green_fixed%dim_1%EX
  813.       $SC_green_fixed_I33 = green_fixed%dim_1%LB
  813.       $SC_green_fixed_I35 = green_fixed%dim_2%SM
  813.       $SC_green_fixed_I34 = green_fixed%dim_2%EX
  813.       $SC_green_fixed_I36 = green_fixed%dim_2%LB
  813.       $SC_green_fixed_I38 = green_fixed%dim_3%SM
  813.       $SC_green_fixed_I37 = green_fixed%dim_3%EX
  813.       $SC_green_fixed_I39 = green_fixed%dim_3%LB
  812.       $SC_zlt_fixed_I16 = zlt_fixed%dim_1%EX
  812.       $SC_zlt_fixed_I17 = zlt_fixed%dim_1%LB
  812.       $SC_zlt_fixed_I19 = zlt_fixed%dim_2%SM
  812.       $SC_zlt_fixed_I18 = zlt_fixed%dim_2%EX
  812.       $SC_zlt_fixed_I20 = zlt_fixed%dim_2%LB
  812.       $SC_zlt_fixed_I22 = zlt_fixed%dim_3%SM
  812.       $SC_zlt_fixed_I21 = zlt_fixed%dim_3%EX
  812.       $SC_zlt_fixed_I23 = zlt_fixed%dim_3%LB
  811.       $SC_xcover_fixed_I0 = xcover_fixed%dim_1%EX
  811.       $SC_xcover_fixed_I1 = xcover_fixed%dim_1%LB
  811.       $SC_xcover_fixed_I3 = xcover_fixed%dim_2%SM
  811.       $SC_xcover_fixed_I2 = xcover_fixed%dim_2%EX
  811.       $SC_xcover_fixed_I4 = xcover_fixed%dim_2%LB
  811.       $SC_xcover_fixed_I6 = xcover_fixed%dim_3%SM
  811.       $SC_xcover_fixed_I5 = xcover_fixed%dim_3%EX
  811.       $SC_xcover_fixed_I7 = xcover_fixed%dim_3%LB
  810.       if ( nmax > 0 ) then
  809.          $I_L809_60 = 0
  809. !dir$ blocking_size( 1, 1 )
  809.          do
  810.             $I_L810_36 = 0
  810. !dir$ ivdep
  810. !dir$ blocking_size( 256, 256 )
  810.             do
  811.                (vcover_gbl%base_addr)(1 + $I_L810_36, latitu, 1 + $I_L809_60, 0) = (xcover_fixed%base_addr)(itype(1 + $I_L810_36), mon(1 + $I_L810_36), 1 + $I_L809_60, 0)
  812.                (zlt_gbl%base_addr)(1 + $I_L810_36, latitu, 1 + $I_L809_60, 0) = (zlt_fixed%base_addr)(itype(1 + $I_L810_36), mon(1 + $I_L810_36), 1 + $I_L809_60, 0)
  813.                (green_gbl%base_addr)(1 + $I_L810_36, latitu, 1 + $I_L809_60, 0) = (green_fixed%base_addr)(itype(1 + $I_L810_36), mon(1 + $I_L810_36), 1 + $I_L809_60, 0)
  814.                (chil_gbl%base_addr)(1 + $I_L810_36, latitu, 1 + $I_L809_60, 0) = (chil_fixed%base_addr)(itype(1 + $I_L810_36), 1 + $I_L809_60, 0)
  815.                (topt_gbl%base_addr)(1 + $I_L810_36, latitu, 1 + $I_L809_60, 0) = (topt_fixed%base_addr)(itype(1 + $I_L810_36), 1 + $I_L809_60, 0)
  816.                (tll_gbl%base_addr)(1 + $I_L810_36, latitu, 1 + $I_L809_60, 0) = (tll_fixed%base_addr)(itype(1 + $I_L810_36), 1 + $I_L809_60, 0)
  817.                (tu_gbl%base_addr)(1 + $I_L810_36, latitu, 1 + $I_L809_60, 0) = (tu_fixed%base_addr)(itype(1 + $I_L810_36), 1 + $I_L809_60, 0)
  818.                (defac_gbl%base_addr)(1 + $I_L810_36, latitu, 1 + $I_L809_60, 0) = (defac_fixed%base_addr)(itype(1 + $I_L810_36), 1 + $I_L809_60, 0)
  819.                (ph1_gbl%base_addr)(1 + $I_L810_36, latitu, 1 + $I_L809_60, 0) = (ph1_fixed%base_addr)(itype(1 + $I_L810_36), 1 + $I_L809_60, 0)
  820.                (ph2_gbl%base_addr)(1 + $I_L810_36, latitu, 1 + $I_L809_60, 0) = (ph2_fixed%base_addr)(itype(1 + $I_L810_36), 1 + $I_L809_60, 0)
  821.                (rstpar_gbl%base_addr)(1 + $I_L810_36, latitu, 1 + $I_L809_60, 1, 0) = (rstpar_fixed%base_addr)(itype(1 + $I_L810_36), 1 + $I_L809_60, 1, 0)
  822.                (rstpar_gbl%base_addr)(1 + $I_L810_36, latitu, 1 + $I_L809_60, 2, 0) = (rstpar_fixed%base_addr)(itype(1 + $I_L810_36), 1 + $I_L809_60, 2, 0)
  823.                (rstpar_gbl%base_addr)(1 + $I_L810_36, latitu, 1 + $I_L809_60, 3, 0) = (rstpar_fixed%base_addr)(itype(1 + $I_L810_36), 1 + $I_L809_60, 3, 0)
  824.                $I_L810_36 = 1 + $I_L810_36
  810.                if ( $I_L810_36 >= nmax ) exit
  810.             enddo
  825.             $I_L809_60 = 1 + $I_L809_60
  824.             if ( $I_L809_60 >= 2 ) exit
  824.          enddo
  824.       endif
  826.       call wheat( latitu, itype(1), nmax, colrad2(1), mon(1), xday, yrl, idatec(1), monl(1), nsx(1) )
  829.       return
  829.       end
  829.       
  836.       
  836.       subroutine airmod( tg, capac, z0x, d, rdc, rbc, itype, mon, nmax, ncols )
  836.       t$219 = ncols
  887.       t$1529 = _zla( 0, ncols )
  836.       t$1530 = _zla( 0, ncols )
  836.       t$1531 = 2 * _zla( 0, ncols )
  890.       t$1534 = 8 * _zla( 0, ncols )
  891.       t$1535 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
  891.       t$1537 = t$1535 + 8 * _zla( 0, ncols )
  836.       t$1532 = int( _alloc( t$1535 + 8 * _zla( 0, ncols ) ), 8 )
  890.       t$1533 = t$1532
  891.       t$1536 = t$1535 + t$1532
  895.       if ( nmax > 0 ) then
  902.          $SC_xd_I5 = xd%dim_1%EX
  902.          $SC_xd_I6 = xd%dim_1%LB
  902.          $SC_xd_I8 = xd%dim_2%SM
  902.          $SC_xd_I7 = xd%dim_2%EX
  902.          $SC_xd_I9 = xd%dim_2%LB
  898.          $SC_z2_I0 = z2%dim_1%EX
  898.          $SC_z2_I1 = z2%dim_1%LB
  898.          $SC_z2_I3 = z2%dim_2%SM
  898.          $SC_z2_I2 = z2%dim_2%EX
  898.          $SC_z2_I4 = z2%dim_2%LB
  895.          $I_L895_6 = 0
  895. !dir$ ivdep
  895.          do
  896.             if ( tg(1 + $I_L895_6) <= 273.16000000000003 ) then
  896.                if ( capac(1 + $I_L895_6, 2) >= 1.0e-3 ) then
  898.                   $xz_WR0_R0 = (z2%base_addr)(itype(1 + $I_L895_6), mon(1 + $I_L895_6), 0)
  899.                   $sdep_WR0_R1 = 5.0 * capac(1 + $I_L895_6, 2)
  900.                   $sdep_WR0_R1 = min( $sdep_WR0_R1, 9.4999999999999996e-1 * $xz_WR0_R0 )
  901.                   $d_WR0_R2 = $xz_WR0_R0 + -( ( $xz_WR0_R0 + -$sdep_WR0_R1 ) * ( 1.0/$xz_WR0_R0 * ( $xz_WR0_R0 + -d(1 + $I_L895_6) ) ) )
  901.                   d(1 + $I_L895_6) = $d_WR0_R2
  904.                   rbc(1 + $I_L895_6) = ( $xz_WR0_R0 * rbc(1 + $I_L895_6) * 1.0/( $xz_WR0_R0 + -$sdep_WR0_R1 ) )
  903.                   rdc(1 + $I_L895_6) = ( rdc(1 + $I_L895_6) * 1.0/$xz_WR0_R0 * ( $xz_WR0_R0 + -$sdep_WR0_R1 ) )
  902.                   z0x(1 + $I_L895_6) = ( $xz_WR0_R0 + -$d_WR0_R2 ) * ( z0x(1 + $I_L895_6) * 1.0/( $xz_WR0_R0 + -(xd%base_addr)(itype(1 + $I_L895_6), mon(1 + $I_L895_6), 0) ) )
  902.                endif
  902.             endif
  906.             $I_L895_6 = 1 + $I_L895_6
  905.             if ( $I_L895_6 >= nmax ) exit
  905.          enddo
  905.       endif
  836.       _free( t$1532 )
  907.       return
  907.       end
  907.       
  913.       
  913.       subroutine temres( bps, psb, em, gmt, gmq, psy, rcp, wc, wg, fc, fg, hr, hgdtg, hgdtc, hgdtm, hcdtg, hcdtc, hcdtm, egdtg, egdtc, egdqm, ecdtg, ecdtc, ecdqm, deadtg, deadtc, deadqm, ect, eci, egt, egi, egs, ec, eg, hc, hg, ecidif, egidif, ra, rb, rd, rc, rg, ta, ea, etc, etg, btc, btg, radt, rst, rsoil, hrr, cc, cg, satcap, dtc, dtg, dtm, dqm, thermk, tc, tg, td, capac, qm, tm, psur, dtc3x, nmax, vcover, ncols )
  913.       t$229 = ncols
 1106.       t$1538 = _zla( 0, ncols )
  913.       t$1539 = _zla( 0, ncols )
  913.       t$1540 = 3 * _zla( 0, ncols )
  913.       t$1541 = 2 * _zla( 0, ncols )
  913.       t$1542 = 2 * _zla( 0, ncols )
 1132.       t$1545 = 8 * _zla( 0, ncols )
 1131.       t$1546 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 1131.       t$1548 = t$1546 + 8 * _zla( 0, ncols )
 1133.       t$1549 = 8 * ( 7 + t$1546 + 8 * _zla( 0, ncols ) ) / 8
 1133.       t$1551 = t$1549 + 8 * _zla( 0, ncols )
 1134.       t$1552 = 8 * ( 7 + t$1549 + 8 * _zla( 0, ncols ) ) / 8
 1134.       t$1554 = t$1552 + 8 * _zla( 0, ncols )
 1135.       t$1555 = 8 * ( 7 + t$1552 + 8 * _zla( 0, ncols ) ) / 8
 1135.       t$1557 = t$1555 + 8 * _zla( 0, ncols )
 1136.       t$1558 = 8 * ( 7 + t$1555 + 8 * _zla( 0, ncols ) ) / 8
 1136.       t$1560 = t$1558 + 8 * _zla( 0, ncols )
 1149.       t$1562 = t$1558 + 12 * _zla( 0, ncols )
  913.       t$1563 = 4 * _zla( 0, ncols )
  913.       t$1564 = 20 * _zla( 0, ncols )
 1122.       t$1565 = 8 * ( 7 + t$1558 + 12 * _zla( 0, ncols ) ) / 8
 1122.       t$1567 = t$1565 + 160 * _zla( 0, ncols )
 1143.       t$1568 = 8 * ( 7 + t$1565 + 160 * _zla( 0, ncols ) ) / 8
 1143.       t$1570 = t$1568 + 8 * _zla( 0, ncols )
 1145.       t$1571 = 8 * ( 7 + t$1568 + 8 * _zla( 0, ncols ) ) / 8
 1145.       t$1573 = t$1571 + 8 * _zla( 0, ncols )
 1146.       t$1574 = 8 * ( 7 + t$1571 + 8 * _zla( 0, ncols ) ) / 8
 1146.       t$1576 = t$1574 + 8 * _zla( 0, ncols )
 1147.       t$1577 = 8 * ( 7 + t$1574 + 8 * _zla( 0, ncols ) ) / 8
 1147.       t$1579 = t$1577 + 8 * _zla( 0, ncols )
 1148.       t$1580 = 8 * ( 7 + t$1577 + 8 * _zla( 0, ncols ) ) / 8
 1148.       t$1582 = t$1580 + 8 * _zla( 0, ncols )
 1120.       t$1583 = 8 * ( 7 + t$1580 + 8 * _zla( 0, ncols ) ) / 8
 1120.       t$1585 = t$1583 + 16 * _zla( 0, ncols )
  913.       t$1543 = int( _alloc( t$1583 + 16 * _zla( 0, ncols ) ), 8 )
 1132.       t$1544 = t$1543
 1131.       t$1547 = t$1546 + t$1543
 1133.       t$1550 = t$1549 + t$1543
 1134.       t$1553 = t$1552 + t$1543
 1135.       t$1556 = t$1555 + t$1543
 1136.       t$1559 = t$1558 + t$1543
 1149.       t$1561 = t$1558 + t$1543 + 8 * _zla( 0, ncols )
 1122.       t$1566 = t$1565 + t$1543
 1143.       t$1569 = t$1568 + t$1543
 1145.       t$1572 = t$1571 + t$1543
 1146.       t$1575 = t$1574 + t$1543
 1147.       t$1578 = t$1577 + t$1543
 1148.       t$1581 = t$1580 + t$1543
 1120.       t$1584 = t$1583 + t$1543
 1164.       $tim_S16 = 1.0 + 7.2722050925925924e-5 * dtc3x
 1165.       $dtc3xi_S17 = 1.0/dtc3x
 1168.       $F_A33 = ncols
 1168.       if ( ncols > 0 ) then
 1168.          $I_L1168_74 = 0
 1168.          do
 1168.             $I_L1168_72 = 0
 1168. !dir$ ivdep
 1168.             do
 1168.                vcover2(1 + $I_L1168_72, 1 + $I_L1168_74) = vcover(1 + $I_L1168_72, 1 + $I_L1168_74)
 1168.                $I_L1168_72 = 1 + $I_L1168_72
 1168.                if ( $I_L1168_72 >= $F_A33 ) exit
 1168.             enddo
 1168.             $I_L1168_74 = 1 + $I_L1168_74
 1168.             if ( $I_L1168_74 >= 2 ) exit
 1168.          enddo
 1168.       endif
 1170.       if ( nmax > 0 ) then
 1170.          $I_L1170_54 = 0
 1170. !dir$ ivdep
 1170.          do
 1178.             wc(1 + $I_L1170_54) = min( 1.0, ( capac(1 + $I_L1170_54, 1) * 1.0/satcap(1 + $I_L1170_54, 1) ) )
 1185.             wg(1 + $I_L1170_54) = min( 1.0, ( capac(1 + $I_L1170_54, 2) * 1.0/satcap(1 + $I_L1170_54, 2) ) )
 1190.             if ( tg(1 + $I_L1170_54) <= 273.16000000000003 ) then
 1191.                vcover2(1 + $I_L1170_54, 2) = 1.0
 1192.                wg(1 + $I_L1170_54) = min( 1.0, 250.0 * capac(1 + $I_L1170_54, 2) )
 1196.                rst(1 + $I_L1170_54, 2) = rsoil(1 + $I_L1170_54)
 1196.             endif
 1246.             ak(1 + $I_L1170_54) = ( 9.7551264184750155e-5 * 1.0/( bps(1 + $I_L1170_54) * psb(1 + $I_L1170_54) ) )
 1255.             ah(1 + $I_L1170_54) = ( 3.8888888888888891e-8 * 1.0/psb(1 + $I_L1170_54) )
 1260.             cgi(1 + $I_L1170_54) = 1.0/cg(1 + $I_L1170_54)
 1261.             cci(1 + $I_L1170_54) = 1.0/cc(1 + $I_L1170_54)
 1267.             psyi(1 + $I_L1170_54) = ( rcp(1 + $I_L1170_54) * 1.0/psy(1 + $I_L1170_54) )
 1268.             $I_L1170_54 = 1 + $I_L1170_54
 1197.             if ( $I_L1170_54 >= nmax ) exit
 1197.          enddo
 1272.          $I_L1272_56 = 0
 1272. !dir$ ivdep
 1272.          do
 1282.             $d1_S2 = 1.0/rb(1 + $I_L1272_56) + 1.0/ra(1 + $I_L1272_56) + 1.0/rd(1 + $I_L1272_56)
 1293.             $d1i_S3 = ( rcp(1 + $I_L1272_56) * 1.0/$d1_S2 )
 1301.             $ta_WR0_R1 = ( 1.0/$d1_S2 * ( ( bps(1 + $I_L1272_56) * tm(1 + $I_L1272_56) * 1.0/ra(1 + $I_L1272_56) ) + ( tc(1 + $I_L1272_56) * 1.0/rb(1 + $I_L1272_56) ) + ( tg(1 + $I_L1272_56) * 1.0/rd(1 + $I_L1272_56) ) ) )
 1301.             ta(1 + $I_L1272_56) = $ta_WR0_R1
 1312.             hc(1 + $I_L1272_56) = dtc3x * ( rcp(1 + $I_L1272_56) * 1.0/rb(1 + $I_L1272_56) * ( tc(1 + $I_L1272_56) + -$ta_WR0_R1 ) )
 1320.             hg(1 + $I_L1272_56) = dtc3x * ( rcp(1 + $I_L1272_56) * 1.0/rd(1 + $I_L1272_56) * ( tg(1 + $I_L1272_56) + -$ta_WR0_R1 ) )
 1338.             hcdtc(1 + $I_L1272_56) = ( 1.0/ra(1 + $I_L1272_56) + 1.0/rd(1 + $I_L1272_56) ) * ( $d1i_S3 * 1.0/rb(1 + $I_L1272_56) )
 1344.             hcdtg(1 + $I_L1272_56) = -( $d1i_S3 * 1.0/( rd(1 + $I_L1272_56) * rb(1 + $I_L1272_56) ) )
 1359.             hcdtm(1 + $I_L1272_56) = -( bps(1 + $I_L1272_56) * ( $d1i_S3 * 1.0/( ra(1 + $I_L1272_56) * rb(1 + $I_L1272_56) ) ) )
 1367.             hgdtg(1 + $I_L1272_56) = ( 1.0/ra(1 + $I_L1272_56) + 1.0/rb(1 + $I_L1272_56) ) * ( $d1i_S3 * 1.0/rd(1 + $I_L1272_56) )
 1374.             hgdtc(1 + $I_L1272_56) = -( $d1i_S3 * 1.0/( rd(1 + $I_L1272_56) * rb(1 + $I_L1272_56) ) )
 1385.             hgdtm(1 + $I_L1272_56) = -( bps(1 + $I_L1272_56) * ( $d1i_S3 * 1.0/( ra(1 + $I_L1272_56) * rd(1 + $I_L1272_56) ) ) )
 1387.             $I_L1272_56 = 1 + $I_L1272_56
 1272.             if ( $I_L1272_56 >= nmax ) exit
 1272.          enddo
 1394.          $I_L1394_58 = 0
 1394. !dir$ ivdep
 1394.          do
 1395.             $fac1_S5 = vcover2(1 + $I_L1394_58, 1) * ( 1.0 + -thermk(1 + $I_L1394_58) )
 1396.             rcdtc(1 + $I_L1394_58) = 4.5359999999999999e-7 * $fac1_S5 * tc(1 + $I_L1394_58) * tc(1 + $I_L1394_58) * tc(1 + $I_L1394_58)
 1397.             rcdtg(1 + $I_L1394_58) = -2.2679999999999999e-7 * $fac1_S5 * tg(1 + $I_L1394_58) * tg(1 + $I_L1394_58) * tg(1 + $I_L1394_58)
 1398.             rgdtc(1 + $I_L1394_58) = -2.2679999999999999e-7 * $fac1_S5 * tc(1 + $I_L1394_58) * tc(1 + $I_L1394_58) * tc(1 + $I_L1394_58)
 1399.             rgdtg(1 + $I_L1394_58) = 2.2679999999999999e-7 * tg(1 + $I_L1394_58) * tg(1 + $I_L1394_58) * tg(1 + $I_L1394_58)
 1400.             $I_L1394_58 = 1 + $I_L1394_58
 1394.             if ( $I_L1394_58 >= nmax ) exit
 1394.          enddo
 1401.          $I_L1401_60 = 0
 1401. !dir$ ivdep
 1401.          do
 1406.             $hr_WR0_R2 = 1.0 + -fg(1 + $I_L1401_60) + fg(1 + $I_L1401_60) * hrr(1 + $I_L1401_60)
 1406.             hr(1 + $I_L1401_60) = $hr_WR0_R2
 1410.             $rc_WR0_R3 = 2.0 * rb(1 + $I_L1401_60) + fc(1 + $I_L1401_60) * rst(1 + $I_L1401_60, 1)
 1410.             rc(1 + $I_L1401_60) = $rc_WR0_R3
 1416.             $coc_S10 = ( 1.0/$rc_WR0_R3 * ( 1.0 + -wc(1 + $I_L1401_60) ) ) + ( 5.0e-1 * wc(1 + $I_L1401_60) * 1.0/rb(1 + $I_L1401_60) )
 1420.             $rg_WR0_R4 = fg(1 + $I_L1401_60) * rst(1 + $I_L1401_60, 2)
 1420.             rg(1 + $I_L1401_60) = $rg_WR0_R4
 1422.             $rsurf_S7 = fg(1 + $I_L1401_60) * rsoil(1 + $I_L1401_60)
 1432.             $cog1_S11 = ( vcover2(1 + $I_L1401_60, 2) * 1.0/( $rg_WR0_R4 + rd(1 + $I_L1401_60) ) * ( 1.0 + -wg(1 + $I_L1401_60) ) ) + $hr_WR0_R2 * ( vcover2(1 + $I_L1401_60, 2) * 1.0/( 44.0 + $rsurf_S7 + rd(1 + $I_L1401_60) ) ) + $hr_WR0_R2 * ( ( 1.0 + -vcover2(1 + $I_L1401_60, 2) ) * 1.0/( $rsurf_S7 + rd(1 + $I_L1401_60) ) )
 1440.             $cog2_S8 = ( vcover2(1 + $I_L1401_60, 2) * 1.0/( $rg_WR0_R4 + rd(1 + $I_L1401_60) ) * ( 1.0 + -wg(1 + $I_L1401_60) ) ) + ( vcover2(1 + $I_L1401_60, 2) * 1.0/( 44.0 + $rsurf_S7 + rd(1 + $I_L1401_60) ) ) + ( ( 1.0 + -vcover2(1 + $I_L1401_60, 2) ) * 1.0/( $rsurf_S7 + rd(1 + $I_L1401_60) ) )
 1455.             $cog2_S9 = $cog2_S8 + vcover2(1 + $I_L1401_60, 2) * ( wg(1 + $I_L1401_60) * 1.0/rd(1 + $I_L1401_60) )
 1461.             $d2_S13 = $cog2_S9 + $coc_S10 + 1.0/ra(1 + $I_L1401_60)
 1449.             $cog1_S12 = $cog1_S11 + vcover2(1 + $I_L1401_60, 2) * ( wg(1 + $I_L1401_60) * 1.0/rd(1 + $I_L1401_60) )
 1467.             $top_S14 = ( em(1 + $I_L1401_60) * 1.0/ra(1 + $I_L1401_60) ) + $coc_S10 * etc(1 + $I_L1401_60) + $cog1_S12 * etg(1 + $I_L1401_60)
 1469.             ea(1 + $I_L1401_60) = ( $top_S14 * 1.0/$d2_S13 )
 1488.             ec(1 + $I_L1401_60) = dtc3x * $coc_S10 * psyi(1 + $I_L1401_60) * ( etc(1 + $I_L1401_60) + -( $top_S14 * 1.0/$d2_S13 ) )
 1498.             eg(1 + $I_L1401_60) = dtc3x * psyi(1 + $I_L1401_60) * ( -( $cog2_S9 * ( $top_S14 * 1.0/$d2_S13 ) ) + $cog1_S12 * etg(1 + $I_L1401_60) )
 1500.             $deadtc_WR0_R5 = ( $coc_S10 * btc(1 + $I_L1401_60) * 1.0/$d2_S13 )
 1500.             deadtc(1 + $I_L1401_60) = $deadtc_WR0_R5
 1502.             $deadtg_WR0_R6 = ( $cog1_S12 * btg(1 + $I_L1401_60) * 1.0/$d2_S13 )
 1502.             deadtg(1 + $I_L1401_60) = $deadtg_WR0_R6
 1508.             $deadqm_WR0_R7 = ( 6.22e-1 * psur(1 + $I_L1401_60) * 1.0/( $d2_S13 * ra(1 + $I_L1401_60) * ( 6.22e-1 + qm(1 + $I_L1401_60) ) * ( 6.22e-1 + qm(1 + $I_L1401_60) ) ) )
 1508.             deadqm(1 + $I_L1401_60) = $deadqm_WR0_R7
 1510.             ecdtc(1 + $I_L1401_60) = $coc_S10 * psyi(1 + $I_L1401_60) * ( btc(1 + $I_L1401_60) + -$deadtc_WR0_R5 )
 1512.             ecdtg(1 + $I_L1401_60) = -( $coc_S10 * $deadtg_WR0_R6 * psyi(1 + $I_L1401_60) )
 1514.             ecdqm(1 + $I_L1401_60) = -( $coc_S10 * $deadqm_WR0_R7 * psyi(1 + $I_L1401_60) )
 1516.             egdtg(1 + $I_L1401_60) = psyi(1 + $I_L1401_60) * ( -( $cog2_S9 * $deadtg_WR0_R6 ) + $cog1_S12 * btg(1 + $I_L1401_60) )
 1518.             egdtc(1 + $I_L1401_60) = -( $cog2_S9 * $deadtc_WR0_R5 * psyi(1 + $I_L1401_60) )
 1520.             egdqm(1 + $I_L1401_60) = -( $cog2_S9 * $deadqm_WR0_R7 * psyi(1 + $I_L1401_60) )
 1522.             $I_L1401_60 = 1 + $I_L1401_60
 1401.             if ( $I_L1401_60 >= nmax ) exit
 1401.          enddo
 1527.          $I_L1527_62 = 0
 1527. !dir$ ivdep
 1527.          do
 1546.             pblsib(1 + $I_L1527_62, 1, 1) = $tim_S16 + dtc3x * cgi(1 + $I_L1527_62) * ( egdtg(1 + $I_L1527_62) + hgdtg(1 + $I_L1527_62) + rgdtg(1 + $I_L1527_62) )
 1547.             pblsib(1 + $I_L1527_62, 1, 2) = dtc3x * cgi(1 + $I_L1527_62) * ( egdtc(1 + $I_L1527_62) + hgdtc(1 + $I_L1527_62) + rgdtc(1 + $I_L1527_62) )
 1548.             pblsib(1 + $I_L1527_62, 1, 3) = dtc3x * cgi(1 + $I_L1527_62) * hgdtm(1 + $I_L1527_62)
 1549.             pblsib(1 + $I_L1527_62, 1, 4) = dtc3x * cgi(1 + $I_L1527_62) * egdqm(1 + $I_L1527_62)
 1553.             pblsib(1 + $I_L1527_62, 2, 1) = dtc3x * cci(1 + $I_L1527_62) * ( ecdtg(1 + $I_L1527_62) + hcdtg(1 + $I_L1527_62) + rcdtg(1 + $I_L1527_62) )
 1555.             pblsib(1 + $I_L1527_62, 2, 2) = 1.0 + dtc3x * cci(1 + $I_L1527_62) * ( ecdtc(1 + $I_L1527_62) + hcdtc(1 + $I_L1527_62) + rcdtc(1 + $I_L1527_62) )
 1562.             pblsib(1 + $I_L1527_62, 2, 3) = dtc3x * cci(1 + $I_L1527_62) * hcdtm(1 + $I_L1527_62)
 1564.             pblsib(1 + $I_L1527_62, 2, 4) = dtc3x * cci(1 + $I_L1527_62) * ecdqm(1 + $I_L1527_62)
 1574.             pblsib(1 + $I_L1527_62, 3, 1) = -( dtc3x * ak(1 + $I_L1527_62) * ( hgdtg(1 + $I_L1527_62) + hcdtg(1 + $I_L1527_62) ) )
 1576.             pblsib(1 + $I_L1527_62, 3, 2) = -( dtc3x * ak(1 + $I_L1527_62) * ( hgdtc(1 + $I_L1527_62) + hcdtc(1 + $I_L1527_62) ) )
 1636.             pblsib(1 + $I_L1527_62, 3, 3) = gmt(1 + $I_L1527_62, 2) + -( dtc3x * ak(1 + $I_L1527_62) * ( hgdtm(1 + $I_L1527_62) + hcdtm(1 + $I_L1527_62) ) )
 1637.             pblsib(1 + $I_L1527_62, 3, 4) = 0.0
 1646.             pblsib(1 + $I_L1527_62, 4, 1) = -( dtc3x * ah(1 + $I_L1527_62) * ( egdtg(1 + $I_L1527_62) + ecdtg(1 + $I_L1527_62) ) )
 1647.             pblsib(1 + $I_L1527_62, 4, 2) = -( dtc3x * ah(1 + $I_L1527_62) * ( egdtc(1 + $I_L1527_62) + ecdtc(1 + $I_L1527_62) ) )
 1648.             pblsib(1 + $I_L1527_62, 4, 3) = 0.0
 1650.             pblsib(1 + $I_L1527_62, 4, 4) = gmq(1 + $I_L1527_62, 2) + -( dtc3x * ah(1 + $I_L1527_62) * ( egdqm(1 + $I_L1527_62) + ecdqm(1 + $I_L1527_62) ) )
 1682.             pblsib(1 + $I_L1527_62, 1, 5) = -7.2722050925925924e-5 * ( tg(1 + $I_L1527_62) + -td(1 + $I_L1527_62) ) + cgi(1 + $I_L1527_62) * ( radt(1 + $I_L1527_62, 2) + -( $dtc3xi_S17 * ( eg(1 + $I_L1527_62) + hg(1 + $I_L1527_62) ) ) )
 1703.             pblsib(1 + $I_L1527_62, 2, 5) = cci(1 + $I_L1527_62) * ( radt(1 + $I_L1527_62, 1) + -( $dtc3xi_S17 * ( ec(1 + $I_L1527_62) + hc(1 + $I_L1527_62) ) ) )
 1738.             pblsib(1 + $I_L1527_62, 3, 5) = gmt(1 + $I_L1527_62, 3) + $dtc3xi_S17 * ak(1 + $I_L1527_62) * ( hg(1 + $I_L1527_62) + hc(1 + $I_L1527_62) )
 1746.             pblsib(1 + $I_L1527_62, 4, 5) = gmq(1 + $I_L1527_62, 3) + $dtc3xi_S17 * ah(1 + $I_L1527_62) * ( eg(1 + $I_L1527_62) + ec(1 + $I_L1527_62) )
 1747.             $I_L1527_62 = 1 + $I_L1527_62
 1527.             if ( $I_L1527_62 >= nmax ) exit
 1527.          enddo
 1751.          $I_L1751_64 = 0
 1751. !dir$ ivdep
 1751.          do
 1752.             $pblsib_WR0_R8 = pblsib(1 + $I_L1751_64, 2, 2) + -( pblsib(1 + $I_L1751_64, 2, 1) * ( pblsib(1 + $I_L1751_64, 1, 2) * 1.0/pblsib(1 + $I_L1751_64, 1, 1) ) )
 1752.             pblsib(1 + $I_L1751_64, 2, 2) = $pblsib_WR0_R8
 1753.             $pblsib_WR0_R9 = pblsib(1 + $I_L1751_64, 2, 3) + -( pblsib(1 + $I_L1751_64, 2, 1) * ( pblsib(1 + $I_L1751_64, 1, 3) * 1.0/pblsib(1 + $I_L1751_64, 1, 1) ) )
 1753.             pblsib(1 + $I_L1751_64, 2, 3) = $pblsib_WR0_R9
 1754.             $pblsib_WR0_R10 = pblsib(1 + $I_L1751_64, 2, 4) + -( pblsib(1 + $I_L1751_64, 2, 1) * ( pblsib(1 + $I_L1751_64, 1, 4) * 1.0/pblsib(1 + $I_L1751_64, 1, 1) ) )
 1754.             pblsib(1 + $I_L1751_64, 2, 4) = $pblsib_WR0_R10
 1755.             $pblsib_WR0_R11 = pblsib(1 + $I_L1751_64, 2, 5) + -( pblsib(1 + $I_L1751_64, 2, 1) * ( pblsib(1 + $I_L1751_64, 1, 5) * 1.0/pblsib(1 + $I_L1751_64, 1, 1) ) )
 1756.             $pblsib_WR0_R12 = pblsib(1 + $I_L1751_64, 3, 2) + -( pblsib(1 + $I_L1751_64, 3, 1) * ( pblsib(1 + $I_L1751_64, 1, 2) * 1.0/pblsib(1 + $I_L1751_64, 1, 1) ) )
 1756.             pblsib(1 + $I_L1751_64, 3, 2) = $pblsib_WR0_R12
 1757.             $pblsib_WR0_R13 = pblsib(1 + $I_L1751_64, 3, 3) + -( pblsib(1 + $I_L1751_64, 3, 1) * ( pblsib(1 + $I_L1751_64, 1, 3) * 1.0/pblsib(1 + $I_L1751_64, 1, 1) ) )
 1758.             $pblsib_WR0_R14 = pblsib(1 + $I_L1751_64, 3, 4) + -( pblsib(1 + $I_L1751_64, 3, 1) * ( pblsib(1 + $I_L1751_64, 1, 4) * 1.0/pblsib(1 + $I_L1751_64, 1, 1) ) )
 1759.             $pblsib_WR0_R15 = pblsib(1 + $I_L1751_64, 3, 5) + -( pblsib(1 + $I_L1751_64, 3, 1) * ( pblsib(1 + $I_L1751_64, 1, 5) * 1.0/pblsib(1 + $I_L1751_64, 1, 1) ) )
 1760.             $pblsib_WR0_R16 = pblsib(1 + $I_L1751_64, 4, 2) + -( pblsib(1 + $I_L1751_64, 4, 1) * ( pblsib(1 + $I_L1751_64, 1, 2) * 1.0/pblsib(1 + $I_L1751_64, 1, 1) ) )
 1760.             pblsib(1 + $I_L1751_64, 4, 2) = $pblsib_WR0_R16
 1761.             $pblsib_WR0_R17 = pblsib(1 + $I_L1751_64, 4, 3) + -( pblsib(1 + $I_L1751_64, 4, 1) * ( pblsib(1 + $I_L1751_64, 1, 3) * 1.0/pblsib(1 + $I_L1751_64, 1, 1) ) )
 1762.             $pblsib_WR0_R18 = pblsib(1 + $I_L1751_64, 4, 4) + -( pblsib(1 + $I_L1751_64, 4, 1) * ( pblsib(1 + $I_L1751_64, 1, 4) * 1.0/pblsib(1 + $I_L1751_64, 1, 1) ) )
 1763.             $pblsib_WR0_R19 = pblsib(1 + $I_L1751_64, 4, 5) + -( pblsib(1 + $I_L1751_64, 4, 1) * ( pblsib(1 + $I_L1751_64, 1, 5) * 1.0/pblsib(1 + $I_L1751_64, 1, 1) ) )
 1764.             $pblsib_WR0_R13 = $pblsib_WR0_R13 + -( $pblsib_WR0_R12 * ( $pblsib_WR0_R9 * 1.0/$pblsib_WR0_R8 ) )
 1764.             pblsib(1 + $I_L1751_64, 3, 3) = $pblsib_WR0_R13
 1765.             $pblsib_WR0_R14 = $pblsib_WR0_R14 + -( $pblsib_WR0_R12 * ( $pblsib_WR0_R10 * 1.0/$pblsib_WR0_R8 ) )
 1765.             pblsib(1 + $I_L1751_64, 3, 4) = $pblsib_WR0_R14
 1767.             $pblsib_WR0_R17 = $pblsib_WR0_R17 + -( $pblsib_WR0_R16 * ( $pblsib_WR0_R9 * 1.0/$pblsib_WR0_R8 ) )
 1767.             pblsib(1 + $I_L1751_64, 4, 3) = $pblsib_WR0_R17
 1768.             $pblsib_WR0_R18 = $pblsib_WR0_R18 + -( $pblsib_WR0_R16 * ( $pblsib_WR0_R10 * 1.0/$pblsib_WR0_R8 ) )
 1770.             $pblsib_WR0_R18 = $pblsib_WR0_R18 + -( $pblsib_WR0_R17 * ( $pblsib_WR0_R14 * 1.0/$pblsib_WR0_R13 ) )
 1770.             pblsib(1 + $I_L1751_64, 4, 4) = $pblsib_WR0_R18
 1769.             $pblsib_WR0_R19 = $pblsib_WR0_R19 + -( $pblsib_WR0_R16 * ( $pblsib_WR0_R11 * 1.0/$pblsib_WR0_R8 ) )
 1766.             $pblsib_WR0_R15 = $pblsib_WR0_R15 + -( $pblsib_WR0_R12 * ( $pblsib_WR0_R11 * 1.0/$pblsib_WR0_R8 ) )
 1773.             $pblsib_WR0_R19 = ( 1.0/$pblsib_WR0_R18 * ( $pblsib_WR0_R19 + -( $pblsib_WR0_R17 * ( $pblsib_WR0_R15 * 1.0/$pblsib_WR0_R13 ) ) ) )
 1773.             pblsib(1 + $I_L1751_64, 4, 5) = $pblsib_WR0_R19
 1775.             $pblsib_WR0_R15 = ( $pblsib_WR0_R15 * 1.0/$pblsib_WR0_R13 ) + -( $pblsib_WR0_R19 * ( $pblsib_WR0_R14 * 1.0/$pblsib_WR0_R13 ) )
 1775.             pblsib(1 + $I_L1751_64, 3, 5) = $pblsib_WR0_R15
 1778.             $pblsib_WR0_R11 = -( $pblsib_WR0_R19 * ( $pblsib_WR0_R10 * 1.0/$pblsib_WR0_R8 ) ) + ( $pblsib_WR0_R11 * 1.0/$pblsib_WR0_R8 ) + -( $pblsib_WR0_R15 * ( $pblsib_WR0_R9 * 1.0/$pblsib_WR0_R8 ) )
 1778.             pblsib(1 + $I_L1751_64, 2, 5) = $pblsib_WR0_R11
 1782.             pblsib(1 + $I_L1751_64, 1, 5) = -( $pblsib_WR0_R19 * ( pblsib(1 + $I_L1751_64, 1, 4) * 1.0/pblsib(1 + $I_L1751_64, 1, 1) ) ) + -( $pblsib_WR0_R15 * ( pblsib(1 + $I_L1751_64, 1, 3) * 1.0/pblsib(1 + $I_L1751_64, 1, 1) ) ) + ( pblsib(1 + $I_L1751_64, 1, 5) * 1.0/pblsib(1 + $I_L1751_64, 1, 1) ) + -( $pblsib_WR0_R11 * ( pblsib(1 + $I_L1751_64, 1, 2) * 1.0/pblsib(1 + $I_L1751_64, 1, 1) ) )
 1786.             $I_L1751_64 = 1 + $I_L1751_64
 1751.             if ( $I_L1751_64 >= nmax ) exit
 1751.          enddo
 1787.          $I_L1787_66 = 0
 1787. !dir$ ivdep
 1787.          do
 1788.             $dtg_WR0_R20 = dtc3x * pblsib(1 + $I_L1787_66, 1, 5)
 1788.             dtg(1 + $I_L1787_66) = $dtg_WR0_R20
 1789.             $dtc_WR0_R21 = dtc3x * pblsib(1 + $I_L1787_66, 2, 5)
 1789.             dtc(1 + $I_L1787_66) = $dtc_WR0_R21
 1790.             $dtm_WR0_R22 = dtc3x * pblsib(1 + $I_L1787_66, 3, 5)
 1790.             dtm(1 + $I_L1787_66) = $dtm_WR0_R22
 1791.             $dqm_WR0_R23 = dtc3x * pblsib(1 + $I_L1787_66, 4, 5)
 1791.             dqm(1 + $I_L1787_66) = $dqm_WR0_R23
 1797.             ecpot(1 + $I_L1787_66) = -( $dqm_WR0_R23 * deadqm(1 + $I_L1787_66) ) + -( $dtg_WR0_R20 * deadtg(1 + $I_L1787_66) ) + ( etc(1 + $I_L1787_66) + -ea(1 + $I_L1787_66) ) + $dtc_WR0_R21 * ( btc(1 + $I_L1787_66) + -deadtc(1 + $I_L1787_66) )
 1799.             egpot(1 + $I_L1787_66) = -( $dtc_WR0_R21 * deadtc(1 + $I_L1787_66) ) + ( etg(1 + $I_L1787_66) + -ea(1 + $I_L1787_66) ) + -( $dqm_WR0_R23 * deadqm(1 + $I_L1787_66) ) + $dtg_WR0_R20 * ( btg(1 + $I_L1787_66) + -deadtg(1 + $I_L1787_66) )
 1793.             hg(1 + $I_L1787_66) = hg(1 + $I_L1787_66) + dtc3x * ( $dtm_WR0_R22 * hgdtm(1 + $I_L1787_66) + $dtc_WR0_R21 * hgdtc(1 + $I_L1787_66) + $dtg_WR0_R20 * hgdtg(1 + $I_L1787_66) )
 1792.             hc(1 + $I_L1787_66) = hc(1 + $I_L1787_66) + dtc3x * ( $dtm_WR0_R22 * hcdtm(1 + $I_L1787_66) + $dtc_WR0_R21 * hcdtc(1 + $I_L1787_66) + $dtg_WR0_R20 * hcdtg(1 + $I_L1787_66) )
 1801.             $I_L1787_66 = 1 + $I_L1787_66
 1787.             if ( $I_L1787_66 >= nmax ) exit
 1787.          enddo
 1808.          $I_L1808_68 = 0
 1808. !dir$ ivdep
 1808.          do
 1809.             $eci_WR0_R24 = dtc3x * ( 5.0e-1 * psyi(1 + $I_L1808_68) * ecpot(1 + $I_L1808_68) * wc(1 + $I_L1808_68) * 1.0/rb(1 + $I_L1808_68) )
 1810.             $ecidif_WR0_R25 = max( 0.0, $eci_WR0_R24 + -2520000000.0 * capac(1 + $I_L1808_68, 1) )
 1810.             ecidif(1 + $I_L1808_68) = $ecidif_WR0_R25
 1813.             $egi_WR0_R26 = dtc3x * ( psyi(1 + $I_L1808_68) * egpot(1 + $I_L1808_68) * vcover2(1 + $I_L1808_68, 2) * wg(1 + $I_L1808_68) * 1.0/rd(1 + $I_L1808_68) )
 1814.             $egidif_WR0_R27 = max( 0.0, $egi_WR0_R26 + -2520000000.0 * capac(1 + $I_L1808_68, 2) )
 1814.             egidif(1 + $I_L1808_68) = $egidif_WR0_R27
 1820.             $rsurf_S21 = fg(1 + $I_L1808_68) * rsoil(1 + $I_L1808_68)
 1821.             $coct_S23 = ( 1.0/rc(1 + $I_L1808_68) * ( 1.0 + -wc(1 + $I_L1808_68) ) )
 1822.             $cogt_S24 = ( vcover2(1 + $I_L1808_68, 2) * 1.0/( rd(1 + $I_L1808_68) + rg(1 + $I_L1808_68) ) * ( 1.0 + -wg(1 + $I_L1808_68) ) )
 1823.             $cogs1_S22 = ( hr(1 + $I_L1808_68) * ( 1.0 + -vcover2(1 + $I_L1808_68, 2) ) * 1.0/( $rsurf_S21 + rd(1 + $I_L1808_68) ) ) + hr(1 + $I_L1808_68) * ( vcover2(1 + $I_L1808_68, 2) * 1.0/( 44.0 + $rsurf_S21 + rd(1 + $I_L1808_68) ) )
 1825.             $cogs2_S25 = ( $cogs1_S22 * 1.0/hr(1 + $I_L1808_68) )
 1826.             $ect_WR0_R28 = dtc3x * $coct_S23 * ecpot(1 + $I_L1808_68) * psyi(1 + $I_L1808_68)
 1826.             ect(1 + $I_L1808_68) = $ect_WR0_R28
 1812.             $eci_WR0_R24 = min( $eci_WR0_R24, 2520000000.0 * capac(1 + $I_L1808_68, 1) )
 1812.             eci(1 + $I_L1808_68) = $eci_WR0_R24
 1827.             ec(1 + $I_L1808_68) = $eci_WR0_R24 + $ect_WR0_R28
 1828.             $egt_WR0_R29 = dtc3x * $cogt_S24 * psyi(1 + $I_L1808_68) * egpot(1 + $I_L1808_68)
 1828.             egt(1 + $I_L1808_68) = $egt_WR0_R29
 1829.             $egs_WR0_R30 = -( $cogs2_S25 * ( ea(1 + $I_L1808_68) + dtc(1 + $I_L1808_68) * deadtc(1 + $I_L1808_68) + dqm(1 + $I_L1808_68) * deadqm(1 + $I_L1808_68) + dtg(1 + $I_L1808_68) * deadtg(1 + $I_L1808_68) ) ) + $cogs1_S22 * ( etg(1 + $I_L1808_68) + dtg(1 + $I_L1808_68) * btg(1 + $I_L1808_68) )
 1816.             $egi_WR0_R26 = min( $egi_WR0_R26, 2520000000.0 * capac(1 + $I_L1808_68, 2) )
 1816.             egi(1 + $I_L1808_68) = $egi_WR0_R26
 1832.             $egs_WR0_R30 = dtc3x * $egs_WR0_R30 * psyi(1 + $I_L1808_68)
 1832.             egs(1 + $I_L1808_68) = $egs_WR0_R30
 1833.             eg(1 + $I_L1808_68) = $egs_WR0_R30 + $egi_WR0_R26 + $egt_WR0_R29
 1815.             hg(1 + $I_L1808_68) = $egidif_WR0_R27 + hg(1 + $I_L1808_68)
 1811.             hc(1 + $I_L1808_68) = $ecidif_WR0_R25 + hc(1 + $I_L1808_68)
 1835.             $I_L1808_68 = 1 + $I_L1808_68
 1808.             if ( $I_L1808_68 >= nmax ) exit
 1808.          enddo
 1839.          $I_L1839_70 = 0
 1839. !dir$ ivdep
 1839.          do
 1842.             $ecf_S27 = sign( 1.0, ecpot(1 + $I_L1839_70) ) * ( -1.0 + 2.0 * fc(1 + $I_L1839_70) )
 1843.             $egf_S28 = sign( 1.0, egpot(1 + $I_L1839_70) ) * ( -1.0 + 2.0 * fg(1 + $I_L1839_70) )
 1840.             radt(1 + $I_L1839_70, 1) = radt(1 + $I_L1839_70, 1) + -( dtg(1 + $I_L1839_70) * rcdtg(1 + $I_L1839_70) ) + -( dtc(1 + $I_L1839_70) * rcdtc(1 + $I_L1839_70) )
 1841.             radt(1 + $I_L1839_70, 2) = radt(1 + $I_L1839_70, 2) + -( dtg(1 + $I_L1839_70) * rgdtg(1 + $I_L1839_70) ) + -( dtc(1 + $I_L1839_70) * rgdtc(1 + $I_L1839_70) )
 1844.             if ( $ecf_S27 <= 0.0 ) then
 1845.                hc(1 + $I_L1839_70) = ect(1 + $I_L1839_70) + hc(1 + $I_L1839_70) + eci(1 + $I_L1839_70)
 1846.                eci(1 + $I_L1839_70) = 0.0
 1847.                ect(1 + $I_L1839_70) = 0.0
 1848.                ec(1 + $I_L1839_70) = 0.0
 1848.             endif
 1850.             if ( $egf_S28 <= 0.0 ) then
 1851.                hg(1 + $I_L1839_70) = egs(1 + $I_L1839_70) + egt(1 + $I_L1839_70) + hg(1 + $I_L1839_70) + egi(1 + $I_L1839_70)
 1852.                egi(1 + $I_L1839_70) = 0.0
 1853.                egt(1 + $I_L1839_70) = 0.0
 1854.                egs(1 + $I_L1839_70) = 0.0
 1855.                eg(1 + $I_L1839_70) = 0.0
 1855.             endif
 1857.             $I_L1839_70 = 1 + $I_L1839_70
 1856.             if ( $I_L1839_70 >= nmax ) exit
 1856.          enddo
 1856.       endif
  913.       _free( t$1543 )
 1858.       return
 1858.       end
 1858.       
 1866.       
 1866.       subroutine cut( icheck, em, rhoair, rcp, wc, wg, fc, fg, hr, ra, rb, rd, rc, rg, ea, etc, etg, rst, rsoil, vcover, nmax, ncols )
 1866.       t$317 = ncols
 1937.       t$1586 = _zla( 0, ncols )
 1866.       t$1587 = _zla( 0, ncols )
 1866.       t$1588 = 2 * _zla( 0, ncols )
 1949.       if ( nmax > 0 ) then
 1949.          $I_L1949_6 = 0
 1949. !dir$ ivdep
 1949.          do
 1950.             if ( icheck(1 + $I_L1949_6) == 1 ) then
 1951.                rcp(1 + $I_L1949_6) = 1004.6 * rhoair(1 + $I_L1949_6)
 1952.                $rc_WR0_R0 = rb(1 + $I_L1949_6) + rb(1 + $I_L1949_6) * fc(1 + $I_L1949_6) + fc(1 + $I_L1949_6) * rst(1 + $I_L1949_6, 1)
 1952.                rc(1 + $I_L1949_6) = $rc_WR0_R0
 1953.                $coc_S6 = ( 1.0/$rc_WR0_R0 * ( 1.0 + -wc(1 + $I_L1949_6) ) ) + ( 5.0e-1 * wc(1 + $I_L1949_6) * 1.0/rb(1 + $I_L1949_6) )
 1954.                $rg_WR0_R1 = fg(1 + $I_L1949_6) * rst(1 + $I_L1949_6, 2)
 1954.                rg(1 + $I_L1949_6) = $rg_WR0_R1
 1955.                $rsurf_S1 = fg(1 + $I_L1949_6) * rsoil(1 + $I_L1949_6)
 1956.                $tem_S2 = ( vcover(1 + $I_L1949_6, 2) * 1.0/( $rg_WR0_R1 + rd(1 + $I_L1949_6) ) * ( 1.0 + -wg(1 + $I_L1949_6) ) )
 1957.                $cog2_S3 = $tem_S2 + ( ( 1.0 + -vcover(1 + $I_L1949_6, 2) ) * 1.0/( $rsurf_S1 + rd(1 + $I_L1949_6) ) ) + ( vcover(1 + $I_L1949_6, 2) * 1.0/( 44.0 + $rsurf_S1 + rd(1 + $I_L1949_6) ) )
 1960.                $cog1_S7 = $tem_S2 + hr(1 + $I_L1949_6) * ( $cog2_S3 + -$tem_S2 )
 1961.                $xnum_S4 = vcover(1 + $I_L1949_6, 2) * ( wg(1 + $I_L1949_6) * 1.0/rd(1 + $I_L1949_6) )
 1964.                $d2_S9 = $coc_S6 + ( $cog2_S3 + $xnum_S4 ) + 1.0/ra(1 + $I_L1949_6)
 1965.                $top_S10 = ( em(1 + $I_L1949_6) * 1.0/ra(1 + $I_L1949_6) ) + $coc_S6 * etc(1 + $I_L1949_6) + etg(1 + $I_L1949_6) * ( $xnum_S4 + $cog1_S7 )
 1969.                ea(1 + $I_L1949_6) = ( $top_S10 * 1.0/$d2_S9 )
 1969.             endif
 1971.             $I_L1949_6 = 1 + $I_L1949_6
 1970.             if ( $I_L1949_6 >= nmax ) exit
 1970.          enddo
 1970.       endif
 1972.       return
 1972.       end
 1972.       
 1982.       
 1982.       subroutine rbrd( rb, rd, tcta, tgta, u2, tg, rdc, rbc, itype, z2, mon, nmax, ncols, zlt2 )
 1982.       t$339 = ncols
 2035.       t$1589 = _zla( 0, ncols )
 1982.       t$1590 = _zla( 0, ncols )
 1982.       t$1591 = 2 * _zla( 0, ncols )
 2043.       t$1594 = 8 * _zla( 0, ncols )
 2042.       t$1595 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 2042.       t$1597 = t$1595 + 8 * _zla( 0, ncols )
 1982.       t$1592 = int( _alloc( t$1595 + 8 * _zla( 0, ncols ) ), 8 )
 2043.       t$1593 = t$1592
 2042.       t$1596 = t$1595 + t$1592
 2049.       if ( nmax > 0 ) then
 2049.          $I_L2049_6 = 0
 2049. !dir$ ivdep
 2049.          do
 2050.             $ntyp_S1 = itype(1 + $I_L2049_6)
 2051.             if ( tcta(1 + $I_L2049_6) > 0.0 ) then
 2052.                temdif(1 + $I_L2049_6) = 1.0000000000000001e-1 + tcta(1 + $I_L2049_6)
 2052.             else
 2054.                temdif(1 + $I_L2049_6) = 1.0000000000000001e-1
 2054.             endif
 2056.             rb(1 + $I_L2049_6) = 1.0/( ( 1.0/rbc(1 + $I_L2049_6) * _sqrt( u2(1 + $I_L2049_6) ) ) + 4.0000000000000001e-3 * zlt2(1 + $I_L2049_6, 1) )
 2057.             if ( tgta(1 + $I_L2049_6) > 0 ) then
 2058.                temdif(1 + $I_L2049_6) = 1.0000000000000001e-1 + tgta(1 + $I_L2049_6)
 2058.             else
 2060.                temdif(1 + $I_L2049_6) = 1.0000000000000001e-1
 2060.             endif
 2062.             $fih_WR0_R0 = _sqrt( 1.0 + ( 88.290000000000006 * temdif(1 + $I_L2049_6) * z2($ntyp_S1, mon(1 + $I_L2049_6)) * 1.0/( u2(1 + $I_L2049_6) * u2(1 + $I_L2049_6) * tg(1 + $I_L2049_6) ) ) )
 2064.             rd(1 + $I_L2049_6) = ( rdc(1 + $I_L2049_6) * 1.0/( $fih_WR0_R0 * u2(1 + $I_L2049_6) ) )
 2065.             $I_L2049_6 = 1 + $I_L2049_6
 2061.             if ( $I_L2049_6 >= nmax ) exit
 2061.          enddo
 2061.       endif
 1982.       _free( t$1592 )
 2066.       return
 2066.       end
 2066.       
 2073.       
 2073.       subroutine vntlax( ustarn, icheck, bps, dzm, cu, cuni, ctni, ustar, ra, ta, u2, tm, um, vm, d, z0, itype, z2, mon, nmax, jstneu, ncols )
 2073.       t$355 = ncols
 2165.       t$1598 = _zla( 0, ncols )
 2171.       t$1601 = 8 * _zla( 0, ncols )
 2073.       t$1599 = int( _alloc( 8 * _zla( 0, ncols ) ), 8 )
 2171.       t$1600 = t$1599
 2211.       if ( nmax > 0 ) then
 2211.          $I_L2211_18 = 0
 2211. !dir$ ivdep
 2211.          do
 2212.             if ( icheck(1 + $I_L2211_18) == 1 ) then
 2213.                $speedm_WR0_R0 = _sqrt( vm(1 + $I_L2211_18) * vm(1 + $I_L2211_18) + um(1 + $I_L2211_18) * um(1 + $I_L2211_18) )
 2214.                $speedm_WR0_R0 = max( 2.0, $speedm_WR0_R0 )
 2214.                speedm(1 + $I_L2211_18) = $speedm_WR0_R0
 2214.             endif
 2216.             $I_L2211_18 = 1 + $I_L2211_18
 2215.             if ( $I_L2211_18 >= nmax ) exit
 2215.          enddo
 2215.       endif
 2222.       if ( jstneu /= .false. ) then
 2223.          if ( nmax > 0 ) then
 2223.             $I_L2223_22 = 0
 2223. !dir$ ivdep
 2223.             do
 2224.                $ntyp_S2 = itype(1 + $I_L2223_22)
 2225.                $zl_S3 = z2($ntyp_S2, mon(1 + $I_L2223_22)) + 11.785 * z0(1 + $I_L2223_22)
 2226.                $cuni_WR0_R1 = 2.5 * log( ( 1.0/z0(1 + $I_L2223_22) * ( dzm(1 + $I_L2223_22) + -d(1 + $I_L2223_22) ) ) )
 2226.                cuni(1 + $I_L2223_22) = $cuni_WR0_R1
 2227.                $ustarn_WR0_R2 = ( speedm(1 + $I_L2223_22) * 1.0/$cuni_WR0_R1 )
 2227.                ustarn(1 + $I_L2223_22) = $ustarn_WR0_R2
 2228.                if ( $zl_S3 < dzm(1 + $I_L2223_22) ) then
 2229.                   $xct1_S4 = log( ( ( dzm(1 + $I_L2223_22) + -d(1 + $I_L2223_22) ) * 1.0/( $zl_S3 + -d(1 + $I_L2223_22) ) ) )
 2230.                   $xct2_S5 = log( ( 1.0/z0(1 + $I_L2223_22) * ( $zl_S3 + -d(1 + $I_L2223_22) ) ) )
 2231.                   $xctu1_S8 = $xct1_S4
 2232.                   $xctu2_S7 = log( ( ( $zl_S3 + -d(1 + $I_L2223_22) ) * 1.0/( z2($ntyp_S2, mon(1 + $I_L2223_22)) + -d(1 + $I_L2223_22) ) ) )
 2233.                   ctni(1 + $I_L2223_22) = 2.5 * ( $xct1_S4 + 7.5e-1 * $xct2_S5 )
 2233.                else
 2235.                   $xct2_S6 = log( ( 1.0/z0(1 + $I_L2223_22) * ( dzm(1 + $I_L2223_22) + -d(1 + $I_L2223_22) ) ) )
 2236.                   $xctu1_S8 = 0.0
 2237.                   $xctu2_S7 = log( ( ( dzm(1 + $I_L2223_22) + -d(1 + $I_L2223_22) ) * 1.0/( z2($ntyp_S2, mon(1 + $I_L2223_22)) + -d(1 + $I_L2223_22) ) ) )
 2238.                   ctni(1 + $I_L2223_22) = 1.875 * $xct2_S6
 2238.                endif
 2243.                u2(1 + $I_L2223_22) = speedm(1 + $I_L2223_22) + -2.5 * $ustarn_WR0_R2 * ( $xctu1_S8 + 7.5e-1 * $xctu2_S7 )
 2244.                $I_L2223_22 = 1 + $I_L2223_22
 2239.                if ( $I_L2223_22 >= nmax ) exit
 2239.             enddo
 2239.          endif
 2073.          _free( t$1599 )
 2073.       else
 2250.          if ( nmax > 0 ) then
 2250.             $I_L2250_20 = 0
 2250. !dir$ ivdep
 2250.             do
 2251.                if ( icheck(1 + $I_L2250_20) == 1 ) then
 2255.                   $thm_S11 = bps(1 + $I_L2250_20) * tm(1 + $I_L2250_20)
 2256.                   $ntyp_S10 = itype(1 + $I_L2250_20)
 2257.                   $zl_S15 = z2($ntyp_S10, mon(1 + $I_L2250_20)) + 11.785 * z0(1 + $I_L2250_20)
 2258.                   $thvgm_S12 = ta(1 + $I_L2250_20) + -$thm_S11
 2259.                   $rib_S13 = -( 9.8000000000000007 * $thvgm_S12 * ( dzm(1 + $I_L2250_20) + -d(1 + $I_L2250_20) ) * 1.0/( $thm_S11 * ( speedm(1 + $I_L2250_20) + -u2(1 + $I_L2250_20) ) * ( speedm(1 + $I_L2250_20) + -u2(1 + $I_L2250_20) ) ) )
 2264.                   $rib_S14 = min( 1.6500000000000001e-1, max( -1.5, $rib_S13 ) )
 2265.                   if ( ( min( 1.6500000000000001e-1, max( -1.5, $rib_S13 ) ) ) < 0.0 ) then
 2266.                      $grib_S18 = -$rib_S14
 2267.                      $grzl_S17 = -( $rib_S14 * 1.0/( dzm(1 + $I_L2250_20) + -d(1 + $I_L2250_20) ) * ( $zl_S15 + -d(1 + $I_L2250_20) ) )
 2268.                      $grz2_S16 = -( $rib_S14 * z0(1 + $I_L2250_20) * 1.0/( dzm(1 + $I_L2250_20) + -d(1 + $I_L2250_20) ) )
 2269.                      $fvv_S19 = -3.15e-1 * $rib_S14
 2270.                      if ( $zl_S15 < dzm(1 + $I_L2250_20) ) then
 2271.                         $ftt_S20 = ( 9.0400000000000003e-1 * $grib_S18 ) + -6.7800000000000005e-1 * $grz2_S16 + -2.2600000000000001e-1 * $grzl_S17
 2271.                      else
 2273.                         $ftt_S20 = 7.5e-1 * ( -( 9.0400000000000003e-1 * $grz2_S16 ) + ( 9.0400000000000003e-1 * $grib_S18 ) )
 2273.                      endif
 2275.                      $cui_S25 = cuni(1 + $I_L2250_20) + -$fvv_S19
 2276.                      $cti_S26 = ctni(1 + $I_L2250_20) + -$ftt_S20
 2276.                   else
 2278.                      $rzl_S22 = ( $zl_S15 + -d(1 + $I_L2250_20) ) * ( $rib_S14 * 1.0/( dzm(1 + $I_L2250_20) + -d(1 + $I_L2250_20) ) )
 2279.                      $rz2_S21 = z0(1 + $I_L2250_20) * ( $rib_S14 * 1.0/( dzm(1 + $I_L2250_20) + -d(1 + $I_L2250_20) ) )
 2280.                      $fvv_S23 = 66.849999999999994 * $rib_S14
 2281.                      if ( $zl_S15 < dzm(1 + $I_L2250_20) ) then
 2282.                         $ftt_S24 = ( 66.849999999999994 * $rib_S14 ) + -50.137499999999996 * $rz2_S21 + -16.712499999999999 * $rzl_S22
 2282.                      else
 2284.                         $ftt_S24 = 7.5e-1 * ( ( 66.849999999999994 * $rib_S14 ) + -( 66.849999999999994 * $rz2_S21 ) )
 2284.                      endif
 2286.                      $cui_S25 = $fvv_S23 + cuni(1 + $I_L2250_20)
 2287.                      $cti_S26 = $ftt_S24 + ctni(1 + $I_L2250_20)
 2287.                   endif
 2289.                   cu(1 + $I_L2250_20) = 1.0/$cui_S25
 2296.                   $ustar_WR0_R3 = speedm(1 + $I_L2250_20) * 1.0/$cui_S25
 2296.                   ustar(1 + $I_L2250_20) = $ustar_WR0_R3
 2301.                   ra(1 + $I_L2250_20) = ( max( 8.0000000000000004e-1, ( $cti_S26 * 1.0/$ustar_WR0_R3 ) ) )
 2301.                endif
 2303.                $I_L2250_20 = 1 + $I_L2250_20
 2302.                if ( $I_L2250_20 >= nmax ) exit
 2302.             enddo
 2302.          endif
 2073.          _free( t$1599 )
 2073.       endif
 2304.       return
 2304.       end
 2304.       
 2313.       
 2313.       subroutine runoff( roff, tg, td, capac, w, itype, dtc3x, nmax, ncols )
 2313.       t$376 = ncols
 2373.       t$1602 = _zla( 0, ncols )
 2313.       t$1603 = _zla( 0, ncols )
 2313.       t$1604 = 2 * _zla( 0, ncols )
 2313.       t$1605 = 3 * _zla( 0, ncols )
 2380.       t$1608 = 8 * _zla( 0, ncols )
 2376.       t$1609 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 2376.       t$1611 = t$1609 + 8 * _zla( 0, ncols )
 2375.       t$1612 = 8 * ( 7 + t$1609 + 8 * _zla( 0, ncols ) ) / 8
 2375.       t$1614 = t$1612 + 8 * _zla( 0, ncols )
 2377.       t$1615 = 8 * ( 7 + t$1612 + 8 * _zla( 0, ncols ) ) / 8
 2377.       t$1617 = t$1615 + 24 * _zla( 0, ncols )
 2378.       t$1618 = 8 * ( 7 + t$1615 + 24 * _zla( 0, ncols ) ) / 8
 2378.       t$1620 = t$1618 + 24 * _zla( 0, ncols )
 2379.       t$1621 = 8 * ( 7 + t$1618 + 24 * _zla( 0, ncols ) ) / 8
 2379.       t$1623 = t$1621 + 24 * _zla( 0, ncols )
 2313.       t$1606 = int( _alloc( t$1621 + 24 * _zla( 0, ncols ) ), 8 )
 2380.       t$1607 = t$1606
 2376.       t$1610 = t$1609 + t$1606
 2375.       t$1613 = t$1612 + t$1606
 2377.       t$1616 = t$1615 + t$1606
 2378.       t$1619 = t$1618 + t$1606
 2379.       t$1622 = t$1621 + t$1606
 2414.       $subdti_S8 = 1.0/dtc3x
 2415.       $F_A33 = ncols
 2415.       if ( ncols > 0 ) then
 2415.          $I_L2415_38 = 0
 2415. !dir$ ivdep
 2415.          do
 2415.             q3g(1 + $I_L2415_38) = 0.0
 2415.             $I_L2415_38 = 1 + $I_L2415_38
 2415.             if ( $I_L2415_38 >= $F_A33 ) exit
 2415.          enddo
 2415.       endif
 2419.       if ( nmax > 0 ) then
 2419.          $I_L2419_30 = 0
 2419. !dir$ ivdep
 2419.          do
 2420.             if ( w(1 + $I_L2419_30, 1) < 0.0 ) then
 2420.                w(1 + $I_L2419_30, 1) = 1.0e-3
 2420.             endif
 2421.             if ( w(1 + $I_L2419_30, 2) < 0.0 ) then
 2421.                w(1 + $I_L2419_30, 2) = 1.0e-3
 2421.             endif
 2422.             if ( w(1 + $I_L2419_30, 3) < 0.0 ) then
 2422.                w(1 + $I_L2419_30, 3) = 1.0e-3
 2422.             endif
 2423.             $I_L2419_30 = 1 + $I_L2419_30
 2422.             if ( $I_L2419_30 >= nmax ) exit
 2422.          enddo
 2422.       endif
 2429.       $SC_bee_I0 = bee%dim_1%EX
 2429.       $SC_bee_I1 = bee%dim_1%LB
 2426.       if ( nmax > 0 ) then
 2425.          $I_L2425_40 = 0
 2425. !dir$ blocking_size( 1, 1 )
 2425.          do
 2426.             $I_L2426_32 = 0
 2426. !dir$ ivdep
 2426. !dir$ blocking_size( 256, 256 )
 2426.             do
 2427.                $ntyp_S3 = itype(1 + $I_L2426_32)
 2428.                $twi_WR0_R0 = min( 1.0, max( 2.9999999999999999e-2, w(1 + $I_L2426_32, 1 + $I_L2425_40) ) )
 2428.                twi(1 + $I_L2426_32, 1 + $I_L2425_40) = $twi_WR0_R0
 2429.                twip(1 + $I_L2426_32, 1 + $I_L2425_40) = _expn( -( (bee%base_addr)($ntyp_S3, 0) * log( $twi_WR0_R0 ) ) )
 2430.                twipp(1 + $I_L2426_32, 1 + $I_L2425_40) = _expn( ( 3.0 + 2.0 * (bee%base_addr)($ntyp_S3, 0) ) * log( min( 1.0, $twi_WR0_R0 ) ) )
 2431.                $I_L2426_32 = 1 + $I_L2426_32
 2426.                if ( $I_L2426_32 >= nmax ) exit
 2426.             enddo
 2432.             $I_L2425_40 = 1 + $I_L2425_40
 2431.             if ( $I_L2425_40 >= 3 ) exit
 2431.          enddo
 2449.          $SC_zdepth_I4 = zdepth%dim_1%EX
 2449.          $SC_zdepth_I5 = zdepth%dim_1%LB
 2449.          $SC_zdepth_I7 = zdepth%dim_2%SM
 2449.          $SC_zdepth_I6 = zdepth%dim_2%EX
 2449.          $SC_zdepth_I8 = zdepth%dim_2%LB
 2449.          $SC_satco_I9 = satco%dim_1%EX
 2449.          $SC_satco_I10 = satco%dim_1%LB
 2437.          $SC_poros_I2 = poros%dim_1%EX
 2437.          $SC_poros_I3 = poros%dim_1%LB
 2448.          $SC_bee_I0 = bee%dim_1%EX
 2448.          $SC_bee_I1 = bee%dim_1%LB
 2434.          $I_L2434_34 = 0
 2434. !dir$ ivdep
 2434.          do
 2435.             $ntyp_S5 = itype(1 + $I_L2434_34)
 2436.             $slop_S7 = 1.736e-1
 2437.             if ( (poros%base_addr)($ntyp_S5, 0) == 4.3519999999999998e-1 ) then
 2437.                $slop_S7 = 8.72e-2
 2437.             endif
 2438.             if ( (poros%base_addr)($ntyp_S5, 0) == 4.577e-1 ) then
 2438.                $slop_S7 = 3.4200000000000003e-1
 2438.             endif
 2448.             $pows_S6 = 2.0 + 2.0 * (bee%base_addr)($ntyp_S5, 0)
 2449.             $q3g_WR0_R1 = _expn( -( $pows_S6 * log( twi(1 + $I_L2434_34, 3) ) ) ) + dtc3x * $pows_S6 * $slop_S7 * ( (satco%base_addr)($ntyp_S5, 0) * 1.0/( (poros%base_addr)($ntyp_S5, 0) * (zdepth%base_addr)($ntyp_S5, 3, 0) ) )
 2458.             $q3g_WR0_R1 = min( max( 0.0, -( $subdti_S8 * (zdepth%base_addr)($ntyp_S5, 3, 0) * (poros%base_addr)($ntyp_S5, 0) * ( _expn( -( 1.0/$pows_S6 * log( $q3g_WR0_R1 ) ) ) + -w(1 + $I_L2434_34, 3) ) ) ), $subdti_S8 * w(1 + $I_L2434_34, 3) * (poros%base_addr)($ntyp_S5, 0) * (zdepth%base_addr)($ntyp_S5, 3, 0) ) + 1.1574074074074074e-8 * w(1 + $I_L2434_34, 3) * (poros%base_addr)($ntyp_S5, 0) * (zdepth%base_addr)($ntyp_S5, 3, 0)
 2458.             q3g(1 + $I_L2434_34) = $q3g_WR0_R1
 2460.             $I_L2434_34 = 1 + $I_L2434_34
 2438.             if ( $I_L2434_34 >= nmax ) exit
 2438.          enddo
 2484.          $SC_phsat_I11 = phsat%dim_1%EX
 2484.          $SC_phsat_I12 = phsat%dim_1%LB
 2484.          $SC_zdepth_I4 = zdepth%dim_1%EX
 2484.          $SC_zdepth_I5 = zdepth%dim_1%LB
 2484.          $SC_zdepth_I7 = zdepth%dim_2%SM
 2484.          $SC_zdepth_I6 = zdepth%dim_2%EX
 2484.          $SC_zdepth_I8 = zdepth%dim_2%LB
 2512.          $SC_satco_I9 = satco%dim_1%EX
 2512.          $SC_satco_I10 = satco%dim_1%LB
 2518.          $SC_poros_I2 = poros%dim_1%EX
 2518.          $SC_poros_I3 = poros%dim_1%LB
 2483.          $SC_bee_I0 = bee%dim_1%EX
 2483.          $SC_bee_I1 = bee%dim_1%LB
 2479.          $I_L2479_36 = 0
 2479. !dir$ ivdep
 2479.          do
 2480.             $ntyp_S12 = itype(1 + $I_L2479_36)
 2481.             $wmax_S10 = max( 5.0000000000000003e-2, max( w(1 + $I_L2479_36, 3), max( w(1 + $I_L2479_36, 2), w(1 + $I_L2479_36, 1) ) ) )
 2483.             $pmax_S13 = _expn( -( (bee%base_addr)($ntyp_S12, 0) * log( ( min( 1.0, $wmax_S10 ) ) ) ) )
 2484.             $wmin_S14 = _expn( -( log( $pmax_S13 + -( 2.0 * 1.0/( (phsat%base_addr)($ntyp_S12, 0) * ( (zdepth%base_addr)($ntyp_S12, 3, 0) + (zdepth%base_addr)($ntyp_S12, 1, 0) + 2.0 * (zdepth%base_addr)($ntyp_S12, 2, 0) ) ) ) ) * 1.0/(bee%base_addr)($ntyp_S12, 0) ) )
 2487.             $wmin_S15 = max( 2.0e-2, min( $wmin_S14, min( w(1 + $I_L2479_36, 3), min( w(1 + $I_L2479_36, 2), w(1 + $I_L2479_36, 1) ) ) ) )
 2488.             $pmin_S16 = _expn( -( (bee%base_addr)($ntyp_S12, 0) * log( $wmin_S15 ) ) )
 2489.             $dpdw_S19 = ( (phsat%base_addr)($ntyp_S12, 0) * ( $pmax_S13 + -$pmin_S16 ) * 1.0/( -$wmin_S15 + ( min( 1.0, $wmax_S10 ) ) ) )
 2493.             $rsame_S21 = 0.0
 2494.             $avk_WR0_R5 = -( twip(1 + $I_L2479_36, 2) * twipp(1 + $I_L2479_36, 2) ) + twip(1 + $I_L2479_36, 1) * twipp(1 + $I_L2479_36, 1)
 2495.             $div_WR0_R6 = twip(1 + $I_L2479_36, 2) + -twip(1 + $I_L2479_36, 1)
 2496.             if ( abs( $div_WR0_R6 ) <= 9.9999999999999995e-8 ) then
 2496.                $rsame_S21 = 1.0
 2496.             endif
 2506.             $tsnow_S18 = min( 273.15000000000003, tg(1 + $I_L2479_36) )
 2507.             $areas_S17 = min( 9.99e-1, 13.199999999999999 * capac(1 + $I_L2479_36, 2) )
 2508.             $tgs_S20 = $areas_S17 * $tsnow_S18 + tg(1 + $I_L2479_36) * ( 1.0 + -$areas_S17 )
 2517.             $dpdwdz_S23 = ( 2.0 * $dpdw_S19 * 1.0/( (zdepth%base_addr)($ntyp_S12, 2, 0) + (zdepth%base_addr)($ntyp_S12, 1, 0) ) )
 2511.             $props_S22 = max( 5.0000000000000003e-2, min( 1.0, ( 1.0000000000000001e-1 * ( -263.16000000000003 + $tgs_S20 ) ) ) )
 2512.             $avk_WR0_R5 = $props_S22 * min( max( ( $avk_WR0_R5 * (satco%base_addr)($ntyp_S12, 0) * 1.0/( $rsame_S21 + $div_WR0_R6 * ( 1.0 + ( 3.0 * 1.0/(bee%base_addr)($ntyp_S12, 0) ) ) ) ), (satco%base_addr)($ntyp_S12, 0) * min( twipp(1 + $I_L2479_36, 1), twipp(1 + $I_L2479_36, 2) ) ), 1.01 * ( (satco%base_addr)($ntyp_S12, 0) * max( twipp(1 + $I_L2479_36, 1), twipp(1 + $I_L2479_36, 2) ) ) )
 2518.             $aaa_S28 = 1.0 + ( dtc3x * $dpdwdz_S23 * $avk_WR0_R5 * ( 1.0/(zdepth%base_addr)($ntyp_S12, 1, 0) + 1.0/(zdepth%base_addr)($ntyp_S12, 2, 0) ) * 1.0/(poros%base_addr)($ntyp_S12, 0) )
 2521.             $bbb_S30 = -( dtc3x * 1.0/(poros%base_addr)($ntyp_S12, 0) * ( $dpdwdz_S23 * $avk_WR0_R5 * 1.0/(zdepth%base_addr)($ntyp_S12, 2, 0) ) )
 2522.             $ccc_S33 = $avk_WR0_R5 * ( 1.0 + $dpdwdz_S23 * ( w(1 + $I_L2479_36, 1) + -w(1 + $I_L2479_36, 2) ) )
 2527.             $rsame_S25 = 0.0
 2528.             $avk_WR0_R5 = -( twipp(1 + $I_L2479_36, 3) * twip(1 + $I_L2479_36, 3) ) + twip(1 + $I_L2479_36, 2) * twipp(1 + $I_L2479_36, 2)
 2529.             $div_WR0_R6 = twip(1 + $I_L2479_36, 3) + -twip(1 + $I_L2479_36, 2)
 2513.             $q3g_WR0_R7 = q3g(1 + $I_L2479_36) * ( max( 5.0000000000000003e-2, min( 1.0, ( 1.0000000000000001e-1 * ( -263.16000000000003 + $tgs_S20 ) ) ) ) )
 2530.             if ( abs( $div_WR0_R6 ) <= 9.9999999999999995e-8 ) then
 2530.                $rsame_S25 = 1.0
 2530.             endif
 2543.             $ts_S24 = td(1 + $I_L2479_36)
 2551.             $dpdwdz_S26 = ( 2.0 * $dpdw_S19 * 1.0/( (zdepth%base_addr)($ntyp_S12, 2, 0) + (zdepth%base_addr)($ntyp_S12, 3, 0) ) )
 2546.             $avk_WR0_R5 = min( max( ( $avk_WR0_R5 * (satco%base_addr)($ntyp_S12, 0) * 1.0/( $rsame_S25 + $div_WR0_R6 * ( 1.0 + ( 3.0 * 1.0/(bee%base_addr)($ntyp_S12, 0) ) ) ) ), (satco%base_addr)($ntyp_S12, 0) * min( twipp(1 + $I_L2479_36, 2), twipp(1 + $I_L2479_36, 3) ) ), 1.01 * ( (satco%base_addr)($ntyp_S12, 0) * max( twipp(1 + $I_L2479_36, 2), twipp(1 + $I_L2479_36, 3) ) ) ) * ( max( 5.0000000000000003e-2, min( 1.0, ( 1.0000000000000001e-1 * ( -263.16000000000003 + $ts_S24 ) ) ) ) )
 2552.             $aaa_S27 = 1.0 + ( dtc3x * $dpdwdz_S26 * $avk_WR0_R5 * 1.0/(poros%base_addr)($ntyp_S12, 0) * ( 1.0/(zdepth%base_addr)($ntyp_S12, 2, 0) + 1.0/(zdepth%base_addr)($ntyp_S12, 3, 0) ) )
 2555.             $bbb_S29 = -( dtc3x * 1.0/(poros%base_addr)($ntyp_S12, 0) * ( $dpdwdz_S26 * $avk_WR0_R5 * 1.0/(zdepth%base_addr)($ntyp_S12, 2, 0) ) )
 2547.             $q3g_WR0_R7 = $q3g_WR0_R7 * ( max( 5.0000000000000003e-2, min( 1.0, ( 1.0000000000000001e-1 * ( -263.16000000000003 + $ts_S24 ) ) ) ) )
 2547.             q3g(1 + $I_L2479_36) = $q3g_WR0_R7
 2556.             $ccc_S34 = $avk_WR0_R5 * ( 1.0 + ( dtc3x * 1.0/(poros%base_addr)($ntyp_S12, 0) * ( $dpdwdz_S26 * $q3g_WR0_R7 * 1.0/(zdepth%base_addr)($ntyp_S12, 3, 0) ) ) + $dpdwdz_S26 * ( w(1 + $I_L2479_36, 2) + -w(1 + $I_L2479_36, 3) ) )
 2593.             $denom_S32 = ( -( $bbb_S29 * $bbb_S30 ) + $aaa_S27 * $aaa_S28 )
 2594.             $rdenom_S31 = 0.0
 2595.             if ( abs( ( -( $bbb_S29 * $bbb_S30 ) + $aaa_S27 * $aaa_S28 ) ) < 9.9999999999999995e-7 ) then
 2595.                $rdenom_S31 = 1.0
 2595.             endif
 2603.             $w_WR0_R2 = w(1 + $I_L2479_36, 3) + -( dtc3x * $q3g_WR0_R7 * 1.0/( (zdepth%base_addr)($ntyp_S12, 3, 0) * (poros%base_addr)($ntyp_S12, 0) ) )
 2608.             $qmax_S36 = w(1 + $I_L2479_36, 1) * ( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 1, 0) * 1.0/dtc3x )
 2609.             $qmin_S37 = -( w(1 + $I_L2479_36, 2) * ( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 2, 0) * 1.0/dtc3x ) )
 2612.             $w_WR0_R4 = w(1 + $I_L2479_36, 1) + -( ( max( $qmin_S37, ( min( $qmax_S36, ( ( ( 1.0 + -$rdenom_S31 ) * 1.0/( $rdenom_S31 + $denom_S32 ) ) * ( -( $bbb_S30 * $ccc_S34 ) + $aaa_S27 * $ccc_S33 ) ) ) ) ) ) * 1.0/( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 1, 0) * 1.0/dtc3x ) )
 2613.             $w_WR0_R3 = w(1 + $I_L2479_36, 2) + ( ( max( $qmin_S37, ( min( $qmax_S36, ( ( ( 1.0 + -$rdenom_S31 ) * 1.0/( $rdenom_S31 + $denom_S32 ) ) * ( -( $bbb_S30 * $ccc_S34 ) + $aaa_S27 * $ccc_S33 ) ) ) ) ) ) * 1.0/( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 2, 0) * 1.0/dtc3x ) )
 2618.             $qmax_S38 = $w_WR0_R3 * ( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 2, 0) * 1.0/dtc3x )
 2619.             $qmin_S39 = -( $w_WR0_R2 * ( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 3, 0) * 1.0/dtc3x ) )
 2637.             $excess_S40 = max( 0.0, ( -1.0 + $w_WR0_R4 ) )
 2622.             $w_WR0_R3 = $w_WR0_R3 + -( ( max( $qmin_S39, ( min( $qmax_S38, ( ( ( 1.0 + -$rdenom_S31 ) * 1.0/( $rdenom_S31 + $denom_S32 ) ) * ( -( $bbb_S29 * $ccc_S33 ) + $aaa_S28 * $ccc_S34 ) ) ) ) ) ) * 1.0/( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 2, 0) * 1.0/dtc3x ) )
 2643.             $excess_S41 = max( 0.0, ( -1.0 + $w_WR0_R3 ) )
 2623.             $w_WR0_R2 = $w_WR0_R2 + ( ( max( $qmin_S39, ( min( $qmax_S38, ( ( ( 1.0 + -$rdenom_S31 ) * 1.0/( $rdenom_S31 + $denom_S32 ) ) * ( -( $bbb_S29 * $ccc_S33 ) + $aaa_S28 * $ccc_S34 ) ) ) ) ) ) * 1.0/( (poros%base_addr)($ntyp_S12, 0) * (zdepth%base_addr)($ntyp_S12, 3, 0) * 1.0/dtc3x ) )
 2649.             $excess_S42 = max( 0.0, ( -1.0 + $w_WR0_R2 ) )
 2638.             $w_WR0_R4 = $w_WR0_R4 + -( max( 0.0, ( -1.0 + $w_WR0_R4 ) ) )
 2661.             $deficit_S43 = max( 0.0, ( 9.9999999999999998e-13 + -$w_WR0_R4 ) )
 2662.             $w_WR0_R4 = $w_WR0_R4 + ( max( 0.0, ( 9.9999999999999998e-13 + -$w_WR0_R4 ) ) )
 2662.             w(1 + $I_L2479_36, 1) = $w_WR0_R4
 2644.             $w_WR0_R3 = $w_WR0_R3 + -( max( 0.0, ( -1.0 + $w_WR0_R3 ) ) )
 2663.             $w_WR0_R3 = $w_WR0_R3 + -( $deficit_S43 * (zdepth%base_addr)($ntyp_S12, 1, 0) * 1.0/(zdepth%base_addr)($ntyp_S12, 2, 0) )
 2667.             $deficit_S44 = max( 0.0, ( 9.9999999999999998e-13 + -$w_WR0_R3 ) )
 2668.             $w_WR0_R3 = $w_WR0_R3 + ( max( 0.0, ( 9.9999999999999998e-13 + -$w_WR0_R3 ) ) )
 2668.             w(1 + $I_L2479_36, 2) = $w_WR0_R3
 2650.             $w_WR0_R2 = $w_WR0_R2 + -( max( 0.0, ( -1.0 + $w_WR0_R2 ) ) )
 2681.             $w_WR0_R2 = max( 9.9999999999999998e-13, $w_WR0_R2 + -( $deficit_S44 * (zdepth%base_addr)($ntyp_S12, 2, 0) * 1.0/(zdepth%base_addr)($ntyp_S12, 3, 0) ) )
 2681.             w(1 + $I_L2479_36, 3) = $w_WR0_R2
 2651.             roff(1 + $I_L2479_36) = roff(1 + $I_L2479_36) + dtc3x * $q3g_WR0_R7 + $excess_S40 * (zdepth%base_addr)($ntyp_S12, 1, 0) * (poros%base_addr)($ntyp_S12, 0) + $excess_S42 * (zdepth%base_addr)($ntyp_S12, 3, 0) * (poros%base_addr)($ntyp_S12, 0) + $excess_S41 * (zdepth%base_addr)($ntyp_S12, 2, 0) * (poros%base_addr)($ntyp_S12, 0)
 2682.             $I_L2479_36 = 1 + $I_L2479_36
 2595.             if ( $I_L2479_36 >= nmax ) exit
 2595.          enddo
 2595.       endif
 2313.       _free( t$1606 )
 2683.       return
 2683.       end
 2683.       
 2691.       
 2691.       subroutine stres2( icount, ft1, fp1, icheck, ta, ea, rst, phsoil, stm, tc, tg, w, vcover, itype, rootd, zdepth, nmax, ncols, topt2, tll2, tu2, defac2, ph12, ph22 )
 2691.       t$388 = ncols
 2733.       t$1624 = _zla( 0, ncols )
 2691.       t$1625 = _zla( 0, ncols )
 2691.       t$1626 = 2 * _zla( 0, ncols )
 2691.       t$1627 = 3 * _zla( 0, ncols )
 2691.       t$1628 = 3 * _zla( 0, ncols )
 2767.       t$1631 = 8 * _zla( 0, ncols )
 2769.       t$1632 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 2769.       t$1634 = t$1632 + 8 * _zla( 0, ncols )
 2770.       t$1635 = 8 * ( 7 + t$1632 + 8 * _zla( 0, ncols ) ) / 8
 2770.       t$1637 = t$1635 + 8 * _zla( 0, ncols )
 2771.       t$1638 = 8 * ( 7 + t$1635 + 8 * _zla( 0, ncols ) ) / 8
 2771.       t$1640 = t$1638 + 8 * _zla( 0, ncols )
 2768.       t$1641 = 8 * ( 7 + t$1638 + 8 * _zla( 0, ncols ) ) / 8
 2768.       t$1643 = t$1641 + 8 * _zla( 0, ncols )
 2772.       t$1644 = 8 * ( 7 + t$1641 + 8 * _zla( 0, ncols ) ) / 8
 2772.       t$1646 = t$1644 + 8 * _zla( 0, ncols )
 2766.       t$1647 = 8 * ( 7 + t$1644 + 8 * _zla( 0, ncols ) ) / 8
 2766.       t$1649 = t$1647 + 8 * _zla( 0, ncols )
 2691.       t$1629 = int( _alloc( t$1647 + 8 * _zla( 0, ncols ) ), 8 )
 2767.       t$1630 = t$1629
 2769.       t$1633 = t$1632 + t$1629
 2770.       t$1636 = t$1635 + t$1629
 2771.       t$1639 = t$1638 + t$1629
 2768.       t$1642 = t$1641 + t$1629
 2772.       t$1645 = t$1644 + t$1629
 2766.       t$1648 = t$1647 + t$1629
 2788.       if ( icount == 1 ) then
 2790.          if ( nmax > 0 ) then
 2790.             $I_L2790_18 = 0
 2790. !dir$ ivdep
 2790.             do
 2791.                if ( icheck(1 + $I_L2790_18) == 1 ) then
 2792.                   $ntyp_S1 = itype(1 + $I_L2790_18)
 2793.                   if ( $ntyp_S1 /= 11 ) then
 2793.                      if ( $ntyp_S1 /= 13 ) then
 2797.                         $tv_WR0_R0 = tc(1 + $I_L2790_18)
 2803.                         $d2_WR0_R1 = ( 1.0/( topt2(1 + $I_L2790_18, 1) + -tll2(1 + $I_L2790_18, 1) ) * ( tu2(1 + $I_L2790_18, 1) + -topt2(1 + $I_L2790_18, 1) ) )
 2802.                         $tv_WR0_R0 = max( min( $tv_WR0_R0, ( -1.0000000000000001e-1 + tu2(1 + $I_L2790_18, 1) ) ), ( 1.0000000000000001e-1 + tll2(1 + $I_L2790_18, 1) ) )
 2805.                         $ft_WR0_R2 = _expn( $d2_WR0_R1 * log( ( ( tu2(1 + $I_L2790_18, 1) + -$tv_WR0_R0 ) * 1.0/( tu2(1 + $I_L2790_18, 1) + -topt2(1 + $I_L2790_18, 1) ) ) ) ) * ( 1.0/( topt2(1 + $I_L2790_18, 1) + -tll2(1 + $I_L2790_18, 1) ) * ( $tv_WR0_R0 + -tll2(1 + $I_L2790_18, 1) ) )
 2811.                         $ft_WR0_R2 = max( 1.0000000000000001e-5, min( 1.0, $ft_WR0_R2 ) )
 2812.                         ft1(1 + $I_L2790_18) = $ft_WR0_R2
 2816.                         $xrot_S2 = rootd($ntyp_S1, 1)
 2818.                         $SC_dep_I1 = 0.0
 2819.                         $SC_dep_I2 = 0.0
 2820.                         $SC_dep_I0 = min( $xrot_S2, zdepth($ntyp_S1, 1) )
 2821.                         $xrot_S3 = $xrot_S2 + -zdepth($ntyp_S1, 1)
 2822.                         if ( $xrot_S2 + -zdepth($ntyp_S1, 1) > 0.0 ) then
 2823.                            $SC_dep_I1 = min( $xrot_S3, zdepth($ntyp_S1, 2) )
 2824.                            $xrot_S3 = $xrot_S3 + -zdepth($ntyp_S1, 2)
 2824.                         endif
 2826.                         if ( $xrot_S3 > 0.0 ) then
 2827.                            $SC_dep_I2 = min( $xrot_S3, zdepth($ntyp_S1, 3) )
 2827.                         endif
 2830.                         $xdr_S4 = ( 1.0/$xrot_S2 * ( $SC_dep_I0 * phsoil(1 + $I_L2790_18, 1) + $SC_dep_I1 * phsoil(1 + $I_L2790_18, 2) + $SC_dep_I2 * phsoil(1 + $I_L2790_18, 3) ) )
 2834.                         $xdr_S5 = log( max( 1.0000000000000001e-5, -$xdr_S4 ) )
 2835.                         $arg_S6 = -( ph12(1 + $I_L2790_18, 1) * ( ph22(1 + $I_L2790_18, 1) + -$xdr_S5 ) )
 2837.                         $fp_WR0_R3 = 1.0 + -_expn( ( min( 0.0, $arg_S6 ) ) )
 2838.                         if ( w(1 + $I_L2790_18, 2) > 1.4999999999999999e-1 ) then
 2838.                            $fp_WR0_R3 = max( 5.0000000000000003e-2, $fp_WR0_R3 )
 2838.                         endif
 2840.                         $fp_WR0_R3 = max( 1.0000000000000001e-5, min( 1.0, $fp_WR0_R3 ) )
 2841.                         fp1(1 + $I_L2790_18) = $fp_WR0_R3
 2841.                      endif
 2841.                   endif
 2841.                endif
 2844.                $I_L2790_18 = 1 + $I_L2790_18
 2843.                if ( $I_L2790_18 >= nmax ) exit
 2843.             enddo
 2843.          endif
 2843.       endif
 2847.       if ( nmax > 0 ) then
 2847.          $I_L2847_20 = 0
 2847. !dir$ ivdep
 2847.          do
 2848.             if ( icheck(1 + $I_L2847_20) == 1 ) then
 2850.                $drop_WR0_R4 = -ea(1 + $I_L2847_20) + _expn( 21.65605 + -( 5418.0 * 1.0/ta(1 + $I_L2847_20) ) )
 2851.                $fd_WR0_R5 = max( 1.0000000000000001e-5, 1.0/( 1.0 + $drop_WR0_R4 * defac2(1 + $I_L2847_20, 1) ) )
 2852.                $fd_WR0_R5 = min( 1.0, $fd_WR0_R5 )
 2852.                fd(1 + $I_L2847_20) = $fd_WR0_R5
 2852.             endif
 2854.             $I_L2847_20 = 1 + $I_L2847_20
 2853.             if ( $I_L2847_20 >= nmax ) exit
 2853.          enddo
 2856.          $I_L2856_22 = 0
 2856. !dir$ ivdep
 2856.          do
 2857.             if ( icheck(1 + $I_L2856_22) == 1 ) then
 2858.                $ntyp_S10 = itype(1 + $I_L2856_22)
 2859.                rst(1 + $I_L2856_22, 2) = 100000.0
 2860.                if ( $ntyp_S10 == 11 .orelse. $ntyp_S10 == 13 ) then
 2861.                   rst(1 + $I_L2856_22, 1) = 100000.0
 2861.                else
 2864.                   $ftpd_WR0_R6 = fd(1 + $I_L2856_22) * fp1(1 + $I_L2856_22) * ft1(1 + $I_L2856_22)
 2865.                   $rst_WR0_R7 = ( stm(1 + $I_L2856_22, 1) * 1.0/( $ftpd_WR0_R6 * vcover(1 + $I_L2856_22, 1) ) )
 2866.                   $rst_WR0_R7 = min( 100000.0, $rst_WR0_R7 )
 2866.                   rst(1 + $I_L2856_22, 1) = $rst_WR0_R7
 2866.                endif
 2866.             endif
 2868.             $I_L2856_22 = 1 + $I_L2856_22
 2868.             if ( $I_L2856_22 >= nmax ) exit
 2868.          enddo
 2868.       endif
 2691.       _free( t$1629 )
 2870.       return
 2870.       end
 2870.       
 2878.       
 2878.       subroutine update( bps, deadtg, deadtc, deadqm, ect, eci, egt, egi, egs, eg, hc, hg, ecmass, egmass, etmass, hflux, chf, shf, ra, rb, rd, ea, etc, etg, btc, btg, cc, cg, dtc, dtg, dtm, dqm, tc, tg, td, capac, tm, nmax, dtc3x, ncols )
 2878.       t$428 = ncols
 2994.       t$1650 = _zla( 0, ncols )
 2878.       t$1651 = _zla( 0, ncols )
 2878.       t$1652 = 2 * _zla( 0, ncols )
 3004.       t$1655 = 8 * _zla( 0, ncols )
 3003.       t$1656 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 3003.       t$1658 = t$1656 + 8 * _zla( 0, ncols )
 3005.       t$1659 = 8 * ( 7 + t$1656 + 8 * _zla( 0, ncols ) ) / 8
 3005.       t$1661 = t$1659 + 8 * _zla( 0, ncols )
 3006.       t$1662 = 8 * ( 7 + t$1659 + 8 * _zla( 0, ncols ) ) / 8
 3006.       t$1664 = t$1662 + 8 * _zla( 0, ncols )
 3007.       t$1665 = 8 * ( 7 + t$1662 + 8 * _zla( 0, ncols ) ) / 8
 3007.       t$1667 = t$1665 + 8 * _zla( 0, ncols )
 3002.       t$1668 = 8 * ( 7 + t$1665 + 8 * _zla( 0, ncols ) ) / 8
 3002.       t$1670 = t$1668 + 8 * _zla( 0, ncols )
 3000.       t$1671 = 8 * ( 7 + t$1668 + 8 * _zla( 0, ncols ) ) / 8
 3000.       t$1673 = t$1671 + 8 * _zla( 0, ncols )
 2999.       t$1674 = 8 * ( 7 + t$1671 + 8 * _zla( 0, ncols ) ) / 8
 2999.       t$1676 = t$1674 + 8 * _zla( 0, ncols )
 3001.       t$1677 = 8 * ( 7 + t$1674 + 8 * _zla( 0, ncols ) ) / 8
 3001.       t$1679 = t$1677 + 8 * _zla( 0, ncols )
 2878.       t$1653 = int( _alloc( t$1677 + 8 * _zla( 0, ncols ) ), 8 )
 3004.       t$1654 = t$1653
 3003.       t$1657 = t$1656 + t$1653
 3005.       t$1660 = t$1659 + t$1653
 3006.       t$1663 = t$1662 + t$1653
 3007.       t$1666 = t$1665 + t$1653
 3002.       t$1669 = t$1668 + t$1653
 3000.       t$1672 = t$1671 + t$1653
 2999.       t$1675 = t$1674 + t$1653
 3001.       t$1678 = t$1677 + t$1653
 3022.       if ( nmax > 0 ) then
 3022.          $I_L3022_42 = 0
 3022. !dir$ ivdep
 3022.          do
 3023.             tgen(1 + $I_L3022_42) = dtg(1 + $I_L3022_42) + tg(1 + $I_L3022_42)
 3024.             tcen(1 + $I_L3022_42) = dtc(1 + $I_L3022_42) + tc(1 + $I_L3022_42)
 3039.             $I_L3022_42 = 1 + $I_L3022_42
 3022.             if ( $I_L3022_42 >= nmax ) exit
 3022.          enddo
 3040.          $I_L3040_44 = 0
 3040. !dir$ ivdep
 3040.          do
 3041.             if ( tgen(1 + $I_L3040_44) <= 273.16000000000003 ) then
 3042.                egs(1 + $I_L3040_44) = eg(1 + $I_L3040_44) + -egi(1 + $I_L3040_44)
 3043.                egt(1 + $I_L3040_44) = 0.0
 3043.             endif
 3063.             $facks_WR0_R0 = 1.0
 3063.             facks(1 + $I_L3040_44) = 1.0
 3064.             if ( tcen(1 + $I_L3040_44) <= 273.16000000000003 ) then
 3064.                $facks_WR0_R0 = 8.8308754880898477e-1
 3064.                facks(1 + $I_L3040_44) = 8.8308754880898477e-1
 3064.             endif
 3065.             if ( ( eci(1 + $I_L3040_44) + ect(1 + $I_L3040_44) ) <= 0.0 ) then
 3066.                eci(1 + $I_L3040_44) = eci(1 + $I_L3040_44) + ect(1 + $I_L3040_44)
 3067.                ect(1 + $I_L3040_44) = 0.0
 3068.                $facks_WR0_R0 = 1.0/$facks_WR0_R0
 3068.                facks(1 + $I_L3040_44) = $facks_WR0_R0
 3068.             endif
 3045.             $I_L3040_44 = 1 + $I_L3040_44
 3044.             if ( $I_L3040_44 >= nmax ) exit
 3044.          enddo
 3071.          $I_L3071_48 = 0
 3071. !dir$ ivdep
 3071.          do
 3076.             ecmass(1 + $I_L3071_48) = 3.9682539682539683e-7 * ( ect(1 + $I_L3071_48) + eci(1 + $I_L3071_48) * facks(1 + $I_L3071_48) )
 3072.             capac(1 + $I_L3071_48, 1) = capac(1 + $I_L3071_48, 1) + -3.9682539682539682e-10 * eci(1 + $I_L3071_48) * facks(1 + $I_L3071_48)
 3077.             $I_L3071_48 = 1 + $I_L3071_48
 3071.             if ( $I_L3071_48 >= nmax ) exit
 3071.          enddo
 3078.          $I_L3078_50 = 0
 3078. !dir$ ivdep
 3078.          do
 3079.             $facks_WR0_R1 = 1.0
 3079.             facks(1 + $I_L3078_50) = 1.0
 3080.             if ( tgen(1 + $I_L3078_50) <= 273.16000000000003 ) then
 3080.                $facks_WR0_R1 = 8.8308754880898477e-1
 3080.                facks(1 + $I_L3078_50) = 8.8308754880898477e-1
 3080.             endif
 3081.             if ( ( egt(1 + $I_L3078_50) + egi(1 + $I_L3078_50) ) <= 0.0 ) then
 3082.                egi(1 + $I_L3078_50) = egt(1 + $I_L3078_50) + egi(1 + $I_L3078_50)
 3083.                egt(1 + $I_L3078_50) = 0.0
 3084.                $facks_WR0_R1 = 1.0/$facks_WR0_R1
 3084.                facks(1 + $I_L3078_50) = $facks_WR0_R1
 3084.             endif
 3086.             $I_L3078_50 = 1 + $I_L3078_50
 3085.             if ( $I_L3078_50 >= nmax ) exit
 3085.          enddo
 3087.          $I_L3087_52 = 0
 3087. !dir$ ivdep
 3087.          do
 3089.             $egmass_WR0_R2 = 3.9682539682539683e-7 * ( egt(1 + $I_L3087_52) + egs(1 + $I_L3087_52) + facks(1 + $I_L3087_52) * egi(1 + $I_L3087_52) )
 3089.             egmass(1 + $I_L3087_52) = $egmass_WR0_R2
 3093.             etmass(1 + $I_L3087_52) = $egmass_WR0_R2 + ecmass(1 + $I_L3087_52)
 3094.             hflux(1 + $I_L3087_52) = hg(1 + $I_L3087_52) + hc(1 + $I_L3087_52)
 3088.             capac(1 + $I_L3087_52, 2) = capac(1 + $I_L3087_52, 2) + -3.9682539682539682e-10 * facks(1 + $I_L3087_52) * egi(1 + $I_L3087_52)
 3095.             $I_L3087_52 = 1 + $I_L3087_52
 3087.             if ( $I_L3087_52 >= nmax ) exit
 3087.          enddo
 3087.       endif
 3050.       $dtc3xi_S3 = 1.0/dtc3x
 3053.       if ( nmax > 0 ) then
 3053.          $I_L3053_46 = 0
 3053. !dir$ ivdep
 3053.          do
 3054.             chf(1 + $I_L3053_46) = $dtc3xi_S3 * cc(1 + $I_L3053_46) * dtc(1 + $I_L3053_46)
 3055.             shf(1 + $I_L3053_46) = 7.2722050925925924e-5 * cg(1 + $I_L3053_46) * ( tg(1 + $I_L3053_46) + dtg(1 + $I_L3053_46) + -td(1 + $I_L3053_46) ) + $dtc3xi_S3 * dtg(1 + $I_L3053_46) * cg(1 + $I_L3053_46)
 3056.             $I_L3053_46 = 1 + $I_L3053_46
 3053.             if ( $I_L3053_46 >= nmax ) exit
 3053.          enddo
 3053.       endif
 2878.       _free( t$1653 )
 3096.       return
 3096.       end
 3096.       
 3102.       
 3102.       subroutine sflxes( hgdtg, hgdtc, hgdtm, hcdtg, hcdtc, hcdtm, egdtg, egdtc, egdqm, ecdtg, ecdtc, ecdqm, deadtg, deadtc, deadqm, icheck, bps, psb, dzm, em, gmt, gmq, cu, cuni, ctni, ustar, rhoair, psy, rcp, wc, wg, fc, fg, hr, ect, eci, egt, egi, egs, ec, eg, hc, hg, ecidif, egidif, ecmass, egmass, etmass, hflux, chf, shf, ra, rb, rd, rc, rg, tcta, tgta, ta, ea, etc, etg, btc, btg, u2, radt, rst, rsoil, hrr, phsoil, cc, cg, satcap, dtc, dtg, dtm, dqm, stm, thermk, tc, tg, td, capac, w, qm, tm, um, vm, psur, vcover, z0x, d, rdc, rbc, z0, itype, dtc3x, mon, nmax, jstneu, ncols, zlt2, topt2, tll2, tu2, defac2, ph12, ph22 )
 3102.       t$474 = ncols
 3381.       t$1680 = _zla( 0, ncols )
 3102.       t$1681 = _zla( 0, ncols )
 3102.       t$1682 = 3 * _zla( 0, ncols )
 3102.       t$1683 = 2 * _zla( 0, ncols )
 3102.       t$1684 = 3 * _zla( 0, ncols )
 3102.       t$1685 = 2 * _zla( 0, ncols )
 3414.       t$1688 = 8 * _zla( 0, ncols )
 3415.       t$1689 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 3415.       t$1691 = t$1689 + 8 * _zla( 0, ncols )
 3412.       t$1692 = 8 * ( 7 + t$1689 + 8 * _zla( 0, ncols ) ) / 8
 3412.       t$1694 = t$1692 + 8 * _zla( 0, ncols )
 3413.       t$1695 = 8 * ( 7 + t$1692 + 8 * _zla( 0, ncols ) ) / 8
 3413.       t$1697 = t$1695 + 8 * _zla( 0, ncols )
 3422.       t$1698 = 8 * ( 7 + t$1695 + 8 * _zla( 0, ncols ) ) / 8
 3422.       t$1700 = t$1698 + 8 * _zla( 0, ncols )
 3426.       t$1701 = 8 * ( 7 + t$1698 + 8 * _zla( 0, ncols ) ) / 8
 3426.       t$1703 = t$1701 + 8 * _zla( 0, ncols )
 3425.       t$1704 = 8 * ( 7 + t$1701 + 8 * _zla( 0, ncols ) ) / 8
 3425.       t$1706 = t$1704 + 8 * _zla( 0, ncols )
 3427.       t$1708 = t$1704 + 12 * _zla( 0, ncols )
 3420.       t$1709 = 8 * ( 7 + t$1704 + 12 * _zla( 0, ncols ) ) / 8
 3420.       t$1711 = t$1709 + 8 * _zla( 0, ncols )
 3423.       t$1712 = 8 * ( 7 + t$1709 + 8 * _zla( 0, ncols ) ) / 8
 3423.       t$1714 = t$1712 + 16 * _zla( 0, ncols )
 3417.       t$1715 = 8 * ( 7 + t$1712 + 16 * _zla( 0, ncols ) ) / 8
 3417.       t$1717 = t$1715 + 8 * _zla( 0, ncols )
 3418.       t$1718 = 8 * ( 7 + t$1715 + 8 * _zla( 0, ncols ) ) / 8
 3418.       t$1720 = t$1718 + 8 * _zla( 0, ncols )
 3419.       t$1721 = 8 * ( 7 + t$1718 + 8 * _zla( 0, ncols ) ) / 8
 3419.       t$1723 = t$1721 + 8 * _zla( 0, ncols )
 3421.       t$1724 = 8 * ( 7 + t$1721 + 8 * _zla( 0, ncols ) ) / 8
 3421.       t$1726 = t$1724 + 8 * _zla( 0, ncols )
 3406.       t$1727 = 8 * ( 7 + t$1724 + 8 * _zla( 0, ncols ) ) / 8
 3406.       t$1729 = t$1727 + 8 * _zla( 0, ncols )
 3436.       t$1730 = 8 * ( 7 + t$1727 + 8 * _zla( 0, ncols ) ) / 8
 3436.       t$1732 = t$1730 + 16 * _zla( 0, ncols )
 3102.       t$1686 = int( _alloc( t$1730 + 16 * _zla( 0, ncols ) ), 8 )
 3414.       t$1687 = t$1686
 3415.       t$1690 = t$1689 + t$1686
 3412.       t$1693 = t$1692 + t$1686
 3413.       t$1696 = t$1695 + t$1686
 3422.       t$1699 = t$1698 + t$1686
 3426.       t$1702 = t$1701 + t$1686
 3425.       t$1705 = t$1704 + t$1686
 3427.       t$1707 = t$1704 + t$1686 + 8 * _zla( 0, ncols )
 3420.       t$1710 = t$1709 + t$1686
 3423.       t$1713 = t$1712 + t$1686
 3417.       t$1716 = t$1715 + t$1686
 3418.       t$1719 = t$1718 + t$1686
 3419.       t$1722 = t$1721 + t$1686
 3421.       t$1725 = t$1724 + t$1686
 3406.       t$1728 = t$1727 + t$1686
 3436.       t$1731 = t$1730 + t$1686
 3443.       $F_A33 = ncols
 3443.       if ( ncols > 0 ) then
 3443.          $I_L3443_318 = 0
 3443.          do
 3443.             $I_L3443_316 = 0
 3443. !dir$ ivdep
 3443.             do
 3443.                vcover2(1 + $I_L3443_316, 1 + $I_L3443_318) = vcover(1 + $I_L3443_316, 1 + $I_L3443_318)
 3443.                $I_L3443_316 = 1 + $I_L3443_316
 3443.                if ( $I_L3443_316 >= $F_A33 ) exit
 3443.             enddo
 3443.             $I_L3443_318 = 1 + $I_L3443_318
 3443.             if ( $I_L3443_318 >= 2 ) exit
 3443.          enddo
 3443.       endif
 3444.       if ( nmax > 0 ) then
 3444.          $I_L3444_238 = 0
 3444. !dir$ ivdep
 3444.          do
 3445.             tcsav(1 + $I_L3444_238) = tc(1 + $I_L3444_238)
 3446.             tgsav(1 + $I_L3444_238) = tg(1 + $I_L3444_238)
 3447.             tmsav(1 + $I_L3444_238) = tm(1 + $I_L3444_238)
 3448.             qmsav(1 + $I_L3444_238) = qm(1 + $I_L3444_238)
 3449.             rdsav(1 + $I_L3444_238, 1) = radt(1 + $I_L3444_238, 1)
 3450.             rdsav(1 + $I_L3444_238, 2) = radt(1 + $I_L3444_238, 2)
 3451.             stm(1 + $I_L3444_238, 1) = rst(1 + $I_L3444_238, 1)
 3452.             stm(1 + $I_L3444_238, 2) = rst(1 + $I_L3444_238, 2)
 3453.             $I_L3444_238 = 1 + $I_L3444_238
 3444.             if ( $I_L3444_238 >= nmax ) exit
 3444.          enddo
 3444.       endif
 3457.       t$219 = ncols
 3457.       t$1529 = max( 0, ncols )
 3457.       t$1530 = max( 0, ncols )
 3457.       t$1531 = 2 * max( 0, ncols )
 3457.       t$1534 = 8 * max( 0, ncols )
 3457.       t$1535 = 8 * ( 7 + 8 * max( 0, ncols ) ) / 8
 3457.       t$1537 = t$1535 + 8 * max( 0, ncols )
 3457.       t$1532 = int( _alloc( t$1535 + 8 * max( 0, ncols ) ), 8 )
 3457.       t$1533 = t$1532
 3457.       t$1536 = t$1535 + t$1532
 3457.       if ( nmax > 0 ) then
 3457.          $SC_xd_I5 = xd%dim_1%EX
 3457.          $SC_xd_I6 = xd%dim_1%LB
 3457.          $SC_xd_I8 = xd%dim_2%SM
 3457.          $SC_xd_I7 = xd%dim_2%EX
 3457.          $SC_xd_I9 = xd%dim_2%LB
 3457.          $SC_z2_I0 = z2%dim_1%EX
 3457.          $SC_z2_I1 = z2%dim_1%LB
 3457.          $SC_z2_I3 = z2%dim_2%SM
 3457.          $SC_z2_I2 = z2%dim_2%EX
 3457.          $SC_z2_I4 = z2%dim_2%LB
 3457.          $I_L3457_240 = 0
 3457. !dir$ ivdep
 3457.          do
 3457.             if ( tg(1 + $I_L3457_240) <= 273.16000000000003 ) then
 3457.                if ( capac(1 + $I_L3457_240, 2) >= 1.0e-3 ) then
 3457.                   $xz_WR0_R0 = (z2%base_addr)(itype(1 + $I_L3457_240), mon(1 + $I_L3457_240), 0)
 3457.                   $sdep_WR0_R1 = 5.0 * capac(1 + $I_L3457_240, 2)
 3457.                   $sdep_WR0_R1 = min( $sdep_WR0_R1, 9.4999999999999996e-1 * $xz_WR0_R0 )
 3457.                   $d_WR0_R2 = $xz_WR0_R0 + -( ( $xz_WR0_R0 + -$sdep_WR0_R1 ) * ( 1.0/$xz_WR0_R0 * ( $xz_WR0_R0 + -d(1 + $I_L3457_240) ) ) )
 3457.                   d(1 + $I_L3457_240) = $d_WR0_R2
 3457.                   z0x(1 + $I_L3457_240) = ( $xz_WR0_R0 + -$d_WR0_R2 ) * ( z0x(1 + $I_L3457_240) * 1.0/( $xz_WR0_R0 + -(xd%base_addr)(itype(1 + $I_L3457_240), mon(1 + $I_L3457_240), 0) ) )
 3457.                   rdc(1 + $I_L3457_240) = ( rdc(1 + $I_L3457_240) * 1.0/$xz_WR0_R0 * ( $xz_WR0_R0 + -$sdep_WR0_R1 ) )
 3457.                   rbc(1 + $I_L3457_240) = ( $xz_WR0_R0 * rbc(1 + $I_L3457_240) * 1.0/( $xz_WR0_R0 + -$sdep_WR0_R1 ) )
 3457.                endif
 3457.             endif
 3457.             $I_L3457_240 = 1 + $I_L3457_240
 3457.             if ( $I_L3457_240 >= nmax ) exit
 3457.          enddo
 3457.       endif
 3457.       _free( t$1532 )
 3463.       if ( nmax > 0 ) then
 3463.          $I_L3463_242 = 0
 3463. !dir$ ivdep
 3463.          do
 3464.             z0(1 + $I_L3463_242) = z0x(1 + $I_L3463_242)
 3465.             $I_L3463_242 = 1 + $I_L3463_242
 3463.             if ( $I_L3463_242 >= nmax ) exit
 3463.          enddo
 3489.          $SC_bee_I15 = bee%dim_1%EX
 3489.          $SC_bee_I16 = bee%dim_1%LB
 3489.          $SC_phsat_I17 = phsat%dim_1%EX
 3489.          $SC_phsat_I18 = phsat%dim_1%LB
 3481.          $SC_zdepth_I10 = zdepth%dim_1%EX
 3481.          $SC_zdepth_I11 = zdepth%dim_1%LB
 3481.          $SC_zdepth_I13 = zdepth%dim_2%SM
 3481.          $SC_zdepth_I12 = zdepth%dim_2%EX
 3481.          $SC_zdepth_I14 = zdepth%dim_2%LB
 3470.          $I_L3470_244 = 0
 3470. !dir$ ivdep
 3470.          do
 3471.             $ntyp_S5 = itype(1 + $I_L3470_244)
 3472.             wc(1 + $I_L3470_244) = min( 1.0, ( capac(1 + $I_L3470_244, 1) * 1.0/satcap(1 + $I_L3470_244, 1) ) )
 3473.             wg(1 + $I_L3470_244) = min( 1.0, ( capac(1 + $I_L3470_244, 2) * 1.0/satcap(1 + $I_L3470_244, 2) ) )
 3480.             $wt_S4 = max( 1.0e-3, w(1 + $I_L3470_244, 1) )
 3481.             $wt_S6 = $wt_S4 + 25.0 * ( 7.5e-1 * (zdepth%base_addr)($ntyp_S5, 1, 0) * 1.0/( (zdepth%base_addr)($ntyp_S5, 2, 0) + (zdepth%base_addr)($ntyp_S5, 1, 0) ) ) * ( $wt_S4 + -( w(1 + $I_L3470_244, 2) * w(1 + $I_L3470_244, 2) * 1.0/$wt_S4 ) )
 3485.             $rsoil_WR0_R3 = 101840.0 * ( 1.0 + -_expn( 2.7000000000000001e-3 * log( ( max( 1.0e-3, ( min( 9.8999999999999999e-1, $wt_S6 ) ) ) ) ) ) )
 3485.             rsoil(1 + $I_L3470_244) = $rsoil_WR0_R3
 3489.             $psit_S7 = (phsat%base_addr)($ntyp_S5, 0) * _expn( -( (bee%base_addr)($ntyp_S5, 0) * log( ( max( 1.0e-3, ( min( 9.8999999999999999e-1, $wt_S6 ) ) ) ) ) ) )
 3497.             $eee_S8 = ( 2.1235102925243773e-2 * $psit_S7 * 1.0/tg(1 + $I_L3470_244) )
 3507.             $hrr_WR0_R4 = max( 1.0e-3, _expn( $eee_S8 ) )
 3507.             hrr(1 + $I_L3470_244) = $hrr_WR0_R4
 3509.             hr(1 + $I_L3470_244) = $hrr_WR0_R4
 3511.             if ( tg(1 + $I_L3470_244) <= 273.16000000000003 ) then
 3512.                vcover2(1 + $I_L3470_244, 2) = 1.0
 3513.                wg(1 + $I_L3470_244) = min( 1.0, 250.0 * capac(1 + $I_L3470_244, 2) )
 3514.                rst(1 + $I_L3470_244, 2) = $rsoil_WR0_R3
 3515.                stm(1 + $I_L3470_244, 2) = $rsoil_WR0_R3
 3515.             endif
 3518.             fc(1 + $I_L3470_244) = 1.0
 3519.             fg(1 + $I_L3470_244) = 1.0
 3520.             $I_L3470_244 = 1 + $I_L3470_244
 3516.             if ( $I_L3470_244 >= nmax ) exit
 3516.          enddo
 3516.       endif
 3525.       $ncount_S9 = 0
 3525.       do
 3527.          $ncount_S9 = 1 + $ncount_S9
 3528.          if ( nmax > 0 ) then
 3528.             $I_L3528_246 = 0
 3528. !dir$ ivdep
 3528.             do
 3529.                icheck(1 + $I_L3528_246) = 1
 3534.                etc(1 + $I_L3528_246) = _expn( 21.65605 + -( 5418.0 * 1.0/tc(1 + $I_L3528_246) ) )
 3535.                etg(1 + $I_L3528_246) = _expn( 21.65605 + -( 5418.0 * 1.0/tg(1 + $I_L3528_246) ) )
 3536.                $I_L3528_246 = 1 + $I_L3528_246
 3528.                if ( $I_L3528_246 >= nmax ) exit
 3528.             enddo
 3528.          endif
 3540.          if ( $ncount_S9 == 1 ) then
 3541.             if ( nmax > 0 ) then
 3541.                $I_L3541_248 = 0
 3541. !dir$ ivdep
 3541.                do
 3542.                   ta(1 + $I_L3541_248) = tc(1 + $I_L3541_248)
 3546.                   ea(1 + $I_L3541_248) = ( qm(1 + $I_L3541_248) * psur(1 + $I_L3541_248) * 1.0/( 6.22e-1 + qm(1 + $I_L3541_248) ) )
 3547.                   $I_L3541_248 = 1 + $I_L3541_248
 3541.                   if ( $I_L3541_248 >= nmax ) exit
 3541.                enddo
 3541.             endif
 3541.          endif
 3555.          tm$448 = loc( (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) )
 3555.          z2 = _copyin( (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) )
 3555.          t$355 = ncols
 3555.          t$1598 = max( 0, ncols )
 3555.          t$1601 = 8 * max( 0, ncols )
 3555.          t$1599 = int( _alloc( 8 * max( 0, ncols ) ), 8 )
 3555.          t$1600 = t$1599
 3555.          if ( nmax > 0 ) then
 3555.             $I_L3555_250 = 0
 3555. !dir$ ivdep
 3555.             do
 3555.                if ( icheck(1 + $I_L3555_250) == 1 ) then
 3555.                   $speedm_WR0_R5 = _sqrt( vm(1 + $I_L3555_250) * vm(1 + $I_L3555_250) + um(1 + $I_L3555_250) * um(1 + $I_L3555_250) )
 3555.                   $speedm_WR0_R5 = max( 2.0, $speedm_WR0_R5 )
 3555.                   speedm(1 + $I_L3555_250) = $speedm_WR0_R5
 3555.                endif
 3555.                $I_L3555_250 = 1 + $I_L3555_250
 3555.                if ( $I_L3555_250 >= nmax ) exit
 3555.             enddo
 3555.             $I_L3555_252 = 0
 3555. !dir$ ivdep
 3555.             do
 3555.                $ntyp_S14 = itype(1 + $I_L3555_252)
 3555.                $zl_S15 = z2($ntyp_S14, mon(1 + $I_L3555_252)) + 11.785 * z0(1 + $I_L3555_252)
 3555.                $cuni_WR0_R6 = 2.5 * log( ( 1.0/z0(1 + $I_L3555_252) * ( dzm(1 + $I_L3555_252) + -d(1 + $I_L3555_252) ) ) )
 3555.                cuni(1 + $I_L3555_252) = $cuni_WR0_R6
 3555.                $ustarn_WR0_R7 = ( speedm(1 + $I_L3555_252) * 1.0/$cuni_WR0_R6 )
 3555.                if ( $zl_S15 < dzm(1 + $I_L3555_252) ) then
 3555.                   $xct1_S16 = log( ( ( dzm(1 + $I_L3555_252) + -d(1 + $I_L3555_252) ) * 1.0/( $zl_S15 + -d(1 + $I_L3555_252) ) ) )
 3555.                   $xct2_S17 = log( ( 1.0/z0(1 + $I_L3555_252) * ( $zl_S15 + -d(1 + $I_L3555_252) ) ) )
 3555.                   $xctu1_S20 = $xct1_S16
 3555.                   $xctu2_S19 = log( ( ( $zl_S15 + -d(1 + $I_L3555_252) ) * 1.0/( z2($ntyp_S14, mon(1 + $I_L3555_252)) + -d(1 + $I_L3555_252) ) ) )
 3555.                   ctni(1 + $I_L3555_252) = 2.5 * ( $xct1_S16 + 7.5e-1 * $xct2_S17 )
 3555.                else
 3555.                   $xct2_S18 = log( ( 1.0/z0(1 + $I_L3555_252) * ( dzm(1 + $I_L3555_252) + -d(1 + $I_L3555_252) ) ) )
 3555.                   $xctu1_S20 = 0.0
 3555.                   $xctu2_S19 = log( ( ( dzm(1 + $I_L3555_252) + -d(1 + $I_L3555_252) ) * 1.0/( z2($ntyp_S14, mon(1 + $I_L3555_252)) + -d(1 + $I_L3555_252) ) ) )
 3555.                   ctni(1 + $I_L3555_252) = 1.875 * $xct2_S18
 3555.                endif
 3555.                u2(1 + $I_L3555_252) = speedm(1 + $I_L3555_252) + -2.5 * $ustarn_WR0_R7 * ( $xctu1_S20 + 7.5e-1 * $xctu2_S19 )
 3555.                $I_L3555_252 = 1 + $I_L3555_252
 3555.                if ( $I_L3555_252 >= nmax ) exit
 3555.             enddo
 3555.          endif
 3555.          _free( t$1599 )
 3555.          (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) = _copyout( z2 )
 3560.          jstneu = .false.
 3562.          tm$470 = loc( (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) )
 3562.          z2 = _copyin( (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) )
 3562.          t$355 = ncols
 3562.          t$1598 = max( 0, ncols )
 3562.          t$1601 = 8 * max( 0, ncols )
 3562.          t$1599 = int( _alloc( 8 * max( 0, ncols ) ), 8 )
 3562.          t$1600 = t$1599
 3562.          if ( nmax > 0 ) then
 3562.             $I_L3562_254 = 0
 3562. !dir$ ivdep
 3562.             do
 3562.                if ( icheck(1 + $I_L3562_254) == 1 ) then
 3562.                   $speedm_WR0_R8 = _sqrt( vm(1 + $I_L3562_254) * vm(1 + $I_L3562_254) + um(1 + $I_L3562_254) * um(1 + $I_L3562_254) )
 3562.                   $speedm_WR0_R8 = max( 2.0, $speedm_WR0_R8 )
 3562.                   speedm(1 + $I_L3562_254) = $speedm_WR0_R8
 3562.                endif
 3562.                $I_L3562_254 = 1 + $I_L3562_254
 3562.                if ( $I_L3562_254 >= nmax ) exit
 3562.             enddo
 3562.             $I_L3562_256 = 0
 3562. !dir$ ivdep
 3562.             do
 3562.                if ( icheck(1 + $I_L3562_256) == 1 ) then
 3562.                   $thm_S24 = bps(1 + $I_L3562_256) * tm(1 + $I_L3562_256)
 3562.                   $ntyp_S23 = itype(1 + $I_L3562_256)
 3562.                   $zl_S28 = z2($ntyp_S23, mon(1 + $I_L3562_256)) + 11.785 * z0(1 + $I_L3562_256)
 3562.                   $thvgm_S25 = ta(1 + $I_L3562_256) + -$thm_S24
 3562.                   $rib_S26 = -( 9.8000000000000007 * $thvgm_S25 * ( dzm(1 + $I_L3562_256) + -d(1 + $I_L3562_256) ) * 1.0/( $thm_S24 * ( speedm(1 + $I_L3562_256) + -u2(1 + $I_L3562_256) ) * ( speedm(1 + $I_L3562_256) + -u2(1 + $I_L3562_256) ) ) )
 3562.                   $rib_S27 = min( 1.6500000000000001e-1, max( -1.5, $rib_S26 ) )
 3562.                   if ( ( min( 1.6500000000000001e-1, max( -1.5, $rib_S26 ) ) ) < 0.0 ) then
 3562.                      $grib_S29 = -$rib_S27
 3562.                      $grzl_S31 = -( $rib_S27 * 1.0/( dzm(1 + $I_L3562_256) + -d(1 + $I_L3562_256) ) * ( $zl_S28 + -d(1 + $I_L3562_256) ) )
 3562.                      $grz2_S30 = -( $rib_S27 * z0(1 + $I_L3562_256) * 1.0/( dzm(1 + $I_L3562_256) + -d(1 + $I_L3562_256) ) )
 3562.                      $fvv_S32 = -3.15e-1 * $rib_S27
 3562.                      if ( $zl_S28 < dzm(1 + $I_L3562_256) ) then
 3562.                         $ftt_S33 = ( 9.0400000000000003e-1 * $grib_S29 ) + -6.7800000000000005e-1 * $grz2_S30 + -2.2600000000000001e-1 * $grzl_S31
 3562.                      else
 3562.                         $ftt_S33 = 7.5e-1 * ( ( 9.0400000000000003e-1 * $grib_S29 ) + -( 9.0400000000000003e-1 * $grz2_S30 ) )
 3562.                      endif
 3562.                      $cui_S38 = cuni(1 + $I_L3562_256) + -$fvv_S32
 3562.                      $cti_S39 = ctni(1 + $I_L3562_256) + -$ftt_S33
 3562.                   else
 3562.                      $rzl_S35 = ( $zl_S28 + -d(1 + $I_L3562_256) ) * ( $rib_S27 * 1.0/( dzm(1 + $I_L3562_256) + -d(1 + $I_L3562_256) ) )
 3562.                      $rz2_S34 = z0(1 + $I_L3562_256) * ( $rib_S27 * 1.0/( dzm(1 + $I_L3562_256) + -d(1 + $I_L3562_256) ) )
 3562.                      $fvv_S36 = 66.849999999999994 * $rib_S27
 3562.                      if ( $zl_S28 < dzm(1 + $I_L3562_256) ) then
 3562.                         $ftt_S37 = ( 66.849999999999994 * $rib_S27 ) + -50.137499999999996 * $rz2_S34 + -16.712499999999999 * $rzl_S35
 3562.                      else
 3562.                         $ftt_S37 = 7.5e-1 * ( ( 66.849999999999994 * $rib_S27 ) + -( 66.849999999999994 * $rz2_S34 ) )
 3562.                      endif
 3562.                      $cui_S38 = $fvv_S36 + cuni(1 + $I_L3562_256)
 3562.                      $cti_S39 = $ftt_S37 + ctni(1 + $I_L3562_256)
 3562.                   endif
 3562.                   cu(1 + $I_L3562_256) = 1.0/$cui_S38
 3562.                   $ustar_WR0_R9 = speedm(1 + $I_L3562_256) * 1.0/$cui_S38
 3562.                   ustar(1 + $I_L3562_256) = $ustar_WR0_R9
 3562.                   ra(1 + $I_L3562_256) = ( max( 8.0000000000000004e-1, ( $cti_S39 * 1.0/$ustar_WR0_R9 ) ) )
 3562.                endif
 3562.                $I_L3562_256 = 1 + $I_L3562_256
 3562.                if ( $I_L3562_256 >= nmax ) exit
 3562.             enddo
 3562.          endif
 3562.          _free( t$1599 )
 3562.          (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) = _copyout( z2 )
 3567.          if ( nmax > 0 ) then
 3567.             $I_L3567_258 = 0
 3567. !dir$ ivdep
 3567.             do
 3568.                tcta(1 + $I_L3567_258) = -tm(1 + $I_L3567_258) + ( tc(1 + $I_L3567_258) * 1.0/bps(1 + $I_L3567_258) )
 3569.                tgta(1 + $I_L3567_258) = -tm(1 + $I_L3567_258) + ( tg(1 + $I_L3567_258) * 1.0/bps(1 + $I_L3567_258) )
 3570.                $I_L3567_258 = 1 + $I_L3567_258
 3567.                if ( $I_L3567_258 >= nmax ) exit
 3567.             enddo
 3567.          endif
 3571.          tm$486 = loc( (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) )
 3571.          z2 = _copyin( (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) )
 3571.          t$339 = ncols
 3571.          t$1589 = max( 0, ncols )
 3571.          t$1590 = max( 0, ncols )
 3571.          t$1591 = 2 * max( 0, ncols )
 3571.          t$1594 = 8 * max( 0, ncols )
 3571.          t$1595 = 8 * ( 7 + 8 * max( 0, ncols ) ) / 8
 3571.          t$1597 = t$1595 + 8 * max( 0, ncols )
 3571.          t$1592 = int( _alloc( t$1595 + 8 * max( 0, ncols ) ), 8 )
 3571.          t$1593 = t$1592
 3571.          t$1596 = t$1595 + t$1592
 3571.          if ( nmax > 0 ) then
 3571.             $I_L3571_260 = 0
 3571. !dir$ ivdep
 3571.             do
 3571.                $ntyp_S42 = itype(1 + $I_L3571_260)
 3571.                if ( tcta(1 + $I_L3571_260) > 0.0 ) then
 3571.                   temdif(1 + $I_L3571_260) = 1.0000000000000001e-1 + tcta(1 + $I_L3571_260)
 3571.                else
 3571.                   temdif(1 + $I_L3571_260) = 1.0000000000000001e-1
 3571.                endif
 3571.                rb(1 + $I_L3571_260) = 1.0/( ( 1.0/rbc(1 + $I_L3571_260) * _sqrt( u2(1 + $I_L3571_260) ) ) + 4.0000000000000001e-3 * zlt2(1 + $I_L3571_260, 1) )
 3571.                if ( tgta(1 + $I_L3571_260) > 0 ) then
 3571.                   temdif(1 + $I_L3571_260) = 1.0000000000000001e-1 + tgta(1 + $I_L3571_260)
 3571.                else
 3571.                   temdif(1 + $I_L3571_260) = 1.0000000000000001e-1
 3571.                endif
 3571.                $fih_WR0_R11 = _sqrt( 1.0 + ( 88.290000000000006 * temdif(1 + $I_L3571_260) * z2($ntyp_S42, mon(1 + $I_L3571_260)) * 1.0/( u2(1 + $I_L3571_260) * u2(1 + $I_L3571_260) * tg(1 + $I_L3571_260) ) ) )
 3571.                rd(1 + $I_L3571_260) = ( rdc(1 + $I_L3571_260) * 1.0/( $fih_WR0_R11 * u2(1 + $I_L3571_260) ) )
 3571.                $I_L3571_260 = 1 + $I_L3571_260
 3571.                if ( $I_L3571_260 >= nmax ) exit
 3571.             enddo
 3571.          endif
 3571.          _free( t$1592 )
 3571.          (z2%base_addr)(z2%dim_1%LB, z2%dim_2%LB, 0) = _copyout( z2 )
 3579.          $icount_S43 = 0
 3597.          $SC_rootd_I19 = rootd%dim_1%EX
 3597.          $SC_rootd_I20 = rootd%dim_1%LB
 3597.          $SC_rootd_I22 = rootd%dim_2%SM
 3597.          $SC_rootd_I21 = rootd%dim_2%EX
 3597.          $SC_rootd_I23 = rootd%dim_2%LB
 3597.          $SC_zdepth_I10 = zdepth%dim_1%EX
 3597.          $SC_zdepth_I11 = zdepth%dim_1%LB
 3597.          $SC_zdepth_I13 = zdepth%dim_2%SM
 3597.          $SC_zdepth_I12 = zdepth%dim_2%EX
 3597.          $SC_zdepth_I14 = zdepth%dim_2%LB
 3587.          $SC_z2_I0 = z2%dim_1%EX
 3587.          $SC_z2_I1 = z2%dim_1%LB
 3587.          $SC_z2_I3 = z2%dim_2%SM
 3587.          $SC_z2_I2 = z2%dim_2%EX
 3587.          $SC_z2_I4 = z2%dim_2%LB
 3587.          do
 3580.             $icount_S43 = 1 + $icount_S43
 3581.             if ( nmax > 0 ) then
 3581.                $I_L3581_262 = 0
 3581. !dir$ ivdep
 3581.                do
 3582.                   if ( icheck(1 + $I_L3581_262) == 1 ) then
 3583.                      tsav(1 + $I_L3581_262) = ta(1 + $I_L3581_262)
 3584.                      esav(1 + $I_L3581_262) = ea(1 + $I_L3581_262)
 3584.                   endif
 3586.                   $I_L3581_262 = 1 + $I_L3581_262
 3585.                   if ( $I_L3581_262 >= nmax ) exit
 3585.                enddo
 3585.             endif
 3587.             tm$508 = loc( (z2%base_addr)($SC_z2_I1, $SC_z2_I4, 0) )
 3587.             z2 = _copyin( (z2%base_addr)($SC_z2_I1, $SC_z2_I4, 0) )
 3587.             t$355 = ncols
 3587.             t$1598 = max( 0, ncols )
 3587.             t$1601 = 8 * max( 0, ncols )
 3587.             t$1599 = int( _alloc( 8 * max( 0, ncols ) ), 8 )
 3587.             t$1600 = t$1599
 3587.             if ( nmax > 0 ) then
 3587.                $I_L3587_264 = 0
 3587. !dir$ ivdep
 3587.                do
 3587.                   if ( icheck(1 + $I_L3587_264) == 1 ) then
 3587.                      $speedm_WR0_R12 = _sqrt( vm(1 + $I_L3587_264) * vm(1 + $I_L3587_264) + um(1 + $I_L3587_264) * um(1 + $I_L3587_264) )
 3587.                      $speedm_WR0_R12 = max( 2.0, $speedm_WR0_R12 )
 3587.                      speedm(1 + $I_L3587_264) = $speedm_WR0_R12
 3587.                   endif
 3587.                   $I_L3587_264 = 1 + $I_L3587_264
 3587.                   if ( $I_L3587_264 >= nmax ) exit
 3587.                enddo
 3587.                $I_L3587_266 = 0
 3587. !dir$ ivdep
 3587.                do
 3587.                   if ( icheck(1 + $I_L3587_266) == 1 ) then
 3587.                      $thm_S48 = bps(1 + $I_L3587_266) * tm(1 + $I_L3587_266)
 3587.                      $ntyp_S47 = itype(1 + $I_L3587_266)
 3587.                      $zl_S52 = z2($ntyp_S47, mon(1 + $I_L3587_266)) + 11.785 * z0(1 + $I_L3587_266)
 3587.                      $thvgm_S49 = ta(1 + $I_L3587_266) + -$thm_S48
 3587.                      $rib_S50 = -( 9.8000000000000007 * $thvgm_S49 * ( dzm(1 + $I_L3587_266) + -d(1 + $I_L3587_266) ) * 1.0/( $thm_S48 * ( speedm(1 + $I_L3587_266) + -u2(1 + $I_L3587_266) ) * ( speedm(1 + $I_L3587_266) + -u2(1 + $I_L3587_266) ) ) )
 3587.                      $rib_S51 = min( 1.6500000000000001e-1, max( -1.5, $rib_S50 ) )
 3587.                      if ( ( min( 1.6500000000000001e-1, max( -1.5, $rib_S50 ) ) ) < 0.0 ) then
 3587.                         $grib_S55 = -$rib_S51
 3587.                         $grzl_S54 = -( $rib_S51 * 1.0/( dzm(1 + $I_L3587_266) + -d(1 + $I_L3587_266) ) * ( $zl_S52 + -d(1 + $I_L3587_266) ) )
 3587.                         $grz2_S53 = -( $rib_S51 * z0(1 + $I_L3587_266) * 1.0/( dzm(1 + $I_L3587_266) + -d(1 + $I_L3587_266) ) )
 3587.                         $fvv_S56 = -3.15e-1 * $rib_S51
 3587.                         if ( $zl_S52 < dzm(1 + $I_L3587_266) ) then
 3587.                            $ftt_S57 = ( 9.0400000000000003e-1 * $grib_S55 ) + -6.7800000000000005e-1 * $grz2_S53 + -2.2600000000000001e-1 * $grzl_S54
 3587.                         else
 3587.                            $ftt_S57 = 7.5e-1 * ( -( 9.0400000000000003e-1 * $grz2_S53 ) + ( 9.0400000000000003e-1 * $grib_S55 ) )
 3587.                         endif
 3587.                         $cui_S62 = cuni(1 + $I_L3587_266) + -$fvv_S56
 3587.                         $cti_S63 = ctni(1 + $I_L3587_266) + -$ftt_S57
 3587.                      else
 3587.                         $rzl_S59 = ( $zl_S52 + -d(1 + $I_L3587_266) ) * ( $rib_S51 * 1.0/( dzm(1 + $I_L3587_266) + -d(1 + $I_L3587_266) ) )
 3587.                         $rz2_S58 = z0(1 + $I_L3587_266) * ( $rib_S51 * 1.0/( dzm(1 + $I_L3587_266) + -d(1 + $I_L3587_266) ) )
 3587.                         $fvv_S60 = 66.849999999999994 * $rib_S51
 3587.                         if ( $zl_S52 < dzm(1 + $I_L3587_266) ) then
 3587.                            $ftt_S61 = ( 66.849999999999994 * $rib_S51 ) + -50.137499999999996 * $rz2_S58 + -16.712499999999999 * $rzl_S59
 3587.                         else
 3587.                            $ftt_S61 = 7.5e-1 * ( ( 66.849999999999994 * $rib_S51 ) + -( 66.849999999999994 * $rz2_S58 ) )
 3587.                         endif
 3587.                         $cui_S62 = $fvv_S60 + cuni(1 + $I_L3587_266)
 3587.                         $cti_S63 = $ftt_S61 + ctni(1 + $I_L3587_266)
 3587.                      endif
 3587.                      cu(1 + $I_L3587_266) = 1.0/$cui_S62
 3587.                      $ustar_WR0_R13 = speedm(1 + $I_L3587_266) * 1.0/$cui_S62
 3587.                      ustar(1 + $I_L3587_266) = $ustar_WR0_R13
 3587.                      ra(1 + $I_L3587_266) = ( max( 8.0000000000000004e-1, ( $cti_S63 * 1.0/$ustar_WR0_R13 ) ) )
 3587.                   endif
 3587.                   $I_L3587_266 = 1 + $I_L3587_266
 3587.                   if ( $I_L3587_266 >= nmax ) exit
 3587.                enddo
 3587.             endif
 3587.             _free( t$1599 )
 3587.             (z2%base_addr)($SC_z2_I1, $SC_z2_I4, 0) = _copyout( z2 )
 3592.             t$317 = ncols
 3592.             t$1586 = max( 0, ncols )
 3592.             t$1587 = max( 0, ncols )
 3592.             t$1588 = 2 * max( 0, ncols )
 3592.             if ( nmax > 0 ) then
 3592.                $I_L3592_268 = 0
 3592. !dir$ ivdep
 3592.                do
 3592.                   if ( icheck(1 + $I_L3592_268) == 1 ) then
 3592.                      rcp(1 + $I_L3592_268) = 1004.6 * rhoair(1 + $I_L3592_268)
 3592.                      $rc_WR0_R15 = rb(1 + $I_L3592_268) + rb(1 + $I_L3592_268) * fc(1 + $I_L3592_268) + fc(1 + $I_L3592_268) * rst(1 + $I_L3592_268, 1)
 3592.                      rc(1 + $I_L3592_268) = $rc_WR0_R15
 3592.                      $coc_S70 = ( 1.0/$rc_WR0_R15 * ( 1.0 + -wc(1 + $I_L3592_268) ) ) + ( 5.0e-1 * wc(1 + $I_L3592_268) * 1.0/rb(1 + $I_L3592_268) )
 3592.                      $rg_WR0_R16 = fg(1 + $I_L3592_268) * rst(1 + $I_L3592_268, 2)
 3592.                      rg(1 + $I_L3592_268) = $rg_WR0_R16
 3592.                      $rsurf_S65 = fg(1 + $I_L3592_268) * rsoil(1 + $I_L3592_268)
 3592.                      $tem_S66 = ( vcover2(1 + $I_L3592_268, 2) * 1.0/( $rg_WR0_R16 + rd(1 + $I_L3592_268) ) * ( 1.0 + -wg(1 + $I_L3592_268) ) )
 3592.                      $cog2_S67 = $tem_S66 + ( ( 1.0 + -vcover2(1 + $I_L3592_268, 2) ) * 1.0/( $rsurf_S65 + rd(1 + $I_L3592_268) ) ) + ( vcover2(1 + $I_L3592_268, 2) * 1.0/( 44.0 + $rsurf_S65 + rd(1 + $I_L3592_268) ) )
 3592.                      $cog1_S71 = $tem_S66 + hr(1 + $I_L3592_268) * ( $cog2_S67 + -$tem_S66 )
 3592.                      $xnum_S68 = vcover2(1 + $I_L3592_268, 2) * ( wg(1 + $I_L3592_268) * 1.0/rd(1 + $I_L3592_268) )
 3592.                      $d2_S73 = $coc_S70 + ( $cog2_S67 + $xnum_S68 ) + 1.0/ra(1 + $I_L3592_268)
 3592.                      $top_S74 = ( em(1 + $I_L3592_268) * 1.0/ra(1 + $I_L3592_268) ) + $coc_S70 * etc(1 + $I_L3592_268) + etg(1 + $I_L3592_268) * ( $xnum_S68 + $cog1_S71 )
 3592.                      ea(1 + $I_L3592_268) = ( $top_S74 * 1.0/$d2_S73 )
 3592.                   endif
 3592.                   $I_L3592_268 = 1 + $I_L3592_268
 3592.                   if ( $I_L3592_268 >= nmax ) exit
 3592.                enddo
 3592.             endif
 3597.             tm$566 = loc( (rootd%base_addr)($SC_rootd_I20, $SC_rootd_I23, 0) )
 3597.             rootd = _copyin( (rootd%base_addr)($SC_rootd_I20, $SC_rootd_I23, 0) )
 3597.             tm$568 = loc( (zdepth%base_addr)($SC_zdepth_I11, $SC_zdepth_I14, 0) )
 3597.             zdepth = _copyin( (zdepth%base_addr)($SC_zdepth_I11, $SC_zdepth_I14, 0) )
 3597.             t$388 = ncols
 3597.             t$1624 = max( 0, ncols )
 3597.             t$1625 = max( 0, ncols )
 3597.             t$1626 = 2 * max( 0, ncols )
 3597.             t$1627 = 3 * max( 0, ncols )
 3597.             t$1628 = 3 * max( 0, ncols )
 3597.             t$1631 = 8 * max( 0, ncols )
 3597.             t$1632 = 8 * ( 7 + 8 * max( 0, ncols ) ) / 8
 3597.             t$1634 = t$1632 + 8 * max( 0, ncols )
 3597.             t$1635 = 8 * ( 7 + t$1632 + 8 * max( 0, ncols ) ) / 8
 3597.             t$1637 = t$1635 + 8 * max( 0, ncols )
 3597.             t$1638 = 8 * ( 7 + t$1635 + 8 * max( 0, ncols ) ) / 8
 3597.             t$1640 = t$1638 + 8 * max( 0, ncols )
 3597.             t$1641 = 8 * ( 7 + t$1638 + 8 * max( 0, ncols ) ) / 8
 3597.             t$1643 = t$1641 + 8 * max( 0, ncols )
 3597.             t$1644 = 8 * ( 7 + t$1641 + 8 * max( 0, ncols ) ) / 8
 3597.             t$1646 = t$1644 + 8 * max( 0, ncols )
 3597.             t$1647 = 8 * ( 7 + t$1644 + 8 * max( 0, ncols ) ) / 8
 3597.             t$1649 = t$1647 + 8 * max( 0, ncols )
 3597.             t$1629 = int( _alloc( t$1647 + 8 * max( 0, ncols ) ), 8 )
 3597.             t$1630 = t$1629
 3597.             t$1633 = t$1632 + t$1629
 3597.             t$1636 = t$1635 + t$1629
 3597.             t$1639 = t$1638 + t$1629
 3597.             t$1642 = t$1641 + t$1629
 3597.             t$1645 = t$1644 + t$1629
 3597.             t$1648 = t$1647 + t$1629
 3597.             if ( $icount_S43 == 1 ) then
 3597.                if ( nmax > 0 ) then
 3597.                   $I_L3597_270 = 0
 3597. !dir$ ivdep
 3597.                   do
 3597.                      if ( icheck(1 + $I_L3597_270) == 1 ) then
 3597.                         $ntyp_S76 = itype(1 + $I_L3597_270)
 3597.                         if ( $ntyp_S76 /= 11 ) then
 3597.                            if ( $ntyp_S76 /= 13 ) then
 3597.                               $tv_WR0_R17 = tc(1 + $I_L3597_270)
 3597.                               $d2_WR0_R18 = ( 1.0/( topt2(1 + $I_L3597_270, 1) + -tll2(1 + $I_L3597_270, 1) ) * ( tu2(1 + $I_L3597_270, 1) + -topt2(1 + $I_L3597_270, 1) ) )
 3597.                               $tv_WR0_R17 = max( min( $tv_WR0_R17, ( -1.0000000000000001e-1 + tu2(1 + $I_L3597_270, 1) ) ), ( 1.0000000000000001e-1 + tll2(1 + $I_L3597_270, 1) ) )
 3597.                               $ft_WR0_R19 = _expn( $d2_WR0_R18 * log( ( ( tu2(1 + $I_L3597_270, 1) + -$tv_WR0_R17 ) * 1.0/( tu2(1 + $I_L3597_270, 1) + -topt2(1 + $I_L3597_270, 1) ) ) ) ) * ( 1.0/( topt2(1 + $I_L3597_270, 1) + -tll2(1 + $I_L3597_270, 1) ) * ( $tv_WR0_R17 + -tll2(1 + $I_L3597_270, 1) ) )
 3597.                               $ft_WR0_R19 = max( 1.0000000000000001e-5, min( 1.0, $ft_WR0_R19 ) )
 3597.                               ft1(1 + $I_L3597_270) = $ft_WR0_R19
 3597.                               $xrot_S77 = rootd($ntyp_S76, 1)
 3597.                               $SC_dep_I25 = 0.0
 3597.                               $SC_dep_I26 = 0.0
 3597.                               $SC_dep_I24 = min( $xrot_S77, zdepth($ntyp_S76, 1) )
 3597.                               $xrot_S78 = $xrot_S77 + -zdepth($ntyp_S76, 1)
 3597.                               if ( $xrot_S77 + -zdepth($ntyp_S76, 1) > 0.0 ) then
 3597.                                  $SC_dep_I25 = min( $xrot_S78, zdepth($ntyp_S76, 2) )
 3597.                                  $xrot_S78 = $xrot_S78 + -zdepth($ntyp_S76, 2)
 3597.                               endif
 3597.                               if ( $xrot_S78 > 0.0 ) then
 3597.                                  $SC_dep_I26 = min( $xrot_S78, zdepth($ntyp_S76, 3) )
 3597.                               endif
 3597.                               $xdr_S79 = ( 1.0/$xrot_S77 * ( $SC_dep_I24 * phsoil(1 + $I_L3597_270, 1) + $SC_dep_I25 * phsoil(1 + $I_L3597_270, 2) + $SC_dep_I26 * phsoil(1 + $I_L3597_270, 3) ) )
 3597.                               $xdr_S80 = log( max( 1.0000000000000001e-5, -$xdr_S79 ) )
 3597.                               $arg_S81 = -( ph12(1 + $I_L3597_270, 1) * ( ph22(1 + $I_L3597_270, 1) + -$xdr_S80 ) )
 3597.                               $fp_WR0_R20 = 1.0 + -_expn( ( min( 0.0, $arg_S81 ) ) )
 3597.                               if ( w(1 + $I_L3597_270, 2) > 1.4999999999999999e-1 ) then
 3597.                                  $fp_WR0_R20 = max( 5.0000000000000003e-2, $fp_WR0_R20 )
 3597.                               endif
 3597.                               $fp_WR0_R20 = max( 1.0000000000000001e-5, min( 1.0, $fp_WR0_R20 ) )
 3597.                               fp1(1 + $I_L3597_270) = $fp_WR0_R20
 3597.                            endif
 3597.                         endif
 3597.                      endif
 3597.                      $I_L3597_270 = 1 + $I_L3597_270
 3597.                      if ( $I_L3597_270 >= nmax ) exit
 3597.                   enddo
 3597.                endif
 3597.             endif
 3597.             if ( nmax > 0 ) then
 3597.                $I_L3597_272 = 0
 3597. !dir$ ivdep
 3597.                do
 3597.                   if ( icheck(1 + $I_L3597_272) == 1 ) then
 3597.                      $drop_WR0_R21 = -ea(1 + $I_L3597_272) + _expn( 21.65605 + -( 5418.0 * 1.0/ta(1 + $I_L3597_272) ) )
 3597.                      $fd_WR0_R22 = max( 1.0000000000000001e-5, 1.0/( 1.0 + $drop_WR0_R21 * defac2(1 + $I_L3597_272, 1) ) )
 3597.                      $fd_WR0_R22 = min( 1.0, $fd_WR0_R22 )
 3597.                      fd(1 + $I_L3597_272) = $fd_WR0_R22
 3597.                   endif
 3597.                   $I_L3597_272 = 1 + $I_L3597_272
 3597.                   if ( $I_L3597_272 >= nmax ) exit
 3597.                enddo
 3597.                $I_L3597_274 = 0
 3597. !dir$ ivdep
 3597.                do
 3597.                   if ( icheck(1 + $I_L3597_274) == 1 ) then
 3597.                      $ntyp_S85 = itype(1 + $I_L3597_274)
 3597.                      rst(1 + $I_L3597_274, 2) = 100000.0
 3597.                      if ( $ntyp_S85 == 11 .orelse. $ntyp_S85 == 13 ) then
 3597.                         rst(1 + $I_L3597_274, 1) = 100000.0
 3597.                      else
 3597.                         $ftpd_WR0_R23 = fd(1 + $I_L3597_274) * fp1(1 + $I_L3597_274) * ft1(1 + $I_L3597_274)
 3597.                         $rst_WR0_R24 = ( stm(1 + $I_L3597_274, 1) * 1.0/( $ftpd_WR0_R23 * vcover2(1 + $I_L3597_274, 1) ) )
 3597.                         $rst_WR0_R24 = min( 100000.0, $rst_WR0_R24 )
 3597.                         rst(1 + $I_L3597_274, 1) = $rst_WR0_R24
 3597.                      endif
 3597.                   endif
 3597.                   $I_L3597_274 = 1 + $I_L3597_274
 3597.                   if ( $I_L3597_274 >= nmax ) exit
 3597.                enddo
 3597.             endif
 3597.             _free( t$1629 )
 3597.             (zdepth%base_addr)($SC_zdepth_I11, $SC_zdepth_I14, 0) = _copyout( zdepth )
 3597.             (rootd%base_addr)($SC_rootd_I20, $SC_rootd_I23, 0) = _copyout( rootd )
 3603.             t$317 = ncols
 3603.             t$1586 = max( 0, ncols )
 3603.             t$1587 = max( 0, ncols )
 3603.             t$1588 = 2 * max( 0, ncols )
 3603.             if ( nmax <= 0 ) goto 10
 3603.             $I_L3603_276 = 0
 3603. !dir$ ivdep
 3603.             do
 3603.                if ( icheck(1 + $I_L3603_276) == 1 ) then
 3603.                   rcp(1 + $I_L3603_276) = 1004.6 * rhoair(1 + $I_L3603_276)
 3603.                   $rc_WR0_R25 = rb(1 + $I_L3603_276) + rb(1 + $I_L3603_276) * fc(1 + $I_L3603_276) + fc(1 + $I_L3603_276) * rst(1 + $I_L3603_276, 1)
 3603.                   rc(1 + $I_L3603_276) = $rc_WR0_R25
 3603.                   $coc_S92 = ( 1.0/$rc_WR0_R25 * ( 1.0 + -wc(1 + $I_L3603_276) ) ) + ( 5.0e-1 * wc(1 + $I_L3603_276) * 1.0/rb(1 + $I_L3603_276) )
 3603.                   $rg_WR0_R26 = fg(1 + $I_L3603_276) * rst(1 + $I_L3603_276, 2)
 3603.                   rg(1 + $I_L3603_276) = $rg_WR0_R26
 3603.                   $rsurf_S87 = fg(1 + $I_L3603_276) * rsoil(1 + $I_L3603_276)
 3603.                   $tem_S88 = ( vcover2(1 + $I_L3603_276, 2) * 1.0/( $rg_WR0_R26 + rd(1 + $I_L3603_276) ) * ( 1.0 + -wg(1 + $I_L3603_276) ) )
 3603.                   $cog2_S89 = $tem_S88 + ( ( 1.0 + -vcover2(1 + $I_L3603_276, 2) ) * 1.0/( $rsurf_S87 + rd(1 + $I_L3603_276) ) ) + ( vcover2(1 + $I_L3603_276, 2) * 1.0/( 44.0 + $rsurf_S87 + rd(1 + $I_L3603_276) ) )
 3603.                   $cog1_S93 = $tem_S88 + hr(1 + $I_L3603_276) * ( $cog2_S89 + -$tem_S88 )
 3603.                   $xnum_S90 = vcover2(1 + $I_L3603_276, 2) * ( wg(1 + $I_L3603_276) * 1.0/rd(1 + $I_L3603_276) )
 3603.                   $d2_S95 = $coc_S92 + ( $cog2_S89 + $xnum_S90 ) + 1.0/ra(1 + $I_L3603_276)
 3603.                   $top_S96 = ( em(1 + $I_L3603_276) * 1.0/ra(1 + $I_L3603_276) ) + $coc_S92 * etc(1 + $I_L3603_276) + etg(1 + $I_L3603_276) * ( $xnum_S90 + $cog1_S93 )
 3603.                   ea(1 + $I_L3603_276) = ( $top_S96 * 1.0/$d2_S95 )
 3603.                endif
 3603.                $I_L3603_276 = 1 + $I_L3603_276
 3603.                if ( $I_L3603_276 >= nmax ) exit
 3603.             enddo
 3608.             $I_L3608_278 = 0
 3608. !dir$ ivdep
 3608.             do
 3609.                if ( icheck(1 + $I_L3608_278) == 1 ) then
 3610.                   ta(1 + $I_L3608_278) = ( 1.0/( 1.0/rb(1 + $I_L3608_278) + 1.0/rd(1 + $I_L3608_278) + 1.0/ra(1 + $I_L3608_278) ) * ( ( tc(1 + $I_L3608_278) * 1.0/rb(1 + $I_L3608_278) ) + ( tg(1 + $I_L3608_278) * 1.0/rd(1 + $I_L3608_278) ) + bps(1 + $I_L3608_278) * ( tm(1 + $I_L3608_278) * 1.0/ra(1 + $I_L3608_278) ) ) )
 3610.                endif
 3613.                $I_L3608_278 = 1 + $I_L3608_278
 3612.                if ( $I_L3608_278 >= nmax ) exit
 3612.             enddo
 3619.             if ( $icount_S43 > 10 ) then
 3615.                $I_L3615_280 = 0
 3615. !dir$ ivdep
 3615.                do
 3616.                   if ( icheck(1 + $I_L3615_280) == 1 ) then
 3621.                      icheck(1 + $I_L3615_280) = 0
 3621.                   endif
 3624.                   $I_L3615_280 = 1 + $I_L3615_280
 3623.                   if ( $I_L3615_280 >= nmax ) exit
 3623.                enddo
 3623.             else
 3615.                $I_L3615_314 = 0
 3615. !dir$ ivdep
 3615.                do
 3616.                   if ( icheck(1 + $I_L3615_314) == 1 ) then
 3617.                      $y1_S99 = abs( ta(1 + $I_L3615_314) + -tsav(1 + $I_L3615_314) )
 3618.                      $y2_S100 = abs( ea(1 + $I_L3615_314) + -esav(1 + $I_L3615_314) )
 3619.                      if ( $y1_S99 <= 1.0e-2 ) then
 3619.                         if ( $y2_S100 <= 5.0000000000000001e-3 ) then
 3621.                            icheck(1 + $I_L3615_314) = 0
 3621.                         endif
 3621.                      endif
 3621.                   endif
 3624.                   $I_L3615_314 = 1 + $I_L3615_314
 3623.                   if ( $I_L3615_314 >= nmax ) exit
 3623.                enddo
 3623.             endif
 3626.             $I_L3626_282 = 0
 3626. !dir$ ivdep
 3626.             do
 3627.                if ( icheck(1 + $I_L3626_282) == 1 ) then
 3626.                   goto 10
 3626.                endif
 3628.                $I_L3626_282 = 1 + $I_L3626_282
 3628.                if ( $I_L3626_282 >= nmax ) exit
 3628.             enddo
 3628.    10       continue
 3630.             if ( nmax > 0 ) then
 3630.                $I_L3630_284 = 0
 3630. !dir$ ivdep
 3630.                do
 3631.                   fc(1 + $I_L3630_284) = 1.0
 3632.                   fg(1 + $I_L3630_284) = 1.0
 3633.                   idewco(1 + $I_L3630_284) = 0
 3634.                   icheck(1 + $I_L3630_284) = 1
 3635.                   $I_L3630_284 = 1 + $I_L3630_284
 3630.                   if ( $I_L3630_284 >= nmax ) exit
 3630.                enddo
 3637.                $I_L3637_286 = 0
 3637. !dir$ ivdep
 3637.                do
 3638.                   $tc_WR0_R27 = tcsav(1 + $I_L3637_286)
 3638.                   tc(1 + $I_L3637_286) = $tc_WR0_R27
 3639.                   $tg_WR0_R28 = tgsav(1 + $I_L3637_286)
 3639.                   tg(1 + $I_L3637_286) = $tg_WR0_R28
 3640.                   tm(1 + $I_L3637_286) = tmsav(1 + $I_L3637_286)
 3641.                   qm(1 + $I_L3637_286) = qmsav(1 + $I_L3637_286)
 3642.                   radt(1 + $I_L3637_286, 1) = rdsav(1 + $I_L3637_286, 1)
 3643.                   radt(1 + $I_L3637_286, 2) = rdsav(1 + $I_L3637_286, 2)
 3644.                   etc(1 + $I_L3637_286) = _expn( 21.65605 + -( 5418.0 * 1.0/$tc_WR0_R27 ) )
 3645.                   etg(1 + $I_L3637_286) = _expn( 21.65605 + -( 5418.0 * 1.0/$tg_WR0_R28 ) )
 3646.                   btc(1 + $I_L3637_286) = ( 1.0/( $tc_WR0_R27 * $tc_WR0_R27 ) * _expn( 30.253530000000001 + -( 5418.0 * 1.0/$tc_WR0_R27 ) ) )
 3647.                   btg(1 + $I_L3637_286) = ( 1.0/( $tg_WR0_R28 * $tg_WR0_R28 ) * _expn( 30.253530000000001 + -( 5418.0 * 1.0/$tg_WR0_R28 ) ) )
 3648.                   $I_L3637_286 = 1 + $I_L3637_286
 3637.                   if ( $I_L3637_286 >= nmax ) exit
 3637.                enddo
 3637.                do
 3652.                   t$317 = ncols
 3652.                   t$1586 = max( 0, ncols )
 3652.                   t$1587 = max( 0, ncols )
 3652.                   t$1588 = 2 * max( 0, ncols )
 3652.                   $I_L3652_288 = 0
 3652. !dir$ ivdep
 3652.                   do
 3652.                      if ( icheck(1 + $I_L3652_288) == 1 ) then
 3652.                         rcp(1 + $I_L3652_288) = 1004.6 * rhoair(1 + $I_L3652_288)
 3652.                         $rc_WR0_R29 = rb(1 + $I_L3652_288) + rb(1 + $I_L3652_288) * fc(1 + $I_L3652_288) + fc(1 + $I_L3652_288) * rst(1 + $I_L3652_288, 1)
 3652.                         rc(1 + $I_L3652_288) = $rc_WR0_R29
 3652.                         $coc_S110 = ( 1.0/$rc_WR0_R29 * ( 1.0 + -wc(1 + $I_L3652_288) ) ) + ( 5.0e-1 * wc(1 + $I_L3652_288) * 1.0/rb(1 + $I_L3652_288) )
 3652.                         $rg_WR0_R30 = fg(1 + $I_L3652_288) * rst(1 + $I_L3652_288, 2)
 3652.                         rg(1 + $I_L3652_288) = $rg_WR0_R30
 3652.                         $rsurf_S105 = fg(1 + $I_L3652_288) * rsoil(1 + $I_L3652_288)
 3652.                         $tem_S106 = ( vcover2(1 + $I_L3652_288, 2) * 1.0/( $rg_WR0_R30 + rd(1 + $I_L3652_288) ) * ( 1.0 + -wg(1 + $I_L3652_288) ) )
 3652.                         $cog2_S107 = $tem_S106 + ( ( 1.0 + -vcover2(1 + $I_L3652_288, 2) ) * 1.0/( $rsurf_S105 + rd(1 + $I_L3652_288) ) ) + ( vcover2(1 + $I_L3652_288, 2) * 1.0/( 44.0 + $rsurf_S105 + rd(1 + $I_L3652_288) ) )
 3652.                         $cog1_S111 = $tem_S106 + hr(1 + $I_L3652_288) * ( $cog2_S107 + -$tem_S106 )
 3652.                         $xnum_S108 = vcover2(1 + $I_L3652_288, 2) * ( wg(1 + $I_L3652_288) * 1.0/rd(1 + $I_L3652_288) )
 3652.                         $d2_S113 = $coc_S110 + ( $cog2_S107 + $xnum_S108 ) + 1.0/ra(1 + $I_L3652_288)
 3652.                         $top_S114 = ( em(1 + $I_L3652_288) * 1.0/ra(1 + $I_L3652_288) ) + $coc_S110 * etc(1 + $I_L3652_288) + etg(1 + $I_L3652_288) * ( $xnum_S108 + $cog1_S111 )
 3652.                         ea(1 + $I_L3652_288) = ( $top_S114 * 1.0/$d2_S113 )
 3652.                      endif
 3652.                      $I_L3652_288 = 1 + $I_L3652_288
 3652.                      if ( $I_L3652_288 >= nmax ) exit
 3652.                   enddo
 3657.                   $I_L3657_290 = 0
 3657. !dir$ ivdep
 3657.                   do
 3658.                      if ( icheck(1 + $I_L3657_290) == 1 ) then
 3659.                         $ecf_WR0_R31 = sign( 1.0, etc(1 + $I_L3657_290) + -ea(1 + $I_L3657_290) )
 3660.                         $egf_WR0_R32 = sign( 1.0, etg(1 + $I_L3657_290) + -ea(1 + $I_L3657_290) )
 3661.                         $dewc_WR0_R33 = -1.0 + 2.0 * fc(1 + $I_L3657_290)
 3662.                         $dewg_WR0_R34 = -1.0 + 2.0 * fg(1 + $I_L3657_290)
 3664.                         egf(1 + $I_L3657_290) = ( $egf_WR0_R32 * $dewg_WR0_R34 )
 3663.                         ecf(1 + $I_L3657_290) = ( $ecf_WR0_R31 * $dewc_WR0_R33 )
 3663.                      endif
 3666.                      $I_L3657_290 = 1 + $I_L3657_290
 3665.                      if ( $I_L3657_290 >= nmax ) exit
 3665.                   enddo
 3668.                   $I_L3668_292 = 0
 3668. !dir$ ivdep
 3668.                   do
 3669.                      if ( ecf(1 + $I_L3668_292) <= 0.0 .orelse. egf(1 + $I_L3668_292) <= 0.0 ) then
 3669.                         if ( idewco(1 + $I_L3668_292) == 3 ) then
 3669.                            goto 20
 3669.                         else
 3673.                            $idewco_WR0_R35 = 1 + idewco(1 + $I_L3668_292)
 3673.                            idewco(1 + $I_L3668_292) = $idewco_WR0_R35
 3674.                            if ( $idewco_WR0_R35 == 1 ) then
 3675.                               fc(1 + $I_L3668_292) = 0.0
 3676.                               fg(1 + $I_L3668_292) = 1.0
 3677.                            else if ( $idewco_WR0_R35 == 2 ) then
 3678.                               fc(1 + $I_L3668_292) = 1.0
 3679.                               fg(1 + $I_L3668_292) = 0.0
 3679.                            else if ( $idewco_WR0_R35 == 3 ) then
 3681.                               fc(1 + $I_L3668_292) = 0.0
 3682.                               fg(1 + $I_L3668_292) = 0.0
 3682.                            endif
 3682.                         endif
 3682.                      else
 3682.    20                   continue
 3671.                         icheck(1 + $I_L3668_292) = 0
 3671.                      endif
 3685.                      $I_L3668_292 = 1 + $I_L3668_292
 3684.                      if ( $I_L3668_292 >= nmax ) exit
 3684.                   enddo
 3687.                   $I_L3687_294 = 0
 3687. !dir$ ivdep
 3687.                   do
 3688.                      if ( icheck(1 + $I_L3687_294) == 1 ) then
 3687.                         goto 30
 3687.                      endif
 3689.                      $I_L3687_294 = 1 + $I_L3687_294
 3689.                      if ( $I_L3687_294 >= nmax ) exit
 3689.                   enddo
 3689.                else
 3652.                   t$317 = ncols
 3652.                   t$1586 = max( 0, ncols )
 3652.                   t$1587 = max( 0, ncols )
 3652.                   t$1588 = 2 * max( 0, ncols )
 3652.                endif
 3652.    30          continue
 3691.                call temres( bps(1), psb(1), em(1), gmt(1, 1), gmq(1, 1), psy(1), rcp(1), wc(1), wg(1), fc(1), fg(1), hr(1), hgdtg(1), hgdtc(1), hgdtm(1), hcdtg(1), hcdtc(1), hcdtm(1), egdtg(1), egdtc(1), egdqm(1), ecdtg(1), ecdtc(1), ecdqm(1), deadtg(1), deadtc(1), deadqm(1), ect(1), eci(1), egt(1), egi(1), egs(1), ec(1), eg(1), hc(1), hg(1), ecidif(1), egidif(1), ra(1), rb(1), rd(1), rc(1), rg(1), ta(1), ea(1), etc(1), etg(1), btc(1), btg(1), radt(1, 1), rst(1, 1), rsoil(1), hrr(1), cc(1), cg(1), satcap(1, 1), dtc(1), dtg(1), dtm(1), dqm(1), thermk(1), tc(1), tg(1), td(1), capac(1, 1), qm(1), tm(1), psur(1), dtc3x, nmax, vcover2(1, 1), ncols )
 3702.                if ( $ncount_S9 > 1 ) goto 40
 3703.                if ( nmax > 0 ) then
 3703.                   $I_L3703_296 = 0
 3703. !dir$ ivdep
 3703.                   do
 3704.                      tc(1 + $I_L3703_296) = tc(1 + $I_L3703_296) + dtc(1 + $I_L3703_296)
 3705.                      tg(1 + $I_L3703_296) = tg(1 + $I_L3703_296) + dtg(1 + $I_L3703_296)
 3706.                      tm(1 + $I_L3703_296) = tm(1 + $I_L3703_296) + dtm(1 + $I_L3703_296)
 3707.                      qm(1 + $I_L3703_296) = qm(1 + $I_L3703_296) + dqm(1 + $I_L3703_296)
 3708.                      $I_L3703_296 = 1 + $I_L3703_296
 3703.                      if ( $I_L3703_296 >= nmax ) exit
 3703.                   enddo
 3703.                endif
 3708.             enddo
 3708.    40       continue
 3712.             t$428 = ncols
 3712.             t$1650 = max( 0, ncols )
 3712.             t$1651 = max( 0, ncols )
 3712.             t$1652 = 2 * max( 0, ncols )
 3712.             t$1655 = 8 * max( 0, ncols )
 3712.             t$1656 = 8 * ( 7 + 8 * max( 0, ncols ) ) / 8
 3712.             t$1658 = t$1656 + 8 * max( 0, ncols )
 3712.             t$1659 = 8 * ( 7 + t$1656 + 8 * max( 0, ncols ) ) / 8
 3712.             t$1661 = t$1659 + 8 * max( 0, ncols )
 3712.             t$1662 = 8 * ( 7 + t$1659 + 8 * max( 0, ncols ) ) / 8
 3712.             t$1664 = t$1662 + 8 * max( 0, ncols )
 3712.             t$1665 = 8 * ( 7 + t$1662 + 8 * max( 0, ncols ) ) / 8
 3712.             t$1667 = t$1665 + 8 * max( 0, ncols )
 3712.             t$1668 = 8 * ( 7 + t$1665 + 8 * max( 0, ncols ) ) / 8
 3712.             t$1670 = t$1668 + 8 * max( 0, ncols )
 3712.             t$1671 = 8 * ( 7 + t$1668 + 8 * max( 0, ncols ) ) / 8
 3712.             t$1673 = t$1671 + 8 * max( 0, ncols )
 3712.             t$1674 = 8 * ( 7 + t$1671 + 8 * max( 0, ncols ) ) / 8
 3712.             t$1676 = t$1674 + 8 * max( 0, ncols )
 3712.             t$1677 = 8 * ( 7 + t$1674 + 8 * max( 0, ncols ) ) / 8
 3712.             t$1679 = t$1677 + 8 * max( 0, ncols )
 3712.             t$1653 = int( _alloc( t$1677 + 8 * max( 0, ncols ) ), 8 )
 3712.             t$1654 = t$1653
 3712.             t$1657 = t$1656 + t$1653
 3712.             t$1660 = t$1659 + t$1653
 3712.             t$1663 = t$1662 + t$1653
 3712.             t$1666 = t$1665 + t$1653
 3712.             t$1669 = t$1668 + t$1653
 3712.             t$1672 = t$1671 + t$1653
 3712.             t$1675 = t$1674 + t$1653
 3712.             t$1678 = t$1677 + t$1653
 3712.             if ( nmax > 0 ) then
 3712.                $I_L3712_298 = 0
 3712. !dir$ ivdep
 3712.                do
 3712.                   tgen(1 + $I_L3712_298) = dtg(1 + $I_L3712_298) + tg(1 + $I_L3712_298)
 3712.                   tcen(1 + $I_L3712_298) = dtc(1 + $I_L3712_298) + tc(1 + $I_L3712_298)
 3712.                   $I_L3712_298 = 1 + $I_L3712_298
 3712.                   if ( $I_L3712_298 >= nmax ) exit
 3712.                enddo
 3712.                $I_L3712_300 = 0
 3712. !dir$ ivdep
 3712.                do
 3712.                   if ( tgen(1 + $I_L3712_300) <= 273.16000000000003 ) then
 3712.                      egs(1 + $I_L3712_300) = eg(1 + $I_L3712_300) + -egi(1 + $I_L3712_300)
 3712.                      egt(1 + $I_L3712_300) = 0.0
 3712.                   endif
 3712.                   $facks_WR0_R36 = 1.0
 3712.                   facks(1 + $I_L3712_300) = 1.0
 3712.                   if ( tcen(1 + $I_L3712_300) <= 273.16000000000003 ) then
 3712.                      $facks_WR0_R36 = 8.8308754880898477e-1
 3712.                      facks(1 + $I_L3712_300) = 8.8308754880898477e-1
 3712.                   endif
 3712.                   if ( ( eci(1 + $I_L3712_300) + ect(1 + $I_L3712_300) ) <= 0.0 ) then
 3712.                      eci(1 + $I_L3712_300) = eci(1 + $I_L3712_300) + ect(1 + $I_L3712_300)
 3712.                      ect(1 + $I_L3712_300) = 0.0
 3712.                      $facks_WR0_R36 = 1.0/$facks_WR0_R36
 3712.                      facks(1 + $I_L3712_300) = $facks_WR0_R36
 3712.                   endif
 3712.                   $I_L3712_300 = 1 + $I_L3712_300
 3712.                   if ( $I_L3712_300 >= nmax ) exit
 3712.                enddo
 3712.                $I_L3712_304 = 0
 3712. !dir$ ivdep
 3712.                do
 3712.                   ecmass(1 + $I_L3712_304) = 3.9682539682539683e-7 * ( ect(1 + $I_L3712_304) + eci(1 + $I_L3712_304) * facks(1 + $I_L3712_304) )
 3712.                   capac(1 + $I_L3712_304, 1) = capac(1 + $I_L3712_304, 1) + -3.9682539682539682e-10 * eci(1 + $I_L3712_304) * facks(1 + $I_L3712_304)
 3712.                   $I_L3712_304 = 1 + $I_L3712_304
 3712.                   if ( $I_L3712_304 >= nmax ) exit
 3712.                enddo
 3712.                $I_L3712_306 = 0
 3712. !dir$ ivdep
 3712.                do
 3712.                   $facks_WR0_R37 = 1.0
 3712.                   facks(1 + $I_L3712_306) = 1.0
 3712.                   if ( tgen(1 + $I_L3712_306) <= 273.16000000000003 ) then
 3712.                      $facks_WR0_R37 = 8.8308754880898477e-1
 3712.                      facks(1 + $I_L3712_306) = 8.8308754880898477e-1
 3712.                   endif
 3712.                   if ( ( egt(1 + $I_L3712_306) + egi(1 + $I_L3712_306) ) <= 0.0 ) then
 3712.                      egi(1 + $I_L3712_306) = egt(1 + $I_L3712_306) + egi(1 + $I_L3712_306)
 3712.                      egt(1 + $I_L3712_306) = 0.0
 3712.                      $facks_WR0_R37 = 1.0/$facks_WR0_R37
 3712.                      facks(1 + $I_L3712_306) = $facks_WR0_R37
 3712.                   endif
 3712.                   $I_L3712_306 = 1 + $I_L3712_306
 3712.                   if ( $I_L3712_306 >= nmax ) exit
 3712.                enddo
 3712.                $I_L3712_308 = 0
 3712. !dir$ ivdep
 3712.                do
 3712.                   $egmass_WR0_R38 = 3.9682539682539683e-7 * ( egt(1 + $I_L3712_308) + egs(1 + $I_L3712_308) + facks(1 + $I_L3712_308) * egi(1 + $I_L3712_308) )
 3712.                   egmass(1 + $I_L3712_308) = $egmass_WR0_R38
 3712.                   etmass(1 + $I_L3712_308) = $egmass_WR0_R38 + ecmass(1 + $I_L3712_308)
 3712.                   hflux(1 + $I_L3712_308) = hg(1 + $I_L3712_308) + hc(1 + $I_L3712_308)
 3712.                   capac(1 + $I_L3712_308, 2) = capac(1 + $I_L3712_308, 2) + -3.9682539682539682e-10 * facks(1 + $I_L3712_308) * egi(1 + $I_L3712_308)
 3712.                   $I_L3712_308 = 1 + $I_L3712_308
 3712.                   if ( $I_L3712_308 >= nmax ) exit
 3712.                enddo
 3712.             endif
 3712.             $dtc3xi_S122 = 1.0/dtc3x
 3712.             if ( nmax > 0 ) then
 3712.                $I_L3712_302 = 0
 3712. !dir$ ivdep
 3712.                do
 3712.                   chf(1 + $I_L3712_302) = $dtc3xi_S122 * cc(1 + $I_L3712_302) * dtc(1 + $I_L3712_302)
 3712.                   shf(1 + $I_L3712_302) = 7.2722050925925924e-5 * cg(1 + $I_L3712_302) * ( tg(1 + $I_L3712_302) + dtg(1 + $I_L3712_302) + -td(1 + $I_L3712_302) ) + $dtc3xi_S122 * dtg(1 + $I_L3712_302) * cg(1 + $I_L3712_302)
 3712.                   $I_L3712_302 = 1 + $I_L3712_302
 3712.                   if ( $I_L3712_302 >= nmax ) exit
 3712.                enddo
 3712.             endif
 3712.             _free( t$1653 )
 3719.             if ( nmax > 0 ) then
 3719.                $I_L3719_310 = 0
 3719. !dir$ ivdep
 3719.                do
 3720.                   $fac_S129 = ( 9.8000000000000004e-2 * 1.0/( dtc3x * psb(1 + $I_L3719_310) ) )
 3721.                   $dtmdt_S130 = ( 1.0/gmt(1 + $I_L3719_310, 2) * ( gmt(1 + $I_L3719_310, 3) + ( 9.9542106310969544e-4 * $fac_S129 * hflux(1 + $I_L3719_310) * 1.0/bps(1 + $I_L3719_310) ) ) )
 3722.                   $dqmdt_S131 = ( 1.0/gmq(1 + $I_L3719_310, 2) * ( gmq(1 + $I_L3719_310, 3) + $fac_S129 * etmass(1 + $I_L3719_310) ) )
 3723.                   dtm(1 + $I_L3719_310) = dtc3x * $dtmdt_S130
 3724.                   dqm(1 + $I_L3719_310) = dtc3x * $dqmdt_S131
 3725.                   gmt(1 + $I_L3719_310, 3) = $dtmdt_S130
 3726.                   gmq(1 + $I_L3719_310, 3) = $dqmdt_S131
 3727.                   tm(1 + $I_L3719_310) = tm(1 + $I_L3719_310) + ( dtc3x * $dtmdt_S130 )
 3728.                   qm(1 + $I_L3719_310) = qm(1 + $I_L3719_310) + ( dtc3x * $dqmdt_S131 )
 3729.                   $I_L3719_310 = 1 + $I_L3719_310
 3719.                   if ( $I_L3719_310 >= nmax ) exit
 3719.                enddo
 3736.                $SC_xbc_I37 = xbc%dim_1%EX
 3736.                $SC_xbc_I38 = xbc%dim_1%LB
 3736.                $SC_xbc_I40 = xbc%dim_2%SM
 3736.                $SC_xbc_I39 = xbc%dim_2%EX
 3736.                $SC_xbc_I41 = xbc%dim_2%LB
 3735.                $SC_xdc_I32 = xdc%dim_1%EX
 3735.                $SC_xdc_I33 = xdc%dim_1%LB
 3735.                $SC_xdc_I35 = xdc%dim_2%SM
 3735.                $SC_xdc_I34 = xdc%dim_2%EX
 3735.                $SC_xdc_I36 = xdc%dim_2%LB
 3734.                $SC_x0x_I27 = x0x%dim_1%EX
 3734.                $SC_x0x_I28 = x0x%dim_1%LB
 3734.                $SC_x0x_I30 = x0x%dim_2%SM
 3734.                $SC_x0x_I29 = x0x%dim_2%EX
 3734.                $SC_x0x_I31 = x0x%dim_2%LB
 3733.                $SC_xd_I5 = xd%dim_1%EX
 3733.                $SC_xd_I6 = xd%dim_1%LB
 3733.                $SC_xd_I8 = xd%dim_2%SM
 3733.                $SC_xd_I7 = xd%dim_2%EX
 3733.                $SC_xd_I9 = xd%dim_2%LB
 3730.                $I_L3730_312 = 0
 3730. !dir$ ivdep
 3730.                do
 3731.                   $ntyp_S133 = itype(1 + $I_L3730_312)
 3733.                   d(1 + $I_L3730_312) = (xd%base_addr)($ntyp_S133, mon(1 + $I_L3730_312), 0)
 3734.                   z0x(1 + $I_L3730_312) = (x0x%base_addr)($ntyp_S133, mon(1 + $I_L3730_312), 0)
 3735.                   rdc(1 + $I_L3730_312) = (xdc%base_addr)($ntyp_S133, mon(1 + $I_L3730_312), 0)
 3736.                   rbc(1 + $I_L3730_312) = (xbc%base_addr)($ntyp_S133, mon(1 + $I_L3730_312), 0)
 3737.                   $I_L3730_312 = 1 + $I_L3730_312
 3730.                   if ( $I_L3730_312 >= nmax ) exit
 3730.                enddo
 3730.             endif
 3102.             _free( t$1686 )
 3738.             return
 3738.       end
 3738.       
 3757.       
 3757.       subroutine interc( roff, cc, cg, satcap, snow, extk, tc, tg, td, capac, w, tm, ppc, ppl, vcover, itype, dtc3x, nmax, ncols, zlt2 )
 3757.       t$608 = ncols
 3849.       t$1733 = _zla( 0, ncols )
 3757.       t$1734 = _zla( 0, ncols )
 3757.       t$1735 = 2 * _zla( 0, ncols )
 3757.       t$1736 = 2 * _zla( 0, ncols )
 3757.       t$1737 = 6 * _zla( 0, ncols )
 3757.       t$1738 = 12 * _zla( 0, ncols )
 3757.       t$1739 = 2 * _zla( 0, ncols )
 3757.       t$1740 = 3 * _zla( 0, ncols )
 3853.       t$1743 = 8 * _zla( 0, ncols )
 3871.       t$1744 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 3871.       t$1746 = t$1744 + 8 * _zla( 0, ncols )
 3883.       t$1747 = 8 * ( 7 + t$1744 + 8 * _zla( 0, ncols ) ) / 8
 3883.       t$1749 = t$1747 + 16 * _zla( 0, ncols )
 3880.       t$1750 = 8 * ( 7 + t$1747 + 16 * _zla( 0, ncols ) ) / 8
 3880.       t$1752 = t$1750 + 8 * _zla( 0, ncols )
 3865.       t$1753 = 8 * ( 7 + t$1750 + 8 * _zla( 0, ncols ) ) / 8
 3865.       t$1755 = t$1753 + 8 * _zla( 0, ncols )
 3866.       t$1756 = 8 * ( 7 + t$1753 + 8 * _zla( 0, ncols ) ) / 8
 3866.       t$1758 = t$1756 + 8 * _zla( 0, ncols )
 3858.       t$1759 = 8 * ( 7 + t$1756 + 8 * _zla( 0, ncols ) ) / 8
 3858.       t$1761 = t$1759 + 8 * _zla( 0, ncols )
 3854.       t$1762 = 8 * ( 7 + t$1759 + 8 * _zla( 0, ncols ) ) / 8
 3854.       t$1764 = t$1762 + 8 * _zla( 0, ncols )
 3859.       t$1765 = 8 * ( 7 + t$1762 + 8 * _zla( 0, ncols ) ) / 8
 3859.       t$1767 = t$1765 + 8 * _zla( 0, ncols )
 3878.       t$1768 = 8 * ( 7 + t$1765 + 8 * _zla( 0, ncols ) ) / 8
 3878.       t$1770 = t$1768 + 8 * _zla( 0, ncols )
 3875.       t$1771 = 8 * ( 7 + t$1768 + 8 * _zla( 0, ncols ) ) / 8
 3875.       t$1773 = t$1771 + 8 * _zla( 0, ncols )
 3857.       t$1774 = 8 * ( 7 + t$1771 + 8 * _zla( 0, ncols ) ) / 8
 3857.       t$1776 = t$1774 + 8 * _zla( 0, ncols )
 3879.       t$1777 = 8 * ( 7 + t$1774 + 8 * _zla( 0, ncols ) ) / 8
 3879.       t$1779 = t$1777 + 8 * _zla( 0, ncols )
 3860.       t$1780 = 8 * ( 7 + t$1777 + 8 * _zla( 0, ncols ) ) / 8
 3860.       t$1782 = t$1780 + 8 * _zla( 0, ncols )
 3874.       t$1783 = 8 * ( 7 + t$1780 + 8 * _zla( 0, ncols ) ) / 8
 3874.       t$1785 = t$1783 + 8 * _zla( 0, ncols )
 3876.       t$1786 = 8 * ( 7 + t$1783 + 8 * _zla( 0, ncols ) ) / 8
 3876.       t$1788 = t$1786 + 8 * _zla( 0, ncols )
 3882.       t$1789 = 8 * ( 7 + t$1786 + 8 * _zla( 0, ncols ) ) / 8
 3882.       t$1791 = t$1789 + 16 * _zla( 0, ncols )
 3862.       t$1792 = 8 * ( 7 + t$1789 + 16 * _zla( 0, ncols ) ) / 8
 3862.       t$1794 = t$1792 + 8 * _zla( 0, ncols )
 3881.       t$1795 = 8 * ( 7 + t$1792 + 8 * _zla( 0, ncols ) ) / 8
 3881.       t$1797 = t$1795 + 8 * _zla( 0, ncols )
 3863.       t$1798 = 8 * ( 7 + t$1795 + 8 * _zla( 0, ncols ) ) / 8
 3863.       t$1800 = t$1798 + 8 * _zla( 0, ncols )
 3872.       t$1801 = 8 * ( 7 + t$1798 + 8 * _zla( 0, ncols ) ) / 8
 3872.       t$1803 = t$1801 + 8 * _zla( 0, ncols )
 3856.       t$1804 = 8 * ( 7 + t$1801 + 8 * _zla( 0, ncols ) ) / 8
 3856.       t$1806 = t$1804 + 8 * _zla( 0, ncols )
 3855.       t$1807 = 8 * ( 7 + t$1804 + 8 * _zla( 0, ncols ) ) / 8
 3855.       t$1809 = t$1807 + 8 * _zla( 0, ncols )
 3861.       t$1810 = 8 * ( 7 + t$1807 + 8 * _zla( 0, ncols ) ) / 8
 3861.       t$1812 = t$1810 + 8 * _zla( 0, ncols )
 3873.       t$1813 = 8 * ( 7 + t$1810 + 8 * _zla( 0, ncols ) ) / 8
 3873.       t$1815 = t$1813 + 8 * _zla( 0, ncols )
 3877.       t$1816 = 8 * ( 7 + t$1813 + 8 * _zla( 0, ncols ) ) / 8
 3877.       t$1818 = t$1816 + 8 * _zla( 0, ncols )
 3869.       t$1819 = 8 * ( 7 + t$1816 + 8 * _zla( 0, ncols ) ) / 8
 3869.       t$1821 = t$1819 + 8 * _zla( 0, ncols )
 3870.       t$1822 = 8 * ( 7 + t$1819 + 8 * _zla( 0, ncols ) ) / 8
 3870.       t$1824 = t$1822 + 8 * _zla( 0, ncols )
 3868.       t$1825 = 8 * ( 7 + t$1822 + 8 * _zla( 0, ncols ) ) / 8
 3868.       t$1827 = t$1825 + 8 * _zla( 0, ncols )
 3864.       t$1828 = 8 * ( 7 + t$1825 + 8 * _zla( 0, ncols ) ) / 8
 3864.       t$1830 = t$1828 + 8 * _zla( 0, ncols )
 3867.       t$1831 = 8 * ( 7 + t$1828 + 8 * _zla( 0, ncols ) ) / 8
 3867.       t$1833 = t$1831 + 8 * _zla( 0, ncols )
 3757.       t$1741 = int( _alloc( t$1831 + 8 * _zla( 0, ncols ) ), 8 )
 3853.       t$1742 = t$1741
 3871.       t$1745 = t$1744 + t$1741
 3883.       t$1748 = t$1747 + t$1741
 3880.       t$1751 = t$1750 + t$1741
 3865.       t$1754 = t$1753 + t$1741
 3866.       t$1757 = t$1756 + t$1741
 3858.       t$1760 = t$1759 + t$1741
 3854.       t$1763 = t$1762 + t$1741
 3859.       t$1766 = t$1765 + t$1741
 3878.       t$1769 = t$1768 + t$1741
 3875.       t$1772 = t$1771 + t$1741
 3857.       t$1775 = t$1774 + t$1741
 3879.       t$1778 = t$1777 + t$1741
 3860.       t$1781 = t$1780 + t$1741
 3874.       t$1784 = t$1783 + t$1741
 3876.       t$1787 = t$1786 + t$1741
 3882.       t$1790 = t$1789 + t$1741
 3862.       t$1793 = t$1792 + t$1741
 3881.       t$1796 = t$1795 + t$1741
 3863.       t$1799 = t$1798 + t$1741
 3872.       t$1802 = t$1801 + t$1741
 3856.       t$1805 = t$1804 + t$1741
 3855.       t$1808 = t$1807 + t$1741
 3861.       t$1811 = t$1810 + t$1741
 3873.       t$1814 = t$1813 + t$1741
 3877.       t$1817 = t$1816 + t$1741
 3869.       t$1820 = t$1819 + t$1741
 3870.       t$1823 = t$1822 + t$1741
 3868.       t$1826 = t$1825 + t$1741
 3864.       t$1829 = t$1828 + t$1741
 3867.       t$1832 = t$1831 + t$1741
 3904.       $F_A33 = ncols
 3904.       if ( ncols > 0 ) then
 3904.          $I_L3904_136 = 0
 3904. !dir$ ivdep
 3904.          do
 3904.             ap(1 + $I_L3904_136) = 0.0
 3904.             $I_L3904_136 = 1 + $I_L3904_136
 3904.             if ( $I_L3904_136 >= $F_A33 ) exit
 3904.          enddo
 3904.       endif
 3905.       if ( nmax > 0 ) then
 3932.          $SC_poros_I0 = poros%dim_1%EX
 3932.          $SC_poros_I1 = poros%dim_1%LB
 3905.          $I_L3905_102 = 0
 3905. !dir$ ivdep
 3905.          do
 3906.             ap(1 + $I_L3905_102) = 1.0e-4
 3907.             cp(1 + $I_L3905_102) = 9.9990000000000001e-1
 3908.             $totalp_WR0_R0 = ppl(1 + $I_L3905_102) + ppc(1 + $I_L3905_102)
 3909.             if ( ppl(1 + $I_L3905_102) + ppc(1 + $I_L3905_102) >= 1.0e-8 ) then
 3915.                ap(1 + $I_L3905_102) = ( 1.0/$totalp_WR0_R0 * ( 1.0e-4 * ppl(1 + $I_L3905_102) + 20.0 * ppc(1 + $I_L3905_102) ) )
 3921.                cp(1 + $I_L3905_102) = ( 1.0/$totalp_WR0_R0 * ( 9.9990000000000001e-1 * ppl(1 + $I_L3905_102) + 2.0599999999999999e-9 * ppc(1 + $I_L3905_102) ) )
 3921.             endif
 3924.             roff(1 + $I_L3905_102) = 0.0
 3925.             thru(1 + $I_L3905_102) = 0.0
 3926.             fpi(1 + $I_L3905_102) = 0.0
 3930.             $ntyp_S1 = itype(1 + $I_L3905_102)
 3932.             $theta_S2 = (poros%base_addr)($ntyp_S1, 0) * w(1 + $I_L3905_102, 1)
 3949.             csoil(1 + $I_L3905_102) = 49086963.174481615 * ( 1.0/( 1.1000000000000001 + -4.0000000000000002e-1 * $theta_S2 ) * ( 9.7999999999999997e-4 + 1.1999999999999999e-3 * $theta_S2 ) )
 3953.             p0(1 + $I_L3905_102) = 1.0e-3 * $totalp_WR0_R0
 3954.             $I_L3905_102 = 1 + $I_L3905_102
 3923.             if ( $I_L3905_102 >= nmax ) exit
 3923.          enddo
 3923.       endif
 4107.       $SC_zdepth_I4 = zdepth%dim_1%EX
 4107.       $SC_zdepth_I5 = zdepth%dim_1%LB
 4107.       $SC_zdepth_I7 = zdepth%dim_2%SM
 4107.       $SC_zdepth_I6 = zdepth%dim_2%EX
 4107.       $SC_zdepth_I8 = zdepth%dim_2%LB
 4092.       $SC_satco_I2 = satco%dim_1%EX
 4092.       $SC_satco_I3 = satco%dim_1%LB
 4107.       $SC_poros_I0 = poros%dim_1%EX
 4107.       $SC_poros_I1 = poros%dim_1%LB
 3958.       $I_L3958_138 = 0
 3958.       do
 3960.          if ( $I_L3958_138 == 0 ) then
 3961.             if ( nmax > 0 ) then
 3961.                $I_L3961_104 = 0
 3961. !dir$ ivdep
 3961.                do
 3963.                   ts(1 + $I_L3961_104) = tc(1 + $I_L3961_104)
 3966.                   specht(1 + $I_L3961_104) = 840.0 * zlt2(1 + $I_L3961_104, 1)
 3967.                   $I_L3961_104 = 1 + $I_L3961_104
 3961.                   if ( $I_L3961_104 >= nmax ) exit
 3961.                enddo
 3961.             endif
 3968.          else if ( nmax > 0 ) then
 3969.             $I_L3969_106 = 0
 3969. !dir$ ivdep
 3969.             do
 3970.                ts(1 + $I_L3969_106) = tg(1 + $I_L3969_106)
 3971.                specht(1 + $I_L3969_106) = csoil(1 + $I_L3969_106)
 3972.                $I_L3969_106 = 1 + $I_L3969_106
 3969.                if ( $I_L3969_106 >= nmax ) exit
 3969.             enddo
 3969.          endif
 3975.          if ( nmax > 0 ) then
 3976.             if ( $I_L3958_138 /= 0 ) then
 3975.                $I_L3975_108 = 0
 3975. !dir$ ivdep
 3975.                do
 3976.                   if ( ts(1 + $I_L3975_108) > 273.16000000000003 ) then
 3981.                      $xsc_WR0_R1 = max( 0.0, capac(1 + $I_L3975_108, 1 + $I_L3958_138) + -satcap(1 + $I_L3975_108, 1 + $I_L3958_138) )
 3983.                      capac(1 + $I_L3975_108, 1 + $I_L3958_138) = capac(1 + $I_L3975_108, 1 + $I_L3958_138) + -$xsc_WR0_R1
 3985.                      roff(1 + $I_L3975_108) = $xsc_WR0_R1 + roff(1 + $I_L3975_108)
 3985.                   endif
 3987.                   $I_L3975_108 = 1 + $I_L3975_108
 3986.                   if ( $I_L3975_108 >= nmax ) exit
 3986.                enddo
 3986.             else
 3975.                $I_L3975_130 = 0
 3975. !dir$ ivdep
 3975.                do
 3981.                   $xsc_WR0_R2 = max( 0.0, capac(1 + $I_L3975_130, 1 + $I_L3958_138) + -satcap(1 + $I_L3975_130, 1 + $I_L3958_138) )
 3983.                   capac(1 + $I_L3975_130, 1 + $I_L3958_138) = capac(1 + $I_L3975_130, 1 + $I_L3958_138) + -$xsc_WR0_R2
 3985.                   roff(1 + $I_L3975_130) = $xsc_WR0_R2 + roff(1 + $I_L3975_130)
 3987.                   $I_L3975_130 = 1 + $I_L3975_130
 3986.                   if ( $I_L3975_130 >= nmax ) exit
 3986.                enddo
 3986.             endif
 4025.             if ( $I_L3958_138 == 1 ) then
 3989.                $I_L3989_110 = 0
 3989. !dir$ ivdep
 3989.                do
 3994.                   spwet1(1 + $I_L3989_110) = 4200000.0 * min( 5.0000000000000003e-2, capac(1 + $I_L3989_110, 2) )
 3996.                   $capacp_WR0_R4 = 0.0
 3996.                   capacp(1 + $I_L3989_110, 2) = 0.0
 3998.                   $snowp_WR0_R5 = 0.0
 3998.                   snowp(1 + $I_L3989_110, 2) = 0.0
 4000.                   if ( ts(1 + $I_L3989_110) > 273.16000000000003 ) then
 4001.                      $capacp_WR0_R4 = capac(1 + $I_L3989_110, 2)
 4001.                      capacp(1 + $I_L3989_110, 2) = $capacp_WR0_R4
 4001.                   else
 4003.                      $snowp_WR0_R5 = capac(1 + $I_L3989_110, 2)
 4003.                      snowp(1 + $I_L3989_110, 2) = $snowp_WR0_R5
 4003.                   endif
 4006.                   capac(1 + $I_L3989_110, 2) = $capacp_WR0_R4
 4008.                   snow(1 + $I_L3989_110, 2) = $snowp_WR0_R5
 4010.                   zload(1 + $I_L3989_110) = $capacp_WR0_R4 + $snowp_WR0_R5
 4020.                   $fpi_WR0_R7 = vcover(1 + $I_L3989_110, 2) * ( 1.0 + -_expn( -( zlt2(1 + $I_L3989_110, 2) * extk(1 + $I_L3989_110, 2, 3, 1) * 1.0/vcover(1 + $I_L3989_110, 2) ) ) )
 4020.                   fpi(1 + $I_L3989_110) = $fpi_WR0_R7
 4025.                   $tti_WR0_R8 = p0(1 + $I_L3989_110)
 4025.                   tti(1 + $I_L3989_110) = $tti_WR0_R8
 4026.                   $I_L3989_110 = 1 + $I_L3989_110
 4025.                   if ( $I_L3989_110 >= nmax ) exit
 4025.                enddo
 4025.             else
 3989.                $I_L3989_132 = 0
 3989. !dir$ ivdep
 3989.                do
 3994.                   spwet1(1 + $I_L3989_132) = 4200000.0 * min( 5.0000000000000003e-2, capac(1 + $I_L3989_132, 1 + $I_L3958_138) )
 3996.                   $capacp_WR0_R10 = 0.0
 3996.                   capacp(1 + $I_L3989_132, 1 + $I_L3958_138) = 0.0
 3998.                   $snowp_WR0_R11 = 0.0
 3998.                   snowp(1 + $I_L3989_132, 1 + $I_L3958_138) = 0.0
 4000.                   if ( ts(1 + $I_L3989_132) > 273.16000000000003 ) then
 4001.                      $capacp_WR0_R10 = capac(1 + $I_L3989_132, 1 + $I_L3958_138)
 4001.                      capacp(1 + $I_L3989_132, 1 + $I_L3958_138) = $capacp_WR0_R10
 4001.                   else
 4003.                      $snowp_WR0_R11 = capac(1 + $I_L3989_132, 1 + $I_L3958_138)
 4003.                      snowp(1 + $I_L3989_132, 1 + $I_L3958_138) = $snowp_WR0_R11
 4003.                   endif
 4006.                   capac(1 + $I_L3989_132, 1 + $I_L3958_138) = $capacp_WR0_R10
 4008.                   snow(1 + $I_L3989_132, 1 + $I_L3958_138) = $snowp_WR0_R11
 4010.                   zload(1 + $I_L3989_132) = $capacp_WR0_R10 + $snowp_WR0_R11
 4020.                   $fpi_WR0_R13 = vcover(1 + $I_L3989_132, 1 + $I_L3958_138) * ( 1.0 + -_expn( -( zlt2(1 + $I_L3989_132, 1 + $I_L3958_138) * extk(1 + $I_L3989_132, 1 + $I_L3958_138, 3, 1) * 1.0/vcover(1 + $I_L3989_132, 1 + $I_L3958_138) ) ) )
 4020.                   fpi(1 + $I_L3989_132) = $fpi_WR0_R13
 4023.                   tti(1 + $I_L3989_132) = p0(1 + $I_L3989_132) * ( 1.0 + -$fpi_WR0_R13 )
 4026.                   $I_L3989_132 = 1 + $I_L3989_132
 4025.                   if ( $I_L3989_132 >= nmax ) exit
 4025.                enddo
 4025.             endif
 4030.             $I_L4030_112 = 0
 4030. !dir$ ivdep
 4030.             do
 4031.                xs(1 + $I_L4030_112) = 1.0
 4032.                if ( p0(1 + $I_L4030_112) >= 1.0000000000000001e-9 ) then
 4038.                   $arg_WR0_R15 = -( cp(1 + $I_L4030_112) * 1.0/ap(1 + $I_L4030_112) ) + ( 1.0/( p0(1 + $I_L4030_112) * fpi(1 + $I_L4030_112) * ap(1 + $I_L4030_112) ) * ( satcap(1 + $I_L4030_112, 1 + $I_L3958_138) + -zload(1 + $I_L4030_112) ) )
 4040.                   if ( $arg_WR0_R15 >= 1.0000000000000001e-9 ) then
 4046.                      $xs_WR0_R14 = -5.0000000000000003e-2 * log( $arg_WR0_R15 )
 4048.                      $xs_WR0_R14 = max( 0.0, min( 1.0, $xs_WR0_R14 ) )
 4048.                      xs(1 + $I_L4030_112) = $xs_WR0_R14
 4048.                   endif
 4048.                endif
 4051.                $I_L4030_112 = 1 + $I_L4030_112
 4050.                if ( $I_L4030_112 >= nmax ) exit
 4050.             enddo
 4053.             $I_L4053_114 = 0
 4053. !dir$ ivdep
 4053.             do
 4059.                $tex_WR0_R16 = -( xs(1 + $I_L4053_114) * ( satcap(1 + $I_L4053_114, 1 + $I_L3958_138) + -zload(1 + $I_L4053_114) ) ) + p0(1 + $I_L4053_114) * fpi(1 + $I_L4053_114) * ( cp(1 + $I_L4053_114) * xs(1 + $I_L4053_114) + 5.0000000000000003e-2 * ap(1 + $I_L4053_114) * ( 1.0 + -_expn( -20.0 * xs(1 + $I_L4053_114) ) ) )
 4062.                $tex_WR0_R16 = max( 0.0, $tex_WR0_R16 )
 4064.                if ( $I_L3958_138 == 1 ) then
 4064.                   $tex_WR0_R16 = 0.0
 4064.                endif
 4068.                $thru_WR0_R17 = $tex_WR0_R16 + tti(1 + $I_L4053_114)
 4068.                thru(1 + $I_L4053_114) = $thru_WR0_R17
 4069.                if ( $I_L3958_138 == 1 ) then
 4069.                   if ( tg(1 + $I_L4053_114) <= 273.16000000000003 ) then
 4070.                      $thru_WR0_R17 = 0.0
 4070.                      thru(1 + $I_L4053_114) = 0.0
 4070.                   endif
 4070.                endif
 4073.                $pinf_WR0_R18 = p0(1 + $I_L4053_114) + -$thru_WR0_R17
 4075.                if ( tm(1 + $I_L4053_114) > 273.16000000000003 ) then
 4076.                   capac(1 + $I_L4053_114, 1 + $I_L3958_138) = $pinf_WR0_R18 + capac(1 + $I_L4053_114, 1 + $I_L3958_138)
 4076.                else
 4078.                   snow(1 + $I_L4053_114, 1 + $I_L3958_138) = $pinf_WR0_R18 + snow(1 + $I_L4053_114, 1 + $I_L3958_138)
 4078.                endif
 4080.                $I_L4053_114 = 1 + $I_L4053_114
 4079.                if ( $I_L4053_114 >= nmax ) exit
 4079.             enddo
 4079.          endif
 4082.          if ( $I_L3958_138 == 1 ) then
 4083.             if ( nmax > 0 ) then
 4083.                $I_L4083_116 = 0
 4083. !dir$ ivdep
 4083.                do
 4084.                   $ntyp_S11 = itype(1 + $I_L4083_116)
 4085.                   if ( tm(1 + $I_L4083_116) <= 273.16000000000003 ) then
 4086.                      snow(1 + $I_L4083_116, 2) = snowp(1 + $I_L4083_116, 2) + p0(1 + $I_L4083_116)
 4087.                      thru(1 + $I_L4083_116) = 0.0
 4087.                   else
 4092.                      $equdep_WR0_R19 = dtc3x * (satco%base_addr)($ntyp_S11, 0)
 4093.                      $xs_WR0_R20 = 1.0
 4093.                      xs(1 + $I_L4083_116) = 1.0
 4094.                      if ( thru(1 + $I_L4083_116) >= 1.0000000000000001e-9 ) then
 4095.                         $LD_SPLT_P5 = thru(1 + $I_L4083_116)
 4095.                         $arg_WR0_R21 = ( $equdep_WR0_R19 * 1.0/( $LD_SPLT_P5 * ap(1 + $I_L4083_116) ) ) + -( cp(1 + $I_L4083_116) * 1.0/ap(1 + $I_L4083_116) )
 4096.                         if ( $arg_WR0_R21 >= 1.0000000000000001e-9 ) then
 4097.                            $xs_WR0_R20 = -5.0000000000000003e-2 * log( $arg_WR0_R21 )
 4099.                            xs(1 + $I_L4083_116) = ( max( 0.0, min( 1.0, $xs_WR0_R20 ) ) )
 4099.                            $xs_WR0_R20 = max( 0.0, min( 1.0, $xs_WR0_R20 ) )
 4099.                         endif
 4099.                      endif
 4102.                      $LD_SPLT_P6 = thru(1 + $I_L4083_116)
 4102.                      $roffo_WR0_R22 = -( $equdep_WR0_R19 * $xs_WR0_R20 ) + $LD_SPLT_P6 * ( $xs_WR0_R20 * cp(1 + $I_L4083_116) + 5.0000000000000003e-2 * ap(1 + $I_L4083_116) * ( 1.0 + -_expn( -20.0 * $xs_WR0_R20 ) ) )
 4105.                      $roffo_WR0_R22 = max( 0.0, $roffo_WR0_R22 )
 4106.                      roff(1 + $I_L4083_116) = $roffo_WR0_R22 + roff(1 + $I_L4083_116)
 4107.                      w(1 + $I_L4083_116, 1) = w(1 + $I_L4083_116, 1) + ( 1.0/( (zdepth%base_addr)($ntyp_S11, 1, 0) * (poros%base_addr)($ntyp_S11, 0) ) * ( $LD_SPLT_P6 + -$roffo_WR0_R22 ) )
 4107.                   endif
 4110.                   $I_L4083_116 = 1 + $I_L4083_116
 4109.                   if ( $I_L4083_116 >= nmax ) exit
 4109.                enddo
 4109.             endif
 4109.          endif
 4115.          if ( nmax > 0 ) then
 4115.             $I_L4115_118 = 0
 4115. !dir$ ivdep
 4115.             do
 4116.                $diff_WR0_R23 = 4200000.0 * ( capac(1 + $I_L4115_118, 1 + $I_L3958_138) + snow(1 + $I_L4115_118, 1 + $I_L3958_138) + -capacp(1 + $I_L4115_118, 1 + $I_L3958_138) + -snowp(1 + $I_L4115_118, 1 + $I_L3958_138) )
 4116.                diff(1 + $I_L4115_118) = $diff_WR0_R23
 4118.                $ccp_WR0_R24 = spwet1(1 + $I_L4115_118) + specht(1 + $I_L4115_118)
 4118.                ccp(1 + $I_L4115_118) = $ccp_WR0_R24
 4119.                $cct_WR0_R25 = $diff_WR0_R23 + spwet1(1 + $I_L4115_118) + specht(1 + $I_L4115_118)
 4119.                cct(1 + $I_L4115_118) = $cct_WR0_R25
 4120.                tsd(1 + $I_L4115_118) = ( 1.0/$cct_WR0_R25 * ( $ccp_WR0_R24 * ts(1 + $I_L4115_118) + $diff_WR0_R23 * tm(1 + $I_L4115_118) ) )
 4121.                tsf(1 + $I_L4115_118) = ( -273.16000000000003 + tm(1 + $I_L4115_118) ) * ( -273.16000000000003 + ts(1 + $I_L4115_118) )
 4122.                $I_L4115_118 = 1 + $I_L4115_118
 4115.                if ( $I_L4115_118 >= nmax ) exit
 4115.             enddo
 4123.             $I_L4123_120 = 0
 4123. !dir$ ivdep
 4123.             do
 4124.                if ( tsf(1 + $I_L4123_120) < 0.0 ) then
 4125.                   if ( tsd(1 + $I_L4123_120) <= 273.16000000000003 ) then
 4129.                      $ccc_WR0_R27 = 333624200.0 * capacp(1 + $I_L4123_120, 1 + $I_L3958_138)
 4130.                      if ( ts(1 + $I_L4123_120) < tm(1 + $I_L4123_120) ) then
 4130.                         $ccc_WR0_R27 = 79.434333333333328 * diff(1 + $I_L4123_120)
 4130.                      endif
 4131.                      $tsd_WR0_R26 = ( ( $ccc_WR0_R27 + tm(1 + $I_L4123_120) * diff(1 + $I_L4123_120) + ts(1 + $I_L4123_120) * ccp(1 + $I_L4123_120) ) * 1.0/cct(1 + $I_L4123_120) )
 4131.                      tsd(1 + $I_L4123_120) = $tsd_WR0_R26
 4132.                      $freeze_WR0_R28 = -( tm(1 + $I_L4123_120) * diff(1 + $I_L4123_120) + ts(1 + $I_L4123_120) * ccp(1 + $I_L4123_120) ) + 273.16000000000003 * cct(1 + $I_L4123_120)
 4133.                      $freeze_WR0_R28 = 2.9973844823007445e-9 * ( min( $ccc_WR0_R27, $freeze_WR0_R28 ) )
 4134.                      if ( $tsd_WR0_R26 > 273.16000000000003 ) then
 4134.                         tsd(1 + $I_L4123_120) = 273.06
 4134.                      endif
 4135.                      snow(1 + $I_L4123_120, 1 + $I_L3958_138) = $freeze_WR0_R28 + snow(1 + $I_L4123_120, 1 + $I_L3958_138)
 4136.                      capac(1 + $I_L4123_120, 1 + $I_L3958_138) = capac(1 + $I_L4123_120, 1 + $I_L3958_138) + -$freeze_WR0_R28
 4136.                   else
 4141.                      $ccc_WR0_R27 = -333624200.0 * snow(1 + $I_L4123_120, 1 + $I_L3958_138)
 4142.                      if ( ts(1 + $I_L4123_120) > tm(1 + $I_L4123_120) ) then
 4142.                         $ccc_WR0_R27 = -79.434333333333328 * diff(1 + $I_L4123_120)
 4142.                      endif
 4143.                      $tsd_WR0_R26 = ( ( $ccc_WR0_R27 + tm(1 + $I_L4123_120) * diff(1 + $I_L4123_120) + ts(1 + $I_L4123_120) * ccp(1 + $I_L4123_120) ) * 1.0/cct(1 + $I_L4123_120) )
 4143.                      tsd(1 + $I_L4123_120) = $tsd_WR0_R26
 4144.                      $freeze_WR0_R28 = ( -( tm(1 + $I_L4123_120) * diff(1 + $I_L4123_120) + ts(1 + $I_L4123_120) * ccp(1 + $I_L4123_120) ) + 273.16000000000003 * cct(1 + $I_L4123_120) )
 4145.                      $freeze_WR0_R28 = 2.9973844823007445e-9 * max( $ccc_WR0_R27, $freeze_WR0_R28 )
 4146.                      if ( $tsd_WR0_R26 <= 273.16000000000003 ) then
 4146.                         tsd(1 + $I_L4123_120) = 273.06
 4146.                      endif
 4147.                      snow(1 + $I_L4123_120, 1 + $I_L3958_138) = $freeze_WR0_R28 + snow(1 + $I_L4123_120, 1 + $I_L3958_138)
 4148.                      capac(1 + $I_L4123_120, 1 + $I_L3958_138) = capac(1 + $I_L4123_120, 1 + $I_L3958_138) + -$freeze_WR0_R28
 4148.                   endif
 4148.                endif
 4151.                $I_L4123_120 = 1 + $I_L4123_120
 4150.                if ( $I_L4123_120 >= nmax ) exit
 4150.             enddo
 4153.             if ( $I_L3958_138 == 0 ) then
 4152.                $I_L4152_122 = 0
 4152. !dir$ ivdep
 4152.                do
 4154.                   tc(1 + $I_L4152_122) = tsd(1 + $I_L4152_122)
 4158.                   $I_L4152_122 = 1 + $I_L4152_122
 4157.                   if ( $I_L4152_122 >= nmax ) exit
 4157.                enddo
 4157.             else
 4152.                $I_L4152_134 = 0
 4152. !dir$ ivdep
 4152.                do
 4156.                   tg(1 + $I_L4152_134) = tsd(1 + $I_L4152_134)
 4158.                   $I_L4152_134 = 1 + $I_L4152_134
 4157.                   if ( $I_L4152_134 >= nmax ) exit
 4157.                enddo
 4157.             endif
 4159.             $I_L4159_124 = 0
 4159. !dir$ ivdep
 4159.             do
 4160.                if ( snow(1 + $I_L4159_124, 1 + $I_L3958_138) >= 9.9999999999999995e-8 ) then
 4159.                   goto 10
 4160.                else if ( $I_L3958_138 == 1 ) then
 4160.    10             continue
 4161.                   $zmelt_WR0_R29 = 0.0
 4162.                   if ( td(1 + $I_L4159_124) > 273.16000000000003 ) then
 4163.                      $zmelt_WR0_R29 = capac(1 + $I_L4159_124, 1 + $I_L3958_138)
 4163.                   else
 4165.                      roff(1 + $I_L4159_124) = roff(1 + $I_L4159_124) + capac(1 + $I_L4159_124, 1 + $I_L3958_138)
 4165.                   endif
 4167.                   capac(1 + $I_L4159_124, 1 + $I_L3958_138) = 0.0
 4171.                   $ntyp_S16 = itype(1 + $I_L4159_124)
 4172.                   w(1 + $I_L4159_124, 1) = w(1 + $I_L4159_124, 1) + ( $zmelt_WR0_R29 * 1.0/( (zdepth%base_addr)($ntyp_S16, 1, 0) * (poros%base_addr)($ntyp_S16, 0) ) )
 4172.                endif
 4174.                $I_L4159_124 = 1 + $I_L4159_124
 4173.                if ( $I_L4159_124 >= nmax ) exit
 4173.             enddo
 4175.             $I_L4175_126 = 0
 4175. !dir$ ivdep
 4175.             do
 4185.                capac(1 + $I_L4175_126, 1 + $I_L3958_138) = capac(1 + $I_L4175_126, 1 + $I_L3958_138) + snow(1 + $I_L4175_126, 1 + $I_L3958_138)
 4186.                snow(1 + $I_L4175_126, 1 + $I_L3958_138) = 0.0
 4187.                p0(1 + $I_L4175_126) = thru(1 + $I_L4175_126)
 4188.                $I_L4175_126 = 1 + $I_L4175_126
 4175.                if ( $I_L4175_126 >= nmax ) exit
 4175.             enddo
 4175.          endif
 4189.          $I_L3958_138 = 1 + $I_L3958_138
 4188.          if ( $I_L3958_138 >= 2 ) exit
 4188.       enddo
 4193.       if ( nmax > 0 ) then
 4193.          $I_L4193_128 = 0
 4193. !dir$ ivdep
 4193.          do
 4195.             cc(1 + $I_L4193_128) = 4200000.0 * capac(1 + $I_L4193_128, 1) + 840.0 * zlt2(1 + $I_L4193_128, 1)
 4196.             $spwet_WR0_R30 = 4200000.0 * min( 5.0000000000000003e-2, capac(1 + $I_L4193_128, 2) )
 4197.             cg(1 + $I_L4193_128) = $spwet_WR0_R30 + csoil(1 + $I_L4193_128)
 4198.             $I_L4193_128 = 1 + $I_L4193_128
 4193.             if ( $I_L4193_128 >= nmax ) exit
 4193.          enddo
 4193.       endif
 3757.       _free( t$1741 )
 4199.       return
 4199.       end
 4199.       
 4207.       
 4207.       subroutine stomat( cosz, par, pd, rst, extk, vcover, itype, nmax, ncols, zlt2, green2, chil2, rstpar2 )
 4207.       t$667 = ncols
 4263.       t$1834 = _zla( 0, ncols )
 4207.       t$1835 = _zla( 0, ncols )
 4207.       t$1836 = 2 * _zla( 0, ncols )
 4207.       t$1837 = 2 * _zla( 0, ncols )
 4207.       t$1838 = 6 * _zla( 0, ncols )
 4207.       t$1839 = 12 * _zla( 0, ncols )
 4207.       t$1840 = 6 * _zla( 0, ncols )
 4270.       t$1843 = 8 * _zla( 0, ncols )
 4267.       t$1844 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 4267.       t$1846 = t$1844 + 8 * _zla( 0, ncols )
 4276.       t$1847 = 8 * ( 7 + t$1844 + 8 * _zla( 0, ncols ) ) / 8
 4276.       t$1849 = t$1847 + 8 * _zla( 0, ncols )
 4271.       t$1850 = 8 * ( 7 + t$1847 + 8 * _zla( 0, ncols ) ) / 8
 4271.       t$1852 = t$1850 + 8 * _zla( 0, ncols )
 4274.       t$1853 = 8 * ( 7 + t$1850 + 8 * _zla( 0, ncols ) ) / 8
 4274.       t$1855 = t$1853 + 8 * _zla( 0, ncols )
 4265.       t$1856 = 8 * ( 7 + t$1853 + 8 * _zla( 0, ncols ) ) / 8
 4265.       t$1858 = t$1856 + 8 * _zla( 0, ncols )
 4266.       t$1859 = 8 * ( 7 + t$1856 + 8 * _zla( 0, ncols ) ) / 8
 4266.       t$1861 = t$1859 + 8 * _zla( 0, ncols )
 4268.       t$1862 = 8 * ( 7 + t$1859 + 8 * _zla( 0, ncols ) ) / 8
 4268.       t$1864 = t$1862 + 8 * _zla( 0, ncols )
 4269.       t$1865 = 8 * ( 7 + t$1862 + 8 * _zla( 0, ncols ) ) / 8
 4269.       t$1867 = t$1865 + 8 * _zla( 0, ncols )
 4275.       t$1868 = 8 * ( 7 + t$1865 + 8 * _zla( 0, ncols ) ) / 8
 4275.       t$1870 = t$1868 + 8 * _zla( 0, ncols )
 4272.       t$1871 = 8 * ( 7 + t$1868 + 8 * _zla( 0, ncols ) ) / 8
 4272.       t$1873 = t$1871 + 8 * _zla( 0, ncols )
 4273.       t$1874 = 8 * ( 7 + t$1871 + 8 * _zla( 0, ncols ) ) / 8
 4273.       t$1876 = t$1874 + 8 * _zla( 0, ncols )
 4207.       t$1841 = int( _alloc( t$1874 + 8 * _zla( 0, ncols ) ), 8 )
 4270.       t$1842 = t$1841
 4267.       t$1845 = t$1844 + t$1841
 4276.       t$1848 = t$1847 + t$1841
 4271.       t$1851 = t$1850 + t$1841
 4274.       t$1854 = t$1853 + t$1841
 4265.       t$1857 = t$1856 + t$1841
 4266.       t$1860 = t$1859 + t$1841
 4268.       t$1863 = t$1862 + t$1841
 4269.       t$1866 = t$1865 + t$1841
 4275.       t$1869 = t$1868 + t$1841
 4272.       t$1872 = t$1871 + t$1841
 4273.       t$1875 = t$1874 + t$1841
 4289.       if ( nmax > 0 ) then
 4289.          $I_L4289_36 = 0
 4289. !dir$ ivdep
 4289.          do
 4290.             f(1 + $I_L4289_36) = max( 1.746e-2, cosz(1 + $I_L4289_36) )
 4291.             $I_L4289_36 = 1 + $I_L4289_36
 4289.             if ( $I_L4289_36 >= nmax ) exit
 4289.          enddo
 4293.          $I_L4293_46 = 0
 4293. !dir$ blocking_size( 1, 1 )
 4293.          do
 4294.             $I_L4294_44 = 0
 4294. !dir$ blocking_size( 1, 1 )
 4294.             do
 4295.                $I_L4295_38 = 0
 4295. !dir$ ivdep
 4295. !dir$ blocking_size( 256, 256 )
 4295.                do
 4302.                   extk(1 + $I_L4295_38, 1 + $I_L4293_46, 1, 1 + $I_L4294_44) = min( extk(1 + $I_L4295_38, 1 + $I_L4293_46, 1, 1 + $I_L4294_44), vcover(1 + $I_L4295_38, 1 + $I_L4293_46) * ( 150.0 * 1.0/zlt2(1 + $I_L4295_38, 1 + $I_L4293_46) ) )
 4304.                   $I_L4295_38 = 1 + $I_L4295_38
 4295.                   if ( $I_L4295_38 >= nmax ) exit
 4295.                enddo
 4305.                $I_L4294_44 = 1 + $I_L4294_44
 4304.                if ( $I_L4294_44 >= 2 ) exit
 4304.             enddo
 4306.             $I_L4293_46 = 1 + $I_L4293_46
 4305.             if ( $I_L4293_46 >= 2 ) exit
 4305.          enddo
 4311.          $I_L4311_40 = 0
 4311. !dir$ ivdep
 4311.          do
 4312.             if ( itype(1 + $I_L4311_40) == 13 .orelse. itype(1 + $I_L4311_40) == 11 ) then
 4313.                rst(1 + $I_L4311_40, 1) = 100000.0
 4313.             else
 4321.                $at_WR0_R0 = ( zlt2(1 + $I_L4311_40, 1) * 1.0/vcover(1 + $I_L4311_40, 1) )
 4323.                if ( par(1 + $I_L4311_40, 1) <= 1.01e-3 ) then
 4332.                   $xabc_S5 = rstpar2(1 + $I_L4311_40, 1, 3) + ( rstpar2(1 + $I_L4311_40, 1, 1) * 1.0/rstpar2(1 + $I_L4311_40, 1, 2) )
 4344.                   rst(1 + $I_L4311_40, 1) = 1.0/( $at_WR0_R0 * ( 5.0e-1 * 1.0/$xabc_S5 ) )
 4344.                else
 4351.                   $gamma_WR0_R1 = ( ( rstpar2(1 + $I_L4311_40, 1, 1) + rstpar2(1 + $I_L4311_40, 1, 2) * rstpar2(1 + $I_L4311_40, 1, 3) ) * 1.0/rstpar2(1 + $I_L4311_40, 1, 3) )
 4363.                   $at_WR0_R0 = ( zlt2(1 + $I_L4311_40, 1) * 1.0/vcover(1 + $I_L4311_40, 1) )
 4369.                   $power1_WR0_R2 = $at_WR0_R0 * extk(1 + $I_L4311_40, 1, 1, 1)
 4370.                   $power2_WR0_R3 = $at_WR0_R0 * extk(1 + $I_L4311_40, 1, 1, 2)
 4377.                   $aa_WR0_R4 = 5.0e-1 + -( chil2(1 + $I_L4311_40, 1) * ( 6.3300000000000001e-1 + 3.3000000000000002e-1 * chil2(1 + $I_L4311_40, 1) ) )
 4387.                   $zat_WR0_R6 = ( pd(1 + $I_L4311_40, 1) * log( 5.0e-1 * ( 1.0 + _expn( -$power1_WR0_R2 ) ) ) * 1.0/extk(1 + $I_L4311_40, 1, 1, 1) )
 4389.                   $zat_WR0_R6 = $zat_WR0_R6 + ( 1.0/extk(1 + $I_L4311_40, 1, 1, 2) * log( 5.0e-1 * ( 1.0 + _expn( -$power2_WR0_R3 ) ) ) * ( 1.0 + -pd(1 + $I_L4311_40, 1) ) )
 4391.                   $zk_WR0_R7 = 1.0/$zat_WR0_R6 * log( pd(1 + $I_L4311_40, 1) * _expn( ( $power1_WR0_R2 * $zat_WR0_R6 * 1.0/$at_WR0_R0 ) ) + _expn( ( $power2_WR0_R3 * $zat_WR0_R6 * 1.0/$at_WR0_R0 ) ) * ( 1.0 + -pd(1 + $I_L4311_40, 1) ) )
 4399.                   $ekat_WR0_R8 = _expn( ( min( 20.0, $at_WR0_R0 * $zk_WR0_R7 ) ) )
 4407.                   $avflux_WR0_R9 = par(1 + $I_L4311_40, 1) * ( pd(1 + $I_L4311_40, 1) * ( ( 8.77e-1 + -1.754 * $aa_WR0_R4 ) + ( $aa_WR0_R4 * 1.0/f(1 + $I_L4311_40) ) ) + ( 1.5 * $aa_WR0_R4 + 1.1187314833333333 * ( 8.77e-1 + -1.754 * $aa_WR0_R4 ) ) * ( 1.0 + -pd(1 + $I_L4311_40, 1) ) )
 4424.                   $rst_WR0_R11 = log( ( ( 1.0 + $ekat_WR0_R8 * ( $gamma_WR0_R1 * 1.0/$avflux_WR0_R9 ) ) * 1.0/( 1.0 + ( $gamma_WR0_R1 * 1.0/$avflux_WR0_R9 ) ) ) ) * ( rstpar2(1 + $I_L4311_40, 1, 2) * 1.0/$gamma_WR0_R1 )
 4443.                   $rst_WR0_R11 = 1.0/( green2(1 + $I_L4311_40, 1) * ( 1.0/( $zk_WR0_R7 * rstpar2(1 + $I_L4311_40, 1, 3) ) * ( $rst_WR0_R11 + -log( ( 1.0/( 1.0 + ( $gamma_WR0_R1 * 1.0/$avflux_WR0_R9 ) ) * ( 1.0/$ekat_WR0_R8 + ( $gamma_WR0_R1 * 1.0/$avflux_WR0_R9 ) ) ) ) ) ) )
 4443.                   rst(1 + $I_L4311_40, 1) = $rst_WR0_R11
 4443.                endif
 4443.             endif
 4446.             $I_L4311_40 = 1 + $I_L4311_40
 4445.             if ( $I_L4311_40 >= nmax ) exit
 4445.          enddo
 4448.          $I_L4448_42 = 0
 4448. !dir$ ivdep
 4448.          do
 4449.             rst(1 + $I_L4448_42, 2) = 100000.0
 4450.             $I_L4448_42 = 1 + $I_L4448_42
 4448.             if ( $I_L4448_42 >= nmax ) exit
 4448.          enddo
 4448.       endif
 4207.       _free( t$1841 )
 4452.       return
 4452.       end
 4452.       
 4460.       
 4460.       subroutine raduse( radt, par, pd, radfac, closs, gloss, thermk, p1f, p2f, radn, vcover, nmax, ncols )
 4460.       t$702 = ncols
 4494.       t$1877 = _zla( 0, ncols )
 4460.       t$1878 = _zla( 0, ncols )
 4460.       t$1879 = 2 * _zla( 0, ncols )
 4460.       t$1880 = 2 * _zla( 0, ncols )
 4460.       t$1881 = 6 * _zla( 0, ncols )
 4460.       t$1882 = 12 * _zla( 0, ncols )
 4460.       t$1883 = 3 * _zla( 0, ncols )
 4460.       t$1884 = 6 * _zla( 0, ncols )
 4505.       t$1887 = 8 * _zla( 0, ncols )
 4506.       t$1888 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 4506.       t$1890 = t$1888 + 8 * _zla( 0, ncols )
 4460.       t$1885 = int( _alloc( t$1888 + 8 * _zla( 0, ncols ) ), 8 )
 4505.       t$1886 = t$1885
 4506.       t$1889 = t$1888 + t$1885
 4513.       if ( nmax > 0 ) then
 4513.          $I_L4513_36 = 0
 4513. !dir$ ivdep
 4513.          do
 4514.             radt(1 + $I_L4513_36, 1) = 0.0
 4515.             radt(1 + $I_L4513_36, 2) = 0.0
 4516.             $I_L4513_36 = 1 + $I_L4513_36
 4513.             if ( $I_L4513_36 >= nmax ) exit
 4513.          enddo
 4527.          $I_L4527_46 = 0
 4527.          do
 4528.             $I_L4528_44 = 0
 4528.             do
 4530.                $SI_L4530_38_G1 = 0
 4530.                do
 4529.                   $I_L4529_42 = 0
 4529. !dir$ blocking_size( 2, 2 )
 4529.                   do
 4530.                      $I_L4530_48 = 0
 4530. !dir$ ivdep
 4530. !dir$ blocking_size( 256, 256 )
 4530.                      do
 4531.                         radt(1 + $I_L4530_48 + 256 * $SI_L4530_38_G1, 1 + $I_L4527_46) = radt(1 + $I_L4530_48 + 256 * $SI_L4530_38_G1, 1 + $I_L4527_46) + radn(1 + $I_L4530_48 + 256 * $SI_L4530_38_G1, 1 + $I_L4528_44, 1 + $I_L4529_42) * radfac(1 + $I_L4530_48 + 256 * $SI_L4530_38_G1, 1 + $I_L4527_46, 1 + $I_L4528_44, 1 + $I_L4529_42)
 4530.                         $I_L4530_48 = 1 + $I_L4530_48
 4530.                         if ( $I_L4530_48 >= min( nmax, 256 + 256 * $SI_L4530_38_G1 ) + -256 * $SI_L4530_38_G1 ) exit
 4530.                      enddo
 4533.                      $I_L4529_42 = 1 + $I_L4529_42
 4533.                      if ( $I_L4529_42 >= 2 ) exit
 4533.                   enddo
 4530.                   $SI_L4530_38_G1 = 1 + $SI_L4530_38_G1
 4532.                   if ( $SI_L4530_38_G1 >= _rsh( 255 + nmax, 8 ) ) exit
 4532.                enddo
 4534.                $I_L4528_44 = 1 + $I_L4528_44
 4533.                if ( $I_L4528_44 >= 2 ) exit
 4533.             enddo
 4535.             $I_L4527_46 = 1 + $I_L4527_46
 4534.             if ( $I_L4527_46 >= 2 ) exit
 4534.          enddo
 4540.          $I_L4540_40 = 0
 4540. !dir$ ivdep
 4540.          do
 4543.             $par_WR0_R0 = 1.0e-3 + radn(1 + $I_L4540_40, 1, 2) + radn(1 + $I_L4540_40, 1, 1)
 4544.             pd(1 + $I_L4540_40, 1) = ( 1.0/$par_WR0_R0 * ( 1.0e-3 + radn(1 + $I_L4540_40, 1, 1) ) )
 4545.             $p1_WR0_R1 = 1.0e-3 + radn(1 + $I_L4540_40, 1, 1) * p1f(1 + $I_L4540_40)
 4546.             $p2_WR0_R2 = radn(1 + $I_L4540_40, 1, 2) * p2f(1 + $I_L4540_40)
 4548.             $par_WR0_R0 = max( 9.9999999999999995e-7, $par_WR0_R0 )
 4548.             par(1 + $I_L4540_40, 1) = $par_WR0_R0
 4549.             par(1 + $I_L4540_40, 2) = ( max( 9.9999999999999995e-7, ( $p1_WR0_R1 + $p2_WR0_R2 ) ) )
 4550.             pd(1 + $I_L4540_40, 2) = ( $p1_WR0_R1 * 1.0/( max( 9.9999999999999995e-7, ( $p1_WR0_R1 + $p2_WR0_R2 ) ) ) )
 4541.             radt(1 + $I_L4540_40, 1) = radt(1 + $I_L4540_40, 1) + -closs(1 + $I_L4540_40) + vcover(1 + $I_L4540_40, 1) * radn(1 + $I_L4540_40, 3, 2) * ( 1.0 + -thermk(1 + $I_L4540_40) )
 4542.             radt(1 + $I_L4540_40, 2) = radt(1 + $I_L4540_40, 2) + -gloss(1 + $I_L4540_40) + radn(1 + $I_L4540_40, 3, 2) * ( 1.0 + -( vcover(1 + $I_L4540_40, 1) * ( 1.0 + -thermk(1 + $I_L4540_40) ) ) )
 4551.             $I_L4540_40 = 1 + $I_L4540_40
 4540.             if ( $I_L4540_40 >= nmax ) exit
 4540.          enddo
 4540.       endif
 4460.       _free( t$1885 )
 4552.       return
 4552.       end
 4552.       
 4561.       
 4561.       subroutine root( phroot, phsoil, w, itype, nmax, ncols )
 4561.       t$722 = ncols
 4611.       t$1891 = _zla( 0, ncols )
 4561.       t$1892 = _zla( 0, ncols )
 4561.       t$1893 = 2 * _zla( 0, ncols )
 4561.       t$1894 = 3 * _zla( 0, ncols )
 4561.       t$1895 = 3 * _zla( 0, ncols )
 4615.       t$1898 = 24 * _zla( 0, ncols )
 4561.       t$1896 = int( _alloc( 24 * _zla( 0, ncols ) ), 8 )
 4615.       t$1897 = t$1896
 4631.       $SC_bee_I0 = bee%dim_1%EX
 4631.       $SC_bee_I1 = bee%dim_1%LB
 4631.       $SC_phsat_I2 = phsat%dim_1%EX
 4631.       $SC_phsat_I3 = phsat%dim_1%LB
 4620.       if ( nmax > 0 ) then
 4619.          $I_L4619_44 = 0
 4619. !dir$ blocking_size( 1, 1 )
 4619.          do
 4620.             $I_L4620_36 = 0
 4620. !dir$ ivdep
 4620. !dir$ blocking_size( 256, 256 )
 4620.             do
 4625.                $www_WR0_R0 = max( 1.0000000000000001e-1, w(1 + $I_L4620_36, 1 + $I_L4619_44) )
 4631.                phsoil(1 + $I_L4620_36, 1 + $I_L4619_44) = (phsat%base_addr)(itype(1 + $I_L4620_36), 0) * _expn( -( (bee%base_addr)(itype(1 + $I_L4620_36), 0) * log( $www_WR0_R0 ) ) )
 4633.                $I_L4620_36 = 1 + $I_L4620_36
 4620.                if ( $I_L4620_36 >= nmax ) exit
 4620.             enddo
 4634.             $I_L4619_44 = 1 + $I_L4619_44
 4633.             if ( $I_L4619_44 >= 3 ) exit
 4633.          enddo
 4647.          $I_L4647_38 = 0
 4647. !dir$ ivdep
 4647.          do
 4648.             phroot(1 + $I_L4647_38, 1) = -1.0e-2 + phsoil(1 + $I_L4647_38, 1)
 4649.             $I_L4647_38 = 1 + $I_L4647_38
 4647.             if ( $I_L4647_38 >= nmax ) exit
 4647.          enddo
 4651.          $SI_L4651_40_G1 = 0
 4651.          do
 4650.             $I_L4650_46 = 0
 4650. !dir$ blocking_size( 2, 2 )
 4650.             do
 4651.                $I_L4651_48 = 0
 4651. !dir$ ivdep
 4651. !dir$ blocking_size( 512, 512 )
 4651.                do
 4652.                   phroot(1 + $I_L4651_48 + 512 * $SI_L4651_40_G1, 1) = max( phroot(1 + $I_L4651_48 + 512 * $SI_L4651_40_G1, 1), phsoil(1 + $I_L4651_48 + 512 * $SI_L4651_40_G1, 2 + $I_L4650_46) )
 4651.                   $I_L4651_48 = 1 + $I_L4651_48
 4651.                   if ( $I_L4651_48 >= min( nmax, 512 + 512 * $SI_L4651_40_G1 ) + -512 * $SI_L4651_40_G1 ) exit
 4651.                enddo
 4654.                $I_L4650_46 = 1 + $I_L4650_46
 4654.                if ( $I_L4650_46 >= 2 ) exit
 4654.             enddo
 4651.             $SI_L4651_40_G1 = 1 + $SI_L4651_40_G1
 4653.             if ( $SI_L4651_40_G1 >= _rsh( 511 + nmax, 9 ) ) exit
 4653.          enddo
 4655.          $I_L4655_42 = 0
 4655. !dir$ ivdep
 4655.          do
 4656.             phroot(1 + $I_L4655_42, 2) = phroot(1 + $I_L4655_42, 1)
 4657.             $I_L4655_42 = 1 + $I_L4655_42
 4655.             if ( $I_L4655_42 >= nmax ) exit
 4655.          enddo
 4655.       endif
 4561.       _free( t$1896 )
 4660.       return
 4660.       end
 4660.       
 4668.       
 4668.       subroutine pbl( jstneu, hgdtg, hgdtc, hgdtm, hcdtg, hcdtc, hcdtm, egdtg, egdtc, egdqm, ecdtg, ecdtc, ecdqm, deadtg, deadtc, deadqm, icheck, ect, eci, egt, egi, egs, ec, eg, hc, hg, ecidif, egidif, ecmass, egmass, etmass, hflux, chf, shf, roff, bps, psb, dzm, em, gmt, gmq, cu, cuni, ctni, ustar, cosz, rhoair, psy, rcp, wc, wg, fc, fg, hr, vcover, z0x, d, rdc, rbc, z0, qm, tm, um, vm, psur, ppc, ppl, radn, ra, rb, rd, rc, rg, tcta, tgta, ta, ea, etc, etg, btc, btg, u2, radt, par, pd, rst, rsoil, phroot, hrr, phsoil, cc, cg, satcap, snow, dtc, dtg, dtm, dqm, stm, extk, radfac, closs, gloss, thermk, p1f, p2f, tc, tg, td, capac, w, itype, dtc3x, mon, nmax, ncols, zlt2, green2, chil2, rstpar2, topt2, tll2, tu2, defac2, ph12, ph22 )
 4668.       t$729 = ncols
 5001.       t$1899 = _zla( 0, ncols )
 4668.       t$1900 = _zla( 0, ncols )
 4668.       t$1901 = 3 * _zla( 0, ncols )
 4668.       t$1902 = 2 * _zla( 0, ncols )
 4668.       t$1903 = 3 * _zla( 0, ncols )
 4668.       t$1904 = 6 * _zla( 0, ncols )
 4668.       t$1905 = 3 * _zla( 0, ncols )
 4668.       t$1906 = 2 * _zla( 0, ncols )
 4668.       t$1907 = 6 * _zla( 0, ncols )
 4668.       t$1908 = 12 * _zla( 0, ncols )
 4668.       t$1909 = 2 * _zla( 0, ncols )
 5019.       t$722 = ncols
 5019.       t$1891 = _zla( 0, ncols )
 5019.       t$1892 = _zla( 0, ncols )
 5019.       t$1893 = 2 * _zla( 0, ncols )
 5019.       t$1894 = 3 * _zla( 0, ncols )
 5019.       t$1895 = 3 * _zla( 0, ncols )
 5019.       t$1898 = 24 * _zla( 0, ncols )
 5019.       t$1896 = int( _alloc( 24 * _zla( 0, ncols ) ), 8 )
 5019.       t$1897 = t$1896
 5019.       $SC_bee_I0 = bee%dim_1%EX
 5019.       $SC_bee_I1 = bee%dim_1%LB
 5019.       $SC_phsat_I2 = phsat%dim_1%EX
 5019.       $SC_phsat_I3 = phsat%dim_1%LB
 5019.       if ( nmax > 0 ) then
 5019.          $I_L5019_130 = 0
 5019. !dir$ blocking_size( 1, 1 )
 5019.          do
 5019.             $I_L5019_108 = 0
 5019. !dir$ ivdep
 5019. !dir$ blocking_size( 256, 256 )
 5019.             do
 5019.                $www_WR0_R0 = max( 1.0000000000000001e-1, w(1 + $I_L5019_108, 1 + $I_L5019_130) )
 5019.                phsoil(1 + $I_L5019_108, 1 + $I_L5019_130) = (phsat%base_addr)(itype(1 + $I_L5019_108), 0) * _expn( -( (bee%base_addr)(itype(1 + $I_L5019_108), 0) * log( $www_WR0_R0 ) ) )
 5019.                $I_L5019_108 = 1 + $I_L5019_108
 5019.                if ( $I_L5019_108 >= nmax ) exit
 5019.             enddo
 5019.             $I_L5019_130 = 1 + $I_L5019_130
 5019.             if ( $I_L5019_130 >= 3 ) exit
 5019.          enddo
 5019.          $I_L5019_110 = 0
 5019. !dir$ ivdep
 5019.          do
 5019.             phroot(1 + $I_L5019_110, 1) = -1.0e-2 + phsoil(1 + $I_L5019_110, 1)
 5019.             $I_L5019_110 = 1 + $I_L5019_110
 5019.             if ( $I_L5019_110 >= nmax ) exit
 5019.          enddo
 5019.          $SI_L5019_112_G1 = 0
 5019.          do
 5019.             $I_L5019_132 = 0
 5019. !dir$ blocking_size( 2, 2 )
 5019.             do
 5019.                $I_L5019_144 = 0
 5019. !dir$ ivdep
 5019. !dir$ blocking_size( 512, 512 )
 5019.                do
 5019.                   phroot(1 + $I_L5019_144 + 512 * $SI_L5019_112_G1, 1) = max( phroot(1 + $I_L5019_144 + 512 * $SI_L5019_112_G1, 1), phsoil(1 + $I_L5019_144 + 512 * $SI_L5019_112_G1, 2 + $I_L5019_132) )
 5019.                   $I_L5019_144 = 1 + $I_L5019_144
 5019.                   if ( $I_L5019_144 >= min( nmax, 512 + 512 * $SI_L5019_112_G1 ) + -512 * $SI_L5019_112_G1 ) exit
 5019.                enddo
 5019.                $I_L5019_132 = 1 + $I_L5019_132
 5019.                if ( $I_L5019_132 >= 2 ) exit
 5019.             enddo
 5019.             $SI_L5019_112_G1 = 1 + $SI_L5019_112_G1
 5019.             if ( $SI_L5019_112_G1 >= _rsh( 511 + nmax, 9 ) ) exit
 5019.          enddo
 5019.          $I_L5019_114 = 0
 5019. !dir$ ivdep
 5019.          do
 5019.             phroot(1 + $I_L5019_114, 2) = phroot(1 + $I_L5019_114, 1)
 5019.             $I_L5019_114 = 1 + $I_L5019_114
 5019.             if ( $I_L5019_114 >= nmax ) exit
 5019.          enddo
 5019.       endif
 5019.       _free( t$1896 )
 5021.       t$702 = ncols
 5021.       t$1877 = max( 0, ncols )
 5021.       t$1878 = max( 0, ncols )
 5021.       t$1879 = 2 * max( 0, ncols )
 5021.       t$1880 = 2 * max( 0, ncols )
 5021.       t$1881 = 6 * max( 0, ncols )
 5021.       t$1882 = 12 * max( 0, ncols )
 5021.       t$1883 = 3 * max( 0, ncols )
 5021.       t$1884 = 6 * max( 0, ncols )
 5021.       t$1887 = 8 * max( 0, ncols )
 5021.       t$1888 = 8 * ( 7 + 8 * max( 0, ncols ) ) / 8
 5021.       t$1890 = t$1888 + 8 * max( 0, ncols )
 5021.       t$1885 = int( _alloc( t$1888 + 8 * max( 0, ncols ) ), 8 )
 5021.       t$1886 = t$1885
 5021.       t$1889 = t$1888 + t$1885
 5021.       if ( nmax > 0 ) then
 5021.          $I_L5021_116 = 0
 5021. !dir$ ivdep
 5021.          do
 5021.             radt(1 + $I_L5021_116, 1) = 0.0
 5021.             radt(1 + $I_L5021_116, 2) = 0.0
 5021.             $I_L5021_116 = 1 + $I_L5021_116
 5021.             if ( $I_L5021_116 >= nmax ) exit
 5021.          enddo
 5021.          $I_L5021_142 = 0
 5021.          do
 5021.             $I_L5021_138 = 0
 5021.             do
 5021.                $SI_L5021_118_G4 = 0
 5021.                do
 5021.                   $I_L5021_134 = 0
 5021. !dir$ blocking_size( 2, 2 )
 5021.                   do
 5021.                      $I_L5021_147 = 0
 5021. !dir$ ivdep
 5021. !dir$ blocking_size( 256, 256 )
 5021.                      do
 5021.                         radt(1 + $I_L5021_147 + 256 * $SI_L5021_118_G4, 1 + $I_L5021_142) = radt(1 + $I_L5021_147 + 256 * $SI_L5021_118_G4, 1 + $I_L5021_142) + radn(1 + $I_L5021_147 + 256 * $SI_L5021_118_G4, 1 + $I_L5021_138, 1 + $I_L5021_134) * radfac(1 + $I_L5021_147 + 256 * $SI_L5021_118_G4, 1 + $I_L5021_142, 1 + $I_L5021_138, 1 + $I_L5021_134)
 5021.                         $I_L5021_147 = 1 + $I_L5021_147
 5021.                         if ( $I_L5021_147 >= min( nmax, 256 + 256 * $SI_L5021_118_G4 ) + -256 * $SI_L5021_118_G4 ) exit
 5021.                      enddo
 5021.                      $I_L5021_134 = 1 + $I_L5021_134
 5021.                      if ( $I_L5021_134 >= 2 ) exit
 5021.                   enddo
 5021.                   $SI_L5021_118_G4 = 1 + $SI_L5021_118_G4
 5021.                   if ( $SI_L5021_118_G4 >= _rsh( 255 + nmax, 8 ) ) exit
 5021.                enddo
 5021.                $I_L5021_138 = 1 + $I_L5021_138
 5021.                if ( $I_L5021_138 >= 2 ) exit
 5021.             enddo
 5021.             $I_L5021_142 = 1 + $I_L5021_142
 5021.             if ( $I_L5021_142 >= 2 ) exit
 5021.          enddo
 5021.          $I_L5021_120 = 0
 5021. !dir$ ivdep
 5021.          do
 5021.             $par_WR0_R1 = 1.0e-3 + radn(1 + $I_L5021_120, 1, 2) + radn(1 + $I_L5021_120, 1, 1)
 5021.             pd(1 + $I_L5021_120, 1) = ( 1.0/$par_WR0_R1 * ( 1.0e-3 + radn(1 + $I_L5021_120, 1, 1) ) )
 5021.             $p1_WR0_R2 = 1.0e-3 + radn(1 + $I_L5021_120, 1, 1) * p1f(1 + $I_L5021_120)
 5021.             $p2_WR0_R3 = radn(1 + $I_L5021_120, 1, 2) * p2f(1 + $I_L5021_120)
 5021.             $par_WR0_R1 = max( 9.9999999999999995e-7, $par_WR0_R1 )
 5021.             par(1 + $I_L5021_120, 1) = $par_WR0_R1
 5021.             par(1 + $I_L5021_120, 2) = ( max( 9.9999999999999995e-7, ( $p1_WR0_R2 + $p2_WR0_R3 ) ) )
 5021.             pd(1 + $I_L5021_120, 2) = ( $p1_WR0_R2 * 1.0/( max( 9.9999999999999995e-7, ( $p1_WR0_R2 + $p2_WR0_R3 ) ) ) )
 5021.             radt(1 + $I_L5021_120, 1) = radt(1 + $I_L5021_120, 1) + -closs(1 + $I_L5021_120) + vcover(1 + $I_L5021_120, 1) * radn(1 + $I_L5021_120, 3, 2) * ( 1.0 + -thermk(1 + $I_L5021_120) )
 5021.             radt(1 + $I_L5021_120, 2) = radt(1 + $I_L5021_120, 2) + -gloss(1 + $I_L5021_120) + radn(1 + $I_L5021_120, 3, 2) * ( 1.0 + -( vcover(1 + $I_L5021_120, 1) * ( 1.0 + -thermk(1 + $I_L5021_120) ) ) )
 5021.             $I_L5021_120 = 1 + $I_L5021_120
 5021.             if ( $I_L5021_120 >= nmax ) exit
 5021.          enddo
 5021.       endif
 5021.       _free( t$1885 )
 5024.       t$667 = ncols
 5024.       t$1834 = max( 0, ncols )
 5024.       t$1835 = max( 0, ncols )
 5024.       t$1836 = 2 * max( 0, ncols )
 5024.       t$1837 = 2 * max( 0, ncols )
 5024.       t$1838 = 6 * max( 0, ncols )
 5024.       t$1839 = 12 * max( 0, ncols )
 5024.       t$1840 = 6 * max( 0, ncols )
 5024.       t$1843 = 8 * max( 0, ncols )
 5024.       t$1844 = 8 * ( 7 + 8 * max( 0, ncols ) ) / 8
 5024.       t$1846 = t$1844 + 8 * max( 0, ncols )
 5024.       t$1847 = 8 * ( 7 + t$1844 + 8 * max( 0, ncols ) ) / 8
 5024.       t$1849 = t$1847 + 8 * max( 0, ncols )
 5024.       t$1850 = 8 * ( 7 + t$1847 + 8 * max( 0, ncols ) ) / 8
 5024.       t$1852 = t$1850 + 8 * max( 0, ncols )
 5024.       t$1853 = 8 * ( 7 + t$1850 + 8 * max( 0, ncols ) ) / 8
 5024.       t$1855 = t$1853 + 8 * max( 0, ncols )
 5024.       t$1856 = 8 * ( 7 + t$1853 + 8 * max( 0, ncols ) ) / 8
 5024.       t$1858 = t$1856 + 8 * max( 0, ncols )
 5024.       t$1859 = 8 * ( 7 + t$1856 + 8 * max( 0, ncols ) ) / 8
 5024.       t$1861 = t$1859 + 8 * max( 0, ncols )
 5024.       t$1862 = 8 * ( 7 + t$1859 + 8 * max( 0, ncols ) ) / 8
 5024.       t$1864 = t$1862 + 8 * max( 0, ncols )
 5024.       t$1865 = 8 * ( 7 + t$1862 + 8 * max( 0, ncols ) ) / 8
 5024.       t$1867 = t$1865 + 8 * max( 0, ncols )
 5024.       t$1868 = 8 * ( 7 + t$1865 + 8 * max( 0, ncols ) ) / 8
 5024.       t$1870 = t$1868 + 8 * max( 0, ncols )
 5024.       t$1871 = 8 * ( 7 + t$1868 + 8 * max( 0, ncols ) ) / 8
 5024.       t$1873 = t$1871 + 8 * max( 0, ncols )
 5024.       t$1874 = 8 * ( 7 + t$1871 + 8 * max( 0, ncols ) ) / 8
 5024.       t$1876 = t$1874 + 8 * max( 0, ncols )
 5024.       t$1841 = int( _alloc( t$1874 + 8 * max( 0, ncols ) ), 8 )
 5024.       t$1842 = t$1841
 5024.       t$1845 = t$1844 + t$1841
 5024.       t$1848 = t$1847 + t$1841
 5024.       t$1851 = t$1850 + t$1841
 5024.       t$1854 = t$1853 + t$1841
 5024.       t$1857 = t$1856 + t$1841
 5024.       t$1860 = t$1859 + t$1841
 5024.       t$1863 = t$1862 + t$1841
 5024.       t$1866 = t$1865 + t$1841
 5024.       t$1869 = t$1868 + t$1841
 5024.       t$1872 = t$1871 + t$1841
 5024.       t$1875 = t$1874 + t$1841
 5024.       if ( nmax > 0 ) then
 5024.          $I_L5024_122 = 0
 5024. !dir$ ivdep
 5024.          do
 5024.             f(1 + $I_L5024_122) = max( 1.746e-2, cosz(1 + $I_L5024_122) )
 5024.             $I_L5024_122 = 1 + $I_L5024_122
 5024.             if ( $I_L5024_122 >= nmax ) exit
 5024.          enddo
 5024.          $I_L5024_140 = 0
 5024. !dir$ blocking_size( 1, 1 )
 5024.          do
 5024.             $I_L5024_136 = 0
 5024. !dir$ blocking_size( 1, 1 )
 5024.             do
 5024.                $I_L5024_124 = 0
 5024. !dir$ ivdep
 5024. !dir$ blocking_size( 256, 256 )
 5024.                do
 5024.                   extk(1 + $I_L5024_124, 1 + $I_L5024_140, 1, 1 + $I_L5024_136) = min( extk(1 + $I_L5024_124, 1 + $I_L5024_140, 1, 1 + $I_L5024_136), vcover(1 + $I_L5024_124, 1 + $I_L5024_140) * ( 150.0 * 1.0/zlt2(1 + $I_L5024_124, 1 + $I_L5024_140) ) )
 5024.                   $I_L5024_124 = 1 + $I_L5024_124
 5024.                   if ( $I_L5024_124 >= nmax ) exit
 5024.                enddo
 5024.                $I_L5024_136 = 1 + $I_L5024_136
 5024.                if ( $I_L5024_136 >= 2 ) exit
 5024.             enddo
 5024.             $I_L5024_140 = 1 + $I_L5024_140
 5024.             if ( $I_L5024_140 >= 2 ) exit
 5024.          enddo
 5024.          $I_L5024_126 = 0
 5024. !dir$ ivdep
 5024.          do
 5024.             if ( itype(1 + $I_L5024_126) == 13 .orelse. itype(1 + $I_L5024_126) == 11 ) then
 5024.                rst(1 + $I_L5024_126, 1) = 100000.0
 5024.             else
 5024.                $at_WR0_R5 = ( zlt2(1 + $I_L5024_126, 1) * 1.0/vcover(1 + $I_L5024_126, 1) )
 5024.                if ( par(1 + $I_L5024_126, 1) <= 1.01e-3 ) then
 5024.                   $xabc_S17 = rstpar2(1 + $I_L5024_126, 1, 3) + ( rstpar2(1 + $I_L5024_126, 1, 1) * 1.0/rstpar2(1 + $I_L5024_126, 1, 2) )
 5024.                   rst(1 + $I_L5024_126, 1) = 1.0/( $at_WR0_R5 * ( 5.0e-1 * 1.0/$xabc_S17 ) )
 5024.                else
 5024.                   $gamma_WR0_R6 = ( ( rstpar2(1 + $I_L5024_126, 1, 1) + rstpar2(1 + $I_L5024_126, 1, 2) * rstpar2(1 + $I_L5024_126, 1, 3) ) * 1.0/rstpar2(1 + $I_L5024_126, 1, 3) )
 5024.                   $at_WR0_R5 = ( zlt2(1 + $I_L5024_126, 1) * 1.0/vcover(1 + $I_L5024_126, 1) )
 5024.                   $power1_WR0_R7 = $at_WR0_R5 * extk(1 + $I_L5024_126, 1, 1, 1)
 5024.                   $power2_WR0_R8 = $at_WR0_R5 * extk(1 + $I_L5024_126, 1, 1, 2)
 5024.                   $aa_WR0_R9 = 5.0e-1 + -( chil2(1 + $I_L5024_126, 1) * ( 6.3300000000000001e-1 + 3.3000000000000002e-1 * chil2(1 + $I_L5024_126, 1) ) )
 5024.                   $zat_WR0_R11 = ( pd(1 + $I_L5024_126, 1) * log( 5.0e-1 * ( 1.0 + _expn( -$power1_WR0_R7 ) ) ) * 1.0/extk(1 + $I_L5024_126, 1, 1, 1) )
 5024.                   $zat_WR0_R11 = $zat_WR0_R11 + ( 1.0/extk(1 + $I_L5024_126, 1, 1, 2) * log( 5.0e-1 * ( 1.0 + _expn( -$power2_WR0_R8 ) ) ) * ( 1.0 + -pd(1 + $I_L5024_126, 1) ) )
 5024.                   $zk_WR0_R12 = 1.0/$zat_WR0_R11 * log( pd(1 + $I_L5024_126, 1) * _expn( ( $power1_WR0_R7 * $zat_WR0_R11 * 1.0/$at_WR0_R5 ) ) + _expn( ( $power2_WR0_R8 * $zat_WR0_R11 * 1.0/$at_WR0_R5 ) ) * ( 1.0 + -pd(1 + $I_L5024_126, 1) ) )
 5024.                   $ekat_WR0_R13 = _expn( ( min( 20.0, $at_WR0_R5 * $zk_WR0_R12 ) ) )
 5024.                   $avflux_WR0_R14 = par(1 + $I_L5024_126, 1) * ( pd(1 + $I_L5024_126, 1) * ( ( 8.77e-1 + -1.754 * $aa_WR0_R9 ) + ( $aa_WR0_R9 * 1.0/f(1 + $I_L5024_126) ) ) + ( 1.5 * $aa_WR0_R9 + 1.1187314833333333 * ( 8.77e-1 + -1.754 * $aa_WR0_R9 ) ) * ( 1.0 + -pd(1 + $I_L5024_126, 1) ) )
 5024.                   $rst_WR0_R16 = log( ( ( 1.0 + $ekat_WR0_R13 * ( $gamma_WR0_R6 * 1.0/$avflux_WR0_R14 ) ) * 1.0/( 1.0 + ( $gamma_WR0_R6 * 1.0/$avflux_WR0_R14 ) ) ) ) * ( rstpar2(1 + $I_L5024_126, 1, 2) * 1.0/$gamma_WR0_R6 )
 5024.                   $rst_WR0_R16 = 1.0/( green2(1 + $I_L5024_126, 1) * ( 1.0/( $zk_WR0_R12 * rstpar2(1 + $I_L5024_126, 1, 3) ) * ( $rst_WR0_R16 + -log( ( 1.0/( 1.0 + ( $gamma_WR0_R6 * 1.0/$avflux_WR0_R14 ) ) * ( 1.0/$ekat_WR0_R13 + ( $gamma_WR0_R6 * 1.0/$avflux_WR0_R14 ) ) ) ) ) ) )
 5024.                   rst(1 + $I_L5024_126, 1) = $rst_WR0_R16
 5024.                endif
 5024.             endif
 5024.             $I_L5024_126 = 1 + $I_L5024_126
 5024.             if ( $I_L5024_126 >= nmax ) exit
 5024.          enddo
 5024.          $I_L5024_128 = 0
 5024. !dir$ ivdep
 5024.          do
 5024.             rst(1 + $I_L5024_128, 2) = 100000.0
 5024.             $I_L5024_128 = 1 + $I_L5024_128
 5024.             if ( $I_L5024_128 >= nmax ) exit
 5024.          enddo
 5024.       endif
 5024.       _free( t$1841 )
 5027.       call interc( roff(1), cc(1), cg(1), satcap(1, 1), snow(1, 1), extk(1, 1, 1, 1), tc(1), tg(1), td(1), capac(1, 1), w(1, 1), tm(1), ppc(1), ppl(1), vcover(1, 1), itype(1), dtc3x, nmax, ncols, zlt2(1, 1) )
 5034.       call sflxes( hgdtg(1), hgdtc(1), hgdtm(1), hcdtg(1), hcdtc(1), hcdtm(1), egdtg(1), egdtc(1), egdqm(1), ecdtg(1), ecdtc(1), ecdqm(1), deadtg(1), deadtc(1), deadqm(1), icheck(1), bps(1), psb(1), dzm(1), em(1), gmt(1, 1), gmq(1, 1), cu(1), cuni(1), ctni(1), ustar(1), rhoair(1), psy(1), rcp(1), wc(1), wg(1), fc(1), fg(1), hr(1), ect(1), eci(1), egt(1), egi(1), egs(1), ec(1), eg(1), hc(1), hg(1), ecidif(1), egidif(1), ecmass(1), egmass(1), etmass(1), hflux(1), chf(1), shf(1), ra(1), rb(1), rd(1), rc(1), rg(1), tcta(1), tgta(1), ta(1), ea(1), etc(1), etg(1), btc(1), btg(1), u2(1), radt(1, 1), rst(1, 1), rsoil(1), hrr(1), phsoil(1, 1), cc(1), cg(1), satcap(1, 1), dtc(1), dtg(1), dtm(1), dqm(1), stm(1, 1), thermk(1), tc(1), tg(1), td(1), capac(1, 1), w(1, 1), qm(1), tm(1), um(1), vm(1), psur(1), vcover(1, 1), z0x(1), d(1), rdc(1), rbc(1), z0(1), itype(1), dtc3x, mon(1), nmax, jstneu, ncols, zlt2(1, 1), topt2(1, 1), tll2(1, 1), tu2(1, 1), defac2(1, 1), ph12(1, 1), ph22(1, 1) )
 5047.       return
 5047.       end
 5047.       
 5054.       
 5054.       subroutine snowm( chf, shf, fluxef, roff, cc, cg, snow, dtc, dtg, tc, tg, td, capac, w, itype, dtc3x, nmax, ncols )
 5054.       t$878 = ncols
 5119.       t$1910 = _zla( 0, ncols )
 5054.       t$1911 = _zla( 0, ncols )
 5054.       t$1912 = 2 * _zla( 0, ncols )
 5054.       t$1913 = 2 * _zla( 0, ncols )
 5054.       t$1914 = 3 * _zla( 0, ncols )
 5124.       t$1917 = 8 * _zla( 0, ncols )
 5137.       t$1918 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 5137.       t$1920 = t$1918 + 8 * _zla( 0, ncols )
 5130.       t$1921 = 8 * ( 7 + t$1918 + 8 * _zla( 0, ncols ) ) / 8
 5130.       t$1923 = t$1921 + 8 * _zla( 0, ncols )
 5135.       t$1924 = 8 * ( 7 + t$1921 + 8 * _zla( 0, ncols ) ) / 8
 5135.       t$1926 = t$1924 + 8 * _zla( 0, ncols )
 5138.       t$1927 = 8 * ( 7 + t$1924 + 8 * _zla( 0, ncols ) ) / 8
 5138.       t$1929 = t$1927 + 8 * _zla( 0, ncols )
 5139.       t$1930 = 8 * ( 7 + t$1927 + 8 * _zla( 0, ncols ) ) / 8
 5139.       t$1932 = t$1930 + 8 * _zla( 0, ncols )
 5126.       t$1933 = 8 * ( 7 + t$1930 + 8 * _zla( 0, ncols ) ) / 8
 5126.       t$1935 = t$1933 + 8 * _zla( 0, ncols )
 5133.       t$1936 = 8 * ( 7 + t$1933 + 8 * _zla( 0, ncols ) ) / 8
 5133.       t$1938 = t$1936 + 8 * _zla( 0, ncols )
 5127.       t$1939 = 8 * ( 7 + t$1936 + 8 * _zla( 0, ncols ) ) / 8
 5127.       t$1941 = t$1939 + 8 * _zla( 0, ncols )
 5132.       t$1942 = 8 * ( 7 + t$1939 + 8 * _zla( 0, ncols ) ) / 8
 5132.       t$1944 = t$1942 + 8 * _zla( 0, ncols )
 5134.       t$1945 = 8 * ( 7 + t$1942 + 8 * _zla( 0, ncols ) ) / 8
 5134.       t$1947 = t$1945 + 8 * _zla( 0, ncols )
 5136.       t$1948 = 8 * ( 7 + t$1945 + 8 * _zla( 0, ncols ) ) / 8
 5136.       t$1950 = t$1948 + 8 * _zla( 0, ncols )
 5125.       t$1951 = 8 * ( 7 + t$1948 + 8 * _zla( 0, ncols ) ) / 8
 5125.       t$1953 = t$1951 + 8 * _zla( 0, ncols )
 5128.       t$1954 = 8 * ( 7 + t$1951 + 8 * _zla( 0, ncols ) ) / 8
 5128.       t$1956 = t$1954 + 8 * _zla( 0, ncols )
 5129.       t$1957 = 8 * ( 7 + t$1954 + 8 * _zla( 0, ncols ) ) / 8
 5129.       t$1959 = t$1957 + 8 * _zla( 0, ncols )
 5131.       t$1960 = 8 * ( 7 + t$1957 + 8 * _zla( 0, ncols ) ) / 8
 5131.       t$1962 = t$1960 + 8 * _zla( 0, ncols )
 5054.       t$1915 = int( _alloc( t$1960 + 8 * _zla( 0, ncols ) ), 8 )
 5124.       t$1916 = t$1915
 5137.       t$1919 = t$1918 + t$1915
 5130.       t$1922 = t$1921 + t$1915
 5135.       t$1925 = t$1924 + t$1915
 5138.       t$1928 = t$1927 + t$1915
 5139.       t$1931 = t$1930 + t$1915
 5126.       t$1934 = t$1933 + t$1915
 5133.       t$1937 = t$1936 + t$1915
 5127.       t$1940 = t$1939 + t$1915
 5132.       t$1943 = t$1942 + t$1915
 5134.       t$1946 = t$1945 + t$1915
 5136.       t$1949 = t$1948 + t$1915
 5125.       t$1952 = t$1951 + t$1915
 5128.       t$1955 = t$1954 + t$1915
 5129.       t$1958 = t$1957 + t$1915
 5131.       t$1961 = t$1960 + t$1915
 5147.       $F_A33 = ncols
 5147.       if ( ncols > 0 ) then
 5147.          $I_L5147_70 = 0
 5147. !dir$ ivdep
 5147.          do
 5147.             cct(1 + $I_L5147_70) = 0.0
 5147.             $I_L5147_70 = 1 + $I_L5147_70
 5147.             if ( $I_L5147_70 >= $F_A33 ) exit
 5147.          enddo
 5147.       endif
 5148.       $dtc3xi_S3 = 1.0/dtc3x
 5225.       $SC_zdepth_I2 = zdepth%dim_1%EX
 5225.       $SC_zdepth_I3 = zdepth%dim_1%LB
 5225.       $SC_zdepth_I5 = zdepth%dim_2%SM
 5225.       $SC_zdepth_I4 = zdepth%dim_2%EX
 5225.       $SC_zdepth_I6 = zdepth%dim_2%LB
 5225.       $SC_poros_I0 = poros%dim_1%EX
 5225.       $SC_poros_I1 = poros%dim_1%LB
 5150.       $I_L5150_72 = 0
 5150.       do
 5151.          if ( $I_L5150_72 == 0 ) then
 5153.             if ( nmax > 0 ) then
 5153.                $I_L5153_54 = 0
 5153. !dir$ ivdep
 5153.                do
 5154.                   cct(1 + $I_L5153_54) = cc(1 + $I_L5153_54)
 5155.                   ts(1 + $I_L5153_54) = tc(1 + $I_L5153_54)
 5156.                   dts(1 + $I_L5153_54) = dtc(1 + $I_L5153_54)
 5157.                   flux(1 + $I_L5153_54) = chf(1 + $I_L5153_54)
 5158.                   $I_L5153_54 = 1 + $I_L5153_54
 5153.                   if ( $I_L5153_54 >= nmax ) exit
 5153.                enddo
 5153.             endif
 5160.          else if ( nmax > 0 ) then
 5162.             $I_L5162_56 = 0
 5162. !dir$ ivdep
 5162.             do
 5163.                $cct_WR0_R0 = cg(1 + $I_L5162_56)
 5163.                cct(1 + $I_L5162_56) = $cct_WR0_R0
 5164.                ts(1 + $I_L5162_56) = tg(1 + $I_L5162_56)
 5165.                dts(1 + $I_L5162_56) = dtg(1 + $I_L5162_56)
 5166.                flux(1 + $I_L5162_56) = $dtc3xi_S3 * $cct_WR0_R0 * dtg(1 + $I_L5162_56)
 5167.                $I_L5162_56 = 1 + $I_L5162_56
 5162.                if ( $I_L5162_56 >= nmax ) exit
 5162.             enddo
 5162.          endif
 5171.          if ( nmax > 0 ) then
 5171.             $I_L5171_58 = 0
 5171. !dir$ ivdep
 5171.             do
 5172.                tta(1 + $I_L5171_58) = ts(1 + $I_L5171_58) + -dts(1 + $I_L5171_58)
 5173.                ttb(1 + $I_L5171_58) = ts(1 + $I_L5171_58)
 5174.                $I_L5171_58 = 1 + $I_L5171_58
 5171.                if ( $I_L5171_58 >= nmax ) exit
 5171.             enddo
 5176.             $I_L5176_60 = 0
 5176. !dir$ ivdep
 5176.             do
 5177.                if ( tta(1 + $I_L5176_60) <= 273.16000000000003 ) then
 5178.                   snow(1 + $I_L5176_60, 1 + $I_L5150_72) = capac(1 + $I_L5176_60, 1 + $I_L5150_72)
 5179.                   capac(1 + $I_L5176_60, 1 + $I_L5150_72) = 0.0
 5179.                else
 5181.                   snow(1 + $I_L5176_60, 1 + $I_L5150_72) = 0.0
 5181.                endif
 5183.                $I_L5176_60 = 1 + $I_L5176_60
 5182.                if ( $I_L5176_60 >= nmax ) exit
 5182.             enddo
 5185.             $I_L5185_62 = 0
 5185. !dir$ ivdep
 5185.             do
 5186.                work(1 + $I_L5185_62) = ( -273.16000000000003 + ttb(1 + $I_L5185_62) ) * ( -273.16000000000003 + tta(1 + $I_L5185_62) )
 5187.                $I_L5185_62 = 1 + $I_L5185_62
 5185.                if ( $I_L5185_62 >= nmax ) exit
 5185.             enddo
 5189.             $I_L5189_64 = 0
 5189. !dir$ ivdep
 5189.             do
 5190.                if ( work(1 + $I_L5189_64) < 0.0 ) then
 5191.                   $ntyp_S8 = itype(1 + $I_L5189_64)
 5192.                   $dtf_WR0_R1 = 273.16000000000003 + -tta(1 + $I_L5189_64)
 5193.                   $dtime1_WR0_R2 = ( $dtf_WR0_R1 * cct(1 + $I_L5189_64) * 1.0/flux(1 + $I_L5189_64) )
 5194.                   $hf_WR0_R3 = flux(1 + $I_L5189_64) * ( dtc3x + -$dtime1_WR0_R2 )
 5195.                   $spwet_WR0_R5 = min( 5.0, snow(1 + $I_L5189_64, 1 + $I_L5150_72) )
 5196.                   if ( dts(1 + $I_L5189_64) <= 0.0 ) then
 5197.                      fcap(1 + $I_L5189_64) = -333624200.0 * capac(1 + $I_L5189_64, 1 + $I_L5150_72)
 5197.                   else
 5199.                      fcap(1 + $I_L5189_64) = 333624200.0 * $spwet_WR0_R5
 5199.                   endif
 5201.                   $LD_SPLT_P1 = fcap(1 + $I_L5189_64)
 5201.                   $dtime2_WR0_R6 = ( $LD_SPLT_P1 * 1.0/flux(1 + $I_L5189_64) )
 5202.                   $dtf2_WR0_R7 = ( flux(1 + $I_L5189_64) * ( dtc3x + -$dtime1_WR0_R2 + -$dtime2_WR0_R6 ) * 1.0/cct(1 + $I_L5189_64) )
 5203.                   $tn_WR0_R8 = 273.16000000000003 + $dtf2_WR0_R7
 5204.                   if ( abs( $hf_WR0_R3 ) < abs( $LD_SPLT_P1 ) ) then
 5205.                      ts(1 + $I_L5189_64) = 273.06
 5205.                   else
 5207.                      ts(1 + $I_L5189_64) = $tn_WR0_R8
 5207.                   endif
 5215.                   $snow_WR0_R4 = snow(1 + $I_L5189_64, 1 + $I_L5150_72) + -( 2.9973844823007445e-9 * cvmg( $LD_SPLT_P1, $hf_WR0_R3, abs( $hf_WR0_R3 ) >= abs( $LD_SPLT_P1 ) ) )
 5215.                   snow(1 + $I_L5189_64, 1 + $I_L5150_72) = $snow_WR0_R4
 5216.                   capac(1 + $I_L5189_64, 1 + $I_L5150_72) = capac(1 + $I_L5189_64, 1 + $I_L5150_72) + ( 2.9973844823007445e-9 * cvmg( $LD_SPLT_P1, $hf_WR0_R3, abs( $hf_WR0_R3 ) >= abs( $LD_SPLT_P1 ) ) )
 5217.                   if ( $snow_WR0_R4 < 1.0e-10 ) then
 5217.                      snow(1 + $I_L5189_64, 1 + $I_L5150_72) = 0.0
 5217.                   endif
 5218.                   if ( $I_L5150_72 == 0 ) then
 5219.                      tc(1 + $I_L5189_64) = ts(1 + $I_L5189_64)
 5219.                   else
 5221.                      tg(1 + $I_L5189_64) = ts(1 + $I_L5189_64)
 5221.                   endif
 5223.                   if ( $I_L5150_72 == 1 ) then
 5224.                      if ( td(1 + $I_L5189_64) > 273.16000000000003 ) then
 5225.                         $LD_SPLT_P4 = capac(1 + $I_L5189_64, 2)
 5225.                         w(1 + $I_L5189_64, 1) = w(1 + $I_L5189_64, 1) + ( $LD_SPLT_P4 * 1.0/( (zdepth%base_addr)($ntyp_S8, 1, 0) * (poros%base_addr)($ntyp_S8, 0) ) )
 5225.                      else
 5228.                         $LD_SPLT_P5 = capac(1 + $I_L5189_64, 2)
 5228.                         roff(1 + $I_L5189_64) = $LD_SPLT_P5 + roff(1 + $I_L5189_64)
 5228.                      endif
 5230.                      capac(1 + $I_L5189_64, 2) = 0.0
 5230.                   endif
 5230.                endif
 5233.                $I_L5189_64 = 1 + $I_L5189_64
 5232.                if ( $I_L5189_64 >= nmax ) exit
 5232.             enddo
 5234.             $I_L5234_66 = 0
 5234. !dir$ ivdep
 5234.             do
 5235.                capac(1 + $I_L5234_66, 1 + $I_L5150_72) = capac(1 + $I_L5234_66, 1 + $I_L5150_72) + snow(1 + $I_L5234_66, 1 + $I_L5150_72)
 5236.                $I_L5234_66 = 1 + $I_L5234_66
 5234.                if ( $I_L5234_66 >= nmax ) exit
 5234.             enddo
 5234.          endif
 5237.          $I_L5150_72 = 1 + $I_L5150_72
 5236.          if ( $I_L5150_72 >= 2 ) exit
 5236.       enddo
 5241.       if ( nmax > 0 ) then
 5241.          $I_L5241_68 = 0
 5241. !dir$ ivdep
 5241.          do
 5242.             fluxef(1 + $I_L5241_68) = shf(1 + $I_L5241_68) + -( $dtc3xi_S3 * dtg(1 + $I_L5241_68) * cg(1 + $I_L5241_68) )
 5243.             $I_L5241_68 = 1 + $I_L5241_68
 5241.             if ( $I_L5241_68 >= nmax ) exit
 5241.          enddo
 5241.       endif
 5054.       _free( t$1915 )
 5245.       return
 5245.       end
 5245.       
 5265.       
 5265.       subroutine fysiks( vcover, z0x, d, rdc, rbc, z0, ndt, latitu, bps, psb, dzm, em, gmt, gmq, gmu, cu, cuni, ctni, ustar, cosz, sinclt, rhoair, psy, rcp, wc, wg, fc, fg, hr, ect, eci, egt, egi, egs, ec, eg, hc, hg, ecidif, egidif, ecmass, egmass, etmass, hflux, chf, shf, fluxef, roff, drag, ra, rb, rd, rc, rg, tcta, tgta, ta, ea, etc, etg, btc, btg, u2, radt, par, pd, rst, rsoil, phroot, hrr, phsoil, cc, cg, satcap, snow, dtc, dtg, dtm, dqm, stm, extk, radfac, closs, gloss, thermk, p1f, p2f, tc, tg, td, capac, w, qm, tm, um, vm, psur, ppc, ppl, radn, itype, dtc3x, mon, nmax, ncols, zlt2, green2, chil2, rstpar2, topt2, tll2, tu2, defac2, ph12, ph22 )
 5265.       t$910 = ncols
 5624.       t$1963 = _zla( 0, ncols )
 5265.       t$1964 = _zla( 0, ncols )
 5265.       t$1965 = 2 * _zla( 0, ncols )
 5265.       t$1966 = 3 * _zla( 0, ncols )
 5265.       t$1967 = 4 * _zla( 0, ncols )
 5265.       t$1968 = 3 * _zla( 0, ncols )
 5265.       t$1969 = 2 * _zla( 0, ncols )
 5265.       t$1970 = 6 * _zla( 0, ncols )
 5265.       t$1971 = 12 * _zla( 0, ncols )
 5265.       t$1972 = 2 * _zla( 0, ncols )
 5265.       t$1973 = 3 * _zla( 0, ncols )
 5265.       t$1974 = 6 * _zla( 0, ncols )
 5664.       t$1977 = 8 * _zla( 0, ncols )
 5660.       t$1978 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 5660.       t$1980 = t$1978 + 8 * _zla( 0, ncols )
 5677.       t$1981 = 8 * ( 7 + t$1978 + 8 * _zla( 0, ncols ) ) / 8
 5677.       t$1983 = t$1981 + 8 * _zla( 0, ncols )
 5657.       t$1984 = 8 * ( 7 + t$1981 + 8 * _zla( 0, ncols ) ) / 8
 5657.       t$1986 = t$1984 + 8 * _zla( 0, ncols )
 5656.       t$1987 = 8 * ( 7 + t$1984 + 8 * _zla( 0, ncols ) ) / 8
 5656.       t$1989 = t$1987 + 8 * _zla( 0, ncols )
 5655.       t$1990 = 8 * ( 7 + t$1987 + 8 * _zla( 0, ncols ) ) / 8
 5655.       t$1992 = t$1990 + 8 * _zla( 0, ncols )
 5665.       t$1993 = 8 * ( 7 + t$1990 + 8 * _zla( 0, ncols ) ) / 8
 5665.       t$1995 = t$1993 + 8 * _zla( 0, ncols )
 5662.       t$1996 = 8 * ( 7 + t$1993 + 8 * _zla( 0, ncols ) ) / 8
 5662.       t$1998 = t$1996 + 8 * _zla( 0, ncols )
 5654.       t$1999 = 8 * ( 7 + t$1996 + 8 * _zla( 0, ncols ) ) / 8
 5654.       t$2001 = t$1999 + 8 * _zla( 0, ncols )
 5653.       t$2002 = 8 * ( 7 + t$1999 + 8 * _zla( 0, ncols ) ) / 8
 5653.       t$2004 = t$2002 + 8 * _zla( 0, ncols )
 5652.       t$2005 = 8 * ( 7 + t$2002 + 8 * _zla( 0, ncols ) ) / 8
 5652.       t$2007 = t$2005 + 8 * _zla( 0, ncols )
 5659.       t$2008 = 8 * ( 7 + t$2005 + 8 * _zla( 0, ncols ) ) / 8
 5659.       t$2010 = t$2008 + 24 * _zla( 0, ncols )
 5663.       t$2011 = 8 * ( 7 + t$2008 + 24 * _zla( 0, ncols ) ) / 8
 5663.       t$2013 = t$2011 + 8 * _zla( 0, ncols )
 5651.       t$2014 = 8 * ( 7 + t$2011 + 8 * _zla( 0, ncols ) ) / 8
 5651.       t$2016 = t$2014 + 8 * _zla( 0, ncols )
 5650.       t$2017 = 8 * ( 7 + t$2014 + 8 * _zla( 0, ncols ) ) / 8
 5650.       t$2019 = t$2017 + 8 * _zla( 0, ncols )
 5649.       t$2020 = 8 * ( 7 + t$2017 + 8 * _zla( 0, ncols ) ) / 8
 5649.       t$2022 = t$2020 + 8 * _zla( 0, ncols )
 5676.       t$2023 = 8 * ( 7 + t$2020 + 8 * _zla( 0, ncols ) ) / 8
 5676.       t$2025 = t$2023 + 8 * _zla( 0, ncols )
 5678.       t$2026 = 8 * ( 7 + t$2023 + 8 * _zla( 0, ncols ) ) / 8
 5678.       t$2028 = t$2026 + 8 * _zla( 0, ncols )
 5647.       t$2029 = 8 * ( 7 + t$2026 + 8 * _zla( 0, ncols ) ) / 8
 5647.       t$2031 = t$2029 + 8 * _zla( 0, ncols )
 5646.       t$2032 = 8 * ( 7 + t$2029 + 8 * _zla( 0, ncols ) ) / 8
 5646.       t$2034 = t$2032 + 8 * _zla( 0, ncols )
 5648.       t$2035 = 8 * ( 7 + t$2032 + 8 * _zla( 0, ncols ) ) / 8
 5648.       t$2037 = t$2035 + 8 * _zla( 0, ncols )
 5644.       t$2038 = 8 * ( 7 + t$2035 + 8 * _zla( 0, ncols ) ) / 8
 5644.       t$2040 = t$2038 + 8 * _zla( 0, ncols )
 5643.       t$2041 = 8 * ( 7 + t$2038 + 8 * _zla( 0, ncols ) ) / 8
 5643.       t$2043 = t$2041 + 8 * _zla( 0, ncols )
 5645.       t$2044 = 8 * ( 7 + t$2041 + 8 * _zla( 0, ncols ) ) / 8
 5645.       t$2046 = t$2044 + 8 * _zla( 0, ncols )
 5638.       t$2048 = t$2044 + 12 * _zla( 0, ncols )
 5661.       t$2049 = 8 * ( 7 + t$2044 + 12 * _zla( 0, ncols ) ) / 8
 5661.       t$2051 = t$2049 + 8 * _zla( 0, ncols )
 5675.       t$2052 = 8 * ( 7 + t$2049 + 8 * _zla( 0, ncols ) ) / 8
 5675.       t$2054 = t$2052 + 8 * _zla( 0, ncols )
 5265.       t$1975 = int( _alloc( t$2052 + 8 * _zla( 0, ncols ) ), 8 )
 5664.       t$1976 = t$1975
 5660.       t$1979 = t$1978 + t$1975
 5677.       t$1982 = t$1981 + t$1975
 5657.       t$1985 = t$1984 + t$1975
 5656.       t$1988 = t$1987 + t$1975
 5655.       t$1991 = t$1990 + t$1975
 5665.       t$1994 = t$1993 + t$1975
 5662.       t$1997 = t$1996 + t$1975
 5654.       t$2000 = t$1999 + t$1975
 5653.       t$2003 = t$2002 + t$1975
 5652.       t$2006 = t$2005 + t$1975
 5659.       t$2009 = t$2008 + t$1975
 5663.       t$2012 = t$2011 + t$1975
 5651.       t$2015 = t$2014 + t$1975
 5650.       t$2018 = t$2017 + t$1975
 5649.       t$2021 = t$2020 + t$1975
 5676.       t$2024 = t$2023 + t$1975
 5678.       t$2027 = t$2026 + t$1975
 5647.       t$2030 = t$2029 + t$1975
 5646.       t$2033 = t$2032 + t$1975
 5648.       t$2036 = t$2035 + t$1975
 5644.       t$2039 = t$2038 + t$1975
 5643.       t$2042 = t$2041 + t$1975
 5645.       t$2045 = t$2044 + t$1975
 5638.       t$2047 = t$2044 + t$1975 + 8 * _zla( 0, ncols )
 5661.       t$2050 = t$2049 + t$1975
 5675.       t$2053 = t$2052 + t$1975
 5683.       if ( nmax > 0 ) then
 5688.          $SC_zdepth_I0 = zdepth%dim_1%EX
 5688.          $SC_zdepth_I1 = zdepth%dim_1%LB
 5688.          $SC_zdepth_I3 = zdepth%dim_2%SM
 5688.          $SC_zdepth_I2 = zdepth%dim_2%EX
 5688.          $SC_zdepth_I4 = zdepth%dim_2%LB
 5688.          $SC_poros_I5 = poros%dim_1%EX
 5688.          $SC_poros_I6 = poros%dim_1%LB
 5683.          $I_L5683_126 = 0
 5683. !dir$ ivdep
 5683.          do
 5688.             totwb(1 + $I_L5683_126) = capac(1 + $I_L5683_126, 2) + capac(1 + $I_L5683_126, 1) + w(1 + $I_L5683_126, 1) * (poros%base_addr)(itype(1 + $I_L5683_126), 0) * (zdepth%base_addr)(itype(1 + $I_L5683_126), 1, 0) + w(1 + $I_L5683_126, 3) * (zdepth%base_addr)(itype(1 + $I_L5683_126), 3, 0) * (poros%base_addr)(itype(1 + $I_L5683_126), 0) + w(1 + $I_L5683_126, 2) * (poros%base_addr)(itype(1 + $I_L5683_126), 0) * (zdepth%base_addr)(itype(1 + $I_L5683_126), 2, 0)
 5692.             $I_L5683_126 = 1 + $I_L5683_126
 5683.             if ( $I_L5683_126 >= nmax ) exit
 5683.          enddo
 5683.       endif
 5696.       call pbl( jstneu, hgdtg(1), hgdtc(1), hgdtm(1), hcdtg(1), hcdtc(1), hcdtm(1), egdtg(1), egdtc(1), egdqm(1), ecdtg(1), ecdtc(1), ecdqm(1), deadtg(1), deadtc(1), deadqm(1), icheck(1), ect(1), eci(1), egt(1), egi(1), egs(1), ec(1), eg(1), hc(1), hg(1), ecidif(1), egidif(1), ecmass(1), egmass(1), etmass(1), hflux(1), chf(1), shf(1), roff(1), bps(1), psb(1), dzm(1), em(1), gmt(1, 1), gmq(1, 1), cu(1), cuni(1), ctni(1), ustar(1), cosz(1), rhoair(1), psy(1), rcp(1), wc(1), wg(1), fc(1), fg(1), hr(1), vcover(1, 1), z0x(1), d(1), rdc(1), rbc(1), z0(1), qm(1), tm(1), um(1), vm(1), psur(1), ppc(1), ppl(1), radn(1, 1, 1), ra(1), rb(1), rd(1), rc(1), rg(1), tcta(1), tgta(1), ta(1), ea(1), etc(1), etg(1), btc(1), btg(1), u2(1), radt(1, 1), par(1, 1), pd(1, 1), rst(1, 1), rsoil(1), phroot(1, 1), hrr(1), phsoil(1, 1), cc(1), cg(1), satcap(1, 1), snow(1, 1), dtc(1), dtg(1), dtm(1), dqm(1), stm(1, 1), extk(1, 1, 1, 1), radfac(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), tc(1), tg(1), td(1), capac(1, 1), w(1, 1), itype(1), dtc3x, mon(1), nmax, ncols, zlt2(1, 1), green2(1, 1), chil2(1, 1), rstpar2(1, 1, 1), topt2(1, 1), tll2(1, 1), tu2(1, 1), defac2(1, 1), ph12(1, 1), ph22(1, 1) )
 5718.       if ( nmax > 0 ) then
 5718.          $I_L5718_128 = 0
 5718. !dir$ ivdep
 5718.          do
 5719.             tc(1 + $I_L5718_128) = tc(1 + $I_L5718_128) + dtc(1 + $I_L5718_128)
 5720.             tg(1 + $I_L5718_128) = tg(1 + $I_L5718_128) + dtg(1 + $I_L5718_128)
 5721.             $I_L5718_128 = 1 + $I_L5718_128
 5718.             if ( $I_L5718_128 >= nmax ) exit
 5718.          enddo
 5718.       endif
 5729.       $SC_zdepth_I0 = zdepth%dim_1%EX
 5729.       $SC_zdepth_I1 = zdepth%dim_1%LB
 5729.       $SC_zdepth_I3 = zdepth%dim_2%SM
 5729.       $SC_zdepth_I2 = zdepth%dim_2%EX
 5729.       $SC_zdepth_I4 = zdepth%dim_2%LB
 5729.       $SC_poros_I5 = poros%dim_1%EX
 5729.       $SC_poros_I6 = poros%dim_1%LB
 5726.       if ( nmax > 0 ) then
 5725.          $I_L5725_156 = 0
 5725. !dir$ blocking_size( 1, 1 )
 5725.          do
 5726.             $I_L5726_130 = 0
 5726. !dir$ ivdep
 5726. !dir$ blocking_size( 256, 256 )
 5726.             do
 5727.                $ntyp_S4 = itype(1 + $I_L5726_130)
 5728.                if ( capac(1 + $I_L5726_130, 1 + $I_L5725_156) <= 9.9999999999999995e-7 ) then
 5729.                   w(1 + $I_L5726_130, 1) = w(1 + $I_L5726_130, 1) + ( capac(1 + $I_L5726_130, 1 + $I_L5725_156) * 1.0/( (zdepth%base_addr)($ntyp_S4, 1, 0) * (poros%base_addr)($ntyp_S4, 0) ) )
 5730.                   capac(1 + $I_L5726_130, 1 + $I_L5725_156) = 0.0
 5730.                endif
 5732.                $I_L5726_130 = 1 + $I_L5726_130
 5731.                if ( $I_L5726_130 >= nmax ) exit
 5731.             enddo
 5733.             $I_L5725_156 = 1 + $I_L5725_156
 5732.             if ( $I_L5725_156 >= 2 ) exit
 5732.          enddo
 5732.       endif
 5737.       call snowm( chf(1), shf(1), fluxef(1), roff(1), cc(1), cg(1), snow(1, 1), dtc(1), dtg(1), tc(1), tg(1), td(1), capac(1, 1), w(1, 1), itype(1), dtc3x, nmax, ncols )
 5743.       $timcon_S6 = 1.4765516371191563e-2 * dtc3x
 5745.       if ( nmax > 0 ) then
 5754.          $SC_zdepth_I0 = zdepth%dim_1%EX
 5754.          $SC_zdepth_I1 = zdepth%dim_1%LB
 5754.          $SC_zdepth_I3 = zdepth%dim_2%SM
 5754.          $SC_zdepth_I2 = zdepth%dim_2%EX
 5754.          $SC_zdepth_I4 = zdepth%dim_2%LB
 5754.          $SC_poros_I5 = poros%dim_1%EX
 5754.          $SC_poros_I6 = poros%dim_1%LB
 5745.          $I_L5745_132 = 0
 5745. !dir$ ivdep
 5745.          do
 5753.             $ntyp_S8 = itype(1 + $I_L5745_132)
 5754.             w(1 + $I_L5745_132, 1) = w(1 + $I_L5745_132, 1) + -( 3.9682539682539682e-10 * egs(1 + $I_L5745_132) * 1.0/( (zdepth%base_addr)($ntyp_S8, 1, 0) * (poros%base_addr)($ntyp_S8, 0) ) )
 5746.             td(1 + $I_L5745_132) = td(1 + $I_L5745_132) + $timcon_S6 * ( fluxef(1 + $I_L5745_132) * 1.0/cg(1 + $I_L5745_132) )
 5747.             $I_L5745_132 = 1 + $I_L5745_132
 5745.             if ( $I_L5745_132 >= nmax ) exit
 5745.          enddo
 5745.       endif
 5779.       $SC_rootd_I7 = rootd%dim_1%EX
 5779.       $SC_rootd_I8 = rootd%dim_1%LB
 5779.       $SC_rootd_I10 = rootd%dim_2%SM
 5779.       $SC_rootd_I9 = rootd%dim_2%EX
 5779.       $SC_rootd_I11 = rootd%dim_2%LB
 5773.       $SC_zdepth_I0 = zdepth%dim_1%EX
 5773.       $SC_zdepth_I1 = zdepth%dim_1%LB
 5773.       $SC_zdepth_I3 = zdepth%dim_2%SM
 5773.       $SC_zdepth_I2 = zdepth%dim_2%EX
 5773.       $SC_zdepth_I4 = zdepth%dim_2%LB
 5795.       $SC_poros_I5 = poros%dim_1%EX
 5795.       $SC_poros_I6 = poros%dim_1%LB
 5759.       $I_L5759_164 = 0
 5759.       do
 5760.          if ( $I_L5759_164 == 0 ) then
 5761.             if ( nmax > 0 ) then
 5761.                $I_L5761_134 = 0
 5761. !dir$ ivdep
 5761.                do
 5762.                   absoil(1 + $I_L5761_134) = 3.9682539682539682e-10 * ect(1 + $I_L5761_134)
 5763.                   $I_L5761_134 = 1 + $I_L5761_134
 5761.                   if ( $I_L5761_134 >= nmax ) exit
 5761.                enddo
 5761.             endif
 5764.          else if ( nmax > 0 ) then
 5765.             $I_L5765_136 = 0
 5765. !dir$ ivdep
 5765.             do
 5766.                absoil(1 + $I_L5765_136) = 3.9682539682539682e-10 * egt(1 + $I_L5765_136)
 5767.                $I_L5765_136 = 1 + $I_L5765_136
 5765.                if ( $I_L5765_136 >= nmax ) exit
 5765.             enddo
 5765.          endif
 5769.          if ( nmax > 0 ) then
 5769.             $I_L5769_138 = 0
 5769. !dir$ ivdep
 5769.             do
 5770.                $ntyp_S13 = itype(1 + $I_L5769_138)
 5771.                ef(1 + $I_L5769_138, 2) = 0.0
 5772.                ef(1 + $I_L5769_138, 3) = 0.0
 5773.                totdep(1 + $I_L5769_138) = (zdepth%base_addr)($ntyp_S13, 1, 0)
 5774.                $I_L5769_138 = 1 + $I_L5769_138
 5769.                if ( $I_L5769_138 >= nmax ) exit
 5769.             enddo
 5775.             $I_L5775_158 = 0
 5775. !dir$ blocking_size( 1, 1 )
 5775.             do
 5776.                $I_L5776_140 = 0
 5776. !dir$ ivdep
 5776. !dir$ blocking_size( 256, 256 )
 5776.                do
 5777.                   $ntyp_S15 = itype(1 + $I_L5776_140)
 5779.                   $div_WR0_R0 = (rootd%base_addr)($ntyp_S15, 1 + $I_L5759_164, 0)
 5778.                   $totdep_WR0_R1 = totdep(1 + $I_L5776_140) + (zdepth%base_addr)($ntyp_S15, 2 + $I_L5775_158, 0)
 5778.                   totdep(1 + $I_L5776_140) = $totdep_WR0_R1
 5780.                   $dep_WR0_R2 = max( 0.0, $div_WR0_R0 + (zdepth%base_addr)($ntyp_S15, 2 + $I_L5775_158, 0) + -$totdep_WR0_R1 )
 5782.                   $dep_WR0_R2 = min( $dep_WR0_R2, (zdepth%base_addr)($ntyp_S15, 2 + $I_L5775_158, 0) )
 5783.                   ef(1 + $I_L5776_140, 2 + $I_L5775_158) = ( $dep_WR0_R2 * 1.0/$div_WR0_R0 )
 5784.                   $I_L5776_140 = 1 + $I_L5776_140
 5776.                   if ( $I_L5776_140 >= nmax ) exit
 5776.                enddo
 5785.                $I_L5775_158 = 1 + $I_L5775_158
 5784.                if ( $I_L5775_158 >= 2 ) exit
 5784.             enddo
 5786.             $I_L5786_142 = 0
 5786. !dir$ ivdep
 5786.             do
 5787.                $eft_WR0_R3 = ef(1 + $I_L5786_142, 3) + ef(1 + $I_L5786_142, 2)
 5788.                $eft_WR0_R3 = max( 9.9999999999999995e-7, $eft_WR0_R3 )
 5789.                ef(1 + $I_L5786_142, 2) = ( ef(1 + $I_L5786_142, 2) * 1.0/$eft_WR0_R3 )
 5790.                ef(1 + $I_L5786_142, 3) = ( ef(1 + $I_L5786_142, 3) * 1.0/$eft_WR0_R3 )
 5791.                $I_L5786_142 = 1 + $I_L5786_142
 5786.                if ( $I_L5786_142 >= nmax ) exit
 5786.             enddo
 5792.             $I_L5792_160 = 0
 5792. !dir$ blocking_size( 1, 1 )
 5792.             do
 5793.                $I_L5793_144 = 0
 5793. !dir$ ivdep
 5793. !dir$ blocking_size( 256, 256 )
 5793.                do
 5794.                   $ntyp_S19 = itype(1 + $I_L5793_144)
 5795.                   w(1 + $I_L5793_144, 2 + $I_L5792_160) = w(1 + $I_L5793_144, 2 + $I_L5792_160) + -( absoil(1 + $I_L5793_144) * ef(1 + $I_L5793_144, 2 + $I_L5792_160) * 1.0/( (poros%base_addr)($ntyp_S19, 0) * (zdepth%base_addr)($ntyp_S19, 2 + $I_L5792_160, 0) ) )
 5797.                   $I_L5793_144 = 1 + $I_L5793_144
 5793.                   if ( $I_L5793_144 >= nmax ) exit
 5793.                enddo
 5798.                $I_L5792_160 = 1 + $I_L5792_160
 5797.                if ( $I_L5792_160 >= 2 ) exit
 5797.             enddo
 5797.          endif
 5799.          $I_L5759_164 = 1 + $I_L5759_164
 5798.          if ( $I_L5759_164 >= 2 ) exit
 5798.       enddo
 5808.       $SC_zdepth_I0 = zdepth%dim_1%EX
 5808.       $SC_zdepth_I1 = zdepth%dim_1%LB
 5808.       $SC_zdepth_I3 = zdepth%dim_2%SM
 5808.       $SC_zdepth_I2 = zdepth%dim_2%EX
 5808.       $SC_zdepth_I4 = zdepth%dim_2%LB
 5805.       if ( nmax > 0 ) then
 5805.          $SI_L5805_146_G1 = 0
 5805.          do
 5804.             $I_L5804_162 = 0
 5804. !dir$ blocking_size( 2, 2 )
 5804.             do
 5805.                $I_L5805_166 = 0
 5805. !dir$ ivdep
 5805. !dir$ blocking_size( 256, 256 )
 5805.                do
 5806.                   if ( w(1 + $I_L5805_166 + 256 * $SI_L5805_146_G1, 1 + $I_L5804_162) <= 0.0 ) then
 5807.                      $ntyp_S23 = itype(1 + $I_L5805_166 + 256 * $SI_L5805_146_G1)
 5808.                      w(1 + $I_L5805_166 + 256 * $SI_L5805_146_G1, 2 + $I_L5804_162) = w(1 + $I_L5805_166 + 256 * $SI_L5805_146_G1, 2 + $I_L5804_162) + ( w(1 + $I_L5805_166 + 256 * $SI_L5805_146_G1, 1 + $I_L5804_162) * (zdepth%base_addr)($ntyp_S23, 1 + $I_L5804_162, 0) * 1.0/(zdepth%base_addr)($ntyp_S23, 2 + $I_L5804_162, 0) )
 5810.                      w(1 + $I_L5805_166 + 256 * $SI_L5805_146_G1, 1 + $I_L5804_162) = 0.0
 5810.                   endif
 5805.                   $I_L5805_166 = 1 + $I_L5805_166
 5811.                   if ( $I_L5805_166 >= min( nmax, 256 + 256 * $SI_L5805_146_G1 ) + -256 * $SI_L5805_146_G1 ) exit
 5811.                enddo
 5813.                $I_L5804_162 = 1 + $I_L5804_162
 5813.                if ( $I_L5804_162 >= 2 ) exit
 5813.             enddo
 5805.             $SI_L5805_146_G1 = 1 + $SI_L5805_146_G1
 5812.             if ( $SI_L5805_146_G1 >= _rsh( 255 + nmax, 8 ) ) exit
 5812.          enddo
 5812.       endif
 5815.       call runoff( roff(1), tg(1), td(1), capac(1, 1), w(1, 1), itype(1), dtc3x, nmax, ncols )
 5818.       if ( nmax > 0 ) then
 5821.          $SC_zdepth_I0 = zdepth%dim_1%EX
 5821.          $SC_zdepth_I1 = zdepth%dim_1%LB
 5821.          $SC_zdepth_I3 = zdepth%dim_2%SM
 5821.          $SC_zdepth_I2 = zdepth%dim_2%EX
 5821.          $SC_zdepth_I4 = zdepth%dim_2%LB
 5829.          $SC_poros_I5 = poros%dim_1%EX
 5829.          $SC_poros_I6 = poros%dim_1%LB
 5818.          $I_L5818_148 = 0
 5818. !dir$ ivdep
 5818.          do
 5819.             $ntyp_S25 = itype(1 + $I_L5818_148)
 5820.             if ( w(1 + $I_L5818_148, 1) > 1.0 ) then
 5821.                w(1 + $I_L5818_148, 2) = w(1 + $I_L5818_148, 2) + ( (zdepth%base_addr)($ntyp_S25, 1, 0) * 1.0/(zdepth%base_addr)($ntyp_S25, 2, 0) * ( -1.0 + w(1 + $I_L5818_148, 1) ) )
 5822.                w(1 + $I_L5818_148, 1) = 1.0
 5822.             endif
 5824.             if ( w(1 + $I_L5818_148, 2) > 1.0 ) then
 5825.                w(1 + $I_L5818_148, 3) = w(1 + $I_L5818_148, 3) + ( (zdepth%base_addr)($ntyp_S25, 2, 0) * 1.0/(zdepth%base_addr)($ntyp_S25, 3, 0) * ( -1.0 + w(1 + $I_L5818_148, 2) ) )
 5826.                w(1 + $I_L5818_148, 2) = 1.0
 5826.             endif
 5828.             if ( w(1 + $I_L5818_148, 3) > 1.0 ) then
 5829.                roff(1 + $I_L5818_148) = roff(1 + $I_L5818_148) + (poros%base_addr)($ntyp_S25, 0) * (zdepth%base_addr)($ntyp_S25, 3, 0) * ( -1.0 + w(1 + $I_L5818_148, 3) )
 5830.                w(1 + $I_L5818_148, 3) = 1.0
 5830.             endif
 5832.             $I_L5818_148 = 1 + $I_L5818_148
 5831.             if ( $I_L5818_148 >= nmax ) exit
 5831.          enddo
 5840.          $I_L5840_150 = 0
 5840. !dir$ ivdep
 5840.          do
 5846.             $drag_WR0_R4 = ustar(1 + $I_L5840_150) * cu(1 + $I_L5840_150) * rhoair(1 + $I_L5840_150)
 5846.             drag(1 + $I_L5840_150) = $drag_WR0_R4
 5861.             $aaa_WR0_R5 = ( 9.8000000000000004e-2 * $drag_WR0_R4 * 1.0/psb(1 + $I_L5840_150) )
 5867.             $d1_S27 = 1.0/ra(1 + $I_L5840_150) + 1.0/rb(1 + $I_L5840_150) + 1.0/rd(1 + $I_L5840_150)
 5869.             ta(1 + $I_L5840_150) = ( 1.0/$d1_S27 * ( ( bps(1 + $I_L5840_150) * tm(1 + $I_L5840_150) * 1.0/ra(1 + $I_L5840_150) ) + ( tc(1 + $I_L5840_150) * 1.0/rb(1 + $I_L5840_150) ) + ( tg(1 + $I_L5840_150) * 1.0/rd(1 + $I_L5840_150) ) ) )
 5863.             $gmu_WR0_R6 = gmu(1 + $I_L5840_150, 2) + dtc3x * $aaa_WR0_R5
 5863.             gmu(1 + $I_L5840_150, 2) = $gmu_WR0_R6
 5864.             gmu(1 + $I_L5840_150, 3) = ( 1.0/$gmu_WR0_R6 * ( gmu(1 + $I_L5840_150, 3) + -( sinclt(1 + $I_L5840_150) * $aaa_WR0_R5 * um(1 + $I_L5840_150) ) ) )
 5865.             gmu(1 + $I_L5840_150, 4) = ( 1.0/$gmu_WR0_R6 * ( gmu(1 + $I_L5840_150, 4) + -( vm(1 + $I_L5840_150) * $aaa_WR0_R5 * sinclt(1 + $I_L5840_150) ) ) )
 5871.             $I_L5840_150 = 1 + $I_L5840_150
 5840.             if ( $I_L5840_150 >= nmax ) exit
 5840.          enddo
 5878.          $SC_zdepth_I0 = zdepth%dim_1%EX
 5878.          $SC_zdepth_I1 = zdepth%dim_1%LB
 5878.          $SC_zdepth_I3 = zdepth%dim_2%SM
 5878.          $SC_zdepth_I2 = zdepth%dim_2%EX
 5878.          $SC_zdepth_I4 = zdepth%dim_2%LB
 5878.          $SC_poros_I5 = poros%dim_1%EX
 5878.          $SC_poros_I6 = poros%dim_1%LB
 5876.          $I_L5876_152 = 0
 5876. !dir$ ivdep
 5876.          do
 5877.             $ntyp_S29 = itype(1 + $I_L5876_152)
 5878.             endwb(1 + $I_L5876_152) = roff(1 + $I_L5876_152) + capac(1 + $I_L5876_152, 2) + capac(1 + $I_L5876_152, 1) + 1.0e-3 * etmass(1 + $I_L5876_152) + -1.0e-3 * ( ppc(1 + $I_L5876_152) + ppl(1 + $I_L5876_152) ) + w(1 + $I_L5876_152, 3) * (poros%base_addr)($ntyp_S29, 0) * (zdepth%base_addr)($ntyp_S29, 3, 0) + w(1 + $I_L5876_152, 1) * (zdepth%base_addr)($ntyp_S29, 1, 0) * (poros%base_addr)($ntyp_S29, 0) + w(1 + $I_L5876_152, 2) * (poros%base_addr)($ntyp_S29, 0) * (zdepth%base_addr)($ntyp_S29, 2, 0)
 5893.             cbal(1 + $I_L5876_152) = radt(1 + $I_L5876_152, 1) + -( 1.0/dtc3x * ( eci(1 + $I_L5876_152) + hc(1 + $I_L5876_152) + ect(1 + $I_L5876_152) ) ) + -chf(1 + $I_L5876_152)
 5894.             gbal(1 + $I_L5876_152) = radt(1 + $I_L5876_152, 2) + -( 1.0/dtc3x * ( hg(1 + $I_L5876_152) + egi(1 + $I_L5876_152) + egt(1 + $I_L5876_152) + egs(1 + $I_L5876_152) ) ) + -shf(1 + $I_L5876_152)
 5899.             $I_L5876_152 = 1 + $I_L5876_152
 5876.             if ( $I_L5876_152 >= nmax ) exit
 5876.          enddo
 5876.       endif
 5901.       if ( nmax > 0 ) then
 5901.          $I_L5901_154 = 0
 5901.          do
 5902.             ntyp = itype(1 + $I_L5901_154)
 5904.             if ( abs( totwb(1 + $I_L5901_154) + -endwb(1 + $I_L5901_154) ) > 5.0000000000000001e-4 ) then
 5906.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5906.                    _substr(t$3139,1,13) = 'Sfc_SSiB.f90'
 5906.                    _substr(t$3140,1,6) = 'TOTWB'
 5906.                   t$3141 = 1 + $I_L5901_154
 5906.                   call _bounds_error(  _substr(t$3139,1,13), 5906,  _substr(t$3140,1,6), 1, 1, t$910, t$3141, t$3138 )
 5906.                endif
 5906.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5906.                    _substr(t$3143,1,13) = 'Sfc_SSiB.f90'
 5906.                    _substr(t$3144,1,6) = 'ENDWB'
 5906.                   t$3145 = 1 + $I_L5901_154
 5906.                   call _bounds_error(  _substr(t$3143,1,13), 5906,  _substr(t$3144,1,6), 1, 1, t$910, t$3145, t$3142 )
 5906.                endif
 5906.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5906.                    _substr(t$3147,1,13) = 'Sfc_SSiB.f90'
 5906.                    _substr(t$3148,1,6) = 'TOTWB'
 5906.                   t$3149 = 1 + $I_L5901_154
 5906.                   call _bounds_error(  _substr(t$3147,1,13), 5906,  _substr(t$3148,1,6), 1, 1, t$910, t$3149, t$3146 )
 5906.                endif
 5906.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5906.                    _substr(t$3151,1,13) = 'Sfc_SSiB.f90'
 5906.                    _substr(t$3152,1,6) = 'ENDWB'
 5906.                   t$3153 = 1 + $I_L5901_154
 5906.                   call _bounds_error(  _substr(t$3151,1,13), 5906,  _substr(t$3152,1,6), 1, 1, t$910, t$3153, t$3150 )
 5906.                endif
 5906.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5906.                    _substr(t$3155,1,13) = 'Sfc_SSiB.f90'
 5906.                    _substr(t$3156,1,4) = 'W'
 5906.                   t$3157 = 1 + $I_L5901_154
 5906.                   call _bounds_error(  _substr(t$3155,1,13), 5906,  _substr(t$3156,1,2), 1, 1, t$910, t$3157, t$3154 )
 5906.                endif
 5906.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5906.                    _substr(t$3159,1,13) = 'Sfc_SSiB.f90'
 5906.                    _substr(t$3160,1,4) = 'W'
 5906.                   t$3161 = 1 + $I_L5901_154
 5906.                   call _bounds_error(  _substr(t$3159,1,13), 5906,  _substr(t$3160,1,2), 1, 1, t$910, t$3161, t$3158 )
 5906.                endif
 5907.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5907.                    _substr(t$3163,1,13) = 'Sfc_SSiB.f90'
 5907.                    _substr(t$3164,1,4) = 'W'
 5907.                   t$3165 = 1 + $I_L5901_154
 5907.                   call _bounds_error(  _substr(t$3163,1,13), 5907,  _substr(t$3164,1,2), 1, 1, t$910, t$3165, t$3162 )
 5907.                endif
 5907.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5907.                    _substr(t$3167,1,13) = 'Sfc_SSiB.f90'
 5907.                    _substr(t$3168,1,6) = 'CAPAC'
 5907.                   t$3169 = 1 + $I_L5901_154
 5907.                   call _bounds_error(  _substr(t$3167,1,13), 5907,  _substr(t$3168,1,6), 1, 1, t$910, t$3169, t$3166 )
 5907.                endif
 5907.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5907.                    _substr(t$3171,1,13) = 'Sfc_SSiB.f90'
 5907.                    _substr(t$3172,1,6) = 'CAPAC'
 5907.                   t$3173 = 1 + $I_L5901_154
 5907.                   call _bounds_error(  _substr(t$3171,1,13), 5907,  _substr(t$3172,1,6), 1, 1, t$910, t$3173, t$3170 )
 5907.                endif
 5907.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5907.                    _substr(t$3175,1,13) = 'Sfc_SSiB.f90'
 5907.                    _substr(t$3176,1,4) = 'PPL'
 5907.                   t$3177 = 1 + $I_L5901_154
 5907.                   call _bounds_error(  _substr(t$3175,1,13), 5907,  _substr(t$3176,1,4), 1, 1, t$910, t$3177, t$3174 )
 5907.                endif
 5907.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5907.                    _substr(t$3179,1,13) = 'Sfc_SSiB.f90'
 5907.                    _substr(t$3180,1,4) = 'PPC'
 5907.                   t$3181 = 1 + $I_L5901_154
 5907.                   call _bounds_error(  _substr(t$3179,1,13), 5907,  _substr(t$3180,1,4), 1, 1, t$910, t$3181, t$3178 )
 5907.                endif
 5907.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5907.                    _substr(t$3183,1,13) = 'Sfc_SSiB.f90'
 5907.                    _substr(t$3184,1,7) = 'ETMASS'
 5907.                   t$3185 = 1 + $I_L5901_154
 5907.                   call _bounds_error(  _substr(t$3183,1,13), 5907,  _substr(t$3184,1,7), 1, 1, t$910, t$3185, t$3182 )
 5907.                endif
 5908.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5908.                    _substr(t$3187,1,13) = 'Sfc_SSiB.f90'
 5908.                    _substr(t$3188,1,5) = 'ROFF'
 5908.                   t$3189 = 1 + $I_L5901_154
 5908.                   call _bounds_error(  _substr(t$3187,1,13), 5908,  _substr(t$3188,1,5), 1, 1, t$910, t$3189, t$3186 )
 5908.                endif
 5908.                if ( ( ntyp < zlt%dim_1%LB .or. ntyp > -1 + zlt%dim_1%LB + zlt%dim_1%EX ) /= .false. ) then
 5908.                    _substr(t$3191,1,13) = 'Sfc_SSiB.f90'
 5908.                    _substr(t$3192,1,4) = 'ZLT'
 5908.                   t$3193 = zlt%dim_1%LB
 5908.                   t$3194 = -1 + zlt%dim_1%LB + zlt%dim_1%EX
 5908.                   t$3195 = ntyp
 5908.                   call _bounds_error(  _substr(t$3191,1,13), 5908,  _substr(t$3192,1,4), 1, t$3193, t$3194, t$3195, t$3190 )
 5908.                endif
 5908.                if ( ( 12 < zlt%dim_2%LB .or. -13 + zlt%dim_2%LB + zlt%dim_2%EX < 0 ) /= .false. ) then
 5908.                    _substr(t$3197,1,13) = 'Sfc_SSiB.f90'
 5908.                    _substr(t$3198,1,4) = 'ZLT'
 5908.                   t$3199 = zlt%dim_2%LB
 5908.                   t$3200 = -1 + zlt%dim_2%LB + zlt%dim_2%EX
 5908.                   call _bounds_error(  _substr(t$3197,1,13), 5908,  _substr(t$3198,1,4), 2, t$3199, t$3200, 12, t$3196 )
 5908.                endif
 5908.                if ( ( 1 < zlt%dim_3%LB .or. 0 >= -1 + zlt%dim_3%LB + zlt%dim_3%EX ) /= .false. ) then
 5908.                    _substr(t$3202,1,13) = 'Sfc_SSiB.f90'
 5908.                    _substr(t$3203,1,4) = 'ZLT'
 5908.                   t$3204 = zlt%dim_3%LB
 5908.                   t$3205 = -1 + zlt%dim_3%LB + zlt%dim_3%EX
 5908.                   call _bounds_error(  _substr(t$3202,1,13), 5908,  _substr(t$3203,1,4), 3, t$3204, t$3205, 1, t$3201 )
 5908.                endif
 5908.                if ( ( ntyp < zlt%dim_1%LB .or. ntyp > -1 + zlt%dim_1%LB + zlt%dim_1%EX ) /= .false. ) then
 5908.                    _substr(t$3207,1,13) = 'Sfc_SSiB.f90'
 5908.                    _substr(t$3208,1,4) = 'ZLT'
 5908.                   t$3209 = zlt%dim_1%LB
 5908.                   t$3210 = -1 + zlt%dim_1%LB + zlt%dim_1%EX
 5908.                   t$3211 = ntyp
 5908.                   call _bounds_error(  _substr(t$3207,1,13), 5908,  _substr(t$3208,1,4), 1, t$3209, t$3210, t$3211, t$3206 )
 5908.                endif
 5908.                if ( ( 12 < zlt%dim_2%LB .or. -13 + zlt%dim_2%LB + zlt%dim_2%EX < 0 ) /= .false. ) then
 5908.                    _substr(t$3213,1,13) = 'Sfc_SSiB.f90'
 5908.                    _substr(t$3214,1,4) = 'ZLT'
 5908.                   t$3215 = zlt%dim_2%LB
 5908.                   t$3216 = -1 + zlt%dim_2%LB + zlt%dim_2%EX
 5908.                   call _bounds_error(  _substr(t$3213,1,13), 5908,  _substr(t$3214,1,4), 2, t$3215, t$3216, 12, t$3212 )
 5908.                endif
 5908.                if ( ( 2 < zlt%dim_3%LB .or. -3 + zlt%dim_3%LB + zlt%dim_3%EX < 0 ) /= .false. ) then
 5908.                    _substr(t$3218,1,13) = 'Sfc_SSiB.f90'
 5908.                    _substr(t$3219,1,4) = 'ZLT'
 5908.                   t$3220 = zlt%dim_3%LB
 5908.                   t$3221 = -1 + zlt%dim_3%LB + zlt%dim_3%EX
 5908.                   call _bounds_error(  _substr(t$3218,1,13), 5908,  _substr(t$3219,1,4), 3, t$3220, t$3221, 2, t$3217 )
 5908.                endif
 5909.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5909.                    _substr(t$3223,1,13) = 'Sfc_SSiB.f90'
 5909.                    _substr(t$3224,1,4) = 'TC'
 5909.                   t$3225 = 1 + $I_L5901_154
 5909.                   call _bounds_error(  _substr(t$3223,1,13), 5909,  _substr(t$3224,1,3), 1, 1, t$910, t$3225, t$3222 )
 5909.                endif
 5909.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5909.                    _substr(t$3227,1,13) = 'Sfc_SSiB.f90'
 5909.                    _substr(t$3228,1,4) = 'TG'
 5909.                   t$3229 = 1 + $I_L5901_154
 5909.                   call _bounds_error(  _substr(t$3227,1,13), 5909,  _substr(t$3228,1,3), 1, 1, t$910, t$3229, t$3226 )
 5909.                endif
 5909.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5909.                    _substr(t$3231,1,13) = 'Sfc_SSiB.f90'
 5909.                    _substr(t$3232,1,4) = 'TD'
 5909.                   t$3233 = 1 + $I_L5901_154
 5909.                   call _bounds_error(  _substr(t$3231,1,13), 5909,  _substr(t$3232,1,3), 1, 1, t$910, t$3233, t$3230 )
 5909.                endif
 5909.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5909.                    _substr(t$3235,1,13) = 'Sfc_SSiB.f90'
 5909.                    _substr(t$3236,1,4) = 'TM'
 5909.                   t$3237 = 1 + $I_L5901_154
 5909.                   call _bounds_error(  _substr(t$3235,1,13), 5909,  _substr(t$3236,1,3), 1, 1, t$910, t$3237, t$3234 )
 5909.                endif
 5905.                $Unit_temp_O0 = nfprt
 5905.                $IOitem_O2 = totwb(1 + $I_L5901_154) + -endwb(1 + $I_L5901_154)
 5905.                $IOitem_O3 = (zlt%base_addr)(ntyp, 12, 1, 0)
 5905.                $IOitem_O4 = (zlt%base_addr)(ntyp, 12, 2, 0)
 5905.                $_IOitem_P0(0) = latitu
 5905.                $_IOitem_P0(1) = ( 1 + $I_L5901_154 )
 5905.                $_IOitem_P0(2) = ntyp
 5905.                $_IOitem_P0(3) = ndt
 5905.                $_IOitem_P1(0) = totwb(1 + $I_L5901_154)
 5905.                $_IOitem_P1(1) = endwb(1 + $I_L5901_154)
 5905.                $_IOitem_P2(0) = w(1 + $I_L5901_154, 1)
 5905.                $_IOitem_P2(1) = w(1 + $I_L5901_154, 2)
 5905.                $_IOitem_P2(2) = w(1 + $I_L5901_154, 3)
 5905.                $_IOitem_P2(3) = capac(1 + $I_L5901_154, 1)
 5905.                $_IOitem_P2(4) = capac(1 + $I_L5901_154, 2)
 5905.                $_IOitem_P2(5) = ppl(1 + $I_L5901_154)
 5905.                $_IOitem_P2(6) = ppc(1 + $I_L5901_154)
 5905.                $_IOitem_P2(7) = etmass(1 + $I_L5901_154)
 5905.                $_IOitem_P2(8) = roff(1 + $I_L5901_154)
 5905.                $_IOitem_P2(9) = $IOitem_O3
 5905.                $_IOitem_P2(10) = $IOitem_O4
 5905.                $_IOitem_P2(11) = tc(1 + $I_L5901_154)
 5905.                $_IOitem_P2(12) = tg(1 + $I_L5901_154)
 5905.                $_IOitem_P2(13) = td(1 + $I_L5901_154)
 5905.                $_IOitem_P2(14) = tm(1 + $I_L5901_154)
 5905.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$1075,  _substr(t$1074,1,70), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P0(:( 0, 3, 1 )), 0x2000200000000L ), _iotype( (&)$_IOitem_P1(:( 0, 1, 1 )), 0x804060300000000L ), _iotype( $IOitem_O2, 0x4000300000000L ), _iotype( (&)$_IOitem_P2(:( 0, 14, 1 )), 0x804060300000000L ) ) )
 5905.             endif
 5911.             if ( abs( cbal(1 + $I_L5901_154) + -gbal(1 + $I_L5901_154) ) > 5.0 ) then
 5913.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5913.                    _substr(t$3239,1,13) = 'Sfc_SSiB.f90'
 5913.                    _substr(t$3240,1,5) = 'RADT'
 5913.                   t$3141 = 1 + $I_L5901_154
 5913.                   call _bounds_error(  _substr(t$3239,1,13), 5913,  _substr(t$3240,1,5), 1, 1, t$910, t$3141, t$3238 )
 5913.                endif
 5913.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5913.                    _substr(t$3242,1,13) = 'Sfc_SSiB.f90'
 5913.                    _substr(t$3243,1,5) = 'RADT'
 5913.                   t$3145 = 1 + $I_L5901_154
 5913.                   call _bounds_error(  _substr(t$3242,1,13), 5913,  _substr(t$3243,1,5), 1, 1, t$910, t$3145, t$3241 )
 5913.                endif
 5913.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5913.                    _substr(t$3245,1,13) = 'Sfc_SSiB.f90'
 5913.                    _substr(t$3246,1,4) = 'CHF'
 5913.                   t$3149 = 1 + $I_L5901_154
 5913.                   call _bounds_error(  _substr(t$3245,1,13), 5913,  _substr(t$3246,1,4), 1, 1, t$910, t$3149, t$3244 )
 5913.                endif
 5913.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5913.                    _substr(t$3248,1,13) = 'Sfc_SSiB.f90'
 5913.                    _substr(t$3249,1,4) = 'SHF'
 5913.                   t$3153 = 1 + $I_L5901_154
 5913.                   call _bounds_error(  _substr(t$3248,1,13), 5913,  _substr(t$3249,1,4), 1, 1, t$910, t$3153, t$3247 )
 5913.                endif
 5913.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5913.                    _substr(t$3251,1,13) = 'Sfc_SSiB.f90'
 5913.                    _substr(t$3252,1,6) = 'HFLUX'
 5913.                   t$3157 = 1 + $I_L5901_154
 5913.                   call _bounds_error(  _substr(t$3251,1,13), 5913,  _substr(t$3252,1,6), 1, 1, t$910, t$3157, t$3250 )
 5913.                endif
 5914.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5914.                    _substr(t$3254,1,13) = 'Sfc_SSiB.f90'
 5914.                    _substr(t$3255,1,4) = 'ECT'
 5914.                   t$3161 = 1 + $I_L5901_154
 5914.                   call _bounds_error(  _substr(t$3254,1,13), 5914,  _substr(t$3255,1,4), 1, 1, t$910, t$3161, t$3253 )
 5914.                endif
 5914.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5914.                    _substr(t$3257,1,13) = 'Sfc_SSiB.f90'
 5914.                    _substr(t$3258,1,4) = 'ECI'
 5914.                   t$3165 = 1 + $I_L5901_154
 5914.                   call _bounds_error(  _substr(t$3257,1,13), 5914,  _substr(t$3258,1,4), 1, 1, t$910, t$3165, t$3256 )
 5914.                endif
 5914.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5914.                    _substr(t$3260,1,13) = 'Sfc_SSiB.f90'
 5914.                    _substr(t$3261,1,4) = 'EGT'
 5914.                   t$3169 = 1 + $I_L5901_154
 5914.                   call _bounds_error(  _substr(t$3260,1,13), 5914,  _substr(t$3261,1,4), 1, 1, t$910, t$3169, t$3259 )
 5914.                endif
 5914.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5914.                    _substr(t$3263,1,13) = 'Sfc_SSiB.f90'
 5914.                    _substr(t$3264,1,4) = 'EGI'
 5914.                   t$3173 = 1 + $I_L5901_154
 5914.                   call _bounds_error(  _substr(t$3263,1,13), 5914,  _substr(t$3264,1,4), 1, 1, t$910, t$3173, t$3262 )
 5914.                endif
 5914.                if ( ( ( 1 + $I_L5901_154 ) <= 0 .or. ( 1 + $I_L5901_154 ) > t$910 ) /= .false. ) then
 5914.                    _substr(t$3266,1,13) = 'Sfc_SSiB.f90'
 5914.                    _substr(t$3267,1,4) = 'EGS'
 5914.                   t$3177 = 1 + $I_L5901_154
 5914.                   call _bounds_error(  _substr(t$3266,1,13), 5914,  _substr(t$3267,1,4), 1, 1, t$910, t$3177, t$3265 )
 5914.                endif
 5912.                $Unit_temp_O5 = nfprt
 5912.                $_IOitem_P3(0) = latitu
 5912.                $_IOitem_P3(1) = ( 1 + $I_L5901_154 )
 5912.                $_IOitem_P3(2) = ntyp
 5912.                $_IOitem_P3(3) = ndt
 5912.                $_IOitem_P4(0) = radt(1 + $I_L5901_154, 1)
 5912.                $_IOitem_P4(1) = radt(1 + $I_L5901_154, 2)
 5912.                $_IOitem_P4(2) = chf(1 + $I_L5901_154)
 5912.                $_IOitem_P4(3) = shf(1 + $I_L5901_154)
 5912.                $_IOitem_P4(4) = hflux(1 + $I_L5901_154)
 5912.                $_IOitem_P4(5) = ect(1 + $I_L5901_154)
 5912.                $_IOitem_P4(6) = eci(1 + $I_L5901_154)
 5912.                $_IOitem_P4(7) = egt(1 + $I_L5901_154)
 5912.                $_IOitem_P4(8) = egi(1 + $I_L5901_154)
 5912.                $_IOitem_P4(9) = egs(1 + $I_L5901_154)
 5912.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, t$1077,  _substr(t$1076,1,42), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P3(:( 0, 3, 1 )), 0x2000200000000L ), _iotype( (&)$_IOitem_P4(:( 0, 9, 1 )), 0x804060300000000L ) ) )
 5912.             endif
 5915.             $I_L5901_154 = 1 + $I_L5901_154
 5911.             if ( $I_L5901_154 >= nmax ) exit
 5911.          enddo
 5911.       endif
 5265.       _free( t$1975 )
 5920.       return
 5920.       end
 5920.       
 5928.       
 5928.       subroutine vntlt1( rmi, rhi, gu, gv, gt, tsurf, tsea, ncols, sigki, cuni, cui, cu, ctni, cti, ct, speedm, tha, thm, dzm, thvgm, rib, z0, zorl, ustar, sinclt, mskant )
 5928.       t$1078 = ncols
 5981.       t$2055 = _zla( 0, ncols )
 6019.       t$2058 = 8 * _zla( 0, ncols )
 5928.       t$2056 = int( _alloc( 8 * _zla( 0, ncols ) ), 8 )
 6019.       t$2057 = t$2056
 6024.       if ( ncols > 0 ) then
 6024.          $I_L6024_12 = 0
 6024. !dir$ ivdep
 6024.          do
 6025.             if ( mskant(1 + $I_L6024_12) == 1 ) then
 6026.                z0(1 + $I_L6024_12) = 1.0e-3
 6027.                if ( tsea(1 + $I_L6024_12) >= 0.0 ) then
 6026.                   goto 10
 6027.                else if ( abs( tsea(1 + $I_L6024_12) ) >= 271.17000000000002 ) then
 6028.                   z0(1 + $I_L6024_12) = 1.0e-2 * zorl(1 + $I_L6024_12)
 6028.                else
 6028.    10             continue
 6029.                   if ( tsea(1 + $I_L6024_12) < 0.0 ) then
 6029.                      if ( abs( tsea(1 + $I_L6024_12) ) < 271.17000000000002 ) then
 6030.                         z0(1 + $I_L6024_12) = 1.0e-3
 6030.                      endif
 6030.                   endif
 6030.                endif
 6032.                sincli(1 + $I_L6024_12) = 1.0/sinclt(1 + $I_L6024_12)
 6032.             endif
 6034.             $I_L6024_12 = 1 + $I_L6024_12
 6033.             if ( $I_L6024_12 >= ncols ) exit
 6033.          enddo
 6047.          $SC_sigki_I0 = sigki(1)
 6036.          $I_L6036_14 = 0
 6036. !dir$ ivdep
 6036.          do
 6037.             if ( mskant(1 + $I_L6036_14) == 1 ) then
 6038.                if ( tsea(1 + $I_L6036_14) <= 0.0 ) then
 6039.                   $speedm_WR0_R0 = sincli(1 + $I_L6036_14) * _sqrt( gv(1 + $I_L6036_14) * gv(1 + $I_L6036_14) + gu(1 + $I_L6036_14) * gu(1 + $I_L6036_14) )
 6041.                   $dzm_WR0_R1 = rbyg * gt(1 + $I_L6036_14)
 6041.                   dzm(1 + $I_L6036_14) = $dzm_WR0_R1
 6042.                   $cuni_WR0_R2 = -1.5629999999999999 + 2.1895249999999997 * log( ( $dzm_WR0_R1 * 1.0/z0(1 + $I_L6036_14) ) )
 6042.                   cuni(1 + $I_L6036_14) = $cuni_WR0_R2
 6043.                   ctni(1 + $I_L6036_14) = $cuni_WR0_R2
 6047.                   $thm_WR0_R4 = $SC_sigki_I0 * gt(1 + $I_L6036_14)
 6047.                   thm(1 + $I_L6036_14) = $thm_WR0_R4
 6048.                   $tha_WR0_R5 = tsurf(1 + $I_L6036_14)
 6048.                   tha(1 + $I_L6036_14) = $tha_WR0_R5
 6049.                   thvgm(1 + $I_L6036_14) = ( $tha_WR0_R5 + -$thm_WR0_R4 )
 6040.                   $speedm_WR0_R0 = max( 2.0, $speedm_WR0_R0 )
 6040.                   speedm(1 + $I_L6036_14) = $speedm_WR0_R0
 6052.                   $rib_WR0_R7 = min( 1.25, max( -1.25, ( -( 9.8000000000000007 * $dzm_WR0_R1 * 1.0/( $speedm_WR0_R0 * $speedm_WR0_R0 * $thm_WR0_R4 ) * ( $tha_WR0_R5 + -$thm_WR0_R4 ) ) ) ) )
 6052.                   rib(1 + $I_L6036_14) = ( min( 1.25, max( -1.25, ( -( 9.8000000000000007 * $dzm_WR0_R1 * 1.0/( $speedm_WR0_R0 * $speedm_WR0_R0 * $thm_WR0_R4 ) * ( $tha_WR0_R5 + -$thm_WR0_R4 ) ) ) ) ) )
 6053.                   if ( ( min( 1.25, max( -1.25, ( -( 9.8000000000000007 * $dzm_WR0_R1 * 1.0/( $speedm_WR0_R0 * $speedm_WR0_R0 * $thm_WR0_R4 ) * ( $tha_WR0_R5 + -$thm_WR0_R4 ) ) ) ) ) ) < 0.0 ) then
 6054.                      $f_S2 = log( 1.0 + -1.2743 * $rib_WR0_R7 )
 6055.                      $cui_WR0_R8 = $cuni_WR0_R2 * _expn( 1.2270000000000001 + -_sqrt( 1.5055290000000001 + 1.2642 * $f_S2 ) )
 6055.                      cui(1 + $I_L6036_14) = $cui_WR0_R8
 6056.                      $g_S3 = log( 1.0 + -3.4805000000000001 * $rib_WR0_R7 )
 6057.                      cti(1 + $I_L6036_14) = $cuni_WR0_R2 * _expn( 1.3462000000000001 + -_sqrt( 1.8122544400000002 + 1.8380000000000001 * $g_S3 ) )
 6057.                   else
 6059.                      $f_S4 = log( 1.0 + 10.815 * $rib_WR0_R7 )
 6060.                      $cui_WR0_R8 = $cuni_WR0_R2 * _expn( -1.8899999999999999 + _sqrt( 3.5720999999999998 + 5.0518999999999998 * $f_S4 ) )
 6060.                      cui(1 + $I_L6036_14) = $cui_WR0_R8
 6061.                      cti(1 + $I_L6036_14) = $cui_WR0_R8
 6061.                   endif
 6063.                   cu(1 + $I_L6036_14) = 1.0/$cui_WR0_R8
 6064.                   $ct_WR0_R10 = 1.0/cti(1 + $I_L6036_14)
 6064.                   ct(1 + $I_L6036_14) = $ct_WR0_R10
 6068.                   ustar(1 + $I_L6036_14) = ( $speedm_WR0_R0 * 1.0/$cui_WR0_R8 )
 6069.                   rmi(1 + $I_L6036_14) = 1.0/$cui_WR0_R8 * ( $speedm_WR0_R0 * 1.0/$cui_WR0_R8 )
 6070.                   rhi(1 + $I_L6036_14) = $ct_WR0_R10 * ( $speedm_WR0_R0 * 1.0/$cui_WR0_R8 )
 6070.                endif
 6070.             endif
 6073.             $I_L6036_14 = 1 + $I_L6036_14
 6072.             if ( $I_L6036_14 >= ncols ) exit
 6072.          enddo
 6072.       endif
 5928.       _free( t$2056 )
 6074.       return
 6074.       end
 6074.       
 6081.       
 6081.       subroutine seasfc( tmtx, umtx, qmtx, kpbl, kqpbl, slrad, tsurf, qsurf, gu, gv, gt, gq, gps, tsea, dtc3x, sinclt, sigki, delsig, sens, evap, umom, vmom, rmi, rhi, cond, stor, zorl, ncols, speedm, ustarm, z0, rho, qsfc, tsfc, mskant )
 6081.       t$1103 = ncols
 6081.       t$1104 = kpbl
 6160.       t$2059 = _zla( 0, ncols )
 6081.       t$2060 = _zla( 0, ncols )
 6160.       t$2061 = _zla( 0, kpbl )
 6081.       t$2062 = _zla( 0, ncols ) * _zla( 0, kpbl )
 6081.       t$2063 = 3 * _zla( 0, ncols ) * _zla( 0, kpbl )
 6081.       t$2064 = 4 * _zla( 0, ncols ) * _zla( 0, kpbl )
 6081.       t$1108 = kqpbl
 6162.       t$2065 = _zla( 0, kqpbl )
 6081.       t$2066 = _zla( 0, ncols ) * _zla( 0, kqpbl )
 6081.       t$2067 = 3 * _zla( 0, ncols ) * _zla( 0, kqpbl )
 6193.       t$2070 = 8 * _zla( 0, ncols )
 6194.       t$2071 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 6194.       t$2073 = t$2071 + 8 * _zla( 0, ncols )
 6195.       t$2074 = 8 * ( 7 + t$2071 + 8 * _zla( 0, ncols ) ) / 8
 6195.       t$2076 = t$2074 + 8 * _zla( 0, ncols )
 6216.       t$2077 = 8 * ( 7 + t$2074 + 8 * _zla( 0, ncols ) ) / 8
 6216.       t$2079 = t$2077 + 8 * _zla( 0, ncols )
 6217.       t$2080 = 8 * ( 7 + t$2077 + 8 * _zla( 0, ncols ) ) / 8
 6217.       t$2082 = t$2080 + 8 * _zla( 0, ncols )
 6218.       t$2083 = 8 * ( 7 + t$2080 + 8 * _zla( 0, ncols ) ) / 8
 6218.       t$2085 = t$2083 + 8 * _zla( 0, ncols )
 6220.       t$2086 = 8 * ( 7 + t$2083 + 8 * _zla( 0, ncols ) ) / 8
 6220.       t$2088 = t$2086 + 8 * _zla( 0, ncols )
 6221.       t$2089 = 8 * ( 7 + t$2086 + 8 * _zla( 0, ncols ) ) / 8
 6221.       t$2091 = t$2089 + 8 * _zla( 0, ncols )
 6223.       t$2092 = 8 * ( 7 + t$2089 + 8 * _zla( 0, ncols ) ) / 8
 6223.       t$2094 = t$2092 + 8 * _zla( 0, ncols )
 6224.       t$2095 = 8 * ( 7 + t$2092 + 8 * _zla( 0, ncols ) ) / 8
 6224.       t$2097 = t$2095 + 8 * _zla( 0, ncols )
 6219.       t$2098 = 8 * ( 7 + t$2095 + 8 * _zla( 0, ncols ) ) / 8
 6219.       t$2100 = t$2098 + 8 * _zla( 0, ncols )
 6222.       t$2101 = 8 * ( 7 + t$2098 + 8 * _zla( 0, ncols ) ) / 8
 6222.       t$2103 = t$2101 + 8 * _zla( 0, ncols )
 6225.       t$2104 = 8 * ( 7 + t$2101 + 8 * _zla( 0, ncols ) ) / 8
 6225.       t$2106 = t$2104 + 8 * _zla( 0, ncols )
 6201.       t$2107 = 8 * ( 7 + t$2104 + 8 * _zla( 0, ncols ) ) / 8
 6201.       t$2109 = t$2107 + 8 * _zla( 0, ncols )
 6200.       t$2110 = 8 * ( 7 + t$2107 + 8 * _zla( 0, ncols ) ) / 8
 6200.       t$2112 = t$2110 + 8 * _zla( 0, ncols )
 6199.       t$2113 = 8 * ( 7 + t$2110 + 8 * _zla( 0, ncols ) ) / 8
 6199.       t$2115 = t$2113 + 8 * _zla( 0, ncols )
 6198.       t$2116 = 8 * ( 7 + t$2113 + 8 * _zla( 0, ncols ) ) / 8
 6198.       t$2118 = t$2116 + 8 * _zla( 0, ncols )
 6197.       t$2119 = 8 * ( 7 + t$2116 + 8 * _zla( 0, ncols ) ) / 8
 6197.       t$2121 = t$2119 + 8 * _zla( 0, ncols )
 6196.       t$2122 = 8 * ( 7 + t$2119 + 8 * _zla( 0, ncols ) ) / 8
 6196.       t$2124 = t$2122 + 8 * _zla( 0, ncols )
 6215.       t$2125 = 8 * ( 7 + t$2122 + 8 * _zla( 0, ncols ) ) / 8
 6215.       t$2127 = t$2125 + 8 * _zla( 0, ncols )
 6206.       t$2128 = 8 * ( 7 + t$2125 + 8 * _zla( 0, ncols ) ) / 8
 6206.       t$2130 = t$2128 + 8 * _zla( 0, ncols )
 6211.       t$2131 = 8 * ( 7 + t$2128 + 8 * _zla( 0, ncols ) ) / 8
 6211.       t$2133 = t$2131 + 8 * _zla( 0, ncols )
 6210.       t$2134 = 8 * ( 7 + t$2131 + 8 * _zla( 0, ncols ) ) / 8
 6210.       t$2136 = t$2134 + 8 * _zla( 0, ncols )
 6213.       t$2137 = 8 * ( 7 + t$2134 + 8 * _zla( 0, ncols ) ) / 8
 6213.       t$2139 = t$2137 + 8 * _zla( 0, ncols )
 6208.       t$2140 = 8 * ( 7 + t$2137 + 8 * _zla( 0, ncols ) ) / 8
 6208.       t$2142 = t$2140 + 8 * _zla( 0, ncols )
 6185.       t$2143 = 8 * ( 7 + t$2140 + 8 * _zla( 0, ncols ) ) / 8
 6185.       t$2145 = t$2143 + 8 * _zla( 0, ncols )
 6204.       t$2146 = 8 * ( 7 + t$2143 + 8 * _zla( 0, ncols ) ) / 8
 6204.       t$2148 = t$2146 + 8 * _zla( 0, ncols )
 6205.       t$2149 = 8 * ( 7 + t$2146 + 8 * _zla( 0, ncols ) ) / 8
 6205.       t$2151 = t$2149 + 8 * _zla( 0, ncols )
 6207.       t$2152 = 8 * ( 7 + t$2149 + 8 * _zla( 0, ncols ) ) / 8
 6207.       t$2154 = t$2152 + 8 * _zla( 0, ncols )
 6212.       t$2155 = 8 * ( 7 + t$2152 + 8 * _zla( 0, ncols ) ) / 8
 6212.       t$2157 = t$2155 + 8 * _zla( 0, ncols )
 6214.       t$2158 = 8 * ( 7 + t$2155 + 8 * _zla( 0, ncols ) ) / 8
 6214.       t$2160 = t$2158 + 8 * _zla( 0, ncols )
 6202.       t$2161 = 8 * ( 7 + t$2158 + 8 * _zla( 0, ncols ) ) / 8
 6202.       t$2163 = t$2161 + 8 * _zla( 0, ncols )
 6209.       t$2164 = 8 * ( 7 + t$2161 + 8 * _zla( 0, ncols ) ) / 8
 6209.       t$2166 = t$2164 + 8 * _zla( 0, ncols )
 6203.       t$2167 = 8 * ( 7 + t$2164 + 8 * _zla( 0, ncols ) ) / 8
 6203.       t$2169 = t$2167 + 8 * _zla( 0, ncols )
 6081.       t$2068 = int( _alloc( t$2167 + 8 * _zla( 0, ncols ) ), 8 )
 6193.       t$2069 = t$2068
 6194.       t$2072 = t$2071 + t$2068
 6195.       t$2075 = t$2074 + t$2068
 6216.       t$2078 = t$2077 + t$2068
 6217.       t$2081 = t$2080 + t$2068
 6218.       t$2084 = t$2083 + t$2068
 6220.       t$2087 = t$2086 + t$2068
 6221.       t$2090 = t$2089 + t$2068
 6223.       t$2093 = t$2092 + t$2068
 6224.       t$2096 = t$2095 + t$2068
 6219.       t$2099 = t$2098 + t$2068
 6222.       t$2102 = t$2101 + t$2068
 6225.       t$2105 = t$2104 + t$2068
 6201.       t$2108 = t$2107 + t$2068
 6200.       t$2111 = t$2110 + t$2068
 6199.       t$2114 = t$2113 + t$2068
 6198.       t$2117 = t$2116 + t$2068
 6197.       t$2120 = t$2119 + t$2068
 6196.       t$2123 = t$2122 + t$2068
 6215.       t$2126 = t$2125 + t$2068
 6206.       t$2129 = t$2128 + t$2068
 6211.       t$2132 = t$2131 + t$2068
 6210.       t$2135 = t$2134 + t$2068
 6213.       t$2138 = t$2137 + t$2068
 6208.       t$2141 = t$2140 + t$2068
 6185.       t$2144 = t$2143 + t$2068
 6204.       t$2147 = t$2146 + t$2068
 6205.       t$2150 = t$2149 + t$2068
 6207.       t$2153 = t$2152 + t$2068
 6212.       t$2156 = t$2155 + t$2068
 6214.       t$2159 = t$2158 + t$2068
 6202.       t$2162 = t$2161 + t$2068
 6209.       t$2165 = t$2164 + t$2068
 6203.       t$2168 = t$2167 + t$2068
 6253.       $gbycp_S1 = ( 9.7551264184750155e-5 * 1.0/( delsig(1) * sigki(1) ) )
 6254.       $gbyhl_S2 = ( 3.8888888888888891e-8 * 1.0/delsig(1) )
 6255.       $gb100_S19 = ( 9.8000000000000004e-2 * 1.0/delsig(1) )
 6258.       $hscap_S12 = ( 5776680.0 * 1.0/dtc3x )
 6259.       $sl1kap_S6 = sigki(1)
 6261.       $dti_S13 = 1.0/dtc3x
 6263.       if ( ncols > 0 ) then
 6263.          $I_L6263_48 = 0
 6263. !dir$ ivdep
 6263.          do
 6264.             if ( mskant(1 + $I_L6263_48) == 1 ) then
 6265.                rnet(1 + $I_L6263_48) = -697.58000000000004 * slrad(1 + $I_L6263_48)
 6266.                rho(1 + $I_L6263_48) = ( gps(1 + $I_L6263_48) * 1.0/( 2.8705000000000003 * gt(1 + $I_L6263_48) ) )
 6267.                ah(1 + $I_L6263_48) = ( $gbycp_S1 * 1.0/gps(1 + $I_L6263_48) )
 6268.                al(1 + $I_L6263_48) = ( $gbyhl_S2 * 1.0/gps(1 + $I_L6263_48) )
 6269.                dqg0(1 + $I_L6263_48) = ( 6.22e-1 * 1.0/( gps(1 + $I_L6263_48) * tsurf(1 + $I_L6263_48) * tsurf(1 + $I_L6263_48) ) * _expn( 30.253530000000001 + -( 5418.0 * 1.0/tsurf(1 + $I_L6263_48) ) ) )
 6271.                gtsav(1 + $I_L6263_48) = gt(1 + $I_L6263_48)
 6272.                gqsav(1 + $I_L6263_48) = gq(1 + $I_L6263_48)
 6273.                tssav(1 + $I_L6263_48) = tsurf(1 + $I_L6263_48)
 6274.                tmsav(1 + $I_L6263_48) = tmtx(1 + $I_L6263_48, 1, 3)
 6275.                qmsav(1 + $I_L6263_48) = qmtx(1 + $I_L6263_48, 1, 3)
 6275.             endif
 6277.             $I_L6263_48 = 1 + $I_L6263_48
 6276.             if ( $I_L6263_48 >= ncols ) exit
 6276.          enddo
 6276.       endif
 6279.       $F_A33 = ncols
 6279.       if ( ncols > 0 ) then
 6279.          $I_L6279_64 = 0
 6279. !dir$ ivdep
 6279.          do
 6279.             c0(1 + $I_L6279_64) = 0.0
 6279.             $I_L6279_64 = 1 + $I_L6279_64
 6279.             if ( $I_L6279_64 >= $F_A33 ) exit
 6279.          enddo
 6279.       endif
 6280.       $F_A34 = ncols
 6280.       if ( ncols > 0 ) then
 6280.          $I_L6280_66 = 0
 6280. !dir$ ivdep
 6280.          do
 6280.             cond(1 + $I_L6280_66) = 0.0
 6280.             $I_L6280_66 = 1 + $I_L6280_66
 6280.             if ( $I_L6280_66 >= $F_A34 ) exit
 6280.          enddo
 6280.       endif
 6281.       $F_A35 = ncols
 6281.       if ( ncols > 0 ) then
 6281.          $I_L6281_68 = 0
 6281. !dir$ ivdep
 6281.          do
 6281.             stor(1 + $I_L6281_68) = 0.0
 6281.             $I_L6281_68 = 1 + $I_L6281_68
 6281.             if ( $I_L6281_68 >= $F_A35 ) exit
 6281.          enddo
 6281.       endif
 6283.       $ncount_S3 = 0
 6283.       do
 6286.          t$1078 = ncols
 6286.          t$2055 = max( 0, ncols )
 6286.          t$2058 = 8 * max( 0, ncols )
 6285.          $ncount_S3 = 1 + $ncount_S3
 6286.          t$2056 = int( _alloc( 8 * max( 0, ncols ) ), 8 )
 6286.          t$2057 = t$2056
 6286.          if ( ncols > 0 ) then
 6286.             $I_L6286_50 = 0
 6286. !dir$ ivdep
 6286.             do
 6286.                if ( mskant(1 + $I_L6286_50) == 1 ) then
 6286.                   z0(1 + $I_L6286_50) = 1.0e-3
 6286.                   if ( tsea(1 + $I_L6286_50) >= 0.0 ) then
 6286.                      goto 10
 6286.                   else if ( abs( tsea(1 + $I_L6286_50) ) >= 271.17000000000002 ) then
 6286.                      z0(1 + $I_L6286_50) = 1.0e-2 * zorl(1 + $I_L6286_50)
 6286.                   else
 6286.    10                continue
 6286.                      if ( tsea(1 + $I_L6286_50) < 0.0 ) then
 6286.                         if ( abs( tsea(1 + $I_L6286_50) ) < 271.17000000000002 ) then
 6286.                            z0(1 + $I_L6286_50) = 1.0e-3
 6286.                         endif
 6286.                      endif
 6286.                   endif
 6286.                   sincli(1 + $I_L6286_50) = 1.0/sinclt(1 + $I_L6286_50)
 6286.                endif
 6286.                $I_L6286_50 = 1 + $I_L6286_50
 6286.                if ( $I_L6286_50 >= ncols ) exit
 6286.             enddo
 6286.             $I_L6286_52 = 0
 6286. !dir$ ivdep
 6286.             do
 6286.                if ( mskant(1 + $I_L6286_52) == 1 ) then
 6286.                   if ( tsea(1 + $I_L6286_52) <= 0.0 ) then
 6286.                      $speedm_WR0_R0 = sincli(1 + $I_L6286_52) * _sqrt( gv(1 + $I_L6286_52) * gv(1 + $I_L6286_52) + gu(1 + $I_L6286_52) * gu(1 + $I_L6286_52) )
 6286.                      $dzm_WR0_R1 = rbyg * gt(1 + $I_L6286_52)
 6286.                      $cuni_WR0_R2 = -1.5629999999999999 + 2.1895249999999997 * log( ( $dzm_WR0_R1 * 1.0/z0(1 + $I_L6286_52) ) )
 6286.                      $thm_WR0_R4 = $sl1kap_S6 * gt(1 + $I_L6286_52)
 6286.                      $tha_WR0_R5 = tsurf(1 + $I_L6286_52)
 6286.                      $speedm_WR0_R0 = max( 2.0, $speedm_WR0_R0 )
 6286.                      speedm(1 + $I_L6286_52) = $speedm_WR0_R0
 6286.                      $rib_WR0_R7 = min( 1.25, max( -1.25, ( -( 9.8000000000000007 * $dzm_WR0_R1 * 1.0/( $speedm_WR0_R0 * $speedm_WR0_R0 * $thm_WR0_R4 ) * ( $tha_WR0_R5 + -$thm_WR0_R4 ) ) ) ) )
 6286.                      if ( ( min( 1.25, max( -1.25, ( -( 9.8000000000000007 * $dzm_WR0_R1 * 1.0/( $speedm_WR0_R0 * $speedm_WR0_R0 * $thm_WR0_R4 ) * ( $tha_WR0_R5 + -$thm_WR0_R4 ) ) ) ) ) ) < 0.0 ) then
 6286.                         $f_S7 = log( 1.0 + -1.2743 * $rib_WR0_R7 )
 6286.                         $cui_WR0_R8 = $cuni_WR0_R2 * _expn( 1.2270000000000001 + -_sqrt( 1.5055290000000001 + 1.2642 * $f_S7 ) )
 6286.                         $g_S8 = log( 1.0 + -3.4805000000000001 * $rib_WR0_R7 )
 6286.                         cti(1 + $I_L6286_52) = $cuni_WR0_R2 * _expn( 1.3462000000000001 + -_sqrt( 1.8122544400000002 + 1.8380000000000001 * $g_S8 ) )
 6286.                      else
 6286.                         $f_S9 = log( 1.0 + 10.815 * $rib_WR0_R7 )
 6286.                         $cui_WR0_R8 = $cuni_WR0_R2 * _expn( -1.8899999999999999 + _sqrt( 3.5720999999999998 + 5.0518999999999998 * $f_S9 ) )
 6286.                         cti(1 + $I_L6286_52) = $cui_WR0_R8
 6286.                      endif
 6286.                      $ct_WR0_R10 = 1.0/cti(1 + $I_L6286_52)
 6286.                      rmi(1 + $I_L6286_52) = 1.0/$cui_WR0_R8 * ( $speedm_WR0_R0 * 1.0/$cui_WR0_R8 )
 6286.                      rhi(1 + $I_L6286_52) = $ct_WR0_R10 * ( $speedm_WR0_R0 * 1.0/$cui_WR0_R8 )
 6286.                   endif
 6286.                endif
 6286.                $I_L6286_52 = 1 + $I_L6286_52
 6286.                if ( $I_L6286_52 >= ncols ) exit
 6286.             enddo
 6286.          endif
 6286.          _free( t$2056 )
 6290.          if ( ncols > 0 ) then
 6290.             $I_L6290_54 = 0
 6290. !dir$ ivdep
 6290.             do
 6291.                if ( mskant(1 + $I_L6290_54) == 1 ) then
 6292.                   gt(1 + $I_L6290_54) = gtsav(1 + $I_L6290_54)
 6293.                   gq(1 + $I_L6290_54) = gqsav(1 + $I_L6290_54)
 6294.                   tsurf(1 + $I_L6290_54) = tssav(1 + $I_L6290_54)
 6295.                   tmtx(1 + $I_L6290_54, 1, 3) = tmsav(1 + $I_L6290_54)
 6296.                   qmtx(1 + $I_L6290_54, 1, 3) = qmsav(1 + $I_L6290_54)
 6296.                endif
 6298.                $I_L6290_54 = 1 + $I_L6290_54
 6297.                if ( $I_L6290_54 >= ncols ) exit
 6297.             enddo
 6299.             $I_L6299_56 = 0
 6299. !dir$ ivdep
 6299.             do
 6300.                if ( mskant(1 + $I_L6299_56) == 1 ) then
 6302.                   if ( tsea(1 + $I_L6299_56) >= 0.0 ) then
 6302.                      goto 20
 6302.                   else if ( abs( tsea(1 + $I_L6299_56) ) < 271.17000000000002 ) then
 6303.                      $b00_WR0_R12 = 1.0149999999999999 + $hscap_S12 + 2.2679999999999999e-7 * tsurf(1 + $I_L6299_56) * tsurf(1 + $I_L6299_56) * tsurf(1 + $I_L6299_56) + 2520000.0 * rhi(1 + $I_L6299_56) * dqg0(1 + $I_L6299_56) * rho(1 + $I_L6299_56) + 1004.6 * rho(1 + $I_L6299_56) * rhi(1 + $I_L6299_56)
 6306.                      $b03_WR0_R13 = -1004.6 * $sl1kap_S6 * rho(1 + $I_L6299_56) * rhi(1 + $I_L6299_56)
 6307.                      $b04_WR0_R14 = -2520000.0 * rho(1 + $I_L6299_56) * rhi(1 + $I_L6299_56)
 6310.                      $c0_WR0_R15 = rnet(1 + $I_L6299_56) + -1004.6 * rhi(1 + $I_L6299_56) * rho(1 + $I_L6299_56) * ( tsurf(1 + $I_L6299_56) + -( $sl1kap_S6 * gt(1 + $I_L6299_56) ) ) + -5.6699999999999998e-8 * ( tsurf(1 + $I_L6299_56) * tsurf(1 + $I_L6299_56) ) * ( tsurf(1 + $I_L6299_56) * tsurf(1 + $I_L6299_56) ) + -2520000.0 * rhi(1 + $I_L6299_56) * rho(1 + $I_L6299_56) * ( qsurf(1 + $I_L6299_56) + -gq(1 + $I_L6299_56) ) + -1.0149999999999999 * ( -271.16000000000003 + tsurf(1 + $I_L6299_56) )
 6313.                      $b30_WR0_R16 = -1004.6 * rhi(1 + $I_L6299_56) * rho(1 + $I_L6299_56) * ah(1 + $I_L6299_56)
 6314.                      $b33_WR0_R17 = -( $sl1kap_S6 * $b30_WR0_R16 ) + $dti_S13 * tmtx(1 + $I_L6299_56, 1, 2)
 6315.                      $c3_WR0_R18 = tmtx(1 + $I_L6299_56, 1, 3) + -( $b30_WR0_R16 * ( tsurf(1 + $I_L6299_56) + -( $sl1kap_S6 * gt(1 + $I_L6299_56) ) ) )
 6316.                      $b40_WR0_R19 = -2520000.0 * rhi(1 + $I_L6299_56) * rho(1 + $I_L6299_56) * dqg0(1 + $I_L6299_56) * al(1 + $I_L6299_56)
 6317.                      $b44_WR0_R20 = 2520000.0 * rhi(1 + $I_L6299_56) * rho(1 + $I_L6299_56) * al(1 + $I_L6299_56) + $dti_S13 * qmtx(1 + $I_L6299_56, 1, 2)
 6318.                      $c4_WR0_R21 = qmtx(1 + $I_L6299_56, 1, 3) + 2520000.0 * rhi(1 + $I_L6299_56) * rho(1 + $I_L6299_56) * al(1 + $I_L6299_56) * ( qsurf(1 + $I_L6299_56) + -gq(1 + $I_L6299_56) )
 6320.                      $b00_WR0_R12 = $b00_WR0_R12 + -( $b03_WR0_R13 * $b30_WR0_R16 * 1.0/$b33_WR0_R17 ) + -( $b04_WR0_R14 * $b40_WR0_R19 * 1.0/$b44_WR0_R20 )
 6322.                      $c0_WR0_R15 = ( 1.0/$b00_WR0_R12 * ( $c0_WR0_R15 + -( $b03_WR0_R13 * $c3_WR0_R18 * 1.0/$b33_WR0_R17 ) + -( $b04_WR0_R14 * $c4_WR0_R21 * 1.0/$b44_WR0_R20 ) ) )
 6322.                      c0(1 + $I_L6299_56) = $c0_WR0_R15
 6324.                      tmtx(1 + $I_L6299_56, 1, 3) = ( 1.0/( dtc3x * $b33_WR0_R17 ) * ( $c3_WR0_R18 + -( $c0_WR0_R15 * $b30_WR0_R16 ) ) )
 6325.                      qmtx(1 + $I_L6299_56, 1, 3) = ( 1.0/( dtc3x * $b44_WR0_R20 ) * ( $c4_WR0_R21 + -( $c0_WR0_R15 * $b40_WR0_R19 ) ) )
 6323.                      tsurf(1 + $I_L6299_56) = $c0_WR0_R15 + tsurf(1 + $I_L6299_56)
 6323.                   else
 6323.    20                continue
 6327.                      if ( tsea(1 + $I_L6299_56) < 0.0 ) then
 6327.                         if ( abs( tsea(1 + $I_L6299_56) ) > 271.17000000000002 ) then
 6328.                            zorl(1 + $I_L6299_56) = 3.2653061224489793e-1 * rhi(1 + $I_L6299_56) * speedm(1 + $I_L6299_56)
 6329.                            $sens_WR0_R22 = 1004.6 * rhi(1 + $I_L6299_56) * rho(1 + $I_L6299_56) * ( tsurf(1 + $I_L6299_56) + -( $sl1kap_S6 * gt(1 + $I_L6299_56) ) )
 6329.                            sens(1 + $I_L6299_56) = $sens_WR0_R22
 6330.                            $evap_WR0_R23 = 2520000.0 * rhi(1 + $I_L6299_56) * rho(1 + $I_L6299_56) * ( qsurf(1 + $I_L6299_56) + -gq(1 + $I_L6299_56) )
 6330.                            evap(1 + $I_L6299_56) = $evap_WR0_R23
 6331.                            tmtx(1 + $I_L6299_56, 1, 3) = ( ( tmtx(1 + $I_L6299_56, 1, 3) + $sens_WR0_R22 * ah(1 + $I_L6299_56) ) * 1.0/( tmtx(1 + $I_L6299_56, 1, 2) + 1004.6 * dtc3x * rhi(1 + $I_L6299_56) * rho(1 + $I_L6299_56) * ah(1 + $I_L6299_56) ) )
 6333.                            qmtx(1 + $I_L6299_56, 1, 3) = ( ( qmtx(1 + $I_L6299_56, 1, 3) + $evap_WR0_R23 * al(1 + $I_L6299_56) ) * 1.0/( qmtx(1 + $I_L6299_56, 1, 2) + 2520000.0 * dtc3x * rhi(1 + $I_L6299_56) * rho(1 + $I_L6299_56) * al(1 + $I_L6299_56) ) )
 6333.                         endif
 6333.                      endif
 6333.                   endif
 6333.                endif
 6337.                $I_L6299_56 = 1 + $I_L6299_56
 6336.                if ( $I_L6299_56 >= ncols ) exit
 6336.             enddo
 6339.             $I_L6339_58 = 0
 6339. !dir$ ivdep
 6339.             do
 6340.                if ( mskant(1 + $I_L6339_58) == 1 ) then
 6341.                   gt(1 + $I_L6339_58) = gt(1 + $I_L6339_58) + dtc3x * tmtx(1 + $I_L6339_58, 1, 3)
 6342.                   gq(1 + $I_L6339_58) = gq(1 + $I_L6339_58) + dtc3x * qmtx(1 + $I_L6339_58, 1, 3)
 6342.                endif
 6344.                $I_L6339_58 = 1 + $I_L6339_58
 6343.                if ( $I_L6339_58 >= ncols ) exit
 6343.             enddo
 6343.          endif
 6344.          if ( $ncount_S3 /= 1 ) exit
 6344.       enddo
 6348.       if ( ncols > 0 ) then
 6348.          $I_L6348_60 = 0
 6348. !dir$ ivdep
 6348.          do
 6349.             if ( mskant(1 + $I_L6348_60) == 1 ) then
 6350.                $sens_WR0_R25 = 1004.6 * rhi(1 + $I_L6348_60) * rho(1 + $I_L6348_60) * ( tsurf(1 + $I_L6348_60) + -( $sl1kap_S6 * gt(1 + $I_L6348_60) ) )
 6350.                sens(1 + $I_L6348_60) = $sens_WR0_R25
 6351.                $evap_WR0_R26 = 2520000.0 * rhi(1 + $I_L6348_60) * rho(1 + $I_L6348_60) * ( qsurf(1 + $I_L6348_60) + -gq(1 + $I_L6348_60) )
 6351.                evap(1 + $I_L6348_60) = $evap_WR0_R26
 6353.                $dtmdt_S16 = ( ( $sens_WR0_R25 * ah(1 + $I_L6348_60) ) * 1.0/( tmtx(1 + $I_L6348_60, 1, 2) + 1004.6 * dtc3x * rhi(1 + $I_L6348_60) * rho(1 + $I_L6348_60) * ah(1 + $I_L6348_60) ) )
 6354.                $dqmdt_S17 = ( ( $evap_WR0_R26 * al(1 + $I_L6348_60) ) * 1.0/( qmtx(1 + $I_L6348_60, 1, 2) + 2520000.0 * dtc3x * rhi(1 + $I_L6348_60) * rho(1 + $I_L6348_60) * al(1 + $I_L6348_60) ) )
 6357.                tsfc(1 + $I_L6348_60) = gt(1 + $I_L6348_60) + ( dtc3x * $dtmdt_S16 )
 6358.                qsfc(1 + $I_L6348_60) = gq(1 + $I_L6348_60) + ( dtc3x * $dqmdt_S17 )
 6360.                gt(1 + $I_L6348_60) = gtsav(1 + $I_L6348_60)
 6361.                gq(1 + $I_L6348_60) = gqsav(1 + $I_L6348_60)
 6362.                if ( tsea(1 + $I_L6348_60) < 0.0 ) then
 6362.                   if ( abs( tsea(1 + $I_L6348_60) ) < 271.17000000000002 ) then
 6363.                      cond(1 + $I_L6348_60) = 1.0149999999999999 * ( -271.16000000000003 + tsurf(1 + $I_L6348_60) )
 6364.                      stor(1 + $I_L6348_60) = $hscap_S12 * c0(1 + $I_L6348_60)
 6365.                      $tsurf_WR0_R24 = min( 271.16000000000003, tsurf(1 + $I_L6348_60) )
 6365.                      tsurf(1 + $I_L6348_60) = $tsurf_WR0_R24
 6366.                      tsea(1 + $I_L6348_60) = -$tsurf_WR0_R24
 6366.                   endif
 6366.                endif
 6366.             endif
 6369.             $I_L6348_60 = 1 + $I_L6348_60
 6368.             if ( $I_L6348_60 >= ncols ) exit
 6368.          enddo
 6371.          $I_L6371_62 = 0
 6371. !dir$ ivdep
 6371.          do
 6372.             if ( mskant(1 + $I_L6371_62) == 1 ) then
 6373.                $umom_WR0_R27 = rmi(1 + $I_L6371_62) * gu(1 + $I_L6371_62) * rho(1 + $I_L6371_62)
 6374.                $vmom_WR0_R28 = rmi(1 + $I_L6371_62) * rho(1 + $I_L6371_62) * gv(1 + $I_L6371_62)
 6375.                $am_WR0_R29 = ( $gb100_S19 * 1.0/gps(1 + $I_L6371_62) )
 6376.                umtx(1 + $I_L6371_62, 1, 3) = ( ( umtx(1 + $I_L6371_62, 1, 3) + -( $umom_WR0_R27 * $am_WR0_R29 ) ) * 1.0/( umtx(1 + $I_L6371_62, 1, 2) + dtc3x * rmi(1 + $I_L6371_62) * $am_WR0_R29 * rho(1 + $I_L6371_62) ) )
 6384.                $umom_WR0_R27 = ( $umom_WR0_R27 * 1.0/sinclt(1 + $I_L6371_62) )
 6384.                umom(1 + $I_L6371_62) = $umom_WR0_R27
 6378.                umtx(1 + $I_L6371_62, 1, 4) = ( 1.0/( umtx(1 + $I_L6371_62, 1, 2) + dtc3x * rmi(1 + $I_L6371_62) * $am_WR0_R29 * rho(1 + $I_L6371_62) ) * ( umtx(1 + $I_L6371_62, 1, 4) + -( $vmom_WR0_R28 * $am_WR0_R29 ) ) )
 6385.                $vmom_WR0_R28 = ( $vmom_WR0_R28 * 1.0/sinclt(1 + $I_L6371_62) )
 6385.                vmom(1 + $I_L6371_62) = $vmom_WR0_R28
 6386.                ustarm(1 + $I_L6371_62) = _sqrt( $umom_WR0_R27 * $umom_WR0_R27 + $vmom_WR0_R28 * $vmom_WR0_R28 )
 6387.                if ( _sqrt( $umom_WR0_R27 * $umom_WR0_R27 + $vmom_WR0_R28 * $vmom_WR0_R28 ) == 0.0 ) then
 6387.                   ustarm(1 + $I_L6371_62) = 7.0000000000000001e-3
 6387.                endif
 6388.                $um_WR0_R31 = ( gu(1 + $I_L6371_62) * 1.0/sinclt(1 + $I_L6371_62) )
 6389.                $vm_WR0_R32 = ( gv(1 + $I_L6371_62) * 1.0/sinclt(1 + $I_L6371_62) )
 6391.                speedm(1 + $I_L6371_62) = ( max( 2.0, _sqrt( $um_WR0_R31 * $um_WR0_R31 + $vm_WR0_R32 * $vm_WR0_R32 ) ) )
 6391.             endif
 6393.             $I_L6371_62 = 1 + $I_L6371_62
 6392.             if ( $I_L6371_62 >= ncols ) exit
 6392.          enddo
 6392.       endif
 6081.       _free( t$2068 )
 6394.       return
 6394.       end
 6394.       
 6397.       
 6397.       subroutine sextrp( td, tg, tc, w, capac, td0, tg0, tc0, w0, capac0, tdm, tgm, tcm, wm, capacm, istrt, ncols, nmax, epsflt, intg, latitu, tm0, qm0, tm, qm, tmm, qmm )
 6397.       t$1169 = ncols
 6409.       t$2170 = _zla( 0, ncols )
 6397.       t$2171 = _zla( 0, ncols )
 6397.       t$2172 = 3 * _zla( 0, ncols )
 6397.       t$2173 = 2 * _zla( 0, ncols )
 6430.       if ( intg == 2 ) then
 6431.          if ( istrt <= 0 ) then
 6454.             if ( nmax > 0 ) then
 6454.                $I_L6454_40 = 0
 6454. !dir$ ivdep
 6454.                do
 6455.                   td0(1 + $I_L6454_40) = td0(1 + $I_L6454_40) + epsflt * ( tdm(1 + $I_L6454_40) + td(1 + $I_L6454_40) + -2.0 * td0(1 + $I_L6454_40) )
 6456.                   tg0(1 + $I_L6454_40) = tg0(1 + $I_L6454_40) + epsflt * ( tgm(1 + $I_L6454_40) + tg(1 + $I_L6454_40) + -2.0 * tg0(1 + $I_L6454_40) )
 6457.                   tc0(1 + $I_L6454_40) = tc0(1 + $I_L6454_40) + epsflt * ( tcm(1 + $I_L6454_40) + tc(1 + $I_L6454_40) + -2.0 * tc0(1 + $I_L6454_40) )
 6459.                   tm0(1 + $I_L6454_40) = tm0(1 + $I_L6454_40) + epsflt * ( tmm(1 + $I_L6454_40) + tm(1 + $I_L6454_40) + -2.0 * tm0(1 + $I_L6454_40) )
 6460.                   qm0(1 + $I_L6454_40) = qm0(1 + $I_L6454_40) + epsflt * ( qmm(1 + $I_L6454_40) + qm(1 + $I_L6454_40) + -2.0 * qm0(1 + $I_L6454_40) )
 6462.                   if ( w0(1 + $I_L6454_40, 1) > 0.0 ) then
 6463.                      w0(1 + $I_L6454_40, 1) = w0(1 + $I_L6454_40, 1) + epsflt * ( wm(1 + $I_L6454_40, 1) + w(1 + $I_L6454_40, 1) + -2.0 * w0(1 + $I_L6454_40, 1) )
 6463.                   endif
 6465.                   if ( w0(1 + $I_L6454_40, 2) > 0.0 ) then
 6466.                      w0(1 + $I_L6454_40, 2) = w0(1 + $I_L6454_40, 2) + epsflt * ( wm(1 + $I_L6454_40, 2) + w(1 + $I_L6454_40, 2) + -2.0 * w0(1 + $I_L6454_40, 2) )
 6466.                   endif
 6468.                   if ( w0(1 + $I_L6454_40, 3) > 0.0 ) then
 6469.                      w0(1 + $I_L6454_40, 3) = w0(1 + $I_L6454_40, 3) + epsflt * ( wm(1 + $I_L6454_40, 3) + w(1 + $I_L6454_40, 3) + -2.0 * w0(1 + $I_L6454_40, 3) )
 6469.                   endif
 6471.                   if ( capac0(1 + $I_L6454_40, 1) > 0.0 ) then
 6472.                      capac0(1 + $I_L6454_40, 1) = capac0(1 + $I_L6454_40, 1) + epsflt * ( capacm(1 + $I_L6454_40, 1) + capac(1 + $I_L6454_40, 1) + -2.0 * capac0(1 + $I_L6454_40, 1) )
 6472.                   endif
 6475.                   if ( capac0(1 + $I_L6454_40, 2) > 0.0 ) then
 6476.                      capac0(1 + $I_L6454_40, 2) = capac0(1 + $I_L6454_40, 2) + epsflt * ( capacm(1 + $I_L6454_40, 2) + capac(1 + $I_L6454_40, 2) + -2.0 * capac0(1 + $I_L6454_40, 2) )
 6476.                   endif
 6479.                   $I_L6454_40 = 1 + $I_L6454_40
 6478.                   if ( $I_L6454_40 >= nmax ) exit
 6478.                enddo
 6480.                $I_L6480_42 = 0
 6480. !dir$ ivdep
 6480.                do
 6481.                   tdm(1 + $I_L6480_42) = td0(1 + $I_L6480_42)
 6482.                   $tgm_WR0_R0 = tg0(1 + $I_L6480_42)
 6482.                   tgm(1 + $I_L6480_42) = $tgm_WR0_R0
 6483.                   tcm(1 + $I_L6480_42) = tc0(1 + $I_L6480_42)
 6484.                   tmm(1 + $I_L6480_42) = tm0(1 + $I_L6480_42)
 6485.                   qmm(1 + $I_L6480_42) = qm0(1 + $I_L6480_42)
 6486.                   wm(1 + $I_L6480_42, 1) = w0(1 + $I_L6480_42, 1)
 6487.                   wm(1 + $I_L6480_42, 2) = w0(1 + $I_L6480_42, 2)
 6488.                   wm(1 + $I_L6480_42, 3) = w0(1 + $I_L6480_42, 3)
 6489.                   capacm(1 + $I_L6480_42, 1) = capac0(1 + $I_L6480_42, 1)
 6490.                   $capacm_WR0_R1 = capac0(1 + $I_L6480_42, 2)
 6490.                   capacm(1 + $I_L6480_42, 2) = $capacm_WR0_R1
 6491.                   if ( $capacm_WR0_R1 > 0.0 ) then
 6491.                      $tgm_WR0_R0 = min( 273.06, $tgm_WR0_R0 )
 6491.                      tgm(1 + $I_L6480_42) = $tgm_WR0_R0
 6491.                   endif
 6492.                   $I_L6480_42 = 1 + $I_L6480_42
 6491.                   if ( $I_L6480_42 >= nmax ) exit
 6491.                enddo
 6491.             endif
 6493.             if ( nmax > 0 ) then
 6493.                $I_L6493_44 = 0
 6493.                do
 6494.                   td0(1 + $I_L6493_44) = td(1 + $I_L6493_44)
 6495.                   tg0(1 + $I_L6493_44) = tg(1 + $I_L6493_44)
 6496.                   tc0(1 + $I_L6493_44) = tc(1 + $I_L6493_44)
 6497.                   tm0(1 + $I_L6493_44) = tm(1 + $I_L6493_44)
 6498.                   qm0(1 + $I_L6493_44) = qm(1 + $I_L6493_44)
 6499.                   w0(1 + $I_L6493_44, 1) = w(1 + $I_L6493_44, 1)
 6500.                   w0(1 + $I_L6493_44, 2) = w(1 + $I_L6493_44, 2)
 6501.                   w0(1 + $I_L6493_44, 3) = w(1 + $I_L6493_44, 3)
 6502.                   capac0(1 + $I_L6493_44, 1) = capac(1 + $I_L6493_44, 1)
 6503.                   capac0(1 + $I_L6493_44, 2) = capac(1 + $I_L6493_44, 2)
 6504.                   if ( capac0(1 + $I_L6493_44, 2) > 0.0 ) then
 6504.                      if ( tg0(1 + $I_L6493_44) > 273.16000000000003 ) then
 6511.                         if ( ( ( 1 + $I_L6493_44 ) <= 0 .or. ( 1 + $I_L6493_44 ) > t$1169 ) /= .false. ) then
 6511.                             _substr(t$3313,1,13) = 'Sfc_SSiB.f90'
 6511.                             _substr(t$3314,1,7) = 'CAPAC0'
 6511.                            t$3298 = 1 + $I_L6493_44
 6511.                            call _bounds_error(  _substr(t$3313,1,13), 6511,  _substr(t$3314,1,7), 1, 1, t$1169, t$3298, t$3312 )
 6511.                         endif
 6511.                         if ( ( ( 1 + $I_L6493_44 ) <= 0 .or. ( 1 + $I_L6493_44 ) > t$1169 ) /= .false. ) then
 6511.                             _substr(t$3316,1,13) = 'Sfc_SSiB.f90'
 6511.                             _substr(t$3317,1,4) = 'TG0'
 6511.                            t$3302 = 1 + $I_L6493_44
 6511.                            call _bounds_error(  _substr(t$3316,1,13), 6511,  _substr(t$3317,1,4), 1, 1, t$1169, t$3302, t$3315 )
 6511.                         endif
 6511.                         $Unit_temp_O2 = nfprt
 6511.                         $_IOitem_P2(0) = 0
 6511.                         $_IOitem_P2(1) = latitu
 6511.                         $_IOitem_P2(2) = ( 1 + $I_L6493_44 )
 6511.                         $_IOitem_P3(0) = capac0(1 + $I_L6493_44, 2)
 6511.                         $_IOitem_P3(1) = tg0(1 + $I_L6493_44)
 6511.                         _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, t$1191,  _substr(t$1190,1,91), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P2(:( 0, 2, 1 )), 0x2000200000000L ), _iotype( (&)$_IOitem_P3(:( 0, 1, 1 )), 0x804060300000000L ) ) )
 6511.                      endif
 6511.                   endif
 6513.                   $I_L6493_44 = 1 + $I_L6493_44
 6512.                   if ( $I_L6493_44 >= nmax ) exit
 6512.                enddo
 6512.             endif
 6432.          else if ( nmax > 0 ) then
 6432.             $I_L6432_46 = 0
 6432.             do
 6433.                tm0(1 + $I_L6432_46) = tm(1 + $I_L6432_46)
 6434.                qm0(1 + $I_L6432_46) = qm(1 + $I_L6432_46)
 6435.                td0(1 + $I_L6432_46) = td(1 + $I_L6432_46)
 6436.                tg0(1 + $I_L6432_46) = tg(1 + $I_L6432_46)
 6437.                tc0(1 + $I_L6432_46) = tc(1 + $I_L6432_46)
 6438.                w0(1 + $I_L6432_46, 1) = w(1 + $I_L6432_46, 1)
 6439.                w0(1 + $I_L6432_46, 2) = w(1 + $I_L6432_46, 2)
 6440.                w0(1 + $I_L6432_46, 3) = w(1 + $I_L6432_46, 3)
 6441.                capac0(1 + $I_L6432_46, 1) = capac(1 + $I_L6432_46, 1)
 6442.                capac0(1 + $I_L6432_46, 2) = capac(1 + $I_L6432_46, 2)
 6443.                if ( capac0(1 + $I_L6432_46, 2) > 0.0 ) then
 6443.                   if ( tg0(1 + $I_L6432_46) > 273.16000000000003 ) then
 6450.                      if ( ( ( 1 + $I_L6432_46 ) <= 0 .or. ( 1 + $I_L6432_46 ) > t$1169 ) /= .false. ) then
 6450.                          _substr(t$3296,1,13) = 'Sfc_SSiB.f90'
 6450.                          _substr(t$3297,1,7) = 'CAPAC0'
 6450.                         t$3298 = 1 + $I_L6432_46
 6450.                         call _bounds_error(  _substr(t$3296,1,13), 6450,  _substr(t$3297,1,7), 1, 1, t$1169, t$3298, t$3295 )
 6450.                      endif
 6450.                      if ( ( ( 1 + $I_L6432_46 ) <= 0 .or. ( 1 + $I_L6432_46 ) > t$1169 ) /= .false. ) then
 6450.                          _substr(t$3300,1,13) = 'Sfc_SSiB.f90'
 6450.                          _substr(t$3301,1,4) = 'TG0'
 6450.                         t$3302 = 1 + $I_L6432_46
 6450.                         call _bounds_error(  _substr(t$3300,1,13), 6450,  _substr(t$3301,1,4), 1, 1, t$1169, t$3302, t$3299 )
 6450.                      endif
 6450.                      $Unit_temp_O0 = nfprt
 6450.                      $_IOitem_P0(0) = 0
 6450.                      $_IOitem_P0(1) = latitu
 6450.                      $_IOitem_P0(2) = ( 1 + $I_L6432_46 )
 6450.                      $_IOitem_P1(0) = capac0(1 + $I_L6432_46, 2)
 6450.                      $_IOitem_P1(1) = tg0(1 + $I_L6432_46)
 6450.                      _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$1191,  _substr(t$1190,1,91), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P0(:( 0, 2, 1 )), 0x2000200000000L ), _iotype( (&)$_IOitem_P1(:( 0, 1, 1 )), 0x804060300000000L ) ) )
 6450.                   endif
 6450.                endif
 6452.                $I_L6432_46 = 1 + $I_L6432_46
 6451.                if ( $I_L6432_46 >= nmax ) exit
 6451.             enddo
 6451.          endif
 6515.       else if ( nmax > 0 ) then
 6516.          $I_L6516_36 = 0
 6516.          do
 6517.             tdm(1 + $I_L6516_36) = td(1 + $I_L6516_36)
 6518.             tgm(1 + $I_L6516_36) = tg(1 + $I_L6516_36)
 6519.             tcm(1 + $I_L6516_36) = tc(1 + $I_L6516_36)
 6520.             tmm(1 + $I_L6516_36) = tm(1 + $I_L6516_36)
 6521.             qmm(1 + $I_L6516_36) = qm(1 + $I_L6516_36)
 6522.             wm(1 + $I_L6516_36, 1) = w(1 + $I_L6516_36, 1)
 6523.             wm(1 + $I_L6516_36, 2) = w(1 + $I_L6516_36, 2)
 6524.             wm(1 + $I_L6516_36, 3) = w(1 + $I_L6516_36, 3)
 6525.             capacm(1 + $I_L6516_36, 1) = capac(1 + $I_L6516_36, 1)
 6526.             capacm(1 + $I_L6516_36, 2) = capac(1 + $I_L6516_36, 2)
 6527.             if ( capacm(1 + $I_L6516_36, 2) > 0.0 ) then
 6527.                if ( tgm(1 + $I_L6516_36) > 273.16000000000003 ) then
 6534.                   if ( ( ( 1 + $I_L6516_36 ) <= 0 .or. ( 1 + $I_L6516_36 ) > t$1169 ) /= .false. ) then
 6534.                       _substr(t$3322,1,13) = 'Sfc_SSiB.f90'
 6534.                       _substr(t$3323,1,7) = 'CAPACM'
 6534.                      t$3298 = 1 + $I_L6516_36
 6534.                      call _bounds_error(  _substr(t$3322,1,13), 6534,  _substr(t$3323,1,7), 1, 1, t$1169, t$3298, t$3321 )
 6534.                   endif
 6534.                   if ( ( ( 1 + $I_L6516_36 ) <= 0 .or. ( 1 + $I_L6516_36 ) > t$1169 ) /= .false. ) then
 6534.                       _substr(t$3325,1,13) = 'Sfc_SSiB.f90'
 6534.                       _substr(t$3326,1,4) = 'TGM'
 6534.                      t$3302 = 1 + $I_L6516_36
 6534.                      call _bounds_error(  _substr(t$3325,1,13), 6534,  _substr(t$3326,1,4), 1, 1, t$1169, t$3302, t$3324 )
 6534.                   endif
 6534.                   $Unit_temp_O4 = nfprt
 6534.                   $_IOitem_P4(0) = 0
 6534.                   $_IOitem_P4(1) = latitu
 6534.                   $_IOitem_P4(2) = ( 1 + $I_L6516_36 )
 6534.                   $_IOitem_P5(0) = capacm(1 + $I_L6516_36, 2)
 6534.                   $_IOitem_P5(1) = tgm(1 + $I_L6516_36)
 6534.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, t$1193,  _substr(t$1192,1,91), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P4(:( 0, 2, 1 )), 0x2000200000000L ), _iotype( (&)$_IOitem_P5(:( 0, 1, 1 )), 0x804060300000000L ) ) )
 6534.                endif
 6534.             endif
 6536.             $I_L6516_36 = 1 + $I_L6516_36
 6535.             if ( $I_L6516_36 >= nmax ) exit
 6535.          enddo
 6537.          $I_L6537_38 = 0
 6537. !dir$ ivdep
 6537.          do
 6538.             td0(1 + $I_L6537_38) = td(1 + $I_L6537_38)
 6539.             tg0(1 + $I_L6537_38) = tg(1 + $I_L6537_38)
 6540.             tc0(1 + $I_L6537_38) = tc(1 + $I_L6537_38)
 6541.             tm0(1 + $I_L6537_38) = tm(1 + $I_L6537_38)
 6542.             qm0(1 + $I_L6537_38) = qm(1 + $I_L6537_38)
 6543.             w0(1 + $I_L6537_38, 1) = w(1 + $I_L6537_38, 1)
 6544.             w0(1 + $I_L6537_38, 2) = w(1 + $I_L6537_38, 2)
 6545.             w0(1 + $I_L6537_38, 3) = w(1 + $I_L6537_38, 3)
 6546.             capac0(1 + $I_L6537_38, 1) = capac(1 + $I_L6537_38, 1)
 6547.             capac0(1 + $I_L6537_38, 2) = capac(1 + $I_L6537_38, 2)
 6548.             $I_L6537_38 = 1 + $I_L6537_38
 6537.             if ( $I_L6537_38 >= nmax ) exit
 6537.          enddo
 6537.       endif
 6554.       return
 6554.       end
 6554.       
 6556.       
 6556.       subroutine albedo( ncols, month2, nmax, itype, tc, tg, tm, qm, td, capac, w, tcm, tgm, tmm, qmm, tdm, capacm, wm, satcap, extk, radfac, closs, gloss, thermk, p1f, p2f, zlwup, salb, tgeff, cosz, nsx, latco, imask, avisb, avisd, anirb, anird, tsea, zenith )
 6556.       t$1194 = ncols
 6569.       t$2174 = _zla( 0, ncols )
 6556.       t$2175 = _zla( 0, ncols )
 6556.       t$2176 = 2 * _zla( 0, ncols )
 6556.       t$2177 = 3 * _zla( 0, ncols )
 6556.       t$2178 = 2 * _zla( 0, ncols )
 6556.       t$2179 = 2 * _zla( 0, ncols )
 6556.       t$2180 = 6 * _zla( 0, ncols )
 6556.       t$2181 = 12 * _zla( 0, ncols )
 6556.       t$2182 = 2 * _zla( 0, ncols )
 6556.       t$2183 = 4 * _zla( 0, ncols )
 6611.       if ( nmax > 0 ) then
 6613.          $I_L6613_8 = 0
 6613. !dir$ ivdep
 6613.          do
 6614.             tm(1 + $I_L6613_8) = tmm(1 + $I_L6613_8)
 6615.             qm(1 + $I_L6613_8) = qmm(1 + $I_L6613_8)
 6616.             td(1 + $I_L6613_8) = tdm(1 + $I_L6613_8)
 6617.             tg(1 + $I_L6613_8) = tgm(1 + $I_L6613_8)
 6618.             tc(1 + $I_L6613_8) = tcm(1 + $I_L6613_8)
 6619.             capac(1 + $I_L6613_8, 1) = capacm(1 + $I_L6613_8, 1)
 6620.             capac(1 + $I_L6613_8, 2) = capacm(1 + $I_L6613_8, 2)
 6621.             w(1 + $I_L6613_8, 1) = wm(1 + $I_L6613_8, 1)
 6622.             w(1 + $I_L6613_8, 2) = wm(1 + $I_L6613_8, 2)
 6623.             w(1 + $I_L6613_8, 3) = wm(1 + $I_L6613_8, 3)
 6624.             $I_L6613_8 = 1 + $I_L6613_8
 6613.             if ( $I_L6613_8 >= nmax ) exit
 6613.          enddo
 6628.          t$3334 = ( max( 0, nmax ) )
 6628.          t$3338 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
 6628.          $F_A33 = nmax
 6628.          $I_A2 = 0
 6628.          do
 6628.             $I_A1 = 0
 6628. !dir$ ivdep
 6628.             do
 6628.                t$3337(1 + $I_A1, 1 + $I_A2) = capac(1 + $I_A1, 1 + $I_A2)
 6628.                $I_A1 = 1 + $I_A1
 6628.                if ( $I_A1 >= $F_A33 ) exit
 6628.             enddo
 6628.             $I_A2 = 1 + $I_A2
 6628.             if ( $I_A2 >= 2 ) exit
 6628.          enddo
 6628.          t$3340 = ( max( 0, nmax ) )
 6628.          t$3344 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
 6628.          $F_A34 = nmax
 6628.          $I_A2 = 0
 6628.          do
 6628.             $I_A1 = 0
 6628. !dir$ ivdep
 6628.             do
 6628.                t$3343(1 + $I_A1, 1 + $I_A2) = satcap(1 + $I_A1, 1 + $I_A2)
 6628.                $I_A1 = 1 + $I_A1
 6628.                if ( $I_A1 >= $F_A34 ) exit
 6628.             enddo
 6628.             $I_A2 = 1 + $I_A2
 6628.             if ( $I_A2 >= 2 ) exit
 6628.          enddo
 6629.          t$3346 = ( max( 0, nmax ) )
 6629.          t$3352 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
 6629.          $F_A35 = nmax
 6629.          $I_A4 = 0
 6629.          do
 6629.             $I_A3 = 0
 6629.             do
 6629.                $I_A2 = 0
 6629.                do
 6629.                   $I_A1 = 0
 6629. !dir$ ivdep
 6629.                   do
 6629.                      t$3351(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 1 + $I_A4) = extk(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 1 + $I_A4)
 6629.                      $I_A1 = 1 + $I_A1
 6629.                      if ( $I_A1 >= $F_A35 ) exit
 6629.                   enddo
 6629.                   $I_A2 = 1 + $I_A2
 6629.                   if ( $I_A2 >= 2 ) exit
 6629.                enddo
 6629.                $I_A3 = 1 + $I_A3
 6629.                if ( $I_A3 >= 3 ) exit
 6629.             enddo
 6629.             $I_A4 = 1 + $I_A4
 6629.             if ( $I_A4 >= 2 ) exit
 6629.          enddo
 6629.          t$3354 = ( max( 0, nmax ) )
 6629.          t$3360 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
 6629.          $F_A36 = nmax
 6629.          $I_A4 = 0
 6629.          do
 6629.             $I_A3 = 0
 6629.             do
 6629.                $I_A2 = 0
 6629.                do
 6629.                   $I_A1 = 0
 6629. !dir$ ivdep
 6629.                   do
 6629.                      t$3359(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 1 + $I_A4) = radfac(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 1 + $I_A4)
 6629.                      $I_A1 = 1 + $I_A1
 6629.                      if ( $I_A1 >= $F_A36 ) exit
 6629.                   enddo
 6629.                   $I_A2 = 1 + $I_A2
 6629.                   if ( $I_A2 >= 2 ) exit
 6629.                enddo
 6629.                $I_A3 = 1 + $I_A3
 6629.                if ( $I_A3 >= 3 ) exit
 6629.             enddo
 6629.             $I_A4 = 1 + $I_A4
 6629.             if ( $I_A4 >= 2 ) exit
 6629.          enddo
 6631.          t$3362 = ( max( 0, nmax ) )
 6631.          t$3367 = int( _alloc( max( 0, 32 * max( 0, ( max( 0, nmax ) ) ) ) ), 8 )
 6631.          $F_A37 = nmax
 6631.          $I_A3 = 0
 6631.          do
 6631.             $I_A2 = 0
 6631.             do
 6631.                $I_A1 = 0
 6631. !dir$ ivdep
 6631.                do
 6631.                   t$3366(1 + $I_A1, 1 + $I_A2, 1 + $I_A3) = salb(1 + $I_A1, 1 + $I_A2, 1 + $I_A3)
 6631.                   $I_A1 = 1 + $I_A1
 6631.                   if ( $I_A1 >= $F_A37 ) exit
 6631.                enddo
 6631.                $I_A2 = 1 + $I_A2
 6631.                if ( $I_A2 >= 2 ) exit
 6631.             enddo
 6631.             $I_A3 = 1 + $I_A3
 6631.             if ( $I_A3 >= 2 ) exit
 6631.          enddo
 6626.          call radalb( nmax, month2(1), nmax, itype(1), tc(1), tg(1), t$3337(1, 1), t$3343(1, 1), t$3351(1, 1, 1, 1), t$3359(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), zlwup(1), t$3366(1, 1, 1), tgeff(1), cosz(1), nsx(1), latco )
 6626.          $F_A38 = nmax
 6626.          $I_A3 = 0
 6626.          do
 6626.             $I_A2 = 0
 6626.             do
 6626.                $I_A1 = 0
 6626. !dir$ ivdep
 6626.                do
 6626.                   salb(1 + $I_A1, 1 + $I_A2, 1 + $I_A3) = t$3366(1 + $I_A1, 1 + $I_A2, 1 + $I_A3)
 6626.                   $I_A1 = 1 + $I_A1
 6626.                   if ( $I_A1 >= $F_A38 ) exit
 6626.                enddo
 6626.                $I_A2 = 1 + $I_A2
 6626.                if ( $I_A2 >= 2 ) exit
 6626.             enddo
 6626.             $I_A3 = 1 + $I_A3
 6626.             if ( $I_A3 >= 2 ) exit
 6626.          enddo
 6631.          _free( t$3367 )
 6626.          $F_A39 = nmax
 6626.          $I_A4 = 0
 6626.          do
 6626.             $I_A3 = 0
 6626.             do
 6626.                $I_A2 = 0
 6626.                do
 6626.                   $I_A1 = 0
 6626. !dir$ ivdep
 6626.                   do
 6626.                      radfac(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 1 + $I_A4) = t$3359(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 1 + $I_A4)
 6626.                      $I_A1 = 1 + $I_A1
 6626.                      if ( $I_A1 >= $F_A39 ) exit
 6626.                   enddo
 6626.                   $I_A2 = 1 + $I_A2
 6626.                   if ( $I_A2 >= 2 ) exit
 6626.                enddo
 6626.                $I_A3 = 1 + $I_A3
 6626.                if ( $I_A3 >= 3 ) exit
 6626.             enddo
 6626.             $I_A4 = 1 + $I_A4
 6626.             if ( $I_A4 >= 2 ) exit
 6626.          enddo
 6629.          _free( t$3360 )
 6626.          $F_A40 = nmax
 6626.          $I_A4 = 0
 6626.          do
 6626.             $I_A3 = 0
 6626.             do
 6626.                $I_A2 = 0
 6626.                do
 6626.                   $I_A1 = 0
 6626. !dir$ ivdep
 6626.                   do
 6626.                      extk(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 1 + $I_A4) = t$3351(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 1 + $I_A4)
 6626.                      $I_A1 = 1 + $I_A1
 6626.                      if ( $I_A1 >= $F_A40 ) exit
 6626.                   enddo
 6626.                   $I_A2 = 1 + $I_A2
 6626.                   if ( $I_A2 >= 2 ) exit
 6626.                enddo
 6626.                $I_A3 = 1 + $I_A3
 6626.                if ( $I_A3 >= 3 ) exit
 6626.             enddo
 6626.             $I_A4 = 1 + $I_A4
 6626.             if ( $I_A4 >= 2 ) exit
 6626.          enddo
 6629.          _free( t$3352 )
 6626.          $F_A41 = nmax
 6626.          $I_A2 = 0
 6626.          do
 6626.             $I_A1 = 0
 6626. !dir$ ivdep
 6626.             do
 6626.                satcap(1 + $I_A1, 1 + $I_A2) = t$3343(1 + $I_A1, 1 + $I_A2)
 6626.                $I_A1 = 1 + $I_A1
 6626.                if ( $I_A1 >= $F_A41 ) exit
 6626.             enddo
 6626.             $I_A2 = 1 + $I_A2
 6626.             if ( $I_A2 >= 2 ) exit
 6626.          enddo
 6628.          _free( t$3344 )
 6628.          _free( t$3338 )
 6628.       endif
 6634.       $ncount_S2 = 0
 6635.       if ( ncols > 0 ) then
 6635.          $I_L6635_10 = 0
 6635. !dir$ ivdep
 6635.          do
 6636.             if ( imask(1 + $I_L6635_10) > 0 ) then
 6637.                $ncount_S2 = 1 + $ncount_S2
 6638.                avisb(1 + $I_L6635_10) = salb($ncount_S2, 1, 1)
 6639.                avisd(1 + $I_L6635_10) = salb($ncount_S2, 1, 2)
 6640.                anirb(1 + $I_L6635_10) = salb($ncount_S2, 2, 1)
 6641.                anird(1 + $I_L6635_10) = salb($ncount_S2, 2, 2)
 6642.             else if ( abs( tsea(1 + $I_L6635_10) ) >= 271.17000000000002 ) then
 6643.                $f_S3 = max( 0.0, zenith(1 + $I_L6635_10) )
 6646.                avisb(1 + $I_L6635_10) = ( 1.2347e-1 + $f_S3 * ( 3.4666999999999998e-1 + $f_S3 * ( -1.7484999999999999 + $f_S3 * ( 2.0463 + -7.4839e-1 * $f_S3 ) ) ) )
 6647.                avisd(1 + $I_L6635_10) = 4.19e-2
 6648.                anirb(1 + $I_L6635_10) = ( 1.2347e-1 + $f_S3 * ( 3.4666999999999998e-1 + $f_S3 * ( -1.7484999999999999 + $f_S3 * ( 2.0463 + -7.4839e-1 * $f_S3 ) ) ) )
 6649.                anird(1 + $I_L6635_10) = 4.19e-2
 6649.             else
 6651.                avisb(1 + $I_L6635_10) = 8.0000000000000004e-1
 6652.                avisd(1 + $I_L6635_10) = 8.0000000000000004e-1
 6653.                anirb(1 + $I_L6635_10) = 4.0000000000000002e-1
 6654.                anird(1 + $I_L6635_10) = 4.0000000000000002e-1
 6654.             endif
 6656.             $I_L6635_10 = 1 + $I_L6635_10
 6655.             if ( $I_L6635_10 >= ncols ) exit
 6655.          enddo
 6655.       endif
 6658.       return
 6658.       end
 6658.       
 6664.       
 6664.       subroutine radalb( ncols, mon, nmax, itype, tc, tg, capac, satcap, extk, radfac, closs, gloss, thermk, p1f, p2f, zlwup, salb, tgeff, cosz, nsx, latitu )
 6664.       t$1237 = ncols
 6747.       t$2184 = _zla( 0, ncols )
 6664.       t$2185 = _zla( 0, ncols )
 6664.       t$2186 = 2 * _zla( 0, ncols )
 6664.       t$2187 = 2 * _zla( 0, ncols )
 6664.       t$2188 = 2 * _zla( 0, ncols )
 6664.       t$2189 = 6 * _zla( 0, ncols )
 6664.       t$2190 = 12 * _zla( 0, ncols )
 6664.       t$2191 = 2 * _zla( 0, ncols )
 6664.       t$2192 = 4 * _zla( 0, ncols )
 6773.       t$2195 = 8 * _zla( 0, ncols )
 6775.       t$2196 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 6775.       t$2198 = t$2196 + 8 * _zla( 0, ncols )
 6772.       t$2199 = 8 * ( 7 + t$2196 + 8 * _zla( 0, ncols ) ) / 8
 6772.       t$2201 = t$2199 + 8 * _zla( 0, ncols )
 6780.       t$2202 = 8 * ( 7 + t$2199 + 8 * _zla( 0, ncols ) ) / 8
 6780.       t$2204 = t$2202 + 8 * _zla( 0, ncols )
 6781.       t$2205 = 8 * ( 7 + t$2202 + 8 * _zla( 0, ncols ) ) / 8
 6781.       t$2207 = t$2205 + 8 * _zla( 0, ncols )
 6664.       t$1277 = nmax
 6807.       t$2208 = _zla( 0, nmax )
 6807.       t$2210 = t$2205 + 8 * _zla( 0, ncols ) + 4 * _zla( 0, nmax )
 6806.       t$2212 = t$2205 + 8 * _zla( 0, ncols ) + 8 * _zla( 0, nmax )
 6774.       t$2213 = 8 * ( 7 + t$2205 + 8 * _zla( 0, ncols ) + 8 * _zla( 0, nmax ) ) / 8
 6774.       t$2215 = t$2213 + 8 * _zla( 0, ncols )
 6792.       t$2217 = t$2213 + 8 * _zla( 0, ncols ) + 4 * _zla( 0, nmax )
 6789.       t$2219 = t$2213 + 12 * _zla( 0, ncols ) + 4 * _zla( 0, nmax )
 6788.       t$2221 = t$2213 + 4 * _zla( 0, nmax ) + 16 * _zla( 0, ncols )
 6776.       t$2222 = 8 * ( 7 + t$2213 + 4 * _zla( 0, nmax ) + 16 * _zla( 0, ncols ) ) / 8
 6776.       t$2224 = t$2222 + 8 * _zla( 0, ncols )
 6777.       t$2225 = 8 * ( 7 + t$2222 + 8 * _zla( 0, ncols ) ) / 8
 6777.       t$2227 = t$2225 + 8 * _zla( 0, ncols )
 6778.       t$2228 = 8 * ( 7 + t$2225 + 8 * _zla( 0, ncols ) ) / 8
 6778.       t$2230 = t$2228 + 8 * _zla( 0, ncols )
 6664.       t$2231 = _zla( 0, nmax )
 6664.       t$2232 = 18 * _zla( 0, nmax )
 6785.       t$2233 = 8 * ( 7 + t$2228 + 8 * _zla( 0, ncols ) ) / 8
 6785.       t$2235 = t$2233 + 144 * _zla( 0, nmax )
 6779.       t$2236 = 8 * ( 7 + t$2233 + 144 * _zla( 0, nmax ) ) / 8
 6779.       t$2238 = t$2236 + 8 * _zla( 0, ncols )
 6769.       t$2239 = 8 * ( 7 + t$2236 + 8 * _zla( 0, ncols ) ) / 8
 6769.       t$2241 = t$2239 + 16 * _zla( 0, ncols )
 6782.       t$2242 = 8 * ( 7 + t$2239 + 16 * _zla( 0, ncols ) ) / 8
 6782.       t$2244 = t$2242 + 8 * _zla( 0, ncols )
 6768.       t$2245 = 8 * ( 7 + t$2242 + 8 * _zla( 0, ncols ) ) / 8
 6768.       t$2247 = t$2245 + 16 * _zla( 0, ncols )
 6664.       t$2193 = int( _alloc( t$2245 + 16 * _zla( 0, ncols ) ), 8 )
 6773.       t$2194 = t$2193
 6775.       t$2197 = t$2196 + t$2193
 6772.       t$2200 = t$2199 + t$2193
 6780.       t$2203 = t$2202 + t$2193
 6781.       t$2206 = t$2205 + t$2193
 6807.       t$2209 = t$2205 + t$2193 + 8 * _zla( 0, ncols )
 6806.       t$2211 = t$2205 + t$2193 + 8 * _zla( 0, ncols ) + 4 * _zla( 0, nmax )
 6774.       t$2214 = t$2213 + t$2193
 6792.       t$2216 = t$2213 + t$2193 + 8 * _zla( 0, ncols )
 6789.       t$2218 = t$2213 + t$2193 + 8 * _zla( 0, ncols ) + 4 * _zla( 0, nmax )
 6788.       t$2220 = t$2213 + t$2193 + 12 * _zla( 0, ncols ) + 4 * _zla( 0, nmax )
 6776.       t$2223 = t$2222 + t$2193
 6777.       t$2226 = t$2225 + t$2193
 6778.       t$2229 = t$2228 + t$2193
 6785.       t$2234 = t$2233 + t$2193
 6779.       t$2237 = t$2236 + t$2193
 6769.       t$2240 = t$2239 + t$2193
 6782.       t$2243 = t$2242 + t$2193
 6768.       t$2246 = t$2245 + t$2193
 6809.       if ( nmax > 0 ) then
 6813.          $SC_vcover_gbl_I8 = vcover_gbl%dim_1%EX
 6813.          $SC_vcover_gbl_I9 = vcover_gbl%dim_1%LB
 6813.          $SC_vcover_gbl_I11 = vcover_gbl%dim_2%SM
 6813.          $SC_vcover_gbl_I10 = vcover_gbl%dim_2%EX
 6813.          $SC_vcover_gbl_I12 = vcover_gbl%dim_2%LB
 6813.          $SC_vcover_gbl_I14 = vcover_gbl%dim_3%SM
 6813.          $SC_vcover_gbl_I13 = vcover_gbl%dim_3%EX
 6813.          $SC_vcover_gbl_I15 = vcover_gbl%dim_3%LB
 6811.          $SC_zlt_gbl_I0 = zlt_gbl%dim_1%EX
 6811.          $SC_zlt_gbl_I1 = zlt_gbl%dim_1%LB
 6811.          $SC_zlt_gbl_I3 = zlt_gbl%dim_2%SM
 6811.          $SC_zlt_gbl_I2 = zlt_gbl%dim_2%EX
 6811.          $SC_zlt_gbl_I4 = zlt_gbl%dim_2%LB
 6811.          $SC_zlt_gbl_I6 = zlt_gbl%dim_3%SM
 6811.          $SC_zlt_gbl_I5 = zlt_gbl%dim_3%EX
 6811.          $SC_zlt_gbl_I7 = zlt_gbl%dim_3%LB
 6809.          $I_L6809_184 = 0
 6809. !dir$ ivdep
 6809.          do
 6811.             zlt2(1 + $I_L6809_184, 1) = (zlt_gbl%base_addr)(1 + $I_L6809_184, latitu, 1, 0)
 6812.             zlt2(1 + $I_L6809_184, 2) = (zlt_gbl%base_addr)(1 + $I_L6809_184, latitu, 2, 0)
 6813.             vcover(1 + $I_L6809_184, 1) = (vcover_gbl%base_addr)(1 + $I_L6809_184, latitu, 1, 0)
 6814.             vcover(1 + $I_L6809_184, 2) = (vcover_gbl%base_addr)(1 + $I_L6809_184, latitu, 2, 0)
 6815.             f(1 + $I_L6809_184) = max( 1.746e-2, cosz(1 + $I_L6809_184) )
 6816.             $I_L6809_184 = 1 + $I_L6809_184
 6809.             if ( $I_L6809_184 >= nmax ) exit
 6809.          enddo
 6820.          $I_L6820_186 = 0
 6820. !dir$ ivdep
 6820.          do
 6821.             $deltg_WR0_R0 = 273.16000000000003 + -tg(1 + $I_L6820_186)
 6822.             fmelt(1 + $I_L6820_186) = 1.0
 6823.             if ( abs( $deltg_WR0_R0 ) < 5.0e-1 ) then
 6823.                if ( $deltg_WR0_R0 > 0.0 ) then
 6824.                   fmelt(1 + $I_L6820_186) = 5.9999999999999998e-1
 6824.                endif
 6824.             endif
 6846.             if ( tg(1 + $I_L6820_186) > 273.16000000000003 ) then
 6847.                scov2(1 + $I_L6820_186) = 0.0
 6847.             else
 6849.                scov2(1 + $I_L6820_186) = min( 1.0, 250.0 * capac(1 + $I_L6820_186, 2) )
 6849.             endif
 6826.             $I_L6820_186 = 1 + $I_L6820_186
 6825.             if ( $I_L6820_186 >= nmax ) exit
 6825.          enddo
 6857.          $I_L6857_192 = 0
 6857. !dir$ ivdep
 6857.          do
 6858.             ml(1 + $I_L6857_192) = cvmg( 2, 1, fmelt(1 + $I_L6857_192) /= 1.0 )
 6863.             $I_L6857_192 = 1 + $I_L6857_192
 6857.             if ( $I_L6857_192 >= nmax ) exit
 6857.          enddo
 6857.       endif
 6827.       $F_A33 = ncols
 6827.       if ( ncols > 0 ) then
 6827.          $I_L6827_226 = 0
 6827. !dir$ ivdep
 6827.          do
 6827.             ntyp(1 + $I_L6827_226) = itype(1 + $I_L6827_226)
 6827.             $I_L6827_226 = 1 + $I_L6827_226
 6827.             if ( $I_L6827_226 >= $F_A33 ) exit
 6827.          enddo
 6827.       endif
 6828.       if ( nmax > 0 ) then
 6833.          $SC_z2_I21 = z2%dim_1%EX
 6833.          $SC_z2_I22 = z2%dim_1%LB
 6833.          $SC_z2_I24 = z2%dim_2%SM
 6833.          $SC_z2_I23 = z2%dim_2%EX
 6833.          $SC_z2_I25 = z2%dim_2%LB
 6832.          $SC_z1_I16 = z1%dim_1%EX
 6832.          $SC_z1_I17 = z1%dim_1%LB
 6832.          $SC_z1_I19 = z1%dim_2%SM
 6832.          $SC_z1_I18 = z1%dim_2%EX
 6832.          $SC_z1_I20 = z1%dim_2%LB
 6828.          $I_L6828_188 = 0
 6828. !dir$ ivdep
 6828.          do
 6830.             $satcap_WR0_R1 = 1.0e-4 * zlt2(1 + $I_L6828_188, 1)
 6831.             satcap(1 + $I_L6828_188, 2) = 1.0e-4 * zlt2(1 + $I_L6828_188, 2)
 6832.             $depcov_WR0_R2 = max( 0.0, -(z1%base_addr)(ntyp(1 + $I_L6828_188), mon(1 + $I_L6828_188), 0) + 5.0 * capac(1 + $I_L6828_188, 2) )
 6833.             $depcov_WR0_R2 = min( $depcov_WR0_R2, 9.4999999999999996e-1 * ( (z2%base_addr)(ntyp(1 + $I_L6828_188), mon(1 + $I_L6828_188), 0) + -(z1%base_addr)(ntyp(1 + $I_L6828_188), mon(1 + $I_L6828_188), 0) ) )
 6834.             $satcap_WR0_R1 = $satcap_WR0_R1 * ( 1.0 + -( $depcov_WR0_R2 * 1.0/( (z2%base_addr)(ntyp(1 + $I_L6828_188), mon(1 + $I_L6828_188), 0) + -(z1%base_addr)(ntyp(1 + $I_L6828_188), mon(1 + $I_L6828_188), 0) ) ) )
 6834.             satcap(1 + $I_L6828_188, 1) = $satcap_WR0_R1
 6836.             $I_L6828_188 = 1 + $I_L6828_188
 6828.             if ( $I_L6828_188 >= nmax ) exit
 6828.          enddo
 6838.          $I_L6838_190 = 0
 6838. !dir$ ivdep
 6838.          do
 6839.             scov(1 + $I_L6838_190) = 0.0
 6840.             if ( tc(1 + $I_L6838_190) <= 273.16000000000003 ) then
 6841.                scov(1 + $I_L6838_190) = min( 5.0e-1, ( capac(1 + $I_L6838_190, 1) * 1.0/satcap(1 + $I_L6838_190, 1) ) )
 6841.             endif
 6843.             $I_L6838_190 = 1 + $I_L6838_190
 6842.             if ( $I_L6838_190 >= nmax ) exit
 6842.          enddo
 6890.          $I_L6890_200 = 0
 6890. !dir$ ivdep
 6890.          do
 6891.             flagscov(1 + $I_L6890_200) = scov(1 + $I_L6890_200) < 2.5000000000000001e-2 .and. scov2(1 + $I_L6890_200) < 2.5000000000000001e-2
 6892.             $I_L6890_200 = 1 + $I_L6890_200
 6890.             if ( $I_L6890_200 >= nmax ) exit
 6890.          enddo
 6890.       endif
 6856.       $F_A34 = ncols
 6856.       if ( ncols > 0 ) then
 6856.          $I_L6856_228 = 0
 6856. !dir$ ivdep
 6856.          do
 6856.             monx(1 + $I_L6856_228) = mon(1 + $I_L6856_228)
 6856.             $I_L6856_228 = 1 + $I_L6856_228
 6856.             if ( $I_L6856_228 >= $F_A34 ) exit
 6856.          enddo
 6856.       endif
 6864.       $F_A35 = ncols
 6864.       if ( ncols > 0 ) then
 6864.          $I_L6864_230 = 0
 6864. !dir$ ivdep
 6864.          do
 6864.             ntyp(1 + $I_L6864_230) = itype(1 + $I_L6864_230)
 6864.             $I_L6864_230 = 1 + $I_L6864_230
 6864.             if ( $I_L6864_230 >= $F_A35 ) exit
 6864.          enddo
 6864.       endif
 6866.       if ( nmax > 0 ) then
 6866.          $I_L6866_194 = 0
 6866. !dir$ ivdep
 6866.          do
 6867.             mon(1 + $I_L6866_194) = monx(1 + $I_L6866_194)
 6868.             flagtyp(1 + $I_L6866_194) = .true.
 6869.             if ( ntyp(1 + $I_L6866_194) == 13 ) then
 6869.                ntyp(1 + $I_L6866_194) = 11
 6869.             endif
 6870.             if ( ntyp(1 + $I_L6866_194) == 12 ) then
 6870.                if ( nsx(1 + $I_L6866_194) > 0 ) then
 6871.                   ntyp(1 + $I_L6866_194) = 13
 6872.                   mon(1 + $I_L6866_194) = nsx(1 + $I_L6866_194)
 6873.                   if ( nsx(1 + $I_L6866_194) == 1 ) then
 6873.                      if ( monx(1 + $I_L6866_194) >= 9 ) then
 6873.                         if ( monx(1 + $I_L6866_194) <= 11 ) then
 6873.                            mon(1 + $I_L6866_194) = 7
 6873.                         endif
 6873.                      endif
 6873.                   endif
 6874.                   flagtyp(1 + $I_L6866_194) = .false.
 6874.                endif
 6874.             endif
 6876.             $I_L6866_194 = 1 + $I_L6866_194
 6875.             if ( $I_L6866_194 >= nmax ) exit
 6875.          enddo
 6875.       endif
 6879.       $SC_xmiu_I26 = xmiu%dim_1%EX
 6879.       $SC_xmiu_I27 = xmiu%dim_1%LB
 6879.       $SC_xmiu_I29 = xmiu%dim_2%SM
 6879.       $SC_xmiu_I28 = xmiu%dim_2%EX
 6879.       $SC_xmiu_I30 = xmiu%dim_2%LB
 6878.       if ( nmax > 0 ) then
 6878.          $SI_L6878_196_G1 = 0
 6878.          do
 6877.             $I_L6877_236 = 0
 6877. !dir$ blocking_size( 3, 3 )
 6877.             do
 6878.                $I_L6878_248 = 0
 6878. !dir$ ivdep
 6878. !dir$ blocking_size( 256, 256 )
 6878.                do
 6879.                   xmi1(mon(1 + $I_L6878_248 + 256 * $SI_L6878_196_G1), 1 + $I_L6877_236) = (xmiu%base_addr)(mon(1 + $I_L6878_248 + 256 * $SI_L6878_196_G1), 1 + $I_L6877_236, 0)
 6878.                   $I_L6878_248 = 1 + $I_L6878_248
 6878.                   if ( $I_L6878_248 >= min( nmax, 256 + 256 * $SI_L6878_196_G1 ) + -256 * $SI_L6878_196_G1 ) exit
 6878.                enddo
 6881.                $I_L6877_236 = 1 + $I_L6877_236
 6881.                if ( $I_L6877_236 >= 3 ) exit
 6881.             enddo
 6878.             $SI_L6878_196_G1 = 1 + $SI_L6878_196_G1
 6880.             if ( $SI_L6878_196_G1 >= _rsh( 255 + nmax, 8 ) ) exit
 6880.          enddo
 6880.       endif
 6884.       $SC_xmiw_I31 = xmiw%dim_1%EX
 6884.       $SC_xmiw_I32 = xmiw%dim_1%LB
 6884.       $SC_xmiw_I34 = xmiw%dim_2%SM
 6884.       $SC_xmiw_I33 = xmiw%dim_2%EX
 6884.       $SC_xmiw_I35 = xmiw%dim_2%LB
 6883.       if ( nmax > 0 ) then
 6883.          $SI_L6883_198_G4 = 0
 6883.          do
 6882.             $I_L6882_238 = 0
 6882. !dir$ blocking_size( 3, 3 )
 6882.             do
 6883.                $I_L6883_251 = 0
 6883. !dir$ ivdep
 6883. !dir$ blocking_size( 256, 256 )
 6883.                do
 6884.                   if ( flagtyp(1 + $I_L6883_251 + 256 * $SI_L6883_198_G4) == .false. ) then
 6884.                      xmi1(mon(1 + $I_L6883_251 + 256 * $SI_L6883_198_G4), 1 + $I_L6882_238) = (xmiw%base_addr)(mon(1 + $I_L6883_251 + 256 * $SI_L6883_198_G4), 1 + $I_L6882_238, 0)
 6884.                   endif
 6883.                   $I_L6883_251 = 1 + $I_L6883_251
 6884.                   if ( $I_L6883_251 >= min( nmax, 256 + 256 * $SI_L6883_198_G4 ) + -256 * $SI_L6883_198_G4 ) exit
 6884.                enddo
 6886.                $I_L6882_238 = 1 + $I_L6882_238
 6886.                if ( $I_L6882_238 >= 3 ) exit
 6886.             enddo
 6883.             $SI_L6883_198_G4 = 1 + $SI_L6883_198_G4
 6885.             if ( $SI_L6883_198_G4 >= _rsh( 255 + nmax, 8 ) ) exit
 6885.          enddo
 6885.       endif
 6899.       $SC_cledfu_I47 = cledfu%dim_1%EX
 6899.       $SC_cledfu_I48 = cledfu%dim_1%LB
 6899.       $SC_cledfu_I50 = cledfu%dim_2%SM
 6899.       $SC_cledfu_I49 = cledfu%dim_2%EX
 6899.       $SC_cledfu_I51 = cledfu%dim_2%LB
 6899.       $SC_cledfu_I53 = cledfu%dim_3%SM
 6899.       $SC_cledfu_I52 = cledfu%dim_3%EX
 6899.       $SC_cledfu_I54 = cledfu%dim_3%LB
 6897.       $SC_cledir_I36 = cledir%dim_1%EX
 6897.       $SC_cledir_I37 = cledir%dim_1%LB
 6897.       $SC_cledir_I39 = cledir%dim_2%SM
 6897.       $SC_cledir_I38 = cledir%dim_2%EX
 6897.       $SC_cledir_I40 = cledir%dim_2%LB
 6897.       $SC_cledir_I42 = cledir%dim_3%SM
 6897.       $SC_cledir_I41 = cledir%dim_3%EX
 6897.       $SC_cledir_I43 = cledir%dim_3%LB
 6897.       $SC_cledir_I45 = cledir%dim_4%SM
 6897.       $SC_cledir_I44 = cledir%dim_4%EX
 6897.       $SC_cledir_I46 = cledir%dim_4%LB
 6895.       if ( nmax > 0 ) then
 6894.          $I_L6894_240 = 0
 6894. !dir$ blocking_size( 1, 1 )
 6894.          do
 6895.             $I_L6895_202 = 0
 6895. !dir$ ivdep
 6895. !dir$ blocking_size( 256, 256 )
 6895.             do
 6896.                if ( flagscov(1 + $I_L6895_202) /= .false. ) then
 6897.                   temp(1 + $I_L6895_202, 1 + $I_L6894_240) = (cledir%base_addr)(ntyp(1 + $I_L6895_202), mon(1 + $I_L6895_202), 1 + $I_L6894_240, 1, 0) + f(1 + $I_L6895_202) * (cledir%base_addr)(ntyp(1 + $I_L6895_202), mon(1 + $I_L6895_202), 1 + $I_L6894_240, 2, 0) + (cledir%base_addr)(ntyp(1 + $I_L6895_202), mon(1 + $I_L6895_202), 1 + $I_L6894_240, 3, 0) * ( f(1 + $I_L6895_202) * f(1 + $I_L6895_202) )
 6899.                   temp(1 + $I_L6895_202, 10 + $I_L6894_240) = (cledfu%base_addr)(ntyp(1 + $I_L6895_202), mon(1 + $I_L6895_202), 1 + $I_L6894_240, 0)
 6899.                endif
 6901.                $I_L6895_202 = 1 + $I_L6895_202
 6900.                if ( $I_L6895_202 >= nmax ) exit
 6900.             enddo
 6902.             $I_L6894_240 = 1 + $I_L6894_240
 6901.             if ( $I_L6894_240 >= 9 ) exit
 6901.          enddo
 6901.       endif
 6903.       $F_A36 = nmax
 6903.       if ( nmax > 0 ) then
 6903.          $I_L6903_232 = 0
 6903. !dir$ ivdep
 6903.          do
 6903.             flagscov(1 + $I_L6903_232) = flagscov(1 + $I_L6903_232) == .false.
 6903.             $I_L6903_232 = 1 + $I_L6903_232
 6903.             if ( $I_L6903_232 >= $F_A36 ) exit
 6903.          enddo
 6903.       endif
 6912.       $SC_cedfu_I66 = cedfu%dim_1%EX
 6912.       $SC_cedfu_I67 = cedfu%dim_1%LB
 6912.       $SC_cedfu_I69 = cedfu%dim_2%SM
 6912.       $SC_cedfu_I68 = cedfu%dim_2%EX
 6912.       $SC_cedfu_I70 = cedfu%dim_2%LB
 6912.       $SC_cedfu_I72 = cedfu%dim_3%SM
 6912.       $SC_cedfu_I71 = cedfu%dim_3%EX
 6912.       $SC_cedfu_I73 = cedfu%dim_3%LB
 6910.       $SC_cedir_I55 = cedir%dim_1%EX
 6910.       $SC_cedir_I56 = cedir%dim_1%LB
 6910.       $SC_cedir_I58 = cedir%dim_2%SM
 6910.       $SC_cedir_I57 = cedir%dim_2%EX
 6910.       $SC_cedir_I59 = cedir%dim_2%LB
 6910.       $SC_cedir_I61 = cedir%dim_3%SM
 6910.       $SC_cedir_I60 = cedir%dim_3%EX
 6910.       $SC_cedir_I62 = cedir%dim_3%LB
 6910.       $SC_cedir_I64 = cedir%dim_4%SM
 6910.       $SC_cedir_I63 = cedir%dim_4%EX
 6910.       $SC_cedir_I65 = cedir%dim_4%LB
 6905.       if ( nmax > 0 ) then
 6904.          $I_L6904_242 = 0
 6904. !dir$ blocking_size( 1, 1 )
 6904.          do
 6905.             $I_L6905_204 = 0
 6905. !dir$ ivdep
 6905. !dir$ blocking_size( 256, 256 )
 6905.             do
 6906.                if ( flagscov(1 + $I_L6905_204) /= .false. ) then
 6910.                   temp(1 + $I_L6905_204, 1 + $I_L6904_242) = (cedir%base_addr)(ntyp(1 + $I_L6905_204), mon(1 + $I_L6905_204), 1 + $I_L6904_242, 1, 0) + f(1 + $I_L6905_204) * (cedir%base_addr)(ntyp(1 + $I_L6905_204), mon(1 + $I_L6905_204), 1 + $I_L6904_242, 2, 0) + (cedir%base_addr)(ntyp(1 + $I_L6905_204), mon(1 + $I_L6905_204), 1 + $I_L6904_242, 3, 0) * ( f(1 + $I_L6905_204) * f(1 + $I_L6905_204) )
 6912.                   temp(1 + $I_L6905_204, 10 + $I_L6904_242) = (cedfu%base_addr)(ntyp(1 + $I_L6905_204), mon(1 + $I_L6905_204), 1 + $I_L6904_242, 0)
 6912.                endif
 6914.                $I_L6905_204 = 1 + $I_L6905_204
 6913.                if ( $I_L6905_204 >= nmax ) exit
 6913.             enddo
 6915.             $I_L6904_242 = 1 + $I_L6904_242
 6914.             if ( $I_L6904_242 >= 9 ) exit
 6914.          enddo
 6914.       endif
 6924.       $SC_cedfu2_I91 = cedfu2%dim_1%EX
 6924.       $SC_cedfu2_I92 = cedfu2%dim_1%LB
 6924.       $SC_cedfu2_I94 = cedfu2%dim_2%SM
 6924.       $SC_cedfu2_I93 = cedfu2%dim_2%EX
 6924.       $SC_cedfu2_I95 = cedfu2%dim_2%LB
 6924.       $SC_cedfu2_I97 = cedfu2%dim_3%SM
 6924.       $SC_cedfu2_I96 = cedfu2%dim_3%EX
 6924.       $SC_cedfu2_I98 = cedfu2%dim_3%LB
 6924.       $SC_cedfu2_I100 = cedfu2%dim_4%SM
 6924.       $SC_cedfu2_I99 = cedfu2%dim_4%EX
 6924.       $SC_cedfu2_I101 = cedfu2%dim_4%LB
 6924.       $SC_cedfu2_I103 = cedfu2%dim_5%SM
 6924.       $SC_cedfu2_I102 = cedfu2%dim_5%EX
 6924.       $SC_cedfu2_I104 = cedfu2%dim_5%LB
 6921.       $SC_cedir2_I74 = cedir2%dim_1%EX
 6921.       $SC_cedir2_I75 = cedir2%dim_1%LB
 6921.       $SC_cedir2_I77 = cedir2%dim_2%SM
 6921.       $SC_cedir2_I76 = cedir2%dim_2%EX
 6921.       $SC_cedir2_I78 = cedir2%dim_2%LB
 6921.       $SC_cedir2_I80 = cedir2%dim_3%SM
 6921.       $SC_cedir2_I79 = cedir2%dim_3%EX
 6921.       $SC_cedir2_I81 = cedir2%dim_3%LB
 6921.       $SC_cedir2_I83 = cedir2%dim_4%SM
 6921.       $SC_cedir2_I82 = cedir2%dim_4%EX
 6921.       $SC_cedir2_I84 = cedir2%dim_4%LB
 6921.       $SC_cedir2_I86 = cedir2%dim_5%SM
 6921.       $SC_cedir2_I85 = cedir2%dim_5%EX
 6921.       $SC_cedir2_I87 = cedir2%dim_5%LB
 6921.       $SC_cedir2_I89 = cedir2%dim_6%SM
 6921.       $SC_cedir2_I88 = cedir2%dim_6%EX
 6921.       $SC_cedir2_I90 = cedir2%dim_6%LB
 6917.       if ( nmax > 0 ) then
 6916.          $SI_L6916_244_G7 = 0
 6916.          do
 6917.             $SI_L6917_206_G10 = 0
 6917.             do
 6916.                $I_L6916_257 = 0
 6916. !dir$ shortloop16
 6916. !dir$ ivdep
 6916. !dir$ blocking_size( 4, 4 )
 6916.                do
 6917.                   $I_L6917_254 = 0
 6917. !dir$ blocking_size( 256, 256 )
 6917.                   do
 6918.                      if ( flagscov(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10) /= .false. ) then
 6918.                         if ( ntyp(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10) == 11 ) then
 6921.                            temp(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10, 1 + $I_L6916_257 + 4 * $SI_L6916_244_G7) = temp(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10, 1 + $I_L6916_257 + 4 * $SI_L6916_244_G7) + (cedir2%base_addr)(ml(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10), ntyp(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10), mon(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10), 1 + $I_L6916_257 + 4 * $SI_L6916_244_G7, 3, 1, 0) + scov2(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10) * (cedir2%base_addr)(ml(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10), ntyp(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10), mon(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10), 1 + $I_L6916_257 + 4 * $SI_L6916_244_G7, 3, 2, 0) + (cedir2%base_addr)(ml(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10), ntyp(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10), mon(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10), 1 + $I_L6916_257 + 4 * $SI_L6916_244_G7, 3, 3, 0) * ( scov2(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10) * scov2(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10) )
 6924.                            temp(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10, 10 + $I_L6916_257 + 4 * $SI_L6916_244_G7) = temp(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10, 10 + $I_L6916_257 + 4 * $SI_L6916_244_G7) + (cedfu2%base_addr)(ml(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10), ntyp(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10), mon(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10), 1 + $I_L6916_257 + 4 * $SI_L6916_244_G7, 1, 0) + scov2(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10) * (cedfu2%base_addr)(ml(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10), ntyp(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10), mon(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10), 1 + $I_L6916_257 + 4 * $SI_L6916_244_G7, 2, 0) + (cedfu2%base_addr)(ml(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10), ntyp(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10), mon(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10), 1 + $I_L6916_257 + 4 * $SI_L6916_244_G7, 3, 0) * ( scov2(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10) * scov2(1 + $I_L6917_254 + 256 * $SI_L6917_206_G10) )
 6924.                         endif
 6924.                      endif
 6917.                      $I_L6917_254 = 1 + $I_L6917_254
 6927.                      if ( $I_L6917_254 >= min( nmax, 256 + 256 * $SI_L6917_206_G10 ) + -256 * $SI_L6917_206_G10 ) exit
 6927.                   enddo
 6916.                   $I_L6916_257 = 1 + $I_L6916_257
 6916.                   if ( $I_L6916_257 >= cvmg( 4, 2, $SI_L6916_244_G7 <= 0 ) ) exit
 6916.                enddo
 6917.                $SI_L6917_206_G10 = 1 + $SI_L6917_206_G10
 6928.                if ( $SI_L6917_206_G10 >= _rsh( 255 + nmax, 8 ) ) exit
 6928.             enddo
 6916.             $SI_L6916_244_G7 = 1 + $SI_L6916_244_G7
 6916.             if ( $SI_L6916_244_G7 >= 2 ) exit
 6916.          enddo
 6970.          $SC_cedfu1_I122 = cedfu1%dim_1%EX
 6970.          $SC_cedfu1_I123 = cedfu1%dim_1%LB
 6970.          $SC_cedfu1_I125 = cedfu1%dim_2%SM
 6970.          $SC_cedfu1_I124 = cedfu1%dim_2%EX
 6970.          $SC_cedfu1_I126 = cedfu1%dim_2%LB
 6970.          $SC_cedfu1_I128 = cedfu1%dim_3%SM
 6970.          $SC_cedfu1_I127 = cedfu1%dim_3%EX
 6970.          $SC_cedfu1_I129 = cedfu1%dim_3%LB
 6970.          $SC_cedfu1_I131 = cedfu1%dim_4%SM
 6970.          $SC_cedfu1_I130 = cedfu1%dim_4%EX
 6970.          $SC_cedfu1_I132 = cedfu1%dim_4%LB
 6970.          $SC_cedfu1_I134 = cedfu1%dim_5%SM
 6970.          $SC_cedfu1_I133 = cedfu1%dim_5%EX
 6970.          $SC_cedfu1_I135 = cedfu1%dim_5%LB
 6959.          $SC_cedir1_I105 = cedir1%dim_1%EX
 6959.          $SC_cedir1_I106 = cedir1%dim_1%LB
 6959.          $SC_cedir1_I108 = cedir1%dim_2%SM
 6959.          $SC_cedir1_I107 = cedir1%dim_2%EX
 6959.          $SC_cedir1_I109 = cedir1%dim_2%LB
 6959.          $SC_cedir1_I111 = cedir1%dim_3%SM
 6959.          $SC_cedir1_I110 = cedir1%dim_3%EX
 6959.          $SC_cedir1_I112 = cedir1%dim_3%LB
 6959.          $SC_cedir1_I114 = cedir1%dim_4%SM
 6959.          $SC_cedir1_I113 = cedir1%dim_4%EX
 6959.          $SC_cedir1_I115 = cedir1%dim_4%LB
 6959.          $SC_cedir1_I117 = cedir1%dim_5%SM
 6959.          $SC_cedir1_I116 = cedir1%dim_5%EX
 6959.          $SC_cedir1_I118 = cedir1%dim_5%LB
 6959.          $SC_cedir1_I120 = cedir1%dim_6%SM
 6959.          $SC_cedir1_I119 = cedir1%dim_6%EX
 6959.          $SC_cedir1_I121 = cedir1%dim_6%LB
 6989.          $SC_cedir2_I74 = cedir2%dim_1%EX
 6989.          $SC_cedir2_I75 = cedir2%dim_1%LB
 6989.          $SC_cedir2_I77 = cedir2%dim_2%SM
 6989.          $SC_cedir2_I76 = cedir2%dim_2%EX
 6989.          $SC_cedir2_I78 = cedir2%dim_2%LB
 6989.          $SC_cedir2_I80 = cedir2%dim_3%SM
 6989.          $SC_cedir2_I79 = cedir2%dim_3%EX
 6989.          $SC_cedir2_I81 = cedir2%dim_3%LB
 6989.          $SC_cedir2_I83 = cedir2%dim_4%SM
 6989.          $SC_cedir2_I82 = cedir2%dim_4%EX
 6989.          $SC_cedir2_I84 = cedir2%dim_4%LB
 6989.          $SC_cedir2_I86 = cedir2%dim_5%SM
 6989.          $SC_cedir2_I85 = cedir2%dim_5%EX
 6989.          $SC_cedir2_I87 = cedir2%dim_5%LB
 6989.          $SC_cedir2_I89 = cedir2%dim_6%SM
 6989.          $SC_cedir2_I88 = cedir2%dim_6%EX
 6989.          $SC_cedir2_I90 = cedir2%dim_6%LB
 6930.          $I_L6930_246 = 0
 6930.          do
 6931.             if ( flagscov(1 + $I_L6930_246) /= .false. ) then
 6931.                if ( ntyp(1 + $I_L6930_246) /= 11 ) then
 6932.                   $k2_S21 = 1
 6933.                   $k1_S20 = 2
 6935.                   $SC_f_I173 = f(1 + $I_L6930_246)
 6935.                   $SC_mon_I172 = mon(1 + $I_L6930_246)
 6934.                   $I_L6934_208 = 0
 6934. !dir$ ivdep
 6934.                   do
 6935.                      if ( $SC_f_I173 < xmi1($SC_mon_I172, 3 + -$I_L6934_208) ) then
 6938.                         $k1_S20 = ( 4 + -$I_L6934_208 )
 6939.                         $k2_S21 = ( 3 + -$I_L6934_208 )
 6939.                         goto 10
 6939.                      endif
 6942.                      $I_L6934_208 = 1 + $I_L6934_208
 6941.                      if ( $I_L6934_208 >= 3 ) exit
 6941.                   enddo
 6941.    10             continue
 6944.                   if ( $k1_S20 <= 3 ) then
 6944.                      xm1 = xmi1($SC_mon_I172, $k1_S20)
 6944.                   endif
 6948.                   if ( scov(1 + $I_L6930_246) > 2.5000000000000001e-2 ) then
 6951.                      if ( $k2_S21 >= 3 .orelse. $k2_S21 <= 1 ) then
 6952.                         $SCA_ml_I167 = ml(1 + $I_L6930_246)
 6952.                         $SCA_ntyp_I168 = ntyp(1 + $I_L6930_246)
 6952.                         $SCA_scov_I169 = scov(1 + $I_L6930_246)
 6952.                         $I_L6952_210 = 0
 6952. !dir$ ivdep
 6952.                         do
 6953.                            temp(1 + $I_L6930_246, 1 + $I_L6952_210) = temp(1 + $I_L6930_246, 1 + $I_L6952_210) + (cedir1%base_addr)($SCA_ml_I167, $SCA_ntyp_I168, $SC_mon_I172, 1 + $I_L6952_210, $k2_S21, 1, 0) + $SCA_scov_I169 * (cedir1%base_addr)($SCA_ml_I167, $SCA_ntyp_I168, $SC_mon_I172, 1 + $I_L6952_210, $k2_S21, 2, 0) + (cedir1%base_addr)($SCA_ml_I167, $SCA_ntyp_I168, $SC_mon_I172, 1 + $I_L6952_210, $k2_S21, 3, 0) * ( $SCA_scov_I169 * $SCA_scov_I169 )
 6956.                            $I_L6952_210 = 1 + $I_L6952_210
 6952.                            if ( $I_L6952_210 >= 6 ) exit
 6952.                         enddo
 6952.                      else
 6958.                         $SCA_scov_I148 = scov(1 + $I_L6930_246)
 6958.                         $SCA_ntyp_I153 = ntyp(1 + $I_L6930_246)
 6958.                         $SCA_ml_I158 = ml(1 + $I_L6930_246)
 6958.                         $SCA_xmi1_I170 = xmi1($SC_mon_I172, $k2_S21)
 6958.                         $I_L6958_212 = 0
 6958. !dir$ ivdep
 6958.                         do
 6959.                            $xtm1_S24 = (cedir1%base_addr)($SCA_ml_I158, $SCA_ntyp_I153, $SC_mon_I172, 1 + $I_L6958_212, $k1_S20, 1, 0) + $SCA_scov_I148 * (cedir1%base_addr)($SCA_ml_I158, $SCA_ntyp_I153, $SC_mon_I172, 1 + $I_L6958_212, $k1_S20, 2, 0) + (cedir1%base_addr)($SCA_ml_I158, $SCA_ntyp_I153, $SC_mon_I172, 1 + $I_L6958_212, $k1_S20, 3, 0) * ( $SCA_scov_I148 * $SCA_scov_I148 )
 6962.                            $xtm2_S23 = (cedir1%base_addr)($SCA_ml_I158, $SCA_ntyp_I153, $SC_mon_I172, 1 + $I_L6958_212, $k2_S21, 1, 0) + $SCA_scov_I148 * (cedir1%base_addr)($SCA_ml_I158, $SCA_ntyp_I153, $SC_mon_I172, 1 + $I_L6958_212, $k2_S21, 2, 0) + (cedir1%base_addr)($SCA_ml_I158, $SCA_ntyp_I153, $SC_mon_I172, 1 + $I_L6958_212, $k2_S21, 3, 0) * ( $SCA_scov_I148 * $SCA_scov_I148 )
 6965.                            temp(1 + $I_L6930_246, 1 + $I_L6958_212) = temp(1 + $I_L6930_246, 1 + $I_L6958_212) + ( 1.0/( $SCA_xmi1_I170 + -xm1 ) * ( $xtm1_S24 * ( $SCA_xmi1_I170 + -$SC_f_I173 ) + $xtm2_S23 * ( $SC_f_I173 + -xm1 ) ) )
 6967.                            $I_L6958_212 = 1 + $I_L6958_212
 6958.                            if ( $I_L6958_212 >= 6 ) exit
 6958.                         enddo
 6958.                      endif
 6969.                      $SCA_scov_I147 = scov(1 + $I_L6930_246)
 6969.                      $SCA_ntyp_I152 = ntyp(1 + $I_L6930_246)
 6969.                      $SCA_ml_I157 = ml(1 + $I_L6930_246)
 6969.                      $I_L6969_214 = 0
 6969. !dir$ ivdep
 6969.                      do
 6970.                         temp(1 + $I_L6930_246, 10 + $I_L6969_214) = temp(1 + $I_L6930_246, 10 + $I_L6969_214) + (cedfu1%base_addr)($SCA_ml_I157, $SCA_ntyp_I152, $SC_mon_I172, 1 + $I_L6969_214, 1, 0) + (cedfu1%base_addr)($SCA_ml_I157, $SCA_ntyp_I152, $SC_mon_I172, 1 + $I_L6969_214, 3, 0) * ( $SCA_scov_I147 * $SCA_scov_I147 ) + $SCA_scov_I147 * (cedfu1%base_addr)($SCA_ml_I157, $SCA_ntyp_I152, $SC_mon_I172, 1 + $I_L6969_214, 2, 0)
 6973.                         $I_L6969_214 = 1 + $I_L6969_214
 6969.                         if ( $I_L6969_214 >= 6 ) exit
 6969.                      enddo
 6969.                   endif
 6978.                   if ( scov2(1 + $I_L6930_246) > 2.5000000000000001e-2 ) then
 6981.                      if ( $k2_S21 >= 3 .orelse. $k2_S21 <= 1 ) then
 6982.                         $SCA_ntyp_I151 = ntyp(1 + $I_L6930_246)
 6982.                         $SCA_ml_I156 = ml(1 + $I_L6930_246)
 6982.                         $SCA_scov2_I171 = scov2(1 + $I_L6930_246)
 6982.                         $I_L6982_216 = 0
 6982. !dir$ ivdep
 6982.                         do
 6983.                            temp(1 + $I_L6930_246, 1 + $I_L6982_216) = temp(1 + $I_L6930_246, 1 + $I_L6982_216) + (cedir2%base_addr)($SCA_ml_I156, $SCA_ntyp_I151, $SC_mon_I172, 1 + $I_L6982_216, $k2_S21, 1, 0) + $SCA_scov2_I171 * (cedir2%base_addr)($SCA_ml_I156, $SCA_ntyp_I151, $SC_mon_I172, 1 + $I_L6982_216, $k2_S21, 2, 0) + (cedir2%base_addr)($SCA_ml_I156, $SCA_ntyp_I151, $SC_mon_I172, 1 + $I_L6982_216, $k2_S21, 3, 0) * ( $SCA_scov2_I171 * $SCA_scov2_I171 )
 6986.                            $I_L6982_216 = 1 + $I_L6982_216
 6982.                            if ( $I_L6982_216 >= 6 ) exit
 6982.                         enddo
 6982.                      else
 6988.                         $SCA_scov2_I145 = scov2(1 + $I_L6930_246)
 6988.                         $SCA_xmi1_I146 = xmi1($SC_mon_I172, $k2_S21)
 6988.                         $SCA_ntyp_I150 = ntyp(1 + $I_L6930_246)
 6988.                         $SCA_ml_I155 = ml(1 + $I_L6930_246)
 6988.                         $I_L6988_218 = 0
 6988. !dir$ ivdep
 6988.                         do
 6989.                            $xtm1_S29 = (cedir2%base_addr)($SCA_ml_I155, $SCA_ntyp_I150, $SC_mon_I172, 1 + $I_L6988_218, $k1_S20, 1, 0) + $SCA_scov2_I145 * (cedir2%base_addr)($SCA_ml_I155, $SCA_ntyp_I150, $SC_mon_I172, 1 + $I_L6988_218, $k1_S20, 2, 0) + (cedir2%base_addr)($SCA_ml_I155, $SCA_ntyp_I150, $SC_mon_I172, 1 + $I_L6988_218, $k1_S20, 3, 0) * ( $SCA_scov2_I145 * $SCA_scov2_I145 )
 6992.                            $xtm2_S28 = (cedir2%base_addr)($SCA_ml_I155, $SCA_ntyp_I150, $SC_mon_I172, 1 + $I_L6988_218, $k2_S21, 1, 0) + $SCA_scov2_I145 * (cedir2%base_addr)($SCA_ml_I155, $SCA_ntyp_I150, $SC_mon_I172, 1 + $I_L6988_218, $k2_S21, 2, 0) + (cedir2%base_addr)($SCA_ml_I155, $SCA_ntyp_I150, $SC_mon_I172, 1 + $I_L6988_218, $k2_S21, 3, 0) * ( $SCA_scov2_I145 * $SCA_scov2_I145 )
 6995.                            temp(1 + $I_L6930_246, 1 + $I_L6988_218) = temp(1 + $I_L6930_246, 1 + $I_L6988_218) + ( 1.0/( $SCA_xmi1_I146 + -xm1 ) * ( $xtm2_S28 * ( $SC_f_I173 + -xm1 ) + $xtm1_S29 * ( $SCA_xmi1_I146 + -$SC_f_I173 ) ) )
 6997.                            $I_L6988_218 = 1 + $I_L6988_218
 6988.                            if ( $I_L6988_218 >= 6 ) exit
 6988.                         enddo
 6988.                      endif
 6999.                      $SCA_scov2_I144 = scov2(1 + $I_L6930_246)
 6999.                      $SCA_ntyp_I149 = ntyp(1 + $I_L6930_246)
 6999.                      $SCA_ml_I154 = ml(1 + $I_L6930_246)
 7000.                      $SC_cedfu2_I174 = cedfu2%dim_1%EX
 7000.                      $SC_cedfu2_I175 = cedfu2%dim_1%LB
 7000.                      $SC_cedfu2_I177 = cedfu2%dim_2%SM
 7000.                      $SC_cedfu2_I176 = cedfu2%dim_2%EX
 7000.                      $SC_cedfu2_I178 = cedfu2%dim_2%LB
 7000.                      $SC_cedfu2_I180 = cedfu2%dim_3%SM
 7000.                      $SC_cedfu2_I179 = cedfu2%dim_3%EX
 7000.                      $SC_cedfu2_I181 = cedfu2%dim_3%LB
 7000.                      $SC_cedfu2_I183 = cedfu2%dim_4%SM
 7000.                      $SC_cedfu2_I182 = cedfu2%dim_4%EX
 7000.                      $SC_cedfu2_I184 = cedfu2%dim_4%LB
 7000.                      $SC_cedfu2_I186 = cedfu2%dim_5%SM
 7000.                      $SC_cedfu2_I185 = cedfu2%dim_5%EX
 7000.                      $SC_cedfu2_I187 = cedfu2%dim_5%LB
 6999.                      $I_L6999_220 = 0
 6999. !dir$ ivdep
 6999.                      do
 7000.                         temp(1 + $I_L6930_246, 10 + $I_L6999_220) = temp(1 + $I_L6930_246, 10 + $I_L6999_220) + (cedfu2%base_addr)($SCA_ml_I154, $SCA_ntyp_I149, $SC_mon_I172, 1 + $I_L6999_220, 1, 0) + (cedfu2%base_addr)($SCA_ml_I154, $SCA_ntyp_I149, $SC_mon_I172, 1 + $I_L6999_220, 3, 0) * ( $SCA_scov2_I144 * $SCA_scov2_I144 ) + $SCA_scov2_I144 * (cedfu2%base_addr)($SCA_ml_I154, $SCA_ntyp_I149, $SC_mon_I172, 1 + $I_L6999_220, 2, 0)
 7003.                         $I_L6999_220 = 1 + $I_L6999_220
 6999.                         if ( $I_L6999_220 >= 6 ) exit
 6999.                      enddo
 6999.                   endif
 6999.                endif
 6999.             endif
 7006.             $I_L6930_246 = 1 + $I_L6930_246
 7005.             if ( $I_L6930_246 >= nmax ) exit
 7005.          enddo
 7027.          $SC_cether_I136 = cether%dim_1%EX
 7027.          $SC_cether_I137 = cether%dim_1%LB
 7027.          $SC_cether_I139 = cether%dim_2%SM
 7027.          $SC_cether_I138 = cether%dim_2%EX
 7027.          $SC_cether_I140 = cether%dim_2%LB
 7027.          $SC_cether_I142 = cether%dim_3%SM
 7027.          $SC_cether_I141 = cether%dim_3%EX
 7027.          $SC_cether_I143 = cether%dim_3%LB
 7008.          $I_L7008_222 = 0
 7008. !dir$ ivdep
 7008.          do
 7009.             radfac(1 + $I_L7008_222, 1, 1, 2) = temp(1 + $I_L7008_222, 10)
 7010.             radfac(1 + $I_L7008_222, 1, 2, 2) = temp(1 + $I_L7008_222, 11)
 7011.             radfac(1 + $I_L7008_222, 2, 1, 2) = temp(1 + $I_L7008_222, 12)
 7012.             radfac(1 + $I_L7008_222, 2, 2, 2) = temp(1 + $I_L7008_222, 13)
 7013.             salb(1 + $I_L7008_222, 1, 2) = temp(1 + $I_L7008_222, 14)
 7014.             salb(1 + $I_L7008_222, 2, 2) = temp(1 + $I_L7008_222, 15)
 7015.             p2f(1 + $I_L7008_222) = temp(1 + $I_L7008_222, 16)
 7016.             extk(1 + $I_L7008_222, 1, 1, 2) = temp(1 + $I_L7008_222, 17)
 7017.             extk(1 + $I_L7008_222, 2, 1, 2) = temp(1 + $I_L7008_222, 18)
 7018.             radfac(1 + $I_L7008_222, 1, 1, 1) = temp(1 + $I_L7008_222, 1)
 7019.             radfac(1 + $I_L7008_222, 1, 2, 1) = temp(1 + $I_L7008_222, 2)
 7020.             radfac(1 + $I_L7008_222, 2, 1, 1) = temp(1 + $I_L7008_222, 3)
 7021.             radfac(1 + $I_L7008_222, 2, 2, 1) = temp(1 + $I_L7008_222, 4)
 7022.             salb(1 + $I_L7008_222, 1, 1) = temp(1 + $I_L7008_222, 5)
 7023.             salb(1 + $I_L7008_222, 2, 1) = temp(1 + $I_L7008_222, 6)
 7024.             p1f(1 + $I_L7008_222) = temp(1 + $I_L7008_222, 7)
 7025.             extk(1 + $I_L7008_222, 1, 1, 1) = ( temp(1 + $I_L7008_222, 8) * 1.0/f(1 + $I_L7008_222) )
 7026.             extk(1 + $I_L7008_222, 2, 1, 1) = ( temp(1 + $I_L7008_222, 9) * 1.0/f(1 + $I_L7008_222) )
 7027.             extk(1 + $I_L7008_222, 1, 3, 1) = (cether%base_addr)(ntyp(1 + $I_L7008_222), mon(1 + $I_L7008_222), 1, 0)
 7028.             extk(1 + $I_L7008_222, 1, 3, 2) = (cether%base_addr)(ntyp(1 + $I_L7008_222), mon(1 + $I_L7008_222), 2, 0)
 7029.             extk(1 + $I_L7008_222, 2, 3, 1) = (cether%base_addr)(ntyp(1 + $I_L7008_222), mon(1 + $I_L7008_222), 1, 0)
 7030.             extk(1 + $I_L7008_222, 2, 3, 2) = (cether%base_addr)(ntyp(1 + $I_L7008_222), mon(1 + $I_L7008_222), 2, 0)
 7031.             $I_L7008_222 = 1 + $I_L7008_222
 7008.             if ( $I_L7008_222 >= nmax ) exit
 7008.          enddo
 7037.          $I_L7037_224 = 0
 7037. !dir$ ivdep
 7037.          do
 7038.             $tc4_WR0_R3 = tc(1 + $I_L7037_224) * tc(1 + $I_L7037_224) * tc(1 + $I_L7037_224) * tc(1 + $I_L7037_224)
 7039.             $tg4_WR0_R4 = tg(1 + $I_L7037_224) * tg(1 + $I_L7037_224) * tg(1 + $I_L7037_224) * tg(1 + $I_L7037_224)
 7041.             $zkat_WR0_R5 = ( extk(1 + $I_L7037_224, 1, 3, 2) * zlt2(1 + $I_L7037_224, 1) * 1.0/vcover(1 + $I_L7037_224, 1) )
 7043.             $zkat_WR0_R5 = min( -1.0e-4, max( expcut, -$zkat_WR0_R5 ) )
 7044.             $thermk_WR0_R6 = _expn( $zkat_WR0_R5 )
 7044.             thermk(1 + $I_L7037_224) = $thermk_WR0_R6
 7045.             $fac1_WR0_R7 = vcover(1 + $I_L7037_224, 1) * ( 1.0 + -$thermk_WR0_R6 )
 7054.             $zlwup_WR0_R10 = 5.6699999999999998e-8 * ( $tc4_WR0_R3 * $fac1_WR0_R7 + $tg4_WR0_R4 * ( 1.0 + -( vcover(1 + $I_L7037_224, 1) * ( 1.0 + -$thermk_WR0_R6 ) ) ) )
 7054.             zlwup(1 + $I_L7037_224) = $zlwup_WR0_R10
 7056.             tgeff(1 + $I_L7037_224) = _sqrt( _sqrt( 17636684.30335097 * $zlwup_WR0_R10 ) )
 7050.             gloss(1 + $I_L7037_224) = ( ( 5.6699999999999998e-8 * $tg4_WR0_R4 ) + -5.6699999999999998e-8 * $tc4_WR0_R3 * $fac1_WR0_R7 )
 7048.             closs(1 + $I_L7037_224) = ( ( 1.134e-7 * $tc4_WR0_R3 * $fac1_WR0_R7 ) + -5.6699999999999998e-8 * $tg4_WR0_R4 * $fac1_WR0_R7 )
 7057.             $I_L7037_224 = 1 + $I_L7037_224
 7037.             if ( $I_L7037_224 >= nmax ) exit
 7037.          enddo
 7037.       endif
 7032.       $F_A37 = ncols
 7032.       if ( ncols > 0 ) then
 7032.          $I_L7032_234 = 0
 7032. !dir$ ivdep
 7032.          do
 7032.             mon(1 + $I_L7032_234) = monx(1 + $I_L7032_234)
 7032.             $I_L7032_234 = 1 + $I_L7032_234
 7032.             if ( $I_L7032_234 >= $F_A37 ) exit
 7032.          enddo
 7032.       endif
 6664.       _free( t$2193 )
 7058.       return
 7058.       end
 7058.       
 7067.       
 7067.       subroutine vegin( si1, sl1 )
 7124.       cedfu%header%a_contig = 1
 7124.       cedfu%dim_1%LB = 1
 7124.       cedfu%dim_1%EX = 13
 7124.       cedfu%dim_1%SM = 1
 7124.       cedfu%dim_2%LB = 1
 7124.       cedfu%dim_2%EX = 12
 7124.       cedfu%dim_2%SM = 13
 7124.       cedfu%dim_3%LB = 1
 7124.       cedfu%dim_3%EX = 9
 7124.       cedfu%dim_3%SM = 156
 7124.       $_allo_P0(0) = 0x1000000000001L
 7124.       $_allo_P0(1) = loc( cedfu )
 7124.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 7125.       cedir%header%a_contig = 1
 7125.       cedir%dim_1%LB = 1
 7125.       cedir%dim_1%EX = 13
 7125.       cedir%dim_1%SM = 1
 7125.       cedir%dim_2%LB = 1
 7125.       cedir%dim_2%EX = 12
 7125.       cedir%dim_2%SM = 13
 7125.       cedir%dim_3%LB = 1
 7125.       cedir%dim_3%EX = 9
 7125.       cedir%dim_3%SM = 156
 7125.       cedir%dim_4%LB = 1
 7125.       cedir%dim_4%EX = 3
 7125.       cedir%dim_4%SM = 1404
 7125.       $_allo_P1(0) = 0x1000000000001L
 7125.       $_allo_P1(1) = loc( cedir )
 7125.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 7126.       cedfu1%header%a_contig = 1
 7126.       cedfu1%dim_1%LB = 1
 7126.       cedfu1%dim_1%EX = 2
 7126.       cedfu1%dim_1%SM = 1
 7126.       cedfu1%dim_2%LB = 1
 7126.       cedfu1%dim_2%EX = 13
 7126.       cedfu1%dim_2%SM = 2
 7126.       cedfu1%dim_3%LB = 1
 7126.       cedfu1%dim_3%EX = 12
 7126.       cedfu1%dim_3%SM = 26
 7126.       cedfu1%dim_4%LB = 1
 7126.       cedfu1%dim_4%EX = 6
 7126.       cedfu1%dim_4%SM = 312
 7126.       cedfu1%dim_5%LB = 1
 7126.       cedfu1%dim_5%EX = 3
 7126.       cedfu1%dim_5%SM = 1872
 7126.       $_allo_P2(0) = 0x1000000000001L
 7126.       $_allo_P2(1) = loc( cedfu1 )
 7126.       call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 7127.       cedir1%header%a_contig = 1
 7127.       cedir1%dim_1%LB = 1
 7127.       cedir1%dim_1%EX = 2
 7127.       cedir1%dim_1%SM = 1
 7127.       cedir1%dim_2%LB = 1
 7127.       cedir1%dim_2%EX = 13
 7127.       cedir1%dim_2%SM = 2
 7127.       cedir1%dim_3%LB = 1
 7127.       cedir1%dim_3%EX = 12
 7127.       cedir1%dim_3%SM = 26
 7127.       cedir1%dim_4%LB = 1
 7127.       cedir1%dim_4%EX = 6
 7127.       cedir1%dim_4%SM = 312
 7127.       cedir1%dim_5%LB = 1
 7127.       cedir1%dim_5%EX = 3
 7127.       cedir1%dim_5%SM = 1872
 7127.       cedir1%dim_6%LB = 1
 7127.       cedir1%dim_6%EX = 3
 7127.       cedir1%dim_6%SM = 5616
 7127.       $_allo_P3(0) = 0x1000000000001L
 7127.       $_allo_P3(1) = loc( cedir1 )
 7127.       call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 7128.       cedfu2%header%a_contig = 1
 7128.       cedfu2%dim_1%LB = 1
 7128.       cedfu2%dim_1%EX = 2
 7128.       cedfu2%dim_1%SM = 1
 7128.       cedfu2%dim_2%LB = 1
 7128.       cedfu2%dim_2%EX = 13
 7128.       cedfu2%dim_2%SM = 2
 7128.       cedfu2%dim_3%LB = 1
 7128.       cedfu2%dim_3%EX = 12
 7128.       cedfu2%dim_3%SM = 26
 7128.       cedfu2%dim_4%LB = 1
 7128.       cedfu2%dim_4%EX = 6
 7128.       cedfu2%dim_4%SM = 312
 7128.       cedfu2%dim_5%LB = 1
 7128.       cedfu2%dim_5%EX = 3
 7128.       cedfu2%dim_5%SM = 1872
 7128.       $_allo_P4(0) = 0x1000000000001L
 7128.       $_allo_P4(1) = loc( cedfu2 )
 7128.       call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
 7129.       cedir2%header%a_contig = 1
 7129.       cedir2%dim_1%LB = 1
 7129.       cedir2%dim_1%EX = 2
 7129.       cedir2%dim_1%SM = 1
 7129.       cedir2%dim_2%LB = 1
 7129.       cedir2%dim_2%EX = 13
 7129.       cedir2%dim_2%SM = 2
 7129.       cedir2%dim_3%LB = 1
 7129.       cedir2%dim_3%EX = 12
 7129.       cedir2%dim_3%SM = 26
 7129.       cedir2%dim_4%LB = 1
 7129.       cedir2%dim_4%EX = 6
 7129.       cedir2%dim_4%SM = 312
 7129.       cedir2%dim_5%LB = 1
 7129.       cedir2%dim_5%EX = 3
 7129.       cedir2%dim_5%SM = 1872
 7129.       cedir2%dim_6%LB = 1
 7129.       cedir2%dim_6%EX = 3
 7129.       cedir2%dim_6%SM = 5616
 7129.       $_allo_P5(0) = 0x1000000000001L
 7129.       $_allo_P5(1) = loc( cedir2 )
 7129.       call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
 7130.       cledfu%header%a_contig = 1
 7130.       cledfu%dim_1%LB = 1
 7130.       cledfu%dim_1%EX = 13
 7130.       cledfu%dim_1%SM = 1
 7130.       cledfu%dim_2%LB = 1
 7130.       cledfu%dim_2%EX = 12
 7130.       cledfu%dim_2%SM = 13
 7130.       cledfu%dim_3%LB = 1
 7130.       cledfu%dim_3%EX = 9
 7130.       cledfu%dim_3%SM = 156
 7130.       $_allo_P6(0) = 0x1000000000001L
 7130.       $_allo_P6(1) = loc( cledfu )
 7130.       call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
 7131.       cledir%header%a_contig = 1
 7131.       cledir%dim_1%LB = 1
 7131.       cledir%dim_1%EX = 13
 7131.       cledir%dim_1%SM = 1
 7131.       cledir%dim_2%LB = 1
 7131.       cledir%dim_2%EX = 12
 7131.       cledir%dim_2%SM = 13
 7131.       cledir%dim_3%LB = 1
 7131.       cledir%dim_3%EX = 9
 7131.       cledir%dim_3%SM = 156
 7131.       cledir%dim_4%LB = 1
 7131.       cledir%dim_4%EX = 3
 7131.       cledir%dim_4%SM = 1404
 7131.       $_allo_P7(0) = 0x1000000000001L
 7131.       $_allo_P7(1) = loc( cledir )
 7131.       call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
 7132.       xmiu%header%a_contig = 1
 7132.       xmiu%dim_1%LB = 1
 7132.       xmiu%dim_1%EX = 12
 7132.       xmiu%dim_1%SM = 1
 7132.       xmiu%dim_2%LB = 1
 7132.       xmiu%dim_2%EX = 3
 7132.       xmiu%dim_2%SM = 12
 7132.       $_allo_P8(0) = 0x1000000000001L
 7132.       $_allo_P8(1) = loc( xmiu )
 7132.       call __allocate( $_allo_P8, 0, 0, _fcd( 0, 0 ) )
 7133.       cether%header%a_contig = 1
 7133.       cether%dim_1%LB = 1
 7133.       cether%dim_1%EX = 13
 7133.       cether%dim_1%SM = 1
 7133.       cether%dim_2%LB = 1
 7133.       cether%dim_2%EX = 12
 7133.       cether%dim_2%SM = 13
 7133.       cether%dim_3%LB = 1
 7133.       cether%dim_3%EX = 2
 7133.       cether%dim_3%SM = 156
 7133.       $_allo_P9(0) = 0x1000000000001L
 7133.       $_allo_P9(1) = loc( cether )
 7133.       call __allocate( $_allo_P9, 0, 0, _fcd( 0, 0 ) )
 7134.       xmiw%header%a_contig = 1
 7134.       xmiw%dim_1%LB = 1
 7134.       xmiw%dim_1%EX = 12
 7134.       xmiw%dim_1%SM = 1
 7134.       xmiw%dim_2%LB = 1
 7134.       xmiw%dim_2%EX = 3
 7134.       xmiw%dim_2%SM = 12
 7134.       $_allo_P10(0) = 0x1000000000001L
 7134.       $_allo_P10(1) = loc( xmiw )
 7134.       call __allocate( $_allo_P10, 0, 0, _fcd( 0, 0 ) )
 7136.       ystpar%header%a_contig = 1
 7136.       ystpar%dim_1%LB = 1
 7136.       ystpar%dim_1%EX = 2
 7136.       ystpar%dim_1%SM = 1
 7136.       ystpar%dim_2%LB = 1
 7136.       ystpar%dim_2%EX = 3
 7136.       ystpar%dim_2%SM = 2
 7136.       $_allo_P11(0) = 0x1000000000001L
 7136.       $_allo_P11(1) = loc( ystpar )
 7136.       call __allocate( $_allo_P11, 0, 0, _fcd( 0, 0 ) )
 7137.       yopt%header%a_contig = 1
 7137.       yopt%dim_1%LB = 1
 7137.       yopt%dim_1%EX = 2
 7137.       yopt%dim_1%SM = 1
 7137.       $_allo_P12(0) = 0x1000000000001L
 7137.       $_allo_P12(1) = loc( yopt )
 7137.       call __allocate( $_allo_P12, 0, 0, _fcd( 0, 0 ) )
 7138.       yll%header%a_contig = 1
 7138.       yll%dim_1%LB = 1
 7138.       yll%dim_1%EX = 2
 7138.       yll%dim_1%SM = 1
 7138.       $_allo_P13(0) = 0x1000000000001L
 7138.       $_allo_P13(1) = loc( yll )
 7138.       call __allocate( $_allo_P13, 0, 0, _fcd( 0, 0 ) )
 7139.       yu%header%a_contig = 1
 7139.       yu%dim_1%LB = 1
 7139.       yu%dim_1%EX = 2
 7139.       yu%dim_1%SM = 1
 7139.       $_allo_P14(0) = 0x1000000000001L
 7139.       $_allo_P14(1) = loc( yu )
 7139.       call __allocate( $_allo_P14, 0, 0, _fcd( 0, 0 ) )
 7140.       yefac%header%a_contig = 1
 7140.       yefac%dim_1%LB = 1
 7140.       yefac%dim_1%EX = 2
 7140.       yefac%dim_1%SM = 1
 7140.       $_allo_P15(0) = 0x1000000000001L
 7140.       $_allo_P15(1) = loc( yefac )
 7140.       call __allocate( $_allo_P15, 0, 0, _fcd( 0, 0 ) )
 7141.       yh1%header%a_contig = 1
 7141.       yh1%dim_1%LB = 1
 7141.       yh1%dim_1%EX = 2
 7141.       yh1%dim_1%SM = 1
 7141.       $_allo_P16(0) = 0x1000000000001L
 7141.       $_allo_P16(1) = loc( yh1 )
 7141.       call __allocate( $_allo_P16, 0, 0, _fcd( 0, 0 ) )
 7142.       yh2%header%a_contig = 1
 7142.       yh2%dim_1%LB = 1
 7142.       yh2%dim_1%EX = 2
 7142.       yh2%dim_1%SM = 1
 7142.       $_allo_P17(0) = 0x1000000000001L
 7142.       $_allo_P17(1) = loc( yh2 )
 7142.       call __allocate( $_allo_P17, 0, 0, _fcd( 0, 0 ) )
 7143.       yootd%header%a_contig = 1
 7143.       yootd%dim_1%LB = 1
 7143.       yootd%dim_1%EX = 2
 7143.       yootd%dim_1%SM = 1
 7143.       $_allo_P18(0) = 0x1000000000001L
 7143.       $_allo_P18(1) = loc( yootd )
 7143.       call __allocate( $_allo_P18, 0, 0, _fcd( 0, 0 ) )
 7144.       yreen%header%a_contig = 1
 7144.       yreen%dim_1%LB = 1
 7144.       yreen%dim_1%EX = 12
 7144.       yreen%dim_1%SM = 1
 7144.       yreen%dim_2%LB = 1
 7144.       yreen%dim_2%EX = 2
 7144.       yreen%dim_2%SM = 12
 7144.       $_allo_P19(0) = 0x1000000000001L
 7144.       $_allo_P19(1) = loc( yreen )
 7144.       call __allocate( $_allo_P19, 0, 0, _fcd( 0, 0 ) )
 7145.       ycover%header%a_contig = 1
 7145.       ycover%dim_1%LB = 1
 7145.       ycover%dim_1%EX = 12
 7145.       ycover%dim_1%SM = 1
 7145.       ycover%dim_2%LB = 1
 7145.       ycover%dim_2%EX = 2
 7145.       ycover%dim_2%SM = 12
 7145.       $_allo_P20(0) = 0x1000000000001L
 7145.       $_allo_P20(1) = loc( ycover )
 7145.       call __allocate( $_allo_P20, 0, 0, _fcd( 0, 0 ) )
 7146.       ylt%header%a_contig = 1
 7146.       ylt%dim_1%LB = 1
 7146.       ylt%dim_1%EX = 12
 7146.       ylt%dim_1%SM = 1
 7146.       ylt%dim_2%LB = 1
 7146.       ylt%dim_2%EX = 2
 7146.       ylt%dim_2%SM = 12
 7146.       $_allo_P21(0) = 0x1000000000001L
 7146.       $_allo_P21(1) = loc( ylt )
 7146.       call __allocate( $_allo_P21, 0, 0, _fcd( 0, 0 ) )
 7150.       rstpar_fixed%header%a_contig = 1
 7150.       rstpar_fixed%dim_1%LB = 1
 7150.       rstpar_fixed%dim_1%EX = 13
 7150.       rstpar_fixed%dim_1%SM = 1
 7150.       rstpar_fixed%dim_2%LB = 1
 7150.       rstpar_fixed%dim_2%EX = 2
 7150.       rstpar_fixed%dim_2%SM = 13
 7150.       rstpar_fixed%dim_3%LB = 1
 7150.       rstpar_fixed%dim_3%EX = 3
 7150.       rstpar_fixed%dim_3%SM = 26
 7150.       $_allo_P22(0) = 0x1000000000001L
 7150.       $_allo_P22(1) = loc( rstpar_fixed )
 7150.       call __allocate( $_allo_P22, 0, 0, _fcd( 0, 0 ) )
 7151.       chil_fixed%header%a_contig = 1
 7151.       chil_fixed%dim_1%LB = 1
 7151.       chil_fixed%dim_1%EX = 13
 7151.       chil_fixed%dim_1%SM = 1
 7151.       chil_fixed%dim_2%LB = 1
 7151.       chil_fixed%dim_2%EX = 2
 7151.       chil_fixed%dim_2%SM = 13
 7151.       $_allo_P23(0) = 0x1000000000001L
 7151.       $_allo_P23(1) = loc( chil_fixed )
 7151.       call __allocate( $_allo_P23, 0, 0, _fcd( 0, 0 ) )
 7152.       topt_fixed%header%a_contig = 1
 7152.       topt_fixed%dim_1%LB = 1
 7152.       topt_fixed%dim_1%EX = 13
 7152.       topt_fixed%dim_1%SM = 1
 7152.       topt_fixed%dim_2%LB = 1
 7152.       topt_fixed%dim_2%EX = 2
 7152.       topt_fixed%dim_2%SM = 13
 7152.       $_allo_P24(0) = 0x1000000000001L
 7152.       $_allo_P24(1) = loc( topt_fixed )
 7152.       call __allocate( $_allo_P24, 0, 0, _fcd( 0, 0 ) )
 7153.       tll_fixed%header%a_contig = 1
 7153.       tll_fixed%dim_1%LB = 1
 7153.       tll_fixed%dim_1%EX = 13
 7153.       tll_fixed%dim_1%SM = 1
 7153.       tll_fixed%dim_2%LB = 1
 7153.       tll_fixed%dim_2%EX = 2
 7153.       tll_fixed%dim_2%SM = 13
 7153.       $_allo_P25(0) = 0x1000000000001L
 7153.       $_allo_P25(1) = loc( tll_fixed )
 7153.       call __allocate( $_allo_P25, 0, 0, _fcd( 0, 0 ) )
 7154.       tu_fixed%header%a_contig = 1
 7154.       tu_fixed%dim_1%LB = 1
 7154.       tu_fixed%dim_1%EX = 13
 7154.       tu_fixed%dim_1%SM = 1
 7154.       tu_fixed%dim_2%LB = 1
 7154.       tu_fixed%dim_2%EX = 2
 7154.       tu_fixed%dim_2%SM = 13
 7154.       $_allo_P26(0) = 0x1000000000001L
 7154.       $_allo_P26(1) = loc( tu_fixed )
 7154.       call __allocate( $_allo_P26, 0, 0, _fcd( 0, 0 ) )
 7155.       defac_fixed%header%a_contig = 1
 7155.       defac_fixed%dim_1%LB = 1
 7155.       defac_fixed%dim_1%EX = 13
 7155.       defac_fixed%dim_1%SM = 1
 7155.       defac_fixed%dim_2%LB = 1
 7155.       defac_fixed%dim_2%EX = 2
 7155.       defac_fixed%dim_2%SM = 13
 7155.       $_allo_P27(0) = 0x1000000000001L
 7155.       $_allo_P27(1) = loc( defac_fixed )
 7155.       call __allocate( $_allo_P27, 0, 0, _fcd( 0, 0 ) )
 7156.       ph1_fixed%header%a_contig = 1
 7156.       ph1_fixed%dim_1%LB = 1
 7156.       ph1_fixed%dim_1%EX = 13
 7156.       ph1_fixed%dim_1%SM = 1
 7156.       ph1_fixed%dim_2%LB = 1
 7156.       ph1_fixed%dim_2%EX = 2
 7156.       ph1_fixed%dim_2%SM = 13
 7156.       $_allo_P28(0) = 0x1000000000001L
 7156.       $_allo_P28(1) = loc( ph1_fixed )
 7156.       call __allocate( $_allo_P28, 0, 0, _fcd( 0, 0 ) )
 7157.       ph2_fixed%header%a_contig = 1
 7157.       ph2_fixed%dim_1%LB = 1
 7157.       ph2_fixed%dim_1%EX = 13
 7157.       ph2_fixed%dim_1%SM = 1
 7157.       ph2_fixed%dim_2%LB = 1
 7157.       ph2_fixed%dim_2%EX = 2
 7157.       ph2_fixed%dim_2%SM = 13
 7157.       $_allo_P29(0) = 0x1000000000001L
 7157.       $_allo_P29(1) = loc( ph2_fixed )
 7157.       call __allocate( $_allo_P29, 0, 0, _fcd( 0, 0 ) )
 7158.       rootd%header%a_contig = 1
 7158.       rootd%dim_1%LB = 1
 7158.       rootd%dim_1%EX = 13
 7158.       rootd%dim_1%SM = 1
 7158.       rootd%dim_2%LB = 1
 7158.       rootd%dim_2%EX = 2
 7158.       rootd%dim_2%SM = 13
 7158.       $_allo_P30(0) = 0x1000000000001L
 7158.       $_allo_P30(1) = loc( rootd )
 7158.       call __allocate( $_allo_P30, 0, 0, _fcd( 0, 0 ) )
 7159.       bee%header%a_contig = 1
 7159.       bee%dim_1%LB = 1
 7159.       bee%dim_1%EX = 13
 7159.       bee%dim_1%SM = 1
 7159.       $_allo_P31(0) = 0x1000000000001L
 7159.       $_allo_P31(1) = loc( bee )
 7159.       call __allocate( $_allo_P31, 0, 0, _fcd( 0, 0 ) )
 7160.       phsat%header%a_contig = 1
 7160.       phsat%dim_1%LB = 1
 7160.       phsat%dim_1%EX = 13
 7160.       phsat%dim_1%SM = 1
 7160.       $_allo_P32(0) = 0x1000000000001L
 7160.       $_allo_P32(1) = loc( phsat )
 7160.       call __allocate( $_allo_P32, 0, 0, _fcd( 0, 0 ) )
 7161.       satco%header%a_contig = 1
 7161.       satco%dim_1%LB = 1
 7161.       satco%dim_1%EX = 13
 7161.       satco%dim_1%SM = 1
 7161.       $_allo_P33(0) = 0x1000000000001L
 7161.       $_allo_P33(1) = loc( satco )
 7161.       call __allocate( $_allo_P33, 0, 0, _fcd( 0, 0 ) )
 7162.       poros%header%a_contig = 1
 7162.       poros%dim_1%LB = 1
 7162.       poros%dim_1%EX = 13
 7162.       poros%dim_1%SM = 1
 7162.       $_allo_P34(0) = 0x1000000000001L
 7162.       $_allo_P34(1) = loc( poros )
 7162.       call __allocate( $_allo_P34, 0, 0, _fcd( 0, 0 ) )
 7163.       zdepth%header%a_contig = 1
 7163.       zdepth%dim_1%LB = 1
 7163.       zdepth%dim_1%EX = 13
 7163.       zdepth%dim_1%SM = 1
 7163.       zdepth%dim_2%LB = 1
 7163.       zdepth%dim_2%EX = 3
 7163.       zdepth%dim_2%SM = 13
 7163.       $_allo_P35(0) = 0x1000000000001L
 7163.       $_allo_P35(1) = loc( zdepth )
 7163.       call __allocate( $_allo_P35, 0, 0, _fcd( 0, 0 ) )
 7164.       green_fixed%header%a_contig = 1
 7164.       green_fixed%dim_1%LB = 1
 7164.       green_fixed%dim_1%EX = 13
 7164.       green_fixed%dim_1%SM = 1
 7164.       green_fixed%dim_2%LB = 1
 7164.       green_fixed%dim_2%EX = 12
 7164.       green_fixed%dim_2%SM = 13
 7164.       green_fixed%dim_3%LB = 1
 7164.       green_fixed%dim_3%EX = 2
 7164.       green_fixed%dim_3%SM = 156
 7164.       $_allo_P36(0) = 0x1000000000001L
 7164.       $_allo_P36(1) = loc( green_fixed )
 7164.       call __allocate( $_allo_P36, 0, 0, _fcd( 0, 0 ) )
 7165.       xcover_fixed%header%a_contig = 1
 7165.       xcover_fixed%dim_1%LB = 1
 7165.       xcover_fixed%dim_1%EX = 13
 7165.       xcover_fixed%dim_1%SM = 1
 7165.       xcover_fixed%dim_2%LB = 1
 7165.       xcover_fixed%dim_2%EX = 12
 7165.       xcover_fixed%dim_2%SM = 13
 7165.       xcover_fixed%dim_3%LB = 1
 7165.       xcover_fixed%dim_3%EX = 2
 7165.       xcover_fixed%dim_3%SM = 156
 7165.       $_allo_P37(0) = 0x1000000000001L
 7165.       $_allo_P37(1) = loc( xcover_fixed )
 7165.       call __allocate( $_allo_P37, 0, 0, _fcd( 0, 0 ) )
 7166.       zlt_fixed%header%a_contig = 1
 7166.       zlt_fixed%dim_1%LB = 1
 7166.       zlt_fixed%dim_1%EX = 13
 7166.       zlt_fixed%dim_1%SM = 1
 7166.       zlt_fixed%dim_2%LB = 1
 7166.       zlt_fixed%dim_2%EX = 12
 7166.       zlt_fixed%dim_2%SM = 13
 7166.       zlt_fixed%dim_3%LB = 1
 7166.       zlt_fixed%dim_3%EX = 2
 7166.       zlt_fixed%dim_3%SM = 156
 7166.       $_allo_P38(0) = 0x1000000000001L
 7166.       $_allo_P38(1) = loc( zlt_fixed )
 7166.       call __allocate( $_allo_P38, 0, 0, _fcd( 0, 0 ) )
 7167.       x0x%header%a_contig = 1
 7167.       x0x%dim_1%LB = 1
 7167.       x0x%dim_1%EX = 13
 7167.       x0x%dim_1%SM = 1
 7167.       x0x%dim_2%LB = 1
 7167.       x0x%dim_2%EX = 12
 7167.       x0x%dim_2%SM = 13
 7167.       $_allo_P39(0) = 0x1000000000001L
 7167.       $_allo_P39(1) = loc( x0x )
 7167.       call __allocate( $_allo_P39, 0, 0, _fcd( 0, 0 ) )
 7168.       xd%header%a_contig = 1
 7168.       xd%dim_1%LB = 1
 7168.       xd%dim_1%EX = 13
 7168.       xd%dim_1%SM = 1
 7168.       xd%dim_2%LB = 1
 7168.       xd%dim_2%EX = 12
 7168.       xd%dim_2%SM = 13
 7168.       $_allo_P40(0) = 0x1000000000001L
 7168.       $_allo_P40(1) = loc( xd )
 7168.       call __allocate( $_allo_P40, 0, 0, _fcd( 0, 0 ) )
 7169.       z2%header%a_contig = 1
 7169.       z2%dim_1%LB = 1
 7169.       z2%dim_1%EX = 13
 7169.       z2%dim_1%SM = 1
 7169.       z2%dim_2%LB = 1
 7169.       z2%dim_2%EX = 12
 7169.       z2%dim_2%SM = 13
 7169.       $_allo_P41(0) = 0x1000000000001L
 7169.       $_allo_P41(1) = loc( z2 )
 7169.       call __allocate( $_allo_P41, 0, 0, _fcd( 0, 0 ) )
 7170.       z1%header%a_contig = 1
 7170.       z1%dim_1%LB = 1
 7170.       z1%dim_1%EX = 13
 7170.       z1%dim_1%SM = 1
 7170.       z1%dim_2%LB = 1
 7170.       z1%dim_2%EX = 12
 7170.       z1%dim_2%SM = 13
 7170.       $_allo_P42(0) = 0x1000000000001L
 7170.       $_allo_P42(1) = loc( z1 )
 7170.       call __allocate( $_allo_P42, 0, 0, _fcd( 0, 0 ) )
 7171.       xdc%header%a_contig = 1
 7171.       xdc%dim_1%LB = 1
 7171.       xdc%dim_1%EX = 13
 7171.       xdc%dim_1%SM = 1
 7171.       xdc%dim_2%LB = 1
 7171.       xdc%dim_2%EX = 12
 7171.       xdc%dim_2%SM = 13
 7171.       $_allo_P43(0) = 0x1000000000001L
 7171.       $_allo_P43(1) = loc( xdc )
 7171.       call __allocate( $_allo_P43, 0, 0, _fcd( 0, 0 ) )
 7172.       xbc%header%a_contig = 1
 7172.       xbc%dim_1%LB = 1
 7172.       xbc%dim_1%EX = 13
 7172.       xbc%dim_1%SM = 1
 7172.       xbc%dim_2%LB = 1
 7172.       xbc%dim_2%EX = 12
 7172.       xbc%dim_2%SM = 13
 7172.       $_allo_P44(0) = 0x1000000000001L
 7172.       $_allo_P44(1) = loc( xbc )
 7172.       call __allocate( $_allo_P44, 0, 0, _fcd( 0, 0 ) )
 7173.       zlt%header%a_contig = 1
 7173.       zlt%dim_1%LB = 1
 7173.       zlt%dim_1%EX = 13
 7173.       zlt%dim_1%SM = 1
 7173.       zlt%dim_2%LB = 1
 7173.       zlt%dim_2%EX = 12
 7173.       zlt%dim_2%SM = 13
 7173.       zlt%dim_3%LB = 1
 7173.       zlt%dim_3%EX = 2
 7173.       zlt%dim_3%SM = 156
 7173.       $_allo_P45(0) = 0x1000000000001L
 7173.       $_allo_P45(1) = loc( zlt )
 7173.       call __allocate( $_allo_P45, 0, 0, _fcd( 0, 0 ) )
 7174.       xcover%header%a_contig = 1
 7174.       xcover%dim_1%LB = 1
 7174.       xcover%dim_1%EX = 13
 7174.       xcover%dim_1%SM = 1
 7174.       xcover%dim_2%LB = 1
 7174.       xcover%dim_2%EX = 12
 7174.       xcover%dim_2%SM = 13
 7174.       xcover%dim_3%LB = 1
 7174.       xcover%dim_3%EX = 2
 7174.       xcover%dim_3%SM = 156
 7174.       $_allo_P46(0) = 0x1000000000001L
 7174.       $_allo_P46(1) = loc( xcover )
 7174.       call __allocate( $_allo_P46, 0, 0, _fcd( 0, 0 ) )
 7175.       ph2%header%a_contig = 1
 7175.       ph2%dim_1%LB = 1
 7175.       ph2%dim_1%EX = 13
 7175.       ph2%dim_1%SM = 1
 7175.       ph2%dim_2%LB = 1
 7175.       ph2%dim_2%EX = 2
 7175.       ph2%dim_2%SM = 13
 7175.       $_allo_P47(0) = 0x1000000000001L
 7175.       $_allo_P47(1) = loc( ph2 )
 7175.       call __allocate( $_allo_P47, 0, 0, _fcd( 0, 0 ) )
 7176.       ph1%header%a_contig = 1
 7176.       ph1%dim_1%LB = 1
 7176.       ph1%dim_1%EX = 13
 7176.       ph1%dim_1%SM = 1
 7176.       ph1%dim_2%LB = 1
 7176.       ph1%dim_2%EX = 2
 7176.       ph1%dim_2%SM = 13
 7176.       $_allo_P48(0) = 0x1000000000001L
 7176.       $_allo_P48(1) = loc( ph1 )
 7176.       call __allocate( $_allo_P48, 0, 0, _fcd( 0, 0 ) )
 7177.       green%header%a_contig = 1
 7177.       green%dim_1%LB = 1
 7177.       green%dim_1%EX = 13
 7177.       green%dim_1%SM = 1
 7177.       green%dim_2%LB = 1
 7177.       green%dim_2%EX = 12
 7177.       green%dim_2%SM = 13
 7177.       green%dim_3%LB = 1
 7177.       green%dim_3%EX = 2
 7177.       green%dim_3%SM = 156
 7177.       $_allo_P49(0) = 0x1000000000001L
 7177.       $_allo_P49(1) = loc( green )
 7177.       call __allocate( $_allo_P49, 0, 0, _fcd( 0, 0 ) )
 7178.       defac%header%a_contig = 1
 7178.       defac%dim_1%LB = 1
 7178.       defac%dim_1%EX = 13
 7178.       defac%dim_1%SM = 1
 7178.       defac%dim_2%LB = 1
 7178.       defac%dim_2%EX = 2
 7178.       defac%dim_2%SM = 13
 7178.       $_allo_P50(0) = 0x1000000000001L
 7178.       $_allo_P50(1) = loc( defac )
 7178.       call __allocate( $_allo_P50, 0, 0, _fcd( 0, 0 ) )
 7179.       tu%header%a_contig = 1
 7179.       tu%dim_1%LB = 1
 7179.       tu%dim_1%EX = 13
 7179.       tu%dim_1%SM = 1
 7179.       tu%dim_2%LB = 1
 7179.       tu%dim_2%EX = 2
 7179.       tu%dim_2%SM = 13
 7179.       $_allo_P51(0) = 0x1000000000001L
 7179.       $_allo_P51(1) = loc( tu )
 7179.       call __allocate( $_allo_P51, 0, 0, _fcd( 0, 0 ) )
 7180.       tll%header%a_contig = 1
 7180.       tll%dim_1%LB = 1
 7180.       tll%dim_1%EX = 13
 7180.       tll%dim_1%SM = 1
 7180.       tll%dim_2%LB = 1
 7180.       tll%dim_2%EX = 2
 7180.       tll%dim_2%SM = 13
 7180.       $_allo_P52(0) = 0x1000000000001L
 7180.       $_allo_P52(1) = loc( tll )
 7180.       call __allocate( $_allo_P52, 0, 0, _fcd( 0, 0 ) )
 7181.       topt%header%a_contig = 1
 7181.       topt%dim_1%LB = 1
 7181.       topt%dim_1%EX = 13
 7181.       topt%dim_1%SM = 1
 7181.       topt%dim_2%LB = 1
 7181.       topt%dim_2%EX = 2
 7181.       topt%dim_2%SM = 13
 7181.       $_allo_P53(0) = 0x1000000000001L
 7181.       $_allo_P53(1) = loc( topt )
 7181.       call __allocate( $_allo_P53, 0, 0, _fcd( 0, 0 ) )
 7182.       rstpar%header%a_contig = 1
 7182.       rstpar%dim_1%LB = 1
 7182.       rstpar%dim_1%EX = 13
 7182.       rstpar%dim_1%SM = 1
 7182.       rstpar%dim_2%LB = 1
 7182.       rstpar%dim_2%EX = 2
 7182.       rstpar%dim_2%SM = 13
 7182.       rstpar%dim_3%LB = 1
 7182.       rstpar%dim_3%EX = 3
 7182.       rstpar%dim_3%SM = 26
 7182.       $_allo_P54(0) = 0x1000000000001L
 7182.       $_allo_P54(1) = loc( rstpar )
 7182.       call __allocate( $_allo_P54, 0, 0, _fcd( 0, 0 ) )
 7183.       chil%header%a_contig = 1
 7183.       chil%dim_1%LB = 1
 7183.       chil%dim_1%EX = 13
 7183.       chil%dim_1%SM = 1
 7183.       chil%dim_2%LB = 1
 7183.       chil%dim_2%EX = 2
 7183.       chil%dim_2%SM = 13
 7183.       $_allo_P55(0) = 0x1000000000001L
 7183.       $_allo_P55(1) = loc( chil )
 7183.       call __allocate( $_allo_P55, 0, 0, _fcd( 0, 0 ) )
 7186.       ierr = 0
 7185.       t$3432 = nfsibd
 7186.        _substr(t$3433,1,4) = 'OLD'
 7185.        _substr(t$3434,1,10) = 'SEQUENTIAL'
 7185.        _substr(t$3435,1,11) = 'UNFORMATTED'
 7186.        _substr(t$3436,1,4) = 'READ'
 7185.       t$3437(1) = 0x100000000000000L
 7185. !dir$ suppress t$3432
 7185.       t$3437(2) = int( loc( t$3432 ), 8 )
 7185. !dir$ suppress ierr
 7185.       t$3437(3) = int( loc( ierr ), 8 )
 7185.       t$3437(4) = 0
 7185. !dir$ suppress  _substr(fnamesibveg,1,_ltrim(  _substr(fnamesibveg,1,200) ))
 7185.       t$3437(5) = int( loc(  _substr(fnamesibveg,1,_ltrim(  _substr(fnamesibveg,1,200) )) ), 8 )
 7185.       t$3437(6) = _ltrim(  _substr(fnamesibveg,1,200) )
 7185. !dir$ suppress  _substr(t$3433,1,3)
 7185.       t$3437(7) = int( loc(  _substr(t$3433,1,3) ), 8 )
 7185.       t$3437(8) = 3
 7185. !dir$ suppress  _substr(t$3434,1,10)
 7185.       t$3437(9) = int( loc(  _substr(t$3434,1,10) ), 8 )
 7185.       t$3437(10) = 10
 7185. !dir$ suppress  _substr(t$3435,1,11)
 7185.       t$3437(11) = int( loc(  _substr(t$3435,1,11) ), 8 )
 7185.       t$3437(12) = 11
 7185.       t$3437(13) = 0
 7185.       t$3437(14) = 0
 7185.       t$3437(16) = 0
 7185. !dir$ suppress  _substr(t$3436,1,4)
 7185.       t$3437(18) = int( loc(  _substr(t$3436,1,4) ), 8 )
 7185.       t$3437(19) = 4
 7185.       t$3437(20) = 0
 7185.       t$3437(22) = 0
 7185.       t$3437(24) = 0x2000200000000L
 7185.       t$3437(25) = 0
 7185.       t$3437(27) = 0
 7185.       t$3437(29) = 0
 7185.       t$3437(31) = 0
 7185.       t$3437(33) = 0
 7185.       t$3437(35) = 0
 7185.       t$3431 = _open( t$3437 )
 7187.       if ( ierr /= 0 ) then
 7188.          $Unit_temp_O0 = nfprt
 7188.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$1363,  _substr(t$1362,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamesibveg,1,_ltrim(  _substr(fnamesibveg,1,200) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 7190.           _substr(t$3438,1,11) = '**(ERROR)**'
 7190.          call _stop(  _substr(t$3438,1,11) )
 7190.       else
 7194.          ierr = 0
 7193.          t$3432 = nfalb
 7194.           _substr(t$3440,1,4) = 'OLD'
 7193.           _substr(t$3441,1,10) = 'SEQUENTIAL'
 7193.           _substr(t$3442,1,11) = 'UNFORMATTED'
 7194.           _substr(t$3443,1,4) = 'READ'
 7193.          t$3444(1) = 0x100000000000000L
 7193. !dir$ suppress t$3432
 7193.          t$3444(2) = int( loc( t$3432 ), 8 )
 7193. !dir$ suppress ierr
 7193.          t$3444(3) = int( loc( ierr ), 8 )
 7193.          t$3444(4) = 0
 7193. !dir$ suppress  _substr(fnamesibalb,1,_ltrim(  _substr(fnamesibalb,1,200) ))
 7193.          t$3444(5) = int( loc(  _substr(fnamesibalb,1,_ltrim(  _substr(fnamesibalb,1,200) )) ), 8 )
 7193.          t$3444(6) = _ltrim(  _substr(fnamesibalb,1,200) )
 7193. !dir$ suppress  _substr(t$3440,1,3)
 7193.          t$3444(7) = int( loc(  _substr(t$3440,1,3) ), 8 )
 7193.          t$3444(8) = 3
 7193. !dir$ suppress  _substr(t$3441,1,10)
 7193.          t$3444(9) = int( loc(  _substr(t$3441,1,10) ), 8 )
 7193.          t$3444(10) = 10
 7193. !dir$ suppress  _substr(t$3442,1,11)
 7193.          t$3444(11) = int( loc(  _substr(t$3442,1,11) ), 8 )
 7193.          t$3444(12) = 11
 7193.          t$3444(13) = 0
 7193.          t$3444(14) = 0
 7193.          t$3444(16) = 0
 7193. !dir$ suppress  _substr(t$3443,1,4)
 7193.          t$3444(18) = int( loc(  _substr(t$3443,1,4) ), 8 )
 7193.          t$3444(19) = 4
 7193.          t$3444(20) = 0
 7193.          t$3444(22) = 0
 7193.          t$3444(24) = 0x2000200000000L
 7193.          t$3444(25) = 0
 7193.          t$3444(27) = 0
 7193.          t$3444(29) = 0
 7193.          t$3444(31) = 0
 7193.          t$3444(33) = 0
 7193.          t$3444(35) = 0
 7193.          t$3439 = _open( t$3444 )
 7195.          if ( ierr /= 0 ) then
 7196.             $Unit_temp_O1 = nfprt
 7196.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$1365,  _substr(t$1364,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamesibalb,1,_ltrim(  _substr(fnamesibalb,1,200) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 7198.              _substr(t$3445,1,11) = '**(ERROR)**'
 7198.             call _stop(  _substr(t$3445,1,11) )
 7198.          else
 7201.             $Unit_temp_O2 = nfsibd
 7201.             _uread( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)rstpar_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( (&)chil_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)topt_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)tll_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)tu_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)defac_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)ph1_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)ph2_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)rootd_r4(+:( 1, 13, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)bee_r4(+:( 1, 13, 1 )), 0x402060300000000L ), _iotype( (&)phsat_r4(+:( 1, 13, 1 )), 0x402060300000000L ), _iotype( (&)satco_r4(+:( 1, 13, 1 )), 0x402060300000000L ), _iotype( (&)poros_r4(+:( 1, 13, 1 )), 0x402060300000000L ), _iotype( (&)zdepth_r4(+:( 1, 13, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ) ) )
 7203.             $Unit_temp_O3 = nfsibd
 7203.             _uread( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)green_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)xcover_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)zlt_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)x0x_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 )), 0x402060300000000L ), _iotype( (&)xd_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 )), 0x402060300000000L ), _iotype( (&)z2_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 )), 0x402060300000000L ), _iotype( (&)z1_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 )), 0x402060300000000L ), _iotype( (&)xdc_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 )), 0x402060300000000L ), _iotype( (&)xbc_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 )), 0x402060300000000L ) ) )
 7205.             $SC_rstpar_fixed_I307 = rstpar_fixed%dim_3%SM
 7205.             $SC_rstpar_fixed_I308 = rstpar_fixed%dim_3%LB
 7205.             $SC_rstpar_fixed_I305 = rstpar_fixed%dim_2%SM
 7205.             $SC_rstpar_fixed_I306 = rstpar_fixed%dim_2%LB
 7205.             $SC_rstpar_fixed_I304 = rstpar_fixed%dim_1%LB
 7205.             $I_L7205_208 = 0
 7205.             do
 7205.                $I_L7205_180 = 0
 7205.                do
 7205.                   $I_L7205_142 = 0
 7205. !dir$ ivdep
 7205.                   do
 7205.                      (rstpar_fixed%base_addr)($SC_rstpar_fixed_I304 + $I_L7205_142, $SC_rstpar_fixed_I306 + $I_L7205_180, $SC_rstpar_fixed_I308 + $I_L7205_208, 0) = real( rstpar_r4(1 + $I_L7205_142, 1 + $I_L7205_180, 1 + $I_L7205_208), 8 )
 7205.                      $I_L7205_142 = 1 + $I_L7205_142
 7205.                      if ( $I_L7205_142 >= 13 ) exit
 7205.                   enddo
 7205.                   $I_L7205_180 = 1 + $I_L7205_180
 7205.                   if ( $I_L7205_180 >= 2 ) exit
 7205.                enddo
 7205.                $I_L7205_208 = 1 + $I_L7205_208
 7205.                if ( $I_L7205_208 >= 3 ) exit
 7205.             enddo
 7213.             $SC_rootd_I331 = rootd%dim_2%SM
 7213.             $SC_rootd_I332 = rootd%dim_2%LB
 7213.             $SC_rootd_I330 = rootd%dim_1%LB
 7212.             $SC_ph2_fixed_I328 = ph2_fixed%dim_2%SM
 7212.             $SC_ph2_fixed_I329 = ph2_fixed%dim_2%LB
 7212.             $SC_ph2_fixed_I327 = ph2_fixed%dim_1%LB
 7211.             $SC_ph1_fixed_I325 = ph1_fixed%dim_2%SM
 7211.             $SC_ph1_fixed_I326 = ph1_fixed%dim_2%LB
 7211.             $SC_ph1_fixed_I324 = ph1_fixed%dim_1%LB
 7210.             $SC_defac_fixed_I322 = defac_fixed%dim_2%SM
 7210.             $SC_defac_fixed_I323 = defac_fixed%dim_2%LB
 7210.             $SC_defac_fixed_I321 = defac_fixed%dim_1%LB
 7209.             $SC_tu_fixed_I319 = tu_fixed%dim_2%SM
 7209.             $SC_tu_fixed_I320 = tu_fixed%dim_2%LB
 7209.             $SC_tu_fixed_I318 = tu_fixed%dim_1%LB
 7208.             $SC_tll_fixed_I316 = tll_fixed%dim_2%SM
 7208.             $SC_tll_fixed_I317 = tll_fixed%dim_2%LB
 7208.             $SC_tll_fixed_I315 = tll_fixed%dim_1%LB
 7207.             $SC_topt_fixed_I313 = topt_fixed%dim_2%SM
 7207.             $SC_topt_fixed_I314 = topt_fixed%dim_2%LB
 7207.             $SC_topt_fixed_I312 = topt_fixed%dim_1%LB
 7206.             $SC_chil_fixed_I310 = chil_fixed%dim_2%SM
 7206.             $SC_chil_fixed_I311 = chil_fixed%dim_2%LB
 7206.             $SC_chil_fixed_I309 = chil_fixed%dim_1%LB
 7206.             $I_L7206_182 = 0
 7206.             do
 7206.                $I_L7206_144 = 0
 7206. !dir$ ivdep
 7206.                do
 7206.                   (chil_fixed%base_addr)($SC_chil_fixed_I309 + $I_L7206_144, $SC_chil_fixed_I311 + $I_L7206_182, 0) = real( chil_r4(1 + $I_L7206_144, 1 + $I_L7206_182), 8 )
 7207.                   (topt_fixed%base_addr)($SC_topt_fixed_I312 + $I_L7206_144, $SC_topt_fixed_I314 + $I_L7206_182, 0) = real( topt_r4(1 + $I_L7206_144, 1 + $I_L7206_182), 8 )
 7208.                   (tll_fixed%base_addr)($SC_tll_fixed_I315 + $I_L7206_144, $SC_tll_fixed_I317 + $I_L7206_182, 0) = real( tll_r4(1 + $I_L7206_144, 1 + $I_L7206_182), 8 )
 7209.                   (tu_fixed%base_addr)($SC_tu_fixed_I318 + $I_L7206_144, $SC_tu_fixed_I320 + $I_L7206_182, 0) = real( tu_r4(1 + $I_L7206_144, 1 + $I_L7206_182), 8 )
 7210.                   (defac_fixed%base_addr)($SC_defac_fixed_I321 + $I_L7206_144, $SC_defac_fixed_I323 + $I_L7206_182, 0) = real( defac_r4(1 + $I_L7206_144, 1 + $I_L7206_182), 8 )
 7211.                   (ph1_fixed%base_addr)($SC_ph1_fixed_I324 + $I_L7206_144, $SC_ph1_fixed_I326 + $I_L7206_182, 0) = real( ph1_r4(1 + $I_L7206_144, 1 + $I_L7206_182), 8 )
 7206.                   $I_L7206_144 = 1 + $I_L7206_144
 7206.                   if ( $I_L7206_144 >= 13 ) exit
 7206.                enddo
 7212.                $I_L7212_146 = 0
 7212. !dir$ ivdep
 7212.                do
 7212.                   (ph2_fixed%base_addr)($SC_ph2_fixed_I327 + $I_L7212_146, $SC_ph2_fixed_I329 + $I_L7206_182, 0) = real( ph2_r4(1 + $I_L7212_146, 1 + $I_L7206_182), 8 )
 7213.                   (rootd%base_addr)($SC_rootd_I330 + $I_L7212_146, $SC_rootd_I332 + $I_L7206_182, 0) = real( rootd_r4(1 + $I_L7212_146, 1 + $I_L7206_182), 8 )
 7212.                   $I_L7212_146 = 1 + $I_L7212_146
 7212.                   if ( $I_L7212_146 >= 13 ) exit
 7212.                enddo
 7206.                $I_L7206_182 = 1 + $I_L7206_182
 7206.                if ( $I_L7206_182 >= 2 ) exit
 7206.             enddo
 7217.             $SC_poros_I339 = poros%dim_1%EX
 7217.             $SC_poros_I340 = poros%dim_1%LB
 7216.             $SC_satco_I337 = satco%dim_1%EX
 7216.             $SC_satco_I338 = satco%dim_1%LB
 7215.             $SC_phsat_I335 = phsat%dim_1%EX
 7215.             $SC_phsat_I336 = phsat%dim_1%LB
 7214.             $SC_bee_I333 = bee%dim_1%EX
 7214.             $SC_bee_I334 = bee%dim_1%LB
 7214.             $I_L7214_148 = 0
 7214. !dir$ ivdep
 7214.             do
 7214.                (bee%base_addr)($SC_bee_I334 + $I_L7214_148, 0) = real( bee_r4(1 + $I_L7214_148), 8 )
 7215.                (phsat%base_addr)($SC_phsat_I336 + $I_L7214_148, 0) = real( phsat_r4(1 + $I_L7214_148), 8 )
 7216.                (satco%base_addr)($SC_satco_I338 + $I_L7214_148, 0) = real( satco_r4(1 + $I_L7214_148), 8 )
 7217.                (poros%base_addr)($SC_poros_I340 + $I_L7214_148, 0) = real( poros_r4(1 + $I_L7214_148), 8 )
 7214.                $I_L7214_148 = 1 + $I_L7214_148
 7214.                if ( $I_L7214_148 >= 13 ) exit
 7214.             enddo
 7218.             $SC_zdepth_I342 = zdepth%dim_2%SM
 7218.             $SC_zdepth_I343 = zdepth%dim_2%LB
 7218.             $SC_zdepth_I341 = zdepth%dim_1%LB
 7218.             $I_L7218_184 = 0
 7218.             do
 7218.                $I_L7218_150 = 0
 7218. !dir$ ivdep
 7218.                do
 7218.                   (zdepth%base_addr)($SC_zdepth_I341 + $I_L7218_150, $SC_zdepth_I343 + $I_L7218_184, 0) = real( zdepth_r4(1 + $I_L7218_150, 1 + $I_L7218_184), 8 )
 7218.                   $I_L7218_150 = 1 + $I_L7218_150
 7218.                   if ( $I_L7218_150 >= 13 ) exit
 7218.                enddo
 7218.                $I_L7218_184 = 1 + $I_L7218_184
 7218.                if ( $I_L7218_184 >= 3 ) exit
 7218.             enddo
 7221.             $SC_zlt_fixed_I357 = zlt_fixed%dim_3%SM
 7221.             $SC_zlt_fixed_I358 = zlt_fixed%dim_3%LB
 7221.             $SC_zlt_fixed_I355 = zlt_fixed%dim_2%SM
 7221.             $SC_zlt_fixed_I356 = zlt_fixed%dim_2%LB
 7221.             $SC_zlt_fixed_I354 = zlt_fixed%dim_1%LB
 7220.             $SC_xcover_fixed_I352 = xcover_fixed%dim_3%SM
 7220.             $SC_xcover_fixed_I353 = xcover_fixed%dim_3%LB
 7220.             $SC_xcover_fixed_I350 = xcover_fixed%dim_2%SM
 7220.             $SC_xcover_fixed_I351 = xcover_fixed%dim_2%LB
 7220.             $SC_xcover_fixed_I349 = xcover_fixed%dim_1%LB
 7219.             $SC_green_fixed_I347 = green_fixed%dim_3%SM
 7219.             $SC_green_fixed_I348 = green_fixed%dim_3%LB
 7219.             $SC_green_fixed_I345 = green_fixed%dim_2%SM
 7219.             $SC_green_fixed_I346 = green_fixed%dim_2%LB
 7219.             $SC_green_fixed_I344 = green_fixed%dim_1%LB
 7219.             $I_L7219_210 = 0
 7219.             do
 7219.                $I_L7219_186 = 0
 7219. !dir$ ivdep
 7219.                do
 7219.                   $I_L7219_152 = 0
 7219.                   do
 7219.                      (green_fixed%base_addr)($SC_green_fixed_I344 + $I_L7219_152, $SC_green_fixed_I346 + $I_L7219_186, $SC_green_fixed_I348 + $I_L7219_210, 0) = real( green_r4(1 + $I_L7219_152, 1 + $I_L7219_186, 1 + $I_L7219_210), 8 )
 7220.                      (xcover_fixed%base_addr)($SC_xcover_fixed_I349 + $I_L7219_152, $SC_xcover_fixed_I351 + $I_L7219_186, $SC_xcover_fixed_I353 + $I_L7219_210, 0) = real( xcover_r4(1 + $I_L7219_152, 1 + $I_L7219_186, 1 + $I_L7219_210), 8 )
 7221.                      (zlt_fixed%base_addr)($SC_zlt_fixed_I354 + $I_L7219_152, $SC_zlt_fixed_I356 + $I_L7219_186, $SC_zlt_fixed_I358 + $I_L7219_210, 0) = real( zlt_r4(1 + $I_L7219_152, 1 + $I_L7219_186, 1 + $I_L7219_210), 8 )
 7219.                      $I_L7219_152 = 1 + $I_L7219_152
 7219.                      if ( $I_L7219_152 >= 13 ) exit
 7219.                   enddo
 7219.                   $I_L7219_186 = 1 + $I_L7219_186
 7219.                   if ( $I_L7219_186 >= 12 ) exit
 7219.                enddo
 7219.                $I_L7219_210 = 1 + $I_L7219_210
 7219.                if ( $I_L7219_210 >= 2 ) exit
 7219.             enddo
 7227.             $SC_xbc_I375 = xbc%dim_2%SM
 7227.             $SC_xbc_I376 = xbc%dim_2%LB
 7227.             $SC_xbc_I374 = xbc%dim_1%LB
 7226.             $SC_xdc_I372 = xdc%dim_2%SM
 7226.             $SC_xdc_I373 = xdc%dim_2%LB
 7226.             $SC_xdc_I371 = xdc%dim_1%LB
 7225.             $SC_z1_I369 = z1%dim_2%SM
 7225.             $SC_z1_I370 = z1%dim_2%LB
 7225.             $SC_z1_I368 = z1%dim_1%LB
 7224.             $SC_z2_I366 = z2%dim_2%SM
 7224.             $SC_z2_I367 = z2%dim_2%LB
 7224.             $SC_z2_I365 = z2%dim_1%LB
 7223.             $SC_xd_I363 = xd%dim_2%SM
 7223.             $SC_xd_I364 = xd%dim_2%LB
 7223.             $SC_xd_I362 = xd%dim_1%LB
 7222.             $SC_x0x_I360 = x0x%dim_2%SM
 7222.             $SC_x0x_I361 = x0x%dim_2%LB
 7222.             $SC_x0x_I359 = x0x%dim_1%LB
 7222.             $I_L7222_188 = 0
 7222. !dir$ ivdep
 7222.             do
 7222.                $I_L7222_154 = 0
 7222.                do
 7222.                   (x0x%base_addr)($SC_x0x_I359 + $I_L7222_154, $SC_x0x_I361 + $I_L7222_188, 0) = real( x0x_r4(1 + $I_L7222_154, 1 + $I_L7222_188), 8 )
 7223.                   (xd%base_addr)($SC_xd_I362 + $I_L7222_154, $SC_xd_I364 + $I_L7222_188, 0) = real( xd_r4(1 + $I_L7222_154, 1 + $I_L7222_188), 8 )
 7224.                   (z2%base_addr)($SC_z2_I365 + $I_L7222_154, $SC_z2_I367 + $I_L7222_188, 0) = real( z2_r4(1 + $I_L7222_154, 1 + $I_L7222_188), 8 )
 7225.                   (z1%base_addr)($SC_z1_I368 + $I_L7222_154, $SC_z1_I370 + $I_L7222_188, 0) = real( z1_r4(1 + $I_L7222_154, 1 + $I_L7222_188), 8 )
 7226.                   (xdc%base_addr)($SC_xdc_I371 + $I_L7222_154, $SC_xdc_I373 + $I_L7222_188, 0) = real( xdc_r4(1 + $I_L7222_154, 1 + $I_L7222_188), 8 )
 7227.                   (xbc%base_addr)($SC_xbc_I374 + $I_L7222_154, $SC_xbc_I376 + $I_L7222_188, 0) = real( xbc_r4(1 + $I_L7222_154, 1 + $I_L7222_188), 8 )
 7222.                   $I_L7222_154 = 1 + $I_L7222_154
 7222.                   if ( $I_L7222_154 >= 13 ) exit
 7222.                enddo
 7222.                $I_L7222_188 = 1 + $I_L7222_188
 7222.                if ( $I_L7222_188 >= 12 ) exit
 7222.             enddo
 7229.             $Unit_temp_O4 = nfalb
 7229.             _uread( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)cedfu_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 9, 1 )), 0x402060300000000L ), _iotype( (&)cedir_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 9, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( (&)cedfu1_r4(+:( 1, 2, 1 ), +:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 6, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( (&)cedir1_r4(+:( 1, 2, 1 ), +:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 6, 1 ), +:( 1, 3, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( (&)cedfu2_r4(+:( 1, 2, 1 ), +:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 6, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( (&)cedir2_r4(+:( 1, 2, 1 ), +:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 6, 1 ), +:( 1, 3, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( (&)cledfu_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 9, 1 )), 0x402060300000000L ), _iotype( (&)cledir_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 9, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( (&)xmiu_r4(+:( 1, 12, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ), _iotype( (&)cether_r4(+:( 1, 13, 1 ), +:( 1, 12, 1 ), +:( 1, 2, 1 )), 0x402060300000000L ), _iotype( (&)xmiw_r4(+:( 1, 12, 1 ), +:( 1, 3, 1 )), 0x402060300000000L ) ) )
 7237.             $SC_cledfu_I385 = cledfu%dim_3%SM
 7237.             $SC_cledfu_I386 = cledfu%dim_3%LB
 7237.             $SC_cledfu_I383 = cledfu%dim_2%SM
 7237.             $SC_cledfu_I384 = cledfu%dim_2%LB
 7237.             $SC_cledfu_I382 = cledfu%dim_1%LB
 7231.             $SC_cedfu_I380 = cedfu%dim_3%SM
 7231.             $SC_cedfu_I381 = cedfu%dim_3%LB
 7231.             $SC_cedfu_I378 = cedfu%dim_2%SM
 7231.             $SC_cedfu_I379 = cedfu%dim_2%LB
 7231.             $SC_cedfu_I377 = cedfu%dim_1%LB
 7231.             $I_L7231_212 = 0
 7231.             do
 7231.                $I_L7231_190 = 0
 7231. !dir$ ivdep
 7231.                do
 7231.                   $I_L7231_156 = 0
 7231.                   do
 7231.                      (cedfu%base_addr)($SC_cedfu_I377 + $I_L7231_156, $SC_cedfu_I379 + $I_L7231_190, $SC_cedfu_I381 + $I_L7231_212, 0) = real( cedfu_r4(1 + $I_L7231_156, 1 + $I_L7231_190, 1 + $I_L7231_212), 8 )
 7237.                      (cledfu%base_addr)($SC_cledfu_I382 + $I_L7231_156, $SC_cledfu_I384 + $I_L7231_190, $SC_cledfu_I386 + $I_L7231_212, 0) = real( cledfu_r4(1 + $I_L7231_156, 1 + $I_L7231_190, 1 + $I_L7231_212), 8 )
 7231.                      $I_L7231_156 = 1 + $I_L7231_156
 7231.                      if ( $I_L7231_156 >= 13 ) exit
 7231.                   enddo
 7231.                   $I_L7231_190 = 1 + $I_L7231_190
 7231.                   if ( $I_L7231_190 >= 12 ) exit
 7231.                enddo
 7231.                $I_L7231_212 = 1 + $I_L7231_212
 7231.                if ( $I_L7231_212 >= 9 ) exit
 7231.             enddo
 7238.             $SC_cledir_I399 = cledir%dim_4%SM
 7238.             $SC_cledir_I400 = cledir%dim_4%LB
 7238.             $SC_cledir_I397 = cledir%dim_3%SM
 7238.             $SC_cledir_I398 = cledir%dim_3%LB
 7238.             $SC_cledir_I395 = cledir%dim_2%SM
 7238.             $SC_cledir_I396 = cledir%dim_2%LB
 7238.             $SC_cledir_I394 = cledir%dim_1%LB
 7236.             $SC_cedir2_I433 = cedir2%dim_3%SM
 7236.             $SC_cedir2_I434 = cedir2%dim_3%LB
 7236.             $SC_cedir2_I431 = cedir2%dim_2%SM
 7236.             $SC_cedir2_I432 = cedir2%dim_2%LB
 7236.             $SC_cedir2_I430 = cedir2%dim_1%LB
 7235.             $SC_cedfu2_I417 = cedfu2%dim_5%SM
 7235.             $SC_cedfu2_I418 = cedfu2%dim_5%LB
 7235.             $SC_cedfu2_I415 = cedfu2%dim_4%SM
 7235.             $SC_cedfu2_I416 = cedfu2%dim_4%LB
 7235.             $SC_cedfu2_I413 = cedfu2%dim_3%SM
 7235.             $SC_cedfu2_I414 = cedfu2%dim_3%LB
 7235.             $SC_cedfu2_I411 = cedfu2%dim_2%SM
 7235.             $SC_cedfu2_I412 = cedfu2%dim_2%LB
 7235.             $SC_cedfu2_I410 = cedfu2%dim_1%LB
 7234.             $SC_cedir1_I428 = cedir1%dim_6%SM
 7234.             $SC_cedir1_I429 = cedir1%dim_6%LB
 7234.             $SC_cedir1_I426 = cedir1%dim_5%SM
 7234.             $SC_cedir1_I427 = cedir1%dim_5%LB
 7234.             $SC_cedir1_I424 = cedir1%dim_4%SM
 7234.             $SC_cedir1_I425 = cedir1%dim_4%LB
 7234.             $SC_cedir1_I422 = cedir1%dim_3%SM
 7234.             $SC_cedir1_I423 = cedir1%dim_3%LB
 7234.             $SC_cedir1_I420 = cedir1%dim_2%SM
 7234.             $SC_cedir1_I421 = cedir1%dim_2%LB
 7234.             $SC_cedir1_I419 = cedir1%dim_1%LB
 7233.             $SC_cedfu1_I408 = cedfu1%dim_5%SM
 7233.             $SC_cedfu1_I409 = cedfu1%dim_5%LB
 7233.             $SC_cedfu1_I406 = cedfu1%dim_4%SM
 7233.             $SC_cedfu1_I407 = cedfu1%dim_4%LB
 7233.             $SC_cedfu1_I404 = cedfu1%dim_3%SM
 7233.             $SC_cedfu1_I405 = cedfu1%dim_3%LB
 7233.             $SC_cedfu1_I402 = cedfu1%dim_2%SM
 7233.             $SC_cedfu1_I403 = cedfu1%dim_2%LB
 7233.             $SC_cedfu1_I401 = cedfu1%dim_1%LB
 7232.             $SC_cedir_I392 = cedir%dim_4%SM
 7232.             $SC_cedir_I393 = cedir%dim_4%LB
 7232.             $SC_cedir_I390 = cedir%dim_3%SM
 7232.             $SC_cedir_I391 = cedir%dim_3%LB
 7232.             $SC_cedir_I388 = cedir%dim_2%SM
 7232.             $SC_cedir_I389 = cedir%dim_2%LB
 7232.             $SC_cedir_I387 = cedir%dim_1%LB
 7232.             $I_L7232_228 = 0
 7232.             do
 7232.                $I_L7232_214 = 0
 7232.                do
 7232.                   $I_L7232_192 = 0
 7232. !dir$ ivdep
 7232.                   do
 7232.                      $I_L7232_158 = 0
 7232.                      do
 7232.                         (cedir%base_addr)($SC_cedir_I387 + $I_L7232_158, $SC_cedir_I389 + $I_L7232_192, $SC_cedir_I391 + $I_L7232_214, $SC_cedir_I393 + $I_L7232_228, 0) = real( cedir_r4(1 + $I_L7232_158, 1 + $I_L7232_192, 1 + $I_L7232_214, 1 + $I_L7232_228), 8 )
 7238.                         (cledir%base_addr)($SC_cledir_I394 + $I_L7232_158, $SC_cledir_I396 + $I_L7232_192, $SC_cledir_I398 + $I_L7232_214, $SC_cledir_I400 + $I_L7232_228, 0) = real( cledir_r4(1 + $I_L7232_158, 1 + $I_L7232_192, 1 + $I_L7232_214, 1 + $I_L7232_228), 8 )
 7232.                         $I_L7232_158 = 1 + $I_L7232_158
 7232.                         if ( $I_L7232_158 >= 13 ) exit
 7232.                      enddo
 7232.                      $I_L7232_192 = 1 + $I_L7232_192
 7232.                      if ( $I_L7232_192 >= 12 ) exit
 7232.                   enddo
 7232.                   $I_L7232_214 = 1 + $I_L7232_214
 7232.                   if ( $I_L7232_214 >= 9 ) exit
 7232.                enddo
 7233.                $I_L7233_222 = 0
 7233.                do
 7233.                   $I_L7233_216 = 0
 7233. !dir$ ivdep
 7233.                   do
 7233.                      $I_L7233_194 = 0
 7233.                      do
 7233.                         $I_L7233_160 = 0
 7233.                         do
 7233.                            (cedfu1%base_addr)($SC_cedfu1_I401 + $I_L7233_160, $SC_cedfu1_I403 + $I_L7233_194, $SC_cedfu1_I405 + $I_L7233_216, $SC_cedfu1_I407 + $I_L7233_222, $SC_cedfu1_I409 + $I_L7232_228, 0) = real( cedfu1_r4(1 + $I_L7233_160, 1 + $I_L7233_194, 1 + $I_L7233_216, 1 + $I_L7233_222, 1 + $I_L7232_228), 8 )
 7235.                            (cedfu2%base_addr)($SC_cedfu2_I410 + $I_L7233_160, $SC_cedfu2_I412 + $I_L7233_194, $SC_cedfu2_I414 + $I_L7233_216, $SC_cedfu2_I416 + $I_L7233_222, $SC_cedfu2_I418 + $I_L7232_228, 0) = real( cedfu2_r4(1 + $I_L7233_160, 1 + $I_L7233_194, 1 + $I_L7233_216, 1 + $I_L7233_222, 1 + $I_L7232_228), 8 )
 7233.                            $I_L7233_160 = 1 + $I_L7233_160
 7233.                            if ( $I_L7233_160 >= 2 ) exit
 7233.                         enddo
 7233.                         $I_L7233_194 = 1 + $I_L7233_194
 7233.                         if ( $I_L7233_194 >= 13 ) exit
 7233.                      enddo
 7233.                      $I_L7233_216 = 1 + $I_L7233_216
 7233.                      if ( $I_L7233_216 >= 12 ) exit
 7233.                   enddo
 7233.                   $I_L7233_222 = 1 + $I_L7233_222
 7233.                   if ( $I_L7233_222 >= 6 ) exit
 7233.                enddo
 7236.                $SC_cedir2_I439 = cedir2%dim_6%SM
 7236.                $SC_cedir2_I440 = cedir2%dim_6%LB
 7236.                $SC_cedir2_I437 = cedir2%dim_5%SM
 7236.                $SC_cedir2_I438 = cedir2%dim_5%LB
 7236.                $SC_cedir2_I435 = cedir2%dim_4%SM
 7236.                $SC_cedir2_I436 = cedir2%dim_4%LB
 7234.                $I_L7234_226 = 0
 7234.                do
 7234.                   $I_L7234_224 = 0
 7234.                   do
 7234.                      $I_L7234_218 = 0
 7234. !dir$ ivdep
 7234.                      do
 7234.                         $I_L7234_196 = 0
 7234.                         do
 7234.                            $I_L7234_162 = 0
 7234.                            do
 7234.                               (cedir1%base_addr)($SC_cedir1_I419 + $I_L7234_162, $SC_cedir1_I421 + $I_L7234_196, $SC_cedir1_I423 + $I_L7234_218, $SC_cedir1_I425 + $I_L7234_224, $SC_cedir1_I427 + $I_L7234_226, $SC_cedir1_I429 + $I_L7232_228, 0) = real( cedir1_r4(1 + $I_L7234_162, 1 + $I_L7234_196, 1 + $I_L7234_218, 1 + $I_L7234_224, 1 + $I_L7234_226, 1 + $I_L7232_228), 8 )
 7236.                               (cedir2%base_addr)($SC_cedir2_I430 + $I_L7234_162, $SC_cedir2_I432 + $I_L7234_196, $SC_cedir2_I434 + $I_L7234_218, $SC_cedir2_I436 + $I_L7234_224, $SC_cedir2_I438 + $I_L7234_226, $SC_cedir2_I440 + $I_L7232_228, 0) = real( cedir2_r4(1 + $I_L7234_162, 1 + $I_L7234_196, 1 + $I_L7234_218, 1 + $I_L7234_224, 1 + $I_L7234_226, 1 + $I_L7232_228), 8 )
 7234.                               $I_L7234_162 = 1 + $I_L7234_162
 7234.                               if ( $I_L7234_162 >= 2 ) exit
 7234.                            enddo
 7234.                            $I_L7234_196 = 1 + $I_L7234_196
 7234.                            if ( $I_L7234_196 >= 13 ) exit
 7234.                         enddo
 7234.                         $I_L7234_218 = 1 + $I_L7234_218
 7234.                         if ( $I_L7234_218 >= 12 ) exit
 7234.                      enddo
 7234.                      $I_L7234_224 = 1 + $I_L7234_224
 7234.                      if ( $I_L7234_224 >= 6 ) exit
 7234.                   enddo
 7234.                   $I_L7234_226 = 1 + $I_L7234_226
 7234.                   if ( $I_L7234_226 >= 3 ) exit
 7234.                enddo
 7232.                $I_L7232_228 = 1 + $I_L7232_228
 7232.                if ( $I_L7232_228 >= 3 ) exit
 7232.             enddo
 7239.             $SC_cether_I444 = cether%dim_3%SM
 7239.             $SC_cether_I445 = cether%dim_3%LB
 7239.             $SC_cether_I442 = cether%dim_2%SM
 7239.             $SC_cether_I443 = cether%dim_2%LB
 7239.             $SC_cether_I441 = cether%dim_1%LB
 7239.             $I_L7239_220 = 0
 7239.             do
 7239.                $I_L7239_198 = 0
 7239. !dir$ ivdep
 7239.                do
 7239.                   $I_L7239_164 = 0
 7239.                   do
 7239.                      (cether%base_addr)($SC_cether_I441 + $I_L7239_164, $SC_cether_I443 + $I_L7239_198, $SC_cether_I445 + $I_L7239_220, 0) = real( cether_r4(1 + $I_L7239_164, 1 + $I_L7239_198, 1 + $I_L7239_220), 8 )
 7239.                      $I_L7239_164 = 1 + $I_L7239_164
 7239.                      if ( $I_L7239_164 >= 13 ) exit
 7239.                   enddo
 7239.                   $I_L7239_198 = 1 + $I_L7239_198
 7239.                   if ( $I_L7239_198 >= 12 ) exit
 7239.                enddo
 7239.                $I_L7239_220 = 1 + $I_L7239_220
 7239.                if ( $I_L7239_220 >= 2 ) exit
 7239.             enddo
 7241.             $SC_xmiw_I450 = xmiw%dim_2%SM
 7241.             $SC_xmiw_I451 = xmiw%dim_2%LB
 7241.             $SC_xmiw_I449 = xmiw%dim_1%LB
 7240.             $SC_xmiu_I447 = xmiu%dim_2%SM
 7240.             $SC_xmiu_I448 = xmiu%dim_2%LB
 7240.             $SC_xmiu_I446 = xmiu%dim_1%LB
 7240.             $I_L7240_200 = 0
 7240.             do
 7240.                $I_L7240_166 = 0
 7240. !dir$ ivdep
 7240.                do
 7240.                   (xmiu%base_addr)($SC_xmiu_I446 + $I_L7240_166, $SC_xmiu_I448 + $I_L7240_200, 0) = real( xmiu_r4(1 + $I_L7240_166, 1 + $I_L7240_200), 8 )
 7241.                   (xmiw%base_addr)($SC_xmiw_I449 + $I_L7240_166, $SC_xmiw_I451 + $I_L7240_200, 0) = real( xmiw_r4(1 + $I_L7240_166, 1 + $I_L7240_200), 8 )
 7240.                   $I_L7240_166 = 1 + $I_L7240_166
 7240.                   if ( $I_L7240_166 >= 12 ) exit
 7240.                enddo
 7240.                $I_L7240_200 = 1 + $I_L7240_200
 7240.                if ( $I_L7240_200 >= 3 ) exit
 7240.             enddo
 7242.             t$3432 = nfsibd
 7242.             t$3446 = __rewf( t$3432, 0, 0, 0x100000000000000L, 0, 0 )
 7244.             t$3432 = nfalb
 7244.             t$3447 = __rewf( t$3432, 0, 0, 0x100000000000000L, 0, 0 )
 7251.             $SC_green_fixed_I6 = green_fixed%dim_3%SM
 7251.             $SC_green_fixed_I5 = green_fixed%dim_3%EX
 7251.             $SC_green_fixed_I7 = green_fixed%dim_3%LB
 7251.             $SC_green_fixed_I3 = green_fixed%dim_2%SM
 7251.             $SC_green_fixed_I2 = green_fixed%dim_2%EX
 7251.             $SC_green_fixed_I4 = green_fixed%dim_2%LB
 7251.             $SC_green_fixed_I0 = green_fixed%dim_1%EX
 7251.             $SC_green_fixed_I1 = green_fixed%dim_1%LB
 7248.             $I_L7248_206 = 0
 7248. !dir$ ivdep
 7248.             do
 7249.                $I_L7249_176 = 0
 7249.                do
 7250.                   $I_L7250_134 = 0
 7250. !dir$ unroll 4
 7250.                   do
 7251.                      (green_fixed%base_addr)(1 + $I_L7250_134, 1 + $I_L7249_176, 1 + $I_L7248_206, 0) = max( 1.0e-4, (green_fixed%base_addr)(1 + $I_L7250_134, 1 + $I_L7249_176, 1 + $I_L7248_206, 0) )
 7252.                      $I_L7250_134 = 1 + $I_L7250_134
 7250.                      if ( $I_L7250_134 >= 13 ) exit
 7250.                   enddo
 7253.                   $I_L7249_176 = 1 + $I_L7249_176
 7252.                   if ( $I_L7249_176 >= 12 ) exit
 7252.                enddo
 7254.                $I_L7248_206 = 1 + $I_L7248_206
 7253.                if ( $I_L7248_206 >= 2 ) exit
 7253.             enddo
 7269.             $SC_rootd_I52 = rootd%dim_2%SM
 7269.             $SC_rootd_I51 = rootd%dim_2%EX
 7269.             $SC_rootd_I53 = rootd%dim_2%LB
 7269.             $SC_rootd_I49 = rootd%dim_1%EX
 7269.             $SC_rootd_I50 = rootd%dim_1%LB
 7268.             $SC_defac_fixed_I45 = defac_fixed%dim_2%SM
 7268.             $SC_defac_fixed_I44 = defac_fixed%dim_2%EX
 7268.             $SC_defac_fixed_I46 = defac_fixed%dim_2%LB
 7268.             $SC_defac_fixed_I42 = defac_fixed%dim_1%EX
 7268.             $SC_defac_fixed_I43 = defac_fixed%dim_1%LB
 7267.             $SC_tu_fixed_I38 = tu_fixed%dim_2%SM
 7267.             $SC_tu_fixed_I37 = tu_fixed%dim_2%EX
 7267.             $SC_tu_fixed_I39 = tu_fixed%dim_2%LB
 7267.             $SC_tu_fixed_I35 = tu_fixed%dim_1%EX
 7267.             $SC_tu_fixed_I36 = tu_fixed%dim_1%LB
 7266.             $SC_tll_fixed_I31 = tll_fixed%dim_2%SM
 7266.             $SC_tll_fixed_I30 = tll_fixed%dim_2%EX
 7266.             $SC_tll_fixed_I32 = tll_fixed%dim_2%LB
 7266.             $SC_tll_fixed_I28 = tll_fixed%dim_1%EX
 7266.             $SC_tll_fixed_I29 = tll_fixed%dim_1%LB
 7265.             $SC_topt_fixed_I24 = topt_fixed%dim_2%SM
 7265.             $SC_topt_fixed_I23 = topt_fixed%dim_2%EX
 7265.             $SC_topt_fixed_I25 = topt_fixed%dim_2%LB
 7265.             $SC_topt_fixed_I21 = topt_fixed%dim_1%EX
 7265.             $SC_topt_fixed_I22 = topt_fixed%dim_1%LB
 7261.             $SC_rstpar_fixed_I14 = rstpar_fixed%dim_3%SM
 7261.             $SC_rstpar_fixed_I13 = rstpar_fixed%dim_3%EX
 7261.             $SC_rstpar_fixed_I15 = rstpar_fixed%dim_3%LB
 7261.             $SC_rstpar_fixed_I11 = rstpar_fixed%dim_2%SM
 7261.             $SC_rstpar_fixed_I10 = rstpar_fixed%dim_2%EX
 7261.             $SC_rstpar_fixed_I12 = rstpar_fixed%dim_2%LB
 7261.             $SC_rstpar_fixed_I8 = rstpar_fixed%dim_1%EX
 7261.             $SC_rstpar_fixed_I9 = rstpar_fixed%dim_1%LB
 7269.             $SC_yootd_I54 = yootd%dim_1%EX
 7269.             $SC_yootd_I55 = yootd%dim_1%LB
 7268.             $SC_yefac_I47 = yefac%dim_1%EX
 7268.             $SC_yefac_I48 = yefac%dim_1%LB
 7267.             $SC_yu_I40 = yu%dim_1%EX
 7267.             $SC_yu_I41 = yu%dim_1%LB
 7266.             $SC_yll_I33 = yll%dim_1%EX
 7266.             $SC_yll_I34 = yll%dim_1%LB
 7265.             $SC_yopt_I26 = yopt%dim_1%EX
 7265.             $SC_yopt_I27 = yopt%dim_1%LB
 7261.             $SC_ystpar_I19 = ystpar%dim_2%SM
 7261.             $SC_ystpar_I18 = ystpar%dim_2%EX
 7261.             $SC_ystpar_I20 = ystpar%dim_2%LB
 7261.             $SC_ystpar_I16 = ystpar%dim_1%EX
 7261.             $SC_ystpar_I17 = ystpar%dim_1%LB
 7279.             $SC_zlt_fixed_I62 = zlt_fixed%dim_3%SM
 7279.             $SC_zlt_fixed_I61 = zlt_fixed%dim_3%EX
 7279.             $SC_zlt_fixed_I63 = zlt_fixed%dim_3%LB
 7279.             $SC_zlt_fixed_I59 = zlt_fixed%dim_2%SM
 7279.             $SC_zlt_fixed_I58 = zlt_fixed%dim_2%EX
 7279.             $SC_zlt_fixed_I60 = zlt_fixed%dim_2%LB
 7279.             $SC_zlt_fixed_I56 = zlt_fixed%dim_1%EX
 7279.             $SC_zlt_fixed_I57 = zlt_fixed%dim_1%LB
 7281.             $SC_xcover_fixed_I80 = xcover_fixed%dim_3%SM
 7281.             $SC_xcover_fixed_I79 = xcover_fixed%dim_3%EX
 7281.             $SC_xcover_fixed_I81 = xcover_fixed%dim_3%LB
 7281.             $SC_xcover_fixed_I77 = xcover_fixed%dim_2%SM
 7281.             $SC_xcover_fixed_I76 = xcover_fixed%dim_2%EX
 7281.             $SC_xcover_fixed_I78 = xcover_fixed%dim_2%LB
 7281.             $SC_xcover_fixed_I74 = xcover_fixed%dim_1%EX
 7281.             $SC_xcover_fixed_I75 = xcover_fixed%dim_1%LB
 7280.             $SC_green_fixed_I6 = green_fixed%dim_3%SM
 7280.             $SC_green_fixed_I5 = green_fixed%dim_3%EX
 7280.             $SC_green_fixed_I7 = green_fixed%dim_3%LB
 7280.             $SC_green_fixed_I3 = green_fixed%dim_2%SM
 7280.             $SC_green_fixed_I2 = green_fixed%dim_2%EX
 7280.             $SC_green_fixed_I4 = green_fixed%dim_2%LB
 7280.             $SC_green_fixed_I0 = green_fixed%dim_1%EX
 7280.             $SC_green_fixed_I1 = green_fixed%dim_1%LB
 7279.             $SC_ylt_I67 = ylt%dim_2%SM
 7279.             $SC_ylt_I66 = ylt%dim_2%EX
 7279.             $SC_ylt_I68 = ylt%dim_2%LB
 7279.             $SC_ylt_I64 = ylt%dim_1%EX
 7279.             $SC_ylt_I65 = ylt%dim_1%LB
 7281.             $SC_ycover_I85 = ycover%dim_2%SM
 7281.             $SC_ycover_I84 = ycover%dim_2%EX
 7281.             $SC_ycover_I86 = ycover%dim_2%LB
 7281.             $SC_ycover_I82 = ycover%dim_1%EX
 7281.             $SC_ycover_I83 = ycover%dim_1%LB
 7280.             $SC_yreen_I72 = yreen%dim_2%SM
 7280.             $SC_yreen_I71 = yreen%dim_2%EX
 7280.             $SC_yreen_I73 = yreen%dim_2%LB
 7280.             $SC_yreen_I69 = yreen%dim_1%EX
 7280.             $SC_yreen_I70 = yreen%dim_1%LB
 7256.             $I_L7256_178 = 0
 7256.             do
 7257.                $jtyp_S4 = 12
 7258.                if ( $I_L7256_178 == 1 ) then
 7258.                   $jtyp_S4 = 13
 7258.                endif
 7260.                $I_L7260_136 = 0
 7260. !dir$ ivdep
 7260.                do
 7261.                   (ystpar%base_addr)(1 + $I_L7256_178, 1 + $I_L7260_136, 0) = (rstpar_fixed%base_addr)($jtyp_S4, 1, 1 + $I_L7260_136, 0)
 7262.                   $I_L7260_136 = 1 + $I_L7260_136
 7260.                   if ( $I_L7260_136 >= 3 ) exit
 7260.                enddo
 7265.                (yopt%base_addr)(1 + $I_L7256_178, 0) = (topt_fixed%base_addr)($jtyp_S4, 1, 0)
 7266.                (yll%base_addr)(1 + $I_L7256_178, 0) = (tll_fixed%base_addr)($jtyp_S4, 1, 0)
 7267.                (yu%base_addr)(1 + $I_L7256_178, 0) = (tu_fixed%base_addr)($jtyp_S4, 1, 0)
 7268.                (yefac%base_addr)(1 + $I_L7256_178, 0) = (defac_fixed%base_addr)($jtyp_S4, 1, 0)
 7269.                (yootd%base_addr)(1 + $I_L7256_178, 0) = (rootd%base_addr)($jtyp_S4, 1, 0)
 7270.                (yh1%base_addr)(1 + $I_L7256_178, 0) = (ph1_fixed%base_addr)($jtyp_S4, 1, 0)
 7271.                (yh2%base_addr)(1 + $I_L7256_178, 0) = (ph2_fixed%base_addr)($jtyp_S4, 1, 0)
 7275.                $I_L7275_138 = 0
 7275. !dir$ ivdep
 7275. !dir$ loop_info (automatic) cache_nt( green_fixed )
 7275.                do
 7277.                   $jtyp_S7 = 12
 7278.                   if ( $I_L7256_178 == 1 ) then
 7278.                      $jtyp_S7 = 13
 7278.                   endif
 7279.                   (ylt%base_addr)(1 + $I_L7275_138, 1 + $I_L7256_178, 0) = (zlt_fixed%base_addr)($jtyp_S7, 1 + $I_L7275_138, 1, 0)
 7280.                   (yreen%base_addr)(1 + $I_L7275_138, 1 + $I_L7256_178, 0) = (green_fixed%base_addr)($jtyp_S7, 1 + $I_L7275_138, 1, 0)
 7281.                   (ycover%base_addr)(1 + $I_L7275_138, 1 + $I_L7256_178, 0) = (xcover_fixed%base_addr)($jtyp_S7, 1 + $I_L7275_138, 1, 0)
 7283.                   $I_L7275_138 = 1 + $I_L7275_138
 7278.                   if ( $I_L7275_138 >= 12 ) exit
 7278.                enddo
 7273.                $I_L7256_178 = 1 + $I_L7256_178
 7262.                if ( $I_L7256_178 >= 2 ) exit
 7262.             enddo
 7296.             $SC_rootd_I52 = rootd%dim_2%SM
 7296.             $SC_rootd_I51 = rootd%dim_2%EX
 7296.             $SC_rootd_I53 = rootd%dim_2%LB
 7296.             $SC_rootd_I49 = rootd%dim_1%EX
 7296.             $SC_rootd_I50 = rootd%dim_1%LB
 7295.             $SC_ph2_fixed_I100 = ph2_fixed%dim_2%SM
 7295.             $SC_ph2_fixed_I99 = ph2_fixed%dim_2%EX
 7295.             $SC_ph2_fixed_I101 = ph2_fixed%dim_2%LB
 7295.             $SC_ph2_fixed_I97 = ph2_fixed%dim_1%EX
 7295.             $SC_ph2_fixed_I98 = ph2_fixed%dim_1%LB
 7294.             $SC_ph1_fixed_I95 = ph1_fixed%dim_2%SM
 7294.             $SC_ph1_fixed_I94 = ph1_fixed%dim_2%EX
 7294.             $SC_ph1_fixed_I96 = ph1_fixed%dim_2%LB
 7294.             $SC_ph1_fixed_I92 = ph1_fixed%dim_1%EX
 7294.             $SC_ph1_fixed_I93 = ph1_fixed%dim_1%LB
 7293.             $SC_defac_fixed_I45 = defac_fixed%dim_2%SM
 7293.             $SC_defac_fixed_I44 = defac_fixed%dim_2%EX
 7293.             $SC_defac_fixed_I46 = defac_fixed%dim_2%LB
 7293.             $SC_defac_fixed_I42 = defac_fixed%dim_1%EX
 7293.             $SC_defac_fixed_I43 = defac_fixed%dim_1%LB
 7292.             $SC_tu_fixed_I38 = tu_fixed%dim_2%SM
 7292.             $SC_tu_fixed_I37 = tu_fixed%dim_2%EX
 7292.             $SC_tu_fixed_I39 = tu_fixed%dim_2%LB
 7292.             $SC_tu_fixed_I35 = tu_fixed%dim_1%EX
 7292.             $SC_tu_fixed_I36 = tu_fixed%dim_1%LB
 7291.             $SC_tll_fixed_I31 = tll_fixed%dim_2%SM
 7291.             $SC_tll_fixed_I30 = tll_fixed%dim_2%EX
 7291.             $SC_tll_fixed_I32 = tll_fixed%dim_2%LB
 7291.             $SC_tll_fixed_I28 = tll_fixed%dim_1%EX
 7291.             $SC_tll_fixed_I29 = tll_fixed%dim_1%LB
 7290.             $SC_topt_fixed_I24 = topt_fixed%dim_2%SM
 7290.             $SC_topt_fixed_I23 = topt_fixed%dim_2%EX
 7290.             $SC_topt_fixed_I25 = topt_fixed%dim_2%LB
 7290.             $SC_topt_fixed_I21 = topt_fixed%dim_1%EX
 7290.             $SC_topt_fixed_I22 = topt_fixed%dim_1%LB
 7289.             $SC_chil_fixed_I90 = chil_fixed%dim_2%SM
 7289.             $SC_chil_fixed_I89 = chil_fixed%dim_2%EX
 7289.             $SC_chil_fixed_I91 = chil_fixed%dim_2%LB
 7289.             $SC_chil_fixed_I87 = chil_fixed%dim_1%EX
 7289.             $SC_chil_fixed_I88 = chil_fixed%dim_1%LB
 7287.             $SC_rstpar_fixed_I14 = rstpar_fixed%dim_3%SM
 7287.             $SC_rstpar_fixed_I13 = rstpar_fixed%dim_3%EX
 7287.             $SC_rstpar_fixed_I15 = rstpar_fixed%dim_3%LB
 7287.             $SC_rstpar_fixed_I11 = rstpar_fixed%dim_2%SM
 7287.             $SC_rstpar_fixed_I10 = rstpar_fixed%dim_2%EX
 7287.             $SC_rstpar_fixed_I12 = rstpar_fixed%dim_2%LB
 7287.             $SC_rstpar_fixed_I8 = rstpar_fixed%dim_1%EX
 7287.             $SC_rstpar_fixed_I9 = rstpar_fixed%dim_1%LB
 7286.             $I_L7286_204 = 0
 7286.             do
 7285.                $I_L7285_172 = 0
 7285. !dir$ ivdep
 7285.                do
 7287.                   (rstpar_fixed%base_addr)(13, 1 + $I_L7285_172, 1 + $I_L7286_204, 0) = 1000.0
 7297.                   $I_L7285_172 = 1 + $I_L7285_172
 7286.                   if ( $I_L7285_172 >= 2 ) exit
 7286.                enddo
 7288.                $I_L7286_204 = 1 + $I_L7286_204
 7288.                if ( $I_L7286_204 >= 3 ) exit
 7288.             enddo
 7285.             $I_L7285_174 = 0
 7285. !dir$ ivdep
 7285.             do
 7289.                (chil_fixed%base_addr)(13, 1 + $I_L7285_174, 0) = 1.0e-2
 7290.                (topt_fixed%base_addr)(13, 1 + $I_L7285_174, 0) = 310.0
 7291.                (tll_fixed%base_addr)(13, 1 + $I_L7285_174, 0) = 300.0
 7292.                (tu_fixed%base_addr)(13, 1 + $I_L7285_174, 0) = 320.0
 7293.                (defac_fixed%base_addr)(13, 1 + $I_L7285_174, 0) = 0.0
 7294.                (ph1_fixed%base_addr)(13, 1 + $I_L7285_174, 0) = 3.0
 7295.                (ph2_fixed%base_addr)(13, 1 + $I_L7285_174, 0) = 6.0
 7296.                (rootd%base_addr)(13, 1 + $I_L7285_174, 0) = 2.1000000000000001
 7297.                $I_L7285_174 = 1 + $I_L7285_174
 7288.                if ( $I_L7285_174 >= 2 ) exit
 7288.             enddo
 7299.             (bee%base_addr)(13, 0) = 4.7999999999999998
 7300.             (phsat%base_addr)(13, 0) = -1.6700000000000001e-1
 7301.             (satco%base_addr)(13, 0) = 7.6199999999999995e-5
 7302.             (poros%base_addr)(13, 0) = 4.3519999999999998e-1
 7313.             $SC_xbc_I125 = xbc%dim_2%SM
 7313.             $SC_xbc_I124 = xbc%dim_2%EX
 7313.             $SC_xbc_I126 = xbc%dim_2%LB
 7313.             $SC_xbc_I122 = xbc%dim_1%EX
 7313.             $SC_xbc_I123 = xbc%dim_1%LB
 7314.             $SC_xdc_I130 = xdc%dim_2%SM
 7314.             $SC_xdc_I129 = xdc%dim_2%EX
 7314.             $SC_xdc_I131 = xdc%dim_2%LB
 7314.             $SC_xdc_I127 = xdc%dim_1%EX
 7314.             $SC_xdc_I128 = xdc%dim_1%LB
 7308.             $SC_z1_I110 = z1%dim_2%SM
 7308.             $SC_z1_I109 = z1%dim_2%EX
 7308.             $SC_z1_I111 = z1%dim_2%LB
 7308.             $SC_z1_I107 = z1%dim_1%EX
 7308.             $SC_z1_I108 = z1%dim_1%LB
 7307.             $SC_z2_I105 = z2%dim_2%SM
 7307.             $SC_z2_I104 = z2%dim_2%EX
 7307.             $SC_z2_I106 = z2%dim_2%LB
 7307.             $SC_z2_I102 = z2%dim_1%EX
 7307.             $SC_z2_I103 = z2%dim_1%LB
 7312.             $SC_xd_I120 = xd%dim_2%SM
 7312.             $SC_xd_I119 = xd%dim_2%EX
 7312.             $SC_xd_I121 = xd%dim_2%LB
 7312.             $SC_xd_I117 = xd%dim_1%EX
 7312.             $SC_xd_I118 = xd%dim_1%LB
 7311.             $SC_x0x_I115 = x0x%dim_2%SM
 7311.             $SC_x0x_I114 = x0x%dim_2%EX
 7311.             $SC_x0x_I116 = x0x%dim_2%LB
 7311.             $SC_x0x_I112 = x0x%dim_1%EX
 7311.             $SC_x0x_I113 = x0x%dim_1%LB
 7305.             $SC_zlt_fixed_I62 = zlt_fixed%dim_3%SM
 7305.             $SC_zlt_fixed_I61 = zlt_fixed%dim_3%EX
 7305.             $SC_zlt_fixed_I63 = zlt_fixed%dim_3%LB
 7305.             $SC_zlt_fixed_I59 = zlt_fixed%dim_2%SM
 7305.             $SC_zlt_fixed_I58 = zlt_fixed%dim_2%EX
 7305.             $SC_zlt_fixed_I60 = zlt_fixed%dim_2%LB
 7305.             $SC_zlt_fixed_I56 = zlt_fixed%dim_1%EX
 7305.             $SC_zlt_fixed_I57 = zlt_fixed%dim_1%LB
 7309.             $SC_xcover_fixed_I80 = xcover_fixed%dim_3%SM
 7309.             $SC_xcover_fixed_I79 = xcover_fixed%dim_3%EX
 7309.             $SC_xcover_fixed_I81 = xcover_fixed%dim_3%LB
 7309.             $SC_xcover_fixed_I77 = xcover_fixed%dim_2%SM
 7309.             $SC_xcover_fixed_I76 = xcover_fixed%dim_2%EX
 7309.             $SC_xcover_fixed_I78 = xcover_fixed%dim_2%LB
 7309.             $SC_xcover_fixed_I74 = xcover_fixed%dim_1%EX
 7309.             $SC_xcover_fixed_I75 = xcover_fixed%dim_1%LB
 7304.             $I_L7304_140 = 0
 7304. !dir$ ivdep
 7304.             do
 7305.                (zlt_fixed%base_addr)(13, 1 + $I_L7304_140, 1, 0) = 1.0e-4
 7306.                (zlt_fixed%base_addr)(13, 1 + $I_L7304_140, 2, 0) = 1.0e-4
 7307.                (z2%base_addr)(13, 1 + $I_L7304_140, 0) = 1.0000000000000001e-1
 7308.                (z1%base_addr)(13, 1 + $I_L7304_140, 0) = 1.0e-4
 7309.                (xcover_fixed%base_addr)(13, 1 + $I_L7304_140, 1, 0) = 1.0e-4
 7310.                (xcover_fixed%base_addr)(13, 1 + $I_L7304_140, 2, 0) = 1.0e-4
 7311.                (x0x%base_addr)(13, 1 + $I_L7304_140, 0) = 1.0e-2
 7312.                (xd%base_addr)(13, 1 + $I_L7304_140, 0) = 4.0000000000000002e-4
 7313.                (xbc%base_addr)(13, 1 + $I_L7304_140, 0) = 35461.0
 7314.                (xdc%base_addr)(13, 1 + $I_L7304_140, 0) = 28.5
 7315.                $I_L7304_140 = 1 + $I_L7304_140
 7304.                if ( $I_L7304_140 >= 12 ) exit
 7304.             enddo
 7317.             (zdepth%base_addr)(13, 1, 0) = 1.0
 7318.             (zdepth%base_addr)(13, 2, 0) = 1.0
 7319.             (zdepth%base_addr)(13, 3, 0) = 1.0
 7324.             $dz_S12 = 8440.4416326530609 * log( ( si1 * 1.0/sl1 ) )
 7327.             $dzcut_S13 = 5.9999999999999998e-1 * $dz_S12
 7328.             $SC_xd_I363 = xd%dim_2%SM
 7328.             $SC_xd_I453 = xd%dim_2%EX
 7328.             $SC_xd_I364 = xd%dim_2%LB
 7328.             $SC_xd_I452 = xd%dim_1%EX
 7328.             $SC_xd_I362 = xd%dim_1%LB
 7328.             $I_L7328_168 = 0
 7328. !dir$ ivdep
 7328.             do
 7328.                (xd%base_addr)(1, 1 + $I_L7328_168, 0) = min( $dzcut_S13, (xd%base_addr)(1, 1 + $I_L7328_168, 0) )
 7328.                $I_L7328_168 = 1 + $I_L7328_168
 7328.                if ( $I_L7328_168 >= 12 ) exit
 7328.             enddo
 7333.             $dzcut_S14 = 5.9999999999999998e-1 * $dz_S12
 7334.             $SC_xd_I363 = xd%dim_2%SM
 7334.             $SC_xd_I453 = xd%dim_2%EX
 7334.             $SC_xd_I364 = xd%dim_2%LB
 7334.             $SC_xd_I452 = xd%dim_1%EX
 7334.             $SC_xd_I362 = xd%dim_1%LB
 7334.             $I_L7334_202 = 0
 7334.             do
 7334.                $I_L7334_170 = 0
 7334. !dir$ ivdep
 7334.                do
 7334.                   (xd%base_addr)(2 + $I_L7334_170, 1 + $I_L7334_202, 0) = min( $dzcut_S14, (xd%base_addr)(2 + $I_L7334_170, 1 + $I_L7334_202, 0) )
 7334.                   $I_L7334_170 = 1 + $I_L7334_170
 7334.                   if ( $I_L7334_170 >= 12 ) exit
 7334.                enddo
 7334.                $I_L7334_202 = 1 + $I_L7334_202
 7334.                if ( $I_L7334_202 >= 12 ) exit
 7334.             enddo
 7334.          endif
 7334.       endif
 7335.       return
 7335.       end
 7335.       
 7340.       
 7340.       subroutine re_assign_sib_soil_prop
 7396.       return
 7396.       end
 7396.       
 7400.       
 7400.       subroutine wheat( latitu, itype, nmax, colrad, month, xday, yrl, idatec, monl, nsx )
 7400.       t$1366 = nmax
 7454.       t$2248 = _zla( 0, nmax )
 7467.       t$2251 = 8 * _zla( 0, nmax )
 7471.       t$2252 = 8 * ( 7 + 8 * _zla( 0, nmax ) ) / 8
 7471.       t$2254 = t$2252 + 8 * _zla( 0, nmax )
 7472.       t$2255 = 8 * ( 7 + t$2252 + 8 * _zla( 0, nmax ) ) / 8
 7472.       t$2257 = t$2255 + 8 * _zla( 0, nmax )
 7470.       t$2258 = 8 * ( 7 + t$2255 + 8 * _zla( 0, nmax ) ) / 8
 7470.       t$2260 = t$2258 + 8 * _zla( 0, nmax )
 7482.       t$2262 = t$2258 + 12 * _zla( 0, nmax )
 7481.       t$2264 = t$2258 + 16 * _zla( 0, nmax )
 7400.       t$2265 = _zla( 0, nmax )
 7400.       t$2266 = 9 * _zla( 0, nmax )
 7487.       t$2267 = 8 * ( 7 + t$2258 + 16 * _zla( 0, nmax ) ) / 8
 7487.       t$2269 = t$2267 + 72 * _zla( 0, nmax )
 7464.       t$2270 = 8 * ( 7 + t$2267 + 72 * _zla( 0, nmax ) ) / 8
 7464.       t$2272 = t$2270 + 8 * _zla( 0, nmax )
 7466.       t$2273 = 8 * ( 7 + t$2270 + 8 * _zla( 0, nmax ) ) / 8
 7466.       t$2275 = t$2273 + 8 * _zla( 0, nmax )
 7488.       t$2277 = t$2273 + 12 * _zla( 0, nmax )
 7468.       t$2278 = 8 * ( 7 + t$2273 + 12 * _zla( 0, nmax ) ) / 8
 7468.       t$2280 = t$2278 + 8 * _zla( 0, nmax )
 7469.       t$2281 = 8 * ( 7 + t$2278 + 8 * _zla( 0, nmax ) ) / 8
 7469.       t$2283 = t$2281 + 8 * _zla( 0, nmax )
 7400.       t$2284 = 13 * _zla( 0, nmax )
 7501.       t$2285 = 8 * ( 7 + t$2281 + 8 * _zla( 0, nmax ) ) / 8
 7501.       t$2287 = t$2285 + 104 * _zla( 0, nmax )
 7400.       t$2249 = int( _alloc( t$2285 + 104 * _zla( 0, nmax ) ), 8 )
 7467.       t$2250 = t$2249
 7471.       t$2253 = t$2252 + t$2249
 7472.       t$2256 = t$2255 + t$2249
 7470.       t$2259 = t$2258 + t$2249
 7482.       t$2261 = t$2258 + t$2249 + 8 * _zla( 0, nmax )
 7481.       t$2263 = t$2258 + t$2249 + 12 * _zla( 0, nmax )
 7487.       t$2268 = t$2267 + t$2249
 7464.       t$2271 = t$2270 + t$2249
 7466.       t$2274 = t$2273 + t$2249
 7488.       t$2276 = t$2273 + t$2249 + 8 * _zla( 0, nmax )
 7468.       t$2279 = t$2278 + t$2249
 7469.       t$2282 = t$2281 + t$2249
 7501.       t$2286 = t$2285 + t$2249
 7512.       $F_A33 = nmax
 7512.       if ( nmax > 0 ) then
 7512.          $I_L7512_108 = 0
 7512. !dir$ ivdep
 7512.          do
 7512.             nsx(1 + $I_L7512_108) = 0
 7512.             $I_L7512_108 = 1 + $I_L7512_108
 7512.             if ( $I_L7512_108 >= $F_A33 ) exit
 7512.          enddo
 7512.       endif
 7513.       $F_A34 = nmax
 7513.       if ( nmax > 0 ) then
 7513.          $I_L7513_110 = 0
 7513. !dir$ ivdep
 7513.          do
 7513.             index(1 + $I_L7513_110) = 0
 7513.             $I_L7513_110 = 1 + $I_L7513_110
 7513.             if ( $I_L7513_110 >= $F_A34 ) exit
 7513.          enddo
 7513.       endif
 7514.       $F_A35 = nmax
 7514.       if ( nmax > 0 ) then
 7514.          $I_L7514_128 = 0
 7514.          do
 7514.             $I_L7514_112 = 0
 7514. !dir$ ivdep
 7514.             do
 7514.                phenst(1 + $I_L7514_112, 1 + $I_L7514_128) = 0.0
 7514.                $I_L7514_112 = 1 + $I_L7514_112
 7514.                if ( $I_L7514_112 >= $F_A35 ) exit
 7514.             enddo
 7514.             $I_L7514_128 = 1 + $I_L7514_128
 7514.             if ( $I_L7514_128 >= 9 ) exit
 7514.          enddo
 7525.          $I_L7525_92 = 0
 7525. !dir$ ivdep
 7525.          do
 7531.             $phi_WR0_R0 = 90.0 + -57.295780490442965 * colrad(1 + $I_L7525_92)
 7531.             phi(1 + $I_L7525_92) = $phi_WR0_R0
 7536.             if ( abs( $phi_WR0_R0 ) > 55.0 ) then
 7536.                $phi_WR0_R0 = sign( 55.0, $phi_WR0_R0 )
 7536.                phi(1 + $I_L7525_92) = $phi_WR0_R0
 7536.             endif
 7538.             if ( abs( $phi_WR0_R0 ) < 20.0 ) then
 7538.                $phi_WR0_R0 = sign( 20.0, $phi_WR0_R0 )
 7538.                phi(1 + $I_L7525_92) = $phi_WR0_R0
 7538.             endif
 7540.             $I_L7525_92 = 1 + $I_L7525_92
 7538.             if ( $I_L7525_92 >= nmax ) exit
 7538.          enddo
 7559.          $I_L7559_96 = 0
 7559. !dir$ ivdep
 7559.          do
 7560.             if ( itype(1 + $I_L7559_96) == 12 ) then
 7561.                $flip_S2 = 0.0
 7562.                if ( phi(1 + $I_L7559_96) < 0.0 ) then
 7562.                   $flip_S2 = 5.0e-1 * yrl
 7562.                endif
 7567.                $phenst_WR0_R1 = $flip_S2 + ( 2.7378507871321013e-3 * yrl ) * ( -65.0 + 4.5 * abs( phi(1 + $I_L7559_96) ) )
 7567.                phenst(1 + $I_L7559_96, 2) = $phenst_WR0_R1
 7568.                phenst(1 + $I_L7559_96, 3) = $flip_S2 + ( 2.7378507871321013e-3 * yrl ) * ( -47.200000000000003 + 4.7400000000000002 * abs( phi(1 + $I_L7559_96) ) )
 7569.                phenst(1 + $I_L7559_96, 4) = $flip_S2 + ( 2.7378507871321013e-3 * yrl ) * ( -31.800000000000001 + 4.8600000000000003 * abs( phi(1 + $I_L7559_96) ) )
 7570.                phenst(1 + $I_L7559_96, 5) = $flip_S2 + ( 2.7378507871321013e-3 * yrl ) * ( -2.0 + 4.5499999999999998 * abs( phi(1 + $I_L7559_96) ) )
 7571.                $phenst_WR0_R2 = $flip_S2 + ( 2.7378507871321013e-3 * yrl ) * ( 10.5 + 4.3499999999999996 * abs( phi(1 + $I_L7559_96) ) )
 7571.                phenst(1 + $I_L7559_96, 6) = $phenst_WR0_R2
 7574.                phenst(1 + $I_L7559_96, 7) = $phenst_WR0_R2 + 8.2135523613963042e-3 * yrl
 7575.                $phenst_WR0_R3 = $phenst_WR0_R1 + -( ( 2.7378507871321013e-3 * yrl ) * abs( -2.9999999999999999e-1 + 5.21 * abs( phi(1 + $I_L7559_96) ) ) )
 7575.                phenst(1 + $I_L7559_96, 1) = $phenst_WR0_R3
 7576.                phenst(1 + $I_L7559_96, 9) = $phenst_WR0_R3
 7577.                phenst(1 + $I_L7559_96, 8) = $phenst_WR0_R3 + -1.3689253935660506e-2 * yrl
 7577.             endif
 7578.             $I_L7559_96 = 1 + $I_L7559_96
 7578.             if ( $I_L7559_96 >= nmax ) exit
 7578.          enddo
 7541.          $I_L7541_120 = 0
 7541.          do
 7542.             $SCA_xgren_I58 = xgren(1 + $I_L7541_120)
 7542.             $I_L7542_94 = 0
 7542. !dir$ ivdep
 7542.             do
 7543.                xgreen(1 + $I_L7542_94, 1 + $I_L7541_120) = $SCA_xgren_I58
 7544.                $I_L7542_94 = 1 + $I_L7542_94
 7542.                if ( $I_L7542_94 >= nmax ) exit
 7542.             enddo
 7545.             $I_L7541_120 = 1 + $I_L7541_120
 7544.             if ( $I_L7541_120 >= 13 ) exit
 7544.          enddo
 7579.          $SI_L7579_122_G2 = 0
 7579.          do
 7580.             $SI_L7580_98_G5 = 0
 7580.             do
 7579.                $I_L7579_141 = 0
 7579. !dir$ shortloop16
 7579. !dir$ blocking_size( 4, 4 )
 7579.                do
 7580.                   $I_L7580_132 = 0
 7580. !dir$ ivdep
 7580. !dir$ blocking_size( 256, 256 )
 7580.                   do
 7581.                      if ( itype(1 + $I_L7580_132 + 256 * $SI_L7580_98_G5) == 12 ) then
 7585.                         if ( phenst(1 + $I_L7580_132 + 256 * $SI_L7580_98_G5, 1 + $I_L7579_141 + 4 * $SI_L7579_122_G2) < 0.0 ) then
 7585.                            phenst(1 + $I_L7580_132 + 256 * $SI_L7580_98_G5, 1 + $I_L7579_141 + 4 * $SI_L7579_122_G2) = yrl + phenst(1 + $I_L7580_132 + 256 * $SI_L7580_98_G5, 1 + $I_L7579_141 + 4 * $SI_L7579_122_G2)
 7585.                         endif
 7586.                         if ( phenst(1 + $I_L7580_132 + 256 * $SI_L7580_98_G5, 1 + $I_L7579_141 + 4 * $SI_L7579_122_G2) > yrl ) then
 7586.                            phenst(1 + $I_L7580_132 + 256 * $SI_L7580_98_G5, 1 + $I_L7579_141 + 4 * $SI_L7579_122_G2) = phenst(1 + $I_L7580_132 + 256 * $SI_L7580_98_G5, 1 + $I_L7579_141 + 4 * $SI_L7579_122_G2) + -yrl
 7586.                         endif
 7586.                      endif
 7580.                      $I_L7580_132 = 1 + $I_L7580_132
 7587.                      if ( $I_L7580_132 >= min( nmax, 256 + 256 * $SI_L7580_98_G5 ) + -256 * $SI_L7580_98_G5 ) exit
 7587.                   enddo
 7579.                   $I_L7579_141 = 1 + $I_L7579_141
 7579.                   if ( $I_L7579_141 >= cvmg( 4, 1, $SI_L7579_122_G2 < 2 ) ) exit
 7579.                enddo
 7580.                $SI_L7580_98_G5 = 1 + $SI_L7580_98_G5
 7587.                if ( $SI_L7580_98_G5 >= _rsh( 255 + nmax, 8 ) ) exit
 7587.             enddo
 7579.             $SI_L7579_122_G2 = 1 + $SI_L7579_122_G2
 7579.             if ( $SI_L7579_122_G2 >= 3 ) exit
 7579.          enddo
 7579.       endif
 7523.       $thrsh_S13 = -2.5e-1 * mod( 3 + idatec(4), 4 )
 7524.       $F_A36 = nmax
 7524.       if ( nmax > 0 ) then
 7524.          $I_L7524_114 = 0
 7524. !dir$ ivdep
 7524.          do
 7524.             test(1 + $I_L7524_114) = .true.
 7524.             $I_L7524_114 = 1 + $I_L7524_114
 7524.             if ( $I_L7524_114 >= $F_A36 ) exit
 7524.          enddo
 7524.       endif
 7550.       $kold_S5 = 0
 7556.       $SC_idatec_I0 = idatec(4)
 7556.       if ( mod( $SC_idatec_I0, 4 ) == 0 ) then
 7552.          kmon(1) = 0
 7557.          $kold_S5 = monl(1)
 7552.          kmon(2) = $kold_S5
 7556.          kmon(2) = 1 + $kold_S5
 7557.          $kold_S5 = $kold_S5 + monl(2)
 7551.          $I_L7551_118 = 0
 7551. !dir$ unroll 4
 7551.          do
 7552.             kmon(3 + $I_L7551_118) = $kold_S5
 7557.             $kold_S5 = $kold_S5 + monl(3 + $I_L7551_118)
 7558.             $I_L7551_118 = 1 + $I_L7551_118
 7556.             if ( $I_L7551_118 >= 10 ) exit
 7556.          enddo
 7556.       else
 7551.          $I_L7551_106 = 0
 7551. !dir$ unroll 4
 7551.          do
 7552.             kmon(1 + $I_L7551_106) = $kold_S5
 7557.             $kold_S5 = $kold_S5 + monl(1 + $I_L7551_106)
 7558.             $I_L7551_106 = 1 + $I_L7551_106
 7556.             if ( $I_L7551_106 >= 12 ) exit
 7556.          enddo
 7556.       endif
 7591.       if ( nmax > 0 ) then
 7590.          $SI_L7590_124_G8 = 0
 7590.          do
 7591.             $SI_L7591_100_G11 = 0
 7591.             do
 7590.                $I_L7590_144 = 0
 7590. !dir$ shortloop16
 7590. !dir$ blocking_size( 2, 2 )
 7590.                do
 7591.                   $I_L7591_135 = 0
 7591. !dir$ ivdep
 7591. !dir$ blocking_size( 256, 256 )
 7591.                   do
 7592.                      if ( itype(1 + $I_L7591_135 + 256 * $SI_L7591_100_G11) == 12 ) then
 7596.                         if ( phenst(1 + $I_L7591_135 + 256 * $SI_L7591_100_G11, 3) <= kmon(2 + $I_L7590_144 + 2 * $SI_L7590_124_G8) ) then
 7597.                            mind(1 + $I_L7591_135 + 256 * $SI_L7591_100_G11) = ( 1 + $I_L7590_144 + 2 * $SI_L7590_124_G8 )
 7599.                            xgreen(1 + $I_L7591_135 + 256 * $SI_L7591_100_G11, 2 + $I_L7590_144 + 2 * $SI_L7590_124_G8) = 9.0000000000000002e-1
 7600.                            xgreen(1 + $I_L7591_135 + 256 * $SI_L7591_100_G11, 3 + $I_L7590_144 + 2 * $SI_L7590_124_G8) = 9.0000000000000002e-1
 7600.                         endif
 7600.                      endif
 7591.                      $I_L7591_135 = 1 + $I_L7591_135
 7603.                      if ( $I_L7591_135 >= min( nmax, 256 + 256 * $SI_L7591_100_G11 ) + -256 * $SI_L7591_100_G11 ) exit
 7603.                   enddo
 7590.                   $I_L7590_144 = 1 + $I_L7590_144
 7590.                   if ( $I_L7590_144 >= 2 ) exit
 7590.                enddo
 7591.                $SI_L7591_100_G11 = 1 + $SI_L7591_100_G11
 7603.                if ( $SI_L7591_100_G11 >= _rsh( 255 + nmax, 8 ) ) exit
 7603.             enddo
 7590.             $SI_L7590_124_G8 = 1 + $SI_L7590_124_G8
 7590.             if ( $SI_L7590_124_G8 >= 2 ) exit
 7590.          enddo
 7591.          $SI_L7591_116_G14 = 0
 7591.          do
 7590.             $I_L7590_130 = 0
 7590. !dir$ blocking_size( 8, 8 )
 7590.             do
 7591.                $I_L7591_138 = 0
 7591. !dir$ ivdep
 7591. !dir$ blocking_size( 1024, 1024 )
 7591.                do
 7592.                   if ( itype(1 + $I_L7591_138 + 1024 * $SI_L7591_116_G14) == 12 ) then
 7596.                      if ( phenst(1 + $I_L7591_138 + 1024 * $SI_L7591_116_G14, 3) <= kmon(6 + $I_L7590_130) ) then
 7597.                         mind(1 + $I_L7591_138 + 1024 * $SI_L7591_116_G14) = ( 5 + $I_L7590_130 )
 7597.                      endif
 7597.                   endif
 7591.                   $I_L7591_138 = 1 + $I_L7591_138
 7603.                   if ( $I_L7591_138 >= min( nmax, 1024 + 1024 * $SI_L7591_116_G14 ) + -1024 * $SI_L7591_116_G14 ) exit
 7603.                enddo
 7604.                $I_L7590_130 = 1 + $I_L7590_130
 7604.                if ( $I_L7590_130 >= 8 ) exit
 7604.             enddo
 7591.             $SI_L7591_116_G14 = 1 + $SI_L7591_116_G14
 7603.             if ( $SI_L7591_116_G14 >= _rsh( 1023 + nmax, 10 ) ) exit
 7603.          enddo
 7603.       endif
 7644.       $SC_idatec_I9 = idatec(2)
 7613.       $SC_xcover_I1 = xcover%dim_1%EX
 7613.       $SC_xcover_I2 = xcover%dim_1%LB
 7613.       $SC_xcover_I4 = xcover%dim_2%SM
 7613.       $SC_xcover_I3 = xcover%dim_2%EX
 7613.       $SC_xcover_I5 = xcover%dim_2%LB
 7613.       $SC_xcover_I7 = xcover%dim_3%SM
 7613.       $SC_xcover_I6 = xcover%dim_3%EX
 7613.       $SC_xcover_I8 = xcover%dim_3%LB
 7646.       $SC_idatec_I0 = idatec(4)
 7607.       if ( nmax > 0 ) then
 7606.          $I_L7606_126 = 0
 7606.          do
 7607.             $I_L7607_102 = 0
 7607.             do
 7608.                if ( itype(1 + $I_L7607_102) == 12 ) then
 7610.                   chilw(1 + $I_L7607_102) = -2.0e-2
 7611.                   tlai(1 + $I_L7607_102) = 5.0e-1
 7612.                   grlf(1 + $I_L7607_102) = 5.9999999999999998e-1
 7613.                   xcover2(1 + $I_L7607_102) = (xcover%base_addr)(12, month(1 + $I_L7607_102), 1, 0)
 7617.                   if ( test(1 + $I_L7607_102) /= .false. ) then
 7618.                      $diff1_WR0_R5 = phenst(1 + $I_L7607_102, 2 + $I_L7606_126) + -phenst(1 + $I_L7607_102, 1 + $I_L7606_126)
 7619.                      $diff2_WR0_R6 = xday + -phenst(1 + $I_L7607_102, 1 + $I_L7606_126)
 7620.                      if ( phenst(1 + $I_L7607_102, 1 + $I_L7606_126) >= phenst(1 + $I_L7607_102, 2 + $I_L7606_126) ) then
 7621.                         if ( xday < phenst(1 + $I_L7607_102, 1 + $I_L7606_126) ) then
 7621.                            goto 10
 7621.                         else if ( xday > phenst(1 + $I_L7607_102, 2 + $I_L7606_126) ) then
 7621.    10                      continue
 7625.                            icond = 0
 7626.                            if ( xday >= phenst(1 + $I_L7607_102, 1 + $I_L7606_126) ) then
 7626.                               if ( xday <= yrl ) then
 7626.                                  icond = 1
 7626.                               endif
 7626.                            endif
 7627.                            if ( xday >= $thrsh_S13 ) then
 7627.                               if ( xday <= phenst(1 + $I_L7607_102, 2 + $I_L7606_126) ) then
 7627.                                  icond = 2
 7627.                               endif
 7627.                            endif
 7628.                            if ( icond /= 2 ) then
 7629.                               $diff1_WR0_R5 = yrl + phenst(1 + $I_L7607_102, 2 + $I_L7606_126) + -phenst(1 + $I_L7607_102, 1 + $I_L7606_126)
 7630.                               $diff2_WR0_R6 = xday + -phenst(1 + $I_L7607_102, 1 + $I_L7606_126)
 7630.                            else
 7632.                               $diff1_WR0_R5 = yrl + phenst(1 + $I_L7607_102, 2 + $I_L7606_126) + -phenst(1 + $I_L7607_102, 1 + $I_L7606_126)
 7633.                               $diff2_WR0_R6 = xday + yrl + -phenst(1 + $I_L7607_102, 1 + $I_L7606_126)
 7633.                            endif
 7633.                         endif
 7636.                         if ( icond /= 0 ) then
 7640.                            $perc_S19 = ( $diff2_WR0_R6 * 1.0/$diff1_WR0_R5 )
 7645.                            $mnl_S15 = monl($SC_idatec_I9)
 7646.                            if ( mod( $SC_idatec_I0, 4 ) == 0 ) then
 7646.                               if ( $SC_idatec_I9 == 2 ) then
 7646.                                  $mnl_S15 = 1 + $mnl_S15
 7646.                               endif
 7646.                            endif
 7647.                            if ( xday > phenst(1 + $I_L7607_102, 3) ) then
 7648.                               if ( $SC_idatec_I9 + -mind(1 + $I_L7607_102) /= 0 ) then
 7649.                                  $x1_S17 = vlt($SC_idatec_I9)
 7650.                                  $xdif1_S16 = real( $mnl_S15, 8 )
 7651.                                  $xdif2_S18 = xday + ( -kmon($SC_idatec_I9) )
 7651.                               else
 7653.                                  $x1_S17 = 6.0
 7654.                                  $xdif1_S16 = kmon(1 + $SC_idatec_I9) + -phenst(1 + $I_L7607_102, 3)
 7655.                                  $xdif2_S18 = xday + -phenst(1 + $I_L7607_102, 3)
 7655.                               endif
 7657.                               tlai(1 + $I_L7607_102) = $x1_S17 + -( $xdif2_S18 * ( 1.0/$xdif1_S16 * ( $x1_S17 + -vlt(1 + $SC_idatec_I9) ) ) )
 7657.                            else
 7659.                               tlai(1 + $I_L7607_102) = wlai(1 + $I_L7606_126) + $perc_S19 * ( wlai(2 + $I_L7606_126) + -wlai(1 + $I_L7606_126) )
 7659.                            endif
 7661.                            if ( xday > phenst(1 + $I_L7607_102, 4) ) then
 7662.                               xcover2(1 + $I_L7607_102) = 5.6899999999999995e-1 + ( 3.3100000000000007e-1 * ( yrl + -xday ) * 1.0/( yrl + -phenst(1 + $I_L7607_102, 4) ) )
 7662.                            else
 7664.                               $LD_SPLT_P2 = tlai(1 + $I_L7607_102)
 7664.                               xcover2(1 + $I_L7607_102) = 9.0000000000000002e-1 * ( 1.0 + -_expn( -$LD_SPLT_P2 ) )
 7664.                            endif
 7666.                            grlf(1 + $I_L7607_102) = xgreen(1 + $I_L7607_102, $SC_idatec_I9) + -( ( xday + ( -kmon($SC_idatec_I9) ) ) * ( 1.0/$mnl_S15 * ( xgreen(1 + $I_L7607_102, $SC_idatec_I9) + -xgreen(1 + $I_L7607_102, 1 + $SC_idatec_I9) ) ) )
 7668.                            if ( $I_L7606_126 /= 0 ) then
 7668.                               if ( $I_L7606_126 /= 1 ) then
 7668.                                  chilw(1 + $I_L7607_102) = -2.0000000000000001e-1
 7668.                               endif
 7668.                            endif
 7669.                            test(1 + $I_L7607_102) = .false.
 7670.                            index(1 + $I_L7607_102) = ( 1 + $I_L7606_126 )
 7670.                         endif
 7670.                      endif
 7670.                   endif
 7670.                endif
 7674.                $I_L7607_102 = 1 + $I_L7607_102
 7674.                if ( $I_L7607_102 >= nmax ) exit
 7674.             enddo
 7675.             $I_L7606_126 = 1 + $I_L7606_126
 7674.             if ( $I_L7606_126 >= 8 ) exit
 7674.          enddo
 7687.          $SC_yll_I52 = yll%dim_1%EX
 7687.          $SC_yll_I53 = yll%dim_1%LB
 7687.          $SC_tll_gbl_I54 = tll_gbl%dim_1%EX
 7687.          $SC_tll_gbl_I55 = tll_gbl%dim_1%LB
 7687.          $SC_tll_gbl_I57 = tll_gbl%dim_2%SM
 7687.          $SC_tll_gbl_I56 = tll_gbl%dim_2%EX
 7686.          $SC_yopt_I42 = yopt%dim_1%EX
 7686.          $SC_yopt_I43 = yopt%dim_1%LB
 7686.          $SC_topt_gbl_I44 = topt_gbl%dim_1%EX
 7686.          $SC_topt_gbl_I45 = topt_gbl%dim_1%LB
 7686.          $SC_topt_gbl_I47 = topt_gbl%dim_2%SM
 7686.          $SC_topt_gbl_I46 = topt_gbl%dim_2%EX
 7686.          $SC_topt_gbl_I48 = topt_gbl%dim_2%LB
 7686.          $SC_topt_gbl_I50 = topt_gbl%dim_3%SM
 7686.          $SC_topt_gbl_I49 = topt_gbl%dim_3%EX
 7686.          $SC_topt_gbl_I51 = topt_gbl%dim_3%LB
 7685.          $SC_chil_gbl_I34 = chil_gbl%dim_1%EX
 7685.          $SC_chil_gbl_I35 = chil_gbl%dim_1%LB
 7685.          $SC_chil_gbl_I37 = chil_gbl%dim_2%SM
 7685.          $SC_chil_gbl_I36 = chil_gbl%dim_2%EX
 7685.          $SC_chil_gbl_I38 = chil_gbl%dim_2%LB
 7685.          $SC_chil_gbl_I40 = chil_gbl%dim_3%SM
 7685.          $SC_chil_gbl_I39 = chil_gbl%dim_3%EX
 7685.          $SC_chil_gbl_I41 = chil_gbl%dim_3%LB
 7684.          $SC_green_gbl_I26 = green_gbl%dim_1%EX
 7684.          $SC_green_gbl_I27 = green_gbl%dim_1%LB
 7684.          $SC_green_gbl_I29 = green_gbl%dim_2%SM
 7684.          $SC_green_gbl_I28 = green_gbl%dim_2%EX
 7684.          $SC_green_gbl_I30 = green_gbl%dim_2%LB
 7684.          $SC_green_gbl_I32 = green_gbl%dim_3%SM
 7684.          $SC_green_gbl_I31 = green_gbl%dim_3%EX
 7684.          $SC_green_gbl_I33 = green_gbl%dim_3%LB
 7683.          $SC_zlt_gbl_I18 = zlt_gbl%dim_1%EX
 7683.          $SC_zlt_gbl_I19 = zlt_gbl%dim_1%LB
 7683.          $SC_zlt_gbl_I21 = zlt_gbl%dim_2%SM
 7683.          $SC_zlt_gbl_I20 = zlt_gbl%dim_2%EX
 7683.          $SC_zlt_gbl_I22 = zlt_gbl%dim_2%LB
 7683.          $SC_zlt_gbl_I24 = zlt_gbl%dim_3%SM
 7683.          $SC_zlt_gbl_I23 = zlt_gbl%dim_3%EX
 7683.          $SC_zlt_gbl_I25 = zlt_gbl%dim_3%LB
 7682.          $SC_vcover_gbl_I10 = vcover_gbl%dim_1%EX
 7682.          $SC_vcover_gbl_I11 = vcover_gbl%dim_1%LB
 7682.          $SC_vcover_gbl_I13 = vcover_gbl%dim_2%SM
 7682.          $SC_vcover_gbl_I12 = vcover_gbl%dim_2%EX
 7682.          $SC_vcover_gbl_I14 = vcover_gbl%dim_2%LB
 7682.          $SC_vcover_gbl_I16 = vcover_gbl%dim_3%SM
 7682.          $SC_vcover_gbl_I15 = vcover_gbl%dim_3%EX
 7682.          $SC_vcover_gbl_I17 = vcover_gbl%dim_3%LB
 7677.          $I_L7677_104 = 0
 7677. !dir$ ivdep
 7677.          do
 7678.             if ( itype(1 + $I_L7677_104) == 12 ) then
 7679.                $nsx_WR0_R7 = index(1 + $I_L7677_104)
 7680.                if ( $nsx_WR0_R7 == 9 ) then
 7680.                   $nsx_WR0_R7 = 1
 7680.                endif
 7682.                (vcover_gbl%base_addr)(1 + $I_L7677_104, latitu, 1, 0) = xcover2(1 + $I_L7677_104)
 7683.                (zlt_gbl%base_addr)(1 + $I_L7677_104, latitu, 1, 0) = tlai(1 + $I_L7677_104)
 7684.                (green_gbl%base_addr)(1 + $I_L7677_104, latitu, 1, 0) = grlf(1 + $I_L7677_104)
 7685.                (chil_gbl%base_addr)(1 + $I_L7677_104, latitu, 1, 0) = chilw(1 + $I_L7677_104)
 7686.                (topt_gbl%base_addr)(1 + $I_L7677_104, latitu, 1, 0) = (yopt%base_addr)(2, 0)
 7687.                (tll_gbl%base_addr)(1 + $I_L7677_104, latitu, 1, 0) = (yll%base_addr)(2, 0)
 7688.                (tu_gbl%base_addr)(1 + $I_L7677_104, latitu, 1, 0) = (yu%base_addr)(2, 0)
 7689.                (defac_gbl%base_addr)(1 + $I_L7677_104, latitu, 1, 0) = (yefac%base_addr)(2, 0)
 7690.                (ph1_gbl%base_addr)(1 + $I_L7677_104, latitu, 1, 0) = (yh1%base_addr)(2, 0)
 7691.                (ph2_gbl%base_addr)(1 + $I_L7677_104, latitu, 1, 0) = (yh2%base_addr)(2, 0)
 7692.                (rstpar_gbl%base_addr)(1 + $I_L7677_104, latitu, 1, 1, 0) = (ystpar%base_addr)(2, 1, 0)
 7693.                (rstpar_gbl%base_addr)(1 + $I_L7677_104, latitu, 1, 2, 0) = (ystpar%base_addr)(2, 2, 0)
 7694.                (rstpar_gbl%base_addr)(1 + $I_L7677_104, latitu, 1, 3, 0) = (ystpar%base_addr)(2, 3, 0)
 7681.                $nsx_WR0_R7 = min( 6, $nsx_WR0_R7 )
 7681.                nsx(1 + $I_L7677_104) = $nsx_WR0_R7
 7681.             endif
 7696.             $I_L7677_104 = 1 + $I_L7677_104
 7696.             if ( $I_L7677_104 >= nmax ) exit
 7696.          enddo
 7696.       endif
 7400.       _free( t$2249 )
 7698.       return
 7698.       end
 7698.       
 7708.       
 7708.       subroutine sibwet( ibmax, jbmax, sinp, sinmax, imask, wsib, ssib, mxiter, ibmaxperjb )
 7708.       t$1390 = ibmax
 7708.       t$1391 = jbmax
 7734.       t$2288 = _zla( 0, ibmax )
 7708.       t$2289 = _zla( 0, ibmax )
 7734.       t$2290 = _zla( 0, jbmax )
 7708.       t$2291 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 7708.       ibmaxperjb%dim_1%LB = 1
 7708.       t$1399 = mxiter
 7745.       t$2292 = _zla( 0, mxiter )
 7708.       t$2293 = 13 * _zla( 0, mxiter )
 7745.       t$2296 = 104 * _zla( 0, mxiter )
 7743.       t$2297 = 8 * ( 7 + 104 * _zla( 0, mxiter ) ) / 8
 7743.       t$2299 = t$2297 + 104 * _zla( 0, mxiter )
 7744.       t$2300 = 8 * ( 7 + t$2297 + 104 * _zla( 0, mxiter ) ) / 8
 7744.       t$2302 = t$2300 + 104 * _zla( 0, mxiter )
 7708.       t$2294 = int( _alloc( t$2300 + 104 * _zla( 0, mxiter ) ), 8 )
 7745.       t$2295 = t$2294
 7743.       t$2298 = t$2297 + t$2294
 7744.       t$2301 = t$2300 + t$2294
 7796.       $F_A33 = mxiter
 7796.       if ( mxiter > 0 ) then
 7796.          $I_L7796_72 = 0
 7796.          do
 7796.             $I_L7796_58 = 0
 7796. !dir$ ivdep
 7796.             do
 7796.                sm(1 + $I_L7796_58, 1 + $I_L7796_72) = 0.0
 7796.                $I_L7796_58 = 1 + $I_L7796_58
 7796.                if ( $I_L7796_58 >= 13 ) exit
 7796.             enddo
 7796.             $I_L7796_72 = 1 + $I_L7796_72
 7796.             if ( $I_L7796_72 >= $F_A33 ) exit
 7796.          enddo
 7796.       endif
 7797.       $F_A34 = mxiter
 7797.       if ( mxiter > 0 ) then
 7797.          $I_L7797_74 = 0
 7797.          do
 7797.             $I_L7797_60 = 0
 7797. !dir$ ivdep
 7797.             do
 7797.                time(1 + $I_L7797_60, 1 + $I_L7797_74) = 0.0
 7797.                $I_L7797_60 = 1 + $I_L7797_60
 7797.                if ( $I_L7797_60 >= 13 ) exit
 7797.             enddo
 7797.             $I_L7797_74 = 1 + $I_L7797_74
 7797.             if ( $I_L7797_74 >= $F_A34 ) exit
 7797.          enddo
 7797.       endif
 7798.       $F_A35 = mxiter
 7798.       if ( mxiter > 0 ) then
 7798.          $I_L7798_76 = 0
 7798.          do
 7798.             $I_L7798_62 = 0
 7798. !dir$ ivdep
 7798.             do
 7798.                fact(1 + $I_L7798_62, 1 + $I_L7798_76) = 0.0
 7798.                $I_L7798_62 = 1 + $I_L7798_62
 7798.                if ( $I_L7798_62 >= 13 ) exit
 7798.             enddo
 7798.             $I_L7798_76 = 1 + $I_L7798_76
 7798.             if ( $I_L7798_76 >= $F_A35 ) exit
 7798.          enddo
 7798.       endif
 7799.       $F_A36 = jbmax
 7799.       $F_A37 = ibmax
 7799.       if ( and( -$F_A37, -$F_A36 ) < 0 ) then
 7799.          $I_L7799_78 = 0
 7799.          do
 7799.             $I_L7799_64 = 0
 7799. !dir$ ivdep
 7799.             do
 7799.                ssib(1 + $I_L7799_64, 1 + $I_L7799_78) = 0.0
 7799.                $I_L7799_64 = 1 + $I_L7799_64
 7799.                if ( $I_L7799_64 >= $F_A37 ) exit
 7799.             enddo
 7799.             $I_L7799_78 = 1 + $I_L7799_78
 7799.             if ( $I_L7799_78 >= $F_A36 ) exit
 7799.          enddo
 7799.       endif
 7800.       $F_A38 = jbmax
 7800.       $F_A39 = ibmax
 7800.       if ( and( -$F_A39, -$F_A38 ) < 0 ) then
 7800.          $I_L7800_80 = 0
 7800.          do
 7800.             $I_L7800_66 = 0
 7800. !dir$ ivdep
 7800.             do
 7800.                wsib(1 + $I_L7800_66, 1 + $I_L7800_80) = 0.0
 7800.                $I_L7800_66 = 1 + $I_L7800_66
 7800.                if ( $I_L7800_66 >= $F_A39 ) exit
 7800.             enddo
 7800.             $I_L7800_80 = 1 + $I_L7800_80
 7800.             if ( $I_L7800_80 >= $F_A38 ) exit
 7800.          enddo
 7800.       endif
 7805.       $I_L7805_68 = 0
 7805.       do
 7807.          $SC_tzdep_I0 = (zdepth%base_addr)(1 + $I_L7805_68, 1, 0)
 7808.          $SC_tzdep_I1 = (zdepth%base_addr)(1 + $I_L7805_68, 2, 0)
 7809.          $SC_tzdep_I2 = (zdepth%base_addr)(1 + $I_L7805_68, 3, 0)
 7810.          $tphsat_S6 = (phsat%base_addr)(1 + $I_L7805_68, 0)
 7811.          $tbee_S5 = (bee%base_addr)(1 + $I_L7805_68, 0)
 7812.          tporos = (poros%base_addr)(1 + $I_L7805_68, 0)
 7813.          $imm1_S1 = 1
 7814.          $imm2_S2 = 1
 7815.          $SC_tzltm_I3 = (zlt_fixed%base_addr)(1 + $I_L7805_68, 1, 1, 0)
 7816.          $SC_tzltm_I4 = (zlt_fixed%base_addr)(1 + $I_L7805_68, 1, 2, 0)
 7818.          $SC_zlt_fixed_I5 = zlt_fixed%dim_1%EX
 7818.          $SC_zlt_fixed_I6 = zlt_fixed%dim_1%LB
 7818.          $SC_zlt_fixed_I8 = zlt_fixed%dim_2%SM
 7818.          $SC_zlt_fixed_I7 = zlt_fixed%dim_2%EX
 7818.          $SC_zlt_fixed_I9 = zlt_fixed%dim_2%LB
 7818.          $SC_zlt_fixed_I11 = zlt_fixed%dim_3%SM
 7818.          $SC_zlt_fixed_I10 = zlt_fixed%dim_3%EX
 7818.          $SC_zlt_fixed_I12 = zlt_fixed%dim_3%LB
 7817.          $I_L7817_48 = 0
 7817. !dir$ ivdep
 7817.          do
 7818.             if ( $SC_tzltm_I3 <= (zlt_fixed%base_addr)(1 + $I_L7805_68, 2 + $I_L7817_48, 1, 0) ) then
 7819.                $imm1_S1 = ( 2 + $I_L7817_48 )
 7820.                $SC_tzltm_I3 = (zlt_fixed%base_addr)(1 + $I_L7805_68, 2 + $I_L7817_48, 1, 0)
 7820.             endif
 7822.             if ( $SC_tzltm_I4 <= (zlt_fixed%base_addr)(1 + $I_L7805_68, 2 + $I_L7817_48, 2, 0) ) then
 7823.                $imm2_S2 = ( 2 + $I_L7817_48 )
 7824.                $SC_tzltm_I4 = (zlt_fixed%base_addr)(1 + $I_L7805_68, 2 + $I_L7817_48, 2, 0)
 7824.             endif
 7826.             $I_L7817_48 = 1 + $I_L7817_48
 7825.             if ( $I_L7817_48 >= 11 ) exit
 7825.          enddo
 7827.          $imm_S3 = $imm1_S1
 7828.          $ivegm_S4 = 1
 7829.          if ( $SC_tzltm_I3 <= $SC_tzltm_I4 ) then
 7830.             $imm_S3 = $imm2_S2
 7831.             $ivegm_S4 = 2
 7831.          endif
 7837.          $cover_S19 = (xcover_fixed%base_addr)(1 + $I_L7805_68, $imm_S3, $ivegm_S4, 0)
 7838.          $tph1_S18 = xph1(1 + $I_L7805_68, $ivegm_S4)
 7839.          $tph2_S17 = xph2(1 + $I_L7805_68, $ivegm_S4)
 7845.          sibmax(1 + $I_L7805_68) = tporos * ( $SC_tzdep_I0 + $SC_tzdep_I1 + $SC_tzdep_I2 )
 7847.          if ( nfctrl(83) > 0 ) then
 7847.             if ( ( ( 1 + $I_L7805_68 ) <= 0 .or. ( 1 + $I_L7805_68 ) > 13 ) /= .false. ) then
 7847.                 _substr(t$3489,1,13) = 'Sfc_SSiB.f90'
 7847.                 _substr(t$3490,1,7) = 'SIBMAX'
 7847.                t$3491 = 1 + $I_L7805_68
 7847.                call _bounds_error(  _substr(t$3489,1,13), 7847,  _substr(t$3490,1,7), 1, 1, 13, t$3491, t$3488 )
 7847.             endif
 7847.             $Unit_temp_O0 = nfprt
 7847.             $IOitem_O1 = ( 1 + $I_L7805_68 )
 7847.             $_IOitem_P0(0) = sibmax(1 + $I_L7805_68)
 7847.             $_IOitem_P0(1) = $SC_tzdep_I0
 7847.             $_IOitem_P0(2) = $SC_tzdep_I1
 7847.             $_IOitem_P0(3) = $SC_tzdep_I2
 7847.             $_IOitem_P0(4) = tporos
 7847.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$1414,  _substr(t$1413,1,43), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O1, 0x2000200000000L ), _iotype( (&)$_IOitem_P0(:( 0, 4, 1 )), 0x804060300000000L ) ) )
 7847.          endif
 7859.          $sref_S8 = sibmax(1 + $I_L7805_68) * _expn( ( 1.0/$tbee_S5 * log( -$tphsat_S6 ) ) )
 7866.          $smin_S7 = sibmax(1 + $I_L7805_68) * _expn( ( 1.0/$tbee_S5 * log( -1.0e-10 * $tphsat_S6 ) ) )
 7872.          $dssib_S12 = ( 1.0/( real( mxiter, 8 ) ) * ( $sref_S8 + -$smin_S7 ) )
 7878.          $dw_S10 = ( ( 1.0/( real( mxiter, 8 ) ) * ( $sref_S8 + -$smin_S7 ) ) * 1.0/sibmax(1 + $I_L7805_68) )
 7887.          $w_S9 = ( $sref_S8 * 1.0/sibmax(1 + $I_L7805_68) )
 7895.          $rsoilm_S15 = 101840.0 * ( 1.0 + -_exp3( log( abs( $w_S9 ) ), $w_S9, 2.7000000000000001e-3 ) )
 7896.          if ( mxiter > 0 ) then
 7912.             $SC_sibmax_I13 = sibmax(1 + $I_L7805_68)
 7897.             $psit_S11 = $tphsat_S6 * _exp3( log( abs( ( $w_S9 + -5.0e-1 * $dw_S10 ) ) ), ( $w_S9 + -5.0e-1 * $dw_S10 ), -$tbee_S5 )
 7897.             $rsoil_S14 = 101840.0 * ( 1.0 + -_exp3( log( abs( ( $w_S9 + -5.0e-1 * $dw_S10 ) ) ), ( $w_S9 + -5.0e-1 * $dw_S10 ), 2.7000000000000001e-3 ) )
 7897.             $hr_S16 = _expn( ( max( -10.0, ( 6.8570230314891835e-5 * $psit_S11 ) ) ) )
 7914.             sm(1 + $I_L7805_68, 1) = ( $sref_S8 + -$dssib_S12 )
 7913.             times = ( $dssib_S12 * 1.0/( max( 9.9999999999999995e-7, ( $cover_S19 * ( max( 0.0, min( 1.0, ( ( -50.0 + $psit_S11 + -$tph2_S17 ) * 1.0/( $tph1_S18 + -$tph2_S17 ) ) ) ) ) + ( 1.0 + -$cover_S19 ) * ( $hr_S16 * ( $rsoilm_S15 * 1.0/$rsoil_S14 ) ) ) ) ) )
 7915.             time(1 + $I_L7805_68, 1) = ( $dssib_S12 * 1.0/( max( 9.9999999999999995e-7, ( $cover_S19 * ( max( 0.0, min( 1.0, ( ( -50.0 + $psit_S11 + -$tph2_S17 ) * 1.0/( $tph1_S18 + -$tph2_S17 ) ) ) ) ) + ( 1.0 + -$cover_S19 ) * ( $hr_S16 * ( $rsoilm_S15 * 1.0/$rsoil_S14 ) ) ) ) ) )
 7916.             fact(1 + $I_L7805_68, 1) = ( max( 9.9999999999999995e-7, ( $cover_S19 * ( max( 0.0, min( 1.0, ( ( -50.0 + $psit_S11 + -$tph2_S17 ) * 1.0/( $tph1_S18 + -$tph2_S17 ) ) ) ) ) + ( 1.0 + -$cover_S19 ) * ( $hr_S16 * ( $rsoilm_S15 * 1.0/$rsoil_S14 ) ) ) ) )
 7917.             if ( 1 < mxiter ) then
 7896.                $I_L7896_50 = 0
 7896.                do
 7897.                   $psit_S11 = $tphsat_S6 * _exp3( log( abs( ( ( 1.0/$SC_sibmax_I13 * ( $sref_S8 + -( $dssib_S12 * real( 1 + $I_L7896_50, 8 ) ) ) ) + -5.0e-1 * $dw_S10 ) ) ), ( ( 1.0/$SC_sibmax_I13 * ( $sref_S8 + -( $dssib_S12 * real( 1 + $I_L7896_50, 8 ) ) ) ) + -5.0e-1 * $dw_S10 ), -$tbee_S5 )
 7897.                   $rsoil_S14 = 101840.0 * ( 1.0 + -_exp3( log( abs( ( ( 1.0/$SC_sibmax_I13 * ( $sref_S8 + -( $dssib_S12 * real( 1 + $I_L7896_50, 8 ) ) ) ) + -5.0e-1 * $dw_S10 ) ) ), ( ( 1.0/$SC_sibmax_I13 * ( $sref_S8 + -( $dssib_S12 * real( 1 + $I_L7896_50, 8 ) ) ) ) + -5.0e-1 * $dw_S10 ), 2.7000000000000001e-3 ) )
 7897.                   $hr_S16 = _expn( ( max( -10.0, ( 6.8570230314891835e-5 * $psit_S11 ) ) ) )
 7914.                   sm(1 + $I_L7805_68, 2 + $I_L7896_50) = ( $sref_S8 + -( $dssib_S12 * real( 2 + $I_L7896_50, 8 ) ) )
 7913.                   times = times + ( $dssib_S12 * 1.0/( max( 9.9999999999999995e-7, ( $cover_S19 * ( max( 0.0, min( 1.0, ( ( -50.0 + $psit_S11 + -$tph2_S17 ) * 1.0/( $tph1_S18 + -$tph2_S17 ) ) ) ) ) + ( 1.0 + -$cover_S19 ) * ( $hr_S16 * ( $rsoilm_S15 * 1.0/$rsoil_S14 ) ) ) ) ) )
 7915.                   time(1 + $I_L7805_68, 2 + $I_L7896_50) = times
 7916.                   fact(1 + $I_L7805_68, 2 + $I_L7896_50) = ( max( 9.9999999999999995e-7, ( $cover_S19 * ( max( 0.0, min( 1.0, ( ( -50.0 + $psit_S11 + -$tph2_S17 ) * 1.0/( $tph1_S18 + -$tph2_S17 ) ) ) ) ) + ( 1.0 + -$cover_S19 ) * ( $hr_S16 * ( $rsoilm_S15 * 1.0/$rsoil_S14 ) ) ) ) )
 7917.                   $I_L7896_50 = 1 + $I_L7896_50
 7896.                   if ( $I_L7896_50 >= -1 + mxiter ) exit
 7896.                enddo
 7896.             endif
 7896.          endif
 7919.          $I_L7805_68 = 1 + $I_L7805_68
 7917.          if ( $I_L7805_68 >= 13 ) exit
 7917.       enddo
 7923.       if ( jbmax > 0 ) then
 7924.          $SC_ibmaxperjb_I15 = ibmaxperjb%dim_1%SM
 7924.          $SC_ibmaxperjb_I14 = ibmaxperjb%dim_1%EX
 7923.          $I_L7923_82 = 0
 7923.          do
 7924.             $t_S22 = (ibmaxperjb%base_addr)(1 + $I_L7923_82, 0)
 7924.             if ( $t_S22 > 0 ) then
 7924.                $I_L7924_70 = 0
 7924.                do
 7925.                   $is_S24 = imask(1 + $I_L7924_70, 1 + $I_L7923_82)
 7926.                   if ( imask(1 + $I_L7924_70, 1 + $I_L7923_82) /= 0 ) then
 7927.                      $tsinp_S25 = sinp(1 + $I_L7924_70, 1 + $I_L7923_82)
 7929.                      $tsinp_S26 = min( sinmax, max( $tsinp_S25, 1.0000000000000001e-5 * sinmax ) )
 7930.                      if ( ( min( sinmax, max( $tsinp_S25, 1.0000000000000001e-5 * sinmax ) ) ) > 7.5e-1 * sinmax ) then
 7930.                         $etp_S27 = sinmax + -$tsinp_S26
 7930.                      else
 7933.                         $etp_S27 = 2.5e-1 * sinmax + 7.5e-1 * sinmax * log( ( 7.5e-1 * sinmax * 1.0/$tsinp_S26 ) )
 7933.                      endif
 7931.                      $facmod_S31 = min( 1.0, ( 1.3333333333333333 * $tsinp_S26 * 1.0/sinmax ) )
 7935.                      $etp_S29 = 1.0e-3 * $etp_S27
 7936.                      if ( mxiter > 0 ) then
 7936.                         $I_L7936_52 = 0
 7936. !dir$ ivdep
 7936.                         do
 7938.                            if ( time($is_S24, 1 + $I_L7936_52) + -$etp_S29 > 0.0 ) then
 7937.                               itsoil = ( 1 + $I_L7936_52 )
 7937.                               goto 10
 7937.                            endif
 7939.                            $I_L7936_52 = 1 + $I_L7936_52
 7939.                            if ( $I_L7936_52 >= mxiter ) exit
 7939.                         enddo
 7937.                         itsoil = mxiter
 7937.    10                   continue
 7940.                         $I_L7940_54 = 0
 7940. !dir$ ivdep
 7940.                         do
 7942.                            if ( -1.0e-2 + fact($is_S24, 1 + $I_L7940_54) + -$facmod_S31 < 0.0 ) then
 7941.                               itfac = ( 1 + $I_L7940_54 )
 7941.                               goto 20
 7941.                            endif
 7943.                            $I_L7940_54 = 1 + $I_L7940_54
 7943.                            if ( $I_L7940_54 >= mxiter ) exit
 7943.                         enddo
 7941.                         itfac = mxiter
 7941.                      endif
 7941.    20                continue
 7944.                      $ssibt_S33 = min( sm($is_S24, itfac), sm($is_S24, itsoil) )
 7945.                      $iter_S34 = 1
 7945.                      if ( mxiter > 0 ) then
 7945.                         $I_L7945_56 = 0
 7945. !dir$ ivdep
 7945.                         do
 7946.                            if ( $ssibt_S33 > sm($is_S24, 1 + $I_L7945_56) ) then
 7945.                               $iter_S34 = ( 1 + $I_L7945_56 )
 7945.                               goto 30
 7945.                            endif
 7947.                            $I_L7945_56 = 1 + $I_L7945_56
 7947.                            if ( $I_L7945_56 >= mxiter ) exit
 7947.                         enddo
 7947.                         $iter_S34 = ( 1 + mxiter )
 7947.                      endif
 7947.    30                continue
 7948.                      ssib(1 + $I_L7924_70, 1 + $I_L7923_82) = sm($is_S24, $iter_S34)
 7954.                      wsib(1 + $I_L7924_70, 1 + $I_L7923_82) = ( sm($is_S24, $iter_S34) * 1.0/sibmax($is_S24) )
 7954.                   endif
 7956.                   $I_L7924_70 = 1 + $I_L7924_70
 7955.                   if ( $I_L7924_70 >= $t_S22 ) exit
 7955.                enddo
 7955.             endif
 7957.             $I_L7923_82 = 1 + $I_L7923_82
 7956.             if ( $I_L7923_82 >= jbmax ) exit
 7956.          enddo
 7956.       endif
 7708.       _free( t$2294 )
 7959.       return
 7959.       end
 7959.       
 7963.       
 7963.       subroutine sibwet_glsm( ibmax, jbmax, imask, wsib, ssib, mxiter, ibmaxperjb, soilm, nzg, wsib3d, glsm_w )
 7963.       t$1415 = ibmax
 7963.       t$1416 = jbmax
 7989.       t$2303 = _zla( 0, ibmax )
 7963.       t$2304 = _zla( 0, ibmax )
 7989.       t$2305 = _zla( 0, jbmax )
 7963.       t$2306 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 7963.       ibmaxperjb%dim_1%LB = 1
 7963.       t$2307 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 7963.       t$2308 = 3 * _zla( 0, ibmax ) * _zla( 0, jbmax )
 7963.       t$1427 = nzg
 7995.       t$2309 = _zla( 0, nzg )
 7963.       t$2310 = _zla( 0, ibmax ) * _zla( 0, jbmax ) * _zla( 0, nzg )
 7963.       t$1429 = mxiter
 7999.       t$2311 = _zla( 0, mxiter )
 7963.       t$2312 = 13 * _zla( 0, mxiter )
 7999.       t$2315 = 104 * _zla( 0, mxiter )
 7997.       t$2316 = 8 * ( 7 + 104 * _zla( 0, mxiter ) ) / 8
 7997.       t$2318 = t$2316 + 104 * _zla( 0, mxiter )
 7998.       t$2319 = 8 * ( 7 + t$2316 + 104 * _zla( 0, mxiter ) ) / 8
 7998.       t$2321 = t$2319 + 104 * _zla( 0, mxiter )
 7963.       t$2313 = int( _alloc( t$2319 + 104 * _zla( 0, mxiter ) ), 8 )
 7999.       t$2314 = t$2313
 7997.       t$2317 = t$2316 + t$2313
 7998.       t$2320 = t$2319 + t$2313
 8084.       $F_A33 = jbmax
 8084.       $F_A34 = ibmax
 8084.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
 8084.          $I_L8084_127 = 0
 8084.          do
 8084.             $I_L8084_115 = 0
 8084. !dir$ ivdep
 8084.             do
 8084.                ssib(1 + $I_L8084_115, 1 + $I_L8084_127) = 0.0
 8084.                $I_L8084_115 = 1 + $I_L8084_115
 8084.                if ( $I_L8084_115 >= $F_A34 ) exit
 8084.             enddo
 8084.             $I_L8084_127 = 1 + $I_L8084_127
 8084.             if ( $I_L8084_127 >= $F_A33 ) exit
 8084.          enddo
 8084.       endif
 8085.       $F_A35 = jbmax
 8085.       $F_A36 = ibmax
 8085.       if ( and( -$F_A36, -$F_A35 ) < 0 ) then
 8085.          $I_L8085_129 = 0
 8085.          do
 8085.             $I_L8085_117 = 0
 8085. !dir$ ivdep
 8085.             do
 8085.                wsib(1 + $I_L8085_117, 1 + $I_L8085_129) = 0.0
 8085.                $I_L8085_117 = 1 + $I_L8085_117
 8085.                if ( $I_L8085_117 >= $F_A36 ) exit
 8085.             enddo
 8085.             $I_L8085_129 = 1 + $I_L8085_129
 8085.             if ( $I_L8085_129 >= $F_A35 ) exit
 8085.          enddo
 8085.       endif
 8090.       $I_L8090_97 = 0
 8090.       do
 8091.          $SC_tzdep_I0 = (zdepth%base_addr)(1 + $I_L8090_97, 1, 0)
 8092.          $SC_tzdep_I1 = (zdepth%base_addr)(1 + $I_L8090_97, 2, 0)
 8093.          $SC_tzdep_I2 = (zdepth%base_addr)(1 + $I_L8090_97, 3, 0)
 8096.          tporos = (poros%base_addr)(1 + $I_L8090_97, 0)
 8126.          sibmax(1 + $I_L8090_97) = tporos * ( $SC_tzdep_I0 + $SC_tzdep_I1 + $SC_tzdep_I2 )
 8127.          if ( nfctrl(83) > 0 ) then
 8127.             if ( ( ( 1 + $I_L8090_97 ) <= 0 .or. ( 1 + $I_L8090_97 ) > 13 ) /= .false. ) then
 8127.                 _substr(t$3513,1,13) = 'Sfc_SSiB.f90'
 8127.                 _substr(t$3514,1,7) = 'SIBMAX'
 8127.                t$3515 = 1 + $I_L8090_97
 8127.                call _bounds_error(  _substr(t$3513,1,13), 8127,  _substr(t$3514,1,7), 1, 1, 13, t$3515, t$3512 )
 8127.             endif
 8127.             $Unit_temp_O0 = nfprt
 8127.             $IOitem_O1 = ( 1 + $I_L8090_97 )
 8127.             $_IOitem_P0(0) = sibmax(1 + $I_L8090_97)
 8127.             $_IOitem_P0(1) = $SC_tzdep_I0
 8127.             $_IOitem_P0(2) = $SC_tzdep_I1
 8127.             $_IOitem_P0(3) = $SC_tzdep_I2
 8127.             $_IOitem_P0(4) = tporos
 8127.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$1447,  _substr(t$1446,1,43), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O1, 0x2000200000000L ), _iotype( (&)$_IOitem_P0(:( 0, 4, 1 )), 0x804060300000000L ) ) )
 8127.          endif
 8157.          $I_L8090_97 = 1 + $I_L8090_97
 8156.          if ( $I_L8090_97 >= 13 ) exit
 8156.       enddo
 8161.       if ( jbmax > 0 ) then
 8162.          $SC_ibmaxperjb_I4 = ibmaxperjb%dim_1%SM
 8162.          $SC_ibmaxperjb_I3 = ibmaxperjb%dim_1%EX
 8174.          $SC_poros_I10 = poros%dim_1%EX
 8174.          $SC_poros_I11 = poros%dim_1%LB
 8169.          $SC_zdepth_I5 = zdepth%dim_1%EX
 8169.          $SC_zdepth_I6 = zdepth%dim_1%LB
 8169.          $SC_zdepth_I8 = zdepth%dim_2%SM
 8169.          $SC_zdepth_I7 = zdepth%dim_2%EX
 8169.          $SC_zdepth_I9 = zdepth%dim_2%LB
 8161.          $I_L8161_133 = 0
 8161.          do
 8162.             $t_S3 = (ibmaxperjb%base_addr)(1 + $I_L8161_133, 0)
 8162.             if ( $t_S3 > 0 ) then
 8162.                $I_L8162_131 = 0
 8162.                do
 8164.                   $I_L8164_119 = 0
 8164. !dir$ ivdep
 8164.                   do
 8164.                      wsib3d(1 + $I_L8162_131, 1 + $I_L8161_133, 1 + $I_L8164_119) = 0.0
 8164.                      $I_L8164_119 = 1 + $I_L8164_119
 8164.                      if ( $I_L8164_119 >= 3 ) exit
 8164.                   enddo
 8166.                   $is_S5 = imask(1 + $I_L8162_131, 1 + $I_L8161_133)
 8167.                   if ( imask(1 + $I_L8162_131, 1 + $I_L8161_133) /= 0 ) then
 8169.                      $SC_tzdep_I0 = (zdepth%base_addr)($is_S5, 1, 0)
 8170.                      $SC_tzdep_I1 = (zdepth%base_addr)($is_S5, 2, 0)
 8171.                      $SC_tzdep_I2 = (zdepth%base_addr)($is_S5, 3, 0)
 8174.                      $tporos_S19 = (poros%base_addr)($is_S5, 0)
 8178.                      glsm_tzdep(0) = 0.0
 8179.                      glsm_w_sib(0) = 0.0
 8181.                      $glsm_tzdep_WR0_R0 = 0.0
 8181.                      $I_L8181_99 = 0
 8181.                      do
 8182.                         $glsm_tzdep_WR0_R0 = $glsm_tzdep_WR0_R0 + (zdepth%base_addr)($is_S5, 1 + $I_L8181_99, 0)
 8182.                         glsm_tzdep(1 + $I_L8181_99) = $glsm_tzdep_WR0_R0
 8183.                         glsm_w_sib(1 + $I_L8181_99) = 0.0
 8184.                         $I_L8181_99 = 1 + $I_L8181_99
 8181.                         if ( $I_L8181_99 >= 3 ) exit
 8181.                      enddo
 8188.                      if ( nzg > 0 ) then
 8188.                         $I_L8188_101 = 0
 8188. !dir$ ivdep
 8188.                         do
 8189.                            glsm_w1d(1 + $I_L8188_101) = glsm_w(1 + $I_L8162_131, 1 + $I_L8161_133, 1 + $I_L8188_101)
 8190.                            $I_L8188_101 = 1 + $I_L8188_101
 8188.                            if ( $I_L8188_101 >= nzg ) exit
 8188.                         enddo
 8188.                      endif
 8198.                      t$3530 = ( max( 0, 1 + nzg ) )
 8198.                      t$3533 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, 1 + nzg ) ) ) ) ), 8 )
 8198.                      $F_A37 = ( 1 + nzg )
 8198.                      if ( nzg >= 0 ) then
 8198.                         $I_L8198_121 = 0
 8198. !dir$ ivdep
 8198.                         do
 8198.                            t$3532(1 + $I_L8198_121) = glsm_slz($I_L8198_121)
 8198.                            $I_L8198_121 = 1 + $I_L8198_121
 8198.                            if ( $I_L8198_121 >= $F_A37 ) exit
 8198.                         enddo
 8198.                      endif
 8198. !dir$ suppress t$3532(1)
 8199. !dir$ suppress glsm_w1d(0)
 8199.                      t$3535 = $_StaticDV_P2
 8199.                      t$3535%base_addr = pointer to array[1] of real (kind=8)( loc( glsm_w1d(0) ) )
 8195.                      t$1448 = 4
 8195.                      t$2322 = 4
 8195.                      t$2325 = 32
 8195.                      t$1452 = ( 1 + nzg )
 8195.                      t$2326 = max( 0, ( 1 + nzg ) )
 8195.                      t$2327 = 32
 8195.                      t$2329 = t$2327 + 8 * max( 0, ( 1 + nzg ) )
 8195.                      t$2330 = 8 * ( 7 + t$2327 + 8 * max( 0, ( 1 + nzg ) ) ) / 8
 8195.                      t$2332 = t$2330 + 8 * max( 0, ( 1 + nzg ) )
 8195.                      t$2333 = 8 * ( 7 + t$2330 + 8 * max( 0, ( 1 + nzg ) ) ) / 8
 8195.                      t$2335 = 32 + t$2333
 8195.                      t$2323 = int( _alloc( 32 + t$2333 ), 8 )
 8195.                      t$2324 = t$2323
 8195.                      t$2328 = t$2327 + t$2323
 8195.                      t$2331 = t$2330 + t$2323
 8195.                      t$2334 = t$2333 + t$2323
 8195.                      if ( nzg >= 0 ) then
 8195.                         $SC_t_I13 = 1
 8195.                         $SC_t_I12 = ( max( 0, 1 + nzg ) )
 8195.                         $I_L8195_103 = 0
 8195. !dir$ ivdep
 8195.                         do
 8195.                            zc(1 + $I_L8195_103) = t$3532(1 + $I_L8195_103)
 8195.                            wi(1 + $I_L8195_103) = (t$3535%base_addr)(1 + $I_L8195_103, 0)
 8195.                            $I_L8195_103 = 1 + $I_L8195_103
 8195.                            if ( $I_L8195_103 >= 1 + nzg ) exit
 8195.                         enddo
 8195.                      endif
 8195.                      $I_L8195_105 = 0
 8195. !dir$ ivdep
 8195.                      do
 8195.                         zm(1 + $I_L8195_105) = glsm_tzdep($I_L8195_105)
 8195.                         $I_L8195_105 = 1 + $I_L8195_105
 8195.                         if ( $I_L8195_105 >= 4 ) exit
 8195.                      enddo
 8195.                      $I_L8195_123 = 0
 8195. !dir$ ivdep
 8195.                      do
 8195.                         wf(1 + $I_L8195_123) = 0.0
 8195.                         $I_L8195_123 = 1 + $I_L8195_123
 8195.                         if ( $I_L8195_123 >= 4 ) exit
 8195.                      enddo
 8195.                      wf(1) = wi(2)
 8195.                      wf(2) = wi(2)
 8195.                      $dzlft_S11 = 0.0
 8195.                      $l_S12 = 2
 8195.                      $I_L8195_125 = 0
 8195.                      do
 8195.                         if ( $dzlft_S11 /= 0.0 ) then
 8195.                            wf(3 + $I_L8195_125) = wf(3 + $I_L8195_125) + $dzlft_S11 * wi($l_S12)
 8195.                            $l_S12 = 1 + $l_S12
 8195.                         endif
 8195.                         $SC_zm_I18 = zm(3 + $I_L8195_125)
 8195.                         $I_l_107 = 0
 8195. !dir$ ivdep
 8195.                         do
 8195.                            if ( zc($l_S12 + $I_l_107) > $SC_zm_I18 ) then
 8195.                               $dzlft_S11 = zc($l_S12 + $I_l_107) + -$SC_zm_I18
 8195.                               wf(3 + $I_L8195_125) = wf(3 + $I_L8195_125) + wi($l_S12 + $I_l_107) * ( $SC_zm_I18 + -zc(-1 + $l_S12 + $I_l_107) )
 8195.                               $l_S12 = ( $l_S12 + $I_l_107 )
 8195.                               $I_L8195_125 = 1 + $I_L8195_125
 8195.                               ???<$I_L8195_125 < 2>???
 8195.                               goto 10
 8195.                            endif
 8195.                            wf(3 + $I_L8195_125) = wf(3 + $I_L8195_125) + wi($l_S12 + $I_l_107) * ( zc($l_S12 + $I_l_107) + -zc(-1 + $l_S12 + $I_l_107) )
 8195.                            $I_l_107 = 1 + $I_l_107
 8195.                            if ( $I_l_107 >= 1 + max( 0, 1 + nzg + -$l_S12 ) ) exit
 8195.                         enddo
 8195.    10                   continue
 8195.                         $SC_zc_I14 = zc(1 + nzg)
 8195.                         $I_L8195_109 = 0
 8195. !dir$ ivdep
 8195.                         do
 8195.                            if ( zm(3 + $I_L8195_109) > $SC_zc_I14 ) then
 8195.                               wf(3 + $I_L8195_109) = ( wf(3 + $I_L8195_109) * 1.0/( $SC_zc_I14 + -zm(2 + $I_L8195_109) ) )
 8195.                            else
 8195.                               wf(3 + $I_L8195_109) = ( wf(3 + $I_L8195_109) * 1.0/( zm(3 + $I_L8195_109) + -zm(2 + $I_L8195_109) ) )
 8195.                            endif
 8195.                            $I_L8195_109 = 1 + $I_L8195_109
 8195.                            if ( $I_L8195_109 >= 2 ) exit
 8195.                         enddo
 8195.                         $I_L8195_111 = 0
 8195. !dir$ ivdep
 8195.                         do
 8195.                            glsm_w_sib($I_L8195_111) = wf(1 + $I_L8195_111)
 8195.                            $I_L8195_111 = 1 + $I_L8195_111
 8195.                            if ( $I_L8195_111 >= 4 ) exit
 8195.                         enddo
 8195.                         _free( t$2323 )
 8198.                         _free( t$3533 )
 8257.                         ssib(1 + $I_L8162_131, 1 + $I_L8161_133) = 0.0
 8258.                         wsib(1 + $I_L8162_131, 1 + $I_L8161_133) = 0.0
 8263.                         $SC_wsib_I16 = 0.0
 8264.                         $SC_ssib_I17 = 0.0
 8262.                         $SC_glsm_tzdep_I15 = glsm_tzdep(3)
 8207.                         $I_L8207_113 = 0
 8207. !dir$ ivdep
 8207.                         do
 8208.                            wsib3d(1 + $I_L8162_131, 1 + $I_L8161_133, 1 + $I_L8207_113) = glsm_w_sib(1 + $I_L8207_113)
 8262.                            $fx_S18 = ( 1.0/$SC_glsm_tzdep_I15 * ( glsm_tzdep(1 + $I_L8207_113) + -glsm_tzdep($I_L8207_113) ) )
 8264.                            $SC_ssib_I17 = $SC_ssib_I17 + $fx_S18 * $tporos_S19 * glsm_w_sib(1 + $I_L8207_113)
 8263.                            $SC_wsib_I16 = $SC_wsib_I16 + $fx_S18 * glsm_w_sib(1 + $I_L8207_113)
 8209.                            $I_L8207_113 = 1 + $I_L8207_113
 8207.                            if ( $I_L8207_113 >= 3 ) exit
 8207.                         enddo
 8263.                         wsib(1 + $I_L8162_131, 1 + $I_L8161_133) = $SC_wsib_I16
 8264.                         ssib(1 + $I_L8162_131, 1 + $I_L8161_133) = $SC_ssib_I17
 8270.                         soilm(1 + $I_L8162_131, 1 + $I_L8161_133) = $tporos_S19 * ( $SC_tzdep_I0 * wsib3d(1 + $I_L8162_131, 1 + $I_L8161_133, 1) + $SC_tzdep_I1 * wsib3d(1 + $I_L8162_131, 1 + $I_L8161_133, 2) + $SC_tzdep_I2 * wsib3d(1 + $I_L8162_131, 1 + $I_L8161_133, 3) )
 8270.                      endif
 8275.                      $I_L8162_131 = 1 + $I_L8162_131
 8274.                      if ( $I_L8162_131 >= $t_S3 ) exit
 8274.                   enddo
 8274.                endif
 8276.                $I_L8161_133 = 1 + $I_L8161_133
 8275.                if ( $I_L8161_133 >= jbmax ) exit
 8275.             enddo
 8275.          endif
 7963.          _free( t$2313 )
 8278.          return
 8278.       end
 8278.       
 8280.       
 8280.       subroutine extrak( w, dw, tbee, tphsat, rsoilm, cover, tph1, tph2, psit, factor )
 8301.       psit = tphsat * _exp3( log( abs( ( w + -5.0e-1 * dw ) ) ), ( w + -5.0e-1 * dw ), -tbee )
 8311.       $rsoil_S0 = 101840.0 * ( 1.0 + -_exp3( log( abs( ( w + -5.0e-1 * dw ) ) ), ( w + -5.0e-1 * dw ), 2.7000000000000001e-3 ) )
 8325.       $hr_S1 = _expn( ( max( -10.0, ( 6.8570230314891835e-5 * psit ) ) ) )
 8347.       factor = max( 9.9999999999999995e-7, ( cover * ( max( 0.0, min( 1.0, ( ( -50.0 + psit + -tph2 ) * 1.0/( tph1 + -tph2 ) ) ) ) ) + ( 1.0 + -cover ) * ( $hr_S1 * ( rsoilm * 1.0/$rsoil_S0 ) ) ) )
 8348.       return
 8348.       end
 8348.       
 8352.       
 8352.       subroutine vert_interp( nsib, nzg, tzdep, glsm_slz, gl_sm, glsm_w_sib )
 8352.       t$1448 = nsib
 8361.       t$2322 = _zla( 0, nsib )
 8361.       glsm_slz%dim_1%LB = 1
 8361.       gl_sm%dim_1%LB = 1
 8367.       t$2325 = 8 * _zla( 0, nsib )
 8352.       t$1452 = nzg
 8369.       t$2326 = _zla( 0, nzg )
 8369.       t$2327 = 8 * ( 7 + 8 * _zla( 0, nsib ) ) / 8
 8369.       t$2329 = t$2327 + 8 * _zla( 0, nzg )
 8368.       t$2330 = 8 * ( 7 + t$2327 + 8 * _zla( 0, nzg ) ) / 8
 8368.       t$2332 = t$2330 + 8 * _zla( 0, nzg )
 8366.       t$2333 = 8 * ( 7 + t$2330 + 8 * _zla( 0, nzg ) ) / 8
 8366.       t$2335 = t$2333 + 8 * _zla( 0, nsib )
 8352.       t$2323 = int( _alloc( t$2333 + 8 * _zla( 0, nsib ) ), 8 )
 8367.       t$2324 = t$2323
 8369.       t$2328 = t$2327 + t$2323
 8368.       t$2331 = t$2330 + t$2323
 8366.       t$2334 = t$2333 + t$2323
 8376.       if ( nzg > 0 ) then
 8377.          $SC_glsm_slz_I1 = glsm_slz%dim_1%SM
 8377.          $SC_glsm_slz_I0 = glsm_slz%dim_1%EX
 8398.          $SC_gl_sm_I3 = gl_sm%dim_1%SM
 8398.          $SC_gl_sm_I2 = gl_sm%dim_1%EX
 8376.          $I_L8376_47 = 0
 8376. !dir$ ivdep
 8376.          do
 8377.             zc(1 + $I_L8376_47) = (glsm_slz%base_addr)(1 + $I_L8376_47, 0)
 8398.             wi(1 + $I_L8376_47) = (gl_sm%base_addr)(1 + $I_L8376_47, 0)
 8378.             $I_L8376_47 = 1 + $I_L8376_47
 8376.             if ( $I_L8376_47 >= nzg ) exit
 8376.          enddo
 8376.       endif
 8380.       if ( nsib > 0 ) then
 8380.          $I_L8380_49 = 0
 8380. !dir$ ivdep
 8380.          do
 8381.             zm(1 + $I_L8380_49) = tzdep(1 + $I_L8380_49)
 8382.             $I_L8380_49 = 1 + $I_L8380_49
 8380.             if ( $I_L8380_49 >= nsib ) exit
 8380.          enddo
 8380.       endif
 8404.       $F_A33 = nsib
 8404.       if ( nsib > 0 ) then
 8404.          $I_L8404_57 = 0
 8404. !dir$ ivdep
 8404.          do
 8404.             wf(1 + $I_L8404_57) = 0.0
 8404.             $I_L8404_57 = 1 + $I_L8404_57
 8404.             if ( $I_L8404_57 >= $F_A33 ) exit
 8404.          enddo
 8404.       endif
 8408.       wf(1) = wi(2)
 8409.       wf(2) = wi(2)
 8412.       $dzlft_S3 = 0.0
 8413.       $l_S4 = 2
 8414.       if ( -3 + nsib >= 0 ) then
 8414.          $I_L8414_59 = 0
 8414.          do
 8418.             if ( $dzlft_S3 /= 0.0 ) then
 8420.                wf(3 + $I_L8414_59) = wf(3 + $I_L8414_59) + $dzlft_S3 * wi($l_S4)
 8422.                $l_S4 = 1 + $l_S4
 8422.             endif
 8428.             $SC_zm_I5 = zm(3 + $I_L8414_59)
 8426.             $I_l_51 = 0
 8426. !dir$ ivdep
 8426.             do
 8428.                if ( zc($l_S4 + $I_l_51) > $SC_zm_I5 ) then
 8441.                   $dzlft_S3 = zc($l_S4 + $I_l_51) + -$SC_zm_I5
 8440.                   wf(3 + $I_L8414_59) = wf(3 + $I_L8414_59) + wi($l_S4 + $I_l_51) * ( $SC_zm_I5 + -zc(-1 + $l_S4 + $I_l_51) )
 8434.                   $l_S4 = ( $l_S4 + $I_l_51 )
 8443.                   $I_L8414_59 = 1 + $I_L8414_59
 8443.                   ???<$I_L8414_59 < -2 + nsib>???
 8443.                   goto 10
 8443.                endif
 8430.                wf(3 + $I_L8414_59) = wf(3 + $I_L8414_59) + wi($l_S4 + $I_l_51) * ( zc($l_S4 + $I_l_51) + -zc(-1 + $l_S4 + $I_l_51) )
 8436.                $I_l_51 = 1 + $I_l_51
 8430.                if ( $I_l_51 >= 1 + max( 0, nzg + -$l_S4 ) ) exit
 8430.             enddo
 8430.    10       continue
 8452.             $SC_zc_I4 = zc(nzg)
 8447.             $I_L8447_53 = 0
 8447. !dir$ ivdep
 8447.             do
 8452.                if ( zm(3 + $I_L8447_53) > $SC_zc_I4 ) then
 8453.                   wf(3 + $I_L8447_53) = ( wf(3 + $I_L8447_53) * 1.0/( $SC_zc_I4 + -zm(2 + $I_L8447_53) ) )
 8453.                else
 8455.                   wf(3 + $I_L8447_53) = ( wf(3 + $I_L8447_53) * 1.0/( zm(3 + $I_L8447_53) + -zm(2 + $I_L8447_53) ) )
 8455.                endif
 8457.                $I_L8447_53 = 1 + $I_L8447_53
 8456.                if ( $I_L8447_53 >= -2 + nsib ) exit
 8456.             enddo
 8456.          endif
 8461.          if ( nsib > 0 ) then
 8461.             $I_L8461_55 = 0
 8461. !dir$ ivdep
 8461.             do
 8462.                glsm_w_sib(1 + $I_L8461_55) = wf(1 + $I_L8461_55)
 8464.                $I_L8461_55 = 1 + $I_L8461_55
 8461.                if ( $I_L8461_55 >= nsib ) exit
 8461.             enddo
 8461.          endif
 8352.          _free( t$2323 )
 8484.          return
 8484.       end
 8484.       
  136.       
  136.       module sfc_ssib
  136.       end
  136.       
