       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  SemiLagrangian.f90
       !        File                  :  SemiLagrangian.opt
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
  418.       
  418.       subroutine semilagr( nit, delt, inew, iold )
  157.       t$2 = ( ibmax * kmax )
  187.       t$67 = _zla( 0, ( ibmax * kmax ) )
  187.       t$70 = 8 * _zla( 0, ( ibmax * kmax ) )
  157.       t$1 = ( 4 * ibmax * kmax )
  169.       t$71 = _zla( 0, ( 4 * ibmax * kmax ) )
  169.       t$73 = 8 * _zla( 0, ( ibmax * kmax ) ) + 4 * _zla( 0, ( 4 * ibmax * kmax ) )
  157.       t$3 = ( 12 * ibmax * kmax )
  178.       t$74 = _zla( 0, ( 12 * ibmax * kmax ) )
  178.       t$76 = 8 * _zla( 0, ( ibmax * kmax ) ) + 4 * _zla( 0, ( 4 * ibmax * kmax ) ) + 4 * _zla( 0, ( 12 * ibmax * kmax ) )
  170.       t$78 = 4 * _zla( 0, ( 4 * ibmax * kmax ) ) + 4 * _zla( 0, ( 12 * ibmax * kmax ) ) + 12 * _zla( 0, ( ibmax * kmax ) )
  179.       t$80 = 4 * _zla( 0, ( 4 * ibmax * kmax ) ) + 12 * _zla( 0, ( ibmax * kmax ) ) + 8 * _zla( 0, ( 12 * ibmax * kmax ) )
  171.       t$82 = 4 * _zla( 0, ( 4 * ibmax * kmax ) ) + 8 * _zla( 0, ( 12 * ibmax * kmax ) ) + 16 * _zla( 0, ( ibmax * kmax ) )
  180.       t$83 = 8 * ( 7 + 4 * _zla( 0, ( 4 * ibmax * kmax ) ) + 8 * _zla( 0, ( 12 * ibmax * kmax ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) ) / 8
  180.       t$85 = t$83 + 8 * _zla( 0, ( ibmax * kmax ) )
  180.       t$86 = 8 * ( 7 + t$83 + 8 * _zla( 0, ( ibmax * kmax ) ) ) / 8
  180.       t$88 = t$86 + 8 * _zla( 0, ( ibmax * kmax ) )
  180.       t$89 = 8 * ( 7 + t$86 + 8 * _zla( 0, ( ibmax * kmax ) ) ) / 8
  180.       t$91 = t$89 + 8 * _zla( 0, ( ibmax * kmax ) )
  180.       t$92 = 8 * ( 7 + t$89 + 8 * _zla( 0, ( ibmax * kmax ) ) ) / 8
  180.       t$94 = t$92 + 8 * _zla( 0, ( ibmax * kmax ) )
  181.       t$95 = 8 * ( 7 + t$92 + 8 * _zla( 0, ( ibmax * kmax ) ) ) / 8
  181.       t$97 = t$95 + 8 * _zla( 0, ( ibmax * kmax ) )
  185.       t$98 = 8 * ( 7 + t$95 + 8 * _zla( 0, ( ibmax * kmax ) ) ) / 8
  185.       t$100 = t$98 + 8 * _zla( 0, ( ibmax * kmax ) )
  182.       t$101 = 8 * ( 7 + t$98 + 8 * _zla( 0, ( ibmax * kmax ) ) ) / 8
  182.       t$103 = t$101 + 8 * _zla( 0, ( ibmax * kmax ) )
  184.       t$104 = 8 * ( 7 + t$101 + 8 * _zla( 0, ( ibmax * kmax ) ) ) / 8
  184.       t$106 = t$104 + 8 * _zla( 0, ( 4 * ibmax * kmax ) )
  183.       t$107 = 8 * ( 7 + t$104 + 8 * _zla( 0, ( 4 * ibmax * kmax ) ) ) / 8
  183.       t$109 = t$107 + 8 * _zla( 0, ( ibmax * kmax ) )
  186.       t$110 = 8 * ( 7 + t$107 + 8 * _zla( 0, ( ibmax * kmax ) ) ) / 8
  186.       t$112 = t$110 + 8 * _zla( 0, ( ibmax * kmax ) )
  157.       t$68 = int( _alloc( t$110 + 8 * _zla( 0, ( ibmax * kmax ) ) ), 8 )
  187.       t$69 = t$68
  169.       t$72 = t$68 + 8 * _zla( 0, ( ibmax * kmax ) )
  178.       t$75 = t$68 + 8 * _zla( 0, ( ibmax * kmax ) ) + 4 * _zla( 0, ( 4 * ibmax * kmax ) )
  170.       t$77 = t$68 + 8 * _zla( 0, ( ibmax * kmax ) ) + 4 * _zla( 0, ( 4 * ibmax * kmax ) ) + 4 * _zla( 0, ( 12 * ibmax * kmax ) )
  179.       t$79 = t$68 + 4 * _zla( 0, ( 4 * ibmax * kmax ) ) + 4 * _zla( 0, ( 12 * ibmax * kmax ) ) + 12 * _zla( 0, ( ibmax * kmax ) )
  171.       t$81 = t$68 + 4 * _zla( 0, ( 4 * ibmax * kmax ) ) + 12 * _zla( 0, ( ibmax * kmax ) ) + 8 * _zla( 0, ( 12 * ibmax * kmax ) )
  180.       t$84 = t$83 + t$68
  180.       t$87 = t$86 + t$68
  180.       t$90 = t$89 + t$68
  180.       t$93 = t$92 + t$68
  181.       t$96 = t$95 + t$68
  185.       t$99 = t$98 + t$68
  182.       t$102 = t$101 + t$68
  184.       t$105 = t$104 + t$68
  183.       t$108 = t$107 + t$68
  186.       t$111 = t$110 + t$68
  195.       $snt_T0 = _mt_single( 1, _mt_rw_list(...) )
  196.       jglob = 0
  197.       $snt_T0 = _mt_endsingle( 1, _mt_rw_list(...), $snt_T0 )
  216.       $SC_del_I33 = del%dim_1%EX
  216.       $SC_del_I34 = del%dim_1%LB
  214.       $SC_fgvmean_I28 = fgvmean%dim_1%EX
  214.       $SC_fgvmean_I29 = fgvmean%dim_1%LB
  214.       $SC_fgvmean_I31 = fgvmean%dim_2%SM
  214.       $SC_fgvmean_I30 = fgvmean%dim_2%EX
  214.       $SC_fgvmean_I32 = fgvmean%dim_2%LB
  213.       $SC_fgumean_I23 = fgumean%dim_1%EX
  213.       $SC_fgumean_I24 = fgumean%dim_1%LB
  213.       $SC_fgumean_I26 = fgumean%dim_2%SM
  213.       $SC_fgumean_I25 = fgumean%dim_2%EX
  213.       $SC_fgumean_I27 = fgumean%dim_2%LB
  208.       $SC_fgv_I15 = fgv%dim_1%EX
  208.       $SC_fgv_I16 = fgv%dim_1%LB
  208.       $SC_fgv_I18 = fgv%dim_2%SM
  208.       $SC_fgv_I17 = fgv%dim_2%EX
  208.       $SC_fgv_I19 = fgv%dim_2%LB
  208.       $SC_fgv_I21 = fgv%dim_3%SM
  208.       $SC_fgv_I20 = fgv%dim_3%EX
  208.       $SC_fgv_I22 = fgv%dim_3%LB
  207.       $SC_fgu_I7 = fgu%dim_1%EX
  207.       $SC_fgu_I8 = fgu%dim_1%LB
  207.       $SC_fgu_I10 = fgu%dim_2%SM
  207.       $SC_fgu_I9 = fgu%dim_2%EX
  207.       $SC_fgu_I11 = fgu%dim_2%LB
  207.       $SC_fgu_I13 = fgu%dim_3%SM
  207.       $SC_fgu_I12 = fgu%dim_3%EX
  207.       $SC_fgu_I14 = fgu%dim_3%LB
  206.       $SC_coslat_I2 = coslat%dim_1%EX
  206.       $SC_coslat_I3 = coslat%dim_1%LB
  206.       $SC_coslat_I5 = coslat%dim_2%SM
  206.       $SC_coslat_I4 = coslat%dim_2%EX
  206.       $SC_coslat_I6 = coslat%dim_2%LB
  205.       $SC_ibmaxperjb_I0 = ibmaxperjb%dim_1%EX
  205.       $SC_ibmaxperjb_I1 = ibmaxperjb%dim_1%LB
  205. !dir$ loop_info (automatic) cache_nt( ibmaxperjb )
  205.       do
  199.          $snt_T1 = _mt_critical( 2, _mt_rw_list(...) )
  200.          jglob = 1 + jglob
  201.          j = jglob
  202.          $snt_T1 = _mt_endcritical( 2, _mt_rw_list(...), $snt_T1 )
  203.          if ( j > jbmax ) goto 10
  205.          $t_S0 = (ibmaxperjb%base_addr)(j, 0)
  205.          if ( $t_S0 > 0 ) then
  205.             $I_L205_860 = 0
  205. !dir$ loop_info (automatic) cache_nt( coslat )
  205.             do
  206.                aux = 6370000.0 * (coslat%base_addr)(1 + $I_L205_860, j, 0)
  207.                $F_A33 = $SC_fgu_I9
  207.                if ( $SC_fgu_I9 > 0 ) then
  207.                   $I_L207_792 = 0
  207. !dir$ ivdep
  207.                   do
  207.                      (fgu%base_addr)(1 + $I_L205_860, $SC_fgu_I11 + $I_L207_792, j, 0) = ( (fgu%base_addr)(1 + $I_L205_860, $SC_fgu_I11 + $I_L207_792, j, 0) * 1.0/aux )
  207.                      $I_L207_792 = 1 + $I_L207_792
  207.                      if ( $I_L207_792 >= $F_A33 ) exit
  207.                   enddo
  207.                endif
  208.                $F_A34 = $SC_fgv_I17
  208.                if ( $SC_fgv_I17 > 0 ) then
  208.                   $I_L208_794 = 0
  208. !dir$ ivdep
  208.                   do
  208.                      (fgv%base_addr)(1 + $I_L205_860, $SC_fgv_I19 + $I_L208_794, j, 0) = ( (fgv%base_addr)(1 + $I_L205_860, $SC_fgv_I19 + $I_L208_794, j, 0) * 1.0/aux )
  208.                      $I_L208_794 = 1 + $I_L208_794
  208.                      if ( $I_L208_794 >= $F_A34 ) exit
  208.                   enddo
  208.                endif
  209.                $I_L205_860 = 1 + $I_L205_860
  205.                if ( $I_L205_860 >= $t_S0 ) exit
  205.             enddo
  205.          endif
  213.          $F_A35 = $SC_fgumean_I23
  213.          if ( $SC_fgumean_I23 > 0 ) then
  213.             $I_L213_796 = 0
  213. !dir$ ivdep
  213.             do
  213.                (fgumean%base_addr)($SC_fgumean_I24 + $I_L213_796, j, 0) = 0.0
  213.                $I_L213_796 = 1 + $I_L213_796
  213.                if ( $I_L213_796 >= $F_A35 ) exit
  213.             enddo
  213.          endif
  214.          $F_A36 = $SC_fgvmean_I28
  214.          if ( $SC_fgvmean_I28 > 0 ) then
  214.             $I_L214_798 = 0
  214. !dir$ ivdep
  214.             do
  214.                (fgvmean%base_addr)($SC_fgvmean_I29 + $I_L214_798, j, 0) = 0.0
  214.                $I_L214_798 = 1 + $I_L214_798
  214.                if ( $I_L214_798 >= $F_A36 ) exit
  214.             enddo
  214.          endif
  215.          if ( kmax > 0 ) then
  215.             $I_L215_862 = 0
  215.             do
  216.                $F_A37 = $SC_fgumean_I23
  216.                if ( $SC_fgumean_I23 > 0 ) then
  216.                   $SC_del_I265 = (del%base_addr)(1 + $I_L215_862, 0)
  216.                   $I_L216_800 = 0
  216. !dir$ ivdep
  216.                   do
  216.                      (fgumean%base_addr)($SC_fgumean_I24 + $I_L216_800, j, 0) = (fgumean%base_addr)($SC_fgumean_I24 + $I_L216_800, j, 0) + $SC_del_I265 * (fgu%base_addr)($SC_fgu_I8 + $I_L216_800, 1 + $I_L215_862, j, 0)
  216.                      $I_L216_800 = 1 + $I_L216_800
  216.                      if ( $I_L216_800 >= $F_A37 ) exit
  216.                   enddo
  216.                endif
  217.                $F_A38 = $SC_fgvmean_I28
  217.                if ( $SC_fgvmean_I28 > 0 ) then
  217.                   $SC_del_I265 = (del%base_addr)(1 + $I_L215_862, 0)
  217.                   $I_L217_802 = 0
  217. !dir$ ivdep
  217.                   do
  217.                      (fgvmean%base_addr)($SC_fgvmean_I29 + $I_L217_802, j, 0) = (fgvmean%base_addr)($SC_fgvmean_I29 + $I_L217_802, j, 0) + $SC_del_I265 * (fgv%base_addr)($SC_fgv_I16 + $I_L217_802, 1 + $I_L215_862, j, 0)
  217.                      $I_L217_802 = 1 + $I_L217_802
  217.                      if ( $I_L217_802 >= $F_A38 ) exit
  217.                   enddo
  217.                endif
  218.                $I_L215_862 = 1 + $I_L215_862
  215.                if ( $I_L215_862 >= kmax ) exit
  215.             enddo
  215.          endif
  218.       enddo
  218.    10 continue
  223.       if ( maxnodes > 1 ) then
  224.          _mt_barrier( 3, _mt_rw_list(...) )
  225.          $snt_T2 = _mt_single( 4, _mt_rw_list(...) )
  226.          call exchange_winds( (fgu%base_addr)(fgu%dim_1%LB, fgu%dim_2%LB, fgu%dim_3%LB, 0), (fgv%base_addr)(fgv%dim_1%LB, fgv%dim_2%LB, fgv%dim_3%LB, 0), (fgw%base_addr)(fgw%dim_1%LB, fgw%dim_2%LB, fgw%dim_3%LB, 0), (fgumean%base_addr)(fgumean%dim_1%LB, fgumean%dim_2%LB, 0), (fgvmean%base_addr)(fgvmean%dim_1%LB, fgvmean%dim_2%LB, 0), nrecs_gr, nsends_gr )
  227.          $snt_T2 = _mt_endsingle( 4, _mt_rw_list(...), $snt_T2 )
  227.       endif
  232.       delta = delt
  233.       delta1 = delt
  234.       dt2 = 2.0 * delt
  235.       _mt_barrier( 5, _mt_rw_list(...) )
  236.       $snt_T3 = _mt_single( 6, _mt_rw_list(...) )
  237.       jglob = 0
  238.       $snt_T3 = _mt_endsingle( 6, _mt_rw_list(...), $snt_T3 )
  247.       $SC_fgyv_I60 = fgyv%dim_1%LB
  247.       $SC_fgyv_I62 = fgyv%dim_2%SM
  247.       $SC_fgyv_I63 = fgyv%dim_2%LB
  247.       $SC_fgyv_I65 = fgyv%dim_3%SM
  247.       $SC_fgyv_I64 = fgyv%dim_3%EX
  247.       $SC_fgyv_I66 = fgyv%dim_3%LB
  247.       $SC_fgvm_I76 = fgvm%dim_1%LB
  247.       $SC_fgvm_I78 = fgvm%dim_2%SM
  247.       $SC_fgvm_I79 = fgvm%dim_2%LB
  247.       $SC_fgvm_I81 = fgvm%dim_3%SM
  247.       $SC_fgvm_I80 = fgvm%dim_3%EX
  247.       $SC_fgvm_I82 = fgvm%dim_3%LB
  247.       $SC_fgyvm_I67 = fgyvm%dim_1%EX
  247.       $SC_fgyvm_I68 = fgyvm%dim_1%LB
  247.       $SC_fgyvm_I70 = fgyvm%dim_2%SM
  247.       $SC_fgyvm_I69 = fgyvm%dim_2%EX
  247.       $SC_fgyvm_I71 = fgyvm%dim_2%LB
  247.       $SC_fgyvm_I73 = fgyvm%dim_3%SM
  247.       $SC_fgyvm_I72 = fgyvm%dim_3%EX
  247.       $SC_fgyvm_I74 = fgyvm%dim_3%LB
  246.       $SC_fgyu_I36 = fgyu%dim_1%LB
  246.       $SC_fgyu_I38 = fgyu%dim_2%SM
  246.       $SC_fgyu_I39 = fgyu%dim_2%LB
  246.       $SC_fgyu_I41 = fgyu%dim_3%SM
  246.       $SC_fgyu_I40 = fgyu%dim_3%EX
  246.       $SC_fgyu_I42 = fgyu%dim_3%LB
  246.       $SC_fgum_I52 = fgum%dim_1%LB
  246.       $SC_fgum_I54 = fgum%dim_2%SM
  246.       $SC_fgum_I55 = fgum%dim_2%LB
  246.       $SC_fgum_I57 = fgum%dim_3%SM
  246.       $SC_fgum_I56 = fgum%dim_3%EX
  246.       $SC_fgum_I58 = fgum%dim_3%LB
  246.       $SC_fgyum_I43 = fgyum%dim_1%EX
  246.       $SC_fgyum_I44 = fgyum%dim_1%LB
  246.       $SC_fgyum_I46 = fgyum%dim_2%SM
  246.       $SC_fgyum_I45 = fgyum%dim_2%EX
  246.       $SC_fgyum_I47 = fgyum%dim_2%LB
  246.       $SC_fgyum_I49 = fgyum%dim_3%SM
  246.       $SC_fgyum_I48 = fgyum%dim_3%EX
  246.       $SC_fgyum_I50 = fgyum%dim_3%LB
  246.       do
  240.          $snt_T4 = _mt_critical( 7, _mt_rw_list(...) )
  241.          jglob = 1 + jglob
  242.          j = jglob
  243.          $snt_T4 = _mt_endcritical( 7, _mt_rw_list(...), $snt_T4 )
  244.          if ( j > jbmax ) goto 20
  246.          $F_A39 = $SC_fgyum_I45
  246.          $F_A40 = $SC_fgyum_I43
  246.          if ( and( -$F_A40, -$F_A39 ) < 0 ) then
  246.             $I_L246_880 = 0
  246.             do
  246.                $I_L246_804 = 0
  246. !dir$ ivdep
  246. !dir$ loop_info (automatic) cache_nt( fgyu, fgum )
  246.                do
  246.                   (fgyum%base_addr)($SC_fgyum_I44 + $I_L246_804, $SC_fgyum_I47 + $I_L246_880, j, 0) = (fgum%base_addr)($SC_fgum_I52 + $I_L246_804, $SC_fgum_I55 + $I_L246_880, j, 0) + dt2 * (fgyum%base_addr)($SC_fgyum_I44 + $I_L246_804, $SC_fgyum_I47 + $I_L246_880, j, 0) + delta * (fgyu%base_addr)($SC_fgyu_I36 + $I_L246_804, $SC_fgyu_I39 + $I_L246_880, j, 0)
  246.                   $I_L246_804 = 1 + $I_L246_804
  246.                   if ( $I_L246_804 >= $F_A40 ) exit
  246.                enddo
  246.                $I_L246_880 = 1 + $I_L246_880
  246.                if ( $I_L246_880 >= $F_A39 ) exit
  246.             enddo
  246.          endif
  247.          $F_A41 = $SC_fgyvm_I69
  247.          $F_A42 = $SC_fgyvm_I67
  247.          if ( and( -$F_A42, -$F_A41 ) < 0 ) then
  247.             $I_L247_882 = 0
  247.             do
  247.                $I_L247_806 = 0
  247. !dir$ ivdep
  247. !dir$ loop_info (automatic) cache_nt( fgyv, fgvm )
  247.                do
  247.                   (fgyvm%base_addr)($SC_fgyvm_I68 + $I_L247_806, $SC_fgyvm_I71 + $I_L247_882, j, 0) = (fgvm%base_addr)($SC_fgvm_I76 + $I_L247_806, $SC_fgvm_I79 + $I_L247_882, j, 0) + dt2 * (fgyvm%base_addr)($SC_fgyvm_I68 + $I_L247_806, $SC_fgyvm_I71 + $I_L247_882, j, 0) + delta * (fgyv%base_addr)($SC_fgyv_I60 + $I_L247_806, $SC_fgyv_I63 + $I_L247_882, j, 0)
  247.                   $I_L247_806 = 1 + $I_L247_806
  247.                   if ( $I_L247_806 >= $F_A42 ) exit
  247.                enddo
  247.                $I_L247_882 = 1 + $I_L247_882
  247.                if ( $I_L247_882 >= $F_A41 ) exit
  247.             enddo
  247.          endif
  248.          $F_A43 = fgtdm%dim_2%EX
  248.          $F_A44 = fgtdm%dim_1%EX
  248.          if ( and( -$F_A44, -$F_A43 ) < 0 ) then
  248.             $SC_fgtd_I274 = fgtd%dim_1%LB
  248.             $SC_fgtd_I275 = fgtd%dim_2%SM
  248.             $SC_fgtd_I276 = fgtd%dim_2%LB
  248.             $SC_fgtd_I278 = fgtd%dim_3%SM
  248.             $SC_fgtd_I277 = fgtd%dim_3%EX
  248.             $SC_fgtd_I279 = fgtd%dim_3%LB
  248.             $SC_fgtmpm_I280 = fgtmpm%dim_1%LB
  248.             $SC_fgtmpm_I281 = fgtmpm%dim_2%SM
  248.             $SC_fgtmpm_I282 = fgtmpm%dim_2%LB
  248.             $SC_fgtmpm_I284 = fgtmpm%dim_3%SM
  248.             $SC_fgtmpm_I283 = fgtmpm%dim_3%EX
  248.             $SC_fgtmpm_I285 = fgtmpm%dim_3%LB
  248.             $SC_fgtdm_I266 = fgtdm%dim_1%EX
  248.             $SC_fgtdm_I267 = fgtdm%dim_1%LB
  248.             $SC_fgtdm_I269 = fgtdm%dim_2%SM
  248.             $SC_fgtdm_I268 = fgtdm%dim_2%EX
  248.             $SC_fgtdm_I270 = fgtdm%dim_2%LB
  248.             $SC_fgtdm_I272 = fgtdm%dim_3%SM
  248.             $SC_fgtdm_I271 = fgtdm%dim_3%EX
  248.             $SC_fgtdm_I273 = fgtdm%dim_3%LB
  248.             $I_L248_884 = 0
  248.             do
  248.                $I_L248_808 = 0
  248. !dir$ ivdep
  248. !dir$ loop_info (automatic) cache_nt( fgtmpm, fgtd )
  248.                do
  248.                   (fgtdm%base_addr)($SC_fgtdm_I267 + $I_L248_808, $SC_fgtdm_I270 + $I_L248_884, j, 0) = (fgtmpm%base_addr)($SC_fgtmpm_I280 + $I_L248_808, $SC_fgtmpm_I282 + $I_L248_884, j, 0) + dt2 * (fgtdm%base_addr)($SC_fgtdm_I267 + $I_L248_808, $SC_fgtdm_I270 + $I_L248_884, j, 0) + delta * (fgtd%base_addr)($SC_fgtd_I274 + $I_L248_808, $SC_fgtd_I276 + $I_L248_884, j, 0)
  248.                   $I_L248_808 = 1 + $I_L248_808
  248.                   if ( $I_L248_808 >= $F_A44 ) exit
  248.                enddo
  248.                $I_L248_884 = 1 + $I_L248_884
  248.                if ( $I_L248_884 >= $F_A43 ) exit
  248.             enddo
  248.          endif
  249.          $F_A45 = fgqdm%dim_2%EX
  249.          $F_A46 = fgqdm%dim_1%EX
  249.          if ( and( -$F_A46, -$F_A45 ) < 0 ) then
  249.             $SC_fgqd_I287 = fgqd%dim_1%LB
  249.             $SC_fgqd_I289 = fgqd%dim_2%SM
  249.             $SC_fgqd_I290 = fgqd%dim_2%LB
  249.             $SC_fgqd_I292 = fgqd%dim_3%SM
  249.             $SC_fgqd_I291 = fgqd%dim_3%EX
  249.             $SC_fgqd_I293 = fgqd%dim_3%LB
  249.             $SC_fgqm_I294 = fgqm%dim_1%LB
  249.             $SC_fgqm_I295 = fgqm%dim_2%SM
  249.             $SC_fgqm_I296 = fgqm%dim_2%LB
  249.             $SC_fgqm_I298 = fgqm%dim_3%SM
  249.             $SC_fgqm_I297 = fgqm%dim_3%EX
  249.             $SC_fgqm_I299 = fgqm%dim_3%LB
  249.             $SC_fgqdm_I286 = fgqdm%dim_1%EX
  249.             $SC_fgqdm_I300 = fgqdm%dim_1%LB
  249.             $SC_fgqdm_I301 = fgqdm%dim_2%SM
  249.             $SC_fgqdm_I288 = fgqdm%dim_2%EX
  249.             $SC_fgqdm_I302 = fgqdm%dim_2%LB
  249.             $SC_fgqdm_I304 = fgqdm%dim_3%SM
  249.             $SC_fgqdm_I303 = fgqdm%dim_3%EX
  249.             $SC_fgqdm_I305 = fgqdm%dim_3%LB
  249.             $I_L249_886 = 0
  249.             do
  249.                $I_L249_810 = 0
  249. !dir$ ivdep
  249. !dir$ loop_info (automatic) cache_nt( fgqm, fgqdm )
  249.                do
  249.                   (fgqdm%base_addr)($SC_fgqdm_I300 + $I_L249_810, $SC_fgqdm_I302 + $I_L249_886, j, 0) = (fgqm%base_addr)($SC_fgqm_I294 + $I_L249_810, $SC_fgqm_I296 + $I_L249_886, j, 0) + delta * (fgqd%base_addr)($SC_fgqd_I287 + $I_L249_810, $SC_fgqd_I290 + $I_L249_886, j, 0)
  249.                   $I_L249_810 = 1 + $I_L249_810
  249.                   if ( $I_L249_810 >= $F_A46 ) exit
  249.                enddo
  249.                $I_L249_886 = 1 + $I_L249_886
  249.                if ( $I_L249_886 >= $F_A45 ) exit
  249.             enddo
  249.          endif
  250.          $F_A47 = fgvdlnp%dim_1%EX
  250.          if ( fgvdlnp%dim_1%EX > 0 ) then
  250.             $SC_fgvdlnp_I316 = fgvdlnp%dim_1%EX
  250.             $SC_fgvdlnp_I317 = fgvdlnp%dim_1%LB
  250.             $SC_fgvdlnp_I319 = fgvdlnp%dim_2%SM
  250.             $SC_fgvdlnp_I318 = fgvdlnp%dim_2%EX
  250.             $SC_fgvdlnp_I320 = fgvdlnp%dim_2%LB
  250.             $SC_fgzs_I311 = fgzs%dim_1%EX
  250.             $SC_fgzs_I312 = fgzs%dim_1%LB
  250.             $SC_fgzs_I314 = fgzs%dim_2%SM
  250.             $SC_fgzs_I313 = fgzs%dim_2%EX
  250.             $SC_fgzs_I315 = fgzs%dim_2%LB
  250.             $SC_fglnpm_I321 = fglnpm%dim_1%EX
  250.             $SC_fglnpm_I322 = fglnpm%dim_1%LB
  250.             $SC_fglnpm_I324 = fglnpm%dim_2%SM
  250.             $SC_fglnpm_I323 = fglnpm%dim_2%EX
  250.             $SC_fglnpm_I325 = fglnpm%dim_2%LB
  250.             $SC_fgvdlnpm_I306 = fgvdlnpm%dim_1%EX
  250.             $SC_fgvdlnpm_I307 = fgvdlnpm%dim_1%LB
  250.             $SC_fgvdlnpm_I309 = fgvdlnpm%dim_2%SM
  250.             $SC_fgvdlnpm_I308 = fgvdlnpm%dim_2%EX
  250.             $SC_fgvdlnpm_I310 = fgvdlnpm%dim_2%LB
  250.             $I_L250_812 = 0
  250. !dir$ ivdep
  250.             do
  250.                (fgvdlnpm%base_addr)($SC_fgvdlnpm_I307 + $I_L250_812, j, 0) = (fglnpm%base_addr)($SC_fglnpm_I322 + $I_L250_812, j, 0) + delta * (fgvdlnp%base_addr)($SC_fgvdlnp_I317 + $I_L250_812, j, 0) + 1.161237879579632e-5 * (fgzs%base_addr)($SC_fgzs_I312 + $I_L250_812, j, 0) + dt2 * (fgvdlnpm%base_addr)($SC_fgvdlnpm_I307 + $I_L250_812, j, 0)
  250.                $I_L250_812 = 1 + $I_L250_812
  250.                if ( $I_L250_812 >= $F_A47 ) exit
  250.             enddo
  250.          endif
  246.       enddo
  246.    20 continue
  256.       _mt_barrier( 8, _mt_rw_list(...) )
  257.       if ( maxnodes > 1 ) then
  258.          $snt_T5 = _mt_single( 9, _mt_rw_list(...) )
  259.          call exchange_fields( (fgyum%base_addr)(fgyum%dim_1%LB, fgyum%dim_2%LB, fgyum%dim_3%LB, 0), (fgyvm%base_addr)(fgyvm%dim_1%LB, fgyvm%dim_2%LB, fgyvm%dim_3%LB, 0), (fgtdm%base_addr)(fgtdm%dim_1%LB, fgtdm%dim_2%LB, fgtdm%dim_3%LB, 0), (fgqdm%base_addr)(fgqdm%dim_1%LB, fgqdm%dim_2%LB, fgqdm%dim_3%LB, 0), (fgvdlnpm%base_addr)(fgvdlnpm%dim_1%LB, fgvdlnpm%dim_2%LB, 0), (fgpass_scalars%base_addr)(fgpass_scalars%dim_1%LB, fgpass_scalars%dim_2%LB, fgpass_scalars%dim_3%LB, fgpass_scalars%dim_4%LB, fgpass_scalars%dim_5%LB, 0), nscalars, iold, nrecs_gr, nsends_gr )
  261.          $snt_T5 = _mt_endsingle( 9, _mt_rw_list(...), $snt_T5 )
  261.       endif
  266.       $snt_T6 = _mt_single( 10, _mt_rw_list(...) )
  267.       jglob = 0
  268.       $snt_T6 = _mt_endsingle( 10, _mt_rw_list(...), $snt_T6 )
  268.       do
  270.          $snt_T7 = _mt_critical( 11, _mt_rw_list(...) )
  271.          jglob = 1 + jglob
  272.          jb = jglob
  273.          $snt_T7 = _mt_endcritical( 11, _mt_rw_list(...), $snt_T7 )
  274.          if ( jb > jbmax ) goto 30
  276.          ibdim = (ibmaxperjb%base_addr)(jb, 0)
  280.          call trajectory( (ulonm%base_addr)(1, jb, 0), (ulatm%base_addr)(1, jb, 0), (usigm%base_addr)(1, jb, 0), ulon(1), ulat(1), usig(1), ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, jb, nit, delta1, ip(1), jn(1) )
  289.          klats = 1
  290.          if ( reducedgrid /= .false. ) then
  290.             klats = 4
  290.          endif
  291.          tm$59 = loc( ulon(1) )
  291.          ulon = _copyin( ulon(1) )
  291.          tm$61 = loc( ulat(1) )
  291.          ulat = _copyin( ulat(1) )
  291.          tm$63 = loc( usig(1) )
  291.          usig = _copyin( usig(1) )
  291.          tm$65 = loc( ulondp(1) )
  291.          ulondp = _copyin( ulondp(1) )
  291.          tm$67 = loc( ulatdp(1) )
  291.          ulatdp = _copyin( ulatdp(1) )
  291.          tm$69 = loc( usigdp(1) )
  291.          usigdp = _copyin( usigdp(1) )
  291.          tm$71 = loc( iloc(1) )
  291.          iloc = _copyin( iloc(1) )
  291.          tm$73 = loc( jloc(1) )
  291.          jloc = _copyin( jloc(1) )
  291.          tm$75 = loc( kloc(1) )
  291.          kloc = _copyin( kloc(1) )
  291.          t$31 = ibdim
  291.          t$32 = kmax
  291.          t$248 = max( 0, ibdim )
  291.          t$249 = max( 0, ibdim )
  291.          t$250 = max( 0, kmax )
  291.          t$251 = max( 0, ibdim ) * max( 0, kmax )
  291.          t$252 = max( 0, ibdim ) * max( 0, kmax )
  291.          t$253 = 4 * max( 0, ibdim ) * max( 0, kmax )
  291.          if ( kmax > 0 ) then
  291.             $SC_delsigma_I93 = delsigma%dim_1%EX
  291.             $SC_delsigma_I94 = delsigma%dim_1%LB
  291.             $SC_delsigma_I96 = delsigma%dim_2%SM
  291.             $SC_delsigma_I95 = delsigma%dim_2%EX
  291.             $SC_delsigma_I97 = delsigma%dim_2%LB
  291.             $SC_ksigref_I88 = ksigref%dim_1%EX
  291.             $SC_ksigref_I89 = ksigref%dim_1%LB
  291.             $SC_ksigref_I91 = ksigref%dim_2%SM
  291.             $SC_ksigref_I90 = ksigref%dim_2%EX
  291.             $SC_ksigref_I92 = ksigref%dim_2%LB
  291.             $SC_sigma_I83 = sigma%dim_1%EX
  291.             $SC_sigma_I84 = sigma%dim_1%LB
  291.             $SC_sigma_I86 = sigma%dim_2%SM
  291.             $SC_sigma_I85 = sigma%dim_2%EX
  291.             $SC_sigma_I87 = sigma%dim_2%LB
  291.             if ( ibdim > 0 ) then
  291.                $I_L291_864 = 0
  291. !dir$ blocking_size( 1, 1 )
  291.                do
  291.                   $I_L291_758 = 0
  291. !dir$ ivdep
  291. !dir$ blocking_size( 256, 256 )
  291.                   do
  291.                      ik = int( ( 1.0/delsigref * ( usig(1 + $I_L291_758, 1 + $I_L291_864) + -(sigma%base_addr)(1 + $I_L291_758, 1, 0) ) ) )
  291.                      $kloc_WR0_R0 = (ksigref%base_addr)(1 + $I_L291_758, ik, 0)
  291.                      kloc(1 + $I_L291_758, 1 + $I_L291_864) = $kloc_WR0_R0
  291.                      if ( usig(1 + $I_L291_758, 1 + $I_L291_864) > (sigma%base_addr)(1 + $I_L291_758, 1 + $kloc_WR0_R0, 0) ) then
  291.                         $kloc_WR0_R0 = 1 + $kloc_WR0_R0
  291.                         kloc(1 + $I_L291_758, 1 + $I_L291_864) = $kloc_WR0_R0
  291.                      endif
  291.                      usigdp(1 + $I_L291_758, 1 + $I_L291_864) = ( 1.0/(delsigma%base_addr)(1 + $I_L291_758, $kloc_WR0_R0, 0) * ( usig(1 + $I_L291_758, 1 + $I_L291_864) + -(sigma%base_addr)(1 + $I_L291_758, $kloc_WR0_R0, 0) ) )
  291.                      $I_L291_758 = 1 + $I_L291_758
  291.                      if ( $I_L291_758 >= ibdim ) exit
  291.                   enddo
  291.                   $I_L291_864 = 1 + $I_L291_864
  291.                   if ( $I_L291_864 >= kmax ) exit
  291.                enddo
  291.             endif
  291.             $SC_delphi_I108 = delphi%dim_1%EX
  291.             $SC_delphi_I109 = delphi%dim_1%LB
  291.             $SC_delphi_I111 = delphi%dim_2%SM
  291.             $SC_delphi_I110 = delphi%dim_2%EX
  291.             $SC_delphi_I112 = delphi%dim_2%LB
  291.             $SC_phi_I103 = phi%dim_1%EX
  291.             $SC_phi_I104 = phi%dim_1%LB
  291.             $SC_phi_I106 = phi%dim_2%SM
  291.             $SC_phi_I105 = phi%dim_2%EX
  291.             $SC_phi_I107 = phi%dim_2%LB
  291.             $SC_jphiref_I98 = jphiref%dim_1%EX
  291.             $SC_jphiref_I99 = jphiref%dim_1%LB
  291.             $SC_jphiref_I101 = jphiref%dim_2%SM
  291.             $SC_jphiref_I100 = jphiref%dim_2%EX
  291.             $SC_jphiref_I102 = jphiref%dim_2%LB
  291.             if ( ibdim > 0 ) then
  291.                $I_L291_866 = 0
  291.                do
  291.                   $I_L291_760 = 0
  291. !dir$ ivdep
  291.                   do
  291.                      ik = int( ( 1.0/delphiref * ( 1.570796326794895 + ulat(1 + $I_L291_760, 1 + $I_L291_866) ) ) )
  291.                      $jloc_WR0_R1 = (jphiref%base_addr)(1 + $I_L291_760, ik, 0)
  291.                      jloc(1 + $I_L291_760, 1 + $I_L291_866) = $jloc_WR0_R1
  291.                      if ( ulat(1 + $I_L291_760, 1 + $I_L291_866) > (phi%base_addr)(1 + $I_L291_760, 1 + $jloc_WR0_R1, 0) ) then
  291.                         $jloc_WR0_R1 = 1 + $jloc_WR0_R1
  291.                         jloc(1 + $I_L291_760, 1 + $I_L291_866) = $jloc_WR0_R1
  291.                      endif
  291.                      ulatdp(1 + $I_L291_760, 1 + $I_L291_866) = ( 1.0/(delphi%base_addr)(1 + $I_L291_760, $jloc_WR0_R1, 0) * ( ulat(1 + $I_L291_760, 1 + $I_L291_866) + -(phi%base_addr)(1 + $I_L291_760, $jloc_WR0_R1, 0) ) )
  291.                      $I_L291_760 = 1 + $I_L291_760
  291.                      if ( $I_L291_760 >= ibdim ) exit
  291.                   enddo
  291.                   $I_L291_866 = 1 + $I_L291_866
  291.                   if ( $I_L291_866 >= kmax ) exit
  291.                enddo
  291.             endif
  291.          endif
  291.          if ( klats == 4 ) then
  291.             kp(1) = -1
  291.             kp(2) = 0
  291.             kp(3) = 1
  291.             kp(4) = 2
  291.          else
  291.             kp(1) = 0
  291.             kp(2) = 1
  291.          endif
  291.          if ( klats > 0 ) then
  291.             $SC_dellon_I113 = dellon%dim_1%EX
  291.             $SC_dellon_I114 = dellon%dim_1%LB
  291.             $SC_dellon_I116 = dellon%dim_2%SM
  291.             $SC_dellon_I115 = dellon%dim_2%EX
  291.             $SC_dellon_I117 = dellon%dim_2%LB
  291.             if ( kmax > 0 ) then
  291.                if ( ibdim > 0 ) then
  291.                   $I_L291_922 = 0
  291. !dir$ unroll 4
  291. !dir$ blocking_size( 1, 1 )
  291.                   do
  291.                      ks = kp(1 + $I_L291_922)
  291.                      $I_L291_916 = 0
  291.                      do
  291.                         $I_L291_910 = 0
  291.                         do
  291.                            $I_L291_904 = 0
  291. !dir$ shortloop16
  291. !dir$ blocking_size( 2, 2 )
  291.                            do
  291.                               $I_L291_762 = 0
  291. !dir$ ivdep
  291. !dir$ blocking_size( 256, 256 )
  291.                               do
  291.                                  j = 1 + jmax + -jloc(1 + $I_L291_762 + 256 * $I_L291_910, 1 + $I_L291_904 + 2 * $I_L291_916)
  291.                                  $ulondp_WR0_R2 = 1.0 + ( ulon(1 + $I_L291_762 + 256 * $I_L291_910, 1 + $I_L291_904 + 2 * $I_L291_916) * 1.0/(dellon%base_addr)(1 + $I_L291_762 + 256 * $I_L291_910, j + -ks, 0) )
  291.                                  iloc(1 + $I_L291_762 + 256 * $I_L291_910, 1 + $I_L291_904 + 2 * $I_L291_916, 1 + $I_L291_922) = int( $ulondp_WR0_R2 )
  291.                                  $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  291.                                  ulondp(1 + $I_L291_762 + 256 * $I_L291_910, 1 + $I_L291_904 + 2 * $I_L291_916, 1 + $I_L291_922) = $ulondp_WR0_R2
  291.                                  $I_L291_762 = 1 + $I_L291_762
  291.                                  if ( $I_L291_762 >= min( ibdim, 256 + 256 * $I_L291_910 ) + -256 * $I_L291_910 ) exit
  291.                               enddo
  291.                               $I_L291_904 = 1 + $I_L291_904
  291.                               if ( $I_L291_904 >= min( kmax, 2 + 2 * $I_L291_916 ) + -2 * $I_L291_916 ) exit
  291.                            enddo
  291.                            $I_L291_910 = 1 + $I_L291_910
  291.                            if ( $I_L291_910 >= 1 + max( 0, -1 + _rsh( 255 + ibdim, 8 ) ) ) exit
  291.                         enddo
  291.                         $I_L291_916 = 1 + $I_L291_916
  291.                         if ( $I_L291_916 >= 1 + max( 0, -1 + _rsh( 1 + kmax, 1 ) ) ) exit
  291.                      enddo
  291.                      $I_L291_922 = 1 + $I_L291_922
  291.                      if ( $I_L291_922 >= klats ) exit
  291.                   enddo
  291.                endif
  291.             endif
  291.          endif
  291.          if ( klats == 1 ) then
  291.             $F_A48 = kmax
  291.             $F_A49 = ibdim
  291.             if ( and( -$F_A49, -$F_A48 ) < 0 ) then
  291.                $I_L291_888 = 0
  291.                do
  291.                   $I_L291_814 = 0
  291. !dir$ ivdep
  291.                   do
  291.                      iloc(1 + $I_L291_814, 1 + $I_L291_888, 2) = iloc(1 + $I_L291_814, 1 + $I_L291_888, 1)
  291.                      $I_L291_814 = 1 + $I_L291_814
  291.                      if ( $I_L291_814 >= $F_A49 ) exit
  291.                   enddo
  291.                   $I_L291_888 = 1 + $I_L291_888
  291.                   if ( $I_L291_888 >= $F_A48 ) exit
  291.                enddo
  291.             endif
  291.             $F_A50 = kmax
  291.             $F_A51 = ibdim
  291.             if ( and( -$F_A51, -$F_A50 ) < 0 ) then
  291.                $I_L291_890 = 0
  291.                do
  291.                   $I_L291_816 = 0
  291. !dir$ ivdep
  291.                   do
  291.                      iloc(1 + $I_L291_816, 1 + $I_L291_890, 3) = iloc(1 + $I_L291_816, 1 + $I_L291_890, 1)
  291.                      $I_L291_816 = 1 + $I_L291_816
  291.                      if ( $I_L291_816 >= $F_A51 ) exit
  291.                   enddo
  291.                   $I_L291_890 = 1 + $I_L291_890
  291.                   if ( $I_L291_890 >= $F_A50 ) exit
  291.                enddo
  291.             endif
  291.             $F_A52 = kmax
  291.             $F_A53 = ibdim
  291.             if ( and( -$F_A53, -$F_A52 ) < 0 ) then
  291.                $I_L291_892 = 0
  291.                do
  291.                   $I_L291_818 = 0
  291. !dir$ ivdep
  291.                   do
  291.                      iloc(1 + $I_L291_818, 1 + $I_L291_892, 4) = iloc(1 + $I_L291_818, 1 + $I_L291_892, 1)
  291.                      $I_L291_818 = 1 + $I_L291_818
  291.                      if ( $I_L291_818 >= $F_A53 ) exit
  291.                   enddo
  291.                   $I_L291_892 = 1 + $I_L291_892
  291.                   if ( $I_L291_892 >= $F_A52 ) exit
  291.                enddo
  291.             endif
  291.             $F_A54 = kmax
  291.             $F_A55 = ibdim
  291.             if ( and( -$F_A55, -$F_A54 ) < 0 ) then
  291.                $I_L291_894 = 0
  291.                do
  291.                   $I_L291_820 = 0
  291. !dir$ ivdep
  291.                   do
  291.                      ulondp(1 + $I_L291_820, 1 + $I_L291_894, 2) = ulondp(1 + $I_L291_820, 1 + $I_L291_894, 1)
  291.                      $I_L291_820 = 1 + $I_L291_820
  291.                      if ( $I_L291_820 >= $F_A55 ) exit
  291.                   enddo
  291.                   $I_L291_894 = 1 + $I_L291_894
  291.                   if ( $I_L291_894 >= $F_A54 ) exit
  291.                enddo
  291.             endif
  291.             $F_A56 = kmax
  291.             $F_A57 = ibdim
  291.             if ( and( -$F_A57, -$F_A56 ) < 0 ) then
  291.                $I_L291_896 = 0
  291.                do
  291.                   $I_L291_822 = 0
  291. !dir$ ivdep
  291.                   do
  291.                      ulondp(1 + $I_L291_822, 1 + $I_L291_896, 3) = ulondp(1 + $I_L291_822, 1 + $I_L291_896, 1)
  291.                      $I_L291_822 = 1 + $I_L291_822
  291.                      if ( $I_L291_822 >= $F_A57 ) exit
  291.                   enddo
  291.                   $I_L291_896 = 1 + $I_L291_896
  291.                   if ( $I_L291_896 >= $F_A56 ) exit
  291.                enddo
  291.             endif
  291.             $F_A58 = kmax
  291.             $F_A59 = ibdim
  291.             if ( and( -$F_A59, -$F_A58 ) < 0 ) then
  291.                $I_L291_898 = 0
  291.                do
  291.                   $I_L291_824 = 0
  291. !dir$ ivdep
  291.                   do
  291.                      ulondp(1 + $I_L291_824, 1 + $I_L291_898, 4) = ulondp(1 + $I_L291_824, 1 + $I_L291_898, 1)
  291.                      $I_L291_824 = 1 + $I_L291_824
  291.                      if ( $I_L291_824 >= $F_A59 ) exit
  291.                   enddo
  291.                   $I_L291_898 = 1 + $I_L291_898
  291.                   if ( $I_L291_898 >= $F_A58 ) exit
  291.                enddo
  291.             endif
  291.          endif
  291.          kloc(1) = _copyout( kloc )
  291.          jloc(1) = _copyout( jloc )
  291.          iloc(1) = _copyout( iloc )
  291.          usigdp(1) = _copyout( usigdp )
  291.          ulatdp(1) = _copyout( ulatdp )
  291.          ulondp(1) = _copyout( ulondp )
  291.          usig(1) = _copyout( usig )
  291.          ulat(1) = _copyout( ulat )
  291.          ulon(1) = _copyout( ulon )
  299.          call interpcublin3d( fint(1), (fgyum%base_addr)(fgyum%dim_1%LB, fgyum%dim_2%LB, fgyum%dim_3%LB, 0), .false., ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, -1.0, .true., ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), .false. )
  311.          if ( kmax > 0 ) then
  313.             $SC_fgqmm_I118 = fgqmm%dim_1%EX
  313.             $SC_fgqmm_I119 = fgqmm%dim_1%LB
  313.             $SC_fgqmm_I121 = fgqmm%dim_2%SM
  313.             $SC_fgqmm_I120 = fgqmm%dim_2%EX
  313.             $SC_fgqmm_I122 = fgqmm%dim_2%LB
  313.             $SC_fgqmm_I124 = fgqmm%dim_3%SM
  313.             $SC_fgqmm_I123 = fgqmm%dim_3%EX
  313.             $SC_fgqmm_I125 = fgqmm%dim_3%LB
  312.             if ( ibdim > 0 ) then
  311.                $I_L311_868 = 0
  311.                do
  312.                   $I_L312_764 = 0
  312. !dir$ ivdep
  312.                   do
  313.                      (fgqmm%base_addr)(1 + $I_L312_764, 1 + $I_L311_868, jb, 0) = fint(1 + $I_L312_764 + ibdim * $I_L311_868)
  314.                      $I_L312_764 = 1 + $I_L312_764
  312.                      if ( $I_L312_764 >= ibdim ) exit
  312.                   enddo
  315.                   $I_L311_868 = 1 + $I_L311_868
  314.                   if ( $I_L311_868 >= kmax ) exit
  314.                enddo
  314.             endif
  314.          endif
  316.          call interpcublin3d( fint(1), (fgyvm%base_addr)(fgyvm%dim_1%LB, fgyvm%dim_2%LB, fgyvm%dim_3%LB, 0), .true., ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, -1.0, .false., ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), .false. )
  322.          if ( kmax > 0 ) then
  324.             $SC_fgtmm_I126 = fgtmm%dim_1%EX
  324.             $SC_fgtmm_I127 = fgtmm%dim_1%LB
  324.             $SC_fgtmm_I129 = fgtmm%dim_2%SM
  324.             $SC_fgtmm_I128 = fgtmm%dim_2%EX
  324.             $SC_fgtmm_I130 = fgtmm%dim_2%LB
  324.             $SC_fgtmm_I132 = fgtmm%dim_3%SM
  324.             $SC_fgtmm_I131 = fgtmm%dim_3%EX
  324.             $SC_fgtmm_I133 = fgtmm%dim_3%LB
  323.             if ( ibdim > 0 ) then
  322.                $I_L322_870 = 0
  322.                do
  323.                   $I_L323_766 = 0
  323. !dir$ ivdep
  323.                   do
  324.                      (fgtmm%base_addr)(1 + $I_L323_766, 1 + $I_L322_870, jb, 0) = fint(1 + $I_L323_766 + ibdim * $I_L322_870)
  325.                      $I_L323_766 = 1 + $I_L323_766
  323.                      if ( $I_L323_766 >= ibdim ) exit
  323.                   enddo
  326.                   $I_L322_870 = 1 + $I_L322_870
  325.                   if ( $I_L322_870 >= kmax ) exit
  325.                enddo
  325.             endif
  325.          endif
  327.          call interpcublin3d( fint(1), (fgqdm%base_addr)(fgqdm%dim_1%LB, fgqdm%dim_2%LB, fgqdm%dim_3%LB, 0), .false., ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, 1.0, .false., ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), .false. )
  334.          if ( kmax > 0 ) then
  336.             $SC_fgqd_I134 = fgqd%dim_1%EX
  336.             $SC_fgqd_I135 = fgqd%dim_1%LB
  336.             $SC_fgqd_I137 = fgqd%dim_2%SM
  336.             $SC_fgqd_I136 = fgqd%dim_2%EX
  336.             $SC_fgqd_I138 = fgqd%dim_2%LB
  336.             $SC_fgqd_I140 = fgqd%dim_3%SM
  336.             $SC_fgqd_I139 = fgqd%dim_3%EX
  336.             $SC_fgqd_I141 = fgqd%dim_3%LB
  335.             if ( ibdim > 0 ) then
  334.                $I_L334_872 = 0
  334.                do
  335.                   $I_L335_768 = 0
  335. !dir$ ivdep
  335.                   do
  336.                      (fgqd%base_addr)(1 + $I_L335_768, 1 + $I_L334_872, jb, 0) = fint(1 + $I_L335_768 + ibdim * $I_L334_872) + delta * (fgqd%base_addr)(1 + $I_L335_768, 1 + $I_L334_872, jb, 0)
  337.                      $I_L335_768 = 1 + $I_L335_768
  335.                      if ( $I_L335_768 >= ibdim ) exit
  335.                   enddo
  338.                   $I_L334_872 = 1 + $I_L334_872
  337.                   if ( $I_L334_872 >= kmax ) exit
  337.                enddo
  337.             endif
  337.          endif
  339.          call interpcublin3d( fint(1), (fgtdm%base_addr)(fgtdm%dim_1%LB, fgtdm%dim_2%LB, fgtdm%dim_3%LB, 0), .true., ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, 1.0, .false., ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), .false. )
  345.          if ( kmax > 0 ) then
  347.             $SC_fgtd_I142 = fgtd%dim_1%EX
  347.             $SC_fgtd_I143 = fgtd%dim_1%LB
  347.             $SC_fgtd_I145 = fgtd%dim_2%SM
  347.             $SC_fgtd_I144 = fgtd%dim_2%EX
  347.             $SC_fgtd_I146 = fgtd%dim_2%LB
  347.             $SC_fgtd_I148 = fgtd%dim_3%SM
  347.             $SC_fgtd_I147 = fgtd%dim_3%EX
  347.             $SC_fgtd_I149 = fgtd%dim_3%LB
  346.             if ( ibdim > 0 ) then
  345.                $I_L345_874 = 0
  345.                do
  346.                   $I_L346_770 = 0
  346. !dir$ ivdep
  346.                   do
  347.                      (fgtd%base_addr)(1 + $I_L346_770, 1 + $I_L345_874, jb, 0) = fint(1 + $I_L346_770 + ibdim * $I_L345_874) + delta * (fgtd%base_addr)(1 + $I_L346_770, 1 + $I_L345_874, jb, 0)
  348.                      $I_L346_770 = 1 + $I_L346_770
  346.                      if ( $I_L346_770 >= ibdim ) exit
  346.                   enddo
  349.                   $I_L345_874 = 1 + $I_L345_874
  348.                   if ( $I_L345_874 >= kmax ) exit
  348.                enddo
  348.             endif
  348.          endif
  353.          $t_S19 = nscalars
  353.          if ( nscalars > 0 ) then
  353.             $I_L353_772 = 0
  353.             do
  354.                call interpcublin3d( (fgpass_scalars%base_addr)(1, 1, jb, 1 + $I_L353_772, inew, 0), (fgpass_scalars%base_addr)(1, 1, 1, 1 + $I_L353_772, iold, 0), .true., ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, 1.0, .false., ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), .true. )
  361.                $I_L353_772 = 1 + $I_L353_772
  361.                if ( $I_L353_772 >= $t_S19 ) exit
  361.             enddo
  361.          endif
  365.          tm$173 = loc( (ulonm2d%base_addr)(1, jb, 0) )
  365.          ulonm = _copyin( (ulonm2d%base_addr)(1, jb, 0) )
  365.          tm$175 = loc( (ulatm2d%base_addr)(1, jb, 0) )
  365.          ulatm = _copyin( (ulatm2d%base_addr)(1, jb, 0) )
  365.          tm$177 = loc( ulondp(1) )
  365.          ulondp = _copyin( ulondp(1) )
  365.          tm$179 = loc( iloc(1) )
  365.          iloc = _copyin( iloc(1) )
  365.          t$16 = ibdim
  365.          t$195 = max( 0, ibdim )
  365.          t$196 = max( 0, ibdim )
  365.          t$197 = 4 * max( 0, ibdim )
  365.          t$17 = ibmax
  365.          t$198 = max( 0, ibmax )
  365.          t$201 = 8 * max( 0, ibmax )
  365.          t$202 = 8 * ( 7 + 8 * max( 0, ibmax ) ) / 8
  365.          t$204 = t$202 + 8 * max( 0, ibmax )
  365.          t$199 = int( _alloc( t$202 + 8 * max( 0, ibmax ) ), 8 )
  365.          t$200 = t$199
  365.          t$203 = t$202 + t$199
  365.          klats = 1
  365.          if ( reducedgrid /= .false. ) then
  365.             klats = 2
  365.          endif
  365.          if ( nit > 0 ) then
  365.             $SC_ibperij_I150 = ibperij%dim_1%EX
  365.             $SC_ibperij_I151 = ibperij%dim_1%LB
  365.             $SC_ibperij_I152 = ibperij%dim_2%EX
  365.             $SC_dellon_I113 = dellon%dim_1%EX
  365.             $SC_dellon_I114 = dellon%dim_1%LB
  365.             $SC_dellon_I116 = dellon%dim_2%SM
  365.             $SC_dellon_I115 = dellon%dim_2%EX
  365.             $SC_dellon_I117 = dellon%dim_2%LB
  365.             $SC_delphi_I108 = delphi%dim_1%EX
  365.             $SC_delphi_I109 = delphi%dim_1%LB
  365.             $SC_delphi_I111 = delphi%dim_2%SM
  365.             $SC_delphi_I110 = delphi%dim_2%EX
  365.             $SC_delphi_I112 = delphi%dim_2%LB
  365.             $SC_phi_I103 = phi%dim_1%EX
  365.             $SC_phi_I104 = phi%dim_1%LB
  365.             $SC_phi_I106 = phi%dim_2%SM
  365.             $SC_phi_I105 = phi%dim_2%EX
  365.             $SC_phi_I107 = phi%dim_2%LB
  365.             $SC_jphiref_I98 = jphiref%dim_1%EX
  365.             $SC_jphiref_I99 = jphiref%dim_1%LB
  365.             $SC_jphiref_I101 = jphiref%dim_2%SM
  365.             $SC_jphiref_I100 = jphiref%dim_2%EX
  365.             $SC_jphiref_I102 = jphiref%dim_2%LB
  365.             $SC_fgvmean_I28 = fgvmean%dim_1%EX
  365.             $SC_fgvmean_I29 = fgvmean%dim_1%LB
  365.             $SC_fgvmean_I31 = fgvmean%dim_2%SM
  365.             $SC_fgvmean_I30 = fgvmean%dim_2%EX
  365.             $SC_fgvmean_I32 = fgvmean%dim_2%LB
  365.             $SC_fgumean_I23 = fgumean%dim_1%EX
  365.             $SC_fgumean_I24 = fgumean%dim_1%LB
  365.             $SC_fgumean_I26 = fgumean%dim_2%SM
  365.             $SC_fgumean_I25 = fgumean%dim_2%EX
  365.             $SC_fgumean_I27 = fgumean%dim_2%LB
  365.             $I_L365_924 = 0
  365.             do
  365.                tm$189 = loc( ulondp(1, 1) )
  365.                ulondp = _copyin( ulondp(1, 1) )
  365.                tm$191 = loc( iloc(1, 1) )
  365.                iloc = _copyin( iloc(1, 1) )
  365.                t$33 = ibdim
  365.                t$254 = max( 0, ibdim )
  365.                t$255 = max( 0, ibdim )
  365.                t$256 = 4 * max( 0, ibdim )
  365.                if ( klats == 4 ) then
  365.                   kp(1) = -1
  365.                   kp(2) = 0
  365.                   kp(3) = 1
  365.                   kp(4) = 2
  365.                else
  365.                   kp(1) = 0
  365.                   kp(2) = 1
  365.                endif
  365.                if ( ibdim > 0 ) then
  365.                   $I_L365_774 = 0
  365. !dir$ ivdep
  365.                   do
  365.                      ik = int( ( 1.0/delphiref * ( 1.570796326794895 + ulatm(1 + $I_L365_774) ) ) )
  365.                      $jloc_WR0_R4 = (jphiref%base_addr)(1 + $I_L365_774, ik, 0)
  365.                      jloc(1 + $I_L365_774) = $jloc_WR0_R4
  365.                      if ( ulatm(1 + $I_L365_774) > (phi%base_addr)(1 + $I_L365_774, 1 + $jloc_WR0_R4, 0) ) then
  365.                         $jloc_WR0_R4 = 1 + $jloc_WR0_R4
  365.                         jloc(1 + $I_L365_774) = $jloc_WR0_R4
  365.                      endif
  365.                      ulatdp(1 + $I_L365_774) = ( 1.0/(delphi%base_addr)(1 + $I_L365_774, $jloc_WR0_R4, 0) * ( ulatm(1 + $I_L365_774) + -(phi%base_addr)(1 + $I_L365_774, $jloc_WR0_R4, 0) ) )
  365.                      $I_L365_774 = 1 + $I_L365_774
  365.                      if ( $I_L365_774 >= ibdim ) exit
  365.                   enddo
  365.                endif
  365.                if ( klats > 0 ) then
  365.                   if ( ibdim > 0 ) then
  365.                      $I_L365_918 = 0
  365.                      do
  365.                         $I_L365_912 = 0
  365.                         do
  365.                            $I_L365_906 = 0
  365. !dir$ shortloop16
  365. !dir$ blocking_size( 2, 2 )
  365.                            do
  365.                               ks = kp(1 + $I_L365_906 + 2 * $I_L365_918)
  365.                               $I_L365_776 = 0
  365. !dir$ ivdep
  365. !dir$ blocking_size( 256, 256 )
  365.                               do
  365.                                  j = 1 + jmax + -jloc(1 + $I_L365_776 + 256 * $I_L365_912)
  365.                                  $ulondp_WR0_R5 = 1.0 + ( ulonm(1 + $I_L365_776 + 256 * $I_L365_912) * 1.0/(dellon%base_addr)(1 + $I_L365_776 + 256 * $I_L365_912, j + -ks, 0) )
  365.                                  iloc(1 + $I_L365_776 + 256 * $I_L365_912, 1 + $I_L365_906 + 2 * $I_L365_918) = int( $ulondp_WR0_R5 )
  365.                                  $ulondp_WR0_R5 = $ulondp_WR0_R5 + ( -( int( $ulondp_WR0_R5 ) ) )
  365.                                  ulondp(1 + $I_L365_776 + 256 * $I_L365_912, 1 + $I_L365_906 + 2 * $I_L365_918) = $ulondp_WR0_R5
  365.                                  $I_L365_776 = 1 + $I_L365_776
  365.                                  if ( $I_L365_776 >= min( ibdim, 256 + 256 * $I_L365_912 ) + -256 * $I_L365_912 ) exit
  365.                               enddo
  365.                               $I_L365_906 = 1 + $I_L365_906
  365.                               if ( $I_L365_906 >= min( klats, 2 + 2 * $I_L365_918 ) + -2 * $I_L365_918 ) exit
  365.                            enddo
  365.                            $I_L365_912 = 1 + $I_L365_912
  365.                            if ( $I_L365_912 >= 1 + max( 0, -1 + _rsh( 255 + ibdim, 8 ) ) ) exit
  365.                         enddo
  365.                         $I_L365_918 = 1 + $I_L365_918
  365.                         if ( $I_L365_918 >= 1 + max( 0, -1 + _rsh( 1 + klats, 1 ) ) ) exit
  365.                      enddo
  365.                   endif
  365.                endif
  365.                if ( klats == 1 ) then
  365.                   $F_A60 = ibdim
  365.                   if ( ibdim > 0 ) then
  365.                      $I_L365_826 = 0
  365. !dir$ ivdep
  365.                      do
  365.                         iloc(1 + $I_L365_826, 2) = iloc(1 + $I_L365_826, 1)
  365.                         $I_L365_826 = 1 + $I_L365_826
  365.                         if ( $I_L365_826 >= $F_A60 ) exit
  365.                      enddo
  365.                   endif
  365.                   $F_A61 = ibdim
  365.                   if ( ibdim > 0 ) then
  365.                      $I_L365_828 = 0
  365. !dir$ ivdep
  365.                      do
  365.                         iloc(1 + $I_L365_828, 3) = iloc(1 + $I_L365_828, 1)
  365.                         $I_L365_828 = 1 + $I_L365_828
  365.                         if ( $I_L365_828 >= $F_A61 ) exit
  365.                      enddo
  365.                   endif
  365.                   $F_A62 = ibdim
  365.                   if ( ibdim > 0 ) then
  365.                      $I_L365_830 = 0
  365. !dir$ ivdep
  365.                      do
  365.                         iloc(1 + $I_L365_830, 4) = iloc(1 + $I_L365_830, 1)
  365.                         $I_L365_830 = 1 + $I_L365_830
  365.                         if ( $I_L365_830 >= $F_A62 ) exit
  365.                      enddo
  365.                   endif
  365.                   $F_A63 = ibdim
  365.                   if ( ibdim > 0 ) then
  365.                      $I_L365_832 = 0
  365. !dir$ ivdep
  365.                      do
  365.                         ulondp(1 + $I_L365_832, 2) = ulondp(1 + $I_L365_832, 1)
  365.                         $I_L365_832 = 1 + $I_L365_832
  365.                         if ( $I_L365_832 >= $F_A63 ) exit
  365.                      enddo
  365.                   endif
  365.                   $F_A64 = ibdim
  365.                   if ( ibdim > 0 ) then
  365.                      $I_L365_834 = 0
  365. !dir$ ivdep
  365.                      do
  365.                         ulondp(1 + $I_L365_834, 3) = ulondp(1 + $I_L365_834, 1)
  365.                         $I_L365_834 = 1 + $I_L365_834
  365.                         if ( $I_L365_834 >= $F_A64 ) exit
  365.                      enddo
  365.                   endif
  365.                   $F_A65 = ibdim
  365.                   if ( ibdim > 0 ) then
  365.                      $I_L365_836 = 0
  365. !dir$ ivdep
  365.                      do
  365.                         ulondp(1 + $I_L365_836, 4) = ulondp(1 + $I_L365_836, 1)
  365.                         $I_L365_836 = 1 + $I_L365_836
  365.                         if ( $I_L365_836 >= $F_A65 ) exit
  365.                      enddo
  365.                   endif
  365.                endif
  365.                iloc(1, 1) = _copyout( iloc )
  365.                ulondp(1, 1) = _copyout( ulondp )
  365.                tm$205 = loc( (fgumean%base_addr)($SC_fgumean_I24, $SC_fgumean_I27, 0) )
  365.                u = _copyin( (fgumean%base_addr)($SC_fgumean_I24, $SC_fgumean_I27, 0) )
  365.                tm$207 = loc( (fgvmean%base_addr)($SC_fgvmean_I29, $SC_fgvmean_I32, 0) )
  365.                v = _copyin( (fgvmean%base_addr)($SC_fgvmean_I29, $SC_fgvmean_I32, 0) )
  365.                tm$209 = loc( ulondp(1, 1) )
  365.                ulondp = _copyin( ulondp(1, 1) )
  365.                tm$211 = loc( iloc(1, 1) )
  365.                iloc = _copyin( iloc(1, 1) )
  365.                t$39 = ibmax
  365.                t$40 = jbmax_ext
  365.                t$269 = max( 0, ibmax )
  365.                t$270 = max( 0, ibmax )
  365.                t$271 = max( 0, jbmax_ext )
  365.                t$272 = max( 0, ibmax ) * max( 0, jbmax_ext )
  365.                t$38 = ibdim
  365.                t$273 = max( 0, ibdim )
  365.                t$274 = max( 0, ibdim )
  365.                t$275 = 2 * max( 0, ibdim )
  365.                t$278 = 8 * max( 0, ibmax )
  365.                t$279 = 8 * ( 7 + 8 * max( 0, ibmax ) ) / 8
  365.                t$281 = t$279 + 8 * max( 0, ibmax )
  365.                t$276 = int( _alloc( t$279 + 8 * max( 0, ibmax ) ), 8 )
  365.                t$277 = t$276
  365.                t$280 = t$279 + t$276
  365.                if ( ibdim > 0 ) then
  365.                   $I_L365_778 = 0
  365. !dir$ ivdep
  365.                   do
  365.                      $jp_S24 = 1 + jmax + -jloc(1 + $I_L365_778)
  365.                      s1(1 + $I_L365_778) = 1.0
  365.                      s2(1 + $I_L365_778) = 1.0
  365.                      if ( jmax + -$jp_S24 == -1 ) then
  365.                         s1(1 + $I_L365_778) = -1.0
  365.                      endif
  365.                      if ( $jp_S24 == 1 ) then
  365.                         s2(1 + $I_L365_778) = -1.0
  365.                      endif
  365.                      $I_L365_778 = 1 + $I_L365_778
  365.                      if ( $I_L365_778 >= ibdim ) exit
  365.                   enddo
  365.                   $SC_ibperij_I153 = ibperij%dim_2%SM
  365.                   $I_L365_780 = 0
  365. !dir$ ivdep
  365.                   do
  365.                      jp = 1 + jmax + -jloc(1 + $I_L365_780)
  365.                      i1 = (ibperij%base_addr)(iloc(1 + $I_L365_780, 1), jp, 0)
  365.                      i2 = (ibperij%base_addr)(iloc(1 + $I_L365_780, 2), -1 + jp, 0)
  365.                      i3 = (ibperij%base_addr)(1 + iloc(1 + $I_L365_780, 1), jp, 0)
  365.                      i4 = (ibperij%base_addr)(1 + iloc(1 + $I_L365_780, 2), -1 + jp, 0)
  365.                      j1 = (jbperij%base_addr)(iloc(1 + $I_L365_780, 1), jp, 0)
  365.                      j2 = (jbperij%base_addr)(iloc(1 + $I_L365_780, 2), -1 + jp, 0)
  365.                      j3 = (jbperij%base_addr)(1 + iloc(1 + $I_L365_780, 1), jp, 0)
  365.                      j4 = (jbperij%base_addr)(1 + iloc(1 + $I_L365_780, 2), -1 + jp, 0)
  365.                      f1 = s1(1 + $I_L365_780) * ( u(i1, j1) + ulondp(1 + $I_L365_780, 1) * ( u(i3, j3) + -u(i1, j1) ) )
  365.                      g1 = s1(1 + $I_L365_780) * ( v(i1, j1) + ulondp(1 + $I_L365_780, 1) * ( v(i3, j3) + -v(i1, j1) ) )
  365.                      f2 = s2(1 + $I_L365_780) * ( u(i2, j2) + ulondp(1 + $I_L365_780, 2) * ( u(i4, j4) + -u(i2, j2) ) )
  365.                      g2 = s2(1 + $I_L365_780) * ( v(i2, j2) + ulondp(1 + $I_L365_780, 2) * ( v(i4, j4) + -v(i2, j2) ) )
  365.                      uint(1 + $I_L365_780) = f1 + ulatdp(1 + $I_L365_780) * ( f2 + -f1 )
  365.                      vint(1 + $I_L365_780) = g1 + ulatdp(1 + $I_L365_780) * ( g2 + -g1 )
  365.                      $I_L365_780 = 1 + $I_L365_780
  365.                      if ( $I_L365_780 >= ibdim ) exit
  365.                   enddo
  365.                endif
  365.                _free( t$276 )
  365.                iloc(1, 1) = _copyout( iloc )
  365.                ulondp(1, 1) = _copyout( ulondp )
  365.                (fgvmean%base_addr)($SC_fgvmean_I29, $SC_fgvmean_I32, 0) = _copyout( v )
  365.                (fgumean%base_addr)($SC_fgumean_I24, $SC_fgumean_I27, 0) = _copyout( u )
  365.                tm$227 = loc( (coslon%base_addr)(1, jb, 0) )
  365.                coslon = _copyin( (coslon%base_addr)(1, jb, 0) )
  365.                tm$229 = loc( (sinlon%base_addr)(1, jb, 0) )
  365.                sinlon = _copyin( (sinlon%base_addr)(1, jb, 0) )
  365.                tm$231 = loc( (coslat%base_addr)(1, jb, 0) )
  365.                coslat = _copyin( (coslat%base_addr)(1, jb, 0) )
  365.                tm$233 = loc( (sinlat%base_addr)(1, jb, 0) )
  365.                sinlat = _copyin( (sinlat%base_addr)(1, jb, 0) )
  365.                t$30 = ibdim
  365.                t$247 = max( 0, ibdim )
  365.                dt2 = delta1 * delta1
  365.                twodt = 2.0 * delta1
  365.                if ( ibdim > 0 ) then
  365.                   if ( $I_L365_924 + -nit == -1 ) then
  365.                      $I_L365_782 = 0
  365. !dir$ ivdep
  365.                      do
  365.                         $Coss_P20 = coss( ulonm(1 + $I_L365_782) )
  365.                         $Coss_P21 = coss( ulatm(1 + $I_L365_782) )
  365.                         x = coslat(1 + $I_L365_782) * coslon(1 + $I_L365_782)
  365.                         y = coslat(1 + $I_L365_782) * sinlon(1 + $I_L365_782)
  365.                         z = sinlat(1 + $I_L365_782)
  365.                         xdot = -( cimag( $Coss_P21 ) * vint(1 + $I_L365_782) * real( $Coss_P20, 8 ) + uint(1 + $I_L365_782) * cimag( $Coss_P20 ) )
  365.                         ydot = -( cimag( $Coss_P20 ) * vint(1 + $I_L365_782) * cimag( $Coss_P21 ) ) + uint(1 + $I_L365_782) * real( $Coss_P20, 8 )
  365.                         zdot = vint(1 + $I_L365_782) * real( $Coss_P21, 8 )
  365.                         xb = ( x + -( delta1 * xdot ) ) * _recip_sqrt( ( 1.0 + -( twodt * ( x * xdot + y * ydot + z * zdot ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) ) )
  365.                         yb = ( y + -( delta1 * ydot ) ) * _recip_sqrt( ( 1.0 + -( twodt * ( x * xdot + y * ydot + z * zdot ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) ) )
  365.                         zb = ( z + -( delta1 * zdot ) ) * _recip_sqrt( ( 1.0 + -( twodt * ( x * xdot + y * ydot + z * zdot ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) ) )
  365.                         $Flat_S31 = atan2( ( ( y + -( delta1 * ydot ) ) * _recip_sqrt( ( 1.0 + -( twodt * ( x * xdot + y * ydot + z * zdot ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) ) ) ), ( ( x + -( delta1 * xdot ) ) * _recip_sqrt( ( 1.0 + -( twodt * ( x * xdot + y * ydot + z * zdot ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) ) ) ) )
  365.                         ulonm(1 + $I_L365_782) = $Flat_S31
  365.                         if ( $Flat_S31 < 0.0 ) then
  365.                            ulonm(1 + $I_L365_782) = 6.28318530717958 + $Flat_S31
  365.                         endif
  365.                         $Flat_S32 = asin( zb )
  365.                         ulatm(1 + $I_L365_782) = $Flat_S32
  365.                         zm = -z + zb * ( 2.0 * ( x * xb + y * yb + z * zb ) )
  365.                         $Flat_S34 = atan2( ( -y + yb * ( 2.0 * ( x * xb + y * yb + z * zb ) ) ), ( -x + xb * ( 2.0 * ( x * xb + y * yb + z * zb ) ) ) )
  365.                         ulon(1 + $I_L365_782) = $Flat_S34
  365.                         if ( $Flat_S34 < 0.0 ) then
  365.                            ulon(1 + $I_L365_782) = 6.28318530717958 + $Flat_S34
  365.                         endif
  365.                         $Flat_S35 = asin( zm )
  365.                         ulat(1 + $I_L365_782) = $Flat_S35
  365.                         $I_L365_782 = 1 + $I_L365_782
  365.                         if ( $I_L365_782 >= ibdim ) exit
  365.                      enddo
  365.                   else
  365.                      $I_L365_790 = 0
  365. !dir$ ivdep
  365.                      do
  365.                         $Coss_P22 = coss( ulonm(1 + $I_L365_790) )
  365.                         $Coss_P23 = coss( ulatm(1 + $I_L365_790) )
  365.                         x = coslat(1 + $I_L365_790) * coslon(1 + $I_L365_790)
  365.                         y = coslat(1 + $I_L365_790) * sinlon(1 + $I_L365_790)
  365.                         z = sinlat(1 + $I_L365_790)
  365.                         xdot = -( cimag( $Coss_P23 ) * vint(1 + $I_L365_790) * real( $Coss_P22, 8 ) + uint(1 + $I_L365_790) * cimag( $Coss_P22 ) )
  365.                         ydot = -( cimag( $Coss_P22 ) * vint(1 + $I_L365_790) * cimag( $Coss_P23 ) ) + uint(1 + $I_L365_790) * real( $Coss_P22, 8 )
  365.                         zdot = vint(1 + $I_L365_790) * real( $Coss_P23, 8 )
  365.                         zb = ( z + -( delta1 * zdot ) ) * _recip_sqrt( ( 1.0 + -( twodt * ( x * xdot + y * ydot + z * zdot ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) ) )
  365.                         $Flat_S31 = atan2( ( ( y + -( delta1 * ydot ) ) * _recip_sqrt( ( 1.0 + -( twodt * ( x * xdot + y * ydot + z * zdot ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) ) ) ), ( ( x + -( delta1 * xdot ) ) * _recip_sqrt( ( 1.0 + -( twodt * ( x * xdot + y * ydot + z * zdot ) ) + dt2 * ( xdot * xdot + ydot * ydot + zdot * zdot ) ) ) ) )
  365.                         ulonm(1 + $I_L365_790) = $Flat_S31
  365.                         if ( $Flat_S31 < 0.0 ) then
  365.                            ulonm(1 + $I_L365_790) = 6.28318530717958 + $Flat_S31
  365.                         endif
  365.                         $Flat_S32 = asin( zb )
  365.                         ulatm(1 + $I_L365_790) = $Flat_S32
  365.                         $I_L365_790 = 1 + $I_L365_790
  365.                         if ( $I_L365_790 >= ibdim ) exit
  365.                      enddo
  365.                   endif
  365.                endif
  365.                (sinlat%base_addr)(1, jb, 0) = _copyout( sinlat )
  365.                (coslat%base_addr)(1, jb, 0) = _copyout( coslat )
  365.                (sinlon%base_addr)(1, jb, 0) = _copyout( sinlon )
  365.                (coslon%base_addr)(1, jb, 0) = _copyout( coslon )
  365.                $I_L365_924 = 1 + $I_L365_924
  365.                if ( $I_L365_924 >= nit ) exit
  365.             enddo
  365.          endif
  365.          _free( t$199 )
  365.          iloc(1) = _copyout( iloc )
  365.          ulondp(1) = _copyout( ulondp )
  365.          (ulatm2d%base_addr)(1, jb, 0) = _copyout( ulatm )
  365.          (ulonm2d%base_addr)(1, jb, 0) = _copyout( ulonm )
  373.          tm$241 = loc( ulondp(1) )
  373.          ulondp = _copyin( ulondp(1) )
  373.          tm$243 = loc( iloc(1) )
  373.          iloc = _copyin( iloc(1) )
  373.          t$33 = ibdim
  373.          t$254 = max( 0, ibdim )
  373.          t$255 = max( 0, ibdim )
  373.          t$256 = 4 * max( 0, ibdim )
  373.          if ( klats == 4 ) then
  373.             kp(1) = -1
  373.             kp(2) = 0
  373.             kp(3) = 1
  373.             kp(4) = 2
  373.          else
  373.             kp(1) = 0
  373.             kp(2) = 1
  373.          endif
  373.          if ( ibdim > 0 ) then
  373.             $SC_jphiref_I98 = jphiref%dim_1%EX
  373.             $I_L373_784 = 0
  373. !dir$ ivdep
  373.             do
  373.                ik = int( ( 1.0/delphiref * ( 1.570796326794895 + ulat(1 + $I_L373_784) ) ) )
  373.                $jloc_WR0_R7 = (jphiref%base_addr)(1 + $I_L373_784, ik, 0)
  373.                jloc(1 + $I_L373_784) = $jloc_WR0_R7
  373.                if ( ulat(1 + $I_L373_784) > (phi%base_addr)(1 + $I_L373_784, 1 + $jloc_WR0_R7, 0) ) then
  373.                   $jloc_WR0_R7 = 1 + $jloc_WR0_R7
  373.                   jloc(1 + $I_L373_784) = $jloc_WR0_R7
  373.                endif
  373.                ulatdp(1 + $I_L373_784) = ( ( ulat(1 + $I_L373_784) + -(phi%base_addr)(1 + $I_L373_784, $jloc_WR0_R7, 0) ) * 1.0/(delphi%base_addr)(1 + $I_L373_784, $jloc_WR0_R7, 0) )
  373.                $I_L373_784 = 1 + $I_L373_784
  373.                if ( $I_L373_784 >= ibdim ) exit
  373.             enddo
  373.          endif
  373.          if ( klats > 0 ) then
  373.             $SC_dellon_I113 = dellon%dim_1%EX
  373.             if ( ibdim > 0 ) then
  373.                $I_L373_920 = 0
  373.                do
  373.                   $I_L373_914 = 0
  373.                   do
  373.                      $I_L373_908 = 0
  373. !dir$ shortloop16
  373. !dir$ blocking_size( 2, 2 )
  373.                      do
  373.                         ks = kp(1 + $I_L373_908 + 2 * $I_L373_920)
  373.                         $I_L373_786 = 0
  373. !dir$ ivdep
  373. !dir$ blocking_size( 256, 256 )
  373.                         do
  373.                            j = 1 + jmax + -jloc(1 + $I_L373_786 + 256 * $I_L373_914)
  373.                            $ulondp_WR0_R8 = 1.0 + ( ulon(1 + $I_L373_786 + 256 * $I_L373_914) * 1.0/(dellon%base_addr)(1 + $I_L373_786 + 256 * $I_L373_914, j + -ks, 0) )
  373.                            iloc(1 + $I_L373_786 + 256 * $I_L373_914, 1 + $I_L373_908 + 2 * $I_L373_920) = int( $ulondp_WR0_R8 )
  373.                            $ulondp_WR0_R8 = $ulondp_WR0_R8 + ( -( int( $ulondp_WR0_R8 ) ) )
  373.                            ulondp(1 + $I_L373_786 + 256 * $I_L373_914, 1 + $I_L373_908 + 2 * $I_L373_920) = $ulondp_WR0_R8
  373.                            $I_L373_786 = 1 + $I_L373_786
  373.                            if ( $I_L373_786 >= min( ibdim, 256 + 256 * $I_L373_914 ) + -256 * $I_L373_914 ) exit
  373.                         enddo
  373.                         $I_L373_908 = 1 + $I_L373_908
  373.                         if ( $I_L373_908 >= min( klats, 2 + 2 * $I_L373_920 ) + -2 * $I_L373_920 ) exit
  373.                      enddo
  373.                      $I_L373_914 = 1 + $I_L373_914
  373.                      if ( $I_L373_914 >= 1 + max( 0, -1 + _rsh( 255 + ibdim, 8 ) ) ) exit
  373.                   enddo
  373.                   $I_L373_920 = 1 + $I_L373_920
  373.                   if ( $I_L373_920 >= 1 + max( 0, -1 + _rsh( 1 + klats, 1 ) ) ) exit
  373.                enddo
  373.             endif
  373.          endif
  373.          if ( klats == 1 ) then
  373.             $F_A66 = ibdim
  373.             if ( ibdim > 0 ) then
  373.                $I_L373_838 = 0
  373. !dir$ ivdep
  373.                do
  373.                   iloc(1 + $I_L373_838, 2) = iloc(1 + $I_L373_838, 1)
  373.                   $I_L373_838 = 1 + $I_L373_838
  373.                   if ( $I_L373_838 >= $F_A66 ) exit
  373.                enddo
  373.             endif
  373.             $F_A67 = ibdim
  373.             if ( ibdim > 0 ) then
  373.                $I_L373_840 = 0
  373. !dir$ ivdep
  373.                do
  373.                   iloc(1 + $I_L373_840, 3) = iloc(1 + $I_L373_840, 1)
  373.                   $I_L373_840 = 1 + $I_L373_840
  373.                   if ( $I_L373_840 >= $F_A67 ) exit
  373.                enddo
  373.             endif
  373.             $F_A68 = ibdim
  373.             if ( ibdim > 0 ) then
  373.                $I_L373_842 = 0
  373. !dir$ ivdep
  373.                do
  373.                   iloc(1 + $I_L373_842, 4) = iloc(1 + $I_L373_842, 1)
  373.                   $I_L373_842 = 1 + $I_L373_842
  373.                   if ( $I_L373_842 >= $F_A68 ) exit
  373.                enddo
  373.             endif
  373.             $F_A69 = ibdim
  373.             if ( ibdim > 0 ) then
  373.                $I_L373_844 = 0
  373. !dir$ ivdep
  373.                do
  373.                   ulondp(1 + $I_L373_844, 2) = ulondp(1 + $I_L373_844, 1)
  373.                   $I_L373_844 = 1 + $I_L373_844
  373.                   if ( $I_L373_844 >= $F_A69 ) exit
  373.                enddo
  373.             endif
  373.             $F_A70 = ibdim
  373.             if ( ibdim > 0 ) then
  373.                $I_L373_846 = 0
  373. !dir$ ivdep
  373.                do
  373.                   ulondp(1 + $I_L373_846, 3) = ulondp(1 + $I_L373_846, 1)
  373.                   $I_L373_846 = 1 + $I_L373_846
  373.                   if ( $I_L373_846 >= $F_A70 ) exit
  373.                enddo
  373.             endif
  373.             $F_A71 = ibdim
  373.             if ( ibdim > 0 ) then
  373.                $I_L373_848 = 0
  373. !dir$ ivdep
  373.                do
  373.                   ulondp(1 + $I_L373_848, 4) = ulondp(1 + $I_L373_848, 1)
  373.                   $I_L373_848 = 1 + $I_L373_848
  373.                   if ( $I_L373_848 >= $F_A71 ) exit
  373.                enddo
  373.             endif
  373.          endif
  373.          iloc(1) = _copyout( iloc )
  373.          ulondp(1) = _copyout( ulondp )
  381.          call interpcublin2d( fint(1), (fgvdlnpm%base_addr)(fgvdlnpm%dim_1%LB, fgvdlnpm%dim_2%LB, 0), ulondp(1), ulatdp(1), iloc(1), jloc(1), ibdim )
  385.          $F_A72 = ibdim
  385.          if ( ibdim > 0 ) then
  385.             $SC_fgvdlnp_I316 = fgvdlnp%dim_1%EX
  385.             $I_L385_850 = 0
  385. !dir$ ivdep
  385.             do
  385.                (fgvdlnp%base_addr)(1 + $I_L385_850, jb, 0) = fint(1 + $I_L385_850) + delta * (fgvdlnp%base_addr)(1 + $I_L385_850, jb, 0)
  385.                $I_L385_850 = 1 + $I_L385_850
  385.                if ( $I_L385_850 >= $F_A72 ) exit
  385.             enddo
  385.          endif
  385.       enddo
  385.    30 continue
  390.       _mt_barrier( 12, _mt_rw_list(...) )
  391.       tm$258 = loc( (fgqmm%base_addr)(fgqmm%dim_1%LB, fgqmm%dim_2%LB, fgqmm%dim_3%LB, 0) )
  391.       tendu = _copyin( (fgqmm%base_addr)(fgqmm%dim_1%LB, fgqmm%dim_2%LB, fgqmm%dim_3%LB, 0) )
  391.       tm$260 = loc( (fgtmm%base_addr)(fgtmm%dim_1%LB, fgtmm%dim_2%LB, fgtmm%dim_3%LB, 0) )
  391.       tendv = _copyin( (fgtmm%base_addr)(fgtmm%dim_1%LB, fgtmm%dim_2%LB, fgtmm%dim_3%LB, 0) )
  391.       t$64 = ibmax
  391.       t$65 = kmax
  391.       t$66 = jbmax
  391.       t$366 = max( 0, ibmax )
  391.       t$367 = max( 0, ibmax )
  391.       t$368 = max( 0, kmax )
  391.       t$369 = max( 0, kmax ) * max( 0, ibmax )
  391.       t$370 = max( 0, jbmax )
  391.       t$371 = max( 0, kmax ) * max( 0, ibmax ) * max( 0, jbmax )
  391.       $snt_T8 = _mt_single( 13, _mt_rw_list(...) )
  391.       jglob = 0
  391.       $snt_T8 = _mt_endsingle( 13, _mt_rw_list(...), $snt_T8 )
  391.       $SC_longit_I164 = longit%dim_1%EX
  391.       $SC_longit_I165 = longit%dim_1%LB
  391.       $SC_longit_I167 = longit%dim_2%SM
  391.       $SC_longit_I166 = longit%dim_2%EX
  391.       $SC_longit_I168 = longit%dim_2%LB
  391.       $SC_sinlat_I169 = sinlat%dim_1%EX
  391.       $SC_sinlat_I170 = sinlat%dim_1%LB
  391.       $SC_sinlat_I172 = sinlat%dim_2%SM
  391.       $SC_sinlat_I171 = sinlat%dim_2%EX
  391.       $SC_sinlat_I173 = sinlat%dim_2%LB
  391.       $SC_ulatm_I154 = ulatm%dim_1%EX
  391.       $SC_ulatm_I155 = ulatm%dim_1%LB
  391.       $SC_ulatm_I157 = ulatm%dim_2%SM
  391.       $SC_ulatm_I156 = ulatm%dim_2%EX
  391.       $SC_ulatm_I158 = ulatm%dim_2%LB
  391.       $SC_ulonm_I159 = ulonm%dim_1%EX
  391.       $SC_ulonm_I160 = ulonm%dim_1%LB
  391.       $SC_ulonm_I162 = ulonm%dim_2%SM
  391.       $SC_ulonm_I161 = ulonm%dim_2%EX
  391.       $SC_ulonm_I163 = ulonm%dim_2%LB
  391.       $SC_coslat_I2 = coslat%dim_1%EX
  391.       $SC_coslat_I3 = coslat%dim_1%LB
  391.       $SC_coslat_I5 = coslat%dim_2%SM
  391.       $SC_coslat_I4 = coslat%dim_2%EX
  391.       $SC_coslat_I6 = coslat%dim_2%LB
  391.       $SC_ibmaxperjb_I0 = ibmaxperjb%dim_1%EX
  391.       $SC_ibmaxperjb_I1 = ibmaxperjb%dim_1%LB
  391.       if ( kmax > 0 ) then
  390. !dir$ loop_info (automatic) cache_nt( ibmaxperjb )
  390.          do
  391.             $snt_T9 = _mt_critical( 14, _mt_rw_list(...) )
  391.             jglob = 1 + jglob
  391.             jb = jglob
  391.             $snt_T9 = _mt_endcritical( 14, _mt_rw_list(...), $snt_T9 )
  391.             if ( jb > jbmax ) then
  391.                goto 40
  391.             endif
  391.             $SCA_ibmaxperjb_I263 = (ibmaxperjb%base_addr)(jb, 0)
  391.             $I_L391_876 = 0
  391.             do
  391.                if ( $SCA_ibmaxperjb_I263 > 0 ) then
  391.                   $I_L391_788 = 0
  391. !dir$ ivdep
  391.                   do
  391.                      $Coss_P24 = coss( (ulatm%base_addr)(1 + $I_L391_788 + $SCA_ibmaxperjb_I263 * $I_L391_876, jb, 0) )
  391.                      dlon = (longit%base_addr)(1 + $I_L391_788, jb, 0) + -(ulonm%base_addr)(1 + $I_L391_788 + $SCA_ibmaxperjb_I263 * $I_L391_876, jb, 0)
  391.                      $Coss_P25 = coss( dlon )
  391.                      slat = sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P24 ) ) ), cimag( $Coss_P24 ) )
  391.                      cgca = real( $Coss_P25, 8 ) * (coslat%base_addr)(1 + $I_L391_788, jb, 0) * real( $Coss_P24, 8 ) + (sinlat%base_addr)(1 + $I_L391_788, jb, 0) * sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P24 ) ) ), cimag( $Coss_P24 ) )
  391.                      $Flat_S50 = acos( sign( min( 1.0, abs( cgca ) ), cgca ) )
  391.                      sgam = ( 1.0/sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P24 ) ) ), cimag( $Coss_P24 ) ) * ( -( (coslat%base_addr)(1 + $I_L391_788, jb, 0) * real( $Coss_P25, 8 ) ) + cgca * real( $Coss_P24, 8 ) ) )
  391.                      $cgam_S46 = (coslat%base_addr)(1 + $I_L391_788, jb, 0) * cimag( $Coss_P25 )
  391.                      $Flat_S47 = atan2( sgam, sign( max( 9.9999999999999995e-21, abs( $cgam_S46 ) ), $cgam_S46 ) )
  391.                      $Coss_P26 = coss( $Flat_S47 )
  391.                      fcalpx = real( $Coss_P24, 8 ) * real( $Coss_P26, 8 ) * cimag( $Coss_P26 )
  391.                      fcalpy = real( $Coss_P24, 8 ) * cimag( $Coss_P26 ) * cimag( $Coss_P26 )
  391.                      $Coss_P27 = coss( $Flat_S50 )
  391.                      $Coss_P28 = coss( -$Flat_S50 )
  391.                      calphm = 1.0 + -( real( $Coss_P28, 8 ) )
  391.                      xm = cimag( $Coss_P28 ) * ( sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P24 ) ) ), cimag( $Coss_P24 ) ) * real( $Coss_P26, 8 ) ) + ( 1.0 + -( real( $Coss_P28, 8 ) ) ) * ( real( $Coss_P24, 8 ) * real( $Coss_P26, 8 ) * cimag( $Coss_P26 ) )
  391.                      ym = real( $Coss_P24, 8 ) + -( cimag( $Coss_P28 ) * ( sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P24 ) ) ), cimag( $Coss_P24 ) ) * cimag( $Coss_P26 ) ) ) + -( ( 1.0 + -( real( $Coss_P28, 8 ) ) ) * ( real( $Coss_P24, 8 ) * cimag( $Coss_P26 ) * cimag( $Coss_P26 ) ) )
  391.                      px = ( 1.0/( xm * xm + ym * ym ) * ( -( tendv(1 + $I_L391_788, 1 + $I_L391_876, jb) * ( fcalpx * calphm + cimag( $Coss_P28 ) * ( slat * real( $Coss_P26, 8 ) ) ) ) + tendu(1 + $I_L391_788, 1 + $I_L391_876, jb) * ( real( $Coss_P24, 8 ) + -( fcalpy * calphm ) + -( cimag( $Coss_P28 ) * ( slat * cimag( $Coss_P26 ) ) ) ) ) )
  391.                      py = ( 1.0/( xm * xm + ym * ym ) * ( tendu(1 + $I_L391_788, 1 + $I_L391_876, jb) * ( cimag( $Coss_P28 ) * ( slat * real( $Coss_P26, 8 ) ) + fcalpx * ( 1.0 + -( real( $Coss_P28, 8 ) ) ) ) + tendv(1 + $I_L391_788, 1 + $I_L391_876, jb) * ( real( $Coss_P24, 8 ) + -( cimag( $Coss_P28 ) * ( slat * cimag( $Coss_P26 ) ) ) + -( fcalpy * ( 1.0 + -( real( $Coss_P28, 8 ) ) ) ) ) ) )
  391.                      tendu(1 + $I_L391_788, 1 + $I_L391_876, jb) = px * ( real( $Coss_P24, 8 ) + -( ( real( $Coss_P24, 8 ) * cimag( $Coss_P26 ) * cimag( $Coss_P26 ) ) * ( 1.0 + -( real( $Coss_P27, 8 ) ) ) ) + -( cimag( $Coss_P27 ) * ( sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P24 ) ) ), cimag( $Coss_P24 ) ) * cimag( $Coss_P26 ) ) ) ) + py * ( ( real( $Coss_P24, 8 ) * real( $Coss_P26, 8 ) * cimag( $Coss_P26 ) ) * ( 1.0 + -( real( $Coss_P27, 8 ) ) ) + cimag( $Coss_P27 ) * ( sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P24 ) ) ), cimag( $Coss_P24 ) ) * real( $Coss_P26, 8 ) ) )
  391.                      tendv(1 + $I_L391_788, 1 + $I_L391_876, jb) = -( px * ( ( real( $Coss_P24, 8 ) * real( $Coss_P26, 8 ) * cimag( $Coss_P26 ) ) * ( 1.0 + -( real( $Coss_P27, 8 ) ) ) + cimag( $Coss_P27 ) * ( sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P24 ) ) ), cimag( $Coss_P24 ) ) * real( $Coss_P26, 8 ) ) ) ) + py * ( real( $Coss_P24, 8 ) + -( ( real( $Coss_P24, 8 ) * cimag( $Coss_P26 ) * cimag( $Coss_P26 ) ) * ( 1.0 + -( real( $Coss_P27, 8 ) ) ) ) + -( cimag( $Coss_P27 ) * ( sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P24 ) ) ), cimag( $Coss_P24 ) ) * cimag( $Coss_P26 ) ) ) )
  391.                      $I_L391_788 = 1 + $I_L391_788
  391.                      if ( $I_L391_788 >= $SCA_ibmaxperjb_I263 ) exit
  391.                   enddo
  391.                endif
  391.                $I_L391_876 = 1 + $I_L391_876
  391.                if ( $I_L391_876 >= kmax ) exit
  391.             enddo
  391.          enddo
  391.       else
  391.          do
  391.             $snt_T9 = _mt_critical( 18, _mt_rw_list(...) )
  391.             jglob = 1 + jglob
  391.             jb = jglob
  391.             $snt_T9 = _mt_endcritical( 18, _mt_rw_list(...), $snt_T9 )
  391.             if ( jb > jbmax ) exit
  391.          enddo
  391.    40    continue
  391.          (fgtmm%base_addr)(fgtmm%dim_1%LB, fgtmm%dim_2%LB, fgtmm%dim_3%LB, 0) = _copyout( tendv )
  391.          (fgqmm%base_addr)(fgqmm%dim_1%LB, fgqmm%dim_2%LB, fgqmm%dim_3%LB, 0) = _copyout( tendu )
  391.       endif
  391.    50 continue
  395.       _mt_barrier( 15, _mt_rw_list(...) )
  396.       $snt_T10 = _mt_single( 16, _mt_rw_list(...) )
  397.       jglob = 0
  398.       $snt_T10 = _mt_endsingle( 16, _mt_rw_list(...), $snt_T10 )
  407.       $SC_fgtmm_I127 = fgtmm%dim_1%LB
  407.       $SC_fgtmm_I129 = fgtmm%dim_2%SM
  407.       $SC_fgtmm_I130 = fgtmm%dim_2%LB
  407.       $SC_fgtmm_I132 = fgtmm%dim_3%SM
  407.       $SC_fgtmm_I131 = fgtmm%dim_3%EX
  407.       $SC_fgtmm_I133 = fgtmm%dim_3%LB
  406.       $SC_fgqmm_I119 = fgqmm%dim_1%LB
  406.       $SC_fgqmm_I121 = fgqmm%dim_2%SM
  406.       $SC_fgqmm_I122 = fgqmm%dim_2%LB
  406.       $SC_fgqmm_I124 = fgqmm%dim_3%SM
  406.       $SC_fgqmm_I123 = fgqmm%dim_3%EX
  406.       $SC_fgqmm_I125 = fgqmm%dim_3%LB
  407.       $SC_fgyv_I59 = fgyv%dim_1%EX
  407.       $SC_fgyv_I60 = fgyv%dim_1%LB
  407.       $SC_fgyv_I62 = fgyv%dim_2%SM
  407.       $SC_fgyv_I61 = fgyv%dim_2%EX
  407.       $SC_fgyv_I63 = fgyv%dim_2%LB
  407.       $SC_fgyv_I65 = fgyv%dim_3%SM
  407.       $SC_fgyv_I64 = fgyv%dim_3%EX
  407.       $SC_fgyv_I66 = fgyv%dim_3%LB
  406.       $SC_fgyu_I35 = fgyu%dim_1%EX
  406.       $SC_fgyu_I36 = fgyu%dim_1%LB
  406.       $SC_fgyu_I38 = fgyu%dim_2%SM
  406.       $SC_fgyu_I37 = fgyu%dim_2%EX
  406.       $SC_fgyu_I39 = fgyu%dim_2%LB
  406.       $SC_fgyu_I41 = fgyu%dim_3%SM
  406.       $SC_fgyu_I40 = fgyu%dim_3%EX
  406.       $SC_fgyu_I42 = fgyu%dim_3%LB
  414.       $SC_fgv_I15 = fgv%dim_1%EX
  413.       $SC_fgu_I7 = fgu%dim_1%EX
  413.       $SC_fgu_I8 = fgu%dim_1%LB
  413.       $SC_fgu_I10 = fgu%dim_2%SM
  413.       $SC_fgu_I9 = fgu%dim_2%EX
  413.       $SC_fgu_I11 = fgu%dim_2%LB
  413.       $SC_fgu_I13 = fgu%dim_3%SM
  413.       $SC_fgu_I12 = fgu%dim_3%EX
  413.       $SC_fgu_I14 = fgu%dim_3%LB
  412.       $SC_coslat_I2 = coslat%dim_1%EX
  412.       $SC_coslat_I3 = coslat%dim_1%LB
  412.       $SC_coslat_I5 = coslat%dim_2%SM
  412.       $SC_coslat_I4 = coslat%dim_2%EX
  412.       $SC_coslat_I6 = coslat%dim_2%LB
  411.       $SC_ibmaxperjb_I0 = ibmaxperjb%dim_1%EX
  411.       $SC_ibmaxperjb_I1 = ibmaxperjb%dim_1%LB
  411. !dir$ loop_info (automatic) cache_nt( ibmaxperjb )
  411.       do
  400.          $snt_T11 = _mt_critical( 17, _mt_rw_list(...) )
  401.          jglob = 1 + jglob
  402.          $j_S55 = jglob
  403.          $snt_T11 = _mt_endcritical( 17, _mt_rw_list(...), $snt_T11 )
  404.          if ( $j_S55 > jbmax ) goto 60
  406.          $F_A73 = $SC_fgyu_I37
  406.          $F_A74 = $SC_fgyu_I35
  406.          if ( and( -$F_A74, -$F_A73 ) < 0 ) then
  406.             $I_L406_900 = 0
  406.             do
  406.                $I_L406_852 = 0
  406. !dir$ ivdep
  406. !dir$ loop_info (automatic) cache_nt( fgqmm )
  406.                do
  406.                   (fgyu%base_addr)($SC_fgyu_I36 + $I_L406_852, $SC_fgyu_I39 + $I_L406_900, $j_S55, 0) = (fgqmm%base_addr)($SC_fgqmm_I119 + $I_L406_852, $SC_fgqmm_I122 + $I_L406_900, $j_S55, 0) + delta * (fgyu%base_addr)($SC_fgyu_I36 + $I_L406_852, $SC_fgyu_I39 + $I_L406_900, $j_S55, 0)
  406.                   $I_L406_852 = 1 + $I_L406_852
  406.                   if ( $I_L406_852 >= $F_A74 ) exit
  406.                enddo
  406.                $I_L406_900 = 1 + $I_L406_900
  406.                if ( $I_L406_900 >= $F_A73 ) exit
  406.             enddo
  406.          endif
  407.          $F_A75 = $SC_fgyv_I61
  407.          $F_A76 = $SC_fgyv_I59
  407.          if ( and( -$F_A76, -$F_A75 ) < 0 ) then
  407.             $I_L407_902 = 0
  407.             do
  407.                $I_L407_854 = 0
  407. !dir$ ivdep
  407. !dir$ loop_info (automatic) cache_nt( fgtmm )
  407.                do
  407.                   (fgyv%base_addr)($SC_fgyv_I60 + $I_L407_854, $SC_fgyv_I63 + $I_L407_902, $j_S55, 0) = (fgtmm%base_addr)($SC_fgtmm_I127 + $I_L407_854, $SC_fgtmm_I130 + $I_L407_902, $j_S55, 0) + delta * (fgyv%base_addr)($SC_fgyv_I60 + $I_L407_854, $SC_fgyv_I63 + $I_L407_902, $j_S55, 0)
  407.                   $I_L407_854 = 1 + $I_L407_854
  407.                   if ( $I_L407_854 >= $F_A76 ) exit
  407.                enddo
  407.                $I_L407_902 = 1 + $I_L407_902
  407.                if ( $I_L407_902 >= $F_A75 ) exit
  407.             enddo
  407.          endif
  411.          $t_S56 = (ibmaxperjb%base_addr)($j_S55, 0)
  411.          if ( $t_S56 > 0 ) then
  414.             $SC_fgv_I327 = fgv%dim_1%LB
  414.             $SC_fgv_I328 = fgv%dim_2%SM
  414.             $SC_fgv_I326 = fgv%dim_2%EX
  414.             $SC_fgv_I329 = fgv%dim_2%LB
  414.             $SC_fgv_I331 = fgv%dim_3%SM
  414.             $SC_fgv_I330 = fgv%dim_3%EX
  414.             $SC_fgv_I332 = fgv%dim_3%LB
  411.             $I_L411_878 = 0
  411. !dir$ loop_info (automatic) cache_nt( coslat )
  411.             do
  412.                $aux_S58 = 6370000.0 * (coslat%base_addr)(1 + $I_L411_878, $j_S55, 0)
  413.                $F_A77 = $SC_fgu_I9
  413.                if ( $SC_fgu_I9 > 0 ) then
  413.                   $I_L413_856 = 0
  413. !dir$ ivdep
  413.                   do
  413.                      (fgu%base_addr)(1 + $I_L411_878, $SC_fgu_I11 + $I_L413_856, $j_S55, 0) = $aux_S58 * (fgu%base_addr)(1 + $I_L411_878, $SC_fgu_I11 + $I_L413_856, $j_S55, 0)
  413.                      $I_L413_856 = 1 + $I_L413_856
  413.                      if ( $I_L413_856 >= $F_A77 ) exit
  413.                   enddo
  413.                endif
  414.                $F_A78 = $SC_fgv_I326
  414.                if ( $SC_fgv_I326 > 0 ) then
  414.                   $I_L414_858 = 0
  414. !dir$ ivdep
  414.                   do
  414.                      (fgv%base_addr)(1 + $I_L411_878, $SC_fgv_I329 + $I_L414_858, $j_S55, 0) = $aux_S58 * (fgv%base_addr)(1 + $I_L411_878, $SC_fgv_I329 + $I_L414_858, $j_S55, 0)
  414.                      $I_L414_858 = 1 + $I_L414_858
  414.                      if ( $I_L414_858 >= $F_A78 ) exit
  414.                   enddo
  414.                endif
  415.                $I_L411_878 = 1 + $I_L411_878
  411.                if ( $I_L411_878 >= $t_S56 ) exit
  411.             enddo
  411.          endif
  415.       enddo
  415.    60 continue
  157.       _free( t$68 )
  418.       return
  418.       end
  418.       
  692.       
  692.       subroutine semilagr_2tl( nit, delt, inew, iold, fa )
  419.       t$5 = ( ibmax * kmax )
  447.       t$113 = _zla( 0, ( ibmax * kmax ) )
  447.       t$116 = 8 * _zla( 0, ( ibmax * kmax ) )
  419.       t$4 = ( 4 * ibmax * kmax )
  432.       t$117 = _zla( 0, ( 4 * ibmax * kmax ) )
  432.       t$119 = 8 * _zla( 0, ( ibmax * kmax ) ) + 4 * _zla( 0, ( 4 * ibmax * kmax ) )
  419.       t$6 = ( 12 * ibmax * kmax )
  441.       t$120 = _zla( 0, ( 12 * ibmax * kmax ) )
  441.       t$122 = 8 * _zla( 0, ( ibmax * kmax ) ) + 4 * _zla( 0, ( 4 * ibmax * kmax ) ) + 4 * _zla( 0, ( 12 * ibmax * kmax ) )
  433.       t$124 = 4 * _zla( 0, ( 4 * ibmax * kmax ) ) + 4 * _zla( 0, ( 12 * ibmax * kmax ) ) + 12 * _zla( 0, ( ibmax * kmax ) )
  442.       t$126 = 4 * _zla( 0, ( 4 * ibmax * kmax ) ) + 12 * _zla( 0, ( ibmax * kmax ) ) + 8 * _zla( 0, ( 12 * ibmax * kmax ) )
  434.       t$128 = 4 * _zla( 0, ( 4 * ibmax * kmax ) ) + 8 * _zla( 0, ( 12 * ibmax * kmax ) ) + 16 * _zla( 0, ( ibmax * kmax ) )
  443.       t$129 = 8 * ( 7 + 4 * _zla( 0, ( 4 * ibmax * kmax ) ) + 8 * _zla( 0, ( 12 * ibmax * kmax ) ) + 16 * _zla( 0, ( ibmax * kmax ) ) ) / 8
  443.       t$131 = t$129 + 8 * _zla( 0, ( ibmax * kmax ) )
  443.       t$132 = 8 * ( 7 + t$129 + 8 * _zla( 0, ( ibmax * kmax ) ) ) / 8
  443.       t$134 = t$132 + 8 * _zla( 0, ( ibmax * kmax ) )
  443.       t$135 = 8 * ( 7 + t$132 + 8 * _zla( 0, ( ibmax * kmax ) ) ) / 8
  443.       t$137 = t$135 + 8 * _zla( 0, ( ibmax * kmax ) )
  443.       t$138 = 8 * ( 7 + t$135 + 8 * _zla( 0, ( ibmax * kmax ) ) ) / 8
  443.       t$140 = t$138 + 8 * _zla( 0, ( ibmax * kmax ) )
  445.       t$141 = 8 * ( 7 + t$138 + 8 * _zla( 0, ( ibmax * kmax ) ) ) / 8
  445.       t$143 = t$141 + 8 * _zla( 0, ( ibmax * kmax ) )
  444.       t$144 = 8 * ( 7 + t$141 + 8 * _zla( 0, ( ibmax * kmax ) ) ) / 8
  444.       t$146 = t$144 + 8 * _zla( 0, ( 4 * ibmax * kmax ) )
  446.       t$147 = 8 * ( 7 + t$144 + 8 * _zla( 0, ( 4 * ibmax * kmax ) ) ) / 8
  446.       t$149 = t$147 + 8 * _zla( 0, ( ibmax * kmax ) )
  419.       t$114 = int( _alloc( t$147 + 8 * _zla( 0, ( ibmax * kmax ) ) ), 8 )
  447.       t$115 = t$114
  432.       t$118 = t$114 + 8 * _zla( 0, ( ibmax * kmax ) )
  441.       t$121 = t$114 + 8 * _zla( 0, ( ibmax * kmax ) ) + 4 * _zla( 0, ( 4 * ibmax * kmax ) )
  433.       t$123 = t$114 + 8 * _zla( 0, ( ibmax * kmax ) ) + 4 * _zla( 0, ( 4 * ibmax * kmax ) ) + 4 * _zla( 0, ( 12 * ibmax * kmax ) )
  442.       t$125 = t$114 + 4 * _zla( 0, ( 4 * ibmax * kmax ) ) + 4 * _zla( 0, ( 12 * ibmax * kmax ) ) + 12 * _zla( 0, ( ibmax * kmax ) )
  434.       t$127 = t$114 + 4 * _zla( 0, ( 4 * ibmax * kmax ) ) + 12 * _zla( 0, ( ibmax * kmax ) ) + 8 * _zla( 0, ( 12 * ibmax * kmax ) )
  443.       t$130 = t$129 + t$114
  443.       t$133 = t$132 + t$114
  443.       t$136 = t$135 + t$114
  443.       t$139 = t$138 + t$114
  445.       t$142 = t$141 + t$114
  444.       t$145 = t$144 + t$114
  446.       t$148 = t$147 + t$114
  453.       $snt_T0 = _mt_single( 1, _mt_rw_list(...) )
  454.       jglob = 0
  455.       $snt_T0 = _mt_endsingle( 1, _mt_rw_list(...), $snt_T0 )
  467.       $SC_fgw_I39 = fgw%dim_1%EX
  467.       $SC_fgw_I40 = fgw%dim_1%LB
  467.       $SC_fgw_I42 = fgw%dim_2%SM
  467.       $SC_fgw_I41 = fgw%dim_2%EX
  467.       $SC_fgw_I43 = fgw%dim_2%LB
  467.       $SC_fgw_I45 = fgw%dim_3%SM
  467.       $SC_fgw_I44 = fgw%dim_3%EX
  467.       $SC_fgw_I46 = fgw%dim_3%LB
  467.       $SC_fgwm_I47 = fgwm%dim_1%EX
  466.       $SC_fgv_I23 = fgv%dim_1%EX
  466.       $SC_fgv_I24 = fgv%dim_1%LB
  466.       $SC_fgv_I26 = fgv%dim_2%SM
  466.       $SC_fgv_I25 = fgv%dim_2%EX
  466.       $SC_fgv_I27 = fgv%dim_2%LB
  466.       $SC_fgv_I29 = fgv%dim_3%SM
  466.       $SC_fgv_I28 = fgv%dim_3%EX
  466.       $SC_fgv_I30 = fgv%dim_3%LB
  466.       $SC_fgvm_I31 = fgvm%dim_1%EX
  466.       $SC_fgvm_I32 = fgvm%dim_1%LB
  466.       $SC_fgvm_I34 = fgvm%dim_2%SM
  466.       $SC_fgvm_I33 = fgvm%dim_2%EX
  466.       $SC_fgvm_I35 = fgvm%dim_2%LB
  466.       $SC_fgvm_I37 = fgvm%dim_3%SM
  466.       $SC_fgvm_I36 = fgvm%dim_3%EX
  466.       $SC_fgvm_I38 = fgvm%dim_3%LB
  465.       $SC_fgu_I7 = fgu%dim_1%EX
  465.       $SC_fgu_I8 = fgu%dim_1%LB
  465.       $SC_fgu_I10 = fgu%dim_2%SM
  465.       $SC_fgu_I9 = fgu%dim_2%EX
  465.       $SC_fgu_I11 = fgu%dim_2%LB
  465.       $SC_fgu_I13 = fgu%dim_3%SM
  465.       $SC_fgu_I12 = fgu%dim_3%EX
  465.       $SC_fgu_I14 = fgu%dim_3%LB
  465.       $SC_fgum_I15 = fgum%dim_1%EX
  465.       $SC_fgum_I16 = fgum%dim_1%LB
  465.       $SC_fgum_I18 = fgum%dim_2%SM
  465.       $SC_fgum_I17 = fgum%dim_2%EX
  465.       $SC_fgum_I19 = fgum%dim_2%LB
  465.       $SC_fgum_I21 = fgum%dim_3%SM
  465.       $SC_fgum_I20 = fgum%dim_3%EX
  465.       $SC_fgum_I22 = fgum%dim_3%LB
  464.       $SC_coslat_I2 = coslat%dim_1%EX
  464.       $SC_coslat_I3 = coslat%dim_1%LB
  464.       $SC_coslat_I5 = coslat%dim_2%SM
  464.       $SC_coslat_I4 = coslat%dim_2%EX
  464.       $SC_coslat_I6 = coslat%dim_2%LB
  463.       $SC_ibmaxperjb_I0 = ibmaxperjb%dim_1%EX
  463.       $SC_ibmaxperjb_I1 = ibmaxperjb%dim_1%LB
  463. !dir$ loop_info (automatic) cache_nt( ibmaxperjb )
  463.       do
  457.          $snt_T1 = _mt_critical( 2, _mt_rw_list(...) )
  458.          jglob = 1 + jglob
  459.          j = jglob
  460.          $snt_T1 = _mt_endcritical( 2, _mt_rw_list(...), $snt_T1 )
  461.          if ( j > jbmax ) goto 10
  463.          $t_S0 = (ibmaxperjb%base_addr)(j, 0)
  463.          if ( $t_S0 > 0 ) then
  467.             $SC_fgwm_I393 = fgwm%dim_1%LB
  467.             $SC_fgwm_I395 = fgwm%dim_2%SM
  467.             $SC_fgwm_I394 = fgwm%dim_2%EX
  467.             $SC_fgwm_I396 = fgwm%dim_2%LB
  467.             $SC_fgwm_I398 = fgwm%dim_3%SM
  467.             $SC_fgwm_I397 = fgwm%dim_3%EX
  467.             $SC_fgwm_I399 = fgwm%dim_3%LB
  463.             $I_L463_1028 = 0
  463. !dir$ loop_info (automatic) cache_nt( coslat )
  463.             do
  464.                aux = 6370000.0 * (coslat%base_addr)(1 + $I_L463_1028, j, 0)
  465.                $F_A33 = $SC_fgum_I17
  465.                if ( $SC_fgum_I17 > 0 ) then
  465.                   $I_L465_934 = 0
  465. !dir$ ivdep
  465.                   do
  465.                      (fgum%base_addr)(1 + $I_L463_1028, $SC_fgum_I19 + $I_L465_934, j, 0) = ( 1.0/aux * ( -(fgum%base_addr)(1 + $I_L463_1028, $SC_fgum_I19 + $I_L465_934, j, 0) + 2.0 * (fgu%base_addr)(1 + $I_L463_1028, $SC_fgu_I11 + $I_L465_934, j, 0) ) )
  465.                      $I_L465_934 = 1 + $I_L465_934
  465.                      if ( $I_L465_934 >= $F_A33 ) exit
  465.                   enddo
  465.                endif
  466.                $F_A34 = $SC_fgvm_I33
  466.                if ( $SC_fgvm_I33 > 0 ) then
  466.                   $I_L466_936 = 0
  466. !dir$ ivdep
  466.                   do
  466.                      (fgvm%base_addr)(1 + $I_L463_1028, $SC_fgvm_I35 + $I_L466_936, j, 0) = ( 1.0/aux * ( -(fgvm%base_addr)(1 + $I_L463_1028, $SC_fgvm_I35 + $I_L466_936, j, 0) + 2.0 * (fgv%base_addr)(1 + $I_L463_1028, $SC_fgv_I27 + $I_L466_936, j, 0) ) )
  466.                      $I_L466_936 = 1 + $I_L466_936
  466.                      if ( $I_L466_936 >= $F_A34 ) exit
  466.                   enddo
  466.                endif
  467.                $F_A35 = $SC_fgw_I41
  467.                if ( $SC_fgw_I41 > 0 ) then
  467.                   $I_L467_938 = 0
  467. !dir$ ivdep
  467.                   do
  467.                      (fgwm%base_addr)(1 + $I_L463_1028, $SC_fgwm_I396 + $I_L467_938, j, 0) = ( -(fgwm%base_addr)(1 + $I_L463_1028, $SC_fgwm_I396 + $I_L467_938, j, 0) + 2.0 * (fgw%base_addr)(1 + $I_L463_1028, $SC_fgw_I43 + $I_L467_938, j, 0) )
  467.                      $I_L467_938 = 1 + $I_L467_938
  467.                      if ( $I_L467_938 >= $F_A35 ) exit
  467.                   enddo
  467.                endif
  468.                $I_L463_1028 = 1 + $I_L463_1028
  463.                if ( $I_L463_1028 >= $t_S0 ) exit
  463.             enddo
  463.          endif
  472.          $F_A36 = fgummean%dim_1%EX
  472.          if ( fgummean%dim_1%EX > 0 ) then
  472.             $SC_fgummean_I407 = fgummean%dim_1%EX
  472.             $SC_fgummean_I408 = fgummean%dim_1%LB
  472.             $SC_fgummean_I410 = fgummean%dim_2%SM
  472.             $SC_fgummean_I409 = fgummean%dim_2%EX
  472.             $SC_fgummean_I411 = fgummean%dim_2%LB
  472.             $I_L472_940 = 0
  472. !dir$ ivdep
  472.             do
  472.                (fgummean%base_addr)($SC_fgummean_I408 + $I_L472_940, j, 0) = 0.0
  472.                $I_L472_940 = 1 + $I_L472_940
  472.                if ( $I_L472_940 >= $F_A36 ) exit
  472.             enddo
  472.          endif
  473.          $F_A37 = fgvmmean%dim_1%EX
  473.          if ( fgvmmean%dim_1%EX > 0 ) then
  473.             $SC_fgvmmean_I412 = fgvmmean%dim_1%EX
  473.             $SC_fgvmmean_I413 = fgvmmean%dim_1%LB
  473.             $SC_fgvmmean_I415 = fgvmmean%dim_2%SM
  473.             $SC_fgvmmean_I414 = fgvmmean%dim_2%EX
  473.             $SC_fgvmmean_I416 = fgvmmean%dim_2%LB
  473.             $I_L473_942 = 0
  473. !dir$ ivdep
  473.             do
  473.                (fgvmmean%base_addr)($SC_fgvmmean_I413 + $I_L473_942, j, 0) = 0.0
  473.                $I_L473_942 = 1 + $I_L473_942
  473.                if ( $I_L473_942 >= $F_A37 ) exit
  473.             enddo
  473.          endif
  474.          if ( kmax > 0 ) then
  475.             $SC_del_I417 = del%dim_1%EX
  475.             $SC_del_I418 = del%dim_1%LB
  476.             $SC_fgvmmean_I412 = fgvmmean%dim_1%EX
  476.             $SC_fgvmmean_I413 = fgvmmean%dim_1%LB
  476.             $SC_fgvmmean_I415 = fgvmmean%dim_2%SM
  476.             $SC_fgvmmean_I414 = fgvmmean%dim_2%EX
  476.             $SC_fgvmmean_I416 = fgvmmean%dim_2%LB
  475.             $SC_fgummean_I407 = fgummean%dim_1%EX
  475.             $SC_fgummean_I408 = fgummean%dim_1%LB
  475.             $SC_fgummean_I410 = fgummean%dim_2%SM
  475.             $SC_fgummean_I409 = fgummean%dim_2%EX
  475.             $SC_fgummean_I411 = fgummean%dim_2%LB
  474.             $I_L474_1030 = 0
  474.             do
  475.                $F_A38 = $SC_fgum_I15
  475.                if ( $SC_fgum_I15 > 0 ) then
  475.                   $SC_del_I419 = (del%base_addr)(1 + $I_L474_1030, 0)
  475.                   $I_L475_944 = 0
  475. !dir$ ivdep
  475.                   do
  475.                      (fgummean%base_addr)($SC_fgummean_I408 + $I_L475_944, j, 0) = (fgummean%base_addr)($SC_fgummean_I408 + $I_L475_944, j, 0) + $SC_del_I419 * (fgum%base_addr)($SC_fgum_I16 + $I_L475_944, 1 + $I_L474_1030, j, 0)
  475.                      $I_L475_944 = 1 + $I_L475_944
  475.                      if ( $I_L475_944 >= $F_A38 ) exit
  475.                   enddo
  475.                endif
  476.                $F_A39 = $SC_fgvm_I31
  476.                if ( $SC_fgvm_I31 > 0 ) then
  476.                   $SC_del_I419 = (del%base_addr)(1 + $I_L474_1030, 0)
  476.                   $I_L476_946 = 0
  476. !dir$ ivdep
  476.                   do
  476.                      (fgvmmean%base_addr)($SC_fgvmmean_I413 + $I_L476_946, j, 0) = (fgvmmean%base_addr)($SC_fgvmmean_I413 + $I_L476_946, j, 0) + $SC_del_I419 * (fgvm%base_addr)($SC_fgvm_I32 + $I_L476_946, 1 + $I_L474_1030, j, 0)
  476.                      $I_L476_946 = 1 + $I_L476_946
  476.                      if ( $I_L476_946 >= $F_A39 ) exit
  476.                   enddo
  476.                endif
  477.                $I_L474_1030 = 1 + $I_L474_1030
  474.                if ( $I_L474_1030 >= kmax ) exit
  474.             enddo
  474.          endif
  477.       enddo
  477.    10 continue
  482.       if ( maxnodes > 1 ) then
  483.          _mt_barrier( 3, _mt_rw_list(...) )
  484.          $snt_T2 = _mt_single( 4, _mt_rw_list(...) )
  485.          call exchange_winds( (fgum%base_addr)(fgum%dim_1%LB, fgum%dim_2%LB, fgum%dim_3%LB, 0), (fgvm%base_addr)(fgvm%dim_1%LB, fgvm%dim_2%LB, fgvm%dim_3%LB, 0), (fgwm%base_addr)(fgwm%dim_1%LB, fgwm%dim_2%LB, fgwm%dim_3%LB, 0), (fgummean%base_addr)(fgummean%dim_1%LB, fgummean%dim_2%LB, 0), (fgvmmean%base_addr)(fgvmmean%dim_1%LB, fgvmmean%dim_2%LB, 0), nrecs_gr, nsends_gr )
  486.          $snt_T2 = _mt_endsingle( 4, _mt_rw_list(...), $snt_T2 )
  486.       endif
  491.       dt2 = 5.0e-1 * delt
  492.       _mt_barrier( 5, _mt_rw_list(...) )
  493.       $snt_T3 = _mt_single( 6, _mt_rw_list(...) )
  494.       jglob = 0
  495.       $snt_T3 = _mt_endsingle( 6, _mt_rw_list(...), $snt_T3 )
  504.       $SC_fgyv_I73 = fgyv%dim_1%LB
  504.       $SC_fgyv_I75 = fgyv%dim_2%SM
  504.       $SC_fgyv_I76 = fgyv%dim_2%LB
  504.       $SC_fgyv_I78 = fgyv%dim_3%SM
  504.       $SC_fgyv_I77 = fgyv%dim_3%EX
  504.       $SC_fgyv_I79 = fgyv%dim_3%LB
  504.       $SC_fgyvm_I80 = fgyvm%dim_1%EX
  504.       $SC_fgyvm_I81 = fgyvm%dim_1%LB
  504.       $SC_fgyvm_I83 = fgyvm%dim_2%SM
  504.       $SC_fgyvm_I82 = fgyvm%dim_2%EX
  504.       $SC_fgyvm_I84 = fgyvm%dim_2%LB
  504.       $SC_fgyvm_I86 = fgyvm%dim_3%SM
  504.       $SC_fgyvm_I85 = fgyvm%dim_3%EX
  504.       $SC_fgyvm_I87 = fgyvm%dim_3%LB
  503.       $SC_fgyu_I49 = fgyu%dim_1%LB
  503.       $SC_fgyu_I51 = fgyu%dim_2%SM
  503.       $SC_fgyu_I52 = fgyu%dim_2%LB
  503.       $SC_fgyu_I54 = fgyu%dim_3%SM
  503.       $SC_fgyu_I53 = fgyu%dim_3%EX
  503.       $SC_fgyu_I55 = fgyu%dim_3%LB
  503.       $SC_fgyum_I57 = fgyum%dim_1%LB
  503.       $SC_fgyum_I59 = fgyum%dim_2%SM
  503.       $SC_fgyum_I60 = fgyum%dim_2%LB
  503.       $SC_fgyum_I62 = fgyum%dim_3%SM
  503.       $SC_fgyum_I61 = fgyum%dim_3%EX
  503.       $SC_fgyum_I63 = fgyum%dim_3%LB
  503.       $SC_fgumm_I64 = fgumm%dim_1%EX
  503.       $SC_fgumm_I65 = fgumm%dim_1%LB
  503.       $SC_fgumm_I67 = fgumm%dim_2%SM
  503.       $SC_fgumm_I66 = fgumm%dim_2%EX
  503.       $SC_fgumm_I68 = fgumm%dim_2%LB
  503.       $SC_fgumm_I70 = fgumm%dim_3%SM
  503.       $SC_fgumm_I69 = fgumm%dim_3%EX
  503.       $SC_fgumm_I71 = fgumm%dim_3%LB
  503.       $SC_fgu_I7 = fgu%dim_1%EX
  503.       $SC_fgu_I8 = fgu%dim_1%LB
  503.       $SC_fgu_I10 = fgu%dim_2%SM
  503.       $SC_fgu_I9 = fgu%dim_2%EX
  503.       $SC_fgu_I11 = fgu%dim_2%LB
  503.       $SC_fgu_I13 = fgu%dim_3%SM
  503.       $SC_fgu_I12 = fgu%dim_3%EX
  503.       $SC_fgu_I14 = fgu%dim_3%LB
  503. !dir$ loop_info (automatic) cache_nt( ibmaxperjb )
  503.       do
  497.          $snt_T4 = _mt_critical( 7, _mt_rw_list(...) )
  498.          jglob = 1 + jglob
  499.          j = jglob
  500.          $snt_T4 = _mt_endcritical( 7, _mt_rw_list(...), $snt_T4 )
  501.          if ( j > jbmax ) goto 20
  503.          $F_A40 = $SC_fgumm_I66
  503.          $F_A41 = $SC_fgumm_I64
  503.          if ( and( -$F_A41, -$F_A40 ) < 0 ) then
  503.             $I_L503_1050 = 0
  503.             do
  503.                $I_L503_948 = 0
  503. !dir$ ivdep
  503. !dir$ loop_info (automatic) cache_nt( fgyum, fgyu, fgumm )
  503.                do
  503.                   (fgumm%base_addr)($SC_fgumm_I65 + $I_L503_948, $SC_fgumm_I68 + $I_L503_1050, j, 0) = (fgu%base_addr)($SC_fgu_I8 + $I_L503_948, $SC_fgu_I11 + $I_L503_1050, j, 0) + delt * ( (fgyum%base_addr)($SC_fgyum_I57 + $I_L503_948, $SC_fgyum_I60 + $I_L503_1050, j, 0) + (fgyu%base_addr)($SC_fgyu_I49 + $I_L503_948, $SC_fgyu_I52 + $I_L503_1050, j, 0) )
  503.                   $I_L503_948 = 1 + $I_L503_948
  503.                   if ( $I_L503_948 >= $F_A41 ) exit
  503.                enddo
  503.                $I_L503_1050 = 1 + $I_L503_1050
  503.                if ( $I_L503_1050 >= $F_A40 ) exit
  503.             enddo
  503.          endif
  504.          $F_A42 = $SC_fgyvm_I82
  504.          $F_A43 = $SC_fgyvm_I80
  504.          if ( and( -$F_A43, -$F_A42 ) < 0 ) then
  504.             $SC_fgvmm_I426 = fgvmm%dim_1%LB
  504.             $SC_fgvmm_I427 = fgvmm%dim_2%SM
  504.             $SC_fgvmm_I428 = fgvmm%dim_2%LB
  504.             $SC_fgvmm_I430 = fgvmm%dim_3%SM
  504.             $SC_fgvmm_I429 = fgvmm%dim_3%EX
  504.             $SC_fgvmm_I431 = fgvmm%dim_3%LB
  504.             $SC_fgv_I420 = fgv%dim_1%LB
  504.             $SC_fgv_I421 = fgv%dim_2%SM
  504.             $SC_fgv_I422 = fgv%dim_2%LB
  504.             $SC_fgv_I424 = fgv%dim_3%SM
  504.             $SC_fgv_I423 = fgv%dim_3%EX
  504.             $SC_fgv_I425 = fgv%dim_3%LB
  504.             $I_L504_1052 = 0
  504.             do
  504.                $I_L504_950 = 0
  504. !dir$ ivdep
  504. !dir$ loop_info (automatic) cache_nt( fgyvm, fgyv, fgvmm )
  504.                do
  504.                   (fgvmm%base_addr)($SC_fgvmm_I426 + $I_L504_950, $SC_fgvmm_I428 + $I_L504_1052, j, 0) = (fgv%base_addr)($SC_fgv_I420 + $I_L504_950, $SC_fgv_I422 + $I_L504_1052, j, 0) + delt * ( (fgyv%base_addr)($SC_fgyv_I73 + $I_L504_950, $SC_fgyv_I76 + $I_L504_1052, j, 0) + (fgyvm%base_addr)($SC_fgyvm_I81 + $I_L504_950, $SC_fgyvm_I84 + $I_L504_1052, j, 0) )
  504.                   $I_L504_950 = 1 + $I_L504_950
  504.                   if ( $I_L504_950 >= $F_A43 ) exit
  504.                enddo
  504.                $I_L504_1052 = 1 + $I_L504_1052
  504.                if ( $I_L504_1052 >= $F_A42 ) exit
  504.             enddo
  504.          endif
  505.          $F_A44 = fgtmpp%dim_2%EX
  505.          $F_A45 = fgtmpp%dim_1%EX
  505.          if ( and( -$F_A45, -$F_A44 ) < 0 ) then
  505.             $SC_fgtd_I433 = fgtd%dim_1%LB
  505.             $SC_fgtd_I435 = fgtd%dim_2%SM
  505.             $SC_fgtd_I436 = fgtd%dim_2%LB
  505.             $SC_fgtd_I438 = fgtd%dim_3%SM
  505.             $SC_fgtd_I437 = fgtd%dim_3%EX
  505.             $SC_fgtd_I439 = fgtd%dim_3%LB
  505.             $SC_fgtdm_I440 = fgtdm%dim_1%LB
  505.             $SC_fgtdm_I441 = fgtdm%dim_2%SM
  505.             $SC_fgtdm_I442 = fgtdm%dim_2%LB
  505.             $SC_fgtdm_I444 = fgtdm%dim_3%SM
  505.             $SC_fgtdm_I443 = fgtdm%dim_3%EX
  505.             $SC_fgtdm_I445 = fgtdm%dim_3%LB
  505.             $SC_fgtmp_I446 = fgtmp%dim_1%LB
  505.             $SC_fgtmp_I447 = fgtmp%dim_2%SM
  505.             $SC_fgtmp_I448 = fgtmp%dim_2%LB
  505.             $SC_fgtmp_I450 = fgtmp%dim_3%SM
  505.             $SC_fgtmp_I449 = fgtmp%dim_3%EX
  505.             $SC_fgtmp_I451 = fgtmp%dim_3%LB
  505.             $SC_fgtmpp_I432 = fgtmpp%dim_1%EX
  505.             $SC_fgtmpp_I452 = fgtmpp%dim_1%LB
  505.             $SC_fgtmpp_I453 = fgtmpp%dim_2%SM
  505.             $SC_fgtmpp_I434 = fgtmpp%dim_2%EX
  505.             $SC_fgtmpp_I454 = fgtmpp%dim_2%LB
  505.             $SC_fgtmpp_I456 = fgtmpp%dim_3%SM
  505.             $SC_fgtmpp_I455 = fgtmpp%dim_3%EX
  505.             $SC_fgtmpp_I457 = fgtmpp%dim_3%LB
  505.             $I_L505_1054 = 0
  505.             do
  505.                $I_L505_952 = 0
  505. !dir$ ivdep
  505. !dir$ loop_info (automatic) cache_nt( fgtmp, fgtdm, fgtd, fgtmpp )
  505.                do
  505.                   (fgtmpp%base_addr)($SC_fgtmpp_I452 + $I_L505_952, $SC_fgtmpp_I454 + $I_L505_1054, j, 0) = (fgtmp%base_addr)($SC_fgtmp_I446 + $I_L505_952, $SC_fgtmp_I448 + $I_L505_1054, j, 0) + delt * ( (fgtd%base_addr)($SC_fgtd_I433 + $I_L505_952, $SC_fgtd_I436 + $I_L505_1054, j, 0) + (fgtdm%base_addr)($SC_fgtdm_I440 + $I_L505_952, $SC_fgtdm_I442 + $I_L505_1054, j, 0) )
  505.                   $I_L505_952 = 1 + $I_L505_952
  505.                   if ( $I_L505_952 >= $F_A45 ) exit
  505.                enddo
  505.                $I_L505_1054 = 1 + $I_L505_1054
  505.                if ( $I_L505_1054 >= $F_A44 ) exit
  505.             enddo
  505.          endif
  506.          $F_A46 = fgqp%dim_2%EX
  506.          $F_A47 = fgqp%dim_1%EX
  506.          if ( and( -$F_A47, -$F_A46 ) < 0 ) then
  506.             $SC_fgqd_I459 = fgqd%dim_1%LB
  506.             $SC_fgqd_I461 = fgqd%dim_2%SM
  506.             $SC_fgqd_I462 = fgqd%dim_2%LB
  506.             $SC_fgqd_I464 = fgqd%dim_3%SM
  506.             $SC_fgqd_I463 = fgqd%dim_3%EX
  506.             $SC_fgqd_I465 = fgqd%dim_3%LB
  506.             $SC_fgqdm_I466 = fgqdm%dim_1%LB
  506.             $SC_fgqdm_I467 = fgqdm%dim_2%SM
  506.             $SC_fgqdm_I468 = fgqdm%dim_2%LB
  506.             $SC_fgqdm_I470 = fgqdm%dim_3%SM
  506.             $SC_fgqdm_I469 = fgqdm%dim_3%EX
  506.             $SC_fgqdm_I471 = fgqdm%dim_3%LB
  506.             $SC_fgq_I472 = fgq%dim_1%LB
  506.             $SC_fgq_I473 = fgq%dim_2%SM
  506.             $SC_fgq_I474 = fgq%dim_2%LB
  506.             $SC_fgq_I476 = fgq%dim_3%SM
  506.             $SC_fgq_I475 = fgq%dim_3%EX
  506.             $SC_fgq_I477 = fgq%dim_3%LB
  506.             $SC_fgqp_I458 = fgqp%dim_1%EX
  506.             $SC_fgqp_I478 = fgqp%dim_1%LB
  506.             $SC_fgqp_I479 = fgqp%dim_2%SM
  506.             $SC_fgqp_I460 = fgqp%dim_2%EX
  506.             $SC_fgqp_I480 = fgqp%dim_2%LB
  506.             $SC_fgqp_I482 = fgqp%dim_3%SM
  506.             $SC_fgqp_I481 = fgqp%dim_3%EX
  506.             $SC_fgqp_I483 = fgqp%dim_3%LB
  506.             $I_L506_1056 = 0
  506.             do
  506.                $I_L506_954 = 0
  506. !dir$ ivdep
  506. !dir$ loop_info (automatic) cache_nt( fgqdm, fgqd, fgq, fgqp )
  506.                do
  506.                   (fgqp%base_addr)($SC_fgqp_I478 + $I_L506_954, $SC_fgqp_I480 + $I_L506_1056, j, 0) = (fgq%base_addr)($SC_fgq_I472 + $I_L506_954, $SC_fgq_I474 + $I_L506_1056, j, 0) + delt * ( (fgqd%base_addr)($SC_fgqd_I459 + $I_L506_954, $SC_fgqd_I462 + $I_L506_1056, j, 0) + (fgqdm%base_addr)($SC_fgqdm_I466 + $I_L506_954, $SC_fgqdm_I468 + $I_L506_1056, j, 0) )
  506.                   $I_L506_954 = 1 + $I_L506_954
  506.                   if ( $I_L506_954 >= $F_A47 ) exit
  506.                enddo
  506.                $I_L506_1056 = 1 + $I_L506_1056
  506.                if ( $I_L506_1056 >= $F_A46 ) exit
  506.             enddo
  506.          endif
  507.          $F_A48 = fgvdlnp%dim_1%EX
  507.          if ( fgvdlnp%dim_1%EX > 0 ) then
  507.             $SC_fgvdlnp_I484 = fgvdlnp%dim_1%EX
  507.             $SC_fgvdlnp_I485 = fgvdlnp%dim_1%LB
  507.             $SC_fgvdlnp_I487 = fgvdlnp%dim_2%SM
  507.             $SC_fgvdlnp_I486 = fgvdlnp%dim_2%EX
  507.             $SC_fgvdlnp_I488 = fgvdlnp%dim_2%LB
  507.             $SC_fgvdlnpm_I489 = fgvdlnpm%dim_1%EX
  507.             $SC_fgvdlnpm_I490 = fgvdlnpm%dim_1%LB
  507.             $SC_fgvdlnpm_I492 = fgvdlnpm%dim_2%SM
  507.             $SC_fgvdlnpm_I491 = fgvdlnpm%dim_2%EX
  507.             $SC_fgvdlnpm_I493 = fgvdlnpm%dim_2%LB
  507.             $SC_fgzs_I494 = fgzs%dim_1%EX
  507.             $SC_fgzs_I495 = fgzs%dim_1%LB
  507.             $SC_fgzs_I497 = fgzs%dim_2%SM
  507.             $SC_fgzs_I496 = fgzs%dim_2%EX
  507.             $SC_fgzs_I498 = fgzs%dim_2%LB
  507.             $SC_fglnps_I499 = fglnps%dim_1%EX
  507.             $SC_fglnps_I500 = fglnps%dim_1%LB
  507.             $SC_fglnps_I502 = fglnps%dim_2%SM
  507.             $SC_fglnps_I501 = fglnps%dim_2%EX
  507.             $SC_fglnps_I503 = fglnps%dim_2%LB
  507.             $SC_fgpsp_I504 = fgpsp%dim_1%EX
  507.             $SC_fgpsp_I505 = fgpsp%dim_1%LB
  507.             $SC_fgpsp_I507 = fgpsp%dim_2%SM
  507.             $SC_fgpsp_I506 = fgpsp%dim_2%EX
  507.             $SC_fgpsp_I508 = fgpsp%dim_2%LB
  507.             $I_L507_956 = 0
  507. !dir$ ivdep
  507. !dir$ loop_info (automatic) cache_nt( fgzs, fgvdlnpm, fgvdlnp, fglnps, fgpsp )
  507.             do
  507.                (fgpsp%base_addr)($SC_fgpsp_I505 + $I_L507_956, j, 0) = (fglnps%base_addr)($SC_fglnps_I500 + $I_L507_956, j, 0) + 1.161237879579632e-5 * (fgzs%base_addr)($SC_fgzs_I495 + $I_L507_956, j, 0) + delt * ( (fgvdlnpm%base_addr)($SC_fgvdlnpm_I490 + $I_L507_956, j, 0) + (fgvdlnp%base_addr)($SC_fgvdlnp_I485 + $I_L507_956, j, 0) )
  507.                $I_L507_956 = 1 + $I_L507_956
  507.                if ( $I_L507_956 >= $F_A48 ) exit
  507.             enddo
  507.          endif
  509.          $t_S3 = (ibmaxperjb%base_addr)(j, 0)
  509.          if ( $t_S3 > 0 ) then
  512.             $SC_fgv_I400 = fgv%dim_1%EX
  512.             $SC_fgv_I401 = fgv%dim_1%LB
  512.             $SC_fgv_I402 = fgv%dim_2%SM
  512.             $SC_fgv_I403 = fgv%dim_2%LB
  512.             $SC_fgv_I405 = fgv%dim_3%SM
  512.             $SC_fgv_I404 = fgv%dim_3%EX
  512.             $SC_fgv_I406 = fgv%dim_3%LB
  512.             $SC_fgv_I514 = fgv%dim_2%EX
  510.             $SC_coslat_I509 = coslat%dim_1%EX
  510.             $SC_coslat_I510 = coslat%dim_1%LB
  510.             $SC_coslat_I512 = coslat%dim_2%SM
  510.             $SC_coslat_I511 = coslat%dim_2%EX
  510.             $SC_coslat_I513 = coslat%dim_2%LB
  509.             $I_L509_1032 = 0
  509. !dir$ loop_info (automatic) cache_nt( coslat )
  509.             do
  510.                aux = 6370000.0 * (coslat%base_addr)(1 + $I_L509_1032, j, 0)
  511.                $F_A49 = $SC_fgu_I9
  511.                if ( $SC_fgu_I9 > 0 ) then
  511.                   $I_L511_958 = 0
  511. !dir$ ivdep
  511.                   do
  511.                      (fgu%base_addr)(1 + $I_L509_1032, $SC_fgu_I11 + $I_L511_958, j, 0) = ( (fgu%base_addr)(1 + $I_L509_1032, $SC_fgu_I11 + $I_L511_958, j, 0) * 1.0/aux )
  511.                      $I_L511_958 = 1 + $I_L511_958
  511.                      if ( $I_L511_958 >= $F_A49 ) exit
  511.                   enddo
  511.                endif
  512.                $F_A50 = $SC_fgv_I514
  512.                if ( $SC_fgv_I514 > 0 ) then
  512.                   $I_L512_960 = 0
  512. !dir$ ivdep
  512.                   do
  512.                      (fgv%base_addr)(1 + $I_L509_1032, $SC_fgv_I403 + $I_L512_960, j, 0) = ( (fgv%base_addr)(1 + $I_L509_1032, $SC_fgv_I403 + $I_L512_960, j, 0) * 1.0/aux )
  512.                      $I_L512_960 = 1 + $I_L512_960
  512.                      if ( $I_L512_960 >= $F_A50 ) exit
  512.                   enddo
  512.                endif
  513.                $I_L509_1032 = 1 + $I_L509_1032
  509.                if ( $I_L509_1032 >= $t_S3 ) exit
  509.             enddo
  509.          endif
  514.          $F_A51 = fgumean%dim_1%EX
  514.          if ( fgumean%dim_1%EX > 0 ) then
  514.             $SC_fgumean_I515 = fgumean%dim_1%EX
  514.             $SC_fgumean_I516 = fgumean%dim_1%LB
  514.             $SC_fgumean_I518 = fgumean%dim_2%SM
  514.             $SC_fgumean_I517 = fgumean%dim_2%EX
  514.             $SC_fgumean_I519 = fgumean%dim_2%LB
  514.             $I_L514_962 = 0
  514. !dir$ ivdep
  514.             do
  514.                (fgumean%base_addr)($SC_fgumean_I516 + $I_L514_962, j, 0) = 0.0
  514.                $I_L514_962 = 1 + $I_L514_962
  514.                if ( $I_L514_962 >= $F_A51 ) exit
  514.             enddo
  514.          endif
  515.          $F_A52 = fgvmean%dim_1%EX
  515.          if ( fgvmean%dim_1%EX > 0 ) then
  515.             $SC_fgvmean_I520 = fgvmean%dim_1%EX
  515.             $SC_fgvmean_I521 = fgvmean%dim_1%LB
  515.             $SC_fgvmean_I523 = fgvmean%dim_2%SM
  515.             $SC_fgvmean_I522 = fgvmean%dim_2%EX
  515.             $SC_fgvmean_I524 = fgvmean%dim_2%LB
  515.             $I_L515_964 = 0
  515. !dir$ ivdep
  515.             do
  515.                (fgvmean%base_addr)($SC_fgvmean_I521 + $I_L515_964, j, 0) = 0.0
  515.                $I_L515_964 = 1 + $I_L515_964
  515.                if ( $I_L515_964 >= $F_A52 ) exit
  515.             enddo
  515.          endif
  516.          if ( kmax > 0 ) then
  518.             $SC_fgvmean_I520 = fgvmean%dim_1%EX
  518.             $SC_fgvmean_I521 = fgvmean%dim_1%LB
  518.             $SC_fgvmean_I523 = fgvmean%dim_2%SM
  518.             $SC_fgvmean_I522 = fgvmean%dim_2%EX
  518.             $SC_fgvmean_I524 = fgvmean%dim_2%LB
  517.             $SC_fgumean_I515 = fgumean%dim_1%EX
  517.             $SC_fgumean_I516 = fgumean%dim_1%LB
  517.             $SC_fgumean_I518 = fgumean%dim_2%SM
  517.             $SC_fgumean_I517 = fgumean%dim_2%EX
  517.             $SC_fgumean_I519 = fgumean%dim_2%LB
  517.             $SC_del_I417 = del%dim_1%EX
  517.             $SC_del_I418 = del%dim_1%LB
  518.             $SC_fgv_I526 = fgv%dim_1%EX
  518.             $SC_fgv_I420 = fgv%dim_1%LB
  518.             $SC_fgv_I421 = fgv%dim_2%SM
  518.             $SC_fgv_I514 = fgv%dim_2%EX
  518.             $SC_fgv_I422 = fgv%dim_2%LB
  518.             $SC_fgv_I424 = fgv%dim_3%SM
  518.             $SC_fgv_I423 = fgv%dim_3%EX
  518.             $SC_fgv_I425 = fgv%dim_3%LB
  516.             $I_L516_1034 = 0
  516.             do
  517.                $F_A53 = $SC_fgu_I7
  517.                if ( $SC_fgu_I7 > 0 ) then
  517.                   $SC_del_I525 = (del%base_addr)(1 + $I_L516_1034, 0)
  517.                   $I_L517_966 = 0
  517. !dir$ ivdep
  517.                   do
  517.                      (fgumean%base_addr)($SC_fgumean_I516 + $I_L517_966, j, 0) = (fgumean%base_addr)($SC_fgumean_I516 + $I_L517_966, j, 0) + $SC_del_I525 * (fgu%base_addr)($SC_fgu_I8 + $I_L517_966, 1 + $I_L516_1034, j, 0)
  517.                      $I_L517_966 = 1 + $I_L517_966
  517.                      if ( $I_L517_966 >= $F_A53 ) exit
  517.                   enddo
  517.                endif
  518.                $F_A54 = $SC_fgvmean_I520
  518.                if ( $SC_fgvmean_I520 > 0 ) then
  518.                   $SC_del_I525 = (del%base_addr)(1 + $I_L516_1034, 0)
  518.                   $I_L518_968 = 0
  518. !dir$ ivdep
  518.                   do
  518.                      (fgvmean%base_addr)($SC_fgvmean_I521 + $I_L518_968, j, 0) = (fgvmean%base_addr)($SC_fgvmean_I521 + $I_L518_968, j, 0) + $SC_del_I525 * (fgv%base_addr)($SC_fgv_I420 + $I_L518_968, 1 + $I_L516_1034, j, 0)
  518.                      $I_L518_968 = 1 + $I_L518_968
  518.                      if ( $I_L518_968 >= $F_A54 ) exit
  518.                   enddo
  518.                endif
  519.                $I_L516_1034 = 1 + $I_L516_1034
  516.                if ( $I_L516_1034 >= kmax ) exit
  516.             enddo
  516.          endif
  519.       enddo
  519.    20 continue
  524.       _mt_barrier( 8, _mt_rw_list(...) )
  525.       if ( maxnodes > 1 ) then
  526.          $snt_T5 = _mt_single( 9, _mt_rw_list(...) )
  527.          call exchange_fields( (fgumm%base_addr)(fgumm%dim_1%LB, fgumm%dim_2%LB, fgumm%dim_3%LB, 0), (fgvmm%base_addr)(fgvmm%dim_1%LB, fgvmm%dim_2%LB, fgvmm%dim_3%LB, 0), (fgtmpp%base_addr)(fgtmpp%dim_1%LB, fgtmpp%dim_2%LB, fgtmpp%dim_3%LB, 0), (fgqp%base_addr)(fgqp%dim_1%LB, fgqp%dim_2%LB, fgqp%dim_3%LB, 0), (fgpsp%base_addr)(fgpsp%dim_1%LB, fgpsp%dim_2%LB, 0), (fgpass_scalars%base_addr)(fgpass_scalars%dim_1%LB, fgpass_scalars%dim_2%LB, fgpass_scalars%dim_3%LB, fgpass_scalars%dim_4%LB, fgpass_scalars%dim_5%LB, 0), nscalars, iold, nrecs_gr, nsends_gr )
  529.          $snt_T5 = _mt_endsingle( 9, _mt_rw_list(...), $snt_T5 )
  529.       endif
  534.       $snt_T6 = _mt_single( 10, _mt_rw_list(...) )
  535.       jglob = 0
  536.       $snt_T6 = _mt_endsingle( 10, _mt_rw_list(...), $snt_T6 )
  536.       do
  538.          $snt_T7 = _mt_critical( 11, _mt_rw_list(...) )
  539.          jglob = 1 + jglob
  540.          jb = jglob
  541.          $snt_T7 = _mt_endcritical( 11, _mt_rw_list(...), $snt_T7 )
  542.          if ( jb > jbmax ) goto 30
  544.          ibdim = (ibmaxperjb%base_addr)(jb, 0)
  548.          call trajectory_2l( (ulonm%base_addr)(1, jb, 0), (ulatm%base_addr)(1, jb, 0), (usig%base_addr)(1, jb, 0), (ulon%base_addr)(1, jb, 0), (ulat%base_addr)(1, jb, 0), ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, jb, nit, delt, ip(1), jn(1) )
  557.          klats = 1
  558.          if ( reducedgrid /= .false. ) then
  558.             klats = 4
  558.          endif
  559.          tm$324 = loc( (ulon%base_addr)(1, jb, 0) )
  559.          ulon = _copyin( (ulon%base_addr)(1, jb, 0) )
  559.          tm$326 = loc( (ulat%base_addr)(1, jb, 0) )
  559.          ulat = _copyin( (ulat%base_addr)(1, jb, 0) )
  559.          tm$328 = loc( (usig%base_addr)(1, jb, 0) )
  559.          usig = _copyin( (usig%base_addr)(1, jb, 0) )
  559.          tm$330 = loc( ulondp(1) )
  559.          ulondp = _copyin( ulondp(1) )
  559.          tm$332 = loc( ulatdp(1) )
  559.          ulatdp = _copyin( ulatdp(1) )
  559.          tm$334 = loc( usigdp(1) )
  559.          usigdp = _copyin( usigdp(1) )
  559.          tm$336 = loc( iloc(1) )
  559.          iloc = _copyin( iloc(1) )
  559.          tm$338 = loc( jloc(1) )
  559.          jloc = _copyin( jloc(1) )
  559.          tm$340 = loc( kloc(1) )
  559.          kloc = _copyin( kloc(1) )
  559.          t$31 = ibdim
  559.          t$32 = kmax
  559.          t$248 = max( 0, ibdim )
  559.          t$249 = max( 0, ibdim )
  559.          t$250 = max( 0, kmax )
  559.          t$251 = max( 0, ibdim ) * max( 0, kmax )
  559.          t$252 = max( 0, ibdim ) * max( 0, kmax )
  559.          t$253 = 4 * max( 0, ibdim ) * max( 0, kmax )
  559.          if ( kmax > 0 ) then
  559.             $SC_delsigma_I98 = delsigma%dim_1%EX
  559.             $SC_delsigma_I99 = delsigma%dim_1%LB
  559.             $SC_delsigma_I101 = delsigma%dim_2%SM
  559.             $SC_delsigma_I100 = delsigma%dim_2%EX
  559.             $SC_delsigma_I102 = delsigma%dim_2%LB
  559.             $SC_ksigref_I93 = ksigref%dim_1%EX
  559.             $SC_ksigref_I94 = ksigref%dim_1%LB
  559.             $SC_ksigref_I96 = ksigref%dim_2%SM
  559.             $SC_ksigref_I95 = ksigref%dim_2%EX
  559.             $SC_ksigref_I97 = ksigref%dim_2%LB
  559.             $SC_sigma_I88 = sigma%dim_1%EX
  559.             $SC_sigma_I89 = sigma%dim_1%LB
  559.             $SC_sigma_I91 = sigma%dim_2%SM
  559.             $SC_sigma_I90 = sigma%dim_2%EX
  559.             $SC_sigma_I92 = sigma%dim_2%LB
  559.             if ( ibdim > 0 ) then
  559.                $I_L559_1036 = 0
  559. !dir$ blocking_size( 1, 1 )
  559.                do
  559.                   $I_L559_904 = 0
  559. !dir$ ivdep
  559. !dir$ blocking_size( 256, 256 )
  559.                   do
  559.                      ik = int( ( 1.0/delsigref * ( usig(1 + $I_L559_904, 1 + $I_L559_1036) + -(sigma%base_addr)(1 + $I_L559_904, 1, 0) ) ) )
  559.                      $kloc_WR0_R0 = (ksigref%base_addr)(1 + $I_L559_904, ik, 0)
  559.                      kloc(1 + $I_L559_904, 1 + $I_L559_1036) = $kloc_WR0_R0
  559.                      if ( usig(1 + $I_L559_904, 1 + $I_L559_1036) > (sigma%base_addr)(1 + $I_L559_904, 1 + $kloc_WR0_R0, 0) ) then
  559.                         $kloc_WR0_R0 = 1 + $kloc_WR0_R0
  559.                         kloc(1 + $I_L559_904, 1 + $I_L559_1036) = $kloc_WR0_R0
  559.                      endif
  559.                      usigdp(1 + $I_L559_904, 1 + $I_L559_1036) = ( 1.0/(delsigma%base_addr)(1 + $I_L559_904, $kloc_WR0_R0, 0) * ( usig(1 + $I_L559_904, 1 + $I_L559_1036) + -(sigma%base_addr)(1 + $I_L559_904, $kloc_WR0_R0, 0) ) )
  559.                      $I_L559_904 = 1 + $I_L559_904
  559.                      if ( $I_L559_904 >= ibdim ) exit
  559.                   enddo
  559.                   $I_L559_1036 = 1 + $I_L559_1036
  559.                   if ( $I_L559_1036 >= kmax ) exit
  559.                enddo
  559.             endif
  559.             $SC_delphi_I113 = delphi%dim_1%EX
  559.             $SC_delphi_I114 = delphi%dim_1%LB
  559.             $SC_delphi_I116 = delphi%dim_2%SM
  559.             $SC_delphi_I115 = delphi%dim_2%EX
  559.             $SC_delphi_I117 = delphi%dim_2%LB
  559.             $SC_phi_I108 = phi%dim_1%EX
  559.             $SC_phi_I109 = phi%dim_1%LB
  559.             $SC_phi_I111 = phi%dim_2%SM
  559.             $SC_phi_I110 = phi%dim_2%EX
  559.             $SC_phi_I112 = phi%dim_2%LB
  559.             $SC_jphiref_I103 = jphiref%dim_1%EX
  559.             $SC_jphiref_I104 = jphiref%dim_1%LB
  559.             $SC_jphiref_I106 = jphiref%dim_2%SM
  559.             $SC_jphiref_I105 = jphiref%dim_2%EX
  559.             $SC_jphiref_I107 = jphiref%dim_2%LB
  559.             if ( ibdim > 0 ) then
  559.                $I_L559_1038 = 0
  559.                do
  559.                   $I_L559_906 = 0
  559. !dir$ ivdep
  559.                   do
  559.                      ik = int( ( 1.0/delphiref * ( 1.570796326794895 + ulat(1 + $I_L559_906, 1 + $I_L559_1038) ) ) )
  559.                      $jloc_WR0_R1 = (jphiref%base_addr)(1 + $I_L559_906, ik, 0)
  559.                      jloc(1 + $I_L559_906, 1 + $I_L559_1038) = $jloc_WR0_R1
  559.                      if ( ulat(1 + $I_L559_906, 1 + $I_L559_1038) > (phi%base_addr)(1 + $I_L559_906, 1 + $jloc_WR0_R1, 0) ) then
  559.                         $jloc_WR0_R1 = 1 + $jloc_WR0_R1
  559.                         jloc(1 + $I_L559_906, 1 + $I_L559_1038) = $jloc_WR0_R1
  559.                      endif
  559.                      ulatdp(1 + $I_L559_906, 1 + $I_L559_1038) = ( 1.0/(delphi%base_addr)(1 + $I_L559_906, $jloc_WR0_R1, 0) * ( ulat(1 + $I_L559_906, 1 + $I_L559_1038) + -(phi%base_addr)(1 + $I_L559_906, $jloc_WR0_R1, 0) ) )
  559.                      $I_L559_906 = 1 + $I_L559_906
  559.                      if ( $I_L559_906 >= ibdim ) exit
  559.                   enddo
  559.                   $I_L559_1038 = 1 + $I_L559_1038
  559.                   if ( $I_L559_1038 >= kmax ) exit
  559.                enddo
  559.             endif
  559.          endif
  559.          if ( klats == 4 ) then
  559.             kp(1) = -1
  559.             kp(2) = 0
  559.             kp(3) = 1
  559.             kp(4) = 2
  559.          else
  559.             kp(1) = 0
  559.             kp(2) = 1
  559.          endif
  559.          if ( klats > 0 ) then
  559.             $SC_dellon_I118 = dellon%dim_1%EX
  559.             $SC_dellon_I119 = dellon%dim_1%LB
  559.             $SC_dellon_I121 = dellon%dim_2%SM
  559.             $SC_dellon_I120 = dellon%dim_2%EX
  559.             $SC_dellon_I122 = dellon%dim_2%LB
  559.             if ( kmax > 0 ) then
  559.                if ( ibdim > 0 ) then
  559.                   $I_L559_1102 = 0
  559. !dir$ unroll 4
  559. !dir$ blocking_size( 1, 1 )
  559.                   do
  559.                      ks = kp(1 + $I_L559_1102)
  559.                      $I_L559_1096 = 0
  559.                      do
  559.                         $I_L559_1090 = 0
  559.                         do
  559.                            $I_L559_1084 = 0
  559. !dir$ shortloop16
  559. !dir$ blocking_size( 2, 2 )
  559.                            do
  559.                               $I_L559_908 = 0
  559. !dir$ ivdep
  559. !dir$ blocking_size( 256, 256 )
  559.                               do
  559.                                  j = 1 + jmax + -jloc(1 + $I_L559_908 + 256 * $I_L559_1090, 1 + $I_L559_1084 + 2 * $I_L559_1096)
  559.                                  $ulondp_WR0_R2 = 1.0 + ( ulon(1 + $I_L559_908 + 256 * $I_L559_1090, 1 + $I_L559_1084 + 2 * $I_L559_1096) * 1.0/(dellon%base_addr)(1 + $I_L559_908 + 256 * $I_L559_1090, j + -ks, 0) )
  559.                                  iloc(1 + $I_L559_908 + 256 * $I_L559_1090, 1 + $I_L559_1084 + 2 * $I_L559_1096, 1 + $I_L559_1102) = int( $ulondp_WR0_R2 )
  559.                                  $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  559.                                  ulondp(1 + $I_L559_908 + 256 * $I_L559_1090, 1 + $I_L559_1084 + 2 * $I_L559_1096, 1 + $I_L559_1102) = $ulondp_WR0_R2
  559.                                  $I_L559_908 = 1 + $I_L559_908
  559.                                  if ( $I_L559_908 >= min( ibdim, 256 + 256 * $I_L559_1090 ) + -256 * $I_L559_1090 ) exit
  559.                               enddo
  559.                               $I_L559_1084 = 1 + $I_L559_1084
  559.                               if ( $I_L559_1084 >= min( kmax, 2 + 2 * $I_L559_1096 ) + -2 * $I_L559_1096 ) exit
  559.                            enddo
  559.                            $I_L559_1090 = 1 + $I_L559_1090
  559.                            if ( $I_L559_1090 >= 1 + max( 0, -1 + _rsh( 255 + ibdim, 8 ) ) ) exit
  559.                         enddo
  559.                         $I_L559_1096 = 1 + $I_L559_1096
  559.                         if ( $I_L559_1096 >= 1 + max( 0, -1 + _rsh( 1 + kmax, 1 ) ) ) exit
  559.                      enddo
  559.                      $I_L559_1102 = 1 + $I_L559_1102
  559.                      if ( $I_L559_1102 >= klats ) exit
  559.                   enddo
  559.                endif
  559.             endif
  559.          endif
  559.          if ( klats == 1 ) then
  559.             $F_A55 = kmax
  559.             $F_A56 = ibdim
  559.             if ( and( -$F_A56, -$F_A55 ) < 0 ) then
  559.                $I_L559_1058 = 0
  559.                do
  559.                   $I_L559_970 = 0
  559. !dir$ ivdep
  559.                   do
  559.                      iloc(1 + $I_L559_970, 1 + $I_L559_1058, 2) = iloc(1 + $I_L559_970, 1 + $I_L559_1058, 1)
  559.                      $I_L559_970 = 1 + $I_L559_970
  559.                      if ( $I_L559_970 >= $F_A56 ) exit
  559.                   enddo
  559.                   $I_L559_1058 = 1 + $I_L559_1058
  559.                   if ( $I_L559_1058 >= $F_A55 ) exit
  559.                enddo
  559.             endif
  559.             $F_A57 = kmax
  559.             $F_A58 = ibdim
  559.             if ( and( -$F_A58, -$F_A57 ) < 0 ) then
  559.                $I_L559_1060 = 0
  559.                do
  559.                   $I_L559_972 = 0
  559. !dir$ ivdep
  559.                   do
  559.                      iloc(1 + $I_L559_972, 1 + $I_L559_1060, 3) = iloc(1 + $I_L559_972, 1 + $I_L559_1060, 1)
  559.                      $I_L559_972 = 1 + $I_L559_972
  559.                      if ( $I_L559_972 >= $F_A58 ) exit
  559.                   enddo
  559.                   $I_L559_1060 = 1 + $I_L559_1060
  559.                   if ( $I_L559_1060 >= $F_A57 ) exit
  559.                enddo
  559.             endif
  559.             $F_A59 = kmax
  559.             $F_A60 = ibdim
  559.             if ( and( -$F_A60, -$F_A59 ) < 0 ) then
  559.                $I_L559_1062 = 0
  559.                do
  559.                   $I_L559_974 = 0
  559. !dir$ ivdep
  559.                   do
  559.                      iloc(1 + $I_L559_974, 1 + $I_L559_1062, 4) = iloc(1 + $I_L559_974, 1 + $I_L559_1062, 1)
  559.                      $I_L559_974 = 1 + $I_L559_974
  559.                      if ( $I_L559_974 >= $F_A60 ) exit
  559.                   enddo
  559.                   $I_L559_1062 = 1 + $I_L559_1062
  559.                   if ( $I_L559_1062 >= $F_A59 ) exit
  559.                enddo
  559.             endif
  559.             $F_A61 = kmax
  559.             $F_A62 = ibdim
  559.             if ( and( -$F_A62, -$F_A61 ) < 0 ) then
  559.                $I_L559_1064 = 0
  559.                do
  559.                   $I_L559_976 = 0
  559. !dir$ ivdep
  559.                   do
  559.                      ulondp(1 + $I_L559_976, 1 + $I_L559_1064, 2) = ulondp(1 + $I_L559_976, 1 + $I_L559_1064, 1)
  559.                      $I_L559_976 = 1 + $I_L559_976
  559.                      if ( $I_L559_976 >= $F_A62 ) exit
  559.                   enddo
  559.                   $I_L559_1064 = 1 + $I_L559_1064
  559.                   if ( $I_L559_1064 >= $F_A61 ) exit
  559.                enddo
  559.             endif
  559.             $F_A63 = kmax
  559.             $F_A64 = ibdim
  559.             if ( and( -$F_A64, -$F_A63 ) < 0 ) then
  559.                $I_L559_1066 = 0
  559.                do
  559.                   $I_L559_978 = 0
  559. !dir$ ivdep
  559.                   do
  559.                      ulondp(1 + $I_L559_978, 1 + $I_L559_1066, 3) = ulondp(1 + $I_L559_978, 1 + $I_L559_1066, 1)
  559.                      $I_L559_978 = 1 + $I_L559_978
  559.                      if ( $I_L559_978 >= $F_A64 ) exit
  559.                   enddo
  559.                   $I_L559_1066 = 1 + $I_L559_1066
  559.                   if ( $I_L559_1066 >= $F_A63 ) exit
  559.                enddo
  559.             endif
  559.             $F_A65 = kmax
  559.             $F_A66 = ibdim
  559.             if ( and( -$F_A66, -$F_A65 ) < 0 ) then
  559.                $I_L559_1068 = 0
  559.                do
  559.                   $I_L559_980 = 0
  559. !dir$ ivdep
  559.                   do
  559.                      ulondp(1 + $I_L559_980, 1 + $I_L559_1068, 4) = ulondp(1 + $I_L559_980, 1 + $I_L559_1068, 1)
  559.                      $I_L559_980 = 1 + $I_L559_980
  559.                      if ( $I_L559_980 >= $F_A66 ) exit
  559.                   enddo
  559.                   $I_L559_1068 = 1 + $I_L559_1068
  559.                   if ( $I_L559_1068 >= $F_A65 ) exit
  559.                enddo
  559.             endif
  559.          endif
  559.          kloc(1) = _copyout( kloc )
  559.          jloc(1) = _copyout( jloc )
  559.          iloc(1) = _copyout( iloc )
  559.          usigdp(1) = _copyout( usigdp )
  559.          ulatdp(1) = _copyout( ulatdp )
  559.          ulondp(1) = _copyout( ulondp )
  559.          (usig%base_addr)(1, jb, 0) = _copyout( usig )
  559.          (ulat%base_addr)(1, jb, 0) = _copyout( ulat )
  559.          (ulon%base_addr)(1, jb, 0) = _copyout( ulon )
  567.          call interpcublin3d( fint(1), (fgumm%base_addr)(fgumm%dim_1%LB, fgumm%dim_2%LB, fgumm%dim_3%LB, 0), .false., ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, -1.0, .true., ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), .false. )
  579.          if ( kmax > 0 ) then
  581.             $SC_fgqmm_I123 = fgqmm%dim_1%EX
  581.             $SC_fgqmm_I124 = fgqmm%dim_1%LB
  581.             $SC_fgqmm_I126 = fgqmm%dim_2%SM
  581.             $SC_fgqmm_I125 = fgqmm%dim_2%EX
  581.             $SC_fgqmm_I127 = fgqmm%dim_2%LB
  581.             $SC_fgqmm_I129 = fgqmm%dim_3%SM
  581.             $SC_fgqmm_I128 = fgqmm%dim_3%EX
  581.             $SC_fgqmm_I130 = fgqmm%dim_3%LB
  580.             if ( ibdim > 0 ) then
  579.                $I_L579_1040 = 0
  579.                do
  580.                   $I_L580_910 = 0
  580. !dir$ ivdep
  580.                   do
  581.                      (fgqmm%base_addr)(1 + $I_L580_910, 1 + $I_L579_1040, jb, 0) = fint(1 + $I_L580_910 + ibdim * $I_L579_1040)
  582.                      $I_L580_910 = 1 + $I_L580_910
  580.                      if ( $I_L580_910 >= ibdim ) exit
  580.                   enddo
  583.                   $I_L579_1040 = 1 + $I_L579_1040
  582.                   if ( $I_L579_1040 >= kmax ) exit
  582.                enddo
  582.             endif
  582.          endif
  584.          call interpcublin3d( fint(1), (fgvmm%base_addr)(fgvmm%dim_1%LB, fgvmm%dim_2%LB, fgvmm%dim_3%LB, 0), .true., ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, -1.0, .false., ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), .false. )
  590.          if ( kmax > 0 ) then
  592.             $SC_fgtmm_I131 = fgtmm%dim_1%EX
  592.             $SC_fgtmm_I132 = fgtmm%dim_1%LB
  592.             $SC_fgtmm_I134 = fgtmm%dim_2%SM
  592.             $SC_fgtmm_I133 = fgtmm%dim_2%EX
  592.             $SC_fgtmm_I135 = fgtmm%dim_2%LB
  592.             $SC_fgtmm_I137 = fgtmm%dim_3%SM
  592.             $SC_fgtmm_I136 = fgtmm%dim_3%EX
  592.             $SC_fgtmm_I138 = fgtmm%dim_3%LB
  591.             if ( ibdim > 0 ) then
  590.                $I_L590_1042 = 0
  590.                do
  591.                   $I_L591_912 = 0
  591. !dir$ ivdep
  591.                   do
  592.                      (fgtmm%base_addr)(1 + $I_L591_912, 1 + $I_L590_1042, jb, 0) = fint(1 + $I_L591_912 + ibdim * $I_L590_1042)
  593.                      $I_L591_912 = 1 + $I_L591_912
  591.                      if ( $I_L591_912 >= ibdim ) exit
  591.                   enddo
  594.                   $I_L590_1042 = 1 + $I_L590_1042
  593.                   if ( $I_L590_1042 >= kmax ) exit
  593.                enddo
  593.             endif
  593.          endif
  595.          call interpcublin3d( fint(1), (fgqp%base_addr)(fgqp%dim_1%LB, fgqp%dim_2%LB, fgqp%dim_3%LB, 0), .false., ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, 1.0, .false., ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), .false. )
  602.          if ( fa /= 0.0 ) then
  602.             $F_A67 = fgqdm%dim_2%EX
  602.             $F_A68 = fgqdm%dim_1%EX
  602.             if ( and( -$F_A68, -$F_A67 ) < 0 ) then
  602.                $SC_fgqdm_I527 = fgqdm%dim_1%EX
  602.                $I_L602_1070 = 0
  602.                do
  602.                   $SC_fgqd_I459 = fgqd%dim_1%LB
  602.                   $I_L602_982 = 0
  602. !dir$ ivdep
  602.                   do
  602.                      (fgqdm%base_addr)(fgqdm%dim_1%LB + $I_L602_982, fgqdm%dim_2%LB + $I_L602_1070, jb, 0) = -5.0e-1 * (fgqd%base_addr)($SC_fgqd_I459 + $I_L602_982, fgqd%dim_2%LB + $I_L602_1070, jb, 0)
  602.                      $I_L602_982 = 1 + $I_L602_982
  602.                      if ( $I_L602_982 >= $F_A68 ) exit
  602.                   enddo
  602.                   $I_L602_1070 = 1 + $I_L602_1070
  602.                   if ( $I_L602_1070 >= $F_A67 ) exit
  602.                enddo
  602.             endif
  602.          endif
  603.          if ( kmax > 0 ) then
  605.             $SC_fgqd_I139 = fgqd%dim_1%EX
  605.             $SC_fgqd_I140 = fgqd%dim_1%LB
  605.             $SC_fgqd_I142 = fgqd%dim_2%SM
  605.             $SC_fgqd_I141 = fgqd%dim_2%EX
  605.             $SC_fgqd_I143 = fgqd%dim_2%LB
  605.             $SC_fgqd_I145 = fgqd%dim_3%SM
  605.             $SC_fgqd_I144 = fgqd%dim_3%EX
  605.             $SC_fgqd_I146 = fgqd%dim_3%LB
  604.             if ( ibdim > 0 ) then
  603.                $I_L603_1044 = 0
  603.                do
  604.                   $I_L604_914 = 0
  604. !dir$ ivdep
  604.                   do
  605.                      (fgqd%base_addr)(1 + $I_L604_914, 1 + $I_L603_1044, jb, 0) = fint(1 + $I_L604_914 + ibdim * $I_L603_1044) + dt2 * (fgqd%base_addr)(1 + $I_L604_914, 1 + $I_L603_1044, jb, 0)
  606.                      $I_L604_914 = 1 + $I_L604_914
  604.                      if ( $I_L604_914 >= ibdim ) exit
  604.                   enddo
  607.                   $I_L603_1044 = 1 + $I_L603_1044
  606.                   if ( $I_L603_1044 >= kmax ) exit
  606.                enddo
  606.             endif
  606.          endif
  608.          call interpcublin3d( fint(1), (fgtmpp%base_addr)(fgtmpp%dim_1%LB, fgtmpp%dim_2%LB, fgtmpp%dim_3%LB, 0), .true., ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, 1.0, .false., ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), .false. )
  614.          if ( fa /= 0.0 ) then
  614.             $F_A69 = fgtdm%dim_2%EX
  614.             $F_A70 = fgtdm%dim_1%EX
  614.             if ( and( -$F_A70, -$F_A69 ) < 0 ) then
  614.                $SC_fgtdm_I528 = fgtdm%dim_1%EX
  614.                $I_L614_1072 = 0
  614.                do
  614.                   $SC_fgtd_I433 = fgtd%dim_1%LB
  614.                   $I_L614_984 = 0
  614. !dir$ ivdep
  614.                   do
  614.                      (fgtdm%base_addr)(fgtdm%dim_1%LB + $I_L614_984, fgtdm%dim_2%LB + $I_L614_1072, jb, 0) = -5.0e-1 * (fgtd%base_addr)($SC_fgtd_I433 + $I_L614_984, fgtd%dim_2%LB + $I_L614_1072, jb, 0)
  614.                      $I_L614_984 = 1 + $I_L614_984
  614.                      if ( $I_L614_984 >= $F_A70 ) exit
  614.                   enddo
  614.                   $I_L614_1072 = 1 + $I_L614_1072
  614.                   if ( $I_L614_1072 >= $F_A69 ) exit
  614.                enddo
  614.             endif
  614.          endif
  615.          if ( kmax > 0 ) then
  617.             $SC_fgtd_I147 = fgtd%dim_1%EX
  617.             $SC_fgtd_I148 = fgtd%dim_1%LB
  617.             $SC_fgtd_I150 = fgtd%dim_2%SM
  617.             $SC_fgtd_I149 = fgtd%dim_2%EX
  617.             $SC_fgtd_I151 = fgtd%dim_2%LB
  617.             $SC_fgtd_I153 = fgtd%dim_3%SM
  617.             $SC_fgtd_I152 = fgtd%dim_3%EX
  617.             $SC_fgtd_I154 = fgtd%dim_3%LB
  616.             if ( ibdim > 0 ) then
  615.                $I_L615_1046 = 0
  615.                do
  616.                   $I_L616_916 = 0
  616. !dir$ ivdep
  616.                   do
  617.                      (fgtd%base_addr)(1 + $I_L616_916, 1 + $I_L615_1046, jb, 0) = fint(1 + $I_L616_916 + ibdim * $I_L615_1046) + dt2 * (fgtd%base_addr)(1 + $I_L616_916, 1 + $I_L615_1046, jb, 0)
  618.                      $I_L616_916 = 1 + $I_L616_916
  616.                      if ( $I_L616_916 >= ibdim ) exit
  616.                   enddo
  619.                   $I_L615_1046 = 1 + $I_L615_1046
  618.                   if ( $I_L615_1046 >= kmax ) exit
  618.                enddo
  618.             endif
  618.          endif
  623.          $t_S22 = nscalars
  623.          if ( nscalars > 0 ) then
  623.             $I_L623_918 = 0
  623.             do
  624.                call interpcublin3d( (fgpass_scalars%base_addr)(1, 1, jb, 1 + $I_L623_918, inew, 0), (fgpass_scalars%base_addr)(1, 1, 1, 1 + $I_L623_918, iold, 0), .true., ulondp(1), ulatdp(1), usigdp(1), iloc(1), jloc(1), kloc(1), ibdim, 1.0, .false., ip(1), jn(1), s1(1), s2(1), s3(1), s4(1), .true. )
  631.                $I_L623_918 = 1 + $I_L623_918
  631.                if ( $I_L623_918 >= $t_S22 ) exit
  631.             enddo
  631.          endif
  635.          tm$440 = loc( (ulonm2d%base_addr)(1, jb, 0) )
  635.          ulonm = _copyin( (ulonm2d%base_addr)(1, jb, 0) )
  635.          tm$442 = loc( (ulatm2d%base_addr)(1, jb, 0) )
  635.          ulatm = _copyin( (ulatm2d%base_addr)(1, jb, 0) )
  635.          tm$444 = loc( (ulon2d%base_addr)(1, jb, 0) )
  635.          ulon = _copyin( (ulon2d%base_addr)(1, jb, 0) )
  635.          tm$446 = loc( (ulat2d%base_addr)(1, jb, 0) )
  635.          ulat = _copyin( (ulat2d%base_addr)(1, jb, 0) )
  635.          tm$448 = loc( ulondp(1) )
  635.          ulondp = _copyin( ulondp(1) )
  635.          tm$450 = loc( iloc(1) )
  635.          iloc = _copyin( iloc(1) )
  635.          t$11 = ibdim
  635.          t$169 = max( 0, ibdim )
  635.          t$170 = max( 0, ibdim )
  635.          t$171 = 4 * max( 0, ibdim )
  635.          t$12 = ibmax
  635.          t$172 = max( 0, ibmax )
  635.          t$175 = 8 * max( 0, ibmax )
  635.          t$176 = 8 * ( 7 + 8 * max( 0, ibmax ) ) / 8
  635.          t$178 = t$176 + 8 * max( 0, ibmax )
  635.          t$173 = int( _alloc( t$176 + 8 * max( 0, ibmax ) ), 8 )
  635.          t$174 = t$173
  635.          t$177 = t$176 + t$173
  635.          klats = 1
  635.          if ( reducedgrid /= .false. ) then
  635.             klats = 2
  635.          endif
  635.          if ( nit > 0 ) then
  635.             $SC_ibperij_I165 = ibperij%dim_1%EX
  635.             $SC_ibperij_I166 = ibperij%dim_1%LB
  635.             $SC_ibperij_I167 = ibperij%dim_2%EX
  635.             $SC_dellon_I118 = dellon%dim_1%EX
  635.             $SC_dellon_I119 = dellon%dim_1%LB
  635.             $SC_dellon_I121 = dellon%dim_2%SM
  635.             $SC_dellon_I120 = dellon%dim_2%EX
  635.             $SC_dellon_I122 = dellon%dim_2%LB
  635.             $SC_delphi_I113 = delphi%dim_1%EX
  635.             $SC_delphi_I114 = delphi%dim_1%LB
  635.             $SC_delphi_I116 = delphi%dim_2%SM
  635.             $SC_delphi_I115 = delphi%dim_2%EX
  635.             $SC_delphi_I117 = delphi%dim_2%LB
  635.             $SC_phi_I108 = phi%dim_1%EX
  635.             $SC_phi_I109 = phi%dim_1%LB
  635.             $SC_phi_I111 = phi%dim_2%SM
  635.             $SC_phi_I110 = phi%dim_2%EX
  635.             $SC_phi_I112 = phi%dim_2%LB
  635.             $SC_jphiref_I103 = jphiref%dim_1%EX
  635.             $SC_jphiref_I104 = jphiref%dim_1%LB
  635.             $SC_jphiref_I106 = jphiref%dim_2%SM
  635.             $SC_jphiref_I105 = jphiref%dim_2%EX
  635.             $SC_jphiref_I107 = jphiref%dim_2%LB
  635.             $SC_fgvmmean_I160 = fgvmmean%dim_1%EX
  635.             $SC_fgvmmean_I161 = fgvmmean%dim_1%LB
  635.             $SC_fgvmmean_I163 = fgvmmean%dim_2%SM
  635.             $SC_fgvmmean_I162 = fgvmmean%dim_2%EX
  635.             $SC_fgvmmean_I164 = fgvmmean%dim_2%LB
  635.             $SC_fgummean_I155 = fgummean%dim_1%EX
  635.             $SC_fgummean_I156 = fgummean%dim_1%LB
  635.             $SC_fgummean_I158 = fgummean%dim_2%SM
  635.             $SC_fgummean_I157 = fgummean%dim_2%EX
  635.             $SC_fgummean_I159 = fgummean%dim_2%LB
  635.             $I_L635_1104 = 0
  635.             do
  635.                tm$460 = loc( ulondp(1, 1) )
  635.                ulondp = _copyin( ulondp(1, 1) )
  635.                tm$462 = loc( iloc(1, 1) )
  635.                iloc = _copyin( iloc(1, 1) )
  635.                t$33 = ibdim
  635.                t$254 = max( 0, ibdim )
  635.                t$255 = max( 0, ibdim )
  635.                t$256 = 4 * max( 0, ibdim )
  635.                if ( klats == 4 ) then
  635.                   kp(1) = -1
  635.                   kp(2) = 0
  635.                   kp(3) = 1
  635.                   kp(4) = 2
  635.                else
  635.                   kp(1) = 0
  635.                   kp(2) = 1
  635.                endif
  635.                if ( ibdim > 0 ) then
  635.                   $I_L635_920 = 0
  635. !dir$ ivdep
  635.                   do
  635.                      ik = int( ( 1.0/delphiref * ( 1.570796326794895 + ulat(1 + $I_L635_920) ) ) )
  635.                      $jloc_WR0_R4 = (jphiref%base_addr)(1 + $I_L635_920, ik, 0)
  635.                      jloc(1 + $I_L635_920) = $jloc_WR0_R4
  635.                      if ( ulat(1 + $I_L635_920) > (phi%base_addr)(1 + $I_L635_920, 1 + $jloc_WR0_R4, 0) ) then
  635.                         $jloc_WR0_R4 = 1 + $jloc_WR0_R4
  635.                         jloc(1 + $I_L635_920) = $jloc_WR0_R4
  635.                      endif
  635.                      ulatdp(1 + $I_L635_920) = ( 1.0/(delphi%base_addr)(1 + $I_L635_920, $jloc_WR0_R4, 0) * ( ulat(1 + $I_L635_920) + -(phi%base_addr)(1 + $I_L635_920, $jloc_WR0_R4, 0) ) )
  635.                      $I_L635_920 = 1 + $I_L635_920
  635.                      if ( $I_L635_920 >= ibdim ) exit
  635.                   enddo
  635.                endif
  635.                if ( klats > 0 ) then
  635.                   if ( ibdim > 0 ) then
  635.                      $I_L635_1098 = 0
  635.                      do
  635.                         $I_L635_1092 = 0
  635.                         do
  635.                            $I_L635_1086 = 0
  635. !dir$ shortloop16
  635. !dir$ blocking_size( 2, 2 )
  635.                            do
  635.                               ks = kp(1 + $I_L635_1086 + 2 * $I_L635_1098)
  635.                               $I_L635_922 = 0
  635. !dir$ ivdep
  635. !dir$ blocking_size( 256, 256 )
  635.                               do
  635.                                  j = 1 + jmax + -jloc(1 + $I_L635_922 + 256 * $I_L635_1092)
  635.                                  $ulondp_WR0_R5 = 1.0 + ( ulon(1 + $I_L635_922 + 256 * $I_L635_1092) * 1.0/(dellon%base_addr)(1 + $I_L635_922 + 256 * $I_L635_1092, j + -ks, 0) )
  635.                                  iloc(1 + $I_L635_922 + 256 * $I_L635_1092, 1 + $I_L635_1086 + 2 * $I_L635_1098) = int( $ulondp_WR0_R5 )
  635.                                  $ulondp_WR0_R5 = $ulondp_WR0_R5 + ( -( int( $ulondp_WR0_R5 ) ) )
  635.                                  ulondp(1 + $I_L635_922 + 256 * $I_L635_1092, 1 + $I_L635_1086 + 2 * $I_L635_1098) = $ulondp_WR0_R5
  635.                                  $I_L635_922 = 1 + $I_L635_922
  635.                                  if ( $I_L635_922 >= min( ibdim, 256 + 256 * $I_L635_1092 ) + -256 * $I_L635_1092 ) exit
  635.                               enddo
  635.                               $I_L635_1086 = 1 + $I_L635_1086
  635.                               if ( $I_L635_1086 >= min( klats, 2 + 2 * $I_L635_1098 ) + -2 * $I_L635_1098 ) exit
  635.                            enddo
  635.                            $I_L635_1092 = 1 + $I_L635_1092
  635.                            if ( $I_L635_1092 >= 1 + max( 0, -1 + _rsh( 255 + ibdim, 8 ) ) ) exit
  635.                         enddo
  635.                         $I_L635_1098 = 1 + $I_L635_1098
  635.                         if ( $I_L635_1098 >= 1 + max( 0, -1 + _rsh( 1 + klats, 1 ) ) ) exit
  635.                      enddo
  635.                   endif
  635.                endif
  635.                if ( klats == 1 ) then
  635.                   $F_A71 = ibdim
  635.                   if ( ibdim > 0 ) then
  635.                      $I_L635_986 = 0
  635. !dir$ ivdep
  635.                      do
  635.                         iloc(1 + $I_L635_986, 2) = iloc(1 + $I_L635_986, 1)
  635.                         $I_L635_986 = 1 + $I_L635_986
  635.                         if ( $I_L635_986 >= $F_A71 ) exit
  635.                      enddo
  635.                   endif
  635.                   $F_A72 = ibdim
  635.                   if ( ibdim > 0 ) then
  635.                      $I_L635_988 = 0
  635. !dir$ ivdep
  635.                      do
  635.                         iloc(1 + $I_L635_988, 3) = iloc(1 + $I_L635_988, 1)
  635.                         $I_L635_988 = 1 + $I_L635_988
  635.                         if ( $I_L635_988 >= $F_A72 ) exit
  635.                      enddo
  635.                   endif
  635.                   $F_A73 = ibdim
  635.                   if ( ibdim > 0 ) then
  635.                      $I_L635_990 = 0
  635. !dir$ ivdep
  635.                      do
  635.                         iloc(1 + $I_L635_990, 4) = iloc(1 + $I_L635_990, 1)
  635.                         $I_L635_990 = 1 + $I_L635_990
  635.                         if ( $I_L635_990 >= $F_A73 ) exit
  635.                      enddo
  635.                   endif
  635.                   $F_A74 = ibdim
  635.                   if ( ibdim > 0 ) then
  635.                      $I_L635_992 = 0
  635. !dir$ ivdep
  635.                      do
  635.                         ulondp(1 + $I_L635_992, 2) = ulondp(1 + $I_L635_992, 1)
  635.                         $I_L635_992 = 1 + $I_L635_992
  635.                         if ( $I_L635_992 >= $F_A74 ) exit
  635.                      enddo
  635.                   endif
  635.                   $F_A75 = ibdim
  635.                   if ( ibdim > 0 ) then
  635.                      $I_L635_994 = 0
  635. !dir$ ivdep
  635.                      do
  635.                         ulondp(1 + $I_L635_994, 3) = ulondp(1 + $I_L635_994, 1)
  635.                         $I_L635_994 = 1 + $I_L635_994
  635.                         if ( $I_L635_994 >= $F_A75 ) exit
  635.                      enddo
  635.                   endif
  635.                   $F_A76 = ibdim
  635.                   if ( ibdim > 0 ) then
  635.                      $I_L635_996 = 0
  635. !dir$ ivdep
  635.                      do
  635.                         ulondp(1 + $I_L635_996, 4) = ulondp(1 + $I_L635_996, 1)
  635.                         $I_L635_996 = 1 + $I_L635_996
  635.                         if ( $I_L635_996 >= $F_A76 ) exit
  635.                      enddo
  635.                   endif
  635.                endif
  635.                iloc(1, 1) = _copyout( iloc )
  635.                ulondp(1, 1) = _copyout( ulondp )
  635.                tm$476 = loc( (fgummean%base_addr)($SC_fgummean_I156, $SC_fgummean_I159, 0) )
  635.                u = _copyin( (fgummean%base_addr)($SC_fgummean_I156, $SC_fgummean_I159, 0) )
  635.                tm$478 = loc( (fgvmmean%base_addr)($SC_fgvmmean_I161, $SC_fgvmmean_I164, 0) )
  635.                v = _copyin( (fgvmmean%base_addr)($SC_fgvmmean_I161, $SC_fgvmmean_I164, 0) )
  635.                tm$480 = loc( ulondp(1, 1) )
  635.                ulondp = _copyin( ulondp(1, 1) )
  635.                tm$482 = loc( iloc(1, 1) )
  635.                iloc = _copyin( iloc(1, 1) )
  635.                t$39 = ibmax
  635.                t$40 = jbmax_ext
  635.                t$269 = max( 0, ibmax )
  635.                t$270 = max( 0, ibmax )
  635.                t$271 = max( 0, jbmax_ext )
  635.                t$272 = max( 0, ibmax ) * max( 0, jbmax_ext )
  635.                t$38 = ibdim
  635.                t$273 = max( 0, ibdim )
  635.                t$274 = max( 0, ibdim )
  635.                t$275 = 2 * max( 0, ibdim )
  635.                t$278 = 8 * max( 0, ibmax )
  635.                t$279 = 8 * ( 7 + 8 * max( 0, ibmax ) ) / 8
  635.                t$281 = t$279 + 8 * max( 0, ibmax )
  635.                t$276 = int( _alloc( t$279 + 8 * max( 0, ibmax ) ), 8 )
  635.                t$277 = t$276
  635.                t$280 = t$279 + t$276
  635.                if ( ibdim > 0 ) then
  635.                   $I_L635_924 = 0
  635. !dir$ ivdep
  635.                   do
  635.                      $jp_S27 = 1 + jmax + -jloc(1 + $I_L635_924)
  635.                      s1(1 + $I_L635_924) = 1.0
  635.                      s2(1 + $I_L635_924) = 1.0
  635.                      if ( jmax + -$jp_S27 == -1 ) then
  635.                         s1(1 + $I_L635_924) = -1.0
  635.                      endif
  635.                      if ( $jp_S27 == 1 ) then
  635.                         s2(1 + $I_L635_924) = -1.0
  635.                      endif
  635.                      $I_L635_924 = 1 + $I_L635_924
  635.                      if ( $I_L635_924 >= ibdim ) exit
  635.                   enddo
  635.                   $SC_ibperij_I168 = ibperij%dim_2%SM
  635.                   $I_L635_926 = 0
  635. !dir$ ivdep
  635.                   do
  635.                      jp = 1 + jmax + -jloc(1 + $I_L635_926)
  635.                      i1 = (ibperij%base_addr)(iloc(1 + $I_L635_926, 1), jp, 0)
  635.                      i2 = (ibperij%base_addr)(iloc(1 + $I_L635_926, 2), -1 + jp, 0)
  635.                      i3 = (ibperij%base_addr)(1 + iloc(1 + $I_L635_926, 1), jp, 0)
  635.                      i4 = (ibperij%base_addr)(1 + iloc(1 + $I_L635_926, 2), -1 + jp, 0)
  635.                      j1 = (jbperij%base_addr)(iloc(1 + $I_L635_926, 1), jp, 0)
  635.                      j2 = (jbperij%base_addr)(iloc(1 + $I_L635_926, 2), -1 + jp, 0)
  635.                      j3 = (jbperij%base_addr)(1 + iloc(1 + $I_L635_926, 1), jp, 0)
  635.                      j4 = (jbperij%base_addr)(1 + iloc(1 + $I_L635_926, 2), -1 + jp, 0)
  635.                      f1 = s1(1 + $I_L635_926) * ( u(i1, j1) + ulondp(1 + $I_L635_926, 1) * ( u(i3, j3) + -u(i1, j1) ) )
  635.                      g1 = s1(1 + $I_L635_926) * ( v(i1, j1) + ulondp(1 + $I_L635_926, 1) * ( v(i3, j3) + -v(i1, j1) ) )
  635.                      f2 = s2(1 + $I_L635_926) * ( u(i2, j2) + ulondp(1 + $I_L635_926, 2) * ( u(i4, j4) + -u(i2, j2) ) )
  635.                      g2 = s2(1 + $I_L635_926) * ( v(i2, j2) + ulondp(1 + $I_L635_926, 2) * ( v(i4, j4) + -v(i2, j2) ) )
  635.                      uint(1 + $I_L635_926) = f1 + ulatdp(1 + $I_L635_926) * ( f2 + -f1 )
  635.                      vint(1 + $I_L635_926) = g1 + ulatdp(1 + $I_L635_926) * ( g2 + -g1 )
  635.                      $I_L635_926 = 1 + $I_L635_926
  635.                      if ( $I_L635_926 >= ibdim ) exit
  635.                   enddo
  635.                endif
  635.                _free( t$276 )
  635.                iloc(1, 1) = _copyout( iloc )
  635.                ulondp(1, 1) = _copyout( ulondp )
  635.                (fgvmmean%base_addr)($SC_fgvmmean_I161, $SC_fgvmmean_I164, 0) = _copyout( v )
  635.                (fgummean%base_addr)($SC_fgummean_I156, $SC_fgummean_I159, 0) = _copyout( u )
  635.                tm$502 = loc( (coslon%base_addr)(1, jb, 0) )
  635.                coslon = _copyin( (coslon%base_addr)(1, jb, 0) )
  635.                tm$504 = loc( (sinlon%base_addr)(1, jb, 0) )
  635.                sinlon = _copyin( (sinlon%base_addr)(1, jb, 0) )
  635.                tm$506 = loc( (coslat%base_addr)(1, jb, 0) )
  635.                coslat = _copyin( (coslat%base_addr)(1, jb, 0) )
  635.                tm$508 = loc( (sinlat%base_addr)(1, jb, 0) )
  635.                sinlat = _copyin( (sinlat%base_addr)(1, jb, 0) )
  635.                tm$510 = loc( (fgumean%base_addr)(1, jb, 0) )
  635.                um = _copyin( (fgumean%base_addr)(1, jb, 0) )
  635.                tm$512 = loc( (fgvmean%base_addr)(1, jb, 0) )
  635.                vm = _copyin( (fgvmean%base_addr)(1, jb, 0) )
  635.                t$24 = ibdim
  635.                t$228 = max( 0, ibdim )
  635.                dt2 = 5.0e-1 * delt
  635.                if ( ibdim > 0 ) then
  635.                   $I_L635_928 = 0
  635. !dir$ ivdep
  635.                   do
  635.                      $Coss_P20 = coss( ulonm(1 + $I_L635_928) )
  635.                      $Coss_P21 = coss( ulatm(1 + $I_L635_928) )
  635.                      uh = 5.0e-1 * ( uint(1 + $I_L635_928) + um(1 + $I_L635_928) )
  635.                      vh = 5.0e-1 * ( vint(1 + $I_L635_928) + vm(1 + $I_L635_928) )
  635.                      x = coslat(1 + $I_L635_928) * coslon(1 + $I_L635_928)
  635.                      y = coslat(1 + $I_L635_928) * sinlon(1 + $I_L635_928)
  635.                      z = sinlat(1 + $I_L635_928)
  635.                      b = _recip_sqrt( ( x + -( dt2 * ( -( vh * real( $Coss_P20, 8 ) * cimag( $Coss_P21 ) + uh * cimag( $Coss_P20 ) ) ) ) ) * ( x + -( dt2 * ( -( vh * real( $Coss_P20, 8 ) * cimag( $Coss_P21 ) + uh * cimag( $Coss_P20 ) ) ) ) ) + ( z + -( dt2 * ( vh * real( $Coss_P21, 8 ) ) ) ) * ( z + -( dt2 * ( vh * real( $Coss_P21, 8 ) ) ) ) + ( y + -( dt2 * ( -( vh * cimag( $Coss_P20 ) * cimag( $Coss_P21 ) ) + uh * real( $Coss_P20, 8 ) ) ) ) * ( y + -( dt2 * ( -( vh * cimag( $Coss_P20 ) * cimag( $Coss_P21 ) ) + uh * real( $Coss_P20, 8 ) ) ) ) )
  635.                      xb = ( x + -( dt2 * ( -( vh * real( $Coss_P20, 8 ) * cimag( $Coss_P21 ) + uh * cimag( $Coss_P20 ) ) ) ) ) * _recip_sqrt( ( x + -( dt2 * ( -( vh * real( $Coss_P20, 8 ) * cimag( $Coss_P21 ) + uh * cimag( $Coss_P20 ) ) ) ) ) * ( x + -( dt2 * ( -( vh * real( $Coss_P20, 8 ) * cimag( $Coss_P21 ) + uh * cimag( $Coss_P20 ) ) ) ) ) + ( z + -( dt2 * ( vh * real( $Coss_P21, 8 ) ) ) ) * ( z + -( dt2 * ( vh * real( $Coss_P21, 8 ) ) ) ) + ( y + -( dt2 * ( -( vh * cimag( $Coss_P20 ) * cimag( $Coss_P21 ) ) + uh * real( $Coss_P20, 8 ) ) ) ) * ( y + -( dt2 * ( -( vh * cimag( $Coss_P20 ) * cimag( $Coss_P21 ) ) + uh * real( $Coss_P20, 8 ) ) ) ) )
  635.                      yb = ( y + -( dt2 * ( -( vh * cimag( $Coss_P20 ) * cimag( $Coss_P21 ) ) + uh * real( $Coss_P20, 8 ) ) ) ) * _recip_sqrt( ( x + -( dt2 * ( -( vh * real( $Coss_P20, 8 ) * cimag( $Coss_P21 ) + uh * cimag( $Coss_P20 ) ) ) ) ) * ( x + -( dt2 * ( -( vh * real( $Coss_P20, 8 ) * cimag( $Coss_P21 ) + uh * cimag( $Coss_P20 ) ) ) ) ) + ( z + -( dt2 * ( vh * real( $Coss_P21, 8 ) ) ) ) * ( z + -( dt2 * ( vh * real( $Coss_P21, 8 ) ) ) ) + ( y + -( dt2 * ( -( vh * cimag( $Coss_P20 ) * cimag( $Coss_P21 ) ) + uh * real( $Coss_P20, 8 ) ) ) ) * ( y + -( dt2 * ( -( vh * cimag( $Coss_P20 ) * cimag( $Coss_P21 ) ) + uh * real( $Coss_P20, 8 ) ) ) ) )
  635.                      $Flat_S34 = atan2( ( b * ( y + -( dt2 * ( -( vh * cimag( $Coss_P20 ) * cimag( $Coss_P21 ) ) + uh * real( $Coss_P20, 8 ) ) ) ) ), xb )
  635.                      ulonm(1 + $I_L635_928) = $Flat_S34
  635.                      zb = ( z + -( dt2 * ( vh * real( $Coss_P21, 8 ) ) ) ) * _recip_sqrt( ( x + -( dt2 * ( -( vh * real( $Coss_P20, 8 ) * cimag( $Coss_P21 ) + uh * cimag( $Coss_P20 ) ) ) ) ) * ( x + -( dt2 * ( -( vh * real( $Coss_P20, 8 ) * cimag( $Coss_P21 ) + uh * cimag( $Coss_P20 ) ) ) ) ) + ( z + -( dt2 * ( vh * real( $Coss_P21, 8 ) ) ) ) * ( z + -( dt2 * ( vh * real( $Coss_P21, 8 ) ) ) ) + ( y + -( dt2 * ( -( vh * cimag( $Coss_P20 ) * cimag( $Coss_P21 ) ) + uh * real( $Coss_P20, 8 ) ) ) ) * ( y + -( dt2 * ( -( vh * cimag( $Coss_P20 ) * cimag( $Coss_P21 ) ) + uh * real( $Coss_P20, 8 ) ) ) ) )
  635.                      if ( $Flat_S34 < 0.0 ) then
  635.                         ulonm(1 + $I_L635_928) = 6.28318530717958 + $Flat_S34
  635.                      endif
  635.                      $Flat_S35 = asin( zb )
  635.                      ulatm(1 + $I_L635_928) = $Flat_S35
  635.                      zm = -z + zb * ( 2.0 * ( x * xb + y * yb + z * zb ) )
  635.                      $Flat_S36 = atan2( ( -y + yb * ( 2.0 * ( x * xb + y * yb + z * zb ) ) ), ( -x + xb * ( 2.0 * ( x * xb + y * yb + z * zb ) ) ) )
  635.                      ulon(1 + $I_L635_928) = $Flat_S36
  635.                      if ( $Flat_S36 < 0.0 ) then
  635.                         ulon(1 + $I_L635_928) = 6.28318530717958 + $Flat_S36
  635.                      endif
  635.                      $Flat_S37 = asin( zm )
  635.                      ulat(1 + $I_L635_928) = $Flat_S37
  635.                      $I_L635_928 = 1 + $I_L635_928
  635.                      if ( $I_L635_928 >= ibdim ) exit
  635.                   enddo
  635.                endif
  635.                (fgvmean%base_addr)(1, jb, 0) = _copyout( vm )
  635.                (fgumean%base_addr)(1, jb, 0) = _copyout( um )
  635.                (sinlat%base_addr)(1, jb, 0) = _copyout( sinlat )
  635.                (coslat%base_addr)(1, jb, 0) = _copyout( coslat )
  635.                (sinlon%base_addr)(1, jb, 0) = _copyout( sinlon )
  635.                (coslon%base_addr)(1, jb, 0) = _copyout( coslon )
  635.                $I_L635_1104 = 1 + $I_L635_1104
  635.                if ( $I_L635_1104 >= nit ) exit
  635.             enddo
  635.          endif
  635.          _free( t$173 )
  635.          iloc(1) = _copyout( iloc )
  635.          ulondp(1) = _copyout( ulondp )
  635.          (ulat2d%base_addr)(1, jb, 0) = _copyout( ulat )
  635.          (ulon2d%base_addr)(1, jb, 0) = _copyout( ulon )
  635.          (ulatm2d%base_addr)(1, jb, 0) = _copyout( ulatm )
  635.          (ulonm2d%base_addr)(1, jb, 0) = _copyout( ulonm )
  643.          tm$522 = loc( (ulon2d%base_addr)(1, jb, 0) )
  643.          ulon = _copyin( (ulon2d%base_addr)(1, jb, 0) )
  643.          tm$524 = loc( (ulat2d%base_addr)(1, jb, 0) )
  643.          ulat = _copyin( (ulat2d%base_addr)(1, jb, 0) )
  643.          tm$526 = loc( ulondp(1) )
  643.          ulondp = _copyin( ulondp(1) )
  643.          tm$528 = loc( iloc(1) )
  643.          iloc = _copyin( iloc(1) )
  643.          t$33 = ibdim
  643.          t$254 = max( 0, ibdim )
  643.          t$255 = max( 0, ibdim )
  643.          t$256 = 4 * max( 0, ibdim )
  643.          if ( klats == 4 ) then
  643.             kp(1) = -1
  643.             kp(2) = 0
  643.             kp(3) = 1
  643.             kp(4) = 2
  643.          else
  643.             kp(1) = 0
  643.             kp(2) = 1
  643.          endif
  643.          if ( ibdim > 0 ) then
  643.             $SC_jphiref_I103 = jphiref%dim_1%EX
  643.             $I_L643_930 = 0
  643. !dir$ ivdep
  643.             do
  643.                ik = int( ( 1.0/delphiref * ( 1.570796326794895 + ulat(1 + $I_L643_930) ) ) )
  643.                $jloc_WR0_R7 = (jphiref%base_addr)(1 + $I_L643_930, ik, 0)
  643.                jloc(1 + $I_L643_930) = $jloc_WR0_R7
  643.                if ( ulat(1 + $I_L643_930) > (phi%base_addr)(1 + $I_L643_930, 1 + $jloc_WR0_R7, 0) ) then
  643.                   $jloc_WR0_R7 = 1 + $jloc_WR0_R7
  643.                   jloc(1 + $I_L643_930) = $jloc_WR0_R7
  643.                endif
  643.                ulatdp(1 + $I_L643_930) = ( ( ulat(1 + $I_L643_930) + -(phi%base_addr)(1 + $I_L643_930, $jloc_WR0_R7, 0) ) * 1.0/(delphi%base_addr)(1 + $I_L643_930, $jloc_WR0_R7, 0) )
  643.                $I_L643_930 = 1 + $I_L643_930
  643.                if ( $I_L643_930 >= ibdim ) exit
  643.             enddo
  643.          endif
  643.          if ( klats > 0 ) then
  643.             $SC_dellon_I118 = dellon%dim_1%EX
  643.             if ( ibdim > 0 ) then
  643.                $I_L643_1100 = 0
  643.                do
  643.                   $I_L643_1094 = 0
  643.                   do
  643.                      $I_L643_1088 = 0
  643. !dir$ shortloop16
  643. !dir$ blocking_size( 2, 2 )
  643.                      do
  643.                         ks = kp(1 + $I_L643_1088 + 2 * $I_L643_1100)
  643.                         $I_L643_932 = 0
  643. !dir$ ivdep
  643. !dir$ blocking_size( 256, 256 )
  643.                         do
  643.                            j = 1 + jmax + -jloc(1 + $I_L643_932 + 256 * $I_L643_1094)
  643.                            $ulondp_WR0_R8 = 1.0 + ( ulon(1 + $I_L643_932 + 256 * $I_L643_1094) * 1.0/(dellon%base_addr)(1 + $I_L643_932 + 256 * $I_L643_1094, j + -ks, 0) )
  643.                            iloc(1 + $I_L643_932 + 256 * $I_L643_1094, 1 + $I_L643_1088 + 2 * $I_L643_1100) = int( $ulondp_WR0_R8 )
  643.                            $ulondp_WR0_R8 = $ulondp_WR0_R8 + ( -( int( $ulondp_WR0_R8 ) ) )
  643.                            ulondp(1 + $I_L643_932 + 256 * $I_L643_1094, 1 + $I_L643_1088 + 2 * $I_L643_1100) = $ulondp_WR0_R8
  643.                            $I_L643_932 = 1 + $I_L643_932
  643.                            if ( $I_L643_932 >= min( ibdim, 256 + 256 * $I_L643_1094 ) + -256 * $I_L643_1094 ) exit
  643.                         enddo
  643.                         $I_L643_1088 = 1 + $I_L643_1088
  643.                         if ( $I_L643_1088 >= min( klats, 2 + 2 * $I_L643_1100 ) + -2 * $I_L643_1100 ) exit
  643.                      enddo
  643.                      $I_L643_1094 = 1 + $I_L643_1094
  643.                      if ( $I_L643_1094 >= 1 + max( 0, -1 + _rsh( 255 + ibdim, 8 ) ) ) exit
  643.                   enddo
  643.                   $I_L643_1100 = 1 + $I_L643_1100
  643.                   if ( $I_L643_1100 >= 1 + max( 0, -1 + _rsh( 1 + klats, 1 ) ) ) exit
  643.                enddo
  643.             endif
  643.          endif
  643.          if ( klats == 1 ) then
  643.             $F_A77 = ibdim
  643.             if ( ibdim > 0 ) then
  643.                $I_L643_998 = 0
  643. !dir$ ivdep
  643.                do
  643.                   iloc(1 + $I_L643_998, 2) = iloc(1 + $I_L643_998, 1)
  643.                   $I_L643_998 = 1 + $I_L643_998
  643.                   if ( $I_L643_998 >= $F_A77 ) exit
  643.                enddo
  643.             endif
  643.             $F_A78 = ibdim
  643.             if ( ibdim > 0 ) then
  643.                $I_L643_1000 = 0
  643. !dir$ ivdep
  643.                do
  643.                   iloc(1 + $I_L643_1000, 3) = iloc(1 + $I_L643_1000, 1)
  643.                   $I_L643_1000 = 1 + $I_L643_1000
  643.                   if ( $I_L643_1000 >= $F_A78 ) exit
  643.                enddo
  643.             endif
  643.             $F_A79 = ibdim
  643.             if ( ibdim > 0 ) then
  643.                $I_L643_1002 = 0
  643. !dir$ ivdep
  643.                do
  643.                   iloc(1 + $I_L643_1002, 4) = iloc(1 + $I_L643_1002, 1)
  643.                   $I_L643_1002 = 1 + $I_L643_1002
  643.                   if ( $I_L643_1002 >= $F_A79 ) exit
  643.                enddo
  643.             endif
  643.             $F_A80 = ibdim
  643.             if ( ibdim > 0 ) then
  643.                $I_L643_1004 = 0
  643. !dir$ ivdep
  643.                do
  643.                   ulondp(1 + $I_L643_1004, 2) = ulondp(1 + $I_L643_1004, 1)
  643.                   $I_L643_1004 = 1 + $I_L643_1004
  643.                   if ( $I_L643_1004 >= $F_A80 ) exit
  643.                enddo
  643.             endif
  643.             $F_A81 = ibdim
  643.             if ( ibdim > 0 ) then
  643.                $I_L643_1006 = 0
  643. !dir$ ivdep
  643.                do
  643.                   ulondp(1 + $I_L643_1006, 3) = ulondp(1 + $I_L643_1006, 1)
  643.                   $I_L643_1006 = 1 + $I_L643_1006
  643.                   if ( $I_L643_1006 >= $F_A81 ) exit
  643.                enddo
  643.             endif
  643.             $F_A82 = ibdim
  643.             if ( ibdim > 0 ) then
  643.                $I_L643_1008 = 0
  643. !dir$ ivdep
  643.                do
  643.                   ulondp(1 + $I_L643_1008, 4) = ulondp(1 + $I_L643_1008, 1)
  643.                   $I_L643_1008 = 1 + $I_L643_1008
  643.                   if ( $I_L643_1008 >= $F_A82 ) exit
  643.                enddo
  643.             endif
  643.          endif
  643.          iloc(1) = _copyout( iloc )
  643.          ulondp(1) = _copyout( ulondp )
  643.          (ulat2d%base_addr)(1, jb, 0) = _copyout( ulat )
  643.          (ulon2d%base_addr)(1, jb, 0) = _copyout( ulon )
  651.          if ( fa /= 0.0 ) then
  651.             $F_A83 = ibdim
  651.             if ( ibdim > 0 ) then
  651.                $SC_fgvdlnp_I484 = fgvdlnp%dim_1%EX
  651.                $I_L651_1010 = 0
  651. !dir$ ivdep
  651.                do
  651.                   (fgvdlnpm%base_addr)(1 + $I_L651_1010, jb, 0) = -5.0e-1 * (fgvdlnp%base_addr)(1 + $I_L651_1010, jb, 0)
  651.                   $I_L651_1010 = 1 + $I_L651_1010
  651.                   if ( $I_L651_1010 >= $F_A83 ) exit
  651.                enddo
  651.             endif
  651.          endif
  652.          call interpcublin2d( fint(1), (fgpsp%base_addr)(fgpsp%dim_1%LB, fgpsp%dim_2%LB, 0), ulondp(1), ulatdp(1), iloc(1), jloc(1), ibdim )
  656.          $F_A84 = ibdim
  656.          if ( ibdim > 0 ) then
  656.             $SC_fgvdlnp_I484 = fgvdlnp%dim_1%EX
  656.             $I_L656_1012 = 0
  656. !dir$ ivdep
  656.             do
  656.                (fgvdlnp%base_addr)(1 + $I_L656_1012, jb, 0) = fint(1 + $I_L656_1012) + dt2 * (fgvdlnp%base_addr)(1 + $I_L656_1012, jb, 0)
  656.                $I_L656_1012 = 1 + $I_L656_1012
  656.                if ( $I_L656_1012 >= $F_A84 ) exit
  656.             enddo
  656.          endif
  656.       enddo
  656.    30 continue
  661.       _mt_barrier( 12, _mt_rw_list(...) )
  662.       tm$543 = loc( (fgqmm%base_addr)(fgqmm%dim_1%LB, fgqmm%dim_2%LB, fgqmm%dim_3%LB, 0) )
  662.       tendu = _copyin( (fgqmm%base_addr)(fgqmm%dim_1%LB, fgqmm%dim_2%LB, fgqmm%dim_3%LB, 0) )
  662.       tm$545 = loc( (fgtmm%base_addr)(fgtmm%dim_1%LB, fgtmm%dim_2%LB, fgtmm%dim_3%LB, 0) )
  662.       tendv = _copyin( (fgtmm%base_addr)(fgtmm%dim_1%LB, fgtmm%dim_2%LB, fgtmm%dim_3%LB, 0) )
  662.       t$64 = ibmax
  662.       t$65 = kmax
  662.       t$66 = jbmax
  662.       t$366 = max( 0, ibmax )
  662.       t$367 = max( 0, ibmax )
  662.       t$368 = max( 0, kmax )
  662.       t$369 = max( 0, kmax ) * max( 0, ibmax )
  662.       t$370 = max( 0, jbmax )
  662.       t$371 = max( 0, kmax ) * max( 0, ibmax ) * max( 0, jbmax )
  662.       $snt_T8 = _mt_single( 13, _mt_rw_list(...) )
  662.       jglob = 0
  662.       $snt_T8 = _mt_endsingle( 13, _mt_rw_list(...), $snt_T8 )
  662.       $SC_longit_I179 = longit%dim_1%EX
  662.       $SC_longit_I180 = longit%dim_1%LB
  662.       $SC_longit_I182 = longit%dim_2%SM
  662.       $SC_longit_I181 = longit%dim_2%EX
  662.       $SC_longit_I183 = longit%dim_2%LB
  662.       $SC_sinlat_I184 = sinlat%dim_1%EX
  662.       $SC_sinlat_I185 = sinlat%dim_1%LB
  662.       $SC_sinlat_I187 = sinlat%dim_2%SM
  662.       $SC_sinlat_I186 = sinlat%dim_2%EX
  662.       $SC_sinlat_I188 = sinlat%dim_2%LB
  662.       $SC_ulatm_I169 = ulatm%dim_1%EX
  662.       $SC_ulatm_I170 = ulatm%dim_1%LB
  662.       $SC_ulatm_I172 = ulatm%dim_2%SM
  662.       $SC_ulatm_I171 = ulatm%dim_2%EX
  662.       $SC_ulatm_I173 = ulatm%dim_2%LB
  662.       $SC_ulonm_I174 = ulonm%dim_1%EX
  662.       $SC_ulonm_I175 = ulonm%dim_1%LB
  662.       $SC_ulonm_I177 = ulonm%dim_2%SM
  662.       $SC_ulonm_I176 = ulonm%dim_2%EX
  662.       $SC_ulonm_I178 = ulonm%dim_2%LB
  662.       $SC_coslat_I2 = coslat%dim_1%EX
  662.       $SC_coslat_I3 = coslat%dim_1%LB
  662.       $SC_coslat_I5 = coslat%dim_2%SM
  662.       $SC_coslat_I4 = coslat%dim_2%EX
  662.       $SC_coslat_I6 = coslat%dim_2%LB
  662.       $SC_ibmaxperjb_I0 = ibmaxperjb%dim_1%EX
  662.       $SC_ibmaxperjb_I1 = ibmaxperjb%dim_1%LB
  662.       if ( kmax > 0 ) then
  661.          do
  662.             $snt_T9 = _mt_critical( 14, _mt_rw_list(...) )
  662.             jglob = 1 + jglob
  662.             jb = jglob
  662.             $snt_T9 = _mt_endcritical( 14, _mt_rw_list(...), $snt_T9 )
  662.             if ( jb > jbmax ) then
  662.                goto 40
  662.             endif
  662.             $SCA_ibmaxperjb_I551 = (ibmaxperjb%base_addr)(jb, 0)
  662.             $I_L662_1114 = 0
  662.             do
  662.                if ( $SCA_ibmaxperjb_I551 > 0 ) then
  662.                   $I_L662_1112 = 0
  662. !dir$ ivdep
  662.                   do
  662.                      $Coss_P22 = coss( (ulatm%base_addr)(1 + $I_L662_1112 + $SCA_ibmaxperjb_I551 * $I_L662_1114, jb, 0) )
  662.                      dlon = (longit%base_addr)(1 + $I_L662_1112, jb, 0) + -(ulonm%base_addr)(1 + $I_L662_1112 + $SCA_ibmaxperjb_I551 * $I_L662_1114, jb, 0)
  662.                      $Coss_P23 = coss( dlon )
  662.                      slat = sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P22 ) ) ), cimag( $Coss_P22 ) )
  662.                      cgca = real( $Coss_P23, 8 ) * (coslat%base_addr)(1 + $I_L662_1112, jb, 0) * real( $Coss_P22, 8 ) + (sinlat%base_addr)(1 + $I_L662_1112, jb, 0) * sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P22 ) ) ), cimag( $Coss_P22 ) )
  662.                      $Flat_S53 = acos( sign( min( 1.0, abs( cgca ) ), cgca ) )
  662.                      sgam = ( 1.0/sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P22 ) ) ), cimag( $Coss_P22 ) ) * ( -( (coslat%base_addr)(1 + $I_L662_1112, jb, 0) * real( $Coss_P23, 8 ) ) + cgca * real( $Coss_P22, 8 ) ) )
  662.                      $cgam_S49 = (coslat%base_addr)(1 + $I_L662_1112, jb, 0) * cimag( $Coss_P23 )
  662.                      $Flat_S50 = atan2( sgam, sign( max( 9.9999999999999995e-21, abs( $cgam_S49 ) ), $cgam_S49 ) )
  662.                      $Coss_P24 = coss( $Flat_S50 )
  662.                      fcalpx = real( $Coss_P22, 8 ) * real( $Coss_P24, 8 ) * cimag( $Coss_P24 )
  662.                      fcalpy = real( $Coss_P22, 8 ) * cimag( $Coss_P24 ) * cimag( $Coss_P24 )
  662.                      $Coss_P25 = coss( $Flat_S53 )
  662.                      $Coss_P26 = coss( -$Flat_S53 )
  662.                      calphm = 1.0 + -( real( $Coss_P26, 8 ) )
  662.                      xm = cimag( $Coss_P26 ) * ( sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P22 ) ) ), cimag( $Coss_P22 ) ) * real( $Coss_P24, 8 ) ) + ( 1.0 + -( real( $Coss_P26, 8 ) ) ) * ( real( $Coss_P22, 8 ) * real( $Coss_P24, 8 ) * cimag( $Coss_P24 ) )
  662.                      ym = real( $Coss_P22, 8 ) + -( cimag( $Coss_P26 ) * ( sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P22 ) ) ), cimag( $Coss_P22 ) ) * cimag( $Coss_P24 ) ) ) + -( ( 1.0 + -( real( $Coss_P26, 8 ) ) ) * ( real( $Coss_P22, 8 ) * cimag( $Coss_P24 ) * cimag( $Coss_P24 ) ) )
  662.                      px = ( 1.0/( xm * xm + ym * ym ) * ( -( tendv(1 + $I_L662_1112, 1 + $I_L662_1114, jb) * ( fcalpx * calphm + cimag( $Coss_P26 ) * ( slat * real( $Coss_P24, 8 ) ) ) ) + tendu(1 + $I_L662_1112, 1 + $I_L662_1114, jb) * ( real( $Coss_P22, 8 ) + -( fcalpy * calphm ) + -( cimag( $Coss_P26 ) * ( slat * cimag( $Coss_P24 ) ) ) ) ) )
  662.                      py = ( 1.0/( xm * xm + ym * ym ) * ( tendu(1 + $I_L662_1112, 1 + $I_L662_1114, jb) * ( cimag( $Coss_P26 ) * ( slat * real( $Coss_P24, 8 ) ) + fcalpx * ( 1.0 + -( real( $Coss_P26, 8 ) ) ) ) + tendv(1 + $I_L662_1112, 1 + $I_L662_1114, jb) * ( real( $Coss_P22, 8 ) + -( cimag( $Coss_P26 ) * ( slat * cimag( $Coss_P24 ) ) ) + -( fcalpy * ( 1.0 + -( real( $Coss_P26, 8 ) ) ) ) ) ) )
  662.                      tendu(1 + $I_L662_1112, 1 + $I_L662_1114, jb) = px * ( real( $Coss_P22, 8 ) + -( ( real( $Coss_P22, 8 ) * cimag( $Coss_P24 ) * cimag( $Coss_P24 ) ) * ( 1.0 + -( real( $Coss_P25, 8 ) ) ) ) + -( cimag( $Coss_P25 ) * ( sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P22 ) ) ), cimag( $Coss_P22 ) ) * cimag( $Coss_P24 ) ) ) ) + py * ( ( real( $Coss_P22, 8 ) * real( $Coss_P24, 8 ) * cimag( $Coss_P24 ) ) * ( 1.0 + -( real( $Coss_P25, 8 ) ) ) + cimag( $Coss_P25 ) * ( sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P22 ) ) ), cimag( $Coss_P22 ) ) * real( $Coss_P24, 8 ) ) )
  662.                      tendv(1 + $I_L662_1112, 1 + $I_L662_1114, jb) = -( px * ( ( real( $Coss_P22, 8 ) * real( $Coss_P24, 8 ) * cimag( $Coss_P24 ) ) * ( 1.0 + -( real( $Coss_P25, 8 ) ) ) + cimag( $Coss_P25 ) * ( sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P22 ) ) ), cimag( $Coss_P22 ) ) * real( $Coss_P24, 8 ) ) ) ) + py * ( real( $Coss_P22, 8 ) + -( ( real( $Coss_P22, 8 ) * cimag( $Coss_P24 ) * cimag( $Coss_P24 ) ) * ( 1.0 + -( real( $Coss_P25, 8 ) ) ) ) + -( cimag( $Coss_P25 ) * ( sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P22 ) ) ), cimag( $Coss_P22 ) ) * cimag( $Coss_P24 ) ) ) )
  662.                      $I_L662_1112 = 1 + $I_L662_1112
  662.                      if ( $I_L662_1112 >= $SCA_ibmaxperjb_I551 ) exit
  662.                   enddo
  662.                endif
  662.                $I_L662_1114 = 1 + $I_L662_1114
  662.                if ( $I_L662_1114 >= kmax ) exit
  662.             enddo
  662.          enddo
  662.       else
  662.          do
  662.             $snt_T9 = _mt_critical( 18, _mt_rw_list(...) )
  662.             jglob = 1 + jglob
  662.             jb = jglob
  662.             $snt_T9 = _mt_endcritical( 18, _mt_rw_list(...), $snt_T9 )
  662.             if ( jb > jbmax ) exit
  662.          enddo
  662.    40    continue
  662.          (fgtmm%base_addr)(fgtmm%dim_1%LB, fgtmm%dim_2%LB, fgtmm%dim_3%LB, 0) = _copyout( tendv )
  662.          (fgqmm%base_addr)(fgqmm%dim_1%LB, fgqmm%dim_2%LB, fgqmm%dim_3%LB, 0) = _copyout( tendu )
  662.       endif
  662.    50 continue
  666.       _mt_barrier( 15, _mt_rw_list(...) )
  667.       $snt_T10 = _mt_single( 16, _mt_rw_list(...) )
  668.       jglob = 0
  669.       $snt_T10 = _mt_endsingle( 16, _mt_rw_list(...), $snt_T10 )
  680.       $SC_fgtmm_I132 = fgtmm%dim_1%LB
  680.       $SC_fgtmm_I134 = fgtmm%dim_2%SM
  680.       $SC_fgtmm_I135 = fgtmm%dim_2%LB
  680.       $SC_fgtmm_I137 = fgtmm%dim_3%SM
  680.       $SC_fgtmm_I136 = fgtmm%dim_3%EX
  680.       $SC_fgtmm_I138 = fgtmm%dim_3%LB
  679.       $SC_fgqmm_I124 = fgqmm%dim_1%LB
  679.       $SC_fgqmm_I126 = fgqmm%dim_2%SM
  679.       $SC_fgqmm_I127 = fgqmm%dim_2%LB
  679.       $SC_fgqmm_I129 = fgqmm%dim_3%SM
  679.       $SC_fgqmm_I128 = fgqmm%dim_3%EX
  679.       $SC_fgqmm_I130 = fgqmm%dim_3%LB
  678.       $SC_fgyv_I72 = fgyv%dim_1%EX
  678.       $SC_fgyv_I73 = fgyv%dim_1%LB
  678.       $SC_fgyv_I75 = fgyv%dim_2%SM
  678.       $SC_fgyv_I74 = fgyv%dim_2%EX
  678.       $SC_fgyv_I76 = fgyv%dim_2%LB
  678.       $SC_fgyv_I78 = fgyv%dim_3%SM
  678.       $SC_fgyv_I77 = fgyv%dim_3%EX
  678.       $SC_fgyv_I79 = fgyv%dim_3%LB
  678.       $SC_fgyvm_I80 = fgyvm%dim_1%EX
  678.       $SC_fgyvm_I81 = fgyvm%dim_1%LB
  678.       $SC_fgyvm_I83 = fgyvm%dim_2%SM
  678.       $SC_fgyvm_I82 = fgyvm%dim_2%EX
  678.       $SC_fgyvm_I84 = fgyvm%dim_2%LB
  678.       $SC_fgyvm_I86 = fgyvm%dim_3%SM
  678.       $SC_fgyvm_I85 = fgyvm%dim_3%EX
  678.       $SC_fgyvm_I87 = fgyvm%dim_3%LB
  677.       $SC_fgyu_I48 = fgyu%dim_1%EX
  677.       $SC_fgyu_I49 = fgyu%dim_1%LB
  677.       $SC_fgyu_I51 = fgyu%dim_2%SM
  677.       $SC_fgyu_I50 = fgyu%dim_2%EX
  677.       $SC_fgyu_I52 = fgyu%dim_2%LB
  677.       $SC_fgyu_I54 = fgyu%dim_3%SM
  677.       $SC_fgyu_I53 = fgyu%dim_3%EX
  677.       $SC_fgyu_I55 = fgyu%dim_3%LB
  677.       $SC_fgyum_I56 = fgyum%dim_1%EX
  677.       $SC_fgyum_I57 = fgyum%dim_1%LB
  677.       $SC_fgyum_I59 = fgyum%dim_2%SM
  677.       $SC_fgyum_I58 = fgyum%dim_2%EX
  677.       $SC_fgyum_I60 = fgyum%dim_2%LB
  677.       $SC_fgyum_I62 = fgyum%dim_3%SM
  677.       $SC_fgyum_I61 = fgyum%dim_3%EX
  677.       $SC_fgyum_I63 = fgyum%dim_3%LB
  677. !dir$ loop_info (automatic) cache_nt( ibmaxperjb )
  677.       do
  671.          $snt_T11 = _mt_critical( 17, _mt_rw_list(...) )
  672.          jglob = 1 + jglob
  673.          $j_S58 = jglob
  674.          $snt_T11 = _mt_endcritical( 17, _mt_rw_list(...), $snt_T11 )
  675.          if ( $j_S58 > jbmax ) goto 60
  677.          if ( fa /= 0.0 ) then
  677.             $F_A85 = $SC_fgyum_I58
  677.             $F_A86 = $SC_fgyum_I56
  677.             if ( and( -$F_A86, -$F_A85 ) < 0 ) then
  677.                $I_L677_1074 = 0
  677.                do
  677.                   $I_L677_1014 = 0
  677. !dir$ ivdep
  677. !dir$ loop_info (automatic) cache_nt( fgyum )
  677.                   do
  677.                      (fgyum%base_addr)($SC_fgyum_I57 + $I_L677_1014, $SC_fgyum_I60 + $I_L677_1074, $j_S58, 0) = -5.0e-1 * (fgyu%base_addr)($SC_fgyu_I49 + $I_L677_1014, $SC_fgyu_I52 + $I_L677_1074, $j_S58, 0)
  677.                      $I_L677_1014 = 1 + $I_L677_1014
  677.                      if ( $I_L677_1014 >= $F_A86 ) exit
  677.                   enddo
  677.                   $I_L677_1074 = 1 + $I_L677_1074
  677.                   if ( $I_L677_1074 >= $F_A85 ) exit
  677.                enddo
  677.             endif
  678.             $F_A87 = $SC_fgyvm_I82
  678.             $F_A88 = $SC_fgyvm_I80
  678.             if ( and( -$F_A88, -$F_A87 ) < 0 ) then
  678.                $I_L678_1076 = 0
  678.                do
  678.                   $I_L678_1016 = 0
  678. !dir$ ivdep
  678. !dir$ loop_info (automatic) cache_nt( fgyvm )
  678.                   do
  678.                      (fgyvm%base_addr)($SC_fgyvm_I81 + $I_L678_1016, $SC_fgyvm_I84 + $I_L678_1076, $j_S58, 0) = -5.0e-1 * (fgyv%base_addr)($SC_fgyv_I73 + $I_L678_1016, $SC_fgyv_I76 + $I_L678_1076, $j_S58, 0)
  678.                      $I_L678_1016 = 1 + $I_L678_1016
  678.                      if ( $I_L678_1016 >= $F_A88 ) exit
  678.                   enddo
  678.                   $I_L678_1076 = 1 + $I_L678_1076
  678.                   if ( $I_L678_1076 >= $F_A87 ) exit
  678.                enddo
  678.             endif
  678.          endif
  679.          $F_A89 = $SC_fgyu_I50
  679.          $F_A90 = $SC_fgyu_I48
  679.          if ( and( -$F_A90, -$F_A89 ) < 0 ) then
  679.             $I_L679_1078 = 0
  679.             do
  679.                $I_L679_1018 = 0
  679. !dir$ ivdep
  679. !dir$ loop_info (automatic) cache_nt( fgqmm )
  679.                do
  679.                   (fgyu%base_addr)($SC_fgyu_I49 + $I_L679_1018, $SC_fgyu_I52 + $I_L679_1078, $j_S58, 0) = (fgqmm%base_addr)($SC_fgqmm_I124 + $I_L679_1018, $SC_fgqmm_I127 + $I_L679_1078, $j_S58, 0) + dt2 * (fgyu%base_addr)($SC_fgyu_I49 + $I_L679_1018, $SC_fgyu_I52 + $I_L679_1078, $j_S58, 0)
  679.                   $I_L679_1018 = 1 + $I_L679_1018
  679.                   if ( $I_L679_1018 >= $F_A90 ) exit
  679.                enddo
  679.                $I_L679_1078 = 1 + $I_L679_1078
  679.                if ( $I_L679_1078 >= $F_A89 ) exit
  679.             enddo
  679.          endif
  680.          $F_A91 = $SC_fgyv_I74
  680.          $F_A92 = $SC_fgyv_I72
  680.          if ( and( -$F_A92, -$F_A91 ) < 0 ) then
  680.             $I_L680_1080 = 0
  680.             do
  680.                $I_L680_1020 = 0
  680. !dir$ ivdep
  680. !dir$ loop_info (automatic) cache_nt( fgtmm )
  680.                do
  680.                   (fgyv%base_addr)($SC_fgyv_I73 + $I_L680_1020, $SC_fgyv_I76 + $I_L680_1080, $j_S58, 0) = (fgtmm%base_addr)($SC_fgtmm_I132 + $I_L680_1020, $SC_fgtmm_I135 + $I_L680_1080, $j_S58, 0) + dt2 * (fgyv%base_addr)($SC_fgyv_I73 + $I_L680_1020, $SC_fgyv_I76 + $I_L680_1080, $j_S58, 0)
  680.                   $I_L680_1020 = 1 + $I_L680_1020
  680.                   if ( $I_L680_1020 >= $F_A92 ) exit
  680.                enddo
  680.                $I_L680_1080 = 1 + $I_L680_1080
  680.                if ( $I_L680_1080 >= $F_A91 ) exit
  680.             enddo
  680.          endif
  681.          $F_A93 = fgwm%dim_2%EX
  681.          $F_A94 = fgwm%dim_1%EX
  681.          if ( and( -$F_A94, -$F_A93 ) < 0 ) then
  681.             $SC_fgw_I530 = fgw%dim_1%LB
  681.             $SC_fgw_I532 = fgw%dim_2%SM
  681.             $SC_fgw_I533 = fgw%dim_2%LB
  681.             $SC_fgw_I535 = fgw%dim_3%SM
  681.             $SC_fgw_I534 = fgw%dim_3%EX
  681.             $SC_fgw_I536 = fgw%dim_3%LB
  681.             $SC_fgwm_I529 = fgwm%dim_1%EX
  681.             $SC_fgwm_I537 = fgwm%dim_1%LB
  681.             $SC_fgwm_I538 = fgwm%dim_2%SM
  681.             $SC_fgwm_I531 = fgwm%dim_2%EX
  681.             $SC_fgwm_I539 = fgwm%dim_2%LB
  681.             $SC_fgwm_I541 = fgwm%dim_3%SM
  681.             $SC_fgwm_I540 = fgwm%dim_3%EX
  681.             $SC_fgwm_I542 = fgwm%dim_3%LB
  681.             $I_L681_1082 = 0
  681.             do
  681.                $I_L681_1022 = 0
  681. !dir$ ivdep
  681. !dir$ loop_info (automatic) cache_nt( fgw, fgwm )
  681.                do
  681.                   (fgwm%base_addr)($SC_fgwm_I537 + $I_L681_1022, $SC_fgwm_I539 + $I_L681_1082, $j_S58, 0) = (fgw%base_addr)($SC_fgw_I530 + $I_L681_1022, $SC_fgw_I533 + $I_L681_1082, $j_S58, 0)
  681.                   $I_L681_1022 = 1 + $I_L681_1022
  681.                   if ( $I_L681_1022 >= $F_A94 ) exit
  681.                enddo
  681.                $I_L681_1082 = 1 + $I_L681_1082
  681.                if ( $I_L681_1082 >= $F_A93 ) exit
  681.             enddo
  681.          endif
  685.          $t_S59 = (ibmaxperjb%base_addr)($j_S58, 0)
  685.          if ( $t_S59 > 0 ) then
  688.             $SC_fgv_I526 = fgv%dim_1%EX
  688.             $SC_fgv_I420 = fgv%dim_1%LB
  688.             $SC_fgv_I421 = fgv%dim_2%SM
  688.             $SC_fgv_I514 = fgv%dim_2%EX
  688.             $SC_fgv_I422 = fgv%dim_2%LB
  688.             $SC_fgv_I424 = fgv%dim_3%SM
  688.             $SC_fgv_I423 = fgv%dim_3%EX
  688.             $SC_fgv_I425 = fgv%dim_3%LB
  687.             $SC_fgu_I544 = fgu%dim_1%EX
  687.             $SC_fgu_I545 = fgu%dim_1%LB
  687.             $SC_fgu_I546 = fgu%dim_2%SM
  687.             $SC_fgu_I543 = fgu%dim_2%EX
  687.             $SC_fgu_I547 = fgu%dim_2%LB
  687.             $SC_fgu_I549 = fgu%dim_3%SM
  687.             $SC_fgu_I548 = fgu%dim_3%EX
  687.             $SC_fgu_I550 = fgu%dim_3%LB
  686.             $SC_coslat_I509 = coslat%dim_1%EX
  686.             $SC_coslat_I510 = coslat%dim_1%LB
  686.             $SC_coslat_I512 = coslat%dim_2%SM
  686.             $SC_coslat_I511 = coslat%dim_2%EX
  686.             $SC_coslat_I513 = coslat%dim_2%LB
  685.             $I_L685_1048 = 0
  685. !dir$ loop_info (automatic) cache_nt( coslat )
  685.             do
  686.                $aux_S61 = 6370000.0 * (coslat%base_addr)(1 + $I_L685_1048, $j_S58, 0)
  687.                $F_A95 = $SC_fgu_I543
  687.                if ( $SC_fgu_I543 > 0 ) then
  687.                   $I_L687_1024 = 0
  687. !dir$ ivdep
  687.                   do
  687.                      (fgu%base_addr)(1 + $I_L685_1048, $SC_fgu_I547 + $I_L687_1024, $j_S58, 0) = $aux_S61 * (fgu%base_addr)(1 + $I_L685_1048, $SC_fgu_I547 + $I_L687_1024, $j_S58, 0)
  687.                      $I_L687_1024 = 1 + $I_L687_1024
  687.                      if ( $I_L687_1024 >= $F_A95 ) exit
  687.                   enddo
  687.                endif
  688.                $F_A96 = $SC_fgv_I514
  688.                if ( $SC_fgv_I514 > 0 ) then
  688.                   $I_L688_1026 = 0
  688. !dir$ ivdep
  688.                   do
  688.                      (fgv%base_addr)(1 + $I_L685_1048, $SC_fgv_I422 + $I_L688_1026, $j_S58, 0) = $aux_S61 * (fgv%base_addr)(1 + $I_L685_1048, $SC_fgv_I422 + $I_L688_1026, $j_S58, 0)
  688.                      $I_L688_1026 = 1 + $I_L688_1026
  688.                      if ( $I_L688_1026 >= $F_A96 ) exit
  688.                   enddo
  688.                endif
  689.                $I_L685_1048 = 1 + $I_L685_1048
  685.                if ( $I_L685_1048 >= $t_S59 ) exit
  685.             enddo
  685.          endif
  689.       enddo
  689.    60 continue
  419.       _free( t$114 )
  692.       return
  692.       end
  692.       
  693.       
  693.       subroutine trajectory_2l( ulonm, ulatm, usig, ulon, ulat, ulondp, ulatdp, usigdp, iloc, jloc, kloc, ibdim, jb, nit, delt, ip, jn )
  693.       t$7 = ibdim
  693.       t$8 = kmax
  716.       t$150 = _zla( 0, ibdim )
  693.       t$151 = _zla( 0, ibdim )
  716.       t$152 = _zla( 0, kmax )
  693.       t$153 = _zla( 0, ibdim ) * _zla( 0, kmax )
  693.       t$9 = ibmax
  713.       t$154 = _zla( 0, ibmax )
  693.       t$155 = _zla( 0, ibmax )
  693.       t$156 = _zla( 0, kmax ) * _zla( 0, ibmax )
  693.       t$157 = _zla( 0, ibdim ) * _zla( 0, kmax )
  693.       t$158 = 4 * _zla( 0, ibdim ) * _zla( 0, kmax )
  693.       t$10 = ( kmax * ibmax )
  727.       t$159 = _zla( 0, ( kmax * ibmax ) )
  727.       t$162 = 8 * _zla( 0, ( kmax * ibmax ) )
  728.       t$163 = 8 * ( 7 + 8 * _zla( 0, ( kmax * ibmax ) ) ) / 8
  728.       t$165 = t$163 + 8 * _zla( 0, ( kmax * ibmax ) )
  729.       t$166 = 8 * ( 7 + t$163 + 8 * _zla( 0, ( kmax * ibmax ) ) ) / 8
  729.       t$168 = t$166 + 8 * _zla( 0, ( kmax * ibmax ) )
  693.       t$160 = int( _alloc( t$166 + 8 * _zla( 0, ( kmax * ibmax ) ) ), 8 )
  727.       t$161 = t$160
  728.       t$164 = t$163 + t$160
  729.       t$167 = t$166 + t$160
  734.       $klats_S4 = 1
  735.       if ( reducedgrid /= .false. ) then
  735.          $klats_S4 = 2
  735.       endif
  736.       if ( nit > 0 ) then
  736.          $I_L736_228 = 0
  736.          do
  742.             tm$567 = loc( ulon(1, 1) )
  742.             ulon = _copyin( ulon(1, 1) )
  742.             tm$569 = loc( ulat(1, 1) )
  742.             ulat = _copyin( ulat(1, 1) )
  742.             tm$571 = loc( ulondp(1, 1, 1) )
  742.             ulondp = _copyin( ulondp(1, 1, 1) )
  742.             tm$573 = loc( iloc(1, 1, 1) )
  742.             iloc = _copyin( iloc(1, 1, 1) )
  742.             t$31 = ibdim
  742.             t$32 = kmax
  742.             t$248 = _zla( 0, ibdim )
  742.             t$249 = _zla( 0, ibdim )
  742.             t$250 = _zla( 0, kmax )
  742.             t$251 = _zla( 0, ibdim ) * _zla( 0, kmax )
  742.             t$252 = _zla( 0, ibdim ) * _zla( 0, kmax )
  742.             t$253 = 4 * _zla( 0, ibdim ) * _zla( 0, kmax )
  742.             if ( $I_L736_228 == 0 ) then
  742.                if ( kmax > 0 ) then
  742.                   $SC_delsigma_I10 = delsigma%dim_1%EX
  742.                   $SC_delsigma_I11 = delsigma%dim_1%LB
  742.                   $SC_delsigma_I13 = delsigma%dim_2%SM
  742.                   $SC_delsigma_I12 = delsigma%dim_2%EX
  742.                   $SC_delsigma_I14 = delsigma%dim_2%LB
  742.                   $SC_ksigref_I5 = ksigref%dim_1%EX
  742.                   $SC_ksigref_I6 = ksigref%dim_1%LB
  742.                   $SC_ksigref_I8 = ksigref%dim_2%SM
  742.                   $SC_ksigref_I7 = ksigref%dim_2%EX
  742.                   $SC_ksigref_I9 = ksigref%dim_2%LB
  742.                   $SC_sigma_I0 = sigma%dim_1%EX
  742.                   $SC_sigma_I1 = sigma%dim_1%LB
  742.                   $SC_sigma_I3 = sigma%dim_2%SM
  742.                   $SC_sigma_I2 = sigma%dim_2%EX
  742.                   $SC_sigma_I4 = sigma%dim_2%LB
  742.                   if ( ibdim > 0 ) then
  742.                      $I_L742_195 = 0
  742. !dir$ blocking_size( 1, 1 )
  742.                      do
  742.                         $I_L742_166 = 0
  742. !dir$ ivdep
  742. !dir$ blocking_size( 256, 256 )
  742.                         do
  742.                            $ik_S3 = int( ( 1.0/delsigref * ( usig(1 + $I_L742_166, 1 + $I_L742_195) + -(sigma%base_addr)(1 + $I_L742_166, 1, 0) ) ) )
  742.                            $kloc_WR0_R0 = (ksigref%base_addr)(1 + $I_L742_166, $ik_S3, 0)
  742.                            kloc(1 + $I_L742_166, 1 + $I_L742_195) = $kloc_WR0_R0
  742.                            if ( usig(1 + $I_L742_166, 1 + $I_L742_195) > (sigma%base_addr)(1 + $I_L742_166, 1 + $kloc_WR0_R0, 0) ) then
  742.                               $kloc_WR0_R0 = 1 + $kloc_WR0_R0
  742.                               kloc(1 + $I_L742_166, 1 + $I_L742_195) = $kloc_WR0_R0
  742.                            endif
  742.                            usigdp(1 + $I_L742_166, 1 + $I_L742_195) = ( 1.0/(delsigma%base_addr)(1 + $I_L742_166, $kloc_WR0_R0, 0) * ( usig(1 + $I_L742_166, 1 + $I_L742_195) + -(sigma%base_addr)(1 + $I_L742_166, $kloc_WR0_R0, 0) ) )
  742.                            $I_L742_166 = 1 + $I_L742_166
  742.                            if ( $I_L742_166 >= ibdim ) exit
  742.                         enddo
  742.                         $I_L742_195 = 1 + $I_L742_195
  742.                         if ( $I_L742_195 >= kmax ) exit
  742.                      enddo
  742.                   endif
  742.                endif
  742.             endif
  742.             if ( $klats_S4 == 4 ) then
  742.                kp(1) = -1
  742.                kp(2) = 0
  742.                kp(3) = 1
  742.                kp(4) = 2
  742.             else
  742.                kp(1) = 0
  742.                kp(2) = 1
  742.             endif
  742.             if ( kmax > 0 ) then
  742.                $SC_delphi_I25 = delphi%dim_1%EX
  742.                $SC_delphi_I26 = delphi%dim_1%LB
  742.                $SC_delphi_I28 = delphi%dim_2%SM
  742.                $SC_delphi_I27 = delphi%dim_2%EX
  742.                $SC_delphi_I29 = delphi%dim_2%LB
  742.                $SC_phi_I20 = phi%dim_1%EX
  742.                $SC_phi_I21 = phi%dim_1%LB
  742.                $SC_phi_I23 = phi%dim_2%SM
  742.                $SC_phi_I22 = phi%dim_2%EX
  742.                $SC_phi_I24 = phi%dim_2%LB
  742.                $SC_jphiref_I15 = jphiref%dim_1%EX
  742.                $SC_jphiref_I16 = jphiref%dim_1%LB
  742.                $SC_jphiref_I18 = jphiref%dim_2%SM
  742.                $SC_jphiref_I17 = jphiref%dim_2%EX
  742.                $SC_jphiref_I19 = jphiref%dim_2%LB
  742.                if ( ibdim > 0 ) then
  742.                   $I_L742_197 = 0
  742.                   do
  742.                      $I_L742_168 = 0
  742. !dir$ ivdep
  742.                      do
  742.                         $ik_S7 = int( ( 1.0/delphiref * ( 1.570796326794895 + ulat(1 + $I_L742_168, 1 + $I_L742_197) ) ) )
  742.                         $jloc_WR0_R1 = (jphiref%base_addr)(1 + $I_L742_168, $ik_S7, 0)
  742.                         jloc(1 + $I_L742_168, 1 + $I_L742_197) = $jloc_WR0_R1
  742.                         if ( ulat(1 + $I_L742_168, 1 + $I_L742_197) > (phi%base_addr)(1 + $I_L742_168, 1 + $jloc_WR0_R1, 0) ) then
  742.                            $jloc_WR0_R1 = 1 + $jloc_WR0_R1
  742.                            jloc(1 + $I_L742_168, 1 + $I_L742_197) = $jloc_WR0_R1
  742.                         endif
  742.                         ulatdp(1 + $I_L742_168, 1 + $I_L742_197) = ( 1.0/(delphi%base_addr)(1 + $I_L742_168, $jloc_WR0_R1, 0) * ( ulat(1 + $I_L742_168, 1 + $I_L742_197) + -(phi%base_addr)(1 + $I_L742_168, $jloc_WR0_R1, 0) ) )
  742.                         $I_L742_168 = 1 + $I_L742_168
  742.                         if ( $I_L742_168 >= ibdim ) exit
  742.                      enddo
  742.                      $I_L742_197 = 1 + $I_L742_197
  742.                      if ( $I_L742_197 >= kmax ) exit
  742.                   enddo
  742.                endif
  742.             endif
  742.             if ( $klats_S4 > 0 ) then
  742.                $SC_dellon_I30 = dellon%dim_1%EX
  742.                $SC_dellon_I31 = dellon%dim_1%LB
  742.                $SC_dellon_I33 = dellon%dim_2%SM
  742.                $SC_dellon_I32 = dellon%dim_2%EX
  742.                $SC_dellon_I34 = dellon%dim_2%LB
  742.                if ( kmax > 0 ) then
  742.                   if ( ibdim > 0 ) then
  742.                      $I_L742_226 = 0
  742. !dir$ unroll 4
  742. !dir$ blocking_size( 1, 1 )
  742.                      do
  742.                         $ks_S11 = kp(1 + $I_L742_226)
  742.                         $I_L742_224 = 0
  742.                         do
  742.                            $I_L742_222 = 0
  742.                            do
  742.                               $I_L742_219 = 0
  742. !dir$ shortloop16
  742. !dir$ blocking_size( 2, 2 )
  742.                               do
  742.                                  $I_L742_170 = 0
  742. !dir$ ivdep
  742. !dir$ blocking_size( 256, 256 )
  742.                                  do
  742.                                     $j_S12 = 1 + jmax + -jloc(1 + $I_L742_170 + 256 * $I_L742_222, 1 + $I_L742_219 + 2 * $I_L742_224)
  742.                                     $ulondp_WR0_R2 = 1.0 + ( ulon(1 + $I_L742_170 + 256 * $I_L742_222, 1 + $I_L742_219 + 2 * $I_L742_224) * 1.0/(dellon%base_addr)(1 + $I_L742_170 + 256 * $I_L742_222, $j_S12 + -$ks_S11, 0) )
  742.                                     iloc(1 + $I_L742_170 + 256 * $I_L742_222, 1 + $I_L742_219 + 2 * $I_L742_224, 1 + $I_L742_226) = int( $ulondp_WR0_R2 )
  742.                                     $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  742.                                     ulondp(1 + $I_L742_170 + 256 * $I_L742_222, 1 + $I_L742_219 + 2 * $I_L742_224, 1 + $I_L742_226) = $ulondp_WR0_R2
  742.                                     $I_L742_170 = 1 + $I_L742_170
  742.                                     if ( $I_L742_170 >= min( ibdim, 256 + 256 * $I_L742_222 ) + -256 * $I_L742_222 ) exit
  742.                                  enddo
  742.                                  $I_L742_219 = 1 + $I_L742_219
  742.                                  if ( $I_L742_219 >= min( kmax, 2 + 2 * $I_L742_224 ) + -2 * $I_L742_224 ) exit
  742.                               enddo
  742.                               $I_L742_222 = 1 + $I_L742_222
  742.                               if ( $I_L742_222 >= 1 + max( 0, -1 + _rsh( 255 + ibdim, 8 ) ) ) exit
  742.                            enddo
  742.                            $I_L742_224 = 1 + $I_L742_224
  742.                            if ( $I_L742_224 >= 1 + max( 0, -1 + _rsh( 1 + kmax, 1 ) ) ) exit
  742.                         enddo
  742.                         $I_L742_226 = 1 + $I_L742_226
  742.                         if ( $I_L742_226 >= $klats_S4 ) exit
  742.                      enddo
  742.                   endif
  742.                endif
  742.             endif
  742.             if ( $klats_S4 == 1 ) then
  742.                $F_A33 = kmax
  742.                $F_A34 = ibdim
  742.                if ( and( -$F_A34, -$F_A33 ) < 0 ) then
  742.                   $I_L742_207 = 0
  742.                   do
  742.                      $I_L742_183 = 0
  742. !dir$ ivdep
  742.                      do
  742.                         iloc(1 + $I_L742_183, 1 + $I_L742_207, 2) = iloc(1 + $I_L742_183, 1 + $I_L742_207, 1)
  742.                         $I_L742_183 = 1 + $I_L742_183
  742.                         if ( $I_L742_183 >= $F_A34 ) exit
  742.                      enddo
  742.                      $I_L742_207 = 1 + $I_L742_207
  742.                      if ( $I_L742_207 >= $F_A33 ) exit
  742.                   enddo
  742.                endif
  742.                $F_A35 = kmax
  742.                $F_A36 = ibdim
  742.                if ( and( -$F_A36, -$F_A35 ) < 0 ) then
  742.                   $I_L742_209 = 0
  742.                   do
  742.                      $I_L742_185 = 0
  742. !dir$ ivdep
  742.                      do
  742.                         iloc(1 + $I_L742_185, 1 + $I_L742_209, 3) = iloc(1 + $I_L742_185, 1 + $I_L742_209, 1)
  742.                         $I_L742_185 = 1 + $I_L742_185
  742.                         if ( $I_L742_185 >= $F_A36 ) exit
  742.                      enddo
  742.                      $I_L742_209 = 1 + $I_L742_209
  742.                      if ( $I_L742_209 >= $F_A35 ) exit
  742.                   enddo
  742.                endif
  742.                $F_A37 = kmax
  742.                $F_A38 = ibdim
  742.                if ( and( -$F_A38, -$F_A37 ) < 0 ) then
  742.                   $I_L742_211 = 0
  742.                   do
  742.                      $I_L742_187 = 0
  742. !dir$ ivdep
  742.                      do
  742.                         iloc(1 + $I_L742_187, 1 + $I_L742_211, 4) = iloc(1 + $I_L742_187, 1 + $I_L742_211, 1)
  742.                         $I_L742_187 = 1 + $I_L742_187
  742.                         if ( $I_L742_187 >= $F_A38 ) exit
  742.                      enddo
  742.                      $I_L742_211 = 1 + $I_L742_211
  742.                      if ( $I_L742_211 >= $F_A37 ) exit
  742.                   enddo
  742.                endif
  742.                $F_A39 = kmax
  742.                $F_A40 = ibdim
  742.                if ( and( -$F_A40, -$F_A39 ) < 0 ) then
  742.                   $I_L742_213 = 0
  742.                   do
  742.                      $I_L742_189 = 0
  742. !dir$ ivdep
  742.                      do
  742.                         ulondp(1 + $I_L742_189, 1 + $I_L742_213, 2) = ulondp(1 + $I_L742_189, 1 + $I_L742_213, 1)
  742.                         $I_L742_189 = 1 + $I_L742_189
  742.                         if ( $I_L742_189 >= $F_A40 ) exit
  742.                      enddo
  742.                      $I_L742_213 = 1 + $I_L742_213
  742.                      if ( $I_L742_213 >= $F_A39 ) exit
  742.                   enddo
  742.                endif
  742.                $F_A41 = kmax
  742.                $F_A42 = ibdim
  742.                if ( and( -$F_A42, -$F_A41 ) < 0 ) then
  742.                   $I_L742_215 = 0
  742.                   do
  742.                      $I_L742_191 = 0
  742. !dir$ ivdep
  742.                      do
  742.                         ulondp(1 + $I_L742_191, 1 + $I_L742_215, 3) = ulondp(1 + $I_L742_191, 1 + $I_L742_215, 1)
  742.                         $I_L742_191 = 1 + $I_L742_191
  742.                         if ( $I_L742_191 >= $F_A42 ) exit
  742.                      enddo
  742.                      $I_L742_215 = 1 + $I_L742_215
  742.                      if ( $I_L742_215 >= $F_A41 ) exit
  742.                   enddo
  742.                endif
  742.                $F_A43 = kmax
  742.                $F_A44 = ibdim
  742.                if ( and( -$F_A44, -$F_A43 ) < 0 ) then
  742.                   $I_L742_217 = 0
  742.                   do
  742.                      $I_L742_193 = 0
  742. !dir$ ivdep
  742.                      do
  742.                         ulondp(1 + $I_L742_193, 1 + $I_L742_217, 4) = ulondp(1 + $I_L742_193, 1 + $I_L742_217, 1)
  742.                         $I_L742_193 = 1 + $I_L742_193
  742.                         if ( $I_L742_193 >= $F_A44 ) exit
  742.                      enddo
  742.                      $I_L742_217 = 1 + $I_L742_217
  742.                      if ( $I_L742_217 >= $F_A43 ) exit
  742.                   enddo
  742.                endif
  742.             endif
  742.             iloc(1, 1, 1) = _copyout( iloc )
  742.             ulondp(1, 1, 1) = _copyout( ulondp )
  742.             ulat(1, 1) = _copyout( ulat )
  742.             ulon(1, 1) = _copyout( ulon )
  751.             call interplg( wint(1), (fgwm%base_addr)(fgwm%dim_1%LB, fgwm%dim_2%LB, fgwm%dim_3%LB, 0), ulondp(1, 1, 1), ulatdp(1, 1), usigdp(1, 1), iloc(1, 1, 1), jloc(1, 1), kloc(1, 1), ibdim, ip(1, 1, 1), jn(1, 1, 1) )
  760.             tm$605 = loc( (fgw%base_addr)(1, 1, jb, 0) )
  760.             w = _copyin( (fgw%base_addr)(1, 1, jb, 0) )
  760.             tm$607 = loc( wint(1) )
  760.             wm = _copyin( wint(1) )
  760.             t$20 = ibdim
  760.             t$19 = kmax
  760.             t$205 = max( 0, ibdim )
  760.             t$206 = max( 0, ibdim )
  760.             t$207 = max( 0, kmax )
  760.             t$208 = max( 0, ibdim ) * max( 0, kmax )
  760.             t$18 = ibmax
  760.             t$209 = max( 0, ibmax )
  760.             t$210 = max( 0, ibmax )
  760.             t$211 = max( 0, kmax ) * max( 0, ibmax )
  760.             $dth_S15 = 5.0e-1 * delt
  760.             if ( kmax > 0 ) then
  760.                $SC_cl_I35 = cl%dim_1%EX
  760.                $SC_cl_I36 = cl%dim_1%LB
  760.                if ( ibdim > 0 ) then
  760.                   $SC_cl_I38 = (cl%base_addr)(kmax, 0)
  760.                   $SC_cl_I37 = (cl%base_addr)(1, 0)
  760.                   $I_L760_199 = 0
  760.                   do
  760.                      $SCA_cl_I39 = (cl%base_addr)(1 + $I_L760_199, 0)
  760.                      $I_L760_173 = 0
  760. !dir$ ivdep
  760.                      do
  760.                         usig(1 + $I_L760_173, 1 + $I_L760_199) = min( $SC_cl_I38, max( $SC_cl_I37, $SCA_cl_I39 + -( $dth_S15 * ( wm(1 + $I_L760_173, 1 + $I_L760_199) + w(1 + $I_L760_173, 1 + $I_L760_199) ) ) ) )
  760.                         $I_L760_173 = 1 + $I_L760_173
  760.                         if ( $I_L760_173 >= ibdim ) exit
  760.                      enddo
  760.                      $I_L760_199 = 1 + $I_L760_199
  760.                      if ( $I_L760_199 >= kmax ) exit
  760.                   enddo
  760.                endif
  765.                $SC_delsigma_I10 = delsigma%dim_1%EX
  765.                $SC_delsigma_I11 = delsigma%dim_1%LB
  765.                $SC_delsigma_I13 = delsigma%dim_2%SM
  765.                $SC_delsigma_I12 = delsigma%dim_2%EX
  765.                $SC_delsigma_I14 = delsigma%dim_2%LB
  765.                $SC_ksigref_I5 = ksigref%dim_1%EX
  765.                $SC_ksigref_I6 = ksigref%dim_1%LB
  765.                $SC_ksigref_I8 = ksigref%dim_2%SM
  765.                $SC_ksigref_I7 = ksigref%dim_2%EX
  765.                $SC_ksigref_I9 = ksigref%dim_2%LB
  765.                $SC_sigma_I0 = sigma%dim_1%EX
  765.                $SC_sigma_I1 = sigma%dim_1%LB
  765.                $SC_sigma_I3 = sigma%dim_2%SM
  765.                $SC_sigma_I2 = sigma%dim_2%EX
  765.                $SC_sigma_I4 = sigma%dim_2%LB
  765.                if ( ibdim > 0 ) then
  765.                   $I_L765_201 = 0
  765. !dir$ blocking_size( 1, 1 )
  765.                   do
  765.                      $I_L765_175 = 0
  765. !dir$ ivdep
  765. !dir$ blocking_size( 256, 256 )
  765.                      do
  765.                         $ik_S18 = int( ( 1.0/delsigref * ( usig(1 + $I_L765_175, 1 + $I_L765_201) + -(sigma%base_addr)(1 + $I_L765_175, 1, 0) ) ) )
  765.                         $kloc_WR0_R4 = (ksigref%base_addr)(1 + $I_L765_175, $ik_S18, 0)
  765.                         kloc(1 + $I_L765_175, 1 + $I_L765_201) = $kloc_WR0_R4
  765.                         if ( usig(1 + $I_L765_175, 1 + $I_L765_201) > (sigma%base_addr)(1 + $I_L765_175, 1 + $kloc_WR0_R4, 0) ) then
  765.                            $kloc_WR0_R4 = 1 + $kloc_WR0_R4
  765.                            kloc(1 + $I_L765_175, 1 + $I_L765_201) = $kloc_WR0_R4
  765.                         endif
  765.                         usigdp(1 + $I_L765_175, 1 + $I_L765_201) = ( 1.0/(delsigma%base_addr)(1 + $I_L765_175, $kloc_WR0_R4, 0) * ( usig(1 + $I_L765_175, 1 + $I_L765_201) + -(sigma%base_addr)(1 + $I_L765_175, $kloc_WR0_R4, 0) ) )
  765.                         $I_L765_175 = 1 + $I_L765_175
  765.                         if ( $I_L765_175 >= ibdim ) exit
  765.                      enddo
  765.                      $I_L765_201 = 1 + $I_L765_201
  765.                      if ( $I_L765_201 >= kmax ) exit
  765.                   enddo
  765.                endif
  765.             endif
  760.             wint(1) = _copyout( wm )
  760.             (fgw%base_addr)(1, 1, jb, 0) = _copyout( w )
  765.             tm$629 = loc( ulon(1, 1) )
  765.             ulon = _copyin( ulon(1, 1) )
  765.             tm$631 = loc( ulat(1, 1) )
  765.             ulat = _copyin( ulat(1, 1) )
  765.             tm$633 = loc( ulondp(1, 1, 1) )
  765.             ulondp = _copyin( ulondp(1, 1, 1) )
  765.             tm$635 = loc( iloc(1, 1, 1) )
  765.             iloc = _copyin( iloc(1, 1, 1) )
  765.             t$31 = ibdim
  765.             t$32 = kmax
  765.             t$248 = max( 0, ibdim )
  765.             t$249 = max( 0, ibdim )
  765.             t$250 = max( 0, kmax )
  765.             t$251 = max( 0, ibdim ) * max( 0, kmax )
  765.             t$252 = max( 0, ibdim ) * max( 0, kmax )
  765.             t$253 = 4 * max( 0, ibdim ) * max( 0, kmax )
  765.             iloc(1, 1, 1) = _copyout( iloc )
  765.             ulondp(1, 1, 1) = _copyout( ulondp )
  765.             ulat(1, 1) = _copyout( ulat )
  765.             ulon(1, 1) = _copyout( ulon )
  774.             tm$662 = loc( (fgum%base_addr)(fgum%dim_1%LB, fgum%dim_2%LB, fgum%dim_3%LB, 0) )
  774.             u = _copyin( (fgum%base_addr)(fgum%dim_1%LB, fgum%dim_2%LB, fgum%dim_3%LB, 0) )
  774.             tm$664 = loc( (fgvm%base_addr)(fgvm%dim_1%LB, fgvm%dim_2%LB, fgvm%dim_3%LB, 0) )
  774.             v = _copyin( (fgvm%base_addr)(fgvm%dim_1%LB, fgvm%dim_2%LB, fgvm%dim_3%LB, 0) )
  774.             tm$666 = loc( uint(1) )
  774.             uint = _copyin( uint(1) )
  774.             tm$668 = loc( vint(1) )
  774.             vint = _copyin( vint(1) )
  774.             tm$670 = loc( ulondp(1, 1, 1) )
  774.             ulondp = _copyin( ulondp(1, 1, 1) )
  774.             tm$672 = loc( ip(1, 1, 1) )
  774.             ip = _copyin( ip(1, 1, 1) )
  774.             tm$674 = loc( jn(1, 1, 1) )
  774.             jn = _copyin( jn(1, 1, 1) )
  774.             t$36 = ibmax
  774.             t$35 = kmax
  774.             t$37 = jbmax_ext
  774.             t$257 = max( 0, ibmax )
  774.             t$258 = max( 0, ibmax )
  774.             t$259 = max( 0, kmax )
  774.             t$260 = max( 0, kmax ) * max( 0, ibmax )
  774.             t$261 = max( 0, jbmax_ext )
  774.             t$262 = max( 0, kmax ) * max( 0, ibmax ) * max( 0, jbmax_ext )
  774.             t$34 = ibdim
  774.             t$263 = max( 0, ibdim )
  774.             t$264 = max( 0, ibdim )
  774.             t$265 = max( 0, ibdim ) * max( 0, kmax )
  774.             t$266 = max( 0, ibdim ) * max( 0, kmax )
  774.             t$267 = 2 * max( 0, ibdim ) * max( 0, kmax )
  774.             t$268 = 4 * max( 0, ibdim ) * max( 0, kmax )
  774.             if ( kmax > 0 ) then
  774.                if ( ibdim > 0 ) then
  774.                   $I_L774_203 = 0
  774.                   do
  774.                      $I_L774_177 = 0
  774. !dir$ ivdep
  774.                      do
  774.                         $s1_S23 = cvmg( 1.0, -1.0, jloc(1 + $I_L774_177, 1 + $I_L774_203) /= 0 )
  774.                         $s2_S26 = cvmg( 1.0, -1.0, jloc(1 + $I_L774_177, 1 + $I_L774_203) + -jmax /= 0 )
  774.                         $f1_S21 = u(ip(1 + $I_L774_177, 1 + $I_L774_203, 1), kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 1)) + ulondp(1 + $I_L774_177, 1 + $I_L774_203, 1) * ( u(ip(1 + $I_L774_177, 1 + $I_L774_203, 3), kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 3)) + -u(ip(1 + $I_L774_177, 1 + $I_L774_203, 1), kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 1)) )
  774.                         $g1_S29 = v(ip(1 + $I_L774_177, 1 + $I_L774_203, 1), kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 1)) + ulondp(1 + $I_L774_177, 1 + $I_L774_203, 1) * ( v(ip(1 + $I_L774_177, 1 + $I_L774_203, 3), kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 3)) + -v(ip(1 + $I_L774_177, 1 + $I_L774_203, 1), kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 1)) )
  774.                         $f2_S24 = u(ip(1 + $I_L774_177, 1 + $I_L774_203, 2), kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 2)) + ulondp(1 + $I_L774_177, 1 + $I_L774_203, 2) * ( u(ip(1 + $I_L774_177, 1 + $I_L774_203, 4), kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 4)) + -u(ip(1 + $I_L774_177, 1 + $I_L774_203, 2), kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 2)) )
  774.                         $g2_S31 = v(ip(1 + $I_L774_177, 1 + $I_L774_203, 2), kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 2)) + ulondp(1 + $I_L774_177, 1 + $I_L774_203, 2) * ( v(ip(1 + $I_L774_177, 1 + $I_L774_203, 4), kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 4)) + -v(ip(1 + $I_L774_177, 1 + $I_L774_203, 2), kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 2)) )
  774.                         $f3_S22 = u(ip(1 + $I_L774_177, 1 + $I_L774_203, 1), 1 + kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 1)) + ulondp(1 + $I_L774_177, 1 + $I_L774_203, 1) * ( u(ip(1 + $I_L774_177, 1 + $I_L774_203, 3), 1 + kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 3)) + -u(ip(1 + $I_L774_177, 1 + $I_L774_203, 1), 1 + kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 1)) )
  774.                         $g3_S30 = v(ip(1 + $I_L774_177, 1 + $I_L774_203, 1), 1 + kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 1)) + ulondp(1 + $I_L774_177, 1 + $I_L774_203, 1) * ( v(ip(1 + $I_L774_177, 1 + $I_L774_203, 3), 1 + kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 3)) + -v(ip(1 + $I_L774_177, 1 + $I_L774_203, 1), 1 + kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 1)) )
  774.                         $f4_S25 = u(ip(1 + $I_L774_177, 1 + $I_L774_203, 2), 1 + kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 2)) + ulondp(1 + $I_L774_177, 1 + $I_L774_203, 2) * ( u(ip(1 + $I_L774_177, 1 + $I_L774_203, 4), 1 + kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 4)) + -u(ip(1 + $I_L774_177, 1 + $I_L774_203, 2), 1 + kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 2)) )
  774.                         $g4_S32 = v(ip(1 + $I_L774_177, 1 + $I_L774_203, 2), 1 + kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 2)) + ulondp(1 + $I_L774_177, 1 + $I_L774_203, 2) * ( v(ip(1 + $I_L774_177, 1 + $I_L774_203, 4), 1 + kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 4)) + -v(ip(1 + $I_L774_177, 1 + $I_L774_203, 2), 1 + kloc(1 + $I_L774_177, 1 + $I_L774_203), jn(1 + $I_L774_177, 1 + $I_L774_203, 2)) )
  774.                         $f1_S27 = $s1_S23 * ( $f1_S21 + usigdp(1 + $I_L774_177, 1 + $I_L774_203) * ( $f3_S22 + -$f1_S21 ) )
  774.                         $f2_S28 = $s2_S26 * ( $f2_S24 + usigdp(1 + $I_L774_177, 1 + $I_L774_203) * ( $f4_S25 + -$f2_S24 ) )
  774.                         uint(1 + $I_L774_177, 1 + $I_L774_203) = $f1_S27 + ulatdp(1 + $I_L774_177, 1 + $I_L774_203) * ( $f2_S28 + -$f1_S27 )
  774.                         $g1_S33 = $s1_S23 * ( $g1_S29 + usigdp(1 + $I_L774_177, 1 + $I_L774_203) * ( $g3_S30 + -$g1_S29 ) )
  774.                         $g2_S34 = $s2_S26 * ( $g2_S31 + usigdp(1 + $I_L774_177, 1 + $I_L774_203) * ( $g4_S32 + -$g2_S31 ) )
  774.                         vint(1 + $I_L774_177, 1 + $I_L774_203) = $g1_S33 + ulatdp(1 + $I_L774_177, 1 + $I_L774_203) * ( $g2_S34 + -$g1_S33 )
  774.                         $I_L774_177 = 1 + $I_L774_177
  774.                         if ( $I_L774_177 >= ibdim ) exit
  774.                      enddo
  774.                      $I_L774_203 = 1 + $I_L774_203
  774.                      if ( $I_L774_203 >= kmax ) exit
  774.                   enddo
  774.                endif
  774.             endif
  774.             jn(1, 1, 1) = _copyout( jn )
  774.             ip(1, 1, 1) = _copyout( ip )
  774.             ulondp(1, 1, 1) = _copyout( ulondp )
  774.             vint(1) = _copyout( vint )
  774.             uint(1) = _copyout( uint )
  774.             (fgvm%base_addr)(fgvm%dim_1%LB, fgvm%dim_2%LB, fgvm%dim_3%LB, 0) = _copyout( v )
  774.             (fgum%base_addr)(fgum%dim_1%LB, fgum%dim_2%LB, fgum%dim_3%LB, 0) = _copyout( u )
  783.             tm$700 = loc( ulon(1, 1) )
  783.             ulon = _copyin( ulon(1, 1) )
  783.             tm$702 = loc( ulat(1, 1) )
  783.             ulat = _copyin( ulat(1, 1) )
  783.             tm$704 = loc( (coslon%base_addr)(1, jb, 0) )
  783.             coslon = _copyin( (coslon%base_addr)(1, jb, 0) )
  783.             tm$706 = loc( (sinlon%base_addr)(1, jb, 0) )
  783.             sinlon = _copyin( (sinlon%base_addr)(1, jb, 0) )
  783.             tm$708 = loc( (coslat%base_addr)(1, jb, 0) )
  783.             coslat = _copyin( (coslat%base_addr)(1, jb, 0) )
  783.             tm$710 = loc( (sinlat%base_addr)(1, jb, 0) )
  783.             sinlat = _copyin( (sinlat%base_addr)(1, jb, 0) )
  783.             tm$712 = loc( (fgu%base_addr)(1, 1, jb, 0) )
  783.             u = _copyin( (fgu%base_addr)(1, 1, jb, 0) )
  783.             tm$714 = loc( (fgv%base_addr)(1, 1, jb, 0) )
  783.             v = _copyin( (fgv%base_addr)(1, 1, jb, 0) )
  783.             tm$716 = loc( uint(1) )
  783.             um = _copyin( uint(1) )
  783.             tm$718 = loc( vint(1) )
  783.             vm = _copyin( vint(1) )
  783.             t$21 = ibdim
  783.             t$22 = kmax
  783.             t$212 = max( 0, ibdim )
  783.             t$213 = max( 0, ibdim )
  783.             t$214 = max( 0, kmax )
  783.             t$215 = max( 0, ibdim ) * max( 0, kmax )
  783.             t$23 = ibmax
  783.             t$216 = max( 0, ibmax )
  783.             t$217 = max( 0, ibmax )
  783.             t$218 = max( 0, kmax ) * max( 0, ibmax )
  783.             t$221 = 8 * max( 0, ibmax )
  783.             t$222 = 8 * ( 7 + 8 * max( 0, ibmax ) ) / 8
  783.             t$224 = t$222 + 8 * max( 0, ibmax )
  783.             t$225 = 8 * ( 7 + t$222 + 8 * max( 0, ibmax ) ) / 8
  783.             t$227 = t$225 + 8 * max( 0, ibmax )
  783.             t$219 = int( _alloc( t$225 + 8 * max( 0, ibmax ) ), 8 )
  783.             t$220 = t$219
  783.             t$223 = t$222 + t$219
  783.             t$226 = t$225 + t$219
  783.             $dt2_S43 = 5.0e-1 * delt
  783.             if ( ibdim > 0 ) then
  783.                $I_L783_179 = 0
  783. !dir$ ivdep
  783.                do
  783.                   x(1 + $I_L783_179) = coslon(1 + $I_L783_179) * coslat(1 + $I_L783_179)
  783.                   y(1 + $I_L783_179) = coslat(1 + $I_L783_179) * sinlon(1 + $I_L783_179)
  783.                   z(1 + $I_L783_179) = sinlat(1 + $I_L783_179)
  783.                   $I_L783_179 = 1 + $I_L783_179
  783.                   if ( $I_L783_179 >= ibdim ) exit
  783.                enddo
  783.             endif
  783.             if ( kmax > 0 ) then
  783.                if ( ibdim > 0 ) then
  783.                   $I_L783_205 = 0
  783. !dir$ blocking_size( 1, 1 )
  783.                   do
  783.                      $I_L783_181 = 0
  783. !dir$ ivdep
  783. !dir$ blocking_size( 256, 256 )
  783.                      do
  783.                         $Coss_P8 = coss( ulonm(1 + $I_L783_181, 1 + $I_L783_205) )
  783.                         $Coss_P9 = coss( ulatm(1 + $I_L783_181, 1 + $I_L783_205) )
  783.                         $uh_S38 = 5.0e-1 * ( um(1 + $I_L783_181, 1 + $I_L783_205) + u(1 + $I_L783_181, 1 + $I_L783_205) )
  783.                         $vh_S40 = 5.0e-1 * ( vm(1 + $I_L783_181, 1 + $I_L783_205) + v(1 + $I_L783_181, 1 + $I_L783_205) )
  783.                         $xb_S47 = x(1 + $I_L783_181) + -( $dt2_S43 * ( -( $vh_S40 * real( $Coss_P8, 8 ) * cimag( $Coss_P9 ) + $uh_S38 * cimag( $Coss_P8 ) ) ) )
  783.                         $yb_S46 = y(1 + $I_L783_181) + -( $dt2_S43 * ( -( cimag( $Coss_P8 ) * $vh_S40 * cimag( $Coss_P9 ) ) + $uh_S38 * real( $Coss_P8, 8 ) ) )
  783.                         $zb_S45 = z(1 + $I_L783_181) + -( $dt2_S43 * ( $vh_S40 * real( $Coss_P9, 8 ) ) )
  783.                         $xb_S49 = $xb_S47 * _recip_sqrt( $zb_S45 * $zb_S45 + $yb_S46 * $yb_S46 + $xb_S47 * $xb_S47 )
  783.                         $yb_S50 = $yb_S46 * _recip_sqrt( $zb_S45 * $zb_S45 + $yb_S46 * $yb_S46 + $xb_S47 * $xb_S47 )
  783.                         $Flat_S51 = atan2( ( $yb_S46 * _recip_sqrt( $zb_S45 * $zb_S45 + $yb_S46 * $yb_S46 + $xb_S47 * $xb_S47 ) ), ( $xb_S47 * _recip_sqrt( $zb_S45 * $zb_S45 + $yb_S46 * $yb_S46 + $xb_S47 * $xb_S47 ) ) )
  783.                         ulonm(1 + $I_L783_181, 1 + $I_L783_205) = $Flat_S51
  783.                         $zb_S52 = $zb_S45 * _recip_sqrt( $zb_S45 * $zb_S45 + $yb_S46 * $yb_S46 + $xb_S47 * $xb_S47 )
  783.                         if ( $Flat_S51 < 0.0 ) then
  783.                            ulonm(1 + $I_L783_181, 1 + $I_L783_205) = 6.28318530717958 + $Flat_S51
  783.                         endif
  783.                         $Flat_S53 = asin( $zb_S52 )
  783.                         ulatm(1 + $I_L783_181, 1 + $I_L783_205) = $Flat_S53
  783.                         $dot2_S54 = 2.0 * ( $xb_S49 * x(1 + $I_L783_181) + $zb_S52 * z(1 + $I_L783_181) + $yb_S50 * y(1 + $I_L783_181) )
  783.                         $xm_S55 = -x(1 + $I_L783_181) + $xb_S49 * $dot2_S54
  783.                         $ym_S56 = -y(1 + $I_L783_181) + $yb_S50 * $dot2_S54
  783.                         $zm_S58 = -z(1 + $I_L783_181) + $zb_S52 * $dot2_S54
  783.                         $Flat_S57 = atan2( $ym_S56, $xm_S55 )
  783.                         ulon(1 + $I_L783_181, 1 + $I_L783_205) = $Flat_S57
  783.                         if ( $Flat_S57 < 0.0 ) then
  783.                            ulon(1 + $I_L783_181, 1 + $I_L783_205) = 6.28318530717958 + $Flat_S57
  783.                         endif
  783.                         $Flat_S59 = asin( $zm_S58 )
  783.                         ulat(1 + $I_L783_181, 1 + $I_L783_205) = $Flat_S59
  783.                         $I_L783_181 = 1 + $I_L783_181
  783.                         if ( $I_L783_181 >= ibdim ) exit
  783.                      enddo
  783.                      $I_L783_205 = 1 + $I_L783_205
  783.                      if ( $I_L783_205 >= kmax ) exit
  783.                   enddo
  783.                endif
  783.             endif
  783.             _free( t$219 )
  783.             vint(1) = _copyout( vm )
  783.             uint(1) = _copyout( um )
  783.             (fgv%base_addr)(1, 1, jb, 0) = _copyout( v )
  783.             (fgu%base_addr)(1, 1, jb, 0) = _copyout( u )
  783.             (sinlat%base_addr)(1, jb, 0) = _copyout( sinlat )
  783.             (coslat%base_addr)(1, jb, 0) = _copyout( coslat )
  783.             (sinlon%base_addr)(1, jb, 0) = _copyout( sinlon )
  783.             (coslon%base_addr)(1, jb, 0) = _copyout( coslon )
  783.             ulat(1, 1) = _copyout( ulat )
  783.             ulon(1, 1) = _copyout( ulon )
  788.             $I_L736_228 = 1 + $I_L736_228
  783.             if ( $I_L736_228 >= nit ) exit
  783.          enddo
  783.       endif
  693.       _free( t$160 )
  790.       return
  790.       end
  790.       
  791.       
  791.       subroutine trajectory2d_2l( ulonm, ulatm, ulon, ulat, ulondp, ulatdp, iloc, jloc, ibdim, jb, nit, delt )
  791.       t$11 = ibdim
  810.       t$169 = _zla( 0, ibdim )
  791.       t$170 = _zla( 0, ibdim )
  791.       t$171 = 4 * _zla( 0, ibdim )
  791.       t$12 = ibmax
  819.       t$172 = _zla( 0, ibmax )
  819.       t$175 = 8 * _zla( 0, ibmax )
  820.       t$176 = 8 * ( 7 + 8 * _zla( 0, ibmax ) ) / 8
  820.       t$178 = t$176 + 8 * _zla( 0, ibmax )
  791.       t$173 = int( _alloc( t$176 + 8 * _zla( 0, ibmax ) ), 8 )
  819.       t$174 = t$173
  820.       t$177 = t$176 + t$173
  825.       $klats_S0 = 1
  826.       if ( reducedgrid /= .false. ) then
  826.          $klats_S0 = 2
  826.       endif
  827.       if ( nit > 0 ) then
  851.          $SC_sinlon_I45 = sinlon%dim_1%EX
  851.          $SC_sinlon_I46 = sinlon%dim_1%LB
  851.          $SC_sinlon_I47 = sinlon%dim_2%EX
  851.          $SC_coslon_I40 = coslon%dim_1%EX
  851.          $SC_coslon_I41 = coslon%dim_1%LB
  851.          $SC_coslon_I43 = coslon%dim_2%SM
  851.          $SC_coslon_I42 = coslon%dim_2%EX
  851.          $SC_coslon_I44 = coslon%dim_2%LB
  841.          $SC_jbperij_I35 = jbperij%dim_1%EX
  841.          $SC_jbperij_I36 = jbperij%dim_1%LB
  841.          $SC_jbperij_I38 = jbperij%dim_2%SM
  841.          $SC_jbperij_I37 = jbperij%dim_2%EX
  841.          $SC_jbperij_I39 = jbperij%dim_2%LB
  841.          $SC_ibperij_I30 = ibperij%dim_1%EX
  841.          $SC_ibperij_I31 = ibperij%dim_1%LB
  841.          $SC_ibperij_I33 = ibperij%dim_2%SM
  841.          $SC_ibperij_I32 = ibperij%dim_2%EX
  841.          $SC_ibperij_I34 = ibperij%dim_2%LB
  841.          $SC_fgvmmean_I25 = fgvmmean%dim_1%EX
  841.          $SC_fgvmmean_I26 = fgvmmean%dim_1%LB
  841.          $SC_fgvmmean_I28 = fgvmmean%dim_2%SM
  841.          $SC_fgvmmean_I27 = fgvmmean%dim_2%EX
  841.          $SC_fgvmmean_I29 = fgvmmean%dim_2%LB
  841.          $SC_fgummean_I20 = fgummean%dim_1%EX
  841.          $SC_fgummean_I21 = fgummean%dim_1%LB
  841.          $SC_fgummean_I23 = fgummean%dim_2%SM
  841.          $SC_fgummean_I22 = fgummean%dim_2%EX
  841.          $SC_fgummean_I24 = fgummean%dim_2%LB
  832.          $SC_dellon_I15 = dellon%dim_1%EX
  832.          $SC_dellon_I16 = dellon%dim_1%LB
  832.          $SC_dellon_I18 = dellon%dim_2%SM
  832.          $SC_dellon_I17 = dellon%dim_2%EX
  832.          $SC_dellon_I19 = dellon%dim_2%LB
  832.          $SC_delphi_I10 = delphi%dim_1%EX
  832.          $SC_delphi_I11 = delphi%dim_1%LB
  832.          $SC_delphi_I13 = delphi%dim_2%SM
  832.          $SC_delphi_I12 = delphi%dim_2%EX
  832.          $SC_delphi_I14 = delphi%dim_2%LB
  832.          $SC_phi_I5 = phi%dim_1%EX
  832.          $SC_phi_I6 = phi%dim_1%LB
  832.          $SC_phi_I8 = phi%dim_2%SM
  832.          $SC_phi_I7 = phi%dim_2%EX
  832.          $SC_phi_I9 = phi%dim_2%LB
  832.          $SC_jphiref_I0 = jphiref%dim_1%EX
  832.          $SC_jphiref_I1 = jphiref%dim_1%LB
  832.          $SC_jphiref_I3 = jphiref%dim_2%SM
  832.          $SC_jphiref_I2 = jphiref%dim_2%EX
  832.          $SC_jphiref_I4 = jphiref%dim_2%LB
  827.          $I_L827_98 = 0
  827.          do
  832.             t$33 = ibdim
  832.             t$254 = _zla( 0, ibdim )
  832.             t$255 = _zla( 0, ibdim )
  832.             t$256 = 4 * _zla( 0, ibdim )
  832.             if ( $klats_S0 == 4 ) then
  832.                kp(1) = -1
  832.                kp(2) = 0
  832.                kp(3) = 1
  832.                kp(4) = 2
  832.             else
  832.                kp(1) = 0
  832.                kp(2) = 1
  832.             endif
  832.             if ( ibdim > 0 ) then
  832.                $I_L832_68 = 0
  832. !dir$ ivdep
  832.                do
  832.                   $ik_S2 = int( ( 1.0/delphiref * ( 1.570796326794895 + ulat(1 + $I_L832_68) ) ) )
  832.                   $jloc_WR0_R0 = (jphiref%base_addr)(1 + $I_L832_68, $ik_S2, 0)
  832.                   jloc(1 + $I_L832_68) = $jloc_WR0_R0
  832.                   if ( ulat(1 + $I_L832_68) > (phi%base_addr)(1 + $I_L832_68, 1 + $jloc_WR0_R0, 0) ) then
  832.                      $jloc_WR0_R0 = 1 + $jloc_WR0_R0
  832.                      jloc(1 + $I_L832_68) = $jloc_WR0_R0
  832.                   endif
  832.                   ulatdp(1 + $I_L832_68) = ( 1.0/(delphi%base_addr)(1 + $I_L832_68, $jloc_WR0_R0, 0) * ( ulat(1 + $I_L832_68) + -(phi%base_addr)(1 + $I_L832_68, $jloc_WR0_R0, 0) ) )
  832.                   $I_L832_68 = 1 + $I_L832_68
  832.                   if ( $I_L832_68 >= ibdim ) exit
  832.                enddo
  832.             endif
  832.             if ( $klats_S0 > 0 ) then
  832.                if ( ibdim > 0 ) then
  832.                   $I_L832_96 = 0
  832.                   do
  832.                      $I_L832_94 = 0
  832.                      do
  832.                         $I_L832_100 = 0
  832. !dir$ shortloop16
  832. !dir$ blocking_size( 2, 2 )
  832.                         do
  832.                            $ks_S5 = kp(1 + $I_L832_100 + 2 * $I_L832_96)
  832.                            $I_L832_70 = 0
  832. !dir$ ivdep
  832. !dir$ blocking_size( 256, 256 )
  832.                            do
  832.                               $j_S6 = 1 + jmax + -jloc(1 + $I_L832_70 + 256 * $I_L832_94)
  832.                               $ulondp_WR0_R1 = 1.0 + ( ulon(1 + $I_L832_70 + 256 * $I_L832_94) * 1.0/(dellon%base_addr)(1 + $I_L832_70 + 256 * $I_L832_94, $j_S6 + -$ks_S5, 0) )
  832.                               iloc(1 + $I_L832_70 + 256 * $I_L832_94, 1 + $I_L832_100 + 2 * $I_L832_96) = int( $ulondp_WR0_R1 )
  832.                               $ulondp_WR0_R1 = $ulondp_WR0_R1 + ( -( int( $ulondp_WR0_R1 ) ) )
  832.                               ulondp(1 + $I_L832_70 + 256 * $I_L832_94, 1 + $I_L832_100 + 2 * $I_L832_96) = $ulondp_WR0_R1
  832.                               $I_L832_70 = 1 + $I_L832_70
  832.                               if ( $I_L832_70 >= min( ibdim, 256 + 256 * $I_L832_94 ) + -256 * $I_L832_94 ) exit
  832.                            enddo
  832.                            $I_L832_100 = 1 + $I_L832_100
  832.                            if ( $I_L832_100 >= min( $klats_S0, 2 + 2 * $I_L832_96 ) + -2 * $I_L832_96 ) exit
  832.                         enddo
  832.                         $I_L832_94 = 1 + $I_L832_94
  832.                         if ( $I_L832_94 >= 1 + max( 0, -1 + _rsh( 255 + ibdim, 8 ) ) ) exit
  832.                      enddo
  832.                      $I_L832_96 = 1 + $I_L832_96
  832.                      if ( $I_L832_96 >= 1 + max( 0, -1 + _rsh( 1 + $klats_S0, 1 ) ) ) exit
  832.                   enddo
  832.                endif
  832.             endif
  832.             if ( $klats_S0 == 1 ) then
  832.                $F_A33 = ibdim
  832.                if ( ibdim > 0 ) then
  832.                   $I_L832_79 = 0
  832. !dir$ ivdep
  832.                   do
  832.                      iloc(1 + $I_L832_79, 2) = iloc(1 + $I_L832_79, 1)
  832.                      $I_L832_79 = 1 + $I_L832_79
  832.                      if ( $I_L832_79 >= $F_A33 ) exit
  832.                   enddo
  832.                endif
  832.                $F_A34 = ibdim
  832.                if ( ibdim > 0 ) then
  832.                   $I_L832_81 = 0
  832. !dir$ ivdep
  832.                   do
  832.                      iloc(1 + $I_L832_81, 3) = iloc(1 + $I_L832_81, 1)
  832.                      $I_L832_81 = 1 + $I_L832_81
  832.                      if ( $I_L832_81 >= $F_A34 ) exit
  832.                   enddo
  832.                endif
  832.                $F_A35 = ibdim
  832.                if ( ibdim > 0 ) then
  832.                   $I_L832_83 = 0
  832. !dir$ ivdep
  832.                   do
  832.                      iloc(1 + $I_L832_83, 4) = iloc(1 + $I_L832_83, 1)
  832.                      $I_L832_83 = 1 + $I_L832_83
  832.                      if ( $I_L832_83 >= $F_A35 ) exit
  832.                   enddo
  832.                endif
  832.                $F_A36 = ibdim
  832.                if ( ibdim > 0 ) then
  832.                   $I_L832_85 = 0
  832. !dir$ ivdep
  832.                   do
  832.                      ulondp(1 + $I_L832_85, 2) = ulondp(1 + $I_L832_85, 1)
  832.                      $I_L832_85 = 1 + $I_L832_85
  832.                      if ( $I_L832_85 >= $F_A36 ) exit
  832.                   enddo
  832.                endif
  832.                $F_A37 = ibdim
  832.                if ( ibdim > 0 ) then
  832.                   $I_L832_87 = 0
  832. !dir$ ivdep
  832.                   do
  832.                      ulondp(1 + $I_L832_87, 3) = ulondp(1 + $I_L832_87, 1)
  832.                      $I_L832_87 = 1 + $I_L832_87
  832.                      if ( $I_L832_87 >= $F_A37 ) exit
  832.                   enddo
  832.                endif
  832.                $F_A38 = ibdim
  832.                if ( ibdim > 0 ) then
  832.                   $I_L832_89 = 0
  832. !dir$ ivdep
  832.                   do
  832.                      ulondp(1 + $I_L832_89, 4) = ulondp(1 + $I_L832_89, 1)
  832.                      $I_L832_89 = 1 + $I_L832_89
  832.                      if ( $I_L832_89 >= $F_A38 ) exit
  832.                   enddo
  832.                endif
  832.             endif
  841.             tm$740 = loc( (fgummean%base_addr)($SC_fgummean_I21, $SC_fgummean_I24, 0) )
  841.             u = _copyin( (fgummean%base_addr)($SC_fgummean_I21, $SC_fgummean_I24, 0) )
  841.             tm$742 = loc( (fgvmmean%base_addr)($SC_fgvmmean_I26, $SC_fgvmmean_I29, 0) )
  841.             v = _copyin( (fgvmmean%base_addr)($SC_fgvmmean_I26, $SC_fgvmmean_I29, 0) )
  841.             t$39 = ibmax
  841.             t$40 = jbmax_ext
  841.             t$269 = max( 0, ibmax )
  841.             t$270 = max( 0, ibmax )
  841.             t$271 = max( 0, jbmax_ext )
  841.             t$272 = max( 0, ibmax ) * max( 0, jbmax_ext )
  841.             t$38 = ibdim
  841.             t$273 = max( 0, ibdim )
  841.             t$274 = max( 0, ibdim )
  841.             t$275 = 2 * max( 0, ibdim )
  841.             t$278 = 8 * max( 0, ibmax )
  841.             t$279 = 8 * ( 7 + 8 * max( 0, ibmax ) ) / 8
  841.             t$281 = t$279 + 8 * max( 0, ibmax )
  841.             t$276 = int( _alloc( t$279 + 8 * max( 0, ibmax ) ), 8 )
  841.             t$277 = t$276
  841.             t$280 = t$279 + t$276
  841.             if ( ibdim > 0 ) then
  841.                $I_L841_73 = 0
  841. !dir$ ivdep
  841.                do
  841.                   $jp_S8 = 1 + jmax + -jloc(1 + $I_L841_73)
  841.                   s1(1 + $I_L841_73) = 1.0
  841.                   s2(1 + $I_L841_73) = 1.0
  841.                   if ( jmax + -$jp_S8 == -1 ) then
  841.                      s1(1 + $I_L841_73) = -1.0
  841.                   endif
  841.                   if ( $jp_S8 == 1 ) then
  841.                      s2(1 + $I_L841_73) = -1.0
  841.                   endif
  841.                   $I_L841_73 = 1 + $I_L841_73
  841.                   if ( $I_L841_73 >= ibdim ) exit
  841.                enddo
  841.                $I_L841_75 = 0
  841. !dir$ ivdep
  841.                do
  841.                   $jp_S10 = 1 + jmax + -jloc(1 + $I_L841_75)
  841.                   $i1_S11 = (ibperij%base_addr)(iloc(1 + $I_L841_75, 1), $jp_S10, 0)
  841.                   $i2_S14 = (ibperij%base_addr)(iloc(1 + $I_L841_75, 2), -1 + $jp_S10, 0)
  841.                   $i3_S13 = (ibperij%base_addr)(1 + iloc(1 + $I_L841_75, 1), $jp_S10, 0)
  841.                   $i4_S16 = (ibperij%base_addr)(1 + iloc(1 + $I_L841_75, 2), -1 + $jp_S10, 0)
  841.                   $j1_S12 = (jbperij%base_addr)(iloc(1 + $I_L841_75, 1), $jp_S10, 0)
  841.                   $j2_S15 = (jbperij%base_addr)(iloc(1 + $I_L841_75, 2), -1 + $jp_S10, 0)
  841.                   j3 = (jbperij%base_addr)(1 + iloc(1 + $I_L841_75, 1), $jp_S10, 0)
  841.                   j4 = (jbperij%base_addr)(1 + iloc(1 + $I_L841_75, 2), -1 + $jp_S10, 0)
  841.                   $f1_S17 = s1(1 + $I_L841_75) * ( u($i1_S11, $j1_S12) + ulondp(1 + $I_L841_75, 1) * ( u($i3_S13, j3) + -u($i1_S11, $j1_S12) ) )
  841.                   $g1_S19 = s1(1 + $I_L841_75) * ( v($i1_S11, $j1_S12) + ulondp(1 + $I_L841_75, 1) * ( v($i3_S13, j3) + -v($i1_S11, $j1_S12) ) )
  841.                   $f2_S18 = s2(1 + $I_L841_75) * ( u($i2_S14, $j2_S15) + ulondp(1 + $I_L841_75, 2) * ( u($i4_S16, j4) + -u($i2_S14, $j2_S15) ) )
  841.                   $g2_S20 = s2(1 + $I_L841_75) * ( v($i2_S14, $j2_S15) + ulondp(1 + $I_L841_75, 2) * ( v($i4_S16, j4) + -v($i2_S14, $j2_S15) ) )
  841.                   uint(1 + $I_L841_75) = $f1_S17 + ulatdp(1 + $I_L841_75) * ( $f2_S18 + -$f1_S17 )
  841.                   vint(1 + $I_L841_75) = $g1_S19 + ulatdp(1 + $I_L841_75) * ( $g2_S20 + -$g1_S19 )
  841.                   $I_L841_75 = 1 + $I_L841_75
  841.                   if ( $I_L841_75 >= ibdim ) exit
  841.                enddo
  841.             endif
  841.             _free( t$276 )
  841.             (fgvmmean%base_addr)($SC_fgvmmean_I26, $SC_fgvmmean_I29, 0) = _copyout( v )
  841.             (fgummean%base_addr)($SC_fgummean_I21, $SC_fgummean_I24, 0) = _copyout( u )
  851.             tm$762 = loc( (coslon%base_addr)(1, jb, 0) )
  851.             coslon = _copyin( (coslon%base_addr)(1, jb, 0) )
  851.             tm$764 = loc( (sinlon%base_addr)(1, jb, 0) )
  851.             sinlon = _copyin( (sinlon%base_addr)(1, jb, 0) )
  851.             tm$766 = loc( (coslat%base_addr)(1, jb, 0) )
  851.             coslat = _copyin( (coslat%base_addr)(1, jb, 0) )
  851.             tm$768 = loc( (sinlat%base_addr)(1, jb, 0) )
  851.             sinlat = _copyin( (sinlat%base_addr)(1, jb, 0) )
  851.             tm$770 = loc( (fgumean%base_addr)(1, jb, 0) )
  851.             um = _copyin( (fgumean%base_addr)(1, jb, 0) )
  851.             tm$772 = loc( (fgvmean%base_addr)(1, jb, 0) )
  851.             vm = _copyin( (fgvmean%base_addr)(1, jb, 0) )
  851.             t$24 = ibdim
  851.             t$228 = max( 0, ibdim )
  851.             $dt2_S27 = 5.0e-1 * delt
  851.             if ( ibdim > 0 ) then
  851.                $I_L851_77 = 0
  851. !dir$ ivdep
  851.                do
  851.                   $Coss_P8 = coss( ulonm(1 + $I_L851_77) )
  851.                   $Coss_P9 = coss( ulatm(1 + $I_L851_77) )
  851.                   $uh_S22 = 5.0e-1 * ( um(1 + $I_L851_77) + uint(1 + $I_L851_77) )
  851.                   $vh_S24 = 5.0e-1 * ( vm(1 + $I_L851_77) + vint(1 + $I_L851_77) )
  851.                   $x_S28 = coslon(1 + $I_L851_77) * coslat(1 + $I_L851_77)
  851.                   $y_S29 = coslat(1 + $I_L851_77) * sinlon(1 + $I_L851_77)
  851.                   $z_S31 = sinlat(1 + $I_L851_77)
  851.                   $b_S33 = _recip_sqrt( ( $x_S28 + -( $dt2_S27 * ( -( $vh_S24 * real( $Coss_P8, 8 ) * cimag( $Coss_P9 ) + $uh_S22 * cimag( $Coss_P8 ) ) ) ) ) * ( $x_S28 + -( $dt2_S27 * ( -( $vh_S24 * real( $Coss_P8, 8 ) * cimag( $Coss_P9 ) + $uh_S22 * cimag( $Coss_P8 ) ) ) ) ) + ( $z_S31 + -( $dt2_S27 * ( $vh_S24 * real( $Coss_P9, 8 ) ) ) ) * ( $z_S31 + -( $dt2_S27 * ( $vh_S24 * real( $Coss_P9, 8 ) ) ) ) + ( $y_S29 + -( $dt2_S27 * ( -( cimag( $Coss_P8 ) * $vh_S24 * cimag( $Coss_P9 ) ) + $uh_S22 * real( $Coss_P8, 8 ) ) ) ) * ( $y_S29 + -( $dt2_S27 * ( -( cimag( $Coss_P8 ) * $vh_S24 * cimag( $Coss_P9 ) ) + $uh_S22 * real( $Coss_P8, 8 ) ) ) ) )
  851.                   $xb_S32 = ( $x_S28 + -( $dt2_S27 * ( -( $vh_S24 * real( $Coss_P8, 8 ) * cimag( $Coss_P9 ) + $uh_S22 * cimag( $Coss_P8 ) ) ) ) ) * _recip_sqrt( ( $x_S28 + -( $dt2_S27 * ( -( $vh_S24 * real( $Coss_P8, 8 ) * cimag( $Coss_P9 ) + $uh_S22 * cimag( $Coss_P8 ) ) ) ) ) * ( $x_S28 + -( $dt2_S27 * ( -( $vh_S24 * real( $Coss_P8, 8 ) * cimag( $Coss_P9 ) + $uh_S22 * cimag( $Coss_P8 ) ) ) ) ) + ( $z_S31 + -( $dt2_S27 * ( $vh_S24 * real( $Coss_P9, 8 ) ) ) ) * ( $z_S31 + -( $dt2_S27 * ( $vh_S24 * real( $Coss_P9, 8 ) ) ) ) + ( $y_S29 + -( $dt2_S27 * ( -( cimag( $Coss_P8 ) * $vh_S24 * cimag( $Coss_P9 ) ) + $uh_S22 * real( $Coss_P8, 8 ) ) ) ) * ( $y_S29 + -( $dt2_S27 * ( -( cimag( $Coss_P8 ) * $vh_S24 * cimag( $Coss_P9 ) ) + $uh_S22 * real( $Coss_P8, 8 ) ) ) ) )
  851.                   $yb_S37 = ( $y_S29 + -( $dt2_S27 * ( -( cimag( $Coss_P8 ) * $vh_S24 * cimag( $Coss_P9 ) ) + $uh_S22 * real( $Coss_P8, 8 ) ) ) ) * _recip_sqrt( ( $x_S28 + -( $dt2_S27 * ( -( $vh_S24 * real( $Coss_P8, 8 ) * cimag( $Coss_P9 ) + $uh_S22 * cimag( $Coss_P8 ) ) ) ) ) * ( $x_S28 + -( $dt2_S27 * ( -( $vh_S24 * real( $Coss_P8, 8 ) * cimag( $Coss_P9 ) + $uh_S22 * cimag( $Coss_P8 ) ) ) ) ) + ( $z_S31 + -( $dt2_S27 * ( $vh_S24 * real( $Coss_P9, 8 ) ) ) ) * ( $z_S31 + -( $dt2_S27 * ( $vh_S24 * real( $Coss_P9, 8 ) ) ) ) + ( $y_S29 + -( $dt2_S27 * ( -( cimag( $Coss_P8 ) * $vh_S24 * cimag( $Coss_P9 ) ) + $uh_S22 * real( $Coss_P8, 8 ) ) ) ) * ( $y_S29 + -( $dt2_S27 * ( -( cimag( $Coss_P8 ) * $vh_S24 * cimag( $Coss_P9 ) ) + $uh_S22 * real( $Coss_P8, 8 ) ) ) ) )
  851.                   $zb_S35 = ( $z_S31 + -( $dt2_S27 * ( $vh_S24 * real( $Coss_P9, 8 ) ) ) ) * _recip_sqrt( ( $x_S28 + -( $dt2_S27 * ( -( $vh_S24 * real( $Coss_P8, 8 ) * cimag( $Coss_P9 ) + $uh_S22 * cimag( $Coss_P8 ) ) ) ) ) * ( $x_S28 + -( $dt2_S27 * ( -( $vh_S24 * real( $Coss_P8, 8 ) * cimag( $Coss_P9 ) + $uh_S22 * cimag( $Coss_P8 ) ) ) ) ) + ( $z_S31 + -( $dt2_S27 * ( $vh_S24 * real( $Coss_P9, 8 ) ) ) ) * ( $z_S31 + -( $dt2_S27 * ( $vh_S24 * real( $Coss_P9, 8 ) ) ) ) + ( $y_S29 + -( $dt2_S27 * ( -( cimag( $Coss_P8 ) * $vh_S24 * cimag( $Coss_P9 ) ) + $uh_S22 * real( $Coss_P8, 8 ) ) ) ) * ( $y_S29 + -( $dt2_S27 * ( -( cimag( $Coss_P8 ) * $vh_S24 * cimag( $Coss_P9 ) ) + $uh_S22 * real( $Coss_P8, 8 ) ) ) ) )
  851.                   $Flat_S34 = atan2( ( $b_S33 * ( $y_S29 + -( $dt2_S27 * ( -( cimag( $Coss_P8 ) * $vh_S24 * cimag( $Coss_P9 ) ) + $uh_S22 * real( $Coss_P8, 8 ) ) ) ) ), $xb_S32 )
  851.                   ulonm(1 + $I_L851_77) = $Flat_S34
  851.                   if ( $Flat_S34 < 0.0 ) then
  851.                      ulonm(1 + $I_L851_77) = 6.28318530717958 + $Flat_S34
  851.                   endif
  851.                   $Flat_S36 = asin( $zb_S35 )
  851.                   ulatm(1 + $I_L851_77) = $Flat_S36
  851.                   $zm_S39 = -$z_S31 + $zb_S35 * ( 2.0 * ( $x_S28 * $xb_S32 + $z_S31 * $zb_S35 + $y_S29 * $yb_S37 ) )
  851.                   $Flat_S38 = atan2( ( -$y_S29 + $yb_S37 * ( 2.0 * ( $x_S28 * $xb_S32 + $z_S31 * $zb_S35 + $y_S29 * $yb_S37 ) ) ), ( -$x_S28 + $xb_S32 * ( 2.0 * ( $x_S28 * $xb_S32 + $z_S31 * $zb_S35 + $y_S29 * $yb_S37 ) ) ) )
  851.                   ulon(1 + $I_L851_77) = $Flat_S38
  851.                   if ( $Flat_S38 < 0.0 ) then
  851.                      ulon(1 + $I_L851_77) = 6.28318530717958 + $Flat_S38
  851.                   endif
  851.                   $Flat_S40 = asin( $zm_S39 )
  851.                   ulat(1 + $I_L851_77) = $Flat_S40
  851.                   $I_L851_77 = 1 + $I_L851_77
  851.                   if ( $I_L851_77 >= ibdim ) exit
  851.                enddo
  851.             endif
  851.             (fgvmean%base_addr)(1, jb, 0) = _copyout( vm )
  851.             (fgumean%base_addr)(1, jb, 0) = _copyout( um )
  851.             (sinlat%base_addr)(1, jb, 0) = _copyout( sinlat )
  851.             (coslat%base_addr)(1, jb, 0) = _copyout( coslat )
  851.             (sinlon%base_addr)(1, jb, 0) = _copyout( sinlon )
  851.             (coslon%base_addr)(1, jb, 0) = _copyout( coslon )
  855.             $I_L827_98 = 1 + $I_L827_98
  851.             if ( $I_L827_98 >= nit ) exit
  851.          enddo
  851.       endif
  791.       _free( t$173 )
  857.       return
  857.       end
  857.       
  858.       
  858.       subroutine trajectory( ulonm, ulatm, usigm, ulon, ulat, usig, ulondp, ulatdp, usigdp, iloc, jloc, kloc, ibdim, jb, nit, delt, ip, jn )
  858.       t$13 = ibdim
  858.       t$14 = kmax
  881.       t$179 = _zla( 0, ibdim )
  858.       t$180 = _zla( 0, ibdim )
  881.       t$181 = _zla( 0, kmax )
  858.       t$182 = _zla( 0, ibdim ) * _zla( 0, kmax )
  858.       t$183 = _zla( 0, ibdim ) * _zla( 0, kmax )
  858.       t$184 = 4 * _zla( 0, ibdim ) * _zla( 0, kmax )
  858.       t$15 = ( kmax * ibmax )
  894.       t$185 = _zla( 0, ( kmax * ibmax ) )
  894.       t$188 = 8 * _zla( 0, ( kmax * ibmax ) )
  895.       t$189 = 8 * ( 7 + 8 * _zla( 0, ( kmax * ibmax ) ) ) / 8
  895.       t$191 = t$189 + 8 * _zla( 0, ( kmax * ibmax ) )
  896.       t$192 = 8 * ( 7 + t$189 + 8 * _zla( 0, ( kmax * ibmax ) ) ) / 8
  896.       t$194 = t$192 + 8 * _zla( 0, ( kmax * ibmax ) )
  858.       t$186 = int( _alloc( t$192 + 8 * _zla( 0, ( kmax * ibmax ) ) ), 8 )
  894.       t$187 = t$186
  895.       t$190 = t$189 + t$186
  896.       t$193 = t$192 + t$186
  901.       $klats_S4 = 1
  902.       if ( reducedgrid /= .false. ) then
  902.          $klats_S4 = 2
  902.       endif
  903.       if ( nit > 0 ) then
  903.          $I_L903_272 = 0
  903.          do
  910.             tm$794 = loc( ulondp(1, 1, 1) )
  910.             ulondp = _copyin( ulondp(1, 1, 1) )
  910.             tm$796 = loc( iloc(1, 1, 1) )
  910.             iloc = _copyin( iloc(1, 1, 1) )
  910.             t$31 = ibdim
  910.             t$32 = kmax
  910.             t$248 = _zla( 0, ibdim )
  910.             t$249 = _zla( 0, ibdim )
  910.             t$250 = _zla( 0, kmax )
  910.             t$251 = _zla( 0, ibdim ) * _zla( 0, kmax )
  910.             t$252 = _zla( 0, ibdim ) * _zla( 0, kmax )
  910.             t$253 = 4 * _zla( 0, ibdim ) * _zla( 0, kmax )
  910.             if ( $I_L903_272 == 0 ) then
  910.                if ( kmax > 0 ) then
  910.                   $SC_delsigma_I10 = delsigma%dim_1%EX
  910.                   $SC_delsigma_I11 = delsigma%dim_1%LB
  910.                   $SC_delsigma_I13 = delsigma%dim_2%SM
  910.                   $SC_delsigma_I12 = delsigma%dim_2%EX
  910.                   $SC_delsigma_I14 = delsigma%dim_2%LB
  910.                   $SC_ksigref_I5 = ksigref%dim_1%EX
  910.                   $SC_ksigref_I6 = ksigref%dim_1%LB
  910.                   $SC_ksigref_I8 = ksigref%dim_2%SM
  910.                   $SC_ksigref_I7 = ksigref%dim_2%EX
  910.                   $SC_ksigref_I9 = ksigref%dim_2%LB
  910.                   $SC_sigma_I0 = sigma%dim_1%EX
  910.                   $SC_sigma_I1 = sigma%dim_1%LB
  910.                   $SC_sigma_I3 = sigma%dim_2%SM
  910.                   $SC_sigma_I2 = sigma%dim_2%EX
  910.                   $SC_sigma_I4 = sigma%dim_2%LB
  910.                   if ( ibdim > 0 ) then
  910.                      $I_L910_235 = 0
  910. !dir$ blocking_size( 1, 1 )
  910.                      do
  910.                         $I_L910_202 = 0
  910. !dir$ ivdep
  910. !dir$ blocking_size( 256, 256 )
  910.                         do
  910.                            $ik_S3 = int( ( 1.0/delsigref * ( usigm(1 + $I_L910_202, 1 + $I_L910_235) + -(sigma%base_addr)(1 + $I_L910_202, 1, 0) ) ) )
  910.                            $kloc_WR0_R0 = (ksigref%base_addr)(1 + $I_L910_202, $ik_S3, 0)
  910.                            kloc(1 + $I_L910_202, 1 + $I_L910_235) = $kloc_WR0_R0
  910.                            if ( usigm(1 + $I_L910_202, 1 + $I_L910_235) > (sigma%base_addr)(1 + $I_L910_202, 1 + $kloc_WR0_R0, 0) ) then
  910.                               $kloc_WR0_R0 = 1 + $kloc_WR0_R0
  910.                               kloc(1 + $I_L910_202, 1 + $I_L910_235) = $kloc_WR0_R0
  910.                            endif
  910.                            usigdp(1 + $I_L910_202, 1 + $I_L910_235) = ( 1.0/(delsigma%base_addr)(1 + $I_L910_202, $kloc_WR0_R0, 0) * ( usigm(1 + $I_L910_202, 1 + $I_L910_235) + -(sigma%base_addr)(1 + $I_L910_202, $kloc_WR0_R0, 0) ) )
  910.                            $I_L910_202 = 1 + $I_L910_202
  910.                            if ( $I_L910_202 >= ibdim ) exit
  910.                         enddo
  910.                         $I_L910_235 = 1 + $I_L910_235
  910.                         if ( $I_L910_235 >= kmax ) exit
  910.                      enddo
  910.                   endif
  910.                endif
  910.             endif
  910.             if ( $klats_S4 == 4 ) then
  910.                kp(1) = -1
  910.                kp(2) = 0
  910.                kp(3) = 1
  910.                kp(4) = 2
  910.             else
  910.                kp(1) = 0
  910.                kp(2) = 1
  910.             endif
  910.             if ( kmax > 0 ) then
  910.                $SC_delphi_I25 = delphi%dim_1%EX
  910.                $SC_delphi_I26 = delphi%dim_1%LB
  910.                $SC_delphi_I28 = delphi%dim_2%SM
  910.                $SC_delphi_I27 = delphi%dim_2%EX
  910.                $SC_delphi_I29 = delphi%dim_2%LB
  910.                $SC_phi_I20 = phi%dim_1%EX
  910.                $SC_phi_I21 = phi%dim_1%LB
  910.                $SC_phi_I23 = phi%dim_2%SM
  910.                $SC_phi_I22 = phi%dim_2%EX
  910.                $SC_phi_I24 = phi%dim_2%LB
  910.                $SC_jphiref_I15 = jphiref%dim_1%EX
  910.                $SC_jphiref_I16 = jphiref%dim_1%LB
  910.                $SC_jphiref_I18 = jphiref%dim_2%SM
  910.                $SC_jphiref_I17 = jphiref%dim_2%EX
  910.                $SC_jphiref_I19 = jphiref%dim_2%LB
  910.                if ( ibdim > 0 ) then
  910.                   $I_L910_237 = 0
  910.                   do
  910.                      $I_L910_204 = 0
  910. !dir$ ivdep
  910.                      do
  910.                         $ik_S7 = int( ( 1.0/delphiref * ( 1.570796326794895 + ulatm(1 + $I_L910_204, 1 + $I_L910_237) ) ) )
  910.                         $jloc_WR0_R1 = (jphiref%base_addr)(1 + $I_L910_204, $ik_S7, 0)
  910.                         jloc(1 + $I_L910_204, 1 + $I_L910_237) = $jloc_WR0_R1
  910.                         if ( ulatm(1 + $I_L910_204, 1 + $I_L910_237) > (phi%base_addr)(1 + $I_L910_204, 1 + $jloc_WR0_R1, 0) ) then
  910.                            $jloc_WR0_R1 = 1 + $jloc_WR0_R1
  910.                            jloc(1 + $I_L910_204, 1 + $I_L910_237) = $jloc_WR0_R1
  910.                         endif
  910.                         ulatdp(1 + $I_L910_204, 1 + $I_L910_237) = ( 1.0/(delphi%base_addr)(1 + $I_L910_204, $jloc_WR0_R1, 0) * ( ulatm(1 + $I_L910_204, 1 + $I_L910_237) + -(phi%base_addr)(1 + $I_L910_204, $jloc_WR0_R1, 0) ) )
  910.                         $I_L910_204 = 1 + $I_L910_204
  910.                         if ( $I_L910_204 >= ibdim ) exit
  910.                      enddo
  910.                      $I_L910_237 = 1 + $I_L910_237
  910.                      if ( $I_L910_237 >= kmax ) exit
  910.                   enddo
  910.                endif
  910.             endif
  910.             if ( $klats_S4 > 0 ) then
  910.                $SC_dellon_I30 = dellon%dim_1%EX
  910.                $SC_dellon_I31 = dellon%dim_1%LB
  910.                $SC_dellon_I33 = dellon%dim_2%SM
  910.                $SC_dellon_I32 = dellon%dim_2%EX
  910.                $SC_dellon_I34 = dellon%dim_2%LB
  910.                if ( kmax > 0 ) then
  910.                   if ( ibdim > 0 ) then
  910.                      $I_L910_270 = 0
  910. !dir$ unroll 4
  910. !dir$ blocking_size( 1, 1 )
  910.                      do
  910.                         $ks_S11 = kp(1 + $I_L910_270)
  910.                         $I_L910_268 = 0
  910.                         do
  910.                            $I_L910_266 = 0
  910.                            do
  910.                               $I_L910_263 = 0
  910. !dir$ shortloop16
  910. !dir$ blocking_size( 2, 2 )
  910.                               do
  910.                                  $I_L910_206 = 0
  910. !dir$ ivdep
  910. !dir$ blocking_size( 256, 256 )
  910.                                  do
  910.                                     $j_S12 = 1 + jmax + -jloc(1 + $I_L910_206 + 256 * $I_L910_266, 1 + $I_L910_263 + 2 * $I_L910_268)
  910.                                     $ulondp_WR0_R2 = 1.0 + ( ulonm(1 + $I_L910_206 + 256 * $I_L910_266, 1 + $I_L910_263 + 2 * $I_L910_268) * 1.0/(dellon%base_addr)(1 + $I_L910_206 + 256 * $I_L910_266, $j_S12 + -$ks_S11, 0) )
  910.                                     iloc(1 + $I_L910_206 + 256 * $I_L910_266, 1 + $I_L910_263 + 2 * $I_L910_268, 1 + $I_L910_270) = int( $ulondp_WR0_R2 )
  910.                                     $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
  910.                                     ulondp(1 + $I_L910_206 + 256 * $I_L910_266, 1 + $I_L910_263 + 2 * $I_L910_268, 1 + $I_L910_270) = $ulondp_WR0_R2
  910.                                     $I_L910_206 = 1 + $I_L910_206
  910.                                     if ( $I_L910_206 >= min( ibdim, 256 + 256 * $I_L910_266 ) + -256 * $I_L910_266 ) exit
  910.                                  enddo
  910.                                  $I_L910_263 = 1 + $I_L910_263
  910.                                  if ( $I_L910_263 >= min( kmax, 2 + 2 * $I_L910_268 ) + -2 * $I_L910_268 ) exit
  910.                               enddo
  910.                               $I_L910_266 = 1 + $I_L910_266
  910.                               if ( $I_L910_266 >= 1 + max( 0, -1 + _rsh( 255 + ibdim, 8 ) ) ) exit
  910.                            enddo
  910.                            $I_L910_268 = 1 + $I_L910_268
  910.                            if ( $I_L910_268 >= 1 + max( 0, -1 + _rsh( 1 + kmax, 1 ) ) ) exit
  910.                         enddo
  910.                         $I_L910_270 = 1 + $I_L910_270
  910.                         if ( $I_L910_270 >= $klats_S4 ) exit
  910.                      enddo
  910.                   endif
  910.                endif
  910.             endif
  910.             if ( $klats_S4 == 1 ) then
  910.                $F_A33 = kmax
  910.                $F_A34 = ibdim
  910.                if ( and( -$F_A34, -$F_A33 ) < 0 ) then
  910.                   $I_L910_251 = 0
  910.                   do
  910.                      $I_L910_223 = 0
  910. !dir$ ivdep
  910.                      do
  910.                         iloc(1 + $I_L910_223, 1 + $I_L910_251, 2) = iloc(1 + $I_L910_223, 1 + $I_L910_251, 1)
  910.                         $I_L910_223 = 1 + $I_L910_223
  910.                         if ( $I_L910_223 >= $F_A34 ) exit
  910.                      enddo
  910.                      $I_L910_251 = 1 + $I_L910_251
  910.                      if ( $I_L910_251 >= $F_A33 ) exit
  910.                   enddo
  910.                endif
  910.                $F_A35 = kmax
  910.                $F_A36 = ibdim
  910.                if ( and( -$F_A36, -$F_A35 ) < 0 ) then
  910.                   $I_L910_253 = 0
  910.                   do
  910.                      $I_L910_225 = 0
  910. !dir$ ivdep
  910.                      do
  910.                         iloc(1 + $I_L910_225, 1 + $I_L910_253, 3) = iloc(1 + $I_L910_225, 1 + $I_L910_253, 1)
  910.                         $I_L910_225 = 1 + $I_L910_225
  910.                         if ( $I_L910_225 >= $F_A36 ) exit
  910.                      enddo
  910.                      $I_L910_253 = 1 + $I_L910_253
  910.                      if ( $I_L910_253 >= $F_A35 ) exit
  910.                   enddo
  910.                endif
  910.                $F_A37 = kmax
  910.                $F_A38 = ibdim
  910.                if ( and( -$F_A38, -$F_A37 ) < 0 ) then
  910.                   $I_L910_255 = 0
  910.                   do
  910.                      $I_L910_227 = 0
  910. !dir$ ivdep
  910.                      do
  910.                         iloc(1 + $I_L910_227, 1 + $I_L910_255, 4) = iloc(1 + $I_L910_227, 1 + $I_L910_255, 1)
  910.                         $I_L910_227 = 1 + $I_L910_227
  910.                         if ( $I_L910_227 >= $F_A38 ) exit
  910.                      enddo
  910.                      $I_L910_255 = 1 + $I_L910_255
  910.                      if ( $I_L910_255 >= $F_A37 ) exit
  910.                   enddo
  910.                endif
  910.                $F_A39 = kmax
  910.                $F_A40 = ibdim
  910.                if ( and( -$F_A40, -$F_A39 ) < 0 ) then
  910.                   $I_L910_257 = 0
  910.                   do
  910.                      $I_L910_229 = 0
  910. !dir$ ivdep
  910.                      do
  910.                         ulondp(1 + $I_L910_229, 1 + $I_L910_257, 2) = ulondp(1 + $I_L910_229, 1 + $I_L910_257, 1)
  910.                         $I_L910_229 = 1 + $I_L910_229
  910.                         if ( $I_L910_229 >= $F_A40 ) exit
  910.                      enddo
  910.                      $I_L910_257 = 1 + $I_L910_257
  910.                      if ( $I_L910_257 >= $F_A39 ) exit
  910.                   enddo
  910.                endif
  910.                $F_A41 = kmax
  910.                $F_A42 = ibdim
  910.                if ( and( -$F_A42, -$F_A41 ) < 0 ) then
  910.                   $I_L910_259 = 0
  910.                   do
  910.                      $I_L910_231 = 0
  910. !dir$ ivdep
  910.                      do
  910.                         ulondp(1 + $I_L910_231, 1 + $I_L910_259, 3) = ulondp(1 + $I_L910_231, 1 + $I_L910_259, 1)
  910.                         $I_L910_231 = 1 + $I_L910_231
  910.                         if ( $I_L910_231 >= $F_A42 ) exit
  910.                      enddo
  910.                      $I_L910_259 = 1 + $I_L910_259
  910.                      if ( $I_L910_259 >= $F_A41 ) exit
  910.                   enddo
  910.                endif
  910.                $F_A43 = kmax
  910.                $F_A44 = ibdim
  910.                if ( and( -$F_A44, -$F_A43 ) < 0 ) then
  910.                   $I_L910_261 = 0
  910.                   do
  910.                      $I_L910_233 = 0
  910. !dir$ ivdep
  910.                      do
  910.                         ulondp(1 + $I_L910_233, 1 + $I_L910_261, 4) = ulondp(1 + $I_L910_233, 1 + $I_L910_261, 1)
  910.                         $I_L910_233 = 1 + $I_L910_233
  910.                         if ( $I_L910_233 >= $F_A44 ) exit
  910.                      enddo
  910.                      $I_L910_261 = 1 + $I_L910_261
  910.                      if ( $I_L910_261 >= $F_A43 ) exit
  910.                   enddo
  910.                endif
  910.             endif
  910.             iloc(1, 1, 1) = _copyout( iloc )
  910.             ulondp(1, 1, 1) = _copyout( ulondp )
  919.             call interplg( wint(1), (fgw%base_addr)(fgw%dim_1%LB, fgw%dim_2%LB, fgw%dim_3%LB, 0), ulondp(1, 1, 1), ulatdp(1, 1), usigdp(1, 1), iloc(1, 1, 1), jloc(1, 1), kloc(1, 1), ibdim, ip(1, 1, 1), jn(1, 1, 1) )
  928.             tm$827 = loc( wint(1) )
  928.             w = _copyin( wint(1) )
  928.             t$25 = ibdim
  928.             t$26 = kmax
  928.             t$229 = max( 0, ibdim )
  928.             t$230 = max( 0, ibdim )
  928.             t$231 = max( 0, kmax )
  928.             t$232 = max( 0, ibdim ) * max( 0, kmax )
  928.             if ( kmax > 0 ) then
  928.                $SC_cl_I35 = cl%dim_1%EX
  928.                $SC_cl_I36 = cl%dim_1%LB
  928.                if ( ibdim > 0 ) then
  928.                   $SC_cl_I38 = (cl%base_addr)(kmax, 0)
  928.                   $SC_cl_I37 = (cl%base_addr)(1, 0)
  928.                   $I_L928_239 = 0
  928.                   do
  928.                      $SCA_cl_I39 = (cl%base_addr)(1 + $I_L928_239, 0)
  928.                      $I_L928_209 = 0
  928. !dir$ ivdep
  928.                      do
  928.                         usigm(1 + $I_L928_209, 1 + $I_L928_239) = min( $SC_cl_I38, max( $SC_cl_I37, $SCA_cl_I39 + -( delt * w(1 + $I_L928_209, 1 + $I_L928_239) ) ) )
  928.                         $I_L928_209 = 1 + $I_L928_209
  928.                         if ( $I_L928_209 >= ibdim ) exit
  928.                      enddo
  928.                      $I_L928_239 = 1 + $I_L928_239
  928.                      if ( $I_L928_239 >= kmax ) exit
  928.                   enddo
  928.                endif
  933.                $SC_delsigma_I10 = delsigma%dim_1%EX
  933.                $SC_delsigma_I11 = delsigma%dim_1%LB
  933.                $SC_delsigma_I13 = delsigma%dim_2%SM
  933.                $SC_delsigma_I12 = delsigma%dim_2%EX
  933.                $SC_delsigma_I14 = delsigma%dim_2%LB
  933.                $SC_ksigref_I5 = ksigref%dim_1%EX
  933.                $SC_ksigref_I6 = ksigref%dim_1%LB
  933.                $SC_ksigref_I8 = ksigref%dim_2%SM
  933.                $SC_ksigref_I7 = ksigref%dim_2%EX
  933.                $SC_ksigref_I9 = ksigref%dim_2%LB
  933.                $SC_sigma_I0 = sigma%dim_1%EX
  933.                $SC_sigma_I1 = sigma%dim_1%LB
  933.                $SC_sigma_I3 = sigma%dim_2%SM
  933.                $SC_sigma_I2 = sigma%dim_2%EX
  933.                $SC_sigma_I4 = sigma%dim_2%LB
  933.                if ( ibdim > 0 ) then
  933.                   $I_L933_243 = 0
  933. !dir$ blocking_size( 1, 1 )
  933.                   do
  933.                      $I_L933_213 = 0
  933. !dir$ ivdep
  933. !dir$ blocking_size( 256, 256 )
  933.                      do
  933.                         $ik_S17 = int( ( 1.0/delsigref * ( usigm(1 + $I_L933_213, 1 + $I_L933_243) + -(sigma%base_addr)(1 + $I_L933_213, 1, 0) ) ) )
  933.                         $kloc_WR0_R4 = (ksigref%base_addr)(1 + $I_L933_213, $ik_S17, 0)
  933.                         kloc(1 + $I_L933_213, 1 + $I_L933_243) = $kloc_WR0_R4
  933.                         if ( usigm(1 + $I_L933_213, 1 + $I_L933_243) > (sigma%base_addr)(1 + $I_L933_213, 1 + $kloc_WR0_R4, 0) ) then
  933.                            $kloc_WR0_R4 = 1 + $kloc_WR0_R4
  933.                            kloc(1 + $I_L933_213, 1 + $I_L933_243) = $kloc_WR0_R4
  933.                         endif
  933.                         usigdp(1 + $I_L933_213, 1 + $I_L933_243) = ( 1.0/(delsigma%base_addr)(1 + $I_L933_213, $kloc_WR0_R4, 0) * ( usigm(1 + $I_L933_213, 1 + $I_L933_243) + -(sigma%base_addr)(1 + $I_L933_213, $kloc_WR0_R4, 0) ) )
  933.                         $I_L933_213 = 1 + $I_L933_213
  933.                         if ( $I_L933_213 >= ibdim ) exit
  933.                      enddo
  933.                      $I_L933_243 = 1 + $I_L933_243
  933.                      if ( $I_L933_243 >= kmax ) exit
  933.                   enddo
  933.                endif
  933.             endif
  928.             if ( $I_L903_272 + -nit == -1 ) then
  928.                if ( kmax > 0 ) then
  928.                   $SC_cl_I35 = cl%dim_1%EX
  928.                   $SC_cl_I36 = cl%dim_1%LB
  928.                   if ( ibdim > 0 ) then
  928.                      $SC_cl_I38 = (cl%base_addr)(kmax, 0)
  928.                      $SC_cl_I37 = (cl%base_addr)(1, 0)
  928.                      $I_L928_241 = 0
  928.                      do
  928.                         $SCA_cl_I40 = (cl%base_addr)(1 + $I_L928_241, 0)
  928.                         $I_L928_211 = 0
  928. !dir$ ivdep
  928.                         do
  928.                            usig(1 + $I_L928_211, 1 + $I_L928_241) = min( $SC_cl_I38, max( $SC_cl_I37, -$SCA_cl_I40 + 2.0 * usigm(1 + $I_L928_211, 1 + $I_L928_241) ) )
  928.                            $I_L928_211 = 1 + $I_L928_211
  928.                            if ( $I_L928_211 >= ibdim ) exit
  928.                         enddo
  928.                         $I_L928_241 = 1 + $I_L928_241
  928.                         if ( $I_L928_241 >= kmax ) exit
  928.                      enddo
  928.                   endif
  928.                endif
  928.             endif
  928.             wint(1) = _copyout( w )
  933.             tm$849 = loc( ulondp(1, 1, 1) )
  933.             ulondp = _copyin( ulondp(1, 1, 1) )
  933.             tm$851 = loc( iloc(1, 1, 1) )
  933.             iloc = _copyin( iloc(1, 1, 1) )
  933.             t$31 = ibdim
  933.             t$32 = kmax
  933.             t$248 = max( 0, ibdim )
  933.             t$249 = max( 0, ibdim )
  933.             t$250 = max( 0, kmax )
  933.             t$251 = max( 0, ibdim ) * max( 0, kmax )
  933.             t$252 = max( 0, ibdim ) * max( 0, kmax )
  933.             t$253 = 4 * max( 0, ibdim ) * max( 0, kmax )
  933.             iloc(1, 1, 1) = _copyout( iloc )
  933.             ulondp(1, 1, 1) = _copyout( ulondp )
  942.             tm$878 = loc( (fgu%base_addr)(fgu%dim_1%LB, fgu%dim_2%LB, fgu%dim_3%LB, 0) )
  942.             u = _copyin( (fgu%base_addr)(fgu%dim_1%LB, fgu%dim_2%LB, fgu%dim_3%LB, 0) )
  942.             tm$880 = loc( (fgv%base_addr)(fgv%dim_1%LB, fgv%dim_2%LB, fgv%dim_3%LB, 0) )
  942.             v = _copyin( (fgv%base_addr)(fgv%dim_1%LB, fgv%dim_2%LB, fgv%dim_3%LB, 0) )
  942.             tm$882 = loc( uint(1) )
  942.             uint = _copyin( uint(1) )
  942.             tm$884 = loc( vint(1) )
  942.             vint = _copyin( vint(1) )
  942.             tm$886 = loc( ulondp(1, 1, 1) )
  942.             ulondp = _copyin( ulondp(1, 1, 1) )
  942.             tm$888 = loc( ip(1, 1, 1) )
  942.             ip = _copyin( ip(1, 1, 1) )
  942.             tm$890 = loc( jn(1, 1, 1) )
  942.             jn = _copyin( jn(1, 1, 1) )
  942.             t$36 = ibmax
  942.             t$35 = kmax
  942.             t$37 = jbmax_ext
  942.             t$257 = max( 0, ibmax )
  942.             t$258 = max( 0, ibmax )
  942.             t$259 = max( 0, kmax )
  942.             t$260 = max( 0, kmax ) * max( 0, ibmax )
  942.             t$261 = max( 0, jbmax_ext )
  942.             t$262 = max( 0, kmax ) * max( 0, ibmax ) * max( 0, jbmax_ext )
  942.             t$34 = ibdim
  942.             t$263 = max( 0, ibdim )
  942.             t$264 = max( 0, ibdim )
  942.             t$265 = max( 0, ibdim ) * max( 0, kmax )
  942.             t$266 = max( 0, ibdim ) * max( 0, kmax )
  942.             t$267 = 2 * max( 0, ibdim ) * max( 0, kmax )
  942.             t$268 = 4 * max( 0, ibdim ) * max( 0, kmax )
  942.             if ( kmax > 0 ) then
  942.                if ( ibdim > 0 ) then
  942.                   $I_L942_245 = 0
  942.                   do
  942.                      $I_L942_215 = 0
  942. !dir$ ivdep
  942.                      do
  942.                         $s1_S27 = cvmg( 1.0, -1.0, jloc(1 + $I_L942_215, 1 + $I_L942_245) /= 0 )
  942.                         $s2_S24 = cvmg( 1.0, -1.0, jloc(1 + $I_L942_215, 1 + $I_L942_245) + -jmax /= 0 )
  942.                         $f1_S25 = u(ip(1 + $I_L942_215, 1 + $I_L942_245, 1), kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 1)) + ulondp(1 + $I_L942_215, 1 + $I_L942_245, 1) * ( u(ip(1 + $I_L942_215, 1 + $I_L942_245, 3), kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 3)) + -u(ip(1 + $I_L942_215, 1 + $I_L942_245, 1), kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 1)) )
  942.                         $g1_S32 = v(ip(1 + $I_L942_215, 1 + $I_L942_245, 1), kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 1)) + ulondp(1 + $I_L942_215, 1 + $I_L942_245, 1) * ( v(ip(1 + $I_L942_215, 1 + $I_L942_245, 3), kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 3)) + -v(ip(1 + $I_L942_215, 1 + $I_L942_245, 1), kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 1)) )
  942.                         $f2_S22 = u(ip(1 + $I_L942_215, 1 + $I_L942_245, 2), kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 2)) + ulondp(1 + $I_L942_215, 1 + $I_L942_245, 2) * ( u(ip(1 + $I_L942_215, 1 + $I_L942_245, 4), kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 4)) + -u(ip(1 + $I_L942_215, 1 + $I_L942_245, 2), kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 2)) )
  942.                         $g2_S30 = v(ip(1 + $I_L942_215, 1 + $I_L942_245, 2), kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 2)) + ulondp(1 + $I_L942_215, 1 + $I_L942_245, 2) * ( v(ip(1 + $I_L942_215, 1 + $I_L942_245, 4), kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 4)) + -v(ip(1 + $I_L942_215, 1 + $I_L942_245, 2), kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 2)) )
  942.                         $f3_S26 = u(ip(1 + $I_L942_215, 1 + $I_L942_245, 1), 1 + kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 1)) + ulondp(1 + $I_L942_215, 1 + $I_L942_245, 1) * ( u(ip(1 + $I_L942_215, 1 + $I_L942_245, 3), 1 + kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 3)) + -u(ip(1 + $I_L942_215, 1 + $I_L942_245, 1), 1 + kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 1)) )
  942.                         $g3_S33 = v(ip(1 + $I_L942_215, 1 + $I_L942_245, 1), 1 + kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 1)) + ulondp(1 + $I_L942_215, 1 + $I_L942_245, 1) * ( v(ip(1 + $I_L942_215, 1 + $I_L942_245, 3), 1 + kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 3)) + -v(ip(1 + $I_L942_215, 1 + $I_L942_245, 1), 1 + kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 1)) )
  942.                         $f4_S23 = u(ip(1 + $I_L942_215, 1 + $I_L942_245, 2), 1 + kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 2)) + ulondp(1 + $I_L942_215, 1 + $I_L942_245, 2) * ( u(ip(1 + $I_L942_215, 1 + $I_L942_245, 4), 1 + kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 4)) + -u(ip(1 + $I_L942_215, 1 + $I_L942_245, 2), 1 + kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 2)) )
  942.                         $g4_S31 = v(ip(1 + $I_L942_215, 1 + $I_L942_245, 2), 1 + kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 2)) + ulondp(1 + $I_L942_215, 1 + $I_L942_245, 2) * ( v(ip(1 + $I_L942_215, 1 + $I_L942_245, 4), 1 + kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 4)) + -v(ip(1 + $I_L942_215, 1 + $I_L942_245, 2), 1 + kloc(1 + $I_L942_215, 1 + $I_L942_245), jn(1 + $I_L942_215, 1 + $I_L942_245, 2)) )
  942.                         $f2_S29 = $s2_S24 * ( $f2_S22 + usigdp(1 + $I_L942_215, 1 + $I_L942_245) * ( $f4_S23 + -$f2_S22 ) )
  942.                         $f1_S28 = $s1_S27 * ( $f1_S25 + usigdp(1 + $I_L942_215, 1 + $I_L942_245) * ( $f3_S26 + -$f1_S25 ) )
  942.                         uint(1 + $I_L942_215, 1 + $I_L942_245) = $f1_S28 + ulatdp(1 + $I_L942_215, 1 + $I_L942_245) * ( $f2_S29 + -$f1_S28 )
  942.                         $g2_S35 = $s2_S24 * ( $g2_S30 + usigdp(1 + $I_L942_215, 1 + $I_L942_245) * ( $g4_S31 + -$g2_S30 ) )
  942.                         $g1_S34 = $s1_S27 * ( $g1_S32 + usigdp(1 + $I_L942_215, 1 + $I_L942_245) * ( $g3_S33 + -$g1_S32 ) )
  942.                         vint(1 + $I_L942_215, 1 + $I_L942_245) = $g1_S34 + ulatdp(1 + $I_L942_215, 1 + $I_L942_245) * ( $g2_S35 + -$g1_S34 )
  942.                         $I_L942_215 = 1 + $I_L942_215
  942.                         if ( $I_L942_215 >= ibdim ) exit
  942.                      enddo
  942.                      $I_L942_245 = 1 + $I_L942_245
  942.                      if ( $I_L942_245 >= kmax ) exit
  942.                   enddo
  942.                endif
  942.             endif
  942.             jn(1, 1, 1) = _copyout( jn )
  942.             ip(1, 1, 1) = _copyout( ip )
  942.             ulondp(1, 1, 1) = _copyout( ulondp )
  942.             vint(1) = _copyout( vint )
  942.             uint(1) = _copyout( uint )
  942.             (fgv%base_addr)(fgv%dim_1%LB, fgv%dim_2%LB, fgv%dim_3%LB, 0) = _copyout( v )
  942.             (fgu%base_addr)(fgu%dim_1%LB, fgu%dim_2%LB, fgu%dim_3%LB, 0) = _copyout( u )
  952.             tm$910 = loc( (coslon%base_addr)(1, jb, 0) )
  952.             coslon = _copyin( (coslon%base_addr)(1, jb, 0) )
  952.             tm$912 = loc( (sinlon%base_addr)(1, jb, 0) )
  952.             sinlon = _copyin( (sinlon%base_addr)(1, jb, 0) )
  952.             tm$914 = loc( (coslat%base_addr)(1, jb, 0) )
  952.             coslat = _copyin( (coslat%base_addr)(1, jb, 0) )
  952.             tm$916 = loc( (sinlat%base_addr)(1, jb, 0) )
  952.             sinlat = _copyin( (sinlat%base_addr)(1, jb, 0) )
  952.             tm$918 = loc( uint(1) )
  952.             u = _copyin( uint(1) )
  952.             tm$920 = loc( vint(1) )
  952.             v = _copyin( vint(1) )
  952.             t$27 = ibdim
  952.             t$28 = kmax
  952.             t$233 = max( 0, ibdim )
  952.             t$234 = max( 0, ibdim )
  952.             t$235 = max( 0, kmax )
  952.             t$236 = max( 0, ibdim ) * max( 0, kmax )
  952.             t$29 = ibmax
  952.             t$237 = max( 0, ibmax )
  952.             t$240 = 8 * max( 0, ibmax )
  952.             t$241 = 8 * ( 7 + 8 * max( 0, ibmax ) ) / 8
  952.             t$243 = t$241 + 8 * max( 0, ibmax )
  952.             t$244 = 8 * ( 7 + t$241 + 8 * max( 0, ibmax ) ) / 8
  952.             t$246 = t$244 + 8 * max( 0, ibmax )
  952.             t$238 = int( _alloc( t$244 + 8 * max( 0, ibmax ) ), 8 )
  952.             t$239 = t$238
  952.             t$242 = t$241 + t$238
  952.             t$245 = t$244 + t$238
  952.             $dt2_S46 = delt * delt
  952.             $twodt_S47 = 2.0 * delt
  952.             if ( ibdim > 0 ) then
  952.                $I_L952_217 = 0
  952. !dir$ ivdep
  952.                do
  952.                   x(1 + $I_L952_217) = coslon(1 + $I_L952_217) * coslat(1 + $I_L952_217)
  952.                   y(1 + $I_L952_217) = coslat(1 + $I_L952_217) * sinlon(1 + $I_L952_217)
  952.                   z(1 + $I_L952_217) = sinlat(1 + $I_L952_217)
  952.                   $I_L952_217 = 1 + $I_L952_217
  952.                   if ( $I_L952_217 >= ibdim ) exit
  952.                enddo
  952.             endif
  952.             if ( $I_L903_272 + -nit == -1 ) then
  952.                if ( kmax > 0 ) then
  952.                   if ( ibdim > 0 ) then
  952.                      $I_L952_249 = 0
  952. !dir$ blocking_size( 1, 1 )
  952.                      do
  952.                         $I_L952_221 = 0
  952. !dir$ ivdep
  952. !dir$ blocking_size( 256, 256 )
  952.                         do
  952.                            $Coss_P14 = coss( ulonm(1 + $I_L952_221, 1 + $I_L952_249) )
  952.                            $Coss_P15 = coss( ulatm(1 + $I_L952_221, 1 + $I_L952_249) )
  952.                            $xdot_S45 = -( u(1 + $I_L952_221, 1 + $I_L952_249) * cimag( $Coss_P14 ) + cimag( $Coss_P15 ) * v(1 + $I_L952_221, 1 + $I_L952_249) * real( $Coss_P14, 8 ) )
  952.                            $ydot_S44 = -( cimag( $Coss_P15 ) * v(1 + $I_L952_221, 1 + $I_L952_249) * cimag( $Coss_P14 ) ) + u(1 + $I_L952_221, 1 + $I_L952_249) * real( $Coss_P14, 8 )
  952.                            $zdot_S43 = v(1 + $I_L952_221, 1 + $I_L952_249) * real( $Coss_P15, 8 )
  952.                            $r_S48 = 1.0 + -( $twodt_S47 * ( $zdot_S43 * z(1 + $I_L952_221) + $xdot_S45 * x(1 + $I_L952_221) + $ydot_S44 * y(1 + $I_L952_221) ) ) + $dt2_S46 * ( $zdot_S43 * $zdot_S43 + $ydot_S44 * $ydot_S44 + $xdot_S45 * $xdot_S45 )
  952.                            $xb_S49 = _recip_sqrt( $r_S48 ) * ( x(1 + $I_L952_221) + -( delt * $xdot_S45 ) )
  952.                            $yb_S50 = _recip_sqrt( $r_S48 ) * ( y(1 + $I_L952_221) + -( delt * $ydot_S44 ) )
  952.                            $zb_S52 = _recip_sqrt( $r_S48 ) * ( z(1 + $I_L952_221) + -( delt * $zdot_S43 ) )
  952.                            $Flat_S51 = atan2( $yb_S50, $xb_S49 )
  952.                            ulonm(1 + $I_L952_221, 1 + $I_L952_249) = $Flat_S51
  952.                            if ( $Flat_S51 < 0.0 ) then
  952.                               ulonm(1 + $I_L952_221, 1 + $I_L952_249) = 6.28318530717958 + $Flat_S51
  952.                            endif
  952.                            $Flat_S53 = asin( $zb_S52 )
  952.                            ulatm(1 + $I_L952_221, 1 + $I_L952_249) = $Flat_S53
  952.                            $dot2_S54 = 2.0 * ( $xb_S49 * x(1 + $I_L952_221) + $zb_S52 * z(1 + $I_L952_221) + $yb_S50 * y(1 + $I_L952_221) )
  952.                            $xm_S55 = -x(1 + $I_L952_221) + $xb_S49 * $dot2_S54
  952.                            $ym_S56 = -y(1 + $I_L952_221) + $yb_S50 * $dot2_S54
  952.                            $zm_S58 = -z(1 + $I_L952_221) + $zb_S52 * $dot2_S54
  952.                            $Flat_S57 = atan2( $ym_S56, $xm_S55 )
  952.                            ulon(1 + $I_L952_221, 1 + $I_L952_249) = $Flat_S57
  952.                            if ( $Flat_S57 < 0.0 ) then
  952.                               ulon(1 + $I_L952_221, 1 + $I_L952_249) = 6.28318530717958 + $Flat_S57
  952.                            endif
  952.                            $Flat_S59 = asin( $zm_S58 )
  952.                            ulat(1 + $I_L952_221, 1 + $I_L952_249) = $Flat_S59
  952.                            $I_L952_221 = 1 + $I_L952_221
  952.                            if ( $I_L952_221 >= ibdim ) exit
  952.                         enddo
  952.                         $I_L952_249 = 1 + $I_L952_249
  952.                         if ( $I_L952_249 >= kmax ) exit
  952.                      enddo
  952.                   endif
  952.                endif
  952.             else if ( kmax > 0 ) then
  952.                if ( ibdim > 0 ) then
  952.                   $I_L952_247 = 0
  952. !dir$ blocking_size( 1, 1 )
  952.                   do
  952.                      $I_L952_219 = 0
  952. !dir$ ivdep
  952. !dir$ blocking_size( 256, 256 )
  952.                      do
  952.                         $Coss_P16 = coss( ulonm(1 + $I_L952_219, 1 + $I_L952_247) )
  952.                         $Coss_P17 = coss( ulatm(1 + $I_L952_219, 1 + $I_L952_247) )
  952.                         $xdot_S68 = -( u(1 + $I_L952_219, 1 + $I_L952_247) * cimag( $Coss_P16 ) + cimag( $Coss_P17 ) * v(1 + $I_L952_219, 1 + $I_L952_247) * real( $Coss_P16, 8 ) )
  952.                         $ydot_S67 = -( cimag( $Coss_P17 ) * v(1 + $I_L952_219, 1 + $I_L952_247) * cimag( $Coss_P16 ) ) + u(1 + $I_L952_219, 1 + $I_L952_247) * real( $Coss_P16, 8 )
  952.                         $zdot_S66 = v(1 + $I_L952_219, 1 + $I_L952_247) * real( $Coss_P17, 8 )
  952.                         $r_S69 = 1.0 + -( $twodt_S47 * ( $zdot_S66 * z(1 + $I_L952_219) + $xdot_S68 * x(1 + $I_L952_219) + $ydot_S67 * y(1 + $I_L952_219) ) ) + $dt2_S46 * ( $zdot_S66 * $zdot_S66 + $ydot_S67 * $ydot_S67 + $xdot_S68 * $xdot_S68 )
  952.                         $xb_S70 = _recip_sqrt( $r_S69 ) * ( x(1 + $I_L952_219) + -( delt * $xdot_S68 ) )
  952.                         $yb_S71 = _recip_sqrt( $r_S69 ) * ( y(1 + $I_L952_219) + -( delt * $ydot_S67 ) )
  952.                         $zb_S73 = _recip_sqrt( $r_S69 ) * ( z(1 + $I_L952_219) + -( delt * $zdot_S66 ) )
  952.                         $Flat_S72 = atan2( $yb_S71, $xb_S70 )
  952.                         ulonm(1 + $I_L952_219, 1 + $I_L952_247) = $Flat_S72
  952.                         if ( $Flat_S72 < 0.0 ) then
  952.                            ulonm(1 + $I_L952_219, 1 + $I_L952_247) = 6.28318530717958 + $Flat_S72
  952.                         endif
  952.                         $Flat_S74 = asin( $zb_S73 )
  952.                         ulatm(1 + $I_L952_219, 1 + $I_L952_247) = $Flat_S74
  952.                         $I_L952_219 = 1 + $I_L952_219
  952.                         if ( $I_L952_219 >= ibdim ) exit
  952.                      enddo
  952.                      $I_L952_247 = 1 + $I_L952_247
  952.                      if ( $I_L952_247 >= kmax ) exit
  952.                   enddo
  952.                endif
  952.             endif
  952.             _free( t$238 )
  952.             vint(1) = _copyout( v )
  952.             uint(1) = _copyout( u )
  952.             (sinlat%base_addr)(1, jb, 0) = _copyout( sinlat )
  952.             (coslat%base_addr)(1, jb, 0) = _copyout( coslat )
  952.             (sinlon%base_addr)(1, jb, 0) = _copyout( sinlon )
  952.             (coslon%base_addr)(1, jb, 0) = _copyout( coslon )
  957.             $I_L903_272 = 1 + $I_L903_272
  952.             if ( $I_L903_272 >= nit ) exit
  952.          enddo
  952.       endif
  858.       _free( t$186 )
  959.       return
  959.       end
  959.       
  960.       
  960.       subroutine trajectory2d( ulonm, ulatm, ulon, ulat, ulondp, ulatdp, iloc, jloc, ibdim, jb, nit, delt )
  960.       t$16 = ibdim
  979.       t$195 = _zla( 0, ibdim )
  960.       t$196 = _zla( 0, ibdim )
  960.       t$197 = 4 * _zla( 0, ibdim )
  960.       t$17 = ibmax
  989.       t$198 = _zla( 0, ibmax )
  989.       t$201 = 8 * _zla( 0, ibmax )
  990.       t$202 = 8 * ( 7 + 8 * _zla( 0, ibmax ) ) / 8
  990.       t$204 = t$202 + 8 * _zla( 0, ibmax )
  960.       t$199 = int( _alloc( t$202 + 8 * _zla( 0, ibmax ) ), 8 )
  989.       t$200 = t$199
  990.       t$203 = t$202 + t$199
  995.       $klats_S0 = 1
  996.       if ( reducedgrid /= .false. ) then
  996.          $klats_S0 = 2
  996.       endif
  997.       if ( nit > 0 ) then
 1022.          $SC_sinlon_I45 = sinlon%dim_1%EX
 1022.          $SC_sinlon_I46 = sinlon%dim_1%LB
 1022.          $SC_sinlon_I47 = sinlon%dim_2%EX
 1022.          $SC_coslon_I40 = coslon%dim_1%EX
 1022.          $SC_coslon_I41 = coslon%dim_1%LB
 1022.          $SC_coslon_I43 = coslon%dim_2%SM
 1022.          $SC_coslon_I42 = coslon%dim_2%EX
 1022.          $SC_coslon_I44 = coslon%dim_2%LB
 1012.          $SC_jbperij_I35 = jbperij%dim_1%EX
 1012.          $SC_jbperij_I36 = jbperij%dim_1%LB
 1012.          $SC_jbperij_I38 = jbperij%dim_2%SM
 1012.          $SC_jbperij_I37 = jbperij%dim_2%EX
 1012.          $SC_jbperij_I39 = jbperij%dim_2%LB
 1012.          $SC_ibperij_I30 = ibperij%dim_1%EX
 1012.          $SC_ibperij_I31 = ibperij%dim_1%LB
 1012.          $SC_ibperij_I33 = ibperij%dim_2%SM
 1012.          $SC_ibperij_I32 = ibperij%dim_2%EX
 1012.          $SC_ibperij_I34 = ibperij%dim_2%LB
 1012.          $SC_fgvmean_I25 = fgvmean%dim_1%EX
 1012.          $SC_fgvmean_I26 = fgvmean%dim_1%LB
 1012.          $SC_fgvmean_I28 = fgvmean%dim_2%SM
 1012.          $SC_fgvmean_I27 = fgvmean%dim_2%EX
 1012.          $SC_fgvmean_I29 = fgvmean%dim_2%LB
 1012.          $SC_fgumean_I20 = fgumean%dim_1%EX
 1012.          $SC_fgumean_I21 = fgumean%dim_1%LB
 1012.          $SC_fgumean_I23 = fgumean%dim_2%SM
 1012.          $SC_fgumean_I22 = fgumean%dim_2%EX
 1012.          $SC_fgumean_I24 = fgumean%dim_2%LB
 1003.          $SC_dellon_I15 = dellon%dim_1%EX
 1003.          $SC_dellon_I16 = dellon%dim_1%LB
 1003.          $SC_dellon_I18 = dellon%dim_2%SM
 1003.          $SC_dellon_I17 = dellon%dim_2%EX
 1003.          $SC_dellon_I19 = dellon%dim_2%LB
 1003.          $SC_delphi_I10 = delphi%dim_1%EX
 1003.          $SC_delphi_I11 = delphi%dim_1%LB
 1003.          $SC_delphi_I13 = delphi%dim_2%SM
 1003.          $SC_delphi_I12 = delphi%dim_2%EX
 1003.          $SC_delphi_I14 = delphi%dim_2%LB
 1003.          $SC_phi_I5 = phi%dim_1%EX
 1003.          $SC_phi_I6 = phi%dim_1%LB
 1003.          $SC_phi_I8 = phi%dim_2%SM
 1003.          $SC_phi_I7 = phi%dim_2%EX
 1003.          $SC_phi_I9 = phi%dim_2%LB
 1003.          $SC_jphiref_I0 = jphiref%dim_1%EX
 1003.          $SC_jphiref_I1 = jphiref%dim_1%LB
 1003.          $SC_jphiref_I3 = jphiref%dim_2%SM
 1003.          $SC_jphiref_I2 = jphiref%dim_2%EX
 1003.          $SC_jphiref_I4 = jphiref%dim_2%LB
  997.          $I_L997_106 = 0
  997.          do
 1003.             t$33 = ibdim
 1003.             t$254 = _zla( 0, ibdim )
 1003.             t$255 = _zla( 0, ibdim )
 1003.             t$256 = 4 * _zla( 0, ibdim )
 1003.             if ( $klats_S0 == 4 ) then
 1003.                kp(1) = -1
 1003.                kp(2) = 0
 1003.                kp(3) = 1
 1003.                kp(4) = 2
 1003.             else
 1003.                kp(1) = 0
 1003.                kp(2) = 1
 1003.             endif
 1003.             if ( ibdim > 0 ) then
 1003.                $I_L1003_74 = 0
 1003. !dir$ ivdep
 1003.                do
 1003.                   $ik_S2 = int( ( 1.0/delphiref * ( 1.570796326794895 + ulatm(1 + $I_L1003_74) ) ) )
 1003.                   $jloc_WR0_R0 = (jphiref%base_addr)(1 + $I_L1003_74, $ik_S2, 0)
 1003.                   jloc(1 + $I_L1003_74) = $jloc_WR0_R0
 1003.                   if ( ulatm(1 + $I_L1003_74) > (phi%base_addr)(1 + $I_L1003_74, 1 + $jloc_WR0_R0, 0) ) then
 1003.                      $jloc_WR0_R0 = 1 + $jloc_WR0_R0
 1003.                      jloc(1 + $I_L1003_74) = $jloc_WR0_R0
 1003.                   endif
 1003.                   ulatdp(1 + $I_L1003_74) = ( 1.0/(delphi%base_addr)(1 + $I_L1003_74, $jloc_WR0_R0, 0) * ( ulatm(1 + $I_L1003_74) + -(phi%base_addr)(1 + $I_L1003_74, $jloc_WR0_R0, 0) ) )
 1003.                   $I_L1003_74 = 1 + $I_L1003_74
 1003.                   if ( $I_L1003_74 >= ibdim ) exit
 1003.                enddo
 1003.             endif
 1003.             if ( $klats_S0 > 0 ) then
 1003.                if ( ibdim > 0 ) then
 1003.                   $I_L1003_104 = 0
 1003.                   do
 1003.                      $I_L1003_102 = 0
 1003.                      do
 1003.                         $I_L1003_108 = 0
 1003. !dir$ shortloop16
 1003. !dir$ blocking_size( 2, 2 )
 1003.                         do
 1003.                            $ks_S5 = kp(1 + $I_L1003_108 + 2 * $I_L1003_104)
 1003.                            $I_L1003_76 = 0
 1003. !dir$ ivdep
 1003. !dir$ blocking_size( 256, 256 )
 1003.                            do
 1003.                               $j_S6 = 1 + jmax + -jloc(1 + $I_L1003_76 + 256 * $I_L1003_102)
 1003.                               $ulondp_WR0_R1 = 1.0 + ( ulonm(1 + $I_L1003_76 + 256 * $I_L1003_102) * 1.0/(dellon%base_addr)(1 + $I_L1003_76 + 256 * $I_L1003_102, $j_S6 + -$ks_S5, 0) )
 1003.                               iloc(1 + $I_L1003_76 + 256 * $I_L1003_102, 1 + $I_L1003_108 + 2 * $I_L1003_104) = int( $ulondp_WR0_R1 )
 1003.                               $ulondp_WR0_R1 = $ulondp_WR0_R1 + ( -( int( $ulondp_WR0_R1 ) ) )
 1003.                               ulondp(1 + $I_L1003_76 + 256 * $I_L1003_102, 1 + $I_L1003_108 + 2 * $I_L1003_104) = $ulondp_WR0_R1
 1003.                               $I_L1003_76 = 1 + $I_L1003_76
 1003.                               if ( $I_L1003_76 >= min( ibdim, 256 + 256 * $I_L1003_102 ) + -256 * $I_L1003_102 ) exit
 1003.                            enddo
 1003.                            $I_L1003_108 = 1 + $I_L1003_108
 1003.                            if ( $I_L1003_108 >= min( $klats_S0, 2 + 2 * $I_L1003_104 ) + -2 * $I_L1003_104 ) exit
 1003.                         enddo
 1003.                         $I_L1003_102 = 1 + $I_L1003_102
 1003.                         if ( $I_L1003_102 >= 1 + max( 0, -1 + _rsh( 255 + ibdim, 8 ) ) ) exit
 1003.                      enddo
 1003.                      $I_L1003_104 = 1 + $I_L1003_104
 1003.                      if ( $I_L1003_104 >= 1 + max( 0, -1 + _rsh( 1 + $klats_S0, 1 ) ) ) exit
 1003.                   enddo
 1003.                endif
 1003.             endif
 1003.             if ( $klats_S0 == 1 ) then
 1003.                $F_A33 = ibdim
 1003.                if ( ibdim > 0 ) then
 1003.                   $I_L1003_87 = 0
 1003. !dir$ ivdep
 1003.                   do
 1003.                      iloc(1 + $I_L1003_87, 2) = iloc(1 + $I_L1003_87, 1)
 1003.                      $I_L1003_87 = 1 + $I_L1003_87
 1003.                      if ( $I_L1003_87 >= $F_A33 ) exit
 1003.                   enddo
 1003.                endif
 1003.                $F_A34 = ibdim
 1003.                if ( ibdim > 0 ) then
 1003.                   $I_L1003_89 = 0
 1003. !dir$ ivdep
 1003.                   do
 1003.                      iloc(1 + $I_L1003_89, 3) = iloc(1 + $I_L1003_89, 1)
 1003.                      $I_L1003_89 = 1 + $I_L1003_89
 1003.                      if ( $I_L1003_89 >= $F_A34 ) exit
 1003.                   enddo
 1003.                endif
 1003.                $F_A35 = ibdim
 1003.                if ( ibdim > 0 ) then
 1003.                   $I_L1003_91 = 0
 1003. !dir$ ivdep
 1003.                   do
 1003.                      iloc(1 + $I_L1003_91, 4) = iloc(1 + $I_L1003_91, 1)
 1003.                      $I_L1003_91 = 1 + $I_L1003_91
 1003.                      if ( $I_L1003_91 >= $F_A35 ) exit
 1003.                   enddo
 1003.                endif
 1003.                $F_A36 = ibdim
 1003.                if ( ibdim > 0 ) then
 1003.                   $I_L1003_93 = 0
 1003. !dir$ ivdep
 1003.                   do
 1003.                      ulondp(1 + $I_L1003_93, 2) = ulondp(1 + $I_L1003_93, 1)
 1003.                      $I_L1003_93 = 1 + $I_L1003_93
 1003.                      if ( $I_L1003_93 >= $F_A36 ) exit
 1003.                   enddo
 1003.                endif
 1003.                $F_A37 = ibdim
 1003.                if ( ibdim > 0 ) then
 1003.                   $I_L1003_95 = 0
 1003. !dir$ ivdep
 1003.                   do
 1003.                      ulondp(1 + $I_L1003_95, 3) = ulondp(1 + $I_L1003_95, 1)
 1003.                      $I_L1003_95 = 1 + $I_L1003_95
 1003.                      if ( $I_L1003_95 >= $F_A37 ) exit
 1003.                   enddo
 1003.                endif
 1003.                $F_A38 = ibdim
 1003.                if ( ibdim > 0 ) then
 1003.                   $I_L1003_97 = 0
 1003. !dir$ ivdep
 1003.                   do
 1003.                      ulondp(1 + $I_L1003_97, 4) = ulondp(1 + $I_L1003_97, 1)
 1003.                      $I_L1003_97 = 1 + $I_L1003_97
 1003.                      if ( $I_L1003_97 >= $F_A38 ) exit
 1003.                   enddo
 1003.                endif
 1003.             endif
 1012.             tm$942 = loc( (fgumean%base_addr)($SC_fgumean_I21, $SC_fgumean_I24, 0) )
 1012.             u = _copyin( (fgumean%base_addr)($SC_fgumean_I21, $SC_fgumean_I24, 0) )
 1012.             tm$944 = loc( (fgvmean%base_addr)($SC_fgvmean_I26, $SC_fgvmean_I29, 0) )
 1012.             v = _copyin( (fgvmean%base_addr)($SC_fgvmean_I26, $SC_fgvmean_I29, 0) )
 1012.             t$39 = ibmax
 1012.             t$40 = jbmax_ext
 1012.             t$269 = max( 0, ibmax )
 1012.             t$270 = max( 0, ibmax )
 1012.             t$271 = max( 0, jbmax_ext )
 1012.             t$272 = max( 0, ibmax ) * max( 0, jbmax_ext )
 1012.             t$38 = ibdim
 1012.             t$273 = max( 0, ibdim )
 1012.             t$274 = max( 0, ibdim )
 1012.             t$275 = 2 * max( 0, ibdim )
 1012.             t$278 = 8 * max( 0, ibmax )
 1012.             t$279 = 8 * ( 7 + 8 * max( 0, ibmax ) ) / 8
 1012.             t$281 = t$279 + 8 * max( 0, ibmax )
 1012.             t$276 = int( _alloc( t$279 + 8 * max( 0, ibmax ) ), 8 )
 1012.             t$277 = t$276
 1012.             t$280 = t$279 + t$276
 1012.             if ( ibdim > 0 ) then
 1012.                $I_L1012_79 = 0
 1012. !dir$ ivdep
 1012.                do
 1012.                   $jp_S8 = 1 + jmax + -jloc(1 + $I_L1012_79)
 1012.                   s1(1 + $I_L1012_79) = 1.0
 1012.                   s2(1 + $I_L1012_79) = 1.0
 1012.                   if ( jmax + -$jp_S8 == -1 ) then
 1012.                      s1(1 + $I_L1012_79) = -1.0
 1012.                   endif
 1012.                   if ( $jp_S8 == 1 ) then
 1012.                      s2(1 + $I_L1012_79) = -1.0
 1012.                   endif
 1012.                   $I_L1012_79 = 1 + $I_L1012_79
 1012.                   if ( $I_L1012_79 >= ibdim ) exit
 1012.                enddo
 1012.                $I_L1012_81 = 0
 1012. !dir$ ivdep
 1012.                do
 1012.                   $jp_S10 = 1 + jmax + -jloc(1 + $I_L1012_81)
 1012.                   $i1_S11 = (ibperij%base_addr)(iloc(1 + $I_L1012_81, 1), $jp_S10, 0)
 1012.                   $i2_S14 = (ibperij%base_addr)(iloc(1 + $I_L1012_81, 2), -1 + $jp_S10, 0)
 1012.                   $i3_S13 = (ibperij%base_addr)(1 + iloc(1 + $I_L1012_81, 1), $jp_S10, 0)
 1012.                   $i4_S16 = (ibperij%base_addr)(1 + iloc(1 + $I_L1012_81, 2), -1 + $jp_S10, 0)
 1012.                   $j1_S12 = (jbperij%base_addr)(iloc(1 + $I_L1012_81, 1), $jp_S10, 0)
 1012.                   $j2_S15 = (jbperij%base_addr)(iloc(1 + $I_L1012_81, 2), -1 + $jp_S10, 0)
 1012.                   j3 = (jbperij%base_addr)(1 + iloc(1 + $I_L1012_81, 1), $jp_S10, 0)
 1012.                   j4 = (jbperij%base_addr)(1 + iloc(1 + $I_L1012_81, 2), -1 + $jp_S10, 0)
 1012.                   $f1_S17 = s1(1 + $I_L1012_81) * ( u($i1_S11, $j1_S12) + ulondp(1 + $I_L1012_81, 1) * ( u($i3_S13, j3) + -u($i1_S11, $j1_S12) ) )
 1012.                   $g1_S19 = s1(1 + $I_L1012_81) * ( v($i1_S11, $j1_S12) + ulondp(1 + $I_L1012_81, 1) * ( v($i3_S13, j3) + -v($i1_S11, $j1_S12) ) )
 1012.                   $f2_S18 = s2(1 + $I_L1012_81) * ( u($i2_S14, $j2_S15) + ulondp(1 + $I_L1012_81, 2) * ( u($i4_S16, j4) + -u($i2_S14, $j2_S15) ) )
 1012.                   $g2_S20 = s2(1 + $I_L1012_81) * ( v($i2_S14, $j2_S15) + ulondp(1 + $I_L1012_81, 2) * ( v($i4_S16, j4) + -v($i2_S14, $j2_S15) ) )
 1012.                   uint(1 + $I_L1012_81) = $f1_S17 + ulatdp(1 + $I_L1012_81) * ( $f2_S18 + -$f1_S17 )
 1012.                   vint(1 + $I_L1012_81) = $g1_S19 + ulatdp(1 + $I_L1012_81) * ( $g2_S20 + -$g1_S19 )
 1012.                   $I_L1012_81 = 1 + $I_L1012_81
 1012.                   if ( $I_L1012_81 >= ibdim ) exit
 1012.                enddo
 1012.             endif
 1012.             _free( t$276 )
 1012.             (fgvmean%base_addr)($SC_fgvmean_I26, $SC_fgvmean_I29, 0) = _copyout( v )
 1012.             (fgumean%base_addr)($SC_fgumean_I21, $SC_fgumean_I24, 0) = _copyout( u )
 1022.             tm$960 = loc( (coslon%base_addr)(1, jb, 0) )
 1022.             coslon = _copyin( (coslon%base_addr)(1, jb, 0) )
 1022.             tm$962 = loc( (sinlon%base_addr)(1, jb, 0) )
 1022.             sinlon = _copyin( (sinlon%base_addr)(1, jb, 0) )
 1022.             tm$964 = loc( (coslat%base_addr)(1, jb, 0) )
 1022.             coslat = _copyin( (coslat%base_addr)(1, jb, 0) )
 1022.             tm$966 = loc( (sinlat%base_addr)(1, jb, 0) )
 1022.             sinlat = _copyin( (sinlat%base_addr)(1, jb, 0) )
 1022.             t$30 = ibdim
 1022.             t$247 = max( 0, ibdim )
 1022.             $dt2_S29 = delt * delt
 1022.             $twodt_S33 = 2.0 * delt
 1022.             if ( ibdim > 0 ) then
 1022.                if ( $I_L997_106 + -nit == -1 ) then
 1022.                   $I_L1022_83 = 0
 1022. !dir$ ivdep
 1022.                   do
 1022.                      $Coss_P8 = coss( ulonm(1 + $I_L1022_83) )
 1022.                      $Coss_P9 = coss( ulatm(1 + $I_L1022_83) )
 1022.                      $x_S32 = coslon(1 + $I_L1022_83) * coslat(1 + $I_L1022_83)
 1022.                      $y_S31 = coslat(1 + $I_L1022_83) * sinlon(1 + $I_L1022_83)
 1022.                      $z_S30 = sinlat(1 + $I_L1022_83)
 1022.                      $xdot_S28 = -( uint(1 + $I_L1022_83) * cimag( $Coss_P8 ) + cimag( $Coss_P9 ) * vint(1 + $I_L1022_83) * real( $Coss_P8, 8 ) )
 1022.                      $ydot_S27 = -( cimag( $Coss_P8 ) * vint(1 + $I_L1022_83) * cimag( $Coss_P9 ) ) + uint(1 + $I_L1022_83) * real( $Coss_P8, 8 )
 1022.                      $zdot_S26 = vint(1 + $I_L1022_83) * real( $Coss_P9, 8 )
 1022.                      $xb_S39 = ( $x_S32 + -( delt * $xdot_S28 ) ) * _recip_sqrt( ( 1.0 + -( $twodt_S33 * ( $zdot_S26 * $z_S30 + $ydot_S27 * $y_S31 + $xdot_S28 * $x_S32 ) ) + $dt2_S29 * ( $zdot_S26 * $zdot_S26 + $ydot_S27 * $ydot_S27 + $xdot_S28 * $xdot_S28 ) ) )
 1022.                      $yb_S38 = ( $y_S31 + -( delt * $ydot_S27 ) ) * _recip_sqrt( ( 1.0 + -( $twodt_S33 * ( $zdot_S26 * $z_S30 + $ydot_S27 * $y_S31 + $xdot_S28 * $x_S32 ) ) + $dt2_S29 * ( $zdot_S26 * $zdot_S26 + $ydot_S27 * $ydot_S27 + $xdot_S28 * $xdot_S28 ) ) )
 1022.                      $zb_S35 = ( $z_S30 + -( delt * $zdot_S26 ) ) * _recip_sqrt( ( 1.0 + -( $twodt_S33 * ( $zdot_S26 * $z_S30 + $ydot_S27 * $y_S31 + $xdot_S28 * $x_S32 ) ) + $dt2_S29 * ( $zdot_S26 * $zdot_S26 + $ydot_S27 * $ydot_S27 + $xdot_S28 * $xdot_S28 ) ) )
 1022.                      $Flat_S34 = atan2( ( ( $y_S31 + -( delt * $ydot_S27 ) ) * _recip_sqrt( ( 1.0 + -( $twodt_S33 * ( $zdot_S26 * $z_S30 + $ydot_S27 * $y_S31 + $xdot_S28 * $x_S32 ) ) + $dt2_S29 * ( $zdot_S26 * $zdot_S26 + $ydot_S27 * $ydot_S27 + $xdot_S28 * $xdot_S28 ) ) ) ), ( ( $x_S32 + -( delt * $xdot_S28 ) ) * _recip_sqrt( ( 1.0 + -( $twodt_S33 * ( $zdot_S26 * $z_S30 + $ydot_S27 * $y_S31 + $xdot_S28 * $x_S32 ) ) + $dt2_S29 * ( $zdot_S26 * $zdot_S26 + $ydot_S27 * $ydot_S27 + $xdot_S28 * $xdot_S28 ) ) ) ) )
 1022.                      ulonm(1 + $I_L1022_83) = $Flat_S34
 1022.                      if ( $Flat_S34 < 0.0 ) then
 1022.                         ulonm(1 + $I_L1022_83) = 6.28318530717958 + $Flat_S34
 1022.                      endif
 1022.                      $Flat_S36 = asin( $zb_S35 )
 1022.                      ulatm(1 + $I_L1022_83) = $Flat_S36
 1022.                      $zm_S41 = -$z_S30 + $zb_S35 * ( 2.0 * ( $z_S30 * $zb_S35 + $y_S31 * $yb_S38 + $x_S32 * $xb_S39 ) )
 1022.                      $Flat_S40 = atan2( ( -$y_S31 + $yb_S38 * ( 2.0 * ( $z_S30 * $zb_S35 + $y_S31 * $yb_S38 + $x_S32 * $xb_S39 ) ) ), ( -$x_S32 + $xb_S39 * ( 2.0 * ( $z_S30 * $zb_S35 + $y_S31 * $yb_S38 + $x_S32 * $xb_S39 ) ) ) )
 1022.                      ulon(1 + $I_L1022_83) = $Flat_S40
 1022.                      if ( $Flat_S40 < 0.0 ) then
 1022.                         ulon(1 + $I_L1022_83) = 6.28318530717958 + $Flat_S40
 1022.                      endif
 1022.                      $Flat_S42 = asin( $zm_S41 )
 1022.                      ulat(1 + $I_L1022_83) = $Flat_S42
 1022.                      $I_L1022_83 = 1 + $I_L1022_83
 1022.                      if ( $I_L1022_83 >= ibdim ) exit
 1022.                   enddo
 1022.                else
 1022.                   $I_L1022_85 = 0
 1022. !dir$ ivdep
 1022.                   do
 1022.                      $Coss_P10 = coss( ulonm(1 + $I_L1022_85) )
 1022.                      $Coss_P11 = coss( ulatm(1 + $I_L1022_85) )
 1022.                      $x_S32 = coslon(1 + $I_L1022_85) * coslat(1 + $I_L1022_85)
 1022.                      $y_S31 = coslat(1 + $I_L1022_85) * sinlon(1 + $I_L1022_85)
 1022.                      $z_S30 = sinlat(1 + $I_L1022_85)
 1022.                      $xdot_S28 = -( uint(1 + $I_L1022_85) * cimag( $Coss_P10 ) + cimag( $Coss_P11 ) * vint(1 + $I_L1022_85) * real( $Coss_P10, 8 ) )
 1022.                      $ydot_S27 = -( cimag( $Coss_P10 ) * vint(1 + $I_L1022_85) * cimag( $Coss_P11 ) ) + uint(1 + $I_L1022_85) * real( $Coss_P10, 8 )
 1022.                      $zdot_S26 = vint(1 + $I_L1022_85) * real( $Coss_P11, 8 )
 1022.                      $zb_S35 = ( $z_S30 + -( delt * $zdot_S26 ) ) * _recip_sqrt( ( 1.0 + -( $twodt_S33 * ( $zdot_S26 * $z_S30 + $ydot_S27 * $y_S31 + $xdot_S28 * $x_S32 ) ) + $dt2_S29 * ( $zdot_S26 * $zdot_S26 + $ydot_S27 * $ydot_S27 + $xdot_S28 * $xdot_S28 ) ) )
 1022.                      $Flat_S34 = atan2( ( ( $y_S31 + -( delt * $ydot_S27 ) ) * _recip_sqrt( ( 1.0 + -( $twodt_S33 * ( $zdot_S26 * $z_S30 + $ydot_S27 * $y_S31 + $xdot_S28 * $x_S32 ) ) + $dt2_S29 * ( $zdot_S26 * $zdot_S26 + $ydot_S27 * $ydot_S27 + $xdot_S28 * $xdot_S28 ) ) ) ), ( ( $x_S32 + -( delt * $xdot_S28 ) ) * _recip_sqrt( ( 1.0 + -( $twodt_S33 * ( $zdot_S26 * $z_S30 + $ydot_S27 * $y_S31 + $xdot_S28 * $x_S32 ) ) + $dt2_S29 * ( $zdot_S26 * $zdot_S26 + $ydot_S27 * $ydot_S27 + $xdot_S28 * $xdot_S28 ) ) ) ) )
 1022.                      ulonm(1 + $I_L1022_85) = $Flat_S34
 1022.                      if ( $Flat_S34 < 0.0 ) then
 1022.                         ulonm(1 + $I_L1022_85) = 6.28318530717958 + $Flat_S34
 1022.                      endif
 1022.                      $Flat_S36 = asin( $zb_S35 )
 1022.                      ulatm(1 + $I_L1022_85) = $Flat_S36
 1022.                      $I_L1022_85 = 1 + $I_L1022_85
 1022.                      if ( $I_L1022_85 >= ibdim ) exit
 1022.                   enddo
 1022.                endif
 1022.             endif
 1022.             (sinlat%base_addr)(1, jb, 0) = _copyout( sinlat )
 1022.             (coslat%base_addr)(1, jb, 0) = _copyout( coslat )
 1022.             (sinlon%base_addr)(1, jb, 0) = _copyout( sinlon )
 1022.             (coslon%base_addr)(1, jb, 0) = _copyout( coslon )
 1026.             $I_L997_106 = 1 + $I_L997_106
 1022.             if ( $I_L997_106 >= nit ) exit
 1022.          enddo
 1022.       endif
  960.       _free( t$199 )
 1028.       return
 1028.       end
 1028.       
 1029.       
 1029.       subroutine upsig_2l( usig, w, wm, delt, ibdim )
 1029.       t$20 = ibdim
 1029.       t$19 = kmax
 1037.       t$205 = _zla( 0, ibdim )
 1029.       t$206 = _zla( 0, ibdim )
 1037.       t$207 = _zla( 0, kmax )
 1029.       t$208 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1029.       t$18 = ibmax
 1035.       t$209 = _zla( 0, ibmax )
 1029.       t$210 = _zla( 0, ibmax )
 1029.       t$211 = _zla( 0, kmax ) * _zla( 0, ibmax )
 1046.       $dth_S2 = 5.0e-1 * delt
 1047.       if ( kmax > 0 ) then
 1049.          $SC_cl_I0 = cl%dim_1%EX
 1049.          $SC_cl_I1 = cl%dim_1%LB
 1048.          if ( ibdim > 0 ) then
 1049.             $SC_cl_I3 = (cl%base_addr)(kmax, 0)
 1049.             $SC_cl_I2 = (cl%base_addr)(1, 0)
 1047.             $I_L1047_14 = 0
 1047.             do
 1048.                $SCA_cl_I4 = (cl%base_addr)(1 + $I_L1047_14, 0)
 1048.                $I_L1048_12 = 0
 1048. !dir$ ivdep
 1048.                do
 1049.                   usig(1 + $I_L1048_12, 1 + $I_L1047_14) = min( $SC_cl_I3, max( $SC_cl_I2, $SCA_cl_I4 + -( $dth_S2 * ( wm(1 + $I_L1048_12, 1 + $I_L1047_14) + w(1 + $I_L1048_12, 1 + $I_L1047_14) ) ) ) )
 1050.                   $I_L1048_12 = 1 + $I_L1048_12
 1048.                   if ( $I_L1048_12 >= ibdim ) exit
 1048.                enddo
 1051.                $I_L1047_14 = 1 + $I_L1047_14
 1050.                if ( $I_L1047_14 >= kmax ) exit
 1050.             enddo
 1050.          endif
 1050.       endif
 1053.       return
 1053.       end
 1053.       
 1054.       
 1054.       subroutine uplatlon_2l( ulon, ulat, ulonm, ulatm, coslon, sinlon, coslat, sinlat, u, v, um, vm, delt, ibdim )
 1054.       t$21 = ibdim
 1054.       t$22 = kmax
 1066.       t$212 = _zla( 0, ibdim )
 1054.       t$213 = _zla( 0, ibdim )
 1066.       t$214 = _zla( 0, kmax )
 1054.       t$215 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1054.       t$23 = ibmax
 1069.       t$216 = _zla( 0, ibmax )
 1054.       t$217 = _zla( 0, ibmax )
 1054.       t$218 = _zla( 0, kmax ) * _zla( 0, ibmax )
 1090.       t$221 = 8 * _zla( 0, ibmax )
 1091.       t$222 = 8 * ( 7 + 8 * _zla( 0, ibmax ) ) / 8
 1091.       t$224 = t$222 + 8 * _zla( 0, ibmax )
 1092.       t$225 = 8 * ( 7 + t$222 + 8 * _zla( 0, ibmax ) ) / 8
 1092.       t$227 = t$225 + 8 * _zla( 0, ibmax )
 1054.       t$219 = int( _alloc( t$225 + 8 * _zla( 0, ibmax ) ), 8 )
 1090.       t$220 = t$219
 1091.       t$223 = t$222 + t$219
 1092.       t$226 = t$225 + t$219
 1104.       $dt2_S8 = 5.0e-1 * delt
 1107.       if ( ibdim > 0 ) then
 1107.          $I_L1107_12 = 0
 1107. !dir$ ivdep
 1107.          do
 1108.             x(1 + $I_L1107_12) = coslon(1 + $I_L1107_12) * coslat(1 + $I_L1107_12)
 1109.             y(1 + $I_L1107_12) = coslat(1 + $I_L1107_12) * sinlon(1 + $I_L1107_12)
 1110.             z(1 + $I_L1107_12) = sinlat(1 + $I_L1107_12)
 1111.             $I_L1107_12 = 1 + $I_L1107_12
 1107.             if ( $I_L1107_12 >= ibdim ) exit
 1107.          enddo
 1107.       endif
 1112.       if ( kmax > 0 ) then
 1113.          if ( ibdim > 0 ) then
 1112.             $I_L1112_16 = 0
 1112. !dir$ blocking_size( 1, 1 )
 1112.             do
 1113.                $I_L1113_14 = 0
 1113. !dir$ ivdep
 1113. !dir$ blocking_size( 256, 256 )
 1113.                do
 1114.                   $Coss_P8 = coss( ulonm(1 + $I_L1113_14, 1 + $I_L1112_16) )
 1114.                   $Flat_S7 = real( $Coss_P8, 8 )
 1115.                   $Flat_S4 = cimag( $Coss_P8 )
 1116.                   $Coss_P9 = coss( ulatm(1 + $I_L1113_14, 1 + $I_L1112_16) )
 1116.                   $Flat_S9 = real( $Coss_P9, 8 )
 1117.                   $Flat_S6 = cimag( $Coss_P9 )
 1118.                   $uh_S3 = 5.0e-1 * ( um(1 + $I_L1113_14, 1 + $I_L1112_16) + u(1 + $I_L1113_14, 1 + $I_L1112_16) )
 1119.                   $vh_S5 = 5.0e-1 * ( vm(1 + $I_L1113_14, 1 + $I_L1112_16) + v(1 + $I_L1113_14, 1 + $I_L1112_16) )
 1123.                   $xb_S12 = x(1 + $I_L1113_14) + -( $dt2_S8 * ( -( $uh_S3 * $Flat_S4 + $vh_S5 * $Flat_S6 * $Flat_S7 ) ) )
 1124.                   $yb_S11 = y(1 + $I_L1113_14) + -( $dt2_S8 * ( -( $Flat_S4 * $vh_S5 * $Flat_S6 ) + $uh_S3 * $Flat_S7 ) )
 1125.                   $zb_S10 = z(1 + $I_L1113_14) + -( $dt2_S8 * ( $vh_S5 * $Flat_S9 ) )
 1127.                   $xb_S14 = $xb_S12 * _recip_sqrt( $zb_S10 * $zb_S10 + $yb_S11 * $yb_S11 + $xb_S12 * $xb_S12 )
 1128.                   $yb_S15 = $yb_S11 * _recip_sqrt( $zb_S10 * $zb_S10 + $yb_S11 * $yb_S11 + $xb_S12 * $xb_S12 )
 1130.                   $Flat_S16 = atan2( ( $yb_S11 * _recip_sqrt( $zb_S10 * $zb_S10 + $yb_S11 * $yb_S11 + $xb_S12 * $xb_S12 ) ), ( $xb_S12 * _recip_sqrt( $zb_S10 * $zb_S10 + $yb_S11 * $yb_S11 + $xb_S12 * $xb_S12 ) ) )
 1130.                   ulonm(1 + $I_L1113_14, 1 + $I_L1112_16) = $Flat_S16
 1129.                   $zb_S17 = $zb_S10 * _recip_sqrt( $zb_S10 * $zb_S10 + $yb_S11 * $yb_S11 + $xb_S12 * $xb_S12 )
 1131.                   if ( $Flat_S16 < 0.0 ) then
 1131.                      ulonm(1 + $I_L1113_14, 1 + $I_L1112_16) = 6.28318530717958 + $Flat_S16
 1131.                   endif
 1132.                   $Flat_S18 = asin( $zb_S17 )
 1132.                   ulatm(1 + $I_L1113_14, 1 + $I_L1112_16) = $Flat_S18
 1133.                   $dot2_S19 = 2.0 * ( $xb_S14 * x(1 + $I_L1113_14) + $zb_S17 * z(1 + $I_L1113_14) + $yb_S15 * y(1 + $I_L1113_14) )
 1134.                   $xm_S20 = -x(1 + $I_L1113_14) + $xb_S14 * $dot2_S19
 1135.                   $ym_S21 = -y(1 + $I_L1113_14) + $yb_S15 * $dot2_S19
 1136.                   $zm_S23 = -z(1 + $I_L1113_14) + $zb_S17 * $dot2_S19
 1137.                   $Flat_S22 = atan2( $ym_S21, $xm_S20 )
 1137.                   ulon(1 + $I_L1113_14, 1 + $I_L1112_16) = $Flat_S22
 1138.                   if ( $Flat_S22 < 0.0 ) then
 1138.                      ulon(1 + $I_L1113_14, 1 + $I_L1112_16) = 6.28318530717958 + $Flat_S22
 1138.                   endif
 1139.                   $Flat_S24 = asin( $zm_S23 )
 1139.                   ulat(1 + $I_L1113_14, 1 + $I_L1112_16) = $Flat_S24
 1140.                   $I_L1113_14 = 1 + $I_L1113_14
 1138.                   if ( $I_L1113_14 >= ibdim ) exit
 1138.                enddo
 1141.                $I_L1112_16 = 1 + $I_L1112_16
 1140.                if ( $I_L1112_16 >= kmax ) exit
 1140.             enddo
 1140.          endif
 1140.       endif
 1054.       _free( t$219 )
 1143.       return
 1143.       end
 1143.       
 1144.       
 1144.       subroutine uplatlon2d_2l( ulon, ulat, ulonm, ulatm, coslon, sinlon, coslat, sinlat, u, v, um, vm, delt, ibdim )
 1144.       t$24 = ibdim
 1156.       t$228 = _zla( 0, ibdim )
 1193.       $dt2_S6 = 5.0e-1 * delt
 1196.       if ( ibdim > 0 ) then
 1196.          $I_L1196_4 = 0
 1196. !dir$ ivdep
 1196.          do
 1197.             $Coss_P8 = coss( ulonm(1 + $I_L1196_4) )
 1197.             $Flat_S5 = real( $Coss_P8, 8 )
 1198.             $Flat_S2 = cimag( $Coss_P8 )
 1199.             $Coss_P9 = coss( ulatm(1 + $I_L1196_4) )
 1199.             $Flat_S9 = real( $Coss_P9, 8 )
 1200.             $Flat_S4 = cimag( $Coss_P9 )
 1201.             $uh_S1 = 5.0e-1 * ( u(1 + $I_L1196_4) + um(1 + $I_L1196_4) )
 1202.             $vh_S3 = 5.0e-1 * ( v(1 + $I_L1196_4) + vm(1 + $I_L1196_4) )
 1203.             $x_S7 = coslon(1 + $I_L1196_4) * coslat(1 + $I_L1196_4)
 1204.             $y_S8 = coslat(1 + $I_L1196_4) * sinlon(1 + $I_L1196_4)
 1205.             $z_S10 = sinlat(1 + $I_L1196_4)
 1212.             $b_S12 = _recip_sqrt( ( $x_S7 + -( $dt2_S6 * ( -( $uh_S1 * $Flat_S2 + $vh_S3 * $Flat_S4 * $Flat_S5 ) ) ) ) * ( $x_S7 + -( $dt2_S6 * ( -( $uh_S1 * $Flat_S2 + $vh_S3 * $Flat_S4 * $Flat_S5 ) ) ) ) + ( $y_S8 + -( $dt2_S6 * ( -( $Flat_S2 * $vh_S3 * $Flat_S4 ) + $uh_S1 * $Flat_S5 ) ) ) * ( $y_S8 + -( $dt2_S6 * ( -( $Flat_S2 * $vh_S3 * $Flat_S4 ) + $uh_S1 * $Flat_S5 ) ) ) + ( $z_S10 + -( $dt2_S6 * ( $vh_S3 * $Flat_S9 ) ) ) * ( $z_S10 + -( $dt2_S6 * ( $vh_S3 * $Flat_S9 ) ) ) )
 1213.             $xb_S11 = ( $x_S7 + -( $dt2_S6 * ( -( $uh_S1 * $Flat_S2 + $vh_S3 * $Flat_S4 * $Flat_S5 ) ) ) ) * _recip_sqrt( ( $x_S7 + -( $dt2_S6 * ( -( $uh_S1 * $Flat_S2 + $vh_S3 * $Flat_S4 * $Flat_S5 ) ) ) ) * ( $x_S7 + -( $dt2_S6 * ( -( $uh_S1 * $Flat_S2 + $vh_S3 * $Flat_S4 * $Flat_S5 ) ) ) ) + ( $y_S8 + -( $dt2_S6 * ( -( $Flat_S2 * $vh_S3 * $Flat_S4 ) + $uh_S1 * $Flat_S5 ) ) ) * ( $y_S8 + -( $dt2_S6 * ( -( $Flat_S2 * $vh_S3 * $Flat_S4 ) + $uh_S1 * $Flat_S5 ) ) ) + ( $z_S10 + -( $dt2_S6 * ( $vh_S3 * $Flat_S9 ) ) ) * ( $z_S10 + -( $dt2_S6 * ( $vh_S3 * $Flat_S9 ) ) ) )
 1214.             $yb_S16 = ( $y_S8 + -( $dt2_S6 * ( -( $Flat_S2 * $vh_S3 * $Flat_S4 ) + $uh_S1 * $Flat_S5 ) ) ) * _recip_sqrt( ( $x_S7 + -( $dt2_S6 * ( -( $uh_S1 * $Flat_S2 + $vh_S3 * $Flat_S4 * $Flat_S5 ) ) ) ) * ( $x_S7 + -( $dt2_S6 * ( -( $uh_S1 * $Flat_S2 + $vh_S3 * $Flat_S4 * $Flat_S5 ) ) ) ) + ( $y_S8 + -( $dt2_S6 * ( -( $Flat_S2 * $vh_S3 * $Flat_S4 ) + $uh_S1 * $Flat_S5 ) ) ) * ( $y_S8 + -( $dt2_S6 * ( -( $Flat_S2 * $vh_S3 * $Flat_S4 ) + $uh_S1 * $Flat_S5 ) ) ) + ( $z_S10 + -( $dt2_S6 * ( $vh_S3 * $Flat_S9 ) ) ) * ( $z_S10 + -( $dt2_S6 * ( $vh_S3 * $Flat_S9 ) ) ) )
 1215.             $zb_S14 = ( $z_S10 + -( $dt2_S6 * ( $vh_S3 * $Flat_S9 ) ) ) * _recip_sqrt( ( $x_S7 + -( $dt2_S6 * ( -( $uh_S1 * $Flat_S2 + $vh_S3 * $Flat_S4 * $Flat_S5 ) ) ) ) * ( $x_S7 + -( $dt2_S6 * ( -( $uh_S1 * $Flat_S2 + $vh_S3 * $Flat_S4 * $Flat_S5 ) ) ) ) + ( $y_S8 + -( $dt2_S6 * ( -( $Flat_S2 * $vh_S3 * $Flat_S4 ) + $uh_S1 * $Flat_S5 ) ) ) * ( $y_S8 + -( $dt2_S6 * ( -( $Flat_S2 * $vh_S3 * $Flat_S4 ) + $uh_S1 * $Flat_S5 ) ) ) + ( $z_S10 + -( $dt2_S6 * ( $vh_S3 * $Flat_S9 ) ) ) * ( $z_S10 + -( $dt2_S6 * ( $vh_S3 * $Flat_S9 ) ) ) )
 1216.             $Flat_S13 = atan2( ( $b_S12 * ( $y_S8 + -( $dt2_S6 * ( -( $Flat_S2 * $vh_S3 * $Flat_S4 ) + $uh_S1 * $Flat_S5 ) ) ) ), $xb_S11 )
 1216.             ulonm(1 + $I_L1196_4) = $Flat_S13
 1217.             if ( $Flat_S13 < 0.0 ) then
 1217.                ulonm(1 + $I_L1196_4) = 6.28318530717958 + $Flat_S13
 1217.             endif
 1218.             $Flat_S15 = asin( $zb_S14 )
 1218.             ulatm(1 + $I_L1196_4) = $Flat_S15
 1222.             $zm_S18 = -$z_S10 + $zb_S14 * ( 2.0 * ( $x_S7 * $xb_S11 + $z_S10 * $zb_S14 + $y_S8 * $yb_S16 ) )
 1223.             $Flat_S17 = atan2( ( -$y_S8 + $yb_S16 * ( 2.0 * ( $x_S7 * $xb_S11 + $z_S10 * $zb_S14 + $y_S8 * $yb_S16 ) ) ), ( -$x_S7 + $xb_S11 * ( 2.0 * ( $x_S7 * $xb_S11 + $z_S10 * $zb_S14 + $y_S8 * $yb_S16 ) ) ) )
 1223.             ulon(1 + $I_L1196_4) = $Flat_S17
 1224.             if ( $Flat_S17 < 0.0 ) then
 1224.                ulon(1 + $I_L1196_4) = 6.28318530717958 + $Flat_S17
 1224.             endif
 1225.             $Flat_S19 = asin( $zm_S18 )
 1225.             ulat(1 + $I_L1196_4) = $Flat_S19
 1226.             $I_L1196_4 = 1 + $I_L1196_4
 1224.             if ( $I_L1196_4 >= ibdim ) exit
 1224.          enddo
 1224.       endif
 1228.       return
 1228.       end
 1228.       
 1229.       
 1229.       subroutine upsig( usig, usigm, w, delt, ibdim, final )
 1229.       t$25 = ibdim
 1229.       t$26 = kmax
 1237.       t$229 = _zla( 0, ibdim )
 1229.       t$230 = _zla( 0, ibdim )
 1237.       t$231 = _zla( 0, kmax )
 1229.       t$232 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1246.       if ( kmax > 0 ) then
 1248.          $SC_cl_I0 = cl%dim_1%EX
 1248.          $SC_cl_I1 = cl%dim_1%LB
 1247.          if ( ibdim > 0 ) then
 1248.             $SC_cl_I3 = (cl%base_addr)(kmax, 0)
 1248.             $SC_cl_I2 = (cl%base_addr)(1, 0)
 1246.             $I_L1246_28 = 0
 1246.             do
 1247.                $SCA_cl_I5 = (cl%base_addr)(1 + $I_L1246_28, 0)
 1247.                $I_L1247_24 = 0
 1247. !dir$ ivdep
 1247.                do
 1248.                   usigm(1 + $I_L1247_24, 1 + $I_L1246_28) = min( $SC_cl_I3, max( $SC_cl_I2, $SCA_cl_I5 + -( delt * w(1 + $I_L1247_24, 1 + $I_L1246_28) ) ) )
 1249.                   $I_L1247_24 = 1 + $I_L1247_24
 1247.                   if ( $I_L1247_24 >= ibdim ) exit
 1247.                enddo
 1250.                $I_L1246_28 = 1 + $I_L1246_28
 1249.                if ( $I_L1246_28 >= kmax ) exit
 1249.             enddo
 1249.          endif
 1249.       endif
 1251.       if ( final /= .false. ) then
 1252.          if ( kmax > 0 ) then
 1254.             $SC_cl_I0 = cl%dim_1%EX
 1254.             $SC_cl_I1 = cl%dim_1%LB
 1253.             if ( ibdim > 0 ) then
 1254.                $SC_cl_I3 = (cl%base_addr)(kmax, 0)
 1254.                $SC_cl_I2 = (cl%base_addr)(1, 0)
 1252.                $I_L1252_30 = 0
 1252.                do
 1253.                   $SCA_cl_I4 = (cl%base_addr)(1 + $I_L1252_30, 0)
 1253.                   $I_L1253_26 = 0
 1253. !dir$ ivdep
 1253.                   do
 1254.                      usig(1 + $I_L1253_26, 1 + $I_L1252_30) = min( $SC_cl_I3, max( $SC_cl_I2, -$SCA_cl_I4 + 2.0 * usigm(1 + $I_L1253_26, 1 + $I_L1252_30) ) )
 1255.                      $I_L1253_26 = 1 + $I_L1253_26
 1253.                      if ( $I_L1253_26 >= ibdim ) exit
 1253.                   enddo
 1256.                   $I_L1252_30 = 1 + $I_L1252_30
 1255.                   if ( $I_L1252_30 >= kmax ) exit
 1255.                enddo
 1255.             endif
 1255.          endif
 1255.       endif
 1259.       return
 1259.       end
 1259.       
 1260.       
 1260.       subroutine uplatlon( ulon, ulat, ulonm, ulatm, coslon, sinlon, coslat, sinlat, u, v, delt, ibdim, final )
 1260.       t$27 = ibdim
 1260.       t$28 = kmax
 1273.       t$233 = _zla( 0, ibdim )
 1260.       t$234 = _zla( 0, ibdim )
 1273.       t$235 = _zla( 0, kmax )
 1260.       t$236 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1260.       t$29 = ibmax
 1295.       t$237 = _zla( 0, ibmax )
 1295.       t$240 = 8 * _zla( 0, ibmax )
 1296.       t$241 = 8 * ( 7 + 8 * _zla( 0, ibmax ) ) / 8
 1296.       t$243 = t$241 + 8 * _zla( 0, ibmax )
 1297.       t$244 = 8 * ( 7 + t$241 + 8 * _zla( 0, ibmax ) ) / 8
 1297.       t$246 = t$244 + 8 * _zla( 0, ibmax )
 1260.       t$238 = int( _alloc( t$244 + 8 * _zla( 0, ibmax ) ), 8 )
 1295.       t$239 = t$238
 1296.       t$242 = t$241 + t$238
 1297.       t$245 = t$244 + t$238
 1308.       $dt2_S10 = delt * delt
 1309.       $twodt_S11 = 2.0 * delt
 1311.       if ( ibdim > 0 ) then
 1311.          $I_L1311_20 = 0
 1311. !dir$ ivdep
 1311.          do
 1312.             x(1 + $I_L1311_20) = coslon(1 + $I_L1311_20) * coslat(1 + $I_L1311_20)
 1313.             y(1 + $I_L1311_20) = coslat(1 + $I_L1311_20) * sinlon(1 + $I_L1311_20)
 1314.             z(1 + $I_L1311_20) = sinlat(1 + $I_L1311_20)
 1315.             $I_L1311_20 = 1 + $I_L1311_20
 1311.             if ( $I_L1311_20 >= ibdim ) exit
 1311.          enddo
 1311.       endif
 1316.       if ( final /= .false. ) then
 1317.          if ( kmax > 0 ) then
 1318.             if ( ibdim > 0 ) then
 1317.                $I_L1317_28 = 0
 1317. !dir$ blocking_size( 1, 1 )
 1317.                do
 1318.                   $I_L1318_24 = 0
 1318. !dir$ ivdep
 1318. !dir$ blocking_size( 256, 256 )
 1318.                   do
 1319.                      $Coss_P14 = coss( ulonm(1 + $I_L1318_24, 1 + $I_L1317_28) )
 1319.                      $Flat_S4 = real( $Coss_P14, 8 )
 1320.                      $Flat_S5 = cimag( $Coss_P14 )
 1321.                      $Coss_P15 = coss( ulatm(1 + $I_L1318_24, 1 + $I_L1317_28) )
 1321.                      $Flat_S6 = real( $Coss_P15, 8 )
 1322.                      $Flat_S3 = cimag( $Coss_P15 )
 1323.                      $xdot_S9 = -( $Flat_S3 * $Flat_S4 * v(1 + $I_L1318_24, 1 + $I_L1317_28) + $Flat_S5 * u(1 + $I_L1318_24, 1 + $I_L1317_28) )
 1324.                      $ydot_S8 = -( $Flat_S3 * $Flat_S5 * v(1 + $I_L1318_24, 1 + $I_L1317_28) ) + $Flat_S4 * u(1 + $I_L1318_24, 1 + $I_L1317_28)
 1325.                      $zdot_S7 = $Flat_S6 * v(1 + $I_L1318_24, 1 + $I_L1317_28)
 1326.                      $r_S12 = 1.0 + -( $twodt_S11 * ( $zdot_S7 * z(1 + $I_L1318_24) + $xdot_S9 * x(1 + $I_L1318_24) + $ydot_S8 * y(1 + $I_L1318_24) ) ) + $dt2_S10 * ( $zdot_S7 * $zdot_S7 + $ydot_S8 * $ydot_S8 + $xdot_S9 * $xdot_S9 )
 1329.                      $xb_S13 = _recip_sqrt( $r_S12 ) * ( x(1 + $I_L1318_24) + -( delt * $xdot_S9 ) )
 1330.                      $yb_S14 = _recip_sqrt( $r_S12 ) * ( y(1 + $I_L1318_24) + -( delt * $ydot_S8 ) )
 1331.                      $zb_S16 = _recip_sqrt( $r_S12 ) * ( z(1 + $I_L1318_24) + -( delt * $zdot_S7 ) )
 1332.                      $Flat_S15 = atan2( $yb_S14, $xb_S13 )
 1332.                      ulonm(1 + $I_L1318_24, 1 + $I_L1317_28) = $Flat_S15
 1333.                      if ( $Flat_S15 < 0.0 ) then
 1333.                         ulonm(1 + $I_L1318_24, 1 + $I_L1317_28) = 6.28318530717958 + $Flat_S15
 1333.                      endif
 1334.                      $Flat_S17 = asin( $zb_S16 )
 1334.                      ulatm(1 + $I_L1318_24, 1 + $I_L1317_28) = $Flat_S17
 1335.                      $dot2_S18 = 2.0 * ( $xb_S13 * x(1 + $I_L1318_24) + $zb_S16 * z(1 + $I_L1318_24) + $yb_S14 * y(1 + $I_L1318_24) )
 1336.                      $xm_S19 = -x(1 + $I_L1318_24) + $xb_S13 * $dot2_S18
 1337.                      $ym_S20 = -y(1 + $I_L1318_24) + $yb_S14 * $dot2_S18
 1338.                      $zm_S22 = -z(1 + $I_L1318_24) + $zb_S16 * $dot2_S18
 1339.                      $Flat_S21 = atan2( $ym_S20, $xm_S19 )
 1339.                      ulon(1 + $I_L1318_24, 1 + $I_L1317_28) = $Flat_S21
 1340.                      if ( $Flat_S21 < 0.0 ) then
 1340.                         ulon(1 + $I_L1318_24, 1 + $I_L1317_28) = 6.28318530717958 + $Flat_S21
 1340.                      endif
 1341.                      $Flat_S23 = asin( $zm_S22 )
 1341.                      ulat(1 + $I_L1318_24, 1 + $I_L1317_28) = $Flat_S23
 1342.                      $I_L1318_24 = 1 + $I_L1318_24
 1340.                      if ( $I_L1318_24 >= ibdim ) exit
 1340.                   enddo
 1343.                   $I_L1317_28 = 1 + $I_L1317_28
 1342.                   if ( $I_L1317_28 >= kmax ) exit
 1342.                enddo
 1342.             endif
 1342.          endif
 1344.       else if ( kmax > 0 ) then
 1346.          if ( ibdim > 0 ) then
 1345.             $I_L1345_26 = 0
 1345. !dir$ blocking_size( 1, 1 )
 1345.             do
 1346.                $I_L1346_22 = 0
 1346. !dir$ ivdep
 1346. !dir$ blocking_size( 256, 256 )
 1346.                do
 1347.                   $Coss_P16 = coss( ulonm(1 + $I_L1346_22, 1 + $I_L1345_26) )
 1347.                   $Flat_S27 = real( $Coss_P16, 8 )
 1348.                   $Flat_S28 = cimag( $Coss_P16 )
 1349.                   $Coss_P17 = coss( ulatm(1 + $I_L1346_22, 1 + $I_L1345_26) )
 1349.                   $Flat_S29 = real( $Coss_P17, 8 )
 1350.                   $Flat_S26 = cimag( $Coss_P17 )
 1351.                   $xdot_S32 = -( $Flat_S26 * $Flat_S27 * v(1 + $I_L1346_22, 1 + $I_L1345_26) + $Flat_S28 * u(1 + $I_L1346_22, 1 + $I_L1345_26) )
 1352.                   $ydot_S31 = -( $Flat_S26 * $Flat_S28 * v(1 + $I_L1346_22, 1 + $I_L1345_26) ) + $Flat_S27 * u(1 + $I_L1346_22, 1 + $I_L1345_26)
 1353.                   $zdot_S30 = $Flat_S29 * v(1 + $I_L1346_22, 1 + $I_L1345_26)
 1354.                   $r_S33 = 1.0 + -( $twodt_S11 * ( $zdot_S30 * z(1 + $I_L1346_22) + $xdot_S32 * x(1 + $I_L1346_22) + $ydot_S31 * y(1 + $I_L1346_22) ) ) + $dt2_S10 * ( $zdot_S30 * $zdot_S30 + $ydot_S31 * $ydot_S31 + $xdot_S32 * $xdot_S32 )
 1357.                   $xb_S34 = _recip_sqrt( $r_S33 ) * ( x(1 + $I_L1346_22) + -( delt * $xdot_S32 ) )
 1358.                   $yb_S35 = _recip_sqrt( $r_S33 ) * ( y(1 + $I_L1346_22) + -( delt * $ydot_S31 ) )
 1359.                   $zb_S37 = _recip_sqrt( $r_S33 ) * ( z(1 + $I_L1346_22) + -( delt * $zdot_S30 ) )
 1360.                   $Flat_S36 = atan2( $yb_S35, $xb_S34 )
 1360.                   ulonm(1 + $I_L1346_22, 1 + $I_L1345_26) = $Flat_S36
 1361.                   if ( $Flat_S36 < 0.0 ) then
 1361.                      ulonm(1 + $I_L1346_22, 1 + $I_L1345_26) = 6.28318530717958 + $Flat_S36
 1361.                   endif
 1362.                   $Flat_S38 = asin( $zb_S37 )
 1362.                   ulatm(1 + $I_L1346_22, 1 + $I_L1345_26) = $Flat_S38
 1363.                   $I_L1346_22 = 1 + $I_L1346_22
 1361.                   if ( $I_L1346_22 >= ibdim ) exit
 1361.                enddo
 1364.                $I_L1345_26 = 1 + $I_L1345_26
 1363.                if ( $I_L1345_26 >= kmax ) exit
 1363.             enddo
 1363.          endif
 1363.       endif
 1260.       _free( t$238 )
 1367.       return
 1367.       end
 1367.       
 1368.       
 1368.       subroutine uplatlon2d( ulon, ulat, ulonm, ulatm, coslon, sinlon, coslat, sinlat, u, v, delt, ibdim, final )
 1368.       t$30 = ibdim
 1381.       t$247 = _zla( 0, ibdim )
 1415.       $dt2_S8 = delt * delt
 1416.       $twodt_S12 = 2.0 * delt
 1418.       if ( ibdim > 0 ) then
 1438.          if ( final /= .false. ) then
 1418.             $I_L1418_6 = 0
 1418. !dir$ ivdep
 1418.             do
 1419.                $Coss_P8 = coss( ulonm(1 + $I_L1418_6) )
 1419.                $Flat_S3 = real( $Coss_P8, 8 )
 1420.                $Flat_S1 = cimag( $Coss_P8 )
 1421.                $Coss_P9 = coss( ulatm(1 + $I_L1418_6) )
 1421.                $Flat_S4 = real( $Coss_P9, 8 )
 1422.                $Flat_S2 = cimag( $Coss_P9 )
 1423.                $x_S11 = coslon(1 + $I_L1418_6) * coslat(1 + $I_L1418_6)
 1424.                $y_S10 = coslat(1 + $I_L1418_6) * sinlon(1 + $I_L1418_6)
 1425.                $z_S9 = sinlat(1 + $I_L1418_6)
 1426.                $xdot_S7 = -( $Flat_S2 * $Flat_S3 * v(1 + $I_L1418_6) + $Flat_S1 * u(1 + $I_L1418_6) )
 1427.                $ydot_S6 = -( $Flat_S1 * $Flat_S2 * v(1 + $I_L1418_6) ) + $Flat_S3 * u(1 + $I_L1418_6)
 1428.                $zdot_S5 = $Flat_S4 * v(1 + $I_L1418_6)
 1432.                $xb_S17 = ( $x_S11 + -( delt * $xdot_S7 ) ) * _recip_sqrt( ( 1.0 + -( $twodt_S12 * ( $zdot_S5 * $z_S9 + $ydot_S6 * $y_S10 + $xdot_S7 * $x_S11 ) ) + $dt2_S8 * ( $zdot_S5 * $zdot_S5 + $ydot_S6 * $ydot_S6 + $xdot_S7 * $xdot_S7 ) ) )
 1433.                $yb_S16 = ( $y_S10 + -( delt * $ydot_S6 ) ) * _recip_sqrt( ( 1.0 + -( $twodt_S12 * ( $zdot_S5 * $z_S9 + $ydot_S6 * $y_S10 + $xdot_S7 * $x_S11 ) ) + $dt2_S8 * ( $zdot_S5 * $zdot_S5 + $ydot_S6 * $ydot_S6 + $xdot_S7 * $xdot_S7 ) ) )
 1434.                $zb_S14 = ( $z_S9 + -( delt * $zdot_S5 ) ) * _recip_sqrt( ( 1.0 + -( $twodt_S12 * ( $zdot_S5 * $z_S9 + $ydot_S6 * $y_S10 + $xdot_S7 * $x_S11 ) ) + $dt2_S8 * ( $zdot_S5 * $zdot_S5 + $ydot_S6 * $ydot_S6 + $xdot_S7 * $xdot_S7 ) ) )
 1435.                $Flat_S13 = atan2( ( ( $y_S10 + -( delt * $ydot_S6 ) ) * _recip_sqrt( ( 1.0 + -( $twodt_S12 * ( $zdot_S5 * $z_S9 + $ydot_S6 * $y_S10 + $xdot_S7 * $x_S11 ) ) + $dt2_S8 * ( $zdot_S5 * $zdot_S5 + $ydot_S6 * $ydot_S6 + $xdot_S7 * $xdot_S7 ) ) ) ), ( ( $x_S11 + -( delt * $xdot_S7 ) ) * _recip_sqrt( ( 1.0 + -( $twodt_S12 * ( $zdot_S5 * $z_S9 + $ydot_S6 * $y_S10 + $xdot_S7 * $x_S11 ) ) + $dt2_S8 * ( $zdot_S5 * $zdot_S5 + $ydot_S6 * $ydot_S6 + $xdot_S7 * $xdot_S7 ) ) ) ) )
 1435.                ulonm(1 + $I_L1418_6) = $Flat_S13
 1436.                if ( $Flat_S13 < 0.0 ) then
 1436.                   ulonm(1 + $I_L1418_6) = 6.28318530717958 + $Flat_S13
 1436.                endif
 1437.                $Flat_S15 = asin( $zb_S14 )
 1437.                ulatm(1 + $I_L1418_6) = $Flat_S15
 1442.                $zm_S19 = -$z_S9 + $zb_S14 * ( 2.0 * ( $z_S9 * $zb_S14 + $y_S10 * $yb_S16 + $x_S11 * $xb_S17 ) )
 1443.                $Flat_S18 = atan2( ( -$y_S10 + $yb_S16 * ( 2.0 * ( $z_S9 * $zb_S14 + $y_S10 * $yb_S16 + $x_S11 * $xb_S17 ) ) ), ( -$x_S11 + $xb_S17 * ( 2.0 * ( $z_S9 * $zb_S14 + $y_S10 * $yb_S16 + $x_S11 * $xb_S17 ) ) ) )
 1443.                ulon(1 + $I_L1418_6) = $Flat_S18
 1444.                if ( $Flat_S18 < 0.0 ) then
 1444.                   ulon(1 + $I_L1418_6) = 6.28318530717958 + $Flat_S18
 1444.                endif
 1445.                $Flat_S20 = asin( $zm_S19 )
 1445.                ulat(1 + $I_L1418_6) = $Flat_S20
 1447.                $I_L1418_6 = 1 + $I_L1418_6
 1446.                if ( $I_L1418_6 >= ibdim ) exit
 1446.             enddo
 1446.          else
 1418.             $I_L1418_8 = 0
 1418. !dir$ ivdep
 1418.             do
 1419.                $Coss_P10 = coss( ulonm(1 + $I_L1418_8) )
 1419.                $Flat_S3 = real( $Coss_P10, 8 )
 1420.                $Flat_S1 = cimag( $Coss_P10 )
 1421.                $Coss_P11 = coss( ulatm(1 + $I_L1418_8) )
 1421.                $Flat_S4 = real( $Coss_P11, 8 )
 1422.                $Flat_S2 = cimag( $Coss_P11 )
 1423.                $x_S11 = coslon(1 + $I_L1418_8) * coslat(1 + $I_L1418_8)
 1424.                $y_S10 = coslat(1 + $I_L1418_8) * sinlon(1 + $I_L1418_8)
 1425.                $z_S9 = sinlat(1 + $I_L1418_8)
 1426.                $xdot_S7 = -( $Flat_S2 * $Flat_S3 * v(1 + $I_L1418_8) + $Flat_S1 * u(1 + $I_L1418_8) )
 1427.                $ydot_S6 = -( $Flat_S1 * $Flat_S2 * v(1 + $I_L1418_8) ) + $Flat_S3 * u(1 + $I_L1418_8)
 1428.                $zdot_S5 = $Flat_S4 * v(1 + $I_L1418_8)
 1434.                $zb_S14 = ( $z_S9 + -( delt * $zdot_S5 ) ) * _recip_sqrt( ( 1.0 + -( $twodt_S12 * ( $zdot_S5 * $z_S9 + $ydot_S6 * $y_S10 + $xdot_S7 * $x_S11 ) ) + $dt2_S8 * ( $zdot_S5 * $zdot_S5 + $ydot_S6 * $ydot_S6 + $xdot_S7 * $xdot_S7 ) ) )
 1435.                $Flat_S13 = atan2( ( ( $y_S10 + -( delt * $ydot_S6 ) ) * _recip_sqrt( ( 1.0 + -( $twodt_S12 * ( $zdot_S5 * $z_S9 + $ydot_S6 * $y_S10 + $xdot_S7 * $x_S11 ) ) + $dt2_S8 * ( $zdot_S5 * $zdot_S5 + $ydot_S6 * $ydot_S6 + $xdot_S7 * $xdot_S7 ) ) ) ), ( ( $x_S11 + -( delt * $xdot_S7 ) ) * _recip_sqrt( ( 1.0 + -( $twodt_S12 * ( $zdot_S5 * $z_S9 + $ydot_S6 * $y_S10 + $xdot_S7 * $x_S11 ) ) + $dt2_S8 * ( $zdot_S5 * $zdot_S5 + $ydot_S6 * $ydot_S6 + $xdot_S7 * $xdot_S7 ) ) ) ) )
 1435.                ulonm(1 + $I_L1418_8) = $Flat_S13
 1436.                if ( $Flat_S13 < 0.0 ) then
 1436.                   ulonm(1 + $I_L1418_8) = 6.28318530717958 + $Flat_S13
 1436.                endif
 1437.                $Flat_S15 = asin( $zb_S14 )
 1437.                ulatm(1 + $I_L1418_8) = $Flat_S15
 1447.                $I_L1418_8 = 1 + $I_L1418_8
 1446.                if ( $I_L1418_8 >= ibdim ) exit
 1446.             enddo
 1446.          endif
 1446.       endif
 1449.       return
 1449.       end
 1449.       
 1450.       
 1450.       subroutine locate( lsig, llatlon, ulon, ulat, usig, ulondp, ulatdp, usigdp, iloc, jloc, kloc, ibdim, klats )
 1450.       t$31 = ibdim
 1450.       t$32 = kmax
 1467.       t$248 = _zla( 0, ibdim )
 1450.       t$249 = _zla( 0, ibdim )
 1467.       t$250 = _zla( 0, kmax )
 1450.       t$251 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1450.       t$252 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1450.       t$253 = 4 * _zla( 0, ibdim ) * _zla( 0, kmax )
 1487.       if ( lsig /= .false. ) then
 1488.          if ( kmax > 0 ) then
 1493.             $SC_delsigma_I10 = delsigma%dim_1%EX
 1493.             $SC_delsigma_I11 = delsigma%dim_1%LB
 1493.             $SC_delsigma_I13 = delsigma%dim_2%SM
 1493.             $SC_delsigma_I12 = delsigma%dim_2%EX
 1493.             $SC_delsigma_I14 = delsigma%dim_2%LB
 1491.             $SC_ksigref_I5 = ksigref%dim_1%EX
 1491.             $SC_ksigref_I6 = ksigref%dim_1%LB
 1491.             $SC_ksigref_I8 = ksigref%dim_2%SM
 1491.             $SC_ksigref_I7 = ksigref%dim_2%EX
 1491.             $SC_ksigref_I9 = ksigref%dim_2%LB
 1490.             $SC_sigma_I0 = sigma%dim_1%EX
 1490.             $SC_sigma_I1 = sigma%dim_1%LB
 1490.             $SC_sigma_I3 = sigma%dim_2%SM
 1490.             $SC_sigma_I2 = sigma%dim_2%EX
 1490.             $SC_sigma_I4 = sigma%dim_2%LB
 1489.             if ( ibdim > 0 ) then
 1488.                $I_L1488_99 = 0
 1488. !dir$ blocking_size( 1, 1 )
 1488.                do
 1489.                   $I_L1489_80 = 0
 1489. !dir$ ivdep
 1489. !dir$ blocking_size( 256, 256 )
 1489.                   do
 1490.                      $ik_S2 = int( ( 1.0/delsigref * ( usig(1 + $I_L1489_80, 1 + $I_L1488_99) + -(sigma%base_addr)(1 + $I_L1489_80, 1, 0) ) ) )
 1491.                      $kloc_WR0_R0 = (ksigref%base_addr)(1 + $I_L1489_80, $ik_S2, 0)
 1491.                      kloc(1 + $I_L1489_80, 1 + $I_L1488_99) = $kloc_WR0_R0
 1492.                      if ( usig(1 + $I_L1489_80, 1 + $I_L1488_99) > (sigma%base_addr)(1 + $I_L1489_80, 1 + $kloc_WR0_R0, 0) ) then
 1492.                         $kloc_WR0_R0 = 1 + $kloc_WR0_R0
 1492.                         kloc(1 + $I_L1489_80, 1 + $I_L1488_99) = $kloc_WR0_R0
 1492.                      endif
 1493.                      usigdp(1 + $I_L1489_80, 1 + $I_L1488_99) = ( 1.0/(delsigma%base_addr)(1 + $I_L1489_80, $kloc_WR0_R0, 0) * ( usig(1 + $I_L1489_80, 1 + $I_L1488_99) + -(sigma%base_addr)(1 + $I_L1489_80, $kloc_WR0_R0, 0) ) )
 1494.                      $I_L1489_80 = 1 + $I_L1489_80
 1492.                      if ( $I_L1489_80 >= ibdim ) exit
 1492.                   enddo
 1495.                   $I_L1488_99 = 1 + $I_L1488_99
 1494.                   if ( $I_L1488_99 >= kmax ) exit
 1494.                enddo
 1494.             endif
 1494.          endif
 1494.       endif
 1498.       if ( llatlon /= .false. ) then
 1499.          if ( klats == 4 ) then
 1500.             kp(1) = -1
 1501.             kp(2) = 0
 1502.             kp(3) = 1
 1503.             kp(4) = 2
 1503.          else
 1505.             kp(1) = 0
 1506.             kp(2) = 1
 1506.          endif
 1509.          if ( kmax > 0 ) then
 1514.             $SC_delphi_I25 = delphi%dim_1%EX
 1514.             $SC_delphi_I26 = delphi%dim_1%LB
 1514.             $SC_delphi_I28 = delphi%dim_2%SM
 1514.             $SC_delphi_I27 = delphi%dim_2%EX
 1514.             $SC_delphi_I29 = delphi%dim_2%LB
 1513.             $SC_phi_I20 = phi%dim_1%EX
 1513.             $SC_phi_I21 = phi%dim_1%LB
 1513.             $SC_phi_I23 = phi%dim_2%SM
 1513.             $SC_phi_I22 = phi%dim_2%EX
 1513.             $SC_phi_I24 = phi%dim_2%LB
 1512.             $SC_jphiref_I15 = jphiref%dim_1%EX
 1512.             $SC_jphiref_I16 = jphiref%dim_1%LB
 1512.             $SC_jphiref_I18 = jphiref%dim_2%SM
 1512.             $SC_jphiref_I17 = jphiref%dim_2%EX
 1512.             $SC_jphiref_I19 = jphiref%dim_2%LB
 1510.             if ( ibdim > 0 ) then
 1509.                $I_L1509_101 = 0
 1509.                do
 1510.                   $I_L1510_82 = 0
 1510. !dir$ ivdep
 1510.                   do
 1511.                      $ik_S5 = int( ( 1.0/delphiref * ( 1.570796326794895 + ulat(1 + $I_L1510_82, 1 + $I_L1509_101) ) ) )
 1512.                      $jloc_WR0_R1 = (jphiref%base_addr)(1 + $I_L1510_82, $ik_S5, 0)
 1512.                      jloc(1 + $I_L1510_82, 1 + $I_L1509_101) = $jloc_WR0_R1
 1513.                      if ( ulat(1 + $I_L1510_82, 1 + $I_L1509_101) > (phi%base_addr)(1 + $I_L1510_82, 1 + $jloc_WR0_R1, 0) ) then
 1513.                         $jloc_WR0_R1 = 1 + $jloc_WR0_R1
 1513.                         jloc(1 + $I_L1510_82, 1 + $I_L1509_101) = $jloc_WR0_R1
 1513.                      endif
 1514.                      ulatdp(1 + $I_L1510_82, 1 + $I_L1509_101) = ( 1.0/(delphi%base_addr)(1 + $I_L1510_82, $jloc_WR0_R1, 0) * ( ulat(1 + $I_L1510_82, 1 + $I_L1509_101) + -(phi%base_addr)(1 + $I_L1510_82, $jloc_WR0_R1, 0) ) )
 1515.                      $I_L1510_82 = 1 + $I_L1510_82
 1513.                      if ( $I_L1510_82 >= ibdim ) exit
 1513.                   enddo
 1516.                   $I_L1509_101 = 1 + $I_L1509_101
 1515.                   if ( $I_L1509_101 >= kmax ) exit
 1515.                enddo
 1515.             endif
 1515.          endif
 1518.          if ( klats > 0 ) then
 1523.             $SC_dellon_I30 = dellon%dim_1%EX
 1523.             $SC_dellon_I31 = dellon%dim_1%LB
 1523.             $SC_dellon_I33 = dellon%dim_2%SM
 1523.             $SC_dellon_I32 = dellon%dim_2%EX
 1523.             $SC_dellon_I34 = dellon%dim_2%LB
 1520.             if ( kmax > 0 ) then
 1521.                if ( ibdim > 0 ) then
 1518.                   $I_L1518_122 = 0
 1518. !dir$ unroll 4
 1518. !dir$ blocking_size( 1, 1 )
 1518.                   do
 1519.                      $ks_S9 = kp(1 + $I_L1518_122)
 1520.                      $I_L1520_120 = 0
 1520.                      do
 1521.                         $I_L1521_118 = 0
 1521.                         do
 1520.                            $I_L1520_115 = 0
 1520. !dir$ shortloop16
 1520. !dir$ blocking_size( 2, 2 )
 1520.                            do
 1521.                               $I_L1521_84 = 0
 1521. !dir$ ivdep
 1521. !dir$ blocking_size( 256, 256 )
 1521.                               do
 1522.                                  $j_S10 = 1 + jmax + -jloc(1 + $I_L1521_84 + 256 * $I_L1521_118, 1 + $I_L1520_115 + 2 * $I_L1520_120)
 1523.                                  $ulondp_WR0_R2 = 1.0 + ( ulon(1 + $I_L1521_84 + 256 * $I_L1521_118, 1 + $I_L1520_115 + 2 * $I_L1520_120) * 1.0/(dellon%base_addr)(1 + $I_L1521_84 + 256 * $I_L1521_118, $j_S10 + -$ks_S9, 0) )
 1524.                                  iloc(1 + $I_L1521_84 + 256 * $I_L1521_118, 1 + $I_L1520_115 + 2 * $I_L1520_120, 1 + $I_L1518_122) = int( $ulondp_WR0_R2 )
 1525.                                  $ulondp_WR0_R2 = $ulondp_WR0_R2 + ( -( int( $ulondp_WR0_R2 ) ) )
 1525.                                  ulondp(1 + $I_L1521_84 + 256 * $I_L1521_118, 1 + $I_L1520_115 + 2 * $I_L1520_120, 1 + $I_L1518_122) = $ulondp_WR0_R2
 1521.                                  $I_L1521_84 = 1 + $I_L1521_84
 1521.                                  if ( $I_L1521_84 >= min( ibdim, 256 + 256 * $I_L1521_118 ) + -256 * $I_L1521_118 ) exit
 1521.                               enddo
 1520.                               $I_L1520_115 = 1 + $I_L1520_115
 1520.                               if ( $I_L1520_115 >= min( kmax, 2 + 2 * $I_L1520_120 ) + -2 * $I_L1520_120 ) exit
 1520.                            enddo
 1521.                            $I_L1521_118 = 1 + $I_L1521_118
 1526.                            if ( $I_L1521_118 >= 1 + max( 0, -1 + _rsh( 255 + ibdim, 8 ) ) ) exit
 1526.                         enddo
 1520.                         $I_L1520_120 = 1 + $I_L1520_120
 1520.                         if ( $I_L1520_120 >= 1 + max( 0, -1 + _rsh( 1 + kmax, 1 ) ) ) exit
 1520.                      enddo
 1528.                      $I_L1518_122 = 1 + $I_L1518_122
 1527.                      if ( $I_L1518_122 >= klats ) exit
 1527.                   enddo
 1527.                endif
 1527.             endif
 1527.          endif
 1529.          if ( klats == 1 ) then
 1530.             $F_A33 = kmax
 1530.             $F_A34 = ibdim
 1530.             if ( and( -$F_A34, -$F_A33 ) < 0 ) then
 1530.                $I_L1530_103 = 0
 1530.                do
 1530.                   $I_L1530_87 = 0
 1530. !dir$ ivdep
 1530.                   do
 1530.                      iloc(1 + $I_L1530_87, 1 + $I_L1530_103, 2) = iloc(1 + $I_L1530_87, 1 + $I_L1530_103, 1)
 1530.                      $I_L1530_87 = 1 + $I_L1530_87
 1530.                      if ( $I_L1530_87 >= $F_A34 ) exit
 1530.                   enddo
 1530.                   $I_L1530_103 = 1 + $I_L1530_103
 1530.                   if ( $I_L1530_103 >= $F_A33 ) exit
 1530.                enddo
 1530.             endif
 1531.             $F_A35 = kmax
 1531.             $F_A36 = ibdim
 1531.             if ( and( -$F_A36, -$F_A35 ) < 0 ) then
 1531.                $I_L1531_105 = 0
 1531.                do
 1531.                   $I_L1531_89 = 0
 1531. !dir$ ivdep
 1531.                   do
 1531.                      iloc(1 + $I_L1531_89, 1 + $I_L1531_105, 3) = iloc(1 + $I_L1531_89, 1 + $I_L1531_105, 1)
 1531.                      $I_L1531_89 = 1 + $I_L1531_89
 1531.                      if ( $I_L1531_89 >= $F_A36 ) exit
 1531.                   enddo
 1531.                   $I_L1531_105 = 1 + $I_L1531_105
 1531.                   if ( $I_L1531_105 >= $F_A35 ) exit
 1531.                enddo
 1531.             endif
 1532.             $F_A37 = kmax
 1532.             $F_A38 = ibdim
 1532.             if ( and( -$F_A38, -$F_A37 ) < 0 ) then
 1532.                $I_L1532_107 = 0
 1532.                do
 1532.                   $I_L1532_91 = 0
 1532. !dir$ ivdep
 1532.                   do
 1532.                      iloc(1 + $I_L1532_91, 1 + $I_L1532_107, 4) = iloc(1 + $I_L1532_91, 1 + $I_L1532_107, 1)
 1532.                      $I_L1532_91 = 1 + $I_L1532_91
 1532.                      if ( $I_L1532_91 >= $F_A38 ) exit
 1532.                   enddo
 1532.                   $I_L1532_107 = 1 + $I_L1532_107
 1532.                   if ( $I_L1532_107 >= $F_A37 ) exit
 1532.                enddo
 1532.             endif
 1533.             $F_A39 = kmax
 1533.             $F_A40 = ibdim
 1533.             if ( and( -$F_A40, -$F_A39 ) < 0 ) then
 1533.                $I_L1533_109 = 0
 1533.                do
 1533.                   $I_L1533_93 = 0
 1533. !dir$ ivdep
 1533.                   do
 1533.                      ulondp(1 + $I_L1533_93, 1 + $I_L1533_109, 2) = ulondp(1 + $I_L1533_93, 1 + $I_L1533_109, 1)
 1533.                      $I_L1533_93 = 1 + $I_L1533_93
 1533.                      if ( $I_L1533_93 >= $F_A40 ) exit
 1533.                   enddo
 1533.                   $I_L1533_109 = 1 + $I_L1533_109
 1533.                   if ( $I_L1533_109 >= $F_A39 ) exit
 1533.                enddo
 1533.             endif
 1534.             $F_A41 = kmax
 1534.             $F_A42 = ibdim
 1534.             if ( and( -$F_A42, -$F_A41 ) < 0 ) then
 1534.                $I_L1534_111 = 0
 1534.                do
 1534.                   $I_L1534_95 = 0
 1534. !dir$ ivdep
 1534.                   do
 1534.                      ulondp(1 + $I_L1534_95, 1 + $I_L1534_111, 3) = ulondp(1 + $I_L1534_95, 1 + $I_L1534_111, 1)
 1534.                      $I_L1534_95 = 1 + $I_L1534_95
 1534.                      if ( $I_L1534_95 >= $F_A42 ) exit
 1534.                   enddo
 1534.                   $I_L1534_111 = 1 + $I_L1534_111
 1534.                   if ( $I_L1534_111 >= $F_A41 ) exit
 1534.                enddo
 1534.             endif
 1535.             $F_A43 = kmax
 1535.             $F_A44 = ibdim
 1535.             if ( and( -$F_A44, -$F_A43 ) < 0 ) then
 1535.                $I_L1535_113 = 0
 1535.                do
 1535.                   $I_L1535_97 = 0
 1535. !dir$ ivdep
 1535.                   do
 1535.                      ulondp(1 + $I_L1535_97, 1 + $I_L1535_113, 4) = ulondp(1 + $I_L1535_97, 1 + $I_L1535_113, 1)
 1535.                      $I_L1535_97 = 1 + $I_L1535_97
 1535.                      if ( $I_L1535_97 >= $F_A44 ) exit
 1535.                   enddo
 1535.                   $I_L1535_113 = 1 + $I_L1535_113
 1535.                   if ( $I_L1535_113 >= $F_A43 ) exit
 1535.                enddo
 1535.             endif
 1535.          endif
 1535.       endif
 1539.       return
 1539.       end
 1539.       
 1540.       
 1540.       subroutine locate2d( ulon, ulat, ulondp, ulatdp, iloc, jloc, ibdim, klats )
 1540.       t$33 = ibdim
 1553.       t$254 = _zla( 0, ibdim )
 1540.       t$255 = _zla( 0, ibdim )
 1540.       t$256 = 4 * _zla( 0, ibdim )
 1570.       if ( klats == 4 ) then
 1571.          kp(1) = -1
 1572.          kp(2) = 0
 1573.          kp(3) = 1
 1574.          kp(4) = 2
 1574.       else
 1576.          kp(1) = 0
 1577.          kp(2) = 1
 1577.       endif
 1580.       if ( ibdim > 0 ) then
 1584.          $SC_delphi_I10 = delphi%dim_1%EX
 1584.          $SC_delphi_I11 = delphi%dim_1%LB
 1584.          $SC_delphi_I13 = delphi%dim_2%SM
 1584.          $SC_delphi_I12 = delphi%dim_2%EX
 1584.          $SC_delphi_I14 = delphi%dim_2%LB
 1583.          $SC_phi_I5 = phi%dim_1%EX
 1583.          $SC_phi_I6 = phi%dim_1%LB
 1583.          $SC_phi_I8 = phi%dim_2%SM
 1583.          $SC_phi_I7 = phi%dim_2%EX
 1583.          $SC_phi_I9 = phi%dim_2%LB
 1582.          $SC_jphiref_I0 = jphiref%dim_1%EX
 1582.          $SC_jphiref_I1 = jphiref%dim_1%LB
 1582.          $SC_jphiref_I3 = jphiref%dim_2%SM
 1582.          $SC_jphiref_I2 = jphiref%dim_2%EX
 1582.          $SC_jphiref_I4 = jphiref%dim_2%LB
 1580.          $I_L1580_36 = 0
 1580. !dir$ ivdep
 1580.          do
 1581.             $ik_S1 = int( ( 1.0/delphiref * ( 1.570796326794895 + ulat(1 + $I_L1580_36) ) ) )
 1582.             $jloc_WR0_R0 = (jphiref%base_addr)(1 + $I_L1580_36, $ik_S1, 0)
 1582.             jloc(1 + $I_L1580_36) = $jloc_WR0_R0
 1583.             if ( ulat(1 + $I_L1580_36) > (phi%base_addr)(1 + $I_L1580_36, 1 + $jloc_WR0_R0, 0) ) then
 1583.                $jloc_WR0_R0 = 1 + $jloc_WR0_R0
 1583.                jloc(1 + $I_L1580_36) = $jloc_WR0_R0
 1583.             endif
 1584.             ulatdp(1 + $I_L1580_36) = ( 1.0/(delphi%base_addr)(1 + $I_L1580_36, $jloc_WR0_R0, 0) * ( ulat(1 + $I_L1580_36) + -(phi%base_addr)(1 + $I_L1580_36, $jloc_WR0_R0, 0) ) )
 1585.             $I_L1580_36 = 1 + $I_L1580_36
 1583.             if ( $I_L1580_36 >= ibdim ) exit
 1583.          enddo
 1583.       endif
 1587.       if ( klats > 0 ) then
 1591.          $SC_dellon_I15 = dellon%dim_1%EX
 1591.          $SC_dellon_I16 = dellon%dim_1%LB
 1591.          $SC_dellon_I18 = dellon%dim_2%SM
 1591.          $SC_dellon_I17 = dellon%dim_2%EX
 1591.          $SC_dellon_I19 = dellon%dim_2%LB
 1589.          if ( ibdim > 0 ) then
 1587.             $I_L1587_58 = 0
 1587.             do
 1589.                $I_L1589_56 = 0
 1589.                do
 1587.                   $I_L1587_60 = 0
 1587. !dir$ shortloop16
 1587. !dir$ blocking_size( 2, 2 )
 1587.                   do
 1588.                      $ks_S4 = kp(1 + $I_L1587_60 + 2 * $I_L1587_58)
 1589.                      $I_L1589_38 = 0
 1589. !dir$ ivdep
 1589. !dir$ blocking_size( 256, 256 )
 1589.                      do
 1590.                         $j_S5 = 1 + jmax + -jloc(1 + $I_L1589_38 + 256 * $I_L1589_56)
 1591.                         $ulondp_WR0_R1 = 1.0 + ( ulon(1 + $I_L1589_38 + 256 * $I_L1589_56) * 1.0/(dellon%base_addr)(1 + $I_L1589_38 + 256 * $I_L1589_56, $j_S5 + -$ks_S4, 0) )
 1592.                         iloc(1 + $I_L1589_38 + 256 * $I_L1589_56, 1 + $I_L1587_60 + 2 * $I_L1587_58) = int( $ulondp_WR0_R1 )
 1593.                         $ulondp_WR0_R1 = $ulondp_WR0_R1 + ( -( int( $ulondp_WR0_R1 ) ) )
 1593.                         ulondp(1 + $I_L1589_38 + 256 * $I_L1589_56, 1 + $I_L1587_60 + 2 * $I_L1587_58) = $ulondp_WR0_R1
 1589.                         $I_L1589_38 = 1 + $I_L1589_38
 1589.                         if ( $I_L1589_38 >= min( ibdim, 256 + 256 * $I_L1589_56 ) + -256 * $I_L1589_56 ) exit
 1589.                      enddo
 1587.                      $I_L1587_60 = 1 + $I_L1587_60
 1587.                      if ( $I_L1587_60 >= min( klats, 2 + 2 * $I_L1587_58 ) + -2 * $I_L1587_58 ) exit
 1587.                   enddo
 1589.                   $I_L1589_56 = 1 + $I_L1589_56
 1594.                   if ( $I_L1589_56 >= 1 + max( 0, -1 + _rsh( 255 + ibdim, 8 ) ) ) exit
 1594.                enddo
 1587.                $I_L1587_58 = 1 + $I_L1587_58
 1587.                if ( $I_L1587_58 >= 1 + max( 0, -1 + _rsh( 1 + klats, 1 ) ) ) exit
 1587.             enddo
 1587.          endif
 1587.       endif
 1596.       if ( klats == 1 ) then
 1597.          $F_A33 = ibdim
 1597.          if ( ibdim > 0 ) then
 1597.             $I_L1597_41 = 0
 1597. !dir$ ivdep
 1597.             do
 1597.                iloc(1 + $I_L1597_41, 2) = iloc(1 + $I_L1597_41, 1)
 1597.                $I_L1597_41 = 1 + $I_L1597_41
 1597.                if ( $I_L1597_41 >= $F_A33 ) exit
 1597.             enddo
 1597.          endif
 1598.          $F_A34 = ibdim
 1598.          if ( ibdim > 0 ) then
 1598.             $I_L1598_43 = 0
 1598. !dir$ ivdep
 1598.             do
 1598.                iloc(1 + $I_L1598_43, 3) = iloc(1 + $I_L1598_43, 1)
 1598.                $I_L1598_43 = 1 + $I_L1598_43
 1598.                if ( $I_L1598_43 >= $F_A34 ) exit
 1598.             enddo
 1598.          endif
 1599.          $F_A35 = ibdim
 1599.          if ( ibdim > 0 ) then
 1599.             $I_L1599_45 = 0
 1599. !dir$ ivdep
 1599.             do
 1599.                iloc(1 + $I_L1599_45, 4) = iloc(1 + $I_L1599_45, 1)
 1599.                $I_L1599_45 = 1 + $I_L1599_45
 1599.                if ( $I_L1599_45 >= $F_A35 ) exit
 1599.             enddo
 1599.          endif
 1600.          $F_A36 = ibdim
 1600.          if ( ibdim > 0 ) then
 1600.             $I_L1600_47 = 0
 1600. !dir$ ivdep
 1600.             do
 1600.                ulondp(1 + $I_L1600_47, 2) = ulondp(1 + $I_L1600_47, 1)
 1600.                $I_L1600_47 = 1 + $I_L1600_47
 1600.                if ( $I_L1600_47 >= $F_A36 ) exit
 1600.             enddo
 1600.          endif
 1601.          $F_A37 = ibdim
 1601.          if ( ibdim > 0 ) then
 1601.             $I_L1601_49 = 0
 1601. !dir$ ivdep
 1601.             do
 1601.                ulondp(1 + $I_L1601_49, 3) = ulondp(1 + $I_L1601_49, 1)
 1601.                $I_L1601_49 = 1 + $I_L1601_49
 1601.                if ( $I_L1601_49 >= $F_A37 ) exit
 1601.             enddo
 1601.          endif
 1602.          $F_A38 = ibdim
 1602.          if ( ibdim > 0 ) then
 1602.             $I_L1602_51 = 0
 1602. !dir$ ivdep
 1602.             do
 1602.                ulondp(1 + $I_L1602_51, 4) = ulondp(1 + $I_L1602_51, 1)
 1602.                $I_L1602_51 = 1 + $I_L1602_51
 1602.                if ( $I_L1602_51 >= $F_A38 ) exit
 1602.             enddo
 1602.          endif
 1602.       endif
 1605.       return
 1605.       end
 1605.       
 1606.       
 1606.       subroutine interpluvg( u, v, uint, vint, ulondp, ulatdp, usigdp, jloc, kloc, ibdim, ip, jn )
 1606.       t$36 = ibmax
 1606.       t$35 = kmax
 1606.       t$37 = jbmax_ext
 1624.       t$257 = _zla( 0, ibmax )
 1606.       t$258 = _zla( 0, ibmax )
 1624.       t$259 = _zla( 0, kmax )
 1606.       t$260 = _zla( 0, ibmax ) * _zla( 0, kmax )
 1624.       t$261 = _zla( 0, jbmax_ext )
 1606.       t$262 = _zla( 0, ibmax ) * _zla( 0, kmax ) * _zla( 0, jbmax_ext )
 1606.       t$34 = ibdim
 1626.       t$263 = _zla( 0, ibdim )
 1606.       t$264 = _zla( 0, ibdim )
 1606.       t$265 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1606.       t$266 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1606.       t$267 = 2 * _zla( 0, ibdim ) * _zla( 0, kmax )
 1606.       t$268 = 4 * _zla( 0, ibdim ) * _zla( 0, kmax )
 1648.       if ( kmax > 0 ) then
 1649.          if ( ibdim > 0 ) then
 1648.             $I_L1648_10 = 0
 1648.             do
 1649.                $I_L1649_8 = 0
 1649. !dir$ ivdep
 1649.                do
 1650.                   $s1_S7 = cvmg( 1.0, -1.0, jloc(1 + $I_L1649_8, 1 + $I_L1648_10) /= 0 )
 1655.                   $s2_S4 = cvmg( 1.0, -1.0, jmax + -jloc(1 + $I_L1649_8, 1 + $I_L1648_10) /= 0 )
 1660.                   $f1_S5 = u(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 1), kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 1)) + ulondp(1 + $I_L1649_8, 1 + $I_L1648_10, 1) * ( u(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 3), kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 3)) + -u(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 1), kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 1)) )
 1662.                   $g1_S12 = v(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 1), kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 1)) + ulondp(1 + $I_L1649_8, 1 + $I_L1648_10, 1) * ( v(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 3), kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 3)) + -v(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 1), kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 1)) )
 1664.                   $f2_S2 = u(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 2), kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 2)) + ulondp(1 + $I_L1649_8, 1 + $I_L1648_10, 2) * ( u(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 4), kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 4)) + -u(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 2), kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 2)) )
 1666.                   $g2_S10 = v(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 2), kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 2)) + ulondp(1 + $I_L1649_8, 1 + $I_L1648_10, 2) * ( v(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 4), kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 4)) + -v(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 2), kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 2)) )
 1668.                   $f3_S6 = u(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 1), 1 + kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 1)) + ulondp(1 + $I_L1649_8, 1 + $I_L1648_10, 1) * ( u(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 3), 1 + kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 3)) + -u(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 1), 1 + kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 1)) )
 1670.                   $g3_S13 = v(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 1), 1 + kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 1)) + ulondp(1 + $I_L1649_8, 1 + $I_L1648_10, 1) * ( v(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 3), 1 + kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 3)) + -v(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 1), 1 + kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 1)) )
 1672.                   $f4_S3 = u(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 2), 1 + kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 2)) + ulondp(1 + $I_L1649_8, 1 + $I_L1648_10, 2) * ( u(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 4), 1 + kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 4)) + -u(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 2), 1 + kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 2)) )
 1674.                   $g4_S11 = v(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 2), 1 + kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 2)) + ulondp(1 + $I_L1649_8, 1 + $I_L1648_10, 2) * ( v(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 4), 1 + kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 4)) + -v(ip(1 + $I_L1649_8, 1 + $I_L1648_10, 2), 1 + kloc(1 + $I_L1649_8, 1 + $I_L1648_10), jn(1 + $I_L1649_8, 1 + $I_L1648_10, 2)) )
 1676.                   $f1_S8 = $s1_S7 * ( $f1_S5 + usigdp(1 + $I_L1649_8, 1 + $I_L1648_10) * ( $f3_S6 + -$f1_S5 ) )
 1677.                   $f2_S9 = $s2_S4 * ( $f2_S2 + usigdp(1 + $I_L1649_8, 1 + $I_L1648_10) * ( $f4_S3 + -$f2_S2 ) )
 1680.                   uint(1 + $I_L1649_8, 1 + $I_L1648_10) = $f1_S8 + ulatdp(1 + $I_L1649_8, 1 + $I_L1648_10) * ( $f2_S9 + -$f1_S8 )
 1678.                   $g1_S14 = $s1_S7 * ( $g1_S12 + usigdp(1 + $I_L1649_8, 1 + $I_L1648_10) * ( $g3_S13 + -$g1_S12 ) )
 1679.                   $g2_S15 = $s2_S4 * ( $g2_S10 + usigdp(1 + $I_L1649_8, 1 + $I_L1648_10) * ( $g4_S11 + -$g2_S10 ) )
 1681.                   vint(1 + $I_L1649_8, 1 + $I_L1648_10) = $g1_S14 + ulatdp(1 + $I_L1649_8, 1 + $I_L1648_10) * ( $g2_S15 + -$g1_S14 )
 1682.                   $I_L1649_8 = 1 + $I_L1649_8
 1649.                   if ( $I_L1649_8 >= ibdim ) exit
 1649.                enddo
 1683.                $I_L1648_10 = 1 + $I_L1648_10
 1682.                if ( $I_L1648_10 >= kmax ) exit
 1682.             enddo
 1682.          endif
 1682.       endif
 1685.       return
 1685.       end
 1685.       
 1686.       
 1686.       subroutine interpluvg2d( u, v, uint, vint, ulondp, ulatdp, iloc, jloc, ibdim )
 1686.       t$39 = ibmax
 1686.       t$40 = jbmax_ext
 1702.       t$269 = _zla( 0, ibmax )
 1686.       t$270 = _zla( 0, ibmax )
 1702.       t$271 = _zla( 0, jbmax_ext )
 1686.       t$272 = _zla( 0, ibmax ) * _zla( 0, jbmax_ext )
 1686.       t$38 = ibdim
 1704.       t$273 = _zla( 0, ibdim )
 1686.       t$274 = _zla( 0, ibdim )
 1686.       t$275 = 2 * _zla( 0, ibdim )
 1723.       t$278 = 8 * _zla( 0, ibmax )
 1724.       t$279 = 8 * ( 7 + 8 * _zla( 0, ibmax ) ) / 8
 1724.       t$281 = t$279 + 8 * _zla( 0, ibmax )
 1686.       t$276 = int( _alloc( t$279 + 8 * _zla( 0, ibmax ) ), 8 )
 1723.       t$277 = t$276
 1724.       t$280 = t$279 + t$276
 1729.       if ( ibdim > 0 ) then
 1729.          $I_L1729_8 = 0
 1729. !dir$ ivdep
 1729.          do
 1730.             $jp_S1 = 1 + jmax + -jloc(1 + $I_L1729_8)
 1731.             s1(1 + $I_L1729_8) = 1.0
 1732.             s2(1 + $I_L1729_8) = 1.0
 1733.             if ( jmax + -$jp_S1 == -1 ) then
 1733.                s1(1 + $I_L1729_8) = -1.0
 1733.             endif
 1734.             if ( $jp_S1 == 1 ) then
 1734.                s2(1 + $I_L1729_8) = -1.0
 1734.             endif
 1735.             $I_L1729_8 = 1 + $I_L1729_8
 1734.             if ( $I_L1729_8 >= ibdim ) exit
 1734.          enddo
 1746.          $SC_jbperij_I5 = jbperij%dim_1%EX
 1746.          $SC_jbperij_I6 = jbperij%dim_1%LB
 1746.          $SC_jbperij_I8 = jbperij%dim_2%SM
 1746.          $SC_jbperij_I7 = jbperij%dim_2%EX
 1746.          $SC_jbperij_I9 = jbperij%dim_2%LB
 1742.          $SC_ibperij_I0 = ibperij%dim_1%EX
 1742.          $SC_ibperij_I1 = ibperij%dim_1%LB
 1742.          $SC_ibperij_I3 = ibperij%dim_2%SM
 1742.          $SC_ibperij_I2 = ibperij%dim_2%EX
 1742.          $SC_ibperij_I4 = ibperij%dim_2%LB
 1740.          $I_L1740_10 = 0
 1740. !dir$ ivdep
 1740.          do
 1741.             $jp_S3 = 1 + jmax + -jloc(1 + $I_L1740_10)
 1742.             $i1_S4 = (ibperij%base_addr)(iloc(1 + $I_L1740_10, 1), $jp_S3, 0)
 1743.             $i2_S8 = (ibperij%base_addr)(iloc(1 + $I_L1740_10, 2), -1 + $jp_S3, 0)
 1744.             $i3_S6 = (ibperij%base_addr)(1 + iloc(1 + $I_L1740_10, 1), $jp_S3, 0)
 1745.             $i4_S10 = (ibperij%base_addr)(1 + iloc(1 + $I_L1740_10, 2), -1 + $jp_S3, 0)
 1746.             $j1_S5 = (jbperij%base_addr)(iloc(1 + $I_L1740_10, 1), $jp_S3, 0)
 1747.             $j2_S9 = (jbperij%base_addr)(iloc(1 + $I_L1740_10, 2), -1 + $jp_S3, 0)
 1748.             $j3_S7 = (jbperij%base_addr)(1 + iloc(1 + $I_L1740_10, 1), $jp_S3, 0)
 1749.             $j4_S11 = (jbperij%base_addr)(1 + iloc(1 + $I_L1740_10, 2), -1 + $jp_S3, 0)
 1750.             $f1_S12 = s1(1 + $I_L1740_10) * ( u($i1_S4, $j1_S5) + ulondp(1 + $I_L1740_10, 1) * ( u($i3_S6, $j3_S7) + -u($i1_S4, $j1_S5) ) )
 1752.             $g1_S14 = s1(1 + $I_L1740_10) * ( v($i1_S4, $j1_S5) + ulondp(1 + $I_L1740_10, 1) * ( v($i3_S6, $j3_S7) + -v($i1_S4, $j1_S5) ) )
 1754.             $f2_S13 = s2(1 + $I_L1740_10) * ( u($i2_S8, $j2_S9) + ulondp(1 + $I_L1740_10, 2) * ( u($i4_S10, $j4_S11) + -u($i2_S8, $j2_S9) ) )
 1756.             $g2_S15 = s2(1 + $I_L1740_10) * ( v($i2_S8, $j2_S9) + ulondp(1 + $I_L1740_10, 2) * ( v($i4_S10, $j4_S11) + -v($i2_S8, $j2_S9) ) )
 1758.             uint(1 + $I_L1740_10) = $f1_S12 + ulatdp(1 + $I_L1740_10) * ( $f2_S13 + -$f1_S12 )
 1759.             vint(1 + $I_L1740_10) = $g1_S14 + ulatdp(1 + $I_L1740_10) * ( $g2_S15 + -$g1_S14 )
 1760.             $I_L1740_10 = 1 + $I_L1740_10
 1740.             if ( $I_L1740_10 >= ibdim ) exit
 1740.          enddo
 1740.       endif
 1686.       _free( t$276 )
 1762.       return
 1762.       end
 1762.       
 1763.       
 1763.       subroutine interplg( fint, f, ulondp, ulatdp, usigdp, iloc, jloc, kloc, ibdim, ip, jn )
 1763.       t$41 = ibdim
 1763.       t$42 = kmax
 1783.       t$282 = _zla( 0, ibdim )
 1763.       t$283 = _zla( 0, ibdim )
 1783.       t$284 = _zla( 0, kmax )
 1763.       t$285 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1763.       t$43 = ibmax
 1763.       t$44 = jbmax_ext
 1782.       t$286 = _zla( 0, ibmax )
 1763.       t$287 = _zla( 0, ibmax )
 1763.       t$288 = _zla( 0, kmax ) * _zla( 0, ibmax )
 1782.       t$289 = _zla( 0, jbmax_ext )
 1763.       t$290 = _zla( 0, kmax ) * _zla( 0, ibmax ) * _zla( 0, jbmax_ext )
 1763.       t$291 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1763.       t$292 = 2 * _zla( 0, ibdim ) * _zla( 0, kmax )
 1763.       t$293 = 4 * _zla( 0, ibdim ) * _zla( 0, kmax )
 1800.       if ( kmax > 0 ) then
 1807.          $SC_jbperij_I5 = jbperij%dim_1%EX
 1807.          $SC_jbperij_I6 = jbperij%dim_1%LB
 1807.          $SC_jbperij_I8 = jbperij%dim_2%SM
 1807.          $SC_jbperij_I7 = jbperij%dim_2%EX
 1807.          $SC_jbperij_I9 = jbperij%dim_2%LB
 1803.          $SC_ibperij_I0 = ibperij%dim_1%EX
 1803.          $SC_ibperij_I1 = ibperij%dim_1%LB
 1803.          $SC_ibperij_I3 = ibperij%dim_2%SM
 1803.          $SC_ibperij_I2 = ibperij%dim_2%EX
 1803.          $SC_ibperij_I4 = ibperij%dim_2%LB
 1801.          if ( ibdim > 0 ) then
 1800.             $I_L1800_20 = 0
 1800.             do
 1801.                $I_L1801_16 = 0
 1801. !dir$ ivdep
 1801.                do
 1802.                   $jp_S2 = 1 + jmax + -jloc(1 + $I_L1801_16, 1 + $I_L1800_20)
 1803.                   ip(1 + $I_L1801_16, 1 + $I_L1800_20, 1) = (ibperij%base_addr)(iloc(1 + $I_L1801_16, 1 + $I_L1800_20, 1), $jp_S2, 0)
 1804.                   ip(1 + $I_L1801_16, 1 + $I_L1800_20, 2) = (ibperij%base_addr)(iloc(1 + $I_L1801_16, 1 + $I_L1800_20, 2), -1 + $jp_S2, 0)
 1805.                   ip(1 + $I_L1801_16, 1 + $I_L1800_20, 3) = (ibperij%base_addr)(1 + iloc(1 + $I_L1801_16, 1 + $I_L1800_20, 1), $jp_S2, 0)
 1806.                   ip(1 + $I_L1801_16, 1 + $I_L1800_20, 4) = (ibperij%base_addr)(1 + iloc(1 + $I_L1801_16, 1 + $I_L1800_20, 2), -1 + $jp_S2, 0)
 1807.                   jn(1 + $I_L1801_16, 1 + $I_L1800_20, 1) = (jbperij%base_addr)(iloc(1 + $I_L1801_16, 1 + $I_L1800_20, 1), $jp_S2, 0)
 1808.                   jn(1 + $I_L1801_16, 1 + $I_L1800_20, 2) = (jbperij%base_addr)(iloc(1 + $I_L1801_16, 1 + $I_L1800_20, 2), -1 + $jp_S2, 0)
 1809.                   jn(1 + $I_L1801_16, 1 + $I_L1800_20, 3) = (jbperij%base_addr)(1 + iloc(1 + $I_L1801_16, 1 + $I_L1800_20, 1), $jp_S2, 0)
 1810.                   jn(1 + $I_L1801_16, 1 + $I_L1800_20, 4) = (jbperij%base_addr)(1 + iloc(1 + $I_L1801_16, 1 + $I_L1800_20, 2), -1 + $jp_S2, 0)
 1812.                   $I_L1801_16 = 1 + $I_L1801_16
 1801.                   if ( $I_L1801_16 >= ibdim ) exit
 1801.                enddo
 1813.                $I_L1800_20 = 1 + $I_L1800_20
 1812.                if ( $I_L1800_20 >= kmax ) exit
 1812.             enddo
 1812.          endif
 1812.       endif
 1814.       $Reduc_A34 = .false.
 1814.       $F_A38 = kmax
 1814.       $F_A39 = ibdim
 1814.       if ( and( -$F_A39, -$F_A38 ) < 0 ) then
 1814.          $I_A37 = 0
 1814.          do
 1814.             $I_A36 = 0
 1814.             do
 1814.                $I_A35 = 0
 1814. !dir$ ivdep
 1814.                do
 1814.                   if ( ip(1 + $I_A35, 1 + $I_A36, 1 + $I_A37) == 0 ) then
 1814.                      $Reduc_A34 = .true.
 1814.                      goto 10
 1814.                   endif
 1814.                   $I_A35 = 1 + $I_A35
 1814.                   if ( $I_A35 >= $F_A39 ) exit
 1814.                enddo
 1814.                $I_A36 = 1 + $I_A36
 1814.                if ( $I_A36 >= $F_A38 ) exit
 1814.             enddo
 1814.             $I_A37 = 1 + $I_A37
 1814.             if ( $I_A37 >= 4 ) exit
 1814.          enddo
 1814.       endif
 1814.    10 continue
 1814.       if ( $Reduc_A34 /= .false. ) then
 1815.          $Unit_temp_O0 = nfprt
 1815.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$46,  _substr(t$45,1,23), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(InterplG)**', 0x800600000000L ) ) )
 1816.          $Unit_temp_O1 = nfprt
 1816.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$48,  _substr(t$47,1,47), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(InterplG)**', 0x800600000000L ) ) )
 1817.           _substr(t$558,1,14) = '**(InterplG)**'
 1817.          call _stop(  _substr(t$558,1,14) )
 1818.       else if ( kmax > 0 ) then
 1820.          if ( ibdim > 0 ) then
 1819.             $I_L1819_22 = 0
 1819.             do
 1820.                $I_L1820_18 = 0
 1820. !dir$ ivdep
 1820.                do
 1821.                   $f1_S8 = f(ip(1 + $I_L1820_18, 1 + $I_L1819_22, 1), kloc(1 + $I_L1820_18, 1 + $I_L1819_22), jn(1 + $I_L1820_18, 1 + $I_L1819_22, 1)) + ulondp(1 + $I_L1820_18, 1 + $I_L1819_22, 1) * ( f(ip(1 + $I_L1820_18, 1 + $I_L1819_22, 3), kloc(1 + $I_L1820_18, 1 + $I_L1819_22), jn(1 + $I_L1820_18, 1 + $I_L1819_22, 3)) + -f(ip(1 + $I_L1820_18, 1 + $I_L1819_22, 1), kloc(1 + $I_L1820_18, 1 + $I_L1819_22), jn(1 + $I_L1820_18, 1 + $I_L1819_22, 1)) )
 1823.                   $f2_S6 = f(ip(1 + $I_L1820_18, 1 + $I_L1819_22, 2), kloc(1 + $I_L1820_18, 1 + $I_L1819_22), jn(1 + $I_L1820_18, 1 + $I_L1819_22, 2)) + ulondp(1 + $I_L1820_18, 1 + $I_L1819_22, 2) * ( f(ip(1 + $I_L1820_18, 1 + $I_L1819_22, 4), kloc(1 + $I_L1820_18, 1 + $I_L1819_22), jn(1 + $I_L1820_18, 1 + $I_L1819_22, 4)) + -f(ip(1 + $I_L1820_18, 1 + $I_L1819_22, 2), kloc(1 + $I_L1820_18, 1 + $I_L1819_22), jn(1 + $I_L1820_18, 1 + $I_L1819_22, 2)) )
 1825.                   $f3_S9 = f(ip(1 + $I_L1820_18, 1 + $I_L1819_22, 1), 1 + kloc(1 + $I_L1820_18, 1 + $I_L1819_22), jn(1 + $I_L1820_18, 1 + $I_L1819_22, 1)) + ulondp(1 + $I_L1820_18, 1 + $I_L1819_22, 1) * ( f(ip(1 + $I_L1820_18, 1 + $I_L1819_22, 3), 1 + kloc(1 + $I_L1820_18, 1 + $I_L1819_22), jn(1 + $I_L1820_18, 1 + $I_L1819_22, 3)) + -f(ip(1 + $I_L1820_18, 1 + $I_L1819_22, 1), 1 + kloc(1 + $I_L1820_18, 1 + $I_L1819_22), jn(1 + $I_L1820_18, 1 + $I_L1819_22, 1)) )
 1827.                   $f4_S7 = f(ip(1 + $I_L1820_18, 1 + $I_L1819_22, 2), 1 + kloc(1 + $I_L1820_18, 1 + $I_L1819_22), jn(1 + $I_L1820_18, 1 + $I_L1819_22, 2)) + ulondp(1 + $I_L1820_18, 1 + $I_L1819_22, 2) * ( f(ip(1 + $I_L1820_18, 1 + $I_L1819_22, 4), 1 + kloc(1 + $I_L1820_18, 1 + $I_L1819_22), jn(1 + $I_L1820_18, 1 + $I_L1819_22, 4)) + -f(ip(1 + $I_L1820_18, 1 + $I_L1819_22, 2), 1 + kloc(1 + $I_L1820_18, 1 + $I_L1819_22), jn(1 + $I_L1820_18, 1 + $I_L1819_22, 2)) )
 1829.                   $f1_S10 = $f1_S8 + usigdp(1 + $I_L1820_18, 1 + $I_L1819_22) * ( $f3_S9 + -$f1_S8 )
 1830.                   $f2_S11 = $f2_S6 + usigdp(1 + $I_L1820_18, 1 + $I_L1819_22) * ( $f4_S7 + -$f2_S6 )
 1831.                   fint(1 + $I_L1820_18, 1 + $I_L1819_22) = $f1_S10 + ulatdp(1 + $I_L1820_18, 1 + $I_L1819_22) * ( $f2_S11 + -$f1_S10 )
 1832.                   $I_L1820_18 = 1 + $I_L1820_18
 1820.                   if ( $I_L1820_18 >= ibdim ) exit
 1820.                enddo
 1833.                $I_L1819_22 = 1 + $I_L1819_22
 1832.                if ( $I_L1819_22 >= kmax ) exit
 1832.             enddo
 1832.          endif
 1832.       endif
 1835.       return
 1835.       end
 1835.       
 1836.       
 1836.       subroutine interpcublin2d( fint, f, ulondp, ulatdp, iloc, jloc, ibdim )
 1836.       t$49 = ibdim
 1852.       t$294 = _zla( 0, ibdim )
 1836.       t$50 = ibmax
 1836.       t$51 = jbmax_ext
 1851.       t$295 = _zla( 0, ibmax )
 1836.       t$296 = _zla( 0, ibmax )
 1851.       t$297 = _zla( 0, jbmax_ext )
 1836.       t$298 = _zla( 0, ibmax ) * _zla( 0, jbmax_ext )
 1836.       t$299 = _zla( 0, ibdim )
 1836.       t$300 = 4 * _zla( 0, ibdim )
 1861.       t$303 = 8 * _zla( 0, ibmax )
 1862.       t$304 = 8 * ( 7 + 8 * _zla( 0, ibmax ) ) / 8
 1862.       t$306 = t$304 + 8 * _zla( 0, ibmax )
 1863.       t$307 = 8 * ( 7 + t$304 + 8 * _zla( 0, ibmax ) ) / 8
 1863.       t$309 = t$307 + 8 * _zla( 0, ibmax )
 1864.       t$310 = 8 * ( 7 + t$307 + 8 * _zla( 0, ibmax ) ) / 8
 1864.       t$312 = t$310 + 8 * _zla( 0, ibmax )
 1836.       t$313 = 12 * _zla( 0, ibmax )
 1859.       t$315 = t$310 + 56 * _zla( 0, ibmax )
 1860.       t$317 = t$310 + 104 * _zla( 0, ibmax )
 1836.       t$301 = int( _alloc( t$310 + 104 * _zla( 0, ibmax ) ), 8 )
 1861.       t$302 = t$301
 1862.       t$305 = t$304 + t$301
 1863.       t$308 = t$307 + t$301
 1864.       t$311 = t$310 + t$301
 1859.       t$314 = t$310 + t$301 + 8 * _zla( 0, ibmax )
 1860.       t$316 = t$310 + t$301 + 56 * _zla( 0, ibmax )
 1872.       if ( ibdim > 0 ) then
 1886.          $SC_jbperij_I5 = jbperij%dim_1%EX
 1886.          $SC_jbperij_I6 = jbperij%dim_1%LB
 1886.          $SC_jbperij_I8 = jbperij%dim_2%SM
 1886.          $SC_jbperij_I7 = jbperij%dim_2%EX
 1886.          $SC_jbperij_I9 = jbperij%dim_2%LB
 1874.          $SC_ibperij_I0 = ibperij%dim_1%EX
 1874.          $SC_ibperij_I1 = ibperij%dim_1%LB
 1874.          $SC_ibperij_I3 = ibperij%dim_2%SM
 1874.          $SC_ibperij_I2 = ibperij%dim_2%EX
 1874.          $SC_ibperij_I4 = ibperij%dim_2%LB
 1872.          $I_L1872_12 = 0
 1872. !dir$ ivdep
 1872.          do
 1873.             $jp_S1 = 1 + jmax + -jloc(1 + $I_L1872_12)
 1874.             ip(1 + $I_L1872_12, 1) = (ibperij%base_addr)(iloc(1 + $I_L1872_12, 1), 1 + $jp_S1, 0)
 1875.             ip(1 + $I_L1872_12, 2) = (ibperij%base_addr)(1 + iloc(1 + $I_L1872_12, 1), 1 + $jp_S1, 0)
 1876.             ip(1 + $I_L1872_12, 3) = (ibperij%base_addr)(-1 + iloc(1 + $I_L1872_12, 2), $jp_S1, 0)
 1877.             ip(1 + $I_L1872_12, 4) = (ibperij%base_addr)(iloc(1 + $I_L1872_12, 2), $jp_S1, 0)
 1878.             ip(1 + $I_L1872_12, 5) = (ibperij%base_addr)(1 + iloc(1 + $I_L1872_12, 2), $jp_S1, 0)
 1879.             ip(1 + $I_L1872_12, 6) = (ibperij%base_addr)(2 + iloc(1 + $I_L1872_12, 2), $jp_S1, 0)
 1880.             ip(1 + $I_L1872_12, 7) = (ibperij%base_addr)(-1 + iloc(1 + $I_L1872_12, 3), -1 + $jp_S1, 0)
 1881.             ip(1 + $I_L1872_12, 8) = (ibperij%base_addr)(iloc(1 + $I_L1872_12, 3), -1 + $jp_S1, 0)
 1882.             ip(1 + $I_L1872_12, 9) = (ibperij%base_addr)(1 + iloc(1 + $I_L1872_12, 3), -1 + $jp_S1, 0)
 1883.             ip(1 + $I_L1872_12, 10) = (ibperij%base_addr)(2 + iloc(1 + $I_L1872_12, 3), -1 + $jp_S1, 0)
 1884.             ip(1 + $I_L1872_12, 11) = (ibperij%base_addr)(iloc(1 + $I_L1872_12, 4), -2 + $jp_S1, 0)
 1885.             ip(1 + $I_L1872_12, 12) = (ibperij%base_addr)(1 + iloc(1 + $I_L1872_12, 4), -2 + $jp_S1, 0)
 1886.             jn(1 + $I_L1872_12, 1) = (jbperij%base_addr)(iloc(1 + $I_L1872_12, 1), 1 + $jp_S1, 0)
 1887.             jn(1 + $I_L1872_12, 2) = (jbperij%base_addr)(1 + iloc(1 + $I_L1872_12, 1), 1 + $jp_S1, 0)
 1888.             jn(1 + $I_L1872_12, 3) = (jbperij%base_addr)(-1 + iloc(1 + $I_L1872_12, 2), $jp_S1, 0)
 1889.             jn(1 + $I_L1872_12, 4) = (jbperij%base_addr)(iloc(1 + $I_L1872_12, 2), $jp_S1, 0)
 1890.             jn(1 + $I_L1872_12, 5) = (jbperij%base_addr)(1 + iloc(1 + $I_L1872_12, 2), $jp_S1, 0)
 1891.             jn(1 + $I_L1872_12, 6) = (jbperij%base_addr)(2 + iloc(1 + $I_L1872_12, 2), $jp_S1, 0)
 1892.             jn(1 + $I_L1872_12, 7) = (jbperij%base_addr)(-1 + iloc(1 + $I_L1872_12, 3), -1 + $jp_S1, 0)
 1893.             jn(1 + $I_L1872_12, 8) = (jbperij%base_addr)(iloc(1 + $I_L1872_12, 3), -1 + $jp_S1, 0)
 1894.             jn(1 + $I_L1872_12, 9) = (jbperij%base_addr)(1 + iloc(1 + $I_L1872_12, 3), -1 + $jp_S1, 0)
 1895.             jn(1 + $I_L1872_12, 10) = (jbperij%base_addr)(2 + iloc(1 + $I_L1872_12, 3), -1 + $jp_S1, 0)
 1896.             jn(1 + $I_L1872_12, 11) = (jbperij%base_addr)(iloc(1 + $I_L1872_12, 4), -2 + $jp_S1, 0)
 1897.             jn(1 + $I_L1872_12, 12) = (jbperij%base_addr)(1 + iloc(1 + $I_L1872_12, 4), -2 + $jp_S1, 0)
 1898.             $I_L1872_12 = 1 + $I_L1872_12
 1872.             if ( $I_L1872_12 >= ibdim ) exit
 1872.          enddo
 1872.       endif
 1899.       $Reduc_A34 = .false.
 1899.       $F_A37 = ibdim
 1899.       if ( ibdim > 0 ) then
 1899.          $I_A36 = 0
 1899.          do
 1899.             $I_A35 = 0
 1899. !dir$ ivdep
 1899.             do
 1899.                if ( ip(1 + $I_A35, 1 + $I_A36) == 0 ) then
 1899.                   $Reduc_A34 = .true.
 1899.                   goto 10
 1899.                endif
 1899.                $I_A35 = 1 + $I_A35
 1899.                if ( $I_A35 >= $F_A37 ) exit
 1899.             enddo
 1899.             $I_A36 = 1 + $I_A36
 1899.             if ( $I_A36 >= 12 ) exit
 1899.          enddo
 1899.       endif
 1899.    10 continue
 1899.       if ( $Reduc_A34 /= .false. ) then
 1900.          $Unit_temp_O0 = nfprt
 1900.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$53,  _substr(t$52,1,23), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Interpcublin2d)**', 0x800600000000L ) ) )
 1901.          $Unit_temp_O1 = nfprt
 1901.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$55,  _substr(t$54,1,47), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Interpcublin2d)**', 0x800600000000L ) ) )
 1902.           _substr(t$568,1,20) = '**(Interpcublin2d)**'
 1902.          call _stop(  _substr(t$568,1,20) )
 1902.       else
 1904.          if ( ibdim > 0 ) then
 1904.             $I_L1904_14 = 0
 1904. !dir$ ivdep
 1904.             do
 1905.                f1(1 + $I_L1904_14) = f(ip(1 + $I_L1904_14, 1), jn(1 + $I_L1904_14, 1)) + ulondp(1 + $I_L1904_14, 1) * ( f(ip(1 + $I_L1904_14, 2), jn(1 + $I_L1904_14, 2)) + -f(ip(1 + $I_L1904_14, 1), jn(1 + $I_L1904_14, 1)) )
 1907.                $s_S4 = -5.0e-1 + ulondp(1 + $I_L1904_14, 2)
 1908.                $fa_S6 = $s_S4 * ( f(ip(1 + $I_L1904_14, 5), jn(1 + $I_L1904_14, 5)) + -f(ip(1 + $I_L1904_14, 4), jn(1 + $I_L1904_14, 4)) ) + 5.0e-1 * ( f(ip(1 + $I_L1904_14, 4), jn(1 + $I_L1904_14, 4)) + f(ip(1 + $I_L1904_14, 5), jn(1 + $I_L1904_14, 5)) )
 1910.                $fb_S5 = 3.3333333333333331e-1 * $s_S4 * ( f(ip(1 + $I_L1904_14, 6), jn(1 + $I_L1904_14, 6)) + -f(ip(1 + $I_L1904_14, 3), jn(1 + $I_L1904_14, 3)) ) + 5.0e-1 * ( f(ip(1 + $I_L1904_14, 3), jn(1 + $I_L1904_14, 3)) + f(ip(1 + $I_L1904_14, 6), jn(1 + $I_L1904_14, 6)) )
 1912.                f2(1 + $I_L1904_14) = $fa_S6 + ( 1.25e-1 + -5.0e-1 * $s_S4 * $s_S4 ) * ( $fa_S6 + -$fb_S5 )
 1913.                $t_S7 = -5.0e-1 + ulondp(1 + $I_L1904_14, 3)
 1914.                $fc_S9 = $t_S7 * ( f(ip(1 + $I_L1904_14, 9), jn(1 + $I_L1904_14, 9)) + -f(ip(1 + $I_L1904_14, 8), jn(1 + $I_L1904_14, 8)) ) + 5.0e-1 * ( f(ip(1 + $I_L1904_14, 8), jn(1 + $I_L1904_14, 8)) + f(ip(1 + $I_L1904_14, 9), jn(1 + $I_L1904_14, 9)) )
 1916.                $fd_S8 = 3.3333333333333331e-1 * $t_S7 * ( f(ip(1 + $I_L1904_14, 10), jn(1 + $I_L1904_14, 10)) + -f(ip(1 + $I_L1904_14, 7), jn(1 + $I_L1904_14, 7)) ) + 5.0e-1 * ( f(ip(1 + $I_L1904_14, 7), jn(1 + $I_L1904_14, 7)) + f(ip(1 + $I_L1904_14, 10), jn(1 + $I_L1904_14, 10)) )
 1918.                f3(1 + $I_L1904_14) = $fc_S9 + ( 1.25e-1 + -5.0e-1 * $t_S7 * $t_S7 ) * ( $fc_S9 + -$fd_S8 )
 1919.                f4(1 + $I_L1904_14) = f(ip(1 + $I_L1904_14, 11), jn(1 + $I_L1904_14, 11)) + ulondp(1 + $I_L1904_14, 4) * ( f(ip(1 + $I_L1904_14, 12), jn(1 + $I_L1904_14, 12)) + -f(ip(1 + $I_L1904_14, 11), jn(1 + $I_L1904_14, 11)) )
 1921.                $I_L1904_14 = 1 + $I_L1904_14
 1904.                if ( $I_L1904_14 >= ibdim ) exit
 1904.             enddo
 1926.             $SC_cubcoef_I10 = cubcoef%dim_1%EX
 1926.             $SC_cubcoef_I11 = cubcoef%dim_1%LB
 1926.             $SC_cubcoef_I13 = cubcoef%dim_2%SM
 1926.             $SC_cubcoef_I12 = cubcoef%dim_2%EX
 1926.             $SC_cubcoef_I14 = cubcoef%dim_2%LB
 1926.             $SC_cubcoef_I16 = cubcoef%dim_3%SM
 1926.             $SC_cubcoef_I15 = cubcoef%dim_3%EX
 1926.             $SC_cubcoef_I17 = cubcoef%dim_3%LB
 1922.             $I_L1922_16 = 0
 1922. !dir$ ivdep
 1922.             do
 1923.                $j_S12 = jloc(1 + $I_L1922_16)
 1924.                $s_S11 = ulatdp(1 + $I_L1922_16)
 1925.                $t1_S15 = 1.0 + -$s_S11
 1926.                $t2_S13 = $s_S11 + (cubcoef%base_addr)(1 + $I_L1922_16, $j_S12, 2, 0)
 1927.                $t3_S16 = (cubcoef%base_addr)(1 + $I_L1922_16, $j_S12, 1, 0) + ( 1.0 + -$s_S11 )
 1928.                $t4_S14 = $s_S11 * $t2_S13
 1929.                fint(1 + $I_L1922_16) = $t3_S16 * ( $t1_S15 * ( $t2_S13 * (cubcoef%base_addr)(1 + $I_L1922_16, $j_S12, 4, 0) * f2(1 + $I_L1922_16) + $s_S11 * (cubcoef%base_addr)(1 + $I_L1922_16, $j_S12, 3, 0) * f1(1 + $I_L1922_16) ) + $t4_S14 * (cubcoef%base_addr)(1 + $I_L1922_16, $j_S12, 5, 0) * f3(1 + $I_L1922_16) ) + $t4_S14 * $t1_S15 * (cubcoef%base_addr)(1 + $I_L1922_16, $j_S12, 6, 0) * f4(1 + $I_L1922_16)
 1933.                $I_L1922_16 = 1 + $I_L1922_16
 1922.                if ( $I_L1922_16 >= ibdim ) exit
 1922.             enddo
 1922.          endif
 1836.          _free( t$301 )
 1836.       endif
 1935.       return
 1935.       end
 1935.       
 1936.       
 1936.       subroutine interpcublin3d( fint, f, again, ulondp, ulatdp, usigdp, iloc, jloc, kloc, ibdim, signal, first, ip, jn, s1, s2, s3, s4, lim )
 1936.       t$56 = ibdim
 1936.       t$57 = kmax
 1966.       t$318 = _zla( 0, ibdim )
 1936.       t$319 = _zla( 0, ibdim )
 1966.       t$320 = _zla( 0, kmax )
 1936.       t$321 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1936.       t$58 = ibmax
 1936.       t$59 = jbmax_ext
 1965.       t$322 = _zla( 0, ibmax )
 1936.       t$323 = _zla( 0, ibmax )
 1936.       t$324 = _zla( 0, kmax ) * _zla( 0, ibmax )
 1965.       t$325 = _zla( 0, jbmax_ext )
 1936.       t$326 = _zla( 0, kmax ) * _zla( 0, ibmax ) * _zla( 0, jbmax_ext )
 1936.       t$327 = _zla( 0, ibdim ) * _zla( 0, kmax )
 1936.       t$328 = 4 * _zla( 0, ibdim ) * _zla( 0, kmax )
 1936.       t$329 = 12 * _zla( 0, ibdim ) * _zla( 0, kmax )
 1976.       t$332 = 8 * _zla( 0, ibmax )
 1977.       t$333 = 8 * ( 7 + 8 * _zla( 0, ibmax ) ) / 8
 1977.       t$335 = t$333 + 8 * _zla( 0, ibmax )
 1978.       t$336 = 8 * ( 7 + t$333 + 8 * _zla( 0, ibmax ) ) / 8
 1978.       t$338 = t$336 + 8 * _zla( 0, ibmax )
 1979.       t$339 = 8 * ( 7 + t$336 + 8 * _zla( 0, ibmax ) ) / 8
 1979.       t$341 = t$339 + 8 * _zla( 0, ibmax )
 1984.       t$342 = 8 * ( 7 + t$339 + 8 * _zla( 0, ibmax ) ) / 8
 1984.       t$344 = t$342 + 8 * _zla( 0, ibmax )
 1985.       t$345 = 8 * ( 7 + t$342 + 8 * _zla( 0, ibmax ) ) / 8
 1985.       t$347 = t$345 + 8 * _zla( 0, ibmax )
 1986.       t$348 = 8 * ( 7 + t$345 + 8 * _zla( 0, ibmax ) ) / 8
 1986.       t$350 = t$348 + 8 * _zla( 0, ibmax )
 1987.       t$351 = 8 * ( 7 + t$348 + 8 * _zla( 0, ibmax ) ) / 8
 1987.       t$353 = t$351 + 8 * _zla( 0, ibmax )
 1980.       t$354 = 8 * ( 7 + t$351 + 8 * _zla( 0, ibmax ) ) / 8
 1980.       t$356 = t$354 + 8 * _zla( 0, ibmax )
 1981.       t$357 = 8 * ( 7 + t$354 + 8 * _zla( 0, ibmax ) ) / 8
 1981.       t$359 = t$357 + 8 * _zla( 0, ibmax )
 1982.       t$360 = 8 * ( 7 + t$357 + 8 * _zla( 0, ibmax ) ) / 8
 1982.       t$362 = t$360 + 8 * _zla( 0, ibmax )
 1983.       t$363 = 8 * ( 7 + t$360 + 8 * _zla( 0, ibmax ) ) / 8
 1983.       t$365 = t$363 + 8 * _zla( 0, ibmax )
 1936.       t$330 = int( _alloc( t$363 + 8 * _zla( 0, ibmax ) ), 8 )
 1976.       t$331 = t$330
 1977.       t$334 = t$333 + t$330
 1978.       t$337 = t$336 + t$330
 1979.       t$340 = t$339 + t$330
 1984.       t$343 = t$342 + t$330
 1985.       t$346 = t$345 + t$330
 1986.       t$349 = t$348 + t$330
 1987.       t$352 = t$351 + t$330
 1980.       t$355 = t$354 + t$330
 1981.       t$358 = t$357 + t$330
 1982.       t$361 = t$360 + t$330
 1983.       t$364 = t$363 + t$330
 1997.       if ( first /= .false. ) then
 1998.          if ( kmax > 0 ) then
 2013.             $SC_jbperij_I5 = jbperij%dim_1%EX
 2013.             $SC_jbperij_I6 = jbperij%dim_1%LB
 2013.             $SC_jbperij_I8 = jbperij%dim_2%SM
 2013.             $SC_jbperij_I7 = jbperij%dim_2%EX
 2013.             $SC_jbperij_I9 = jbperij%dim_2%LB
 2001.             $SC_ibperij_I0 = ibperij%dim_1%EX
 2001.             $SC_ibperij_I1 = ibperij%dim_1%LB
 2001.             $SC_ibperij_I3 = ibperij%dim_2%SM
 2001.             $SC_ibperij_I2 = ibperij%dim_2%EX
 2001.             $SC_ibperij_I4 = ibperij%dim_2%LB
 1999.             if ( ibdim > 0 ) then
 1998.                $I_L1998_106 = 0
 1998.                do
 1999.                   $I_L1999_78 = 0
 1999. !dir$ ivdep
 1999.                   do
 2000.                      jp = 1 + jmax + -jloc(1 + $I_L1999_78, 1 + $I_L1998_106)
 2001.                      ip(1 + $I_L1999_78, 1 + $I_L1998_106, 1) = (ibperij%base_addr)(iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 1), 1 + jp, 0)
 2002.                      ip(1 + $I_L1999_78, 1 + $I_L1998_106, 2) = (ibperij%base_addr)(1 + iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 1), 1 + jp, 0)
 2003.                      ip(1 + $I_L1999_78, 1 + $I_L1998_106, 3) = (ibperij%base_addr)(-1 + iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 2), jp, 0)
 2004.                      ip(1 + $I_L1999_78, 1 + $I_L1998_106, 4) = (ibperij%base_addr)(iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 2), jp, 0)
 2005.                      ip(1 + $I_L1999_78, 1 + $I_L1998_106, 5) = (ibperij%base_addr)(1 + iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 2), jp, 0)
 2006.                      ip(1 + $I_L1999_78, 1 + $I_L1998_106, 6) = (ibperij%base_addr)(2 + iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 2), jp, 0)
 2007.                      ip(1 + $I_L1999_78, 1 + $I_L1998_106, 7) = (ibperij%base_addr)(-1 + iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 3), -1 + jp, 0)
 2008.                      ip(1 + $I_L1999_78, 1 + $I_L1998_106, 8) = (ibperij%base_addr)(iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 3), -1 + jp, 0)
 2009.                      ip(1 + $I_L1999_78, 1 + $I_L1998_106, 9) = (ibperij%base_addr)(1 + iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 3), -1 + jp, 0)
 2010.                      ip(1 + $I_L1999_78, 1 + $I_L1998_106, 10) = (ibperij%base_addr)(2 + iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 3), -1 + jp, 0)
 2011.                      ip(1 + $I_L1999_78, 1 + $I_L1998_106, 11) = (ibperij%base_addr)(iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 4), -2 + jp, 0)
 2012.                      ip(1 + $I_L1999_78, 1 + $I_L1998_106, 12) = (ibperij%base_addr)(1 + iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 4), -2 + jp, 0)
 2013.                      jn(1 + $I_L1999_78, 1 + $I_L1998_106, 1) = (jbperij%base_addr)(iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 1), 1 + jp, 0)
 2014.                      jn(1 + $I_L1999_78, 1 + $I_L1998_106, 2) = (jbperij%base_addr)(1 + iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 1), 1 + jp, 0)
 2015.                      jn(1 + $I_L1999_78, 1 + $I_L1998_106, 3) = (jbperij%base_addr)(-1 + iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 2), jp, 0)
 2016.                      jn(1 + $I_L1999_78, 1 + $I_L1998_106, 4) = (jbperij%base_addr)(iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 2), jp, 0)
 2017.                      jn(1 + $I_L1999_78, 1 + $I_L1998_106, 5) = (jbperij%base_addr)(1 + iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 2), jp, 0)
 2018.                      jn(1 + $I_L1999_78, 1 + $I_L1998_106, 6) = (jbperij%base_addr)(2 + iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 2), jp, 0)
 2019.                      jn(1 + $I_L1999_78, 1 + $I_L1998_106, 7) = (jbperij%base_addr)(-1 + iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 3), -1 + jp, 0)
 2020.                      jn(1 + $I_L1999_78, 1 + $I_L1998_106, 8) = (jbperij%base_addr)(iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 3), -1 + jp, 0)
 2021.                      jn(1 + $I_L1999_78, 1 + $I_L1998_106, 9) = (jbperij%base_addr)(1 + iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 3), -1 + jp, 0)
 2022.                      jn(1 + $I_L1999_78, 1 + $I_L1998_106, 10) = (jbperij%base_addr)(2 + iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 3), -1 + jp, 0)
 2023.                      jn(1 + $I_L1999_78, 1 + $I_L1998_106, 11) = (jbperij%base_addr)(iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 4), -2 + jp, 0)
 2024.                      jn(1 + $I_L1999_78, 1 + $I_L1998_106, 12) = (jbperij%base_addr)(1 + iloc(1 + $I_L1999_78, 1 + $I_L1998_106, 4), -2 + jp, 0)
 2025.                      $I_L1999_78 = 1 + $I_L1999_78
 1999.                      if ( $I_L1999_78 >= ibdim ) exit
 1999.                   enddo
 2026.                   $I_L1998_106 = 1 + $I_L1998_106
 2025.                   if ( $I_L1998_106 >= kmax ) exit
 2025.                enddo
 2025.             endif
 2025.          endif
 2027.          $Reduc_A35 = .false.
 2027.          $F_A39 = kmax
 2027.          $F_A40 = ibdim
 2027.          if ( and( -$F_A40, -$F_A39 ) < 0 ) then
 2027.             $I_L2027_126 = 0
 2027.             do
 2027.                $I_L2027_114 = 0
 2027.                do
 2027.                   $I_L2027_94 = 0
 2027. !dir$ ivdep
 2027.                   do
 2027.                      if ( ip(1 + $I_L2027_94, 1 + $I_L2027_114, 1 + $I_L2027_126) == 0 ) then
 2027.                         $Reduc_A35 = .true.
 2027.                         goto 10
 2027.                      endif
 2027.                      $I_L2027_94 = 1 + $I_L2027_94
 2027.                      if ( $I_L2027_94 >= $F_A40 ) exit
 2027.                   enddo
 2027.                   $I_L2027_114 = 1 + $I_L2027_114
 2027.                   if ( $I_L2027_114 >= $F_A39 ) exit
 2027.                enddo
 2027.                $I_L2027_126 = 1 + $I_L2027_126
 2027.                if ( $I_L2027_126 >= 12 ) exit
 2027.             enddo
 2027.          endif
 2027.    10    continue
 2027.          if ( $Reduc_A35 /= .false. ) then
 2028.             _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' processor ', 0x800600000000L ), _iotype( myid, 0x2000200000000L ), _iotype( 'will have to stop ', 0x800600000000L ) ) )
 2029.             if ( ibdim > 0 ) then
 2029.                $I_L2029_124 = 0
 2029.                do
 2030.                   if ( kmax > 0 ) then
 2030.                      $I_L2030_112 = 0
 2030.                      do
 2031.                         $Reduc_A41 = .false.
 2031.                         $I_L2031_96 = 0
 2031. !dir$ ivdep
 2031.                         do
 2031.                            if ( ip(1 + $I_L2029_124, 1 + $I_L2030_112, 1 + $I_L2031_96) == 0 ) then
 2031.                               $Reduc_A41 = .true.
 2031.                               goto 20
 2031.                            endif
 2031.                            $I_L2031_96 = 1 + $I_L2031_96
 2031.                            if ( $I_L2031_96 >= 12 ) exit
 2031.                         enddo
 2031.    20                   continue
 2031.                         if ( $Reduc_A41 /= .false. ) then
 2033.                            if ( ( ( 1 + $I_L2029_124 ) <= 0 .or. ( 1 + $I_L2029_124 ) > t$56 ) /= .false. ) then
 2033.                                _substr(t$588,1,19) = 'SemiLagrangian.f90'
 2033.                                _substr(t$589,1,5) = 'JLOC'
 2033.                               t$590 = 1 + $I_L2029_124
 2033.                               call _bounds_error(  _substr(t$588,1,19), 2033,  _substr(t$589,1,5), 1, 1, t$56, t$590, t$587 )
 2033.                            endif
 2033.                            if ( ( ( 1 + $I_L2030_112 ) <= 0 .or. ( 1 + $I_L2030_112 ) > t$57 ) /= .false. ) then
 2033.                                _substr(t$592,1,19) = 'SemiLagrangian.f90'
 2033.                                _substr(t$593,1,5) = 'JLOC'
 2033.                               t$594 = 1 + $I_L2030_112
 2033.                               call _bounds_error(  _substr(t$592,1,19), 2033,  _substr(t$593,1,5), 2, 1, t$57, t$594, t$591 )
 2033.                            endif
 2033.                            if ( ( ( 1 + $I_L2029_124 ) <= 0 .or. ( 1 + $I_L2029_124 ) > t$56 ) /= .false. ) then
 2033.                                _substr(t$596,1,19) = 'SemiLagrangian.f90'
 2033.                                _substr(t$597,1,5) = 'ILOC'
 2033.                               t$598 = 1 + $I_L2029_124
 2033.                               call _bounds_error(  _substr(t$596,1,19), 2033,  _substr(t$597,1,5), 1, 1, t$56, t$598, t$595 )
 2033.                            endif
 2033.                            if ( ( ( 1 + $I_L2030_112 ) <= 0 .or. ( 1 + $I_L2030_112 ) > t$57 ) /= .false. ) then
 2033.                                _substr(t$600,1,19) = 'SemiLagrangian.f90'
 2033.                                _substr(t$601,1,5) = 'ILOC'
 2033.                               t$602 = 1 + $I_L2030_112
 2033.                               call _bounds_error(  _substr(t$600,1,19), 2033,  _substr(t$601,1,5), 2, 1, t$57, t$602, t$599 )
 2033.                            endif
 2032.                            $_IOitem_P2(0) = ( 1 + $I_L2029_124 )
 2032.                            $_IOitem_P2(1) = ( 1 + $I_L2030_112 )
 2032.                            $_IOitem_P3(0) = jloc(1 + $I_L2029_124, 1 + $I_L2030_112)
 2032.                            $_IOitem_P3(1) = jp
 2032.                            $IOitem_O4 = iloc(1 + $I_L2029_124, 1 + $I_L2030_112, 2)
 2032.                            _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'i,k ', 0x800600000000L ), _iotype( (&)$_IOitem_P2(:( 0, 1, 1 )), 0x2000200000000L ), _iotype( ' jloc, jp ', 0x800600000000L ), _iotype( (&)$_IOitem_P3(:( 0, 1, 1 )), 0x2000200000000L ), _iotype( 'iloc', 0x800600000000L ), _iotype( $IOitem_O4, 0x2000200000000L ) ) )
 2034.                            if ( ( ( 1 + $I_L2029_124 ) <= 0 .or. ( 1 + $I_L2029_124 ) > t$56 ) /= .false. ) then
 2034.                                _substr(t$604,1,19) = 'SemiLagrangian.f90'
 2034.                                _substr(t$605,1,5) = 'ILOC'
 2034.                               t$590 = 1 + $I_L2029_124
 2034.                               call _bounds_error(  _substr(t$604,1,19), 2034,  _substr(t$605,1,5), 1, 1, t$56, t$590, t$603 )
 2034.                            endif
 2034.                            if ( ( ( 1 + $I_L2030_112 ) <= 0 .or. ( 1 + $I_L2030_112 ) > t$57 ) /= .false. ) then
 2034.                                _substr(t$607,1,19) = 'SemiLagrangian.f90'
 2034.                                _substr(t$608,1,5) = 'ILOC'
 2034.                               t$594 = 1 + $I_L2030_112
 2034.                               call _bounds_error(  _substr(t$607,1,19), 2034,  _substr(t$608,1,5), 2, 1, t$57, t$594, t$606 )
 2034.                            endif
 2034.                            if ( ( ( 1 + $I_L2029_124 ) <= 0 .or. ( 1 + $I_L2029_124 ) > t$56 ) /= .false. ) then
 2034.                                _substr(t$610,1,19) = 'SemiLagrangian.f90'
 2034.                                _substr(t$611,1,5) = 'ILOC'
 2034.                               t$598 = 1 + $I_L2029_124
 2034.                               call _bounds_error(  _substr(t$610,1,19), 2034,  _substr(t$611,1,5), 1, 1, t$56, t$598, t$609 )
 2034.                            endif
 2034.                            if ( ( ( 1 + $I_L2030_112 ) <= 0 .or. ( 1 + $I_L2030_112 ) > t$57 ) /= .false. ) then
 2034.                                _substr(t$613,1,19) = 'SemiLagrangian.f90'
 2034.                                _substr(t$614,1,5) = 'ILOC'
 2034.                               t$602 = 1 + $I_L2030_112
 2034.                               call _bounds_error(  _substr(t$613,1,19), 2034,  _substr(t$614,1,5), 2, 1, t$57, t$602, t$612 )
 2034.                            endif
 2035.                            if ( ( ( 1 + $I_L2029_124 ) <= 0 .or. ( 1 + $I_L2029_124 ) > t$56 ) /= .false. ) then
 2035.                                _substr(t$616,1,19) = 'SemiLagrangian.f90'
 2035.                                _substr(t$617,1,5) = 'ILOC'
 2035.                               t$618 = 1 + $I_L2029_124
 2035.                               call _bounds_error(  _substr(t$616,1,19), 2035,  _substr(t$617,1,5), 1, 1, t$56, t$618, t$615 )
 2035.                            endif
 2035.                            if ( ( ( 1 + $I_L2030_112 ) <= 0 .or. ( 1 + $I_L2030_112 ) > t$57 ) /= .false. ) then
 2035.                                _substr(t$620,1,19) = 'SemiLagrangian.f90'
 2035.                                _substr(t$621,1,5) = 'ILOC'
 2035.                               t$622 = 1 + $I_L2030_112
 2035.                               call _bounds_error(  _substr(t$620,1,19), 2035,  _substr(t$621,1,5), 2, 1, t$57, t$622, t$619 )
 2035.                            endif
 2035.                            if ( ( ( 1 + $I_L2029_124 ) <= 0 .or. ( 1 + $I_L2029_124 ) > t$56 ) /= .false. ) then
 2035.                                _substr(t$624,1,19) = 'SemiLagrangian.f90'
 2035.                                _substr(t$625,1,5) = 'ILOC'
 2035.                               t$626 = 1 + $I_L2029_124
 2035.                               call _bounds_error(  _substr(t$624,1,19), 2035,  _substr(t$625,1,5), 1, 1, t$56, t$626, t$623 )
 2035.                            endif
 2035.                            if ( ( ( 1 + $I_L2030_112 ) <= 0 .or. ( 1 + $I_L2030_112 ) > t$57 ) /= .false. ) then
 2035.                                _substr(t$628,1,19) = 'SemiLagrangian.f90'
 2035.                                _substr(t$629,1,5) = 'ILOC'
 2035.                               t$630 = 1 + $I_L2030_112
 2035.                               call _bounds_error(  _substr(t$628,1,19), 2035,  _substr(t$629,1,5), 2, 1, t$57, t$630, t$627 )
 2035.                            endif
 2034.                            $_IOitem_P4(0) = iloc(1 + $I_L2029_124, 1 + $I_L2030_112, 1)
 2034.                            $_IOitem_P4(1) = $IOitem_O4
 2034.                            $_IOitem_P4(2) = iloc(1 + $I_L2029_124, 1 + $I_L2030_112, 3)
 2034.                            $_IOitem_P4(3) = iloc(1 + $I_L2029_124, 1 + $I_L2030_112, 4)
 2034.                            _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'ilocs ', 0x800600000000L ), _iotype( (&)$_IOitem_P4(:( 0, 3, 1 )), 0x2000200000000L ) ) )
 2034.                            goto 30
 2034.                         endif
 2038.                         $I_L2030_112 = 1 + $I_L2030_112
 2037.                         if ( $I_L2030_112 >= kmax ) exit
 2037.                      enddo
 2037.                   endif
 2037.    30             continue
 2039.                   $I_L2029_124 = 1 + $I_L2029_124
 2038.                   if ( $I_L2029_124 >= ibdim ) exit
 2038.                enddo
 2038.             endif
 2040.             $Unit_temp_O2 = nfprt
 2040.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, t$61,  _substr(t$60,1,23), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Interpcublin3d)**', 0x800600000000L ) ) )
 2041.             $Unit_temp_O3 = nfprt
 2041.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, t$63,  _substr(t$62,1,47), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Interpcublin3d)**', 0x800600000000L ) ) )
 2042.              _substr(t$631,1,20) = '**(Interpcublin3d)**'
 2042.             call _stop(  _substr(t$631,1,20) )
 2042.          else
 2042.             goto 40
 2042.          endif
 2042.       else
 2042.    40    continue
 2045.          if ( again == .false. ) then
 2046.             $F_A43 = kmax
 2046.             $F_A44 = ibdim
 2046.             if ( and( -$F_A44, -$F_A43 ) < 0 ) then
 2046.                $I_L2046_116 = 0
 2046.                do
 2046.                   $I_L2046_98 = 0
 2046. !dir$ ivdep
 2046.                   do
 2046.                      s1(1 + $I_L2046_98, 1 + $I_L2046_116) = 1.0
 2046.                      $I_L2046_98 = 1 + $I_L2046_98
 2046.                      if ( $I_L2046_98 >= $F_A44 ) exit
 2046.                   enddo
 2046.                   $I_L2046_116 = 1 + $I_L2046_116
 2046.                   if ( $I_L2046_116 >= $F_A43 ) exit
 2046.                enddo
 2046.             endif
 2047.             $F_A45 = kmax
 2047.             $F_A46 = ibdim
 2047.             if ( and( -$F_A46, -$F_A45 ) < 0 ) then
 2047.                $I_L2047_118 = 0
 2047.                do
 2047.                   $I_L2047_100 = 0
 2047. !dir$ ivdep
 2047.                   do
 2047.                      s2(1 + $I_L2047_100, 1 + $I_L2047_118) = 1.0
 2047.                      $I_L2047_100 = 1 + $I_L2047_100
 2047.                      if ( $I_L2047_100 >= $F_A46 ) exit
 2047.                   enddo
 2047.                   $I_L2047_118 = 1 + $I_L2047_118
 2047.                   if ( $I_L2047_118 >= $F_A45 ) exit
 2047.                enddo
 2047.             endif
 2048.             $F_A47 = kmax
 2048.             $F_A48 = ibdim
 2048.             if ( and( -$F_A48, -$F_A47 ) < 0 ) then
 2048.                $I_L2048_120 = 0
 2048.                do
 2048.                   $I_L2048_102 = 0
 2048. !dir$ ivdep
 2048.                   do
 2048.                      s3(1 + $I_L2048_102, 1 + $I_L2048_120) = 1.0
 2048.                      $I_L2048_102 = 1 + $I_L2048_102
 2048.                      if ( $I_L2048_102 >= $F_A48 ) exit
 2048.                   enddo
 2048.                   $I_L2048_120 = 1 + $I_L2048_120
 2048.                   if ( $I_L2048_120 >= $F_A47 ) exit
 2048.                enddo
 2048.             endif
 2049.             $F_A49 = kmax
 2049.             $F_A50 = ibdim
 2049.             if ( and( -$F_A50, -$F_A49 ) < 0 ) then
 2049.                $I_L2049_122 = 0
 2049.                do
 2049.                   $I_L2049_104 = 0
 2049. !dir$ ivdep
 2049.                   do
 2049.                      s4(1 + $I_L2049_104, 1 + $I_L2049_122) = 1.0
 2049.                      $I_L2049_104 = 1 + $I_L2049_104
 2049.                      if ( $I_L2049_104 >= $F_A50 ) exit
 2049.                   enddo
 2049.                   $I_L2049_122 = 1 + $I_L2049_122
 2049.                   if ( $I_L2049_122 >= $F_A49 ) exit
 2049.                enddo
 2049.             endif
 2050.             if ( kmax > 0 ) then
 2051.                if ( ibdim > 0 ) then
 2050.                   $I_L2050_108 = 0
 2050.                   do
 2051.                      $I_L2051_80 = 0
 2051. !dir$ ivdep
 2051.                      do
 2052.                         $jp_S6 = 1 + jmax + -jloc(1 + $I_L2051_80, 1 + $I_L2050_108)
 2053.                         if ( jmax + -$jp_S6 == -1 ) then
 2054.                            s1(1 + $I_L2051_80, 1 + $I_L2050_108) = signal
 2055.                            s2(1 + $I_L2051_80, 1 + $I_L2050_108) = signal
 2055.                         endif
 2057.                         if ( jmax + -$jp_S6 == 0 ) then
 2058.                            s1(1 + $I_L2051_80, 1 + $I_L2050_108) = signal
 2058.                         endif
 2060.                         if ( $jp_S6 == 1 ) then
 2061.                            s3(1 + $I_L2051_80, 1 + $I_L2050_108) = signal
 2062.                            s4(1 + $I_L2051_80, 1 + $I_L2050_108) = signal
 2062.                         endif
 2064.                         if ( $jp_S6 == 2 ) then
 2065.                            s4(1 + $I_L2051_80, 1 + $I_L2050_108) = signal
 2065.                         endif
 2067.                         $I_L2051_80 = 1 + $I_L2051_80
 2066.                         if ( $I_L2051_80 >= ibdim ) exit
 2066.                      enddo
 2068.                      $I_L2050_108 = 1 + $I_L2050_108
 2067.                      if ( $I_L2050_108 >= kmax ) exit
 2067.                   enddo
 2067.                endif
 2067.             endif
 2067.          endif
 2070.          if ( kmax > 0 ) then
 2147.             $SC_cubcoefv_I18 = cubcoefv%dim_1%EX
 2147.             $SC_cubcoefv_I19 = cubcoefv%dim_1%LB
 2147.             $SC_cubcoefv_I21 = cubcoefv%dim_2%SM
 2147.             $SC_cubcoefv_I20 = cubcoefv%dim_2%EX
 2147.             $SC_cubcoefv_I22 = cubcoefv%dim_2%LB
 2147.             $SC_cubcoefv_I24 = cubcoefv%dim_3%SM
 2147.             $SC_cubcoefv_I23 = cubcoefv%dim_3%EX
 2147.             $SC_cubcoefv_I25 = cubcoefv%dim_3%LB
 2119.             $SC_cubcoef_I10 = cubcoef%dim_1%EX
 2119.             $SC_cubcoef_I11 = cubcoef%dim_1%LB
 2119.             $SC_cubcoef_I13 = cubcoef%dim_2%SM
 2119.             $SC_cubcoef_I12 = cubcoef%dim_2%EX
 2119.             $SC_cubcoef_I14 = cubcoef%dim_2%LB
 2119.             $SC_cubcoef_I16 = cubcoef%dim_3%SM
 2119.             $SC_cubcoef_I15 = cubcoef%dim_3%EX
 2119.             $SC_cubcoef_I17 = cubcoef%dim_3%LB
 2070.             $I_L2070_110 = 0
 2070.             do
 2071.                if ( ibdim > 0 ) then
 2071.                   $I_L2071_82 = 0
 2071. !dir$ ivdep
 2071.                   do
 2072.                      $k_S9 = kloc(1 + $I_L2071_82, 1 + $I_L2070_110)
 2074.                      f1(1 + $I_L2071_82) = s1(1 + $I_L2071_82, 1 + $I_L2070_110) * ( f(ip(1 + $I_L2071_82, 1 + $I_L2070_110, 1), $k_S9, jn(1 + $I_L2071_82, 1 + $I_L2070_110, 1)) + ulondp(1 + $I_L2071_82, 1 + $I_L2070_110, 1) * ( f(ip(1 + $I_L2071_82, 1 + $I_L2070_110, 2), $k_S9, jn(1 + $I_L2071_82, 1 + $I_L2070_110, 2)) + -f(ip(1 + $I_L2071_82, 1 + $I_L2070_110, 1), $k_S9, jn(1 + $I_L2071_82, 1 + $I_L2070_110, 1)) ) )
 2076.                      g1(1 + $I_L2071_82) = s1(1 + $I_L2071_82, 1 + $I_L2070_110) * ( f(ip(1 + $I_L2071_82, 1 + $I_L2070_110, 1), 1 + $k_S9, jn(1 + $I_L2071_82, 1 + $I_L2070_110, 1)) + ulondp(1 + $I_L2071_82, 1 + $I_L2070_110, 1) * ( f(ip(1 + $I_L2071_82, 1 + $I_L2070_110, 2), 1 + $k_S9, jn(1 + $I_L2071_82, 1 + $I_L2070_110, 2)) + -f(ip(1 + $I_L2071_82, 1 + $I_L2070_110, 1), 1 + $k_S9, jn(1 + $I_L2071_82, 1 + $I_L2070_110, 1)) ) )
 2078.                      f4(1 + $I_L2071_82) = s4(1 + $I_L2071_82, 1 + $I_L2070_110) * ( f(ip(1 + $I_L2071_82, 1 + $I_L2070_110, 11), $k_S9, jn(1 + $I_L2071_82, 1 + $I_L2070_110, 11)) + ulondp(1 + $I_L2071_82, 1 + $I_L2070_110, 4) * ( f(ip(1 + $I_L2071_82, 1 + $I_L2070_110, 12), $k_S9, jn(1 + $I_L2071_82, 1 + $I_L2070_110, 12)) + -f(ip(1 + $I_L2071_82, 1 + $I_L2070_110, 11), $k_S9, jn(1 + $I_L2071_82, 1 + $I_L2070_110, 11)) ) )
 2080.                      g4(1 + $I_L2071_82) = s4(1 + $I_L2071_82, 1 + $I_L2070_110) * ( f(ip(1 + $I_L2071_82, 1 + $I_L2070_110, 11), 1 + $k_S9, jn(1 + $I_L2071_82, 1 + $I_L2070_110, 11)) + ulondp(1 + $I_L2071_82, 1 + $I_L2070_110, 4) * ( f(ip(1 + $I_L2071_82, 1 + $I_L2070_110, 12), 1 + $k_S9, jn(1 + $I_L2071_82, 1 + $I_L2070_110, 12)) + -f(ip(1 + $I_L2071_82, 1 + $I_L2070_110, 11), 1 + $k_S9, jn(1 + $I_L2071_82, 1 + $I_L2070_110, 11)) ) )
 2082.                      $I_L2071_82 = 1 + $I_L2071_82
 2071.                      if ( $I_L2071_82 >= ibdim ) exit
 2071.                   enddo
 2083.                   $I_L2083_84 = 0
 2083. !dir$ ivdep
 2083.                   do
 2084.                      $k_S11 = kloc(1 + $I_L2083_84, 1 + $I_L2070_110)
 2086.                      $s_S12 = -5.0e-1 + ulondp(1 + $I_L2083_84, 1 + $I_L2070_110, 2)
 2088.                      $fa_S14 = 5.0e-1 * ( f(ip(1 + $I_L2083_84, 1 + $I_L2070_110, 5), $k_S11, jn(1 + $I_L2083_84, 1 + $I_L2070_110, 5)) + f(ip(1 + $I_L2083_84, 1 + $I_L2070_110, 4), $k_S11, jn(1 + $I_L2083_84, 1 + $I_L2070_110, 4)) ) + $s_S12 * ( f(ip(1 + $I_L2083_84, 1 + $I_L2070_110, 5), $k_S11, jn(1 + $I_L2083_84, 1 + $I_L2070_110, 5)) + -f(ip(1 + $I_L2083_84, 1 + $I_L2070_110, 4), $k_S11, jn(1 + $I_L2083_84, 1 + $I_L2070_110, 4)) )
 2090.                      $fb_S13 = 5.0e-1 * ( f(ip(1 + $I_L2083_84, 1 + $I_L2070_110, 6), $k_S11, jn(1 + $I_L2083_84, 1 + $I_L2070_110, 6)) + f(ip(1 + $I_L2083_84, 1 + $I_L2070_110, 3), $k_S11, jn(1 + $I_L2083_84, 1 + $I_L2070_110, 3)) ) + 3.3333333333333331e-1 * $s_S12 * ( f(ip(1 + $I_L2083_84, 1 + $I_L2070_110, 6), $k_S11, jn(1 + $I_L2083_84, 1 + $I_L2070_110, 6)) + -f(ip(1 + $I_L2083_84, 1 + $I_L2070_110, 3), $k_S11, jn(1 + $I_L2083_84, 1 + $I_L2070_110, 3)) )
 2092.                      f2(1 + $I_L2083_84) = s2(1 + $I_L2083_84, 1 + $I_L2070_110) * ( $fa_S14 + ( 1.25e-1 + -5.0e-1 * $s_S12 * $s_S12 ) * ( $fa_S14 + -$fb_S13 ) )
 2093.                      $fa1_S16 = 5.0e-1 * ( f(ip(1 + $I_L2083_84, 1 + $I_L2070_110, 5), 1 + $k_S11, jn(1 + $I_L2083_84, 1 + $I_L2070_110, 5)) + f(ip(1 + $I_L2083_84, 1 + $I_L2070_110, 4), 1 + $k_S11, jn(1 + $I_L2083_84, 1 + $I_L2070_110, 4)) ) + $s_S12 * ( f(ip(1 + $I_L2083_84, 1 + $I_L2070_110, 5), 1 + $k_S11, jn(1 + $I_L2083_84, 1 + $I_L2070_110, 5)) + -f(ip(1 + $I_L2083_84, 1 + $I_L2070_110, 4), 1 + $k_S11, jn(1 + $I_L2083_84, 1 + $I_L2070_110, 4)) )
 2095.                      $fb1_S15 = 5.0e-1 * ( f(ip(1 + $I_L2083_84, 1 + $I_L2070_110, 6), 1 + $k_S11, jn(1 + $I_L2083_84, 1 + $I_L2070_110, 6)) + f(ip(1 + $I_L2083_84, 1 + $I_L2070_110, 3), 1 + $k_S11, jn(1 + $I_L2083_84, 1 + $I_L2070_110, 3)) ) + 3.3333333333333331e-1 * $s_S12 * ( f(ip(1 + $I_L2083_84, 1 + $I_L2070_110, 6), 1 + $k_S11, jn(1 + $I_L2083_84, 1 + $I_L2070_110, 6)) + -f(ip(1 + $I_L2083_84, 1 + $I_L2070_110, 3), 1 + $k_S11, jn(1 + $I_L2083_84, 1 + $I_L2070_110, 3)) )
 2097.                      g2(1 + $I_L2083_84) = s2(1 + $I_L2083_84, 1 + $I_L2070_110) * ( $fa1_S16 + ( 1.25e-1 + -5.0e-1 * $s_S12 * $s_S12 ) * ( $fa1_S16 + -$fb1_S15 ) )
 2098.                      $I_L2083_84 = 1 + $I_L2083_84
 2083.                      if ( $I_L2083_84 >= ibdim ) exit
 2083.                   enddo
 2099.                   $I_L2099_86 = 0
 2099. !dir$ ivdep
 2099.                   do
 2100.                      $k_S18 = kloc(1 + $I_L2099_86, 1 + $I_L2070_110)
 2102.                      $t_S19 = -5.0e-1 + ulondp(1 + $I_L2099_86, 1 + $I_L2070_110, 3)
 2104.                      $fc_S21 = 5.0e-1 * ( f(ip(1 + $I_L2099_86, 1 + $I_L2070_110, 9), $k_S18, jn(1 + $I_L2099_86, 1 + $I_L2070_110, 9)) + f(ip(1 + $I_L2099_86, 1 + $I_L2070_110, 8), $k_S18, jn(1 + $I_L2099_86, 1 + $I_L2070_110, 8)) ) + $t_S19 * ( f(ip(1 + $I_L2099_86, 1 + $I_L2070_110, 9), $k_S18, jn(1 + $I_L2099_86, 1 + $I_L2070_110, 9)) + -f(ip(1 + $I_L2099_86, 1 + $I_L2070_110, 8), $k_S18, jn(1 + $I_L2099_86, 1 + $I_L2070_110, 8)) )
 2106.                      $fd_S20 = 5.0e-1 * ( f(ip(1 + $I_L2099_86, 1 + $I_L2070_110, 10), $k_S18, jn(1 + $I_L2099_86, 1 + $I_L2070_110, 10)) + f(ip(1 + $I_L2099_86, 1 + $I_L2070_110, 7), $k_S18, jn(1 + $I_L2099_86, 1 + $I_L2070_110, 7)) ) + 3.3333333333333331e-1 * $t_S19 * ( f(ip(1 + $I_L2099_86, 1 + $I_L2070_110, 10), $k_S18, jn(1 + $I_L2099_86, 1 + $I_L2070_110, 10)) + -f(ip(1 + $I_L2099_86, 1 + $I_L2070_110, 7), $k_S18, jn(1 + $I_L2099_86, 1 + $I_L2070_110, 7)) )
 2108.                      f3(1 + $I_L2099_86) = s3(1 + $I_L2099_86, 1 + $I_L2070_110) * ( $fc_S21 + ( 1.25e-1 + -5.0e-1 * $t_S19 * $t_S19 ) * ( $fc_S21 + -$fd_S20 ) )
 2109.                      $fc1_S23 = 5.0e-1 * ( f(ip(1 + $I_L2099_86, 1 + $I_L2070_110, 9), 1 + $k_S18, jn(1 + $I_L2099_86, 1 + $I_L2070_110, 9)) + f(ip(1 + $I_L2099_86, 1 + $I_L2070_110, 8), 1 + $k_S18, jn(1 + $I_L2099_86, 1 + $I_L2070_110, 8)) ) + $t_S19 * ( f(ip(1 + $I_L2099_86, 1 + $I_L2070_110, 9), 1 + $k_S18, jn(1 + $I_L2099_86, 1 + $I_L2070_110, 9)) + -f(ip(1 + $I_L2099_86, 1 + $I_L2070_110, 8), 1 + $k_S18, jn(1 + $I_L2099_86, 1 + $I_L2070_110, 8)) )
 2111.                      $fd1_S22 = 5.0e-1 * ( f(ip(1 + $I_L2099_86, 1 + $I_L2070_110, 10), 1 + $k_S18, jn(1 + $I_L2099_86, 1 + $I_L2070_110, 10)) + f(ip(1 + $I_L2099_86, 1 + $I_L2070_110, 7), 1 + $k_S18, jn(1 + $I_L2099_86, 1 + $I_L2070_110, 7)) ) + 3.3333333333333331e-1 * $t_S19 * ( f(ip(1 + $I_L2099_86, 1 + $I_L2070_110, 10), 1 + $k_S18, jn(1 + $I_L2099_86, 1 + $I_L2070_110, 10)) + -f(ip(1 + $I_L2099_86, 1 + $I_L2070_110, 7), 1 + $k_S18, jn(1 + $I_L2099_86, 1 + $I_L2070_110, 7)) )
 2113.                      g3(1 + $I_L2099_86) = s3(1 + $I_L2099_86, 1 + $I_L2070_110) * ( $fc1_S23 + ( 1.25e-1 + -5.0e-1 * $t_S19 * $t_S19 ) * ( $fc1_S23 + -$fd1_S22 ) )
 2114.                      $I_L2099_86 = 1 + $I_L2099_86
 2099.                      if ( $I_L2099_86 >= ibdim ) exit
 2099.                   enddo
 2115.                   $I_L2115_88 = 0
 2115. !dir$ ivdep
 2115.                   do
 2116.                      $j_S26 = jloc(1 + $I_L2115_88, 1 + $I_L2070_110)
 2117.                      $t0_S25 = ulatdp(1 + $I_L2115_88, 1 + $I_L2070_110)
 2118.                      $t1_S29 = 1.0 + -$t0_S25
 2119.                      $t2_S27 = $t0_S25 + (cubcoef%base_addr)(1 + $I_L2115_88, $j_S26, 2, 0)
 2120.                      $t3_S30 = (cubcoef%base_addr)(1 + $I_L2115_88, $j_S26, 1, 0) + ( 1.0 + -$t0_S25 )
 2121.                      $t4_S28 = $t0_S25 * $t2_S27
 2122.                      fint2(1 + $I_L2115_88) = $t4_S28 * $t1_S29 * f4(1 + $I_L2115_88) * (cubcoef%base_addr)(1 + $I_L2115_88, $j_S26, 6, 0) + $t3_S30 * ( $t4_S28 * f3(1 + $I_L2115_88) * (cubcoef%base_addr)(1 + $I_L2115_88, $j_S26, 5, 0) + $t1_S29 * ( $t0_S25 * f1(1 + $I_L2115_88) * (cubcoef%base_addr)(1 + $I_L2115_88, $j_S26, 3, 0) + $t2_S27 * f2(1 + $I_L2115_88) * (cubcoef%base_addr)(1 + $I_L2115_88, $j_S26, 4, 0) ) )
 2126.                      fint3(1 + $I_L2115_88) = $t4_S28 * $t1_S29 * (cubcoef%base_addr)(1 + $I_L2115_88, $j_S26, 6, 0) * g4(1 + $I_L2115_88) + $t3_S30 * ( $t4_S28 * (cubcoef%base_addr)(1 + $I_L2115_88, $j_S26, 5, 0) * g3(1 + $I_L2115_88) + $t1_S29 * ( $t0_S25 * (cubcoef%base_addr)(1 + $I_L2115_88, $j_S26, 3, 0) * g1(1 + $I_L2115_88) + $t2_S27 * (cubcoef%base_addr)(1 + $I_L2115_88, $j_S26, 4, 0) * g2(1 + $I_L2115_88) ) )
 2130.                      $I_L2115_88 = 1 + $I_L2115_88
 2115.                      if ( $I_L2115_88 >= ibdim ) exit
 2115.                   enddo
 2131.                   $I_L2131_90 = 0
 2131. !dir$ ivdep
 2131.                   do
 2132.                      if ( kloc(1 + $I_L2131_90, 1 + $I_L2070_110) == 1 ) then
 2131.                         goto 50
 2132.                      else if ( kmax + -kloc(1 + $I_L2131_90, 1 + $I_L2070_110) /= 1 ) then
 2133.                         $k_S32 = -1 + kloc(1 + $I_L2131_90, 1 + $I_L2070_110)
 2134.                         $k1_S33 = 2 + kloc(1 + $I_L2131_90, 1 + $I_L2070_110)
 2135.                         $fb_S34 = s2(1 + $I_L2131_90, 1 + $I_L2070_110) * ( f(ip(1 + $I_L2131_90, 1 + $I_L2070_110, 4), $k_S32, jn(1 + $I_L2131_90, 1 + $I_L2070_110, 4)) + ulondp(1 + $I_L2131_90, 1 + $I_L2070_110, 2) * ( f(ip(1 + $I_L2131_90, 1 + $I_L2070_110, 5), $k_S32, jn(1 + $I_L2131_90, 1 + $I_L2070_110, 5)) + -f(ip(1 + $I_L2131_90, 1 + $I_L2070_110, 4), $k_S32, jn(1 + $I_L2131_90, 1 + $I_L2070_110, 4)) ) )
 2137.                         $fc_S35 = s3(1 + $I_L2131_90, 1 + $I_L2070_110) * ( f(ip(1 + $I_L2131_90, 1 + $I_L2070_110, 8), $k_S32, jn(1 + $I_L2131_90, 1 + $I_L2070_110, 8)) + ulondp(1 + $I_L2131_90, 1 + $I_L2070_110, 3) * ( f(ip(1 + $I_L2131_90, 1 + $I_L2070_110, 9), $k_S32, jn(1 + $I_L2131_90, 1 + $I_L2070_110, 9)) + -f(ip(1 + $I_L2131_90, 1 + $I_L2070_110, 8), $k_S32, jn(1 + $I_L2131_90, 1 + $I_L2070_110, 8)) ) )
 2139.                         $fa_S36 = s2(1 + $I_L2131_90, 1 + $I_L2070_110) * ( f(ip(1 + $I_L2131_90, 1 + $I_L2070_110, 4), $k1_S33, jn(1 + $I_L2131_90, 1 + $I_L2070_110, 4)) + ulondp(1 + $I_L2131_90, 1 + $I_L2070_110, 2) * ( f(ip(1 + $I_L2131_90, 1 + $I_L2070_110, 5), $k1_S33, jn(1 + $I_L2131_90, 1 + $I_L2070_110, 5)) + -f(ip(1 + $I_L2131_90, 1 + $I_L2070_110, 4), $k1_S33, jn(1 + $I_L2131_90, 1 + $I_L2070_110, 4)) ) )
 2141.                         $fd_S37 = s3(1 + $I_L2131_90, 1 + $I_L2070_110) * ( f(ip(1 + $I_L2131_90, 1 + $I_L2070_110, 8), $k1_S33, jn(1 + $I_L2131_90, 1 + $I_L2070_110, 8)) + ulondp(1 + $I_L2131_90, 1 + $I_L2070_110, 3) * ( f(ip(1 + $I_L2131_90, 1 + $I_L2070_110, 9), $k1_S33, jn(1 + $I_L2131_90, 1 + $I_L2070_110, 9)) + -f(ip(1 + $I_L2131_90, 1 + $I_L2070_110, 8), $k1_S33, jn(1 + $I_L2131_90, 1 + $I_L2070_110, 8)) ) )
 2143.                         $fint1_WR0_R0 = $fb_S34 + ulatdp(1 + $I_L2131_90, 1 + $I_L2070_110) * ( $fc_S35 + -$fb_S34 )
 2144.                         $fint4_WR0_R1 = $fa_S36 + ulatdp(1 + $I_L2131_90, 1 + $I_L2070_110) * ( $fd_S37 + -$fa_S36 )
 2145.                         $s_S38 = usigdp(1 + $I_L2131_90, 1 + $I_L2070_110)
 2146.                         $t1_S40 = 1.0 + -$s_S38
 2147.                         $t2_S39 = $s_S38 + (cubcoefv%base_addr)(1 + $I_L2131_90, kloc(1 + $I_L2131_90, 1 + $I_L2070_110), 2, 0)
 2148.                         $t3_S42 = (cubcoefv%base_addr)(1 + $I_L2131_90, kloc(1 + $I_L2131_90, 1 + $I_L2070_110), 1, 0) + ( 1.0 + -$s_S38 )
 2149.                         $t4_S41 = $s_S38 * $t2_S39
 2150.                         fint(1 + $I_L2131_90, 1 + $I_L2070_110) = $t3_S42 * ( $t4_S41 * fint3(1 + $I_L2131_90) * (cubcoefv%base_addr)(1 + $I_L2131_90, kloc(1 + $I_L2131_90, 1 + $I_L2070_110), 5, 0) + $t1_S40 * ( $t2_S39 * fint2(1 + $I_L2131_90) * (cubcoefv%base_addr)(1 + $I_L2131_90, kloc(1 + $I_L2131_90, 1 + $I_L2070_110), 4, 0) + $s_S38 * $fint1_WR0_R0 * (cubcoefv%base_addr)(1 + $I_L2131_90, kloc(1 + $I_L2131_90, 1 + $I_L2070_110), 3, 0) ) ) + $t1_S40 * $t4_S41 * $fint4_WR0_R1 * (cubcoefv%base_addr)(1 + $I_L2131_90, kloc(1 + $I_L2131_90, 1 + $I_L2070_110), 6, 0)
 2150.                      else
 2150.    50                   continue
 2155.                         fint(1 + $I_L2131_90, 1 + $I_L2070_110) = fint2(1 + $I_L2131_90) + usigdp(1 + $I_L2131_90, 1 + $I_L2070_110) * ( fint3(1 + $I_L2131_90) + -fint2(1 + $I_L2131_90) )
 2155.                      endif
 2157.                      $I_L2131_90 = 1 + $I_L2131_90
 2156.                      if ( $I_L2131_90 >= ibdim ) exit
 2156.                   enddo
 2156.                endif
 2158.                if ( lim /= .false. ) then
 2159.                   if ( ibdim > 0 ) then
 2159.                      $I_L2159_92 = 0
 2159. !dir$ ivdep
 2159.                      do
 2160.                         $k_S44 = kloc(1 + $I_L2159_92, 1 + $I_L2070_110)
 2162.                         $sma_S46 = max( f(ip(1 + $I_L2159_92, 1 + $I_L2070_110, 8), $k_S44, jn(1 + $I_L2159_92, 1 + $I_L2070_110, 8)), max( f(ip(1 + $I_L2159_92, 1 + $I_L2070_110, 9), $k_S44, jn(1 + $I_L2159_92, 1 + $I_L2070_110, 9)), max( f(ip(1 + $I_L2159_92, 1 + $I_L2070_110, 4), $k_S44, jn(1 + $I_L2159_92, 1 + $I_L2070_110, 4)), f(ip(1 + $I_L2159_92, 1 + $I_L2070_110, 5), $k_S44, jn(1 + $I_L2159_92, 1 + $I_L2070_110, 5)) ) ) )
 2164.                         $sma1_S45 = max( f(ip(1 + $I_L2159_92, 1 + $I_L2070_110, 8), 1 + $k_S44, jn(1 + $I_L2159_92, 1 + $I_L2070_110, 8)), max( f(ip(1 + $I_L2159_92, 1 + $I_L2070_110, 9), 1 + $k_S44, jn(1 + $I_L2159_92, 1 + $I_L2070_110, 9)), max( f(ip(1 + $I_L2159_92, 1 + $I_L2070_110, 4), 1 + $k_S44, jn(1 + $I_L2159_92, 1 + $I_L2070_110, 4)), f(ip(1 + $I_L2159_92, 1 + $I_L2070_110, 5), 1 + $k_S44, jn(1 + $I_L2159_92, 1 + $I_L2070_110, 5)) ) ) )
 2166.                         $smi_S48 = min( f(ip(1 + $I_L2159_92, 1 + $I_L2070_110, 8), $k_S44, jn(1 + $I_L2159_92, 1 + $I_L2070_110, 8)), min( f(ip(1 + $I_L2159_92, 1 + $I_L2070_110, 9), $k_S44, jn(1 + $I_L2159_92, 1 + $I_L2070_110, 9)), min( f(ip(1 + $I_L2159_92, 1 + $I_L2070_110, 4), $k_S44, jn(1 + $I_L2159_92, 1 + $I_L2070_110, 4)), f(ip(1 + $I_L2159_92, 1 + $I_L2070_110, 5), $k_S44, jn(1 + $I_L2159_92, 1 + $I_L2070_110, 5)) ) ) )
 2168.                         $smi1_S47 = min( f(ip(1 + $I_L2159_92, 1 + $I_L2070_110, 8), 1 + $k_S44, jn(1 + $I_L2159_92, 1 + $I_L2070_110, 8)), min( f(ip(1 + $I_L2159_92, 1 + $I_L2070_110, 9), 1 + $k_S44, jn(1 + $I_L2159_92, 1 + $I_L2070_110, 9)), min( f(ip(1 + $I_L2159_92, 1 + $I_L2070_110, 4), 1 + $k_S44, jn(1 + $I_L2159_92, 1 + $I_L2070_110, 4)), f(ip(1 + $I_L2159_92, 1 + $I_L2070_110, 5), 1 + $k_S44, jn(1 + $I_L2159_92, 1 + $I_L2070_110, 5)) ) ) )
 2171.                         fint(1 + $I_L2159_92, 1 + $I_L2070_110) = max( min( $smi1_S47, $smi_S48 ), min( fint(1 + $I_L2159_92, 1 + $I_L2070_110), max( $sma1_S45, $sma_S46 ) ) )
 2172.                         $I_L2159_92 = 1 + $I_L2159_92
 2159.                         if ( $I_L2159_92 >= ibdim ) exit
 2159.                      enddo
 2159.                   endif
 2159.                endif
 2174.                $I_L2070_110 = 1 + $I_L2070_110
 2173.                if ( $I_L2070_110 >= kmax ) exit
 2173.             enddo
 2173.          endif
 1936.          _free( t$330 )
 1936.       endif
 2176.       return
 2176.       end
 2176.       
 2178.       
 2178.       subroutine vectorialtend( tendu, tendv )
 2178.       t$64 = ibmax
 2178.       t$65 = kmax
 2178.       t$66 = jbmax
 2180.       t$366 = _zla( 0, ibmax )
 2178.       t$367 = _zla( 0, ibmax )
 2180.       t$368 = _zla( 0, kmax )
 2178.       t$369 = _zla( 0, ibmax ) * _zla( 0, kmax )
 2180.       t$370 = _zla( 0, jbmax )
 2178.       t$371 = _zla( 0, ibmax ) * _zla( 0, kmax ) * _zla( 0, jbmax )
 2222.       $snt_T0 = _mt_single( 1, _mt_rw_list(...) )
 2223.       jglob = 0
 2224.       $snt_T0 = _mt_endsingle( 1, _mt_rw_list(...), $snt_T0 )
 2240.       $SC_coslat_I17 = coslat%dim_1%EX
 2240.       $SC_coslat_I18 = coslat%dim_1%LB
 2240.       $SC_coslat_I20 = coslat%dim_2%SM
 2240.       $SC_coslat_I19 = coslat%dim_2%EX
 2240.       $SC_coslat_I21 = coslat%dim_2%LB
 2240.       $SC_sinlat_I22 = sinlat%dim_1%EX
 2240.       $SC_sinlat_I23 = sinlat%dim_1%LB
 2240.       $SC_sinlat_I25 = sinlat%dim_2%SM
 2240.       $SC_sinlat_I24 = sinlat%dim_2%EX
 2240.       $SC_sinlat_I26 = sinlat%dim_2%LB
 2237.       $SC_ulonm_I7 = ulonm%dim_1%EX
 2237.       $SC_ulonm_I8 = ulonm%dim_1%LB
 2237.       $SC_ulonm_I10 = ulonm%dim_2%SM
 2237.       $SC_ulonm_I9 = ulonm%dim_2%EX
 2237.       $SC_ulonm_I11 = ulonm%dim_2%LB
 2237.       $SC_longit_I12 = longit%dim_1%EX
 2237.       $SC_longit_I13 = longit%dim_1%LB
 2237.       $SC_longit_I15 = longit%dim_2%SM
 2237.       $SC_longit_I14 = longit%dim_2%EX
 2237.       $SC_longit_I16 = longit%dim_2%LB
 2234.       $SC_ulatm_I2 = ulatm%dim_1%EX
 2234.       $SC_ulatm_I3 = ulatm%dim_1%LB
 2234.       $SC_ulatm_I5 = ulatm%dim_2%SM
 2234.       $SC_ulatm_I4 = ulatm%dim_2%EX
 2234.       $SC_ulatm_I6 = ulatm%dim_2%LB
 2233.       $SC_ibmaxperjb_I0 = ibmaxperjb%dim_1%EX
 2233.       $SC_ibmaxperjb_I1 = ibmaxperjb%dim_1%LB
 2232.       if ( kmax > 0 ) then
 2178. !dir$ loop_info (automatic) cache_nt( ibmaxperjb )
 2178.          do
 2226.             $snt_T1 = _mt_critical( 2, _mt_rw_list(...) )
 2227.             jglob = 1 + jglob
 2228.             $jb_S0 = jglob
 2229.             $snt_T1 = _mt_endcritical( 2, _mt_rw_list(...), $snt_T1 )
 2230.             if ( $jb_S0 > jbmax ) then
 2225.                goto 10
 2225.             endif
 2232.             $SCA_ibmaxperjb_I27 = (ibmaxperjb%base_addr)($jb_S0, 0)
 2232.             $I_L2232_24 = 0
 2232.             do
 2233.                if ( $SCA_ibmaxperjb_I27 > 0 ) then
 2233.                   $I_L2233_22 = 0
 2233. !dir$ ivdep
 2233.                   do
 2234.                      $Coss_P12 = coss( (ulatm%base_addr)(1 + $I_L2233_22 + $SCA_ibmaxperjb_I27 * $I_L2232_24, $jb_S0, 0) )
 2237.                      $dlon_S4 = (longit%base_addr)(1 + $I_L2233_22, $jb_S0, 0) + -(ulonm%base_addr)(1 + $I_L2233_22 + $SCA_ibmaxperjb_I27 * $I_L2232_24, $jb_S0, 0)
 2238.                      $Coss_P13 = coss( $dlon_S4 )
 2235.                      $slat_S19 = sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P12 ) ) ), cimag( $Coss_P12 ) )
 2240.                      $cgca_S8 = real( $Coss_P13, 8 ) * (coslat%base_addr)(1 + $I_L2233_22, $jb_S0, 0) * real( $Coss_P12, 8 ) + (sinlat%base_addr)(1 + $I_L2233_22, $jb_S0, 0) * sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P12 ) ) ), cimag( $Coss_P12 ) )
 2241.                      $Flat_S14 = acos( sign( min( 1.0, abs( $cgca_S8 ) ), $cgca_S8 ) )
 2242.                      $sgam_S12 = ( 1.0/sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P12 ) ) ), cimag( $Coss_P12 ) ) * ( -( (coslat%base_addr)(1 + $I_L2233_22, $jb_S0, 0) * real( $Coss_P13, 8 ) ) + $cgca_S8 * real( $Coss_P12, 8 ) ) )
 2243.                      $cgam_S10 = (coslat%base_addr)(1 + $I_L2233_22, $jb_S0, 0) * cimag( $Coss_P13 )
 2245.                      $Flat_S13 = atan2( $sgam_S12, sign( max( 9.9999999999999995e-21, abs( $cgam_S10 ) ), $cgam_S10 ) )
 2246.                      $Coss_P14 = coss( $Flat_S13 )
 2253.                      $Coss_P15 = coss( $Flat_S14 )
 2255.                      $Coss_P16 = coss( -$Flat_S14 )
 2260.                      $ym_S20 = real( $Coss_P12, 8 ) + -( ( 1.0 + -( real( $Coss_P16, 8 ) ) ) * ( real( $Coss_P12, 8 ) * cimag( $Coss_P14 ) * cimag( $Coss_P14 ) ) ) + -( cimag( $Coss_P16 ) * ( sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P12 ) ) ), cimag( $Coss_P12 ) ) * cimag( $Coss_P14 ) ) )
 2262.                      $px_S23 = ( 1.0/( $ym_S20 * $ym_S20 + ( cimag( $Coss_P16 ) * ( $slat_S19 * real( $Coss_P14, 8 ) ) + ( 1.0 + -( real( $Coss_P16, 8 ) ) ) * ( real( $Coss_P12, 8 ) * real( $Coss_P14, 8 ) * cimag( $Coss_P14 ) ) ) * ( cimag( $Coss_P16 ) * ( $slat_S19 * real( $Coss_P14, 8 ) ) + ( 1.0 + -( real( $Coss_P16, 8 ) ) ) * ( real( $Coss_P12, 8 ) * real( $Coss_P14, 8 ) * cimag( $Coss_P14 ) ) ) ) * ( -( tendv(1 + $I_L2233_22, 1 + $I_L2232_24, $jb_S0) * ( cimag( $Coss_P16 ) * ( $slat_S19 * real( $Coss_P14, 8 ) ) + ( 1.0 + -( real( $Coss_P16, 8 ) ) ) * ( real( $Coss_P12, 8 ) * real( $Coss_P14, 8 ) * cimag( $Coss_P14 ) ) ) ) + tendu(1 + $I_L2233_22, 1 + $I_L2232_24, $jb_S0) * ( real( $Coss_P12, 8 ) + -( ( 1.0 + -( real( $Coss_P16, 8 ) ) ) * ( real( $Coss_P12, 8 ) * cimag( $Coss_P14 ) * cimag( $Coss_P14 ) ) ) + -( cimag( $Coss_P16 ) * ( $slat_S19 * cimag( $Coss_P14 ) ) ) ) ) )
 2263.                      $py_S24 = ( 1.0/( $ym_S20 * $ym_S20 + ( cimag( $Coss_P16 ) * ( $slat_S19 * real( $Coss_P14, 8 ) ) + ( 1.0 + -( real( $Coss_P16, 8 ) ) ) * ( real( $Coss_P12, 8 ) * real( $Coss_P14, 8 ) * cimag( $Coss_P14 ) ) ) * ( cimag( $Coss_P16 ) * ( $slat_S19 * real( $Coss_P14, 8 ) ) + ( 1.0 + -( real( $Coss_P16, 8 ) ) ) * ( real( $Coss_P12, 8 ) * real( $Coss_P14, 8 ) * cimag( $Coss_P14 ) ) ) ) * ( tendv(1 + $I_L2233_22, 1 + $I_L2232_24, $jb_S0) * ( real( $Coss_P12, 8 ) + -( ( 1.0 + -( real( $Coss_P16, 8 ) ) ) * ( real( $Coss_P12, 8 ) * cimag( $Coss_P14 ) * cimag( $Coss_P14 ) ) ) + -( cimag( $Coss_P16 ) * ( $slat_S19 * cimag( $Coss_P14 ) ) ) ) + tendu(1 + $I_L2233_22, 1 + $I_L2232_24, $jb_S0) * ( cimag( $Coss_P16 ) * ( $slat_S19 * real( $Coss_P14, 8 ) ) + ( 1.0 + -( real( $Coss_P16, 8 ) ) ) * ( real( $Coss_P12, 8 ) * real( $Coss_P14, 8 ) * cimag( $Coss_P14 ) ) ) ) )
 2264.                      tendu(1 + $I_L2233_22, 1 + $I_L2232_24, $jb_S0) = $py_S24 * ( ( real( $Coss_P12, 8 ) * real( $Coss_P14, 8 ) * cimag( $Coss_P14 ) ) * ( 1.0 + -( real( $Coss_P15, 8 ) ) ) + cimag( $Coss_P15 ) * ( sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P12 ) ) ), cimag( $Coss_P12 ) ) * real( $Coss_P14, 8 ) ) ) + $px_S23 * ( real( $Coss_P12, 8 ) + -( ( real( $Coss_P12, 8 ) * cimag( $Coss_P14 ) * cimag( $Coss_P14 ) ) * ( 1.0 + -( real( $Coss_P15, 8 ) ) ) ) + -( cimag( $Coss_P15 ) * ( sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P12 ) ) ), cimag( $Coss_P12 ) ) * cimag( $Coss_P14 ) ) ) )
 2265.                      tendv(1 + $I_L2233_22, 1 + $I_L2232_24, $jb_S0) = -( $px_S23 * ( ( real( $Coss_P12, 8 ) * real( $Coss_P14, 8 ) * cimag( $Coss_P14 ) ) * ( 1.0 + -( real( $Coss_P15, 8 ) ) ) + cimag( $Coss_P15 ) * ( sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P12 ) ) ), cimag( $Coss_P12 ) ) * real( $Coss_P14, 8 ) ) ) ) + $py_S24 * ( real( $Coss_P12, 8 ) + -( ( real( $Coss_P12, 8 ) * cimag( $Coss_P14 ) * cimag( $Coss_P14 ) ) * ( 1.0 + -( real( $Coss_P15, 8 ) ) ) ) + -( cimag( $Coss_P15 ) * ( sign( max( 9.9999999999999995e-21, abs( cimag( $Coss_P12 ) ) ), cimag( $Coss_P12 ) ) * cimag( $Coss_P14 ) ) ) )
 2266.                      $I_L2233_22 = 1 + $I_L2233_22
 2233.                      if ( $I_L2233_22 >= $SCA_ibmaxperjb_I27 ) exit
 2233.                   enddo
 2233.                endif
 2267.                $I_L2232_24 = 1 + $I_L2232_24
 2266.                if ( $I_L2232_24 >= kmax ) exit
 2266.             enddo
 2267.          enddo
 2267.       else
 2267.          do
 2226.             $snt_T1 = _mt_critical( 3, _mt_rw_list(...) )
 2227.             jglob = 1 + jglob
 2228.             $jb_S0 = jglob
 2229.             $snt_T1 = _mt_endcritical( 3, _mt_rw_list(...), $snt_T1 )
 2229.             if ( $jb_S0 > jbmax ) exit
 2229.          enddo
 2229.    10    continue
 2269.          return
 2269.       endif
 2269.       end
 2269.       
 2272.       
 2272.       subroutine initsl
 2279.       phi%header%a_contig = 1
 2279.       phi%dim_1%LB = 1
 2279.       phi%dim_1%EX = _zla( 0, ibmax )
 2279.       phi%dim_1%SM = 1
 2279.       phi%dim_2%LB = -1
 2279.       phi%dim_2%EX = _zla( 0, ( 4 + jmax ) )
 2279.       phi%dim_2%SM = _zla( 0, ibmax )
 2279.       $_allo_P0(0) = 0x1000000000001L
 2279.       $_allo_P0(1) = loc( phi )
 2279.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 2280.       delphi%header%a_contig = 1
 2280.       delphi%dim_1%LB = 1
 2280.       delphi%dim_1%EX = _zla( 0, ibmax )
 2280.       delphi%dim_1%SM = 1
 2280.       delphi%dim_2%LB = -1
 2280.       delphi%dim_2%EX = _zla( 0, ( 4 + jmax ) )
 2280.       delphi%dim_2%SM = _zla( 0, ibmax )
 2280.       $_allo_P1(0) = 0x1000000000001L
 2280.       $_allo_P1(1) = loc( delphi )
 2280.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 2281.       sigma%header%a_contig = 1
 2281.       sigma%dim_1%LB = 1
 2281.       sigma%dim_1%EX = _zla( 0, ibmax )
 2281.       sigma%dim_1%SM = 1
 2281.       sigma%dim_2%LB = 1
 2281.       sigma%dim_2%EX = _zla( 0, kmax )
 2281.       sigma%dim_2%SM = _zla( 0, ibmax )
 2281.       $_allo_P2(0) = 0x1000000000001L
 2281.       $_allo_P2(1) = loc( sigma )
 2281.       call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 2282.       delsigma%header%a_contig = 1
 2282.       delsigma%dim_1%LB = 1
 2282.       delsigma%dim_1%EX = _zla( 0, ibmax )
 2282.       delsigma%dim_1%SM = 1
 2282.       delsigma%dim_2%LB = 1
 2282.       delsigma%dim_2%EX = _zla( 0, kmax )
 2282.       delsigma%dim_2%SM = _zla( 0, ibmax )
 2282.       $_allo_P3(0) = 0x1000000000001L
 2282.       $_allo_P3(1) = loc( delsigma )
 2282.       call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 2283.       dellon%header%a_contig = 1
 2283.       dellon%dim_1%LB = 1
 2283.       dellon%dim_1%EX = _zla( 0, ibmax )
 2283.       dellon%dim_1%SM = 1
 2283.       dellon%dim_2%LB = -1
 2283.       dellon%dim_2%EX = _zla( 0, ( 4 + jmax ) )
 2283.       dellon%dim_2%SM = _zla( 0, ibmax )
 2283.       $_allo_P4(0) = 0x1000000000001L
 2283.       $_allo_P4(1) = loc( dellon )
 2283.       call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
 2284.       cubcoef%header%a_contig = 1
 2284.       cubcoef%dim_1%LB = 1
 2284.       cubcoef%dim_1%EX = _zla( 0, ibmax )
 2284.       cubcoef%dim_1%SM = 1
 2284.       cubcoef%dim_2%LB = 0
 2284.       cubcoef%dim_2%EX = _zla( 0, ( 1 + jmax ) )
 2284.       cubcoef%dim_2%SM = _zla( 0, ibmax )
 2284.       cubcoef%dim_3%LB = 1
 2284.       cubcoef%dim_3%EX = 6
 2284.       cubcoef%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, 1 + jmax ) )
 2284.       $_allo_P5(0) = 0x1000000000001L
 2284.       $_allo_P5(1) = loc( cubcoef )
 2284.       call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
 2285.       cubcoefv%header%a_contig = 1
 2285.       cubcoefv%dim_1%LB = 1
 2285.       cubcoefv%dim_1%EX = _zla( 0, ibmax )
 2285.       cubcoefv%dim_1%SM = 1
 2285.       cubcoefv%dim_2%LB = 1
 2285.       cubcoefv%dim_2%EX = _zla( 0, kmax )
 2285.       cubcoefv%dim_2%SM = _zla( 0, ibmax )
 2285.       cubcoefv%dim_3%LB = 1
 2285.       cubcoefv%dim_3%EX = 6
 2285.       cubcoefv%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, kmax ) )
 2285.       $_allo_P6(0) = 0x1000000000001L
 2285.       $_allo_P6(1) = loc( cubcoefv )
 2285.       call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
 2286.       if ( sl_twotime_scheme /= .false. ) then
 2287.          ulon%header%a_contig = 1
 2287.          ulon%dim_1%LB = 1
 2287.          ulon%dim_1%EX = _zla( 0, ( ibmax * kmax ) )
 2287.          ulon%dim_1%SM = 1
 2287.          ulon%dim_2%LB = 1
 2287.          ulon%dim_2%EX = _zla( 0, jbmax )
 2287.          ulon%dim_2%SM = _zla( 0, ( ibmax * kmax ) )
 2287.          $_allo_P7(0) = 0x1000000000001L
 2287.          $_allo_P7(1) = loc( ulon )
 2287.          call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
 2288.          ulat%header%a_contig = 1
 2288.          ulat%dim_1%LB = 1
 2288.          ulat%dim_1%EX = _zla( 0, ( ibmax * kmax ) )
 2288.          ulat%dim_1%SM = 1
 2288.          ulat%dim_2%LB = 1
 2288.          ulat%dim_2%EX = _zla( 0, jbmax )
 2288.          ulat%dim_2%SM = _zla( 0, ( ibmax * kmax ) )
 2288.          $_allo_P8(0) = 0x1000000000001L
 2288.          $_allo_P8(1) = loc( ulat )
 2288.          call __allocate( $_allo_P8, 0, 0, _fcd( 0, 0 ) )
 2289.          usig%header%a_contig = 1
 2289.          usig%dim_1%LB = 1
 2289.          usig%dim_1%EX = _zla( 0, ( ibmax * kmax ) )
 2289.          usig%dim_1%SM = 1
 2289.          usig%dim_2%LB = 1
 2289.          usig%dim_2%EX = _zla( 0, jbmax )
 2289.          usig%dim_2%SM = _zla( 0, ( ibmax * kmax ) )
 2289.          $_allo_P9(0) = 0x1000000000001L
 2289.          $_allo_P9(1) = loc( usig )
 2289.          call __allocate( $_allo_P9, 0, 0, _fcd( 0, 0 ) )
 2290.          ulon2d%header%a_contig = 1
 2290.          ulon2d%dim_1%LB = 1
 2290.          ulon2d%dim_1%EX = _zla( 0, ibmax )
 2290.          ulon2d%dim_1%SM = 1
 2290.          ulon2d%dim_2%LB = 1
 2290.          ulon2d%dim_2%EX = _zla( 0, jbmax )
 2290.          ulon2d%dim_2%SM = _zla( 0, ibmax )
 2290.          $_allo_P10(0) = 0x1000000000001L
 2290.          $_allo_P10(1) = loc( ulon2d )
 2290.          call __allocate( $_allo_P10, 0, 0, _fcd( 0, 0 ) )
 2291.          ulat2d%header%a_contig = 1
 2291.          ulat2d%dim_1%LB = 1
 2291.          ulat2d%dim_1%EX = _zla( 0, ibmax )
 2291.          ulat2d%dim_1%SM = 1
 2291.          ulat2d%dim_2%LB = 1
 2291.          ulat2d%dim_2%EX = _zla( 0, jbmax )
 2291.          ulat2d%dim_2%SM = _zla( 0, ibmax )
 2291.          $_allo_P11(0) = 0x1000000000001L
 2291.          $_allo_P11(1) = loc( ulat2d )
 2291.          call __allocate( $_allo_P11, 0, 0, _fcd( 0, 0 ) )
 2292.          fgummean%header%a_contig = 1
 2292.          fgummean%dim_1%LB = 1
 2292.          fgummean%dim_1%EX = _zla( 0, ibmax )
 2292.          fgummean%dim_1%SM = 1
 2292.          fgummean%dim_2%LB = 1
 2292.          fgummean%dim_2%EX = _zla( 0, jbmax_ext )
 2292.          fgummean%dim_2%SM = _zla( 0, ibmax )
 2292.          $_allo_P12(0) = 0x1000000000001L
 2292.          $_allo_P12(1) = loc( fgummean )
 2292.          call __allocate( $_allo_P12, 0, 0, _fcd( 0, 0 ) )
 2293.          fgvmmean%header%a_contig = 1
 2293.          fgvmmean%dim_1%LB = 1
 2293.          fgvmmean%dim_1%EX = _zla( 0, ibmax )
 2293.          fgvmmean%dim_1%SM = 1
 2293.          fgvmmean%dim_2%LB = 1
 2293.          fgvmmean%dim_2%EX = _zla( 0, jbmax_ext )
 2293.          fgvmmean%dim_2%SM = _zla( 0, ibmax )
 2293.          $_allo_P13(0) = 0x1000000000001L
 2293.          $_allo_P13(1) = loc( fgvmmean )
 2293.          call __allocate( $_allo_P13, 0, 0, _fcd( 0, 0 ) )
 2294.          fgumm%header%a_contig = 1
 2294.          fgumm%dim_1%LB = 1
 2294.          fgumm%dim_1%EX = _zla( 0, ibmax )
 2294.          fgumm%dim_1%SM = 1
 2294.          fgumm%dim_2%LB = 1
 2294.          fgumm%dim_2%EX = _zla( 0, kmax )
 2294.          fgumm%dim_2%SM = _zla( 0, ibmax )
 2294.          fgumm%dim_3%LB = 1
 2294.          fgumm%dim_3%EX = _zla( 0, jbmax_ext )
 2294.          fgumm%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, kmax ) )
 2294.          $_allo_P14(0) = 0x1000000000001L
 2294.          $_allo_P14(1) = loc( fgumm )
 2294.          call __allocate( $_allo_P14, 0, 0, _fcd( 0, 0 ) )
 2295.          fgvmm%header%a_contig = 1
 2295.          fgvmm%dim_1%LB = 1
 2295.          fgvmm%dim_1%EX = _zla( 0, ibmax )
 2295.          fgvmm%dim_1%SM = 1
 2295.          fgvmm%dim_2%LB = 1
 2295.          fgvmm%dim_2%EX = _zla( 0, kmax )
 2295.          fgvmm%dim_2%SM = _zla( 0, ibmax )
 2295.          fgvmm%dim_3%LB = 1
 2295.          fgvmm%dim_3%EX = _zla( 0, jbmax_ext )
 2295.          fgvmm%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, kmax ) )
 2295.          $_allo_P15(0) = 0x1000000000001L
 2295.          $_allo_P15(1) = loc( fgvmm )
 2295.          call __allocate( $_allo_P15, 0, 0, _fcd( 0, 0 ) )
 2295.       else
 2297.          usigm%header%a_contig = 1
 2297.          usigm%dim_1%LB = 1
 2297.          usigm%dim_1%EX = _zla( 0, ( ibmax * kmax ) )
 2297.          usigm%dim_1%SM = 1
 2297.          usigm%dim_2%LB = 1
 2297.          usigm%dim_2%EX = _zla( 0, jbmax )
 2297.          usigm%dim_2%SM = _zla( 0, ( ibmax * kmax ) )
 2297.          $_allo_P16(0) = 0x1000000000001L
 2297.          $_allo_P16(1) = loc( usigm )
 2297.          call __allocate( $_allo_P16, 0, 0, _fcd( 0, 0 ) )
 2297.       endif
 2299.       ulonm%header%a_contig = 1
 2299.       ulonm%dim_1%LB = 1
 2299.       ulonm%dim_1%EX = _zla( 0, ( ibmax * kmax ) )
 2299.       ulonm%dim_1%SM = 1
 2299.       ulonm%dim_2%LB = 1
 2299.       ulonm%dim_2%EX = _zla( 0, jbmax )
 2299.       ulonm%dim_2%SM = _zla( 0, ( ibmax * kmax ) )
 2299.       $_allo_P17(0) = 0x1000000000001L
 2299.       $_allo_P17(1) = loc( ulonm )
 2299.       call __allocate( $_allo_P17, 0, 0, _fcd( 0, 0 ) )
 2300.       ulatm%header%a_contig = 1
 2300.       ulatm%dim_1%LB = 1
 2300.       ulatm%dim_1%EX = _zla( 0, ( ibmax * kmax ) )
 2300.       ulatm%dim_1%SM = 1
 2300.       ulatm%dim_2%LB = 1
 2300.       ulatm%dim_2%EX = _zla( 0, jbmax )
 2300.       ulatm%dim_2%SM = _zla( 0, ( ibmax * kmax ) )
 2300.       $_allo_P18(0) = 0x1000000000001L
 2300.       $_allo_P18(1) = loc( ulatm )
 2300.       call __allocate( $_allo_P18, 0, 0, _fcd( 0, 0 ) )
 2301.       ulonm2d%header%a_contig = 1
 2301.       ulonm2d%dim_1%LB = 1
 2301.       ulonm2d%dim_1%EX = _zla( 0, ibmax )
 2301.       ulonm2d%dim_1%SM = 1
 2301.       ulonm2d%dim_2%LB = 1
 2301.       ulonm2d%dim_2%EX = _zla( 0, jbmax )
 2301.       ulonm2d%dim_2%SM = _zla( 0, ibmax )
 2301.       $_allo_P19(0) = 0x1000000000001L
 2301.       $_allo_P19(1) = loc( ulonm2d )
 2301.       call __allocate( $_allo_P19, 0, 0, _fcd( 0, 0 ) )
 2302.       ulatm2d%header%a_contig = 1
 2302.       ulatm2d%dim_1%LB = 1
 2302.       ulatm2d%dim_1%EX = _zla( 0, ibmax )
 2302.       ulatm2d%dim_1%SM = 1
 2302.       ulatm2d%dim_2%LB = 1
 2302.       ulatm2d%dim_2%EX = _zla( 0, jbmax )
 2302.       ulatm2d%dim_2%SM = _zla( 0, ibmax )
 2302.       $_allo_P20(0) = 0x1000000000001L
 2302.       $_allo_P20(1) = loc( ulatm2d )
 2302.       call __allocate( $_allo_P20, 0, 0, _fcd( 0, 0 ) )
 2304.       fgtmm%header%a_contig = 1
 2304.       fgtmm%dim_1%LB = 1
 2304.       fgtmm%dim_1%EX = _zla( 0, ibmax )
 2304.       fgtmm%dim_1%SM = 1
 2304.       fgtmm%dim_2%LB = 1
 2304.       fgtmm%dim_2%EX = _zla( 0, kmax )
 2304.       fgtmm%dim_2%SM = _zla( 0, ibmax )
 2304.       fgtmm%dim_3%LB = 1
 2304.       fgtmm%dim_3%EX = _zla( 0, jbmax )
 2304.       fgtmm%dim_3%SM = ( _zla( 0, ibmax ) * _zla( 0, kmax ) )
 2304.       $_allo_P21(0) = 0x1000000000001L
 2304.       $_allo_P21(1) = loc( fgtmm )
 2304.       call __allocate( $_allo_P21, 0, 0, _fcd( 0, 0 ) )
 2306.       jov = ( 1 + jovlap ) / 2
 2307.       if ( sl_twotime_scheme /= .false. ) then
 2307.          jov = jovlap
 2307.       endif
 2309.       requests%header%a_contig = 1
 2309.       requests%dim_1%LB = 1
 2309.       requests%dim_1%EX = _zla( 0, ( 5 * nsend + nscalars * nsend ) )
 2309.       requests%dim_1%SM = 1
 2309.       $_allo_P22(0) = 0x1000000000001L
 2309.       $_allo_P22(1) = loc( requests )
 2309.       call __allocate( $_allo_P22, 0, 0, _fcd( 0, 0 ) )
 2310.       requestr%header%a_contig = 1
 2310.       requestr%dim_1%LB = 1
 2310.       requestr%dim_1%EX = _zla( 0, ( 10 * jovlap + 2 * jovlap * nscalars ) )
 2310.       requestr%dim_1%SM = 1
 2310.       $_allo_P23(0) = 0x1000000000001L
 2310.       $_allo_P23(1) = loc( requestr )
 2310.       call __allocate( $_allo_P23, 0, 0, _fcd( 0, 0 ) )
 2311.       requestsm%header%a_contig = 1
 2311.       requestsm%dim_1%LB = 1
 2311.       requestsm%dim_1%EX = _zla( 0, ( 5 * nsend ) )
 2311.       requestsm%dim_1%SM = 1
 2311.       $_allo_P24(0) = 0x1000000000001L
 2311.       $_allo_P24(1) = loc( requestsm )
 2311.       call __allocate( $_allo_P24, 0, 0, _fcd( 0, 0 ) )
 2312.       requestrm%header%a_contig = 1
 2312.       requestrm%dim_1%LB = 1
 2312.       requestrm%dim_1%EX = _zla( 0, ( 10 * jovlap ) )
 2312.       requestrm%dim_1%SM = 1
 2312.       $_allo_P25(0) = 0x1000000000001L
 2312.       $_allo_P25(1) = loc( requestrm )
 2312.       call __allocate( $_allo_P25, 0, 0, _fcd( 0, 0 ) )
 2314.       if ( jmax > 0 ) then
 2316.          $SC_colrad_I2 = colrad%dim_1%EX
 2316.          $SC_colrad_I3 = colrad%dim_1%LB
 2315.          $SC_imaxperj_I0 = imaxperj%dim_1%EX
 2315.          $SC_imaxperj_I1 = imaxperj%dim_1%LB
 2314.          $I_L2314_144 = 0
 2314. !dir$ ivdep
 2314.          do
 2315.             (dellon%base_addr)(1, 1 + $I_L2314_144, 0) = ( 6.28318530717958 * 1.0/(imaxperj%base_addr)(1 + $I_L2314_144, 0) )
 2316.             (phi%base_addr)(1, 1 + $I_L2314_144, 0) = -1.570796326794895 + (colrad%base_addr)(1 + $I_L2314_144, 0)
 2317.             $I_L2314_144 = 1 + $I_L2314_144
 2314.             if ( $I_L2314_144 >= jmax ) exit
 2314.          enddo
 2314.       endif
 2318.       (phi%base_addr)(1, 0, 0) = -1.570796326794895 + -(colrad%base_addr)(1, 0)
 2319.       (phi%base_addr)(1, -1, 0) = -1.570796326794895 + -(colrad%base_addr)(2, 0)
 2320.       (phi%base_addr)(1, 1 + jmax, 0) = -(phi%base_addr)(1, 0, 0)
 2321.       (phi%base_addr)(1, 2 + jmax, 0) = -(phi%base_addr)(1, -1, 0)
 2322.       (dellon%base_addr)(1, 0, 0) = (dellon%base_addr)(1, 1, 0)
 2323.       (dellon%base_addr)(1, -1, 0) = (dellon%base_addr)(1, 2, 0)
 2324.       (dellon%base_addr)(1, 1 + jmax, 0) = (dellon%base_addr)(1, jmax, 0)
 2325.       (dellon%base_addr)(1, 2 + jmax, 0) = (dellon%base_addr)(1, -1 + jmax, 0)
 2326.       if ( 2 + jmax >= 0 ) then
 2326.          $I_L2326_146 = 0
 2326. !dir$ ivdep
 2326.          do
 2327.             (delphi%base_addr)(1, -1 + $I_L2326_146, 0) = (phi%base_addr)(1, $I_L2326_146, 0) + -(phi%base_addr)(1, -1 + $I_L2326_146, 0)
 2328.             $I_L2326_146 = 1 + $I_L2326_146
 2326.             if ( $I_L2326_146 >= 3 + jmax ) exit
 2326.          enddo
 2326.       endif
 2329.       delphiref = (delphi%base_addr)(1, -1, 0)
 2330.       if ( 1 + jmax >= 0 ) then
 2330.          $I_L2330_148 = 0
 2330. !dir$ ivdep
 2330.          do
 2331.             delphiref = min( delphiref, (delphi%base_addr)(1, $I_L2330_148, 0) )
 2332.             $I_L2330_148 = 1 + $I_L2330_148
 2330.             if ( $I_L2330_148 >= 2 + jmax ) exit
 2330.          enddo
 2330.       endif
 2333.       delsigref = (delcl%base_addr)(1, 0)
 2334.       if ( -3 + kmax >= 0 ) then
 2335.          $SC_delcl_I4 = delcl%dim_1%EX
 2335.          $SC_delcl_I5 = delcl%dim_1%LB
 2334.          $I_L2334_150 = 0
 2334. !dir$ ivdep
 2334.          do
 2335.             delsigref = min( delsigref, (delcl%base_addr)(2 + $I_L2334_150, 0) )
 2336.             $I_L2334_150 = 1 + $I_L2334_150
 2334.             if ( $I_L2334_150 >= -2 + kmax ) exit
 2334.          enddo
 2334.       endif
 2339.       kmaxref = int( 1.0 + ( 1.0/( 5.0e-1 * delsigref ) * ( (cl%base_addr)(kmax, 0) + -(cl%base_addr)(1, 0) ) ) )
 2340.       jmaxref = int( 1.0 + ( 3.14159265358979 * 1.0/( 5.0e-1 * delphiref ) ) )
 2342.       delsigref = ( 1.0/kmaxref * ( (cl%base_addr)(kmax, 0) + -(cl%base_addr)(1, 0) ) )
 2344.       jphiref%header%a_contig = 1
 2344.       jphiref%dim_1%LB = 1
 2344.       jphiref%dim_1%EX = ( max( 0, ibmax ) )
 2344.       jphiref%dim_1%SM = 1
 2344.       jphiref%dim_2%LB = 0
 2344.       jphiref%dim_2%EX = ( max( 0, 1 + int( 1.0 + ( 3.14159265358979 * 1.0/( 5.0e-1 * delphiref ) ) ) ) )
 2344.       jphiref%dim_2%SM = ( max( 0, ibmax ) )
 2344.       $_allo_P26(0) = 0x1000000000001L
 2344.       $_allo_P26(1) = loc( jphiref )
 2341.       delphiref = ( 3.14159265358979 * 1.0/( int( 1.0 + ( 3.14159265358979 * 1.0/( 5.0e-1 * delphiref ) ) ) ) )
 2344.       call __allocate( $_allo_P26, 0, 0, _fcd( 0, 0 ) )
 2345.       ksigref%header%a_contig = 1
 2345.       ksigref%dim_1%LB = 1
 2345.       ksigref%dim_1%EX = ( max( 0, ibmax ) )
 2345.       ksigref%dim_1%SM = 1
 2345.       ksigref%dim_2%LB = 0
 2345.       ksigref%dim_2%EX = ( max( 0, 1 + kmaxref ) )
 2345.       ksigref%dim_2%SM = ( max( 0, ibmax ) )
 2345.       $_allo_P27(0) = 0x1000000000001L
 2345.       $_allo_P27(1) = loc( ksigref )
 2345.       call __allocate( $_allo_P27, 0, 0, _fcd( 0, 0 ) )
 2347.       (jphiref%base_addr)(1, 0, 0) = 0
 2348.       $k_S6 = 0
 2349.       if ( jmaxref > 0 ) then
 2349.          $I_L2349_152 = 0
 2349. !dir$ unroll 4
 2349.          do
 2350.             if ( -1.570796326794895 + delphiref * ( 1 + $I_L2349_152 ) > (phi%base_addr)(1, 1 + $k_S6, 0) ) then
 2350.                $k_S6 = 1 + $k_S6
 2350.             endif
 2351.             (jphiref%base_addr)(1, 1 + $I_L2349_152, 0) = $k_S6
 2352.             $I_L2349_152 = 1 + $I_L2349_152
 2350.             if ( $I_L2349_152 >= jmaxref ) exit
 2350.          enddo
 2350.       endif
 2353.       (ksigref%base_addr)(1, 0, 0) = 1
 2354.       $j_S8 = 1
 2355.       if ( kmaxref > 0 ) then
 2356.          $SC_cl_I8 = (cl%base_addr)(1, 0)
 2356.          $SC_cl_I6 = cl%dim_1%EX
 2356.          $SC_cl_I7 = cl%dim_1%LB
 2355.          $I_L2355_154 = 0
 2355. !dir$ unroll 4
 2355.          do
 2356.             if ( $SC_cl_I8 + delsigref * ( 1 + $I_L2355_154 ) > (cl%base_addr)(1 + $j_S8, 0) ) then
 2356.                $j_S8 = 1 + $j_S8
 2356.             endif
 2357.             $j_S8 = min( $j_S8, -1 + kmax )
 2358.             (ksigref%base_addr)(1, 1 + $I_L2355_154, 0) = $j_S8
 2359.             $I_L2355_154 = 1 + $I_L2355_154
 2356.             if ( $I_L2355_154 >= kmaxref ) exit
 2356.          enddo
 2356.       endif
 2361.       if ( jmax >= 0 ) then
 2361.          $I_L2361_156 = 0
 2361. !dir$ ivdep
 2361.          do
 2362.             $p1_S11 = ( (delphi%base_addr)(1, 1 + $I_L2361_156, 0) * 1.0/(delphi%base_addr)(1, $I_L2361_156, 0) )
 2363.             $p2_S12 = ( (delphi%base_addr)(1, -1 + $I_L2361_156, 0) * 1.0/(delphi%base_addr)(1, $I_L2361_156, 0) )
 2364.             (cubcoef%base_addr)(1, $I_L2361_156, 1, 0) = $p1_S11
 2365.             (cubcoef%base_addr)(1, $I_L2361_156, 2, 0) = $p2_S12
 2366.             (cubcoef%base_addr)(1, $I_L2361_156, 3, 0) = -( 1.0/( $p2_S12 * ( 1.0 + $p1_S11 + $p2_S12 ) * ( 1.0 + $p2_S12 ) ) )
 2367.             (cubcoef%base_addr)(1, $I_L2361_156, 4, 0) = 1.0/( $p2_S12 * ( 1.0 + $p1_S11 ) )
 2368.             (cubcoef%base_addr)(1, $I_L2361_156, 5, 0) = 1.0/( $p1_S11 * ( 1.0 + $p2_S12 ) )
 2369.             (cubcoef%base_addr)(1, $I_L2361_156, 6, 0) = -( 1.0/( $p1_S11 * ( 1.0 + $p1_S11 ) * ( 1.0 + $p1_S11 + $p2_S12 ) ) )
 2370.             $I_L2361_156 = 1 + $I_L2361_156
 2361.             if ( $I_L2361_156 >= 1 + jmax ) exit
 2361.          enddo
 2361.       endif
 2371.       if ( -4 + kmax >= 0 ) then
 2372.          $SC_delcl_I4 = delcl%dim_1%EX
 2372.          $SC_delcl_I5 = delcl%dim_1%LB
 2371.          $I_L2371_158 = 0
 2371. !dir$ ivdep
 2371.          do
 2372.             $p1_S14 = ( (delcl%base_addr)(3 + $I_L2371_158, 0) * 1.0/(delcl%base_addr)(2 + $I_L2371_158, 0) )
 2373.             $p2_S15 = ( (delcl%base_addr)(1 + $I_L2371_158, 0) * 1.0/(delcl%base_addr)(2 + $I_L2371_158, 0) )
 2374.             (cubcoefv%base_addr)(1, 2 + $I_L2371_158, 1, 0) = $p1_S14
 2375.             (cubcoefv%base_addr)(1, 2 + $I_L2371_158, 2, 0) = $p2_S15
 2376.             (cubcoefv%base_addr)(1, 2 + $I_L2371_158, 3, 0) = -( 1.0/( $p2_S15 * ( 1.0 + $p1_S14 + $p2_S15 ) * ( 1.0 + $p2_S15 ) ) )
 2377.             (cubcoefv%base_addr)(1, 2 + $I_L2371_158, 4, 0) = 1.0/( $p2_S15 * ( 1.0 + $p1_S14 ) )
 2378.             (cubcoefv%base_addr)(1, 2 + $I_L2371_158, 5, 0) = 1.0/( $p1_S14 * ( 1.0 + $p2_S15 ) )
 2379.             (cubcoefv%base_addr)(1, 2 + $I_L2371_158, 6, 0) = -( 1.0/( $p1_S14 * ( 1.0 + $p1_S14 ) * ( 1.0 + $p1_S14 + $p2_S15 ) ) )
 2380.             $I_L2371_158 = 1 + $I_L2371_158
 2371.             if ( $I_L2371_158 >= -3 + kmax ) exit
 2371.          enddo
 2371.       endif
 2382.       if (  _substr(start,1,_ltrim(  _substr(start,1,200) )) == 'cold' ) then
 2383.          if ( jbmax > 0 ) then
 2386.             $SC_jperijb_I16 = jperijb%dim_1%EX
 2386.             $SC_jperijb_I17 = jperijb%dim_1%LB
 2386.             $SC_jperijb_I19 = jperijb%dim_2%SM
 2386.             $SC_jperijb_I18 = jperijb%dim_2%EX
 2386.             $SC_jperijb_I20 = jperijb%dim_2%LB
 2385.             $SC_iperijb_I11 = iperijb%dim_1%EX
 2385.             $SC_iperijb_I12 = iperijb%dim_1%LB
 2385.             $SC_iperijb_I14 = iperijb%dim_2%SM
 2385.             $SC_iperijb_I13 = iperijb%dim_2%EX
 2385.             $SC_iperijb_I15 = iperijb%dim_2%LB
 2384.             $SC_ibmaxperjb_I9 = ibmaxperjb%dim_1%EX
 2384.             $SC_ibmaxperjb_I10 = ibmaxperjb%dim_1%LB
 2391.             $SC_cl_I6 = cl%dim_1%EX
 2391.             $SC_cl_I7 = cl%dim_1%LB
 2397.             $SC_usigm_I29 = usigm%dim_2%SM
 2397.             $SC_usigm_I28 = usigm%dim_2%EX
 2397.             $SC_usigm_I30 = usigm%dim_2%LB
 2397.             $SC_usigm_I26 = usigm%dim_1%EX
 2397.             $SC_usigm_I27 = usigm%dim_1%LB
 2391.             $SC_usig_I24 = usig%dim_2%SM
 2391.             $SC_usig_I23 = usig%dim_2%EX
 2391.             $SC_usig_I25 = usig%dim_2%LB
 2391.             $SC_usig_I21 = usig%dim_1%EX
 2391.             $SC_usig_I22 = usig%dim_1%LB
 2389.             if ( sl_twotime_scheme /= .false. ) then
 2390.                if ( kmax > 0 ) then
 2383.                   $I_L2383_216 = 0
 2383.                   do
 2384.                      $t_S17 = (ibmaxperjb%base_addr)(1 + $I_L2383_216, 0)
 2384.                      if ( $t_S17 > 0 ) then
 2384.                         $I_L2384_194 = 0
 2384. !dir$ ivdep
 2384.                         do
 2385.                            $i_S19 = (iperijb%base_addr)(1 + $I_L2384_194, 1 + $I_L2383_216, 0)
 2386.                            $j_S20 = (jperijb%base_addr)(1 + $I_L2384_194, 1 + $I_L2383_216, 0)
 2387.                            (ulonm2d%base_addr)(1 + $I_L2384_194, 1 + $I_L2383_216, 0) = (dellon%base_addr)(1, $j_S20, 0) * ( -1 + $i_S19 )
 2388.                            (ulatm2d%base_addr)(1 + $I_L2384_194, 1 + $I_L2383_216, 0) = -(phi%base_addr)(1, $j_S20, 0)
 2390.                            $SCA_dellon_I34 = (dellon%base_addr)(1, $j_S20, 0)
 2390.                            $SCA_phi_I35 = (phi%base_addr)(1, $j_S20, 0)
 2390.                            $I_L2390_160 = 0
 2390. !dir$ loop_info (automatic) cache_nt( ulonm, usig )
 2390.                            do
 2391.                               (usig%base_addr)(1 + $I_L2384_194 + $t_S17 * $I_L2390_160, 1 + $I_L2383_216, 0) = (cl%base_addr)(1 + $I_L2390_160, 0)
 2392.                               (ulonm%base_addr)(1 + $I_L2384_194 + $t_S17 * $I_L2390_160, 1 + $I_L2383_216, 0) = $SCA_dellon_I34 * ( -1 + $i_S19 )
 2393.                               (ulatm%base_addr)(1 + $I_L2384_194 + $t_S17 * $I_L2390_160, 1 + $I_L2383_216, 0) = -$SCA_phi_I35
 2394.                               $I_L2390_160 = 1 + $I_L2390_160
 2390.                               if ( $I_L2390_160 >= kmax ) exit
 2390.                            enddo
 2402.                            $I_L2384_194 = 1 + $I_L2384_194
 2401.                            if ( $I_L2384_194 >= $t_S17 ) exit
 2401.                         enddo
 2401.                      endif
 2403.                      $I_L2383_216 = 1 + $I_L2383_216
 2402.                      if ( $I_L2383_216 >= jbmax ) exit
 2402.                   enddo
 2402.                else
 2383.                   $I_L2383_200 = 0
 2383.                   do
 2384.                      $t_S17 = (ibmaxperjb%base_addr)(1 + $I_L2383_200, 0)
 2384.                      if ( $t_S17 > 0 ) then
 2384.                         $I_L2384_168 = 0
 2384. !dir$ ivdep
 2384.                         do
 2385.                            $i_S19 = (iperijb%base_addr)(1 + $I_L2384_168, 1 + $I_L2383_200, 0)
 2386.                            $j_S20 = (jperijb%base_addr)(1 + $I_L2384_168, 1 + $I_L2383_200, 0)
 2387.                            (ulonm2d%base_addr)(1 + $I_L2384_168, 1 + $I_L2383_200, 0) = (dellon%base_addr)(1, $j_S20, 0) * ( -1 + $i_S19 )
 2388.                            (ulatm2d%base_addr)(1 + $I_L2384_168, 1 + $I_L2383_200, 0) = -(phi%base_addr)(1, $j_S20, 0)
 2402.                            $I_L2384_168 = 1 + $I_L2384_168
 2401.                            if ( $I_L2384_168 >= $t_S17 ) exit
 2401.                         enddo
 2401.                      endif
 2403.                      $I_L2383_200 = 1 + $I_L2383_200
 2402.                      if ( $I_L2383_200 >= jbmax ) exit
 2402.                   enddo
 2402.                endif
 2402.             else if ( kmax > 0 ) then
 2383.                $I_L2383_220 = 0
 2383.                do
 2384.                   $t_S17 = (ibmaxperjb%base_addr)(1 + $I_L2383_220, 0)
 2384.                   if ( $t_S17 > 0 ) then
 2384.                      $I_L2384_198 = 0
 2384. !dir$ ivdep
 2384.                      do
 2385.                         $i_S19 = (iperijb%base_addr)(1 + $I_L2384_198, 1 + $I_L2383_220, 0)
 2386.                         $j_S20 = (jperijb%base_addr)(1 + $I_L2384_198, 1 + $I_L2383_220, 0)
 2387.                         (ulonm2d%base_addr)(1 + $I_L2384_198, 1 + $I_L2383_220, 0) = (dellon%base_addr)(1, $j_S20, 0) * ( -1 + $i_S19 )
 2388.                         (ulatm2d%base_addr)(1 + $I_L2384_198, 1 + $I_L2383_220, 0) = -(phi%base_addr)(1, $j_S20, 0)
 2396.                         $SCA_phi_I32 = (phi%base_addr)(1, $j_S20, 0)
 2396.                         $SCA_dellon_I33 = (dellon%base_addr)(1, $j_S20, 0)
 2396.                         $I_L2396_166 = 0
 2396. !dir$ loop_info (automatic) cache_nt( ulonm, usigm )
 2396.                         do
 2397.                            (usigm%base_addr)(1 + $I_L2384_198 + $t_S17 * $I_L2396_166, 1 + $I_L2383_220, 0) = (cl%base_addr)(1 + $I_L2396_166, 0)
 2398.                            (ulonm%base_addr)(1 + $I_L2384_198 + $t_S17 * $I_L2396_166, 1 + $I_L2383_220, 0) = $SCA_dellon_I33 * ( -1 + $i_S19 )
 2399.                            (ulatm%base_addr)(1 + $I_L2384_198 + $t_S17 * $I_L2396_166, 1 + $I_L2383_220, 0) = -$SCA_phi_I32
 2400.                            $I_L2396_166 = 1 + $I_L2396_166
 2396.                            if ( $I_L2396_166 >= kmax ) exit
 2396.                         enddo
 2402.                         $I_L2384_198 = 1 + $I_L2384_198
 2401.                         if ( $I_L2384_198 >= $t_S17 ) exit
 2401.                      enddo
 2401.                   endif
 2403.                   $I_L2383_220 = 1 + $I_L2383_220
 2402.                   if ( $I_L2383_220 >= jbmax ) exit
 2402.                enddo
 2402.             else
 2383.                $I_L2383_202 = 0
 2383.                do
 2384.                   $t_S17 = (ibmaxperjb%base_addr)(1 + $I_L2383_202, 0)
 2384.                   if ( $t_S17 > 0 ) then
 2384.                      $I_L2384_170 = 0
 2384. !dir$ ivdep
 2384.                      do
 2385.                         $i_S19 = (iperijb%base_addr)(1 + $I_L2384_170, 1 + $I_L2383_202, 0)
 2386.                         $j_S20 = (jperijb%base_addr)(1 + $I_L2384_170, 1 + $I_L2383_202, 0)
 2387.                         (ulonm2d%base_addr)(1 + $I_L2384_170, 1 + $I_L2383_202, 0) = (dellon%base_addr)(1, $j_S20, 0) * ( -1 + $i_S19 )
 2388.                         (ulatm2d%base_addr)(1 + $I_L2384_170, 1 + $I_L2383_202, 0) = -(phi%base_addr)(1, $j_S20, 0)
 2402.                         $I_L2384_170 = 1 + $I_L2384_170
 2401.                         if ( $I_L2384_170 >= $t_S17 ) exit
 2401.                      enddo
 2401.                   endif
 2403.                   $I_L2383_202 = 1 + $I_L2383_202
 2402.                   if ( $I_L2383_202 >= jbmax ) exit
 2402.                enddo
 2402.             endif
 2402.          endif
 2404.          if ( sl_twotime_scheme /= .false. ) then
 2405.             $F_A33 = _zla( 0, jbmax )
 2405.             $F_A34 = _zla( 0, ( ibmax * kmax ) )
 2405.             if ( and( -$F_A34, -$F_A33 ) < 0 ) then
 2405.                $SC_ulon_I61 = ulon%dim_2%SM
 2405.                $SC_ulon_I59 = ulon%dim_2%EX
 2405.                $SC_ulon_I62 = ulon%dim_2%LB
 2405.                $SC_ulon_I58 = ulon%dim_1%EX
 2405.                $SC_ulon_I60 = ulon%dim_1%LB
 2405.                $I_L2405_204 = 0
 2405.                do
 2405.                   $I_L2405_172 = 0
 2405. !dir$ ivdep
 2405.                   do
 2405.                      (ulon%base_addr)($SC_ulon_I60 + $I_L2405_172, $SC_ulon_I62 + $I_L2405_204, 0) = (ulonm%base_addr)(1 + $I_L2405_172, 1 + $I_L2405_204, 0)
 2405.                      $I_L2405_172 = 1 + $I_L2405_172
 2405.                      if ( $I_L2405_172 >= $F_A34 ) exit
 2405.                   enddo
 2405.                   $I_L2405_204 = 1 + $I_L2405_204
 2405.                   if ( $I_L2405_204 >= $F_A33 ) exit
 2405.                enddo
 2405.             endif
 2406.             $F_A35 = _zla( 0, jbmax )
 2406.             $F_A36 = _zla( 0, ( ibmax * kmax ) )
 2406.             if ( and( -$F_A36, -$F_A35 ) < 0 ) then
 2406.                $SC_ulat_I66 = ulat%dim_2%SM
 2406.                $SC_ulat_I64 = ulat%dim_2%EX
 2406.                $SC_ulat_I67 = ulat%dim_2%LB
 2406.                $SC_ulat_I63 = ulat%dim_1%EX
 2406.                $SC_ulat_I65 = ulat%dim_1%LB
 2406.                $I_L2406_206 = 0
 2406.                do
 2406.                   $I_L2406_174 = 0
 2406. !dir$ ivdep
 2406.                   do
 2406.                      (ulat%base_addr)($SC_ulat_I65 + $I_L2406_174, $SC_ulat_I67 + $I_L2406_206, 0) = (ulatm%base_addr)(1 + $I_L2406_174, 1 + $I_L2406_206, 0)
 2406.                      $I_L2406_174 = 1 + $I_L2406_174
 2406.                      if ( $I_L2406_174 >= $F_A36 ) exit
 2406.                   enddo
 2406.                   $I_L2406_206 = 1 + $I_L2406_206
 2406.                   if ( $I_L2406_206 >= $F_A35 ) exit
 2406.                enddo
 2406.             endif
 2407.             $F_A37 = _zla( 0, jbmax )
 2407.             $F_A38 = _zla( 0, ibmax )
 2407.             if ( and( -$F_A38, -$F_A37 ) < 0 ) then
 2407.                $SC_ulon2d_I71 = ulon2d%dim_2%SM
 2407.                $SC_ulon2d_I69 = ulon2d%dim_2%EX
 2407.                $SC_ulon2d_I72 = ulon2d%dim_2%LB
 2407.                $SC_ulon2d_I68 = ulon2d%dim_1%EX
 2407.                $SC_ulon2d_I70 = ulon2d%dim_1%LB
 2407.                $I_L2407_208 = 0
 2407.                do
 2407.                   $I_L2407_176 = 0
 2407. !dir$ ivdep
 2407.                   do
 2407.                      (ulon2d%base_addr)($SC_ulon2d_I70 + $I_L2407_176, $SC_ulon2d_I72 + $I_L2407_208, 0) = (ulonm2d%base_addr)(1 + $I_L2407_176, 1 + $I_L2407_208, 0)
 2407.                      $I_L2407_176 = 1 + $I_L2407_176
 2407.                      if ( $I_L2407_176 >= $F_A38 ) exit
 2407.                   enddo
 2407.                   $I_L2407_208 = 1 + $I_L2407_208
 2407.                   if ( $I_L2407_208 >= $F_A37 ) exit
 2407.                enddo
 2407.             endif
 2408.             $F_A39 = _zla( 0, jbmax )
 2408.             $F_A40 = _zla( 0, ibmax )
 2408.             if ( and( -$F_A40, -$F_A39 ) < 0 ) then
 2408.                $SC_ulat2d_I76 = ulat2d%dim_2%SM
 2408.                $SC_ulat2d_I74 = ulat2d%dim_2%EX
 2408.                $SC_ulat2d_I77 = ulat2d%dim_2%LB
 2408.                $SC_ulat2d_I73 = ulat2d%dim_1%EX
 2408.                $SC_ulat2d_I75 = ulat2d%dim_1%LB
 2408.                $I_L2408_210 = 0
 2408.                do
 2408.                   $I_L2408_178 = 0
 2408. !dir$ ivdep
 2408.                   do
 2408.                      (ulat2d%base_addr)($SC_ulat2d_I75 + $I_L2408_178, $SC_ulat2d_I77 + $I_L2408_210, 0) = (ulatm2d%base_addr)(1 + $I_L2408_178, 1 + $I_L2408_210, 0)
 2408.                      $I_L2408_178 = 1 + $I_L2408_178
 2408.                      if ( $I_L2408_178 >= $F_A40 ) exit
 2408.                   enddo
 2408.                   $I_L2408_210 = 1 + $I_L2408_210
 2408.                   if ( $I_L2408_210 >= $F_A39 ) exit
 2408.                enddo
 2408.             endif
 2408.          endif
 2408.       endif
 2412.       if ( -2 + ibmax >= 0 ) then
 2412.          $I_L2412_218 = 0
 2412.          do
 2413.             $F_A41 = _zla( 0, ( 4 + jmax ) )
 2413.             if ( _zla( 0, ( 4 + jmax ) ) > 0 ) then
 2413.                $I_L2413_180 = 0
 2413. !dir$ ivdep
 2413.                do
 2413.                   (phi%base_addr)(2 + $I_L2412_218, -1 + $I_L2413_180, 0) = (phi%base_addr)(1, -1 + $I_L2413_180, 0)
 2413.                   $I_L2413_180 = 1 + $I_L2413_180
 2413.                   if ( $I_L2413_180 >= $F_A41 ) exit
 2413.                enddo
 2413.             endif
 2414.             $F_A42 = _zla( 0, ( 4 + jmax ) )
 2414.             if ( _zla( 0, ( 4 + jmax ) ) > 0 ) then
 2414.                $I_L2414_182 = 0
 2414. !dir$ ivdep
 2414.                do
 2414.                   (delphi%base_addr)(2 + $I_L2412_218, -1 + $I_L2414_182, 0) = (delphi%base_addr)(1, -1 + $I_L2414_182, 0)
 2414.                   $I_L2414_182 = 1 + $I_L2414_182
 2414.                   if ( $I_L2414_182 >= $F_A42 ) exit
 2414.                enddo
 2414.             endif
 2415.             $F_A43 = _zla( 0, ( 4 + jmax ) )
 2415.             if ( _zla( 0, ( 4 + jmax ) ) > 0 ) then
 2415.                $I_L2415_184 = 0
 2415. !dir$ ivdep
 2415.                do
 2415.                   (dellon%base_addr)(2 + $I_L2412_218, -1 + $I_L2415_184, 0) = (dellon%base_addr)(1, -1 + $I_L2415_184, 0)
 2415.                   $I_L2415_184 = 1 + $I_L2415_184
 2415.                   if ( $I_L2415_184 >= $F_A43 ) exit
 2415.                enddo
 2415.             endif
 2416.             $F_A44 = ( max( 0, 1 + kmaxref ) )
 2416.             if ( kmaxref >= 0 ) then
 2416.                $I_L2416_186 = 0
 2416. !dir$ ivdep
 2416.                do
 2416.                   (ksigref%base_addr)(2 + $I_L2412_218, $I_L2416_186, 0) = (ksigref%base_addr)(1, $I_L2416_186, 0)
 2416.                   $I_L2416_186 = 1 + $I_L2416_186
 2416.                   if ( $I_L2416_186 >= $F_A44 ) exit
 2416.                enddo
 2416.             endif
 2417.             $F_A45 = ( max( 0, 1 + jmaxref ) )
 2417.             if ( jmaxref >= 0 ) then
 2417.                $I_L2417_188 = 0
 2417. !dir$ ivdep
 2417.                do
 2417.                   (jphiref%base_addr)(2 + $I_L2412_218, $I_L2417_188, 0) = (jphiref%base_addr)(1, $I_L2417_188, 0)
 2417.                   $I_L2417_188 = 1 + $I_L2417_188
 2417.                   if ( $I_L2417_188 >= $F_A45 ) exit
 2417.                enddo
 2417.             endif
 2418.             $F_A46 = _zla( 0, ( 1 + jmax ) )
 2418.             if ( _zla( 0, ( 1 + jmax ) ) > 0 ) then
 2418.                $I_L2418_212 = 0
 2418.                do
 2418.                   $I_L2418_190 = 0
 2418. !dir$ ivdep
 2418.                   do
 2418.                      (cubcoef%base_addr)(2 + $I_L2412_218, $I_L2418_190, 1 + $I_L2418_212, 0) = (cubcoef%base_addr)(1, $I_L2418_190, 1 + $I_L2418_212, 0)
 2418.                      $I_L2418_190 = 1 + $I_L2418_190
 2418.                      if ( $I_L2418_190 >= $F_A46 ) exit
 2418.                   enddo
 2418.                   $I_L2418_212 = 1 + $I_L2418_212
 2418.                   if ( $I_L2418_212 >= 6 ) exit
 2418.                enddo
 2418.             endif
 2419.             $F_A47 = _zla( 0, kmax )
 2419.             if ( _zla( 0, kmax ) > 0 ) then
 2419.                $I_L2419_214 = 0
 2419.                do
 2419.                   $I_L2419_192 = 0
 2419. !dir$ ivdep
 2419.                   do
 2419.                      (cubcoefv%base_addr)(2 + $I_L2412_218, 1 + $I_L2419_192, 1 + $I_L2419_214, 0) = (cubcoefv%base_addr)(1, 1 + $I_L2419_192, 1 + $I_L2419_214, 0)
 2419.                      $I_L2419_192 = 1 + $I_L2419_192
 2419.                      if ( $I_L2419_192 >= $F_A47 ) exit
 2419.                   enddo
 2419.                   $I_L2419_214 = 1 + $I_L2419_214
 2419.                   if ( $I_L2419_214 >= 6 ) exit
 2419.                enddo
 2419.             endif
 2420.             $I_L2412_218 = 1 + $I_L2412_218
 2412.             if ( $I_L2412_218 >= -1 + ibmax ) exit
 2412.          enddo
 2412.       endif
 2421.       if ( -1 + kmax > 0 ) then
 2423.          $SC_cl_I6 = cl%dim_1%EX
 2423.          $SC_cl_I7 = cl%dim_1%LB
 2424.          $SC_delcl_I4 = delcl%dim_1%EX
 2424.          $SC_delcl_I5 = delcl%dim_1%LB
 2422.          if ( ibmax > 0 ) then
 2421.             $I_L2421_196 = 0
 2421.             do
 2422.                $SCA_cl_I56 = (cl%base_addr)(1 + $I_L2421_196, 0)
 2422.                $SCA_delcl_I57 = (delcl%base_addr)(1 + $I_L2421_196, 0)
 2422.                $I_L2422_162 = 0
 2422. !dir$ ivdep
 2422.                do
 2423.                   (sigma%base_addr)(1 + $I_L2422_162, 1 + $I_L2421_196, 0) = $SCA_cl_I56
 2424.                   (delsigma%base_addr)(1 + $I_L2422_162, 1 + $I_L2421_196, 0) = $SCA_delcl_I57
 2425.                   $I_L2422_162 = 1 + $I_L2422_162
 2422.                   if ( $I_L2422_162 >= ibmax ) exit
 2422.                enddo
 2426.                $I_L2421_196 = 1 + $I_L2421_196
 2425.                if ( $I_L2421_196 >= -1 + kmax ) exit
 2425.             enddo
 2425.          endif
 2425.       endif
 2427.       if ( ibmax > 0 ) then
 2428.          $SC_cl_I31 = (cl%base_addr)(kmax, 0)
 2427.          $I_L2427_164 = 0
 2427. !dir$ ivdep
 2427.          do
 2428.             (sigma%base_addr)(1 + $I_L2427_164, kmax, 0) = $SC_cl_I31
 2429.             $I_L2427_164 = 1 + $I_L2427_164
 2427.             if ( $I_L2427_164 >= ibmax ) exit
 2427.          enddo
 2427.       endif
 2431.       return
 2431.       end
 2431.       
  136.       
  136.       module semilagrangian
  136.       end
  136.       
