       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  FieldsPhysics.f90
       !        File                  :  FieldsPhysics.opt
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
  302.       
  302.       subroutine initfieldsphyscs( ibmax, kmax, jbmax, imax_in, jmax_in )
  310.       imax = imax_in
  311.       jmax = jmax_in
  315.       sigki%header%a_contig = 1
  315.       sigki%dim_1%LB = 1
  315.       sigki%dim_1%EX = _zla( 0, kmax )
  315.       sigki%dim_1%SM = 1
  315.       $_allo_P0(0) = 0x1000000000001L
  315.       $_allo_P0(1) = loc( sigki )
  315.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
  316.       if ( kmax > 0 ) then
  317.          $SC_sl_I0 = sl%dim_1%EX
  317.          $SC_sl_I1 = sl%dim_1%LB
  316.          $I_L316_4 = 0
  316. !dir$ ivdep
  316.          do
  317.             (sigki%base_addr)(1 + $I_L316_4, 0) = _expn( -2.8573561616563808e-1 * log( (sl%base_addr)(1 + $I_L316_4, 0) ) )
  318.             $I_L316_4 = 1 + $I_L316_4
  316.             if ( $I_L316_4 >= kmax ) exit
  316.          enddo
  316.       endif
  321.       yswtoadown%header%a_contig = 1
  321.       yswtoadown%dim_1%LB = 1
  321.       yswtoadown%dim_1%EX = ( max( 0, ibmax ) )
  321.       yswtoadown%dim_1%SM = 1
  321.       yswtoadown%dim_2%LB = 1
  321.       yswtoadown%dim_2%EX = ( max( 0, jbmax ) )
  321.       yswtoadown%dim_2%SM = ( max( 0, ibmax ) )
  321.       $_allo_P1(0) = 0x1000000000001L
  321.       $_allo_P1(1) = loc( yswtoadown )
  321.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
  322.       $F_A33 = ( max( 0, jbmax ) )
  322.       $F_A34 = ( max( 0, ibmax ) )
  322.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
  322.          $I_A2 = 0
  322.          do
  322.             $I_A1 = 0
  322. !dir$ ivdep
  322.             do
  322.                (yswtoadown%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  322.                $I_A1 = 1 + $I_A1
  322.                if ( $I_A1 >= $F_A34 ) exit
  322.             enddo
  322.             $I_A2 = 1 + $I_A2
  322.             if ( $I_A2 >= $F_A33 ) exit
  322.          enddo
  322.       endif
  323.       yvisbeam%header%a_contig = 1
  323.       yvisbeam%dim_1%LB = 1
  323.       yvisbeam%dim_1%EX = ( max( 0, ibmax ) )
  323.       yvisbeam%dim_1%SM = 1
  323.       yvisbeam%dim_2%LB = 1
  323.       yvisbeam%dim_2%EX = ( max( 0, jbmax ) )
  323.       yvisbeam%dim_2%SM = ( max( 0, ibmax ) )
  323.       $_allo_P2(0) = 0x1000000000001L
  323.       $_allo_P2(1) = loc( yvisbeam )
  323.       call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
  324.       $F_A35 = ( max( 0, jbmax ) )
  324.       $F_A36 = ( max( 0, ibmax ) )
  324.       if ( and( -$F_A36, -$F_A35 ) < 0 ) then
  324.          $I_A2 = 0
  324.          do
  324.             $I_A1 = 0
  324. !dir$ ivdep
  324.             do
  324.                (yvisbeam%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  324.                $I_A1 = 1 + $I_A1
  324.                if ( $I_A1 >= $F_A36 ) exit
  324.             enddo
  324.             $I_A2 = 1 + $I_A2
  324.             if ( $I_A2 >= $F_A35 ) exit
  324.          enddo
  324.       endif
  325.       yvisdiff%header%a_contig = 1
  325.       yvisdiff%dim_1%LB = 1
  325.       yvisdiff%dim_1%EX = ( max( 0, ibmax ) )
  325.       yvisdiff%dim_1%SM = 1
  325.       yvisdiff%dim_2%LB = 1
  325.       yvisdiff%dim_2%EX = ( max( 0, jbmax ) )
  325.       yvisdiff%dim_2%SM = ( max( 0, ibmax ) )
  325.       $_allo_P3(0) = 0x1000000000001L
  325.       $_allo_P3(1) = loc( yvisdiff )
  325.       call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
  326.       $F_A37 = ( max( 0, jbmax ) )
  326.       $F_A38 = ( max( 0, ibmax ) )
  326.       if ( and( -$F_A38, -$F_A37 ) < 0 ) then
  326.          $I_A2 = 0
  326.          do
  326.             $I_A1 = 0
  326. !dir$ ivdep
  326.             do
  326.                (yvisdiff%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  326.                $I_A1 = 1 + $I_A1
  326.                if ( $I_A1 >= $F_A38 ) exit
  326.             enddo
  326.             $I_A2 = 1 + $I_A2
  326.             if ( $I_A2 >= $F_A37 ) exit
  326.          enddo
  326.       endif
  327.       ynirbeam%header%a_contig = 1
  327.       ynirbeam%dim_1%LB = 1
  327.       ynirbeam%dim_1%EX = ( max( 0, ibmax ) )
  327.       ynirbeam%dim_1%SM = 1
  327.       ynirbeam%dim_2%LB = 1
  327.       ynirbeam%dim_2%EX = ( max( 0, jbmax ) )
  327.       ynirbeam%dim_2%SM = ( max( 0, ibmax ) )
  327.       $_allo_P4(0) = 0x1000000000001L
  327.       $_allo_P4(1) = loc( ynirbeam )
  327.       call __allocate( $_allo_P4, 0, 0, _fcd( 0, 0 ) )
  328.       $F_A39 = ( max( 0, jbmax ) )
  328.       $F_A40 = ( max( 0, ibmax ) )
  328.       if ( and( -$F_A40, -$F_A39 ) < 0 ) then
  328.          $I_A2 = 0
  328.          do
  328.             $I_A1 = 0
  328. !dir$ ivdep
  328.             do
  328.                (ynirbeam%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  328.                $I_A1 = 1 + $I_A1
  328.                if ( $I_A1 >= $F_A40 ) exit
  328.             enddo
  328.             $I_A2 = 1 + $I_A2
  328.             if ( $I_A2 >= $F_A39 ) exit
  328.          enddo
  328.       endif
  329.       ynirdiff%header%a_contig = 1
  329.       ynirdiff%dim_1%LB = 1
  329.       ynirdiff%dim_1%EX = ( max( 0, ibmax ) )
  329.       ynirdiff%dim_1%SM = 1
  329.       ynirdiff%dim_2%LB = 1
  329.       ynirdiff%dim_2%EX = ( max( 0, jbmax ) )
  329.       ynirdiff%dim_2%SM = ( max( 0, ibmax ) )
  329.       $_allo_P5(0) = 0x1000000000001L
  329.       $_allo_P5(1) = loc( ynirdiff )
  329.       call __allocate( $_allo_P5, 0, 0, _fcd( 0, 0 ) )
  330.       $F_A41 = ( max( 0, jbmax ) )
  330.       $F_A42 = ( max( 0, ibmax ) )
  330.       if ( and( -$F_A42, -$F_A41 ) < 0 ) then
  330.          $I_A2 = 0
  330.          do
  330.             $I_A1 = 0
  330. !dir$ ivdep
  330.             do
  330.                (ynirdiff%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  330.                $I_A1 = 1 + $I_A1
  330.                if ( $I_A1 >= $F_A42 ) exit
  330.             enddo
  330.             $I_A2 = 1 + $I_A2
  330.             if ( $I_A2 >= $F_A41 ) exit
  330.          enddo
  330.       endif
  331.       yvisbeamc%header%a_contig = 1
  331.       yvisbeamc%dim_1%LB = 1
  331.       yvisbeamc%dim_1%EX = ( max( 0, ibmax ) )
  331.       yvisbeamc%dim_1%SM = 1
  331.       yvisbeamc%dim_2%LB = 1
  331.       yvisbeamc%dim_2%EX = ( max( 0, jbmax ) )
  331.       yvisbeamc%dim_2%SM = ( max( 0, ibmax ) )
  331.       $_allo_P6(0) = 0x1000000000001L
  331.       $_allo_P6(1) = loc( yvisbeamc )
  331.       call __allocate( $_allo_P6, 0, 0, _fcd( 0, 0 ) )
  332.       $F_A43 = ( max( 0, jbmax ) )
  332.       $F_A44 = ( max( 0, ibmax ) )
  332.       if ( and( -$F_A44, -$F_A43 ) < 0 ) then
  332.          $I_A2 = 0
  332.          do
  332.             $I_A1 = 0
  332. !dir$ ivdep
  332.             do
  332.                (yvisbeamc%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  332.                $I_A1 = 1 + $I_A1
  332.                if ( $I_A1 >= $F_A44 ) exit
  332.             enddo
  332.             $I_A2 = 1 + $I_A2
  332.             if ( $I_A2 >= $F_A43 ) exit
  332.          enddo
  332.       endif
  333.       yvisdiffc%header%a_contig = 1
  333.       yvisdiffc%dim_1%LB = 1
  333.       yvisdiffc%dim_1%EX = ( max( 0, ibmax ) )
  333.       yvisdiffc%dim_1%SM = 1
  333.       yvisdiffc%dim_2%LB = 1
  333.       yvisdiffc%dim_2%EX = ( max( 0, jbmax ) )
  333.       yvisdiffc%dim_2%SM = ( max( 0, ibmax ) )
  333.       $_allo_P7(0) = 0x1000000000001L
  333.       $_allo_P7(1) = loc( yvisdiffc )
  333.       call __allocate( $_allo_P7, 0, 0, _fcd( 0, 0 ) )
  334.       $F_A45 = ( max( 0, jbmax ) )
  334.       $F_A46 = ( max( 0, ibmax ) )
  334.       if ( and( -$F_A46, -$F_A45 ) < 0 ) then
  334.          $I_A2 = 0
  334.          do
  334.             $I_A1 = 0
  334. !dir$ ivdep
  334.             do
  334.                (yvisdiffc%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  334.                $I_A1 = 1 + $I_A1
  334.                if ( $I_A1 >= $F_A46 ) exit
  334.             enddo
  334.             $I_A2 = 1 + $I_A2
  334.             if ( $I_A2 >= $F_A45 ) exit
  334.          enddo
  334.       endif
  335.       ynirbeamc%header%a_contig = 1
  335.       ynirbeamc%dim_1%LB = 1
  335.       ynirbeamc%dim_1%EX = ( max( 0, ibmax ) )
  335.       ynirbeamc%dim_1%SM = 1
  335.       ynirbeamc%dim_2%LB = 1
  335.       ynirbeamc%dim_2%EX = ( max( 0, jbmax ) )
  335.       ynirbeamc%dim_2%SM = ( max( 0, ibmax ) )
  335.       $_allo_P8(0) = 0x1000000000001L
  335.       $_allo_P8(1) = loc( ynirbeamc )
  335.       call __allocate( $_allo_P8, 0, 0, _fcd( 0, 0 ) )
  336.       $F_A47 = ( max( 0, jbmax ) )
  336.       $F_A48 = ( max( 0, ibmax ) )
  336.       if ( and( -$F_A48, -$F_A47 ) < 0 ) then
  336.          $I_A2 = 0
  336.          do
  336.             $I_A1 = 0
  336. !dir$ ivdep
  336.             do
  336.                (ynirbeamc%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  336.                $I_A1 = 1 + $I_A1
  336.                if ( $I_A1 >= $F_A48 ) exit
  336.             enddo
  336.             $I_A2 = 1 + $I_A2
  336.             if ( $I_A2 >= $F_A47 ) exit
  336.          enddo
  336.       endif
  337.       ynirdiffc%header%a_contig = 1
  337.       ynirdiffc%dim_1%LB = 1
  337.       ynirdiffc%dim_1%EX = ( max( 0, ibmax ) )
  337.       ynirdiffc%dim_1%SM = 1
  337.       ynirdiffc%dim_2%LB = 1
  337.       ynirdiffc%dim_2%EX = ( max( 0, jbmax ) )
  337.       ynirdiffc%dim_2%SM = ( max( 0, ibmax ) )
  337.       $_allo_P9(0) = 0x1000000000001L
  337.       $_allo_P9(1) = loc( ynirdiffc )
  337.       call __allocate( $_allo_P9, 0, 0, _fcd( 0, 0 ) )
  338.       $F_A49 = ( max( 0, jbmax ) )
  338.       $F_A50 = ( max( 0, ibmax ) )
  338.       if ( and( -$F_A50, -$F_A49 ) < 0 ) then
  338.          $I_A2 = 0
  338.          do
  338.             $I_A1 = 0
  338. !dir$ ivdep
  338.             do
  338.                (ynirdiffc%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  338.                $I_A1 = 1 + $I_A1
  338.                if ( $I_A1 >= $F_A50 ) exit
  338.             enddo
  338.             $I_A2 = 1 + $I_A2
  338.             if ( $I_A2 >= $F_A49 ) exit
  338.          enddo
  338.       endif
  339.       yswheatrate%header%a_contig = 1
  339.       yswheatrate%dim_1%LB = 1
  339.       yswheatrate%dim_1%EX = ( max( 0, ibmax ) )
  339.       yswheatrate%dim_1%SM = 1
  339.       yswheatrate%dim_2%LB = 1
  339.       yswheatrate%dim_2%EX = ( max( 0, kmax ) )
  339.       yswheatrate%dim_2%SM = ( max( 0, ibmax ) )
  339.       yswheatrate%dim_3%LB = 1
  339.       yswheatrate%dim_3%EX = ( max( 0, jbmax ) )
  339.       yswheatrate%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  339.       $_allo_P10(0) = 0x1000000000001L
  339.       $_allo_P10(1) = loc( yswheatrate )
  339.       call __allocate( $_allo_P10, 0, 0, _fcd( 0, 0 ) )
  340.       $F_A51 = ( max( 0, jbmax ) )
  340.       $F_A52 = ( max( 0, kmax ) )
  340.       $F_A53 = ( max( 0, ibmax ) )
  340.       if ( and( and( -$F_A52, -$F_A51 ), -$F_A53 ) < 0 ) then
  340.          $I_A3 = 0
  340.          do
  340.             $I_A2 = 0
  340.             do
  340.                $I_A1 = 0
  340. !dir$ ivdep
  340.                do
  340.                   (yswheatrate%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  340.                   $I_A1 = 1 + $I_A1
  340.                   if ( $I_A1 >= $F_A53 ) exit
  340.                enddo
  340.                $I_A2 = 1 + $I_A2
  340.                if ( $I_A2 >= $F_A52 ) exit
  340.             enddo
  340.             $I_A3 = 1 + $I_A3
  340.             if ( $I_A3 >= $F_A51 ) exit
  340.          enddo
  340.       endif
  341.       yswheatratec%header%a_contig = 1
  341.       yswheatratec%dim_1%LB = 1
  341.       yswheatratec%dim_1%EX = ( max( 0, ibmax ) )
  341.       yswheatratec%dim_1%SM = 1
  341.       yswheatratec%dim_2%LB = 1
  341.       yswheatratec%dim_2%EX = ( max( 0, kmax ) )
  341.       yswheatratec%dim_2%SM = ( max( 0, ibmax ) )
  341.       yswheatratec%dim_3%LB = 1
  341.       yswheatratec%dim_3%EX = ( max( 0, jbmax ) )
  341.       yswheatratec%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  341.       $_allo_P11(0) = 0x1000000000001L
  341.       $_allo_P11(1) = loc( yswheatratec )
  341.       call __allocate( $_allo_P11, 0, 0, _fcd( 0, 0 ) )
  342.       $F_A54 = ( max( 0, jbmax ) )
  342.       $F_A55 = ( max( 0, kmax ) )
  342.       $F_A56 = ( max( 0, ibmax ) )
  342.       if ( and( and( -$F_A55, -$F_A54 ), -$F_A56 ) < 0 ) then
  342.          $I_A3 = 0
  342.          do
  342.             $I_A2 = 0
  342.             do
  342.                $I_A1 = 0
  342. !dir$ ivdep
  342.                do
  342.                   (yswheatratec%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  342.                   $I_A1 = 1 + $I_A1
  342.                   if ( $I_A1 >= $F_A56 ) exit
  342.                enddo
  342.                $I_A2 = 1 + $I_A2
  342.                if ( $I_A2 >= $F_A55 ) exit
  342.             enddo
  342.             $I_A3 = 1 + $I_A3
  342.             if ( $I_A3 >= $F_A54 ) exit
  342.          enddo
  342.       endif
  343.       yswsfcnet%header%a_contig = 1
  343.       yswsfcnet%dim_1%LB = 1
  343.       yswsfcnet%dim_1%EX = ( max( 0, ibmax ) )
  343.       yswsfcnet%dim_1%SM = 1
  343.       yswsfcnet%dim_2%LB = 1
  343.       yswsfcnet%dim_2%EX = ( max( 0, jbmax ) )
  343.       yswsfcnet%dim_2%SM = ( max( 0, ibmax ) )
  343.       $_allo_P12(0) = 0x1000000000001L
  343.       $_allo_P12(1) = loc( yswsfcnet )
  343.       call __allocate( $_allo_P12, 0, 0, _fcd( 0, 0 ) )
  344.       $F_A57 = ( max( 0, jbmax ) )
  344.       $F_A58 = ( max( 0, ibmax ) )
  344.       if ( and( -$F_A58, -$F_A57 ) < 0 ) then
  344.          $I_A2 = 0
  344.          do
  344.             $I_A1 = 0
  344. !dir$ ivdep
  344.             do
  344.                (yswsfcnet%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  344.                $I_A1 = 1 + $I_A1
  344.                if ( $I_A1 >= $F_A58 ) exit
  344.             enddo
  344.             $I_A2 = 1 + $I_A2
  344.             if ( $I_A2 >= $F_A57 ) exit
  344.          enddo
  344.       endif
  345.       yswsfcnetc%header%a_contig = 1
  345.       yswsfcnetc%dim_1%LB = 1
  345.       yswsfcnetc%dim_1%EX = ( max( 0, ibmax ) )
  345.       yswsfcnetc%dim_1%SM = 1
  345.       yswsfcnetc%dim_2%LB = 1
  345.       yswsfcnetc%dim_2%EX = ( max( 0, jbmax ) )
  345.       yswsfcnetc%dim_2%SM = ( max( 0, ibmax ) )
  345.       $_allo_P13(0) = 0x1000000000001L
  345.       $_allo_P13(1) = loc( yswsfcnetc )
  345.       call __allocate( $_allo_P13, 0, 0, _fcd( 0, 0 ) )
  346.       $F_A59 = ( max( 0, jbmax ) )
  346.       $F_A60 = ( max( 0, ibmax ) )
  346.       if ( and( -$F_A60, -$F_A59 ) < 0 ) then
  346.          $I_A2 = 0
  346.          do
  346.             $I_A1 = 0
  346. !dir$ ivdep
  346.             do
  346.                (yswsfcnetc%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  346.                $I_A1 = 1 + $I_A1
  346.                if ( $I_A1 >= $F_A60 ) exit
  346.             enddo
  346.             $I_A2 = 1 + $I_A2
  346.             if ( $I_A2 >= $F_A59 ) exit
  346.          enddo
  346.       endif
  349.       rswtoadown%header%a_contig = 1
  349.       rswtoadown%dim_1%LB = 1
  349.       rswtoadown%dim_1%EX = ( max( 0, ibmax ) )
  349.       rswtoadown%dim_1%SM = 1
  349.       rswtoadown%dim_2%LB = 1
  349.       rswtoadown%dim_2%EX = ( max( 0, jbmax ) )
  349.       rswtoadown%dim_2%SM = ( max( 0, ibmax ) )
  349.       $_allo_P14(0) = 0x1000000000001L
  349.       $_allo_P14(1) = loc( rswtoadown )
  349.       call __allocate( $_allo_P14, 0, 0, _fcd( 0, 0 ) )
  350.       $F_A61 = ( max( 0, jbmax ) )
  350.       $F_A62 = ( max( 0, ibmax ) )
  350.       if ( and( -$F_A62, -$F_A61 ) < 0 ) then
  350.          $I_A2 = 0
  350.          do
  350.             $I_A1 = 0
  350. !dir$ ivdep
  350.             do
  350.                (rswtoadown%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  350.                $I_A1 = 1 + $I_A1
  350.                if ( $I_A1 >= $F_A62 ) exit
  350.             enddo
  350.             $I_A2 = 1 + $I_A2
  350.             if ( $I_A2 >= $F_A61 ) exit
  350.          enddo
  350.       endif
  351.       rvisbeam%header%a_contig = 1
  351.       rvisbeam%dim_1%LB = 1
  351.       rvisbeam%dim_1%EX = ( max( 0, ibmax ) )
  351.       rvisbeam%dim_1%SM = 1
  351.       rvisbeam%dim_2%LB = 1
  351.       rvisbeam%dim_2%EX = ( max( 0, jbmax ) )
  351.       rvisbeam%dim_2%SM = ( max( 0, ibmax ) )
  351.       $_allo_P15(0) = 0x1000000000001L
  351.       $_allo_P15(1) = loc( rvisbeam )
  351.       call __allocate( $_allo_P15, 0, 0, _fcd( 0, 0 ) )
  352.       $F_A63 = ( max( 0, jbmax ) )
  352.       $F_A64 = ( max( 0, ibmax ) )
  352.       if ( and( -$F_A64, -$F_A63 ) < 0 ) then
  352.          $I_A2 = 0
  352.          do
  352.             $I_A1 = 0
  352. !dir$ ivdep
  352.             do
  352.                (rvisbeam%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  352.                $I_A1 = 1 + $I_A1
  352.                if ( $I_A1 >= $F_A64 ) exit
  352.             enddo
  352.             $I_A2 = 1 + $I_A2
  352.             if ( $I_A2 >= $F_A63 ) exit
  352.          enddo
  352.       endif
  353.       rvisdiff%header%a_contig = 1
  353.       rvisdiff%dim_1%LB = 1
  353.       rvisdiff%dim_1%EX = ( max( 0, ibmax ) )
  353.       rvisdiff%dim_1%SM = 1
  353.       rvisdiff%dim_2%LB = 1
  353.       rvisdiff%dim_2%EX = ( max( 0, jbmax ) )
  353.       rvisdiff%dim_2%SM = ( max( 0, ibmax ) )
  353.       $_allo_P16(0) = 0x1000000000001L
  353.       $_allo_P16(1) = loc( rvisdiff )
  353.       call __allocate( $_allo_P16, 0, 0, _fcd( 0, 0 ) )
  354.       $F_A65 = ( max( 0, jbmax ) )
  354.       $F_A66 = ( max( 0, ibmax ) )
  354.       if ( and( -$F_A66, -$F_A65 ) < 0 ) then
  354.          $I_A2 = 0
  354.          do
  354.             $I_A1 = 0
  354. !dir$ ivdep
  354.             do
  354.                (rvisdiff%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  354.                $I_A1 = 1 + $I_A1
  354.                if ( $I_A1 >= $F_A66 ) exit
  354.             enddo
  354.             $I_A2 = 1 + $I_A2
  354.             if ( $I_A2 >= $F_A65 ) exit
  354.          enddo
  354.       endif
  355.       rnirbeam%header%a_contig = 1
  355.       rnirbeam%dim_1%LB = 1
  355.       rnirbeam%dim_1%EX = ( max( 0, ibmax ) )
  355.       rnirbeam%dim_1%SM = 1
  355.       rnirbeam%dim_2%LB = 1
  355.       rnirbeam%dim_2%EX = ( max( 0, jbmax ) )
  355.       rnirbeam%dim_2%SM = ( max( 0, ibmax ) )
  355.       $_allo_P17(0) = 0x1000000000001L
  355.       $_allo_P17(1) = loc( rnirbeam )
  355.       call __allocate( $_allo_P17, 0, 0, _fcd( 0, 0 ) )
  356.       $F_A67 = ( max( 0, jbmax ) )
  356.       $F_A68 = ( max( 0, ibmax ) )
  356.       if ( and( -$F_A68, -$F_A67 ) < 0 ) then
  356.          $I_A2 = 0
  356.          do
  356.             $I_A1 = 0
  356. !dir$ ivdep
  356.             do
  356.                (rnirbeam%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  356.                $I_A1 = 1 + $I_A1
  356.                if ( $I_A1 >= $F_A68 ) exit
  356.             enddo
  356.             $I_A2 = 1 + $I_A2
  356.             if ( $I_A2 >= $F_A67 ) exit
  356.          enddo
  356.       endif
  357.       rnirdiff%header%a_contig = 1
  357.       rnirdiff%dim_1%LB = 1
  357.       rnirdiff%dim_1%EX = ( max( 0, ibmax ) )
  357.       rnirdiff%dim_1%SM = 1
  357.       rnirdiff%dim_2%LB = 1
  357.       rnirdiff%dim_2%EX = ( max( 0, jbmax ) )
  357.       rnirdiff%dim_2%SM = ( max( 0, ibmax ) )
  357.       $_allo_P18(0) = 0x1000000000001L
  357.       $_allo_P18(1) = loc( rnirdiff )
  357.       call __allocate( $_allo_P18, 0, 0, _fcd( 0, 0 ) )
  358.       $F_A69 = ( max( 0, jbmax ) )
  358.       $F_A70 = ( max( 0, ibmax ) )
  358.       if ( and( -$F_A70, -$F_A69 ) < 0 ) then
  358.          $I_A2 = 0
  358.          do
  358.             $I_A1 = 0
  358. !dir$ ivdep
  358.             do
  358.                (rnirdiff%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  358.                $I_A1 = 1 + $I_A1
  358.                if ( $I_A1 >= $F_A70 ) exit
  358.             enddo
  358.             $I_A2 = 1 + $I_A2
  358.             if ( $I_A2 >= $F_A69 ) exit
  358.          enddo
  358.       endif
  359.       rvisbeamc%header%a_contig = 1
  359.       rvisbeamc%dim_1%LB = 1
  359.       rvisbeamc%dim_1%EX = ( max( 0, ibmax ) )
  359.       rvisbeamc%dim_1%SM = 1
  359.       rvisbeamc%dim_2%LB = 1
  359.       rvisbeamc%dim_2%EX = ( max( 0, jbmax ) )
  359.       rvisbeamc%dim_2%SM = ( max( 0, ibmax ) )
  359.       $_allo_P19(0) = 0x1000000000001L
  359.       $_allo_P19(1) = loc( rvisbeamc )
  359.       call __allocate( $_allo_P19, 0, 0, _fcd( 0, 0 ) )
  360.       $F_A71 = ( max( 0, jbmax ) )
  360.       $F_A72 = ( max( 0, ibmax ) )
  360.       if ( and( -$F_A72, -$F_A71 ) < 0 ) then
  360.          $I_A2 = 0
  360.          do
  360.             $I_A1 = 0
  360. !dir$ ivdep
  360.             do
  360.                (rvisbeamc%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  360.                $I_A1 = 1 + $I_A1
  360.                if ( $I_A1 >= $F_A72 ) exit
  360.             enddo
  360.             $I_A2 = 1 + $I_A2
  360.             if ( $I_A2 >= $F_A71 ) exit
  360.          enddo
  360.       endif
  361.       rvisdiffc%header%a_contig = 1
  361.       rvisdiffc%dim_1%LB = 1
  361.       rvisdiffc%dim_1%EX = ( max( 0, ibmax ) )
  361.       rvisdiffc%dim_1%SM = 1
  361.       rvisdiffc%dim_2%LB = 1
  361.       rvisdiffc%dim_2%EX = ( max( 0, jbmax ) )
  361.       rvisdiffc%dim_2%SM = ( max( 0, ibmax ) )
  361.       $_allo_P20(0) = 0x1000000000001L
  361.       $_allo_P20(1) = loc( rvisdiffc )
  361.       call __allocate( $_allo_P20, 0, 0, _fcd( 0, 0 ) )
  362.       $F_A73 = ( max( 0, jbmax ) )
  362.       $F_A74 = ( max( 0, ibmax ) )
  362.       if ( and( -$F_A74, -$F_A73 ) < 0 ) then
  362.          $I_A2 = 0
  362.          do
  362.             $I_A1 = 0
  362. !dir$ ivdep
  362.             do
  362.                (rvisdiffc%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  362.                $I_A1 = 1 + $I_A1
  362.                if ( $I_A1 >= $F_A74 ) exit
  362.             enddo
  362.             $I_A2 = 1 + $I_A2
  362.             if ( $I_A2 >= $F_A73 ) exit
  362.          enddo
  362.       endif
  363.       rnirbeamc%header%a_contig = 1
  363.       rnirbeamc%dim_1%LB = 1
  363.       rnirbeamc%dim_1%EX = ( max( 0, ibmax ) )
  363.       rnirbeamc%dim_1%SM = 1
  363.       rnirbeamc%dim_2%LB = 1
  363.       rnirbeamc%dim_2%EX = ( max( 0, jbmax ) )
  363.       rnirbeamc%dim_2%SM = ( max( 0, ibmax ) )
  363.       $_allo_P21(0) = 0x1000000000001L
  363.       $_allo_P21(1) = loc( rnirbeamc )
  363.       call __allocate( $_allo_P21, 0, 0, _fcd( 0, 0 ) )
  364.       $F_A75 = ( max( 0, jbmax ) )
  364.       $F_A76 = ( max( 0, ibmax ) )
  364.       if ( and( -$F_A76, -$F_A75 ) < 0 ) then
  364.          $I_A2 = 0
  364.          do
  364.             $I_A1 = 0
  364. !dir$ ivdep
  364.             do
  364.                (rnirbeamc%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  364.                $I_A1 = 1 + $I_A1
  364.                if ( $I_A1 >= $F_A76 ) exit
  364.             enddo
  364.             $I_A2 = 1 + $I_A2
  364.             if ( $I_A2 >= $F_A75 ) exit
  364.          enddo
  364.       endif
  365.       rnirdiffc%header%a_contig = 1
  365.       rnirdiffc%dim_1%LB = 1
  365.       rnirdiffc%dim_1%EX = ( max( 0, ibmax ) )
  365.       rnirdiffc%dim_1%SM = 1
  365.       rnirdiffc%dim_2%LB = 1
  365.       rnirdiffc%dim_2%EX = ( max( 0, jbmax ) )
  365.       rnirdiffc%dim_2%SM = ( max( 0, ibmax ) )
  365.       $_allo_P22(0) = 0x1000000000001L
  365.       $_allo_P22(1) = loc( rnirdiffc )
  365.       call __allocate( $_allo_P22, 0, 0, _fcd( 0, 0 ) )
  366.       $F_A77 = ( max( 0, jbmax ) )
  366.       $F_A78 = ( max( 0, ibmax ) )
  366.       if ( and( -$F_A78, -$F_A77 ) < 0 ) then
  366.          $I_A2 = 0
  366.          do
  366.             $I_A1 = 0
  366. !dir$ ivdep
  366.             do
  366.                (rnirdiffc%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  366.                $I_A1 = 1 + $I_A1
  366.                if ( $I_A1 >= $F_A78 ) exit
  366.             enddo
  366.             $I_A2 = 1 + $I_A2
  366.             if ( $I_A2 >= $F_A77 ) exit
  366.          enddo
  366.       endif
  367.       rswsfcnet%header%a_contig = 1
  367.       rswsfcnet%dim_1%LB = 1
  367.       rswsfcnet%dim_1%EX = ( max( 0, ibmax ) )
  367.       rswsfcnet%dim_1%SM = 1
  367.       rswsfcnet%dim_2%LB = 1
  367.       rswsfcnet%dim_2%EX = ( max( 0, jbmax ) )
  367.       rswsfcnet%dim_2%SM = ( max( 0, ibmax ) )
  367.       $_allo_P23(0) = 0x1000000000001L
  367.       $_allo_P23(1) = loc( rswsfcnet )
  367.       call __allocate( $_allo_P23, 0, 0, _fcd( 0, 0 ) )
  368.       $F_A79 = ( max( 0, jbmax ) )
  368.       $F_A80 = ( max( 0, ibmax ) )
  368.       if ( and( -$F_A80, -$F_A79 ) < 0 ) then
  368.          $I_A2 = 0
  368.          do
  368.             $I_A1 = 0
  368. !dir$ ivdep
  368.             do
  368.                (rswsfcnet%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  368.                $I_A1 = 1 + $I_A1
  368.                if ( $I_A1 >= $F_A80 ) exit
  368.             enddo
  368.             $I_A2 = 1 + $I_A2
  368.             if ( $I_A2 >= $F_A79 ) exit
  368.          enddo
  368.       endif
  369.       rswsfcnetc%header%a_contig = 1
  369.       rswsfcnetc%dim_1%LB = 1
  369.       rswsfcnetc%dim_1%EX = ( max( 0, ibmax ) )
  369.       rswsfcnetc%dim_1%SM = 1
  369.       rswsfcnetc%dim_2%LB = 1
  369.       rswsfcnetc%dim_2%EX = ( max( 0, jbmax ) )
  369.       rswsfcnetc%dim_2%SM = ( max( 0, ibmax ) )
  369.       $_allo_P24(0) = 0x1000000000001L
  369.       $_allo_P24(1) = loc( rswsfcnetc )
  369.       call __allocate( $_allo_P24, 0, 0, _fcd( 0, 0 ) )
  370.       $F_A81 = ( max( 0, jbmax ) )
  370.       $F_A82 = ( max( 0, ibmax ) )
  370.       if ( and( -$F_A82, -$F_A81 ) < 0 ) then
  370.          $I_A2 = 0
  370.          do
  370.             $I_A1 = 0
  370. !dir$ ivdep
  370.             do
  370.                (rswsfcnetc%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  370.                $I_A1 = 1 + $I_A1
  370.                if ( $I_A1 >= $F_A82 ) exit
  370.             enddo
  370.             $I_A2 = 1 + $I_A2
  370.             if ( $I_A2 >= $F_A81 ) exit
  370.          enddo
  370.       endif
  373.       albvisbeam%header%a_contig = 1
  373.       albvisbeam%dim_1%LB = 1
  373.       albvisbeam%dim_1%EX = ( max( 0, ibmax ) )
  373.       albvisbeam%dim_1%SM = 1
  373.       albvisbeam%dim_2%LB = 1
  373.       albvisbeam%dim_2%EX = ( max( 0, jbmax ) )
  373.       albvisbeam%dim_2%SM = ( max( 0, ibmax ) )
  373.       $_allo_P25(0) = 0x1000000000001L
  373.       $_allo_P25(1) = loc( albvisbeam )
  373.       call __allocate( $_allo_P25, 0, 0, _fcd( 0, 0 ) )
  374.       $F_A83 = ( max( 0, jbmax ) )
  374.       $F_A84 = ( max( 0, ibmax ) )
  374.       if ( and( -$F_A84, -$F_A83 ) < 0 ) then
  374.          $I_A2 = 0
  374.          do
  374.             $I_A1 = 0
  374. !dir$ ivdep
  374.             do
  374.                (albvisbeam%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  374.                $I_A1 = 1 + $I_A1
  374.                if ( $I_A1 >= $F_A84 ) exit
  374.             enddo
  374.             $I_A2 = 1 + $I_A2
  374.             if ( $I_A2 >= $F_A83 ) exit
  374.          enddo
  374.       endif
  375.       albvisdiff%header%a_contig = 1
  375.       albvisdiff%dim_1%LB = 1
  375.       albvisdiff%dim_1%EX = ( max( 0, ibmax ) )
  375.       albvisdiff%dim_1%SM = 1
  375.       albvisdiff%dim_2%LB = 1
  375.       albvisdiff%dim_2%EX = ( max( 0, jbmax ) )
  375.       albvisdiff%dim_2%SM = ( max( 0, ibmax ) )
  375.       $_allo_P26(0) = 0x1000000000001L
  375.       $_allo_P26(1) = loc( albvisdiff )
  375.       call __allocate( $_allo_P26, 0, 0, _fcd( 0, 0 ) )
  376.       $F_A85 = ( max( 0, jbmax ) )
  376.       $F_A86 = ( max( 0, ibmax ) )
  376.       if ( and( -$F_A86, -$F_A85 ) < 0 ) then
  376.          $I_A2 = 0
  376.          do
  376.             $I_A1 = 0
  376. !dir$ ivdep
  376.             do
  376.                (albvisdiff%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  376.                $I_A1 = 1 + $I_A1
  376.                if ( $I_A1 >= $F_A86 ) exit
  376.             enddo
  376.             $I_A2 = 1 + $I_A2
  376.             if ( $I_A2 >= $F_A85 ) exit
  376.          enddo
  376.       endif
  377.       albnirbeam%header%a_contig = 1
  377.       albnirbeam%dim_1%LB = 1
  377.       albnirbeam%dim_1%EX = ( max( 0, ibmax ) )
  377.       albnirbeam%dim_1%SM = 1
  377.       albnirbeam%dim_2%LB = 1
  377.       albnirbeam%dim_2%EX = ( max( 0, jbmax ) )
  377.       albnirbeam%dim_2%SM = ( max( 0, ibmax ) )
  377.       $_allo_P27(0) = 0x1000000000001L
  377.       $_allo_P27(1) = loc( albnirbeam )
  377.       call __allocate( $_allo_P27, 0, 0, _fcd( 0, 0 ) )
  378.       $F_A87 = ( max( 0, jbmax ) )
  378.       $F_A88 = ( max( 0, ibmax ) )
  378.       if ( and( -$F_A88, -$F_A87 ) < 0 ) then
  378.          $I_A2 = 0
  378.          do
  378.             $I_A1 = 0
  378. !dir$ ivdep
  378.             do
  378.                (albnirbeam%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  378.                $I_A1 = 1 + $I_A1
  378.                if ( $I_A1 >= $F_A88 ) exit
  378.             enddo
  378.             $I_A2 = 1 + $I_A2
  378.             if ( $I_A2 >= $F_A87 ) exit
  378.          enddo
  378.       endif
  379.       albnirdiff%header%a_contig = 1
  379.       albnirdiff%dim_1%LB = 1
  379.       albnirdiff%dim_1%EX = ( max( 0, ibmax ) )
  379.       albnirdiff%dim_1%SM = 1
  379.       albnirdiff%dim_2%LB = 1
  379.       albnirdiff%dim_2%EX = ( max( 0, jbmax ) )
  379.       albnirdiff%dim_2%SM = ( max( 0, ibmax ) )
  379.       $_allo_P28(0) = 0x1000000000001L
  379.       $_allo_P28(1) = loc( albnirdiff )
  379.       call __allocate( $_allo_P28, 0, 0, _fcd( 0, 0 ) )
  380.       $F_A89 = ( max( 0, jbmax ) )
  380.       $F_A90 = ( max( 0, ibmax ) )
  380.       if ( and( -$F_A90, -$F_A89 ) < 0 ) then
  380.          $I_A2 = 0
  380.          do
  380.             $I_A1 = 0
  380. !dir$ ivdep
  380.             do
  380.                (albnirdiff%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  380.                $I_A1 = 1 + $I_A1
  380.                if ( $I_A1 >= $F_A90 ) exit
  380.             enddo
  380.             $I_A2 = 1 + $I_A2
  380.             if ( $I_A2 >= $F_A89 ) exit
  380.          enddo
  380.       endif
  383.       lwcoolrate%header%a_contig = 1
  383.       lwcoolrate%dim_1%LB = 1
  383.       lwcoolrate%dim_1%EX = ( max( 0, ibmax ) )
  383.       lwcoolrate%dim_1%SM = 1
  383.       lwcoolrate%dim_2%LB = 1
  383.       lwcoolrate%dim_2%EX = ( max( 0, kmax ) )
  383.       lwcoolrate%dim_2%SM = ( max( 0, ibmax ) )
  383.       lwcoolrate%dim_3%LB = 1
  383.       lwcoolrate%dim_3%EX = ( max( 0, jbmax ) )
  383.       lwcoolrate%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  383.       $_allo_P29(0) = 0x1000000000001L
  383.       $_allo_P29(1) = loc( lwcoolrate )
  383.       call __allocate( $_allo_P29, 0, 0, _fcd( 0, 0 ) )
  384.       $F_A91 = ( max( 0, jbmax ) )
  384.       $F_A92 = ( max( 0, kmax ) )
  384.       $F_A93 = ( max( 0, ibmax ) )
  384.       if ( and( and( -$F_A92, -$F_A91 ), -$F_A93 ) < 0 ) then
  384.          $I_A3 = 0
  384.          do
  384.             $I_A2 = 0
  384.             do
  384.                $I_A1 = 0
  384. !dir$ ivdep
  384.                do
  384.                   (lwcoolrate%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  384.                   $I_A1 = 1 + $I_A1
  384.                   if ( $I_A1 >= $F_A93 ) exit
  384.                enddo
  384.                $I_A2 = 1 + $I_A2
  384.                if ( $I_A2 >= $F_A92 ) exit
  384.             enddo
  384.             $I_A3 = 1 + $I_A3
  384.             if ( $I_A3 >= $F_A91 ) exit
  384.          enddo
  384.       endif
  385.       lwcoolratec%header%a_contig = 1
  385.       lwcoolratec%dim_1%LB = 1
  385.       lwcoolratec%dim_1%EX = ( max( 0, ibmax ) )
  385.       lwcoolratec%dim_1%SM = 1
  385.       lwcoolratec%dim_2%LB = 1
  385.       lwcoolratec%dim_2%EX = ( max( 0, kmax ) )
  385.       lwcoolratec%dim_2%SM = ( max( 0, ibmax ) )
  385.       lwcoolratec%dim_3%LB = 1
  385.       lwcoolratec%dim_3%EX = ( max( 0, jbmax ) )
  385.       lwcoolratec%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  385.       $_allo_P30(0) = 0x1000000000001L
  385.       $_allo_P30(1) = loc( lwcoolratec )
  385.       call __allocate( $_allo_P30, 0, 0, _fcd( 0, 0 ) )
  386.       $F_A94 = ( max( 0, jbmax ) )
  386.       $F_A95 = ( max( 0, kmax ) )
  386.       $F_A96 = ( max( 0, ibmax ) )
  386.       if ( and( and( -$F_A95, -$F_A94 ), -$F_A96 ) < 0 ) then
  386.          $I_A3 = 0
  386.          do
  386.             $I_A2 = 0
  386.             do
  386.                $I_A1 = 0
  386. !dir$ ivdep
  386.                do
  386.                   (lwcoolratec%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  386.                   $I_A1 = 1 + $I_A1
  386.                   if ( $I_A1 >= $F_A96 ) exit
  386.                enddo
  386.                $I_A2 = 1 + $I_A2
  386.                if ( $I_A2 >= $F_A95 ) exit
  386.             enddo
  386.             $I_A3 = 1 + $I_A3
  386.             if ( $I_A3 >= $F_A94 ) exit
  386.          enddo
  386.       endif
  387.       lwsfcdown%header%a_contig = 1
  387.       lwsfcdown%dim_1%LB = 1
  387.       lwsfcdown%dim_1%EX = ( max( 0, ibmax ) )
  387.       lwsfcdown%dim_1%SM = 1
  387.       lwsfcdown%dim_2%LB = 1
  387.       lwsfcdown%dim_2%EX = ( max( 0, jbmax ) )
  387.       lwsfcdown%dim_2%SM = ( max( 0, ibmax ) )
  387.       $_allo_P31(0) = 0x1000000000001L
  387.       $_allo_P31(1) = loc( lwsfcdown )
  387.       call __allocate( $_allo_P31, 0, 0, _fcd( 0, 0 ) )
  388.       $F_A97 = ( max( 0, jbmax ) )
  388.       $F_A98 = ( max( 0, ibmax ) )
  388.       if ( and( -$F_A98, -$F_A97 ) < 0 ) then
  388.          $I_A2 = 0
  388.          do
  388.             $I_A1 = 0
  388. !dir$ ivdep
  388.             do
  388.                (lwsfcdown%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  388.                $I_A1 = 1 + $I_A1
  388.                if ( $I_A1 >= $F_A98 ) exit
  388.             enddo
  388.             $I_A2 = 1 + $I_A2
  388.             if ( $I_A2 >= $F_A97 ) exit
  388.          enddo
  388.       endif
  389.       lwsfcdownc%header%a_contig = 1
  389.       lwsfcdownc%dim_1%LB = 1
  389.       lwsfcdownc%dim_1%EX = ( max( 0, ibmax ) )
  389.       lwsfcdownc%dim_1%SM = 1
  389.       lwsfcdownc%dim_2%LB = 1
  389.       lwsfcdownc%dim_2%EX = ( max( 0, jbmax ) )
  389.       lwsfcdownc%dim_2%SM = ( max( 0, ibmax ) )
  389.       $_allo_P32(0) = 0x1000000000001L
  389.       $_allo_P32(1) = loc( lwsfcdownc )
  389.       call __allocate( $_allo_P32, 0, 0, _fcd( 0, 0 ) )
  390.       $F_A99 = ( max( 0, jbmax ) )
  390.       $F_A100 = ( max( 0, ibmax ) )
  390.       if ( and( -$F_A100, -$F_A99 ) < 0 ) then
  390.          $I_A2 = 0
  390.          do
  390.             $I_A1 = 0
  390. !dir$ ivdep
  390.             do
  390.                (lwsfcdownc%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  390.                $I_A1 = 1 + $I_A1
  390.                if ( $I_A1 >= $F_A100 ) exit
  390.             enddo
  390.             $I_A2 = 1 + $I_A2
  390.             if ( $I_A2 >= $F_A99 ) exit
  390.          enddo
  390.       endif
  391.       lwsfcnet%header%a_contig = 1
  391.       lwsfcnet%dim_1%LB = 1
  391.       lwsfcnet%dim_1%EX = ( max( 0, ibmax ) )
  391.       lwsfcnet%dim_1%SM = 1
  391.       lwsfcnet%dim_2%LB = 1
  391.       lwsfcnet%dim_2%EX = ( max( 0, jbmax ) )
  391.       lwsfcnet%dim_2%SM = ( max( 0, ibmax ) )
  391.       $_allo_P33(0) = 0x1000000000001L
  391.       $_allo_P33(1) = loc( lwsfcnet )
  391.       call __allocate( $_allo_P33, 0, 0, _fcd( 0, 0 ) )
  392.       $F_A101 = ( max( 0, jbmax ) )
  392.       $F_A102 = ( max( 0, ibmax ) )
  392.       if ( and( -$F_A102, -$F_A101 ) < 0 ) then
  392.          $I_A2 = 0
  392.          do
  392.             $I_A1 = 0
  392. !dir$ ivdep
  392.             do
  392.                (lwsfcnet%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  392.                $I_A1 = 1 + $I_A1
  392.                if ( $I_A1 >= $F_A102 ) exit
  392.             enddo
  392.             $I_A2 = 1 + $I_A2
  392.             if ( $I_A2 >= $F_A101 ) exit
  392.          enddo
  392.       endif
  393.       lwsfcnetc%header%a_contig = 1
  393.       lwsfcnetc%dim_1%LB = 1
  393.       lwsfcnetc%dim_1%EX = ( max( 0, ibmax ) )
  393.       lwsfcnetc%dim_1%SM = 1
  393.       lwsfcnetc%dim_2%LB = 1
  393.       lwsfcnetc%dim_2%EX = ( max( 0, jbmax ) )
  393.       lwsfcnetc%dim_2%SM = ( max( 0, ibmax ) )
  393.       $_allo_P34(0) = 0x1000000000001L
  393.       $_allo_P34(1) = loc( lwsfcnetc )
  393.       call __allocate( $_allo_P34, 0, 0, _fcd( 0, 0 ) )
  394.       $F_A103 = ( max( 0, jbmax ) )
  394.       $F_A104 = ( max( 0, ibmax ) )
  394.       if ( and( -$F_A104, -$F_A103 ) < 0 ) then
  394.          $I_A2 = 0
  394.          do
  394.             $I_A1 = 0
  394. !dir$ ivdep
  394.             do
  394.                (lwsfcnetc%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  394.                $I_A1 = 1 + $I_A1
  394.                if ( $I_A1 >= $F_A104 ) exit
  394.             enddo
  394.             $I_A2 = 1 + $I_A2
  394.             if ( $I_A2 >= $F_A103 ) exit
  394.          enddo
  394.       endif
  395.       lwtoaup%header%a_contig = 1
  395.       lwtoaup%dim_1%LB = 1
  395.       lwtoaup%dim_1%EX = ( max( 0, ibmax ) )
  395.       lwtoaup%dim_1%SM = 1
  395.       lwtoaup%dim_2%LB = 1
  395.       lwtoaup%dim_2%EX = ( max( 0, jbmax ) )
  395.       lwtoaup%dim_2%SM = ( max( 0, ibmax ) )
  395.       $_allo_P35(0) = 0x1000000000001L
  395.       $_allo_P35(1) = loc( lwtoaup )
  395.       call __allocate( $_allo_P35, 0, 0, _fcd( 0, 0 ) )
  396.       $F_A105 = ( max( 0, jbmax ) )
  396.       $F_A106 = ( max( 0, ibmax ) )
  396.       if ( and( -$F_A106, -$F_A105 ) < 0 ) then
  396.          $I_A2 = 0
  396.          do
  396.             $I_A1 = 0
  396. !dir$ ivdep
  396.             do
  396.                (lwtoaup%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  396.                $I_A1 = 1 + $I_A1
  396.                if ( $I_A1 >= $F_A106 ) exit
  396.             enddo
  396.             $I_A2 = 1 + $I_A2
  396.             if ( $I_A2 >= $F_A105 ) exit
  396.          enddo
  396.       endif
  397.       lwtoaupc%header%a_contig = 1
  397.       lwtoaupc%dim_1%LB = 1
  397.       lwtoaupc%dim_1%EX = ( max( 0, ibmax ) )
  397.       lwtoaupc%dim_1%SM = 1
  397.       lwtoaupc%dim_2%LB = 1
  397.       lwtoaupc%dim_2%EX = ( max( 0, jbmax ) )
  397.       lwtoaupc%dim_2%SM = ( max( 0, ibmax ) )
  397.       $_allo_P36(0) = 0x1000000000001L
  397.       $_allo_P36(1) = loc( lwtoaupc )
  397.       call __allocate( $_allo_P36, 0, 0, _fcd( 0, 0 ) )
  398.       $F_A107 = ( max( 0, jbmax ) )
  398.       $F_A108 = ( max( 0, ibmax ) )
  398.       if ( and( -$F_A108, -$F_A107 ) < 0 ) then
  398.          $I_A2 = 0
  398.          do
  398.             $I_A1 = 0
  398. !dir$ ivdep
  398.             do
  398.                (lwtoaupc%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  398.                $I_A1 = 1 + $I_A1
  398.                if ( $I_A1 >= $F_A108 ) exit
  398.             enddo
  398.             $I_A2 = 1 + $I_A2
  398.             if ( $I_A2 >= $F_A107 ) exit
  398.          enddo
  398.       endif
  401.       cldsav%header%a_contig = 1
  401.       cldsav%dim_1%LB = 1
  401.       cldsav%dim_1%EX = ( max( 0, ibmax ) )
  401.       cldsav%dim_1%SM = 1
  401.       cldsav%dim_2%LB = 1
  401.       cldsav%dim_2%EX = ( max( 0, jbmax ) )
  401.       cldsav%dim_2%SM = ( max( 0, ibmax ) )
  401.       $_allo_P37(0) = 0x1000000000001L
  401.       $_allo_P37(1) = loc( cldsav )
  401.       call __allocate( $_allo_P37, 0, 0, _fcd( 0, 0 ) )
  402.       $F_A109 = ( max( 0, jbmax ) )
  402.       $F_A110 = ( max( 0, ibmax ) )
  402.       if ( and( -$F_A110, -$F_A109 ) < 0 ) then
  402.          $I_A2 = 0
  402.          do
  402.             $I_A1 = 0
  402. !dir$ ivdep
  402.             do
  402.                (cldsav%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  402.                $I_A1 = 1 + $I_A1
  402.                if ( $I_A1 >= $F_A110 ) exit
  402.             enddo
  402.             $I_A2 = 1 + $I_A2
  402.             if ( $I_A2 >= $F_A109 ) exit
  402.          enddo
  402.       endif
  403.       cldtot%header%a_contig = 1
  403.       cldtot%dim_1%LB = 1
  403.       cldtot%dim_1%EX = ( max( 0, ibmax ) )
  403.       cldtot%dim_1%SM = 1
  403.       cldtot%dim_2%LB = 1
  403.       cldtot%dim_2%EX = ( max( 0, kmax ) )
  403.       cldtot%dim_2%SM = ( max( 0, ibmax ) )
  403.       cldtot%dim_3%LB = 1
  403.       cldtot%dim_3%EX = ( max( 0, jbmax ) )
  403.       cldtot%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  403.       $_allo_P38(0) = 0x1000000000001L
  403.       $_allo_P38(1) = loc( cldtot )
  403.       call __allocate( $_allo_P38, 0, 0, _fcd( 0, 0 ) )
  404.       $F_A111 = ( max( 0, jbmax ) )
  404.       $F_A112 = ( max( 0, kmax ) )
  404.       $F_A113 = ( max( 0, ibmax ) )
  404.       if ( and( and( -$F_A112, -$F_A111 ), -$F_A113 ) < 0 ) then
  404.          $I_A3 = 0
  404.          do
  404.             $I_A2 = 0
  404.             do
  404.                $I_A1 = 0
  404. !dir$ ivdep
  404.                do
  404.                   (cldtot%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  404.                   $I_A1 = 1 + $I_A1
  404.                   if ( $I_A1 >= $F_A113 ) exit
  404.                enddo
  404.                $I_A2 = 1 + $I_A2
  404.                if ( $I_A2 >= $F_A112 ) exit
  404.             enddo
  404.             $I_A3 = 1 + $I_A3
  404.             if ( $I_A3 >= $F_A111 ) exit
  404.          enddo
  404.       endif
  405.       cldinv%header%a_contig = 1
  405.       cldinv%dim_1%LB = 1
  405.       cldinv%dim_1%EX = ( max( 0, ibmax ) )
  405.       cldinv%dim_1%SM = 1
  405.       cldinv%dim_2%LB = 1
  405.       cldinv%dim_2%EX = ( max( 0, kmax ) )
  405.       cldinv%dim_2%SM = ( max( 0, ibmax ) )
  405.       cldinv%dim_3%LB = 1
  405.       cldinv%dim_3%EX = ( max( 0, jbmax ) )
  405.       cldinv%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  405.       $_allo_P39(0) = 0x1000000000001L
  405.       $_allo_P39(1) = loc( cldinv )
  405.       call __allocate( $_allo_P39, 0, 0, _fcd( 0, 0 ) )
  406.       $F_A114 = ( max( 0, jbmax ) )
  406.       $F_A115 = ( max( 0, kmax ) )
  406.       $F_A116 = ( max( 0, ibmax ) )
  406.       if ( and( and( -$F_A115, -$F_A114 ), -$F_A116 ) < 0 ) then
  406.          $I_A3 = 0
  406.          do
  406.             $I_A2 = 0
  406.             do
  406.                $I_A1 = 0
  406. !dir$ ivdep
  406.                do
  406.                   (cldinv%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  406.                   $I_A1 = 1 + $I_A1
  406.                   if ( $I_A1 >= $F_A116 ) exit
  406.                enddo
  406.                $I_A2 = 1 + $I_A2
  406.                if ( $I_A2 >= $F_A115 ) exit
  406.             enddo
  406.             $I_A3 = 1 + $I_A3
  406.             if ( $I_A3 >= $F_A114 ) exit
  406.          enddo
  406.       endif
  407.       cldsat%header%a_contig = 1
  407.       cldsat%dim_1%LB = 1
  407.       cldsat%dim_1%EX = ( max( 0, ibmax ) )
  407.       cldsat%dim_1%SM = 1
  407.       cldsat%dim_2%LB = 1
  407.       cldsat%dim_2%EX = ( max( 0, kmax ) )
  407.       cldsat%dim_2%SM = ( max( 0, ibmax ) )
  407.       cldsat%dim_3%LB = 1
  407.       cldsat%dim_3%EX = ( max( 0, jbmax ) )
  407.       cldsat%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  407.       $_allo_P40(0) = 0x1000000000001L
  407.       $_allo_P40(1) = loc( cldsat )
  407.       call __allocate( $_allo_P40, 0, 0, _fcd( 0, 0 ) )
  408.       $F_A117 = ( max( 0, jbmax ) )
  408.       $F_A118 = ( max( 0, kmax ) )
  408.       $F_A119 = ( max( 0, ibmax ) )
  408.       if ( and( and( -$F_A118, -$F_A117 ), -$F_A119 ) < 0 ) then
  408.          $I_A3 = 0
  408.          do
  408.             $I_A2 = 0
  408.             do
  408.                $I_A1 = 0
  408. !dir$ ivdep
  408.                do
  408.                   (cldsat%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  408.                   $I_A1 = 1 + $I_A1
  408.                   if ( $I_A1 >= $F_A119 ) exit
  408.                enddo
  408.                $I_A2 = 1 + $I_A2
  408.                if ( $I_A2 >= $F_A118 ) exit
  408.             enddo
  408.             $I_A3 = 1 + $I_A3
  408.             if ( $I_A3 >= $F_A117 ) exit
  408.          enddo
  408.       endif
  409.       cldcon%header%a_contig = 1
  409.       cldcon%dim_1%LB = 1
  409.       cldcon%dim_1%EX = ( max( 0, ibmax ) )
  409.       cldcon%dim_1%SM = 1
  409.       cldcon%dim_2%LB = 1
  409.       cldcon%dim_2%EX = ( max( 0, kmax ) )
  409.       cldcon%dim_2%SM = ( max( 0, ibmax ) )
  409.       cldcon%dim_3%LB = 1
  409.       cldcon%dim_3%EX = ( max( 0, jbmax ) )
  409.       cldcon%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  409.       $_allo_P41(0) = 0x1000000000001L
  409.       $_allo_P41(1) = loc( cldcon )
  409.       call __allocate( $_allo_P41, 0, 0, _fcd( 0, 0 ) )
  410.       $F_A120 = ( max( 0, jbmax ) )
  410.       $F_A121 = ( max( 0, kmax ) )
  410.       $F_A122 = ( max( 0, ibmax ) )
  410.       if ( and( and( -$F_A121, -$F_A120 ), -$F_A122 ) < 0 ) then
  410.          $I_A3 = 0
  410.          do
  410.             $I_A2 = 0
  410.             do
  410.                $I_A1 = 0
  410. !dir$ ivdep
  410.                do
  410.                   (cldcon%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  410.                   $I_A1 = 1 + $I_A1
  410.                   if ( $I_A1 >= $F_A122 ) exit
  410.                enddo
  410.                $I_A2 = 1 + $I_A2
  410.                if ( $I_A2 >= $F_A121 ) exit
  410.             enddo
  410.             $I_A3 = 1 + $I_A3
  410.             if ( $I_A3 >= $F_A120 ) exit
  410.          enddo
  410.       endif
  411.       cldson%header%a_contig = 1
  411.       cldson%dim_1%LB = 1
  411.       cldson%dim_1%EX = ( max( 0, ibmax ) )
  411.       cldson%dim_1%SM = 1
  411.       cldson%dim_2%LB = 1
  411.       cldson%dim_2%EX = ( max( 0, kmax ) )
  411.       cldson%dim_2%SM = ( max( 0, ibmax ) )
  411.       cldson%dim_3%LB = 1
  411.       cldson%dim_3%EX = ( max( 0, jbmax ) )
  411.       cldson%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  411.       $_allo_P42(0) = 0x1000000000001L
  411.       $_allo_P42(1) = loc( cldson )
  411.       call __allocate( $_allo_P42, 0, 0, _fcd( 0, 0 ) )
  412.       $F_A123 = ( max( 0, jbmax ) )
  412.       $F_A124 = ( max( 0, kmax ) )
  412.       $F_A125 = ( max( 0, ibmax ) )
  412.       if ( and( and( -$F_A124, -$F_A123 ), -$F_A125 ) < 0 ) then
  412.          $I_A3 = 0
  412.          do
  412.             $I_A2 = 0
  412.             do
  412.                $I_A1 = 0
  412. !dir$ ivdep
  412.                do
  412.                   (cldson%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  412.                   $I_A1 = 1 + $I_A1
  412.                   if ( $I_A1 >= $F_A125 ) exit
  412.                enddo
  412.                $I_A2 = 1 + $I_A2
  412.                if ( $I_A2 >= $F_A124 ) exit
  412.             enddo
  412.             $I_A3 = 1 + $I_A3
  412.             if ( $I_A3 >= $F_A123 ) exit
  412.          enddo
  412.       endif
  413.       clwd%header%a_contig = 1
  413.       clwd%dim_1%LB = 1
  413.       clwd%dim_1%EX = ( max( 0, ibmax ) )
  413.       clwd%dim_1%SM = 1
  413.       clwd%dim_2%LB = 1
  413.       clwd%dim_2%EX = ( max( 0, kmax ) )
  413.       clwd%dim_2%SM = ( max( 0, ibmax ) )
  413.       clwd%dim_3%LB = 1
  413.       clwd%dim_3%EX = ( max( 0, jbmax ) )
  413.       clwd%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  413.       $_allo_P43(0) = 0x1000000000001L
  413.       $_allo_P43(1) = loc( clwd )
  413.       call __allocate( $_allo_P43, 0, 0, _fcd( 0, 0 ) )
  414.       $F_A126 = ( max( 0, jbmax ) )
  414.       $F_A127 = ( max( 0, kmax ) )
  414.       $F_A128 = ( max( 0, ibmax ) )
  414.       if ( and( and( -$F_A127, -$F_A126 ), -$F_A128 ) < 0 ) then
  414.          $I_A3 = 0
  414.          do
  414.             $I_A2 = 0
  414.             do
  414.                $I_A1 = 0
  414. !dir$ ivdep
  414.                do
  414.                   (clwd%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  414.                   $I_A1 = 1 + $I_A1
  414.                   if ( $I_A1 >= $F_A128 ) exit
  414.                enddo
  414.                $I_A2 = 1 + $I_A2
  414.                if ( $I_A2 >= $F_A127 ) exit
  414.             enddo
  414.             $I_A3 = 1 + $I_A3
  414.             if ( $I_A3 >= $F_A126 ) exit
  414.          enddo
  414.       endif
  415.       emisd%header%a_contig = 1
  415.       emisd%dim_1%LB = 1
  415.       emisd%dim_1%EX = ( max( 0, ibmax ) )
  415.       emisd%dim_1%SM = 1
  415.       emisd%dim_2%LB = 1
  415.       emisd%dim_2%EX = ( max( 0, kmax ) )
  415.       emisd%dim_2%SM = ( max( 0, ibmax ) )
  415.       emisd%dim_3%LB = 1
  415.       emisd%dim_3%EX = ( max( 0, jbmax ) )
  415.       emisd%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  415.       $_allo_P44(0) = 0x1000000000001L
  415.       $_allo_P44(1) = loc( emisd )
  415.       call __allocate( $_allo_P44, 0, 0, _fcd( 0, 0 ) )
  416.       $F_A129 = ( max( 0, jbmax ) )
  416.       $F_A130 = ( max( 0, kmax ) )
  416.       $F_A131 = ( max( 0, ibmax ) )
  416.       if ( and( and( -$F_A130, -$F_A129 ), -$F_A131 ) < 0 ) then
  416.          $I_A3 = 0
  416.          do
  416.             $I_A2 = 0
  416.             do
  416.                $I_A1 = 0
  416. !dir$ ivdep
  416.                do
  416.                   (emisd%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  416.                   $I_A1 = 1 + $I_A1
  416.                   if ( $I_A1 >= $F_A131 ) exit
  416.                enddo
  416.                $I_A2 = 1 + $I_A2
  416.                if ( $I_A2 >= $F_A130 ) exit
  416.             enddo
  416.             $I_A3 = 1 + $I_A3
  416.             if ( $I_A3 >= $F_A129 ) exit
  416.          enddo
  416.       endif
  417.       taud%header%a_contig = 1
  417.       taud%dim_1%LB = 1
  417.       taud%dim_1%EX = ( max( 0, ibmax ) )
  417.       taud%dim_1%SM = 1
  417.       taud%dim_2%LB = 1
  417.       taud%dim_2%EX = ( max( 0, kmax ) )
  417.       taud%dim_2%SM = ( max( 0, ibmax ) )
  417.       taud%dim_3%LB = 1
  417.       taud%dim_3%EX = ( max( 0, jbmax ) )
  417.       taud%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  417.       $_allo_P45(0) = 0x1000000000001L
  417.       $_allo_P45(1) = loc( taud )
  417.       call __allocate( $_allo_P45, 0, 0, _fcd( 0, 0 ) )
  418.       $F_A132 = ( max( 0, jbmax ) )
  418.       $F_A133 = ( max( 0, kmax ) )
  418.       $F_A134 = ( max( 0, ibmax ) )
  418.       if ( and( and( -$F_A133, -$F_A132 ), -$F_A134 ) < 0 ) then
  418.          $I_A3 = 0
  418.          do
  418.             $I_A2 = 0
  418.             do
  418.                $I_A1 = 0
  418. !dir$ ivdep
  418.                do
  418.                   (taud%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  418.                   $I_A1 = 1 + $I_A1
  418.                   if ( $I_A1 >= $F_A134 ) exit
  418.                enddo
  418.                $I_A2 = 1 + $I_A2
  418.                if ( $I_A2 >= $F_A133 ) exit
  418.             enddo
  418.             $I_A3 = 1 + $I_A3
  418.             if ( $I_A3 >= $F_A132 ) exit
  418.          enddo
  418.       endif
  421.       ppli%header%a_contig = 1
  421.       ppli%dim_1%LB = 1
  421.       ppli%dim_1%EX = ( max( 0, ibmax ) )
  421.       ppli%dim_1%SM = 1
  421.       ppli%dim_2%LB = 1
  421.       ppli%dim_2%EX = ( max( 0, jbmax ) )
  421.       ppli%dim_2%SM = ( max( 0, ibmax ) )
  421.       $_allo_P46(0) = 0x1000000000001L
  421.       $_allo_P46(1) = loc( ppli )
  421.       call __allocate( $_allo_P46, 0, 0, _fcd( 0, 0 ) )
  422.       $F_A135 = ( max( 0, jbmax ) )
  422.       $F_A136 = ( max( 0, ibmax ) )
  422.       if ( and( -$F_A136, -$F_A135 ) < 0 ) then
  422.          $I_A2 = 0
  422.          do
  422.             $I_A1 = 0
  422. !dir$ ivdep
  422.             do
  422.                (ppli%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  422.                $I_A1 = 1 + $I_A1
  422.                if ( $I_A1 >= $F_A136 ) exit
  422.             enddo
  422.             $I_A2 = 1 + $I_A2
  422.             if ( $I_A2 >= $F_A135 ) exit
  422.          enddo
  422.       endif
  423.       ppci%header%a_contig = 1
  423.       ppci%dim_1%LB = 1
  423.       ppci%dim_1%EX = ( max( 0, ibmax ) )
  423.       ppci%dim_1%SM = 1
  423.       ppci%dim_2%LB = 1
  423.       ppci%dim_2%EX = ( max( 0, jbmax ) )
  423.       ppci%dim_2%SM = ( max( 0, ibmax ) )
  423.       $_allo_P47(0) = 0x1000000000001L
  423.       $_allo_P47(1) = loc( ppci )
  423.       call __allocate( $_allo_P47, 0, 0, _fcd( 0, 0 ) )
  424.       $F_A137 = ( max( 0, jbmax ) )
  424.       $F_A138 = ( max( 0, ibmax ) )
  424.       if ( and( -$F_A138, -$F_A137 ) < 0 ) then
  424.          $I_A2 = 0
  424.          do
  424.             $I_A1 = 0
  424. !dir$ ivdep
  424.             do
  424.                (ppci%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  424.                $I_A1 = 1 + $I_A1
  424.                if ( $I_A1 >= $F_A138 ) exit
  424.             enddo
  424.             $I_A2 = 1 + $I_A2
  424.             if ( $I_A2 >= $F_A137 ) exit
  424.          enddo
  424.       endif
  425.       prct%header%a_contig = 1
  425.       prct%dim_1%LB = 1
  425.       prct%dim_1%EX = ( max( 0, ibmax ) )
  425.       prct%dim_1%SM = 1
  425.       prct%dim_2%LB = 1
  425.       prct%dim_2%EX = ( max( 0, jbmax ) )
  425.       prct%dim_2%SM = ( max( 0, ibmax ) )
  425.       $_allo_P48(0) = 0x1000000000001L
  425.       $_allo_P48(1) = loc( prct )
  425.       call __allocate( $_allo_P48, 0, 0, _fcd( 0, 0 ) )
  426.       $F_A139 = ( max( 0, jbmax ) )
  426.       $F_A140 = ( max( 0, ibmax ) )
  426.       if ( and( -$F_A140, -$F_A139 ) < 0 ) then
  426.          $I_A2 = 0
  426.          do
  426.             $I_A1 = 0
  426. !dir$ ivdep
  426.             do
  426.                (prct%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  426.                $I_A1 = 1 + $I_A1
  426.                if ( $I_A1 >= $F_A140 ) exit
  426.             enddo
  426.             $I_A2 = 1 + $I_A2
  426.             if ( $I_A2 >= $F_A139 ) exit
  426.          enddo
  426.       endif
  427.       prcc%header%a_contig = 1
  427.       prcc%dim_1%LB = 1
  427.       prcc%dim_1%EX = ( max( 0, ibmax ) )
  427.       prcc%dim_1%SM = 1
  427.       prcc%dim_2%LB = 1
  427.       prcc%dim_2%EX = ( max( 0, jbmax ) )
  427.       prcc%dim_2%SM = ( max( 0, ibmax ) )
  427.       $_allo_P49(0) = 0x1000000000001L
  427.       $_allo_P49(1) = loc( prcc )
  427.       call __allocate( $_allo_P49, 0, 0, _fcd( 0, 0 ) )
  428.       $F_A141 = ( max( 0, jbmax ) )
  428.       $F_A142 = ( max( 0, ibmax ) )
  428.       if ( and( -$F_A142, -$F_A141 ) < 0 ) then
  428.          $I_A2 = 0
  428.          do
  428.             $I_A1 = 0
  428. !dir$ ivdep
  428.             do
  428.                (prcc%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  428.                $I_A1 = 1 + $I_A1
  428.                if ( $I_A1 >= $F_A142 ) exit
  428.             enddo
  428.             $I_A2 = 1 + $I_A2
  428.             if ( $I_A2 >= $F_A141 ) exit
  428.          enddo
  428.       endif
  429.       prcp1%header%a_contig = 1
  429.       prcp1%dim_1%LB = 1
  429.       prcp1%dim_1%EX = ( max( 0, ibmax ) )
  429.       prcp1%dim_1%SM = 1
  429.       prcp1%dim_2%LB = 1
  429.       prcp1%dim_2%EX = ( max( 0, jbmax ) )
  429.       prcp1%dim_2%SM = ( max( 0, ibmax ) )
  429.       $_allo_P50(0) = 0x1000000000001L
  429.       $_allo_P50(1) = loc( prcp1 )
  429.       call __allocate( $_allo_P50, 0, 0, _fcd( 0, 0 ) )
  430.       $F_A143 = ( max( 0, jbmax ) )
  430.       $F_A144 = ( max( 0, ibmax ) )
  430.       if ( and( -$F_A144, -$F_A143 ) < 0 ) then
  430.          $I_A2 = 0
  430.          do
  430.             $I_A1 = 0
  430. !dir$ ivdep
  430.             do
  430.                (prcp1%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  430.                $I_A1 = 1 + $I_A1
  430.                if ( $I_A1 >= $F_A144 ) exit
  430.             enddo
  430.             $I_A2 = 1 + $I_A2
  430.             if ( $I_A2 >= $F_A143 ) exit
  430.          enddo
  430.       endif
  431.       prcp2%header%a_contig = 1
  431.       prcp2%dim_1%LB = 1
  431.       prcp2%dim_1%EX = ( max( 0, ibmax ) )
  431.       prcp2%dim_1%SM = 1
  431.       prcp2%dim_2%LB = 1
  431.       prcp2%dim_2%EX = ( max( 0, jbmax ) )
  431.       prcp2%dim_2%SM = ( max( 0, ibmax ) )
  431.       $_allo_P51(0) = 0x1000000000001L
  431.       $_allo_P51(1) = loc( prcp2 )
  431.       call __allocate( $_allo_P51, 0, 0, _fcd( 0, 0 ) )
  432.       $F_A145 = ( max( 0, jbmax ) )
  432.       $F_A146 = ( max( 0, ibmax ) )
  432.       if ( and( -$F_A146, -$F_A145 ) < 0 ) then
  432.          $I_A2 = 0
  432.          do
  432.             $I_A1 = 0
  432. !dir$ ivdep
  432.             do
  432.                (prcp2%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  432.                $I_A1 = 1 + $I_A1
  432.                if ( $I_A1 >= $F_A146 ) exit
  432.             enddo
  432.             $I_A2 = 1 + $I_A2
  432.             if ( $I_A2 >= $F_A145 ) exit
  432.          enddo
  432.       endif
  433.       prcp3%header%a_contig = 1
  433.       prcp3%dim_1%LB = 1
  433.       prcp3%dim_1%EX = ( max( 0, ibmax ) )
  433.       prcp3%dim_1%SM = 1
  433.       prcp3%dim_2%LB = 1
  433.       prcp3%dim_2%EX = ( max( 0, jbmax ) )
  433.       prcp3%dim_2%SM = ( max( 0, ibmax ) )
  433.       $_allo_P52(0) = 0x1000000000001L
  433.       $_allo_P52(1) = loc( prcp3 )
  433.       call __allocate( $_allo_P52, 0, 0, _fcd( 0, 0 ) )
  434.       $F_A147 = ( max( 0, jbmax ) )
  434.       $F_A148 = ( max( 0, ibmax ) )
  434.       if ( and( -$F_A148, -$F_A147 ) < 0 ) then
  434.          $I_A2 = 0
  434.          do
  434.             $I_A1 = 0
  434. !dir$ ivdep
  434.             do
  434.                (prcp3%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  434.                $I_A1 = 1 + $I_A1
  434.                if ( $I_A1 >= $F_A148 ) exit
  434.             enddo
  434.             $I_A2 = 1 + $I_A2
  434.             if ( $I_A2 >= $F_A147 ) exit
  434.          enddo
  434.       endif
  435.       prcpt%header%a_contig = 1
  435.       prcpt%dim_1%LB = 1
  435.       prcpt%dim_1%EX = ( max( 0, ibmax ) )
  435.       prcpt%dim_1%SM = 1
  435.       prcpt%dim_2%LB = 1
  435.       prcpt%dim_2%EX = ( max( 0, jbmax ) )
  435.       prcpt%dim_2%SM = ( max( 0, ibmax ) )
  435.       $_allo_P53(0) = 0x1000000000001L
  435.       $_allo_P53(1) = loc( prcpt )
  435.       call __allocate( $_allo_P53, 0, 0, _fcd( 0, 0 ) )
  436.       $F_A149 = ( max( 0, jbmax ) )
  436.       $F_A150 = ( max( 0, ibmax ) )
  436.       if ( and( -$F_A150, -$F_A149 ) < 0 ) then
  436.          $I_A2 = 0
  436.          do
  436.             $I_A1 = 0
  436. !dir$ ivdep
  436.             do
  436.                (prcpt%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  436.                $I_A1 = 1 + $I_A1
  436.                if ( $I_A1 >= $F_A150 ) exit
  436.             enddo
  436.             $I_A2 = 1 + $I_A2
  436.             if ( $I_A2 >= $F_A149 ) exit
  436.          enddo
  436.       endif
  437.       toplv%header%a_contig = 1
  437.       toplv%dim_1%LB = 1
  437.       toplv%dim_1%EX = ( max( 0, ibmax ) )
  437.       toplv%dim_1%SM = 1
  437.       toplv%dim_2%LB = 1
  437.       toplv%dim_2%EX = ( max( 0, jbmax ) )
  437.       toplv%dim_2%SM = ( max( 0, ibmax ) )
  437.       $_allo_P54(0) = 0x1000000000001L
  437.       $_allo_P54(1) = loc( toplv )
  437.       call __allocate( $_allo_P54, 0, 0, _fcd( 0, 0 ) )
  438.       $F_A151 = ( max( 0, jbmax ) )
  438.       $F_A152 = ( max( 0, ibmax ) )
  438.       if ( and( -$F_A152, -$F_A151 ) < 0 ) then
  438.          $I_A2 = 0
  438.          do
  438.             $I_A1 = 0
  438. !dir$ ivdep
  438.             do
  438.                (toplv%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  438.                $I_A1 = 1 + $I_A1
  438.                if ( $I_A1 >= $F_A152 ) exit
  438.             enddo
  438.             $I_A2 = 1 + $I_A2
  438.             if ( $I_A2 >= $F_A151 ) exit
  438.          enddo
  438.       endif
  439.       botlv%header%a_contig = 1
  439.       botlv%dim_1%LB = 1
  439.       botlv%dim_1%EX = ( max( 0, ibmax ) )
  439.       botlv%dim_1%SM = 1
  439.       botlv%dim_2%LB = 1
  439.       botlv%dim_2%EX = ( max( 0, jbmax ) )
  439.       botlv%dim_2%SM = ( max( 0, ibmax ) )
  439.       $_allo_P55(0) = 0x1000000000001L
  439.       $_allo_P55(1) = loc( botlv )
  439.       call __allocate( $_allo_P55, 0, 0, _fcd( 0, 0 ) )
  440.       $F_A153 = ( max( 0, jbmax ) )
  440.       $F_A154 = ( max( 0, ibmax ) )
  440.       if ( and( -$F_A154, -$F_A153 ) < 0 ) then
  440.          $I_A2 = 0
  440.          do
  440.             $I_A1 = 0
  440. !dir$ ivdep
  440.             do
  440.                (botlv%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  440.                $I_A1 = 1 + $I_A1
  440.                if ( $I_A1 >= $F_A154 ) exit
  440.             enddo
  440.             $I_A2 = 1 + $I_A2
  440.             if ( $I_A2 >= $F_A153 ) exit
  440.          enddo
  440.       endif
  441.       geshem%header%a_contig = 1
  441.       geshem%dim_1%LB = 1
  441.       geshem%dim_1%EX = ( max( 0, ibmax ) )
  441.       geshem%dim_1%SM = 1
  441.       geshem%dim_2%LB = 1
  441.       geshem%dim_2%EX = ( max( 0, jbmax ) )
  441.       geshem%dim_2%SM = ( max( 0, ibmax ) )
  441.       $_allo_P56(0) = 0x1000000000001L
  441.       $_allo_P56(1) = loc( geshem )
  441.       call __allocate( $_allo_P56, 0, 0, _fcd( 0, 0 ) )
  442.       $F_A155 = ( max( 0, jbmax ) )
  442.       $F_A156 = ( max( 0, ibmax ) )
  442.       if ( and( -$F_A156, -$F_A155 ) < 0 ) then
  442.          $I_A2 = 0
  442.          do
  442.             $I_A1 = 0
  442. !dir$ ivdep
  442.             do
  442.                (geshem%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  442.                $I_A1 = 1 + $I_A1
  442.                if ( $I_A1 >= $F_A156 ) exit
  442.             enddo
  442.             $I_A2 = 1 + $I_A2
  442.             if ( $I_A2 >= $F_A155 ) exit
  442.          enddo
  442.       endif
  443.       convc%header%a_contig = 1
  443.       convc%dim_1%LB = 1
  443.       convc%dim_1%EX = ( max( 0, ibmax ) )
  443.       convc%dim_1%SM = 1
  443.       convc%dim_2%LB = 1
  443.       convc%dim_2%EX = ( max( 0, jbmax ) )
  443.       convc%dim_2%SM = ( max( 0, ibmax ) )
  443.       $_allo_P57(0) = 0x1000000000001L
  443.       $_allo_P57(1) = loc( convc )
  443.       call __allocate( $_allo_P57, 0, 0, _fcd( 0, 0 ) )
  444.       $F_A157 = ( max( 0, jbmax ) )
  444.       $F_A158 = ( max( 0, ibmax ) )
  444.       if ( and( -$F_A158, -$F_A157 ) < 0 ) then
  444.          $I_A2 = 0
  444.          do
  444.             $I_A1 = 0
  444. !dir$ ivdep
  444.             do
  444.                (convc%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  444.                $I_A1 = 1 + $I_A1
  444.                if ( $I_A1 >= $F_A158 ) exit
  444.             enddo
  444.             $I_A2 = 1 + $I_A2
  444.             if ( $I_A2 >= $F_A157 ) exit
  444.          enddo
  444.       endif
  445.       convt%header%a_contig = 1
  445.       convt%dim_1%LB = 1
  445.       convt%dim_1%EX = ( max( 0, ibmax ) )
  445.       convt%dim_1%SM = 1
  445.       convt%dim_2%LB = 1
  445.       convt%dim_2%EX = ( max( 0, jbmax ) )
  445.       convt%dim_2%SM = ( max( 0, ibmax ) )
  445.       $_allo_P58(0) = 0x1000000000001L
  445.       $_allo_P58(1) = loc( convt )
  445.       call __allocate( $_allo_P58, 0, 0, _fcd( 0, 0 ) )
  446.       $F_A159 = ( max( 0, jbmax ) )
  446.       $F_A160 = ( max( 0, ibmax ) )
  446.       if ( and( -$F_A160, -$F_A159 ) < 0 ) then
  446.          $I_A2 = 0
  446.          do
  446.             $I_A1 = 0
  446. !dir$ ivdep
  446.             do
  446.                (convt%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  446.                $I_A1 = 1 + $I_A1
  446.                if ( $I_A1 >= $F_A160 ) exit
  446.             enddo
  446.             $I_A2 = 1 + $I_A2
  446.             if ( $I_A2 >= $F_A159 ) exit
  446.          enddo
  446.       endif
  447.       convb%header%a_contig = 1
  447.       convb%dim_1%LB = 1
  447.       convb%dim_1%EX = ( max( 0, ibmax ) )
  447.       convb%dim_1%SM = 1
  447.       convb%dim_2%LB = 1
  447.       convb%dim_2%EX = ( max( 0, jbmax ) )
  447.       convb%dim_2%SM = ( max( 0, ibmax ) )
  447.       $_allo_P59(0) = 0x1000000000001L
  447.       $_allo_P59(1) = loc( convb )
  447.       call __allocate( $_allo_P59, 0, 0, _fcd( 0, 0 ) )
  448.       $F_A161 = ( max( 0, jbmax ) )
  448.       $F_A162 = ( max( 0, ibmax ) )
  448.       if ( and( -$F_A162, -$F_A161 ) < 0 ) then
  448.          $I_A2 = 0
  448.          do
  448.             $I_A1 = 0
  448. !dir$ ivdep
  448.             do
  448.                (convb%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  448.                $I_A1 = 1 + $I_A1
  448.                if ( $I_A1 >= $F_A162 ) exit
  448.             enddo
  448.             $I_A2 = 1 + $I_A2
  448.             if ( $I_A2 >= $F_A161 ) exit
  448.          enddo
  448.       endif
  449.       convts%header%a_contig = 1
  449.       convts%dim_1%LB = 1
  449.       convts%dim_1%EX = ( max( 0, ibmax ) )
  449.       convts%dim_1%SM = 1
  449.       convts%dim_2%LB = 1
  449.       convts%dim_2%EX = ( max( 0, jbmax ) )
  449.       convts%dim_2%SM = ( max( 0, ibmax ) )
  449.       $_allo_P60(0) = 0x1000000000001L
  449.       $_allo_P60(1) = loc( convts )
  449.       call __allocate( $_allo_P60, 0, 0, _fcd( 0, 0 ) )
  450.       $F_A163 = ( max( 0, jbmax ) )
  450.       $F_A164 = ( max( 0, ibmax ) )
  450.       if ( and( -$F_A164, -$F_A163 ) < 0 ) then
  450.          $I_A2 = 0
  450.          do
  450.             $I_A1 = 0
  450. !dir$ ivdep
  450.             do
  450.                (convts%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  450.                $I_A1 = 1 + $I_A1
  450.                if ( $I_A1 >= $F_A164 ) exit
  450.             enddo
  450.             $I_A2 = 1 + $I_A2
  450.             if ( $I_A2 >= $F_A163 ) exit
  450.          enddo
  450.       endif
  451.       convcs%header%a_contig = 1
  451.       convcs%dim_1%LB = 1
  451.       convcs%dim_1%EX = ( max( 0, ibmax ) )
  451.       convcs%dim_1%SM = 1
  451.       convcs%dim_2%LB = 1
  451.       convcs%dim_2%EX = ( max( 0, jbmax ) )
  451.       convcs%dim_2%SM = ( max( 0, ibmax ) )
  451.       $_allo_P61(0) = 0x1000000000001L
  451.       $_allo_P61(1) = loc( convcs )
  451.       call __allocate( $_allo_P61, 0, 0, _fcd( 0, 0 ) )
  452.       $F_A165 = ( max( 0, jbmax ) )
  452.       $F_A166 = ( max( 0, ibmax ) )
  452.       if ( and( -$F_A166, -$F_A165 ) < 0 ) then
  452.          $I_A2 = 0
  452.          do
  452.             $I_A1 = 0
  452. !dir$ ivdep
  452.             do
  452.                (convcs%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  452.                $I_A1 = 1 + $I_A1
  452.                if ( $I_A1 >= $F_A166 ) exit
  452.             enddo
  452.             $I_A2 = 1 + $I_A2
  452.             if ( $I_A2 >= $F_A165 ) exit
  452.          enddo
  452.       endif
  453.       convbs%header%a_contig = 1
  453.       convbs%dim_1%LB = 1
  453.       convbs%dim_1%EX = ( max( 0, ibmax ) )
  453.       convbs%dim_1%SM = 1
  453.       convbs%dim_2%LB = 1
  453.       convbs%dim_2%EX = ( max( 0, jbmax ) )
  453.       convbs%dim_2%SM = ( max( 0, ibmax ) )
  453.       $_allo_P62(0) = 0x1000000000001L
  453.       $_allo_P62(1) = loc( convbs )
  453.       call __allocate( $_allo_P62, 0, 0, _fcd( 0, 0 ) )
  454.       $F_A167 = ( max( 0, jbmax ) )
  454.       $F_A168 = ( max( 0, ibmax ) )
  454.       if ( and( -$F_A168, -$F_A167 ) < 0 ) then
  454.          $I_A2 = 0
  454.          do
  454.             $I_A1 = 0
  454. !dir$ ivdep
  454.             do
  454.                (convbs%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  454.                $I_A1 = 1 + $I_A1
  454.                if ( $I_A1 >= $F_A168 ) exit
  454.             enddo
  454.             $I_A2 = 1 + $I_A2
  454.             if ( $I_A2 >= $F_A167 ) exit
  454.          enddo
  454.       endif
  457.       ustr%header%a_contig = 1
  457.       ustr%dim_1%LB = 1
  457.       ustr%dim_1%EX = ( max( 0, ibmax ) )
  457.       ustr%dim_1%SM = 1
  457.       ustr%dim_2%LB = 1
  457.       ustr%dim_2%EX = ( max( 0, jbmax ) )
  457.       ustr%dim_2%SM = ( max( 0, ibmax ) )
  457.       $_allo_P63(0) = 0x1000000000001L
  457.       $_allo_P63(1) = loc( ustr )
  457.       call __allocate( $_allo_P63, 0, 0, _fcd( 0, 0 ) )
  458.       $F_A169 = ( max( 0, jbmax ) )
  458.       $F_A170 = ( max( 0, ibmax ) )
  458.       if ( and( -$F_A170, -$F_A169 ) < 0 ) then
  458.          $I_A2 = 0
  458.          do
  458.             $I_A1 = 0
  458. !dir$ ivdep
  458.             do
  458.                (ustr%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  458.                $I_A1 = 1 + $I_A1
  458.                if ( $I_A1 >= $F_A170 ) exit
  458.             enddo
  458.             $I_A2 = 1 + $I_A2
  458.             if ( $I_A2 >= $F_A169 ) exit
  458.          enddo
  458.       endif
  459.       vstr%header%a_contig = 1
  459.       vstr%dim_1%LB = 1
  459.       vstr%dim_1%EX = ( max( 0, ibmax ) )
  459.       vstr%dim_1%SM = 1
  459.       vstr%dim_2%LB = 1
  459.       vstr%dim_2%EX = ( max( 0, jbmax ) )
  459.       vstr%dim_2%SM = ( max( 0, ibmax ) )
  459.       $_allo_P64(0) = 0x1000000000001L
  459.       $_allo_P64(1) = loc( vstr )
  459.       call __allocate( $_allo_P64, 0, 0, _fcd( 0, 0 ) )
  460.       $F_A171 = ( max( 0, jbmax ) )
  460.       $F_A172 = ( max( 0, ibmax ) )
  460.       if ( and( -$F_A172, -$F_A171 ) < 0 ) then
  460.          $I_A2 = 0
  460.          do
  460.             $I_A1 = 0
  460. !dir$ ivdep
  460.             do
  460.                (vstr%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  460.                $I_A1 = 1 + $I_A1
  460.                if ( $I_A1 >= $F_A172 ) exit
  460.             enddo
  460.             $I_A2 = 1 + $I_A2
  460.             if ( $I_A2 >= $F_A171 ) exit
  460.          enddo
  460.       endif
  463.       imask%header%a_contig = 1
  463.       imask%dim_1%LB = 1
  463.       imask%dim_1%EX = ( max( 0, ibmax ) )
  463.       imask%dim_1%SM = 1
  463.       imask%dim_2%LB = 1
  463.       imask%dim_2%EX = ( max( 0, jbmax ) )
  463.       imask%dim_2%SM = ( max( 0, ibmax ) )
  463.       $_allo_P65(0) = 0x1000000000001L
  463.       $_allo_P65(1) = loc( imask )
  463.       call __allocate( $_allo_P65, 0, 0, _fcd( 0, 0 ) )
  464.       $F_A173 = ( max( 0, jbmax ) )
  464.       $F_A174 = ( max( 0, ibmax ) )
  464.       if ( and( -$F_A174, -$F_A173 ) < 0 ) then
  464.          $I_A2 = 0
  464.          do
  464.             $I_A1 = 0
  464. !dir$ ivdep
  464.             do
  464.                (imask%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0
  464.                $I_A1 = 1 + $I_A1
  464.                if ( $I_A1 >= $F_A174 ) exit
  464.             enddo
  464.             $I_A2 = 1 + $I_A2
  464.             if ( $I_A2 >= $F_A173 ) exit
  464.          enddo
  464.       endif
  465.       ssib%header%a_contig = 1
  465.       ssib%dim_1%LB = 1
  465.       ssib%dim_1%EX = ( max( 0, ibmax ) )
  465.       ssib%dim_1%SM = 1
  465.       ssib%dim_2%LB = 1
  465.       ssib%dim_2%EX = ( max( 0, jbmax ) )
  465.       ssib%dim_2%SM = ( max( 0, ibmax ) )
  465.       $_allo_P66(0) = 0x1000000000001L
  465.       $_allo_P66(1) = loc( ssib )
  465.       call __allocate( $_allo_P66, 0, 0, _fcd( 0, 0 ) )
  466.       $F_A175 = ( max( 0, jbmax ) )
  466.       $F_A176 = ( max( 0, ibmax ) )
  466.       if ( and( -$F_A176, -$F_A175 ) < 0 ) then
  466.          $I_A2 = 0
  466.          do
  466.             $I_A1 = 0
  466. !dir$ ivdep
  466.             do
  466.                (ssib%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  466.                $I_A1 = 1 + $I_A1
  466.                if ( $I_A1 >= $F_A176 ) exit
  466.             enddo
  466.             $I_A2 = 1 + $I_A2
  466.             if ( $I_A2 >= $F_A175 ) exit
  466.          enddo
  466.       endif
  469.       gl0%header%a_contig = 1
  469.       gl0%dim_1%LB = 1
  469.       gl0%dim_1%EX = ( max( 0, ibmax ) )
  469.       gl0%dim_1%SM = 1
  469.       gl0%dim_2%LB = 1
  469.       gl0%dim_2%EX = ( max( 0, jbmax ) )
  469.       gl0%dim_2%SM = ( max( 0, ibmax ) )
  469.       $_allo_P67(0) = 0x1000000000001L
  469.       $_allo_P67(1) = loc( gl0 )
  469.       call __allocate( $_allo_P67, 0, 0, _fcd( 0, 0 ) )
  470.       $F_A177 = ( max( 0, jbmax ) )
  470.       $F_A178 = ( max( 0, ibmax ) )
  470.       if ( and( -$F_A178, -$F_A177 ) < 0 ) then
  470.          $I_A2 = 0
  470.          do
  470.             $I_A1 = 0
  470. !dir$ ivdep
  470.             do
  470.                (gl0%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  470.                $I_A1 = 1 + $I_A1
  470.                if ( $I_A1 >= $F_A178 ) exit
  470.             enddo
  470.             $I_A2 = 1 + $I_A2
  470.             if ( $I_A2 >= $F_A177 ) exit
  470.          enddo
  470.       endif
  471.       mmlen%header%a_contig = 1
  471.       mmlen%dim_1%LB = 1
  471.       mmlen%dim_1%EX = ( max( 0, ibmax ) )
  471.       mmlen%dim_1%SM = 1
  471.       mmlen%dim_2%LB = 1
  471.       mmlen%dim_2%EX = ( max( 0, jbmax ) )
  471.       mmlen%dim_2%SM = ( max( 0, ibmax ) )
  471.       $_allo_P68(0) = 0x1000000000001L
  471.       $_allo_P68(1) = loc( mmlen )
  471.       call __allocate( $_allo_P68, 0, 0, _fcd( 0, 0 ) )
  472.       $F_A179 = ( max( 0, jbmax ) )
  472.       $F_A180 = ( max( 0, ibmax ) )
  472.       if ( and( -$F_A180, -$F_A179 ) < 0 ) then
  472.          $I_A2 = 0
  472.          do
  472.             $I_A1 = 0
  472. !dir$ ivdep
  472.             do
  472.                (mmlen%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  472.                $I_A1 = 1 + $I_A1
  472.                if ( $I_A1 >= $F_A180 ) exit
  472.             enddo
  472.             $I_A2 = 1 + $I_A2
  472.             if ( $I_A2 >= $F_A179 ) exit
  472.          enddo
  472.       endif
  473.       zorl%header%a_contig = 1
  473.       zorl%dim_1%LB = 1
  473.       zorl%dim_1%EX = ( max( 0, ibmax ) )
  473.       zorl%dim_1%SM = 1
  473.       zorl%dim_2%LB = 1
  473.       zorl%dim_2%EX = ( max( 0, jbmax ) )
  473.       zorl%dim_2%SM = ( max( 0, ibmax ) )
  473.       $_allo_P69(0) = 0x1000000000001L
  473.       $_allo_P69(1) = loc( zorl )
  473.       call __allocate( $_allo_P69, 0, 0, _fcd( 0, 0 ) )
  474.       $F_A181 = ( max( 0, jbmax ) )
  474.       $F_A182 = ( max( 0, ibmax ) )
  474.       if ( and( -$F_A182, -$F_A181 ) < 0 ) then
  474.          $I_A2 = 0
  474.          do
  474.             $I_A1 = 0
  474. !dir$ ivdep
  474.             do
  474.                (zorl%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  474.                $I_A1 = 1 + $I_A1
  474.                if ( $I_A1 >= $F_A182 ) exit
  474.             enddo
  474.             $I_A2 = 1 + $I_A2
  474.             if ( $I_A2 >= $F_A181 ) exit
  474.          enddo
  474.       endif
  475.       sheleg%header%a_contig = 1
  475.       sheleg%dim_1%LB = 1
  475.       sheleg%dim_1%EX = ( max( 0, ibmax ) )
  475.       sheleg%dim_1%SM = 1
  475.       sheleg%dim_2%LB = 1
  475.       sheleg%dim_2%EX = ( max( 0, jbmax ) )
  475.       sheleg%dim_2%SM = ( max( 0, ibmax ) )
  475.       $_allo_P70(0) = 0x1000000000001L
  475.       $_allo_P70(1) = loc( sheleg )
  475.       call __allocate( $_allo_P70, 0, 0, _fcd( 0, 0 ) )
  476.       $F_A183 = ( max( 0, jbmax ) )
  476.       $F_A184 = ( max( 0, ibmax ) )
  476.       if ( and( -$F_A184, -$F_A183 ) < 0 ) then
  476.          $I_A2 = 0
  476.          do
  476.             $I_A1 = 0
  476. !dir$ ivdep
  476.             do
  476.                (sheleg%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  476.                $I_A1 = 1 + $I_A1
  476.                if ( $I_A1 >= $F_A184 ) exit
  476.             enddo
  476.             $I_A2 = 1 + $I_A2
  476.             if ( $I_A2 >= $F_A183 ) exit
  476.          enddo
  476.       endif
  477.       tseam%header%a_contig = 1
  477.       tseam%dim_1%LB = 1
  477.       tseam%dim_1%EX = ( max( 0, ibmax ) )
  477.       tseam%dim_1%SM = 1
  477.       tseam%dim_2%LB = 1
  477.       tseam%dim_2%EX = ( max( 0, jbmax ) )
  477.       tseam%dim_2%SM = ( max( 0, ibmax ) )
  477.       $_allo_P71(0) = 0x1000000000001L
  477.       $_allo_P71(1) = loc( tseam )
  477.       call __allocate( $_allo_P71, 0, 0, _fcd( 0, 0 ) )
  478.       $F_A185 = ( max( 0, jbmax ) )
  478.       $F_A186 = ( max( 0, ibmax ) )
  478.       if ( and( -$F_A186, -$F_A185 ) < 0 ) then
  478.          $I_A2 = 0
  478.          do
  478.             $I_A1 = 0
  478. !dir$ ivdep
  478.             do
  478.                (tseam%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  478.                $I_A1 = 1 + $I_A1
  478.                if ( $I_A1 >= $F_A186 ) exit
  478.             enddo
  478.             $I_A2 = 1 + $I_A2
  478.             if ( $I_A2 >= $F_A185 ) exit
  478.          enddo
  478.       endif
  479.       gtsea%header%a_contig = 1
  479.       gtsea%dim_1%LB = 1
  479.       gtsea%dim_1%EX = ( max( 0, ibmax ) )
  479.       gtsea%dim_1%SM = 1
  479.       gtsea%dim_2%LB = 1
  479.       gtsea%dim_2%EX = ( max( 0, jbmax ) )
  479.       gtsea%dim_2%SM = ( max( 0, ibmax ) )
  479.       $_allo_P72(0) = 0x1000000000001L
  479.       $_allo_P72(1) = loc( gtsea )
  479.       call __allocate( $_allo_P72, 0, 0, _fcd( 0, 0 ) )
  480.       $F_A187 = ( max( 0, jbmax ) )
  480.       $F_A188 = ( max( 0, ibmax ) )
  480.       if ( and( -$F_A188, -$F_A187 ) < 0 ) then
  480.          $I_A2 = 0
  480.          do
  480.             $I_A1 = 0
  480. !dir$ ivdep
  480.             do
  480.                (gtsea%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  480.                $I_A1 = 1 + $I_A1
  480.                if ( $I_A1 >= $F_A188 ) exit
  480.             enddo
  480.             $I_A2 = 1 + $I_A2
  480.             if ( $I_A2 >= $F_A187 ) exit
  480.          enddo
  480.       endif
  481.       tm0%header%a_contig = 1
  481.       tm0%dim_1%LB = 1
  481.       tm0%dim_1%EX = ( max( 0, ibmax ) )
  481.       tm0%dim_1%SM = 1
  481.       tm0%dim_2%LB = 1
  481.       tm0%dim_2%EX = ( max( 0, jbmax ) )
  481.       tm0%dim_2%SM = ( max( 0, ibmax ) )
  481.       $_allo_P73(0) = 0x1000000000001L
  481.       $_allo_P73(1) = loc( tm0 )
  481.       call __allocate( $_allo_P73, 0, 0, _fcd( 0, 0 ) )
  482.       $F_A189 = ( max( 0, jbmax ) )
  482.       $F_A190 = ( max( 0, ibmax ) )
  482.       if ( and( -$F_A190, -$F_A189 ) < 0 ) then
  482.          $I_A2 = 0
  482.          do
  482.             $I_A1 = 0
  482. !dir$ ivdep
  482.             do
  482.                (tm0%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  482.                $I_A1 = 1 + $I_A1
  482.                if ( $I_A1 >= $F_A190 ) exit
  482.             enddo
  482.             $I_A2 = 1 + $I_A2
  482.             if ( $I_A2 >= $F_A189 ) exit
  482.          enddo
  482.       endif
  483.       qm0%header%a_contig = 1
  483.       qm0%dim_1%LB = 1
  483.       qm0%dim_1%EX = ( max( 0, ibmax ) )
  483.       qm0%dim_1%SM = 1
  483.       qm0%dim_2%LB = 1
  483.       qm0%dim_2%EX = ( max( 0, jbmax ) )
  483.       qm0%dim_2%SM = ( max( 0, ibmax ) )
  483.       $_allo_P74(0) = 0x1000000000001L
  483.       $_allo_P74(1) = loc( qm0 )
  483.       call __allocate( $_allo_P74, 0, 0, _fcd( 0, 0 ) )
  484.       $F_A191 = ( max( 0, jbmax ) )
  484.       $F_A192 = ( max( 0, ibmax ) )
  484.       if ( and( -$F_A192, -$F_A191 ) < 0 ) then
  484.          $I_A2 = 0
  484.          do
  484.             $I_A1 = 0
  484. !dir$ ivdep
  484.             do
  484.                (qm0%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  484.                $I_A1 = 1 + $I_A1
  484.                if ( $I_A1 >= $F_A192 ) exit
  484.             enddo
  484.             $I_A2 = 1 + $I_A2
  484.             if ( $I_A2 >= $F_A191 ) exit
  484.          enddo
  484.       endif
  485.       tc0%header%a_contig = 1
  485.       tc0%dim_1%LB = 1
  485.       tc0%dim_1%EX = ( max( 0, ibmax ) )
  485.       tc0%dim_1%SM = 1
  485.       tc0%dim_2%LB = 1
  485.       tc0%dim_2%EX = ( max( 0, jbmax ) )
  485.       tc0%dim_2%SM = ( max( 0, ibmax ) )
  485.       $_allo_P75(0) = 0x1000000000001L
  485.       $_allo_P75(1) = loc( tc0 )
  485.       call __allocate( $_allo_P75, 0, 0, _fcd( 0, 0 ) )
  486.       $F_A193 = ( max( 0, jbmax ) )
  486.       $F_A194 = ( max( 0, ibmax ) )
  486.       if ( and( -$F_A194, -$F_A193 ) < 0 ) then
  486.          $I_A2 = 0
  486.          do
  486.             $I_A1 = 0
  486. !dir$ ivdep
  486.             do
  486.                (tc0%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  486.                $I_A1 = 1 + $I_A1
  486.                if ( $I_A1 >= $F_A194 ) exit
  486.             enddo
  486.             $I_A2 = 1 + $I_A2
  486.             if ( $I_A2 >= $F_A193 ) exit
  486.          enddo
  486.       endif
  487.       tg0%header%a_contig = 1
  487.       tg0%dim_1%LB = 1
  487.       tg0%dim_1%EX = ( max( 0, ibmax ) )
  487.       tg0%dim_1%SM = 1
  487.       tg0%dim_2%LB = 1
  487.       tg0%dim_2%EX = ( max( 0, jbmax ) )
  487.       tg0%dim_2%SM = ( max( 0, ibmax ) )
  487.       $_allo_P76(0) = 0x1000000000001L
  487.       $_allo_P76(1) = loc( tg0 )
  487.       call __allocate( $_allo_P76, 0, 0, _fcd( 0, 0 ) )
  488.       $F_A195 = ( max( 0, jbmax ) )
  488.       $F_A196 = ( max( 0, ibmax ) )
  488.       if ( and( -$F_A196, -$F_A195 ) < 0 ) then
  488.          $I_A2 = 0
  488.          do
  488.             $I_A1 = 0
  488. !dir$ ivdep
  488.             do
  488.                (tg0%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  488.                $I_A1 = 1 + $I_A1
  488.                if ( $I_A1 >= $F_A196 ) exit
  488.             enddo
  488.             $I_A2 = 1 + $I_A2
  488.             if ( $I_A2 >= $F_A195 ) exit
  488.          enddo
  488.       endif
  489.       td0%header%a_contig = 1
  489.       td0%dim_1%LB = 1
  489.       td0%dim_1%EX = ( max( 0, ibmax ) )
  489.       td0%dim_1%SM = 1
  489.       td0%dim_2%LB = 1
  489.       td0%dim_2%EX = ( max( 0, jbmax ) )
  489.       td0%dim_2%SM = ( max( 0, ibmax ) )
  489.       $_allo_P77(0) = 0x1000000000001L
  489.       $_allo_P77(1) = loc( td0 )
  489.       call __allocate( $_allo_P77, 0, 0, _fcd( 0, 0 ) )
  490.       $F_A197 = ( max( 0, jbmax ) )
  490.       $F_A198 = ( max( 0, ibmax ) )
  490.       if ( and( -$F_A198, -$F_A197 ) < 0 ) then
  490.          $I_A2 = 0
  490.          do
  490.             $I_A1 = 0
  490. !dir$ ivdep
  490.             do
  490.                (td0%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  490.                $I_A1 = 1 + $I_A1
  490.                if ( $I_A1 >= $F_A198 ) exit
  490.             enddo
  490.             $I_A2 = 1 + $I_A2
  490.             if ( $I_A2 >= $F_A197 ) exit
  490.          enddo
  490.       endif
  491.       w0%header%a_contig = 1
  491.       w0%dim_1%LB = 1
  491.       w0%dim_1%EX = ( max( 0, ibmax ) )
  491.       w0%dim_1%SM = 1
  491.       w0%dim_2%LB = 1
  491.       w0%dim_2%EX = 3
  491.       w0%dim_2%SM = ( max( 0, ibmax ) )
  491.       w0%dim_3%LB = 1
  491.       w0%dim_3%EX = ( max( 0, jbmax ) )
  491.       w0%dim_3%SM = ( 3 * max( 0, ibmax ) )
  491.       $_allo_P78(0) = 0x1000000000001L
  491.       $_allo_P78(1) = loc( w0 )
  491.       call __allocate( $_allo_P78, 0, 0, _fcd( 0, 0 ) )
  492.       $F_A199 = ( max( 0, jbmax ) )
  492.       $F_A200 = ( max( 0, ibmax ) )
  492.       if ( and( -$F_A200, -$F_A199 ) < 0 ) then
  492.          $I_A3 = 0
  492.          do
  492.             $I_A2 = 0
  492.             do
  492.                $I_A1 = 0
  492. !dir$ ivdep
  492.                do
  492.                   (w0%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  492.                   $I_A1 = 1 + $I_A1
  492.                   if ( $I_A1 >= $F_A200 ) exit
  492.                enddo
  492.                $I_A2 = 1 + $I_A2
  492.                if ( $I_A2 >= 3 ) exit
  492.             enddo
  492.             $I_A3 = 1 + $I_A3
  492.             if ( $I_A3 >= $F_A199 ) exit
  492.          enddo
  492.       endif
  493.       capac0%header%a_contig = 1
  493.       capac0%dim_1%LB = 1
  493.       capac0%dim_1%EX = ( max( 0, ibmax ) )
  493.       capac0%dim_1%SM = 1
  493.       capac0%dim_2%LB = 1
  493.       capac0%dim_2%EX = 2
  493.       capac0%dim_2%SM = ( max( 0, ibmax ) )
  493.       capac0%dim_3%LB = 1
  493.       capac0%dim_3%EX = ( max( 0, jbmax ) )
  493.       capac0%dim_3%SM = ( 2 * max( 0, ibmax ) )
  493.       $_allo_P79(0) = 0x1000000000001L
  493.       $_allo_P79(1) = loc( capac0 )
  493.       call __allocate( $_allo_P79, 0, 0, _fcd( 0, 0 ) )
  494.       $F_A201 = ( max( 0, jbmax ) )
  494.       $F_A202 = ( max( 0, ibmax ) )
  494.       if ( and( -$F_A202, -$F_A201 ) < 0 ) then
  494.          $I_A3 = 0
  494.          do
  494.             $I_A2 = 0
  494.             do
  494.                $I_A1 = 0
  494. !dir$ ivdep
  494.                do
  494.                   (capac0%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  494.                   $I_A1 = 1 + $I_A1
  494.                   if ( $I_A1 >= $F_A202 ) exit
  494.                enddo
  494.                $I_A2 = 1 + $I_A2
  494.                if ( $I_A2 >= 2 ) exit
  494.             enddo
  494.             $I_A3 = 1 + $I_A3
  494.             if ( $I_A3 >= $F_A201 ) exit
  494.          enddo
  494.       endif
  495.       tmm%header%a_contig = 1
  495.       tmm%dim_1%LB = 1
  495.       tmm%dim_1%EX = ( max( 0, ibmax ) )
  495.       tmm%dim_1%SM = 1
  495.       tmm%dim_2%LB = 1
  495.       tmm%dim_2%EX = ( max( 0, jbmax ) )
  495.       tmm%dim_2%SM = ( max( 0, ibmax ) )
  495.       $_allo_P80(0) = 0x1000000000001L
  495.       $_allo_P80(1) = loc( tmm )
  495.       call __allocate( $_allo_P80, 0, 0, _fcd( 0, 0 ) )
  496.       $F_A203 = ( max( 0, jbmax ) )
  496.       $F_A204 = ( max( 0, ibmax ) )
  496.       if ( and( -$F_A204, -$F_A203 ) < 0 ) then
  496.          $I_A2 = 0
  496.          do
  496.             $I_A1 = 0
  496. !dir$ ivdep
  496.             do
  496.                (tmm%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  496.                $I_A1 = 1 + $I_A1
  496.                if ( $I_A1 >= $F_A204 ) exit
  496.             enddo
  496.             $I_A2 = 1 + $I_A2
  496.             if ( $I_A2 >= $F_A203 ) exit
  496.          enddo
  496.       endif
  497.       qmm%header%a_contig = 1
  497.       qmm%dim_1%LB = 1
  497.       qmm%dim_1%EX = ( max( 0, ibmax ) )
  497.       qmm%dim_1%SM = 1
  497.       qmm%dim_2%LB = 1
  497.       qmm%dim_2%EX = ( max( 0, jbmax ) )
  497.       qmm%dim_2%SM = ( max( 0, ibmax ) )
  497.       $_allo_P81(0) = 0x1000000000001L
  497.       $_allo_P81(1) = loc( qmm )
  497.       call __allocate( $_allo_P81, 0, 0, _fcd( 0, 0 ) )
  498.       $F_A205 = ( max( 0, jbmax ) )
  498.       $F_A206 = ( max( 0, ibmax ) )
  498.       if ( and( -$F_A206, -$F_A205 ) < 0 ) then
  498.          $I_A2 = 0
  498.          do
  498.             $I_A1 = 0
  498. !dir$ ivdep
  498.             do
  498.                (qmm%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  498.                $I_A1 = 1 + $I_A1
  498.                if ( $I_A1 >= $F_A206 ) exit
  498.             enddo
  498.             $I_A2 = 1 + $I_A2
  498.             if ( $I_A2 >= $F_A205 ) exit
  498.          enddo
  498.       endif
  499.       tcm%header%a_contig = 1
  499.       tcm%dim_1%LB = 1
  499.       tcm%dim_1%EX = ( max( 0, ibmax ) )
  499.       tcm%dim_1%SM = 1
  499.       tcm%dim_2%LB = 1
  499.       tcm%dim_2%EX = ( max( 0, jbmax ) )
  499.       tcm%dim_2%SM = ( max( 0, ibmax ) )
  499.       $_allo_P82(0) = 0x1000000000001L
  499.       $_allo_P82(1) = loc( tcm )
  499.       call __allocate( $_allo_P82, 0, 0, _fcd( 0, 0 ) )
  500.       $F_A207 = ( max( 0, jbmax ) )
  500.       $F_A208 = ( max( 0, ibmax ) )
  500.       if ( and( -$F_A208, -$F_A207 ) < 0 ) then
  500.          $I_A2 = 0
  500.          do
  500.             $I_A1 = 0
  500. !dir$ ivdep
  500.             do
  500.                (tcm%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  500.                $I_A1 = 1 + $I_A1
  500.                if ( $I_A1 >= $F_A208 ) exit
  500.             enddo
  500.             $I_A2 = 1 + $I_A2
  500.             if ( $I_A2 >= $F_A207 ) exit
  500.          enddo
  500.       endif
  501.       tgm%header%a_contig = 1
  501.       tgm%dim_1%LB = 1
  501.       tgm%dim_1%EX = ( max( 0, ibmax ) )
  501.       tgm%dim_1%SM = 1
  501.       tgm%dim_2%LB = 1
  501.       tgm%dim_2%EX = ( max( 0, jbmax ) )
  501.       tgm%dim_2%SM = ( max( 0, ibmax ) )
  501.       $_allo_P83(0) = 0x1000000000001L
  501.       $_allo_P83(1) = loc( tgm )
  501.       call __allocate( $_allo_P83, 0, 0, _fcd( 0, 0 ) )
  502.       $F_A209 = ( max( 0, jbmax ) )
  502.       $F_A210 = ( max( 0, ibmax ) )
  502.       if ( and( -$F_A210, -$F_A209 ) < 0 ) then
  502.          $I_A2 = 0
  502.          do
  502.             $I_A1 = 0
  502. !dir$ ivdep
  502.             do
  502.                (tgm%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  502.                $I_A1 = 1 + $I_A1
  502.                if ( $I_A1 >= $F_A210 ) exit
  502.             enddo
  502.             $I_A2 = 1 + $I_A2
  502.             if ( $I_A2 >= $F_A209 ) exit
  502.          enddo
  502.       endif
  503.       tdm%header%a_contig = 1
  503.       tdm%dim_1%LB = 1
  503.       tdm%dim_1%EX = ( max( 0, ibmax ) )
  503.       tdm%dim_1%SM = 1
  503.       tdm%dim_2%LB = 1
  503.       tdm%dim_2%EX = ( max( 0, jbmax ) )
  503.       tdm%dim_2%SM = ( max( 0, ibmax ) )
  503.       $_allo_P84(0) = 0x1000000000001L
  503.       $_allo_P84(1) = loc( tdm )
  503.       call __allocate( $_allo_P84, 0, 0, _fcd( 0, 0 ) )
  504.       $F_A211 = ( max( 0, jbmax ) )
  504.       $F_A212 = ( max( 0, ibmax ) )
  504.       if ( and( -$F_A212, -$F_A211 ) < 0 ) then
  504.          $I_A2 = 0
  504.          do
  504.             $I_A1 = 0
  504. !dir$ ivdep
  504.             do
  504.                (tdm%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  504.                $I_A1 = 1 + $I_A1
  504.                if ( $I_A1 >= $F_A212 ) exit
  504.             enddo
  504.             $I_A2 = 1 + $I_A2
  504.             if ( $I_A2 >= $F_A211 ) exit
  504.          enddo
  504.       endif
  505.       wm%header%a_contig = 1
  505.       wm%dim_1%LB = 1
  505.       wm%dim_1%EX = ( max( 0, ibmax ) )
  505.       wm%dim_1%SM = 1
  505.       wm%dim_2%LB = 1
  505.       wm%dim_2%EX = 3
  505.       wm%dim_2%SM = ( max( 0, ibmax ) )
  505.       wm%dim_3%LB = 1
  505.       wm%dim_3%EX = ( max( 0, jbmax ) )
  505.       wm%dim_3%SM = ( 3 * max( 0, ibmax ) )
  505.       $_allo_P85(0) = 0x1000000000001L
  505.       $_allo_P85(1) = loc( wm )
  505.       call __allocate( $_allo_P85, 0, 0, _fcd( 0, 0 ) )
  506.       $F_A213 = ( max( 0, jbmax ) )
  506.       $F_A214 = ( max( 0, ibmax ) )
  506.       if ( and( -$F_A214, -$F_A213 ) < 0 ) then
  506.          $I_A3 = 0
  506.          do
  506.             $I_A2 = 0
  506.             do
  506.                $I_A1 = 0
  506. !dir$ ivdep
  506.                do
  506.                   (wm%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  506.                   $I_A1 = 1 + $I_A1
  506.                   if ( $I_A1 >= $F_A214 ) exit
  506.                enddo
  506.                $I_A2 = 1 + $I_A2
  506.                if ( $I_A2 >= 3 ) exit
  506.             enddo
  506.             $I_A3 = 1 + $I_A3
  506.             if ( $I_A3 >= $F_A213 ) exit
  506.          enddo
  506.       endif
  507.       capacm%header%a_contig = 1
  507.       capacm%dim_1%LB = 1
  507.       capacm%dim_1%EX = ( max( 0, ibmax ) )
  507.       capacm%dim_1%SM = 1
  507.       capacm%dim_2%LB = 1
  507.       capacm%dim_2%EX = 2
  507.       capacm%dim_2%SM = ( max( 0, ibmax ) )
  507.       capacm%dim_3%LB = 1
  507.       capacm%dim_3%EX = ( max( 0, jbmax ) )
  507.       capacm%dim_3%SM = ( 2 * max( 0, ibmax ) )
  507.       $_allo_P86(0) = 0x1000000000001L
  507.       $_allo_P86(1) = loc( capacm )
  507.       call __allocate( $_allo_P86, 0, 0, _fcd( 0, 0 ) )
  508.       $F_A215 = ( max( 0, jbmax ) )
  508.       $F_A216 = ( max( 0, ibmax ) )
  508.       if ( and( -$F_A216, -$F_A215 ) < 0 ) then
  508.          $I_A3 = 0
  508.          do
  508.             $I_A2 = 0
  508.             do
  508.                $I_A1 = 0
  508. !dir$ ivdep
  508.                do
  508.                   (capacm%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  508.                   $I_A1 = 1 + $I_A1
  508.                   if ( $I_A1 >= $F_A216 ) exit
  508.                enddo
  508.                $I_A2 = 1 + $I_A2
  508.                if ( $I_A2 >= 2 ) exit
  508.             enddo
  508.             $I_A3 = 1 + $I_A3
  508.             if ( $I_A3 >= $F_A215 ) exit
  508.          enddo
  508.       endif
  509.       var%header%a_contig = 1
  509.       var%dim_1%LB = 1
  509.       var%dim_1%EX = ( max( 0, ibmax ) )
  509.       var%dim_1%SM = 1
  509.       var%dim_2%LB = 1
  509.       var%dim_2%EX = ( max( 0, jbmax ) )
  509.       var%dim_2%SM = ( max( 0, ibmax ) )
  509.       $_allo_P87(0) = 0x1000000000001L
  509.       $_allo_P87(1) = loc( var )
  509.       call __allocate( $_allo_P87, 0, 0, _fcd( 0, 0 ) )
  510.       $F_A217 = ( max( 0, jbmax ) )
  510.       $F_A218 = ( max( 0, ibmax ) )
  510.       if ( and( -$F_A218, -$F_A217 ) < 0 ) then
  510.          $I_A2 = 0
  510.          do
  510.             $I_A1 = 0
  510. !dir$ ivdep
  510.             do
  510.                (var%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  510.                $I_A1 = 1 + $I_A1
  510.                if ( $I_A1 >= $F_A218 ) exit
  510.             enddo
  510.             $I_A2 = 1 + $I_A2
  510.             if ( $I_A2 >= $F_A217 ) exit
  510.          enddo
  510.       endif
  511.       tg1%header%a_contig = 1
  511.       tg1%dim_1%LB = 1
  511.       tg1%dim_1%EX = ( max( 0, ibmax ) )
  511.       tg1%dim_1%SM = 1
  511.       tg1%dim_2%LB = 1
  511.       tg1%dim_2%EX = ( max( 0, jbmax ) )
  511.       tg1%dim_2%SM = ( max( 0, ibmax ) )
  511.       $_allo_P88(0) = 0x1000000000001L
  511.       $_allo_P88(1) = loc( tg1 )
  511.       call __allocate( $_allo_P88, 0, 0, _fcd( 0, 0 ) )
  512.       $F_A219 = ( max( 0, jbmax ) )
  512.       $F_A220 = ( max( 0, ibmax ) )
  512.       if ( and( -$F_A220, -$F_A219 ) < 0 ) then
  512.          $I_A2 = 0
  512.          do
  512.             $I_A1 = 0
  512. !dir$ ivdep
  512.             do
  512.                (tg1%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  512.                $I_A1 = 1 + $I_A1
  512.                if ( $I_A1 >= $F_A220 ) exit
  512.             enddo
  512.             $I_A2 = 1 + $I_A2
  512.             if ( $I_A2 >= $F_A219 ) exit
  512.          enddo
  512.       endif
  513.       tg2%header%a_contig = 1
  513.       tg2%dim_1%LB = 1
  513.       tg2%dim_1%EX = ( max( 0, ibmax ) )
  513.       tg2%dim_1%SM = 1
  513.       tg2%dim_2%LB = 1
  513.       tg2%dim_2%EX = ( max( 0, jbmax ) )
  513.       tg2%dim_2%SM = ( max( 0, ibmax ) )
  513.       $_allo_P89(0) = 0x1000000000001L
  513.       $_allo_P89(1) = loc( tg2 )
  513.       call __allocate( $_allo_P89, 0, 0, _fcd( 0, 0 ) )
  514.       $F_A221 = ( max( 0, jbmax ) )
  514.       $F_A222 = ( max( 0, ibmax ) )
  514.       if ( and( -$F_A222, -$F_A221 ) < 0 ) then
  514.          $I_A2 = 0
  514.          do
  514.             $I_A1 = 0
  514. !dir$ ivdep
  514.             do
  514.                (tg2%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  514.                $I_A1 = 1 + $I_A1
  514.                if ( $I_A1 >= $F_A222 ) exit
  514.             enddo
  514.             $I_A2 = 1 + $I_A2
  514.             if ( $I_A2 >= $F_A221 ) exit
  514.          enddo
  514.       endif
  515.       tg3%header%a_contig = 1
  515.       tg3%dim_1%LB = 1
  515.       tg3%dim_1%EX = ( max( 0, ibmax ) )
  515.       tg3%dim_1%SM = 1
  515.       tg3%dim_2%LB = 1
  515.       tg3%dim_2%EX = ( max( 0, jbmax ) )
  515.       tg3%dim_2%SM = ( max( 0, ibmax ) )
  515.       $_allo_P90(0) = 0x1000000000001L
  515.       $_allo_P90(1) = loc( tg3 )
  515.       call __allocate( $_allo_P90, 0, 0, _fcd( 0, 0 ) )
  516.       $F_A223 = ( max( 0, jbmax ) )
  516.       $F_A224 = ( max( 0, ibmax ) )
  516.       if ( and( -$F_A224, -$F_A223 ) < 0 ) then
  516.          $I_A2 = 0
  516.          do
  516.             $I_A1 = 0
  516. !dir$ ivdep
  516.             do
  516.                (tg3%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  516.                $I_A1 = 1 + $I_A1
  516.                if ( $I_A1 >= $F_A224 ) exit
  516.             enddo
  516.             $I_A2 = 1 + $I_A2
  516.             if ( $I_A2 >= $F_A223 ) exit
  516.          enddo
  516.       endif
  517.       soilm%header%a_contig = 1
  517.       soilm%dim_1%LB = 1
  517.       soilm%dim_1%EX = ( max( 0, ibmax ) )
  517.       soilm%dim_1%SM = 1
  517.       soilm%dim_2%LB = 1
  517.       soilm%dim_2%EX = ( max( 0, jbmax ) )
  517.       soilm%dim_2%SM = ( max( 0, ibmax ) )
  517.       $_allo_P91(0) = 0x1000000000001L
  517.       $_allo_P91(1) = loc( soilm )
  517.       call __allocate( $_allo_P91, 0, 0, _fcd( 0, 0 ) )
  518.       $F_A225 = ( max( 0, jbmax ) )
  518.       $F_A226 = ( max( 0, ibmax ) )
  518.       if ( and( -$F_A226, -$F_A225 ) < 0 ) then
  518.          $I_A2 = 0
  518.          do
  518.             $I_A1 = 0
  518. !dir$ ivdep
  518.             do
  518.                (soilm%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  518.                $I_A1 = 1 + $I_A1
  518.                if ( $I_A1 >= $F_A226 ) exit
  518.             enddo
  518.             $I_A2 = 1 + $I_A2
  518.             if ( $I_A2 >= $F_A225 ) exit
  518.          enddo
  518.       endif
  519.       sens%header%a_contig = 1
  519.       sens%dim_1%LB = 1
  519.       sens%dim_1%EX = ( max( 0, ibmax ) )
  519.       sens%dim_1%SM = 1
  519.       sens%dim_2%LB = 1
  519.       sens%dim_2%EX = ( max( 0, jbmax ) )
  519.       sens%dim_2%SM = ( max( 0, ibmax ) )
  519.       $_allo_P92(0) = 0x1000000000001L
  519.       $_allo_P92(1) = loc( sens )
  519.       call __allocate( $_allo_P92, 0, 0, _fcd( 0, 0 ) )
  520.       $F_A227 = ( max( 0, jbmax ) )
  520.       $F_A228 = ( max( 0, ibmax ) )
  520.       if ( and( -$F_A228, -$F_A227 ) < 0 ) then
  520.          $I_A2 = 0
  520.          do
  520.             $I_A1 = 0
  520. !dir$ ivdep
  520.             do
  520.                (sens%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  520.                $I_A1 = 1 + $I_A1
  520.                if ( $I_A1 >= $F_A228 ) exit
  520.             enddo
  520.             $I_A2 = 1 + $I_A2
  520.             if ( $I_A2 >= $F_A227 ) exit
  520.          enddo
  520.       endif
  521.       evap%header%a_contig = 1
  521.       evap%dim_1%LB = 1
  521.       evap%dim_1%EX = ( max( 0, ibmax ) )
  521.       evap%dim_1%SM = 1
  521.       evap%dim_2%LB = 1
  521.       evap%dim_2%EX = ( max( 0, jbmax ) )
  521.       evap%dim_2%SM = ( max( 0, ibmax ) )
  521.       $_allo_P93(0) = 0x1000000000001L
  521.       $_allo_P93(1) = loc( evap )
  521.       call __allocate( $_allo_P93, 0, 0, _fcd( 0, 0 ) )
  522.       $F_A229 = ( max( 0, jbmax ) )
  522.       $F_A230 = ( max( 0, ibmax ) )
  522.       if ( and( -$F_A230, -$F_A229 ) < 0 ) then
  522.          $I_A2 = 0
  522.          do
  522.             $I_A1 = 0
  522. !dir$ ivdep
  522.             do
  522.                (evap%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  522.                $I_A1 = 1 + $I_A1
  522.                if ( $I_A1 >= $F_A230 ) exit
  522.             enddo
  522.             $I_A2 = 1 + $I_A2
  522.             if ( $I_A2 >= $F_A229 ) exit
  522.          enddo
  522.       endif
  524.       o3mix%header%a_contig = 1
  524.       o3mix%dim_1%LB = 1
  524.       o3mix%dim_1%EX = ( max( 0, ibmax ) )
  524.       o3mix%dim_1%SM = 1
  524.       o3mix%dim_2%LB = 1
  524.       o3mix%dim_2%EX = ( max( 0, kmax ) )
  524.       o3mix%dim_2%SM = ( max( 0, ibmax ) )
  524.       o3mix%dim_3%LB = 1
  524.       o3mix%dim_3%EX = ( max( 0, jbmax ) )
  524.       o3mix%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  524.       $_allo_P94(0) = 0x1000000000001L
  524.       $_allo_P94(1) = loc( o3mix )
  524.       call __allocate( $_allo_P94, 0, 0, _fcd( 0, 0 ) )
  525.       $F_A231 = ( max( 0, jbmax ) )
  525.       $F_A232 = ( max( 0, kmax ) )
  525.       $F_A233 = ( max( 0, ibmax ) )
  525.       if ( and( and( -$F_A232, -$F_A231 ), -$F_A233 ) < 0 ) then
  525.          $I_A3 = 0
  525.          do
  525.             $I_A2 = 0
  525.             do
  525.                $I_A1 = 0
  525. !dir$ ivdep
  525.                do
  525.                   (o3mix%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  525.                   $I_A1 = 1 + $I_A1
  525.                   if ( $I_A1 >= $F_A233 ) exit
  525.                enddo
  525.                $I_A2 = 1 + $I_A2
  525.                if ( $I_A2 >= $F_A232 ) exit
  525.             enddo
  525.             $I_A3 = 1 + $I_A3
  525.             if ( $I_A3 >= $F_A231 ) exit
  525.          enddo
  525.       endif
  526.       glsm_w%header%a_contig = 1
  526.       glsm_w%dim_1%LB = 1
  526.       glsm_w%dim_1%EX = ( max( 0, ibmax ) )
  526.       glsm_w%dim_1%SM = 1
  526.       glsm_w%dim_2%LB = 1
  526.       glsm_w%dim_2%EX = ( max( 0, jbmax ) )
  526.       glsm_w%dim_2%SM = ( max( 0, ibmax ) )
  526.       glsm_w%dim_3%LB = 1
  526.       glsm_w%dim_3%EX = 8
  526.       glsm_w%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  526.       $_allo_P95(0) = 0x1000000000001L
  526.       $_allo_P95(1) = loc( glsm_w )
  526.       call __allocate( $_allo_P95, 0, 0, _fcd( 0, 0 ) )
  527.       $F_A234 = ( max( 0, jbmax ) )
  527.       $F_A235 = ( max( 0, ibmax ) )
  527.       if ( and( -$F_A235, -$F_A234 ) < 0 ) then
  527.          $I_A3 = 0
  527.          do
  527.             $I_A2 = 0
  527.             do
  527.                $I_A1 = 0
  527. !dir$ ivdep
  527.                do
  527.                   (glsm_w%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  527.                   $I_A1 = 1 + $I_A1
  527.                   if ( $I_A1 >= $F_A235 ) exit
  527.                enddo
  527.                $I_A2 = 1 + $I_A2
  527.                if ( $I_A2 >= $F_A234 ) exit
  527.             enddo
  527.             $I_A3 = 1 + $I_A3
  527.             if ( $I_A3 >= 8 ) exit
  527.          enddo
  527.       endif
  528.       wsib3d%header%a_contig = 1
  528.       wsib3d%dim_1%LB = 1
  528.       wsib3d%dim_1%EX = ( max( 0, ibmax ) )
  528.       wsib3d%dim_1%SM = 1
  528.       wsib3d%dim_2%LB = 1
  528.       wsib3d%dim_2%EX = ( max( 0, jbmax ) )
  528.       wsib3d%dim_2%SM = ( max( 0, ibmax ) )
  528.       wsib3d%dim_3%LB = 1
  528.       wsib3d%dim_3%EX = 3
  528.       wsib3d%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  528.       $_allo_P96(0) = 0x1000000000001L
  528.       $_allo_P96(1) = loc( wsib3d )
  528.       call __allocate( $_allo_P96, 0, 0, _fcd( 0, 0 ) )
  529.       $F_A236 = ( max( 0, jbmax ) )
  529.       $F_A237 = ( max( 0, ibmax ) )
  529.       if ( and( -$F_A237, -$F_A236 ) < 0 ) then
  529.          $I_A3 = 0
  529.          do
  529.             $I_A2 = 0
  529.             do
  529.                $I_A1 = 0
  529. !dir$ ivdep
  529.                do
  529.                   (wsib3d%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  529.                   $I_A1 = 1 + $I_A1
  529.                   if ( $I_A1 >= $F_A237 ) exit
  529.                enddo
  529.                $I_A2 = 1 + $I_A2
  529.                if ( $I_A2 >= $F_A236 ) exit
  529.             enddo
  529.             $I_A3 = 1 + $I_A3
  529.             if ( $I_A3 >= 3 ) exit
  529.          enddo
  529.       endif
  530.       veg_type%header%a_contig = 1
  530.       veg_type%dim_1%LB = 1
  530.       veg_type%dim_1%EX = ( max( 0, ibmax ) )
  530.       veg_type%dim_1%SM = 1
  530.       veg_type%dim_2%LB = 1
  530.       veg_type%dim_2%EX = ( max( 0, jbmax ) )
  530.       veg_type%dim_2%SM = ( max( 0, ibmax ) )
  530.       veg_type%dim_3%LB = 1
  530.       veg_type%dim_3%EX = 5
  530.       veg_type%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  530.       $_allo_P97(0) = 0x1000000000001L
  530.       $_allo_P97(1) = loc( veg_type )
  530.       call __allocate( $_allo_P97, 0, 0, _fcd( 0, 0 ) )
  531.       $F_A238 = ( max( 0, jbmax ) )
  531.       $F_A239 = ( max( 0, ibmax ) )
  531.       if ( and( -$F_A239, -$F_A238 ) < 0 ) then
  531.          $I_A3 = 0
  531.          do
  531.             $I_A2 = 0
  531.             do
  531.                $I_A1 = 0
  531. !dir$ ivdep
  531.                do
  531.                   (veg_type%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  531.                   $I_A1 = 1 + $I_A1
  531.                   if ( $I_A1 >= $F_A239 ) exit
  531.                enddo
  531.                $I_A2 = 1 + $I_A2
  531.                if ( $I_A2 >= $F_A238 ) exit
  531.             enddo
  531.             $I_A3 = 1 + $I_A3
  531.             if ( $I_A3 >= 5 ) exit
  531.          enddo
  531.       endif
  532.       frac_occ%header%a_contig = 1
  532.       frac_occ%dim_1%LB = 1
  532.       frac_occ%dim_1%EX = ( max( 0, ibmax ) )
  532.       frac_occ%dim_1%SM = 1
  532.       frac_occ%dim_2%LB = 1
  532.       frac_occ%dim_2%EX = ( max( 0, jbmax ) )
  532.       frac_occ%dim_2%SM = ( max( 0, ibmax ) )
  532.       frac_occ%dim_3%LB = 1
  532.       frac_occ%dim_3%EX = 5
  532.       frac_occ%dim_3%SM = ( max( 0, ibmax ) * max( 0, jbmax ) )
  532.       $_allo_P98(0) = 0x1000000000001L
  532.       $_allo_P98(1) = loc( frac_occ )
  532.       call __allocate( $_allo_P98, 0, 0, _fcd( 0, 0 ) )
  533.       $F_A240 = ( max( 0, jbmax ) )
  533.       $F_A241 = ( max( 0, ibmax ) )
  533.       if ( and( -$F_A241, -$F_A240 ) < 0 ) then
  533.          $I_A3 = 0
  533.          do
  533.             $I_A2 = 0
  533.             do
  533.                $I_A1 = 0
  533. !dir$ ivdep
  533.                do
  533.                   (frac_occ%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 0.0
  533.                   $I_A1 = 1 + $I_A1
  533.                   if ( $I_A1 >= $F_A241 ) exit
  533.                enddo
  533.                $I_A2 = 1 + $I_A2
  533.                if ( $I_A2 >= $F_A240 ) exit
  533.             enddo
  533.             $I_A3 = 1 + $I_A3
  533.             if ( $I_A3 >= 5 ) exit
  533.          enddo
  533.       endif
  534.       soil_type%header%a_contig = 1
  534.       soil_type%dim_1%LB = 1
  534.       soil_type%dim_1%EX = ( max( 0, ibmax ) )
  534.       soil_type%dim_1%SM = 1
  534.       soil_type%dim_2%LB = 1
  534.       soil_type%dim_2%EX = ( max( 0, jbmax ) )
  534.       soil_type%dim_2%SM = ( max( 0, ibmax ) )
  534.       $_allo_P99(0) = 0x1000000000001L
  534.       $_allo_P99(1) = loc( soil_type )
  534.       call __allocate( $_allo_P99, 0, 0, _fcd( 0, 0 ) )
  535.       $F_A242 = ( max( 0, jbmax ) )
  535.       $F_A243 = ( max( 0, ibmax ) )
  535.       if ( and( -$F_A243, -$F_A242 ) < 0 ) then
  535.          $I_A2 = 0
  535.          do
  535.             $I_A1 = 0
  535. !dir$ ivdep
  535.             do
  535.                (soil_type%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  535.                $I_A1 = 1 + $I_A1
  535.                if ( $I_A1 >= $F_A243 ) exit
  535.             enddo
  535.             $I_A2 = 1 + $I_A2
  535.             if ( $I_A2 >= $F_A242 ) exit
  535.          enddo
  535.       endif
  536.       xland%header%a_contig = 1
  536.       xland%dim_1%LB = 1
  536.       xland%dim_1%EX = ( max( 0, ibmax ) )
  536.       xland%dim_1%SM = 1
  536.       xland%dim_2%LB = 1
  536.       xland%dim_2%EX = ( max( 0, jbmax ) )
  536.       xland%dim_2%SM = ( max( 0, ibmax ) )
  536.       $_allo_P100(0) = 0x1000000000001L
  536.       $_allo_P100(1) = loc( xland )
  536.       call __allocate( $_allo_P100, 0, 0, _fcd( 0, 0 ) )
  537.       $F_A244 = ( max( 0, jbmax ) )
  537.       $F_A245 = ( max( 0, ibmax ) )
  537.       if ( and( -$F_A245, -$F_A244 ) < 0 ) then
  537.          $I_A2 = 0
  537.          do
  537.             $I_A1 = 0
  537. !dir$ ivdep
  537.             do
  537.                (xland%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  537.                $I_A1 = 1 + $I_A1
  537.                if ( $I_A1 >= $F_A245 ) exit
  537.             enddo
  537.             $I_A2 = 1 + $I_A2
  537.             if ( $I_A2 >= $F_A244 ) exit
  537.          enddo
  537.       endif
  538.       seamask%header%a_contig = 1
  538.       seamask%dim_1%LB = 1
  538.       seamask%dim_1%EX = ( max( 0, ibmax ) )
  538.       seamask%dim_1%SM = 1
  538.       seamask%dim_2%LB = 1
  538.       seamask%dim_2%EX = ( max( 0, jbmax ) )
  538.       seamask%dim_2%SM = ( max( 0, ibmax ) )
  538.       $_allo_P101(0) = 0x1000000000001L
  538.       $_allo_P101(1) = loc( seamask )
  538.       call __allocate( $_allo_P101, 0, 0, _fcd( 0, 0 ) )
  539.       $F_A246 = ( max( 0, jbmax ) )
  539.       $F_A247 = ( max( 0, ibmax ) )
  539.       if ( and( -$F_A247, -$F_A246 ) < 0 ) then
  539.          $I_A2 = 0
  539.          do
  539.             $I_A1 = 0
  539. !dir$ ivdep
  539.             do
  539.                (seamask%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  539.                $I_A1 = 1 + $I_A1
  539.                if ( $I_A1 >= $F_A247 ) exit
  539.             enddo
  539.             $I_A2 = 1 + $I_A2
  539.             if ( $I_A2 >= $F_A246 ) exit
  539.          enddo
  539.       endif
  540.       z0%header%a_contig = 1
  540.       z0%dim_1%LB = 1
  540.       z0%dim_1%EX = ( max( 0, ibmax ) )
  540.       z0%dim_1%SM = 1
  540.       z0%dim_2%LB = 1
  540.       z0%dim_2%EX = ( max( 0, jbmax ) )
  540.       z0%dim_2%SM = ( max( 0, ibmax ) )
  540.       $_allo_P102(0) = 0x1000000000001L
  540.       $_allo_P102(1) = loc( z0 )
  540.       call __allocate( $_allo_P102, 0, 0, _fcd( 0, 0 ) )
  541.       $F_A248 = ( max( 0, jbmax ) )
  541.       $F_A249 = ( max( 0, ibmax ) )
  541.       if ( and( -$F_A249, -$F_A248 ) < 0 ) then
  541.          $I_A2 = 0
  541.          do
  541.             $I_A1 = 0
  541. !dir$ ivdep
  541.             do
  541.                (z0%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  541.                $I_A1 = 1 + $I_A1
  541.                if ( $I_A1 >= $F_A249 ) exit
  541.             enddo
  541.             $I_A2 = 1 + $I_A2
  541.             if ( $I_A2 >= $F_A248 ) exit
  541.          enddo
  541.       endif
  542.       ustar%header%a_contig = 1
  542.       ustar%dim_1%LB = 1
  542.       ustar%dim_1%EX = ( max( 0, ibmax ) )
  542.       ustar%dim_1%SM = 1
  542.       ustar%dim_2%LB = 1
  542.       ustar%dim_2%EX = ( max( 0, jbmax ) )
  542.       ustar%dim_2%SM = ( max( 0, ibmax ) )
  542.       $_allo_P103(0) = 0x1000000000001L
  542.       $_allo_P103(1) = loc( ustar )
  542.       call __allocate( $_allo_P103, 0, 0, _fcd( 0, 0 ) )
  543.       $F_A250 = ( max( 0, jbmax ) )
  543.       $F_A251 = ( max( 0, ibmax ) )
  543.       if ( and( -$F_A251, -$F_A250 ) < 0 ) then
  543.          $I_A2 = 0
  543.          do
  543.             $I_A1 = 0
  543. !dir$ ivdep
  543.             do
  543.                (ustar%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  543.                $I_A1 = 1 + $I_A1
  543.                if ( $I_A1 >= $F_A251 ) exit
  543.             enddo
  543.             $I_A2 = 1 + $I_A2
  543.             if ( $I_A2 >= $F_A250 ) exit
  543.          enddo
  543.       endif
  544.       lowlyr%header%a_contig = 1
  544.       lowlyr%dim_1%LB = 1
  544.       lowlyr%dim_1%EX = ( max( 0, ibmax ) )
  544.       lowlyr%dim_1%SM = 1
  544.       lowlyr%dim_2%LB = 1
  544.       lowlyr%dim_2%EX = ( max( 0, jbmax ) )
  544.       lowlyr%dim_2%SM = ( max( 0, ibmax ) )
  544.       $_allo_P104(0) = 0x1000000000001L
  544.       $_allo_P104(1) = loc( lowlyr )
  544.       call __allocate( $_allo_P104, 0, 0, _fcd( 0, 0 ) )
  545.       $F_A252 = ( max( 0, jbmax ) )
  545.       $F_A253 = ( max( 0, ibmax ) )
  545.       if ( and( -$F_A253, -$F_A252 ) < 0 ) then
  545.          $I_A2 = 0
  545.          do
  545.             $I_A1 = 0
  545. !dir$ ivdep
  545.             do
  545.                (lowlyr%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0
  545.                $I_A1 = 1 + $I_A1
  545.                if ( $I_A1 >= $F_A253 ) exit
  545.             enddo
  545.             $I_A2 = 1 + $I_A2
  545.             if ( $I_A2 >= $F_A252 ) exit
  545.          enddo
  545.       endif
  546.       tkemyj%header%a_contig = 1
  546.       tkemyj%dim_1%LB = 1
  546.       tkemyj%dim_1%EX = ( max( 0, ibmax ) )
  546.       tkemyj%dim_1%SM = 1
  546.       tkemyj%dim_2%LB = 1
  546.       tkemyj%dim_2%EX = ( max( 0, kmax ) )
  546.       tkemyj%dim_2%SM = ( max( 0, ibmax ) )
  546.       tkemyj%dim_3%LB = 1
  546.       tkemyj%dim_3%EX = ( max( 0, jbmax ) )
  546.       tkemyj%dim_3%SM = ( max( 0, kmax ) * max( 0, ibmax ) )
  546.       $_allo_P105(0) = 0x1000000000001L
  546.       $_allo_P105(1) = loc( tkemyj )
  546.       call __allocate( $_allo_P105, 0, 0, _fcd( 0, 0 ) )
  547.       $F_A254 = ( max( 0, jbmax ) )
  547.       $F_A255 = ( max( 0, kmax ) )
  547.       $F_A256 = ( max( 0, ibmax ) )
  547.       if ( and( and( -$F_A255, -$F_A254 ), -$F_A256 ) < 0 ) then
  547.          $I_A3 = 0
  547.          do
  547.             $I_A2 = 0
  547.             do
  547.                $I_A1 = 0
  547. !dir$ ivdep
  547.                do
  547.                   (tkemyj%base_addr)(1 + $I_A1, 1 + $I_A2, 1 + $I_A3, 0) = 2.0e-2
  547.                   $I_A1 = 1 + $I_A1
  547.                   if ( $I_A1 >= $F_A256 ) exit
  547.                enddo
  547.                $I_A2 = 1 + $I_A2
  547.                if ( $I_A2 >= $F_A255 ) exit
  547.             enddo
  547.             $I_A3 = 1 + $I_A3
  547.             if ( $I_A3 >= $F_A254 ) exit
  547.          enddo
  547.       endif
  548.       qsfc0%header%a_contig = 1
  548.       qsfc0%dim_1%LB = 1
  548.       qsfc0%dim_1%EX = ( max( 0, ibmax ) )
  548.       qsfc0%dim_1%SM = 1
  548.       qsfc0%dim_2%LB = 1
  548.       qsfc0%dim_2%EX = ( max( 0, jbmax ) )
  548.       qsfc0%dim_2%SM = ( max( 0, ibmax ) )
  548.       $_allo_P106(0) = 0x1000000000001L
  548.       $_allo_P106(1) = loc( qsfc0 )
  548.       call __allocate( $_allo_P106, 0, 0, _fcd( 0, 0 ) )
  549.       $F_A257 = ( max( 0, jbmax ) )
  549.       $F_A258 = ( max( 0, ibmax ) )
  549.       if ( and( -$F_A258, -$F_A257 ) < 0 ) then
  549.          $I_A2 = 0
  549.          do
  549.             $I_A1 = 0
  549. !dir$ ivdep
  549.             do
  549.                (qsfc0%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  549.                $I_A1 = 1 + $I_A1
  549.                if ( $I_A1 >= $F_A258 ) exit
  549.             enddo
  549.             $I_A2 = 1 + $I_A2
  549.             if ( $I_A2 >= $F_A257 ) exit
  549.          enddo
  549.       endif
  550.       tsfc0%header%a_contig = 1
  550.       tsfc0%dim_1%LB = 1
  550.       tsfc0%dim_1%EX = ( max( 0, ibmax ) )
  550.       tsfc0%dim_1%SM = 1
  550.       tsfc0%dim_2%LB = 1
  550.       tsfc0%dim_2%EX = ( max( 0, jbmax ) )
  550.       tsfc0%dim_2%SM = ( max( 0, ibmax ) )
  550.       $_allo_P107(0) = 0x1000000000001L
  550.       $_allo_P107(1) = loc( tsfc0 )
  550.       call __allocate( $_allo_P107, 0, 0, _fcd( 0, 0 ) )
  551.       $F_A259 = ( max( 0, jbmax ) )
  551.       $F_A260 = ( max( 0, ibmax ) )
  551.       if ( and( -$F_A260, -$F_A259 ) < 0 ) then
  551.          $I_A2 = 0
  551.          do
  551.             $I_A1 = 0
  551. !dir$ ivdep
  551.             do
  551.                (tsfc0%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  551.                $I_A1 = 1 + $I_A1
  551.                if ( $I_A1 >= $F_A260 ) exit
  551.             enddo
  551.             $I_A2 = 1 + $I_A2
  551.             if ( $I_A2 >= $F_A259 ) exit
  551.          enddo
  551.       endif
  552.       qsfcm%header%a_contig = 1
  552.       qsfcm%dim_1%LB = 1
  552.       qsfcm%dim_1%EX = ( max( 0, ibmax ) )
  552.       qsfcm%dim_1%SM = 1
  552.       qsfcm%dim_2%LB = 1
  552.       qsfcm%dim_2%EX = ( max( 0, jbmax ) )
  552.       qsfcm%dim_2%SM = ( max( 0, ibmax ) )
  552.       $_allo_P108(0) = 0x1000000000001L
  552.       $_allo_P108(1) = loc( qsfcm )
  552.       call __allocate( $_allo_P108, 0, 0, _fcd( 0, 0 ) )
  553.       $F_A261 = ( max( 0, jbmax ) )
  553.       $F_A262 = ( max( 0, ibmax ) )
  553.       if ( and( -$F_A262, -$F_A261 ) < 0 ) then
  553.          $I_A2 = 0
  553.          do
  553.             $I_A1 = 0
  553. !dir$ ivdep
  553.             do
  553.                (qsfcm%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  553.                $I_A1 = 1 + $I_A1
  553.                if ( $I_A1 >= $F_A262 ) exit
  553.             enddo
  553.             $I_A2 = 1 + $I_A2
  553.             if ( $I_A2 >= $F_A261 ) exit
  553.          enddo
  553.       endif
  554.       tsfcm%header%a_contig = 1
  554.       tsfcm%dim_1%LB = 1
  554.       tsfcm%dim_1%EX = ( max( 0, ibmax ) )
  554.       tsfcm%dim_1%SM = 1
  554.       tsfcm%dim_2%LB = 1
  554.       tsfcm%dim_2%EX = ( max( 0, jbmax ) )
  554.       tsfcm%dim_2%SM = ( max( 0, ibmax ) )
  554.       $_allo_P109(0) = 0x1000000000001L
  554.       $_allo_P109(1) = loc( tsfcm )
  554.       call __allocate( $_allo_P109, 0, 0, _fcd( 0, 0 ) )
  555.       $F_A263 = ( max( 0, jbmax ) )
  555.       $F_A264 = ( max( 0, ibmax ) )
  555.       if ( and( -$F_A264, -$F_A263 ) < 0 ) then
  555.          $I_A2 = 0
  555.          do
  555.             $I_A1 = 0
  555. !dir$ ivdep
  555.             do
  555.                (tsfcm%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  555.                $I_A1 = 1 + $I_A1
  555.                if ( $I_A1 >= $F_A264 ) exit
  555.             enddo
  555.             $I_A2 = 1 + $I_A2
  555.             if ( $I_A2 >= $F_A263 ) exit
  555.          enddo
  555.       endif
  556.       snow%header%a_contig = 1
  556.       snow%dim_1%LB = 1
  556.       snow%dim_1%EX = ( max( 0, ibmax ) )
  556.       snow%dim_1%SM = 1
  556.       snow%dim_2%LB = 1
  556.       snow%dim_2%EX = ( max( 0, jbmax ) )
  556.       snow%dim_2%SM = ( max( 0, ibmax ) )
  556.       $_allo_P110(0) = 0x1000000000001L
  556.       $_allo_P110(1) = loc( snow )
  556.       call __allocate( $_allo_P110, 0, 0, _fcd( 0, 0 ) )
  557.       $F_A265 = ( max( 0, jbmax ) )
  557.       $F_A266 = ( max( 0, ibmax ) )
  557.       if ( and( -$F_A266, -$F_A265 ) < 0 ) then
  557.          $I_A2 = 0
  557.          do
  557.             $I_A1 = 0
  557. !dir$ ivdep
  557.             do
  557.                (snow%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  557.                $I_A1 = 1 + $I_A1
  557.                if ( $I_A1 >= $F_A266 ) exit
  557.             enddo
  557.             $I_A2 = 1 + $I_A2
  557.             if ( $I_A2 >= $F_A265 ) exit
  557.          enddo
  557.       endif
  558.       thz0%header%a_contig = 1
  558.       thz0%dim_1%LB = 1
  558.       thz0%dim_1%EX = ( max( 0, ibmax ) )
  558.       thz0%dim_1%SM = 1
  558.       thz0%dim_2%LB = 1
  558.       thz0%dim_2%EX = ( max( 0, jbmax ) )
  558.       thz0%dim_2%SM = ( max( 0, ibmax ) )
  558.       $_allo_P111(0) = 0x1000000000001L
  558.       $_allo_P111(1) = loc( thz0 )
  558.       call __allocate( $_allo_P111, 0, 0, _fcd( 0, 0 ) )
  559.       $F_A267 = ( max( 0, jbmax ) )
  559.       $F_A268 = ( max( 0, ibmax ) )
  559.       if ( and( -$F_A268, -$F_A267 ) < 0 ) then
  559.          $I_A2 = 0
  559.          do
  559.             $I_A1 = 0
  559. !dir$ ivdep
  559.             do
  559.                (thz0%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  559.                $I_A1 = 1 + $I_A1
  559.                if ( $I_A1 >= $F_A268 ) exit
  559.             enddo
  559.             $I_A2 = 1 + $I_A2
  559.             if ( $I_A2 >= $F_A267 ) exit
  559.          enddo
  559.       endif
  560.       qz0%header%a_contig = 1
  560.       qz0%dim_1%LB = 1
  560.       qz0%dim_1%EX = ( max( 0, ibmax ) )
  560.       qz0%dim_1%SM = 1
  560.       qz0%dim_2%LB = 1
  560.       qz0%dim_2%EX = ( max( 0, jbmax ) )
  560.       qz0%dim_2%SM = ( max( 0, ibmax ) )
  560.       $_allo_P112(0) = 0x1000000000001L
  560.       $_allo_P112(1) = loc( qz0 )
  560.       call __allocate( $_allo_P112, 0, 0, _fcd( 0, 0 ) )
  561.       $F_A269 = ( max( 0, jbmax ) )
  561.       $F_A270 = ( max( 0, ibmax ) )
  561.       if ( and( -$F_A270, -$F_A269 ) < 0 ) then
  561.          $I_A2 = 0
  561.          do
  561.             $I_A1 = 0
  561. !dir$ ivdep
  561.             do
  561.                (qz0%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  561.                $I_A1 = 1 + $I_A1
  561.                if ( $I_A1 >= $F_A270 ) exit
  561.             enddo
  561.             $I_A2 = 1 + $I_A2
  561.             if ( $I_A2 >= $F_A269 ) exit
  561.          enddo
  561.       endif
  562.       uz0%header%a_contig = 1
  562.       uz0%dim_1%LB = 1
  562.       uz0%dim_1%EX = ( max( 0, ibmax ) )
  562.       uz0%dim_1%SM = 1
  562.       uz0%dim_2%LB = 1
  562.       uz0%dim_2%EX = ( max( 0, jbmax ) )
  562.       uz0%dim_2%SM = ( max( 0, ibmax ) )
  562.       $_allo_P113(0) = 0x1000000000001L
  562.       $_allo_P113(1) = loc( uz0 )
  562.       call __allocate( $_allo_P113, 0, 0, _fcd( 0, 0 ) )
  563.       $F_A271 = ( max( 0, jbmax ) )
  563.       $F_A272 = ( max( 0, ibmax ) )
  563.       if ( and( -$F_A272, -$F_A271 ) < 0 ) then
  563.          $I_A2 = 0
  563.          do
  563.             $I_A1 = 0
  563. !dir$ ivdep
  563.             do
  563.                (uz0%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  563.                $I_A1 = 1 + $I_A1
  563.                if ( $I_A1 >= $F_A272 ) exit
  563.             enddo
  563.             $I_A2 = 1 + $I_A2
  563.             if ( $I_A2 >= $F_A271 ) exit
  563.          enddo
  563.       endif
  564.       vz0%header%a_contig = 1
  564.       vz0%dim_1%LB = 1
  564.       vz0%dim_1%EX = ( max( 0, ibmax ) )
  564.       vz0%dim_1%SM = 1
  564.       vz0%dim_2%LB = 1
  564.       vz0%dim_2%EX = ( max( 0, jbmax ) )
  564.       vz0%dim_2%SM = ( max( 0, ibmax ) )
  564.       $_allo_P114(0) = 0x1000000000001L
  564.       $_allo_P114(1) = loc( vz0 )
  564.       call __allocate( $_allo_P114, 0, 0, _fcd( 0, 0 ) )
  565.       $F_A273 = ( max( 0, jbmax ) )
  565.       $F_A274 = ( max( 0, ibmax ) )
  565.       if ( and( -$F_A274, -$F_A273 ) < 0 ) then
  565.          $I_A2 = 0
  565.          do
  565.             $I_A1 = 0
  565. !dir$ ivdep
  565.             do
  565.                (vz0%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  565.                $I_A1 = 1 + $I_A1
  565.                if ( $I_A1 >= $F_A274 ) exit
  565.             enddo
  565.             $I_A2 = 1 + $I_A2
  565.             if ( $I_A2 >= $F_A273 ) exit
  565.          enddo
  565.       endif
  566.       znt%header%a_contig = 1
  566.       znt%dim_1%LB = 1
  566.       znt%dim_1%EX = ( max( 0, ibmax ) )
  566.       znt%dim_1%SM = 1
  566.       znt%dim_2%LB = 1
  566.       znt%dim_2%EX = ( max( 0, jbmax ) )
  566.       znt%dim_2%SM = ( max( 0, ibmax ) )
  566.       $_allo_P115(0) = 0x1000000000001L
  566.       $_allo_P115(1) = loc( znt )
  566.       call __allocate( $_allo_P115, 0, 0, _fcd( 0, 0 ) )
  567.       $F_A275 = ( max( 0, jbmax ) )
  567.       $F_A276 = ( max( 0, ibmax ) )
  567.       if ( and( -$F_A276, -$F_A275 ) < 0 ) then
  567.          $I_A2 = 0
  567.          do
  567.             $I_A1 = 0
  567. !dir$ ivdep
  567.             do
  567.                (znt%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  567.                $I_A1 = 1 + $I_A1
  567.                if ( $I_A1 >= $F_A276 ) exit
  567.             enddo
  567.             $I_A2 = 1 + $I_A2
  567.             if ( $I_A2 >= $F_A275 ) exit
  567.          enddo
  567.       endif
  568.       pblh%header%a_contig = 1
  568.       pblh%dim_1%LB = 1
  568.       pblh%dim_1%EX = ( max( 0, ibmax ) )
  568.       pblh%dim_1%SM = 1
  568.       pblh%dim_2%LB = 1
  568.       pblh%dim_2%EX = ( max( 0, jbmax ) )
  568.       pblh%dim_2%SM = ( max( 0, ibmax ) )
  568.       $_allo_P116(0) = 0x1000000000001L
  568.       $_allo_P116(1) = loc( pblh )
  568.       call __allocate( $_allo_P116, 0, 0, _fcd( 0, 0 ) )
  569.       $F_A277 = ( max( 0, jbmax ) )
  569.       $F_A278 = ( max( 0, ibmax ) )
  569.       if ( and( -$F_A278, -$F_A277 ) < 0 ) then
  569.          $I_A2 = 0
  569.          do
  569.             $I_A1 = 0
  569. !dir$ ivdep
  569.             do
  569.                (pblh%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  569.                $I_A1 = 1 + $I_A1
  569.                if ( $I_A1 >= $F_A278 ) exit
  569.             enddo
  569.             $I_A2 = 1 + $I_A2
  569.             if ( $I_A2 >= $F_A277 ) exit
  569.          enddo
  569.       endif
  570.       akhs%header%a_contig = 1
  570.       akhs%dim_1%LB = 1
  570.       akhs%dim_1%EX = ( max( 0, ibmax ) )
  570.       akhs%dim_1%SM = 1
  570.       akhs%dim_2%LB = 1
  570.       akhs%dim_2%EX = ( max( 0, jbmax ) )
  570.       akhs%dim_2%SM = ( max( 0, ibmax ) )
  570.       $_allo_P117(0) = 0x1000000000001L
  570.       $_allo_P117(1) = loc( akhs )
  570.       call __allocate( $_allo_P117, 0, 0, _fcd( 0, 0 ) )
  571.       $F_A279 = ( max( 0, jbmax ) )
  571.       $F_A280 = ( max( 0, ibmax ) )
  571.       if ( and( -$F_A280, -$F_A279 ) < 0 ) then
  571.          $I_A2 = 0
  571.          do
  571.             $I_A1 = 0
  571. !dir$ ivdep
  571.             do
  571.                (akhs%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  571.                $I_A1 = 1 + $I_A1
  571.                if ( $I_A1 >= $F_A280 ) exit
  571.             enddo
  571.             $I_A2 = 1 + $I_A2
  571.             if ( $I_A2 >= $F_A279 ) exit
  571.          enddo
  571.       endif
  572.       akms%header%a_contig = 1
  572.       akms%dim_1%LB = 1
  572.       akms%dim_1%EX = ( max( 0, ibmax ) )
  572.       akms%dim_1%SM = 1
  572.       akms%dim_2%LB = 1
  572.       akms%dim_2%EX = ( max( 0, jbmax ) )
  572.       akms%dim_2%SM = ( max( 0, ibmax ) )
  572.       $_allo_P118(0) = 0x1000000000001L
  572.       $_allo_P118(1) = loc( akms )
  572.       call __allocate( $_allo_P118, 0, 0, _fcd( 0, 0 ) )
  573.       $F_A281 = ( max( 0, jbmax ) )
  573.       $F_A282 = ( max( 0, ibmax ) )
  573.       if ( and( -$F_A282, -$F_A281 ) < 0 ) then
  573.          $I_A2 = 0
  573.          do
  573.             $I_A1 = 0
  573. !dir$ ivdep
  573.             do
  573.                (akms%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  573.                $I_A1 = 1 + $I_A1
  573.                if ( $I_A1 >= $F_A282 ) exit
  573.             enddo
  573.             $I_A2 = 1 + $I_A2
  573.             if ( $I_A2 >= $F_A281 ) exit
  573.          enddo
  573.       endif
  574.       rmol%header%a_contig = 1
  574.       rmol%dim_1%LB = 1
  574.       rmol%dim_1%EX = ( max( 0, ibmax ) )
  574.       rmol%dim_1%SM = 1
  574.       rmol%dim_2%LB = 1
  574.       rmol%dim_2%EX = ( max( 0, jbmax ) )
  574.       rmol%dim_2%SM = ( max( 0, ibmax ) )
  574.       $_allo_P119(0) = 0x1000000000001L
  574.       $_allo_P119(1) = loc( rmol )
  574.       call __allocate( $_allo_P119, 0, 0, _fcd( 0, 0 ) )
  575.       $F_A283 = ( max( 0, jbmax ) )
  575.       $F_A284 = ( max( 0, ibmax ) )
  575.       if ( and( -$F_A284, -$F_A283 ) < 0 ) then
  575.          $I_A2 = 0
  575.          do
  575.             $I_A1 = 0
  575. !dir$ ivdep
  575.             do
  575.                (rmol%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  575.                $I_A1 = 1 + $I_A1
  575.                if ( $I_A1 >= $F_A284 ) exit
  575.             enddo
  575.             $I_A2 = 1 + $I_A2
  575.             if ( $I_A2 >= $F_A283 ) exit
  575.          enddo
  575.       endif
  576.       ct%header%a_contig = 1
  576.       ct%dim_1%LB = 1
  576.       ct%dim_1%EX = ( max( 0, ibmax ) )
  576.       ct%dim_1%SM = 1
  576.       ct%dim_2%LB = 1
  576.       ct%dim_2%EX = ( max( 0, jbmax ) )
  576.       ct%dim_2%SM = ( max( 0, ibmax ) )
  576.       $_allo_P120(0) = 0x1000000000001L
  576.       $_allo_P120(1) = loc( ct )
  576.       call __allocate( $_allo_P120, 0, 0, _fcd( 0, 0 ) )
  577.       $F_A285 = ( max( 0, jbmax ) )
  577.       $F_A286 = ( max( 0, ibmax ) )
  577.       if ( and( -$F_A286, -$F_A285 ) < 0 ) then
  577.          $I_A2 = 0
  577.          do
  577.             $I_A1 = 0
  577. !dir$ ivdep
  577.             do
  577.                (ct%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  577.                $I_A1 = 1 + $I_A1
  577.                if ( $I_A1 >= $F_A286 ) exit
  577.             enddo
  577.             $I_A2 = 1 + $I_A2
  577.             if ( $I_A2 >= $F_A285 ) exit
  577.          enddo
  577.       endif
  578.       htdisp%header%a_contig = 1
  578.       htdisp%dim_1%LB = 1
  578.       htdisp%dim_1%EX = ( max( 0, ibmax ) )
  578.       htdisp%dim_1%SM = 1
  578.       htdisp%dim_2%LB = 1
  578.       htdisp%dim_2%EX = ( max( 0, jbmax ) )
  578.       htdisp%dim_2%SM = ( max( 0, ibmax ) )
  578.       $_allo_P121(0) = 0x1000000000001L
  578.       $_allo_P121(1) = loc( htdisp )
  578.       call __allocate( $_allo_P121, 0, 0, _fcd( 0, 0 ) )
  579.       $F_A287 = ( max( 0, jbmax ) )
  579.       $F_A288 = ( max( 0, ibmax ) )
  579.       if ( and( -$F_A288, -$F_A287 ) < 0 ) then
  579.          $I_A2 = 0
  579.          do
  579.             $I_A1 = 0
  579. !dir$ ivdep
  579.             do
  579.                (htdisp%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  579.                $I_A1 = 1 + $I_A1
  579.                if ( $I_A1 >= $F_A288 ) exit
  579.             enddo
  579.             $I_A2 = 1 + $I_A2
  579.             if ( $I_A2 >= $F_A287 ) exit
  579.          enddo
  579.       endif
  580.       temp2m%header%a_contig = 1
  580.       temp2m%dim_1%LB = 1
  580.       temp2m%dim_1%EX = ( max( 0, ibmax ) )
  580.       temp2m%dim_1%SM = 1
  580.       temp2m%dim_2%LB = 1
  580.       temp2m%dim_2%EX = ( max( 0, jbmax ) )
  580.       temp2m%dim_2%SM = ( max( 0, ibmax ) )
  580.       $_allo_P122(0) = 0x1000000000001L
  580.       $_allo_P122(1) = loc( temp2m )
  580.       call __allocate( $_allo_P122, 0, 0, _fcd( 0, 0 ) )
  581.       $F_A289 = ( max( 0, jbmax ) )
  581.       $F_A290 = ( max( 0, ibmax ) )
  581.       if ( and( -$F_A290, -$F_A289 ) < 0 ) then
  581.          $I_A2 = 0
  581.          do
  581.             $I_A1 = 0
  581. !dir$ ivdep
  581.             do
  581.                (temp2m%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  581.                $I_A1 = 1 + $I_A1
  581.                if ( $I_A1 >= $F_A290 ) exit
  581.             enddo
  581.             $I_A2 = 1 + $I_A2
  581.             if ( $I_A2 >= $F_A289 ) exit
  581.          enddo
  581.       endif
  582.       umes2m%header%a_contig = 1
  582.       umes2m%dim_1%LB = 1
  582.       umes2m%dim_1%EX = ( max( 0, ibmax ) )
  582.       umes2m%dim_1%SM = 1
  582.       umes2m%dim_2%LB = 1
  582.       umes2m%dim_2%EX = ( max( 0, jbmax ) )
  582.       umes2m%dim_2%SM = ( max( 0, ibmax ) )
  582.       $_allo_P123(0) = 0x1000000000001L
  582.       $_allo_P123(1) = loc( umes2m )
  582.       call __allocate( $_allo_P123, 0, 0, _fcd( 0, 0 ) )
  583.       $F_A291 = ( max( 0, jbmax ) )
  583.       $F_A292 = ( max( 0, ibmax ) )
  583.       if ( and( -$F_A292, -$F_A291 ) < 0 ) then
  583.          $I_A2 = 0
  583.          do
  583.             $I_A1 = 0
  583. !dir$ ivdep
  583.             do
  583.                (umes2m%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  583.                $I_A1 = 1 + $I_A1
  583.                if ( $I_A1 >= $F_A292 ) exit
  583.             enddo
  583.             $I_A2 = 1 + $I_A2
  583.             if ( $I_A2 >= $F_A291 ) exit
  583.          enddo
  583.       endif
  584.       uve10m%header%a_contig = 1
  584.       uve10m%dim_1%LB = 1
  584.       uve10m%dim_1%EX = ( max( 0, ibmax ) )
  584.       uve10m%dim_1%SM = 1
  584.       uve10m%dim_2%LB = 1
  584.       uve10m%dim_2%EX = ( max( 0, jbmax ) )
  584.       uve10m%dim_2%SM = ( max( 0, ibmax ) )
  584.       $_allo_P124(0) = 0x1000000000001L
  584.       $_allo_P124(1) = loc( uve10m )
  584.       call __allocate( $_allo_P124, 0, 0, _fcd( 0, 0 ) )
  585.       $F_A293 = ( max( 0, jbmax ) )
  585.       $F_A294 = ( max( 0, ibmax ) )
  585.       if ( and( -$F_A294, -$F_A293 ) < 0 ) then
  585.          $I_A2 = 0
  585.          do
  585.             $I_A1 = 0
  585. !dir$ ivdep
  585.             do
  585.                (uve10m%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  585.                $I_A1 = 1 + $I_A1
  585.                if ( $I_A1 >= $F_A294 ) exit
  585.             enddo
  585.             $I_A2 = 1 + $I_A2
  585.             if ( $I_A2 >= $F_A293 ) exit
  585.          enddo
  585.       endif
  586.       vve10m%header%a_contig = 1
  586.       vve10m%dim_1%LB = 1
  586.       vve10m%dim_1%EX = ( max( 0, ibmax ) )
  586.       vve10m%dim_1%SM = 1
  586.       vve10m%dim_2%LB = 1
  586.       vve10m%dim_2%EX = ( max( 0, jbmax ) )
  586.       vve10m%dim_2%SM = ( max( 0, ibmax ) )
  586.       $_allo_P125(0) = 0x1000000000001L
  586.       $_allo_P125(1) = loc( vve10m )
  586.       call __allocate( $_allo_P125, 0, 0, _fcd( 0, 0 ) )
  587.       $F_A295 = ( max( 0, jbmax ) )
  587.       $F_A296 = ( max( 0, ibmax ) )
  587.       if ( and( -$F_A296, -$F_A295 ) < 0 ) then
  587.          $I_A2 = 0
  587.          do
  587.             $I_A1 = 0
  587. !dir$ ivdep
  587.             do
  587.                (vve10m%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0.0
  587.                $I_A1 = 1 + $I_A1
  587.                if ( $I_A1 >= $F_A296 ) exit
  587.             enddo
  587.             $I_A2 = 1 + $I_A2
  587.             if ( $I_A2 >= $F_A295 ) exit
  587.          enddo
  587.       endif
  588.       mskant%header%a_contig = 1
  588.       mskant%dim_1%LB = 1
  588.       mskant%dim_1%EX = ( max( 0, ibmax ) )
  588.       mskant%dim_1%SM = 1
  588.       mskant%dim_2%LB = 1
  588.       mskant%dim_2%EX = ( max( 0, jbmax ) )
  588.       mskant%dim_2%SM = ( max( 0, ibmax ) )
  588.       $_allo_P126(0) = 0x1000000000001L
  588.       $_allo_P126(1) = loc( mskant )
  588.       call __allocate( $_allo_P126, 0, 0, _fcd( 0, 0 ) )
  589.       $F_A297 = ( max( 0, jbmax ) )
  589.       $F_A298 = ( max( 0, ibmax ) )
  589.       if ( and( -$F_A298, -$F_A297 ) < 0 ) then
  589.          $I_A2 = 0
  589.          do
  589.             $I_A1 = 0
  589. !dir$ ivdep
  589.             do
  589.                (mskant%base_addr)(1 + $I_A1, 1 + $I_A2, 0) = 0
  589.                $I_A1 = 1 + $I_A1
  589.                if ( $I_A1 >= $F_A298 ) exit
  589.             enddo
  589.             $I_A2 = 1 + $I_A2
  589.             if ( $I_A2 >= $F_A297 ) exit
  589.          enddo
  589.       endif
  590.       return
  590.       end
  590.       
  625.       
  625.       subroutine initvariancia( igwd, nfvar, fnameorgvar )
  598.       t$39 = _len( igwd )
  598.       t$40 = _len( fnameorgvar )
  598.       t$1 = imax
  598.       t$2 = jmax
  603.       t$41 = _zla( 0, imax )
  598.       t$42 = _zla( 0, imax )
  603.       t$43 = _zla( 0, jmax )
  598.       t$44 = _zla( 0, imax ) * _zla( 0, jmax )
  603.       t$47 = 8 * _zla( 0, imax ) * _zla( 0, jmax )
  598.       t$45 = int( _alloc( 8 * _zla( 0, imax ) * _zla( 0, jmax ) ), 8 )
  603.       t$46 = t$45
  604.       $F_A33 = jmax
  604.       $F_A34 = imax
  604.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
  604.          $I_A2 = 0
  604.          do
  604.             $I_A1 = 0
  604. !dir$ ivdep
  604.             do
  604.                var_in(1 + $I_A1, 1 + $I_A2) = 0.0
  604.                $I_A1 = 1 + $I_A1
  604.                if ( $I_A1 >= $F_A34 ) exit
  604.             enddo
  604.             $I_A2 = 1 + $I_A2
  604.             if ( $I_A2 >= $F_A33 ) exit
  604.          enddo
  604.       endif
  605.       $IOLEN_result_O0 = _iolen( 3, _iolist( _iotype( (&)var_in(+:( 1, imax, 1 ), +:( 1, jmax, 1 )), 0x804060300000000L ) ) )
  607.       ierr = 0
  606.       t$111 = nfvar
  607.        _substr(t$112,1,4) = 'OLD'
  606.        _substr(t$113,1,6) = 'DIRECT'
  606.        _substr(t$114,1,11) = 'UNFORMATTED'
  607.       t$115 = $IOLEN_result_O0
  607.        _substr(t$116,1,4) = 'READ'
  606.       t$117(1) = 0x100000000000000L
  606. !dir$ suppress t$111
  606.       t$117(2) = int( loc( t$111 ), 8 )
  606. !dir$ suppress ierr
  606.       t$117(3) = int( loc( ierr ), 8 )
  606.       t$117(4) = 0
  606. !dir$ suppress  _substr(fnameorgvar,1,_ltrim(  _substr(fnameorgvar,1,max( 0, t$40 )) ))
  606.       t$117(5) = int( loc(  _substr(fnameorgvar,1,_ltrim(  _substr(fnameorgvar,1,_len( fnameorgvar )) )) ), 8 )
  606.       t$117(6) = _ltrim(  _substr(fnameorgvar,1,_len( fnameorgvar )) )
  606. !dir$ suppress  _substr(t$112,1,3)
  606.       t$117(7) = int( loc(  _substr(t$112,1,3) ), 8 )
  606.       t$117(8) = 3
  606. !dir$ suppress  _substr(t$113,1,6)
  606.       t$117(9) = int( loc(  _substr(t$113,1,6) ), 8 )
  606.       t$117(10) = 6
  606. !dir$ suppress  _substr(t$114,1,11)
  606.       t$117(11) = int( loc(  _substr(t$114,1,11) ), 8 )
  606.       t$117(12) = 11
  606. !dir$ suppress t$115
  606.       t$117(13) = int( loc( t$115 ), 8 )
  606.       t$117(14) = 0
  606.       t$117(16) = 0
  606. !dir$ suppress  _substr(t$116,1,4)
  606.       t$117(18) = int( loc(  _substr(t$116,1,4) ), 8 )
  606.       t$117(19) = 4
  606.       t$117(20) = 0
  606.       t$117(22) = 0
  606.       t$117(24) = 0x2000200000000L
  606.       t$117(25) = 0
  606.       t$117(27) = 0
  606.       t$117(29) = 0
  606.       t$117(31) = 0
  606.       t$117(33) = 0
  606.       t$117(35) = 0
  606.       t$110 = _open( t$117 )
  609.       if ( ierr /= 0 ) then
  610.          $Unit_temp_O1 = nfprt
  610.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$4,  _substr(t$3,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnameorgvar,1,_ltrim(  _substr(fnameorgvar,1,_len( fnameorgvar )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
  612.           _substr(t$118,1,11) = '**(ERROR)**'
  612.          call _stop(  _substr(t$118,1,11) )
  612.       else
  616.          if (  _substr(igwd,1,_ltrim(  _substr(igwd,1,_len( igwd )) )) == 'YES' ) then
  617.             irec = 1
  618. !dir$ suppress var_in(1, 1)
  618.             t$119 = $_StaticDV_P0
  618.             t$119%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( var_in(1, 1) ) )
  618.             t$119%header%el_len = 64
  618.             t$119%header%assoc = 1
  618.             t$119%header%ptr_alloc = 0
  618.             t$119%header%p_or_a = 0
  618.             t$119%header%a_contig = 1
  618.             t$119%header%n_dim = 2
  618.             t$119%header%orig_base = 0
  618.             t$119%header%orig_size = 0
  618.             t$119%header%n_codim = 0
  618.             t$119%header%dv_versn = 2
  618.             t$119%header%dv_smunit = 64
  618.             t$119%header%d_type = 0
  618.             t$119%header%n_params = 0
  618.             t$119%header%d_type_idx = 13
  618.             t$119%dim_1%LB = 1
  618.             t$119%dim_1%EX = _zla( 0, t$1 )
  618.             t$119%dim_1%SM = 1
  618.             t$119%dim_2%LB = 1
  618.             t$119%dim_2%EX = _zla( 0, t$2 )
  618.             t$119%dim_2%SM = _zla( 0, t$1 )
  618.             call readvar8( nfvar, irec, t$119 )
  619.             if ( reducedgrid /= .false. ) then
  620.                call linearijtoibjb_r2d( var_in(1, 1), (var%base_addr)(var%dim_1%LB, var%dim_2%LB, 0) )
  620.             else
  622. !dir$ suppress var_in(1, 1)
  622.                t$120 = $_StaticDV_P1
  622.                t$120%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( var_in(1, 1) ) )
  622.                t$120%header%el_len = 64
  622.                t$120%header%assoc = 1
  622.                t$120%header%ptr_alloc = 0
  622.                t$120%header%p_or_a = 0
  622.                t$120%header%a_contig = 1
  622.                t$120%header%n_dim = 2
  622.                t$120%header%orig_base = 0
  622.                t$120%header%orig_size = 0
  622.                t$120%header%n_codim = 0
  622.                t$120%header%dv_versn = 2
  622.                t$120%header%dv_smunit = 64
  622.                t$120%header%d_type = 0
  622.                t$120%header%n_params = 0
  622.                t$120%header%d_type_idx = 13
  622.                t$120%dim_1%LB = 1
  622.                t$120%dim_1%EX = _zla( 0, t$1 )
  622.                t$120%dim_1%SM = 1
  622.                t$120%dim_2%LB = 1
  622.                t$120%dim_2%EX = _zla( 0, t$2 )
  622.                t$120%dim_2%SM = _zla( 0, t$1 )
  622.                t$121 = var
  622.                call ijtoibjb_r( t$120, t$121 )
  622.             endif
  622.          endif
  598.          _free( t$45 )
  598.       endif
  625.       return
  625.       end
  625.       
 1000.       
 1000.       subroutine initboundcond( ibmax, jbmax, kmax, ifdy, todcld, ids, idc, ifday, tod, todsib, idate, idatec, si, sl, record_type, fnamesoiltype, fnamevegtype, fnamesoilmoist, fnamesibmsk, fnametg3zrl, ibmaxperjb )
 1000.       seatp_ibmaxperjb = loc( ibmaxperjb )
 1000.       seatp_jbmax = loc( jbmax )
  633.       ids%dim_1%LB = 1
  633.       idc%dim_1%LB = 1
  633.       idate%dim_1%LB = 1
  633.       idatec%dim_1%LB = 1
  633.       si%dim_1%LB = 1
  633.       sl%dim_1%LB = 1
  633.       t$48 = _len( record_type )
  633.       t$49 = _len( fnamesoiltype )
  633.       t$50 = _len( fnamevegtype )
  633.       t$51 = _len( fnamesoilmoist )
  633.       t$52 = _len( fnamesibmsk )
  633.       t$53 = _len( fnametg3zrl )
  633.       seat_ibmaxperjb%dim_1%LB = 1
  633.       t$7 = imax
  633.       t$8 = jmax
  674.       t$54 = _zla( 0, imax )
  633.       t$55 = _zla( 0, imax )
  674.       t$56 = _zla( 0, jmax )
  633.       t$57 = _zla( 0, imax ) * _zla( 0, jmax )
  674.       t$60 = 4 * _zla( 0, imax ) * _zla( 0, jmax )
  633.       t$61 = _zla( 0, imax ) * _zla( 0, jmax )
  633.       t$62 = 4 * _zla( 0, imax ) * _zla( 0, jmax )
  673.       t$63 = 8 * ( 7 + 4 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
  673.       t$65 = t$63 + 32 * _zla( 0, imax ) * _zla( 0, jmax )
  675.       t$67 = t$63 + 36 * _zla( 0, imax ) * _zla( 0, jmax )
  677.       t$69 = t$63 + 40 * _zla( 0, imax ) * _zla( 0, jmax )
  676.       t$70 = 8 * ( 7 + t$63 + 40 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
  676.       t$72 = t$70 + 8 * _zla( 0, imax ) * _zla( 0, jmax )
  678.       t$73 = 8 * ( 7 + t$70 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
  678.       t$75 = t$73 + 8 * _zla( 0, imax ) * _zla( 0, jmax )
  633.       t$5 = ibmax
  633.       t$6 = seat_jbmax
  669.       t$76 = _zla( 0, ibmax )
  633.       t$77 = _zla( 0, ibmax )
  669.       t$78 = _zla( 0, seat_jbmax )
  633.       t$79 = _zla( 0, ibmax ) * _zla( 0, seat_jbmax )
  669.       t$80 = 8 * ( 7 + t$73 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
  669.       t$82 = t$80 + 8 * _zla( 0, ibmax ) * _zla( 0, seat_jbmax )
  633.       t$58 = int( _alloc( t$80 + 8 * _zla( 0, ibmax ) * _zla( 0, seat_jbmax ) ), 8 )
  674.       t$59 = t$58
  673.       t$64 = t$63 + t$58
  675.       t$66 = t$63 + t$58 + 32 * _zla( 0, imax ) * _zla( 0, jmax )
  677.       t$68 = t$63 + t$58 + 36 * _zla( 0, imax ) * _zla( 0, jmax )
  676.       t$71 = t$70 + t$58
  678.       t$74 = t$73 + t$58
  669.       t$81 = t$80 + t$58
  682.       $F_A34 = jmax
  682.       $F_A35 = imax
  682.       if ( and( -$F_A35, -$F_A34 ) < 0 ) then
  682.          $I_L682_490 = 0
  682.          do
  682.             $I_L682_424 = 0
  682. !dir$ ivdep
  682.             do
  682.                imask_in(1 + $I_L682_424, 1 + $I_L682_490) = 0
  682.                $I_L682_424 = 1 + $I_L682_424
  682.                if ( $I_L682_424 >= $F_A35 ) exit
  682.             enddo
  682.             $I_L682_490 = 1 + $I_L682_490
  682.             if ( $I_L682_490 >= $F_A34 ) exit
  682.          enddo
  682.       endif
  683.       $F_A36 = jmax
  683.       $F_A37 = imax
  683.       if ( and( -$F_A37, -$F_A36 ) < 0 ) then
  683.          $I_L683_492 = 0
  683.          do
  683.             $I_L683_426 = 0
  683. !dir$ ivdep
  683.             do
  683.                mskant_in(1 + $I_L683_426, 1 + $I_L683_492) = 0
  683.                $I_L683_426 = 1 + $I_L683_426
  683.                if ( $I_L683_426 >= $F_A37 ) exit
  683.             enddo
  683.             $I_L683_492 = 1 + $I_L683_492
  683.             if ( $I_L683_492 >= $F_A36 ) exit
  683.          enddo
  683.       endif
  685.       $F_A38 = jmax
  685.       $F_A39 = imax
  685.       if ( and( -$F_A39, -$F_A38 ) < 0 ) then
  685.          $I_L685_494 = 0
  685.          do
  685.             $I_L685_428 = 0
  685. !dir$ ivdep
  685.             do
  685.                ier(1 + $I_L685_428, 1 + $I_L685_494) = 0
  685.                $I_L685_428 = 1 + $I_L685_428
  685.                if ( $I_L685_428 >= $F_A39 ) exit
  685.             enddo
  685.             $I_L685_494 = 1 + $I_L685_494
  685.             if ( $I_L685_494 >= $F_A38 ) exit
  685.          enddo
  685.       endif
  684.       $F_A40 = jmax
  684.       $F_A41 = imax
  684.       if ( and( -$F_A41, -$F_A40 ) < 0 ) then
  684.          $I_L684_538 = 0
  684.          do
  684.             $I_L684_496 = 0
  684.             do
  684.                $I_L684_430 = 0
  684. !dir$ ivdep
  684.                do
  684.                   buf(1 + $I_L684_430, 1 + $I_L684_496, 1 + $I_L684_538) = 0.0
  684.                   $I_L684_430 = 1 + $I_L684_430
  684.                   if ( $I_L684_430 >= $F_A41 ) exit
  684.                enddo
  684.                $I_L684_496 = 1 + $I_L684_496
  684.                if ( $I_L684_496 >= $F_A40 ) exit
  684.             enddo
  684.             $I_L684_538 = 1 + $I_L684_538
  684.             if ( $I_L684_538 >= 4 ) exit
  684.          enddo
  684.       endif
  686.       if (  _substr(isimp,1,_ltrim(  _substr(isimp,1,4) )) /= 'YES' ) then
  687.          if ( nfcnv0 /= 0 ) then
  688.              _substr(t$122,1,19) = '**(InitBoundCond)**'
  688.              _substr(t$123,1,42) = 'Reading previous physics state for restart'
  688.             call msgone(  _substr(t$122,1,19),  _substr(t$123,1,42) )
  690.             $Unit_temp_O0 = nfcnv0
  690.             _uread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifdy, 0x2000200000000L ), _iotype( todcld, 0x804060300000000L ), _iotype( (&)(ids%base_addr)(+:( 1, ids%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (&)(idc%base_addr)(+:( 1, idc%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
  691.             $Unit_temp_O1 = nfcnv0
  691.             _uread( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(convc%base_addr)(+:( convc%dim_1%LB, -1 + convc%dim_1%LB + convc%dim_1%EX, 1 ), +:( convc%dim_2%LB, -1 + convc%dim_2%LB + convc%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(convt%base_addr)(+:( convt%dim_1%LB, -1 + convt%dim_1%LB + convt%dim_1%EX, 1 ), +:( convt%dim_2%LB, -1 + convt%dim_2%LB + convt%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(convb%base_addr)(+:( convb%dim_1%LB, -1 + convb%dim_1%LB + convb%dim_1%EX, 1 ), +:( convb%dim_2%LB, -1 + convb%dim_2%LB + convb%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(prcp1%base_addr)(+:( prcp1%dim_1%LB, -1 + prcp1%dim_1%LB + prcp1%dim_1%EX, 1 ), +:( prcp1%dim_2%LB, -1 + prcp1%dim_2%LB + prcp1%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(prcp2%base_addr)(+:( prcp2%dim_1%LB, -1 + prcp2%dim_1%LB + prcp2%dim_1%EX, 1 ), +:( prcp2%dim_2%LB, -1 + prcp2%dim_2%LB + prcp2%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(prcp3%base_addr)(+:( prcp3%dim_1%LB, -1 + prcp3%dim_1%LB + prcp3%dim_1%EX, 1 ), +:( prcp3%dim_2%LB, -1 + prcp3%dim_2%LB + prcp3%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(prcpt%base_addr)(+:( prcpt%dim_1%LB, -1 + prcpt%dim_1%LB + prcpt%dim_1%EX, 1 ), +:( prcpt%dim_2%LB, -1 + prcpt%dim_2%LB + prcpt%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(toplv%base_addr)(+:( toplv%dim_1%LB, -1 + toplv%dim_1%LB + toplv%dim_1%EX, 1 ), +:( toplv%dim_2%LB, -1 + toplv%dim_2%LB + toplv%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(botlv%base_addr)(+:( botlv%dim_1%LB, -1 + botlv%dim_1%LB + botlv%dim_1%EX, 1 ), +:( botlv%dim_2%LB, -1 + botlv%dim_2%LB + botlv%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
  693.             if ( ifday > 0 ) then
  693.                goto 10
  693.             else if ( tod > 0.0 ) then
  693.    10          continue
  693.                $Unit_temp_O2 = nfcnv0
  693.                _uread( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(rvisdiff%base_addr)(+:( rvisdiff%dim_1%LB, -1 + rvisdiff%dim_1%LB + rvisdiff%dim_1%EX, 1 ), +:( rvisdiff%dim_2%LB, -1 + rvisdiff%dim_2%LB + rvisdiff%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(rvisbeam%base_addr)(+:( rvisbeam%dim_1%LB, -1 + rvisbeam%dim_1%LB + rvisbeam%dim_1%EX, 1 ), +:( rvisbeam%dim_2%LB, -1 + rvisbeam%dim_2%LB + rvisbeam%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(rnirdiff%base_addr)(+:( rnirdiff%dim_1%LB, -1 + rnirdiff%dim_1%LB + rnirdiff%dim_1%EX, 1 ), +:( rnirdiff%dim_2%LB, -1 + rnirdiff%dim_2%LB + rnirdiff%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(rnirbeam%base_addr)(+:( rnirbeam%dim_1%LB, -1 + rnirbeam%dim_1%LB + rnirbeam%dim_1%EX, 1 ), +:( rnirbeam%dim_2%LB, -1 + rnirbeam%dim_2%LB + rnirbeam%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(rvisdiffc%base_addr)(+:( rvisdiffc%dim_1%LB, -1 + rvisdiffc%dim_1%LB + rvisdiffc%dim_1%EX, 1 ), +:( rvisdiffc%dim_2%LB, -1 + rvisdiffc%dim_2%LB + rvisdiffc%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(rvisbeamc%base_addr)(+:( rvisbeamc%dim_1%LB, -1 + rvisbeamc%dim_1%LB + rvisbeamc%dim_1%EX, 1 ), +:( rvisbeamc%dim_2%LB, -1 + rvisbeamc%dim_2%LB + rvisbeamc%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(rnirdiffc%base_addr)(+:( rnirdiffc%dim_1%LB, -1 + rnirdiffc%dim_1%LB + rnirdiffc%dim_1%EX, 1 ), +:( rnirdiffc%dim_2%LB, -1 + rnirdiffc%dim_2%LB + rnirdiffc%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(rnirbeamc%base_addr)(+:( rnirbeamc%dim_1%LB, -1 + rnirbeamc%dim_1%LB + rnirbeamc%dim_1%EX, 1 ), +:( rnirbeamc%dim_2%LB, -1 + rnirbeamc%dim_2%LB + rnirbeamc%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(rswtoadown%base_addr)(+:( rswtoadown%dim_1%LB, -1 + rswtoadown%dim_1%LB + rswtoadown%dim_1%EX, 1 ), +:( rswtoadown%dim_2%LB, -1 + rswtoadown%dim_2%LB + rswtoadown%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
  693.             endif
  696.             t$125 = nfcnv0
  696.             t$124 = __rewf( t$125, 0, 0, 0x100000000000000L, 0, 0 )
  698.             if ( nfctrl(4) > 0 ) then
  698.                $Unit_temp_O3 = nfprt
  698.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, t$18,  _substr(t$17,1,117), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifdy, 0x2000200000000L ), _iotype( todcld, 0x804060300000000L ), _iotype( (&)(ids%base_addr)(+:( 1, ids%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (&)(idc%base_addr)(+:( 1, idc%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
  698.             endif
  698.          else
  700.              _substr(t$126,1,19) = '**(InitBoundCond)**'
  700.              _substr(t$127,1,33) = 'Initializing prec/cloud variables'
  700.             call msgone(  _substr(t$126,1,19),  _substr(t$127,1,33) )
  701.             $F_A42 = convc%dim_2%EX
  701.             $F_A43 = convc%dim_1%EX
  701.             if ( and( -$F_A43, -$F_A42 ) < 0 ) then
  701.                $SC_convc_I215 = convc%dim_1%EX
  701.                $SC_convc_I216 = convc%dim_1%LB
  701.                $SC_convc_I218 = convc%dim_2%SM
  701.                $SC_convc_I217 = convc%dim_2%EX
  701.                $SC_convc_I219 = convc%dim_2%LB
  701.                $I_L701_498 = 0
  701.                do
  701.                   $I_L701_432 = 0
  701. !dir$ ivdep
  701.                   do
  701.                      (convc%base_addr)($SC_convc_I216 + $I_L701_432, $SC_convc_I219 + $I_L701_498, 0) = 0.0
  701.                      $I_L701_432 = 1 + $I_L701_432
  701.                      if ( $I_L701_432 >= $F_A43 ) exit
  701.                   enddo
  701.                   $I_L701_498 = 1 + $I_L701_498
  701.                   if ( $I_L701_498 >= $F_A42 ) exit
  701.                enddo
  701.             endif
  702.             $F_A44 = convt%dim_2%EX
  702.             $F_A45 = convt%dim_1%EX
  702.             if ( and( -$F_A45, -$F_A44 ) < 0 ) then
  702.                $SC_convt_I220 = convt%dim_1%EX
  702.                $SC_convt_I221 = convt%dim_1%LB
  702.                $SC_convt_I223 = convt%dim_2%SM
  702.                $SC_convt_I222 = convt%dim_2%EX
  702.                $SC_convt_I224 = convt%dim_2%LB
  702.                $I_L702_500 = 0
  702.                do
  702.                   $I_L702_434 = 0
  702. !dir$ ivdep
  702.                   do
  702.                      (convt%base_addr)($SC_convt_I221 + $I_L702_434, $SC_convt_I224 + $I_L702_500, 0) = 0.0
  702.                      $I_L702_434 = 1 + $I_L702_434
  702.                      if ( $I_L702_434 >= $F_A45 ) exit
  702.                   enddo
  702.                   $I_L702_500 = 1 + $I_L702_500
  702.                   if ( $I_L702_500 >= $F_A44 ) exit
  702.                enddo
  702.             endif
  703.             $F_A46 = convb%dim_2%EX
  703.             $F_A47 = convb%dim_1%EX
  703.             if ( and( -$F_A47, -$F_A46 ) < 0 ) then
  703.                $SC_convb_I225 = convb%dim_1%EX
  703.                $SC_convb_I226 = convb%dim_1%LB
  703.                $SC_convb_I228 = convb%dim_2%SM
  703.                $SC_convb_I227 = convb%dim_2%EX
  703.                $SC_convb_I229 = convb%dim_2%LB
  703.                $I_L703_502 = 0
  703.                do
  703.                   $I_L703_436 = 0
  703. !dir$ ivdep
  703.                   do
  703.                      (convb%base_addr)($SC_convb_I226 + $I_L703_436, $SC_convb_I229 + $I_L703_502, 0) = 0.0
  703.                      $I_L703_436 = 1 + $I_L703_436
  703.                      if ( $I_L703_436 >= $F_A47 ) exit
  703.                   enddo
  703.                   $I_L703_502 = 1 + $I_L703_502
  703.                   if ( $I_L703_502 >= $F_A46 ) exit
  703.                enddo
  703.             endif
  704.             $F_A48 = prcp1%dim_2%EX
  704.             $F_A49 = prcp1%dim_1%EX
  704.             if ( and( -$F_A49, -$F_A48 ) < 0 ) then
  704.                $SC_prcp1_I230 = prcp1%dim_1%EX
  704.                $SC_prcp1_I231 = prcp1%dim_1%LB
  704.                $SC_prcp1_I233 = prcp1%dim_2%SM
  704.                $SC_prcp1_I232 = prcp1%dim_2%EX
  704.                $SC_prcp1_I234 = prcp1%dim_2%LB
  704.                $I_L704_504 = 0
  704.                do
  704.                   $I_L704_438 = 0
  704. !dir$ ivdep
  704.                   do
  704.                      (prcp1%base_addr)($SC_prcp1_I231 + $I_L704_438, $SC_prcp1_I234 + $I_L704_504, 0) = 0.0
  704.                      $I_L704_438 = 1 + $I_L704_438
  704.                      if ( $I_L704_438 >= $F_A49 ) exit
  704.                   enddo
  704.                   $I_L704_504 = 1 + $I_L704_504
  704.                   if ( $I_L704_504 >= $F_A48 ) exit
  704.                enddo
  704.             endif
  705.             $F_A50 = prcp2%dim_2%EX
  705.             $F_A51 = prcp2%dim_1%EX
  705.             if ( and( -$F_A51, -$F_A50 ) < 0 ) then
  705.                $SC_prcp2_I235 = prcp2%dim_1%EX
  705.                $SC_prcp2_I236 = prcp2%dim_1%LB
  705.                $SC_prcp2_I238 = prcp2%dim_2%SM
  705.                $SC_prcp2_I237 = prcp2%dim_2%EX
  705.                $SC_prcp2_I239 = prcp2%dim_2%LB
  705.                $I_L705_506 = 0
  705.                do
  705.                   $I_L705_440 = 0
  705. !dir$ ivdep
  705.                   do
  705.                      (prcp2%base_addr)($SC_prcp2_I236 + $I_L705_440, $SC_prcp2_I239 + $I_L705_506, 0) = 0.0
  705.                      $I_L705_440 = 1 + $I_L705_440
  705.                      if ( $I_L705_440 >= $F_A51 ) exit
  705.                   enddo
  705.                   $I_L705_506 = 1 + $I_L705_506
  705.                   if ( $I_L705_506 >= $F_A50 ) exit
  705.                enddo
  705.             endif
  706.             $F_A52 = prcp3%dim_2%EX
  706.             $F_A53 = prcp3%dim_1%EX
  706.             if ( and( -$F_A53, -$F_A52 ) < 0 ) then
  706.                $SC_prcp3_I240 = prcp3%dim_1%EX
  706.                $SC_prcp3_I241 = prcp3%dim_1%LB
  706.                $SC_prcp3_I243 = prcp3%dim_2%SM
  706.                $SC_prcp3_I242 = prcp3%dim_2%EX
  706.                $SC_prcp3_I244 = prcp3%dim_2%LB
  706.                $I_L706_508 = 0
  706.                do
  706.                   $I_L706_442 = 0
  706. !dir$ ivdep
  706.                   do
  706.                      (prcp3%base_addr)($SC_prcp3_I241 + $I_L706_442, $SC_prcp3_I244 + $I_L706_508, 0) = 0.0
  706.                      $I_L706_442 = 1 + $I_L706_442
  706.                      if ( $I_L706_442 >= $F_A53 ) exit
  706.                   enddo
  706.                   $I_L706_508 = 1 + $I_L706_508
  706.                   if ( $I_L706_508 >= $F_A52 ) exit
  706.                enddo
  706.             endif
  707.             $F_A54 = prcpt%dim_2%EX
  707.             $F_A55 = prcpt%dim_1%EX
  707.             if ( and( -$F_A55, -$F_A54 ) < 0 ) then
  707.                $SC_prcpt_I245 = prcpt%dim_1%EX
  707.                $SC_prcpt_I246 = prcpt%dim_1%LB
  707.                $SC_prcpt_I248 = prcpt%dim_2%SM
  707.                $SC_prcpt_I247 = prcpt%dim_2%EX
  707.                $SC_prcpt_I249 = prcpt%dim_2%LB
  707.                $I_L707_510 = 0
  707.                do
  707.                   $I_L707_444 = 0
  707. !dir$ ivdep
  707.                   do
  707.                      (prcpt%base_addr)($SC_prcpt_I246 + $I_L707_444, $SC_prcpt_I249 + $I_L707_510, 0) = 0.0
  707.                      $I_L707_444 = 1 + $I_L707_444
  707.                      if ( $I_L707_444 >= $F_A55 ) exit
  707.                   enddo
  707.                   $I_L707_510 = 1 + $I_L707_510
  707.                   if ( $I_L707_510 >= $F_A54 ) exit
  707.                enddo
  707.             endif
  708.             $F_A56 = toplv%dim_2%EX
  708.             $F_A57 = toplv%dim_1%EX
  708.             if ( and( -$F_A57, -$F_A56 ) < 0 ) then
  708.                $SC_toplv_I250 = toplv%dim_1%EX
  708.                $SC_toplv_I251 = toplv%dim_1%LB
  708.                $SC_toplv_I253 = toplv%dim_2%SM
  708.                $SC_toplv_I252 = toplv%dim_2%EX
  708.                $SC_toplv_I254 = toplv%dim_2%LB
  708.                $I_L708_512 = 0
  708.                do
  708.                   $I_L708_446 = 0
  708. !dir$ ivdep
  708.                   do
  708.                      (toplv%base_addr)($SC_toplv_I251 + $I_L708_446, $SC_toplv_I254 + $I_L708_512, 0) = 0.0
  708.                      $I_L708_446 = 1 + $I_L708_446
  708.                      if ( $I_L708_446 >= $F_A57 ) exit
  708.                   enddo
  708.                   $I_L708_512 = 1 + $I_L708_512
  708.                   if ( $I_L708_512 >= $F_A56 ) exit
  708.                enddo
  708.             endif
  709.             $F_A58 = botlv%dim_2%EX
  709.             $F_A59 = botlv%dim_1%EX
  709.             if ( and( -$F_A59, -$F_A58 ) < 0 ) then
  709.                $SC_botlv_I255 = botlv%dim_1%EX
  709.                $SC_botlv_I256 = botlv%dim_1%LB
  709.                $SC_botlv_I258 = botlv%dim_2%SM
  709.                $SC_botlv_I257 = botlv%dim_2%EX
  709.                $SC_botlv_I259 = botlv%dim_2%LB
  709.                $I_L709_514 = 0
  709.                do
  709.                   $I_L709_448 = 0
  709. !dir$ ivdep
  709.                   do
  709.                      (botlv%base_addr)($SC_botlv_I256 + $I_L709_448, $SC_botlv_I259 + $I_L709_514, 0) = 0.0
  709.                      $I_L709_448 = 1 + $I_L709_448
  709.                      if ( $I_L709_448 >= $F_A59 ) exit
  709.                   enddo
  709.                   $I_L709_514 = 1 + $I_L709_514
  709.                   if ( $I_L709_514 >= $F_A58 ) exit
  709.                enddo
  709.             endif
  709.          endif
  712.          $F_A60 = sheleg%dim_2%EX
  712.          $F_A61 = sheleg%dim_1%EX
  712.          if ( and( -$F_A61, -$F_A60 ) < 0 ) then
  712.             $SC_sheleg_I260 = sheleg%dim_1%EX
  712.             $SC_sheleg_I261 = sheleg%dim_1%LB
  712.             $SC_sheleg_I263 = sheleg%dim_2%SM
  712.             $SC_sheleg_I262 = sheleg%dim_2%EX
  712.             $SC_sheleg_I264 = sheleg%dim_2%LB
  712.             $I_L712_516 = 0
  712.             do
  712.                $I_L712_450 = 0
  712. !dir$ ivdep
  712.                do
  712.                   (sheleg%base_addr)($SC_sheleg_I261 + $I_L712_450, $SC_sheleg_I264 + $I_L712_516, 0) = 0.0
  712.                   $I_L712_450 = 1 + $I_L712_450
  712.                   if ( $I_L712_450 >= $F_A61 ) exit
  712.                enddo
  712.                $I_L712_516 = 1 + $I_L712_516
  712.                if ( $I_L712_516 >= $F_A60 ) exit
  712.             enddo
  712.          endif
  714.          call vegin( (si%base_addr)(1, 0), (sl%base_addr)(1, 0) )
  715.          $F_A62 = t$8
  715.          $F_A63 = t$7
  715.          if ( and( -$F_A63, -$F_A62 ) < 0 ) then
  715.             $I_L715_518 = 0
  715.             do
  715.                $I_L715_452 = 0
  715. !dir$ ivdep
  715.                do
  715.                   ibuf(1 + $I_L715_452, 1 + $I_L715_518) = 0
  715.                   $I_L715_452 = 1 + $I_L715_452
  715.                   if ( $I_L715_452 >= $F_A63 ) exit
  715.                enddo
  715.                $I_L715_518 = 1 + $I_L715_518
  715.                if ( $I_L715_518 >= $F_A62 ) exit
  715.             enddo
  715.          endif
  716.          $IOLEN_result_O4 = _iolen( 3, _iolist( _iotype( (&)ibuf(+:( 1, t$7, 1 ), +:( 1, t$8, 1 )), 0x2000200000000L ) ) )
  718.          ierr = 0
  717.          t$125 = nfsibt
  718.           _substr(t$130,1,4) = 'OLD'
  717.           _substr(t$131,1,6) = 'DIRECT'
  717.           _substr(t$132,1,11) = 'UNFORMATTED'
  717.          t$133 = $IOLEN_result_O4
  718.           _substr(t$134,1,4) = 'READ'
  717.          t$135(1) = 0x100000000000000L
  717. !dir$ suppress t$125
  717.          t$135(2) = int( loc( t$125 ), 8 )
  717. !dir$ suppress ierr
  717.          t$135(3) = int( loc( ierr ), 8 )
  717.          t$135(4) = 0
  717. !dir$ suppress  _substr(fnamesibmsk,1,_ltrim(  _substr(fnamesibmsk,1,max( 0, t$52 )) ))
  717.          t$135(5) = int( loc(  _substr(fnamesibmsk,1,_ltrim(  _substr(fnamesibmsk,1,_len( fnamesibmsk )) )) ), 8 )
  717.          t$135(6) = _ltrim(  _substr(fnamesibmsk,1,_len( fnamesibmsk )) )
  717. !dir$ suppress  _substr(t$130,1,3)
  717.          t$135(7) = int( loc(  _substr(t$130,1,3) ), 8 )
  717.          t$135(8) = 3
  717. !dir$ suppress  _substr(t$131,1,6)
  717.          t$135(9) = int( loc(  _substr(t$131,1,6) ), 8 )
  717.          t$135(10) = 6
  717. !dir$ suppress  _substr(t$132,1,11)
  717.          t$135(11) = int( loc(  _substr(t$132,1,11) ), 8 )
  717.          t$135(12) = 11
  717. !dir$ suppress t$133
  717.          t$135(13) = int( loc( t$133 ), 8 )
  717.          t$135(14) = 0
  717.          t$135(16) = 0
  717. !dir$ suppress  _substr(t$134,1,4)
  717.          t$135(18) = int( loc(  _substr(t$134,1,4) ), 8 )
  717.          t$135(19) = 4
  717.          t$135(20) = 0
  717.          t$135(22) = 0
  717.          t$135(24) = 0x2000200000000L
  717.          t$135(25) = 0
  717.          t$135(27) = 0
  717.          t$135(29) = 0
  717.          t$135(31) = 0
  717.          t$135(33) = 0
  717.          t$135(35) = 0
  717.          t$129 = _open( t$135 )
  719.          if ( ierr /= 0 ) then
  720.             $Unit_temp_O5 = nfprt
  720.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, t$10,  _substr(t$9,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamesibmsk,1,_ltrim(  _substr(fnamesibmsk,1,_len( fnamesibmsk )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
  722.              _substr(t$136,1,11) = '**(ERROR)**'
  722.             call _stop(  _substr(t$136,1,11) )
  722.          else
  724.             $F_A64 = t$8
  724.             $F_A65 = t$7
  724.             if ( and( -$F_A65, -$F_A64 ) < 0 ) then
  724.                $I_L724_520 = 0
  724.                do
  724.                   $I_L724_454 = 0
  724. !dir$ ivdep
  724.                   do
  724.                      brf(1 + $I_L724_454, 1 + $I_L724_520) = 0.0
  724.                      $I_L724_454 = 1 + $I_L724_454
  724.                      if ( $I_L724_454 >= $F_A65 ) exit
  724.                   enddo
  724.                   $I_L724_520 = 1 + $I_L724_520
  724.                   if ( $I_L724_520 >= $F_A64 ) exit
  724.                enddo
  724.             endif
  725.             $IOLEN_result_O6 = _iolen( 3, _iolist( _iotype( (&)brf(+:( 1, t$7, 1 ), +:( 1, t$8, 1 )), 0x402060300000000L ) ) )
  727.             ierr = 0
  726.             t$125 = nftgz0
  727.              _substr(t$139,1,4) = 'OLD'
  726.              _substr(t$140,1,6) = 'DIRECT'
  726.              _substr(t$141,1,11) = 'UNFORMATTED'
  726.             t$133 = $IOLEN_result_O6
  727.              _substr(t$142,1,4) = 'READ'
  726.             t$143(1) = 0x100000000000000L
  726. !dir$ suppress t$125
  726.             t$143(2) = int( loc( t$125 ), 8 )
  726. !dir$ suppress ierr
  726.             t$143(3) = int( loc( ierr ), 8 )
  726.             t$143(4) = 0
  726. !dir$ suppress  _substr(fnametg3zrl,1,_ltrim(  _substr(fnametg3zrl,1,max( 0, t$53 )) ))
  726.             t$143(5) = int( loc(  _substr(fnametg3zrl,1,_ltrim(  _substr(fnametg3zrl,1,_len( fnametg3zrl )) )) ), 8 )
  726.             t$143(6) = _ltrim(  _substr(fnametg3zrl,1,_len( fnametg3zrl )) )
  726. !dir$ suppress  _substr(t$139,1,3)
  726.             t$143(7) = int( loc(  _substr(t$139,1,3) ), 8 )
  726.             t$143(8) = 3
  726. !dir$ suppress  _substr(t$140,1,6)
  726.             t$143(9) = int( loc(  _substr(t$140,1,6) ), 8 )
  726.             t$143(10) = 6
  726. !dir$ suppress  _substr(t$141,1,11)
  726.             t$143(11) = int( loc(  _substr(t$141,1,11) ), 8 )
  726.             t$143(12) = 11
  726. !dir$ suppress t$133
  726.             t$143(13) = int( loc( t$133 ), 8 )
  726.             t$143(14) = 0
  726.             t$143(16) = 0
  726. !dir$ suppress  _substr(t$142,1,4)
  726.             t$143(18) = int( loc(  _substr(t$142,1,4) ), 8 )
  726.             t$143(19) = 4
  726.             t$143(20) = 0
  726.             t$143(22) = 0
  726.             t$143(24) = 0x2000200000000L
  726.             t$143(25) = 0
  726.             t$143(27) = 0
  726.             t$143(29) = 0
  726.             t$143(31) = 0
  726.             t$143(33) = 0
  726.             t$143(35) = 0
  726.             t$138 = _open( t$143 )
  728.             if ( ierr /= 0 ) then
  729.                $Unit_temp_O7 = nfprt
  729.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O7, Null_Arg, Null_Arg, t$12,  _substr(t$11,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnametg3zrl,1,_ltrim(  _substr(fnametg3zrl,1,_len( fnametg3zrl )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
  731.                 _substr(t$144,1,11) = '**(ERROR)**'
  731.                call _stop(  _substr(t$144,1,11) )
  731.             else
  734.                $IOLEN_result_O8 = _iolen( 3, _iolist( _iotype( (&)buf(+:( 1, t$7, 1 ), +:( 1, t$8, 1 ), +:( 1, 4, 1 )), 0x804060300000000L ) ) )
  736.                ierr = 0
  735.                t$125 = nfzol
  736.                 _substr(t$147,1,4) = 'OLD'
  735.                 _substr(t$148,1,6) = 'DIRECT'
  735.                 _substr(t$149,1,11) = 'UNFORMATTED'
  735.                t$133 = $IOLEN_result_O8
  736.                 _substr(t$150,1,4) = 'READ'
  735.                t$151(1) = 0x100000000000000L
  735. !dir$ suppress t$125
  735.                t$151(2) = int( loc( t$125 ), 8 )
  735. !dir$ suppress ierr
  735.                t$151(3) = int( loc( ierr ), 8 )
  735.                t$151(4) = 0
  735. !dir$ suppress  _substr(fnameroulen,1,_ltrim(  _substr(fnameroulen,1,255) ))
  735.                t$151(5) = int( loc(  _substr(fnameroulen,1,_ltrim(  _substr(fnameroulen,1,255) )) ), 8 )
  735.                t$151(6) = _ltrim(  _substr(fnameroulen,1,255) )
  735. !dir$ suppress  _substr(t$147,1,3)
  735.                t$151(7) = int( loc(  _substr(t$147,1,3) ), 8 )
  735.                t$151(8) = 3
  735. !dir$ suppress  _substr(t$148,1,6)
  735.                t$151(9) = int( loc(  _substr(t$148,1,6) ), 8 )
  735.                t$151(10) = 6
  735. !dir$ suppress  _substr(t$149,1,11)
  735.                t$151(11) = int( loc(  _substr(t$149,1,11) ), 8 )
  735.                t$151(12) = 11
  735. !dir$ suppress t$133
  735.                t$151(13) = int( loc( t$133 ), 8 )
  735.                t$151(14) = 0
  735.                t$151(16) = 0
  735. !dir$ suppress  _substr(t$150,1,4)
  735.                t$151(18) = int( loc(  _substr(t$150,1,4) ), 8 )
  735.                t$151(19) = 4
  735.                t$151(20) = 0
  735.                t$151(22) = 0
  735.                t$151(24) = 0x2000200000000L
  735.                t$151(25) = 0
  735.                t$151(27) = 0
  735.                t$151(29) = 0
  735.                t$151(31) = 0
  735.                t$151(33) = 0
  735.                t$151(35) = 0
  735.                t$146 = _open( t$151 )
  737.                if ( ierr /= 0 ) then
  738.                   $Unit_temp_O9 = nfprt
  738.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O9, Null_Arg, Null_Arg, t$14,  _substr(t$13,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnameroulen,1,_ltrim(  _substr(fnameroulen,1,255) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
  740.                    _substr(t$152,1,11) = '**(ERROR)**'
  740.                   call _stop(  _substr(t$152,1,11) )
  740.                else
  746.                   $Unit_temp_O10 = nfsibt
  746.                   _uread( _clist( 0, 0, 3, $Unit_temp_O10, Null_Arg, 1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)ibuf(+:( 1, t$7, 1 ), +:( 1, t$8, 1 )), 0x2000200000000L ) ) )
  747.                   $F_A66 = t$8
  747.                   $F_A67 = t$7
  747.                   if ( and( -$F_A67, -$F_A66 ) < 0 ) then
  747.                      $I_L747_522 = 0
  747.                      do
  747.                         $I_L747_456 = 0
  747. !dir$ ivdep
  747.                         do
  747.                            imask_in(1 + $I_L747_456, 1 + $I_L747_522) = ibuf(1 + $I_L747_456, 1 + $I_L747_522)
  747.                            $I_L747_456 = 1 + $I_L747_456
  747.                            if ( $I_L747_456 >= $F_A67 ) exit
  747.                         enddo
  747.                         $I_L747_522 = 1 + $I_L747_522
  747.                         if ( $I_L747_522 >= $F_A66 ) exit
  747.                      enddo
  747.                   endif
  756.                   if ( iglsm_w == 1 ) then
  757.                      t$153 = seat_ibmaxperjb
  757.                      call read_gl_sm_bc( imax, jmax, seat_jbmax, t$153,  _substr(record_type,1,_len( record_type )),  _substr(fnamesoiltype,1,_len( fnamesoiltype )),  _substr(fnamevegtype,1,_len( fnamevegtype )),  _substr(fnamesoilmoist,1,_len( fnamesoilmoist )), imask_in(1, 1) )
  757.                   endif
  773.                   if ( reducedgrid /= .false. ) then
  774.                      call freqboxijtoibjb_i2d( imask_in(1, 1), (imask%base_addr)(imask%dim_1%LB, imask%dim_2%LB, 0) )
  774.                   else
  776. !dir$ suppress imask_in(1, 1)
  776.                      t$154 = $_StaticDV_P1
  776.                      t$154%base_addr = pointer to array[1] of array[1] of integer (kind=8)( loc( imask_in(1, 1) ) )
  776.                      t$154%header%el_len = 64
  776.                      t$154%header%assoc = 1
  776.                      t$154%header%ptr_alloc = 0
  776.                      t$154%header%p_or_a = 0
  776.                      t$154%header%a_contig = 1
  776.                      t$154%header%n_dim = 2
  776.                      t$154%header%orig_base = 0
  776.                      t$154%header%orig_size = 0
  776.                      t$154%header%n_codim = 0
  776.                      t$154%header%dv_versn = 2
  776.                      t$154%header%dv_smunit = 64
  776.                      t$154%header%d_type = 0
  776.                      t$154%header%n_params = 0
  776.                      t$154%header%d_type_idx = 11
  776.                      t$154%dim_1%LB = 1
  776.                      t$154%dim_1%EX = _zla( 0, t$7 )
  776.                      t$154%dim_1%SM = 1
  776.                      t$154%dim_2%LB = 1
  776.                      t$154%dim_2%EX = _zla( 0, t$8 )
  776.                      t$154%dim_2%SM = _zla( 0, t$7 )
  776.                      t$155 = imask
  776.                      call ijtoibjb_i( t$154, t$155 )
  776.                   endif
  779.                   if ( jmax > 0 ) then
  779.                      $I_L779_482 = 0
  779.                      do
  780.                         if ( imax > 0 ) then
  780.                            $I_L780_412 = 0
  780. !dir$ ivdep
  780.                            do
  781.                               ier(1 + $I_L780_412, 1 + $I_L779_482) = imask_in(1 + $I_L780_412, 1 + $I_L779_482) <= 0
  786.                               $I_L780_412 = 1 + $I_L780_412
  780.                               if ( $I_L780_412 >= imax ) exit
  780.                            enddo
  780.                         endif
  787.                         $Reduc_A68 = .false.
  787.                         $F_A70 = imax
  787.                         if ( imax > 0 ) then
  787.                            $I_L787_458 = 0
  787. !dir$ ivdep
  787.                            do
  787.                               if ( ier(1 + $I_L787_458, 1 + $I_L779_482) /= 0 ) then
  787.                                  $Reduc_A68 = .true.
  787.                                  goto 20
  787.                               endif
  787.                               $I_L787_458 = 1 + $I_L787_458
  787.                               if ( $I_L787_458 >= $F_A70 ) exit
  787.                            enddo
  787.                         endif
  787.    20                   continue
  787.                         if ( $Reduc_A68 /= .false. ) then
  788.                            if ( imax > 0 ) then
  788.                               $I_L788_414 = 0
  788. !dir$ ivdep
  788.                               do
  789.                                  mskant_in(1 + $I_L788_414, 1 + $I_L779_482) = 1
  790.                                  $I_L788_414 = 1 + $I_L788_414
  788.                                  if ( $I_L788_414 >= imax ) exit
  788.                               enddo
  788.                            endif
  791.                         else if ( imax > 0 ) then
  792.                            $I_L792_416 = 0
  792. !dir$ ivdep
  792.                            do
  793.                               mskant_in(1 + $I_L792_416, 1 + $I_L779_482) = 0
  794.                               $I_L792_416 = 1 + $I_L792_416
  792.                               if ( $I_L792_416 >= imax ) exit
  792.                            enddo
  792.                         endif
  796.                         $I_L779_482 = 1 + $I_L779_482
  795.                         if ( $I_L779_482 >= jmax ) exit
  795.                      enddo
  795.                   endif
  797.                   if ( reducedgrid /= .false. ) then
  798.                      call freqboxijtoibjb_i2d( mskant_in(1, 1), (mskant%base_addr)(mskant%dim_1%LB, mskant%dim_2%LB, 0) )
  798.                   else
  800. !dir$ suppress mskant_in(1, 1)
  800.                      t$168 = $_StaticDV_P2
  800.                      t$168%base_addr = pointer to array[1] of array[1] of integer (kind=8)( loc( mskant_in(1, 1) ) )
  800.                      t$168%header%el_len = 64
  800.                      t$168%header%assoc = 1
  800.                      t$168%header%ptr_alloc = 0
  800.                      t$168%header%p_or_a = 0
  800.                      t$168%header%a_contig = 1
  800.                      t$168%header%n_dim = 2
  800.                      t$168%header%orig_base = 0
  800.                      t$168%header%orig_size = 0
  800.                      t$168%header%n_codim = 0
  800.                      t$168%header%dv_versn = 2
  800.                      t$168%header%dv_smunit = 64
  800.                      t$168%header%d_type = 0
  800.                      t$168%header%n_params = 0
  800.                      t$168%header%d_type_idx = 11
  800.                      t$168%dim_1%LB = 1
  800.                      t$168%dim_1%EX = _zla( 0, t$7 )
  800.                      t$168%dim_1%SM = 1
  800.                      t$168%dim_2%LB = 1
  800.                      t$168%dim_2%EX = _zla( 0, t$8 )
  800.                      t$168%dim_2%SM = _zla( 0, t$7 )
  800.                      t$169 = mskant
  800.                      call ijtoibjb_i( t$168, t$169 )
  800.                   endif
  808.                   if ( ifday /= 0 ) then
  801.                      goto 30
  801.                   else if ( tod /= 0.0 ) then
  801.                      goto 30
  801.                   else if ( initlz >= 0 ) then
  810.                       _substr(t$170,1,19) = '**(InitBoundCond)**'
  810.                       _substr(t$171,1,25) = 'Cold start SSib variables'
  810.                      call msgone(  _substr(t$170,1,19),  _substr(t$171,1,25) )
  813.                      t$173 = 0
  813.                      t$176 = 0
  813.                      if ( idate%header%a_contig == 1 ) then
  813. !dir$ suppress (idate%base_addr)(1, 0)
  813.                         t$172 = loc( (idate%base_addr)(1, 0) )
  813.                      else
  813.                         t$173 = idate%dim_1%EX
  813.                         t$176 = int( _alloc( max( 0, 4 * max( 0, idate%dim_1%EX ) ) ), 8 )
  813.                         $F_A71 = idate%dim_1%EX
  813.                         if ( idate%dim_1%EX > 0 ) then
  813.                            $SC_idate_I266 = idate%dim_1%SM
  813.                            $SC_idate_I265 = idate%dim_1%EX
  813.                            $SC_idate_I267 = idate%dim_1%LB
  813.                            $I_L813_460 = 0
  813. !dir$ ivdep
  813.                            do
  813.                               t$175(1 + $I_L813_460) = (idate%base_addr)(1 + $I_L813_460, 0)
  813.                               $I_L813_460 = 1 + $I_L813_460
  813.                               if ( $I_L813_460 >= $F_A71 ) exit
  813.                            enddo
  813.                         endif
  813. !dir$ suppress t$175
  813.                         t$172 = loc( t$175 )
  813.                      endif
  813.                      t$178 = 0
  813.                      t$181 = 0
  813.                      if ( idatec%header%a_contig == 1 ) then
  813. !dir$ suppress (idatec%base_addr)(1, 0)
  813.                         t$177 = loc( (idatec%base_addr)(1, 0) )
  813.                      else
  813.                         t$178 = idatec%dim_1%EX
  813.                         t$181 = int( _alloc( max( 0, 4 * max( 0, idatec%dim_1%EX ) ) ), 8 )
  813.                         $F_A72 = idatec%dim_1%EX
  813.                         if ( idatec%dim_1%EX > 0 ) then
  813.                            $SC_idatec_I269 = idatec%dim_1%SM
  813.                            $SC_idatec_I268 = idatec%dim_1%EX
  813.                            $SC_idatec_I270 = idatec%dim_1%LB
  813.                            $I_L813_462 = 0
  813. !dir$ ivdep
  813.                            do
  813.                               t$180(1 + $I_L813_462) = (idatec%base_addr)(1 + $I_L813_462, 0)
  813.                               $I_L813_462 = 1 + $I_L813_462
  813.                               if ( $I_L813_462 >= $F_A72 ) exit
  813.                            enddo
  813.                         endif
  813. !dir$ suppress t$180
  813.                         t$177 = loc( t$180 )
  813.                      endif
  812.                      t$182 = seat_ibmaxperjb
  812.                      call getsbc( imax, jmax, kmax, (albvisdiff%base_addr)(albvisdiff%dim_1%LB, albvisdiff%dim_2%LB, 0), (gtsea%base_addr)(gtsea%dim_1%LB, gtsea%dim_2%LB, 0), (soilm%base_addr)(soilm%dim_1%LB, soilm%dim_2%LB, 0), (sheleg%base_addr)(sheleg%dim_1%LB, sheleg%dim_2%LB, 0), (o3mix%base_addr)(o3mix%dim_1%LB, o3mix%dim_2%LB, o3mix%dim_3%LB, 0), ifday, tod, t$172, t$177, ifalb, ifsst, ifslm, ifsnw, ifozone, sstlag, intsst, fint, tice, yrl, monl(1), ibmax, seat_jbmax, t$182 )
  813.                      if ( idatec%header%a_contig /= 1 ) then
  813.                         _free( t$181 )
  813.                      endif
  813.                      if ( idate%header%a_contig /= 1 ) then
  813.                         _free( t$176 )
  813.                      endif
  817.                      irec = 1
  818. !dir$ suppress buf(1, 1, 1)
  818.                      t$183 = $_StaticDV_P3
  818.                      t$183%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 1) ) )
  818.                      t$183%header%el_len = 64
  818.                      t$183%header%assoc = 1
  818.                      t$183%header%ptr_alloc = 0
  818.                      t$183%header%p_or_a = 0
  818.                      t$183%header%a_contig = 1
  818.                      t$183%header%n_dim = 2
  818.                      t$183%header%orig_base = 0
  818.                      t$183%header%orig_size = 0
  818.                      t$183%header%n_codim = 0
  818.                      t$183%header%dv_versn = 2
  818.                      t$183%header%dv_smunit = 64
  818.                      t$183%header%d_type = 0
  818.                      t$183%header%n_params = 0
  818.                      t$183%header%d_type_idx = 13
  818.                      t$183%dim_1%LB = 1
  818.                      t$183%dim_1%EX = ( max( 0, t$7 ) )
  818.                      t$183%dim_1%SM = 1
  818.                      t$183%dim_2%LB = 1
  818.                      t$183%dim_2%EX = ( max( 0, t$8 ) )
  818.                      t$183%dim_2%SM = _zla( 0, t$7 )
  818. !dir$ suppress buf(1, 1, 2)
  818.                      t$184 = $_StaticDV_P4
  818.                      t$184%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 2) ) )
  818.                      t$184%header%el_len = 64
  818.                      t$184%header%assoc = 1
  818.                      t$184%header%ptr_alloc = 0
  818.                      t$184%header%p_or_a = 0
  818.                      t$184%header%a_contig = 1
  818.                      t$184%header%n_dim = 2
  818.                      t$184%header%orig_base = 0
  818.                      t$184%header%orig_size = 0
  818.                      t$184%header%n_codim = 0
  818.                      t$184%header%dv_versn = 2
  818.                      t$184%header%dv_smunit = 64
  818.                      t$184%header%d_type = 0
  818.                      t$184%header%n_params = 0
  818.                      t$184%header%d_type_idx = 13
  818.                      t$184%dim_1%LB = 1
  818.                      t$184%dim_1%EX = ( max( 0, t$7 ) )
  818.                      t$184%dim_1%SM = 1
  818.                      t$184%dim_2%LB = 1
  818.                      t$184%dim_2%EX = ( max( 0, t$8 ) )
  818.                      t$184%dim_2%SM = _zla( 0, t$7 )
  818. !dir$ suppress buf(1, 1, 3)
  818.                      t$185 = $_StaticDV_P5
  818.                      t$185%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 3) ) )
  818.                      t$185%header%el_len = 64
  818.                      t$185%header%assoc = 1
  818.                      t$185%header%ptr_alloc = 0
  818.                      t$185%header%p_or_a = 0
  818.                      t$185%header%a_contig = 1
  818.                      t$185%header%n_dim = 2
  818.                      t$185%header%orig_base = 0
  818.                      t$185%header%orig_size = 0
  818.                      t$185%header%n_codim = 0
  818.                      t$185%header%dv_versn = 2
  818.                      t$185%header%dv_smunit = 64
  818.                      t$185%header%d_type = 0
  818.                      t$185%header%n_params = 0
  818.                      t$185%header%d_type_idx = 13
  818.                      t$185%dim_1%LB = 1
  818.                      t$185%dim_1%EX = ( max( 0, t$7 ) )
  818.                      t$185%dim_1%SM = 1
  818.                      t$185%dim_2%LB = 1
  818.                      t$185%dim_2%EX = ( max( 0, t$8 ) )
  818.                      t$185%dim_2%SM = _zla( 0, t$7 )
  818.                      call readnftgz4( nftgz0, irec, t$183, t$184, t$185 )
  819.                      $Unit_temp_O11 = nfzol
  819.                      _uread( _clist( 0, 0, 3, $Unit_temp_O11, Null_Arg, 1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)brf(+:( 1, t$7, 1 ), +:( 1, t$8, 1 )), 0x402060300000000L ) ) )
  821.                      $F_A73 = jmax
  821.                      $F_A74 = imax
  821.                      if ( and( -$F_A74, -$F_A73 ) < 0 ) then
  821.                         $I_L821_524 = 0
  821.                         do
  821.                            $I_L821_464 = 0
  821. !dir$ ivdep
  821.                            do
  821.                               buf(1 + $I_L821_464, 1 + $I_L821_524, 4) = real( brf(1 + $I_L821_464, 1 + $I_L821_524), 8 )
  821.                               $I_L821_464 = 1 + $I_L821_464
  821.                               if ( $I_L821_464 >= $F_A74 ) exit
  821.                            enddo
  821.                            $I_L821_524 = 1 + $I_L821_524
  821.                            if ( $I_L821_524 >= $F_A73 ) exit
  821.                         enddo
  821.                      endif
  822.                      if ( reducedgrid /= .false. ) then
  823.                         call aveboxijtoibjb_r2d( buf(1, 1, 1), (tg1%base_addr)(tg1%dim_1%LB, tg1%dim_2%LB, 0) )
  823.                      else
  825. !dir$ suppress buf(1, 1, 1)
  825.                         t$186 = $_StaticDV_P6
  825.                         t$186%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 1) ) )
  825.                         t$186%header%el_len = 64
  825.                         t$186%header%assoc = 1
  825.                         t$186%header%ptr_alloc = 0
  825.                         t$186%header%p_or_a = 0
  825.                         t$186%header%a_contig = 1
  825.                         t$186%header%n_dim = 2
  825.                         t$186%header%orig_base = 0
  825.                         t$186%header%orig_size = 0
  825.                         t$186%header%n_codim = 0
  825.                         t$186%header%dv_versn = 2
  825.                         t$186%header%dv_smunit = 64
  825.                         t$186%header%d_type = 0
  825.                         t$186%header%n_params = 0
  825.                         t$186%header%d_type_idx = 13
  825.                         t$186%dim_1%LB = 1
  825.                         t$186%dim_1%EX = ( max( 0, t$7 ) )
  825.                         t$186%dim_1%SM = 1
  825.                         t$186%dim_2%LB = 1
  825.                         t$186%dim_2%EX = ( max( 0, t$8 ) )
  825.                         t$186%dim_2%SM = _zla( 0, t$7 )
  825.                         t$187 = tg1
  825.                         call ijtoibjb_r( t$186, t$187 )
  825.                      endif
  828.                      if ( reducedgrid /= .false. ) then
  829.                         call aveboxijtoibjb_r2d( buf(1, 1, 2), (tg2%base_addr)(tg2%dim_1%LB, tg2%dim_2%LB, 0) )
  829.                      else
  831. !dir$ suppress buf(1, 1, 2)
  831.                         t$188 = $_StaticDV_P7
  831.                         t$188%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 2) ) )
  831.                         t$188%header%el_len = 64
  831.                         t$188%header%assoc = 1
  831.                         t$188%header%ptr_alloc = 0
  831.                         t$188%header%p_or_a = 0
  831.                         t$188%header%a_contig = 1
  831.                         t$188%header%n_dim = 2
  831.                         t$188%header%orig_base = 0
  831.                         t$188%header%orig_size = 0
  831.                         t$188%header%n_codim = 0
  831.                         t$188%header%dv_versn = 2
  831.                         t$188%header%dv_smunit = 64
  831.                         t$188%header%d_type = 0
  831.                         t$188%header%n_params = 0
  831.                         t$188%header%d_type_idx = 13
  831.                         t$188%dim_1%LB = 1
  831.                         t$188%dim_1%EX = ( max( 0, t$7 ) )
  831.                         t$188%dim_1%SM = 1
  831.                         t$188%dim_2%LB = 1
  831.                         t$188%dim_2%EX = ( max( 0, t$8 ) )
  831.                         t$188%dim_2%SM = _zla( 0, t$7 )
  831.                         t$189 = tg2
  831.                         call ijtoibjb_r( t$188, t$189 )
  831.                      endif
  834.                      if ( reducedgrid /= .false. ) then
  835.                         call aveboxijtoibjb_r2d( buf(1, 1, 3), (tg3%base_addr)(tg3%dim_1%LB, tg3%dim_2%LB, 0) )
  835.                      else
  837. !dir$ suppress buf(1, 1, 3)
  837.                         t$190 = $_StaticDV_P8
  837.                         t$190%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 3) ) )
  837.                         t$190%header%el_len = 64
  837.                         t$190%header%assoc = 1
  837.                         t$190%header%ptr_alloc = 0
  837.                         t$190%header%p_or_a = 0
  837.                         t$190%header%a_contig = 1
  837.                         t$190%header%n_dim = 2
  837.                         t$190%header%orig_base = 0
  837.                         t$190%header%orig_size = 0
  837.                         t$190%header%n_codim = 0
  837.                         t$190%header%dv_versn = 2
  837.                         t$190%header%dv_smunit = 64
  837.                         t$190%header%d_type = 0
  837.                         t$190%header%n_params = 0
  837.                         t$190%header%d_type_idx = 13
  837.                         t$190%dim_1%LB = 1
  837.                         t$190%dim_1%EX = ( max( 0, t$7 ) )
  837.                         t$190%dim_1%SM = 1
  837.                         t$190%dim_2%LB = 1
  837.                         t$190%dim_2%EX = ( max( 0, t$8 ) )
  837.                         t$190%dim_2%SM = _zla( 0, t$7 )
  837.                         t$191 = tg3
  837.                         call ijtoibjb_r( t$190, t$191 )
  837.                      endif
  840.                      if ( reducedgrid /= .false. ) then
  841.                         call aveboxijtoibjb_r2d( buf(1, 1, 4), (zorl%base_addr)(zorl%dim_1%LB, zorl%dim_2%LB, 0) )
  841.                      else
  843. !dir$ suppress buf(1, 1, 4)
  843.                         t$192 = $_StaticDV_P9
  843.                         t$192%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( buf(1, 1, 4) ) )
  843.                         t$192%header%el_len = 64
  843.                         t$192%header%assoc = 1
  843.                         t$192%header%ptr_alloc = 0
  843.                         t$192%header%p_or_a = 0
  843.                         t$192%header%a_contig = 1
  843.                         t$192%header%n_dim = 2
  843.                         t$192%header%orig_base = 0
  843.                         t$192%header%orig_size = 0
  843.                         t$192%header%n_codim = 0
  843.                         t$192%header%dv_versn = 2
  843.                         t$192%header%dv_smunit = 64
  843.                         t$192%header%d_type = 0
  843.                         t$192%header%n_params = 0
  843.                         t$192%header%d_type_idx = 13
  843.                         t$192%dim_1%LB = 1
  843.                         t$192%dim_1%EX = ( max( 0, t$7 ) )
  843.                         t$192%dim_1%SM = 1
  843.                         t$192%dim_2%LB = 1
  843.                         t$192%dim_2%EX = ( max( 0, t$8 ) )
  843.                         t$192%dim_2%SM = _zla( 0, t$7 )
  843.                         t$193 = zorl
  843.                         call ijtoibjb_r( t$192, t$193 )
  843.                      endif
  845.                      $F_A75 = z0%dim_2%EX
  845.                      $F_A76 = z0%dim_1%EX
  845.                      if ( and( -$F_A76, -$F_A75 ) < 0 ) then
  845.                         $SC_z0_I271 = z0%dim_1%EX
  845.                         $SC_z0_I276 = z0%dim_1%LB
  845.                         $SC_z0_I277 = z0%dim_2%SM
  845.                         $SC_z0_I273 = z0%dim_2%EX
  845.                         $SC_z0_I278 = z0%dim_2%LB
  845.                         $SC_zorl_I272 = zorl%dim_1%LB
  845.                         $SC_zorl_I274 = zorl%dim_2%SM
  845.                         $SC_zorl_I275 = zorl%dim_2%LB
  845.                         $I_L845_526 = 0
  845.                         do
  845.                            $I_L845_466 = 0
  845. !dir$ ivdep
  845.                            do
  845.                               (z0%base_addr)($SC_z0_I276 + $I_L845_466, $SC_z0_I278 + $I_L845_526, 0) = (zorl%base_addr)($SC_zorl_I272 + $I_L845_466, $SC_zorl_I275 + $I_L845_526, 0)
  845.                               $I_L845_466 = 1 + $I_L845_466
  845.                               if ( $I_L845_466 >= $F_A76 ) exit
  845.                            enddo
  845.                            $I_L845_526 = 1 + $I_L845_526
  845.                            if ( $I_L845_526 >= $F_A75 ) exit
  845.                         enddo
  845.                      endif
  847.                      sinmax = 150.0
  851.                      if ( seat_jbmax > 0 ) then
  852.                         $SC_ibmaxperjb_I0 = seat_ibmaxperjb%dim_1%EX
  852.                         $SC_ibmaxperjb_I1 = seat_ibmaxperjb%dim_1%SM
  853.                         $SC_soilm_I2 = soilm%dim_1%EX
  853.                         $SC_soilm_I3 = soilm%dim_1%LB
  853.                         $SC_soilm_I5 = soilm%dim_2%SM
  853.                         $SC_soilm_I4 = soilm%dim_2%EX
  853.                         $SC_soilm_I6 = soilm%dim_2%LB
  853.                         $SC_rvisdiff_I7 = rvisdiff%dim_1%EX
  853.                         $SC_rvisdiff_I8 = rvisdiff%dim_1%LB
  853.                         $SC_rvisdiff_I10 = rvisdiff%dim_2%SM
  853.                         $SC_rvisdiff_I9 = rvisdiff%dim_2%EX
  853.                         $SC_rvisdiff_I11 = rvisdiff%dim_2%LB
  851.                         $I_L851_484 = 0
  851.                         do
  852.                            $t_S6 = (seat_ibmaxperjb%base_addr)(1 + $I_L851_484, 0)
  852.                            if ( $t_S6 > 0 ) then
  852.                               $I_L852_418 = 0
  852. !dir$ ivdep
  852.                               do
  853.                                  (rvisdiff%base_addr)(1 + $I_L852_418, 1 + $I_L851_484, 0) = abs( (soilm%base_addr)(1 + $I_L852_418, 1 + $I_L851_484, 0) )
  854.                                  $I_L852_418 = 1 + $I_L852_418
  852.                                  if ( $I_L852_418 >= $t_S6 ) exit
  852.                               enddo
  852.                            endif
  855.                            $I_L851_484 = 1 + $I_L851_484
  854.                            if ( $I_L851_484 >= seat_jbmax ) exit
  854.                         enddo
  854.                      endif
  857.                      if ( iglsm_w == 0 ) then
  858.                         t$200 = seat_ibmaxperjb
  858.                         call sibwet( ibmax, seat_jbmax, (rvisdiff%base_addr)(rvisdiff%dim_1%LB, rvisdiff%dim_2%LB, 0), sinmax, (imask%base_addr)(imask%dim_1%LB, imask%dim_2%LB, 0), wsib(1, 1), (ssib%base_addr)(ssib%dim_1%LB, ssib%dim_2%LB, 0), mxiter, t$200 )
  858.                      else
  869.                         t$201 = seat_ibmaxperjb
  869.                         call sibwet_glsm( ibmax, seat_jbmax, (imask%base_addr)(imask%dim_1%LB, imask%dim_2%LB, 0), wsib(1, 1), (ssib%base_addr)(ssib%dim_1%LB, ssib%dim_2%LB, 0), mxiter, t$201, (soilm%base_addr)(soilm%dim_1%LB, soilm%dim_2%LB, 0), 8, (wsib3d%base_addr)(wsib3d%dim_1%LB, wsib3d%dim_2%LB, wsib3d%dim_3%LB, 0), (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, glsm_w%dim_3%LB, 0) )
  869.                      endif
  884.                      $F_A77 = ppli%dim_2%EX
  884.                      $F_A78 = ppli%dim_1%EX
  884.                      if ( and( -$F_A78, -$F_A77 ) < 0 ) then
  884.                         $SC_ppli_I279 = ppli%dim_1%EX
  884.                         $SC_ppli_I280 = ppli%dim_1%LB
  884.                         $SC_ppli_I282 = ppli%dim_2%SM
  884.                         $SC_ppli_I281 = ppli%dim_2%EX
  884.                         $SC_ppli_I283 = ppli%dim_2%LB
  884.                         $I_L884_528 = 0
  884.                         do
  884.                            $I_L884_468 = 0
  884. !dir$ ivdep
  884.                            do
  884.                               (ppli%base_addr)($SC_ppli_I280 + $I_L884_468, $SC_ppli_I283 + $I_L884_528, 0) = 0.0
  884.                               $I_L884_468 = 1 + $I_L884_468
  884.                               if ( $I_L884_468 >= $F_A78 ) exit
  884.                            enddo
  884.                            $I_L884_528 = 1 + $I_L884_528
  884.                            if ( $I_L884_528 >= $F_A77 ) exit
  884.                         enddo
  884.                      endif
  885.                      $F_A79 = ppci%dim_2%EX
  885.                      $F_A80 = ppci%dim_1%EX
  885.                      if ( and( -$F_A80, -$F_A79 ) < 0 ) then
  885.                         $SC_ppci_I284 = ppci%dim_1%EX
  885.                         $SC_ppci_I285 = ppci%dim_1%LB
  885.                         $SC_ppci_I287 = ppci%dim_2%SM
  885.                         $SC_ppci_I286 = ppci%dim_2%EX
  885.                         $SC_ppci_I288 = ppci%dim_2%LB
  885.                         $I_L885_530 = 0
  885.                         do
  885.                            $I_L885_470 = 0
  885. !dir$ ivdep
  885.                            do
  885.                               (ppci%base_addr)($SC_ppci_I285 + $I_L885_470, $SC_ppci_I288 + $I_L885_530, 0) = 0.0
  885.                               $I_L885_470 = 1 + $I_L885_470
  885.                               if ( $I_L885_470 >= $F_A80 ) exit
  885.                            enddo
  885.                            $I_L885_530 = 1 + $I_L885_530
  885.                            if ( $I_L885_530 >= $F_A79 ) exit
  885.                         enddo
  885.                      endif
  886.                      $F_A81 = capac0%dim_3%EX
  886.                      $F_A82 = capac0%dim_2%EX
  886.                      $F_A83 = capac0%dim_1%EX
  886.                      if ( and( and( -$F_A82, -$F_A81 ), -$F_A83 ) < 0 ) then
  886.                         $SC_capac0_I289 = capac0%dim_1%EX
  886.                         $SC_capac0_I290 = capac0%dim_1%LB
  886.                         $SC_capac0_I292 = capac0%dim_2%SM
  886.                         $SC_capac0_I291 = capac0%dim_2%EX
  886.                         $SC_capac0_I293 = capac0%dim_2%LB
  886.                         $SC_capac0_I295 = capac0%dim_3%SM
  886.                         $SC_capac0_I294 = capac0%dim_3%EX
  886.                         $SC_capac0_I296 = capac0%dim_3%LB
  886.                         $I_L886_540 = 0
  886.                         do
  886.                            $I_L886_532 = 0
  886.                            do
  886.                               $I_L886_472 = 0
  886. !dir$ ivdep
  886.                               do
  886.                                  (capac0%base_addr)($SC_capac0_I290 + $I_L886_472, $SC_capac0_I293 + $I_L886_532, $SC_capac0_I296 + $I_L886_540, 0) = 0.0
  886.                                  $I_L886_472 = 1 + $I_L886_472
  886.                                  if ( $I_L886_472 >= $F_A83 ) exit
  886.                               enddo
  886.                               $I_L886_532 = 1 + $I_L886_532
  886.                               if ( $I_L886_532 >= $F_A82 ) exit
  886.                            enddo
  886.                            $I_L886_540 = 1 + $I_L886_540
  886.                            if ( $I_L886_540 >= $F_A81 ) exit
  886.                         enddo
  886.                      endif
  887.                      $F_A84 = capacm%dim_3%EX
  887.                      $F_A85 = capacm%dim_2%EX
  887.                      $F_A86 = capacm%dim_1%EX
  887.                      if ( and( and( -$F_A85, -$F_A84 ), -$F_A86 ) < 0 ) then
  887.                         $SC_capacm_I297 = capacm%dim_1%EX
  887.                         $SC_capacm_I298 = capacm%dim_1%LB
  887.                         $SC_capacm_I300 = capacm%dim_2%SM
  887.                         $SC_capacm_I299 = capacm%dim_2%EX
  887.                         $SC_capacm_I301 = capacm%dim_2%LB
  887.                         $SC_capacm_I303 = capacm%dim_3%SM
  887.                         $SC_capacm_I302 = capacm%dim_3%EX
  887.                         $SC_capacm_I304 = capacm%dim_3%LB
  887.                         $I_L887_542 = 0
  887.                         do
  887.                            $I_L887_534 = 0
  887.                            do
  887.                               $I_L887_474 = 0
  887. !dir$ ivdep
  887.                               do
  887.                                  (capacm%base_addr)($SC_capacm_I298 + $I_L887_474, $SC_capacm_I301 + $I_L887_534, $SC_capacm_I304 + $I_L887_542, 0) = 0.0
  887.                                  $I_L887_474 = 1 + $I_L887_474
  887.                                  if ( $I_L887_474 >= $F_A86 ) exit
  887.                               enddo
  887.                               $I_L887_534 = 1 + $I_L887_534
  887.                               if ( $I_L887_534 >= $F_A85 ) exit
  887.                            enddo
  887.                            $I_L887_542 = 1 + $I_L887_542
  887.                            if ( $I_L887_542 >= $F_A84 ) exit
  887.                         enddo
  887.                      endif
  892.                      if ( seat_jbmax > 0 ) then
  891.                         $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  894.                         $SC_ibmaxperjb_I0 = seat_ibmaxperjb%dim_1%EX
  894.                         $SC_ibmaxperjb_I1 = seat_ibmaxperjb%dim_1%SM
  909.                         $SC_wm_I40 = wm%dim_1%EX
  909.                         $SC_wm_I41 = wm%dim_1%LB
  909.                         $SC_wm_I43 = wm%dim_2%SM
  909.                         $SC_wm_I42 = wm%dim_2%EX
  909.                         $SC_wm_I44 = wm%dim_2%LB
  909.                         $SC_wm_I46 = wm%dim_3%SM
  909.                         $SC_wm_I45 = wm%dim_3%EX
  909.                         $SC_wm_I47 = wm%dim_3%LB
  906.                         $SC_w0_I32 = w0%dim_1%EX
  906.                         $SC_w0_I33 = w0%dim_1%LB
  906.                         $SC_w0_I35 = w0%dim_2%SM
  906.                         $SC_w0_I34 = w0%dim_2%EX
  906.                         $SC_w0_I36 = w0%dim_2%LB
  906.                         $SC_w0_I38 = w0%dim_3%SM
  906.                         $SC_w0_I37 = w0%dim_3%EX
  906.                         $SC_w0_I39 = w0%dim_3%LB
  896.                         $SC_mmlen_I17 = mmlen%dim_1%EX
  896.                         $SC_mmlen_I18 = mmlen%dim_1%LB
  896.                         $SC_mmlen_I20 = mmlen%dim_2%SM
  896.                         $SC_mmlen_I19 = mmlen%dim_2%EX
  896.                         $SC_mmlen_I21 = mmlen%dim_2%LB
  895.                         $SC_gl0_I12 = gl0%dim_1%EX
  895.                         $SC_gl0_I13 = gl0%dim_1%LB
  895.                         $SC_gl0_I15 = gl0%dim_2%SM
  895.                         $SC_gl0_I14 = gl0%dim_2%EX
  895.                         $SC_gl0_I16 = gl0%dim_2%LB
  914.                         $SC_wsib3d_I48 = wsib3d%dim_1%EX
  914.                         $SC_wsib3d_I49 = wsib3d%dim_1%LB
  914.                         $SC_wsib3d_I51 = wsib3d%dim_2%SM
  914.                         $SC_wsib3d_I50 = wsib3d%dim_2%EX
  914.                         $SC_wsib3d_I52 = wsib3d%dim_2%LB
  914.                         $SC_wsib3d_I54 = wsib3d%dim_3%SM
  914.                         $SC_wsib3d_I53 = wsib3d%dim_3%EX
  914.                         $SC_wsib3d_I55 = wsib3d%dim_3%LB
  923.                         $SC_tg3_I56 = tg3%dim_1%EX
  923.                         $SC_tg3_I57 = tg3%dim_1%LB
  897.                         $SC_gtsea_I27 = gtsea%dim_1%EX
  897.                         $SC_gtsea_I28 = gtsea%dim_1%LB
  897.                         $SC_gtsea_I30 = gtsea%dim_2%SM
  897.                         $SC_gtsea_I29 = gtsea%dim_2%EX
  897.                         $SC_gtsea_I31 = gtsea%dim_2%LB
  897.                         $SC_imask_I22 = imask%dim_1%EX
  897.                         $SC_imask_I23 = imask%dim_1%LB
  897.                         $SC_imask_I25 = imask%dim_2%SM
  897.                         $SC_imask_I24 = imask%dim_2%EX
  897.                         $SC_imask_I26 = imask%dim_2%LB
  892.                         $I_L892_486 = 0
  892. !$omp do schedule(static)
  892. !dir$ loop_info (automatic) cache_nt( ibmaxperjb )
  892.                         do
  893.                            $$_ncount = 0
  894.                            $t_S9 = (seat_ibmaxperjb%base_addr)(1 + $I_L892_486, 0)
  894.                            if ( $t_S9 > 0 ) then
  926.                               $SC_tcm_I185 = tcm%dim_1%EX
  926.                               $SC_tcm_I186 = tcm%dim_1%LB
  926.                               $SC_tcm_I188 = tcm%dim_2%SM
  926.                               $SC_tcm_I187 = tcm%dim_2%EX
  926.                               $SC_tcm_I189 = tcm%dim_2%LB
  925.                               $SC_tgm_I180 = tgm%dim_1%EX
  925.                               $SC_tgm_I181 = tgm%dim_1%LB
  925.                               $SC_tgm_I183 = tgm%dim_2%SM
  925.                               $SC_tgm_I182 = tgm%dim_2%EX
  925.                               $SC_tgm_I184 = tgm%dim_2%LB
  924.                               $SC_tdm_I175 = tdm%dim_1%EX
  924.                               $SC_tdm_I176 = tdm%dim_1%LB
  924.                               $SC_tdm_I178 = tdm%dim_2%SM
  924.                               $SC_tdm_I177 = tdm%dim_2%EX
  924.                               $SC_tdm_I179 = tdm%dim_2%LB
  923.                               $SC_td0_I170 = td0%dim_1%EX
  923.                               $SC_td0_I171 = td0%dim_1%LB
  923.                               $SC_td0_I173 = td0%dim_2%SM
  923.                               $SC_td0_I172 = td0%dim_2%EX
  923.                               $SC_td0_I174 = td0%dim_2%LB
  932.                               $SC_capacm_I213 = capacm%dim_1%EX
  932.                               $SC_capacm_I214 = capacm%dim_1%LB
  931.                               $SC_capac0_I205 = capac0%dim_1%EX
  931.                               $SC_capac0_I206 = capac0%dim_1%LB
  931.                               $SC_capac0_I208 = capac0%dim_2%SM
  931.                               $SC_capac0_I207 = capac0%dim_2%EX
  931.                               $SC_capac0_I209 = capac0%dim_2%LB
  931.                               $SC_capac0_I211 = capac0%dim_3%SM
  931.                               $SC_capac0_I210 = capac0%dim_3%EX
  931.                               $SC_capac0_I212 = capac0%dim_3%LB
  927.                               $SC_ssib_I190 = ssib%dim_1%EX
  927.                               $SC_ssib_I191 = ssib%dim_1%LB
  927.                               $SC_ssib_I193 = ssib%dim_2%SM
  927.                               $SC_ssib_I192 = ssib%dim_2%EX
  927.                               $SC_ssib_I194 = ssib%dim_2%LB
  923.                               $SC_tg3_I168 = tg3%dim_2%SM
  923.                               $SC_tg3_I167 = tg3%dim_2%EX
  923.                               $SC_tg3_I169 = tg3%dim_2%LB
  928.                               $SC_soilm_I195 = soilm%dim_1%EX
  928.                               $SC_soilm_I196 = soilm%dim_1%LB
  928.                               $SC_soilm_I198 = soilm%dim_2%SM
  928.                               $SC_soilm_I197 = soilm%dim_2%EX
  928.                               $SC_soilm_I199 = soilm%dim_2%LB
  930.                               $SC_sheleg_I200 = sheleg%dim_1%EX
  930.                               $SC_sheleg_I201 = sheleg%dim_1%LB
  930.                               $SC_sheleg_I203 = sheleg%dim_2%SM
  930.                               $SC_sheleg_I202 = sheleg%dim_2%EX
  930.                               $SC_sheleg_I204 = sheleg%dim_2%LB
  894.                               $I_L894_420 = 0
  894. !dir$ ivdep
  894.                               do
  895.                                  (gl0%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 0) = 10.0
  896.                                  (mmlen%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 0) = 10.0
  897.                                  if ( (imask%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 0) /= 0 ) then
  897.                                     (gtsea%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 0) = 290.0
  904.                                     $$_ncount = 1 + $$_ncount
  905.                                     if ( iglsm_w == 0 ) then
  906.                                        (w0%base_addr)($$_ncount, 1, 1 + $I_L892_486, 0) = wsib(1 + $I_L894_420, 1 + $I_L892_486)
  907.                                        (w0%base_addr)($$_ncount, 2, 1 + $I_L892_486, 0) = wsib(1 + $I_L894_420, 1 + $I_L892_486)
  908.                                        (w0%base_addr)($$_ncount, 3, 1 + $I_L892_486, 0) = wsib(1 + $I_L894_420, 1 + $I_L892_486)
  909.                                        (wm%base_addr)($$_ncount, 1, 1 + $I_L892_486, 0) = wsib(1 + $I_L894_420, 1 + $I_L892_486)
  910.                                        (wm%base_addr)($$_ncount, 2, 1 + $I_L892_486, 0) = wsib(1 + $I_L894_420, 1 + $I_L892_486)
  911.                                        (wm%base_addr)($$_ncount, 3, 1 + $I_L892_486, 0) = wsib(1 + $I_L894_420, 1 + $I_L892_486)
  911.                                     else
  914.                                        (w0%base_addr)($$_ncount, 1, 1 + $I_L892_486, 0) = (wsib3d%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 1, 0)
  915.                                        (w0%base_addr)($$_ncount, 2, 1 + $I_L892_486, 0) = (wsib3d%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 2, 0)
  916.                                        (w0%base_addr)($$_ncount, 3, 1 + $I_L892_486, 0) = (wsib3d%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 3, 0)
  917.                                        (wm%base_addr)($$_ncount, 1, 1 + $I_L892_486, 0) = (wsib3d%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 1, 0)
  918.                                        (wm%base_addr)($$_ncount, 2, 1 + $I_L892_486, 0) = (wsib3d%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 2, 0)
  919.                                        (wm%base_addr)($$_ncount, 3, 1 + $I_L892_486, 0) = (wsib3d%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 3, 0)
  919.                                     endif
  923.                                     (td0%base_addr)($$_ncount, 1 + $I_L892_486, 0) = (tg3%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 0)
  924.                                     (tdm%base_addr)($$_ncount, 1 + $I_L892_486, 0) = (tg3%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 0)
  925.                                     (tgm%base_addr)($$_ncount, 1 + $I_L892_486, 0) = (tg3%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 0)
  926.                                     (tcm%base_addr)($$_ncount, 1 + $I_L892_486, 0) = (tg3%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 0)
  927.                                     (ssib%base_addr)($$_ncount, 1 + $I_L892_486, 0) = 0.0
  928.                                     if ( (soilm%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 0) < 0.0 ) then
  928.                                        (ssib%base_addr)($$_ncount, 1 + $I_L892_486, 0) = wsib(1 + $I_L894_420, 1 + $I_L892_486)
  928.                                     endif
  930.                                     if ( (sheleg%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 0) > 0.0 ) then
  931.                                        (capac0%base_addr)($$_ncount, 2, 1 + $I_L892_486, 0) = ( 1.0e-3 * (sheleg%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 0) )
  932.                                        (capacm%base_addr)($$_ncount, 2, 1 + $I_L892_486, 0) = ( 1.0e-3 * (sheleg%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 0) )
  932.                                     endif
  900.                                  else if ( -(gtsea%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 0) < 271.17000000000002 ) then
  901.                                     (imask%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 0) = -1
  901.                                  endif
  898.                                  (tseam%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 0) = (gtsea%base_addr)(1 + $I_L894_420, 1 + $I_L892_486, 0)
  936.                                  $I_L894_420 = 1 + $I_L894_420
  897.                                  if ( $I_L894_420 >= $t_S9 ) exit
  897.                               enddo
  897.                            endif
  937.                            $I_L892_486 = 1 + $I_L892_486
  936.                            if ( $I_L892_486 >= seat_jbmax ) exit
  936.                         enddo
  938.                         $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
  938.                      endif
  938.                   else
  938.    30                continue
  942.                       _substr(t$208,1,19) = '**(InitBoundCond)**'
  942.                       _substr(t$209,1,25) = 'Warm start SSib variables'
  942.                      call msgone(  _substr(t$208,1,19),  _substr(t$209,1,25) )
  944.                      $Unit_temp_O12 = nfsibi
  944.                      _uread( _clist( 0, 0, 3, $Unit_temp_O12, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifdy, 0x2000200000000L ), _iotype( todsib, 0x804060300000000L ), _iotype( (&)(ids%base_addr)(+:( 1, ids%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (&)(idc%base_addr)(+:( 1, idc%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
  945.                      $Unit_temp_O13 = nfsibi
  945.                      _uread( _clist( 0, 0, 3, $Unit_temp_O13, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(tm0%base_addr)(+:( tm0%dim_1%LB, -1 + tm0%dim_1%LB + tm0%dim_1%EX, 1 ), +:( tm0%dim_2%LB, -1 + tm0%dim_2%LB + tm0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tmm%base_addr)(+:( tmm%dim_1%LB, -1 + tmm%dim_1%LB + tmm%dim_1%EX, 1 ), +:( tmm%dim_2%LB, -1 + tmm%dim_2%LB + tmm%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
  946.                      $Unit_temp_O14 = nfsibi
  946.                      _uread( _clist( 0, 0, 3, $Unit_temp_O14, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(qm0%base_addr)(+:( qm0%dim_1%LB, -1 + qm0%dim_1%LB + qm0%dim_1%EX, 1 ), +:( qm0%dim_2%LB, -1 + qm0%dim_2%LB + qm0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(qmm%base_addr)(+:( qmm%dim_1%LB, -1 + qmm%dim_1%LB + qmm%dim_1%EX, 1 ), +:( qmm%dim_2%LB, -1 + qmm%dim_2%LB + qmm%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
  947.                      $Unit_temp_O15 = nfsibi
  947.                      _uread( _clist( 0, 0, 3, $Unit_temp_O15, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(td0%base_addr)(+:( td0%dim_1%LB, -1 + td0%dim_1%LB + td0%dim_1%EX, 1 ), +:( td0%dim_2%LB, -1 + td0%dim_2%LB + td0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tdm%base_addr)(+:( tdm%dim_1%LB, -1 + tdm%dim_1%LB + tdm%dim_1%EX, 1 ), +:( tdm%dim_2%LB, -1 + tdm%dim_2%LB + tdm%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
  948.                      $Unit_temp_O16 = nfsibi
  948.                      _uread( _clist( 0, 0, 3, $Unit_temp_O16, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(tg0%base_addr)(+:( tg0%dim_1%LB, -1 + tg0%dim_1%LB + tg0%dim_1%EX, 1 ), +:( tg0%dim_2%LB, -1 + tg0%dim_2%LB + tg0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tgm%base_addr)(+:( tgm%dim_1%LB, -1 + tgm%dim_1%LB + tgm%dim_1%EX, 1 ), +:( tgm%dim_2%LB, -1 + tgm%dim_2%LB + tgm%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
  949.                      $Unit_temp_O17 = nfsibi
  949.                      _uread( _clist( 0, 0, 3, $Unit_temp_O17, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(tc0%base_addr)(+:( tc0%dim_1%LB, -1 + tc0%dim_1%LB + tc0%dim_1%EX, 1 ), +:( tc0%dim_2%LB, -1 + tc0%dim_2%LB + tc0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tcm%base_addr)(+:( tcm%dim_1%LB, -1 + tcm%dim_1%LB + tcm%dim_1%EX, 1 ), +:( tcm%dim_2%LB, -1 + tcm%dim_2%LB + tcm%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
  950.                      $Unit_temp_O18 = nfsibi
  950.                      _uread( _clist( 0, 0, 3, $Unit_temp_O18, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(w0%base_addr)(+:( w0%dim_1%LB, -1 + w0%dim_1%LB + w0%dim_1%EX, 1 ), +:( w0%dim_2%LB, -1 + w0%dim_2%LB + w0%dim_2%EX, 1 ), +:( w0%dim_3%LB, -1 + w0%dim_3%LB + w0%dim_3%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(wm%base_addr)(+:( wm%dim_1%LB, -1 + wm%dim_1%LB + wm%dim_1%EX, 1 ), +:( wm%dim_2%LB, -1 + wm%dim_2%LB + wm%dim_2%EX, 1 ), +:( wm%dim_3%LB, -1 + wm%dim_3%LB + wm%dim_3%EX, 1 ), 0), 0x804060300000000L ) ) )
  951.                      $Unit_temp_O19 = nfsibi
  951.                      _uread( _clist( 0, 0, 3, $Unit_temp_O19, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(capac0%base_addr)(+:( capac0%dim_1%LB, -1 + capac0%dim_1%LB + capac0%dim_1%EX, 1 ), +:( capac0%dim_2%LB, -1 + capac0%dim_2%LB + capac0%dim_2%EX, 1 ), +:( capac0%dim_3%LB, -1 + capac0%dim_3%LB + capac0%dim_3%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(capacm%base_addr)(+:( capacm%dim_1%LB, -1 + capacm%dim_1%LB + capacm%dim_1%EX, 1 ), +:( capacm%dim_2%LB, -1 + capacm%dim_2%LB + capacm%dim_2%EX, 1 ), +:( capacm%dim_3%LB, -1 + capacm%dim_3%LB + capacm%dim_3%EX, 1 ), 0), 0x804060300000000L ) ) )
  952.                      $Unit_temp_O20 = nfsibi
  952.                      _uread( _clist( 0, 0, 3, $Unit_temp_O20, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(ppci%base_addr)(+:( ppci%dim_1%LB, -1 + ppci%dim_1%LB + ppci%dim_1%EX, 1 ), +:( ppci%dim_2%LB, -1 + ppci%dim_2%LB + ppci%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(ppli%base_addr)(+:( ppli%dim_1%LB, -1 + ppli%dim_1%LB + ppli%dim_1%EX, 1 ), +:( ppli%dim_2%LB, -1 + ppli%dim_2%LB + ppli%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
  953.                      $Unit_temp_O21 = nfsibi
  953.                      _uread( _clist( 0, 0, 3, $Unit_temp_O21, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(gl0%base_addr)(+:( gl0%dim_1%LB, -1 + gl0%dim_1%LB + gl0%dim_1%EX, 1 ), +:( gl0%dim_2%LB, -1 + gl0%dim_2%LB + gl0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(zorl%base_addr)(+:( zorl%dim_1%LB, -1 + zorl%dim_1%LB + zorl%dim_1%EX, 1 ), +:( zorl%dim_2%LB, -1 + zorl%dim_2%LB + zorl%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(gtsea%base_addr)(+:( gtsea%dim_1%LB, -1 + gtsea%dim_1%LB + gtsea%dim_1%EX, 1 ), +:( gtsea%dim_2%LB, -1 + gtsea%dim_2%LB + gtsea%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tseam%base_addr)(+:( tseam%dim_1%LB, -1 + tseam%dim_1%LB + tseam%dim_1%EX, 1 ), +:( tseam%dim_2%LB, -1 + tseam%dim_2%LB + tseam%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(qsfc0%base_addr)(+:( qsfc0%dim_1%LB, -1 + qsfc0%dim_1%LB + qsfc0%dim_1%EX, 1 ), +:( qsfc0%dim_2%LB, -1 + qsfc0%dim_2%LB + qsfc0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tsfc0%base_addr)(+:( tsfc0%dim_1%LB, -1 + tsfc0%dim_1%LB + tsfc0%dim_1%EX, 1 ), +:( tsfc0%dim_2%LB, -1 + tsfc0%dim_2%LB + tsfc0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(qsfcm%base_addr)(+:( qsfcm%dim_1%LB, -1 + qsfcm%dim_1%LB + qsfcm%dim_1%EX, 1 ), +:( qsfcm%dim_2%LB, -1 + qsfcm%dim_2%LB + qsfcm%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tsfcm%base_addr)(+:( tsfcm%dim_1%LB, -1 + tsfcm%dim_1%LB + tsfcm%dim_1%EX, 1 ), +:( tsfcm%dim_2%LB, -1 + tsfcm%dim_2%LB + tsfcm%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
  954.                      $Unit_temp_O22 = nfsibi
  954.                      _uread( _clist( 0, 0, 3, $Unit_temp_O22, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(imask%base_addr)(+:( imask%dim_1%LB, -1 + imask%dim_1%LB + imask%dim_1%EX, 1 ), +:( imask%dim_2%LB, -1 + imask%dim_2%LB + imask%dim_2%EX, 1 ), 0), 0x804060200000000L ) ) )
  955.                      $F_A87 = mmlen%dim_2%EX
  955.                      $F_A88 = mmlen%dim_1%EX
  955.                      if ( and( -$F_A88, -$F_A87 ) < 0 ) then
  955.                         $SC_mmlen_I305 = mmlen%dim_1%EX
  955.                         $SC_mmlen_I310 = mmlen%dim_1%LB
  955.                         $SC_mmlen_I311 = mmlen%dim_2%SM
  955.                         $SC_mmlen_I307 = mmlen%dim_2%EX
  955.                         $SC_mmlen_I312 = mmlen%dim_2%LB
  955.                         $SC_gl0_I306 = gl0%dim_1%LB
  955.                         $SC_gl0_I308 = gl0%dim_2%SM
  955.                         $SC_gl0_I309 = gl0%dim_2%LB
  955.                         $I_L955_536 = 0
  955.                         do
  955.                            $I_L955_476 = 0
  955. !dir$ ivdep
  955.                            do
  955.                               (mmlen%base_addr)($SC_mmlen_I310 + $I_L955_476, $SC_mmlen_I312 + $I_L955_536, 0) = (gl0%base_addr)($SC_gl0_I306 + $I_L955_476, $SC_gl0_I309 + $I_L955_536, 0)
  955.                               $I_L955_476 = 1 + $I_L955_476
  955.                               if ( $I_L955_476 >= $F_A88 ) exit
  955.                            enddo
  955.                            $I_L955_536 = 1 + $I_L955_536
  955.                            if ( $I_L955_536 >= $F_A87 ) exit
  955.                         enddo
  955.                      endif
  956.                      t$125 = nfsibi
  956.                      t$210 = __rewf( t$125, 0, 0, 0x100000000000000L, 0, 0 )
  960.                      if ( initlz < 0 ) then
  960.                         if ( initlz > -3 ) then
  963.                            t$212 = 0
  963.                            t$215 = 0
  963.                            if ( idate%header%a_contig == 1 ) then
  963. !dir$ suppress (idate%base_addr)(1, 0)
  963.                               t$211 = loc( (idate%base_addr)(1, 0) )
  963.                            else
  963.                               t$212 = idate%dim_1%EX
  963.                               t$215 = int( _alloc( max( 0, 4 * max( 0, idate%dim_1%EX ) ) ), 8 )
  963.                               $F_A89 = idate%dim_1%EX
  963.                               if ( idate%dim_1%EX > 0 ) then
  963.                                  $SC_idate_I266 = idate%dim_1%SM
  963.                                  $SC_idate_I265 = idate%dim_1%EX
  963.                                  $SC_idate_I267 = idate%dim_1%LB
  963.                                  $I_L963_478 = 0
  963. !dir$ ivdep
  963.                                  do
  963.                                     t$214(1 + $I_L963_478) = (idate%base_addr)(1 + $I_L963_478, 0)
  963.                                     $I_L963_478 = 1 + $I_L963_478
  963.                                     if ( $I_L963_478 >= $F_A89 ) exit
  963.                                  enddo
  963.                               endif
  963. !dir$ suppress t$214
  963.                               t$211 = loc( t$214 )
  963.                            endif
  963.                            t$217 = 0
  963.                            t$220 = 0
  963.                            if ( idatec%header%a_contig == 1 ) then
  963. !dir$ suppress (idatec%base_addr)(1, 0)
  963.                               t$216 = loc( (idatec%base_addr)(1, 0) )
  963.                            else
  963.                               t$217 = idatec%dim_1%EX
  963.                               t$220 = int( _alloc( max( 0, 4 * max( 0, idatec%dim_1%EX ) ) ), 8 )
  963.                               $F_A90 = idatec%dim_1%EX
  963.                               if ( idatec%dim_1%EX > 0 ) then
  963.                                  $SC_idatec_I269 = idatec%dim_1%SM
  963.                                  $SC_idatec_I268 = idatec%dim_1%EX
  963.                                  $SC_idatec_I270 = idatec%dim_1%LB
  963.                                  $I_L963_480 = 0
  963. !dir$ ivdep
  963.                                  do
  963.                                     t$219(1 + $I_L963_480) = (idatec%base_addr)(1 + $I_L963_480, 0)
  963.                                     $I_L963_480 = 1 + $I_L963_480
  963.                                     if ( $I_L963_480 >= $F_A90 ) exit
  963.                                  enddo
  963.                               endif
  963. !dir$ suppress t$219
  963.                               t$216 = loc( t$219 )
  963.                            endif
  962.                            t$221 = seat_ibmaxperjb
  962.                            call getsbc( imax, jmax, kmax, (albvisdiff%base_addr)(albvisdiff%dim_1%LB, albvisdiff%dim_2%LB, 0), (gtsea%base_addr)(gtsea%dim_1%LB, gtsea%dim_2%LB, 0), (soilm%base_addr)(soilm%dim_1%LB, soilm%dim_2%LB, 0), (sheleg%base_addr)(sheleg%dim_1%LB, sheleg%dim_2%LB, 0), (o3mix%base_addr)(o3mix%dim_1%LB, o3mix%dim_2%LB, o3mix%dim_3%LB, 0), ifday, tod, t$211, t$216, ifalb, ifsst, ifslm, ifsnw, ifozone, sstlag, intsst, fint, tice, yrl, monl(1), ibmax, seat_jbmax, t$221 )
  963.                            if ( idatec%header%a_contig /= 1 ) then
  963.                               _free( t$220 )
  963.                            endif
  963.                            if ( idate%header%a_contig /= 1 ) then
  963.                               _free( t$215 )
  963.                            endif
  963.                         endif
  963.                      endif
  971.                      if ( seat_jbmax > 0 ) then
  970.                         $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  973.                         $SC_ibmaxperjb_I0 = seat_ibmaxperjb%dim_1%EX
  973.                         $SC_ibmaxperjb_I1 = seat_ibmaxperjb%dim_1%SM
  982.                         $SC_wm_I40 = wm%dim_1%EX
  982.                         $SC_wm_I41 = wm%dim_1%LB
  982.                         $SC_wm_I43 = wm%dim_2%SM
  982.                         $SC_wm_I42 = wm%dim_2%EX
  982.                         $SC_wm_I44 = wm%dim_2%LB
  982.                         $SC_wm_I46 = wm%dim_3%SM
  982.                         $SC_wm_I45 = wm%dim_3%EX
  982.                         $SC_wm_I47 = wm%dim_3%LB
  977.                         $SC_w0_I32 = w0%dim_1%EX
  977.                         $SC_w0_I33 = w0%dim_1%LB
  977.                         $SC_w0_I35 = w0%dim_2%SM
  977.                         $SC_w0_I34 = w0%dim_2%EX
  977.                         $SC_w0_I36 = w0%dim_2%LB
  977.                         $SC_w0_I38 = w0%dim_3%SM
  977.                         $SC_w0_I37 = w0%dim_3%EX
  977.                         $SC_w0_I39 = w0%dim_3%LB
  976.                         $SC_ssib_I58 = ssib%dim_1%EX
  976.                         $SC_ssib_I59 = ssib%dim_1%LB
  976.                         $SC_ssib_I61 = ssib%dim_2%SM
  976.                         $SC_ssib_I60 = ssib%dim_2%EX
  976.                         $SC_ssib_I62 = ssib%dim_2%LB
  974.                         $SC_imask_I22 = imask%dim_1%EX
  974.                         $SC_imask_I23 = imask%dim_1%LB
  974.                         $SC_imask_I25 = imask%dim_2%SM
  974.                         $SC_imask_I24 = imask%dim_2%EX
  974.                         $SC_imask_I26 = imask%dim_2%LB
  971.                         $I_L971_488 = 0
  971. !$omp do schedule(static)
  971.                         do
  972.                            $$_ncount = 0
  973.                            $t_S12 = (seat_ibmaxperjb%base_addr)(1 + $I_L971_488, 0)
  973.                            if ( $t_S12 > 0 ) then
  973.                               $I_L973_422 = 0
  973. !dir$ ivdep
  973.                               do
  974.                                  if ( (imask%base_addr)(1 + $I_L973_422, 1 + $I_L971_488, 0) > 0 ) then
  975.                                     $$_ncount = 1 + $$_ncount
  976.                                     (ssib%base_addr)($$_ncount, 1 + $I_L971_488, 0) = 0.0
  977.                                     if ( (w0%base_addr)($$_ncount, 1, 1 + $I_L971_488, 0) < 0.0 ) then
  978.                                        (ssib%base_addr)($$_ncount, 1 + $I_L971_488, 0) = abs( (w0%base_addr)($$_ncount, 1, 1 + $I_L971_488, 0) )
  982.                                        (wm%base_addr)($$_ncount, 1, 1 + $I_L971_488, 0) = abs( (wm%base_addr)($$_ncount, 1, 1 + $I_L971_488, 0) )
  983.                                        (wm%base_addr)($$_ncount, 2, 1 + $I_L971_488, 0) = abs( (wm%base_addr)($$_ncount, 2, 1 + $I_L971_488, 0) )
  984.                                        (wm%base_addr)($$_ncount, 3, 1 + $I_L971_488, 0) = abs( (wm%base_addr)($$_ncount, 3, 1 + $I_L971_488, 0) )
  979.                                        (w0%base_addr)($$_ncount, 1, 1 + $I_L971_488, 0) = abs( (w0%base_addr)($$_ncount, 1, 1 + $I_L971_488, 0) )
  980.                                        (w0%base_addr)($$_ncount, 2, 1 + $I_L971_488, 0) = abs( (w0%base_addr)($$_ncount, 2, 1 + $I_L971_488, 0) )
  981.                                        (w0%base_addr)($$_ncount, 3, 1 + $I_L971_488, 0) = abs( (w0%base_addr)($$_ncount, 3, 1 + $I_L971_488, 0) )
  981.                                     endif
  981.                                  endif
  987.                                  $I_L973_422 = 1 + $I_L973_422
  986.                                  if ( $I_L973_422 >= $t_S12 ) exit
  986.                               enddo
  986.                            endif
  988.                            $I_L971_488 = 1 + $I_L971_488
  987.                            if ( $I_L971_488 >= seat_jbmax ) exit
  987.                         enddo
  989.                         $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
  989.                      endif
  991.                      if ( nfctrl(5) > 0 ) then
  991.                         $Unit_temp_O23 = nfprt
  991.                         _fwrite( _clist( 0, 0, 3, $Unit_temp_O23, Null_Arg, Null_Arg, t$16,  _substr(t$15,1,120), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifdy, 0x2000200000000L ), _iotype( todsib, 0x804060300000000L ), _iotype( (&)(ids%base_addr)(+:( 1, ids%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (&)(idc%base_addr)(+:( 1, idc%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
  991.                      endif
  991.                   endif
  991.                   goto 40
  991.                endif
  991.             endif
  991.          endif
  991.       else
  991.    40    continue
  633.          _free( t$58 )
  633.       endif
 1000.       return
 1000.       end
 1000.       
 1107.       
 1107.       subroutine initcheckfile( ibmax, jbmax, kmax, ifdy, todcld, ids, idc, ifday, tod, idate, idatec, todsib, ibmaxperjb )
 1004.       ids%dim_1%LB = 1
 1004.       idc%dim_1%LB = 1
 1004.       idate%dim_1%LB = 1
 1004.       idatec%dim_1%LB = 1
 1004.       ibmaxperjb%dim_1%LB = 1
 1031.       if ( nfcnv0 /= 0 ) then
 1032.           _substr(t$228,1,19) = '**(InitCheckfile)**'
 1032.           _substr(t$229,1,25) = 'Read prec/cloud variables'
 1032.          call msgone(  _substr(t$228,1,19),  _substr(t$229,1,25) )
 1033.          $Unit_temp_O0 = nfcnv0
 1033.          _uread( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifdy, 0x2000200000000L ), _iotype( todcld, 0x804060300000000L ), _iotype( (&)(ids%base_addr)(+:( 1, ids%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (&)(idc%base_addr)(+:( 1, idc%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
 1034.          $Unit_temp_O1 = nfcnv0
 1034.          _uread( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(convc%base_addr)(+:( convc%dim_1%LB, -1 + convc%dim_1%LB + convc%dim_1%EX, 1 ), +:( convc%dim_2%LB, -1 + convc%dim_2%LB + convc%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(convt%base_addr)(+:( convt%dim_1%LB, -1 + convt%dim_1%LB + convt%dim_1%EX, 1 ), +:( convt%dim_2%LB, -1 + convt%dim_2%LB + convt%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(convb%base_addr)(+:( convb%dim_1%LB, -1 + convb%dim_1%LB + convb%dim_1%EX, 1 ), +:( convb%dim_2%LB, -1 + convb%dim_2%LB + convb%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(prcp1%base_addr)(+:( prcp1%dim_1%LB, -1 + prcp1%dim_1%LB + prcp1%dim_1%EX, 1 ), +:( prcp1%dim_2%LB, -1 + prcp1%dim_2%LB + prcp1%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(prcp2%base_addr)(+:( prcp2%dim_1%LB, -1 + prcp2%dim_1%LB + prcp2%dim_1%EX, 1 ), +:( prcp2%dim_2%LB, -1 + prcp2%dim_2%LB + prcp2%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(prcp3%base_addr)(+:( prcp3%dim_1%LB, -1 + prcp3%dim_1%LB + prcp3%dim_1%EX, 1 ), +:( prcp3%dim_2%LB, -1 + prcp3%dim_2%LB + prcp3%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(prcpt%base_addr)(+:( prcpt%dim_1%LB, -1 + prcpt%dim_1%LB + prcpt%dim_1%EX, 1 ), +:( prcpt%dim_2%LB, -1 + prcpt%dim_2%LB + prcpt%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(toplv%base_addr)(+:( toplv%dim_1%LB, -1 + toplv%dim_1%LB + toplv%dim_1%EX, 1 ), +:( toplv%dim_2%LB, -1 + toplv%dim_2%LB + toplv%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(botlv%base_addr)(+:( botlv%dim_1%LB, -1 + botlv%dim_1%LB + botlv%dim_1%EX, 1 ), +:( botlv%dim_2%LB, -1 + botlv%dim_2%LB + botlv%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
 1038.          t$231 = nfcnv0
 1038.          t$230 = __rewf( t$231, 0, 0, 0x100000000000000L, 0, 0 )
 1040.          if ( nfctrl(4) > 0 ) then
 1040.             $Unit_temp_O2 = nfprt
 1040.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, t$22,  _substr(t$21,1,117), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifdy, 0x2000200000000L ), _iotype( todcld, 0x804060300000000L ), _iotype( (&)(ids%base_addr)(+:( 1, ids%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (&)(idc%base_addr)(+:( 1, idc%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
 1040.          endif
 1040.       else
 1043.           _substr(t$232,1,19) = '**(InitCheckfile)**'
 1043.           _substr(t$233,1,33) = 'Initializing prec/cloud variables'
 1043.          call msgone(  _substr(t$232,1,19),  _substr(t$233,1,33) )
 1044.          $F_A33 = convc%dim_2%EX
 1044.          $F_A34 = convc%dim_1%EX
 1044.          if ( and( -$F_A34, -$F_A33 ) < 0 ) then
 1044.             $SC_convc_I87 = convc%dim_1%EX
 1044.             $SC_convc_I88 = convc%dim_1%LB
 1044.             $SC_convc_I90 = convc%dim_2%SM
 1044.             $SC_convc_I89 = convc%dim_2%EX
 1044.             $SC_convc_I91 = convc%dim_2%LB
 1044.             $I_L1044_64 = 0
 1044.             do
 1044.                $I_L1044_38 = 0
 1044. !dir$ ivdep
 1044.                do
 1044.                   (convc%base_addr)($SC_convc_I88 + $I_L1044_38, $SC_convc_I91 + $I_L1044_64, 0) = 0.0
 1044.                   $I_L1044_38 = 1 + $I_L1044_38
 1044.                   if ( $I_L1044_38 >= $F_A34 ) exit
 1044.                enddo
 1044.                $I_L1044_64 = 1 + $I_L1044_64
 1044.                if ( $I_L1044_64 >= $F_A33 ) exit
 1044.             enddo
 1044.          endif
 1045.          $F_A35 = convt%dim_2%EX
 1045.          $F_A36 = convt%dim_1%EX
 1045.          if ( and( -$F_A36, -$F_A35 ) < 0 ) then
 1045.             $SC_convt_I92 = convt%dim_1%EX
 1045.             $SC_convt_I93 = convt%dim_1%LB
 1045.             $SC_convt_I95 = convt%dim_2%SM
 1045.             $SC_convt_I94 = convt%dim_2%EX
 1045.             $SC_convt_I96 = convt%dim_2%LB
 1045.             $I_L1045_66 = 0
 1045.             do
 1045.                $I_L1045_40 = 0
 1045. !dir$ ivdep
 1045.                do
 1045.                   (convt%base_addr)($SC_convt_I93 + $I_L1045_40, $SC_convt_I96 + $I_L1045_66, 0) = 0.0
 1045.                   $I_L1045_40 = 1 + $I_L1045_40
 1045.                   if ( $I_L1045_40 >= $F_A36 ) exit
 1045.                enddo
 1045.                $I_L1045_66 = 1 + $I_L1045_66
 1045.                if ( $I_L1045_66 >= $F_A35 ) exit
 1045.             enddo
 1045.          endif
 1046.          $F_A37 = convb%dim_2%EX
 1046.          $F_A38 = convb%dim_1%EX
 1046.          if ( and( -$F_A38, -$F_A37 ) < 0 ) then
 1046.             $SC_convb_I97 = convb%dim_1%EX
 1046.             $SC_convb_I98 = convb%dim_1%LB
 1046.             $SC_convb_I100 = convb%dim_2%SM
 1046.             $SC_convb_I99 = convb%dim_2%EX
 1046.             $SC_convb_I101 = convb%dim_2%LB
 1046.             $I_L1046_68 = 0
 1046.             do
 1046.                $I_L1046_42 = 0
 1046. !dir$ ivdep
 1046.                do
 1046.                   (convb%base_addr)($SC_convb_I98 + $I_L1046_42, $SC_convb_I101 + $I_L1046_68, 0) = 0.0
 1046.                   $I_L1046_42 = 1 + $I_L1046_42
 1046.                   if ( $I_L1046_42 >= $F_A38 ) exit
 1046.                enddo
 1046.                $I_L1046_68 = 1 + $I_L1046_68
 1046.                if ( $I_L1046_68 >= $F_A37 ) exit
 1046.             enddo
 1046.          endif
 1047.          $F_A39 = prcp1%dim_2%EX
 1047.          $F_A40 = prcp1%dim_1%EX
 1047.          if ( and( -$F_A40, -$F_A39 ) < 0 ) then
 1047.             $SC_prcp1_I102 = prcp1%dim_1%EX
 1047.             $SC_prcp1_I103 = prcp1%dim_1%LB
 1047.             $SC_prcp1_I105 = prcp1%dim_2%SM
 1047.             $SC_prcp1_I104 = prcp1%dim_2%EX
 1047.             $SC_prcp1_I106 = prcp1%dim_2%LB
 1047.             $I_L1047_70 = 0
 1047.             do
 1047.                $I_L1047_44 = 0
 1047. !dir$ ivdep
 1047.                do
 1047.                   (prcp1%base_addr)($SC_prcp1_I103 + $I_L1047_44, $SC_prcp1_I106 + $I_L1047_70, 0) = 0.0
 1047.                   $I_L1047_44 = 1 + $I_L1047_44
 1047.                   if ( $I_L1047_44 >= $F_A40 ) exit
 1047.                enddo
 1047.                $I_L1047_70 = 1 + $I_L1047_70
 1047.                if ( $I_L1047_70 >= $F_A39 ) exit
 1047.             enddo
 1047.          endif
 1048.          $F_A41 = prcp2%dim_2%EX
 1048.          $F_A42 = prcp2%dim_1%EX
 1048.          if ( and( -$F_A42, -$F_A41 ) < 0 ) then
 1048.             $SC_prcp2_I107 = prcp2%dim_1%EX
 1048.             $SC_prcp2_I108 = prcp2%dim_1%LB
 1048.             $SC_prcp2_I110 = prcp2%dim_2%SM
 1048.             $SC_prcp2_I109 = prcp2%dim_2%EX
 1048.             $SC_prcp2_I111 = prcp2%dim_2%LB
 1048.             $I_L1048_72 = 0
 1048.             do
 1048.                $I_L1048_46 = 0
 1048. !dir$ ivdep
 1048.                do
 1048.                   (prcp2%base_addr)($SC_prcp2_I108 + $I_L1048_46, $SC_prcp2_I111 + $I_L1048_72, 0) = 0.0
 1048.                   $I_L1048_46 = 1 + $I_L1048_46
 1048.                   if ( $I_L1048_46 >= $F_A42 ) exit
 1048.                enddo
 1048.                $I_L1048_72 = 1 + $I_L1048_72
 1048.                if ( $I_L1048_72 >= $F_A41 ) exit
 1048.             enddo
 1048.          endif
 1049.          $F_A43 = prcp3%dim_2%EX
 1049.          $F_A44 = prcp3%dim_1%EX
 1049.          if ( and( -$F_A44, -$F_A43 ) < 0 ) then
 1049.             $SC_prcp3_I112 = prcp3%dim_1%EX
 1049.             $SC_prcp3_I113 = prcp3%dim_1%LB
 1049.             $SC_prcp3_I115 = prcp3%dim_2%SM
 1049.             $SC_prcp3_I114 = prcp3%dim_2%EX
 1049.             $SC_prcp3_I116 = prcp3%dim_2%LB
 1049.             $I_L1049_74 = 0
 1049.             do
 1049.                $I_L1049_48 = 0
 1049. !dir$ ivdep
 1049.                do
 1049.                   (prcp3%base_addr)($SC_prcp3_I113 + $I_L1049_48, $SC_prcp3_I116 + $I_L1049_74, 0) = 0.0
 1049.                   $I_L1049_48 = 1 + $I_L1049_48
 1049.                   if ( $I_L1049_48 >= $F_A44 ) exit
 1049.                enddo
 1049.                $I_L1049_74 = 1 + $I_L1049_74
 1049.                if ( $I_L1049_74 >= $F_A43 ) exit
 1049.             enddo
 1049.          endif
 1050.          $F_A45 = prcpt%dim_2%EX
 1050.          $F_A46 = prcpt%dim_1%EX
 1050.          if ( and( -$F_A46, -$F_A45 ) < 0 ) then
 1050.             $SC_prcpt_I117 = prcpt%dim_1%EX
 1050.             $SC_prcpt_I118 = prcpt%dim_1%LB
 1050.             $SC_prcpt_I120 = prcpt%dim_2%SM
 1050.             $SC_prcpt_I119 = prcpt%dim_2%EX
 1050.             $SC_prcpt_I121 = prcpt%dim_2%LB
 1050.             $I_L1050_76 = 0
 1050.             do
 1050.                $I_L1050_50 = 0
 1050. !dir$ ivdep
 1050.                do
 1050.                   (prcpt%base_addr)($SC_prcpt_I118 + $I_L1050_50, $SC_prcpt_I121 + $I_L1050_76, 0) = 0.0
 1050.                   $I_L1050_50 = 1 + $I_L1050_50
 1050.                   if ( $I_L1050_50 >= $F_A46 ) exit
 1050.                enddo
 1050.                $I_L1050_76 = 1 + $I_L1050_76
 1050.                if ( $I_L1050_76 >= $F_A45 ) exit
 1050.             enddo
 1050.          endif
 1051.          $F_A47 = toplv%dim_2%EX
 1051.          $F_A48 = toplv%dim_1%EX
 1051.          if ( and( -$F_A48, -$F_A47 ) < 0 ) then
 1051.             $SC_toplv_I122 = toplv%dim_1%EX
 1051.             $SC_toplv_I123 = toplv%dim_1%LB
 1051.             $SC_toplv_I125 = toplv%dim_2%SM
 1051.             $SC_toplv_I124 = toplv%dim_2%EX
 1051.             $SC_toplv_I126 = toplv%dim_2%LB
 1051.             $I_L1051_78 = 0
 1051.             do
 1051.                $I_L1051_52 = 0
 1051. !dir$ ivdep
 1051.                do
 1051.                   (toplv%base_addr)($SC_toplv_I123 + $I_L1051_52, $SC_toplv_I126 + $I_L1051_78, 0) = 0.0
 1051.                   $I_L1051_52 = 1 + $I_L1051_52
 1051.                   if ( $I_L1051_52 >= $F_A48 ) exit
 1051.                enddo
 1051.                $I_L1051_78 = 1 + $I_L1051_78
 1051.                if ( $I_L1051_78 >= $F_A47 ) exit
 1051.             enddo
 1051.          endif
 1052.          $F_A49 = botlv%dim_2%EX
 1052.          $F_A50 = botlv%dim_1%EX
 1052.          if ( and( -$F_A50, -$F_A49 ) < 0 ) then
 1052.             $SC_botlv_I127 = botlv%dim_1%EX
 1052.             $SC_botlv_I128 = botlv%dim_1%LB
 1052.             $SC_botlv_I130 = botlv%dim_2%SM
 1052.             $SC_botlv_I129 = botlv%dim_2%EX
 1052.             $SC_botlv_I131 = botlv%dim_2%LB
 1052.             $I_L1052_80 = 0
 1052.             do
 1052.                $I_L1052_54 = 0
 1052. !dir$ ivdep
 1052.                do
 1052.                   (botlv%base_addr)($SC_botlv_I128 + $I_L1052_54, $SC_botlv_I131 + $I_L1052_80, 0) = 0.0
 1052.                   $I_L1052_54 = 1 + $I_L1052_54
 1052.                   if ( $I_L1052_54 >= $F_A50 ) exit
 1052.                enddo
 1052.                $I_L1052_80 = 1 + $I_L1052_80
 1052.                if ( $I_L1052_80 >= $F_A49 ) exit
 1052.             enddo
 1052.          endif
 1052.       endif
 1056.       if ( initlz < 0 ) then
 1058.           _substr(t$234,1,19) = '**(InitCheckfile)**'
 1058.           _substr(t$235,1,40) = 'Read SSib variables from warm-start file'
 1058.          call msgone(  _substr(t$234,1,19),  _substr(t$235,1,40) )
 1060.          $Unit_temp_O3 = nfsibi
 1060.          _uread( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifdy, 0x2000200000000L ), _iotype( todsib, 0x804060300000000L ), _iotype( (&)(ids%base_addr)(+:( 1, ids%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (&)(idc%base_addr)(+:( 1, idc%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
 1061.          $Unit_temp_O4 = nfsibi
 1061.          _uread( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(tm0%base_addr)(+:( tm0%dim_1%LB, -1 + tm0%dim_1%LB + tm0%dim_1%EX, 1 ), +:( tm0%dim_2%LB, -1 + tm0%dim_2%LB + tm0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tmm%base_addr)(+:( tmm%dim_1%LB, -1 + tmm%dim_1%LB + tmm%dim_1%EX, 1 ), +:( tmm%dim_2%LB, -1 + tmm%dim_2%LB + tmm%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
 1062.          $Unit_temp_O5 = nfsibi
 1062.          _uread( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(qm0%base_addr)(+:( qm0%dim_1%LB, -1 + qm0%dim_1%LB + qm0%dim_1%EX, 1 ), +:( qm0%dim_2%LB, -1 + qm0%dim_2%LB + qm0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(qmm%base_addr)(+:( qmm%dim_1%LB, -1 + qmm%dim_1%LB + qmm%dim_1%EX, 1 ), +:( qmm%dim_2%LB, -1 + qmm%dim_2%LB + qmm%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
 1063.          $Unit_temp_O6 = nfsibi
 1063.          _uread( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(td0%base_addr)(+:( td0%dim_1%LB, -1 + td0%dim_1%LB + td0%dim_1%EX, 1 ), +:( td0%dim_2%LB, -1 + td0%dim_2%LB + td0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tdm%base_addr)(+:( tdm%dim_1%LB, -1 + tdm%dim_1%LB + tdm%dim_1%EX, 1 ), +:( tdm%dim_2%LB, -1 + tdm%dim_2%LB + tdm%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
 1064.          $Unit_temp_O7 = nfsibi
 1064.          _uread( _clist( 0, 0, 3, $Unit_temp_O7, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(tg0%base_addr)(+:( tg0%dim_1%LB, -1 + tg0%dim_1%LB + tg0%dim_1%EX, 1 ), +:( tg0%dim_2%LB, -1 + tg0%dim_2%LB + tg0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tgm%base_addr)(+:( tgm%dim_1%LB, -1 + tgm%dim_1%LB + tgm%dim_1%EX, 1 ), +:( tgm%dim_2%LB, -1 + tgm%dim_2%LB + tgm%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
 1065.          $Unit_temp_O8 = nfsibi
 1065.          _uread( _clist( 0, 0, 3, $Unit_temp_O8, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(tc0%base_addr)(+:( tc0%dim_1%LB, -1 + tc0%dim_1%LB + tc0%dim_1%EX, 1 ), +:( tc0%dim_2%LB, -1 + tc0%dim_2%LB + tc0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tcm%base_addr)(+:( tcm%dim_1%LB, -1 + tcm%dim_1%LB + tcm%dim_1%EX, 1 ), +:( tcm%dim_2%LB, -1 + tcm%dim_2%LB + tcm%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
 1066.          $Unit_temp_O9 = nfsibi
 1066.          _uread( _clist( 0, 0, 3, $Unit_temp_O9, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(w0%base_addr)(+:( w0%dim_1%LB, -1 + w0%dim_1%LB + w0%dim_1%EX, 1 ), +:( w0%dim_2%LB, -1 + w0%dim_2%LB + w0%dim_2%EX, 1 ), +:( w0%dim_3%LB, -1 + w0%dim_3%LB + w0%dim_3%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(wm%base_addr)(+:( wm%dim_1%LB, -1 + wm%dim_1%LB + wm%dim_1%EX, 1 ), +:( wm%dim_2%LB, -1 + wm%dim_2%LB + wm%dim_2%EX, 1 ), +:( wm%dim_3%LB, -1 + wm%dim_3%LB + wm%dim_3%EX, 1 ), 0), 0x804060300000000L ) ) )
 1067.          $Unit_temp_O10 = nfsibi
 1067.          _uread( _clist( 0, 0, 3, $Unit_temp_O10, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(capac0%base_addr)(+:( capac0%dim_1%LB, -1 + capac0%dim_1%LB + capac0%dim_1%EX, 1 ), +:( capac0%dim_2%LB, -1 + capac0%dim_2%LB + capac0%dim_2%EX, 1 ), +:( capac0%dim_3%LB, -1 + capac0%dim_3%LB + capac0%dim_3%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(capacm%base_addr)(+:( capacm%dim_1%LB, -1 + capacm%dim_1%LB + capacm%dim_1%EX, 1 ), +:( capacm%dim_2%LB, -1 + capacm%dim_2%LB + capacm%dim_2%EX, 1 ), +:( capacm%dim_3%LB, -1 + capacm%dim_3%LB + capacm%dim_3%EX, 1 ), 0), 0x804060300000000L ) ) )
 1068.          $Unit_temp_O11 = nfsibi
 1068.          _uread( _clist( 0, 0, 3, $Unit_temp_O11, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(ppci%base_addr)(+:( ppci%dim_1%LB, -1 + ppci%dim_1%LB + ppci%dim_1%EX, 1 ), +:( ppci%dim_2%LB, -1 + ppci%dim_2%LB + ppci%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(ppli%base_addr)(+:( ppli%dim_1%LB, -1 + ppli%dim_1%LB + ppli%dim_1%EX, 1 ), +:( ppli%dim_2%LB, -1 + ppli%dim_2%LB + ppli%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
 1069.          $Unit_temp_O12 = nfsibi
 1069.          _uread( _clist( 0, 0, 3, $Unit_temp_O12, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(gl0%base_addr)(+:( gl0%dim_1%LB, -1 + gl0%dim_1%LB + gl0%dim_1%EX, 1 ), +:( gl0%dim_2%LB, -1 + gl0%dim_2%LB + gl0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(zorl%base_addr)(+:( zorl%dim_1%LB, -1 + zorl%dim_1%LB + zorl%dim_1%EX, 1 ), +:( zorl%dim_2%LB, -1 + zorl%dim_2%LB + zorl%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(gtsea%base_addr)(+:( gtsea%dim_1%LB, -1 + gtsea%dim_1%LB + gtsea%dim_1%EX, 1 ), +:( gtsea%dim_2%LB, -1 + gtsea%dim_2%LB + gtsea%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tseam%base_addr)(+:( tseam%dim_1%LB, -1 + tseam%dim_1%LB + tseam%dim_1%EX, 1 ), +:( tseam%dim_2%LB, -1 + tseam%dim_2%LB + tseam%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(qsfc0%base_addr)(+:( qsfc0%dim_1%LB, -1 + qsfc0%dim_1%LB + qsfc0%dim_1%EX, 1 ), +:( qsfc0%dim_2%LB, -1 + qsfc0%dim_2%LB + qsfc0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tsfc0%base_addr)(+:( tsfc0%dim_1%LB, -1 + tsfc0%dim_1%LB + tsfc0%dim_1%EX, 1 ), +:( tsfc0%dim_2%LB, -1 + tsfc0%dim_2%LB + tsfc0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(qsfcm%base_addr)(+:( qsfcm%dim_1%LB, -1 + qsfcm%dim_1%LB + qsfcm%dim_1%EX, 1 ), +:( qsfcm%dim_2%LB, -1 + qsfcm%dim_2%LB + qsfcm%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tsfcm%base_addr)(+:( tsfcm%dim_1%LB, -1 + tsfcm%dim_1%LB + tsfcm%dim_1%EX, 1 ), +:( tsfcm%dim_2%LB, -1 + tsfcm%dim_2%LB + tsfcm%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
 1070.          $Unit_temp_O13 = nfsibi
 1070.          _uread( _clist( 0, 0, 3, $Unit_temp_O13, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(imask%base_addr)(+:( imask%dim_1%LB, -1 + imask%dim_1%LB + imask%dim_1%EX, 1 ), +:( imask%dim_2%LB, -1 + imask%dim_2%LB + imask%dim_2%EX, 1 ), 0), 0x804060200000000L ) ) )
 1072.          $F_A51 = mmlen%dim_2%EX
 1072.          $F_A52 = mmlen%dim_1%EX
 1072.          if ( and( -$F_A52, -$F_A51 ) < 0 ) then
 1072.             $SC_mmlen_I132 = mmlen%dim_1%EX
 1072.             $SC_mmlen_I137 = mmlen%dim_1%LB
 1072.             $SC_mmlen_I138 = mmlen%dim_2%SM
 1072.             $SC_mmlen_I134 = mmlen%dim_2%EX
 1072.             $SC_mmlen_I139 = mmlen%dim_2%LB
 1072.             $SC_gl0_I133 = gl0%dim_1%LB
 1072.             $SC_gl0_I135 = gl0%dim_2%SM
 1072.             $SC_gl0_I136 = gl0%dim_2%LB
 1072.             $I_L1072_82 = 0
 1072.             do
 1072.                $I_L1072_56 = 0
 1072. !dir$ ivdep
 1072.                do
 1072.                   (mmlen%base_addr)($SC_mmlen_I137 + $I_L1072_56, $SC_mmlen_I139 + $I_L1072_82, 0) = (gl0%base_addr)($SC_gl0_I133 + $I_L1072_56, $SC_gl0_I136 + $I_L1072_82, 0)
 1072.                   $I_L1072_56 = 1 + $I_L1072_56
 1072.                   if ( $I_L1072_56 >= $F_A52 ) exit
 1072.                enddo
 1072.                $I_L1072_82 = 1 + $I_L1072_82
 1072.                if ( $I_L1072_82 >= $F_A51 ) exit
 1072.             enddo
 1072.          endif
 1073.          t$231 = nfsibi
 1073.          t$236 = __rewf( t$231, 0, 0, 0x100000000000000L, 0, 0 )
 1076.          t$238 = 0
 1076.          t$241 = 0
 1076.          if ( idate%header%a_contig == 1 ) then
 1076. !dir$ suppress (idate%base_addr)(1, 0)
 1076.             t$237 = loc( (idate%base_addr)(1, 0) )
 1076.          else
 1076.             t$238 = idate%dim_1%EX
 1076.             t$241 = int( _alloc( max( 0, 4 * max( 0, idate%dim_1%EX ) ) ), 8 )
 1076.             $F_A53 = idate%dim_1%EX
 1076.             if ( idate%dim_1%EX > 0 ) then
 1076.                $SC_idate_I141 = idate%dim_1%SM
 1076.                $SC_idate_I140 = idate%dim_1%EX
 1076.                $SC_idate_I142 = idate%dim_1%LB
 1076.                $I_L1076_58 = 0
 1076. !dir$ ivdep
 1076.                do
 1076.                   t$240(1 + $I_L1076_58) = (idate%base_addr)(1 + $I_L1076_58, 0)
 1076.                   $I_L1076_58 = 1 + $I_L1076_58
 1076.                   if ( $I_L1076_58 >= $F_A53 ) exit
 1076.                enddo
 1076.             endif
 1076. !dir$ suppress t$240
 1076.             t$237 = loc( t$240 )
 1076.          endif
 1076.          t$243 = 0
 1076.          t$246 = 0
 1076.          if ( idatec%header%a_contig == 1 ) then
 1076. !dir$ suppress (idatec%base_addr)(1, 0)
 1076.             t$242 = loc( (idatec%base_addr)(1, 0) )
 1076.          else
 1076.             t$243 = idatec%dim_1%EX
 1076.             t$246 = int( _alloc( max( 0, 4 * max( 0, idatec%dim_1%EX ) ) ), 8 )
 1076.             $F_A54 = idatec%dim_1%EX
 1076.             if ( idatec%dim_1%EX > 0 ) then
 1076.                $SC_idatec_I144 = idatec%dim_1%SM
 1076.                $SC_idatec_I143 = idatec%dim_1%EX
 1076.                $SC_idatec_I145 = idatec%dim_1%LB
 1076.                $I_L1076_60 = 0
 1076. !dir$ ivdep
 1076.                do
 1076.                   t$245(1 + $I_L1076_60) = (idatec%base_addr)(1 + $I_L1076_60, 0)
 1076.                   $I_L1076_60 = 1 + $I_L1076_60
 1076.                   if ( $I_L1076_60 >= $F_A54 ) exit
 1076.                enddo
 1076.             endif
 1076. !dir$ suppress t$245
 1076.             t$242 = loc( t$245 )
 1076.          endif
 1075.          t$247 = ibmaxperjb
 1075.          call getsbc( imax, jmax, kmax, (albvisdiff%base_addr)(albvisdiff%dim_1%LB, albvisdiff%dim_2%LB, 0), (gtsea%base_addr)(gtsea%dim_1%LB, gtsea%dim_2%LB, 0), (soilm%base_addr)(soilm%dim_1%LB, soilm%dim_2%LB, 0), (sheleg%base_addr)(sheleg%dim_1%LB, sheleg%dim_2%LB, 0), (o3mix%base_addr)(o3mix%dim_1%LB, o3mix%dim_2%LB, o3mix%dim_3%LB, 0), ifday, tod, t$237, t$242, ifalb, ifsst, ifslm, ifsnw, ifozone, sstlag, intsst, fint, tice, yrl, monl(1), ibmax, jbmax, t$247 )
 1076.          if ( idatec%header%a_contig /= 1 ) then
 1076.             _free( t$246 )
 1076.          endif
 1076.          if ( idate%header%a_contig /= 1 ) then
 1076.             _free( t$241 )
 1076.          endif
 1081.          if ( jbmax > 0 ) then
 1086.             $SC_ssib_I7 = ssib%dim_1%EX
 1086.             $SC_ssib_I8 = ssib%dim_1%LB
 1086.             $SC_ssib_I10 = ssib%dim_2%SM
 1086.             $SC_ssib_I9 = ssib%dim_2%EX
 1086.             $SC_ssib_I11 = ssib%dim_2%LB
 1083.             $SC_ibmaxperjb_I1 = ibmaxperjb%dim_1%SM
 1083.             $SC_ibmaxperjb_I0 = ibmaxperjb%dim_1%EX
 1084.             $SC_imask_I2 = imask%dim_1%EX
 1084.             $SC_imask_I3 = imask%dim_1%LB
 1084.             $SC_imask_I5 = imask%dim_2%SM
 1084.             $SC_imask_I4 = imask%dim_2%EX
 1084.             $SC_imask_I6 = imask%dim_2%LB
 1092.             $SC_wm_I20 = wm%dim_1%EX
 1092.             $SC_wm_I21 = wm%dim_1%LB
 1092.             $SC_wm_I23 = wm%dim_2%SM
 1092.             $SC_wm_I22 = wm%dim_2%EX
 1092.             $SC_wm_I24 = wm%dim_2%LB
 1092.             $SC_wm_I26 = wm%dim_3%SM
 1092.             $SC_wm_I25 = wm%dim_3%EX
 1092.             $SC_wm_I27 = wm%dim_3%LB
 1087.             $SC_w0_I12 = w0%dim_1%EX
 1087.             $SC_w0_I13 = w0%dim_1%LB
 1087.             $SC_w0_I15 = w0%dim_2%SM
 1087.             $SC_w0_I14 = w0%dim_2%EX
 1087.             $SC_w0_I16 = w0%dim_2%LB
 1087.             $SC_w0_I18 = w0%dim_3%SM
 1087.             $SC_w0_I17 = w0%dim_3%EX
 1087.             $SC_w0_I19 = w0%dim_3%LB
 1081.             $I_L1081_62 = 0
 1081.             do
 1082.                $ncount_S3 = 0
 1083.                $t_S1 = (ibmaxperjb%base_addr)(1 + $I_L1081_62, 0)
 1083.                if ( $t_S1 > 0 ) then
 1083.                   $I_L1083_36 = 0
 1083. !dir$ ivdep
 1083.                   do
 1084.                      if ( (imask%base_addr)(1 + $I_L1083_36, 1 + $I_L1081_62, 0) > 0 ) then
 1085.                         $ncount_S3 = 1 + $ncount_S3
 1086.                         (ssib%base_addr)($ncount_S3, 1 + $I_L1081_62, 0) = 0.0
 1087.                         if ( (w0%base_addr)($ncount_S3, 1, 1 + $I_L1081_62, 0) < 0.0 ) then
 1088.                            (ssib%base_addr)($ncount_S3, 1 + $I_L1081_62, 0) = abs( (w0%base_addr)($ncount_S3, 1, 1 + $I_L1081_62, 0) )
 1089.                            (w0%base_addr)($ncount_S3, 1, 1 + $I_L1081_62, 0) = abs( (w0%base_addr)($ncount_S3, 1, 1 + $I_L1081_62, 0) )
 1090.                            (w0%base_addr)($ncount_S3, 2, 1 + $I_L1081_62, 0) = abs( (w0%base_addr)($ncount_S3, 2, 1 + $I_L1081_62, 0) )
 1091.                            (w0%base_addr)($ncount_S3, 3, 1 + $I_L1081_62, 0) = abs( (w0%base_addr)($ncount_S3, 3, 1 + $I_L1081_62, 0) )
 1092.                            (wm%base_addr)($ncount_S3, 1, 1 + $I_L1081_62, 0) = abs( (wm%base_addr)($ncount_S3, 1, 1 + $I_L1081_62, 0) )
 1093.                            (wm%base_addr)($ncount_S3, 2, 1 + $I_L1081_62, 0) = abs( (wm%base_addr)($ncount_S3, 2, 1 + $I_L1081_62, 0) )
 1094.                            (wm%base_addr)($ncount_S3, 3, 1 + $I_L1081_62, 0) = abs( (wm%base_addr)($ncount_S3, 3, 1 + $I_L1081_62, 0) )
 1094.                         endif
 1094.                      endif
 1097.                      $I_L1083_36 = 1 + $I_L1083_36
 1096.                      if ( $I_L1083_36 >= $t_S1 ) exit
 1096.                   enddo
 1096.                endif
 1098.                $I_L1081_62 = 1 + $I_L1081_62
 1097.                if ( $I_L1081_62 >= jbmax ) exit
 1097.             enddo
 1097.          endif
 1099.          if ( nfctrl(5) > 0 ) then
 1099.             $Unit_temp_O14 = nfprt
 1099.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O14, Null_Arg, Null_Arg, t$20,  _substr(t$19,1,120), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifdy, 0x2000200000000L ), _iotype( todsib, 0x804060300000000L ), _iotype( (&)(ids%base_addr)(+:( 1, ids%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (&)(idc%base_addr)(+:( 1, idc%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
 1099.          endif
 1099.       endif
 1107.       return
 1107.       end
 1107.       
 1111.       
 1111.       subroutine initsurftemp( jbmax, ibmaxperjb )
 1111.       ibmaxperjb%dim_1%LB = 1
 1121.       $F_A33 = capacm%dim_3%EX
 1121.       $F_A34 = capacm%dim_2%EX
 1121.       $F_A35 = capacm%dim_1%EX
 1121.       if ( and( and( -$F_A34, -$F_A33 ), -$F_A35 ) < 0 ) then
 1121.          $SC_capacm_I54 = capacm%dim_1%EX
 1121.          $SC_capacm_I55 = capacm%dim_1%LB
 1121.          $SC_capacm_I57 = capacm%dim_2%SM
 1121.          $SC_capacm_I56 = capacm%dim_2%EX
 1121.          $SC_capacm_I58 = capacm%dim_2%LB
 1121.          $SC_capacm_I60 = capacm%dim_3%SM
 1121.          $SC_capacm_I59 = capacm%dim_3%EX
 1121.          $SC_capacm_I61 = capacm%dim_3%LB
 1121.          $I_L1121_28 = 0
 1121.          do
 1121.             $I_L1121_24 = 0
 1121.             do
 1121.                $I_L1121_18 = 0
 1121. !dir$ ivdep
 1121.                do
 1121.                   (capacm%base_addr)($SC_capacm_I55 + $I_L1121_18, $SC_capacm_I58 + $I_L1121_24, $SC_capacm_I61 + $I_L1121_28, 0) = 0.0
 1121.                   $I_L1121_18 = 1 + $I_L1121_18
 1121.                   if ( $I_L1121_18 >= $F_A35 ) exit
 1121.                enddo
 1121.                $I_L1121_24 = 1 + $I_L1121_24
 1121.                if ( $I_L1121_24 >= $F_A34 ) exit
 1121.             enddo
 1121.             $I_L1121_28 = 1 + $I_L1121_28
 1121.             if ( $I_L1121_28 >= $F_A33 ) exit
 1121.          enddo
 1121.       endif
 1122.       $F_A36 = capac0%dim_3%EX
 1122.       $F_A37 = capac0%dim_2%EX
 1122.       $F_A38 = capac0%dim_1%EX
 1122.       if ( and( and( -$F_A37, -$F_A36 ), -$F_A38 ) < 0 ) then
 1122.          $SC_capac0_I62 = capac0%dim_1%EX
 1122.          $SC_capac0_I63 = capac0%dim_1%LB
 1122.          $SC_capac0_I65 = capac0%dim_2%SM
 1122.          $SC_capac0_I64 = capac0%dim_2%EX
 1122.          $SC_capac0_I66 = capac0%dim_2%LB
 1122.          $SC_capac0_I68 = capac0%dim_3%SM
 1122.          $SC_capac0_I67 = capac0%dim_3%EX
 1122.          $SC_capac0_I69 = capac0%dim_3%LB
 1122.          $I_L1122_30 = 0
 1122.          do
 1122.             $I_L1122_26 = 0
 1122.             do
 1122.                $I_L1122_20 = 0
 1122. !dir$ ivdep
 1122.                do
 1122.                   (capac0%base_addr)($SC_capac0_I63 + $I_L1122_20, $SC_capac0_I66 + $I_L1122_26, $SC_capac0_I69 + $I_L1122_30, 0) = 0.0
 1122.                   $I_L1122_20 = 1 + $I_L1122_20
 1122.                   if ( $I_L1122_20 >= $F_A38 ) exit
 1122.                enddo
 1122.                $I_L1122_26 = 1 + $I_L1122_26
 1122.                if ( $I_L1122_26 >= $F_A37 ) exit
 1122.             enddo
 1122.             $I_L1122_30 = 1 + $I_L1122_30
 1122.             if ( $I_L1122_30 >= $F_A36 ) exit
 1122.          enddo
 1122.       endif
 1123.       if ( jbmax > 0 ) then
 1132.          $SC_tgm_I28 = tgm%dim_1%EX
 1132.          $SC_tgm_I29 = tgm%dim_1%LB
 1132.          $SC_tgm_I31 = tgm%dim_2%SM
 1132.          $SC_tgm_I30 = tgm%dim_2%EX
 1132.          $SC_tgm_I32 = tgm%dim_2%LB
 1131.          $SC_tg0_I33 = tg0%dim_1%EX
 1131.          $SC_tg0_I34 = tg0%dim_1%LB
 1131.          $SC_tg0_I36 = tg0%dim_2%SM
 1131.          $SC_tg0_I35 = tg0%dim_2%EX
 1131.          $SC_tg0_I37 = tg0%dim_2%LB
 1128.          $SC_sheleg_I7 = sheleg%dim_1%EX
 1128.          $SC_sheleg_I8 = sheleg%dim_1%LB
 1128.          $SC_sheleg_I10 = sheleg%dim_2%SM
 1128.          $SC_sheleg_I9 = sheleg%dim_2%EX
 1128.          $SC_sheleg_I11 = sheleg%dim_2%LB
 1126.          $SC_imask_I2 = imask%dim_1%EX
 1126.          $SC_imask_I3 = imask%dim_1%LB
 1126.          $SC_imask_I5 = imask%dim_2%SM
 1126.          $SC_imask_I4 = imask%dim_2%EX
 1126.          $SC_imask_I6 = imask%dim_2%LB
 1125.          $SC_ibmaxperjb_I1 = ibmaxperjb%dim_1%SM
 1125.          $SC_ibmaxperjb_I0 = ibmaxperjb%dim_1%EX
 1129.          $SC_capac0_I12 = capac0%dim_1%EX
 1129.          $SC_capac0_I13 = capac0%dim_1%LB
 1129.          $SC_capac0_I15 = capac0%dim_2%SM
 1129.          $SC_capac0_I14 = capac0%dim_2%EX
 1129.          $SC_capac0_I16 = capac0%dim_2%LB
 1129.          $SC_capac0_I18 = capac0%dim_3%SM
 1129.          $SC_capac0_I17 = capac0%dim_3%EX
 1129.          $SC_capac0_I19 = capac0%dim_3%LB
 1130.          $SC_capacm_I20 = capacm%dim_1%EX
 1130.          $SC_capacm_I21 = capacm%dim_1%LB
 1130.          $SC_capacm_I23 = capacm%dim_2%SM
 1130.          $SC_capacm_I22 = capacm%dim_2%EX
 1130.          $SC_capacm_I24 = capacm%dim_2%LB
 1130.          $SC_capacm_I26 = capacm%dim_3%SM
 1130.          $SC_capacm_I25 = capacm%dim_3%EX
 1130.          $SC_capacm_I27 = capacm%dim_3%LB
 1123.          $I_L1123_22 = 0
 1123.          do
 1124.             $ncount_S3 = 0
 1125.             $t_S1 = (ibmaxperjb%base_addr)(1 + $I_L1123_22, 0)
 1125.             if ( $t_S1 > 0 ) then
 1125.                $I_L1125_16 = 0
 1125. !dir$ ivdep
 1125.                do
 1126.                   if ( (imask%base_addr)(1 + $I_L1125_16, 1 + $I_L1123_22, 0) > 0 ) then
 1127.                      $ncount_S3 = 1 + $ncount_S3
 1128.                      if ( (sheleg%base_addr)(1 + $I_L1125_16, 1 + $I_L1123_22, 0) > 0.0 ) then
 1129.                         (capac0%base_addr)($ncount_S3, 2, 1 + $I_L1123_22, 0) = ( 1.0e-3 * (sheleg%base_addr)(1 + $I_L1125_16, 1 + $I_L1123_22, 0) )
 1130.                         (capacm%base_addr)($ncount_S3, 2, 1 + $I_L1123_22, 0) = ( 1.0e-3 * (sheleg%base_addr)(1 + $I_L1125_16, 1 + $I_L1123_22, 0) )
 1131.                         (tg0%base_addr)($ncount_S3, 1 + $I_L1123_22, 0) = min( 273.15000000000003, (tg0%base_addr)($ncount_S3, 1 + $I_L1123_22, 0) )
 1132.                         (tgm%base_addr)($ncount_S3, 1 + $I_L1123_22, 0) = min( 273.15000000000003, (tgm%base_addr)($ncount_S3, 1 + $I_L1123_22, 0) )
 1132.                      endif
 1132.                   endif
 1135.                   $I_L1125_16 = 1 + $I_L1125_16
 1134.                   if ( $I_L1125_16 >= $t_S1 ) exit
 1134.                enddo
 1134.             endif
 1136.             $I_L1123_22 = 1 + $I_L1123_22
 1135.             if ( $I_L1123_22 >= jbmax ) exit
 1135.          enddo
 1135.       endif
 1137.       return
 1137.       end
 1137.       
 1166.       
 1166.       subroutine initgetsbc( ifday, tod, idate, idatec, ibmax, jbmax, kmax, ibmaxperjb )
 1141.       ibmaxperjb%dim_1%LB = 1
 1156.       $t_S0 = willgetsbc( idate(1), tod, fint )
 1156.       if ( $t_S0 /= .false. ) then
 1158.          t$261 = ibmaxperjb
 1158.          call getsbc( imax, jmax, kmax, (albvisdiff%base_addr)(albvisdiff%dim_1%LB, albvisdiff%dim_2%LB, 0), (gtsea%base_addr)(gtsea%dim_1%LB, gtsea%dim_2%LB, 0), (soilm%base_addr)(soilm%dim_1%LB, soilm%dim_2%LB, 0), (sheleg%base_addr)(sheleg%dim_1%LB, sheleg%dim_2%LB, 0), (o3mix%base_addr)(o3mix%dim_1%LB, o3mix%dim_2%LB, o3mix%dim_3%LB, 0), ifday, tod, idate(1), idatec(1), ifalb, ifsst, ifslm, ifsnw, ifozone, sstlag, intsst, fint, tice, yrl, monl(1), ibmax, jbmax, t$261 )
 1158.       endif
 1166.       return
 1166.       end
 1166.       
 1439.       
 1439.       subroutine read_gl_sm_bc( imax, jmax, jbmax, ibmaxperjb, record_type, fnamesoiltype, fnamevegtype, fnamesoilmoist, imask_in )
 1170.       ibmaxperjb%dim_1%LB = 1
 1170.       t$83 = _len( record_type )
 1170.       t$84 = _len( fnamesoiltype )
 1170.       t$85 = _len( fnamevegtype )
 1170.       t$86 = _len( fnamesoilmoist )
 1170.       t$23 = imax
 1170.       t$24 = jmax
 1189.       t$87 = _zla( 0, imax )
 1170.       t$88 = _zla( 0, imax )
 1189.       t$89 = _zla( 0, jmax )
 1170.       t$90 = _zla( 0, imax ) * _zla( 0, jmax )
 1170.       t$91 = _zla( 0, imax ) * _zla( 0, jmax )
 1170.       t$92 = 5 * _zla( 0, imax ) * _zla( 0, jmax )
 1196.       t$95 = 40 * _zla( 0, imax ) * _zla( 0, jmax )
 1170.       t$96 = 8 * _zla( 0, imax ) * _zla( 0, jmax )
 1197.       t$97 = 8 * ( 7 + 40 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
 1197.       t$99 = t$97 + 64 * _zla( 0, imax ) * _zla( 0, jmax )
 1198.       t$100 = 8 * ( 7 + t$97 + 64 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
 1198.       t$102 = t$100 + 8 * _zla( 0, imax ) * _zla( 0, jmax )
 1195.       t$103 = 8 * ( 7 + t$100 + 8 * _zla( 0, imax ) * _zla( 0, jmax ) ) / 8
 1195.       t$105 = t$103 + 40 * _zla( 0, imax ) * _zla( 0, jmax )
 1170.       t$93 = int( _alloc( t$103 + 40 * _zla( 0, imax ) * _zla( 0, jmax ) ), 8 )
 1196.       t$94 = t$93
 1197.       t$98 = t$97 + t$93
 1198.       t$101 = t$100 + t$93
 1195.       t$104 = t$103 + t$93
 1210.        _substr(t$262,1,19) = '**(read_gl_sm_bc)**'
 1210.       t$263 = 21 + ( _ltrim(  _substr(fnamesoiltype,1,_len( fnamesoiltype )) ) )
 1210.       t$265 = int( _alloc( _zla( 0, t$263 ) ), 8 )
 1210.        _substr(t$264,1,_zla( 0, t$263 )) = //( 'Opening GL soil file=',  _substr(fnamesoiltype,1,_ltrim(  _substr(fnamesoiltype,1,_len( fnamesoiltype )) )) )
 1210.       call msgone(  _substr(t$262,1,19),  _substr(t$264,1,_zla( 0, t$263 )) )
 1210.       _free( t$265 )
 1211.       $F_A33 = jmax
 1211.       $F_A34 = imax
 1211.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
 1211.          $I_L1211_220 = 0
 1211.          do
 1211.             $I_L1211_208 = 0
 1211.             do
 1211.                $I_L1211_180 = 0
 1211. !dir$ ivdep
 1211.                do
 1211.                   fracocc(1 + $I_L1211_180, 1 + $I_L1211_208, 1 + $I_L1211_220) = 0.0
 1211.                   $I_L1211_180 = 1 + $I_L1211_180
 1211.                   if ( $I_L1211_180 >= $F_A34 ) exit
 1211.                enddo
 1211.                $I_L1211_208 = 1 + $I_L1211_208
 1211.                if ( $I_L1211_208 >= $F_A33 ) exit
 1211.             enddo
 1211.             $I_L1211_220 = 1 + $I_L1211_220
 1211.             if ( $I_L1211_220 >= 5 ) exit
 1211.          enddo
 1211.       endif
 1212.       $F_A35 = jmax
 1212.       $F_A36 = imax
 1212.       if ( and( -$F_A36, -$F_A35 ) < 0 ) then
 1212.          $I_L1212_222 = 0
 1212.          do
 1212.             $I_L1212_210 = 0
 1212.             do
 1212.                $I_L1212_182 = 0
 1212. !dir$ ivdep
 1212.                do
 1212.                   glsm(1 + $I_L1212_182, 1 + $I_L1212_210, 1 + $I_L1212_222) = 0.0
 1212.                   $I_L1212_182 = 1 + $I_L1212_182
 1212.                   if ( $I_L1212_182 >= $F_A36 ) exit
 1212.                enddo
 1212.                $I_L1212_210 = 1 + $I_L1212_210
 1212.                if ( $I_L1212_210 >= $F_A35 ) exit
 1212.             enddo
 1212.             $I_L1212_222 = 1 + $I_L1212_222
 1212.             if ( $I_L1212_222 >= 8 ) exit
 1212.          enddo
 1212.       endif
 1213.       $F_A37 = jmax
 1213.       $F_A38 = imax
 1213.       if ( and( -$F_A38, -$F_A37 ) < 0 ) then
 1213.          $I_L1213_212 = 0
 1213.          do
 1213.             $I_L1213_184 = 0
 1213. !dir$ ivdep
 1213.             do
 1213.                soiltype(1 + $I_L1213_184, 1 + $I_L1213_212) = 0.0
 1213.                $I_L1213_184 = 1 + $I_L1213_184
 1213.                if ( $I_L1213_184 >= $F_A38 ) exit
 1213.             enddo
 1213.             $I_L1213_212 = 1 + $I_L1213_212
 1213.             if ( $I_L1213_212 >= $F_A37 ) exit
 1213.          enddo
 1213.       endif
 1214.       if (  _substr(record_type,1,_len( record_type )) == 'seq' ) then
 1217.          ierr = 0
 1216.          t$267 = nfsoiltp
 1217.           _substr(t$268,1,4) = 'OLD'
 1216.           _substr(t$269,1,10) = 'SEQUENTIAL'
 1216.           _substr(t$270,1,11) = 'UNFORMATTED'
 1217.           _substr(t$271,1,4) = 'READ'
 1216.          t$272(1) = 0x100000000000000L
 1216. !dir$ suppress t$267
 1216.          t$272(2) = int( loc( t$267 ), 8 )
 1216. !dir$ suppress ierr
 1216.          t$272(3) = int( loc( ierr ), 8 )
 1216.          t$272(4) = 0
 1216. !dir$ suppress  _substr(fnamesoiltype,1,_ltrim(  _substr(fnamesoiltype,1,max( 0, t$84 )) ))
 1216.          t$272(5) = int( loc(  _substr(fnamesoiltype,1,_ltrim(  _substr(fnamesoiltype,1,_len( fnamesoiltype )) )) ), 8 )
 1216.          t$272(6) = _ltrim(  _substr(fnamesoiltype,1,_len( fnamesoiltype )) )
 1216. !dir$ suppress  _substr(t$268,1,3)
 1216.          t$272(7) = int( loc(  _substr(t$268,1,3) ), 8 )
 1216.          t$272(8) = 3
 1216. !dir$ suppress  _substr(t$269,1,10)
 1216.          t$272(9) = int( loc(  _substr(t$269,1,10) ), 8 )
 1216.          t$272(10) = 10
 1216. !dir$ suppress  _substr(t$270,1,11)
 1216.          t$272(11) = int( loc(  _substr(t$270,1,11) ), 8 )
 1216.          t$272(12) = 11
 1216.          t$272(13) = 0
 1216.          t$272(14) = 0
 1216.          t$272(16) = 0
 1216. !dir$ suppress  _substr(t$271,1,4)
 1216.          t$272(18) = int( loc(  _substr(t$271,1,4) ), 8 )
 1216.          t$272(19) = 4
 1216.          t$272(20) = 0
 1216.          t$272(22) = 0
 1216.          t$272(24) = 0x2000200000000L
 1216.          t$272(25) = 0
 1216.          t$272(27) = 0
 1216.          t$272(29) = 0
 1216.          t$272(31) = 0
 1216.          t$272(33) = 0
 1216.          t$272(35) = 0
 1216.          t$266 = _open( t$272 )
 1218.          if ( ierr /= 0 ) then
 1219.             $Unit_temp_O0 = nfprt
 1219.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamesoiltype,1,_ltrim(  _substr(fnamesoiltype,1,_len( fnamesoiltype )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 1221.              _substr(t$273,1,11) = '**(ERROR)**'
 1221.             call _stop(  _substr(t$273,1,11) )
 1221.          else
 1223.             $Unit_temp_O1 = nfsoiltp
 1223.             _uread( _clist( 0, 0, 2, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1223.             if ( jmax > 0 ) then
 1223.                if ( imax > 0 ) then
 1223.                   $I_L1223_188 = 0
 1223.                   do
 1223.                      $I_L1223_154 = 0
 1223.                      do
 1223.                         if ( ( ( 1 + $I_L1223_154 ) <= 0 .or. ( 1 + $I_L1223_154 ) > t$23 ) /= .false. ) then
 1223.                             _substr(t$281,1,18) = 'FieldsPhysics.f90'
 1223.                             _substr(t$282,1,9) = 'SOILTYPE'
 1223.                            t$267 = 1 + $I_L1223_154
 1223.                            call _bounds_error(  _substr(t$281,1,18), 1223,  _substr(t$282,1,9), 1, 1, t$23, t$267, t$280 )
 1223.                         endif
 1223.                         if ( ( ( 1 + $I_L1223_188 ) <= 0 .or. ( 1 + $I_L1223_188 ) > t$24 ) /= .false. ) then
 1223.                             _substr(t$284,1,18) = 'FieldsPhysics.f90'
 1223.                             _substr(t$285,1,9) = 'SOILTYPE'
 1223.                            t$286 = 1 + $I_L1223_188
 1223.                            call _bounds_error(  _substr(t$284,1,18), 1223,  _substr(t$285,1,9), 2, 1, t$24, t$286, t$283 )
 1223.                         endif
 1223.                         $Unit_temp_O2 = nfsoiltp
 1223.                         _uread( _clist( 0, 0, 0, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O19, 0x804060300000000L ) ) )
 1223.                         soiltype(1 + $I_L1223_154, 1 + $I_L1223_188) = $IOitem_O19
 1223.                         $I_L1223_154 = 1 + $I_L1223_154
 1223.                         if ( $I_L1223_154 >= imax ) exit
 1223.                      enddo
 1223.                      $I_L1223_188 = 1 + $I_L1223_188
 1223.                      if ( $I_L1223_188 >= jmax ) exit
 1223.                   enddo
 1223.                endif
 1223.             endif
 1223.             $Unit_temp_O3 = nfsoiltp
 1223.             _uread( _clist( 0, 0, 1, $Unit_temp_O3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1225.             if ( reducedgrid /= .false. ) then
 1226.                call nearestijtoibjb_r2d( soiltype(1, 1), (soil_type%base_addr)(soil_type%dim_1%LB, soil_type%dim_2%LB, 0) )
 1226.             else
 1228. !dir$ suppress soiltype(1, 1)
 1228.                t$287 = $_StaticDV_P0
 1228.                t$287%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( soiltype(1, 1) ) )
 1228.                t$287%header%el_len = 64
 1228.                t$287%header%assoc = 1
 1228.                t$287%header%ptr_alloc = 0
 1228.                t$287%header%p_or_a = 0
 1228.                t$287%header%a_contig = 1
 1228.                t$287%header%n_dim = 2
 1228.                t$287%header%orig_base = 0
 1228.                t$287%header%orig_size = 0
 1228.                t$287%header%n_codim = 0
 1228.                t$287%header%dv_versn = 2
 1228.                t$287%header%dv_smunit = 64
 1228.                t$287%header%d_type = 0
 1228.                t$287%header%n_params = 0
 1228.                t$287%header%d_type_idx = 13
 1228.                t$287%dim_1%LB = 1
 1228.                t$287%dim_1%EX = _zla( 0, imax )
 1228.                t$287%dim_1%SM = 1
 1228.                t$287%dim_2%LB = 1
 1228.                t$287%dim_2%EX = _zla( 0, jmax )
 1228.                t$287%dim_2%SM = _zla( 0, imax )
 1228.                t$288 = soil_type
 1228.                call ijtoibjb_r( t$287, t$288 )
 1228.             endif
 1231.             t$267 = nfsoiltp
 1231.             t$290(1) = 0x100000000000000L
 1231. !dir$ suppress t$267
 1231.             t$290(2) = int( loc( t$267 ), 8 )
 1231.             t$290(3) = 0
 1231.             t$290(4) = 0
 1231.             t$290(5) = 0
 1231.             t$290(7) = 0
 1231.             t$290(8) = 0
 1231.             t$289 = _close( t$290 )
 1231.             goto 10
 1231.          endif
 1233.       else if (  _substr(record_type,1,_len( record_type )) == 'vfm' ) then
 1236.          ierr = 0
 1235.          t$286 = nfsoiltp
 1236.           _substr(t$292,1,4) = 'OLD'
 1235.           _substr(t$293,1,10) = 'SEQUENTIAL'
 1235.           _substr(t$294,1,9) = 'FORMATTED'
 1236.           _substr(t$295,1,4) = 'READ'
 1235.          t$296(1) = 0x100000000000000L
 1235. !dir$ suppress t$286
 1235.          t$296(2) = int( loc( t$286 ), 8 )
 1235. !dir$ suppress ierr
 1235.          t$296(3) = int( loc( ierr ), 8 )
 1235.          t$296(4) = 0
 1235. !dir$ suppress  _substr(fnamesoiltype,1,_ltrim(  _substr(fnamesoiltype,1,max( 0, t$84 )) ))
 1235.          t$296(5) = int( loc(  _substr(fnamesoiltype,1,_ltrim(  _substr(fnamesoiltype,1,_len( fnamesoiltype )) )) ), 8 )
 1235.          t$296(6) = _ltrim(  _substr(fnamesoiltype,1,_len( fnamesoiltype )) )
 1235. !dir$ suppress  _substr(t$292,1,3)
 1235.          t$296(7) = int( loc(  _substr(t$292,1,3) ), 8 )
 1235.          t$296(8) = 3
 1235. !dir$ suppress  _substr(t$293,1,10)
 1235.          t$296(9) = int( loc(  _substr(t$293,1,10) ), 8 )
 1235.          t$296(10) = 10
 1235. !dir$ suppress  _substr(t$294,1,9)
 1235.          t$296(11) = int( loc(  _substr(t$294,1,9) ), 8 )
 1235.          t$296(12) = 9
 1235.          t$296(13) = 0
 1235.          t$296(14) = 0
 1235.          t$296(16) = 0
 1235. !dir$ suppress  _substr(t$295,1,4)
 1235.          t$296(18) = int( loc(  _substr(t$295,1,4) ), 8 )
 1235.          t$296(19) = 4
 1235.          t$296(20) = 0
 1235.          t$296(22) = 0
 1235.          t$296(24) = 0x2000200000000L
 1235.          t$296(25) = 0
 1235.          t$296(27) = 0
 1235.          t$296(29) = 0
 1235.          t$296(31) = 0
 1235.          t$296(33) = 0
 1235.          t$296(35) = 0
 1235.          t$291 = _open( t$296 )
 1237.          if ( ierr /= 0 ) then
 1238.             $Unit_temp_O4 = nfprt
 1238.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, t$30,  _substr(t$29,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamesoiltype,1,_ltrim(  _substr(fnamesoiltype,1,_len( fnamesoiltype )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 1240.              _substr(t$297,1,11) = '**(ERROR)**'
 1240.             call _stop(  _substr(t$297,1,11) )
 1240.          else
 1243.             t$298 = imax * jmax
 1243.              _substr(t$299,1,3) = 'LIN'
 1243.             call vfirec( nfsoiltp, soiltype(1, 1), t$298,  _substr(t$299,1,3) )
 1245.             if ( imax > 0 ) then
 1246.                if ( jmax > 0 ) then
 1246.                   $I_L1246_186 = 0
 1246.                   do
 1245.                      $I_L1245_152 = 0
 1245. !dir$ ivdep
 1245.                      do
 1247.                         soiltype(1 + $I_L1245_152, 1 + $I_L1246_186) = real( int( 1.0000000000000001e-1 + soiltype(1 + $I_L1245_152, 1 + $I_L1246_186) ), 8 )
 1249.                         $I_L1245_152 = 1 + $I_L1245_152
 1246.                         if ( $I_L1245_152 >= imax ) exit
 1246.                      enddo
 1248.                      $I_L1246_186 = 1 + $I_L1246_186
 1248.                      if ( $I_L1246_186 >= jmax ) exit
 1248.                   enddo
 1248.                endif
 1248.             endif
 1251.             if ( reducedgrid /= .false. ) then
 1252.                call nearestijtoibjb_r2d( soiltype(1, 1), (soil_type%base_addr)(soil_type%dim_1%LB, soil_type%dim_2%LB, 0) )
 1252.             else
 1254. !dir$ suppress soiltype(1, 1)
 1254.                t$306 = $_StaticDV_P1
 1254.                t$306%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( soiltype(1, 1) ) )
 1254.                t$306%header%el_len = 64
 1254.                t$306%header%assoc = 1
 1254.                t$306%header%ptr_alloc = 0
 1254.                t$306%header%p_or_a = 0
 1254.                t$306%header%a_contig = 1
 1254.                t$306%header%n_dim = 2
 1254.                t$306%header%orig_base = 0
 1254.                t$306%header%orig_size = 0
 1254.                t$306%header%n_codim = 0
 1254.                t$306%header%dv_versn = 2
 1254.                t$306%header%dv_smunit = 64
 1254.                t$306%header%d_type = 0
 1254.                t$306%header%n_params = 0
 1254.                t$306%header%d_type_idx = 13
 1254.                t$306%dim_1%LB = 1
 1254.                t$306%dim_1%EX = _zla( 0, imax )
 1254.                t$306%dim_1%SM = 1
 1254.                t$306%dim_2%LB = 1
 1254.                t$306%dim_2%EX = _zla( 0, jmax )
 1254.                t$306%dim_2%SM = _zla( 0, imax )
 1254.                t$307 = soil_type
 1254.                call ijtoibjb_r( t$306, t$307 )
 1254.             endif
 1257.             t$267 = nfsoiltp
 1257.             t$309(1) = 0x100000000000000L
 1257. !dir$ suppress t$267
 1257.             t$309(2) = int( loc( t$267 ), 8 )
 1257.             t$309(3) = 0
 1257.             t$309(4) = 0
 1257.             t$309(5) = 0
 1257.             t$309(7) = 0
 1257.             t$309(8) = 0
 1257.             t$308 = _close( t$309 )
 1257.             goto 10
 1257.          endif
 1257.       else
 1257.    10    continue
 1264.           _substr(t$310,1,19) = '**(read_gl_sm_bc)**'
 1264.          t$311 = 20 + ( _ltrim(  _substr(fnamevegtype,1,_len( fnamevegtype )) ) )
 1264.          t$313 = int( _alloc( max( 0, t$311 ) ), 8 )
 1264.           _substr(t$312,1,max( 0, t$311 )) = //( 'Opening GL veg file=',  _substr(fnamevegtype,1,_ltrim(  _substr(fnamevegtype,1,_len( fnamevegtype )) )) )
 1264.          call msgone(  _substr(t$310,1,19),  _substr(t$312,1,max( 0, t$311 )) )
 1264.          _free( t$313 )
 1266.          if (  _substr(record_type,1,_len( record_type )) == 'seq' ) then
 1269.             ierr = 0
 1268.             t$286 = nfvegtp
 1269.              _substr(t$315,1,4) = 'OLD'
 1268.              _substr(t$316,1,10) = 'SEQUENTIAL'
 1268.              _substr(t$317,1,11) = 'UNFORMATTED'
 1269.              _substr(t$318,1,4) = 'READ'
 1268.             t$319(1) = 0x100000000000000L
 1268. !dir$ suppress t$286
 1268.             t$319(2) = int( loc( t$286 ), 8 )
 1268. !dir$ suppress ierr
 1268.             t$319(3) = int( loc( ierr ), 8 )
 1268.             t$319(4) = 0
 1268. !dir$ suppress  _substr(fnamevegtype,1,_ltrim(  _substr(fnamevegtype,1,max( 0, t$85 )) ))
 1268.             t$319(5) = int( loc(  _substr(fnamevegtype,1,_ltrim(  _substr(fnamevegtype,1,_len( fnamevegtype )) )) ), 8 )
 1268.             t$319(6) = _ltrim(  _substr(fnamevegtype,1,_len( fnamevegtype )) )
 1268. !dir$ suppress  _substr(t$315,1,3)
 1268.             t$319(7) = int( loc(  _substr(t$315,1,3) ), 8 )
 1268.             t$319(8) = 3
 1268. !dir$ suppress  _substr(t$316,1,10)
 1268.             t$319(9) = int( loc(  _substr(t$316,1,10) ), 8 )
 1268.             t$319(10) = 10
 1268. !dir$ suppress  _substr(t$317,1,11)
 1268.             t$319(11) = int( loc(  _substr(t$317,1,11) ), 8 )
 1268.             t$319(12) = 11
 1268.             t$319(13) = 0
 1268.             t$319(14) = 0
 1268.             t$319(16) = 0
 1268. !dir$ suppress  _substr(t$318,1,4)
 1268.             t$319(18) = int( loc(  _substr(t$318,1,4) ), 8 )
 1268.             t$319(19) = 4
 1268.             t$319(20) = 0
 1268.             t$319(22) = 0
 1268.             t$319(24) = 0x2000200000000L
 1268.             t$319(25) = 0
 1268.             t$319(27) = 0
 1268.             t$319(29) = 0
 1268.             t$319(31) = 0
 1268.             t$319(33) = 0
 1268.             t$319(35) = 0
 1268.             t$314 = _open( t$319 )
 1270.             if ( ierr /= 0 ) then
 1271.                $Unit_temp_O5 = nfprt
 1271.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, t$32,  _substr(t$31,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamevegtype,1,_ltrim(  _substr(fnamevegtype,1,_len( fnamevegtype )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 1273.                 _substr(t$320,1,11) = '**(ERROR)**'
 1273.                call _stop(  _substr(t$320,1,11) )
 1273.             else
 1276.                $I_L1276_216 = 0
 1276.                do
 1278.                   $Unit_temp_O6 = nfvegtp
 1278.                   _uread( _clist( 0, 0, 2, $Unit_temp_O6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1278.                   if ( jmax > 0 ) then
 1278.                      if ( imax > 0 ) then
 1278.                         if ( ( ( 1 + $I_L1276_216 ) <= 0 .or. ( 1 + $I_L1276_216 ) > 5 ) /= .false. ) then
 1278.                            $I_L1278_192 = 0
 1278.                            do
 1278.                               $I_L1278_158 = 0
 1278.                               do
 1278.                                  if ( ( ( 1 + $I_L1278_158 ) <= 0 .or. ( 1 + $I_L1278_158 ) > t$23 ) /= .false. ) then
 1278.                                      _substr(t$329,1,18) = 'FieldsPhysics.f90'
 1278.                                      _substr(t$330,1,8) = 'VEGTYPE'
 1278.                                     t$267 = 1 + $I_L1278_158
 1278.                                     call _bounds_error(  _substr(t$329,1,18), 1278,  _substr(t$330,1,8), 1, 1, t$23, t$267, t$328 )
 1278.                                  endif
 1278.                                  if ( ( ( 1 + $I_L1278_192 ) <= 0 .or. ( 1 + $I_L1278_192 ) > t$24 ) /= .false. ) then
 1278.                                      _substr(t$332,1,18) = 'FieldsPhysics.f90'
 1278.                                      _substr(t$333,1,8) = 'VEGTYPE'
 1278.                                     t$286 = 1 + $I_L1278_192
 1278.                                     call _bounds_error(  _substr(t$332,1,18), 1278,  _substr(t$333,1,8), 2, 1, t$24, t$286, t$331 )
 1278.                                  endif
 1278.                                   _substr(t$335,1,18) = 'FieldsPhysics.f90'
 1278.                                   _substr(t$336,1,8) = 'VEGTYPE'
 1278.                                  t$337 = 1 + $I_L1276_216
 1278.                                  call _bounds_error(  _substr(t$335,1,18), 1278,  _substr(t$336,1,8), 3, 1, 5, t$337, t$334 )
 1278.                                  $Unit_temp_O7 = nfvegtp
 1278.                                  _uread( _clist( 0, 0, 0, $Unit_temp_O7, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O20, 0x804060300000000L ) ) )
 1278.                                  vegtype(1 + $I_L1278_158, 1 + $I_L1278_192, 1 + $I_L1276_216) = $IOitem_O20
 1278.                                  $I_L1278_158 = 1 + $I_L1278_158
 1278.                                  if ( $I_L1278_158 >= imax ) exit
 1278.                               enddo
 1278.                               $I_L1278_192 = 1 + $I_L1278_192
 1278.                               if ( $I_L1278_192 >= jmax ) exit
 1278.                            enddo
 1278.                         else
 1278.                            $I_L1278_202 = 0
 1278.                            do
 1278.                               $I_L1278_170 = 0
 1278.                               do
 1278.                                  if ( ( ( 1 + $I_L1278_170 ) <= 0 .or. ( 1 + $I_L1278_170 ) > t$23 ) /= .false. ) then
 1278.                                      _substr(t$329,1,18) = 'FieldsPhysics.f90'
 1278.                                      _substr(t$330,1,8) = 'VEGTYPE'
 1278.                                     t$267 = 1 + $I_L1278_170
 1278.                                     call _bounds_error(  _substr(t$329,1,18), 1278,  _substr(t$330,1,8), 1, 1, t$23, t$267, t$328 )
 1278.                                  endif
 1278.                                  if ( ( ( 1 + $I_L1278_202 ) <= 0 .or. ( 1 + $I_L1278_202 ) > t$24 ) /= .false. ) then
 1278.                                      _substr(t$332,1,18) = 'FieldsPhysics.f90'
 1278.                                      _substr(t$333,1,8) = 'VEGTYPE'
 1278.                                     t$286 = 1 + $I_L1278_202
 1278.                                     call _bounds_error(  _substr(t$332,1,18), 1278,  _substr(t$333,1,8), 2, 1, t$24, t$286, t$331 )
 1278.                                  endif
 1278.                                  $Unit_temp_O7 = nfvegtp
 1278.                                  _uread( _clist( 0, 0, 0, $Unit_temp_O7, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O20, 0x804060300000000L ) ) )
 1278.                                  vegtype(1 + $I_L1278_170, 1 + $I_L1278_202, 1 + $I_L1276_216) = $IOitem_O20
 1278.                                  $I_L1278_170 = 1 + $I_L1278_170
 1278.                                  if ( $I_L1278_170 >= imax ) exit
 1278.                               enddo
 1278.                               $I_L1278_202 = 1 + $I_L1278_202
 1278.                               if ( $I_L1278_202 >= jmax ) exit
 1278.                            enddo
 1278.                         endif
 1278.                      endif
 1278.                   endif
 1278.                   $Unit_temp_O8 = nfvegtp
 1278.                   _uread( _clist( 0, 0, 1, $Unit_temp_O8, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1279.                   $Unit_temp_O9 = nfvegtp
 1279.                   _uread( _clist( 0, 0, 2, $Unit_temp_O9, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1279.                   if ( jmax > 0 ) then
 1279.                      if ( imax > 0 ) then
 1279.                         if ( ( ( 1 + $I_L1276_216 ) <= 0 .or. ( 1 + $I_L1276_216 ) > 5 ) /= .false. ) then
 1279.                            $I_L1279_194 = 0
 1279.                            do
 1279.                               $I_L1279_160 = 0
 1279.                               do
 1279.                                  if ( ( ( 1 + $I_L1279_160 ) <= 0 .or. ( 1 + $I_L1279_160 ) > t$23 ) /= .false. ) then
 1279.                                      _substr(t$345,1,18) = 'FieldsPhysics.f90'
 1279.                                      _substr(t$346,1,8) = 'FRACOCC'
 1279.                                     t$267 = 1 + $I_L1279_160
 1279.                                     call _bounds_error(  _substr(t$345,1,18), 1279,  _substr(t$346,1,8), 1, 1, t$23, t$267, t$344 )
 1279.                                  endif
 1279.                                  if ( ( ( 1 + $I_L1279_194 ) <= 0 .or. ( 1 + $I_L1279_194 ) > t$24 ) /= .false. ) then
 1279.                                      _substr(t$348,1,18) = 'FieldsPhysics.f90'
 1279.                                      _substr(t$349,1,8) = 'FRACOCC'
 1279.                                     t$286 = 1 + $I_L1279_194
 1279.                                     call _bounds_error(  _substr(t$348,1,18), 1279,  _substr(t$349,1,8), 2, 1, t$24, t$286, t$347 )
 1279.                                  endif
 1279.                                   _substr(t$351,1,18) = 'FieldsPhysics.f90'
 1279.                                   _substr(t$352,1,8) = 'FRACOCC'
 1279.                                  t$337 = 1 + $I_L1276_216
 1279.                                  call _bounds_error(  _substr(t$351,1,18), 1279,  _substr(t$352,1,8), 3, 1, 5, t$337, t$350 )
 1279.                                  $Unit_temp_O10 = nfvegtp
 1279.                                  _uread( _clist( 0, 0, 0, $Unit_temp_O10, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O21, 0x804060300000000L ) ) )
 1279.                                  fracocc(1 + $I_L1279_160, 1 + $I_L1279_194, 1 + $I_L1276_216) = $IOitem_O21
 1279.                                  $I_L1279_160 = 1 + $I_L1279_160
 1279.                                  if ( $I_L1279_160 >= imax ) exit
 1279.                               enddo
 1279.                               $I_L1279_194 = 1 + $I_L1279_194
 1279.                               if ( $I_L1279_194 >= jmax ) exit
 1279.                            enddo
 1279.                         else
 1279.                            $I_L1279_204 = 0
 1279.                            do
 1279.                               $I_L1279_172 = 0
 1279.                               do
 1279.                                  if ( ( ( 1 + $I_L1279_172 ) <= 0 .or. ( 1 + $I_L1279_172 ) > t$23 ) /= .false. ) then
 1279.                                      _substr(t$345,1,18) = 'FieldsPhysics.f90'
 1279.                                      _substr(t$346,1,8) = 'FRACOCC'
 1279.                                     t$267 = 1 + $I_L1279_172
 1279.                                     call _bounds_error(  _substr(t$345,1,18), 1279,  _substr(t$346,1,8), 1, 1, t$23, t$267, t$344 )
 1279.                                  endif
 1279.                                  if ( ( ( 1 + $I_L1279_204 ) <= 0 .or. ( 1 + $I_L1279_204 ) > t$24 ) /= .false. ) then
 1279.                                      _substr(t$348,1,18) = 'FieldsPhysics.f90'
 1279.                                      _substr(t$349,1,8) = 'FRACOCC'
 1279.                                     t$286 = 1 + $I_L1279_204
 1279.                                     call _bounds_error(  _substr(t$348,1,18), 1279,  _substr(t$349,1,8), 2, 1, t$24, t$286, t$347 )
 1279.                                  endif
 1279.                                  $Unit_temp_O10 = nfvegtp
 1279.                                  _uread( _clist( 0, 0, 0, $Unit_temp_O10, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O21, 0x804060300000000L ) ) )
 1279.                                  fracocc(1 + $I_L1279_172, 1 + $I_L1279_204, 1 + $I_L1276_216) = $IOitem_O21
 1279.                                  $I_L1279_172 = 1 + $I_L1279_172
 1279.                                  if ( $I_L1279_172 >= imax ) exit
 1279.                               enddo
 1279.                               $I_L1279_204 = 1 + $I_L1279_204
 1279.                               if ( $I_L1279_204 >= jmax ) exit
 1279.                            enddo
 1279.                         endif
 1279.                      endif
 1279.                   endif
 1279.                   $Unit_temp_O11 = nfvegtp
 1279.                   _uread( _clist( 0, 0, 1, $Unit_temp_O11, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1281.                   if ( reducedgrid /= .false. ) then
 1282.                      call nearestijtoibjb_r2d( vegtype(1, 1, 1 + $I_L1276_216), (veg_type%base_addr)(veg_type%dim_1%LB, veg_type%dim_2%LB, 1 + $I_L1276_216, 0) )
 1282.                   else
 1284. !dir$ suppress vegtype(1, 1, ipatch)
 1284.                      t$353 = $_StaticDV_P2
 1284.                      t$353%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( vegtype(1, 1, 1 + $I_L1276_216) ) )
 1284.                      t$353%header%el_len = 64
 1284.                      t$353%header%assoc = 1
 1284.                      t$353%header%ptr_alloc = 0
 1284.                      t$353%header%p_or_a = 0
 1284.                      t$353%header%a_contig = 1
 1284.                      t$353%header%n_dim = 2
 1284.                      t$353%header%orig_base = 0
 1284.                      t$353%header%orig_size = 0
 1284.                      t$353%header%n_codim = 0
 1284.                      t$353%header%dv_versn = 2
 1284.                      t$353%header%dv_smunit = 64
 1284.                      t$353%header%d_type = 0
 1284.                      t$353%header%n_params = 0
 1284.                      t$353%header%d_type_idx = 13
 1284.                      t$353%dim_1%LB = 1
 1284.                      t$353%dim_1%EX = ( max( 0, ( 1 + -1 + t$23 ) ) )
 1284.                      t$353%dim_1%SM = 1
 1284.                      t$353%dim_2%LB = 1
 1284.                      t$353%dim_2%EX = ( max( 0, ( 1 + -1 + t$24 ) ) )
 1284.                      t$353%dim_2%SM = _zla( 0, imax )
 1284. !dir$ suppress (veg_type%base_addr)(veg_type%dim_1%LB, veg_type%dim_2%LB, ipatch, 0)
 1284.                      t$354 = $_StaticDV_P3
 1284.                      t$354%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( (veg_type%base_addr)(veg_type%dim_1%LB, veg_type%dim_2%LB, 1 + $I_L1276_216, 0) ) )
 1284.                      t$354%header%el_len = 64
 1284.                      t$354%header%assoc = 1
 1284.                      t$354%header%ptr_alloc = veg_type%header%ptr_alloc
 1284.                      t$354%header%p_or_a = 0
 1284.                      t$354%header%a_contig = veg_type%header%a_contig
 1284.                      t$354%header%n_dim = 2
 1284.                      t$354%header%orig_base = veg_type%header%orig_base
 1284.                      t$354%header%orig_size = veg_type%header%orig_size
 1284.                      t$354%header%n_codim = 0
 1284.                      t$354%header%dv_versn = 2
 1284.                      t$354%header%dv_smunit = 64
 1284.                      t$354%header%d_type = 0
 1284.                      t$354%header%n_params = 0
 1284.                      t$354%header%d_type_idx = 13
 1284.                      t$354%dim_1%LB = 1
 1284.                      t$354%dim_1%EX = ( max( 0, ( 1 + -1 + veg_type%dim_1%EX ) ) )
 1284.                      t$354%dim_1%SM = veg_type%dim_1%SM
 1284.                      t$354%dim_2%LB = 1
 1284.                      t$354%dim_2%EX = ( max( 0, ( 1 + -1 + veg_type%dim_2%EX ) ) )
 1284.                      t$354%dim_2%SM = veg_type%dim_2%SM
 1284.                      call ijtoibjb_r( t$353, t$354 )
 1284.                   endif
 1287.                   if ( reducedgrid /= .false. ) then
 1288.                      call nearestijtoibjb_r2d( fracocc(1, 1, 1 + $I_L1276_216), (frac_occ%base_addr)(frac_occ%dim_1%LB, frac_occ%dim_2%LB, 1 + $I_L1276_216, 0) )
 1288.                   else
 1290. !dir$ suppress fracocc(1, 1, ipatch)
 1290.                      t$355 = $_StaticDV_P4
 1290.                      t$355%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( fracocc(1, 1, 1 + $I_L1276_216) ) )
 1290.                      t$355%header%el_len = 64
 1290.                      t$355%header%assoc = 1
 1290.                      t$355%header%ptr_alloc = 0
 1290.                      t$355%header%p_or_a = 0
 1290.                      t$355%header%a_contig = 1
 1290.                      t$355%header%n_dim = 2
 1290.                      t$355%header%orig_base = 0
 1290.                      t$355%header%orig_size = 0
 1290.                      t$355%header%n_codim = 0
 1290.                      t$355%header%dv_versn = 2
 1290.                      t$355%header%dv_smunit = 64
 1290.                      t$355%header%d_type = 0
 1290.                      t$355%header%n_params = 0
 1290.                      t$355%header%d_type_idx = 13
 1290.                      t$355%dim_1%LB = 1
 1290.                      t$355%dim_1%EX = ( max( 0, ( 1 + -1 + t$23 ) ) )
 1290.                      t$355%dim_1%SM = 1
 1290.                      t$355%dim_2%LB = 1
 1290.                      t$355%dim_2%EX = ( max( 0, ( 1 + -1 + t$24 ) ) )
 1290.                      t$355%dim_2%SM = _zla( 0, imax )
 1290. !dir$ suppress (frac_occ%base_addr)(frac_occ%dim_1%LB, frac_occ%dim_2%LB, ipatch, 0)
 1290.                      t$356 = $_StaticDV_P5
 1290.                      t$356%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( (frac_occ%base_addr)(frac_occ%dim_1%LB, frac_occ%dim_2%LB, 1 + $I_L1276_216, 0) ) )
 1290.                      t$356%header%el_len = 64
 1290.                      t$356%header%assoc = 1
 1290.                      t$356%header%ptr_alloc = frac_occ%header%ptr_alloc
 1290.                      t$356%header%p_or_a = 0
 1290.                      t$356%header%a_contig = frac_occ%header%a_contig
 1290.                      t$356%header%n_dim = 2
 1290.                      t$356%header%orig_base = frac_occ%header%orig_base
 1290.                      t$356%header%orig_size = frac_occ%header%orig_size
 1290.                      t$356%header%n_codim = 0
 1290.                      t$356%header%dv_versn = 2
 1290.                      t$356%header%dv_smunit = 64
 1290.                      t$356%header%d_type = 0
 1290.                      t$356%header%n_params = 0
 1290.                      t$356%header%d_type_idx = 13
 1290.                      t$356%dim_1%LB = 1
 1290.                      t$356%dim_1%EX = ( max( 0, ( 1 + -1 + frac_occ%dim_1%EX ) ) )
 1290.                      t$356%dim_1%SM = frac_occ%dim_1%SM
 1290.                      t$356%dim_2%LB = 1
 1290.                      t$356%dim_2%EX = ( max( 0, ( 1 + -1 + frac_occ%dim_2%EX ) ) )
 1290.                      t$356%dim_2%SM = frac_occ%dim_2%SM
 1290.                      call ijtoibjb_r( t$355, t$356 )
 1290.                   endif
 1293.                   $I_L1276_216 = 1 + $I_L1276_216
 1291.                   if ( $I_L1276_216 >= 2 ) exit
 1291.                enddo
 1295.                t$267 = nfvegtp
 1295.                t$358(1) = 0x100000000000000L
 1295. !dir$ suppress t$267
 1295.                t$358(2) = int( loc( t$267 ), 8 )
 1295.                t$358(3) = 0
 1295.                t$358(4) = 0
 1295.                t$358(5) = 0
 1295.                t$358(7) = 0
 1295.                t$358(8) = 0
 1295.                t$357 = _close( t$358 )
 1295.                goto 20
 1295.             endif
 1297.          else if (  _substr(record_type,1,_len( record_type )) == 'vfm' ) then
 1300.             ierr = 0
 1299.             t$286 = nfvegtp
 1300.              _substr(t$360,1,4) = 'OLD'
 1299.              _substr(t$361,1,10) = 'SEQUENTIAL'
 1299.              _substr(t$362,1,9) = 'FORMATTED'
 1300.              _substr(t$363,1,4) = 'READ'
 1299.             t$364(1) = 0x100000000000000L
 1299. !dir$ suppress t$286
 1299.             t$364(2) = int( loc( t$286 ), 8 )
 1299. !dir$ suppress ierr
 1299.             t$364(3) = int( loc( ierr ), 8 )
 1299.             t$364(4) = 0
 1299. !dir$ suppress  _substr(fnamevegtype,1,_ltrim(  _substr(fnamevegtype,1,max( 0, t$85 )) ))
 1299.             t$364(5) = int( loc(  _substr(fnamevegtype,1,_ltrim(  _substr(fnamevegtype,1,_len( fnamevegtype )) )) ), 8 )
 1299.             t$364(6) = _ltrim(  _substr(fnamevegtype,1,_len( fnamevegtype )) )
 1299. !dir$ suppress  _substr(t$360,1,3)
 1299.             t$364(7) = int( loc(  _substr(t$360,1,3) ), 8 )
 1299.             t$364(8) = 3
 1299. !dir$ suppress  _substr(t$361,1,10)
 1299.             t$364(9) = int( loc(  _substr(t$361,1,10) ), 8 )
 1299.             t$364(10) = 10
 1299. !dir$ suppress  _substr(t$362,1,9)
 1299.             t$364(11) = int( loc(  _substr(t$362,1,9) ), 8 )
 1299.             t$364(12) = 9
 1299.             t$364(13) = 0
 1299.             t$364(14) = 0
 1299.             t$364(16) = 0
 1299. !dir$ suppress  _substr(t$363,1,4)
 1299.             t$364(18) = int( loc(  _substr(t$363,1,4) ), 8 )
 1299.             t$364(19) = 4
 1299.             t$364(20) = 0
 1299.             t$364(22) = 0
 1299.             t$364(24) = 0x2000200000000L
 1299.             t$364(25) = 0
 1299.             t$364(27) = 0
 1299.             t$364(29) = 0
 1299.             t$364(31) = 0
 1299.             t$364(33) = 0
 1299.             t$364(35) = 0
 1299.             t$359 = _open( t$364 )
 1301.             if ( ierr /= 0 ) then
 1302.                $Unit_temp_O12 = nfprt
 1302.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O12, Null_Arg, Null_Arg, t$34,  _substr(t$33,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamevegtype,1,_ltrim(  _substr(fnamevegtype,1,_len( fnamevegtype )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 1304.                 _substr(t$365,1,11) = '**(ERROR)**'
 1304.                call _stop(  _substr(t$365,1,11) )
 1304.             else
 1307.                $I_L1307_214 = 0
 1307.                do
 1311.                   t$298 = imax * jmax
 1311.                    _substr(t$367,1,3) = 'LIN'
 1311.                   call vfirec( nfvegtp, vegtype(1, 1, 1 + $I_L1307_214), t$298,  _substr(t$367,1,3) )
 1313.                   if ( jmax > 0 ) then
 1314.                      if ( imax > 0 ) then
 1313.                         $I_L1313_190 = 0
 1313.                         do
 1314.                            $I_L1314_156 = 0
 1314. !dir$ ivdep
 1314.                            do
 1315.                               vegtype(1 + $I_L1314_156, 1 + $I_L1313_190, 1 + $I_L1307_214) = real( int( 1.0000000000000001e-1 + vegtype(1 + $I_L1314_156, 1 + $I_L1313_190, 1 + $I_L1307_214) ), 8 )
 1316.                               $I_L1314_156 = 1 + $I_L1314_156
 1314.                               if ( $I_L1314_156 >= imax ) exit
 1314.                            enddo
 1317.                            $I_L1313_190 = 1 + $I_L1313_190
 1316.                            if ( $I_L1313_190 >= jmax ) exit
 1316.                         enddo
 1316.                      endif
 1316.                   endif
 1319.                   if ( reducedgrid /= .false. ) then
 1320.                      call nearestijtoibjb_r2d( vegtype(1, 1, 1 + $I_L1307_214), (veg_type%base_addr)(veg_type%dim_1%LB, veg_type%dim_2%LB, 1 + $I_L1307_214, 0) )
 1320.                   else
 1322. !dir$ suppress vegtype(1, 1, ipatch)
 1322.                      t$374 = $_StaticDV_P6
 1322.                      t$374%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( vegtype(1, 1, 1 + $I_L1307_214) ) )
 1322.                      t$374%header%el_len = 64
 1322.                      t$374%header%assoc = 1
 1322.                      t$374%header%ptr_alloc = 0
 1322.                      t$374%header%p_or_a = 0
 1322.                      t$374%header%a_contig = 1
 1322.                      t$374%header%n_dim = 2
 1322.                      t$374%header%orig_base = 0
 1322.                      t$374%header%orig_size = 0
 1322.                      t$374%header%n_codim = 0
 1322.                      t$374%header%dv_versn = 2
 1322.                      t$374%header%dv_smunit = 64
 1322.                      t$374%header%d_type = 0
 1322.                      t$374%header%n_params = 0
 1322.                      t$374%header%d_type_idx = 13
 1322.                      t$374%dim_1%LB = 1
 1322.                      t$374%dim_1%EX = ( max( 0, ( 1 + -1 + t$23 ) ) )
 1322.                      t$374%dim_1%SM = 1
 1322.                      t$374%dim_2%LB = 1
 1322.                      t$374%dim_2%EX = ( max( 0, ( 1 + -1 + t$24 ) ) )
 1322.                      t$374%dim_2%SM = _zla( 0, imax )
 1322. !dir$ suppress (veg_type%base_addr)(veg_type%dim_1%LB, veg_type%dim_2%LB, ipatch, 0)
 1322.                      t$375 = $_StaticDV_P7
 1322.                      t$375%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( (veg_type%base_addr)(veg_type%dim_1%LB, veg_type%dim_2%LB, 1 + $I_L1307_214, 0) ) )
 1322.                      t$375%header%el_len = 64
 1322.                      t$375%header%assoc = 1
 1322.                      t$375%header%ptr_alloc = veg_type%header%ptr_alloc
 1322.                      t$375%header%p_or_a = 0
 1322.                      t$375%header%a_contig = veg_type%header%a_contig
 1322.                      t$375%header%n_dim = 2
 1322.                      t$375%header%orig_base = veg_type%header%orig_base
 1322.                      t$375%header%orig_size = veg_type%header%orig_size
 1322.                      t$375%header%n_codim = 0
 1322.                      t$375%header%dv_versn = 2
 1322.                      t$375%header%dv_smunit = 64
 1322.                      t$375%header%d_type = 0
 1322.                      t$375%header%n_params = 0
 1322.                      t$375%header%d_type_idx = 13
 1322.                      t$375%dim_1%LB = 1
 1322.                      t$375%dim_1%EX = ( max( 0, ( 1 + -1 + veg_type%dim_1%EX ) ) )
 1322.                      t$375%dim_1%SM = veg_type%dim_1%SM
 1322.                      t$375%dim_2%LB = 1
 1322.                      t$375%dim_2%EX = ( max( 0, ( 1 + -1 + veg_type%dim_2%EX ) ) )
 1322.                      t$375%dim_2%SM = veg_type%dim_2%SM
 1322.                      call ijtoibjb_r( t$374, t$375 )
 1322.                   endif
 1329.                   t$298 = imax * jmax
 1329.                    _substr(t$376,1,3) = 'LIN'
 1329.                   call vfirec( nfvegtp, fracocc(1, 1, 1 + $I_L1307_214), t$298,  _substr(t$376,1,3) )
 1331.                   if ( reducedgrid /= .false. ) then
 1332.                      call nearestijtoibjb_r2d( fracocc(1, 1, 1 + $I_L1307_214), (frac_occ%base_addr)(frac_occ%dim_1%LB, frac_occ%dim_2%LB, 1 + $I_L1307_214, 0) )
 1332.                   else
 1334. !dir$ suppress fracocc(1, 1, ipatch)
 1334.                      t$377 = $_StaticDV_P8
 1334.                      t$377%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( fracocc(1, 1, 1 + $I_L1307_214) ) )
 1334.                      t$377%header%el_len = 64
 1334.                      t$377%header%assoc = 1
 1334.                      t$377%header%ptr_alloc = 0
 1334.                      t$377%header%p_or_a = 0
 1334.                      t$377%header%a_contig = 1
 1334.                      t$377%header%n_dim = 2
 1334.                      t$377%header%orig_base = 0
 1334.                      t$377%header%orig_size = 0
 1334.                      t$377%header%n_codim = 0
 1334.                      t$377%header%dv_versn = 2
 1334.                      t$377%header%dv_smunit = 64
 1334.                      t$377%header%d_type = 0
 1334.                      t$377%header%n_params = 0
 1334.                      t$377%header%d_type_idx = 13
 1334.                      t$377%dim_1%LB = 1
 1334.                      t$377%dim_1%EX = ( max( 0, ( 1 + -1 + t$23 ) ) )
 1334.                      t$377%dim_1%SM = 1
 1334.                      t$377%dim_2%LB = 1
 1334.                      t$377%dim_2%EX = ( max( 0, ( 1 + -1 + t$24 ) ) )
 1334.                      t$377%dim_2%SM = _zla( 0, imax )
 1334. !dir$ suppress (frac_occ%base_addr)(frac_occ%dim_1%LB, frac_occ%dim_2%LB, ipatch, 0)
 1334.                      t$378 = $_StaticDV_P9
 1334.                      t$378%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( (frac_occ%base_addr)(frac_occ%dim_1%LB, frac_occ%dim_2%LB, 1 + $I_L1307_214, 0) ) )
 1334.                      t$378%header%el_len = 64
 1334.                      t$378%header%assoc = 1
 1334.                      t$378%header%ptr_alloc = frac_occ%header%ptr_alloc
 1334.                      t$378%header%p_or_a = 0
 1334.                      t$378%header%a_contig = frac_occ%header%a_contig
 1334.                      t$378%header%n_dim = 2
 1334.                      t$378%header%orig_base = frac_occ%header%orig_base
 1334.                      t$378%header%orig_size = frac_occ%header%orig_size
 1334.                      t$378%header%n_codim = 0
 1334.                      t$378%header%dv_versn = 2
 1334.                      t$378%header%dv_smunit = 64
 1334.                      t$378%header%d_type = 0
 1334.                      t$378%header%n_params = 0
 1334.                      t$378%header%d_type_idx = 13
 1334.                      t$378%dim_1%LB = 1
 1334.                      t$378%dim_1%EX = ( max( 0, ( 1 + -1 + frac_occ%dim_1%EX ) ) )
 1334.                      t$378%dim_1%SM = frac_occ%dim_1%SM
 1334.                      t$378%dim_2%LB = 1
 1334.                      t$378%dim_2%EX = ( max( 0, ( 1 + -1 + frac_occ%dim_2%EX ) ) )
 1334.                      t$378%dim_2%SM = frac_occ%dim_2%SM
 1334.                      call ijtoibjb_r( t$377, t$378 )
 1334.                   endif
 1337.                   $I_L1307_214 = 1 + $I_L1307_214
 1335.                   if ( $I_L1307_214 >= 2 ) exit
 1335.                enddo
 1339.                t$337 = nfvegtp
 1339.                t$380(1) = 0x100000000000000L
 1339. !dir$ suppress t$337
 1339.                t$380(2) = int( loc( t$337 ), 8 )
 1339.                t$380(3) = 0
 1339.                t$380(4) = 0
 1339.                t$380(5) = 0
 1339.                t$380(7) = 0
 1339.                t$380(8) = 0
 1339.                t$379 = _close( t$380 )
 1339.                goto 20
 1339.             endif
 1339.          else
 1339.    20       continue
 1345.             if ( jmax > 0 ) then
 1346.                if ( imax > 0 ) then
 1345.                   $I_L1345_196 = 0
 1345.                   do
 1346.                      $I_L1346_162 = 0
 1346. !dir$ ivdep
 1346.                      do
 1348.                         if ( imask_in(1 + $I_L1346_162, 1 + $I_L1345_196) > 0 ) then
 1348.                            if ( imask_in(1 + $I_L1346_162, 1 + $I_L1345_196) < 13 ) then
 1349.                               imask_in(1 + $I_L1346_162, 1 + $I_L1345_196) = int( vegtype(1 + $I_L1346_162, 1 + $I_L1345_196, 2) )
 1349.                            endif
 1349.                         endif
 1351.                         $I_L1346_162 = 1 + $I_L1346_162
 1350.                         if ( $I_L1346_162 >= imax ) exit
 1350.                      enddo
 1352.                      $I_L1345_196 = 1 + $I_L1345_196
 1351.                      if ( $I_L1345_196 >= jmax ) exit
 1351.                   enddo
 1351.                endif
 1351.             endif
 1356.             if ( jbmax > 0 ) then
 1357.                $SC_ibmaxperjb_I1 = ibmaxperjb%dim_1%SM
 1357.                $SC_ibmaxperjb_I0 = ibmaxperjb%dim_1%EX
 1358.                $SC_frac_occ_I2 = frac_occ%dim_1%EX
 1358.                $SC_frac_occ_I3 = frac_occ%dim_1%LB
 1358.                $SC_frac_occ_I5 = frac_occ%dim_2%SM
 1358.                $SC_frac_occ_I4 = frac_occ%dim_2%EX
 1358.                $SC_frac_occ_I6 = frac_occ%dim_2%LB
 1358.                $SC_frac_occ_I8 = frac_occ%dim_3%SM
 1358.                $SC_frac_occ_I7 = frac_occ%dim_3%EX
 1358.                $SC_frac_occ_I9 = frac_occ%dim_3%LB
 1356.                $I_L1356_198 = 0
 1356.                do
 1357.                   $t_S8 = (ibmaxperjb%base_addr)(1 + $I_L1356_198, 0)
 1357.                   if ( $t_S8 > 0 ) then
 1357.                      $I_L1357_164 = 0
 1357. !dir$ ivdep
 1357.                      do
 1358.                         if ( (frac_occ%base_addr)(1 + $I_L1357_164, 1 + $I_L1356_198, 1, 0) < 9.9999000000000005e-1 ) then
 1362.                            fractx = (frac_occ%base_addr)(1 + $I_L1357_164, 1 + $I_L1356_198, 1, 0)
 1365.                            (frac_occ%base_addr)(1 + $I_L1357_164, 1 + $I_L1356_198, 2, 0) = 1.0 + -fractx
 1365.                         endif
 1368.                         $I_L1357_164 = 1 + $I_L1357_164
 1366.                         if ( $I_L1357_164 >= $t_S8 ) exit
 1366.                      enddo
 1366.                   endif
 1369.                   $I_L1356_198 = 1 + $I_L1356_198
 1368.                   if ( $I_L1356_198 >= jbmax ) exit
 1368.                enddo
 1368.             endif
 1374.              _substr(t$394,1,19) = '**(read_gl_sm_bc)**'
 1374.             t$395 = 19 + ( _ltrim(  _substr(fnamesoilmoist,1,_len( fnamesoilmoist )) ) )
 1374.             t$397 = int( _alloc( max( 0, t$395 ) ), 8 )
 1374.              _substr(t$396,1,max( 0, t$395 )) = //( 'Opening GL_SM file=',  _substr(fnamesoilmoist,1,_ltrim(  _substr(fnamesoilmoist,1,_len( fnamesoilmoist )) )) )
 1374.             call msgone(  _substr(t$394,1,19),  _substr(t$396,1,max( 0, t$395 )) )
 1374.             _free( t$397 )
 1376.             if (  _substr(record_type,1,_len( record_type )) == 'seq' ) then
 1379.                ierr = 0
 1378.                t$267 = nfslmtp
 1379.                 _substr(t$399,1,4) = 'OLD'
 1378.                 _substr(t$400,1,10) = 'SEQUENTIAL'
 1378.                 _substr(t$401,1,11) = 'UNFORMATTED'
 1379.                 _substr(t$402,1,4) = 'READ'
 1378.                t$403(1) = 0x100000000000000L
 1378. !dir$ suppress t$267
 1378.                t$403(2) = int( loc( t$267 ), 8 )
 1378. !dir$ suppress ierr
 1378.                t$403(3) = int( loc( ierr ), 8 )
 1378.                t$403(4) = 0
 1378. !dir$ suppress  _substr(fnamesoilmoist,1,_ltrim(  _substr(fnamesoilmoist,1,max( 0, t$86 )) ))
 1378.                t$403(5) = int( loc(  _substr(fnamesoilmoist,1,_ltrim(  _substr(fnamesoilmoist,1,_len( fnamesoilmoist )) )) ), 8 )
 1378.                t$403(6) = _ltrim(  _substr(fnamesoilmoist,1,_len( fnamesoilmoist )) )
 1378. !dir$ suppress  _substr(t$399,1,3)
 1378.                t$403(7) = int( loc(  _substr(t$399,1,3) ), 8 )
 1378.                t$403(8) = 3
 1378. !dir$ suppress  _substr(t$400,1,10)
 1378.                t$403(9) = int( loc(  _substr(t$400,1,10) ), 8 )
 1378.                t$403(10) = 10
 1378. !dir$ suppress  _substr(t$401,1,11)
 1378.                t$403(11) = int( loc(  _substr(t$401,1,11) ), 8 )
 1378.                t$403(12) = 11
 1378.                t$403(13) = 0
 1378.                t$403(14) = 0
 1378.                t$403(16) = 0
 1378. !dir$ suppress  _substr(t$402,1,4)
 1378.                t$403(18) = int( loc(  _substr(t$402,1,4) ), 8 )
 1378.                t$403(19) = 4
 1378.                t$403(20) = 0
 1378.                t$403(22) = 0
 1378.                t$403(24) = 0x2000200000000L
 1378.                t$403(25) = 0
 1378.                t$403(27) = 0
 1378.                t$403(29) = 0
 1378.                t$403(31) = 0
 1378.                t$403(33) = 0
 1378.                t$403(35) = 0
 1378.                t$398 = _open( t$403 )
 1380.                if ( ierr /= 0 ) then
 1381.                   $Unit_temp_O13 = nfprt
 1381.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O13, Null_Arg, Null_Arg, t$36,  _substr(t$35,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamesoilmoist,1,_ltrim(  _substr(fnamesoilmoist,1,_len( fnamesoilmoist )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 1383.                    _substr(t$404,1,11) = '**(ERROR)**'
 1383.                   call _stop(  _substr(t$404,1,11) )
 1383.                else
 1389.                   if ( jmax <= 0 ) then
 1388.                      $I_L1388_176 = 0
 1388.                      do
 1389.                         $Unit_temp_O14 = nfslmtp
 1389.                         _uread( _clist( 0, 0, 2, $Unit_temp_O14, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1389.                         $Unit_temp_O17 = nfslmtp
 1389.                         _uread( _clist( 0, 0, 1, $Unit_temp_O17, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1391.                         if ( reducedgrid /= .false. ) then
 1392.                            call nearestijtoibjb_r2d( glsm(1, 1, 8 + -$I_L1388_176), (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, 8 + -$I_L1388_176, 0) )
 1392.                         else
 1394. !dir$ suppress glsm(1, 1, k)
 1394.                            t$421 = $_StaticDV_P14
 1394.                            t$421%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( glsm(1, 1, 8 + -$I_L1388_176) ) )
 1394.                            t$421%header%el_len = 64
 1394.                            t$421%header%assoc = 1
 1394.                            t$421%header%ptr_alloc = 0
 1394.                            t$421%header%p_or_a = 0
 1394.                            t$421%header%a_contig = 1
 1394.                            t$421%header%n_dim = 2
 1394.                            t$421%header%orig_base = 0
 1394.                            t$421%header%orig_size = 0
 1394.                            t$421%header%n_codim = 0
 1394.                            t$421%header%dv_versn = 2
 1394.                            t$421%header%dv_smunit = 64
 1394.                            t$421%header%d_type = 0
 1394.                            t$421%header%n_params = 0
 1394.                            t$421%header%d_type_idx = 13
 1394.                            t$421%dim_1%LB = 1
 1394.                            t$421%dim_1%EX = ( max( 0, ( 1 + -1 + t$23 ) ) )
 1394.                            t$421%dim_1%SM = 1
 1394.                            t$421%dim_2%LB = 1
 1394.                            t$421%dim_2%EX = ( max( 0, ( 1 + -1 + t$24 ) ) )
 1394.                            t$421%dim_2%SM = _zla( 0, imax )
 1394. !dir$ suppress (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, k, 0)
 1394.                            t$422 = $_StaticDV_P15
 1394.                            t$422%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, 8 + -$I_L1388_176, 0) ) )
 1394.                            t$422%header%el_len = 64
 1394.                            t$422%header%assoc = 1
 1394.                            t$422%header%ptr_alloc = glsm_w%header%ptr_alloc
 1394.                            t$422%header%p_or_a = 0
 1394.                            t$422%header%a_contig = glsm_w%header%a_contig
 1394.                            t$422%header%n_dim = 2
 1394.                            t$422%header%orig_base = glsm_w%header%orig_base
 1394.                            t$422%header%orig_size = glsm_w%header%orig_size
 1394.                            t$422%header%n_codim = 0
 1394.                            t$422%header%dv_versn = 2
 1394.                            t$422%header%dv_smunit = 64
 1394.                            t$422%header%d_type = 0
 1394.                            t$422%header%n_params = 0
 1394.                            t$422%header%d_type_idx = 13
 1394.                            t$422%dim_1%LB = 1
 1394.                            t$422%dim_1%EX = ( max( 0, ( 1 + -1 + glsm_w%dim_1%EX ) ) )
 1394.                            t$422%dim_1%SM = glsm_w%dim_1%SM
 1394.                            t$422%dim_2%LB = 1
 1394.                            t$422%dim_2%EX = ( max( 0, ( 1 + -1 + glsm_w%dim_2%EX ) ) )
 1394.                            t$422%dim_2%SM = glsm_w%dim_2%SM
 1394.                            call ijtoibjb_r( t$421, t$422 )
 1394.                         endif
 1397.                         $I_L1388_176 = 1 + $I_L1388_176
 1395.                         if ( $I_L1388_176 >= 8 ) exit
 1395.                      enddo
 1395.                   else if ( imax > 0 ) then
 1388.                      $I_L1388_218 = 0
 1388.                      do
 1389.                         $Unit_temp_O14 = nfslmtp
 1389.                         _uread( _clist( 0, 0, 2, $Unit_temp_O14, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1389.                         if ( ( ( 8 + -$I_L1388_218 ) <= 0 .or. ( 8 + -$I_L1388_218 ) > 8 ) /= .false. ) then
 1389.                            $I_L1389_200 = 0
 1389.                            do
 1389.                               $I_L1389_168 = 0
 1389.                               do
 1389.                                  if ( ( ( 1 + $I_L1389_168 ) <= 0 .or. ( 1 + $I_L1389_168 ) > t$23 ) /= .false. ) then
 1389.                                      _substr(t$413,1,18) = 'FieldsPhysics.f90'
 1389.                                      _substr(t$414,1,5) = 'GLSM'
 1389.                                     t$286 = 1 + $I_L1389_168
 1389.                                     call _bounds_error(  _substr(t$413,1,18), 1389,  _substr(t$414,1,5), 1, 1, t$23, t$286, t$412 )
 1389.                                  endif
 1389.                                  if ( ( ( 1 + $I_L1389_200 ) <= 0 .or. ( 1 + $I_L1389_200 ) > t$24 ) /= .false. ) then
 1389.                                      _substr(t$416,1,18) = 'FieldsPhysics.f90'
 1389.                                      _substr(t$417,1,5) = 'GLSM'
 1389.                                     t$337 = 1 + $I_L1389_200
 1389.                                     call _bounds_error(  _substr(t$416,1,18), 1389,  _substr(t$417,1,5), 2, 1, t$24, t$337, t$415 )
 1389.                                  endif
 1389.                                   _substr(t$419,1,18) = 'FieldsPhysics.f90'
 1389.                                   _substr(t$420,1,5) = 'GLSM'
 1389.                                  t$267 = 8 + -$I_L1388_218
 1389.                                  call _bounds_error(  _substr(t$419,1,18), 1389,  _substr(t$420,1,5), 3, 1, 8, t$267, t$418 )
 1389.                                  $Unit_temp_O15 = nfslmtp
 1389.                                  _uread( _clist( 0, 0, 0, $Unit_temp_O15, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O22, 0x804060300000000L ) ) )
 1389.                                  glsm(1 + $I_L1389_168, 1 + $I_L1389_200, 8 + -$I_L1388_218) = $IOitem_O22
 1389.                                  $I_L1389_168 = 1 + $I_L1389_168
 1389.                                  if ( $I_L1389_168 >= imax ) exit
 1389.                               enddo
 1389.                               $I_L1389_200 = 1 + $I_L1389_200
 1389.                               if ( $I_L1389_200 >= jmax ) exit
 1389.                            enddo
 1389.                         else
 1389.                            $I_L1389_206 = 0
 1389.                            do
 1389.                               $I_L1389_174 = 0
 1389.                               do
 1389.                                  if ( ( ( 1 + $I_L1389_174 ) <= 0 .or. ( 1 + $I_L1389_174 ) > t$23 ) /= .false. ) then
 1389.                                      _substr(t$413,1,18) = 'FieldsPhysics.f90'
 1389.                                      _substr(t$414,1,5) = 'GLSM'
 1389.                                     t$286 = 1 + $I_L1389_174
 1389.                                     call _bounds_error(  _substr(t$413,1,18), 1389,  _substr(t$414,1,5), 1, 1, t$23, t$286, t$412 )
 1389.                                  endif
 1389.                                  if ( ( ( 1 + $I_L1389_206 ) <= 0 .or. ( 1 + $I_L1389_206 ) > t$24 ) /= .false. ) then
 1389.                                      _substr(t$416,1,18) = 'FieldsPhysics.f90'
 1389.                                      _substr(t$417,1,5) = 'GLSM'
 1389.                                     t$337 = 1 + $I_L1389_206
 1389.                                     call _bounds_error(  _substr(t$416,1,18), 1389,  _substr(t$417,1,5), 2, 1, t$24, t$337, t$415 )
 1389.                                  endif
 1389.                                  $Unit_temp_O15 = nfslmtp
 1389.                                  _uread( _clist( 0, 0, 0, $Unit_temp_O15, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $IOitem_O22, 0x804060300000000L ) ) )
 1389.                                  glsm(1 + $I_L1389_174, 1 + $I_L1389_206, 8 + -$I_L1388_218) = $IOitem_O22
 1389.                                  $I_L1389_174 = 1 + $I_L1389_174
 1389.                                  if ( $I_L1389_174 >= imax ) exit
 1389.                               enddo
 1389.                               $I_L1389_206 = 1 + $I_L1389_206
 1389.                               if ( $I_L1389_206 >= jmax ) exit
 1389.                            enddo
 1389.                         endif
 1389.                         $Unit_temp_O17 = nfslmtp
 1389.                         _uread( _clist( 0, 0, 1, $Unit_temp_O17, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1391.                         if ( reducedgrid /= .false. ) then
 1392.                            call nearestijtoibjb_r2d( glsm(1, 1, 8 + -$I_L1388_218), (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, 8 + -$I_L1388_218, 0) )
 1392.                         else
 1394. !dir$ suppress glsm(1, 1, k)
 1394.                            t$421 = $_StaticDV_P10
 1394.                            t$421%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( glsm(1, 1, 8 + -$I_L1388_218) ) )
 1394.                            t$421%header%el_len = 64
 1394.                            t$421%header%assoc = 1
 1394.                            t$421%header%ptr_alloc = 0
 1394.                            t$421%header%p_or_a = 0
 1394.                            t$421%header%a_contig = 1
 1394.                            t$421%header%n_dim = 2
 1394.                            t$421%header%orig_base = 0
 1394.                            t$421%header%orig_size = 0
 1394.                            t$421%header%n_codim = 0
 1394.                            t$421%header%dv_versn = 2
 1394.                            t$421%header%dv_smunit = 64
 1394.                            t$421%header%d_type = 0
 1394.                            t$421%header%n_params = 0
 1394.                            t$421%header%d_type_idx = 13
 1394.                            t$421%dim_1%LB = 1
 1394.                            t$421%dim_1%EX = ( max( 0, ( 1 + -1 + t$23 ) ) )
 1394.                            t$421%dim_1%SM = 1
 1394.                            t$421%dim_2%LB = 1
 1394.                            t$421%dim_2%EX = ( max( 0, ( 1 + -1 + t$24 ) ) )
 1394.                            t$421%dim_2%SM = _zla( 0, imax )
 1394. !dir$ suppress (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, k, 0)
 1394.                            t$422 = $_StaticDV_P11
 1394.                            t$422%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, 8 + -$I_L1388_218, 0) ) )
 1394.                            t$422%header%el_len = 64
 1394.                            t$422%header%assoc = 1
 1394.                            t$422%header%ptr_alloc = glsm_w%header%ptr_alloc
 1394.                            t$422%header%p_or_a = 0
 1394.                            t$422%header%a_contig = glsm_w%header%a_contig
 1394.                            t$422%header%n_dim = 2
 1394.                            t$422%header%orig_base = glsm_w%header%orig_base
 1394.                            t$422%header%orig_size = glsm_w%header%orig_size
 1394.                            t$422%header%n_codim = 0
 1394.                            t$422%header%dv_versn = 2
 1394.                            t$422%header%dv_smunit = 64
 1394.                            t$422%header%d_type = 0
 1394.                            t$422%header%n_params = 0
 1394.                            t$422%header%d_type_idx = 13
 1394.                            t$422%dim_1%LB = 1
 1394.                            t$422%dim_1%EX = ( max( 0, ( 1 + -1 + glsm_w%dim_1%EX ) ) )
 1394.                            t$422%dim_1%SM = glsm_w%dim_1%SM
 1394.                            t$422%dim_2%LB = 1
 1394.                            t$422%dim_2%EX = ( max( 0, ( 1 + -1 + glsm_w%dim_2%EX ) ) )
 1394.                            t$422%dim_2%SM = glsm_w%dim_2%SM
 1394.                            call ijtoibjb_r( t$421, t$422 )
 1394.                         endif
 1397.                         $I_L1388_218 = 1 + $I_L1388_218
 1395.                         if ( $I_L1388_218 >= 8 ) exit
 1395.                      enddo
 1395.                   else
 1388.                      $I_L1388_178 = 0
 1388.                      do
 1389.                         $Unit_temp_O14 = nfslmtp
 1389.                         _uread( _clist( 0, 0, 2, $Unit_temp_O14, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1389.                         $Unit_temp_O17 = nfslmtp
 1389.                         _uread( _clist( 0, 0, 1, $Unit_temp_O17, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 1391.                         if ( reducedgrid /= .false. ) then
 1392.                            call nearestijtoibjb_r2d( glsm(1, 1, 8 + -$I_L1388_178), (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, 8 + -$I_L1388_178, 0) )
 1392.                         else
 1394. !dir$ suppress glsm(1, 1, k)
 1394.                            t$421 = $_StaticDV_P12
 1394.                            t$421%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( glsm(1, 1, 8 + -$I_L1388_178) ) )
 1394.                            t$421%header%el_len = 64
 1394.                            t$421%header%assoc = 1
 1394.                            t$421%header%ptr_alloc = 0
 1394.                            t$421%header%p_or_a = 0
 1394.                            t$421%header%a_contig = 1
 1394.                            t$421%header%n_dim = 2
 1394.                            t$421%header%orig_base = 0
 1394.                            t$421%header%orig_size = 0
 1394.                            t$421%header%n_codim = 0
 1394.                            t$421%header%dv_versn = 2
 1394.                            t$421%header%dv_smunit = 64
 1394.                            t$421%header%d_type = 0
 1394.                            t$421%header%n_params = 0
 1394.                            t$421%header%d_type_idx = 13
 1394.                            t$421%dim_1%LB = 1
 1394.                            t$421%dim_1%EX = ( max( 0, ( 1 + -1 + t$23 ) ) )
 1394.                            t$421%dim_1%SM = 1
 1394.                            t$421%dim_2%LB = 1
 1394.                            t$421%dim_2%EX = ( max( 0, ( 1 + -1 + t$24 ) ) )
 1394.                            t$421%dim_2%SM = _zla( 0, imax )
 1394. !dir$ suppress (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, k, 0)
 1394.                            t$422 = $_StaticDV_P13
 1394.                            t$422%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, 8 + -$I_L1388_178, 0) ) )
 1394.                            t$422%header%el_len = 64
 1394.                            t$422%header%assoc = 1
 1394.                            t$422%header%ptr_alloc = glsm_w%header%ptr_alloc
 1394.                            t$422%header%p_or_a = 0
 1394.                            t$422%header%a_contig = glsm_w%header%a_contig
 1394.                            t$422%header%n_dim = 2
 1394.                            t$422%header%orig_base = glsm_w%header%orig_base
 1394.                            t$422%header%orig_size = glsm_w%header%orig_size
 1394.                            t$422%header%n_codim = 0
 1394.                            t$422%header%dv_versn = 2
 1394.                            t$422%header%dv_smunit = 64
 1394.                            t$422%header%d_type = 0
 1394.                            t$422%header%n_params = 0
 1394.                            t$422%header%d_type_idx = 13
 1394.                            t$422%dim_1%LB = 1
 1394.                            t$422%dim_1%EX = ( max( 0, ( 1 + -1 + glsm_w%dim_1%EX ) ) )
 1394.                            t$422%dim_1%SM = glsm_w%dim_1%SM
 1394.                            t$422%dim_2%LB = 1
 1394.                            t$422%dim_2%EX = ( max( 0, ( 1 + -1 + glsm_w%dim_2%EX ) ) )
 1394.                            t$422%dim_2%SM = glsm_w%dim_2%SM
 1394.                            call ijtoibjb_r( t$421, t$422 )
 1394.                         endif
 1397.                         $I_L1388_178 = 1 + $I_L1388_178
 1395.                         if ( $I_L1388_178 >= 8 ) exit
 1395.                      enddo
 1395.                   endif
 1399.                   t$286 = nfslmtp
 1399.                   t$424(1) = 0x100000000000000L
 1399. !dir$ suppress t$286
 1399.                   t$424(2) = int( loc( t$286 ), 8 )
 1399.                   t$424(3) = 0
 1399.                   t$424(4) = 0
 1399.                   t$424(5) = 0
 1399.                   t$424(7) = 0
 1399.                   t$424(8) = 0
 1399.                   t$423 = _close( t$424 )
 1399.                   goto 30
 1399.                endif
 1401.             else if (  _substr(record_type,1,_len( record_type )) == 'vfm' ) then
 1404.                ierr = 0
 1403.                t$337 = nfslmtp
 1404.                 _substr(t$426,1,4) = 'OLD'
 1403.                 _substr(t$427,1,10) = 'SEQUENTIAL'
 1403.                 _substr(t$428,1,9) = 'FORMATTED'
 1404.                 _substr(t$429,1,4) = 'READ'
 1403.                t$430(1) = 0x100000000000000L
 1403. !dir$ suppress t$337
 1403.                t$430(2) = int( loc( t$337 ), 8 )
 1403. !dir$ suppress ierr
 1403.                t$430(3) = int( loc( ierr ), 8 )
 1403.                t$430(4) = 0
 1403. !dir$ suppress  _substr(fnamesoilmoist,1,_ltrim(  _substr(fnamesoilmoist,1,max( 0, t$86 )) ))
 1403.                t$430(5) = int( loc(  _substr(fnamesoilmoist,1,_ltrim(  _substr(fnamesoilmoist,1,_len( fnamesoilmoist )) )) ), 8 )
 1403.                t$430(6) = _ltrim(  _substr(fnamesoilmoist,1,_len( fnamesoilmoist )) )
 1403. !dir$ suppress  _substr(t$426,1,3)
 1403.                t$430(7) = int( loc(  _substr(t$426,1,3) ), 8 )
 1403.                t$430(8) = 3
 1403. !dir$ suppress  _substr(t$427,1,10)
 1403.                t$430(9) = int( loc(  _substr(t$427,1,10) ), 8 )
 1403.                t$430(10) = 10
 1403. !dir$ suppress  _substr(t$428,1,9)
 1403.                t$430(11) = int( loc(  _substr(t$428,1,9) ), 8 )
 1403.                t$430(12) = 9
 1403.                t$430(13) = 0
 1403.                t$430(14) = 0
 1403.                t$430(16) = 0
 1403. !dir$ suppress  _substr(t$429,1,4)
 1403.                t$430(18) = int( loc(  _substr(t$429,1,4) ), 8 )
 1403.                t$430(19) = 4
 1403.                t$430(20) = 0
 1403.                t$430(22) = 0
 1403.                t$430(24) = 0x2000200000000L
 1403.                t$430(25) = 0
 1403.                t$430(27) = 0
 1403.                t$430(29) = 0
 1403.                t$430(31) = 0
 1403.                t$430(33) = 0
 1403.                t$430(35) = 0
 1403.                t$425 = _open( t$430 )
 1405.                if ( ierr /= 0 ) then
 1406.                   $Unit_temp_O18 = nfprt
 1406.                   _fwrite( _clist( 0, 0, 3, $Unit_temp_O18, Null_Arg, Null_Arg, t$38,  _substr(t$37,1,51), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype(  _substr(fnamesoilmoist,1,_ltrim(  _substr(fnamesoilmoist,1,_len( fnamesoilmoist )) )), 0x800600000000L ), _iotype( ierr, 0x2000200000000L ) ) )
 1408.                    _substr(t$431,1,11) = '**(ERROR)**'
 1408.                   call _stop(  _substr(t$431,1,11) )
 1408.                else
 1414.                   $I_L1414_166 = 0
 1414.                   do
 1418.                      t$298 = imax * jmax
 1418.                       _substr(t$433,1,3) = 'LIN'
 1418.                      call vfirec( nfslmtp, glsm(1, 1, 8 + -$I_L1414_166), t$298,  _substr(t$433,1,3) )
 1420.                      if ( reducedgrid /= .false. ) then
 1421.                         call nearestijtoibjb_r2d( glsm(1, 1, 8 + -$I_L1414_166), (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, 8 + -$I_L1414_166, 0) )
 1421.                      else
 1423. !dir$ suppress glsm(1, 1, k)
 1423.                         t$434 = $_StaticDV_P16
 1423.                         t$434%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( glsm(1, 1, 8 + -$I_L1414_166) ) )
 1423.                         t$434%header%el_len = 64
 1423.                         t$434%header%assoc = 1
 1423.                         t$434%header%ptr_alloc = 0
 1423.                         t$434%header%p_or_a = 0
 1423.                         t$434%header%a_contig = 1
 1423.                         t$434%header%n_dim = 2
 1423.                         t$434%header%orig_base = 0
 1423.                         t$434%header%orig_size = 0
 1423.                         t$434%header%n_codim = 0
 1423.                         t$434%header%dv_versn = 2
 1423.                         t$434%header%dv_smunit = 64
 1423.                         t$434%header%d_type = 0
 1423.                         t$434%header%n_params = 0
 1423.                         t$434%header%d_type_idx = 13
 1423.                         t$434%dim_1%LB = 1
 1423.                         t$434%dim_1%EX = ( max( 0, ( 1 + -1 + t$23 ) ) )
 1423.                         t$434%dim_1%SM = 1
 1423.                         t$434%dim_2%LB = 1
 1423.                         t$434%dim_2%EX = ( max( 0, ( 1 + -1 + t$24 ) ) )
 1423.                         t$434%dim_2%SM = _zla( 0, imax )
 1423. !dir$ suppress (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, k, 0)
 1423.                         t$435 = $_StaticDV_P17
 1423.                         t$435%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( (glsm_w%base_addr)(glsm_w%dim_1%LB, glsm_w%dim_2%LB, 8 + -$I_L1414_166, 0) ) )
 1423.                         t$435%header%el_len = 64
 1423.                         t$435%header%assoc = 1
 1423.                         t$435%header%ptr_alloc = glsm_w%header%ptr_alloc
 1423.                         t$435%header%p_or_a = 0
 1423.                         t$435%header%a_contig = glsm_w%header%a_contig
 1423.                         t$435%header%n_dim = 2
 1423.                         t$435%header%orig_base = glsm_w%header%orig_base
 1423.                         t$435%header%orig_size = glsm_w%header%orig_size
 1423.                         t$435%header%n_codim = 0
 1423.                         t$435%header%dv_versn = 2
 1423.                         t$435%header%dv_smunit = 64
 1423.                         t$435%header%d_type = 0
 1423.                         t$435%header%n_params = 0
 1423.                         t$435%header%d_type_idx = 13
 1423.                         t$435%dim_1%LB = 1
 1423.                         t$435%dim_1%EX = ( max( 0, ( 1 + -1 + glsm_w%dim_1%EX ) ) )
 1423.                         t$435%dim_1%SM = glsm_w%dim_1%SM
 1423.                         t$435%dim_2%LB = 1
 1423.                         t$435%dim_2%EX = ( max( 0, ( 1 + -1 + glsm_w%dim_2%EX ) ) )
 1423.                         t$435%dim_2%SM = glsm_w%dim_2%SM
 1423.                         call ijtoibjb_r( t$434, t$435 )
 1423.                      endif
 1426.                      $I_L1414_166 = 1 + $I_L1414_166
 1424.                      if ( $I_L1414_166 >= 8 ) exit
 1424.                   enddo
 1428.                   t$267 = nfslmtp
 1428.                   t$437(1) = 0x100000000000000L
 1428. !dir$ suppress t$267
 1428.                   t$437(2) = int( loc( t$267 ), 8 )
 1428.                   t$437(3) = 0
 1428.                   t$437(4) = 0
 1428.                   t$437(5) = 0
 1428.                   t$437(7) = 0
 1428.                   t$437(8) = 0
 1428.                   t$436 = _close( t$437 )
 1428.                   goto 30
 1428.                endif
 1428.             else
 1432.                 _substr(t$438,1,39) = '**(read_gl_sm_bc)** unknown record type'
 1432.                call fatalerror(  _substr(t$438,1,39) )
 1432.    30          continue
 1436.                 _substr(t$439,1,19) = '**(read_gl_sm_bc)**'
 1436.                 _substr(t$440,1,4) = 'DONE'
 1436.                call msgone(  _substr(t$439,1,19),  _substr(t$440,1,4) )
 1170.                _free( t$93 )
 1170.             endif
 1170.          endif
 1170.       endif
 1439.       return
 1439.       end
 1439.       
 1501.       
 1501.       subroutine restartphyscs( jbmax, ifday, tod, idate, idatec, nfsibo, nfcnv1, ibmaxperjb )
 1442.       idate%dim_1%LB = 1
 1442.       idatec%dim_1%LB = 1
 1442.       ibmaxperjb%dim_1%LB = 1
 1457.       if (  _substr(isimp,1,_ltrim(  _substr(isimp,1,4) )) /= 'YES' ) then
 1459.           _substr(t$441,1,19) = '**(restartphyscs)**'
 1459.           _substr(t$442,1,32) = 'Saving physics state for restart'
 1459.          call msgone(  _substr(t$441,1,19),  _substr(t$442,1,32) )
 1462.          if ( jbmax > 0 ) then
 1471.             $SC_wm_I20 = wm%dim_1%EX
 1471.             $SC_wm_I21 = wm%dim_1%LB
 1471.             $SC_wm_I23 = wm%dim_2%SM
 1471.             $SC_wm_I22 = wm%dim_2%EX
 1471.             $SC_wm_I24 = wm%dim_2%LB
 1471.             $SC_wm_I26 = wm%dim_3%SM
 1471.             $SC_wm_I25 = wm%dim_3%EX
 1471.             $SC_wm_I27 = wm%dim_3%LB
 1468.             $SC_w0_I12 = w0%dim_1%EX
 1468.             $SC_w0_I13 = w0%dim_1%LB
 1468.             $SC_w0_I15 = w0%dim_2%SM
 1468.             $SC_w0_I14 = w0%dim_2%EX
 1468.             $SC_w0_I16 = w0%dim_2%LB
 1468.             $SC_w0_I18 = w0%dim_3%SM
 1468.             $SC_w0_I17 = w0%dim_3%EX
 1468.             $SC_w0_I19 = w0%dim_3%LB
 1467.             $SC_ssib_I7 = ssib%dim_1%EX
 1467.             $SC_ssib_I8 = ssib%dim_1%LB
 1467.             $SC_ssib_I10 = ssib%dim_2%SM
 1467.             $SC_ssib_I9 = ssib%dim_2%EX
 1467.             $SC_ssib_I11 = ssib%dim_2%LB
 1465.             $SC_imask_I2 = imask%dim_1%EX
 1465.             $SC_imask_I3 = imask%dim_1%LB
 1465.             $SC_imask_I5 = imask%dim_2%SM
 1465.             $SC_imask_I4 = imask%dim_2%EX
 1465.             $SC_imask_I6 = imask%dim_2%LB
 1464.             $SC_ibmaxperjb_I1 = ibmaxperjb%dim_1%SM
 1464.             $SC_ibmaxperjb_I0 = ibmaxperjb%dim_1%EX
 1462.             $I_L1462_28 = 0
 1462. !$omp do schedule(static)
 1462.             do
 1463.                $ncount_S3 = 0
 1464.                $t_S1 = (ibmaxperjb%base_addr)(1 + $I_L1462_28, 0)
 1464.                if ( $t_S1 > 0 ) then
 1464.                   $I_L1464_26 = 0
 1464. !dir$ ivdep
 1464.                   do
 1465.                      if ( (imask%base_addr)(1 + $I_L1464_26, 1 + $I_L1462_28, 0) > 0 ) then
 1466.                         $ncount_S3 = 1 + $ncount_S3
 1467.                         if ( (ssib%base_addr)($ncount_S3, 1 + $I_L1462_28, 0) > 0.0 ) then
 1468.                            (w0%base_addr)($ncount_S3, 1, 1 + $I_L1462_28, 0) = -(ssib%base_addr)($ncount_S3, 1 + $I_L1462_28, 0)
 1469.                            (w0%base_addr)($ncount_S3, 2, 1 + $I_L1462_28, 0) = -(ssib%base_addr)($ncount_S3, 1 + $I_L1462_28, 0)
 1470.                            (w0%base_addr)($ncount_S3, 3, 1 + $I_L1462_28, 0) = -(ssib%base_addr)($ncount_S3, 1 + $I_L1462_28, 0)
 1471.                            (wm%base_addr)($ncount_S3, 1, 1 + $I_L1462_28, 0) = -(ssib%base_addr)($ncount_S3, 1 + $I_L1462_28, 0)
 1472.                            (wm%base_addr)($ncount_S3, 2, 1 + $I_L1462_28, 0) = -(ssib%base_addr)($ncount_S3, 1 + $I_L1462_28, 0)
 1473.                            (wm%base_addr)($ncount_S3, 3, 1 + $I_L1462_28, 0) = -(ssib%base_addr)($ncount_S3, 1 + $I_L1462_28, 0)
 1473.                         endif
 1473.                      endif
 1476.                      $I_L1464_26 = 1 + $I_L1464_26
 1475.                      if ( $I_L1464_26 >= $t_S1 ) exit
 1475.                   enddo
 1475.                endif
 1477.                $I_L1462_28 = 1 + $I_L1462_28
 1476.                if ( $I_L1462_28 >= jbmax ) exit
 1476.             enddo
 1476.          endif
 1480.          $snt_T1 = _mt_single( 2, _mt_rw_list(...) )
 1481.          $Unit_temp_O0 = nfsibo
 1481.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifday, 0x2000200000000L ), _iotype( tod, 0x804060300000000L ), _iotype( (&)(idate%base_addr)(+:( 1, idate%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (&)(idatec%base_addr)(+:( 1, idatec%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
 1482.          $Unit_temp_O1 = nfsibo
 1482.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(tm0%base_addr)(+:( tm0%dim_1%LB, -1 + tm0%dim_1%LB + tm0%dim_1%EX, 1 ), +:( tm0%dim_2%LB, -1 + tm0%dim_2%LB + tm0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tmm%base_addr)(+:( tmm%dim_1%LB, -1 + tmm%dim_1%LB + tmm%dim_1%EX, 1 ), +:( tmm%dim_2%LB, -1 + tmm%dim_2%LB + tmm%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
 1483.          $Unit_temp_O2 = nfsibo
 1483.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(qm0%base_addr)(+:( qm0%dim_1%LB, -1 + qm0%dim_1%LB + qm0%dim_1%EX, 1 ), +:( qm0%dim_2%LB, -1 + qm0%dim_2%LB + qm0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(qmm%base_addr)(+:( qmm%dim_1%LB, -1 + qmm%dim_1%LB + qmm%dim_1%EX, 1 ), +:( qmm%dim_2%LB, -1 + qmm%dim_2%LB + qmm%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
 1484.          $Unit_temp_O3 = nfsibo
 1484.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(td0%base_addr)(+:( td0%dim_1%LB, -1 + td0%dim_1%LB + td0%dim_1%EX, 1 ), +:( td0%dim_2%LB, -1 + td0%dim_2%LB + td0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tdm%base_addr)(+:( tdm%dim_1%LB, -1 + tdm%dim_1%LB + tdm%dim_1%EX, 1 ), +:( tdm%dim_2%LB, -1 + tdm%dim_2%LB + tdm%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
 1485.          $Unit_temp_O4 = nfsibo
 1485.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(tg0%base_addr)(+:( tg0%dim_1%LB, -1 + tg0%dim_1%LB + tg0%dim_1%EX, 1 ), +:( tg0%dim_2%LB, -1 + tg0%dim_2%LB + tg0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tgm%base_addr)(+:( tgm%dim_1%LB, -1 + tgm%dim_1%LB + tgm%dim_1%EX, 1 ), +:( tgm%dim_2%LB, -1 + tgm%dim_2%LB + tgm%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
 1486.          $Unit_temp_O5 = nfsibo
 1486.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(tc0%base_addr)(+:( tc0%dim_1%LB, -1 + tc0%dim_1%LB + tc0%dim_1%EX, 1 ), +:( tc0%dim_2%LB, -1 + tc0%dim_2%LB + tc0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tcm%base_addr)(+:( tcm%dim_1%LB, -1 + tcm%dim_1%LB + tcm%dim_1%EX, 1 ), +:( tcm%dim_2%LB, -1 + tcm%dim_2%LB + tcm%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
 1487.          $Unit_temp_O6 = nfsibo
 1487.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(w0%base_addr)(+:( w0%dim_1%LB, -1 + w0%dim_1%LB + w0%dim_1%EX, 1 ), +:( w0%dim_2%LB, -1 + w0%dim_2%LB + w0%dim_2%EX, 1 ), +:( w0%dim_3%LB, -1 + w0%dim_3%LB + w0%dim_3%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(wm%base_addr)(+:( wm%dim_1%LB, -1 + wm%dim_1%LB + wm%dim_1%EX, 1 ), +:( wm%dim_2%LB, -1 + wm%dim_2%LB + wm%dim_2%EX, 1 ), +:( wm%dim_3%LB, -1 + wm%dim_3%LB + wm%dim_3%EX, 1 ), 0), 0x804060300000000L ) ) )
 1488.          $Unit_temp_O7 = nfsibo
 1488.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O7, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(capac0%base_addr)(+:( capac0%dim_1%LB, -1 + capac0%dim_1%LB + capac0%dim_1%EX, 1 ), +:( capac0%dim_2%LB, -1 + capac0%dim_2%LB + capac0%dim_2%EX, 1 ), +:( capac0%dim_3%LB, -1 + capac0%dim_3%LB + capac0%dim_3%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(capacm%base_addr)(+:( capacm%dim_1%LB, -1 + capacm%dim_1%LB + capacm%dim_1%EX, 1 ), +:( capacm%dim_2%LB, -1 + capacm%dim_2%LB + capacm%dim_2%EX, 1 ), +:( capacm%dim_3%LB, -1 + capacm%dim_3%LB + capacm%dim_3%EX, 1 ), 0), 0x804060300000000L ) ) )
 1489.          $Unit_temp_O8 = nfsibo
 1489.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O8, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(ppci%base_addr)(+:( ppci%dim_1%LB, -1 + ppci%dim_1%LB + ppci%dim_1%EX, 1 ), +:( ppci%dim_2%LB, -1 + ppci%dim_2%LB + ppci%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(ppli%base_addr)(+:( ppli%dim_1%LB, -1 + ppli%dim_1%LB + ppli%dim_1%EX, 1 ), +:( ppli%dim_2%LB, -1 + ppli%dim_2%LB + ppli%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
 1490.          $Unit_temp_O9 = nfsibo
 1490.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O9, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(gl0%base_addr)(+:( gl0%dim_1%LB, -1 + gl0%dim_1%LB + gl0%dim_1%EX, 1 ), +:( gl0%dim_2%LB, -1 + gl0%dim_2%LB + gl0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(zorl%base_addr)(+:( zorl%dim_1%LB, -1 + zorl%dim_1%LB + zorl%dim_1%EX, 1 ), +:( zorl%dim_2%LB, -1 + zorl%dim_2%LB + zorl%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(gtsea%base_addr)(+:( gtsea%dim_1%LB, -1 + gtsea%dim_1%LB + gtsea%dim_1%EX, 1 ), +:( gtsea%dim_2%LB, -1 + gtsea%dim_2%LB + gtsea%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tseam%base_addr)(+:( tseam%dim_1%LB, -1 + tseam%dim_1%LB + tseam%dim_1%EX, 1 ), +:( tseam%dim_2%LB, -1 + tseam%dim_2%LB + tseam%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(qsfc0%base_addr)(+:( qsfc0%dim_1%LB, -1 + qsfc0%dim_1%LB + qsfc0%dim_1%EX, 1 ), +:( qsfc0%dim_2%LB, -1 + qsfc0%dim_2%LB + qsfc0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tsfc0%base_addr)(+:( tsfc0%dim_1%LB, -1 + tsfc0%dim_1%LB + tsfc0%dim_1%EX, 1 ), +:( tsfc0%dim_2%LB, -1 + tsfc0%dim_2%LB + tsfc0%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(qsfcm%base_addr)(+:( qsfcm%dim_1%LB, -1 + qsfcm%dim_1%LB + qsfcm%dim_1%EX, 1 ), +:( qsfcm%dim_2%LB, -1 + qsfcm%dim_2%LB + qsfcm%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(tsfcm%base_addr)(+:( tsfcm%dim_1%LB, -1 + tsfcm%dim_1%LB + tsfcm%dim_1%EX, 1 ), +:( tsfcm%dim_2%LB, -1 + tsfcm%dim_2%LB + tsfcm%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
 1491.          $Unit_temp_O10 = nfsibo
 1491.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O10, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(imask%base_addr)(+:( imask%dim_1%LB, -1 + imask%dim_1%LB + imask%dim_1%EX, 1 ), +:( imask%dim_2%LB, -1 + imask%dim_2%LB + imask%dim_2%EX, 1 ), 0), 0x804060200000000L ) ) )
 1493.          $Unit_temp_O11 = nfcnv1
 1493.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O11, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ifday, 0x2000200000000L ), _iotype( tod, 0x804060300000000L ), _iotype( (&)(idate%base_addr)(+:( 1, idate%dim_1%EX, 1 ), 0), 0x2000200000000L ), _iotype( (&)(idatec%base_addr)(+:( 1, idatec%dim_1%EX, 1 ), 0), 0x2000200000000L ) ) )
 1494.          $Unit_temp_O12 = nfcnv1
 1494.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O12, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(convc%base_addr)(+:( convc%dim_1%LB, -1 + convc%dim_1%LB + convc%dim_1%EX, 1 ), +:( convc%dim_2%LB, -1 + convc%dim_2%LB + convc%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(convt%base_addr)(+:( convt%dim_1%LB, -1 + convt%dim_1%LB + convt%dim_1%EX, 1 ), +:( convt%dim_2%LB, -1 + convt%dim_2%LB + convt%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(convb%base_addr)(+:( convb%dim_1%LB, -1 + convb%dim_1%LB + convb%dim_1%EX, 1 ), +:( convb%dim_2%LB, -1 + convb%dim_2%LB + convb%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(prcp1%base_addr)(+:( prcp1%dim_1%LB, -1 + prcp1%dim_1%LB + prcp1%dim_1%EX, 1 ), +:( prcp1%dim_2%LB, -1 + prcp1%dim_2%LB + prcp1%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(prcp2%base_addr)(+:( prcp2%dim_1%LB, -1 + prcp2%dim_1%LB + prcp2%dim_1%EX, 1 ), +:( prcp2%dim_2%LB, -1 + prcp2%dim_2%LB + prcp2%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(prcp3%base_addr)(+:( prcp3%dim_1%LB, -1 + prcp3%dim_1%LB + prcp3%dim_1%EX, 1 ), +:( prcp3%dim_2%LB, -1 + prcp3%dim_2%LB + prcp3%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(prcpt%base_addr)(+:( prcpt%dim_1%LB, -1 + prcpt%dim_1%LB + prcpt%dim_1%EX, 1 ), +:( prcpt%dim_2%LB, -1 + prcpt%dim_2%LB + prcpt%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(toplv%base_addr)(+:( toplv%dim_1%LB, -1 + toplv%dim_1%LB + toplv%dim_1%EX, 1 ), +:( toplv%dim_2%LB, -1 + toplv%dim_2%LB + toplv%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(botlv%base_addr)(+:( botlv%dim_1%LB, -1 + botlv%dim_1%LB + botlv%dim_1%EX, 1 ), +:( botlv%dim_2%LB, -1 + botlv%dim_2%LB + botlv%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
 1496.          $Unit_temp_O13 = nfcnv1
 1496.          _uwrite( _clist( 0, 0, 3, $Unit_temp_O13, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)(rvisdiff%base_addr)(+:( rvisdiff%dim_1%LB, -1 + rvisdiff%dim_1%LB + rvisdiff%dim_1%EX, 1 ), +:( rvisdiff%dim_2%LB, -1 + rvisdiff%dim_2%LB + rvisdiff%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(rvisbeam%base_addr)(+:( rvisbeam%dim_1%LB, -1 + rvisbeam%dim_1%LB + rvisbeam%dim_1%EX, 1 ), +:( rvisbeam%dim_2%LB, -1 + rvisbeam%dim_2%LB + rvisbeam%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(rnirdiff%base_addr)(+:( rnirdiff%dim_1%LB, -1 + rnirdiff%dim_1%LB + rnirdiff%dim_1%EX, 1 ), +:( rnirdiff%dim_2%LB, -1 + rnirdiff%dim_2%LB + rnirdiff%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(rnirbeam%base_addr)(+:( rnirbeam%dim_1%LB, -1 + rnirbeam%dim_1%LB + rnirbeam%dim_1%EX, 1 ), +:( rnirbeam%dim_2%LB, -1 + rnirbeam%dim_2%LB + rnirbeam%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(rvisdiffc%base_addr)(+:( rvisdiffc%dim_1%LB, -1 + rvisdiffc%dim_1%LB + rvisdiffc%dim_1%EX, 1 ), +:( rvisdiffc%dim_2%LB, -1 + rvisdiffc%dim_2%LB + rvisdiffc%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(rvisbeamc%base_addr)(+:( rvisbeamc%dim_1%LB, -1 + rvisbeamc%dim_1%LB + rvisbeamc%dim_1%EX, 1 ), +:( rvisbeamc%dim_2%LB, -1 + rvisbeamc%dim_2%LB + rvisbeamc%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(rnirdiffc%base_addr)(+:( rnirdiffc%dim_1%LB, -1 + rnirdiffc%dim_1%LB + rnirdiffc%dim_1%EX, 1 ), +:( rnirdiffc%dim_2%LB, -1 + rnirdiffc%dim_2%LB + rnirdiffc%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(rnirbeamc%base_addr)(+:( rnirbeamc%dim_1%LB, -1 + rnirbeamc%dim_1%LB + rnirbeamc%dim_1%EX, 1 ), +:( rnirbeamc%dim_2%LB, -1 + rnirbeamc%dim_2%LB + rnirbeamc%dim_2%EX, 1 ), 0), 0x804060300000000L ), _iotype( (&)(rswtoadown%base_addr)(+:( rswtoadown%dim_1%LB, -1 + rswtoadown%dim_1%LB + rswtoadown%dim_1%EX, 1 ), +:( rswtoadown%dim_2%LB, -1 + rswtoadown%dim_2%LB + rswtoadown%dim_2%EX, 1 ), 0), 0x804060300000000L ) ) )
 1498.          $snt_T1 = _mt_endsingle( 2, _mt_rw_list(...), $snt_T1 )
 1498.       endif
 1501.       return
 1501.       end
 1501.       
  273.       
  273.       module fieldsphysics
  273.       end
  273.       
