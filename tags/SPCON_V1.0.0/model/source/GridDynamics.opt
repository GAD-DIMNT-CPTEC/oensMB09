       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  GridDynamics.f90
       !        File                  :  GridDynamics.opt
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
  636.       
  636.       subroutine grpcomp( gyu, gyv, gtd, gqd, gvdlnp, gdiv, gtmp, grot, gu, gv, gw, gq, gplam, gpphi, gum, gzs, gvm, gtm, gqm, omg, ps, gtlam, gtphi, gqlam, gqphi, gulam, guphi, gvlam, gvphi, gtlamm, gtphim, gplamm, gpphim, glnpm, gdivm, gzslam, gzsphi, gyum, gyvm, gtdm, gqdm, gvdlnpm, colrad, rcl, vmax, ifday, tod, ibmax, kmax, iblim, slagr, jb, lonrad, cos2d, intcosz, cos2lat, ercossin, fcor, cosiv, initial )
  181.       t$2 = ibmax
  181.       t$3 = kmax
  210.       t$39 = _zla( 0, ibmax )
  181.       t$40 = _zla( 0, ibmax )
  210.       t$41 = _zla( 0, kmax )
  181.       t$42 = _zla( 0, ibmax ) * _zla( 0, kmax )
  275.       t$45 = 8 * _zla( 0, ibmax ) * _zla( 0, kmax )
  279.       t$46 = 8 * ( 7 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) / 8
  279.       t$48 = t$46 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax )
  276.       t$49 = 8 * ( 7 + t$46 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) / 8
  276.       t$51 = t$49 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax )
  277.       t$52 = 8 * ( 7 + t$49 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) / 8
  277.       t$54 = t$52 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax )
  278.       t$55 = 8 * ( 7 + t$52 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) / 8
  278.       t$57 = t$55 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax )
  272.       t$58 = 8 * ( 7 + t$55 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) / 8
  272.       t$60 = t$58 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax )
  273.       t$61 = 8 * ( 7 + t$58 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) / 8
  273.       t$63 = t$61 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax )
  270.       t$64 = 8 * ( 7 + t$61 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) / 8
  270.       t$66 = t$64 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax )
  271.       t$67 = 8 * ( 7 + t$64 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) / 8
  271.       t$69 = t$67 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax )
  274.       t$70 = 8 * ( 7 + t$67 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) / 8
  274.       t$72 = t$70 + 8 * _zla( 0, ibmax )
  181.       t$43 = int( _alloc( t$70 + 8 * _zla( 0, ibmax ) ), 8 )
  275.       t$44 = t$43
  279.       t$47 = t$46 + t$43
  276.       t$50 = t$49 + t$43
  277.       t$53 = t$52 + t$43
  278.       t$56 = t$55 + t$43
  272.       t$59 = t$58 + t$43
  273.       t$62 = t$61 + t$43
  270.       t$65 = t$64 + t$43
  271.       t$68 = t$67 + t$43
  274.       t$71 = t$70 + t$43
  286.       $F_A33 = kmax
  286.       $F_A34 = ibmax
  286.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
  286.          $I_L286_1129 = 0
  286.          do
  286.             $I_L286_1037 = 0
  286. !dir$ ivdep
  286.             do
  286.                gyu(1 + $I_L286_1037, 1 + $I_L286_1129) = 0.0
  286.                $I_L286_1037 = 1 + $I_L286_1037
  286.                if ( $I_L286_1037 >= $F_A34 ) exit
  286.             enddo
  286.             $I_L286_1129 = 1 + $I_L286_1129
  286.             if ( $I_L286_1129 >= $F_A33 ) exit
  286.          enddo
  286.       endif
  287.       $F_A35 = kmax
  287.       $F_A36 = ibmax
  287.       if ( and( -$F_A36, -$F_A35 ) < 0 ) then
  287.          $I_L287_1131 = 0
  287.          do
  287.             $I_L287_1039 = 0
  287. !dir$ ivdep
  287.             do
  287.                gyv(1 + $I_L287_1039, 1 + $I_L287_1131) = 0.0
  287.                $I_L287_1039 = 1 + $I_L287_1039
  287.                if ( $I_L287_1039 >= $F_A36 ) exit
  287.             enddo
  287.             $I_L287_1131 = 1 + $I_L287_1131
  287.             if ( $I_L287_1131 >= $F_A35 ) exit
  287.          enddo
  287.       endif
  288.       $F_A37 = kmax
  288.       $F_A38 = ibmax
  288.       if ( and( -$F_A38, -$F_A37 ) < 0 ) then
  288.          $I_L288_1133 = 0
  288.          do
  288.             $I_L288_1041 = 0
  288. !dir$ ivdep
  288.             do
  288.                gtd(1 + $I_L288_1041, 1 + $I_L288_1133) = 0.0
  288.                $I_L288_1041 = 1 + $I_L288_1041
  288.                if ( $I_L288_1041 >= $F_A38 ) exit
  288.             enddo
  288.             $I_L288_1133 = 1 + $I_L288_1133
  288.             if ( $I_L288_1133 >= $F_A37 ) exit
  288.          enddo
  288.       endif
  289.       $F_A39 = kmax
  289.       $F_A40 = ibmax
  289.       if ( and( -$F_A40, -$F_A39 ) < 0 ) then
  289.          $I_L289_1135 = 0
  289.          do
  289.             $I_L289_1043 = 0
  289. !dir$ ivdep
  289.             do
  289.                gqd(1 + $I_L289_1043, 1 + $I_L289_1135) = 0.0
  289.                $I_L289_1043 = 1 + $I_L289_1043
  289.                if ( $I_L289_1043 >= $F_A40 ) exit
  289.             enddo
  289.             $I_L289_1135 = 1 + $I_L289_1135
  289.             if ( $I_L289_1135 >= $F_A39 ) exit
  289.          enddo
  289.       endif
  290.       $F_A41 = ibmax
  290.       if ( ibmax > 0 ) then
  290.          $I_L290_1045 = 0
  290. !dir$ ivdep
  290.          do
  290.             gvdlnp(1 + $I_L290_1045) = 0.0
  290.             $I_L290_1045 = 1 + $I_L290_1045
  290.             if ( $I_L290_1045 >= $F_A41 ) exit
  290.          enddo
  290.       endif
  291.       if ( initial == 1 ) then
  275.          goto 10
  291.       else if ( slagr == .false. ) then
  291.          goto 10
  291.       else if ( sl_twotime_scheme == .false. ) then
  291.    10    continue
  292.          $F_A42 = kmax
  292.          $F_A43 = ibmax
  292.          if ( and( -$F_A43, -$F_A42 ) < 0 ) then
  292.             $I_L292_1137 = 0
  292.             do
  292.                $I_L292_1047 = 0
  292. !dir$ ivdep
  292.                do
  292.                   gyum(1 + $I_L292_1047, 1 + $I_L292_1137) = 0.0
  292.                   $I_L292_1047 = 1 + $I_L292_1047
  292.                   if ( $I_L292_1047 >= $F_A43 ) exit
  292.                enddo
  292.                $I_L292_1137 = 1 + $I_L292_1137
  292.                if ( $I_L292_1137 >= $F_A42 ) exit
  292.             enddo
  292.          endif
  293.          $F_A44 = kmax
  293.          $F_A45 = ibmax
  293.          if ( and( -$F_A45, -$F_A44 ) < 0 ) then
  293.             $I_L293_1139 = 0
  293.             do
  293.                $I_L293_1049 = 0
  293. !dir$ ivdep
  293.                do
  293.                   gyvm(1 + $I_L293_1049, 1 + $I_L293_1139) = 0.0
  293.                   $I_L293_1049 = 1 + $I_L293_1049
  293.                   if ( $I_L293_1049 >= $F_A45 ) exit
  293.                enddo
  293.                $I_L293_1139 = 1 + $I_L293_1139
  293.                if ( $I_L293_1139 >= $F_A44 ) exit
  293.             enddo
  293.          endif
  294.          $F_A46 = kmax
  294.          $F_A47 = ibmax
  294.          if ( and( -$F_A47, -$F_A46 ) < 0 ) then
  294.             $I_L294_1141 = 0
  294.             do
  294.                $I_L294_1051 = 0
  294. !dir$ ivdep
  294.                do
  294.                   gtdm(1 + $I_L294_1051, 1 + $I_L294_1141) = 0.0
  294.                   $I_L294_1051 = 1 + $I_L294_1051
  294.                   if ( $I_L294_1051 >= $F_A47 ) exit
  294.                enddo
  294.                $I_L294_1141 = 1 + $I_L294_1141
  294.                if ( $I_L294_1141 >= $F_A46 ) exit
  294.             enddo
  294.          endif
  295.          $F_A48 = kmax
  295.          $F_A49 = ibmax
  295.          if ( and( -$F_A49, -$F_A48 ) < 0 ) then
  295.             $I_L295_1143 = 0
  295.             do
  295.                $I_L295_1053 = 0
  295. !dir$ ivdep
  295.                do
  295.                   gqdm(1 + $I_L295_1053, 1 + $I_L295_1143) = 0.0
  295.                   $I_L295_1053 = 1 + $I_L295_1053
  295.                   if ( $I_L295_1053 >= $F_A49 ) exit
  295.                enddo
  295.                $I_L295_1143 = 1 + $I_L295_1143
  295.                if ( $I_L295_1143 >= $F_A48 ) exit
  295.             enddo
  295.          endif
  296.          $F_A50 = ibmax
  296.          if ( ibmax > 0 ) then
  296.             $I_L296_1055 = 0
  296. !dir$ ivdep
  296.             do
  296.                gvdlnpm(1 + $I_L296_1055) = 0.0
  296.                $I_L296_1055 = 1 + $I_L296_1055
  296.                if ( $I_L296_1055 >= $F_A50 ) exit
  296.             enddo
  296.          endif
  296.       endif
  298.       latco = jb
  305.       if (  _substr(isimp,1,_ltrim(  _substr(isimp,1,4) )) /= 'YES' ) then
  306.          $F_A51 = kmax
  306.          $F_A52 = ibmax
  306.          if ( and( -$F_A52, -$F_A51 ) < 0 ) then
  306.             $I_L306_1145 = 0
  306.             do
  306.                $I_L306_1057 = 0
  306. !dir$ ivdep
  306.                do
  306.                   gq(1 + $I_L306_1057, 1 + $I_L306_1145) = max( 9.9999999999999998e-13, gq(1 + $I_L306_1057, 1 + $I_L306_1145) )
  306.                   $I_L306_1057 = 1 + $I_L306_1057
  306.                   if ( $I_L306_1057 >= $F_A52 ) exit
  306.                enddo
  306.                $I_L306_1145 = 1 + $I_L306_1145
  306.                if ( $I_L306_1145 >= $F_A51 ) exit
  306.             enddo
  306.          endif
  306.       endif
  309.       if ( (dodia%base_addr)(64, 0) ) then
  307.          goto 20
  309.       else if ( (dodia%base_addr)(65, 0) ) then
  309.          goto 20
  309.       else if ( (dodia%base_addr)(66, 0) /= .false. ) then
  309.    20    continue
  310.          $ncount_S1 = 0
  311.          if ( iblim > 0 ) then
  319.             $SC_tdm_I20 = tdm%dim_1%EX
  319.             $SC_tdm_I21 = tdm%dim_1%LB
  319.             $SC_tdm_I23 = tdm%dim_2%SM
  319.             $SC_tdm_I22 = tdm%dim_2%EX
  319.             $SC_tdm_I24 = tdm%dim_2%LB
  318.             $SC_tgm_I15 = tgm%dim_1%EX
  318.             $SC_tgm_I16 = tgm%dim_1%LB
  318.             $SC_tgm_I18 = tgm%dim_2%SM
  318.             $SC_tgm_I17 = tgm%dim_2%EX
  318.             $SC_tgm_I19 = tgm%dim_2%LB
  317.             $SC_tcm_I10 = tcm%dim_1%EX
  317.             $SC_tcm_I11 = tcm%dim_1%LB
  317.             $SC_tcm_I13 = tcm%dim_2%SM
  317.             $SC_tcm_I12 = tcm%dim_2%EX
  317.             $SC_tcm_I14 = tcm%dim_2%LB
  315.             $SC_imask_I5 = imask%dim_1%EX
  315.             $SC_imask_I6 = imask%dim_1%LB
  315.             $SC_imask_I8 = imask%dim_2%SM
  315.             $SC_imask_I7 = imask%dim_2%EX
  315.             $SC_imask_I9 = imask%dim_2%LB
  312.             $SC_gtsea_I0 = gtsea%dim_1%EX
  312.             $SC_gtsea_I1 = gtsea%dim_1%LB
  312.             $SC_gtsea_I3 = gtsea%dim_2%SM
  312.             $SC_gtsea_I2 = gtsea%dim_2%EX
  312.             $SC_gtsea_I4 = gtsea%dim_2%LB
  311.             $I_L311_945 = 0
  311. !dir$ ivdep
  311.             do
  312.                gdt(1 + $I_L311_945, 1) = -(gtsea%base_addr)(1 + $I_L311_945, jb, 0)
  313.                gdt(1 + $I_L311_945, 2) = -(gtsea%base_addr)(1 + $I_L311_945, jb, 0)
  314.                gdt(1 + $I_L311_945, 3) = -(gtsea%base_addr)(1 + $I_L311_945, jb, 0)
  315.                if ( (imask%base_addr)(1 + $I_L311_945, jb, 0) > 0 ) then
  316.                   $ncount_S1 = 1 + $ncount_S1
  317.                   gdt(1 + $I_L311_945, 1) = (tcm%base_addr)($ncount_S1, jb, 0)
  318.                   gdt(1 + $I_L311_945, 2) = (tgm%base_addr)($ncount_S1, jb, 0)
  319.                   gdt(1 + $I_L311_945, 3) = (tdm%base_addr)($ncount_S1, jb, 0)
  319.                endif
  321.                $I_L311_945 = 1 + $I_L311_945
  320.                if ( $I_L311_945 >= iblim ) exit
  320.             enddo
  320.          endif
  322.          if ( (dodia%base_addr)(64, 0) /= .false. ) then
  322. !dir$ suppress gdt(1, 3)
  322.             t$179 = $_StaticDV_P0
  322.             t$179%base_addr = pointer to array[1] of real (kind=8)( loc( gdt(1, 3) ) )
  322.             t$179%header%el_len = 64
  322.             t$179%header%assoc = 1
  322.             t$179%header%ptr_alloc = 0
  322.             t$179%header%p_or_a = 0
  322.             t$179%header%a_contig = 1
  322.             t$179%header%n_dim = 1
  322.             t$179%header%orig_base = 0
  322.             t$179%header%orig_size = 0
  322.             t$179%header%n_codim = 0
  322.             t$179%header%dv_versn = 2
  322.             t$179%header%dv_smunit = 64
  322.             t$179%header%d_type = 0
  322.             t$179%header%n_params = 0
  322.             t$179%header%d_type_idx = 13
  322.             t$179%dim_1%LB = 1
  322.             t$179%dim_1%EX = ( max( 0, iblim ) )
  322.             t$179%dim_1%SM = 1
  322.             call updia1d( t$179, 64, latco )
  322.          endif
  323.          if ( (dodia%base_addr)(65, 0) /= .false. ) then
  323. !dir$ suppress gdt(1, 2)
  323.             t$180 = $_StaticDV_P1
  323.             t$180%base_addr = pointer to array[1] of real (kind=8)( loc( gdt(1, 2) ) )
  323.             t$180%header%el_len = 64
  323.             t$180%header%assoc = 1
  323.             t$180%header%ptr_alloc = 0
  323.             t$180%header%p_or_a = 0
  323.             t$180%header%a_contig = 1
  323.             t$180%header%n_dim = 1
  323.             t$180%header%orig_base = 0
  323.             t$180%header%orig_size = 0
  323.             t$180%header%n_codim = 0
  323.             t$180%header%dv_versn = 2
  323.             t$180%header%dv_smunit = 64
  323.             t$180%header%d_type = 0
  323.             t$180%header%n_params = 0
  323.             t$180%header%d_type_idx = 13
  323.             t$180%dim_1%LB = 1
  323.             t$180%dim_1%EX = ( max( 0, iblim ) )
  323.             t$180%dim_1%SM = 1
  323.             call updia1d( t$180, 65, latco )
  323.          endif
  324.          if ( (dodia%base_addr)(66, 0) /= .false. ) then
  324. !dir$ suppress gdt(1, 1)
  324.             t$181 = $_StaticDV_P2
  324.             t$181%base_addr = pointer to array[1] of real (kind=8)( loc( gdt(1, 1) ) )
  324.             t$181%header%el_len = 64
  324.             t$181%header%assoc = 1
  324.             t$181%header%ptr_alloc = 0
  324.             t$181%header%p_or_a = 0
  324.             t$181%header%a_contig = 1
  324.             t$181%header%n_dim = 1
  324.             t$181%header%orig_base = 0
  324.             t$181%header%orig_size = 0
  324.             t$181%header%n_codim = 0
  324.             t$181%header%dv_versn = 2
  324.             t$181%header%dv_smunit = 64
  324.             t$181%header%d_type = 0
  324.             t$181%header%n_params = 0
  324.             t$181%header%d_type_idx = 13
  324.             t$181%dim_1%LB = 1
  324.             t$181%dim_1%EX = ( max( 0, iblim ) )
  324.             t$181%dim_1%SM = 1
  324.             call updia1d( t$181, 66, latco )
  324.          endif
  324.       endif
  329.       $t_S2 = isgridhistoryon
  329.       if ( $t_S2 /= .false. ) then
  330.          if ( kmax > 0 ) then
  332.             $SC_tov_I25 = tov%dim_1%EX
  332.             $SC_tov_I26 = tov%dim_1%LB
  331.             if ( iblim > 0 ) then
  330.                $I_L330_1093 = 0
  330.                do
  331.                   $SCA_tov_I75 = (tov%base_addr)(1 + $I_L330_1093, 0)
  331.                   $I_L331_947 = 0
  331. !dir$ ivdep
  331.                   do
  332.                      gtd(1 + $I_L331_947, 1 + $I_L330_1093) = $SCA_tov_I75 + gtmp(1 + $I_L331_947, 1 + $I_L330_1093)
  333.                      $I_L331_947 = 1 + $I_L331_947
  331.                      if ( $I_L331_947 >= iblim ) exit
  331.                   enddo
  334.                   $I_L330_1093 = 1 + $I_L330_1093
  333.                   if ( $I_L330_1093 >= kmax ) exit
  333.                enddo
  333.             endif
  333.          endif
  336.          if ( (dogrh%base_addr)(60, latco, 0) /= .false. ) then
  336. !dir$ suppress gtd(1, 1)
  336.             t$189 = $_StaticDV_P3
  336.             t$189%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( gtd(1, 1) ) )
  336.             t$189%header%el_len = 64
  336.             t$189%header%assoc = 1
  336.             t$189%header%ptr_alloc = 0
  336.             t$189%header%p_or_a = 0
  336.             t$189%header%a_contig = 0
  336.             t$189%header%n_dim = 2
  336.             t$189%header%orig_base = 0
  336.             t$189%header%orig_size = 0
  336.             t$189%header%n_codim = 0
  336.             t$189%header%dv_versn = 2
  336.             t$189%header%dv_smunit = 64
  336.             t$189%header%d_type = 0
  336.             t$189%header%n_params = 0
  336.             t$189%header%d_type_idx = 13
  336.             t$189%dim_1%LB = 1
  336.             t$189%dim_1%EX = ( max( 0, iblim ) )
  336.             t$189%dim_1%SM = 1
  336.             t$189%dim_2%LB = 1
  336.             t$189%dim_2%EX = ( max( 0, kmax ) )
  336.             t$189%dim_2%SM = _zla( 0, ibmax )
  336.             call store2d( t$189, 60, latco, 0 )
  336.          endif
  337.          if ( (dogrh%base_addr)(58, latco, 0) /= .false. ) then
  337. !dir$ suppress gu(1, 1)
  337.             t$190 = $_StaticDV_P4
  337.             t$190%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( gu(1, 1) ) )
  337.             t$190%header%el_len = 64
  337.             t$190%header%assoc = 1
  337.             t$190%header%ptr_alloc = 0
  337.             t$190%header%p_or_a = 0
  337.             t$190%header%a_contig = 0
  337.             t$190%header%n_dim = 2
  337.             t$190%header%orig_base = 0
  337.             t$190%header%orig_size = 0
  337.             t$190%header%n_codim = 0
  337.             t$190%header%dv_versn = 2
  337.             t$190%header%dv_smunit = 64
  337.             t$190%header%d_type = 0
  337.             t$190%header%n_params = 0
  337.             t$190%header%d_type_idx = 13
  337.             t$190%dim_1%LB = 1
  337.             t$190%dim_1%EX = ( max( 0, iblim ) )
  337.             t$190%dim_1%SM = 1
  337.             t$190%dim_2%LB = 1
  337.             t$190%dim_2%EX = ( max( 0, kmax ) )
  337.             t$190%dim_2%SM = _zla( 0, ibmax )
  337.             t$191 = ( max( 0, iblim ) )
  337.             t$194 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, iblim ) ) ) ) ), 8 )
  337.             $F_A53 = iblim
  337.             if ( iblim > 0 ) then
  337.                $I_L337_1059 = 0
  337. !dir$ ivdep
  337.                do
  337.                   t$193(1 + $I_L337_1059) = _sqrt( rcl(1 + $I_L337_1059) )
  337.                   $I_L337_1059 = 1 + $I_L337_1059
  337.                   if ( $I_L337_1059 >= $F_A53 ) exit
  337.                enddo
  337.             endif
  337. !dir$ suppress t$193(1)
  337.             t$195 = $_StaticDV_P5
  337.             t$195%base_addr = pointer to array[1] of real (kind=8)( loc( t$193(1) ) )
  337.             t$195%header%el_len = 64
  337.             t$195%header%assoc = 1
  337.             t$195%header%ptr_alloc = 0
  337.             t$195%header%p_or_a = 0
  337.             t$195%header%a_contig = 1
  337.             t$195%header%n_dim = 1
  337.             t$195%header%orig_base = 0
  337.             t$195%header%orig_size = 0
  337.             t$195%header%n_codim = 0
  337.             t$195%header%dv_versn = 2
  337.             t$195%header%dv_smunit = 64
  337.             t$195%header%d_type = 0
  337.             t$195%header%n_params = 0
  337.             t$195%header%d_type_idx = 13
  337.             t$195%dim_1%LB = 1
  337.             t$195%dim_1%EX = ( max( 0, ( max( 0, iblim ) ) ) )
  337.             t$195%dim_1%SM = 1
  337.             call store2dv( t$190, 58, latco, t$195 )
  337.             _free( t$194 )
  337.          endif
  338.          if ( (dogrh%base_addr)(59, latco, 0) /= .false. ) then
  338. !dir$ suppress gv(1, 1)
  338.             t$196 = $_StaticDV_P6
  338.             t$196%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( gv(1, 1) ) )
  338.             t$196%header%el_len = 64
  338.             t$196%header%assoc = 1
  338.             t$196%header%ptr_alloc = 0
  338.             t$196%header%p_or_a = 0
  338.             t$196%header%a_contig = 0
  338.             t$196%header%n_dim = 2
  338.             t$196%header%orig_base = 0
  338.             t$196%header%orig_size = 0
  338.             t$196%header%n_codim = 0
  338.             t$196%header%dv_versn = 2
  338.             t$196%header%dv_smunit = 64
  338.             t$196%header%d_type = 0
  338.             t$196%header%n_params = 0
  338.             t$196%header%d_type_idx = 13
  338.             t$196%dim_1%LB = 1
  338.             t$196%dim_1%EX = ( max( 0, iblim ) )
  338.             t$196%dim_1%SM = 1
  338.             t$196%dim_2%LB = 1
  338.             t$196%dim_2%EX = ( max( 0, kmax ) )
  338.             t$196%dim_2%SM = _zla( 0, ibmax )
  338.             t$197 = ( max( 0, iblim ) )
  338.             t$200 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, iblim ) ) ) ) ), 8 )
  338.             $F_A54 = iblim
  338.             if ( iblim > 0 ) then
  338.                $I_L338_1061 = 0
  338. !dir$ ivdep
  338.                do
  338.                   t$199(1 + $I_L338_1061) = _sqrt( rcl(1 + $I_L338_1061) )
  338.                   $I_L338_1061 = 1 + $I_L338_1061
  338.                   if ( $I_L338_1061 >= $F_A54 ) exit
  338.                enddo
  338.             endif
  338. !dir$ suppress t$199(1)
  338.             t$201 = $_StaticDV_P7
  338.             t$201%base_addr = pointer to array[1] of real (kind=8)( loc( t$199(1) ) )
  338.             t$201%header%el_len = 64
  338.             t$201%header%assoc = 1
  338.             t$201%header%ptr_alloc = 0
  338.             t$201%header%p_or_a = 0
  338.             t$201%header%a_contig = 1
  338.             t$201%header%n_dim = 1
  338.             t$201%header%orig_base = 0
  338.             t$201%header%orig_size = 0
  338.             t$201%header%n_codim = 0
  338.             t$201%header%dv_versn = 2
  338.             t$201%header%dv_smunit = 64
  338.             t$201%header%d_type = 0
  338.             t$201%header%n_params = 0
  338.             t$201%header%d_type_idx = 13
  338.             t$201%dim_1%LB = 1
  338.             t$201%dim_1%EX = ( max( 0, ( max( 0, iblim ) ) ) )
  338.             t$201%dim_1%SM = 1
  338.             call store2dv( t$196, 59, latco, t$201 )
  338.             _free( t$200 )
  338.          endif
  339.          if ( (dogrh%base_addr)(61, latco, 0) /= .false. ) then
  339. !dir$ suppress gq(1, 1)
  339.             t$202 = $_StaticDV_P8
  339.             t$202%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( gq(1, 1) ) )
  339.             t$202%header%el_len = 64
  339.             t$202%header%assoc = 1
  339.             t$202%header%ptr_alloc = 0
  339.             t$202%header%p_or_a = 0
  339.             t$202%header%a_contig = 0
  339.             t$202%header%n_dim = 2
  339.             t$202%header%orig_base = 0
  339.             t$202%header%orig_size = 0
  339.             t$202%header%n_codim = 0
  339.             t$202%header%dv_versn = 2
  339.             t$202%header%dv_smunit = 64
  339.             t$202%header%d_type = 0
  339.             t$202%header%n_params = 0
  339.             t$202%header%d_type_idx = 13
  339.             t$202%dim_1%LB = 1
  339.             t$202%dim_1%EX = ( max( 0, iblim ) )
  339.             t$202%dim_1%SM = 1
  339.             t$202%dim_2%LB = 1
  339.             t$202%dim_2%EX = ( max( 0, kmax ) )
  339.             t$202%dim_2%SM = _zla( 0, ibmax )
  339.             call store2d( t$202, 61, latco, 0 )
  339.          endif
  341.          if ( (dogrh%base_addr)(78, latco, 0) /= .false. ) then
  341. !dir$ suppress gtd(1, 1)
  341.             t$203 = $_StaticDV_P9
  341.             t$203%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 1) ) )
  341.             t$203%header%el_len = 64
  341.             t$203%header%assoc = 1
  341.             t$203%header%ptr_alloc = 0
  341.             t$203%header%p_or_a = 0
  341.             t$203%header%a_contig = 1
  341.             t$203%header%n_dim = 1
  341.             t$203%header%orig_base = 0
  341.             t$203%header%orig_size = 0
  341.             t$203%header%n_codim = 0
  341.             t$203%header%dv_versn = 2
  341.             t$203%header%dv_smunit = 64
  341.             t$203%header%d_type = 0
  341.             t$203%header%n_params = 0
  341.             t$203%header%d_type_idx = 13
  341.             t$203%dim_1%LB = 1
  341.             t$203%dim_1%EX = ( max( 0, iblim ) )
  341.             t$203%dim_1%SM = 1
  341.             call store1d( t$203, 78, latco, 0 )
  341.          endif
  342.          if ( (dogrh%base_addr)(76, latco, 0) /= .false. ) then
  342. !dir$ suppress gu(1, 1)
  342.             t$204 = $_StaticDV_P10
  342.             t$204%base_addr = pointer to array[1] of real (kind=8)( loc( gu(1, 1) ) )
  342.             t$204%header%el_len = 64
  342.             t$204%header%assoc = 1
  342.             t$204%header%ptr_alloc = 0
  342.             t$204%header%p_or_a = 0
  342.             t$204%header%a_contig = 1
  342.             t$204%header%n_dim = 1
  342.             t$204%header%orig_base = 0
  342.             t$204%header%orig_size = 0
  342.             t$204%header%n_codim = 0
  342.             t$204%header%dv_versn = 2
  342.             t$204%header%dv_smunit = 64
  342.             t$204%header%d_type = 0
  342.             t$204%header%n_params = 0
  342.             t$204%header%d_type_idx = 13
  342.             t$204%dim_1%LB = 1
  342.             t$204%dim_1%EX = ( max( 0, iblim ) )
  342.             t$204%dim_1%SM = 1
  342.             t$205 = ( max( 0, iblim ) )
  342.             t$208 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, iblim ) ) ) ) ), 8 )
  342.             $F_A55 = iblim
  342.             if ( iblim > 0 ) then
  342.                $I_L342_1063 = 0
  342. !dir$ ivdep
  342.                do
  342.                   t$207(1 + $I_L342_1063) = _sqrt( rcl(1 + $I_L342_1063) )
  342.                   $I_L342_1063 = 1 + $I_L342_1063
  342.                   if ( $I_L342_1063 >= $F_A55 ) exit
  342.                enddo
  342.             endif
  342. !dir$ suppress t$207(1)
  342.             t$209 = $_StaticDV_P11
  342.             t$209%base_addr = pointer to array[1] of real (kind=8)( loc( t$207(1) ) )
  342.             t$209%header%el_len = 64
  342.             t$209%header%assoc = 1
  342.             t$209%header%ptr_alloc = 0
  342.             t$209%header%p_or_a = 0
  342.             t$209%header%a_contig = 1
  342.             t$209%header%n_dim = 1
  342.             t$209%header%orig_base = 0
  342.             t$209%header%orig_size = 0
  342.             t$209%header%n_codim = 0
  342.             t$209%header%dv_versn = 2
  342.             t$209%header%dv_smunit = 64
  342.             t$209%header%d_type = 0
  342.             t$209%header%n_params = 0
  342.             t$209%header%d_type_idx = 13
  342.             t$209%dim_1%LB = 1
  342.             t$209%dim_1%EX = ( max( 0, ( max( 0, iblim ) ) ) )
  342.             t$209%dim_1%SM = 1
  342.             call store1dv( t$204, 76, latco, t$209 )
  342.             _free( t$208 )
  342.          endif
  343.          if ( (dogrh%base_addr)(77, latco, 0) /= .false. ) then
  343. !dir$ suppress gv(1, 1)
  343.             t$210 = $_StaticDV_P12
  343.             t$210%base_addr = pointer to array[1] of real (kind=8)( loc( gv(1, 1) ) )
  343.             t$210%header%el_len = 64
  343.             t$210%header%assoc = 1
  343.             t$210%header%ptr_alloc = 0
  343.             t$210%header%p_or_a = 0
  343.             t$210%header%a_contig = 1
  343.             t$210%header%n_dim = 1
  343.             t$210%header%orig_base = 0
  343.             t$210%header%orig_size = 0
  343.             t$210%header%n_codim = 0
  343.             t$210%header%dv_versn = 2
  343.             t$210%header%dv_smunit = 64
  343.             t$210%header%d_type = 0
  343.             t$210%header%n_params = 0
  343.             t$210%header%d_type_idx = 13
  343.             t$210%dim_1%LB = 1
  343.             t$210%dim_1%EX = ( max( 0, iblim ) )
  343.             t$210%dim_1%SM = 1
  343.             t$211 = ( max( 0, iblim ) )
  343.             t$214 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, iblim ) ) ) ) ), 8 )
  343.             $F_A56 = iblim
  343.             if ( iblim > 0 ) then
  343.                $I_L343_1065 = 0
  343. !dir$ ivdep
  343.                do
  343.                   t$213(1 + $I_L343_1065) = _sqrt( rcl(1 + $I_L343_1065) )
  343.                   $I_L343_1065 = 1 + $I_L343_1065
  343.                   if ( $I_L343_1065 >= $F_A56 ) exit
  343.                enddo
  343.             endif
  343. !dir$ suppress t$213(1)
  343.             t$215 = $_StaticDV_P13
  343.             t$215%base_addr = pointer to array[1] of real (kind=8)( loc( t$213(1) ) )
  343.             t$215%header%el_len = 64
  343.             t$215%header%assoc = 1
  343.             t$215%header%ptr_alloc = 0
  343.             t$215%header%p_or_a = 0
  343.             t$215%header%a_contig = 1
  343.             t$215%header%n_dim = 1
  343.             t$215%header%orig_base = 0
  343.             t$215%header%orig_size = 0
  343.             t$215%header%n_codim = 0
  343.             t$215%header%dv_versn = 2
  343.             t$215%header%dv_smunit = 64
  343.             t$215%header%d_type = 0
  343.             t$215%header%n_params = 0
  343.             t$215%header%d_type_idx = 13
  343.             t$215%dim_1%LB = 1
  343.             t$215%dim_1%EX = ( max( 0, ( max( 0, iblim ) ) ) )
  343.             t$215%dim_1%SM = 1
  343.             call store1dv( t$210, 77, latco, t$215 )
  343.             _free( t$214 )
  343.          endif
  344.          if ( (dogrh%base_addr)(79, latco, 0) /= .false. ) then
  344. !dir$ suppress gq(1, 1)
  344.             t$216 = $_StaticDV_P14
  344.             t$216%base_addr = pointer to array[1] of real (kind=8)( loc( gq(1, 1) ) )
  344.             t$216%header%el_len = 64
  344.             t$216%header%assoc = 1
  344.             t$216%header%ptr_alloc = 0
  344.             t$216%header%p_or_a = 0
  344.             t$216%header%a_contig = 1
  344.             t$216%header%n_dim = 1
  344.             t$216%header%orig_base = 0
  344.             t$216%header%orig_size = 0
  344.             t$216%header%n_codim = 0
  344.             t$216%header%dv_versn = 2
  344.             t$216%header%dv_smunit = 64
  344.             t$216%header%d_type = 0
  344.             t$216%header%n_params = 0
  344.             t$216%header%d_type_idx = 13
  344.             t$216%dim_1%LB = 1
  344.             t$216%dim_1%EX = ( max( 0, iblim ) )
  344.             t$216%dim_1%SM = 1
  344.             call store1d( t$216, 79, latco, 0 )
  344.          endif
  346.          if ( (dogrh%base_addr)(10, latco, 0) /= .false. ) then
  346. !dir$ suppress (sheleg%base_addr)(1, latco, 0)
  346.             t$217 = $_StaticDV_P15
  346.             t$217%base_addr = pointer to array[1] of real (kind=8)( loc( (sheleg%base_addr)(1, latco, 0) ) )
  346.             t$217%header%el_len = 64
  346.             t$217%header%assoc = 1
  346.             t$217%header%ptr_alloc = sheleg%header%ptr_alloc
  346.             t$217%header%p_or_a = 0
  346.             t$217%header%a_contig = sheleg%header%a_contig
  346.             t$217%header%n_dim = 1
  346.             t$217%header%orig_base = sheleg%header%orig_base
  346.             t$217%header%orig_size = sheleg%header%orig_size
  346.             t$217%header%n_codim = 0
  346.             t$217%header%dv_versn = 2
  346.             t$217%header%dv_smunit = 64
  346.             t$217%header%d_type = 0
  346.             t$217%header%n_params = 0
  346.             t$217%header%d_type_idx = 13
  346.             t$217%dim_1%LB = 1
  346.             t$217%dim_1%EX = ( max( 0, iblim ) )
  346.             t$217%dim_1%SM = sheleg%dim_1%SM
  346.             call store1d( t$217, 10, latco, 0 )
  346.          endif
  347.          if ( (dogrh%base_addr)(12, latco, 0) /= .false. ) then
  347. !dir$ suppress (zorl%base_addr)(1, latco, 0)
  347.             t$218 = $_StaticDV_P16
  347.             t$218%base_addr = pointer to array[1] of real (kind=8)( loc( (zorl%base_addr)(1, latco, 0) ) )
  347.             t$218%header%el_len = 64
  347.             t$218%header%assoc = 1
  347.             t$218%header%ptr_alloc = zorl%header%ptr_alloc
  347.             t$218%header%p_or_a = 0
  347.             t$218%header%a_contig = zorl%header%a_contig
  347.             t$218%header%n_dim = 1
  347.             t$218%header%orig_base = zorl%header%orig_base
  347.             t$218%header%orig_size = zorl%header%orig_size
  347.             t$218%header%n_codim = 0
  347.             t$218%header%dv_versn = 2
  347.             t$218%header%dv_smunit = 64
  347.             t$218%header%d_type = 0
  347.             t$218%header%n_params = 0
  347.             t$218%header%d_type_idx = 13
  347.             t$218%dim_1%LB = 1
  347.             t$218%dim_1%EX = ( max( 0, iblim ) )
  347.             t$218%dim_1%SM = zorl%dim_1%SM
  347.             call store1d( t$218, 12, latco, 0 )
  347.          endif
  349.          $ncount_S6 = 0
  350.          if ( iblim > 0 ) then
  368.             $SC_capacm_I35 = capacm%dim_1%EX
  368.             $SC_capacm_I36 = capacm%dim_1%LB
  368.             $SC_capacm_I38 = capacm%dim_2%SM
  368.             $SC_capacm_I37 = capacm%dim_2%EX
  368.             $SC_capacm_I39 = capacm%dim_2%LB
  368.             $SC_capacm_I41 = capacm%dim_3%SM
  368.             $SC_capacm_I40 = capacm%dim_3%EX
  368.             $SC_capacm_I42 = capacm%dim_3%LB
  365.             $SC_wm_I27 = wm%dim_1%EX
  365.             $SC_wm_I28 = wm%dim_1%LB
  365.             $SC_wm_I30 = wm%dim_2%SM
  365.             $SC_wm_I29 = wm%dim_2%EX
  365.             $SC_wm_I31 = wm%dim_2%LB
  365.             $SC_wm_I33 = wm%dim_3%SM
  365.             $SC_wm_I32 = wm%dim_3%EX
  365.             $SC_wm_I34 = wm%dim_3%LB
  364.             $SC_tdm_I20 = tdm%dim_1%EX
  364.             $SC_tdm_I21 = tdm%dim_1%LB
  364.             $SC_tdm_I23 = tdm%dim_2%SM
  364.             $SC_tdm_I22 = tdm%dim_2%EX
  364.             $SC_tdm_I24 = tdm%dim_2%LB
  363.             $SC_tgm_I15 = tgm%dim_1%EX
  363.             $SC_tgm_I16 = tgm%dim_1%LB
  363.             $SC_tgm_I18 = tgm%dim_2%SM
  363.             $SC_tgm_I17 = tgm%dim_2%EX
  363.             $SC_tgm_I19 = tgm%dim_2%LB
  362.             $SC_tcm_I10 = tcm%dim_1%EX
  362.             $SC_tcm_I11 = tcm%dim_1%LB
  362.             $SC_tcm_I13 = tcm%dim_2%SM
  362.             $SC_tcm_I12 = tcm%dim_2%EX
  362.             $SC_tcm_I14 = tcm%dim_2%LB
  359.             $SC_imask_I5 = imask%dim_1%EX
  359.             $SC_imask_I6 = imask%dim_1%LB
  359.             $SC_imask_I8 = imask%dim_2%SM
  359.             $SC_imask_I7 = imask%dim_2%EX
  359.             $SC_imask_I9 = imask%dim_2%LB
  351.             $SC_gtsea_I0 = gtsea%dim_1%EX
  351.             $SC_gtsea_I1 = gtsea%dim_1%LB
  351.             $SC_gtsea_I3 = gtsea%dim_2%SM
  351.             $SC_gtsea_I2 = gtsea%dim_2%EX
  351.             $SC_gtsea_I4 = gtsea%dim_2%LB
  350.             $I_L350_949 = 0
  350. !dir$ ivdep
  350.             do
  351.                gtd(1 + $I_L350_949, 1) = (gtsea%base_addr)(1 + $I_L350_949, latco, 0)
  352.                gtd(1 + $I_L350_949, 2) = (gtsea%base_addr)(1 + $I_L350_949, latco, 0)
  353.                gtd(1 + $I_L350_949, 3) = (gtsea%base_addr)(1 + $I_L350_949, latco, 0)
  354.                gtd(1 + $I_L350_949, 4) = 1.0
  355.                gtd(1 + $I_L350_949, 5) = 1.0
  356.                gtd(1 + $I_L350_949, 6) = 1.0
  357.                gtd(1 + $I_L350_949, 7) = 0.0
  358.                gtd(1 + $I_L350_949, 8) = 0.0
  359.                gtd(1 + $I_L350_949, 9) = real( (imask%base_addr)(1 + $I_L350_949, latco, 0), 8 )
  360.                if ( (imask%base_addr)(1 + $I_L350_949, latco, 0) > 0 ) then
  361.                   $ncount_S6 = 1 + $ncount_S6
  362.                   gtd(1 + $I_L350_949, 1) = (tcm%base_addr)($ncount_S6, latco, 0)
  363.                   gtd(1 + $I_L350_949, 2) = (tgm%base_addr)($ncount_S6, latco, 0)
  364.                   gtd(1 + $I_L350_949, 3) = (tdm%base_addr)($ncount_S6, latco, 0)
  365.                   gtd(1 + $I_L350_949, 4) = (wm%base_addr)($ncount_S6, 1, latco, 0)
  366.                   gtd(1 + $I_L350_949, 5) = (wm%base_addr)($ncount_S6, 2, latco, 0)
  367.                   gtd(1 + $I_L350_949, 6) = (wm%base_addr)($ncount_S6, 3, latco, 0)
  368.                   gtd(1 + $I_L350_949, 7) = (capacm%base_addr)($ncount_S6, 1, latco, 0)
  369.                   gtd(1 + $I_L350_949, 8) = (capacm%base_addr)($ncount_S6, 2, latco, 0)
  369.                endif
  371.                $I_L350_949 = 1 + $I_L350_949
  370.                if ( $I_L350_949 >= iblim ) exit
  370.             enddo
  370.          endif
  373.          if ( (dogrh%base_addr)(2, latco, 0) /= .false. ) then
  373. !dir$ suppress gtd(1, 1)
  373.             t$222 = $_StaticDV_P17
  373.             t$222%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 1) ) )
  373.             t$222%header%el_len = 64
  373.             t$222%header%assoc = 1
  373.             t$222%header%ptr_alloc = 0
  373.             t$222%header%p_or_a = 0
  373.             t$222%header%a_contig = 1
  373.             t$222%header%n_dim = 1
  373.             t$222%header%orig_base = 0
  373.             t$222%header%orig_size = 0
  373.             t$222%header%n_codim = 0
  373.             t$222%header%dv_versn = 2
  373.             t$222%header%dv_smunit = 64
  373.             t$222%header%d_type = 0
  373.             t$222%header%n_params = 0
  373.             t$222%header%d_type_idx = 13
  373.             t$222%dim_1%LB = 1
  373.             t$222%dim_1%EX = ( max( 0, iblim ) )
  373.             t$222%dim_1%SM = 1
  373.             call store1d( t$222, 2, latco, 0 )
  373.          endif
  374.          if ( (dogrh%base_addr)(3, latco, 0) /= .false. ) then
  374. !dir$ suppress gtd(1, 2)
  374.             t$223 = $_StaticDV_P18
  374.             t$223%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 2) ) )
  374.             t$223%header%el_len = 64
  374.             t$223%header%assoc = 1
  374.             t$223%header%ptr_alloc = 0
  374.             t$223%header%p_or_a = 0
  374.             t$223%header%a_contig = 1
  374.             t$223%header%n_dim = 1
  374.             t$223%header%orig_base = 0
  374.             t$223%header%orig_size = 0
  374.             t$223%header%n_codim = 0
  374.             t$223%header%dv_versn = 2
  374.             t$223%header%dv_smunit = 64
  374.             t$223%header%d_type = 0
  374.             t$223%header%n_params = 0
  374.             t$223%header%d_type_idx = 13
  374.             t$223%dim_1%LB = 1
  374.             t$223%dim_1%EX = ( max( 0, iblim ) )
  374.             t$223%dim_1%SM = 1
  374.             call store1d( t$223, 3, latco, 0 )
  374.          endif
  375.          if ( (dogrh%base_addr)(4, latco, 0) /= .false. ) then
  375. !dir$ suppress gtd(1, 3)
  375.             t$224 = $_StaticDV_P19
  375.             t$224%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 3) ) )
  375.             t$224%header%el_len = 64
  375.             t$224%header%assoc = 1
  375.             t$224%header%ptr_alloc = 0
  375.             t$224%header%p_or_a = 0
  375.             t$224%header%a_contig = 1
  375.             t$224%header%n_dim = 1
  375.             t$224%header%orig_base = 0
  375.             t$224%header%orig_size = 0
  375.             t$224%header%n_codim = 0
  375.             t$224%header%dv_versn = 2
  375.             t$224%header%dv_smunit = 64
  375.             t$224%header%d_type = 0
  375.             t$224%header%n_params = 0
  375.             t$224%header%d_type_idx = 13
  375.             t$224%dim_1%LB = 1
  375.             t$224%dim_1%EX = ( max( 0, iblim ) )
  375.             t$224%dim_1%SM = 1
  375.             call store1d( t$224, 4, latco, 0 )
  375.          endif
  376.          if ( (dogrh%base_addr)(5, latco, 0) /= .false. ) then
  376. !dir$ suppress gtd(1, 4)
  376.             t$225 = $_StaticDV_P20
  376.             t$225%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 4) ) )
  376.             t$225%header%el_len = 64
  376.             t$225%header%assoc = 1
  376.             t$225%header%ptr_alloc = 0
  376.             t$225%header%p_or_a = 0
  376.             t$225%header%a_contig = 1
  376.             t$225%header%n_dim = 1
  376.             t$225%header%orig_base = 0
  376.             t$225%header%orig_size = 0
  376.             t$225%header%n_codim = 0
  376.             t$225%header%dv_versn = 2
  376.             t$225%header%dv_smunit = 64
  376.             t$225%header%d_type = 0
  376.             t$225%header%n_params = 0
  376.             t$225%header%d_type_idx = 13
  376.             t$225%dim_1%LB = 1
  376.             t$225%dim_1%EX = ( max( 0, iblim ) )
  376.             t$225%dim_1%SM = 1
  376.             call store1d( t$225, 5, latco, 0 )
  376.          endif
  377.          if ( (dogrh%base_addr)(6, latco, 0) /= .false. ) then
  377. !dir$ suppress gtd(1, 5)
  377.             t$226 = $_StaticDV_P21
  377.             t$226%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 5) ) )
  377.             t$226%header%el_len = 64
  377.             t$226%header%assoc = 1
  377.             t$226%header%ptr_alloc = 0
  377.             t$226%header%p_or_a = 0
  377.             t$226%header%a_contig = 1
  377.             t$226%header%n_dim = 1
  377.             t$226%header%orig_base = 0
  377.             t$226%header%orig_size = 0
  377.             t$226%header%n_codim = 0
  377.             t$226%header%dv_versn = 2
  377.             t$226%header%dv_smunit = 64
  377.             t$226%header%d_type = 0
  377.             t$226%header%n_params = 0
  377.             t$226%header%d_type_idx = 13
  377.             t$226%dim_1%LB = 1
  377.             t$226%dim_1%EX = ( max( 0, iblim ) )
  377.             t$226%dim_1%SM = 1
  377.             call store1d( t$226, 6, latco, 0 )
  377.          endif
  378.          if ( (dogrh%base_addr)(7, latco, 0) /= .false. ) then
  378. !dir$ suppress gtd(1, 6)
  378.             t$227 = $_StaticDV_P22
  378.             t$227%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 6) ) )
  378.             t$227%header%el_len = 64
  378.             t$227%header%assoc = 1
  378.             t$227%header%ptr_alloc = 0
  378.             t$227%header%p_or_a = 0
  378.             t$227%header%a_contig = 1
  378.             t$227%header%n_dim = 1
  378.             t$227%header%orig_base = 0
  378.             t$227%header%orig_size = 0
  378.             t$227%header%n_codim = 0
  378.             t$227%header%dv_versn = 2
  378.             t$227%header%dv_smunit = 64
  378.             t$227%header%d_type = 0
  378.             t$227%header%n_params = 0
  378.             t$227%header%d_type_idx = 13
  378.             t$227%dim_1%LB = 1
  378.             t$227%dim_1%EX = ( max( 0, iblim ) )
  378.             t$227%dim_1%SM = 1
  378.             call store1d( t$227, 7, latco, 0 )
  378.          endif
  379.          if ( (dogrh%base_addr)(8, latco, 0) /= .false. ) then
  379. !dir$ suppress gtd(1, 7)
  379.             t$228 = $_StaticDV_P23
  379.             t$228%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 7) ) )
  379.             t$228%header%el_len = 64
  379.             t$228%header%assoc = 1
  379.             t$228%header%ptr_alloc = 0
  379.             t$228%header%p_or_a = 0
  379.             t$228%header%a_contig = 1
  379.             t$228%header%n_dim = 1
  379.             t$228%header%orig_base = 0
  379.             t$228%header%orig_size = 0
  379.             t$228%header%n_codim = 0
  379.             t$228%header%dv_versn = 2
  379.             t$228%header%dv_smunit = 64
  379.             t$228%header%d_type = 0
  379.             t$228%header%n_params = 0
  379.             t$228%header%d_type_idx = 13
  379.             t$228%dim_1%LB = 1
  379.             t$228%dim_1%EX = ( max( 0, iblim ) )
  379.             t$228%dim_1%SM = 1
  379.             call store1d( t$228, 8, latco, 1000.0 )
  379.          endif
  380.          if ( (dogrh%base_addr)(9, latco, 0) /= .false. ) then
  380. !dir$ suppress gtd(1, 8)
  380.             t$229 = $_StaticDV_P24
  380.             t$229%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 8) ) )
  380.             t$229%header%el_len = 64
  380.             t$229%header%assoc = 1
  380.             t$229%header%ptr_alloc = 0
  380.             t$229%header%p_or_a = 0
  380.             t$229%header%a_contig = 1
  380.             t$229%header%n_dim = 1
  380.             t$229%header%orig_base = 0
  380.             t$229%header%orig_size = 0
  380.             t$229%header%n_codim = 0
  380.             t$229%header%dv_versn = 2
  380.             t$229%header%dv_smunit = 64
  380.             t$229%header%d_type = 0
  380.             t$229%header%n_params = 0
  380.             t$229%header%d_type_idx = 13
  380.             t$229%dim_1%LB = 1
  380.             t$229%dim_1%EX = ( max( 0, iblim ) )
  380.             t$229%dim_1%SM = 1
  380.             call store1d( t$229, 9, latco, 1000.0 )
  380.          endif
  381.          if ( (dogrh%base_addr)(32, latco, 0) /= .false. ) then
  381. !dir$ suppress gtd(1, 9)
  381.             t$230 = $_StaticDV_P25
  381.             t$230%base_addr = pointer to array[1] of real (kind=8)( loc( gtd(1, 9) ) )
  381.             t$230%header%el_len = 64
  381.             t$230%header%assoc = 1
  381.             t$230%header%ptr_alloc = 0
  381.             t$230%header%p_or_a = 0
  381.             t$230%header%a_contig = 1
  381.             t$230%header%n_dim = 1
  381.             t$230%header%orig_base = 0
  381.             t$230%header%orig_size = 0
  381.             t$230%header%n_codim = 0
  381.             t$230%header%dv_versn = 2
  381.             t$230%header%dv_smunit = 64
  381.             t$230%header%d_type = 0
  381.             t$230%header%n_params = 0
  381.             t$230%header%d_type_idx = 13
  381.             t$230%dim_1%LB = 1
  381.             t$230%dim_1%EX = ( max( 0, iblim ) )
  381.             t$230%dim_1%SM = 1
  381.             call store1d( t$230, 32, latco, 0 )
  381.          endif
  381.       endif
  384.       $F_A57 = kmax
  384.       $F_A58 = ibmax
  384.       if ( and( -$F_A58, -$F_A57 ) < 0 ) then
  384.          $I_L384_1147 = 0
  384.          do
  384.             $I_L384_1067 = 0
  384. !dir$ ivdep
  384.             do
  384.                gtd(1 + $I_L384_1067, 1 + $I_L384_1147) = 0.0
  384.                $I_L384_1067 = 1 + $I_L384_1067
  384.                if ( $I_L384_1067 >= $F_A58 ) exit
  384.             enddo
  384.             $I_L384_1147 = 1 + $I_L384_1147
  384.             if ( $I_L384_1147 >= $F_A57 ) exit
  384.          enddo
  384.       endif
  389.       if ( kmax > 0 ) then
  390.          if ( iblim > 0 ) then
  389.             $I_L389_1199 = 0
  389.             do
  390.                $I_L390_1187 = 0
  390.                do
  389.                   $I_L389_1241 = 0
  389. !dir$ shortloop16
  389. !dir$ blocking_size( 2, 2 )
  389.                   do
  390.                      $SCA_vmax_I78 = vmax(1 + $I_L389_1241 + 2 * $I_L389_1199)
  390.                      $I_L390_951 = 0
  390. !dir$ ivdep
  390. !dir$ blocking_size( 256, 256 )
  390.                      do
  409.                         adveps(1 + $I_L390_951 + 256 * $I_L390_1187, 1 + $I_L389_1241 + 2 * $I_L389_1199) = rcl(1 + $I_L390_951 + 256 * $I_L390_1187) * ( gpphi(1 + $I_L390_951 + 256 * $I_L390_1187) * gv(1 + $I_L390_951 + 256 * $I_L390_1187, 1 + $I_L389_1241 + 2 * $I_L389_1199) + gplam(1 + $I_L390_951 + 256 * $I_L390_1187) * gu(1 + $I_L390_951 + 256 * $I_L390_1187, 1 + $I_L389_1241 + 2 * $I_L389_1199) )
  391.                         $SCA_vmax_I78 = max( $SCA_vmax_I78, cosiv(1 + $I_L390_951 + 256 * $I_L390_1187) * _sqrt( gv(1 + $I_L390_951 + 256 * $I_L390_1187, 1 + $I_L389_1241 + 2 * $I_L389_1199) * gv(1 + $I_L390_951 + 256 * $I_L390_1187, 1 + $I_L389_1241 + 2 * $I_L389_1199) + gu(1 + $I_L390_951 + 256 * $I_L390_1187, 1 + $I_L389_1241 + 2 * $I_L389_1199) * gu(1 + $I_L390_951 + 256 * $I_L390_1187, 1 + $I_L389_1241 + 2 * $I_L389_1199) ) )
  390.                         $I_L390_951 = 1 + $I_L390_951
  390.                         if ( $I_L390_951 >= min( iblim, 256 + 256 * $I_L390_1187 ) + -256 * $I_L390_1187 ) exit
  390.                      enddo
  390.                      vmax(1 + $I_L389_1241 + 2 * $I_L389_1199) = $SCA_vmax_I78
  389.                      $I_L389_1241 = 1 + $I_L389_1241
  389.                      if ( $I_L389_1241 >= min( kmax, 2 + 2 * $I_L389_1199 ) + -2 * $I_L389_1199 ) exit
  389.                   enddo
  390.                   $I_L390_1187 = 1 + $I_L390_1187
  392.                   if ( $I_L390_1187 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
  392.                enddo
  389.                $I_L389_1199 = 1 + $I_L389_1199
  389.                if ( $I_L389_1199 >= 1 + max( 0, -1 + _rsh( 1 + kmax, 1 ) ) ) exit
  389.             enddo
  389.          endif
  389.       endif
  401.       if ( slagr == .false. ) then
  402.          t$4 = ibmax
  402.          t$5 = kmax
  402.          t$73 = max( 0, ibmax )
  402.          t$74 = max( 0, ibmax )
  402.          t$75 = max( 0, kmax )
  402.          t$76 = max( 0, ibmax ) * max( 0, kmax )
  402.          if ( kmax > 0 ) then
  402.             if ( iblim > 0 ) then
  402.                $I_L402_1095 = 0
  402.                if ( kmax >= 4 ) then
  402.                   $I_L402_1253 = 0
  402. !dir$ blocking_size( 1, 1 )
  402.                   do
  402.                      $I_L402_954 = 0
  402. !dir$ ivdep
  402. !dir$ blocking_size( 256, 256 )
  402.                      do
  402.                         guphi(1 + $I_L402_954, 1 + 4 * $I_L402_1253) = gvlam(1 + $I_L402_954, 1 + 4 * $I_L402_1253) + -( cos2lat(1 + $I_L402_954) * grot(1 + $I_L402_954, 1 + 4 * $I_L402_1253) )
  402.                         gvphi(1 + $I_L402_954, 1 + 4 * $I_L402_1253) = -gulam(1 + $I_L402_954, 1 + 4 * $I_L402_1253) + cos2lat(1 + $I_L402_954) * gdiv(1 + $I_L402_954, 1 + 4 * $I_L402_1253)
  402.                         guphi(1 + $I_L402_954, 2 + 4 * $I_L402_1253) = gvlam(1 + $I_L402_954, 2 + 4 * $I_L402_1253) + -( cos2lat(1 + $I_L402_954) * grot(1 + $I_L402_954, 2 + 4 * $I_L402_1253) )
  402.                         gvphi(1 + $I_L402_954, 2 + 4 * $I_L402_1253) = -gulam(1 + $I_L402_954, 2 + 4 * $I_L402_1253) + cos2lat(1 + $I_L402_954) * gdiv(1 + $I_L402_954, 2 + 4 * $I_L402_1253)
  402.                         guphi(1 + $I_L402_954, 3 + 4 * $I_L402_1253) = gvlam(1 + $I_L402_954, 3 + 4 * $I_L402_1253) + -( cos2lat(1 + $I_L402_954) * grot(1 + $I_L402_954, 3 + 4 * $I_L402_1253) )
  402.                         gvphi(1 + $I_L402_954, 3 + 4 * $I_L402_1253) = -gulam(1 + $I_L402_954, 3 + 4 * $I_L402_1253) + cos2lat(1 + $I_L402_954) * gdiv(1 + $I_L402_954, 3 + 4 * $I_L402_1253)
  402.                         guphi(1 + $I_L402_954, 4 + 4 * $I_L402_1253) = gvlam(1 + $I_L402_954, 4 + 4 * $I_L402_1253) + -( cos2lat(1 + $I_L402_954) * grot(1 + $I_L402_954, 4 + 4 * $I_L402_1253) )
  402.                         gvphi(1 + $I_L402_954, 4 + 4 * $I_L402_1253) = -gulam(1 + $I_L402_954, 4 + 4 * $I_L402_1253) + cos2lat(1 + $I_L402_954) * gdiv(1 + $I_L402_954, 4 + 4 * $I_L402_1253)
  402.                         $I_L402_954 = 1 + $I_L402_954
  402.                         if ( $I_L402_954 >= iblim ) exit
  402.                      enddo
  402.                      $I_L402_1253 = 1 + $I_L402_1253
  402.                      if ( $I_L402_1253 >= _rsh( kmax, 2 ) ) exit
  402.                   enddo
  402.                   $I_L402_1095 = and( 0xfffffffffffffffcUL, kmax )
  402.                endif
  402.                if ( $I_L402_1095 < kmax ) then
  402.                   $I_L402_1211 = 0
  402. !dir$ blocking_size( 1, 1 )
  402.                   do
  402.                      $I_L402_954 = 0
  402. !dir$ ivdep
  402. !dir$ blocking_size( 256, 256 )
  402.                      do
  402.                         guphi(1 + $I_L402_954, 1 + $I_L402_1095 + $I_L402_1211) = gvlam(1 + $I_L402_954, 1 + $I_L402_1095 + $I_L402_1211) + -( cos2lat(1 + $I_L402_954) * grot(1 + $I_L402_954, 1 + $I_L402_1095 + $I_L402_1211) )
  402.                         gvphi(1 + $I_L402_954, 1 + $I_L402_1095 + $I_L402_1211) = -gulam(1 + $I_L402_954, 1 + $I_L402_1095 + $I_L402_1211) + cos2lat(1 + $I_L402_954) * gdiv(1 + $I_L402_954, 1 + $I_L402_1095 + $I_L402_1211)
  402.                         $I_L402_954 = 1 + $I_L402_954
  402.                         if ( $I_L402_954 >= iblim ) exit
  402.                      enddo
  402.                      $I_L402_1211 = 1 + $I_L402_1211
  402.                      if ( $I_L402_1211 >= kmax + -$I_L402_1095 ) exit
  402.                   enddo
  402.                endif
  402.             endif
  402.          endif
  402.       endif
  409.       tm$43 = loc( (del%base_addr)(del%dim_1%LB, 0) )
  409.       del = _copyin( (del%base_addr)(del%dim_1%LB, 0) )
  409.       t$6 = ibmax
  409.       t$77 = max( 0, ibmax )
  409.       t$7 = kmax
  409.       t$78 = max( 0, ibmax )
  409.       t$79 = max( 0, kmax )
  409.       t$80 = max( 0, ibmax ) * max( 0, kmax )
  409.       if ( iblim > 0 ) then
  409.          $SC_del_I43 = del(1)
  409.          $I_L409_956 = 0
  409. !dir$ ivdep
  409.          do
  409.             dot(1 + $I_L409_956, 1) = 0.0
  409.             psint(1 + $I_L409_956, 1) = $SC_del_I43 * adveps(1 + $I_L409_956, 1)
  409.             divint(1 + $I_L409_956, 1) = $SC_del_I43 * gdiv(1 + $I_L409_956, 1)
  409.             divintm(1 + $I_L409_956, 1) = $SC_del_I43 * gdivm(1 + $I_L409_956, 1)
  409.             $I_L409_956 = 1 + $I_L409_956
  409.             if ( $I_L409_956 >= iblim ) exit
  409.          enddo
  409.       endif
  409.       if ( slagr /= .false. ) then
  409.          if ( iblim > 0 ) then
  409.             $SC_del_I43 = del(1)
  409.             $I_L409_958 = 0
  409. !dir$ ivdep
  409.             do
  409.                zsint(1 + $I_L409_958) = rcl(1 + $I_L409_958) * $SC_del_I43 * ( gu(1 + $I_L409_958, 1) * gzslam(1 + $I_L409_958) + gv(1 + $I_L409_958, 1) * gzsphi(1 + $I_L409_958) )
  409.                $I_L409_958 = 1 + $I_L409_958
  409.                if ( $I_L409_958 >= iblim ) exit
  409.             enddo
  409.          endif
  409.       endif
  409.       if ( -2 + kmax >= 0 ) then
  409.          if ( iblim > 0 ) then
  409.             if ( slagr /= .false. ) then
  409.                $I_L409_1097 = 0
  409.                do
  409.                   $SCA_del_I76 = del(2 + $I_L409_1097)
  409.                   $I_L409_960 = 0
  409. !dir$ ivdep
  409.                   do
  409.                      psint(1 + $I_L409_960, 2 + $I_L409_1097) = psint(1 + $I_L409_960, 1 + $I_L409_1097) + $SCA_del_I76 * adveps(1 + $I_L409_960, 2 + $I_L409_1097)
  409.                      divint(1 + $I_L409_960, 2 + $I_L409_1097) = divint(1 + $I_L409_960, 1 + $I_L409_1097) + $SCA_del_I76 * gdiv(1 + $I_L409_960, 2 + $I_L409_1097)
  409.                      divintm(1 + $I_L409_960, 2 + $I_L409_1097) = divintm(1 + $I_L409_960, 1 + $I_L409_1097) + $SCA_del_I76 * gdivm(1 + $I_L409_960, 2 + $I_L409_1097)
  409.                      $I_L409_960 = 1 + $I_L409_960
  409.                      if ( $I_L409_960 >= iblim ) exit
  409.                   enddo
  409.                   $I_L409_962 = 0
  409. !dir$ ivdep
  409.                   do
  409.                      zsint(1 + $I_L409_962) = zsint(1 + $I_L409_962) + $SCA_del_I76 * rcl(1 + $I_L409_962) * ( gzslam(1 + $I_L409_962) * gu(1 + $I_L409_962, 2 + $I_L409_1097) + gzsphi(1 + $I_L409_962) * gv(1 + $I_L409_962, 2 + $I_L409_1097) )
  409.                      $I_L409_962 = 1 + $I_L409_962
  409.                      if ( $I_L409_962 >= iblim ) exit
  409.                   enddo
  409.                   $I_L409_1097 = 1 + $I_L409_1097
  409.                   if ( $I_L409_1097 >= -1 + kmax ) exit
  409.                enddo
  409.             else
  409.                $I_L409_1127 = 0
  409.                if ( -3 + kmax >= 0 ) then
  409.                   $I_L409_1255 = 0
  409. !dir$ blocking_size( 1, 1 )
  409.                   do
  409.                      $SCA_del#1_U32 = del(2 + 2 * $I_L409_1255)
  409.                      $SCA_del#2_U33 = del(3 + 2 * $I_L409_1255)
  409.                      $I_L409_1035 = 0
  409. !dir$ ivdep
  409. !dir$ blocking_size( 256, 256 )
  409.                      do
  409.                         psint(1 + $I_L409_1035, 2 + 2 * $I_L409_1255) = psint(1 + $I_L409_1035, 1 + 2 * $I_L409_1255) + $SCA_del#1_U32 * adveps(1 + $I_L409_1035, 2 + 2 * $I_L409_1255)
  409.                         divint(1 + $I_L409_1035, 2 + 2 * $I_L409_1255) = divint(1 + $I_L409_1035, 1 + 2 * $I_L409_1255) + $SCA_del#1_U32 * gdiv(1 + $I_L409_1035, 2 + 2 * $I_L409_1255)
  409.                         divintm(1 + $I_L409_1035, 2 + 2 * $I_L409_1255) = divintm(1 + $I_L409_1035, 1 + 2 * $I_L409_1255) + $SCA_del#1_U32 * gdivm(1 + $I_L409_1035, 2 + 2 * $I_L409_1255)
  409.                         psint(1 + $I_L409_1035, 3 + 2 * $I_L409_1255) = psint(1 + $I_L409_1035, 2 + 2 * $I_L409_1255) + $SCA_del#2_U33 * adveps(1 + $I_L409_1035, 3 + 2 * $I_L409_1255)
  409.                         divint(1 + $I_L409_1035, 3 + 2 * $I_L409_1255) = divint(1 + $I_L409_1035, 2 + 2 * $I_L409_1255) + $SCA_del#2_U33 * gdiv(1 + $I_L409_1035, 3 + 2 * $I_L409_1255)
  409.                         divintm(1 + $I_L409_1035, 3 + 2 * $I_L409_1255) = divintm(1 + $I_L409_1035, 2 + 2 * $I_L409_1255) + $SCA_del#2_U33 * gdivm(1 + $I_L409_1035, 3 + 2 * $I_L409_1255)
  409.                         $I_L409_1035 = 1 + $I_L409_1035
  409.                         if ( $I_L409_1035 >= iblim ) exit
  409.                      enddo
  409.                      $I_L409_1255 = 1 + $I_L409_1255
  409.                      if ( $I_L409_1255 >= _rsh( -1 + kmax, 1 ) ) exit
  409.                   enddo
  409.                   $I_L409_1127 = and( 0xfffffffffffffffeUL, -1 + kmax )
  409.                endif
  409.                if ( $I_L409_1127 < -1 + kmax ) then
  409.                   $SCA_del_I79 = del(2 + $I_L409_1127)
  409.                   $I_L409_1035 = 0
  409. !dir$ ivdep
  409. !dir$ blocking_size( 256, 256 )
  409.                   do
  409.                      psint(1 + $I_L409_1035, 2 + $I_L409_1127) = psint(1 + $I_L409_1035, 1 + $I_L409_1127) + $SCA_del_I79 * adveps(1 + $I_L409_1035, 2 + $I_L409_1127)
  409.                      divint(1 + $I_L409_1035, 2 + $I_L409_1127) = divint(1 + $I_L409_1035, 1 + $I_L409_1127) + $SCA_del_I79 * gdiv(1 + $I_L409_1035, 2 + $I_L409_1127)
  409.                      divintm(1 + $I_L409_1035, 2 + $I_L409_1127) = divintm(1 + $I_L409_1035, 1 + $I_L409_1127) + $SCA_del_I79 * gdivm(1 + $I_L409_1035, 2 + $I_L409_1127)
  409.                      $I_L409_1035 = 1 + $I_L409_1035
  409.                      if ( $I_L409_1035 >= iblim ) exit
  409.                   enddo
  409.                endif
  409.             endif
  409.             $I_L409_1099 = 0
  409.             if ( -5 + kmax >= 0 ) then
  409.                $I_L409_1257 = 0
  409. !dir$ blocking_size( 1, 1 )
  409.                do
  409.                   $SCA_del#1_U34 = del(1 + 4 * $I_L409_1257)
  409.                   $SCA_del#2_U35 = del(2 + 4 * $I_L409_1257)
  409.                   $SCA_del#3_U36 = del(3 + 4 * $I_L409_1257)
  409.                   $SCA_del#4_U37 = del(4 + 4 * $I_L409_1257)
  409.                   $I_L409_964 = 0
  409. !dir$ ivdep
  409. !dir$ blocking_size( 256, 256 )
  409.                   do
  409.                      $dot_WR0_R0 = dot(1 + $I_L409_964, 1 + 4 * $I_L409_1257) + $SCA_del#1_U34 * ( psint(1 + $I_L409_964, kmax) + divint(1 + $I_L409_964, kmax) + -adveps(1 + $I_L409_964, 1 + 4 * $I_L409_1257) + -gdiv(1 + $I_L409_964, 1 + 4 * $I_L409_1257) )
  409.                      dot(1 + $I_L409_964, 2 + 4 * $I_L409_1257) = $dot_WR0_R0
  417.                      gw(1 + $I_L409_964, 1 + 4 * $I_L409_1257) = 5.0e-1 * ( $dot_WR0_R0 + dot(1 + $I_L409_964, 1 + 4 * $I_L409_1257) )
  409.                      $dot_WR0_R0 = $dot_WR0_R0 + $SCA_del#2_U35 * ( psint(1 + $I_L409_964, kmax) + divint(1 + $I_L409_964, kmax) + -gdiv(1 + $I_L409_964, 2 + 4 * $I_L409_1257) + -adveps(1 + $I_L409_964, 2 + 4 * $I_L409_1257) )
  409.                      dot(1 + $I_L409_964, 3 + 4 * $I_L409_1257) = $dot_WR0_R0
  417.                      gw(1 + $I_L409_964, 2 + 4 * $I_L409_1257) = 5.0e-1 * ( $dot_WR0_R0 + dot(1 + $I_L409_964, 2 + 4 * $I_L409_1257) )
  409.                      $dot_WR0_R0 = $dot_WR0_R0 + $SCA_del#3_U36 * ( psint(1 + $I_L409_964, kmax) + divint(1 + $I_L409_964, kmax) + -gdiv(1 + $I_L409_964, 3 + 4 * $I_L409_1257) + -adveps(1 + $I_L409_964, 3 + 4 * $I_L409_1257) )
  409.                      dot(1 + $I_L409_964, 4 + 4 * $I_L409_1257) = $dot_WR0_R0
  417.                      gw(1 + $I_L409_964, 3 + 4 * $I_L409_1257) = 5.0e-1 * ( $dot_WR0_R0 + dot(1 + $I_L409_964, 3 + 4 * $I_L409_1257) )
  409.                      $dot_WR0_R0 = $dot_WR0_R0 + $SCA_del#4_U37 * ( psint(1 + $I_L409_964, kmax) + divint(1 + $I_L409_964, kmax) + -gdiv(1 + $I_L409_964, 4 + 4 * $I_L409_1257) + -adveps(1 + $I_L409_964, 4 + 4 * $I_L409_1257) )
  409.                      dot(1 + $I_L409_964, 5 + 4 * $I_L409_1257) = $dot_WR0_R0
  417.                      gw(1 + $I_L409_964, 4 + 4 * $I_L409_1257) = 5.0e-1 * ( $dot_WR0_R0 + dot(1 + $I_L409_964, 4 + 4 * $I_L409_1257) )
  409.                      $I_L409_964 = 1 + $I_L409_964
  409.                      if ( $I_L409_964 >= iblim ) exit
  409.                   enddo
  409.                   $I_L409_1257 = 1 + $I_L409_1257
  409.                   if ( $I_L409_1257 >= _rsh( -1 + kmax, 2 ) ) exit
  409.                enddo
  409.                $I_L409_1099 = and( 0xfffffffffffffffcUL, -1 + kmax )
  409.             endif
  409.             if ( $I_L409_1099 < -1 + kmax ) then
  409.                $I_L409_1214 = 0
  409. !dir$ blocking_size( 1, 1 )
  409.                do
  409.                   $SCA_del_I80 = del(1 + $I_L409_1099 + $I_L409_1214)
  409.                   $I_L409_964 = 0
  409. !dir$ ivdep
  409. !dir$ blocking_size( 256, 256 )
  409.                   do
  409.                      $dot_WR0_R0 = dot(1 + $I_L409_964, 1 + $I_L409_1099 + $I_L409_1214) + $SCA_del_I80 * ( psint(1 + $I_L409_964, kmax) + divint(1 + $I_L409_964, kmax) + -gdiv(1 + $I_L409_964, 1 + $I_L409_1099 + $I_L409_1214) + -adveps(1 + $I_L409_964, 1 + $I_L409_1099 + $I_L409_1214) )
  409.                      dot(1 + $I_L409_964, 2 + $I_L409_1099 + $I_L409_1214) = $dot_WR0_R0
  417.                      gw(1 + $I_L409_964, 1 + $I_L409_1099 + $I_L409_1214) = 5.0e-1 * ( $dot_WR0_R0 + dot(1 + $I_L409_964, 1 + $I_L409_1099 + $I_L409_1214) )
  409.                      $I_L409_964 = 1 + $I_L409_964
  409.                      if ( $I_L409_964 >= iblim ) exit
  409.                   enddo
  409.                   $I_L409_1214 = 1 + $I_L409_1214
  409.                   if ( $I_L409_1214 >= -1 + kmax + -$I_L409_1099 ) exit
  409.                enddo
  409.             endif
  409.          endif
  409.       endif
  409.       (del%base_addr)(del%dim_1%LB, 0) = _copyout( del )
  421.       if ( iblim > 0 ) then
  421.          $I_L421_966 = 0
  421. !dir$ ivdep
  421.          do
  422.             gw(1 + $I_L421_966, kmax) = 5.0e-1 * dot(1 + $I_L421_966, kmax)
  423.             $I_L421_966 = 1 + $I_L421_966
  421.             if ( $I_L421_966 >= iblim ) exit
  421.          enddo
  421.       endif
  428.       tm$57 = loc( (sl%base_addr)(sl%dim_1%LB, 0) )
  428.       sl = _copyin( (sl%base_addr)(sl%dim_1%LB, 0) )
  428.       t$8 = ibmax
  428.       t$9 = kmax
  428.       t$81 = max( 0, ibmax )
  428.       t$82 = max( 0, ibmax )
  428.       t$83 = max( 0, kmax )
  428.       t$84 = max( 0, ibmax ) * max( 0, kmax )
  428.       if ( -1 + kmax > 0 ) then
  428.          if ( iblim > 0 ) then
  428.             $I_L428_1201 = 0
  428.             do
  428.                $I_L428_1189 = 0
  428.                do
  428.                   $I_L428_1243 = 0
  428. !dir$ shortloop16
  428. !dir$ blocking_size( 2, 2 )
  428.                   do
  428.                      $SCA_sl_I81 = sl(1 + $I_L428_1243 + 2 * $I_L428_1201)
  428.                      $I_L428_968 = 0
  428. !dir$ ivdep
  428. !dir$ blocking_size( 256, 256 )
  428.                      do
  428.                         omg(1 + $I_L428_968 + 256 * $I_L428_1189, 1 + $I_L428_1243 + 2 * $I_L428_1201) = ps(1 + $I_L428_968 + 256 * $I_L428_1189) * ( $SCA_sl_I81 * ( adveps(1 + $I_L428_968 + 256 * $I_L428_1189, 1 + $I_L428_1243 + 2 * $I_L428_1201) + -divint(1 + $I_L428_968 + 256 * $I_L428_1189, kmax) + -psint(1 + $I_L428_968 + 256 * $I_L428_1189, kmax) ) + -5.0e-1 * ( dot(1 + $I_L428_968 + 256 * $I_L428_1189, 1 + $I_L428_1243 + 2 * $I_L428_1201) + dot(1 + $I_L428_968 + 256 * $I_L428_1189, 2 + $I_L428_1243 + 2 * $I_L428_1201) ) )
  428.                         $I_L428_968 = 1 + $I_L428_968
  428.                         if ( $I_L428_968 >= min( iblim, 256 + 256 * $I_L428_1189 ) + -256 * $I_L428_1189 ) exit
  428.                      enddo
  428.                      $I_L428_1243 = 1 + $I_L428_1243
  428.                      if ( $I_L428_1243 >= min( -1 + kmax, 2 + 2 * $I_L428_1201 ) + -2 * $I_L428_1201 ) exit
  428.                   enddo
  428.                   $I_L428_1189 = 1 + $I_L428_1189
  428.                   if ( $I_L428_1189 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
  428.                enddo
  428.                $I_L428_1201 = 1 + $I_L428_1201
  428.                if ( $I_L428_1201 >= 1 + max( 0, -1 + _rsh( kmax, 1 ) ) ) exit
  428.             enddo
  428.          endif
  428.       endif
  428.       if ( iblim > 0 ) then
  428.          $SC_sl_I44 = sl(kmax)
  428.          $I_L428_971 = 0
  428. !dir$ ivdep
  428.          do
  428.             omg(1 + $I_L428_971, kmax) = ps(1 + $I_L428_971) * ( $SC_sl_I44 * ( adveps(1 + $I_L428_971, kmax) + -psint(1 + $I_L428_971, kmax) + -divint(1 + $I_L428_971, kmax) ) + -5.0e-1 * dot(1 + $I_L428_971, kmax) )
  428.             $I_L428_971 = 1 + $I_L428_971
  428.             if ( $I_L428_971 >= iblim ) exit
  428.          enddo
  428.       endif
  428.       (sl%base_addr)(sl%dim_1%LB, 0) = _copyout( sl )
  436.       if ( (dodia%base_addr)(86, 0) /= .false. ) then
  436.          t$249 = int( _alloc( max( 0, 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) ), 8 )
  436.          $F_A59 = kmax
  436.          $F_A60 = ibmax
  436.          if ( and( -$F_A60, -$F_A59 ) < 0 ) then
  436.             $I_L436_1149 = 0
  436.             do
  436.                $I_L436_1069 = 0
  436. !dir$ ivdep
  436.                do
  436.                   t$248(1 + $I_L436_1069, 1 + $I_L436_1149) = gv(1 + $I_L436_1069, 1 + $I_L436_1149) * gu(1 + $I_L436_1069, 1 + $I_L436_1149)
  436.                   $I_L436_1069 = 1 + $I_L436_1069
  436.                   if ( $I_L436_1069 >= $F_A60 ) exit
  436.                enddo
  436.                $I_L436_1149 = 1 + $I_L436_1149
  436.                if ( $I_L436_1149 >= $F_A59 ) exit
  436.             enddo
  436.          endif
  436. !dir$ suppress t$248(1, 1)
  436.          t$250 = $_StaticDV_P26
  436.          t$250%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( t$248(1, 1) ) )
  436.          t$250%header%el_len = 64
  436.          t$250%header%assoc = 1
  436.          t$250%header%ptr_alloc = 0
  436.          t$250%header%p_or_a = 0
  436.          t$250%header%a_contig = 1
  436.          t$250%header%n_dim = 2
  436.          t$250%header%orig_base = 0
  436.          t$250%header%orig_size = 0
  436.          t$250%header%n_codim = 0
  436.          t$250%header%dv_versn = 2
  436.          t$250%header%dv_smunit = 64
  436.          t$250%header%d_type = 0
  436.          t$250%header%n_params = 0
  436.          t$250%header%d_type_idx = 13
  436.          t$250%dim_1%LB = 1
  436.          t$250%dim_1%EX = _zla( 0, ibmax )
  436.          t$250%dim_1%SM = 1
  436.          t$250%dim_2%LB = 1
  436.          t$250%dim_2%EX = _zla( 0, kmax )
  436.          t$250%dim_2%SM = _zla( 0, ibmax )
  436.          call updia2d( t$250, 86, latco )
  436.          _free( t$249 )
  436.       endif
  438.       if ( (dodia%base_addr)(87, 0) /= .false. ) then
  438.          t$254 = int( _alloc( max( 0, 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) ), 8 )
  438.          $F_A61 = kmax
  438.          $F_A62 = ibmax
  438.          if ( and( -$F_A62, -$F_A61 ) < 0 ) then
  438.             $I_L438_1151 = 0
  438.             do
  438.                $I_L438_1071 = 0
  438. !dir$ ivdep
  438.                do
  438.                   t$253(1 + $I_L438_1071, 1 + $I_L438_1151) = gu(1 + $I_L438_1071, 1 + $I_L438_1151) * omg(1 + $I_L438_1071, 1 + $I_L438_1151)
  438.                   $I_L438_1071 = 1 + $I_L438_1071
  438.                   if ( $I_L438_1071 >= $F_A62 ) exit
  438.                enddo
  438.                $I_L438_1151 = 1 + $I_L438_1151
  438.                if ( $I_L438_1151 >= $F_A61 ) exit
  438.             enddo
  438.          endif
  438. !dir$ suppress t$253(1, 1)
  438.          t$255 = $_StaticDV_P27
  438.          t$255%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( t$253(1, 1) ) )
  438.          t$255%header%el_len = 64
  438.          t$255%header%assoc = 1
  438.          t$255%header%ptr_alloc = 0
  438.          t$255%header%p_or_a = 0
  438.          t$255%header%a_contig = 1
  438.          t$255%header%n_dim = 2
  438.          t$255%header%orig_base = 0
  438.          t$255%header%orig_size = 0
  438.          t$255%header%n_codim = 0
  438.          t$255%header%dv_versn = 2
  438.          t$255%header%dv_smunit = 64
  438.          t$255%header%d_type = 0
  438.          t$255%header%n_params = 0
  438.          t$255%header%d_type_idx = 13
  438.          t$255%dim_1%LB = 1
  438.          t$255%dim_1%EX = _zla( 0, ibmax )
  438.          t$255%dim_1%SM = 1
  438.          t$255%dim_2%LB = 1
  438.          t$255%dim_2%EX = _zla( 0, kmax )
  438.          t$255%dim_2%SM = _zla( 0, ibmax )
  438.          call updia2d( t$255, 87, latco )
  438.          _free( t$254 )
  438.       endif
  440.       if ( (dodia%base_addr)(88, 0) /= .false. ) then
  440.          t$259 = int( _alloc( max( 0, 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) ), 8 )
  440.          $F_A63 = kmax
  440.          $F_A64 = ibmax
  440.          if ( and( -$F_A64, -$F_A63 ) < 0 ) then
  440.             $I_L440_1153 = 0
  440.             do
  440.                $I_L440_1073 = 0
  440. !dir$ ivdep
  440.                do
  440.                   t$258(1 + $I_L440_1073, 1 + $I_L440_1153) = gv(1 + $I_L440_1073, 1 + $I_L440_1153) * omg(1 + $I_L440_1073, 1 + $I_L440_1153)
  440.                   $I_L440_1073 = 1 + $I_L440_1073
  440.                   if ( $I_L440_1073 >= $F_A64 ) exit
  440.                enddo
  440.                $I_L440_1153 = 1 + $I_L440_1153
  440.                if ( $I_L440_1153 >= $F_A63 ) exit
  440.             enddo
  440.          endif
  440. !dir$ suppress t$258(1, 1)
  440.          t$260 = $_StaticDV_P28
  440.          t$260%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( t$258(1, 1) ) )
  440.          t$260%header%el_len = 64
  440.          t$260%header%assoc = 1
  440.          t$260%header%ptr_alloc = 0
  440.          t$260%header%p_or_a = 0
  440.          t$260%header%a_contig = 1
  440.          t$260%header%n_dim = 2
  440.          t$260%header%orig_base = 0
  440.          t$260%header%orig_size = 0
  440.          t$260%header%n_codim = 0
  440.          t$260%header%dv_versn = 2
  440.          t$260%header%dv_smunit = 64
  440.          t$260%header%d_type = 0
  440.          t$260%header%n_params = 0
  440.          t$260%header%d_type_idx = 13
  440.          t$260%dim_1%LB = 1
  440.          t$260%dim_1%EX = _zla( 0, ibmax )
  440.          t$260%dim_1%SM = 1
  440.          t$260%dim_2%LB = 1
  440.          t$260%dim_2%EX = _zla( 0, kmax )
  440.          t$260%dim_2%SM = _zla( 0, ibmax )
  440.          call updia2d( t$260, 88, latco )
  440.          _free( t$259 )
  440.       endif
  441.       if ( (dodia%base_addr)(89, 0) ) then
  440.          goto 30
  441.       else if ( (dodia%base_addr)(90, 0) ) then
  441.          goto 30
  441.       else if ( (dodia%base_addr)(91, 0) /= .false. ) then
  441.    30    continue
  443.          if ( kmax > 0 ) then
  445.             $SC_tov_I25 = tov%dim_1%EX
  445.             $SC_tov_I26 = tov%dim_1%LB
  444.             if ( iblim > 0 ) then
  443.                $I_L443_1101 = 0
  443.                do
  444.                   $SCA_tov_I82 = (tov%base_addr)(1 + $I_L443_1101, 0)
  444.                   $I_L444_973 = 0
  444. !dir$ ivdep
  444.                   do
  445.                      gtd(1 + $I_L444_973, 1 + $I_L443_1101) = ( 1.0/( 1.0 + 6.0799999999999998e-1 * gq(1 + $I_L444_973, 1 + $I_L443_1101) ) * ( $SCA_tov_I82 + gtmp(1 + $I_L444_973, 1 + $I_L443_1101) ) )
  446.                      $I_L444_973 = 1 + $I_L444_973
  444.                      if ( $I_L444_973 >= iblim ) exit
  444.                   enddo
  447.                   $I_L443_1101 = 1 + $I_L443_1101
  446.                   if ( $I_L443_1101 >= kmax ) exit
  446.                enddo
  446.             endif
  446.          endif
  449.          if ( (dodia%base_addr)(89, 0) /= .false. ) then
  449.             t$270 = int( _alloc( max( 0, 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) ), 8 )
  449.             $F_A65 = kmax
  449.             $F_A66 = ibmax
  449.             if ( and( -$F_A66, -$F_A65 ) < 0 ) then
  449.                $I_L449_1155 = 0
  449.                do
  449.                   $I_L449_1075 = 0
  449. !dir$ ivdep
  449.                   do
  449.                      t$269(1 + $I_L449_1075, 1 + $I_L449_1155) = gtd(1 + $I_L449_1075, 1 + $I_L449_1155) * gv(1 + $I_L449_1075, 1 + $I_L449_1155)
  449.                      $I_L449_1075 = 1 + $I_L449_1075
  449.                      if ( $I_L449_1075 >= $F_A66 ) exit
  449.                   enddo
  449.                   $I_L449_1155 = 1 + $I_L449_1155
  449.                   if ( $I_L449_1155 >= $F_A65 ) exit
  449.                enddo
  449.             endif
  449. !dir$ suppress t$269(1, 1)
  449.             t$271 = $_StaticDV_P29
  449.             t$271%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( t$269(1, 1) ) )
  449.             t$271%header%el_len = 64
  449.             t$271%header%assoc = 1
  449.             t$271%header%ptr_alloc = 0
  449.             t$271%header%p_or_a = 0
  449.             t$271%header%a_contig = 1
  449.             t$271%header%n_dim = 2
  449.             t$271%header%orig_base = 0
  449.             t$271%header%orig_size = 0
  449.             t$271%header%n_codim = 0
  449.             t$271%header%dv_versn = 2
  449.             t$271%header%dv_smunit = 64
  449.             t$271%header%d_type = 0
  449.             t$271%header%n_params = 0
  449.             t$271%header%d_type_idx = 13
  449.             t$271%dim_1%LB = 1
  449.             t$271%dim_1%EX = _zla( 0, ibmax )
  449.             t$271%dim_1%SM = 1
  449.             t$271%dim_2%LB = 1
  449.             t$271%dim_2%EX = _zla( 0, kmax )
  449.             t$271%dim_2%SM = _zla( 0, ibmax )
  449.             call updia2d( t$271, 89, latco )
  449.             _free( t$270 )
  449.          endif
  451.          if ( (dodia%base_addr)(90, 0) /= .false. ) then
  451.             t$275 = int( _alloc( max( 0, 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) ), 8 )
  451.             $F_A67 = kmax
  451.             $F_A68 = ibmax
  451.             if ( and( -$F_A68, -$F_A67 ) < 0 ) then
  451.                $I_L451_1157 = 0
  451.                do
  451.                   $I_L451_1077 = 0
  451. !dir$ ivdep
  451.                   do
  451.                      t$274(1 + $I_L451_1077, 1 + $I_L451_1157) = gtd(1 + $I_L451_1077, 1 + $I_L451_1157) * gu(1 + $I_L451_1077, 1 + $I_L451_1157)
  451.                      $I_L451_1077 = 1 + $I_L451_1077
  451.                      if ( $I_L451_1077 >= $F_A68 ) exit
  451.                   enddo
  451.                   $I_L451_1157 = 1 + $I_L451_1157
  451.                   if ( $I_L451_1157 >= $F_A67 ) exit
  451.                enddo
  451.             endif
  451. !dir$ suppress t$274(1, 1)
  451.             t$276 = $_StaticDV_P30
  451.             t$276%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( t$274(1, 1) ) )
  451.             t$276%header%el_len = 64
  451.             t$276%header%assoc = 1
  451.             t$276%header%ptr_alloc = 0
  451.             t$276%header%p_or_a = 0
  451.             t$276%header%a_contig = 1
  451.             t$276%header%n_dim = 2
  451.             t$276%header%orig_base = 0
  451.             t$276%header%orig_size = 0
  451.             t$276%header%n_codim = 0
  451.             t$276%header%dv_versn = 2
  451.             t$276%header%dv_smunit = 64
  451.             t$276%header%d_type = 0
  451.             t$276%header%n_params = 0
  451.             t$276%header%d_type_idx = 13
  451.             t$276%dim_1%LB = 1
  451.             t$276%dim_1%EX = _zla( 0, ibmax )
  451.             t$276%dim_1%SM = 1
  451.             t$276%dim_2%LB = 1
  451.             t$276%dim_2%EX = _zla( 0, kmax )
  451.             t$276%dim_2%SM = _zla( 0, ibmax )
  451.             call updia2d( t$276, 90, latco )
  451.             _free( t$275 )
  451.          endif
  453.          if ( (dodia%base_addr)(91, 0) /= .false. ) then
  453.             t$280 = int( _alloc( max( 0, 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) ), 8 )
  453.             $F_A69 = kmax
  453.             $F_A70 = ibmax
  453.             if ( and( -$F_A70, -$F_A69 ) < 0 ) then
  453.                $I_L453_1159 = 0
  453.                do
  453.                   $I_L453_1079 = 0
  453. !dir$ ivdep
  453.                   do
  453.                      t$279(1 + $I_L453_1079, 1 + $I_L453_1159) = gtd(1 + $I_L453_1079, 1 + $I_L453_1159) * omg(1 + $I_L453_1079, 1 + $I_L453_1159)
  453.                      $I_L453_1079 = 1 + $I_L453_1079
  453.                      if ( $I_L453_1079 >= $F_A70 ) exit
  453.                   enddo
  453.                   $I_L453_1159 = 1 + $I_L453_1159
  453.                   if ( $I_L453_1159 >= $F_A69 ) exit
  453.                enddo
  453.             endif
  453. !dir$ suppress t$279(1, 1)
  453.             t$281 = $_StaticDV_P31
  453.             t$281%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( t$279(1, 1) ) )
  453.             t$281%header%el_len = 64
  453.             t$281%header%assoc = 1
  453.             t$281%header%ptr_alloc = 0
  453.             t$281%header%p_or_a = 0
  453.             t$281%header%a_contig = 1
  453.             t$281%header%n_dim = 2
  453.             t$281%header%orig_base = 0
  453.             t$281%header%orig_size = 0
  453.             t$281%header%n_codim = 0
  453.             t$281%header%dv_versn = 2
  453.             t$281%header%dv_smunit = 64
  453.             t$281%header%d_type = 0
  453.             t$281%header%n_params = 0
  453.             t$281%header%d_type_idx = 13
  453.             t$281%dim_1%LB = 1
  453.             t$281%dim_1%EX = _zla( 0, ibmax )
  453.             t$281%dim_1%SM = 1
  453.             t$281%dim_2%LB = 1
  453.             t$281%dim_2%EX = _zla( 0, kmax )
  453.             t$281%dim_2%SM = _zla( 0, ibmax )
  453.             call updia2d( t$281, 91, latco )
  453.             _free( t$280 )
  453.          endif
  455.          $F_A71 = kmax
  455.          $F_A72 = ibmax
  455.          if ( and( -$F_A72, -$F_A71 ) < 0 ) then
  455.             $I_L455_1161 = 0
  455.             do
  455.                $I_L455_1081 = 0
  455. !dir$ ivdep
  455.                do
  455.                   gtd(1 + $I_L455_1081, 1 + $I_L455_1161) = 0.0
  455.                   $I_L455_1081 = 1 + $I_L455_1081
  455.                   if ( $I_L455_1081 >= $F_A72 ) exit
  455.                enddo
  455.                $I_L455_1161 = 1 + $I_L455_1161
  455.                if ( $I_L455_1161 >= $F_A71 ) exit
  455.             enddo
  455.          endif
  455.       endif
  458.       if ( (dodia%base_addr)(92, 0) /= .false. ) then
  458.          t$285 = int( _alloc( max( 0, 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) ), 8 )
  458.          $F_A73 = kmax
  458.          $F_A74 = ibmax
  458.          if ( and( -$F_A74, -$F_A73 ) < 0 ) then
  458.             $I_L458_1163 = 0
  458.             do
  458.                $I_L458_1083 = 0
  458. !dir$ ivdep
  458.                do
  458.                   t$284(1 + $I_L458_1083, 1 + $I_L458_1163) = gq(1 + $I_L458_1083, 1 + $I_L458_1163) * gv(1 + $I_L458_1083, 1 + $I_L458_1163)
  458.                   $I_L458_1083 = 1 + $I_L458_1083
  458.                   if ( $I_L458_1083 >= $F_A74 ) exit
  458.                enddo
  458.                $I_L458_1163 = 1 + $I_L458_1163
  458.                if ( $I_L458_1163 >= $F_A73 ) exit
  458.             enddo
  458.          endif
  458. !dir$ suppress t$284(1, 1)
  458.          t$286 = $_StaticDV_P32
  458.          t$286%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( t$284(1, 1) ) )
  458.          t$286%header%el_len = 64
  458.          t$286%header%assoc = 1
  458.          t$286%header%ptr_alloc = 0
  458.          t$286%header%p_or_a = 0
  458.          t$286%header%a_contig = 1
  458.          t$286%header%n_dim = 2
  458.          t$286%header%orig_base = 0
  458.          t$286%header%orig_size = 0
  458.          t$286%header%n_codim = 0
  458.          t$286%header%dv_versn = 2
  458.          t$286%header%dv_smunit = 64
  458.          t$286%header%d_type = 0
  458.          t$286%header%n_params = 0
  458.          t$286%header%d_type_idx = 13
  458.          t$286%dim_1%LB = 1
  458.          t$286%dim_1%EX = _zla( 0, ibmax )
  458.          t$286%dim_1%SM = 1
  458.          t$286%dim_2%LB = 1
  458.          t$286%dim_2%EX = _zla( 0, kmax )
  458.          t$286%dim_2%SM = _zla( 0, ibmax )
  458.          call updia2d( t$286, 92, latco )
  458.          _free( t$285 )
  458.       endif
  460.       if ( (dodia%base_addr)(93, 0) /= .false. ) then
  460.          t$290 = int( _alloc( max( 0, 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) ), 8 )
  460.          $F_A75 = kmax
  460.          $F_A76 = ibmax
  460.          if ( and( -$F_A76, -$F_A75 ) < 0 ) then
  460.             $I_L460_1165 = 0
  460.             do
  460.                $I_L460_1085 = 0
  460. !dir$ ivdep
  460.                do
  460.                   t$289(1 + $I_L460_1085, 1 + $I_L460_1165) = gq(1 + $I_L460_1085, 1 + $I_L460_1165) * gu(1 + $I_L460_1085, 1 + $I_L460_1165)
  460.                   $I_L460_1085 = 1 + $I_L460_1085
  460.                   if ( $I_L460_1085 >= $F_A76 ) exit
  460.                enddo
  460.                $I_L460_1165 = 1 + $I_L460_1165
  460.                if ( $I_L460_1165 >= $F_A75 ) exit
  460.             enddo
  460.          endif
  460. !dir$ suppress t$289(1, 1)
  460.          t$291 = $_StaticDV_P33
  460.          t$291%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( t$289(1, 1) ) )
  460.          t$291%header%el_len = 64
  460.          t$291%header%assoc = 1
  460.          t$291%header%ptr_alloc = 0
  460.          t$291%header%p_or_a = 0
  460.          t$291%header%a_contig = 1
  460.          t$291%header%n_dim = 2
  460.          t$291%header%orig_base = 0
  460.          t$291%header%orig_size = 0
  460.          t$291%header%n_codim = 0
  460.          t$291%header%dv_versn = 2
  460.          t$291%header%dv_smunit = 64
  460.          t$291%header%d_type = 0
  460.          t$291%header%n_params = 0
  460.          t$291%header%d_type_idx = 13
  460.          t$291%dim_1%LB = 1
  460.          t$291%dim_1%EX = _zla( 0, ibmax )
  460.          t$291%dim_1%SM = 1
  460.          t$291%dim_2%LB = 1
  460.          t$291%dim_2%EX = _zla( 0, kmax )
  460.          t$291%dim_2%SM = _zla( 0, ibmax )
  460.          call updia2d( t$291, 93, latco )
  460.          _free( t$290 )
  460.       endif
  462.       if ( (dodia%base_addr)(94, 0) /= .false. ) then
  462.          t$295 = int( _alloc( max( 0, 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) ), 8 )
  462.          $F_A77 = kmax
  462.          $F_A78 = ibmax
  462.          if ( and( -$F_A78, -$F_A77 ) < 0 ) then
  462.             $I_L462_1167 = 0
  462.             do
  462.                $I_L462_1087 = 0
  462. !dir$ ivdep
  462.                do
  462.                   t$294(1 + $I_L462_1087, 1 + $I_L462_1167) = gq(1 + $I_L462_1087, 1 + $I_L462_1167) * omg(1 + $I_L462_1087, 1 + $I_L462_1167)
  462.                   $I_L462_1087 = 1 + $I_L462_1087
  462.                   if ( $I_L462_1087 >= $F_A78 ) exit
  462.                enddo
  462.                $I_L462_1167 = 1 + $I_L462_1167
  462.                if ( $I_L462_1167 >= $F_A77 ) exit
  462.             enddo
  462.          endif
  462. !dir$ suppress t$294(1, 1)
  462.          t$296 = $_StaticDV_P34
  462.          t$296%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( t$294(1, 1) ) )
  462.          t$296%header%el_len = 64
  462.          t$296%header%assoc = 1
  462.          t$296%header%ptr_alloc = 0
  462.          t$296%header%p_or_a = 0
  462.          t$296%header%a_contig = 1
  462.          t$296%header%n_dim = 2
  462.          t$296%header%orig_base = 0
  462.          t$296%header%orig_size = 0
  462.          t$296%header%n_codim = 0
  462.          t$296%header%dv_versn = 2
  462.          t$296%header%dv_smunit = 64
  462.          t$296%header%d_type = 0
  462.          t$296%header%n_params = 0
  462.          t$296%header%d_type_idx = 13
  462.          t$296%dim_1%LB = 1
  462.          t$296%dim_1%EX = _zla( 0, ibmax )
  462.          t$296%dim_1%SM = 1
  462.          t$296%dim_2%LB = 1
  462.          t$296%dim_2%EX = _zla( 0, kmax )
  462.          t$296%dim_2%SM = _zla( 0, ibmax )
  462.          call updia2d( t$296, 94, latco )
  462.          _free( t$295 )
  462.       endif
  465.       if ( (dodia%base_addr)(104, 0) /= .false. ) then
  466.          if ( kmax > 0 ) then
  468.             $SC_sl_I45 = sl%dim_1%EX
  468.             $SC_sl_I46 = sl%dim_1%LB
  467.             if ( iblim > 0 ) then
  466.                $I_L466_1203 = 0
  466.                do
  467.                   $I_L467_1191 = 0
  467.                   do
  466.                      $I_L466_1245 = 0
  466. !dir$ shortloop16
  466. !dir$ blocking_size( 2, 2 )
  466.                      do
  467.                         $SCA_sl_I83 = (sl%base_addr)(1 + $I_L466_1245 + 2 * $I_L466_1203, 0)
  467.                         $I_L467_975 = 0
  467. !dir$ ivdep
  467. !dir$ blocking_size( 256, 256 )
  467.                         do
  468.                            dewpoint(1 + $I_L467_975 + 256 * $I_L467_1191, 1 + $I_L466_1245 + 2 * $I_L466_1203) = ( ( -4717.4732000000004 + 35.859999999999999 * log( 2.6312881207866501e-3 * gq(1 + $I_L467_975 + 256 * $I_L467_1191, 1 + $I_L466_1245 + 2 * $I_L466_1203) * ( 1000.0 * $SCA_sl_I83 * ps(1 + $I_L467_975 + 256 * $I_L467_1191) ) ) ) * 1.0/( -17.27 + log( 2.6312881207866501e-3 * gq(1 + $I_L467_975 + 256 * $I_L467_1191, 1 + $I_L466_1245 + 2 * $I_L466_1203) * ( 1000.0 * $SCA_sl_I83 * ps(1 + $I_L467_975 + 256 * $I_L467_1191) ) ) ) )
  467.                            $I_L467_975 = 1 + $I_L467_975
  467.                            if ( $I_L467_975 >= min( iblim, 256 + 256 * $I_L467_1191 ) + -256 * $I_L467_1191 ) exit
  467.                         enddo
  466.                         $I_L466_1245 = 1 + $I_L466_1245
  466.                         if ( $I_L466_1245 >= min( kmax, 2 + 2 * $I_L466_1203 ) + -2 * $I_L466_1203 ) exit
  466.                      enddo
  467.                      $I_L467_1191 = 1 + $I_L467_1191
  472.                      if ( $I_L467_1191 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
  472.                   enddo
  466.                   $I_L466_1203 = 1 + $I_L466_1203
  466.                   if ( $I_L466_1203 >= 1 + max( 0, -1 + _rsh( 1 + kmax, 1 ) ) ) exit
  466.                enddo
  466.             endif
  466.          endif
  474. !dir$ suppress dewpoint(1, 1)
  474.          t$303 = $_StaticDV_P35
  474.          t$303%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( dewpoint(1, 1) ) )
  474.          t$303%header%el_len = 64
  474.          t$303%header%assoc = 1
  474.          t$303%header%ptr_alloc = 0
  474.          t$303%header%p_or_a = 0
  474.          t$303%header%a_contig = 1
  474.          t$303%header%n_dim = 2
  474.          t$303%header%orig_base = 0
  474.          t$303%header%orig_size = 0
  474.          t$303%header%n_codim = 0
  474.          t$303%header%dv_versn = 2
  474.          t$303%header%dv_smunit = 64
  474.          t$303%header%d_type = 0
  474.          t$303%header%n_params = 0
  474.          t$303%header%d_type_idx = 13
  474.          t$303%dim_1%LB = 1
  474.          t$303%dim_1%EX = _zla( 0, ibmax )
  474.          t$303%dim_1%SM = 1
  474.          t$303%dim_2%LB = 1
  474.          t$303%dim_2%EX = _zla( 0, kmax )
  474.          t$303%dim_2%SM = _zla( 0, ibmax )
  474.          call updia2d( t$303, 104, latco )
  474.       endif
  481.       if ( slagr == .false. ) then
  475.          goto 40
  481.       else if ( sl_twotime_scheme /= .false. ) then
  482.          tm$71 = loc( (hmt%base_addr)(hmt%dim_1%LB, hmt%dim_2%LB, 0) )
  482.          hmt = _copyin( (hmt%base_addr)(hmt%dim_1%LB, hmt%dim_2%LB, 0) )
  482.          t$10 = ibmax
  482.          t$11 = kmax
  482.          t$85 = max( 0, ibmax )
  482.          t$86 = max( 0, ibmax )
  482.          t$87 = max( 0, kmax )
  482.          t$88 = max( 0, ibmax ) * max( 0, kmax )
  482.          t$89 = max( 0, kmax )
  482.          t$90 = max( 0, kmax ) * max( 0, kmax )
  482.          if ( kmax > 0 ) then
  482.             if ( iblim > 0 ) then
  482.                $I_L482_586 = 0
  482.                do
  482.                   $I_L482_584 = 0
  482.                   do
  482.                      $I_L482_588 = 0
  482. !dir$ shortloop16
  482. !dir$ blocking_size( 2, 2 )
  482.                      do
  482.                         $I_L482_578 = 0
  482. !dir$ ivdep
  482. !dir$ blocking_size( 256, 256 )
  482.                         do
  482.                            zlam(1 + $I_L482_578 + 256 * $I_L482_584, 1 + $I_L482_588 + 2 * $I_L482_586) = gzslam(1 + $I_L482_578 + 256 * $I_L482_584)
  482.                            zphi(1 + $I_L482_578 + 256 * $I_L482_584, 1 + $I_L482_588 + 2 * $I_L482_586) = gzsphi(1 + $I_L482_578 + 256 * $I_L482_584)
  482.                            $I_L482_578 = 1 + $I_L482_578
  482.                            if ( $I_L482_578 >= min( iblim, 256 + 256 * $I_L482_584 ) + -256 * $I_L482_584 ) exit
  482.                         enddo
  482.                         $I_L482_588 = 1 + $I_L482_588
  482.                         if ( $I_L482_588 >= min( kmax, 2 + 2 * $I_L482_586 ) + -2 * $I_L482_586 ) exit
  482.                      enddo
  482.                      $I_L482_584 = 1 + $I_L482_584
  482.                      if ( $I_L482_584 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
  482.                   enddo
  482.                   $I_L482_586 = 1 + $I_L482_586
  482.                   if ( $I_L482_586 >= 1 + max( 0, -1 + _rsh( 1 + kmax, 1 ) ) ) exit
  482.                enddo
  482.                 _substr($W10,1,1) = 'n'
  482.                 _substr($W11,1,1) = 'n'
  482.                $W12 = iblim
  482.                $W13 = kmax
  482.                $W14 = kmax
  482.                $W15 = 1.0
  482.                $W16 = ibmax
  482.                $W17 = max( 0, kmax )
  482.                $W18 = 1.0
  482.                $W19 = ibmax
  482.                _dgemm(  _substr($W10,1,1),  _substr($W11,1,1), $W12, $W13, $W14, $W15, gtlam(1, 1), $W16, hmt(1, 1), $W17, $W18, zlam(1, 1), $W19 )
  482.                 _substr($W0,1,1) = 'n'
  482.                 _substr($W1,1,1) = 'n'
  482.                $W2 = iblim
  482.                $W3 = kmax
  482.                $W4 = kmax
  482.                $W5 = 1.0
  482.                $W6 = ibmax
  482.                $W7 = max( 0, kmax )
  482.                $W8 = 1.0
  482.                $W9 = ibmax
  482.                _dgemm(  _substr($W0,1,1),  _substr($W1,1,1), $W2, $W3, $W4, $W5, gtphi(1, 1), $W6, hmt(1, 1), $W7, $W8, zphi(1, 1), $W9 )
  482.             endif
  482.          endif
  482.          (hmt%base_addr)(hmt%dim_1%LB, hmt%dim_2%LB, 0) = _copyout( hmt )
  482.       else
  482.    40    continue
  484.          tm$85 = loc( (hmt%base_addr)(hmt%dim_1%LB, hmt%dim_2%LB, 0) )
  484.          hmt = _copyin( (hmt%base_addr)(hmt%dim_1%LB, hmt%dim_2%LB, 0) )
  484.          t$10 = ibmax
  484.          t$11 = kmax
  484.          t$85 = max( 0, ibmax )
  484.          t$86 = max( 0, ibmax )
  484.          t$87 = max( 0, kmax )
  484.          t$88 = max( 0, ibmax ) * max( 0, kmax )
  484.          t$89 = max( 0, kmax )
  484.          t$90 = max( 0, kmax ) * max( 0, kmax )
  484.          if ( kmax > 0 ) then
  484.             if ( iblim > 0 ) then
  484.                $I_L484_1205 = 0
  484.                do
  484.                   $I_L484_1193 = 0
  484.                   do
  484.                      $I_L484_1247 = 0
  484. !dir$ shortloop16
  484. !dir$ blocking_size( 2, 2 )
  484.                      do
  484.                         $I_L484_978 = 0
  484. !dir$ ivdep
  484. !dir$ blocking_size( 256, 256 )
  484.                         do
  484.                            zlam(1 + $I_L484_978 + 256 * $I_L484_1193, 1 + $I_L484_1247 + 2 * $I_L484_1205) = gzslam(1 + $I_L484_978 + 256 * $I_L484_1193)
  484.                            zphi(1 + $I_L484_978 + 256 * $I_L484_1193, 1 + $I_L484_1247 + 2 * $I_L484_1205) = gzsphi(1 + $I_L484_978 + 256 * $I_L484_1193)
  484.                            $I_L484_978 = 1 + $I_L484_978
  484.                            if ( $I_L484_978 >= min( iblim, 256 + 256 * $I_L484_1193 ) + -256 * $I_L484_1193 ) exit
  484.                         enddo
  484.                         $I_L484_1247 = 1 + $I_L484_1247
  484.                         if ( $I_L484_1247 >= min( kmax, 2 + 2 * $I_L484_1205 ) + -2 * $I_L484_1205 ) exit
  484.                      enddo
  484.                      $I_L484_1193 = 1 + $I_L484_1193
  484.                      if ( $I_L484_1193 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
  484.                   enddo
  484.                   $I_L484_1205 = 1 + $I_L484_1205
  484.                   if ( $I_L484_1205 >= 1 + max( 0, -1 + _rsh( 1 + kmax, 1 ) ) ) exit
  484.                enddo
  484.                 _substr($W30,1,1) = 'n'
  484.                 _substr($W31,1,1) = 'n'
  484.                $W32 = iblim
  484.                $W33 = kmax
  484.                $W34 = kmax
  484.                $W35 = 1.0
  484.                $W36 = ibmax
  484.                $W37 = max( 0, kmax )
  484.                $W38 = 1.0
  484.                $W39 = ibmax
  484.                _dgemm(  _substr($W30,1,1),  _substr($W31,1,1), $W32, $W33, $W34, $W35, gtlamm(1, 1), $W36, hmt(1, 1), $W37, $W38, zlam(1, 1), $W39 )
  484.                 _substr($W20,1,1) = 'n'
  484.                 _substr($W21,1,1) = 'n'
  484.                $W22 = iblim
  484.                $W23 = kmax
  484.                $W24 = kmax
  484.                $W25 = 1.0
  484.                $W26 = ibmax
  484.                $W27 = max( 0, kmax )
  484.                $W28 = 1.0
  484.                $W29 = ibmax
  484.                _dgemm(  _substr($W20,1,1),  _substr($W21,1,1), $W22, $W23, $W24, $W25, gtphim(1, 1), $W26, hmt(1, 1), $W27, $W28, zphi(1, 1), $W29 )
  484.             endif
  484.          endif
  484.          (hmt%base_addr)(hmt%dim_1%LB, hmt%dim_2%LB, 0) = _copyout( hmt )
  484.       endif
  488.       if ( slagr == .false. ) then
  493.          t$12 = ibmax
  493.          t$13 = kmax
  493.          t$91 = max( 0, ibmax )
  493.          t$92 = max( 0, ibmax )
  493.          t$93 = max( 0, kmax )
  493.          t$94 = max( 0, ibmax ) * max( 0, kmax )
  493.          if ( kmax > 0 ) then
  493.             if ( iblim > 0 ) then
  493.                $I_L493_1103 = 0
  493.                do
  493.                   $I_L493_981 = 0
  493. !dir$ ivdep
  493.                   do
  493.                      gyu(1 + $I_L493_981, 1 + $I_L493_1103) = gyu(1 + $I_L493_981, 1 + $I_L493_1103) + -( rcl(1 + $I_L493_981) * ( gu(1 + $I_L493_981, 1 + $I_L493_1103) * gulam(1 + $I_L493_981, 1 + $I_L493_1103) + gv(1 + $I_L493_981, 1 + $I_L493_1103) * guphi(1 + $I_L493_981, 1 + $I_L493_1103) ) )
  494.                      gyv(1 + $I_L493_981, 1 + $I_L493_1103) = gyv(1 + $I_L493_981, 1 + $I_L493_1103) + -( rcl(1 + $I_L493_981) * ( gu(1 + $I_L493_981, 1 + $I_L493_1103) * gvlam(1 + $I_L493_981, 1 + $I_L493_1103) + gv(1 + $I_L493_981, 1 + $I_L493_1103) * gvphi(1 + $I_L493_981, 1 + $I_L493_1103) ) )
  493.                      $I_L493_981 = 1 + $I_L493_981
  493.                      if ( $I_L493_981 >= iblim ) exit
  493.                   enddo
  524.                   $I_L524_999 = 0
  524. !dir$ ivdep
  524.                   do
  524.                      gtd(1 + $I_L524_999, 1 + $I_L493_1103) = gtd(1 + $I_L524_999, 1 + $I_L493_1103) + -( rcl(1 + $I_L524_999) * ( gtphi(1 + $I_L524_999, 1 + $I_L493_1103) * gv(1 + $I_L524_999, 1 + $I_L493_1103) + gtlam(1 + $I_L524_999, 1 + $I_L493_1103) * gu(1 + $I_L524_999, 1 + $I_L493_1103) ) )
  524.                      $I_L524_999 = 1 + $I_L524_999
  524.                      if ( $I_L524_999 >= iblim ) exit
  524.                   enddo
  493.                   $I_L493_1103 = 1 + $I_L493_1103
  493.                   if ( $I_L493_1103 >= kmax ) exit
  493.                enddo
  493.             endif
  493.          endif
  494.          t$12 = ibmax
  494.          t$13 = kmax
  494.          t$91 = max( 0, ibmax )
  494.          t$92 = max( 0, ibmax )
  494.          t$93 = max( 0, kmax )
  494.          t$94 = max( 0, ibmax ) * max( 0, kmax )
  499.          tm$116 = loc( (rdel2%base_addr)(rdel2%dim_1%LB, 0) )
  499.          rdel2 = _copyin( (rdel2%base_addr)(rdel2%dim_1%LB, 0) )
  499.          t$14 = ibmax
  499.          t$15 = kmax
  499.          t$95 = max( 0, ibmax )
  499.          t$96 = max( 0, ibmax )
  499.          t$97 = max( 0, kmax )
  499.          t$98 = max( 0, ibmax ) * max( 0, kmax )
  499.          if ( iblim > 0 ) then
  499.             $SC_rdel2_I47 = rdel2(1)
  499.             $I_L499_983 = 0
  499. !dir$ ivdep
  499.             do
  499.                gyu(1 + $I_L499_983, 1) = gyu(1 + $I_L499_983, 1) + -( $SC_rdel2_I47 * ( dot(1 + $I_L499_983, 2) * ( gu(1 + $I_L499_983, 2) + -gu(1 + $I_L499_983, 1) ) ) )
  499.                $I_L499_983 = 1 + $I_L499_983
  499.                if ( $I_L499_983 >= iblim ) exit
  499.             enddo
  499.          endif
  499.          if ( -3 + kmax >= 0 ) then
  499.             if ( iblim > 0 ) then
  499.                $I_L499_1105 = 0
  499.                if ( -4 + kmax >= 0 ) then
  499.                   $I_L499_1259 = 0
  499. !dir$ blocking_size( 1, 1 )
  499.                   do
  499.                      $SCA_rdel2#1_U46 = rdel2(2 + 2 * $I_L499_1259)
  499.                      $SCA_rdel2#2_U47 = rdel2(3 + 2 * $I_L499_1259)
  499.                      $I_L499_985 = 0
  499. !dir$ ivdep
  499. !dir$ blocking_size( 256, 256 )
  499.                      do
  499.                         gyu(1 + $I_L499_985, 2 + 2 * $I_L499_1259) = gyu(1 + $I_L499_985, 2 + 2 * $I_L499_1259) + -( $SCA_rdel2#1_U46 * ( dot(1 + $I_L499_985, 2 + 2 * $I_L499_1259) * ( gu(1 + $I_L499_985, 2 + 2 * $I_L499_1259) + -gu(1 + $I_L499_985, 1 + 2 * $I_L499_1259) ) + dot(1 + $I_L499_985, 3 + 2 * $I_L499_1259) * ( gu(1 + $I_L499_985, 3 + 2 * $I_L499_1259) + -gu(1 + $I_L499_985, 2 + 2 * $I_L499_1259) ) ) )
  499.                         gyu(1 + $I_L499_985, 3 + 2 * $I_L499_1259) = gyu(1 + $I_L499_985, 3 + 2 * $I_L499_1259) + -( $SCA_rdel2#2_U47 * ( dot(1 + $I_L499_985, 3 + 2 * $I_L499_1259) * ( gu(1 + $I_L499_985, 3 + 2 * $I_L499_1259) + -gu(1 + $I_L499_985, 2 + 2 * $I_L499_1259) ) + dot(1 + $I_L499_985, 4 + 2 * $I_L499_1259) * ( gu(1 + $I_L499_985, 4 + 2 * $I_L499_1259) + -gu(1 + $I_L499_985, 3 + 2 * $I_L499_1259) ) ) )
  499.                         $I_L499_985 = 1 + $I_L499_985
  499.                         if ( $I_L499_985 >= iblim ) exit
  499.                      enddo
  499.                      $I_L499_1259 = 1 + $I_L499_1259
  499.                      if ( $I_L499_1259 >= _rsh( -2 + kmax, 1 ) ) exit
  499.                   enddo
  499.                   $I_L499_1105 = and( 0xfffffffffffffffeUL, -2 + kmax )
  499.                endif
  499.                if ( $I_L499_1105 < -2 + kmax ) then
  499.                   $SCA_rdel2_I84 = rdel2(2 + $I_L499_1105)
  499.                   $I_L499_985 = 0
  499. !dir$ ivdep
  499. !dir$ blocking_size( 256, 256 )
  499.                   do
  499.                      gyu(1 + $I_L499_985, 2 + $I_L499_1105) = gyu(1 + $I_L499_985, 2 + $I_L499_1105) + -( $SCA_rdel2_I84 * ( dot(1 + $I_L499_985, 3 + $I_L499_1105) * ( gu(1 + $I_L499_985, 3 + $I_L499_1105) + -gu(1 + $I_L499_985, 2 + $I_L499_1105) ) + dot(1 + $I_L499_985, 2 + $I_L499_1105) * ( gu(1 + $I_L499_985, 2 + $I_L499_1105) + -gu(1 + $I_L499_985, 1 + $I_L499_1105) ) ) )
  499.                      $I_L499_985 = 1 + $I_L499_985
  499.                      if ( $I_L499_985 >= iblim ) exit
  499.                   enddo
  499.                endif
  499.             endif
  499.          endif
  499.          if ( iblim > 0 ) then
  499.             $SC_rdel2_I48 = rdel2(kmax)
  499.             $I_L499_987 = 0
  499. !dir$ ivdep
  499.             do
  499.                gyu(1 + $I_L499_987, kmax) = gyu(1 + $I_L499_987, kmax) + -( $SC_rdel2_I48 * ( dot(1 + $I_L499_987, kmax) * ( gu(1 + $I_L499_987, kmax) + -gu(1 + $I_L499_987, -1 + kmax) ) ) )
  499.                $I_L499_987 = 1 + $I_L499_987
  499.                if ( $I_L499_987 >= iblim ) exit
  499.             enddo
  499.          endif
  499.          (rdel2%base_addr)(rdel2%dim_1%LB, 0) = _copyout( rdel2 )
  500.          tm$125 = loc( (rdel2%base_addr)(rdel2%dim_1%LB, 0) )
  500.          rdel2 = _copyin( (rdel2%base_addr)(rdel2%dim_1%LB, 0) )
  500.          t$14 = ibmax
  500.          t$15 = kmax
  500.          t$95 = max( 0, ibmax )
  500.          t$96 = max( 0, ibmax )
  500.          t$97 = max( 0, kmax )
  500.          t$98 = max( 0, ibmax ) * max( 0, kmax )
  500.          if ( iblim > 0 ) then
  500.             $SC_rdel2_I49 = rdel2(1)
  500.             $I_L500_989 = 0
  500. !dir$ ivdep
  500.             do
  500.                gyv(1 + $I_L500_989, 1) = gyv(1 + $I_L500_989, 1) + -( $SC_rdel2_I49 * ( dot(1 + $I_L500_989, 2) * ( gv(1 + $I_L500_989, 2) + -gv(1 + $I_L500_989, 1) ) ) )
  500.                $I_L500_989 = 1 + $I_L500_989
  500.                if ( $I_L500_989 >= iblim ) exit
  500.             enddo
  500.          endif
  500.          if ( -3 + kmax >= 0 ) then
  500.             if ( iblim > 0 ) then
  500.                $I_L500_1107 = 0
  500.                if ( -4 + kmax >= 0 ) then
  500.                   $I_L500_1261 = 0
  500. !dir$ blocking_size( 1, 1 )
  500.                   do
  500.                      $SCA_rdel2#1_U48 = rdel2(2 + 2 * $I_L500_1261)
  500.                      $SCA_rdel2#2_U49 = rdel2(3 + 2 * $I_L500_1261)
  500.                      $I_L500_991 = 0
  500. !dir$ ivdep
  500. !dir$ blocking_size( 256, 256 )
  500.                      do
  500.                         gyv(1 + $I_L500_991, 2 + 2 * $I_L500_1261) = gyv(1 + $I_L500_991, 2 + 2 * $I_L500_1261) + -( $SCA_rdel2#1_U48 * ( dot(1 + $I_L500_991, 2 + 2 * $I_L500_1261) * ( gv(1 + $I_L500_991, 2 + 2 * $I_L500_1261) + -gv(1 + $I_L500_991, 1 + 2 * $I_L500_1261) ) + dot(1 + $I_L500_991, 3 + 2 * $I_L500_1261) * ( gv(1 + $I_L500_991, 3 + 2 * $I_L500_1261) + -gv(1 + $I_L500_991, 2 + 2 * $I_L500_1261) ) ) )
  500.                         gyv(1 + $I_L500_991, 3 + 2 * $I_L500_1261) = gyv(1 + $I_L500_991, 3 + 2 * $I_L500_1261) + -( $SCA_rdel2#2_U49 * ( dot(1 + $I_L500_991, 3 + 2 * $I_L500_1261) * ( gv(1 + $I_L500_991, 3 + 2 * $I_L500_1261) + -gv(1 + $I_L500_991, 2 + 2 * $I_L500_1261) ) + dot(1 + $I_L500_991, 4 + 2 * $I_L500_1261) * ( gv(1 + $I_L500_991, 4 + 2 * $I_L500_1261) + -gv(1 + $I_L500_991, 3 + 2 * $I_L500_1261) ) ) )
  500.                         $I_L500_991 = 1 + $I_L500_991
  500.                         if ( $I_L500_991 >= iblim ) exit
  500.                      enddo
  500.                      $I_L500_1261 = 1 + $I_L500_1261
  500.                      if ( $I_L500_1261 >= _rsh( -2 + kmax, 1 ) ) exit
  500.                   enddo
  500.                   $I_L500_1107 = and( 0xfffffffffffffffeUL, -2 + kmax )
  500.                endif
  500.                if ( $I_L500_1107 < -2 + kmax ) then
  500.                   $SCA_rdel2_I85 = rdel2(2 + $I_L500_1107)
  500.                   $I_L500_991 = 0
  500. !dir$ ivdep
  500. !dir$ blocking_size( 256, 256 )
  500.                   do
  500.                      gyv(1 + $I_L500_991, 2 + $I_L500_1107) = gyv(1 + $I_L500_991, 2 + $I_L500_1107) + -( $SCA_rdel2_I85 * ( dot(1 + $I_L500_991, 3 + $I_L500_1107) * ( gv(1 + $I_L500_991, 3 + $I_L500_1107) + -gv(1 + $I_L500_991, 2 + $I_L500_1107) ) + dot(1 + $I_L500_991, 2 + $I_L500_1107) * ( gv(1 + $I_L500_991, 2 + $I_L500_1107) + -gv(1 + $I_L500_991, 1 + $I_L500_1107) ) ) )
  500.                      $I_L500_991 = 1 + $I_L500_991
  500.                      if ( $I_L500_991 >= iblim ) exit
  500.                   enddo
  500.                endif
  500.             endif
  500.          endif
  500.          if ( iblim > 0 ) then
  500.             $SC_rdel2_I50 = rdel2(kmax)
  500.             $I_L500_993 = 0
  500. !dir$ ivdep
  500.             do
  500.                gyv(1 + $I_L500_993, kmax) = gyv(1 + $I_L500_993, kmax) + -( $SC_rdel2_I50 * ( dot(1 + $I_L500_993, kmax) * ( gv(1 + $I_L500_993, kmax) + -gv(1 + $I_L500_993, -1 + kmax) ) ) )
  500.                $I_L500_993 = 1 + $I_L500_993
  500.                if ( $I_L500_993 >= iblim ) exit
  500.             enddo
  500.          endif
  500.          (rdel2%base_addr)(rdel2%dim_1%LB, 0) = _copyout( rdel2 )
  505.          t$16 = ibmax
  505.          t$17 = kmax
  505.          t$99 = max( 0, ibmax )
  505.          t$100 = max( 0, ibmax )
  505.          t$101 = max( 0, kmax )
  505.          t$102 = max( 0, ibmax ) * max( 0, kmax )
  505.          if ( kmax > 0 ) then
  505.             if ( iblim > 0 ) then
  505.                $I_L505_1109 = 0
  505.                if ( kmax >= 4 ) then
  505.                   $I_L505_1263 = 0
  505. !dir$ blocking_size( 1, 1 )
  505.                   do
  505.                      $I_L505_995 = 0
  505. !dir$ ivdep
  505. !dir$ blocking_size( 256, 256 )
  505.                      do
  505.                         gyv(1 + $I_L505_995, 1 + 4 * $I_L505_1263) = gyv(1 + $I_L505_995, 1 + 4 * $I_L505_1263) + -( ercossin(1 + $I_L505_995) * ( gv(1 + $I_L505_995, 1 + 4 * $I_L505_1263) * gv(1 + $I_L505_995, 1 + 4 * $I_L505_1263) + gu(1 + $I_L505_995, 1 + 4 * $I_L505_1263) * gu(1 + $I_L505_995, 1 + 4 * $I_L505_1263) ) )
  505.                         gyv(1 + $I_L505_995, 2 + 4 * $I_L505_1263) = gyv(1 + $I_L505_995, 2 + 4 * $I_L505_1263) + -( ercossin(1 + $I_L505_995) * ( gu(1 + $I_L505_995, 2 + 4 * $I_L505_1263) * gu(1 + $I_L505_995, 2 + 4 * $I_L505_1263) + gv(1 + $I_L505_995, 2 + 4 * $I_L505_1263) * gv(1 + $I_L505_995, 2 + 4 * $I_L505_1263) ) )
  505.                         gyv(1 + $I_L505_995, 3 + 4 * $I_L505_1263) = gyv(1 + $I_L505_995, 3 + 4 * $I_L505_1263) + -( ercossin(1 + $I_L505_995) * ( gu(1 + $I_L505_995, 3 + 4 * $I_L505_1263) * gu(1 + $I_L505_995, 3 + 4 * $I_L505_1263) + gv(1 + $I_L505_995, 3 + 4 * $I_L505_1263) * gv(1 + $I_L505_995, 3 + 4 * $I_L505_1263) ) )
  505.                         gyv(1 + $I_L505_995, 4 + 4 * $I_L505_1263) = gyv(1 + $I_L505_995, 4 + 4 * $I_L505_1263) + -( ercossin(1 + $I_L505_995) * ( gu(1 + $I_L505_995, 4 + 4 * $I_L505_1263) * gu(1 + $I_L505_995, 4 + 4 * $I_L505_1263) + gv(1 + $I_L505_995, 4 + 4 * $I_L505_1263) * gv(1 + $I_L505_995, 4 + 4 * $I_L505_1263) ) )
  505.                         $I_L505_995 = 1 + $I_L505_995
  505.                         if ( $I_L505_995 >= iblim ) exit
  505.                      enddo
  505.                      $I_L505_1263 = 1 + $I_L505_1263
  505.                      if ( $I_L505_1263 >= _rsh( kmax, 2 ) ) exit
  505.                   enddo
  505.                   $I_L505_1109 = and( 0xfffffffffffffffcUL, kmax )
  505.                endif
  505.                if ( $I_L505_1109 < kmax ) then
  505.                   $I_L505_1217 = 0
  505. !dir$ blocking_size( 1, 1 )
  505.                   do
  505.                      $I_L505_995 = 0
  505. !dir$ ivdep
  505. !dir$ blocking_size( 256, 256 )
  505.                      do
  505.                         gyv(1 + $I_L505_995, 1 + $I_L505_1109 + $I_L505_1217) = gyv(1 + $I_L505_995, 1 + $I_L505_1109 + $I_L505_1217) + -( ercossin(1 + $I_L505_995) * ( gu(1 + $I_L505_995, 1 + $I_L505_1109 + $I_L505_1217) * gu(1 + $I_L505_995, 1 + $I_L505_1109 + $I_L505_1217) + gv(1 + $I_L505_995, 1 + $I_L505_1109 + $I_L505_1217) * gv(1 + $I_L505_995, 1 + $I_L505_1109 + $I_L505_1217) ) )
  505.                         $I_L505_995 = 1 + $I_L505_995
  505.                         if ( $I_L505_995 >= iblim ) exit
  505.                      enddo
  505.                      $I_L505_1217 = 1 + $I_L505_1217
  505.                      if ( $I_L505_1217 >= kmax + -$I_L505_1109 ) exit
  505.                   enddo
  505.                endif
  505.             endif
  505.          endif
  524.          t$12 = ibmax
  524.          t$13 = kmax
  524.          t$91 = max( 0, ibmax )
  524.          t$92 = max( 0, ibmax )
  524.          t$93 = max( 0, kmax )
  524.          t$94 = max( 0, ibmax ) * max( 0, kmax )
  524.       endif
  512.       t$18 = ibmax
  512.       t$19 = kmax
  512.       t$103 = max( 0, ibmax )
  512.       t$104 = max( 0, ibmax )
  512.       t$105 = max( 0, kmax )
  512.       t$106 = max( 0, ibmax ) * max( 0, kmax )
  512.       if ( kmax > 0 ) then
  512.          if ( iblim > 0 ) then
  512.             $I_L512_1111 = 0
  512.             if ( kmax >= 4 ) then
  512.                $I_L512_1265 = 0
  512. !dir$ blocking_size( 1, 1 )
  512.                do
  512.                   $I_L512_997 = 0
  512. !dir$ ivdep
  512. !dir$ blocking_size( 256, 256 )
  512.                   do
  512.                      $gyu_WR0_R1 = gyu(1 + $I_L512_997, 1 + 4 * $I_L512_1265) + fcor(1 + $I_L512_997) * gv(1 + $I_L512_997, 1 + 4 * $I_L512_1265)
  512.                      $gyv_WR0_R2 = gyv(1 + $I_L512_997, 1 + 4 * $I_L512_1265) + -( fcor(1 + $I_L512_997) * gu(1 + $I_L512_997, 1 + 4 * $I_L512_1265) )
  517.                      $gyu_WR0_R1 = $gyu_WR0_R1 + -287.05000000000001 * gplam(1 + $I_L512_997) * gtmp(1 + $I_L512_997, 1 + 4 * $I_L512_1265)
  517.                      gyu(1 + $I_L512_997, 1 + 4 * $I_L512_1265) = $gyu_WR0_R1
  517.                      $gyv_WR0_R2 = $gyv_WR0_R2 + -287.05000000000001 * gpphi(1 + $I_L512_997) * gtmp(1 + $I_L512_997, 1 + 4 * $I_L512_1265)
  517.                      gyv(1 + $I_L512_997, 1 + 4 * $I_L512_1265) = $gyv_WR0_R2
  512.                      $gyu_WR0_R1 = gyu(1 + $I_L512_997, 2 + 4 * $I_L512_1265) + fcor(1 + $I_L512_997) * gv(1 + $I_L512_997, 2 + 4 * $I_L512_1265)
  512.                      $gyv_WR0_R2 = gyv(1 + $I_L512_997, 2 + 4 * $I_L512_1265) + -( fcor(1 + $I_L512_997) * gu(1 + $I_L512_997, 2 + 4 * $I_L512_1265) )
  517.                      $gyu_WR0_R1 = $gyu_WR0_R1 + -287.05000000000001 * gplam(1 + $I_L512_997) * gtmp(1 + $I_L512_997, 2 + 4 * $I_L512_1265)
  517.                      gyu(1 + $I_L512_997, 2 + 4 * $I_L512_1265) = $gyu_WR0_R1
  517.                      $gyv_WR0_R2 = $gyv_WR0_R2 + -287.05000000000001 * gpphi(1 + $I_L512_997) * gtmp(1 + $I_L512_997, 2 + 4 * $I_L512_1265)
  517.                      gyv(1 + $I_L512_997, 2 + 4 * $I_L512_1265) = $gyv_WR0_R2
  512.                      $gyu_WR0_R1 = gyu(1 + $I_L512_997, 3 + 4 * $I_L512_1265) + fcor(1 + $I_L512_997) * gv(1 + $I_L512_997, 3 + 4 * $I_L512_1265)
  512.                      $gyv_WR0_R2 = gyv(1 + $I_L512_997, 3 + 4 * $I_L512_1265) + -( fcor(1 + $I_L512_997) * gu(1 + $I_L512_997, 3 + 4 * $I_L512_1265) )
  517.                      $gyu_WR0_R1 = $gyu_WR0_R1 + -287.05000000000001 * gplam(1 + $I_L512_997) * gtmp(1 + $I_L512_997, 3 + 4 * $I_L512_1265)
  517.                      gyu(1 + $I_L512_997, 3 + 4 * $I_L512_1265) = $gyu_WR0_R1
  517.                      $gyv_WR0_R2 = $gyv_WR0_R2 + -287.05000000000001 * gpphi(1 + $I_L512_997) * gtmp(1 + $I_L512_997, 3 + 4 * $I_L512_1265)
  517.                      gyv(1 + $I_L512_997, 3 + 4 * $I_L512_1265) = $gyv_WR0_R2
  512.                      $gyu_WR0_R1 = gyu(1 + $I_L512_997, 4 + 4 * $I_L512_1265) + fcor(1 + $I_L512_997) * gv(1 + $I_L512_997, 4 + 4 * $I_L512_1265)
  512.                      $gyv_WR0_R2 = gyv(1 + $I_L512_997, 4 + 4 * $I_L512_1265) + -( fcor(1 + $I_L512_997) * gu(1 + $I_L512_997, 4 + 4 * $I_L512_1265) )
  517.                      $gyu_WR0_R1 = $gyu_WR0_R1 + -287.05000000000001 * gplam(1 + $I_L512_997) * gtmp(1 + $I_L512_997, 4 + 4 * $I_L512_1265)
  517.                      gyu(1 + $I_L512_997, 4 + 4 * $I_L512_1265) = $gyu_WR0_R1
  517.                      $gyv_WR0_R2 = $gyv_WR0_R2 + -287.05000000000001 * gpphi(1 + $I_L512_997) * gtmp(1 + $I_L512_997, 4 + 4 * $I_L512_1265)
  517.                      gyv(1 + $I_L512_997, 4 + 4 * $I_L512_1265) = $gyv_WR0_R2
  512.                      $I_L512_997 = 1 + $I_L512_997
  512.                      if ( $I_L512_997 >= iblim ) exit
  512.                   enddo
  512.                   $I_L512_1265 = 1 + $I_L512_1265
  512.                   if ( $I_L512_1265 >= _rsh( kmax, 2 ) ) exit
  512.                enddo
  512.                $I_L512_1111 = and( 0xfffffffffffffffcUL, kmax )
  512.             endif
  512.             if ( $I_L512_1111 < kmax ) then
  512.                $I_L512_1220 = 0
  512. !dir$ blocking_size( 1, 1 )
  512.                do
  512.                   $I_L512_997 = 0
  512. !dir$ ivdep
  512. !dir$ blocking_size( 256, 256 )
  512.                   do
  512.                      $gyu_WR0_R1 = gyu(1 + $I_L512_997, 1 + $I_L512_1111 + $I_L512_1220) + fcor(1 + $I_L512_997) * gv(1 + $I_L512_997, 1 + $I_L512_1111 + $I_L512_1220)
  512.                      $gyv_WR0_R2 = gyv(1 + $I_L512_997, 1 + $I_L512_1111 + $I_L512_1220) + -( fcor(1 + $I_L512_997) * gu(1 + $I_L512_997, 1 + $I_L512_1111 + $I_L512_1220) )
  517.                      $gyu_WR0_R1 = $gyu_WR0_R1 + -287.05000000000001 * gplam(1 + $I_L512_997) * gtmp(1 + $I_L512_997, 1 + $I_L512_1111 + $I_L512_1220)
  517.                      gyu(1 + $I_L512_997, 1 + $I_L512_1111 + $I_L512_1220) = $gyu_WR0_R1
  517.                      $gyv_WR0_R2 = $gyv_WR0_R2 + -287.05000000000001 * gpphi(1 + $I_L512_997) * gtmp(1 + $I_L512_997, 1 + $I_L512_1111 + $I_L512_1220)
  517.                      gyv(1 + $I_L512_997, 1 + $I_L512_1111 + $I_L512_1220) = $gyv_WR0_R2
  512.                      $I_L512_997 = 1 + $I_L512_997
  512.                      if ( $I_L512_997 >= iblim ) exit
  512.                   enddo
  512.                   $I_L512_1220 = 1 + $I_L512_1220
  512.                   if ( $I_L512_1220 >= kmax + -$I_L512_1111 ) exit
  512.                enddo
  512.             endif
  512.          endif
  512.       endif
  517.       t$20 = ibmax
  517.       t$107 = max( 0, ibmax )
  517.       t$21 = kmax
  517.       t$108 = max( 0, ibmax )
  517.       t$109 = max( 0, kmax )
  517.       t$110 = max( 0, ibmax ) * max( 0, kmax )
  530.       tm$176 = loc( (p1%base_addr)(p1%dim_1%LB, 0) )
  530.       p1 = _copyin( (p1%base_addr)(p1%dim_1%LB, 0) )
  530.       tm$178 = loc( (p2%base_addr)(p2%dim_1%LB, 0) )
  530.       p2 = _copyin( (p2%base_addr)(p2%dim_1%LB, 0) )
  530.       tm$180 = loc( (h1%base_addr)(h1%dim_1%LB, 0) )
  530.       h1 = _copyin( (h1%base_addr)(h1%dim_1%LB, 0) )
  530.       tm$182 = loc( (h2%base_addr)(h2%dim_1%LB, 0) )
  530.       h2 = _copyin( (h2%base_addr)(h2%dim_1%LB, 0) )
  530.       tm$184 = loc( (ci%base_addr)(ci%dim_1%LB, 0) )
  530.       ci = _copyin( (ci%base_addr)(ci%dim_1%LB, 0) )
  530.       tm$186 = loc( (rdel2%base_addr)(rdel2%dim_1%LB, 0) )
  530.       rdel2 = _copyin( (rdel2%base_addr)(rdel2%dim_1%LB, 0) )
  530.       t$22 = ibmax
  530.       t$23 = kmax
  530.       t$111 = max( 0, ibmax )
  530.       t$112 = max( 0, ibmax )
  530.       t$113 = max( 0, kmax )
  530.       t$114 = max( 0, ibmax ) * max( 0, kmax )
  530.       t$24 = ( 1 + kmax )
  530.       t$115 = max( 0, ( 1 + kmax ) )
  530.       t$118 = 8 * max( 0, ibmax ) * max( 0, kmax )
  530.       t$119 = 8 * ( 7 + 8 * max( 0, ibmax ) * max( 0, kmax ) ) / 8
  530.       t$121 = t$119 + 8 * max( 0, ibmax ) * max( 0, kmax )
  530.       t$122 = 8 * ( 7 + t$119 + 8 * max( 0, ibmax ) * max( 0, kmax ) ) / 8
  530.       t$124 = t$122 + 8 * max( 0, ibmax ) * max( 0, kmax )
  530.       t$116 = int( _alloc( t$122 + 8 * max( 0, ibmax ) * max( 0, kmax ) ), 8 )
  530.       t$117 = t$116
  530.       t$120 = t$119 + t$116
  530.       t$123 = t$122 + t$116
  530.       if ( slagr == .false. ) then
  530.          if ( -1 + kmax > 0 ) then
  530.             if ( iblim > 0 ) then
  530.                $I_L530_1115 = 0
  530.                if ( -5 + kmax >= 0 ) then
  530.                   $I_L530_1267 = 0
  530. !dir$ blocking_size( 1, 1 )
  530.                   do
  530.                      $I_L530#1_U50 = 4 * $I_L530_1267
  530.                      $SCA#1_U54 = p1(1 + 4 * $I_L530_1267)
  530.                      $SCA#1_U58 = p2(2 + 4 * $I_L530_1267)
  530.                      $SCA_ci#1_U62 = ci(2 + 4 * $I_L530_1267)
  530.                      $I_L530#2_U51 = 1 + 4 * $I_L530_1267
  530.                      $SCA#2_U55 = p1(2 + 4 * $I_L530_1267)
  530.                      $SCA#2_U59 = p2(3 + 4 * $I_L530_1267)
  530.                      $SCA_ci#2_U63 = ci(3 + 4 * $I_L530_1267)
  530.                      $I_L530#3_U52 = 2 + 4 * $I_L530_1267
  530.                      $SCA#3_U56 = p1(3 + 4 * $I_L530_1267)
  530.                      $SCA#3_U60 = p2(4 + 4 * $I_L530_1267)
  530.                      $SCA_ci#3_U64 = ci(4 + 4 * $I_L530_1267)
  530.                      $I_L530#4_U53 = 3 + 4 * $I_L530_1267
  530.                      $SCA#4_U57 = p1(4 + 4 * $I_L530_1267)
  530.                      $SCA#4_U61 = p2(5 + 4 * $I_L530_1267)
  530.                      $SCA_ci#4_U65 = ci(5 + 4 * $I_L530_1267)
  530.                      $I_L530_1003 = 0
  530. !dir$ ivdep
  530. !dir$ blocking_size( 256, 256 )
  530.                      do
  530.                         w1(1 + $I_L530_1003, 1 + 4 * $I_L530_1267) = -gtmp(1 + $I_L530_1003, 1 + 4 * $I_L530_1267) + $SCA#1_U54 * gtmp(1 + $I_L530_1003, 2 + 4 * $I_L530_1267)
  530.                         w2(1 + $I_L530_1003, 2 + 4 * $I_L530_1267) = gtmp(1 + $I_L530_1003, 2 + 4 * $I_L530_1267) + -( $SCA#1_U58 * gtmp(1 + $I_L530_1003, 1 + 4 * $I_L530_1267) )
  530.                         w3(1 + $I_L530_1003, 1 + 4 * $I_L530_1267) = -psint(1 + $I_L530_1003, 1 + $I_L530#1_U50) + psint(1 + $I_L530_1003, kmax) * $SCA_ci#1_U62
  530.                         w1(1 + $I_L530_1003, 2 + 4 * $I_L530_1267) = -gtmp(1 + $I_L530_1003, 2 + 4 * $I_L530_1267) + $SCA#2_U55 * gtmp(1 + $I_L530_1003, 3 + 4 * $I_L530_1267)
  530.                         w2(1 + $I_L530_1003, 3 + 4 * $I_L530_1267) = gtmp(1 + $I_L530_1003, 3 + 4 * $I_L530_1267) + -( $SCA#2_U59 * gtmp(1 + $I_L530_1003, 2 + 4 * $I_L530_1267) )
  530.                         w3(1 + $I_L530_1003, 2 + 4 * $I_L530_1267) = -psint(1 + $I_L530_1003, 1 + $I_L530#2_U51) + psint(1 + $I_L530_1003, kmax) * $SCA_ci#2_U63
  530.                         w1(1 + $I_L530_1003, 3 + 4 * $I_L530_1267) = -gtmp(1 + $I_L530_1003, 3 + 4 * $I_L530_1267) + $SCA#3_U56 * gtmp(1 + $I_L530_1003, 4 + 4 * $I_L530_1267)
  530.                         w2(1 + $I_L530_1003, 4 + 4 * $I_L530_1267) = gtmp(1 + $I_L530_1003, 4 + 4 * $I_L530_1267) + -( $SCA#3_U60 * gtmp(1 + $I_L530_1003, 3 + 4 * $I_L530_1267) )
  530.                         w3(1 + $I_L530_1003, 3 + 4 * $I_L530_1267) = -psint(1 + $I_L530_1003, 1 + $I_L530#3_U52) + psint(1 + $I_L530_1003, kmax) * $SCA_ci#3_U64
  530.                         w1(1 + $I_L530_1003, 4 + 4 * $I_L530_1267) = -gtmp(1 + $I_L530_1003, 4 + 4 * $I_L530_1267) + $SCA#4_U57 * gtmp(1 + $I_L530_1003, 5 + 4 * $I_L530_1267)
  530.                         w2(1 + $I_L530_1003, 5 + 4 * $I_L530_1267) = gtmp(1 + $I_L530_1003, 5 + 4 * $I_L530_1267) + -( $SCA#4_U61 * gtmp(1 + $I_L530_1003, 4 + 4 * $I_L530_1267) )
  530.                         w3(1 + $I_L530_1003, 4 + 4 * $I_L530_1267) = -psint(1 + $I_L530_1003, 1 + $I_L530#4_U53) + psint(1 + $I_L530_1003, kmax) * $SCA_ci#4_U65
  530.                         $I_L530_1003 = 1 + $I_L530_1003
  530.                         if ( $I_L530_1003 >= iblim ) exit
  530.                      enddo
  530.                      $I_L530_1267 = 1 + $I_L530_1267
  530.                      if ( $I_L530_1267 >= _rsh( -1 + kmax, 2 ) ) exit
  530.                   enddo
  530.                   $I_L530_1115 = and( 0xfffffffffffffffcUL, -1 + kmax )
  530.                endif
  530.                if ( $I_L530_1115 < -1 + kmax ) then
  530.                   $I_L530_1226 = 0
  530. !dir$ blocking_size( 1, 1 )
  530.                   do
  530.                      $I_L530_546 = $I_L530_1115 + $I_L530_1226
  530.                      $SCA_p1_I86 = p1(1 + $I_L530_1115 + $I_L530_1226)
  530.                      $SCA_p2_I87 = p2(2 + $I_L530_1115 + $I_L530_1226)
  530.                      $SCA_ci_I88 = ci(2 + $I_L530_1115 + $I_L530_1226)
  530.                      $I_L530_1003 = 0
  530. !dir$ ivdep
  530. !dir$ blocking_size( 256, 256 )
  530.                      do
  530.                         w1(1 + $I_L530_1003, 1 + $I_L530_1115 + $I_L530_1226) = -gtmp(1 + $I_L530_1003, 1 + $I_L530_1115 + $I_L530_1226) + $SCA_p1_I86 * gtmp(1 + $I_L530_1003, 2 + $I_L530_1115 + $I_L530_1226)
  530.                         w2(1 + $I_L530_1003, 2 + $I_L530_1115 + $I_L530_1226) = gtmp(1 + $I_L530_1003, 2 + $I_L530_1115 + $I_L530_1226) + -( $SCA_p2_I87 * gtmp(1 + $I_L530_1003, 1 + $I_L530_1115 + $I_L530_1226) )
  530.                         w3(1 + $I_L530_1003, 1 + $I_L530_1115 + $I_L530_1226) = -psint(1 + $I_L530_1003, 1 + $I_L530_546) + $SCA_ci_I88 * psint(1 + $I_L530_1003, kmax)
  530.                         $I_L530_1003 = 1 + $I_L530_1003
  530.                         if ( $I_L530_1003 >= iblim ) exit
  530.                      enddo
  530.                      $I_L530_1226 = 1 + $I_L530_1226
  530.                      if ( $I_L530_1226 >= -1 + kmax + -$I_L530_1115 ) exit
  530.                   enddo
  530.                endif
  530.             endif
  530.          endif
  530.       else if ( -1 + kmax > 0 ) then
  530.          if ( iblim > 0 ) then
  530.             $I_L530_1113 = 0
  530.             if ( -5 + kmax >= 0 ) then
  530.                $I_L530_1269 = 0
  530. !dir$ blocking_size( 1, 1 )
  530.                do
  530.                   $I_L530#1_U66 = 4 * $I_L530_1269
  530.                   $SCA#1_U70 = p1(1 + 4 * $I_L530_1269)
  530.                   $SCA#1_U74 = p2(2 + 4 * $I_L530_1269)
  530.                   $SCA_ci#1_U78 = ci(2 + 4 * $I_L530_1269)
  530.                   $I_L530#2_U67 = 1 + 4 * $I_L530_1269
  530.                   $SCA#2_U71 = p1(2 + 4 * $I_L530_1269)
  530.                   $SCA#2_U75 = p2(3 + 4 * $I_L530_1269)
  530.                   $SCA_ci#2_U79 = ci(3 + 4 * $I_L530_1269)
  530.                   $I_L530#3_U68 = 2 + 4 * $I_L530_1269
  530.                   $SCA#3_U72 = p1(3 + 4 * $I_L530_1269)
  530.                   $SCA#3_U76 = p2(4 + 4 * $I_L530_1269)
  530.                   $SCA_ci#3_U80 = ci(4 + 4 * $I_L530_1269)
  530.                   $I_L530#4_U69 = 3 + 4 * $I_L530_1269
  530.                   $SCA#4_U73 = p1(4 + 4 * $I_L530_1269)
  530.                   $SCA#4_U77 = p2(5 + 4 * $I_L530_1269)
  530.                   $SCA_ci#4_U81 = ci(5 + 4 * $I_L530_1269)
  530.                   $I_L530_1001 = 0
  530. !dir$ ivdep
  530. !dir$ blocking_size( 256, 256 )
  530.                   do
  530.                      w1(1 + $I_L530_1001, 1 + 4 * $I_L530_1269) = gtmp(1 + $I_L530_1001, 2 + 4 * $I_L530_1269) * ( -1.0 + $SCA#1_U70 )
  530.                      w2(1 + $I_L530_1001, 2 + 4 * $I_L530_1269) = gtmp(1 + $I_L530_1001, 1 + 4 * $I_L530_1269) * ( 1.0 + -$SCA#1_U74 )
  530.                      w3(1 + $I_L530_1001, 1 + 4 * $I_L530_1269) = -psint(1 + $I_L530_1001, 1 + $I_L530#1_U66) + psint(1 + $I_L530_1001, kmax) * $SCA_ci#1_U78
  530.                      w1(1 + $I_L530_1001, 2 + 4 * $I_L530_1269) = gtmp(1 + $I_L530_1001, 3 + 4 * $I_L530_1269) * ( -1.0 + $SCA#2_U71 )
  530.                      w2(1 + $I_L530_1001, 3 + 4 * $I_L530_1269) = gtmp(1 + $I_L530_1001, 2 + 4 * $I_L530_1269) * ( 1.0 + -$SCA#2_U75 )
  530.                      w3(1 + $I_L530_1001, 2 + 4 * $I_L530_1269) = -psint(1 + $I_L530_1001, 1 + $I_L530#2_U67) + psint(1 + $I_L530_1001, kmax) * $SCA_ci#2_U79
  530.                      w1(1 + $I_L530_1001, 3 + 4 * $I_L530_1269) = gtmp(1 + $I_L530_1001, 4 + 4 * $I_L530_1269) * ( -1.0 + $SCA#3_U72 )
  530.                      w2(1 + $I_L530_1001, 4 + 4 * $I_L530_1269) = gtmp(1 + $I_L530_1001, 3 + 4 * $I_L530_1269) * ( 1.0 + -$SCA#3_U76 )
  530.                      w3(1 + $I_L530_1001, 3 + 4 * $I_L530_1269) = -psint(1 + $I_L530_1001, 1 + $I_L530#3_U68) + psint(1 + $I_L530_1001, kmax) * $SCA_ci#3_U80
  530.                      w1(1 + $I_L530_1001, 4 + 4 * $I_L530_1269) = gtmp(1 + $I_L530_1001, 5 + 4 * $I_L530_1269) * ( -1.0 + $SCA#4_U73 )
  530.                      w2(1 + $I_L530_1001, 5 + 4 * $I_L530_1269) = gtmp(1 + $I_L530_1001, 4 + 4 * $I_L530_1269) * ( 1.0 + -$SCA#4_U77 )
  530.                      w3(1 + $I_L530_1001, 4 + 4 * $I_L530_1269) = -psint(1 + $I_L530_1001, 1 + $I_L530#4_U69) + psint(1 + $I_L530_1001, kmax) * $SCA_ci#4_U81
  530.                      $I_L530_1001 = 1 + $I_L530_1001
  530.                      if ( $I_L530_1001 >= iblim ) exit
  530.                   enddo
  530.                   $I_L530_1269 = 1 + $I_L530_1269
  530.                   if ( $I_L530_1269 >= _rsh( -1 + kmax, 2 ) ) exit
  530.                enddo
  530.                $I_L530_1113 = and( 0xfffffffffffffffcUL, -1 + kmax )
  530.             endif
  530.             if ( $I_L530_1113 < -1 + kmax ) then
  530.                $I_L530_1223 = 0
  530. !dir$ blocking_size( 1, 1 )
  530.                do
  530.                   $I_L530_544 = $I_L530_1113 + $I_L530_1223
  530.                   $SCA_p1_I89 = p1(1 + $I_L530_1113 + $I_L530_1223)
  530.                   $SCA_p2_I90 = p2(2 + $I_L530_1113 + $I_L530_1223)
  530.                   $SCA_ci_I91 = ci(2 + $I_L530_1113 + $I_L530_1223)
  530.                   $I_L530_1001 = 0
  530. !dir$ ivdep
  530. !dir$ blocking_size( 256, 256 )
  530.                   do
  530.                      w1(1 + $I_L530_1001, 1 + $I_L530_1113 + $I_L530_1223) = gtmp(1 + $I_L530_1001, 2 + $I_L530_1113 + $I_L530_1223) * ( -1.0 + $SCA_p1_I89 )
  530.                      w2(1 + $I_L530_1001, 2 + $I_L530_1113 + $I_L530_1223) = gtmp(1 + $I_L530_1001, 1 + $I_L530_1113 + $I_L530_1223) * ( 1.0 + -$SCA_p2_I90 )
  530.                      w3(1 + $I_L530_1001, 1 + $I_L530_1113 + $I_L530_1223) = -psint(1 + $I_L530_1001, 1 + $I_L530_544) + $SCA_ci_I91 * psint(1 + $I_L530_1001, kmax)
  530.                      $I_L530_1001 = 1 + $I_L530_1001
  530.                      if ( $I_L530_1001 >= iblim ) exit
  530.                   enddo
  530.                   $I_L530_1223 = 1 + $I_L530_1223
  530.                   if ( $I_L530_1223 >= -1 + kmax + -$I_L530_1113 ) exit
  530.                enddo
  530.             endif
  530.          endif
  530.       endif
  530.       if ( iblim > 0 ) then
  530.          $SC_rdel2_I52 = rdel2(1)
  530.          $SC_h1_I51 = h1(1)
  530.          $I_L530_1005 = 0
  530. !dir$ ivdep
  530.          do
  530.             gtd(1 + $I_L530_1005, 1) = gtd(1 + $I_L530_1005, 1) + -( $SC_rdel2_I52 * ( $SC_h1_I51 * w3(1 + $I_L530_1005, 1) + w1(1 + $I_L530_1005, 1) * dot(1 + $I_L530_1005, 2) ) )
  530.             $I_L530_1005 = 1 + $I_L530_1005
  530.             if ( $I_L530_1005 >= iblim ) exit
  530.          enddo
  530.       endif
  530.       if ( -3 + kmax >= 0 ) then
  530.          if ( iblim > 0 ) then
  530.             $I_L530_1117 = 0
  530.             if ( -6 + kmax >= 0 ) then
  530.                $I_L530_1271 = 0
  530. !dir$ blocking_size( 1, 1 )
  530.                do
  530.                   $SCA#1_U82 = h2(2 + 4 * $I_L530_1271)
  530.                   $SCA#1_U86 = h1(2 + 4 * $I_L530_1271)
  530.                   $SCA_rdel2#1_U90 = rdel2(2 + 4 * $I_L530_1271)
  530.                   $SCA#2_U83 = h2(3 + 4 * $I_L530_1271)
  530.                   $SCA#2_U87 = h1(3 + 4 * $I_L530_1271)
  530.                   $SCA_rdel2#2_U91 = rdel2(3 + 4 * $I_L530_1271)
  530.                   $SCA#3_U84 = h2(4 + 4 * $I_L530_1271)
  530.                   $SCA#3_U88 = h1(4 + 4 * $I_L530_1271)
  530.                   $SCA_rdel2#3_U92 = rdel2(4 + 4 * $I_L530_1271)
  530.                   $SCA#4_U85 = h2(5 + 4 * $I_L530_1271)
  530.                   $SCA#4_U89 = h1(5 + 4 * $I_L530_1271)
  530.                   $SCA_rdel2#4_U93 = rdel2(5 + 4 * $I_L530_1271)
  530.                   $I_L530_1007 = 0
  530. !dir$ ivdep
  530. !dir$ blocking_size( 256, 256 )
  530.                   do
  530.                      gtd(1 + $I_L530_1007, 2 + 4 * $I_L530_1271) = gtd(1 + $I_L530_1007, 2 + 4 * $I_L530_1271) + -( $SCA_rdel2#1_U90 * ( dot(1 + $I_L530_1007, 3 + 4 * $I_L530_1271) * w1(1 + $I_L530_1007, 2 + 4 * $I_L530_1271) + $SCA#1_U86 * w3(1 + $I_L530_1007, 2 + 4 * $I_L530_1271) + $SCA#1_U82 * w3(1 + $I_L530_1007, 1 + 4 * $I_L530_1271) + w2(1 + $I_L530_1007, 2 + 4 * $I_L530_1271) * dot(1 + $I_L530_1007, 2 + 4 * $I_L530_1271) ) )
  530.                      gtd(1 + $I_L530_1007, 3 + 4 * $I_L530_1271) = gtd(1 + $I_L530_1007, 3 + 4 * $I_L530_1271) + -( $SCA_rdel2#2_U91 * ( w1(1 + $I_L530_1007, 3 + 4 * $I_L530_1271) * dot(1 + $I_L530_1007, 4 + 4 * $I_L530_1271) + $SCA#2_U87 * w3(1 + $I_L530_1007, 3 + 4 * $I_L530_1271) + dot(1 + $I_L530_1007, 3 + 4 * $I_L530_1271) * w2(1 + $I_L530_1007, 3 + 4 * $I_L530_1271) + $SCA#2_U83 * w3(1 + $I_L530_1007, 2 + 4 * $I_L530_1271) ) )
  530.                      gtd(1 + $I_L530_1007, 4 + 4 * $I_L530_1271) = gtd(1 + $I_L530_1007, 4 + 4 * $I_L530_1271) + -( $SCA_rdel2#3_U92 * ( w1(1 + $I_L530_1007, 4 + 4 * $I_L530_1271) * dot(1 + $I_L530_1007, 5 + 4 * $I_L530_1271) + $SCA#3_U88 * w3(1 + $I_L530_1007, 4 + 4 * $I_L530_1271) + dot(1 + $I_L530_1007, 4 + 4 * $I_L530_1271) * w2(1 + $I_L530_1007, 4 + 4 * $I_L530_1271) + $SCA#3_U84 * w3(1 + $I_L530_1007, 3 + 4 * $I_L530_1271) ) )
  530.                      gtd(1 + $I_L530_1007, 5 + 4 * $I_L530_1271) = gtd(1 + $I_L530_1007, 5 + 4 * $I_L530_1271) + -( $SCA_rdel2#4_U93 * ( w1(1 + $I_L530_1007, 5 + 4 * $I_L530_1271) * dot(1 + $I_L530_1007, 6 + 4 * $I_L530_1271) + $SCA#4_U89 * w3(1 + $I_L530_1007, 5 + 4 * $I_L530_1271) + dot(1 + $I_L530_1007, 5 + 4 * $I_L530_1271) * w2(1 + $I_L530_1007, 5 + 4 * $I_L530_1271) + $SCA#4_U85 * w3(1 + $I_L530_1007, 4 + 4 * $I_L530_1271) ) )
  530.                      $I_L530_1007 = 1 + $I_L530_1007
  530.                      if ( $I_L530_1007 >= iblim ) exit
  530.                   enddo
  530.                   $I_L530_1271 = 1 + $I_L530_1271
  530.                   if ( $I_L530_1271 >= _rsh( -2 + kmax, 2 ) ) exit
  530.                enddo
  530.                $I_L530_1117 = and( 0xfffffffffffffffcUL, -2 + kmax )
  530.             endif
  530.             if ( $I_L530_1117 < -2 + kmax ) then
  530.                $I_L530_1229 = 0
  530. !dir$ blocking_size( 1, 1 )
  530.                do
  530.                   $SCA_h2_I92 = h2(2 + $I_L530_1117 + $I_L530_1229)
  530.                   $SCA_h1_I93 = h1(2 + $I_L530_1117 + $I_L530_1229)
  530.                   $SCA_rdel2_I94 = rdel2(2 + $I_L530_1117 + $I_L530_1229)
  530.                   $I_L530_1007 = 0
  530. !dir$ ivdep
  530. !dir$ blocking_size( 256, 256 )
  530.                   do
  530.                      gtd(1 + $I_L530_1007, 2 + $I_L530_1117 + $I_L530_1229) = gtd(1 + $I_L530_1007, 2 + $I_L530_1117 + $I_L530_1229) + -( $SCA_rdel2_I94 * ( w1(1 + $I_L530_1007, 2 + $I_L530_1117 + $I_L530_1229) * dot(1 + $I_L530_1007, 3 + $I_L530_1117 + $I_L530_1229) + $SCA_h1_I93 * w3(1 + $I_L530_1007, 2 + $I_L530_1117 + $I_L530_1229) + dot(1 + $I_L530_1007, 2 + $I_L530_1117 + $I_L530_1229) * w2(1 + $I_L530_1007, 2 + $I_L530_1117 + $I_L530_1229) + $SCA_h2_I92 * w3(1 + $I_L530_1007, 1 + $I_L530_1117 + $I_L530_1229) ) )
  530.                      $I_L530_1007 = 1 + $I_L530_1007
  530.                      if ( $I_L530_1007 >= iblim ) exit
  530.                   enddo
  530.                   $I_L530_1229 = 1 + $I_L530_1229
  530.                   if ( $I_L530_1229 >= -2 + kmax + -$I_L530_1117 ) exit
  530.                enddo
  530.             endif
  530.          endif
  530.       endif
  530.       if ( iblim > 0 ) then
  530.          $SC_rdel2_I54 = rdel2(kmax)
  530.          $SC_h2_I53 = h2(kmax)
  530.          $I_L530_1009 = 0
  530. !dir$ ivdep
  530.          do
  530.             gtd(1 + $I_L530_1009, kmax) = gtd(1 + $I_L530_1009, kmax) + -( $SC_rdel2_I54 * ( $SC_h2_I53 * w3(1 + $I_L530_1009, -1 + kmax) + dot(1 + $I_L530_1009, kmax) * w2(1 + $I_L530_1009, kmax) ) )
  530.             $I_L530_1009 = 1 + $I_L530_1009
  530.             if ( $I_L530_1009 >= iblim ) exit
  530.          enddo
  530.       endif
  530.       _free( t$116 )
  530.       (rdel2%base_addr)(rdel2%dim_1%LB, 0) = _copyout( rdel2 )
  530.       (ci%base_addr)(ci%dim_1%LB, 0) = _copyout( ci )
  530.       (h2%base_addr)(h2%dim_1%LB, 0) = _copyout( h2 )
  530.       (h1%base_addr)(h1%dim_1%LB, 0) = _copyout( h1 )
  530.       (p2%base_addr)(p2%dim_1%LB, 0) = _copyout( p2 )
  530.       (p1%base_addr)(p1%dim_1%LB, 0) = _copyout( p1 )
  536.       tm$199 = loc( (tov%base_addr)(tov%dim_1%LB, 0) )
  536.       tov = _copyin( (tov%base_addr)(tov%dim_1%LB, 0) )
  536.       t$26 = ibmax
  536.       t$25 = kmax
  536.       t$125 = max( 0, ibmax )
  536.       t$126 = max( 0, ibmax )
  536.       t$127 = max( 0, kmax )
  536.       t$128 = max( 0, ibmax ) * max( 0, kmax )
  536.       if ( kmax > 0 ) then
  536.          if ( iblim > 0 ) then
  536.             $I_L536_1119 = 0
  536.             if ( kmax >= 4 ) then
  536.                $I_L536_1273 = 0
  536. !dir$ blocking_size( 1, 1 )
  536.                do
  536.                   $SCA_tov#1_U94 = tov(1 + 4 * $I_L536_1273)
  536.                   $SCA_tov#2_U95 = tov(2 + 4 * $I_L536_1273)
  536.                   $SCA_tov#3_U96 = tov(3 + 4 * $I_L536_1273)
  536.                   $SCA_tov#4_U97 = tov(4 + 4 * $I_L536_1273)
  536.                   $I_L536_1011 = 0
  536. !dir$ ivdep
  536. !dir$ blocking_size( 256, 256 )
  536.                   do
  536.                      gtd(1 + $I_L536_1011, 1 + 4 * $I_L536_1273) = gtd(1 + $I_L536_1011, 1 + 4 * $I_L536_1273) + 2.8573561616563808e-1 * ( $SCA_tov#1_U94 + gtmp(1 + $I_L536_1011, 1 + 4 * $I_L536_1273) ) * ( adveps(1 + $I_L536_1011, 1 + 4 * $I_L536_1273) + -psint(1 + $I_L536_1011, kmax) ) + -2.8573561616563808e-1 * divint(1 + $I_L536_1011, kmax) * gtmp(1 + $I_L536_1011, 1 + 4 * $I_L536_1273)
  536.                      gtd(1 + $I_L536_1011, 2 + 4 * $I_L536_1273) = gtd(1 + $I_L536_1011, 2 + 4 * $I_L536_1273) + -2.8573561616563808e-1 * divint(1 + $I_L536_1011, kmax) * gtmp(1 + $I_L536_1011, 2 + 4 * $I_L536_1273) + 2.8573561616563808e-1 * ( adveps(1 + $I_L536_1011, 2 + 4 * $I_L536_1273) + -psint(1 + $I_L536_1011, kmax) ) * ( $SCA_tov#2_U95 + gtmp(1 + $I_L536_1011, 2 + 4 * $I_L536_1273) )
  536.                      gtd(1 + $I_L536_1011, 3 + 4 * $I_L536_1273) = gtd(1 + $I_L536_1011, 3 + 4 * $I_L536_1273) + -2.8573561616563808e-1 * divint(1 + $I_L536_1011, kmax) * gtmp(1 + $I_L536_1011, 3 + 4 * $I_L536_1273) + 2.8573561616563808e-1 * ( adveps(1 + $I_L536_1011, 3 + 4 * $I_L536_1273) + -psint(1 + $I_L536_1011, kmax) ) * ( $SCA_tov#3_U96 + gtmp(1 + $I_L536_1011, 3 + 4 * $I_L536_1273) )
  536.                      gtd(1 + $I_L536_1011, 4 + 4 * $I_L536_1273) = gtd(1 + $I_L536_1011, 4 + 4 * $I_L536_1273) + -2.8573561616563808e-1 * divint(1 + $I_L536_1011, kmax) * gtmp(1 + $I_L536_1011, 4 + 4 * $I_L536_1273) + 2.8573561616563808e-1 * ( adveps(1 + $I_L536_1011, 4 + 4 * $I_L536_1273) + -psint(1 + $I_L536_1011, kmax) ) * ( $SCA_tov#4_U97 + gtmp(1 + $I_L536_1011, 4 + 4 * $I_L536_1273) )
  536.                      $I_L536_1011 = 1 + $I_L536_1011
  536.                      if ( $I_L536_1011 >= iblim ) exit
  536.                   enddo
  536.                   $I_L536_1273 = 1 + $I_L536_1273
  536.                   if ( $I_L536_1273 >= _rsh( kmax, 2 ) ) exit
  536.                enddo
  536.                $I_L536_1119 = and( 0xfffffffffffffffcUL, kmax )
  536.             endif
  536.             if ( $I_L536_1119 < kmax ) then
  536.                $I_L536_1232 = 0
  536. !dir$ blocking_size( 1, 1 )
  536.                do
  536.                   $SCA_tov_I95 = tov(1 + $I_L536_1119 + $I_L536_1232)
  536.                   $I_L536_1011 = 0
  536. !dir$ ivdep
  536. !dir$ blocking_size( 256, 256 )
  536.                   do
  536.                      gtd(1 + $I_L536_1011, 1 + $I_L536_1119 + $I_L536_1232) = gtd(1 + $I_L536_1011, 1 + $I_L536_1119 + $I_L536_1232) + -2.8573561616563808e-1 * divint(1 + $I_L536_1011, kmax) * gtmp(1 + $I_L536_1011, 1 + $I_L536_1119 + $I_L536_1232) + 2.8573561616563808e-1 * ( adveps(1 + $I_L536_1011, 1 + $I_L536_1119 + $I_L536_1232) + -psint(1 + $I_L536_1011, kmax) ) * ( $SCA_tov_I95 + gtmp(1 + $I_L536_1011, 1 + $I_L536_1119 + $I_L536_1232) )
  536.                      $I_L536_1011 = 1 + $I_L536_1011
  536.                      if ( $I_L536_1011 >= iblim ) exit
  536.                   enddo
  536.                   $I_L536_1232 = 1 + $I_L536_1232
  536.                   if ( $I_L536_1232 >= kmax + -$I_L536_1119 ) exit
  536.                enddo
  536.             endif
  536.          endif
  536.       endif
  536.       (tov%base_addr)(tov%dim_1%LB, 0) = _copyout( tov )
  538.       if ( slagr == .false. ) then
  543.          t$12 = ibmax
  543.          t$13 = kmax
  543.          t$91 = max( 0, ibmax )
  543.          t$92 = max( 0, ibmax )
  543.          t$93 = max( 0, kmax )
  543.          t$94 = max( 0, ibmax ) * max( 0, kmax )
  543.          if ( kmax > 0 ) then
  543.             if ( iblim > 0 ) then
  543.                $I_L543_1121 = 0
  543.                if ( kmax >= 4 ) then
  543.                   $I_L543_1275 = 0
  543. !dir$ blocking_size( 1, 1 )
  543.                   do
  543.                      $I_L543_1013 = 0
  543. !dir$ ivdep
  543. !dir$ blocking_size( 256, 256 )
  543.                      do
  543.                         gqd(1 + $I_L543_1013, 1 + 4 * $I_L543_1275) = gqd(1 + $I_L543_1013, 1 + 4 * $I_L543_1275) + -( rcl(1 + $I_L543_1013) * ( gqphi(1 + $I_L543_1013, 1 + 4 * $I_L543_1275) * gv(1 + $I_L543_1013, 1 + 4 * $I_L543_1275) + gqlam(1 + $I_L543_1013, 1 + 4 * $I_L543_1275) * gu(1 + $I_L543_1013, 1 + 4 * $I_L543_1275) ) )
  543.                         gqd(1 + $I_L543_1013, 2 + 4 * $I_L543_1275) = gqd(1 + $I_L543_1013, 2 + 4 * $I_L543_1275) + -( rcl(1 + $I_L543_1013) * ( gu(1 + $I_L543_1013, 2 + 4 * $I_L543_1275) * gqlam(1 + $I_L543_1013, 2 + 4 * $I_L543_1275) + gv(1 + $I_L543_1013, 2 + 4 * $I_L543_1275) * gqphi(1 + $I_L543_1013, 2 + 4 * $I_L543_1275) ) )
  543.                         gqd(1 + $I_L543_1013, 3 + 4 * $I_L543_1275) = gqd(1 + $I_L543_1013, 3 + 4 * $I_L543_1275) + -( rcl(1 + $I_L543_1013) * ( gu(1 + $I_L543_1013, 3 + 4 * $I_L543_1275) * gqlam(1 + $I_L543_1013, 3 + 4 * $I_L543_1275) + gv(1 + $I_L543_1013, 3 + 4 * $I_L543_1275) * gqphi(1 + $I_L543_1013, 3 + 4 * $I_L543_1275) ) )
  543.                         gqd(1 + $I_L543_1013, 4 + 4 * $I_L543_1275) = gqd(1 + $I_L543_1013, 4 + 4 * $I_L543_1275) + -( rcl(1 + $I_L543_1013) * ( gu(1 + $I_L543_1013, 4 + 4 * $I_L543_1275) * gqlam(1 + $I_L543_1013, 4 + 4 * $I_L543_1275) + gv(1 + $I_L543_1013, 4 + 4 * $I_L543_1275) * gqphi(1 + $I_L543_1013, 4 + 4 * $I_L543_1275) ) )
  543.                         $I_L543_1013 = 1 + $I_L543_1013
  543.                         if ( $I_L543_1013 >= iblim ) exit
  543.                      enddo
  543.                      $I_L543_1275 = 1 + $I_L543_1275
  543.                      if ( $I_L543_1275 >= _rsh( kmax, 2 ) ) exit
  543.                   enddo
  543.                   $I_L543_1121 = and( 0xfffffffffffffffcUL, kmax )
  543.                endif
  543.                if ( $I_L543_1121 < kmax ) then
  543.                   $I_L543_1235 = 0
  543. !dir$ blocking_size( 1, 1 )
  543.                   do
  543.                      $I_L543_1013 = 0
  543. !dir$ ivdep
  543. !dir$ blocking_size( 256, 256 )
  543.                      do
  543.                         gqd(1 + $I_L543_1013, 1 + $I_L543_1121 + $I_L543_1235) = gqd(1 + $I_L543_1013, 1 + $I_L543_1121 + $I_L543_1235) + -( rcl(1 + $I_L543_1013) * ( gu(1 + $I_L543_1013, 1 + $I_L543_1121 + $I_L543_1235) * gqlam(1 + $I_L543_1013, 1 + $I_L543_1121 + $I_L543_1235) + gv(1 + $I_L543_1013, 1 + $I_L543_1121 + $I_L543_1235) * gqphi(1 + $I_L543_1013, 1 + $I_L543_1121 + $I_L543_1235) ) )
  543.                         $I_L543_1013 = 1 + $I_L543_1013
  543.                         if ( $I_L543_1013 >= iblim ) exit
  543.                      enddo
  543.                      $I_L543_1235 = 1 + $I_L543_1235
  543.                      if ( $I_L543_1235 >= kmax + -$I_L543_1121 ) exit
  543.                   enddo
  543.                endif
  543.             endif
  543.          endif
  548.          tm$219 = loc( (rdel2%base_addr)(rdel2%dim_1%LB, 0) )
  548.          rdel2 = _copyin( (rdel2%base_addr)(rdel2%dim_1%LB, 0) )
  548.          t$14 = ibmax
  548.          t$15 = kmax
  548.          t$95 = max( 0, ibmax )
  548.          t$96 = max( 0, ibmax )
  548.          t$97 = max( 0, kmax )
  548.          t$98 = max( 0, ibmax ) * max( 0, kmax )
  548.          if ( iblim > 0 ) then
  548.             $SC_rdel2_I55 = rdel2(1)
  548.             $I_L548_1015 = 0
  548. !dir$ ivdep
  548.             do
  548.                gqd(1 + $I_L548_1015, 1) = gqd(1 + $I_L548_1015, 1) + -( $SC_rdel2_I55 * ( dot(1 + $I_L548_1015, 2) * ( gq(1 + $I_L548_1015, 2) + -gq(1 + $I_L548_1015, 1) ) ) )
  548.                $I_L548_1015 = 1 + $I_L548_1015
  548.                if ( $I_L548_1015 >= iblim ) exit
  548.             enddo
  548.          endif
  548.          if ( -3 + kmax >= 0 ) then
  548.             if ( iblim > 0 ) then
  548.                $I_L548_1123 = 0
  548.                if ( -4 + kmax >= 0 ) then
  548.                   $I_L548_1277 = 0
  548. !dir$ blocking_size( 1, 1 )
  548.                   do
  548.                      $SCA_rdel2#1_U98 = rdel2(2 + 2 * $I_L548_1277)
  548.                      $SCA_rdel2#2_U99 = rdel2(3 + 2 * $I_L548_1277)
  548.                      $I_L548_1017 = 0
  548. !dir$ ivdep
  548. !dir$ blocking_size( 256, 256 )
  548.                      do
  548.                         gqd(1 + $I_L548_1017, 2 + 2 * $I_L548_1277) = gqd(1 + $I_L548_1017, 2 + 2 * $I_L548_1277) + -( $SCA_rdel2#1_U98 * ( dot(1 + $I_L548_1017, 2 + 2 * $I_L548_1277) * ( gq(1 + $I_L548_1017, 2 + 2 * $I_L548_1277) + -gq(1 + $I_L548_1017, 1 + 2 * $I_L548_1277) ) + dot(1 + $I_L548_1017, 3 + 2 * $I_L548_1277) * ( gq(1 + $I_L548_1017, 3 + 2 * $I_L548_1277) + -gq(1 + $I_L548_1017, 2 + 2 * $I_L548_1277) ) ) )
  548.                         gqd(1 + $I_L548_1017, 3 + 2 * $I_L548_1277) = gqd(1 + $I_L548_1017, 3 + 2 * $I_L548_1277) + -( $SCA_rdel2#2_U99 * ( dot(1 + $I_L548_1017, 3 + 2 * $I_L548_1277) * ( gq(1 + $I_L548_1017, 3 + 2 * $I_L548_1277) + -gq(1 + $I_L548_1017, 2 + 2 * $I_L548_1277) ) + dot(1 + $I_L548_1017, 4 + 2 * $I_L548_1277) * ( gq(1 + $I_L548_1017, 4 + 2 * $I_L548_1277) + -gq(1 + $I_L548_1017, 3 + 2 * $I_L548_1277) ) ) )
  548.                         $I_L548_1017 = 1 + $I_L548_1017
  548.                         if ( $I_L548_1017 >= iblim ) exit
  548.                      enddo
  548.                      $I_L548_1277 = 1 + $I_L548_1277
  548.                      if ( $I_L548_1277 >= _rsh( -2 + kmax, 1 ) ) exit
  548.                   enddo
  548.                   $I_L548_1123 = and( 0xfffffffffffffffeUL, -2 + kmax )
  548.                endif
  548.                if ( $I_L548_1123 < -2 + kmax ) then
  548.                   $SCA_rdel2_I96 = rdel2(2 + $I_L548_1123)
  548.                   $I_L548_1017 = 0
  548. !dir$ ivdep
  548. !dir$ blocking_size( 256, 256 )
  548.                   do
  548.                      gqd(1 + $I_L548_1017, 2 + $I_L548_1123) = gqd(1 + $I_L548_1017, 2 + $I_L548_1123) + -( $SCA_rdel2_I96 * ( dot(1 + $I_L548_1017, 3 + $I_L548_1123) * ( gq(1 + $I_L548_1017, 3 + $I_L548_1123) + -gq(1 + $I_L548_1017, 2 + $I_L548_1123) ) + dot(1 + $I_L548_1017, 2 + $I_L548_1123) * ( gq(1 + $I_L548_1017, 2 + $I_L548_1123) + -gq(1 + $I_L548_1017, 1 + $I_L548_1123) ) ) )
  548.                      $I_L548_1017 = 1 + $I_L548_1017
  548.                      if ( $I_L548_1017 >= iblim ) exit
  548.                   enddo
  548.                endif
  548.             endif
  548.          endif
  548.          if ( iblim > 0 ) then
  548.             $SC_rdel2_I56 = rdel2(kmax)
  548.             $I_L548_1019 = 0
  548. !dir$ ivdep
  548.             do
  548.                gqd(1 + $I_L548_1019, kmax) = gqd(1 + $I_L548_1019, kmax) + -( $SC_rdel2_I56 * ( dot(1 + $I_L548_1019, kmax) * ( gq(1 + $I_L548_1019, kmax) + -gq(1 + $I_L548_1019, -1 + kmax) ) ) )
  548.                $I_L548_1019 = 1 + $I_L548_1019
  548.                if ( $I_L548_1019 >= iblim ) exit
  548.             enddo
  548.          endif
  548.          (rdel2%base_addr)(rdel2%dim_1%LB, 0) = _copyout( rdel2 )
  553.          $F_A79 = iblim
  553.          if ( iblim > 0 ) then
  553.             $I_L553_1089 = 0
  553. !dir$ ivdep
  553.             do
  553.                gvdlnp(1 + $I_L553_1089) = -psint(1 + $I_L553_1089, kmax)
  553.                $I_L553_1089 = 1 + $I_L553_1089
  553.                if ( $I_L553_1089 >= $F_A79 ) exit
  553.             enddo
  553.          endif
  553.       else
  557.          $F_A80 = iblim
  557.          if ( iblim > 0 ) then
  557.             $I_L557_1091 = 0
  557. !dir$ ivdep
  557.             do
  557.                gvdlnp(1 + $I_L557_1091) = 1.161237879579632e-5 * zsint(1 + $I_L557_1091)
  557.                $I_L557_1091 = 1 + $I_L557_1091
  557.                if ( $I_L557_1091 >= $F_A80 ) exit
  557.             enddo
  557.          endif
  557.       endif
  561.       if ( (dodia%base_addr)(51, 0) /= .false. ) then
  561. !dir$ suppress psint(1, 1)
  561.          t$304 = $_StaticDV_P36
  561.          t$304%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( psint(1, 1) ) )
  561.          t$304%header%el_len = 64
  561.          t$304%header%assoc = 1
  561.          t$304%header%ptr_alloc = 0
  561.          t$304%header%p_or_a = 0
  561.          t$304%header%a_contig = 1
  561.          t$304%header%n_dim = 2
  561.          t$304%header%orig_base = 0
  561.          t$304%header%orig_size = 0
  561.          t$304%header%n_codim = 0
  561.          t$304%header%dv_versn = 2
  561.          t$304%header%dv_smunit = 64
  561.          t$304%header%d_type = 0
  561.          t$304%header%n_params = 0
  561.          t$304%header%d_type_idx = 13
  561.          t$304%dim_1%LB = 1
  561.          t$304%dim_1%EX = _zla( 0, ibmax )
  561.          t$304%dim_1%SM = 1
  561.          t$304%dim_2%LB = 1
  561.          t$304%dim_2%EX = _zla( 0, kmax )
  561.          t$304%dim_2%SM = _zla( 0, ibmax )
  561.          call updia2d( t$304, 51, latco )
  561.       endif
  562.       if ( (dodia%base_addr)(52, 0) /= .false. ) then
  562. !dir$ suppress divint(1, 1)
  562.          t$305 = $_StaticDV_P37
  562.          t$305%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( divint(1, 1) ) )
  562.          t$305%header%el_len = 64
  562.          t$305%header%assoc = 1
  562.          t$305%header%ptr_alloc = 0
  562.          t$305%header%p_or_a = 0
  562.          t$305%header%a_contig = 1
  562.          t$305%header%n_dim = 2
  562.          t$305%header%orig_base = 0
  562.          t$305%header%orig_size = 0
  562.          t$305%header%n_codim = 0
  562.          t$305%header%dv_versn = 2
  562.          t$305%header%dv_smunit = 64
  562.          t$305%header%d_type = 0
  562.          t$305%header%n_params = 0
  562.          t$305%header%d_type_idx = 13
  562.          t$305%dim_1%LB = 1
  562.          t$305%dim_1%EX = _zla( 0, ibmax )
  562.          t$305%dim_1%SM = 1
  562.          t$305%dim_2%LB = 1
  562.          t$305%dim_2%EX = _zla( 0, kmax )
  562.          t$305%dim_2%SM = _zla( 0, ibmax )
  562.          call updia2d( t$305, 52, latco )
  562.       endif
  563.       if ( (dodia%base_addr)(7, 0) /= .false. ) then
  563. !dir$ suppress omg(1, 1)
  563.          t$306 = $_StaticDV_P38
  563.          t$306%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( omg(1, 1) ) )
  563.          t$306%header%el_len = 64
  563.          t$306%header%assoc = 1
  563.          t$306%header%ptr_alloc = 0
  563.          t$306%header%p_or_a = 0
  563.          t$306%header%a_contig = 1
  563.          t$306%header%n_dim = 2
  563.          t$306%header%orig_base = 0
  563.          t$306%header%orig_size = 0
  563.          t$306%header%n_codim = 0
  563.          t$306%header%dv_versn = 2
  563.          t$306%header%dv_smunit = 64
  563.          t$306%header%d_type = 0
  563.          t$306%header%n_params = 0
  563.          t$306%header%d_type_idx = 13
  563.          t$306%dim_1%LB = 1
  563.          t$306%dim_1%EX = _zla( 0, ibmax )
  563.          t$306%dim_1%SM = 1
  563.          t$306%dim_2%LB = 1
  563.          t$306%dim_2%EX = _zla( 0, kmax )
  563.          t$306%dim_2%SM = _zla( 0, ibmax )
  563.          call updia2d( t$306, 7, latco )
  563.       endif
  567.       $t_S76 = isgridhistoryon
  567.       if ( $t_S76 /= .false. ) then
  568.          if ( (dogrh%base_addr)(1, latco, 0) /= .false. ) then
  568. !dir$ suppress ps(1)
  568.             t$307 = $_StaticDV_P39
  568.             t$307%base_addr = pointer to array[1] of real (kind=8)( loc( ps(1) ) )
  568.             t$307%header%el_len = 64
  568.             t$307%header%assoc = 1
  568.             t$307%header%ptr_alloc = 0
  568.             t$307%header%p_or_a = 0
  568.             t$307%header%a_contig = 1
  568.             t$307%header%n_dim = 1
  568.             t$307%header%orig_base = 0
  568.             t$307%header%orig_size = 0
  568.             t$307%header%n_codim = 0
  568.             t$307%header%dv_versn = 2
  568.             t$307%header%dv_smunit = 64
  568.             t$307%header%d_type = 0
  568.             t$307%header%n_params = 0
  568.             t$307%header%d_type_idx = 13
  568.             t$307%dim_1%LB = 1
  568.             t$307%dim_1%EX = ( max( 0, iblim ) )
  568.             t$307%dim_1%SM = 1
  568.             call store1d( t$307, 1, latco, 10.0 )
  568.          endif
  568.       endif
  574.       if ( (dodia%base_addr)(8, 0) /= .false. ) then
  574. !dir$ suppress dot(1, 1)
  574.          t$308 = $_StaticDV_P40
  574.          t$308%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( dot(1, 1) ) )
  574.          t$308%header%el_len = 64
  574.          t$308%header%assoc = 1
  574.          t$308%header%ptr_alloc = 0
  574.          t$308%header%p_or_a = 0
  574.          t$308%header%a_contig = 1
  574.          t$308%header%n_dim = 2
  574.          t$308%header%orig_base = 0
  574.          t$308%header%orig_size = 0
  574.          t$308%header%n_codim = 0
  574.          t$308%header%dv_versn = 2
  574.          t$308%header%dv_smunit = 64
  574.          t$308%header%d_type = 0
  574.          t$308%header%n_params = 0
  574.          t$308%header%d_type_idx = 13
  574.          t$308%dim_1%LB = 1
  574.          t$308%dim_1%EX = _zla( 0, ibmax )
  574.          t$308%dim_1%SM = 1
  574.          t$308%dim_2%LB = 1
  574.          t$308%dim_2%EX = _zla( 0, kmax )
  574.          t$308%dim_2%SM = _zla( 0, ibmax )
  574.          call updia2d( t$308, 8, latco )
  574.       endif
  579.       if ( slagr == .false. ) then
  574.          goto 50
  579.       else if ( sl_twotime_scheme /= .false. ) then
  580.          if ( initial /= 2 ) then
  581.             tm$244 = loc( (rdel2%base_addr)(rdel2%dim_1%LB, 0) )
  581.             rdel2 = _copyin( (rdel2%base_addr)(rdel2%dim_1%LB, 0) )
  581.             tm$246 = loc( (ci%base_addr)(ci%dim_1%LB, 0) )
  581.             ci = _copyin( (ci%base_addr)(ci%dim_1%LB, 0) )
  581.             tm$248 = loc( (h1%base_addr)(h1%dim_1%LB, 0) )
  581.             h1 = _copyin( (h1%base_addr)(h1%dim_1%LB, 0) )
  581.             tm$250 = loc( (h2%base_addr)(h2%dim_1%LB, 0) )
  581.             h2 = _copyin( (h2%base_addr)(h2%dim_1%LB, 0) )
  581.             tm$252 = loc( (tov%base_addr)(tov%dim_1%LB, 0) )
  581.             tov = _copyin( (tov%base_addr)(tov%dim_1%LB, 0) )
  581.             t$27 = ibmax
  581.             t$28 = kmax
  581.             t$129 = max( 0, ibmax )
  581.             t$130 = max( 0, ibmax )
  581.             t$131 = max( 0, kmax )
  581.             t$132 = max( 0, ibmax ) * max( 0, kmax )
  581.             t$29 = ( 1 + kmax )
  581.             t$133 = max( 0, ( 1 + kmax ) )
  581.             if ( kmax > 0 ) then
  581.                if ( iblim > 0 ) then
  581.                   $I_L581_616 = 0
  581.                   if ( kmax >= 4 ) then
  581.                      $I_L581_639 = 0
  581. !dir$ blocking_size( 1, 1 )
  581.                      do
  581.                         $SCA_tov#1_U0 = tov(1 + 4 * $I_L581_639)
  581.                         $SCA_tov#2_U1 = tov(2 + 4 * $I_L581_639)
  581.                         $SCA_tov#3_U2 = tov(3 + 4 * $I_L581_639)
  581.                         $SCA_tov#4_U3 = tov(4 + 4 * $I_L581_639)
  581.                         $I_L581_602 = 0
  581. !dir$ ivdep
  581. !dir$ blocking_size( 256, 256 )
  581.                         do
  581.                            gyvm(1 + $I_L581_602, 1 + 4 * $I_L581_639) = gyvm(1 + $I_L581_602, 1 + 4 * $I_L581_639) + -5.0e-1 * ( zphi(1 + $I_L581_602, 1 + 4 * $I_L581_639) + 287.05000000000001 * gpphi(1 + $I_L581_602) * $SCA_tov#1_U0 )
  581.                            gyvm(1 + $I_L581_602, 2 + 4 * $I_L581_639) = gyvm(1 + $I_L581_602, 2 + 4 * $I_L581_639) + -5.0e-1 * ( zphi(1 + $I_L581_602, 2 + 4 * $I_L581_639) + 287.05000000000001 * gpphi(1 + $I_L581_602) * $SCA_tov#2_U1 )
  581.                            gyvm(1 + $I_L581_602, 3 + 4 * $I_L581_639) = gyvm(1 + $I_L581_602, 3 + 4 * $I_L581_639) + -5.0e-1 * ( zphi(1 + $I_L581_602, 3 + 4 * $I_L581_639) + 287.05000000000001 * gpphi(1 + $I_L581_602) * $SCA_tov#3_U2 )
  581.                            gyvm(1 + $I_L581_602, 4 + 4 * $I_L581_639) = gyvm(1 + $I_L581_602, 4 + 4 * $I_L581_639) + -5.0e-1 * ( zphi(1 + $I_L581_602, 4 + 4 * $I_L581_639) + 287.05000000000001 * gpphi(1 + $I_L581_602) * $SCA_tov#4_U3 )
  581.                            gyum(1 + $I_L581_602, 1 + 4 * $I_L581_639) = gyum(1 + $I_L581_602, 1 + 4 * $I_L581_639) + -5.0e-1 * ( zlam(1 + $I_L581_602, 1 + 4 * $I_L581_639) + 287.05000000000001 * gplam(1 + $I_L581_602) * $SCA_tov#1_U0 )
  581.                            gyum(1 + $I_L581_602, 2 + 4 * $I_L581_639) = gyum(1 + $I_L581_602, 2 + 4 * $I_L581_639) + -5.0e-1 * ( zlam(1 + $I_L581_602, 2 + 4 * $I_L581_639) + 287.05000000000001 * gplam(1 + $I_L581_602) * $SCA_tov#2_U1 )
  581.                            gyum(1 + $I_L581_602, 3 + 4 * $I_L581_639) = gyum(1 + $I_L581_602, 3 + 4 * $I_L581_639) + -5.0e-1 * ( zlam(1 + $I_L581_602, 3 + 4 * $I_L581_639) + 287.05000000000001 * gplam(1 + $I_L581_602) * $SCA_tov#3_U2 )
  581.                            gyum(1 + $I_L581_602, 4 + 4 * $I_L581_639) = gyum(1 + $I_L581_602, 4 + 4 * $I_L581_639) + -5.0e-1 * ( zlam(1 + $I_L581_602, 4 + 4 * $I_L581_639) + 287.05000000000001 * gplam(1 + $I_L581_602) * $SCA_tov#4_U3 )
  581.                            $I_L581_602 = 1 + $I_L581_602
  581.                            if ( $I_L581_602 >= iblim ) exit
  581.                         enddo
  581.                         $I_L581_639 = 1 + $I_L581_639
  581.                         if ( $I_L581_639 >= _rsh( kmax, 2 ) ) exit
  581.                      enddo
  581.                      $I_L581_616 = and( 0xfffffffffffffffcUL, kmax )
  581.                   endif
  581.                   if ( $I_L581_616 < kmax ) then
  581.                      $I_L581_632 = 0
  581. !dir$ blocking_size( 1, 1 )
  581.                      do
  581.                         $SCA_tov_I69 = tov(1 + $I_L581_616 + $I_L581_632)
  581.                         $I_L581_602 = 0
  581. !dir$ ivdep
  581. !dir$ blocking_size( 256, 256 )
  581.                         do
  581.                            gyvm(1 + $I_L581_602, 1 + $I_L581_616 + $I_L581_632) = gyvm(1 + $I_L581_602, 1 + $I_L581_616 + $I_L581_632) + -5.0e-1 * ( zphi(1 + $I_L581_602, 1 + $I_L581_616 + $I_L581_632) + 287.05000000000001 * $SCA_tov_I69 * gpphi(1 + $I_L581_602) )
  581.                            gyum(1 + $I_L581_602, 1 + $I_L581_616 + $I_L581_632) = gyum(1 + $I_L581_602, 1 + $I_L581_616 + $I_L581_632) + -5.0e-1 * ( zlam(1 + $I_L581_602, 1 + $I_L581_616 + $I_L581_632) + 287.05000000000001 * $SCA_tov_I69 * gplam(1 + $I_L581_602) )
  581.                            $I_L581_602 = 1 + $I_L581_602
  581.                            if ( $I_L581_602 >= iblim ) exit
  581.                         enddo
  581.                         $I_L581_632 = 1 + $I_L581_632
  581.                         if ( $I_L581_632 >= kmax + -$I_L581_616 ) exit
  581.                      enddo
  581.                   endif
  581.                endif
  581.             endif
  581.             if ( iblim > 0 ) then
  581.                $I_L581_604 = 0
  581. !dir$ ivdep
  581.                do
  581.                   gvdlnpm(1 + $I_L581_604) = gvdlnpm(1 + $I_L581_604) + -5.0e-1 * divint(1 + $I_L581_604, kmax)
  581.                   $I_L581_604 = 1 + $I_L581_604
  581.                   if ( $I_L581_604 >= iblim ) exit
  581.                enddo
  581.             endif
  581.             if ( -1 + kmax > 0 ) then
  581.                if ( iblim > 0 ) then
  581.                   $I_L581_628 = 0
  581.                   do
  581.                      $I_L581_624 = 0
  581.                      do
  581.                         $I_L581_635 = 0
  581. !dir$ shortloop16
  581. !dir$ blocking_size( 2, 2 )
  581.                         do
  581.                            $I_L581_564 = $I_L581_635 + 2 * $I_L581_628
  581.                            $SCA_ci_I70 = ci(2 + $I_L581_635 + 2 * $I_L581_628)
  581.                            $I_L581_606 = 0
  581. !dir$ ivdep
  581. !dir$ blocking_size( 256, 256 )
  581.                            do
  581.                               dot(1 + $I_L581_606 + 256 * $I_L581_624, 1 + $I_L581_635 + 2 * $I_L581_628) = -divint(1 + $I_L581_606 + 256 * $I_L581_624, 1 + $I_L581_564) + $SCA_ci_I70 * divint(1 + $I_L581_606 + 256 * $I_L581_624, kmax)
  581.                               $I_L581_606 = 1 + $I_L581_606
  581.                               if ( $I_L581_606 >= min( iblim, 256 + 256 * $I_L581_624 ) + -256 * $I_L581_624 ) exit
  581.                            enddo
  581.                            $I_L581_635 = 1 + $I_L581_635
  581.                            if ( $I_L581_635 >= min( -1 + kmax, 2 + 2 * $I_L581_628 ) + -2 * $I_L581_628 ) exit
  581.                         enddo
  581.                         $I_L581_624 = 1 + $I_L581_624
  581.                         if ( $I_L581_624 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
  581.                      enddo
  581.                      $I_L581_628 = 1 + $I_L581_628
  581.                      if ( $I_L581_628 >= 1 + max( 0, -1 + _rsh( kmax, 1 ) ) ) exit
  581.                   enddo
  581.                endif
  581.             endif
  581.             if ( iblim > 0 ) then
  581.                $SC_h1_I58 = h1(1)
  581.                $SC_rdel2_I59 = rdel2(1)
  581.                $SC_tov_I57 = tov(1)
  581.                $I_L581_609 = 0
  581. !dir$ ivdep
  581.                do
  581.                   gtdm(1 + $I_L581_609, 1) = gtdm(1 + $I_L581_609, 1) + -5.0e-1 * ( 2.8573561616563808e-1 * $SC_tov_I57 * divint(1 + $I_L581_609, kmax) + dot(1 + $I_L581_609, 1) * $SC_h1_I58 * $SC_rdel2_I59 )
  581.                   $I_L581_609 = 1 + $I_L581_609
  581.                   if ( $I_L581_609 >= iblim ) exit
  581.                enddo
  581.             endif
  581.             if ( -3 + kmax >= 0 ) then
  581.                if ( iblim > 0 ) then
  581.                   $I_L581_630 = 0
  581.                   do
  581.                      $I_L581_626 = 0
  581.                      do
  581.                         $I_L581_637 = 0
  581. !dir$ shortloop16
  581. !dir$ blocking_size( 2, 2 )
  581.                         do
  581.                            $SCA_h2_I71 = h2(2 + $I_L581_637 + 2 * $I_L581_630)
  581.                            $SCA_h1_I72 = h1(2 + $I_L581_637 + 2 * $I_L581_630)
  581.                            $SCA_rdel2_I73 = rdel2(2 + $I_L581_637 + 2 * $I_L581_630)
  581.                            $SCA_tov_I74 = tov(2 + $I_L581_637 + 2 * $I_L581_630)
  581.                            $I_L581_611 = 0
  581. !dir$ ivdep
  581. !dir$ blocking_size( 256, 256 )
  581.                            do
  581.                               gtdm(1 + $I_L581_611 + 256 * $I_L581_626, 2 + $I_L581_637 + 2 * $I_L581_630) = gtdm(1 + $I_L581_611 + 256 * $I_L581_626, 2 + $I_L581_637 + 2 * $I_L581_630) + -5.0e-1 * ( 2.8573561616563808e-1 * $SCA_tov_I74 * divint(1 + $I_L581_611 + 256 * $I_L581_626, kmax) + $SCA_rdel2_I73 * ( $SCA_h1_I72 * dot(1 + $I_L581_611 + 256 * $I_L581_626, 2 + $I_L581_637 + 2 * $I_L581_630) + $SCA_h2_I71 * dot(1 + $I_L581_611 + 256 * $I_L581_626, 1 + $I_L581_637 + 2 * $I_L581_630) ) )
  581.                               $I_L581_611 = 1 + $I_L581_611
  581.                               if ( $I_L581_611 >= min( iblim, 256 + 256 * $I_L581_626 ) + -256 * $I_L581_626 ) exit
  581.                            enddo
  581.                            $I_L581_637 = 1 + $I_L581_637
  581.                            if ( $I_L581_637 >= min( -2 + kmax, 2 + 2 * $I_L581_630 ) + -2 * $I_L581_630 ) exit
  581.                         enddo
  581.                         $I_L581_626 = 1 + $I_L581_626
  581.                         if ( $I_L581_626 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
  581.                      enddo
  581.                      $I_L581_630 = 1 + $I_L581_630
  581.                      if ( $I_L581_630 >= 1 + max( 0, -1 + _rsh( -1 + kmax, 1 ) ) ) exit
  581.                   enddo
  581.                endif
  581.             endif
  581.             if ( iblim > 0 ) then
  581.                $SC_h2_I61 = h2(kmax)
  581.                $SC_rdel2_I62 = rdel2(kmax)
  581.                $SC_tov_I60 = tov(kmax)
  581.                $I_L581_614 = 0
  581. !dir$ ivdep
  581.                do
  581.                   gtdm(1 + $I_L581_614, kmax) = gtdm(1 + $I_L581_614, kmax) + -5.0e-1 * ( 2.8573561616563808e-1 * $SC_tov_I60 * divint(1 + $I_L581_614, kmax) + dot(1 + $I_L581_614, -1 + kmax) * $SC_h2_I61 * $SC_rdel2_I62 )
  581.                   $I_L581_614 = 1 + $I_L581_614
  581.                   if ( $I_L581_614 >= iblim ) exit
  581.                enddo
  581.             endif
  581.             (tov%base_addr)(tov%dim_1%LB, 0) = _copyout( tov )
  581.             (h2%base_addr)(h2%dim_1%LB, 0) = _copyout( h2 )
  581.             (h1%base_addr)(h1%dim_1%LB, 0) = _copyout( h1 )
  581.             (ci%base_addr)(ci%dim_1%LB, 0) = _copyout( ci )
  581.             (rdel2%base_addr)(rdel2%dim_1%LB, 0) = _copyout( rdel2 )
  581.          endif
  581.       else
  581.    50    continue
  585.          tm$276 = loc( (rdel2%base_addr)(rdel2%dim_1%LB, 0) )
  585.          rdel2 = _copyin( (rdel2%base_addr)(rdel2%dim_1%LB, 0) )
  585.          tm$278 = loc( (ci%base_addr)(ci%dim_1%LB, 0) )
  585.          ci = _copyin( (ci%base_addr)(ci%dim_1%LB, 0) )
  585.          tm$280 = loc( (h1%base_addr)(h1%dim_1%LB, 0) )
  585.          h1 = _copyin( (h1%base_addr)(h1%dim_1%LB, 0) )
  585.          tm$282 = loc( (h2%base_addr)(h2%dim_1%LB, 0) )
  585.          h2 = _copyin( (h2%base_addr)(h2%dim_1%LB, 0) )
  585.          tm$284 = loc( (tov%base_addr)(tov%dim_1%LB, 0) )
  585.          tov = _copyin( (tov%base_addr)(tov%dim_1%LB, 0) )
  585.          t$27 = ibmax
  585.          t$28 = kmax
  585.          t$129 = max( 0, ibmax )
  585.          t$130 = max( 0, ibmax )
  585.          t$131 = max( 0, kmax )
  585.          t$132 = max( 0, ibmax ) * max( 0, kmax )
  585.          t$29 = ( 1 + kmax )
  585.          t$133 = max( 0, ( 1 + kmax ) )
  585.          if ( kmax > 0 ) then
  585.             if ( iblim > 0 ) then
  585.                $I_L585_1125 = 0
  585.                if ( kmax >= 4 ) then
  585.                   $I_L585_1279 = 0
  585. !dir$ blocking_size( 1, 1 )
  585.                   do
  585.                      $SCA_tov#1_U100 = tov(1 + 4 * $I_L585_1279)
  585.                      $SCA_tov#2_U101 = tov(2 + 4 * $I_L585_1279)
  585.                      $SCA_tov#3_U102 = tov(3 + 4 * $I_L585_1279)
  585.                      $SCA_tov#4_U103 = tov(4 + 4 * $I_L585_1279)
  585.                      $I_L585_1021 = 0
  585. !dir$ ivdep
  585. !dir$ blocking_size( 256, 256 )
  585.                      do
  585.                         gyum(1 + $I_L585_1021, 1 + 4 * $I_L585_1279) = gyum(1 + $I_L585_1021, 1 + 4 * $I_L585_1279) + -5.0e-1 * ( zlam(1 + $I_L585_1021, 1 + 4 * $I_L585_1279) + 287.05000000000001 * gplamm(1 + $I_L585_1021) * $SCA_tov#1_U100 )
  585.                         gyum(1 + $I_L585_1021, 2 + 4 * $I_L585_1279) = gyum(1 + $I_L585_1021, 2 + 4 * $I_L585_1279) + -5.0e-1 * ( zlam(1 + $I_L585_1021, 2 + 4 * $I_L585_1279) + 287.05000000000001 * gplamm(1 + $I_L585_1021) * $SCA_tov#2_U101 )
  585.                         gyum(1 + $I_L585_1021, 3 + 4 * $I_L585_1279) = gyum(1 + $I_L585_1021, 3 + 4 * $I_L585_1279) + -5.0e-1 * ( zlam(1 + $I_L585_1021, 3 + 4 * $I_L585_1279) + 287.05000000000001 * gplamm(1 + $I_L585_1021) * $SCA_tov#3_U102 )
  585.                         gyum(1 + $I_L585_1021, 4 + 4 * $I_L585_1279) = gyum(1 + $I_L585_1021, 4 + 4 * $I_L585_1279) + -5.0e-1 * ( zlam(1 + $I_L585_1021, 4 + 4 * $I_L585_1279) + 287.05000000000001 * gplamm(1 + $I_L585_1021) * $SCA_tov#4_U103 )
  585.                         gyvm(1 + $I_L585_1021, 1 + 4 * $I_L585_1279) = gyvm(1 + $I_L585_1021, 1 + 4 * $I_L585_1279) + -5.0e-1 * ( zphi(1 + $I_L585_1021, 1 + 4 * $I_L585_1279) + 287.05000000000001 * gpphim(1 + $I_L585_1021) * $SCA_tov#1_U100 )
  585.                         gyvm(1 + $I_L585_1021, 2 + 4 * $I_L585_1279) = gyvm(1 + $I_L585_1021, 2 + 4 * $I_L585_1279) + -5.0e-1 * ( zphi(1 + $I_L585_1021, 2 + 4 * $I_L585_1279) + 287.05000000000001 * gpphim(1 + $I_L585_1021) * $SCA_tov#2_U101 )
  585.                         gyvm(1 + $I_L585_1021, 3 + 4 * $I_L585_1279) = gyvm(1 + $I_L585_1021, 3 + 4 * $I_L585_1279) + -5.0e-1 * ( zphi(1 + $I_L585_1021, 3 + 4 * $I_L585_1279) + 287.05000000000001 * gpphim(1 + $I_L585_1021) * $SCA_tov#3_U102 )
  585.                         gyvm(1 + $I_L585_1021, 4 + 4 * $I_L585_1279) = gyvm(1 + $I_L585_1021, 4 + 4 * $I_L585_1279) + -5.0e-1 * ( zphi(1 + $I_L585_1021, 4 + 4 * $I_L585_1279) + 287.05000000000001 * gpphim(1 + $I_L585_1021) * $SCA_tov#4_U103 )
  585.                         $I_L585_1021 = 1 + $I_L585_1021
  585.                         if ( $I_L585_1021 >= iblim ) exit
  585.                      enddo
  585.                      $I_L585_1279 = 1 + $I_L585_1279
  585.                      if ( $I_L585_1279 >= _rsh( kmax, 2 ) ) exit
  585.                   enddo
  585.                   $I_L585_1125 = and( 0xfffffffffffffffcUL, kmax )
  585.                endif
  585.                if ( $I_L585_1125 < kmax ) then
  585.                   $I_L585_1238 = 0
  585. !dir$ blocking_size( 1, 1 )
  585.                   do
  585.                      $SCA_tov_I97 = tov(1 + $I_L585_1125 + $I_L585_1238)
  585.                      $I_L585_1021 = 0
  585. !dir$ ivdep
  585. !dir$ blocking_size( 256, 256 )
  585.                      do
  585.                         gyum(1 + $I_L585_1021, 1 + $I_L585_1125 + $I_L585_1238) = gyum(1 + $I_L585_1021, 1 + $I_L585_1125 + $I_L585_1238) + -5.0e-1 * ( zlam(1 + $I_L585_1021, 1 + $I_L585_1125 + $I_L585_1238) + 287.05000000000001 * $SCA_tov_I97 * gplamm(1 + $I_L585_1021) )
  585.                         gyvm(1 + $I_L585_1021, 1 + $I_L585_1125 + $I_L585_1238) = gyvm(1 + $I_L585_1021, 1 + $I_L585_1125 + $I_L585_1238) + -5.0e-1 * ( zphi(1 + $I_L585_1021, 1 + $I_L585_1125 + $I_L585_1238) + 287.05000000000001 * $SCA_tov_I97 * gpphim(1 + $I_L585_1021) )
  585.                         $I_L585_1021 = 1 + $I_L585_1021
  585.                         if ( $I_L585_1021 >= iblim ) exit
  585.                      enddo
  585.                      $I_L585_1238 = 1 + $I_L585_1238
  585.                      if ( $I_L585_1238 >= kmax + -$I_L585_1125 ) exit
  585.                   enddo
  585.                endif
  585.             endif
  585.          endif
  585.          if ( iblim > 0 ) then
  585.             $I_L585_1023 = 0
  585. !dir$ ivdep
  585.             do
  585.                gvdlnpm(1 + $I_L585_1023) = gvdlnpm(1 + $I_L585_1023) + -5.0e-1 * divintm(1 + $I_L585_1023, kmax)
  585.                $I_L585_1023 = 1 + $I_L585_1023
  585.                if ( $I_L585_1023 >= iblim ) exit
  585.             enddo
  585.          endif
  585.          if ( -1 + kmax > 0 ) then
  585.             if ( iblim > 0 ) then
  585.                $I_L585_1207 = 0
  585.                do
  585.                   $I_L585_1195 = 0
  585.                   do
  585.                      $I_L585_1249 = 0
  585. !dir$ shortloop16
  585. !dir$ blocking_size( 2, 2 )
  585.                      do
  585.                         $I_L585_558 = $I_L585_1249 + 2 * $I_L585_1207
  585.                         $SCA_ci_I98 = ci(2 + $I_L585_1249 + 2 * $I_L585_1207)
  585.                         $I_L585_1025 = 0
  585. !dir$ ivdep
  585. !dir$ blocking_size( 256, 256 )
  585.                         do
  585.                            dot(1 + $I_L585_1025 + 256 * $I_L585_1195, 1 + $I_L585_1249 + 2 * $I_L585_1207) = -divintm(1 + $I_L585_1025 + 256 * $I_L585_1195, 1 + $I_L585_558) + $SCA_ci_I98 * divintm(1 + $I_L585_1025 + 256 * $I_L585_1195, kmax)
  585.                            $I_L585_1025 = 1 + $I_L585_1025
  585.                            if ( $I_L585_1025 >= min( iblim, 256 + 256 * $I_L585_1195 ) + -256 * $I_L585_1195 ) exit
  585.                         enddo
  585.                         $I_L585_1249 = 1 + $I_L585_1249
  585.                         if ( $I_L585_1249 >= min( -1 + kmax, 2 + 2 * $I_L585_1207 ) + -2 * $I_L585_1207 ) exit
  585.                      enddo
  585.                      $I_L585_1195 = 1 + $I_L585_1195
  585.                      if ( $I_L585_1195 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
  585.                   enddo
  585.                   $I_L585_1207 = 1 + $I_L585_1207
  585.                   if ( $I_L585_1207 >= 1 + max( 0, -1 + _rsh( kmax, 1 ) ) ) exit
  585.                enddo
  585.             endif
  585.          endif
  585.          if ( iblim > 0 ) then
  585.             $SC_h1_I64 = h1(1)
  585.             $SC_rdel2_I65 = rdel2(1)
  585.             $SC_tov_I63 = tov(1)
  585.             $I_L585_1028 = 0
  585. !dir$ ivdep
  585.             do
  585.                gtdm(1 + $I_L585_1028, 1) = gtdm(1 + $I_L585_1028, 1) + -5.0e-1 * ( dot(1 + $I_L585_1028, 1) * $SC_h1_I64 * $SC_rdel2_I65 + 2.8573561616563808e-1 * $SC_tov_I63 * divintm(1 + $I_L585_1028, kmax) )
  585.                $I_L585_1028 = 1 + $I_L585_1028
  585.                if ( $I_L585_1028 >= iblim ) exit
  585.             enddo
  585.          endif
  585.          if ( -3 + kmax >= 0 ) then
  585.             if ( iblim > 0 ) then
  585.                $I_L585_1209 = 0
  585.                do
  585.                   $I_L585_1197 = 0
  585.                   do
  585.                      $I_L585_1251 = 0
  585. !dir$ shortloop16
  585. !dir$ blocking_size( 2, 2 )
  585.                      do
  585.                         $SCA_h2_I99 = h2(2 + $I_L585_1251 + 2 * $I_L585_1209)
  585.                         $SCA_h1_I100 = h1(2 + $I_L585_1251 + 2 * $I_L585_1209)
  585.                         $SCA_rdel2_I101 = rdel2(2 + $I_L585_1251 + 2 * $I_L585_1209)
  585.                         $SCA_tov_I102 = tov(2 + $I_L585_1251 + 2 * $I_L585_1209)
  585.                         $I_L585_1030 = 0
  585. !dir$ ivdep
  585. !dir$ blocking_size( 256, 256 )
  585.                         do
  585.                            gtdm(1 + $I_L585_1030 + 256 * $I_L585_1197, 2 + $I_L585_1251 + 2 * $I_L585_1209) = gtdm(1 + $I_L585_1030 + 256 * $I_L585_1197, 2 + $I_L585_1251 + 2 * $I_L585_1209) + -5.0e-1 * ( 2.8573561616563808e-1 * $SCA_tov_I102 * divintm(1 + $I_L585_1030 + 256 * $I_L585_1197, kmax) + $SCA_rdel2_I101 * ( $SCA_h1_I100 * dot(1 + $I_L585_1030 + 256 * $I_L585_1197, 2 + $I_L585_1251 + 2 * $I_L585_1209) + $SCA_h2_I99 * dot(1 + $I_L585_1030 + 256 * $I_L585_1197, 1 + $I_L585_1251 + 2 * $I_L585_1209) ) )
  585.                            $I_L585_1030 = 1 + $I_L585_1030
  585.                            if ( $I_L585_1030 >= min( iblim, 256 + 256 * $I_L585_1197 ) + -256 * $I_L585_1197 ) exit
  585.                         enddo
  585.                         $I_L585_1251 = 1 + $I_L585_1251
  585.                         if ( $I_L585_1251 >= min( -2 + kmax, 2 + 2 * $I_L585_1209 ) + -2 * $I_L585_1209 ) exit
  585.                      enddo
  585.                      $I_L585_1197 = 1 + $I_L585_1197
  585.                      if ( $I_L585_1197 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
  585.                   enddo
  585.                   $I_L585_1209 = 1 + $I_L585_1209
  585.                   if ( $I_L585_1209 >= 1 + max( 0, -1 + _rsh( -1 + kmax, 1 ) ) ) exit
  585.                enddo
  585.             endif
  585.          endif
  585.          if ( iblim > 0 ) then
  585.             $SC_h2_I67 = h2(kmax)
  585.             $SC_rdel2_I68 = rdel2(kmax)
  585.             $SC_tov_I66 = tov(kmax)
  585.             $I_L585_1033 = 0
  585. !dir$ ivdep
  585.             do
  585.                gtdm(1 + $I_L585_1033, kmax) = gtdm(1 + $I_L585_1033, kmax) + -5.0e-1 * ( dot(1 + $I_L585_1033, -1 + kmax) * $SC_h2_I67 * $SC_rdel2_I68 + 2.8573561616563808e-1 * $SC_tov_I66 * divintm(1 + $I_L585_1033, kmax) )
  585.                $I_L585_1033 = 1 + $I_L585_1033
  585.                if ( $I_L585_1033 >= iblim ) exit
  585.             enddo
  585.          endif
  585.          (tov%base_addr)(tov%dim_1%LB, 0) = _copyout( tov )
  585.          (h2%base_addr)(h2%dim_1%LB, 0) = _copyout( h2 )
  585.          (h1%base_addr)(h1%dim_1%LB, 0) = _copyout( h1 )
  585.          (ci%base_addr)(ci%dim_1%LB, 0) = _copyout( ci )
  585.          (rdel2%base_addr)(rdel2%dim_1%LB, 0) = _copyout( rdel2 )
  585.       endif
  589.       if (  _substr(isimp,1,_ltrim(  _substr(isimp,1,4) )) /= 'YES' ) then
  593.          if ( kmax > 0 ) then
  596.             $SC_tov_I25 = tov%dim_1%EX
  596.             $SC_tov_I26 = tov%dim_1%LB
  594.             if ( iblim > 0 ) then
  593.                $I_L593_1285 = 0
  593.                do
  594.                   $SCA_tov_I103 = (tov%base_addr)(1 + $I_L593_1285, 0)
  594.                   $I_L594_1281 = 0
  594. !dir$ ivdep
  594.                   do
  596.                      gtm(1 + $I_L594_1281, 1 + $I_L593_1285) = $SCA_tov_I103 + gtm(1 + $I_L594_1281, 1 + $I_L593_1285)
  595.                      gtmp(1 + $I_L594_1281, 1 + $I_L593_1285) = $SCA_tov_I103 + gtmp(1 + $I_L594_1281, 1 + $I_L593_1285)
  597.                      $I_L594_1281 = 1 + $I_L594_1281
  594.                      if ( $I_L594_1281 >= iblim ) exit
  594.                   enddo
  598.                   $I_L593_1285 = 1 + $I_L593_1285
  597.                   if ( $I_L593_1285 >= kmax ) exit
  597.                enddo
  597.             endif
  597.          endif
  602.          t$317 = int( _alloc( max( 0, 8 * _zla( 0, ibmax ) ) ), 8 )
  602.          $F_A81 = ibmax
  602.          if ( ibmax > 0 ) then
  602.             $I_A1 = 0
  602. !dir$ ivdep
  602.             do
  602.                t$316(1 + $I_A1) = 10.0 * ps(1 + $I_A1)
  602.                $I_A1 = 1 + $I_A1
  602.                if ( $I_A1 >= $F_A81 ) exit
  602.             enddo
  602.          endif
  601.          call dryphysics( gzs(1), gtm(1, 1), gqm(1, 1), gum(1, 1), gvm(1, 1), t$316(1), gyu(1, 1), gyv(1, 1), gtd(1, 1), gqd(1, 1), colrad(1), ifday, tod, gtmp(1, 1), gq(1, 1), omg(1, 1), jb, lonrad(1), glnpm(1), cos2d(1), intcosz )
  602.          _free( t$317 )
  606.          if ( kmax > 0 ) then
  609.             $SC_tov_I25 = tov%dim_1%EX
  609.             $SC_tov_I26 = tov%dim_1%LB
  607.             if ( iblim > 0 ) then
  606.                $I_L606_1287 = 0
  606.                do
  607.                   $SCA_tov_I104 = (tov%base_addr)(1 + $I_L606_1287, 0)
  607.                   $I_L607_1283 = 0
  607. !dir$ ivdep
  607.                   do
  609.                      gtmp(1 + $I_L607_1283, 1 + $I_L606_1287) = gtmp(1 + $I_L607_1283, 1 + $I_L606_1287) + -$SCA_tov_I104
  608.                      gtm(1 + $I_L607_1283, 1 + $I_L606_1287) = gtm(1 + $I_L607_1283, 1 + $I_L606_1287) + -$SCA_tov_I104
  610.                      $I_L607_1283 = 1 + $I_L607_1283
  607.                      if ( $I_L607_1283 >= iblim ) exit
  607.                   enddo
  611.                   $I_L606_1287 = 1 + $I_L606_1287
  610.                   if ( $I_L606_1287 >= kmax ) exit
  610.                enddo
  610.             endif
  610.          endif
  615.          call pwater( gq(1, 1), dot(1, 1), ps(1), (del%base_addr)(del%dim_1%LB, 0), ibmax, iblim, kmax )
  616.          if ( (dodia%base_addr)(14, 0) /= .false. ) then
  616. !dir$ suppress dot(1, 1)
  616.             t$324 = $_StaticDV_P41
  616.             t$324%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( dot(1, 1) ) )
  616.             t$324%header%el_len = 64
  616.             t$324%header%assoc = 1
  616.             t$324%header%ptr_alloc = 0
  616.             t$324%header%p_or_a = 0
  616.             t$324%header%a_contig = 1
  616.             t$324%header%n_dim = 2
  616.             t$324%header%orig_base = 0
  616.             t$324%header%orig_size = 0
  616.             t$324%header%n_codim = 0
  616.             t$324%header%dv_versn = 2
  616.             t$324%header%dv_smunit = 64
  616.             t$324%header%d_type = 0
  616.             t$324%header%n_params = 0
  616.             t$324%header%d_type_idx = 13
  616.             t$324%dim_1%LB = 1
  616.             t$324%dim_1%EX = _zla( 0, ibmax )
  616.             t$324%dim_1%SM = 1
  616.             t$324%dim_2%LB = 1
  616.             t$324%dim_2%EX = _zla( 0, kmax )
  616.             t$324%dim_2%SM = _zla( 0, ibmax )
  616.             call updia2d( t$324, 14, latco )
  616.          endif
  616.       endif
  627.       if ( (dodia%base_addr)(1, 0) /= .false. ) then
  627. !dir$ suppress ps(1)
  627.          t$325 = $_StaticDV_P42
  627.          t$325%base_addr = pointer to array[1] of real (kind=8)( loc( ps(1) ) )
  627.          t$325%header%el_len = 64
  627.          t$325%header%assoc = 1
  627.          t$325%header%ptr_alloc = 0
  627.          t$325%header%p_or_a = 0
  627.          t$325%header%a_contig = 1
  627.          t$325%header%n_dim = 1
  627.          t$325%header%orig_base = 0
  627.          t$325%header%orig_size = 0
  627.          t$325%header%n_codim = 0
  627.          t$325%header%dv_versn = 2
  627.          t$325%header%dv_smunit = 64
  627.          t$325%header%d_type = 0
  627.          t$325%header%n_params = 0
  627.          t$325%header%d_type_idx = 13
  627.          t$325%dim_1%LB = 1
  627.          t$325%dim_1%EX = _zla( 0, ibmax )
  627.          t$325%dim_1%SM = 1
  627.          call updia1d( t$325, 1, latco )
  627.       endif
  629.       if ( initial == 1 ) then
  629.          if ( slagr /= .false. ) then
  629.             if ( sl_twotime_scheme /= .false. ) then
  630.                $F_A82 = kmax
  630.                $F_A83 = ibmax
  630.                if ( and( -$F_A83, -$F_A82 ) < 0 ) then
  630.                   $I_A2 = 0
  630.                   do
  630.                      $I_A1 = 0
  630. !dir$ ivdep
  630.                      do
  630.                         gyum(1 + $I_A1, 1 + $I_A2) = gyum(1 + $I_A1, 1 + $I_A2) + -5.0e-1 * gyu(1 + $I_A1, 1 + $I_A2)
  630.                         $I_A1 = 1 + $I_A1
  630.                         if ( $I_A1 >= $F_A83 ) exit
  630.                      enddo
  630.                      $I_A2 = 1 + $I_A2
  630.                      if ( $I_A2 >= $F_A82 ) exit
  630.                   enddo
  630.                endif
  631.                $F_A84 = kmax
  631.                $F_A85 = ibmax
  631.                if ( and( -$F_A85, -$F_A84 ) < 0 ) then
  631.                   $I_A2 = 0
  631.                   do
  631.                      $I_A1 = 0
  631. !dir$ ivdep
  631.                      do
  631.                         gyvm(1 + $I_A1, 1 + $I_A2) = gyvm(1 + $I_A1, 1 + $I_A2) + -5.0e-1 * gyv(1 + $I_A1, 1 + $I_A2)
  631.                         $I_A1 = 1 + $I_A1
  631.                         if ( $I_A1 >= $F_A85 ) exit
  631.                      enddo
  631.                      $I_A2 = 1 + $I_A2
  631.                      if ( $I_A2 >= $F_A84 ) exit
  631.                   enddo
  631.                endif
  632.                $F_A86 = kmax
  632.                $F_A87 = ibmax
  632.                if ( and( -$F_A87, -$F_A86 ) < 0 ) then
  632.                   $I_A2 = 0
  632.                   do
  632.                      $I_A1 = 0
  632. !dir$ ivdep
  632.                      do
  632.                         gtdm(1 + $I_A1, 1 + $I_A2) = gtdm(1 + $I_A1, 1 + $I_A2) + -5.0e-1 * gtd(1 + $I_A1, 1 + $I_A2)
  632.                         $I_A1 = 1 + $I_A1
  632.                         if ( $I_A1 >= $F_A87 ) exit
  632.                      enddo
  632.                      $I_A2 = 1 + $I_A2
  632.                      if ( $I_A2 >= $F_A86 ) exit
  632.                   enddo
  632.                endif
  633.                $F_A88 = kmax
  633.                $F_A89 = ibmax
  633.                if ( and( -$F_A89, -$F_A88 ) < 0 ) then
  633.                   $I_A2 = 0
  633.                   do
  633.                      $I_A1 = 0
  633. !dir$ ivdep
  633.                      do
  633.                         gqdm(1 + $I_A1, 1 + $I_A2) = gqdm(1 + $I_A1, 1 + $I_A2) + -5.0e-1 * gqd(1 + $I_A1, 1 + $I_A2)
  633.                         $I_A1 = 1 + $I_A1
  633.                         if ( $I_A1 >= $F_A89 ) exit
  633.                      enddo
  633.                      $I_A2 = 1 + $I_A2
  633.                      if ( $I_A2 >= $F_A88 ) exit
  633.                   enddo
  633.                endif
  634.                $F_A90 = ibmax
  634.                if ( ibmax > 0 ) then
  634.                   $I_A1 = 0
  634. !dir$ ivdep
  634.                   do
  634.                      gvdlnpm(1 + $I_A1) = gvdlnpm(1 + $I_A1) + -5.0e-1 * gvdlnp(1 + $I_A1)
  634.                      $I_A1 = 1 + $I_A1
  634.                      if ( $I_A1 >= $F_A90 ) exit
  634.                   enddo
  634.                endif
  634.             endif
  634.          endif
  634.       endif
  181.       _free( t$43 )
  636.       return
  636.       end
  636.       
  643.       
  643.       subroutine delwind( ulam, vlam, vor, div, uphi, vphi, cos2lat, ibmax, kmax, iblim )
  643.       t$4 = ibmax
  643.       t$5 = kmax
  648.       t$73 = _zla( 0, ibmax )
  643.       t$74 = _zla( 0, ibmax )
  648.       t$75 = _zla( 0, kmax )
  643.       t$76 = _zla( 0, ibmax ) * _zla( 0, kmax )
  661.       if ( kmax > 0 ) then
  662.          if ( iblim > 0 ) then
  661.             $I_L661_14 = 0
  661.             if ( kmax >= 4 ) then
  661.                $I_L661_19 = 0
  661. !dir$ blocking_size( 1, 1 )
  661.                do
  662.                   $I_L662_12 = 0
  662. !dir$ ivdep
  662. !dir$ blocking_size( 256, 256 )
  662.                   do
  663.                      uphi(1 + $I_L662_12, 1 + 4 * $I_L661_19) = vlam(1 + $I_L662_12, 1 + 4 * $I_L661_19) + -( cos2lat(1 + $I_L662_12) * vor(1 + $I_L662_12, 1 + 4 * $I_L661_19) )
  664.                      vphi(1 + $I_L662_12, 1 + 4 * $I_L661_19) = -ulam(1 + $I_L662_12, 1 + 4 * $I_L661_19) + cos2lat(1 + $I_L662_12) * div(1 + $I_L662_12, 1 + 4 * $I_L661_19)
  663.                      uphi(1 + $I_L662_12, 2 + 4 * $I_L661_19) = vlam(1 + $I_L662_12, 2 + 4 * $I_L661_19) + -( cos2lat(1 + $I_L662_12) * vor(1 + $I_L662_12, 2 + 4 * $I_L661_19) )
  664.                      vphi(1 + $I_L662_12, 2 + 4 * $I_L661_19) = -ulam(1 + $I_L662_12, 2 + 4 * $I_L661_19) + cos2lat(1 + $I_L662_12) * div(1 + $I_L662_12, 2 + 4 * $I_L661_19)
  663.                      uphi(1 + $I_L662_12, 3 + 4 * $I_L661_19) = vlam(1 + $I_L662_12, 3 + 4 * $I_L661_19) + -( cos2lat(1 + $I_L662_12) * vor(1 + $I_L662_12, 3 + 4 * $I_L661_19) )
  664.                      vphi(1 + $I_L662_12, 3 + 4 * $I_L661_19) = -ulam(1 + $I_L662_12, 3 + 4 * $I_L661_19) + cos2lat(1 + $I_L662_12) * div(1 + $I_L662_12, 3 + 4 * $I_L661_19)
  663.                      uphi(1 + $I_L662_12, 4 + 4 * $I_L661_19) = vlam(1 + $I_L662_12, 4 + 4 * $I_L661_19) + -( cos2lat(1 + $I_L662_12) * vor(1 + $I_L662_12, 4 + 4 * $I_L661_19) )
  664.                      vphi(1 + $I_L662_12, 4 + 4 * $I_L661_19) = -ulam(1 + $I_L662_12, 4 + 4 * $I_L661_19) + cos2lat(1 + $I_L662_12) * div(1 + $I_L662_12, 4 + 4 * $I_L661_19)
  665.                      $I_L662_12 = 1 + $I_L662_12
  662.                      if ( $I_L662_12 >= iblim ) exit
  662.                   enddo
  666.                   $I_L661_19 = 1 + $I_L661_19
  665.                   if ( $I_L661_19 >= _rsh( kmax, 2 ) ) exit
  665.                enddo
  666.                $I_L661_14 = and( 0xfffffffffffffffcUL, kmax )
  666.             endif
  661.             if ( $I_L661_14 < kmax ) then
  661.                $I_L661_16 = 0
  661. !dir$ blocking_size( 1, 1 )
  661.                do
  662.                   $I_L662_12 = 0
  662. !dir$ ivdep
  662. !dir$ blocking_size( 256, 256 )
  662.                   do
  663.                      uphi(1 + $I_L662_12, 1 + $I_L661_14 + $I_L661_16) = vlam(1 + $I_L662_12, 1 + $I_L661_14 + $I_L661_16) + -( cos2lat(1 + $I_L662_12) * vor(1 + $I_L662_12, 1 + $I_L661_14 + $I_L661_16) )
  664.                      vphi(1 + $I_L662_12, 1 + $I_L661_14 + $I_L661_16) = -ulam(1 + $I_L662_12, 1 + $I_L661_14 + $I_L661_16) + cos2lat(1 + $I_L662_12) * div(1 + $I_L662_12, 1 + $I_L661_14 + $I_L661_16)
  665.                      $I_L662_12 = 1 + $I_L662_12
  662.                      if ( $I_L662_12 >= iblim ) exit
  662.                   enddo
  666.                   $I_L661_16 = 1 + $I_L661_16
  665.                   if ( $I_L661_16 >= kmax + -$I_L661_14 ) exit
  665.                enddo
  665.             endif
  665.          endif
  665.       endif
  667.       return
  667.       end
  667.       
  674.       
  674.       subroutine vertint( slagr, zsint, psint, adveps, divint, divintm, dot, u, v, div, divm, plam, pphi, zlam, zphi, rcl, del, ibmax, kmax, iblim )
  674.       t$6 = ibmax
  690.       t$77 = _zla( 0, ibmax )
  674.       t$7 = kmax
  674.       t$78 = _zla( 0, ibmax )
  691.       t$79 = _zla( 0, kmax )
  674.       t$80 = _zla( 0, ibmax ) * _zla( 0, kmax )
  706.       if ( kmax > 0 ) then
  707.          if ( iblim > 0 ) then
  706.             $I_L706_106 = 0
  706.             do
  707.                $I_L707_102 = 0
  707.                do
  706.                   $I_L706_110 = 0
  706. !dir$ shortloop16
  706. !dir$ blocking_size( 2, 2 )
  706.                   do
  707.                      $I_L707_76 = 0
  707. !dir$ ivdep
  707. !dir$ blocking_size( 256, 256 )
  707.                      do
  708.                         adveps(1 + $I_L707_76 + 256 * $I_L707_102, 1 + $I_L706_110 + 2 * $I_L706_106) = rcl(1 + $I_L707_76 + 256 * $I_L707_102) * ( pphi(1 + $I_L707_76 + 256 * $I_L707_102) * v(1 + $I_L707_76 + 256 * $I_L707_102, 1 + $I_L706_110 + 2 * $I_L706_106) + plam(1 + $I_L707_76 + 256 * $I_L707_102) * u(1 + $I_L707_76 + 256 * $I_L707_102, 1 + $I_L706_110 + 2 * $I_L706_106) )
  707.                         $I_L707_76 = 1 + $I_L707_76
  707.                         if ( $I_L707_76 >= min( iblim, 256 + 256 * $I_L707_102 ) + -256 * $I_L707_102 ) exit
  707.                      enddo
  706.                      $I_L706_110 = 1 + $I_L706_110
  706.                      if ( $I_L706_110 >= min( kmax, 2 + 2 * $I_L706_106 ) + -2 * $I_L706_106 ) exit
  706.                   enddo
  707.                   $I_L707_102 = 1 + $I_L707_102
  709.                   if ( $I_L707_102 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
  709.                enddo
  706.                $I_L706_106 = 1 + $I_L706_106
  706.                if ( $I_L706_106 >= 1 + max( 0, -1 + _rsh( 1 + kmax, 1 ) ) ) exit
  706.             enddo
  706.          endif
  706.       endif
  712.       if ( iblim > 0 ) then
  714.          $SC_del_I0 = del(1)
  712.          $I_L712_79 = 0
  712. !dir$ ivdep
  712.          do
  713.             dot(1 + $I_L712_79, 1) = 0.0
  714.             psint(1 + $I_L712_79, 1) = $SC_del_I0 * adveps(1 + $I_L712_79, 1)
  715.             divint(1 + $I_L712_79, 1) = $SC_del_I0 * div(1 + $I_L712_79, 1)
  716.             divintm(1 + $I_L712_79, 1) = $SC_del_I0 * divm(1 + $I_L712_79, 1)
  717.             $I_L712_79 = 1 + $I_L712_79
  712.             if ( $I_L712_79 >= iblim ) exit
  712.          enddo
  712.       endif
  718.       if ( slagr /= .false. ) then
  719.          if ( iblim > 0 ) then
  720.             $SC_del_I0 = del(1)
  719.             $I_L719_81 = 0
  719. !dir$ ivdep
  719.             do
  720.                zsint(1 + $I_L719_81) = rcl(1 + $I_L719_81) * $SC_del_I0 * ( zphi(1 + $I_L719_81) * v(1 + $I_L719_81, 1) + zlam(1 + $I_L719_81) * u(1 + $I_L719_81, 1) )
  721.                $I_L719_81 = 1 + $I_L719_81
  719.                if ( $I_L719_81 >= iblim ) exit
  719.             enddo
  719.          endif
  719.       endif
  723.       if ( -2 + kmax >= 0 ) then
  724.          if ( iblim > 0 ) then
  729.             if ( slagr /= .false. ) then
  723.                $I_L723_92 = 0
  723.                do
  724.                   $SCA_del_I2 = del(2 + $I_L723_92)
  724.                   $I_L724_83 = 0
  724. !dir$ ivdep
  724.                   do
  725.                      psint(1 + $I_L724_83, 2 + $I_L723_92) = psint(1 + $I_L724_83, 1 + $I_L723_92) + $SCA_del_I2 * adveps(1 + $I_L724_83, 2 + $I_L723_92)
  726.                      divint(1 + $I_L724_83, 2 + $I_L723_92) = divint(1 + $I_L724_83, 1 + $I_L723_92) + $SCA_del_I2 * div(1 + $I_L724_83, 2 + $I_L723_92)
  727.                      divintm(1 + $I_L724_83, 2 + $I_L723_92) = divintm(1 + $I_L724_83, 1 + $I_L723_92) + $SCA_del_I2 * divm(1 + $I_L724_83, 2 + $I_L723_92)
  728.                      $I_L724_83 = 1 + $I_L724_83
  724.                      if ( $I_L724_83 >= iblim ) exit
  724.                   enddo
  730.                   $I_L730_85 = 0
  730. !dir$ ivdep
  730.                   do
  731.                      zsint(1 + $I_L730_85) = zsint(1 + $I_L730_85) + $SCA_del_I2 * rcl(1 + $I_L730_85) * ( zlam(1 + $I_L730_85) * u(1 + $I_L730_85, 2 + $I_L723_92) + zphi(1 + $I_L730_85) * v(1 + $I_L730_85, 2 + $I_L723_92) )
  732.                      $I_L730_85 = 1 + $I_L730_85
  730.                      if ( $I_L730_85 >= iblim ) exit
  730.                   enddo
  734.                   $I_L723_92 = 1 + $I_L723_92
  733.                   if ( $I_L723_92 >= -1 + kmax ) exit
  733.                enddo
  733.             else
  723.                $I_L723_94 = 0
  723.                if ( -3 + kmax >= 0 ) then
  723.                   $I_L723_114 = 0
  723. !dir$ blocking_size( 1, 1 )
  723.                   do
  724.                      $SCA_del#1_U0 = del(2 + 2 * $I_L723_114)
  724.                      $SCA_del#2_U1 = del(3 + 2 * $I_L723_114)
  724.                      $I_L724_90 = 0
  724. !dir$ ivdep
  724. !dir$ blocking_size( 256, 256 )
  724.                      do
  725.                         psint(1 + $I_L724_90, 2 + 2 * $I_L723_114) = psint(1 + $I_L724_90, 1 + 2 * $I_L723_114) + $SCA_del#1_U0 * adveps(1 + $I_L724_90, 2 + 2 * $I_L723_114)
  726.                         divint(1 + $I_L724_90, 2 + 2 * $I_L723_114) = divint(1 + $I_L724_90, 1 + 2 * $I_L723_114) + $SCA_del#1_U0 * div(1 + $I_L724_90, 2 + 2 * $I_L723_114)
  727.                         divintm(1 + $I_L724_90, 2 + 2 * $I_L723_114) = divintm(1 + $I_L724_90, 1 + 2 * $I_L723_114) + $SCA_del#1_U0 * divm(1 + $I_L724_90, 2 + 2 * $I_L723_114)
  725.                         psint(1 + $I_L724_90, 3 + 2 * $I_L723_114) = psint(1 + $I_L724_90, 2 + 2 * $I_L723_114) + $SCA_del#2_U1 * adveps(1 + $I_L724_90, 3 + 2 * $I_L723_114)
  726.                         divint(1 + $I_L724_90, 3 + 2 * $I_L723_114) = divint(1 + $I_L724_90, 2 + 2 * $I_L723_114) + $SCA_del#2_U1 * div(1 + $I_L724_90, 3 + 2 * $I_L723_114)
  727.                         divintm(1 + $I_L724_90, 3 + 2 * $I_L723_114) = divintm(1 + $I_L724_90, 2 + 2 * $I_L723_114) + $SCA_del#2_U1 * divm(1 + $I_L724_90, 3 + 2 * $I_L723_114)
  728.                         $I_L724_90 = 1 + $I_L724_90
  724.                         if ( $I_L724_90 >= iblim ) exit
  724.                      enddo
  734.                      $I_L723_114 = 1 + $I_L723_114
  733.                      if ( $I_L723_114 >= _rsh( -1 + kmax, 1 ) ) exit
  733.                   enddo
  734.                   $I_L723_94 = and( 0xfffffffffffffffeUL, -1 + kmax )
  734.                endif
  723.                if ( $I_L723_94 < -1 + kmax ) then
  724.                   $SCA_del_I3 = del(2 + $I_L723_94)
  724.                   $I_L724_90 = 0
  724. !dir$ ivdep
  724. !dir$ blocking_size( 256, 256 )
  724.                   do
  725.                      psint(1 + $I_L724_90, 2 + $I_L723_94) = psint(1 + $I_L724_90, 1 + $I_L723_94) + $SCA_del_I3 * adveps(1 + $I_L724_90, 2 + $I_L723_94)
  726.                      divint(1 + $I_L724_90, 2 + $I_L723_94) = divint(1 + $I_L724_90, 1 + $I_L723_94) + $SCA_del_I3 * div(1 + $I_L724_90, 2 + $I_L723_94)
  727.                      divintm(1 + $I_L724_90, 2 + $I_L723_94) = divintm(1 + $I_L724_90, 1 + $I_L723_94) + $SCA_del_I3 * divm(1 + $I_L724_90, 2 + $I_L723_94)
  728.                      $I_L724_90 = 1 + $I_L724_90
  724.                      if ( $I_L724_90 >= iblim ) exit
  724.                   enddo
  724.                endif
  724.             endif
  735.             $I_L735_108 = 0
  735.             do
  736.                $I_L736_104 = 0
  736.                do
  735.                   $I_L735_112 = 0
  735. !dir$ shortloop16
  735. !dir$ blocking_size( 2, 2 )
  735.                   do
  736.                      $SCA_del_I4 = del(1 + $I_L735_112 + 2 * $I_L735_108)
  736.                      $I_L736_87 = 0
  736. !dir$ ivdep
  736. !dir$ blocking_size( 256, 256 )
  736.                      do
  737.                         dot(1 + $I_L736_87 + 256 * $I_L736_104, 2 + $I_L735_112 + 2 * $I_L735_108) = dot(1 + $I_L736_87 + 256 * $I_L736_104, 1 + $I_L735_112 + 2 * $I_L735_108) + $SCA_del_I4 * ( psint(1 + $I_L736_87 + 256 * $I_L736_104, kmax) + divint(1 + $I_L736_87 + 256 * $I_L736_104, kmax) + -adveps(1 + $I_L736_87 + 256 * $I_L736_104, 1 + $I_L735_112 + 2 * $I_L735_108) + -div(1 + $I_L736_87 + 256 * $I_L736_104, 1 + $I_L735_112 + 2 * $I_L735_108) )
  736.                         $I_L736_87 = 1 + $I_L736_87
  736.                         if ( $I_L736_87 >= min( iblim, 256 + 256 * $I_L736_104 ) + -256 * $I_L736_104 ) exit
  736.                      enddo
  735.                      $I_L735_112 = 1 + $I_L735_112
  735.                      if ( $I_L735_112 >= min( -1 + kmax, 2 + 2 * $I_L735_108 ) + -2 * $I_L735_108 ) exit
  735.                   enddo
  736.                   $I_L736_104 = 1 + $I_L736_104
  739.                   if ( $I_L736_104 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
  739.                enddo
  735.                $I_L735_108 = 1 + $I_L735_108
  735.                if ( $I_L735_108 >= 1 + max( 0, -1 + _rsh( kmax, 1 ) ) ) exit
  735.             enddo
  735.          endif
  735.       endif
  741.       return
  741.       end
  741.       
  748.       
  748.       subroutine omega( omg, psint, adveps, divint, dot, ps, sl, ibmax, kmax, iblim )
  748.       t$8 = ibmax
  748.       t$9 = kmax
  757.       t$81 = _zla( 0, ibmax )
  748.       t$82 = _zla( 0, ibmax )
  757.       t$83 = _zla( 0, kmax )
  748.       t$84 = _zla( 0, ibmax ) * _zla( 0, kmax )
  765.       if ( -1 + kmax > 0 ) then
  766.          if ( iblim > 0 ) then
  765.             $I_L765_32 = 0
  765.             do
  766.                $I_L766_30 = 0
  766.                do
  765.                   $I_L765_34 = 0
  765. !dir$ shortloop16
  765. !dir$ blocking_size( 2, 2 )
  765.                   do
  766.                      $SCA_sl_I1 = sl(1 + $I_L765_34 + 2 * $I_L765_32)
  766.                      $I_L766_22 = 0
  766. !dir$ ivdep
  766. !dir$ blocking_size( 256, 256 )
  766.                      do
  767.                         omg(1 + $I_L766_22 + 256 * $I_L766_30, 1 + $I_L765_34 + 2 * $I_L765_32) = ps(1 + $I_L766_22 + 256 * $I_L766_30) * ( $SCA_sl_I1 * ( adveps(1 + $I_L766_22 + 256 * $I_L766_30, 1 + $I_L765_34 + 2 * $I_L765_32) + -psint(1 + $I_L766_22 + 256 * $I_L766_30, kmax) + -divint(1 + $I_L766_22 + 256 * $I_L766_30, kmax) ) + -5.0e-1 * ( dot(1 + $I_L766_22 + 256 * $I_L766_30, 1 + $I_L765_34 + 2 * $I_L765_32) + dot(1 + $I_L766_22 + 256 * $I_L766_30, 2 + $I_L765_34 + 2 * $I_L765_32) ) )
  766.                         $I_L766_22 = 1 + $I_L766_22
  766.                         if ( $I_L766_22 >= min( iblim, 256 + 256 * $I_L766_30 ) + -256 * $I_L766_30 ) exit
  766.                      enddo
  765.                      $I_L765_34 = 1 + $I_L765_34
  765.                      if ( $I_L765_34 >= min( -1 + kmax, 2 + 2 * $I_L765_32 ) + -2 * $I_L765_32 ) exit
  765.                   enddo
  766.                   $I_L766_30 = 1 + $I_L766_30
  770.                   if ( $I_L766_30 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
  770.                enddo
  765.                $I_L765_32 = 1 + $I_L765_32
  765.                if ( $I_L765_32 >= 1 + max( 0, -1 + _rsh( kmax, 1 ) ) ) exit
  765.             enddo
  765.          endif
  765.       endif
  773.       if ( iblim > 0 ) then
  774.          $SC_sl_I0 = sl(kmax)
  773.          $I_L773_25 = 0
  773. !dir$ ivdep
  773.          do
  774.             omg(1 + $I_L773_25, kmax) = ps(1 + $I_L773_25) * ( -5.0e-1 * dot(1 + $I_L773_25, kmax) + $SC_sl_I0 * ( adveps(1 + $I_L773_25, kmax) + -divint(1 + $I_L773_25, kmax) + -psint(1 + $I_L773_25, kmax) ) )
  777.             $I_L773_25 = 1 + $I_L773_25
  773.             if ( $I_L773_25 >= iblim ) exit
  773.          enddo
  773.       endif
  778.       return
  778.       end
  778.       
  785.       
  785.       subroutine delgeo( tlam, zlam, zslam, tphi, zphi, zsphi, hmt, imx, imax, kmax )
  785.       t$10 = imx
  785.       t$11 = kmax
  789.       t$85 = _zla( 0, imx )
  785.       t$86 = _zla( 0, imx )
  789.       t$87 = _zla( 0, kmax )
  785.       t$88 = _zla( 0, imx ) * _zla( 0, kmax )
  785.       t$89 = _zla( 0, kmax )
  785.       t$90 = _zla( 0, kmax ) * _zla( 0, kmax )
  804.       if ( kmax > 0 ) then
  805.          if ( imax > 0 ) then
  804.             $I_L804_38 = 0
  804.             do
  805.                $I_L805_36 = 0
  805.                do
  804.                   $I_L804_40 = 0
  804. !dir$ shortloop16
  804. !dir$ blocking_size( 2, 2 )
  804.                   do
  805.                      $I_L805_30 = 0
  805. !dir$ ivdep
  805. !dir$ blocking_size( 256, 256 )
  805.                      do
  806.                         zlam(1 + $I_L805_30 + 256 * $I_L805_36, 1 + $I_L804_40 + 2 * $I_L804_38) = zslam(1 + $I_L805_30 + 256 * $I_L805_36)
  807.                         zphi(1 + $I_L805_30 + 256 * $I_L805_36, 1 + $I_L804_40 + 2 * $I_L804_38) = zsphi(1 + $I_L805_30 + 256 * $I_L805_36)
  805.                         $I_L805_30 = 1 + $I_L805_30
  805.                         if ( $I_L805_30 >= min( imax, 256 + 256 * $I_L805_36 ) + -256 * $I_L805_36 ) exit
  805.                      enddo
  804.                      $I_L804_40 = 1 + $I_L804_40
  804.                      if ( $I_L804_40 >= min( kmax, 2 + 2 * $I_L804_38 ) + -2 * $I_L804_38 ) exit
  804.                   enddo
  805.                   $I_L805_36 = 1 + $I_L805_36
  808.                   if ( $I_L805_36 >= 1 + max( 0, -1 + _rsh( 255 + imax, 8 ) ) ) exit
  808.                enddo
  804.                $I_L804_38 = 1 + $I_L804_38
  804.                if ( $I_L804_38 >= 1 + max( 0, -1 + _rsh( 1 + kmax, 1 ) ) ) exit
  804.             enddo
  814.              _substr($W10,1,1) = 'n'
  814.              _substr($W11,1,1) = 'n'
  814.             $W12 = imax
  814.             $W13 = kmax
  814.             $W14 = kmax
  814.             $W15 = 1.0
  814.             $W16 = imx
  814.             $W17 = kmax
  814.             $W18 = 1.0
  814.             $W19 = imx
  814.             _dgemm(  _substr($W10,1,1),  _substr($W11,1,1), $W12, $W13, $W14, $W15, tphi(1, 1), $W16, hmt(1, 1), $W17, $W18, zphi(1, 1), $W19 )
  813.              _substr($W0,1,1) = 'n'
  813.              _substr($W1,1,1) = 'n'
  813.             $W2 = imax
  813.             $W3 = kmax
  813.             $W4 = kmax
  813.             $W5 = 1.0
  813.             $W6 = imx
  813.             $W7 = kmax
  813.             $W8 = 1.0
  813.             $W9 = imx
  813.             _dgemm(  _substr($W0,1,1),  _substr($W1,1,1), $W2, $W3, $W4, $W5, tlam(1, 1), $W6, hmt(1, 1), $W7, $W8, zlam(1, 1), $W9 )
  813.          endif
  813.       endif
  818.       return
  818.       end
  818.       
  824.       
  824.       subroutine hadvec( u, v, flam, fphi, tend, rcl, ibmax, kmax, iblim )
  824.       t$12 = ibmax
  824.       t$13 = kmax
  829.       t$91 = _zla( 0, ibmax )
  824.       t$92 = _zla( 0, ibmax )
  829.       t$93 = _zla( 0, kmax )
  824.       t$94 = _zla( 0, ibmax ) * _zla( 0, kmax )
  840.       if ( kmax > 0 ) then
  841.          if ( iblim > 0 ) then
  840.             $I_L840_14 = 0
  840.             if ( kmax >= 4 ) then
  840.                $I_L840_19 = 0
  840. !dir$ blocking_size( 1, 1 )
  840.                do
  841.                   $I_L841_12 = 0
  841. !dir$ ivdep
  841. !dir$ blocking_size( 256, 256 )
  841.                   do
  842.                      tend(1 + $I_L841_12, 1 + 4 * $I_L840_19) = tend(1 + $I_L841_12, 1 + 4 * $I_L840_19) + -( rcl(1 + $I_L841_12) * ( fphi(1 + $I_L841_12, 1 + 4 * $I_L840_19) * v(1 + $I_L841_12, 1 + 4 * $I_L840_19) + flam(1 + $I_L841_12, 1 + 4 * $I_L840_19) * u(1 + $I_L841_12, 1 + 4 * $I_L840_19) ) )
  842.                      tend(1 + $I_L841_12, 2 + 4 * $I_L840_19) = tend(1 + $I_L841_12, 2 + 4 * $I_L840_19) + -( rcl(1 + $I_L841_12) * ( u(1 + $I_L841_12, 2 + 4 * $I_L840_19) * flam(1 + $I_L841_12, 2 + 4 * $I_L840_19) + v(1 + $I_L841_12, 2 + 4 * $I_L840_19) * fphi(1 + $I_L841_12, 2 + 4 * $I_L840_19) ) )
  842.                      tend(1 + $I_L841_12, 3 + 4 * $I_L840_19) = tend(1 + $I_L841_12, 3 + 4 * $I_L840_19) + -( rcl(1 + $I_L841_12) * ( u(1 + $I_L841_12, 3 + 4 * $I_L840_19) * flam(1 + $I_L841_12, 3 + 4 * $I_L840_19) + v(1 + $I_L841_12, 3 + 4 * $I_L840_19) * fphi(1 + $I_L841_12, 3 + 4 * $I_L840_19) ) )
  842.                      tend(1 + $I_L841_12, 4 + 4 * $I_L840_19) = tend(1 + $I_L841_12, 4 + 4 * $I_L840_19) + -( rcl(1 + $I_L841_12) * ( u(1 + $I_L841_12, 4 + 4 * $I_L840_19) * flam(1 + $I_L841_12, 4 + 4 * $I_L840_19) + v(1 + $I_L841_12, 4 + 4 * $I_L840_19) * fphi(1 + $I_L841_12, 4 + 4 * $I_L840_19) ) )
  843.                      $I_L841_12 = 1 + $I_L841_12
  841.                      if ( $I_L841_12 >= iblim ) exit
  841.                   enddo
  844.                   $I_L840_19 = 1 + $I_L840_19
  843.                   if ( $I_L840_19 >= _rsh( kmax, 2 ) ) exit
  843.                enddo
  844.                $I_L840_14 = and( 0xfffffffffffffffcUL, kmax )
  844.             endif
  840.             if ( $I_L840_14 < kmax ) then
  840.                $I_L840_16 = 0
  840. !dir$ blocking_size( 1, 1 )
  840.                do
  841.                   $I_L841_12 = 0
  841. !dir$ ivdep
  841. !dir$ blocking_size( 256, 256 )
  841.                   do
  842.                      tend(1 + $I_L841_12, 1 + $I_L840_14 + $I_L840_16) = tend(1 + $I_L841_12, 1 + $I_L840_14 + $I_L840_16) + -( rcl(1 + $I_L841_12) * ( u(1 + $I_L841_12, 1 + $I_L840_14 + $I_L840_16) * flam(1 + $I_L841_12, 1 + $I_L840_14 + $I_L840_16) + v(1 + $I_L841_12, 1 + $I_L840_14 + $I_L840_16) * fphi(1 + $I_L841_12, 1 + $I_L840_14 + $I_L840_16) ) )
  843.                      $I_L841_12 = 1 + $I_L841_12
  841.                      if ( $I_L841_12 >= iblim ) exit
  841.                   enddo
  844.                   $I_L840_16 = 1 + $I_L840_16
  843.                   if ( $I_L840_16 >= kmax + -$I_L840_14 ) exit
  843.                enddo
  843.             endif
  843.          endif
  843.       endif
  845.       return
  845.       end
  845.       
  851.       
  851.       subroutine vadvec( f, dot, rdel2, tend, ibmax, kmax, iblim )
  851.       t$14 = ibmax
  851.       t$15 = kmax
  855.       t$95 = _zla( 0, ibmax )
  851.       t$96 = _zla( 0, ibmax )
  855.       t$97 = _zla( 0, kmax )
  851.       t$98 = _zla( 0, ibmax ) * _zla( 0, kmax )
  867.       if ( iblim > 0 ) then
  868.          $SC_rdel2_I0 = rdel2(1)
  867.          $I_L867_28 = 0
  867. !dir$ ivdep
  867.          do
  868.             tend(1 + $I_L867_28, 1) = tend(1 + $I_L867_28, 1) + -( $SC_rdel2_I0 * ( dot(1 + $I_L867_28, 2) * ( f(1 + $I_L867_28, 2) + -f(1 + $I_L867_28, 1) ) ) )
  869.             $I_L867_28 = 1 + $I_L867_28
  867.             if ( $I_L867_28 >= iblim ) exit
  867.          enddo
  867.       endif
  870.       if ( -3 + kmax >= 0 ) then
  871.          if ( iblim > 0 ) then
  870.             $I_L870_34 = 0
  870.             if ( -4 + kmax >= 0 ) then
  870.                $I_L870_36 = 0
  870. !dir$ blocking_size( 1, 1 )
  870.                do
  871.                   $SCA_rdel2#1_U0 = rdel2(2 + 2 * $I_L870_36)
  871.                   $SCA_rdel2#2_U1 = rdel2(3 + 2 * $I_L870_36)
  871.                   $I_L871_30 = 0
  871. !dir$ ivdep
  871. !dir$ blocking_size( 256, 256 )
  871.                   do
  872.                      tend(1 + $I_L871_30, 2 + 2 * $I_L870_36) = tend(1 + $I_L871_30, 2 + 2 * $I_L870_36) + -( $SCA_rdel2#1_U0 * ( dot(1 + $I_L871_30, 2 + 2 * $I_L870_36) * ( f(1 + $I_L871_30, 2 + 2 * $I_L870_36) + -f(1 + $I_L871_30, 1 + 2 * $I_L870_36) ) + dot(1 + $I_L871_30, 3 + 2 * $I_L870_36) * ( f(1 + $I_L871_30, 3 + 2 * $I_L870_36) + -f(1 + $I_L871_30, 2 + 2 * $I_L870_36) ) ) )
  872.                      tend(1 + $I_L871_30, 3 + 2 * $I_L870_36) = tend(1 + $I_L871_30, 3 + 2 * $I_L870_36) + -( $SCA_rdel2#2_U1 * ( dot(1 + $I_L871_30, 3 + 2 * $I_L870_36) * ( f(1 + $I_L871_30, 3 + 2 * $I_L870_36) + -f(1 + $I_L871_30, 2 + 2 * $I_L870_36) ) + dot(1 + $I_L871_30, 4 + 2 * $I_L870_36) * ( f(1 + $I_L871_30, 4 + 2 * $I_L870_36) + -f(1 + $I_L871_30, 3 + 2 * $I_L870_36) ) ) )
  874.                      $I_L871_30 = 1 + $I_L871_30
  871.                      if ( $I_L871_30 >= iblim ) exit
  871.                   enddo
  875.                   $I_L870_36 = 1 + $I_L870_36
  874.                   if ( $I_L870_36 >= _rsh( -2 + kmax, 1 ) ) exit
  874.                enddo
  875.                $I_L870_34 = and( 0xfffffffffffffffeUL, -2 + kmax )
  875.             endif
  870.             if ( $I_L870_34 < -2 + kmax ) then
  871.                $SCA_rdel2_I2 = rdel2(2 + $I_L870_34)
  871.                $I_L871_30 = 0
  871. !dir$ ivdep
  871. !dir$ blocking_size( 256, 256 )
  871.                do
  872.                   tend(1 + $I_L871_30, 2 + $I_L870_34) = tend(1 + $I_L871_30, 2 + $I_L870_34) + -( $SCA_rdel2_I2 * ( dot(1 + $I_L871_30, 3 + $I_L870_34) * ( f(1 + $I_L871_30, 3 + $I_L870_34) + -f(1 + $I_L871_30, 2 + $I_L870_34) ) + dot(1 + $I_L871_30, 2 + $I_L870_34) * ( f(1 + $I_L871_30, 2 + $I_L870_34) + -f(1 + $I_L871_30, 1 + $I_L870_34) ) ) )
  874.                   $I_L871_30 = 1 + $I_L871_30
  871.                   if ( $I_L871_30 >= iblim ) exit
  871.                enddo
  871.             endif
  871.          endif
  871.       endif
  877.       if ( iblim > 0 ) then
  878.          $SC_rdel2_I1 = rdel2(kmax)
  877.          $I_L877_32 = 0
  877. !dir$ ivdep
  877.          do
  878.             tend(1 + $I_L877_32, kmax) = tend(1 + $I_L877_32, kmax) + -( $SC_rdel2_I1 * ( dot(1 + $I_L877_32, kmax) * ( f(1 + $I_L877_32, kmax) + -f(1 + $I_L877_32, -1 + kmax) ) ) )
  879.             $I_L877_32 = 1 + $I_L877_32
  877.             if ( $I_L877_32 >= iblim ) exit
  877.          enddo
  877.       endif
  880.       return
  880.       end
  880.       
  887.       
  887.       subroutine metric( u, v, tend, ercossin, ibmax, kmax, iblim )
  887.       t$16 = ibmax
  887.       t$17 = kmax
  892.       t$99 = _zla( 0, ibmax )
  887.       t$100 = _zla( 0, ibmax )
  892.       t$101 = _zla( 0, kmax )
  887.       t$102 = _zla( 0, ibmax ) * _zla( 0, kmax )
  903.       if ( kmax > 0 ) then
  904.          if ( iblim > 0 ) then
  903.             $I_L903_14 = 0
  903.             if ( kmax >= 4 ) then
  903.                $I_L903_19 = 0
  903. !dir$ blocking_size( 1, 1 )
  903.                do
  904.                   $I_L904_12 = 0
  904. !dir$ ivdep
  904. !dir$ blocking_size( 256, 256 )
  904.                   do
  905.                      tend(1 + $I_L904_12, 1 + 4 * $I_L903_19) = tend(1 + $I_L904_12, 1 + 4 * $I_L903_19) + -( ercossin(1 + $I_L904_12) * ( v(1 + $I_L904_12, 1 + 4 * $I_L903_19) * v(1 + $I_L904_12, 1 + 4 * $I_L903_19) + u(1 + $I_L904_12, 1 + 4 * $I_L903_19) * u(1 + $I_L904_12, 1 + 4 * $I_L903_19) ) )
  905.                      tend(1 + $I_L904_12, 2 + 4 * $I_L903_19) = tend(1 + $I_L904_12, 2 + 4 * $I_L903_19) + -( ercossin(1 + $I_L904_12) * ( u(1 + $I_L904_12, 2 + 4 * $I_L903_19) * u(1 + $I_L904_12, 2 + 4 * $I_L903_19) + v(1 + $I_L904_12, 2 + 4 * $I_L903_19) * v(1 + $I_L904_12, 2 + 4 * $I_L903_19) ) )
  905.                      tend(1 + $I_L904_12, 3 + 4 * $I_L903_19) = tend(1 + $I_L904_12, 3 + 4 * $I_L903_19) + -( ercossin(1 + $I_L904_12) * ( u(1 + $I_L904_12, 3 + 4 * $I_L903_19) * u(1 + $I_L904_12, 3 + 4 * $I_L903_19) + v(1 + $I_L904_12, 3 + 4 * $I_L903_19) * v(1 + $I_L904_12, 3 + 4 * $I_L903_19) ) )
  905.                      tend(1 + $I_L904_12, 4 + 4 * $I_L903_19) = tend(1 + $I_L904_12, 4 + 4 * $I_L903_19) + -( ercossin(1 + $I_L904_12) * ( u(1 + $I_L904_12, 4 + 4 * $I_L903_19) * u(1 + $I_L904_12, 4 + 4 * $I_L903_19) + v(1 + $I_L904_12, 4 + 4 * $I_L903_19) * v(1 + $I_L904_12, 4 + 4 * $I_L903_19) ) )
  906.                      $I_L904_12 = 1 + $I_L904_12
  904.                      if ( $I_L904_12 >= iblim ) exit
  904.                   enddo
  907.                   $I_L903_19 = 1 + $I_L903_19
  906.                   if ( $I_L903_19 >= _rsh( kmax, 2 ) ) exit
  906.                enddo
  907.                $I_L903_14 = and( 0xfffffffffffffffcUL, kmax )
  907.             endif
  903.             if ( $I_L903_14 < kmax ) then
  903.                $I_L903_16 = 0
  903. !dir$ blocking_size( 1, 1 )
  903.                do
  904.                   $I_L904_12 = 0
  904. !dir$ ivdep
  904. !dir$ blocking_size( 256, 256 )
  904.                   do
  905.                      tend(1 + $I_L904_12, 1 + $I_L903_14 + $I_L903_16) = tend(1 + $I_L904_12, 1 + $I_L903_14 + $I_L903_16) + -( ercossin(1 + $I_L904_12) * ( u(1 + $I_L904_12, 1 + $I_L903_14 + $I_L903_16) * u(1 + $I_L904_12, 1 + $I_L903_14 + $I_L903_16) + v(1 + $I_L904_12, 1 + $I_L903_14 + $I_L903_16) * v(1 + $I_L904_12, 1 + $I_L903_14 + $I_L903_16) ) )
  906.                      $I_L904_12 = 1 + $I_L904_12
  904.                      if ( $I_L904_12 >= iblim ) exit
  904.                   enddo
  907.                   $I_L903_16 = 1 + $I_L903_16
  906.                   if ( $I_L903_16 >= kmax + -$I_L903_14 ) exit
  906.                enddo
  906.             endif
  906.          endif
  906.       endif
  908.       return
  908.       end
  908.       
  915.       
  915.       subroutine coriol( u, v, tendu, tendv, fcor, ibmax, kmax, iblim )
  915.       t$18 = ibmax
  915.       t$19 = kmax
  920.       t$103 = _zla( 0, ibmax )
  915.       t$104 = _zla( 0, ibmax )
  920.       t$105 = _zla( 0, kmax )
  915.       t$106 = _zla( 0, ibmax ) * _zla( 0, kmax )
  929.       if ( kmax > 0 ) then
  930.          if ( iblim > 0 ) then
  929.             $I_L929_14 = 0
  929.             if ( kmax >= 4 ) then
  929.                $I_L929_19 = 0
  929. !dir$ blocking_size( 1, 1 )
  929.                do
  930.                   $I_L930_12 = 0
  930. !dir$ ivdep
  930. !dir$ blocking_size( 256, 256 )
  930.                   do
  931.                      tendu(1 + $I_L930_12, 1 + 4 * $I_L929_19) = tendu(1 + $I_L930_12, 1 + 4 * $I_L929_19) + fcor(1 + $I_L930_12) * v(1 + $I_L930_12, 1 + 4 * $I_L929_19)
  931.                      tendu(1 + $I_L930_12, 2 + 4 * $I_L929_19) = tendu(1 + $I_L930_12, 2 + 4 * $I_L929_19) + fcor(1 + $I_L930_12) * v(1 + $I_L930_12, 2 + 4 * $I_L929_19)
  931.                      tendu(1 + $I_L930_12, 3 + 4 * $I_L929_19) = tendu(1 + $I_L930_12, 3 + 4 * $I_L929_19) + fcor(1 + $I_L930_12) * v(1 + $I_L930_12, 3 + 4 * $I_L929_19)
  931.                      tendu(1 + $I_L930_12, 4 + 4 * $I_L929_19) = tendu(1 + $I_L930_12, 4 + 4 * $I_L929_19) + fcor(1 + $I_L930_12) * v(1 + $I_L930_12, 4 + 4 * $I_L929_19)
  932.                      tendv(1 + $I_L930_12, 1 + 4 * $I_L929_19) = tendv(1 + $I_L930_12, 1 + 4 * $I_L929_19) + -( fcor(1 + $I_L930_12) * u(1 + $I_L930_12, 1 + 4 * $I_L929_19) )
  932.                      tendv(1 + $I_L930_12, 2 + 4 * $I_L929_19) = tendv(1 + $I_L930_12, 2 + 4 * $I_L929_19) + -( fcor(1 + $I_L930_12) * u(1 + $I_L930_12, 2 + 4 * $I_L929_19) )
  932.                      tendv(1 + $I_L930_12, 3 + 4 * $I_L929_19) = tendv(1 + $I_L930_12, 3 + 4 * $I_L929_19) + -( fcor(1 + $I_L930_12) * u(1 + $I_L930_12, 3 + 4 * $I_L929_19) )
  932.                      tendv(1 + $I_L930_12, 4 + 4 * $I_L929_19) = tendv(1 + $I_L930_12, 4 + 4 * $I_L929_19) + -( fcor(1 + $I_L930_12) * u(1 + $I_L930_12, 4 + 4 * $I_L929_19) )
  933.                      $I_L930_12 = 1 + $I_L930_12
  930.                      if ( $I_L930_12 >= iblim ) exit
  930.                   enddo
  934.                   $I_L929_19 = 1 + $I_L929_19
  933.                   if ( $I_L929_19 >= _rsh( kmax, 2 ) ) exit
  933.                enddo
  934.                $I_L929_14 = and( 0xfffffffffffffffcUL, kmax )
  934.             endif
  929.             if ( $I_L929_14 < kmax ) then
  929.                $I_L929_16 = 0
  929. !dir$ blocking_size( 1, 1 )
  929.                do
  930.                   $I_L930_12 = 0
  930. !dir$ ivdep
  930. !dir$ blocking_size( 256, 256 )
  930.                   do
  931.                      tendu(1 + $I_L930_12, 1 + $I_L929_14 + $I_L929_16) = tendu(1 + $I_L930_12, 1 + $I_L929_14 + $I_L929_16) + fcor(1 + $I_L930_12) * v(1 + $I_L930_12, 1 + $I_L929_14 + $I_L929_16)
  932.                      tendv(1 + $I_L930_12, 1 + $I_L929_14 + $I_L929_16) = tendv(1 + $I_L930_12, 1 + $I_L929_14 + $I_L929_16) + -( fcor(1 + $I_L930_12) * u(1 + $I_L930_12, 1 + $I_L929_14 + $I_L929_16) )
  933.                      $I_L930_12 = 1 + $I_L930_12
  930.                      if ( $I_L930_12 >= iblim ) exit
  930.                   enddo
  934.                   $I_L929_16 = 1 + $I_L929_16
  933.                   if ( $I_L929_16 >= kmax + -$I_L929_14 ) exit
  933.                enddo
  933.             endif
  933.          endif
  933.       endif
  935.       return
  935.       end
  935.       
  942.       
  942.       subroutine nlprgr( plam, pphi, tmp, tendu, tendv, rc, ibmax, kmax, iblim )
  942.       t$20 = ibmax
  948.       t$107 = _zla( 0, ibmax )
  942.       t$21 = kmax
  942.       t$108 = _zla( 0, ibmax )
  947.       t$109 = _zla( 0, kmax )
  942.       t$110 = _zla( 0, ibmax ) * _zla( 0, kmax )
  958.       if ( kmax > 0 ) then
  959.          if ( iblim > 0 ) then
  958.             $I_L958_14 = 0
  958.             if ( kmax >= 4 ) then
  958.                $I_L958_19 = 0
  958. !dir$ blocking_size( 1, 1 )
  958.                do
  959.                   $I_L959_12 = 0
  959. !dir$ ivdep
  959. !dir$ blocking_size( 256, 256 )
  959.                   do
  960.                      tendu(1 + $I_L959_12, 1 + 4 * $I_L958_19) = tendu(1 + $I_L959_12, 1 + 4 * $I_L958_19) + -( rc * plam(1 + $I_L959_12) * tmp(1 + $I_L959_12, 1 + 4 * $I_L958_19) )
  960.                      tendu(1 + $I_L959_12, 2 + 4 * $I_L958_19) = tendu(1 + $I_L959_12, 2 + 4 * $I_L958_19) + -( rc * plam(1 + $I_L959_12) * tmp(1 + $I_L959_12, 2 + 4 * $I_L958_19) )
  960.                      tendu(1 + $I_L959_12, 3 + 4 * $I_L958_19) = tendu(1 + $I_L959_12, 3 + 4 * $I_L958_19) + -( rc * plam(1 + $I_L959_12) * tmp(1 + $I_L959_12, 3 + 4 * $I_L958_19) )
  960.                      tendu(1 + $I_L959_12, 4 + 4 * $I_L958_19) = tendu(1 + $I_L959_12, 4 + 4 * $I_L958_19) + -( rc * plam(1 + $I_L959_12) * tmp(1 + $I_L959_12, 4 + 4 * $I_L958_19) )
  961.                      tendv(1 + $I_L959_12, 1 + 4 * $I_L958_19) = tendv(1 + $I_L959_12, 1 + 4 * $I_L958_19) + -( rc * pphi(1 + $I_L959_12) * tmp(1 + $I_L959_12, 1 + 4 * $I_L958_19) )
  961.                      tendv(1 + $I_L959_12, 2 + 4 * $I_L958_19) = tendv(1 + $I_L959_12, 2 + 4 * $I_L958_19) + -( rc * pphi(1 + $I_L959_12) * tmp(1 + $I_L959_12, 2 + 4 * $I_L958_19) )
  961.                      tendv(1 + $I_L959_12, 3 + 4 * $I_L958_19) = tendv(1 + $I_L959_12, 3 + 4 * $I_L958_19) + -( rc * pphi(1 + $I_L959_12) * tmp(1 + $I_L959_12, 3 + 4 * $I_L958_19) )
  961.                      tendv(1 + $I_L959_12, 4 + 4 * $I_L958_19) = tendv(1 + $I_L959_12, 4 + 4 * $I_L958_19) + -( rc * pphi(1 + $I_L959_12) * tmp(1 + $I_L959_12, 4 + 4 * $I_L958_19) )
  962.                      $I_L959_12 = 1 + $I_L959_12
  959.                      if ( $I_L959_12 >= iblim ) exit
  959.                   enddo
  963.                   $I_L958_19 = 1 + $I_L958_19
  962.                   if ( $I_L958_19 >= _rsh( kmax, 2 ) ) exit
  962.                enddo
  963.                $I_L958_14 = and( 0xfffffffffffffffcUL, kmax )
  963.             endif
  958.             if ( $I_L958_14 < kmax ) then
  958.                $I_L958_16 = 0
  958. !dir$ blocking_size( 1, 1 )
  958.                do
  959.                   $I_L959_12 = 0
  959. !dir$ ivdep
  959. !dir$ blocking_size( 256, 256 )
  959.                   do
  960.                      tendu(1 + $I_L959_12, 1 + $I_L958_14 + $I_L958_16) = tendu(1 + $I_L959_12, 1 + $I_L958_14 + $I_L958_16) + -( rc * plam(1 + $I_L959_12) * tmp(1 + $I_L959_12, 1 + $I_L958_14 + $I_L958_16) )
  961.                      tendv(1 + $I_L959_12, 1 + $I_L958_14 + $I_L958_16) = tendv(1 + $I_L959_12, 1 + $I_L958_14 + $I_L958_16) + -( rc * pphi(1 + $I_L959_12) * tmp(1 + $I_L959_12, 1 + $I_L958_14 + $I_L958_16) )
  962.                      $I_L959_12 = 1 + $I_L959_12
  959.                      if ( $I_L959_12 >= iblim ) exit
  959.                   enddo
  963.                   $I_L958_16 = 1 + $I_L958_16
  962.                   if ( $I_L958_16 >= kmax + -$I_L958_14 ) exit
  962.                enddo
  962.             endif
  962.          endif
  962.       endif
  964.       return
  964.       end
  964.       
  971.       
  971.       subroutine vadvtmp( tmp, p1, p2, h1, h2, dot, psint, ci, rdel2, tend, ibmax, kmax, iblim, slagr )
  971.       t$22 = ibmax
  971.       t$23 = kmax
  977.       t$111 = _zla( 0, ibmax )
  971.       t$112 = _zla( 0, ibmax )
  977.       t$113 = _zla( 0, kmax )
  971.       t$114 = _zla( 0, ibmax ) * _zla( 0, kmax )
  971.       t$24 = ( 1 + kmax )
  985.       t$115 = _zla( 0, ( 1 + kmax ) )
  988.       t$118 = 8 * _zla( 0, ibmax ) * _zla( 0, kmax )
  988.       t$119 = 8 * ( 7 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) / 8
  988.       t$121 = t$119 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax )
  988.       t$122 = 8 * ( 7 + t$119 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ) / 8
  988.       t$124 = t$122 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax )
  971.       t$116 = int( _alloc( t$122 + 8 * _zla( 0, ibmax ) * _zla( 0, kmax ) ), 8 )
  988.       t$117 = t$116
  988.       t$120 = t$119 + t$116
  988.       t$123 = t$122 + t$116
  995.       if ( slagr == .false. ) then
  996.          if ( -1 + kmax > 0 ) then
  997.             if ( iblim > 0 ) then
  996.                $I_L996_72 = 0
  996.                if ( -5 + kmax >= 0 ) then
  996.                   $I_L996_85 = 0
  996. !dir$ blocking_size( 1, 1 )
  996.                   do
  997.                      $SCA#1_U0 = p1(1 + 4 * $I_L996_85)
  997.                      $SCA#1_U4 = p2(2 + 4 * $I_L996_85)
  997.                      $SCA_ci#1_U8 = ci(2 + 4 * $I_L996_85)
  997.                      $SCA#2_U1 = p1(2 + 4 * $I_L996_85)
  997.                      $SCA#2_U5 = p2(3 + 4 * $I_L996_85)
  997.                      $SCA_ci#2_U9 = ci(3 + 4 * $I_L996_85)
  997.                      $SCA#3_U2 = p1(3 + 4 * $I_L996_85)
  997.                      $SCA#3_U6 = p2(4 + 4 * $I_L996_85)
  997.                      $SCA_ci#3_U10 = ci(4 + 4 * $I_L996_85)
  997.                      $SCA#4_U3 = p1(4 + 4 * $I_L996_85)
  997.                      $SCA#4_U7 = p2(5 + 4 * $I_L996_85)
  997.                      $SCA_ci#4_U11 = ci(5 + 4 * $I_L996_85)
  997.                      $I_L997_62 = 0
  997. !dir$ ivdep
  997. !dir$ blocking_size( 256, 256 )
  997.                      do
  998.                         w1(1 + $I_L997_62, 1 + 4 * $I_L996_85) = -tmp(1 + $I_L997_62, 1 + 4 * $I_L996_85) + $SCA#1_U0 * tmp(1 + $I_L997_62, 2 + 4 * $I_L996_85)
  999.                         w2(1 + $I_L997_62, 2 + 4 * $I_L996_85) = tmp(1 + $I_L997_62, 2 + 4 * $I_L996_85) + -( $SCA#1_U4 * tmp(1 + $I_L997_62, 1 + 4 * $I_L996_85) )
 1000.                         w3(1 + $I_L997_62, 1 + 4 * $I_L996_85) = -psint(1 + $I_L997_62, 1 + 4 * $I_L996_85) + psint(1 + $I_L997_62, kmax) * $SCA_ci#1_U8
  998.                         w1(1 + $I_L997_62, 2 + 4 * $I_L996_85) = -tmp(1 + $I_L997_62, 2 + 4 * $I_L996_85) + $SCA#2_U1 * tmp(1 + $I_L997_62, 3 + 4 * $I_L996_85)
  999.                         w2(1 + $I_L997_62, 3 + 4 * $I_L996_85) = tmp(1 + $I_L997_62, 3 + 4 * $I_L996_85) + -( $SCA#2_U5 * tmp(1 + $I_L997_62, 2 + 4 * $I_L996_85) )
 1000.                         w3(1 + $I_L997_62, 2 + 4 * $I_L996_85) = -psint(1 + $I_L997_62, 2 + 4 * $I_L996_85) + psint(1 + $I_L997_62, kmax) * $SCA_ci#2_U9
  998.                         w1(1 + $I_L997_62, 3 + 4 * $I_L996_85) = -tmp(1 + $I_L997_62, 3 + 4 * $I_L996_85) + $SCA#3_U2 * tmp(1 + $I_L997_62, 4 + 4 * $I_L996_85)
  999.                         w2(1 + $I_L997_62, 4 + 4 * $I_L996_85) = tmp(1 + $I_L997_62, 4 + 4 * $I_L996_85) + -( $SCA#3_U6 * tmp(1 + $I_L997_62, 3 + 4 * $I_L996_85) )
 1000.                         w3(1 + $I_L997_62, 3 + 4 * $I_L996_85) = -psint(1 + $I_L997_62, 3 + 4 * $I_L996_85) + psint(1 + $I_L997_62, kmax) * $SCA_ci#3_U10
  998.                         w1(1 + $I_L997_62, 4 + 4 * $I_L996_85) = -tmp(1 + $I_L997_62, 4 + 4 * $I_L996_85) + $SCA#4_U3 * tmp(1 + $I_L997_62, 5 + 4 * $I_L996_85)
  999.                         w2(1 + $I_L997_62, 5 + 4 * $I_L996_85) = tmp(1 + $I_L997_62, 5 + 4 * $I_L996_85) + -( $SCA#4_U7 * tmp(1 + $I_L997_62, 4 + 4 * $I_L996_85) )
 1000.                         w3(1 + $I_L997_62, 4 + 4 * $I_L996_85) = -psint(1 + $I_L997_62, 4 + 4 * $I_L996_85) + psint(1 + $I_L997_62, kmax) * $SCA_ci#4_U11
 1001.                         $I_L997_62 = 1 + $I_L997_62
  997.                         if ( $I_L997_62 >= iblim ) exit
  997.                      enddo
 1002.                      $I_L996_85 = 1 + $I_L996_85
 1001.                      if ( $I_L996_85 >= _rsh( -1 + kmax, 2 ) ) exit
 1001.                   enddo
 1002.                   $I_L996_72 = and( 0xfffffffffffffffcUL, -1 + kmax )
 1002.                endif
  996.                if ( $I_L996_72 < -1 + kmax ) then
  996.                   $I_L996_79 = 0
  996. !dir$ blocking_size( 1, 1 )
  996.                   do
  997.                      $SCA_p1_I4 = p1(1 + $I_L996_72 + $I_L996_79)
  997.                      $SCA_p2_I5 = p2(2 + $I_L996_72 + $I_L996_79)
  997.                      $SCA_ci_I6 = ci(2 + $I_L996_72 + $I_L996_79)
  997.                      $I_L997_62 = 0
  997. !dir$ ivdep
  997. !dir$ blocking_size( 256, 256 )
  997.                      do
  998.                         w1(1 + $I_L997_62, 1 + $I_L996_72 + $I_L996_79) = -tmp(1 + $I_L997_62, 1 + $I_L996_72 + $I_L996_79) + $SCA_p1_I4 * tmp(1 + $I_L997_62, 2 + $I_L996_72 + $I_L996_79)
  999.                         w2(1 + $I_L997_62, 2 + $I_L996_72 + $I_L996_79) = tmp(1 + $I_L997_62, 2 + $I_L996_72 + $I_L996_79) + -( $SCA_p2_I5 * tmp(1 + $I_L997_62, 1 + $I_L996_72 + $I_L996_79) )
 1000.                         w3(1 + $I_L997_62, 1 + $I_L996_72 + $I_L996_79) = -psint(1 + $I_L997_62, 1 + $I_L996_72 + $I_L996_79) + $SCA_ci_I6 * psint(1 + $I_L997_62, kmax)
 1001.                         $I_L997_62 = 1 + $I_L997_62
  997.                         if ( $I_L997_62 >= iblim ) exit
  997.                      enddo
 1002.                      $I_L996_79 = 1 + $I_L996_79
 1001.                      if ( $I_L996_79 >= -1 + kmax + -$I_L996_72 ) exit
 1001.                   enddo
 1001.                endif
 1001.             endif
 1001.          endif
 1003.       else if ( -1 + kmax > 0 ) then
 1005.          if ( iblim > 0 ) then
 1004.             $I_L1004_70 = 0
 1004.             if ( -5 + kmax >= 0 ) then
 1004.                $I_L1004_87 = 0
 1004. !dir$ blocking_size( 1, 1 )
 1004.                do
 1005.                   $SCA#1_U12 = p1(1 + 4 * $I_L1004_87)
 1005.                   $SCA#1_U16 = p2(2 + 4 * $I_L1004_87)
 1005.                   $SCA_ci#1_U20 = ci(2 + 4 * $I_L1004_87)
 1005.                   $SCA#2_U13 = p1(2 + 4 * $I_L1004_87)
 1005.                   $SCA#2_U17 = p2(3 + 4 * $I_L1004_87)
 1005.                   $SCA_ci#2_U21 = ci(3 + 4 * $I_L1004_87)
 1005.                   $SCA#3_U14 = p1(3 + 4 * $I_L1004_87)
 1005.                   $SCA#3_U18 = p2(4 + 4 * $I_L1004_87)
 1005.                   $SCA_ci#3_U22 = ci(4 + 4 * $I_L1004_87)
 1005.                   $SCA#4_U15 = p1(4 + 4 * $I_L1004_87)
 1005.                   $SCA#4_U19 = p2(5 + 4 * $I_L1004_87)
 1005.                   $SCA_ci#4_U23 = ci(5 + 4 * $I_L1004_87)
 1005.                   $I_L1005_60 = 0
 1005. !dir$ ivdep
 1005. !dir$ blocking_size( 256, 256 )
 1005.                   do
 1006.                      w1(1 + $I_L1005_60, 1 + 4 * $I_L1004_87) = tmp(1 + $I_L1005_60, 2 + 4 * $I_L1004_87) * ( -1.0 + $SCA#1_U12 )
 1007.                      w2(1 + $I_L1005_60, 2 + 4 * $I_L1004_87) = tmp(1 + $I_L1005_60, 1 + 4 * $I_L1004_87) * ( 1.0 + -$SCA#1_U16 )
 1008.                      w3(1 + $I_L1005_60, 1 + 4 * $I_L1004_87) = -psint(1 + $I_L1005_60, 1 + 4 * $I_L1004_87) + psint(1 + $I_L1005_60, kmax) * $SCA_ci#1_U20
 1006.                      w1(1 + $I_L1005_60, 2 + 4 * $I_L1004_87) = tmp(1 + $I_L1005_60, 3 + 4 * $I_L1004_87) * ( -1.0 + $SCA#2_U13 )
 1007.                      w2(1 + $I_L1005_60, 3 + 4 * $I_L1004_87) = tmp(1 + $I_L1005_60, 2 + 4 * $I_L1004_87) * ( 1.0 + -$SCA#2_U17 )
 1008.                      w3(1 + $I_L1005_60, 2 + 4 * $I_L1004_87) = -psint(1 + $I_L1005_60, 2 + 4 * $I_L1004_87) + psint(1 + $I_L1005_60, kmax) * $SCA_ci#2_U21
 1006.                      w1(1 + $I_L1005_60, 3 + 4 * $I_L1004_87) = tmp(1 + $I_L1005_60, 4 + 4 * $I_L1004_87) * ( -1.0 + $SCA#3_U14 )
 1007.                      w2(1 + $I_L1005_60, 4 + 4 * $I_L1004_87) = tmp(1 + $I_L1005_60, 3 + 4 * $I_L1004_87) * ( 1.0 + -$SCA#3_U18 )
 1008.                      w3(1 + $I_L1005_60, 3 + 4 * $I_L1004_87) = -psint(1 + $I_L1005_60, 3 + 4 * $I_L1004_87) + psint(1 + $I_L1005_60, kmax) * $SCA_ci#3_U22
 1006.                      w1(1 + $I_L1005_60, 4 + 4 * $I_L1004_87) = tmp(1 + $I_L1005_60, 5 + 4 * $I_L1004_87) * ( -1.0 + $SCA#4_U15 )
 1007.                      w2(1 + $I_L1005_60, 5 + 4 * $I_L1004_87) = tmp(1 + $I_L1005_60, 4 + 4 * $I_L1004_87) * ( 1.0 + -$SCA#4_U19 )
 1008.                      w3(1 + $I_L1005_60, 4 + 4 * $I_L1004_87) = -psint(1 + $I_L1005_60, 4 + 4 * $I_L1004_87) + psint(1 + $I_L1005_60, kmax) * $SCA_ci#4_U23
 1009.                      $I_L1005_60 = 1 + $I_L1005_60
 1005.                      if ( $I_L1005_60 >= iblim ) exit
 1005.                   enddo
 1010.                   $I_L1004_87 = 1 + $I_L1004_87
 1009.                   if ( $I_L1004_87 >= _rsh( -1 + kmax, 2 ) ) exit
 1009.                enddo
 1010.                $I_L1004_70 = and( 0xfffffffffffffffcUL, -1 + kmax )
 1010.             endif
 1004.             if ( $I_L1004_70 < -1 + kmax ) then
 1004.                $I_L1004_76 = 0
 1004. !dir$ blocking_size( 1, 1 )
 1004.                do
 1005.                   $SCA_p1_I7 = p1(1 + $I_L1004_70 + $I_L1004_76)
 1005.                   $SCA_p2_I8 = p2(2 + $I_L1004_70 + $I_L1004_76)
 1005.                   $SCA_ci_I9 = ci(2 + $I_L1004_70 + $I_L1004_76)
 1005.                   $I_L1005_60 = 0
 1005. !dir$ ivdep
 1005. !dir$ blocking_size( 256, 256 )
 1005.                   do
 1006.                      w1(1 + $I_L1005_60, 1 + $I_L1004_70 + $I_L1004_76) = tmp(1 + $I_L1005_60, 2 + $I_L1004_70 + $I_L1004_76) * ( -1.0 + $SCA_p1_I7 )
 1007.                      w2(1 + $I_L1005_60, 2 + $I_L1004_70 + $I_L1004_76) = tmp(1 + $I_L1005_60, 1 + $I_L1004_70 + $I_L1004_76) * ( 1.0 + -$SCA_p2_I8 )
 1008.                      w3(1 + $I_L1005_60, 1 + $I_L1004_70 + $I_L1004_76) = -psint(1 + $I_L1005_60, 1 + $I_L1004_70 + $I_L1004_76) + $SCA_ci_I9 * psint(1 + $I_L1005_60, kmax)
 1009.                      $I_L1005_60 = 1 + $I_L1005_60
 1005.                      if ( $I_L1005_60 >= iblim ) exit
 1005.                   enddo
 1010.                   $I_L1004_76 = 1 + $I_L1004_76
 1009.                   if ( $I_L1004_76 >= -1 + kmax + -$I_L1004_70 ) exit
 1009.                enddo
 1009.             endif
 1009.          endif
 1009.       endif
 1013.       if ( iblim > 0 ) then
 1014.          $SC_rdel2_I1 = rdel2(1)
 1014.          $SC_h1_I0 = h1(1)
 1013.          $I_L1013_64 = 0
 1013. !dir$ ivdep
 1013.          do
 1014.             tend(1 + $I_L1013_64, 1) = tend(1 + $I_L1013_64, 1) + -( $SC_rdel2_I1 * ( dot(1 + $I_L1013_64, 2) * w1(1 + $I_L1013_64, 1) + $SC_h1_I0 * w3(1 + $I_L1013_64, 1) ) )
 1015.             $I_L1013_64 = 1 + $I_L1013_64
 1013.             if ( $I_L1013_64 >= iblim ) exit
 1013.          enddo
 1013.       endif
 1016.       if ( -3 + kmax >= 0 ) then
 1017.          if ( iblim > 0 ) then
 1016.             $I_L1016_74 = 0
 1016.             if ( -6 + kmax >= 0 ) then
 1016.                $I_L1016_89 = 0
 1016. !dir$ blocking_size( 1, 1 )
 1016.                do
 1017.                   $SCA#1_U24 = h2(2 + 4 * $I_L1016_89)
 1017.                   $SCA#1_U28 = h1(2 + 4 * $I_L1016_89)
 1017.                   $SCA_rdel2#1_U32 = rdel2(2 + 4 * $I_L1016_89)
 1017.                   $SCA#2_U25 = h2(3 + 4 * $I_L1016_89)
 1017.                   $SCA#2_U29 = h1(3 + 4 * $I_L1016_89)
 1017.                   $SCA_rdel2#2_U33 = rdel2(3 + 4 * $I_L1016_89)
 1017.                   $SCA#3_U26 = h2(4 + 4 * $I_L1016_89)
 1017.                   $SCA#3_U30 = h1(4 + 4 * $I_L1016_89)
 1017.                   $SCA_rdel2#3_U34 = rdel2(4 + 4 * $I_L1016_89)
 1017.                   $SCA#4_U27 = h2(5 + 4 * $I_L1016_89)
 1017.                   $SCA#4_U31 = h1(5 + 4 * $I_L1016_89)
 1017.                   $SCA_rdel2#4_U35 = rdel2(5 + 4 * $I_L1016_89)
 1017.                   $I_L1017_66 = 0
 1017. !dir$ ivdep
 1017. !dir$ blocking_size( 256, 256 )
 1017.                   do
 1018.                      tend(1 + $I_L1017_66, 2 + 4 * $I_L1016_89) = tend(1 + $I_L1017_66, 2 + 4 * $I_L1016_89) + -( $SCA_rdel2#1_U32 * ( dot(1 + $I_L1017_66, 3 + 4 * $I_L1016_89) * w1(1 + $I_L1017_66, 2 + 4 * $I_L1016_89) + $SCA#1_U28 * w3(1 + $I_L1017_66, 2 + 4 * $I_L1016_89) + $SCA#1_U24 * w3(1 + $I_L1017_66, 1 + 4 * $I_L1016_89) + w2(1 + $I_L1017_66, 2 + 4 * $I_L1016_89) * dot(1 + $I_L1017_66, 2 + 4 * $I_L1016_89) ) )
 1018.                      tend(1 + $I_L1017_66, 3 + 4 * $I_L1016_89) = tend(1 + $I_L1017_66, 3 + 4 * $I_L1016_89) + -( $SCA_rdel2#2_U33 * ( w1(1 + $I_L1017_66, 3 + 4 * $I_L1016_89) * dot(1 + $I_L1017_66, 4 + 4 * $I_L1016_89) + $SCA#2_U29 * w3(1 + $I_L1017_66, 3 + 4 * $I_L1016_89) + dot(1 + $I_L1017_66, 3 + 4 * $I_L1016_89) * w2(1 + $I_L1017_66, 3 + 4 * $I_L1016_89) + $SCA#2_U25 * w3(1 + $I_L1017_66, 2 + 4 * $I_L1016_89) ) )
 1018.                      tend(1 + $I_L1017_66, 4 + 4 * $I_L1016_89) = tend(1 + $I_L1017_66, 4 + 4 * $I_L1016_89) + -( $SCA_rdel2#3_U34 * ( w1(1 + $I_L1017_66, 4 + 4 * $I_L1016_89) * dot(1 + $I_L1017_66, 5 + 4 * $I_L1016_89) + $SCA#3_U30 * w3(1 + $I_L1017_66, 4 + 4 * $I_L1016_89) + dot(1 + $I_L1017_66, 4 + 4 * $I_L1016_89) * w2(1 + $I_L1017_66, 4 + 4 * $I_L1016_89) + $SCA#3_U26 * w3(1 + $I_L1017_66, 3 + 4 * $I_L1016_89) ) )
 1018.                      tend(1 + $I_L1017_66, 5 + 4 * $I_L1016_89) = tend(1 + $I_L1017_66, 5 + 4 * $I_L1016_89) + -( $SCA_rdel2#4_U35 * ( w1(1 + $I_L1017_66, 5 + 4 * $I_L1016_89) * dot(1 + $I_L1017_66, 6 + 4 * $I_L1016_89) + $SCA#4_U31 * w3(1 + $I_L1017_66, 5 + 4 * $I_L1016_89) + dot(1 + $I_L1017_66, 5 + 4 * $I_L1016_89) * w2(1 + $I_L1017_66, 5 + 4 * $I_L1016_89) + $SCA#4_U27 * w3(1 + $I_L1017_66, 4 + 4 * $I_L1016_89) ) )
 1020.                      $I_L1017_66 = 1 + $I_L1017_66
 1017.                      if ( $I_L1017_66 >= iblim ) exit
 1017.                   enddo
 1021.                   $I_L1016_89 = 1 + $I_L1016_89
 1020.                   if ( $I_L1016_89 >= _rsh( -2 + kmax, 2 ) ) exit
 1020.                enddo
 1021.                $I_L1016_74 = and( 0xfffffffffffffffcUL, -2 + kmax )
 1021.             endif
 1016.             if ( $I_L1016_74 < -2 + kmax ) then
 1016.                $I_L1016_82 = 0
 1016. !dir$ blocking_size( 1, 1 )
 1016.                do
 1017.                   $SCA_h2_I10 = h2(2 + $I_L1016_74 + $I_L1016_82)
 1017.                   $SCA_h1_I11 = h1(2 + $I_L1016_74 + $I_L1016_82)
 1017.                   $SCA_rdel2_I12 = rdel2(2 + $I_L1016_74 + $I_L1016_82)
 1017.                   $I_L1017_66 = 0
 1017. !dir$ ivdep
 1017. !dir$ blocking_size( 256, 256 )
 1017.                   do
 1018.                      tend(1 + $I_L1017_66, 2 + $I_L1016_74 + $I_L1016_82) = tend(1 + $I_L1017_66, 2 + $I_L1016_74 + $I_L1016_82) + -( $SCA_rdel2_I12 * ( w1(1 + $I_L1017_66, 2 + $I_L1016_74 + $I_L1016_82) * dot(1 + $I_L1017_66, 3 + $I_L1016_74 + $I_L1016_82) + $SCA_h1_I11 * w3(1 + $I_L1017_66, 2 + $I_L1016_74 + $I_L1016_82) + dot(1 + $I_L1017_66, 2 + $I_L1016_74 + $I_L1016_82) * w2(1 + $I_L1017_66, 2 + $I_L1016_74 + $I_L1016_82) + $SCA_h2_I10 * w3(1 + $I_L1017_66, 1 + $I_L1016_74 + $I_L1016_82) ) )
 1020.                      $I_L1017_66 = 1 + $I_L1017_66
 1017.                      if ( $I_L1017_66 >= iblim ) exit
 1017.                   enddo
 1021.                   $I_L1016_82 = 1 + $I_L1016_82
 1020.                   if ( $I_L1016_82 >= -2 + kmax + -$I_L1016_74 ) exit
 1020.                enddo
 1020.             endif
 1020.          endif
 1020.       endif
 1023.       if ( iblim > 0 ) then
 1024.          $SC_rdel2_I3 = rdel2(kmax)
 1024.          $SC_h2_I2 = h2(kmax)
 1023.          $I_L1023_68 = 0
 1023. !dir$ ivdep
 1023.          do
 1024.             tend(1 + $I_L1023_68, kmax) = tend(1 + $I_L1023_68, kmax) + -( $SC_rdel2_I3 * ( w2(1 + $I_L1023_68, kmax) * dot(1 + $I_L1023_68, kmax) + $SC_h2_I2 * w3(1 + $I_L1023_68, -1 + kmax) ) )
 1025.             $I_L1023_68 = 1 + $I_L1023_68
 1023.             if ( $I_L1023_68 >= iblim ) exit
 1023.          enddo
 1023.       endif
  971.       _free( t$116 )
 1026.       return
 1026.       end
 1026.       
 1033.       
 1033.       subroutine tmptend( tend, tmp, tov, psint, adveps, divint, rk, ibmax, kmax, iblim )
 1033.       t$26 = ibmax
 1033.       t$25 = kmax
 1044.       t$125 = _zla( 0, ibmax )
 1033.       t$126 = _zla( 0, ibmax )
 1044.       t$127 = _zla( 0, kmax )
 1033.       t$128 = _zla( 0, ibmax ) * _zla( 0, kmax )
 1050.       if ( kmax > 0 ) then
 1051.          if ( iblim > 0 ) then
 1050.             $I_L1050_18 = 0
 1050.             if ( kmax >= 4 ) then
 1050.                $I_L1050_23 = 0
 1050. !dir$ blocking_size( 1, 1 )
 1050.                do
 1051.                   $SCA_tov#1_U0 = tov(1 + 4 * $I_L1050_23)
 1051.                   $SCA_tov#2_U1 = tov(2 + 4 * $I_L1050_23)
 1051.                   $SCA_tov#3_U2 = tov(3 + 4 * $I_L1050_23)
 1051.                   $SCA_tov#4_U3 = tov(4 + 4 * $I_L1050_23)
 1051.                   $I_L1051_16 = 0
 1051. !dir$ ivdep
 1051. !dir$ blocking_size( 256, 256 )
 1051.                   do
 1052.                      tend(1 + $I_L1051_16, 1 + 4 * $I_L1050_23) = tend(1 + $I_L1051_16, 1 + 4 * $I_L1050_23) + -( rk * divint(1 + $I_L1051_16, kmax) * tmp(1 + $I_L1051_16, 1 + 4 * $I_L1050_23) ) + rk * ( $SCA_tov#1_U0 + tmp(1 + $I_L1051_16, 1 + 4 * $I_L1050_23) ) * ( adveps(1 + $I_L1051_16, 1 + 4 * $I_L1050_23) + -psint(1 + $I_L1051_16, kmax) )
 1052.                      tend(1 + $I_L1051_16, 2 + 4 * $I_L1050_23) = tend(1 + $I_L1051_16, 2 + 4 * $I_L1050_23) + -( rk * divint(1 + $I_L1051_16, kmax) * tmp(1 + $I_L1051_16, 2 + 4 * $I_L1050_23) ) + rk * ( adveps(1 + $I_L1051_16, 2 + 4 * $I_L1050_23) + -psint(1 + $I_L1051_16, kmax) ) * ( $SCA_tov#2_U1 + tmp(1 + $I_L1051_16, 2 + 4 * $I_L1050_23) )
 1052.                      tend(1 + $I_L1051_16, 3 + 4 * $I_L1050_23) = tend(1 + $I_L1051_16, 3 + 4 * $I_L1050_23) + -( rk * divint(1 + $I_L1051_16, kmax) * tmp(1 + $I_L1051_16, 3 + 4 * $I_L1050_23) ) + rk * ( adveps(1 + $I_L1051_16, 3 + 4 * $I_L1050_23) + -psint(1 + $I_L1051_16, kmax) ) * ( $SCA_tov#3_U2 + tmp(1 + $I_L1051_16, 3 + 4 * $I_L1050_23) )
 1052.                      tend(1 + $I_L1051_16, 4 + 4 * $I_L1050_23) = tend(1 + $I_L1051_16, 4 + 4 * $I_L1050_23) + -( rk * divint(1 + $I_L1051_16, kmax) * tmp(1 + $I_L1051_16, 4 + 4 * $I_L1050_23) ) + rk * ( adveps(1 + $I_L1051_16, 4 + 4 * $I_L1050_23) + -psint(1 + $I_L1051_16, kmax) ) * ( $SCA_tov#4_U3 + tmp(1 + $I_L1051_16, 4 + 4 * $I_L1050_23) )
 1054.                      $I_L1051_16 = 1 + $I_L1051_16
 1051.                      if ( $I_L1051_16 >= iblim ) exit
 1051.                   enddo
 1055.                   $I_L1050_23 = 1 + $I_L1050_23
 1054.                   if ( $I_L1050_23 >= _rsh( kmax, 2 ) ) exit
 1054.                enddo
 1055.                $I_L1050_18 = and( 0xfffffffffffffffcUL, kmax )
 1055.             endif
 1050.             if ( $I_L1050_18 < kmax ) then
 1050.                $I_L1050_20 = 0
 1050. !dir$ blocking_size( 1, 1 )
 1050.                do
 1051.                   $SCA_tov_I0 = tov(1 + $I_L1050_18 + $I_L1050_20)
 1051.                   $I_L1051_16 = 0
 1051. !dir$ ivdep
 1051. !dir$ blocking_size( 256, 256 )
 1051.                   do
 1052.                      tend(1 + $I_L1051_16, 1 + $I_L1050_18 + $I_L1050_20) = tend(1 + $I_L1051_16, 1 + $I_L1050_18 + $I_L1050_20) + -( rk * divint(1 + $I_L1051_16, kmax) * tmp(1 + $I_L1051_16, 1 + $I_L1050_18 + $I_L1050_20) ) + rk * ( adveps(1 + $I_L1051_16, 1 + $I_L1050_18 + $I_L1050_20) + -psint(1 + $I_L1051_16, kmax) ) * ( $SCA_tov_I0 + tmp(1 + $I_L1051_16, 1 + $I_L1050_18 + $I_L1050_20) )
 1054.                      $I_L1051_16 = 1 + $I_L1051_16
 1051.                      if ( $I_L1051_16 >= iblim ) exit
 1051.                   enddo
 1055.                   $I_L1050_20 = 1 + $I_L1050_20
 1054.                   if ( $I_L1050_20 >= kmax + -$I_L1050_18 ) exit
 1054.                enddo
 1054.             endif
 1054.          endif
 1054.       endif
 1056.       return
 1056.       end
 1056.       
 1063.       
 1063.       subroutine tndtold( tdu, tdv, tdt, tdlnp, zlam, zphi, plam, pphi, divint, rdel2, ci, h1, h2, tov, rc, rk, w, ibmax, kmax, iblim )
 1063.       t$27 = ibmax
 1063.       t$28 = kmax
 1081.       t$129 = _zla( 0, ibmax )
 1063.       t$130 = _zla( 0, ibmax )
 1081.       t$131 = _zla( 0, kmax )
 1063.       t$132 = _zla( 0, ibmax ) * _zla( 0, kmax )
 1063.       t$29 = ( 1 + kmax )
 1076.       t$133 = _zla( 0, ( 1 + kmax ) )
 1094.       if ( kmax > 0 ) then
 1095.          if ( iblim > 0 ) then
 1094.             $I_L1094_80 = 0
 1094.             if ( kmax >= 4 ) then
 1094.                $I_L1094_103 = 0
 1094. !dir$ blocking_size( 1, 1 )
 1094.                do
 1095.                   $SCA_tov#1_U0 = tov(1 + 4 * $I_L1094_103)
 1095.                   $SCA_tov#2_U1 = tov(2 + 4 * $I_L1094_103)
 1095.                   $SCA_tov#3_U2 = tov(3 + 4 * $I_L1094_103)
 1095.                   $SCA_tov#4_U3 = tov(4 + 4 * $I_L1094_103)
 1095.                   $I_L1095_66 = 0
 1095. !dir$ ivdep
 1095. !dir$ blocking_size( 256, 256 )
 1095.                   do
 1097.                      tdv(1 + $I_L1095_66, 1 + 4 * $I_L1094_103) = tdv(1 + $I_L1095_66, 1 + 4 * $I_L1094_103) + -5.0e-1 * ( zphi(1 + $I_L1095_66, 1 + 4 * $I_L1094_103) + rc * pphi(1 + $I_L1095_66) * $SCA_tov#1_U0 )
 1097.                      tdv(1 + $I_L1095_66, 2 + 4 * $I_L1094_103) = tdv(1 + $I_L1095_66, 2 + 4 * $I_L1094_103) + -5.0e-1 * ( zphi(1 + $I_L1095_66, 2 + 4 * $I_L1094_103) + rc * pphi(1 + $I_L1095_66) * $SCA_tov#2_U1 )
 1097.                      tdv(1 + $I_L1095_66, 3 + 4 * $I_L1094_103) = tdv(1 + $I_L1095_66, 3 + 4 * $I_L1094_103) + -5.0e-1 * ( zphi(1 + $I_L1095_66, 3 + 4 * $I_L1094_103) + rc * pphi(1 + $I_L1095_66) * $SCA_tov#3_U2 )
 1097.                      tdv(1 + $I_L1095_66, 4 + 4 * $I_L1094_103) = tdv(1 + $I_L1095_66, 4 + 4 * $I_L1094_103) + -5.0e-1 * ( zphi(1 + $I_L1095_66, 4 + 4 * $I_L1094_103) + rc * pphi(1 + $I_L1095_66) * $SCA_tov#4_U3 )
 1096.                      tdu(1 + $I_L1095_66, 1 + 4 * $I_L1094_103) = tdu(1 + $I_L1095_66, 1 + 4 * $I_L1094_103) + -5.0e-1 * ( zlam(1 + $I_L1095_66, 1 + 4 * $I_L1094_103) + rc * plam(1 + $I_L1095_66) * $SCA_tov#1_U0 )
 1096.                      tdu(1 + $I_L1095_66, 2 + 4 * $I_L1094_103) = tdu(1 + $I_L1095_66, 2 + 4 * $I_L1094_103) + -5.0e-1 * ( zlam(1 + $I_L1095_66, 2 + 4 * $I_L1094_103) + rc * plam(1 + $I_L1095_66) * $SCA_tov#2_U1 )
 1096.                      tdu(1 + $I_L1095_66, 3 + 4 * $I_L1094_103) = tdu(1 + $I_L1095_66, 3 + 4 * $I_L1094_103) + -5.0e-1 * ( zlam(1 + $I_L1095_66, 3 + 4 * $I_L1094_103) + rc * plam(1 + $I_L1095_66) * $SCA_tov#3_U2 )
 1096.                      tdu(1 + $I_L1095_66, 4 + 4 * $I_L1094_103) = tdu(1 + $I_L1095_66, 4 + 4 * $I_L1094_103) + -5.0e-1 * ( zlam(1 + $I_L1095_66, 4 + 4 * $I_L1094_103) + rc * plam(1 + $I_L1095_66) * $SCA_tov#4_U3 )
 1098.                      $I_L1095_66 = 1 + $I_L1095_66
 1095.                      if ( $I_L1095_66 >= iblim ) exit
 1095.                   enddo
 1099.                   $I_L1094_103 = 1 + $I_L1094_103
 1098.                   if ( $I_L1094_103 >= _rsh( kmax, 2 ) ) exit
 1098.                enddo
 1099.                $I_L1094_80 = and( 0xfffffffffffffffcUL, kmax )
 1099.             endif
 1094.             if ( $I_L1094_80 < kmax ) then
 1094.                $I_L1094_96 = 0
 1094. !dir$ blocking_size( 1, 1 )
 1094.                do
 1095.                   $SCA_tov_I6 = tov(1 + $I_L1094_80 + $I_L1094_96)
 1095.                   $I_L1095_66 = 0
 1095. !dir$ ivdep
 1095. !dir$ blocking_size( 256, 256 )
 1095.                   do
 1097.                      tdv(1 + $I_L1095_66, 1 + $I_L1094_80 + $I_L1094_96) = tdv(1 + $I_L1095_66, 1 + $I_L1094_80 + $I_L1094_96) + -5.0e-1 * ( zphi(1 + $I_L1095_66, 1 + $I_L1094_80 + $I_L1094_96) + rc * $SCA_tov_I6 * pphi(1 + $I_L1095_66) )
 1096.                      tdu(1 + $I_L1095_66, 1 + $I_L1094_80 + $I_L1094_96) = tdu(1 + $I_L1095_66, 1 + $I_L1094_80 + $I_L1094_96) + -5.0e-1 * ( zlam(1 + $I_L1095_66, 1 + $I_L1094_80 + $I_L1094_96) + rc * $SCA_tov_I6 * plam(1 + $I_L1095_66) )
 1098.                      $I_L1095_66 = 1 + $I_L1095_66
 1095.                      if ( $I_L1095_66 >= iblim ) exit
 1095.                   enddo
 1099.                   $I_L1094_96 = 1 + $I_L1094_96
 1098.                   if ( $I_L1094_96 >= kmax + -$I_L1094_80 ) exit
 1098.                enddo
 1098.             endif
 1098.          endif
 1098.       endif
 1103.       if ( iblim > 0 ) then
 1103.          $I_L1103_68 = 0
 1103. !dir$ ivdep
 1103.          do
 1104.             tdlnp(1 + $I_L1103_68) = tdlnp(1 + $I_L1103_68) + -5.0e-1 * divint(1 + $I_L1103_68, kmax)
 1105.             $I_L1103_68 = 1 + $I_L1103_68
 1103.             if ( $I_L1103_68 >= iblim ) exit
 1103.          enddo
 1103.       endif
 1109.       if ( -1 + kmax > 0 ) then
 1110.          if ( iblim > 0 ) then
 1109.             $I_L1109_92 = 0
 1109.             do
 1110.                $I_L1110_88 = 0
 1110.                do
 1109.                   $I_L1109_99 = 0
 1109. !dir$ shortloop16
 1109. !dir$ blocking_size( 2, 2 )
 1109.                   do
 1110.                      $SCA_ci_I7 = ci(2 + $I_L1109_99 + 2 * $I_L1109_92)
 1110.                      $I_L1110_70 = 0
 1110. !dir$ ivdep
 1110. !dir$ blocking_size( 256, 256 )
 1110.                      do
 1111.                         w(1 + $I_L1110_70 + 256 * $I_L1110_88, 1 + $I_L1109_99 + 2 * $I_L1109_92) = -divint(1 + $I_L1110_70 + 256 * $I_L1110_88, 1 + $I_L1109_99 + 2 * $I_L1109_92) + $SCA_ci_I7 * divint(1 + $I_L1110_70 + 256 * $I_L1110_88, kmax)
 1110.                         $I_L1110_70 = 1 + $I_L1110_70
 1110.                         if ( $I_L1110_70 >= min( iblim, 256 + 256 * $I_L1110_88 ) + -256 * $I_L1110_88 ) exit
 1110.                      enddo
 1109.                      $I_L1109_99 = 1 + $I_L1109_99
 1109.                      if ( $I_L1109_99 >= min( -1 + kmax, 2 + 2 * $I_L1109_92 ) + -2 * $I_L1109_92 ) exit
 1109.                   enddo
 1110.                   $I_L1110_88 = 1 + $I_L1110_88
 1112.                   if ( $I_L1110_88 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
 1112.                enddo
 1109.                $I_L1109_92 = 1 + $I_L1109_92
 1109.                if ( $I_L1109_92 >= 1 + max( 0, -1 + _rsh( kmax, 1 ) ) ) exit
 1109.             enddo
 1109.          endif
 1109.       endif
 1115.       if ( iblim > 0 ) then
 1116.          $SC_h1_I1 = h1(1)
 1116.          $SC_rdel2_I2 = rdel2(1)
 1116.          $SC_tov_I0 = tov(1)
 1115.          $I_L1115_73 = 0
 1115. !dir$ ivdep
 1115.          do
 1116.             tdt(1 + $I_L1115_73, 1) = tdt(1 + $I_L1115_73, 1) + -5.0e-1 * ( rk * $SC_tov_I0 * divint(1 + $I_L1115_73, kmax) + w(1 + $I_L1115_73, 1) * $SC_h1_I1 * $SC_rdel2_I2 )
 1118.             $I_L1115_73 = 1 + $I_L1115_73
 1115.             if ( $I_L1115_73 >= iblim ) exit
 1115.          enddo
 1115.       endif
 1119.       if ( -3 + kmax >= 0 ) then
 1120.          if ( iblim > 0 ) then
 1119.             $I_L1119_94 = 0
 1119.             do
 1120.                $I_L1120_90 = 0
 1120.                do
 1119.                   $I_L1119_101 = 0
 1119. !dir$ shortloop16
 1119. !dir$ blocking_size( 2, 2 )
 1119.                   do
 1120.                      $SCA_h2_I8 = h2(2 + $I_L1119_101 + 2 * $I_L1119_94)
 1120.                      $SCA_h1_I9 = h1(2 + $I_L1119_101 + 2 * $I_L1119_94)
 1120.                      $SCA_rdel2_I10 = rdel2(2 + $I_L1119_101 + 2 * $I_L1119_94)
 1120.                      $SCA_tov_I11 = tov(2 + $I_L1119_101 + 2 * $I_L1119_94)
 1120.                      $I_L1120_75 = 0
 1120. !dir$ ivdep
 1120. !dir$ blocking_size( 256, 256 )
 1120.                      do
 1121.                         tdt(1 + $I_L1120_75 + 256 * $I_L1120_90, 2 + $I_L1119_101 + 2 * $I_L1119_94) = tdt(1 + $I_L1120_75 + 256 * $I_L1120_90, 2 + $I_L1119_101 + 2 * $I_L1119_94) + -5.0e-1 * ( rk * $SCA_tov_I11 * divint(1 + $I_L1120_75 + 256 * $I_L1120_90, kmax) + $SCA_rdel2_I10 * ( $SCA_h1_I9 * w(1 + $I_L1120_75 + 256 * $I_L1120_90, 2 + $I_L1119_101 + 2 * $I_L1119_94) + $SCA_h2_I8 * w(1 + $I_L1120_75 + 256 * $I_L1120_90, 1 + $I_L1119_101 + 2 * $I_L1119_94) ) )
 1120.                         $I_L1120_75 = 1 + $I_L1120_75
 1120.                         if ( $I_L1120_75 >= min( iblim, 256 + 256 * $I_L1120_90 ) + -256 * $I_L1120_90 ) exit
 1120.                      enddo
 1119.                      $I_L1119_101 = 1 + $I_L1119_101
 1119.                      if ( $I_L1119_101 >= min( -2 + kmax, 2 + 2 * $I_L1119_94 ) + -2 * $I_L1119_94 ) exit
 1119.                   enddo
 1120.                   $I_L1120_90 = 1 + $I_L1120_90
 1123.                   if ( $I_L1120_90 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
 1123.                enddo
 1119.                $I_L1119_94 = 1 + $I_L1119_94
 1119.                if ( $I_L1119_94 >= 1 + max( 0, -1 + _rsh( -1 + kmax, 1 ) ) ) exit
 1119.             enddo
 1119.          endif
 1119.       endif
 1126.       if ( iblim > 0 ) then
 1127.          $SC_h2_I4 = h2(kmax)
 1127.          $SC_rdel2_I5 = rdel2(kmax)
 1127.          $SC_tov_I3 = tov(kmax)
 1126.          $I_L1126_78 = 0
 1126. !dir$ ivdep
 1126.          do
 1127.             tdt(1 + $I_L1126_78, kmax) = tdt(1 + $I_L1126_78, kmax) + -5.0e-1 * ( rk * $SC_tov_I3 * divint(1 + $I_L1126_78, kmax) + w(1 + $I_L1126_78, -1 + kmax) * $SC_h2_I4 * $SC_rdel2_I5 )
 1129.             $I_L1126_78 = 1 + $I_L1126_78
 1126.             if ( $I_L1126_78 >= iblim ) exit
 1126.          enddo
 1126.       endif
 1130.       return
 1130.       end
 1130.       
 1136.       
 1136.       subroutine addtend( dt, nlnminit, jbfirst, jblast )
 1143.       $dt2_S4 = 2.0 * dt
 1144.       if ( nlnminit == .false. ) then
 1146.          if ( jblast + -jbfirst >= 0 ) then
 1155.             $SC_fgqm_I10 = fgqm%dim_1%EX
 1155.             $SC_fgqm_I11 = fgqm%dim_1%LB
 1155.             $SC_fgqm_I13 = fgqm%dim_2%SM
 1155.             $SC_fgqm_I12 = fgqm%dim_2%EX
 1155.             $SC_fgqm_I14 = fgqm%dim_2%LB
 1155.             $SC_fgqm_I16 = fgqm%dim_3%SM
 1155.             $SC_fgqm_I15 = fgqm%dim_3%EX
 1155.             $SC_fgqm_I17 = fgqm%dim_3%LB
 1155.             $SC_fgqd_I2 = fgqd%dim_1%EX
 1155.             $SC_fgqd_I3 = fgqd%dim_1%LB
 1155.             $SC_fgqd_I5 = fgqd%dim_2%SM
 1155.             $SC_fgqd_I4 = fgqd%dim_2%EX
 1155.             $SC_fgqd_I6 = fgqd%dim_2%LB
 1155.             $SC_fgqd_I8 = fgqd%dim_3%SM
 1155.             $SC_fgqd_I7 = fgqd%dim_3%EX
 1155.             $SC_fgqd_I9 = fgqd%dim_3%LB
 1153.             $SC_fgtdm_I26 = fgtdm%dim_1%EX
 1153.             $SC_fgtdm_I27 = fgtdm%dim_1%LB
 1153.             $SC_fgtdm_I29 = fgtdm%dim_2%SM
 1153.             $SC_fgtdm_I28 = fgtdm%dim_2%EX
 1153.             $SC_fgtdm_I30 = fgtdm%dim_2%LB
 1153.             $SC_fgtdm_I32 = fgtdm%dim_3%SM
 1153.             $SC_fgtdm_I31 = fgtdm%dim_3%EX
 1153.             $SC_fgtdm_I33 = fgtdm%dim_3%LB
 1153.             $SC_fgtmpm_I34 = fgtmpm%dim_1%EX
 1153.             $SC_fgtmpm_I35 = fgtmpm%dim_1%LB
 1153.             $SC_fgtmpm_I37 = fgtmpm%dim_2%SM
 1153.             $SC_fgtmpm_I36 = fgtmpm%dim_2%EX
 1153.             $SC_fgtmpm_I38 = fgtmpm%dim_2%LB
 1153.             $SC_fgtmpm_I40 = fgtmpm%dim_3%SM
 1153.             $SC_fgtmpm_I39 = fgtmpm%dim_3%EX
 1153.             $SC_fgtmpm_I41 = fgtmpm%dim_3%LB
 1153.             $SC_fgtd_I18 = fgtd%dim_1%EX
 1153.             $SC_fgtd_I19 = fgtd%dim_1%LB
 1153.             $SC_fgtd_I21 = fgtd%dim_2%SM
 1153.             $SC_fgtd_I20 = fgtd%dim_2%EX
 1153.             $SC_fgtd_I22 = fgtd%dim_2%LB
 1153.             $SC_fgtd_I24 = fgtd%dim_3%SM
 1153.             $SC_fgtd_I23 = fgtd%dim_3%EX
 1153.             $SC_fgtd_I25 = fgtd%dim_3%LB
 1151.             $SC_fgyv_I42 = fgyv%dim_1%EX
 1151.             $SC_fgyv_I43 = fgyv%dim_1%LB
 1151.             $SC_fgyv_I45 = fgyv%dim_2%SM
 1151.             $SC_fgyv_I44 = fgyv%dim_2%EX
 1151.             $SC_fgyv_I46 = fgyv%dim_2%LB
 1151.             $SC_fgyv_I47 = fgyv%dim_3%EX
 1148.             $SC_ibmaxperjb_I0 = ibmaxperjb%dim_1%EX
 1148.             $SC_ibmaxperjb_I1 = ibmaxperjb%dim_1%LB
 1147.             if ( kmax > 0 ) then
 1146.                $I_L1146_110 = 0
 1146.                do
 1147.                   $SCA_ibmaxperjb_I72 = (ibmaxperjb%base_addr)(jbfirst + $I_L1146_110, 0)
 1151.                   $SC_fgyvm_I98 = fgyvm%dim_1%EX
 1151.                   $SC_fgyvm_I99 = fgyvm%dim_1%LB
 1151.                   $SC_fgyvm_I101 = fgyvm%dim_2%SM
 1151.                   $SC_fgyvm_I100 = fgyvm%dim_2%EX
 1151.                   $SC_fgyvm_I102 = fgyvm%dim_2%LB
 1151.                   $SC_fgyvm_I104 = fgyvm%dim_3%SM
 1151.                   $SC_fgyvm_I103 = fgyvm%dim_3%EX
 1151.                   $SC_fgyvm_I105 = fgyvm%dim_3%LB
 1151.                   $SC_fgvm_I108 = fgvm%dim_1%EX
 1151.                   $SC_fgvm_I109 = fgvm%dim_1%LB
 1151.                   $SC_fgvm_I111 = fgvm%dim_2%SM
 1151.                   $SC_fgvm_I110 = fgvm%dim_2%EX
 1151.                   $SC_fgvm_I112 = fgvm%dim_2%LB
 1151.                   $SC_fgvm_I114 = fgvm%dim_3%SM
 1151.                   $SC_fgvm_I113 = fgvm%dim_3%EX
 1151.                   $SC_fgvm_I115 = fgvm%dim_3%LB
 1151.                   $SC_fgyv_I106 = fgyv%dim_3%SM
 1151.                   $SC_fgyv_I107 = fgyv%dim_3%LB
 1149.                   $SC_fgyum_I74 = fgyum%dim_1%EX
 1149.                   $SC_fgyum_I75 = fgyum%dim_1%LB
 1149.                   $SC_fgyum_I77 = fgyum%dim_2%SM
 1149.                   $SC_fgyum_I76 = fgyum%dim_2%EX
 1149.                   $SC_fgyum_I78 = fgyum%dim_2%LB
 1149.                   $SC_fgyum_I80 = fgyum%dim_3%SM
 1149.                   $SC_fgyum_I79 = fgyum%dim_3%EX
 1149.                   $SC_fgyum_I81 = fgyum%dim_3%LB
 1149.                   $SC_fgum_I90 = fgum%dim_1%EX
 1149.                   $SC_fgum_I91 = fgum%dim_1%LB
 1149.                   $SC_fgum_I93 = fgum%dim_2%SM
 1149.                   $SC_fgum_I92 = fgum%dim_2%EX
 1149.                   $SC_fgum_I94 = fgum%dim_2%LB
 1149.                   $SC_fgum_I96 = fgum%dim_3%SM
 1149.                   $SC_fgum_I95 = fgum%dim_3%EX
 1149.                   $SC_fgum_I97 = fgum%dim_3%LB
 1149.                   $SC_fgyu_I82 = fgyu%dim_1%EX
 1149.                   $SC_fgyu_I83 = fgyu%dim_1%LB
 1149.                   $SC_fgyu_I85 = fgyu%dim_2%SM
 1149.                   $SC_fgyu_I84 = fgyu%dim_2%EX
 1149.                   $SC_fgyu_I86 = fgyu%dim_2%LB
 1149.                   $SC_fgyu_I88 = fgyu%dim_3%SM
 1149.                   $SC_fgyu_I87 = fgyu%dim_3%EX
 1149.                   $SC_fgyu_I89 = fgyu%dim_3%LB
 1147.                   $I_L1147_102 = 0
 1147.                   do
 1148.                      if ( $SCA_ibmaxperjb_I72 > 0 ) then
 1148.                         $I_L1148_92 = 0
 1148. !dir$ ivdep
 1148. !dir$ loop_info (automatic) cache_nt( fgyvm, fgyum, fgvm, fgum, fgtmpm, fgtdm, fgyu, fgyv, fgtd, fgqd )
 1148.                         do
 1155.                            (fgqd%base_addr)(1 + $I_L1148_92, 1 + $I_L1147_102, jbfirst + $I_L1146_110, 0) = (fgqm%base_addr)(1 + $I_L1148_92, 1 + $I_L1147_102, jbfirst + $I_L1146_110, 0) + $dt2_S4 * (fgqd%base_addr)(1 + $I_L1148_92, 1 + $I_L1147_102, jbfirst + $I_L1146_110, 0)
 1153.                            (fgtd%base_addr)(1 + $I_L1148_92, 1 + $I_L1147_102, jbfirst + $I_L1146_110, 0) = (fgtmpm%base_addr)(1 + $I_L1148_92, 1 + $I_L1147_102, jbfirst + $I_L1146_110, 0) + $dt2_S4 * ( (fgtd%base_addr)(1 + $I_L1148_92, 1 + $I_L1147_102, jbfirst + $I_L1146_110, 0) + (fgtdm%base_addr)(1 + $I_L1148_92, 1 + $I_L1147_102, jbfirst + $I_L1146_110, 0) )
 1151.                            (fgyv%base_addr)(1 + $I_L1148_92, 1 + $I_L1147_102, jbfirst + $I_L1146_110, 0) = (fgvm%base_addr)(1 + $I_L1148_92, 1 + $I_L1147_102, jbfirst + $I_L1146_110, 0) + $dt2_S4 * ( (fgyv%base_addr)(1 + $I_L1148_92, 1 + $I_L1147_102, jbfirst + $I_L1146_110, 0) + (fgyvm%base_addr)(1 + $I_L1148_92, 1 + $I_L1147_102, jbfirst + $I_L1146_110, 0) )
 1149.                            (fgyu%base_addr)(1 + $I_L1148_92, 1 + $I_L1147_102, jbfirst + $I_L1146_110, 0) = (fgum%base_addr)(1 + $I_L1148_92, 1 + $I_L1147_102, jbfirst + $I_L1146_110, 0) + $dt2_S4 * ( (fgyu%base_addr)(1 + $I_L1148_92, 1 + $I_L1147_102, jbfirst + $I_L1146_110, 0) + (fgyum%base_addr)(1 + $I_L1148_92, 1 + $I_L1147_102, jbfirst + $I_L1146_110, 0) )
 1157.                            $I_L1148_92 = 1 + $I_L1148_92
 1148.                            if ( $I_L1148_92 >= $SCA_ibmaxperjb_I72 ) exit
 1148.                         enddo
 1148.                      endif
 1158.                      $I_L1147_102 = 1 + $I_L1147_102
 1157.                      if ( $I_L1147_102 >= kmax ) exit
 1157.                   enddo
 1159.                   if ( $SCA_ibmaxperjb_I72 > 0 ) then
 1160.                      $SC_fgvdlnpm_I116 = fgvdlnpm%dim_1%EX
 1160.                      $SC_fgvdlnpm_I117 = fgvdlnpm%dim_1%LB
 1160.                      $SC_fgvdlnpm_I119 = fgvdlnpm%dim_2%SM
 1160.                      $SC_fgvdlnpm_I118 = fgvdlnpm%dim_2%EX
 1160.                      $SC_fgvdlnpm_I120 = fgvdlnpm%dim_2%LB
 1160.                      $SC_fglnpm_I126 = fglnpm%dim_1%EX
 1160.                      $SC_fglnpm_I127 = fglnpm%dim_1%LB
 1160.                      $SC_fglnpm_I129 = fglnpm%dim_2%SM
 1160.                      $SC_fglnpm_I128 = fglnpm%dim_2%EX
 1160.                      $SC_fglnpm_I130 = fglnpm%dim_2%LB
 1160.                      $SC_fgvdlnp_I121 = fgvdlnp%dim_1%EX
 1160.                      $SC_fgvdlnp_I122 = fgvdlnp%dim_1%LB
 1160.                      $SC_fgvdlnp_I124 = fgvdlnp%dim_2%SM
 1160.                      $SC_fgvdlnp_I123 = fgvdlnp%dim_2%EX
 1160.                      $SC_fgvdlnp_I125 = fgvdlnp%dim_2%LB
 1159.                      $I_L1159_94 = 0
 1159. !dir$ ivdep
 1159.                      do
 1160.                         (fgvdlnp%base_addr)(1 + $I_L1159_94, jbfirst + $I_L1146_110, 0) = (fglnpm%base_addr)(1 + $I_L1159_94, jbfirst + $I_L1146_110, 0) + $dt2_S4 * ( (fgvdlnp%base_addr)(1 + $I_L1159_94, jbfirst + $I_L1146_110, 0) + (fgvdlnpm%base_addr)(1 + $I_L1159_94, jbfirst + $I_L1146_110, 0) )
 1162.                         $I_L1159_94 = 1 + $I_L1159_94
 1159.                         if ( $I_L1159_94 >= $SCA_ibmaxperjb_I72 ) exit
 1159.                      enddo
 1159.                   endif
 1163.                   $I_L1146_110 = 1 + $I_L1146_110
 1162.                   if ( $I_L1146_110 >= 1 + jblast + -jbfirst ) exit
 1162.                enddo
 1162.             else
 1146.                $I_L1146_106 = 0
 1146.                do
 1159.                   $t_S5 = (ibmaxperjb%base_addr)(jbfirst + $I_L1146_106, 0)
 1159.                   if ( $t_S5 > 0 ) then
 1160.                      $SC_fgvdlnpm_I116 = fgvdlnpm%dim_1%EX
 1160.                      $SC_fgvdlnpm_I117 = fgvdlnpm%dim_1%LB
 1160.                      $SC_fgvdlnpm_I119 = fgvdlnpm%dim_2%SM
 1160.                      $SC_fgvdlnpm_I118 = fgvdlnpm%dim_2%EX
 1160.                      $SC_fgvdlnpm_I120 = fgvdlnpm%dim_2%LB
 1160.                      $SC_fglnpm_I126 = fglnpm%dim_1%EX
 1160.                      $SC_fglnpm_I127 = fglnpm%dim_1%LB
 1160.                      $SC_fglnpm_I129 = fglnpm%dim_2%SM
 1160.                      $SC_fglnpm_I128 = fglnpm%dim_2%EX
 1160.                      $SC_fglnpm_I130 = fglnpm%dim_2%LB
 1160.                      $SC_fgvdlnp_I121 = fgvdlnp%dim_1%EX
 1160.                      $SC_fgvdlnp_I122 = fgvdlnp%dim_1%LB
 1160.                      $SC_fgvdlnp_I124 = fgvdlnp%dim_2%SM
 1160.                      $SC_fgvdlnp_I123 = fgvdlnp%dim_2%EX
 1160.                      $SC_fgvdlnp_I125 = fgvdlnp%dim_2%LB
 1159.                      $I_L1159_98 = 0
 1159. !dir$ ivdep
 1159.                      do
 1160.                         (fgvdlnp%base_addr)(1 + $I_L1159_98, jbfirst + $I_L1146_106, 0) = (fglnpm%base_addr)(1 + $I_L1159_98, jbfirst + $I_L1146_106, 0) + $dt2_S4 * ( (fgvdlnp%base_addr)(1 + $I_L1159_98, jbfirst + $I_L1146_106, 0) + (fgvdlnpm%base_addr)(1 + $I_L1159_98, jbfirst + $I_L1146_106, 0) )
 1162.                         $I_L1159_98 = 1 + $I_L1159_98
 1159.                         if ( $I_L1159_98 >= $t_S5 ) exit
 1159.                      enddo
 1159.                   endif
 1163.                   $I_L1146_106 = 1 + $I_L1146_106
 1162.                   if ( $I_L1146_106 >= 1 + jblast + -jbfirst ) exit
 1162.                enddo
 1162.             endif
 1162.          endif
 1165.       else if ( jblast + -jbfirst >= 0 ) then
 1172.          $SC_fgtdm_I26 = fgtdm%dim_1%EX
 1172.          $SC_fgtdm_I27 = fgtdm%dim_1%LB
 1172.          $SC_fgtdm_I29 = fgtdm%dim_2%SM
 1172.          $SC_fgtdm_I28 = fgtdm%dim_2%EX
 1172.          $SC_fgtdm_I30 = fgtdm%dim_2%LB
 1172.          $SC_fgtdm_I32 = fgtdm%dim_3%SM
 1172.          $SC_fgtdm_I31 = fgtdm%dim_3%EX
 1172.          $SC_fgtdm_I33 = fgtdm%dim_3%LB
 1172.          $SC_fgtd_I18 = fgtd%dim_1%EX
 1172.          $SC_fgtd_I19 = fgtd%dim_1%LB
 1172.          $SC_fgtd_I21 = fgtd%dim_2%SM
 1172.          $SC_fgtd_I20 = fgtd%dim_2%EX
 1172.          $SC_fgtd_I22 = fgtd%dim_2%LB
 1172.          $SC_fgtd_I24 = fgtd%dim_3%SM
 1172.          $SC_fgtd_I23 = fgtd%dim_3%EX
 1172.          $SC_fgtd_I25 = fgtd%dim_3%LB
 1171.          $SC_fgyvm_I48 = fgyvm%dim_1%EX
 1171.          $SC_fgyvm_I49 = fgyvm%dim_1%LB
 1171.          $SC_fgyvm_I51 = fgyvm%dim_2%SM
 1171.          $SC_fgyvm_I50 = fgyvm%dim_2%EX
 1171.          $SC_fgyvm_I52 = fgyvm%dim_2%LB
 1171.          $SC_fgyvm_I54 = fgyvm%dim_3%SM
 1171.          $SC_fgyvm_I53 = fgyvm%dim_3%EX
 1171.          $SC_fgyvm_I55 = fgyvm%dim_3%LB
 1171.          $SC_fgyv_I42 = fgyv%dim_1%EX
 1171.          $SC_fgyv_I43 = fgyv%dim_1%LB
 1171.          $SC_fgyv_I45 = fgyv%dim_2%SM
 1171.          $SC_fgyv_I44 = fgyv%dim_2%EX
 1171.          $SC_fgyv_I46 = fgyv%dim_2%LB
 1171.          $SC_fgyv_I56 = fgyv%dim_3%SM
 1171.          $SC_fgyv_I47 = fgyv%dim_3%EX
 1171.          $SC_fgyv_I57 = fgyv%dim_3%LB
 1170.          $SC_fgyum_I58 = fgyum%dim_1%EX
 1170.          $SC_fgyum_I59 = fgyum%dim_1%LB
 1170.          $SC_fgyum_I61 = fgyum%dim_2%SM
 1170.          $SC_fgyum_I60 = fgyum%dim_2%EX
 1170.          $SC_fgyum_I62 = fgyum%dim_2%LB
 1170.          $SC_fgyum_I64 = fgyum%dim_3%SM
 1170.          $SC_fgyum_I63 = fgyum%dim_3%EX
 1170.          $SC_fgyum_I65 = fgyum%dim_3%LB
 1170.          $SC_fgyu_I66 = fgyu%dim_1%EX
 1170.          $SC_fgyu_I67 = fgyu%dim_1%LB
 1170.          $SC_fgyu_I69 = fgyu%dim_2%SM
 1170.          $SC_fgyu_I68 = fgyu%dim_2%EX
 1170.          $SC_fgyu_I70 = fgyu%dim_2%LB
 1170.          $SC_fgyu_I71 = fgyu%dim_3%EX
 1169.          $SC_ibmaxperjb_I0 = ibmaxperjb%dim_1%EX
 1169.          $SC_ibmaxperjb_I1 = ibmaxperjb%dim_1%LB
 1168.          if ( kmax > 0 ) then
 1167.             $I_L1167_108 = 0
 1167.             do
 1168.                $SCA_ibmaxperjb_I73 = (ibmaxperjb%base_addr)(jbfirst + $I_L1167_108, 0)
 1170.                $SC_fgyu_I88 = fgyu%dim_3%SM
 1170.                $SC_fgyu_I89 = fgyu%dim_3%LB
 1168.                $I_L1168_100 = 0
 1168.                do
 1169.                   if ( $SCA_ibmaxperjb_I73 > 0 ) then
 1169.                      $I_L1169_88 = 0
 1169. !dir$ ivdep
 1169. !dir$ loop_info (automatic) cache_nt( fgyvm, fgyum, fgyu, fgyv, fgtd )
 1169.                      do
 1172.                         (fgtd%base_addr)(1 + $I_L1169_88, 1 + $I_L1168_100, jbfirst + $I_L1167_108, 0) = (fgtd%base_addr)(1 + $I_L1169_88, 1 + $I_L1168_100, jbfirst + $I_L1167_108, 0) + 2.0 * (fgtdm%base_addr)(1 + $I_L1169_88, 1 + $I_L1168_100, jbfirst + $I_L1167_108, 0)
 1171.                         (fgyv%base_addr)(1 + $I_L1169_88, 1 + $I_L1168_100, jbfirst + $I_L1167_108, 0) = (fgyv%base_addr)(1 + $I_L1169_88, 1 + $I_L1168_100, jbfirst + $I_L1167_108, 0) + 2.0 * (fgyvm%base_addr)(1 + $I_L1169_88, 1 + $I_L1168_100, jbfirst + $I_L1167_108, 0)
 1170.                         (fgyu%base_addr)(1 + $I_L1169_88, 1 + $I_L1168_100, jbfirst + $I_L1167_108, 0) = (fgyu%base_addr)(1 + $I_L1169_88, 1 + $I_L1168_100, jbfirst + $I_L1167_108, 0) + 2.0 * (fgyum%base_addr)(1 + $I_L1169_88, 1 + $I_L1168_100, jbfirst + $I_L1167_108, 0)
 1174.                         $I_L1169_88 = 1 + $I_L1169_88
 1169.                         if ( $I_L1169_88 >= $SCA_ibmaxperjb_I73 ) exit
 1169.                      enddo
 1169.                   endif
 1175.                   $I_L1168_100 = 1 + $I_L1168_100
 1174.                   if ( $I_L1168_100 >= kmax ) exit
 1174.                enddo
 1176.                if ( $SCA_ibmaxperjb_I73 > 0 ) then
 1177.                   $SC_fgvdlnpm_I116 = fgvdlnpm%dim_1%EX
 1177.                   $SC_fgvdlnpm_I117 = fgvdlnpm%dim_1%LB
 1177.                   $SC_fgvdlnpm_I119 = fgvdlnpm%dim_2%SM
 1177.                   $SC_fgvdlnpm_I118 = fgvdlnpm%dim_2%EX
 1177.                   $SC_fgvdlnpm_I120 = fgvdlnpm%dim_2%LB
 1177.                   $SC_fgvdlnp_I121 = fgvdlnp%dim_1%EX
 1177.                   $SC_fgvdlnp_I122 = fgvdlnp%dim_1%LB
 1177.                   $SC_fgvdlnp_I124 = fgvdlnp%dim_2%SM
 1177.                   $SC_fgvdlnp_I123 = fgvdlnp%dim_2%EX
 1177.                   $SC_fgvdlnp_I125 = fgvdlnp%dim_2%LB
 1176.                   $I_L1176_90 = 0
 1176. !dir$ ivdep
 1176.                   do
 1177.                      (fgvdlnp%base_addr)(1 + $I_L1176_90, jbfirst + $I_L1167_108, 0) = (fgvdlnp%base_addr)(1 + $I_L1176_90, jbfirst + $I_L1167_108, 0) + 2.0 * (fgvdlnpm%base_addr)(1 + $I_L1176_90, jbfirst + $I_L1167_108, 0)
 1178.                      $I_L1176_90 = 1 + $I_L1176_90
 1176.                      if ( $I_L1176_90 >= $SCA_ibmaxperjb_I73 ) exit
 1176.                   enddo
 1176.                endif
 1179.                $I_L1167_108 = 1 + $I_L1167_108
 1178.                if ( $I_L1167_108 >= 1 + jblast + -jbfirst ) exit
 1178.             enddo
 1178.          else
 1167.             $I_L1167_104 = 0
 1167.             do
 1176.                $t_S11 = (ibmaxperjb%base_addr)(jbfirst + $I_L1167_104, 0)
 1176.                if ( $t_S11 > 0 ) then
 1177.                   $SC_fgvdlnpm_I116 = fgvdlnpm%dim_1%EX
 1177.                   $SC_fgvdlnpm_I117 = fgvdlnpm%dim_1%LB
 1177.                   $SC_fgvdlnpm_I119 = fgvdlnpm%dim_2%SM
 1177.                   $SC_fgvdlnpm_I118 = fgvdlnpm%dim_2%EX
 1177.                   $SC_fgvdlnpm_I120 = fgvdlnpm%dim_2%LB
 1177.                   $SC_fgvdlnp_I121 = fgvdlnp%dim_1%EX
 1177.                   $SC_fgvdlnp_I122 = fgvdlnp%dim_1%LB
 1177.                   $SC_fgvdlnp_I124 = fgvdlnp%dim_2%SM
 1177.                   $SC_fgvdlnp_I123 = fgvdlnp%dim_2%EX
 1177.                   $SC_fgvdlnp_I125 = fgvdlnp%dim_2%LB
 1176.                   $I_L1176_96 = 0
 1176. !dir$ ivdep
 1176.                   do
 1177.                      (fgvdlnp%base_addr)(1 + $I_L1176_96, jbfirst + $I_L1167_104, 0) = (fgvdlnp%base_addr)(1 + $I_L1176_96, jbfirst + $I_L1167_104, 0) + 2.0 * (fgvdlnpm%base_addr)(1 + $I_L1176_96, jbfirst + $I_L1167_104, 0)
 1178.                      $I_L1176_96 = 1 + $I_L1176_96
 1176.                      if ( $I_L1176_96 >= $t_S11 ) exit
 1176.                   enddo
 1176.                endif
 1179.                $I_L1167_104 = 1 + $I_L1167_104
 1178.                if ( $I_L1167_104 >= 1 + jblast + -jbfirst ) exit
 1178.             enddo
 1178.          endif
 1178.       endif
 1182.       return
 1182.       end
 1182.       
 1188.       
 1188.       subroutine timefilterstep1( fa, fb, jbfirst, jblast )
 1195.       if ( jblast + -jbfirst >= 0 ) then
 1200.          $SC_fgu_I34 = fgu%dim_1%EX
 1200.          $SC_fgu_I35 = fgu%dim_1%LB
 1200.          $SC_fgu_I37 = fgu%dim_2%SM
 1200.          $SC_fgu_I36 = fgu%dim_2%EX
 1200.          $SC_fgu_I38 = fgu%dim_2%LB
 1200.          $SC_fgu_I40 = fgu%dim_3%SM
 1200.          $SC_fgu_I39 = fgu%dim_3%EX
 1200.          $SC_fgu_I41 = fgu%dim_3%LB
 1200.          $SC_fgum_I42 = fgum%dim_1%EX
 1200.          $SC_fgum_I43 = fgum%dim_1%LB
 1200.          $SC_fgum_I45 = fgum%dim_2%SM
 1200.          $SC_fgum_I44 = fgum%dim_2%EX
 1200.          $SC_fgum_I46 = fgum%dim_2%LB
 1200.          $SC_fgum_I47 = fgum%dim_3%EX
 1199.          $SC_fgdiv_I18 = fgdiv%dim_1%EX
 1199.          $SC_fgdiv_I19 = fgdiv%dim_1%LB
 1199.          $SC_fgdiv_I21 = fgdiv%dim_2%SM
 1199.          $SC_fgdiv_I20 = fgdiv%dim_2%EX
 1199.          $SC_fgdiv_I22 = fgdiv%dim_2%LB
 1199.          $SC_fgdiv_I24 = fgdiv%dim_3%SM
 1199.          $SC_fgdiv_I23 = fgdiv%dim_3%EX
 1199.          $SC_fgdiv_I25 = fgdiv%dim_3%LB
 1199.          $SC_fgdivm_I26 = fgdivm%dim_1%EX
 1199.          $SC_fgdivm_I27 = fgdivm%dim_1%LB
 1199.          $SC_fgdivm_I29 = fgdivm%dim_2%SM
 1199.          $SC_fgdivm_I28 = fgdivm%dim_2%EX
 1199.          $SC_fgdivm_I30 = fgdivm%dim_2%LB
 1199.          $SC_fgdivm_I32 = fgdivm%dim_3%SM
 1199.          $SC_fgdivm_I31 = fgdivm%dim_3%EX
 1199.          $SC_fgdivm_I33 = fgdivm%dim_3%LB
 1198.          $SC_fgtmp_I2 = fgtmp%dim_1%EX
 1198.          $SC_fgtmp_I3 = fgtmp%dim_1%LB
 1198.          $SC_fgtmp_I5 = fgtmp%dim_2%SM
 1198.          $SC_fgtmp_I4 = fgtmp%dim_2%EX
 1198.          $SC_fgtmp_I6 = fgtmp%dim_2%LB
 1198.          $SC_fgtmp_I8 = fgtmp%dim_3%SM
 1198.          $SC_fgtmp_I7 = fgtmp%dim_3%EX
 1198.          $SC_fgtmp_I9 = fgtmp%dim_3%LB
 1198.          $SC_fgtmpm_I10 = fgtmpm%dim_1%EX
 1198.          $SC_fgtmpm_I11 = fgtmpm%dim_1%LB
 1198.          $SC_fgtmpm_I13 = fgtmpm%dim_2%SM
 1198.          $SC_fgtmpm_I12 = fgtmpm%dim_2%EX
 1198.          $SC_fgtmpm_I14 = fgtmpm%dim_2%LB
 1198.          $SC_fgtmpm_I16 = fgtmpm%dim_3%SM
 1198.          $SC_fgtmpm_I15 = fgtmpm%dim_3%EX
 1198.          $SC_fgtmpm_I17 = fgtmpm%dim_3%LB
 1197.          $SC_ibmaxperjb_I0 = ibmaxperjb%dim_1%EX
 1197.          $SC_ibmaxperjb_I1 = ibmaxperjb%dim_1%LB
 1196.          if ( kmax > 0 ) then
 1195.             $I_L1195_54 = 0
 1195.             do
 1196.                $SCA_ibmaxperjb_I48 = (ibmaxperjb%base_addr)(jbfirst + $I_L1195_54, 0)
 1203.                $SC_fgtlam_I83 = fgtlam%dim_1%EX
 1203.                $SC_fgtlam_I84 = fgtlam%dim_1%LB
 1203.                $SC_fgtlam_I86 = fgtlam%dim_2%SM
 1203.                $SC_fgtlam_I85 = fgtlam%dim_2%EX
 1203.                $SC_fgtlam_I87 = fgtlam%dim_2%LB
 1203.                $SC_fgtlam_I89 = fgtlam%dim_3%SM
 1203.                $SC_fgtlam_I88 = fgtlam%dim_3%EX
 1203.                $SC_fgtlam_I90 = fgtlam%dim_3%LB
 1203.                $SC_fgtlamm_I91 = fgtlamm%dim_1%EX
 1203.                $SC_fgtlamm_I92 = fgtlamm%dim_1%LB
 1203.                $SC_fgtlamm_I94 = fgtlamm%dim_2%SM
 1203.                $SC_fgtlamm_I93 = fgtlamm%dim_2%EX
 1203.                $SC_fgtlamm_I95 = fgtlamm%dim_2%LB
 1203.                $SC_fgtlamm_I96 = fgtlamm%dim_3%EX
 1202.                $SC_fgq_I67 = fgq%dim_1%EX
 1202.                $SC_fgq_I68 = fgq%dim_1%LB
 1202.                $SC_fgq_I70 = fgq%dim_2%SM
 1202.                $SC_fgq_I69 = fgq%dim_2%EX
 1202.                $SC_fgq_I71 = fgq%dim_2%LB
 1202.                $SC_fgq_I73 = fgq%dim_3%SM
 1202.                $SC_fgq_I72 = fgq%dim_3%EX
 1202.                $SC_fgq_I74 = fgq%dim_3%LB
 1202.                $SC_fgqm_I75 = fgqm%dim_1%EX
 1202.                $SC_fgqm_I76 = fgqm%dim_1%LB
 1202.                $SC_fgqm_I78 = fgqm%dim_2%SM
 1202.                $SC_fgqm_I77 = fgqm%dim_2%EX
 1202.                $SC_fgqm_I79 = fgqm%dim_2%LB
 1202.                $SC_fgqm_I81 = fgqm%dim_3%SM
 1202.                $SC_fgqm_I80 = fgqm%dim_3%EX
 1202.                $SC_fgqm_I82 = fgqm%dim_3%LB
 1201.                $SC_fgv_I51 = fgv%dim_1%EX
 1201.                $SC_fgv_I52 = fgv%dim_1%LB
 1201.                $SC_fgv_I54 = fgv%dim_2%SM
 1201.                $SC_fgv_I53 = fgv%dim_2%EX
 1201.                $SC_fgv_I55 = fgv%dim_2%LB
 1201.                $SC_fgv_I57 = fgv%dim_3%SM
 1201.                $SC_fgv_I56 = fgv%dim_3%EX
 1201.                $SC_fgv_I58 = fgv%dim_3%LB
 1201.                $SC_fgvm_I59 = fgvm%dim_1%EX
 1201.                $SC_fgvm_I60 = fgvm%dim_1%LB
 1201.                $SC_fgvm_I62 = fgvm%dim_2%SM
 1201.                $SC_fgvm_I61 = fgvm%dim_2%EX
 1201.                $SC_fgvm_I63 = fgvm%dim_2%LB
 1201.                $SC_fgvm_I65 = fgvm%dim_3%SM
 1201.                $SC_fgvm_I64 = fgvm%dim_3%EX
 1201.                $SC_fgvm_I66 = fgvm%dim_3%LB
 1200.                $SC_fgum_I49 = fgum%dim_3%SM
 1200.                $SC_fgum_I50 = fgum%dim_3%LB
 1196.                $I_L1196_50 = 0
 1196.                do
 1197.                   if ( $SCA_ibmaxperjb_I48 > 0 ) then
 1204.                      $SC_fgtphi_I99 = fgtphi%dim_1%EX
 1204.                      $SC_fgtphi_I100 = fgtphi%dim_1%LB
 1204.                      $SC_fgtphi_I102 = fgtphi%dim_2%SM
 1204.                      $SC_fgtphi_I101 = fgtphi%dim_2%EX
 1204.                      $SC_fgtphi_I103 = fgtphi%dim_2%LB
 1204.                      $SC_fgtphi_I105 = fgtphi%dim_3%SM
 1204.                      $SC_fgtphi_I104 = fgtphi%dim_3%EX
 1204.                      $SC_fgtphi_I106 = fgtphi%dim_3%LB
 1204.                      $SC_fgtphim_I107 = fgtphim%dim_1%EX
 1204.                      $SC_fgtphim_I108 = fgtphim%dim_1%LB
 1204.                      $SC_fgtphim_I110 = fgtphim%dim_2%SM
 1204.                      $SC_fgtphim_I109 = fgtphim%dim_2%EX
 1204.                      $SC_fgtphim_I111 = fgtphim%dim_2%LB
 1204.                      $SC_fgtphim_I113 = fgtphim%dim_3%SM
 1204.                      $SC_fgtphim_I112 = fgtphim%dim_3%EX
 1204.                      $SC_fgtphim_I114 = fgtphim%dim_3%LB
 1203.                      $SC_fgtlamm_I97 = fgtlamm%dim_3%SM
 1203.                      $SC_fgtlamm_I98 = fgtlamm%dim_3%LB
 1197.                      $I_L1197_44 = 0
 1197. !dir$ ivdep
 1197. !dir$ loop_info (automatic) cache_nt( fgv, fgu, fgtphi, fgtmp, fgtlam, fgq, fgdiv, fgtphim, fgtlamm, fgqm, fgvm, fgum, fgdivm, fgtmpm )
 1197.                      do
 1198.                         (fgtmpm%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0) = fa * (fgtmp%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0) + fb * (fgtmpm%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0)
 1199.                         (fgdivm%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0) = fa * (fgdiv%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0) + fb * (fgdivm%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0)
 1200.                         (fgum%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0) = fa * (fgu%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0) + fb * (fgum%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0)
 1201.                         (fgvm%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0) = fa * (fgv%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0) + fb * (fgvm%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0)
 1202.                         (fgqm%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0) = fa * (fgq%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0) + fb * (fgqm%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0)
 1203.                         (fgtlamm%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0) = fa * (fgtlam%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0) + fb * (fgtlamm%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0)
 1204.                         (fgtphim%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0) = fa * (fgtphi%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0) + fb * (fgtphim%base_addr)(1 + $I_L1197_44, 1 + $I_L1196_50, jbfirst + $I_L1195_54, 0)
 1205.                         $I_L1197_44 = 1 + $I_L1197_44
 1197.                         if ( $I_L1197_44 >= $SCA_ibmaxperjb_I48 ) exit
 1197.                      enddo
 1197.                   endif
 1206.                   $I_L1196_50 = 1 + $I_L1196_50
 1205.                   if ( $I_L1196_50 >= kmax ) exit
 1205.                enddo
 1207.                if ( $SCA_ibmaxperjb_I48 > 0 ) then
 1210.                   $SC_fgpphi_I135 = fgpphi%dim_1%EX
 1210.                   $SC_fgpphi_I136 = fgpphi%dim_1%LB
 1210.                   $SC_fgpphi_I138 = fgpphi%dim_2%SM
 1210.                   $SC_fgpphi_I137 = fgpphi%dim_2%EX
 1210.                   $SC_fgpphi_I139 = fgpphi%dim_2%LB
 1210.                   $SC_fgpphim_I140 = fgpphim%dim_1%EX
 1210.                   $SC_fgpphim_I141 = fgpphim%dim_1%LB
 1210.                   $SC_fgpphim_I143 = fgpphim%dim_2%SM
 1210.                   $SC_fgpphim_I142 = fgpphim%dim_2%EX
 1210.                   $SC_fgpphim_I144 = fgpphim%dim_2%LB
 1209.                   $SC_fgplam_I125 = fgplam%dim_1%EX
 1209.                   $SC_fgplam_I126 = fgplam%dim_1%LB
 1209.                   $SC_fgplam_I128 = fgplam%dim_2%SM
 1209.                   $SC_fgplam_I127 = fgplam%dim_2%EX
 1209.                   $SC_fgplam_I129 = fgplam%dim_2%LB
 1209.                   $SC_fgplamm_I130 = fgplamm%dim_1%EX
 1209.                   $SC_fgplamm_I131 = fgplamm%dim_1%LB
 1209.                   $SC_fgplamm_I133 = fgplamm%dim_2%SM
 1209.                   $SC_fgplamm_I132 = fgplamm%dim_2%EX
 1209.                   $SC_fgplamm_I134 = fgplamm%dim_2%LB
 1208.                   $SC_fglnps_I115 = fglnps%dim_1%EX
 1208.                   $SC_fglnps_I116 = fglnps%dim_1%LB
 1208.                   $SC_fglnps_I118 = fglnps%dim_2%SM
 1208.                   $SC_fglnps_I117 = fglnps%dim_2%EX
 1208.                   $SC_fglnps_I119 = fglnps%dim_2%LB
 1208.                   $SC_fglnpm_I120 = fglnpm%dim_1%EX
 1208.                   $SC_fglnpm_I121 = fglnpm%dim_1%LB
 1208.                   $SC_fglnpm_I123 = fglnpm%dim_2%SM
 1208.                   $SC_fglnpm_I122 = fglnpm%dim_2%EX
 1208.                   $SC_fglnpm_I124 = fglnpm%dim_2%LB
 1207.                   $I_L1207_46 = 0
 1207. !dir$ ivdep
 1207.                   do
 1208.                      (fglnpm%base_addr)(1 + $I_L1207_46, jbfirst + $I_L1195_54, 0) = fa * (fglnps%base_addr)(1 + $I_L1207_46, jbfirst + $I_L1195_54, 0) + fb * (fglnpm%base_addr)(1 + $I_L1207_46, jbfirst + $I_L1195_54, 0)
 1209.                      (fgplamm%base_addr)(1 + $I_L1207_46, jbfirst + $I_L1195_54, 0) = fa * (fgplam%base_addr)(1 + $I_L1207_46, jbfirst + $I_L1195_54, 0) + fb * (fgplamm%base_addr)(1 + $I_L1207_46, jbfirst + $I_L1195_54, 0)
 1210.                      (fgpphim%base_addr)(1 + $I_L1207_46, jbfirst + $I_L1195_54, 0) = fa * (fgpphi%base_addr)(1 + $I_L1207_46, jbfirst + $I_L1195_54, 0) + fb * (fgpphim%base_addr)(1 + $I_L1207_46, jbfirst + $I_L1195_54, 0)
 1211.                      $I_L1207_46 = 1 + $I_L1207_46
 1207.                      if ( $I_L1207_46 >= $SCA_ibmaxperjb_I48 ) exit
 1207.                   enddo
 1207.                endif
 1212.                $I_L1195_54 = 1 + $I_L1195_54
 1211.                if ( $I_L1195_54 >= 1 + jblast + -jbfirst ) exit
 1211.             enddo
 1211.          else
 1195.             $I_L1195_52 = 0
 1195.             do
 1207.                $t_S4 = (ibmaxperjb%base_addr)(jbfirst + $I_L1195_52, 0)
 1207.                if ( $t_S4 > 0 ) then
 1210.                   $SC_fgpphi_I135 = fgpphi%dim_1%EX
 1210.                   $SC_fgpphi_I136 = fgpphi%dim_1%LB
 1210.                   $SC_fgpphi_I138 = fgpphi%dim_2%SM
 1210.                   $SC_fgpphi_I137 = fgpphi%dim_2%EX
 1210.                   $SC_fgpphi_I139 = fgpphi%dim_2%LB
 1210.                   $SC_fgpphim_I140 = fgpphim%dim_1%EX
 1210.                   $SC_fgpphim_I141 = fgpphim%dim_1%LB
 1210.                   $SC_fgpphim_I143 = fgpphim%dim_2%SM
 1210.                   $SC_fgpphim_I142 = fgpphim%dim_2%EX
 1210.                   $SC_fgpphim_I144 = fgpphim%dim_2%LB
 1209.                   $SC_fgplam_I125 = fgplam%dim_1%EX
 1209.                   $SC_fgplam_I126 = fgplam%dim_1%LB
 1209.                   $SC_fgplam_I128 = fgplam%dim_2%SM
 1209.                   $SC_fgplam_I127 = fgplam%dim_2%EX
 1209.                   $SC_fgplam_I129 = fgplam%dim_2%LB
 1209.                   $SC_fgplamm_I130 = fgplamm%dim_1%EX
 1209.                   $SC_fgplamm_I131 = fgplamm%dim_1%LB
 1209.                   $SC_fgplamm_I133 = fgplamm%dim_2%SM
 1209.                   $SC_fgplamm_I132 = fgplamm%dim_2%EX
 1209.                   $SC_fgplamm_I134 = fgplamm%dim_2%LB
 1208.                   $SC_fglnps_I115 = fglnps%dim_1%EX
 1208.                   $SC_fglnps_I116 = fglnps%dim_1%LB
 1208.                   $SC_fglnps_I118 = fglnps%dim_2%SM
 1208.                   $SC_fglnps_I117 = fglnps%dim_2%EX
 1208.                   $SC_fglnps_I119 = fglnps%dim_2%LB
 1208.                   $SC_fglnpm_I120 = fglnpm%dim_1%EX
 1208.                   $SC_fglnpm_I121 = fglnpm%dim_1%LB
 1208.                   $SC_fglnpm_I123 = fglnpm%dim_2%SM
 1208.                   $SC_fglnpm_I122 = fglnpm%dim_2%EX
 1208.                   $SC_fglnpm_I124 = fglnpm%dim_2%LB
 1207.                   $I_L1207_48 = 0
 1207. !dir$ ivdep
 1207.                   do
 1208.                      (fglnpm%base_addr)(1 + $I_L1207_48, jbfirst + $I_L1195_52, 0) = fa * (fglnps%base_addr)(1 + $I_L1207_48, jbfirst + $I_L1195_52, 0) + fb * (fglnpm%base_addr)(1 + $I_L1207_48, jbfirst + $I_L1195_52, 0)
 1209.                      (fgplamm%base_addr)(1 + $I_L1207_48, jbfirst + $I_L1195_52, 0) = fa * (fgplam%base_addr)(1 + $I_L1207_48, jbfirst + $I_L1195_52, 0) + fb * (fgplamm%base_addr)(1 + $I_L1207_48, jbfirst + $I_L1195_52, 0)
 1210.                      (fgpphim%base_addr)(1 + $I_L1207_48, jbfirst + $I_L1195_52, 0) = fa * (fgpphi%base_addr)(1 + $I_L1207_48, jbfirst + $I_L1195_52, 0) + fb * (fgpphim%base_addr)(1 + $I_L1207_48, jbfirst + $I_L1195_52, 0)
 1211.                      $I_L1207_48 = 1 + $I_L1207_48
 1207.                      if ( $I_L1207_48 >= $t_S4 ) exit
 1207.                   enddo
 1207.                endif
 1212.                $I_L1195_52 = 1 + $I_L1195_52
 1211.                if ( $I_L1195_52 >= 1 + jblast + -jbfirst ) exit
 1211.             enddo
 1211.          endif
 1211.       endif
 1213.       return
 1213.       end
 1213.       
 1219.       
 1219.       subroutine timefilterstep2( fb1, jbfirst, jblast )
 1225.       if ( jblast + -jbfirst >= 0 ) then
 1230.          $SC_fgu_I34 = fgu%dim_1%EX
 1230.          $SC_fgu_I35 = fgu%dim_1%LB
 1230.          $SC_fgu_I37 = fgu%dim_2%SM
 1230.          $SC_fgu_I36 = fgu%dim_2%EX
 1230.          $SC_fgu_I38 = fgu%dim_2%LB
 1230.          $SC_fgu_I40 = fgu%dim_3%SM
 1230.          $SC_fgu_I39 = fgu%dim_3%EX
 1230.          $SC_fgu_I41 = fgu%dim_3%LB
 1230.          $SC_fgum_I42 = fgum%dim_1%EX
 1230.          $SC_fgum_I43 = fgum%dim_1%LB
 1230.          $SC_fgum_I45 = fgum%dim_2%SM
 1230.          $SC_fgum_I44 = fgum%dim_2%EX
 1230.          $SC_fgum_I46 = fgum%dim_2%LB
 1230.          $SC_fgum_I47 = fgum%dim_3%EX
 1229.          $SC_fgdiv_I18 = fgdiv%dim_1%EX
 1229.          $SC_fgdiv_I19 = fgdiv%dim_1%LB
 1229.          $SC_fgdiv_I21 = fgdiv%dim_2%SM
 1229.          $SC_fgdiv_I20 = fgdiv%dim_2%EX
 1229.          $SC_fgdiv_I22 = fgdiv%dim_2%LB
 1229.          $SC_fgdiv_I24 = fgdiv%dim_3%SM
 1229.          $SC_fgdiv_I23 = fgdiv%dim_3%EX
 1229.          $SC_fgdiv_I25 = fgdiv%dim_3%LB
 1229.          $SC_fgdivm_I26 = fgdivm%dim_1%EX
 1229.          $SC_fgdivm_I27 = fgdivm%dim_1%LB
 1229.          $SC_fgdivm_I29 = fgdivm%dim_2%SM
 1229.          $SC_fgdivm_I28 = fgdivm%dim_2%EX
 1229.          $SC_fgdivm_I30 = fgdivm%dim_2%LB
 1229.          $SC_fgdivm_I32 = fgdivm%dim_3%SM
 1229.          $SC_fgdivm_I31 = fgdivm%dim_3%EX
 1229.          $SC_fgdivm_I33 = fgdivm%dim_3%LB
 1228.          $SC_fgtmp_I2 = fgtmp%dim_1%EX
 1228.          $SC_fgtmp_I3 = fgtmp%dim_1%LB
 1228.          $SC_fgtmp_I5 = fgtmp%dim_2%SM
 1228.          $SC_fgtmp_I4 = fgtmp%dim_2%EX
 1228.          $SC_fgtmp_I6 = fgtmp%dim_2%LB
 1228.          $SC_fgtmp_I8 = fgtmp%dim_3%SM
 1228.          $SC_fgtmp_I7 = fgtmp%dim_3%EX
 1228.          $SC_fgtmp_I9 = fgtmp%dim_3%LB
 1228.          $SC_fgtmpm_I10 = fgtmpm%dim_1%EX
 1228.          $SC_fgtmpm_I11 = fgtmpm%dim_1%LB
 1228.          $SC_fgtmpm_I13 = fgtmpm%dim_2%SM
 1228.          $SC_fgtmpm_I12 = fgtmpm%dim_2%EX
 1228.          $SC_fgtmpm_I14 = fgtmpm%dim_2%LB
 1228.          $SC_fgtmpm_I16 = fgtmpm%dim_3%SM
 1228.          $SC_fgtmpm_I15 = fgtmpm%dim_3%EX
 1228.          $SC_fgtmpm_I17 = fgtmpm%dim_3%LB
 1227.          $SC_ibmaxperjb_I0 = ibmaxperjb%dim_1%EX
 1227.          $SC_ibmaxperjb_I1 = ibmaxperjb%dim_1%LB
 1226.          if ( kmax > 0 ) then
 1225.             $I_L1225_54 = 0
 1225.             do
 1226.                $SCA_ibmaxperjb_I48 = (ibmaxperjb%base_addr)(jbfirst + $I_L1225_54, 0)
 1233.                $SC_fgtlam_I83 = fgtlam%dim_1%EX
 1233.                $SC_fgtlam_I84 = fgtlam%dim_1%LB
 1233.                $SC_fgtlam_I86 = fgtlam%dim_2%SM
 1233.                $SC_fgtlam_I85 = fgtlam%dim_2%EX
 1233.                $SC_fgtlam_I87 = fgtlam%dim_2%LB
 1233.                $SC_fgtlam_I89 = fgtlam%dim_3%SM
 1233.                $SC_fgtlam_I88 = fgtlam%dim_3%EX
 1233.                $SC_fgtlam_I90 = fgtlam%dim_3%LB
 1233.                $SC_fgtlamm_I91 = fgtlamm%dim_1%EX
 1233.                $SC_fgtlamm_I92 = fgtlamm%dim_1%LB
 1233.                $SC_fgtlamm_I94 = fgtlamm%dim_2%SM
 1233.                $SC_fgtlamm_I93 = fgtlamm%dim_2%EX
 1233.                $SC_fgtlamm_I95 = fgtlamm%dim_2%LB
 1233.                $SC_fgtlamm_I96 = fgtlamm%dim_3%EX
 1232.                $SC_fgq_I67 = fgq%dim_1%EX
 1232.                $SC_fgq_I68 = fgq%dim_1%LB
 1232.                $SC_fgq_I70 = fgq%dim_2%SM
 1232.                $SC_fgq_I69 = fgq%dim_2%EX
 1232.                $SC_fgq_I71 = fgq%dim_2%LB
 1232.                $SC_fgq_I73 = fgq%dim_3%SM
 1232.                $SC_fgq_I72 = fgq%dim_3%EX
 1232.                $SC_fgq_I74 = fgq%dim_3%LB
 1232.                $SC_fgqm_I75 = fgqm%dim_1%EX
 1232.                $SC_fgqm_I76 = fgqm%dim_1%LB
 1232.                $SC_fgqm_I78 = fgqm%dim_2%SM
 1232.                $SC_fgqm_I77 = fgqm%dim_2%EX
 1232.                $SC_fgqm_I79 = fgqm%dim_2%LB
 1232.                $SC_fgqm_I81 = fgqm%dim_3%SM
 1232.                $SC_fgqm_I80 = fgqm%dim_3%EX
 1232.                $SC_fgqm_I82 = fgqm%dim_3%LB
 1231.                $SC_fgv_I51 = fgv%dim_1%EX
 1231.                $SC_fgv_I52 = fgv%dim_1%LB
 1231.                $SC_fgv_I54 = fgv%dim_2%SM
 1231.                $SC_fgv_I53 = fgv%dim_2%EX
 1231.                $SC_fgv_I55 = fgv%dim_2%LB
 1231.                $SC_fgv_I57 = fgv%dim_3%SM
 1231.                $SC_fgv_I56 = fgv%dim_3%EX
 1231.                $SC_fgv_I58 = fgv%dim_3%LB
 1231.                $SC_fgvm_I59 = fgvm%dim_1%EX
 1231.                $SC_fgvm_I60 = fgvm%dim_1%LB
 1231.                $SC_fgvm_I62 = fgvm%dim_2%SM
 1231.                $SC_fgvm_I61 = fgvm%dim_2%EX
 1231.                $SC_fgvm_I63 = fgvm%dim_2%LB
 1231.                $SC_fgvm_I65 = fgvm%dim_3%SM
 1231.                $SC_fgvm_I64 = fgvm%dim_3%EX
 1231.                $SC_fgvm_I66 = fgvm%dim_3%LB
 1230.                $SC_fgum_I49 = fgum%dim_3%SM
 1230.                $SC_fgum_I50 = fgum%dim_3%LB
 1226.                $I_L1226_50 = 0
 1226.                do
 1227.                   if ( $SCA_ibmaxperjb_I48 > 0 ) then
 1234.                      $SC_fgtphi_I99 = fgtphi%dim_1%EX
 1234.                      $SC_fgtphi_I100 = fgtphi%dim_1%LB
 1234.                      $SC_fgtphi_I102 = fgtphi%dim_2%SM
 1234.                      $SC_fgtphi_I101 = fgtphi%dim_2%EX
 1234.                      $SC_fgtphi_I103 = fgtphi%dim_2%LB
 1234.                      $SC_fgtphi_I105 = fgtphi%dim_3%SM
 1234.                      $SC_fgtphi_I104 = fgtphi%dim_3%EX
 1234.                      $SC_fgtphi_I106 = fgtphi%dim_3%LB
 1234.                      $SC_fgtphim_I107 = fgtphim%dim_1%EX
 1234.                      $SC_fgtphim_I108 = fgtphim%dim_1%LB
 1234.                      $SC_fgtphim_I110 = fgtphim%dim_2%SM
 1234.                      $SC_fgtphim_I109 = fgtphim%dim_2%EX
 1234.                      $SC_fgtphim_I111 = fgtphim%dim_2%LB
 1234.                      $SC_fgtphim_I113 = fgtphim%dim_3%SM
 1234.                      $SC_fgtphim_I112 = fgtphim%dim_3%EX
 1234.                      $SC_fgtphim_I114 = fgtphim%dim_3%LB
 1233.                      $SC_fgtlamm_I97 = fgtlamm%dim_3%SM
 1233.                      $SC_fgtlamm_I98 = fgtlamm%dim_3%LB
 1227.                      $I_L1227_44 = 0
 1227. !dir$ ivdep
 1227. !dir$ loop_info (automatic) cache_nt( fgv, fgu, fgtphi, fgtmp, fgtlam, fgq, fgdiv, fgtphim, fgtlamm, fgqm, fgvm, fgum, fgdivm, fgtmpm )
 1227.                      do
 1228.                         (fgtmpm%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0) = (fgtmpm%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0) + fb1 * (fgtmp%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0)
 1229.                         (fgdivm%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0) = (fgdivm%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0) + fb1 * (fgdiv%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0)
 1230.                         (fgum%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0) = (fgum%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0) + fb1 * (fgu%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0)
 1231.                         (fgvm%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0) = (fgvm%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0) + fb1 * (fgv%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0)
 1232.                         (fgqm%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0) = (fgqm%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0) + fb1 * (fgq%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0)
 1233.                         (fgtlamm%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0) = (fgtlamm%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0) + fb1 * (fgtlam%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0)
 1234.                         (fgtphim%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0) = (fgtphim%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0) + fb1 * (fgtphi%base_addr)(1 + $I_L1227_44, 1 + $I_L1226_50, jbfirst + $I_L1225_54, 0)
 1235.                         $I_L1227_44 = 1 + $I_L1227_44
 1227.                         if ( $I_L1227_44 >= $SCA_ibmaxperjb_I48 ) exit
 1227.                      enddo
 1227.                   endif
 1236.                   $I_L1226_50 = 1 + $I_L1226_50
 1235.                   if ( $I_L1226_50 >= kmax ) exit
 1235.                enddo
 1237.                if ( $SCA_ibmaxperjb_I48 > 0 ) then
 1240.                   $SC_fgpphi_I135 = fgpphi%dim_1%EX
 1240.                   $SC_fgpphi_I136 = fgpphi%dim_1%LB
 1240.                   $SC_fgpphi_I138 = fgpphi%dim_2%SM
 1240.                   $SC_fgpphi_I137 = fgpphi%dim_2%EX
 1240.                   $SC_fgpphi_I139 = fgpphi%dim_2%LB
 1240.                   $SC_fgpphim_I140 = fgpphim%dim_1%EX
 1240.                   $SC_fgpphim_I141 = fgpphim%dim_1%LB
 1240.                   $SC_fgpphim_I143 = fgpphim%dim_2%SM
 1240.                   $SC_fgpphim_I142 = fgpphim%dim_2%EX
 1240.                   $SC_fgpphim_I144 = fgpphim%dim_2%LB
 1239.                   $SC_fgplam_I125 = fgplam%dim_1%EX
 1239.                   $SC_fgplam_I126 = fgplam%dim_1%LB
 1239.                   $SC_fgplam_I128 = fgplam%dim_2%SM
 1239.                   $SC_fgplam_I127 = fgplam%dim_2%EX
 1239.                   $SC_fgplam_I129 = fgplam%dim_2%LB
 1239.                   $SC_fgplamm_I130 = fgplamm%dim_1%EX
 1239.                   $SC_fgplamm_I131 = fgplamm%dim_1%LB
 1239.                   $SC_fgplamm_I133 = fgplamm%dim_2%SM
 1239.                   $SC_fgplamm_I132 = fgplamm%dim_2%EX
 1239.                   $SC_fgplamm_I134 = fgplamm%dim_2%LB
 1238.                   $SC_fglnps_I115 = fglnps%dim_1%EX
 1238.                   $SC_fglnps_I116 = fglnps%dim_1%LB
 1238.                   $SC_fglnps_I118 = fglnps%dim_2%SM
 1238.                   $SC_fglnps_I117 = fglnps%dim_2%EX
 1238.                   $SC_fglnps_I119 = fglnps%dim_2%LB
 1238.                   $SC_fglnpm_I120 = fglnpm%dim_1%EX
 1238.                   $SC_fglnpm_I121 = fglnpm%dim_1%LB
 1238.                   $SC_fglnpm_I123 = fglnpm%dim_2%SM
 1238.                   $SC_fglnpm_I122 = fglnpm%dim_2%EX
 1238.                   $SC_fglnpm_I124 = fglnpm%dim_2%LB
 1237.                   $I_L1237_46 = 0
 1237. !dir$ ivdep
 1237.                   do
 1238.                      (fglnpm%base_addr)(1 + $I_L1237_46, jbfirst + $I_L1225_54, 0) = (fglnpm%base_addr)(1 + $I_L1237_46, jbfirst + $I_L1225_54, 0) + fb1 * (fglnps%base_addr)(1 + $I_L1237_46, jbfirst + $I_L1225_54, 0)
 1239.                      (fgplamm%base_addr)(1 + $I_L1237_46, jbfirst + $I_L1225_54, 0) = (fgplamm%base_addr)(1 + $I_L1237_46, jbfirst + $I_L1225_54, 0) + fb1 * (fgplam%base_addr)(1 + $I_L1237_46, jbfirst + $I_L1225_54, 0)
 1240.                      (fgpphim%base_addr)(1 + $I_L1237_46, jbfirst + $I_L1225_54, 0) = (fgpphim%base_addr)(1 + $I_L1237_46, jbfirst + $I_L1225_54, 0) + fb1 * (fgpphi%base_addr)(1 + $I_L1237_46, jbfirst + $I_L1225_54, 0)
 1241.                      $I_L1237_46 = 1 + $I_L1237_46
 1237.                      if ( $I_L1237_46 >= $SCA_ibmaxperjb_I48 ) exit
 1237.                   enddo
 1237.                endif
 1242.                $I_L1225_54 = 1 + $I_L1225_54
 1241.                if ( $I_L1225_54 >= 1 + jblast + -jbfirst ) exit
 1241.             enddo
 1241.          else
 1225.             $I_L1225_52 = 0
 1225.             do
 1237.                $t_S4 = (ibmaxperjb%base_addr)(jbfirst + $I_L1225_52, 0)
 1237.                if ( $t_S4 > 0 ) then
 1240.                   $SC_fgpphi_I135 = fgpphi%dim_1%EX
 1240.                   $SC_fgpphi_I136 = fgpphi%dim_1%LB
 1240.                   $SC_fgpphi_I138 = fgpphi%dim_2%SM
 1240.                   $SC_fgpphi_I137 = fgpphi%dim_2%EX
 1240.                   $SC_fgpphi_I139 = fgpphi%dim_2%LB
 1240.                   $SC_fgpphim_I140 = fgpphim%dim_1%EX
 1240.                   $SC_fgpphim_I141 = fgpphim%dim_1%LB
 1240.                   $SC_fgpphim_I143 = fgpphim%dim_2%SM
 1240.                   $SC_fgpphim_I142 = fgpphim%dim_2%EX
 1240.                   $SC_fgpphim_I144 = fgpphim%dim_2%LB
 1239.                   $SC_fgplam_I125 = fgplam%dim_1%EX
 1239.                   $SC_fgplam_I126 = fgplam%dim_1%LB
 1239.                   $SC_fgplam_I128 = fgplam%dim_2%SM
 1239.                   $SC_fgplam_I127 = fgplam%dim_2%EX
 1239.                   $SC_fgplam_I129 = fgplam%dim_2%LB
 1239.                   $SC_fgplamm_I130 = fgplamm%dim_1%EX
 1239.                   $SC_fgplamm_I131 = fgplamm%dim_1%LB
 1239.                   $SC_fgplamm_I133 = fgplamm%dim_2%SM
 1239.                   $SC_fgplamm_I132 = fgplamm%dim_2%EX
 1239.                   $SC_fgplamm_I134 = fgplamm%dim_2%LB
 1238.                   $SC_fglnps_I115 = fglnps%dim_1%EX
 1238.                   $SC_fglnps_I116 = fglnps%dim_1%LB
 1238.                   $SC_fglnps_I118 = fglnps%dim_2%SM
 1238.                   $SC_fglnps_I117 = fglnps%dim_2%EX
 1238.                   $SC_fglnps_I119 = fglnps%dim_2%LB
 1238.                   $SC_fglnpm_I120 = fglnpm%dim_1%EX
 1238.                   $SC_fglnpm_I121 = fglnpm%dim_1%LB
 1238.                   $SC_fglnpm_I123 = fglnpm%dim_2%SM
 1238.                   $SC_fglnpm_I122 = fglnpm%dim_2%EX
 1238.                   $SC_fglnpm_I124 = fglnpm%dim_2%LB
 1237.                   $I_L1237_48 = 0
 1237. !dir$ ivdep
 1237.                   do
 1238.                      (fglnpm%base_addr)(1 + $I_L1237_48, jbfirst + $I_L1225_52, 0) = (fglnpm%base_addr)(1 + $I_L1237_48, jbfirst + $I_L1225_52, 0) + fb1 * (fglnps%base_addr)(1 + $I_L1237_48, jbfirst + $I_L1225_52, 0)
 1239.                      (fgplamm%base_addr)(1 + $I_L1237_48, jbfirst + $I_L1225_52, 0) = (fgplamm%base_addr)(1 + $I_L1237_48, jbfirst + $I_L1225_52, 0) + fb1 * (fgplam%base_addr)(1 + $I_L1237_48, jbfirst + $I_L1225_52, 0)
 1240.                      (fgpphim%base_addr)(1 + $I_L1237_48, jbfirst + $I_L1225_52, 0) = (fgpphim%base_addr)(1 + $I_L1237_48, jbfirst + $I_L1225_52, 0) + fb1 * (fgpphi%base_addr)(1 + $I_L1237_48, jbfirst + $I_L1225_52, 0)
 1241.                      $I_L1237_48 = 1 + $I_L1237_48
 1237.                      if ( $I_L1237_48 >= $t_S4 ) exit
 1237.                   enddo
 1237.                endif
 1242.                $I_L1225_52 = 1 + $I_L1225_52
 1241.                if ( $I_L1225_52 >= 1 + jblast + -jbfirst ) exit
 1241.             enddo
 1241.          endif
 1241.       endif
 1243.       return
 1243.       end
 1243.       
 1363.       
 1363.       subroutine globconservation( jfirst, jlast, jbfirst, jblast, inew, init )
 1246.       t$30 = ( -1 + maxnodes )
 1246.       t$134 = maxnodes
 1256.       t$135 = _zla( 0, maxnodes )
 1256.       t$138 = 4 * _zla( 0, maxnodes )
 1246.       t$34 = ibmax
 1246.       t$35 = jbmax
 1246.       t$33 = nscalars
 1259.       t$139 = _zla( 0, ibmax )
 1246.       t$140 = _zla( 0, ibmax )
 1259.       t$141 = _zla( 0, jbmax )
 1246.       t$142 = _zla( 0, ibmax ) * _zla( 0, jbmax )
 1259.       t$143 = _zla( 0, nscalars )
 1246.       t$144 = _zla( 0, ibmax ) * _zla( 0, jbmax ) * _zla( 0, nscalars )
 1259.       t$145 = 8 * ( 7 + 4 * _zla( 0, maxnodes ) ) / 8
 1259.       t$147 = t$145 + 8 * _zla( 0, ibmax ) * _zla( 0, jbmax ) * _zla( 0, nscalars )
 1246.       t$31 = imax
 1246.       t$32 = myjmax_d
 1258.       t$148 = _zla( 0, imax )
 1246.       t$149 = _zla( 0, imax )
 1258.       t$150 = _zla( 0, myjmax_d )
 1246.       t$151 = _zla( 0, imax ) * _zla( 0, myjmax_d )
 1246.       t$152 = _zla( 0, nscalars ) * _zla( 0, imax ) * _zla( 0, myjmax_d )
 1258.       t$153 = 8 * ( 7 + t$145 + 8 * _zla( 0, ibmax ) * _zla( 0, jbmax ) * _zla( 0, nscalars ) ) / 8
 1258.       t$155 = t$153 + 8 * _zla( 0, nscalars ) * _zla( 0, imax ) * _zla( 0, myjmax_d )
 1246.       t$156 = _zla( 0, imax ) * _zla( 0, myjmax_d )
 1257.       t$157 = 8 * ( 7 + t$153 + 8 * _zla( 0, nscalars ) * _zla( 0, imax ) * _zla( 0, myjmax_d ) ) / 8
 1257.       t$159 = t$157 + 8 * _zla( 0, imax ) * _zla( 0, myjmax_d )
 1246.       t$136 = int( _alloc( t$157 + 8 * _zla( 0, imax ) * _zla( 0, myjmax_d ) ), 8 )
 1256.       t$137 = t$136
 1259.       t$146 = t$145 + t$136
 1258.       t$154 = t$153 + t$136
 1257.       t$158 = t$157 + t$136
 1265.       $snt_T0 = _mt_single( 1, _mt_rw_list(...) )
 1266.       call collect_gauss( (fgpsp%base_addr)(fgpsp%dim_1%LB, fgpsp%dim_2%LB, 0), fps(1, 1), 1 )
 1267.       $snt_T0 = _mt_endsingle( 1, _mt_rw_list(...), $snt_T0 )
 1268.       _mt_barrier( 2, _mt_rw_list(...) )
 1269.       j = myfirstlat_diag
 1269.       if ( mylastlat_diag + -myfirstlat_diag >= 0 ) then
 1275.          $SC_cel_area_I2 = cel_area%dim_1%EX
 1275.          $SC_cel_area_I3 = cel_area%dim_1%LB
 1275.          $SC_massconsrv_I4 = massconsrv%dim_1%EX
 1275.          $SC_massconsrv_I5 = massconsrv%dim_1%LB
 1272.          $SC_imaxperj_I0 = imaxperj%dim_1%EX
 1272.          $SC_imaxperj_I1 = imaxperj%dim_1%LB
 1269.          $I_L1269_364 = 0
 1269.          do
 1270.             s = 0.0
 1272.             $t_S1 = (imaxperj%base_addr)(myfirstlat_diag + $I_L1269_364, 0)
 1272.             i = 1
 1272.             if ( $t_S1 > 0 ) then
 1272.                $I_L1272_328 = 0
 1272. !dir$ ivdep
 1272.                do
 1273.                   s = s + fps(1 + $I_L1272_328, 1 + $I_L1269_364)
 1274.                   $I_L1272_328 = 1 + $I_L1272_328
 1272.                   if ( $I_L1272_328 >= $t_S1 ) exit
 1272.                enddo
 1274.                i = ( 1 + $t_S1 )
 1274.             endif
 1275.             (massconsrv%base_addr)(myfirstlat_diag + $I_L1269_364, 0) = s * (cel_area%base_addr)(myfirstlat_diag + $I_L1269_364, 0)
 1276.             $I_L1269_364 = 1 + $I_L1269_364
 1274.             if ( $I_L1269_364 >= 1 + mylastlat_diag + -myfirstlat_diag ) exit
 1274.          enddo
 1276.          j = 1 + mylastlat_diag
 1276.       endif
 1277.       _mt_barrier( 3, _mt_rw_list(...) )
 1278.       $snt_T1 = _mt_single( 4, _mt_rw_list(...) )
 1279.       displ(0) = 0
 1280.       t$535 = -1 + maxnodes
 1280.       i = 1
 1280.       if ( -1 + maxnodes > 0 ) then
 1280.          t$536 = ( -1 + maxnodes )
 1281.          $SC_nlatsinproc_I6 = nlatsinproc_d%dim_1%EX
 1281.          $SC_nlatsinproc_I7 = nlatsinproc_d%dim_1%LB
 1280.          $displ_WR0_R0 = 0
 1280.          $I_L1280_330 = 0
 1280. !dir$ unroll 4
 1280.          do
 1281.             $displ_WR0_R0 = $displ_WR0_R0 + (nlatsinproc_d%base_addr)($I_L1280_330, 0)
 1281.             displ(1 + $I_L1280_330) = $displ_WR0_R0
 1282.             $I_L1280_330 = 1 + $I_L1280_330
 1280.             if ( $I_L1280_330 >= -1 + maxnodes ) exit
 1280.          enddo
 1282.          t$537 = -1 + maxnodes
 1282.          i = maxnodes
 1282.       endif
 1283.       call mpi_allgatherv( (massconsrv%base_addr)(myfirstlat_diag, 0), myjmax_d, 1275070495, (massconsrv%base_addr)(massconsrv%dim_1%LB, 0), (nlatsinproc_d%base_addr)(0, 0), displ(0), 1275070495, 1140850688, ierr )
 1286.       totmass = 0.0
 1287.       t$538 = jmax
 1287.       j = 1
 1287.       if ( jmax > 0 ) then
 1287.          t$539 = jmax
 1288.          $SC_massconsrv_I4 = massconsrv%dim_1%EX
 1288.          $SC_massconsrv_I5 = massconsrv%dim_1%LB
 1287.          $I_L1287_332 = 0
 1287. !dir$ ivdep
 1287.          do
 1288.             totmass = totmass + (massconsrv%base_addr)(1 + $I_L1287_332, 0)
 1289.             $I_L1287_332 = 1 + $I_L1287_332
 1287.             if ( $I_L1287_332 >= jmax ) exit
 1287.          enddo
 1289.          t$540 = jmax
 1289.          j = ( 1 + jmax )
 1289.       endif
 1290.       $snt_T1 = _mt_endsingle( 4, _mt_rw_list(...), $snt_T1 )
 1291.       if ( init /= 1 ) then
 1292.          s = ( (total_mass%base_addr)(0, 0) * 1.0/totmass )
 1293.          j = jbfirst
 1293.          if ( jblast + -jbfirst >= 0 ) then
 1294.             $SC_ibmaxperjb_I8 = ibmaxperjb%dim_1%EX
 1294.             $SC_ibmaxperjb_I9 = ibmaxperjb%dim_1%LB
 1295.             $SC_fgpsp_I10 = fgpsp%dim_1%EX
 1295.             $SC_fgpsp_I11 = fgpsp%dim_1%LB
 1295.             $SC_fgpsp_I13 = fgpsp%dim_2%SM
 1295.             $SC_fgpsp_I12 = fgpsp%dim_2%EX
 1295.             $SC_fgpsp_I14 = fgpsp%dim_2%LB
 1293.             $I_L1293_366 = 0
 1293.             do
 1294.                $t_S4 = (ibmaxperjb%base_addr)(jbfirst + $I_L1293_366, 0)
 1294.                i = 1
 1294.                if ( $t_S4 > 0 ) then
 1294.                   $I_L1294_334 = 0
 1294. !dir$ ivdep
 1294.                   do
 1295.                      (fgpsp%base_addr)(1 + $I_L1294_334, jbfirst + $I_L1293_366, 0) = s * (fgpsp%base_addr)(1 + $I_L1294_334, jbfirst + $I_L1293_366, 0)
 1296.                      $I_L1294_334 = 1 + $I_L1294_334
 1294.                      if ( $I_L1294_334 >= $t_S4 ) exit
 1294.                   enddo
 1296.                   i = ( 1 + $t_S4 )
 1296.                endif
 1297.                $I_L1293_366 = 1 + $I_L1293_366
 1296.                if ( $I_L1293_366 >= 1 + jblast + -jbfirst ) exit
 1296.             enddo
 1297.             j = 1 + jblast
 1297.          endif
 1297.       else
 1299.          (total_mass%base_addr)(0, 0) = totmass
 1299.       endif
 1302.       if ( nscalars == 0 ) then
 1246.          _free( t$136 )
 1246.       else
 1306.          if ( nscalars > 0 ) then
 1313.             $SC_del_I43 = del%dim_1%EX
 1313.             $SC_del_I44 = del%dim_1%LB
 1313.             $SC_fgpass_scalars_I29 = fgpass_scalars%dim_1%EX
 1313.             $SC_fgpass_scalars_I30 = fgpass_scalars%dim_1%LB
 1313.             $SC_fgpass_scalars_I32 = fgpass_scalars%dim_2%SM
 1313.             $SC_fgpass_scalars_I31 = fgpass_scalars%dim_2%EX
 1313.             $SC_fgpass_scalars_I33 = fgpass_scalars%dim_2%LB
 1313.             $SC_fgpass_scalars_I35 = fgpass_scalars%dim_3%SM
 1313.             $SC_fgpass_scalars_I34 = fgpass_scalars%dim_3%EX
 1313.             $SC_fgpass_scalars_I36 = fgpass_scalars%dim_3%LB
 1313.             $SC_fgpass_scalars_I38 = fgpass_scalars%dim_4%SM
 1313.             $SC_fgpass_scalars_I37 = fgpass_scalars%dim_4%EX
 1313.             $SC_fgpass_scalars_I39 = fgpass_scalars%dim_4%LB
 1313.             $SC_fgpass_scalars_I41 = fgpass_scalars%dim_5%SM
 1313.             $SC_fgpass_scalars_I40 = fgpass_scalars%dim_5%EX
 1313.             $SC_fgpass_scalars_I42 = fgpass_scalars%dim_5%LB
 1310.             $SC_jbperij_I24 = jbperij%dim_1%EX
 1310.             $SC_jbperij_I25 = jbperij%dim_1%LB
 1310.             $SC_jbperij_I27 = jbperij%dim_2%SM
 1310.             $SC_jbperij_I26 = jbperij%dim_2%EX
 1310.             $SC_jbperij_I28 = jbperij%dim_2%LB
 1309.             $SC_ibperij_I19 = ibperij%dim_1%EX
 1309.             $SC_ibperij_I20 = ibperij%dim_1%LB
 1309.             $SC_ibperij_I22 = ibperij%dim_2%SM
 1309.             $SC_ibperij_I21 = ibperij%dim_2%EX
 1309.             $SC_ibperij_I23 = ibperij%dim_2%LB
 1308.             $SC_mylastlon_I17 = mylastlon%dim_1%EX
 1308.             $SC_mylastlon_I18 = mylastlon%dim_1%LB
 1308.             $SC_myfirstlon_I15 = myfirstlon%dim_1%EX
 1308.             $SC_myfirstlon_I16 = myfirstlon%dim_1%LB
 1315.             $SC_fgpsp_I10 = fgpsp%dim_1%EX
 1315.             $SC_fgpsp_I11 = fgpsp%dim_1%LB
 1315.             $SC_fgpsp_I13 = fgpsp%dim_2%SM
 1315.             $SC_fgpsp_I12 = fgpsp%dim_2%EX
 1315.             $SC_fgpsp_I14 = fgpsp%dim_2%LB
 1307.             if ( jlast + -jfirst < 0 ) then
 1307.                j = jfirst
 1307.             else if ( kmax > 0 ) then
 1306.                $I_L1306_406 = 0
 1306.                do
 1307.                   $I_L1307_404 = 0
 1307.                   do
 1306.                      $I_L1306_397 = 0
 1306. !dir$ shortloop16
 1306. !dir$ blocking_size( 8, 8 )
 1306.                      do
 1307.                         $I_L1307_382 = 0
 1307. !dir$ shortloop16
 1307. !dir$ blocking_size( 8, 8 )
 1307.                         do
 1308.                            $t_S7 = (myfirstlon%base_addr)(jfirst + $I_L1307_382 + 8 * $I_L1307_404, 0)
 1308.                            $t_S8 = (mylastlon%base_addr)(jfirst + $I_L1307_382 + 8 * $I_L1307_404, 0)
 1308.                            i = $t_S7
 1308.                            if ( $t_S8 + -$t_S7 >= 0 ) then
 1308.                               $I_L1308_368 = 0
 1308. !dir$ ivdep
 1308.                               do
 1309.                                  ib = (ibperij%base_addr)($t_S7 + $I_L1308_368, jfirst + $I_L1307_382 + 8 * $I_L1307_404, 0)
 1310.                                  jb = (jbperij%base_addr)($t_S7 + $I_L1308_368, jfirst + $I_L1307_382 + 8 * $I_L1307_404, 0)
 1311.                                  s = 0.0
 1312.                                  $I_L1312_336 = 0
 1312. !dir$ unroll 4
 1312.                                  do
 1313.                                     s = s + (del%base_addr)(1 + $I_L1312_336, 0) * (fgpass_scalars%base_addr)(ib, 1 + $I_L1312_336, jb, 1 + $I_L1306_397 + 8 * $I_L1306_406, inew, 0)
 1314.                                     $I_L1312_336 = 1 + $I_L1312_336
 1312.                                     if ( $I_L1312_336 >= kmax ) exit
 1312.                                  enddo
 1315.                                  fg(ib, jb, 1 + $I_L1306_397 + 8 * $I_L1306_406) = s * (fgpsp%base_addr)(ib, jb, 0)
 1316.                                  $I_L1308_368 = 1 + $I_L1308_368
 1314.                                  if ( $I_L1308_368 >= 1 + $t_S8 + -$t_S7 ) exit
 1314.                               enddo
 1316.                               i = 1 + $t_S8
 1316.                            endif
 1307.                            $I_L1307_382 = 1 + $I_L1307_382
 1316.                            if ( $I_L1307_382 >= min( 1 + jlast + -jfirst, 8 + 8 * $I_L1307_404 ) + -8 * $I_L1307_404 ) exit
 1316.                         enddo
 1306.                         $I_L1306_397 = 1 + $I_L1306_397
 1306.                         if ( $I_L1306_397 >= min( nscalars, 8 + 8 * $I_L1306_406 ) + -8 * $I_L1306_406 ) exit
 1306.                      enddo
 1307.                      $I_L1307_404 = 1 + $I_L1307_404
 1317.                      if ( $I_L1307_404 >= 1 + max( 0, -1 + _rsh( 8 + jlast + -jfirst, 3 ) ) ) exit
 1317.                   enddo
 1306.                   $I_L1306_406 = 1 + $I_L1306_406
 1306.                   if ( $I_L1306_406 >= 1 + max( 0, -1 + _rsh( 7 + nscalars, 3 ) ) ) exit
 1306.                enddo
 1317.                j = 1 + jlast
 1317.             else
 1306.                $I_L1306_389 = 0
 1306.                do
 1307.                   $I_L1307_374 = 0
 1307.                   do
 1308.                      $t_S7 = (myfirstlon%base_addr)(jfirst + $I_L1307_374, 0)
 1308.                      $t_S8 = (mylastlon%base_addr)(jfirst + $I_L1307_374, 0)
 1308.                      i = $t_S7
 1308.                      if ( $t_S8 + -$t_S7 >= 0 ) then
 1308.                         $I_L1308_346 = 0
 1308. !dir$ ivdep
 1308. !dir$ loop_info (automatic) cache_nt( jbperij, ibperij )
 1308.                         do
 1309.                            ib = (ibperij%base_addr)($t_S7 + $I_L1308_346, jfirst + $I_L1307_374, 0)
 1310.                            jb = (jbperij%base_addr)($t_S7 + $I_L1308_346, jfirst + $I_L1307_374, 0)
 1315.                            fg(ib, jb, 1 + $I_L1306_389) = 0.0
 1316.                            $I_L1308_346 = 1 + $I_L1308_346
 1314.                            if ( $I_L1308_346 >= 1 + $t_S8 + -$t_S7 ) exit
 1314.                         enddo
 1316.                         i = 1 + $t_S8
 1316.                      endif
 1317.                      $I_L1307_374 = 1 + $I_L1307_374
 1316.                      if ( $I_L1307_374 >= 1 + jlast + -jfirst ) exit
 1316.                   enddo
 1318.                   $I_L1306_389 = 1 + $I_L1306_389
 1317.                   if ( $I_L1306_389 >= nscalars ) exit
 1317.                enddo
 1317.                j = 1 + jlast
 1317.             endif
 1317.          endif
 1319.          $snt_T2 = _mt_single( 5, _mt_rw_list(...) )
 1320.          call collect_gauss( fg(1, 1, 1), fgs(1, 1, 1), nscalars )
 1321.          $snt_T2 = _mt_endsingle( 5, _mt_rw_list(...), $snt_T2 )
 1322.          ns = 1
 1322.          if ( nscalars > 0 ) then
 1328.             $SC_fconsrv_I45 = fconsrv%dim_1%EX
 1328.             $SC_fconsrv_I46 = fconsrv%dim_1%LB
 1328.             $SC_fconsrv_I48 = fconsrv%dim_2%SM
 1328.             $SC_fconsrv_I47 = fconsrv%dim_2%EX
 1328.             $SC_fconsrv_I49 = fconsrv%dim_2%LB
 1328.             $SC_cel_area_I2 = cel_area%dim_1%EX
 1328.             $SC_cel_area_I3 = cel_area%dim_1%LB
 1325.             $SC_imaxperj_I0 = imaxperj%dim_1%EX
 1325.             $SC_imaxperj_I1 = imaxperj%dim_1%LB
 1323.             if ( mylastlat_diag + -myfirstlat_diag >= 0 ) then
 1322.                $I_L1322_385 = 0
 1322.                do
 1323.                   $I_L1323_370 = 0
 1323.                   do
 1324.                      s = 0.0
 1325.                      $t_S13 = (imaxperj%base_addr)(myfirstlat_diag + $I_L1323_370, 0)
 1325.                      i = 1
 1325.                      if ( $t_S13 > 0 ) then
 1325.                         $I_L1325_338 = 0
 1325. !dir$ ivdep
 1325.                         do
 1326.                            s = s + fgs(1 + $I_L1325_338, myfirstlat_diag + $I_L1323_370, 1 + $I_L1322_385)
 1327.                            $I_L1325_338 = 1 + $I_L1325_338
 1325.                            if ( $I_L1325_338 >= $t_S13 ) exit
 1325.                         enddo
 1327.                         i = ( 1 + $t_S13 )
 1327.                      endif
 1328.                      (fconsrv%base_addr)(1 + $I_L1322_385, myfirstlat_diag + $I_L1323_370, 0) = s * (cel_area%base_addr)(myfirstlat_diag + $I_L1323_370, 0)
 1329.                      $I_L1323_370 = 1 + $I_L1323_370
 1327.                      if ( $I_L1323_370 >= 1 + mylastlat_diag + -myfirstlat_diag ) exit
 1327.                   enddo
 1330.                   $I_L1322_385 = 1 + $I_L1322_385
 1329.                   if ( $I_L1322_385 >= nscalars ) exit
 1329.                enddo
 1329.                j = 1 + mylastlat_diag
 1329.             else
 1323.                j = myfirstlat_diag
 1323.             endif
 1330.             ns = ( 1 + nscalars )
 1330.          endif
 1331.          _mt_barrier( 6, _mt_rw_list(...) )
 1332.          $snt_T3 = _mt_single( 7, _mt_rw_list(...) )
 1333.          displ(0) = 0
 1334.          t$572 = -1 + maxnodes
 1334.          i = 1
 1334.          if ( -1 + maxnodes > 0 ) then
 1334.             t$573 = ( -1 + maxnodes )
 1335.             $SC_nlatsinproc_I6 = nlatsinproc_d%dim_1%EX
 1335.             $SC_nlatsinproc_I7 = nlatsinproc_d%dim_1%LB
 1334.             $displ_WR0_R1 = 0
 1334.             $I_L1334_340 = 0
 1334. !dir$ unroll 4
 1334.             do
 1335.                $displ_WR0_R1 = $displ_WR0_R1 + nscalars * (nlatsinproc_d%base_addr)($I_L1334_340, 0)
 1335.                displ(1 + $I_L1334_340) = $displ_WR0_R1
 1336.                $I_L1334_340 = 1 + $I_L1334_340
 1334.                if ( $I_L1334_340 >= -1 + maxnodes ) exit
 1334.             enddo
 1336.             t$574 = -1 + maxnodes
 1336.             i = maxnodes
 1336.          endif
 1337.          t$575 = nscalars * myjmax_d
 1338.          t$576 = nscalars * (nlatsinproc_d%base_addr)(0, 0)
 1337.          call mpi_allgatherv( (fconsrv%base_addr)(1, myfirstlat_diag, 0), t$575, 1275070495, (fconsrv%base_addr)(fconsrv%dim_1%LB, fconsrv%dim_2%LB, 0), t$576, displ(0), 1275070495, 1140850688, ierr )
 1340.          t$577 = nscalars
 1340.          ns = 1
 1340.          if ( nscalars > 0 ) then
 1340.             t$578 = nscalars
 1341.             $SC_totmas_I50 = totmas%dim_1%EX
 1341.             $SC_totmas_I51 = totmas%dim_1%LB
 1343.             $SC_fconsrv_I45 = fconsrv%dim_1%EX
 1343.             $SC_fconsrv_I46 = fconsrv%dim_1%LB
 1343.             $SC_fconsrv_I48 = fconsrv%dim_2%SM
 1343.             $SC_fconsrv_I47 = fconsrv%dim_2%EX
 1343.             $SC_fconsrv_I49 = fconsrv%dim_2%LB
 1345.             $SC_total_mass_I52 = total_mass%dim_1%EX
 1345.             $SC_total_mass_I53 = total_mass%dim_1%LB
 1342.             if ( jmax > 0 ) then
 1345.                if ( init /= 1 ) then
 1340.                   $I_L1340_352 = 0
 1340. !dir$ ivdep
 1340.                   do
 1341.                      (totmas%base_addr)(1 + $I_L1340_352, 0) = 0.0
 1346.                      $I_L1340_352 = 1 + $I_L1340_352
 1345.                      if ( $I_L1340_352 >= nscalars ) exit
 1345.                   enddo
 1342.                   $I_L1342_400 = 0
 1342.                   do
 1340.                      $I_L1340_391 = 0
 1340.                      do
 1342.                         $I_L1342_376 = 0
 1342. !dir$ shortloop16
 1342. !dir$ blocking_size( 4, 4 )
 1342.                         do
 1340.                            $I_L1340_354 = 0
 1340. !dir$ ivdep
 1340. !dir$ blocking_size( 256, 256 )
 1340.                            do
 1343.                               (totmas%base_addr)(1 + $I_L1340_354 + 256 * $I_L1340_391, 0) = (totmas%base_addr)(1 + $I_L1340_354 + 256 * $I_L1340_391, 0) + (fconsrv%base_addr)(1 + $I_L1340_354 + 256 * $I_L1340_391, 1 + $I_L1342_376 + 4 * $I_L1342_400, 0)
 1340.                               $I_L1340_354 = 1 + $I_L1340_354
 1342.                               if ( $I_L1340_354 >= min( nscalars, 256 + 256 * $I_L1340_391 ) + -256 * $I_L1340_391 ) exit
 1342.                            enddo
 1342.                            $I_L1342_376 = 1 + $I_L1342_376
 1342.                            if ( $I_L1342_376 >= min( jmax, 4 + 4 * $I_L1342_400 ) + -4 * $I_L1342_400 ) exit
 1342.                         enddo
 1340.                         $I_L1340_391 = 1 + $I_L1340_391
 1345.                         if ( $I_L1340_391 >= 1 + max( 0, -1 + _rsh( 255 + nscalars, 8 ) ) ) exit
 1345.                      enddo
 1342.                      $I_L1342_400 = 1 + $I_L1342_400
 1342.                      if ( $I_L1342_400 >= 1 + max( 0, -1 + _rsh( 3 + jmax, 2 ) ) ) exit
 1342.                   enddo
 1340.                   $I_L1340_357 = 0
 1340. !dir$ ivdep
 1340. !dir$ loop_info (automatic) cache_nt( totmas )
 1340.                   do
 1345.                      (totmas%base_addr)(1 + $I_L1340_357, 0) = ( (total_mass%base_addr)(1 + $I_L1340_357, 0) * 1.0/(totmas%base_addr)(1 + $I_L1340_357, 0) )
 1346.                      $I_L1340_357 = 1 + $I_L1340_357
 1345.                      if ( $I_L1340_357 >= nscalars ) exit
 1345.                   enddo
 1342.                   t$580 = jmax
 1342.                   t$581 = jmax
 1344.                   t$582 = jmax
 1344.                   j = ( 1 + jmax )
 1344.                else
 1340.                   $I_L1340_359 = 0
 1340. !dir$ ivdep
 1340.                   do
 1341.                      (totmas%base_addr)(1 + $I_L1340_359, 0) = 0.0
 1346.                      $I_L1340_359 = 1 + $I_L1340_359
 1345.                      if ( $I_L1340_359 >= nscalars ) exit
 1345.                   enddo
 1342.                   $I_L1342_402 = 0
 1342.                   do
 1340.                      $I_L1340_393 = 0
 1340.                      do
 1342.                         $I_L1342_379 = 0
 1342. !dir$ shortloop16
 1342. !dir$ blocking_size( 4, 4 )
 1342.                         do
 1340.                            $I_L1340_361 = 0
 1340. !dir$ ivdep
 1340. !dir$ blocking_size( 256, 256 )
 1340.                            do
 1343.                               (totmas%base_addr)(1 + $I_L1340_361 + 256 * $I_L1340_393, 0) = (totmas%base_addr)(1 + $I_L1340_361 + 256 * $I_L1340_393, 0) + (fconsrv%base_addr)(1 + $I_L1340_361 + 256 * $I_L1340_393, 1 + $I_L1342_379 + 4 * $I_L1342_402, 0)
 1340.                               $I_L1340_361 = 1 + $I_L1340_361
 1342.                               if ( $I_L1340_361 >= min( nscalars, 256 + 256 * $I_L1340_393 ) + -256 * $I_L1340_393 ) exit
 1342.                            enddo
 1342.                            $I_L1342_379 = 1 + $I_L1342_379
 1342.                            if ( $I_L1342_379 >= min( jmax, 4 + 4 * $I_L1342_402 ) + -4 * $I_L1342_402 ) exit
 1342.                         enddo
 1340.                         $I_L1340_393 = 1 + $I_L1340_393
 1345.                         if ( $I_L1340_393 >= 1 + max( 0, -1 + _rsh( 255 + nscalars, 8 ) ) ) exit
 1345.                      enddo
 1342.                      $I_L1342_402 = 1 + $I_L1342_402
 1342.                      if ( $I_L1342_402 >= 1 + max( 0, -1 + _rsh( 3 + jmax, 2 ) ) ) exit
 1342.                   enddo
 1342.                   t$580 = jmax
 1342.                   t$581 = jmax
 1344.                   t$582 = jmax
 1344.                   j = ( 1 + jmax )
 1344.                endif
 1344.             else if ( init /= 1 ) then
 1340.                $I_L1340_344 = 0
 1340. !dir$ ivdep
 1340. !dir$ loop_info (automatic) cache_nt( totmas )
 1340.                do
 1345.                   $totmas_WR0_R2 = ( (total_mass%base_addr)(1 + $I_L1340_344, 0) * 1.0/0.0 )
 1345.                   (totmas%base_addr)(1 + $I_L1340_344, 0) = $totmas_WR0_R2
 1346.                   $I_L1340_344 = 1 + $I_L1340_344
 1345.                   if ( $I_L1340_344 >= nscalars ) exit
 1345.                enddo
 1342.                t$580 = jmax
 1342.                j = 1
 1342.             else
 1340.                $I_L1340_348 = 0
 1340. !dir$ ivdep
 1340. !dir$ loop_info (automatic) cache_nt( totmas )
 1340.                do
 1341.                   (totmas%base_addr)(1 + $I_L1340_348, 0) = 0.0
 1346.                   $I_L1340_348 = 1 + $I_L1340_348
 1345.                   if ( $I_L1340_348 >= nscalars ) exit
 1345.                enddo
 1342.                t$580 = jmax
 1342.                j = 1
 1342.             endif
 1346.             t$579 = nscalars
 1346.             ns = ( 1 + nscalars )
 1346.          endif
 1347.          $snt_T3 = _mt_endsingle( 7, _mt_rw_list(...), $snt_T3 )
 1348.          if ( init /= 1 ) then
 1349.             if ( nscalars > 0 ) then
 1352.                $SC_totmas_I50 = totmas%dim_1%EX
 1352.                $SC_totmas_I51 = totmas%dim_1%LB
 1352.                $SC_fgpass_scalars_I29 = fgpass_scalars%dim_1%EX
 1352.                $SC_fgpass_scalars_I30 = fgpass_scalars%dim_1%LB
 1352.                $SC_fgpass_scalars_I32 = fgpass_scalars%dim_2%SM
 1352.                $SC_fgpass_scalars_I31 = fgpass_scalars%dim_2%EX
 1352.                $SC_fgpass_scalars_I33 = fgpass_scalars%dim_2%LB
 1352.                $SC_fgpass_scalars_I35 = fgpass_scalars%dim_3%SM
 1352.                $SC_fgpass_scalars_I34 = fgpass_scalars%dim_3%EX
 1352.                $SC_fgpass_scalars_I36 = fgpass_scalars%dim_3%LB
 1352.                $SC_fgpass_scalars_I38 = fgpass_scalars%dim_4%SM
 1352.                $SC_fgpass_scalars_I37 = fgpass_scalars%dim_4%EX
 1352.                $SC_fgpass_scalars_I39 = fgpass_scalars%dim_4%LB
 1352.                $SC_fgpass_scalars_I41 = fgpass_scalars%dim_5%SM
 1352.                $SC_fgpass_scalars_I40 = fgpass_scalars%dim_5%EX
 1352.                $SC_fgpass_scalars_I42 = fgpass_scalars%dim_5%LB
 1351.                $SC_ibmaxperjb_I8 = ibmaxperjb%dim_1%EX
 1351.                $SC_ibmaxperjb_I9 = ibmaxperjb%dim_1%LB
 1350.                if ( jblast + -jbfirst >= 0 ) then
 1352.                   if ( $SC_fgpass_scalars_I31 > 0 ) then
 1350.                      $I_L1350_395 = 0
 1350. !dir$ loop_info (automatic) cache_nt( ibmaxperjb )
 1350.                      do
 1349.                         $SCA_ibmaxperjb_I54 = (ibmaxperjb%base_addr)(jbfirst + $I_L1350_395, 0)
 1351.                         if ( $SCA_ibmaxperjb_I54 > 0 ) then
 1349.                            $I_L1349_387 = 0
 1349.                            do
 1352.                               $SC_totmas_I56 = (totmas%base_addr)(1 + $I_L1349_387, 0)
 1351.                               $I_L1351_372 = 0
 1351.                               do
 1352.                                  $F_A33 = $SC_fgpass_scalars_I31
 1352.                                  $SC_totmas_I55 = $SC_totmas_I56
 1352.                                  $I_L1352_350 = 0
 1352. !dir$ ivdep
 1352.                                  do
 1352.                                     (fgpass_scalars%base_addr)(1 + $I_L1351_372, $SC_fgpass_scalars_I33 + $I_L1352_350, jbfirst + $I_L1350_395, 1 + $I_L1349_387, inew, 0) = $SC_totmas_I55 * (fgpass_scalars%base_addr)(1 + $I_L1351_372, $SC_fgpass_scalars_I33 + $I_L1352_350, jbfirst + $I_L1350_395, 1 + $I_L1349_387, inew, 0)
 1352.                                     $I_L1352_350 = 1 + $I_L1352_350
 1352.                                     if ( $I_L1352_350 >= $F_A33 ) exit
 1352.                                  enddo
 1354.                                  $I_L1351_372 = 1 + $I_L1351_372
 1351.                                  if ( $I_L1351_372 >= $SCA_ibmaxperjb_I54 ) exit
 1351.                               enddo
 1356.                               $I_L1349_387 = 1 + $I_L1349_387
 1354.                               if ( $I_L1349_387 >= nscalars ) exit
 1354.                            enddo
 1354.                         endif
 1355.                         $I_L1350_395 = 1 + $I_L1350_395
 1355.                         if ( $I_L1350_395 >= 1 + jblast + -jbfirst ) exit
 1355.                      enddo
 1355.                   endif
 1355.                endif
 1355.             endif
 1357.          else if ( nscalars > 0 ) then
 1359.             $SC_totmas_I50 = totmas%dim_1%EX
 1359.             $SC_totmas_I51 = totmas%dim_1%LB
 1359.             $SC_total_mass_I52 = total_mass%dim_1%EX
 1359.             $SC_total_mass_I53 = total_mass%dim_1%LB
 1358.             $I_L1358_342 = 0
 1358. !dir$ ivdep
 1358.             do
 1359.                (total_mass%base_addr)(1 + $I_L1358_342, 0) = (totmas%base_addr)(1 + $I_L1358_342, 0)
 1360.                $I_L1358_342 = 1 + $I_L1358_342
 1358.                if ( $I_L1358_342 >= nscalars ) exit
 1358.             enddo
 1358.          endif
 1246.          _free( t$136 )
 1246.       endif
 1363.       return
 1363.       end
 1363.       
 1365.       
 1365.       subroutine scalardiffusion( iblim, jb, inew, kv, deltat )
 1365.       t$36 = iblim
 1365.       t$37 = kmax
 1372.       t$160 = _zla( 0, iblim )
 1365.       t$161 = _zla( 0, iblim )
 1372.       t$162 = _zla( 0, kmax )
 1365.       t$163 = _zla( 0, iblim ) * _zla( 0, kmax )
 1365.       t$38 = ibmax
 1375.       t$164 = _zla( 0, ibmax )
 1365.       t$165 = _zla( 0, ibmax )
 1365.       t$166 = _zla( 0, kmax ) * _zla( 0, ibmax )
 1375.       t$169 = 8 * _zla( 0, kmax ) * _zla( 0, ibmax )
 1375.       t$170 = 8 * ( 7 + 8 * _zla( 0, kmax ) * _zla( 0, ibmax ) ) / 8
 1375.       t$172 = t$170 + 8 * _zla( 0, kmax ) * _zla( 0, ibmax )
 1375.       t$173 = 8 * ( 7 + t$170 + 8 * _zla( 0, kmax ) * _zla( 0, ibmax ) ) / 8
 1375.       t$175 = t$173 + 8 * _zla( 0, kmax ) * _zla( 0, ibmax )
 1365.       t$167 = int( _alloc( t$173 + 8 * _zla( 0, kmax ) * _zla( 0, ibmax ) ), 8 )
 1375.       t$168 = t$167
 1375.       t$171 = t$170 + t$167
 1375.       t$174 = t$173 + t$167
 1381.       if ( iblim > 0 ) then
 1381.          $I_L1381_104 = 0
 1381. !dir$ ivdep
 1381.          do
 1382.             b(1 + $I_L1381_104, 1) = 0.0
 1383.             $I_L1381_104 = 1 + $I_L1381_104
 1381.             if ( $I_L1381_104 >= iblim ) exit
 1381.          enddo
 1381.       endif
 1384.       $dt2_S2 = -2.0 * deltat
 1385.       if ( -1 + kmax > 0 ) then
 1386.          $SC_delcl_I0 = delcl%dim_1%EX
 1386.          $SC_delcl_I1 = delcl%dim_1%LB
 1386.          $SC_del_I2 = del%dim_1%EX
 1386.          $SC_del_I3 = del%dim_1%LB
 1388.          if ( iblim > 0 ) then
 1385.             $I_L1385_121 = 0
 1385.             do
 1386.                $s1_S4 = ( $dt2_S2 * 1.0/( (delcl%base_addr)(1 + $I_L1385_121, 0) * (del%base_addr)(1 + $I_L1385_121, 0) ) )
 1387.                $s2_S5 = ( $dt2_S2 * 1.0/( (del%base_addr)(1 + $I_L1385_121, 0) * (delcl%base_addr)(2 + $I_L1385_121, 0) ) )
 1388.                $I_L1388_106 = 0
 1388. !dir$ ivdep
 1388.                do
 1389.                   $c_WR0_R0 = $s1_S4 * kv(1 + $I_L1388_106, 1 + $I_L1385_121)
 1389.                   c(1 + $I_L1388_106, 1 + $I_L1385_121) = $c_WR0_R0
 1390.                   b(1 + $I_L1388_106, 2 + $I_L1385_121) = $s2_S5 * kv(1 + $I_L1388_106, 1 + $I_L1385_121)
 1391.                   a(1 + $I_L1388_106, 1 + $I_L1385_121) = 1.0 + -$c_WR0_R0 + -b(1 + $I_L1388_106, 1 + $I_L1385_121)
 1392.                   $I_L1388_106 = 1 + $I_L1388_106
 1388.                   if ( $I_L1388_106 >= iblim ) exit
 1388.                enddo
 1393.                $I_L1385_121 = 1 + $I_L1385_121
 1392.                if ( $I_L1385_121 >= -1 + kmax ) exit
 1392.             enddo
 1392.          endif
 1392.       endif
 1394.       if ( iblim > 0 ) then
 1394.          $I_L1394_108 = 0
 1394. !dir$ ivdep
 1394.          do
 1395.             a(1 + $I_L1394_108, kmax) = 1.0 + -b(1 + $I_L1394_108, kmax)
 1396.             $I_L1394_108 = 1 + $I_L1394_108
 1394.             if ( $I_L1394_108 >= iblim ) exit
 1394.          enddo
 1394.       endif
 1400.       if ( -2 + kmax >= 0 ) then
 1407.          $SC_fgpass_scalars_I4 = fgpass_scalars%dim_1%EX
 1407.          $SC_fgpass_scalars_I5 = fgpass_scalars%dim_1%LB
 1407.          $SC_fgpass_scalars_I7 = fgpass_scalars%dim_2%SM
 1407.          $SC_fgpass_scalars_I6 = fgpass_scalars%dim_2%EX
 1407.          $SC_fgpass_scalars_I8 = fgpass_scalars%dim_2%LB
 1407.          $SC_fgpass_scalars_I10 = fgpass_scalars%dim_3%SM
 1407.          $SC_fgpass_scalars_I9 = fgpass_scalars%dim_3%EX
 1407.          $SC_fgpass_scalars_I11 = fgpass_scalars%dim_3%LB
 1407.          $SC_fgpass_scalars_I13 = fgpass_scalars%dim_4%SM
 1407.          $SC_fgpass_scalars_I12 = fgpass_scalars%dim_4%EX
 1407.          $SC_fgpass_scalars_I14 = fgpass_scalars%dim_4%LB
 1407.          $SC_fgpass_scalars_I16 = fgpass_scalars%dim_5%SM
 1407.          $SC_fgpass_scalars_I15 = fgpass_scalars%dim_5%EX
 1407.          $SC_fgpass_scalars_I17 = fgpass_scalars%dim_5%LB
 1400.          $I_L1400_145 = 0
 1400.          do
 1401.             if ( iblim > 0 ) then
 1401.                $I_L1401_110 = 0
 1401. !dir$ ivdep
 1401.                do
 1402.                   $b_WR0_R1 = ( b(1 + $I_L1401_110, 2 + $I_L1400_145) * 1.0/a(1 + $I_L1401_110, 1 + $I_L1400_145) )
 1402.                   b(1 + $I_L1401_110, 2 + $I_L1400_145) = $b_WR0_R1
 1403.                   a(1 + $I_L1401_110, 2 + $I_L1400_145) = a(1 + $I_L1401_110, 2 + $I_L1400_145) + -( $b_WR0_R1 * c(1 + $I_L1401_110, 1 + $I_L1400_145) )
 1404.                   $I_L1401_110 = 1 + $I_L1401_110
 1401.                   if ( $I_L1401_110 >= iblim ) exit
 1401.                enddo
 1401.             endif
 1405.             if ( nscalars > 0 ) then
 1406.                if ( iblim > 0 ) then
 1405.                   $I_L1405_139 = 0
 1405.                   do
 1406.                      $I_L1406_132 = 0
 1406.                      do
 1405.                         $I_L1405_151 = 0
 1405. !dir$ shortloop16
 1405. !dir$ blocking_size( 2, 2 )
 1405.                         do
 1406.                            $I_L1406_112 = 0
 1406. !dir$ ivdep
 1406. !dir$ blocking_size( 256, 256 )
 1406.                            do
 1407.                               (fgpass_scalars%base_addr)(1 + $I_L1406_112 + 256 * $I_L1406_132, 2 + $I_L1400_145, jb, 1 + $I_L1405_151 + 2 * $I_L1405_139, inew, 0) = (fgpass_scalars%base_addr)(1 + $I_L1406_112 + 256 * $I_L1406_132, 2 + $I_L1400_145, jb, 1 + $I_L1405_151 + 2 * $I_L1405_139, inew, 0) + -( b(1 + $I_L1406_112 + 256 * $I_L1406_132, 2 + $I_L1400_145) * (fgpass_scalars%base_addr)(1 + $I_L1406_112 + 256 * $I_L1406_132, 1 + $I_L1400_145, jb, 1 + $I_L1405_151 + 2 * $I_L1405_139, inew, 0) )
 1406.                               $I_L1406_112 = 1 + $I_L1406_112
 1406.                               if ( $I_L1406_112 >= min( iblim, 256 + 256 * $I_L1406_132 ) + -256 * $I_L1406_132 ) exit
 1406.                            enddo
 1405.                            $I_L1405_151 = 1 + $I_L1405_151
 1405.                            if ( $I_L1405_151 >= min( nscalars, 2 + 2 * $I_L1405_139 ) + -2 * $I_L1405_139 ) exit
 1405.                         enddo
 1406.                         $I_L1406_132 = 1 + $I_L1406_132
 1409.                         if ( $I_L1406_132 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
 1409.                      enddo
 1405.                      $I_L1405_139 = 1 + $I_L1405_139
 1405.                      if ( $I_L1405_139 >= 1 + max( 0, -1 + _rsh( 1 + nscalars, 1 ) ) ) exit
 1405.                   enddo
 1405.                endif
 1405.             endif
 1411.             $I_L1400_145 = 1 + $I_L1400_145
 1410.             if ( $I_L1400_145 >= -1 + kmax ) exit
 1410.          enddo
 1410.       endif
 1412.       if ( nscalars > 0 ) then
 1414.          $SC_fgpass_scalars_I4 = fgpass_scalars%dim_1%EX
 1414.          $SC_fgpass_scalars_I5 = fgpass_scalars%dim_1%LB
 1414.          $SC_fgpass_scalars_I7 = fgpass_scalars%dim_2%SM
 1414.          $SC_fgpass_scalars_I6 = fgpass_scalars%dim_2%EX
 1414.          $SC_fgpass_scalars_I8 = fgpass_scalars%dim_2%LB
 1414.          $SC_fgpass_scalars_I10 = fgpass_scalars%dim_3%SM
 1414.          $SC_fgpass_scalars_I9 = fgpass_scalars%dim_3%EX
 1414.          $SC_fgpass_scalars_I11 = fgpass_scalars%dim_3%LB
 1414.          $SC_fgpass_scalars_I13 = fgpass_scalars%dim_4%SM
 1414.          $SC_fgpass_scalars_I12 = fgpass_scalars%dim_4%EX
 1414.          $SC_fgpass_scalars_I14 = fgpass_scalars%dim_4%LB
 1414.          $SC_fgpass_scalars_I16 = fgpass_scalars%dim_5%SM
 1414.          $SC_fgpass_scalars_I15 = fgpass_scalars%dim_5%EX
 1414.          $SC_fgpass_scalars_I17 = fgpass_scalars%dim_5%LB
 1413.          if ( iblim > 0 ) then
 1412.             $I_L1412_141 = 0
 1412.             do
 1413.                $I_L1413_134 = 0
 1413.                do
 1412.                   $I_L1412_153 = 0
 1412. !dir$ shortloop16
 1412. !dir$ blocking_size( 2, 2 )
 1412.                   do
 1413.                      $I_L1413_115 = 0
 1413. !dir$ ivdep
 1413. !dir$ blocking_size( 256, 256 )
 1413.                      do
 1414.                         (fgpass_scalars%base_addr)(1 + $I_L1413_115 + 256 * $I_L1413_134, kmax, jb, 1 + $I_L1412_153 + 2 * $I_L1412_141, inew, 0) = ( (fgpass_scalars%base_addr)(1 + $I_L1413_115 + 256 * $I_L1413_134, kmax, jb, 1 + $I_L1412_153 + 2 * $I_L1412_141, inew, 0) * 1.0/a(1 + $I_L1413_115 + 256 * $I_L1413_134, kmax) )
 1413.                         $I_L1413_115 = 1 + $I_L1413_115
 1413.                         if ( $I_L1413_115 >= min( iblim, 256 + 256 * $I_L1413_134 ) + -256 * $I_L1413_134 ) exit
 1413.                      enddo
 1412.                      $I_L1412_153 = 1 + $I_L1412_153
 1412.                      if ( $I_L1412_153 >= min( nscalars, 2 + 2 * $I_L1412_141 ) + -2 * $I_L1412_141 ) exit
 1412.                   enddo
 1413.                   $I_L1413_134 = 1 + $I_L1413_134
 1416.                   if ( $I_L1413_134 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
 1416.                enddo
 1412.                $I_L1412_141 = 1 + $I_L1412_141
 1412.                if ( $I_L1412_141 >= 1 + max( 0, -1 + _rsh( 1 + nscalars, 1 ) ) ) exit
 1412.             enddo
 1412.          endif
 1412.       endif
 1418.       if ( 1 + -kmax < 0 ) then
 1421.          $SC_fgpass_scalars_I4 = fgpass_scalars%dim_1%EX
 1421.          $SC_fgpass_scalars_I5 = fgpass_scalars%dim_1%LB
 1421.          $SC_fgpass_scalars_I7 = fgpass_scalars%dim_2%SM
 1421.          $SC_fgpass_scalars_I6 = fgpass_scalars%dim_2%EX
 1421.          $SC_fgpass_scalars_I8 = fgpass_scalars%dim_2%LB
 1421.          $SC_fgpass_scalars_I10 = fgpass_scalars%dim_3%SM
 1421.          $SC_fgpass_scalars_I9 = fgpass_scalars%dim_3%EX
 1421.          $SC_fgpass_scalars_I11 = fgpass_scalars%dim_3%LB
 1421.          $SC_fgpass_scalars_I13 = fgpass_scalars%dim_4%SM
 1421.          $SC_fgpass_scalars_I12 = fgpass_scalars%dim_4%EX
 1421.          $SC_fgpass_scalars_I14 = fgpass_scalars%dim_4%LB
 1421.          $SC_fgpass_scalars_I16 = fgpass_scalars%dim_5%SM
 1421.          $SC_fgpass_scalars_I15 = fgpass_scalars%dim_5%EX
 1421.          $SC_fgpass_scalars_I17 = fgpass_scalars%dim_5%LB
 1419.          if ( nscalars > 0 ) then
 1420.             if ( iblim > 0 ) then
 1418.                $I_L1418_149 = 0
 1418.                do
 1419.                   $I_L1419_147 = 0
 1419.                   do
 1420.                      $I_L1420_143 = 0
 1420.                      do
 1418.                         $I_L1418_136 = 0
 1418.                         if ( min( -1 + kmax, 2 + 2 * $I_L1418_149 ) + -2 * $I_L1418_149 >= 2 ) then
 1418.                            $I_L1418_155 = 0
 1418. !dir$ shortloop16
 1418. !dir$ blocking_size( 2, 2 )
 1418.                            do
 1419.                               $I_L1419_129 = 0
 1419. !dir$ shortloop16
 1419. !dir$ blocking_size( 2, 2 )
 1419.                               do
 1420.                                  $I_L1420_118 = 0
 1420. !dir$ ivdep
 1420. !dir$ blocking_size( 256, 256 )
 1420.                                  do
 1421.                                     (fgpass_scalars%base_addr)(1 + $I_L1420_118 + 256 * $I_L1420_143, -1 + kmax + -2 * $I_L1418_149 + -2 * $I_L1418_155, jb, 1 + $I_L1419_129 + 2 * $I_L1419_147, inew, 0) = ( 1.0/a(1 + $I_L1420_118 + 256 * $I_L1420_143, -1 + kmax + -2 * $I_L1418_149 + -2 * $I_L1418_155) * ( (fgpass_scalars%base_addr)(1 + $I_L1420_118 + 256 * $I_L1420_143, -1 + kmax + -2 * $I_L1418_149 + -2 * $I_L1418_155, jb, 1 + $I_L1419_129 + 2 * $I_L1419_147, inew, 0) + -( c(1 + $I_L1420_118 + 256 * $I_L1420_143, -1 + kmax + -2 * $I_L1418_149 + -2 * $I_L1418_155) * (fgpass_scalars%base_addr)(1 + $I_L1420_118 + 256 * $I_L1420_143, kmax + -2 * $I_L1418_149 + -2 * $I_L1418_155, jb, 1 + $I_L1419_129 + 2 * $I_L1419_147, inew, 0) ) ) )
 1421.                                     (fgpass_scalars%base_addr)(1 + $I_L1420_118 + 256 * $I_L1420_143, -2 + kmax + -2 * $I_L1418_149 + -2 * $I_L1418_155, jb, 1 + $I_L1419_129 + 2 * $I_L1419_147, inew, 0) = ( ( (fgpass_scalars%base_addr)(1 + $I_L1420_118 + 256 * $I_L1420_143, -2 + kmax + -2 * $I_L1418_149 + -2 * $I_L1418_155, jb, 1 + $I_L1419_129 + 2 * $I_L1419_147, inew, 0) + -( (fgpass_scalars%base_addr)(1 + $I_L1420_118 + 256 * $I_L1420_143, -1 + kmax + -2 * $I_L1418_149 + -2 * $I_L1418_155, jb, 1 + $I_L1419_129 + 2 * $I_L1419_147, inew, 0) * c(1 + $I_L1420_118 + 256 * $I_L1420_143, -2 + kmax + -2 * $I_L1418_149 + -2 * $I_L1418_155) ) ) * 1.0/a(1 + $I_L1420_118 + 256 * $I_L1420_143, -2 + kmax + -2 * $I_L1418_149 + -2 * $I_L1418_155) )
 1420.                                     $I_L1420_118 = 1 + $I_L1420_118
 1420.                                     if ( $I_L1420_118 >= min( iblim, 256 + 256 * $I_L1420_143 ) + -256 * $I_L1420_143 ) exit
 1420.                                  enddo
 1419.                                  $I_L1419_129 = 1 + $I_L1419_129
 1419.                                  if ( $I_L1419_129 >= min( nscalars, 2 + 2 * $I_L1419_147 ) + -2 * $I_L1419_147 ) exit
 1419.                               enddo
 1418.                               $I_L1418_155 = 1 + $I_L1418_155
 1423.                               if ( $I_L1418_155 >= _rsh( min( -1 + kmax, 2 + 2 * $I_L1418_149 ) + -2 * $I_L1418_149, 1 ) ) exit
 1423.                            enddo
 1418.                            $I_L1418_136 = and( 0xfffffffffffffffeUL, min( -1 + kmax, 2 + 2 * $I_L1418_149 ) + -2 * $I_L1418_149 )
 1418.                         endif
 1418.                         if ( $I_L1418_136 < min( -1 + kmax, 2 + 2 * $I_L1418_149 ) + -2 * $I_L1418_149 ) then
 1419.                            $I_L1419_129 = 0
 1419. !dir$ shortloop16
 1419. !dir$ blocking_size( 2, 2 )
 1419.                            do
 1420.                               $I_L1420_118 = 0
 1420. !dir$ ivdep
 1420. !dir$ blocking_size( 256, 256 )
 1420.                               do
 1421.                                  (fgpass_scalars%base_addr)(1 + $I_L1420_118 + 256 * $I_L1420_143, -1 + kmax + -$I_L1418_136 + -2 * $I_L1418_149, jb, 1 + $I_L1419_129 + 2 * $I_L1419_147, inew, 0) = ( ( (fgpass_scalars%base_addr)(1 + $I_L1420_118 + 256 * $I_L1420_143, -1 + kmax + -$I_L1418_136 + -2 * $I_L1418_149, jb, 1 + $I_L1419_129 + 2 * $I_L1419_147, inew, 0) + -( (fgpass_scalars%base_addr)(1 + $I_L1420_118 + 256 * $I_L1420_143, kmax + -$I_L1418_136 + -2 * $I_L1418_149, jb, 1 + $I_L1419_129 + 2 * $I_L1419_147, inew, 0) * c(1 + $I_L1420_118 + 256 * $I_L1420_143, -1 + kmax + -$I_L1418_136 + -2 * $I_L1418_149) ) ) * 1.0/a(1 + $I_L1420_118 + 256 * $I_L1420_143, -1 + kmax + -$I_L1418_136 + -2 * $I_L1418_149) )
 1420.                                  $I_L1420_118 = 1 + $I_L1420_118
 1420.                                  if ( $I_L1420_118 >= min( iblim, 256 + 256 * $I_L1420_143 ) + -256 * $I_L1420_143 ) exit
 1420.                               enddo
 1419.                               $I_L1419_129 = 1 + $I_L1419_129
 1419.                               if ( $I_L1419_129 >= min( nscalars, 2 + 2 * $I_L1419_147 ) + -2 * $I_L1419_147 ) exit
 1419.                            enddo
 1419.                         endif
 1420.                         $I_L1420_143 = 1 + $I_L1420_143
 1420.                         if ( $I_L1420_143 >= 1 + max( 0, -1 + _rsh( 255 + iblim, 8 ) ) ) exit
 1420.                      enddo
 1419.                      $I_L1419_147 = 1 + $I_L1419_147
 1424.                      if ( $I_L1419_147 >= 1 + max( 0, -1 + _rsh( 1 + nscalars, 1 ) ) ) exit
 1424.                   enddo
 1418.                   $I_L1418_149 = 1 + $I_L1418_149
 1418.                   if ( $I_L1418_149 >= 1 + max( 0, -1 + _rsh( kmax, 1 ) ) ) exit
 1418.                enddo
 1418.             endif
 1418.          endif
 1418.       endif
 1365.       _free( t$167 )
 1427.       return
 1427.       end
 1427.       
    6.       
    6.       module griddynamics
    6.       end
    6.       
