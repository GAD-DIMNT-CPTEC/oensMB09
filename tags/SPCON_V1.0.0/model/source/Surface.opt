       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  Surface.f90
       !        File                  :  Surface.opt
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
   96.       
   96.       subroutine initsurface( ibmax, jbmax, del_in, path_in, fnamesibveg, fnamesibalb )
   86.       del_in%dim_1%LB = 1
   86.       t$16 = _len( path_in )
   86.       t$17 = _len( fnamesibveg )
   86.       t$18 = _len( fnamesibalb )
   93.       if ( schemes == 1 ) then
   93.          t$458 = del_in
   93.          call initssib( ibmax, jbmax, t$458,  _substr(path_in,1,_len( path_in )),  _substr(fnamesibveg,1,_len( fnamesibveg )),  _substr(fnamesibalb,1,_len( fnamesibalb )) )
   93.       endif
   95.       if ( schemes == 2 ) then
   95.          _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'ERROR schemes 2', 0x800600000000L ) ) )
   95.       endif
   96.       return
   96.       end
   96.       
  864.       
  864.       subroutine surface_driver( jdt, latitu, cosz, sinclt, satcap, extk, radfac, closs, gloss, thermk, p1f, p2f, tc, tg, td, capac, w, itype, dtc3x, mon, nmax, ncols, td0, tg0, tc0, w0, capac0, tcm, tgm, tdm, wm, capacm, intg, ssib, zlwup, nsx, tgeff, salb, imask, cos2, dlwbot, beam_visb, beam_visd, beam_nirb, beam_nird, zenith, xvisb, xvisd, xnirb, xnird, ppli, ppci, tmtx, qmtx, umtx, tsea, kmax, slrad, tsurf, qsurf, gt, gq, gu, gv, gps, colrad, sigki, delsig, sens, evap, umom, vmom, zorl, tseam, sice2, ustar2, qsfc0, tsfc0, qsfcm, tsfcm, qsfc, tsfc, z0, qm0, qm, qmm, tm0, tm, tmm, htdisp, temp2m, umes2m, uve10m, vve10m, mskant )
   98.       t$1 = ncols
  286.       t$19 = _zla( 0, ncols )
   98.       t$20 = _zla( 0, ncols )
   98.       t$21 = 2 * _zla( 0, ncols )
   98.       t$22 = 2 * _zla( 0, ncols )
   98.       t$23 = 6 * _zla( 0, ncols )
   98.       t$24 = 12 * _zla( 0, ncols )
   98.       t$25 = 2 * _zla( 0, ncols )
   98.       t$26 = 3 * _zla( 0, ncols )
   98.       t$27 = 2 * _zla( 0, ncols )
   98.       t$28 = 4 * _zla( 0, ncols )
   98.       t$5 = kmax
  318.       t$29 = _zla( 0, kmax )
   98.       t$30 = _zla( 0, ncols ) * _zla( 0, kmax )
   98.       t$31 = 3 * _zla( 0, ncols ) * _zla( 0, kmax )
   98.       t$32 = 4 * _zla( 0, ncols ) * _zla( 0, kmax )
   98.       t$33 = _zla( 0, ncols ) * _zla( 0, kmax )
  435.       t$36 = 8 * _zla( 0, ncols )
  391.       t$37 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
  391.       t$39 = t$37 + 8 * _zla( 0, ncols )
  392.       t$40 = 8 * ( 7 + t$37 + 8 * _zla( 0, ncols ) ) / 8
  392.       t$42 = t$40 + 8 * _zla( 0, ncols )
  402.       t$43 = 8 * ( 7 + t$40 + 8 * _zla( 0, ncols ) ) / 8
  402.       t$45 = t$43 + 8 * _zla( 0, ncols )
  403.       t$46 = 8 * ( 7 + t$43 + 8 * _zla( 0, ncols ) ) / 8
  403.       t$48 = t$46 + 8 * _zla( 0, ncols )
  427.       t$49 = 8 * ( 7 + t$46 + 8 * _zla( 0, ncols ) ) / 8
  427.       t$51 = t$49 + 8 * _zla( 0, ncols )
  461.       t$52 = 8 * ( 7 + t$49 + 8 * _zla( 0, ncols ) ) / 8
  461.       t$54 = t$52 + 8 * _zla( 0, ncols )
  444.       t$55 = 8 * ( 7 + t$52 + 8 * _zla( 0, ncols ) ) / 8
  444.       t$57 = t$55 + 8 * _zla( 0, ncols )
  442.       t$58 = 8 * ( 7 + t$55 + 8 * _zla( 0, ncols ) ) / 8
  442.       t$60 = t$58 + 8 * _zla( 0, ncols )
  443.       t$61 = 8 * ( 7 + t$58 + 8 * _zla( 0, ncols ) ) / 8
  443.       t$63 = t$61 + 8 * _zla( 0, ncols )
  476.       t$64 = 8 * ( 7 + t$61 + 8 * _zla( 0, ncols ) ) / 8
  476.       t$66 = t$64 + 8 * _zla( 0, ncols )
  478.       t$67 = 8 * ( 7 + t$64 + 8 * _zla( 0, ncols ) ) / 8
  478.       t$69 = t$67 + 8 * _zla( 0, ncols )
  407.       t$70 = 8 * ( 7 + t$67 + 8 * _zla( 0, ncols ) ) / 8
  407.       t$72 = t$70 + 8 * _zla( 0, ncols )
  431.       t$73 = 8 * ( 7 + t$70 + 8 * _zla( 0, ncols ) ) / 8
  431.       t$75 = t$73 + 8 * _zla( 0, ncols )
  404.       t$76 = 8 * ( 7 + t$73 + 8 * _zla( 0, ncols ) ) / 8
  404.       t$78 = t$76 + 8 * _zla( 0, ncols )
  405.       t$79 = 8 * ( 7 + t$76 + 8 * _zla( 0, ncols ) ) / 8
  405.       t$81 = t$79 + 8 * _zla( 0, ncols )
  406.       t$82 = 8 * ( 7 + t$79 + 8 * _zla( 0, ncols ) ) / 8
  406.       t$84 = t$82 + 8 * _zla( 0, ncols )
  437.       t$85 = 8 * ( 7 + t$82 + 8 * _zla( 0, ncols ) ) / 8
  437.       t$87 = t$85 + 8 * _zla( 0, ncols )
  388.       t$88 = 8 * ( 7 + t$85 + 8 * _zla( 0, ncols ) ) / 8
  388.       t$90 = t$88 + 8 * _zla( 0, ncols )
  417.       t$91 = 8 * ( 7 + t$88 + 8 * _zla( 0, ncols ) ) / 8
  417.       t$93 = t$91 + 8 * _zla( 0, ncols )
  413.       t$94 = 8 * ( 7 + t$91 + 8 * _zla( 0, ncols ) ) / 8
  413.       t$96 = t$94 + 8 * _zla( 0, ncols )
  421.       t$97 = 8 * ( 7 + t$94 + 8 * _zla( 0, ncols ) ) / 8
  421.       t$99 = t$97 + 8 * _zla( 0, ncols )
  423.       t$100 = 8 * ( 7 + t$97 + 8 * _zla( 0, ncols ) ) / 8
  423.       t$102 = t$100 + 8 * _zla( 0, ncols )
  412.       t$103 = 8 * ( 7 + t$100 + 8 * _zla( 0, ncols ) ) / 8
  412.       t$105 = t$103 + 8 * _zla( 0, ncols )
  418.       t$106 = 8 * ( 7 + t$103 + 8 * _zla( 0, ncols ) ) / 8
  418.       t$108 = t$106 + 8 * _zla( 0, ncols )
  415.       t$109 = 8 * ( 7 + t$106 + 8 * _zla( 0, ncols ) ) / 8
  415.       t$111 = t$109 + 8 * _zla( 0, ncols )
  422.       t$112 = 8 * ( 7 + t$109 + 8 * _zla( 0, ncols ) ) / 8
  422.       t$114 = t$112 + 8 * _zla( 0, ncols )
  424.       t$115 = 8 * ( 7 + t$112 + 8 * _zla( 0, ncols ) ) / 8
  424.       t$117 = t$115 + 8 * _zla( 0, ncols )
  416.       t$118 = 8 * ( 7 + t$115 + 8 * _zla( 0, ncols ) ) / 8
  416.       t$120 = t$118 + 8 * _zla( 0, ncols )
  414.       t$121 = 8 * ( 7 + t$118 + 8 * _zla( 0, ncols ) ) / 8
  414.       t$123 = t$121 + 8 * _zla( 0, ncols )
  438.       t$124 = 8 * ( 7 + t$121 + 8 * _zla( 0, ncols ) ) / 8
  438.       t$126 = t$124 + 8 * _zla( 0, ncols )
  389.       t$127 = 8 * ( 7 + t$124 + 8 * _zla( 0, ncols ) ) / 8
  389.       t$129 = t$127 + 8 * _zla( 0, ncols )
  390.       t$130 = 8 * ( 7 + t$127 + 8 * _zla( 0, ncols ) ) / 8
  390.       t$132 = t$130 + 8 * _zla( 0, ncols )
  425.       t$133 = 8 * ( 7 + t$130 + 8 * _zla( 0, ncols ) ) / 8
  425.       t$135 = t$133 + 8 * _zla( 0, ncols )
  451.       t$136 = 8 * ( 7 + t$133 + 8 * _zla( 0, ncols ) ) / 8
  451.       t$138 = t$136 + 8 * _zla( 0, ncols )
  452.       t$139 = 8 * ( 7 + t$136 + 8 * _zla( 0, ncols ) ) / 8
  452.       t$141 = t$139 + 8 * _zla( 0, ncols )
  429.       t$142 = 8 * ( 7 + t$139 + 8 * _zla( 0, ncols ) ) / 8
  429.       t$144 = t$142 + 8 * _zla( 0, ncols )
  440.       t$145 = 8 * ( 7 + t$142 + 8 * _zla( 0, ncols ) ) / 8
  440.       t$147 = t$145 + 24 * _zla( 0, ncols )
  439.       t$148 = 8 * ( 7 + t$145 + 24 * _zla( 0, ncols ) ) / 8
  439.       t$150 = t$148 + 24 * _zla( 0, ncols )
  441.       t$151 = 8 * ( 7 + t$148 + 24 * _zla( 0, ncols ) ) / 8
  441.       t$153 = t$151 + 32 * _zla( 0, ncols )
  419.       t$154 = 8 * ( 7 + t$151 + 32 * _zla( 0, ncols ) ) / 8
  419.       t$156 = t$154 + 8 * _zla( 0, ncols )
  426.       t$157 = 8 * ( 7 + t$154 + 8 * _zla( 0, ncols ) ) / 8
  426.       t$159 = t$157 + 8 * _zla( 0, ncols )
  420.       t$160 = 8 * ( 7 + t$157 + 8 * _zla( 0, ncols ) ) / 8
  420.       t$162 = t$160 + 8 * _zla( 0, ncols )
  453.       t$163 = 8 * ( 7 + t$160 + 8 * _zla( 0, ncols ) ) / 8
  453.       t$165 = t$163 + 8 * _zla( 0, ncols )
  400.       t$166 = 8 * ( 7 + t$163 + 8 * _zla( 0, ncols ) ) / 8
  400.       t$168 = t$166 + 8 * _zla( 0, ncols )
  468.       t$169 = 8 * ( 7 + t$166 + 8 * _zla( 0, ncols ) ) / 8
  468.       t$171 = t$169 + 8 * _zla( 0, ncols )
  395.       t$172 = 8 * ( 7 + t$169 + 8 * _zla( 0, ncols ) ) / 8
  395.       t$174 = t$172 + 16 * _zla( 0, ncols )
  396.       t$175 = 8 * ( 7 + t$172 + 16 * _zla( 0, ncols ) ) / 8
  396.       t$177 = t$175 + 16 * _zla( 0, ncols )
  399.       t$178 = 8 * ( 7 + t$175 + 16 * _zla( 0, ncols ) ) / 8
  399.       t$180 = t$178 + 16 * _zla( 0, ncols )
   98.       t$181 = 3 * _zla( 0, ncols )
  401.       t$182 = 8 * ( 7 + t$178 + 16 * _zla( 0, ncols ) ) / 8
  401.       t$184 = t$182 + 24 * _zla( 0, ncols )
  373.       t$185 = 8 * ( 7 + t$182 + 24 * _zla( 0, ncols ) ) / 8
  373.       t$187 = t$185 + 8 * _zla( 0, ncols )
  374.       t$188 = 8 * ( 7 + t$185 + 8 * _zla( 0, ncols ) ) / 8
  374.       t$190 = t$188 + 8 * _zla( 0, ncols )
  436.       t$191 = 8 * ( 7 + t$188 + 8 * _zla( 0, ncols ) ) / 8
  436.       t$193 = t$191 + 8 * _zla( 0, ncols )
  372.       t$194 = 8 * ( 7 + t$191 + 8 * _zla( 0, ncols ) ) / 8
  372.       t$196 = t$194 + 8 * _zla( 0, ncols )
  447.       t$197 = 8 * ( 7 + t$194 + 8 * _zla( 0, ncols ) ) / 8
  447.       t$199 = t$197 + 8 * _zla( 0, ncols )
  489.       t$200 = 8 * ( 7 + t$197 + 8 * _zla( 0, ncols ) ) / 8
  489.       t$202 = t$200 + 8 * _zla( 0, ncols )
  486.       t$203 = 8 * ( 7 + t$200 + 8 * _zla( 0, ncols ) ) / 8
  486.       t$205 = t$203 + 8 * _zla( 0, ncols )
  495.       t$206 = 8 * ( 7 + t$203 + 8 * _zla( 0, ncols ) ) / 8
  495.       t$208 = t$206 + 24 * _zla( 0, ncols ) * _zla( 0, kmax )
  380.       t$209 = 8 * ( 7 + t$206 + 24 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
  380.       t$211 = t$209 + 8 * _zla( 0, ncols )
   98.       t$212 = 3 * _zla( 0, ncols )
   98.       t$213 = 6 * _zla( 0, ncols )
  375.       t$214 = 8 * ( 7 + t$209 + 8 * _zla( 0, ncols ) ) / 8
  375.       t$216 = t$214 + 48 * _zla( 0, ncols )
  394.       t$217 = 8 * ( 7 + t$214 + 48 * _zla( 0, ncols ) ) / 8
  394.       t$219 = t$217 + 16 * _zla( 0, ncols )
  381.       t$220 = 8 * ( 7 + t$217 + 16 * _zla( 0, ncols ) ) / 8
  381.       t$222 = t$220 + 8 * _zla( 0, ncols )
  383.       t$223 = 8 * ( 7 + t$220 + 8 * _zla( 0, ncols ) ) / 8
  383.       t$225 = t$223 + 8 * _zla( 0, ncols )
  448.       t$226 = 8 * ( 7 + t$223 + 8 * _zla( 0, ncols ) ) / 8
  448.       t$228 = t$226 + 8 * _zla( 0, ncols )
  382.       t$229 = 8 * ( 7 + t$226 + 8 * _zla( 0, ncols ) ) / 8
  382.       t$231 = t$229 + 8 * _zla( 0, ncols )
  384.       t$232 = 8 * ( 7 + t$229 + 8 * _zla( 0, ncols ) ) / 8
  384.       t$234 = t$232 + 8 * _zla( 0, ncols )
  460.       t$235 = 8 * ( 7 + t$232 + 8 * _zla( 0, ncols ) ) / 8
  460.       t$237 = t$235 + 8 * _zla( 0, ncols )
  483.       t$238 = 8 * ( 7 + t$235 + 8 * _zla( 0, ncols ) ) / 8
  483.       t$240 = t$238 + 8 * _zla( 0, ncols )
  446.       t$241 = 8 * ( 7 + t$238 + 8 * _zla( 0, ncols ) ) / 8
  446.       t$243 = t$241 + 8 * _zla( 0, ncols )
  459.       t$244 = 8 * ( 7 + t$241 + 8 * _zla( 0, ncols ) ) / 8
  459.       t$246 = t$244 + 8 * _zla( 0, ncols )
  430.       t$247 = 8 * ( 7 + t$244 + 8 * _zla( 0, ncols ) ) / 8
  430.       t$249 = t$247 + 8 * _zla( 0, ncols )
  398.       t$250 = 8 * ( 7 + t$247 + 8 * _zla( 0, ncols ) ) / 8
  398.       t$252 = t$250 + 8 * _zla( 0, ncols )
  397.       t$253 = 8 * ( 7 + t$250 + 8 * _zla( 0, ncols ) ) / 8
  397.       t$255 = t$253 + 16 * _zla( 0, ncols )
  428.       t$256 = 8 * ( 7 + t$253 + 16 * _zla( 0, ncols ) ) / 8
  428.       t$258 = t$256 + 8 * _zla( 0, ncols )
  349.       t$259 = 8 * ( 7 + t$256 + 8 * _zla( 0, ncols ) ) / 8
  349.       t$261 = t$259 + 16 * _zla( 0, ncols )
  480.       t$262 = 8 * ( 7 + t$259 + 16 * _zla( 0, ncols ) ) / 8
  480.       t$264 = t$262 + 8 * _zla( 0, ncols )
  408.       t$265 = 8 * ( 7 + t$262 + 8 * _zla( 0, ncols ) ) / 8
  408.       t$267 = t$265 + 16 * _zla( 0, ncols )
  462.       t$268 = 8 * ( 7 + t$265 + 16 * _zla( 0, ncols ) ) / 8
  462.       t$270 = t$268 + 8 * _zla( 0, ncols )
  387.       t$271 = 8 * ( 7 + t$268 + 8 * _zla( 0, ncols ) ) / 8
  387.       t$273 = t$271 + 8 * _zla( 0, ncols )
  385.       t$274 = 8 * ( 7 + t$271 + 8 * _zla( 0, ncols ) ) / 8
  385.       t$276 = t$274 + 8 * _zla( 0, ncols )
  386.       t$277 = 8 * ( 7 + t$274 + 8 * _zla( 0, ncols ) ) / 8
  386.       t$279 = t$277 + 8 * _zla( 0, ncols )
  487.       t$280 = 8 * ( 7 + t$277 + 8 * _zla( 0, ncols ) ) / 8
  487.       t$282 = t$280 + 8 * _zla( 0, ncols )
  484.       t$283 = 8 * ( 7 + t$280 + 8 * _zla( 0, ncols ) ) / 8
  484.       t$285 = t$283 + 8 * _zla( 0, ncols )
  466.       t$286 = 8 * ( 7 + t$283 + 8 * _zla( 0, ncols ) ) / 8
  466.       t$288 = t$286 + 8 * _zla( 0, ncols )
  494.       t$289 = 8 * ( 7 + t$286 + 8 * _zla( 0, ncols ) ) / 8
  494.       t$291 = t$289 + 24 * _zla( 0, ncols ) * _zla( 0, kmax )
  491.       t$292 = 8 * ( 7 + t$289 + 24 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
  491.       t$294 = t$292 + 8 * _zla( 0, ncols )
  492.       t$295 = 8 * ( 7 + t$292 + 8 * _zla( 0, ncols ) ) / 8
  492.       t$297 = t$295 + 8 * _zla( 0, ncols )
  393.       t$298 = 8 * ( 7 + t$295 + 8 * _zla( 0, ncols ) ) / 8
  393.       t$300 = t$298 + 8 * _zla( 0, ncols )
  370.       t$301 = 8 * ( 7 + t$298 + 8 * _zla( 0, ncols ) ) / 8
  370.       t$303 = t$301 + 8 * _zla( 0, ncols )
  496.       t$304 = 8 * ( 7 + t$301 + 8 * _zla( 0, ncols ) ) / 8
  496.       t$306 = t$304 + 32 * _zla( 0, ncols ) * _zla( 0, kmax )
  350.       t$307 = 8 * ( 7 + t$304 + 32 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
  350.       t$309 = t$307 + 8 * _zla( 0, ncols )
  481.       t$310 = 8 * ( 7 + t$307 + 8 * _zla( 0, ncols ) ) / 8
  481.       t$312 = t$310 + 8 * _zla( 0, ncols )
  477.       t$313 = 8 * ( 7 + t$310 + 8 * _zla( 0, ncols ) ) / 8
  477.       t$315 = t$313 + 8 * _zla( 0, ncols )
  488.       t$316 = 8 * ( 7 + t$313 + 8 * _zla( 0, ncols ) ) / 8
  488.       t$318 = t$316 + 8 * _zla( 0, ncols )
  485.       t$319 = 8 * ( 7 + t$316 + 8 * _zla( 0, ncols ) ) / 8
  485.       t$321 = t$319 + 8 * _zla( 0, ncols )
  467.       t$322 = 8 * ( 7 + t$319 + 8 * _zla( 0, ncols ) ) / 8
  467.       t$324 = t$322 + 8 * _zla( 0, ncols )
  465.       t$325 = 8 * ( 7 + t$322 + 8 * _zla( 0, ncols ) ) / 8
  465.       t$327 = t$325 + 8 * _zla( 0, ncols )
  371.       t$328 = 8 * ( 7 + t$325 + 8 * _zla( 0, ncols ) ) / 8
  371.       t$330 = t$328 + 8 * _zla( 0, ncols )
  449.       t$331 = 8 * ( 7 + t$328 + 8 * _zla( 0, ncols ) ) / 8
  449.       t$333 = t$331 + 8 * _zla( 0, ncols )
  450.       t$334 = 8 * ( 7 + t$331 + 8 * _zla( 0, ncols ) ) / 8
  450.       t$336 = t$334 + 8 * _zla( 0, ncols )
  482.       t$337 = 8 * ( 7 + t$334 + 8 * _zla( 0, ncols ) ) / 8
  482.       t$339 = t$337 + 8 * _zla( 0, ncols )
  475.       t$340 = 8 * ( 7 + t$337 + 8 * _zla( 0, ncols ) ) / 8
  475.       t$342 = t$340 + 8 * _zla( 0, ncols )
  456.       t$343 = 8 * ( 7 + t$340 + 8 * _zla( 0, ncols ) ) / 8
  456.       t$345 = t$343 + 8 * _zla( 0, ncols )
  464.       t$346 = 8 * ( 7 + t$343 + 8 * _zla( 0, ncols ) ) / 8
  464.       t$348 = t$346 + 8 * _zla( 0, ncols )
   98.       t$34 = int( _alloc( t$346 + 8 * _zla( 0, ncols ) ), 8 )
  435.       t$35 = t$34
  391.       t$38 = t$37 + t$34
  392.       t$41 = t$40 + t$34
  402.       t$44 = t$43 + t$34
  403.       t$47 = t$46 + t$34
  427.       t$50 = t$49 + t$34
  461.       t$53 = t$52 + t$34
  444.       t$56 = t$55 + t$34
  442.       t$59 = t$58 + t$34
  443.       t$62 = t$61 + t$34
  476.       t$65 = t$64 + t$34
  478.       t$68 = t$67 + t$34
  407.       t$71 = t$70 + t$34
  431.       t$74 = t$73 + t$34
  404.       t$77 = t$76 + t$34
  405.       t$80 = t$79 + t$34
  406.       t$83 = t$82 + t$34
  437.       t$86 = t$85 + t$34
  388.       t$89 = t$88 + t$34
  417.       t$92 = t$91 + t$34
  413.       t$95 = t$94 + t$34
  421.       t$98 = t$97 + t$34
  423.       t$101 = t$100 + t$34
  412.       t$104 = t$103 + t$34
  418.       t$107 = t$106 + t$34
  415.       t$110 = t$109 + t$34
  422.       t$113 = t$112 + t$34
  424.       t$116 = t$115 + t$34
  416.       t$119 = t$118 + t$34
  414.       t$122 = t$121 + t$34
  438.       t$125 = t$124 + t$34
  389.       t$128 = t$127 + t$34
  390.       t$131 = t$130 + t$34
  425.       t$134 = t$133 + t$34
  451.       t$137 = t$136 + t$34
  452.       t$140 = t$139 + t$34
  429.       t$143 = t$142 + t$34
  440.       t$146 = t$145 + t$34
  439.       t$149 = t$148 + t$34
  441.       t$152 = t$151 + t$34
  419.       t$155 = t$154 + t$34
  426.       t$158 = t$157 + t$34
  420.       t$161 = t$160 + t$34
  453.       t$164 = t$163 + t$34
  400.       t$167 = t$166 + t$34
  468.       t$170 = t$169 + t$34
  395.       t$173 = t$172 + t$34
  396.       t$176 = t$175 + t$34
  399.       t$179 = t$178 + t$34
  401.       t$183 = t$182 + t$34
  373.       t$186 = t$185 + t$34
  374.       t$189 = t$188 + t$34
  436.       t$192 = t$191 + t$34
  372.       t$195 = t$194 + t$34
  447.       t$198 = t$197 + t$34
  489.       t$201 = t$200 + t$34
  486.       t$204 = t$203 + t$34
  495.       t$207 = t$206 + t$34
  380.       t$210 = t$209 + t$34
  375.       t$215 = t$214 + t$34
  394.       t$218 = t$217 + t$34
  381.       t$221 = t$220 + t$34
  383.       t$224 = t$223 + t$34
  448.       t$227 = t$226 + t$34
  382.       t$230 = t$229 + t$34
  384.       t$233 = t$232 + t$34
  460.       t$236 = t$235 + t$34
  483.       t$239 = t$238 + t$34
  446.       t$242 = t$241 + t$34
  459.       t$245 = t$244 + t$34
  430.       t$248 = t$247 + t$34
  398.       t$251 = t$250 + t$34
  397.       t$254 = t$253 + t$34
  428.       t$257 = t$256 + t$34
  349.       t$260 = t$259 + t$34
  480.       t$263 = t$262 + t$34
  408.       t$266 = t$265 + t$34
  462.       t$269 = t$268 + t$34
  387.       t$272 = t$271 + t$34
  385.       t$275 = t$274 + t$34
  386.       t$278 = t$277 + t$34
  487.       t$281 = t$280 + t$34
  484.       t$284 = t$283 + t$34
  466.       t$287 = t$286 + t$34
  494.       t$290 = t$289 + t$34
  491.       t$293 = t$292 + t$34
  492.       t$296 = t$295 + t$34
  393.       t$299 = t$298 + t$34
  370.       t$302 = t$301 + t$34
  496.       t$305 = t$304 + t$34
  350.       t$308 = t$307 + t$34
  481.       t$311 = t$310 + t$34
  477.       t$314 = t$313 + t$34
  488.       t$317 = t$316 + t$34
  485.       t$320 = t$319 + t$34
  467.       t$323 = t$322 + t$34
  465.       t$326 = t$325 + t$34
  371.       t$329 = t$328 + t$34
  449.       t$332 = t$331 + t$34
  450.       t$335 = t$334 + t$34
  482.       t$338 = t$337 + t$34
  475.       t$341 = t$340 + t$34
  456.       t$344 = t$343 + t$34
  464.       t$347 = t$346 + t$34
  497.       $F_A33 = ncols
  497.       if ( ncols > 0 ) then
  497.          $I_L497_278 = 0
  497.          do
  497.             $I_L497_144 = 0
  497. !dir$ ivdep
  497.             do
  497.                radt(1 + $I_L497_144, 1 + $I_L497_278) = 0.0
  497.                $I_L497_144 = 1 + $I_L497_144
  497.                if ( $I_L497_144 >= $F_A33 ) exit
  497.             enddo
  497.             $I_L497_278 = 1 + $I_L497_278
  497.             if ( $I_L497_278 >= 2 ) exit
  497.          enddo
  497.       endif
  498.       $F_A34 = ncols
  498.       if ( ncols > 0 ) then
  498.          $I_L498_280 = 0
  498.          do
  498.             $I_L498_146 = 0
  498. !dir$ ivdep
  498.             do
  498.                par(1 + $I_L498_146, 1 + $I_L498_280) = 0.0
  498.                $I_L498_146 = 1 + $I_L498_146
  498.                if ( $I_L498_146 >= $F_A34 ) exit
  498.             enddo
  498.             $I_L498_280 = 1 + $I_L498_280
  498.             if ( $I_L498_280 >= 2 ) exit
  498.          enddo
  498.       endif
  499.       $F_A35 = ncols
  499.       if ( ncols > 0 ) then
  499.          $I_L499_282 = 0
  499.          do
  499.             $I_L499_148 = 0
  499. !dir$ ivdep
  499.             do
  499.                pd(1 + $I_L499_148, 1 + $I_L499_282) = 0.0
  499.                $I_L499_148 = 1 + $I_L499_148
  499.                if ( $I_L499_148 >= $F_A35 ) exit
  499.             enddo
  499.             $I_L499_282 = 1 + $I_L499_282
  499.             if ( $I_L499_282 >= 2 ) exit
  499.          enddo
  499.       endif
  500.       $F_A36 = ncols
  500.       if ( ncols > 0 ) then
  500.          $I_L500_284 = 0
  500.          do
  500.             $I_L500_150 = 0
  500. !dir$ ivdep
  500.             do
  500.                rst(1 + $I_L500_150, 1 + $I_L500_284) = 0.0
  500.                $I_L500_150 = 1 + $I_L500_150
  500.                if ( $I_L500_150 >= $F_A36 ) exit
  500.             enddo
  500.             $I_L500_284 = 1 + $I_L500_284
  500.             if ( $I_L500_284 >= 2 ) exit
  500.          enddo
  500.       endif
  501.       $F_A37 = ncols
  501.       if ( ncols > 0 ) then
  501.          $I_L501_286 = 0
  501.          do
  501.             $I_L501_152 = 0
  501. !dir$ ivdep
  501.             do
  501.                phroot(1 + $I_L501_152, 1 + $I_L501_286) = 0.0
  501.                $I_L501_152 = 1 + $I_L501_152
  501.                if ( $I_L501_152 >= $F_A37 ) exit
  501.             enddo
  501.             $I_L501_286 = 1 + $I_L501_286
  501.             if ( $I_L501_286 >= 2 ) exit
  501.          enddo
  501.       endif
  503.       $F_A38 = ncols
  503.       if ( ncols > 0 ) then
  503.          $I_L503_288 = 0
  503.          do
  503.             $I_L503_154 = 0
  503. !dir$ ivdep
  503.             do
  503.                snow(1 + $I_L503_154, 1 + $I_L503_288) = 0.0
  503.                $I_L503_154 = 1 + $I_L503_154
  503.                if ( $I_L503_154 >= $F_A38 ) exit
  503.             enddo
  503.             $I_L503_288 = 1 + $I_L503_288
  503.             if ( $I_L503_288 >= 2 ) exit
  503.          enddo
  503.       endif
  504.       $F_A39 = ncols
  504.       if ( ncols > 0 ) then
  504.          $I_L504_290 = 0
  504.          do
  504.             $I_L504_156 = 0
  504. !dir$ ivdep
  504.             do
  504.                stm(1 + $I_L504_156, 1 + $I_L504_290) = 0.0
  504.                $I_L504_156 = 1 + $I_L504_156
  504.                if ( $I_L504_156 >= $F_A39 ) exit
  504.             enddo
  504.             $I_L504_290 = 1 + $I_L504_290
  504.             if ( $I_L504_290 >= 2 ) exit
  504.          enddo
  504.       endif
  502.       $F_A40 = ncols
  502.       if ( ncols > 0 ) then
  502.          $I_L502_292 = 0
  502.          do
  502.             $I_L502_158 = 0
  502. !dir$ ivdep
  502.             do
  502.                phsoil(1 + $I_L502_158, 1 + $I_L502_292) = 0.0
  502.                $I_L502_158 = 1 + $I_L502_158
  502.                if ( $I_L502_158 >= $F_A40 ) exit
  502.             enddo
  502.             $I_L502_292 = 1 + $I_L502_292
  502.             if ( $I_L502_292 >= 3 ) exit
  502.          enddo
  502.       endif
  505.       $F_A41 = ncols
  505.       if ( ncols > 0 ) then
  505.          $I_L505_386 = 0
  505.          do
  505.             $I_L505_294 = 0
  505.             do
  505.                $I_L505_160 = 0
  505. !dir$ ivdep
  505.                do
  505.                   radn(1 + $I_L505_160, 1 + $I_L505_294, 1 + $I_L505_386) = 0.0
  505.                   $I_L505_160 = 1 + $I_L505_160
  505.                   if ( $I_L505_160 >= $F_A41 ) exit
  505.                enddo
  505.                $I_L505_294 = 1 + $I_L505_294
  505.                if ( $I_L505_294 >= 3 ) exit
  505.             enddo
  505.             $I_L505_386 = 1 + $I_L505_386
  505.             if ( $I_L505_386 >= 2 ) exit
  505.          enddo
  505.       endif
  509.       $ghl_local_S84 = isgridhistoryon
  518.       $rbyg_S4 = 14.645408163265305 * delsig(1)
  522.       $ncount_S1 = 0
  523.       if ( ncols > 0 ) then
  588.          $SC_sigki_I0 = sigki(1)
  592.          $SC_delsig_I1 = delsig(1)
  523.          $I_L523_108 = 0
  523. !dir$ ivdep
  523.          do
  524.             if ( imask(1 + $I_L523_108) > 0 ) then
  525.                $ncount_S1 = 1 + $ncount_S1
  526.                gmt($ncount_S1, 1) = tmtx(1 + $I_L523_108, 1, 1)
  527.                gmt($ncount_S1, 2) = tmtx(1 + $I_L523_108, 1, 2)
  528.                gmt($ncount_S1, 3) = tmtx(1 + $I_L523_108, 1, 3)
  529.                gmq($ncount_S1, 1) = qmtx(1 + $I_L523_108, 1, 1)
  530.                gmq($ncount_S1, 2) = qmtx(1 + $I_L523_108, 1, 2)
  531.                gmq($ncount_S1, 3) = qmtx(1 + $I_L523_108, 1, 3)
  532.                gmu($ncount_S1, 1) = umtx(1 + $I_L523_108, 1, 1)
  533.                gmu($ncount_S1, 2) = umtx(1 + $I_L523_108, 1, 2)
  534.                gmu($ncount_S1, 3) = umtx(1 + $I_L523_108, 1, 3)
  535.                gmu($ncount_S1, 4) = umtx(1 + $I_L523_108, 1, 4)
  536.                $psur_WR0_R0 = gps(1 + $I_L523_108)
  536.                psur($ncount_S1) = $psur_WR0_R0
  537.                $tm_WR0_R1 = gt(1 + $I_L523_108, 1)
  537.                tm($ncount_S1) = $tm_WR0_R1
  538.                $qm_WR0_R2 = gq(1 + $I_L523_108, 1)
  538.                qm($ncount_S1) = $qm_WR0_R2
  539.                $Flat_S2 = sin( colrad(1 + $I_L523_108) )
  539.                um($ncount_S1) = ( gu(1 + $I_L523_108, 1) * 1.0/$Flat_S2 )
  540.                $Flat_S3 = sin( colrad(1 + $I_L523_108) )
  540.                vm($ncount_S1) = ( gv(1 + $I_L523_108, 1) * 1.0/$Flat_S3 )
  541.                psy($ncount_S1) = 6.4091767467973262e-4 * $psur_WR0_R0
  580.                dzm($ncount_S1) = $rbyg_S4 * $tm_WR0_R1
  584.                em($ncount_S1) = ( $qm_WR0_R2 * $psur_WR0_R0 * 1.0/( 6.22e-1 + $qm_WR0_R2 ) )
  588.                bps($ncount_S1) = $SC_sigki_I0
  592.                psb($ncount_S1) = $SC_delsig_I1 * $psur_WR0_R0
  619.                rhoair($ncount_S1) = ( 3.4837136387388956e-1 * $psur_WR0_R0 * 1.0/$tm_WR0_R1 )
  639.                ztn($ncount_S1) = max( 5.0e-1, ( $rbyg_S4 * ( $tm_WR0_R1 * ( 1.0 + 6.0799999999999998e-1 * $qm_WR0_R2 ) ) ) )
  646.                rcp($ncount_S1) = 349.97387214770947 * ( $psur_WR0_R0 * 1.0/$tm_WR0_R1 )
  646.             endif
  648.             rhi(1 + $I_L523_108) = 9.9999999999999995e-7
  649.             rmi(1 + $I_L523_108) = 9.9999999999999995e-7
  650.             $tvsea_WR0_R5 = gt(1 + $I_L523_108, 1) * ( 1.0 + 6.0799999999999998e-1 * gq(1 + $I_L523_108, 1) )
  651.             ztn2(1 + $I_L523_108) = max( 5.0e-1, ( $rbyg_S4 * $tvsea_WR0_R5 ) )
  653.             $I_L523_108 = 1 + $I_L523_108
  647.             if ( $I_L523_108 >= ncols ) exit
  647.          enddo
  647.       endif
  655.       if ( schemes == 1 ) then
  658.          t$464 = ( max( 0, ncols ) )
  658.          t$468 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  658.          $F_A42 = ncols
  658.          if ( ncols > 0 ) then
  658.             $I_L658_296 = 0
  658.             do
  658.                $I_L658_162 = 0
  658. !dir$ ivdep
  658.                do
  658.                   t$467(1 + $I_L658_162, 1 + $I_L658_296) = gmt(1 + $I_L658_162, 1 + $I_L658_296)
  658.                   $I_L658_162 = 1 + $I_L658_162
  658.                   if ( $I_L658_162 >= $F_A42 ) exit
  658.                enddo
  658.                $I_L658_296 = 1 + $I_L658_296
  658.                if ( $I_L658_296 >= 3 ) exit
  658.             enddo
  658.          endif
  658.          t$470 = ( max( 0, ncols ) )
  658.          t$474 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  658.          $F_A43 = ncols
  658.          if ( ncols > 0 ) then
  658.             $I_L658_298 = 0
  658.             do
  658.                $I_L658_164 = 0
  658. !dir$ ivdep
  658.                do
  658.                   t$473(1 + $I_L658_164, 1 + $I_L658_298) = gmq(1 + $I_L658_164, 1 + $I_L658_298)
  658.                   $I_L658_164 = 1 + $I_L658_164
  658.                   if ( $I_L658_164 >= $F_A43 ) exit
  658.                enddo
  658.                $I_L658_298 = 1 + $I_L658_298
  658.                if ( $I_L658_298 >= 3 ) exit
  658.             enddo
  658.          endif
  659.          t$476 = ( max( 0, ncols ) )
  659.          t$480 = int( _alloc( max( 0, 32 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  659.          $F_A44 = ncols
  659.          if ( ncols > 0 ) then
  659.             $I_L659_300 = 0
  659.             do
  659.                $I_L659_166 = 0
  659. !dir$ ivdep
  659.                do
  659.                   t$479(1 + $I_L659_166, 1 + $I_L659_300) = gmu(1 + $I_L659_166, 1 + $I_L659_300)
  659.                   $I_L659_166 = 1 + $I_L659_166
  659.                   if ( $I_L659_166 >= $F_A44 ) exit
  659.                enddo
  659.                $I_L659_300 = 1 + $I_L659_300
  659.                if ( $I_L659_300 >= 4 ) exit
  659.             enddo
  659.          endif
  671.          t$482 = ( max( 0, ncols ) )
  671.          t$486 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  671.          $F_A45 = ncols
  671.          if ( ncols > 0 ) then
  671.             $I_L671_302 = 0
  671.             do
  671.                $I_L671_168 = 0
  671. !dir$ ivdep
  671.                do
  671.                   t$485(1 + $I_L671_168, 1 + $I_L671_302) = radt(1 + $I_L671_168, 1 + $I_L671_302)
  671.                   $I_L671_168 = 1 + $I_L671_168
  671.                   if ( $I_L671_168 >= $F_A45 ) exit
  671.                enddo
  671.                $I_L671_302 = 1 + $I_L671_302
  671.                if ( $I_L671_302 >= 2 ) exit
  671.             enddo
  671.          endif
  671.          t$488 = ( max( 0, ncols ) )
  671.          t$492 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  671.          $F_A46 = ncols
  671.          if ( ncols > 0 ) then
  671.             $I_L671_304 = 0
  671.             do
  671.                $I_L671_170 = 0
  671. !dir$ ivdep
  671.                do
  671.                   t$491(1 + $I_L671_170, 1 + $I_L671_304) = par(1 + $I_L671_170, 1 + $I_L671_304)
  671.                   $I_L671_170 = 1 + $I_L671_170
  671.                   if ( $I_L671_170 >= $F_A46 ) exit
  671.                enddo
  671.                $I_L671_304 = 1 + $I_L671_304
  671.                if ( $I_L671_304 >= 2 ) exit
  671.             enddo
  671.          endif
  671.          t$494 = ( max( 0, ncols ) )
  671.          t$498 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  671.          $F_A47 = ncols
  671.          if ( ncols > 0 ) then
  671.             $I_L671_306 = 0
  671.             do
  671.                $I_L671_172 = 0
  671. !dir$ ivdep
  671.                do
  671.                   t$497(1 + $I_L671_172, 1 + $I_L671_306) = pd(1 + $I_L671_172, 1 + $I_L671_306)
  671.                   $I_L671_172 = 1 + $I_L671_172
  671.                   if ( $I_L671_172 >= $F_A47 ) exit
  671.                enddo
  671.                $I_L671_306 = 1 + $I_L671_306
  671.                if ( $I_L671_306 >= 2 ) exit
  671.             enddo
  671.          endif
  672.          t$500 = ( max( 0, ncols ) )
  672.          t$504 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  672.          $F_A48 = ncols
  672.          if ( ncols > 0 ) then
  672.             $I_L672_308 = 0
  672.             do
  672.                $I_L672_174 = 0
  672. !dir$ ivdep
  672.                do
  672.                   t$503(1 + $I_L672_174, 1 + $I_L672_308) = rst(1 + $I_L672_174, 1 + $I_L672_308)
  672.                   $I_L672_174 = 1 + $I_L672_174
  672.                   if ( $I_L672_174 >= $F_A48 ) exit
  672.                enddo
  672.                $I_L672_308 = 1 + $I_L672_308
  672.                if ( $I_L672_308 >= 2 ) exit
  672.             enddo
  672.          endif
  672.          t$506 = ( max( 0, ncols ) )
  672.          t$510 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  672.          $F_A49 = ncols
  672.          if ( ncols > 0 ) then
  672.             $I_L672_310 = 0
  672.             do
  672.                $I_L672_176 = 0
  672. !dir$ ivdep
  672.                do
  672.                   t$509(1 + $I_L672_176, 1 + $I_L672_310) = phroot(1 + $I_L672_176, 1 + $I_L672_310)
  672.                   $I_L672_176 = 1 + $I_L672_176
  672.                   if ( $I_L672_176 >= $F_A49 ) exit
  672.                enddo
  672.                $I_L672_310 = 1 + $I_L672_310
  672.                if ( $I_L672_310 >= 2 ) exit
  672.             enddo
  672.          endif
  673.          t$512 = ( max( 0, ncols ) )
  673.          t$516 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  673.          $F_A50 = ncols
  673.          if ( ncols > 0 ) then
  673.             $I_L673_312 = 0
  673.             do
  673.                $I_L673_178 = 0
  673. !dir$ ivdep
  673.                do
  673.                   t$515(1 + $I_L673_178, 1 + $I_L673_312) = phsoil(1 + $I_L673_178, 1 + $I_L673_312)
  673.                   $I_L673_178 = 1 + $I_L673_178
  673.                   if ( $I_L673_178 >= $F_A50 ) exit
  673.                enddo
  673.                $I_L673_312 = 1 + $I_L673_312
  673.                if ( $I_L673_312 >= 3 ) exit
  673.             enddo
  673.          endif
  673.          t$518 = ( max( 0, ncols ) )
  673.          t$522 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  673.          $F_A51 = ncols
  673.          if ( ncols > 0 ) then
  673.             $I_L673_314 = 0
  673.             do
  673.                $I_L673_180 = 0
  673. !dir$ ivdep
  673.                do
  673.                   t$521(1 + $I_L673_180, 1 + $I_L673_314) = satcap(1 + $I_L673_180, 1 + $I_L673_314)
  673.                   $I_L673_180 = 1 + $I_L673_180
  673.                   if ( $I_L673_180 >= $F_A51 ) exit
  673.                enddo
  673.                $I_L673_314 = 1 + $I_L673_314
  673.                if ( $I_L673_314 >= 2 ) exit
  673.             enddo
  673.          endif
  674.          t$524 = ( max( 0, ncols ) )
  674.          t$528 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  674.          $F_A52 = ncols
  674.          if ( ncols > 0 ) then
  674.             $I_L674_316 = 0
  674.             do
  674.                $I_L674_182 = 0
  674. !dir$ ivdep
  674.                do
  674.                   t$527(1 + $I_L674_182, 1 + $I_L674_316) = snow(1 + $I_L674_182, 1 + $I_L674_316)
  674.                   $I_L674_182 = 1 + $I_L674_182
  674.                   if ( $I_L674_182 >= $F_A52 ) exit
  674.                enddo
  674.                $I_L674_316 = 1 + $I_L674_316
  674.                if ( $I_L674_316 >= 2 ) exit
  674.             enddo
  674.          endif
  675.          t$530 = ( max( 0, ncols ) )
  675.          t$534 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  675.          $F_A53 = ncols
  675.          if ( ncols > 0 ) then
  675.             $I_L675_318 = 0
  675.             do
  675.                $I_L675_184 = 0
  675. !dir$ ivdep
  675.                do
  675.                   t$533(1 + $I_L675_184, 1 + $I_L675_318) = stm(1 + $I_L675_184, 1 + $I_L675_318)
  675.                   $I_L675_184 = 1 + $I_L675_184
  675.                   if ( $I_L675_184 >= $F_A53 ) exit
  675.                enddo
  675.                $I_L675_318 = 1 + $I_L675_318
  675.                if ( $I_L675_318 >= 2 ) exit
  675.             enddo
  675.          endif
  675.          t$536 = ( max( 0, ncols ) )
  675.          $t_S5 = ( max( 0, ncols ) )
  675.          t$542 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  675.          $F_A54 = ncols
  675.          if ( ncols > 0 ) then
  675.             $I_L675_414 = 0
  675.             do
  675.                $I_L675_388 = 0
  675.                do
  675.                   $I_L675_320 = 0
  675.                   do
  675.                      $I_L675_186 = 0
  675. !dir$ ivdep
  675.                      do
  675.                         t$541(1 + $I_L675_186, 1 + $I_L675_320, 1 + $I_L675_388, 1 + $I_L675_414) = extk(1 + $I_L675_186, 1 + $I_L675_320, 1 + $I_L675_388, 1 + $I_L675_414)
  675.                         $I_L675_186 = 1 + $I_L675_186
  675.                         if ( $I_L675_186 >= $F_A54 ) exit
  675.                      enddo
  675.                      $I_L675_320 = 1 + $I_L675_320
  675.                      if ( $I_L675_320 >= 2 ) exit
  675.                   enddo
  675.                   $I_L675_388 = 1 + $I_L675_388
  675.                   if ( $I_L675_388 >= 3 ) exit
  675.                enddo
  675.                $I_L675_414 = 1 + $I_L675_414
  675.                if ( $I_L675_414 >= 2 ) exit
  675.             enddo
  675.          endif
  675.          t$544 = ( max( 0, ncols ) )
  675.          $t_S6 = ( max( 0, ncols ) )
  675.          t$550 = int( _alloc( max( 0, 96 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  675.          $F_A55 = ncols
  675.          if ( ncols > 0 ) then
  675.             $I_L675_416 = 0
  675.             do
  675.                $I_L675_390 = 0
  675.                do
  675.                   $I_L675_322 = 0
  675.                   do
  675.                      $I_L675_188 = 0
  675. !dir$ ivdep
  675.                      do
  675.                         t$549(1 + $I_L675_188, 1 + $I_L675_322, 1 + $I_L675_390, 1 + $I_L675_416) = radfac(1 + $I_L675_188, 1 + $I_L675_322, 1 + $I_L675_390, 1 + $I_L675_416)
  675.                         $I_L675_188 = 1 + $I_L675_188
  675.                         if ( $I_L675_188 >= $F_A55 ) exit
  675.                      enddo
  675.                      $I_L675_322 = 1 + $I_L675_322
  675.                      if ( $I_L675_322 >= 2 ) exit
  675.                   enddo
  675.                   $I_L675_390 = 1 + $I_L675_390
  675.                   if ( $I_L675_390 >= 3 ) exit
  675.                enddo
  675.                $I_L675_416 = 1 + $I_L675_416
  675.                if ( $I_L675_416 >= 2 ) exit
  675.             enddo
  675.          endif
  678.          t$552 = ( max( 0, ncols ) )
  678.          t$556 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  678.          $F_A56 = ncols
  678.          if ( ncols > 0 ) then
  678.             $I_L678_324 = 0
  678.             do
  678.                $I_L678_190 = 0
  678. !dir$ ivdep
  678.                do
  678.                   t$555(1 + $I_L678_190, 1 + $I_L678_324) = capac(1 + $I_L678_190, 1 + $I_L678_324)
  678.                   $I_L678_190 = 1 + $I_L678_190
  678.                   if ( $I_L678_190 >= $F_A56 ) exit
  678.                enddo
  678.                $I_L678_324 = 1 + $I_L678_324
  678.                if ( $I_L678_324 >= 2 ) exit
  678.             enddo
  678.          endif
  678.          t$558 = ( max( 0, ncols ) )
  678.          t$562 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  678.          $F_A57 = ncols
  678.          if ( ncols > 0 ) then
  678.             $I_L678_326 = 0
  678.             do
  678.                $I_L678_192 = 0
  678. !dir$ ivdep
  678.                do
  678.                   t$561(1 + $I_L678_192, 1 + $I_L678_326) = w(1 + $I_L678_192, 1 + $I_L678_326)
  678.                   $I_L678_192 = 1 + $I_L678_192
  678.                   if ( $I_L678_192 >= $F_A57 ) exit
  678.                enddo
  678.                $I_L678_326 = 1 + $I_L678_326
  678.                if ( $I_L678_326 >= 3 ) exit
  678.             enddo
  678.          endif
  680.          t$564 = ( max( 0, ncols ) )
  680.          $t_S7 = ( max( 0, ncols ) )
  680.          t$569 = int( _alloc( max( 0, 48 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  680.          $F_A58 = ncols
  680.          if ( ncols > 0 ) then
  680.             $I_L680_392 = 0
  680.             do
  680.                $I_L680_328 = 0
  680.                do
  680.                   $I_L680_194 = 0
  680. !dir$ ivdep
  680.                   do
  680.                      t$568(1 + $I_L680_194, 1 + $I_L680_328, 1 + $I_L680_392) = radn(1 + $I_L680_194, 1 + $I_L680_328, 1 + $I_L680_392)
  680.                      $I_L680_194 = 1 + $I_L680_194
  680.                      if ( $I_L680_194 >= $F_A58 ) exit
  680.                   enddo
  680.                   $I_L680_328 = 1 + $I_L680_328
  680.                   if ( $I_L680_328 >= 3 ) exit
  680.                enddo
  680.                $I_L680_392 = 1 + $I_L680_392
  680.                if ( $I_L680_392 >= 2 ) exit
  680.             enddo
  680.          endif
  682.          t$571 = ( max( 0, ncols ) )
  682.          $t_S8 = ( max( 0, ncols ) )
  682.          t$576 = int( _alloc( max( 0, 32 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  682.          $F_A59 = ncols
  682.          if ( ncols > 0 ) then
  682.             $I_L682_394 = 0
  682.             do
  682.                $I_L682_330 = 0
  682.                do
  682.                   $I_L682_196 = 0
  682. !dir$ ivdep
  682.                   do
  682.                      t$575(1 + $I_L682_196, 1 + $I_L682_330, 1 + $I_L682_394) = salb(1 + $I_L682_196, 1 + $I_L682_330, 1 + $I_L682_394)
  682.                      $I_L682_196 = 1 + $I_L682_196
  682.                      if ( $I_L682_196 >= $F_A59 ) exit
  682.                   enddo
  682.                   $I_L682_330 = 1 + $I_L682_330
  682.                   if ( $I_L682_330 >= 2 ) exit
  682.                enddo
  682.                $I_L682_394 = 1 + $I_L682_394
  682.                if ( $I_L682_394 >= 2 ) exit
  682.             enddo
  682.          endif
  683.          t$578 = ( max( 0, ncols ) )
  683.          t$579 = ( max( 0, kmax ) )
  683.          $t_S9 = ( max( 0, ncols ) )
  683.          t$584 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, ncols ) ) ) * max( 0, ( max( 0, kmax ) ) ) ) ), 8 )
  683.          $F_A60 = kmax
  683.          $F_A61 = ncols
  683.          if ( and( -$F_A61, -$F_A60 ) < 0 ) then
  683.             $I_L683_396 = 0
  683.             do
  683.                $I_L683_332 = 0
  683.                do
  683.                   $I_L683_198 = 0
  683. !dir$ ivdep
  683.                   do
  683.                      t$583(1 + $I_L683_198, 1 + $I_L683_332, 1 + $I_L683_396) = tmtx(1 + $I_L683_198, 1 + $I_L683_332, 1 + $I_L683_396)
  683.                      $I_L683_198 = 1 + $I_L683_198
  683.                      if ( $I_L683_198 >= $F_A61 ) exit
  683.                   enddo
  683.                   $I_L683_332 = 1 + $I_L683_332
  683.                   if ( $I_L683_332 >= $F_A60 ) exit
  683.                enddo
  683.                $I_L683_396 = 1 + $I_L683_396
  683.                if ( $I_L683_396 >= 3 ) exit
  683.             enddo
  683.          endif
  683.          t$586 = ( max( 0, ncols ) )
  683.          t$587 = ( max( 0, kmax ) )
  683.          $t_S10 = ( max( 0, ncols ) )
  683.          t$592 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, ncols ) ) ) * max( 0, ( max( 0, kmax ) ) ) ) ), 8 )
  683.          $F_A62 = kmax
  683.          $F_A63 = ncols
  683.          if ( and( -$F_A63, -$F_A62 ) < 0 ) then
  683.             $I_L683_398 = 0
  683.             do
  683.                $I_L683_334 = 0
  683.                do
  683.                   $I_L683_200 = 0
  683. !dir$ ivdep
  683.                   do
  683.                      t$591(1 + $I_L683_200, 1 + $I_L683_334, 1 + $I_L683_398) = qmtx(1 + $I_L683_200, 1 + $I_L683_334, 1 + $I_L683_398)
  683.                      $I_L683_200 = 1 + $I_L683_200
  683.                      if ( $I_L683_200 >= $F_A63 ) exit
  683.                   enddo
  683.                   $I_L683_334 = 1 + $I_L683_334
  683.                   if ( $I_L683_334 >= $F_A62 ) exit
  683.                enddo
  683.                $I_L683_398 = 1 + $I_L683_398
  683.                if ( $I_L683_398 >= 3 ) exit
  683.             enddo
  683.          endif
  683.          t$594 = ( max( 0, ncols ) )
  683.          t$595 = ( max( 0, kmax ) )
  683.          $t_S11 = ( max( 0, ncols ) )
  683.          t$600 = int( _alloc( max( 0, 32 * max( 0, ( max( 0, ncols ) ) ) * max( 0, ( max( 0, kmax ) ) ) ) ), 8 )
  683.          $F_A64 = kmax
  683.          $F_A65 = ncols
  683.          if ( and( -$F_A65, -$F_A64 ) < 0 ) then
  683.             $I_L683_400 = 0
  683.             do
  683.                $I_L683_336 = 0
  683.                do
  683.                   $I_L683_202 = 0
  683. !dir$ ivdep
  683.                   do
  683.                      t$599(1 + $I_L683_202, 1 + $I_L683_336, 1 + $I_L683_400) = umtx(1 + $I_L683_202, 1 + $I_L683_336, 1 + $I_L683_400)
  683.                      $I_L683_202 = 1 + $I_L683_202
  683.                      if ( $I_L683_202 >= $F_A65 ) exit
  683.                   enddo
  683.                   $I_L683_336 = 1 + $I_L683_336
  683.                   if ( $I_L683_336 >= $F_A64 ) exit
  683.                enddo
  683.                $I_L683_400 = 1 + $I_L683_400
  683.                if ( $I_L683_400 >= 4 ) exit
  683.             enddo
  683.          endif
  684.          t$602 = ( max( 0, ncols ) )
  684.          t$603 = ( max( 0, kmax ) )
  684.          t$607 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ncols ) ) ) * max( 0, ( max( 0, kmax ) ) ) ) ), 8 )
  684.          $F_A66 = kmax
  684.          $F_A67 = ncols
  684.          if ( and( -$F_A67, -$F_A66 ) < 0 ) then
  684.             $I_L684_338 = 0
  684.             do
  684.                $I_L684_204 = 0
  684. !dir$ ivdep
  684.                do
  684.                   t$606(1 + $I_L684_204, 1 + $I_L684_338) = gt(1 + $I_L684_204, 1 + $I_L684_338)
  684.                   $I_L684_204 = 1 + $I_L684_204
  684.                   if ( $I_L684_204 >= $F_A67 ) exit
  684.                enddo
  684.                $I_L684_338 = 1 + $I_L684_338
  684.                if ( $I_L684_338 >= $F_A66 ) exit
  684.             enddo
  684.          endif
  684.          t$609 = ( max( 0, ncols ) )
  684.          t$610 = ( max( 0, kmax ) )
  684.          t$614 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ncols ) ) ) * max( 0, ( max( 0, kmax ) ) ) ) ), 8 )
  684.          $F_A68 = kmax
  684.          $F_A69 = ncols
  684.          if ( and( -$F_A69, -$F_A68 ) < 0 ) then
  684.             $I_L684_340 = 0
  684.             do
  684.                $I_L684_206 = 0
  684. !dir$ ivdep
  684.                do
  684.                   t$613(1 + $I_L684_206, 1 + $I_L684_340) = gq(1 + $I_L684_206, 1 + $I_L684_340)
  684.                   $I_L684_206 = 1 + $I_L684_206
  684.                   if ( $I_L684_206 >= $F_A69 ) exit
  684.                enddo
  684.                $I_L684_340 = 1 + $I_L684_340
  684.                if ( $I_L684_340 >= $F_A68 ) exit
  684.             enddo
  684.          endif
  684.          t$616 = ( max( 0, ncols ) )
  684.          t$617 = ( max( 0, kmax ) )
  684.          t$621 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ncols ) ) ) * max( 0, ( max( 0, kmax ) ) ) ) ), 8 )
  684.          $F_A70 = kmax
  684.          $F_A71 = ncols
  684.          if ( and( -$F_A71, -$F_A70 ) < 0 ) then
  684.             $I_L684_342 = 0
  684.             do
  684.                $I_L684_208 = 0
  684. !dir$ ivdep
  684.                do
  684.                   t$620(1 + $I_L684_208, 1 + $I_L684_342) = gu(1 + $I_L684_208, 1 + $I_L684_342)
  684.                   $I_L684_208 = 1 + $I_L684_208
  684.                   if ( $I_L684_208 >= $F_A71 ) exit
  684.                enddo
  684.                $I_L684_342 = 1 + $I_L684_342
  684.                if ( $I_L684_342 >= $F_A70 ) exit
  684.             enddo
  684.          endif
  684.          t$623 = ( max( 0, ncols ) )
  684.          t$624 = ( max( 0, kmax ) )
  684.          t$628 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, ncols ) ) ) * max( 0, ( max( 0, kmax ) ) ) ) ), 8 )
  684.          $F_A72 = kmax
  684.          $F_A73 = ncols
  684.          if ( and( -$F_A73, -$F_A72 ) < 0 ) then
  684.             $I_L684_344 = 0
  684.             do
  684.                $I_L684_210 = 0
  684. !dir$ ivdep
  684.                do
  684.                   t$627(1 + $I_L684_210, 1 + $I_L684_344) = gv(1 + $I_L684_210, 1 + $I_L684_344)
  684.                   $I_L684_210 = 1 + $I_L684_210
  684.                   if ( $I_L684_210 >= $F_A73 ) exit
  684.                enddo
  684.                $I_L684_344 = 1 + $I_L684_344
  684.                if ( $I_L684_344 >= $F_A72 ) exit
  684.             enddo
  684.          endif
  687.          t$630 = ( max( 0, ncols ) )
  687.          t$634 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  687.          $F_A74 = ncols
  687.          if ( ncols > 0 ) then
  687.             $I_L687_346 = 0
  687.             do
  687.                $I_L687_212 = 0
  687. !dir$ ivdep
  687.                do
  687.                   t$633(1 + $I_L687_212, 1 + $I_L687_346) = wm(1 + $I_L687_212, 1 + $I_L687_346)
  687.                   $I_L687_212 = 1 + $I_L687_212
  687.                   if ( $I_L687_212 >= $F_A74 ) exit
  687.                enddo
  687.                $I_L687_346 = 1 + $I_L687_346
  687.                if ( $I_L687_346 >= 3 ) exit
  687.             enddo
  687.          endif
  689.          t$636 = ( max( 0, ncols ) )
  689.          t$640 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  689.          $F_A75 = ncols
  689.          if ( ncols > 0 ) then
  689.             $I_L689_348 = 0
  689.             do
  689.                $I_L689_214 = 0
  689. !dir$ ivdep
  689.                do
  689.                   t$639(1 + $I_L689_214, 1 + $I_L689_348) = capacm(1 + $I_L689_214, 1 + $I_L689_348)
  689.                   $I_L689_214 = 1 + $I_L689_214
  689.                   if ( $I_L689_214 >= $F_A75 ) exit
  689.                enddo
  689.                $I_L689_348 = 1 + $I_L689_348
  689.                if ( $I_L689_348 >= 2 ) exit
  689.             enddo
  689.          endif
  692.          t$642 = ( max( 0, ncols ) )
  692.          t$646 = int( _alloc( max( 0, 24 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  692.          $F_A76 = ncols
  692.          if ( ncols > 0 ) then
  692.             $I_L692_350 = 0
  692.             do
  692.                $I_L692_216 = 0
  692. !dir$ ivdep
  692.                do
  692.                   t$645(1 + $I_L692_216, 1 + $I_L692_350) = w0(1 + $I_L692_216, 1 + $I_L692_350)
  692.                   $I_L692_216 = 1 + $I_L692_216
  692.                   if ( $I_L692_216 >= $F_A76 ) exit
  692.                enddo
  692.                $I_L692_350 = 1 + $I_L692_350
  692.                if ( $I_L692_350 >= 3 ) exit
  692.             enddo
  692.          endif
  693.          t$648 = ( max( 0, ncols ) )
  693.          t$652 = int( _alloc( max( 0, 16 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  693.          $F_A77 = ncols
  693.          if ( ncols > 0 ) then
  693.             $I_L693_352 = 0
  693.             do
  693.                $I_L693_218 = 0
  693. !dir$ ivdep
  693.                do
  693.                   t$651(1 + $I_L693_218, 1 + $I_L693_352) = capac0(1 + $I_L693_218, 1 + $I_L693_352)
  693.                   $I_L693_218 = 1 + $I_L693_218
  693.                   if ( $I_L693_218 >= $F_A77 ) exit
  693.                enddo
  693.                $I_L693_352 = 1 + $I_L693_352
  693.                if ( $I_L693_352 >= 2 ) exit
  693.             enddo
  693.          endif
  656.          call ssib_driver( jdt, latitu, bps(1), psb(1), dzm(1), em(1), t$467(1, 1), t$473(1, 1), t$479(1, 1), cu(1), cuni(1), ctni(1), ustar(1), cosz(1), sinclt(1), rhoair(1), psy(1), rcp(1), wc(1), wg(1), fc(1), fg(1), hr(1), ect(1), eci(1), egt(1), egi(1), egs(1), ec(1), eg(1), hc(1), hg(1), ecidif(1), egidif(1), ecmass(1), egmass(1), etmass(1), hflux(1), chf(1), shf(1), fluxef(1), roff(1), drag(1), ra(1), rb(1), rd(1), rc(1), rg(1), tcta(1), tgta(1), ta(1), ea(1), etc(1), etg(1), btc(1), btg(1), u2(1), t$485(1, 1), t$491(1, 1), t$497(1, 1), t$503(1, 1), rsoil(1), t$509(1, 1), hrr(1), t$515(1, 1), cc(1), cg(1), t$521(1, 1), t$527(1, 1), dtc(1), dtg(1), dtm(1), dqm(1), t$533(1, 1), t$541(1, 1, 1, 1), t$549(1, 1, 1, 1), closs(1), gloss(1), thermk(1), p1f(1), p2f(1), tc(1), tg(1), td(1), t$555(1, 1), t$561(1, 1), qm(1), tm(1), um(1), vm(1), psur(1), ppc(1), ppl(1), t$568(1, 1, 1), itype(1), dtc3x, mon(1), nmax, ncols, zlwup(1), t$575(1, 1, 1), tgeff(1), nsx(1), t$583(1, 1, 1), t$591(1, 1, 1), t$599(1, 1, 1), t$606(1, 1), t$613(1, 1), t$620(1, 1), t$627(1, 1), gps(1), imask(1), kmax, ktm, initlz, tcm(1), tgm(1), tdm(1), t$633(1, 1), beam_visb(1), beam_visd(1), beam_nirb(1), beam_nird(1), cos2(1), dlwbot(1), t$639(1, 1), td0(1), tg0(1), zenith(1), kt,  _substr(iswrad,1,3),  _substr(ilwrad,1,3), xvisb(1), xvisd(1), xnirb(1), xnird(1), ppli(1), ppci(1), tsea(1), ssib(1), t$645(1, 1), tc0(1), t$651(1, 1), intg, slrad(1), tseam(1), tsurf(1), qsurf(1), colrad(1), sigki(1), delsig(1), sens(1), evap(1), umom(1), vmom(1), zorl(1), rmi(1), rhi(1), cond(1), stor(1), z0x(1), speedm(1), ustarm(1), z0sea(1), rho(1), d(1), qsfc0(1), tsfc0(1), qsfcm(1), tsfcm(1), qsfc(1), tsfc(1), qm0(1), qmm(1), tm0(1), tmm(1), mskant(1) )
  656.          $F_A78 = ncols
  656.          if ( ncols > 0 ) then
  656.             $I_L656_354 = 0
  656.             do
  656.                $I_L656_220 = 0
  656. !dir$ ivdep
  656.                do
  656.                   capac0(1 + $I_L656_220, 1 + $I_L656_354) = t$651(1 + $I_L656_220, 1 + $I_L656_354)
  656.                   $I_L656_220 = 1 + $I_L656_220
  656.                   if ( $I_L656_220 >= $F_A78 ) exit
  656.                enddo
  656.                $I_L656_354 = 1 + $I_L656_354
  656.                if ( $I_L656_354 >= 2 ) exit
  656.             enddo
  656.          endif
  693.          _free( t$652 )
  656.          $F_A79 = ncols
  656.          if ( ncols > 0 ) then
  656.             $I_L656_356 = 0
  656.             do
  656.                $I_L656_222 = 0
  656. !dir$ ivdep
  656.                do
  656.                   w0(1 + $I_L656_222, 1 + $I_L656_356) = t$645(1 + $I_L656_222, 1 + $I_L656_356)
  656.                   $I_L656_222 = 1 + $I_L656_222
  656.                   if ( $I_L656_222 >= $F_A79 ) exit
  656.                enddo
  656.                $I_L656_356 = 1 + $I_L656_356
  656.                if ( $I_L656_356 >= 3 ) exit
  656.             enddo
  656.          endif
  692.          _free( t$646 )
  656.          $F_A80 = ncols
  656.          if ( ncols > 0 ) then
  656.             $I_L656_358 = 0
  656.             do
  656.                $I_L656_224 = 0
  656. !dir$ ivdep
  656.                do
  656.                   capacm(1 + $I_L656_224, 1 + $I_L656_358) = t$639(1 + $I_L656_224, 1 + $I_L656_358)
  656.                   $I_L656_224 = 1 + $I_L656_224
  656.                   if ( $I_L656_224 >= $F_A80 ) exit
  656.                enddo
  656.                $I_L656_358 = 1 + $I_L656_358
  656.                if ( $I_L656_358 >= 2 ) exit
  656.             enddo
  656.          endif
  689.          _free( t$640 )
  656.          $F_A81 = ncols
  656.          if ( ncols > 0 ) then
  656.             $I_L656_360 = 0
  656.             do
  656.                $I_L656_226 = 0
  656. !dir$ ivdep
  656.                do
  656.                   wm(1 + $I_L656_226, 1 + $I_L656_360) = t$633(1 + $I_L656_226, 1 + $I_L656_360)
  656.                   $I_L656_226 = 1 + $I_L656_226
  656.                   if ( $I_L656_226 >= $F_A81 ) exit
  656.                enddo
  656.                $I_L656_360 = 1 + $I_L656_360
  656.                if ( $I_L656_360 >= 3 ) exit
  656.             enddo
  656.          endif
  687.          _free( t$634 )
  684.          _free( t$628 )
  684.          _free( t$621 )
  656.          $F_A82 = kmax
  656.          $F_A83 = ncols
  656.          if ( and( -$F_A83, -$F_A82 ) < 0 ) then
  656.             $I_L656_362 = 0
  656.             do
  656.                $I_L656_228 = 0
  656. !dir$ ivdep
  656.                do
  656.                   gq(1 + $I_L656_228, 1 + $I_L656_362) = t$613(1 + $I_L656_228, 1 + $I_L656_362)
  656.                   $I_L656_228 = 1 + $I_L656_228
  656.                   if ( $I_L656_228 >= $F_A83 ) exit
  656.                enddo
  656.                $I_L656_362 = 1 + $I_L656_362
  656.                if ( $I_L656_362 >= $F_A82 ) exit
  656.             enddo
  656.          endif
  684.          _free( t$614 )
  656.          $F_A84 = kmax
  656.          $F_A85 = ncols
  656.          if ( and( -$F_A85, -$F_A84 ) < 0 ) then
  656.             $I_L656_364 = 0
  656.             do
  656.                $I_L656_230 = 0
  656. !dir$ ivdep
  656.                do
  656.                   gt(1 + $I_L656_230, 1 + $I_L656_364) = t$606(1 + $I_L656_230, 1 + $I_L656_364)
  656.                   $I_L656_230 = 1 + $I_L656_230
  656.                   if ( $I_L656_230 >= $F_A85 ) exit
  656.                enddo
  656.                $I_L656_364 = 1 + $I_L656_364
  656.                if ( $I_L656_364 >= $F_A84 ) exit
  656.             enddo
  656.          endif
  684.          _free( t$607 )
  656.          $F_A86 = kmax
  656.          $F_A87 = ncols
  656.          if ( and( -$F_A87, -$F_A86 ) < 0 ) then
  656.             $I_L656_402 = 0
  656.             do
  656.                $I_L656_366 = 0
  656.                do
  656.                   $I_L656_232 = 0
  656. !dir$ ivdep
  656.                   do
  656.                      umtx(1 + $I_L656_232, 1 + $I_L656_366, 1 + $I_L656_402) = t$599(1 + $I_L656_232, 1 + $I_L656_366, 1 + $I_L656_402)
  656.                      $I_L656_232 = 1 + $I_L656_232
  656.                      if ( $I_L656_232 >= $F_A87 ) exit
  656.                   enddo
  656.                   $I_L656_366 = 1 + $I_L656_366
  656.                   if ( $I_L656_366 >= $F_A86 ) exit
  656.                enddo
  656.                $I_L656_402 = 1 + $I_L656_402
  656.                if ( $I_L656_402 >= 4 ) exit
  656.             enddo
  656.          endif
  683.          _free( t$600 )
  656.          $F_A88 = kmax
  656.          $F_A89 = ncols
  656.          if ( and( -$F_A89, -$F_A88 ) < 0 ) then
  656.             $I_L656_404 = 0
  656.             do
  656.                $I_L656_368 = 0
  656.                do
  656.                   $I_L656_234 = 0
  656. !dir$ ivdep
  656.                   do
  656.                      qmtx(1 + $I_L656_234, 1 + $I_L656_368, 1 + $I_L656_404) = t$591(1 + $I_L656_234, 1 + $I_L656_368, 1 + $I_L656_404)
  656.                      $I_L656_234 = 1 + $I_L656_234
  656.                      if ( $I_L656_234 >= $F_A89 ) exit
  656.                   enddo
  656.                   $I_L656_368 = 1 + $I_L656_368
  656.                   if ( $I_L656_368 >= $F_A88 ) exit
  656.                enddo
  656.                $I_L656_404 = 1 + $I_L656_404
  656.                if ( $I_L656_404 >= 3 ) exit
  656.             enddo
  656.          endif
  683.          _free( t$592 )
  656.          $F_A90 = kmax
  656.          $F_A91 = ncols
  656.          if ( and( -$F_A91, -$F_A90 ) < 0 ) then
  656.             $I_L656_406 = 0
  656.             do
  656.                $I_L656_370 = 0
  656.                do
  656.                   $I_L656_236 = 0
  656. !dir$ ivdep
  656.                   do
  656.                      tmtx(1 + $I_L656_236, 1 + $I_L656_370, 1 + $I_L656_406) = t$583(1 + $I_L656_236, 1 + $I_L656_370, 1 + $I_L656_406)
  656.                      $I_L656_236 = 1 + $I_L656_236
  656.                      if ( $I_L656_236 >= $F_A91 ) exit
  656.                   enddo
  656.                   $I_L656_370 = 1 + $I_L656_370
  656.                   if ( $I_L656_370 >= $F_A90 ) exit
  656.                enddo
  656.                $I_L656_406 = 1 + $I_L656_406
  656.                if ( $I_L656_406 >= 3 ) exit
  656.             enddo
  656.          endif
  683.          _free( t$584 )
  656.          $F_A92 = ncols
  656.          if ( ncols > 0 ) then
  656.             $I_L656_408 = 0
  656.             do
  656.                $I_L656_372 = 0
  656.                do
  656.                   $I_L656_238 = 0
  656. !dir$ ivdep
  656.                   do
  656.                      salb(1 + $I_L656_238, 1 + $I_L656_372, 1 + $I_L656_408) = t$575(1 + $I_L656_238, 1 + $I_L656_372, 1 + $I_L656_408)
  656.                      $I_L656_238 = 1 + $I_L656_238
  656.                      if ( $I_L656_238 >= $F_A92 ) exit
  656.                   enddo
  656.                   $I_L656_372 = 1 + $I_L656_372
  656.                   if ( $I_L656_372 >= 2 ) exit
  656.                enddo
  656.                $I_L656_408 = 1 + $I_L656_408
  656.                if ( $I_L656_408 >= 2 ) exit
  656.             enddo
  656.          endif
  682.          _free( t$576 )
  680.          _free( t$569 )
  656.          $F_A93 = ncols
  656.          if ( ncols > 0 ) then
  656.             $I_L656_374 = 0
  656.             do
  656.                $I_L656_240 = 0
  656. !dir$ ivdep
  656.                do
  656.                   w(1 + $I_L656_240, 1 + $I_L656_374) = t$561(1 + $I_L656_240, 1 + $I_L656_374)
  656.                   $I_L656_240 = 1 + $I_L656_240
  656.                   if ( $I_L656_240 >= $F_A93 ) exit
  656.                enddo
  656.                $I_L656_374 = 1 + $I_L656_374
  656.                if ( $I_L656_374 >= 3 ) exit
  656.             enddo
  656.          endif
  678.          _free( t$562 )
  656.          $F_A94 = ncols
  656.          if ( ncols > 0 ) then
  656.             $I_L656_376 = 0
  656.             do
  656.                $I_L656_242 = 0
  656. !dir$ ivdep
  656.                do
  656.                   capac(1 + $I_L656_242, 1 + $I_L656_376) = t$555(1 + $I_L656_242, 1 + $I_L656_376)
  656.                   $I_L656_242 = 1 + $I_L656_242
  656.                   if ( $I_L656_242 >= $F_A94 ) exit
  656.                enddo
  656.                $I_L656_376 = 1 + $I_L656_376
  656.                if ( $I_L656_376 >= 2 ) exit
  656.             enddo
  656.          endif
  678.          _free( t$556 )
  656.          $F_A95 = ncols
  656.          if ( ncols > 0 ) then
  656.             $I_L656_418 = 0
  656.             do
  656.                $I_L656_410 = 0
  656.                do
  656.                   $I_L656_378 = 0
  656.                   do
  656.                      $I_L656_244 = 0
  656. !dir$ ivdep
  656.                      do
  656.                         radfac(1 + $I_L656_244, 1 + $I_L656_378, 1 + $I_L656_410, 1 + $I_L656_418) = t$549(1 + $I_L656_244, 1 + $I_L656_378, 1 + $I_L656_410, 1 + $I_L656_418)
  656.                         $I_L656_244 = 1 + $I_L656_244
  656.                         if ( $I_L656_244 >= $F_A95 ) exit
  656.                      enddo
  656.                      $I_L656_378 = 1 + $I_L656_378
  656.                      if ( $I_L656_378 >= 2 ) exit
  656.                   enddo
  656.                   $I_L656_410 = 1 + $I_L656_410
  656.                   if ( $I_L656_410 >= 3 ) exit
  656.                enddo
  656.                $I_L656_418 = 1 + $I_L656_418
  656.                if ( $I_L656_418 >= 2 ) exit
  656.             enddo
  656.          endif
  675.          _free( t$550 )
  656.          $F_A96 = ncols
  656.          if ( ncols > 0 ) then
  656.             $I_L656_420 = 0
  656.             do
  656.                $I_L656_412 = 0
  656.                do
  656.                   $I_L656_380 = 0
  656.                   do
  656.                      $I_L656_246 = 0
  656. !dir$ ivdep
  656.                      do
  656.                         extk(1 + $I_L656_246, 1 + $I_L656_380, 1 + $I_L656_412, 1 + $I_L656_420) = t$541(1 + $I_L656_246, 1 + $I_L656_380, 1 + $I_L656_412, 1 + $I_L656_420)
  656.                         $I_L656_246 = 1 + $I_L656_246
  656.                         if ( $I_L656_246 >= $F_A96 ) exit
  656.                      enddo
  656.                      $I_L656_380 = 1 + $I_L656_380
  656.                      if ( $I_L656_380 >= 2 ) exit
  656.                   enddo
  656.                   $I_L656_412 = 1 + $I_L656_412
  656.                   if ( $I_L656_412 >= 3 ) exit
  656.                enddo
  656.                $I_L656_420 = 1 + $I_L656_420
  656.                if ( $I_L656_420 >= 2 ) exit
  656.             enddo
  656.          endif
  675.          _free( t$542 )
  675.          _free( t$534 )
  674.          _free( t$528 )
  656.          $F_A97 = ncols
  656.          if ( ncols > 0 ) then
  656.             $I_L656_382 = 0
  656.             do
  656.                $I_L656_248 = 0
  656. !dir$ ivdep
  656.                do
  656.                   satcap(1 + $I_L656_248, 1 + $I_L656_382) = t$521(1 + $I_L656_248, 1 + $I_L656_382)
  656.                   $I_L656_248 = 1 + $I_L656_248
  656.                   if ( $I_L656_248 >= $F_A97 ) exit
  656.                enddo
  656.                $I_L656_382 = 1 + $I_L656_382
  656.                if ( $I_L656_382 >= 2 ) exit
  656.             enddo
  656.          endif
  673.          _free( t$522 )
  673.          _free( t$516 )
  672.          _free( t$510 )
  672.          _free( t$504 )
  671.          _free( t$498 )
  671.          _free( t$492 )
  656.          $F_A98 = ncols
  656.          if ( ncols > 0 ) then
  656.             $I_L656_384 = 0
  656.             do
  656.                $I_L656_250 = 0
  656. !dir$ ivdep
  656.                do
  656.                   radt(1 + $I_L656_250, 1 + $I_L656_384) = t$485(1 + $I_L656_250, 1 + $I_L656_384)
  656.                   $I_L656_250 = 1 + $I_L656_250
  656.                   if ( $I_L656_250 >= $F_A98 ) exit
  656.                enddo
  656.                $I_L656_384 = 1 + $I_L656_384
  656.                if ( $I_L656_384 >= 2 ) exit
  656.             enddo
  656.          endif
  671.          _free( t$486 )
  659.          _free( t$480 )
  658.          _free( t$474 )
  658.          _free( t$468 )
  658.       endif
  704.       if ( schemes == 2 ) then
  705.          _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'ERROR schemes 2', 0x800600000000L ) ) )
  705.       endif
  710.       $ncount_S13 = 0
  711.       if ( ncols > 0 ) then
  711.          $I_L711_110 = 0
  711. !dir$ ivdep
  711.          do
  712.             if ( imask(1 + $I_L711_110) > 0 ) then
  713.                $ncount_S13 = 1 + $ncount_S13
  714.                htdisp(1 + $I_L711_110) = d($ncount_S13)
  715.                qsfc0(1 + $I_L711_110) = max( 9.9999999999999998e-13, qm0($ncount_S13) )
  716.                qsfcm(1 + $I_L711_110) = max( 9.9999999999999998e-13, qmm($ncount_S13) )
  717.                tsfc0(1 + $I_L711_110) = tm0($ncount_S13)
  718.                tsfcm(1 + $I_L711_110) = tmm($ncount_S13)
  719.                qm($ncount_S13) = gq(1 + $I_L711_110, 1)
  720.                tm($ncount_S13) = gt(1 + $I_L711_110, 1)
  720.             endif
  722.             $Flat_S15 = sin( colrad(1 + $I_L711_110) )
  722.             $Flat_S14 = sin( colrad(1 + $I_L711_110) )
  722.             $speedm_WR0_R6 = _sqrt( ( gv(1 + $I_L711_110, 1) * 1.0/$Flat_S14 ) * ( gv(1 + $I_L711_110, 1) * 1.0/$Flat_S14 ) + ( gu(1 + $I_L711_110, 1) * 1.0/$Flat_S15 ) * ( gu(1 + $I_L711_110, 1) * 1.0/$Flat_S15 ) )
  723.             $speedm_WR0_R6 = max( 2.0, $speedm_WR0_R6 )
  723.             speedm(1 + $I_L711_110) = $speedm_WR0_R6
  724.             $I_L711_110 = 1 + $I_L711_110
  721.             if ( $I_L711_110 >= ncols ) exit
  721.          enddo
  721.       endif
  725.       znew = 2.0
  726.       $F_A99 = ncols
  726.       if ( ncols > 0 ) then
  726.          $I_L726_252 = 0
  726. !dir$ ivdep
  726.          do
  726.             theta2m(1 + $I_L726_252) = 0.0
  726.             $I_L726_252 = 1 + $I_L726_252
  726.             if ( $I_L726_252 >= $F_A99 ) exit
  726.          enddo
  726.       endif
  727.       $F_A100 = ncols
  727.       if ( ncols > 0 ) then
  727.          $I_L727_254 = 0
  727. !dir$ ivdep
  727.          do
  727.             velc2m(1 + $I_L727_254) = 0.0
  727.             $I_L727_254 = 1 + $I_L727_254
  727.             if ( $I_L727_254 >= $F_A100 ) exit
  727.          enddo
  727.       endif
  728.       $F_A101 = ncols
  728.       if ( ncols > 0 ) then
  728.          $I_L728_256 = 0
  728. !dir$ ivdep
  728.          do
  728.             q2m(1 + $I_L728_256) = 0.0
  728.             $I_L728_256 = 1 + $I_L728_256
  728.             if ( $I_L728_256 >= $F_A101 ) exit
  728.          enddo
  728.       endif
  730.       call calc2mland( nmax, nmax, dtc3x, ustar(1), tm(1), tm0(1), tg(1), qm(1), qm0(1), um(1), vm(1), hc(1), hg(1), ec(1), eg(1), bps(1), ztn(1), z0x(1), rhoair(1), hr(1), ta(1), ea(1), etc(1), etg(1), psur(1), d(1), znew, theta2m(1), velc2m(1), q2m(1) )
  735.       znew = 10.0
  736.       $F_A102 = ncols
  736.       if ( ncols > 0 ) then
  736.          $I_L736_258 = 0
  736. !dir$ ivdep
  736.          do
  736.             theta10m(1 + $I_L736_258) = 0.0
  736.             $I_L736_258 = 1 + $I_L736_258
  736.             if ( $I_L736_258 >= $F_A102 ) exit
  736.          enddo
  736.       endif
  737.       $F_A103 = ncols
  737.       if ( ncols > 0 ) then
  737.          $I_L737_260 = 0
  737. !dir$ ivdep
  737.          do
  737.             velc10m(1 + $I_L737_260) = 0.0
  737.             $I_L737_260 = 1 + $I_L737_260
  737.             if ( $I_L737_260 >= $F_A103 ) exit
  737.          enddo
  737.       endif
  738.       $F_A104 = ncols
  738.       if ( ncols > 0 ) then
  738.          $I_L738_262 = 0
  738. !dir$ ivdep
  738.          do
  738.             q10m(1 + $I_L738_262) = 0.0
  738.             $I_L738_262 = 1 + $I_L738_262
  738.             if ( $I_L738_262 >= $F_A104 ) exit
  738.          enddo
  738.       endif
  739.       call calc2mland( nmax, nmax, dtc3x, ustar(1), tm(1), tm0(1), tg(1), qm(1), qm0(1), um(1), vm(1), hc(1), hg(1), ec(1), eg(1), bps(1), ztn(1), z0x(1), rhoair(1), hr(1), ta(1), ea(1), etc(1), etg(1), psur(1), d(1), znew, theta10m(1), velc10m(1), q10m(1) )
  746.       dtc3xi = 1.0/dtc3x
  747.       $ncount_S17 = 0
  748.       if ( ncols > 0 ) then
  748.          $I_L748_112 = 0
  748. !dir$ ivdep
  748.          do
  749.             if ( imask(1 + $I_L748_112) > 0 ) then
  750.                $ncount_S17 = 1 + $ncount_S17
  751.                if ( mskant(1 + $I_L748_112) /= 1 ) then
  752.                   ustarm(1 + $I_L748_112) = ustar($ncount_S17)
  753.                   sens(1 + $I_L748_112) = dtc3xi * ( hg($ncount_S17) + hc($ncount_S17) )
  754.                   evap(1 + $I_L748_112) = dtc3xi * ( eg($ncount_S17) + ec($ncount_S17) )
  755.                   z0sea(1 + $I_L748_112) = z0x($ncount_S17)
  756.                   rho(1 + $I_L748_112) = rhoair($ncount_S17)
  756.                endif
  756.             endif
  759.             $I_L748_112 = 1 + $I_L748_112
  758.             if ( $I_L748_112 >= ncols ) exit
  758.          enddo
  758.       endif
  762.       $F_A105 = ncols
  762.       if ( ncols > 0 ) then
  762.          $I_L762_264 = 0
  762. !dir$ ivdep
  762.          do
  762.             temp2m(1 + $I_L762_264) = 0.0
  762.             $I_L762_264 = 1 + $I_L762_264
  762.             if ( $I_L762_264 >= $F_A105 ) exit
  762.          enddo
  762.       endif
  763.       $F_A106 = ncols
  763.       if ( ncols > 0 ) then
  763.          $I_L763_266 = 0
  763. !dir$ ivdep
  763.          do
  763.             velc_2m(1 + $I_L763_266) = 0.0
  763.             $I_L763_266 = 1 + $I_L763_266
  763.             if ( $I_L763_266 >= $F_A106 ) exit
  763.          enddo
  763.       endif
  764.       $F_A107 = ncols
  764.       if ( ncols > 0 ) then
  764.          $I_L764_268 = 0
  764. !dir$ ivdep
  764.          do
  764.             umes2m(1 + $I_L764_268) = 0.0
  764.             $I_L764_268 = 1 + $I_L764_268
  764.             if ( $I_L764_268 >= $F_A107 ) exit
  764.          enddo
  764.       endif
  765.       tm$278 = loc( gt(1, 1) )
  765.       gt = _copyin( gt(1, 1) )
  765.       tm$280 = loc( gq(1, 1) )
  765.       gq = _copyin( gq(1, 1) )
  765.       t$12 = ncols
  765.       t$442 = max( 0, ncols )
  765.       t$445 = 8 * max( 0, ncols )
  765.       t$446 = 8 * ( 7 + 8 * max( 0, ncols ) ) / 8
  765.       t$448 = t$446 + 8 * max( 0, ncols )
  765.       t$449 = 8 * ( 7 + t$446 + 8 * max( 0, ncols ) ) / 8
  765.       t$451 = t$449 + 8 * max( 0, ncols )
  765.       t$452 = 8 * ( 7 + t$449 + 8 * max( 0, ncols ) ) / 8
  765.       t$454 = t$452 + 8 * max( 0, ncols )
  765.       t$443 = int( _alloc( t$452 + 8 * max( 0, ncols ) ), 8 )
  765.       t$444 = t$443
  765.       t$447 = t$446 + t$443
  765.       t$450 = t$449 + t$443
  765.       t$453 = t$452 + t$443
  765.       if ( ncols > 0 ) then
  765.          $SC_sigki_I0 = sigki(1)
  765.          $I_L765_114 = 0
  765. !dir$ ivdep
  765.          do
  765.             thetac(1 + $I_L765_114) = tsurf(1 + $I_L765_114)
  765.             thetam(1 + $I_L765_114) = $SC_sigki_I0 * gt(1 + $I_L765_114)
  765.             tstar(1 + $I_L765_114) = -( 9.9542106310969544e-4 * sens(1 + $I_L765_114) * 1.0/( ustarm(1 + $I_L765_114) * rho(1 + $I_L765_114) ) )
  765.             qstar(1 + $I_L765_114) = -( 3.9682539682539683e-7 * evap(1 + $I_L765_114) * 1.0/( ustarm(1 + $I_L765_114) * rho(1 + $I_L765_114) ) )
  765.             $I_L765_114 = 1 + $I_L765_114
  765.             if ( $I_L765_114 >= ncols ) exit
  765.          enddo
  765.          $I_L765_116 = 0
  765. !dir$ ivdep
  765.          do
  765.             $z0_S21 = z0sea(1 + $I_L765_116)
  765.             $spd_S20 = max( 2.5e-1, speedm(1 + $I_L765_116) )
  765.             $rib_S22 = ( 19.600000000000001 * ztn2(1 + $I_L765_116) * ( thetam(1 + $I_L765_116) + -thetac(1 + $I_L765_116) ) * 1.0/( $spd_S20 * $spd_S20 * ( thetac(1 + $I_L765_116) + thetam(1 + $I_L765_116) ) ) )
  765.             $a2_S23 = ( 4.0000000000000002e-1 * 1.0/log( ( 2.0 * 1.0/$z0_S21 ) ) ) * ( 4.0000000000000002e-1 * 1.0/log( ( 2.0 * 1.0/$z0_S21 ) ) )
  765.             if ( $rib_S22 > 0.0 ) then
  765.                $rtemp_S24 = thetac(1 + $I_L765_116) + -( ( 6.6666666666666666e-2 * 1.0/( $rib_S22 * _sqrt( 1.0 + 5.0 * $rib_S22 ) ) ) * ( 1.0 + 15.0 * $rib_S22 * _sqrt( 1.0 + 5.0 * $rib_S22 ) ) * ( 1.0/( $spd_S20 * $a2_S23 ) * ( 40.0 * tstar(1 + $I_L765_116) * ustarm(1 + $I_L765_116) ) ) )
  765.                $rtemp_S26 = min( thetam(1 + $I_L765_116), max( $rtemp_S24, thetac(1 + $I_L765_116) ) )
  765.             else
  765.                $rtemp_S25 = thetac(1 + $I_L765_116) + ( 1.0/( ( $spd_S20 * $a2_S23 ) * ( 1.0 + -( ( 10.0 * $rib_S22 ) * 1.0/( 1.0 + 75.0 * $a2_S23 * _sqrt( 2.0 * 1.0/$z0_S21 * abs( $rib_S22 ) ) ) ) ) ) * ( 40.0 * tstar(1 + $I_L765_116) * ustarm(1 + $I_L765_116) ) )
  765.                $rtemp_S26 = max( thetam(1 + $I_L765_116), min( $rtemp_S25, thetac(1 + $I_L765_116) ) )
  765.             endif
  765.             temp2m(1 + $I_L765_116) = $rtemp_S26
  765.             $I_L765_116 = 1 + $I_L765_116
  765.             if ( $I_L765_116 >= ncols ) exit
  765.          enddo
  765.          $I_L765_118 = 0
  765. !dir$ ivdep
  765.          do
  765.             $z0_S29 = z0sea(1 + $I_L765_118)
  765.             $spd_S28 = max( 2.5e-1, speedm(1 + $I_L765_118) )
  765.             $rib_S30 = ( 9.8000000000000007 * ztn2(1 + $I_L765_118) * ( thetam(1 + $I_L765_118) + -thetac(1 + $I_L765_118) ) * 1.0/( $spd_S28 * $spd_S28 * thetam(1 + $I_L765_118) ) )
  765.             $a2_S31 = ( 4.0000000000000002e-1 * 1.0/log( ( 2.0 * 1.0/$z0_S29 ) ) ) * ( 4.0000000000000002e-1 * 1.0/log( ( 2.0 * 1.0/$z0_S29 ) ) )
  765.             if ( $rib_S30 > 0.0 ) then
  765.                $rwind_S32 = _sqrt( 1.0/( $a2_S31 * ( 1.0 + -( _sqrt( 1.0 + 5.0 * $rib_S30 ) * 1.0/( _sqrt( 1.0 + 5.0 * $rib_S30 ) + 10.0 * $rib_S30 ) ) ) ) * ( 120.0 * ustarm(1 + $I_L765_118) * ustarm(1 + $I_L765_118) ) )
  765.             else
  765.                $rwind_S32 = _sqrt( 1.0/( $a2_S31 * ( 1.0 + -( ( 10.0 * $rib_S30 ) * 1.0/( 1.0 + 75.0 * $a2_S31 * _sqrt( 2.0 * 1.0/$z0_S29 * abs( $rib_S30 ) ) ) ) ) ) * ( 120.0 * ustarm(1 + $I_L765_118) * ustarm(1 + $I_L765_118) ) )
  765.             endif
  765.             $rwind_S33 = max( 0.0, min( $rwind_S32, speedm(1 + $I_L765_118) ) )
  765.             velc_2m(1 + $I_L765_118) = $rwind_S33
  765.             $I_L765_118 = 1 + $I_L765_118
  765.             if ( $I_L765_118 >= ncols ) exit
  765.          enddo
  765.          $I_L765_120 = 0
  765. !dir$ ivdep
  765.          do
  765.             $z0_S36 = z0sea(1 + $I_L765_120)
  765.             $spd_S35 = max( 2.5e-1, speedm(1 + $I_L765_120) )
  765.             $rib_S37 = ( 19.600000000000001 * ztn2(1 + $I_L765_120) * ( thetam(1 + $I_L765_120) + -thetac(1 + $I_L765_120) ) * 1.0/( $spd_S35 * $spd_S35 * ( thetac(1 + $I_L765_120) + thetam(1 + $I_L765_120) ) ) )
  765.             $a2_S38 = ( 4.0000000000000002e-1 * 1.0/log( ( 2.0 * 1.0/$z0_S36 ) ) ) * ( 4.0000000000000002e-1 * 1.0/log( ( 2.0 * 1.0/$z0_S36 ) ) )
  765.             if ( $rib_S37 > 0.0 ) then
  765.                $rmoist_S39 = qsurf(1 + $I_L765_120) + -( ( 6.6666666666666666e-2 * 1.0/( $rib_S37 * _sqrt( 1.0 + 5.0 * $rib_S37 ) ) ) * ( 1.0 + 15.0 * $rib_S37 * _sqrt( 1.0 + 5.0 * $rib_S37 ) ) * ( 1.0/( $spd_S35 * $a2_S38 ) * ( 35.0 * qstar(1 + $I_L765_120) * ustarm(1 + $I_L765_120) ) ) )
  765.                $rmoist_S41 = min( gq(1 + $I_L765_120), max( $rmoist_S39, qsurf(1 + $I_L765_120) ) )
  765.             else
  765.                $rmoist_S40 = qsurf(1 + $I_L765_120) + ( 1.0/( 1.0 + -( ( 10.0 * $rib_S37 ) * 1.0/( 1.0 + 75.0 * $a2_S38 * _sqrt( 2.0 * 1.0/$z0_S36 * abs( $rib_S37 ) ) ) ) ) * ( 1.0/( $spd_S35 * $a2_S38 ) * ( 35.0 * qstar(1 + $I_L765_120) * ustarm(1 + $I_L765_120) ) ) )
  765.                $rmoist_S41 = max( gq(1 + $I_L765_120), min( $rmoist_S40, qsurf(1 + $I_L765_120) ) )
  765.             endif
  765.             umes2m(1 + $I_L765_120) = $rmoist_S41
  765.             $I_L765_120 = 1 + $I_L765_120
  765.             if ( $I_L765_120 >= ncols ) exit
  765.          enddo
  765.          $SC_sigki_I0 = sigki(1)
  765.          $I_L765_122 = 0
  765. !dir$ ivdep
  765.          do
  765.             temp2m(1 + $I_L765_122) = ( temp2m(1 + $I_L765_122) * 1.0/$SC_sigki_I0 )
  765.             $I_L765_122 = 1 + $I_L765_122
  765.             if ( $I_L765_122 >= ncols ) exit
  765.          enddo
  765.       endif
  765.       t$13 = ncols
  765.       t$455 = max( 0, ncols )
  765.       t$14 = ncols
  765.       t$456 = max( 0, ncols )
  765.       t$15 = ncols
  765.       t$457 = max( 0, ncols )
  765.       _free( t$443 )
  765.       gq(1, 1) = _copyout( gq )
  765.       gt(1, 1) = _copyout( gt )
  770.       $F_A108 = ncols
  770.       if ( ncols > 0 ) then
  770.          $I_L770_270 = 0
  770. !dir$ ivdep
  770.          do
  770.             theta_10m(1 + $I_L770_270) = 0.0
  770.             $I_L770_270 = 1 + $I_L770_270
  770.             if ( $I_L770_270 >= $F_A108 ) exit
  770.          enddo
  770.       endif
  771.       $F_A109 = ncols
  771.       if ( ncols > 0 ) then
  771.          $I_L771_272 = 0
  771. !dir$ ivdep
  771.          do
  771.             velc_10m(1 + $I_L771_272) = 0.0
  771.             $I_L771_272 = 1 + $I_L771_272
  771.             if ( $I_L771_272 >= $F_A109 ) exit
  771.          enddo
  771.       endif
  772.       $F_A110 = ncols
  772.       if ( ncols > 0 ) then
  772.          $I_L772_274 = 0
  772. !dir$ ivdep
  772.          do
  772.             mixq_10m(1 + $I_L772_274) = 0.0
  772.             $I_L772_274 = 1 + $I_L772_274
  772.             if ( $I_L772_274 >= $F_A110 ) exit
  772.          enddo
  772.       endif
  773.       tm$324 = loc( gt(1, 1) )
  773.       gt = _copyin( gt(1, 1) )
  773.       tm$326 = loc( gq(1, 1) )
  773.       gq = _copyin( gq(1, 1) )
  773.       t$12 = ncols
  773.       t$442 = max( 0, ncols )
  773.       t$445 = 8 * max( 0, ncols )
  773.       t$446 = 8 * ( 7 + 8 * max( 0, ncols ) ) / 8
  773.       t$448 = t$446 + 8 * max( 0, ncols )
  773.       t$449 = 8 * ( 7 + t$446 + 8 * max( 0, ncols ) ) / 8
  773.       t$451 = t$449 + 8 * max( 0, ncols )
  773.       t$452 = 8 * ( 7 + t$449 + 8 * max( 0, ncols ) ) / 8
  773.       t$454 = t$452 + 8 * max( 0, ncols )
  773.       t$443 = int( _alloc( t$452 + 8 * max( 0, ncols ) ), 8 )
  773.       t$444 = t$443
  773.       t$447 = t$446 + t$443
  773.       t$450 = t$449 + t$443
  773.       t$453 = t$452 + t$443
  773.       if ( ncols > 0 ) then
  773.          $SC_sigki_I0 = sigki(1)
  773.          $I_L773_124 = 0
  773. !dir$ ivdep
  773.          do
  773.             thetac(1 + $I_L773_124) = tsurf(1 + $I_L773_124)
  773.             thetam(1 + $I_L773_124) = $SC_sigki_I0 * gt(1 + $I_L773_124)
  773.             tstar(1 + $I_L773_124) = -( 9.9542106310969544e-4 * sens(1 + $I_L773_124) * 1.0/( ustarm(1 + $I_L773_124) * rho(1 + $I_L773_124) ) )
  773.             qstar(1 + $I_L773_124) = -( 3.9682539682539683e-7 * evap(1 + $I_L773_124) * 1.0/( ustarm(1 + $I_L773_124) * rho(1 + $I_L773_124) ) )
  773.             $I_L773_124 = 1 + $I_L773_124
  773.             if ( $I_L773_124 >= ncols ) exit
  773.          enddo
  773.          $I_L773_126 = 0
  773. !dir$ ivdep
  773.          do
  773.             $z0_S46 = z0sea(1 + $I_L773_126)
  773.             $spd_S45 = max( 2.5e-1, speedm(1 + $I_L773_126) )
  773.             $rib_S47 = ( 19.600000000000001 * ztn2(1 + $I_L773_126) * ( thetam(1 + $I_L773_126) + -thetac(1 + $I_L773_126) ) * 1.0/( $spd_S45 * $spd_S45 * ( thetac(1 + $I_L773_126) + thetam(1 + $I_L773_126) ) ) )
  773.             $a2_S48 = ( 4.0000000000000002e-1 * 1.0/log( ( 10.0 * 1.0/$z0_S46 ) ) ) * ( 4.0000000000000002e-1 * 1.0/log( ( 10.0 * 1.0/$z0_S46 ) ) )
  773.             if ( $rib_S47 > 0.0 ) then
  773.                $rtemp_S49 = thetac(1 + $I_L773_126) + -( ( 6.6666666666666666e-2 * 1.0/( $rib_S47 * _sqrt( 1.0 + 5.0 * $rib_S47 ) ) ) * ( 1.0 + 15.0 * $rib_S47 * _sqrt( 1.0 + 5.0 * $rib_S47 ) ) * ( 1.0/( $spd_S45 * $a2_S48 ) * ( 40.0 * tstar(1 + $I_L773_126) * ustarm(1 + $I_L773_126) ) ) )
  773.                $rtemp_S51 = min( thetam(1 + $I_L773_126), max( $rtemp_S49, thetac(1 + $I_L773_126) ) )
  773.             else
  773.                $rtemp_S50 = thetac(1 + $I_L773_126) + ( 1.0/( ( $spd_S45 * $a2_S48 ) * ( 1.0 + -( ( 10.0 * $rib_S47 ) * 1.0/( 1.0 + 75.0 * $a2_S48 * _sqrt( 10.0 * 1.0/$z0_S46 * abs( $rib_S47 ) ) ) ) ) ) * ( 40.0 * tstar(1 + $I_L773_126) * ustarm(1 + $I_L773_126) ) )
  773.                $rtemp_S51 = max( thetam(1 + $I_L773_126), min( $rtemp_S50, thetac(1 + $I_L773_126) ) )
  773.             endif
  773.             theta_10m(1 + $I_L773_126) = $rtemp_S51
  773.             $I_L773_126 = 1 + $I_L773_126
  773.             if ( $I_L773_126 >= ncols ) exit
  773.          enddo
  773.          $I_L773_128 = 0
  773. !dir$ ivdep
  773.          do
  773.             $z0_S54 = z0sea(1 + $I_L773_128)
  773.             $spd_S53 = max( 2.5e-1, speedm(1 + $I_L773_128) )
  773.             $rib_S55 = ( 9.8000000000000007 * ztn2(1 + $I_L773_128) * ( thetam(1 + $I_L773_128) + -thetac(1 + $I_L773_128) ) * 1.0/( $spd_S53 * $spd_S53 * thetam(1 + $I_L773_128) ) )
  773.             $a2_S56 = ( 4.0000000000000002e-1 * 1.0/log( ( 10.0 * 1.0/$z0_S54 ) ) ) * ( 4.0000000000000002e-1 * 1.0/log( ( 10.0 * 1.0/$z0_S54 ) ) )
  773.             if ( $rib_S55 > 0.0 ) then
  773.                $rwind_S57 = _sqrt( 1.0/( $a2_S56 * ( 1.0 + -( _sqrt( 1.0 + 5.0 * $rib_S55 ) * 1.0/( _sqrt( 1.0 + 5.0 * $rib_S55 ) + 10.0 * $rib_S55 ) ) ) ) * ( 120.0 * ustarm(1 + $I_L773_128) * ustarm(1 + $I_L773_128) ) )
  773.             else
  773.                $rwind_S57 = _sqrt( 1.0/( $a2_S56 * ( 1.0 + -( ( 10.0 * $rib_S55 ) * 1.0/( 1.0 + 75.0 * $a2_S56 * _sqrt( 10.0 * 1.0/$z0_S54 * abs( $rib_S55 ) ) ) ) ) ) * ( 120.0 * ustarm(1 + $I_L773_128) * ustarm(1 + $I_L773_128) ) )
  773.             endif
  773.             $rwind_S58 = max( 0.0, min( $rwind_S57, speedm(1 + $I_L773_128) ) )
  773.             velc_10m(1 + $I_L773_128) = $rwind_S58
  773.             $I_L773_128 = 1 + $I_L773_128
  773.             if ( $I_L773_128 >= ncols ) exit
  773.          enddo
  773.          $I_L773_130 = 0
  773. !dir$ ivdep
  773.          do
  773.             $z0_S61 = z0sea(1 + $I_L773_130)
  773.             $spd_S60 = max( 2.5e-1, speedm(1 + $I_L773_130) )
  773.             $rib_S62 = ( 19.600000000000001 * ztn2(1 + $I_L773_130) * ( thetam(1 + $I_L773_130) + -thetac(1 + $I_L773_130) ) * 1.0/( $spd_S60 * $spd_S60 * ( thetac(1 + $I_L773_130) + thetam(1 + $I_L773_130) ) ) )
  773.             $a2_S63 = ( 4.0000000000000002e-1 * 1.0/log( ( 10.0 * 1.0/$z0_S61 ) ) ) * ( 4.0000000000000002e-1 * 1.0/log( ( 10.0 * 1.0/$z0_S61 ) ) )
  773.             if ( $rib_S62 > 0.0 ) then
  773.                $rmoist_S64 = qsurf(1 + $I_L773_130) + -( ( 6.6666666666666666e-2 * 1.0/( $rib_S62 * _sqrt( 1.0 + 5.0 * $rib_S62 ) ) ) * ( 1.0 + 15.0 * $rib_S62 * _sqrt( 1.0 + 5.0 * $rib_S62 ) ) * ( 1.0/( $spd_S60 * $a2_S63 ) * ( 35.0 * qstar(1 + $I_L773_130) * ustarm(1 + $I_L773_130) ) ) )
  773.                $rmoist_S66 = min( gq(1 + $I_L773_130), max( $rmoist_S64, qsurf(1 + $I_L773_130) ) )
  773.             else
  773.                $rmoist_S65 = qsurf(1 + $I_L773_130) + ( 1.0/( 1.0 + -( ( 10.0 * $rib_S62 ) * 1.0/( 1.0 + 75.0 * $a2_S63 * _sqrt( 10.0 * 1.0/$z0_S61 * abs( $rib_S62 ) ) ) ) ) * ( 1.0/( $spd_S60 * $a2_S63 ) * ( 35.0 * qstar(1 + $I_L773_130) * ustarm(1 + $I_L773_130) ) ) )
  773.                $rmoist_S66 = max( gq(1 + $I_L773_130), min( $rmoist_S65, qsurf(1 + $I_L773_130) ) )
  773.             endif
  773.             mixq_10m(1 + $I_L773_130) = $rmoist_S66
  773.             $I_L773_130 = 1 + $I_L773_130
  773.             if ( $I_L773_130 >= ncols ) exit
  773.          enddo
  773.          $SC_sigki_I0 = sigki(1)
  773.          $I_L773_132 = 0
  773. !dir$ ivdep
  773.          do
  773.             theta_10m(1 + $I_L773_132) = ( theta_10m(1 + $I_L773_132) * 1.0/$SC_sigki_I0 )
  773.             $I_L773_132 = 1 + $I_L773_132
  773.             if ( $I_L773_132 >= ncols ) exit
  773.          enddo
  773.       endif
  773.       t$13 = ncols
  773.       t$455 = max( 0, ncols )
  773.       t$14 = ncols
  773.       t$456 = max( 0, ncols )
  773.       t$15 = ncols
  773.       t$457 = max( 0, ncols )
  773.       _free( t$443 )
  773.       gq(1, 1) = _copyout( gq )
  773.       gt(1, 1) = _copyout( gt )
  778.       $F_A111 = ncols
  778.       if ( ncols > 0 ) then
  778.          $I_L778_276 = 0
  778. !dir$ ivdep
  778.          do
  778.             ustar2(1 + $I_L778_276) = ustarm(1 + $I_L778_276)
  778.             $I_L778_276 = 1 + $I_L778_276
  778.             if ( $I_L778_276 >= $F_A111 ) exit
  778.          enddo
  778.       endif
  779.       $ncount_S69 = 0
  780.       if ( ncols > 0 ) then
  780.          $I_L780_134 = 0
  780. !dir$ ivdep
  780.          do
  781.             z0(1 + $I_L780_134) = z0sea(1 + $I_L780_134)
  782.             if ( imask(1 + $I_L780_134) > 0 ) then
  783.                $ncount_S69 = 1 + $ncount_S69
  784.                velc_10m(1 + $I_L780_134) = velc10m($ncount_S69)
  785.                velc_2m(1 + $I_L780_134) = velc2m($ncount_S69)
  786.                mixq_10m(1 + $I_L780_134) = q10m($ncount_S69)
  787.                umes2m(1 + $I_L780_134) = q2m($ncount_S69)
  788.                temp2m(1 + $I_L780_134) = ( theta2m($ncount_S69) * 1.0/bps($ncount_S69) )
  789.                theta_10m(1 + $I_L780_134) = ( theta10m($ncount_S69) * 1.0/bps($ncount_S69) )
  790.                if ( imask(1 + $I_L780_134) == 13 ) then
  790.                   sice2(1 + $I_L780_134) = 10.0
  790.                endif
  791.                ustar2(1 + $I_L780_134) = ustar($ncount_S69)
  792.                z0(1 + $I_L780_134) = z0x($ncount_S69)
  792.             endif
  794.             $I_L780_134 = 1 + $I_L780_134
  793.             if ( $I_L780_134 >= ncols ) exit
  793.          enddo
  795.          $I_L795_136 = 0
  795. !dir$ ivdep
  795.          do
  796.             if ( tsea(1 + $I_L795_136) < 0.0 ) then
  796.                if ( abs( tsea(1 + $I_L795_136) ) < 271.17000000000002 ) then
  797.                   sice2(1 + $I_L795_136) = 5.0
  797.                endif
  797.             endif
  799.             $I_L795_136 = 1 + $I_L795_136
  798.             if ( $I_L795_136 >= ncols ) exit
  798.          enddo
  810.          $I_L810_138 = 0
  810. !dir$ ivdep
  810.          do
  811.             $Flat_S72 = sin( colrad(1 + $I_L810_138) )
  811.             $velc_WR0_R7 = max( 2.5e-1, 1.0/$Flat_S72 * _sqrt( gv(1 + $I_L810_138, 1) * gv(1 + $I_L810_138, 1) + gu(1 + $I_L810_138, 1) * gu(1 + $I_L810_138, 1) ) )
  812.             $Flat_S73 = sin( colrad(1 + $I_L810_138) )
  812.             $Flat_S74 = asin( ( max( -1.0, min( 1.0, ( 1.0/$velc_WR0_R7 * ( -( gu(1 + $I_L810_138, 1) * 1.0/$Flat_S73 ) ) ) ) ) ) )
  813.             $Flat_S75 = sin( $Flat_S74 )
  813.             uve10m(1 + $I_L810_138) = -max( -100.0, min( 100.0, $Flat_S75 * velc_10m(1 + $I_L810_138) ) )
  814.             $Flat_S76 = sin( colrad(1 + $I_L810_138) )
  814.             $Flat_S77 = acos( ( max( -1.0, min( 1.0, ( 1.0/$velc_WR0_R7 * ( -( gv(1 + $I_L810_138, 1) * 1.0/$Flat_S76 ) ) ) ) ) ) )
  815.             $Flat_S78 = cos( $Flat_S77 )
  815.             vve10m(1 + $I_L810_138) = -max( -100.0, min( 100.0, $Flat_S78 * velc_10m(1 + $I_L810_138) ) )
  816.             $I_L810_138 = 1 + $I_L810_138
  810.             if ( $I_L810_138 >= ncols ) exit
  810.          enddo
  810.       endif
  820.       $ncount_S80 = 0
  821.       if ( ncols > 0 ) then
  821.          $I_L821_140 = 0
  821. !dir$ ivdep
  821.          do
  822.             if ( imask(1 + $I_L821_140) > 0 ) then
  823.                $ncount_S80 = 1 + $ncount_S80
  824.                $fmom_S81 = cu($ncount_S80) * ustar($ncount_S80) * rhoair($ncount_S80)
  825.                $umom_WR0_R8 = $fmom_S81 * um($ncount_S80)
  826.                $vmom_WR0_R9 = $fmom_S81 * vm($ncount_S80)
  829.                $umom_WR0_R8 = max( -10.0, min( 10.0, $umom_WR0_R8 ) )
  829.                umom(1 + $I_L821_140) = $umom_WR0_R8
  830.                $vmom_WR0_R9 = max( -10.0, min( 10.0, $vmom_WR0_R9 ) )
  830.                vmom(1 + $I_L821_140) = $vmom_WR0_R9
  830.             endif
  832.             $I_L821_140 = 1 + $I_L821_140
  831.             if ( $I_L821_140 >= ncols ) exit
  831.          enddo
  831.       endif
  834.       $ncount_S83 = 0
  835.       if ( ncols > 0 ) then
  835.          $I_L835_142 = 0
  835. !dir$ ivdep
  835.          do
  836.             if ( imask(1 + $I_L835_142) > 0 ) then
  837.                $ncount_S83 = 1 + $ncount_S83
  838.                sens(1 + $I_L835_142) = dtc3xi * ( hg($ncount_S83) + hc($ncount_S83) )
  839.                evap(1 + $I_L835_142) = dtc3xi * ( eg($ncount_S83) + ec($ncount_S83) )
  839.             endif
  841.             $I_L835_142 = 1 + $I_L835_142
  840.             if ( $I_L835_142 >= ncols ) exit
  840.          enddo
  840.       endif
  846.       if ( startstordiag /= .false. ) then
  847.          call sfcdiagnstorage( ncols, dtc3xi, velc_10m(1), velc_2m(1), mixq_10m(1), umes2m(1), temp2m(1), theta_10m(1), uve10m(1), vve10m(1), sens(1), evap(1), imask(1), eci(1), egi(1), roff(1), ta(1), ea(1), egs(1), ra(1), rb(1), rd(1), rg(1), rmi(1), rhi(1), tsurf(1), umom(1), vmom(1), latitu )
  847.       endif
  855.       if ( $ghl_local_S84 /= .false. ) then
  856.          call sfcgridhistorystorage( 2, ncols, dtc3xi, latitu, ra(1), rhi(1), imask(1), rmi(1), drag(1), radt(1, 1), rb(1), rd(1), rc(1), rg(1), rsoil(1), ea(1), ta(1), hc(1), hg(1), ect(1), egt(1), eci(1), egi(1), egs(1), chf(1), shf(1), roff(1), tsurf(1), zlwup(1), umom(1), vmom(1), sens(1), evap(1), cond(1), stor(1), temp2m(1), umes2m(1), uve10m(1), vve10m(1) )
  856.       endif
   98.       _free( t$34 )
  864.       return
  864.       end
  864.       
  988.       
  988.       subroutine sfcgridhistorystorage( icg, ncols, dtc3xi, latitu, ra, rhi, imask, rmi, drag, radt, rb, rd, rc, rg, rsoil, ea, ta, hc, hg, ect, egt, eci, egi, egs, chf, shf, roff, tsurf, zlwup, umom, vmom, sens, evap, cond, stor, temp2m, umes2m, uve10m, vve10m )
  866.       t$7 = ncols
  878.       t$349 = _zla( 0, ncols )
  866.       t$8 = icg
  866.       t$350 = _zla( 0, ncols )
  883.       t$351 = _zla( 0, icg )
  866.       t$352 = _zla( 0, ncols ) * _zla( 0, icg )
  916.       t$355 = 8 * _zla( 0, ncols )
  866.       t$353 = int( _alloc( 8 * _zla( 0, ncols ) ), 8 )
  916.       t$354 = t$353
  919.       if ( (dogrh%base_addr)(56, latitu, 0) /= .false. ) then
  919. !dir$ suppress cond(1)
  919.          t$674 = $_StaticDV_P0
  919.          t$674%base_addr = pointer to array[1] of real (kind=8)( loc( cond(1) ) )
  919.          t$674%header%el_len = 64
  919.          t$674%header%assoc = 1
  919.          t$674%header%ptr_alloc = 0
  919.          t$674%header%p_or_a = 0
  919.          t$674%header%a_contig = 1
  919.          t$674%header%n_dim = 1
  919.          t$674%header%orig_base = 0
  919.          t$674%header%orig_size = 0
  919.          t$674%header%n_codim = 0
  919.          t$674%header%dv_versn = 2
  919.          t$674%header%dv_smunit = 64
  919.          t$674%header%d_type = 0
  919.          t$674%header%n_params = 0
  919.          t$674%header%d_type_idx = 13
  919.          t$674%dim_1%LB = 1
  919.          t$674%dim_1%EX = ( max( 0, ncols ) )
  919.          t$674%dim_1%SM = 1
  919.          call store1d( t$674, 56, latitu, 0 )
  919.       endif
  920.       if ( (dogrh%base_addr)(57, latitu, 0) /= .false. ) then
  920. !dir$ suppress stor(1)
  920.          t$675 = $_StaticDV_P1
  920.          t$675%base_addr = pointer to array[1] of real (kind=8)( loc( stor(1) ) )
  920.          t$675%header%el_len = 64
  920.          t$675%header%assoc = 1
  920.          t$675%header%ptr_alloc = 0
  920.          t$675%header%p_or_a = 0
  920.          t$675%header%a_contig = 1
  920.          t$675%header%n_dim = 1
  920.          t$675%header%orig_base = 0
  920.          t$675%header%orig_size = 0
  920.          t$675%header%n_codim = 0
  920.          t$675%header%dv_versn = 2
  920.          t$675%header%dv_smunit = 64
  920.          t$675%header%d_type = 0
  920.          t$675%header%n_params = 0
  920.          t$675%header%d_type_idx = 13
  920.          t$675%dim_1%LB = 1
  920.          t$675%dim_1%EX = ( max( 0, ncols ) )
  920.          t$675%dim_1%SM = 1
  920.          call store1d( t$675, 57, latitu, 0 )
  920.       endif
  921.       if ( (dogrh%base_addr)(80, latitu, 0) /= .false. ) then
  921. !dir$ suppress temp2m(1)
  921.          t$676 = $_StaticDV_P2
  921.          t$676%base_addr = pointer to array[1] of real (kind=8)( loc( temp2m(1) ) )
  921.          t$676%header%el_len = 64
  921.          t$676%header%assoc = 1
  921.          t$676%header%ptr_alloc = 0
  921.          t$676%header%p_or_a = 0
  921.          t$676%header%a_contig = 1
  921.          t$676%header%n_dim = 1
  921.          t$676%header%orig_base = 0
  921.          t$676%header%orig_size = 0
  921.          t$676%header%n_codim = 0
  921.          t$676%header%dv_versn = 2
  921.          t$676%header%dv_smunit = 64
  921.          t$676%header%d_type = 0
  921.          t$676%header%n_params = 0
  921.          t$676%header%d_type_idx = 13
  921.          t$676%dim_1%LB = 1
  921.          t$676%dim_1%EX = ( max( 0, ncols ) )
  921.          t$676%dim_1%SM = 1
  921.          call store1d( t$676, 80, latitu, 0 )
  921.       endif
  922.       if ( (dogrh%base_addr)(81, latitu, 0) /= .false. ) then
  922. !dir$ suppress umes2m(1)
  922.          t$677 = $_StaticDV_P3
  922.          t$677%base_addr = pointer to array[1] of real (kind=8)( loc( umes2m(1) ) )
  922.          t$677%header%el_len = 64
  922.          t$677%header%assoc = 1
  922.          t$677%header%ptr_alloc = 0
  922.          t$677%header%p_or_a = 0
  922.          t$677%header%a_contig = 1
  922.          t$677%header%n_dim = 1
  922.          t$677%header%orig_base = 0
  922.          t$677%header%orig_size = 0
  922.          t$677%header%n_codim = 0
  922.          t$677%header%dv_versn = 2
  922.          t$677%header%dv_smunit = 64
  922.          t$677%header%d_type = 0
  922.          t$677%header%n_params = 0
  922.          t$677%header%d_type_idx = 13
  922.          t$677%dim_1%LB = 1
  922.          t$677%dim_1%EX = ( max( 0, ncols ) )
  922.          t$677%dim_1%SM = 1
  922.          call store1d( t$677, 81, latitu, 0 )
  922.       endif
  923.       if ( (dogrh%base_addr)(82, latitu, 0) /= .false. ) then
  923. !dir$ suppress uve10m(1)
  923.          t$678 = $_StaticDV_P4
  923.          t$678%base_addr = pointer to array[1] of real (kind=8)( loc( uve10m(1) ) )
  923.          t$678%header%el_len = 64
  923.          t$678%header%assoc = 1
  923.          t$678%header%ptr_alloc = 0
  923.          t$678%header%p_or_a = 0
  923.          t$678%header%a_contig = 1
  923.          t$678%header%n_dim = 1
  923.          t$678%header%orig_base = 0
  923.          t$678%header%orig_size = 0
  923.          t$678%header%n_codim = 0
  923.          t$678%header%dv_versn = 2
  923.          t$678%header%dv_smunit = 64
  923.          t$678%header%d_type = 0
  923.          t$678%header%n_params = 0
  923.          t$678%header%d_type_idx = 13
  923.          t$678%dim_1%LB = 1
  923.          t$678%dim_1%EX = ( max( 0, ncols ) )
  923.          t$678%dim_1%SM = 1
  923.          call store1d( t$678, 82, latitu, 0 )
  923.       endif
  924.       if ( (dogrh%base_addr)(83, latitu, 0) /= .false. ) then
  924. !dir$ suppress vve10m(1)
  924.          t$679 = $_StaticDV_P5
  924.          t$679%base_addr = pointer to array[1] of real (kind=8)( loc( vve10m(1) ) )
  924.          t$679%header%el_len = 64
  924.          t$679%header%assoc = 1
  924.          t$679%header%ptr_alloc = 0
  924.          t$679%header%p_or_a = 0
  924.          t$679%header%a_contig = 1
  924.          t$679%header%n_dim = 1
  924.          t$679%header%orig_base = 0
  924.          t$679%header%orig_size = 0
  924.          t$679%header%n_codim = 0
  924.          t$679%header%dv_versn = 2
  924.          t$679%header%dv_smunit = 64
  924.          t$679%header%d_type = 0
  924.          t$679%header%n_params = 0
  924.          t$679%header%d_type_idx = 13
  924.          t$679%dim_1%LB = 1
  924.          t$679%dim_1%EX = ( max( 0, ncols ) )
  924.          t$679%dim_1%SM = 1
  924.          call store1d( t$679, 83, latitu, 0 )
  924.       endif
  926.       if ( (dogrh%base_addr)(38, latitu, 0) /= .false. ) then
  927.          $ncount_S1 = 0
  928.          if ( ncols > 0 ) then
  928.             $I_L928_18 = 0
  928. !dir$ ivdep
  928.             do
  929.                if ( imask(1 + $I_L928_18) > 0 ) then
  930.                   $ncount_S1 = 1 + $ncount_S1
  931.                   bfrg(1 + $I_L928_18) = ra($ncount_S1)
  931.                else
  933.                   bfrg(1 + $I_L928_18) = 1.0/rhi(1 + $I_L928_18)
  933.                endif
  935.                $I_L928_18 = 1 + $I_L928_18
  934.                if ( $I_L928_18 >= ncols ) exit
  934.             enddo
  934.          endif
  936. !dir$ suppress bfrg(1)
  936.          t$683 = $_StaticDV_P6
  936.          t$683%base_addr = pointer to array[1] of real (kind=8)( loc( bfrg(1) ) )
  936.          t$683%header%el_len = 64
  936.          t$683%header%assoc = 1
  936.          t$683%header%ptr_alloc = 0
  936.          t$683%header%p_or_a = 0
  936.          t$683%header%a_contig = 1
  936.          t$683%header%n_dim = 1
  936.          t$683%header%orig_base = 0
  936.          t$683%header%orig_size = 0
  936.          t$683%header%n_codim = 0
  936.          t$683%header%dv_versn = 2
  936.          t$683%header%dv_smunit = 64
  936.          t$683%header%d_type = 0
  936.          t$683%header%n_params = 0
  936.          t$683%header%d_type_idx = 13
  936.          t$683%dim_1%LB = 1
  936.          t$683%dim_1%EX = ( max( 0, ncols ) )
  936.          t$683%dim_1%SM = 1
  936.          call store1d( t$683, 38, latitu, 0 )
  936.       endif
  939.       if ( (dogrh%base_addr)(37, latitu, 0) /= .false. ) then
  941.          if ( ncols > 0 ) then
  941.             $I_L941_20 = 0
  941. !dir$ ivdep
  941.             do
  942.                if ( imask(1 + $I_L941_20) > 0 ) then
  944.                   bfrg(1 + $I_L941_20) = 0.0
  944.                else
  946.                   bfrg(1 + $I_L941_20) = 1.0/rmi(1 + $I_L941_20)
  946.                endif
  948.                $I_L941_20 = 1 + $I_L941_20
  947.                if ( $I_L941_20 >= ncols ) exit
  947.             enddo
  947.          endif
  949. !dir$ suppress bfrg(1)
  949.          t$687 = $_StaticDV_P7
  949.          t$687%base_addr = pointer to array[1] of real (kind=8)( loc( bfrg(1) ) )
  949.          t$687%header%el_len = 64
  949.          t$687%header%assoc = 1
  949.          t$687%header%ptr_alloc = 0
  949.          t$687%header%p_or_a = 0
  949.          t$687%header%a_contig = 1
  949.          t$687%header%n_dim = 1
  949.          t$687%header%orig_base = 0
  949.          t$687%header%orig_size = 0
  949.          t$687%header%n_codim = 0
  949.          t$687%header%dv_versn = 2
  949.          t$687%header%dv_smunit = 64
  949.          t$687%header%d_type = 0
  949.          t$687%header%n_params = 0
  949.          t$687%header%d_type_idx = 13
  949.          t$687%dim_1%LB = 1
  949.          t$687%dim_1%EX = ( max( 0, ncols ) )
  949.          t$687%dim_1%SM = 1
  949.          call store1d( t$687, 37, latitu, 0 )
  949.       endif
  952.       if ( (dogrh%base_addr)(36, latitu, 0) /= .false. ) then
  952. !dir$ suppress drag(1)
  952.          t$688 = $_StaticDV_P8
  952.          t$688%base_addr = pointer to array[1] of real (kind=8)( loc( drag(1) ) )
  952.          t$688%header%el_len = 64
  952.          t$688%header%assoc = 1
  952.          t$688%header%ptr_alloc = 0
  952.          t$688%header%p_or_a = 0
  952.          t$688%header%a_contig = 1
  952.          t$688%header%n_dim = 1
  952.          t$688%header%orig_base = 0
  952.          t$688%header%orig_size = 0
  952.          t$688%header%n_codim = 0
  952.          t$688%header%dv_versn = 2
  952.          t$688%header%dv_smunit = 64
  952.          t$688%header%d_type = 0
  952.          t$688%header%n_params = 0
  952.          t$688%header%d_type_idx = 13
  952.          t$688%dim_1%LB = 1
  952.          t$688%dim_1%EX = ( max( 0, ncols ) )
  952.          t$688%dim_1%SM = 1
  952. !dir$ suppress imask(1)
  952.          t$689 = $_StaticDV_P9
  952.          t$689%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  952.          t$689%header%el_len = 64
  952.          t$689%header%assoc = 1
  952.          t$689%header%ptr_alloc = 0
  952.          t$689%header%p_or_a = 0
  952.          t$689%header%a_contig = 1
  952.          t$689%header%n_dim = 1
  952.          t$689%header%orig_base = 0
  952.          t$689%header%orig_size = 0
  952.          t$689%header%n_codim = 0
  952.          t$689%header%dv_versn = 2
  952.          t$689%header%dv_smunit = 64
  952.          t$689%header%d_type = 0
  952.          t$689%header%n_params = 0
  952.          t$689%header%d_type_idx = 11
  952.          t$689%dim_1%LB = 1
  952.          t$689%dim_1%EX = _zla( 0, ncols )
  952.          t$689%dim_1%SM = 1
  952.          call storemaskedgridhistory( t$688, t$689, 36, latitu, 0 )
  952.       endif
  953.       if ( (dogrh%base_addr)(33, latitu, 0) /= .false. ) then
  953. !dir$ suppress radt(1, 1)
  953.          t$690 = $_StaticDV_P10
  953.          t$690%base_addr = pointer to array[1] of real (kind=8)( loc( radt(1, 1) ) )
  953.          t$690%header%el_len = 64
  953.          t$690%header%assoc = 1
  953.          t$690%header%ptr_alloc = 0
  953.          t$690%header%p_or_a = 0
  953.          t$690%header%a_contig = 1
  953.          t$690%header%n_dim = 1
  953.          t$690%header%orig_base = 0
  953.          t$690%header%orig_size = 0
  953.          t$690%header%n_codim = 0
  953.          t$690%header%dv_versn = 2
  953.          t$690%header%dv_smunit = 64
  953.          t$690%header%d_type = 0
  953.          t$690%header%n_params = 0
  953.          t$690%header%d_type_idx = 13
  953.          t$690%dim_1%LB = 1
  953.          t$690%dim_1%EX = ( max( 0, ncols ) )
  953.          t$690%dim_1%SM = 1
  953. !dir$ suppress imask(1)
  953.          t$691 = $_StaticDV_P11
  953.          t$691%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  953.          t$691%header%el_len = 64
  953.          t$691%header%assoc = 1
  953.          t$691%header%ptr_alloc = 0
  953.          t$691%header%p_or_a = 0
  953.          t$691%header%a_contig = 1
  953.          t$691%header%n_dim = 1
  953.          t$691%header%orig_base = 0
  953.          t$691%header%orig_size = 0
  953.          t$691%header%n_codim = 0
  953.          t$691%header%dv_versn = 2
  953.          t$691%header%dv_smunit = 64
  953.          t$691%header%d_type = 0
  953.          t$691%header%n_params = 0
  953.          t$691%header%d_type_idx = 11
  953.          t$691%dim_1%LB = 1
  953.          t$691%dim_1%EX = _zla( 0, ncols )
  953.          t$691%dim_1%SM = 1
  953.          call storemaskedgridhistory( t$690, t$691, 33, latitu, 0 )
  953.       endif
  954.       if ( (dogrh%base_addr)(34, latitu, 0) /= .false. ) then
  954. !dir$ suppress radt(1, 2)
  954.          t$692 = $_StaticDV_P12
  954.          t$692%base_addr = pointer to array[1] of real (kind=8)( loc( radt(1, 2) ) )
  954.          t$692%header%el_len = 64
  954.          t$692%header%assoc = 1
  954.          t$692%header%ptr_alloc = 0
  954.          t$692%header%p_or_a = 0
  954.          t$692%header%a_contig = 1
  954.          t$692%header%n_dim = 1
  954.          t$692%header%orig_base = 0
  954.          t$692%header%orig_size = 0
  954.          t$692%header%n_codim = 0
  954.          t$692%header%dv_versn = 2
  954.          t$692%header%dv_smunit = 64
  954.          t$692%header%d_type = 0
  954.          t$692%header%n_params = 0
  954.          t$692%header%d_type_idx = 13
  954.          t$692%dim_1%LB = 1
  954.          t$692%dim_1%EX = ( max( 0, ncols ) )
  954.          t$692%dim_1%SM = 1
  954. !dir$ suppress imask(1)
  954.          t$693 = $_StaticDV_P13
  954.          t$693%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  954.          t$693%header%el_len = 64
  954.          t$693%header%assoc = 1
  954.          t$693%header%ptr_alloc = 0
  954.          t$693%header%p_or_a = 0
  954.          t$693%header%a_contig = 1
  954.          t$693%header%n_dim = 1
  954.          t$693%header%orig_base = 0
  954.          t$693%header%orig_size = 0
  954.          t$693%header%n_codim = 0
  954.          t$693%header%dv_versn = 2
  954.          t$693%header%dv_smunit = 64
  954.          t$693%header%d_type = 0
  954.          t$693%header%n_params = 0
  954.          t$693%header%d_type_idx = 11
  954.          t$693%dim_1%LB = 1
  954.          t$693%dim_1%EX = _zla( 0, ncols )
  954.          t$693%dim_1%SM = 1
  954.          call storemaskedgridhistory( t$692, t$693, 34, latitu, 0 )
  954.       endif
  955.       if ( (dogrh%base_addr)(39, latitu, 0) /= .false. ) then
  955. !dir$ suppress rb(1)
  955.          t$694 = $_StaticDV_P14
  955.          t$694%base_addr = pointer to array[1] of real (kind=8)( loc( rb(1) ) )
  955.          t$694%header%el_len = 64
  955.          t$694%header%assoc = 1
  955.          t$694%header%ptr_alloc = 0
  955.          t$694%header%p_or_a = 0
  955.          t$694%header%a_contig = 1
  955.          t$694%header%n_dim = 1
  955.          t$694%header%orig_base = 0
  955.          t$694%header%orig_size = 0
  955.          t$694%header%n_codim = 0
  955.          t$694%header%dv_versn = 2
  955.          t$694%header%dv_smunit = 64
  955.          t$694%header%d_type = 0
  955.          t$694%header%n_params = 0
  955.          t$694%header%d_type_idx = 13
  955.          t$694%dim_1%LB = 1
  955.          t$694%dim_1%EX = ( max( 0, ncols ) )
  955.          t$694%dim_1%SM = 1
  955. !dir$ suppress imask(1)
  955.          t$695 = $_StaticDV_P15
  955.          t$695%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  955.          t$695%header%el_len = 64
  955.          t$695%header%assoc = 1
  955.          t$695%header%ptr_alloc = 0
  955.          t$695%header%p_or_a = 0
  955.          t$695%header%a_contig = 1
  955.          t$695%header%n_dim = 1
  955.          t$695%header%orig_base = 0
  955.          t$695%header%orig_size = 0
  955.          t$695%header%n_codim = 0
  955.          t$695%header%dv_versn = 2
  955.          t$695%header%dv_smunit = 64
  955.          t$695%header%d_type = 0
  955.          t$695%header%n_params = 0
  955.          t$695%header%d_type_idx = 11
  955.          t$695%dim_1%LB = 1
  955.          t$695%dim_1%EX = _zla( 0, ncols )
  955.          t$695%dim_1%SM = 1
  955.          call storemaskedgridhistory( t$694, t$695, 39, latitu, 0 )
  955.       endif
  956.       if ( (dogrh%base_addr)(40, latitu, 0) /= .false. ) then
  956. !dir$ suppress rd(1)
  956.          t$696 = $_StaticDV_P16
  956.          t$696%base_addr = pointer to array[1] of real (kind=8)( loc( rd(1) ) )
  956.          t$696%header%el_len = 64
  956.          t$696%header%assoc = 1
  956.          t$696%header%ptr_alloc = 0
  956.          t$696%header%p_or_a = 0
  956.          t$696%header%a_contig = 1
  956.          t$696%header%n_dim = 1
  956.          t$696%header%orig_base = 0
  956.          t$696%header%orig_size = 0
  956.          t$696%header%n_codim = 0
  956.          t$696%header%dv_versn = 2
  956.          t$696%header%dv_smunit = 64
  956.          t$696%header%d_type = 0
  956.          t$696%header%n_params = 0
  956.          t$696%header%d_type_idx = 13
  956.          t$696%dim_1%LB = 1
  956.          t$696%dim_1%EX = ( max( 0, ncols ) )
  956.          t$696%dim_1%SM = 1
  956. !dir$ suppress imask(1)
  956.          t$697 = $_StaticDV_P17
  956.          t$697%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  956.          t$697%header%el_len = 64
  956.          t$697%header%assoc = 1
  956.          t$697%header%ptr_alloc = 0
  956.          t$697%header%p_or_a = 0
  956.          t$697%header%a_contig = 1
  956.          t$697%header%n_dim = 1
  956.          t$697%header%orig_base = 0
  956.          t$697%header%orig_size = 0
  956.          t$697%header%n_codim = 0
  956.          t$697%header%dv_versn = 2
  956.          t$697%header%dv_smunit = 64
  956.          t$697%header%d_type = 0
  956.          t$697%header%n_params = 0
  956.          t$697%header%d_type_idx = 11
  956.          t$697%dim_1%LB = 1
  956.          t$697%dim_1%EX = _zla( 0, ncols )
  956.          t$697%dim_1%SM = 1
  956.          call storemaskedgridhistory( t$696, t$697, 40, latitu, 0 )
  956.       endif
  957.       if ( (dogrh%base_addr)(41, latitu, 0) /= .false. ) then
  957. !dir$ suppress rc(1)
  957.          t$698 = $_StaticDV_P18
  957.          t$698%base_addr = pointer to array[1] of real (kind=8)( loc( rc(1) ) )
  957.          t$698%header%el_len = 64
  957.          t$698%header%assoc = 1
  957.          t$698%header%ptr_alloc = 0
  957.          t$698%header%p_or_a = 0
  957.          t$698%header%a_contig = 1
  957.          t$698%header%n_dim = 1
  957.          t$698%header%orig_base = 0
  957.          t$698%header%orig_size = 0
  957.          t$698%header%n_codim = 0
  957.          t$698%header%dv_versn = 2
  957.          t$698%header%dv_smunit = 64
  957.          t$698%header%d_type = 0
  957.          t$698%header%n_params = 0
  957.          t$698%header%d_type_idx = 13
  957.          t$698%dim_1%LB = 1
  957.          t$698%dim_1%EX = ( max( 0, ncols ) )
  957.          t$698%dim_1%SM = 1
  957. !dir$ suppress imask(1)
  957.          t$699 = $_StaticDV_P19
  957.          t$699%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  957.          t$699%header%el_len = 64
  957.          t$699%header%assoc = 1
  957.          t$699%header%ptr_alloc = 0
  957.          t$699%header%p_or_a = 0
  957.          t$699%header%a_contig = 1
  957.          t$699%header%n_dim = 1
  957.          t$699%header%orig_base = 0
  957.          t$699%header%orig_size = 0
  957.          t$699%header%n_codim = 0
  957.          t$699%header%dv_versn = 2
  957.          t$699%header%dv_smunit = 64
  957.          t$699%header%d_type = 0
  957.          t$699%header%n_params = 0
  957.          t$699%header%d_type_idx = 11
  957.          t$699%dim_1%LB = 1
  957.          t$699%dim_1%EX = _zla( 0, ncols )
  957.          t$699%dim_1%SM = 1
  957.          call storemaskedgridhistory( t$698, t$699, 41, latitu, 0 )
  957.       endif
  958.       if ( (dogrh%base_addr)(42, latitu, 0) /= .false. ) then
  958. !dir$ suppress rg(1)
  958.          t$700 = $_StaticDV_P20
  958.          t$700%base_addr = pointer to array[1] of real (kind=8)( loc( rg(1) ) )
  958.          t$700%header%el_len = 64
  958.          t$700%header%assoc = 1
  958.          t$700%header%ptr_alloc = 0
  958.          t$700%header%p_or_a = 0
  958.          t$700%header%a_contig = 1
  958.          t$700%header%n_dim = 1
  958.          t$700%header%orig_base = 0
  958.          t$700%header%orig_size = 0
  958.          t$700%header%n_codim = 0
  958.          t$700%header%dv_versn = 2
  958.          t$700%header%dv_smunit = 64
  958.          t$700%header%d_type = 0
  958.          t$700%header%n_params = 0
  958.          t$700%header%d_type_idx = 13
  958.          t$700%dim_1%LB = 1
  958.          t$700%dim_1%EX = ( max( 0, ncols ) )
  958.          t$700%dim_1%SM = 1
  958. !dir$ suppress imask(1)
  958.          t$701 = $_StaticDV_P21
  958.          t$701%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  958.          t$701%header%el_len = 64
  958.          t$701%header%assoc = 1
  958.          t$701%header%ptr_alloc = 0
  958.          t$701%header%p_or_a = 0
  958.          t$701%header%a_contig = 1
  958.          t$701%header%n_dim = 1
  958.          t$701%header%orig_base = 0
  958.          t$701%header%orig_size = 0
  958.          t$701%header%n_codim = 0
  958.          t$701%header%dv_versn = 2
  958.          t$701%header%dv_smunit = 64
  958.          t$701%header%d_type = 0
  958.          t$701%header%n_params = 0
  958.          t$701%header%d_type_idx = 11
  958.          t$701%dim_1%LB = 1
  958.          t$701%dim_1%EX = _zla( 0, ncols )
  958.          t$701%dim_1%SM = 1
  958.          call storemaskedgridhistory( t$700, t$701, 42, latitu, 0 )
  958.       endif
  959.       if ( (dogrh%base_addr)(43, latitu, 0) /= .false. ) then
  959. !dir$ suppress rsoil(1)
  959.          t$702 = $_StaticDV_P22
  959.          t$702%base_addr = pointer to array[1] of real (kind=8)( loc( rsoil(1) ) )
  959.          t$702%header%el_len = 64
  959.          t$702%header%assoc = 1
  959.          t$702%header%ptr_alloc = 0
  959.          t$702%header%p_or_a = 0
  959.          t$702%header%a_contig = 1
  959.          t$702%header%n_dim = 1
  959.          t$702%header%orig_base = 0
  959.          t$702%header%orig_size = 0
  959.          t$702%header%n_codim = 0
  959.          t$702%header%dv_versn = 2
  959.          t$702%header%dv_smunit = 64
  959.          t$702%header%d_type = 0
  959.          t$702%header%n_params = 0
  959.          t$702%header%d_type_idx = 13
  959.          t$702%dim_1%LB = 1
  959.          t$702%dim_1%EX = ( max( 0, ncols ) )
  959.          t$702%dim_1%SM = 1
  959. !dir$ suppress imask(1)
  959.          t$703 = $_StaticDV_P23
  959.          t$703%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  959.          t$703%header%el_len = 64
  959.          t$703%header%assoc = 1
  959.          t$703%header%ptr_alloc = 0
  959.          t$703%header%p_or_a = 0
  959.          t$703%header%a_contig = 1
  959.          t$703%header%n_dim = 1
  959.          t$703%header%orig_base = 0
  959.          t$703%header%orig_size = 0
  959.          t$703%header%n_codim = 0
  959.          t$703%header%dv_versn = 2
  959.          t$703%header%dv_smunit = 64
  959.          t$703%header%d_type = 0
  959.          t$703%header%n_params = 0
  959.          t$703%header%d_type_idx = 11
  959.          t$703%dim_1%LB = 1
  959.          t$703%dim_1%EX = _zla( 0, ncols )
  959.          t$703%dim_1%SM = 1
  959.          call storemaskedgridhistory( t$702, t$703, 43, latitu, 0 )
  959.       endif
  960.       if ( (dogrh%base_addr)(44, latitu, 0) /= .false. ) then
  960. !dir$ suppress ea(1)
  960.          t$704 = $_StaticDV_P24
  960.          t$704%base_addr = pointer to array[1] of real (kind=8)( loc( ea(1) ) )
  960.          t$704%header%el_len = 64
  960.          t$704%header%assoc = 1
  960.          t$704%header%ptr_alloc = 0
  960.          t$704%header%p_or_a = 0
  960.          t$704%header%a_contig = 1
  960.          t$704%header%n_dim = 1
  960.          t$704%header%orig_base = 0
  960.          t$704%header%orig_size = 0
  960.          t$704%header%n_codim = 0
  960.          t$704%header%dv_versn = 2
  960.          t$704%header%dv_smunit = 64
  960.          t$704%header%d_type = 0
  960.          t$704%header%n_params = 0
  960.          t$704%header%d_type_idx = 13
  960.          t$704%dim_1%LB = 1
  960.          t$704%dim_1%EX = ( max( 0, ncols ) )
  960.          t$704%dim_1%SM = 1
  960. !dir$ suppress imask(1)
  960.          t$705 = $_StaticDV_P25
  960.          t$705%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  960.          t$705%header%el_len = 64
  960.          t$705%header%assoc = 1
  960.          t$705%header%ptr_alloc = 0
  960.          t$705%header%p_or_a = 0
  960.          t$705%header%a_contig = 1
  960.          t$705%header%n_dim = 1
  960.          t$705%header%orig_base = 0
  960.          t$705%header%orig_size = 0
  960.          t$705%header%n_codim = 0
  960.          t$705%header%dv_versn = 2
  960.          t$705%header%dv_smunit = 64
  960.          t$705%header%d_type = 0
  960.          t$705%header%n_params = 0
  960.          t$705%header%d_type_idx = 11
  960.          t$705%dim_1%LB = 1
  960.          t$705%dim_1%EX = _zla( 0, ncols )
  960.          t$705%dim_1%SM = 1
  960.          call storemaskedgridhistory( t$704, t$705, 44, latitu, 0 )
  960.       endif
  961.       if ( (dogrh%base_addr)(45, latitu, 0) /= .false. ) then
  961. !dir$ suppress ta(1)
  961.          t$706 = $_StaticDV_P26
  961.          t$706%base_addr = pointer to array[1] of real (kind=8)( loc( ta(1) ) )
  961.          t$706%header%el_len = 64
  961.          t$706%header%assoc = 1
  961.          t$706%header%ptr_alloc = 0
  961.          t$706%header%p_or_a = 0
  961.          t$706%header%a_contig = 1
  961.          t$706%header%n_dim = 1
  961.          t$706%header%orig_base = 0
  961.          t$706%header%orig_size = 0
  961.          t$706%header%n_codim = 0
  961.          t$706%header%dv_versn = 2
  961.          t$706%header%dv_smunit = 64
  961.          t$706%header%d_type = 0
  961.          t$706%header%n_params = 0
  961.          t$706%header%d_type_idx = 13
  961.          t$706%dim_1%LB = 1
  961.          t$706%dim_1%EX = ( max( 0, ncols ) )
  961.          t$706%dim_1%SM = 1
  961. !dir$ suppress imask(1)
  961.          t$707 = $_StaticDV_P27
  961.          t$707%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  961.          t$707%header%el_len = 64
  961.          t$707%header%assoc = 1
  961.          t$707%header%ptr_alloc = 0
  961.          t$707%header%p_or_a = 0
  961.          t$707%header%a_contig = 1
  961.          t$707%header%n_dim = 1
  961.          t$707%header%orig_base = 0
  961.          t$707%header%orig_size = 0
  961.          t$707%header%n_codim = 0
  961.          t$707%header%dv_versn = 2
  961.          t$707%header%dv_smunit = 64
  961.          t$707%header%d_type = 0
  961.          t$707%header%n_params = 0
  961.          t$707%header%d_type_idx = 11
  961.          t$707%dim_1%LB = 1
  961.          t$707%dim_1%EX = _zla( 0, ncols )
  961.          t$707%dim_1%SM = 1
  961.          call storemaskedgridhistory( t$706, t$707, 45, latitu, 0 )
  961.       endif
  962.       if ( (dogrh%base_addr)(51, latitu, 0) /= .false. ) then
  962. !dir$ suppress hc(1)
  962.          t$708 = $_StaticDV_P28
  962.          t$708%base_addr = pointer to array[1] of real (kind=8)( loc( hc(1) ) )
  962.          t$708%header%el_len = 64
  962.          t$708%header%assoc = 1
  962.          t$708%header%ptr_alloc = 0
  962.          t$708%header%p_or_a = 0
  962.          t$708%header%a_contig = 1
  962.          t$708%header%n_dim = 1
  962.          t$708%header%orig_base = 0
  962.          t$708%header%orig_size = 0
  962.          t$708%header%n_codim = 0
  962.          t$708%header%dv_versn = 2
  962.          t$708%header%dv_smunit = 64
  962.          t$708%header%d_type = 0
  962.          t$708%header%n_params = 0
  962.          t$708%header%d_type_idx = 13
  962.          t$708%dim_1%LB = 1
  962.          t$708%dim_1%EX = ( max( 0, ncols ) )
  962.          t$708%dim_1%SM = 1
  962. !dir$ suppress imask(1)
  962.          t$709 = $_StaticDV_P29
  962.          t$709%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  962.          t$709%header%el_len = 64
  962.          t$709%header%assoc = 1
  962.          t$709%header%ptr_alloc = 0
  962.          t$709%header%p_or_a = 0
  962.          t$709%header%a_contig = 1
  962.          t$709%header%n_dim = 1
  962.          t$709%header%orig_base = 0
  962.          t$709%header%orig_size = 0
  962.          t$709%header%n_codim = 0
  962.          t$709%header%dv_versn = 2
  962.          t$709%header%dv_smunit = 64
  962.          t$709%header%d_type = 0
  962.          t$709%header%n_params = 0
  962.          t$709%header%d_type_idx = 11
  962.          t$709%dim_1%LB = 1
  962.          t$709%dim_1%EX = _zla( 0, ncols )
  962.          t$709%dim_1%SM = 1
  962.          call storemaskedgridhistory( t$708, t$709, 51, latitu, dtc3xi )
  962.       endif
  963.       if ( (dogrh%base_addr)(52, latitu, 0) /= .false. ) then
  963. !dir$ suppress hg(1)
  963.          t$710 = $_StaticDV_P30
  963.          t$710%base_addr = pointer to array[1] of real (kind=8)( loc( hg(1) ) )
  963.          t$710%header%el_len = 64
  963.          t$710%header%assoc = 1
  963.          t$710%header%ptr_alloc = 0
  963.          t$710%header%p_or_a = 0
  963.          t$710%header%a_contig = 1
  963.          t$710%header%n_dim = 1
  963.          t$710%header%orig_base = 0
  963.          t$710%header%orig_size = 0
  963.          t$710%header%n_codim = 0
  963.          t$710%header%dv_versn = 2
  963.          t$710%header%dv_smunit = 64
  963.          t$710%header%d_type = 0
  963.          t$710%header%n_params = 0
  963.          t$710%header%d_type_idx = 13
  963.          t$710%dim_1%LB = 1
  963.          t$710%dim_1%EX = ( max( 0, ncols ) )
  963.          t$710%dim_1%SM = 1
  963. !dir$ suppress imask(1)
  963.          t$711 = $_StaticDV_P31
  963.          t$711%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  963.          t$711%header%el_len = 64
  963.          t$711%header%assoc = 1
  963.          t$711%header%ptr_alloc = 0
  963.          t$711%header%p_or_a = 0
  963.          t$711%header%a_contig = 1
  963.          t$711%header%n_dim = 1
  963.          t$711%header%orig_base = 0
  963.          t$711%header%orig_size = 0
  963.          t$711%header%n_codim = 0
  963.          t$711%header%dv_versn = 2
  963.          t$711%header%dv_smunit = 64
  963.          t$711%header%d_type = 0
  963.          t$711%header%n_params = 0
  963.          t$711%header%d_type_idx = 11
  963.          t$711%dim_1%LB = 1
  963.          t$711%dim_1%EX = _zla( 0, ncols )
  963.          t$711%dim_1%SM = 1
  963.          call storemaskedgridhistory( t$710, t$711, 52, latitu, dtc3xi )
  963.       endif
  964.       if ( (dogrh%base_addr)(46, latitu, 0) /= .false. ) then
  964. !dir$ suppress ect(1)
  964.          t$712 = $_StaticDV_P32
  964.          t$712%base_addr = pointer to array[1] of real (kind=8)( loc( ect(1) ) )
  964.          t$712%header%el_len = 64
  964.          t$712%header%assoc = 1
  964.          t$712%header%ptr_alloc = 0
  964.          t$712%header%p_or_a = 0
  964.          t$712%header%a_contig = 1
  964.          t$712%header%n_dim = 1
  964.          t$712%header%orig_base = 0
  964.          t$712%header%orig_size = 0
  964.          t$712%header%n_codim = 0
  964.          t$712%header%dv_versn = 2
  964.          t$712%header%dv_smunit = 64
  964.          t$712%header%d_type = 0
  964.          t$712%header%n_params = 0
  964.          t$712%header%d_type_idx = 13
  964.          t$712%dim_1%LB = 1
  964.          t$712%dim_1%EX = ( max( 0, ncols ) )
  964.          t$712%dim_1%SM = 1
  964. !dir$ suppress imask(1)
  964.          t$713 = $_StaticDV_P33
  964.          t$713%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  964.          t$713%header%el_len = 64
  964.          t$713%header%assoc = 1
  964.          t$713%header%ptr_alloc = 0
  964.          t$713%header%p_or_a = 0
  964.          t$713%header%a_contig = 1
  964.          t$713%header%n_dim = 1
  964.          t$713%header%orig_base = 0
  964.          t$713%header%orig_size = 0
  964.          t$713%header%n_codim = 0
  964.          t$713%header%dv_versn = 2
  964.          t$713%header%dv_smunit = 64
  964.          t$713%header%d_type = 0
  964.          t$713%header%n_params = 0
  964.          t$713%header%d_type_idx = 11
  964.          t$713%dim_1%LB = 1
  964.          t$713%dim_1%EX = _zla( 0, ncols )
  964.          t$713%dim_1%SM = 1
  964.          call storemaskedgridhistory( t$712, t$713, 46, latitu, dtc3xi )
  964.       endif
  965.       if ( (dogrh%base_addr)(48, latitu, 0) /= .false. ) then
  965. !dir$ suppress egt(1)
  965.          t$714 = $_StaticDV_P34
  965.          t$714%base_addr = pointer to array[1] of real (kind=8)( loc( egt(1) ) )
  965.          t$714%header%el_len = 64
  965.          t$714%header%assoc = 1
  965.          t$714%header%ptr_alloc = 0
  965.          t$714%header%p_or_a = 0
  965.          t$714%header%a_contig = 1
  965.          t$714%header%n_dim = 1
  965.          t$714%header%orig_base = 0
  965.          t$714%header%orig_size = 0
  965.          t$714%header%n_codim = 0
  965.          t$714%header%dv_versn = 2
  965.          t$714%header%dv_smunit = 64
  965.          t$714%header%d_type = 0
  965.          t$714%header%n_params = 0
  965.          t$714%header%d_type_idx = 13
  965.          t$714%dim_1%LB = 1
  965.          t$714%dim_1%EX = ( max( 0, ncols ) )
  965.          t$714%dim_1%SM = 1
  965. !dir$ suppress imask(1)
  965.          t$715 = $_StaticDV_P35
  965.          t$715%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  965.          t$715%header%el_len = 64
  965.          t$715%header%assoc = 1
  965.          t$715%header%ptr_alloc = 0
  965.          t$715%header%p_or_a = 0
  965.          t$715%header%a_contig = 1
  965.          t$715%header%n_dim = 1
  965.          t$715%header%orig_base = 0
  965.          t$715%header%orig_size = 0
  965.          t$715%header%n_codim = 0
  965.          t$715%header%dv_versn = 2
  965.          t$715%header%dv_smunit = 64
  965.          t$715%header%d_type = 0
  965.          t$715%header%n_params = 0
  965.          t$715%header%d_type_idx = 11
  965.          t$715%dim_1%LB = 1
  965.          t$715%dim_1%EX = _zla( 0, ncols )
  965.          t$715%dim_1%SM = 1
  965.          call storemaskedgridhistory( t$714, t$715, 48, latitu, dtc3xi )
  965.       endif
  966.       if ( (dogrh%base_addr)(47, latitu, 0) /= .false. ) then
  966. !dir$ suppress eci(1)
  966.          t$716 = $_StaticDV_P36
  966.          t$716%base_addr = pointer to array[1] of real (kind=8)( loc( eci(1) ) )
  966.          t$716%header%el_len = 64
  966.          t$716%header%assoc = 1
  966.          t$716%header%ptr_alloc = 0
  966.          t$716%header%p_or_a = 0
  966.          t$716%header%a_contig = 1
  966.          t$716%header%n_dim = 1
  966.          t$716%header%orig_base = 0
  966.          t$716%header%orig_size = 0
  966.          t$716%header%n_codim = 0
  966.          t$716%header%dv_versn = 2
  966.          t$716%header%dv_smunit = 64
  966.          t$716%header%d_type = 0
  966.          t$716%header%n_params = 0
  966.          t$716%header%d_type_idx = 13
  966.          t$716%dim_1%LB = 1
  966.          t$716%dim_1%EX = ( max( 0, ncols ) )
  966.          t$716%dim_1%SM = 1
  966. !dir$ suppress imask(1)
  966.          t$717 = $_StaticDV_P37
  966.          t$717%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  966.          t$717%header%el_len = 64
  966.          t$717%header%assoc = 1
  966.          t$717%header%ptr_alloc = 0
  966.          t$717%header%p_or_a = 0
  966.          t$717%header%a_contig = 1
  966.          t$717%header%n_dim = 1
  966.          t$717%header%orig_base = 0
  966.          t$717%header%orig_size = 0
  966.          t$717%header%n_codim = 0
  966.          t$717%header%dv_versn = 2
  966.          t$717%header%dv_smunit = 64
  966.          t$717%header%d_type = 0
  966.          t$717%header%n_params = 0
  966.          t$717%header%d_type_idx = 11
  966.          t$717%dim_1%LB = 1
  966.          t$717%dim_1%EX = _zla( 0, ncols )
  966.          t$717%dim_1%SM = 1
  966.          call storemaskedgridhistory( t$716, t$717, 47, latitu, dtc3xi )
  966.       endif
  967.       if ( (dogrh%base_addr)(49, latitu, 0) /= .false. ) then
  967. !dir$ suppress egi(1)
  967.          t$718 = $_StaticDV_P38
  967.          t$718%base_addr = pointer to array[1] of real (kind=8)( loc( egi(1) ) )
  967.          t$718%header%el_len = 64
  967.          t$718%header%assoc = 1
  967.          t$718%header%ptr_alloc = 0
  967.          t$718%header%p_or_a = 0
  967.          t$718%header%a_contig = 1
  967.          t$718%header%n_dim = 1
  967.          t$718%header%orig_base = 0
  967.          t$718%header%orig_size = 0
  967.          t$718%header%n_codim = 0
  967.          t$718%header%dv_versn = 2
  967.          t$718%header%dv_smunit = 64
  967.          t$718%header%d_type = 0
  967.          t$718%header%n_params = 0
  967.          t$718%header%d_type_idx = 13
  967.          t$718%dim_1%LB = 1
  967.          t$718%dim_1%EX = ( max( 0, ncols ) )
  967.          t$718%dim_1%SM = 1
  967. !dir$ suppress imask(1)
  967.          t$719 = $_StaticDV_P39
  967.          t$719%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  967.          t$719%header%el_len = 64
  967.          t$719%header%assoc = 1
  967.          t$719%header%ptr_alloc = 0
  967.          t$719%header%p_or_a = 0
  967.          t$719%header%a_contig = 1
  967.          t$719%header%n_dim = 1
  967.          t$719%header%orig_base = 0
  967.          t$719%header%orig_size = 0
  967.          t$719%header%n_codim = 0
  967.          t$719%header%dv_versn = 2
  967.          t$719%header%dv_smunit = 64
  967.          t$719%header%d_type = 0
  967.          t$719%header%n_params = 0
  967.          t$719%header%d_type_idx = 11
  967.          t$719%dim_1%LB = 1
  967.          t$719%dim_1%EX = _zla( 0, ncols )
  967.          t$719%dim_1%SM = 1
  967.          call storemaskedgridhistory( t$718, t$719, 49, latitu, dtc3xi )
  967.       endif
  968.       if ( (dogrh%base_addr)(50, latitu, 0) /= .false. ) then
  968. !dir$ suppress egs(1)
  968.          t$720 = $_StaticDV_P40
  968.          t$720%base_addr = pointer to array[1] of real (kind=8)( loc( egs(1) ) )
  968.          t$720%header%el_len = 64
  968.          t$720%header%assoc = 1
  968.          t$720%header%ptr_alloc = 0
  968.          t$720%header%p_or_a = 0
  968.          t$720%header%a_contig = 1
  968.          t$720%header%n_dim = 1
  968.          t$720%header%orig_base = 0
  968.          t$720%header%orig_size = 0
  968.          t$720%header%n_codim = 0
  968.          t$720%header%dv_versn = 2
  968.          t$720%header%dv_smunit = 64
  968.          t$720%header%d_type = 0
  968.          t$720%header%n_params = 0
  968.          t$720%header%d_type_idx = 13
  968.          t$720%dim_1%LB = 1
  968.          t$720%dim_1%EX = ( max( 0, ncols ) )
  968.          t$720%dim_1%SM = 1
  968. !dir$ suppress imask(1)
  968.          t$721 = $_StaticDV_P41
  968.          t$721%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  968.          t$721%header%el_len = 64
  968.          t$721%header%assoc = 1
  968.          t$721%header%ptr_alloc = 0
  968.          t$721%header%p_or_a = 0
  968.          t$721%header%a_contig = 1
  968.          t$721%header%n_dim = 1
  968.          t$721%header%orig_base = 0
  968.          t$721%header%orig_size = 0
  968.          t$721%header%n_codim = 0
  968.          t$721%header%dv_versn = 2
  968.          t$721%header%dv_smunit = 64
  968.          t$721%header%d_type = 0
  968.          t$721%header%n_params = 0
  968.          t$721%header%d_type_idx = 11
  968.          t$721%dim_1%LB = 1
  968.          t$721%dim_1%EX = _zla( 0, ncols )
  968.          t$721%dim_1%SM = 1
  968.          call storemaskedgridhistory( t$720, t$721, 50, latitu, dtc3xi )
  968.       endif
  969.       if ( (dogrh%base_addr)(53, latitu, 0) /= .false. ) then
  969. !dir$ suppress chf(1)
  969.          t$722 = $_StaticDV_P42
  969.          t$722%base_addr = pointer to array[1] of real (kind=8)( loc( chf(1) ) )
  969.          t$722%header%el_len = 64
  969.          t$722%header%assoc = 1
  969.          t$722%header%ptr_alloc = 0
  969.          t$722%header%p_or_a = 0
  969.          t$722%header%a_contig = 1
  969.          t$722%header%n_dim = 1
  969.          t$722%header%orig_base = 0
  969.          t$722%header%orig_size = 0
  969.          t$722%header%n_codim = 0
  969.          t$722%header%dv_versn = 2
  969.          t$722%header%dv_smunit = 64
  969.          t$722%header%d_type = 0
  969.          t$722%header%n_params = 0
  969.          t$722%header%d_type_idx = 13
  969.          t$722%dim_1%LB = 1
  969.          t$722%dim_1%EX = ( max( 0, ncols ) )
  969.          t$722%dim_1%SM = 1
  969. !dir$ suppress imask(1)
  969.          t$723 = $_StaticDV_P43
  969.          t$723%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  969.          t$723%header%el_len = 64
  969.          t$723%header%assoc = 1
  969.          t$723%header%ptr_alloc = 0
  969.          t$723%header%p_or_a = 0
  969.          t$723%header%a_contig = 1
  969.          t$723%header%n_dim = 1
  969.          t$723%header%orig_base = 0
  969.          t$723%header%orig_size = 0
  969.          t$723%header%n_codim = 0
  969.          t$723%header%dv_versn = 2
  969.          t$723%header%dv_smunit = 64
  969.          t$723%header%d_type = 0
  969.          t$723%header%n_params = 0
  969.          t$723%header%d_type_idx = 11
  969.          t$723%dim_1%LB = 1
  969.          t$723%dim_1%EX = _zla( 0, ncols )
  969.          t$723%dim_1%SM = 1
  969.          call storemaskedgridhistory( t$722, t$723, 53, latitu, 0 )
  969.       endif
  970.       if ( (dogrh%base_addr)(54, latitu, 0) /= .false. ) then
  970. !dir$ suppress shf(1)
  970.          t$724 = $_StaticDV_P44
  970.          t$724%base_addr = pointer to array[1] of real (kind=8)( loc( shf(1) ) )
  970.          t$724%header%el_len = 64
  970.          t$724%header%assoc = 1
  970.          t$724%header%ptr_alloc = 0
  970.          t$724%header%p_or_a = 0
  970.          t$724%header%a_contig = 1
  970.          t$724%header%n_dim = 1
  970.          t$724%header%orig_base = 0
  970.          t$724%header%orig_size = 0
  970.          t$724%header%n_codim = 0
  970.          t$724%header%dv_versn = 2
  970.          t$724%header%dv_smunit = 64
  970.          t$724%header%d_type = 0
  970.          t$724%header%n_params = 0
  970.          t$724%header%d_type_idx = 13
  970.          t$724%dim_1%LB = 1
  970.          t$724%dim_1%EX = ( max( 0, ncols ) )
  970.          t$724%dim_1%SM = 1
  970. !dir$ suppress imask(1)
  970.          t$725 = $_StaticDV_P45
  970.          t$725%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  970.          t$725%header%el_len = 64
  970.          t$725%header%assoc = 1
  970.          t$725%header%ptr_alloc = 0
  970.          t$725%header%p_or_a = 0
  970.          t$725%header%a_contig = 1
  970.          t$725%header%n_dim = 1
  970.          t$725%header%orig_base = 0
  970.          t$725%header%orig_size = 0
  970.          t$725%header%n_codim = 0
  970.          t$725%header%dv_versn = 2
  970.          t$725%header%dv_smunit = 64
  970.          t$725%header%d_type = 0
  970.          t$725%header%n_params = 0
  970.          t$725%header%d_type_idx = 11
  970.          t$725%dim_1%LB = 1
  970.          t$725%dim_1%EX = _zla( 0, ncols )
  970.          t$725%dim_1%SM = 1
  970.          call storemaskedgridhistory( t$724, t$725, 54, latitu, 0 )
  970.       endif
  971.       if ( (dogrh%base_addr)(55, latitu, 0) /= .false. ) then
  971. !dir$ suppress roff(1)
  971.          t$726 = $_StaticDV_P46
  971.          t$726%base_addr = pointer to array[1] of real (kind=8)( loc( roff(1) ) )
  971.          t$726%header%el_len = 64
  971.          t$726%header%assoc = 1
  971.          t$726%header%ptr_alloc = 0
  971.          t$726%header%p_or_a = 0
  971.          t$726%header%a_contig = 1
  971.          t$726%header%n_dim = 1
  971.          t$726%header%orig_base = 0
  971.          t$726%header%orig_size = 0
  971.          t$726%header%n_codim = 0
  971.          t$726%header%dv_versn = 2
  971.          t$726%header%dv_smunit = 64
  971.          t$726%header%d_type = 0
  971.          t$726%header%n_params = 0
  971.          t$726%header%d_type_idx = 13
  971.          t$726%dim_1%LB = 1
  971.          t$726%dim_1%EX = ( max( 0, ncols ) )
  971.          t$726%dim_1%SM = 1
  971. !dir$ suppress imask(1)
  971.          t$727 = $_StaticDV_P47
  971.          t$727%base_addr = pointer to array[1] of integer (kind=8)( loc( imask(1) ) )
  971.          t$727%header%el_len = 64
  971.          t$727%header%assoc = 1
  971.          t$727%header%ptr_alloc = 0
  971.          t$727%header%p_or_a = 0
  971.          t$727%header%a_contig = 1
  971.          t$727%header%n_dim = 1
  971.          t$727%header%orig_base = 0
  971.          t$727%header%orig_size = 0
  971.          t$727%header%n_codim = 0
  971.          t$727%header%dv_versn = 2
  971.          t$727%header%dv_smunit = 64
  971.          t$727%header%d_type = 0
  971.          t$727%header%n_params = 0
  971.          t$727%header%d_type_idx = 11
  971.          t$727%dim_1%LB = 1
  971.          t$727%dim_1%EX = _zla( 0, ncols )
  971.          t$727%dim_1%SM = 1
  971.          t$728 = 1000.0 * dtc3xi
  971.          call storemaskedgridhistory( t$726, t$727, 55, latitu, t$728 )
  971.       endif
  972.       $ncount_S4 = 0
  973.       if ( ncols > 0 ) then
  974.          $SC_dogrh_I5 = (dogrh%base_addr)(22, latitu, 0)
  973.          $I_L973_22 = 0
  973. !dir$ ivdep
  973.          do
  974.             if ( $SC_dogrh_I5 /= .false. ) then
  974.                bfrg(1 + $I_L973_22) = 5.6699999999999998e-8 * ( tsurf(1 + $I_L973_22) * tsurf(1 + $I_L973_22) ) * ( tsurf(1 + $I_L973_22) * tsurf(1 + $I_L973_22) )
  974.             endif
  975.             if ( imask(1 + $I_L973_22) > 0 ) then
  976.                $ncount_S4 = 1 + $ncount_S4
  977.                if ( $SC_dogrh_I5 /= .false. ) then
  977.                   bfrg(1 + $I_L973_22) = zlwup($ncount_S4)
  977.                endif
  978.             else if ( $SC_dogrh_I5 /= .false. ) then
  979.                bfrg(1 + $I_L973_22) = 5.6699999999999998e-8 * ( tsurf(1 + $I_L973_22) * tsurf(1 + $I_L973_22) ) * ( tsurf(1 + $I_L973_22) * tsurf(1 + $I_L973_22) )
  979.             endif
  981.             $I_L973_22 = 1 + $I_L973_22
  980.             if ( $I_L973_22 >= ncols ) exit
  980.          enddo
  980.       endif
  983.       if ( (dogrh%base_addr)(22, latitu, 0) /= .false. ) then
  983. !dir$ suppress bfrg(1)
  983.          t$732 = $_StaticDV_P48
  983.          t$732%base_addr = pointer to array[1] of real (kind=8)( loc( bfrg(1) ) )
  983.          t$732%header%el_len = 64
  983.          t$732%header%assoc = 1
  983.          t$732%header%ptr_alloc = 0
  983.          t$732%header%p_or_a = 0
  983.          t$732%header%a_contig = 1
  983.          t$732%header%n_dim = 1
  983.          t$732%header%orig_base = 0
  983.          t$732%header%orig_size = 0
  983.          t$732%header%n_codim = 0
  983.          t$732%header%dv_versn = 2
  983.          t$732%header%dv_smunit = 64
  983.          t$732%header%d_type = 0
  983.          t$732%header%n_params = 0
  983.          t$732%header%d_type_idx = 13
  983.          t$732%dim_1%LB = 1
  983.          t$732%dim_1%EX = ( max( 0, ncols ) )
  983.          t$732%dim_1%SM = 1
  983.          call store1d( t$732, 22, latitu, 0 )
  983.       endif
  984.       if ( (dogrh%base_addr)(13, latitu, 0) /= .false. ) then
  984. !dir$ suppress umom(1)
  984.          t$733 = $_StaticDV_P49
  984.          t$733%base_addr = pointer to array[1] of real (kind=8)( loc( umom(1) ) )
  984.          t$733%header%el_len = 64
  984.          t$733%header%assoc = 1
  984.          t$733%header%ptr_alloc = 0
  984.          t$733%header%p_or_a = 0
  984.          t$733%header%a_contig = 1
  984.          t$733%header%n_dim = 1
  984.          t$733%header%orig_base = 0
  984.          t$733%header%orig_size = 0
  984.          t$733%header%n_codim = 0
  984.          t$733%header%dv_versn = 2
  984.          t$733%header%dv_smunit = 64
  984.          t$733%header%d_type = 0
  984.          t$733%header%n_params = 0
  984.          t$733%header%d_type_idx = 13
  984.          t$733%dim_1%LB = 1
  984.          t$733%dim_1%EX = ( max( 0, ncols ) )
  984.          t$733%dim_1%SM = 1
  984.          call store1d( t$733, 13, latitu, 0 )
  984.       endif
  985.       if ( (dogrh%base_addr)(14, latitu, 0) /= .false. ) then
  985. !dir$ suppress vmom(1)
  985.          t$734 = $_StaticDV_P50
  985.          t$734%base_addr = pointer to array[1] of real (kind=8)( loc( vmom(1) ) )
  985.          t$734%header%el_len = 64
  985.          t$734%header%assoc = 1
  985.          t$734%header%ptr_alloc = 0
  985.          t$734%header%p_or_a = 0
  985.          t$734%header%a_contig = 1
  985.          t$734%header%n_dim = 1
  985.          t$734%header%orig_base = 0
  985.          t$734%header%orig_size = 0
  985.          t$734%header%n_codim = 0
  985.          t$734%header%dv_versn = 2
  985.          t$734%header%dv_smunit = 64
  985.          t$734%header%d_type = 0
  985.          t$734%header%n_params = 0
  985.          t$734%header%d_type_idx = 13
  985.          t$734%dim_1%LB = 1
  985.          t$734%dim_1%EX = ( max( 0, ncols ) )
  985.          t$734%dim_1%SM = 1
  985.          call store1d( t$734, 14, latitu, 0 )
  985.       endif
  986.       if ( (dogrh%base_addr)(15, latitu, 0) /= .false. ) then
  986. !dir$ suppress sens(1)
  986.          t$735 = $_StaticDV_P51
  986.          t$735%base_addr = pointer to array[1] of real (kind=8)( loc( sens(1) ) )
  986.          t$735%header%el_len = 64
  986.          t$735%header%assoc = 1
  986.          t$735%header%ptr_alloc = 0
  986.          t$735%header%p_or_a = 0
  986.          t$735%header%a_contig = 1
  986.          t$735%header%n_dim = 1
  986.          t$735%header%orig_base = 0
  986.          t$735%header%orig_size = 0
  986.          t$735%header%n_codim = 0
  986.          t$735%header%dv_versn = 2
  986.          t$735%header%dv_smunit = 64
  986.          t$735%header%d_type = 0
  986.          t$735%header%n_params = 0
  986.          t$735%header%d_type_idx = 13
  986.          t$735%dim_1%LB = 1
  986.          t$735%dim_1%EX = ( max( 0, ncols ) )
  986.          t$735%dim_1%SM = 1
  986.          call store1d( t$735, 15, latitu, 0 )
  986.       endif
  987.       if ( (dogrh%base_addr)(16, latitu, 0) /= .false. ) then
  987. !dir$ suppress evap(1)
  987.          t$736 = $_StaticDV_P52
  987.          t$736%base_addr = pointer to array[1] of real (kind=8)( loc( evap(1) ) )
  987.          t$736%header%el_len = 64
  987.          t$736%header%assoc = 1
  987.          t$736%header%ptr_alloc = 0
  987.          t$736%header%p_or_a = 0
  987.          t$736%header%a_contig = 1
  987.          t$736%header%n_dim = 1
  987.          t$736%header%orig_base = 0
  987.          t$736%header%orig_size = 0
  987.          t$736%header%n_codim = 0
  987.          t$736%header%dv_versn = 2
  987.          t$736%header%dv_smunit = 64
  987.          t$736%header%d_type = 0
  987.          t$736%header%n_params = 0
  987.          t$736%header%d_type_idx = 13
  987.          t$736%dim_1%LB = 1
  987.          t$736%dim_1%EX = ( max( 0, ncols ) )
  987.          t$736%dim_1%SM = 1
  987.          call store1d( t$736, 16, latitu, 0 )
  987.       endif
  866.       _free( t$353 )
  988.       return
  988.       end
  988.       
 1104.       
 1104.       subroutine sfcdiagnstorage( ncols, dtc3xi, velc_10m, velc_2m, mixq_10m, umes2m, temp2m, theta_10m, uve10m, vve10m, sens, evap, imask, eci, egi, roff, ta, ea, egs, ra, rb, rd, rg, rmi, rhi, tsurf, umom, vmom, latitu )
  990.       t$9 = ncols
  999.       t$356 = _zla( 0, ncols )
 1025.       t$359 = 8 * _zla( 0, ncols )
 1026.       t$360 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 1026.       t$362 = t$360 + 8 * _zla( 0, ncols )
  990.       t$363 = _zla( 0, ncols )
  990.       t$364 = 8 * _zla( 0, ncols )
 1027.       t$365 = 8 * ( 7 + t$360 + 8 * _zla( 0, ncols ) ) / 8
 1027.       t$367 = t$365 + 64 * _zla( 0, ncols )
  990.       t$357 = int( _alloc( t$365 + 64 * _zla( 0, ncols ) ), 8 )
 1025.       t$358 = t$357
 1026.       t$361 = t$360 + t$357
 1027.       t$366 = t$365 + t$357
 1030.       if ( (dodia%base_addr)(102, 0) /= .false. ) then
 1030. !dir$ suppress velc_10m(1)
 1030.          t$737 = $_StaticDV_P0
 1030.          t$737%base_addr = pointer to array[1] of real (kind=8)( loc( velc_10m(1) ) )
 1030.          t$737%header%el_len = 64
 1030.          t$737%header%assoc = 1
 1030.          t$737%header%ptr_alloc = 0
 1030.          t$737%header%p_or_a = 0
 1030.          t$737%header%a_contig = 1
 1030.          t$737%header%n_dim = 1
 1030.          t$737%header%orig_base = 0
 1030.          t$737%header%orig_size = 0
 1030.          t$737%header%n_codim = 0
 1030.          t$737%header%dv_versn = 2
 1030.          t$737%header%dv_smunit = 64
 1030.          t$737%header%d_type = 0
 1030.          t$737%header%n_params = 0
 1030.          t$737%header%d_type_idx = 13
 1030.          t$737%dim_1%LB = 1
 1030.          t$737%dim_1%EX = _zla( 0, ncols )
 1030.          t$737%dim_1%SM = 1
 1030.          call updia1d( t$737, 102, latitu )
 1030.       endif
 1032.       if ( (dodia%base_addr)(99, 0) /= .false. ) then
 1032. !dir$ suppress velc_2m(1)
 1032.          t$738 = $_StaticDV_P1
 1032.          t$738%base_addr = pointer to array[1] of real (kind=8)( loc( velc_2m(1) ) )
 1032.          t$738%header%el_len = 64
 1032.          t$738%header%assoc = 1
 1032.          t$738%header%ptr_alloc = 0
 1032.          t$738%header%p_or_a = 0
 1032.          t$738%header%a_contig = 1
 1032.          t$738%header%n_dim = 1
 1032.          t$738%header%orig_base = 0
 1032.          t$738%header%orig_size = 0
 1032.          t$738%header%n_codim = 0
 1032.          t$738%header%dv_versn = 2
 1032.          t$738%header%dv_smunit = 64
 1032.          t$738%header%d_type = 0
 1032.          t$738%header%n_params = 0
 1032.          t$738%header%d_type_idx = 13
 1032.          t$738%dim_1%LB = 1
 1032.          t$738%dim_1%EX = _zla( 0, ncols )
 1032.          t$738%dim_1%SM = 1
 1032.          call updia1d( t$738, 99, latitu )
 1032.       endif
 1034.       if ( (dodia%base_addr)(101, 0) /= .false. ) then
 1034. !dir$ suppress mixq_10m(1)
 1034.          t$739 = $_StaticDV_P2
 1034.          t$739%base_addr = pointer to array[1] of real (kind=8)( loc( mixq_10m(1) ) )
 1034.          t$739%header%el_len = 64
 1034.          t$739%header%assoc = 1
 1034.          t$739%header%ptr_alloc = 0
 1034.          t$739%header%p_or_a = 0
 1034.          t$739%header%a_contig = 1
 1034.          t$739%header%n_dim = 1
 1034.          t$739%header%orig_base = 0
 1034.          t$739%header%orig_size = 0
 1034.          t$739%header%n_codim = 0
 1034.          t$739%header%dv_versn = 2
 1034.          t$739%header%dv_smunit = 64
 1034.          t$739%header%d_type = 0
 1034.          t$739%header%n_params = 0
 1034.          t$739%header%d_type_idx = 13
 1034.          t$739%dim_1%LB = 1
 1034.          t$739%dim_1%EX = _zla( 0, ncols )
 1034.          t$739%dim_1%SM = 1
 1034.          call updia1d( t$739, 101, latitu )
 1034.       endif
 1036.       if ( (dodia%base_addr)(98, 0) /= .false. ) then
 1036. !dir$ suppress umes2m(1)
 1036.          t$740 = $_StaticDV_P3
 1036.          t$740%base_addr = pointer to array[1] of real (kind=8)( loc( umes2m(1) ) )
 1036.          t$740%header%el_len = 64
 1036.          t$740%header%assoc = 1
 1036.          t$740%header%ptr_alloc = 0
 1036.          t$740%header%p_or_a = 0
 1036.          t$740%header%a_contig = 1
 1036.          t$740%header%n_dim = 1
 1036.          t$740%header%orig_base = 0
 1036.          t$740%header%orig_size = 0
 1036.          t$740%header%n_codim = 0
 1036.          t$740%header%dv_versn = 2
 1036.          t$740%header%dv_smunit = 64
 1036.          t$740%header%d_type = 0
 1036.          t$740%header%n_params = 0
 1036.          t$740%header%d_type_idx = 13
 1036.          t$740%dim_1%LB = 1
 1036.          t$740%dim_1%EX = _zla( 0, ncols )
 1036.          t$740%dim_1%SM = 1
 1036.          call updia1d( t$740, 98, latitu )
 1036.       endif
 1038.       if ( (dodia%base_addr)(97, 0) /= .false. ) then
 1038. !dir$ suppress temp2m(1)
 1038.          t$741 = $_StaticDV_P4
 1038.          t$741%base_addr = pointer to array[1] of real (kind=8)( loc( temp2m(1) ) )
 1038.          t$741%header%el_len = 64
 1038.          t$741%header%assoc = 1
 1038.          t$741%header%ptr_alloc = 0
 1038.          t$741%header%p_or_a = 0
 1038.          t$741%header%a_contig = 1
 1038.          t$741%header%n_dim = 1
 1038.          t$741%header%orig_base = 0
 1038.          t$741%header%orig_size = 0
 1038.          t$741%header%n_codim = 0
 1038.          t$741%header%dv_versn = 2
 1038.          t$741%header%dv_smunit = 64
 1038.          t$741%header%d_type = 0
 1038.          t$741%header%n_params = 0
 1038.          t$741%header%d_type_idx = 13
 1038.          t$741%dim_1%LB = 1
 1038.          t$741%dim_1%EX = _zla( 0, ncols )
 1038.          t$741%dim_1%SM = 1
 1038.          call updia1d( t$741, 97, latitu )
 1038.       endif
 1040.       if ( (dodia%base_addr)(100, 0) /= .false. ) then
 1040. !dir$ suppress theta_10m(1)
 1040.          t$742 = $_StaticDV_P5
 1040.          t$742%base_addr = pointer to array[1] of real (kind=8)( loc( theta_10m(1) ) )
 1040.          t$742%header%el_len = 64
 1040.          t$742%header%assoc = 1
 1040.          t$742%header%ptr_alloc = 0
 1040.          t$742%header%p_or_a = 0
 1040.          t$742%header%a_contig = 1
 1040.          t$742%header%n_dim = 1
 1040.          t$742%header%orig_base = 0
 1040.          t$742%header%orig_size = 0
 1040.          t$742%header%n_codim = 0
 1040.          t$742%header%dv_versn = 2
 1040.          t$742%header%dv_smunit = 64
 1040.          t$742%header%d_type = 0
 1040.          t$742%header%n_params = 0
 1040.          t$742%header%d_type_idx = 13
 1040.          t$742%dim_1%LB = 1
 1040.          t$742%dim_1%EX = _zla( 0, ncols )
 1040.          t$742%dim_1%SM = 1
 1040.          call updia1d( t$742, 100, latitu )
 1040.       endif
 1042.       if ( (dodia%base_addr)(105, 0) /= .false. ) then
 1042. !dir$ suppress uve10m(1)
 1042.          t$743 = $_StaticDV_P6
 1042.          t$743%base_addr = pointer to array[1] of real (kind=8)( loc( uve10m(1) ) )
 1042.          t$743%header%el_len = 64
 1042.          t$743%header%assoc = 1
 1042.          t$743%header%ptr_alloc = 0
 1042.          t$743%header%p_or_a = 0
 1042.          t$743%header%a_contig = 1
 1042.          t$743%header%n_dim = 1
 1042.          t$743%header%orig_base = 0
 1042.          t$743%header%orig_size = 0
 1042.          t$743%header%n_codim = 0
 1042.          t$743%header%dv_versn = 2
 1042.          t$743%header%dv_smunit = 64
 1042.          t$743%header%d_type = 0
 1042.          t$743%header%n_params = 0
 1042.          t$743%header%d_type_idx = 13
 1042.          t$743%dim_1%LB = 1
 1042.          t$743%dim_1%EX = _zla( 0, ncols )
 1042.          t$743%dim_1%SM = 1
 1042.          call updia1d( t$743, 105, latitu )
 1042.       endif
 1044.       if ( (dodia%base_addr)(106, 0) /= .false. ) then
 1044. !dir$ suppress vve10m(1)
 1044.          t$744 = $_StaticDV_P7
 1044.          t$744%base_addr = pointer to array[1] of real (kind=8)( loc( vve10m(1) ) )
 1044.          t$744%header%el_len = 64
 1044.          t$744%header%assoc = 1
 1044.          t$744%header%ptr_alloc = 0
 1044.          t$744%header%p_or_a = 0
 1044.          t$744%header%a_contig = 1
 1044.          t$744%header%n_dim = 1
 1044.          t$744%header%orig_base = 0
 1044.          t$744%header%orig_size = 0
 1044.          t$744%header%n_codim = 0
 1044.          t$744%header%dv_versn = 2
 1044.          t$744%header%dv_smunit = 64
 1044.          t$744%header%d_type = 0
 1044.          t$744%header%n_params = 0
 1044.          t$744%header%d_type_idx = 13
 1044.          t$744%dim_1%LB = 1
 1044.          t$744%dim_1%EX = _zla( 0, ncols )
 1044.          t$744%dim_1%SM = 1
 1044.          call updia1d( t$744, 106, latitu )
 1044.       endif
 1045.       $ncount_S1 = 0
 1046.       if ( ncols > 0 ) then
 1054.          $SC_dodia_I9 = (dodia%base_addr)(84, 0)
 1053.          $SC_dodia_I8 = (dodia%base_addr)(83, 0)
 1052.          $SC_dodia_I7 = (dodia%base_addr)(82, 0)
 1051.          $SC_dodia_I6 = (dodia%base_addr)(69, 0)
 1050.          $SC_dodia_I5 = (dodia%base_addr)(68, 0)
 1049.          $SC_dodia_I4 = (dodia%base_addr)(67, 0)
 1048.          $SC_dodia_I3 = (dodia%base_addr)(13, 0)
 1047.          $SC_dodia_I2 = (dodia%base_addr)(15, 0)
 1047.          $SC_dodia_I0 = dodia%dim_1%EX
 1047.          $SC_dodia_I1 = dodia%dim_1%LB
 1046.          $I_L1046_24 = 0
 1046. !dir$ ivdep
 1046.          do
 1047.             if ( $SC_dodia_I2 /= .false. ) then
 1047.                bfr1(1 + $I_L1046_24) = 0.0
 1047.             endif
 1048.             if ( $SC_dodia_I3 /= .false. ) then
 1048.                bfr2(1 + $I_L1046_24) = 0.0
 1048.             endif
 1049.             if ( $SC_dodia_I4 /= .false. ) then
 1049.                swrk(1 + $I_L1046_24, 1) = tsurf(1 + $I_L1046_24)
 1049.             endif
 1050.             if ( $SC_dodia_I5 /= .false. ) then
 1050.                swrk(1 + $I_L1046_24, 2) = 0.0
 1050.             endif
 1051.             if ( $SC_dodia_I6 /= .false. ) then
 1051.                swrk(1 + $I_L1046_24, 3) = 0.0
 1051.             endif
 1052.             if ( $SC_dodia_I7 /= .false. ) then
 1052.                swrk(1 + $I_L1046_24, 6) = 0.0
 1052.             endif
 1053.             if ( $SC_dodia_I8 /= .false. ) then
 1053.                swrk(1 + $I_L1046_24, 7) = 0.0
 1053.             endif
 1054.             if ( $SC_dodia_I9 /= .false. ) then
 1054.                swrk(1 + $I_L1046_24, 8) = 0.0
 1054.             endif
 1055.             if ( imask(1 + $I_L1046_24) > 0 ) then
 1056.                $ncount_S1 = 1 + $ncount_S1
 1057.                if ( $SC_dodia_I2 /= .false. ) then
 1057.                   bfr1(1 + $I_L1046_24) = bfr1(1 + $I_L1046_24) + dtc3xi * ( egi($ncount_S1) + eci($ncount_S1) )
 1057.                endif
 1058.                if ( $SC_dodia_I3 /= .false. ) then
 1058.                   bfr2(1 + $I_L1046_24) = bfr2(1 + $I_L1046_24) + 1000.0 * dtc3xi * roff($ncount_S1)
 1058.                endif
 1059.                if ( $SC_dodia_I4 /= .false. ) then
 1059.                   swrk(1 + $I_L1046_24, 1) = ta($ncount_S1)
 1059.                endif
 1060.                if ( $SC_dodia_I5 /= .false. ) then
 1060.                   swrk(1 + $I_L1046_24, 2) = ea($ncount_S1)
 1060.                endif
 1061.                if ( $SC_dodia_I6 /= .false. ) then
 1061.                   swrk(1 + $I_L1046_24, 3) = dtc3xi * egs($ncount_S1)
 1061.                endif
 1062.                if ( (dodia%base_addr)(80, 0) /= .false. ) then
 1062.                   swrk(1 + $I_L1046_24, 4) = 0.0
 1062.                endif
 1063.                if ( (dodia%base_addr)(81, 0) /= .false. ) then
 1063.                   swrk(1 + $I_L1046_24, 5) = ra($ncount_S1)
 1063.                endif
 1064.                if ( $SC_dodia_I7 /= .false. ) then
 1064.                   swrk(1 + $I_L1046_24, 6) = rb($ncount_S1)
 1064.                endif
 1065.                if ( $SC_dodia_I8 /= .false. ) then
 1065.                   swrk(1 + $I_L1046_24, 7) = rd($ncount_S1)
 1065.                endif
 1066.                if ( $SC_dodia_I9 /= .false. ) then
 1066.                   swrk(1 + $I_L1046_24, 8) = rg($ncount_S1)
 1066.                endif
 1066.             else
 1068.                if ( (dodia%base_addr)(80, 0) /= .false. ) then
 1068.                   swrk(1 + $I_L1046_24, 4) = 1.0/rmi(1 + $I_L1046_24)
 1068.                endif
 1069.                if ( (dodia%base_addr)(81, 0) /= .false. ) then
 1069.                   swrk(1 + $I_L1046_24, 5) = 1.0/rhi(1 + $I_L1046_24)
 1069.                endif
 1069.             endif
 1071.             $I_L1046_24 = 1 + $I_L1046_24
 1070.             if ( $I_L1046_24 >= ncols ) exit
 1070.          enddo
 1070.       endif
 1072.       if ( (dodia%base_addr)(16, 0) /= .false. ) then
 1072. !dir$ suppress sens(1)
 1072.          t$748 = $_StaticDV_P8
 1072.          t$748%base_addr = pointer to array[1] of real (kind=8)( loc( sens(1) ) )
 1072.          t$748%header%el_len = 64
 1072.          t$748%header%assoc = 1
 1072.          t$748%header%ptr_alloc = 0
 1072.          t$748%header%p_or_a = 0
 1072.          t$748%header%a_contig = 1
 1072.          t$748%header%n_dim = 1
 1072.          t$748%header%orig_base = 0
 1072.          t$748%header%orig_size = 0
 1072.          t$748%header%n_codim = 0
 1072.          t$748%header%dv_versn = 2
 1072.          t$748%header%dv_smunit = 64
 1072.          t$748%header%d_type = 0
 1072.          t$748%header%n_params = 0
 1072.          t$748%header%d_type_idx = 13
 1072.          t$748%dim_1%LB = 1
 1072.          t$748%dim_1%EX = _zla( 0, ncols )
 1072.          t$748%dim_1%SM = 1
 1072.          call updia1d( t$748, 16, latitu )
 1072.       endif
 1073.       if ( (dodia%base_addr)(17, 0) /= .false. ) then
 1073. !dir$ suppress evap(1)
 1073.          t$749 = $_StaticDV_P9
 1073.          t$749%base_addr = pointer to array[1] of real (kind=8)( loc( evap(1) ) )
 1073.          t$749%header%el_len = 64
 1073.          t$749%header%assoc = 1
 1073.          t$749%header%ptr_alloc = 0
 1073.          t$749%header%p_or_a = 0
 1073.          t$749%header%a_contig = 1
 1073.          t$749%header%n_dim = 1
 1073.          t$749%header%orig_base = 0
 1073.          t$749%header%orig_size = 0
 1073.          t$749%header%n_codim = 0
 1073.          t$749%header%dv_versn = 2
 1073.          t$749%header%dv_smunit = 64
 1073.          t$749%header%d_type = 0
 1073.          t$749%header%n_params = 0
 1073.          t$749%header%d_type_idx = 13
 1073.          t$749%dim_1%LB = 1
 1073.          t$749%dim_1%EX = _zla( 0, ncols )
 1073.          t$749%dim_1%SM = 1
 1073.          call updia1d( t$749, 17, latitu )
 1073.       endif
 1074.       if ( (dodia%base_addr)(15, 0) /= .false. ) then
 1074. !dir$ suppress bfr1(1)
 1074.          t$750 = $_StaticDV_P10
 1074.          t$750%base_addr = pointer to array[1] of real (kind=8)( loc( bfr1(1) ) )
 1074.          t$750%header%el_len = 64
 1074.          t$750%header%assoc = 1
 1074.          t$750%header%ptr_alloc = 0
 1074.          t$750%header%p_or_a = 0
 1074.          t$750%header%a_contig = 1
 1074.          t$750%header%n_dim = 1
 1074.          t$750%header%orig_base = 0
 1074.          t$750%header%orig_size = 0
 1074.          t$750%header%n_codim = 0
 1074.          t$750%header%dv_versn = 2
 1074.          t$750%header%dv_smunit = 64
 1074.          t$750%header%d_type = 0
 1074.          t$750%header%n_params = 0
 1074.          t$750%header%d_type_idx = 13
 1074.          t$750%dim_1%LB = 1
 1074.          t$750%dim_1%EX = _zla( 0, ncols )
 1074.          t$750%dim_1%SM = 1
 1074.          call updia1d( t$750, 15, latitu )
 1074.       endif
 1075.       if ( (dodia%base_addr)(13, 0) /= .false. ) then
 1075. !dir$ suppress bfr2(1)
 1075.          t$751 = $_StaticDV_P11
 1075.          t$751%base_addr = pointer to array[1] of real (kind=8)( loc( bfr2(1) ) )
 1075.          t$751%header%el_len = 64
 1075.          t$751%header%assoc = 1
 1075.          t$751%header%ptr_alloc = 0
 1075.          t$751%header%p_or_a = 0
 1075.          t$751%header%a_contig = 1
 1075.          t$751%header%n_dim = 1
 1075.          t$751%header%orig_base = 0
 1075.          t$751%header%orig_size = 0
 1075.          t$751%header%n_codim = 0
 1075.          t$751%header%dv_versn = 2
 1075.          t$751%header%dv_smunit = 64
 1075.          t$751%header%d_type = 0
 1075.          t$751%header%n_params = 0
 1075.          t$751%header%d_type_idx = 13
 1075.          t$751%dim_1%LB = 1
 1075.          t$751%dim_1%EX = _zla( 0, ncols )
 1075.          t$751%dim_1%SM = 1
 1075.          call updia1d( t$751, 13, latitu )
 1075.       endif
 1076.       if ( (dodia%base_addr)(67, 0) /= .false. ) then
 1076. !dir$ suppress swrk(1, 1)
 1076.          t$752 = $_StaticDV_P12
 1076.          t$752%base_addr = pointer to array[1] of real (kind=8)( loc( swrk(1, 1) ) )
 1076.          t$752%header%el_len = 64
 1076.          t$752%header%assoc = 1
 1076.          t$752%header%ptr_alloc = 0
 1076.          t$752%header%p_or_a = 0
 1076.          t$752%header%a_contig = 1
 1076.          t$752%header%n_dim = 1
 1076.          t$752%header%orig_base = 0
 1076.          t$752%header%orig_size = 0
 1076.          t$752%header%n_codim = 0
 1076.          t$752%header%dv_versn = 2
 1076.          t$752%header%dv_smunit = 64
 1076.          t$752%header%d_type = 0
 1076.          t$752%header%n_params = 0
 1076.          t$752%header%d_type_idx = 13
 1076.          t$752%dim_1%LB = 1
 1076.          t$752%dim_1%EX = ( max( 0, ncols ) )
 1076.          t$752%dim_1%SM = 1
 1076.          call updia1d( t$752, 67, latitu )
 1076.       endif
 1077.       if ( (dodia%base_addr)(68, 0) /= .false. ) then
 1077. !dir$ suppress swrk(1, 2)
 1077.          t$753 = $_StaticDV_P13
 1077.          t$753%base_addr = pointer to array[1] of real (kind=8)( loc( swrk(1, 2) ) )
 1077.          t$753%header%el_len = 64
 1077.          t$753%header%assoc = 1
 1077.          t$753%header%ptr_alloc = 0
 1077.          t$753%header%p_or_a = 0
 1077.          t$753%header%a_contig = 1
 1077.          t$753%header%n_dim = 1
 1077.          t$753%header%orig_base = 0
 1077.          t$753%header%orig_size = 0
 1077.          t$753%header%n_codim = 0
 1077.          t$753%header%dv_versn = 2
 1077.          t$753%header%dv_smunit = 64
 1077.          t$753%header%d_type = 0
 1077.          t$753%header%n_params = 0
 1077.          t$753%header%d_type_idx = 13
 1077.          t$753%dim_1%LB = 1
 1077.          t$753%dim_1%EX = ( max( 0, ncols ) )
 1077.          t$753%dim_1%SM = 1
 1077.          call updia1d( t$753, 68, latitu )
 1077.       endif
 1078.       if ( (dodia%base_addr)(69, 0) /= .false. ) then
 1078. !dir$ suppress swrk(1, 3)
 1078.          t$754 = $_StaticDV_P14
 1078.          t$754%base_addr = pointer to array[1] of real (kind=8)( loc( swrk(1, 3) ) )
 1078.          t$754%header%el_len = 64
 1078.          t$754%header%assoc = 1
 1078.          t$754%header%ptr_alloc = 0
 1078.          t$754%header%p_or_a = 0
 1078.          t$754%header%a_contig = 1
 1078.          t$754%header%n_dim = 1
 1078.          t$754%header%orig_base = 0
 1078.          t$754%header%orig_size = 0
 1078.          t$754%header%n_codim = 0
 1078.          t$754%header%dv_versn = 2
 1078.          t$754%header%dv_smunit = 64
 1078.          t$754%header%d_type = 0
 1078.          t$754%header%n_params = 0
 1078.          t$754%header%d_type_idx = 13
 1078.          t$754%dim_1%LB = 1
 1078.          t$754%dim_1%EX = ( max( 0, ncols ) )
 1078.          t$754%dim_1%SM = 1
 1078.          call updia1d( t$754, 69, latitu )
 1078.       endif
 1079.       if ( (dodia%base_addr)(80, 0) /= .false. ) then
 1079. !dir$ suppress swrk(1, 4)
 1079.          t$755 = $_StaticDV_P15
 1079.          t$755%base_addr = pointer to array[1] of real (kind=8)( loc( swrk(1, 4) ) )
 1079.          t$755%header%el_len = 64
 1079.          t$755%header%assoc = 1
 1079.          t$755%header%ptr_alloc = 0
 1079.          t$755%header%p_or_a = 0
 1079.          t$755%header%a_contig = 1
 1079.          t$755%header%n_dim = 1
 1079.          t$755%header%orig_base = 0
 1079.          t$755%header%orig_size = 0
 1079.          t$755%header%n_codim = 0
 1079.          t$755%header%dv_versn = 2
 1079.          t$755%header%dv_smunit = 64
 1079.          t$755%header%d_type = 0
 1079.          t$755%header%n_params = 0
 1079.          t$755%header%d_type_idx = 13
 1079.          t$755%dim_1%LB = 1
 1079.          t$755%dim_1%EX = ( max( 0, ncols ) )
 1079.          t$755%dim_1%SM = 1
 1079.          call updia1d( t$755, 80, latitu )
 1079.       endif
 1080.       if ( (dodia%base_addr)(81, 0) /= .false. ) then
 1080. !dir$ suppress swrk(1, 5)
 1080.          t$756 = $_StaticDV_P16
 1080.          t$756%base_addr = pointer to array[1] of real (kind=8)( loc( swrk(1, 5) ) )
 1080.          t$756%header%el_len = 64
 1080.          t$756%header%assoc = 1
 1080.          t$756%header%ptr_alloc = 0
 1080.          t$756%header%p_or_a = 0
 1080.          t$756%header%a_contig = 1
 1080.          t$756%header%n_dim = 1
 1080.          t$756%header%orig_base = 0
 1080.          t$756%header%orig_size = 0
 1080.          t$756%header%n_codim = 0
 1080.          t$756%header%dv_versn = 2
 1080.          t$756%header%dv_smunit = 64
 1080.          t$756%header%d_type = 0
 1080.          t$756%header%n_params = 0
 1080.          t$756%header%d_type_idx = 13
 1080.          t$756%dim_1%LB = 1
 1080.          t$756%dim_1%EX = ( max( 0, ncols ) )
 1080.          t$756%dim_1%SM = 1
 1080.          call updia1d( t$756, 81, latitu )
 1080.       endif
 1081.       if ( (dodia%base_addr)(82, 0) /= .false. ) then
 1081. !dir$ suppress swrk(1, 6)
 1081.          t$757 = $_StaticDV_P17
 1081.          t$757%base_addr = pointer to array[1] of real (kind=8)( loc( swrk(1, 6) ) )
 1081.          t$757%header%el_len = 64
 1081.          t$757%header%assoc = 1
 1081.          t$757%header%ptr_alloc = 0
 1081.          t$757%header%p_or_a = 0
 1081.          t$757%header%a_contig = 1
 1081.          t$757%header%n_dim = 1
 1081.          t$757%header%orig_base = 0
 1081.          t$757%header%orig_size = 0
 1081.          t$757%header%n_codim = 0
 1081.          t$757%header%dv_versn = 2
 1081.          t$757%header%dv_smunit = 64
 1081.          t$757%header%d_type = 0
 1081.          t$757%header%n_params = 0
 1081.          t$757%header%d_type_idx = 13
 1081.          t$757%dim_1%LB = 1
 1081.          t$757%dim_1%EX = ( max( 0, ncols ) )
 1081.          t$757%dim_1%SM = 1
 1081.          call updia1d( t$757, 82, latitu )
 1081.       endif
 1082.       if ( (dodia%base_addr)(83, 0) /= .false. ) then
 1082. !dir$ suppress swrk(1, 7)
 1082.          t$758 = $_StaticDV_P18
 1082.          t$758%base_addr = pointer to array[1] of real (kind=8)( loc( swrk(1, 7) ) )
 1082.          t$758%header%el_len = 64
 1082.          t$758%header%assoc = 1
 1082.          t$758%header%ptr_alloc = 0
 1082.          t$758%header%p_or_a = 0
 1082.          t$758%header%a_contig = 1
 1082.          t$758%header%n_dim = 1
 1082.          t$758%header%orig_base = 0
 1082.          t$758%header%orig_size = 0
 1082.          t$758%header%n_codim = 0
 1082.          t$758%header%dv_versn = 2
 1082.          t$758%header%dv_smunit = 64
 1082.          t$758%header%d_type = 0
 1082.          t$758%header%n_params = 0
 1082.          t$758%header%d_type_idx = 13
 1082.          t$758%dim_1%LB = 1
 1082.          t$758%dim_1%EX = ( max( 0, ncols ) )
 1082.          t$758%dim_1%SM = 1
 1082.          call updia1d( t$758, 83, latitu )
 1082.       endif
 1083.       if ( (dodia%base_addr)(84, 0) /= .false. ) then
 1083. !dir$ suppress swrk(1, 8)
 1083.          t$759 = $_StaticDV_P19
 1083.          t$759%base_addr = pointer to array[1] of real (kind=8)( loc( swrk(1, 8) ) )
 1083.          t$759%header%el_len = 64
 1083.          t$759%header%assoc = 1
 1083.          t$759%header%ptr_alloc = 0
 1083.          t$759%header%p_or_a = 0
 1083.          t$759%header%a_contig = 1
 1083.          t$759%header%n_dim = 1
 1083.          t$759%header%orig_base = 0
 1083.          t$759%header%orig_size = 0
 1083.          t$759%header%n_codim = 0
 1083.          t$759%header%dv_versn = 2
 1083.          t$759%header%dv_smunit = 64
 1083.          t$759%header%d_type = 0
 1083.          t$759%header%n_params = 0
 1083.          t$759%header%d_type_idx = 13
 1083.          t$759%dim_1%LB = 1
 1083.          t$759%dim_1%EX = ( max( 0, ncols ) )
 1083.          t$759%dim_1%SM = 1
 1083.          call updia1d( t$759, 84, latitu )
 1083.       endif
 1085.       if ( (dodia%base_addr)(18, 0) /= .false. ) then
 1086.          if ( ncols > 0 ) then
 1086.             $I_L1086_26 = 0
 1086. !dir$ ivdep
 1086.             do
 1087.                bfr1(1 + $I_L1086_26) = -umom(1 + $I_L1086_26)
 1088.                $I_L1086_26 = 1 + $I_L1086_26
 1086.                if ( $I_L1086_26 >= ncols ) exit
 1086.             enddo
 1086.          endif
 1089. !dir$ suppress bfr1(1)
 1089.          t$763 = $_StaticDV_P20
 1089.          t$763%base_addr = pointer to array[1] of real (kind=8)( loc( bfr1(1) ) )
 1089.          t$763%header%el_len = 64
 1089.          t$763%header%assoc = 1
 1089.          t$763%header%ptr_alloc = 0
 1089.          t$763%header%p_or_a = 0
 1089.          t$763%header%a_contig = 1
 1089.          t$763%header%n_dim = 1
 1089.          t$763%header%orig_base = 0
 1089.          t$763%header%orig_size = 0
 1089.          t$763%header%n_codim = 0
 1089.          t$763%header%dv_versn = 2
 1089.          t$763%header%dv_smunit = 64
 1089.          t$763%header%d_type = 0
 1089.          t$763%header%n_params = 0
 1089.          t$763%header%d_type_idx = 13
 1089.          t$763%dim_1%LB = 1
 1089.          t$763%dim_1%EX = _zla( 0, ncols )
 1089.          t$763%dim_1%SM = 1
 1089.          call updia1d( t$763, 18, latitu )
 1089.       endif
 1091.       if ( (dodia%base_addr)(19, 0) /= .false. ) then
 1092.          if ( ncols > 0 ) then
 1092.             $I_L1092_28 = 0
 1092. !dir$ ivdep
 1092.             do
 1093.                bfr2(1 + $I_L1092_28) = -vmom(1 + $I_L1092_28)
 1094.                $I_L1092_28 = 1 + $I_L1092_28
 1092.                if ( $I_L1092_28 >= ncols ) exit
 1092.             enddo
 1092.          endif
 1095. !dir$ suppress bfr2(1)
 1095.          t$767 = $_StaticDV_P21
 1095.          t$767%base_addr = pointer to array[1] of real (kind=8)( loc( bfr2(1) ) )
 1095.          t$767%header%el_len = 64
 1095.          t$767%header%assoc = 1
 1095.          t$767%header%ptr_alloc = 0
 1095.          t$767%header%p_or_a = 0
 1095.          t$767%header%a_contig = 1
 1095.          t$767%header%n_dim = 1
 1095.          t$767%header%orig_base = 0
 1095.          t$767%header%orig_size = 0
 1095.          t$767%header%n_codim = 0
 1095.          t$767%header%dv_versn = 2
 1095.          t$767%header%dv_smunit = 64
 1095.          t$767%header%d_type = 0
 1095.          t$767%header%n_params = 0
 1095.          t$767%header%d_type_idx = 13
 1095.          t$767%dim_1%LB = 1
 1095.          t$767%dim_1%EX = _zla( 0, ncols )
 1095.          t$767%dim_1%SM = 1
 1095.          call updia1d( t$767, 19, latitu )
 1095.       endif
 1097.       if ( (dodia%base_addr)(22, 0) /= .false. ) then
 1098.          if ( ncols > 0 ) then
 1098.             $I_L1098_30 = 0
 1098. !dir$ ivdep
 1098.             do
 1099.                bfr1(1 + $I_L1098_30) = 5.6699999999999998e-8 * ( tsurf(1 + $I_L1098_30) * tsurf(1 + $I_L1098_30) ) * ( tsurf(1 + $I_L1098_30) * tsurf(1 + $I_L1098_30) )
 1100.                $I_L1098_30 = 1 + $I_L1098_30
 1098.                if ( $I_L1098_30 >= ncols ) exit
 1098.             enddo
 1098.          endif
 1101. !dir$ suppress bfr1(1)
 1101.          t$771 = $_StaticDV_P22
 1101.          t$771%base_addr = pointer to array[1] of real (kind=8)( loc( bfr1(1) ) )
 1101.          t$771%header%el_len = 64
 1101.          t$771%header%assoc = 1
 1101.          t$771%header%ptr_alloc = 0
 1101.          t$771%header%p_or_a = 0
 1101.          t$771%header%a_contig = 1
 1101.          t$771%header%n_dim = 1
 1101.          t$771%header%orig_base = 0
 1101.          t$771%header%orig_size = 0
 1101.          t$771%header%n_codim = 0
 1101.          t$771%header%dv_versn = 2
 1101.          t$771%header%dv_smunit = 64
 1101.          t$771%header%d_type = 0
 1101.          t$771%header%n_params = 0
 1101.          t$771%header%d_type_idx = 13
 1101.          t$771%dim_1%LB = 1
 1101.          t$771%dim_1%EX = _zla( 0, ncols )
 1101.          t$771%dim_1%SM = 1
 1101.          call updia1d( t$771, 22, latitu )
 1101.       endif
  990.       _free( t$357 )
 1104.       return
 1104.       end
 1104.       
 1121.       
 1121.       subroutine phenology( latco, ncols, nmax, itype, colrad2, month2, xday, idatec, nsx )
 1108.       t$10 = ncols
 1113.       t$368 = _zla( 0, ncols )
 1119.       if ( schemes == 1 ) then
 1119.          call copysurfacedata( itype(1), month2(1), colrad2(1), xday, idatec(1), nsx(1), ncols, nmax, latco )
 1119.       endif
 1120.       if ( schemes == 2 ) then
 1120.          _fwrite( _clist( 0, 0, 3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'ERROR schemes 2', 0x800600000000L ) ) )
 1120.       endif
 1121.       return
 1121.       end
 1121.       
 1124.       
 1124.       subroutine calc2mland( ncols, nmax, dtc3x, ustar, tm, tm0, tg, qm, qm0, um, vm, hc, hg, ec, eg, bps, ztn, z0x, rhoair, hr, ta, ea, etc, etg, psur, d, znew, theta2m, velc2m, q2m )
 1124.       t$11 = ncols
 1129.       t$369 = _zla( 0, ncols )
 1163.       t$372 = 8 * _zla( 0, ncols )
 1159.       t$373 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 1159.       t$375 = t$373 + 8 * _zla( 0, ncols )
 1161.       t$376 = 8 * ( 7 + t$373 + 8 * _zla( 0, ncols ) ) / 8
 1161.       t$378 = t$376 + 8 * _zla( 0, ncols )
 1177.       t$379 = 8 * ( 7 + t$376 + 8 * _zla( 0, ncols ) ) / 8
 1177.       t$381 = t$379 + 8 * _zla( 0, ncols )
 1177.       t$382 = 8 * ( 7 + t$379 + 8 * _zla( 0, ncols ) ) / 8
 1177.       t$384 = t$382 + 8 * _zla( 0, ncols )
 1171.       t$385 = 8 * ( 7 + t$382 + 8 * _zla( 0, ncols ) ) / 8
 1171.       t$387 = t$385 + 8 * _zla( 0, ncols )
 1172.       t$388 = 8 * ( 7 + t$385 + 8 * _zla( 0, ncols ) ) / 8
 1172.       t$390 = t$388 + 8 * _zla( 0, ncols )
 1170.       t$391 = 8 * ( 7 + t$388 + 8 * _zla( 0, ncols ) ) / 8
 1170.       t$393 = t$391 + 8 * _zla( 0, ncols )
 1164.       t$394 = 8 * ( 7 + t$391 + 8 * _zla( 0, ncols ) ) / 8
 1164.       t$396 = t$394 + 8 * _zla( 0, ncols )
 1165.       t$397 = 8 * ( 7 + t$394 + 8 * _zla( 0, ncols ) ) / 8
 1165.       t$399 = t$397 + 8 * _zla( 0, ncols )
 1173.       t$400 = 8 * ( 7 + t$397 + 8 * _zla( 0, ncols ) ) / 8
 1173.       t$402 = t$400 + 8 * _zla( 0, ncols )
 1174.       t$403 = 8 * ( 7 + t$400 + 8 * _zla( 0, ncols ) ) / 8
 1174.       t$405 = t$403 + 8 * _zla( 0, ncols )
 1177.       t$406 = 8 * ( 7 + t$403 + 8 * _zla( 0, ncols ) ) / 8
 1177.       t$408 = t$406 + 8 * _zla( 0, ncols )
 1162.       t$409 = 8 * ( 7 + t$406 + 8 * _zla( 0, ncols ) ) / 8
 1162.       t$411 = t$409 + 8 * _zla( 0, ncols )
 1158.       t$412 = 8 * ( 7 + t$409 + 8 * _zla( 0, ncols ) ) / 8
 1158.       t$414 = t$412 + 8 * _zla( 0, ncols )
 1160.       t$415 = 8 * ( 7 + t$412 + 8 * _zla( 0, ncols ) ) / 8
 1160.       t$417 = t$415 + 8 * _zla( 0, ncols )
 1156.       t$418 = 8 * ( 7 + t$415 + 8 * _zla( 0, ncols ) ) / 8
 1156.       t$420 = t$418 + 8 * _zla( 0, ncols )
 1175.       t$421 = 8 * ( 7 + t$418 + 8 * _zla( 0, ncols ) ) / 8
 1175.       t$423 = t$421 + 8 * _zla( 0, ncols )
 1169.       t$424 = 8 * ( 7 + t$421 + 8 * _zla( 0, ncols ) ) / 8
 1169.       t$426 = t$424 + 8 * _zla( 0, ncols )
 1168.       t$427 = 8 * ( 7 + t$424 + 8 * _zla( 0, ncols ) ) / 8
 1168.       t$429 = t$427 + 8 * _zla( 0, ncols )
 1166.       t$430 = 8 * ( 7 + t$427 + 8 * _zla( 0, ncols ) ) / 8
 1166.       t$432 = t$430 + 8 * _zla( 0, ncols )
 1167.       t$433 = 8 * ( 7 + t$430 + 8 * _zla( 0, ncols ) ) / 8
 1167.       t$435 = t$433 + 8 * _zla( 0, ncols )
 1177.       t$436 = 8 * ( 7 + t$433 + 8 * _zla( 0, ncols ) ) / 8
 1177.       t$438 = t$436 + 8 * _zla( 0, ncols )
 1157.       t$439 = 8 * ( 7 + t$436 + 8 * _zla( 0, ncols ) ) / 8
 1157.       t$441 = t$439 + 8 * _zla( 0, ncols )
 1124.       t$370 = int( _alloc( t$439 + 8 * _zla( 0, ncols ) ), 8 )
 1163.       t$371 = t$370
 1159.       t$374 = t$373 + t$370
 1161.       t$377 = t$376 + t$370
 1177.       t$380 = t$379 + t$370
 1177.       t$383 = t$382 + t$370
 1171.       t$386 = t$385 + t$370
 1172.       t$389 = t$388 + t$370
 1170.       t$392 = t$391 + t$370
 1164.       t$395 = t$394 + t$370
 1165.       t$398 = t$397 + t$370
 1173.       t$401 = t$400 + t$370
 1174.       t$404 = t$403 + t$370
 1177.       t$407 = t$406 + t$370
 1162.       t$410 = t$409 + t$370
 1158.       t$413 = t$412 + t$370
 1160.       t$416 = t$415 + t$370
 1156.       t$419 = t$418 + t$370
 1175.       t$422 = t$421 + t$370
 1169.       t$425 = t$424 + t$370
 1168.       t$428 = t$427 + t$370
 1166.       t$431 = t$430 + t$370
 1167.       t$434 = t$433 + t$370
 1177.       t$437 = t$436 + t$370
 1157.       t$440 = t$439 + t$370
 1186.       $dtc3xi_S1 = 1.0/dtc3x
 1188.       if ( nmax > 0 ) then
 1188.          $I_L1188_24 = 0
 1188. !dir$ ivdep
 1188.          do
 1200.             $speed_WR0_R0 = _sqrt( vm(1 + $I_L1188_24) * vm(1 + $I_L1188_24) + um(1 + $I_L1188_24) * um(1 + $I_L1188_24) )
 1201.             $speed_WR0_R0 = max( 2.0, $speed_WR0_R0 )
 1202.             speedm(1 + $I_L1188_24) = $speed_WR0_R0
 1203.             zrough(1 + $I_L1188_24) = z0x(1 + $I_L1188_24)
 1206.             $sensg_WR0_R1 = $dtc3xi_S1 * hg(1 + $I_L1188_24)
 1207.             $evapg_WR0_R2 = $dtc3xi_S1 * eg(1 + $I_L1188_24)
 1208.             $sens_WR0_R3 = $dtc3xi_S1 * hg(1 + $I_L1188_24) + $dtc3xi_S1 * hc(1 + $I_L1188_24)
 1209.             $evap_WR0_R4 = $dtc3xi_S1 * eg(1 + $I_L1188_24) + $dtc3xi_S1 * ec(1 + $I_L1188_24)
 1210.             tstar(1 + $I_L1188_24) = -( 9.9542106310969544e-4 * $sens_WR0_R3 * 1.0/( ustar(1 + $I_L1188_24) * rhoair(1 + $I_L1188_24) ) )
 1211.             qstar(1 + $I_L1188_24) = -( 3.9682539682539683e-7 * $evap_WR0_R4 * 1.0/( ustar(1 + $I_L1188_24) * rhoair(1 + $I_L1188_24) ) )
 1212.             $tstarg_WR0_R5 = -( 9.9542106310969544e-4 * $sensg_WR0_R1 * 1.0/( ustar(1 + $I_L1188_24) * rhoair(1 + $I_L1188_24) ) )
 1213.             $qstarg_WR0_R6 = -( 3.9682539682539683e-7 * $evapg_WR0_R2 * 1.0/( ustar(1 + $I_L1188_24) * rhoair(1 + $I_L1188_24) ) )
 1289.             if ( znew > 1.5 * d(1 + $I_L1188_24) ) then
 1290.                thetam(1 + $I_L1188_24) = tm(1 + $I_L1188_24) * bps(1 + $I_L1188_24)
 1291.                thetac(1 + $I_L1188_24) = bps(1 + $I_L1188_24) * tm0(1 + $I_L1188_24)
 1292.                rcm(1 + $I_L1188_24) = qm(1 + $I_L1188_24)
 1293.                rca(1 + $I_L1188_24) = qm0(1 + $I_L1188_24)
 1293.             else
 1297.                thetam(1 + $I_L1188_24) = tm(1 + $I_L1188_24) * bps(1 + $I_L1188_24)
 1298.                thetac(1 + $I_L1188_24) = bps(1 + $I_L1188_24) * tm0(1 + $I_L1188_24)
 1299.                rcm(1 + $I_L1188_24) = qm(1 + $I_L1188_24)
 1300.                rca(1 + $I_L1188_24) = qm0(1 + $I_L1188_24)
 1301.                tstar(1 + $I_L1188_24) = $tstarg_WR0_R5
 1302.                qstar(1 + $I_L1188_24) = $qstarg_WR0_R6
 1302.             endif
 1305.             $I_L1188_24 = 1 + $I_L1188_24
 1303.             if ( $I_L1188_24 >= nmax ) exit
 1303.          enddo
 1303.       endif
 1309.       t$13 = ncols
 1309.       t$455 = max( 0, ncols )
 1309.       if ( ncols > 0 ) then
 1309.          $I_L1309_26 = 0
 1309. !dir$ ivdep
 1309.          do
 1309.             $z0_S4 = zrough(1 + $I_L1309_26)
 1309.             $spd_S3 = max( 2.5e-1, speedm(1 + $I_L1309_26) )
 1309.             $rib_S5 = ( 19.600000000000001 * ztn(1 + $I_L1309_26) * ( thetam(1 + $I_L1309_26) + -thetac(1 + $I_L1309_26) ) * 1.0/( $spd_S3 * $spd_S3 * ( thetac(1 + $I_L1309_26) + thetam(1 + $I_L1309_26) ) ) )
 1309.             $a2_S6 = ( 4.0000000000000002e-1 * 1.0/log( ( znew * 1.0/$z0_S4 ) ) ) * ( 4.0000000000000002e-1 * 1.0/log( ( znew * 1.0/$z0_S4 ) ) )
 1309.             if ( $rib_S5 > 0.0 ) then
 1309.                $rtemp_S7 = thetac(1 + $I_L1309_26) + -( ( 6.6666666666666666e-2 * 1.0/( $rib_S5 * _sqrt( 1.0 + 5.0 * $rib_S5 ) ) ) * ( 1.0 + 15.0 * $rib_S5 * _sqrt( 1.0 + 5.0 * $rib_S5 ) ) * ( 1.0/( $spd_S3 * $a2_S6 ) * ( 40.0 * tstar(1 + $I_L1309_26) * ustar(1 + $I_L1309_26) ) ) )
 1309.                $rtemp_S9 = min( thetam(1 + $I_L1309_26), max( $rtemp_S7, thetac(1 + $I_L1309_26) ) )
 1309.             else
 1309.                $rtemp_S8 = thetac(1 + $I_L1309_26) + ( 1.0/( ( $spd_S3 * $a2_S6 ) * ( 1.0 + -( ( 10.0 * $rib_S5 ) * 1.0/( 1.0 + 75.0 * $a2_S6 * _sqrt( znew * 1.0/$z0_S4 * abs( $rib_S5 ) ) ) ) ) ) * ( 40.0 * tstar(1 + $I_L1309_26) * ustar(1 + $I_L1309_26) ) )
 1309.                $rtemp_S9 = max( thetam(1 + $I_L1309_26), min( $rtemp_S8, thetac(1 + $I_L1309_26) ) )
 1309.             endif
 1309.             theta2m(1 + $I_L1309_26) = $rtemp_S9
 1309.             $I_L1309_26 = 1 + $I_L1309_26
 1309.             if ( $I_L1309_26 >= ncols ) exit
 1309.          enddo
 1311.          $I_L1311_28 = 0
 1311. !dir$ ivdep
 1311.          do
 1311.             $z0_S12 = zrough(1 + $I_L1311_28)
 1311.             $spd_S11 = max( 2.5e-1, speedm(1 + $I_L1311_28) )
 1311.             $rib_S13 = ( 9.8000000000000007 * ztn(1 + $I_L1311_28) * ( thetam(1 + $I_L1311_28) + -thetac(1 + $I_L1311_28) ) * 1.0/( $spd_S11 * $spd_S11 * thetam(1 + $I_L1311_28) ) )
 1311.             $a2_S14 = ( 4.0000000000000002e-1 * 1.0/log( ( znew * 1.0/$z0_S12 ) ) ) * ( 4.0000000000000002e-1 * 1.0/log( ( znew * 1.0/$z0_S12 ) ) )
 1311.             if ( $rib_S13 > 0.0 ) then
 1311.                $rwind_S15 = _sqrt( 1.0/( $a2_S14 * ( 1.0 + -( _sqrt( 1.0 + 5.0 * $rib_S13 ) * 1.0/( _sqrt( 1.0 + 5.0 * $rib_S13 ) + 10.0 * $rib_S13 ) ) ) ) * ( ustar(1 + $I_L1311_28) * ustar(1 + $I_L1311_28) ) )
 1311.             else
 1311.                $rwind_S15 = _sqrt( 1.0/( $a2_S14 * ( 1.0 + -( ( 10.0 * $rib_S13 ) * 1.0/( 1.0 + 75.0 * $a2_S14 * _sqrt( znew * 1.0/$z0_S12 * abs( $rib_S13 ) ) ) ) ) ) * ( ustar(1 + $I_L1311_28) * ustar(1 + $I_L1311_28) ) )
 1311.             endif
 1311.             $rwind_S16 = max( 0.0, min( $rwind_S15, speedm(1 + $I_L1311_28) ) )
 1311.             velc2m(1 + $I_L1311_28) = $rwind_S16
 1311.             $I_L1311_28 = 1 + $I_L1311_28
 1311.             if ( $I_L1311_28 >= ncols ) exit
 1311.          enddo
 1313.          $I_L1313_30 = 0
 1313. !dir$ ivdep
 1313.          do
 1313.             $z0_S19 = zrough(1 + $I_L1313_30)
 1313.             $spd_S18 = max( 2.5e-1, speedm(1 + $I_L1313_30) )
 1313.             $rib_S20 = ( 19.600000000000001 * ztn(1 + $I_L1313_30) * ( thetam(1 + $I_L1313_30) + -thetac(1 + $I_L1313_30) ) * 1.0/( $spd_S18 * $spd_S18 * ( thetac(1 + $I_L1313_30) + thetam(1 + $I_L1313_30) ) ) )
 1313.             $a2_S21 = ( 4.0000000000000002e-1 * 1.0/log( ( znew * 1.0/$z0_S19 ) ) ) * ( 4.0000000000000002e-1 * 1.0/log( ( znew * 1.0/$z0_S19 ) ) )
 1313.             if ( $rib_S20 > 0.0 ) then
 1313.                $rmoist_S22 = rca(1 + $I_L1313_30) + -( ( 6.6666666666666666e-2 * 1.0/( $rib_S20 * _sqrt( 1.0 + 5.0 * $rib_S20 ) ) ) * ( 1.0 + 15.0 * $rib_S20 * _sqrt( 1.0 + 5.0 * $rib_S20 ) ) * ( 1.0/( $spd_S18 * $a2_S21 ) * ( 35.0 * qstar(1 + $I_L1313_30) * ustar(1 + $I_L1313_30) ) ) )
 1313.                $rmoist_S24 = min( rcm(1 + $I_L1313_30), max( $rmoist_S22, rca(1 + $I_L1313_30) ) )
 1313.             else
 1313.                $rmoist_S23 = rca(1 + $I_L1313_30) + ( 1.0/( 1.0 + -( ( 10.0 * $rib_S20 ) * 1.0/( 1.0 + 75.0 * $a2_S21 * _sqrt( znew * 1.0/$z0_S19 * abs( $rib_S20 ) ) ) ) ) * ( 1.0/( $spd_S18 * $a2_S21 ) * ( 35.0 * qstar(1 + $I_L1313_30) * ustar(1 + $I_L1313_30) ) ) )
 1313.                $rmoist_S24 = max( rcm(1 + $I_L1313_30), min( $rmoist_S23, rca(1 + $I_L1313_30) ) )
 1313.             endif
 1313.             q2m(1 + $I_L1313_30) = $rmoist_S24
 1313.             $I_L1313_30 = 1 + $I_L1313_30
 1313.             if ( $I_L1313_30 >= ncols ) exit
 1313.          enddo
 1313.       endif
 1311.       t$14 = ncols
 1311.       t$456 = max( 0, ncols )
 1313.       t$15 = ncols
 1313.       t$457 = max( 0, ncols )
 1124.       _free( t$370 )
 1315.       return
 1315.       end
 1315.       
 1316.       
 1316.       subroutine calc2mseaice( ncols, speedm, ustar, sens, evap, znew, z0, tsurf, gt, sigki, qsurf, gq, ztn, rho, theta2m, velc2m, q2m )
 1316.       t$12 = ncols
 1320.       t$442 = _zla( 0, ncols )
 1336.       t$445 = 8 * _zla( 0, ncols )
 1338.       t$446 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 1338.       t$448 = t$446 + 8 * _zla( 0, ncols )
 1339.       t$449 = 8 * ( 7 + t$446 + 8 * _zla( 0, ncols ) ) / 8
 1339.       t$451 = t$449 + 8 * _zla( 0, ncols )
 1337.       t$452 = 8 * ( 7 + t$449 + 8 * _zla( 0, ncols ) ) / 8
 1337.       t$454 = t$452 + 8 * _zla( 0, ncols )
 1316.       t$443 = int( _alloc( t$452 + 8 * _zla( 0, ncols ) ), 8 )
 1336.       t$444 = t$443
 1338.       t$447 = t$446 + t$443
 1339.       t$450 = t$449 + t$443
 1337.       t$453 = t$452 + t$443
 1341.       if ( ncols > 0 ) then
 1343.          $SC_sigki_I0 = sigki(1)
 1341.          $I_L1341_20 = 0
 1341. !dir$ ivdep
 1341.          do
 1342.             thetac(1 + $I_L1341_20) = tsurf(1 + $I_L1341_20)
 1343.             thetam(1 + $I_L1341_20) = $SC_sigki_I0 * gt(1 + $I_L1341_20)
 1374.             tstar(1 + $I_L1341_20) = -( 9.9542106310969544e-4 * sens(1 + $I_L1341_20) * 1.0/( rho(1 + $I_L1341_20) * ustar(1 + $I_L1341_20) ) )
 1375.             qstar(1 + $I_L1341_20) = -( 3.9682539682539683e-7 * evap(1 + $I_L1341_20) * 1.0/( rho(1 + $I_L1341_20) * ustar(1 + $I_L1341_20) ) )
 1376.             $I_L1341_20 = 1 + $I_L1341_20
 1341.             if ( $I_L1341_20 >= ncols ) exit
 1341.          enddo
 1378.          $I_L1378_22 = 0
 1378. !dir$ ivdep
 1378.          do
 1378.             $z0_S3 = z0(1 + $I_L1378_22)
 1378.             $spd_S2 = max( 2.5e-1, speedm(1 + $I_L1378_22) )
 1378.             $rib_S4 = ( 19.600000000000001 * ztn(1 + $I_L1378_22) * 1.0/( $spd_S2 * $spd_S2 * ( thetam(1 + $I_L1378_22) + thetac(1 + $I_L1378_22) ) ) * ( thetam(1 + $I_L1378_22) + -thetac(1 + $I_L1378_22) ) )
 1378.             $a2_S5 = ( 4.0000000000000002e-1 * 1.0/log( ( znew * 1.0/$z0_S3 ) ) ) * ( 4.0000000000000002e-1 * 1.0/log( ( znew * 1.0/$z0_S3 ) ) )
 1378.             if ( $rib_S4 > 0.0 ) then
 1378.                $rtemp_S6 = thetac(1 + $I_L1378_22) + -( ( 6.6666666666666666e-2 * 1.0/( $rib_S4 * _sqrt( 1.0 + 5.0 * $rib_S4 ) ) ) * ( 1.0 + 15.0 * $rib_S4 * _sqrt( 1.0 + 5.0 * $rib_S4 ) ) * ( 1.0/( $spd_S2 * $a2_S5 ) * ( 40.0 * ustar(1 + $I_L1378_22) * tstar(1 + $I_L1378_22) ) ) )
 1378.                $rtemp_S8 = min( thetam(1 + $I_L1378_22), max( $rtemp_S6, thetac(1 + $I_L1378_22) ) )
 1378.             else
 1378.                $rtemp_S7 = thetac(1 + $I_L1378_22) + ( 1.0/( ( $spd_S2 * $a2_S5 ) * ( 1.0 + -( ( 10.0 * $rib_S4 ) * 1.0/( 1.0 + 75.0 * $a2_S5 * _sqrt( znew * 1.0/$z0_S3 * abs( $rib_S4 ) ) ) ) ) ) * ( 40.0 * ustar(1 + $I_L1378_22) * tstar(1 + $I_L1378_22) ) )
 1378.                $rtemp_S8 = max( thetam(1 + $I_L1378_22), min( $rtemp_S7, thetac(1 + $I_L1378_22) ) )
 1378.             endif
 1378.             theta2m(1 + $I_L1378_22) = $rtemp_S8
 1378.             $I_L1378_22 = 1 + $I_L1378_22
 1378.             if ( $I_L1378_22 >= ncols ) exit
 1378.          enddo
 1380.          $I_L1380_24 = 0
 1380. !dir$ ivdep
 1380.          do
 1380.             $z0_S11 = z0(1 + $I_L1380_24)
 1380.             $spd_S10 = max( 2.5e-1, speedm(1 + $I_L1380_24) )
 1380.             $rib_S12 = ( 9.8000000000000007 * ztn(1 + $I_L1380_24) * 1.0/( $spd_S10 * $spd_S10 * thetam(1 + $I_L1380_24) ) * ( thetam(1 + $I_L1380_24) + -thetac(1 + $I_L1380_24) ) )
 1380.             $a2_S13 = ( 4.0000000000000002e-1 * 1.0/log( ( znew * 1.0/$z0_S11 ) ) ) * ( 4.0000000000000002e-1 * 1.0/log( ( znew * 1.0/$z0_S11 ) ) )
 1380.             if ( $rib_S12 > 0.0 ) then
 1380.                $rwind_S14 = _sqrt( 1.0/( $a2_S13 * ( 1.0 + -( _sqrt( 1.0 + 5.0 * $rib_S12 ) * 1.0/( _sqrt( 1.0 + 5.0 * $rib_S12 ) + 10.0 * $rib_S12 ) ) ) ) * ( 120.0 * ustar(1 + $I_L1380_24) * ustar(1 + $I_L1380_24) ) )
 1380.             else
 1380.                $rwind_S14 = _sqrt( 1.0/( $a2_S13 * ( 1.0 + -( ( 10.0 * $rib_S12 ) * 1.0/( 1.0 + 75.0 * $a2_S13 * _sqrt( znew * 1.0/$z0_S11 * abs( $rib_S12 ) ) ) ) ) ) * ( 120.0 * ustar(1 + $I_L1380_24) * ustar(1 + $I_L1380_24) ) )
 1380.             endif
 1380.             $rwind_S15 = max( 0.0, min( $rwind_S14, speedm(1 + $I_L1380_24) ) )
 1380.             velc2m(1 + $I_L1380_24) = $rwind_S15
 1380.             $I_L1380_24 = 1 + $I_L1380_24
 1380.             if ( $I_L1380_24 >= ncols ) exit
 1380.          enddo
 1382.          $I_L1382_26 = 0
 1382. !dir$ ivdep
 1382.          do
 1382.             $z0_S18 = z0(1 + $I_L1382_26)
 1382.             $spd_S17 = max( 2.5e-1, speedm(1 + $I_L1382_26) )
 1382.             $rib_S19 = ( 19.600000000000001 * ztn(1 + $I_L1382_26) * 1.0/( $spd_S17 * $spd_S17 * ( thetam(1 + $I_L1382_26) + thetac(1 + $I_L1382_26) ) ) * ( thetam(1 + $I_L1382_26) + -thetac(1 + $I_L1382_26) ) )
 1382.             $a2_S20 = ( 4.0000000000000002e-1 * 1.0/log( ( znew * 1.0/$z0_S18 ) ) ) * ( 4.0000000000000002e-1 * 1.0/log( ( znew * 1.0/$z0_S18 ) ) )
 1382.             if ( $rib_S19 > 0.0 ) then
 1382.                $rmoist_S21 = qsurf(1 + $I_L1382_26) + -( ( 6.6666666666666666e-2 * 1.0/( $rib_S19 * _sqrt( 1.0 + 5.0 * $rib_S19 ) ) ) * ( 1.0 + 15.0 * $rib_S19 * _sqrt( 1.0 + 5.0 * $rib_S19 ) ) * ( 1.0/( $spd_S17 * $a2_S20 ) * ( 35.0 * ustar(1 + $I_L1382_26) * qstar(1 + $I_L1382_26) ) ) )
 1382.                $rmoist_S23 = min( gq(1 + $I_L1382_26), max( $rmoist_S21, qsurf(1 + $I_L1382_26) ) )
 1382.             else
 1382.                $rmoist_S22 = qsurf(1 + $I_L1382_26) + ( 1.0/( 1.0 + -( ( 10.0 * $rib_S19 ) * 1.0/( 1.0 + 75.0 * $a2_S20 * _sqrt( znew * 1.0/$z0_S18 * abs( $rib_S19 ) ) ) ) ) * ( 1.0/( $spd_S17 * $a2_S20 ) * ( 35.0 * ustar(1 + $I_L1382_26) * qstar(1 + $I_L1382_26) ) ) )
 1382.                $rmoist_S23 = max( gq(1 + $I_L1382_26), min( $rmoist_S22, qsurf(1 + $I_L1382_26) ) )
 1382.             endif
 1382.             q2m(1 + $I_L1382_26) = $rmoist_S23
 1382.             $I_L1382_26 = 1 + $I_L1382_26
 1382.             if ( $I_L1382_26 >= ncols ) exit
 1382.          enddo
 1386.          $SC_sigki_I0 = sigki(1)
 1385.          $I_L1385_28 = 0
 1385. !dir$ ivdep
 1385.          do
 1386.             theta2m(1 + $I_L1385_28) = ( theta2m(1 + $I_L1385_28) * 1.0/$SC_sigki_I0 )
 1387.             $I_L1385_28 = 1 + $I_L1385_28
 1385.             if ( $I_L1385_28 >= ncols ) exit
 1385.          enddo
 1385.       endif
 1378.       t$13 = ncols
 1378.       t$455 = max( 0, ncols )
 1380.       t$14 = ncols
 1380.       t$456 = max( 0, ncols )
 1382.       t$15 = ncols
 1382.       t$457 = max( 0, ncols )
 1316.       _free( t$443 )
 1388.       return
 1388.       end
 1388.       
 1434.       
 1434.       subroutine reduced_temp( ncols, speed, ustar, tstar, znew, zrough, tc, tm, zagl, tempc2m, np )
 1434.       t$13 = ncols
 1443.       t$455 = _zla( 0, ncols )
 1503.       if ( ncols > 0 ) then
 1503.          $I_L1503_4 = 0
 1503. !dir$ ivdep
 1503.          do
 1516.             $z0_S2 = zrough(1 + $I_L1503_4)
 1518.             $spd_S1 = max( 2.5e-1, speed(1 + $I_L1503_4) )
 1526.             $rib_S3 = ( 19.600000000000001 * zagl(1 + $I_L1503_4) * 1.0/( $spd_S1 * $spd_S1 * ( tm(1 + $I_L1503_4) + tc(1 + $I_L1503_4) ) ) * ( tm(1 + $I_L1503_4) + -tc(1 + $I_L1503_4) ) )
 1535.             $a2_S4 = ( 4.0000000000000002e-1 * 1.0/log( ( znew * 1.0/$z0_S2 ) ) ) * ( 4.0000000000000002e-1 * 1.0/log( ( znew * 1.0/$z0_S2 ) ) )
 1537.             if ( $rib_S3 > 0.0 ) then
 1600.                $rtemp_S5 = tc(1 + $I_L1503_4) + -( ( 6.6666666666666666e-2 * 1.0/( $rib_S3 * _sqrt( 1.0 + 5.0 * $rib_S3 ) ) ) * ( 1.0 + 15.0 * $rib_S3 * _sqrt( 1.0 + 5.0 * $rib_S3 ) ) * ( 1.0/( $spd_S1 * $a2_S4 ) * ( 40.0 * ustar(1 + $I_L1503_4) * tstar(1 + $I_L1503_4) ) ) )
 1613.                $rtemp_S7 = min( tm(1 + $I_L1503_4), max( $rtemp_S5, tc(1 + $I_L1503_4) ) )
 1613.             else
 1655.                $rtemp_S6 = tc(1 + $I_L1503_4) + ( 1.0/( ( $spd_S1 * $a2_S4 ) * ( 1.0 + -( ( 10.0 * $rib_S3 ) * 1.0/( 1.0 + 75.0 * $a2_S4 * _sqrt( znew * 1.0/$z0_S2 * abs( $rib_S3 ) ) ) ) ) ) * ( 40.0 * ustar(1 + $I_L1503_4) * tstar(1 + $I_L1503_4) ) )
 1694.                $rtemp_S7 = max( tm(1 + $I_L1503_4), min( $rtemp_S6, tc(1 + $I_L1503_4) ) )
 1694.             endif
 1697.             tempc2m(1 + $I_L1503_4) = $rtemp_S7
 1698.             $I_L1503_4 = 1 + $I_L1503_4
 1696.             if ( $I_L1503_4 >= ncols ) exit
 1696.          enddo
 1696.       endif
 1699.       return
 1699.       end
 1699.       
 1703.       
 1703.       subroutine reduced_wind( ncols, speed, ustar, znew, zrough, tc, tm, zagl, velnew, np )
 1703.       t$14 = ncols
 1712.       t$456 = _zla( 0, ncols )
 1752.       if ( np == 0 ) then
 1759.          $fh_S4 = 1.0
 1759.       else
 1767.          $fh_S4 = 120.0
 1767.       endif
 1771.       if ( ncols > 0 ) then
 1771.          $I_L1771_4 = 0
 1771. !dir$ ivdep
 1771.          do
 1772.             $z0_S2 = zrough(1 + $I_L1771_4)
 1774.             $spd_S1 = max( 2.5e-1, speed(1 + $I_L1771_4) )
 1781.             $rib_S3 = ( 9.8000000000000007 * zagl(1 + $I_L1771_4) * 1.0/( $spd_S1 * $spd_S1 * tm(1 + $I_L1771_4) ) * ( tm(1 + $I_L1771_4) + -tc(1 + $I_L1771_4) ) )
 1782.             $a2_S5 = ( 4.0000000000000002e-1 * 1.0/log( ( znew * 1.0/$z0_S2 ) ) ) * ( 4.0000000000000002e-1 * 1.0/log( ( znew * 1.0/$z0_S2 ) ) )
 1783.             if ( $rib_S3 > 0.0 ) then
 1848.                $rwind_S6 = _sqrt( 1.0/( $a2_S5 * ( 1.0 + -( _sqrt( 1.0 + 5.0 * $rib_S3 ) * 1.0/( _sqrt( 1.0 + 5.0 * $rib_S3 ) + 10.0 * $rib_S3 ) ) ) ) * ( $fh_S4 * ustar(1 + $I_L1771_4) * ustar(1 + $I_L1771_4) ) )
 1848.             else
 1870.                $rwind_S6 = _sqrt( 1.0/( $a2_S5 * ( 1.0 + -( ( 10.0 * $rib_S3 ) * 1.0/( 1.0 + 75.0 * $a2_S5 * _sqrt( znew * 1.0/$z0_S2 * abs( $rib_S3 ) ) ) ) ) ) * ( $fh_S4 * ustar(1 + $I_L1771_4) * ustar(1 + $I_L1771_4) ) )
 1870.             endif
 1878.             $rwind_S7 = max( 0.0, min( $rwind_S6, speed(1 + $I_L1771_4) ) )
 1879.             velnew(1 + $I_L1771_4) = $rwind_S7
 1880.             $I_L1771_4 = 1 + $I_L1771_4
 1877.             if ( $I_L1771_4 >= ncols ) exit
 1877.          enddo
 1877.       endif
 1881.       return
 1881.       end
 1881.       
 1885.       
 1885.       subroutine reduced_q( ncols, speed, ustar, qstar, znew, zrough, tc, tm, qc, qm, zagl, qnew, np )
 1885.       t$15 = ncols
 1895.       t$457 = _zla( 0, ncols )
 1953.       if ( ncols > 0 ) then
 1953.          $I_L1953_4 = 0
 1953. !dir$ ivdep
 1953.          do
 1966.             $z0_S2 = zrough(1 + $I_L1953_4)
 1968.             $spd_S1 = max( 2.5e-1, speed(1 + $I_L1953_4) )
 1974.             $rib_S3 = ( 19.600000000000001 * zagl(1 + $I_L1953_4) * 1.0/( $spd_S1 * $spd_S1 * ( tm(1 + $I_L1953_4) + tc(1 + $I_L1953_4) ) ) * ( tm(1 + $I_L1953_4) + -tc(1 + $I_L1953_4) ) )
 1983.             $a2_S4 = ( 4.0000000000000002e-1 * 1.0/log( ( znew * 1.0/$z0_S2 ) ) ) * ( 4.0000000000000002e-1 * 1.0/log( ( znew * 1.0/$z0_S2 ) ) )
 1985.             if ( $rib_S3 > 0.0 ) then
 2060.                $rmoist_S5 = qc(1 + $I_L1953_4) + -( ( 6.6666666666666666e-2 * 1.0/( $rib_S3 * _sqrt( 1.0 + 5.0 * $rib_S3 ) ) ) * ( 1.0 + 15.0 * $rib_S3 * _sqrt( 1.0 + 5.0 * $rib_S3 ) ) * ( 1.0/( $spd_S1 * $a2_S4 ) * ( 35.0 * ustar(1 + $I_L1953_4) * qstar(1 + $I_L1953_4) ) ) )
 2065.                $rmoist_S7 = min( qm(1 + $I_L1953_4), max( $rmoist_S5, qc(1 + $I_L1953_4) ) )
 2065.             else
 2111.                $rmoist_S6 = qc(1 + $I_L1953_4) + ( 1.0/( 1.0 + -( ( 10.0 * $rib_S3 ) * 1.0/( 1.0 + 75.0 * $a2_S4 * _sqrt( znew * 1.0/$z0_S2 * abs( $rib_S3 ) ) ) ) ) * ( 1.0/( $spd_S1 * $a2_S4 ) * ( 35.0 * ustar(1 + $I_L1953_4) * qstar(1 + $I_L1953_4) ) ) )
 2117.                $rmoist_S7 = max( qm(1 + $I_L1953_4), min( $rmoist_S6, qc(1 + $I_L1953_4) ) )
 2117.             endif
 2120.             qnew(1 + $I_L1953_4) = $rmoist_S7
 2121.             $I_L1953_4 = 1 + $I_L1953_4
 2119.             if ( $I_L1953_4 >= ncols ) exit
 2119.          enddo
 2119.       endif
 2122.       return
 2122.       end
 2122.       
    9.       
    9.       module surface
    9.       end
    9.       
