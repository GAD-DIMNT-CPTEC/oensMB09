       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  Rad_Clirad.f90
       !        File                  :  Rad_Clirad.opt
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
   67.       
   67.       subroutine cliradsw( ncols, kmax, nls, noz, icld, inalb, s0, cosz, pl20, dpl, tl, ql, o3l, gps, imask, alvdf, alndf, alvdr, alndr, swinc, radvbc, radvdc, radnbc, radndc, radvbl, radvdl, radnbl, radndl, dswclr, dswtop, ssclr, ss, aslclr, asl, cld, clu, fice, rei, rel, taud )
   67.       t$1 = ncols
  175.       t$110 = _zla( 0, ncols )
   67.       t$2 = kmax
   67.       t$111 = _zla( 0, ncols )
  178.       t$112 = _zla( 0, kmax )
   67.       t$113 = _zla( 0, ncols ) * _zla( 0, kmax )
   67.       t$3 = ( 1 + kmax )
  242.       t$114 = _zla( 0, ( 1 + kmax ) )
   67.       t$115 = _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  242.       t$118 = 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  241.       t$119 = 8 * ( 7 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
  241.       t$121 = t$119 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  247.       t$122 = 8 * ( 7 + t$119 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
  247.       t$124 = t$122 + 8 * _zla( 0, ncols )
  246.       t$125 = 8 * ( 7 + t$122 + 8 * _zla( 0, ncols ) ) / 8
  246.       t$127 = t$125 + 8 * _zla( 0, ncols )
  276.       t$129 = t$125 + 8 * _zla( 0, ncols ) + 4 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  275.       t$131 = t$125 + 4 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) + 12 * _zla( 0, ncols )
  263.       t$132 = 8 * ( 7 + t$125 + 4 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) + 12 * _zla( 0, ncols ) ) / 8
  263.       t$134 = t$132 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  221.       t$135 = 8 * ( 7 + t$132 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
  221.       t$137 = t$135 + 8 * _zla( 0, ncols )
  262.       t$138 = 8 * ( 7 + t$135 + 8 * _zla( 0, ncols ) ) / 8
  262.       t$140 = t$138 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  222.       t$142 = t$138 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) + 4 * _zla( 0, ncols )
  258.       t$143 = 8 * ( 7 + t$138 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) + 4 * _zla( 0, ncols ) ) / 8
  258.       t$145 = t$143 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  240.       t$146 = 8 * ( 7 + t$143 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
  240.       t$148 = t$146 + 8 * _zla( 0, ncols )
  239.       t$149 = 8 * ( 7 + t$146 + 8 * _zla( 0, ncols ) ) / 8
  239.       t$151 = t$149 + 8 * _zla( 0, ncols )
  264.       t$152 = 8 * ( 7 + t$149 + 8 * _zla( 0, ncols ) ) / 8
  264.       t$154 = t$152 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  265.       t$155 = 8 * ( 7 + t$152 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
  265.       t$157 = t$155 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  274.       t$159 = t$155 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) + 4 * _zla( 0, ncols )
  273.       t$161 = t$155 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) + 8 * _zla( 0, ncols )
  256.       t$162 = 8 * ( 7 + t$155 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) + 8 * _zla( 0, ncols ) ) / 8
  256.       t$164 = t$162 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  253.       t$165 = 8 * ( 7 + t$162 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
  253.       t$167 = t$165 + 8 * _zla( 0, ncols )
   67.       t$4 = ( 2 + kmax )
  257.       t$168 = _zla( 0, ( 2 + kmax ) )
   67.       t$169 = _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
  257.       t$170 = 8 * ( 7 + t$165 + 8 * _zla( 0, ncols ) ) / 8
  257.       t$172 = t$170 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) )
  267.       t$173 = 8 * ( 7 + t$170 + 8 * _zla( 0, ncols ) * _zla( 0, ( 2 + kmax ) ) ) / 8
  267.       t$175 = t$173 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  266.       t$176 = 8 * ( 7 + t$173 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
  266.       t$178 = t$176 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  232.       t$179 = 8 * ( 7 + t$176 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
  232.       t$181 = t$179 + 8 * _zla( 0, ncols )
  228.       t$182 = 8 * ( 7 + t$179 + 8 * _zla( 0, ncols ) ) / 8
  228.       t$184 = t$182 + 8 * _zla( 0, ncols )
  233.       t$185 = 8 * ( 7 + t$182 + 8 * _zla( 0, ncols ) ) / 8
  233.       t$187 = t$185 + 8 * _zla( 0, ncols )
  229.       t$188 = 8 * ( 7 + t$185 + 8 * _zla( 0, ncols ) ) / 8
  229.       t$190 = t$188 + 8 * _zla( 0, ncols )
  249.       t$191 = 8 * ( 7 + t$188 + 8 * _zla( 0, ncols ) ) / 8
  249.       t$193 = t$191 + 8 * _zla( 0, ncols )
  248.       t$194 = 8 * ( 7 + t$191 + 8 * _zla( 0, ncols ) ) / 8
  248.       t$196 = t$194 + 8 * _zla( 0, ncols )
  230.       t$197 = 8 * ( 7 + t$194 + 8 * _zla( 0, ncols ) ) / 8
  230.       t$199 = t$197 + 8 * _zla( 0, ncols )
  226.       t$200 = 8 * ( 7 + t$197 + 8 * _zla( 0, ncols ) ) / 8
  226.       t$202 = t$200 + 8 * _zla( 0, ncols )
  231.       t$203 = 8 * ( 7 + t$200 + 8 * _zla( 0, ncols ) ) / 8
  231.       t$205 = t$203 + 8 * _zla( 0, ncols )
  227.       t$206 = 8 * ( 7 + t$203 + 8 * _zla( 0, ncols ) ) / 8
  227.       t$208 = t$206 + 8 * _zla( 0, ncols )
  235.       t$209 = 8 * ( 7 + t$206 + 8 * _zla( 0, ncols ) ) / 8
  235.       t$211 = t$209 + 8 * _zla( 0, ncols )
  220.       t$212 = 8 * ( 7 + t$209 + 8 * _zla( 0, ncols ) ) / 8
  220.       t$214 = t$212 + 8 * _zla( 0, ncols )
  234.       t$215 = 8 * ( 7 + t$212 + 8 * _zla( 0, ncols ) ) / 8
  234.       t$217 = t$215 + 8 * _zla( 0, ncols )
  254.       t$218 = 8 * ( 7 + t$215 + 8 * _zla( 0, ncols ) ) / 8
  254.       t$220 = t$218 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  269.       t$221 = 8 * ( 7 + t$218 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
  269.       t$223 = t$221 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  255.       t$224 = 8 * ( 7 + t$221 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
  255.       t$226 = t$224 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
   67.       t$116 = int( _alloc( t$224 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ), 8 )
  242.       t$117 = t$116
  241.       t$120 = t$119 + t$116
  247.       t$123 = t$122 + t$116
  246.       t$126 = t$125 + t$116
  276.       t$128 = t$125 + t$116 + 8 * _zla( 0, ncols )
  275.       t$130 = t$125 + t$116 + 8 * _zla( 0, ncols ) + 4 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  263.       t$133 = t$132 + t$116
  221.       t$136 = t$135 + t$116
  262.       t$139 = t$138 + t$116
  222.       t$141 = t$138 + t$116 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  258.       t$144 = t$143 + t$116
  240.       t$147 = t$146 + t$116
  239.       t$150 = t$149 + t$116
  264.       t$153 = t$152 + t$116
  265.       t$156 = t$155 + t$116
  274.       t$158 = t$155 + t$116 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
  273.       t$160 = t$155 + t$116 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) + 4 * _zla( 0, ncols )
  256.       t$163 = t$162 + t$116
  253.       t$166 = t$165 + t$116
  257.       t$171 = t$170 + t$116
  267.       t$174 = t$173 + t$116
  266.       t$177 = t$176 + t$116
  232.       t$180 = t$179 + t$116
  228.       t$183 = t$182 + t$116
  233.       t$186 = t$185 + t$116
  229.       t$189 = t$188 + t$116
  249.       t$192 = t$191 + t$116
  248.       t$195 = t$194 + t$116
  230.       t$198 = t$197 + t$116
  226.       t$201 = t$200 + t$116
  231.       t$204 = t$203 + t$116
  227.       t$207 = t$206 + t$116
  235.       t$210 = t$209 + t$116
  220.       t$213 = t$212 + t$116
  234.       t$216 = t$215 + t$116
  254.       t$219 = t$218 + t$116
  269.       t$222 = t$221 + t$116
  255.       t$225 = t$224 + t$116
  280.       $F_A35 = ncols
  280.       if ( ncols > 0 ) then
  280.          $I_L280_282 = 0
  280. !dir$ ivdep
  280.          do
  280.             scosz(1 + $I_L280_282) = 0.0
  280.             $I_L280_282 = 1 + $I_L280_282
  280.             if ( $I_L280_282 >= $F_A35 ) exit
  280.          enddo
  280.       endif
  281.       $F_A36 = ncols
  281.       if ( ncols > 0 ) then
  281.          $I_L281_284 = 0
  281. !dir$ ivdep
  281.          do
  281.             cmu(1 + $I_L281_284) = 0.0
  281.             $I_L281_284 = 1 + $I_L281_284
  281.             if ( $I_L281_284 >= $F_A36 ) exit
  281.          enddo
  281.       endif
  282.       $F_A37 = ncols
  282.       if ( ncols > 0 ) then
  282.          $I_L282_286 = 0
  282. !dir$ ivdep
  282.          do
  282.             listim(1 + $I_L282_286) = 0
  282.             $I_L282_286 = 1 + $I_L282_286
  282.             if ( $I_L282_286 >= $F_A37 ) exit
  282.          enddo
  307.          $I_L307_226 = 0
  307. !dir$ ivdep
  307.          do
  307.             listim(1 + $I_L307_226) = ( 1 + $I_L307_226 )
  307.             $I_L307_226 = 1 + $I_L307_226
  307.             if ( $I_L307_226 >= ncols ) exit
  307.          enddo
  307.       endif
  283.       $F_A38 = ncols
  283.       if ( ncols > 0 ) then
  283.          $I_L283_288 = 0
  283. !dir$ ivdep
  283.          do
  283.             bitx(1 + $I_L283_288) = .false.
  283.             $I_L283_288 = 1 + $I_L283_288
  283.             if ( $I_L283_288 >= $F_A38 ) exit
  283.          enddo
  283.       endif
  285.       $F_A39 = ncols
  285.       if ( ncols > 0 ) then
  285.          $I_L285_290 = 0
  285. !dir$ ivdep
  285.          do
  285.             ps(1 + $I_L285_290) = 0.0
  285.             $I_L285_290 = 1 + $I_L285_290
  285.             if ( $I_L285_290 >= $F_A39 ) exit
  285.          enddo
  285.       endif
  291.       $F_A40 = ncols
  291.       if ( ncols > 0 ) then
  291.          $I_L291_292 = 0
  291. !dir$ ivdep
  291.          do
  291.             rsurfv(1 + $I_L291_292) = 0.0
  291.             $I_L291_292 = 1 + $I_L291_292
  291.             if ( $I_L291_292 >= $F_A40 ) exit
  291.          enddo
  291.       endif
  292.       $F_A41 = ncols
  292.       if ( ncols > 0 ) then
  292.          $I_L292_294 = 0
  292. !dir$ ivdep
  292.          do
  292.             rsurfn(1 + $I_L292_294) = 0.0
  292.             $I_L292_294 = 1 + $I_L292_294
  292.             if ( $I_L292_294 >= $F_A41 ) exit
  292.          enddo
  292.       endif
  293.       $F_A42 = ncols
  293.       if ( ncols > 0 ) then
  293.          $I_L293_296 = 0
  293. !dir$ ivdep
  293.          do
  293.             agv(1 + $I_L293_296) = 0.0
  293.             $I_L293_296 = 1 + $I_L293_296
  293.             if ( $I_L293_296 >= $F_A42 ) exit
  293.          enddo
  293.       endif
  294.       $F_A43 = ncols
  294.       if ( ncols > 0 ) then
  294.          $I_L294_298 = 0
  294. !dir$ ivdep
  294.          do
  294.             agn(1 + $I_L294_298) = 0.0
  294.             $I_L294_298 = 1 + $I_L294_298
  294.             if ( $I_L294_298 >= $F_A43 ) exit
  294.          enddo
  294.       endif
  299.       $F_A44 = ncols
  299.       if ( ncols > 0 ) then
  299.          $I_L299_300 = 0
  299. !dir$ ivdep
  299.          do
  299.             litx(1 + $I_L299_300) = 0
  299.             $I_L299_300 = 1 + $I_L299_300
  299.             if ( $I_L299_300 >= $F_A44 ) exit
  299.          enddo
  299.       endif
  300.       $F_A45 = ncols
  300.       if ( ncols > 0 ) then
  300.          $I_L300_302 = 0
  300. !dir$ ivdep
  300.          do
  300.             dmask(1 + $I_L300_302) = 0
  300.             $I_L300_302 = 1 + $I_L300_302
  300.             if ( $I_L300_302 >= $F_A45 ) exit
  300.          enddo
  300.       endif
  286.       $F_A46 = 1 + kmax
  286.       $F_A47 = ncols
  286.       if ( and( -$F_A47, -$F_A46 ) < 0 ) then
  286.          $I_L286_446 = 0
  286.          do
  286.             $I_L286_304 = 0
  286. !dir$ ivdep
  286.             do
  286.                ta(1 + $I_L286_304, 1 + $I_L286_446) = 0.0
  286.                $I_L286_304 = 1 + $I_L286_304
  286.                if ( $I_L286_304 >= $F_A47 ) exit
  286.             enddo
  286.             $I_L286_446 = 1 + $I_L286_446
  286.             if ( $I_L286_446 >= $F_A46 ) exit
  286.          enddo
  286.       endif
  287.       $F_A48 = 1 + kmax
  287.       $F_A49 = ncols
  287.       if ( and( -$F_A49, -$F_A48 ) < 0 ) then
  287.          $I_L287_448 = 0
  287.          do
  287.             $I_L287_306 = 0
  287. !dir$ ivdep
  287.             do
  287.                wa(1 + $I_L287_306, 1 + $I_L287_448) = 0.0
  287.                $I_L287_306 = 1 + $I_L287_306
  287.                if ( $I_L287_306 >= $F_A49 ) exit
  287.             enddo
  287.             $I_L287_448 = 1 + $I_L287_448
  287.             if ( $I_L287_448 >= $F_A48 ) exit
  287.          enddo
  287.       endif
  288.       $F_A50 = 1 + kmax
  288.       $F_A51 = ncols
  288.       if ( and( -$F_A51, -$F_A50 ) < 0 ) then
  288.          $I_L288_450 = 0
  288.          do
  288.             $I_L288_308 = 0
  288. !dir$ ivdep
  288.             do
  288.                oa(1 + $I_L288_308, 1 + $I_L288_450) = 0.0
  288.                $I_L288_308 = 1 + $I_L288_308
  288.                if ( $I_L288_308 >= $F_A51 ) exit
  288.             enddo
  288.             $I_L288_450 = 1 + $I_L288_450
  288.             if ( $I_L288_450 >= $F_A50 ) exit
  288.          enddo
  288.       endif
  296.       $F_A52 = 1 + kmax
  296.       $F_A53 = ncols
  296.       if ( and( -$F_A53, -$F_A52 ) < 0 ) then
  296.          $I_L296_452 = 0
  296.          do
  296.             $I_L296_310 = 0
  296. !dir$ ivdep
  296.             do
  296.                ccu(1 + $I_L296_310, 1 + $I_L296_452) = 0.0
  296.                $I_L296_310 = 1 + $I_L296_310
  296.                if ( $I_L296_310 >= $F_A53 ) exit
  296.             enddo
  296.             $I_L296_452 = 1 + $I_L296_452
  296.             if ( $I_L296_452 >= $F_A52 ) exit
  296.          enddo
  296.       endif
  297.       $F_A54 = 1 + kmax
  297.       $F_A55 = ncols
  297.       if ( and( -$F_A55, -$F_A54 ) < 0 ) then
  297.          $I_L297_454 = 0
  297.          do
  297.             $I_L297_312 = 0
  297. !dir$ ivdep
  297.             do
  297.                css(1 + $I_L297_312, 1 + $I_L297_454) = 0.0
  297.                $I_L297_312 = 1 + $I_L297_312
  297.                if ( $I_L297_312 >= $F_A55 ) exit
  297.             enddo
  297.             $I_L297_454 = 1 + $I_L297_454
  297.             if ( $I_L297_454 >= $F_A54 ) exit
  297.          enddo
  297.       endif
  298.       $F_A56 = 1 + kmax
  298.       $F_A57 = ncols
  298.       if ( and( -$F_A57, -$F_A56 ) < 0 ) then
  298.          $I_L298_456 = 0
  298.          do
  298.             $I_L298_314 = 0
  298. !dir$ ivdep
  298.             do
  298.                dp(1 + $I_L298_314, 1 + $I_L298_456) = 0.0
  298.                $I_L298_314 = 1 + $I_L298_314
  298.                if ( $I_L298_314 >= $F_A57 ) exit
  298.             enddo
  298.             $I_L298_456 = 1 + $I_L298_456
  298.             if ( $I_L298_456 >= $F_A56 ) exit
  298.          enddo
  298.       endif
  289.       $F_A58 = 2 + kmax
  289.       $F_A59 = ncols
  289.       if ( and( -$F_A59, -$F_A58 ) < 0 ) then
  289.          $I_L289_458 = 0
  289.          do
  289.             $I_L289_316 = 0
  289. !dir$ ivdep
  289.             do
  289.                pu(1 + $I_L289_316, 1 + $I_L289_458) = 0.0
  289.                $I_L289_316 = 1 + $I_L289_316
  289.                if ( $I_L289_316 >= $F_A59 ) exit
  289.             enddo
  289.             $I_L289_458 = 1 + $I_L289_458
  289.             if ( $I_L289_458 >= $F_A58 ) exit
  289.          enddo
  289.       endif
  312.       $F_A60 = ncols
  312.       if ( ncols > 0 ) then
  312.          $I_L312_318 = 0
  312. !dir$ ivdep
  312.          do
  312.             bitx(1 + $I_L312_318) = cosz(1 + $I_L312_318) >= 1.0e-2
  312.             $I_L312_318 = 1 + $I_L312_318
  312.             if ( $I_L312_318 >= $F_A60 ) exit
  312.          enddo
  312.       endif
  316.       $Reduc_A61 = 0
  316.       $F_A63 = ncols
  316.       if ( ncols > 0 ) then
  316.          $I_L316_320 = 0
  316. !dir$ ivdep
  316.          do
  316.             if ( bitx(1 + $I_L316_320) /= 0 ) then
  316.                $Reduc_A61 = 1 + $Reduc_A61
  316.             endif
  316.             $I_L316_320 = 1 + $I_L316_320
  316.             if ( $I_L316_320 >= $F_A63 ) exit
  316.          enddo
  316.       endif
  316.       nsol = $Reduc_A61
  320.       $F_A64 = ncols
  320.       if ( ncols > 0 ) then
  320.          $I_L320_322 = 0
  320. !dir$ ivdep
  320.          do
  320.             swinc(1 + $I_L320_322) = 0.0
  320.             $I_L320_322 = 1 + $I_L320_322
  320.             if ( $I_L320_322 >= $F_A64 ) exit
  320.          enddo
  320.       endif
  321.       $F_A65 = ncols
  321.       if ( ncols > 0 ) then
  321.          $I_L321_324 = 0
  321. !dir$ ivdep
  321.          do
  321.             ss(1 + $I_L321_324) = 0.0
  321.             $I_L321_324 = 1 + $I_L321_324
  321.             if ( $I_L321_324 >= $F_A65 ) exit
  321.          enddo
  321.       endif
  322.       $F_A66 = ncols
  322.       if ( ncols > 0 ) then
  322.          $I_L322_326 = 0
  322. !dir$ ivdep
  322.          do
  322.             ssclr(1 + $I_L322_326) = 0.0
  322.             $I_L322_326 = 1 + $I_L322_326
  322.             if ( $I_L322_326 >= $F_A66 ) exit
  322.          enddo
  322.       endif
  323.       $F_A67 = ncols
  323.       if ( ncols > 0 ) then
  323.          $I_L323_328 = 0
  323. !dir$ ivdep
  323.          do
  323.             dswtop(1 + $I_L323_328) = 0.0
  323.             $I_L323_328 = 1 + $I_L323_328
  323.             if ( $I_L323_328 >= $F_A67 ) exit
  323.          enddo
  323.       endif
  324.       $F_A68 = ncols
  324.       if ( ncols > 0 ) then
  324.          $I_L324_330 = 0
  324. !dir$ ivdep
  324.          do
  324.             dswclr(1 + $I_L324_330) = 0.0
  324.             $I_L324_330 = 1 + $I_L324_330
  324.             if ( $I_L324_330 >= $F_A68 ) exit
  324.          enddo
  324.       endif
  325.       $F_A69 = ncols
  325.       if ( ncols > 0 ) then
  325.          $I_L325_332 = 0
  325. !dir$ ivdep
  325.          do
  325.             radvbl(1 + $I_L325_332) = 0.0
  325.             $I_L325_332 = 1 + $I_L325_332
  325.             if ( $I_L325_332 >= $F_A69 ) exit
  325.          enddo
  325.       endif
  326.       $F_A70 = ncols
  326.       if ( ncols > 0 ) then
  326.          $I_L326_334 = 0
  326. !dir$ ivdep
  326.          do
  326.             radvdl(1 + $I_L326_334) = 0.0
  326.             $I_L326_334 = 1 + $I_L326_334
  326.             if ( $I_L326_334 >= $F_A70 ) exit
  326.          enddo
  326.       endif
  327.       $F_A71 = ncols
  327.       if ( ncols > 0 ) then
  327.          $I_L327_336 = 0
  327. !dir$ ivdep
  327.          do
  327.             radnbl(1 + $I_L327_336) = 0.0
  327.             $I_L327_336 = 1 + $I_L327_336
  327.             if ( $I_L327_336 >= $F_A71 ) exit
  327.          enddo
  327.       endif
  328.       $F_A72 = ncols
  328.       if ( ncols > 0 ) then
  328.          $I_L328_338 = 0
  328. !dir$ ivdep
  328.          do
  328.             radndl(1 + $I_L328_338) = 0.0
  328.             $I_L328_338 = 1 + $I_L328_338
  328.             if ( $I_L328_338 >= $F_A72 ) exit
  328.          enddo
  328.       endif
  329.       $F_A73 = ncols
  329.       if ( ncols > 0 ) then
  329.          $I_L329_340 = 0
  329. !dir$ ivdep
  329.          do
  329.             radvbc(1 + $I_L329_340) = 0.0
  329.             $I_L329_340 = 1 + $I_L329_340
  329.             if ( $I_L329_340 >= $F_A73 ) exit
  329.          enddo
  329.       endif
  330.       $F_A74 = ncols
  330.       if ( ncols > 0 ) then
  330.          $I_L330_342 = 0
  330. !dir$ ivdep
  330.          do
  330.             radvdc(1 + $I_L330_342) = 0.0
  330.             $I_L330_342 = 1 + $I_L330_342
  330.             if ( $I_L330_342 >= $F_A74 ) exit
  330.          enddo
  330.       endif
  331.       $F_A75 = ncols
  331.       if ( ncols > 0 ) then
  331.          $I_L331_344 = 0
  331. !dir$ ivdep
  331.          do
  331.             radnbc(1 + $I_L331_344) = 0.0
  331.             $I_L331_344 = 1 + $I_L331_344
  331.             if ( $I_L331_344 >= $F_A75 ) exit
  331.          enddo
  331.       endif
  332.       $F_A76 = ncols
  332.       if ( ncols > 0 ) then
  332.          $I_L332_346 = 0
  332. !dir$ ivdep
  332.          do
  332.             radndc(1 + $I_L332_346) = 0.0
  332.             $I_L332_346 = 1 + $I_L332_346
  332.             if ( $I_L332_346 >= $F_A76 ) exit
  332.          enddo
  332.       endif
  333.       $F_A77 = kmax
  333.       $F_A78 = ncols
  333.       if ( and( -$F_A78, -$F_A77 ) < 0 ) then
  333.          $I_L333_460 = 0
  333.          do
  333.             $I_L333_348 = 0
  333. !dir$ ivdep
  333.             do
  333.                asl(1 + $I_L333_348, 1 + $I_L333_460) = 0.0
  333.                $I_L333_348 = 1 + $I_L333_348
  333.                if ( $I_L333_348 >= $F_A78 ) exit
  333.             enddo
  333.             $I_L333_460 = 1 + $I_L333_460
  333.             if ( $I_L333_460 >= $F_A77 ) exit
  333.          enddo
  333.       endif
  334.       $F_A79 = kmax
  334.       $F_A80 = ncols
  334.       if ( and( -$F_A80, -$F_A79 ) < 0 ) then
  334.          $I_L334_462 = 0
  334.          do
  334.             $I_L334_350 = 0
  334. !dir$ ivdep
  334.             do
  334.                aslclr(1 + $I_L334_350, 1 + $I_L334_462) = 0.0
  334.                $I_L334_350 = 1 + $I_L334_350
  334.                if ( $I_L334_350 >= $F_A80 ) exit
  334.             enddo
  334.             $I_L334_462 = 1 + $I_L334_462
  334.             if ( $I_L334_462 >= $F_A79 ) exit
  334.          enddo
  334.       endif
  338.       if ( $Reduc_A61 == 0 ) then
   67.          _free( t$116 )
   67.       else
  343.          t$681 = ( max( 0, ncols ) )
  343.          t$684 = int( _alloc( max( 0, 4 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  343.          $F_A81 = ncols
  343.          if ( ncols > 0 ) then
  343.             $I_L343_352 = 0
  343. !dir$ ivdep
  343.             do
  343.                t$683(1 + $I_L343_352) = listim(1 + $I_L343_352)
  343.                $I_L343_352 = 1 + $I_L343_352
  343.                if ( $I_L343_352 >= $F_A81 ) exit
  343.             enddo
  343.          endif
  343.          t$685 = ( max( 0, ncols ) )
  343.          t$688 = int( _alloc( max( 0, 4 * max( 0, ( max( 0, ncols ) ) ) ) ), 8 )
  343.          $F_A82 = ncols
  343.          if ( ncols > 0 ) then
  343.             $I_L343_354 = 0
  343. !dir$ ivdep
  343.             do
  343.                t$687(1 + $I_L343_354) = bitx(1 + $I_L343_354)
  343.                $I_L343_354 = 1 + $I_L343_354
  343.                if ( $I_L343_354 >= $F_A82 ) exit
  343.             enddo
  343.          endif
  343.          $PackIdx_A0 = 0
  343.          if ( ncols > 0 ) then
  343.             $I_L343_280 = 0
  343. !dir$ ivdep
  343.             do
  343.                if ( t$687(1 + $I_L343_280) /= .false. ) then
  343.                   litx(1 + $PackIdx_A0) = t$683(1 + $I_L343_280)
  343.                   $PackIdx_A0 = 1 + $PackIdx_A0
  343.                endif
  343.                $I_L343_280 = 1 + $I_L343_280
  343.                if ( $I_L343_280 >= max( 0, ncols ) ) exit
  343.             enddo
  343.          endif
  343.          _free( t$688 )
  343.          _free( t$684 )
  351.          if ( $Reduc_A61 > 0 ) then
  351.             $I_L351_438 = 0
  351.             do
  352.                $F_A83 = kmax
  352.                if ( kmax > 0 ) then
  352.                   $SCA_litx_I6 = litx(1 + $I_L351_438)
  352.                   $I_L352_356 = 0
  352. !dir$ ivdep
  352.                   do
  352.                      pu(1 + $I_L351_438, 3 + $I_L352_356) = pl20($SCA_litx_I6, 1 + $I_L352_356)
  352.                      $I_L352_356 = 1 + $I_L352_356
  352.                      if ( $I_L352_356 >= $F_A83 ) exit
  352.                   enddo
  352.                endif
  353.                $F_A84 = kmax
  353.                if ( kmax > 0 ) then
  353.                   $SCA_litx_I5 = litx(1 + $I_L351_438)
  353.                   $I_L353_358 = 0
  353. !dir$ ivdep
  353.                   do
  353.                      dp(1 + $I_L351_438, 2 + $I_L353_358) = dpl($SCA_litx_I5, 1 + $I_L353_358)
  353.                      $I_L353_358 = 1 + $I_L353_358
  353.                      if ( $I_L353_358 >= $F_A84 ) exit
  353.                   enddo
  353.                endif
  354.                $F_A85 = kmax
  354.                if ( kmax > 0 ) then
  354.                   $SCA_litx_I4 = litx(1 + $I_L351_438)
  354.                   $I_L354_360 = 0
  354. !dir$ ivdep
  354.                   do
  354.                      ta(1 + $I_L351_438, 2 + $I_L354_360) = tl($SCA_litx_I4, 1 + $I_L354_360)
  354.                      $I_L354_360 = 1 + $I_L354_360
  354.                      if ( $I_L354_360 >= $F_A85 ) exit
  354.                   enddo
  354.                endif
  355.                $F_A86 = kmax
  355.                if ( kmax > 0 ) then
  355.                   $SCA_litx_I3 = litx(1 + $I_L351_438)
  355.                   $I_L355_362 = 0
  355. !dir$ ivdep
  355.                   do
  355.                      wa(1 + $I_L351_438, 2 + $I_L355_362) = max( 9.9999999999999996e-24, ql($SCA_litx_I3, 1 + $I_L355_362) )
  355.                      $I_L355_362 = 1 + $I_L355_362
  355.                      if ( $I_L355_362 >= $F_A86 ) exit
  355.                   enddo
  355.                endif
  356.                $F_A87 = kmax
  356.                if ( kmax > 0 ) then
  356.                   $SCA_litx_I2 = litx(1 + $I_L351_438)
  356.                   $I_L356_364 = 0
  356. !dir$ ivdep
  356.                   do
  356.                      oa(1 + $I_L351_438, 2 + $I_L356_364) = max( 1.0e-10, o3l($SCA_litx_I2, 1 + $I_L356_364) )
  356.                      $I_L356_364 = 1 + $I_L356_364
  356.                      if ( $I_L356_364 >= $F_A87 ) exit
  356.                   enddo
  356.                endif
  357.                $F_A88 = kmax
  357.                if ( kmax > 0 ) then
  357.                   $SCA_litx_I1 = litx(1 + $I_L351_438)
  357.                   $I_L357_366 = 0
  357. !dir$ ivdep
  357.                   do
  357.                      css(1 + $I_L351_438, 2 + $I_L357_366) = cld($SCA_litx_I1, 1 + $I_L357_366)
  357.                      $I_L357_366 = 1 + $I_L357_366
  357.                      if ( $I_L357_366 >= $F_A88 ) exit
  357.                   enddo
  357.                endif
  358.                $F_A89 = kmax
  358.                if ( kmax > 0 ) then
  358.                   $SCA_litx_I0 = litx(1 + $I_L351_438)
  358.                   $I_L358_368 = 0
  358. !dir$ ivdep
  358.                   do
  358.                      ccu(1 + $I_L351_438, 2 + $I_L358_368) = clu($SCA_litx_I0, 1 + $I_L358_368)
  358.                      $I_L358_368 = 1 + $I_L358_368
  358.                      if ( $I_L358_368 >= $F_A89 ) exit
  358.                   enddo
  358.                endif
  359.                ps(1 + $I_L351_438) = gps(litx(1 + $I_L351_438))
  360.                $I_L351_438 = 1 + $I_L351_438
  351.                if ( $I_L351_438 >= $Reduc_A61 ) exit
  351.             enddo
  366.             $I_L366_228 = 0
  366. !dir$ ivdep
  366.             do
  367.                $pu_WR0_R0 = 5.0e-1 * pu(1 + $I_L366_228, 3)
  367.                pu(1 + $I_L366_228, 2) = $pu_WR0_R0
  368.                pu(1 + $I_L366_228, 1) = ( 1.0000000000000001e-1 * $pu_WR0_R0 )
  369.                dp(1 + $I_L366_228, 1) = $pu_WR0_R0 + -( 1.0000000000000001e-1 * $pu_WR0_R0 )
  370.                ta(1 + $I_L366_228, 1) = ta(1 + $I_L366_228, 2)
  371.                wa(1 + $I_L366_228, 1) = wa(1 + $I_L366_228, 2)
  372.                oa(1 + $I_L366_228, 1) = oa(1 + $I_L366_228, 2)
  374.                $I_L366_228 = 1 + $I_L366_228
  366.                if ( $I_L366_228 >= $Reduc_A61 ) exit
  366.             enddo
  393.             $I_L393_230 = 0
  393. !dir$ ivdep
  393.             do
  393.                if ( litx(1 + $I_L393_230) <= ncols ) then
  393.                   agv(1 + $I_L393_230) = alvdf(litx(1 + $I_L393_230))
  393.                endif
  393.                $I_L393_230 = 1 + $I_L393_230
  393.                if ( $I_L393_230 >= $Reduc_A61 ) exit
  393.             enddo
  394.             $I_L394_232 = 0
  394. !dir$ ivdep
  394.             do
  394.                if ( litx(1 + $I_L394_232) <= ncols ) then
  394.                   agn(1 + $I_L394_232) = alndf(litx(1 + $I_L394_232))
  394.                endif
  394.                $I_L394_232 = 1 + $I_L394_232
  394.                if ( $I_L394_232 >= $Reduc_A61 ) exit
  394.             enddo
  395.             $I_L395_234 = 0
  395. !dir$ ivdep
  395.             do
  395.                if ( litx(1 + $I_L395_234) <= ncols ) then
  395.                   cmu(1 + $I_L395_234) = cosz(litx(1 + $I_L395_234))
  395.                endif
  395.                $I_L395_234 = 1 + $I_L395_234
  395.                if ( $I_L395_234 >= $Reduc_A61 ) exit
  395.             enddo
  396.             $I_L396_236 = 0
  396. !dir$ ivdep
  396.             do
  396.                if ( litx(1 + $I_L396_236) <= ncols ) then
  396.                   dmask(1 + $I_L396_236) = imask(litx(1 + $I_L396_236))
  396.                endif
  396.                $I_L396_236 = 1 + $I_L396_236
  396.                if ( $I_L396_236 >= $Reduc_A61 ) exit
  396.             enddo
  435.             $I_L435_250 = 0
  435. !dir$ ivdep
  435.             do
  436.                scosz(1 + $I_L435_250) = s0 * cmu(1 + $I_L435_250)
  437.                $I_L435_250 = 1 + $I_L435_250
  435.                if ( $I_L435_250 >= $Reduc_A61 ) exit
  435.             enddo
  441.             $I_L441_252 = 0
  441. !dir$ ivdep
  441.             do
  441.                swinc(litx(1 + $I_L441_252)) = scosz(1 + $I_L441_252)
  441.                $I_L441_252 = 1 + $I_L441_252
  441.                if ( $I_L441_252 >= $Reduc_A61 ) exit
  441.             enddo
  441.          endif
  377.          if ( noz /= .false. ) then
  377.             $F_A90 = 1 + kmax
  377.             $F_A91 = ncols
  377.             if ( and( -$F_A91, -$F_A90 ) < 0 ) then
  377.                $I_L377_464 = 0
  377.                do
  377.                   $I_L377_370 = 0
  377. !dir$ ivdep
  377.                   do
  377.                      oa(1 + $I_L377_370, 1 + $I_L377_464) = 0.0
  377.                      $I_L377_370 = 1 + $I_L377_370
  377.                      if ( $I_L377_370 >= $F_A91 ) exit
  377.                   enddo
  377.                   $I_L377_464 = 1 + $I_L377_464
  377.                   if ( $I_L377_464 >= $F_A90 ) exit
  377.                enddo
  377.             endif
  377.          endif
  382.          $F_A92 = ( 1 + nls )
  382.          $F_A93 = $Reduc_A61
  382.          if ( and( -$F_A93, -$F_A92 ) < 0 ) then
  382.             $I_L382_466 = 0
  382.             do
  382.                $I_L382_372 = 0
  382. !dir$ ivdep
  382.                do
  382.                   css(1 + $I_L382_372, 1 + $I_L382_466) = 0.0
  382.                   $I_L382_372 = 1 + $I_L382_372
  382.                   if ( $I_L382_372 >= $F_A93 ) exit
  382.                enddo
  382.                $I_L382_466 = 1 + $I_L382_466
  382.                if ( $I_L382_466 >= $F_A92 ) exit
  382.             enddo
  382.          endif
  383.          $F_A94 = ( 1 + nls )
  383.          $F_A95 = $Reduc_A61
  383.          if ( and( -$F_A95, -$F_A94 ) < 0 ) then
  383.             $I_L383_468 = 0
  383.             do
  383.                $I_L383_374 = 0
  383. !dir$ ivdep
  383.                do
  383.                   ccu(1 + $I_L383_374, 1 + $I_L383_468) = 0.0
  383.                   $I_L383_374 = 1 + $I_L383_374
  383.                   if ( $I_L383_374 >= $F_A95 ) exit
  383.                enddo
  383.                $I_L383_468 = 1 + $I_L383_468
  383.                if ( $I_L383_468 >= $F_A94 ) exit
  383.             enddo
  383.          endif
  384.          $F_A96 = nls
  384.          $F_A97 = $Reduc_A61
  384.          if ( and( -$F_A97, -$F_A96 ) < 0 ) then
  384.             $I_L384_470 = 0
  384.             do
  384.                $I_L384_376 = 0
  384. !dir$ ivdep
  384.                do
  384.                   wa(1 + $I_L384_376, 1 + $I_L384_470) = 3.0000000000000001e-6
  384.                   $I_L384_376 = 1 + $I_L384_376
  384.                   if ( $I_L384_376 >= $F_A97 ) exit
  384.                enddo
  384.                $I_L384_470 = 1 + $I_L384_470
  384.                if ( $I_L384_470 >= $F_A96 ) exit
  384.             enddo
  384.          endif
  404.          if ( inalb /= 2 ) then
  414.             $F_A98 = $Reduc_A61
  414.             if ( $Reduc_A61 > 0 ) then
  414.                $I_L414_378 = 0
  414. !dir$ ivdep
  414.                do
  414.                   rvbl(1 + $I_L414_378) = acos( cmu(1 + $I_L414_378) )
  414.                   $I_L414_378 = 1 + $I_L414_378
  414.                   if ( $I_L414_378 >= $F_A98 ) exit
  414.                enddo
  415.                $I_L415_238 = 0
  415. !dir$ ivdep
  415.                do
  416.                   $rvdc_WR0_R2 = -5.7295779513082383 * ( 1.570796326794895 + -rvbl(1 + $I_L415_238) )
  417.                   $rvbc_WR0_R3 = _expn( $rvdc_WR0_R2 )
  417.                   rvbc(1 + $I_L415_238) = $rvbc_WR0_R3
  420.                   $rvdc_WR0_R2 = 1.0574323216878312 * ( -5.4313e-2 + agv(1 + $I_L415_238) )
  420.                   rvdc(1 + $I_L415_238) = $rvdc_WR0_R2
  421.                   $rndc_WR0_R4 = 1.0574323216878312 * ( -5.4313e-2 + agn(1 + $I_L415_238) )
  421.                   rndc(1 + $I_L415_238) = $rndc_WR0_R4
  422.                   rsurfv(1 + $I_L415_238) = $rvdc_WR0_R2 + $rvbc_WR0_R3 * ( 1.0 + -$rvdc_WR0_R2 )
  423.                   rsurfn(1 + $I_L415_238) = $rndc_WR0_R4 + $rvbc_WR0_R3 * ( 1.0 + -$rndc_WR0_R4 )
  418.                   $I_L415_238 = 1 + $I_L415_238
  415.                   if ( $I_L415_238 >= $Reduc_A61 ) exit
  415.                enddo
  415.             endif
  425.             if ( ncols > 0 ) then
  425.                $I_L425_240 = 0
  425. !dir$ ivdep
  425.                do
  426.                   alvdr(1 + $I_L425_240) = 0.0
  427.                   alndr(1 + $I_L425_240) = 0.0
  428.                   $I_L425_240 = 1 + $I_L425_240
  425.                   if ( $I_L425_240 >= ncols ) exit
  425.                enddo
  425.             endif
  429.             if ( $Reduc_A61 > 0 ) then
  429.                $I_L429_242 = 0
  429. !dir$ ivdep
  429.                do
  429.                   alvdr(litx(1 + $I_L429_242)) = rsurfv(1 + $I_L429_242)
  429.                   $I_L429_242 = 1 + $I_L429_242
  429.                   if ( $I_L429_242 >= $Reduc_A61 ) exit
  429.                enddo
  430.                $I_L430_244 = 0
  430. !dir$ ivdep
  430.                do
  430.                   alndr(litx(1 + $I_L430_244)) = rsurfn(1 + $I_L430_244)
  430.                   $I_L430_244 = 1 + $I_L430_244
  430.                   if ( $I_L430_244 >= $Reduc_A61 ) exit
  430.                enddo
  430.             endif
  430.          else if ( $Reduc_A61 > 0 ) then
  406.             $I_L406_246 = 0
  406. !dir$ ivdep
  406.             do
  406.                if ( litx(1 + $I_L406_246) <= ncols ) then
  406.                   rsurfv(1 + $I_L406_246) = alvdr(litx(1 + $I_L406_246))
  406.                endif
  406.                $I_L406_246 = 1 + $I_L406_246
  406.                if ( $I_L406_246 >= $Reduc_A61 ) exit
  406.             enddo
  407.             $I_L407_248 = 0
  407. !dir$ ivdep
  407.             do
  407.                if ( litx(1 + $I_L407_248) <= ncols ) then
  407.                   rsurfn(1 + $I_L407_248) = alndr(litx(1 + $I_L407_248))
  407.                endif
  407.                $I_L407_248 = 1 + $I_L407_248
  407.                if ( $I_L407_248 >= $Reduc_A61 ) exit
  407.             enddo
  407.          endif
  452.          $F_A99 = 1 + kmax
  452.          $F_A100 = ncols
  452.          if ( and( -$F_A100, -$F_A99 ) < 0 ) then
  452.             $I_L452_472 = 0
  452.             do
  452.                $I_L452_380 = 0
  452. !dir$ ivdep
  452.                do
  452.                   css(1 + $I_L452_380, 1 + $I_L452_472) = max( css(1 + $I_L452_380, 1 + $I_L452_472), ccu(1 + $I_L452_380, 1 + $I_L452_472) )
  452.                   $I_L452_380 = 1 + $I_L452_380
  452.                   if ( $I_L452_380 >= $F_A100 ) exit
  452.                enddo
  452.                $I_L452_472 = 1 + $I_L452_472
  452.                if ( $I_L452_472 >= $F_A99 ) exit
  452.             enddo
  452.          endif
  454.          if ( icld == 1 ) then
  456.             $F_A101 = 1 + kmax
  456.             $F_A102 = $Reduc_A61
  456.             if ( and( -$F_A102, -$F_A101 ) < 0 ) then
  456.                $I_L456_474 = 0
  456.                do
  456.                   $I_L456_382 = 0
  456. !dir$ ivdep
  456.                   do
  456.                      e0(1 + $I_L456_382, 1 + $I_L456_474) = 5.0000000000000003e-2
  456.                      $I_L456_382 = 1 + $I_L456_382
  456.                      if ( $I_L456_382 >= $F_A102 ) exit
  456.                   enddo
  456.                   $I_L456_474 = 1 + $I_L456_474
  456.                   if ( $I_L456_474 >= $F_A101 ) exit
  456.                enddo
  456.             endif
  457.             $F_A103 = 1 + kmax
  457.             $F_A104 = $Reduc_A61
  457.             if ( and( -$F_A104, -$F_A103 ) < 0 ) then
  457.                $I_L457_476 = 0
  457.                do
  457.                   $I_L457_384 = 0
  457. !dir$ ivdep
  457.                   do
  457.                      bitc(1 + $I_L457_384, 1 + $I_L457_476) = ta(1 + $I_L457_384, 1 + $I_L457_476) < 253.0 .and. ccu(1 + $I_L457_384, 1 + $I_L457_476) == 0.0
  457.                      $I_L457_384 = 1 + $I_L457_384
  457.                      if ( $I_L457_384 >= $F_A104 ) exit
  457.                   enddo
  457.                   $I_L457_476 = 1 + $I_L457_476
  457.                   if ( $I_L457_476 >= $F_A103 ) exit
  457.                enddo
  457.             endif
  460.             t$735 = ( max( 0, $Reduc_A61 ) )
  460.             t$736 = ( max( 0, ( 1 + kmax ) ) )
  460.             t$740 = int( _alloc( max( 0, 4 * max( 0, ( max( 0, ( 1 + kmax ) ) ) ) * max( 0, ( max( 0, $Reduc_A61 ) ) ) ) ), 8 )
  460.             $F_A105 = 1 + kmax
  460.             $F_A106 = $Reduc_A61
  460.             if ( and( -$F_A106, -$F_A105 ) < 0 ) then
  460.                $I_L460_478 = 0
  460.                do
  460.                   $I_L460_386 = 0
  460. !dir$ ivdep
  460.                   do
  460.                      t$739(1 + $I_L460_386, 1 + $I_L460_478) = bitc(1 + $I_L460_386, 1 + $I_L460_478)
  460.                      $I_L460_386 = 1 + $I_L460_386
  460.                      if ( $I_L460_386 >= $F_A106 ) exit
  460.                   enddo
  460.                   $I_L460_478 = 1 + $I_L460_478
  460.                   if ( $I_L460_478 >= $F_A105 ) exit
  460.                enddo
  460.             endif
  460.             $F_A107 = 1 + kmax
  460.             $F_A108 = $Reduc_A61
  460.             if ( and( -$F_A108, -$F_A107 ) < 0 ) then
  460.                $I_L460_480 = 0
  460.                do
  460.                   $I_L460_388 = 0
  460. !dir$ ivdep
  460.                   do
  460.                      if ( t$739(1 + $I_L460_388, 1 + $I_L460_480) /= 0 ) then
  460.                         e0(1 + $I_L460_388, 1 + $I_L460_480) = 2.5000000000000001e-2
  460.                      endif
  460.                      $I_L460_388 = 1 + $I_L460_388
  460.                      if ( $I_L460_388 >= $F_A108 ) exit
  460.                   enddo
  460.                   $I_L460_480 = 1 + $I_L460_480
  460.                   if ( $I_L460_480 >= $F_A107 ) exit
  460.                enddo
  460.             endif
  460.             _free( t$740 )
  466.             t$744 = int( _alloc( max( 0, 4 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) ), 8 )
  466.             $F_A109 = 1 + kmax
  466.             $F_A110 = ncols
  466.             if ( and( -$F_A110, -$F_A109 ) < 0 ) then
  466.                $I_L466_482 = 0
  466.                do
  466.                   $I_L466_390 = 0
  466. !dir$ ivdep
  466.                   do
  466.                      t$743(1 + $I_L466_390, 1 + $I_L466_482) = css(1 + $I_L466_390, 1 + $I_L466_482) > 0.0
  466.                      $I_L466_390 = 1 + $I_L466_390
  466.                      if ( $I_L466_390 >= $F_A110 ) exit
  466.                   enddo
  466.                   $I_L466_482 = 1 + $I_L466_482
  466.                   if ( $I_L466_482 >= $F_A109 ) exit
  466.                enddo
  466.             endif
  466.             $F_A111 = 1 + kmax
  466.             $F_A112 = ncols
  466.             if ( and( -$F_A112, -$F_A111 ) < 0 ) then
  466.                $I_L466_484 = 0
  466.                do
  466.                   $I_L466_392 = 0
  466. !dir$ ivdep
  466.                   do
  466.                      if ( t$743(1 + $I_L466_392, 1 + $I_L466_484) /= 0 ) then
  466.                         e0(1 + $I_L466_392, 1 + $I_L466_484) = e0(1 + $I_L466_392, 1 + $I_L466_484) * dp(1 + $I_L466_392, 1 + $I_L466_484)
  466.                      endif
  466.                      $I_L466_392 = 1 + $I_L466_392
  466.                      if ( $I_L466_392 >= $F_A112 ) exit
  466.                   enddo
  466.                   $I_L466_484 = 1 + $I_L466_484
  466.                   if ( $I_L466_484 >= $F_A111 ) exit
  466.                enddo
  466.             endif
  466.             _free( t$744 )
  466.             goto 10
  468.          else if ( icld == 4 ) then
  471.             if ( $Reduc_A61 > 0 ) then
  471.                $I_L471_440 = 0
  471.                do
  472.                   $F_A113 = kmax
  472.                   if ( kmax > 0 ) then
  472.                      $SCA_litx_I12 = litx(1 + $I_L471_440)
  472.                      $I_L472_394 = 0
  472. !dir$ ivdep
  472.                      do
  472.                         tauk(1 + $I_L471_440, 2 + $I_L472_394) = taud($SCA_litx_I12, 1 + $I_L472_394)
  472.                         $I_L472_394 = 1 + $I_L472_394
  472.                         if ( $I_L472_394 >= $F_A113 ) exit
  472.                      enddo
  472.                   endif
  473.                   $F_A114 = kmax
  473.                   if ( kmax > 0 ) then
  473.                      $SCA_litx_I11 = litx(1 + $I_L471_440)
  473.                      $I_L473_396 = 0
  473. !dir$ ivdep
  473.                      do
  473.                         frcice(1 + $I_L471_440, 2 + $I_L473_396) = fice($SCA_litx_I11, 1 + $I_L473_396)
  473.                         $I_L473_396 = 1 + $I_L473_396
  473.                         if ( $I_L473_396 >= $F_A114 ) exit
  473.                      enddo
  473.                   endif
  474.                   $F_A115 = kmax
  474.                   if ( kmax > 0 ) then
  474.                      $SCA_litx_I10 = litx(1 + $I_L471_440)
  474.                      $I_L474_398 = 0
  474. !dir$ ivdep
  474.                      do
  474.                         radice(1 + $I_L471_440, 2 + $I_L474_398) = rei($SCA_litx_I10, 1 + $I_L474_398)
  474.                         $I_L474_398 = 1 + $I_L474_398
  474.                         if ( $I_L474_398 >= $F_A115 ) exit
  474.                      enddo
  474.                   endif
  475.                   $F_A116 = kmax
  475.                   if ( kmax > 0 ) then
  475.                      $SCA_litx_I9 = litx(1 + $I_L471_440)
  475.                      $I_L475_400 = 0
  475. !dir$ ivdep
  475.                      do
  475.                         radliq(1 + $I_L471_440, 2 + $I_L475_400) = rel($SCA_litx_I9, 1 + $I_L475_400)
  475.                         $I_L475_400 = 1 + $I_L475_400
  475.                         if ( $I_L475_400 >= $F_A116 ) exit
  475.                      enddo
  475.                   endif
  476.                   $I_L471_440 = 1 + $I_L471_440
  471.                   if ( $I_L471_440 >= $Reduc_A61 ) exit
  471.                enddo
  471.             endif
  477.             $F_A117 = $Reduc_A61
  477.             if ( $Reduc_A61 > 0 ) then
  477.                $I_L477_402 = 0
  477. !dir$ ivdep
  477.                do
  477.                   tauk(1 + $I_L477_402, 1) = 0.0
  477.                   $I_L477_402 = 1 + $I_L477_402
  477.                   if ( $I_L477_402 >= $F_A117 ) exit
  477.                enddo
  477.             endif
  478.             $F_A118 = $Reduc_A61
  478.             if ( $Reduc_A61 > 0 ) then
  478.                $I_L478_404 = 0
  478. !dir$ ivdep
  478.                do
  478.                   frcice(1 + $I_L478_404, 1) = frcice(1 + $I_L478_404, 2)
  478.                   $I_L478_404 = 1 + $I_L478_404
  478.                   if ( $I_L478_404 >= $F_A118 ) exit
  478.                enddo
  478.             endif
  479.             $F_A119 = $Reduc_A61
  479.             if ( $Reduc_A61 > 0 ) then
  479.                $I_L479_406 = 0
  479. !dir$ ivdep
  479.                do
  479.                   radice(1 + $I_L479_406, 1) = radice(1 + $I_L479_406, 2)
  479.                   $I_L479_406 = 1 + $I_L479_406
  479.                   if ( $I_L479_406 >= $F_A119 ) exit
  479.                enddo
  479.             endif
  480.             $F_A120 = $Reduc_A61
  480.             if ( $Reduc_A61 > 0 ) then
  480.                $I_L480_408 = 0
  480. !dir$ ivdep
  480.                do
  480.                   radliq(1 + $I_L480_408, 1) = radliq(1 + $I_L480_408, 2)
  480.                   $I_L480_408 = 1 + $I_L480_408
  480.                   if ( $I_L480_408 >= $F_A120 ) exit
  480.                enddo
  480.             endif
  484.             $F_A121 = ( 1 + kmax )
  484.             $F_A122 = $Reduc_A61
  484.             if ( and( -$F_A122, -$F_A121 ) < 0 ) then
  484.                $I_L484_486 = 0
  484.                do
  484.                   $I_L484_410 = 0
  484. !dir$ ivdep
  484.                   do
  484.                      e0(1 + $I_L484_410, 1 + $I_L484_486) = tauk(1 + $I_L484_410, 1 + $I_L484_486)
  484.                      $I_L484_410 = 1 + $I_L484_410
  484.                      if ( $I_L484_410 >= $F_A122 ) exit
  484.                   enddo
  484.                   $I_L484_486 = 1 + $I_L484_486
  484.                   if ( $I_L484_486 >= $F_A121 ) exit
  484.                enddo
  484.             endif
  484.    10       continue
  495.             t$749 = 9.9999999999999995e-7 * co2val
  495.             t$750 = 1 + kmax
  496.             t$753 = ( max( 0, $Reduc_A61 ) )
  496.             t$754 = ( max( 0, 2 + kmax ) )
  496.             t$758 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, 2 + kmax ) ) ) * max( 0, ( max( 0, $Reduc_A61 ) ) ) ) ), 8 )
  496.             $F_A123 = ( 2 + kmax )
  496.             $F_A124 = $Reduc_A61
  496.             if ( and( -$F_A124, -$F_A123 ) < 0 ) then
  496.                $I_L496_488 = 0
  496.                do
  496.                   $I_L496_412 = 0
  496. !dir$ ivdep
  496.                   do
  496.                      t$757(1 + $I_L496_412, 1 + $I_L496_488) = pu(1 + $I_L496_412, 1 + $I_L496_488)
  496.                      $I_L496_412 = 1 + $I_L496_412
  496.                      if ( $I_L496_412 >= $F_A124 ) exit
  496.                   enddo
  496.                   $I_L496_488 = 1 + $I_L496_488
  496.                   if ( $I_L496_488 >= $F_A123 ) exit
  496.                enddo
  496.             endif
  496.             t$761 = ( max( 0, $Reduc_A61 ) )
  496.             t$762 = ( max( 0, 1 + kmax ) )
  496.             t$766 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, 1 + kmax ) ) ) * max( 0, ( max( 0, $Reduc_A61 ) ) ) ) ), 8 )
  496.             $F_A125 = ( 1 + kmax )
  496.             $F_A126 = $Reduc_A61
  496.             if ( and( -$F_A126, -$F_A125 ) < 0 ) then
  496.                $I_L496_490 = 0
  496.                do
  496.                   $I_L496_414 = 0
  496. !dir$ ivdep
  496.                   do
  496.                      t$765(1 + $I_L496_414, 1 + $I_L496_490) = ta(1 + $I_L496_414, 1 + $I_L496_490)
  496.                      $I_L496_414 = 1 + $I_L496_414
  496.                      if ( $I_L496_414 >= $F_A126 ) exit
  496.                   enddo
  496.                   $I_L496_490 = 1 + $I_L496_490
  496.                   if ( $I_L496_490 >= $F_A125 ) exit
  496.                enddo
  496.             endif
  496.             t$769 = ( max( 0, $Reduc_A61 ) )
  496.             t$770 = ( max( 0, 1 + kmax ) )
  496.             t$774 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, 1 + kmax ) ) ) * max( 0, ( max( 0, $Reduc_A61 ) ) ) ) ), 8 )
  496.             $F_A127 = ( 1 + kmax )
  496.             $F_A128 = $Reduc_A61
  496.             if ( and( -$F_A128, -$F_A127 ) < 0 ) then
  496.                $I_L496_492 = 0
  496.                do
  496.                   $I_L496_416 = 0
  496. !dir$ ivdep
  496.                   do
  496.                      t$773(1 + $I_L496_416, 1 + $I_L496_492) = wa(1 + $I_L496_416, 1 + $I_L496_492)
  496.                      $I_L496_416 = 1 + $I_L496_416
  496.                      if ( $I_L496_416 >= $F_A128 ) exit
  496.                   enddo
  496.                   $I_L496_492 = 1 + $I_L496_492
  496.                   if ( $I_L496_492 >= $F_A127 ) exit
  496.                enddo
  496.             endif
  496.             t$777 = ( max( 0, $Reduc_A61 ) )
  496.             t$778 = ( max( 0, 1 + kmax ) )
  496.             t$782 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, 1 + kmax ) ) ) * max( 0, ( max( 0, $Reduc_A61 ) ) ) ) ), 8 )
  496.             $F_A129 = ( 1 + kmax )
  496.             $F_A130 = $Reduc_A61
  496.             if ( and( -$F_A130, -$F_A129 ) < 0 ) then
  496.                $I_L496_494 = 0
  496.                do
  496.                   $I_L496_418 = 0
  496. !dir$ ivdep
  496.                   do
  496.                      t$781(1 + $I_L496_418, 1 + $I_L496_494) = oa(1 + $I_L496_418, 1 + $I_L496_494)
  496.                      $I_L496_418 = 1 + $I_L496_418
  496.                      if ( $I_L496_418 >= $F_A130 ) exit
  496.                   enddo
  496.                   $I_L496_494 = 1 + $I_L496_494
  496.                   if ( $I_L496_494 >= $F_A129 ) exit
  496.                enddo
  496.             endif
  498.             t$785 = ( max( 0, $Reduc_A61 ) )
  498.             t$786 = ( max( 0, 1 + kmax ) )
  498.             t$790 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, 1 + kmax ) ) ) * max( 0, ( max( 0, $Reduc_A61 ) ) ) ) ), 8 )
  499.             t$793 = ( max( 0, $Reduc_A61 ) )
  499.             t$794 = ( max( 0, 1 + kmax ) )
  499.             t$798 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, 1 + kmax ) ) ) * max( 0, ( max( 0, $Reduc_A61 ) ) ) ) ), 8 )
  500.             t$801 = ( max( 0, $Reduc_A61 ) )
  500.             t$802 = ( max( 0, 1 + kmax ) )
  500.             t$806 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, 1 + kmax ) ) ) * max( 0, ( max( 0, $Reduc_A61 ) ) ) ) ), 8 )
  500.             $F_A131 = ( 1 + kmax )
  500.             $F_A132 = $Reduc_A61
  500.             if ( and( -$F_A132, -$F_A131 ) < 0 ) then
  500.                $I_L500_496 = 0
  500.                do
  500.                   $I_L500_420 = 0
  500. !dir$ ivdep
  500.                   do
  500.                      t$805(1 + $I_L500_420, 1 + $I_L500_496) = e0(1 + $I_L500_420, 1 + $I_L500_496)
  500.                      $I_L500_420 = 1 + $I_L500_420
  500.                      if ( $I_L500_420 >= $F_A132 ) exit
  500.                   enddo
  500.                   $I_L500_496 = 1 + $I_L500_496
  500.                   if ( $I_L500_496 >= $F_A131 ) exit
  500.                enddo
  500.             endif
  500.             t$809 = ( max( 0, $Reduc_A61 ) )
  500.             t$810 = ( max( 0, 1 + kmax ) )
  500.             t$814 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, 1 + kmax ) ) ) * max( 0, ( max( 0, $Reduc_A61 ) ) ) ) ), 8 )
  500.             $F_A133 = ( 1 + kmax )
  500.             $F_A134 = $Reduc_A61
  500.             if ( and( -$F_A134, -$F_A133 ) < 0 ) then
  500.                $I_L500_498 = 0
  500.                do
  500.                   $I_L500_422 = 0
  500. !dir$ ivdep
  500.                   do
  500.                      t$813(1 + $I_L500_422, 1 + $I_L500_498) = css(1 + $I_L500_422, 1 + $I_L500_498)
  500.                      $I_L500_422 = 1 + $I_L500_422
  500.                      if ( $I_L500_422 >= $F_A134 ) exit
  500.                   enddo
  500.                   $I_L500_498 = 1 + $I_L500_498
  500.                   if ( $I_L500_498 >= $F_A133 ) exit
  500.                enddo
  500.             endif
  501.             t$817 = ( max( 0, $Reduc_A61 ) )
  501.             t$818 = ( max( 0, 1 + kmax ) )
  501.             t$822 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, 1 + kmax ) ) ) * max( 0, ( max( 0, $Reduc_A61 ) ) ) ) ), 8 )
  501.             $F_A135 = ( 1 + kmax )
  501.             $F_A136 = $Reduc_A61
  501.             if ( and( -$F_A136, -$F_A135 ) < 0 ) then
  501.                $I_L501_500 = 0
  501.                do
  501.                   $I_L501_424 = 0
  501. !dir$ ivdep
  501.                   do
  501.                      t$821(1 + $I_L501_424, 1 + $I_L501_500) = frcice(1 + $I_L501_424, 1 + $I_L501_500)
  501.                      $I_L501_424 = 1 + $I_L501_424
  501.                      if ( $I_L501_424 >= $F_A136 ) exit
  501.                   enddo
  501.                   $I_L501_500 = 1 + $I_L501_500
  501.                   if ( $I_L501_500 >= $F_A135 ) exit
  501.                enddo
  501.             endif
  501.             t$825 = ( max( 0, $Reduc_A61 ) )
  501.             t$826 = ( max( 0, 1 + kmax ) )
  501.             t$830 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, 1 + kmax ) ) ) * max( 0, ( max( 0, $Reduc_A61 ) ) ) ) ), 8 )
  501.             $F_A137 = ( 1 + kmax )
  501.             $F_A138 = $Reduc_A61
  501.             if ( and( -$F_A138, -$F_A137 ) < 0 ) then
  501.                $I_L501_502 = 0
  501.                do
  501.                   $I_L501_426 = 0
  501. !dir$ ivdep
  501.                   do
  501.                      t$829(1 + $I_L501_426, 1 + $I_L501_502) = radliq(1 + $I_L501_426, 1 + $I_L501_502)
  501.                      $I_L501_426 = 1 + $I_L501_426
  501.                      if ( $I_L501_426 >= $F_A138 ) exit
  501.                   enddo
  501.                   $I_L501_502 = 1 + $I_L501_502
  501.                   if ( $I_L501_502 >= $F_A137 ) exit
  501.                enddo
  501.             endif
  501.             t$833 = ( max( 0, $Reduc_A61 ) )
  501.             t$834 = ( max( 0, 1 + kmax ) )
  501.             t$838 = int( _alloc( max( 0, 8 * max( 0, ( max( 0, 1 + kmax ) ) ) * max( 0, ( max( 0, $Reduc_A61 ) ) ) ) ), 8 )
  501.             $F_A139 = ( 1 + kmax )
  501.             $F_A140 = $Reduc_A61
  501.             if ( and( -$F_A140, -$F_A139 ) < 0 ) then
  501.                $I_L501_504 = 0
  501.                do
  501.                   $I_L501_428 = 0
  501. !dir$ ivdep
  501.                   do
  501.                      t$837(1 + $I_L501_428, 1 + $I_L501_504) = radice(1 + $I_L501_428, 1 + $I_L501_504)
  501.                      $I_L501_428 = 1 + $I_L501_428
  501.                      if ( $I_L501_428 >= $F_A140 ) exit
  501.                   enddo
  501.                   $I_L501_504 = 1 + $I_L501_504
  501.                   if ( $I_L501_504 >= $F_A139 ) exit
  501.                enddo
  501.             endif
  494.             call cloudy( s0, t$749, nsol, t$750, t$757(1, 1), t$765(1, 1), t$773(1, 1), t$781(1, 1), cmu(1), rsurfv(1), agv(1), rsurfn(1), agn(1), dscld(1), sc(1), t$789(1, 1), rvbc(1), rvdc(1), rnbc(1), rndc(1), dsclr(1), sl(1), t$797(1, 1), rvbl(1), rvdl(1), rnbl(1), rndl(1), t$805(1, 1), t$813(1, 1), ps(1), dmask(1), t$821(1, 1), t$829(1, 1), t$837(1, 1), icld )
  501.             _free( t$838 )
  501.             _free( t$830 )
  501.             _free( t$822 )
  500.             _free( t$814 )
  500.             _free( t$806 )
  494.             $F_A141 = ( 1 + kmax )
  494.             $F_A142 = $Reduc_A61
  494.             if ( and( -$F_A142, -$F_A141 ) < 0 ) then
  494.                $I_L494_506 = 0
  494.                do
  494.                   $I_L494_430 = 0
  494. !dir$ ivdep
  494.                   do
  494.                      aclr(1 + $I_L494_430, 1 + $I_L494_506) = t$797(1 + $I_L494_430, 1 + $I_L494_506)
  494.                      $I_L494_430 = 1 + $I_L494_430
  494.                      if ( $I_L494_430 >= $F_A142 ) exit
  494.                   enddo
  494.                   $I_L494_506 = 1 + $I_L494_506
  494.                   if ( $I_L494_506 >= $F_A141 ) exit
  494.                enddo
  494.             endif
  499.             _free( t$798 )
  494.             $F_A143 = ( 1 + kmax )
  494.             $F_A144 = $Reduc_A61
  494.             if ( and( -$F_A144, -$F_A143 ) < 0 ) then
  494.                $I_L494_508 = 0
  494.                do
  494.                   $I_L494_432 = 0
  494. !dir$ ivdep
  494.                   do
  494.                      acld(1 + $I_L494_432, 1 + $I_L494_508) = t$789(1 + $I_L494_432, 1 + $I_L494_508)
  494.                      $I_L494_432 = 1 + $I_L494_432
  494.                      if ( $I_L494_432 >= $F_A144 ) exit
  494.                   enddo
  494.                   $I_L494_508 = 1 + $I_L494_508
  494.                   if ( $I_L494_508 >= $F_A143 ) exit
  494.                enddo
  494.             endif
  498.             _free( t$790 )
  496.             _free( t$782 )
  496.             _free( t$774 )
  496.             _free( t$766 )
  496.             _free( t$758 )
  508.             if ( nsol > 0 ) then
  510.                $I_L510_254 = 0
  510. !dir$ ivdep
  510.                do
  510.                   ssclr(litx(1 + $I_L510_254)) = sl(1 + $I_L510_254)
  510.                   $I_L510_254 = 1 + $I_L510_254
  510.                   if ( $I_L510_254 >= nsol ) exit
  510.                enddo
  511.                $I_L511_256 = 0
  511. !dir$ ivdep
  511.                do
  511.                   dswclr(litx(1 + $I_L511_256)) = dsclr(1 + $I_L511_256)
  511.                   $I_L511_256 = 1 + $I_L511_256
  511.                   if ( $I_L511_256 >= nsol ) exit
  511.                enddo
  512.                $I_L512_258 = 0
  512. !dir$ ivdep
  512.                do
  512.                   radvbl(litx(1 + $I_L512_258)) = rvbl(1 + $I_L512_258)
  512.                   $I_L512_258 = 1 + $I_L512_258
  512.                   if ( $I_L512_258 >= nsol ) exit
  512.                enddo
  513.                $I_L513_260 = 0
  513. !dir$ ivdep
  513.                do
  513.                   radvdl(litx(1 + $I_L513_260)) = rvdl(1 + $I_L513_260)
  513.                   $I_L513_260 = 1 + $I_L513_260
  513.                   if ( $I_L513_260 >= nsol ) exit
  513.                enddo
  514.                $I_L514_262 = 0
  514. !dir$ ivdep
  514.                do
  514.                   radnbl(litx(1 + $I_L514_262)) = rnbl(1 + $I_L514_262)
  514.                   $I_L514_262 = 1 + $I_L514_262
  514.                   if ( $I_L514_262 >= nsol ) exit
  514.                enddo
  515.                $I_L515_264 = 0
  515. !dir$ ivdep
  515.                do
  515.                   radndl(litx(1 + $I_L515_264)) = rndl(1 + $I_L515_264)
  515.                   $I_L515_264 = 1 + $I_L515_264
  515.                   if ( $I_L515_264 >= nsol ) exit
  515.                enddo
  518.                $I_L518_266 = 0
  518. !dir$ ivdep
  518.                do
  518.                   ss(litx(1 + $I_L518_266)) = sc(1 + $I_L518_266)
  518.                   $I_L518_266 = 1 + $I_L518_266
  518.                   if ( $I_L518_266 >= nsol ) exit
  518.                enddo
  519.                $I_L519_268 = 0
  519. !dir$ ivdep
  519.                do
  519.                   dswtop(litx(1 + $I_L519_268)) = dscld(1 + $I_L519_268)
  519.                   $I_L519_268 = 1 + $I_L519_268
  519.                   if ( $I_L519_268 >= nsol ) exit
  519.                enddo
  520.                $I_L520_270 = 0
  520. !dir$ ivdep
  520.                do
  520.                   radvbc(litx(1 + $I_L520_270)) = rvbc(1 + $I_L520_270)
  520.                   $I_L520_270 = 1 + $I_L520_270
  520.                   if ( $I_L520_270 >= nsol ) exit
  520.                enddo
  521.                $I_L521_272 = 0
  521. !dir$ ivdep
  521.                do
  521.                   radvdc(litx(1 + $I_L521_272)) = rvdc(1 + $I_L521_272)
  521.                   $I_L521_272 = 1 + $I_L521_272
  521.                   if ( $I_L521_272 >= nsol ) exit
  521.                enddo
  522.                $I_L522_274 = 0
  522. !dir$ ivdep
  522.                do
  522.                   radnbc(litx(1 + $I_L522_274)) = rnbc(1 + $I_L522_274)
  522.                   $I_L522_274 = 1 + $I_L522_274
  522.                   if ( $I_L522_274 >= nsol ) exit
  522.                enddo
  523.                $I_L523_276 = 0
  523. !dir$ ivdep
  523.                do
  523.                   radndc(litx(1 + $I_L523_276)) = rndc(1 + $I_L523_276)
  523.                   $I_L523_276 = 1 + $I_L523_276
  523.                   if ( $I_L523_276 >= nsol ) exit
  523.                enddo
  526.                $I_L526_442 = 0
  526.                do
  527.                   $F_A145 = kmax
  527.                   if ( kmax > 0 ) then
  527.                      $SCA_litx_I8 = litx(1 + $I_L526_442)
  527.                      $I_L527_434 = 0
  527. !dir$ ivdep
  527.                      do
  527.                         aslclr($SCA_litx_I8, 1 + $I_L527_434) = aclr(1 + $I_L526_442, 2 + $I_L527_434)
  527.                         $I_L527_434 = 1 + $I_L527_434
  527.                         if ( $I_L527_434 >= $F_A145 ) exit
  527.                      enddo
  527.                   endif
  528.                   $F_A146 = kmax
  528.                   if ( kmax > 0 ) then
  528.                      $SCA_litx_I7 = litx(1 + $I_L526_442)
  528.                      $I_L528_436 = 0
  528. !dir$ ivdep
  528.                      do
  528.                         asl($SCA_litx_I7, 1 + $I_L528_436) = acld(1 + $I_L526_442, 2 + $I_L528_436)
  528.                         $I_L528_436 = 1 + $I_L528_436
  528.                         if ( $I_L528_436 >= $F_A146 ) exit
  528.                      enddo
  528.                   endif
  529.                   $I_L526_442 = 1 + $I_L526_442
  526.                   if ( $I_L526_442 >= nsol ) exit
  526.                enddo
  526.             endif
  534.             if ( kmax > 0 ) then
  535.                if ( ncols > 0 ) then
  534.                   $I_L534_444 = 0
  534.                   do
  535.                      $I_L535_278 = 0
  535. !dir$ ivdep
  535.                      do
  536.                         if ( aslclr(1 + $I_L535_278, 1 + $I_L534_444) < 1.0e-22 ) then
  536.                            aslclr(1 + $I_L535_278, 1 + $I_L534_444) = 0.0
  536.                         endif
  537.                         if ( asl(1 + $I_L535_278, 1 + $I_L534_444) < 1.0e-22 ) then
  537.                            asl(1 + $I_L535_278, 1 + $I_L534_444) = 0.0
  537.                         endif
  540.                         asl(1 + $I_L535_278, 1 + $I_L534_444) = 1.1574e-5 * asl(1 + $I_L535_278, 1 + $I_L534_444)
  539.                         aslclr(1 + $I_L535_278, 1 + $I_L534_444) = 1.1574e-5 * aslclr(1 + $I_L535_278, 1 + $I_L534_444)
  541.                         $I_L535_278 = 1 + $I_L535_278
  537.                         if ( $I_L535_278 >= ncols ) exit
  537.                      enddo
  542.                      $I_L534_444 = 1 + $I_L534_444
  541.                      if ( $I_L534_444 >= kmax ) exit
  541.                   enddo
  541.                endif
  541.             endif
   67.             _free( t$116 )
   67.          else
  486.             $Unit_temp_O0 = nfprt
  486.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'error! icld must be 1 or 4 with Clirad-sw-m ', 0x800600000000L ) ) )
  487.              _substr(t$748,1,4) = ' '
  487.             call _stop(  _substr(t$748,1,1) )
  487.          endif
  487.       endif
  544.       return
  544.       end
  544.       
  599.       
  599.       subroutine cloudy( s0, rco2, m, np, pl, ta, wa, oa, cosz, rsuvbm, rsuvdf, rsirbm, rsirdf, dscld1, sc1, acld1, rvbc1, rvdc1, rnbc1, rndc1, dsclr1, sl1, aclr1, rvbl1, rvdl1, rnbl1, rndl1, tauc, csscgp, psc, dmask, fice, rel, rei, icld )
  599.       t$11 = m
  599.       t$12 = ( 1 + np )
  647.       t$227 = _zla( 0, m )
  599.       t$228 = _zla( 0, m )
  647.       t$229 = _zla( 0, ( 1 + np ) )
  599.       t$230 = _zla( 0, m ) * _zla( 0, ( 1 + np ) )
  599.       t$13 = np
  648.       t$231 = _zla( 0, np )
  599.       t$232 = _zla( 0, m ) * _zla( 0, np )
  663.       t$235 = 8 * _zla( 0, m ) * _zla( 0, np )
  663.       t$236 = 8 * ( 7 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
  663.       t$238 = t$236 + 8 * _zla( 0, m ) * _zla( 0, np )
  599.       t$239 = _zla( 0, m ) * _zla( 0, np )
  599.       t$240 = 11 * _zla( 0, m ) * _zla( 0, np )
  661.       t$241 = 8 * ( 7 + t$236 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
  661.       t$243 = t$241 + 88 * _zla( 0, m ) * _zla( 0, np )
  663.       t$244 = 8 * ( 7 + t$241 + 88 * _zla( 0, m ) * _zla( 0, np ) ) / 8
  663.       t$246 = t$244 + 8 * _zla( 0, m ) * _zla( 0, np )
  663.       t$247 = 8 * ( 7 + t$244 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
  663.       t$249 = t$247 + 8 * _zla( 0, m ) * _zla( 0, np )
  665.       t$250 = 8 * ( 7 + t$247 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
  665.       t$252 = t$250 + 8 * _zla( 0, m )
  667.       t$253 = 8 * ( 7 + t$250 + 8 * _zla( 0, m ) ) / 8
  667.       t$255 = t$253 + 8 * _zla( 0, m )
  665.       t$256 = 8 * ( 7 + t$253 + 8 * _zla( 0, m ) ) / 8
  665.       t$258 = t$256 + 8 * _zla( 0, m )
  667.       t$259 = 8 * ( 7 + t$256 + 8 * _zla( 0, m ) ) / 8
  667.       t$261 = t$259 + 8 * _zla( 0, m )
  665.       t$262 = 8 * ( 7 + t$259 + 8 * _zla( 0, m ) ) / 8
  665.       t$264 = t$262 + 8 * _zla( 0, m )
  667.       t$265 = 8 * ( 7 + t$262 + 8 * _zla( 0, m ) ) / 8
  667.       t$267 = t$265 + 8 * _zla( 0, m )
  665.       t$268 = 8 * ( 7 + t$265 + 8 * _zla( 0, m ) ) / 8
  665.       t$270 = t$268 + 8 * _zla( 0, m )
  667.       t$271 = 8 * ( 7 + t$268 + 8 * _zla( 0, m ) ) / 8
  667.       t$273 = t$271 + 8 * _zla( 0, m )
  665.       t$274 = 8 * ( 7 + t$271 + 8 * _zla( 0, m ) ) / 8
  665.       t$276 = t$274 + 8 * _zla( 0, m )
  667.       t$277 = 8 * ( 7 + t$274 + 8 * _zla( 0, m ) ) / 8
  667.       t$279 = t$277 + 8 * _zla( 0, m )
  665.       t$280 = 8 * ( 7 + t$277 + 8 * _zla( 0, m ) ) / 8
  665.       t$282 = t$280 + 8 * _zla( 0, m )
  667.       t$283 = 8 * ( 7 + t$280 + 8 * _zla( 0, m ) ) / 8
  667.       t$285 = t$283 + 8 * _zla( 0, m )
  664.       t$286 = 8 * ( 7 + t$283 + 8 * _zla( 0, m ) ) / 8
  664.       t$288 = t$286 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
  664.       t$289 = 8 * ( 7 + t$286 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
  664.       t$291 = t$289 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
  664.       t$292 = 8 * ( 7 + t$289 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
  664.       t$294 = t$292 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
  664.       t$295 = 8 * ( 7 + t$292 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
  664.       t$297 = t$295 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
  664.       t$298 = 8 * ( 7 + t$295 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
  664.       t$300 = t$298 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
  664.       t$301 = 8 * ( 7 + t$298 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
  664.       t$303 = t$301 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
  672.       t$304 = 8 * ( 7 + t$301 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
  672.       t$306 = t$304 + 8 * _zla( 0, m ) * _zla( 0, np )
  599.       t$307 = 3 * _zla( 0, m ) * _zla( 0, np )
  662.       t$308 = 8 * ( 7 + t$304 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
  662.       t$310 = t$308 + 24 * _zla( 0, m ) * _zla( 0, np )
  661.       t$311 = 8 * ( 7 + t$308 + 24 * _zla( 0, m ) * _zla( 0, np ) ) / 8
  661.       t$313 = t$311 + 88 * _zla( 0, m ) * _zla( 0, np )
  661.       t$314 = 8 * ( 7 + t$311 + 88 * _zla( 0, m ) * _zla( 0, np ) ) / 8
  661.       t$316 = t$314 + 88 * _zla( 0, m ) * _zla( 0, np )
  662.       t$317 = 8 * ( 7 + t$314 + 88 * _zla( 0, m ) * _zla( 0, np ) ) / 8
  662.       t$319 = t$317 + 24 * _zla( 0, m ) * _zla( 0, np )
  672.       t$320 = 8 * ( 7 + t$317 + 24 * _zla( 0, m ) * _zla( 0, np ) ) / 8
  672.       t$322 = t$320 + 8 * _zla( 0, m )
  599.       t$233 = int( _alloc( t$320 + 8 * _zla( 0, m ) ), 8 )
  663.       t$234 = t$233
  663.       t$237 = t$236 + t$233
  661.       t$242 = t$241 + t$233
  663.       t$245 = t$244 + t$233
  663.       t$248 = t$247 + t$233
  665.       t$251 = t$250 + t$233
  667.       t$254 = t$253 + t$233
  665.       t$257 = t$256 + t$233
  667.       t$260 = t$259 + t$233
  665.       t$263 = t$262 + t$233
  667.       t$266 = t$265 + t$233
  665.       t$269 = t$268 + t$233
  667.       t$272 = t$271 + t$233
  665.       t$275 = t$274 + t$233
  667.       t$278 = t$277 + t$233
  665.       t$281 = t$280 + t$233
  667.       t$284 = t$283 + t$233
  664.       t$287 = t$286 + t$233
  664.       t$290 = t$289 + t$233
  664.       t$293 = t$292 + t$233
  664.       t$296 = t$295 + t$233
  664.       t$299 = t$298 + t$233
  664.       t$302 = t$301 + t$233
  672.       t$305 = t$304 + t$233
  662.       t$309 = t$308 + t$233
  661.       t$312 = t$311 + t$233
  661.       t$315 = t$314 + t$233
  662.       t$318 = t$317 + t$233
  672.       t$321 = t$320 + t$233
  678.       $F_A33 = m
  678.       if ( m > 0 ) then
  678.          $I_L678_97 = 0
  678. !dir$ ivdep
  678.          do
  678.             dscld1(1 + $I_L678_97) = 0.0
  678.             $I_L678_97 = 1 + $I_L678_97
  678.             if ( $I_L678_97 >= $F_A33 ) exit
  678.          enddo
  678.       endif
  679.       $F_A34 = m
  679.       if ( m > 0 ) then
  679.          $I_L679_99 = 0
  679. !dir$ ivdep
  679.          do
  679.             sc1(1 + $I_L679_99) = 0.0
  679.             $I_L679_99 = 1 + $I_L679_99
  679.             if ( $I_L679_99 >= $F_A34 ) exit
  679.          enddo
  679.       endif
  680.       $F_A35 = m
  680.       if ( m > 0 ) then
  680.          $I_L680_101 = 0
  680. !dir$ ivdep
  680.          do
  680.             rvbc1(1 + $I_L680_101) = 0.0
  680.             $I_L680_101 = 1 + $I_L680_101
  680.             if ( $I_L680_101 >= $F_A35 ) exit
  680.          enddo
  680.       endif
  681.       $F_A36 = m
  681.       if ( m > 0 ) then
  681.          $I_L681_103 = 0
  681. !dir$ ivdep
  681.          do
  681.             rvdc1(1 + $I_L681_103) = 0.0
  681.             $I_L681_103 = 1 + $I_L681_103
  681.             if ( $I_L681_103 >= $F_A36 ) exit
  681.          enddo
  681.       endif
  682.       $F_A37 = m
  682.       if ( m > 0 ) then
  682.          $I_L682_105 = 0
  682. !dir$ ivdep
  682.          do
  682.             rnbc1(1 + $I_L682_105) = 0.0
  682.             $I_L682_105 = 1 + $I_L682_105
  682.             if ( $I_L682_105 >= $F_A37 ) exit
  682.          enddo
  682.       endif
  683.       $F_A38 = m
  683.       if ( m > 0 ) then
  683.          $I_L683_107 = 0
  683. !dir$ ivdep
  683.          do
  683.             rndc1(1 + $I_L683_107) = 0.0
  683.             $I_L683_107 = 1 + $I_L683_107
  683.             if ( $I_L683_107 >= $F_A38 ) exit
  683.          enddo
  683.       endif
  686.       $F_A39 = m
  686.       if ( m > 0 ) then
  686.          $I_L686_109 = 0
  686. !dir$ ivdep
  686.          do
  686.             dsclr1(1 + $I_L686_109) = 0.0
  686.             $I_L686_109 = 1 + $I_L686_109
  686.             if ( $I_L686_109 >= $F_A39 ) exit
  686.          enddo
  686.       endif
  687.       $F_A40 = m
  687.       if ( m > 0 ) then
  687.          $I_L687_111 = 0
  687. !dir$ ivdep
  687.          do
  687.             sl1(1 + $I_L687_111) = 0.0
  687.             $I_L687_111 = 1 + $I_L687_111
  687.             if ( $I_L687_111 >= $F_A40 ) exit
  687.          enddo
  687.       endif
  688.       $F_A41 = m
  688.       if ( m > 0 ) then
  688.          $I_L688_113 = 0
  688. !dir$ ivdep
  688.          do
  688.             rvbl1(1 + $I_L688_113) = 0.0
  688.             $I_L688_113 = 1 + $I_L688_113
  688.             if ( $I_L688_113 >= $F_A41 ) exit
  688.          enddo
  688.       endif
  689.       $F_A42 = m
  689.       if ( m > 0 ) then
  689.          $I_L689_115 = 0
  689. !dir$ ivdep
  689.          do
  689.             rvdl1(1 + $I_L689_115) = 0.0
  689.             $I_L689_115 = 1 + $I_L689_115
  689.             if ( $I_L689_115 >= $F_A42 ) exit
  689.          enddo
  689.       endif
  690.       $F_A43 = m
  690.       if ( m > 0 ) then
  690.          $I_L690_117 = 0
  690. !dir$ ivdep
  690.          do
  690.             rnbl1(1 + $I_L690_117) = 0.0
  690.             $I_L690_117 = 1 + $I_L690_117
  690.             if ( $I_L690_117 >= $F_A43 ) exit
  690.          enddo
  690.       endif
  691.       $F_A44 = m
  691.       if ( m > 0 ) then
  691.          $I_L691_119 = 0
  691. !dir$ ivdep
  691.          do
  691.             rndl1(1 + $I_L691_119) = 0.0
  691.             $I_L691_119 = 1 + $I_L691_119
  691.             if ( $I_L691_119 >= $F_A44 ) exit
  691.          enddo
  691.       endif
  684.       $F_A45 = np
  684.       $F_A46 = m
  684.       if ( and( -$F_A46, -$F_A45 ) < 0 ) then
  684.          $I_L684_177 = 0
  684.          do
  684.             $I_L684_121 = 0
  684. !dir$ ivdep
  684.             do
  684.                acld1(1 + $I_L684_121, 1 + $I_L684_177) = 0.0
  684.                $I_L684_121 = 1 + $I_L684_121
  684.                if ( $I_L684_121 >= $F_A46 ) exit
  684.             enddo
  684.             $I_L684_177 = 1 + $I_L684_177
  684.             if ( $I_L684_177 >= $F_A45 ) exit
  684.          enddo
  684.       endif
  692.       $F_A47 = np
  692.       $F_A48 = m
  692.       if ( and( -$F_A48, -$F_A47 ) < 0 ) then
  692.          $I_L692_179 = 0
  692.          do
  692.             $I_L692_123 = 0
  692. !dir$ ivdep
  692.             do
  692.                aclr1(1 + $I_L692_123, 1 + $I_L692_179) = 0.0
  692.                $I_L692_123 = 1 + $I_L692_123
  692.                if ( $I_L692_123 >= $F_A48 ) exit
  692.             enddo
  692.             $I_L692_179 = 1 + $I_L692_179
  692.             if ( $I_L692_179 >= $F_A47 ) exit
  692.          enddo
  692.       endif
  701.       if ( np > 0 ) then
  702.          $SC_psc_I0 = psc(1)
  701.          $I_L701_88 = 0
  701. !dir$ ivdep
  701.          do
  702.             if ( ( pl(1, 1 + $I_L701_88) * 1.0/$SC_psc_I0 ) <= 4.0000000000000002e-1 ) then
  702.                if ( ( pl(1, 2 + $I_L701_88) * 1.0/$SC_psc_I0 ) > 4.0000000000000002e-1 ) then
  702.                   ict = ( 1 + $I_L701_88 )
  702.                endif
  702.             endif
  703.             if ( ( pl(1, 1 + $I_L701_88) * 1.0/$SC_psc_I0 ) <= 6.9999999999999996e-1 ) then
  703.                if ( ( pl(1, 2 + $I_L701_88) * 1.0/$SC_psc_I0 ) > 6.9999999999999996e-1 ) then
  703.                   icb = ( 1 + $I_L701_88 )
  703.                endif
  703.             endif
  704.             $I_L701_88 = 1 + $I_L701_88
  703.             if ( $I_L701_88 >= np ) exit
  703.          enddo
  703.       endif
  713.       if ( icld == 1 ) then
  714.          $F_A49 = np
  714.          $F_A50 = m
  714.          if ( and( -$F_A50, -$F_A49 ) < 0 ) then
  714.             $I_L714_181 = 0
  714.             do
  714.                $I_L714_125 = 0
  714. !dir$ ivdep
  714.                do
  714.                   taucld(1 + $I_L714_125, 1 + $I_L714_181, 1) = 0.0
  714.                   $I_L714_125 = 1 + $I_L714_125
  714.                   if ( $I_L714_125 >= $F_A50 ) exit
  714.                enddo
  714.                $I_L714_181 = 1 + $I_L714_181
  714.                if ( $I_L714_181 >= $F_A49 ) exit
  714.             enddo
  714.          endif
  715.          $F_A51 = np
  715.          $F_A52 = m
  715.          if ( and( -$F_A52, -$F_A51 ) < 0 ) then
  715.             $I_L715_183 = 0
  715.             do
  715.                $I_L715_127 = 0
  715. !dir$ ivdep
  715.                do
  715.                   taucld(1 + $I_L715_127, 1 + $I_L715_183, 2) = tauc(1 + $I_L715_127, 1 + $I_L715_183)
  715.                   $I_L715_127 = 1 + $I_L715_127
  715.                   if ( $I_L715_127 >= $F_A52 ) exit
  715.                enddo
  715.                $I_L715_183 = 1 + $I_L715_183
  715.                if ( $I_L715_183 >= $F_A51 ) exit
  715.             enddo
  715.          endif
  716.          $F_A53 = np
  716.          $F_A54 = m
  716.          if ( and( -$F_A54, -$F_A53 ) < 0 ) then
  716.             $I_L716_185 = 0
  716.             do
  716.                $I_L716_129 = 0
  716. !dir$ ivdep
  716.                do
  716.                   reff(1 + $I_L716_129, 1 + $I_L716_185, 1) = 80.0
  716.                   $I_L716_129 = 1 + $I_L716_129
  716.                   if ( $I_L716_129 >= $F_A54 ) exit
  716.                enddo
  716.                $I_L716_185 = 1 + $I_L716_185
  716.                if ( $I_L716_185 >= $F_A53 ) exit
  716.             enddo
  716.          endif
  717.          $F_A55 = np
  717.          $F_A56 = m
  717.          if ( and( -$F_A56, -$F_A55 ) < 0 ) then
  717.             $I_L717_187 = 0
  717.             do
  717.                $I_L717_131 = 0
  717. !dir$ ivdep
  717.                do
  717.                   reff(1 + $I_L717_131, 1 + $I_L717_187, 2) = 5.25
  717.                   $I_L717_131 = 1 + $I_L717_131
  717.                   if ( $I_L717_131 >= $F_A56 ) exit
  717.                enddo
  717.                $I_L717_187 = 1 + $I_L717_187
  717.                if ( $I_L717_187 >= $F_A55 ) exit
  717.             enddo
  717.          endif
  717.          goto 10
  718.       else if ( icld == 4 ) then
  719.          $F_A57 = np
  719.          $F_A58 = m
  719.          if ( and( -$F_A58, -$F_A57 ) < 0 ) then
  719.             $I_L719_189 = 0
  719.             do
  719.                $I_L719_133 = 0
  719. !dir$ ivdep
  719.                do
  719.                   taucld(1 + $I_L719_133, 1 + $I_L719_189, 1) = tauc(1 + $I_L719_133, 1 + $I_L719_189) * fice(1 + $I_L719_133, 1 + $I_L719_189)
  719.                   $I_L719_133 = 1 + $I_L719_133
  719.                   if ( $I_L719_133 >= $F_A58 ) exit
  719.                enddo
  719.                $I_L719_189 = 1 + $I_L719_189
  719.                if ( $I_L719_189 >= $F_A57 ) exit
  719.             enddo
  719.          endif
  720.          $F_A59 = np
  720.          $F_A60 = m
  720.          if ( and( -$F_A60, -$F_A59 ) < 0 ) then
  720.             $I_L720_191 = 0
  720.             do
  720.                $I_L720_135 = 0
  720. !dir$ ivdep
  720.                do
  720.                   taucld(1 + $I_L720_135, 1 + $I_L720_191, 2) = tauc(1 + $I_L720_135, 1 + $I_L720_191) * ( 1.0 + -fice(1 + $I_L720_135, 1 + $I_L720_191) )
  720.                   $I_L720_135 = 1 + $I_L720_135
  720.                   if ( $I_L720_135 >= $F_A60 ) exit
  720.                enddo
  720.                $I_L720_191 = 1 + $I_L720_191
  720.                if ( $I_L720_191 >= $F_A59 ) exit
  720.             enddo
  720.          endif
  721.          $F_A61 = np
  721.          $F_A62 = m
  721.          if ( and( -$F_A62, -$F_A61 ) < 0 ) then
  721.             $I_L721_193 = 0
  721.             do
  721.                $I_L721_137 = 0
  721. !dir$ ivdep
  721.                do
  721.                   reff(1 + $I_L721_137, 1 + $I_L721_193, 1) = rei(1 + $I_L721_137, 1 + $I_L721_193)
  721.                   $I_L721_137 = 1 + $I_L721_137
  721.                   if ( $I_L721_137 >= $F_A62 ) exit
  721.                enddo
  721.                $I_L721_193 = 1 + $I_L721_193
  721.                if ( $I_L721_193 >= $F_A61 ) exit
  721.             enddo
  721.          endif
  722.          $F_A63 = np
  722.          $F_A64 = m
  722.          if ( and( -$F_A64, -$F_A63 ) < 0 ) then
  722.             $I_L722_195 = 0
  722.             do
  722.                $I_L722_139 = 0
  722. !dir$ ivdep
  722.                do
  722.                   reff(1 + $I_L722_139, 1 + $I_L722_195, 2) = rel(1 + $I_L722_139, 1 + $I_L722_195)
  722.                   $I_L722_139 = 1 + $I_L722_139
  722.                   if ( $I_L722_139 >= $F_A64 ) exit
  722.                enddo
  722.                $I_L722_195 = 1 + $I_L722_195
  722.                if ( $I_L722_195 >= $F_A63 ) exit
  722.             enddo
  722.          endif
  722.    10    continue
  728.          $F_A65 = np
  728.          $F_A66 = m
  728.          if ( and( -$F_A66, -$F_A65 ) < 0 ) then
  728.             $I_L728_197 = 0
  728.             do
  728.                $I_L728_141 = 0
  728. !dir$ ivdep
  728.                do
  728.                   taucld(1 + $I_L728_141, 1 + $I_L728_197, 3) = 0.0
  728.                   $I_L728_141 = 1 + $I_L728_141
  728.                   if ( $I_L728_141 >= $F_A66 ) exit
  728.                enddo
  728.                $I_L728_197 = 1 + $I_L728_197
  728.                if ( $I_L728_197 >= $F_A65 ) exit
  728.             enddo
  728.          endif
  729.          $F_A67 = np
  729.          $F_A68 = m
  729.          if ( and( -$F_A68, -$F_A67 ) < 0 ) then
  729.             $I_L729_199 = 0
  729.             do
  729.                $I_L729_143 = 0
  729. !dir$ ivdep
  729.                do
  729.                   reff(1 + $I_L729_143, 1 + $I_L729_199, 3) = 0.0
  729.                   $I_L729_143 = 1 + $I_L729_143
  729.                   if ( $I_L729_143 >= $F_A68 ) exit
  729.                enddo
  729.                $I_L729_199 = 1 + $I_L729_199
  729.                if ( $I_L729_199 >= $F_A67 ) exit
  729.             enddo
  729.          endif
  730.          $F_A69 = np
  730.          $F_A70 = m
  730.          if ( and( -$F_A70, -$F_A69 ) < 0 ) then
  730.             $I_L730_201 = 0
  730.             do
  730.                $I_L730_145 = 0
  730. !dir$ ivdep
  730.                do
  730.                   fcld(1 + $I_L730_145, 1 + $I_L730_201) = csscgp(1 + $I_L730_145, 1 + $I_L730_201)
  730.                   $I_L730_145 = 1 + $I_L730_145
  730.                   if ( $I_L730_145 >= $F_A70 ) exit
  730.                enddo
  730.                $I_L730_201 = 1 + $I_L730_201
  730.                if ( $I_L730_201 >= $F_A69 ) exit
  730.             enddo
  730.          endif
  735.          if ( m > 0 ) then
  736.             if ( np > 0 ) then
  736.                $I_L736_212 = 0
  736.                do
  735.                   $I_L735_208 = 0
  735.                   do
  736.                      $I_L736_217 = 0
  736. !dir$ shortloop16
  736. !dir$ blocking_size( 2, 2 )
  736.                      do
  735.                         $I_L735_90 = 0
  735. !dir$ ivdep
  735. !dir$ blocking_size( 256, 256 )
  735.                         do
  737.                            $Flat_S4 = log10( pl(1 + $I_L735_90 + 256 * $I_L735_208, 2 + $I_L736_217 + 2 * $I_L736_212) )
  737.                            $Flat_S3 = log10( pl(1 + $I_L735_90 + 256 * $I_L735_208, 1 + $I_L736_217 + 2 * $I_L736_212) )
  737.                            dzint(1 + $I_L735_90 + 256 * $I_L735_208, 1 + $I_L736_217 + 2 * $I_L736_212) = 6.6033900000000006e-2 * ta(1 + $I_L735_90 + 256 * $I_L735_208, 1 + $I_L736_217 + 2 * $I_L736_212) * ( $Flat_S4 + -$Flat_S3 )
  735.                            $I_L735_90 = 1 + $I_L735_90
  736.                            if ( $I_L735_90 >= min( m, 256 + 256 * $I_L735_208 ) + -256 * $I_L735_208 ) exit
  736.                         enddo
  736.                         $I_L736_217 = 1 + $I_L736_217
  736.                         if ( $I_L736_217 >= min( np, 2 + 2 * $I_L736_212 ) + -2 * $I_L736_212 ) exit
  736.                      enddo
  735.                      $I_L735_208 = 1 + $I_L735_208
  738.                      if ( $I_L735_208 >= 1 + max( 0, -1 + _rsh( 255 + m, 8 ) ) ) exit
  738.                   enddo
  736.                   $I_L736_212 = 1 + $I_L736_212
  736.                   if ( $I_L736_212 >= 1 + max( 0, -1 + _rsh( 1 + np, 1 ) ) ) exit
  736.                enddo
  736.             endif
  736.          endif
  749.          $F_A71 = np
  749.          $F_A72 = m
  749.          if ( and( -$F_A72, -$F_A71 ) < 0 ) then
  749.             $I_L749_203 = 0
  749.             do
  749.                $I_L749_147 = 0
  749. !dir$ ivdep
  749.                do
  749.                   hzmask(1 + $I_L749_147, 1 + $I_L749_203) = 0.0
  749.                   $I_L749_147 = 1 + $I_L749_147
  749.                   if ( $I_L749_147 >= $F_A72 ) exit
  749.                enddo
  749.                $I_L749_203 = 1 + $I_L749_203
  749.                if ( $I_L749_203 >= $F_A71 ) exit
  749.             enddo
  749.          endif
  750.          if ( m > 0 ) then
  750.             $I_L750_167 = 0
  750.             do
  751.                $k_S6 = 1 + np
  755.                $SC_topa_I7 = 0.0
  755.                do
  754.                   $k_S6 = -1 + $k_S6
  755.                   $SC_topa_I7 = $SC_topa_I7 + dzint(1 + $I_L750_167, $k_S6)
  755.                   if ( $SC_topa_I7 >= 2.0 ) exit
  755.                enddo
  757.                $F_A73 = ( 1 + np + -$k_S6 )
  757.                if ( np + -$k_S6 >= 0 ) then
  757.                   $I_L757_149 = 0
  757. !dir$ ivdep
  757.                   do
  757.                      hzmask(1 + $I_L750_167, $k_S6 + $I_L757_149) = 1.0
  757.                      $I_L757_149 = 1 + $I_L757_149
  757.                      if ( $I_L757_149 >= $F_A73 ) exit
  757.                   enddo
  757.                endif
  758.                $I_L750_167 = 1 + $I_L750_167
  756.                if ( $I_L750_167 >= m ) exit
  756.             enddo
  775.             if ( np > 0 ) then
  774.                $I_L774_169 = 0
  774.                do
  775.                   $F_A74 = np
  775.                   $I_L775_151 = 0
  775. !dir$ ivdep
  775.                   do
  775.                      aotb_c(1 + $I_L774_169, 1 + $I_L775_151) = 5.0e-1 * asolc * hzmask(1 + $I_L774_169, 1 + $I_L775_151) * dzint(1 + $I_L774_169, 1 + $I_L775_151)
  775.                      $I_L775_151 = 1 + $I_L775_151
  775.                      if ( $I_L775_151 >= $F_A74 ) exit
  775.                   enddo
  776.                   $F_A75 = np
  776.                   $I_L776_153 = 0
  776. !dir$ ivdep
  776.                   do
  776.                      aotb_m(1 + $I_L774_169, 1 + $I_L776_153) = 5.0e-1 * asolm * hzmask(1 + $I_L774_169, 1 + $I_L776_153) * dzint(1 + $I_L774_169, 1 + $I_L776_153)
  776.                      $I_L776_153 = 1 + $I_L776_153
  776.                      if ( $I_L776_153 >= $F_A75 ) exit
  776.                   enddo
  780.                   $I_L774_169 = 1 + $I_L774_169
  774.                   if ( $I_L774_169 >= m ) exit
  774.                enddo
  774.             endif
  786.             $I_L786_210 = 0
  786.             do
  788.                if ( dmask(1 + $I_L786_210) <= 0 ) then
  786.                   goto 20
  788.                else if ( dmask(1 + $I_L786_210) <= 12 ) then
  789.                   $I_L789_171 = 0
  789.                   do
  790.                      $F_A76 = np
  790.                      if ( np > 0 ) then
  790.                         $SCA_tau_I1 = tau_c(1 + $I_L789_171)
  790.                         $I_L790_155 = 0
  790. !dir$ ivdep
  790.                         do
  790.                            taual(1 + $I_L786_210, 1 + $I_L790_155, 1 + $I_L789_171) = hzmask(1 + $I_L786_210, 1 + $I_L790_155) * $SCA_tau_I1 * aotb_c(1 + $I_L786_210, 1 + $I_L790_155)
  790.                            $I_L790_155 = 1 + $I_L790_155
  790.                            if ( $I_L790_155 >= $F_A76 ) exit
  790.                         enddo
  790.                      endif
  791.                      $F_A77 = np
  791.                      if ( np > 0 ) then
  791.                         $SCA_ssa_I2 = ssa_c(1 + $I_L789_171)
  791.                         $I_L791_157 = 0
  791. !dir$ ivdep
  791.                         do
  791.                            ssaal(1 + $I_L786_210, 1 + $I_L791_157, 1 + $I_L789_171) = $SCA_ssa_I2
  791.                            $I_L791_157 = 1 + $I_L791_157
  791.                            if ( $I_L791_157 >= $F_A77 ) exit
  791.                         enddo
  791.                      endif
  792.                      $F_A78 = np
  792.                      if ( np > 0 ) then
  792.                         $SCA_asym_I3 = asym_c(1 + $I_L789_171)
  792.                         $I_L792_159 = 0
  792. !dir$ ivdep
  792.                         do
  792.                            asyal(1 + $I_L786_210, 1 + $I_L792_159, 1 + $I_L789_171) = $SCA_asym_I3
  792.                            $I_L792_159 = 1 + $I_L792_159
  792.                            if ( $I_L792_159 >= $F_A78 ) exit
  792.                         enddo
  792.                      endif
  793.                      $I_L789_171 = 1 + $I_L789_171
  789.                      if ( $I_L789_171 >= 11 ) exit
  789.                   enddo
  789.                else
  789.    20             continue
  796.                   $I_L796_173 = 0
  796.                   do
  797.                      $F_A79 = np
  797.                      if ( np > 0 ) then
  797.                         $SCA_tau_I4 = tau_m(1 + $I_L796_173)
  797.                         $I_L797_161 = 0
  797. !dir$ ivdep
  797.                         do
  797.                            taual(1 + $I_L786_210, 1 + $I_L797_161, 1 + $I_L796_173) = aotb_m(1 + $I_L786_210, 1 + $I_L797_161) * $SCA_tau_I4 * hzmask(1 + $I_L786_210, 1 + $I_L797_161)
  797.                            $I_L797_161 = 1 + $I_L797_161
  797.                            if ( $I_L797_161 >= $F_A79 ) exit
  797.                         enddo
  797.                      endif
  798.                      $F_A80 = np
  798.                      if ( np > 0 ) then
  798.                         $SCA_ssa_I5 = ssa_m(1 + $I_L796_173)
  798.                         $I_L798_163 = 0
  798. !dir$ ivdep
  798.                         do
  798.                            ssaal(1 + $I_L786_210, 1 + $I_L798_163, 1 + $I_L796_173) = $SCA_ssa_I5
  798.                            $I_L798_163 = 1 + $I_L798_163
  798.                            if ( $I_L798_163 >= $F_A80 ) exit
  798.                         enddo
  798.                      endif
  799.                      $F_A81 = np
  799.                      if ( np > 0 ) then
  799.                         $SCA_asym_I6 = asym_m(1 + $I_L796_173)
  799.                         $I_L799_165 = 0
  799. !dir$ ivdep
  799.                         do
  799.                            asyal(1 + $I_L786_210, 1 + $I_L799_165, 1 + $I_L796_173) = $SCA_asym_I6
  799.                            $I_L799_165 = 1 + $I_L799_165
  799.                            if ( $I_L799_165 >= $F_A81 ) exit
  799.                         enddo
  799.                      endif
  800.                      $I_L796_173 = 1 + $I_L796_173
  796.                      if ( $I_L796_173 >= 11 ) exit
  796.                   enddo
  796.                endif
  802.                $I_L786_210 = 1 + $I_L786_210
  801.                if ( $I_L786_210 >= m ) exit
  801.             enddo
  801.          endif
  806.          call soradcld( m, np, pl(1, 1), ta(1, 1), wa(1, 1), oa(1, 1), rco2, taucld(1, 1, 1), reff(1, 1, 1), fcld(1, 1), ict, icb, taual(1, 1, 1), ssaal(1, 1, 1), asyal(1, 1, 1), cosz(1), rsuvbm(1), rsuvdf(1), rsirbm(1), rsirdf(1), flx(1, 1), flc(1, 1), fdiruv(1), fdifuv(1), fdirpar(1), fdifpar(1), fdirir(1), fdifir(1), fdiruv_c(1), fdifuv_c(1), fdirpar_c(1), fdifpar_c(1), fdirir_c(1), fdifir_c(1), flx_d(1, 1), flx_u(1, 1), flc_d(1, 1), flc_u(1, 1) )
  817.          if ( m > 0 ) then
  817.             $I_L817_93 = 0
  817. !dir$ ivdep
  817.             do
  818.                dscld1(1 + $I_L817_93) = s0 * cosz(1 + $I_L817_93) * flx(1 + $I_L817_93, 1)
  819.                sc1(1 + $I_L817_93) = s0 * cosz(1 + $I_L817_93) * flx(1 + $I_L817_93, 1 + np)
  820.                rvbc1(1 + $I_L817_93) = s0 * cosz(1 + $I_L817_93) * ( fdirpar(1 + $I_L817_93) + fdiruv(1 + $I_L817_93) )
  821.                rvdc1(1 + $I_L817_93) = s0 * cosz(1 + $I_L817_93) * ( fdifpar(1 + $I_L817_93) + fdifuv(1 + $I_L817_93) )
  822.                rnbc1(1 + $I_L817_93) = s0 * cosz(1 + $I_L817_93) * fdirir(1 + $I_L817_93)
  823.                rndc1(1 + $I_L817_93) = s0 * cosz(1 + $I_L817_93) * fdifir(1 + $I_L817_93)
  825.                dsclr1(1 + $I_L817_93) = s0 * cosz(1 + $I_L817_93) * flc(1 + $I_L817_93, 1)
  826.                sl1(1 + $I_L817_93) = s0 * cosz(1 + $I_L817_93) * flc(1 + $I_L817_93, 1 + np)
  827.                rvbl1(1 + $I_L817_93) = s0 * cosz(1 + $I_L817_93) * ( fdirpar_c(1 + $I_L817_93) + fdiruv_c(1 + $I_L817_93) )
  828.                rvdl1(1 + $I_L817_93) = s0 * cosz(1 + $I_L817_93) * ( fdifpar_c(1 + $I_L817_93) + fdifuv_c(1 + $I_L817_93) )
  829.                rnbl1(1 + $I_L817_93) = s0 * cosz(1 + $I_L817_93) * fdirir_c(1 + $I_L817_93)
  830.                rndl1(1 + $I_L817_93) = s0 * cosz(1 + $I_L817_93) * fdifir_c(1 + $I_L817_93)
  831.                $I_L817_93 = 1 + $I_L817_93
  817.                if ( $I_L817_93 >= m ) exit
  817.             enddo
  817.          endif
  836.          if ( np > 0 ) then
  837.             if ( m > 0 ) then
  836.                $I_L836_175 = 0
  836.                if ( np >= 4 ) then
  836.                   $I_L836_219 = 0
  836. !dir$ blocking_size( 1, 1 )
  836.                   do
  837.                      $I_L837_95 = 0
  837. !dir$ ivdep
  837. !dir$ blocking_size( 256, 256 )
  837.                      do
  838.                         $heat_S14 = ( 8.4410000000000007 * s0 * cosz(1 + $I_L837_95) * 1.0/( pl(1 + $I_L837_95, 2 + 4 * $I_L836_219) + -pl(1 + $I_L837_95, 1 + 4 * $I_L836_219) ) )
  839.                         aclr1(1 + $I_L837_95, 1 + 4 * $I_L836_219) = $heat_S14 * ( flc(1 + $I_L837_95, 1 + 4 * $I_L836_219) + -flc(1 + $I_L837_95, 2 + 4 * $I_L836_219) )
  840.                         acld1(1 + $I_L837_95, 1 + 4 * $I_L836_219) = $heat_S14 * ( flx(1 + $I_L837_95, 1 + 4 * $I_L836_219) + -flx(1 + $I_L837_95, 2 + 4 * $I_L836_219) )
  838.                         $heat_S14 = ( 8.4410000000000007 * s0 * cosz(1 + $I_L837_95) * 1.0/( pl(1 + $I_L837_95, 3 + 4 * $I_L836_219) + -pl(1 + $I_L837_95, 2 + 4 * $I_L836_219) ) )
  839.                         aclr1(1 + $I_L837_95, 2 + 4 * $I_L836_219) = $heat_S14 * ( flc(1 + $I_L837_95, 2 + 4 * $I_L836_219) + -flc(1 + $I_L837_95, 3 + 4 * $I_L836_219) )
  840.                         acld1(1 + $I_L837_95, 2 + 4 * $I_L836_219) = $heat_S14 * ( flx(1 + $I_L837_95, 2 + 4 * $I_L836_219) + -flx(1 + $I_L837_95, 3 + 4 * $I_L836_219) )
  838.                         $heat_S14 = ( 8.4410000000000007 * s0 * cosz(1 + $I_L837_95) * 1.0/( pl(1 + $I_L837_95, 4 + 4 * $I_L836_219) + -pl(1 + $I_L837_95, 3 + 4 * $I_L836_219) ) )
  839.                         aclr1(1 + $I_L837_95, 3 + 4 * $I_L836_219) = $heat_S14 * ( flc(1 + $I_L837_95, 3 + 4 * $I_L836_219) + -flc(1 + $I_L837_95, 4 + 4 * $I_L836_219) )
  840.                         acld1(1 + $I_L837_95, 3 + 4 * $I_L836_219) = $heat_S14 * ( flx(1 + $I_L837_95, 3 + 4 * $I_L836_219) + -flx(1 + $I_L837_95, 4 + 4 * $I_L836_219) )
  838.                         $heat_S14 = ( 8.4410000000000007 * s0 * cosz(1 + $I_L837_95) * 1.0/( pl(1 + $I_L837_95, 5 + 4 * $I_L836_219) + -pl(1 + $I_L837_95, 4 + 4 * $I_L836_219) ) )
  839.                         aclr1(1 + $I_L837_95, 4 + 4 * $I_L836_219) = $heat_S14 * ( flc(1 + $I_L837_95, 4 + 4 * $I_L836_219) + -flc(1 + $I_L837_95, 5 + 4 * $I_L836_219) )
  840.                         acld1(1 + $I_L837_95, 4 + 4 * $I_L836_219) = $heat_S14 * ( flx(1 + $I_L837_95, 4 + 4 * $I_L836_219) + -flx(1 + $I_L837_95, 5 + 4 * $I_L836_219) )
  841.                         $I_L837_95 = 1 + $I_L837_95
  837.                         if ( $I_L837_95 >= m ) exit
  837.                      enddo
  842.                      $I_L836_219 = 1 + $I_L836_219
  841.                      if ( $I_L836_219 >= _rsh( np, 2 ) ) exit
  841.                   enddo
  842.                   $I_L836_175 = and( 0xfffffffffffffffcUL, np )
  842.                endif
  836.                if ( $I_L836_175 < np ) then
  836.                   $I_L836_214 = 0
  836. !dir$ blocking_size( 1, 1 )
  836.                   do
  837.                      $I_L837_95 = 0
  837. !dir$ ivdep
  837. !dir$ blocking_size( 256, 256 )
  837.                      do
  838.                         $heat_S14 = ( 8.4410000000000007 * s0 * cosz(1 + $I_L837_95) * 1.0/( pl(1 + $I_L837_95, 2 + $I_L836_175 + $I_L836_214) + -pl(1 + $I_L837_95, 1 + $I_L836_175 + $I_L836_214) ) )
  839.                         aclr1(1 + $I_L837_95, 1 + $I_L836_175 + $I_L836_214) = $heat_S14 * ( flc(1 + $I_L837_95, 1 + $I_L836_175 + $I_L836_214) + -flc(1 + $I_L837_95, 2 + $I_L836_175 + $I_L836_214) )
  840.                         acld1(1 + $I_L837_95, 1 + $I_L836_175 + $I_L836_214) = $heat_S14 * ( flx(1 + $I_L837_95, 1 + $I_L836_175 + $I_L836_214) + -flx(1 + $I_L837_95, 2 + $I_L836_175 + $I_L836_214) )
  841.                         $I_L837_95 = 1 + $I_L837_95
  837.                         if ( $I_L837_95 >= m ) exit
  837.                      enddo
  842.                      $I_L836_214 = 1 + $I_L836_214
  841.                      if ( $I_L836_214 >= np + -$I_L836_175 ) exit
  841.                   enddo
  841.                endif
  841.             endif
  841.          endif
  599.          _free( t$233 )
  599.       else
  724.          $Unit_temp_O0 = nfprt
  724.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'error! icld must be 1 or 4 with Clirad-sw-m ', 0x800600000000L ) ) )
  725.           _substr(t$877,1,4) = ' '
  725.          call _stop(  _substr(t$877,1,1) )
  725.       endif
  844.       return
  844.       end
  844.       
  980.       
  980.       subroutine soradcld( m, np, pl, ta, wa, oa, co2, taucld, reff, fcld, ict, icb, taual, ssaal, asyal, cosz, rsuvbm, rsuvdf, rsirbm, rsirdf, flx, flc, fdiruv, fdifuv, fdirpar, fdifpar, fdirir, fdifir, fdiruv_c, fdifuv_c, fdirpar_c, fdifpar_c, fdirir_c, fdifir_c, flx_d, flx_u, flc_d, flc_u )
  980.       t$18 = m
  980.       t$20 = ( 1 + np )
 1011.       t$323 = _zla( 0, m )
  980.       t$324 = _zla( 0, m )
 1011.       t$325 = _zla( 0, ( 1 + np ) )
  980.       t$326 = _zla( 0, m ) * _zla( 0, ( 1 + np ) )
  980.       t$19 = np
 1012.       t$327 = _zla( 0, np )
  980.       t$328 = _zla( 0, m ) * _zla( 0, np )
  980.       t$329 = _zla( 0, m ) * _zla( 0, np )
  980.       t$330 = 3 * _zla( 0, m ) * _zla( 0, np )
  980.       t$331 = 11 * _zla( 0, m ) * _zla( 0, np )
 1026.       t$334 = 8 * _zla( 0, m )
 1028.       t$335 = 8 * ( 7 + 8 * _zla( 0, m ) ) / 8
 1028.       t$337 = t$335 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1027.       t$338 = 8 * ( 7 + t$335 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1027.       t$340 = t$338 + 8 * _zla( 0, m ) * _zla( 0, np )
 1023.       t$342 = t$338 + 8 * _zla( 0, m ) * _zla( 0, np ) + 4 * _zla( 0, m )
 1027.       t$343 = 8 * ( 7 + t$338 + 8 * _zla( 0, m ) * _zla( 0, np ) + 4 * _zla( 0, m ) ) / 8
 1027.       t$345 = t$343 + 8 * _zla( 0, m ) * _zla( 0, np )
 1027.       t$346 = 8 * ( 7 + t$343 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1027.       t$348 = t$346 + 8 * _zla( 0, m ) * _zla( 0, np )
 1026.       t$349 = 8 * ( 7 + t$346 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1026.       t$351 = t$349 + 8 * _zla( 0, m )
 1028.       t$352 = 8 * ( 7 + t$349 + 8 * _zla( 0, m ) ) / 8
 1028.       t$354 = t$352 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1028.       t$355 = 8 * ( 7 + t$352 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1028.       t$357 = t$355 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1028.       t$358 = 8 * ( 7 + t$355 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1028.       t$360 = t$358 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1027.       t$361 = 8 * ( 7 + t$358 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1027.       t$363 = t$361 + 8 * _zla( 0, m ) * _zla( 0, np )
  980.       t$332 = int( _alloc( t$361 + 8 * _zla( 0, m ) * _zla( 0, np ) ), 8 )
 1026.       t$333 = t$332
 1028.       t$336 = t$335 + t$332
 1027.       t$339 = t$338 + t$332
 1023.       t$341 = t$338 + t$332 + 8 * _zla( 0, m ) * _zla( 0, np )
 1027.       t$344 = t$343 + t$332
 1027.       t$347 = t$346 + t$332
 1026.       t$350 = t$349 + t$332
 1028.       t$353 = t$352 + t$332
 1028.       t$356 = t$355 + t$332
 1028.       t$359 = t$358 + t$332
 1027.       t$362 = t$361 + t$332
 1032.       if ( m > 0 ) then
 1032.          $I_L1032_248 = 0
 1032. !dir$ ivdep
 1032.          do
 1033.             swh(1 + $I_L1032_248, 1) = 0.0
 1034.             so2(1 + $I_L1032_248, 1) = 0.0
 1035.             snt(1 + $I_L1032_248) = 1.0/cosz(1 + $I_L1032_248)
 1036.             $I_L1032_248 = 1 + $I_L1032_248
 1032.             if ( $I_L1032_248 >= m ) exit
 1032.          enddo
 1032.       endif
 1038.       if ( np > 0 ) then
 1039.          if ( m > 0 ) then
 1038.             $I_L1038_278 = 0
 1038.             if ( np >= 2 ) then
 1038.                $I_L1038_292 = 0
 1038. !dir$ blocking_size( 1, 1 )
 1038.                do
 1039.                   $I_L1039_250 = 0
 1039. !dir$ ivdep
 1039. !dir$ blocking_size( 256, 256 )
 1039.                   do
 1043.                      $dp_WR0_R0 = pl(1 + $I_L1039_250, 2 + 2 * $I_L1038_292) + -pl(1 + $I_L1039_250, 1 + 2 * $I_L1038_292)
 1043.                      dp(1 + $I_L1039_250, 1 + 2 * $I_L1038_292) = $dp_WR0_R0
 1048.                      $scal_WR0_R1 = $dp_WR0_R0 * _exp3( log( abs( ( 1.6666666666666668e-3 * ( pl(1 + $I_L1039_250, 1 + 2 * $I_L1038_292) + pl(1 + $I_L1039_250, 2 + 2 * $I_L1038_292) ) ) ) ), ( 1.6666666666666668e-3 * ( pl(1 + $I_L1039_250, 1 + 2 * $I_L1038_292) + pl(1 + $I_L1039_250, 2 + 2 * $I_L1038_292) ) ), 8.0000000000000004e-1 )
 1048.                      scal(1 + $I_L1039_250, 1 + 2 * $I_L1038_292) = $scal_WR0_R1
 1049.                      $wh_WR0_R2 = 9.9999999999999994e-12 + 1.02 * $scal_WR0_R1 * wa(1 + $I_L1039_250, 1 + 2 * $I_L1038_292) * ( 1.0 + 1.3500000000000001e-3 * ( -240.0 + ta(1 + $I_L1039_250, 1 + 2 * $I_L1038_292) ) )
 1049.                      wh(1 + $I_L1039_250, 1 + 2 * $I_L1038_292) = $wh_WR0_R2
 1050.                      swh(1 + $I_L1039_250, 2 + 2 * $I_L1038_292) = $wh_WR0_R2 + swh(1 + $I_L1039_250, 1 + 2 * $I_L1038_292)
 1056.                      oh(1 + $I_L1039_250, 1 + 2 * $I_L1038_292) = 9.9999999999999994e-12 + 476.03399999999999 * $dp_WR0_R0 * oa(1 + $I_L1039_250, 1 + 2 * $I_L1038_292)
 1043.                      $dp_WR0_R0 = pl(1 + $I_L1039_250, 3 + 2 * $I_L1038_292) + -pl(1 + $I_L1039_250, 2 + 2 * $I_L1038_292)
 1043.                      dp(1 + $I_L1039_250, 2 + 2 * $I_L1038_292) = $dp_WR0_R0
 1048.                      $scal_WR0_R1 = $dp_WR0_R0 * _exp3( log( abs( ( 1.6666666666666668e-3 * ( pl(1 + $I_L1039_250, 2 + 2 * $I_L1038_292) + pl(1 + $I_L1039_250, 3 + 2 * $I_L1038_292) ) ) ) ), ( 1.6666666666666668e-3 * ( pl(1 + $I_L1039_250, 2 + 2 * $I_L1038_292) + pl(1 + $I_L1039_250, 3 + 2 * $I_L1038_292) ) ), 8.0000000000000004e-1 )
 1048.                      scal(1 + $I_L1039_250, 2 + 2 * $I_L1038_292) = $scal_WR0_R1
 1049.                      $wh_WR0_R2 = 9.9999999999999994e-12 + 1.02 * $scal_WR0_R1 * wa(1 + $I_L1039_250, 2 + 2 * $I_L1038_292) * ( 1.0 + 1.3500000000000001e-3 * ( -240.0 + ta(1 + $I_L1039_250, 2 + 2 * $I_L1038_292) ) )
 1049.                      wh(1 + $I_L1039_250, 2 + 2 * $I_L1038_292) = $wh_WR0_R2
 1050.                      swh(1 + $I_L1039_250, 3 + 2 * $I_L1038_292) = $wh_WR0_R2 + swh(1 + $I_L1039_250, 2 + 2 * $I_L1038_292)
 1056.                      oh(1 + $I_L1039_250, 2 + 2 * $I_L1038_292) = 9.9999999999999994e-12 + 476.03399999999999 * $dp_WR0_R0 * oa(1 + $I_L1039_250, 2 + 2 * $I_L1038_292)
 1066.                      $I_L1039_250 = 1 + $I_L1039_250
 1039.                      if ( $I_L1039_250 >= m ) exit
 1039.                   enddo
 1067.                   $I_L1038_292 = 1 + $I_L1038_292
 1066.                   if ( $I_L1038_292 >= _rsh( np, 1 ) ) exit
 1066.                enddo
 1067.                $I_L1038_278 = and( 0xfffffffffffffffeUL, np )
 1067.             endif
 1038.             if ( $I_L1038_278 < np ) then
 1039.                $I_L1039_250 = 0
 1039. !dir$ ivdep
 1039. !dir$ blocking_size( 256, 256 )
 1039.                do
 1043.                   $dp_WR0_R0 = pl(1 + $I_L1039_250, 2 + $I_L1038_278) + -pl(1 + $I_L1039_250, 1 + $I_L1038_278)
 1043.                   dp(1 + $I_L1039_250, 1 + $I_L1038_278) = $dp_WR0_R0
 1048.                   $scal_WR0_R1 = $dp_WR0_R0 * _exp3( log( abs( ( 1.6666666666666668e-3 * ( pl(1 + $I_L1039_250, 1 + $I_L1038_278) + pl(1 + $I_L1039_250, 2 + $I_L1038_278) ) ) ) ), ( 1.6666666666666668e-3 * ( pl(1 + $I_L1039_250, 1 + $I_L1038_278) + pl(1 + $I_L1039_250, 2 + $I_L1038_278) ) ), 8.0000000000000004e-1 )
 1048.                   scal(1 + $I_L1039_250, 1 + $I_L1038_278) = $scal_WR0_R1
 1049.                   $wh_WR0_R2 = 9.9999999999999994e-12 + 1.02 * $scal_WR0_R1 * wa(1 + $I_L1039_250, 1 + $I_L1038_278) * ( 1.0 + 1.3500000000000001e-3 * ( -240.0 + ta(1 + $I_L1039_250, 1 + $I_L1038_278) ) )
 1049.                   wh(1 + $I_L1039_250, 1 + $I_L1038_278) = $wh_WR0_R2
 1050.                   swh(1 + $I_L1039_250, 2 + $I_L1038_278) = $wh_WR0_R2 + swh(1 + $I_L1039_250, 1 + $I_L1038_278)
 1056.                   oh(1 + $I_L1039_250, 1 + $I_L1038_278) = 9.9999999999999994e-12 + 476.03399999999999 * $dp_WR0_R0 * oa(1 + $I_L1039_250, 1 + $I_L1038_278)
 1066.                   $I_L1039_250 = 1 + $I_L1039_250
 1039.                   if ( $I_L1039_250 >= m ) exit
 1039.                enddo
 1039.             endif
 1039.          endif
 1039.       endif
 1072.       if ( np >= 0 ) then
 1073.          if ( m > 0 ) then
 1072.             $I_L1072_280 = 0
 1072.             do
 1073.                $I_L1073_252 = 0
 1073. !dir$ ivdep
 1073.                do
 1074.                   flx(1 + $I_L1073_252, 1 + $I_L1072_280) = 0.0
 1075.                   flx_d(1 + $I_L1073_252, 1 + $I_L1072_280) = 0.0
 1076.                   flx_u(1 + $I_L1073_252, 1 + $I_L1072_280) = 0.0
 1077.                   flc(1 + $I_L1073_252, 1 + $I_L1072_280) = 0.0
 1078.                   flc_d(1 + $I_L1073_252, 1 + $I_L1072_280) = 0.0
 1079.                   flc_u(1 + $I_L1073_252, 1 + $I_L1072_280) = 0.0
 1080.                   df(1 + $I_L1073_252, 1 + $I_L1072_280) = 0.0
 1081.                   $I_L1073_252 = 1 + $I_L1073_252
 1073.                   if ( $I_L1073_252 >= m ) exit
 1073.                enddo
 1082.                $I_L1072_280 = 1 + $I_L1072_280
 1081.                if ( $I_L1072_280 >= 1 + np ) exit
 1081.             enddo
 1081.          endif
 1081.       endif
 1085.       call soluvcld( m, np, wh(1, 1), oh(1, 1), dp(1, 1), taucld(1, 1, 1), reff(1, 1, 1), ict, icb, fcld(1, 1), cosz(1), taual(1, 1, 1), ssaal(1, 1, 1), asyal(1, 1, 1), rsuvbm(1), rsuvdf(1), flx(1, 1), flc(1, 1), fdiruv(1), fdifuv(1), fdirpar(1), fdifpar(1), fdiruv_c(1), fdifuv_c(1), fdirpar_c(1), fdifpar_c(1), flx_d(1, 1), flx_u(1, 1), flc_d(1, 1), flc_u(1, 1) )
 1093.       call solircld( m, np, wh(1, 1), dp(1, 1), taucld(1, 1, 1), reff(1, 1, 1), ict, icb, fcld(1, 1), cosz(1), taual(1, 1, 1), ssaal(1, 1, 1), asyal(1, 1, 1), rsirbm(1), rsirdf(1), flx(1, 1), flc(1, 1), fdirir(1), fdifir(1), fdirir_c(1), fdifir_c(1), flx_d(1, 1), flx_u(1, 1), flc_d(1, 1), flc_u(1, 1) )
 1103.       if ( m > 0 ) then
 1103.          $I_L1103_254 = 0
 1103. !dir$ ivdep
 1103.          do
 1104.             cnt(1 + $I_L1103_254) = 165.22 * snt(1 + $I_L1103_254)
 1216.             nctop(1 + $I_L1103_254) = 1 + np
 1105.             $I_L1103_254 = 1 + $I_L1103_254
 1103.             if ( $I_L1103_254 >= m ) exit
 1103.          enddo
 1103.       endif
 1107.       if ( np > 0 ) then
 1108.          if ( m > 0 ) then
 1107.             $I_L1107_282 = 0
 1107.             do
 1108.                $I_L1108_256 = 0
 1108. !dir$ ivdep
 1108.                do
 1109.                   $so2_WR0_R3 = so2(1 + $I_L1108_256, 1 + $I_L1107_282) + cnt(1 + $I_L1108_256) * scal(1 + $I_L1108_256, 1 + $I_L1107_282)
 1109.                   so2(1 + $I_L1108_256, 2 + $I_L1107_282) = $so2_WR0_R3
 1120.                   df(1 + $I_L1108_256, 2 + $I_L1107_282) = 6.3299999999999995e-2 * ( 1.0 + -_expn( -1.45e-4 * _sqrt( $so2_WR0_R3 ) ) )
 1110.                   $I_L1108_256 = 1 + $I_L1108_256
 1108.                   if ( $I_L1108_256 >= m ) exit
 1108.                enddo
 1220.                $I_L1220_270 = 0
 1220. !dir$ ivdep
 1220.                do
 1221.                   if ( fcld(1 + $I_L1220_270, 1 + $I_L1107_282) > 2.0e-2 ) then
 1221.                      if ( np + -nctop(1 + $I_L1220_270) == -1 ) then
 1222.                         nctop(1 + $I_L1220_270) = ( 1 + $I_L1107_282 )
 1222.                      endif
 1222.                   endif
 1224.                   $I_L1220_270 = 1 + $I_L1220_270
 1223.                   if ( $I_L1220_270 >= m ) exit
 1223.                enddo
 1111.                $I_L1107_282 = 1 + $I_L1107_282
 1110.                if ( $I_L1107_282 >= np ) exit
 1110.             enddo
 1110.          endif
 1110.       endif
 1126.       if ( m > 0 ) then
 1126.          $I_L1126_258 = 0
 1126. !dir$ ivdep
 1126.          do
 1127.             cnt(1 + $I_L1126_258) = co2 * snt(1 + $I_L1126_258)
 1128.             $I_L1126_258 = 1 + $I_L1126_258
 1126.             if ( $I_L1126_258 >= m ) exit
 1126.          enddo
 1126.       endif
 1134.       if ( np > 0 ) then
 1135.          if ( m > 0 ) then
 1134.             $I_L1134_284 = 0
 1134.             if ( np >= 2 ) then
 1134.                $I_L1134_294 = 0
 1134. !dir$ blocking_size( 1, 1 )
 1134.                do
 1135.                   $I_L1135_260 = 0
 1135. !dir$ ivdep
 1135. !dir$ blocking_size( 256, 256 )
 1135.                   do
 1136.                      $x_S17 = 789.0 * cnt(1 + $I_L1135_260)
 1137.                      $so2_WR0_R4 = 9.9999999999999994e-12 + so2(1 + $I_L1135_260, 1 + 2 * $I_L1134_294) + $x_S17 * scal(1 + $I_L1135_260, 1 + 2 * $I_L1134_294)
 1137.                      so2(1 + $I_L1135_260, 2 + 2 * $I_L1134_294) = $so2_WR0_R4
 1153.                      $Flat_S20 = log10( $so2_WR0_R4 )
 1153.                      swu(1 + $I_L1135_260, 2 + 2 * $I_L1134_294) = $Flat_S20
 1154.                      $Flat_S21 = log10( snt(1 + $I_L1135_260) * swh(1 + $I_L1135_260, 2 + 2 * $I_L1134_294) )
 1161.                      $ic_S26 = min( 43, max( 2, int( 1.0 + ( 6.666666666666667 * ( 3.0750000000000002 + $Flat_S20 ) ) ) ) )
 1161.                      $iw_S27 = min( 37, max( 2, int( 1.0 + ( 6.666666666666667 * ( 4.0750000000000002 + $Flat_S21 ) ) ) ) )
 1161.                      $x2_S28 = cah(-1 + $ic_S26, -1 + ( min( 37, max( 2, int( 1.0 + ( 6.666666666666667 * ( 4.0750000000000002 + $Flat_S21 ) ) ) ) ) )) + ( 6.666666666666667 * ( cah(-1 + $ic_S26, min( 37, max( 2, int( 1.0 + ( 6.666666666666667 * ( 4.0750000000000002 + $Flat_S21 ) ) ) ) )) + -cah(-1 + $ic_S26, -1 + ( min( 37, max( 2, int( 1.0 + ( 6.666666666666667 * ( 4.0750000000000002 + $Flat_S21 ) ) ) ) ) )) ) ) * ( 4.0 + $Flat_S21 + -1.4999999999999999e-1 * real( -2 + ( min( 37, max( 2, int( 1.0 + ( 6.666666666666667 * ( 4.0750000000000002 + $Flat_S21 ) ) ) ) ) ) ) )
 1161.                      $y2_S29 = $x2_S28 + ( 6.666666666666667 * ( cah(min( 43, max( 2, int( 1.0 + ( 6.666666666666667 * ( 3.0750000000000002 + $Flat_S20 ) ) ) ) ), -1 + $iw_S27) + -cah(-1 + ( min( 43, max( 2, int( 1.0 + ( 6.666666666666667 * ( 3.0750000000000002 + $Flat_S20 ) ) ) ) ) ), -1 + $iw_S27) ) ) * ( 3.0 + $Flat_S20 + -1.4999999999999999e-1 * real( -2 + ( min( 43, max( 2, int( 1.0 + ( 6.666666666666667 * ( 3.0750000000000002 + $Flat_S20 ) ) ) ) ) ) ) )
 1187.                      $Flat_S32 = log10( pl(1 + $I_L1135_260, 2 + 2 * $I_L1134_294) )
 1187.                      swh(1 + $I_L1135_260, 2 + 2 * $I_L1134_294) = $Flat_S32
 1136.                      $x_S17 = 789.0 * cnt(1 + $I_L1135_260)
 1137.                      $so2_WR0_R4 = 9.9999999999999994e-12 + $so2_WR0_R4 + $x_S17 * scal(1 + $I_L1135_260, 2 + 2 * $I_L1134_294)
 1137.                      so2(1 + $I_L1135_260, 3 + 2 * $I_L1134_294) = $so2_WR0_R4
 1153.                      $Flat_S20 = log10( $so2_WR0_R4 )
 1153.                      swu(1 + $I_L1135_260, 3 + 2 * $I_L1134_294) = $Flat_S20
 1154.                      $Flat_S21 = log10( snt(1 + $I_L1135_260) * swh(1 + $I_L1135_260, 3 + 2 * $I_L1134_294) )
 1161.                      $ic_S26 = min( 43, max( 2, int( 1.0 + ( 6.666666666666667 * ( 3.0750000000000002 + $Flat_S20 ) ) ) ) )
 1161.                      $iw_S27 = min( 37, max( 2, int( 1.0 + ( 6.666666666666667 * ( 4.0750000000000002 + $Flat_S21 ) ) ) ) )
 1161.                      $x2_S28 = cah(-1 + $ic_S26, -1 + ( min( 37, max( 2, int( 1.0 + ( 6.666666666666667 * ( 4.0750000000000002 + $Flat_S21 ) ) ) ) ) )) + ( 6.666666666666667 * ( cah(-1 + $ic_S26, min( 37, max( 2, int( 1.0 + ( 6.666666666666667 * ( 4.0750000000000002 + $Flat_S21 ) ) ) ) )) + -cah(-1 + $ic_S26, -1 + ( min( 37, max( 2, int( 1.0 + ( 6.666666666666667 * ( 4.0750000000000002 + $Flat_S21 ) ) ) ) ) )) ) ) * ( 4.0 + $Flat_S21 + -1.4999999999999999e-1 * real( -2 + ( min( 37, max( 2, int( 1.0 + ( 6.666666666666667 * ( 4.0750000000000002 + $Flat_S21 ) ) ) ) ) ) ) )
 1161.                      df(1 + $I_L1135_260, 2 + 2 * $I_L1134_294) = $y2_S29 + df(1 + $I_L1135_260, 2 + 2 * $I_L1134_294)
 1161.                      $y2_S29 = $x2_S28 + ( 6.666666666666667 * ( cah(min( 43, max( 2, int( 1.0 + ( 6.666666666666667 * ( 3.0750000000000002 + $Flat_S20 ) ) ) ) ), -1 + $iw_S27) + -cah(-1 + ( min( 43, max( 2, int( 1.0 + ( 6.666666666666667 * ( 3.0750000000000002 + $Flat_S20 ) ) ) ) ) ), -1 + $iw_S27) ) ) * ( 3.0 + $Flat_S20 + -1.4999999999999999e-1 * real( -2 + ( min( 43, max( 2, int( 1.0 + ( 6.666666666666667 * ( 3.0750000000000002 + $Flat_S20 ) ) ) ) ) ) ) )
 1187.                      $Flat_S32 = log10( pl(1 + $I_L1135_260, 3 + 2 * $I_L1134_294) )
 1187.                      swh(1 + $I_L1135_260, 3 + 2 * $I_L1134_294) = $Flat_S32
 1161.                      df(1 + $I_L1135_260, 3 + 2 * $I_L1134_294) = $y2_S29 + df(1 + $I_L1135_260, 3 + 2 * $I_L1134_294)
 1138.                      $I_L1135_260 = 1 + $I_L1135_260
 1135.                      if ( $I_L1135_260 >= m ) exit
 1135.                   enddo
 1139.                   $I_L1134_294 = 1 + $I_L1134_294
 1138.                   if ( $I_L1134_294 >= _rsh( np, 1 ) ) exit
 1138.                enddo
 1139.                $I_L1134_284 = and( 0xfffffffffffffffeUL, np )
 1139.             endif
 1134.             if ( $I_L1134_284 < np ) then
 1135.                $I_L1135_260 = 0
 1135. !dir$ ivdep
 1135. !dir$ blocking_size( 256, 256 )
 1135.                do
 1136.                   $x_S17 = 789.0 * cnt(1 + $I_L1135_260)
 1137.                   $so2_WR0_R4 = 9.9999999999999994e-12 + so2(1 + $I_L1135_260, 1 + $I_L1134_284) + $x_S17 * scal(1 + $I_L1135_260, 1 + $I_L1134_284)
 1137.                   so2(1 + $I_L1135_260, 2 + $I_L1134_284) = $so2_WR0_R4
 1153.                   $Flat_S20 = log10( $so2_WR0_R4 )
 1153.                   swu(1 + $I_L1135_260, 2 + $I_L1134_284) = $Flat_S20
 1154.                   $Flat_S21 = log10( snt(1 + $I_L1135_260) * swh(1 + $I_L1135_260, 2 + $I_L1134_284) )
 1161.                   $ic_S26 = min( 43, max( 2, int( 1.0 + ( 6.666666666666667 * ( 3.0750000000000002 + $Flat_S20 ) ) ) ) )
 1161.                   $iw_S27 = min( 37, max( 2, int( 1.0 + ( 6.666666666666667 * ( 4.0750000000000002 + $Flat_S21 ) ) ) ) )
 1161.                   $x2_S28 = cah(-1 + $ic_S26, -1 + ( min( 37, max( 2, int( 1.0 + ( 6.666666666666667 * ( 4.0750000000000002 + $Flat_S21 ) ) ) ) ) )) + ( 6.666666666666667 * ( cah(-1 + $ic_S26, min( 37, max( 2, int( 1.0 + ( 6.666666666666667 * ( 4.0750000000000002 + $Flat_S21 ) ) ) ) )) + -cah(-1 + $ic_S26, -1 + ( min( 37, max( 2, int( 1.0 + ( 6.666666666666667 * ( 4.0750000000000002 + $Flat_S21 ) ) ) ) ) )) ) ) * ( 4.0 + $Flat_S21 + -1.4999999999999999e-1 * real( -2 + ( min( 37, max( 2, int( 1.0 + ( 6.666666666666667 * ( 4.0750000000000002 + $Flat_S21 ) ) ) ) ) ) ) )
 1161.                   $y2_S29 = $x2_S28 + ( 6.666666666666667 * ( cah(min( 43, max( 2, int( 1.0 + ( 6.666666666666667 * ( 3.0750000000000002 + $Flat_S20 ) ) ) ) ), -1 + $iw_S27) + -cah(-1 + ( min( 43, max( 2, int( 1.0 + ( 6.666666666666667 * ( 3.0750000000000002 + $Flat_S20 ) ) ) ) ) ), -1 + $iw_S27) ) ) * ( 3.0 + $Flat_S20 + -1.4999999999999999e-1 * real( -2 + ( min( 43, max( 2, int( 1.0 + ( 6.666666666666667 * ( 3.0750000000000002 + $Flat_S20 ) ) ) ) ) ) ) )
 1187.                   $Flat_S32 = log10( pl(1 + $I_L1135_260, 2 + $I_L1134_284) )
 1187.                   swh(1 + $I_L1135_260, 2 + $I_L1134_284) = $Flat_S32
 1161.                   df(1 + $I_L1135_260, 2 + $I_L1134_284) = $y2_S29 + df(1 + $I_L1135_260, 2 + $I_L1134_284)
 1138.                   $I_L1135_260 = 1 + $I_L1135_260
 1135.                   if ( $I_L1135_260 >= m ) exit
 1135.                enddo
 1135.             endif
 1135.          endif
 1135.       endif
 1161.       t$104 = m
 1161.       t$105 = ( 1 + np )
 1161.       t$621 = max( 0, m )
 1161.       t$622 = max( 0, m )
 1161.       t$623 = max( 0, ( 1 + np ) )
 1161.       t$624 = max( 0, m ) * max( 0, ( 1 + np ) )
 1161.       t$106 = 43
 1161.       t$107 = 37
 1161.       t$625 = 43
 1161.       t$626 = 43
 1161.       t$627 = 37
 1161.       t$628 = 1591
 1171.       if ( m > 0 ) then
 1171.          $I_L1171_262 = 0
 1171. !dir$ ivdep
 1171.          do
 1172.             swu(1 + $I_L1171_262, 1) = co2 * snt(1 + $I_L1171_262)
 1173.             $I_L1171_262 = 1 + $I_L1171_262
 1171.             if ( $I_L1171_262 >= m ) exit
 1171.          enddo
 1171.       endif
 1177.       if ( np > 0 ) then
 1178.          if ( m > 0 ) then
 1177.             $I_L1177_286 = 0
 1177. !dir$ blocking_size( 1, 1 )
 1177.             do
 1178.                $I_L1178_264 = 0
 1178. !dir$ ivdep
 1178. !dir$ blocking_size( 256, 256 )
 1178.                do
 1179.                   $swu_WR0_R7 = swu(1 + $I_L1178_264, 1)
 1179.                   swu(1 + $I_L1178_264, 2 + $I_L1177_286) = $swu_WR0_R7
 1194.                   $wlog_S38 = swh(1 + $I_L1178_264, 2 + $I_L1177_286)
 1194.                   $iw_S41 = min( 101, ( max( 2, int( 1.0 + ( 20.0 * ( 2.0249999999999999 + $wlog_S38 ) ) ) ) ) )
 1194.                   $ic_S40 = min( 62, ( max( 2, int( 1.0 + ( 20000.0 * ( -2.2499999999999999e-4 + $swu_WR0_R7 ) ) ) ) ) )
 1194.                   $x2_S42 = coa(-1 + $ic_S40, -1 + ( min( 101, ( max( 2, int( 1.0 + ( 20.0 * ( 2.0249999999999999 + $wlog_S38 ) ) ) ) ) ) )) + ( 20.0 * ( coa(-1 + $ic_S40, min( 101, ( max( 2, int( 1.0 + ( 20.0 * ( 2.0249999999999999 + $wlog_S38 ) ) ) ) ) )) + -coa(-1 + $ic_S40, -1 + ( min( 101, ( max( 2, int( 1.0 + ( 20.0 * ( 2.0249999999999999 + $wlog_S38 ) ) ) ) ) ) )) ) ) * ( 2.0 + $wlog_S38 + -5.0000000000000003e-2 * real( -2 + ( min( 101, ( max( 2, int( 1.0 + ( 20.0 * ( 2.0249999999999999 + $wlog_S38 ) ) ) ) ) ) ) ) )
 1194.                   $y2_S43 = $x2_S42 + ( -2.5000000000000001e-4 + $swu_WR0_R7 + -5.0000000000000002e-5 * real( -2 + ( min( 62, ( max( 2, int( 1.0 + ( 20000.0 * ( -2.2499999999999999e-4 + $swu_WR0_R7 ) ) ) ) ) ) ) ) ) * ( 20000.0 * ( coa(min( 62, ( max( 2, int( 1.0 + ( 20000.0 * ( -2.2499999999999999e-4 + $swu_WR0_R7 ) ) ) ) ) ), -1 + $iw_S41) + -coa(-1 + ( min( 62, ( max( 2, int( 1.0 + ( 20000.0 * ( -2.2499999999999999e-4 + $swu_WR0_R7 ) ) ) ) ) ) ), -1 + $iw_S41) ) )
 1194.                   df(1 + $I_L1178_264, 2 + $I_L1177_286) = $y2_S43 + df(1 + $I_L1178_264, 2 + $I_L1177_286)
 1180.                   $I_L1178_264 = 1 + $I_L1178_264
 1178.                   if ( $I_L1178_264 >= m ) exit
 1178.                enddo
 1181.                $I_L1177_286 = 1 + $I_L1177_286
 1180.                if ( $I_L1177_286 >= np ) exit
 1180.             enddo
 1180.          endif
 1180.       endif
 1194.       t$104 = m
 1194.       t$105 = ( 1 + np )
 1194.       t$621 = max( 0, m )
 1194.       t$622 = max( 0, m )
 1194.       t$623 = max( 0, ( 1 + np ) )
 1194.       t$624 = max( 0, m ) * max( 0, ( 1 + np ) )
 1194.       t$106 = 62
 1194.       t$107 = 101
 1194.       t$625 = 62
 1194.       t$626 = 62
 1194.       t$627 = 101
 1194.       t$628 = 6262
 1199.       if ( np >= 0 ) then
 1200.          if ( m > 0 ) then
 1199.             $I_L1199_288 = 0
 1199.             do
 1200.                $I_L1200_266 = 0
 1200. !dir$ ivdep
 1200.                do
 1202.                   flc_d(1 + $I_L1200_266, 1 + $I_L1199_288) = flc_d(1 + $I_L1200_266, 1 + $I_L1199_288) + -df(1 + $I_L1200_266, 1 + $I_L1199_288)
 1201.                   flc(1 + $I_L1200_266, 1 + $I_L1199_288) = flc(1 + $I_L1200_266, 1 + $I_L1199_288) + -df(1 + $I_L1200_266, 1 + $I_L1199_288)
 1203.                   $I_L1200_266 = 1 + $I_L1200_266
 1200.                   if ( $I_L1200_266 >= m ) exit
 1200.                enddo
 1204.                $I_L1199_288 = 1 + $I_L1199_288
 1203.                if ( $I_L1199_288 >= 1 + np ) exit
 1203.             enddo
 1203.          endif
 1203.       endif
 1208.       if ( m > 0 ) then
 1208.          $I_L1208_268 = 0
 1208. !dir$ ivdep
 1208.          do
 1210.             fdirir_c(1 + $I_L1208_268) = max( 0.0, fdirir_c(1 + $I_L1208_268) + -df(1 + $I_L1208_268, 1 + np) )
 1211.             $I_L1208_268 = 1 + $I_L1208_268
 1208.             if ( $I_L1208_268 >= m ) exit
 1208.          enddo
 1227.          $I_L1227_290 = 0
 1227.          do
 1230.             $ntop_S48 = nctop(1 + $I_L1227_290)
 1233.             if ( $ntop_S48 > 0 ) then
 1233.                $I_L1233_272 = 0
 1233. !dir$ ivdep
 1233.                do
 1235.                   flx_d(1 + $I_L1227_290, 1 + $I_L1233_272) = flx_d(1 + $I_L1227_290, 1 + $I_L1233_272) + -df(1 + $I_L1227_290, 1 + $I_L1233_272)
 1234.                   flx(1 + $I_L1227_290, 1 + $I_L1233_272) = flx(1 + $I_L1227_290, 1 + $I_L1233_272) + -df(1 + $I_L1227_290, 1 + $I_L1233_272)
 1236.                   $I_L1233_272 = 1 + $I_L1233_272
 1233.                   if ( $I_L1233_272 >= $ntop_S48 ) exit
 1233.                enddo
 1233.             endif
 1238.             if ( $ntop_S48 < 1 + np ) then
 1239.                if ( np + -$ntop_S48 >= 0 ) then
 1239.                   $I_L1239_274 = 0
 1239. !dir$ ivdep
 1239.                   do
 1240.                      $df_WR0_R8 = df(1 + $I_L1227_290, 1 + $ntop_S48 + $I_L1239_274) * ( flx(1 + $I_L1227_290, 1 + $ntop_S48 + $I_L1239_274) * 1.0/flc(1 + $I_L1227_290, 1 + $ntop_S48 + $I_L1239_274) )
 1240.                      df(1 + $I_L1227_290, 1 + $ntop_S48 + $I_L1239_274) = $df_WR0_R8
 1242.                      flx_d(1 + $I_L1227_290, 1 + $ntop_S48 + $I_L1239_274) = flx_d(1 + $I_L1227_290, 1 + $ntop_S48 + $I_L1239_274) + -$df_WR0_R8
 1241.                      flx(1 + $I_L1227_290, 1 + $ntop_S48 + $I_L1239_274) = flx(1 + $I_L1227_290, 1 + $ntop_S48 + $I_L1239_274) + -$df_WR0_R8
 1243.                      $I_L1239_274 = 1 + $I_L1239_274
 1239.                      if ( $I_L1239_274 >= 1 + np + -$ntop_S48 ) exit
 1239.                   enddo
 1239.                endif
 1239.             endif
 1245.             $I_L1227_290 = 1 + $I_L1227_290
 1244.             if ( $I_L1227_290 >= m ) exit
 1244.          enddo
 1247.          $I_L1247_276 = 0
 1247. !dir$ ivdep
 1247.          do
 1249.             fdirir(1 + $I_L1247_276) = max( 0.0, fdirir(1 + $I_L1247_276) + -df(1 + $I_L1247_276, 1 + np) )
 1250.             $I_L1247_276 = 1 + $I_L1247_276
 1247.             if ( $I_L1247_276 >= m ) exit
 1247.          enddo
 1247.       endif
  980.       _free( t$332 )
 1252.       return
 1252.       end
 1252.       
 1316.       
 1316.       subroutine solircld( m, np, wh, dp, taucld, reff, ict, icb, fcld, cosz, taual, ssaal, asyal, rsirbm, rsirdf, flx, flc, fdirir, fdifir, fdirir_c, fdifir_c, flx_d, flx_u, flc_d, flc_u )
 1316.       t$76 = m
 1316.       t$77 = np
 1403.       t$364 = _zla( 0, m )
 1316.       t$365 = _zla( 0, m )
 1403.       t$366 = _zla( 0, np )
 1316.       t$367 = _zla( 0, m ) * _zla( 0, np )
 1316.       t$368 = _zla( 0, m ) * _zla( 0, np )
 1316.       t$369 = 3 * _zla( 0, m ) * _zla( 0, np )
 1316.       t$370 = 11 * _zla( 0, m ) * _zla( 0, np )
 1316.       t$78 = ( 1 + np )
 1407.       t$371 = _zla( 0, ( 1 + np ) )
 1316.       t$372 = _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1418.       t$375 = 8 * _zla( 0, m ) * _zla( 0, np )
 1416.       t$376 = 8 * ( 7 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1416.       t$378 = t$376 + 8 * _zla( 0, m )
 1419.       t$379 = 8 * ( 7 + t$376 + 8 * _zla( 0, m ) ) / 8
 1419.       t$381 = t$379 + 8 * _zla( 0, m ) * _zla( 0, np )
 1419.       t$382 = 8 * ( 7 + t$379 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1419.       t$384 = t$382 + 8 * _zla( 0, m ) * _zla( 0, np )
 1418.       t$385 = 8 * ( 7 + t$382 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1418.       t$387 = t$385 + 8 * _zla( 0, m ) * _zla( 0, np )
 1316.       t$388 = 3 * _zla( 0, m )
 1417.       t$389 = 8 * ( 7 + t$385 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1417.       t$391 = t$389 + 24 * _zla( 0, m )
 1416.       t$392 = 8 * ( 7 + t$389 + 24 * _zla( 0, m ) ) / 8
 1416.       t$394 = t$392 + 8 * _zla( 0, m )
 1420.       t$395 = 8 * ( 7 + t$392 + 8 * _zla( 0, m ) ) / 8
 1420.       t$397 = t$395 + 8 * _zla( 0, m ) * _zla( 0, np )
 1421.       t$398 = 8 * ( 7 + t$395 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1421.       t$400 = t$398 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1421.       t$401 = 8 * ( 7 + t$398 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1421.       t$403 = t$401 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1421.       t$404 = 8 * ( 7 + t$401 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1421.       t$406 = t$404 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1421.       t$407 = 8 * ( 7 + t$404 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1421.       t$409 = t$407 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1421.       t$410 = 8 * ( 7 + t$407 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1421.       t$412 = t$410 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1421.       t$413 = 8 * ( 7 + t$410 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1421.       t$415 = t$413 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1416.       t$416 = 8 * ( 7 + t$413 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1416.       t$418 = t$416 + 8 * _zla( 0, m )
 1416.       t$419 = 8 * ( 7 + t$416 + 8 * _zla( 0, m ) ) / 8
 1416.       t$421 = t$419 + 8 * _zla( 0, m )
 1416.       t$422 = 8 * ( 7 + t$419 + 8 * _zla( 0, m ) ) / 8
 1416.       t$424 = t$422 + 8 * _zla( 0, m )
 1416.       t$425 = 8 * ( 7 + t$422 + 8 * _zla( 0, m ) ) / 8
 1416.       t$427 = t$425 + 8 * _zla( 0, m )
 1316.       t$428 = _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1316.       t$429 = 2 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1422.       t$430 = 8 * ( 7 + t$425 + 8 * _zla( 0, m ) ) / 8
 1422.       t$432 = t$430 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1420.       t$433 = 8 * ( 7 + t$430 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1420.       t$435 = t$433 + 8 * _zla( 0, m ) * _zla( 0, np )
 1422.       t$436 = 8 * ( 7 + t$433 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1422.       t$438 = t$436 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1420.       t$439 = 8 * ( 7 + t$436 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1420.       t$441 = t$439 + 8 * _zla( 0, m ) * _zla( 0, np )
 1418.       t$442 = 8 * ( 7 + t$439 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1418.       t$444 = t$442 + 8 * _zla( 0, m ) * _zla( 0, np )
 1416.       t$445 = 8 * ( 7 + t$442 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1416.       t$447 = t$445 + 8 * _zla( 0, m )
 1419.       t$448 = 8 * ( 7 + t$445 + 8 * _zla( 0, m ) ) / 8
 1419.       t$450 = t$448 + 8 * _zla( 0, m ) * _zla( 0, np )
 1419.       t$451 = 8 * ( 7 + t$448 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1419.       t$453 = t$451 + 8 * _zla( 0, m ) * _zla( 0, np )
 1418.       t$454 = 8 * ( 7 + t$451 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1418.       t$456 = t$454 + 8 * _zla( 0, m ) * _zla( 0, np )
 1418.       t$457 = 8 * ( 7 + t$454 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1418.       t$459 = t$457 + 8 * _zla( 0, m ) * _zla( 0, np )
 1418.       t$460 = 8 * ( 7 + t$457 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1418.       t$462 = t$460 + 8 * _zla( 0, m ) * _zla( 0, np )
 1419.       t$463 = 8 * ( 7 + t$460 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1419.       t$465 = t$463 + 8 * _zla( 0, m ) * _zla( 0, np )
 1419.       t$466 = 8 * ( 7 + t$463 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1419.       t$468 = t$466 + 8 * _zla( 0, m ) * _zla( 0, np )
 1418.       t$469 = 8 * ( 7 + t$466 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1418.       t$471 = t$469 + 8 * _zla( 0, m ) * _zla( 0, np )
 1422.       t$472 = 8 * ( 7 + t$469 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1422.       t$474 = t$472 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1420.       t$475 = 8 * ( 7 + t$472 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1420.       t$477 = t$475 + 8 * _zla( 0, m ) * _zla( 0, np )
 1422.       t$478 = 8 * ( 7 + t$475 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1422.       t$480 = t$478 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1420.       t$481 = 8 * ( 7 + t$478 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1420.       t$483 = t$481 + 8 * _zla( 0, m ) * _zla( 0, np )
 1422.       t$484 = 8 * ( 7 + t$481 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1422.       t$486 = t$484 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1420.       t$487 = 8 * ( 7 + t$484 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1420.       t$489 = t$487 + 8 * _zla( 0, m ) * _zla( 0, np )
 1316.       t$373 = int( _alloc( t$487 + 8 * _zla( 0, m ) * _zla( 0, np ) ), 8 )
 1418.       t$374 = t$373
 1416.       t$377 = t$376 + t$373
 1419.       t$380 = t$379 + t$373
 1419.       t$383 = t$382 + t$373
 1418.       t$386 = t$385 + t$373
 1417.       t$390 = t$389 + t$373
 1416.       t$393 = t$392 + t$373
 1420.       t$396 = t$395 + t$373
 1421.       t$399 = t$398 + t$373
 1421.       t$402 = t$401 + t$373
 1421.       t$405 = t$404 + t$373
 1421.       t$408 = t$407 + t$373
 1421.       t$411 = t$410 + t$373
 1421.       t$414 = t$413 + t$373
 1416.       t$417 = t$416 + t$373
 1416.       t$420 = t$419 + t$373
 1416.       t$423 = t$422 + t$373
 1416.       t$426 = t$425 + t$373
 1422.       t$431 = t$430 + t$373
 1420.       t$434 = t$433 + t$373
 1422.       t$437 = t$436 + t$373
 1420.       t$440 = t$439 + t$373
 1418.       t$443 = t$442 + t$373
 1416.       t$446 = t$445 + t$373
 1419.       t$449 = t$448 + t$373
 1419.       t$452 = t$451 + t$373
 1418.       t$455 = t$454 + t$373
 1418.       t$458 = t$457 + t$373
 1418.       t$461 = t$460 + t$373
 1419.       t$464 = t$463 + t$373
 1419.       t$467 = t$466 + t$373
 1418.       t$470 = t$469 + t$373
 1422.       t$473 = t$472 + t$373
 1420.       t$476 = t$475 + t$373
 1422.       t$479 = t$478 + t$373
 1420.       t$482 = t$481 + t$373
 1422.       t$485 = t$484 + t$373
 1420.       t$488 = t$487 + t$373
 1434.       $F_A33 = m
 1434.       if ( m > 0 ) then
 1434.          $I_L1434_180 = 0
 1434. !dir$ ivdep
 1434.          do
 1434.             dsm(1 + $I_L1434_180) = 6.0199999999999998e-1
 1434.             $I_L1434_180 = 1 + $I_L1434_180
 1434.             if ( $I_L1434_180 >= $F_A33 ) exit
 1434.          enddo
 1434.       endif
 1435.       $F_A34 = m
 1435.       if ( m > 0 ) then
 1435.          $I_L1435_182 = 0
 1435. !dir$ ivdep
 1435.          do
 1435.             fdirir(1 + $I_L1435_182) = 0.0
 1435.             $I_L1435_182 = 1 + $I_L1435_182
 1435.             if ( $I_L1435_182 >= $F_A34 ) exit
 1435.          enddo
 1435.       endif
 1436.       $F_A35 = m
 1436.       if ( m > 0 ) then
 1436.          $I_L1436_184 = 0
 1436. !dir$ ivdep
 1436.          do
 1436.             fdifir(1 + $I_L1436_184) = 0.0
 1436.             $I_L1436_184 = 1 + $I_L1436_184
 1436.             if ( $I_L1436_184 >= $F_A35 ) exit
 1436.          enddo
 1436.       endif
 1437.       $F_A36 = m
 1437.       if ( m > 0 ) then
 1437.          $I_L1437_186 = 0
 1437. !dir$ ivdep
 1437.          do
 1437.             fdirir_c(1 + $I_L1437_186) = 0.0
 1437.             $I_L1437_186 = 1 + $I_L1437_186
 1437.             if ( $I_L1437_186 >= $F_A36 ) exit
 1437.          enddo
 1437.       endif
 1438.       $F_A37 = m
 1438.       if ( m > 0 ) then
 1438.          $I_L1438_188 = 0
 1438. !dir$ ivdep
 1438.          do
 1438.             fdifir_c(1 + $I_L1438_188) = 0.0
 1438.             $I_L1438_188 = 1 + $I_L1438_188
 1438.             if ( $I_L1438_188 >= $F_A37 ) exit
 1438.          enddo
 1438.       endif
 1439.       $F_A38 = m
 1439.       if ( m > 0 ) then
 1439.          $I_L1439_190 = 0
 1439. !dir$ ivdep
 1439.          do
 1439.             rr(1 + $I_L1439_190, 1 + np, 1) = rsirbm(1 + $I_L1439_190)
 1439.             $I_L1439_190 = 1 + $I_L1439_190
 1439.             if ( $I_L1439_190 >= $F_A38 ) exit
 1439.          enddo
 1439.       endif
 1440.       $F_A39 = m
 1440.       if ( m > 0 ) then
 1440.          $I_L1440_192 = 0
 1440. !dir$ ivdep
 1440.          do
 1440.             rr(1 + $I_L1440_192, 1 + np, 2) = rsirbm(1 + $I_L1440_192)
 1440.             $I_L1440_192 = 1 + $I_L1440_192
 1440.             if ( $I_L1440_192 >= $F_A39 ) exit
 1440.          enddo
 1440.       endif
 1441.       $F_A40 = m
 1441.       if ( m > 0 ) then
 1441.          $I_L1441_194 = 0
 1441. !dir$ ivdep
 1441.          do
 1441.             rs(1 + $I_L1441_194, 1 + np, 1) = rsirdf(1 + $I_L1441_194)
 1441.             $I_L1441_194 = 1 + $I_L1441_194
 1441.             if ( $I_L1441_194 >= $F_A40 ) exit
 1441.          enddo
 1441.       endif
 1442.       $F_A41 = m
 1442.       if ( m > 0 ) then
 1442.          $I_L1442_196 = 0
 1442. !dir$ ivdep
 1442.          do
 1442.             rs(1 + $I_L1442_196, 1 + np, 2) = rsirdf(1 + $I_L1442_196)
 1442.             $I_L1442_196 = 1 + $I_L1442_196
 1442.             if ( $I_L1442_196 >= $F_A41 ) exit
 1442.          enddo
 1442.       endif
 1443.       $F_A42 = 1 + np
 1443.       $F_A43 = m
 1443.       if ( and( -$F_A43, -$F_A42 ) < 0 ) then
 1443.          $I_L1443_230 = 0
 1443.          do
 1443.             $I_L1443_220 = 0
 1443.             do
 1443.                $I_L1443_198 = 0
 1443. !dir$ ivdep
 1443.                do
 1443.                   td(1 + $I_L1443_198, 1 + $I_L1443_220, 1 + $I_L1443_230) = 0.0
 1443.                   $I_L1443_198 = 1 + $I_L1443_198
 1443.                   if ( $I_L1443_198 >= $F_A43 ) exit
 1443.                enddo
 1443.                $I_L1443_220 = 1 + $I_L1443_220
 1443.                if ( $I_L1443_220 >= $F_A42 ) exit
 1443.             enddo
 1443.             $I_L1443_230 = 1 + $I_L1443_230
 1443.             if ( $I_L1443_230 >= 2 ) exit
 1443.          enddo
 1443.       endif
 1444.       $F_A44 = 1 + np
 1444.       $F_A45 = m
 1444.       if ( and( -$F_A45, -$F_A44 ) < 0 ) then
 1444.          $I_L1444_232 = 0
 1444.          do
 1444.             $I_L1444_222 = 0
 1444.             do
 1444.                $I_L1444_200 = 0
 1444. !dir$ ivdep
 1444.                do
 1444.                   tt(1 + $I_L1444_200, 1 + $I_L1444_222, 1 + $I_L1444_232) = 0.0
 1444.                   $I_L1444_200 = 1 + $I_L1444_200
 1444.                   if ( $I_L1444_200 >= $F_A45 ) exit
 1444.                enddo
 1444.                $I_L1444_222 = 1 + $I_L1444_222
 1444.                if ( $I_L1444_222 >= $F_A44 ) exit
 1444.             enddo
 1444.             $I_L1444_232 = 1 + $I_L1444_232
 1444.             if ( $I_L1444_232 >= 2 ) exit
 1444.          enddo
 1444.       endif
 1445.       $F_A46 = 1 + np
 1445.       $F_A47 = m
 1445.       if ( and( -$F_A47, -$F_A46 ) < 0 ) then
 1445.          $I_L1445_234 = 0
 1445.          do
 1445.             $I_L1445_224 = 0
 1445.             do
 1445.                $I_L1445_202 = 0
 1445. !dir$ ivdep
 1445.                do
 1445.                   ts(1 + $I_L1445_202, 1 + $I_L1445_224, 1 + $I_L1445_234) = 0.0
 1445.                   $I_L1445_202 = 1 + $I_L1445_202
 1445.                   if ( $I_L1445_202 >= $F_A47 ) exit
 1445.                enddo
 1445.                $I_L1445_224 = 1 + $I_L1445_224
 1445.                if ( $I_L1445_224 >= $F_A46 ) exit
 1445.             enddo
 1445.             $I_L1445_234 = 1 + $I_L1445_234
 1445.             if ( $I_L1445_234 >= 2 ) exit
 1445.          enddo
 1445.       endif
 1446.       $F_A48 = m
 1446.       if ( m > 0 ) then
 1446.          $I_L1446_226 = 0
 1446.          do
 1446.             $I_L1446_204 = 0
 1446. !dir$ ivdep
 1446.             do
 1446.                cc(1 + $I_L1446_204, 1 + $I_L1446_226) = 0.0
 1446.                $I_L1446_204 = 1 + $I_L1446_204
 1446.                if ( $I_L1446_204 >= $F_A48 ) exit
 1446.             enddo
 1446.             $I_L1446_226 = 1 + $I_L1446_226
 1446.             if ( $I_L1446_226 >= 3 ) exit
 1446.          enddo
 1446.       endif
 1449.       $I_L1449_236 = 0
 1449.       do
 1455.          call cldscale( m, np, cosz(1), fcld(1, 1), taucld(1, 1, 1), ict, icb, cc(1, 1), tauclb(1, 1), tauclf(1, 1) )
 1459.          if ( np > 0 ) then
 1460.             if ( m > 0 ) then
 1459.                $I_L1459_206 = 0
 1459.                do
 1460.                   $I_L1460_156 = 0
 1460. !dir$ ivdep
 1460.                   do
 1461.                      ssaclt(1 + $I_L1460_156) = 9.9999000000000005e-1
 1462.                      asyclt(1 + $I_L1460_156) = 1.0
 1464.                      $taux_S2 = taucld(1 + $I_L1460_156, 1 + $I_L1459_206, 3) + taucld(1 + $I_L1460_156, 1 + $I_L1459_206, 2) + taucld(1 + $I_L1460_156, 1 + $I_L1459_206, 1)
 1465.                      if ( taucld(1 + $I_L1460_156, 1 + $I_L1459_206, 3) + taucld(1 + $I_L1460_156, 1 + $I_L1459_206, 2) + taucld(1 + $I_L1460_156, 1 + $I_L1459_206, 1) > 2.0e-2 ) then
 1465.                         if ( fcld(1 + $I_L1460_156, 1 + $I_L1459_206) > 1.0e-2 ) then
 1466.                            $reff1_S4 = min( 130.0, reff(1 + $I_L1460_156, 1 + $I_L1459_206, 1) )
 1467.                            $reff2_S5 = min( 20.0, reff(1 + $I_L1460_156, 1 + $I_L1459_206, 2) )
 1469.                            $w1_S8 = taucld(1 + $I_L1460_156, 1 + $I_L1459_206, 1) * ( 1.0 + -( aia(1 + $I_L1449_236, 1) + $reff1_S4 * ( aia(1 + $I_L1449_236, 2) + $reff1_S4 * aia(1 + $I_L1449_236, 3) ) ) )
 1471.                            $w2_S7 = taucld(1 + $I_L1460_156, 1 + $I_L1459_206, 2) * ( 1.0 + -( awa(1 + $I_L1449_236, 1) + $reff2_S5 * ( awa(1 + $I_L1449_236, 2) + $reff2_S5 * awa(1 + $I_L1449_236, 3) ) ) )
 1473.                            $w3_S6 = taucld(1 + $I_L1460_156, 1 + $I_L1459_206, 3) * ( 1.0 + -ara(1 + $I_L1449_236, 1) )
 1474.                            ssaclt(1 + $I_L1460_156) = ( 1.0/$taux_S2 * ( $w3_S6 + $w2_S7 + $w1_S8 ) )
 1476.                            $g1_S11 = $w1_S8 * ( aig(1 + $I_L1449_236, 1) + $reff1_S4 * ( aig(1 + $I_L1449_236, 2) + $reff1_S4 * aig(1 + $I_L1449_236, 3) ) )
 1477.                            $g2_S10 = $w2_S7 * ( awg(1 + $I_L1449_236, 1) + $reff2_S5 * ( awg(1 + $I_L1449_236, 2) + $reff2_S5 * awg(1 + $I_L1449_236, 3) ) )
 1478.                            $g3_S9 = $w3_S6 * arg(1 + $I_L1449_236, 1)
 1479.                            asyclt(1 + $I_L1460_156) = ( 1.0/( $w3_S6 + $w2_S7 + $w1_S8 ) * ( $g3_S9 + $g2_S10 + $g1_S11 ) )
 1479.                         endif
 1479.                      endif
 1481.                      $I_L1460_156 = 1 + $I_L1460_156
 1480.                      if ( $I_L1460_156 >= m ) exit
 1480.                   enddo
 1483.                   $I_L1483_158 = 0
 1483. !dir$ ivdep
 1483.                   do
 1484.                      ssacl(1 + $I_L1483_158, 1 + $I_L1459_206) = ssaclt(1 + $I_L1483_158)
 1487.                      asycl(1 + $I_L1483_158, 1 + $I_L1459_206) = asyclt(1 + $I_L1483_158)
 1485.                      $I_L1483_158 = 1 + $I_L1483_158
 1483.                      if ( $I_L1483_158 >= m ) exit
 1483.                   enddo
 1489.                   $I_L1459_206 = 1 + $I_L1459_206
 1488.                   if ( $I_L1459_206 >= np ) exit
 1488.                enddo
 1488.             endif
 1488.          endif
 1492.          $I_L1492_228 = 0
 1492.          do
 1493.             if ( np > 0 ) then
 1494.                if ( m > 0 ) then
 1495.                   $SC_ry2_I1 = ry2(1 + $I_L1449_236)
 1496.                   $SC_xk2_I2 = xk2(1 + $I_L1492_228)
 1493.                   $I_L1493_208 = 0
 1493.                   do
 1494.                      $I_L1494_160 = 0
 1494. !dir$ ivdep
 1494.                      do
 1495.                         $taurs_S18 = $SC_ry2_I1 * dp(1 + $I_L1494_160, 1 + $I_L1493_208)
 1496.                         $tauwv_S17 = $SC_xk2_I2 * wh(1 + $I_L1494_160, 1 + $I_L1493_208)
 1499.                         $tausto_WR0_R0 = 1.0e-8 + $tauwv_S17 + $taurs_S18 + taual(1 + $I_L1494_160, 1 + $I_L1493_208, 9 + $I_L1449_236)
 1499.                         tausto(1 + $I_L1494_160, 1 + $I_L1493_208) = $tausto_WR0_R0
 1500.                         $ssatau_WR0_R1 = $taurs_S18 + taual(1 + $I_L1494_160, 1 + $I_L1493_208, 9 + $I_L1449_236) * ssaal(1 + $I_L1494_160, 1 + $I_L1493_208, 9 + $I_L1449_236)
 1500.                         ssatau(1 + $I_L1494_160, 1 + $I_L1493_208) = $ssatau_WR0_R1
 1501.                         $asysto_WR0_R2 = taual(1 + $I_L1494_160, 1 + $I_L1493_208, 9 + $I_L1449_236) * ssaal(1 + $I_L1494_160, 1 + $I_L1493_208, 9 + $I_L1449_236) * asyal(1 + $I_L1494_160, 1 + $I_L1493_208, 9 + $I_L1449_236)
 1501.                         asysto(1 + $I_L1494_160, 1 + $I_L1493_208) = $asysto_WR0_R2
 1504.                         tautob(1 + $I_L1494_160, 1 + $I_L1493_208) = $tausto_WR0_R0
 1506.                         ssatob(1 + $I_L1494_160, 1 + $I_L1493_208) = ( min( 9.9999899999999997e-1, ( 1.0e-8 + ( $ssatau_WR0_R1 * 1.0/$tausto_WR0_R0 ) ) ) )
 1507.                         asytob(1 + $I_L1494_160, 1 + $I_L1493_208) = ( $asysto_WR0_R2 * 1.0/( $tausto_WR0_R0 * ( min( 9.9999899999999997e-1, ( 1.0e-8 + ( $ssatau_WR0_R1 * 1.0/$tausto_WR0_R0 ) ) ) ) ) )
 1508.                         $I_L1494_160 = 1 + $I_L1494_160
 1494.                         if ( $I_L1494_160 >= m ) exit
 1494.                      enddo
 1513.                      $I_L1513_162 = 0
 1513. !dir$ ivdep
 1513.                      do
 1513.                         $zth_S27 = cosz(1 + $I_L1513_162)
 1513.                         $ff_S21 = asytob(1 + $I_L1513_162, 1 + $I_L1493_208) * asytob(1 + $I_L1513_162, 1 + $I_L1493_208)
 1513.                         $xx_S22 = 1.0 + -( $ff_S21 * ssatob(1 + $I_L1513_162, 1 + $I_L1493_208) )
 1513.                         $taup_S32 = $xx_S22 * tautob(1 + $I_L1513_162, 1 + $I_L1493_208)
 1513.                         $sscp_S24 = ( ssatob(1 + $I_L1513_162, 1 + $I_L1493_208) * ( 1.0 + -$ff_S21 ) * 1.0/$xx_S22 )
 1513.                         $gp_S23 = ( asytob(1 + $I_L1513_162, 1 + $I_L1493_208) * 1.0/( 1.0 + asytob(1 + $I_L1513_162, 1 + $I_L1493_208) ) )
 1513.                         $gm1_S26 = 2.5e-1 * ( 7.0 + -( $sscp_S24 * ( 4.0 + ( 3.0 * $gp_S23 ) ) ) )
 1513.                         $gm2_S25 = -2.5e-1 * ( 1.0 + -( $sscp_S24 * ( 4.0 + -( 3.0 * $gp_S23 ) ) ) )
 1513.                         $akk_S31 = _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S24 * ( 4.0 + ( 3.0 * $gp_S23 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S24 * ( 4.0 + -( 3.0 * $gp_S23 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S24 * ( 4.0 + ( 3.0 * $gp_S23 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S24 * ( 4.0 + -( 3.0 * $gp_S23 ) ) ) ) ) ) )
 1513.                         $st7_S29 = 1.0 + -( $zth_S27 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S24 * ( 4.0 + ( 3.0 * $gp_S23 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S24 * ( 4.0 + -( 3.0 * $gp_S23 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S24 * ( 4.0 + ( 3.0 * $gp_S23 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S24 * ( 4.0 + -( 3.0 * $gp_S23 ) ) ) ) ) ) ) )
 1513.                         $st8_S28 = 1.0 + ( $zth_S27 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S24 * ( 4.0 + ( 3.0 * $gp_S23 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S24 * ( 4.0 + -( 3.0 * $gp_S23 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S24 * ( 4.0 + ( 3.0 * $gp_S23 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S24 * ( 4.0 + -( 3.0 * $gp_S23 ) ) ) ) ) ) ) )
 1513.                         $st3_S30 = ( 1.0 + -( $zth_S27 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S24 * ( 4.0 + ( 3.0 * $gp_S23 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S24 * ( 4.0 + -( 3.0 * $gp_S23 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S24 * ( 4.0 + ( 3.0 * $gp_S23 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S24 * ( 4.0 + -( 3.0 * $gp_S23 ) ) ) ) ) ) ) ) ) * ( 1.0 + ( $zth_S27 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S24 * ( 4.0 + ( 3.0 * $gp_S23 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S24 * ( 4.0 + -( 3.0 * $gp_S23 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S24 * ( 4.0 + ( 3.0 * $gp_S23 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S24 * ( 4.0 + -( 3.0 * $gp_S23 ) ) ) ) ) ) ) ) )
 1513.                         if ( abs( ( ( 1.0 + -( $zth_S27 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S24 * ( 4.0 + ( 3.0 * $gp_S23 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S24 * ( 4.0 + -( 3.0 * $gp_S23 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S24 * ( 4.0 + ( 3.0 * $gp_S23 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S24 * ( 4.0 + -( 3.0 * $gp_S23 ) ) ) ) ) ) ) ) ) * ( 1.0 + ( $zth_S27 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S24 * ( 4.0 + ( 3.0 * $gp_S23 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S24 * ( 4.0 + -( 3.0 * $gp_S23 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S24 * ( 4.0 + ( 3.0 * $gp_S23 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S24 * ( 4.0 + -( 3.0 * $gp_S23 ) ) ) ) ) ) ) ) ) ) ) < 1.0e-8 ) then
 1513.                            $zth_S27 = 1.0e-3 + $zth_S27
 1513.                            $st7_S29 = 1.0 + -( $zth_S27 * $akk_S31 )
 1513.                            $st8_S28 = 1.0 + ( $zth_S27 * $akk_S31 )
 1513.                            $st3_S30 = ( 1.0 + -( $zth_S27 * $akk_S31 ) ) * ( 1.0 + ( $zth_S27 * $akk_S31 ) )
 1513.                         endif
 1513.                         $tdt_WR0_R5 = _expn( -( $taup_S32 * 1.0/$zth_S27 ) )
 1513.                         tdt(1 + $I_L1513_162, 1 + $I_L1493_208) = $tdt_WR0_R5
 1513.                         $gm3_S33 = 2.5e-1 * ( 2.0 + -3.0 * $gp_S23 * $zth_S27 )
 1513.                         $alf1_S36 = $gm1_S26 + -( ( $gm1_S26 + -$gm2_S25 ) * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S23 * $zth_S27 ) ) )
 1513.                         $temp_all_S35 = $tdt_WR0_R5 * ( 2.0 * $akk_S31 ) * ( ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S23 * $zth_S27 ) ) + -( $zth_S27 * ( $gm2_S25 + ( $gm1_S26 + -$gm2_S25 ) * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S23 * $zth_S27 ) ) ) ) )
 1513.                         $st2_S34 = _expn( -( $akk_S31 * $taup_S32 ) )
 1513.                         rrt(1 + $I_L1513_162, 1 + $I_L1493_208) = ( max( 0.0, ( ( $sscp_S24 * 1.0/( $st3_S30 * ( $gm1_S26 + $akk_S31 + ( $akk_S31 + -$gm1_S26 ) * ( $st2_S34 * $st2_S34 ) ) ) ) * ( ( $st7_S29 * ( ( $akk_S31 * $gm3_S33 ) + ( $gm2_S25 + $gm3_S33 * ( $gm1_S26 + -$gm2_S25 ) ) ) ) + -( ( $st8_S28 * ( -( $akk_S31 * $gm3_S33 ) + ( $gm2_S25 + $gm3_S33 * ( $gm1_S26 + -$gm2_S25 ) ) ) ) * ( $st2_S34 * $st2_S34 ) ) + -( $st2_S34 * $temp_all_S35 ) ) ) ) )
 1513.                         $ttt_WR0_R7 = $tdt_WR0_R5 + max( 0.0, ( -( ( $sscp_S24 * 1.0/( $st3_S30 * ( $gm1_S26 + $akk_S31 + ( $akk_S31 + -$gm1_S26 ) * ( $st2_S34 * $st2_S34 ) ) ) ) * ( -( $st2_S34 * ( ( 2.0 * $akk_S31 ) * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S23 * $zth_S27 ) ) + $zth_S27 * $alf1_S36 ) ) ) + $tdt_WR0_R5 * ( ( $st8_S28 * ( $alf1_S36 + ( $akk_S31 * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S23 * $zth_S27 ) ) ) ) ) ) + -( ( $st2_S34 * $st2_S34 ) * ( $st7_S29 * ( $alf1_S36 + -( $akk_S31 * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S23 * $zth_S27 ) ) ) ) ) ) ) ) ) ) ) )
 1513.                         ttt(1 + $I_L1513_162, 1 + $I_L1493_208) = $ttt_WR0_R7
 1513.                         $I_L1513_162 = 1 + $I_L1513_162
 1513.                         if ( $I_L1513_162 >= m ) exit
 1513.                      enddo
 1509.                      $I_L1493_208 = 1 + $I_L1493_208
 1508.                      if ( $I_L1493_208 >= np ) exit
 1508.                   enddo
 1518.                   $I_L1518_210 = 0
 1518. !dir$ blocking_size( 1, 1 )
 1518.                   do
 1518.                      $I_L1518_164 = 0
 1518. !dir$ ivdep
 1518. !dir$ blocking_size( 256, 256 )
 1518.                      do
 1518.                         $zth_S45 = dsm(1 + $I_L1518_164)
 1518.                         $ff_S39 = asytob(1 + $I_L1518_164, 1 + $I_L1518_210) * asytob(1 + $I_L1518_164, 1 + $I_L1518_210)
 1518.                         $xx_S40 = 1.0 + -( $ff_S39 * ssatob(1 + $I_L1518_164, 1 + $I_L1518_210) )
 1518.                         $taup_S49 = $xx_S40 * tautob(1 + $I_L1518_164, 1 + $I_L1518_210)
 1518.                         $sscp_S42 = ( ssatob(1 + $I_L1518_164, 1 + $I_L1518_210) * ( 1.0 + -$ff_S39 ) * 1.0/$xx_S40 )
 1518.                         $gp_S41 = ( asytob(1 + $I_L1518_164, 1 + $I_L1518_210) * 1.0/( 1.0 + asytob(1 + $I_L1518_164, 1 + $I_L1518_210) ) )
 1518.                         $gm1_S44 = 2.5e-1 * ( 7.0 + -( $sscp_S42 * ( 4.0 + ( 3.0 * $gp_S41 ) ) ) )
 1518.                         $gm2_S43 = -2.5e-1 * ( 1.0 + -( $sscp_S42 * ( 4.0 + -( 3.0 * $gp_S41 ) ) ) )
 1518.                         $akk_S48 = _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S42 * ( 4.0 + ( 3.0 * $gp_S41 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S42 * ( 4.0 + -( 3.0 * $gp_S41 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S42 * ( 4.0 + ( 3.0 * $gp_S41 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S42 * ( 4.0 + -( 3.0 * $gp_S41 ) ) ) ) ) ) )
 1518.                         $st7_S47 = 1.0 + -( $zth_S45 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S42 * ( 4.0 + ( 3.0 * $gp_S41 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S42 * ( 4.0 + -( 3.0 * $gp_S41 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S42 * ( 4.0 + ( 3.0 * $gp_S41 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S42 * ( 4.0 + -( 3.0 * $gp_S41 ) ) ) ) ) ) ) )
 1518.                         $st8_S46 = 1.0 + ( $zth_S45 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S42 * ( 4.0 + ( 3.0 * $gp_S41 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S42 * ( 4.0 + -( 3.0 * $gp_S41 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S42 * ( 4.0 + ( 3.0 * $gp_S41 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S42 * ( 4.0 + -( 3.0 * $gp_S41 ) ) ) ) ) ) ) )
 1518.                         $st3_S53 = ( 1.0 + ( $zth_S45 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S42 * ( 4.0 + ( 3.0 * $gp_S41 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S42 * ( 4.0 + -( 3.0 * $gp_S41 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S42 * ( 4.0 + ( 3.0 * $gp_S41 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S42 * ( 4.0 + -( 3.0 * $gp_S41 ) ) ) ) ) ) ) ) ) * ( 1.0 + -( $zth_S45 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S42 * ( 4.0 + ( 3.0 * $gp_S41 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S42 * ( 4.0 + -( 3.0 * $gp_S41 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S42 * ( 4.0 + ( 3.0 * $gp_S41 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S42 * ( 4.0 + -( 3.0 * $gp_S41 ) ) ) ) ) ) ) ) )
 1518.                         if ( abs( ( ( 1.0 + ( $zth_S45 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S42 * ( 4.0 + ( 3.0 * $gp_S41 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S42 * ( 4.0 + -( 3.0 * $gp_S41 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S42 * ( 4.0 + ( 3.0 * $gp_S41 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S42 * ( 4.0 + -( 3.0 * $gp_S41 ) ) ) ) ) ) ) ) ) * ( 1.0 + -( $zth_S45 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S42 * ( 4.0 + ( 3.0 * $gp_S41 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S42 * ( 4.0 + -( 3.0 * $gp_S41 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S42 * ( 4.0 + ( 3.0 * $gp_S41 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S42 * ( 4.0 + -( 3.0 * $gp_S41 ) ) ) ) ) ) ) ) ) ) ) < 1.0e-8 ) then
 1518.                            $zth_S45 = 1.0e-3 + $zth_S45
 1518.                            $st7_S47 = 1.0 + -( $zth_S45 * $akk_S48 )
 1518.                            $st8_S46 = 1.0 + ( $zth_S45 * $akk_S48 )
 1518.                            $st3_S53 = ( 1.0 + -( $zth_S45 * $akk_S48 ) ) * ( 1.0 + ( $zth_S45 * $akk_S48 ) )
 1518.                         endif
 1518.                         $dum_WR0_R8 = _expn( -( $taup_S49 * 1.0/$zth_S45 ) )
 1518.                         $gm3_S50 = 2.5e-1 * ( 2.0 + -3.0 * $gp_S41 * $zth_S45 )
 1518.                         $alf1_S54 = $gm1_S44 + -( ( $gm1_S44 + -$gm2_S43 ) * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S41 * $zth_S45 ) ) )
 1518.                         $temp_all_S52 = $dum_WR0_R8 * ( 2.0 * $akk_S48 ) * ( ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S41 * $zth_S45 ) ) + -( $zth_S45 * ( $gm2_S43 + ( $gm1_S44 + -$gm2_S43 ) * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S41 * $zth_S45 ) ) ) ) )
 1518.                         $st2_S51 = _expn( -( $akk_S48 * $taup_S49 ) )
 1518.                         rst(1 + $I_L1518_164, 1 + $I_L1518_210) = ( max( 0.0, ( ( ( $st7_S47 * ( ( $akk_S48 * $gm3_S50 ) + ( $gm2_S43 + $gm3_S50 * ( $gm1_S44 + -$gm2_S43 ) ) ) ) + -( ( $st8_S46 * ( -( $akk_S48 * $gm3_S50 ) + ( $gm2_S43 + $gm3_S50 * ( $gm1_S44 + -$gm2_S43 ) ) ) ) * ( $st2_S51 * $st2_S51 ) ) + -( $st2_S51 * $temp_all_S52 ) ) * ( $sscp_S42 * 1.0/( $st3_S53 * ( $gm1_S44 + $akk_S48 + ( $akk_S48 + -$gm1_S44 ) * ( $st2_S51 * $st2_S51 ) ) ) ) ) ) )
 1518.                         $tst_WR0_R10 = $dum_WR0_R8 + max( 0.0, ( -( ( $sscp_S42 * 1.0/( $st3_S53 * ( $gm1_S44 + $akk_S48 + ( $akk_S48 + -$gm1_S44 ) * ( $st2_S51 * $st2_S51 ) ) ) ) * ( -( $st2_S51 * ( ( 2.0 * $akk_S48 ) * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S41 * $zth_S45 ) ) + $zth_S45 * $alf1_S54 ) ) ) + $dum_WR0_R8 * ( ( $st8_S46 * ( $alf1_S54 + ( $akk_S48 * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S41 * $zth_S45 ) ) ) ) ) ) + -( ( $st2_S51 * $st2_S51 ) * ( $st7_S47 * ( $alf1_S54 + -( $akk_S48 * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S41 * $zth_S45 ) ) ) ) ) ) ) ) ) ) ) )
 1518.                         tst(1 + $I_L1518_164, 1 + $I_L1518_210) = $tst_WR0_R10
 1518.                         $I_L1518_164 = 1 + $I_L1518_164
 1518.                         if ( $I_L1518_164 >= m ) exit
 1518.                      enddo
 1518.                      $I_L1518_210 = 1 + $I_L1518_210
 1518.                      if ( $I_L1518_210 >= np ) exit
 1518.                   enddo
 1520.                   $I_L1520_212 = 0
 1520.                   do
 1521.                      $I_L1521_166 = 0
 1521. !dir$ ivdep
 1521.                      do
 1522.                         rr(1 + $I_L1521_166, 1 + $I_L1520_212, 1) = rrt(1 + $I_L1521_166, 1 + $I_L1520_212)
 1523.                         tt(1 + $I_L1521_166, 1 + $I_L1520_212, 1) = ttt(1 + $I_L1521_166, 1 + $I_L1520_212)
 1524.                         td(1 + $I_L1521_166, 1 + $I_L1520_212, 1) = tdt(1 + $I_L1521_166, 1 + $I_L1520_212)
 1525.                         rs(1 + $I_L1521_166, 1 + $I_L1520_212, 1) = rst(1 + $I_L1521_166, 1 + $I_L1520_212)
 1526.                         ts(1 + $I_L1521_166, 1 + $I_L1520_212, 1) = tst(1 + $I_L1521_166, 1 + $I_L1520_212)
 1527.                         $I_L1521_166 = 1 + $I_L1521_166
 1521.                         if ( $I_L1521_166 >= m ) exit
 1521.                      enddo
 1532.                      $I_L1532_168 = 0
 1532. !dir$ ivdep
 1532.                      do
 1534.                         $tautob_WR0_R11 = tauclb(1 + $I_L1532_168, 1 + $I_L1520_212) + tausto(1 + $I_L1532_168, 1 + $I_L1520_212)
 1534.                         tautob(1 + $I_L1532_168, 1 + $I_L1520_212) = $tautob_WR0_R11
 1535.                         $ssatob_WR0_R12 = 1.0e-8 + ( 1.0/$tautob_WR0_R11 * ( ssatau(1 + $I_L1532_168, 1 + $I_L1520_212) + tauclb(1 + $I_L1532_168, 1 + $I_L1520_212) * ssacl(1 + $I_L1532_168, 1 + $I_L1520_212) ) )
 1537.                         $ssatob_WR0_R12 = min( 9.9999899999999997e-1, $ssatob_WR0_R12 )
 1537.                         ssatob(1 + $I_L1532_168, 1 + $I_L1520_212) = $ssatob_WR0_R12
 1538.                         asytob(1 + $I_L1532_168, 1 + $I_L1520_212) = ( 1.0/( $tautob_WR0_R11 * $ssatob_WR0_R12 ) * ( asysto(1 + $I_L1532_168, 1 + $I_L1520_212) + ssacl(1 + $I_L1532_168, 1 + $I_L1520_212) * tauclb(1 + $I_L1532_168, 1 + $I_L1520_212) * asycl(1 + $I_L1532_168, 1 + $I_L1520_212) ) )
 1542.                         $tautof_WR0_R13 = tausto(1 + $I_L1532_168, 1 + $I_L1520_212) + tauclf(1 + $I_L1532_168, 1 + $I_L1520_212)
 1542.                         tautof(1 + $I_L1532_168, 1 + $I_L1520_212) = $tautof_WR0_R13
 1543.                         $ssatof_WR0_R14 = 1.0e-8 + ( 1.0/$tautof_WR0_R13 * ( ssatau(1 + $I_L1532_168, 1 + $I_L1520_212) + ssacl(1 + $I_L1532_168, 1 + $I_L1520_212) * tauclf(1 + $I_L1532_168, 1 + $I_L1520_212) ) )
 1545.                         $ssatof_WR0_R14 = min( 9.9999899999999997e-1, $ssatof_WR0_R14 )
 1545.                         ssatof(1 + $I_L1532_168, 1 + $I_L1520_212) = $ssatof_WR0_R14
 1546.                         asytof(1 + $I_L1532_168, 1 + $I_L1520_212) = ( 1.0/( $tautof_WR0_R13 * $ssatof_WR0_R14 ) * ( asysto(1 + $I_L1532_168, 1 + $I_L1520_212) + ssacl(1 + $I_L1532_168, 1 + $I_L1520_212) * asycl(1 + $I_L1532_168, 1 + $I_L1520_212) * tauclf(1 + $I_L1532_168, 1 + $I_L1520_212) ) )
 1548.                         $I_L1532_168 = 1 + $I_L1532_168
 1532.                         if ( $I_L1532_168 >= m ) exit
 1532.                      enddo
 1553.                      $I_L1553_170 = 0
 1553. !dir$ ivdep
 1553.                      do
 1553.                         $zth_S67 = cosz(1 + $I_L1553_170)
 1553.                         $ff_S61 = asytob(1 + $I_L1553_170, 1 + $I_L1520_212) * asytob(1 + $I_L1553_170, 1 + $I_L1520_212)
 1553.                         $xx_S62 = 1.0 + -( $ff_S61 * ssatob(1 + $I_L1553_170, 1 + $I_L1520_212) )
 1553.                         $taup_S69 = $xx_S62 * tautob(1 + $I_L1553_170, 1 + $I_L1520_212)
 1553.                         $sscp_S64 = ( ssatob(1 + $I_L1553_170, 1 + $I_L1520_212) * ( 1.0 + -$ff_S61 ) * 1.0/$xx_S62 )
 1553.                         $gp_S63 = ( asytob(1 + $I_L1553_170, 1 + $I_L1520_212) * 1.0/( 1.0 + asytob(1 + $I_L1553_170, 1 + $I_L1520_212) ) )
 1553.                         $gm1_S66 = 2.5e-1 * ( 7.0 + -( $sscp_S64 * ( 4.0 + ( 3.0 * $gp_S63 ) ) ) )
 1553.                         $gm2_S65 = -2.5e-1 * ( 1.0 + -( $sscp_S64 * ( 4.0 + -( 3.0 * $gp_S63 ) ) ) )
 1553.                         $akk_S68 = _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S64 * ( 4.0 + ( 3.0 * $gp_S63 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S64 * ( 4.0 + -( 3.0 * $gp_S63 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S64 * ( 4.0 + ( 3.0 * $gp_S63 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S64 * ( 4.0 + -( 3.0 * $gp_S63 ) ) ) ) ) ) )
 1553.                         $st7_S71 = 1.0 + -( $zth_S67 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S64 * ( 4.0 + ( 3.0 * $gp_S63 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S64 * ( 4.0 + -( 3.0 * $gp_S63 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S64 * ( 4.0 + ( 3.0 * $gp_S63 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S64 * ( 4.0 + -( 3.0 * $gp_S63 ) ) ) ) ) ) ) )
 1553.                         $st8_S72 = 1.0 + ( $zth_S67 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S64 * ( 4.0 + ( 3.0 * $gp_S63 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S64 * ( 4.0 + -( 3.0 * $gp_S63 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S64 * ( 4.0 + ( 3.0 * $gp_S63 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S64 * ( 4.0 + -( 3.0 * $gp_S63 ) ) ) ) ) ) ) )
 1553.                         $st3_S75 = ( 1.0 + ( $zth_S67 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S64 * ( 4.0 + ( 3.0 * $gp_S63 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S64 * ( 4.0 + -( 3.0 * $gp_S63 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S64 * ( 4.0 + ( 3.0 * $gp_S63 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S64 * ( 4.0 + -( 3.0 * $gp_S63 ) ) ) ) ) ) ) ) ) * ( 1.0 + -( $zth_S67 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S64 * ( 4.0 + ( 3.0 * $gp_S63 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S64 * ( 4.0 + -( 3.0 * $gp_S63 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S64 * ( 4.0 + ( 3.0 * $gp_S63 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S64 * ( 4.0 + -( 3.0 * $gp_S63 ) ) ) ) ) ) ) ) )
 1553.                         if ( abs( ( ( 1.0 + ( $zth_S67 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S64 * ( 4.0 + ( 3.0 * $gp_S63 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S64 * ( 4.0 + -( 3.0 * $gp_S63 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S64 * ( 4.0 + ( 3.0 * $gp_S63 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S64 * ( 4.0 + -( 3.0 * $gp_S63 ) ) ) ) ) ) ) ) ) * ( 1.0 + -( $zth_S67 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S64 * ( 4.0 + ( 3.0 * $gp_S63 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S64 * ( 4.0 + -( 3.0 * $gp_S63 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S64 * ( 4.0 + ( 3.0 * $gp_S63 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S64 * ( 4.0 + -( 3.0 * $gp_S63 ) ) ) ) ) ) ) ) ) ) ) < 1.0e-8 ) then
 1553.                            $zth_S67 = 1.0e-3 + $zth_S67
 1553.                            $st7_S71 = 1.0 + -( $zth_S67 * $akk_S68 )
 1553.                            $st8_S72 = 1.0 + ( $zth_S67 * $akk_S68 )
 1553.                            $st3_S75 = ( 1.0 + -( $zth_S67 * $akk_S68 ) ) * ( 1.0 + ( $zth_S67 * $akk_S68 ) )
 1553.                         endif
 1553.                         $tdt_WR0_R15 = _expn( -( $taup_S69 * 1.0/$zth_S67 ) )
 1553.                         tdt(1 + $I_L1553_170, 1 + $I_L1520_212) = $tdt_WR0_R15
 1553.                         $gm3_S70 = 2.5e-1 * ( 2.0 + -3.0 * $gp_S63 * $zth_S67 )
 1553.                         $alf1_S76 = $gm1_S66 + -( ( $gm1_S66 + -$gm2_S65 ) * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S63 * $zth_S67 ) ) )
 1553.                         $temp_all_S74 = $tdt_WR0_R15 * ( ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S63 * $zth_S67 ) ) + -( $zth_S67 * ( $gm2_S65 + ( $gm1_S66 + -$gm2_S65 ) * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S63 * $zth_S67 ) ) ) ) ) * ( 2.0 * $akk_S68 )
 1553.                         $st2_S73 = _expn( -( $akk_S68 * $taup_S69 ) )
 1553.                         $ttt_WR0_R17 = -( ( $sscp_S64 * 1.0/( $st3_S75 * ( $gm1_S66 + $akk_S68 + ( $akk_S68 + -$gm1_S66 ) * ( $st2_S73 * $st2_S73 ) ) ) ) * ( -( $st2_S73 * ( ( 2.0 * $akk_S68 ) * ( 1.0 + -$gm3_S70 + $zth_S67 * $alf1_S76 ) ) ) + $tdt_WR0_R15 * ( ( $st8_S72 * ( ( $akk_S68 * ( 1.0 + -$gm3_S70 ) ) + ( $gm1_S66 + -( $gm3_S70 * ( $gm1_S66 + -$gm2_S65 ) ) ) ) ) + -( ( $st7_S71 * ( -( $akk_S68 * ( 1.0 + -$gm3_S70 ) ) + ( $gm1_S66 + -( $gm3_S70 * ( $gm1_S66 + -$gm2_S65 ) ) ) ) ) * ( $st2_S73 * $st2_S73 ) ) ) ) )
 1553.                         $rrt_WR0_R16 = max( 0.0, ( ( ( $st7_S71 * ( ( $akk_S68 * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S63 * $zth_S67 ) ) ) + ( $gm2_S65 + $gm3_S70 * ( $gm1_S66 + -$gm2_S65 ) ) ) ) + -( ( $st8_S72 * ( -( $akk_S68 * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S63 * $zth_S67 ) ) ) + ( $gm2_S65 + $gm3_S70 * ( $gm1_S66 + -$gm2_S65 ) ) ) ) * ( $st2_S73 * $st2_S73 ) ) + -( $st2_S73 * $temp_all_S74 ) ) * ( $sscp_S64 * 1.0/( $st3_S75 * ( $gm1_S66 + $akk_S68 + ( $akk_S68 + -$gm1_S66 ) * ( $st2_S73 * $st2_S73 ) ) ) ) ) )
 1553.                         rrt(1 + $I_L1553_170, 1 + $I_L1520_212) = $rrt_WR0_R16
 1553.                         $ttt_WR0_R17 = $tdt_WR0_R15 + max( 0.0, $ttt_WR0_R17 )
 1553.                         ttt(1 + $I_L1553_170, 1 + $I_L1520_212) = $ttt_WR0_R17
 1553.                         $I_L1553_170 = 1 + $I_L1553_170
 1553.                         if ( $I_L1553_170 >= m ) exit
 1553.                      enddo
 1528.                      $I_L1520_212 = 1 + $I_L1520_212
 1527.                      if ( $I_L1520_212 >= np ) exit
 1527.                   enddo
 1558.                   $I_L1558_214 = 0
 1558. !dir$ blocking_size( 1, 1 )
 1558.                   do
 1558.                      $I_L1558_172 = 0
 1558. !dir$ ivdep
 1558. !dir$ blocking_size( 256, 256 )
 1558.                      do
 1558.                         $zth_S83 = dsm(1 + $I_L1558_172)
 1558.                         $ff_S79 = asytof(1 + $I_L1558_172, 1 + $I_L1558_214) * asytof(1 + $I_L1558_172, 1 + $I_L1558_214)
 1558.                         $xx_S80 = 1.0 + -( $ff_S79 * ssatof(1 + $I_L1558_172, 1 + $I_L1558_214) )
 1558.                         $taup_S86 = $xx_S80 * tautof(1 + $I_L1558_172, 1 + $I_L1558_214)
 1558.                         $sscp_S82 = ( ssatof(1 + $I_L1558_172, 1 + $I_L1558_214) * ( 1.0 + -$ff_S79 ) * 1.0/$xx_S80 )
 1558.                         $gp_S81 = ( asytof(1 + $I_L1558_172, 1 + $I_L1558_214) * 1.0/( 1.0 + asytof(1 + $I_L1558_172, 1 + $I_L1558_214) ) )
 1558.                         $gm1_S88 = 2.5e-1 * ( 7.0 + -( $sscp_S82 * ( 4.0 + ( 3.0 * $gp_S81 ) ) ) )
 1558.                         $gm2_S87 = -2.5e-1 * ( 1.0 + -( $sscp_S82 * ( 4.0 + -( 3.0 * $gp_S81 ) ) ) )
 1558.                         $akk_S85 = _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S82 * ( 4.0 + ( 3.0 * $gp_S81 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S82 * ( 4.0 + -( 3.0 * $gp_S81 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S82 * ( 4.0 + ( 3.0 * $gp_S81 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S82 * ( 4.0 + -( 3.0 * $gp_S81 ) ) ) ) ) ) )
 1558.                         $st7_S89 = 1.0 + -( $zth_S83 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S82 * ( 4.0 + ( 3.0 * $gp_S81 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S82 * ( 4.0 + -( 3.0 * $gp_S81 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S82 * ( 4.0 + ( 3.0 * $gp_S81 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S82 * ( 4.0 + -( 3.0 * $gp_S81 ) ) ) ) ) ) ) )
 1558.                         $st8_S90 = 1.0 + ( $zth_S83 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S82 * ( 4.0 + ( 3.0 * $gp_S81 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S82 * ( 4.0 + -( 3.0 * $gp_S81 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S82 * ( 4.0 + ( 3.0 * $gp_S81 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S82 * ( 4.0 + -( 3.0 * $gp_S81 ) ) ) ) ) ) ) )
 1558.                         $st3_S84 = ( 1.0 + ( $zth_S83 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S82 * ( 4.0 + ( 3.0 * $gp_S81 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S82 * ( 4.0 + -( 3.0 * $gp_S81 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S82 * ( 4.0 + ( 3.0 * $gp_S81 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S82 * ( 4.0 + -( 3.0 * $gp_S81 ) ) ) ) ) ) ) ) ) * ( 1.0 + -( $zth_S83 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S82 * ( 4.0 + ( 3.0 * $gp_S81 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S82 * ( 4.0 + -( 3.0 * $gp_S81 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S82 * ( 4.0 + ( 3.0 * $gp_S81 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S82 * ( 4.0 + -( 3.0 * $gp_S81 ) ) ) ) ) ) ) ) )
 1558.                         if ( abs( $st3_S84 ) < 1.0e-8 ) then
 1558.                            $zth_S83 = 1.0e-3 + $zth_S83
 1558.                            $st7_S89 = 1.0 + -( $zth_S83 * $akk_S85 )
 1558.                            $st8_S90 = 1.0 + ( $zth_S83 * $akk_S85 )
 1558.                            $st3_S84 = ( 1.0 + -( $zth_S83 * $akk_S85 ) ) * ( 1.0 + ( $zth_S83 * $akk_S85 ) )
 1558.                         endif
 1558.                         $dum_WR0_R18 = _expn( -( $taup_S86 * 1.0/$zth_S83 ) )
 1558.                         $alf1_S93 = $gm1_S88 + -( ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S81 * $zth_S83 ) ) * ( $gm1_S88 + -$gm2_S87 ) )
 1558.                         $temp_all_S92 = $dum_WR0_R18 * ( 2.0 * $akk_S85 ) * ( ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S81 * $zth_S83 ) ) + -( $zth_S83 * ( $gm2_S87 + ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S81 * $zth_S83 ) ) * ( $gm1_S88 + -$gm2_S87 ) ) ) )
 1558.                         $bll_S94 = ( 2.0 * $akk_S85 ) * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S81 * $zth_S83 ) ) + $zth_S83 * ( $gm1_S88 + -( ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S81 * $zth_S83 ) ) * ( $gm1_S88 + -$gm2_S87 ) ) ) )
 1558.                         $st2_S91 = _expn( -( $akk_S85 * $taup_S86 ) )
 1558.                         $rst_WR0_R19 = max( 0.0, ( ( $sscp_S82 * 1.0/( $st3_S84 * ( $akk_S85 + $gm1_S88 + ( $akk_S85 + -$gm1_S88 ) * ( $st2_S91 * $st2_S91 ) ) ) ) * ( ( $st7_S89 * ( ( $akk_S85 * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S81 * $zth_S83 ) ) ) + ( $gm2_S87 + ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S81 * $zth_S83 ) ) * ( $gm1_S88 + -$gm2_S87 ) ) ) ) + -( ( $st8_S90 * ( -( $akk_S85 * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S81 * $zth_S83 ) ) ) + ( $gm2_S87 + ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S81 * $zth_S83 ) ) * ( $gm1_S88 + -$gm2_S87 ) ) ) ) * ( $st2_S91 * $st2_S91 ) ) + -( $st2_S91 * $temp_all_S92 ) ) ) )
 1558.                         rst(1 + $I_L1558_172, 1 + $I_L1558_214) = $rst_WR0_R19
 1558.                         $tst_WR0_R20 = $dum_WR0_R18 + max( 0.0, ( -( ( $sscp_S82 * 1.0/( $st3_S84 * ( $akk_S85 + $gm1_S88 + ( $akk_S85 + -$gm1_S88 ) * ( $st2_S91 * $st2_S91 ) ) ) ) * ( -( $st2_S91 * $bll_S94 ) + $dum_WR0_R18 * ( -( ( $st2_S91 * $st2_S91 ) * ( $st7_S89 * ( $alf1_S93 + -( $akk_S85 * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S81 * $zth_S83 ) ) ) ) ) ) ) + ( $st8_S90 * ( $alf1_S93 + ( $akk_S85 * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S81 * $zth_S83 ) ) ) ) ) ) ) ) ) ) )
 1558.                         tst(1 + $I_L1558_172, 1 + $I_L1558_214) = $tst_WR0_R20
 1558.                         $I_L1558_172 = 1 + $I_L1558_172
 1558.                         if ( $I_L1558_172 >= m ) exit
 1558.                      enddo
 1558.                      $I_L1558_214 = 1 + $I_L1558_214
 1558.                      if ( $I_L1558_214 >= np ) exit
 1558.                   enddo
 1560.                   $I_L1560_216 = 0
 1560.                   do
 1561.                      $I_L1561_174 = 0
 1561. !dir$ ivdep
 1561.                      do
 1562.                         rr(1 + $I_L1561_174, 1 + $I_L1560_216, 2) = rrt(1 + $I_L1561_174, 1 + $I_L1560_216)
 1563.                         tt(1 + $I_L1561_174, 1 + $I_L1560_216, 2) = ttt(1 + $I_L1561_174, 1 + $I_L1560_216)
 1564.                         td(1 + $I_L1561_174, 1 + $I_L1560_216, 2) = tdt(1 + $I_L1561_174, 1 + $I_L1560_216)
 1565.                         rs(1 + $I_L1561_174, 1 + $I_L1560_216, 2) = rst(1 + $I_L1561_174, 1 + $I_L1560_216)
 1566.                         ts(1 + $I_L1561_174, 1 + $I_L1560_216, 2) = tst(1 + $I_L1561_174, 1 + $I_L1560_216)
 1567.                         $I_L1561_174 = 1 + $I_L1561_174
 1561.                         if ( $I_L1561_174 >= m ) exit
 1561.                      enddo
 1568.                      $I_L1560_216 = 1 + $I_L1560_216
 1567.                      if ( $I_L1560_216 >= np ) exit
 1567.                   enddo
 1567.                endif
 1567.             endif
 1513.             t$102 = m
 1513.             t$103 = np
 1513.             t$617 = max( 0, m )
 1513.             t$618 = max( 0, m )
 1513.             t$619 = max( 0, np )
 1513.             t$620 = max( 0, m ) * max( 0, np )
 1518.             t$102 = m
 1518.             t$103 = np
 1518.             t$617 = max( 0, m )
 1518.             t$618 = max( 0, m )
 1518.             t$619 = max( 0, np )
 1518.             t$620 = max( 0, m ) * max( 0, np )
 1553.             t$102 = m
 1553.             t$103 = np
 1553.             t$617 = max( 0, m )
 1553.             t$618 = max( 0, m )
 1553.             t$619 = max( 0, np )
 1553.             t$620 = max( 0, m ) * max( 0, np )
 1558.             t$102 = m
 1558.             t$103 = np
 1558.             t$617 = max( 0, m )
 1558.             t$618 = max( 0, m )
 1558.             t$619 = max( 0, np )
 1558.             t$620 = max( 0, m ) * max( 0, np )
 1590.             ih1 = 1
 1591.             ih2 = 2
 1592.             im1 = 1
 1593.             im2 = 2
 1594.             is1 = 1
 1595.             is2 = 2
 1597.             call cldflx( m, np, ict, icb, ih1, ih2, im1, im2, is1, is2, cc(1, 1), rr(1, 1, 1), tt(1, 1, 1), td(1, 1, 1), rs(1, 1, 1), ts(1, 1, 1), fclr(1, 1), fall(1, 1), fsdir(1), fsdif(1), fsdir_c(1), fsdif_c(1), fclr_d(1, 1), fclr_u(1, 1), fall_d(1, 1), fall_u(1, 1) )
 1603.             if ( np >= 0 ) then
 1604.                if ( m > 0 ) then
 1607.                   $SC_hk2_I3 = hk2(1 + $I_L1449_236, 1 + $I_L1492_228)
 1603.                   $I_L1603_218 = 0
 1603.                   do
 1604.                      $I_L1604_176 = 0
 1604. !dir$ ivdep
 1604.                      do
 1613.                         flc_u(1 + $I_L1604_176, 1 + $I_L1603_218) = flc_u(1 + $I_L1604_176, 1 + $I_L1603_218) + $SC_hk2_I3 * fclr_u(1 + $I_L1604_176, 1 + $I_L1603_218)
 1612.                         flc_d(1 + $I_L1604_176, 1 + $I_L1603_218) = flc_d(1 + $I_L1604_176, 1 + $I_L1603_218) + $SC_hk2_I3 * fclr_d(1 + $I_L1604_176, 1 + $I_L1603_218)
 1611.                         flc(1 + $I_L1604_176, 1 + $I_L1603_218) = flc(1 + $I_L1604_176, 1 + $I_L1603_218) + $SC_hk2_I3 * fclr(1 + $I_L1604_176, 1 + $I_L1603_218)
 1607.                         flx(1 + $I_L1604_176, 1 + $I_L1603_218) = flx(1 + $I_L1604_176, 1 + $I_L1603_218) + $SC_hk2_I3 * fall(1 + $I_L1604_176, 1 + $I_L1603_218)
 1606.                         flx_u(1 + $I_L1604_176, 1 + $I_L1603_218) = flx_u(1 + $I_L1604_176, 1 + $I_L1603_218) + $SC_hk2_I3 * fall_u(1 + $I_L1604_176, 1 + $I_L1603_218)
 1605.                         flx_d(1 + $I_L1604_176, 1 + $I_L1603_218) = flx_d(1 + $I_L1604_176, 1 + $I_L1603_218) + $SC_hk2_I3 * fall_d(1 + $I_L1604_176, 1 + $I_L1603_218)
 1608.                         $I_L1604_176 = 1 + $I_L1604_176
 1604.                         if ( $I_L1604_176 >= m ) exit
 1604.                      enddo
 1615.                      $I_L1603_218 = 1 + $I_L1603_218
 1614.                      if ( $I_L1603_218 >= 1 + np ) exit
 1614.                   enddo
 1614.                endif
 1614.             endif
 1619.             if ( m > 0 ) then
 1620.                $SC_hk2_I0 = hk2(1 + $I_L1449_236, 1 + $I_L1492_228)
 1619.                $I_L1619_178 = 0
 1619. !dir$ ivdep
 1619.                do
 1623.                   fdifir_c(1 + $I_L1619_178) = fdifir_c(1 + $I_L1619_178) + $SC_hk2_I0 * fsdif_c(1 + $I_L1619_178)
 1622.                   fdirir_c(1 + $I_L1619_178) = fdirir_c(1 + $I_L1619_178) + $SC_hk2_I0 * fsdir_c(1 + $I_L1619_178)
 1621.                   fdifir(1 + $I_L1619_178) = fdifir(1 + $I_L1619_178) + $SC_hk2_I0 * fsdif(1 + $I_L1619_178)
 1620.                   fdirir(1 + $I_L1619_178) = fdirir(1 + $I_L1619_178) + $SC_hk2_I0 * fsdir(1 + $I_L1619_178)
 1624.                   $I_L1619_178 = 1 + $I_L1619_178
 1619.                   if ( $I_L1619_178 >= m ) exit
 1619.                enddo
 1619.             endif
 1626.             $I_L1492_228 = 1 + $I_L1492_228
 1624.             if ( $I_L1492_228 >= 10 ) exit
 1624.          enddo
 1627.          $I_L1449_236 = 1 + $I_L1449_236
 1626.          if ( $I_L1449_236 >= 3 ) exit
 1626.       enddo
 1316.       _free( t$373 )
 1629.       return
 1629.       end
 1629.       
 1709.       
 1709.       subroutine soluvcld( m, np, wh, oh, dp, taucld, reff, ict, icb, fcld, cosz, taual, ssaal, asyal, rsuvbm, rsuvdf, flx, flc, fdiruv, fdifuv, fdirpar, fdifpar, fdiruv_c, fdifuv_c, fdirpar_c, fdifpar_c, flx_d, flx_u, flc_d, flc_u )
 1709.       t$94 = m
 1709.       t$95 = np
 1757.       t$490 = _zla( 0, m )
 1709.       t$491 = _zla( 0, m )
 1757.       t$492 = _zla( 0, np )
 1709.       t$493 = _zla( 0, m ) * _zla( 0, np )
 1709.       t$494 = _zla( 0, m ) * _zla( 0, np )
 1709.       t$495 = 3 * _zla( 0, m ) * _zla( 0, np )
 1709.       t$496 = 11 * _zla( 0, m ) * _zla( 0, np )
 1709.       t$96 = ( 1 + np )
 1761.       t$497 = _zla( 0, ( 1 + np ) )
 1709.       t$498 = _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1773.       t$501 = 8 * _zla( 0, m ) * _zla( 0, np )
 1771.       t$502 = 8 * ( 7 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1771.       t$504 = t$502 + 8 * _zla( 0, m )
 1774.       t$505 = 8 * ( 7 + t$502 + 8 * _zla( 0, m ) ) / 8
 1774.       t$507 = t$505 + 8 * _zla( 0, m ) * _zla( 0, np )
 1774.       t$508 = 8 * ( 7 + t$505 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1774.       t$510 = t$508 + 8 * _zla( 0, m ) * _zla( 0, np )
 1773.       t$511 = 8 * ( 7 + t$508 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1773.       t$513 = t$511 + 8 * _zla( 0, m ) * _zla( 0, np )
 1709.       t$514 = 3 * _zla( 0, m )
 1772.       t$515 = 8 * ( 7 + t$511 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1772.       t$517 = t$515 + 24 * _zla( 0, m )
 1771.       t$518 = 8 * ( 7 + t$515 + 24 * _zla( 0, m ) ) / 8
 1771.       t$520 = t$518 + 8 * _zla( 0, m )
 1775.       t$521 = 8 * ( 7 + t$518 + 8 * _zla( 0, m ) ) / 8
 1775.       t$523 = t$521 + 8 * _zla( 0, m ) * _zla( 0, np )
 1776.       t$524 = 8 * ( 7 + t$521 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1776.       t$526 = t$524 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1776.       t$527 = 8 * ( 7 + t$524 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1776.       t$529 = t$527 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1776.       t$530 = 8 * ( 7 + t$527 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1776.       t$532 = t$530 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1776.       t$533 = 8 * ( 7 + t$530 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1776.       t$535 = t$533 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1776.       t$536 = 8 * ( 7 + t$533 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1776.       t$538 = t$536 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1776.       t$539 = 8 * ( 7 + t$536 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1776.       t$541 = t$539 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1771.       t$542 = 8 * ( 7 + t$539 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1771.       t$544 = t$542 + 8 * _zla( 0, m )
 1771.       t$545 = 8 * ( 7 + t$542 + 8 * _zla( 0, m ) ) / 8
 1771.       t$547 = t$545 + 8 * _zla( 0, m )
 1771.       t$548 = 8 * ( 7 + t$545 + 8 * _zla( 0, m ) ) / 8
 1771.       t$550 = t$548 + 8 * _zla( 0, m )
 1771.       t$551 = 8 * ( 7 + t$548 + 8 * _zla( 0, m ) ) / 8
 1771.       t$553 = t$551 + 8 * _zla( 0, m )
 1709.       t$554 = _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1709.       t$555 = 2 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1777.       t$556 = 8 * ( 7 + t$551 + 8 * _zla( 0, m ) ) / 8
 1777.       t$558 = t$556 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1775.       t$559 = 8 * ( 7 + t$556 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1775.       t$561 = t$559 + 8 * _zla( 0, m ) * _zla( 0, np )
 1777.       t$562 = 8 * ( 7 + t$559 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1777.       t$564 = t$562 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1775.       t$565 = 8 * ( 7 + t$562 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1775.       t$567 = t$565 + 8 * _zla( 0, m ) * _zla( 0, np )
 1774.       t$568 = 8 * ( 7 + t$565 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1774.       t$570 = t$568 + 8 * _zla( 0, m ) * _zla( 0, np )
 1774.       t$571 = 8 * ( 7 + t$568 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1774.       t$573 = t$571 + 8 * _zla( 0, m ) * _zla( 0, np )
 1773.       t$574 = 8 * ( 7 + t$571 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1773.       t$576 = t$574 + 8 * _zla( 0, m ) * _zla( 0, np )
 1773.       t$577 = 8 * ( 7 + t$574 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1773.       t$579 = t$577 + 8 * _zla( 0, m ) * _zla( 0, np )
 1773.       t$580 = 8 * ( 7 + t$577 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1773.       t$582 = t$580 + 8 * _zla( 0, m ) * _zla( 0, np )
 1774.       t$583 = 8 * ( 7 + t$580 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1774.       t$585 = t$583 + 8 * _zla( 0, m ) * _zla( 0, np )
 1774.       t$586 = 8 * ( 7 + t$583 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1774.       t$588 = t$586 + 8 * _zla( 0, m ) * _zla( 0, np )
 1773.       t$589 = 8 * ( 7 + t$586 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1773.       t$591 = t$589 + 8 * _zla( 0, m ) * _zla( 0, np )
 1777.       t$592 = 8 * ( 7 + t$589 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1777.       t$594 = t$592 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1775.       t$595 = 8 * ( 7 + t$592 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1775.       t$597 = t$595 + 8 * _zla( 0, m ) * _zla( 0, np )
 1777.       t$598 = 8 * ( 7 + t$595 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1777.       t$600 = t$598 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1775.       t$601 = 8 * ( 7 + t$598 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1775.       t$603 = t$601 + 8 * _zla( 0, m ) * _zla( 0, np )
 1777.       t$604 = 8 * ( 7 + t$601 + 8 * _zla( 0, m ) * _zla( 0, np ) ) / 8
 1777.       t$606 = t$604 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 1775.       t$607 = 8 * ( 7 + t$604 + 16 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 1775.       t$609 = t$607 + 8 * _zla( 0, m ) * _zla( 0, np )
 1709.       t$499 = int( _alloc( t$607 + 8 * _zla( 0, m ) * _zla( 0, np ) ), 8 )
 1773.       t$500 = t$499
 1771.       t$503 = t$502 + t$499
 1774.       t$506 = t$505 + t$499
 1774.       t$509 = t$508 + t$499
 1773.       t$512 = t$511 + t$499
 1772.       t$516 = t$515 + t$499
 1771.       t$519 = t$518 + t$499
 1775.       t$522 = t$521 + t$499
 1776.       t$525 = t$524 + t$499
 1776.       t$528 = t$527 + t$499
 1776.       t$531 = t$530 + t$499
 1776.       t$534 = t$533 + t$499
 1776.       t$537 = t$536 + t$499
 1776.       t$540 = t$539 + t$499
 1771.       t$543 = t$542 + t$499
 1771.       t$546 = t$545 + t$499
 1771.       t$549 = t$548 + t$499
 1771.       t$552 = t$551 + t$499
 1777.       t$557 = t$556 + t$499
 1775.       t$560 = t$559 + t$499
 1777.       t$563 = t$562 + t$499
 1775.       t$566 = t$565 + t$499
 1774.       t$569 = t$568 + t$499
 1774.       t$572 = t$571 + t$499
 1773.       t$575 = t$574 + t$499
 1773.       t$578 = t$577 + t$499
 1773.       t$581 = t$580 + t$499
 1774.       t$584 = t$583 + t$499
 1774.       t$587 = t$586 + t$499
 1773.       t$590 = t$589 + t$499
 1777.       t$593 = t$592 + t$499
 1775.       t$596 = t$595 + t$499
 1777.       t$599 = t$598 + t$499
 1775.       t$602 = t$601 + t$499
 1777.       t$605 = t$604 + t$499
 1775.       t$608 = t$607 + t$499
 1789.       $F_A33 = m
 1789.       if ( m > 0 ) then
 1789.          $I_L1789_176 = 0
 1789. !dir$ ivdep
 1789.          do
 1789.             dsm(1 + $I_L1789_176) = 6.0199999999999998e-1
 1789.             $I_L1789_176 = 1 + $I_L1789_176
 1789.             if ( $I_L1789_176 >= $F_A33 ) exit
 1789.          enddo
 1789.       endif
 1790.       $F_A34 = m
 1790.       if ( m > 0 ) then
 1790.          $I_L1790_178 = 0
 1790. !dir$ ivdep
 1790.          do
 1790.             fdiruv(1 + $I_L1790_178) = 0.0
 1790.             $I_L1790_178 = 1 + $I_L1790_178
 1790.             if ( $I_L1790_178 >= $F_A34 ) exit
 1790.          enddo
 1790.       endif
 1791.       $F_A35 = m
 1791.       if ( m > 0 ) then
 1791.          $I_L1791_180 = 0
 1791. !dir$ ivdep
 1791.          do
 1791.             fdifuv(1 + $I_L1791_180) = 0.0
 1791.             $I_L1791_180 = 1 + $I_L1791_180
 1791.             if ( $I_L1791_180 >= $F_A35 ) exit
 1791.          enddo
 1791.       endif
 1792.       $F_A36 = m
 1792.       if ( m > 0 ) then
 1792.          $I_L1792_182 = 0
 1792. !dir$ ivdep
 1792.          do
 1792.             fdirpar(1 + $I_L1792_182) = 0.0
 1792.             $I_L1792_182 = 1 + $I_L1792_182
 1792.             if ( $I_L1792_182 >= $F_A36 ) exit
 1792.          enddo
 1792.       endif
 1793.       $F_A37 = m
 1793.       if ( m > 0 ) then
 1793.          $I_L1793_184 = 0
 1793. !dir$ ivdep
 1793.          do
 1793.             fdifpar(1 + $I_L1793_184) = 0.0
 1793.             $I_L1793_184 = 1 + $I_L1793_184
 1793.             if ( $I_L1793_184 >= $F_A37 ) exit
 1793.          enddo
 1793.       endif
 1794.       $F_A38 = m
 1794.       if ( m > 0 ) then
 1794.          $I_L1794_186 = 0
 1794. !dir$ ivdep
 1794.          do
 1794.             fdiruv_c(1 + $I_L1794_186) = 0.0
 1794.             $I_L1794_186 = 1 + $I_L1794_186
 1794.             if ( $I_L1794_186 >= $F_A38 ) exit
 1794.          enddo
 1794.       endif
 1795.       $F_A39 = m
 1795.       if ( m > 0 ) then
 1795.          $I_L1795_188 = 0
 1795. !dir$ ivdep
 1795.          do
 1795.             fdifuv_c(1 + $I_L1795_188) = 0.0
 1795.             $I_L1795_188 = 1 + $I_L1795_188
 1795.             if ( $I_L1795_188 >= $F_A39 ) exit
 1795.          enddo
 1795.       endif
 1796.       $F_A40 = m
 1796.       if ( m > 0 ) then
 1796.          $I_L1796_190 = 0
 1796. !dir$ ivdep
 1796.          do
 1796.             fdirpar_c(1 + $I_L1796_190) = 0.0
 1796.             $I_L1796_190 = 1 + $I_L1796_190
 1796.             if ( $I_L1796_190 >= $F_A40 ) exit
 1796.          enddo
 1796.       endif
 1797.       $F_A41 = m
 1797.       if ( m > 0 ) then
 1797.          $I_L1797_192 = 0
 1797. !dir$ ivdep
 1797.          do
 1797.             fdifpar_c(1 + $I_L1797_192) = 0.0
 1797.             $I_L1797_192 = 1 + $I_L1797_192
 1797.             if ( $I_L1797_192 >= $F_A41 ) exit
 1797.          enddo
 1797.       endif
 1798.       $F_A42 = m
 1798.       if ( m > 0 ) then
 1798.          $I_L1798_194 = 0
 1798. !dir$ ivdep
 1798.          do
 1798.             rr(1 + $I_L1798_194, 1 + np, 1) = rsuvbm(1 + $I_L1798_194)
 1798.             $I_L1798_194 = 1 + $I_L1798_194
 1798.             if ( $I_L1798_194 >= $F_A42 ) exit
 1798.          enddo
 1798.       endif
 1799.       $F_A43 = m
 1799.       if ( m > 0 ) then
 1799.          $I_L1799_196 = 0
 1799. !dir$ ivdep
 1799.          do
 1799.             rr(1 + $I_L1799_196, 1 + np, 2) = rsuvbm(1 + $I_L1799_196)
 1799.             $I_L1799_196 = 1 + $I_L1799_196
 1799.             if ( $I_L1799_196 >= $F_A43 ) exit
 1799.          enddo
 1799.       endif
 1800.       $F_A44 = m
 1800.       if ( m > 0 ) then
 1800.          $I_L1800_198 = 0
 1800. !dir$ ivdep
 1800.          do
 1800.             rs(1 + $I_L1800_198, 1 + np, 1) = rsuvdf(1 + $I_L1800_198)
 1800.             $I_L1800_198 = 1 + $I_L1800_198
 1800.             if ( $I_L1800_198 >= $F_A44 ) exit
 1800.          enddo
 1800.       endif
 1801.       $F_A45 = m
 1801.       if ( m > 0 ) then
 1801.          $I_L1801_200 = 0
 1801. !dir$ ivdep
 1801.          do
 1801.             rs(1 + $I_L1801_200, 1 + np, 2) = rsuvdf(1 + $I_L1801_200)
 1801.             $I_L1801_200 = 1 + $I_L1801_200
 1801.             if ( $I_L1801_200 >= $F_A45 ) exit
 1801.          enddo
 1801.       endif
 1802.       $F_A46 = 1 + np
 1802.       $F_A47 = m
 1802.       if ( and( -$F_A47, -$F_A46 ) < 0 ) then
 1802.          $I_L1802_234 = 0
 1802.          do
 1802.             $I_L1802_224 = 0
 1802.             do
 1802.                $I_L1802_202 = 0
 1802. !dir$ ivdep
 1802.                do
 1802.                   td(1 + $I_L1802_202, 1 + $I_L1802_224, 1 + $I_L1802_234) = 0.0
 1802.                   $I_L1802_202 = 1 + $I_L1802_202
 1802.                   if ( $I_L1802_202 >= $F_A47 ) exit
 1802.                enddo
 1802.                $I_L1802_224 = 1 + $I_L1802_224
 1802.                if ( $I_L1802_224 >= $F_A46 ) exit
 1802.             enddo
 1802.             $I_L1802_234 = 1 + $I_L1802_234
 1802.             if ( $I_L1802_234 >= 2 ) exit
 1802.          enddo
 1802.       endif
 1803.       $F_A48 = 1 + np
 1803.       $F_A49 = m
 1803.       if ( and( -$F_A49, -$F_A48 ) < 0 ) then
 1803.          $I_L1803_236 = 0
 1803.          do
 1803.             $I_L1803_226 = 0
 1803.             do
 1803.                $I_L1803_204 = 0
 1803. !dir$ ivdep
 1803.                do
 1803.                   tt(1 + $I_L1803_204, 1 + $I_L1803_226, 1 + $I_L1803_236) = 0.0
 1803.                   $I_L1803_204 = 1 + $I_L1803_204
 1803.                   if ( $I_L1803_204 >= $F_A49 ) exit
 1803.                enddo
 1803.                $I_L1803_226 = 1 + $I_L1803_226
 1803.                if ( $I_L1803_226 >= $F_A48 ) exit
 1803.             enddo
 1803.             $I_L1803_236 = 1 + $I_L1803_236
 1803.             if ( $I_L1803_236 >= 2 ) exit
 1803.          enddo
 1803.       endif
 1804.       $F_A50 = 1 + np
 1804.       $F_A51 = m
 1804.       if ( and( -$F_A51, -$F_A50 ) < 0 ) then
 1804.          $I_L1804_238 = 0
 1804.          do
 1804.             $I_L1804_228 = 0
 1804.             do
 1804.                $I_L1804_206 = 0
 1804. !dir$ ivdep
 1804.                do
 1804.                   ts(1 + $I_L1804_206, 1 + $I_L1804_228, 1 + $I_L1804_238) = 0.0
 1804.                   $I_L1804_206 = 1 + $I_L1804_206
 1804.                   if ( $I_L1804_206 >= $F_A51 ) exit
 1804.                enddo
 1804.                $I_L1804_228 = 1 + $I_L1804_228
 1804.                if ( $I_L1804_228 >= $F_A50 ) exit
 1804.             enddo
 1804.             $I_L1804_238 = 1 + $I_L1804_238
 1804.             if ( $I_L1804_238 >= 2 ) exit
 1804.          enddo
 1804.       endif
 1805.       $F_A52 = m
 1805.       if ( m > 0 ) then
 1805.          $I_L1805_230 = 0
 1805.          do
 1805.             $I_L1805_208 = 0
 1805. !dir$ ivdep
 1805.             do
 1805.                cc(1 + $I_L1805_208, 1 + $I_L1805_230) = 0.0
 1805.                $I_L1805_208 = 1 + $I_L1805_208
 1805.                if ( $I_L1805_208 >= $F_A52 ) exit
 1805.             enddo
 1805.             $I_L1805_230 = 1 + $I_L1805_230
 1805.             if ( $I_L1805_230 >= 3 ) exit
 1805.          enddo
 1805.       endif
 1812.       call cldscale( m, np, cosz(1), fcld(1, 1), taucld(1, 1, 1), ict, icb, cc(1, 1), tauclb(1, 1), tauclf(1, 1) )
 1817.       if ( np > 0 ) then
 1818.          if ( m > 0 ) then
 1817.             $I_L1817_210 = 0
 1817.             do
 1818.                $I_L1818_150 = 0
 1818. !dir$ ivdep
 1818.                do
 1820.                   asyclt(1 + $I_L1818_150) = 1.0
 1821.                   $taux_S2 = taucld(1 + $I_L1818_150, 1 + $I_L1817_210, 3) + taucld(1 + $I_L1818_150, 1 + $I_L1817_210, 2) + taucld(1 + $I_L1818_150, 1 + $I_L1817_210, 1)
 1822.                   if ( taucld(1 + $I_L1818_150, 1 + $I_L1817_210, 3) + taucld(1 + $I_L1818_150, 1 + $I_L1817_210, 2) + taucld(1 + $I_L1818_150, 1 + $I_L1817_210, 1) > 2.0e-2 ) then
 1822.                      if ( fcld(1 + $I_L1818_150, 1 + $I_L1817_210) > 1.0e-2 ) then
 1823.                         $reff1_S3 = min( 130.0, reff(1 + $I_L1818_150, 1 + $I_L1817_210, 1) )
 1824.                         $reff2_S4 = min( 20.0, reff(1 + $I_L1818_150, 1 + $I_L1817_210, 2) )
 1825.                         $g1_S7 = taucld(1 + $I_L1818_150, 1 + $I_L1817_210, 1) * ( 7.4624999999999997e-1 + $reff1_S3 * ( 1.0541000000000001e-3 + -2.6400000000000001e-6 * $reff1_S3 ) )
 1826.                         $g2_S6 = taucld(1 + $I_L1818_150, 1 + $I_L1817_210, 2) * ( 8.2562000000000002e-1 + $reff2_S4 * ( 5.2900000000000004e-3 + -1.4866e-4 * $reff2_S4 ) )
 1827.                         $g3_S5 = 8.8300000000000001e-1 * taucld(1 + $I_L1818_150, 1 + $I_L1817_210, 3)
 1828.                         asyclt(1 + $I_L1818_150) = ( 1.0/$taux_S2 * ( $g3_S5 + $g2_S6 + $g1_S7 ) )
 1828.                      endif
 1828.                   endif
 1830.                   $I_L1818_150 = 1 + $I_L1818_150
 1829.                   if ( $I_L1818_150 >= m ) exit
 1829.                enddo
 1832.                $I_L1832_152 = 0
 1832. !dir$ ivdep
 1832.                do
 1833.                   asycl(1 + $I_L1832_152, 1 + $I_L1817_210) = asyclt(1 + $I_L1832_152)
 1834.                   $I_L1832_152 = 1 + $I_L1832_152
 1832.                   if ( $I_L1832_152 >= m ) exit
 1832.                enddo
 1836.                $I_L1817_210 = 1 + $I_L1817_210
 1834.                if ( $I_L1817_210 >= np ) exit
 1834.             enddo
 1834.          endif
 1834.       endif
 1839.       $I_L1839_232 = 0
 1839.       do
 1840.          if ( np > 0 ) then
 1841.             if ( m > 0 ) then
 1845.                $SC_wk3_I3 = wk3(1 + $I_L1839_232)
 1844.                $SC_zk3_I2 = zk3(1 + $I_L1839_232)
 1843.                $SC_ry3_I1 = ry3(1 + $I_L1839_232)
 1840.                $I_L1840_212 = 0
 1840.                do
 1841.                   $I_L1841_154 = 0
 1841. !dir$ ivdep
 1841.                   do
 1843.                      $taurs_S14 = $SC_ry3_I1 * dp(1 + $I_L1841_154, 1 + $I_L1840_212)
 1844.                      $tauoz_S13 = $SC_zk3_I2 * oh(1 + $I_L1841_154, 1 + $I_L1840_212)
 1845.                      $tauwv_S12 = $SC_wk3_I3 * wh(1 + $I_L1841_154, 1 + $I_L1840_212)
 1849.                      $tausto_WR0_R0 = 1.0e-8 + $tauwv_S12 + $tauoz_S13 + $taurs_S14 + taual(1 + $I_L1841_154, 1 + $I_L1840_212, 1 + $I_L1839_232)
 1849.                      tausto(1 + $I_L1841_154, 1 + $I_L1840_212) = $tausto_WR0_R0
 1850.                      $ssatau_WR0_R1 = $taurs_S14 + taual(1 + $I_L1841_154, 1 + $I_L1840_212, 1 + $I_L1839_232) * ssaal(1 + $I_L1841_154, 1 + $I_L1840_212, 1 + $I_L1839_232)
 1850.                      ssatau(1 + $I_L1841_154, 1 + $I_L1840_212) = $ssatau_WR0_R1
 1851.                      $asysto_WR0_R2 = asyal(1 + $I_L1841_154, 1 + $I_L1840_212, 1 + $I_L1839_232) * taual(1 + $I_L1841_154, 1 + $I_L1840_212, 1 + $I_L1839_232) * ssaal(1 + $I_L1841_154, 1 + $I_L1840_212, 1 + $I_L1839_232)
 1851.                      asysto(1 + $I_L1841_154, 1 + $I_L1840_212) = $asysto_WR0_R2
 1854.                      tautob(1 + $I_L1841_154, 1 + $I_L1840_212) = $tausto_WR0_R0
 1856.                      ssatob(1 + $I_L1841_154, 1 + $I_L1840_212) = ( min( 9.9999899999999997e-1, ( 1.0e-8 + ( $ssatau_WR0_R1 * 1.0/$tausto_WR0_R0 ) ) ) )
 1857.                      asytob(1 + $I_L1841_154, 1 + $I_L1840_212) = ( $asysto_WR0_R2 * 1.0/( $tausto_WR0_R0 * ( min( 9.9999899999999997e-1, ( 1.0e-8 + ( $ssatau_WR0_R1 * 1.0/$tausto_WR0_R0 ) ) ) ) ) )
 1858.                      $I_L1841_154 = 1 + $I_L1841_154
 1841.                      if ( $I_L1841_154 >= m ) exit
 1841.                   enddo
 1862.                   $I_L1862_156 = 0
 1862. !dir$ ivdep
 1862.                   do
 1862.                      $zth_S23 = cosz(1 + $I_L1862_156)
 1862.                      $ff_S17 = asytob(1 + $I_L1862_156, 1 + $I_L1840_212) * asytob(1 + $I_L1862_156, 1 + $I_L1840_212)
 1862.                      $xx_S18 = 1.0 + -( $ff_S17 * ssatob(1 + $I_L1862_156, 1 + $I_L1840_212) )
 1862.                      $taup_S28 = $xx_S18 * tautob(1 + $I_L1862_156, 1 + $I_L1840_212)
 1862.                      $sscp_S20 = ( ssatob(1 + $I_L1862_156, 1 + $I_L1840_212) * ( 1.0 + -$ff_S17 ) * 1.0/$xx_S18 )
 1862.                      $gp_S19 = ( asytob(1 + $I_L1862_156, 1 + $I_L1840_212) * 1.0/( 1.0 + asytob(1 + $I_L1862_156, 1 + $I_L1840_212) ) )
 1862.                      $gm1_S22 = 2.5e-1 * ( 7.0 + -( $sscp_S20 * ( 4.0 + ( 3.0 * $gp_S19 ) ) ) )
 1862.                      $gm2_S21 = -2.5e-1 * ( 1.0 + -( $sscp_S20 * ( 4.0 + -( 3.0 * $gp_S19 ) ) ) )
 1862.                      $akk_S27 = _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S20 * ( 4.0 + ( 3.0 * $gp_S19 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S20 * ( 4.0 + -( 3.0 * $gp_S19 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S20 * ( 4.0 + ( 3.0 * $gp_S19 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S20 * ( 4.0 + -( 3.0 * $gp_S19 ) ) ) ) ) ) )
 1862.                      $st7_S25 = 1.0 + -( $zth_S23 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S20 * ( 4.0 + ( 3.0 * $gp_S19 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S20 * ( 4.0 + -( 3.0 * $gp_S19 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S20 * ( 4.0 + ( 3.0 * $gp_S19 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S20 * ( 4.0 + -( 3.0 * $gp_S19 ) ) ) ) ) ) ) )
 1862.                      $st8_S24 = 1.0 + ( $zth_S23 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S20 * ( 4.0 + ( 3.0 * $gp_S19 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S20 * ( 4.0 + -( 3.0 * $gp_S19 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S20 * ( 4.0 + ( 3.0 * $gp_S19 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S20 * ( 4.0 + -( 3.0 * $gp_S19 ) ) ) ) ) ) ) )
 1862.                      $st3_S26 = ( 1.0 + -( $zth_S23 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S20 * ( 4.0 + ( 3.0 * $gp_S19 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S20 * ( 4.0 + -( 3.0 * $gp_S19 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S20 * ( 4.0 + ( 3.0 * $gp_S19 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S20 * ( 4.0 + -( 3.0 * $gp_S19 ) ) ) ) ) ) ) ) ) * ( 1.0 + ( $zth_S23 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S20 * ( 4.0 + ( 3.0 * $gp_S19 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S20 * ( 4.0 + -( 3.0 * $gp_S19 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S20 * ( 4.0 + ( 3.0 * $gp_S19 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S20 * ( 4.0 + -( 3.0 * $gp_S19 ) ) ) ) ) ) ) ) )
 1862.                      if ( abs( ( ( 1.0 + -( $zth_S23 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S20 * ( 4.0 + ( 3.0 * $gp_S19 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S20 * ( 4.0 + -( 3.0 * $gp_S19 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S20 * ( 4.0 + ( 3.0 * $gp_S19 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S20 * ( 4.0 + -( 3.0 * $gp_S19 ) ) ) ) ) ) ) ) ) * ( 1.0 + ( $zth_S23 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S20 * ( 4.0 + ( 3.0 * $gp_S19 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S20 * ( 4.0 + -( 3.0 * $gp_S19 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S20 * ( 4.0 + ( 3.0 * $gp_S19 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S20 * ( 4.0 + -( 3.0 * $gp_S19 ) ) ) ) ) ) ) ) ) ) ) < 1.0e-8 ) then
 1862.                         $zth_S23 = 1.0e-3 + $zth_S23
 1862.                         $st7_S25 = 1.0 + -( $zth_S23 * $akk_S27 )
 1862.                         $st8_S24 = 1.0 + ( $zth_S23 * $akk_S27 )
 1862.                         $st3_S26 = ( 1.0 + -( $zth_S23 * $akk_S27 ) ) * ( 1.0 + ( $zth_S23 * $akk_S27 ) )
 1862.                      endif
 1862.                      $tdt_WR0_R5 = _expn( -( $taup_S28 * 1.0/$zth_S23 ) )
 1862.                      tdt(1 + $I_L1862_156, 1 + $I_L1840_212) = $tdt_WR0_R5
 1862.                      $gm3_S29 = 2.5e-1 * ( 2.0 + -3.0 * $gp_S19 * $zth_S23 )
 1862.                      $alf1_S32 = $gm1_S22 + -( ( $gm1_S22 + -$gm2_S21 ) * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S19 * $zth_S23 ) ) )
 1862.                      $temp_all_S31 = $tdt_WR0_R5 * ( 2.0 * $akk_S27 ) * ( ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S19 * $zth_S23 ) ) + -( $zth_S23 * ( $gm2_S21 + ( $gm1_S22 + -$gm2_S21 ) * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S19 * $zth_S23 ) ) ) ) )
 1862.                      $st2_S30 = _expn( -( $akk_S27 * $taup_S28 ) )
 1862.                      rrt(1 + $I_L1862_156, 1 + $I_L1840_212) = ( max( 0.0, ( ( $sscp_S20 * 1.0/( $st3_S26 * ( $gm1_S22 + $akk_S27 + ( $akk_S27 + -$gm1_S22 ) * ( $st2_S30 * $st2_S30 ) ) ) ) * ( ( $st7_S25 * ( ( $akk_S27 * $gm3_S29 ) + ( $gm2_S21 + $gm3_S29 * ( $gm1_S22 + -$gm2_S21 ) ) ) ) + -( ( $st8_S24 * ( -( $akk_S27 * $gm3_S29 ) + ( $gm2_S21 + $gm3_S29 * ( $gm1_S22 + -$gm2_S21 ) ) ) ) * ( $st2_S30 * $st2_S30 ) ) + -( $st2_S30 * $temp_all_S31 ) ) ) ) )
 1862.                      $ttt_WR0_R7 = $tdt_WR0_R5 + max( 0.0, ( -( ( $sscp_S20 * 1.0/( $st3_S26 * ( $gm1_S22 + $akk_S27 + ( $akk_S27 + -$gm1_S22 ) * ( $st2_S30 * $st2_S30 ) ) ) ) * ( -( $st2_S30 * ( ( 2.0 * $akk_S27 ) * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S19 * $zth_S23 ) ) + $zth_S23 * $alf1_S32 ) ) ) + $tdt_WR0_R5 * ( ( $st8_S24 * ( $alf1_S32 + ( $akk_S27 * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S19 * $zth_S23 ) ) ) ) ) ) + -( ( $st2_S30 * $st2_S30 ) * ( $st7_S25 * ( $alf1_S32 + -( $akk_S27 * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S19 * $zth_S23 ) ) ) ) ) ) ) ) ) ) ) )
 1862.                      ttt(1 + $I_L1862_156, 1 + $I_L1840_212) = $ttt_WR0_R7
 1862.                      $I_L1862_156 = 1 + $I_L1862_156
 1862.                      if ( $I_L1862_156 >= m ) exit
 1862.                   enddo
 1859.                   $I_L1840_212 = 1 + $I_L1840_212
 1858.                   if ( $I_L1840_212 >= np ) exit
 1858.                enddo
 1866.                $I_L1866_214 = 0
 1866. !dir$ blocking_size( 1, 1 )
 1866.                do
 1866.                   $I_L1866_158 = 0
 1866. !dir$ ivdep
 1866. !dir$ blocking_size( 256, 256 )
 1866.                   do
 1866.                      $zth_S41 = dsm(1 + $I_L1866_158)
 1866.                      $ff_S35 = asytob(1 + $I_L1866_158, 1 + $I_L1866_214) * asytob(1 + $I_L1866_158, 1 + $I_L1866_214)
 1866.                      $xx_S36 = 1.0 + -( $ff_S35 * ssatob(1 + $I_L1866_158, 1 + $I_L1866_214) )
 1866.                      $taup_S45 = $xx_S36 * tautob(1 + $I_L1866_158, 1 + $I_L1866_214)
 1866.                      $sscp_S38 = ( ssatob(1 + $I_L1866_158, 1 + $I_L1866_214) * ( 1.0 + -$ff_S35 ) * 1.0/$xx_S36 )
 1866.                      $gp_S37 = ( asytob(1 + $I_L1866_158, 1 + $I_L1866_214) * 1.0/( 1.0 + asytob(1 + $I_L1866_158, 1 + $I_L1866_214) ) )
 1866.                      $gm1_S40 = 2.5e-1 * ( 7.0 + -( $sscp_S38 * ( 4.0 + ( 3.0 * $gp_S37 ) ) ) )
 1866.                      $gm2_S39 = -2.5e-1 * ( 1.0 + -( $sscp_S38 * ( 4.0 + -( 3.0 * $gp_S37 ) ) ) )
 1866.                      $akk_S44 = _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S38 * ( 4.0 + ( 3.0 * $gp_S37 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S38 * ( 4.0 + -( 3.0 * $gp_S37 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S38 * ( 4.0 + ( 3.0 * $gp_S37 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S38 * ( 4.0 + -( 3.0 * $gp_S37 ) ) ) ) ) ) )
 1866.                      $st7_S43 = 1.0 + -( $zth_S41 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S38 * ( 4.0 + ( 3.0 * $gp_S37 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S38 * ( 4.0 + -( 3.0 * $gp_S37 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S38 * ( 4.0 + ( 3.0 * $gp_S37 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S38 * ( 4.0 + -( 3.0 * $gp_S37 ) ) ) ) ) ) ) )
 1866.                      $st8_S42 = 1.0 + ( $zth_S41 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S38 * ( 4.0 + ( 3.0 * $gp_S37 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S38 * ( 4.0 + -( 3.0 * $gp_S37 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S38 * ( 4.0 + ( 3.0 * $gp_S37 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S38 * ( 4.0 + -( 3.0 * $gp_S37 ) ) ) ) ) ) ) )
 1866.                      $st3_S49 = ( 1.0 + ( $zth_S41 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S38 * ( 4.0 + ( 3.0 * $gp_S37 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S38 * ( 4.0 + -( 3.0 * $gp_S37 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S38 * ( 4.0 + ( 3.0 * $gp_S37 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S38 * ( 4.0 + -( 3.0 * $gp_S37 ) ) ) ) ) ) ) ) ) * ( 1.0 + -( $zth_S41 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S38 * ( 4.0 + ( 3.0 * $gp_S37 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S38 * ( 4.0 + -( 3.0 * $gp_S37 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S38 * ( 4.0 + ( 3.0 * $gp_S37 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S38 * ( 4.0 + -( 3.0 * $gp_S37 ) ) ) ) ) ) ) ) )
 1866.                      if ( abs( ( ( 1.0 + ( $zth_S41 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S38 * ( 4.0 + ( 3.0 * $gp_S37 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S38 * ( 4.0 + -( 3.0 * $gp_S37 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S38 * ( 4.0 + ( 3.0 * $gp_S37 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S38 * ( 4.0 + -( 3.0 * $gp_S37 ) ) ) ) ) ) ) ) ) * ( 1.0 + -( $zth_S41 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S38 * ( 4.0 + ( 3.0 * $gp_S37 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S38 * ( 4.0 + -( 3.0 * $gp_S37 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S38 * ( 4.0 + ( 3.0 * $gp_S37 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S38 * ( 4.0 + -( 3.0 * $gp_S37 ) ) ) ) ) ) ) ) ) ) ) < 1.0e-8 ) then
 1866.                         $zth_S41 = 1.0e-3 + $zth_S41
 1866.                         $st7_S43 = 1.0 + -( $zth_S41 * $akk_S44 )
 1866.                         $st8_S42 = 1.0 + ( $zth_S41 * $akk_S44 )
 1866.                         $st3_S49 = ( 1.0 + -( $zth_S41 * $akk_S44 ) ) * ( 1.0 + ( $zth_S41 * $akk_S44 ) )
 1866.                      endif
 1866.                      $dum_WR0_R8 = _expn( -( $taup_S45 * 1.0/$zth_S41 ) )
 1866.                      $gm3_S46 = 2.5e-1 * ( 2.0 + -3.0 * $gp_S37 * $zth_S41 )
 1866.                      $alf1_S50 = $gm1_S40 + -( ( $gm1_S40 + -$gm2_S39 ) * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S37 * $zth_S41 ) ) )
 1866.                      $temp_all_S48 = $dum_WR0_R8 * ( 2.0 * $akk_S44 ) * ( ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S37 * $zth_S41 ) ) + -( $zth_S41 * ( $gm2_S39 + ( $gm1_S40 + -$gm2_S39 ) * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S37 * $zth_S41 ) ) ) ) )
 1866.                      $st2_S47 = _expn( -( $akk_S44 * $taup_S45 ) )
 1866.                      rst(1 + $I_L1866_158, 1 + $I_L1866_214) = ( max( 0.0, ( ( ( $st7_S43 * ( ( $akk_S44 * $gm3_S46 ) + ( $gm2_S39 + $gm3_S46 * ( $gm1_S40 + -$gm2_S39 ) ) ) ) + -( ( $st8_S42 * ( -( $akk_S44 * $gm3_S46 ) + ( $gm2_S39 + $gm3_S46 * ( $gm1_S40 + -$gm2_S39 ) ) ) ) * ( $st2_S47 * $st2_S47 ) ) + -( $st2_S47 * $temp_all_S48 ) ) * ( $sscp_S38 * 1.0/( $st3_S49 * ( $gm1_S40 + $akk_S44 + ( $akk_S44 + -$gm1_S40 ) * ( $st2_S47 * $st2_S47 ) ) ) ) ) ) )
 1866.                      $tst_WR0_R10 = $dum_WR0_R8 + max( 0.0, ( -( ( $sscp_S38 * 1.0/( $st3_S49 * ( $gm1_S40 + $akk_S44 + ( $akk_S44 + -$gm1_S40 ) * ( $st2_S47 * $st2_S47 ) ) ) ) * ( -( $st2_S47 * ( ( 2.0 * $akk_S44 ) * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S37 * $zth_S41 ) ) + $zth_S41 * $alf1_S50 ) ) ) + $dum_WR0_R8 * ( ( $st8_S42 * ( $alf1_S50 + ( $akk_S44 * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S37 * $zth_S41 ) ) ) ) ) ) + -( ( $st2_S47 * $st2_S47 ) * ( $st7_S43 * ( $alf1_S50 + -( $akk_S44 * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S37 * $zth_S41 ) ) ) ) ) ) ) ) ) ) ) )
 1866.                      tst(1 + $I_L1866_158, 1 + $I_L1866_214) = $tst_WR0_R10
 1866.                      $I_L1866_158 = 1 + $I_L1866_158
 1866.                      if ( $I_L1866_158 >= m ) exit
 1866.                   enddo
 1866.                   $I_L1866_214 = 1 + $I_L1866_214
 1866.                   if ( $I_L1866_214 >= np ) exit
 1866.                enddo
 1868.                $I_L1868_216 = 0
 1868.                do
 1869.                   $I_L1869_160 = 0
 1869. !dir$ ivdep
 1869.                   do
 1870.                      rr(1 + $I_L1869_160, 1 + $I_L1868_216, 1) = rrt(1 + $I_L1869_160, 1 + $I_L1868_216)
 1871.                      tt(1 + $I_L1869_160, 1 + $I_L1868_216, 1) = ttt(1 + $I_L1869_160, 1 + $I_L1868_216)
 1872.                      td(1 + $I_L1869_160, 1 + $I_L1868_216, 1) = tdt(1 + $I_L1869_160, 1 + $I_L1868_216)
 1873.                      rs(1 + $I_L1869_160, 1 + $I_L1868_216, 1) = rst(1 + $I_L1869_160, 1 + $I_L1868_216)
 1874.                      ts(1 + $I_L1869_160, 1 + $I_L1868_216, 1) = tst(1 + $I_L1869_160, 1 + $I_L1868_216)
 1875.                      $I_L1869_160 = 1 + $I_L1869_160
 1869.                      if ( $I_L1869_160 >= m ) exit
 1869.                   enddo
 1880.                   $I_L1880_162 = 0
 1880. !dir$ ivdep
 1880.                   do
 1884.                      $tautob_WR0_R11 = tauclb(1 + $I_L1880_162, 1 + $I_L1868_216) + tausto(1 + $I_L1880_162, 1 + $I_L1868_216)
 1884.                      tautob(1 + $I_L1880_162, 1 + $I_L1868_216) = $tautob_WR0_R11
 1885.                      $ssatob_WR0_R12 = 1.0e-8 + ( 1.0/$tautob_WR0_R11 * ( tauclb(1 + $I_L1880_162, 1 + $I_L1868_216) + ssatau(1 + $I_L1880_162, 1 + $I_L1868_216) ) )
 1886.                      $ssatob_WR0_R12 = min( 9.9999899999999997e-1, $ssatob_WR0_R12 )
 1886.                      ssatob(1 + $I_L1880_162, 1 + $I_L1868_216) = $ssatob_WR0_R12
 1887.                      asytob(1 + $I_L1880_162, 1 + $I_L1868_216) = ( 1.0/( $tautob_WR0_R11 * $ssatob_WR0_R12 ) * ( asysto(1 + $I_L1880_162, 1 + $I_L1868_216) + tauclb(1 + $I_L1880_162, 1 + $I_L1868_216) * asycl(1 + $I_L1880_162, 1 + $I_L1868_216) ) )
 1891.                      $tautof_WR0_R13 = tausto(1 + $I_L1880_162, 1 + $I_L1868_216) + tauclf(1 + $I_L1880_162, 1 + $I_L1868_216)
 1891.                      tautof(1 + $I_L1880_162, 1 + $I_L1868_216) = $tautof_WR0_R13
 1892.                      $ssatof_WR0_R14 = 1.0e-8 + ( 1.0/$tautof_WR0_R13 * ( ssatau(1 + $I_L1880_162, 1 + $I_L1868_216) + tauclf(1 + $I_L1880_162, 1 + $I_L1868_216) ) )
 1893.                      $ssatof_WR0_R14 = min( 9.9999899999999997e-1, $ssatof_WR0_R14 )
 1893.                      ssatof(1 + $I_L1880_162, 1 + $I_L1868_216) = $ssatof_WR0_R14
 1894.                      asytof(1 + $I_L1880_162, 1 + $I_L1868_216) = ( 1.0/( $tautof_WR0_R13 * $ssatof_WR0_R14 ) * ( asysto(1 + $I_L1880_162, 1 + $I_L1868_216) + asycl(1 + $I_L1880_162, 1 + $I_L1868_216) * tauclf(1 + $I_L1880_162, 1 + $I_L1868_216) ) )
 1896.                      $I_L1880_162 = 1 + $I_L1880_162
 1880.                      if ( $I_L1880_162 >= m ) exit
 1880.                   enddo
 1903.                   $I_L1903_164 = 0
 1903. !dir$ ivdep
 1903.                   do
 1903.                      $zth_S63 = cosz(1 + $I_L1903_164)
 1903.                      $ff_S57 = asytob(1 + $I_L1903_164, 1 + $I_L1868_216) * asytob(1 + $I_L1903_164, 1 + $I_L1868_216)
 1903.                      $xx_S58 = 1.0 + -( $ff_S57 * ssatob(1 + $I_L1903_164, 1 + $I_L1868_216) )
 1903.                      $taup_S65 = $xx_S58 * tautob(1 + $I_L1903_164, 1 + $I_L1868_216)
 1903.                      $sscp_S60 = ( ssatob(1 + $I_L1903_164, 1 + $I_L1868_216) * ( 1.0 + -$ff_S57 ) * 1.0/$xx_S58 )
 1903.                      $gp_S59 = ( asytob(1 + $I_L1903_164, 1 + $I_L1868_216) * 1.0/( 1.0 + asytob(1 + $I_L1903_164, 1 + $I_L1868_216) ) )
 1903.                      $gm1_S62 = 2.5e-1 * ( 7.0 + -( $sscp_S60 * ( 4.0 + ( 3.0 * $gp_S59 ) ) ) )
 1903.                      $gm2_S61 = -2.5e-1 * ( 1.0 + -( $sscp_S60 * ( 4.0 + -( 3.0 * $gp_S59 ) ) ) )
 1903.                      $akk_S64 = _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S60 * ( 4.0 + ( 3.0 * $gp_S59 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S60 * ( 4.0 + -( 3.0 * $gp_S59 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S60 * ( 4.0 + ( 3.0 * $gp_S59 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S60 * ( 4.0 + -( 3.0 * $gp_S59 ) ) ) ) ) ) )
 1903.                      $st7_S67 = 1.0 + -( $zth_S63 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S60 * ( 4.0 + ( 3.0 * $gp_S59 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S60 * ( 4.0 + -( 3.0 * $gp_S59 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S60 * ( 4.0 + ( 3.0 * $gp_S59 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S60 * ( 4.0 + -( 3.0 * $gp_S59 ) ) ) ) ) ) ) )
 1903.                      $st8_S68 = 1.0 + ( $zth_S63 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S60 * ( 4.0 + ( 3.0 * $gp_S59 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S60 * ( 4.0 + -( 3.0 * $gp_S59 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S60 * ( 4.0 + ( 3.0 * $gp_S59 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S60 * ( 4.0 + -( 3.0 * $gp_S59 ) ) ) ) ) ) ) )
 1903.                      $st3_S71 = ( 1.0 + ( $zth_S63 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S60 * ( 4.0 + ( 3.0 * $gp_S59 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S60 * ( 4.0 + -( 3.0 * $gp_S59 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S60 * ( 4.0 + ( 3.0 * $gp_S59 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S60 * ( 4.0 + -( 3.0 * $gp_S59 ) ) ) ) ) ) ) ) ) * ( 1.0 + -( $zth_S63 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S60 * ( 4.0 + ( 3.0 * $gp_S59 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S60 * ( 4.0 + -( 3.0 * $gp_S59 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S60 * ( 4.0 + ( 3.0 * $gp_S59 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S60 * ( 4.0 + -( 3.0 * $gp_S59 ) ) ) ) ) ) ) ) )
 1903.                      if ( abs( ( ( 1.0 + ( $zth_S63 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S60 * ( 4.0 + ( 3.0 * $gp_S59 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S60 * ( 4.0 + -( 3.0 * $gp_S59 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S60 * ( 4.0 + ( 3.0 * $gp_S59 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S60 * ( 4.0 + -( 3.0 * $gp_S59 ) ) ) ) ) ) ) ) ) * ( 1.0 + -( $zth_S63 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S60 * ( 4.0 + ( 3.0 * $gp_S59 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S60 * ( 4.0 + -( 3.0 * $gp_S59 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S60 * ( 4.0 + ( 3.0 * $gp_S59 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S60 * ( 4.0 + -( 3.0 * $gp_S59 ) ) ) ) ) ) ) ) ) ) ) < 1.0e-8 ) then
 1903.                         $zth_S63 = 1.0e-3 + $zth_S63
 1903.                         $st7_S67 = 1.0 + -( $zth_S63 * $akk_S64 )
 1903.                         $st8_S68 = 1.0 + ( $zth_S63 * $akk_S64 )
 1903.                         $st3_S71 = ( 1.0 + -( $zth_S63 * $akk_S64 ) ) * ( 1.0 + ( $zth_S63 * $akk_S64 ) )
 1903.                      endif
 1903.                      $tdt_WR0_R15 = _expn( -( $taup_S65 * 1.0/$zth_S63 ) )
 1903.                      tdt(1 + $I_L1903_164, 1 + $I_L1868_216) = $tdt_WR0_R15
 1903.                      $gm3_S66 = 2.5e-1 * ( 2.0 + -3.0 * $gp_S59 * $zth_S63 )
 1903.                      $alf1_S72 = $gm1_S62 + -( ( $gm1_S62 + -$gm2_S61 ) * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S59 * $zth_S63 ) ) )
 1903.                      $temp_all_S70 = $tdt_WR0_R15 * ( ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S59 * $zth_S63 ) ) + -( $zth_S63 * ( $gm2_S61 + ( $gm1_S62 + -$gm2_S61 ) * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S59 * $zth_S63 ) ) ) ) ) * ( 2.0 * $akk_S64 )
 1903.                      $st2_S69 = _expn( -( $akk_S64 * $taup_S65 ) )
 1903.                      $ttt_WR0_R17 = -( ( $sscp_S60 * 1.0/( $st3_S71 * ( $gm1_S62 + $akk_S64 + ( $akk_S64 + -$gm1_S62 ) * ( $st2_S69 * $st2_S69 ) ) ) ) * ( -( $st2_S69 * ( ( 2.0 * $akk_S64 ) * ( 1.0 + -$gm3_S66 + $zth_S63 * $alf1_S72 ) ) ) + $tdt_WR0_R15 * ( ( $st8_S68 * ( ( $akk_S64 * ( 1.0 + -$gm3_S66 ) ) + ( $gm1_S62 + -( $gm3_S66 * ( $gm1_S62 + -$gm2_S61 ) ) ) ) ) + -( ( $st7_S67 * ( -( $akk_S64 * ( 1.0 + -$gm3_S66 ) ) + ( $gm1_S62 + -( $gm3_S66 * ( $gm1_S62 + -$gm2_S61 ) ) ) ) ) * ( $st2_S69 * $st2_S69 ) ) ) ) )
 1903.                      $rrt_WR0_R16 = max( 0.0, ( ( ( $st7_S67 * ( ( $akk_S64 * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S59 * $zth_S63 ) ) ) + ( $gm2_S61 + $gm3_S66 * ( $gm1_S62 + -$gm2_S61 ) ) ) ) + -( ( $st8_S68 * ( -( $akk_S64 * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S59 * $zth_S63 ) ) ) + ( $gm2_S61 + $gm3_S66 * ( $gm1_S62 + -$gm2_S61 ) ) ) ) * ( $st2_S69 * $st2_S69 ) ) + -( $st2_S69 * $temp_all_S70 ) ) * ( $sscp_S60 * 1.0/( $st3_S71 * ( $gm1_S62 + $akk_S64 + ( $akk_S64 + -$gm1_S62 ) * ( $st2_S69 * $st2_S69 ) ) ) ) ) )
 1903.                      rrt(1 + $I_L1903_164, 1 + $I_L1868_216) = $rrt_WR0_R16
 1903.                      $ttt_WR0_R17 = $tdt_WR0_R15 + max( 0.0, $ttt_WR0_R17 )
 1903.                      ttt(1 + $I_L1903_164, 1 + $I_L1868_216) = $ttt_WR0_R17
 1903.                      $I_L1903_164 = 1 + $I_L1903_164
 1903.                      if ( $I_L1903_164 >= m ) exit
 1903.                   enddo
 1876.                   $I_L1868_216 = 1 + $I_L1868_216
 1875.                   if ( $I_L1868_216 >= np ) exit
 1875.                enddo
 1908.                $I_L1908_218 = 0
 1908. !dir$ blocking_size( 1, 1 )
 1908.                do
 1908.                   $I_L1908_166 = 0
 1908. !dir$ ivdep
 1908. !dir$ blocking_size( 256, 256 )
 1908.                   do
 1908.                      $zth_S79 = dsm(1 + $I_L1908_166)
 1908.                      $ff_S75 = asytof(1 + $I_L1908_166, 1 + $I_L1908_218) * asytof(1 + $I_L1908_166, 1 + $I_L1908_218)
 1908.                      $xx_S76 = 1.0 + -( $ff_S75 * ssatof(1 + $I_L1908_166, 1 + $I_L1908_218) )
 1908.                      $taup_S82 = $xx_S76 * tautof(1 + $I_L1908_166, 1 + $I_L1908_218)
 1908.                      $sscp_S78 = ( ssatof(1 + $I_L1908_166, 1 + $I_L1908_218) * ( 1.0 + -$ff_S75 ) * 1.0/$xx_S76 )
 1908.                      $gp_S77 = ( asytof(1 + $I_L1908_166, 1 + $I_L1908_218) * 1.0/( 1.0 + asytof(1 + $I_L1908_166, 1 + $I_L1908_218) ) )
 1908.                      $gm1_S84 = 2.5e-1 * ( 7.0 + -( $sscp_S78 * ( 4.0 + ( 3.0 * $gp_S77 ) ) ) )
 1908.                      $gm2_S83 = -2.5e-1 * ( 1.0 + -( $sscp_S78 * ( 4.0 + -( 3.0 * $gp_S77 ) ) ) )
 1908.                      $akk_S81 = _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S78 * ( 4.0 + ( 3.0 * $gp_S77 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S78 * ( 4.0 + -( 3.0 * $gp_S77 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S78 * ( 4.0 + ( 3.0 * $gp_S77 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S78 * ( 4.0 + -( 3.0 * $gp_S77 ) ) ) ) ) ) )
 1908.                      $st7_S85 = 1.0 + -( $zth_S79 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S78 * ( 4.0 + ( 3.0 * $gp_S77 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S78 * ( 4.0 + -( 3.0 * $gp_S77 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S78 * ( 4.0 + ( 3.0 * $gp_S77 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S78 * ( 4.0 + -( 3.0 * $gp_S77 ) ) ) ) ) ) ) )
 1908.                      $st8_S86 = 1.0 + ( $zth_S79 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S78 * ( 4.0 + ( 3.0 * $gp_S77 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S78 * ( 4.0 + -( 3.0 * $gp_S77 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S78 * ( 4.0 + ( 3.0 * $gp_S77 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S78 * ( 4.0 + -( 3.0 * $gp_S77 ) ) ) ) ) ) ) )
 1908.                      $st3_S80 = ( 1.0 + ( $zth_S79 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S78 * ( 4.0 + ( 3.0 * $gp_S77 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S78 * ( 4.0 + -( 3.0 * $gp_S77 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S78 * ( 4.0 + ( 3.0 * $gp_S77 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S78 * ( 4.0 + -( 3.0 * $gp_S77 ) ) ) ) ) ) ) ) ) * ( 1.0 + -( $zth_S79 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S78 * ( 4.0 + ( 3.0 * $gp_S77 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S78 * ( 4.0 + -( 3.0 * $gp_S77 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S78 * ( 4.0 + ( 3.0 * $gp_S77 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S78 * ( 4.0 + -( 3.0 * $gp_S77 ) ) ) ) ) ) ) ) )
 1908.                      if ( abs( $st3_S80 ) < 1.0e-8 ) then
 1908.                         $zth_S79 = 1.0e-3 + $zth_S79
 1908.                         $st7_S85 = 1.0 + -( $zth_S79 * $akk_S81 )
 1908.                         $st8_S86 = 1.0 + ( $zth_S79 * $akk_S81 )
 1908.                         $st3_S80 = ( 1.0 + -( $zth_S79 * $akk_S81 ) ) * ( 1.0 + ( $zth_S79 * $akk_S81 ) )
 1908.                      endif
 1908.                      $dum_WR0_R18 = _expn( -( $taup_S82 * 1.0/$zth_S79 ) )
 1908.                      $alf1_S89 = $gm1_S84 + -( ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S77 * $zth_S79 ) ) * ( $gm1_S84 + -$gm2_S83 ) )
 1908.                      $temp_all_S88 = $dum_WR0_R18 * ( 2.0 * $akk_S81 ) * ( ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S77 * $zth_S79 ) ) + -( $zth_S79 * ( $gm2_S83 + ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S77 * $zth_S79 ) ) * ( $gm1_S84 + -$gm2_S83 ) ) ) )
 1908.                      $bll_S90 = ( 2.0 * $akk_S81 ) * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S77 * $zth_S79 ) ) + $zth_S79 * ( $gm1_S84 + -( ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S77 * $zth_S79 ) ) * ( $gm1_S84 + -$gm2_S83 ) ) ) )
 1908.                      $st2_S87 = _expn( -( $akk_S81 * $taup_S82 ) )
 1908.                      $rst_WR0_R19 = max( 0.0, ( ( $sscp_S78 * 1.0/( $st3_S80 * ( $akk_S81 + $gm1_S84 + ( $akk_S81 + -$gm1_S84 ) * ( $st2_S87 * $st2_S87 ) ) ) ) * ( ( $st7_S85 * ( ( $akk_S81 * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S77 * $zth_S79 ) ) ) + ( $gm2_S83 + ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S77 * $zth_S79 ) ) * ( $gm1_S84 + -$gm2_S83 ) ) ) ) + -( ( $st8_S86 * ( -( $akk_S81 * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S77 * $zth_S79 ) ) ) + ( $gm2_S83 + ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S77 * $zth_S79 ) ) * ( $gm1_S84 + -$gm2_S83 ) ) ) ) * ( $st2_S87 * $st2_S87 ) ) + -( $st2_S87 * $temp_all_S88 ) ) ) )
 1908.                      rst(1 + $I_L1908_166, 1 + $I_L1908_218) = $rst_WR0_R19
 1908.                      $tst_WR0_R20 = $dum_WR0_R18 + max( 0.0, ( -( ( $sscp_S78 * 1.0/( $st3_S80 * ( $akk_S81 + $gm1_S84 + ( $akk_S81 + -$gm1_S84 ) * ( $st2_S87 * $st2_S87 ) ) ) ) * ( -( $st2_S87 * $bll_S90 ) + $dum_WR0_R18 * ( -( ( $st2_S87 * $st2_S87 ) * ( $st7_S85 * ( $alf1_S89 + -( $akk_S81 * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S77 * $zth_S79 ) ) ) ) ) ) ) + ( $st8_S86 * ( $alf1_S89 + ( $akk_S81 * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S77 * $zth_S79 ) ) ) ) ) ) ) ) ) ) )
 1908.                      tst(1 + $I_L1908_166, 1 + $I_L1908_218) = $tst_WR0_R20
 1908.                      $I_L1908_166 = 1 + $I_L1908_166
 1908.                      if ( $I_L1908_166 >= m ) exit
 1908.                   enddo
 1908.                   $I_L1908_218 = 1 + $I_L1908_218
 1908.                   if ( $I_L1908_218 >= np ) exit
 1908.                enddo
 1910.                $I_L1910_220 = 0
 1910.                do
 1911.                   $I_L1911_168 = 0
 1911. !dir$ ivdep
 1911.                   do
 1912.                      rr(1 + $I_L1911_168, 1 + $I_L1910_220, 2) = rrt(1 + $I_L1911_168, 1 + $I_L1910_220)
 1913.                      tt(1 + $I_L1911_168, 1 + $I_L1910_220, 2) = ttt(1 + $I_L1911_168, 1 + $I_L1910_220)
 1914.                      td(1 + $I_L1911_168, 1 + $I_L1910_220, 2) = tdt(1 + $I_L1911_168, 1 + $I_L1910_220)
 1915.                      rs(1 + $I_L1911_168, 1 + $I_L1910_220, 2) = rst(1 + $I_L1911_168, 1 + $I_L1910_220)
 1916.                      ts(1 + $I_L1911_168, 1 + $I_L1910_220, 2) = tst(1 + $I_L1911_168, 1 + $I_L1910_220)
 1917.                      $I_L1911_168 = 1 + $I_L1911_168
 1911.                      if ( $I_L1911_168 >= m ) exit
 1911.                   enddo
 1918.                   $I_L1910_220 = 1 + $I_L1910_220
 1917.                   if ( $I_L1910_220 >= np ) exit
 1917.                enddo
 1917.             endif
 1917.          endif
 1862.          t$102 = m
 1862.          t$103 = np
 1862.          t$617 = max( 0, m )
 1862.          t$618 = max( 0, m )
 1862.          t$619 = max( 0, np )
 1862.          t$620 = max( 0, m ) * max( 0, np )
 1866.          t$102 = m
 1866.          t$103 = np
 1866.          t$617 = max( 0, m )
 1866.          t$618 = max( 0, m )
 1866.          t$619 = max( 0, np )
 1866.          t$620 = max( 0, m ) * max( 0, np )
 1903.          t$102 = m
 1903.          t$103 = np
 1903.          t$617 = max( 0, m )
 1903.          t$618 = max( 0, m )
 1903.          t$619 = max( 0, np )
 1903.          t$620 = max( 0, m ) * max( 0, np )
 1908.          t$102 = m
 1908.          t$103 = np
 1908.          t$617 = max( 0, m )
 1908.          t$618 = max( 0, m )
 1908.          t$619 = max( 0, np )
 1908.          t$620 = max( 0, m ) * max( 0, np )
 1941.          ih1 = 1
 1942.          ih2 = 2
 1943.          im1 = 1
 1944.          im2 = 2
 1945.          is1 = 1
 1946.          is2 = 2
 1948.          call cldflx( m, np, ict, icb, ih1, ih2, im1, im2, is1, is2, cc(1, 1), rr(1, 1, 1), tt(1, 1, 1), td(1, 1, 1), rs(1, 1, 1), ts(1, 1, 1), fclr(1, 1), fall(1, 1), fsdir(1), fsdif(1), fsdir_c(1), fsdif_c(1), fclr_d(1, 1), fclr_u(1, 1), fall_d(1, 1), fall_u(1, 1) )
 1954.          if ( np >= 0 ) then
 1955.             if ( m > 0 ) then
 1956.                $SC_hk3_I4 = hk3(1 + $I_L1839_232)
 1954.                $I_L1954_222 = 0
 1954.                do
 1955.                   $I_L1955_170 = 0
 1955. !dir$ ivdep
 1955.                   do
 1958.                      flx_u(1 + $I_L1955_170, 1 + $I_L1954_222) = flx_u(1 + $I_L1955_170, 1 + $I_L1954_222) + $SC_hk3_I4 * fall_u(1 + $I_L1955_170, 1 + $I_L1954_222)
 1957.                      flx_d(1 + $I_L1955_170, 1 + $I_L1954_222) = flx_d(1 + $I_L1955_170, 1 + $I_L1954_222) + $SC_hk3_I4 * fall_d(1 + $I_L1955_170, 1 + $I_L1954_222)
 1956.                      flx(1 + $I_L1955_170, 1 + $I_L1954_222) = flx(1 + $I_L1955_170, 1 + $I_L1954_222) + $SC_hk3_I4 * fall(1 + $I_L1955_170, 1 + $I_L1954_222)
 1964.                      flc_u(1 + $I_L1955_170, 1 + $I_L1954_222) = flc_u(1 + $I_L1955_170, 1 + $I_L1954_222) + $SC_hk3_I4 * fclr_u(1 + $I_L1955_170, 1 + $I_L1954_222)
 1963.                      flc_d(1 + $I_L1955_170, 1 + $I_L1954_222) = flc_d(1 + $I_L1955_170, 1 + $I_L1954_222) + $SC_hk3_I4 * fclr_d(1 + $I_L1955_170, 1 + $I_L1954_222)
 1962.                      flc(1 + $I_L1955_170, 1 + $I_L1954_222) = flc(1 + $I_L1955_170, 1 + $I_L1954_222) + $SC_hk3_I4 * fclr(1 + $I_L1955_170, 1 + $I_L1954_222)
 1959.                      $I_L1955_170 = 1 + $I_L1955_170
 1955.                      if ( $I_L1955_170 >= m ) exit
 1955.                   enddo
 1966.                   $I_L1954_222 = 1 + $I_L1954_222
 1965.                   if ( $I_L1954_222 >= 1 + np ) exit
 1965.                enddo
 1965.             endif
 1965.          endif
 1970.          if ( ( 1 + $I_L1839_232 ) < 8 ) then
 1971.             if ( m > 0 ) then
 1972.                $SC_hk3_I0 = hk3(1 + $I_L1839_232)
 1971.                $I_L1971_172 = 0
 1971. !dir$ ivdep
 1971.                do
 1975.                   fdifuv_c(1 + $I_L1971_172) = fdifuv_c(1 + $I_L1971_172) + $SC_hk3_I0 * fsdif_c(1 + $I_L1971_172)
 1974.                   fdiruv_c(1 + $I_L1971_172) = fdiruv_c(1 + $I_L1971_172) + $SC_hk3_I0 * fsdir_c(1 + $I_L1971_172)
 1973.                   fdifuv(1 + $I_L1971_172) = fdifuv(1 + $I_L1971_172) + $SC_hk3_I0 * fsdif(1 + $I_L1971_172)
 1972.                   fdiruv(1 + $I_L1971_172) = fdiruv(1 + $I_L1971_172) + $SC_hk3_I0 * fsdir(1 + $I_L1971_172)
 1976.                   $I_L1971_172 = 1 + $I_L1971_172
 1971.                   if ( $I_L1971_172 >= m ) exit
 1971.                enddo
 1971.             endif
 1977.          else if ( m > 0 ) then
 1979.             $SC_hk3_I0 = hk3(1 + $I_L1839_232)
 1978.             $I_L1978_174 = 0
 1978. !dir$ ivdep
 1978.             do
 1979.                fdirpar(1 + $I_L1978_174) = $SC_hk3_I0 * fsdir(1 + $I_L1978_174)
 1980.                fdifpar(1 + $I_L1978_174) = $SC_hk3_I0 * fsdif(1 + $I_L1978_174)
 1981.                fdirpar_c(1 + $I_L1978_174) = $SC_hk3_I0 * fsdir_c(1 + $I_L1978_174)
 1982.                fdifpar_c(1 + $I_L1978_174) = $SC_hk3_I0 * fsdif_c(1 + $I_L1978_174)
 1983.                $I_L1978_174 = 1 + $I_L1978_174
 1978.                if ( $I_L1978_174 >= m ) exit
 1978.             enddo
 1978.          endif
 1986.          $I_L1839_232 = 1 + $I_L1839_232
 1984.          if ( $I_L1839_232 >= 8 ) exit
 1984.       enddo
 1709.       _free( t$499 )
 1988.       return
 1988.       end
 1988.       
 2027.       
 2027.       subroutine cldscale( m, np, cosz, fcld, taucld, ict, icb, cc, tauclb, tauclf )
 2027.       t$100 = m
 2059.       t$610 = _zla( 0, m )
 2027.       t$101 = np
 2027.       t$611 = _zla( 0, m )
 2060.       t$612 = _zla( 0, np )
 2027.       t$613 = _zla( 0, m ) * _zla( 0, np )
 2027.       t$614 = _zla( 0, m ) * _zla( 0, np )
 2027.       t$615 = 3 * _zla( 0, m ) * _zla( 0, np )
 2027.       t$616 = 3 * _zla( 0, m )
 2081.       if ( m > 0 ) then
 2081.          $I_L2081_36 = 0
 2081. !dir$ ivdep
 2081.          do
 2082.             cc(1 + $I_L2081_36, 1) = 0.0
 2083.             cc(1 + $I_L2081_36, 2) = 0.0
 2084.             cc(1 + $I_L2081_36, 3) = 0.0
 2085.             $I_L2081_36 = 1 + $I_L2081_36
 2081.             if ( $I_L2081_36 >= m ) exit
 2081.          enddo
 2081.       endif
 2087.       if ( -1 + ict > 0 ) then
 2088.          if ( m > 0 ) then
 2087.             $SI_L2087_46_G1 = 0
 2087.             do
 2088.                $SI_L2088_38_G4 = 0
 2088.                do
 2087.                   $I_L2087_63 = 0
 2087. !dir$ shortloop16
 2087. !dir$ blocking_size( 4, 4 )
 2087.                   do
 2088.                      $I_L2088_54 = 0
 2088. !dir$ ivdep
 2088. !dir$ blocking_size( 256, 256 )
 2088.                      do
 2089.                         cc(1 + $I_L2088_54 + 256 * $SI_L2088_38_G4, 1) = max( cc(1 + $I_L2088_54 + 256 * $SI_L2088_38_G4, 1), fcld(1 + $I_L2088_54 + 256 * $SI_L2088_38_G4, 1 + $I_L2087_63 + 4 * $SI_L2087_46_G1) )
 2088.                         $I_L2088_54 = 1 + $I_L2088_54
 2088.                         if ( $I_L2088_54 >= min( m, 256 + 256 * $SI_L2088_38_G4 ) + -256 * $SI_L2088_38_G4 ) exit
 2088.                      enddo
 2087.                      $I_L2087_63 = 1 + $I_L2087_63
 2087.                      if ( $I_L2087_63 >= min( -1 + ict, 4 + 4 * $SI_L2087_46_G1 ) + -4 * $SI_L2087_46_G1 ) exit
 2087.                   enddo
 2088.                   $SI_L2088_38_G4 = 1 + $SI_L2088_38_G4
 2090.                   if ( $SI_L2088_38_G4 >= _rsh( 255 + m, 8 ) ) exit
 2090.                enddo
 2087.                $SI_L2087_46_G1 = 1 + $SI_L2087_46_G1
 2087.                if ( $SI_L2087_46_G1 >= _rsh( 2 + ict, 2 ) ) exit
 2087.             enddo
 2087.          endif
 2087.       endif
 2093.       if ( icb + -ict > 0 ) then
 2094.          if ( m > 0 ) then
 2093.             $SI_L2093_48_G7 = 0
 2093.             do
 2094.                $SI_L2094_40_G10 = 0
 2094.                do
 2093.                   $I_L2093_66 = 0
 2093. !dir$ shortloop16
 2093. !dir$ blocking_size( 4, 4 )
 2093.                   do
 2094.                      $I_L2094_57 = 0
 2094. !dir$ ivdep
 2094. !dir$ blocking_size( 256, 256 )
 2094.                      do
 2095.                         cc(1 + $I_L2094_57 + 256 * $SI_L2094_40_G10, 2) = max( cc(1 + $I_L2094_57 + 256 * $SI_L2094_40_G10, 2), fcld(1 + $I_L2094_57 + 256 * $SI_L2094_40_G10, ict + $I_L2093_66 + 4 * $SI_L2093_48_G7) )
 2094.                         $I_L2094_57 = 1 + $I_L2094_57
 2094.                         if ( $I_L2094_57 >= min( m, 256 + 256 * $SI_L2094_40_G10 ) + -256 * $SI_L2094_40_G10 ) exit
 2094.                      enddo
 2093.                      $I_L2093_66 = 1 + $I_L2093_66
 2093.                      if ( $I_L2093_66 >= min( ( icb + -ict ), 4 + 4 * $SI_L2093_48_G7 ) + -4 * $SI_L2093_48_G7 ) exit
 2093.                   enddo
 2094.                   $SI_L2094_40_G10 = 1 + $SI_L2094_40_G10
 2096.                   if ( $SI_L2094_40_G10 >= _rsh( 255 + m, 8 ) ) exit
 2096.                enddo
 2093.                $SI_L2093_48_G7 = 1 + $SI_L2093_48_G7
 2093.                if ( $SI_L2093_48_G7 >= _rsh( 3 + icb + -ict, 2 ) ) exit
 2093.             enddo
 2093.          endif
 2093.       endif
 2099.       if ( np + -icb >= 0 ) then
 2100.          if ( m > 0 ) then
 2099.             $SI_L2099_50_G13 = 0
 2099.             do
 2100.                $SI_L2100_42_G16 = 0
 2100.                do
 2099.                   $I_L2099_69 = 0
 2099. !dir$ shortloop16
 2099. !dir$ blocking_size( 4, 4 )
 2099.                   do
 2100.                      $I_L2100_60 = 0
 2100. !dir$ ivdep
 2100. !dir$ blocking_size( 256, 256 )
 2100.                      do
 2101.                         cc(1 + $I_L2100_60 + 256 * $SI_L2100_42_G16, 3) = max( cc(1 + $I_L2100_60 + 256 * $SI_L2100_42_G16, 3), fcld(1 + $I_L2100_60 + 256 * $SI_L2100_42_G16, icb + $I_L2099_69 + 4 * $SI_L2099_50_G13) )
 2100.                         $I_L2100_60 = 1 + $I_L2100_60
 2100.                         if ( $I_L2100_60 >= min( m, 256 + 256 * $SI_L2100_42_G16 ) + -256 * $SI_L2100_42_G16 ) exit
 2100.                      enddo
 2099.                      $I_L2099_69 = 1 + $I_L2099_69
 2099.                      if ( $I_L2099_69 >= min( 1 + np + -icb, 4 + 4 * $SI_L2099_50_G13 ) + -4 * $SI_L2099_50_G13 ) exit
 2099.                   enddo
 2100.                   $SI_L2100_42_G16 = 1 + $SI_L2100_42_G16
 2102.                   if ( $SI_L2100_42_G16 >= _rsh( 255 + m, 8 ) ) exit
 2102.                enddo
 2099.                $SI_L2099_50_G13 = 1 + $SI_L2099_50_G13
 2099.                if ( $SI_L2099_50_G13 >= _rsh( 4 + np + -icb, 2 ) ) exit
 2099.             enddo
 2099.          endif
 2099.       endif
 2108.       if ( np > 0 ) then
 2118.          if ( m > 0 ) then
 2108.             $I_L2108_52 = 0
 2108. !dir$ blocking_size( 1, 1 )
 2108.             do
 2118.                $I_L2118_44 = 0
 2118. !dir$ ivdep
 2118. !dir$ blocking_size( 256, 256 )
 2118.                do
 2120.                   tauclb(1 + $I_L2118_44, 1 + $I_L2108_52) = 0.0
 2121.                   tauclf(1 + $I_L2118_44, 1 + $I_L2108_52) = 0.0
 2122.                   $taux_S9 = taucld(1 + $I_L2118_44, 1 + $I_L2108_52, 3) + taucld(1 + $I_L2118_44, 1 + $I_L2108_52, 2) + taucld(1 + $I_L2118_44, 1 + $I_L2108_52, 1)
 2124.                   if ( taucld(1 + $I_L2118_44, 1 + $I_L2108_52, 3) + taucld(1 + $I_L2118_44, 1 + $I_L2108_52, 2) + taucld(1 + $I_L2118_44, 1 + $I_L2108_52, 1) > 2.0e-2 ) then
 2124.                      if ( fcld(1 + $I_L2118_44, 1 + $I_L2108_52) > 1.0e-2 ) then
 2126.                         $fa_S13 = ( fcld(1 + $I_L2118_44, 1 + $I_L2108_52) * 1.0/cc(1 + $I_L2118_44, cvmg( cvmg( 3, 2, or( ( 1 + $I_L2108_52 ) >= icb, ( 1 + $I_L2108_52 ) < ict ) ), 1, ( 1 + $I_L2108_52 ) >= ict )) )
 2131.                         $fm_S12 = 10.0 * cosz(1 + $I_L2118_44)
 2132.                         $Flat_S11 = log10( ( min( 32.0, $taux_S9 ) ) )
 2144.                         $it_S17 = min( 8, ( max( 2, int( 1.5 + ( 3.3219280470385009 * ( 9.0310000000000001e-1 + $Flat_S11 ) ) ) ) ) )
 2143.                         $im_S16 = min( 10, ( max( 2, int( 1.5 + $fm_S12 ) ) ) )
 2133.                         $fa_S14 = 10.0 * $fa_S13
 2145.                         $ia_S18 = min( 10, ( max( 2, int( 1.5 + ( 10.0 * $fa_S13 ) ) ) ) )
 2155.                         $xai_S21 = caib($im_S16, $it_S17, $ia_S18) * ( 1.0 + -( ( $fm_S12 + -( real( -1 + ( min( 10, ( max( 2, int( 1.5 + $fm_S12 ) ) ) ) ) ) ) ) * ( $fm_S12 + -( real( -1 + ( min( 10, ( max( 2, int( 1.5 + $fm_S12 ) ) ) ) ) ) ) ) ) ) + 5.0e-1 * ( $fm_S12 + -( real( -1 + ( min( 10, ( max( 2, int( 1.5 + $fm_S12 ) ) ) ) ) ) ) ) * ( -( caib(-1 + $im_S16, $it_S17, $ia_S18) * ( 1.0 + -( $fm_S12 + -( real( -1 + ( min( 10, ( max( 2, int( 1.5 + $fm_S12 ) ) ) ) ) ) ) ) ) ) + caib(1 + $im_S16, $it_S17, $ia_S18) * ( 1.0 + ( $fm_S12 + -( real( -1 + ( min( 10, ( max( 2, int( 1.5 + $fm_S12 ) ) ) ) ) ) ) ) ) )
 2148.                         $ft_S20 = ( 3.3219280470385009 * ( 9.0310000000000001e-1 + $Flat_S11 ) ) + -( real( -1 + ( min( 8, ( max( 2, int( 1.5 + ( 3.3219280470385009 * ( 9.0310000000000001e-1 + $Flat_S11 ) ) ) ) ) ) ) ) )
 2149.                         $fa_S19 = ( 10.0 * $fa_S13 ) + -( real( -1 + ( min( 10, ( max( 2, int( 1.5 + ( 10.0 * $fa_S13 ) ) ) ) ) ) ) )
 2165.                         $xai_S22 = max( 0.0, $xai_S21 + -2.0 * caib($im_S16, $it_S17, $ia_S18) + 5.0e-1 * $fa_S19 * ( -( caib($im_S16, $it_S17, -1 + $ia_S18) * ( 1.0 + -$fa_S19 ) ) + caib($im_S16, $it_S17, 1 + $ia_S18) * ( 1.0 + $fa_S19 ) ) + caib($im_S16, $it_S17, $ia_S18) * ( 1.0 + -( $fa_S19 * $fa_S19 ) ) + 5.0e-1 * $ft_S20 * ( -( caib($im_S16, -1 + $it_S17, $ia_S18) * ( 1.0 + -$ft_S20 ) ) + caib($im_S16, 1 + $it_S17, $ia_S18) * ( 1.0 + $ft_S20 ) ) + caib($im_S16, $it_S17, $ia_S18) * ( 1.0 + -( $ft_S20 * $ft_S20 ) ) )
 2167.                         tauclb(1 + $I_L2118_44, 1 + $I_L2108_52) = $xai_S22 * ( min( 32.0, $taux_S9 ) )
 2172.                         $xai_S23 = 5.0e-1 * ( ( 3.3219280470385009 * ( 9.0310000000000001e-1 + $Flat_S11 ) ) + -( real( -1 + $it_S17 ) ) ) * ( -( caif(-1 + $it_S17, $ia_S18) * ( 1.0 + -( ( 3.3219280470385009 * ( 9.0310000000000001e-1 + $Flat_S11 ) ) + -( real( -1 + $it_S17 ) ) ) ) ) + caif(1 + $it_S17, $ia_S18) * ( 1.0 + ( ( 3.3219280470385009 * ( 9.0310000000000001e-1 + $Flat_S11 ) ) + -( real( -1 + $it_S17 ) ) ) ) ) + caif($it_S17, $ia_S18) * ( 1.0 + -( ( ( 3.3219280470385009 * ( 9.0310000000000001e-1 + $Flat_S11 ) ) + -( real( -1 + $it_S17 ) ) ) * ( ( 3.3219280470385009 * ( 9.0310000000000001e-1 + $Flat_S11 ) ) + -( real( -1 + $it_S17 ) ) ) ) )
 2179.                         $xai_S24 = max( 0.0, $xai_S23 + -caif($it_S17, $ia_S18) + 5.0e-1 * ( $fa_S14 + -( real( -1 + ( min( 10, ( max( 2, int( 1.5 + $fa_S14 ) ) ) ) ) ) ) ) * ( -( caif($it_S17, -1 + $ia_S18) * ( 1.0 + -( $fa_S14 + -( real( -1 + ( min( 10, ( max( 2, int( 1.5 + $fa_S14 ) ) ) ) ) ) ) ) ) ) + caif($it_S17, 1 + $ia_S18) * ( 1.0 + ( $fa_S14 + -( real( -1 + ( min( 10, ( max( 2, int( 1.5 + $fa_S14 ) ) ) ) ) ) ) ) ) ) + caif($it_S17, $ia_S18) * ( 1.0 + -( ( $fa_S14 + -( real( -1 + ( min( 10, ( max( 2, int( 1.5 + $fa_S14 ) ) ) ) ) ) ) ) * ( $fa_S14 + -( real( -1 + ( min( 10, ( max( 2, int( 1.5 + $fa_S14 ) ) ) ) ) ) ) ) ) ) )
 2181.                         tauclf(1 + $I_L2118_44, 1 + $I_L2108_52) = $xai_S24 * ( min( 32.0, $taux_S9 ) )
 2181.                      endif
 2181.                   endif
 2183.                   $I_L2118_44 = 1 + $I_L2118_44
 2182.                   if ( $I_L2118_44 >= m ) exit
 2182.                enddo
 2184.                $I_L2108_52 = 1 + $I_L2108_52
 2183.                if ( $I_L2108_52 >= np ) exit
 2183.             enddo
 2183.          endif
 2183.       endif
 2185.       return
 2185.       end
 2185.       
 2212.       
 2212.       subroutine deledd( m, np, tau, ssc, g0, cza, rr, tt, td )
 2212.       t$102 = m
 2212.       t$103 = np
 2230.       t$617 = _zla( 0, m )
 2212.       t$618 = _zla( 0, m )
 2230.       t$619 = _zla( 0, np )
 2212.       t$620 = _zla( 0, m ) * _zla( 0, np )
 2248.       if ( np > 0 ) then
 2249.          if ( m > 0 ) then
 2248.             $I_L2248_14 = 0
 2248. !dir$ blocking_size( 1, 1 )
 2248.             do
 2249.                $I_L2249_12 = 0
 2249. !dir$ ivdep
 2249. !dir$ blocking_size( 256, 256 )
 2249.                do
 2250.                   $zth_S6 = cza(1 + $I_L2249_12)
 2255.                   $ff_S2 = g0(1 + $I_L2249_12, 1 + $I_L2248_14) * g0(1 + $I_L2249_12, 1 + $I_L2248_14)
 2256.                   $xx_S3 = 1.0 + -( $ff_S2 * ssc(1 + $I_L2249_12, 1 + $I_L2248_14) )
 2257.                   $taup_S9 = $xx_S3 * tau(1 + $I_L2249_12, 1 + $I_L2248_14)
 2258.                   $sscp_S5 = ( ssc(1 + $I_L2249_12, 1 + $I_L2248_14) * ( 1.0 + -$ff_S2 ) * 1.0/$xx_S3 )
 2259.                   $gp_S4 = ( g0(1 + $I_L2249_12, 1 + $I_L2248_14) * 1.0/( 1.0 + g0(1 + $I_L2249_12, 1 + $I_L2248_14) ) )
 2266.                   $gm1_S11 = 2.5e-1 * ( 7.0 + -( $sscp_S5 * ( 4.0 + ( 3.0 * $gp_S4 ) ) ) )
 2267.                   $gm2_S10 = -2.5e-1 * ( 1.0 + -( $sscp_S5 * ( 4.0 + -( 3.0 * $gp_S4 ) ) ) )
 2271.                   $akk_S8 = _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S5 * ( 4.0 + ( 3.0 * $gp_S4 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S5 * ( 4.0 + -( 3.0 * $gp_S4 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S5 * ( 4.0 + ( 3.0 * $gp_S4 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S5 * ( 4.0 + -( 3.0 * $gp_S4 ) ) ) ) ) ) )
 2274.                   $st7_S12 = 1.0 + -( $zth_S6 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S5 * ( 4.0 + ( 3.0 * $gp_S4 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S5 * ( 4.0 + -( 3.0 * $gp_S4 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S5 * ( 4.0 + ( 3.0 * $gp_S4 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S5 * ( 4.0 + -( 3.0 * $gp_S4 ) ) ) ) ) ) ) )
 2275.                   $st8_S13 = 1.0 + ( $zth_S6 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S5 * ( 4.0 + ( 3.0 * $gp_S4 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S5 * ( 4.0 + -( 3.0 * $gp_S4 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S5 * ( 4.0 + ( 3.0 * $gp_S4 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S5 * ( 4.0 + -( 3.0 * $gp_S4 ) ) ) ) ) ) ) )
 2276.                   $st3_S7 = ( 1.0 + ( $zth_S6 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S5 * ( 4.0 + ( 3.0 * $gp_S4 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S5 * ( 4.0 + -( 3.0 * $gp_S4 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S5 * ( 4.0 + ( 3.0 * $gp_S4 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S5 * ( 4.0 + -( 3.0 * $gp_S4 ) ) ) ) ) ) ) ) ) * ( 1.0 + -( $zth_S6 * _sqrt( ( ( 2.5e-1 * ( 7.0 + -( $sscp_S5 * ( 4.0 + ( 3.0 * $gp_S4 ) ) ) ) ) + ( -2.5e-1 * ( 1.0 + -( $sscp_S5 * ( 4.0 + -( 3.0 * $gp_S4 ) ) ) ) ) ) * ( ( 2.5e-1 * ( 7.0 + -( $sscp_S5 * ( 4.0 + ( 3.0 * $gp_S4 ) ) ) ) ) + -( -2.5e-1 * ( 1.0 + -( $sscp_S5 * ( 4.0 + -( 3.0 * $gp_S4 ) ) ) ) ) ) ) ) )
 2278.                   if ( abs( $st3_S7 ) < 1.0e-8 ) then
 2279.                      $zth_S6 = 1.0e-3 + $zth_S6
 2281.                      $st7_S12 = 1.0 + -( $zth_S6 * $akk_S8 )
 2282.                      $st8_S13 = 1.0 + ( $zth_S6 * $akk_S8 )
 2283.                      $st3_S7 = ( 1.0 + -( $zth_S6 * $akk_S8 ) ) * ( 1.0 + ( $zth_S6 * $akk_S8 ) )
 2283.                   endif
 2287.                   $td_WR0_R0 = _expn( -( $taup_S9 * 1.0/$zth_S6 ) )
 2287.                   td(1 + $I_L2249_12, 1 + $I_L2248_14) = $td_WR0_R0
 2299.                   $temp_all_S15 = $td_WR0_R0 * ( 2.0 * $akk_S8 ) * ( ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S4 * $zth_S6 ) ) + -( $zth_S6 * ( $gm2_S10 + ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S4 * $zth_S6 ) ) * ( $gm1_S11 + -$gm2_S10 ) ) ) )
 2300.                   $bll_S16 = ( 2.0 * $akk_S8 ) * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S4 * $zth_S6 ) ) + $zth_S6 * ( $gm1_S11 + -( ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S4 * $zth_S6 ) ) * ( $gm1_S11 + -$gm2_S10 ) ) ) )
 2310.                   $st2_S14 = _expn( -( $akk_S8 * $taup_S9 ) )
 2319.                   $tt_WR0_R2 = -( ( $sscp_S5 * 1.0/( $st3_S7 * ( $akk_S8 + $gm1_S11 + ( $akk_S8 + -$gm1_S11 ) * ( $st2_S14 * $st2_S14 ) ) ) ) * ( -( $st2_S14 * $bll_S16 ) + $td_WR0_R0 * ( ( $st8_S13 * ( ( $akk_S8 * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S4 * $zth_S6 ) ) ) ) + ( $gm1_S11 + -( ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S4 * $zth_S6 ) ) * ( $gm1_S11 + -$gm2_S10 ) ) ) ) ) + -( ( $st7_S12 * ( -( $akk_S8 * ( 1.0 + -( 2.5e-1 * ( 2.0 + -3.0 * $gp_S4 * $zth_S6 ) ) ) ) + ( $gm1_S11 + -( ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S4 * $zth_S6 ) ) * ( $gm1_S11 + -$gm2_S10 ) ) ) ) ) * ( $st2_S14 * $st2_S14 ) ) ) ) )
 2321.                   $rr_WR0_R1 = max( 0.0, ( ( $sscp_S5 * 1.0/( $st3_S7 * ( $akk_S8 + $gm1_S11 + ( $akk_S8 + -$gm1_S11 ) * ( $st2_S14 * $st2_S14 ) ) ) ) * ( ( $st7_S12 * ( ( $akk_S8 * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S4 * $zth_S6 ) ) ) + ( $gm2_S10 + ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S4 * $zth_S6 ) ) * ( $gm1_S11 + -$gm2_S10 ) ) ) ) + -( ( $st8_S13 * ( -( $akk_S8 * ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S4 * $zth_S6 ) ) ) + ( $gm2_S10 + ( 2.5e-1 * ( 2.0 + -3.0 * $gp_S4 * $zth_S6 ) ) * ( $gm1_S11 + -$gm2_S10 ) ) ) ) * ( $st2_S14 * $st2_S14 ) ) + -( $st2_S14 * $temp_all_S15 ) ) ) )
 2321.                   rr(1 + $I_L2249_12, 1 + $I_L2248_14) = $rr_WR0_R1
 2324.                   $tt_WR0_R2 = $td_WR0_R0 + max( 0.0, $tt_WR0_R2 )
 2324.                   tt(1 + $I_L2249_12, 1 + $I_L2248_14) = $tt_WR0_R2
 2325.                   $I_L2249_12 = 1 + $I_L2249_12
 2284.                   if ( $I_L2249_12 >= m ) exit
 2284.                enddo
 2326.                $I_L2248_14 = 1 + $I_L2248_14
 2325.                if ( $I_L2248_14 >= np ) exit
 2325.             enddo
 2325.          endif
 2325.       endif
 2328.       return
 2328.       end
 2328.       
 2342.       
 2342.       subroutine rflx( m, np, swc, u1, du, nu, swh, w1, dw, nw, tbl, df )
 2342.       t$104 = m
 2342.       t$105 = ( 1 + np )
 2356.       t$621 = _zla( 0, m )
 2342.       t$622 = _zla( 0, m )
 2356.       t$623 = _zla( 0, ( 1 + np ) )
 2342.       t$624 = _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 2342.       t$106 = nu
 2342.       t$107 = nw
 2358.       t$625 = _zla( 0, nu )
 2342.       t$626 = _zla( 0, nu )
 2358.       t$627 = _zla( 0, nw )
 2342.       t$628 = _zla( 0, nu ) * _zla( 0, nw )
 2370.       $x1_S4 = u1 + -5.0e-1 * du
 2371.       $y1_S2 = w1 + -5.0e-1 * dw
 2373.       if ( np > 0 ) then
 2374.          if ( m > 0 ) then
 2373.             $I_L2373_10 = 0
 2373.             do
 2374.                $I_L2374_8 = 0
 2374. !dir$ ivdep
 2374.                do
 2375.                   $temp_clog_S5 = swc(1 + $I_L2374_8, 2 + $I_L2373_10)
 2376.                   $wlog_S3 = swh(1 + $I_L2374_8, 2 + $I_L2373_10)
 2382.                   $iw_S7 = min( nw, ( max( 2, int( 1.0 + ( 1.0/dw * ( $wlog_S3 + -$y1_S2 ) ) ) ) ) )
 2381.                   $ic_S6 = min( nu, ( max( 2, int( 1.0 + ( 1.0/du * ( $temp_clog_S5 + -$x1_S4 ) ) ) ) ) )
 2385.                   $x2_S8 = tbl(-1 + $ic_S6, -1 + ( min( nw, ( max( 2, int( 1.0 + ( 1.0/dw * ( $wlog_S3 + -$y1_S2 ) ) ) ) ) ) )) + ( $wlog_S3 + -w1 + -( dw * real( -2 + ( min( nw, ( max( 2, int( 1.0 + ( 1.0/dw * ( $wlog_S3 + -$y1_S2 ) ) ) ) ) ) ) ) ) ) * ( 1.0/dw * ( tbl(-1 + $ic_S6, min( nw, ( max( 2, int( 1.0 + ( 1.0/dw * ( $wlog_S3 + -$y1_S2 ) ) ) ) ) )) + -tbl(-1 + $ic_S6, -1 + ( min( nw, ( max( 2, int( 1.0 + ( 1.0/dw * ( $wlog_S3 + -$y1_S2 ) ) ) ) ) ) )) ) )
 2386.                   $y2_S9 = $x2_S8 + ( $temp_clog_S5 + -u1 + -( du * real( -2 + $ic_S6 ) ) ) * ( 1.0/du * ( tbl($ic_S6, -1 + $iw_S7) + -tbl(-1 + $ic_S6, -1 + $iw_S7) ) )
 2387.                   df(1 + $I_L2374_8, 2 + $I_L2373_10) = $y2_S9 + df(1 + $I_L2374_8, 2 + $I_L2373_10)
 2388.                   $I_L2374_8 = 1 + $I_L2374_8
 2374.                   if ( $I_L2374_8 >= m ) exit
 2374.                enddo
 2389.                $I_L2373_10 = 1 + $I_L2373_10
 2388.                if ( $I_L2373_10 >= np ) exit
 2388.             enddo
 2388.          endif
 2388.       endif
 2391.       return
 2391.       end
 2391.       
 2432.       
 2432.       subroutine cldflx( m, np, ict, icb, ih1, ih2, im1, im2, is1, is2, cc, rr, tt, td, rs, ts, fclr, fall, fsdir, fsdif, fsdir_c, fsdif_c, fclr_d, fclr_u, fall_d, fall_u )
 2432.       t$108 = m
 2441.       t$629 = _zla( 0, m )
 2432.       t$630 = _zla( 0, m )
 2432.       t$631 = 3 * _zla( 0, m )
 2432.       t$109 = ( 1 + np )
 2440.       t$632 = _zla( 0, ( 1 + np ) )
 2432.       t$633 = _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 2432.       t$634 = 2 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 2432.       t$635 = _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 2461.       t$638 = 8 * _zla( 0, m )
 2461.       t$639 = 8 * ( 7 + 8 * _zla( 0, m ) ) / 8
 2461.       t$641 = t$639 + 8 * _zla( 0, m )
 2461.       t$642 = 8 * ( 7 + t$639 + 8 * _zla( 0, m ) ) / 8
 2461.       t$644 = t$642 + 8 * _zla( 0, m )
 2455.       t$645 = 8 * ( 7 + t$642 + 8 * _zla( 0, m ) ) / 8
 2455.       t$647 = t$645 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 2460.       t$648 = 8 * ( 7 + t$645 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 2460.       t$650 = t$648 + 8 * _zla( 0, m )
 2459.       t$651 = 8 * ( 7 + t$648 + 8 * _zla( 0, m ) ) / 8
 2459.       t$653 = t$651 + 8 * _zla( 0, m )
 2457.       t$654 = 8 * ( 7 + t$651 + 8 * _zla( 0, m ) ) / 8
 2457.       t$656 = t$654 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 2456.       t$657 = 8 * ( 7 + t$654 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 2456.       t$659 = t$657 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 2432.       t$660 = 2 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 2432.       t$661 = 4 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 2452.       t$662 = 8 * ( 7 + t$657 + 8 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 2452.       t$664 = t$662 + 32 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 2451.       t$665 = 8 * ( 7 + t$662 + 32 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 2451.       t$667 = t$665 + 32 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 2453.       t$668 = 8 * ( 7 + t$665 + 32 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 2453.       t$670 = t$668 + 32 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 2450.       t$671 = 8 * ( 7 + t$668 + 32 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 2450.       t$673 = t$671 + 32 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 2449.       t$674 = 8 * ( 7 + t$671 + 32 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ) / 8
 2449.       t$676 = t$674 + 32 * _zla( 0, m ) * _zla( 0, ( 1 + np ) )
 2432.       t$636 = int( _alloc( t$674 + 32 * _zla( 0, m ) * _zla( 0, ( 1 + np ) ) ), 8 )
 2461.       t$637 = t$636
 2461.       t$640 = t$639 + t$636
 2461.       t$643 = t$642 + t$636
 2455.       t$646 = t$645 + t$636
 2460.       t$649 = t$648 + t$636
 2459.       t$652 = t$651 + t$636
 2457.       t$655 = t$654 + t$636
 2456.       t$658 = t$657 + t$636
 2452.       t$663 = t$662 + t$636
 2451.       t$666 = t$665 + t$636
 2453.       t$669 = t$668 + t$636
 2450.       t$672 = t$671 + t$636
 2449.       t$675 = t$674 + t$636
 2468.       $F_A33 = 1 + np
 2468.       $F_A34 = m
 2468.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
 2468.          $I_L2468_482 = 0
 2468.          do
 2468.             $I_L2468_422 = 0
 2468. !dir$ ivdep
 2468. !dir$ loop_info (automatic) cache_nt( fclr )
 2468.             do
 2468.                fclr(1 + $I_L2468_422, 1 + $I_L2468_482) = 0.0
 2468.                $I_L2468_422 = 1 + $I_L2468_422
 2468.                if ( $I_L2468_422 >= $F_A34 ) exit
 2468.             enddo
 2468.             $I_L2468_482 = 1 + $I_L2468_482
 2468.             if ( $I_L2468_482 >= $F_A33 ) exit
 2468.          enddo
 2468.       endif
 2469.       $F_A35 = 1 + np
 2469.       $F_A36 = m
 2469.       if ( and( -$F_A36, -$F_A35 ) < 0 ) then
 2469.          $I_L2469_484 = 0
 2469.          do
 2469.             $I_L2469_424 = 0
 2469. !dir$ ivdep
 2469. !dir$ loop_info (automatic) cache_nt( fall )
 2469.             do
 2469.                fall(1 + $I_L2469_424, 1 + $I_L2469_484) = 0.0
 2469.                $I_L2469_424 = 1 + $I_L2469_424
 2469.                if ( $I_L2469_424 >= $F_A36 ) exit
 2469.             enddo
 2469.             $I_L2469_484 = 1 + $I_L2469_484
 2469.             if ( $I_L2469_484 >= $F_A35 ) exit
 2469.          enddo
 2469.       endif
 2470.       $F_A37 = 1 + np
 2470.       $F_A38 = m
 2470.       if ( and( -$F_A38, -$F_A37 ) < 0 ) then
 2470.          $I_L2470_486 = 0
 2470.          do
 2470.             $I_L2470_426 = 0
 2470. !dir$ ivdep
 2470. !dir$ loop_info (automatic) cache_nt( fclr_d )
 2470.             do
 2470.                fclr_d(1 + $I_L2470_426, 1 + $I_L2470_486) = 0.0
 2470.                $I_L2470_426 = 1 + $I_L2470_426
 2470.                if ( $I_L2470_426 >= $F_A38 ) exit
 2470.             enddo
 2470.             $I_L2470_486 = 1 + $I_L2470_486
 2470.             if ( $I_L2470_486 >= $F_A37 ) exit
 2470.          enddo
 2470.       endif
 2471.       $F_A39 = 1 + np
 2471.       $F_A40 = m
 2471.       if ( and( -$F_A40, -$F_A39 ) < 0 ) then
 2471.          $I_L2471_488 = 0
 2471.          do
 2471.             $I_L2471_428 = 0
 2471. !dir$ ivdep
 2471. !dir$ loop_info (automatic) cache_nt( fclr_u )
 2471.             do
 2471.                fclr_u(1 + $I_L2471_428, 1 + $I_L2471_488) = 0.0
 2471.                $I_L2471_428 = 1 + $I_L2471_428
 2471.                if ( $I_L2471_428 >= $F_A40 ) exit
 2471.             enddo
 2471.             $I_L2471_488 = 1 + $I_L2471_488
 2471.             if ( $I_L2471_488 >= $F_A39 ) exit
 2471.          enddo
 2471.       endif
 2472.       $F_A41 = 1 + np
 2472.       $F_A42 = m
 2472.       if ( and( -$F_A42, -$F_A41 ) < 0 ) then
 2472.          $I_L2472_490 = 0
 2472.          do
 2472.             $I_L2472_430 = 0
 2472. !dir$ ivdep
 2472. !dir$ loop_info (automatic) cache_nt( fall_d )
 2472.             do
 2472.                fall_d(1 + $I_L2472_430, 1 + $I_L2472_490) = 0.0
 2472.                $I_L2472_430 = 1 + $I_L2472_430
 2472.                if ( $I_L2472_430 >= $F_A42 ) exit
 2472.             enddo
 2472.             $I_L2472_490 = 1 + $I_L2472_490
 2472.             if ( $I_L2472_490 >= $F_A41 ) exit
 2472.          enddo
 2472.       endif
 2473.       $F_A43 = 1 + np
 2473.       $F_A44 = m
 2473.       if ( and( -$F_A44, -$F_A43 ) < 0 ) then
 2473.          $I_L2473_492 = 0
 2473.          do
 2473.             $I_L2473_432 = 0
 2473. !dir$ ivdep
 2473. !dir$ loop_info (automatic) cache_nt( fall_u )
 2473.             do
 2473.                fall_u(1 + $I_L2473_432, 1 + $I_L2473_492) = 0.0
 2473.                $I_L2473_432 = 1 + $I_L2473_432
 2473.                if ( $I_L2473_432 >= $F_A44 ) exit
 2473.             enddo
 2473.             $I_L2473_492 = 1 + $I_L2473_492
 2473.             if ( $I_L2473_492 >= $F_A43 ) exit
 2473.          enddo
 2473.       endif
 2475.       $F_A45 = m
 2475.       if ( m > 0 ) then
 2475.          $I_L2475_434 = 0
 2475. !dir$ ivdep
 2475. !dir$ loop_info (automatic) cache_nt( fsdir )
 2475.          do
 2475.             fsdir(1 + $I_L2475_434) = 0.0
 2475.             $I_L2475_434 = 1 + $I_L2475_434
 2475.             if ( $I_L2475_434 >= $F_A45 ) exit
 2475.          enddo
 2475.       endif
 2476.       $F_A46 = m
 2476.       if ( m > 0 ) then
 2476.          $I_L2476_436 = 0
 2476. !dir$ ivdep
 2476. !dir$ loop_info (automatic) cache_nt( fsdif )
 2476.          do
 2476.             fsdif(1 + $I_L2476_436) = 0.0
 2476.             $I_L2476_436 = 1 + $I_L2476_436
 2476.             if ( $I_L2476_436 >= $F_A46 ) exit
 2476.          enddo
 2476.       endif
 2477.       $F_A47 = m
 2477.       if ( m > 0 ) then
 2477.          $I_L2477_438 = 0
 2477. !dir$ ivdep
 2477. !dir$ loop_info (automatic) cache_nt( fsdir_c )
 2477.          do
 2477.             fsdir_c(1 + $I_L2477_438) = 0.0
 2477.             $I_L2477_438 = 1 + $I_L2477_438
 2477.             if ( $I_L2477_438 >= $F_A47 ) exit
 2477.          enddo
 2477.       endif
 2478.       $F_A48 = m
 2478.       if ( m > 0 ) then
 2478.          $I_L2478_440 = 0
 2478. !dir$ ivdep
 2478. !dir$ loop_info (automatic) cache_nt( fsdif_c )
 2478.          do
 2478.             fsdif_c(1 + $I_L2478_440) = 0.0
 2478.             $I_L2478_440 = 1 + $I_L2478_440
 2478.             if ( $I_L2478_440 >= $F_A48 ) exit
 2478.          enddo
 2478.       endif
 2486.       if ( ih2 + -ih1 >= 0 ) then
 2486.          $I_L2486_494 = 0
 2486.          do
 2488.             if ( m > 0 ) then
 2488.                $I_L2488_442 = 0
 2488. !dir$ ivdep
 2488.                do
 2489.                   tda(1 + $I_L2488_442, 1, ih1 + $I_L2486_494, 1) = td(1 + $I_L2488_442, 1, ih1 + $I_L2486_494)
 2490.                   tta(1 + $I_L2488_442, 1, ih1 + $I_L2486_494, 1) = tt(1 + $I_L2488_442, 1, ih1 + $I_L2486_494)
 2491.                   rsa(1 + $I_L2488_442, 1, ih1 + $I_L2486_494, 1) = rs(1 + $I_L2488_442, 1, ih1 + $I_L2486_494)
 2492.                   tda(1 + $I_L2488_442, 1, ih1 + $I_L2486_494, 2) = td(1 + $I_L2488_442, 1, ih1 + $I_L2486_494)
 2493.                   tta(1 + $I_L2488_442, 1, ih1 + $I_L2486_494, 2) = tt(1 + $I_L2488_442, 1, ih1 + $I_L2486_494)
 2494.                   rsa(1 + $I_L2488_442, 1, ih1 + $I_L2486_494, 2) = rs(1 + $I_L2488_442, 1, ih1 + $I_L2486_494)
 2495.                   $I_L2488_442 = 1 + $I_L2488_442
 2488.                   if ( $I_L2488_442 >= m ) exit
 2488.                enddo
 2488.             endif
 2530.             $I_L2486_494 = 1 + $I_L2486_494
 2529.             if ( $I_L2486_494 >= 1 + ih2 + -ih1 ) exit
 2529.          enddo
 2486.          $I_L2486_522 = 0
 2486.          do
 2497.             if ( -3 + ict >= 0 ) then
 2498.                if ( m > 0 ) then
 2497.                   $I_L2497_496 = 0
 2497. !dir$ blocking_size( 1, 1 )
 2497.                   do
 2498.                      $I_L2498_444 = 0
 2498. !dir$ ivdep
 2498. !dir$ blocking_size( 256, 256 )
 2498.                      do
 2499.                         $denm_S4 = ( ts(1 + $I_L2498_444, 2 + $I_L2497_496, ih1 + $I_L2486_522) * 1.0/( 1.0 + -( rs(1 + $I_L2498_444, 2 + $I_L2497_496, ih1 + $I_L2486_522) * rsa(1 + $I_L2498_444, 1 + $I_L2497_496, ih1 + $I_L2486_522, 1) ) ) )
 2500.                         tda(1 + $I_L2498_444, 2 + $I_L2497_496, ih1 + $I_L2486_522, 1) = td(1 + $I_L2498_444, 2 + $I_L2497_496, ih1 + $I_L2486_522) * tda(1 + $I_L2498_444, 1 + $I_L2497_496, ih1 + $I_L2486_522, 1)
 2501.                         tta(1 + $I_L2498_444, 2 + $I_L2497_496, ih1 + $I_L2486_522, 1) = $denm_S4 * ( tta(1 + $I_L2498_444, 1 + $I_L2497_496, ih1 + $I_L2486_522, 1) + -tda(1 + $I_L2498_444, 1 + $I_L2497_496, ih1 + $I_L2486_522, 1) + rsa(1 + $I_L2498_444, 1 + $I_L2497_496, ih1 + $I_L2486_522, 1) * tda(1 + $I_L2498_444, 1 + $I_L2497_496, ih1 + $I_L2486_522, 1) * rr(1 + $I_L2498_444, 2 + $I_L2497_496, ih1 + $I_L2486_522) ) + tda(1 + $I_L2498_444, 1 + $I_L2497_496, ih1 + $I_L2486_522, 1) * tt(1 + $I_L2498_444, 2 + $I_L2497_496, ih1 + $I_L2486_522)
 2504.                         rsa(1 + $I_L2498_444, 2 + $I_L2497_496, ih1 + $I_L2486_522, 1) = rs(1 + $I_L2498_444, 2 + $I_L2497_496, ih1 + $I_L2486_522) + $denm_S4 * rsa(1 + $I_L2498_444, 1 + $I_L2497_496, ih1 + $I_L2486_522, 1) * ts(1 + $I_L2498_444, 2 + $I_L2497_496, ih1 + $I_L2486_522)
 2509.                         $I_L2498_444 = 1 + $I_L2498_444
 2498.                         if ( $I_L2498_444 >= m ) exit
 2498.                      enddo
 2511.                      $I_L2497_496 = 1 + $I_L2497_496
 2509.                      if ( $I_L2497_496 >= -2 + ict ) exit
 2509.                   enddo
 2497.                   $I_L2497_498 = 0
 2497.                   do
 2498.                      $I_L2498_446 = 0
 2498. !dir$ ivdep
 2498.                      do
 2506.                         tda(1 + $I_L2498_446, 2 + $I_L2497_498, ih1 + $I_L2486_522, 2) = tda(1 + $I_L2498_446, 2 + $I_L2497_498, ih1 + $I_L2486_522, 1)
 2509.                         $I_L2498_446 = 1 + $I_L2498_446
 2498.                         if ( $I_L2498_446 >= m ) exit
 2498.                      enddo
 2511.                      $I_L2497_498 = 1 + $I_L2497_498
 2509.                      if ( $I_L2497_498 >= -2 + ict ) exit
 2509.                   enddo
 2509.                endif
 2509.             endif
 2530.             $I_L2486_522 = 1 + $I_L2486_522
 2529.             if ( $I_L2486_522 >= 1 + ih2 + -ih1 ) exit
 2529.          enddo
 2486.          $I_L2486_546 = 0
 2486.          do
 2515.             if ( im2 + -im1 >= 0 ) then
 2517.                if ( icb + -ict > 0 ) then
 2518.                   if ( m > 0 ) then
 2515.                      $I_L2515_542 = 0
 2515.                      do
 2517.                         $I_L2517_536 = 0
 2517.                         do
 2518.                            $I_L2518_524 = 0
 2518.                            do
 2517.                               $I_L2517_514 = 0
 2517.                               if ( min( ( icb + -ict ), 4 + 4 * $I_L2517_536 ) + -4 * $I_L2517_536 >= 2 ) then
 2517.                                  $I_L2517_559 = 0
 2517. !dir$ shortloop16
 2517. !dir$ blocking_size( 4, 4 )
 2517.                                  do
 2518.                                     $I_L2518_448 = 0
 2518. !dir$ ivdep
 2518. !dir$ blocking_size( 256, 256 )
 2518.                                     do
 2520.                                        tda(1 + $I_L2518_448 + 256 * $I_L2518_524, ict + 4 * $I_L2517_536 + 2 * $I_L2517_559, ih1 + $I_L2486_546, im1 + $I_L2515_542) = tda(1 + $I_L2518_448 + 256 * $I_L2518_524, -1 + ict + 4 * $I_L2517_536 + 2 * $I_L2517_559, ih1 + $I_L2486_546, im1 + $I_L2515_542) * td(1 + $I_L2518_448 + 256 * $I_L2518_524, ict + 4 * $I_L2517_536 + 2 * $I_L2517_559, im1 + $I_L2515_542)
 2520.                                        tda(1 + $I_L2518_448 + 256 * $I_L2518_524, 1 + ict + 4 * $I_L2517_536 + 2 * $I_L2517_559, ih1 + $I_L2486_546, im1 + $I_L2515_542) = tda(1 + $I_L2518_448 + 256 * $I_L2518_524, ict + 4 * $I_L2517_536 + 2 * $I_L2517_559, ih1 + $I_L2486_546, im1 + $I_L2515_542) * td(1 + $I_L2518_448 + 256 * $I_L2518_524, 1 + ict + 4 * $I_L2517_536 + 2 * $I_L2517_559, im1 + $I_L2515_542)
 2518.                                        $I_L2518_448 = 1 + $I_L2518_448
 2518.                                        if ( $I_L2518_448 >= min( m, 256 + 256 * $I_L2518_524 ) + -256 * $I_L2518_524 ) exit
 2518.                                     enddo
 2517.                                     $I_L2517_559 = 1 + $I_L2517_559
 2517.                                     if ( $I_L2517_559 >= _rsh( min( ( icb + -ict ), 4 + 4 * $I_L2517_536 ) + -4 * $I_L2517_536, 1 ) ) exit
 2517.                                  enddo
 2517.                                  $I_L2517_514 = and( 0xfffffffffffffffeUL, min( ( icb + -ict ), 4 + 4 * $I_L2517_536 ) + -4 * $I_L2517_536 )
 2517.                               endif
 2517.                               if ( $I_L2517_514 < min( ( icb + -ict ), 4 + 4 * $I_L2517_536 ) + -4 * $I_L2517_536 ) then
 2518.                                  $I_L2518_448 = 0
 2518. !dir$ ivdep
 2518. !dir$ blocking_size( 256, 256 )
 2518.                                  do
 2520.                                     tda(1 + $I_L2518_448 + 256 * $I_L2518_524, ict + $I_L2517_514 + 4 * $I_L2517_536, ih1 + $I_L2486_546, im1 + $I_L2515_542) = td(1 + $I_L2518_448 + 256 * $I_L2518_524, ict + $I_L2517_514 + 4 * $I_L2517_536, im1 + $I_L2515_542) * tda(1 + $I_L2518_448 + 256 * $I_L2518_524, -1 + ict + $I_L2517_514 + 4 * $I_L2517_536, ih1 + $I_L2486_546, im1 + $I_L2515_542)
 2518.                                     $I_L2518_448 = 1 + $I_L2518_448
 2518.                                     if ( $I_L2518_448 >= min( m, 256 + 256 * $I_L2518_524 ) + -256 * $I_L2518_524 ) exit
 2518.                                  enddo
 2518.                               endif
 2518.                               $I_L2518_524 = 1 + $I_L2518_524
 2526.                               if ( $I_L2518_524 >= 1 + max( 0, -1 + _rsh( 255 + m, 8 ) ) ) exit
 2526.                            enddo
 2517.                            $I_L2517_536 = 1 + $I_L2517_536
 2517.                            if ( $I_L2517_536 >= 1 + max( 0, -1 + _rsh( 3 + icb + -ict, 2 ) ) ) exit
 2517.                         enddo
 2529.                         $I_L2515_542 = 1 + $I_L2515_542
 2527.                         if ( $I_L2515_542 >= 1 + im2 + -im1 ) exit
 2527.                      enddo
 2527.                   endif
 2527.                endif
 2527.             endif
 2497.             if ( -3 + ict >= 0 ) then
 2498.                if ( m > 0 ) then
 2497.                   $I_L2497_500 = 0
 2497.                   do
 2498.                      $I_L2498_451 = 0
 2498. !dir$ ivdep
 2498.                      do
 2507.                         tta(1 + $I_L2498_451, 2 + $I_L2497_500, ih1 + $I_L2486_546, 2) = tta(1 + $I_L2498_451, 2 + $I_L2497_500, ih1 + $I_L2486_546, 1)
 2509.                         $I_L2498_451 = 1 + $I_L2498_451
 2498.                         if ( $I_L2498_451 >= m ) exit
 2498.                      enddo
 2511.                      $I_L2497_500 = 1 + $I_L2497_500
 2509.                      if ( $I_L2497_500 >= -2 + ict ) exit
 2509.                   enddo
 2497.                   $I_L2497_502 = 0
 2497.                   do
 2498.                      $I_L2498_453 = 0
 2498. !dir$ ivdep
 2498.                      do
 2508.                         rsa(1 + $I_L2498_453, 2 + $I_L2497_502, ih1 + $I_L2486_546, 2) = rsa(1 + $I_L2498_453, 2 + $I_L2497_502, ih1 + $I_L2486_546, 1)
 2509.                         $I_L2498_453 = 1 + $I_L2498_453
 2498.                         if ( $I_L2498_453 >= m ) exit
 2498.                      enddo
 2511.                      $I_L2497_502 = 1 + $I_L2497_502
 2509.                      if ( $I_L2497_502 >= -2 + ict ) exit
 2509.                   enddo
 2509.                endif
 2509.             endif
 2530.             $I_L2486_546 = 1 + $I_L2486_546
 2529.             if ( $I_L2486_546 >= 1 + ih2 + -ih1 ) exit
 2529.          enddo
 2486.          $I_L2486_548 = 0
 2486.          do
 2515.             if ( im2 + -im1 >= 0 ) then
 2517.                if ( icb + -ict > 0 ) then
 2518.                   if ( m > 0 ) then
 2515.                      $I_L2515_544 = 0
 2515.                      do
 2517.                         $I_L2517_538 = 0
 2517.                         do
 2518.                            $I_L2518_526 = 0
 2518.                            do
 2517.                               $I_L2517_517 = 0
 2517. !dir$ shortloop16
 2517. !dir$ blocking_size( 2, 2 )
 2517.                               do
 2518.                                  $I_L2518_455 = 0
 2518. !dir$ ivdep
 2518. !dir$ loop_info (automatic) cache_nt( tda, tta, rsa )
 2518. !dir$ blocking_size( 256, 256 )
 2518.                                  do
 2519.                                     $denm_S8 = ( ts(1 + $I_L2518_455 + 256 * $I_L2518_526, ict + $I_L2517_517 + 2 * $I_L2517_538, im1 + $I_L2515_544) * 1.0/( 1.0 + -( rs(1 + $I_L2518_455 + 256 * $I_L2518_526, ict + $I_L2517_517 + 2 * $I_L2517_538, im1 + $I_L2515_544) * rsa(1 + $I_L2518_455 + 256 * $I_L2518_526, -1 + ict + $I_L2517_517 + 2 * $I_L2517_538, ih1 + $I_L2486_548, im1 + $I_L2515_544) ) ) )
 2521.                                     tta(1 + $I_L2518_455 + 256 * $I_L2518_526, ict + $I_L2517_517 + 2 * $I_L2517_538, ih1 + $I_L2486_548, im1 + $I_L2515_544) = tt(1 + $I_L2518_455 + 256 * $I_L2518_526, ict + $I_L2517_517 + 2 * $I_L2517_538, im1 + $I_L2515_544) * tda(1 + $I_L2518_455 + 256 * $I_L2518_526, -1 + ict + $I_L2517_517 + 2 * $I_L2517_538, ih1 + $I_L2486_548, im1 + $I_L2515_544) + $denm_S8 * ( tta(1 + $I_L2518_455 + 256 * $I_L2518_526, -1 + ict + $I_L2517_517 + 2 * $I_L2517_538, ih1 + $I_L2486_548, im1 + $I_L2515_544) + -tda(1 + $I_L2518_455 + 256 * $I_L2518_526, -1 + ict + $I_L2517_517 + 2 * $I_L2517_538, ih1 + $I_L2486_548, im1 + $I_L2515_544) + rsa(1 + $I_L2518_455 + 256 * $I_L2518_526, -1 + ict + $I_L2517_517 + 2 * $I_L2517_538, ih1 + $I_L2486_548, im1 + $I_L2515_544) * rr(1 + $I_L2518_455 + 256 * $I_L2518_526, ict + $I_L2517_517 + 2 * $I_L2517_538, im1 + $I_L2515_544) * tda(1 + $I_L2518_455 + 256 * $I_L2518_526, -1 + ict + $I_L2517_517 + 2 * $I_L2517_538, ih1 + $I_L2486_548, im1 + $I_L2515_544) )
 2524.                                     rsa(1 + $I_L2518_455 + 256 * $I_L2518_526, ict + $I_L2517_517 + 2 * $I_L2517_538, ih1 + $I_L2486_548, im1 + $I_L2515_544) = rs(1 + $I_L2518_455 + 256 * $I_L2518_526, ict + $I_L2517_517 + 2 * $I_L2517_538, im1 + $I_L2515_544) + $denm_S8 * ts(1 + $I_L2518_455 + 256 * $I_L2518_526, ict + $I_L2517_517 + 2 * $I_L2517_538, im1 + $I_L2515_544) * rsa(1 + $I_L2518_455 + 256 * $I_L2518_526, -1 + ict + $I_L2517_517 + 2 * $I_L2517_538, ih1 + $I_L2486_548, im1 + $I_L2515_544)
 2518.                                     $I_L2518_455 = 1 + $I_L2518_455
 2518.                                     if ( $I_L2518_455 >= min( m, 256 + 256 * $I_L2518_526 ) + -256 * $I_L2518_526 ) exit
 2518.                                  enddo
 2517.                                  $I_L2517_517 = 1 + $I_L2517_517
 2517.                                  if ( $I_L2517_517 >= min( ( icb + -ict ), 2 + 2 * $I_L2517_538 ) + -2 * $I_L2517_538 ) exit
 2517.                               enddo
 2518.                               $I_L2518_526 = 1 + $I_L2518_526
 2526.                               if ( $I_L2518_526 >= 1 + max( 0, -1 + _rsh( 255 + m, 8 ) ) ) exit
 2526.                            enddo
 2517.                            $I_L2517_538 = 1 + $I_L2517_538
 2517.                            if ( $I_L2517_538 >= 1 + max( 0, -1 + _rsh( 1 + icb + -ict, 1 ) ) ) exit
 2517.                         enddo
 2529.                         $I_L2515_544 = 1 + $I_L2515_544
 2527.                         if ( $I_L2515_544 >= 1 + im2 + -im1 ) exit
 2527.                      enddo
 2527.                   endif
 2527.                endif
 2527.             endif
 2530.             $I_L2486_548 = 1 + $I_L2486_548
 2529.             if ( $I_L2486_548 >= 1 + ih2 + -ih1 ) exit
 2529.          enddo
 2529.       endif
 2537.       if ( is2 + -is1 >= 0 ) then
 2537.          $I_L2537_504 = 0
 2537.          do
 2539.             if ( m > 0 ) then
 2539.                $I_L2539_458 = 0
 2539. !dir$ ivdep
 2539.                do
 2540.                   rra(1 + $I_L2539_458, 1 + np, 1, is1 + $I_L2537_504) = rr(1 + $I_L2539_458, 1 + np, is1 + $I_L2537_504)
 2541.                   rxa(1 + $I_L2539_458, 1 + np, 1, is1 + $I_L2537_504) = rs(1 + $I_L2539_458, 1 + np, is1 + $I_L2537_504)
 2542.                   rra(1 + $I_L2539_458, 1 + np, 2, is1 + $I_L2537_504) = rr(1 + $I_L2539_458, 1 + np, is1 + $I_L2537_504)
 2543.                   rxa(1 + $I_L2539_458, 1 + np, 2, is1 + $I_L2537_504) = rs(1 + $I_L2539_458, 1 + np, is1 + $I_L2537_504)
 2544.                   $I_L2539_458 = 1 + $I_L2539_458
 2539.                   if ( $I_L2539_458 >= m ) exit
 2539.                enddo
 2539.             endif
 2572.             $I_L2537_504 = 1 + $I_L2537_504
 2571.             if ( $I_L2537_504 >= 1 + is2 + -is1 ) exit
 2571.          enddo
 2537.          $I_L2537_528 = 0
 2537.          do
 2546.             if ( icb + -np <= 0 ) then
 2547.                if ( m > 0 ) then
 2546.                   $I_L2546_506 = 0
 2546. !dir$ blocking_size( 1, 1 )
 2546.                   do
 2547.                      $I_L2547_460 = 0
 2547. !dir$ ivdep
 2547. !dir$ blocking_size( 256, 256 )
 2547.                      do
 2548.                         $denm_S13 = ( ts(1 + $I_L2547_460, np + -$I_L2546_506, is1 + $I_L2537_528) * 1.0/( 1.0 + -( rs(1 + $I_L2547_460, np + -$I_L2546_506, is1 + $I_L2537_528) * rxa(1 + $I_L2547_460, 1 + np + -$I_L2546_506, 1, is1 + $I_L2537_528) ) ) )
 2549.                         rra(1 + $I_L2547_460, np + -$I_L2546_506, 1, is1 + $I_L2537_528) = rr(1 + $I_L2547_460, np + -$I_L2546_506, is1 + $I_L2537_528) + $denm_S13 * ( rxa(1 + $I_L2547_460, 1 + np + -$I_L2546_506, 1, is1 + $I_L2537_528) * ( tt(1 + $I_L2547_460, np + -$I_L2546_506, is1 + $I_L2537_528) + -td(1 + $I_L2547_460, np + -$I_L2546_506, is1 + $I_L2537_528) ) + td(1 + $I_L2547_460, np + -$I_L2546_506, is1 + $I_L2537_528) * rra(1 + $I_L2547_460, 1 + np + -$I_L2546_506, 1, is1 + $I_L2537_528) )
 2551.                         rxa(1 + $I_L2547_460, np + -$I_L2546_506, 1, is1 + $I_L2537_528) = rs(1 + $I_L2547_460, np + -$I_L2546_506, is1 + $I_L2537_528) + $denm_S13 * rxa(1 + $I_L2547_460, 1 + np + -$I_L2546_506, 1, is1 + $I_L2537_528) * ts(1 + $I_L2547_460, np + -$I_L2546_506, is1 + $I_L2537_528)
 2555.                         $I_L2547_460 = 1 + $I_L2547_460
 2547.                         if ( $I_L2547_460 >= m ) exit
 2547.                      enddo
 2556.                      $I_L2546_506 = 1 + $I_L2546_506
 2555.                      if ( $I_L2546_506 >= 1 + np + -icb ) exit
 2555.                   enddo
 2546.                   $I_L2546_508 = 0
 2546.                   do
 2547.                      $I_L2547_462 = 0
 2547. !dir$ ivdep
 2547.                      do
 2553.                         rra(1 + $I_L2547_462, np + -$I_L2546_508, 2, is1 + $I_L2537_528) = rra(1 + $I_L2547_462, np + -$I_L2546_508, 1, is1 + $I_L2537_528)
 2555.                         $I_L2547_462 = 1 + $I_L2547_462
 2547.                         if ( $I_L2547_462 >= m ) exit
 2547.                      enddo
 2556.                      $I_L2546_508 = 1 + $I_L2546_508
 2555.                      if ( $I_L2546_508 >= 1 + np + -icb ) exit
 2555.                   enddo
 2546.                   $I_L2546_510 = 0
 2546.                   do
 2547.                      $I_L2547_464 = 0
 2547. !dir$ ivdep
 2547.                      do
 2554.                         rxa(1 + $I_L2547_464, np + -$I_L2546_510, 2, is1 + $I_L2537_528) = rxa(1 + $I_L2547_464, np + -$I_L2546_510, 1, is1 + $I_L2537_528)
 2555.                         $I_L2547_464 = 1 + $I_L2547_464
 2547.                         if ( $I_L2547_464 >= m ) exit
 2547.                      enddo
 2556.                      $I_L2546_510 = 1 + $I_L2546_510
 2555.                      if ( $I_L2546_510 >= 1 + np + -icb ) exit
 2555.                   enddo
 2555.                endif
 2555.             endif
 2572.             $I_L2537_528 = 1 + $I_L2537_528
 2571.             if ( $I_L2537_528 >= 1 + is2 + -is1 ) exit
 2571.          enddo
 2537.          $I_L2537_534 = 0
 2537.          do
 2559.             if ( im2 + -im1 >= 0 ) then
 2561.                if ( ict + -icb < 0 ) then
 2562.                   if ( m > 0 ) then
 2559.                      $I_L2559_530 = 0
 2559.                      do
 2561.                         $I_L2561_512 = 0
 2561. !dir$ blocking_size( 1, 1 )
 2561.                         do
 2562.                            $I_L2562_466 = 0
 2562. !dir$ ivdep
 2562. !dir$ loop_info (automatic) cache_nt( rra, rxa )
 2562. !dir$ blocking_size( 256, 256 )
 2562.                            do
 2563.                               $denm_S17 = ( ts(1 + $I_L2562_466, -1 + icb + -$I_L2561_512, im1 + $I_L2559_530) * 1.0/( 1.0 + -( rs(1 + $I_L2562_466, -1 + icb + -$I_L2561_512, im1 + $I_L2559_530) * rxa(1 + $I_L2562_466, icb + -$I_L2561_512, im1 + $I_L2559_530, is1 + $I_L2537_534) ) ) )
 2564.                               rra(1 + $I_L2562_466, -1 + icb + -$I_L2561_512, im1 + $I_L2559_530, is1 + $I_L2537_534) = rr(1 + $I_L2562_466, -1 + icb + -$I_L2561_512, im1 + $I_L2559_530) + $denm_S17 * ( rxa(1 + $I_L2562_466, icb + -$I_L2561_512, im1 + $I_L2559_530, is1 + $I_L2537_534) * ( tt(1 + $I_L2562_466, -1 + icb + -$I_L2561_512, im1 + $I_L2559_530) + -td(1 + $I_L2562_466, -1 + icb + -$I_L2561_512, im1 + $I_L2559_530) ) + td(1 + $I_L2562_466, -1 + icb + -$I_L2561_512, im1 + $I_L2559_530) * rra(1 + $I_L2562_466, icb + -$I_L2561_512, im1 + $I_L2559_530, is1 + $I_L2537_534) )
 2566.                               rxa(1 + $I_L2562_466, -1 + icb + -$I_L2561_512, im1 + $I_L2559_530, is1 + $I_L2537_534) = rs(1 + $I_L2562_466, -1 + icb + -$I_L2561_512, im1 + $I_L2559_530) + $denm_S17 * ts(1 + $I_L2562_466, -1 + icb + -$I_L2561_512, im1 + $I_L2559_530) * rxa(1 + $I_L2562_466, icb + -$I_L2561_512, im1 + $I_L2559_530, is1 + $I_L2537_534)
 2568.                               $I_L2562_466 = 1 + $I_L2562_466
 2562.                               if ( $I_L2562_466 >= m ) exit
 2562.                            enddo
 2569.                            $I_L2561_512 = 1 + $I_L2561_512
 2568.                            if ( $I_L2561_512 >= ( icb + -ict ) ) exit
 2568.                         enddo
 2571.                         $I_L2559_530 = 1 + $I_L2559_530
 2569.                         if ( $I_L2559_530 >= 1 + im2 + -im1 ) exit
 2569.                      enddo
 2569.                   endif
 2569.                endif
 2569.             endif
 2572.             $I_L2537_534 = 1 + $I_L2537_534
 2571.             if ( $I_L2537_534 >= 1 + is2 + -is1 ) exit
 2571.          enddo
 2571.       endif
 2576.       if ( ih2 + -ih1 >= 0 ) then
 2576.          $I_L2576_540 = 0
 2576.          do
 2579.             if ( ih1 + $I_L2576_540 == 1 ) then
 2580.                if ( m > 0 ) then
 2580.                   $I_L2580_386 = 0
 2580. !dir$ ivdep
 2580.                   do
 2581.                      ch(1 + $I_L2580_386) = 1.0 + -cc(1 + $I_L2580_386, 1)
 2582.                      $I_L2580_386 = 1 + $I_L2580_386
 2580.                      if ( $I_L2580_386 >= m ) exit
 2580.                   enddo
 2580.                endif
 2583.             else if ( m > 0 ) then
 2585.                $I_L2585_388 = 0
 2585. !dir$ ivdep
 2585.                do
 2586.                   ch(1 + $I_L2585_388) = cc(1 + $I_L2585_388, 1)
 2587.                   $I_L2585_388 = 1 + $I_L2585_388
 2585.                   if ( $I_L2585_388 >= m ) exit
 2585.                enddo
 2585.             endif
 2590.             if ( im2 + -im1 >= 0 ) then
 2590.                $I_L2590_532 = 0
 2590.                do
 2592.                   if ( im1 + $I_L2590_532 == 1 ) then
 2593.                      if ( m > 0 ) then
 2593.                         $I_L2593_390 = 0
 2593. !dir$ ivdep
 2593.                         do
 2594.                            cm(1 + $I_L2593_390) = ch(1 + $I_L2593_390) * ( 1.0 + -cc(1 + $I_L2593_390, 2) )
 2595.                            $I_L2593_390 = 1 + $I_L2593_390
 2593.                            if ( $I_L2593_390 >= m ) exit
 2593.                         enddo
 2593.                      endif
 2596.                   else if ( m > 0 ) then
 2598.                      $I_L2598_392 = 0
 2598. !dir$ ivdep
 2598.                      do
 2599.                         cm(1 + $I_L2598_392) = ch(1 + $I_L2598_392) * cc(1 + $I_L2598_392, 2)
 2600.                         $I_L2598_392 = 1 + $I_L2598_392
 2598.                         if ( $I_L2598_392 >= m ) exit
 2598.                      enddo
 2598.                   endif
 2603.                   if ( is2 + -is1 >= 0 ) then
 2603.                      $I_L2603_520 = 0
 2603.                      do
 2605.                         if ( is1 + $I_L2603_520 == 1 ) then
 2606.                            if ( m > 0 ) then
 2606.                               $I_L2606_394 = 0
 2606. !dir$ ivdep
 2606.                               do
 2607.                                  ct(1 + $I_L2606_394) = cm(1 + $I_L2606_394) * ( 1.0 + -cc(1 + $I_L2606_394, 3) )
 2608.                                  $I_L2606_394 = 1 + $I_L2606_394
 2606.                                  if ( $I_L2606_394 >= m ) exit
 2606.                               enddo
 2606.                            endif
 2609.                         else if ( m > 0 ) then
 2611.                            $I_L2611_396 = 0
 2611. !dir$ ivdep
 2611.                            do
 2612.                               ct(1 + $I_L2611_396) = cm(1 + $I_L2611_396) * cc(1 + $I_L2611_396, 3)
 2613.                               $I_L2611_396 = 1 + $I_L2611_396
 2611.                               if ( $I_L2611_396 >= m ) exit
 2611.                            enddo
 2611.                         endif
 2617.                         if ( np + -icb >= 0 ) then
 2618.                            if ( m > 0 ) then
 2617.                               $I_L2617_468 = 0
 2617.                               do
 2618.                                  $I_L2618_398 = 0
 2618. !dir$ ivdep
 2618.                                  do
 2619.                                     $denm_S29 = ( ts(1 + $I_L2618_398, icb + $I_L2617_468, is1 + $I_L2603_520) * 1.0/( 1.0 + -( rs(1 + $I_L2618_398, icb + $I_L2617_468, is1 + $I_L2603_520) * rsa(1 + $I_L2618_398, -1 + icb + $I_L2617_468, ih1 + $I_L2576_540, im1 + $I_L2590_532) ) ) )
 2620.                                     tda(1 + $I_L2618_398, icb + $I_L2617_468, ih1 + $I_L2576_540, im1 + $I_L2590_532) = td(1 + $I_L2618_398, icb + $I_L2617_468, is1 + $I_L2603_520) * tda(1 + $I_L2618_398, -1 + icb + $I_L2617_468, ih1 + $I_L2576_540, im1 + $I_L2590_532)
 2621.                                     $LD_SPLT_P2 = tda(1 + $I_L2618_398, -1 + icb + $I_L2617_468, ih1 + $I_L2576_540, im1 + $I_L2590_532)
 2621.                                     tta(1 + $I_L2618_398, icb + $I_L2617_468, ih1 + $I_L2576_540, im1 + $I_L2590_532) = $LD_SPLT_P2 * tt(1 + $I_L2618_398, icb + $I_L2617_468, is1 + $I_L2603_520) + $denm_S29 * ( tta(1 + $I_L2618_398, -1 + icb + $I_L2617_468, ih1 + $I_L2576_540, im1 + $I_L2590_532) + -$LD_SPLT_P2 + rsa(1 + $I_L2618_398, -1 + icb + $I_L2617_468, ih1 + $I_L2576_540, im1 + $I_L2590_532) * $LD_SPLT_P2 * rr(1 + $I_L2618_398, icb + $I_L2617_468, is1 + $I_L2603_520) )
 2624.                                     rsa(1 + $I_L2618_398, icb + $I_L2617_468, ih1 + $I_L2576_540, im1 + $I_L2590_532) = rs(1 + $I_L2618_398, icb + $I_L2617_468, is1 + $I_L2603_520) + $denm_S29 * ts(1 + $I_L2618_398, icb + $I_L2617_468, is1 + $I_L2603_520) * rsa(1 + $I_L2618_398, -1 + icb + $I_L2617_468, ih1 + $I_L2576_540, im1 + $I_L2590_532)
 2626.                                     $I_L2618_398 = 1 + $I_L2618_398
 2618.                                     if ( $I_L2618_398 >= m ) exit
 2618.                                  enddo
 2627.                                  $I_L2617_468 = 1 + $I_L2617_468
 2626.                                  if ( $I_L2617_468 >= 1 + np + -icb ) exit
 2626.                               enddo
 2626.                            endif
 2626.                         endif
 2630.                         if ( 1 + -ict < 0 ) then
 2631.                            if ( m > 0 ) then
 2630.                               $I_L2630_470 = 0
 2630. !dir$ blocking_size( 1, 1 )
 2630.                               do
 2631.                                  $I_L2631_400 = 0
 2631. !dir$ ivdep
 2631. !dir$ blocking_size( 256, 256 )
 2631.                                  do
 2632.                                     $denm_S32 = ( ts(1 + $I_L2631_400, -1 + ict + -$I_L2630_470, ih1 + $I_L2576_540) * 1.0/( 1.0 + -( rxa(1 + $I_L2631_400, ict + -$I_L2630_470, im1 + $I_L2590_532, is1 + $I_L2603_520) * rs(1 + $I_L2631_400, -1 + ict + -$I_L2630_470, ih1 + $I_L2576_540) ) ) )
 2633.                                     rra(1 + $I_L2631_400, -1 + ict + -$I_L2630_470, im1 + $I_L2590_532, is1 + $I_L2603_520) = rr(1 + $I_L2631_400, -1 + ict + -$I_L2630_470, ih1 + $I_L2576_540) + $denm_S32 * ( rxa(1 + $I_L2631_400, ict + -$I_L2630_470, im1 + $I_L2590_532, is1 + $I_L2603_520) * ( tt(1 + $I_L2631_400, -1 + ict + -$I_L2630_470, ih1 + $I_L2576_540) + -td(1 + $I_L2631_400, -1 + ict + -$I_L2630_470, ih1 + $I_L2576_540) ) + rra(1 + $I_L2631_400, ict + -$I_L2630_470, im1 + $I_L2590_532, is1 + $I_L2603_520) * td(1 + $I_L2631_400, -1 + ict + -$I_L2630_470, ih1 + $I_L2576_540) )
 2635.                                     rxa(1 + $I_L2631_400, -1 + ict + -$I_L2630_470, im1 + $I_L2590_532, is1 + $I_L2603_520) = rs(1 + $I_L2631_400, -1 + ict + -$I_L2630_470, ih1 + $I_L2576_540) + $denm_S32 * rxa(1 + $I_L2631_400, ict + -$I_L2630_470, im1 + $I_L2590_532, is1 + $I_L2603_520) * ts(1 + $I_L2631_400, -1 + ict + -$I_L2630_470, ih1 + $I_L2576_540)
 2637.                                     $I_L2631_400 = 1 + $I_L2631_400
 2631.                                     if ( $I_L2631_400 >= m ) exit
 2631.                                  enddo
 2638.                                  $I_L2630_470 = 1 + $I_L2630_470
 2637.                                  if ( $I_L2630_470 >= -1 + ict ) exit
 2637.                               enddo
 2637.                            endif
 2637.                         endif
 2642.                         if ( np > 0 ) then
 2643.                            if ( m > 0 ) then
 2642.                               $I_L2642_472 = 0
 2642. !dir$ blocking_size( 1, 1 )
 2642.                               do
 2643.                                  $I_L2643_402 = 0
 2643. !dir$ ivdep
 2643. !dir$ blocking_size( 256, 256 )
 2643.                                  do
 2644.                                     $denm_S37 = 1.0/( 1.0 + -( rxa(1 + $I_L2643_402, 2 + $I_L2642_472, im1 + $I_L2590_532, is1 + $I_L2603_520) * rsa(1 + $I_L2643_402, 1 + $I_L2642_472, ih1 + $I_L2576_540, im1 + $I_L2590_532) ) )
 2645.                                     $fdndir_WR0_R0 = tda(1 + $I_L2643_402, 1 + $I_L2642_472, ih1 + $I_L2576_540, im1 + $I_L2590_532)
 2645.                                     fdndir(1 + $I_L2643_402) = $fdndir_WR0_R0
 2646.                                     $xx_S35 = $fdndir_WR0_R0 * rra(1 + $I_L2643_402, 2 + $I_L2642_472, im1 + $I_L2590_532, is1 + $I_L2603_520)
 2647.                                     $yy_S36 = tta(1 + $I_L2643_402, 1 + $I_L2642_472, ih1 + $I_L2576_540, im1 + $I_L2590_532) + -$fdndir_WR0_R0
 2648.                                     $fdndif_WR0_R1 = $denm_S37 * ( $yy_S36 + $xx_S35 * rsa(1 + $I_L2643_402, 1 + $I_L2642_472, ih1 + $I_L2576_540, im1 + $I_L2590_532) )
 2648.                                     fdndif(1 + $I_L2643_402) = $fdndif_WR0_R1
 2652.                                     $fupdif_S38 = $denm_S37 * ( $xx_S35 + $yy_S36 * rxa(1 + $I_L2643_402, 2 + $I_L2642_472, im1 + $I_L2590_532, is1 + $I_L2603_520) )
 2653.                                     flxdn(1 + $I_L2643_402, 2 + $I_L2642_472) = $fdndif_WR0_R1 + $fdndir_WR0_R0 + -$fupdif_S38
 2654.                                     fup(1 + $I_L2643_402, 2 + $I_L2642_472) = $denm_S37 * ( $xx_S35 + $yy_S36 * rxa(1 + $I_L2643_402, 2 + $I_L2642_472, im1 + $I_L2590_532, is1 + $I_L2603_520) )
 2655.                                     fdn(1 + $I_L2643_402, 2 + $I_L2642_472) = $fdndir_WR0_R0 + $fdndif_WR0_R1
 2656.                                     $I_L2643_402 = 1 + $I_L2643_402
 2643.                                     if ( $I_L2643_402 >= m ) exit
 2643.                                  enddo
 2657.                                  $I_L2642_472 = 1 + $I_L2642_472
 2656.                                  if ( $I_L2642_472 >= np ) exit
 2656.                               enddo
 2656.                            endif
 2656.                         endif
 2659.                         if ( m > 0 ) then
 2659.                            $I_L2659_404 = 0
 2659. !dir$ ivdep
 2659.                            do
 2660.                               flxdn(1 + $I_L2659_404, 1) = 1.0 + -rra(1 + $I_L2659_404, 1, im1 + $I_L2590_532, is1 + $I_L2603_520)
 2661.                               fdn(1 + $I_L2659_404, 1) = 1.0
 2662.                               fup(1 + $I_L2659_404, 1) = rra(1 + $I_L2659_404, 1, im1 + $I_L2590_532, is1 + $I_L2603_520)
 2663.                               $I_L2659_404 = 1 + $I_L2659_404
 2659.                               if ( $I_L2659_404 >= m ) exit
 2659.                            enddo
 2684.                            if ( ih1 + $I_L2576_540 /= 1 ) then
 2680.                               $I_L2680_410 = 0
 2680. !dir$ ivdep
 2680.                               do
 2681.                                  fsdir(1 + $I_L2680_410) = fsdir(1 + $I_L2680_410) + ct(1 + $I_L2680_410) * fdndir(1 + $I_L2680_410)
 2682.                                  fsdif(1 + $I_L2680_410) = fsdif(1 + $I_L2680_410) + fdndif(1 + $I_L2680_410) * ct(1 + $I_L2680_410)
 2688.                                  $I_L2680_410 = 1 + $I_L2680_410
 2687.                                  if ( $I_L2680_410 >= m ) exit
 2687.                               enddo
 2687.                            else if ( im1 + $I_L2590_532 /= 1 ) then
 2680.                               $I_L2680_414 = 0
 2680. !dir$ ivdep
 2680.                               do
 2681.                                  fsdir(1 + $I_L2680_414) = fsdir(1 + $I_L2680_414) + ct(1 + $I_L2680_414) * fdndir(1 + $I_L2680_414)
 2682.                                  fsdif(1 + $I_L2680_414) = fsdif(1 + $I_L2680_414) + fdndif(1 + $I_L2680_414) * ct(1 + $I_L2680_414)
 2688.                                  $I_L2680_414 = 1 + $I_L2680_414
 2687.                                  if ( $I_L2680_414 >= m ) exit
 2687.                               enddo
 2687.                            else if ( is1 + $I_L2603_520 == 1 ) then
 2680.                               $I_L2680_408 = 0
 2680. !dir$ ivdep
 2680.                               do
 2685.                                  fsdir_c(1 + $I_L2680_408) = fdndir(1 + $I_L2680_408)
 2686.                                  fsdif_c(1 + $I_L2680_408) = fdndif(1 + $I_L2680_408)
 2681.                                  fsdir(1 + $I_L2680_408) = fsdir(1 + $I_L2680_408) + fdndir(1 + $I_L2680_408) * ct(1 + $I_L2680_408)
 2682.                                  fsdif(1 + $I_L2680_408) = fsdif(1 + $I_L2680_408) + fdndif(1 + $I_L2680_408) * ct(1 + $I_L2680_408)
 2688.                                  $I_L2680_408 = 1 + $I_L2680_408
 2687.                                  if ( $I_L2680_408 >= m ) exit
 2687.                               enddo
 2687.                            else
 2680.                               $I_L2680_418 = 0
 2680. !dir$ ivdep
 2680.                               do
 2681.                                  fsdir(1 + $I_L2680_418) = fsdir(1 + $I_L2680_418) + ct(1 + $I_L2680_418) * fdndir(1 + $I_L2680_418)
 2682.                                  fsdif(1 + $I_L2680_418) = fsdif(1 + $I_L2680_418) + fdndif(1 + $I_L2680_418) * ct(1 + $I_L2680_418)
 2688.                                  $I_L2680_418 = 1 + $I_L2680_418
 2687.                                  if ( $I_L2680_418 >= m ) exit
 2687.                               enddo
 2687.                            endif
 2687.                         endif
 2667.                         if ( np >= 0 ) then
 2668.                            if ( m > 0 ) then
 2669.                               if ( ih1 + $I_L2576_540 /= 1 ) then
 2667.                                  $I_L2667_476 = 0
 2667.                                  if ( -3 + np >= 0 ) then
 2667.                                     $I_L2667_565 = 0
 2667. !dir$ blocking_size( 1, 1 )
 2667.                                     do
 2668.                                        $I_L2668_412 = 0
 2668. !dir$ ivdep
 2668. !dir$ blocking_size( 256, 256 )
 2668.                                        do
 2674.                                           fall(1 + $I_L2668_412, 1 + 4 * $I_L2667_565) = fall(1 + $I_L2668_412, 1 + 4 * $I_L2667_565) + ct(1 + $I_L2668_412) * flxdn(1 + $I_L2668_412, 1 + 4 * $I_L2667_565)
 2674.                                           fall(1 + $I_L2668_412, 2 + 4 * $I_L2667_565) = fall(1 + $I_L2668_412, 2 + 4 * $I_L2667_565) + ct(1 + $I_L2668_412) * flxdn(1 + $I_L2668_412, 2 + 4 * $I_L2667_565)
 2674.                                           fall(1 + $I_L2668_412, 3 + 4 * $I_L2667_565) = fall(1 + $I_L2668_412, 3 + 4 * $I_L2667_565) + ct(1 + $I_L2668_412) * flxdn(1 + $I_L2668_412, 3 + 4 * $I_L2667_565)
 2674.                                           fall(1 + $I_L2668_412, 4 + 4 * $I_L2667_565) = fall(1 + $I_L2668_412, 4 + 4 * $I_L2667_565) + ct(1 + $I_L2668_412) * flxdn(1 + $I_L2668_412, 4 + 4 * $I_L2667_565)
 2675.                                           fall_d(1 + $I_L2668_412, 1 + 4 * $I_L2667_565) = fall_d(1 + $I_L2668_412, 1 + 4 * $I_L2667_565) + ct(1 + $I_L2668_412) * fdn(1 + $I_L2668_412, 1 + 4 * $I_L2667_565)
 2675.                                           fall_d(1 + $I_L2668_412, 2 + 4 * $I_L2667_565) = fall_d(1 + $I_L2668_412, 2 + 4 * $I_L2667_565) + ct(1 + $I_L2668_412) * fdn(1 + $I_L2668_412, 2 + 4 * $I_L2667_565)
 2675.                                           fall_d(1 + $I_L2668_412, 3 + 4 * $I_L2667_565) = fall_d(1 + $I_L2668_412, 3 + 4 * $I_L2667_565) + ct(1 + $I_L2668_412) * fdn(1 + $I_L2668_412, 3 + 4 * $I_L2667_565)
 2675.                                           fall_d(1 + $I_L2668_412, 4 + 4 * $I_L2667_565) = fall_d(1 + $I_L2668_412, 4 + 4 * $I_L2667_565) + ct(1 + $I_L2668_412) * fdn(1 + $I_L2668_412, 4 + 4 * $I_L2667_565)
 2676.                                           fall_u(1 + $I_L2668_412, 1 + 4 * $I_L2667_565) = fall_u(1 + $I_L2668_412, 1 + 4 * $I_L2667_565) + ct(1 + $I_L2668_412) * fup(1 + $I_L2668_412, 1 + 4 * $I_L2667_565)
 2676.                                           fall_u(1 + $I_L2668_412, 2 + 4 * $I_L2667_565) = fall_u(1 + $I_L2668_412, 2 + 4 * $I_L2667_565) + ct(1 + $I_L2668_412) * fup(1 + $I_L2668_412, 2 + 4 * $I_L2667_565)
 2676.                                           fall_u(1 + $I_L2668_412, 3 + 4 * $I_L2667_565) = fall_u(1 + $I_L2668_412, 3 + 4 * $I_L2667_565) + ct(1 + $I_L2668_412) * fup(1 + $I_L2668_412, 3 + 4 * $I_L2667_565)
 2676.                                           fall_u(1 + $I_L2668_412, 4 + 4 * $I_L2667_565) = fall_u(1 + $I_L2668_412, 4 + 4 * $I_L2667_565) + ct(1 + $I_L2668_412) * fup(1 + $I_L2668_412, 4 + 4 * $I_L2667_565)
 2677.                                           $I_L2668_412 = 1 + $I_L2668_412
 2673.                                           if ( $I_L2668_412 >= m ) exit
 2673.                                        enddo
 2678.                                        $I_L2667_565 = 1 + $I_L2667_565
 2677.                                        if ( $I_L2667_565 >= _rsh( 1 + np, 2 ) ) exit
 2677.                                     enddo
 2678.                                     $I_L2667_476 = and( 0xfffffffffffffffcUL, 1 + np )
 2678.                                  endif
 2667.                                  if ( $I_L2667_476 < 1 + np ) then
 2667.                                     $I_L2667_550 = 0
 2667. !dir$ blocking_size( 1, 1 )
 2667.                                     do
 2668.                                        $I_L2668_412 = 0
 2668. !dir$ ivdep
 2668. !dir$ blocking_size( 256, 256 )
 2668.                                        do
 2674.                                           fall(1 + $I_L2668_412, 1 + $I_L2667_476 + $I_L2667_550) = fall(1 + $I_L2668_412, 1 + $I_L2667_476 + $I_L2667_550) + ct(1 + $I_L2668_412) * flxdn(1 + $I_L2668_412, 1 + $I_L2667_476 + $I_L2667_550)
 2675.                                           fall_d(1 + $I_L2668_412, 1 + $I_L2667_476 + $I_L2667_550) = fall_d(1 + $I_L2668_412, 1 + $I_L2667_476 + $I_L2667_550) + ct(1 + $I_L2668_412) * fdn(1 + $I_L2668_412, 1 + $I_L2667_476 + $I_L2667_550)
 2676.                                           fall_u(1 + $I_L2668_412, 1 + $I_L2667_476 + $I_L2667_550) = fall_u(1 + $I_L2668_412, 1 + $I_L2667_476 + $I_L2667_550) + ct(1 + $I_L2668_412) * fup(1 + $I_L2668_412, 1 + $I_L2667_476 + $I_L2667_550)
 2677.                                           $I_L2668_412 = 1 + $I_L2668_412
 2673.                                           if ( $I_L2668_412 >= m ) exit
 2673.                                        enddo
 2678.                                        $I_L2667_550 = 1 + $I_L2667_550
 2677.                                        if ( $I_L2667_550 >= 1 + np + -$I_L2667_476 ) exit
 2677.                                     enddo
 2677.                                  endif
 2677.                               else if ( im1 + $I_L2590_532 /= 1 ) then
 2667.                                  $I_L2667_478 = 0
 2667.                                  if ( -3 + np >= 0 ) then
 2667.                                     $I_L2667_563 = 0
 2667. !dir$ blocking_size( 1, 1 )
 2667.                                     do
 2668.                                        $I_L2668_416 = 0
 2668. !dir$ ivdep
 2668. !dir$ blocking_size( 256, 256 )
 2668.                                        do
 2674.                                           fall(1 + $I_L2668_416, 1 + 4 * $I_L2667_563) = fall(1 + $I_L2668_416, 1 + 4 * $I_L2667_563) + ct(1 + $I_L2668_416) * flxdn(1 + $I_L2668_416, 1 + 4 * $I_L2667_563)
 2674.                                           fall(1 + $I_L2668_416, 2 + 4 * $I_L2667_563) = fall(1 + $I_L2668_416, 2 + 4 * $I_L2667_563) + ct(1 + $I_L2668_416) * flxdn(1 + $I_L2668_416, 2 + 4 * $I_L2667_563)
 2674.                                           fall(1 + $I_L2668_416, 3 + 4 * $I_L2667_563) = fall(1 + $I_L2668_416, 3 + 4 * $I_L2667_563) + ct(1 + $I_L2668_416) * flxdn(1 + $I_L2668_416, 3 + 4 * $I_L2667_563)
 2674.                                           fall(1 + $I_L2668_416, 4 + 4 * $I_L2667_563) = fall(1 + $I_L2668_416, 4 + 4 * $I_L2667_563) + ct(1 + $I_L2668_416) * flxdn(1 + $I_L2668_416, 4 + 4 * $I_L2667_563)
 2675.                                           fall_d(1 + $I_L2668_416, 1 + 4 * $I_L2667_563) = fall_d(1 + $I_L2668_416, 1 + 4 * $I_L2667_563) + ct(1 + $I_L2668_416) * fdn(1 + $I_L2668_416, 1 + 4 * $I_L2667_563)
 2675.                                           fall_d(1 + $I_L2668_416, 2 + 4 * $I_L2667_563) = fall_d(1 + $I_L2668_416, 2 + 4 * $I_L2667_563) + ct(1 + $I_L2668_416) * fdn(1 + $I_L2668_416, 2 + 4 * $I_L2667_563)
 2675.                                           fall_d(1 + $I_L2668_416, 3 + 4 * $I_L2667_563) = fall_d(1 + $I_L2668_416, 3 + 4 * $I_L2667_563) + ct(1 + $I_L2668_416) * fdn(1 + $I_L2668_416, 3 + 4 * $I_L2667_563)
 2675.                                           fall_d(1 + $I_L2668_416, 4 + 4 * $I_L2667_563) = fall_d(1 + $I_L2668_416, 4 + 4 * $I_L2667_563) + ct(1 + $I_L2668_416) * fdn(1 + $I_L2668_416, 4 + 4 * $I_L2667_563)
 2676.                                           fall_u(1 + $I_L2668_416, 1 + 4 * $I_L2667_563) = fall_u(1 + $I_L2668_416, 1 + 4 * $I_L2667_563) + ct(1 + $I_L2668_416) * fup(1 + $I_L2668_416, 1 + 4 * $I_L2667_563)
 2676.                                           fall_u(1 + $I_L2668_416, 2 + 4 * $I_L2667_563) = fall_u(1 + $I_L2668_416, 2 + 4 * $I_L2667_563) + ct(1 + $I_L2668_416) * fup(1 + $I_L2668_416, 2 + 4 * $I_L2667_563)
 2676.                                           fall_u(1 + $I_L2668_416, 3 + 4 * $I_L2667_563) = fall_u(1 + $I_L2668_416, 3 + 4 * $I_L2667_563) + ct(1 + $I_L2668_416) * fup(1 + $I_L2668_416, 3 + 4 * $I_L2667_563)
 2676.                                           fall_u(1 + $I_L2668_416, 4 + 4 * $I_L2667_563) = fall_u(1 + $I_L2668_416, 4 + 4 * $I_L2667_563) + ct(1 + $I_L2668_416) * fup(1 + $I_L2668_416, 4 + 4 * $I_L2667_563)
 2677.                                           $I_L2668_416 = 1 + $I_L2668_416
 2673.                                           if ( $I_L2668_416 >= m ) exit
 2673.                                        enddo
 2678.                                        $I_L2667_563 = 1 + $I_L2667_563
 2677.                                        if ( $I_L2667_563 >= _rsh( 1 + np, 2 ) ) exit
 2677.                                     enddo
 2678.                                     $I_L2667_478 = and( 0xfffffffffffffffcUL, 1 + np )
 2678.                                  endif
 2667.                                  if ( $I_L2667_478 < 1 + np ) then
 2667.                                     $I_L2667_553 = 0
 2667. !dir$ blocking_size( 1, 1 )
 2667.                                     do
 2668.                                        $I_L2668_416 = 0
 2668. !dir$ ivdep
 2668. !dir$ blocking_size( 256, 256 )
 2668.                                        do
 2674.                                           fall(1 + $I_L2668_416, 1 + $I_L2667_478 + $I_L2667_553) = fall(1 + $I_L2668_416, 1 + $I_L2667_478 + $I_L2667_553) + ct(1 + $I_L2668_416) * flxdn(1 + $I_L2668_416, 1 + $I_L2667_478 + $I_L2667_553)
 2675.                                           fall_d(1 + $I_L2668_416, 1 + $I_L2667_478 + $I_L2667_553) = fall_d(1 + $I_L2668_416, 1 + $I_L2667_478 + $I_L2667_553) + ct(1 + $I_L2668_416) * fdn(1 + $I_L2668_416, 1 + $I_L2667_478 + $I_L2667_553)
 2676.                                           fall_u(1 + $I_L2668_416, 1 + $I_L2667_478 + $I_L2667_553) = fall_u(1 + $I_L2668_416, 1 + $I_L2667_478 + $I_L2667_553) + ct(1 + $I_L2668_416) * fup(1 + $I_L2668_416, 1 + $I_L2667_478 + $I_L2667_553)
 2677.                                           $I_L2668_416 = 1 + $I_L2668_416
 2673.                                           if ( $I_L2668_416 >= m ) exit
 2673.                                        enddo
 2678.                                        $I_L2667_553 = 1 + $I_L2667_553
 2677.                                        if ( $I_L2667_553 >= 1 + np + -$I_L2667_478 ) exit
 2677.                                     enddo
 2677.                                  endif
 2677.                               else if ( is1 + $I_L2603_520 == 1 ) then
 2667.                                  $I_L2667_474 = 0
 2667. !dir$ blocking_size( 1, 1 )
 2667.                                  do
 2668.                                     $I_L2668_406 = 0
 2668. !dir$ ivdep
 2668. !dir$ blocking_size( 256, 256 )
 2668.                                     do
 2670.                                        fclr(1 + $I_L2668_406, 1 + $I_L2667_474) = flxdn(1 + $I_L2668_406, 1 + $I_L2667_474)
 2671.                                        fclr_d(1 + $I_L2668_406, 1 + $I_L2667_474) = fdn(1 + $I_L2668_406, 1 + $I_L2667_474)
 2672.                                        fclr_u(1 + $I_L2668_406, 1 + $I_L2667_474) = fup(1 + $I_L2668_406, 1 + $I_L2667_474)
 2674.                                        fall(1 + $I_L2668_406, 1 + $I_L2667_474) = fall(1 + $I_L2668_406, 1 + $I_L2667_474) + ct(1 + $I_L2668_406) * flxdn(1 + $I_L2668_406, 1 + $I_L2667_474)
 2675.                                        fall_d(1 + $I_L2668_406, 1 + $I_L2667_474) = fall_d(1 + $I_L2668_406, 1 + $I_L2667_474) + ct(1 + $I_L2668_406) * fdn(1 + $I_L2668_406, 1 + $I_L2667_474)
 2676.                                        fall_u(1 + $I_L2668_406, 1 + $I_L2667_474) = fall_u(1 + $I_L2668_406, 1 + $I_L2667_474) + ct(1 + $I_L2668_406) * fup(1 + $I_L2668_406, 1 + $I_L2667_474)
 2677.                                        $I_L2668_406 = 1 + $I_L2668_406
 2673.                                        if ( $I_L2668_406 >= m ) exit
 2673.                                     enddo
 2678.                                     $I_L2667_474 = 1 + $I_L2667_474
 2677.                                     if ( $I_L2667_474 >= 1 + np ) exit
 2677.                                  enddo
 2677.                               else
 2667.                                  $I_L2667_480 = 0
 2667.                                  if ( -3 + np >= 0 ) then
 2667.                                     $I_L2667_561 = 0
 2667. !dir$ blocking_size( 1, 1 )
 2667.                                     do
 2668.                                        $I_L2668_420 = 0
 2668. !dir$ ivdep
 2668. !dir$ blocking_size( 256, 256 )
 2668.                                        do
 2674.                                           fall(1 + $I_L2668_420, 1 + 4 * $I_L2667_561) = fall(1 + $I_L2668_420, 1 + 4 * $I_L2667_561) + ct(1 + $I_L2668_420) * flxdn(1 + $I_L2668_420, 1 + 4 * $I_L2667_561)
 2674.                                           fall(1 + $I_L2668_420, 2 + 4 * $I_L2667_561) = fall(1 + $I_L2668_420, 2 + 4 * $I_L2667_561) + ct(1 + $I_L2668_420) * flxdn(1 + $I_L2668_420, 2 + 4 * $I_L2667_561)
 2674.                                           fall(1 + $I_L2668_420, 3 + 4 * $I_L2667_561) = fall(1 + $I_L2668_420, 3 + 4 * $I_L2667_561) + ct(1 + $I_L2668_420) * flxdn(1 + $I_L2668_420, 3 + 4 * $I_L2667_561)
 2674.                                           fall(1 + $I_L2668_420, 4 + 4 * $I_L2667_561) = fall(1 + $I_L2668_420, 4 + 4 * $I_L2667_561) + ct(1 + $I_L2668_420) * flxdn(1 + $I_L2668_420, 4 + 4 * $I_L2667_561)
 2675.                                           fall_d(1 + $I_L2668_420, 1 + 4 * $I_L2667_561) = fall_d(1 + $I_L2668_420, 1 + 4 * $I_L2667_561) + ct(1 + $I_L2668_420) * fdn(1 + $I_L2668_420, 1 + 4 * $I_L2667_561)
 2675.                                           fall_d(1 + $I_L2668_420, 2 + 4 * $I_L2667_561) = fall_d(1 + $I_L2668_420, 2 + 4 * $I_L2667_561) + ct(1 + $I_L2668_420) * fdn(1 + $I_L2668_420, 2 + 4 * $I_L2667_561)
 2675.                                           fall_d(1 + $I_L2668_420, 3 + 4 * $I_L2667_561) = fall_d(1 + $I_L2668_420, 3 + 4 * $I_L2667_561) + ct(1 + $I_L2668_420) * fdn(1 + $I_L2668_420, 3 + 4 * $I_L2667_561)
 2675.                                           fall_d(1 + $I_L2668_420, 4 + 4 * $I_L2667_561) = fall_d(1 + $I_L2668_420, 4 + 4 * $I_L2667_561) + ct(1 + $I_L2668_420) * fdn(1 + $I_L2668_420, 4 + 4 * $I_L2667_561)
 2676.                                           fall_u(1 + $I_L2668_420, 1 + 4 * $I_L2667_561) = fall_u(1 + $I_L2668_420, 1 + 4 * $I_L2667_561) + ct(1 + $I_L2668_420) * fup(1 + $I_L2668_420, 1 + 4 * $I_L2667_561)
 2676.                                           fall_u(1 + $I_L2668_420, 2 + 4 * $I_L2667_561) = fall_u(1 + $I_L2668_420, 2 + 4 * $I_L2667_561) + ct(1 + $I_L2668_420) * fup(1 + $I_L2668_420, 2 + 4 * $I_L2667_561)
 2676.                                           fall_u(1 + $I_L2668_420, 3 + 4 * $I_L2667_561) = fall_u(1 + $I_L2668_420, 3 + 4 * $I_L2667_561) + ct(1 + $I_L2668_420) * fup(1 + $I_L2668_420, 3 + 4 * $I_L2667_561)
 2676.                                           fall_u(1 + $I_L2668_420, 4 + 4 * $I_L2667_561) = fall_u(1 + $I_L2668_420, 4 + 4 * $I_L2667_561) + ct(1 + $I_L2668_420) * fup(1 + $I_L2668_420, 4 + 4 * $I_L2667_561)
 2677.                                           $I_L2668_420 = 1 + $I_L2668_420
 2673.                                           if ( $I_L2668_420 >= m ) exit
 2673.                                        enddo
 2678.                                        $I_L2667_561 = 1 + $I_L2667_561
 2677.                                        if ( $I_L2667_561 >= _rsh( 1 + np, 2 ) ) exit
 2677.                                     enddo
 2678.                                     $I_L2667_480 = and( 0xfffffffffffffffcUL, 1 + np )
 2678.                                  endif
 2667.                                  if ( $I_L2667_480 < 1 + np ) then
 2667.                                     $I_L2667_556 = 0
 2667. !dir$ blocking_size( 1, 1 )
 2667.                                     do
 2668.                                        $I_L2668_420 = 0
 2668. !dir$ ivdep
 2668. !dir$ blocking_size( 256, 256 )
 2668.                                        do
 2674.                                           fall(1 + $I_L2668_420, 1 + $I_L2667_480 + $I_L2667_556) = fall(1 + $I_L2668_420, 1 + $I_L2667_480 + $I_L2667_556) + ct(1 + $I_L2668_420) * flxdn(1 + $I_L2668_420, 1 + $I_L2667_480 + $I_L2667_556)
 2675.                                           fall_d(1 + $I_L2668_420, 1 + $I_L2667_480 + $I_L2667_556) = fall_d(1 + $I_L2668_420, 1 + $I_L2667_480 + $I_L2667_556) + ct(1 + $I_L2668_420) * fdn(1 + $I_L2668_420, 1 + $I_L2667_480 + $I_L2667_556)
 2676.                                           fall_u(1 + $I_L2668_420, 1 + $I_L2667_480 + $I_L2667_556) = fall_u(1 + $I_L2668_420, 1 + $I_L2667_480 + $I_L2667_556) + ct(1 + $I_L2668_420) * fup(1 + $I_L2668_420, 1 + $I_L2667_480 + $I_L2667_556)
 2677.                                           $I_L2668_420 = 1 + $I_L2668_420
 2673.                                           if ( $I_L2668_420 >= m ) exit
 2673.                                        enddo
 2678.                                        $I_L2667_556 = 1 + $I_L2667_556
 2677.                                        if ( $I_L2667_556 >= 1 + np + -$I_L2667_480 ) exit
 2677.                                     enddo
 2677.                                  endif
 2677.                               endif
 2677.                            endif
 2677.                         endif
 2690.                         $I_L2603_520 = 1 + $I_L2603_520
 2688.                         if ( $I_L2603_520 >= 1 + is2 + -is1 ) exit
 2688.                      enddo
 2688.                   endif
 2691.                   $I_L2590_532 = 1 + $I_L2590_532
 2690.                   if ( $I_L2590_532 >= 1 + im2 + -im1 ) exit
 2690.                enddo
 2690.             endif
 2692.             $I_L2576_540 = 1 + $I_L2576_540
 2691.             if ( $I_L2576_540 >= 1 + ih2 + -ih1 ) exit
 2691.          enddo
 2691.       endif
 2432.       _free( t$636 )
 2694.       return
 2694.       end
 2694.       
    6.       
    6.       module rad_clirad
    6.       end
    6.       
