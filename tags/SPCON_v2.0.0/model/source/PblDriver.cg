       !        
       !        Cray Inc. Decompilation
       !        Notice - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  PblDriver.f90
       !        File                  :  PblDriver.cg
       !        Network               :  Gemini interconnect
       !        Target                :  X86, 64-bit, sse3
       !        
   47.       
   47.       subroutine initpbldriver( kmax, sl, del_in, si )
   45.       $MR_kmax_0 = 0[loc( kmax ),0]
   45.       if ( $MR_kmax_0 < 0 ) then
   45.          $LB_Y0 = 1
   45.          $UB_Y1 = 1 + $MR_kmax_0
   45.          $Subscript_Y5 = 1
   45.          _bounds_error( $_File_Y40, $Line_Y42, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y43 )
   45.       endif
   45.       call initplanboundlayer( 0[loc( kmax ),0], 0[loc( sl ),0].L, 0[loc( del_in ),0].L, 0[loc( si ),0].L )
   47.       return
   47.       end
   47.       
   98.       
   98.       subroutine pbl_driver( gu, gv, gt, gq, delsig, ncols, kmax, delt, colrad, tmtx, qmtx, umtx, gl0, pbl, latco, pbl_coefkm, pbl_coefkh )
   77.       call ympbl0( 0[loc( gu ),0].L, 0[loc( gv ),0].L, 0[loc( gt ),0].L, 0[loc( gq ),0].L, 0[loc( delsig ),0].L, 0[loc( ncols ),0], 0[loc( kmax ),0], 0[loc( delt ),0].L, 0[loc( colrad ),0].L, 0[loc( tmtx ),0].L, 0[loc( qmtx ),0].L, 0[loc( umtx ),0].L, 0[loc( gl0 ),0].L, 0[loc( pbl ),0], 0[loc( pbl_coefkm ),0].L, 0[loc( pbl_coefkh ),0].L )
   83.       if ( 0[loc( pbl ),0] /= 1 ) then
   87.          if ( int( startstordiag ) /= 0 ) then
   88.             call pbldiagnstorage( 0[loc( latco ),0], 0[loc( ncols ),0], 0[loc( kmax ),0], 0[loc( tmtx ),0].L, 0[loc( qmtx ),0].L, 0[loc( umtx ),0].L )
   88.          endif
   93.          $t_S0 = isgridhistoryon
   93.          if ( int( $t_S0 ) /= 0 ) then
   94.             call pblgridhistorystorage( 0[loc( latco ),0], 0[loc( ncols ),0], 0[loc( kmax ),0], 0[loc( tmtx ),0].L, 0[loc( qmtx ),0].L, 0[loc( umtx ),0].L )
   94.          endif
   94.       endif
   98.       return
   98.       end
   98.       
  114.       
  114.       subroutine pblgridhistorystorage( latco, ncols, kmax, tmtx, qmtx, umtx )
  109.       $MR_dogrh_S1 = (10,dogrh)[0].L
  109.       $MR_dogrh_S0 = (9,dogrh)[0].L
  109.       $MR_latco_S2 = 0[loc( latco ),0]
  109.       $LCS_0 = $MR_dogrh_S0 + $MR_dogrh_S1
  109.       if ( or( $MR_latco_S2 - $MR_dogrh_S0, -1 + ( $LCS_0 - $MR_latco_S2 ) ) < 0 ) then
  109.          $LB_Y0 = $MR_dogrh_S0
  109.          $UB_Y1 = -1 + $LCS_0
  109.          $Subscript_Y5 = $MR_latco_S2
  109.          _bounds_error( $_File_Y40, $Line_Y42, $_Name_Y41, $Dim_Y9, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y43 )
  109.       endif
  109.       $MR_dogrh_S4 = (7,dogrh)[0].L
  109.       $MR_dogrh_S3 = (6,dogrh)[0].L
  109.       $LCS_1 = $MR_dogrh_S3 + $MR_dogrh_S4
  109.       if ( or( -68 + $LCS_1, 67 - $MR_dogrh_S3 ) < 0 ) then
  109.          $LB_Y0 = $MR_dogrh_S3
  109.          $UB_Y1 = -1 + $LCS_1
  109.          $Subscript_Y5 = 67
  109.          _bounds_error( $_File_Y40, $Line_Y42, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y44 )
  109.       endif
  109.       $MR_dogrh_S5 = dogrh[0].L
  109.       $MR_dogrh_S6 = (11,dogrh)[0].L
  109.       if ( int( 67[int( $MR_dogrh_S5, 8 ),$MR_dogrh_S6 * ( $MR_latco_S2 - $MR_dogrh_S0 ) - $MR_dogrh_S3] ) /= 0 ) then
  109. !dir$ suppress 0[loc( tmtx ),2 * t$25].L
  109.          $MR_kmax_S7 = 0[loc( kmax ),0]
  109.          if ( $MR_kmax_S7 <= 0 ) then
  109.             $LB_Y0 = 1
  109.             $UB_Y1 = $MR_kmax_S7
  109.             $Subscript_Y5 = 1
  109.             _bounds_error( $_File_Y40, $Line_Y42, $_Name_Y45, $Dim_Y9, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y46 )
  109.          endif
  109.          $MR_ncols_S8 = 0[loc( ncols ),0]
  109.          if ( $MR_ncols_S8 <= 0 ) then
  109.             $LB_Y0 = 1
  109.             $UB_Y1 = $MR_ncols_S8
  109.             $Subscript_Y5 = 1
  109.             _bounds_error( $_File_Y40, $Line_Y42, $_Name_Y47, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y48 )
  109.          endif
  109.          $LCS_MR_ncols_2 = $MR_ncols_S8
  109.          t$35[0].L = pointer to array[1] of array[1] of real (kind=8)( loc( 0[loc( tmtx ),_lsh( $LCS_MR_ncols_2 * $MR_kmax_S7, 1 )].L ) )
  109.          (1,t$35)[0].L = 64
  109.          (2,t$35)[0].L = 0x200000000020051UL
  109.          (6,t$35)[0] = 13
  109.          (7,t$35)[0] = 134481411
  109.          (4,t$35)[0].L = 0
  109.          (5,t$35)[0].L = 0
  109.          (6,t$35)[0].L = 1
  109.          (7,t$35)[0].L = ( max( 0, $MR_ncols_S8 ) )
  109.          (8,t$35)[0].L = 1
  109.          (9,t$35)[0].L = 1
  109.          (10,t$35)[0].L = ( max( 0, $MR_kmax_S7 ) )
  109.          (11,t$35)[0].L = max( 0, $LCS_MR_ncols_2 )
  109.          ipa$64 = 67
  109.          call store2d( t$35, ipa$64, 0[loc( latco ),0], 0 )
  109.       endif
  110.       $MR_dogrh_S10 = (10,dogrh)[0].L
  110.       $MR_dogrh_S9 = (9,dogrh)[0].L
  110.       $MR_latco_S11 = 0[loc( latco ),0]
  110.       $LCS_3 = $MR_dogrh_S9 + $MR_dogrh_S10
  110.       if ( or( $MR_latco_S11 - $MR_dogrh_S9, -1 + ( $LCS_3 - $MR_latco_S11 ) ) < 0 ) then
  110.          $LB_Y0 = $MR_dogrh_S9
  110.          $UB_Y1 = -1 + $LCS_3
  110.          $Subscript_Y5 = $MR_latco_S11
  110.          _bounds_error( $_File_Y40, $Line_Y49, $_Name_Y41, $Dim_Y9, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y50 )
  110.       endif
  110.       $MR_dogrh_S13 = (7,dogrh)[0].L
  110.       $MR_dogrh_S12 = (6,dogrh)[0].L
  110.       $LCS_4 = $MR_dogrh_S12 + $MR_dogrh_S13
  110.       if ( or( -73 + $LCS_4, 72 - $MR_dogrh_S12 ) < 0 ) then
  110.          $LB_Y0 = $MR_dogrh_S12
  110.          $UB_Y1 = -1 + $LCS_4
  110.          $Subscript_Y5 = 72
  110.          _bounds_error( $_File_Y40, $Line_Y49, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y51 )
  110.       endif
  110.       $MR_dogrh_S14 = dogrh[0].L
  110.       $MR_dogrh_S15 = (11,dogrh)[0].L
  110.       if ( int( 72[int( $MR_dogrh_S14, 8 ),$MR_dogrh_S15 * ( $MR_latco_S11 - $MR_dogrh_S9 ) - $MR_dogrh_S12] ) /= 0 ) then
  110. !dir$ suppress 0[loc( umtx ),2 * t$25].L
  110.          $MR_kmax_S16 = 0[loc( kmax ),0]
  110.          if ( $MR_kmax_S16 <= 0 ) then
  110.             $LB_Y0 = 1
  110.             $UB_Y1 = $MR_kmax_S16
  110.             $Subscript_Y5 = 1
  110.             _bounds_error( $_File_Y40, $Line_Y49, $_Name_Y52, $Dim_Y9, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y53 )
  110.          endif
  110.          $MR_ncols_S17 = 0[loc( ncols ),0]
  110.          if ( $MR_ncols_S17 <= 0 ) then
  110.             $LB_Y0 = 1
  110.             $UB_Y1 = $MR_ncols_S17
  110.             $Subscript_Y5 = 1
  110.             _bounds_error( $_File_Y40, $Line_Y49, $_Name_Y54, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y55 )
  110.          endif
  110.          $LCS_MR_ncols_5 = $MR_ncols_S17
  110.          t$36[0].L = pointer to array[1] of array[1] of real (kind=8)( loc( 0[loc( umtx ),_lsh( $LCS_MR_ncols_5 * $MR_kmax_S16, 1 )].L ) )
  110.          (1,t$36)[0].L = 64
  110.          (2,t$36)[0].L = 0x200000000020051UL
  110.          (6,t$36)[0] = 13
  110.          (7,t$36)[0] = 134481411
  110.          (4,t$36)[0].L = 0
  110.          (5,t$36)[0].L = 0
  110.          (6,t$36)[0].L = 1
  110.          (7,t$36)[0].L = ( max( 0, $MR_ncols_S17 ) )
  110.          (8,t$36)[0].L = 1
  110.          (9,t$36)[0].L = 1
  110.          (10,t$36)[0].L = ( max( 0, $MR_kmax_S16 ) )
  110.          (11,t$36)[0].L = max( 0, $LCS_MR_ncols_5 )
  110.          ipa$65 = 72
  110.          call store2d( t$36, ipa$65, 0[loc( latco ),0], 0 )
  110.       endif
  111.       $MR_dogrh_S19 = (10,dogrh)[0].L
  111.       $MR_dogrh_S18 = (9,dogrh)[0].L
  111.       $MR_latco_S20 = 0[loc( latco ),0]
  111.       $LCS_6 = $MR_dogrh_S18 + $MR_dogrh_S19
  111.       if ( or( $MR_latco_S20 - $MR_dogrh_S18, -1 + ( $LCS_6 - $MR_latco_S20 ) ) < 0 ) then
  111.          $LB_Y0 = $MR_dogrh_S18
  111.          $UB_Y1 = -1 + $LCS_6
  111.          $Subscript_Y5 = $MR_latco_S20
  111.          _bounds_error( $_File_Y40, $Line_Y56, $_Name_Y41, $Dim_Y9, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y57 )
  111.       endif
  111.       $MR_dogrh_S22 = (7,dogrh)[0].L
  111.       $MR_dogrh_S21 = (6,dogrh)[0].L
  111.       $LCS_7 = $MR_dogrh_S21 + $MR_dogrh_S22
  111.       if ( or( -74 + $LCS_7, 73 - $MR_dogrh_S21 ) < 0 ) then
  111.          $LB_Y0 = $MR_dogrh_S21
  111.          $UB_Y1 = -1 + $LCS_7
  111.          $Subscript_Y5 = 73
  111.          _bounds_error( $_File_Y40, $Line_Y56, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y58 )
  111.       endif
  111.       $MR_dogrh_S23 = dogrh[0].L
  111.       $MR_dogrh_S24 = (11,dogrh)[0].L
  111.       if ( int( 73[int( $MR_dogrh_S23, 8 ),$MR_dogrh_S24 * ( $MR_latco_S20 - $MR_dogrh_S18 ) - $MR_dogrh_S21] ) /= 0 ) then
  111. !dir$ suppress 0[loc( umtx ),3 * t$25].L
  111.          $MR_kmax_S25 = 0[loc( kmax ),0]
  111.          if ( $MR_kmax_S25 <= 0 ) then
  111.             $LB_Y0 = 1
  111.             $UB_Y1 = $MR_kmax_S25
  111.             $Subscript_Y5 = 1
  111.             _bounds_error( $_File_Y40, $Line_Y56, $_Name_Y59, $Dim_Y9, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y60 )
  111.          endif
  111.          $MR_ncols_S26 = 0[loc( ncols ),0]
  111.          if ( $MR_ncols_S26 <= 0 ) then
  111.             $LB_Y0 = 1
  111.             $UB_Y1 = $MR_ncols_S26
  111.             $Subscript_Y5 = 1
  111.             _bounds_error( $_File_Y40, $Line_Y56, $_Name_Y61, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y62 )
  111.          endif
  111.          $LCS_MR_ncols_8 = $MR_ncols_S26
  111.          t$37[0].L = pointer to array[1] of array[1] of real (kind=8)( loc( 0[loc( umtx ),$LCS_MR_ncols_8 * $MR_kmax_S25 * 3].L ) )
  111.          (1,t$37)[0].L = 64
  111.          (2,t$37)[0].L = 0x200000000020051UL
  111.          (6,t$37)[0] = 13
  111.          (7,t$37)[0] = 134481411
  111.          (4,t$37)[0].L = 0
  111.          (5,t$37)[0].L = 0
  111.          (6,t$37)[0].L = 1
  111.          (7,t$37)[0].L = ( max( 0, $MR_ncols_S26 ) )
  111.          (8,t$37)[0].L = 1
  111.          (9,t$37)[0].L = 1
  111.          (10,t$37)[0].L = ( max( 0, $MR_kmax_S25 ) )
  111.          (11,t$37)[0].L = max( 0, $LCS_MR_ncols_8 )
  111.          ipa$66 = 73
  111.          call store2d( t$37, ipa$66, 0[loc( latco ),0], 0 )
  111.       endif
  112.       $MR_dogrh_S28 = (10,dogrh)[0].L
  112.       $MR_dogrh_S27 = (9,dogrh)[0].L
  112.       $MR_latco_S29 = 0[loc( latco ),0]
  112.       $LCS_9 = $MR_dogrh_S27 + $MR_dogrh_S28
  112.       if ( or( $MR_latco_S29 - $MR_dogrh_S27, -1 + ( $LCS_9 - $MR_latco_S29 ) ) < 0 ) then
  112.          $LB_Y0 = $MR_dogrh_S27
  112.          $UB_Y1 = -1 + $LCS_9
  112.          $Subscript_Y5 = $MR_latco_S29
  112.          _bounds_error( $_File_Y40, $Line_Y63, $_Name_Y41, $Dim_Y9, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y64 )
  112.       endif
  112.       $MR_dogrh_S31 = (7,dogrh)[0].L
  112.       $MR_dogrh_S30 = (6,dogrh)[0].L
  112.       $LCS_10 = $MR_dogrh_S30 + $MR_dogrh_S31
  112.       if ( or( -72 + $LCS_10, 71 - $MR_dogrh_S30 ) < 0 ) then
  112.          $LB_Y0 = $MR_dogrh_S30
  112.          $UB_Y1 = -1 + $LCS_10
  112.          $Subscript_Y5 = 71
  112.          _bounds_error( $_File_Y40, $Line_Y63, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y65 )
  112.       endif
  112.       $MR_dogrh_S32 = dogrh[0].L
  112.       $MR_dogrh_S33 = (11,dogrh)[0].L
  112.       if ( int( 71[int( $MR_dogrh_S32, 8 ),$MR_dogrh_S33 * ( $MR_latco_S29 - $MR_dogrh_S27 ) - $MR_dogrh_S30] ) /= 0 ) then
  112. !dir$ suppress 0[loc( qmtx ),2 * t$25].L
  112.          $MR_kmax_S34 = 0[loc( kmax ),0]
  112.          if ( $MR_kmax_S34 <= 0 ) then
  112.             $LB_Y0 = 1
  112.             $UB_Y1 = $MR_kmax_S34
  112.             $Subscript_Y5 = 1
  112.             _bounds_error( $_File_Y40, $Line_Y63, $_Name_Y66, $Dim_Y9, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y67 )
  112.          endif
  112.          $MR_ncols_S35 = 0[loc( ncols ),0]
  112.          if ( $MR_ncols_S35 <= 0 ) then
  112.             $LB_Y0 = 1
  112.             $UB_Y1 = $MR_ncols_S35
  112.             $Subscript_Y5 = 1
  112.             _bounds_error( $_File_Y40, $Line_Y63, $_Name_Y68, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y69 )
  112.          endif
  112.          $LCS_MR_ncols_11 = $MR_ncols_S35
  112.          t$38[0].L = pointer to array[1] of array[1] of real (kind=8)( loc( 0[loc( qmtx ),_lsh( $LCS_MR_ncols_11 * $MR_kmax_S34, 1 )].L ) )
  112.          (1,t$38)[0].L = 64
  112.          (2,t$38)[0].L = 0x200000000020051UL
  112.          (6,t$38)[0] = 13
  112.          (7,t$38)[0] = 134481411
  112.          (4,t$38)[0].L = 0
  112.          (5,t$38)[0].L = 0
  112.          (6,t$38)[0].L = 1
  112.          (7,t$38)[0].L = ( max( 0, $MR_ncols_S35 ) )
  112.          (8,t$38)[0].L = 1
  112.          (9,t$38)[0].L = 1
  112.          (10,t$38)[0].L = ( max( 0, $MR_kmax_S34 ) )
  112.          (11,t$38)[0].L = max( 0, $LCS_MR_ncols_11 )
  112.          ipa$67 = 71
  112.          call store2d( t$38, ipa$67, 0[loc( latco ),0], 0 )
  112.       endif
  114.       return
  114.       end
  114.       
  131.       
  131.       subroutine pbldiagnstorage( latco, ncols, kmax, tmtx, qmtx, umtx )
  126.       $MR_dodia_S1 = (7,dodia)[0].L
  126.       $MR_dodia_S0 = (6,dodia)[0].L
  126.       $LCS_0 = $MR_dodia_S0 + $MR_dodia_S1
  126.       if ( or( -40 + $LCS_0, 39 - $MR_dodia_S0 ) < 0 ) then
  126.          $LB_Y0 = $MR_dodia_S0
  126.          $UB_Y1 = -1 + $LCS_0
  126.          $Subscript_Y5 = 39
  126.          _bounds_error( $_File_Y40, $Line_Y42, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y43 )
  126.       endif
  126.       $MR_dodia_S2 = dodia[0].L
  126.       if ( int( 39[int( $MR_dodia_S2, 8 ),-$MR_dodia_S0] ) /= 0 ) then
  126. !dir$ suppress 0[loc( tmtx ),2 * t$31].L
  126.          $MR_kmax_S3 = 0[loc( kmax ),0]
  126.          if ( $MR_kmax_S3 <= 0 ) then
  126.             $LB_Y0 = 1
  126.             $UB_Y1 = $MR_kmax_S3
  126.             $Subscript_Y5 = 1
  126.             _bounds_error( $_File_Y40, $Line_Y42, $_Name_Y44, $Dim_Y9, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y45 )
  126.          endif
  126.          $MR_ncols_S4 = 0[loc( ncols ),0]
  126.          if ( $MR_ncols_S4 <= 0 ) then
  126.             $LB_Y0 = 1
  126.             $UB_Y1 = $MR_ncols_S4
  126.             $Subscript_Y5 = 1
  126.             _bounds_error( $_File_Y40, $Line_Y42, $_Name_Y46, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y47 )
  126.          endif
  126.          $LCS_MR_ncols_1 = $MR_ncols_S4
  126.          t$39[0].L = pointer to array[1] of array[1] of real (kind=8)( loc( 0[loc( tmtx ),_lsh( $LCS_MR_ncols_1 * $MR_kmax_S3, 1 )].L ) )
  126.          (1,t$39)[0].L = 64
  126.          (2,t$39)[0].L = 0x200000000020041UL
  126.          (6,t$39)[0] = 13
  126.          (7,t$39)[0] = 134481411
  126.          (4,t$39)[0].L = 0
  126.          (5,t$39)[0].L = 0
  126.          (6,t$39)[0].L = 1
  126.          (7,t$39)[0].L = ( max( 0, $MR_ncols_S4 ) )
  126.          (8,t$39)[0].L = 1
  126.          (9,t$39)[0].L = 1
  126.          (10,t$39)[0].L = ( max( 0, $MR_kmax_S3 ) )
  126.          (11,t$39)[0].L = max( 0, $LCS_MR_ncols_1 )
  126.          ipa$68 = 39
  126.          call updia2d( t$39, ipa$68, 0[loc( latco ),0] )
  126.       endif
  127.       $MR_dodia_S6 = (7,dodia)[0].L
  127.       $MR_dodia_S5 = (6,dodia)[0].L
  127.       $LCS_2 = $MR_dodia_S5 + $MR_dodia_S6
  127.       if ( or( -42 + $LCS_2, 41 - $MR_dodia_S5 ) < 0 ) then
  127.          $LB_Y0 = $MR_dodia_S5
  127.          $UB_Y1 = -1 + $LCS_2
  127.          $Subscript_Y5 = 41
  127.          _bounds_error( $_File_Y40, $Line_Y48, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y49 )
  127.       endif
  127.       $MR_dodia_S7 = dodia[0].L
  127.       if ( int( 41[int( $MR_dodia_S7, 8 ),-$MR_dodia_S5] ) /= 0 ) then
  127. !dir$ suppress 0[loc( umtx ),2 * t$31].L
  127.          $MR_kmax_S8 = 0[loc( kmax ),0]
  127.          if ( $MR_kmax_S8 <= 0 ) then
  127.             $LB_Y0 = 1
  127.             $UB_Y1 = $MR_kmax_S8
  127.             $Subscript_Y5 = 1
  127.             _bounds_error( $_File_Y40, $Line_Y48, $_Name_Y50, $Dim_Y9, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y51 )
  127.          endif
  127.          $MR_ncols_S9 = 0[loc( ncols ),0]
  127.          if ( $MR_ncols_S9 <= 0 ) then
  127.             $LB_Y0 = 1
  127.             $UB_Y1 = $MR_ncols_S9
  127.             $Subscript_Y5 = 1
  127.             _bounds_error( $_File_Y40, $Line_Y48, $_Name_Y52, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y53 )
  127.          endif
  127.          $LCS_MR_ncols_3 = $MR_ncols_S9
  127.          t$40[0].L = pointer to array[1] of array[1] of real (kind=8)( loc( 0[loc( umtx ),_lsh( $LCS_MR_ncols_3 * $MR_kmax_S8, 1 )].L ) )
  127.          (1,t$40)[0].L = 64
  127.          (2,t$40)[0].L = 0x200000000020041UL
  127.          (6,t$40)[0] = 13
  127.          (7,t$40)[0] = 134481411
  127.          (4,t$40)[0].L = 0
  127.          (5,t$40)[0].L = 0
  127.          (6,t$40)[0].L = 1
  127.          (7,t$40)[0].L = ( max( 0, $MR_ncols_S9 ) )
  127.          (8,t$40)[0].L = 1
  127.          (9,t$40)[0].L = 1
  127.          (10,t$40)[0].L = ( max( 0, $MR_kmax_S8 ) )
  127.          (11,t$40)[0].L = max( 0, $LCS_MR_ncols_3 )
  127.          ipa$69 = 41
  127.          call updia2d( t$40, ipa$69, 0[loc( latco ),0] )
  127.       endif
  128.       $MR_dodia_S11 = (7,dodia)[0].L
  128.       $MR_dodia_S10 = (6,dodia)[0].L
  128.       $LCS_4 = $MR_dodia_S10 + $MR_dodia_S11
  128.       if ( or( -43 + $LCS_4, 42 - $MR_dodia_S10 ) < 0 ) then
  128.          $LB_Y0 = $MR_dodia_S10
  128.          $UB_Y1 = -1 + $LCS_4
  128.          $Subscript_Y5 = 42
  128.          _bounds_error( $_File_Y40, $Line_Y54, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y55 )
  128.       endif
  128.       $MR_dodia_S12 = dodia[0].L
  128.       if ( int( 42[int( $MR_dodia_S12, 8 ),-$MR_dodia_S10] ) /= 0 ) then
  128. !dir$ suppress 0[loc( umtx ),3 * t$31].L
  128.          $MR_kmax_S13 = 0[loc( kmax ),0]
  128.          if ( $MR_kmax_S13 <= 0 ) then
  128.             $LB_Y0 = 1
  128.             $UB_Y1 = $MR_kmax_S13
  128.             $Subscript_Y5 = 1
  128.             _bounds_error( $_File_Y40, $Line_Y54, $_Name_Y56, $Dim_Y9, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y57 )
  128.          endif
  128.          $MR_ncols_S14 = 0[loc( ncols ),0]
  128.          if ( $MR_ncols_S14 <= 0 ) then
  128.             $LB_Y0 = 1
  128.             $UB_Y1 = $MR_ncols_S14
  128.             $Subscript_Y5 = 1
  128.             _bounds_error( $_File_Y40, $Line_Y54, $_Name_Y58, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y59 )
  128.          endif
  128.          $LCS_MR_ncols_5 = $MR_ncols_S14
  128.          t$41[0].L = pointer to array[1] of array[1] of real (kind=8)( loc( 0[loc( umtx ),$LCS_MR_ncols_5 * $MR_kmax_S13 * 3].L ) )
  128.          (1,t$41)[0].L = 64
  128.          (2,t$41)[0].L = 0x200000000020041UL
  128.          (6,t$41)[0] = 13
  128.          (7,t$41)[0] = 134481411
  128.          (4,t$41)[0].L = 0
  128.          (5,t$41)[0].L = 0
  128.          (6,t$41)[0].L = 1
  128.          (7,t$41)[0].L = ( max( 0, $MR_ncols_S14 ) )
  128.          (8,t$41)[0].L = 1
  128.          (9,t$41)[0].L = 1
  128.          (10,t$41)[0].L = ( max( 0, $MR_kmax_S13 ) )
  128.          (11,t$41)[0].L = max( 0, $LCS_MR_ncols_5 )
  128.          ipa$70 = 42
  128.          call updia2d( t$41, ipa$70, 0[loc( latco ),0] )
  128.       endif
  129.       $MR_dodia_S16 = (7,dodia)[0].L
  129.       $MR_dodia_S15 = (6,dodia)[0].L
  129.       $LCS_6 = $MR_dodia_S15 + $MR_dodia_S16
  129.       if ( or( -41 + $LCS_6, 40 - $MR_dodia_S15 ) < 0 ) then
  129.          $LB_Y0 = $MR_dodia_S15
  129.          $UB_Y1 = -1 + $LCS_6
  129.          $Subscript_Y5 = 40
  129.          _bounds_error( $_File_Y40, $Line_Y60, $_Name_Y41, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y61 )
  129.       endif
  129.       $MR_dodia_S17 = dodia[0].L
  129.       if ( int( 40[int( $MR_dodia_S17, 8 ),-$MR_dodia_S15] ) /= 0 ) then
  129. !dir$ suppress 0[loc( qmtx ),2 * t$31].L
  129.          $MR_kmax_S18 = 0[loc( kmax ),0]
  129.          if ( $MR_kmax_S18 <= 0 ) then
  129.             $LB_Y0 = 1
  129.             $UB_Y1 = $MR_kmax_S18
  129.             $Subscript_Y5 = 1
  129.             _bounds_error( $_File_Y40, $Line_Y60, $_Name_Y62, $Dim_Y9, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y63 )
  129.          endif
  129.          $MR_ncols_S19 = 0[loc( ncols ),0]
  129.          if ( $MR_ncols_S19 <= 0 ) then
  129.             $LB_Y0 = 1
  129.             $UB_Y1 = $MR_ncols_S19
  129.             $Subscript_Y5 = 1
  129.             _bounds_error( $_File_Y40, $Line_Y60, $_Name_Y64, $Dim_Y8, $LB_Y0, $UB_Y1, $Subscript_Y5, $Err_count_Y65 )
  129.          endif
  129.          $LCS_MR_ncols_7 = $MR_ncols_S19
  129.          t$42[0].L = pointer to array[1] of array[1] of real (kind=8)( loc( 0[loc( qmtx ),_lsh( $LCS_MR_ncols_7 * $MR_kmax_S18, 1 )].L ) )
  129.          (1,t$42)[0].L = 64
  129.          (2,t$42)[0].L = 0x200000000020041UL
  129.          (6,t$42)[0] = 13
  129.          (7,t$42)[0] = 134481411
  129.          (4,t$42)[0].L = 0
  129.          (5,t$42)[0].L = 0
  129.          (6,t$42)[0].L = 1
  129.          (7,t$42)[0].L = ( max( 0, $MR_ncols_S19 ) )
  129.          (8,t$42)[0].L = 1
  129.          (9,t$42)[0].L = 1
  129.          (10,t$42)[0].L = ( max( 0, $MR_kmax_S18 ) )
  129.          (11,t$42)[0].L = max( 0, $LCS_MR_ncols_7 )
  129.          ipa$71 = 40
  129.          call updia2d( t$42, ipa$71, 0[loc( latco ),0] )
  129.       endif
  131.       return
  131.       end
  131.       
    6.       
    6.       module pbldriver
  133.       return
  133.       end
  133.       
