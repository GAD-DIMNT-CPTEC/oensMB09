       !        
       !        Cray Inc. Decompilation
       !        Notice - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  Communications.f90
       !        File                  :  Communications.opt
       !        Network               :  Gemini interconnect
       !        Target                :  X86, 64-bit, sse3
       !        
  144.       
  144.       subroutine set_communic_buffer
  148.       $ndim_S0 = kmax * jmax * mmax * 16 / maxnodes
  149.       dimrecbuf = $ndim_S0
  150.       dimsendbuf = $ndim_S0
  151.       bufrec%header%a_contig = 1
  151.       bufrec%dim_1%LB = 1
  151.       bufrec%dim_1%EX = _zla( 0, $ndim_S0 )
  151.       bufrec%dim_1%SM = 1
  151.       $_allo_P0(0) = 0x1000000000001L
  151.       $_allo_P0(1) = loc( bufrec )
  151.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
  152.       bufsend%header%a_contig = 1
  152.       bufsend%dim_1%LB = 1
  152.       bufsend%dim_1%EX = _zla( 0, $ndim_S0 )
  152.       bufsend%dim_1%SM = 1
  152.       $_allo_P1(0) = 0x1000000000001L
  152.       $_allo_P1(1) = loc( bufsend )
  152.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
  154.       return
  154.       end
  154.       
  156.       
  156.       subroutine collect_grid_red( field, fieldglob )
  156.       t$8 = ( ibmax * jbmax )
  160.       t$144 = _zla( 0, ( ibmax * jbmax ) )
  156.       t$9 = ijmax
  161.       t$145 = _zla( 0, ijmax )
  156.       t$10 = ( -1 + maxnodes )
  156.       t$146 = maxnodes
  169.       t$147 = _zla( 0, maxnodes )
  169.       t$150 = 4 * _zla( 0, maxnodes )
  168.       t$152 = 8 * _zla( 0, maxnodes )
  156.       t$148 = int( _alloc( 8 * _zla( 0, maxnodes ) ), 8 )
  169.       t$149 = t$148
  168.       t$151 = t$148 + 4 * _zla( 0, maxnodes )
  172.       comm = 1140850688
  173.       if ( myid /= 0 ) then
  174.          call mpi_isend( field(1), (pointsinproc%base_addr)(myid, 0), 1275070495, 0, 91, comm, request, ierr )
  176.          call mpi_wait( request, status(1), ierr )
  176.       else
  178.          requestr(0) = 738197504
  179.          ini(0) = 1
  180.          $ij_S0 = 1 + (pointsinproc%base_addr)(0, 0)
  181.          $t_S2 = -1 + maxnodes
  181.          if ( -1 + maxnodes > 0 ) then
  181.             $I_L181_27 = 0
  181.             do
  182.                ini(1 + $I_L181_27) = $ij_S0
  183.                t$515 = ( 1 + $I_L181_27 )
  183.                call mpi_irecv( (bufrec%base_addr)($ij_S0, 0), (pointsinproc%base_addr)(1 + $I_L181_27, 0), 1275070495, t$515, 91, comm, requestr(1 + $I_L181_27), ierr )
  185.                $ij_S0 = $ij_S0 + (pointsinproc%base_addr)(1 + $I_L181_27, 0)
  186.                $I_L181_27 = 1 + $I_L181_27
  185.                if ( $I_L181_27 >= $t_S2 ) exit
  185.             enddo
  185.          endif
  187.          $F_A33 = (pointsinproc%base_addr)(0, 0)
  187.          if ( (pointsinproc%base_addr)(0, 0) > 0 ) then
  187.             $SC_bufrec_I11 = bufrec%dim_1%EX
  187.             $SC_bufrec_I12 = bufrec%dim_1%LB
  187.             $I_L187_33 = 0
  187. !dir$ ivdep
  187.             do
  187.                (bufrec%base_addr)(1 + $I_L187_33, 0) = field(1 + $I_L187_33)
  187.                $I_L187_33 = 1 + $I_L187_33
  187.                if ( $I_L187_33 >= $F_A33 ) exit
  187.             enddo
  187.          endif
  188.          $t_S4 = -1 + maxnodes
  188.          if ( -1 + maxnodes > 0 ) then
  188.             $I_L188_29 = 0
  188.             do
  189.                t$515 = -1 + maxnodes
  189.                call mpi_waitany( t$515, requestr(1), index, status(1), ierr )
  190.                $I_L188_29 = 1 + $I_L188_29
  190.                if ( $I_L188_29 >= $t_S4 ) exit
  190.             enddo
  190.          endif
  191.          $ii_S9 = 1
  192.          if ( jmax > 0 ) then
  192.             $I_L192_35 = 0
  192.             do
  193.                $t_S6 = (imaxperj%base_addr)(1 + $I_L192_35, 0)
  193.                if ( $t_S6 > 0 ) then
  193.                   $I_L193_31 = 0
  193. !dir$ unroll 4
  193.                   do
  194.                      $ij_S8 = (gridmap%base_addr)(1 + $I_L193_31, 1 + $I_L192_35, 0)
  195.                      fieldglob($ii_S9 + $I_L193_31) = (bufrec%base_addr)(ini($ij_S8), 0)
  197.                      ini($ij_S8) = 1 + ini($ij_S8)
  198.                      $I_L193_31 = 1 + $I_L193_31
  193.                      if ( $I_L193_31 >= $t_S6 ) exit
  193.                   enddo
  196.                   $ii_S9 = $t_S6 + $ii_S9
  196.                endif
  199.                $I_L192_35 = 1 + $I_L192_35
  198.                if ( $I_L192_35 >= jmax ) exit
  198.             enddo
  198.          endif
  198.       endif
  156.       _free( t$148 )
  202.       return
  202.       end
  202.       
  205.       
  205.       subroutine collect_grid_his( field, fieldglob, ngpts, ngptslocal, nproc, nf, ngptsperproc, mapglobal )
  205.       t$13 = ngptslocal
  205.       t$14 = nf
  213.       t$153 = _zla( 0, ngptslocal )
  205.       t$154 = _zla( 0, ngptslocal )
  213.       t$155 = _zla( 0, nf )
  205.       t$156 = _zla( 0, ngptslocal ) * _zla( 0, nf )
  205.       t$12 = ngpts
  215.       t$157 = _zla( 0, ngpts )
  205.       t$158 = _zla( 0, ngpts )
  205.       t$159 = _zla( 0, nf ) * _zla( 0, ngpts )
  205.       t$15 = ( -1 + maxnodes )
  205.       t$160 = maxnodes
  214.       t$161 = _zla( 0, maxnodes )
  205.       t$16 = maxnodes
  205.       t$162 = 1 + maxnodes
  223.       t$163 = _zla( 0, 1 + maxnodes )
  223.       t$166 = 4 * _zla( 0, 1 + maxnodes )
  222.       t$168 = 4 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, maxnodes )
  205.       t$164 = int( _alloc( 4 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, maxnodes ) ), 8 )
  223.       t$165 = t$164
  222.       t$167 = t$164 + 4 * _zla( 0, 1 + maxnodes )
  226.       if ( dimrecbuf < nf * ngpts ) then
  227.          dimrecbuf = nf * ngpts
  228.          $_allo_P0(0) = 0x1000000000001L
  228.          $_allo_P0(1) = loc( bufrec )
  228.          call __deallocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
  228.          bufrec%header%assoc = 0
  229.          bufrec%header%a_contig = 1
  229.          bufrec%dim_1%LB = 1
  229.          bufrec%dim_1%EX = _zla( 0, ( nf * ngpts ) )
  229.          bufrec%dim_1%SM = 1
  229.          $_allo_P1(0) = 0x1000000000001L
  229.          $_allo_P1(1) = loc( bufrec )
  229.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
  229.       endif
  231.       comm = 1140850688
  232.       if ( nproc + -myid /= 0 ) then
  233.          t$525 = ngptslocal * nf
  233.          call mpi_isend( field(1, 1), t$525, 1275070495, nproc, 92, comm, request, ierr )
  234.          call mpi_wait( request, status(1), ierr )
  234.       else
  236.          requestr(nproc) = 738197504
  237.          ini(0) = 0
  238.          $ij_S1 = 1
  239.          $t_S2 = -1 + maxnodes
  239.          if ( maxnodes > 0 ) then
  239.             $I_L239_29 = 0
  239.             do
  240.                if ( $I_L239_29 + -nproc /= 0 ) then
  241.                   t$525 = nf * ngptsperproc($I_L239_29)
  241.                   t$529 = $I_L239_29
  241.                   call mpi_irecv( (bufrec%base_addr)($ij_S1, 0), t$525, 1275070495, t$529, 92, comm, requestr($I_L239_29), ierr )
  241.                endif
  244.                ini(1 + $I_L239_29) = ngptsperproc($I_L239_29) + ini($I_L239_29)
  245.                $ij_S1 = $ij_S1 + nf * ngptsperproc($I_L239_29)
  246.                $I_L239_29 = 1 + $I_L239_29
  243.                if ( $I_L239_29 >= 1 + $t_S2 ) exit
  243.             enddo
  243.          endif
  247.          $i1_S4 = 1 + ini(nproc)
  249.          $F_A33 = nf
  249.          $F_A34 = ngptslocal
  249.          if ( and( -$F_A34, -$F_A33 ) < 0 ) then
  249.             $SI_L249_33_G1 = 0
  249.             do
  249.                $I_L249_39 = 0
  249. !dir$ blocking_size( 0, 0 )
  249.                do
  249.                   $SCA_mapglobal_I5 = mapglobal($i1_S4 + $I_L249_39)
  249.                   $I_L249_43 = 0
  249. !dir$ ivdep
  249. !dir$ blocking_size( 256, 256 )
  249.                   do
  249.                      fieldglob($SCA_mapglobal_I5, $I_L249_43 + 256 * $SI_L249_33_G1 + 1) = field(1 + $I_L249_39, $I_L249_43 + 256 * $SI_L249_33_G1 + 1)
  249.                      $I_L249_43 = 1 + $I_L249_43
  249.                      if ( $I_L249_43 >= min( $F_A33, 256 + 256 * $SI_L249_33_G1 ) + -256 * $SI_L249_33_G1 ) exit
  249.                   enddo
  249.                   $I_L249_39 = 1 + $I_L249_39
  249.                   if ( $I_L249_39 >= $F_A34 ) exit
  249.                enddo
  249.                $SI_L249_33_G1 = 1 + $SI_L249_33_G1
  249.                if ( $SI_L249_33_G1 >= _rsh( 255 + $F_A33, 8 ) ) exit
  249.             enddo
  249.          endif
  250.          $t_S9 = -1 + maxnodes
  250.          if ( -1 + maxnodes > 0 ) then
  255.             if ( nf > 0 ) then
  250.                $I_L250_41 = 0
  250.                do
  251.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  252.                   $ij_S5 = status(3)
  253.                   $i1_S6 = nf * ini($ij_S5)
  256.                   $SC_ini_I3 = ini(1 + $ij_S5)
  256.                   $SC_ngptsperproc_I2 = ngptsperproc($ij_S5)
  256.                   $SC_ini_I4 = ini($ij_S5)
  256.                   if ( $SC_ini_I3 + -$SC_ini_I4 > 0 ) then
  255.                      $I_L255_37 = 0
  255.                      do
  256.                         $F_A35 = ( $SC_ini_I3 + -$SC_ini_I4 )
  256.                         $I_L256_35 = 0
  256. !dir$ ivdep
  256.                         do
  256.                            fieldglob(mapglobal($SC_ini_I4 + $I_L256_35 + 1), 1 + $I_L255_37) = (bufrec%base_addr)($i1_S6 + $I_L256_35 + $SC_ngptsperproc_I2 * $I_L255_37 + 1, 0)
  256.                            $I_L256_35 = 1 + $I_L256_35
  256.                            if ( $I_L256_35 >= $F_A35 ) exit
  256.                         enddo
  259.                         $I_L255_37 = 1 + $I_L255_37
  255.                         if ( $I_L255_37 >= nf ) exit
  255.                      enddo
  255.                   endif
  260.                   $I_L250_41 = 1 + $I_L250_41
  259.                   if ( $I_L250_41 >= $t_S9 ) exit
  259.                enddo
  259.             else
  250.                $I_L250_31 = 0
  250.                do
  251.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  260.                   $I_L250_31 = 1 + $I_L250_31
  259.                   if ( $I_L250_31 >= $t_S9 ) exit
  259.                enddo
  259.             endif
  259.          endif
  259.       endif
  205.       _free( t$164 )
  263.       return
  263.       end
  263.       
  266.       
  266.       subroutine collect_grid_sur( field, fieldglob, nproc )
  266.       t$18 = imax
  266.       t$19 = myjmax_d
  269.       t$169 = _zla( 0, imax )
  266.       t$170 = _zla( 0, imax )
  269.       t$171 = _zla( 0, myjmax_d )
  266.       t$172 = _zla( 0, imax ) * _zla( 0, myjmax_d )
  266.       t$20 = jmax
  270.       t$173 = _zla( 0, jmax )
  266.       t$174 = _zla( 0, imax ) * _zla( 0, jmax )
  266.       t$21 = ( -1 + maxnodes )
  266.       t$175 = maxnodes
  276.       t$176 = _zla( 0, maxnodes )
  276.       t$179 = 4 * _zla( 0, maxnodes )
  266.       t$23 = maxnodes
  277.       t$180 = _zla( 0, maxnodes )
  266.       t$181 = 5 * _zla( 0, maxnodes )
  277.       t$183 = 4 * _zla( 0, maxnodes ) + 20 * _zla( 0, maxnodes )
  266.       t$177 = int( _alloc( 4 * _zla( 0, maxnodes ) + 20 * _zla( 0, maxnodes ) ), 8 )
  276.       t$178 = t$177
  277.       t$182 = t$177 + 4 * _zla( 0, maxnodes )
  279.       comm = 1140850688
  280.       if ( nproc + -myid == 0 ) then
  286.          $F_A33 = maxnodes
  286.          if ( maxnodes > 0 ) then
  286.             $I_A1 = 0
  286. !dir$ ivdep
  286.             do
  286.                requestr($I_A1) = 738197504
  286.                $I_A1 = 1 + $I_A1
  286.                if ( $I_A1 >= $F_A33 ) exit
  286.             enddo
  286.          endif
  287.          if ( myjmax_d > 0 ) then
  287.             $F_A34 = myjmax_d
  287.             $F_A35 = imax
  287.             if ( and( -$F_A35, -$F_A34 ) < 0 ) then
  287.                $I_A2 = 0
  287.                do
  287.                   $I_A1 = 0
  287. !dir$ ivdep
  287.                   do
  287.                      fieldglob(1 + $I_A1, myfirstlat_diag + $I_A2) = field(1 + $I_A1, 1 + $I_A2)
  287.                      $I_A1 = 1 + $I_A1
  287.                      if ( $I_A1 >= $F_A35 ) exit
  287.                   enddo
  287.                   $I_A2 = 1 + $I_A2
  287.                   if ( $I_A2 >= $F_A34 ) exit
  287.                enddo
  287.             endif
  287.          endif
  288.          $ij_S1 = 1
  289.          $t_S2 = -1 + maxnodes
  289.          if ( maxnodes > 0 ) then
  289.             $I_L289_4 = 0
  289.             do
  290.                if ( $I_L289_4 + -nproc /= 0 ) then
  290.                   if ( (nlatsinproc_d%base_addr)($I_L289_4, 0) > 0 ) then
  291.                      t$536 = imax * (nlatsinproc_d%base_addr)($I_L289_4, 0)
  291.                      t$540 = $I_L289_4
  291.                      call mpi_irecv( fieldglob(1, $ij_S1), t$536, 1275070495, t$540, 93, comm, requestr($I_L289_4), ierr )
  291.                   endif
  291.                endif
  294.                $ij_S1 = $ij_S1 + (nlatsinproc_d%base_addr)($I_L289_4, 0)
  295.                $I_L289_4 = 1 + $I_L289_4
  293.                if ( $I_L289_4 >= 1 + $t_S2 ) exit
  293.             enddo
  293.          endif
  296.          call mpi_waitall( maxnodes, requestr(0), status(1, 1), ierr )
  281.       else if ( myjmax_d > 0 ) then
  282.          t$536 = imax * myjmax_d
  282.          call mpi_isend( field(1, 1), t$536, 1275070495, nproc, 93, comm, request, ierr )
  283.          call mpi_wait( request, status(1, 1), ierr )
  283.       endif
  266.       _free( t$177 )
  299.       return
  299.       end
  299.       
  302.       
  302.       subroutine collect_grid_d( field, fieldglob, levs, nproc )
  302.       t$24 = imax
  302.       t$25 = myjmax_d
  302.       t$26 = levs
  306.       t$184 = _zla( 0, imax )
  302.       t$185 = _zla( 0, imax )
  306.       t$186 = _zla( 0, myjmax_d )
  302.       t$187 = _zla( 0, imax ) * _zla( 0, myjmax_d )
  306.       t$188 = _zla( 0, levs )
  302.       t$189 = _zla( 0, levs ) * _zla( 0, imax ) * _zla( 0, myjmax_d )
  302.       t$27 = jmax
  307.       t$190 = _zla( 0, jmax )
  302.       t$191 = _zla( 0, imax ) * _zla( 0, jmax )
  302.       t$192 = _zla( 0, levs ) * _zla( 0, imax ) * _zla( 0, jmax )
  302.       t$29 = maxnodes
  302.       t$193 = 1 + maxnodes
  314.       t$194 = _zla( 0, 1 + maxnodes )
  314.       t$197 = 4 * _zla( 0, 1 + maxnodes )
  302.       t$28 = ( -1 + maxnodes )
  302.       t$198 = maxnodes
  313.       t$199 = _zla( 0, maxnodes )
  313.       t$201 = 4 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, maxnodes )
  302.       t$195 = int( _alloc( 4 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, maxnodes ) ), 8 )
  314.       t$196 = t$195
  313.       t$200 = t$195 + 4 * _zla( 0, 1 + maxnodes )
  318.       comm = 1140850688
  319.       if ( nproc + -myid == 0 ) then
  325.          $F_A33 = maxnodes
  325.          if ( maxnodes > 0 ) then
  325.             $I_L325_34 = 0
  325. !dir$ ivdep
  325.             do
  325.                requestr($I_L325_34) = 738197504
  325.                $I_L325_34 = 1 + $I_L325_34
  325.                if ( $I_L325_34 >= $F_A33 ) exit
  325.             enddo
  325.          endif
  326.          if ( myjmax_d > 0 ) then
  326.             $F_A34 = levs
  326.             $F_A35 = myjmax_d
  326.             $F_A36 = imax
  326.             if ( and( and( -$F_A35, -$F_A34 ), -$F_A36 ) < 0 ) then
  326.                $I_L326_46 = 0
  326.                do
  326.                   $I_L326_42 = 0
  326.                   do
  326.                      $I_L326_36 = 0
  326. !dir$ ivdep
  326.                      do
  326.                         fieldglob(1 + $I_L326_36, myfirstlat_diag + $I_L326_42, 1 + $I_L326_46) = field(1 + $I_L326_36, 1 + $I_L326_42, 1 + $I_L326_46)
  326.                         $I_L326_36 = 1 + $I_L326_36
  326.                         if ( $I_L326_36 >= $F_A36 ) exit
  326.                      enddo
  326.                      $I_L326_42 = 1 + $I_L326_42
  326.                      if ( $I_L326_42 >= $F_A35 ) exit
  326.                   enddo
  326.                   $I_L326_46 = 1 + $I_L326_46
  326.                   if ( $I_L326_46 >= $F_A34 ) exit
  326.                enddo
  326.             endif
  326.          endif
  327.          $ij_S0 = 1
  328.          $nr_S2 = 0
  329.          $t_S3 = -1 + maxnodes
  329.          if ( maxnodes > 0 ) then
  329.             $I_L329_30 = 0
  329.             do
  330.                ini($I_L329_30) = $ij_S0
  331.                if ( $I_L329_30 + -nproc /= 0 ) then
  331.                   if ( (nlatsinproc_d%base_addr)($I_L329_30, 0) > 0 ) then
  332.                      t$541 = imax * levs * (nlatsinproc_d%base_addr)($I_L329_30, 0)
  333.                      t$545 = $I_L329_30
  332.                      call mpi_irecv( (bufrec%base_addr)($ij_S0, 0), t$541, 1275070495, t$545, 93, comm, requestr($I_L329_30), ierr )
  334.                      $nr_S2 = 1 + $nr_S2
  335.                      $ij_S0 = $ij_S0 + imax * levs * (nlatsinproc_d%base_addr)($I_L329_30, 0)
  335.                   endif
  335.                endif
  337.                $I_L329_30 = 1 + $I_L329_30
  336.                if ( $I_L329_30 >= 1 + $t_S3 ) exit
  336.             enddo
  336.          endif
  338.          if ( $nr_S2 > 0 ) then
  342.             if ( levs > 0 ) then
  338.                $I_L338_48 = 0
  338.                do
  339.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  340.                   $ij_S4 = status(3)
  341.                   $ip_S7 = -1 + ini($ij_S4)
  344.                   $SC_firstandlastlat_I6 = (firstandlastlat%base_addr)(2, $ij_S4, 0)
  344.                   $SC_firstandlastlat_I5 = (firstandlastlat%base_addr)(1, $ij_S4, 0)
  344.                   if ( $SC_firstandlastlat_I6 + -$SC_firstandlastlat_I5 >= 0 ) then
  342.                      $I_L342_44 = 0
  342.                      do
  344.                         $I_L344_40 = 0
  344.                         do
  345.                            $F_A37 = imax
  345.                            if ( imax > 0 ) then
  345.                               $I_L345_38 = 0
  345. !dir$ ivdep
  345.                               do
  345.                                  fieldglob(1 + $I_L345_38, $SC_firstandlastlat_I5 + $I_L344_40, 1 + $I_L342_44) = (bufrec%base_addr)($ip_S7 + $I_L345_38 + -( imax * $I_L342_44 * $SC_firstandlastlat_I5 ) + imax * $I_L344_40 + imax * $I_L342_44 + imax * $I_L342_44 * $SC_firstandlastlat_I6 + 1, 0)
  345.                                  $I_L345_38 = 1 + $I_L345_38
  345.                                  if ( $I_L345_38 >= $F_A37 ) exit
  345.                               enddo
  345.                            endif
  347.                            $I_L344_40 = 1 + $I_L344_40
  344.                            if ( $I_L344_40 >= $SC_firstandlastlat_I6 + -$SC_firstandlastlat_I5 + 1 ) exit
  344.                         enddo
  348.                         $I_L342_44 = 1 + $I_L342_44
  347.                         if ( $I_L342_44 >= levs ) exit
  347.                      enddo
  347.                   endif
  349.                   $I_L338_48 = 1 + $I_L338_48
  348.                   if ( $I_L338_48 >= $nr_S2 ) exit
  348.                enddo
  348.             else
  338.                $I_L338_32 = 0
  338.                do
  339.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  349.                   $I_L338_32 = 1 + $I_L338_32
  348.                   if ( $I_L338_32 >= $nr_S2 ) exit
  348.                enddo
  348.             endif
  348.          endif
  320.       else if ( myjmax_d > 0 ) then
  321.          t$541 = imax * myjmax_d * levs
  321.          call mpi_isend( field(1, 1, 1), t$541, 1275070495, nproc, 93, comm, request, ierr )
  322.          call mpi_wait( request, status(1), ierr )
  322.       endif
  302.       _free( t$195 )
  352.       return
  352.       end
  352.       
  356.       
  356.       subroutine collect_grid_full( field, fieldglob, levs, nproc )
  356.       t$31 = ibmax
  356.       t$32 = levs
  356.       t$33 = jbmax
  360.       t$202 = _zla( 0, ibmax )
  356.       t$203 = _zla( 0, ibmax )
  360.       t$204 = _zla( 0, levs )
  356.       t$205 = _zla( 0, levs ) * _zla( 0, ibmax )
  360.       t$206 = _zla( 0, jbmax )
  356.       t$207 = _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax )
  356.       t$34 = imax
  356.       t$35 = ( levs * jmax )
  361.       t$208 = _zla( 0, imax )
  356.       t$209 = _zla( 0, imax )
  361.       t$210 = _zla( 0, ( levs * jmax ) )
  356.       t$211 = _zla( 0, imax ) * _zla( 0, ( levs * jmax ) )
  356.       t$37 = maxnodes
  356.       t$212 = 1 + maxnodes
  371.       t$213 = _zla( 0, 1 + maxnodes )
  371.       t$216 = 4 * _zla( 0, 1 + maxnodes )
  368.       t$218 = 8 * _zla( 0, 1 + maxnodes )
  356.       t$36 = ( 1 + nsends_diag )
  367.       t$219 = _zla( 0, ( 1 + nsends_diag ) )
  367.       t$221 = 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) )
  356.       t$39 = nsends_diag
  370.       t$222 = _zla( 0, nsends_diag )
  356.       t$223 = 5 * _zla( 0, nsends_diag )
  370.       t$225 = 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) ) + 20 * _zla( 0, nsends_diag )
  356.       t$214 = int( _alloc( 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) ) + 20 * _zla( 0, nsends_diag ) ), 8 )
  371.       t$215 = t$214
  368.       t$217 = t$214 + 4 * _zla( 0, 1 + maxnodes )
  367.       t$220 = t$214 + 8 * _zla( 0, 1 + maxnodes )
  370.       t$224 = t$214 + 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) )
  373.       comm = 1140850688
  374.       if ( dimrecbuf < levs * imax * jmax ) then
  375.          dimrecbuf = levs * imax * jmax
  376.          $_allo_P2(0) = 0x1000000000001L
  376.          $_allo_P2(1) = loc( bufrec )
  376.          call __deallocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
  376.          bufrec%header%assoc = 0
  377.          bufrec%header%a_contig = 1
  377.          bufrec%dim_1%LB = 1
  377.          bufrec%dim_1%EX = _zla( 0, ( levs * imax * jmax ) )
  377.          bufrec%dim_1%SM = 1
  377.          $_allo_P3(0) = 0x1000000000001L
  377.          $_allo_P3(1) = loc( bufrec )
  377.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
  377.       endif
  379.       if ( nproc + -myid /= 0 ) then
  380.          $js_S17 = -1 + myfirstlat_diag
  381.          $jc_S23 = mylastlat_diag + -myfirstlat_diag + 1
  381.       else
  383.          $js_S17 = 0
  384.          $jc_S23 = jmax
  384.       endif
  386.       ib(0) = 1
  387.       $m_S1 = 0
  388.       $t_S4 = nrecs_diag
  388.       if ( nrecs_diag > 0 ) then
  388.          $I_L388_248 = 0
  388.          do
  389.             ic = 0
  390.             $t_S2 = (myrecspr_diag%base_addr)(2, 1 + $I_L388_248, 0)
  390.             if ( $t_S2 + -$m_S1 > 0 ) then
  390.                $I_L390_221 = 0
  390. !dir$ ivdep
  390.                do
  391.                   ic = ic + (myrecs_diag%base_addr)(2, $m_S1 + $I_L390_221 + 1, 0) + -(myrecs_diag%base_addr)(1, $m_S1 + $I_L390_221 + 1, 0) + 1
  392.                   $I_L390_221 = 1 + $I_L390_221
  390.                   if ( $I_L390_221 >= ( $t_S2 + -$m_S1 ) ) exit
  390.                enddo
  390.             endif
  393.             $m_S1 = $t_S2
  394.             ib(1 + $I_L388_248) = ib($I_L388_248) + levs * ic
  395.             t$563 = ib(1 + $I_L388_248) + -ib($I_L388_248)
  395.             call mpi_irecv( (bufrec%base_addr)(ib($I_L388_248), 0), t$563, 1275070495, (myrecspr_diag%base_addr)(1, 1 + $I_L388_248, 0), 88, comm, requestr(1 + $I_L388_248), ierr )
  397.             $I_L388_248 = 1 + $I_L388_248
  397.             if ( $I_L388_248 >= $t_S4 ) exit
  397.          enddo
  397.       endif
  398.       $m_S6 = 0
  399.       $ic_S13 = 0
  400.       $iold_S14 = 0
  401.       $t_S15 = nsends_diag
  401.       if ( nsends_diag > 0 ) then
  405.          if ( -1 + levs >= 0 ) then
  401.             $I_L401_272 = 0
  401.             do
  402.                $t_S7 = (mysendspr_diag%base_addr)(2, 1 + $I_L401_272, 0)
  402.                if ( $t_S7 + -$m_S6 > 0 ) then
  402.                   $I_L402_262 = 0
  402.                   do
  403.                      $j_S12 = (mysends_diag%base_addr)(3, $m_S6 + $I_L402_262 + 1, 0)
  404.                      $t_S9 = (mysends_diag%base_addr)(1, $m_S6 + $I_L402_262 + 1, 0)
  404.                      $t_S10 = (mysends_diag%base_addr)(2, $m_S6 + $I_L402_262 + 1, 0)
  404.                      if ( $t_S10 + -$t_S9 >= 0 ) then
  404.                         $I_L404_250 = 0
  404.                         do
  405.                            $F_A33 = -1 + levs + 1
  405.                            $SCA_ibperij_I40 = (ibperij%base_addr)($t_S9 + $I_L404_250, $j_S12, 0)
  405.                            $SCA_jbperij_I41 = (jbperij%base_addr)($t_S9 + $I_L404_250, $j_S12, 0)
  405.                            $I_L405_238 = 0
  405. !dir$ ivdep
  405.                            do
  405.                               (bufsend%base_addr)($ic_S13 + $I_L405_238 + levs * $I_L404_250 + 1, 0) = field($SCA_ibperij_I40, 1 + $I_L405_238, $SCA_jbperij_I41)
  405.                               $I_L405_238 = 1 + $I_L405_238
  405.                               if ( $I_L405_238 >= $F_A33 ) exit
  405.                            enddo
  407.                            $I_L404_250 = 1 + $I_L404_250
  404.                            if ( $I_L404_250 >= $t_S10 + -$t_S9 + 1 ) exit
  404.                         enddo
  406.                         $ic_S13 = ( levs + $ic_S13 + -( $t_S9 * levs ) + $t_S10 * levs )
  406.                      endif
  408.                      $I_L402_262 = 1 + $I_L402_262
  407.                      if ( $I_L402_262 >= ( $t_S7 + -$m_S6 ) ) exit
  407.                   enddo
  407.                endif
  409.                t$563 = $ic_S13 + -$iold_S14
  409.                call mpi_isend( (bufsend%base_addr)(1 + $iold_S14, 0), t$563, 1275070495, (mysendspr_diag%base_addr)(1, 1 + $I_L401_272, 0), 88, comm, requests(1 + $I_L401_272), ierr )
  411.                $m_S6 = (mysendspr_diag%base_addr)(2, 1 + $I_L401_272, 0)
  412.                $iold_S14 = $ic_S13
  413.                $I_L401_272 = 1 + $I_L401_272
  411.                if ( $I_L401_272 >= $t_S15 ) exit
  411.             enddo
  411.          else
  401.             $I_L401_258 = 0
  401.             do
  402.                $t_S7 = (mysendspr_diag%base_addr)(2, 1 + $I_L401_258, 0)
  402.                if ( $t_S7 + -$m_S6 > 0 ) then
  402.                   $I_L402_244 = 0
  402. !dir$ ivdep
  402.                   do
  404.                      $t_S9 = (mysends_diag%base_addr)(1, $m_S6 + $I_L402_244 + 1, 0)
  404.                      $t_S10 = (mysends_diag%base_addr)(2, $m_S6 + $I_L402_244 + 1, 0)
  404.                      if ( $t_S10 + -$t_S9 >= 0 ) then
  406.                         $ic_S13 = ( levs + $ic_S13 + -( $t_S9 * levs ) + $t_S10 * levs )
  406.                      endif
  408.                      $I_L402_244 = 1 + $I_L402_244
  407.                      if ( $I_L402_244 >= ( $t_S7 + -$m_S6 ) ) exit
  407.                   enddo
  407.                endif
  409.                t$563 = $ic_S13 + -$iold_S14
  409.                call mpi_isend( (bufsend%base_addr)(1 + $iold_S14, 0), t$563, 1275070495, (mysendspr_diag%base_addr)(1, 1 + $I_L401_258, 0), 88, comm, requests(1 + $I_L401_258), ierr )
  411.                $m_S6 = (mysendspr_diag%base_addr)(2, 1 + $I_L401_258, 0)
  412.                $iold_S14 = $ic_S13
  413.                $I_L401_258 = 1 + $I_L401_258
  411.                if ( $I_L401_258 >= $t_S15 ) exit
  411.             enddo
  411.          endif
  411.       endif
  414.       if ( min( mylastlat_diag, mylastlat ) + -max( myfirstlat_diag, myfirstlat ) >= 0 ) then
  416.          if ( levs > 0 ) then
  414.             $I_L414_264 = 0
  414.             do
  416.                $SCA_myfirstlon_I42 = (myfirstlon%base_addr)($I_L414_264 + max( myfirstlat_diag, myfirstlat ), 0)
  416.                $SCA_mylastlon_I43 = (mylastlon%base_addr)($I_L414_264 + max( myfirstlat_diag, myfirstlat ), 0)
  417.                if ( $SCA_mylastlon_I43 + -$SCA_myfirstlon_I42 >= 0 ) then
  416.                   $I_L416_252 = 0
  416. !dir$ blocking_size( 0, 0 )
  416.                   do
  417.                      $I_L417_223 = 0
  417. !dir$ ivdep
  417. !dir$ blocking_size( 0, 0 )
  417.                      do
  418.                         fieldglob($SCA_myfirstlon_I42 + $I_L417_223, $I_L414_264 + max( myfirstlat_diag, myfirstlat ) + -$js_S17 + $jc_S23 * $I_L416_252) = field((ibperij%base_addr)($SCA_myfirstlon_I42 + $I_L417_223, $I_L414_264 + max( myfirstlat_diag, myfirstlat ), 0), 1 + $I_L416_252, (jbperij%base_addr)($SCA_myfirstlon_I42 + $I_L417_223, $I_L414_264 + max( myfirstlat_diag, myfirstlat ), 0))
  419.                         $I_L417_223 = 1 + $I_L417_223
  417.                         if ( $I_L417_223 >= $SCA_mylastlon_I43 + -$SCA_myfirstlon_I42 + 1 ) exit
  417.                      enddo
  421.                      $I_L416_252 = 1 + $I_L416_252
  419.                      if ( $I_L416_252 >= levs ) exit
  419.                   enddo
  419.                endif
  422.                $I_L414_264 = 1 + $I_L414_264
  421.                if ( $I_L414_264 >= min( mylastlat_diag, mylastlat ) + -max( myfirstlat_diag, myfirstlat ) + 1 ) exit
  421.             enddo
  421.          endif
  421.       endif
  423.       $t_S35 = nrecs_diag
  423.       if ( nrecs_diag > 0 ) then
  423.          $I_L423_280 = 0
  423.          do
  424.             call mpi_waitany( nrecs_diag, requestr(1), index, status(1), ierr )
  425.             $ks_S24 = status(3)
  426.             if ( nrecs_diag > 0 ) then
  426.                $I_L426_225 = 0
  426. !dir$ ivdep
  426.                do
  427.                   if ( (myrecspr_diag%base_addr)(1, 1 + $I_L426_225, 0) + -$ks_S24 == 0 ) then
  428.                      n = ( 1 + $I_L426_225 )
  429.                      $ic_S13 = -1 + ib($I_L426_225)
  430.                      $m_S6 = (myrecspr_diag%base_addr)(2, $I_L426_225, 0)
  430.                      goto 10
  430.                   endif
  433.                   $I_L426_225 = 1 + $I_L426_225
  432.                   if ( $I_L426_225 >= nrecs_diag ) exit
  432.                enddo
  432.             endif
  432.    10       continue
  434.             $t_S26 = (myrecspr_diag%base_addr)(2, n, 0)
  434.             if ( $t_S26 + -$m_S6 > 0 ) then
  438.                if ( levs > 0 ) then
  434.                   $I_L434_274 = 0
  434.                   do
  435.                      $j_S30 = (myrecs_diag%base_addr)(3, $m_S6 + $I_L434_274 + 1, 0) + -$js_S17
  436.                      $t_S28 = (myrecs_diag%base_addr)(1, $m_S6 + $I_L434_274 + 1, 0)
  436.                      $t_S29 = (myrecs_diag%base_addr)(2, $m_S6 + $I_L434_274 + 1, 0)
  436.                      if ( $t_S29 + -$t_S28 >= 0 ) then
  436.                         $I_L436_266 = 0
  436.                         do
  438.                            $I_L438_260 = 0
  438.                            if ( levs >= 4 ) then
  438.                               $I_L438_285 = 0
  438. !dir$ blocking_size( 0, 0 )
  438.                               do
  436.                                  $I_L436_227 = 0
  436. !dir$ ivdep
  436. !dir$ blocking_size( 256, 256 )
  436.                                  do
  439.                                     fieldglob($t_S28 + $I_L436_227 + 256 * $I_L436_266, $j_S30 + $jc_S23 * $I_L438_285 * 4) = (bufrec%base_addr)($ic_S13 + levs * $I_L436_227 + levs * $I_L436_266 * 256 + 4 * $I_L438_285 + 1, 0)
  439.                                     fieldglob($t_S28 + $I_L436_227 + 256 * $I_L436_266, $jc_S23 + $j_S30 + $jc_S23 * $I_L438_285 * 4) = (bufrec%base_addr)($ic_S13 + levs * $I_L436_227 + levs * $I_L436_266 * 256 + 4 * $I_L438_285 + 2, 0)
  439.                                     fieldglob($t_S28 + $I_L436_227 + 256 * $I_L436_266, $j_S30 + 2 * $jc_S23 + $jc_S23 * $I_L438_285 * 4) = (bufrec%base_addr)($ic_S13 + levs * $I_L436_227 + levs * $I_L436_266 * 256 + 4 * $I_L438_285 + 3, 0)
  439.                                     fieldglob($t_S28 + $I_L436_227 + 256 * $I_L436_266, $j_S30 + 3 * $jc_S23 + $jc_S23 * $I_L438_285 * 4) = (bufrec%base_addr)($ic_S13 + levs * $I_L436_227 + levs * $I_L436_266 * 256 + 4 * $I_L438_285 + 4, 0)
  436.                                     $I_L436_227 = 1 + $I_L436_227
  438.                                     if ( $I_L436_227 >= min( $t_S29 + -$t_S28 + 1, 256 + 256 * $I_L436_266 ) + -256 * $I_L436_266 ) exit
  438.                                  enddo
  441.                                  $I_L438_285 = 1 + $I_L438_285
  441.                                  if ( $I_L438_285 >= _rsh( levs, 2 ) ) exit
  441.                               enddo
  441.                               $I_L438_260 = and( 0xfffffffffffffffcUL, levs )
  441.                            endif
  438.                            if ( $I_L438_260 < levs ) then
  438.                               $I_L438_282 = 0
  438. !dir$ blocking_size( 0, 0 )
  438.                               do
  436.                                  $I_L436_227 = 0
  436. !dir$ ivdep
  436. !dir$ blocking_size( 256, 256 )
  436.                                  do
  439.                                     fieldglob($t_S28 + $I_L436_227 + 256 * $I_L436_266, $j_S30 + $jc_S23 * $I_L438_260 + $jc_S23 * $I_L438_282) = (bufrec%base_addr)($ic_S13 + $I_L438_260 + $I_L438_282 + levs * $I_L436_227 + levs * $I_L436_266 * 256 + 1, 0)
  436.                                     $I_L436_227 = 1 + $I_L436_227
  438.                                     if ( $I_L436_227 >= min( $t_S29 + -$t_S28 + 1, 256 + 256 * $I_L436_266 ) + -256 * $I_L436_266 ) exit
  438.                                  enddo
  441.                                  $I_L438_282 = 1 + $I_L438_282
  441.                                  if ( $I_L438_282 >= levs + -$I_L438_260 ) exit
  441.                               enddo
  441.                            endif
  436.                            $I_L436_266 = 1 + $I_L436_266
  441.                            if ( $I_L436_266 >= 1 + max( 0, -1 + _rsh( $t_S29 + -$t_S28 + 256, 8 ) ) ) exit
  441.                         enddo
  442.                         $ic_S13 = ( levs + $ic_S13 + -( $t_S28 * levs ) + $t_S29 * levs )
  442.                      endif
  444.                      $I_L434_274 = 1 + $I_L434_274
  443.                      if ( $I_L434_274 >= ( $t_S26 + -$m_S6 ) ) exit
  443.                   enddo
  443.                else
  434.                   $I_L434_234 = 0
  434. !dir$ ivdep
  434.                   do
  436.                      $t_S28 = (myrecs_diag%base_addr)(1, $m_S6 + $I_L434_234 + 1, 0)
  436.                      $t_S29 = (myrecs_diag%base_addr)(2, $m_S6 + $I_L434_234 + 1, 0)
  436.                      if ( $t_S29 + -$t_S28 >= 0 ) then
  442.                         $ic_S13 = ( levs + $ic_S13 + -( $t_S28 * levs ) + $t_S29 * levs )
  442.                      endif
  444.                      $I_L434_234 = 1 + $I_L434_234
  443.                      if ( $I_L434_234 >= ( $t_S26 + -$m_S6 ) ) exit
  443.                   enddo
  443.                endif
  443.             endif
  445.             $I_L423_280 = 1 + $I_L423_280
  444.             if ( $I_L423_280 >= $t_S35 ) exit
  444.          enddo
  444.       endif
  446.       if ( nsends_diag > 0 ) then
  446.          call mpi_waitall( nsends_diag, requests(1), stat(1, 1), ierr )
  446.       endif
  447.       if ( nproc + -myid /= 0 ) then
  448.          ic = levs * imax + levs * imax * mylastlat_diag + -( levs * imax * myfirstlat_diag )
  450.          if ( levs * imax + levs * imax * mylastlat_diag + -( levs * imax * myfirstlat_diag ) > 0 ) then
  450.             call mpi_isend( fieldglob(1, 1), ic, 1275070495, nproc, 89, comm, requests(1), ierr )
  450.          endif
  452.          call mpi_wait( requests(1), status(1), ierr )
  452.       else
  454.          ib(0) = 1
  455.          $F_A34 = 1 + t$37
  455.          if ( t$37 >= 0 ) then
  455.             $I_L455_240 = 0
  455. !dir$ ivdep
  455.             do
  455.                requestr($I_L455_240) = 738197504
  455.                $I_L455_240 = 1 + $I_L455_240
  455.                if ( $I_L455_240 >= $F_A34 ) exit
  455.             enddo
  455.          endif
  456.          $n_S37 = 0
  457.          $t_S38 = -1 + maxnodes
  457.          if ( maxnodes > 0 ) then
  457.             $I_L457_230 = 0
  457.             do
  458.                if ( $I_L457_230 + -myid /= 0 ) then
  459.                   ic = -( levs * imax * (firstandlastlat%base_addr)(1, $I_L457_230, 0) ) + levs * imax + levs * imax * (firstandlastlat%base_addr)(2, $I_L457_230, 0)
  460.                   if ( ic > 0 ) then
  462.                      t$563 = $I_L457_230
  461.                      call mpi_irecv( (bufrec%base_addr)(ib($I_L457_230), 0), ic, 1275070495, t$563, 89, comm, requestr($I_L457_230), ierr )
  463.                      $n_S37 = 1 + $n_S37
  463.                   endif
  463.                else
  466.                   ic = 0
  466.                endif
  468.                ib(1 + $I_L457_230) = ic + ib($I_L457_230)
  469.                $I_L457_230 = 1 + $I_L457_230
  467.                if ( $I_L457_230 >= 1 + $t_S38 ) exit
  467.             enddo
  467.          endif
  470.          if ( $n_S37 > 0 ) then
  474.             if ( levs <= 0 ) then
  470.                $I_L470_236 = 0
  470.                do
  471.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  481.                   $I_L470_236 = 1 + $I_L470_236
  480.                   if ( $I_L470_236 >= $n_S37 ) exit
  480.                enddo
  480.             else if ( t$34 > 0 ) then
  470.                $I_L470_276 = 0
  470.                do
  471.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  472.                   $ks_S39 = status(3)
  473.                   $ic_S42 = -1 + ib($ks_S39)
  476.                   $SC_firstandlastlat_I39 = (firstandlastlat%base_addr)(2, $ks_S39, 0)
  476.                   $SC_firstandlastlat_I38 = (firstandlastlat%base_addr)(1, $ks_S39, 0)
  476.                   if ( $SC_firstandlastlat_I39 + -$SC_firstandlastlat_I38 >= 0 ) then
  474.                      $I_L474_268 = 0
  474.                      do
  476.                         $I_L476_254 = 0
  476.                         do
  477.                            $F_A35 = t$34
  477.                            $I_L477_242 = 0
  477. !dir$ ivdep
  477.                            do
  477.                               fieldglob(1 + $I_L477_242, $SC_firstandlastlat_I38 + $I_L476_254 + jmax * $I_L474_268) = (bufrec%base_addr)($ic_S42 + $I_L477_242 + -( imax * $SC_firstandlastlat_I38 * $I_L474_268 ) + imax * $I_L476_254 + imax * $I_L474_268 + imax * $SC_firstandlastlat_I39 * $I_L474_268 + 1, 0)
  477.                               $I_L477_242 = 1 + $I_L477_242
  477.                               if ( $I_L477_242 >= $F_A35 ) exit
  477.                            enddo
  479.                            $I_L476_254 = 1 + $I_L476_254
  476.                            if ( $I_L476_254 >= $SC_firstandlastlat_I39 + -$SC_firstandlastlat_I38 + 1 ) exit
  476.                         enddo
  480.                         $I_L474_268 = 1 + $I_L474_268
  479.                         if ( $I_L474_268 >= levs ) exit
  479.                      enddo
  479.                   endif
  481.                   $I_L470_276 = 1 + $I_L470_276
  480.                   if ( $I_L470_276 >= $n_S37 ) exit
  480.                enddo
  480.             else
  470.                $I_L470_246 = 0
  470.                do
  471.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  481.                   $I_L470_246 = 1 + $I_L470_246
  480.                   if ( $I_L470_246 >= $n_S37 ) exit
  480.                enddo
  480.             endif
  480.          endif
  482.          j1 = 1
  483.          if ( levs > 0 ) then
  483.             $I_L483_278 = 0
  483.             do
  484.                $t_S49 = jmax
  484.                if ( jmax > 0 ) then
  484.                   $I_L484_270 = 0
  484.                   do
  485.                      _fwrite( _clist( 0, 0, 2, 97, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  485.                      $_IOitem_P0(0) = ( 1 + $I_L484_270 )
  485.                      $_IOitem_P0(1) = ( 1 + $I_L483_278 )
  485.                      _fwrite( _clist( 0, 0, 0, 97, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 1, 1 )), 0x2000200000000L ) ) )
  485.                      if ( ( 1 + $I_L484_270 ) < imaxperj%dim_1%LB .or. ( 1 + $I_L484_270 ) > imaxperj%dim_1%LB + imaxperj%dim_1%EX + -1 ) then
  485.                          _substr(t$623,1,19) = 'Communications.f90'
  485.                          _substr(t$624,1,9) = 'IMAXPERJ'
  485.                         t$625 = imaxperj%dim_1%LB
  485.                         t$626 = imaxperj%dim_1%LB + imaxperj%dim_1%EX + -1
  485.                         t$627 = 1 + $I_L484_270
  485.                         call _bounds_error(  _substr(t$623,1,19), 988,  _substr(t$624,1,9), 1, t$625, t$626, t$627, t$622 )
  485.                      endif
  485.                      $t_S48 = (imaxperj%base_addr)(1 + $I_L484_270, 0)
  485.                      if ( $t_S48 > 0 ) then
  485.                         $I_L485_256 = 0
  485.                         do
  485.                            $I_L485_232 = 0
  485. !dir$ shortloop16
  485.                            do
  485.                               if ( ( $I_L485_232 + 16 * $I_L485_256 + 1 ) <= 0 .or. ( $I_L485_232 + 16 * $I_L485_256 + 1 ) > t$34 ) then
  485.                                   _substr(t$632,1,19) = 'Communications.f90'
  485.                                   _substr(t$633,1,10) = 'FIELDGLOB'
  485.                                  t$634 = $I_L485_232 + 16 * $I_L485_256 + 1
  485.                                  call _bounds_error(  _substr(t$632,1,19), 988,  _substr(t$633,1,10), 1, 1, t$34, t$634, t$631 )
  485.                               endif
  485.                               if ( ( j1 + $I_L484_270 ) <= 0 .or. ( j1 + $I_L484_270 ) > t$35 ) then
  485.                                   _substr(t$636,1,19) = 'Communications.f90'
  485.                                   _substr(t$637,1,10) = 'FIELDGLOB'
  485.                                  t$638 = j1 + $I_L484_270
  485.                                  call _bounds_error(  _substr(t$636,1,19), 988,  _substr(t$637,1,10), 2, 1, t$35, t$638, t$635 )
  485.                               endif
  485.                               $IOitem_O0 = fieldglob($I_L485_232 + 16 * $I_L485_256 + 1, j1 + $I_L484_270)
  485.                               $_IO_STRIP_P1($I_L485_232) = $IOitem_O0
  485.                               $I_L485_232 = 1 + $I_L485_232
  485.                               if ( $I_L485_232 >= min( $t_S48, 16 + 16 * $I_L485_256 ) + -16 * $I_L485_256 ) exit
  485.                            enddo
  485.                            _fwrite( _clist( 0, 0, 0, 97, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IO_STRIP_P1(:( 0, ( min( $t_S48, 16 + 16 * $I_L485_256 ) + -16 * $I_L485_256 + -1 ), 1 )), 0x804060300000000L ) ) )
  485.                            $I_L485_256 = 1 + $I_L485_256
  485.                            if ( $I_L485_256 >= 1 + max( 0, -1 + _rsh( 15 + $t_S48, 4 ) ) ) exit
  485.                         enddo
  485.                      endif
  485.                      _fwrite( _clist( 0, 0, 1, 97, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  487.                      $I_L484_270 = 1 + $I_L484_270
  486.                      if ( $I_L484_270 >= $t_S49 ) exit
  486.                   enddo
  486.                   j1 = j1 + $t_S49
  486.                endif
  488.                $I_L483_278 = 1 + $I_L483_278
  487.                if ( $I_L483_278 >= levs ) exit
  487.             enddo
  487.          endif
  487.       endif
  356.       _free( t$214 )
  491.       return
  491.       end
  491.       
  495.       
  495.       subroutine collect_grid_fulli( imask, fieldglob, levs, nproc )
  495.       t$40 = ibmax
  495.       t$41 = levs
  495.       t$42 = jbmax
  499.       t$226 = _zla( 0, ibmax )
  495.       t$227 = _zla( 0, ibmax )
  499.       t$228 = _zla( 0, levs )
  495.       t$229 = _zla( 0, levs ) * _zla( 0, ibmax )
  499.       t$230 = _zla( 0, jbmax )
  495.       t$231 = _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax )
  495.       t$43 = imax
  495.       t$44 = ( levs * jmax )
  500.       t$232 = _zla( 0, imax )
  495.       t$233 = _zla( 0, imax )
  500.       t$234 = _zla( 0, ( levs * jmax ) )
  495.       t$235 = _zla( 0, imax ) * _zla( 0, ( levs * jmax ) )
  502.       t$238 = _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) * 4
  495.       t$47 = maxnodes
  495.       t$239 = 1 + maxnodes
  512.       t$240 = _zla( 0, 1 + maxnodes )
  512.       t$242 = _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) * 4 + 4 * _zla( 0, 1 + maxnodes )
  495.       t$45 = ( imax * jmax )
  503.       t$243 = _zla( 0, ( imax * jmax ) )
  503.       t$245 = _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) * 4 + 4 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( imax * jmax ) )
  503.       t$247 = _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) * 4 + 4 * _zla( 0, 1 + maxnodes ) + 8 * _zla( 0, ( imax * jmax ) )
  509.       t$249 = _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) * 4 + 8 * _zla( 0, ( imax * jmax ) ) + 8 * _zla( 0, 1 + maxnodes )
  495.       t$46 = ( 1 + nsends_diag )
  508.       t$250 = _zla( 0, ( 1 + nsends_diag ) )
  508.       t$252 = _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) * 4 + 8 * _zla( 0, ( imax * jmax ) ) + 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) )
  495.       t$49 = nsends_diag
  511.       t$253 = _zla( 0, nsends_diag )
  495.       t$254 = 5 * _zla( 0, nsends_diag )
  511.       t$256 = _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) * 4 + 8 * _zla( 0, ( imax * jmax ) ) + 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) ) + 20 * _zla( 0, nsends_diag )
  495.       t$236 = int( _alloc( _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) * 4 + 8 * _zla( 0, ( imax * jmax ) ) + 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) ) + 20 * _zla( 0, nsends_diag ) ), 8 )
  502.       t$237 = t$236
  512.       t$241 = t$236 + _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) * 4
  503.       t$244 = t$236 + _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) * 4 + 4 * _zla( 0, 1 + maxnodes )
  503.       t$246 = t$236 + _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) * 4 + 4 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( imax * jmax ) )
  509.       t$248 = t$236 + _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) * 4 + 4 * _zla( 0, 1 + maxnodes ) + 8 * _zla( 0, ( imax * jmax ) )
  508.       t$251 = t$236 + _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) * 4 + 8 * _zla( 0, ( imax * jmax ) ) + 8 * _zla( 0, 1 + maxnodes )
  511.       t$255 = t$236 + _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) * 4 + 8 * _zla( 0, ( imax * jmax ) ) + 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) )
  514.       $F_A33 = jbmax
  514.       $F_A34 = levs
  514.       $F_A35 = ibmax
  514.       if ( and( and( -$F_A34, -$F_A33 ), -$F_A35 ) < 0 ) then
  514.          $I_L514_282 = 0
  514.          do
  514.             $I_L514_266 = 0
  514.             do
  514.                $I_L514_244 = 0
  514. !dir$ ivdep
  514.                do
  514.                   field(1 + $I_L514_244, 1 + $I_L514_266, 1 + $I_L514_282) = imask(1 + $I_L514_244, 1 + $I_L514_266, 1 + $I_L514_282)
  514.                   $I_L514_244 = 1 + $I_L514_244
  514.                   if ( $I_L514_244 >= $F_A35 ) exit
  514.                enddo
  514.                $I_L514_266 = 1 + $I_L514_266
  514.                if ( $I_L514_266 >= $F_A34 ) exit
  514.             enddo
  514.             $I_L514_282 = 1 + $I_L514_282
  514.             if ( $I_L514_282 >= $F_A33 ) exit
  514.          enddo
  514.       endif
  515.       comm = 1140850688
  516.       if ( nproc + -myid /= 0 ) then
  517.          $js_S17 = -1 + myfirstlat_diag
  518.          $jc_S23 = mylastlat_diag + -myfirstlat_diag + 1
  518.       else
  520.          $js_S17 = 0
  521.          $jc_S23 = jmax
  521.       endif
  523.       ib(0) = 1
  524.       $m_S1 = 0
  525.       $t_S4 = nrecs_diag
  525.       if ( nrecs_diag > 0 ) then
  525.          $I_L525_256 = 0
  525.          do
  526.             ic = 0
  527.             $t_S2 = (myrecspr_diag%base_addr)(2, 1 + $I_L525_256, 0)
  527.             if ( $t_S2 + -$m_S1 > 0 ) then
  527.                $I_L527_227 = 0
  527. !dir$ ivdep
  527.                do
  528.                   ic = ic + (myrecs_diag%base_addr)(2, $m_S1 + $I_L527_227 + 1, 0) + -(myrecs_diag%base_addr)(1, $m_S1 + $I_L527_227 + 1, 0) + 1
  529.                   $I_L527_227 = 1 + $I_L527_227
  527.                   if ( $I_L527_227 >= ( $t_S2 + -$m_S1 ) ) exit
  527.                enddo
  527.             endif
  530.             $m_S1 = $t_S2
  531.             ib(1 + $I_L525_256) = ib($I_L525_256) + levs * ic
  532.             t$646 = ib(1 + $I_L525_256) + -ib($I_L525_256)
  532.             call mpi_irecv( ibufrec(ib($I_L525_256)), t$646, 1275069467, (myrecspr_diag%base_addr)(1, 1 + $I_L525_256, 0), 88, comm, requestr(1 + $I_L525_256), ierr )
  534.             $I_L525_256 = 1 + $I_L525_256
  534.             if ( $I_L525_256 >= $t_S4 ) exit
  534.          enddo
  534.       endif
  535.       $m_S6 = 0
  536.       $ic_S13 = 0
  537.       $iold_S14 = 0
  538.       $t_S15 = nsends_diag
  538.       if ( nsends_diag > 0 ) then
  542.          if ( -1 + levs >= 0 ) then
  538.             $I_L538_284 = 0
  538.             do
  539.                $t_S7 = (mysendspr_diag%base_addr)(2, 1 + $I_L538_284, 0)
  539.                if ( $t_S7 + -$m_S6 > 0 ) then
  539.                   $I_L539_272 = 0
  539.                   do
  540.                      $j_S12 = (mysends_diag%base_addr)(3, $m_S6 + $I_L539_272 + 1, 0)
  541.                      $t_S9 = (mysends_diag%base_addr)(1, $m_S6 + $I_L539_272 + 1, 0)
  541.                      $t_S10 = (mysends_diag%base_addr)(2, $m_S6 + $I_L539_272 + 1, 0)
  541.                      if ( $t_S10 + -$t_S9 >= 0 ) then
  541.                         $I_L541_258 = 0
  541.                         do
  542.                            $F_A36 = -1 + levs + 1
  542.                            $SCA_ibperij_I36 = (ibperij%base_addr)($t_S9 + $I_L541_258, $j_S12, 0)
  542.                            $SCA_jbperij_I37 = (jbperij%base_addr)($t_S9 + $I_L541_258, $j_S12, 0)
  542.                            $I_L542_246 = 0
  542. !dir$ ivdep
  542.                            do
  542.                               ibufsend($ic_S13 + $I_L542_246 + levs * $I_L541_258 + 1) = field($SCA_ibperij_I36, 1 + $I_L542_246, $SCA_jbperij_I37)
  542.                               $I_L542_246 = 1 + $I_L542_246
  542.                               if ( $I_L542_246 >= $F_A36 ) exit
  542.                            enddo
  544.                            $I_L541_258 = 1 + $I_L541_258
  541.                            if ( $I_L541_258 >= $t_S10 + -$t_S9 + 1 ) exit
  541.                         enddo
  543.                         $ic_S13 = ( levs + $ic_S13 + -( $t_S9 * levs ) + $t_S10 * levs )
  543.                      endif
  545.                      $I_L539_272 = 1 + $I_L539_272
  544.                      if ( $I_L539_272 >= ( $t_S7 + -$m_S6 ) ) exit
  544.                   enddo
  544.                endif
  546.                t$646 = $ic_S13 + -$iold_S14
  546.                call mpi_isend( ibufsend(1 + $iold_S14), t$646, 1275069467, (mysendspr_diag%base_addr)(1, 1 + $I_L538_284, 0), 88, comm, requests(1 + $I_L538_284), ierr )
  548.                $m_S6 = (mysendspr_diag%base_addr)(2, 1 + $I_L538_284, 0)
  549.                $iold_S14 = $ic_S13
  550.                $I_L538_284 = 1 + $I_L538_284
  548.                if ( $I_L538_284 >= $t_S15 ) exit
  548.             enddo
  548.          else
  538.             $I_L538_268 = 0
  538.             do
  539.                $t_S7 = (mysendspr_diag%base_addr)(2, 1 + $I_L538_268, 0)
  539.                if ( $t_S7 + -$m_S6 > 0 ) then
  539.                   $I_L539_252 = 0
  539. !dir$ ivdep
  539.                   do
  541.                      $t_S9 = (mysends_diag%base_addr)(1, $m_S6 + $I_L539_252 + 1, 0)
  541.                      $t_S10 = (mysends_diag%base_addr)(2, $m_S6 + $I_L539_252 + 1, 0)
  541.                      if ( $t_S10 + -$t_S9 >= 0 ) then
  543.                         $ic_S13 = ( levs + $ic_S13 + -( $t_S9 * levs ) + $t_S10 * levs )
  543.                      endif
  545.                      $I_L539_252 = 1 + $I_L539_252
  544.                      if ( $I_L539_252 >= ( $t_S7 + -$m_S6 ) ) exit
  544.                   enddo
  544.                endif
  546.                t$646 = $ic_S13 + -$iold_S14
  546.                call mpi_isend( ibufsend(1 + $iold_S14), t$646, 1275069467, (mysendspr_diag%base_addr)(1, 1 + $I_L538_268, 0), 88, comm, requests(1 + $I_L538_268), ierr )
  548.                $m_S6 = (mysendspr_diag%base_addr)(2, 1 + $I_L538_268, 0)
  549.                $iold_S14 = $ic_S13
  550.                $I_L538_268 = 1 + $I_L538_268
  548.                if ( $I_L538_268 >= $t_S15 ) exit
  548.             enddo
  548.          endif
  548.       endif
  551.       if ( min( mylastlat_diag, mylastlat ) + -max( myfirstlat_diag, myfirstlat ) >= 0 ) then
  553.          if ( levs > 0 ) then
  551.             $I_L551_274 = 0
  551.             do
  553.                $SCA_myfirstlon_I38 = (myfirstlon%base_addr)($I_L551_274 + max( myfirstlat_diag, myfirstlat ), 0)
  553.                $SCA_mylastlon_I39 = (mylastlon%base_addr)($I_L551_274 + max( myfirstlat_diag, myfirstlat ), 0)
  554.                if ( $SCA_mylastlon_I39 + -$SCA_myfirstlon_I38 >= 0 ) then
  553.                   $I_L553_260 = 0
  553. !dir$ blocking_size( 0, 0 )
  553.                   do
  554.                      $I_L554_229 = 0
  554. !dir$ ivdep
  554. !dir$ blocking_size( 0, 0 )
  554.                      do
  555.                         fieldglob($SCA_myfirstlon_I38 + $I_L554_229, $I_L551_274 + max( myfirstlat_diag, myfirstlat ) + -$js_S17 + $jc_S23 * $I_L553_260) = field((ibperij%base_addr)($SCA_myfirstlon_I38 + $I_L554_229, $I_L551_274 + max( myfirstlat_diag, myfirstlat ), 0), 1 + $I_L553_260, (jbperij%base_addr)($SCA_myfirstlon_I38 + $I_L554_229, $I_L551_274 + max( myfirstlat_diag, myfirstlat ), 0))
  556.                         $I_L554_229 = 1 + $I_L554_229
  554.                         if ( $I_L554_229 >= $SCA_mylastlon_I39 + -$SCA_myfirstlon_I38 + 1 ) exit
  554.                      enddo
  558.                      $I_L553_260 = 1 + $I_L553_260
  556.                      if ( $I_L553_260 >= levs ) exit
  556.                   enddo
  556.                endif
  559.                $I_L551_274 = 1 + $I_L551_274
  558.                if ( $I_L551_274 >= min( mylastlat_diag, mylastlat ) + -max( myfirstlat_diag, myfirstlat ) + 1 ) exit
  558.             enddo
  558.          endif
  558.       endif
  560.       $t_S35 = nrecs_diag
  560.       if ( nrecs_diag > 0 ) then
  560.          $I_L560_292 = 0
  560.          do
  561.             call mpi_waitany( nrecs_diag, requestr(1), index, status(1), ierr )
  562.             $ks_S24 = status(3)
  563.             if ( nrecs_diag > 0 ) then
  563.                $I_L563_231 = 0
  563. !dir$ ivdep
  563.                do
  564.                   if ( (myrecspr_diag%base_addr)(1, 1 + $I_L563_231, 0) + -$ks_S24 == 0 ) then
  565.                      n = ( 1 + $I_L563_231 )
  566.                      $ic_S13 = -1 + ib($I_L563_231)
  567.                      $m_S6 = (myrecspr_diag%base_addr)(2, $I_L563_231, 0)
  567.                      goto 10
  567.                   endif
  570.                   $I_L563_231 = 1 + $I_L563_231
  569.                   if ( $I_L563_231 >= nrecs_diag ) exit
  569.                enddo
  569.             endif
  569.    10       continue
  571.             $t_S26 = (myrecspr_diag%base_addr)(2, n, 0)
  571.             if ( $t_S26 + -$m_S6 > 0 ) then
  575.                if ( levs > 0 ) then
  571.                   $I_L571_286 = 0
  571.                   do
  572.                      $j_S30 = (myrecs_diag%base_addr)(3, $m_S6 + $I_L571_286 + 1, 0) + -$js_S17
  573.                      $t_S28 = (myrecs_diag%base_addr)(1, $m_S6 + $I_L571_286 + 1, 0)
  573.                      $t_S29 = (myrecs_diag%base_addr)(2, $m_S6 + $I_L571_286 + 1, 0)
  573.                      if ( $t_S29 + -$t_S28 >= 0 ) then
  573.                         $I_L573_276 = 0
  573.                         do
  575.                            $I_L575_270 = 0
  575.                            if ( levs >= 4 ) then
  575.                               $I_L575_297 = 0
  575. !dir$ blocking_size( 0, 0 )
  575.                               do
  573.                                  $I_L573_233 = 0
  573. !dir$ ivdep
  573. !dir$ blocking_size( 256, 256 )
  573.                                  do
  576.                                     fieldglob($t_S28 + $I_L573_233 + 256 * $I_L573_276, $j_S30 + $jc_S23 * $I_L575_297 * 4) = ibufrec($ic_S13 + levs * $I_L573_233 + levs * $I_L573_276 * 256 + 4 * $I_L575_297 + 1)
  576.                                     fieldglob($t_S28 + $I_L573_233 + 256 * $I_L573_276, $jc_S23 + $j_S30 + $jc_S23 * $I_L575_297 * 4) = ibufrec($ic_S13 + levs * $I_L573_233 + levs * $I_L573_276 * 256 + 4 * $I_L575_297 + 2)
  576.                                     fieldglob($t_S28 + $I_L573_233 + 256 * $I_L573_276, $j_S30 + 2 * $jc_S23 + $jc_S23 * $I_L575_297 * 4) = ibufrec($ic_S13 + levs * $I_L573_233 + levs * $I_L573_276 * 256 + 4 * $I_L575_297 + 3)
  576.                                     fieldglob($t_S28 + $I_L573_233 + 256 * $I_L573_276, $j_S30 + 3 * $jc_S23 + $jc_S23 * $I_L575_297 * 4) = ibufrec($ic_S13 + levs * $I_L573_233 + levs * $I_L573_276 * 256 + 4 * $I_L575_297 + 4)
  573.                                     $I_L573_233 = 1 + $I_L573_233
  575.                                     if ( $I_L573_233 >= min( $t_S29 + -$t_S28 + 1, 256 + 256 * $I_L573_276 ) + -256 * $I_L573_276 ) exit
  575.                                  enddo
  578.                                  $I_L575_297 = 1 + $I_L575_297
  578.                                  if ( $I_L575_297 >= _rsh( levs, 2 ) ) exit
  578.                               enddo
  578.                               $I_L575_270 = and( 0xfffffffffffffffcUL, levs )
  578.                            endif
  575.                            if ( $I_L575_270 < levs ) then
  575.                               $I_L575_294 = 0
  575. !dir$ blocking_size( 0, 0 )
  575.                               do
  573.                                  $I_L573_233 = 0
  573. !dir$ ivdep
  573. !dir$ blocking_size( 256, 256 )
  573.                                  do
  576.                                     fieldglob($t_S28 + $I_L573_233 + 256 * $I_L573_276, $j_S30 + $jc_S23 * $I_L575_270 + $jc_S23 * $I_L575_294) = ibufrec($ic_S13 + $I_L575_270 + $I_L575_294 + levs * $I_L573_233 + levs * $I_L573_276 * 256 + 1)
  573.                                     $I_L573_233 = 1 + $I_L573_233
  575.                                     if ( $I_L573_233 >= min( $t_S29 + -$t_S28 + 1, 256 + 256 * $I_L573_276 ) + -256 * $I_L573_276 ) exit
  575.                                  enddo
  578.                                  $I_L575_294 = 1 + $I_L575_294
  578.                                  if ( $I_L575_294 >= levs + -$I_L575_270 ) exit
  578.                               enddo
  578.                            endif
  573.                            $I_L573_276 = 1 + $I_L573_276
  578.                            if ( $I_L573_276 >= 1 + max( 0, -1 + _rsh( $t_S29 + -$t_S28 + 256, 8 ) ) ) exit
  578.                         enddo
  579.                         $ic_S13 = ( levs + $ic_S13 + -( $t_S28 * levs ) + $t_S29 * levs )
  579.                      endif
  581.                      $I_L571_286 = 1 + $I_L571_286
  580.                      if ( $I_L571_286 >= ( $t_S26 + -$m_S6 ) ) exit
  580.                   enddo
  580.                else
  571.                   $I_L571_240 = 0
  571. !dir$ ivdep
  571.                   do
  573.                      $t_S28 = (myrecs_diag%base_addr)(1, $m_S6 + $I_L571_240 + 1, 0)
  573.                      $t_S29 = (myrecs_diag%base_addr)(2, $m_S6 + $I_L571_240 + 1, 0)
  573.                      if ( $t_S29 + -$t_S28 >= 0 ) then
  579.                         $ic_S13 = ( levs + $ic_S13 + -( $t_S28 * levs ) + $t_S29 * levs )
  579.                      endif
  581.                      $I_L571_240 = 1 + $I_L571_240
  580.                      if ( $I_L571_240 >= ( $t_S26 + -$m_S6 ) ) exit
  580.                   enddo
  580.                endif
  580.             endif
  582.             $I_L560_292 = 1 + $I_L560_292
  581.             if ( $I_L560_292 >= $t_S35 ) exit
  581.          enddo
  581.       endif
  583.       if ( nsends_diag > 0 ) then
  583.          call mpi_waitall( nsends_diag, requests(1), stat(1, 1), ierr )
  583.       endif
  584.       if ( nproc + -myid /= 0 ) then
  585.          ic = levs * imax + levs * imax * mylastlat_diag + -( levs * imax * myfirstlat_diag )
  587.          if ( levs * imax + levs * imax * mylastlat_diag + -( levs * imax * myfirstlat_diag ) > 0 ) then
  587.             call mpi_isend( fieldglob(1, 1), ic, 1275069467, nproc, 89, comm, requests(1), ierr )
  587.          endif
  589.          call mpi_wait( requests(1), status(1), ierr )
  589.       else
  591.          ib(0) = 1
  592.          $F_A37 = 1 + t$47
  592.          if ( t$47 >= 0 ) then
  592.             $I_L592_248 = 0
  592. !dir$ ivdep
  592.             do
  592.                requestr($I_L592_248) = 738197504
  592.                $I_L592_248 = 1 + $I_L592_248
  592.                if ( $I_L592_248 >= $F_A37 ) exit
  592.             enddo
  592.          endif
  593.          $n_S37 = 0
  594.          $t_S38 = -1 + maxnodes
  594.          if ( maxnodes > 0 ) then
  594.             $I_L594_236 = 0
  594.             do
  595.                if ( $I_L594_236 + -myid /= 0 ) then
  596.                   ic = -( levs * imax * (firstandlastlat%base_addr)(1, $I_L594_236, 0) ) + levs * imax + levs * imax * (firstandlastlat%base_addr)(2, $I_L594_236, 0)
  597.                   if ( ic > 0 ) then
  599.                      t$646 = $I_L594_236
  598.                      call mpi_irecv( ibufrec(ib($I_L594_236)), ic, 1275069467, t$646, 89, comm, requestr($I_L594_236), ierr )
  600.                      $n_S37 = 1 + $n_S37
  600.                   endif
  600.                else
  603.                   ic = 0
  603.                endif
  605.                ib(1 + $I_L594_236) = ic + ib($I_L594_236)
  606.                $I_L594_236 = 1 + $I_L594_236
  604.                if ( $I_L594_236 >= 1 + $t_S38 ) exit
  604.             enddo
  604.          endif
  607.          if ( $n_S37 > 0 ) then
  611.             if ( levs <= 0 ) then
  607.                $I_L607_242 = 0
  607.                do
  608.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  618.                   $I_L607_242 = 1 + $I_L607_242
  617.                   if ( $I_L607_242 >= $n_S37 ) exit
  617.                enddo
  617.             else if ( t$43 > 0 ) then
  607.                $I_L607_288 = 0
  607.                do
  608.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  609.                   $ks_S39 = status(3)
  610.                   $ic_S42 = -1 + ib($ks_S39)
  613.                   $SC_firstandlastlat_I35 = (firstandlastlat%base_addr)(2, $ks_S39, 0)
  613.                   $SC_firstandlastlat_I34 = (firstandlastlat%base_addr)(1, $ks_S39, 0)
  613.                   if ( $SC_firstandlastlat_I35 + -$SC_firstandlastlat_I34 >= 0 ) then
  611.                      $I_L611_278 = 0
  611.                      do
  613.                         $I_L613_262 = 0
  613.                         do
  614.                            $F_A38 = t$43
  614.                            $I_L614_250 = 0
  614. !dir$ ivdep
  614.                            do
  614.                               fieldglob(1 + $I_L614_250, $SC_firstandlastlat_I34 + $I_L613_262 + jmax * $I_L611_278) = ibufrec($ic_S42 + $I_L614_250 + -( imax * $SC_firstandlastlat_I34 * $I_L611_278 ) + imax * $I_L613_262 + imax * $I_L611_278 + imax * $SC_firstandlastlat_I35 * $I_L611_278 + 1)
  614.                               $I_L614_250 = 1 + $I_L614_250
  614.                               if ( $I_L614_250 >= $F_A38 ) exit
  614.                            enddo
  616.                            $I_L613_262 = 1 + $I_L613_262
  613.                            if ( $I_L613_262 >= $SC_firstandlastlat_I35 + -$SC_firstandlastlat_I34 + 1 ) exit
  613.                         enddo
  617.                         $I_L611_278 = 1 + $I_L611_278
  616.                         if ( $I_L611_278 >= levs ) exit
  616.                      enddo
  616.                   endif
  618.                   $I_L607_288 = 1 + $I_L607_288
  617.                   if ( $I_L607_288 >= $n_S37 ) exit
  617.                enddo
  617.             else
  607.                $I_L607_254 = 0
  607.                do
  608.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  618.                   $I_L607_254 = 1 + $I_L607_254
  617.                   if ( $I_L607_254 >= $n_S37 ) exit
  617.                enddo
  617.             endif
  617.          endif
  619.          j1 = 1
  620.          if ( levs > 0 ) then
  620.             $I_L620_290 = 0
  620.             do
  621.                $t_S49 = jmax
  621.                if ( jmax > 0 ) then
  621.                   $I_L621_280 = 0
  621.                   do
  622.                      _fwrite( _clist( 0, 0, 2, 97, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  622.                      $_IOitem_P0(0) = ( 1 + $I_L621_280 )
  622.                      $_IOitem_P0(1) = ( 1 + $I_L620_290 )
  622.                      _fwrite( _clist( 0, 0, 0, 97, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IOitem_P0(:( 0, 1, 1 )), 0x2000200000000L ) ) )
  622.                      if ( ( 1 + $I_L621_280 ) < imaxperj%dim_1%LB .or. ( 1 + $I_L621_280 ) > imaxperj%dim_1%LB + imaxperj%dim_1%EX + -1 ) then
  622.                          _substr(t$706,1,19) = 'Communications.f90'
  622.                          _substr(t$707,1,9) = 'IMAXPERJ'
  622.                         t$708 = imaxperj%dim_1%LB
  622.                         t$709 = imaxperj%dim_1%LB + imaxperj%dim_1%EX + -1
  622.                         t$710 = 1 + $I_L621_280
  622.                         call _bounds_error(  _substr(t$706,1,19), 1125,  _substr(t$707,1,9), 1, t$708, t$709, t$710, t$705 )
  622.                      endif
  622.                      $t_S48 = (imaxperj%base_addr)(1 + $I_L621_280, 0)
  622.                      if ( $t_S48 > 0 ) then
  622.                         $I_L622_264 = 0
  622.                         do
  622.                            $I_L622_238 = 0
  622. !dir$ shortloop16
  622.                            do
  622.                               if ( ( $I_L622_238 + 16 * $I_L622_264 + 1 ) <= 0 .or. ( $I_L622_238 + 16 * $I_L622_264 + 1 ) > t$43 ) then
  622.                                   _substr(t$715,1,19) = 'Communications.f90'
  622.                                   _substr(t$716,1,10) = 'FIELDGLOB'
  622.                                  t$717 = $I_L622_238 + 16 * $I_L622_264 + 1
  622.                                  call _bounds_error(  _substr(t$715,1,19), 1125,  _substr(t$716,1,10), 1, 1, t$43, t$717, t$714 )
  622.                               endif
  622.                               if ( ( j1 + $I_L621_280 ) <= 0 .or. ( j1 + $I_L621_280 ) > t$44 ) then
  622.                                   _substr(t$719,1,19) = 'Communications.f90'
  622.                                   _substr(t$720,1,10) = 'FIELDGLOB'
  622.                                  t$721 = j1 + $I_L621_280
  622.                                  call _bounds_error(  _substr(t$719,1,19), 1125,  _substr(t$720,1,10), 2, 1, t$44, t$721, t$718 )
  622.                               endif
  622.                               $IOitem_O0 = fieldglob($I_L622_238 + 16 * $I_L622_264 + 1, j1 + $I_L621_280)
  622.                               $_IO_STRIP_P1($I_L622_238) = $IOitem_O0
  622.                               $I_L622_238 = 1 + $I_L622_238
  622.                               if ( $I_L622_238 >= min( $t_S48, 16 + 16 * $I_L622_264 ) + -16 * $I_L622_264 ) exit
  622.                            enddo
  622.                            _fwrite( _clist( 0, 0, 0, 97, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( $_IO_STRIP_P1(:( 0, ( min( $t_S48, 16 + 16 * $I_L622_264 ) + -16 * $I_L622_264 + -1 ), 1 )), 0x2000200000000L ) ) )
  622.                            $I_L622_264 = 1 + $I_L622_264
  622.                            if ( $I_L622_264 >= 1 + max( 0, -1 + _rsh( 15 + $t_S48, 4 ) ) ) exit
  622.                         enddo
  622.                      endif
  622.                      _fwrite( _clist( 0, 0, 1, 97, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  624.                      $I_L621_280 = 1 + $I_L621_280
  623.                      if ( $I_L621_280 >= $t_S49 ) exit
  623.                   enddo
  623.                   j1 = j1 + $t_S49
  623.                endif
  625.                $I_L620_290 = 1 + $I_L620_290
  624.                if ( $I_L620_290 >= levs ) exit
  624.             enddo
  624.          endif
  624.       endif
  495.       _free( t$236 )
  628.       return
  628.       end
  628.       
  787.       
  787.       subroutine collect_grid_sur_print( fields, interp_type, nf, nproc, nunit )
  128.       if ( t$143 == 0 ) then
  128.          t$262(1) = 3
  128.          t$263(1) = 0
  128.          t$264(1) = 1
  128.          t$259(1) = int( loc( t$142 ), 8 )
  128.          t$260(1) = 0
  128.          t$261(1) = int( loc( t$257 ), 8 )
  128.          t$143 = __get_dynamic_type( 3, t$259(1), t$262(1), 1, t$260(1), t$261(1), t$263(1), t$264(1) )
  128.       endif
  631.       t$50 = nf
  637.       t$266 = max( 0, nf )
  631.       t$51 = imax
  631.       t$52 = ( nf * jmax )
  639.       t$267 = max( 0, imax )
  631.       t$268 = max( 0, imax )
  639.       t$269 = max( 0, ( nf * jmax ) )
  631.       t$270 = max( 0, imax ) * max( 0, ( nf * jmax ) )
  638.       t$273 = max( 0, imax ) * max( 0, ( nf * jmax ) ) * 8
  639.       g%dim_1%LB = 1
  639.       g%dim_1%EX = 0
  639.       g%dim_1%SM = 1
  639.       g%dim_2%LB = 1
  639.       g%dim_2%EX = 0
  639.       g%dim_2%SM = 1
  631.       t$54 = maxnodes
  631.       t$274 = 1 + maxnodes
  650.       t$275 = max( 0, 1 + maxnodes )
  650.       t$277 = max( 0, imax ) * max( 0, ( nf * jmax ) ) * 8 + 4 * max( 0, 1 + maxnodes )
  647.       t$279 = max( 0, imax ) * max( 0, ( nf * jmax ) ) * 8 + 8 * max( 0, 1 + maxnodes )
  631.       t$53 = ( 1 + nsends_diag )
  646.       t$280 = max( 0, ( 1 + nsends_diag ) )
  646.       t$282 = max( 0, imax ) * max( 0, ( nf * jmax ) ) * 8 + 8 * max( 0, 1 + maxnodes ) + 4 * max( 0, ( 1 + nsends_diag ) )
  640.       t$283 = 8 * ( ( max( 0, imax ) * max( 0, ( nf * jmax ) ) * 8 + 8 * max( 0, 1 + maxnodes ) + 4 * max( 0, ( 1 + nsends_diag ) ) + 7 ) / 8 )
  640.       t$285 = 8 * ( ( max( 0, imax ) * max( 0, ( nf * jmax ) ) * 8 + 8 * max( 0, 1 + maxnodes ) + 4 * max( 0, ( 1 + nsends_diag ) ) + 7 ) / 8 ) + 8 * max( 0, imax )
  631.       t$56 = nsends_diag
  649.       t$286 = max( 0, nsends_diag )
  631.       t$287 = 5 * max( 0, nsends_diag )
  649.       t$289 = 8 * ( ( max( 0, imax ) * max( 0, ( nf * jmax ) ) * 8 + 8 * max( 0, 1 + maxnodes ) + 4 * max( 0, ( 1 + nsends_diag ) ) + 7 ) / 8 ) + 8 * max( 0, imax ) + 20 * max( 0, nsends_diag )
  631.       t$271 = int( _alloc( 8 * ( ( max( 0, imax ) * max( 0, ( nf * jmax ) ) * 8 + 8 * max( 0, 1 + maxnodes ) + 4 * max( 0, ( 1 + nsends_diag ) ) + 7 ) / 8 ) + 8 * max( 0, imax ) + 20 * max( 0, nsends_diag ) ), 8 )
  639.       t$272 = t$271
  650.       t$276 = t$271 + max( 0, imax ) * max( 0, ( nf * jmax ) ) * 8
  647.       t$278 = t$271 + max( 0, imax ) * max( 0, ( nf * jmax ) ) * 8 + 4 * max( 0, 1 + maxnodes )
  646.       t$281 = t$271 + max( 0, imax ) * max( 0, ( nf * jmax ) ) * 8 + 8 * max( 0, 1 + maxnodes )
  640.       t$284 = t$271 + 8 * ( ( max( 0, imax ) * max( 0, ( nf * jmax ) ) * 8 + 8 * max( 0, 1 + maxnodes ) + 4 * max( 0, ( 1 + nsends_diag ) ) + 7 ) / 8 )
  649.       t$288 = t$271 + 8 * ( ( max( 0, imax ) * max( 0, ( nf * jmax ) ) * 8 + 8 * max( 0, 1 + maxnodes ) + 4 * max( 0, ( 1 + nsends_diag ) ) + 7 ) / 8 ) + 8 * max( 0, imax )
  652.       comm = 1140850688
  653.       if ( dimrecbuf < nf * imax * jmax ) then
  654.          dimrecbuf = nf * imax * jmax
  655.          $_allo_P0(0) = 0x1000000000001L
  655.          $_allo_P0(1) = loc( bufrec )
  655.          call __deallocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
  655.          bufrec%header%assoc = 0
  656.          bufrec%header%a_contig = 1
  656.          bufrec%dim_1%LB = 1
  656.          bufrec%dim_1%EX = ( max( 0, nf * imax * jmax ) )
  656.          bufrec%dim_1%SM = 1
  656.          $_allo_P1(0) = 0x1000000000001L
  656.          $_allo_P1(1) = loc( bufrec )
  656.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
  656.       endif
  658.       if ( nproc + -myid /= 0 ) then
  659.          $js_S22 = -1 + myfirstlat_diag
  660.          $jc_S23 = mylastlat_diag + -myfirstlat_diag + 1
  660.       else
  662.          $js_S22 = 0
  663.          $jc_S23 = jmax
  663.       endif
  665.       ib(0) = 1
  666.       $m_S1 = 0
  667.       $t_S4 = nrecs_diag
  667.       if ( nrecs_diag > 0 ) then
  667.          $I_L667_200 = 0
  667.          do
  668.             ic = 0
  669.             $t_S2 = (myrecspr_diag%base_addr)(2, 1 + $I_L667_200, 0)
  669.             if ( $t_S2 + -$m_S1 > 0 ) then
  669.                $I_L669_168 = 0
  669. !dir$ ivdep
  669.                do
  670.                   ic = ic + (myrecs_diag%base_addr)(2, $m_S1 + $I_L669_168 + 1, 0) + -(myrecs_diag%base_addr)(1, $m_S1 + $I_L669_168 + 1, 0) + 1
  671.                   $I_L669_168 = 1 + $I_L669_168
  669.                   if ( $I_L669_168 >= ( $t_S2 + -$m_S1 ) ) exit
  669.                enddo
  669.             endif
  672.             $m_S1 = $t_S2
  673.             ib(1 + $I_L667_200) = ib($I_L667_200) + nf * ic
  674.             t$729 = ib(1 + $I_L667_200) + -ib($I_L667_200)
  674.             call mpi_irecv( (bufrec%base_addr)(ib($I_L667_200), 0), t$729, 1275070495, (myrecspr_diag%base_addr)(1, 1 + $I_L667_200, 0), 88, comm, requestr(1 + $I_L667_200), ierr )
  676.             $I_L667_200 = 1 + $I_L667_200
  676.             if ( $I_L667_200 >= $t_S4 ) exit
  676.          enddo
  676.       endif
  677.       $m_S7 = 0
  678.       $ic_S14 = 1
  679.       $iold_S15 = 1
  680.       $t_S16 = nsends_diag
  680.       if ( nsends_diag > 0 ) then
  681.          if ( nf > 0 ) then
  680.             $I_L680_228 = 0
  680.             do
  683.                $SC_mysendspr_diag_I10 = (mysendspr_diag%base_addr)(2, 1 + $I_L680_228, 0)
  683.                if ( $SC_mysendspr_diag_I10 + -$m_S7 > 0 ) then
  681.                   $I_L681_218 = 0
  681.                   do
  682.                      g = fields(1 + $I_L681_218)%p
  683.                      $I_L683_202 = 0
  683.                      do
  684.                         $j_S13 = (mysends_diag%base_addr)(3, $m_S7 + $I_L683_202 + 1, 0)
  685.                         $t_S10 = (mysends_diag%base_addr)(1, $m_S7 + $I_L683_202 + 1, 0)
  685.                         $t_S11 = (mysends_diag%base_addr)(2, $m_S7 + $I_L683_202 + 1, 0)
  685.                         if ( $t_S11 + -$t_S10 >= 0 ) then
  685.                            $I_L685_170 = 0
  685. !dir$ ivdep
  685.                            do
  686.                               (bufsend%base_addr)($ic_S14 + $I_L685_170, 0) = (g%base_addr)((ibperij%base_addr)($t_S10 + $I_L685_170, $j_S13, 0), (jbperij%base_addr)($t_S10 + $I_L685_170, $j_S13, 0), 0)
  688.                               $I_L685_170 = 1 + $I_L685_170
  685.                               if ( $I_L685_170 >= $t_S11 + -$t_S10 + 1 ) exit
  685.                            enddo
  687.                            $ic_S14 = ( $t_S11 + $ic_S14 + -$t_S10 + 1 )
  687.                         endif
  689.                         $I_L683_202 = 1 + $I_L683_202
  688.                         if ( $I_L683_202 >= ( $SC_mysendspr_diag_I10 + -$m_S7 ) ) exit
  688.                      enddo
  690.                      $I_L681_218 = 1 + $I_L681_218
  689.                      if ( $I_L681_218 >= nf ) exit
  689.                   enddo
  689.                else
  681.                   $I_L681_182 = 0
  681. !dir$ ivdep
  681.                   do
  682.                      g = fields(1 + $I_L681_182)%p
  690.                      $I_L681_182 = 1 + $I_L681_182
  689.                      if ( $I_L681_182 >= nf ) exit
  689.                   enddo
  682.                   g = fields(nf)%p
  682.                endif
  691.                t$729 = $ic_S14 + -$iold_S15
  691.                call mpi_isend( (bufsend%base_addr)($iold_S15, 0), t$729, 1275070495, (mysendspr_diag%base_addr)(1, 1 + $I_L680_228, 0), 88, comm, requests(1 + $I_L680_228), ierr )
  693.                $m_S7 = (mysendspr_diag%base_addr)(2, 1 + $I_L680_228, 0)
  694.                $iold_S15 = $ic_S14
  695.                $I_L680_228 = 1 + $I_L680_228
  693.                if ( $I_L680_228 >= $t_S16 ) exit
  693.             enddo
  690.             n = ( 1 + nf )
  690.          else
  680.             $I_L680_184 = 0
  680.             do
  691.                t$729 = 0
  691.                call mpi_isend( (bufsend%base_addr)(1, 0), t$729, 1275070495, (mysendspr_diag%base_addr)(1, 1 + $I_L680_184, 0), 88, comm, requests(1 + $I_L680_184), ierr )
  695.                $I_L680_184 = 1 + $I_L680_184
  693.                if ( $I_L680_184 >= $t_S16 ) exit
  693.             enddo
  681.             n = 1
  693.             $m_S7 = (mysendspr_diag%base_addr)(2, $t_S16, 0)
  693.          endif
  693.       endif
  696.       if ( nf > 0 ) then
  698.          if ( min( mylastlat_diag, mylastlat ) + -max( myfirstlat_diag, myfirstlat ) >= 0 ) then
  696.             $I_L696_220 = 0
  696.             do
  697.                g = fields(1 + $I_L696_220)%p
  698.                $I_L698_204 = 0
  698.                do
  700.                   $t_S19 = (myfirstlon%base_addr)($I_L698_204 + max( myfirstlat_diag, myfirstlat ), 0)
  700.                   $t_S20 = (mylastlon%base_addr)($I_L698_204 + max( myfirstlat_diag, myfirstlat ), 0)
  700.                   if ( $t_S20 + -$t_S19 >= 0 ) then
  700.                      $I_L700_172 = 0
  700. !dir$ unroll 4
  700.                      do
  701.                         fieldglob($t_S19 + $I_L700_172, $I_L698_204 + max( myfirstlat_diag, myfirstlat ) + -$js_S22 + $jc_S23 * $I_L696_220) = (g%base_addr)((ibperij%base_addr)($t_S19 + $I_L700_172, $I_L698_204 + max( myfirstlat_diag, myfirstlat ), 0), (jbperij%base_addr)($t_S19 + $I_L700_172, $I_L698_204 + max( myfirstlat_diag, myfirstlat ), 0), 0)
  702.                         $I_L700_172 = 1 + $I_L700_172
  700.                         if ( $I_L700_172 >= $t_S20 + -$t_S19 + 1 ) exit
  700.                      enddo
  700.                   endif
  703.                   $I_L698_204 = 1 + $I_L698_204
  702.                   if ( $I_L698_204 >= min( mylastlat_diag, mylastlat ) + -max( myfirstlat_diag, myfirstlat ) + 1 ) exit
  702.                enddo
  704.                $I_L696_220 = 1 + $I_L696_220
  703.                if ( $I_L696_220 >= nf ) exit
  703.             enddo
  703.          endif
  703.       endif
  705.       $t_S34 = nrecs_diag
  705.       if ( nrecs_diag > 0 ) then
  705.          $I_L705_230 = 0
  705.          do
  706.             call mpi_waitany( nrecs_diag, requestr(1), index, status(1), ierr )
  707.             $ks_S24 = status(3)
  708.             if ( nrecs_diag > 0 ) then
  708.                $I_L708_174 = 0
  708. !dir$ ivdep
  708.                do
  709.                   if ( (myrecspr_diag%base_addr)(1, 1 + $I_L708_174, 0) + -$ks_S24 == 0 ) then
  710.                      n = ( 1 + $I_L708_174 )
  711.                      $ic_S14 = ib($I_L708_174)
  712.                      $m_S7 = (myrecspr_diag%base_addr)(2, $I_L708_174, 0)
  712.                      goto 10
  712.                   endif
  715.                   $I_L708_174 = 1 + $I_L708_174
  714.                   if ( $I_L708_174 >= nrecs_diag ) exit
  714.                enddo
  714.             endif
  714.    10       continue
  716.             if ( nf > 0 ) then
  717.                $SC_myrecspr_diag_I37 = (myrecspr_diag%base_addr)(2, n, 0)
  717.                if ( $SC_myrecspr_diag_I37 + -$m_S7 > 0 ) then
  716.                   $I_L716_222 = 0
  716.                   do
  717.                      $I_L717_206 = 0
  717.                      do
  718.                         $j_S32 = ( (myrecs_diag%base_addr)(3, $m_S7 + $I_L717_206 + 1, 0) + -$js_S22 + $jc_S23 * $I_L716_222 )
  719.                         $t_S29 = (myrecs_diag%base_addr)(1, $m_S7 + $I_L717_206 + 1, 0)
  719.                         $t_S30 = (myrecs_diag%base_addr)(2, $m_S7 + $I_L717_206 + 1, 0)
  719.                         if ( $t_S30 + -$t_S29 >= 0 ) then
  719.                            $I_L719_176 = 0
  719. !dir$ ivdep
  719.                            do
  720.                               fieldglob($t_S29 + $I_L719_176, $j_S32) = (bufrec%base_addr)($ic_S14 + $I_L719_176, 0)
  722.                               $I_L719_176 = 1 + $I_L719_176
  719.                               if ( $I_L719_176 >= $t_S30 + -$t_S29 + 1 ) exit
  719.                            enddo
  721.                            $ic_S14 = ( $ic_S14 + $t_S30 + -$t_S29 + 1 )
  721.                         endif
  723.                         $I_L717_206 = 1 + $I_L717_206
  722.                         if ( $I_L717_206 >= ( $SC_myrecspr_diag_I37 + -$m_S7 ) ) exit
  722.                      enddo
  724.                      $I_L716_222 = 1 + $I_L716_222
  723.                      if ( $I_L716_222 >= nf ) exit
  723.                   enddo
  723.                endif
  723.             endif
  725.             $I_L705_230 = 1 + $I_L705_230
  724.             if ( $I_L705_230 >= $t_S34 ) exit
  724.          enddo
  724.       endif
  726.       if ( nsends_diag > 0 ) then
  726.          call mpi_waitall( nsends_diag, requests(1), stat(1, 1), ierr )
  726.       endif
  727.       if ( reducedgrid ) then
  728.          if ( nf > 0 ) then
  728.             $I_L728_224 = 0
  728.             do
  729.                $t_S36 = myfirstlat_diag
  729.                $t_S38 = mylastlat_diag
  729.                if ( mylastlat_diag + -myfirstlat_diag >= 0 ) then
  732.                   $SC_interp_type_I40 = interp_type(1 + $I_L728_224)
  732.                   if ( $SC_interp_type_I40 == 1 ) then
  729.                      $I_L729_208 = 0
  729.                      do
  731.                         $F_A33 = (imaxperj%base_addr)($t_S36 + $I_L729_208, 0)
  731.                         if ( (imaxperj%base_addr)($t_S36 + $I_L729_208, 0) > 0 ) then
  731.                            $I_L731_188 = 0
  731. !dir$ ivdep
  731.                            do
  731.                               saux(1 + $I_L731_188) = fieldglob(1 + $I_L731_188, $t_S36 + $I_L729_208 + -$js_S22 + $jc_S23 * $I_L728_224)
  731.                               $I_L731_188 = 1 + $I_L731_188
  731.                               if ( $I_L731_188 >= $F_A33 ) exit
  731.                            enddo
  731.                         endif
  733.                         ipa$5 = 1
  733.                         call cycliclinear( (imaxperj%base_addr)($t_S36 + $I_L729_208, 0), imax, saux(1), fieldglob(1, $t_S36 + $I_L729_208 + -$js_S22 + $jc_S23 * $I_L728_224), ipa$5, imax )
  742.                         $I_L729_208 = 1 + $I_L729_208
  741.                         if ( $I_L729_208 >= $t_S38 + -$t_S36 + 1 ) exit
  741.                      enddo
  741.                   else if ( $SC_interp_type_I40 == 2 ) then
  729.                      $I_L729_212 = 0
  729.                      do
  731.                         $F_A34 = (imaxperj%base_addr)($t_S36 + $I_L729_212, 0)
  731.                         if ( (imaxperj%base_addr)($t_S36 + $I_L729_212, 0) > 0 ) then
  731.                            $I_L731_190 = 0
  731. !dir$ ivdep
  731.                            do
  731.                               saux(1 + $I_L731_190) = fieldglob(1 + $I_L731_190, $t_S36 + $I_L729_212 + -$js_S22 + $jc_S23 * $I_L728_224)
  731.                               $I_L731_190 = 1 + $I_L731_190
  731.                               if ( $I_L731_190 >= $F_A34 ) exit
  731.                            enddo
  731.                         endif
  736.                         ipa$11 = 1
  736.                         call cyclicnearest_r( (imaxperj%base_addr)($t_S36 + $I_L729_212, 0), imax, saux(1), fieldglob(1, $t_S36 + $I_L729_212 + -$js_S22 + $jc_S23 * $I_L728_224), ipa$11, imax )
  742.                         $I_L729_212 = 1 + $I_L729_212
  741.                         if ( $I_L729_212 >= $t_S38 + -$t_S36 + 1 ) exit
  741.                      enddo
  741.                   else if ( $SC_interp_type_I40 == 3 ) then
  729.                      $I_L729_214 = 0
  729.                      do
  731.                         $F_A35 = (imaxperj%base_addr)($t_S36 + $I_L729_214, 0)
  731.                         if ( (imaxperj%base_addr)($t_S36 + $I_L729_214, 0) > 0 ) then
  731.                            $I_L731_192 = 0
  731. !dir$ ivdep
  731.                            do
  731.                               saux(1 + $I_L731_192) = fieldglob(1 + $I_L731_192, $t_S36 + $I_L729_214 + -$js_S22 + $jc_S23 * $I_L728_224)
  731.                               $I_L731_192 = 1 + $I_L731_192
  731.                               if ( $I_L731_192 >= $F_A35 ) exit
  731.                            enddo
  731.                         endif
  739.                         ipa$17 = 1
  739.                         call cycliclinear_abs( (imaxperj%base_addr)($t_S36 + $I_L729_214, 0), imax, saux(1), fieldglob(1, $t_S36 + $I_L729_214 + -$js_S22 + $jc_S23 * $I_L728_224), ipa$17, imax )
  742.                         $I_L729_214 = 1 + $I_L729_214
  741.                         if ( $I_L729_214 >= $t_S38 + -$t_S36 + 1 ) exit
  741.                      enddo
  741.                   else
  729.                      $I_L729_216 = 0
  729.                      do
  731.                         $F_A36 = (imaxperj%base_addr)(myfirstlat_diag + $I_L729_216, 0)
  731.                         if ( (imaxperj%base_addr)(myfirstlat_diag + $I_L729_216, 0) > 0 ) then
  731.                            $I_L731_194 = 0
  731. !dir$ ivdep
  731.                            do
  731.                               saux(1 + $I_L731_194) = fieldglob(1 + $I_L731_194, myfirstlat_diag + $I_L729_216 + -$js_S22 + $jc_S23 * $I_L728_224)
  731.                               $I_L731_194 = 1 + $I_L731_194
  731.                               if ( $I_L731_194 >= $F_A36 ) exit
  731.                            enddo
  731.                         endif
  742.                         $I_L729_216 = 1 + $I_L729_216
  741.                         if ( $I_L729_216 >= mylastlat_diag + -myfirstlat_diag + 1 ) exit
  741.                      enddo
  741.                   endif
  741.                endif
  743.                $I_L728_224 = 1 + $I_L728_224
  742.                if ( $I_L728_224 >= nf ) exit
  742.             enddo
  742.          endif
  742.       endif
  745.       if ( nproc + -myid /= 0 ) then
  746.          ic = nf * imax + nf * imax * mylastlat_diag + -( nf * imax * myfirstlat_diag )
  748.          if ( nf * imax + nf * imax * mylastlat_diag + -( nf * imax * myfirstlat_diag ) > 0 ) then
  748.             call mpi_isend( fieldglob(1, 1), ic, 1275070495, nproc, 89, comm, requests(1), ierr )
  748.          endif
  750.          call mpi_wait( requests(1), status(1), ierr )
  750.       else
  752.          ib(0) = 1
  753.          $F_A37 = 1 + t$54
  753.          if ( t$54 >= 0 ) then
  753.             $I_L753_196 = 0
  753. !dir$ ivdep
  753.             do
  753.                requestr($I_L753_196) = 738197504
  753.                $I_L753_196 = 1 + $I_L753_196
  753.                if ( $I_L753_196 >= $F_A37 ) exit
  753.             enddo
  753.          endif
  754.          $n_S40 = 0
  755.          $t_S41 = -1 + maxnodes
  755.          if ( maxnodes > 0 ) then
  755.             $I_L755_178 = 0
  755.             do
  756.                if ( $I_L755_178 + -myid /= 0 ) then
  757.                   ic = -( nf * imax * (firstandlastlat%base_addr)(1, $I_L755_178, 0) ) + nf * imax + nf * imax * (firstandlastlat%base_addr)(2, $I_L755_178, 0)
  758.                   if ( ic > 0 ) then
  760.                      t$729 = $I_L755_178
  759.                      call mpi_irecv( (bufrec%base_addr)(ib($I_L755_178), 0), ic, 1275070495, t$729, 89, comm, requestr($I_L755_178), ierr )
  761.                      $n_S40 = 1 + $n_S40
  761.                   endif
  761.                else
  764.                   ic = 0
  764.                endif
  766.                ib(1 + $I_L755_178) = ic + ib($I_L755_178)
  767.                $I_L755_178 = 1 + $I_L755_178
  765.                if ( $I_L755_178 >= 1 + $t_S41 ) exit
  765.             enddo
  765.          endif
  768.          if ( $n_S40 > 0 ) then
  772.             if ( nf > 0 ) then
  768.                $I_L768_232 = 0
  768.                do
  769.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  770.                   $ks_S42 = status(3)
  771.                   $ic_S45 = -1 + ib($ks_S42)
  774.                   $SC_firstandlastlat_I47 = (firstandlastlat%base_addr)(2, $ks_S42, 0)
  774.                   $SC_firstandlastlat_I46 = (firstandlastlat%base_addr)(1, $ks_S42, 0)
  774.                   if ( $SC_firstandlastlat_I47 + -$SC_firstandlastlat_I46 >= 0 ) then
  772.                      $I_L772_226 = 0
  772.                      do
  774.                         $I_L774_210 = 0
  774.                         do
  775.                            $F_A38 = t$51
  775.                            if ( t$51 > 0 ) then
  775.                               $I_L775_198 = 0
  775. !dir$ ivdep
  775.                               do
  775.                                  fieldglob(1 + $I_L775_198, $SC_firstandlastlat_I46 + $I_L774_210 + jmax * $I_L772_226) = (bufrec%base_addr)($ic_S45 + $I_L775_198 + -( imax * $I_L772_226 * $SC_firstandlastlat_I46 ) + imax * $I_L774_210 + imax * $I_L772_226 + imax * $I_L772_226 * $SC_firstandlastlat_I47 + 1, 0)
  775.                                  $I_L775_198 = 1 + $I_L775_198
  775.                                  if ( $I_L775_198 >= $F_A38 ) exit
  775.                               enddo
  775.                            endif
  777.                            $I_L774_210 = 1 + $I_L774_210
  774.                            if ( $I_L774_210 >= $SC_firstandlastlat_I47 + -$SC_firstandlastlat_I46 + 1 ) exit
  774.                         enddo
  778.                         $I_L772_226 = 1 + $I_L772_226
  777.                         if ( $I_L772_226 >= nf ) exit
  777.                      enddo
  777.                   endif
  779.                   $I_L768_232 = 1 + $I_L768_232
  778.                   if ( $I_L768_232 >= $n_S40 ) exit
  778.                enddo
  778.             else
  768.                $I_L768_186 = 0
  768.                do
  769.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  779.                   $I_L768_186 = 1 + $I_L768_186
  778.                   if ( $I_L768_186 >= $n_S40 ) exit
  778.                enddo
  778.             endif
  778.          endif
  780.          if ( nf > 0 ) then
  780.             $I_L780_180 = 0
  780.             do
  783. !dir$ suppress fieldglob(1, j1)
  783.                t$795%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( fieldglob(1, 1 + jmax * $I_L780_180) ) )
  783.                t$795%header%el_len = 64
  783.                t$795%header%assoc = 1
  783.                t$795%header%ptr_alloc = 0
  783.                t$795%header%p_or_a = 0
  783.                t$795%header%a_contig = 1
  783.                t$795%header%dv_versn = 2
  783.                t$795%header%dv_smunit = 64
  783.                t$795%header%d_type = 0
  783.                t$795%header%n_params = 0
  783.                t$795%header%pad_codim = 0
  783.                t$795%header%n_codim = 0
  783.                t$795%header%pad_dim = 0
  783.                t$795%header%n_dim = 2
  783.                t$795%header%d_type_idx = 13
  783.                t$795%header%typ_code = 134481411
  783.                t$795%header%orig_base = 0
  783.                t$795%header%orig_size = 0
  783.                t$795%dim_1%LB = 1
  783.                t$795%dim_1%EX = ( max( 0, ( -1 + t$51 + 1 ) ) )
  783.                t$795%dim_1%SM = 1
  783.                t$795%dim_2%LB = 1
  783.                t$795%dim_2%EX = ( max( 0, jmax ) )
  783.                t$795%dim_2%SM = max( 0, t$51 )
  783.                call fwritefield82d( nunit, t$795 )
  784.                $I_L780_180 = 1 + $I_L780_180
  784.                if ( $I_L780_180 >= nf ) exit
  784.             enddo
  784.          endif
  784.       endif
  631.       _free( t$271 )
  787.       return
  787.       end
  787.       
  890.       
  890.       subroutine collect_gauss( gauss, gauss_out, nf )
  789.       t$57 = ibmax
  789.       t$58 = nf
  789.       t$59 = jbmax
  792.       t$290 = _zla( 0, ibmax )
  789.       t$291 = _zla( 0, ibmax )
  792.       t$292 = _zla( 0, nf )
  789.       t$293 = _zla( 0, nf ) * _zla( 0, ibmax )
  792.       t$294 = _zla( 0, jbmax )
  789.       t$295 = _zla( 0, nf ) * _zla( 0, ibmax ) * _zla( 0, jbmax )
  789.       t$60 = imax
  789.       t$61 = myjmax_d
  793.       t$296 = _zla( 0, imax )
  789.       t$297 = _zla( 0, imax )
  793.       t$298 = _zla( 0, myjmax_d )
  789.       t$299 = _zla( 0, imax ) * _zla( 0, myjmax_d )
  789.       t$300 = _zla( 0, nf ) * _zla( 0, imax ) * _zla( 0, myjmax_d )
  789.       t$63 = maxnodes
  789.       t$301 = 1 + maxnodes
  804.       t$302 = _zla( 0, 1 + maxnodes )
  804.       t$305 = 4 * _zla( 0, 1 + maxnodes )
  801.       t$307 = 8 * _zla( 0, 1 + maxnodes )
  789.       t$62 = ( 1 + nsends_diag )
  800.       t$308 = _zla( 0, ( 1 + nsends_diag ) )
  800.       t$310 = 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) )
  794.       t$311 = 8 * ( ( 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) ) + 7 ) / 8 )
  794.       t$313 = 8 * ( ( 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) ) + 7 ) / 8 ) + 8 * _zla( 0, imax )
  789.       t$65 = nsends_diag
  803.       t$314 = _zla( 0, nsends_diag )
  789.       t$315 = 5 * _zla( 0, nsends_diag )
  803.       t$317 = 8 * ( ( 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) ) + 7 ) / 8 ) + 8 * _zla( 0, imax ) + 20 * _zla( 0, nsends_diag )
  789.       t$303 = int( _alloc( 8 * ( ( 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) ) + 7 ) / 8 ) + 8 * _zla( 0, imax ) + 20 * _zla( 0, nsends_diag ) ), 8 )
  804.       t$304 = t$303
  801.       t$306 = t$303 + 4 * _zla( 0, 1 + maxnodes )
  800.       t$309 = t$303 + 8 * _zla( 0, 1 + maxnodes )
  794.       t$312 = t$303 + 8 * ( ( 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) ) + 7 ) / 8 )
  803.       t$316 = t$303 + 8 * ( ( 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) ) + 7 ) / 8 ) + 8 * _zla( 0, imax )
  806.       comm = 1140850688
  807.       if ( dimrecbuf < nf * imax * jmax ) then
  808.          dimrecbuf = nf * imax * jmax
  809.          $_allo_P0(0) = 0x1000000000001L
  809.          $_allo_P0(1) = loc( bufrec )
  809.          call __deallocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
  809.          bufrec%header%assoc = 0
  810.          bufrec%header%a_contig = 1
  810.          bufrec%dim_1%LB = 1
  810.          bufrec%dim_1%EX = _zla( 0, ( nf * imax * jmax ) )
  810.          bufrec%dim_1%SM = 1
  810.          $_allo_P1(0) = 0x1000000000001L
  810.          $_allo_P1(1) = loc( bufrec )
  810.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
  810.       endif
  813.       if ( dimsendbuf < ibmax * nf * jbmax ) then
  814.          dimsendbuf = ibmax * nf * jbmax
  815.          $_allo_P2(0) = 0x1000000000001L
  815.          $_allo_P2(1) = loc( bufsend )
  815.          call __deallocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
  815.          bufsend%header%assoc = 0
  816.          bufsend%header%a_contig = 1
  816.          bufsend%dim_1%LB = 1
  816.          bufsend%dim_1%EX = _zla( 0, ( ibmax * nf * jbmax ) )
  816.          bufsend%dim_1%SM = 1
  816.          $_allo_P3(0) = 0x1000000000001L
  816.          $_allo_P3(1) = loc( bufsend )
  816.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
  816.       endif
  819.       ib(0) = 1
  820.       $m_S1 = 0
  821.       $t_S4 = nrecs_diag
  821.       if ( nrecs_diag > 0 ) then
  821.          $I_L821_120 = 0
  821.          do
  822.             ic = 0
  823.             $t_S2 = (myrecspr_diag%base_addr)(2, 1 + $I_L821_120, 0)
  823.             if ( $t_S2 + -$m_S1 > 0 ) then
  823.                $I_L823_106 = 0
  823. !dir$ ivdep
  823.                do
  824.                   ic = ic + (myrecs_diag%base_addr)(2, $m_S1 + $I_L823_106 + 1, 0) + -(myrecs_diag%base_addr)(1, $m_S1 + $I_L823_106 + 1, 0) + 1
  825.                   $I_L823_106 = 1 + $I_L823_106
  823.                   if ( $I_L823_106 >= ( $t_S2 + -$m_S1 ) ) exit
  823.                enddo
  823.             endif
  826.             $m_S1 = $t_S2
  827.             ib(1 + $I_L821_120) = ib($I_L821_120) + nf * ic
  828.             t$803 = ib(1 + $I_L821_120) + -ib($I_L821_120)
  828.             call mpi_irecv( (bufrec%base_addr)(ib($I_L821_120), 0), t$803, 1275070495, (myrecspr_diag%base_addr)(1, 1 + $I_L821_120, 0), 88, comm, requestr(1 + $I_L821_120), ierr )
  830.             $I_L821_120 = 1 + $I_L821_120
  830.             if ( $I_L821_120 >= $t_S4 ) exit
  830.          enddo
  830.       endif
  831.       $m_S6 = 0
  832.       $ic_S14 = 1
  833.       $iold_S15 = 1
  834.       $t_S16 = nsends_diag
  834.       if ( nsends_diag > 0 ) then
  835.          if ( nf > 0 ) then
  834.             $I_L834_138 = 0
  834.             do
  836.                $SC_mysendspr_diag_I10 = (mysendspr_diag%base_addr)(2, 1 + $I_L834_138, 0)
  836.                if ( $SC_mysendspr_diag_I10 + -$m_S6 > 0 ) then
  835.                   $I_L835_130 = 0
  835.                   do
  836.                      $I_L836_122 = 0
  836.                      do
  837.                         $j_S12 = (mysends_diag%base_addr)(3, $m_S6 + $I_L836_122 + 1, 0)
  838.                         $t_S9 = (mysends_diag%base_addr)(1, $m_S6 + $I_L836_122 + 1, 0)
  838.                         $t_S10 = (mysends_diag%base_addr)(2, $m_S6 + $I_L836_122 + 1, 0)
  838.                         if ( $t_S10 + -$t_S9 >= 0 ) then
  838.                            $I_L838_108 = 0
  838. !dir$ ivdep
  838.                            do
  839.                               (bufsend%base_addr)($ic_S14 + $I_L838_108, 0) = gauss((ibperij%base_addr)($t_S9 + $I_L838_108, $j_S12, 0), 1 + $I_L835_130, (jbperij%base_addr)($t_S9 + $I_L838_108, $j_S12, 0))
  841.                               $I_L838_108 = 1 + $I_L838_108
  838.                               if ( $I_L838_108 >= $t_S10 + -$t_S9 + 1 ) exit
  838.                            enddo
  840.                            $ic_S14 = ( $t_S10 + $ic_S14 + -$t_S9 + 1 )
  840.                         endif
  842.                         $I_L836_122 = 1 + $I_L836_122
  841.                         if ( $I_L836_122 >= ( $SC_mysendspr_diag_I10 + -$m_S6 ) ) exit
  841.                      enddo
  843.                      $I_L835_130 = 1 + $I_L835_130
  842.                      if ( $I_L835_130 >= nf ) exit
  842.                   enddo
  842.                endif
  844.                t$803 = $ic_S14 + -$iold_S15
  844.                call mpi_isend( (bufsend%base_addr)($iold_S15, 0), t$803, 1275070495, (mysendspr_diag%base_addr)(1, 1 + $I_L834_138, 0), 88, comm, requests(1 + $I_L834_138), ierr )
  846.                $m_S6 = (mysendspr_diag%base_addr)(2, 1 + $I_L834_138, 0)
  847.                $iold_S15 = $ic_S14
  848.                $I_L834_138 = 1 + $I_L834_138
  846.                if ( $I_L834_138 >= $t_S16 ) exit
  846.             enddo
  843.             n = ( 1 + nf )
  843.          else
  834.             $I_L834_116 = 0
  834.             do
  844.                t$803 = 0
  844.                call mpi_isend( (bufsend%base_addr)(1, 0), t$803, 1275070495, (mysendspr_diag%base_addr)(1, 1 + $I_L834_116, 0), 88, comm, requests(1 + $I_L834_116), ierr )
  848.                $I_L834_116 = 1 + $I_L834_116
  846.                if ( $I_L834_116 >= $t_S16 ) exit
  846.             enddo
  835.             n = 1
  846.             $m_S6 = (mysendspr_diag%base_addr)(2, $t_S16, 0)
  846.          endif
  846.       endif
  849.       if ( nf > 0 ) then
  850.          if ( min( mylastlat, mylastlat_diag ) + -max( myfirstlat, myfirstlat_diag ) >= 0 ) then
  850.             $I_L850_132 = 0
  850.             do
  849.                $SCA_myfirstlon_I40 = (myfirstlon%base_addr)($I_L850_132 + max( myfirstlat, myfirstlat_diag ), 0)
  849.                $SCA_mylastlon_I41 = (mylastlon%base_addr)($I_L850_132 + max( myfirstlat, myfirstlat_diag ), 0)
  849.                $I_L849_124 = 0
  849.                do
  852.                   if ( $SCA_mylastlon_I41 + -$SCA_myfirstlon_I40 >= 0 ) then
  852.                      $I_L852_110 = 0
  852. !dir$ ivdep
  852.                      do
  853.                         gauss_out($SCA_myfirstlon_I40 + $I_L852_110, $I_L850_132 + max( myfirstlat, myfirstlat_diag ) + -myfirstlat_diag + 1, 1 + $I_L849_124) = gauss((ibperij%base_addr)($SCA_myfirstlon_I40 + $I_L852_110, $I_L850_132 + max( myfirstlat, myfirstlat_diag ), 0), 1 + $I_L849_124, (jbperij%base_addr)($SCA_myfirstlon_I40 + $I_L852_110, $I_L850_132 + max( myfirstlat, myfirstlat_diag ), 0))
  854.                         $I_L852_110 = 1 + $I_L852_110
  852.                         if ( $I_L852_110 >= $SCA_mylastlon_I41 + -$SCA_myfirstlon_I40 + 1 ) exit
  852.                      enddo
  852.                   endif
  856.                   $I_L849_124 = 1 + $I_L849_124
  854.                   if ( $I_L849_124 >= nf ) exit
  854.                enddo
  855.                $I_L850_132 = 1 + $I_L850_132
  855.                if ( $I_L850_132 >= min( mylastlat, mylastlat_diag ) + -max( myfirstlat, myfirstlat_diag ) + 1 ) exit
  855.             enddo
  855.          endif
  855.       endif
  857.       $t_S32 = nrecs_diag
  857.       if ( nrecs_diag > 0 ) then
  857.          $I_L857_140 = 0
  857.          do
  858.             call mpi_waitany( nrecs_diag, requestr(1), index, status(1), ierr )
  859.             $ks_S22 = status(3)
  860.             if ( nrecs_diag > 0 ) then
  860.                $I_L860_112 = 0
  860. !dir$ ivdep
  860.                do
  861.                   if ( (myrecspr_diag%base_addr)(1, 1 + $I_L860_112, 0) + -$ks_S22 == 0 ) then
  862.                      n = ( 1 + $I_L860_112 )
  863.                      $ic_S14 = ib($I_L860_112)
  864.                      $m_S6 = (myrecspr_diag%base_addr)(2, $I_L860_112, 0)
  864.                      goto 10
  864.                   endif
  867.                   $I_L860_112 = 1 + $I_L860_112
  866.                   if ( $I_L860_112 >= nrecs_diag ) exit
  866.                enddo
  866.             endif
  866.    10       continue
  868.             if ( nf > 0 ) then
  869.                $SC_myrecspr_diag_I37 = (myrecspr_diag%base_addr)(2, n, 0)
  869.                if ( $SC_myrecspr_diag_I37 + -$m_S6 > 0 ) then
  868.                   $I_L868_134 = 0
  868.                   do
  869.                      $I_L869_126 = 0
  869.                      do
  870.                         $j_S29 = (myrecs_diag%base_addr)(3, $m_S6 + $I_L869_126 + 1, 0) + -myfirstlat_diag + 1
  871.                         $t_S26 = (myrecs_diag%base_addr)(1, $m_S6 + $I_L869_126 + 1, 0)
  871.                         $t_S27 = (myrecs_diag%base_addr)(2, $m_S6 + $I_L869_126 + 1, 0)
  871.                         if ( $t_S27 + -$t_S26 >= 0 ) then
  871.                            $I_L871_114 = 0
  871. !dir$ ivdep
  871.                            do
  872.                               gauss_out($t_S26 + $I_L871_114, $j_S29, 1 + $I_L868_134) = (bufrec%base_addr)($ic_S14 + $I_L871_114, 0)
  874.                               $I_L871_114 = 1 + $I_L871_114
  871.                               if ( $I_L871_114 >= $t_S27 + -$t_S26 + 1 ) exit
  871.                            enddo
  873.                            $ic_S14 = ( $ic_S14 + $t_S27 + -$t_S26 + 1 )
  873.                         endif
  875.                         $I_L869_126 = 1 + $I_L869_126
  874.                         if ( $I_L869_126 >= ( $SC_myrecspr_diag_I37 + -$m_S6 ) ) exit
  874.                      enddo
  876.                      $I_L868_134 = 1 + $I_L868_134
  875.                      if ( $I_L868_134 >= nf ) exit
  875.                   enddo
  875.                endif
  875.             endif
  877.             $I_L857_140 = 1 + $I_L857_140
  876.             if ( $I_L857_140 >= $t_S32 ) exit
  876.          enddo
  876.       endif
  878.       if ( nsends_diag > 0 ) then
  878.          call mpi_waitall( nsends_diag, requests(1), stat(1, 1), ierr )
  878.       endif
  879.       if ( reducedgrid ) then
  880.          if ( nf > 0 ) then
  880.             $I_L880_136 = 0
  880.             do
  881.                $t_S34 = myfirstlat_diag
  881.                $t_S36 = mylastlat_diag
  881.                if ( mylastlat_diag + -myfirstlat_diag >= 0 ) then
  881.                   $I_L881_128 = 0
  881.                   do
  883.                      $F_A33 = (imaxperj%base_addr)($t_S34 + $I_L881_128, 0)
  883.                      if ( (imaxperj%base_addr)($t_S34 + $I_L881_128, 0) > 0 ) then
  883.                         $I_L883_118 = 0
  883. !dir$ ivdep
  883.                         do
  883.                            saux(1 + $I_L883_118) = gauss_out(1 + $I_L883_118, $t_S34 + $I_L881_128 + -myfirstlat_diag + 1, 1 + $I_L880_136)
  883.                            $I_L883_118 = 1 + $I_L883_118
  883.                            if ( $I_L883_118 >= $F_A33 ) exit
  883.                         enddo
  883.                      endif
  884.                      ipa$24 = 1
  884.                      call cycliclinear( (imaxperj%base_addr)($t_S34 + $I_L881_128, 0), imax, saux(1), gauss_out(1, $t_S34 + $I_L881_128 + -myfirstlat_diag + 1, 1 + $I_L880_136), ipa$24, imax )
  886.                      $I_L881_128 = 1 + $I_L881_128
  886.                      if ( $I_L881_128 >= $t_S36 + -$t_S34 + 1 ) exit
  886.                   enddo
  886.                endif
  887.                $I_L880_136 = 1 + $I_L880_136
  886.                if ( $I_L880_136 >= nf ) exit
  886.             enddo
  886.          endif
  886.       endif
  789.       _free( t$303 )
  890.       return
  890.       end
  890.       
  894.       
  894.       subroutine collect_spec( field, fieldglob, levs, levsg, nproc )
  894.       t$66 = ( 2 * mymnmax )
  894.       t$67 = levs
  900.       t$318 = _zla( 0, ( 2 * mymnmax ) )
  894.       t$319 = _zla( 0, ( 2 * mymnmax ) )
  900.       t$320 = _zla( 0, levs )
  894.       t$321 = _zla( 0, levs ) * _zla( 0, ( 2 * mymnmax ) )
  894.       t$68 = ( 2 * mnmax )
  894.       t$69 = levsg
  901.       t$322 = _zla( 0, ( 2 * mnmax ) )
  894.       t$323 = _zla( 0, ( 2 * mnmax ) )
  901.       t$324 = _zla( 0, levsg )
  894.       t$325 = _zla( 0, levsg ) * _zla( 0, ( 2 * mnmax ) )
  894.       t$70 = maxnodes
  894.       t$326 = 1 + maxnodes
  909.       t$327 = _zla( 0, 1 + maxnodes )
  909.       t$330 = 4 * _zla( 0, 1 + maxnodes )
  911.       t$331 = _zla( 0, maxnodes )
  894.       t$332 = 5 * _zla( 0, maxnodes )
  911.       t$334 = 4 * _zla( 0, 1 + maxnodes ) + 20 * _zla( 0, maxnodes )
  894.       t$328 = int( _alloc( 4 * _zla( 0, 1 + maxnodes ) + 20 * _zla( 0, maxnodes ) ), 8 )
  909.       t$329 = t$328
  911.       t$333 = t$328 + 4 * _zla( 0, 1 + maxnodes )
  916.       $Reduc_A34 = .false.
  916.       $F_A36 = first_proc_four%dim_1%EX
  916.       if ( first_proc_four%dim_1%EX > 0 ) then
  916.          $I_L916_62 = 0
  916. !dir$ ivdep
  916.          do
  916.             if ( nproc + -(first_proc_four%base_addr)(first_proc_four%dim_1%LB + $I_L916_62, 0) == 0 ) then
  916.                $Reduc_A34 = .true.
  916.                goto 10
  916.             endif
  916.             $I_L916_62 = 1 + $I_L916_62
  916.             if ( $I_L916_62 >= $F_A36 ) exit
  916.          enddo
  916.       endif
  916.    10 continue
  916.       if ( $Reduc_A34 == 0 ) then
  917.          $Unit_temp_O0 = nfprt
  917.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' nproc ', 0x800600000000L ), _iotype( nproc, 0x2000200000000L ) ) )
  918.          $Unit_temp_O1 = nfprt
  918.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$73,  _substr(t$72,1,83), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Collect_Spec)**', 0x800600000000L ) ) )
  919.           _substr(t$853,1,18) = '**(Collect_Spec)**'
  919.          call _stop(  _substr(t$853,1,18) )
  920.       else if ( levsg /= 1 ) then
  920.          goto 20
  920.       else if ( havesurf == 0 ) then
  921.          $Unit_temp_O2 = nfprt
  921.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' myid  ', 0x800600000000L ), _iotype( myid, 0x2000200000000L ) ) )
  922.          $Unit_temp_O3 = nfprt
  922.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, t$75,  _substr(t$74,1,59), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Collect_Spec)**', 0x800600000000L ) ) )
  923.           _substr(t$854,1,18) = '**(Collect_Spec)**'
  923.          call _stop(  _substr(t$854,1,18) )
  923.       else
  923.    20    continue
  924.          if ( levsg == 1 ) then
  924.             goto 30
  924.          else if ( kmax + -levsg /= 0 ) then
  925.             $Unit_temp_O4 = nfprt
  925.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' levsg ', 0x800600000000L ), _iotype( levsg, 0x2000200000000L ) ) )
  926.             $Unit_temp_O5 = nfprt
  926.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, t$77,  _substr(t$76,1,76), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Collect_Spec)**', 0x800600000000L ) ) )
  927.              _substr(t$855,1,18) = '**(Collect_Spec)**'
  927.             call _stop(  _substr(t$855,1,18) )
  927.          else
  927.    30       continue
  929.             comm = comm_four
  930.             $kdim_S2 = levs * mnmaxlocal * 2
  931.             if ( dimrecbuf < levs * mnmaxlocal * maxnodes_four * 2 ) then
  932.                dimrecbuf = levs * mnmaxlocal * maxnodes_four * 2
  933.                $_allo_P1(0) = 0x1000000000001L
  933.                $_allo_P1(1) = loc( bufrec )
  933.                call __deallocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
  933.                bufrec%header%assoc = 0
  934.                bufrec%header%a_contig = 1
  934.                bufrec%dim_1%LB = 1
  934.                bufrec%dim_1%EX = ( max( 0, levs * mnmaxlocal * maxnodes_four * 2 ) )
  934.                bufrec%dim_1%SM = 1
  934.                $_allo_P2(0) = 0x1000000000001L
  934.                $_allo_P2(1) = loc( bufrec )
  934.                call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
  934.             endif
  936.             if ( myid_four /= 0 ) then
  937.                t$856 = mymnmax * levs * 2
  937.                call mpi_isend( field(1, 1), t$856, 1275070495, 0, 95, comm, request, ierr )
  938.                call mpi_wait( request, status(1, 1), ierr )
  938.                goto 40
  938.             else
  940.                requestr(0) = 738197504
  941.                $t_S3 = -1 + maxnodes_four
  941.                if ( -1 + maxnodes_four > 0 ) then
  941.                   $I_L941_54 = 0
  941.                   do
  942.                      t$856 = levs * (mnsperproc%base_addr)(1 + $I_L941_54, 0) * 2
  943.                      t$860 = ( 1 + $I_L941_54 )
  942.                      call mpi_irecv( (bufrec%base_addr)($kdim_S2 + $kdim_S2 * $I_L941_54 + 1, 0), t$856, 1275070495, t$860, 95, comm, requestr(1 + $I_L941_54), ierr )
  944.                      $I_L941_54 = 1 + $I_L941_54
  944.                      if ( $I_L941_54 >= $t_S3 ) exit
  944.                   enddo
  944.                endif
  945.                $mnloc_S6 = 0
  946.                $mn_S7 = 0
  947.                $kl_S14 = -1 + myfirstlev
  948.                if ( mmax > 0 ) then
  948.                   $I_L948_72 = 0
  948.                   do
  950.                      if ( (nodehasm%base_addr)(1 + $I_L948_72, mygroup_four, 0) == 0 ) then
  951.                         if ( ( 2 * mmax + -2 * $I_L948_72 ) > 0 ) then
  951.                            $I_L951_68 = 0
  951.                            do
  952.                               $F_A37 = levs
  952.                               if ( levs > 0 ) then
  952.                                  $I_L952_64 = 0
  952. !dir$ ivdep
  952.                                  do
  952.                                     fieldglob($mn_S7 + $I_L951_68 + 1, myfirstlev + $I_L952_64) = field($mnloc_S6 + $I_L951_68 + 1, 1 + $I_L952_64)
  952.                                     $I_L952_64 = 1 + $I_L952_64
  952.                                     if ( $I_L952_64 >= $F_A37 ) exit
  952.                                  enddo
  952.                               endif
  953.                               $I_L951_68 = 1 + $I_L951_68
  951.                               if ( $I_L951_68 >= 2 * mmax + -2 * $I_L948_72 ) exit
  951.                            enddo
  951.                         endif
  954.                         $mnloc_S6 = ( $mnloc_S6 + 2 * mmax + -2 * $I_L948_72 )
  954.                      endif
  956.                      $mn_S7 = ( $mn_S7 + 2 * mmax + -2 * $I_L948_72 )
  957.                      $I_L948_72 = 1 + $I_L948_72
  955.                      if ( $I_L948_72 >= mmax ) exit
  955.                   enddo
  955.                endif
  958.                $t_S16 = -1 + maxnodes_four
  958.                if ( -1 + maxnodes_four > 0 ) then
  961.                   if ( levs > 0 ) then
  958.                      $I_L958_76 = 0
  958.                      do
  959.                         call mpi_waitany( maxnodes_four, requestr(0), index, statu(1), ierr )
  960.                         $j_S8 = statu(3)
  962.                         $SC_mnsperproc_I7 = (mnsperproc%base_addr)($j_S8, 0)
  964.                         if ( mmax > 0 ) then
  961.                            $I_L961_74 = 0
  961.                            do
  962.                               $mnloc_S12 = ( $SC_mnsperproc_I7 * $I_L961_74 * 2 )
  963.                               $mn_S13 = 0
  964.                               $I_L964_70 = 0
  964.                               do
  966.                                  if ( $j_S8 + -(nodehasm%base_addr)(1 + $I_L964_70, mygroup_four, 0) == 0 ) then
  967.                                     if ( ( 2 * mmax + -2 * $I_L964_70 ) > 0 ) then
  967.                                        $I_L967_56 = 0
  967. !dir$ ivdep
  967.                                        do
  968.                                           fieldglob($mn_S13 + $I_L967_56 + 1, $kl_S14 + $I_L961_74 + 1) = (bufrec%base_addr)($mnloc_S12 + $I_L967_56 + $kdim_S2 * $j_S8 + 1, 0)
  969.                                           $I_L967_56 = 1 + $I_L967_56
  967.                                           if ( $I_L967_56 >= 2 * mmax + -2 * $I_L964_70 ) exit
  967.                                        enddo
  967.                                     endif
  970.                                     $mnloc_S12 = ( $mnloc_S12 + 2 * mmax + -2 * $I_L964_70 )
  970.                                  endif
  972.                                  $mn_S13 = ( $mn_S13 + 2 * mmax + -2 * $I_L964_70 )
  973.                                  $I_L964_70 = 1 + $I_L964_70
  971.                                  if ( $I_L964_70 >= mmax ) exit
  971.                               enddo
  974.                               $I_L961_74 = 1 + $I_L961_74
  973.                               if ( $I_L961_74 >= levs ) exit
  973.                            enddo
  973.                         endif
  975.                         $I_L958_76 = 1 + $I_L958_76
  974.                         if ( $I_L958_76 >= $t_S16 ) exit
  974.                      enddo
  974.                   else
  958.                      $I_L958_60 = 0
  958.                      do
  959.                         call mpi_waitany( maxnodes_four, requestr(0), index, statu(1), ierr )
  975.                         $I_L958_60 = 1 + $I_L958_60
  974.                         if ( $I_L958_60 >= $t_S16 ) exit
  974.                      enddo
  974.                   endif
  974.                endif
  977.                if ( levsg == 1 .orelse. ngroups_four == 1 ) then
  894.                   _free( t$328 )
  894.                else
  980.                   comm = 1140850688
  981.                   if ( myid + -nproc /= 0 ) then
  982.                      t$856 = levs * mnmax * 2
  982.                      call mpi_isend( fieldglob(1, 1 + $kl_S14), t$856, 1275070495, nproc, 96, comm, request, ierr )
  984.                      call mpi_wait( request, status(1, 1), ierr )
  984.                   else
  986.                      $F_A38 = ngroups_four
  986.                      if ( ngroups_four > 0 ) then
  986.                         $I_L986_66 = 0
  986. !dir$ ivdep
  986.                         do
  986.                            requestr(1 + $I_L986_66) = 738197504
  986.                            $I_L986_66 = 1 + $I_L986_66
  986.                            if ( $I_L986_66 >= $F_A38 ) exit
  986.                         enddo
  986.                      endif
  987.                      $t_S20 = ngroups_four
  987.                      if ( ngroups_four > 0 ) then
  987.                         $I_L987_58 = 0
  987.                         do
  988.                            kp = (first_proc_four%base_addr)(1 + $I_L987_58, 0)
  989.                            $kl_S19 = (kfirst_four%base_addr)(kp, 0)
  990.                            $ll_S18 = (nlevperg_four%base_addr)(1 + $I_L987_58, 0)
  991.                            if ( kp + -nproc /= 0 ) then
  992.                               t$860 = mnmax * $ll_S18 * 2
  992.                               call mpi_irecv( fieldglob(1, $kl_S19), t$860, 1275070495, kp, 96, comm, requestr(1 + $I_L987_58), ierr )
  992.                            endif
  995.                            $I_L987_58 = 1 + $I_L987_58
  994.                            if ( $I_L987_58 >= $t_S20 ) exit
  994.                         enddo
  994.                      endif
  996.                      call mpi_waitall( ngroups_four, requestr(1), status(1, 1), ierr )
  996.                   endif
  996.    40             continue
  894.                   _free( t$328 )
  894.                endif
  894.             endif
  894.          endif
  894.       endif
 1000.       return
 1000.       end
 1000.       
 1003.       
 1003.       subroutine spread_surf_spec( field )
 1003.       t$78 = ( 2 * mymnmax )
 1005.       t$335 = _zla( 0, ( 2 * mymnmax ) )
 1003.       t$79 = maxnodes
 1009.       t$336 = _zla( 0, maxnodes )
 1009.       t$339 = 4 * _zla( 0, maxnodes )
 1003.       t$340 = 1 + maxnodes
 1012.       t$341 = _zla( 0, 1 + maxnodes )
 1012.       t$343 = 4 * _zla( 0, maxnodes ) + 4 * _zla( 0, 1 + maxnodes )
 1003.       t$344 = 5 * _zla( 0, maxnodes )
 1013.       t$346 = 4 * _zla( 0, 1 + maxnodes ) + 24 * _zla( 0, maxnodes )
 1003.       t$337 = int( _alloc( 4 * _zla( 0, 1 + maxnodes ) + 24 * _zla( 0, maxnodes ) ), 8 )
 1009.       t$338 = t$337
 1012.       t$342 = t$337 + 4 * _zla( 0, maxnodes )
 1013.       t$345 = t$337 + 4 * _zla( 0, maxnodes ) + 4 * _zla( 0, 1 + maxnodes )
 1017.       if ( ngroups_four == 1 ) then
 1003.          _free( t$337 )
 1003.       else
 1018.          comm = 1140850688
 1019.          $F_A33 = ( 1 + maxnodes )
 1019.          if ( maxnodes >= 0 ) then
 1019.             $I_L1019_52 = 0
 1019. !dir$ ivdep
 1019.             do
 1019.                requestr($I_L1019_52) = 738197504
 1019.                $I_L1019_52 = 1 + $I_L1019_52
 1019.                if ( $I_L1019_52 >= $F_A33 ) exit
 1019.             enddo
 1019.          endif
 1020.          ini(1) = 0
 1021.          if ( ncomm_spread > 0 ) then
 1021.             $ini_WR0_R0 = 0
 1021.             $I_L1021_46 = 0
 1021. !dir$ unroll 4
 1021.             do
 1022.                $ini_WR0_R0 = $ini_WR0_R0 + (comm_spread%base_addr)(1 + $I_L1021_46, 2, 0)
 1022.                ini(2 + $I_L1021_46) = $ini_WR0_R0
 1023.                $I_L1021_46 = 1 + $I_L1021_46
 1021.                if ( $I_L1021_46 >= ncomm_spread ) exit
 1021.             enddo
 1021.          endif
 1024.          if ( mygroup_four == 1 ) then
 1025.             if ( -2 + ngroups_four >= 0 ) then
 1027.                if ( mymmax > 0 ) then
 1025.                   $I_L1025_62 = 0
 1025.                   do
 1026.                      $mng_S4 = 0
 1027.                      $I_L1027_60 = 0
 1027.                      do
 1028.                         $len_S3 = 2 * mmax + -2 * (lm2m%base_addr)(1 + $I_L1027_60, 0) + 2
 1029.                         $np_S5 = (ms_spread%base_addr)(1 + $I_L1027_60, 2 + $I_L1025_62, 0)
 1030.                         $F_A34 = $len_S3
 1030.                         if ( $len_S3 > 0 ) then
 1030.                            $SCA_ini_I16 = ini($np_S5)
 1030.                            $I_L1030_54 = 0
 1030. !dir$ ivdep
 1030.                            do
 1030.                               (bufsend%base_addr)($SCA_ini_I16 + $I_L1030_54 + 1, 0) = field($mng_S4 + $I_L1030_54 + 1)
 1030.                               $I_L1030_54 = 1 + $I_L1030_54
 1030.                               if ( $I_L1030_54 >= $F_A34 ) exit
 1030.                            enddo
 1030.                         endif
 1031.                         ini($np_S5) = $len_S3 + ini($np_S5)
 1032.                         $mng_S4 = $len_S3 + $mng_S4
 1033.                         $I_L1027_60 = 1 + $I_L1027_60
 1027.                         if ( $I_L1027_60 >= mymmax ) exit
 1027.                      enddo
 1034.                      $I_L1025_62 = 1 + $I_L1025_62
 1033.                      if ( $I_L1025_62 >= -1 + ngroups_four ) exit
 1033.                   enddo
 1033.                endif
 1033.             endif
 1035.             ini(1) = 1
 1036.             $t_S7 = ncomm_spread
 1036.             if ( ncomm_spread > 0 ) then
 1036.                $I_L1036_50 = 0
 1036.                do
 1037.                   ini(2 + $I_L1036_50) = ini(1 + $I_L1036_50) + (comm_spread%base_addr)(1 + $I_L1036_50, 2, 0)
 1038.                   call mpi_isend( (bufsend%base_addr)(ini(1 + $I_L1036_50), 0), (comm_spread%base_addr)(1 + $I_L1036_50, 2, 0), 1275070495, (comm_spread%base_addr)(1 + $I_L1036_50, 1, 0), 75, comm, requestr(1 + $I_L1036_50), ierr )
 1039.                   $I_L1036_50 = 1 + $I_L1036_50
 1039.                   if ( $I_L1036_50 >= $t_S7 ) exit
 1039.                enddo
 1039.             endif
 1040.             call mpi_waitall( ncomm_spread, requestr(1), status(1, 1), ierr )
 1040.          else
 1042.             $t_S9 = ncomm_spread
 1042.             if ( ncomm_spread > 0 ) then
 1042.                $I_L1042_48 = 0
 1042.                do
 1043.                   call mpi_irecv( (bufrec%base_addr)(1 + ini(1 + $I_L1042_48), 0), (comm_spread%base_addr)(1 + $I_L1042_48, 2, 0), 1275070495, (comm_spread%base_addr)(1 + $I_L1042_48, 1, 0), 75, comm, requestr(1 + $I_L1042_48), ierr )
 1045.                   $I_L1042_48 = 1 + $I_L1042_48
 1045.                   if ( $I_L1042_48 >= $t_S9 ) exit
 1045.                enddo
 1045.             endif
 1046.             call mpi_waitall( ncomm_spread, requestr(1), status(1, 1), ierr )
 1047.             $mng_S13 = 0
 1048.             if ( mymmax > 0 ) then
 1048.                $I_L1048_58 = 0
 1048.                do
 1049.                   $len_S12 = 2 * mmax + -2 * (lm2m%base_addr)(1 + $I_L1048_58, 0) + 2
 1050.                   $np_S11 = (ms_spread%base_addr)(1 + $I_L1048_58, 1, 0)
 1051.                   $F_A35 = $len_S12
 1051.                   if ( $len_S12 > 0 ) then
 1051.                      $SCA_ini_I17 = ini($np_S11)
 1051.                      $I_L1051_56 = 0
 1051. !dir$ ivdep
 1051.                      do
 1051.                         field($mng_S13 + $I_L1051_56 + 1) = (bufrec%base_addr)($SCA_ini_I17 + $I_L1051_56 + 1, 0)
 1051.                         $I_L1051_56 = 1 + $I_L1051_56
 1051.                         if ( $I_L1051_56 >= $F_A35 ) exit
 1051.                      enddo
 1051.                   endif
 1052.                   ini($np_S11) = $len_S12 + ini($np_S11)
 1053.                   $mng_S13 = $len_S12 + $mng_S13
 1054.                   $I_L1048_58 = 1 + $I_L1048_58
 1048.                   if ( $I_L1048_58 >= mymmax ) exit
 1048.                enddo
 1048.             endif
 1048.          endif
 1003.          _free( t$337 )
 1003.       endif
 1057.       return
 1057.       end
 1057.       
 1061.       
 1061.       subroutine collect_spec_ext( field, fieldglob, levs, levsg, nproc )
 1061.       t$81 = ( 2 * mymnextmax )
 1061.       t$82 = levs
 1066.       t$347 = _zla( 0, ( 2 * mymnextmax ) )
 1061.       t$348 = _zla( 0, ( 2 * mymnextmax ) )
 1066.       t$349 = _zla( 0, levs )
 1061.       t$350 = _zla( 0, levs ) * _zla( 0, ( 2 * mymnextmax ) )
 1061.       t$83 = ( 2 * mnextmax )
 1061.       t$84 = levsg
 1067.       t$351 = _zla( 0, ( 2 * mnextmax ) )
 1061.       t$352 = _zla( 0, ( 2 * mnextmax ) )
 1067.       t$353 = _zla( 0, levsg )
 1061.       t$354 = _zla( 0, levsg ) * _zla( 0, ( 2 * mnextmax ) )
 1061.       t$85 = maxnodes
 1061.       t$355 = 1 + maxnodes
 1075.       t$356 = _zla( 0, 1 + maxnodes )
 1075.       t$359 = 4 * _zla( 0, 1 + maxnodes )
 1077.       t$360 = _zla( 0, maxnodes )
 1061.       t$361 = 5 * _zla( 0, maxnodes )
 1077.       t$363 = 4 * _zla( 0, 1 + maxnodes ) + 20 * _zla( 0, maxnodes )
 1061.       t$357 = int( _alloc( 4 * _zla( 0, 1 + maxnodes ) + 20 * _zla( 0, maxnodes ) ), 8 )
 1075.       t$358 = t$357
 1077.       t$362 = t$357 + 4 * _zla( 0, 1 + maxnodes )
 1082.       $Reduc_A34 = .false.
 1082.       $F_A36 = first_proc_four%dim_1%EX
 1082.       if ( first_proc_four%dim_1%EX > 0 ) then
 1082.          $I_L1082_62 = 0
 1082. !dir$ ivdep
 1082.          do
 1082.             if ( nproc + -(first_proc_four%base_addr)(first_proc_four%dim_1%LB + $I_L1082_62, 0) == 0 ) then
 1082.                $Reduc_A34 = .true.
 1082.                goto 10
 1082.             endif
 1082.             $I_L1082_62 = 1 + $I_L1082_62
 1082.             if ( $I_L1082_62 >= $F_A36 ) exit
 1082.          enddo
 1082.       endif
 1082.    10 continue
 1082.       if ( $Reduc_A34 == 0 ) then
 1083.          $Unit_temp_O0 = nfprt
 1083.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' nproc ', 0x800600000000L ), _iotype( nproc, 0x2000200000000L ) ) )
 1084.          $Unit_temp_O1 = nfprt
 1084.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$88,  _substr(t$87,1,83), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Collect_Spec_Ext)**', 0x800600000000L ) ) )
 1085.           _substr(t$900,1,22) = '**(Collect_Spec_Ext)**'
 1085.          call _stop(  _substr(t$900,1,22) )
 1086.       else if ( levs /= 1 ) then
 1086.          goto 20
 1086.       else if ( havesurf == 0 ) then
 1087.          $Unit_temp_O2 = nfprt
 1087.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' myid  ', 0x800600000000L ), _iotype( myid, 0x2000200000000L ) ) )
 1088.          $Unit_temp_O3 = nfprt
 1088.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, t$90,  _substr(t$89,1,63), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Collect_Spec_Ext)**', 0x800600000000L ) ) )
 1089.           _substr(t$901,1,22) = '**(Collect_Spec_Ext)**'
 1089.          call _stop(  _substr(t$901,1,22) )
 1089.       else
 1089.    20    continue
 1090.          if ( levsg == 1 ) then
 1090.             goto 30
 1090.          else if ( kmax + -levsg /= 0 ) then
 1091.             $Unit_temp_O4 = nfprt
 1091.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' levsg ', 0x800600000000L ), _iotype( levsg, 0x2000200000000L ) ) )
 1092.             $Unit_temp_O5 = nfprt
 1092.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, t$92,  _substr(t$91,1,80), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Collect_Spec_Ext)**', 0x800600000000L ) ) )
 1093.              _substr(t$902,1,22) = '**(Collect_Spec_Ext)**'
 1093.             call _stop(  _substr(t$902,1,22) )
 1093.          else
 1093.    30       continue
 1095.             comm = comm_four
 1096.             $kdim_S2 = levs * mnextmaxlocal * 2
 1097.             if ( dimrecbuf < levs * mnextmaxlocal * maxnodes_four * 2 ) then
 1098.                dimrecbuf = levs * mnextmaxlocal * maxnodes_four * 2
 1099.                $_allo_P1(0) = 0x1000000000001L
 1099.                $_allo_P1(1) = loc( bufrec )
 1099.                call __deallocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 1099.                bufrec%header%assoc = 0
 1100.                bufrec%header%a_contig = 1
 1100.                bufrec%dim_1%LB = 1
 1100.                bufrec%dim_1%EX = ( max( 0, levs * mnextmaxlocal * maxnodes_four * 2 ) )
 1100.                bufrec%dim_1%SM = 1
 1100.                $_allo_P2(0) = 0x1000000000001L
 1100.                $_allo_P2(1) = loc( bufrec )
 1100.                call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 1100.             endif
 1102.             if ( myid_four /= 0 ) then
 1103.                t$903 = mymnextmax * levs * 2
 1103.                call mpi_isend( field(1, 1), t$903, 1275070495, 0, 95, comm, request, ierr )
 1105.                call mpi_wait( request, status(1, 1), ierr )
 1105.                goto 40
 1105.             else
 1107.                requestr(0) = 738197504
 1108.                $t_S3 = -1 + maxnodes_four
 1108.                if ( -1 + maxnodes_four > 0 ) then
 1108.                   $I_L1108_54 = 0
 1108.                   do
 1109.                      t$903 = levs * (mnsextperproc%base_addr)(1 + $I_L1108_54, 0) * 2
 1110.                      t$907 = ( 1 + $I_L1108_54 )
 1109.                      call mpi_irecv( (bufrec%base_addr)($kdim_S2 + $kdim_S2 * $I_L1108_54 + 1, 0), t$903, 1275070495, t$907, 95, comm, requestr(1 + $I_L1108_54), ierr )
 1111.                      $I_L1108_54 = 1 + $I_L1108_54
 1111.                      if ( $I_L1108_54 >= $t_S3 ) exit
 1111.                   enddo
 1111.                endif
 1112.                $mnloc_S6 = 0
 1113.                $mn_S7 = 0
 1114.                $kl_S14 = -1 + myfirstlev
 1115.                if ( mmax > 0 ) then
 1115.                   $I_L1115_72 = 0
 1115.                   do
 1117.                      if ( (nodehasm%base_addr)(1 + $I_L1115_72, mygroup_four, 0) == 0 ) then
 1118.                         if ( ( 2 * mmax + -2 * $I_L1115_72 + 2 ) > 0 ) then
 1118.                            $I_L1118_68 = 0
 1118.                            do
 1119.                               $F_A37 = levs
 1119.                               if ( levs > 0 ) then
 1119.                                  $I_L1119_64 = 0
 1119. !dir$ ivdep
 1119.                                  do
 1119.                                     fieldglob($mn_S7 + $I_L1118_68 + 1, myfirstlev + $I_L1119_64) = field($mnloc_S6 + $I_L1118_68 + 1, 1 + $I_L1119_64)
 1119.                                     $I_L1119_64 = 1 + $I_L1119_64
 1119.                                     if ( $I_L1119_64 >= $F_A37 ) exit
 1119.                                  enddo
 1119.                               endif
 1120.                               $I_L1118_68 = 1 + $I_L1118_68
 1118.                               if ( $I_L1118_68 >= 2 * mmax + -2 * $I_L1115_72 + 2 ) exit
 1118.                            enddo
 1118.                         endif
 1121.                         $mnloc_S6 = ( $mnloc_S6 + 2 * mmax + -2 * $I_L1115_72 + 2 )
 1121.                      endif
 1123.                      $mn_S7 = ( $mn_S7 + 2 * mmax + -2 * $I_L1115_72 + 2 )
 1124.                      $I_L1115_72 = 1 + $I_L1115_72
 1122.                      if ( $I_L1115_72 >= mmax ) exit
 1122.                   enddo
 1122.                endif
 1125.                $t_S16 = -1 + maxnodes_four
 1125.                if ( -1 + maxnodes_four > 0 ) then
 1128.                   if ( levs > 0 ) then
 1125.                      $I_L1125_76 = 0
 1125.                      do
 1126.                         call mpi_waitany( maxnodes_four, requestr(0), index, statu(1), ierr )
 1127.                         $j_S8 = statu(3)
 1129.                         $SC_mnsextperproc_I7 = (mnsextperproc%base_addr)($j_S8, 0)
 1131.                         if ( mmax > 0 ) then
 1128.                            $I_L1128_74 = 0
 1128.                            do
 1129.                               $mnloc_S12 = ( $SC_mnsextperproc_I7 * $I_L1128_74 * 2 )
 1130.                               $mn_S13 = 0
 1131.                               $I_L1131_70 = 0
 1131.                               do
 1133.                                  if ( $j_S8 + -(nodehasm%base_addr)(1 + $I_L1131_70, mygroup_four, 0) == 0 ) then
 1134.                                     if ( ( 2 * mmax + -2 * $I_L1131_70 + 2 ) > 0 ) then
 1134.                                        $I_L1134_56 = 0
 1134. !dir$ ivdep
 1134.                                        do
 1135.                                           fieldglob($mn_S13 + $I_L1134_56 + 1, $kl_S14 + $I_L1128_74 + 1) = (bufrec%base_addr)($mnloc_S12 + $I_L1134_56 + $kdim_S2 * $j_S8 + 1, 0)
 1136.                                           $I_L1134_56 = 1 + $I_L1134_56
 1134.                                           if ( $I_L1134_56 >= 2 * mmax + -2 * $I_L1131_70 + 2 ) exit
 1134.                                        enddo
 1134.                                     endif
 1137.                                     $mnloc_S12 = ( $mnloc_S12 + 2 * mmax + -2 * $I_L1131_70 + 2 )
 1137.                                  endif
 1139.                                  $mn_S13 = ( $mn_S13 + 2 * mmax + -2 * $I_L1131_70 + 2 )
 1140.                                  $I_L1131_70 = 1 + $I_L1131_70
 1138.                                  if ( $I_L1131_70 >= mmax ) exit
 1138.                               enddo
 1141.                               $I_L1128_74 = 1 + $I_L1128_74
 1140.                               if ( $I_L1128_74 >= levs ) exit
 1140.                            enddo
 1140.                         endif
 1142.                         $I_L1125_76 = 1 + $I_L1125_76
 1141.                         if ( $I_L1125_76 >= $t_S16 ) exit
 1141.                      enddo
 1141.                   else
 1125.                      $I_L1125_60 = 0
 1125.                      do
 1126.                         call mpi_waitany( maxnodes_four, requestr(0), index, statu(1), ierr )
 1142.                         $I_L1125_60 = 1 + $I_L1125_60
 1141.                         if ( $I_L1125_60 >= $t_S16 ) exit
 1141.                      enddo
 1141.                   endif
 1141.                endif
 1144.                if ( levsg == 1 .orelse. ngroups_four == 1 ) then
 1061.                   _free( t$357 )
 1061.                else
 1147.                   comm = 1140850688
 1148.                   if ( myid + -nproc /= 0 ) then
 1149.                      t$903 = levs * mnextmax * 2
 1149.                      call mpi_isend( fieldglob(1, 1 + $kl_S14), t$903, 1275070495, nproc, 96, comm, request, ierr )
 1151.                      call mpi_wait( request, status(1, 1), ierr )
 1151.                   else
 1153.                      $F_A38 = ngroups_four
 1153.                      if ( ngroups_four > 0 ) then
 1153.                         $I_L1153_66 = 0
 1153. !dir$ ivdep
 1153.                         do
 1153.                            requestr(1 + $I_L1153_66) = 738197504
 1153.                            $I_L1153_66 = 1 + $I_L1153_66
 1153.                            if ( $I_L1153_66 >= $F_A38 ) exit
 1153.                         enddo
 1153.                      endif
 1154.                      $t_S20 = ngroups_four
 1154.                      if ( ngroups_four > 0 ) then
 1154.                         $I_L1154_58 = 0
 1154.                         do
 1155.                            kp = (first_proc_four%base_addr)(1 + $I_L1154_58, 0)
 1156.                            $kl_S19 = (kfirst_four%base_addr)(kp, 0)
 1157.                            $ll_S18 = (nlevperg_four%base_addr)(1 + $I_L1154_58, 0)
 1158.                            if ( kp + -nproc /= 0 ) then
 1159.                               t$907 = mnextmax * $ll_S18 * 2
 1159.                               call mpi_irecv( fieldglob(1, $kl_S19), t$907, 1275070495, kp, 96, comm, requestr(1 + $I_L1154_58), ierr )
 1159.                            endif
 1162.                            $I_L1154_58 = 1 + $I_L1154_58
 1161.                            if ( $I_L1154_58 >= $t_S20 ) exit
 1161.                         enddo
 1161.                      endif
 1163.                      call mpi_waitall( ngroups_four, requestr(1), status(1, 1), ierr )
 1163.                   endif
 1163.    40             continue
 1061.                   _free( t$357 )
 1061.                endif
 1061.             endif
 1061.          endif
 1061.       endif
 1167.       return
 1167.       end
 1167.       
 1169.       
 1169.       subroutine exchange_ftog( nrecs_f, nrecs_g )
 1169.       t$93 = ( -1 + maxnodes )
 1169.       t$364 = maxnodes
 1177.       t$365 = _zla( 0, maxnodes )
 1177.       t$368 = 4 * _zla( 0, maxnodes )
 1178.       t$370 = 8 * _zla( 0, maxnodes )
 1179.       t$372 = 12 * _zla( 0, maxnodes )
 1169.       t$95 = maxnodes
 1180.       t$373 = _zla( 0, maxnodes )
 1169.       t$374 = 5 * _zla( 0, maxnodes )
 1180.       t$376 = 12 * _zla( 0, maxnodes ) + 20 * _zla( 0, maxnodes )
 1169.       t$366 = int( _alloc( 12 * _zla( 0, maxnodes ) + 20 * _zla( 0, maxnodes ) ), 8 )
 1177.       t$367 = t$366
 1178.       t$369 = t$366 + 4 * _zla( 0, maxnodes )
 1179.       t$371 = t$366 + 8 * _zla( 0, maxnodes )
 1180.       t$375 = t$366 + 12 * _zla( 0, maxnodes )
 1182.       comm = 1140850688
 1183.       requestr(myid) = 738197504
 1184.       requests(myid) = 738197504
 1185.       (messproc_g%base_addr)(2, 0, 0) = 0
 1186.       $t_S1 = -1 + maxnodes
 1186.       if ( maxnodes > 0 ) then
 1186.          $I_L1186_30 = 0
 1186.          do
 1187.             if ( $I_L1186_30 + -myid /= 0 ) then
 1188.                t$932 = $I_L1186_30
 1188.                call mpi_irecv( (messproc_g%base_addr)(2, 1 + $I_L1186_30, 0), 1, 1275069467, t$932, 18, comm, requestr($I_L1186_30), ierr )
 1188.             else
 1191.                (messproc_g%base_addr)(2, 1 + $I_L1186_30, 0) = 0
 1191.             endif
 1193.             $I_L1186_30 = 1 + $I_L1186_30
 1192.             if ( $I_L1186_30 >= 1 + $t_S1 ) exit
 1192.          enddo
 1192.       endif
 1194.       $m_S4 = 0
 1195.       $k_S3 = 1
 1196.       $t_S5 = -1 + maxnodes
 1196.       if ( maxnodes > 0 ) then
 1196.          $I_L1196_32 = 0
 1196.          do
 1197.             if ( $I_L1196_32 + -myid /= 0 ) then
 1198.                if ( $k_S3 > nrecs_f ) then
 1198.                   goto 10
 1198.                else if ( (messproc_f%base_addr)(1, $k_S3, 0) + -$I_L1196_32 == 0 ) then
 1199.                   ns($I_L1196_32) = (messproc_f%base_addr)(2, $k_S3, 0) + -$m_S4
 1200.                   $m_S4 = (messproc_f%base_addr)(2, $k_S3, 0)
 1201.                   $k_S3 = 1 + $k_S3
 1201.                else
 1201.    10             continue
 1203.                   ns($I_L1196_32) = 0
 1203.                endif
 1205.                t$932 = $I_L1196_32
 1205.                call mpi_isend( ns($I_L1196_32), 1, 1275069467, t$932, 18, comm, requests($I_L1196_32), ierr )
 1205.             endif
 1207.             $I_L1196_32 = 1 + $I_L1196_32
 1206.             if ( $I_L1196_32 >= 1 + $t_S5 ) exit
 1206.          enddo
 1206.       endif
 1208.       call mpi_waitall( maxnodes, requestr(0), status(1, 1), ierr )
 1209.       call mpi_waitall( maxnodes, requests(0), status(1, 1), ierr )
 1210.       $k_S7 = 0
 1211.       m = 0
 1212.       if ( maxnodes > 0 ) then
 1212.          $I_L1212_34 = 0
 1212. !dir$ unroll 4
 1212.          do
 1213.             if ( (messproc_g%base_addr)(2, 1 + $I_L1212_34, 0) /= 0 ) then
 1214.                $k_S7 = 1 + $k_S7
 1215.                m = m + (messproc_g%base_addr)(2, 1 + $I_L1212_34, 0)
 1216.                (messproc_g%base_addr)(2, $k_S7, 0) = m
 1217.                (messproc_g%base_addr)(1, $k_S7, 0) = $I_L1212_34
 1217.             endif
 1219.             $I_L1212_34 = 1 + $I_L1212_34
 1218.             if ( $I_L1212_34 >= maxnodes ) exit
 1218.          enddo
 1218.       endif
 1220.       nrecs_g = $k_S7
 1221.       $m_S8 = 0
 1222.       if ( $k_S7 > 0 ) then
 1222.          $I_L1222_36 = 0
 1222.          do
 1223.             ns(1 + $I_L1222_36) = (messproc_g%base_addr)(2, 1 + $I_L1222_36, 0) + -$m_S8
 1224.             t$932 = 4 * ns(1 + $I_L1222_36)
 1224.             call mpi_irecv( (messages_g%base_addr)(1, 1 + $m_S8, 0), t$932, 1275069467, (messproc_g%base_addr)(1, 1 + $I_L1222_36, 0), 19, comm, requestr(1 + $I_L1222_36), ierr )
 1226.             $m_S8 = (messproc_g%base_addr)(2, 1 + $I_L1222_36, 0)
 1227.             $I_L1222_36 = 1 + $I_L1222_36
 1226.             if ( $I_L1222_36 >= $k_S7 ) exit
 1226.          enddo
 1226.       endif
 1228.       $m_S10 = 0
 1229.       if ( nrecs_f > 0 ) then
 1229.          $I_L1229_38 = 0
 1229.          do
 1230.             ns(1 + $I_L1229_38) = (messproc_f%base_addr)(2, 1 + $I_L1229_38, 0) + -$m_S10
 1231.             t$932 = 4 * ns(1 + $I_L1229_38)
 1231.             call mpi_isend( (messages_f%base_addr)(1, 1 + $m_S10, 0), t$932, 1275069467, (messproc_f%base_addr)(1, 1 + $I_L1229_38, 0), 19, comm, requests(1 + $I_L1229_38), ierr )
 1233.             $m_S10 = (messproc_f%base_addr)(2, 1 + $I_L1229_38, 0)
 1234.             $I_L1229_38 = 1 + $I_L1229_38
 1233.             if ( $I_L1229_38 >= nrecs_f ) exit
 1233.          enddo
 1233.       endif
 1235.       if ( $k_S7 > 0 ) then
 1235.          call mpi_waitall( nrecs_g, requestr(1), status(1, 1), ierr )
 1235.       endif
 1236.       if ( nrecs_f > 0 ) then
 1236.          call mpi_waitall( nrecs_f, requests(1), status(1, 1), ierr )
 1236.       endif
 1169.       _free( t$366 )
 1238.       return
 1238.       end
 1238.       
 1240.       
 1240.       subroutine exchange_diag( nrecs_diag, nsends_diag )
 1240.       t$96 = maxnodes
 1240.       t$377 = 1 + maxnodes
 1248.       t$378 = _zla( 0, 1 + maxnodes )
 1248.       t$381 = 4 * _zla( 0, 1 + maxnodes )
 1240.       t$97 = ( -1 + maxnodes )
 1240.       t$382 = maxnodes
 1249.       t$383 = _zla( 0, maxnodes )
 1249.       t$385 = 4 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, maxnodes )
 1250.       t$387 = 4 * _zla( 0, 1 + maxnodes ) + 8 * _zla( 0, maxnodes )
 1251.       t$388 = _zla( 0, maxnodes )
 1240.       t$389 = 5 * _zla( 0, maxnodes )
 1251.       t$391 = 4 * _zla( 0, 1 + maxnodes ) + 8 * _zla( 0, maxnodes ) + 20 * _zla( 0, maxnodes )
 1240.       t$379 = int( _alloc( 4 * _zla( 0, 1 + maxnodes ) + 8 * _zla( 0, maxnodes ) + 20 * _zla( 0, maxnodes ) ), 8 )
 1248.       t$380 = t$379
 1249.       t$384 = t$379 + 4 * _zla( 0, 1 + maxnodes )
 1250.       t$386 = t$379 + 4 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, maxnodes )
 1251.       t$390 = t$379 + 4 * _zla( 0, 1 + maxnodes ) + 8 * _zla( 0, maxnodes )
 1253.       comm = 1140850688
 1254.       requestr(myid) = 738197504
 1255.       requests(myid) = 738197504
 1256.       (mysendspr_diag%base_addr)(2, 0, 0) = 0
 1257.       $t_S1 = -1 + maxnodes
 1257.       if ( maxnodes > 0 ) then
 1257.          $I_L1257_30 = 0
 1257.          do
 1258.             if ( $I_L1257_30 + -myid /= 0 ) then
 1259.                t$948 = $I_L1257_30
 1259.                call mpi_irecv( (mysendspr_diag%base_addr)(2, 1 + $I_L1257_30, 0), 1, 1275069467, t$948, 18, comm, requestr($I_L1257_30), ierr )
 1259.             else
 1262.                (mysendspr_diag%base_addr)(2, 1 + $I_L1257_30, 0) = 0
 1262.             endif
 1264.             $I_L1257_30 = 1 + $I_L1257_30
 1263.             if ( $I_L1257_30 >= 1 + $t_S1 ) exit
 1263.          enddo
 1263.       endif
 1265.       $m_S4 = 0
 1266.       $k_S3 = 1
 1267.       $t_S5 = -1 + maxnodes
 1267.       if ( maxnodes > 0 ) then
 1267.          $I_L1267_32 = 0
 1267.          do
 1268.             if ( $I_L1267_32 + -myid /= 0 ) then
 1269.                if ( $k_S3 > nrecs_diag ) then
 1269.                   goto 10
 1269.                else if ( (myrecspr_diag%base_addr)(1, $k_S3, 0) + -$I_L1267_32 == 0 ) then
 1270.                   ns($I_L1267_32) = (myrecspr_diag%base_addr)(2, $k_S3, 0) + -$m_S4
 1271.                   $m_S4 = (myrecspr_diag%base_addr)(2, $k_S3, 0)
 1272.                   $k_S3 = 1 + $k_S3
 1272.                else
 1272.    10             continue
 1274.                   ns($I_L1267_32) = 0
 1274.                endif
 1276.                t$948 = $I_L1267_32
 1276.                call mpi_isend( ns($I_L1267_32), 1, 1275069467, t$948, 18, comm, requests($I_L1267_32), ierr )
 1276.             endif
 1278.             $I_L1267_32 = 1 + $I_L1267_32
 1277.             if ( $I_L1267_32 >= 1 + $t_S5 ) exit
 1277.          enddo
 1277.       endif
 1279.       call mpi_waitall( maxnodes, requestr(0), status(1, 1), ierr )
 1280.       call mpi_waitall( maxnodes, requests(0), status(1, 1), ierr )
 1281.       $k_S7 = 0
 1282.       m = 0
 1283.       if ( maxnodes > 0 ) then
 1283.          $I_L1283_34 = 0
 1283. !dir$ unroll 4
 1283.          do
 1284.             if ( (mysendspr_diag%base_addr)(2, 1 + $I_L1283_34, 0) /= 0 ) then
 1285.                $k_S7 = 1 + $k_S7
 1286.                m = m + (mysendspr_diag%base_addr)(2, 1 + $I_L1283_34, 0)
 1287.                (mysendspr_diag%base_addr)(2, $k_S7, 0) = m
 1288.                (mysendspr_diag%base_addr)(1, $k_S7, 0) = $I_L1283_34
 1288.             endif
 1290.             $I_L1283_34 = 1 + $I_L1283_34
 1289.             if ( $I_L1283_34 >= maxnodes ) exit
 1289.          enddo
 1289.       endif
 1291.       nsends_diag = $k_S7
 1292.       $m_S8 = 0
 1293.       if ( $k_S7 > 0 ) then
 1293.          $I_L1293_36 = 0
 1293.          do
 1294.             ns(1 + $I_L1293_36) = (mysendspr_diag%base_addr)(2, 1 + $I_L1293_36, 0) + -$m_S8
 1295.             t$948 = 4 * ns(1 + $I_L1293_36)
 1295.             call mpi_irecv( (mysends_diag%base_addr)(1, 1 + $m_S8, 0), t$948, 1275069467, (mysendspr_diag%base_addr)(1, 1 + $I_L1293_36, 0), 19, comm, requestr(1 + $I_L1293_36), ierr )
 1297.             $m_S8 = (mysendspr_diag%base_addr)(2, 1 + $I_L1293_36, 0)
 1298.             $I_L1293_36 = 1 + $I_L1293_36
 1297.             if ( $I_L1293_36 >= $k_S7 ) exit
 1297.          enddo
 1297.       endif
 1299.       $m_S10 = 0
 1300.       if ( nrecs_diag > 0 ) then
 1300.          $I_L1300_38 = 0
 1300.          do
 1301.             ns(1 + $I_L1300_38) = (myrecspr_diag%base_addr)(2, 1 + $I_L1300_38, 0) + -$m_S10
 1302.             t$948 = 4 * ns(1 + $I_L1300_38)
 1302.             call mpi_isend( (myrecs_diag%base_addr)(1, 1 + $m_S10, 0), t$948, 1275069467, (myrecspr_diag%base_addr)(1, 1 + $I_L1300_38, 0), 19, comm, requests(1 + $I_L1300_38), ierr )
 1304.             $m_S10 = (myrecspr_diag%base_addr)(2, 1 + $I_L1300_38, 0)
 1305.             $I_L1300_38 = 1 + $I_L1300_38
 1304.             if ( $I_L1300_38 >= nrecs_diag ) exit
 1304.          enddo
 1304.       endif
 1306.       if ( $k_S7 > 0 ) then
 1306.          call mpi_waitall( nsends_diag, requestr(1), status(1, 1), ierr )
 1306.       endif
 1307.       if ( nrecs_diag > 0 ) then
 1307.          call mpi_waitall( nrecs_diag, requests(1), status(1, 1), ierr )
 1307.       endif
 1240.       _free( t$379 )
 1309.       return
 1309.       end
 1309.       
 1311.       
 1311.       subroutine exchange_si( ibs, ibr, nsend, mysends )
 1311.       t$99 = ( 1 + nsend )
 1314.       t$392 = _zla( 0, ( 1 + nsend ) )
 1311.       t$101 = ( -1 + maxnodes )
 1311.       t$393 = maxnodes
 1316.       t$394 = _zla( 0, maxnodes )
 1311.       t$100 = nsend
 1315.       t$395 = _zla( 0, nsend )
 1321.       t$398 = 4 * _zla( 0, maxnodes )
 1322.       t$400 = 8 * _zla( 0, maxnodes )
 1323.       t$402 = 12 * _zla( 0, maxnodes )
 1311.       t$103 = maxnodes
 1324.       t$403 = _zla( 0, maxnodes )
 1311.       t$404 = 5 * _zla( 0, maxnodes )
 1324.       t$406 = 12 * _zla( 0, maxnodes ) + 20 * _zla( 0, maxnodes )
 1311.       t$396 = int( _alloc( 12 * _zla( 0, maxnodes ) + 20 * _zla( 0, maxnodes ) ), 8 )
 1321.       t$397 = t$396
 1322.       t$399 = t$396 + 4 * _zla( 0, maxnodes )
 1323.       t$401 = t$396 + 8 * _zla( 0, maxnodes )
 1324.       t$405 = t$396 + 12 * _zla( 0, maxnodes )
 1326.       comm = 1140850688
 1327.       requestr(myid) = 738197504
 1328.       requests(myid) = 738197504
 1329.       $F_A33 = maxnodes
 1329.       if ( maxnodes > 0 ) then
 1329.          $I_A1 = 0
 1329. !dir$ ivdep
 1329.          do
 1329.             ibr($I_A1) = 0
 1329.             $I_A1 = 1 + $I_A1
 1329.             if ( $I_A1 >= $F_A33 ) exit
 1329.          enddo
 1329.       endif
 1330.       $t_S1 = -1 + maxnodes
 1330.       if ( maxnodes > 0 ) then
 1330.          $I_L1330_12 = 0
 1330.          do
 1331.             if ( $I_L1330_12 + -myid /= 0 ) then
 1332.                t$964 = $I_L1330_12
 1332.                call mpi_irecv( ibr($I_L1330_12), 1, 1275069467, t$964, 28, comm, requestr($I_L1330_12), ierr )
 1332.             endif
 1335.             $I_L1330_12 = 1 + $I_L1330_12
 1334.             if ( $I_L1330_12 >= 1 + $t_S1 ) exit
 1334.          enddo
 1334.       endif
 1336.       $F_A34 = 1 + t$101
 1336.       if ( t$101 >= 0 ) then
 1336.          $I_A1 = 0
 1336. !dir$ ivdep
 1336.          do
 1336.             ns($I_A1) = 0
 1336.             $I_A1 = 1 + $I_A1
 1336.             if ( $I_A1 >= $F_A34 ) exit
 1336.          enddo
 1336.       endif
 1337.       if ( nsend > 0 ) then
 1337.          $I_L1337_14 = 0
 1337. !dir$ ivdep
 1337.          do
 1338.             ns(mysends(1 + $I_L1337_14)) = ibs(2 + $I_L1337_14) + -ibs(1 + $I_L1337_14)
 1339.             $I_L1337_14 = 1 + $I_L1337_14
 1337.             if ( $I_L1337_14 >= nsend ) exit
 1337.          enddo
 1337.       endif
 1340.       $t_S4 = -1 + maxnodes
 1340.       if ( maxnodes > 0 ) then
 1340.          $I_L1340_16 = 0
 1340.          do
 1341.             if ( $I_L1340_16 + -myid /= 0 ) then
 1342.                t$964 = $I_L1340_16
 1342.                call mpi_isend( ns($I_L1340_16), 1, 1275069467, t$964, 28, comm, requests($I_L1340_16), ierr )
 1342.             else
 1344.                ibr($I_L1340_16) = ns($I_L1340_16)
 1344.             endif
 1346.             $I_L1340_16 = 1 + $I_L1340_16
 1345.             if ( $I_L1340_16 >= 1 + $t_S4 ) exit
 1345.          enddo
 1345.       endif
 1347.       call mpi_waitall( maxnodes, requestr(0), status(1, 1), ierr )
 1348.       call mpi_waitall( maxnodes, requests(0), status(1, 1), ierr )
 1311.       _free( t$396 )
 1350.       return
 1350.       end
 1350.       
 1352.       
 1352.       subroutine spectosi( ibs, ibr, nsend, nrec, mysends, myrecs, maps, mapr, kmg, kml, nlfour, q1, q2, q1_si, q2_si, q3, q3_si, qs1, qs1_si )
 1352.       t$104 = ( 1 + nsend )
 1357.       t$407 = _zla( 0, ( 1 + nsend ) )
 1352.       t$105 = ( 1 + nrec )
 1358.       t$408 = _zla( 0, ( 1 + nrec ) )
 1352.       t$106 = nsend
 1359.       t$409 = _zla( 0, nsend )
 1352.       t$107 = nrec
 1360.       t$410 = _zla( 0, nrec )
 1352.       t$108 = ( -1 + maxnodes )
 1352.       t$411 = maxnodes
 1361.       t$412 = _zla( 0, maxnodes )
 1352.       t$109 = ( 2 * mymnmax )
 1352.       t$110 = kml
 1366.       t$413 = _zla( 0, ( 2 * mymnmax ) )
 1352.       t$414 = _zla( 0, ( 2 * mymnmax ) )
 1366.       t$415 = _zla( 0, kml )
 1352.       t$416 = _zla( 0, kml ) * _zla( 0, ( 2 * mymnmax ) )
 1352.       t$111 = ( 2 * mnmax_si )
 1352.       t$112 = kmg
 1368.       t$417 = _zla( 0, ( 2 * mnmax_si ) )
 1352.       t$418 = _zla( 0, ( 2 * mnmax_si ) )
 1368.       t$419 = _zla( 0, kmg )
 1352.       t$420 = _zla( 0, kmg ) * _zla( 0, ( 2 * mnmax_si ) )
 1380.       t$423 = 4 * _zla( 0, nrec )
 1379.       t$425 = 4 * _zla( 0, nrec ) + 4 * _zla( 0, nsend )
 1381.       t$427 = 4 * _zla( 0, nsend ) + 8 * _zla( 0, nrec )
 1382.       t$429 = 8 * _zla( 0, nrec ) + 8 * _zla( 0, nsend )
 1352.       t$114 = maxnodes
 1383.       t$430 = _zla( 0, maxnodes )
 1352.       t$431 = 5 * _zla( 0, maxnodes )
 1383.       t$433 = 8 * _zla( 0, nrec ) + 8 * _zla( 0, nsend ) + 20 * _zla( 0, maxnodes )
 1352.       t$421 = int( _alloc( 8 * _zla( 0, nrec ) + 8 * _zla( 0, nsend ) + 20 * _zla( 0, maxnodes ) ), 8 )
 1380.       t$422 = t$421
 1379.       t$424 = t$421 + 4 * _zla( 0, nrec )
 1381.       t$426 = t$421 + 4 * _zla( 0, nrec ) + 4 * _zla( 0, nsend )
 1382.       t$428 = t$421 + 4 * _zla( 0, nsend ) + 8 * _zla( 0, nrec )
 1383.       t$432 = t$421 + 8 * _zla( 0, nrec ) + 8 * _zla( 0, nsend )
 1386.       $ndim_S0 = max( ibs(1 + nsend), ibr(1 + nrec) )
 1387.       if ( dimrecbuf < $ndim_S0 ) then
 1388.          dimrecbuf = $ndim_S0
 1389.          $_allo_P0(0) = 0x1000000000001L
 1389.          $_allo_P0(1) = loc( bufrec )
 1389.          call __deallocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 1389.          bufrec%header%assoc = 0
 1390.          bufrec%header%a_contig = 1
 1390.          bufrec%dim_1%LB = 1
 1390.          bufrec%dim_1%EX = ( max( 0, $ndim_S0 ) )
 1390.          bufrec%dim_1%SM = 1
 1390.          $_allo_P1(0) = 0x1000000000001L
 1390.          $_allo_P1(1) = loc( bufrec )
 1390.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 1390.       endif
 1393.       if ( dimsendbuf < $ndim_S0 ) then
 1394.          dimsendbuf = $ndim_S0
 1395.          $_allo_P2(0) = 0x1000000000001L
 1395.          $_allo_P2(1) = loc( bufsend )
 1395.          call __deallocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 1395.          bufsend%header%assoc = 0
 1396.          bufsend%header%a_contig = 1
 1396.          bufsend%dim_1%LB = 1
 1396.          bufsend%dim_1%EX = ( max( 0, $ndim_S0 ) )
 1396.          bufsend%dim_1%SM = 1
 1396.          $_allo_P3(0) = 0x1000000000001L
 1396.          $_allo_P3(1) = loc( bufsend )
 1396.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 1396.       endif
 1398.       comm = 1140850688
 1400.       if ( nrec > 0 ) then
 1400.          $I_L1400_34 = 0
 1400.          do
 1401.             idest = myrecs(1 + $I_L1400_34)
 1402.             if ( myid + -idest /= 0 ) then
 1403.                t$974 = ibr(2 + $I_L1400_34) + -ibr(1 + $I_L1400_34)
 1403.                call mpi_irecv( (bufrec%base_addr)(ibr(1 + $I_L1400_34), 0), t$974, 1275070495, idest, 38, comm, requestr(1 + $I_L1400_34), ierr )
 1403.             else
 1406.                requestr(1 + $I_L1400_34) = 738197504
 1407.                iself = ( 1 + $I_L1400_34 )
 1407.             endif
 1409.             $I_L1400_34 = 1 + $I_L1400_34
 1408.             if ( $I_L1400_34 >= nrec ) exit
 1408.          enddo
 1408.       endif
 1411.       $F_A33 = nsend
 1411.       if ( nsend > 0 ) then
 1411.          $I_L1411_36 = 0
 1411. !dir$ ivdep
 1411.          do
 1411.             ips(1 + $I_L1411_36) = -1 + ibs(1 + $I_L1411_36)
 1411.             $I_L1411_36 = 1 + $I_L1411_36
 1411.             if ( $I_L1411_36 >= $F_A33 ) exit
 1411.          enddo
 1411.       endif
 1412.       $F_A34 = nrec
 1412.       if ( nrec > 0 ) then
 1412.          $I_L1412_38 = 0
 1412. !dir$ ivdep
 1412.          do
 1412.             ipr(1 + $I_L1412_38) = -1 + ibr(1 + $I_L1412_38)
 1412.             $I_L1412_38 = 1 + $I_L1412_38
 1412.             if ( $I_L1412_38 >= $F_A34 ) exit
 1412.          enddo
 1412.       endif
 1414.       if ( mymnmax > 0 ) then
 1414.          $I_L1414_66 = 0
 1414.          do
 1415.             $idest_S3 = maps((mnsendsmap_si%base_addr)(1 + $I_L1414_66, 0))
 1417.             $id_S4 = ips($idest_S3)
 1418.             $F_A35 = kml
 1418.             if ( $F_A35 > 0 ) then
 1418.                $I_L1418_40 = 0
 1418. !dir$ ivdep
 1418.                do
 1418.                   (bufsend%base_addr)($id_S4 + $I_L1418_40 + 1, 0) = q1(1 + 2 * $I_L1414_66, 1 + $I_L1418_40)
 1418.                   $I_L1418_40 = 1 + $I_L1418_40
 1418.                   if ( $I_L1418_40 >= $F_A35 ) exit
 1418.                enddo
 1418.             endif
 1420.             $F_A36 = kml
 1420.             if ( kml > 0 ) then
 1420.                $I_L1420_42 = 0
 1420. !dir$ ivdep
 1420.                do
 1420.                   (bufsend%base_addr)(kml + $id_S4 + $I_L1420_42 + 1, 0) = q1(2 + 2 * $I_L1414_66, 1 + $I_L1420_42)
 1420.                   $I_L1420_42 = 1 + $I_L1420_42
 1420.                   if ( $I_L1420_42 >= $F_A36 ) exit
 1420.                enddo
 1420.             endif
 1422.             $F_A37 = kml
 1422.             if ( kml > 0 ) then
 1422.                $I_L1422_44 = 0
 1422. !dir$ ivdep
 1422.                do
 1422.                   (bufsend%base_addr)($id_S4 + $I_L1422_44 + 2 * kml + 1, 0) = q2(1 + 2 * $I_L1414_66, 1 + $I_L1422_44)
 1422.                   $I_L1422_44 = 1 + $I_L1422_44
 1422.                   if ( $I_L1422_44 >= $F_A37 ) exit
 1422.                enddo
 1422.             endif
 1424.             $F_A38 = kml
 1424.             if ( kml > 0 ) then
 1424.                $I_L1424_46 = 0
 1424. !dir$ ivdep
 1424.                do
 1424.                   (bufsend%base_addr)($id_S4 + $I_L1424_46 + 3 * kml + 1, 0) = q2(2 + 2 * $I_L1414_66, 1 + $I_L1424_46)
 1424.                   $I_L1424_46 = 1 + $I_L1424_46
 1424.                   if ( $I_L1424_46 >= $F_A38 ) exit
 1424.                enddo
 1424.             endif
 1425.             $id_S8 = $id_S4 + 4 * kml
 1426.             if ( loc( q3 ) /= 0 ) then
 1427.                $F_A39 = kml
 1427.                if ( kml > 0 ) then
 1427.                   $I_L1427_48 = 0
 1427. !dir$ ivdep
 1427.                   do
 1427.                      (bufsend%base_addr)($id_S4 + $I_L1427_48 + 4 * kml + 1, 0) = q3(1 + 2 * $I_L1414_66, 1 + $I_L1427_48)
 1427.                      $I_L1427_48 = 1 + $I_L1427_48
 1427.                      if ( $I_L1427_48 >= $F_A39 ) exit
 1427.                   enddo
 1427.                endif
 1429.                $F_A40 = kml
 1429.                if ( kml > 0 ) then
 1429.                   $I_L1429_50 = 0
 1429. !dir$ ivdep
 1429.                   do
 1429.                      (bufsend%base_addr)($id_S4 + $I_L1429_50 + 5 * kml + 1, 0) = q3(2 + 2 * $I_L1414_66, 1 + $I_L1429_50)
 1429.                      $I_L1429_50 = 1 + $I_L1429_50
 1429.                      if ( $I_L1429_50 >= $F_A40 ) exit
 1429.                   enddo
 1429.                endif
 1430.                $id_S8 = $id_S4 + 6 * kml
 1430.             endif
 1432.             if ( havesurf .and. loc( qs1 ) /= 0 ) then
 1433.                (bufsend%base_addr)(1 + $id_S8, 0) = qs1(1 + 2 * $I_L1414_66)
 1434.                (bufsend%base_addr)(2 + $id_S8, 0) = qs1(2 + 2 * $I_L1414_66)
 1435.                $id_S8 = 2 + $id_S8
 1435.             endif
 1437.             ips($idest_S3) = $id_S8
 1438.             $I_L1414_66 = 1 + $I_L1414_66
 1436.             if ( $I_L1414_66 >= mymnmax ) exit
 1436.          enddo
 1436.       endif
 1439.       if ( nsend > 0 ) then
 1439.          $I_L1439_68 = 0
 1439.          do
 1440.             idest = mysends(1 + $I_L1439_68)
 1441.             if ( myid + -idest /= 0 ) then
 1442.                t$974 = ips(1 + $I_L1439_68) + -ibs(1 + $I_L1439_68) + 1
 1442.                call mpi_isend( (bufsend%base_addr)(ibs(1 + $I_L1439_68), 0), t$974, 1275070495, idest, 38, comm, requests(1 + $I_L1439_68), ierr )
 1442.             else
 1445.                requests(1 + $I_L1439_68) = 738197504
 1446.                $F_A41 = ( ips(1 + $I_L1439_68) + -ibs(1 + $I_L1439_68) + 1 )
 1446.                if ( ips(1 + $I_L1439_68) + -ibs(1 + $I_L1439_68) >= 0 ) then
 1446.                   $SCA_ibs_I21 = ibs(1 + $I_L1439_68)
 1446.                   $SCA_ibr_I24 = ibr(iself)
 1446.                   $SC_bufsend_I26 = bufsend%dim_1%EX
 1446.                   $SC_bufsend_I27 = bufsend%dim_1%LB
 1446.                   $SC_bufrec_I28 = bufrec%dim_1%EX
 1446.                   $SC_bufrec_I29 = bufrec%dim_1%LB
 1446.                   $I_L1446_52 = 0
 1446. !dir$ ivdep
 1446.                   do
 1446.                      (bufrec%base_addr)($SCA_ibr_I24 + $I_L1446_52, 0) = (bufsend%base_addr)($SCA_ibs_I21 + $I_L1446_52, 0)
 1446.                      $I_L1446_52 = 1 + $I_L1446_52
 1446.                      if ( $I_L1446_52 >= $F_A41 ) exit
 1446.                   enddo
 1446.                endif
 1446.             endif
 1448.             $I_L1439_68 = 1 + $I_L1439_68
 1447.             if ( $I_L1439_68 >= nsend ) exit
 1447.          enddo
 1447.       endif
 1449.       call mpi_waitall( nrec, requestr(1), status(1, 1), ierr )
 1452.       if ( mnmax_si > 0 ) then
 1457.          if ( ngroups_four > 0 ) then
 1452.             $I_L1452_72 = 0
 1452. !dir$ loop_info (automatic) cache_nt( mymnmap_si, mmap )
 1452.             do
 1454.                $mng_S12 = (mymnmap_si%base_addr)(1 + $I_L1452_72, 0)
 1455.                $m_S15 = (mmap%base_addr)($mng_S12, 0)
 1456.                $k_S18 = 0
 1457.                $I_L1457_70 = 0
 1457. !dir$ loop_info (automatic) cache_nt( map_four )
 1457.                do
 1458.                   $km_S14 = nlfour(1 + $I_L1457_70)
 1459.                   if ( $km_S14 > 0 ) then
 1460.                      $iproc_S16 = mapr((map_four%base_addr)(1 + $I_L1457_70, (nodehasm%base_addr)($m_S15, 1 + $I_L1457_70, 0), 0))
 1461.                      $id_S17 = ipr($iproc_S16)
 1462.                      $F_A42 = $km_S14
 1462.                      if ( $F_A42 > 0 ) then
 1462.                         $I_L1462_54 = 0
 1462. !dir$ ivdep
 1462.                         do
 1462.                            q1_si(1 + 2 * $I_L1452_72, $k_S18 + $I_L1462_54 + 1) = (bufrec%base_addr)($id_S17 + $I_L1462_54 + 1, 0)
 1462.                            $I_L1462_54 = 1 + $I_L1462_54
 1462.                            if ( $I_L1462_54 >= $F_A42 ) exit
 1462.                         enddo
 1462.                      endif
 1464.                      $F_A43 = $km_S14
 1464.                      $I_L1464_56 = 0
 1464. !dir$ ivdep
 1464.                      do
 1464.                         q1_si(2 + 2 * $I_L1452_72, $k_S18 + $I_L1464_56 + 1) = (bufrec%base_addr)($km_S14 + $id_S17 + $I_L1464_56 + 1, 0)
 1464.                         $I_L1464_56 = 1 + $I_L1464_56
 1464.                         if ( $I_L1464_56 >= $F_A43 ) exit
 1464.                      enddo
 1466.                      $F_A44 = $km_S14
 1466.                      $I_L1466_58 = 0
 1466. !dir$ ivdep
 1466.                      do
 1466.                         q2_si(1 + 2 * $I_L1452_72, $k_S18 + $I_L1466_58 + 1) = (bufrec%base_addr)($id_S17 + $I_L1466_58 + 2 * $km_S14 + 1, 0)
 1466.                         $I_L1466_58 = 1 + $I_L1466_58
 1466.                         if ( $I_L1466_58 >= $F_A44 ) exit
 1466.                      enddo
 1468.                      $F_A45 = $km_S14
 1468.                      $I_L1468_60 = 0
 1468. !dir$ ivdep
 1468.                      do
 1468.                         q2_si(2 + 2 * $I_L1452_72, $k_S18 + $I_L1468_60 + 1) = (bufrec%base_addr)($id_S17 + $I_L1468_60 + 3 * $km_S14 + 1, 0)
 1468.                         $I_L1468_60 = 1 + $I_L1468_60
 1468.                         if ( $I_L1468_60 >= $F_A45 ) exit
 1468.                      enddo
 1469.                      $id_S22 = $id_S17 + 4 * $km_S14
 1470.                      if ( loc( q3 ) /= 0 ) then
 1471.                         $F_A46 = $km_S14
 1471.                         $I_L1471_62 = 0
 1471. !dir$ ivdep
 1471.                         do
 1471.                            q3_si(1 + 2 * $I_L1452_72, $k_S18 + $I_L1471_62 + 1) = (bufrec%base_addr)($id_S17 + $I_L1471_62 + 4 * $km_S14 + 1, 0)
 1471.                            $I_L1471_62 = 1 + $I_L1471_62
 1471.                            if ( $I_L1471_62 >= $F_A46 ) exit
 1471.                         enddo
 1473.                         $F_A47 = $km_S14
 1473.                         $I_L1473_64 = 0
 1473. !dir$ ivdep
 1473.                         do
 1473.                            q3_si(2 + 2 * $I_L1452_72, $k_S18 + $I_L1473_64 + 1) = (bufrec%base_addr)($id_S17 + $I_L1473_64 + 5 * $km_S14 + 1, 0)
 1473.                            $I_L1473_64 = 1 + $I_L1473_64
 1473.                            if ( $I_L1473_64 >= $F_A47 ) exit
 1473.                         enddo
 1474.                         $id_S22 = $id_S17 + 6 * $km_S14
 1474.                      endif
 1476.                      if ( $I_L1457_70 == 0 ) then
 1476.                         if ( loc( qs1 ) /= 0 ) then
 1477.                            qs1_si(1 + 2 * $I_L1452_72) = (bufrec%base_addr)(1 + $id_S22, 0)
 1478.                            qs1_si(2 + 2 * $I_L1452_72) = (bufrec%base_addr)(2 + $id_S22, 0)
 1479.                            $id_S22 = 2 + $id_S22
 1479.                         endif
 1479.                      endif
 1481.                      ipr($iproc_S16) = $id_S22
 1481.                   endif
 1483.                   $k_S18 = $km_S14 + $k_S18
 1484.                   $I_L1457_70 = 1 + $I_L1457_70
 1482.                   if ( $I_L1457_70 >= ngroups_four ) exit
 1482.                enddo
 1485.                $I_L1452_72 = 1 + $I_L1452_72
 1484.                if ( $I_L1452_72 >= mnmax_si ) exit
 1484.             enddo
 1484.          endif
 1484.       endif
 1487.       call mpi_waitall( nsend, requests(1), status(1, 1), ierr )
 1352.       _free( t$421 )
 1489.       return
 1489.       end
 1489.       
 1491.       
 1491.       subroutine sitospec( ibs, ibr, nsend, nrec, mysends, myrecs, maps, mapr, kmg, kml, nlfour, toall, q1, q2, q1_si, q2_si, q3, q3_si, qs1, qs1_si )
 1491.       t$115 = ( 1 + nsend )
 1496.       t$434 = _zla( 0, ( 1 + nsend ) )
 1491.       t$116 = ( 1 + nrec )
 1497.       t$435 = _zla( 0, ( 1 + nrec ) )
 1491.       t$117 = nsend
 1498.       t$436 = _zla( 0, nsend )
 1491.       t$118 = nrec
 1499.       t$437 = _zla( 0, nrec )
 1491.       t$119 = ( -1 + maxnodes )
 1491.       t$438 = maxnodes
 1500.       t$439 = _zla( 0, maxnodes )
 1491.       t$120 = ( 2 * mymnmax )
 1491.       t$121 = kml
 1506.       t$440 = _zla( 0, ( 2 * mymnmax ) )
 1491.       t$441 = _zla( 0, ( 2 * mymnmax ) )
 1506.       t$442 = _zla( 0, kml )
 1491.       t$443 = _zla( 0, kml ) * _zla( 0, ( 2 * mymnmax ) )
 1491.       t$122 = ( 2 * mnmax_si )
 1491.       t$123 = kmg
 1508.       t$444 = _zla( 0, ( 2 * mnmax_si ) )
 1491.       t$445 = _zla( 0, ( 2 * mnmax_si ) )
 1508.       t$446 = _zla( 0, kmg )
 1491.       t$447 = _zla( 0, kmg ) * _zla( 0, ( 2 * mnmax_si ) )
 1520.       t$450 = 4 * _zla( 0, nrec )
 1519.       t$452 = 4 * _zla( 0, nrec ) + 4 * _zla( 0, nsend )
 1521.       t$454 = 4 * _zla( 0, nsend ) + 8 * _zla( 0, nrec )
 1522.       t$456 = 8 * _zla( 0, nrec ) + 8 * _zla( 0, nsend )
 1491.       t$125 = maxnodes
 1523.       t$457 = _zla( 0, maxnodes )
 1491.       t$458 = 5 * _zla( 0, maxnodes )
 1523.       t$460 = 8 * _zla( 0, nrec ) + 8 * _zla( 0, nsend ) + 20 * _zla( 0, maxnodes )
 1491.       t$448 = int( _alloc( 8 * _zla( 0, nrec ) + 8 * _zla( 0, nsend ) + 20 * _zla( 0, maxnodes ) ), 8 )
 1520.       t$449 = t$448
 1519.       t$451 = t$448 + 4 * _zla( 0, nrec )
 1521.       t$453 = t$448 + 4 * _zla( 0, nrec ) + 4 * _zla( 0, nsend )
 1522.       t$455 = t$448 + 4 * _zla( 0, nsend ) + 8 * _zla( 0, nrec )
 1523.       t$459 = t$448 + 8 * _zla( 0, nrec ) + 8 * _zla( 0, nsend )
 1525.       $ndim_S0 = max( ibs(1 + nsend), ibr(1 + nrec) )
 1526.       if ( dimrecbuf < $ndim_S0 ) then
 1527.          dimrecbuf = $ndim_S0
 1528.          $_allo_P0(0) = 0x1000000000001L
 1528.          $_allo_P0(1) = loc( bufrec )
 1528.          call __deallocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 1528.          bufrec%header%assoc = 0
 1529.          bufrec%header%a_contig = 1
 1529.          bufrec%dim_1%LB = 1
 1529.          bufrec%dim_1%EX = ( max( 0, $ndim_S0 ) )
 1529.          bufrec%dim_1%SM = 1
 1529.          $_allo_P1(0) = 0x1000000000001L
 1529.          $_allo_P1(1) = loc( bufrec )
 1529.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 1529.       endif
 1532.       if ( dimsendbuf < $ndim_S0 ) then
 1533.          dimsendbuf = $ndim_S0
 1534.          $_allo_P2(0) = 0x1000000000001L
 1534.          $_allo_P2(1) = loc( bufsend )
 1534.          call __deallocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 1534.          bufsend%header%assoc = 0
 1535.          bufsend%header%a_contig = 1
 1535.          bufsend%dim_1%LB = 1
 1535.          bufsend%dim_1%EX = ( max( 0, $ndim_S0 ) )
 1535.          bufsend%dim_1%SM = 1
 1535.          $_allo_P3(0) = 0x1000000000001L
 1535.          $_allo_P3(1) = loc( bufsend )
 1535.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 1535.       endif
 1537.       comm = 1140850688
 1539.       if ( nrec > 0 ) then
 1539.          $I_L1539_34 = 0
 1539.          do
 1540.             idest = myrecs(1 + $I_L1539_34)
 1541.             if ( myid + -idest /= 0 ) then
 1542.                t$990 = ibr(2 + $I_L1539_34) + -ibr(1 + $I_L1539_34)
 1542.                call mpi_irecv( (bufrec%base_addr)(ibr(1 + $I_L1539_34), 0), t$990, 1275070495, idest, 39, comm, requestr(1 + $I_L1539_34), ierr )
 1542.             else
 1545.                requestr(1 + $I_L1539_34) = 738197504
 1546.                iself = ( 1 + $I_L1539_34 )
 1546.             endif
 1548.             $I_L1539_34 = 1 + $I_L1539_34
 1547.             if ( $I_L1539_34 >= nrec ) exit
 1547.          enddo
 1547.       endif
 1550.       $F_A33 = nsend
 1550.       if ( nsend > 0 ) then
 1550.          $I_L1550_36 = 0
 1550. !dir$ ivdep
 1550. !dir$ loop_info (automatic) cache_nt( ips )
 1550.          do
 1550.             ips(1 + $I_L1550_36) = -1 + ibs(1 + $I_L1550_36)
 1550.             $I_L1550_36 = 1 + $I_L1550_36
 1550.             if ( $I_L1550_36 >= $F_A33 ) exit
 1550.          enddo
 1550.       endif
 1551.       $F_A34 = nrec
 1551.       if ( nrec > 0 ) then
 1551.          $I_L1551_38 = 0
 1551. !dir$ ivdep
 1551.          do
 1551.             ipr(1 + $I_L1551_38) = -1 + ibr(1 + $I_L1551_38)
 1551.             $I_L1551_38 = 1 + $I_L1551_38
 1551.             if ( $I_L1551_38 >= $F_A34 ) exit
 1551.          enddo
 1551.       endif
 1553.       if ( mnmax_si > 0 ) then
 1558.          if ( ngroups_four > 0 ) then
 1553.             $I_L1553_72 = 0
 1553. !dir$ loop_info (automatic) cache_nt( mymnmap_si, mmap )
 1553.             do
 1555.                $mng_S3 = (mymnmap_si%base_addr)(1 + $I_L1553_72, 0)
 1556.                $m_S5 = (mmap%base_addr)($mng_S3, 0)
 1557.                $k_S8 = 0
 1558.                $I_L1558_66 = 0
 1558. !dir$ loop_info (automatic) cache_nt( map_four )
 1558.                do
 1559.                   $iproc_S6 = maps((map_four%base_addr)(1 + $I_L1558_66, (nodehasm%base_addr)($m_S5, 1 + $I_L1558_66, 0), 0))
 1560.                   $km_S7 = nlfour(1 + $I_L1558_66)
 1561.                   $id_S9 = ips($iproc_S6)
 1562.                   $F_A35 = $km_S7
 1562.                   if ( $F_A35 > 0 ) then
 1562.                      $I_L1562_40 = 0
 1562. !dir$ ivdep
 1562.                      do
 1562.                         (bufsend%base_addr)($id_S9 + $I_L1562_40 + 1, 0) = q1_si(1 + 2 * $I_L1553_72, $k_S8 + $I_L1562_40 + 1)
 1562.                         $I_L1562_40 = 1 + $I_L1562_40
 1562.                         if ( $I_L1562_40 >= $F_A35 ) exit
 1562.                      enddo
 1562.                   endif
 1564.                   $F_A36 = $km_S7
 1564.                   if ( $km_S7 > 0 ) then
 1564.                      $I_L1564_42 = 0
 1564. !dir$ ivdep
 1564.                      do
 1564.                         (bufsend%base_addr)($km_S7 + $id_S9 + $I_L1564_42 + 1, 0) = q1_si(2 + 2 * $I_L1553_72, $k_S8 + $I_L1564_42 + 1)
 1564.                         $I_L1564_42 = 1 + $I_L1564_42
 1564.                         if ( $I_L1564_42 >= $F_A36 ) exit
 1564.                      enddo
 1564.                   endif
 1566.                   $F_A37 = $km_S7
 1566.                   if ( $km_S7 > 0 ) then
 1566.                      $I_L1566_44 = 0
 1566. !dir$ ivdep
 1566.                      do
 1566.                         (bufsend%base_addr)($id_S9 + $I_L1566_44 + 2 * $km_S7 + 1, 0) = q2_si(1 + 2 * $I_L1553_72, $k_S8 + $I_L1566_44 + 1)
 1566.                         $I_L1566_44 = 1 + $I_L1566_44
 1566.                         if ( $I_L1566_44 >= $F_A37 ) exit
 1566.                      enddo
 1566.                   endif
 1568.                   $F_A38 = $km_S7
 1568.                   if ( $km_S7 > 0 ) then
 1568.                      $I_L1568_46 = 0
 1568. !dir$ ivdep
 1568.                      do
 1568.                         (bufsend%base_addr)($id_S9 + $I_L1568_46 + 3 * $km_S7 + 1, 0) = q2_si(2 + 2 * $I_L1553_72, $k_S8 + $I_L1568_46 + 1)
 1568.                         $I_L1568_46 = 1 + $I_L1568_46
 1568.                         if ( $I_L1568_46 >= $F_A38 ) exit
 1568.                      enddo
 1568.                   endif
 1569.                   $id_S13 = $id_S9 + 4 * $km_S7
 1570.                   if ( loc( q3 ) /= 0 ) then
 1571.                      $F_A39 = $km_S7
 1571.                      if ( $km_S7 > 0 ) then
 1571.                         $I_L1571_48 = 0
 1571. !dir$ ivdep
 1571.                         do
 1571.                            (bufsend%base_addr)($id_S9 + $I_L1571_48 + 4 * $km_S7 + 1, 0) = q3_si(1 + 2 * $I_L1553_72, $k_S8 + $I_L1571_48 + 1)
 1571.                            $I_L1571_48 = 1 + $I_L1571_48
 1571.                            if ( $I_L1571_48 >= $F_A39 ) exit
 1571.                         enddo
 1571.                      endif
 1573.                      $F_A40 = $km_S7
 1573.                      if ( $km_S7 > 0 ) then
 1573.                         $I_L1573_50 = 0
 1573. !dir$ ivdep
 1573.                         do
 1573.                            (bufsend%base_addr)($id_S9 + $I_L1573_50 + 5 * $km_S7 + 1, 0) = q3_si(2 + 2 * $I_L1553_72, $k_S8 + $I_L1573_50 + 1)
 1573.                            $I_L1573_50 = 1 + $I_L1573_50
 1573.                            if ( $I_L1573_50 >= $F_A40 ) exit
 1573.                         enddo
 1573.                      endif
 1574.                      $id_S13 = $id_S9 + 6 * $km_S7
 1574.                   endif
 1576.                   if ( $I_L1558_66 == 0 ) then
 1575.                      goto 10
 1576.                   else if ( toall ) then
 1576.    10                continue
 1576.                      if ( loc( qs1 ) /= 0 ) then
 1577.                         (bufsend%base_addr)(1 + $id_S13, 0) = qs1_si(1 + 2 * $I_L1553_72)
 1578.                         (bufsend%base_addr)(2 + $id_S13, 0) = qs1_si(2 + 2 * $I_L1553_72)
 1579.                         $id_S13 = 2 + $id_S13
 1579.                      endif
 1579.                   endif
 1581.                   ips($iproc_S6) = $id_S13
 1582.                   $k_S8 = $km_S7 + $k_S8
 1583.                   $I_L1558_66 = 1 + $I_L1558_66
 1580.                   if ( $I_L1558_66 >= ngroups_four ) exit
 1580.                enddo
 1584.                $I_L1553_72 = 1 + $I_L1553_72
 1583.                if ( $I_L1553_72 >= mnmax_si ) exit
 1583.             enddo
 1583.          endif
 1583.       endif
 1586.       if ( nsend > 0 ) then
 1586.          $I_L1586_68 = 0
 1586.          do
 1587.             idest = mysends(1 + $I_L1586_68)
 1588.             if ( myid + -idest /= 0 ) then
 1589.                t$990 = ips(1 + $I_L1586_68) + -ibs(1 + $I_L1586_68) + 1
 1589.                call mpi_isend( (bufsend%base_addr)(ibs(1 + $I_L1586_68), 0), t$990, 1275070495, idest, 39, comm, requests(1 + $I_L1586_68), ierr )
 1589.             else
 1592.                requests(1 + $I_L1586_68) = 738197504
 1593.                $F_A41 = ( ips(1 + $I_L1586_68) + -ibs(1 + $I_L1586_68) + 1 )
 1593.                if ( ips(1 + $I_L1586_68) + -ibs(1 + $I_L1586_68) >= 0 ) then
 1593.                   $SCA_ibs_I21 = ibs(1 + $I_L1586_68)
 1593.                   $SCA_ibr_I24 = ibr(iself)
 1593.                   $SC_bufsend_I26 = bufsend%dim_1%EX
 1593.                   $SC_bufsend_I27 = bufsend%dim_1%LB
 1593.                   $SC_bufrec_I28 = bufrec%dim_1%EX
 1593.                   $SC_bufrec_I29 = bufrec%dim_1%LB
 1593.                   $I_L1593_52 = 0
 1593. !dir$ ivdep
 1593.                   do
 1593.                      (bufrec%base_addr)($SCA_ibr_I24 + $I_L1593_52, 0) = (bufsend%base_addr)($SCA_ibs_I21 + $I_L1593_52, 0)
 1593.                      $I_L1593_52 = 1 + $I_L1593_52
 1593.                      if ( $I_L1593_52 >= $F_A41 ) exit
 1593.                   enddo
 1593.                endif
 1593.             endif
 1595.             $I_L1586_68 = 1 + $I_L1586_68
 1594.             if ( $I_L1586_68 >= nsend ) exit
 1594.          enddo
 1594.       endif
 1596.       call mpi_waitall( nrec, requestr(1), status(1, 1), ierr )
 1598.       if ( mymnmax > 0 ) then
 1598.          $I_L1598_70 = 0
 1598.          do
 1599.             $idest_S17 = mapr((mnsendsmap_si%base_addr)(1 + $I_L1598_70, 0))
 1601.             $id_S18 = ipr($idest_S17)
 1602.             $F_A42 = kml
 1602.             if ( $F_A42 > 0 ) then
 1602.                $I_L1602_54 = 0
 1602. !dir$ ivdep
 1602.                do
 1602.                   q1(1 + 2 * $I_L1598_70, 1 + $I_L1602_54) = (bufrec%base_addr)($id_S18 + $I_L1602_54 + 1, 0)
 1602.                   $I_L1602_54 = 1 + $I_L1602_54
 1602.                   if ( $I_L1602_54 >= $F_A42 ) exit
 1602.                enddo
 1602.             endif
 1604.             $F_A43 = kml
 1604.             if ( kml > 0 ) then
 1604.                $I_L1604_56 = 0
 1604. !dir$ ivdep
 1604.                do
 1604.                   q1(2 + 2 * $I_L1598_70, 1 + $I_L1604_56) = (bufrec%base_addr)(kml + $id_S18 + $I_L1604_56 + 1, 0)
 1604.                   $I_L1604_56 = 1 + $I_L1604_56
 1604.                   if ( $I_L1604_56 >= $F_A43 ) exit
 1604.                enddo
 1604.             endif
 1606.             $F_A44 = kml
 1606.             if ( kml > 0 ) then
 1606.                $I_L1606_58 = 0
 1606. !dir$ ivdep
 1606.                do
 1606.                   q2(1 + 2 * $I_L1598_70, 1 + $I_L1606_58) = (bufrec%base_addr)($id_S18 + $I_L1606_58 + 2 * kml + 1, 0)
 1606.                   $I_L1606_58 = 1 + $I_L1606_58
 1606.                   if ( $I_L1606_58 >= $F_A44 ) exit
 1606.                enddo
 1606.             endif
 1608.             $F_A45 = kml
 1608.             if ( kml > 0 ) then
 1608.                $I_L1608_60 = 0
 1608. !dir$ ivdep
 1608.                do
 1608.                   q2(2 + 2 * $I_L1598_70, 1 + $I_L1608_60) = (bufrec%base_addr)($id_S18 + $I_L1608_60 + 3 * kml + 1, 0)
 1608.                   $I_L1608_60 = 1 + $I_L1608_60
 1608.                   if ( $I_L1608_60 >= $F_A45 ) exit
 1608.                enddo
 1608.             endif
 1609.             $id_S22 = $id_S18 + 4 * kml
 1610.             if ( loc( q3 ) /= 0 ) then
 1611.                $F_A46 = kml
 1611.                if ( kml > 0 ) then
 1611.                   $I_L1611_62 = 0
 1611. !dir$ ivdep
 1611.                   do
 1611.                      q3(1 + 2 * $I_L1598_70, 1 + $I_L1611_62) = (bufrec%base_addr)($id_S18 + $I_L1611_62 + 4 * kml + 1, 0)
 1611.                      $I_L1611_62 = 1 + $I_L1611_62
 1611.                      if ( $I_L1611_62 >= $F_A46 ) exit
 1611.                   enddo
 1611.                endif
 1613.                $F_A47 = kml
 1613.                if ( kml > 0 ) then
 1613.                   $I_L1613_64 = 0
 1613. !dir$ ivdep
 1613.                   do
 1613.                      q3(2 + 2 * $I_L1598_70, 1 + $I_L1613_64) = (bufrec%base_addr)($id_S18 + $I_L1613_64 + 5 * kml + 1, 0)
 1613.                      $I_L1613_64 = 1 + $I_L1613_64
 1613.                      if ( $I_L1613_64 >= $F_A47 ) exit
 1613.                   enddo
 1613.                endif
 1614.                $id_S22 = $id_S18 + 6 * kml
 1614.             endif
 1616.             if ( havesurf ) then
 1615.                goto 20
 1616.             else if ( toall ) then
 1616.    20          continue
 1616.                if ( loc( qs1 ) /= 0 ) then
 1617.                   qs1(1 + 2 * $I_L1598_70) = (bufrec%base_addr)(1 + $id_S22, 0)
 1618.                   qs1(2 + 2 * $I_L1598_70) = (bufrec%base_addr)(2 + $id_S22, 0)
 1619.                   $id_S22 = 2 + $id_S22
 1619.                endif
 1619.             endif
 1621.             ipr($idest_S17) = $id_S22
 1622.             $I_L1598_70 = 1 + $I_L1598_70
 1620.             if ( $I_L1598_70 >= mymnmax ) exit
 1620.          enddo
 1620.       endif
 1623.       call mpi_waitall( nsend, requests(1), status(1, 1), ierr )
 1491.       _free( t$448 )
 1625.       return
 1625.       end
 1625.       
 1627.       
 1627.       subroutine exchange_hallos( nrec, nsend, nscalars )
 1627.       t$126 = ( -1 + maxnodes )
 1627.       t$461 = maxnodes
 1636.       t$462 = _zla( 0, maxnodes )
 1636.       t$465 = 4 * _zla( 0, maxnodes )
 1637.       t$467 = 8 * _zla( 0, maxnodes )
 1638.       t$469 = 12 * _zla( 0, maxnodes )
 1627.       t$128 = maxnodes
 1639.       t$470 = _zla( 0, maxnodes )
 1627.       t$471 = 5 * _zla( 0, maxnodes )
 1639.       t$473 = 12 * _zla( 0, maxnodes ) + 20 * _zla( 0, maxnodes )
 1627.       t$463 = int( _alloc( 12 * _zla( 0, maxnodes ) + 20 * _zla( 0, maxnodes ) ), 8 )
 1636.       t$464 = t$463
 1637.       t$466 = t$463 + 4 * _zla( 0, maxnodes )
 1638.       t$468 = t$463 + 8 * _zla( 0, maxnodes )
 1639.       t$472 = t$463 + 12 * _zla( 0, maxnodes )
 1641.       comm = 1140850688
 1642.       requestr(myid) = 738197504
 1643.       requests(myid) = 738197504
 1644.       $t_S1 = -1 + maxnodes
 1644.       if ( maxnodes > 0 ) then
 1644.          $I_L1644_48 = 0
 1644.          do
 1645.             if ( $I_L1644_48 + -myid /= 0 ) then
 1646.                t$1006 = $I_L1644_48
 1646.                call mpi_irecv( (mysendspr%base_addr)(2, 1 + $I_L1644_48, 0), 1, 1275069467, t$1006, 15, comm, requestr($I_L1644_48), ierr )
 1646.             else
 1649.                (mysendspr%base_addr)(2, 1 + $I_L1644_48, 0) = 0
 1649.             endif
 1651.             $I_L1644_48 = 1 + $I_L1644_48
 1650.             if ( $I_L1644_48 >= 1 + $t_S1 ) exit
 1650.          enddo
 1650.       endif
 1652.       $m_S4 = 0
 1653.       $k_S3 = 1
 1654.       $t_S5 = -1 + maxnodes
 1654.       if ( maxnodes > 0 ) then
 1654.          $I_L1654_50 = 0
 1654.          do
 1655.             if ( $I_L1654_50 + -myid /= 0 ) then
 1656.                if ( $k_S3 > nrec ) then
 1656.                   goto 10
 1656.                else if ( (myrecspr%base_addr)(1, $k_S3, 0) + -$I_L1654_50 == 0 ) then
 1657.                   ns($I_L1654_50) = (myrecspr%base_addr)(2, $k_S3, 0) + -$m_S4
 1658.                   $m_S4 = (myrecspr%base_addr)(2, $k_S3, 0)
 1659.                   $k_S3 = 1 + $k_S3
 1659.                else
 1659.    10             continue
 1661.                   ns($I_L1654_50) = 0
 1661.                endif
 1663.                t$1006 = $I_L1654_50
 1663.                call mpi_isend( ns($I_L1654_50), 1, 1275069467, t$1006, 15, comm, requests($I_L1654_50), ierr )
 1663.             endif
 1665.             $I_L1654_50 = 1 + $I_L1654_50
 1664.             if ( $I_L1654_50 >= 1 + $t_S5 ) exit
 1664.          enddo
 1664.       endif
 1666.       call mpi_waitall( maxnodes, requestr(0), status(1, 1), ierr )
 1667.       call mpi_waitall( maxnodes, requests(0), status(1, 1), ierr )
 1668.       $k_S7 = 0
 1669.       m = 0
 1670.       if ( maxnodes > 0 ) then
 1670.          $I_L1670_52 = 0
 1670. !dir$ unroll 4
 1670.          do
 1671.             if ( (mysendspr%base_addr)(2, 1 + $I_L1670_52, 0) /= 0 ) then
 1672.                $k_S7 = 1 + $k_S7
 1673.                m = m + (mysendspr%base_addr)(2, 1 + $I_L1670_52, 0)
 1674.                (mysendspr%base_addr)(2, $k_S7, 0) = m
 1675.                (mysendspr%base_addr)(1, $k_S7, 0) = $I_L1670_52
 1675.             endif
 1677.             $I_L1670_52 = 1 + $I_L1670_52
 1676.             if ( $I_L1670_52 >= maxnodes ) exit
 1676.          enddo
 1676.       endif
 1678.       nsend = $k_S7
 1679.       $m_S8 = 0
 1680.       if ( $k_S7 > 0 ) then
 1680.          $I_L1680_54 = 0
 1680.          do
 1681.             ns(1 + $I_L1680_54) = (mysendspr%base_addr)(2, 1 + $I_L1680_54, 0) + -$m_S8
 1682.             t$1006 = 4 * ns(1 + $I_L1680_54)
 1682.             call mpi_irecv( (mysendsgr%base_addr)(1, 1 + $m_S8, 0), t$1006, 1275069467, (mysendspr%base_addr)(1, 1 + $I_L1680_54, 0), 16, comm, requestr(1 + $I_L1680_54), ierr )
 1684.             $m_S8 = (mysendspr%base_addr)(2, 1 + $I_L1680_54, 0)
 1685.             $I_L1680_54 = 1 + $I_L1680_54
 1684.             if ( $I_L1680_54 >= $k_S7 ) exit
 1684.          enddo
 1684.       endif
 1686.       isbrec%header%a_contig = 1
 1686.       isbrec%dim_1%LB = 1
 1686.       isbrec%dim_1%EX = ( max( 0, nrec ) )
 1686.       isbrec%dim_1%SM = 1
 1686.       $_allo_P0(0) = 0x1000000000001L
 1686.       $_allo_P0(1) = loc( isbrec )
 1686.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 1687.       ilrecbuf%header%a_contig = 1
 1687.       ilrecbuf%dim_1%LB = 1
 1687.       ilrecbuf%dim_1%EX = ( max( 0, nrec ) )
 1687.       ilrecbuf%dim_1%SM = 1
 1687.       $_allo_P1(0) = 0x1000000000001L
 1687.       $_allo_P1(1) = loc( ilrecbuf )
 1687.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 1688.       isbsend%header%a_contig = 1
 1688.       isbsend%dim_1%LB = 1
 1688.       isbsend%dim_1%EX = ( max( 0, $k_S7 ) )
 1688.       isbsend%dim_1%SM = 1
 1688.       $_allo_P2(0) = 0x1000000000001L
 1688.       $_allo_P2(1) = loc( isbsend )
 1688.       call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 1689.       ilsendbuf%header%a_contig = 1
 1689.       ilsendbuf%dim_1%LB = 1
 1689.       ilsendbuf%dim_1%EX = ( max( 0, $k_S7 ) )
 1689.       ilsendbuf%dim_1%SM = 1
 1689.       $_allo_P3(0) = 0x1000000000001L
 1689.       $_allo_P3(1) = loc( ilsendbuf )
 1689.       call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 1690.       $m_S12 = 0
 1691.       $irec_S10 = 1
 1692.       if ( nrec > 0 ) then
 1692.          $I_L1692_60 = 0
 1692.          do
 1693.             (isbrec%base_addr)(1 + $I_L1692_60, 0) = $irec_S10
 1694.             ns(1 + $I_L1692_60) = (myrecspr%base_addr)(2, 1 + $I_L1692_60, 0) + -$m_S12
 1695.             t$1006 = 4 * ns(1 + $I_L1692_60)
 1695.             call mpi_isend( (myrecsgr%base_addr)(1, 1 + $m_S12, 0), t$1006, 1275069467, (myrecspr%base_addr)(1, 1 + $I_L1692_60, 0), 16, comm, requests(1 + $I_L1692_60), ierr )
 1697.             nlen = 0
 1698.             $t_S13 = (myrecspr%base_addr)(2, 1 + $I_L1692_60, 0)
 1698.             if ( $t_S13 + -$m_S12 > 0 ) then
 1698.                $I_L1698_56 = 0
 1698. !dir$ ivdep
 1698.                do
 1699.                   nlen = nlen + (myrecsgr%base_addr)(2, $m_S12 + $I_L1698_56 + 1, 0) + -(myrecsgr%base_addr)(1, $m_S12 + $I_L1698_56 + 1, 0) + 1
 1700.                   $I_L1698_56 = 1 + $I_L1698_56
 1698.                   if ( $I_L1698_56 >= ( $t_S13 + -$m_S12 ) ) exit
 1698.                enddo
 1698.             endif
 1701.             (ilrecbuf%base_addr)(1 + $I_L1692_60, 0) = nlen * kmax * 4 + nlen * kmax * nscalars + nlen
 1702.             $irec_S10 = nlen + $irec_S10 + nlen * kmax * 4 + nlen * kmax * nscalars
 1703.             $m_S12 = $t_S13
 1704.             $I_L1692_60 = 1 + $I_L1692_60
 1700.             if ( $I_L1692_60 >= nrec ) exit
 1700.          enddo
 1700.       endif
 1705.       call mpi_waitall( nsend, requestr(1), status(1, 1), ierr )
 1706.       call mpi_waitall( nrec, requests(1), status(1, 1), ierr )
 1708.       $m_S17 = 0
 1709.       $isnd_S15 = 1
 1710.       if ( nsend > 0 ) then
 1710.          $I_L1710_62 = 0
 1710.          do
 1711.             (isbsend%base_addr)(1 + $I_L1710_62, 0) = $isnd_S15
 1712.             nlen = 0
 1713.             $t_S18 = (mysendspr%base_addr)(2, 1 + $I_L1710_62, 0)
 1713.             if ( $t_S18 + -$m_S17 > 0 ) then
 1713.                $I_L1713_58 = 0
 1713. !dir$ ivdep
 1713.                do
 1714.                   nlen = nlen + (mysendsgr%base_addr)(2, $m_S17 + $I_L1713_58 + 1, 0) + -(mysendsgr%base_addr)(1, $m_S17 + $I_L1713_58 + 1, 0) + 1
 1715.                   $I_L1713_58 = 1 + $I_L1713_58
 1713.                   if ( $I_L1713_58 >= ( $t_S18 + -$m_S17 ) ) exit
 1713.                enddo
 1713.             endif
 1716.             (ilsendbuf%base_addr)(1 + $I_L1710_62, 0) = nlen * kmax * 4 + nlen * kmax * nscalars + nlen
 1717.             $isnd_S15 = nlen + $isnd_S15 + nlen * kmax * 4 + nlen * kmax * nscalars
 1718.             $m_S17 = $t_S18
 1719.             $I_L1710_62 = 1 + $I_L1710_62
 1715.             if ( $I_L1710_62 >= nsend ) exit
 1715.          enddo
 1715.       endif
 1627.       _free( t$463 )
 1721.       return
 1721.       end
 1721.       
 1723.       
 1723.       subroutine exchange_fields( u, v, t, q, lps, fgpass_scalar, adr, nscalars, nrec, nsend )
 1723.       t$129 = ibmax
 1723.       t$130 = kmax
 1723.       t$131 = jbmax_ext
 1730.       t$474 = _zla( 0, ibmax )
 1723.       t$475 = _zla( 0, ibmax )
 1730.       t$476 = _zla( 0, kmax )
 1723.       t$477 = _zla( 0, ibmax ) * _zla( 0, kmax )
 1730.       t$478 = _zla( 0, jbmax_ext )
 1723.       t$479 = _zla( 0, ibmax ) * _zla( 0, kmax ) * _zla( 0, jbmax_ext )
 1723.       t$480 = _zla( 0, ibmax ) * _zla( 0, jbmax_ext )
 1723.       t$132 = nscalars
 1723.       t$481 = _zla( 0, ibmax ) * _zla( 0, kmax ) * _zla( 0, jbmax_ext )
 1735.       t$482 = _zla( 0, nscalars )
 1723.       t$483 = _zla( 0, nscalars ) * _zla( 0, ibmax ) * _zla( 0, kmax ) * _zla( 0, jbmax_ext )
 1723.       t$484 = _zla( 0, nscalars ) * _zla( 0, ibmax ) * _zla( 0, kmax ) * _zla( 0, jbmax_ext ) * 2
 1723.       t$135 = nrec
 1741.       t$485 = _zla( 0, nrec )
 1741.       t$488 = 4 * _zla( 0, nrec )
 1723.       t$134 = nsend
 1740.       t$489 = _zla( 0, nsend )
 1740.       t$491 = 4 * _zla( 0, nrec ) + 4 * _zla( 0, nsend )
 1723.       t$492 = 5 * _zla( 0, nsend )
 1739.       t$494 = 4 * _zla( 0, nrec ) + 24 * _zla( 0, nsend )
 1723.       t$486 = int( _alloc( 4 * _zla( 0, nrec ) + 24 * _zla( 0, nsend ) ), 8 )
 1741.       t$487 = t$486
 1740.       t$490 = t$486 + 4 * _zla( 0, nrec )
 1739.       t$493 = t$486 + 4 * _zla( 0, nrec ) + 4 * _zla( 0, nsend )
 1747.       if ( dimrecbuf < (ilrecbuf%base_addr)(nrec, 0) + (isbrec%base_addr)(nrec, 0) ) then
 1748.          dimrecbuf = (ilrecbuf%base_addr)(nrec, 0) + (isbrec%base_addr)(nrec, 0)
 1749.          $_allo_P0(0) = 0x1000000000001L
 1749.          $_allo_P0(1) = loc( bufrec )
 1749.          call __deallocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 1749.          bufrec%header%assoc = 0
 1750.          bufrec%header%a_contig = 1
 1750.          bufrec%dim_1%LB = 1
 1750.          bufrec%dim_1%EX = ( max( 0, dimrecbuf ) )
 1750.          bufrec%dim_1%SM = 1
 1750.          $_allo_P1(0) = 0x1000000000001L
 1750.          $_allo_P1(1) = loc( bufrec )
 1750.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 1750.       endif
 1752.       if ( dimsendbuf < (ilsendbuf%base_addr)(nsend, 0) + (isbsend%base_addr)(nsend, 0) ) then
 1753.          dimsendbuf = (ilsendbuf%base_addr)(nsend, 0) + (isbsend%base_addr)(nsend, 0)
 1754.          $_allo_P2(0) = 0x1000000000001L
 1754.          $_allo_P2(1) = loc( bufsend )
 1754.          call __deallocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 1754.          bufsend%header%assoc = 0
 1755.          bufsend%header%a_contig = 1
 1755.          bufsend%dim_1%LB = 1
 1755.          bufsend%dim_1%EX = ( max( 0, dimsendbuf ) )
 1755.          bufsend%dim_1%SM = 1
 1755.          $_allo_P3(0) = 0x1000000000001L
 1755.          $_allo_P3(1) = loc( bufsend )
 1755.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 1755.       endif
 1757.       comm = 1140850688
 1758.       if ( nrec > 0 ) then
 1758.          $I_L1758_62 = 0
 1758.          do
 1759.             call mpi_irecv( (bufrec%base_addr)((isbrec%base_addr)(1 + $I_L1758_62, 0), 0), (ilrecbuf%base_addr)(1 + $I_L1758_62, 0), 1275070495, (myrecspr%base_addr)(1, 1 + $I_L1758_62, 0), 75, comm, requestr(1 + $I_L1758_62), ierr )
 1761.             $I_L1758_62 = 1 + $I_L1758_62
 1761.             if ( $I_L1758_62 >= nrec ) exit
 1761.          enddo
 1761.       endif
 1762.       $m_S2 = 1
 1763.       if ( nsend > 0 ) then
 1763.          $I_L1763_98 = 0
 1763.          do
 1764.             $ibs_S11 = -1 + (isbsend%base_addr)(1 + $I_L1763_98, 0)
 1765.             $t_S3 = (mysendspr%base_addr)(2, 1 + $I_L1763_98, 0)
 1765.             if ( $t_S3 + -$m_S2 >= 0 ) then
 1765.                $I_L1765_94 = 0
 1765. !dir$ loop_info (automatic) cache_nt( mysendsgr )
 1765.                do
 1766.                   $j_S8 = (mysendsgr%base_addr)(3, $m_S2 + $I_L1765_94, 0)
 1767.                   $t_S5 = (mysendsgr%base_addr)(1, $m_S2 + $I_L1765_94, 0)
 1767.                   $t_S6 = (mysendsgr%base_addr)(2, $m_S2 + $I_L1765_94, 0)
 1767.                   if ( $t_S6 + -$t_S5 >= 0 ) then
 1767.                      $I_L1767_90 = 0
 1767. !dir$ loop_info (automatic) cache_nt( jbperij, ibperij )
 1767.                      do
 1768.                         $jbr_S10 = (jbperij%base_addr)($t_S5 + $I_L1767_90, $j_S8, 0)
 1769.                         $ibr_S9 = (ibperij%base_addr)($t_S5 + $I_L1767_90, $j_S8, 0)
 1770.                         $F_A33 = kmax
 1770.                         if ( kmax > 0 ) then
 1770.                            $I_L1770_66 = 0
 1770. !dir$ ivdep
 1770.                            do
 1770.                               (bufsend%base_addr)($ibs_S11 + $I_L1770_66 + 1, 0) = u($ibr_S9, 1 + $I_L1770_66, $jbr_S10)
 1770.                               $I_L1770_66 = 1 + $I_L1770_66
 1770.                               if ( $I_L1770_66 >= $F_A33 ) exit
 1770.                            enddo
 1770.                         endif
 1771.                         $ibs_S12 = kmax + $ibs_S11
 1772.                         $F_A34 = kmax
 1772.                         if ( $F_A34 > 0 ) then
 1772.                            $I_L1772_68 = 0
 1772. !dir$ ivdep
 1772.                            do
 1772.                               (bufsend%base_addr)(kmax + $ibs_S11 + $I_L1772_68 + 1, 0) = v($ibr_S9, 1 + $I_L1772_68, $jbr_S10)
 1772.                               $I_L1772_68 = 1 + $I_L1772_68
 1772.                               if ( $I_L1772_68 >= $F_A34 ) exit
 1772.                            enddo
 1772.                         endif
 1774.                         $F_A35 = kmax
 1774.                         if ( kmax > 0 ) then
 1774.                            $I_L1774_70 = 0
 1774. !dir$ ivdep
 1774.                            do
 1774.                               (bufsend%base_addr)($ibs_S11 + $I_L1774_70 + 2 * kmax + 1, 0) = t($ibr_S9, 1 + $I_L1774_70, $jbr_S10)
 1774.                               $I_L1774_70 = 1 + $I_L1774_70
 1774.                               if ( $I_L1774_70 >= $F_A35 ) exit
 1774.                            enddo
 1774.                         endif
 1776.                         $F_A36 = kmax
 1776.                         if ( kmax > 0 ) then
 1776.                            $I_L1776_72 = 0
 1776. !dir$ ivdep
 1776.                            do
 1776.                               (bufsend%base_addr)($ibs_S11 + $I_L1776_72 + 3 * kmax + 1, 0) = q($ibr_S9, 1 + $I_L1776_72, $jbr_S10)
 1776.                               $I_L1776_72 = 1 + $I_L1776_72
 1776.                               if ( $I_L1776_72 >= $F_A36 ) exit
 1776.                            enddo
 1776.                         endif
 1777.                         $ibs_S11 = $ibs_S11 + 4 * kmax + 1
 1778.                         (bufsend%base_addr)($ibs_S12 + 3 * kmax + 1, 0) = lps($ibr_S9, $jbr_S10)
 1779.                         if ( nscalars > 0 ) then
 1779.                            $I_L1779_86 = 0
 1779.                            do
 1780.                               $F_A37 = t$130
 1780.                               if ( t$130 > 0 ) then
 1780.                                  $I_L1780_74 = 0
 1780. !dir$ ivdep
 1780.                                  do
 1780.                                     (bufsend%base_addr)($ibs_S11 + $I_L1780_74 + kmax * $I_L1779_86 + 1, 0) = fgpass_scalar($ibr_S9, 1 + $I_L1780_74, $jbr_S10, 1 + $I_L1779_86, adr)
 1780.                                     $I_L1780_74 = 1 + $I_L1780_74
 1780.                                     if ( $I_L1780_74 >= $F_A37 ) exit
 1780.                                  enddo
 1780.                               endif
 1782.                               $I_L1779_86 = 1 + $I_L1779_86
 1779.                               if ( $I_L1779_86 >= nscalars ) exit
 1779.                            enddo
 1781.                            $ibs_S11 = ( $ibs_S11 + kmax * nscalars )
 1781.                         endif
 1783.                         $I_L1767_90 = 1 + $I_L1767_90
 1782.                         if ( $I_L1767_90 >= $t_S6 + -$t_S5 + 1 ) exit
 1782.                      enddo
 1782.                   endif
 1784.                   $I_L1765_94 = 1 + $I_L1765_94
 1783.                   if ( $I_L1765_94 >= $t_S3 + -$m_S2 + 1 ) exit
 1783.                enddo
 1783.             endif
 1785.             call mpi_isend( (bufsend%base_addr)((isbsend%base_addr)(1 + $I_L1763_98, 0), 0), (ilsendbuf%base_addr)(1 + $I_L1763_98, 0), 1275070495, (mysendspr%base_addr)(1, 1 + $I_L1763_98, 0), 75, comm, requests(1 + $I_L1763_98), ierr )
 1787.             $m_S2 = 1 + (mysendspr%base_addr)(2, 1 + $I_L1763_98, 0)
 1788.             $I_L1763_98 = 1 + $I_L1763_98
 1787.             if ( $I_L1763_98 >= nsend ) exit
 1787.          enddo
 1787.       endif
 1789.       if ( nrec > 0 ) then
 1789.          $I_L1789_100 = 0
 1789.          do
 1790.             call mpi_waitany( nrec, requestr(1), index, statu(1), ierr )
 1791.             $kr_S16 = statu(3)
 1792.             $I_L1792_64 = 0
 1792. !dir$ ivdep
 1792.             do
 1793.                if ( (myrecspr%base_addr)(1, 1 + $I_L1792_64, 0) + -$kr_S16 == 0 ) then
 1794.                   ks = ( 1 + $I_L1792_64 )
 1794.                   goto 10
 1794.                endif
 1797.                $I_L1792_64 = 1 + $I_L1792_64
 1796.                if ( $I_L1792_64 >= nrec ) exit
 1796.             enddo
 1796.    10       continue
 1798.             $ibs_S25 = -1 + (isbrec%base_addr)(ks, 0)
 1799.             if ( ks == 1 ) then
 1800.                $m_S18 = 1
 1800.             else
 1802.                $m_S18 = 1 + (myrecspr%base_addr)(2, -1 + ks, 0)
 1802.             endif
 1804.             $t_S19 = (myrecspr%base_addr)(2, ks, 0)
 1804.             if ( $t_S19 + -$m_S18 >= 0 ) then
 1804.                $I_L1804_96 = 0
 1804. !dir$ loop_info (automatic) cache_nt( myrecsgr )
 1804.                do
 1805.                   $j_S24 = (myrecsgr%base_addr)(3, $m_S18 + $I_L1804_96, 0)
 1806.                   $t_S21 = (myrecsgr%base_addr)(1, $m_S18 + $I_L1804_96, 0)
 1806.                   $t_S22 = (myrecsgr%base_addr)(2, $m_S18 + $I_L1804_96, 0)
 1806.                   if ( $t_S22 + -$t_S21 >= 0 ) then
 1806.                      $I_L1806_92 = 0
 1806. !dir$ loop_info (automatic) cache_nt( jbperij, ibperij )
 1806.                      do
 1807.                         $jbr_S27 = (jbperij%base_addr)($t_S21 + $I_L1806_92, $j_S24, 0)
 1808.                         $ibr_S26 = (ibperij%base_addr)($t_S21 + $I_L1806_92, $j_S24, 0)
 1809.                         $F_A38 = kmax
 1809.                         if ( kmax > 0 ) then
 1809.                            $I_L1809_76 = 0
 1809. !dir$ ivdep
 1809.                            do
 1809.                               u($ibr_S26, 1 + $I_L1809_76, $jbr_S27) = (bufrec%base_addr)($ibs_S25 + $I_L1809_76 + 1, 0)
 1809.                               $I_L1809_76 = 1 + $I_L1809_76
 1809.                               if ( $I_L1809_76 >= $F_A38 ) exit
 1809.                            enddo
 1809.                         endif
 1810.                         $ibs_S28 = kmax + $ibs_S25
 1811.                         $F_A39 = kmax
 1811.                         if ( $F_A39 > 0 ) then
 1811.                            $I_L1811_78 = 0
 1811. !dir$ ivdep
 1811.                            do
 1811.                               v($ibr_S26, 1 + $I_L1811_78, $jbr_S27) = (bufrec%base_addr)(kmax + $ibs_S25 + $I_L1811_78 + 1, 0)
 1811.                               $I_L1811_78 = 1 + $I_L1811_78
 1811.                               if ( $I_L1811_78 >= $F_A39 ) exit
 1811.                            enddo
 1811.                         endif
 1813.                         $F_A40 = kmax
 1813.                         if ( kmax > 0 ) then
 1813.                            $I_L1813_80 = 0
 1813. !dir$ ivdep
 1813.                            do
 1813.                               t($ibr_S26, 1 + $I_L1813_80, $jbr_S27) = (bufrec%base_addr)($ibs_S25 + $I_L1813_80 + 2 * kmax + 1, 0)
 1813.                               $I_L1813_80 = 1 + $I_L1813_80
 1813.                               if ( $I_L1813_80 >= $F_A40 ) exit
 1813.                            enddo
 1813.                         endif
 1815.                         $F_A41 = kmax
 1815.                         if ( kmax > 0 ) then
 1815.                            $I_L1815_82 = 0
 1815. !dir$ ivdep
 1815.                            do
 1815.                               q($ibr_S26, 1 + $I_L1815_82, $jbr_S27) = (bufrec%base_addr)($ibs_S25 + $I_L1815_82 + 3 * kmax + 1, 0)
 1815.                               $I_L1815_82 = 1 + $I_L1815_82
 1815.                               if ( $I_L1815_82 >= $F_A41 ) exit
 1815.                            enddo
 1815.                         endif
 1816.                         $ibs_S25 = $ibs_S25 + 4 * kmax + 1
 1817.                         lps($ibr_S26, $jbr_S27) = (bufrec%base_addr)($ibs_S28 + 3 * kmax + 1, 0)
 1818.                         if ( nscalars > 0 ) then
 1818.                            $I_L1818_88 = 0
 1818.                            do
 1819.                               $F_A42 = t$130
 1819.                               if ( t$130 > 0 ) then
 1819.                                  $I_L1819_84 = 0
 1819. !dir$ ivdep
 1819.                                  do
 1819.                                     fgpass_scalar($ibr_S26, 1 + $I_L1819_84, $jbr_S27, 1 + $I_L1818_88, adr) = (bufrec%base_addr)($ibs_S25 + $I_L1819_84 + kmax * $I_L1818_88 + 1, 0)
 1819.                                     $I_L1819_84 = 1 + $I_L1819_84
 1819.                                     if ( $I_L1819_84 >= $F_A42 ) exit
 1819.                                  enddo
 1819.                               endif
 1821.                               $I_L1818_88 = 1 + $I_L1818_88
 1818.                               if ( $I_L1818_88 >= nscalars ) exit
 1818.                            enddo
 1820.                            $ibs_S25 = ( $ibs_S25 + kmax * nscalars )
 1820.                         endif
 1822.                         $I_L1806_92 = 1 + $I_L1806_92
 1821.                         if ( $I_L1806_92 >= $t_S22 + -$t_S21 + 1 ) exit
 1821.                      enddo
 1821.                   endif
 1823.                   $I_L1804_96 = 1 + $I_L1804_96
 1822.                   if ( $I_L1804_96 >= $t_S19 + -$m_S18 + 1 ) exit
 1822.                enddo
 1822.             endif
 1824.             $I_L1789_100 = 1 + $I_L1789_100
 1823.             if ( $I_L1789_100 >= nrec ) exit
 1823.          enddo
 1823.       endif
 1825.       call mpi_waitall( nsend, requests(1), status(1, 1), ierr )
 1723.       _free( t$486 )
 1827.       return
 1827.       end
 1827.       
 1830.       
 1830.       subroutine exchange_winds( u, v, w, um, vm, nrec, nsend )
 1830.       t$136 = ibmax
 1830.       t$137 = kmax
 1830.       t$138 = jbmax_ext
 1834.       t$495 = _zla( 0, ibmax )
 1830.       t$496 = _zla( 0, ibmax )
 1834.       t$497 = _zla( 0, kmax )
 1830.       t$498 = _zla( 0, ibmax ) * _zla( 0, kmax )
 1834.       t$499 = _zla( 0, jbmax_ext )
 1830.       t$500 = _zla( 0, ibmax ) * _zla( 0, kmax ) * _zla( 0, jbmax_ext )
 1830.       t$501 = _zla( 0, ibmax ) * _zla( 0, jbmax_ext )
 1830.       t$141 = nrec
 1843.       t$502 = _zla( 0, nrec )
 1843.       t$505 = 4 * _zla( 0, nrec )
 1830.       t$140 = nsend
 1842.       t$506 = _zla( 0, nsend )
 1842.       t$508 = 4 * _zla( 0, nrec ) + 4 * _zla( 0, nsend )
 1830.       t$509 = 5 * _zla( 0, nsend )
 1841.       t$511 = 4 * _zla( 0, nrec ) + 24 * _zla( 0, nsend )
 1830.       t$503 = int( _alloc( 4 * _zla( 0, nrec ) + 24 * _zla( 0, nsend ) ), 8 )
 1843.       t$504 = t$503
 1842.       t$507 = t$503 + 4 * _zla( 0, nrec )
 1841.       t$510 = t$503 + 4 * _zla( 0, nrec ) + 4 * _zla( 0, nsend )
 1849.       comm = 1140850688
 1850.       if ( dimrecbuf < (ilrecbuf%base_addr)(nrec, 0) + (isbrec%base_addr)(nrec, 0) ) then
 1851.          dimrecbuf = (ilrecbuf%base_addr)(nrec, 0) + (isbrec%base_addr)(nrec, 0)
 1852.          $_allo_P0(0) = 0x1000000000001L
 1852.          $_allo_P0(1) = loc( bufrec )
 1852.          call __deallocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 1852.          bufrec%header%assoc = 0
 1853.          bufrec%header%a_contig = 1
 1853.          bufrec%dim_1%LB = 1
 1853.          bufrec%dim_1%EX = ( max( 0, dimrecbuf ) )
 1853.          bufrec%dim_1%SM = 1
 1853.          $_allo_P1(0) = 0x1000000000001L
 1853.          $_allo_P1(1) = loc( bufrec )
 1853.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 1853.       endif
 1855.       if ( dimsendbuf < (ilsendbuf%base_addr)(nsend, 0) + (isbsend%base_addr)(nsend, 0) ) then
 1856.          dimsendbuf = (ilsendbuf%base_addr)(nsend, 0) + (isbsend%base_addr)(nsend, 0)
 1857.          $_allo_P2(0) = 0x1000000000001L
 1857.          $_allo_P2(1) = loc( bufsend )
 1857.          call __deallocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 1857.          bufsend%header%assoc = 0
 1858.          bufsend%header%a_contig = 1
 1858.          bufsend%dim_1%LB = 1
 1858.          bufsend%dim_1%EX = ( max( 0, dimsendbuf ) )
 1858.          bufsend%dim_1%SM = 1
 1858.          $_allo_P3(0) = 0x1000000000001L
 1858.          $_allo_P3(1) = loc( bufsend )
 1858.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 1858.       endif
 1861.       if ( nrec > 0 ) then
 1861.          $I_L1861_50 = 0
 1861.          do
 1862.             call mpi_irecv( (bufrec%base_addr)((isbrec%base_addr)(1 + $I_L1861_50, 0), 0), (ilrecbuf%base_addr)(1 + $I_L1861_50, 0), 1275070495, (myrecspr%base_addr)(1, 1 + $I_L1861_50, 0), 76, comm, requestr(1 + $I_L1861_50), ierr )
 1864.             $I_L1861_50 = 1 + $I_L1861_50
 1864.             if ( $I_L1861_50 >= nrec ) exit
 1864.          enddo
 1864.       endif
 1865.       $m_S2 = 1
 1866.       if ( nsend > 0 ) then
 1866.          $I_L1866_74 = 0
 1866.          do
 1867.             $ibs_S11 = -1 + (isbsend%base_addr)(1 + $I_L1866_74, 0)
 1868.             $t_S3 = (mysendspr%base_addr)(2, 1 + $I_L1866_74, 0)
 1868.             if ( $t_S3 + -$m_S2 >= 0 ) then
 1868.                $I_L1868_70 = 0
 1868. !dir$ loop_info (automatic) cache_nt( mysendsgr )
 1868.                do
 1869.                   $j_S8 = (mysendsgr%base_addr)(3, $m_S2 + $I_L1868_70, 0)
 1870.                   $t_S5 = (mysendsgr%base_addr)(1, $m_S2 + $I_L1868_70, 0)
 1870.                   $t_S6 = (mysendsgr%base_addr)(2, $m_S2 + $I_L1868_70, 0)
 1870.                   if ( $t_S6 + -$t_S5 >= 0 ) then
 1870.                      $I_L1870_66 = 0
 1870. !dir$ loop_info (automatic) cache_nt( jbperij, ibperij )
 1870.                      do
 1871.                         $jbr_S10 = (jbperij%base_addr)($t_S5 + $I_L1870_66, $j_S8, 0)
 1872.                         $ibr_S9 = (ibperij%base_addr)($t_S5 + $I_L1870_66, $j_S8, 0)
 1873.                         $F_A33 = t$137
 1873.                         if ( t$137 > 0 ) then
 1873.                            $I_L1873_54 = 0
 1873. !dir$ ivdep
 1873.                            do
 1873.                               (bufsend%base_addr)($ibs_S11 + $I_L1873_54 + 2 * $I_L1870_66 + kmax * $I_L1870_66 * 3 + 1, 0) = u($ibr_S9, 1 + $I_L1873_54, $jbr_S10)
 1873.                               $I_L1873_54 = 1 + $I_L1873_54
 1873.                               if ( $I_L1873_54 >= $F_A33 ) exit
 1873.                            enddo
 1873.                         endif
 1875.                         $F_A34 = t$137
 1875.                         if ( t$137 > 0 ) then
 1875.                            $I_L1875_56 = 0
 1875. !dir$ ivdep
 1875.                            do
 1875.                               (bufsend%base_addr)(kmax + $ibs_S11 + $I_L1875_56 + 2 * $I_L1870_66 + kmax * $I_L1870_66 * 3 + 1, 0) = v($ibr_S9, 1 + $I_L1875_56, $jbr_S10)
 1875.                               $I_L1875_56 = 1 + $I_L1875_56
 1875.                               if ( $I_L1875_56 >= $F_A34 ) exit
 1875.                            enddo
 1875.                         endif
 1877.                         $F_A35 = t$137
 1877.                         if ( t$137 > 0 ) then
 1877.                            $I_L1877_58 = 0
 1877. !dir$ ivdep
 1877.                            do
 1877.                               (bufsend%base_addr)($ibs_S11 + $I_L1877_58 + 2 * kmax + 2 * $I_L1870_66 + kmax * $I_L1870_66 * 3 + 1, 0) = w($ibr_S9, 1 + $I_L1877_58, $jbr_S10)
 1877.                               $I_L1877_58 = 1 + $I_L1877_58
 1877.                               if ( $I_L1877_58 >= $F_A35 ) exit
 1877.                            enddo
 1877.                         endif
 1879.                         (bufsend%base_addr)($ibs_S11 + 3 * kmax + 2 * $I_L1870_66 + kmax * $I_L1870_66 * 3 + 1, 0) = um($ibr_S9, $jbr_S10)
 1881.                         (bufsend%base_addr)($ibs_S11 + 3 * kmax + 2 * $I_L1870_66 + kmax * $I_L1870_66 * 3 + 2, 0) = vm($ibr_S9, $jbr_S10)
 1882.                         $I_L1870_66 = 1 + $I_L1870_66
 1870.                         if ( $I_L1870_66 >= $t_S6 + -$t_S5 + 1 ) exit
 1870.                      enddo
 1880.                      $ibs_S11 = ( $ibs_S11 + 2 * $t_S6 + -2 * $t_S5 + 3 * kmax + $t_S5 * kmax * -3 + $t_S6 * kmax * 3 + 2 )
 1880.                   endif
 1883.                   $I_L1868_70 = 1 + $I_L1868_70
 1882.                   if ( $I_L1868_70 >= $t_S3 + -$m_S2 + 1 ) exit
 1882.                enddo
 1882.             endif
 1885.             t$1078 = $ibs_S11 + -(isbsend%base_addr)(1 + $I_L1866_74, 0) + 1
 1885.             call mpi_isend( (bufsend%base_addr)((isbsend%base_addr)(1 + $I_L1866_74, 0), 0), t$1078, 1275070495, (mysendspr%base_addr)(1, 1 + $I_L1866_74, 0), 76, comm, requests(1 + $I_L1866_74), ierr )
 1887.             $m_S2 = 1 + (mysendspr%base_addr)(2, 1 + $I_L1866_74, 0)
 1888.             $I_L1866_74 = 1 + $I_L1866_74
 1887.             if ( $I_L1866_74 >= nsend ) exit
 1887.          enddo
 1887.       endif
 1889.       if ( nrec > 0 ) then
 1889.          $I_L1889_76 = 0
 1889.          do
 1890.             call mpi_waitany( nrec, requestr(1), index, statu(1), ierr )
 1891.             $kr_S15 = statu(3)
 1893.             $I_L1893_52 = 0
 1893. !dir$ ivdep
 1893.             do
 1894.                if ( (myrecspr%base_addr)(1, 1 + $I_L1893_52, 0) + -$kr_S15 == 0 ) then
 1895.                   ks = ( 1 + $I_L1893_52 )
 1895.                   goto 10
 1895.                endif
 1898.                $I_L1893_52 = 1 + $I_L1893_52
 1897.                if ( $I_L1893_52 >= nrec ) exit
 1897.             enddo
 1897.    10       continue
 1899.             $ibs_S24 = -1 + (isbrec%base_addr)(ks, 0)
 1900.             if ( ks == 1 ) then
 1901.                $m_S17 = 1
 1901.             else
 1903.                $m_S17 = 1 + (myrecspr%base_addr)(2, -1 + ks, 0)
 1903.             endif
 1905.             $t_S18 = (myrecspr%base_addr)(2, ks, 0)
 1905.             if ( $t_S18 + -$m_S17 >= 0 ) then
 1905.                $I_L1905_72 = 0
 1905. !dir$ loop_info (automatic) cache_nt( myrecsgr )
 1905.                do
 1906.                   $j_S23 = (myrecsgr%base_addr)(3, $m_S17 + $I_L1905_72, 0)
 1907.                   $t_S20 = (myrecsgr%base_addr)(1, $m_S17 + $I_L1905_72, 0)
 1907.                   $t_S21 = (myrecsgr%base_addr)(2, $m_S17 + $I_L1905_72, 0)
 1907.                   if ( $t_S21 + -$t_S20 >= 0 ) then
 1907.                      $I_L1907_68 = 0
 1907. !dir$ loop_info (automatic) cache_nt( jbperij, ibperij )
 1907.                      do
 1908.                         $jbr_S26 = (jbperij%base_addr)($t_S20 + $I_L1907_68, $j_S23, 0)
 1909.                         $ibr_S25 = (ibperij%base_addr)($t_S20 + $I_L1907_68, $j_S23, 0)
 1910.                         $F_A36 = t$137
 1910.                         if ( t$137 > 0 ) then
 1910.                            $I_L1910_60 = 0
 1910. !dir$ ivdep
 1910.                            do
 1910.                               u($ibr_S25, 1 + $I_L1910_60, $jbr_S26) = (bufrec%base_addr)($ibs_S24 + $I_L1910_60 + 2 * $I_L1907_68 + kmax * $I_L1907_68 * 3 + 1, 0)
 1910.                               $I_L1910_60 = 1 + $I_L1910_60
 1910.                               if ( $I_L1910_60 >= $F_A36 ) exit
 1910.                            enddo
 1910.                         endif
 1912.                         $F_A37 = t$137
 1912.                         if ( t$137 > 0 ) then
 1912.                            $I_L1912_62 = 0
 1912. !dir$ ivdep
 1912.                            do
 1912.                               v($ibr_S25, 1 + $I_L1912_62, $jbr_S26) = (bufrec%base_addr)(kmax + $ibs_S24 + $I_L1912_62 + 2 * $I_L1907_68 + kmax * $I_L1907_68 * 3 + 1, 0)
 1912.                               $I_L1912_62 = 1 + $I_L1912_62
 1912.                               if ( $I_L1912_62 >= $F_A37 ) exit
 1912.                            enddo
 1912.                         endif
 1914.                         $F_A38 = t$137
 1914.                         if ( t$137 > 0 ) then
 1914.                            $I_L1914_64 = 0
 1914. !dir$ ivdep
 1914.                            do
 1914.                               w($ibr_S25, 1 + $I_L1914_64, $jbr_S26) = (bufrec%base_addr)($ibs_S24 + $I_L1914_64 + 2 * kmax + 2 * $I_L1907_68 + kmax * $I_L1907_68 * 3 + 1, 0)
 1914.                               $I_L1914_64 = 1 + $I_L1914_64
 1914.                               if ( $I_L1914_64 >= $F_A38 ) exit
 1914.                            enddo
 1914.                         endif
 1916.                         um($ibr_S25, $jbr_S26) = (bufrec%base_addr)($ibs_S24 + 3 * kmax + 2 * $I_L1907_68 + kmax * $I_L1907_68 * 3 + 1, 0)
 1918.                         vm($ibr_S25, $jbr_S26) = (bufrec%base_addr)($ibs_S24 + 3 * kmax + 2 * $I_L1907_68 + kmax * $I_L1907_68 * 3 + 2, 0)
 1919.                         $I_L1907_68 = 1 + $I_L1907_68
 1907.                         if ( $I_L1907_68 >= $t_S21 + -$t_S20 + 1 ) exit
 1907.                      enddo
 1917.                      $ibs_S24 = ( $ibs_S24 + 3 * kmax + 2 * $t_S21 + -2 * $t_S20 + $t_S20 * kmax * -3 + $t_S21 * kmax * 3 + 2 )
 1917.                   endif
 1920.                   $I_L1905_72 = 1 + $I_L1905_72
 1919.                   if ( $I_L1905_72 >= $t_S18 + -$m_S17 + 1 ) exit
 1919.                enddo
 1919.             endif
 1921.             $I_L1889_76 = 1 + $I_L1889_76
 1920.             if ( $I_L1889_76 >= nrec ) exit
 1920.          enddo
 1920.       endif
 1922.       call mpi_waitall( nsend, requests(1), status(1, 1), ierr )
 1830.       _free( t$503 )
 1924.       return
 1924.       end
 1924.       
  130.       
  130.       module communications
 1926.       return
 1926.       end
 1926.       
