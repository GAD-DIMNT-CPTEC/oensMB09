       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  Communications.f90
       !        File                  :  Communications.opt
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
  138.       
  138.       subroutine set_communic_buffer
  142.       $ndim_S0 = 16 * kmax * jmax * mmax / maxnodes
  143.       dimrecbuf = $ndim_S0
  144.       dimsendbuf = $ndim_S0
  145.       bufrec%header%a_contig = 1
  145.       bufrec%dim_1%LB = 1
  145.       bufrec%dim_1%EX = _zla( 0, $ndim_S0 )
  145.       bufrec%dim_1%SM = 1
  145.       $_allo_P0(0) = 0x1000000000001L
  145.       $_allo_P0(1) = loc( bufrec )
  145.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
  146.       bufsend%header%a_contig = 1
  146.       bufsend%dim_1%LB = 1
  146.       bufsend%dim_1%EX = _zla( 0, $ndim_S0 )
  146.       bufsend%dim_1%SM = 1
  146.       $_allo_P1(0) = 0x1000000000001L
  146.       $_allo_P1(1) = loc( bufsend )
  146.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
  148.       return
  148.       end
  148.       
  150.       
  150.       subroutine collect_grid_red( field, fieldglob )
  150.       t$3 = ( ibmax * jbmax )
  154.       t$230 = _zla( 0, ( ibmax * jbmax ) )
  150.       t$4 = ijmax
  155.       t$231 = _zla( 0, ijmax )
  150.       t$5 = ( -1 + maxnodes )
  150.       t$232 = maxnodes
  163.       t$233 = _zla( 0, maxnodes )
  163.       t$236 = 4 * _zla( 0, maxnodes )
  162.       t$238 = 8 * _zla( 0, maxnodes )
  150.       t$234 = int( _alloc( 8 * _zla( 0, maxnodes ) ), 8 )
  163.       t$235 = t$234
  162.       t$237 = t$234 + 4 * _zla( 0, maxnodes )
  166.       comm = 1140850688
  167.       if ( myid /= 0 ) then
  168.          call mpi_isend( field(1), (pointsinproc%base_addr)(myid, 0), 1275070495, 0, 91, comm, request, ierr )
  170.          call mpi_wait( request, status(1), ierr )
  170.       else
  172.          requestr(0) = 738197504
  173.          ini(0) = 1
  174.          $ij_S0 = 1 + (pointsinproc%base_addr)(0, 0)
  175.          $t_S2 = -1 + maxnodes
  175.          if ( -1 + maxnodes > 0 ) then
  175.             $I_L175_27 = 0
  175.             do
  176.                ini(1 + $I_L175_27) = $ij_S0
  177.                t$588 = ( 1 + $I_L175_27 )
  177.                call mpi_irecv( (bufrec%base_addr)($ij_S0, 0), (pointsinproc%base_addr)(1 + $I_L175_27, 0), 1275070495, t$588, 91, comm, requestr(1 + $I_L175_27), ierr )
  179.                $ij_S0 = $ij_S0 + (pointsinproc%base_addr)(1 + $I_L175_27, 0)
  180.                $I_L175_27 = 1 + $I_L175_27
  179.                if ( $I_L175_27 >= $t_S2 ) exit
  179.             enddo
  179.          endif
  181.          $F_A33 = (pointsinproc%base_addr)(0, 0)
  181.          if ( (pointsinproc%base_addr)(0, 0) > 0 ) then
  181.             $SC_bufrec_I11 = bufrec%dim_1%EX
  181.             $SC_bufrec_I12 = bufrec%dim_1%LB
  181.             $I_L181_33 = 0
  181. !dir$ ivdep
  181.             do
  181.                (bufrec%base_addr)(1 + $I_L181_33, 0) = field(1 + $I_L181_33)
  181.                $I_L181_33 = 1 + $I_L181_33
  181.                if ( $I_L181_33 >= $F_A33 ) exit
  181.             enddo
  181.          endif
  182.          $t_S4 = -1 + maxnodes
  182.          if ( -1 + maxnodes > 0 ) then
  182.             $I_L182_29 = 0
  182.             do
  183.                t$588 = -1 + maxnodes
  183.                call mpi_waitany( t$588, requestr(1), index, status(1), ierr )
  184.                $I_L182_29 = 1 + $I_L182_29
  184.                if ( $I_L182_29 >= $t_S4 ) exit
  184.             enddo
  184.          endif
  185.          $ii_S9 = 1
  186.          if ( jmax > 0 ) then
  188.             $SC_gridmap_I2 = gridmap%dim_1%EX
  188.             $SC_gridmap_I3 = gridmap%dim_1%LB
  188.             $SC_gridmap_I5 = gridmap%dim_2%SM
  188.             $SC_gridmap_I4 = gridmap%dim_2%EX
  188.             $SC_gridmap_I6 = gridmap%dim_2%LB
  187.             $SC_imaxperj_I0 = imaxperj%dim_1%EX
  187.             $SC_imaxperj_I1 = imaxperj%dim_1%LB
  189.             $SC_bufrec_I7 = bufrec%dim_1%EX
  189.             $SC_bufrec_I8 = bufrec%dim_1%LB
  186.             $I_L186_35 = 0
  186.             do
  187.                $t_S6 = (imaxperj%base_addr)(1 + $I_L186_35, 0)
  187.                if ( $t_S6 > 0 ) then
  187.                   $I_L187_31 = 0
  187. !dir$ unroll 4
  187.                   do
  188.                      $ij_S8 = (gridmap%base_addr)(1 + $I_L187_31, 1 + $I_L186_35, 0)
  189.                      fieldglob($ii_S9 + $I_L187_31) = (bufrec%base_addr)(ini($ij_S8), 0)
  191.                      ini($ij_S8) = 1 + ini($ij_S8)
  192.                      $I_L187_31 = 1 + $I_L187_31
  187.                      if ( $I_L187_31 >= $t_S6 ) exit
  187.                   enddo
  190.                   $ii_S9 = $t_S6 + $ii_S9
  190.                endif
  193.                $I_L186_35 = 1 + $I_L186_35
  192.                if ( $I_L186_35 >= jmax ) exit
  192.             enddo
  192.          endif
  192.       endif
  150.       _free( t$234 )
  196.       return
  196.       end
  196.       
  199.       
  199.       subroutine collect_grid_his( field, fieldglob, ngpts, ngptslocal, nproc, nf, ngptsperproc, mapglobal )
  199.       t$9 = ngptslocal
  199.       t$10 = nf
  207.       t$239 = _zla( 0, ngptslocal )
  199.       t$240 = _zla( 0, ngptslocal )
  207.       t$241 = _zla( 0, nf )
  199.       t$242 = _zla( 0, ngptslocal ) * _zla( 0, nf )
  199.       t$8 = ngpts
  209.       t$243 = _zla( 0, ngpts )
  199.       t$244 = _zla( 0, ngpts )
  199.       t$245 = _zla( 0, nf ) * _zla( 0, ngpts )
  199.       t$11 = ( -1 + maxnodes )
  199.       t$246 = maxnodes
  208.       t$247 = _zla( 0, maxnodes )
  199.       t$15 = maxnodes
  199.       t$248 = 1 + maxnodes
  217.       t$249 = _zla( 0, 1 + maxnodes )
  217.       t$252 = 4 * _zla( 0, 1 + maxnodes )
  216.       t$254 = 4 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, maxnodes )
  199.       t$250 = int( _alloc( 4 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, maxnodes ) ), 8 )
  217.       t$251 = t$250
  216.       t$253 = t$250 + 4 * _zla( 0, 1 + maxnodes )
  220.       if ( dimrecbuf < nf * ngpts ) then
  221.          dimrecbuf = nf * ngpts
  222.          $_allo_P0(0) = 0x1000000000001L
  222.          $_allo_P0(1) = loc( bufrec )
  222.          call __deallocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
  222.          bufrec%header%assoc = 0
  223.          bufrec%header%a_contig = 1
  223.          bufrec%dim_1%LB = 1
  223.          bufrec%dim_1%EX = _zla( 0, ( nf * ngpts ) )
  223.          bufrec%dim_1%SM = 1
  223.          $_allo_P1(0) = 0x1000000000001L
  223.          $_allo_P1(1) = loc( bufrec )
  223.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
  223.       endif
  225.       comm = 1140850688
  226.       if ( nproc + -myid /= 0 ) then
  227.          t$598 = ngptslocal * nf
  227.          call mpi_isend( field(1, 1), t$598, 1275070495, nproc, 92, comm, request, ierr )
  228.          call mpi_wait( request, status(1), ierr )
  228.       else
  230.          requestr(nproc) = 738197504
  231.          ini(0) = 0
  232.          $ij_S1 = 1
  233.          $t_S2 = -1 + maxnodes
  233.          if ( maxnodes > 0 ) then
  233.             $I_L233_15 = 0
  233.             do
  234.                if ( $I_L233_15 + -nproc /= 0 ) then
  235.                   t$598 = nf * ngptsperproc($I_L233_15)
  235.                   t$602 = $I_L233_15
  235.                   call mpi_irecv( (bufrec%base_addr)($ij_S1, 0), t$598, 1275070495, t$602, 92, comm, requestr($I_L233_15), ierr )
  235.                endif
  238.                ini(1 + $I_L233_15) = ngptsperproc($I_L233_15) + ini($I_L233_15)
  239.                $ij_S1 = $ij_S1 + nf * ngptsperproc($I_L233_15)
  240.                $I_L233_15 = 1 + $I_L233_15
  237.                if ( $I_L233_15 >= 1 + $t_S2 ) exit
  237.             enddo
  237.          endif
  241.          $i1_S4 = 1 + ini(nproc)
  243.          $F_A33 = nf
  243.          $F_A34 = ngptslocal
  243.          if ( and( -$F_A34, -$F_A33 ) < 0 ) then
  243.             $SI_A2_G1 = 0
  243.             do
  243.                $SI_A1_G4 = 0
  243.                do
  243.                   $I_L243_26 = 0
  243. !dir$ shortloop16
  243. !dir$ blocking_size( 4, 4 )
  243.                   do
  243.                      $I_L243_23 = 0
  243. !dir$ ivdep
  243. !dir$ blocking_size( 256, 256 )
  243.                      do
  243.                         fieldglob(mapglobal($i1_S4 + $I_L243_23 + 256 * $SI_A1_G4), 1 + $I_L243_26 + 4 * $SI_A2_G1) = field(1 + $I_L243_23 + 256 * $SI_A1_G4, 1 + $I_L243_26 + 4 * $SI_A2_G1)
  243.                         $I_L243_23 = 1 + $I_L243_23
  243.                         if ( $I_L243_23 >= min( $F_A34, 256 + 256 * $SI_A1_G4 ) + -256 * $SI_A1_G4 ) exit
  243.                      enddo
  243.                      $I_L243_26 = 1 + $I_L243_26
  243.                      if ( $I_L243_26 >= min( $F_A33, 4 + 4 * $SI_A2_G1 ) + -4 * $SI_A2_G1 ) exit
  243.                   enddo
  243.                   $SI_A1_G4 = 1 + $SI_A1_G4
  243.                   if ( $SI_A1_G4 >= _rsh( 255 + $F_A34, 8 ) ) exit
  243.                enddo
  243.                $SI_A2_G1 = 1 + $SI_A2_G1
  243.                if ( $SI_A2_G1 >= _rsh( 3 + $F_A33, 2 ) ) exit
  243.             enddo
  243.          endif
  244.          $t_S9 = -1 + maxnodes
  244.          if ( -1 + maxnodes > 0 ) then
  249.             if ( nf > 0 ) then
  244.                $I_L244_21 = 0
  244.                do
  245.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  246.                   $ij_S5 = status(3)
  247.                   $i1_S6 = nf * ini($ij_S5)
  250.                   $SC_ini_I3 = ini(1 + $ij_S5)
  250.                   $SC_ngptsperproc_I2 = ngptsperproc($ij_S5)
  250.                   $SC_ini_I4 = ini($ij_S5)
  250.                   $SC_bufrec_I0 = bufrec%dim_1%EX
  250.                   $SC_bufrec_I1 = bufrec%dim_1%LB
  249.                   $I_L249_17 = 0
  249.                   do
  250.                      $F_A35 = ( $SC_ini_I3 + -$SC_ini_I4 )
  250.                      if ( $SC_ini_I3 + -$SC_ini_I4 > 0 ) then
  250.                         $I_A1 = 0
  250. !dir$ ivdep
  250.                         do
  250.                            fieldglob(mapglobal(1 + $SC_ini_I4 + $I_A1), 1 + $I_L249_17) = (bufrec%base_addr)(1 + $i1_S6 + $I_A1 + $SC_ngptsperproc_I2 * $I_L249_17, 0)
  250.                            $I_A1 = 1 + $I_A1
  250.                            if ( $I_A1 >= $F_A35 ) exit
  250.                         enddo
  250.                      endif
  253.                      $I_L249_17 = 1 + $I_L249_17
  249.                      if ( $I_L249_17 >= nf ) exit
  249.                   enddo
  254.                   $I_L244_21 = 1 + $I_L244_21
  253.                   if ( $I_L244_21 >= $t_S9 ) exit
  253.                enddo
  253.             else
  244.                $I_L244_19 = 0
  244.                do
  245.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  254.                   $I_L244_19 = 1 + $I_L244_19
  253.                   if ( $I_L244_19 >= $t_S9 ) exit
  253.                enddo
  253.             endif
  253.          endif
  253.       endif
  199.       _free( t$250 )
  257.       return
  257.       end
  257.       
  260.       
  260.       subroutine collect_grid_sur( field, fieldglob, nproc )
  260.       t$17 = imax
  260.       t$18 = myjmax_d
  263.       t$255 = _zla( 0, imax )
  260.       t$256 = _zla( 0, imax )
  263.       t$257 = _zla( 0, myjmax_d )
  260.       t$258 = _zla( 0, imax ) * _zla( 0, myjmax_d )
  260.       t$20 = jmax
  264.       t$259 = _zla( 0, jmax )
  260.       t$260 = _zla( 0, imax ) * _zla( 0, jmax )
  260.       t$21 = ( -1 + maxnodes )
  260.       t$261 = maxnodes
  270.       t$262 = _zla( 0, maxnodes )
  270.       t$265 = 4 * _zla( 0, maxnodes )
  260.       t$23 = maxnodes
  271.       t$266 = _zla( 0, maxnodes )
  260.       t$267 = 5 * _zla( 0, maxnodes )
  271.       t$269 = 24 * _zla( 0, maxnodes )
  260.       t$263 = int( _alloc( 24 * _zla( 0, maxnodes ) ), 8 )
  270.       t$264 = t$263
  271.       t$268 = t$263 + 4 * _zla( 0, maxnodes )
  273.       comm = 1140850688
  274.       if ( nproc + -myid == 0 ) then
  280.          $F_A33 = maxnodes
  280.          if ( maxnodes > 0 ) then
  280.             $I_A1 = 0
  280. !dir$ ivdep
  280.             do
  280.                requestr($I_A1) = 738197504
  280.                $I_A1 = 1 + $I_A1
  280.                if ( $I_A1 >= $F_A33 ) exit
  280.             enddo
  280.          endif
  281.          if ( myjmax_d > 0 ) then
  281.             $F_A34 = myjmax_d
  281.             $F_A35 = imax
  281.             if ( and( -$F_A35, -$F_A34 ) < 0 ) then
  281.                $I_A2 = 0
  281.                do
  281.                   $I_A1 = 0
  281. !dir$ ivdep
  281.                   do
  281.                      fieldglob(1 + $I_A1, myfirstlat_diag + $I_A2) = field(1 + $I_A1, 1 + $I_A2)
  281.                      $I_A1 = 1 + $I_A1
  281.                      if ( $I_A1 >= $F_A35 ) exit
  281.                   enddo
  281.                   $I_A2 = 1 + $I_A2
  281.                   if ( $I_A2 >= $F_A34 ) exit
  281.                enddo
  281.             endif
  281.          endif
  282.          $ij_S1 = 1
  283.          $t_S2 = -1 + maxnodes
  283.          if ( maxnodes > 0 ) then
  283.             $I_L283_4 = 0
  283.             do
  284.                if ( $I_L283_4 + -nproc /= 0 ) then
  284.                   if ( (nlatsinproc_d%base_addr)($I_L283_4, 0) > 0 ) then
  285.                      t$609 = imax * (nlatsinproc_d%base_addr)($I_L283_4, 0)
  285.                      t$613 = $I_L283_4
  285.                      call mpi_irecv( fieldglob(1, $ij_S1), t$609, 1275070495, t$613, 93, comm, requestr($I_L283_4), ierr )
  285.                   endif
  285.                endif
  288.                $ij_S1 = $ij_S1 + (nlatsinproc_d%base_addr)($I_L283_4, 0)
  289.                $I_L283_4 = 1 + $I_L283_4
  287.                if ( $I_L283_4 >= 1 + $t_S2 ) exit
  287.             enddo
  287.          endif
  290.          call mpi_waitall( maxnodes, requestr(0), status(1, 1), ierr )
  275.       else if ( myjmax_d > 0 ) then
  276.          t$609 = imax * myjmax_d
  276.          call mpi_isend( field(1, 1), t$609, 1275070495, nproc, 93, comm, request, ierr )
  277.          call mpi_wait( request, status(1, 1), ierr )
  277.       endif
  260.       _free( t$263 )
  293.       return
  293.       end
  293.       
  296.       
  296.       subroutine collect_grid_d( field, fieldglob, levs, nproc )
  296.       t$24 = imax
  296.       t$25 = myjmax_d
  296.       t$26 = levs
  300.       t$270 = _zla( 0, imax )
  296.       t$271 = _zla( 0, imax )
  300.       t$272 = _zla( 0, myjmax_d )
  296.       t$273 = _zla( 0, imax ) * _zla( 0, myjmax_d )
  300.       t$274 = _zla( 0, levs )
  296.       t$275 = _zla( 0, levs ) * _zla( 0, imax ) * _zla( 0, myjmax_d )
  296.       t$28 = jmax
  301.       t$276 = _zla( 0, jmax )
  296.       t$277 = _zla( 0, imax ) * _zla( 0, jmax )
  296.       t$278 = _zla( 0, levs ) * _zla( 0, imax ) * _zla( 0, jmax )
  296.       t$31 = maxnodes
  296.       t$279 = 1 + maxnodes
  308.       t$280 = _zla( 0, 1 + maxnodes )
  308.       t$283 = 4 * _zla( 0, 1 + maxnodes )
  296.       t$30 = ( -1 + maxnodes )
  296.       t$284 = maxnodes
  307.       t$285 = _zla( 0, maxnodes )
  307.       t$287 = 4 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, maxnodes )
  296.       t$281 = int( _alloc( 4 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, maxnodes ) ), 8 )
  308.       t$282 = t$281
  307.       t$286 = t$281 + 4 * _zla( 0, 1 + maxnodes )
  312.       comm = 1140850688
  313.       if ( nproc + -myid == 0 ) then
  319.          $F_A33 = maxnodes
  319.          if ( maxnodes > 0 ) then
  319.             $I_A1 = 0
  319. !dir$ ivdep
  319.             do
  319.                requestr($I_A1) = 738197504
  319.                $I_A1 = 1 + $I_A1
  319.                if ( $I_A1 >= $F_A33 ) exit
  319.             enddo
  319.          endif
  320.          if ( myjmax_d > 0 ) then
  320.             $F_A34 = levs
  320.             $F_A35 = myjmax_d
  320.             $F_A36 = imax
  320.             if ( and( and( -$F_A35, -$F_A34 ), -$F_A36 ) < 0 ) then
  320.                $I_A3 = 0
  320.                do
  320.                   $I_A2 = 0
  320.                   do
  320.                      $I_A1 = 0
  320. !dir$ ivdep
  320. !dir$ loop_info (automatic) cache_nt( field )
  320.                      do
  320.                         fieldglob(1 + $I_A1, myfirstlat_diag + $I_A2, 1 + $I_A3) = field(1 + $I_A1, 1 + $I_A2, 1 + $I_A3)
  320.                         $I_A1 = 1 + $I_A1
  320.                         if ( $I_A1 >= $F_A36 ) exit
  320.                      enddo
  320.                      $I_A2 = 1 + $I_A2
  320.                      if ( $I_A2 >= $F_A35 ) exit
  320.                   enddo
  320.                   $I_A3 = 1 + $I_A3
  320.                   if ( $I_A3 >= $F_A34 ) exit
  320.                enddo
  320.             endif
  320.          endif
  321.          $ij_S0 = 1
  322.          $nr_S2 = 0
  323.          $t_S3 = -1 + maxnodes
  323.          if ( maxnodes > 0 ) then
  323.             $I_L323_20 = 0
  323.             do
  324.                ini($I_L323_20) = $ij_S0
  325.                if ( $I_L323_20 + -nproc /= 0 ) then
  325.                   if ( (nlatsinproc_d%base_addr)($I_L323_20, 0) > 0 ) then
  326.                      t$614 = imax * levs * (nlatsinproc_d%base_addr)($I_L323_20, 0)
  327.                      t$618 = $I_L323_20
  326.                      call mpi_irecv( (bufrec%base_addr)($ij_S0, 0), t$614, 1275070495, t$618, 93, comm, requestr($I_L323_20), ierr )
  328.                      $nr_S2 = 1 + $nr_S2
  329.                      $ij_S0 = $ij_S0 + imax * levs * (nlatsinproc_d%base_addr)($I_L323_20, 0)
  329.                   endif
  329.                endif
  331.                $I_L323_20 = 1 + $I_L323_20
  330.                if ( $I_L323_20 >= 1 + $t_S3 ) exit
  330.             enddo
  330.          endif
  332.          if ( $nr_S2 > 0 ) then
  336.             if ( levs > 0 ) then
  332.                $I_L332_28 = 0
  332.                do
  333.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  334.                   $ij_S4 = status(3)
  335.                   $ip_S7 = -1 + ini($ij_S4)
  338.                   $SC_firstandlastlat_I6 = (firstandlastlat%base_addr)(2, $ij_S4, 0)
  338.                   $SC_firstandlastlat_I5 = (firstandlastlat%base_addr)(1, $ij_S4, 0)
  339.                   $SC_bufrec_I7 = bufrec%dim_1%EX
  339.                   $SC_bufrec_I8 = bufrec%dim_1%LB
  338.                   if ( $SC_firstandlastlat_I6 + -$SC_firstandlastlat_I5 >= 0 ) then
  336.                      $I_L336_26 = 0
  336.                      do
  338.                         $I_L338_22 = 0
  338.                         do
  339.                            $F_A37 = imax
  339.                            if ( imax > 0 ) then
  339.                               $I_A1 = 0
  339. !dir$ ivdep
  339. !dir$ loop_info (automatic) cache_nt( fieldglob )
  339.                               do
  339.                                  fieldglob(1 + $I_A1, $SC_firstandlastlat_I5 + $I_L338_22, 1 + $I_L336_26) = (bufrec%base_addr)(1 + $ip_S7 + $I_A1 + -( imax * $SC_firstandlastlat_I5 * $I_L336_26 ) + imax * $I_L338_22 + imax * $SC_firstandlastlat_I6 * $I_L336_26 + imax * $I_L336_26, 0)
  339.                                  $I_A1 = 1 + $I_A1
  339.                                  if ( $I_A1 >= $F_A37 ) exit
  339.                               enddo
  339.                            endif
  341.                            $I_L338_22 = 1 + $I_L338_22
  338.                            if ( $I_L338_22 >= 1 + $SC_firstandlastlat_I6 + -$SC_firstandlastlat_I5 ) exit
  338.                         enddo
  342.                         $I_L336_26 = 1 + $I_L336_26
  341.                         if ( $I_L336_26 >= levs ) exit
  341.                      enddo
  341.                   endif
  343.                   $I_L332_28 = 1 + $I_L332_28
  342.                   if ( $I_L332_28 >= $nr_S2 ) exit
  342.                enddo
  342.             else
  332.                $I_L332_24 = 0
  332.                do
  333.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  343.                   $I_L332_24 = 1 + $I_L332_24
  342.                   if ( $I_L332_24 >= $nr_S2 ) exit
  342.                enddo
  342.             endif
  342.          endif
  314.       else if ( myjmax_d > 0 ) then
  315.          t$614 = imax * myjmax_d * levs
  315.          call mpi_isend( field(1, 1, 1), t$614, 1275070495, nproc, 93, comm, request, ierr )
  316.          call mpi_wait( request, status(1), ierr )
  316.       endif
  296.       _free( t$281 )
  346.       return
  346.       end
  346.       
  350.       
  350.       subroutine collect_grid_full( field, fieldglob, levs, nproc )
  350.       t$33 = ibmax
  350.       t$34 = levs
  350.       t$35 = jbmax
  354.       t$288 = _zla( 0, ibmax )
  350.       t$289 = _zla( 0, ibmax )
  354.       t$290 = _zla( 0, levs )
  350.       t$291 = _zla( 0, levs ) * _zla( 0, ibmax )
  354.       t$292 = _zla( 0, jbmax )
  350.       t$293 = _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax )
  350.       t$36 = imax
  350.       t$37 = ( levs * jmax )
  355.       t$294 = _zla( 0, imax )
  350.       t$295 = _zla( 0, imax )
  355.       t$296 = _zla( 0, ( levs * jmax ) )
  350.       t$297 = _zla( 0, imax ) * _zla( 0, ( levs * jmax ) )
  350.       t$39 = maxnodes
  350.       t$298 = 1 + maxnodes
  365.       t$299 = _zla( 0, 1 + maxnodes )
  365.       t$302 = 4 * _zla( 0, 1 + maxnodes )
  362.       t$304 = 8 * _zla( 0, 1 + maxnodes )
  350.       t$38 = ( 1 + nsends_diag )
  361.       t$305 = _zla( 0, ( 1 + nsends_diag ) )
  361.       t$307 = 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) )
  350.       t$42 = nsends_diag
  364.       t$308 = _zla( 0, nsends_diag )
  350.       t$309 = 5 * _zla( 0, nsends_diag )
  364.       t$311 = 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) ) + 20 * _zla( 0, nsends_diag )
  350.       t$300 = int( _alloc( 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) ) + 20 * _zla( 0, nsends_diag ) ), 8 )
  365.       t$301 = t$300
  362.       t$303 = t$300 + 4 * _zla( 0, 1 + maxnodes )
  361.       t$306 = t$300 + 8 * _zla( 0, 1 + maxnodes )
  364.       t$310 = t$300 + 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) )
  367.       comm = 1140850688
  368.       if ( dimrecbuf < levs * imax * jmax ) then
  369.          dimrecbuf = levs * imax * jmax
  370.          $_allo_P2(0) = 0x1000000000001L
  370.          $_allo_P2(1) = loc( bufrec )
  370.          call __deallocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
  370.          bufrec%header%assoc = 0
  371.          bufrec%header%a_contig = 1
  371.          bufrec%dim_1%LB = 1
  371.          bufrec%dim_1%EX = _zla( 0, ( levs * imax * jmax ) )
  371.          bufrec%dim_1%SM = 1
  371.          $_allo_P3(0) = 0x1000000000001L
  371.          $_allo_P3(1) = loc( bufrec )
  371.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
  371.       endif
  373.       if ( nproc + -myid /= 0 ) then
  374.          $js_S16 = -1 + myfirstlat_diag
  375.          $jc_S23 = 1 + mylastlat_diag + -myfirstlat_diag
  375.       else
  377.          $js_S16 = 0
  378.          $jc_S23 = jmax
  378.       endif
  380.       ib(0) = 1
  381.       $m_S1 = 0
  382.       $t_S4 = nrecs_diag
  382.       if ( nrecs_diag > 0 ) then
  382.          $I_L382_193 = 0
  382.          do
  383.             ic = 0
  384.             $t_S2 = (myrecspr_diag%base_addr)(2, 1 + $I_L382_193, 0)
  384.             if ( $t_S2 + -$m_S1 > 0 ) then
  385.                $SC_myrecs_diag_I0 = myrecs_diag%dim_1%EX
  385.                $SC_myrecs_diag_I1 = myrecs_diag%dim_1%LB
  385.                $SC_myrecs_diag_I3 = myrecs_diag%dim_2%SM
  385.                $SC_myrecs_diag_I2 = myrecs_diag%dim_2%EX
  385.                $SC_myrecs_diag_I4 = myrecs_diag%dim_2%LB
  384.                $I_L384_167 = 0
  384. !dir$ ivdep
  384.                do
  385.                   ic = 1 + ic + (myrecs_diag%base_addr)(2, 1 + $m_S1 + $I_L384_167, 0) + -(myrecs_diag%base_addr)(1, 1 + $m_S1 + $I_L384_167, 0)
  386.                   $I_L384_167 = 1 + $I_L384_167
  384.                   if ( $I_L384_167 >= ( $t_S2 + -$m_S1 ) ) exit
  384.                enddo
  384.             endif
  387.             $m_S1 = $t_S2
  388.             ib(1 + $I_L382_193) = ib($I_L382_193) + levs * ic
  389.             t$636 = ib(1 + $I_L382_193) + -ib($I_L382_193)
  389.             call mpi_irecv( (bufrec%base_addr)(ib($I_L382_193), 0), t$636, 1275070495, (myrecspr_diag%base_addr)(1, 1 + $I_L382_193, 0), 88, comm, requestr(1 + $I_L382_193), ierr )
  391.             $I_L382_193 = 1 + $I_L382_193
  391.             if ( $I_L382_193 >= $t_S4 ) exit
  391.          enddo
  391.       endif
  392.       $m_S6 = 0
  393.       $ic_S13 = 0
  394.       $iold_S14 = 0
  395.       $t_S15 = nsends_diag
  395.       if ( nsends_diag > 0 ) then
  399.          if ( -1 + levs >= 0 ) then
  395.             $I_L395_217 = 0
  395.             do
  396.                $t_S7 = (mysendspr_diag%base_addr)(2, 1 + $I_L395_217, 0)
  396.                if ( $t_S7 + -$m_S6 > 0 ) then
  399.                   $SC_ibperij_I10 = ibperij%dim_1%EX
  399.                   $SC_ibperij_I11 = ibperij%dim_1%LB
  399.                   $SC_ibperij_I13 = ibperij%dim_2%SM
  399.                   $SC_ibperij_I12 = ibperij%dim_2%EX
  399.                   $SC_ibperij_I14 = ibperij%dim_2%LB
  399.                   $SC_jbperij_I15 = jbperij%dim_1%EX
  399.                   $SC_jbperij_I16 = jbperij%dim_1%LB
  399.                   $SC_jbperij_I18 = jbperij%dim_2%SM
  399.                   $SC_jbperij_I17 = jbperij%dim_2%EX
  399.                   $SC_jbperij_I19 = jbperij%dim_2%LB
  399.                   $SC_bufsend_I20 = bufsend%dim_1%EX
  399.                   $SC_bufsend_I21 = bufsend%dim_1%LB
  397.                   $SC_mysends_diag_I5 = mysends_diag%dim_1%EX
  397.                   $SC_mysends_diag_I6 = mysends_diag%dim_1%LB
  397.                   $SC_mysends_diag_I8 = mysends_diag%dim_2%SM
  397.                   $SC_mysends_diag_I7 = mysends_diag%dim_2%EX
  397.                   $SC_mysends_diag_I9 = mysends_diag%dim_2%LB
  396.                   $I_L396_207 = 0
  396.                   do
  397.                      $j_S12 = (mysends_diag%base_addr)(3, 1 + $m_S6 + $I_L396_207, 0)
  398.                      $t_S9 = (mysends_diag%base_addr)(1, 1 + $m_S6 + $I_L396_207, 0)
  398.                      $t_S10 = (mysends_diag%base_addr)(2, 1 + $m_S6 + $I_L396_207, 0)
  398.                      if ( $t_S10 + -$t_S9 >= 0 ) then
  398.                         $I_L398_195 = 0
  398.                         do
  399.                            $F_A33 = 1 + -1 + levs
  399.                            $SCA_ibperij_I40 = (ibperij%base_addr)($t_S9 + $I_L398_195, $j_S12, 0)
  399.                            $SCA_jbperij_I41 = (jbperij%base_addr)($t_S9 + $I_L398_195, $j_S12, 0)
  399.                            $I_L399_183 = 0
  399. !dir$ ivdep
  399.                            do
  399.                               (bufsend%base_addr)(1 + $ic_S13 + $I_L399_183 + levs * $I_L398_195, 0) = field($SCA_ibperij_I40, 1 + $I_L399_183, $SCA_jbperij_I41)
  399.                               $I_L399_183 = 1 + $I_L399_183
  399.                               if ( $I_L399_183 >= $F_A33 ) exit
  399.                            enddo
  401.                            $I_L398_195 = 1 + $I_L398_195
  398.                            if ( $I_L398_195 >= 1 + $t_S10 + -$t_S9 ) exit
  398.                         enddo
  400.                         $ic_S13 = ( levs + $ic_S13 + -( $t_S9 * levs ) + $t_S10 * levs )
  400.                      endif
  402.                      $I_L396_207 = 1 + $I_L396_207
  401.                      if ( $I_L396_207 >= ( $t_S7 + -$m_S6 ) ) exit
  401.                   enddo
  401.                endif
  403.                t$636 = $ic_S13 + -$iold_S14
  403.                call mpi_isend( (bufsend%base_addr)(1 + $iold_S14, 0), t$636, 1275070495, (mysendspr_diag%base_addr)(1, 1 + $I_L395_217, 0), 88, comm, requests(1 + $I_L395_217), ierr )
  405.                $m_S6 = (mysendspr_diag%base_addr)(2, 1 + $I_L395_217, 0)
  406.                $iold_S14 = $ic_S13
  407.                $I_L395_217 = 1 + $I_L395_217
  405.                if ( $I_L395_217 >= $t_S15 ) exit
  405.             enddo
  405.          else
  395.             $I_L395_205 = 0
  395.             do
  396.                $t_S7 = (mysendspr_diag%base_addr)(2, 1 + $I_L395_205, 0)
  396.                if ( $t_S7 + -$m_S6 > 0 ) then
  397.                   $SC_mysends_diag_I5 = mysends_diag%dim_1%EX
  397.                   $SC_mysends_diag_I6 = mysends_diag%dim_1%LB
  397.                   $SC_mysends_diag_I8 = mysends_diag%dim_2%SM
  397.                   $SC_mysends_diag_I7 = mysends_diag%dim_2%EX
  397.                   $SC_mysends_diag_I9 = mysends_diag%dim_2%LB
  396.                   $I_L396_189 = 0
  396. !dir$ ivdep
  396.                   do
  398.                      $t_S9 = (mysends_diag%base_addr)(1, 1 + $m_S6 + $I_L396_189, 0)
  398.                      $t_S10 = (mysends_diag%base_addr)(2, 1 + $m_S6 + $I_L396_189, 0)
  398.                      if ( $t_S10 + -$t_S9 >= 0 ) then
  400.                         $ic_S13 = ( levs + $ic_S13 + -( $t_S9 * levs ) + $t_S10 * levs )
  400.                      endif
  402.                      $I_L396_189 = 1 + $I_L396_189
  401.                      if ( $I_L396_189 >= ( $t_S7 + -$m_S6 ) ) exit
  401.                   enddo
  401.                endif
  403.                t$636 = $ic_S13 + -$iold_S14
  403.                call mpi_isend( (bufsend%base_addr)(1 + $iold_S14, 0), t$636, 1275070495, (mysendspr_diag%base_addr)(1, 1 + $I_L395_205, 0), 88, comm, requests(1 + $I_L395_205), ierr )
  405.                $m_S6 = (mysendspr_diag%base_addr)(2, 1 + $I_L395_205, 0)
  406.                $iold_S14 = $ic_S13
  407.                $I_L395_205 = 1 + $I_L395_205
  405.                if ( $I_L395_205 >= $t_S15 ) exit
  405.             enddo
  405.          endif
  405.       endif
  408.       if ( min( mylastlat_diag, mylastlat ) + -max( myfirstlat_diag, myfirstlat ) >= 0 ) then
  411.          $SC_mylastlon_I24 = mylastlon%dim_1%EX
  411.          $SC_mylastlon_I25 = mylastlon%dim_1%LB
  411.          $SC_myfirstlon_I22 = myfirstlon%dim_1%EX
  411.          $SC_myfirstlon_I23 = myfirstlon%dim_1%LB
  412.          $SC_ibperij_I10 = ibperij%dim_1%EX
  412.          $SC_ibperij_I11 = ibperij%dim_1%LB
  412.          $SC_ibperij_I13 = ibperij%dim_2%SM
  412.          $SC_ibperij_I12 = ibperij%dim_2%EX
  412.          $SC_ibperij_I14 = ibperij%dim_2%LB
  412.          $SC_jbperij_I15 = jbperij%dim_1%EX
  412.          $SC_jbperij_I16 = jbperij%dim_1%LB
  412.          $SC_jbperij_I18 = jbperij%dim_2%SM
  412.          $SC_jbperij_I17 = jbperij%dim_2%EX
  412.          $SC_jbperij_I19 = jbperij%dim_2%LB
  410.          if ( levs > 0 ) then
  408.             $I_L408_209 = 0
  408. !dir$ loop_info (automatic) cache_nt( mylastlon, myfirstlon )
  408.             do
  410.                $SCA_myfirstlon_I42 = (myfirstlon%base_addr)($I_L408_209 + max( myfirstlat_diag, myfirstlat ), 0)
  410.                $SCA_mylastlon_I43 = (mylastlon%base_addr)($I_L408_209 + max( myfirstlat_diag, myfirstlat ), 0)
  411.                if ( $SCA_mylastlon_I43 + -$SCA_myfirstlon_I42 >= 0 ) then
  410.                   $SI_L410_197_G7 = 0
  410.                   do
  411.                      $SI_L411_169_G10 = 0
  411.                      do
  410.                         $I_L410_228 = 0
  410. !dir$ shortloop16
  410. !dir$ blocking_size( 4, 4 )
  410.                         do
  411.                            $I_L411_225 = 0
  411. !dir$ ivdep
  411. !dir$ blocking_size( 256, 256 )
  411.                            do
  412.                               fieldglob($SCA_myfirstlon_I42 + $I_L411_225 + 256 * $SI_L411_169_G10, $I_L408_209 + max( myfirstlat_diag, myfirstlat ) + -$js_S16 + $jc_S23 * $I_L410_228 + 4 * $jc_S23 * $SI_L410_197_G7) = field((ibperij%base_addr)($SCA_myfirstlon_I42 + $I_L411_225 + 256 * $SI_L411_169_G10, $I_L408_209 + max( myfirstlat_diag, myfirstlat ), 0), 1 + $I_L410_228 + 4 * $SI_L410_197_G7, (jbperij%base_addr)($SCA_myfirstlon_I42 + $I_L411_225 + 256 * $SI_L411_169_G10, $I_L408_209 + max( myfirstlat_diag, myfirstlat ), 0))
  411.                               $I_L411_225 = 1 + $I_L411_225
  411.                               if ( $I_L411_225 >= min( 1 + $SCA_mylastlon_I43 + -$SCA_myfirstlon_I42, 256 + 256 * $SI_L411_169_G10 ) + -256 * $SI_L411_169_G10 ) exit
  411.                            enddo
  410.                            $I_L410_228 = 1 + $I_L410_228
  410.                            if ( $I_L410_228 >= min( levs, 4 + 4 * $SI_L410_197_G7 ) + -4 * $SI_L410_197_G7 ) exit
  410.                         enddo
  411.                         $SI_L411_169_G10 = 1 + $SI_L411_169_G10
  413.                         if ( $SI_L411_169_G10 >= _rsh( 256 + $SCA_mylastlon_I43 + -$SCA_myfirstlon_I42, 8 ) ) exit
  413.                      enddo
  410.                      $SI_L410_197_G7 = 1 + $SI_L410_197_G7
  410.                      if ( $SI_L410_197_G7 >= _rsh( 3 + levs, 2 ) ) exit
  410.                   enddo
  410.                endif
  416.                $I_L408_209 = 1 + $I_L408_209
  415.                if ( $I_L408_209 >= 1 + min( mylastlat_diag, mylastlat ) + -max( myfirstlat_diag, myfirstlat ) ) exit
  415.             enddo
  415.          endif
  415.       endif
  417.       $t_S35 = nrecs_diag
  417.       if ( nrecs_diag > 0 ) then
  417.          $I_L417_219 = 0
  417.          do
  418.             call mpi_waitany( nrecs_diag, requestr(1), index, status(1), ierr )
  419.             $ks_S24 = status(3)
  420.             if ( nrecs_diag > 0 ) then
  421.                $SC_myrecspr_diag_I26 = myrecspr_diag%dim_1%EX
  421.                $SC_myrecspr_diag_I27 = myrecspr_diag%dim_1%LB
  421.                $SC_myrecspr_diag_I29 = myrecspr_diag%dim_2%SM
  421.                $SC_myrecspr_diag_I28 = myrecspr_diag%dim_2%EX
  421.                $SC_myrecspr_diag_I30 = myrecspr_diag%dim_2%LB
  420.                $I_L420_171 = 0
  420. !dir$ ivdep
  420.                do
  421.                   if ( (myrecspr_diag%base_addr)(1, 1 + $I_L420_171, 0) + -$ks_S24 == 0 ) then
  422.                      n = ( 1 + $I_L420_171 )
  423.                      $ic_S13 = -1 + ib($I_L420_171)
  424.                      $m_S6 = (myrecspr_diag%base_addr)(2, $I_L420_171, 0)
  424.                      goto 10
  424.                   endif
  427.                   $I_L420_171 = 1 + $I_L420_171
  426.                   if ( $I_L420_171 >= nrecs_diag ) exit
  426.                enddo
  426.             endif
  426.    10       continue
  428.             $t_S26 = (myrecspr_diag%base_addr)(2, n, 0)
  428.             if ( $t_S26 + -$m_S6 > 0 ) then
  429.                $SC_myrecs_diag_I0 = myrecs_diag%dim_1%EX
  429.                $SC_myrecs_diag_I1 = myrecs_diag%dim_1%LB
  429.                $SC_myrecs_diag_I3 = myrecs_diag%dim_2%SM
  429.                $SC_myrecs_diag_I2 = myrecs_diag%dim_2%EX
  429.                $SC_myrecs_diag_I4 = myrecs_diag%dim_2%LB
  433.                $SC_bufrec_I31 = bufrec%dim_1%EX
  433.                $SC_bufrec_I32 = bufrec%dim_1%LB
  432.                if ( levs > 0 ) then
  428.                   $I_L428_211 = 0
  428. !dir$ loop_info (automatic) cache_nt( myrecs_diag )
  428.                   do
  429.                      $j_S30 = (myrecs_diag%base_addr)(3, 1 + $m_S6 + $I_L428_211, 0) + -$js_S16
  430.                      $t_S28 = (myrecs_diag%base_addr)(1, 1 + $m_S6 + $I_L428_211, 0)
  430.                      $t_S29 = (myrecs_diag%base_addr)(2, 1 + $m_S6 + $I_L428_211, 0)
  430.                      if ( $t_S29 + -$t_S28 >= 0 ) then
  432.                         $I_L432_199 = 0
  432.                         do
  430.                            $I_L430_173 = 0
  430. !dir$ ivdep
  430.                            do
  433.                               fieldglob($t_S28 + $I_L430_173, $j_S30 + $jc_S23 * $I_L432_199) = (bufrec%base_addr)(1 + $ic_S13 + $I_L432_199 + levs * $I_L430_173, 0)
  437.                               $I_L430_173 = 1 + $I_L430_173
  432.                               if ( $I_L430_173 >= 1 + $t_S29 + -$t_S28 ) exit
  432.                            enddo
  435.                            $I_L432_199 = 1 + $I_L432_199
  435.                            if ( $I_L432_199 >= levs ) exit
  435.                         enddo
  436.                         $ic_S13 = ( levs + $ic_S13 + -( $t_S28 * levs ) + $t_S29 * levs )
  436.                      endif
  438.                      $I_L428_211 = 1 + $I_L428_211
  437.                      if ( $I_L428_211 >= ( $t_S26 + -$m_S6 ) ) exit
  437.                   enddo
  437.                else
  428.                   $I_L428_179 = 0
  428. !dir$ ivdep
  428.                   do
  430.                      $t_S28 = (myrecs_diag%base_addr)(1, 1 + $m_S6 + $I_L428_179, 0)
  430.                      $t_S29 = (myrecs_diag%base_addr)(2, 1 + $m_S6 + $I_L428_179, 0)
  430.                      if ( $t_S29 + -$t_S28 >= 0 ) then
  436.                         $ic_S13 = ( levs + $ic_S13 + -( $t_S28 * levs ) + $t_S29 * levs )
  436.                      endif
  438.                      $I_L428_179 = 1 + $I_L428_179
  437.                      if ( $I_L428_179 >= ( $t_S26 + -$m_S6 ) ) exit
  437.                   enddo
  437.                endif
  437.             endif
  439.             $I_L417_219 = 1 + $I_L417_219
  438.             if ( $I_L417_219 >= $t_S35 ) exit
  438.          enddo
  438.       endif
  440.       if ( nsends_diag > 0 ) then
  440.          call mpi_waitall( nsends_diag, requests(1), stat(1, 1), ierr )
  440.       endif
  441.       if ( nproc + -myid /= 0 ) then
  442.          ic = -( levs * imax * myfirstlat_diag ) + levs * imax + levs * imax * mylastlat_diag
  444.          if ( -( levs * imax * myfirstlat_diag ) + levs * imax + levs * imax * mylastlat_diag > 0 ) then
  444.             call mpi_isend( fieldglob(1, 1), ic, 1275070495, nproc, 89, comm, requests(1), ierr )
  444.          endif
  446.          call mpi_wait( requests(1), status(1), ierr )
  446.       else
  448.          ib(0) = 1
  449.          $F_A34 = 1 + t$39
  449.          if ( t$39 >= 0 ) then
  449.             $I_L449_185 = 0
  449. !dir$ ivdep
  449.             do
  449.                requestr($I_L449_185) = 738197504
  449.                $I_L449_185 = 1 + $I_L449_185
  449.                if ( $I_L449_185 >= $F_A34 ) exit
  449.             enddo
  449.          endif
  450.          $n_S37 = 0
  451.          $t_S38 = -1 + maxnodes
  451.          if ( maxnodes > 0 ) then
  451.             $I_L451_175 = 0
  451.             do
  452.                if ( $I_L451_175 + -myid /= 0 ) then
  453.                   ic = -( levs * imax * (firstandlastlat%base_addr)(1, $I_L451_175, 0) ) + levs * imax + levs * imax * (firstandlastlat%base_addr)(2, $I_L451_175, 0)
  454.                   if ( ic > 0 ) then
  456.                      t$636 = $I_L451_175
  455.                      call mpi_irecv( (bufrec%base_addr)(ib($I_L451_175), 0), ic, 1275070495, t$636, 89, comm, requestr($I_L451_175), ierr )
  457.                      $n_S37 = 1 + $n_S37
  457.                   endif
  457.                else
  460.                   ic = 0
  460.                endif
  462.                ib(1 + $I_L451_175) = ic + ib($I_L451_175)
  463.                $I_L451_175 = 1 + $I_L451_175
  461.                if ( $I_L451_175 >= 1 + $t_S38 ) exit
  461.             enddo
  461.          endif
  464.          if ( $n_S37 > 0 ) then
  468.             if ( levs <= 0 ) then
  464.                $I_L464_181 = 0
  464.                do
  465.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  475.                   $I_L464_181 = 1 + $I_L464_181
  474.                   if ( $I_L464_181 >= $n_S37 ) exit
  474.                enddo
  474.             else if ( t$36 > 0 ) then
  464.                $I_L464_221 = 0
  464.                do
  465.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  466.                   $ks_S39 = status(3)
  467.                   $ic_S42 = -1 + ib($ks_S39)
  470.                   $SC_firstandlastlat_I39 = (firstandlastlat%base_addr)(2, $ks_S39, 0)
  470.                   $SC_firstandlastlat_I38 = (firstandlastlat%base_addr)(1, $ks_S39, 0)
  471.                   $SC_bufrec_I31 = bufrec%dim_1%EX
  471.                   $SC_bufrec_I32 = bufrec%dim_1%LB
  470.                   if ( $SC_firstandlastlat_I39 + -$SC_firstandlastlat_I38 >= 0 ) then
  468.                      $I_L468_213 = 0
  468.                      do
  470.                         $I_L470_201 = 0
  470.                         do
  471.                            $F_A35 = t$36
  471.                            $I_L471_187 = 0
  471. !dir$ ivdep
  471.                            do
  471.                               fieldglob(1 + $I_L471_187, $SC_firstandlastlat_I38 + $I_L470_201 + jmax * $I_L468_213) = (bufrec%base_addr)(1 + $ic_S42 + $I_L471_187 + -( imax * $SC_firstandlastlat_I38 * $I_L468_213 ) + imax * $I_L470_201 + imax * $SC_firstandlastlat_I39 * $I_L468_213 + imax * $I_L468_213, 0)
  471.                               $I_L471_187 = 1 + $I_L471_187
  471.                               if ( $I_L471_187 >= $F_A35 ) exit
  471.                            enddo
  473.                            $I_L470_201 = 1 + $I_L470_201
  470.                            if ( $I_L470_201 >= 1 + $SC_firstandlastlat_I39 + -$SC_firstandlastlat_I38 ) exit
  470.                         enddo
  474.                         $I_L468_213 = 1 + $I_L468_213
  473.                         if ( $I_L468_213 >= levs ) exit
  473.                      enddo
  473.                   endif
  475.                   $I_L464_221 = 1 + $I_L464_221
  474.                   if ( $I_L464_221 >= $n_S37 ) exit
  474.                enddo
  474.             else
  464.                $I_L464_191 = 0
  464.                do
  465.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  475.                   $I_L464_191 = 1 + $I_L464_191
  474.                   if ( $I_L464_191 >= $n_S37 ) exit
  474.                enddo
  474.             endif
  474.          endif
  476.          j1 = 1
  477.          if ( levs > 0 ) then
  477.             $I_L477_223 = 0
  477.             do
  478.                $t_S49 = jmax
  478.                if ( jmax > 0 ) then
  478.                   $I_L478_215 = 0
  478.                   do
  479.                      _fwrite( _clist( 0, 0, 2, 97, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  479.                      $_IOitem_P0(0) = ( 1 + $I_L478_215 )
  479.                      $_IOitem_P0(1) = ( 1 + $I_L477_223 )
  479.                      _fwrite( _clist( 0, 0, 0, 97, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P0(:( 0, 1, 1 )), 0x2000200000000L ) ) )
  479.                      if ( ( ( 1 + $I_L478_215 ) < imaxperj%dim_1%LB .or. ( 1 + $I_L478_215 ) > -1 + imaxperj%dim_1%LB + imaxperj%dim_1%EX ) /= .false. ) then
  479.                          _substr(t$696,1,19) = 'Communications.f90'
  479.                          _substr(t$697,1,9) = 'IMAXPERJ'
  479.                         t$698 = imaxperj%dim_1%LB
  479.                         t$699 = -1 + imaxperj%dim_1%LB + imaxperj%dim_1%EX
  479.                         t$700 = 1 + $I_L478_215
  479.                         call _bounds_error(  _substr(t$696,1,19), 979,  _substr(t$697,1,9), 1, t$698, t$699, t$700, t$695 )
  479.                      endif
  479.                      $t_S48 = (imaxperj%base_addr)(1 + $I_L478_215, 0)
  479.                      if ( $t_S48 > 0 ) then
  479.                         $I_L479_203 = 0
  479.                         do
  479.                            $I_L479_177 = 0
  479. !dir$ shortloop16
  479.                            do
  479.                               if ( ( ( 1 + $I_L479_177 + 16 * $I_L479_203 ) <= 0 .or. ( 1 + $I_L479_177 + 16 * $I_L479_203 ) > t$36 ) /= .false. ) then
  479.                                   _substr(t$705,1,19) = 'Communications.f90'
  479.                                   _substr(t$706,1,10) = 'FIELDGLOB'
  479.                                  t$707 = 1 + $I_L479_177 + 16 * $I_L479_203
  479.                                  call _bounds_error(  _substr(t$705,1,19), 979,  _substr(t$706,1,10), 1, 1, t$36, t$707, t$704 )
  479.                               endif
  479.                               if ( ( ( j1 + $I_L478_215 ) <= 0 .or. ( j1 + $I_L478_215 ) > t$37 ) /= .false. ) then
  479.                                   _substr(t$709,1,19) = 'Communications.f90'
  479.                                   _substr(t$710,1,10) = 'FIELDGLOB'
  479.                                  t$711 = j1 + $I_L478_215
  479.                                  call _bounds_error(  _substr(t$709,1,19), 979,  _substr(t$710,1,10), 2, 1, t$37, t$711, t$708 )
  479.                               endif
  479.                               $IOitem_O0 = fieldglob(1 + $I_L479_177 + 16 * $I_L479_203, j1 + $I_L478_215)
  479.                               $_IO_STRIP_P1($I_L479_177) = $IOitem_O0
  479.                               $I_L479_177 = 1 + $I_L479_177
  479.                               if ( $I_L479_177 >= min( $t_S48, 16 + 16 * $I_L479_203 ) + -16 * $I_L479_203 ) exit
  479.                            enddo
  479.                            _fwrite( _clist( 0, 0, 0, 97, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IO_STRIP_P1(:( 0, ( -1 + min( $t_S48, 16 + 16 * $I_L479_203 ) + -16 * $I_L479_203 ), 1 )), 0x804060300000000L ) ) )
  479.                            $I_L479_203 = 1 + $I_L479_203
  479.                            if ( $I_L479_203 >= 1 + max( 0, -1 + _rsh( 15 + $t_S48, 4 ) ) ) exit
  479.                         enddo
  479.                      endif
  479.                      _fwrite( _clist( 0, 0, 1, 97, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  481.                      $I_L478_215 = 1 + $I_L478_215
  480.                      if ( $I_L478_215 >= $t_S49 ) exit
  480.                   enddo
  480.                   j1 = j1 + $t_S49
  480.                endif
  482.                $I_L477_223 = 1 + $I_L477_223
  481.                if ( $I_L477_223 >= levs ) exit
  481.             enddo
  481.          endif
  481.       endif
  350.       _free( t$300 )
  485.       return
  485.       end
  485.       
  489.       
  489.       subroutine collect_grid_fulli( imask, fieldglob, levs, nproc )
  489.       t$44 = ibmax
  489.       t$45 = levs
  489.       t$46 = jbmax
  493.       t$312 = _zla( 0, ibmax )
  489.       t$313 = _zla( 0, ibmax )
  493.       t$314 = _zla( 0, levs )
  489.       t$315 = _zla( 0, levs ) * _zla( 0, ibmax )
  493.       t$316 = _zla( 0, jbmax )
  489.       t$317 = _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax )
  489.       t$47 = imax
  489.       t$48 = ( levs * jmax )
  494.       t$318 = _zla( 0, imax )
  489.       t$319 = _zla( 0, imax )
  494.       t$320 = _zla( 0, ( levs * jmax ) )
  489.       t$321 = _zla( 0, imax ) * _zla( 0, ( levs * jmax ) )
  496.       t$324 = 4 * _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax )
  489.       t$55 = maxnodes
  489.       t$325 = 1 + maxnodes
  506.       t$326 = _zla( 0, 1 + maxnodes )
  506.       t$328 = 4 * _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) + 4 * _zla( 0, 1 + maxnodes )
  489.       t$52 = ( imax * jmax )
  497.       t$329 = _zla( 0, ( imax * jmax ) )
  497.       t$331 = 4 * _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) + 4 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( imax * jmax ) )
  497.       t$333 = 4 * _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) + 4 * _zla( 0, 1 + maxnodes ) + 8 * _zla( 0, ( imax * jmax ) )
  503.       t$335 = 4 * _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) + 8 * _zla( 0, ( imax * jmax ) ) + 8 * _zla( 0, 1 + maxnodes )
  489.       t$54 = ( 1 + nsends_diag )
  502.       t$336 = _zla( 0, ( 1 + nsends_diag ) )
  502.       t$338 = 4 * _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) + 8 * _zla( 0, ( imax * jmax ) ) + 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) )
  489.       t$58 = nsends_diag
  505.       t$339 = _zla( 0, nsends_diag )
  489.       t$340 = 5 * _zla( 0, nsends_diag )
  505.       t$342 = 4 * _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) + 8 * _zla( 0, ( imax * jmax ) ) + 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) ) + 20 * _zla( 0, nsends_diag )
  489.       t$322 = int( _alloc( 4 * _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) + 8 * _zla( 0, ( imax * jmax ) ) + 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) ) + 20 * _zla( 0, nsends_diag ) ), 8 )
  496.       t$323 = t$322
  506.       t$327 = t$322 + 4 * _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax )
  497.       t$330 = t$322 + 4 * _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) + 4 * _zla( 0, 1 + maxnodes )
  497.       t$332 = t$322 + 4 * _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) + 4 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( imax * jmax ) )
  503.       t$334 = t$322 + 4 * _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) + 4 * _zla( 0, 1 + maxnodes ) + 8 * _zla( 0, ( imax * jmax ) )
  502.       t$337 = t$322 + 4 * _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) + 8 * _zla( 0, ( imax * jmax ) ) + 8 * _zla( 0, 1 + maxnodes )
  505.       t$341 = t$322 + 4 * _zla( 0, levs ) * _zla( 0, ibmax ) * _zla( 0, jbmax ) + 8 * _zla( 0, ( imax * jmax ) ) + 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) )
  508.       $F_A33 = jbmax
  508.       $F_A34 = levs
  508.       $F_A35 = ibmax
  508.       if ( and( and( -$F_A34, -$F_A33 ), -$F_A35 ) < 0 ) then
  508.          $I_L508_221 = 0
  508.          do
  508.             $I_L508_207 = 0
  508.             do
  508.                $I_L508_183 = 0
  508. !dir$ ivdep
  508. !dir$ loop_info (automatic) cache_nt( imask )
  508.                do
  508.                   field(1 + $I_L508_183, 1 + $I_L508_207, 1 + $I_L508_221) = imask(1 + $I_L508_183, 1 + $I_L508_207, 1 + $I_L508_221)
  508.                   $I_L508_183 = 1 + $I_L508_183
  508.                   if ( $I_L508_183 >= $F_A35 ) exit
  508.                enddo
  508.                $I_L508_207 = 1 + $I_L508_207
  508.                if ( $I_L508_207 >= $F_A34 ) exit
  508.             enddo
  508.             $I_L508_221 = 1 + $I_L508_221
  508.             if ( $I_L508_221 >= $F_A33 ) exit
  508.          enddo
  508.       endif
  509.       comm = 1140850688
  510.       if ( nproc + -myid /= 0 ) then
  511.          $js_S16 = -1 + myfirstlat_diag
  512.          $jc_S23 = 1 + mylastlat_diag + -myfirstlat_diag
  512.       else
  514.          $js_S16 = 0
  515.          $jc_S23 = jmax
  515.       endif
  517.       ib(0) = 1
  518.       $m_S1 = 0
  519.       $t_S4 = nrecs_diag
  519.       if ( nrecs_diag > 0 ) then
  519.          $I_L519_195 = 0
  519.          do
  520.             ic = 0
  521.             $t_S2 = (myrecspr_diag%base_addr)(2, 1 + $I_L519_195, 0)
  521.             if ( $t_S2 + -$m_S1 > 0 ) then
  522.                $SC_myrecs_diag_I0 = myrecs_diag%dim_1%EX
  522.                $SC_myrecs_diag_I1 = myrecs_diag%dim_1%LB
  522.                $SC_myrecs_diag_I3 = myrecs_diag%dim_2%SM
  522.                $SC_myrecs_diag_I2 = myrecs_diag%dim_2%EX
  522.                $SC_myrecs_diag_I4 = myrecs_diag%dim_2%LB
  521.                $I_L521_167 = 0
  521. !dir$ ivdep
  521.                do
  522.                   ic = 1 + ic + (myrecs_diag%base_addr)(2, 1 + $m_S1 + $I_L521_167, 0) + -(myrecs_diag%base_addr)(1, 1 + $m_S1 + $I_L521_167, 0)
  523.                   $I_L521_167 = 1 + $I_L521_167
  521.                   if ( $I_L521_167 >= ( $t_S2 + -$m_S1 ) ) exit
  521.                enddo
  521.             endif
  524.             $m_S1 = $t_S2
  525.             ib(1 + $I_L519_195) = ib($I_L519_195) + levs * ic
  526.             t$719 = ib(1 + $I_L519_195) + -ib($I_L519_195)
  526.             call mpi_irecv( ibufrec(ib($I_L519_195)), t$719, 1275069467, (myrecspr_diag%base_addr)(1, 1 + $I_L519_195, 0), 88, comm, requestr(1 + $I_L519_195), ierr )
  528.             $I_L519_195 = 1 + $I_L519_195
  528.             if ( $I_L519_195 >= $t_S4 ) exit
  528.          enddo
  528.       endif
  529.       $m_S6 = 0
  530.       $ic_S13 = 0
  531.       $iold_S14 = 0
  532.       $t_S15 = nsends_diag
  532.       if ( nsends_diag > 0 ) then
  536.          if ( -1 + levs >= 0 ) then
  532.             $I_L532_223 = 0
  532.             do
  533.                $t_S7 = (mysendspr_diag%base_addr)(2, 1 + $I_L532_223, 0)
  533.                if ( $t_S7 + -$m_S6 > 0 ) then
  536.                   $SC_ibperij_I10 = ibperij%dim_1%EX
  536.                   $SC_ibperij_I11 = ibperij%dim_1%LB
  536.                   $SC_ibperij_I13 = ibperij%dim_2%SM
  536.                   $SC_ibperij_I12 = ibperij%dim_2%EX
  536.                   $SC_ibperij_I14 = ibperij%dim_2%LB
  536.                   $SC_jbperij_I15 = jbperij%dim_1%EX
  536.                   $SC_jbperij_I16 = jbperij%dim_1%LB
  536.                   $SC_jbperij_I18 = jbperij%dim_2%SM
  536.                   $SC_jbperij_I17 = jbperij%dim_2%EX
  536.                   $SC_jbperij_I19 = jbperij%dim_2%LB
  534.                   $SC_mysends_diag_I5 = mysends_diag%dim_1%EX
  534.                   $SC_mysends_diag_I6 = mysends_diag%dim_1%LB
  534.                   $SC_mysends_diag_I8 = mysends_diag%dim_2%SM
  534.                   $SC_mysends_diag_I7 = mysends_diag%dim_2%EX
  534.                   $SC_mysends_diag_I9 = mysends_diag%dim_2%LB
  533.                   $I_L533_211 = 0
  533.                   do
  534.                      $j_S12 = (mysends_diag%base_addr)(3, 1 + $m_S6 + $I_L533_211, 0)
  535.                      $t_S9 = (mysends_diag%base_addr)(1, 1 + $m_S6 + $I_L533_211, 0)
  535.                      $t_S10 = (mysends_diag%base_addr)(2, 1 + $m_S6 + $I_L533_211, 0)
  535.                      if ( $t_S10 + -$t_S9 >= 0 ) then
  535.                         $I_L535_197 = 0
  535.                         do
  536.                            $F_A36 = 1 + -1 + levs
  536.                            $SCA_ibperij_I36 = (ibperij%base_addr)($t_S9 + $I_L535_197, $j_S12, 0)
  536.                            $SCA_jbperij_I37 = (jbperij%base_addr)($t_S9 + $I_L535_197, $j_S12, 0)
  536.                            $I_L536_185 = 0
  536. !dir$ ivdep
  536.                            do
  536.                               ibufsend(1 + $ic_S13 + $I_L536_185 + levs * $I_L535_197) = field($SCA_ibperij_I36, 1 + $I_L536_185, $SCA_jbperij_I37)
  536.                               $I_L536_185 = 1 + $I_L536_185
  536.                               if ( $I_L536_185 >= $F_A36 ) exit
  536.                            enddo
  538.                            $I_L535_197 = 1 + $I_L535_197
  535.                            if ( $I_L535_197 >= 1 + $t_S10 + -$t_S9 ) exit
  535.                         enddo
  537.                         $ic_S13 = ( levs + $ic_S13 + -( $t_S9 * levs ) + $t_S10 * levs )
  537.                      endif
  539.                      $I_L533_211 = 1 + $I_L533_211
  538.                      if ( $I_L533_211 >= ( $t_S7 + -$m_S6 ) ) exit
  538.                   enddo
  538.                endif
  540.                t$719 = $ic_S13 + -$iold_S14
  540.                call mpi_isend( ibufsend(1 + $iold_S14), t$719, 1275069467, (mysendspr_diag%base_addr)(1, 1 + $I_L532_223, 0), 88, comm, requests(1 + $I_L532_223), ierr )
  542.                $m_S6 = (mysendspr_diag%base_addr)(2, 1 + $I_L532_223, 0)
  543.                $iold_S14 = $ic_S13
  544.                $I_L532_223 = 1 + $I_L532_223
  542.                if ( $I_L532_223 >= $t_S15 ) exit
  542.             enddo
  542.          else
  532.             $I_L532_209 = 0
  532.             do
  533.                $t_S7 = (mysendspr_diag%base_addr)(2, 1 + $I_L532_209, 0)
  533.                if ( $t_S7 + -$m_S6 > 0 ) then
  534.                   $SC_mysends_diag_I5 = mysends_diag%dim_1%EX
  534.                   $SC_mysends_diag_I6 = mysends_diag%dim_1%LB
  534.                   $SC_mysends_diag_I8 = mysends_diag%dim_2%SM
  534.                   $SC_mysends_diag_I7 = mysends_diag%dim_2%EX
  534.                   $SC_mysends_diag_I9 = mysends_diag%dim_2%LB
  533.                   $I_L533_191 = 0
  533. !dir$ ivdep
  533.                   do
  535.                      $t_S9 = (mysends_diag%base_addr)(1, 1 + $m_S6 + $I_L533_191, 0)
  535.                      $t_S10 = (mysends_diag%base_addr)(2, 1 + $m_S6 + $I_L533_191, 0)
  535.                      if ( $t_S10 + -$t_S9 >= 0 ) then
  537.                         $ic_S13 = ( levs + $ic_S13 + -( $t_S9 * levs ) + $t_S10 * levs )
  537.                      endif
  539.                      $I_L533_191 = 1 + $I_L533_191
  538.                      if ( $I_L533_191 >= ( $t_S7 + -$m_S6 ) ) exit
  538.                   enddo
  538.                endif
  540.                t$719 = $ic_S13 + -$iold_S14
  540.                call mpi_isend( ibufsend(1 + $iold_S14), t$719, 1275069467, (mysendspr_diag%base_addr)(1, 1 + $I_L532_209, 0), 88, comm, requests(1 + $I_L532_209), ierr )
  542.                $m_S6 = (mysendspr_diag%base_addr)(2, 1 + $I_L532_209, 0)
  543.                $iold_S14 = $ic_S13
  544.                $I_L532_209 = 1 + $I_L532_209
  542.                if ( $I_L532_209 >= $t_S15 ) exit
  542.             enddo
  542.          endif
  542.       endif
  545.       if ( min( mylastlat_diag, mylastlat ) + -max( myfirstlat_diag, myfirstlat ) >= 0 ) then
  548.          $SC_mylastlon_I22 = mylastlon%dim_1%EX
  548.          $SC_mylastlon_I23 = mylastlon%dim_1%LB
  548.          $SC_myfirstlon_I20 = myfirstlon%dim_1%EX
  548.          $SC_myfirstlon_I21 = myfirstlon%dim_1%LB
  549.          $SC_ibperij_I10 = ibperij%dim_1%EX
  549.          $SC_ibperij_I11 = ibperij%dim_1%LB
  549.          $SC_ibperij_I13 = ibperij%dim_2%SM
  549.          $SC_ibperij_I12 = ibperij%dim_2%EX
  549.          $SC_ibperij_I14 = ibperij%dim_2%LB
  549.          $SC_jbperij_I15 = jbperij%dim_1%EX
  549.          $SC_jbperij_I16 = jbperij%dim_1%LB
  549.          $SC_jbperij_I18 = jbperij%dim_2%SM
  549.          $SC_jbperij_I17 = jbperij%dim_2%EX
  549.          $SC_jbperij_I19 = jbperij%dim_2%LB
  547.          if ( levs > 0 ) then
  545.             $I_L545_213 = 0
  545.             do
  547.                $SCA_myfirstlon_I38 = (myfirstlon%base_addr)($I_L545_213 + max( myfirstlat_diag, myfirstlat ), 0)
  547.                $SCA_mylastlon_I39 = (mylastlon%base_addr)($I_L545_213 + max( myfirstlat_diag, myfirstlat ), 0)
  548.                if ( $SCA_mylastlon_I39 + -$SCA_myfirstlon_I38 >= 0 ) then
  547.                   $SI_L547_199_G7 = 0
  547.                   do
  548.                      $SI_L548_169_G10 = 0
  548.                      do
  547.                         $I_L547_234 = 0
  547. !dir$ shortloop16
  547. !dir$ blocking_size( 8, 8 )
  547.                         do
  548.                            $I_L548_231 = 0
  548. !dir$ ivdep
  548. !dir$ blocking_size( 256, 256 )
  548.                            do
  549.                               fieldglob($SCA_myfirstlon_I38 + $I_L548_231 + 256 * $SI_L548_169_G10, $I_L545_213 + max( myfirstlat_diag, myfirstlat ) + -$js_S16 + $jc_S23 * $I_L547_234 + 8 * $jc_S23 * $SI_L547_199_G7) = field((ibperij%base_addr)($SCA_myfirstlon_I38 + $I_L548_231 + 256 * $SI_L548_169_G10, $I_L545_213 + max( myfirstlat_diag, myfirstlat ), 0), 1 + $I_L547_234 + 8 * $SI_L547_199_G7, (jbperij%base_addr)($SCA_myfirstlon_I38 + $I_L548_231 + 256 * $SI_L548_169_G10, $I_L545_213 + max( myfirstlat_diag, myfirstlat ), 0))
  548.                               $I_L548_231 = 1 + $I_L548_231
  548.                               if ( $I_L548_231 >= min( 1 + $SCA_mylastlon_I39 + -$SCA_myfirstlon_I38, 256 + 256 * $SI_L548_169_G10 ) + -256 * $SI_L548_169_G10 ) exit
  548.                            enddo
  547.                            $I_L547_234 = 1 + $I_L547_234
  547.                            if ( $I_L547_234 >= min( levs, 8 + 8 * $SI_L547_199_G7 ) + -8 * $SI_L547_199_G7 ) exit
  547.                         enddo
  548.                         $SI_L548_169_G10 = 1 + $SI_L548_169_G10
  550.                         if ( $SI_L548_169_G10 >= _rsh( 256 + $SCA_mylastlon_I39 + -$SCA_myfirstlon_I38, 8 ) ) exit
  550.                      enddo
  547.                      $SI_L547_199_G7 = 1 + $SI_L547_199_G7
  547.                      if ( $SI_L547_199_G7 >= _rsh( 7 + levs, 3 ) ) exit
  547.                   enddo
  547.                endif
  553.                $I_L545_213 = 1 + $I_L545_213
  552.                if ( $I_L545_213 >= 1 + min( mylastlat_diag, mylastlat ) + -max( myfirstlat_diag, myfirstlat ) ) exit
  552.             enddo
  552.          endif
  552.       endif
  554.       $t_S35 = nrecs_diag
  554.       if ( nrecs_diag > 0 ) then
  554.          $I_L554_225 = 0
  554.          do
  555.             call mpi_waitany( nrecs_diag, requestr(1), index, status(1), ierr )
  556.             $ks_S24 = status(3)
  557.             if ( nrecs_diag > 0 ) then
  558.                $SC_myrecspr_diag_I24 = myrecspr_diag%dim_1%EX
  558.                $SC_myrecspr_diag_I25 = myrecspr_diag%dim_1%LB
  558.                $SC_myrecspr_diag_I27 = myrecspr_diag%dim_2%SM
  558.                $SC_myrecspr_diag_I26 = myrecspr_diag%dim_2%EX
  558.                $SC_myrecspr_diag_I28 = myrecspr_diag%dim_2%LB
  557.                $I_L557_171 = 0
  557. !dir$ ivdep
  557.                do
  558.                   if ( (myrecspr_diag%base_addr)(1, 1 + $I_L557_171, 0) + -$ks_S24 == 0 ) then
  559.                      n = ( 1 + $I_L557_171 )
  560.                      $ic_S13 = -1 + ib($I_L557_171)
  561.                      $m_S6 = (myrecspr_diag%base_addr)(2, $I_L557_171, 0)
  561.                      goto 10
  561.                   endif
  564.                   $I_L557_171 = 1 + $I_L557_171
  563.                   if ( $I_L557_171 >= nrecs_diag ) exit
  563.                enddo
  563.             endif
  563.    10       continue
  565.             $t_S26 = (myrecspr_diag%base_addr)(2, n, 0)
  565.             if ( $t_S26 + -$m_S6 > 0 ) then
  566.                $SC_myrecs_diag_I0 = myrecs_diag%dim_1%EX
  566.                $SC_myrecs_diag_I1 = myrecs_diag%dim_1%LB
  566.                $SC_myrecs_diag_I3 = myrecs_diag%dim_2%SM
  566.                $SC_myrecs_diag_I2 = myrecs_diag%dim_2%EX
  566.                $SC_myrecs_diag_I4 = myrecs_diag%dim_2%LB
  569.                if ( levs > 0 ) then
  565.                   $I_L565_215 = 0
  565.                   do
  566.                      $j_S30 = (myrecs_diag%base_addr)(3, 1 + $m_S6 + $I_L565_215, 0) + -$js_S16
  567.                      $t_S28 = (myrecs_diag%base_addr)(1, 1 + $m_S6 + $I_L565_215, 0)
  567.                      $t_S29 = (myrecs_diag%base_addr)(2, 1 + $m_S6 + $I_L565_215, 0)
  567.                      if ( $t_S29 + -$t_S28 >= 0 ) then
  569.                         $I_L569_201 = 0
  569.                         do
  567.                            $I_L567_173 = 0
  567. !dir$ ivdep
  567.                            do
  570.                               fieldglob($t_S28 + $I_L567_173, $j_S30 + $jc_S23 * $I_L569_201) = ibufrec(1 + $ic_S13 + $I_L569_201 + levs * $I_L567_173)
  574.                               $I_L567_173 = 1 + $I_L567_173
  569.                               if ( $I_L567_173 >= 1 + $t_S29 + -$t_S28 ) exit
  569.                            enddo
  572.                            $I_L569_201 = 1 + $I_L569_201
  572.                            if ( $I_L569_201 >= levs ) exit
  572.                         enddo
  573.                         $ic_S13 = ( levs + $ic_S13 + -( $t_S28 * levs ) + $t_S29 * levs )
  573.                      endif
  575.                      $I_L565_215 = 1 + $I_L565_215
  574.                      if ( $I_L565_215 >= ( $t_S26 + -$m_S6 ) ) exit
  574.                   enddo
  574.                else
  565.                   $I_L565_179 = 0
  565. !dir$ ivdep
  565.                   do
  567.                      $t_S28 = (myrecs_diag%base_addr)(1, 1 + $m_S6 + $I_L565_179, 0)
  567.                      $t_S29 = (myrecs_diag%base_addr)(2, 1 + $m_S6 + $I_L565_179, 0)
  567.                      if ( $t_S29 + -$t_S28 >= 0 ) then
  573.                         $ic_S13 = ( levs + $ic_S13 + -( $t_S28 * levs ) + $t_S29 * levs )
  573.                      endif
  575.                      $I_L565_179 = 1 + $I_L565_179
  574.                      if ( $I_L565_179 >= ( $t_S26 + -$m_S6 ) ) exit
  574.                   enddo
  574.                endif
  574.             endif
  576.             $I_L554_225 = 1 + $I_L554_225
  575.             if ( $I_L554_225 >= $t_S35 ) exit
  575.          enddo
  575.       endif
  577.       if ( nsends_diag > 0 ) then
  577.          call mpi_waitall( nsends_diag, requests(1), stat(1, 1), ierr )
  577.       endif
  578.       if ( nproc + -myid /= 0 ) then
  579.          ic = -( levs * imax * myfirstlat_diag ) + levs * imax + levs * imax * mylastlat_diag
  581.          if ( -( levs * imax * myfirstlat_diag ) + levs * imax + levs * imax * mylastlat_diag > 0 ) then
  581.             call mpi_isend( fieldglob(1, 1), ic, 1275069467, nproc, 89, comm, requests(1), ierr )
  581.          endif
  583.          call mpi_wait( requests(1), status(1), ierr )
  583.       else
  585.          ib(0) = 1
  586.          $F_A37 = 1 + t$55
  586.          if ( t$55 >= 0 ) then
  586.             $I_L586_187 = 0
  586. !dir$ ivdep
  586.             do
  586.                requestr($I_L586_187) = 738197504
  586.                $I_L586_187 = 1 + $I_L586_187
  586.                if ( $I_L586_187 >= $F_A37 ) exit
  586.             enddo
  586.          endif
  587.          $n_S37 = 0
  588.          $t_S38 = -1 + maxnodes
  588.          if ( maxnodes > 0 ) then
  588.             $I_L588_175 = 0
  588.             do
  589.                if ( $I_L588_175 + -myid /= 0 ) then
  590.                   ic = -( levs * imax * (firstandlastlat%base_addr)(1, $I_L588_175, 0) ) + levs * imax + levs * imax * (firstandlastlat%base_addr)(2, $I_L588_175, 0)
  591.                   if ( ic > 0 ) then
  593.                      t$719 = $I_L588_175
  592.                      call mpi_irecv( ibufrec(ib($I_L588_175)), ic, 1275069467, t$719, 89, comm, requestr($I_L588_175), ierr )
  594.                      $n_S37 = 1 + $n_S37
  594.                   endif
  594.                else
  597.                   ic = 0
  597.                endif
  599.                ib(1 + $I_L588_175) = ic + ib($I_L588_175)
  600.                $I_L588_175 = 1 + $I_L588_175
  598.                if ( $I_L588_175 >= 1 + $t_S38 ) exit
  598.             enddo
  598.          endif
  601.          if ( $n_S37 > 0 ) then
  605.             if ( levs <= 0 ) then
  601.                $I_L601_181 = 0
  601.                do
  602.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  612.                   $I_L601_181 = 1 + $I_L601_181
  611.                   if ( $I_L601_181 >= $n_S37 ) exit
  611.                enddo
  611.             else if ( t$47 > 0 ) then
  601.                $I_L601_227 = 0
  601.                do
  602.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  603.                   $ks_S39 = status(3)
  604.                   $ic_S42 = -1 + ib($ks_S39)
  607.                   $SC_firstandlastlat_I35 = (firstandlastlat%base_addr)(2, $ks_S39, 0)
  607.                   $SC_firstandlastlat_I34 = (firstandlastlat%base_addr)(1, $ks_S39, 0)
  607.                   if ( $SC_firstandlastlat_I35 + -$SC_firstandlastlat_I34 >= 0 ) then
  605.                      $I_L605_217 = 0
  605.                      do
  607.                         $I_L607_203 = 0
  607.                         do
  608.                            $F_A38 = t$47
  608.                            $I_L608_189 = 0
  608. !dir$ ivdep
  608.                            do
  608.                               fieldglob(1 + $I_L608_189, $SC_firstandlastlat_I34 + $I_L607_203 + jmax * $I_L605_217) = ibufrec(1 + $ic_S42 + $I_L608_189 + -( imax * $SC_firstandlastlat_I34 * $I_L605_217 ) + imax * $I_L607_203 + imax * $SC_firstandlastlat_I35 * $I_L605_217 + imax * $I_L605_217)
  608.                               $I_L608_189 = 1 + $I_L608_189
  608.                               if ( $I_L608_189 >= $F_A38 ) exit
  608.                            enddo
  610.                            $I_L607_203 = 1 + $I_L607_203
  607.                            if ( $I_L607_203 >= 1 + $SC_firstandlastlat_I35 + -$SC_firstandlastlat_I34 ) exit
  607.                         enddo
  611.                         $I_L605_217 = 1 + $I_L605_217
  610.                         if ( $I_L605_217 >= levs ) exit
  610.                      enddo
  610.                   endif
  612.                   $I_L601_227 = 1 + $I_L601_227
  611.                   if ( $I_L601_227 >= $n_S37 ) exit
  611.                enddo
  611.             else
  601.                $I_L601_193 = 0
  601.                do
  602.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  612.                   $I_L601_193 = 1 + $I_L601_193
  611.                   if ( $I_L601_193 >= $n_S37 ) exit
  611.                enddo
  611.             endif
  611.          endif
  613.          j1 = 1
  614.          if ( levs > 0 ) then
  614.             $I_L614_229 = 0
  614.             do
  615.                $t_S49 = jmax
  615.                if ( jmax > 0 ) then
  615.                   $I_L615_219 = 0
  615.                   do
  616.                      _fwrite( _clist( 0, 0, 2, 97, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  616.                      $_IOitem_P0(0) = ( 1 + $I_L615_219 )
  616.                      $_IOitem_P0(1) = ( 1 + $I_L614_229 )
  616.                      _fwrite( _clist( 0, 0, 0, 97, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IOitem_P0(:( 0, 1, 1 )), 0x2000200000000L ) ) )
  616.                      if ( ( ( 1 + $I_L615_219 ) < imaxperj%dim_1%LB .or. ( 1 + $I_L615_219 ) > -1 + imaxperj%dim_1%LB + imaxperj%dim_1%EX ) /= .false. ) then
  616.                          _substr(t$779,1,19) = 'Communications.f90'
  616.                          _substr(t$780,1,9) = 'IMAXPERJ'
  616.                         t$781 = imaxperj%dim_1%LB
  616.                         t$782 = -1 + imaxperj%dim_1%LB + imaxperj%dim_1%EX
  616.                         t$783 = 1 + $I_L615_219
  616.                         call _bounds_error(  _substr(t$779,1,19), 1116,  _substr(t$780,1,9), 1, t$781, t$782, t$783, t$778 )
  616.                      endif
  616.                      $t_S48 = (imaxperj%base_addr)(1 + $I_L615_219, 0)
  616.                      if ( $t_S48 > 0 ) then
  616.                         $I_L616_205 = 0
  616.                         do
  616.                            $I_L616_177 = 0
  616. !dir$ shortloop16
  616.                            do
  616.                               if ( ( ( 1 + $I_L616_177 + 16 * $I_L616_205 ) <= 0 .or. ( 1 + $I_L616_177 + 16 * $I_L616_205 ) > t$47 ) /= .false. ) then
  616.                                   _substr(t$788,1,19) = 'Communications.f90'
  616.                                   _substr(t$789,1,10) = 'FIELDGLOB'
  616.                                  t$790 = 1 + $I_L616_177 + 16 * $I_L616_205
  616.                                  call _bounds_error(  _substr(t$788,1,19), 1116,  _substr(t$789,1,10), 1, 1, t$47, t$790, t$787 )
  616.                               endif
  616.                               if ( ( ( j1 + $I_L615_219 ) <= 0 .or. ( j1 + $I_L615_219 ) > t$48 ) /= .false. ) then
  616.                                   _substr(t$792,1,19) = 'Communications.f90'
  616.                                   _substr(t$793,1,10) = 'FIELDGLOB'
  616.                                  t$794 = j1 + $I_L615_219
  616.                                  call _bounds_error(  _substr(t$792,1,19), 1116,  _substr(t$793,1,10), 2, 1, t$48, t$794, t$791 )
  616.                               endif
  616.                               $IOitem_O0 = fieldglob(1 + $I_L616_177 + 16 * $I_L616_205, j1 + $I_L615_219)
  616.                               $_IO_STRIP_P1($I_L616_177) = $IOitem_O0
  616.                               $I_L616_177 = 1 + $I_L616_177
  616.                               if ( $I_L616_177 >= min( $t_S48, 16 + 16 * $I_L616_205 ) + -16 * $I_L616_205 ) exit
  616.                            enddo
  616.                            _fwrite( _clist( 0, 0, 0, 97, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)$_IO_STRIP_P1(:( 0, ( -1 + min( $t_S48, 16 + 16 * $I_L616_205 ) + -16 * $I_L616_205 ), 1 )), 0x2000200000000L ) ) )
  616.                            $I_L616_205 = 1 + $I_L616_205
  616.                            if ( $I_L616_205 >= 1 + max( 0, -1 + _rsh( 15 + $t_S48, 4 ) ) ) exit
  616.                         enddo
  616.                      endif
  616.                      _fwrite( _clist( 0, 0, 1, 97, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
  618.                      $I_L615_219 = 1 + $I_L615_219
  617.                      if ( $I_L615_219 >= $t_S49 ) exit
  617.                   enddo
  617.                   j1 = j1 + $t_S49
  617.                endif
  619.                $I_L614_229 = 1 + $I_L614_229
  618.                if ( $I_L614_229 >= levs ) exit
  618.             enddo
  618.          endif
  618.       endif
  489.       _free( t$322 )
  622.       return
  622.       end
  622.       
  778.       
  778.       subroutine collect_grid_sur_print( fields, interp_type, nf, nproc, nunit )
  122.       if ( t$229 == 0 ) then
  122.          t$347(1) = 3
  122.          t$348(1) = 0
  122.          t$349(1) = 0
  122.          t$344(1) = int( loc( t$228 ), 8 )
  122.          t$345(1) = 0
  122.          t$346(1) = int( loc( t$343 ), 8 )
  122.          t$229 = __get_dynamic_type( 2, t$344(1), t$347(1), 1, t$345(1), t$346(1), t$348(1), t$349(1) )
  122.       endif
  625.       t$60 = nf
  631.       t$351 = max( 0, nf )
  625.       t$62 = imax
  625.       t$63 = ( nf * jmax )
  633.       t$352 = max( 0, imax )
  625.       t$353 = max( 0, imax )
  633.       t$354 = max( 0, ( nf * jmax ) )
  625.       t$355 = max( 0, imax ) * max( 0, ( nf * jmax ) )
  632.       t$358 = 8 * max( 0, imax ) * max( 0, ( nf * jmax ) )
  633.       g = $_StaticDV_P0
  633.       g%base_addr = pointer to array[1] of array[1] of real (kind=8)( 0 )
  633.       g%dim_1%LB = 1
  633.       g%dim_1%EX = 0
  633.       g%dim_1%SM = 1
  633.       g%dim_2%LB = 1
  633.       g%dim_2%EX = 0
  633.       g%dim_2%SM = 1
  625.       t$66 = maxnodes
  625.       t$359 = 1 + maxnodes
  644.       t$360 = max( 0, 1 + maxnodes )
  644.       t$362 = 8 * max( 0, imax ) * max( 0, ( nf * jmax ) ) + 4 * max( 0, 1 + maxnodes )
  641.       t$364 = 8 * max( 0, imax ) * max( 0, ( nf * jmax ) ) + 8 * max( 0, 1 + maxnodes )
  625.       t$65 = ( 1 + nsends_diag )
  640.       t$365 = max( 0, ( 1 + nsends_diag ) )
  640.       t$367 = 8 * max( 0, imax ) * max( 0, ( nf * jmax ) ) + 8 * max( 0, 1 + maxnodes ) + 4 * max( 0, ( 1 + nsends_diag ) )
  634.       t$368 = 8 * ( 7 + 8 * max( 0, imax ) * max( 0, ( nf * jmax ) ) + 8 * max( 0, 1 + maxnodes ) + 4 * max( 0, ( 1 + nsends_diag ) ) ) / 8
  634.       t$370 = t$368 + 8 * max( 0, imax )
  625.       t$69 = nsends_diag
  643.       t$371 = max( 0, nsends_diag )
  625.       t$372 = 5 * max( 0, nsends_diag )
  643.       t$374 = t$368 + 8 * max( 0, imax ) + 20 * max( 0, nsends_diag )
  625.       t$356 = int( _alloc( t$368 + 8 * max( 0, imax ) + 20 * max( 0, nsends_diag ) ), 8 )
  633.       t$357 = t$356
  644.       t$361 = t$356 + 8 * max( 0, imax ) * max( 0, ( nf * jmax ) )
  641.       t$363 = t$356 + 8 * max( 0, imax ) * max( 0, ( nf * jmax ) ) + 4 * max( 0, 1 + maxnodes )
  640.       t$366 = t$356 + 8 * max( 0, imax ) * max( 0, ( nf * jmax ) ) + 8 * max( 0, 1 + maxnodes )
  634.       t$369 = t$368 + t$356
  643.       t$373 = t$368 + t$356 + 8 * max( 0, imax )
  646.       comm = 1140850688
  647.       if ( dimrecbuf < nf * imax * jmax ) then
  648.          dimrecbuf = nf * imax * jmax
  649.          $_allo_P1(0) = 0x1000000000001L
  649.          $_allo_P1(1) = loc( bufrec )
  649.          call __deallocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
  649.          bufrec%header%assoc = 0
  650.          bufrec%header%a_contig = 1
  650.          bufrec%dim_1%LB = 1
  650.          bufrec%dim_1%EX = ( max( 0, nf * imax * jmax ) )
  650.          bufrec%dim_1%SM = 1
  650.          $_allo_P2(0) = 0x1000000000001L
  650.          $_allo_P2(1) = loc( bufrec )
  650.          call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
  650.       endif
  652.       if ( nproc + -myid /= 0 ) then
  653.          $js_S23 = -1 + myfirstlat_diag
  654.          $jc_S22 = 1 + mylastlat_diag + -myfirstlat_diag
  654.       else
  656.          $js_S23 = 0
  657.          $jc_S22 = jmax
  657.       endif
  659.       ib(0) = 1
  660.       $m_S1 = 0
  661.       $t_S4 = nrecs_diag
  661.       if ( nrecs_diag > 0 ) then
  661.          $I_L661_194 = 0
  661.          do
  662.             ic = 0
  663.             $t_S2 = (myrecspr_diag%base_addr)(2, 1 + $I_L661_194, 0)
  663.             if ( $t_S2 + -$m_S1 > 0 ) then
  664.                $SC_myrecs_diag_I0 = myrecs_diag%dim_1%EX
  664.                $SC_myrecs_diag_I1 = myrecs_diag%dim_1%LB
  664.                $SC_myrecs_diag_I3 = myrecs_diag%dim_2%SM
  664.                $SC_myrecs_diag_I2 = myrecs_diag%dim_2%EX
  664.                $SC_myrecs_diag_I4 = myrecs_diag%dim_2%LB
  663.                $I_L663_164 = 0
  663. !dir$ ivdep
  663.                do
  664.                   ic = 1 + ic + (myrecs_diag%base_addr)(2, 1 + $m_S1 + $I_L663_164, 0) + -(myrecs_diag%base_addr)(1, 1 + $m_S1 + $I_L663_164, 0)
  665.                   $I_L663_164 = 1 + $I_L663_164
  663.                   if ( $I_L663_164 >= ( $t_S2 + -$m_S1 ) ) exit
  663.                enddo
  663.             endif
  666.             $m_S1 = $t_S2
  667.             ib(1 + $I_L661_194) = ib($I_L661_194) + nf * ic
  668.             t$802 = ib(1 + $I_L661_194) + -ib($I_L661_194)
  668.             call mpi_irecv( (bufrec%base_addr)(ib($I_L661_194), 0), t$802, 1275070495, (myrecspr_diag%base_addr)(1, 1 + $I_L661_194, 0), 88, comm, requestr(1 + $I_L661_194), ierr )
  670.             $I_L661_194 = 1 + $I_L661_194
  670.             if ( $I_L661_194 >= $t_S4 ) exit
  670.          enddo
  670.       endif
  671.       $m_S7 = 0
  672.       $ic_S14 = 1
  673.       $iold_S15 = 1
  674.       $t_S16 = nsends_diag
  674.       if ( nsends_diag > 0 ) then
  675.          if ( nf > 0 ) then
  674.             $I_L674_220 = 0
  674.             do
  677.                $SC_mysendspr_diag_I10 = (mysendspr_diag%base_addr)(2, 1 + $I_L674_220, 0)
  680.                $SC_ibperij_I16 = ibperij%dim_1%EX
  680.                $SC_ibperij_I17 = ibperij%dim_1%LB
  680.                $SC_ibperij_I19 = ibperij%dim_2%SM
  680.                $SC_ibperij_I18 = ibperij%dim_2%EX
  680.                $SC_ibperij_I20 = ibperij%dim_2%LB
  680.                $SC_jbperij_I21 = jbperij%dim_1%EX
  680.                $SC_jbperij_I22 = jbperij%dim_1%LB
  680.                $SC_jbperij_I24 = jbperij%dim_2%SM
  680.                $SC_jbperij_I23 = jbperij%dim_2%EX
  680.                $SC_jbperij_I25 = jbperij%dim_2%LB
  680.                $SC_bufsend_I26 = bufsend%dim_1%EX
  680.                $SC_bufsend_I27 = bufsend%dim_1%LB
  678.                $SC_mysends_diag_I11 = mysends_diag%dim_1%EX
  678.                $SC_mysends_diag_I12 = mysends_diag%dim_1%LB
  678.                $SC_mysends_diag_I14 = mysends_diag%dim_2%SM
  678.                $SC_mysends_diag_I13 = mysends_diag%dim_2%EX
  678.                $SC_mysends_diag_I15 = mysends_diag%dim_2%LB
  677.                if ( $SC_mysendspr_diag_I10 + -$m_S7 > 0 ) then
  675.                   $I_L675_210 = 0
  675.                   do
  676.                      g = fields(1 + $I_L675_210)%p
  680.                      $SC_g_I51 = g%dim_1%SM
  680.                      $SC_g_I50 = g%dim_1%EX
  680.                      $SC_g_I52 = g%dim_1%LB
  680.                      $SC_g_I54 = g%dim_2%SM
  680.                      $SC_g_I53 = g%dim_2%EX
  680.                      $SC_g_I55 = g%dim_2%LB
  677.                      $I_L677_196 = 0
  677.                      do
  678.                         $j_S13 = (mysends_diag%base_addr)(3, 1 + $m_S7 + $I_L677_196, 0)
  679.                         $t_S10 = (mysends_diag%base_addr)(1, 1 + $m_S7 + $I_L677_196, 0)
  679.                         $t_S11 = (mysends_diag%base_addr)(2, 1 + $m_S7 + $I_L677_196, 0)
  679.                         if ( $t_S11 + -$t_S10 >= 0 ) then
  679.                            $I_L679_166 = 0
  679. !dir$ ivdep
  679.                            do
  680.                               (bufsend%base_addr)($ic_S14 + $I_L679_166, 0) = (g%base_addr)((ibperij%base_addr)($t_S10 + $I_L679_166, $j_S13, 0), (jbperij%base_addr)($t_S10 + $I_L679_166, $j_S13, 0), 0)
  682.                               $I_L679_166 = 1 + $I_L679_166
  679.                               if ( $I_L679_166 >= 1 + $t_S11 + -$t_S10 ) exit
  679.                            enddo
  681.                            $ic_S14 = ( 1 + $t_S11 + $ic_S14 + -$t_S10 )
  681.                         endif
  683.                         $I_L677_196 = 1 + $I_L677_196
  682.                         if ( $I_L677_196 >= ( $SC_mysendspr_diag_I10 + -$m_S7 ) ) exit
  682.                      enddo
  684.                      $I_L675_210 = 1 + $I_L675_210
  683.                      if ( $I_L675_210 >= nf ) exit
  683.                   enddo
  683.                else
  675.                   $I_L675_178 = 0
  675. !dir$ ivdep
  675.                   do
  676.                      g = fields(1 + $I_L675_178)%p
  684.                      $I_L675_178 = 1 + $I_L675_178
  683.                      if ( $I_L675_178 >= nf ) exit
  683.                   enddo
  676.                   g = fields(nf)%p
  676.                endif
  685.                t$802 = $ic_S14 + -$iold_S15
  685.                call mpi_isend( (bufsend%base_addr)($iold_S15, 0), t$802, 1275070495, (mysendspr_diag%base_addr)(1, 1 + $I_L674_220, 0), 88, comm, requests(1 + $I_L674_220), ierr )
  687.                $m_S7 = (mysendspr_diag%base_addr)(2, 1 + $I_L674_220, 0)
  688.                $iold_S15 = $ic_S14
  689.                $I_L674_220 = 1 + $I_L674_220
  687.                if ( $I_L674_220 >= $t_S16 ) exit
  687.             enddo
  684.             n = ( 1 + nf )
  684.          else
  674.             $I_L674_180 = 0
  674.             do
  685.                t$802 = 0
  685.                call mpi_isend( (bufsend%base_addr)(1, 0), t$802, 1275070495, (mysendspr_diag%base_addr)(1, 1 + $I_L674_180, 0), 88, comm, requests(1 + $I_L674_180), ierr )
  689.                $I_L674_180 = 1 + $I_L674_180
  687.                if ( $I_L674_180 >= $t_S16 ) exit
  687.             enddo
  675.             n = 1
  687.             $m_S7 = (mysendspr_diag%base_addr)(2, $t_S16, 0)
  687.          endif
  687.       endif
  690.       if ( nf > 0 ) then
  694.          $SC_mylastlon_I30 = mylastlon%dim_1%EX
  694.          $SC_mylastlon_I31 = mylastlon%dim_1%LB
  694.          $SC_myfirstlon_I28 = myfirstlon%dim_1%EX
  694.          $SC_myfirstlon_I29 = myfirstlon%dim_1%LB
  695.          $SC_ibperij_I16 = ibperij%dim_1%EX
  695.          $SC_ibperij_I17 = ibperij%dim_1%LB
  695.          $SC_ibperij_I19 = ibperij%dim_2%SM
  695.          $SC_ibperij_I18 = ibperij%dim_2%EX
  695.          $SC_ibperij_I20 = ibperij%dim_2%LB
  695.          $SC_jbperij_I21 = jbperij%dim_1%EX
  695.          $SC_jbperij_I22 = jbperij%dim_1%LB
  695.          $SC_jbperij_I24 = jbperij%dim_2%SM
  695.          $SC_jbperij_I23 = jbperij%dim_2%EX
  695.          $SC_jbperij_I25 = jbperij%dim_2%LB
  692.          if ( min( mylastlat_diag, mylastlat ) + -max( myfirstlat_diag, myfirstlat ) >= 0 ) then
  690.             $I_L690_212 = 0
  690.             do
  691.                g = fields(1 + $I_L690_212)%p
  695.                $SC_g_I51 = g%dim_1%SM
  695.                $SC_g_I50 = g%dim_1%EX
  695.                $SC_g_I52 = g%dim_1%LB
  695.                $SC_g_I54 = g%dim_2%SM
  695.                $SC_g_I53 = g%dim_2%EX
  695.                $SC_g_I55 = g%dim_2%LB
  692.                $I_L692_198 = 0
  692.                do
  694.                   $t_S19 = (myfirstlon%base_addr)($I_L692_198 + max( myfirstlat_diag, myfirstlat ), 0)
  694.                   $t_S20 = (mylastlon%base_addr)($I_L692_198 + max( myfirstlat_diag, myfirstlat ), 0)
  694.                   if ( $t_S20 + -$t_S19 >= 0 ) then
  694.                      $I_L694_168 = 0
  694. !dir$ loop_info (automatic) cache_nt( jbperij, ibperij )
  694. !dir$ unroll 4
  694.                      do
  695.                         fieldglob($t_S19 + $I_L694_168, $I_L692_198 + max( myfirstlat_diag, myfirstlat ) + -$js_S23 + $jc_S22 * $I_L690_212) = (g%base_addr)((ibperij%base_addr)($t_S19 + $I_L694_168, $I_L692_198 + max( myfirstlat_diag, myfirstlat ), 0), (jbperij%base_addr)($t_S19 + $I_L694_168, $I_L692_198 + max( myfirstlat_diag, myfirstlat ), 0), 0)
  696.                         $I_L694_168 = 1 + $I_L694_168
  694.                         if ( $I_L694_168 >= 1 + $t_S20 + -$t_S19 ) exit
  694.                      enddo
  694.                   endif
  697.                   $I_L692_198 = 1 + $I_L692_198
  696.                   if ( $I_L692_198 >= 1 + min( mylastlat_diag, mylastlat ) + -max( myfirstlat_diag, myfirstlat ) ) exit
  696.                enddo
  698.                $I_L690_212 = 1 + $I_L690_212
  697.                if ( $I_L690_212 >= nf ) exit
  697.             enddo
  697.          endif
  697.       endif
  699.       $t_S34 = nrecs_diag
  699.       if ( nrecs_diag > 0 ) then
  699.          $I_L699_222 = 0
  699.          do
  700.             call mpi_waitany( nrecs_diag, requestr(1), index, status(1), ierr )
  701.             $ks_S24 = status(3)
  702.             if ( nrecs_diag > 0 ) then
  703.                $SC_myrecspr_diag_I32 = myrecspr_diag%dim_1%EX
  703.                $SC_myrecspr_diag_I33 = myrecspr_diag%dim_1%LB
  703.                $SC_myrecspr_diag_I35 = myrecspr_diag%dim_2%SM
  703.                $SC_myrecspr_diag_I34 = myrecspr_diag%dim_2%EX
  703.                $SC_myrecspr_diag_I36 = myrecspr_diag%dim_2%LB
  702.                $I_L702_170 = 0
  702. !dir$ ivdep
  702.                do
  703.                   if ( (myrecspr_diag%base_addr)(1, 1 + $I_L702_170, 0) + -$ks_S24 == 0 ) then
  704.                      n = ( 1 + $I_L702_170 )
  705.                      $ic_S14 = ib($I_L702_170)
  706.                      $m_S7 = (myrecspr_diag%base_addr)(2, $I_L702_170, 0)
  706.                      goto 10
  706.                   endif
  709.                   $I_L702_170 = 1 + $I_L702_170
  708.                   if ( $I_L702_170 >= nrecs_diag ) exit
  708.                enddo
  708.             endif
  708.    10       continue
  710.             if ( nf > 0 ) then
  711.                $SC_myrecspr_diag_I37 = (myrecspr_diag%base_addr)(2, n, 0)
  712.                $SC_myrecs_diag_I0 = myrecs_diag%dim_1%EX
  712.                $SC_myrecs_diag_I1 = myrecs_diag%dim_1%LB
  712.                $SC_myrecs_diag_I3 = myrecs_diag%dim_2%SM
  712.                $SC_myrecs_diag_I2 = myrecs_diag%dim_2%EX
  712.                $SC_myrecs_diag_I4 = myrecs_diag%dim_2%LB
  714.                $SC_bufrec_I38 = bufrec%dim_1%EX
  714.                $SC_bufrec_I39 = bufrec%dim_1%LB
  711.                if ( $SC_myrecspr_diag_I37 + -$m_S7 > 0 ) then
  710.                   $I_L710_214 = 0
  710.                   do
  711.                      $I_L711_200 = 0
  711.                      do
  712.                         $j_S32 = ( (myrecs_diag%base_addr)(3, 1 + $m_S7 + $I_L711_200, 0) + -$js_S23 + $jc_S22 * $I_L710_214 )
  713.                         $t_S29 = (myrecs_diag%base_addr)(1, 1 + $m_S7 + $I_L711_200, 0)
  713.                         $t_S30 = (myrecs_diag%base_addr)(2, 1 + $m_S7 + $I_L711_200, 0)
  713.                         if ( $t_S30 + -$t_S29 >= 0 ) then
  713.                            $I_L713_172 = 0
  713. !dir$ ivdep
  713.                            do
  714.                               fieldglob($t_S29 + $I_L713_172, $j_S32) = (bufrec%base_addr)($ic_S14 + $I_L713_172, 0)
  716.                               $I_L713_172 = 1 + $I_L713_172
  713.                               if ( $I_L713_172 >= 1 + $t_S30 + -$t_S29 ) exit
  713.                            enddo
  715.                            $ic_S14 = ( 1 + $ic_S14 + $t_S30 + -$t_S29 )
  715.                         endif
  717.                         $I_L711_200 = 1 + $I_L711_200
  716.                         if ( $I_L711_200 >= ( $SC_myrecspr_diag_I37 + -$m_S7 ) ) exit
  716.                      enddo
  718.                      $I_L710_214 = 1 + $I_L710_214
  717.                      if ( $I_L710_214 >= nf ) exit
  717.                   enddo
  717.                endif
  717.             endif
  719.             $I_L699_222 = 1 + $I_L699_222
  718.             if ( $I_L699_222 >= $t_S34 ) exit
  718.          enddo
  718.       endif
  720.       if ( nsends_diag > 0 ) then
  720.          call mpi_waitall( nsends_diag, requests(1), stat(1, 1), ierr )
  720.       endif
  721.       if ( reducedgrid /= .false. ) then
  722.          if ( nf > 0 ) then
  722.             $I_L722_216 = 0
  722.             do
  723.                $t_S36 = myfirstlat_diag
  723.                $t_S38 = mylastlat_diag
  723.                if ( mylastlat_diag + -myfirstlat_diag >= 0 ) then
  726.                   $SC_interp_type_I40 = interp_type(1 + $I_L722_216)
  726.                   if ( $SC_interp_type_I40 == 1 ) then
  723.                      $I_L723_202 = 0
  723.                      do
  725.                         $F_A33 = (imaxperj%base_addr)($t_S36 + $I_L723_202, 0)
  725.                         if ( (imaxperj%base_addr)($t_S36 + $I_L723_202, 0) > 0 ) then
  725.                            $I_L725_184 = 0
  725. !dir$ ivdep
  725.                            do
  725.                               saux(1 + $I_L725_184) = fieldglob(1 + $I_L725_184, $t_S36 + $I_L723_202 + -$js_S23 + $jc_S22 * $I_L722_216)
  725.                               $I_L725_184 = 1 + $I_L725_184
  725.                               if ( $I_L725_184 >= $F_A33 ) exit
  725.                            enddo
  725.                         endif
  727.                         call cycliclinear( (imaxperj%base_addr)($t_S36 + $I_L723_202, 0), imax, saux(1), fieldglob(1, $t_S36 + $I_L723_202 + -$js_S23 + $jc_S22 * $I_L722_216), 1, imax )
  733.                         $I_L723_202 = 1 + $I_L723_202
  732.                         if ( $I_L723_202 >= 1 + $t_S38 + -$t_S36 ) exit
  732.                      enddo
  732.                   else if ( $SC_interp_type_I40 == 2 ) then
  723.                      $I_L723_206 = 0
  723.                      do
  725.                         $F_A34 = (imaxperj%base_addr)($t_S36 + $I_L723_206, 0)
  725.                         if ( (imaxperj%base_addr)($t_S36 + $I_L723_206, 0) > 0 ) then
  725.                            $I_L725_186 = 0
  725. !dir$ ivdep
  725.                            do
  725.                               saux(1 + $I_L725_186) = fieldglob(1 + $I_L725_186, $t_S36 + $I_L723_206 + -$js_S23 + $jc_S22 * $I_L722_216)
  725.                               $I_L725_186 = 1 + $I_L725_186
  725.                               if ( $I_L725_186 >= $F_A34 ) exit
  725.                            enddo
  725.                         endif
  730.                         call cyclicnearest_r( (imaxperj%base_addr)($t_S36 + $I_L723_206, 0), imax, saux(1), fieldglob(1, $t_S36 + $I_L723_206 + -$js_S23 + $jc_S22 * $I_L722_216), 1, imax )
  733.                         $I_L723_206 = 1 + $I_L723_206
  732.                         if ( $I_L723_206 >= 1 + $t_S38 + -$t_S36 ) exit
  732.                      enddo
  732.                   else
  725.                      $SC_imaxperj_I48 = imaxperj%dim_1%EX
  725.                      $SC_imaxperj_I49 = imaxperj%dim_1%LB
  723.                      $I_L723_208 = 0
  723.                      do
  725.                         $F_A35 = (imaxperj%base_addr)(myfirstlat_diag + $I_L723_208, 0)
  725.                         if ( (imaxperj%base_addr)(myfirstlat_diag + $I_L723_208, 0) > 0 ) then
  725.                            $I_L725_188 = 0
  725. !dir$ ivdep
  725.                            do
  725.                               saux(1 + $I_L725_188) = fieldglob(1 + $I_L725_188, myfirstlat_diag + $I_L723_208 + -$js_S23 + $jc_S22 * $I_L722_216)
  725.                               $I_L725_188 = 1 + $I_L725_188
  725.                               if ( $I_L725_188 >= $F_A35 ) exit
  725.                            enddo
  725.                         endif
  733.                         $I_L723_208 = 1 + $I_L723_208
  732.                         if ( $I_L723_208 >= 1 + mylastlat_diag + -myfirstlat_diag ) exit
  732.                      enddo
  732.                   endif
  732.                endif
  734.                $I_L722_216 = 1 + $I_L722_216
  733.                if ( $I_L722_216 >= nf ) exit
  733.             enddo
  733.          endif
  733.       endif
  736.       if ( nproc + -myid /= 0 ) then
  737.          ic = -( nf * imax * myfirstlat_diag ) + nf * imax + nf * imax * mylastlat_diag
  739.          if ( -( nf * imax * myfirstlat_diag ) + nf * imax + nf * imax * mylastlat_diag > 0 ) then
  739.             call mpi_isend( fieldglob(1, 1), ic, 1275070495, nproc, 89, comm, requests(1), ierr )
  739.          endif
  741.          call mpi_wait( requests(1), status(1), ierr )
  741.       else
  743.          ib(0) = 1
  744.          $F_A36 = 1 + t$66
  744.          if ( t$66 >= 0 ) then
  744.             $I_L744_190 = 0
  744. !dir$ ivdep
  744.             do
  744.                requestr($I_L744_190) = 738197504
  744.                $I_L744_190 = 1 + $I_L744_190
  744.                if ( $I_L744_190 >= $F_A36 ) exit
  744.             enddo
  744.          endif
  745.          $n_S40 = 0
  746.          $t_S41 = -1 + maxnodes
  746.          if ( maxnodes > 0 ) then
  746.             $I_L746_174 = 0
  746.             do
  747.                if ( $I_L746_174 + -myid /= 0 ) then
  748.                   ic = -( nf * imax * (firstandlastlat%base_addr)(1, $I_L746_174, 0) ) + nf * imax + nf * imax * (firstandlastlat%base_addr)(2, $I_L746_174, 0)
  749.                   if ( ic > 0 ) then
  751.                      t$802 = $I_L746_174
  750.                      call mpi_irecv( (bufrec%base_addr)(ib($I_L746_174), 0), ic, 1275070495, t$802, 89, comm, requestr($I_L746_174), ierr )
  752.                      $n_S40 = 1 + $n_S40
  752.                   endif
  752.                else
  755.                   ic = 0
  755.                endif
  757.                ib(1 + $I_L746_174) = ic + ib($I_L746_174)
  758.                $I_L746_174 = 1 + $I_L746_174
  756.                if ( $I_L746_174 >= 1 + $t_S41 ) exit
  756.             enddo
  756.          endif
  759.          if ( $n_S40 > 0 ) then
  763.             if ( nf > 0 ) then
  759.                $I_L759_224 = 0
  759.                do
  760.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  761.                   $ks_S42 = status(3)
  762.                   $ic_S45 = -1 + ib($ks_S42)
  765.                   $SC_firstandlastlat_I47 = (firstandlastlat%base_addr)(2, $ks_S42, 0)
  765.                   $SC_firstandlastlat_I46 = (firstandlastlat%base_addr)(1, $ks_S42, 0)
  766.                   $SC_bufrec_I38 = bufrec%dim_1%EX
  766.                   $SC_bufrec_I39 = bufrec%dim_1%LB
  765.                   if ( $SC_firstandlastlat_I47 + -$SC_firstandlastlat_I46 >= 0 ) then
  763.                      $I_L763_218 = 0
  763.                      do
  765.                         $I_L765_204 = 0
  765.                         do
  766.                            $F_A37 = t$62
  766.                            if ( t$62 > 0 ) then
  766.                               $I_L766_192 = 0
  766. !dir$ ivdep
  766.                               do
  766.                                  fieldglob(1 + $I_L766_192, $SC_firstandlastlat_I46 + $I_L765_204 + jmax * $I_L763_218) = (bufrec%base_addr)(1 + $ic_S45 + $I_L766_192 + -( imax * $SC_firstandlastlat_I46 * $I_L763_218 ) + imax * $I_L765_204 + imax * $I_L763_218 + imax * $SC_firstandlastlat_I47 * $I_L763_218, 0)
  766.                                  $I_L766_192 = 1 + $I_L766_192
  766.                                  if ( $I_L766_192 >= $F_A37 ) exit
  766.                               enddo
  766.                            endif
  768.                            $I_L765_204 = 1 + $I_L765_204
  765.                            if ( $I_L765_204 >= 1 + $SC_firstandlastlat_I47 + -$SC_firstandlastlat_I46 ) exit
  765.                         enddo
  769.                         $I_L763_218 = 1 + $I_L763_218
  768.                         if ( $I_L763_218 >= nf ) exit
  768.                      enddo
  768.                   endif
  770.                   $I_L759_224 = 1 + $I_L759_224
  769.                   if ( $I_L759_224 >= $n_S40 ) exit
  769.                enddo
  769.             else
  759.                $I_L759_182 = 0
  759.                do
  760.                   call mpi_waitany( maxnodes, requestr(0), index, status(1), ierr )
  770.                   $I_L759_182 = 1 + $I_L759_182
  769.                   if ( $I_L759_182 >= $n_S40 ) exit
  769.                enddo
  769.             endif
  769.          endif
  771.          if ( nf > 0 ) then
  771.             $I_L771_176 = 0
  771.             do
  774. !dir$ suppress fieldglob(1, j1)
  774.                t$868 = $_StaticDV_P3
  774.                t$868%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( fieldglob(1, 1 + jmax * $I_L771_176) ) )
  774.                t$868%header%el_len = 64
  774.                t$868%header%assoc = 1
  774.                t$868%header%ptr_alloc = 0
  774.                t$868%header%p_or_a = 0
  774.                t$868%header%a_contig = 1
  774.                t$868%header%n_dim = 2
  774.                t$868%header%orig_base = 0
  774.                t$868%header%orig_size = 0
  774.                t$868%header%n_codim = 0
  774.                t$868%header%dv_versn = 2
  774.                t$868%header%dv_smunit = 64
  774.                t$868%header%d_type = 0
  774.                t$868%header%n_params = 0
  774.                t$868%header%d_type_idx = 13
  774.                t$868%dim_1%LB = 1
  774.                t$868%dim_1%EX = ( max( 0, ( 1 + -1 + t$62 ) ) )
  774.                t$868%dim_1%SM = 1
  774.                t$868%dim_2%LB = 1
  774.                t$868%dim_2%EX = ( max( 0, jmax ) )
  774.                t$868%dim_2%SM = max( 0, t$62 )
  774.                call fwritefield82d( nunit, t$868 )
  775.                $I_L771_176 = 1 + $I_L771_176
  775.                if ( $I_L771_176 >= nf ) exit
  775.             enddo
  775.          endif
  775.       endif
  625.       _free( t$356 )
  778.       return
  778.       end
  778.       
  881.       
  881.       subroutine collect_gauss( gauss, gauss_out, nf )
  780.       t$71 = ibmax
  780.       t$72 = nf
  780.       t$73 = jbmax
  783.       t$375 = _zla( 0, ibmax )
  780.       t$376 = _zla( 0, ibmax )
  783.       t$377 = _zla( 0, nf )
  780.       t$378 = _zla( 0, nf ) * _zla( 0, ibmax )
  783.       t$379 = _zla( 0, jbmax )
  780.       t$380 = _zla( 0, nf ) * _zla( 0, ibmax ) * _zla( 0, jbmax )
  780.       t$74 = imax
  780.       t$75 = myjmax_d
  784.       t$381 = _zla( 0, imax )
  780.       t$382 = _zla( 0, imax )
  784.       t$383 = _zla( 0, myjmax_d )
  780.       t$384 = _zla( 0, imax ) * _zla( 0, myjmax_d )
  780.       t$385 = _zla( 0, nf ) * _zla( 0, imax ) * _zla( 0, myjmax_d )
  780.       t$79 = maxnodes
  780.       t$386 = 1 + maxnodes
  795.       t$387 = _zla( 0, 1 + maxnodes )
  795.       t$390 = 4 * _zla( 0, 1 + maxnodes )
  792.       t$392 = 8 * _zla( 0, 1 + maxnodes )
  780.       t$78 = ( 1 + nsends_diag )
  791.       t$393 = _zla( 0, ( 1 + nsends_diag ) )
  791.       t$395 = 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) )
  785.       t$396 = 8 * ( 7 + 8 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, ( 1 + nsends_diag ) ) ) / 8
  785.       t$398 = t$396 + 8 * _zla( 0, imax )
  780.       t$82 = nsends_diag
  794.       t$399 = _zla( 0, nsends_diag )
  780.       t$400 = 5 * _zla( 0, nsends_diag )
  794.       t$402 = t$396 + 8 * _zla( 0, imax ) + 20 * _zla( 0, nsends_diag )
  780.       t$388 = int( _alloc( t$396 + 8 * _zla( 0, imax ) + 20 * _zla( 0, nsends_diag ) ), 8 )
  795.       t$389 = t$388
  792.       t$391 = t$388 + 4 * _zla( 0, 1 + maxnodes )
  791.       t$394 = t$388 + 8 * _zla( 0, 1 + maxnodes )
  785.       t$397 = t$396 + t$388
  794.       t$401 = t$396 + t$388 + 8 * _zla( 0, imax )
  797.       comm = 1140850688
  798.       if ( dimrecbuf < nf * imax * jmax ) then
  799.          dimrecbuf = nf * imax * jmax
  800.          $_allo_P0(0) = 0x1000000000001L
  800.          $_allo_P0(1) = loc( bufrec )
  800.          call __deallocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
  800.          bufrec%header%assoc = 0
  801.          bufrec%header%a_contig = 1
  801.          bufrec%dim_1%LB = 1
  801.          bufrec%dim_1%EX = _zla( 0, ( nf * imax * jmax ) )
  801.          bufrec%dim_1%SM = 1
  801.          $_allo_P1(0) = 0x1000000000001L
  801.          $_allo_P1(1) = loc( bufrec )
  801.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
  801.       endif
  804.       if ( dimsendbuf < ibmax * nf * jbmax ) then
  805.          dimsendbuf = ibmax * nf * jbmax
  806.          $_allo_P2(0) = 0x1000000000001L
  806.          $_allo_P2(1) = loc( bufsend )
  806.          call __deallocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
  806.          bufsend%header%assoc = 0
  807.          bufsend%header%a_contig = 1
  807.          bufsend%dim_1%LB = 1
  807.          bufsend%dim_1%EX = _zla( 0, ( ibmax * nf * jbmax ) )
  807.          bufsend%dim_1%SM = 1
  807.          $_allo_P3(0) = 0x1000000000001L
  807.          $_allo_P3(1) = loc( bufsend )
  807.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
  807.       endif
  810.       ib(0) = 1
  811.       $m_S1 = 0
  812.       $t_S4 = nrecs_diag
  812.       if ( nrecs_diag > 0 ) then
  812.          $I_L812_82 = 0
  812.          do
  813.             ic = 0
  814.             $t_S2 = (myrecspr_diag%base_addr)(2, 1 + $I_L812_82, 0)
  814.             if ( $t_S2 + -$m_S1 > 0 ) then
  815.                $SC_myrecs_diag_I0 = myrecs_diag%dim_1%EX
  815.                $SC_myrecs_diag_I1 = myrecs_diag%dim_1%LB
  815.                $SC_myrecs_diag_I3 = myrecs_diag%dim_2%SM
  815.                $SC_myrecs_diag_I2 = myrecs_diag%dim_2%EX
  815.                $SC_myrecs_diag_I4 = myrecs_diag%dim_2%LB
  814.                $I_L814_68 = 0
  814. !dir$ ivdep
  814.                do
  815.                   ic = 1 + ic + (myrecs_diag%base_addr)(2, 1 + $m_S1 + $I_L814_68, 0) + -(myrecs_diag%base_addr)(1, 1 + $m_S1 + $I_L814_68, 0)
  816.                   $I_L814_68 = 1 + $I_L814_68
  814.                   if ( $I_L814_68 >= ( $t_S2 + -$m_S1 ) ) exit
  814.                enddo
  814.             endif
  817.             $m_S1 = $t_S2
  818.             ib(1 + $I_L812_82) = ib($I_L812_82) + nf * ic
  819.             t$876 = ib(1 + $I_L812_82) + -ib($I_L812_82)
  819.             call mpi_irecv( (bufrec%base_addr)(ib($I_L812_82), 0), t$876, 1275070495, (myrecspr_diag%base_addr)(1, 1 + $I_L812_82, 0), 88, comm, requestr(1 + $I_L812_82), ierr )
  821.             $I_L812_82 = 1 + $I_L812_82
  821.             if ( $I_L812_82 >= $t_S4 ) exit
  821.          enddo
  821.       endif
  822.       $m_S6 = 0
  823.       $ic_S14 = 1
  824.       $iold_S15 = 1
  825.       $t_S16 = nsends_diag
  825.       if ( nsends_diag > 0 ) then
  826.          if ( nf > 0 ) then
  825.             $I_L825_98 = 0
  825.             do
  827.                $SC_mysendspr_diag_I10 = (mysendspr_diag%base_addr)(2, 1 + $I_L825_98, 0)
  830.                $SC_ibperij_I16 = ibperij%dim_1%EX
  830.                $SC_ibperij_I17 = ibperij%dim_1%LB
  830.                $SC_ibperij_I19 = ibperij%dim_2%SM
  830.                $SC_ibperij_I18 = ibperij%dim_2%EX
  830.                $SC_ibperij_I20 = ibperij%dim_2%LB
  830.                $SC_jbperij_I21 = jbperij%dim_1%EX
  830.                $SC_jbperij_I22 = jbperij%dim_1%LB
  830.                $SC_jbperij_I24 = jbperij%dim_2%SM
  830.                $SC_jbperij_I23 = jbperij%dim_2%EX
  830.                $SC_jbperij_I25 = jbperij%dim_2%LB
  828.                $SC_mysends_diag_I11 = mysends_diag%dim_1%EX
  828.                $SC_mysends_diag_I12 = mysends_diag%dim_1%LB
  828.                $SC_mysends_diag_I14 = mysends_diag%dim_2%SM
  828.                $SC_mysends_diag_I13 = mysends_diag%dim_2%EX
  828.                $SC_mysends_diag_I15 = mysends_diag%dim_2%LB
  830.                $SC_bufsend_I26 = bufsend%dim_1%EX
  830.                $SC_bufsend_I27 = bufsend%dim_1%LB
  827.                if ( $SC_mysendspr_diag_I10 + -$m_S6 > 0 ) then
  826.                   $I_L826_92 = 0
  826.                   do
  827.                      $I_L827_84 = 0
  827.                      do
  828.                         $j_S12 = (mysends_diag%base_addr)(3, 1 + $m_S6 + $I_L827_84, 0)
  829.                         $t_S9 = (mysends_diag%base_addr)(1, 1 + $m_S6 + $I_L827_84, 0)
  829.                         $t_S10 = (mysends_diag%base_addr)(2, 1 + $m_S6 + $I_L827_84, 0)
  829.                         if ( $t_S10 + -$t_S9 >= 0 ) then
  829.                            $I_L829_70 = 0
  829. !dir$ ivdep
  829.                            do
  830.                               (bufsend%base_addr)($ic_S14 + $I_L829_70, 0) = gauss((ibperij%base_addr)($t_S9 + $I_L829_70, $j_S12, 0), 1 + $I_L826_92, (jbperij%base_addr)($t_S9 + $I_L829_70, $j_S12, 0))
  832.                               $I_L829_70 = 1 + $I_L829_70
  829.                               if ( $I_L829_70 >= 1 + $t_S10 + -$t_S9 ) exit
  829.                            enddo
  831.                            $ic_S14 = ( 1 + $t_S10 + $ic_S14 + -$t_S9 )
  831.                         endif
  833.                         $I_L827_84 = 1 + $I_L827_84
  832.                         if ( $I_L827_84 >= ( $SC_mysendspr_diag_I10 + -$m_S6 ) ) exit
  832.                      enddo
  834.                      $I_L826_92 = 1 + $I_L826_92
  833.                      if ( $I_L826_92 >= nf ) exit
  833.                   enddo
  833.                endif
  835.                t$876 = $ic_S14 + -$iold_S15
  835.                call mpi_isend( (bufsend%base_addr)($iold_S15, 0), t$876, 1275070495, (mysendspr_diag%base_addr)(1, 1 + $I_L825_98, 0), 88, comm, requests(1 + $I_L825_98), ierr )
  837.                $m_S6 = (mysendspr_diag%base_addr)(2, 1 + $I_L825_98, 0)
  838.                $iold_S15 = $ic_S14
  839.                $I_L825_98 = 1 + $I_L825_98
  837.                if ( $I_L825_98 >= $t_S16 ) exit
  837.             enddo
  834.             n = ( 1 + nf )
  834.          else
  825.             $I_L825_80 = 0
  825.             do
  835.                t$876 = 0
  835.                call mpi_isend( (bufsend%base_addr)(1, 0), t$876, 1275070495, (mysendspr_diag%base_addr)(1, 1 + $I_L825_80, 0), 88, comm, requests(1 + $I_L825_80), ierr )
  839.                $I_L825_80 = 1 + $I_L825_80
  837.                if ( $I_L825_80 >= $t_S16 ) exit
  837.             enddo
  826.             n = 1
  837.             $m_S6 = (mysendspr_diag%base_addr)(2, $t_S16, 0)
  837.          endif
  837.       endif
  840.       if ( nf > 0 ) then
  843.          $SC_mylastlon_I30 = mylastlon%dim_1%EX
  843.          $SC_mylastlon_I31 = mylastlon%dim_1%LB
  843.          $SC_myfirstlon_I28 = myfirstlon%dim_1%EX
  843.          $SC_myfirstlon_I29 = myfirstlon%dim_1%LB
  844.          $SC_ibperij_I16 = ibperij%dim_1%EX
  844.          $SC_ibperij_I17 = ibperij%dim_1%LB
  844.          $SC_ibperij_I19 = ibperij%dim_2%SM
  844.          $SC_ibperij_I18 = ibperij%dim_2%EX
  844.          $SC_ibperij_I20 = ibperij%dim_2%LB
  844.          $SC_jbperij_I21 = jbperij%dim_1%EX
  844.          $SC_jbperij_I22 = jbperij%dim_1%LB
  844.          $SC_jbperij_I24 = jbperij%dim_2%SM
  844.          $SC_jbperij_I23 = jbperij%dim_2%EX
  844.          $SC_jbperij_I25 = jbperij%dim_2%LB
  841.          if ( min( mylastlat, mylastlat_diag ) + -max( myfirstlat, myfirstlat_diag ) >= 0 ) then
  840.             $I_L840_94 = 0
  840.             do
  841.                $I_L841_86 = 0
  841.                do
  843.                   $t_S18 = (myfirstlon%base_addr)($I_L841_86 + max( myfirstlat, myfirstlat_diag ), 0)
  843.                   $t_S19 = (mylastlon%base_addr)($I_L841_86 + max( myfirstlat, myfirstlat_diag ), 0)
  843.                   if ( $t_S19 + -$t_S18 >= 0 ) then
  843.                      $I_L843_72 = 0
  843. !dir$ ivdep
  843. !dir$ loop_info (automatic) cache_nt( gauss_out )
  843.                      do
  844.                         gauss_out($t_S18 + $I_L843_72, 1 + $I_L841_86 + max( myfirstlat, myfirstlat_diag ) + -myfirstlat_diag, 1 + $I_L840_94) = gauss((ibperij%base_addr)($t_S18 + $I_L843_72, $I_L841_86 + max( myfirstlat, myfirstlat_diag ), 0), 1 + $I_L840_94, (jbperij%base_addr)($t_S18 + $I_L843_72, $I_L841_86 + max( myfirstlat, myfirstlat_diag ), 0))
  845.                         $I_L843_72 = 1 + $I_L843_72
  843.                         if ( $I_L843_72 >= 1 + $t_S19 + -$t_S18 ) exit
  843.                      enddo
  843.                   endif
  846.                   $I_L841_86 = 1 + $I_L841_86
  845.                   if ( $I_L841_86 >= 1 + min( mylastlat, mylastlat_diag ) + -max( myfirstlat, myfirstlat_diag ) ) exit
  845.                enddo
  847.                $I_L840_94 = 1 + $I_L840_94
  846.                if ( $I_L840_94 >= nf ) exit
  846.             enddo
  846.          endif
  846.       endif
  848.       $t_S32 = nrecs_diag
  848.       if ( nrecs_diag > 0 ) then
  848.          $I_L848_100 = 0
  848.          do
  849.             call mpi_waitany( nrecs_diag, requestr(1), index, status(1), ierr )
  850.             $ks_S22 = status(3)
  851.             if ( nrecs_diag > 0 ) then
  852.                $SC_myrecspr_diag_I32 = myrecspr_diag%dim_1%EX
  852.                $SC_myrecspr_diag_I33 = myrecspr_diag%dim_1%LB
  852.                $SC_myrecspr_diag_I35 = myrecspr_diag%dim_2%SM
  852.                $SC_myrecspr_diag_I34 = myrecspr_diag%dim_2%EX
  852.                $SC_myrecspr_diag_I36 = myrecspr_diag%dim_2%LB
  851.                $I_L851_74 = 0
  851. !dir$ ivdep
  851.                do
  852.                   if ( (myrecspr_diag%base_addr)(1, 1 + $I_L851_74, 0) + -$ks_S22 == 0 ) then
  853.                      n = ( 1 + $I_L851_74 )
  854.                      $ic_S14 = ib($I_L851_74)
  855.                      $m_S6 = (myrecspr_diag%base_addr)(2, $I_L851_74, 0)
  855.                      goto 10
  855.                   endif
  858.                   $I_L851_74 = 1 + $I_L851_74
  857.                   if ( $I_L851_74 >= nrecs_diag ) exit
  857.                enddo
  857.             endif
  857.    10       continue
  859.             if ( nf > 0 ) then
  860.                $SC_myrecspr_diag_I37 = (myrecspr_diag%base_addr)(2, n, 0)
  861.                $SC_myrecs_diag_I0 = myrecs_diag%dim_1%EX
  861.                $SC_myrecs_diag_I1 = myrecs_diag%dim_1%LB
  861.                $SC_myrecs_diag_I3 = myrecs_diag%dim_2%SM
  861.                $SC_myrecs_diag_I2 = myrecs_diag%dim_2%EX
  861.                $SC_myrecs_diag_I4 = myrecs_diag%dim_2%LB
  863.                $SC_bufrec_I38 = bufrec%dim_1%EX
  863.                $SC_bufrec_I39 = bufrec%dim_1%LB
  860.                if ( $SC_myrecspr_diag_I37 + -$m_S6 > 0 ) then
  859.                   $I_L859_96 = 0
  859.                   do
  860.                      $I_L860_88 = 0
  860.                      do
  861.                         $j_S29 = 1 + (myrecs_diag%base_addr)(3, 1 + $m_S6 + $I_L860_88, 0) + -myfirstlat_diag
  862.                         $t_S26 = (myrecs_diag%base_addr)(1, 1 + $m_S6 + $I_L860_88, 0)
  862.                         $t_S27 = (myrecs_diag%base_addr)(2, 1 + $m_S6 + $I_L860_88, 0)
  862.                         if ( $t_S27 + -$t_S26 >= 0 ) then
  862.                            $I_L862_76 = 0
  862. !dir$ ivdep
  862.                            do
  863.                               gauss_out($t_S26 + $I_L862_76, $j_S29, 1 + $I_L859_96) = (bufrec%base_addr)($ic_S14 + $I_L862_76, 0)
  865.                               $I_L862_76 = 1 + $I_L862_76
  862.                               if ( $I_L862_76 >= 1 + $t_S27 + -$t_S26 ) exit
  862.                            enddo
  864.                            $ic_S14 = ( 1 + $ic_S14 + $t_S27 + -$t_S26 )
  864.                         endif
  866.                         $I_L860_88 = 1 + $I_L860_88
  865.                         if ( $I_L860_88 >= ( $SC_myrecspr_diag_I37 + -$m_S6 ) ) exit
  865.                      enddo
  867.                      $I_L859_96 = 1 + $I_L859_96
  866.                      if ( $I_L859_96 >= nf ) exit
  866.                   enddo
  866.                endif
  866.             endif
  868.             $I_L848_100 = 1 + $I_L848_100
  867.             if ( $I_L848_100 >= $t_S32 ) exit
  867.          enddo
  867.       endif
  869.       if ( nsends_diag > 0 ) then
  869.          call mpi_waitall( nsends_diag, requests(1), stat(1, 1), ierr )
  869.       endif
  870.       if ( reducedgrid /= .false. ) then
  871.          if ( nf > 0 ) then
  871.             $I_L871_90 = 0
  871.             do
  872.                $t_S34 = myfirstlat_diag
  872.                $t_S36 = mylastlat_diag
  872.                if ( mylastlat_diag + -myfirstlat_diag >= 0 ) then
  872.                   $I_L872_78 = 0
  872.                   do
  874.                      $F_A33 = (imaxperj%base_addr)($t_S34 + $I_L872_78, 0)
  874.                      if ( (imaxperj%base_addr)($t_S34 + $I_L872_78, 0) > 0 ) then
  874.                         $I_A1 = 0
  874. !dir$ ivdep
  874.                         do
  874.                            saux(1 + $I_A1) = gauss_out(1 + $I_A1, 1 + $t_S34 + $I_L872_78 + -myfirstlat_diag, 1 + $I_L871_90)
  874.                            $I_A1 = 1 + $I_A1
  874.                            if ( $I_A1 >= $F_A33 ) exit
  874.                         enddo
  874.                      endif
  875.                      call cycliclinear( (imaxperj%base_addr)($t_S34 + $I_L872_78, 0), imax, saux(1), gauss_out(1, 1 + $t_S34 + $I_L872_78 + -myfirstlat_diag, 1 + $I_L871_90), 1, imax )
  877.                      $I_L872_78 = 1 + $I_L872_78
  877.                      if ( $I_L872_78 >= 1 + $t_S36 + -$t_S34 ) exit
  877.                   enddo
  877.                endif
  878.                $I_L871_90 = 1 + $I_L871_90
  877.                if ( $I_L871_90 >= nf ) exit
  877.             enddo
  877.          endif
  877.       endif
  780.       _free( t$388 )
  881.       return
  881.       end
  881.       
  885.       
  885.       subroutine collect_spec( field, fieldglob, levs, levsg, nproc )
  885.       t$84 = ( 2 * mymnmax )
  885.       t$85 = levs
  891.       t$403 = _zla( 0, ( 2 * mymnmax ) )
  885.       t$404 = _zla( 0, ( 2 * mymnmax ) )
  891.       t$405 = _zla( 0, levs )
  885.       t$406 = _zla( 0, levs ) * _zla( 0, ( 2 * mymnmax ) )
  885.       t$86 = ( 2 * mnmax )
  885.       t$87 = levsg
  892.       t$407 = _zla( 0, ( 2 * mnmax ) )
  885.       t$408 = _zla( 0, ( 2 * mnmax ) )
  892.       t$409 = _zla( 0, levsg )
  885.       t$410 = _zla( 0, levsg ) * _zla( 0, ( 2 * mnmax ) )
  885.       t$88 = maxnodes
  885.       t$411 = 1 + maxnodes
  900.       t$412 = _zla( 0, 1 + maxnodes )
  900.       t$415 = 4 * _zla( 0, 1 + maxnodes )
  902.       t$416 = _zla( 0, maxnodes )
  885.       t$417 = 5 * _zla( 0, maxnodes )
  902.       t$419 = 4 * _zla( 0, 1 + maxnodes ) + 20 * _zla( 0, maxnodes )
  885.       t$413 = int( _alloc( 4 * _zla( 0, 1 + maxnodes ) + 20 * _zla( 0, maxnodes ) ), 8 )
  900.       t$414 = t$413
  902.       t$418 = t$413 + 4 * _zla( 0, 1 + maxnodes )
  907.       $Reduc_A34 = .false.
  907.       $F_A36 = first_proc_four%dim_1%EX
  907.       if ( first_proc_four%dim_1%EX > 0 ) then
  907.          $SC_first_proc_four_I10 = first_proc_four%dim_1%EX
  907.          $SC_first_proc_four_I11 = first_proc_four%dim_1%LB
  907.          $I_L907_52 = 0
  907. !dir$ ivdep
  907.          do
  907.             if ( nproc + -(first_proc_four%base_addr)($SC_first_proc_four_I11 + $I_L907_52, 0) == 0 ) then
  907.                $Reduc_A34 = .true.
  907.                goto 10
  907.             endif
  907.             $I_L907_52 = 1 + $I_L907_52
  907.             if ( $I_L907_52 >= $F_A36 ) exit
  907.          enddo
  907.       endif
  907.    10 continue
  907.       if ( $Reduc_A34 == .false. ) then
  908.          $Unit_temp_O0 = nfprt
  908.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' nproc ', 0x800600000000L ), _iotype( nproc, 0x2000200000000L ) ) )
  909.          $Unit_temp_O1 = nfprt
  909.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$93,  _substr(t$92,1,83), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Collect_Spec)**', 0x800600000000L ) ) )
  910.           _substr(t$926,1,18) = '**(Collect_Spec)**'
  910.          call _stop(  _substr(t$926,1,18) )
  911.       else if ( levsg /= 1 ) then
  911.          goto 20
  911.       else if ( havesurf == .false. ) then
  912.          $Unit_temp_O2 = nfprt
  912.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' myid  ', 0x800600000000L ), _iotype( myid, 0x2000200000000L ) ) )
  913.          $Unit_temp_O3 = nfprt
  913.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, t$95,  _substr(t$94,1,59), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Collect_Spec)**', 0x800600000000L ) ) )
  914.           _substr(t$927,1,18) = '**(Collect_Spec)**'
  914.          call _stop(  _substr(t$927,1,18) )
  914.       else
  914.    20    continue
  915.          if ( levsg == 1 ) then
  915.             goto 30
  915.          else if ( kmax + -levsg /= 0 ) then
  916.             $Unit_temp_O4 = nfprt
  916.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' levsg ', 0x800600000000L ), _iotype( levsg, 0x2000200000000L ) ) )
  917.             $Unit_temp_O5 = nfprt
  917.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, t$97,  _substr(t$96,1,76), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Collect_Spec)**', 0x800600000000L ) ) )
  918.              _substr(t$928,1,18) = '**(Collect_Spec)**'
  918.             call _stop(  _substr(t$928,1,18) )
  918.          else
  918.    30       continue
  920.             comm = comm_four
  921.             $kdim_S2 = 2 * levs * mnmaxlocal
  922.             if ( dimrecbuf < 2 * levs * mnmaxlocal * maxnodes_four ) then
  923.                dimrecbuf = 2 * levs * mnmaxlocal * maxnodes_four
  924.                $_allo_P1(0) = 0x1000000000001L
  924.                $_allo_P1(1) = loc( bufrec )
  924.                call __deallocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
  924.                bufrec%header%assoc = 0
  925.                bufrec%header%a_contig = 1
  925.                bufrec%dim_1%LB = 1
  925.                bufrec%dim_1%EX = ( max( 0, 2 * levs * mnmaxlocal * maxnodes_four ) )
  925.                bufrec%dim_1%SM = 1
  925.                $_allo_P2(0) = 0x1000000000001L
  925.                $_allo_P2(1) = loc( bufrec )
  925.                call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
  925.             endif
  927.             if ( myid_four /= 0 ) then
  928.                t$929 = 2 * mymnmax * levs
  928.                call mpi_isend( field(1, 1), t$929, 1275070495, 0, 95, comm, request, ierr )
  929.                call mpi_wait( request, status(1, 1), ierr )
  929.                goto 40
  929.             else
  931.                requestr(0) = 738197504
  932.                $t_S3 = -1 + maxnodes_four
  932.                if ( -1 + maxnodes_four > 0 ) then
  932.                   $I_L932_34 = 0
  932.                   do
  933.                      t$929 = 2 * levs * (mnsperproc%base_addr)(1 + $I_L932_34, 0)
  934.                      t$933 = ( 1 + $I_L932_34 )
  933.                      call mpi_irecv( (bufrec%base_addr)(1 + $kdim_S2 + $kdim_S2 * $I_L932_34, 0), t$929, 1275070495, t$933, 95, comm, requestr(1 + $I_L932_34), ierr )
  935.                      $I_L932_34 = 1 + $I_L932_34
  935.                      if ( $I_L932_34 >= $t_S3 ) exit
  935.                   enddo
  935.                endif
  936.                $mnloc_S6 = 0
  937.                $mn_S7 = 0
  938.                $kl_S14 = -1 + myfirstlev
  939.                if ( mmax > 0 ) then
  941.                   $SC_nodehasm_I0 = nodehasm%dim_1%EX
  941.                   $SC_nodehasm_I1 = nodehasm%dim_1%LB
  941.                   $SC_nodehasm_I3 = nodehasm%dim_2%SM
  941.                   $SC_nodehasm_I2 = nodehasm%dim_2%EX
  941.                   $SC_nodehasm_I4 = nodehasm%dim_2%LB
  939.                   $I_L939_44 = 0
  939.                   do
  941.                      if ( (nodehasm%base_addr)(1 + $I_L939_44, mygroup_four, 0) == 0 ) then
  942.                         if ( ( 2 * mmax + -2 * $I_L939_44 ) > 0 ) then
  942.                            $I_L942_36 = 0
  942.                            do
  943.                               $F_A37 = levs
  943.                               if ( levs > 0 ) then
  943.                                  $I_A2 = 0
  943. !dir$ ivdep
  943.                                  do
  943.                                     fieldglob(1 + $mn_S7 + $I_L942_36, myfirstlev + $I_A2) = field(1 + $mnloc_S6 + $I_L942_36, 1 + $I_A2)
  943.                                     $I_A2 = 1 + $I_A2
  943.                                     if ( $I_A2 >= $F_A37 ) exit
  943.                                  enddo
  943.                               endif
  944.                               $I_L942_36 = 1 + $I_L942_36
  942.                               if ( $I_L942_36 >= 2 * mmax + -2 * $I_L939_44 ) exit
  942.                            enddo
  942.                         endif
  945.                         $mnloc_S6 = ( $mnloc_S6 + 2 * mmax + -2 * $I_L939_44 )
  945.                      endif
  947.                      $mn_S7 = ( $mn_S7 + 2 * mmax + -2 * $I_L939_44 )
  948.                      $I_L939_44 = 1 + $I_L939_44
  946.                      if ( $I_L939_44 >= mmax ) exit
  946.                   enddo
  946.                endif
  949.                $t_S16 = -1 + maxnodes_four
  949.                if ( -1 + maxnodes_four > 0 ) then
  952.                   if ( levs > 0 ) then
  949.                      $I_L949_50 = 0
  949.                      do
  950.                         call mpi_waitany( maxnodes_four, requestr(0), index, statu(1), ierr )
  951.                         $j_S8 = statu(3)
  953.                         $SC_mnsperproc_I7 = (mnsperproc%base_addr)($j_S8, 0)
  957.                         $SC_nodehasm_I0 = nodehasm%dim_1%EX
  957.                         $SC_nodehasm_I1 = nodehasm%dim_1%LB
  957.                         $SC_nodehasm_I3 = nodehasm%dim_2%SM
  957.                         $SC_nodehasm_I2 = nodehasm%dim_2%EX
  957.                         $SC_nodehasm_I4 = nodehasm%dim_2%LB
  959.                         $SC_bufrec_I8 = bufrec%dim_1%EX
  959.                         $SC_bufrec_I9 = bufrec%dim_1%LB
  955.                         if ( mmax > 0 ) then
  952.                            $I_L952_48 = 0
  952.                            do
  953.                               $mnloc_S12 = ( 2 * $SC_mnsperproc_I7 * $I_L952_48 )
  954.                               $mn_S13 = 0
  955.                               $I_L955_46 = 0
  955.                               do
  957.                                  if ( $j_S8 + -(nodehasm%base_addr)(1 + $I_L955_46, mygroup_four, 0) == 0 ) then
  958.                                     if ( ( 2 * mmax + -2 * $I_L955_46 ) > 0 ) then
  958.                                        $I_L958_38 = 0
  958. !dir$ ivdep
  958.                                        do
  959.                                           fieldglob(1 + $mn_S13 + $I_L958_38, 1 + $kl_S14 + $I_L952_48) = (bufrec%base_addr)(1 + $mnloc_S12 + $I_L958_38 + $kdim_S2 * $j_S8, 0)
  960.                                           $I_L958_38 = 1 + $I_L958_38
  958.                                           if ( $I_L958_38 >= 2 * mmax + -2 * $I_L955_46 ) exit
  958.                                        enddo
  958.                                     endif
  961.                                     $mnloc_S12 = ( $mnloc_S12 + 2 * mmax + -2 * $I_L955_46 )
  961.                                  endif
  963.                                  $mn_S13 = ( $mn_S13 + 2 * mmax + -2 * $I_L955_46 )
  964.                                  $I_L955_46 = 1 + $I_L955_46
  962.                                  if ( $I_L955_46 >= mmax ) exit
  962.                               enddo
  965.                               $I_L952_48 = 1 + $I_L952_48
  964.                               if ( $I_L952_48 >= levs ) exit
  964.                            enddo
  964.                         endif
  966.                         $I_L949_50 = 1 + $I_L949_50
  965.                         if ( $I_L949_50 >= $t_S16 ) exit
  965.                      enddo
  965.                   else
  949.                      $I_L949_42 = 0
  949.                      do
  950.                         call mpi_waitany( maxnodes_four, requestr(0), index, statu(1), ierr )
  966.                         $I_L949_42 = 1 + $I_L949_42
  965.                         if ( $I_L949_42 >= $t_S16 ) exit
  965.                      enddo
  965.                   endif
  965.                endif
  968.                if ( levsg == 1 .orelse. ngroups_four == 1 ) then
  885.                   _free( t$413 )
  885.                else
  971.                   comm = 1140850688
  972.                   if ( myid + -nproc /= 0 ) then
  973.                      t$929 = 2 * levs * mnmax
  973.                      call mpi_isend( fieldglob(1, 1 + $kl_S14), t$929, 1275070495, nproc, 96, comm, request, ierr )
  975.                      call mpi_wait( request, status(1, 1), ierr )
  975.                   else
  977.                      $F_A38 = ngroups_four
  977.                      if ( ngroups_four > 0 ) then
  977.                         $I_A2 = 0
  977. !dir$ ivdep
  977.                         do
  977.                            requestr(1 + $I_A2) = 738197504
  977.                            $I_A2 = 1 + $I_A2
  977.                            if ( $I_A2 >= $F_A38 ) exit
  977.                         enddo
  977.                      endif
  978.                      $t_S20 = ngroups_four
  978.                      if ( ngroups_four > 0 ) then
  978.                         $I_L978_40 = 0
  978.                         do
  979.                            kp = (first_proc_four%base_addr)(1 + $I_L978_40, 0)
  980.                            $kl_S19 = (kfirst_four%base_addr)(kp, 0)
  981.                            $ll_S18 = (nlevperg_four%base_addr)(1 + $I_L978_40, 0)
  982.                            if ( kp + -nproc /= 0 ) then
  983.                               t$933 = 2 * mnmax * $ll_S18
  983.                               call mpi_irecv( fieldglob(1, $kl_S19), t$933, 1275070495, kp, 96, comm, requestr(1 + $I_L978_40), ierr )
  983.                            endif
  986.                            $I_L978_40 = 1 + $I_L978_40
  985.                            if ( $I_L978_40 >= $t_S20 ) exit
  985.                         enddo
  985.                      endif
  987.                      call mpi_waitall( ngroups_four, requestr(1), status(1, 1), ierr )
  987.                   endif
  987.    40             continue
  885.                   _free( t$413 )
  885.                endif
  885.             endif
  885.          endif
  885.       endif
  991.       return
  991.       end
  991.       
  995.       
  995.       subroutine collect_spec_ext( field, fieldglob, levs, levsg, nproc )
  995.       t$98 = ( 2 * mymnextmax )
  995.       t$99 = levs
 1000.       t$420 = _zla( 0, ( 2 * mymnextmax ) )
  995.       t$421 = _zla( 0, ( 2 * mymnextmax ) )
 1000.       t$422 = _zla( 0, levs )
  995.       t$423 = _zla( 0, levs ) * _zla( 0, ( 2 * mymnextmax ) )
  995.       t$100 = ( 2 * mnextmax )
  995.       t$101 = levsg
 1001.       t$424 = _zla( 0, ( 2 * mnextmax ) )
  995.       t$425 = _zla( 0, ( 2 * mnextmax ) )
 1001.       t$426 = _zla( 0, levsg )
  995.       t$427 = _zla( 0, levsg ) * _zla( 0, ( 2 * mnextmax ) )
  995.       t$102 = maxnodes
  995.       t$428 = 1 + maxnodes
 1009.       t$429 = _zla( 0, 1 + maxnodes )
 1009.       t$432 = 4 * _zla( 0, 1 + maxnodes )
 1011.       t$433 = _zla( 0, maxnodes )
  995.       t$434 = 5 * _zla( 0, maxnodes )
 1011.       t$436 = 4 * _zla( 0, 1 + maxnodes ) + 20 * _zla( 0, maxnodes )
  995.       t$430 = int( _alloc( 4 * _zla( 0, 1 + maxnodes ) + 20 * _zla( 0, maxnodes ) ), 8 )
 1009.       t$431 = t$430
 1011.       t$435 = t$430 + 4 * _zla( 0, 1 + maxnodes )
 1016.       $Reduc_A34 = .false.
 1016.       $F_A36 = first_proc_four%dim_1%EX
 1016.       if ( first_proc_four%dim_1%EX > 0 ) then
 1016.          $SC_first_proc_four_I10 = first_proc_four%dim_1%EX
 1016.          $SC_first_proc_four_I11 = first_proc_four%dim_1%LB
 1016.          $I_L1016_52 = 0
 1016. !dir$ ivdep
 1016.          do
 1016.             if ( nproc + -(first_proc_four%base_addr)($SC_first_proc_four_I11 + $I_L1016_52, 0) == 0 ) then
 1016.                $Reduc_A34 = .true.
 1016.                goto 10
 1016.             endif
 1016.             $I_L1016_52 = 1 + $I_L1016_52
 1016.             if ( $I_L1016_52 >= $F_A36 ) exit
 1016.          enddo
 1016.       endif
 1016.    10 continue
 1016.       if ( $Reduc_A34 == .false. ) then
 1017.          $Unit_temp_O0 = nfprt
 1017.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' nproc ', 0x800600000000L ), _iotype( nproc, 0x2000200000000L ) ) )
 1018.          $Unit_temp_O1 = nfprt
 1018.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$107,  _substr(t$106,1,83), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Collect_Spec_Ext)**', 0x800600000000L ) ) )
 1019.           _substr(t$955,1,22) = '**(Collect_Spec_Ext)**'
 1019.          call _stop(  _substr(t$955,1,22) )
 1020.       else if ( levs /= 1 ) then
 1020.          goto 20
 1020.       else if ( havesurf == .false. ) then
 1021.          $Unit_temp_O2 = nfprt
 1021.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' myid  ', 0x800600000000L ), _iotype( myid, 0x2000200000000L ) ) )
 1022.          $Unit_temp_O3 = nfprt
 1022.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, t$109,  _substr(t$108,1,63), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Collect_Spec_Ext)**', 0x800600000000L ) ) )
 1023.           _substr(t$956,1,22) = '**(Collect_Spec_Ext)**'
 1023.          call _stop(  _substr(t$956,1,22) )
 1023.       else
 1023.    20    continue
 1024.          if ( levsg == 1 ) then
 1024.             goto 30
 1024.          else if ( kmax + -levsg /= 0 ) then
 1025.             $Unit_temp_O4 = nfprt
 1025.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( ' levsg ', 0x800600000000L ), _iotype( levsg, 0x2000200000000L ) ) )
 1026.             $Unit_temp_O5 = nfprt
 1026.             _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, t$111,  _substr(t$110,1,80), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(Collect_Spec_Ext)**', 0x800600000000L ) ) )
 1027.              _substr(t$957,1,22) = '**(Collect_Spec_Ext)**'
 1027.             call _stop(  _substr(t$957,1,22) )
 1027.          else
 1027.    30       continue
 1029.             comm = comm_four
 1030.             $kdim_S2 = 2 * levs * mnextmaxlocal
 1031.             if ( dimrecbuf < 2 * levs * mnextmaxlocal * maxnodes_four ) then
 1032.                dimrecbuf = 2 * levs * mnextmaxlocal * maxnodes_four
 1033.                $_allo_P1(0) = 0x1000000000001L
 1033.                $_allo_P1(1) = loc( bufrec )
 1033.                call __deallocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 1033.                bufrec%header%assoc = 0
 1034.                bufrec%header%a_contig = 1
 1034.                bufrec%dim_1%LB = 1
 1034.                bufrec%dim_1%EX = ( max( 0, 2 * levs * mnextmaxlocal * maxnodes_four ) )
 1034.                bufrec%dim_1%SM = 1
 1034.                $_allo_P2(0) = 0x1000000000001L
 1034.                $_allo_P2(1) = loc( bufrec )
 1034.                call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 1034.             endif
 1036.             if ( myid_four /= 0 ) then
 1037.                t$958 = 2 * mymnextmax * levs
 1037.                call mpi_isend( field(1, 1), t$958, 1275070495, 0, 95, comm, request, ierr )
 1039.                call mpi_wait( request, status(1, 1), ierr )
 1039.                goto 40
 1039.             else
 1041.                requestr(0) = 738197504
 1042.                $t_S3 = -1 + maxnodes_four
 1042.                if ( -1 + maxnodes_four > 0 ) then
 1042.                   $I_L1042_34 = 0
 1042.                   do
 1043.                      t$958 = 2 * levs * (mnsextperproc%base_addr)(1 + $I_L1042_34, 0)
 1044.                      t$962 = ( 1 + $I_L1042_34 )
 1043.                      call mpi_irecv( (bufrec%base_addr)(1 + $kdim_S2 + $kdim_S2 * $I_L1042_34, 0), t$958, 1275070495, t$962, 95, comm, requestr(1 + $I_L1042_34), ierr )
 1045.                      $I_L1042_34 = 1 + $I_L1042_34
 1045.                      if ( $I_L1042_34 >= $t_S3 ) exit
 1045.                   enddo
 1045.                endif
 1046.                $mnloc_S6 = 0
 1047.                $mn_S7 = 0
 1048.                $kl_S14 = -1 + myfirstlev
 1049.                if ( mmax > 0 ) then
 1051.                   $SC_nodehasm_I0 = nodehasm%dim_1%EX
 1051.                   $SC_nodehasm_I1 = nodehasm%dim_1%LB
 1051.                   $SC_nodehasm_I3 = nodehasm%dim_2%SM
 1051.                   $SC_nodehasm_I2 = nodehasm%dim_2%EX
 1051.                   $SC_nodehasm_I4 = nodehasm%dim_2%LB
 1049.                   $I_L1049_44 = 0
 1049.                   do
 1051.                      if ( (nodehasm%base_addr)(1 + $I_L1049_44, mygroup_four, 0) == 0 ) then
 1052.                         if ( ( 2 + 2 * mmax + -2 * $I_L1049_44 ) > 0 ) then
 1052.                            $I_L1052_36 = 0
 1052.                            do
 1053.                               $F_A37 = levs
 1053.                               if ( levs > 0 ) then
 1053.                                  $I_A2 = 0
 1053. !dir$ ivdep
 1053.                                  do
 1053.                                     fieldglob(1 + $mn_S7 + $I_L1052_36, myfirstlev + $I_A2) = field(1 + $mnloc_S6 + $I_L1052_36, 1 + $I_A2)
 1053.                                     $I_A2 = 1 + $I_A2
 1053.                                     if ( $I_A2 >= $F_A37 ) exit
 1053.                                  enddo
 1053.                               endif
 1054.                               $I_L1052_36 = 1 + $I_L1052_36
 1052.                               if ( $I_L1052_36 >= 2 + 2 * mmax + -2 * $I_L1049_44 ) exit
 1052.                            enddo
 1052.                         endif
 1055.                         $mnloc_S6 = ( 2 + $mnloc_S6 + 2 * mmax + -2 * $I_L1049_44 )
 1055.                      endif
 1057.                      $mn_S7 = ( 2 + $mn_S7 + 2 * mmax + -2 * $I_L1049_44 )
 1058.                      $I_L1049_44 = 1 + $I_L1049_44
 1056.                      if ( $I_L1049_44 >= mmax ) exit
 1056.                   enddo
 1056.                endif
 1059.                $t_S16 = -1 + maxnodes_four
 1059.                if ( -1 + maxnodes_four > 0 ) then
 1062.                   if ( levs > 0 ) then
 1059.                      $I_L1059_50 = 0
 1059.                      do
 1060.                         call mpi_waitany( maxnodes_four, requestr(0), index, statu(1), ierr )
 1061.                         $j_S8 = statu(3)
 1063.                         $SC_mnsextperproc_I7 = (mnsextperproc%base_addr)($j_S8, 0)
 1067.                         $SC_nodehasm_I0 = nodehasm%dim_1%EX
 1067.                         $SC_nodehasm_I1 = nodehasm%dim_1%LB
 1067.                         $SC_nodehasm_I3 = nodehasm%dim_2%SM
 1067.                         $SC_nodehasm_I2 = nodehasm%dim_2%EX
 1067.                         $SC_nodehasm_I4 = nodehasm%dim_2%LB
 1069.                         $SC_bufrec_I8 = bufrec%dim_1%EX
 1069.                         $SC_bufrec_I9 = bufrec%dim_1%LB
 1065.                         if ( mmax > 0 ) then
 1062.                            $I_L1062_48 = 0
 1062.                            do
 1063.                               $mnloc_S12 = ( 2 * $SC_mnsextperproc_I7 * $I_L1062_48 )
 1064.                               $mn_S13 = 0
 1065.                               $I_L1065_46 = 0
 1065.                               do
 1067.                                  if ( $j_S8 + -(nodehasm%base_addr)(1 + $I_L1065_46, mygroup_four, 0) == 0 ) then
 1068.                                     if ( ( 2 + 2 * mmax + -2 * $I_L1065_46 ) > 0 ) then
 1068.                                        $I_L1068_38 = 0
 1068. !dir$ ivdep
 1068.                                        do
 1069.                                           fieldglob(1 + $mn_S13 + $I_L1068_38, 1 + $kl_S14 + $I_L1062_48) = (bufrec%base_addr)(1 + $mnloc_S12 + $I_L1068_38 + $kdim_S2 * $j_S8, 0)
 1070.                                           $I_L1068_38 = 1 + $I_L1068_38
 1068.                                           if ( $I_L1068_38 >= 2 + 2 * mmax + -2 * $I_L1065_46 ) exit
 1068.                                        enddo
 1068.                                     endif
 1071.                                     $mnloc_S12 = ( 2 + $mnloc_S12 + 2 * mmax + -2 * $I_L1065_46 )
 1071.                                  endif
 1073.                                  $mn_S13 = ( 2 + $mn_S13 + 2 * mmax + -2 * $I_L1065_46 )
 1074.                                  $I_L1065_46 = 1 + $I_L1065_46
 1072.                                  if ( $I_L1065_46 >= mmax ) exit
 1072.                               enddo
 1075.                               $I_L1062_48 = 1 + $I_L1062_48
 1074.                               if ( $I_L1062_48 >= levs ) exit
 1074.                            enddo
 1074.                         endif
 1076.                         $I_L1059_50 = 1 + $I_L1059_50
 1075.                         if ( $I_L1059_50 >= $t_S16 ) exit
 1075.                      enddo
 1075.                   else
 1059.                      $I_L1059_42 = 0
 1059.                      do
 1060.                         call mpi_waitany( maxnodes_four, requestr(0), index, statu(1), ierr )
 1076.                         $I_L1059_42 = 1 + $I_L1059_42
 1075.                         if ( $I_L1059_42 >= $t_S16 ) exit
 1075.                      enddo
 1075.                   endif
 1075.                endif
 1078.                if ( levsg == 1 .orelse. ngroups_four == 1 ) then
  995.                   _free( t$430 )
  995.                else
 1081.                   comm = 1140850688
 1082.                   if ( myid + -nproc /= 0 ) then
 1083.                      t$958 = 2 * levs * mnextmax
 1083.                      call mpi_isend( fieldglob(1, 1 + $kl_S14), t$958, 1275070495, nproc, 96, comm, request, ierr )
 1085.                      call mpi_wait( request, status(1, 1), ierr )
 1085.                   else
 1087.                      $F_A38 = ngroups_four
 1087.                      if ( ngroups_four > 0 ) then
 1087.                         $I_A2 = 0
 1087. !dir$ ivdep
 1087.                         do
 1087.                            requestr(1 + $I_A2) = 738197504
 1087.                            $I_A2 = 1 + $I_A2
 1087.                            if ( $I_A2 >= $F_A38 ) exit
 1087.                         enddo
 1087.                      endif
 1088.                      $t_S20 = ngroups_four
 1088.                      if ( ngroups_four > 0 ) then
 1088.                         $I_L1088_40 = 0
 1088.                         do
 1089.                            kp = (first_proc_four%base_addr)(1 + $I_L1088_40, 0)
 1090.                            $kl_S19 = (kfirst_four%base_addr)(kp, 0)
 1091.                            $ll_S18 = (nlevperg_four%base_addr)(1 + $I_L1088_40, 0)
 1092.                            if ( kp + -nproc /= 0 ) then
 1093.                               t$962 = 2 * mnextmax * $ll_S18
 1093.                               call mpi_irecv( fieldglob(1, $kl_S19), t$962, 1275070495, kp, 96, comm, requestr(1 + $I_L1088_40), ierr )
 1093.                            endif
 1096.                            $I_L1088_40 = 1 + $I_L1088_40
 1095.                            if ( $I_L1088_40 >= $t_S20 ) exit
 1095.                         enddo
 1095.                      endif
 1097.                      call mpi_waitall( ngroups_four, requestr(1), status(1, 1), ierr )
 1097.                   endif
 1097.    40             continue
  995.                   _free( t$430 )
  995.                endif
  995.             endif
  995.          endif
  995.       endif
 1101.       return
 1101.       end
 1101.       
 1103.       
 1103.       subroutine exchange_ftog( nrecs_f, nrecs_g )
 1103.       t$112 = ( -1 + maxnodes )
 1103.       t$437 = maxnodes
 1111.       t$438 = _zla( 0, maxnodes )
 1111.       t$441 = 4 * _zla( 0, maxnodes )
 1112.       t$443 = 8 * _zla( 0, maxnodes )
 1113.       t$445 = 12 * _zla( 0, maxnodes )
 1103.       t$116 = maxnodes
 1114.       t$446 = _zla( 0, maxnodes )
 1103.       t$447 = 5 * _zla( 0, maxnodes )
 1114.       t$449 = 32 * _zla( 0, maxnodes )
 1103.       t$439 = int( _alloc( 32 * _zla( 0, maxnodes ) ), 8 )
 1111.       t$440 = t$439
 1112.       t$442 = t$439 + 4 * _zla( 0, maxnodes )
 1113.       t$444 = t$439 + 8 * _zla( 0, maxnodes )
 1114.       t$448 = t$439 + 12 * _zla( 0, maxnodes )
 1116.       comm = 1140850688
 1117.       requestr(myid) = 738197504
 1118.       requests(myid) = 738197504
 1119.       (messproc_g%base_addr)(2, 0, 0) = 0
 1120.       $t_S1 = -1 + maxnodes
 1120.       if ( maxnodes > 0 ) then
 1120.          $I_L1120_20 = 0
 1120.          do
 1121.             if ( $I_L1120_20 + -myid /= 0 ) then
 1122.                t$987 = $I_L1120_20
 1122.                call mpi_irecv( (messproc_g%base_addr)(2, 1 + $I_L1120_20, 0), 1, 1275069467, t$987, 18, comm, requestr($I_L1120_20), ierr )
 1122.             else
 1125.                (messproc_g%base_addr)(2, 1 + $I_L1120_20, 0) = 0
 1125.             endif
 1127.             $I_L1120_20 = 1 + $I_L1120_20
 1126.             if ( $I_L1120_20 >= 1 + $t_S1 ) exit
 1126.          enddo
 1126.       endif
 1128.       $m_S4 = 0
 1129.       $k_S3 = 1
 1130.       $t_S5 = -1 + maxnodes
 1130.       if ( maxnodes > 0 ) then
 1130.          $I_L1130_22 = 0
 1130.          do
 1131.             if ( $I_L1130_22 + -myid /= 0 ) then
 1132.                if ( $k_S3 > nrecs_f ) then
 1132.                   goto 10
 1132.                else if ( (messproc_f%base_addr)(1, $k_S3, 0) + -$I_L1130_22 == 0 ) then
 1133.                   ns($I_L1130_22) = (messproc_f%base_addr)(2, $k_S3, 0) + -$m_S4
 1134.                   $m_S4 = (messproc_f%base_addr)(2, $k_S3, 0)
 1135.                   $k_S3 = 1 + $k_S3
 1135.                else
 1135.    10             continue
 1137.                   ns($I_L1130_22) = 0
 1137.                endif
 1139.                t$987 = $I_L1130_22
 1139.                call mpi_isend( ns($I_L1130_22), 1, 1275069467, t$987, 18, comm, requests($I_L1130_22), ierr )
 1139.             endif
 1141.             $I_L1130_22 = 1 + $I_L1130_22
 1140.             if ( $I_L1130_22 >= 1 + $t_S5 ) exit
 1140.          enddo
 1140.       endif
 1142.       call mpi_waitall( maxnodes, requestr(0), status(1, 1), ierr )
 1143.       call mpi_waitall( maxnodes, requests(0), status(1, 1), ierr )
 1144.       $k_S7 = 0
 1145.       m = 0
 1146.       if ( maxnodes > 0 ) then
 1147.          $SC_messproc_I0 = messproc_g%dim_1%EX
 1147.          $SC_messproc_I1 = messproc_g%dim_1%LB
 1147.          $SC_messproc_I3 = messproc_g%dim_2%SM
 1147.          $SC_messproc_I2 = messproc_g%dim_2%EX
 1147.          $SC_messproc_I4 = messproc_g%dim_2%LB
 1146.          $I_L1146_24 = 0
 1146. !dir$ unroll 4
 1146.          do
 1147.             if ( (messproc_g%base_addr)(2, 1 + $I_L1146_24, 0) /= 0 ) then
 1149.                m = m + (messproc_g%base_addr)(2, 1 + $I_L1146_24, 0)
 1148.                $k_S7 = 1 + $k_S7
 1150.                (messproc_g%base_addr)(2, $k_S7, 0) = m
 1151.                (messproc_g%base_addr)(1, $k_S7, 0) = $I_L1146_24
 1151.             endif
 1153.             $I_L1146_24 = 1 + $I_L1146_24
 1152.             if ( $I_L1146_24 >= maxnodes ) exit
 1152.          enddo
 1152.       endif
 1154.       nrecs_g = $k_S7
 1155.       $m_S8 = 0
 1156.       if ( $k_S7 > 0 ) then
 1156.          $I_L1156_26 = 0
 1156.          do
 1157.             ns(1 + $I_L1156_26) = (messproc_g%base_addr)(2, 1 + $I_L1156_26, 0) + -$m_S8
 1158.             t$987 = 4 * ns(1 + $I_L1156_26)
 1158.             call mpi_irecv( (messages_g%base_addr)(1, 1 + $m_S8, 0), t$987, 1275069467, (messproc_g%base_addr)(1, 1 + $I_L1156_26, 0), 19, comm, requestr(1 + $I_L1156_26), ierr )
 1160.             $m_S8 = (messproc_g%base_addr)(2, 1 + $I_L1156_26, 0)
 1161.             $I_L1156_26 = 1 + $I_L1156_26
 1160.             if ( $I_L1156_26 >= $k_S7 ) exit
 1160.          enddo
 1160.       endif
 1162.       $m_S10 = 0
 1163.       if ( nrecs_f > 0 ) then
 1163.          $I_L1163_28 = 0
 1163.          do
 1164.             ns(1 + $I_L1163_28) = (messproc_f%base_addr)(2, 1 + $I_L1163_28, 0) + -$m_S10
 1165.             t$987 = 4 * ns(1 + $I_L1163_28)
 1165.             call mpi_isend( (messages_f%base_addr)(1, 1 + $m_S10, 0), t$987, 1275069467, (messproc_f%base_addr)(1, 1 + $I_L1163_28, 0), 19, comm, requests(1 + $I_L1163_28), ierr )
 1167.             $m_S10 = (messproc_f%base_addr)(2, 1 + $I_L1163_28, 0)
 1168.             $I_L1163_28 = 1 + $I_L1163_28
 1167.             if ( $I_L1163_28 >= nrecs_f ) exit
 1167.          enddo
 1167.       endif
 1169.       if ( $k_S7 > 0 ) then
 1169.          call mpi_waitall( nrecs_g, requestr(1), status(1, 1), ierr )
 1169.       endif
 1170.       if ( nrecs_f > 0 ) then
 1170.          call mpi_waitall( nrecs_f, requests(1), status(1, 1), ierr )
 1170.       endif
 1103.       _free( t$439 )
 1172.       return
 1172.       end
 1172.       
 1174.       
 1174.       subroutine exchange_diag( nrecs_diag, nsends_diag )
 1174.       t$117 = maxnodes
 1174.       t$450 = 1 + maxnodes
 1182.       t$451 = _zla( 0, 1 + maxnodes )
 1182.       t$454 = 4 * _zla( 0, 1 + maxnodes )
 1174.       t$118 = ( -1 + maxnodes )
 1174.       t$455 = maxnodes
 1183.       t$456 = _zla( 0, maxnodes )
 1183.       t$458 = 4 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, maxnodes )
 1184.       t$460 = 4 * _zla( 0, 1 + maxnodes ) + 8 * _zla( 0, maxnodes )
 1185.       t$461 = _zla( 0, maxnodes )
 1174.       t$462 = 5 * _zla( 0, maxnodes )
 1185.       t$464 = 4 * _zla( 0, 1 + maxnodes ) + 28 * _zla( 0, maxnodes )
 1174.       t$452 = int( _alloc( 4 * _zla( 0, 1 + maxnodes ) + 28 * _zla( 0, maxnodes ) ), 8 )
 1182.       t$453 = t$452
 1183.       t$457 = t$452 + 4 * _zla( 0, 1 + maxnodes )
 1184.       t$459 = t$452 + 4 * _zla( 0, 1 + maxnodes ) + 4 * _zla( 0, maxnodes )
 1185.       t$463 = t$452 + 4 * _zla( 0, 1 + maxnodes ) + 8 * _zla( 0, maxnodes )
 1187.       comm = 1140850688
 1188.       requestr(myid) = 738197504
 1189.       requests(myid) = 738197504
 1190.       (mysendspr_diag%base_addr)(2, 0, 0) = 0
 1191.       $t_S1 = -1 + maxnodes
 1191.       if ( maxnodes > 0 ) then
 1191.          $I_L1191_20 = 0
 1191.          do
 1192.             if ( $I_L1191_20 + -myid /= 0 ) then
 1193.                t$1003 = $I_L1191_20
 1193.                call mpi_irecv( (mysendspr_diag%base_addr)(2, 1 + $I_L1191_20, 0), 1, 1275069467, t$1003, 18, comm, requestr($I_L1191_20), ierr )
 1193.             else
 1196.                (mysendspr_diag%base_addr)(2, 1 + $I_L1191_20, 0) = 0
 1196.             endif
 1198.             $I_L1191_20 = 1 + $I_L1191_20
 1197.             if ( $I_L1191_20 >= 1 + $t_S1 ) exit
 1197.          enddo
 1197.       endif
 1199.       $m_S4 = 0
 1200.       $k_S3 = 1
 1201.       $t_S5 = -1 + maxnodes
 1201.       if ( maxnodes > 0 ) then
 1201.          $I_L1201_22 = 0
 1201.          do
 1202.             if ( $I_L1201_22 + -myid /= 0 ) then
 1203.                if ( $k_S3 > nrecs_diag ) then
 1203.                   goto 10
 1203.                else if ( (myrecspr_diag%base_addr)(1, $k_S3, 0) + -$I_L1201_22 == 0 ) then
 1204.                   ns($I_L1201_22) = (myrecspr_diag%base_addr)(2, $k_S3, 0) + -$m_S4
 1205.                   $m_S4 = (myrecspr_diag%base_addr)(2, $k_S3, 0)
 1206.                   $k_S3 = 1 + $k_S3
 1206.                else
 1206.    10             continue
 1208.                   ns($I_L1201_22) = 0
 1208.                endif
 1210.                t$1003 = $I_L1201_22
 1210.                call mpi_isend( ns($I_L1201_22), 1, 1275069467, t$1003, 18, comm, requests($I_L1201_22), ierr )
 1210.             endif
 1212.             $I_L1201_22 = 1 + $I_L1201_22
 1211.             if ( $I_L1201_22 >= 1 + $t_S5 ) exit
 1211.          enddo
 1211.       endif
 1213.       call mpi_waitall( maxnodes, requestr(0), status(1, 1), ierr )
 1214.       call mpi_waitall( maxnodes, requests(0), status(1, 1), ierr )
 1215.       $k_S7 = 0
 1216.       m = 0
 1217.       if ( maxnodes > 0 ) then
 1218.          $SC_mysendspr_diag_I0 = mysendspr_diag%dim_1%EX
 1218.          $SC_mysendspr_diag_I1 = mysendspr_diag%dim_1%LB
 1218.          $SC_mysendspr_diag_I3 = mysendspr_diag%dim_2%SM
 1218.          $SC_mysendspr_diag_I2 = mysendspr_diag%dim_2%EX
 1218.          $SC_mysendspr_diag_I4 = mysendspr_diag%dim_2%LB
 1217.          $I_L1217_24 = 0
 1217. !dir$ unroll 4
 1217.          do
 1218.             if ( (mysendspr_diag%base_addr)(2, 1 + $I_L1217_24, 0) /= 0 ) then
 1220.                m = m + (mysendspr_diag%base_addr)(2, 1 + $I_L1217_24, 0)
 1219.                $k_S7 = 1 + $k_S7
 1221.                (mysendspr_diag%base_addr)(2, $k_S7, 0) = m
 1222.                (mysendspr_diag%base_addr)(1, $k_S7, 0) = $I_L1217_24
 1222.             endif
 1224.             $I_L1217_24 = 1 + $I_L1217_24
 1223.             if ( $I_L1217_24 >= maxnodes ) exit
 1223.          enddo
 1223.       endif
 1225.       nsends_diag = $k_S7
 1226.       $m_S8 = 0
 1227.       if ( $k_S7 > 0 ) then
 1227.          $I_L1227_26 = 0
 1227.          do
 1228.             ns(1 + $I_L1227_26) = (mysendspr_diag%base_addr)(2, 1 + $I_L1227_26, 0) + -$m_S8
 1229.             t$1003 = 4 * ns(1 + $I_L1227_26)
 1229.             call mpi_irecv( (mysends_diag%base_addr)(1, 1 + $m_S8, 0), t$1003, 1275069467, (mysendspr_diag%base_addr)(1, 1 + $I_L1227_26, 0), 19, comm, requestr(1 + $I_L1227_26), ierr )
 1231.             $m_S8 = (mysendspr_diag%base_addr)(2, 1 + $I_L1227_26, 0)
 1232.             $I_L1227_26 = 1 + $I_L1227_26
 1231.             if ( $I_L1227_26 >= $k_S7 ) exit
 1231.          enddo
 1231.       endif
 1233.       $m_S10 = 0
 1234.       if ( nrecs_diag > 0 ) then
 1234.          $I_L1234_28 = 0
 1234.          do
 1235.             ns(1 + $I_L1234_28) = (myrecspr_diag%base_addr)(2, 1 + $I_L1234_28, 0) + -$m_S10
 1236.             t$1003 = 4 * ns(1 + $I_L1234_28)
 1236.             call mpi_isend( (myrecs_diag%base_addr)(1, 1 + $m_S10, 0), t$1003, 1275069467, (myrecspr_diag%base_addr)(1, 1 + $I_L1234_28, 0), 19, comm, requests(1 + $I_L1234_28), ierr )
 1238.             $m_S10 = (myrecspr_diag%base_addr)(2, 1 + $I_L1234_28, 0)
 1239.             $I_L1234_28 = 1 + $I_L1234_28
 1238.             if ( $I_L1234_28 >= nrecs_diag ) exit
 1238.          enddo
 1238.       endif
 1240.       if ( $k_S7 > 0 ) then
 1240.          call mpi_waitall( nsends_diag, requestr(1), status(1, 1), ierr )
 1240.       endif
 1241.       if ( nrecs_diag > 0 ) then
 1241.          call mpi_waitall( nrecs_diag, requests(1), status(1, 1), ierr )
 1241.       endif
 1174.       _free( t$452 )
 1243.       return
 1243.       end
 1243.       
 1245.       
 1245.       subroutine exchange_si( ibs, ibr, nsend, mysends )
 1245.       t$122 = ( 1 + nsend )
 1248.       t$465 = _zla( 0, ( 1 + nsend ) )
 1245.       t$124 = ( -1 + maxnodes )
 1245.       t$466 = maxnodes
 1250.       t$467 = _zla( 0, maxnodes )
 1245.       t$123 = nsend
 1249.       t$468 = _zla( 0, nsend )
 1255.       t$471 = 4 * _zla( 0, maxnodes )
 1256.       t$473 = 8 * _zla( 0, maxnodes )
 1257.       t$475 = 12 * _zla( 0, maxnodes )
 1245.       t$129 = maxnodes
 1258.       t$476 = _zla( 0, maxnodes )
 1245.       t$477 = 5 * _zla( 0, maxnodes )
 1258.       t$479 = 32 * _zla( 0, maxnodes )
 1245.       t$469 = int( _alloc( 32 * _zla( 0, maxnodes ) ), 8 )
 1255.       t$470 = t$469
 1256.       t$472 = t$469 + 4 * _zla( 0, maxnodes )
 1257.       t$474 = t$469 + 8 * _zla( 0, maxnodes )
 1258.       t$478 = t$469 + 12 * _zla( 0, maxnodes )
 1260.       comm = 1140850688
 1261.       requestr(myid) = 738197504
 1262.       requests(myid) = 738197504
 1263.       $F_A33 = maxnodes
 1263.       if ( maxnodes > 0 ) then
 1263.          $I_A1 = 0
 1263. !dir$ ivdep
 1263.          do
 1263.             ibr($I_A1) = 0
 1263.             $I_A1 = 1 + $I_A1
 1263.             if ( $I_A1 >= $F_A33 ) exit
 1263.          enddo
 1263.       endif
 1264.       $t_S1 = -1 + maxnodes
 1264.       if ( maxnodes > 0 ) then
 1264.          $I_L1264_12 = 0
 1264.          do
 1265.             if ( $I_L1264_12 + -myid /= 0 ) then
 1266.                t$1019 = $I_L1264_12
 1266.                call mpi_irecv( ibr($I_L1264_12), 1, 1275069467, t$1019, 28, comm, requestr($I_L1264_12), ierr )
 1266.             endif
 1269.             $I_L1264_12 = 1 + $I_L1264_12
 1268.             if ( $I_L1264_12 >= 1 + $t_S1 ) exit
 1268.          enddo
 1268.       endif
 1270.       $F_A34 = 1 + t$124
 1270.       if ( t$124 >= 0 ) then
 1270.          $I_A1 = 0
 1270. !dir$ ivdep
 1270.          do
 1270.             ns($I_A1) = 0
 1270.             $I_A1 = 1 + $I_A1
 1270.             if ( $I_A1 >= $F_A34 ) exit
 1270.          enddo
 1270.       endif
 1271.       if ( nsend > 0 ) then
 1271.          $I_L1271_14 = 0
 1271. !dir$ ivdep
 1271.          do
 1272.             ns(mysends(1 + $I_L1271_14)) = ibs(2 + $I_L1271_14) + -ibs(1 + $I_L1271_14)
 1273.             $I_L1271_14 = 1 + $I_L1271_14
 1271.             if ( $I_L1271_14 >= nsend ) exit
 1271.          enddo
 1271.       endif
 1274.       $t_S4 = -1 + maxnodes
 1274.       if ( maxnodes > 0 ) then
 1274.          $I_L1274_16 = 0
 1274.          do
 1275.             if ( $I_L1274_16 + -myid /= 0 ) then
 1276.                t$1019 = $I_L1274_16
 1276.                call mpi_isend( ns($I_L1274_16), 1, 1275069467, t$1019, 28, comm, requests($I_L1274_16), ierr )
 1276.             else
 1278.                ibr($I_L1274_16) = ns($I_L1274_16)
 1278.             endif
 1280.             $I_L1274_16 = 1 + $I_L1274_16
 1279.             if ( $I_L1274_16 >= 1 + $t_S4 ) exit
 1279.          enddo
 1279.       endif
 1281.       call mpi_waitall( maxnodes, requestr(0), status(1, 1), ierr )
 1282.       call mpi_waitall( maxnodes, requests(0), status(1, 1), ierr )
 1245.       _free( t$469 )
 1284.       return
 1284.       end
 1284.       
 1286.       
 1286.       subroutine spectosi( ibs, ibr, nsend, nrec, mysends, myrecs, maps, mapr, kmg, kml, nlfour, q1, q2, q1_si, q2_si, q3, q3_si, qs1, qs1_si )
 1286.       t$130 = ( 1 + nsend )
 1291.       t$480 = _zla( 0, ( 1 + nsend ) )
 1286.       t$131 = ( 1 + nrec )
 1292.       t$481 = _zla( 0, ( 1 + nrec ) )
 1286.       t$132 = nsend
 1293.       t$482 = _zla( 0, nsend )
 1286.       t$133 = nrec
 1294.       t$483 = _zla( 0, nrec )
 1286.       t$134 = ( -1 + maxnodes )
 1286.       t$484 = maxnodes
 1295.       t$485 = _zla( 0, maxnodes )
 1286.       t$136 = ( 2 * mymnmax )
 1286.       t$137 = kml
 1300.       t$486 = _zla( 0, ( 2 * mymnmax ) )
 1286.       t$487 = _zla( 0, ( 2 * mymnmax ) )
 1300.       t$488 = _zla( 0, kml )
 1286.       t$489 = _zla( 0, kml ) * _zla( 0, ( 2 * mymnmax ) )
 1286.       t$140 = ( 2 * mnmax_si )
 1286.       t$141 = kmg
 1302.       t$490 = _zla( 0, ( 2 * mnmax_si ) )
 1286.       t$491 = _zla( 0, ( 2 * mnmax_si ) )
 1302.       t$492 = _zla( 0, kmg )
 1286.       t$493 = _zla( 0, kmg ) * _zla( 0, ( 2 * mnmax_si ) )
 1314.       t$496 = 4 * _zla( 0, nrec )
 1313.       t$498 = 4 * _zla( 0, nrec ) + 4 * _zla( 0, nsend )
 1315.       t$500 = 4 * _zla( 0, nsend ) + 8 * _zla( 0, nrec )
 1316.       t$502 = 8 * _zla( 0, nrec ) + 8 * _zla( 0, nsend )
 1286.       t$155 = maxnodes
 1317.       t$503 = _zla( 0, maxnodes )
 1286.       t$504 = 5 * _zla( 0, maxnodes )
 1317.       t$506 = 8 * _zla( 0, nrec ) + 8 * _zla( 0, nsend ) + 20 * _zla( 0, maxnodes )
 1286.       t$494 = int( _alloc( 8 * _zla( 0, nrec ) + 8 * _zla( 0, nsend ) + 20 * _zla( 0, maxnodes ) ), 8 )
 1314.       t$495 = t$494
 1313.       t$497 = t$494 + 4 * _zla( 0, nrec )
 1315.       t$499 = t$494 + 4 * _zla( 0, nrec ) + 4 * _zla( 0, nsend )
 1316.       t$501 = t$494 + 4 * _zla( 0, nsend ) + 8 * _zla( 0, nrec )
 1317.       t$505 = t$494 + 8 * _zla( 0, nrec ) + 8 * _zla( 0, nsend )
 1320.       $ndim_S0 = max( ibs(1 + nsend), ibr(1 + nrec) )
 1321.       if ( dimrecbuf < $ndim_S0 ) then
 1322.          dimrecbuf = $ndim_S0
 1323.          $_allo_P0(0) = 0x1000000000001L
 1323.          $_allo_P0(1) = loc( bufrec )
 1323.          call __deallocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 1323.          bufrec%header%assoc = 0
 1324.          bufrec%header%a_contig = 1
 1324.          bufrec%dim_1%LB = 1
 1324.          bufrec%dim_1%EX = ( max( 0, $ndim_S0 ) )
 1324.          bufrec%dim_1%SM = 1
 1324.          $_allo_P1(0) = 0x1000000000001L
 1324.          $_allo_P1(1) = loc( bufrec )
 1324.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 1324.       endif
 1327.       if ( dimsendbuf < $ndim_S0 ) then
 1328.          dimsendbuf = $ndim_S0
 1329.          $_allo_P2(0) = 0x1000000000001L
 1329.          $_allo_P2(1) = loc( bufsend )
 1329.          call __deallocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 1329.          bufsend%header%assoc = 0
 1330.          bufsend%header%a_contig = 1
 1330.          bufsend%dim_1%LB = 1
 1330.          bufsend%dim_1%EX = ( max( 0, $ndim_S0 ) )
 1330.          bufsend%dim_1%SM = 1
 1330.          $_allo_P3(0) = 0x1000000000001L
 1330.          $_allo_P3(1) = loc( bufsend )
 1330.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 1330.       endif
 1332.       comm = 1140850688
 1334.       if ( nrec > 0 ) then
 1334.          $I_L1334_34 = 0
 1334.          do
 1335.             idest = myrecs(1 + $I_L1334_34)
 1336.             if ( myid + -idest /= 0 ) then
 1337.                t$1029 = ibr(2 + $I_L1334_34) + -ibr(1 + $I_L1334_34)
 1337.                call mpi_irecv( (bufrec%base_addr)(ibr(1 + $I_L1334_34), 0), t$1029, 1275070495, idest, 38, comm, requestr(1 + $I_L1334_34), ierr )
 1337.             else
 1340.                requestr(1 + $I_L1334_34) = 738197504
 1341.                iself = ( 1 + $I_L1334_34 )
 1341.             endif
 1343.             $I_L1334_34 = 1 + $I_L1334_34
 1342.             if ( $I_L1334_34 >= nrec ) exit
 1342.          enddo
 1342.       endif
 1345.       $F_A33 = nsend
 1345.       if ( nsend > 0 ) then
 1345.          $I_L1345_36 = 0
 1345. !dir$ ivdep
 1345.          do
 1345.             ips(1 + $I_L1345_36) = -1 + ibs(1 + $I_L1345_36)
 1345.             $I_L1345_36 = 1 + $I_L1345_36
 1345.             if ( $I_L1345_36 >= $F_A33 ) exit
 1345.          enddo
 1345.       endif
 1346.       $F_A34 = nrec
 1346.       if ( nrec > 0 ) then
 1346.          $I_L1346_38 = 0
 1346. !dir$ ivdep
 1346.          do
 1346.             ipr(1 + $I_L1346_38) = -1 + ibr(1 + $I_L1346_38)
 1346.             $I_L1346_38 = 1 + $I_L1346_38
 1346.             if ( $I_L1346_38 >= $F_A34 ) exit
 1346.          enddo
 1346.       endif
 1348.       if ( mymnmax > 0 ) then
 1349.          $SC_mnsendsmap_si_I0 = mnsendsmap_si%dim_1%EX
 1349.          $SC_mnsendsmap_si_I1 = mnsendsmap_si%dim_1%LB
 1352.          $SC_bufsend_I2 = bufsend%dim_1%EX
 1352.          $SC_bufsend_I3 = bufsend%dim_1%LB
 1348.          $I_L1348_66 = 0
 1348.          do
 1349.             $idest_S3 = maps((mnsendsmap_si%base_addr)(1 + $I_L1348_66, 0))
 1351.             $id_S4 = ips($idest_S3)
 1352.             $F_A35 = kml
 1352.             if ( $F_A35 > 0 ) then
 1352.                $I_L1352_40 = 0
 1352. !dir$ ivdep
 1352.                do
 1352.                   (bufsend%base_addr)(1 + $id_S4 + $I_L1352_40, 0) = q1(1 + 2 * $I_L1348_66, 1 + $I_L1352_40)
 1352.                   $I_L1352_40 = 1 + $I_L1352_40
 1352.                   if ( $I_L1352_40 >= $F_A35 ) exit
 1352.                enddo
 1352.             endif
 1354.             $F_A36 = kml
 1354.             if ( kml > 0 ) then
 1354.                $I_L1354_42 = 0
 1354. !dir$ ivdep
 1354.                do
 1354.                   (bufsend%base_addr)(1 + kml + $id_S4 + $I_L1354_42, 0) = q1(2 + 2 * $I_L1348_66, 1 + $I_L1354_42)
 1354.                   $I_L1354_42 = 1 + $I_L1354_42
 1354.                   if ( $I_L1354_42 >= $F_A36 ) exit
 1354.                enddo
 1354.             endif
 1356.             $F_A37 = kml
 1356.             if ( kml > 0 ) then
 1356.                $I_L1356_44 = 0
 1356. !dir$ ivdep
 1356.                do
 1356.                   (bufsend%base_addr)(1 + $id_S4 + $I_L1356_44 + 2 * kml, 0) = q2(1 + 2 * $I_L1348_66, 1 + $I_L1356_44)
 1356.                   $I_L1356_44 = 1 + $I_L1356_44
 1356.                   if ( $I_L1356_44 >= $F_A37 ) exit
 1356.                enddo
 1356.             endif
 1358.             $F_A38 = kml
 1358.             if ( kml > 0 ) then
 1358.                $I_L1358_46 = 0
 1358. !dir$ ivdep
 1358.                do
 1358.                   (bufsend%base_addr)(1 + $id_S4 + $I_L1358_46 + 3 * kml, 0) = q2(2 + 2 * $I_L1348_66, 1 + $I_L1358_46)
 1358.                   $I_L1358_46 = 1 + $I_L1358_46
 1358.                   if ( $I_L1358_46 >= $F_A38 ) exit
 1358.                enddo
 1358.             endif
 1359.             $id_S8 = $id_S4 + 4 * kml
 1360.             if ( loc( q3 ) /= 0 ) then
 1361.                $F_A39 = kml
 1361.                if ( kml > 0 ) then
 1361.                   $I_L1361_48 = 0
 1361. !dir$ ivdep
 1361.                   do
 1361.                      (bufsend%base_addr)(1 + $id_S4 + $I_L1361_48 + 4 * kml, 0) = q3(1 + 2 * $I_L1348_66, 1 + $I_L1361_48)
 1361.                      $I_L1361_48 = 1 + $I_L1361_48
 1361.                      if ( $I_L1361_48 >= $F_A39 ) exit
 1361.                   enddo
 1361.                endif
 1363.                $F_A40 = kml
 1363.                if ( kml > 0 ) then
 1363.                   $I_L1363_50 = 0
 1363. !dir$ ivdep
 1363.                   do
 1363.                      (bufsend%base_addr)(1 + $id_S4 + $I_L1363_50 + 5 * kml, 0) = q3(2 + 2 * $I_L1348_66, 1 + $I_L1363_50)
 1363.                      $I_L1363_50 = 1 + $I_L1363_50
 1363.                      if ( $I_L1363_50 >= $F_A40 ) exit
 1363.                   enddo
 1363.                endif
 1364.                $id_S8 = $id_S4 + 6 * kml
 1364.             endif
 1366.             if ( ( havesurf .and. loc( qs1 ) /= 0 ) /= .false. ) then
 1367.                (bufsend%base_addr)(1 + $id_S8, 0) = qs1(1 + 2 * $I_L1348_66)
 1368.                (bufsend%base_addr)(2 + $id_S8, 0) = qs1(2 + 2 * $I_L1348_66)
 1369.                $id_S8 = 2 + $id_S8
 1369.             endif
 1371.             ips($idest_S3) = $id_S8
 1372.             $I_L1348_66 = 1 + $I_L1348_66
 1370.             if ( $I_L1348_66 >= mymnmax ) exit
 1370.          enddo
 1370.       endif
 1373.       if ( nsend > 0 ) then
 1373.          $I_L1373_68 = 0
 1373.          do
 1374.             idest = mysends(1 + $I_L1373_68)
 1375.             if ( myid + -idest /= 0 ) then
 1376.                t$1029 = 1 + ips(1 + $I_L1373_68) + -ibs(1 + $I_L1373_68)
 1376.                call mpi_isend( (bufsend%base_addr)(ibs(1 + $I_L1373_68), 0), t$1029, 1275070495, idest, 38, comm, requests(1 + $I_L1373_68), ierr )
 1376.             else
 1379.                requests(1 + $I_L1373_68) = 738197504
 1380.                $F_A41 = ( 1 + ips(1 + $I_L1373_68) + -ibs(1 + $I_L1373_68) )
 1380.                if ( ips(1 + $I_L1373_68) + -ibs(1 + $I_L1373_68) >= 0 ) then
 1380.                   $SCA_ibs_I21 = ibs(1 + $I_L1373_68)
 1380.                   $SCA_ibr_I24 = ibr(iself)
 1380.                   $SC_bufsend_I26 = bufsend%dim_1%EX
 1380.                   $SC_bufsend_I27 = bufsend%dim_1%LB
 1380.                   $SC_bufrec_I28 = bufrec%dim_1%EX
 1380.                   $SC_bufrec_I29 = bufrec%dim_1%LB
 1380.                   $I_L1380_52 = 0
 1380. !dir$ ivdep
 1380.                   do
 1380.                      (bufrec%base_addr)($SCA_ibr_I24 + $I_L1380_52, 0) = (bufsend%base_addr)($SCA_ibs_I21 + $I_L1380_52, 0)
 1380.                      $I_L1380_52 = 1 + $I_L1380_52
 1380.                      if ( $I_L1380_52 >= $F_A41 ) exit
 1380.                   enddo
 1380.                endif
 1380.             endif
 1382.             $I_L1373_68 = 1 + $I_L1373_68
 1381.             if ( $I_L1373_68 >= nsend ) exit
 1381.          enddo
 1381.       endif
 1383.       call mpi_waitall( nrec, requestr(1), status(1, 1), ierr )
 1386.       if ( mnmax_si > 0 ) then
 1394.          $SC_map_four_I8 = map_four%dim_1%EX
 1394.          $SC_map_four_I9 = map_four%dim_1%LB
 1394.          $SC_map_four_I11 = map_four%dim_2%SM
 1394.          $SC_map_four_I10 = map_four%dim_2%EX
 1394.          $SC_map_four_I12 = map_four%dim_2%LB
 1394.          $SC_nodehasm_I13 = nodehasm%dim_1%EX
 1394.          $SC_nodehasm_I14 = nodehasm%dim_1%LB
 1394.          $SC_nodehasm_I16 = nodehasm%dim_2%SM
 1394.          $SC_nodehasm_I15 = nodehasm%dim_2%EX
 1394.          $SC_nodehasm_I17 = nodehasm%dim_2%LB
 1389.          $SC_mmap_I6 = mmap%dim_1%EX
 1389.          $SC_mmap_I7 = mmap%dim_1%LB
 1388.          $SC_mymnmap_si_I4 = mymnmap_si%dim_1%EX
 1388.          $SC_mymnmap_si_I5 = mymnmap_si%dim_1%LB
 1396.          $SC_bufrec_I18 = bufrec%dim_1%EX
 1396.          $SC_bufrec_I19 = bufrec%dim_1%LB
 1391.          if ( ngroups_four > 0 ) then
 1386.             $I_L1386_72 = 0
 1386. !dir$ loop_info (automatic) cache_nt( mymnmap_si, mmap )
 1386.             do
 1388.                $mng_S12 = (mymnmap_si%base_addr)(1 + $I_L1386_72, 0)
 1389.                $m_S15 = (mmap%base_addr)($mng_S12, 0)
 1390.                $k_S18 = 0
 1391.                $I_L1391_70 = 0
 1391. !dir$ loop_info (automatic) cache_nt( map_four )
 1391.                do
 1392.                   $km_S14 = nlfour(1 + $I_L1391_70)
 1393.                   if ( $km_S14 > 0 ) then
 1394.                      $iproc_S16 = mapr((map_four%base_addr)(1 + $I_L1391_70, (nodehasm%base_addr)($m_S15, 1 + $I_L1391_70, 0), 0))
 1395.                      $id_S17 = ipr($iproc_S16)
 1396.                      $F_A42 = $km_S14
 1396.                      if ( $F_A42 > 0 ) then
 1396.                         $I_L1396_54 = 0
 1396. !dir$ ivdep
 1396.                         do
 1396.                            q1_si(1 + 2 * $I_L1386_72, 1 + $k_S18 + $I_L1396_54) = (bufrec%base_addr)(1 + $id_S17 + $I_L1396_54, 0)
 1396.                            $I_L1396_54 = 1 + $I_L1396_54
 1396.                            if ( $I_L1396_54 >= $F_A42 ) exit
 1396.                         enddo
 1396.                      endif
 1398.                      $F_A43 = $km_S14
 1398.                      $I_L1398_56 = 0
 1398. !dir$ ivdep
 1398.                      do
 1398.                         q1_si(2 + 2 * $I_L1386_72, 1 + $k_S18 + $I_L1398_56) = (bufrec%base_addr)(1 + $km_S14 + $id_S17 + $I_L1398_56, 0)
 1398.                         $I_L1398_56 = 1 + $I_L1398_56
 1398.                         if ( $I_L1398_56 >= $F_A43 ) exit
 1398.                      enddo
 1400.                      $F_A44 = $km_S14
 1400.                      $I_L1400_58 = 0
 1400. !dir$ ivdep
 1400.                      do
 1400.                         q2_si(1 + 2 * $I_L1386_72, 1 + $k_S18 + $I_L1400_58) = (bufrec%base_addr)(1 + $id_S17 + $I_L1400_58 + 2 * $km_S14, 0)
 1400.                         $I_L1400_58 = 1 + $I_L1400_58
 1400.                         if ( $I_L1400_58 >= $F_A44 ) exit
 1400.                      enddo
 1402.                      $F_A45 = $km_S14
 1402.                      $I_L1402_60 = 0
 1402. !dir$ ivdep
 1402.                      do
 1402.                         q2_si(2 + 2 * $I_L1386_72, 1 + $k_S18 + $I_L1402_60) = (bufrec%base_addr)(1 + $id_S17 + $I_L1402_60 + 3 * $km_S14, 0)
 1402.                         $I_L1402_60 = 1 + $I_L1402_60
 1402.                         if ( $I_L1402_60 >= $F_A45 ) exit
 1402.                      enddo
 1403.                      $id_S22 = $id_S17 + 4 * $km_S14
 1404.                      if ( loc( q3 ) /= 0 ) then
 1405.                         $F_A46 = $km_S14
 1405.                         $I_L1405_62 = 0
 1405. !dir$ ivdep
 1405.                         do
 1405.                            q3_si(1 + 2 * $I_L1386_72, 1 + $k_S18 + $I_L1405_62) = (bufrec%base_addr)(1 + $id_S17 + $I_L1405_62 + 4 * $km_S14, 0)
 1405.                            $I_L1405_62 = 1 + $I_L1405_62
 1405.                            if ( $I_L1405_62 >= $F_A46 ) exit
 1405.                         enddo
 1407.                         $F_A47 = $km_S14
 1407.                         $I_L1407_64 = 0
 1407. !dir$ ivdep
 1407.                         do
 1407.                            q3_si(2 + 2 * $I_L1386_72, 1 + $k_S18 + $I_L1407_64) = (bufrec%base_addr)(1 + $id_S17 + $I_L1407_64 + 5 * $km_S14, 0)
 1407.                            $I_L1407_64 = 1 + $I_L1407_64
 1407.                            if ( $I_L1407_64 >= $F_A47 ) exit
 1407.                         enddo
 1408.                         $id_S22 = $id_S17 + 6 * $km_S14
 1408.                      endif
 1410.                      if ( $I_L1391_70 == 0 ) then
 1410.                         if ( loc( qs1 ) /= 0 ) then
 1411.                            qs1_si(1 + 2 * $I_L1386_72) = (bufrec%base_addr)(1 + $id_S22, 0)
 1412.                            qs1_si(2 + 2 * $I_L1386_72) = (bufrec%base_addr)(2 + $id_S22, 0)
 1413.                            $id_S22 = 2 + $id_S22
 1413.                         endif
 1413.                      endif
 1415.                      ipr($iproc_S16) = $id_S22
 1415.                   endif
 1417.                   $k_S18 = $km_S14 + $k_S18
 1418.                   $I_L1391_70 = 1 + $I_L1391_70
 1416.                   if ( $I_L1391_70 >= ngroups_four ) exit
 1416.                enddo
 1419.                $I_L1386_72 = 1 + $I_L1386_72
 1418.                if ( $I_L1386_72 >= mnmax_si ) exit
 1418.             enddo
 1418.          endif
 1418.       endif
 1421.       call mpi_waitall( nsend, requests(1), status(1, 1), ierr )
 1286.       _free( t$494 )
 1423.       return
 1423.       end
 1423.       
 1425.       
 1425.       subroutine sitospec( ibs, ibr, nsend, nrec, mysends, myrecs, maps, mapr, kmg, kml, nlfour, toall, q1, q2, q1_si, q2_si, q3, q3_si, qs1, qs1_si )
 1425.       t$156 = ( 1 + nsend )
 1430.       t$507 = _zla( 0, ( 1 + nsend ) )
 1425.       t$157 = ( 1 + nrec )
 1431.       t$508 = _zla( 0, ( 1 + nrec ) )
 1425.       t$158 = nsend
 1432.       t$509 = _zla( 0, nsend )
 1425.       t$159 = nrec
 1433.       t$510 = _zla( 0, nrec )
 1425.       t$160 = ( -1 + maxnodes )
 1425.       t$511 = maxnodes
 1434.       t$512 = _zla( 0, maxnodes )
 1425.       t$162 = ( 2 * mymnmax )
 1425.       t$163 = kml
 1440.       t$513 = _zla( 0, ( 2 * mymnmax ) )
 1425.       t$514 = _zla( 0, ( 2 * mymnmax ) )
 1440.       t$515 = _zla( 0, kml )
 1425.       t$516 = _zla( 0, kml ) * _zla( 0, ( 2 * mymnmax ) )
 1425.       t$166 = ( 2 * mnmax_si )
 1425.       t$167 = kmg
 1442.       t$517 = _zla( 0, ( 2 * mnmax_si ) )
 1425.       t$518 = _zla( 0, ( 2 * mnmax_si ) )
 1442.       t$519 = _zla( 0, kmg )
 1425.       t$520 = _zla( 0, kmg ) * _zla( 0, ( 2 * mnmax_si ) )
 1454.       t$523 = 4 * _zla( 0, nrec )
 1453.       t$525 = 4 * _zla( 0, nrec ) + 4 * _zla( 0, nsend )
 1455.       t$527 = 4 * _zla( 0, nsend ) + 8 * _zla( 0, nrec )
 1456.       t$529 = 8 * _zla( 0, nrec ) + 8 * _zla( 0, nsend )
 1425.       t$181 = maxnodes
 1457.       t$530 = _zla( 0, maxnodes )
 1425.       t$531 = 5 * _zla( 0, maxnodes )
 1457.       t$533 = 8 * _zla( 0, nrec ) + 8 * _zla( 0, nsend ) + 20 * _zla( 0, maxnodes )
 1425.       t$521 = int( _alloc( 8 * _zla( 0, nrec ) + 8 * _zla( 0, nsend ) + 20 * _zla( 0, maxnodes ) ), 8 )
 1454.       t$522 = t$521
 1453.       t$524 = t$521 + 4 * _zla( 0, nrec )
 1455.       t$526 = t$521 + 4 * _zla( 0, nrec ) + 4 * _zla( 0, nsend )
 1456.       t$528 = t$521 + 4 * _zla( 0, nsend ) + 8 * _zla( 0, nrec )
 1457.       t$532 = t$521 + 8 * _zla( 0, nrec ) + 8 * _zla( 0, nsend )
 1459.       $ndim_S0 = max( ibs(1 + nsend), ibr(1 + nrec) )
 1460.       if ( dimrecbuf < $ndim_S0 ) then
 1461.          dimrecbuf = $ndim_S0
 1462.          $_allo_P0(0) = 0x1000000000001L
 1462.          $_allo_P0(1) = loc( bufrec )
 1462.          call __deallocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 1462.          bufrec%header%assoc = 0
 1463.          bufrec%header%a_contig = 1
 1463.          bufrec%dim_1%LB = 1
 1463.          bufrec%dim_1%EX = ( max( 0, $ndim_S0 ) )
 1463.          bufrec%dim_1%SM = 1
 1463.          $_allo_P1(0) = 0x1000000000001L
 1463.          $_allo_P1(1) = loc( bufrec )
 1463.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 1463.       endif
 1466.       if ( dimsendbuf < $ndim_S0 ) then
 1467.          dimsendbuf = $ndim_S0
 1468.          $_allo_P2(0) = 0x1000000000001L
 1468.          $_allo_P2(1) = loc( bufsend )
 1468.          call __deallocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 1468.          bufsend%header%assoc = 0
 1469.          bufsend%header%a_contig = 1
 1469.          bufsend%dim_1%LB = 1
 1469.          bufsend%dim_1%EX = ( max( 0, $ndim_S0 ) )
 1469.          bufsend%dim_1%SM = 1
 1469.          $_allo_P3(0) = 0x1000000000001L
 1469.          $_allo_P3(1) = loc( bufsend )
 1469.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 1469.       endif
 1471.       comm = 1140850688
 1473.       if ( nrec > 0 ) then
 1473.          $I_L1473_34 = 0
 1473.          do
 1474.             idest = myrecs(1 + $I_L1473_34)
 1475.             if ( myid + -idest /= 0 ) then
 1476.                t$1045 = ibr(2 + $I_L1473_34) + -ibr(1 + $I_L1473_34)
 1476.                call mpi_irecv( (bufrec%base_addr)(ibr(1 + $I_L1473_34), 0), t$1045, 1275070495, idest, 39, comm, requestr(1 + $I_L1473_34), ierr )
 1476.             else
 1479.                requestr(1 + $I_L1473_34) = 738197504
 1480.                iself = ( 1 + $I_L1473_34 )
 1480.             endif
 1482.             $I_L1473_34 = 1 + $I_L1473_34
 1481.             if ( $I_L1473_34 >= nrec ) exit
 1481.          enddo
 1481.       endif
 1484.       $F_A33 = nsend
 1484.       if ( nsend > 0 ) then
 1484.          $I_L1484_36 = 0
 1484. !dir$ ivdep
 1484. !dir$ loop_info (automatic) cache_nt( ips )
 1484.          do
 1484.             ips(1 + $I_L1484_36) = -1 + ibs(1 + $I_L1484_36)
 1484.             $I_L1484_36 = 1 + $I_L1484_36
 1484.             if ( $I_L1484_36 >= $F_A33 ) exit
 1484.          enddo
 1484.       endif
 1485.       $F_A34 = nrec
 1485.       if ( nrec > 0 ) then
 1485.          $I_L1485_38 = 0
 1485. !dir$ ivdep
 1485.          do
 1485.             ipr(1 + $I_L1485_38) = -1 + ibr(1 + $I_L1485_38)
 1485.             $I_L1485_38 = 1 + $I_L1485_38
 1485.             if ( $I_L1485_38 >= $F_A34 ) exit
 1485.          enddo
 1485.       endif
 1487.       if ( mnmax_si > 0 ) then
 1493.          $SC_map_four_I4 = map_four%dim_1%EX
 1493.          $SC_map_four_I5 = map_four%dim_1%LB
 1493.          $SC_map_four_I7 = map_four%dim_2%SM
 1493.          $SC_map_four_I6 = map_four%dim_2%EX
 1493.          $SC_map_four_I8 = map_four%dim_2%LB
 1493.          $SC_nodehasm_I9 = nodehasm%dim_1%EX
 1493.          $SC_nodehasm_I10 = nodehasm%dim_1%LB
 1493.          $SC_nodehasm_I12 = nodehasm%dim_2%SM
 1493.          $SC_nodehasm_I11 = nodehasm%dim_2%EX
 1493.          $SC_nodehasm_I13 = nodehasm%dim_2%LB
 1490.          $SC_mmap_I2 = mmap%dim_1%EX
 1490.          $SC_mmap_I3 = mmap%dim_1%LB
 1489.          $SC_mymnmap_si_I0 = mymnmap_si%dim_1%EX
 1489.          $SC_mymnmap_si_I1 = mymnmap_si%dim_1%LB
 1496.          $SC_bufsend_I14 = bufsend%dim_1%EX
 1496.          $SC_bufsend_I15 = bufsend%dim_1%LB
 1492.          if ( ngroups_four > 0 ) then
 1487.             $I_L1487_72 = 0
 1487. !dir$ loop_info (automatic) cache_nt( mymnmap_si, mmap )
 1487.             do
 1489.                $mng_S3 = (mymnmap_si%base_addr)(1 + $I_L1487_72, 0)
 1490.                $m_S5 = (mmap%base_addr)($mng_S3, 0)
 1491.                $k_S8 = 0
 1492.                $I_L1492_66 = 0
 1492. !dir$ loop_info (automatic) cache_nt( map_four )
 1492.                do
 1493.                   $iproc_S6 = maps((map_four%base_addr)(1 + $I_L1492_66, (nodehasm%base_addr)($m_S5, 1 + $I_L1492_66, 0), 0))
 1494.                   $km_S7 = nlfour(1 + $I_L1492_66)
 1495.                   $id_S9 = ips($iproc_S6)
 1496.                   $F_A35 = $km_S7
 1496.                   if ( $F_A35 > 0 ) then
 1496.                      $I_L1496_40 = 0
 1496. !dir$ ivdep
 1496.                      do
 1496.                         (bufsend%base_addr)(1 + $id_S9 + $I_L1496_40, 0) = q1_si(1 + 2 * $I_L1487_72, 1 + $k_S8 + $I_L1496_40)
 1496.                         $I_L1496_40 = 1 + $I_L1496_40
 1496.                         if ( $I_L1496_40 >= $F_A35 ) exit
 1496.                      enddo
 1496.                   endif
 1498.                   $F_A36 = $km_S7
 1498.                   if ( $km_S7 > 0 ) then
 1498.                      $I_L1498_42 = 0
 1498. !dir$ ivdep
 1498.                      do
 1498.                         (bufsend%base_addr)(1 + $km_S7 + $id_S9 + $I_L1498_42, 0) = q1_si(2 + 2 * $I_L1487_72, 1 + $k_S8 + $I_L1498_42)
 1498.                         $I_L1498_42 = 1 + $I_L1498_42
 1498.                         if ( $I_L1498_42 >= $F_A36 ) exit
 1498.                      enddo
 1498.                   endif
 1500.                   $F_A37 = $km_S7
 1500.                   if ( $km_S7 > 0 ) then
 1500.                      $I_L1500_44 = 0
 1500. !dir$ ivdep
 1500.                      do
 1500.                         (bufsend%base_addr)(1 + $id_S9 + $I_L1500_44 + 2 * $km_S7, 0) = q2_si(1 + 2 * $I_L1487_72, 1 + $k_S8 + $I_L1500_44)
 1500.                         $I_L1500_44 = 1 + $I_L1500_44
 1500.                         if ( $I_L1500_44 >= $F_A37 ) exit
 1500.                      enddo
 1500.                   endif
 1502.                   $F_A38 = $km_S7
 1502.                   if ( $km_S7 > 0 ) then
 1502.                      $I_L1502_46 = 0
 1502. !dir$ ivdep
 1502.                      do
 1502.                         (bufsend%base_addr)(1 + $id_S9 + $I_L1502_46 + 3 * $km_S7, 0) = q2_si(2 + 2 * $I_L1487_72, 1 + $k_S8 + $I_L1502_46)
 1502.                         $I_L1502_46 = 1 + $I_L1502_46
 1502.                         if ( $I_L1502_46 >= $F_A38 ) exit
 1502.                      enddo
 1502.                   endif
 1503.                   $id_S13 = $id_S9 + 4 * $km_S7
 1504.                   if ( loc( q3 ) /= 0 ) then
 1505.                      $F_A39 = $km_S7
 1505.                      if ( $km_S7 > 0 ) then
 1505.                         $I_L1505_48 = 0
 1505. !dir$ ivdep
 1505.                         do
 1505.                            (bufsend%base_addr)(1 + $id_S9 + $I_L1505_48 + 4 * $km_S7, 0) = q3_si(1 + 2 * $I_L1487_72, 1 + $k_S8 + $I_L1505_48)
 1505.                            $I_L1505_48 = 1 + $I_L1505_48
 1505.                            if ( $I_L1505_48 >= $F_A39 ) exit
 1505.                         enddo
 1505.                      endif
 1507.                      $F_A40 = $km_S7
 1507.                      if ( $km_S7 > 0 ) then
 1507.                         $I_L1507_50 = 0
 1507. !dir$ ivdep
 1507.                         do
 1507.                            (bufsend%base_addr)(1 + $id_S9 + $I_L1507_50 + 5 * $km_S7, 0) = q3_si(2 + 2 * $I_L1487_72, 1 + $k_S8 + $I_L1507_50)
 1507.                            $I_L1507_50 = 1 + $I_L1507_50
 1507.                            if ( $I_L1507_50 >= $F_A40 ) exit
 1507.                         enddo
 1507.                      endif
 1508.                      $id_S13 = $id_S9 + 6 * $km_S7
 1508.                   endif
 1510.                   if ( $I_L1492_66 == 0 ) then
 1509.                      goto 10
 1510.                   else if ( toall /= .false. ) then
 1510.    10                continue
 1510.                      if ( loc( qs1 ) /= 0 ) then
 1511.                         (bufsend%base_addr)(1 + $id_S13, 0) = qs1_si(1 + 2 * $I_L1487_72)
 1512.                         (bufsend%base_addr)(2 + $id_S13, 0) = qs1_si(2 + 2 * $I_L1487_72)
 1513.                         $id_S13 = 2 + $id_S13
 1513.                      endif
 1513.                   endif
 1515.                   ips($iproc_S6) = $id_S13
 1516.                   $k_S8 = $km_S7 + $k_S8
 1517.                   $I_L1492_66 = 1 + $I_L1492_66
 1514.                   if ( $I_L1492_66 >= ngroups_four ) exit
 1514.                enddo
 1518.                $I_L1487_72 = 1 + $I_L1487_72
 1517.                if ( $I_L1487_72 >= mnmax_si ) exit
 1517.             enddo
 1517.          endif
 1517.       endif
 1520.       if ( nsend > 0 ) then
 1520.          $I_L1520_68 = 0
 1520.          do
 1521.             idest = mysends(1 + $I_L1520_68)
 1522.             if ( myid + -idest /= 0 ) then
 1523.                t$1045 = 1 + ips(1 + $I_L1520_68) + -ibs(1 + $I_L1520_68)
 1523.                call mpi_isend( (bufsend%base_addr)(ibs(1 + $I_L1520_68), 0), t$1045, 1275070495, idest, 39, comm, requests(1 + $I_L1520_68), ierr )
 1523.             else
 1526.                requests(1 + $I_L1520_68) = 738197504
 1527.                $F_A41 = ( 1 + ips(1 + $I_L1520_68) + -ibs(1 + $I_L1520_68) )
 1527.                if ( ips(1 + $I_L1520_68) + -ibs(1 + $I_L1520_68) >= 0 ) then
 1527.                   $SCA_ibs_I21 = ibs(1 + $I_L1520_68)
 1527.                   $SCA_ibr_I24 = ibr(iself)
 1527.                   $SC_bufsend_I26 = bufsend%dim_1%EX
 1527.                   $SC_bufsend_I27 = bufsend%dim_1%LB
 1527.                   $SC_bufrec_I28 = bufrec%dim_1%EX
 1527.                   $SC_bufrec_I29 = bufrec%dim_1%LB
 1527.                   $I_L1527_52 = 0
 1527. !dir$ ivdep
 1527.                   do
 1527.                      (bufrec%base_addr)($SCA_ibr_I24 + $I_L1527_52, 0) = (bufsend%base_addr)($SCA_ibs_I21 + $I_L1527_52, 0)
 1527.                      $I_L1527_52 = 1 + $I_L1527_52
 1527.                      if ( $I_L1527_52 >= $F_A41 ) exit
 1527.                   enddo
 1527.                endif
 1527.             endif
 1529.             $I_L1520_68 = 1 + $I_L1520_68
 1528.             if ( $I_L1520_68 >= nsend ) exit
 1528.          enddo
 1528.       endif
 1530.       call mpi_waitall( nrec, requestr(1), status(1, 1), ierr )
 1532.       if ( mymnmax > 0 ) then
 1533.          $SC_mnsendsmap_si_I16 = mnsendsmap_si%dim_1%EX
 1533.          $SC_mnsendsmap_si_I17 = mnsendsmap_si%dim_1%LB
 1536.          $SC_bufrec_I18 = bufrec%dim_1%EX
 1536.          $SC_bufrec_I19 = bufrec%dim_1%LB
 1532.          $I_L1532_70 = 0
 1532.          do
 1533.             $idest_S17 = mapr((mnsendsmap_si%base_addr)(1 + $I_L1532_70, 0))
 1535.             $id_S18 = ipr($idest_S17)
 1536.             $F_A42 = kml
 1536.             if ( $F_A42 > 0 ) then
 1536.                $I_L1536_54 = 0
 1536. !dir$ ivdep
 1536.                do
 1536.                   q1(1 + 2 * $I_L1532_70, 1 + $I_L1536_54) = (bufrec%base_addr)(1 + $id_S18 + $I_L1536_54, 0)
 1536.                   $I_L1536_54 = 1 + $I_L1536_54
 1536.                   if ( $I_L1536_54 >= $F_A42 ) exit
 1536.                enddo
 1536.             endif
 1538.             $F_A43 = kml
 1538.             if ( kml > 0 ) then
 1538.                $I_L1538_56 = 0
 1538. !dir$ ivdep
 1538.                do
 1538.                   q1(2 + 2 * $I_L1532_70, 1 + $I_L1538_56) = (bufrec%base_addr)(1 + kml + $id_S18 + $I_L1538_56, 0)
 1538.                   $I_L1538_56 = 1 + $I_L1538_56
 1538.                   if ( $I_L1538_56 >= $F_A43 ) exit
 1538.                enddo
 1538.             endif
 1540.             $F_A44 = kml
 1540.             if ( kml > 0 ) then
 1540.                $I_L1540_58 = 0
 1540. !dir$ ivdep
 1540.                do
 1540.                   q2(1 + 2 * $I_L1532_70, 1 + $I_L1540_58) = (bufrec%base_addr)(1 + $id_S18 + $I_L1540_58 + 2 * kml, 0)
 1540.                   $I_L1540_58 = 1 + $I_L1540_58
 1540.                   if ( $I_L1540_58 >= $F_A44 ) exit
 1540.                enddo
 1540.             endif
 1542.             $F_A45 = kml
 1542.             if ( kml > 0 ) then
 1542.                $I_L1542_60 = 0
 1542. !dir$ ivdep
 1542.                do
 1542.                   q2(2 + 2 * $I_L1532_70, 1 + $I_L1542_60) = (bufrec%base_addr)(1 + $id_S18 + $I_L1542_60 + 3 * kml, 0)
 1542.                   $I_L1542_60 = 1 + $I_L1542_60
 1542.                   if ( $I_L1542_60 >= $F_A45 ) exit
 1542.                enddo
 1542.             endif
 1543.             $id_S22 = $id_S18 + 4 * kml
 1544.             if ( loc( q3 ) /= 0 ) then
 1545.                $F_A46 = kml
 1545.                if ( kml > 0 ) then
 1545.                   $I_L1545_62 = 0
 1545. !dir$ ivdep
 1545.                   do
 1545.                      q3(1 + 2 * $I_L1532_70, 1 + $I_L1545_62) = (bufrec%base_addr)(1 + $id_S18 + $I_L1545_62 + 4 * kml, 0)
 1545.                      $I_L1545_62 = 1 + $I_L1545_62
 1545.                      if ( $I_L1545_62 >= $F_A46 ) exit
 1545.                   enddo
 1545.                endif
 1547.                $F_A47 = kml
 1547.                if ( kml > 0 ) then
 1547.                   $I_L1547_64 = 0
 1547. !dir$ ivdep
 1547.                   do
 1547.                      q3(2 + 2 * $I_L1532_70, 1 + $I_L1547_64) = (bufrec%base_addr)(1 + $id_S18 + $I_L1547_64 + 5 * kml, 0)
 1547.                      $I_L1547_64 = 1 + $I_L1547_64
 1547.                      if ( $I_L1547_64 >= $F_A47 ) exit
 1547.                   enddo
 1547.                endif
 1548.                $id_S22 = $id_S18 + 6 * kml
 1548.             endif
 1550.             if ( havesurf /= .false. ) then
 1549.                goto 20
 1549.             else if ( toall /= .false. ) then
 1549.    20          continue
 1550.                if ( loc( qs1 ) /= 0 ) then
 1551.                   qs1(1 + 2 * $I_L1532_70) = (bufrec%base_addr)(1 + $id_S22, 0)
 1552.                   qs1(2 + 2 * $I_L1532_70) = (bufrec%base_addr)(2 + $id_S22, 0)
 1553.                   $id_S22 = 2 + $id_S22
 1553.                endif
 1553.             endif
 1555.             ipr($idest_S17) = $id_S22
 1556.             $I_L1532_70 = 1 + $I_L1532_70
 1554.             if ( $I_L1532_70 >= mymnmax ) exit
 1554.          enddo
 1554.       endif
 1557.       call mpi_waitall( nsend, requests(1), status(1, 1), ierr )
 1425.       _free( t$521 )
 1559.       return
 1559.       end
 1559.       
 1561.       
 1561.       subroutine exchange_hallos( nrec, nsend, nscalars )
 1561.       t$182 = ( -1 + maxnodes )
 1561.       t$534 = maxnodes
 1570.       t$535 = _zla( 0, maxnodes )
 1570.       t$538 = 4 * _zla( 0, maxnodes )
 1571.       t$540 = 8 * _zla( 0, maxnodes )
 1572.       t$542 = 12 * _zla( 0, maxnodes )
 1561.       t$186 = maxnodes
 1573.       t$543 = _zla( 0, maxnodes )
 1561.       t$544 = 5 * _zla( 0, maxnodes )
 1573.       t$546 = 32 * _zla( 0, maxnodes )
 1561.       t$536 = int( _alloc( 32 * _zla( 0, maxnodes ) ), 8 )
 1570.       t$537 = t$536
 1571.       t$539 = t$536 + 4 * _zla( 0, maxnodes )
 1572.       t$541 = t$536 + 8 * _zla( 0, maxnodes )
 1573.       t$545 = t$536 + 12 * _zla( 0, maxnodes )
 1575.       comm = 1140850688
 1576.       requestr(myid) = 738197504
 1577.       requests(myid) = 738197504
 1578.       $t_S1 = -1 + maxnodes
 1578.       if ( maxnodes > 0 ) then
 1578.          $I_L1578_48 = 0
 1578.          do
 1579.             if ( $I_L1578_48 + -myid /= 0 ) then
 1580.                t$1061 = $I_L1578_48
 1580.                call mpi_irecv( (mysendspr%base_addr)(2, 1 + $I_L1578_48, 0), 1, 1275069467, t$1061, 15, comm, requestr($I_L1578_48), ierr )
 1580.             else
 1583.                (mysendspr%base_addr)(2, 1 + $I_L1578_48, 0) = 0
 1583.             endif
 1585.             $I_L1578_48 = 1 + $I_L1578_48
 1584.             if ( $I_L1578_48 >= 1 + $t_S1 ) exit
 1584.          enddo
 1584.       endif
 1586.       $m_S4 = 0
 1587.       $k_S3 = 1
 1588.       $t_S5 = -1 + maxnodes
 1588.       if ( maxnodes > 0 ) then
 1588.          $I_L1588_50 = 0
 1588.          do
 1589.             if ( $I_L1588_50 + -myid /= 0 ) then
 1590.                if ( $k_S3 > nrec ) then
 1590.                   goto 10
 1590.                else if ( (myrecspr%base_addr)(1, $k_S3, 0) + -$I_L1588_50 == 0 ) then
 1591.                   ns($I_L1588_50) = (myrecspr%base_addr)(2, $k_S3, 0) + -$m_S4
 1592.                   $m_S4 = (myrecspr%base_addr)(2, $k_S3, 0)
 1593.                   $k_S3 = 1 + $k_S3
 1593.                else
 1593.    10             continue
 1595.                   ns($I_L1588_50) = 0
 1595.                endif
 1597.                t$1061 = $I_L1588_50
 1597.                call mpi_isend( ns($I_L1588_50), 1, 1275069467, t$1061, 15, comm, requests($I_L1588_50), ierr )
 1597.             endif
 1599.             $I_L1588_50 = 1 + $I_L1588_50
 1598.             if ( $I_L1588_50 >= 1 + $t_S5 ) exit
 1598.          enddo
 1598.       endif
 1600.       call mpi_waitall( maxnodes, requestr(0), status(1, 1), ierr )
 1601.       call mpi_waitall( maxnodes, requests(0), status(1, 1), ierr )
 1602.       $k_S7 = 0
 1603.       m = 0
 1604.       if ( maxnodes > 0 ) then
 1605.          $SC_mysendspr_I0 = mysendspr%dim_1%EX
 1605.          $SC_mysendspr_I1 = mysendspr%dim_1%LB
 1605.          $SC_mysendspr_I3 = mysendspr%dim_2%SM
 1605.          $SC_mysendspr_I2 = mysendspr%dim_2%EX
 1605.          $SC_mysendspr_I4 = mysendspr%dim_2%LB
 1604.          $I_L1604_52 = 0
 1604. !dir$ unroll 4
 1604.          do
 1605.             if ( (mysendspr%base_addr)(2, 1 + $I_L1604_52, 0) /= 0 ) then
 1606.                $k_S7 = 1 + $k_S7
 1607.                m = m + (mysendspr%base_addr)(2, 1 + $I_L1604_52, 0)
 1608.                (mysendspr%base_addr)(2, $k_S7, 0) = m
 1609.                (mysendspr%base_addr)(1, $k_S7, 0) = $I_L1604_52
 1609.             endif
 1611.             $I_L1604_52 = 1 + $I_L1604_52
 1610.             if ( $I_L1604_52 >= maxnodes ) exit
 1610.          enddo
 1610.       endif
 1612.       nsend = $k_S7
 1613.       $m_S8 = 0
 1614.       if ( $k_S7 > 0 ) then
 1614.          $I_L1614_54 = 0
 1614.          do
 1615.             ns(1 + $I_L1614_54) = (mysendspr%base_addr)(2, 1 + $I_L1614_54, 0) + -$m_S8
 1616.             t$1061 = 4 * ns(1 + $I_L1614_54)
 1616.             call mpi_irecv( (mysendsgr%base_addr)(1, 1 + $m_S8, 0), t$1061, 1275069467, (mysendspr%base_addr)(1, 1 + $I_L1614_54, 0), 16, comm, requestr(1 + $I_L1614_54), ierr )
 1618.             $m_S8 = (mysendspr%base_addr)(2, 1 + $I_L1614_54, 0)
 1619.             $I_L1614_54 = 1 + $I_L1614_54
 1618.             if ( $I_L1614_54 >= $k_S7 ) exit
 1618.          enddo
 1618.       endif
 1620.       isbrec%header%a_contig = 1
 1620.       isbrec%dim_1%LB = 1
 1620.       isbrec%dim_1%EX = ( max( 0, nrec ) )
 1620.       isbrec%dim_1%SM = 1
 1620.       $_allo_P0(0) = 0x1000000000001L
 1620.       $_allo_P0(1) = loc( isbrec )
 1620.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 1621.       ilrecbuf%header%a_contig = 1
 1621.       ilrecbuf%dim_1%LB = 1
 1621.       ilrecbuf%dim_1%EX = ( max( 0, nrec ) )
 1621.       ilrecbuf%dim_1%SM = 1
 1621.       $_allo_P1(0) = 0x1000000000001L
 1621.       $_allo_P1(1) = loc( ilrecbuf )
 1621.       call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 1622.       isbsend%header%a_contig = 1
 1622.       isbsend%dim_1%LB = 1
 1622.       isbsend%dim_1%EX = ( max( 0, $k_S7 ) )
 1622.       isbsend%dim_1%SM = 1
 1622.       $_allo_P2(0) = 0x1000000000001L
 1622.       $_allo_P2(1) = loc( isbsend )
 1622.       call __allocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 1623.       ilsendbuf%header%a_contig = 1
 1623.       ilsendbuf%dim_1%LB = 1
 1623.       ilsendbuf%dim_1%EX = ( max( 0, $k_S7 ) )
 1623.       ilsendbuf%dim_1%SM = 1
 1623.       $_allo_P3(0) = 0x1000000000001L
 1623.       $_allo_P3(1) = loc( ilsendbuf )
 1623.       call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 1624.       $m_S12 = 0
 1625.       $irec_S10 = 1
 1626.       if ( nrec > 0 ) then
 1626.          $I_L1626_60 = 0
 1626.          do
 1627.             (isbrec%base_addr)(1 + $I_L1626_60, 0) = $irec_S10
 1628.             ns(1 + $I_L1626_60) = (myrecspr%base_addr)(2, 1 + $I_L1626_60, 0) + -$m_S12
 1629.             t$1061 = 4 * ns(1 + $I_L1626_60)
 1629.             call mpi_isend( (myrecsgr%base_addr)(1, 1 + $m_S12, 0), t$1061, 1275069467, (myrecspr%base_addr)(1, 1 + $I_L1626_60, 0), 16, comm, requests(1 + $I_L1626_60), ierr )
 1631.             nlen = 0
 1632.             $t_S13 = (myrecspr%base_addr)(2, 1 + $I_L1626_60, 0)
 1632.             if ( $t_S13 + -$m_S12 > 0 ) then
 1633.                $SC_myrecsgr_I5 = myrecsgr%dim_1%EX
 1633.                $SC_myrecsgr_I6 = myrecsgr%dim_1%LB
 1633.                $SC_myrecsgr_I8 = myrecsgr%dim_2%SM
 1633.                $SC_myrecsgr_I7 = myrecsgr%dim_2%EX
 1633.                $SC_myrecsgr_I9 = myrecsgr%dim_2%LB
 1632.                $I_L1632_56 = 0
 1632. !dir$ ivdep
 1632.                do
 1633.                   nlen = 1 + nlen + (myrecsgr%base_addr)(2, 1 + $m_S12 + $I_L1632_56, 0) + -(myrecsgr%base_addr)(1, 1 + $m_S12 + $I_L1632_56, 0)
 1634.                   $I_L1632_56 = 1 + $I_L1632_56
 1632.                   if ( $I_L1632_56 >= ( $t_S13 + -$m_S12 ) ) exit
 1632.                enddo
 1632.             endif
 1635.             (ilrecbuf%base_addr)(1 + $I_L1626_60, 0) = nlen + 4 * nlen * kmax + nlen * kmax * nscalars
 1637.             $m_S12 = $t_S13
 1636.             $irec_S10 = nlen + $irec_S10 + 4 * nlen * kmax + nlen * kmax * nscalars
 1638.             $I_L1626_60 = 1 + $I_L1626_60
 1634.             if ( $I_L1626_60 >= nrec ) exit
 1634.          enddo
 1634.       endif
 1639.       call mpi_waitall( nsend, requestr(1), status(1, 1), ierr )
 1640.       call mpi_waitall( nrec, requests(1), status(1, 1), ierr )
 1642.       $m_S17 = 0
 1643.       $isnd_S15 = 1
 1644.       if ( nsend > 0 ) then
 1650.          $SC_ilsendbuf_I17 = ilsendbuf%dim_1%EX
 1650.          $SC_ilsendbuf_I18 = ilsendbuf%dim_1%LB
 1645.          $SC_isbsend_I10 = isbsend%dim_1%EX
 1645.          $SC_isbsend_I11 = isbsend%dim_1%LB
 1648.          $SC_mysendsgr_I12 = mysendsgr%dim_1%EX
 1648.          $SC_mysendsgr_I13 = mysendsgr%dim_1%LB
 1648.          $SC_mysendsgr_I15 = mysendsgr%dim_2%SM
 1648.          $SC_mysendsgr_I14 = mysendsgr%dim_2%EX
 1648.          $SC_mysendsgr_I16 = mysendsgr%dim_2%LB
 1647.          $SC_mysendspr_I0 = mysendspr%dim_1%EX
 1647.          $SC_mysendspr_I1 = mysendspr%dim_1%LB
 1647.          $SC_mysendspr_I3 = mysendspr%dim_2%SM
 1647.          $SC_mysendspr_I2 = mysendspr%dim_2%EX
 1647.          $SC_mysendspr_I4 = mysendspr%dim_2%LB
 1644.          $I_L1644_62 = 0
 1644.          do
 1645.             (isbsend%base_addr)(1 + $I_L1644_62, 0) = $isnd_S15
 1646.             nlen = 0
 1647.             $t_S18 = (mysendspr%base_addr)(2, 1 + $I_L1644_62, 0)
 1647.             if ( $t_S18 + -$m_S17 > 0 ) then
 1647.                $I_L1647_58 = 0
 1647. !dir$ ivdep
 1647.                do
 1648.                   nlen = 1 + nlen + (mysendsgr%base_addr)(2, 1 + $m_S17 + $I_L1647_58, 0) + -(mysendsgr%base_addr)(1, 1 + $m_S17 + $I_L1647_58, 0)
 1649.                   $I_L1647_58 = 1 + $I_L1647_58
 1647.                   if ( $I_L1647_58 >= ( $t_S18 + -$m_S17 ) ) exit
 1647.                enddo
 1647.             endif
 1650.             (ilsendbuf%base_addr)(1 + $I_L1644_62, 0) = nlen + 4 * nlen * kmax + nlen * kmax * nscalars
 1652.             $m_S17 = $t_S18
 1651.             $isnd_S15 = nlen + $isnd_S15 + 4 * nlen * kmax + nlen * kmax * nscalars
 1653.             $I_L1644_62 = 1 + $I_L1644_62
 1649.             if ( $I_L1644_62 >= nsend ) exit
 1649.          enddo
 1649.       endif
 1561.       _free( t$536 )
 1655.       return
 1655.       end
 1655.       
 1657.       
 1657.       subroutine exchange_fields( u, v, t, q, lps, fgpass_scalar, nscalars, iold, nrec, nsend )
 1657.       t$187 = ibmax
 1657.       t$188 = kmax
 1657.       t$189 = jbmax_ext
 1664.       t$547 = _zla( 0, ibmax )
 1657.       t$548 = _zla( 0, ibmax )
 1664.       t$549 = _zla( 0, kmax )
 1657.       t$550 = _zla( 0, ibmax ) * _zla( 0, kmax )
 1664.       t$551 = _zla( 0, jbmax_ext )
 1657.       t$552 = _zla( 0, ibmax ) * _zla( 0, kmax ) * _zla( 0, jbmax_ext )
 1657.       t$553 = _zla( 0, ibmax ) * _zla( 0, jbmax_ext )
 1657.       t$202 = nscalars
 1657.       t$554 = _zla( 0, ibmax ) * _zla( 0, kmax ) * _zla( 0, jbmax_ext )
 1669.       t$555 = _zla( 0, nscalars )
 1657.       t$556 = _zla( 0, nscalars ) * _zla( 0, ibmax ) * _zla( 0, kmax ) * _zla( 0, jbmax_ext )
 1657.       t$557 = 3 * _zla( 0, nscalars ) * _zla( 0, ibmax ) * _zla( 0, kmax ) * _zla( 0, jbmax_ext )
 1657.       t$209 = nrec
 1675.       t$558 = _zla( 0, nrec )
 1675.       t$561 = 4 * _zla( 0, nrec )
 1657.       t$207 = nsend
 1674.       t$562 = _zla( 0, nsend )
 1674.       t$564 = 4 * _zla( 0, nrec ) + 4 * _zla( 0, nsend )
 1657.       t$565 = 5 * _zla( 0, nsend )
 1673.       t$567 = 4 * _zla( 0, nrec ) + 24 * _zla( 0, nsend )
 1657.       t$559 = int( _alloc( 4 * _zla( 0, nrec ) + 24 * _zla( 0, nsend ) ), 8 )
 1675.       t$560 = t$559
 1674.       t$563 = t$559 + 4 * _zla( 0, nrec )
 1673.       t$566 = t$559 + 4 * _zla( 0, nrec ) + 4 * _zla( 0, nsend )
 1681.       if ( dimrecbuf < (ilrecbuf%base_addr)(nrec, 0) + (isbrec%base_addr)(nrec, 0) ) then
 1682.          dimrecbuf = (ilrecbuf%base_addr)(nrec, 0) + (isbrec%base_addr)(nrec, 0)
 1683.          $_allo_P0(0) = 0x1000000000001L
 1683.          $_allo_P0(1) = loc( bufrec )
 1683.          call __deallocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 1683.          bufrec%header%assoc = 0
 1684.          bufrec%header%a_contig = 1
 1684.          bufrec%dim_1%LB = 1
 1684.          bufrec%dim_1%EX = ( max( 0, dimrecbuf ) )
 1684.          bufrec%dim_1%SM = 1
 1684.          $_allo_P1(0) = 0x1000000000001L
 1684.          $_allo_P1(1) = loc( bufrec )
 1684.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 1684.       endif
 1686.       if ( dimsendbuf < (ilsendbuf%base_addr)(nsend, 0) + (isbsend%base_addr)(nsend, 0) ) then
 1687.          dimsendbuf = (ilsendbuf%base_addr)(nsend, 0) + (isbsend%base_addr)(nsend, 0)
 1688.          $_allo_P2(0) = 0x1000000000001L
 1688.          $_allo_P2(1) = loc( bufsend )
 1688.          call __deallocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 1688.          bufsend%header%assoc = 0
 1689.          bufsend%header%a_contig = 1
 1689.          bufsend%dim_1%LB = 1
 1689.          bufsend%dim_1%EX = ( max( 0, dimsendbuf ) )
 1689.          bufsend%dim_1%SM = 1
 1689.          $_allo_P3(0) = 0x1000000000001L
 1689.          $_allo_P3(1) = loc( bufsend )
 1689.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 1689.       endif
 1691.       comm = 1140850688
 1692.       if ( nrec > 0 ) then
 1692.          $I_L1692_62 = 0
 1692.          do
 1693.             call mpi_irecv( (bufrec%base_addr)((isbrec%base_addr)(1 + $I_L1692_62, 0), 0), (ilrecbuf%base_addr)(1 + $I_L1692_62, 0), 1275070495, (myrecspr%base_addr)(1, 1 + $I_L1692_62, 0), 75, comm, requestr(1 + $I_L1692_62), ierr )
 1695.             $I_L1692_62 = 1 + $I_L1692_62
 1695.             if ( $I_L1692_62 >= nrec ) exit
 1695.          enddo
 1695.       endif
 1696.       $m_S2 = 1
 1697.       if ( nsend > 0 ) then
 1697.          $I_L1697_98 = 0
 1697.          do
 1698.             $ibs_S11 = -1 + (isbsend%base_addr)(1 + $I_L1697_98, 0)
 1699.             $t_S3 = (mysendspr%base_addr)(2, 1 + $I_L1697_98, 0)
 1699.             if ( $t_S3 + -$m_S2 >= 0 ) then
 1703.                $SC_ibperij_I10 = ibperij%dim_1%EX
 1703.                $SC_ibperij_I11 = ibperij%dim_1%LB
 1703.                $SC_ibperij_I13 = ibperij%dim_2%SM
 1703.                $SC_ibperij_I12 = ibperij%dim_2%EX
 1703.                $SC_ibperij_I14 = ibperij%dim_2%LB
 1702.                $SC_jbperij_I5 = jbperij%dim_1%EX
 1702.                $SC_jbperij_I6 = jbperij%dim_1%LB
 1702.                $SC_jbperij_I8 = jbperij%dim_2%SM
 1702.                $SC_jbperij_I7 = jbperij%dim_2%EX
 1702.                $SC_jbperij_I9 = jbperij%dim_2%LB
 1700.                $SC_mysendsgr_I0 = mysendsgr%dim_1%EX
 1700.                $SC_mysendsgr_I1 = mysendsgr%dim_1%LB
 1700.                $SC_mysendsgr_I3 = mysendsgr%dim_2%SM
 1700.                $SC_mysendsgr_I2 = mysendsgr%dim_2%EX
 1700.                $SC_mysendsgr_I4 = mysendsgr%dim_2%LB
 1704.                $SC_bufsend_I15 = bufsend%dim_1%EX
 1704.                $SC_bufsend_I16 = bufsend%dim_1%LB
 1699.                $I_L1699_94 = 0
 1699. !dir$ loop_info (automatic) cache_nt( mysendsgr )
 1699.                do
 1700.                   $j_S8 = (mysendsgr%base_addr)(3, $m_S2 + $I_L1699_94, 0)
 1701.                   $t_S5 = (mysendsgr%base_addr)(1, $m_S2 + $I_L1699_94, 0)
 1701.                   $t_S6 = (mysendsgr%base_addr)(2, $m_S2 + $I_L1699_94, 0)
 1701.                   if ( $t_S6 + -$t_S5 >= 0 ) then
 1701.                      $I_L1701_90 = 0
 1701. !dir$ loop_info (automatic) cache_nt( jbperij, ibperij )
 1701.                      do
 1702.                         $jbr_S10 = (jbperij%base_addr)($t_S5 + $I_L1701_90, $j_S8, 0)
 1703.                         $ibr_S9 = (ibperij%base_addr)($t_S5 + $I_L1701_90, $j_S8, 0)
 1704.                         $F_A33 = kmax
 1704.                         if ( kmax > 0 ) then
 1704.                            $I_L1704_66 = 0
 1704. !dir$ ivdep
 1704.                            do
 1704.                               (bufsend%base_addr)(1 + $ibs_S11 + $I_L1704_66, 0) = u($ibr_S9, 1 + $I_L1704_66, $jbr_S10)
 1704.                               $I_L1704_66 = 1 + $I_L1704_66
 1704.                               if ( $I_L1704_66 >= $F_A33 ) exit
 1704.                            enddo
 1704.                         endif
 1706.                         $F_A34 = kmax
 1706.                         if ( kmax > 0 ) then
 1706.                            $I_L1706_68 = 0
 1706. !dir$ ivdep
 1706.                            do
 1706.                               (bufsend%base_addr)(1 + kmax + $ibs_S11 + $I_L1706_68, 0) = v($ibr_S9, 1 + $I_L1706_68, $jbr_S10)
 1706.                               $I_L1706_68 = 1 + $I_L1706_68
 1706.                               if ( $I_L1706_68 >= $F_A34 ) exit
 1706.                            enddo
 1706.                         endif
 1708.                         $F_A35 = kmax
 1708.                         if ( kmax > 0 ) then
 1708.                            $I_L1708_70 = 0
 1708. !dir$ ivdep
 1708.                            do
 1708.                               (bufsend%base_addr)(1 + $ibs_S11 + $I_L1708_70 + 2 * kmax, 0) = t($ibr_S9, 1 + $I_L1708_70, $jbr_S10)
 1708.                               $I_L1708_70 = 1 + $I_L1708_70
 1708.                               if ( $I_L1708_70 >= $F_A35 ) exit
 1708.                            enddo
 1708.                         endif
 1710.                         $F_A36 = kmax
 1710.                         if ( kmax > 0 ) then
 1710.                            $I_L1710_72 = 0
 1710. !dir$ ivdep
 1710.                            do
 1710.                               (bufsend%base_addr)(1 + $ibs_S11 + $I_L1710_72 + 3 * kmax, 0) = q($ibr_S9, 1 + $I_L1710_72, $jbr_S10)
 1710.                               $I_L1710_72 = 1 + $I_L1710_72
 1710.                               if ( $I_L1710_72 >= $F_A36 ) exit
 1710.                            enddo
 1710.                         endif
 1712.                         (bufsend%base_addr)(1 + $ibs_S11 + 4 * kmax, 0) = lps($ibr_S9, $jbr_S10)
 1711.                         $ibs_S11 = 1 + $ibs_S11 + 4 * kmax
 1713.                         if ( nscalars > 0 ) then
 1713.                            $I_L1713_86 = 0
 1713.                            do
 1714.                               $F_A37 = t$188
 1714.                               if ( t$188 > 0 ) then
 1714.                                  $I_L1714_74 = 0
 1714. !dir$ ivdep
 1714.                                  do
 1714.                                     (bufsend%base_addr)(1 + $ibs_S11 + $I_L1714_74 + kmax * $I_L1713_86, 0) = fgpass_scalar($ibr_S9, 1 + $I_L1714_74, $jbr_S10, 1 + $I_L1713_86, iold)
 1714.                                     $I_L1714_74 = 1 + $I_L1714_74
 1714.                                     if ( $I_L1714_74 >= $F_A37 ) exit
 1714.                                  enddo
 1714.                               endif
 1716.                               $I_L1713_86 = 1 + $I_L1713_86
 1713.                               if ( $I_L1713_86 >= nscalars ) exit
 1713.                            enddo
 1715.                            $ibs_S11 = ( $ibs_S11 + kmax * nscalars )
 1715.                         endif
 1717.                         $I_L1701_90 = 1 + $I_L1701_90
 1716.                         if ( $I_L1701_90 >= 1 + $t_S6 + -$t_S5 ) exit
 1716.                      enddo
 1716.                   endif
 1718.                   $I_L1699_94 = 1 + $I_L1699_94
 1717.                   if ( $I_L1699_94 >= 1 + $t_S3 + -$m_S2 ) exit
 1717.                enddo
 1717.             endif
 1719.             call mpi_isend( (bufsend%base_addr)((isbsend%base_addr)(1 + $I_L1697_98, 0), 0), (ilsendbuf%base_addr)(1 + $I_L1697_98, 0), 1275070495, (mysendspr%base_addr)(1, 1 + $I_L1697_98, 0), 75, comm, requests(1 + $I_L1697_98), ierr )
 1721.             $m_S2 = 1 + (mysendspr%base_addr)(2, 1 + $I_L1697_98, 0)
 1722.             $I_L1697_98 = 1 + $I_L1697_98
 1721.             if ( $I_L1697_98 >= nsend ) exit
 1721.          enddo
 1721.       endif
 1723.       if ( nrec > 0 ) then
 1723.          $I_L1723_100 = 0
 1723.          do
 1724.             call mpi_waitany( nrec, requestr(1), index, statu(1), ierr )
 1725.             $kr_S16 = statu(3)
 1727.             $SC_myrecspr_I17 = myrecspr%dim_1%EX
 1727.             $SC_myrecspr_I18 = myrecspr%dim_1%LB
 1727.             $SC_myrecspr_I20 = myrecspr%dim_2%SM
 1727.             $SC_myrecspr_I19 = myrecspr%dim_2%EX
 1727.             $SC_myrecspr_I21 = myrecspr%dim_2%LB
 1726.             $I_L1726_64 = 0
 1726. !dir$ ivdep
 1726.             do
 1727.                if ( (myrecspr%base_addr)(1, 1 + $I_L1726_64, 0) + -$kr_S16 == 0 ) then
 1728.                   ks = ( 1 + $I_L1726_64 )
 1728.                   goto 10
 1728.                endif
 1731.                $I_L1726_64 = 1 + $I_L1726_64
 1730.                if ( $I_L1726_64 >= nrec ) exit
 1730.             enddo
 1730.    10       continue
 1732.             $ibs_S25 = -1 + (isbrec%base_addr)(ks, 0)
 1733.             if ( ks == 1 ) then
 1734.                $m_S18 = 1
 1734.             else
 1736.                $m_S18 = 1 + (myrecspr%base_addr)(2, -1 + ks, 0)
 1736.             endif
 1738.             $t_S19 = (myrecspr%base_addr)(2, ks, 0)
 1738.             if ( $t_S19 + -$m_S18 >= 0 ) then
 1739.                $SC_myrecsgr_I22 = myrecsgr%dim_1%EX
 1739.                $SC_myrecsgr_I23 = myrecsgr%dim_1%LB
 1739.                $SC_myrecsgr_I25 = myrecsgr%dim_2%SM
 1739.                $SC_myrecsgr_I24 = myrecsgr%dim_2%EX
 1739.                $SC_myrecsgr_I26 = myrecsgr%dim_2%LB
 1742.                $SC_ibperij_I10 = ibperij%dim_1%EX
 1742.                $SC_ibperij_I11 = ibperij%dim_1%LB
 1742.                $SC_ibperij_I13 = ibperij%dim_2%SM
 1742.                $SC_ibperij_I12 = ibperij%dim_2%EX
 1742.                $SC_ibperij_I14 = ibperij%dim_2%LB
 1741.                $SC_jbperij_I5 = jbperij%dim_1%EX
 1741.                $SC_jbperij_I6 = jbperij%dim_1%LB
 1741.                $SC_jbperij_I8 = jbperij%dim_2%SM
 1741.                $SC_jbperij_I7 = jbperij%dim_2%EX
 1741.                $SC_jbperij_I9 = jbperij%dim_2%LB
 1743.                $SC_bufrec_I27 = bufrec%dim_1%EX
 1743.                $SC_bufrec_I28 = bufrec%dim_1%LB
 1738.                $I_L1738_96 = 0
 1738. !dir$ loop_info (automatic) cache_nt( myrecsgr )
 1738.                do
 1739.                   $j_S24 = (myrecsgr%base_addr)(3, $m_S18 + $I_L1738_96, 0)
 1740.                   $t_S21 = (myrecsgr%base_addr)(1, $m_S18 + $I_L1738_96, 0)
 1740.                   $t_S22 = (myrecsgr%base_addr)(2, $m_S18 + $I_L1738_96, 0)
 1740.                   if ( $t_S22 + -$t_S21 >= 0 ) then
 1740.                      $I_L1740_92 = 0
 1740. !dir$ loop_info (automatic) cache_nt( jbperij, ibperij )
 1740.                      do
 1741.                         $jbr_S27 = (jbperij%base_addr)($t_S21 + $I_L1740_92, $j_S24, 0)
 1742.                         $ibr_S26 = (ibperij%base_addr)($t_S21 + $I_L1740_92, $j_S24, 0)
 1743.                         $F_A38 = kmax
 1743.                         if ( kmax > 0 ) then
 1743.                            $I_L1743_76 = 0
 1743. !dir$ ivdep
 1743.                            do
 1743.                               u($ibr_S26, 1 + $I_L1743_76, $jbr_S27) = (bufrec%base_addr)(1 + $ibs_S25 + $I_L1743_76, 0)
 1743.                               $I_L1743_76 = 1 + $I_L1743_76
 1743.                               if ( $I_L1743_76 >= $F_A38 ) exit
 1743.                            enddo
 1743.                         endif
 1745.                         $F_A39 = kmax
 1745.                         if ( kmax > 0 ) then
 1745.                            $I_L1745_78 = 0
 1745. !dir$ ivdep
 1745.                            do
 1745.                               v($ibr_S26, 1 + $I_L1745_78, $jbr_S27) = (bufrec%base_addr)(1 + kmax + $ibs_S25 + $I_L1745_78, 0)
 1745.                               $I_L1745_78 = 1 + $I_L1745_78
 1745.                               if ( $I_L1745_78 >= $F_A39 ) exit
 1745.                            enddo
 1745.                         endif
 1747.                         $F_A40 = kmax
 1747.                         if ( kmax > 0 ) then
 1747.                            $I_L1747_80 = 0
 1747. !dir$ ivdep
 1747.                            do
 1747.                               t($ibr_S26, 1 + $I_L1747_80, $jbr_S27) = (bufrec%base_addr)(1 + $ibs_S25 + $I_L1747_80 + 2 * kmax, 0)
 1747.                               $I_L1747_80 = 1 + $I_L1747_80
 1747.                               if ( $I_L1747_80 >= $F_A40 ) exit
 1747.                            enddo
 1747.                         endif
 1749.                         $F_A41 = kmax
 1749.                         if ( kmax > 0 ) then
 1749.                            $I_L1749_82 = 0
 1749. !dir$ ivdep
 1749.                            do
 1749.                               q($ibr_S26, 1 + $I_L1749_82, $jbr_S27) = (bufrec%base_addr)(1 + $ibs_S25 + $I_L1749_82 + 3 * kmax, 0)
 1749.                               $I_L1749_82 = 1 + $I_L1749_82
 1749.                               if ( $I_L1749_82 >= $F_A41 ) exit
 1749.                            enddo
 1749.                         endif
 1751.                         lps($ibr_S26, $jbr_S27) = (bufrec%base_addr)(1 + $ibs_S25 + 4 * kmax, 0)
 1750.                         $ibs_S25 = 1 + $ibs_S25 + 4 * kmax
 1752.                         if ( nscalars > 0 ) then
 1752.                            $I_L1752_88 = 0
 1752.                            do
 1753.                               $F_A42 = t$188
 1753.                               if ( t$188 > 0 ) then
 1753.                                  $I_L1753_84 = 0
 1753. !dir$ ivdep
 1753.                                  do
 1753.                                     fgpass_scalar($ibr_S26, 1 + $I_L1753_84, $jbr_S27, 1 + $I_L1752_88, iold) = (bufrec%base_addr)(1 + $ibs_S25 + $I_L1753_84 + kmax * $I_L1752_88, 0)
 1753.                                     $I_L1753_84 = 1 + $I_L1753_84
 1753.                                     if ( $I_L1753_84 >= $F_A42 ) exit
 1753.                                  enddo
 1753.                               endif
 1755.                               $I_L1752_88 = 1 + $I_L1752_88
 1752.                               if ( $I_L1752_88 >= nscalars ) exit
 1752.                            enddo
 1754.                            $ibs_S25 = ( $ibs_S25 + kmax * nscalars )
 1754.                         endif
 1756.                         $I_L1740_92 = 1 + $I_L1740_92
 1755.                         if ( $I_L1740_92 >= 1 + $t_S22 + -$t_S21 ) exit
 1755.                      enddo
 1755.                   endif
 1757.                   $I_L1738_96 = 1 + $I_L1738_96
 1756.                   if ( $I_L1738_96 >= 1 + $t_S19 + -$m_S18 ) exit
 1756.                enddo
 1756.             endif
 1758.             $I_L1723_100 = 1 + $I_L1723_100
 1757.             if ( $I_L1723_100 >= nrec ) exit
 1757.          enddo
 1757.       endif
 1759.       call mpi_waitall( nsend, requests(1), status(1, 1), ierr )
 1657.       _free( t$559 )
 1761.       return
 1761.       end
 1761.       
 1764.       
 1764.       subroutine exchange_winds( u, v, w, um, vm, nrec, nsend )
 1764.       t$210 = ibmax
 1764.       t$211 = kmax
 1764.       t$212 = jbmax_ext
 1768.       t$568 = _zla( 0, ibmax )
 1764.       t$569 = _zla( 0, ibmax )
 1768.       t$570 = _zla( 0, kmax )
 1764.       t$571 = _zla( 0, ibmax ) * _zla( 0, kmax )
 1768.       t$572 = _zla( 0, jbmax_ext )
 1764.       t$573 = _zla( 0, ibmax ) * _zla( 0, kmax ) * _zla( 0, jbmax_ext )
 1764.       t$574 = _zla( 0, ibmax ) * _zla( 0, jbmax_ext )
 1764.       t$227 = nrec
 1777.       t$575 = _zla( 0, nrec )
 1777.       t$578 = 4 * _zla( 0, nrec )
 1764.       t$225 = nsend
 1776.       t$579 = _zla( 0, nsend )
 1776.       t$581 = 4 * _zla( 0, nrec ) + 4 * _zla( 0, nsend )
 1764.       t$582 = 5 * _zla( 0, nsend )
 1775.       t$584 = 4 * _zla( 0, nrec ) + 24 * _zla( 0, nsend )
 1764.       t$576 = int( _alloc( 4 * _zla( 0, nrec ) + 24 * _zla( 0, nsend ) ), 8 )
 1777.       t$577 = t$576
 1776.       t$580 = t$576 + 4 * _zla( 0, nrec )
 1775.       t$583 = t$576 + 4 * _zla( 0, nrec ) + 4 * _zla( 0, nsend )
 1783.       comm = 1140850688
 1784.       if ( dimrecbuf < (ilrecbuf%base_addr)(nrec, 0) + (isbrec%base_addr)(nrec, 0) ) then
 1785.          dimrecbuf = (ilrecbuf%base_addr)(nrec, 0) + (isbrec%base_addr)(nrec, 0)
 1786.          $_allo_P0(0) = 0x1000000000001L
 1786.          $_allo_P0(1) = loc( bufrec )
 1786.          call __deallocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
 1786.          bufrec%header%assoc = 0
 1787.          bufrec%header%a_contig = 1
 1787.          bufrec%dim_1%LB = 1
 1787.          bufrec%dim_1%EX = ( max( 0, dimrecbuf ) )
 1787.          bufrec%dim_1%SM = 1
 1787.          $_allo_P1(0) = 0x1000000000001L
 1787.          $_allo_P1(1) = loc( bufrec )
 1787.          call __allocate( $_allo_P1, 0, 0, _fcd( 0, 0 ) )
 1787.       endif
 1789.       if ( dimsendbuf < (ilsendbuf%base_addr)(nsend, 0) + (isbsend%base_addr)(nsend, 0) ) then
 1790.          dimsendbuf = (ilsendbuf%base_addr)(nsend, 0) + (isbsend%base_addr)(nsend, 0)
 1791.          $_allo_P2(0) = 0x1000000000001L
 1791.          $_allo_P2(1) = loc( bufsend )
 1791.          call __deallocate( $_allo_P2, 0, 0, _fcd( 0, 0 ) )
 1791.          bufsend%header%assoc = 0
 1792.          bufsend%header%a_contig = 1
 1792.          bufsend%dim_1%LB = 1
 1792.          bufsend%dim_1%EX = ( max( 0, dimsendbuf ) )
 1792.          bufsend%dim_1%SM = 1
 1792.          $_allo_P3(0) = 0x1000000000001L
 1792.          $_allo_P3(1) = loc( bufsend )
 1792.          call __allocate( $_allo_P3, 0, 0, _fcd( 0, 0 ) )
 1792.       endif
 1795.       if ( nrec > 0 ) then
 1795.          $I_L1795_34 = 0
 1795.          do
 1796.             call mpi_irecv( (bufrec%base_addr)((isbrec%base_addr)(1 + $I_L1795_34, 0), 0), (ilrecbuf%base_addr)(1 + $I_L1795_34, 0), 1275070495, (myrecspr%base_addr)(1, 1 + $I_L1795_34, 0), 76, comm, requestr(1 + $I_L1795_34), ierr )
 1798.             $I_L1795_34 = 1 + $I_L1795_34
 1798.             if ( $I_L1795_34 >= nrec ) exit
 1798.          enddo
 1798.       endif
 1799.       $m_S2 = 1
 1800.       if ( nsend > 0 ) then
 1800.          $I_L1800_46 = 0
 1800.          do
 1801.             $ibs_S11 = -1 + (isbsend%base_addr)(1 + $I_L1800_46, 0)
 1802.             $t_S3 = (mysendspr%base_addr)(2, 1 + $I_L1800_46, 0)
 1802.             if ( $t_S3 + -$m_S2 >= 0 ) then
 1806.                $SC_ibperij_I10 = ibperij%dim_1%EX
 1806.                $SC_ibperij_I11 = ibperij%dim_1%LB
 1806.                $SC_ibperij_I13 = ibperij%dim_2%SM
 1806.                $SC_ibperij_I12 = ibperij%dim_2%EX
 1806.                $SC_ibperij_I14 = ibperij%dim_2%LB
 1805.                $SC_jbperij_I5 = jbperij%dim_1%EX
 1805.                $SC_jbperij_I6 = jbperij%dim_1%LB
 1805.                $SC_jbperij_I8 = jbperij%dim_2%SM
 1805.                $SC_jbperij_I7 = jbperij%dim_2%EX
 1805.                $SC_jbperij_I9 = jbperij%dim_2%LB
 1803.                $SC_mysendsgr_I0 = mysendsgr%dim_1%EX
 1803.                $SC_mysendsgr_I1 = mysendsgr%dim_1%LB
 1803.                $SC_mysendsgr_I3 = mysendsgr%dim_2%SM
 1803.                $SC_mysendsgr_I2 = mysendsgr%dim_2%EX
 1803.                $SC_mysendsgr_I4 = mysendsgr%dim_2%LB
 1807.                $SC_bufsend_I15 = bufsend%dim_1%EX
 1807.                $SC_bufsend_I16 = bufsend%dim_1%LB
 1802.                $I_L1802_42 = 0
 1802. !dir$ loop_info (automatic) cache_nt( mysendsgr )
 1802.                do
 1803.                   $j_S8 = (mysendsgr%base_addr)(3, $m_S2 + $I_L1802_42, 0)
 1804.                   $t_S5 = (mysendsgr%base_addr)(1, $m_S2 + $I_L1802_42, 0)
 1804.                   $t_S6 = (mysendsgr%base_addr)(2, $m_S2 + $I_L1802_42, 0)
 1804.                   if ( $t_S6 + -$t_S5 >= 0 ) then
 1804.                      $I_L1804_36 = 0
 1804. !dir$ loop_info (automatic) cache_nt( jbperij, ibperij )
 1804.                      do
 1805.                         $jbr_S10 = (jbperij%base_addr)($t_S5 + $I_L1804_36, $j_S8, 0)
 1806.                         $ibr_S9 = (ibperij%base_addr)($t_S5 + $I_L1804_36, $j_S8, 0)
 1807.                         $F_A33 = t$211
 1807.                         if ( t$211 > 0 ) then
 1807.                            $I_A1 = 0
 1807. !dir$ ivdep
 1807.                            do
 1807.                               (bufsend%base_addr)(1 + $ibs_S11 + $I_A1 + 2 * $I_L1804_36 + 3 * kmax * $I_L1804_36, 0) = u($ibr_S9, 1 + $I_A1, $jbr_S10)
 1807.                               $I_A1 = 1 + $I_A1
 1807.                               if ( $I_A1 >= $F_A33 ) exit
 1807.                            enddo
 1807.                         endif
 1809.                         $F_A34 = t$211
 1809.                         if ( t$211 > 0 ) then
 1809.                            $I_A1 = 0
 1809. !dir$ ivdep
 1809.                            do
 1809.                               (bufsend%base_addr)(1 + kmax + $ibs_S11 + $I_A1 + 2 * $I_L1804_36 + 3 * kmax * $I_L1804_36, 0) = v($ibr_S9, 1 + $I_A1, $jbr_S10)
 1809.                               $I_A1 = 1 + $I_A1
 1809.                               if ( $I_A1 >= $F_A34 ) exit
 1809.                            enddo
 1809.                         endif
 1811.                         $F_A35 = t$211
 1811.                         if ( t$211 > 0 ) then
 1811.                            $I_A1 = 0
 1811. !dir$ ivdep
 1811.                            do
 1811.                               (bufsend%base_addr)(1 + $ibs_S11 + $I_A1 + 2 * kmax + 2 * $I_L1804_36 + 3 * kmax * $I_L1804_36, 0) = w($ibr_S9, 1 + $I_A1, $jbr_S10)
 1811.                               $I_A1 = 1 + $I_A1
 1811.                               if ( $I_A1 >= $F_A35 ) exit
 1811.                            enddo
 1811.                         endif
 1813.                         (bufsend%base_addr)(1 + $ibs_S11 + 3 * kmax + 2 * $I_L1804_36 + 3 * kmax * $I_L1804_36, 0) = um($ibr_S9, $jbr_S10)
 1815.                         (bufsend%base_addr)(2 + $ibs_S11 + 3 * kmax + 2 * $I_L1804_36 + 3 * kmax * $I_L1804_36, 0) = vm($ibr_S9, $jbr_S10)
 1816.                         $I_L1804_36 = 1 + $I_L1804_36
 1804.                         if ( $I_L1804_36 >= 1 + $t_S6 + -$t_S5 ) exit
 1804.                      enddo
 1814.                      $ibs_S11 = ( 2 + $ibs_S11 + 3 * kmax + -3 * $t_S5 * kmax + 3 * $t_S6 * kmax + 2 * $t_S6 + -2 * $t_S5 )
 1814.                   endif
 1817.                   $I_L1802_42 = 1 + $I_L1802_42
 1816.                   if ( $I_L1802_42 >= 1 + $t_S3 + -$m_S2 ) exit
 1816.                enddo
 1816.             endif
 1819.             t$1133 = 1 + $ibs_S11 + -(isbsend%base_addr)(1 + $I_L1800_46, 0)
 1819.             call mpi_isend( (bufsend%base_addr)((isbsend%base_addr)(1 + $I_L1800_46, 0), 0), t$1133, 1275070495, (mysendspr%base_addr)(1, 1 + $I_L1800_46, 0), 76, comm, requests(1 + $I_L1800_46), ierr )
 1821.             $m_S2 = 1 + (mysendspr%base_addr)(2, 1 + $I_L1800_46, 0)
 1822.             $I_L1800_46 = 1 + $I_L1800_46
 1821.             if ( $I_L1800_46 >= nsend ) exit
 1821.          enddo
 1821.       endif
 1823.       if ( nrec > 0 ) then
 1823.          $I_L1823_48 = 0
 1823.          do
 1824.             call mpi_waitany( nrec, requestr(1), index, statu(1), ierr )
 1825.             $kr_S15 = statu(3)
 1828.             $SC_myrecspr_I17 = myrecspr%dim_1%EX
 1828.             $SC_myrecspr_I18 = myrecspr%dim_1%LB
 1828.             $SC_myrecspr_I20 = myrecspr%dim_2%SM
 1828.             $SC_myrecspr_I19 = myrecspr%dim_2%EX
 1828.             $SC_myrecspr_I21 = myrecspr%dim_2%LB
 1827.             $I_L1827_38 = 0
 1827. !dir$ ivdep
 1827.             do
 1828.                if ( (myrecspr%base_addr)(1, 1 + $I_L1827_38, 0) + -$kr_S15 == 0 ) then
 1829.                   ks = ( 1 + $I_L1827_38 )
 1829.                   goto 10
 1829.                endif
 1832.                $I_L1827_38 = 1 + $I_L1827_38
 1831.                if ( $I_L1827_38 >= nrec ) exit
 1831.             enddo
 1831.    10       continue
 1833.             $ibs_S24 = -1 + (isbrec%base_addr)(ks, 0)
 1834.             if ( ks == 1 ) then
 1835.                $m_S17 = 1
 1835.             else
 1837.                $m_S17 = 1 + (myrecspr%base_addr)(2, -1 + ks, 0)
 1837.             endif
 1839.             $t_S18 = (myrecspr%base_addr)(2, ks, 0)
 1839.             if ( $t_S18 + -$m_S17 >= 0 ) then
 1840.                $SC_myrecsgr_I22 = myrecsgr%dim_1%EX
 1840.                $SC_myrecsgr_I23 = myrecsgr%dim_1%LB
 1840.                $SC_myrecsgr_I25 = myrecsgr%dim_2%SM
 1840.                $SC_myrecsgr_I24 = myrecsgr%dim_2%EX
 1840.                $SC_myrecsgr_I26 = myrecsgr%dim_2%LB
 1843.                $SC_ibperij_I10 = ibperij%dim_1%EX
 1843.                $SC_ibperij_I11 = ibperij%dim_1%LB
 1843.                $SC_ibperij_I13 = ibperij%dim_2%SM
 1843.                $SC_ibperij_I12 = ibperij%dim_2%EX
 1843.                $SC_ibperij_I14 = ibperij%dim_2%LB
 1842.                $SC_jbperij_I5 = jbperij%dim_1%EX
 1842.                $SC_jbperij_I6 = jbperij%dim_1%LB
 1842.                $SC_jbperij_I8 = jbperij%dim_2%SM
 1842.                $SC_jbperij_I7 = jbperij%dim_2%EX
 1842.                $SC_jbperij_I9 = jbperij%dim_2%LB
 1844.                $SC_bufrec_I27 = bufrec%dim_1%EX
 1844.                $SC_bufrec_I28 = bufrec%dim_1%LB
 1839.                $I_L1839_44 = 0
 1839. !dir$ loop_info (automatic) cache_nt( myrecsgr )
 1839.                do
 1840.                   $j_S23 = (myrecsgr%base_addr)(3, $m_S17 + $I_L1839_44, 0)
 1841.                   $t_S20 = (myrecsgr%base_addr)(1, $m_S17 + $I_L1839_44, 0)
 1841.                   $t_S21 = (myrecsgr%base_addr)(2, $m_S17 + $I_L1839_44, 0)
 1841.                   if ( $t_S21 + -$t_S20 >= 0 ) then
 1841.                      $I_L1841_40 = 0
 1841. !dir$ loop_info (automatic) cache_nt( jbperij, ibperij )
 1841.                      do
 1842.                         $jbr_S26 = (jbperij%base_addr)($t_S20 + $I_L1841_40, $j_S23, 0)
 1843.                         $ibr_S25 = (ibperij%base_addr)($t_S20 + $I_L1841_40, $j_S23, 0)
 1844.                         $F_A36 = t$211
 1844.                         if ( t$211 > 0 ) then
 1844.                            $I_A1 = 0
 1844. !dir$ ivdep
 1844.                            do
 1844.                               u($ibr_S25, 1 + $I_A1, $jbr_S26) = (bufrec%base_addr)(1 + $ibs_S24 + $I_A1 + 2 * $I_L1841_40 + 3 * kmax * $I_L1841_40, 0)
 1844.                               $I_A1 = 1 + $I_A1
 1844.                               if ( $I_A1 >= $F_A36 ) exit
 1844.                            enddo
 1844.                         endif
 1846.                         $F_A37 = t$211
 1846.                         if ( t$211 > 0 ) then
 1846.                            $I_A1 = 0
 1846. !dir$ ivdep
 1846.                            do
 1846.                               v($ibr_S25, 1 + $I_A1, $jbr_S26) = (bufrec%base_addr)(1 + kmax + $ibs_S24 + $I_A1 + 2 * $I_L1841_40 + 3 * kmax * $I_L1841_40, 0)
 1846.                               $I_A1 = 1 + $I_A1
 1846.                               if ( $I_A1 >= $F_A37 ) exit
 1846.                            enddo
 1846.                         endif
 1848.                         $F_A38 = t$211
 1848.                         if ( t$211 > 0 ) then
 1848.                            $I_A1 = 0
 1848. !dir$ ivdep
 1848.                            do
 1848.                               w($ibr_S25, 1 + $I_A1, $jbr_S26) = (bufrec%base_addr)(1 + $ibs_S24 + $I_A1 + 2 * kmax + 2 * $I_L1841_40 + 3 * kmax * $I_L1841_40, 0)
 1848.                               $I_A1 = 1 + $I_A1
 1848.                               if ( $I_A1 >= $F_A38 ) exit
 1848.                            enddo
 1848.                         endif
 1850.                         um($ibr_S25, $jbr_S26) = (bufrec%base_addr)(1 + $ibs_S24 + 3 * kmax + 2 * $I_L1841_40 + 3 * kmax * $I_L1841_40, 0)
 1852.                         vm($ibr_S25, $jbr_S26) = (bufrec%base_addr)(2 + $ibs_S24 + 3 * kmax + 2 * $I_L1841_40 + 3 * kmax * $I_L1841_40, 0)
 1853.                         $I_L1841_40 = 1 + $I_L1841_40
 1841.                         if ( $I_L1841_40 >= 1 + $t_S21 + -$t_S20 ) exit
 1841.                      enddo
 1851.                      $ibs_S24 = ( 2 + $ibs_S24 + 3 * kmax + -3 * $t_S20 * kmax + 3 * $t_S21 * kmax + 2 * $t_S21 + -2 * $t_S20 )
 1851.                   endif
 1854.                   $I_L1839_44 = 1 + $I_L1839_44
 1853.                   if ( $I_L1839_44 >= 1 + $t_S18 + -$m_S17 ) exit
 1853.                enddo
 1853.             endif
 1855.             $I_L1823_48 = 1 + $I_L1823_48
 1854.             if ( $I_L1823_48 >= nrec ) exit
 1854.          enddo
 1854.       endif
 1856.       call mpi_waitall( nsend, requests(1), status(1, 1), ierr )
 1764.       _free( t$576 )
 1858.       return
 1858.       end
 1858.       
  124.       
  124.       module communications
  124.       end
  124.       
