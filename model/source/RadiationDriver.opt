       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  RadiationDriver.f90
       !        File                  :  RadiationDriver.opt
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
  149.       
  149.       subroutine initradiationdriver( monl, yrl, kmax, sl, nls )
  128.       t$1 = kmax
  133.       t$35 = _zla( 0, kmax )
  135.       if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'LCH' ) then
  128.          goto 10
  135.       else if (  _substr(ilwrad,1,_ltrim(  _substr(ilwrad,1,3) )) == 'HRS' ) then
  135.    10    continue
  136.          call initradcola
  136.       endif
  141.       if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'UKM' ) then
  137.          goto 20
  141.       else if (  _substr(ilwrad,1,_ltrim(  _substr(ilwrad,1,3) )) == 'UKM' ) then
  141.    20    continue
  142.          call initradukmo( kmax, sl(1), nls )
  142.       endif
  145.       monday(1) = 0
  145.       $monday_WR0_R0 = 0
  145.       $I_L145_12 = 0
  145. !dir$ unroll 4
  145.       do
  145.          $monday_WR0_R0 = $monday_WR0_R0 + monl(1 + $I_L145_12)
  145.          monday(2 + $I_L145_12) = $monday_WR0_R0
  145.          $I_L145_12 = 1 + $I_L145_12
  145.          if ( $I_L145_12 >= 11 ) exit
  145.       enddo
  147.       t$2 = kmax
  147.       t$36 = max( 0, kmax )
  147.       ozone%header%a_contig = 1
  147.       ozone%dim_1%LB = 1
  147.       ozone%dim_1%EX = 18
  147.       ozone%dim_1%SM = 1
  147.       ozone%dim_2%LB = 1
  147.       ozone%dim_2%EX = 37
  147.       ozone%dim_2%SM = 18
  147.       ozone%dim_3%LB = 1
  147.       ozone%dim_3%EX = 4
  147.       ozone%dim_3%SM = 666
  147.       $_allo_P0(0) = 0x1000000000001L
  147.       $_allo_P0(1) = loc( ozone )
  147.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
  147.       $I_L147_28 = 0
  147.       do
  147.          $I_L147_16 = 0
  147. !dir$ ivdep
  147.          do
  147.             (ozone%base_addr)(1 + $I_L147_16, 1 + $I_L147_28, 1, 0) = t$417(1 + $I_L147_16, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_16, 7 + $I_L147_28, 1, 0) = t$420(1 + $I_L147_16, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_16, 13 + $I_L147_28, 1, 0) = t$423(1 + $I_L147_16, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_16, 19 + $I_L147_28, 1, 0) = t$426(1 + $I_L147_16, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_16, 25 + $I_L147_28, 1, 0) = t$429(1 + $I_L147_16, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_16, 31 + $I_L147_28, 1, 0) = t$432(1 + $I_L147_16, 1 + $I_L147_28)
  147.             $I_L147_16 = 1 + $I_L147_16
  147.             if ( $I_L147_16 >= 18 ) exit
  147.          enddo
  147.          $I_L147_20 = 0
  147. !dir$ ivdep
  147.          do
  147.             (ozone%base_addr)(1 + $I_L147_20, 1 + $I_L147_28, 2, 0) = t$436(1 + $I_L147_20, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_20, 7 + $I_L147_28, 2, 0) = t$439(1 + $I_L147_20, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_20, 13 + $I_L147_28, 2, 0) = t$442(1 + $I_L147_20, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_20, 19 + $I_L147_28, 2, 0) = t$445(1 + $I_L147_20, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_20, 25 + $I_L147_28, 2, 0) = t$448(1 + $I_L147_20, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_20, 31 + $I_L147_28, 2, 0) = t$451(1 + $I_L147_20, 1 + $I_L147_28)
  147.             $I_L147_20 = 1 + $I_L147_20
  147.             if ( $I_L147_20 >= 18 ) exit
  147.          enddo
  147.          $I_L147_22 = 0
  147. !dir$ ivdep
  147.          do
  147.             (ozone%base_addr)(1 + $I_L147_22, 1 + $I_L147_28, 3, 0) = t$455(1 + $I_L147_22, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_22, 7 + $I_L147_28, 3, 0) = t$458(1 + $I_L147_22, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_22, 13 + $I_L147_28, 3, 0) = t$461(1 + $I_L147_22, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_22, 19 + $I_L147_28, 3, 0) = t$464(1 + $I_L147_22, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_22, 25 + $I_L147_28, 3, 0) = t$467(1 + $I_L147_22, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_22, 31 + $I_L147_28, 3, 0) = t$470(1 + $I_L147_22, 1 + $I_L147_28)
  147.             $I_L147_22 = 1 + $I_L147_22
  147.             if ( $I_L147_22 >= 18 ) exit
  147.          enddo
  147.          $I_L147_24 = 0
  147. !dir$ ivdep
  147.          do
  147.             (ozone%base_addr)(1 + $I_L147_24, 1 + $I_L147_28, 4, 0) = t$474(1 + $I_L147_24, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_24, 7 + $I_L147_28, 4, 0) = t$477(1 + $I_L147_24, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_24, 13 + $I_L147_28, 4, 0) = t$480(1 + $I_L147_24, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_24, 19 + $I_L147_28, 4, 0) = t$483(1 + $I_L147_24, 1 + $I_L147_28)
  147.             (ozone%base_addr)(1 + $I_L147_24, 25 + $I_L147_28, 4, 0) = t$486(1 + $I_L147_24, 1 + $I_L147_28)
  147.             $I_L147_24 = 1 + $I_L147_24
  147.             if ( $I_L147_24 >= 18 ) exit
  147.          enddo
  147.          $I_L147_28 = 1 + $I_L147_28
  147.          if ( $I_L147_28 >= 6 ) exit
  147.       enddo
  147.       $I_L147_18 = 0
  147. !dir$ ivdep
  147.       do
  147.          (ozone%base_addr)(1 + $I_L147_18, 37, 1, 0) = t$433(1 + $I_L147_18)
  147.          ozsig(1 + $I_L147_18) = t$491(1 + $I_L147_18)
  147.          (ozone%base_addr)(1 + $I_L147_18, 37, 2, 0) = t$452(1 + $I_L147_18)
  147.          (ozone%base_addr)(1 + $I_L147_18, 37, 3, 0) = t$471(1 + $I_L147_18)
  147.          (ozone%base_addr)(1 + $I_L147_18, 37, 4, 0) = t$490(1 + $I_L147_18)
  147.          $I_L147_18 = 1 + $I_L147_18
  147.          if ( $I_L147_18 >= 18 ) exit
  147.       enddo
  147.       $I_L147_30 = 0
  147.       do
  147.          $I_L147_26 = 0
  147. !dir$ ivdep
  147.          do
  147.             (ozone%base_addr)(1 + $I_L147_26, 31 + $I_L147_30, 4, 0) = t$489(1 + $I_L147_26, 1 + $I_L147_30)
  147.             $I_L147_26 = 1 + $I_L147_26
  147.             if ( $I_L147_26 >= 18 ) exit
  147.          enddo
  147.          $I_L147_30 = 1 + $I_L147_30
  147.          if ( $I_L147_30 >= 6 ) exit
  147.       enddo
  147.       mon_getoz = int( 8.3333333333333329e-2 * yrl )
  147.       year_getoz = yrl
  147.       if ( kmax /= 18 ) then
  147.          inter_getoz = .true.
  147.       else
  147.          inter_getoz = .false.
  147.          $I_L147_14 = 0
  147. !dir$ ivdep
  147.          do
  147.             if ( abs( ozsig(1 + $I_L147_14) + -sl(18 + -$I_L147_14) ) > 1.0e-4 ) then
  147.                inter_getoz = .true.
  147.             endif
  147.             $I_L147_14 = 1 + $I_L147_14
  147.             if ( $I_L147_14 >= 18 ) exit
  147.          enddo
  147.       endif
  147.       first_getoz = .false.
  149.       return
  149.       end
  149.       
  151.       
  151.       subroutine initradtim( monl )
  154.       monday(1) = 0
  155.       $monday_WR0_R0 = 0
  155.       $I_L155_6 = 0
  155. !dir$ unroll 4
  155.       do
  156.          $monday_WR0_R0 = $monday_WR0_R0 + monl(1 + $I_L155_6)
  156.          monday(2 + $I_L155_6) = $monday_WR0_R0
  157.          $I_L155_6 = 1 + $I_L155_6
  155.          if ( $I_L155_6 >= 11 ) exit
  155.       enddo
  158.       return
  158.       end
  158.       
  160.       
  160.       subroutine initgetoz( yrl, kmax, sl )
  160.       t$2 = kmax
  164.       t$36 = _zla( 0, kmax )
  170.       ozone%header%a_contig = 1
  170.       ozone%dim_1%LB = 1
  170.       ozone%dim_1%EX = 18
  170.       ozone%dim_1%SM = 1
  170.       ozone%dim_2%LB = 1
  170.       ozone%dim_2%EX = 37
  170.       ozone%dim_2%SM = 18
  170.       ozone%dim_3%LB = 1
  170.       ozone%dim_3%EX = 4
  170.       ozone%dim_3%SM = 666
  170.       $_allo_P0(0) = 0x1000000000001L
  170.       $_allo_P0(1) = loc( ozone )
  170.       call __allocate( $_allo_P0, 0, 0, _fcd( 0, 0 ) )
  189.       $I_L189_20 = 0
  189.       do
  189.          $I_L189_8 = 0
  189. !dir$ ivdep
  189.          do
  189.             (ozone%base_addr)(1 + $I_L189_8, 1 + $I_L189_20, 1, 0) = t$417(1 + $I_L189_8, 1 + $I_L189_20)
  212.             (ozone%base_addr)(1 + $I_L189_8, 7 + $I_L189_20, 1, 0) = t$420(1 + $I_L189_8, 1 + $I_L189_20)
  235.             (ozone%base_addr)(1 + $I_L189_8, 13 + $I_L189_20, 1, 0) = t$423(1 + $I_L189_8, 1 + $I_L189_20)
  258.             (ozone%base_addr)(1 + $I_L189_8, 19 + $I_L189_20, 1, 0) = t$426(1 + $I_L189_8, 1 + $I_L189_20)
  281.             (ozone%base_addr)(1 + $I_L189_8, 25 + $I_L189_20, 1, 0) = t$429(1 + $I_L189_8, 1 + $I_L189_20)
  304.             (ozone%base_addr)(1 + $I_L189_8, 31 + $I_L189_20, 1, 0) = t$432(1 + $I_L189_8, 1 + $I_L189_20)
  189.             $I_L189_8 = 1 + $I_L189_8
  189.             if ( $I_L189_8 >= 18 ) exit
  189.          enddo
  334.          $I_L334_12 = 0
  334. !dir$ ivdep
  334.          do
  334.             (ozone%base_addr)(1 + $I_L334_12, 1 + $I_L189_20, 2, 0) = t$436(1 + $I_L334_12, 1 + $I_L189_20)
  354.             (ozone%base_addr)(1 + $I_L334_12, 7 + $I_L189_20, 2, 0) = t$439(1 + $I_L334_12, 1 + $I_L189_20)
  374.             (ozone%base_addr)(1 + $I_L334_12, 13 + $I_L189_20, 2, 0) = t$442(1 + $I_L334_12, 1 + $I_L189_20)
  394.             (ozone%base_addr)(1 + $I_L334_12, 19 + $I_L189_20, 2, 0) = t$445(1 + $I_L334_12, 1 + $I_L189_20)
  414.             (ozone%base_addr)(1 + $I_L334_12, 25 + $I_L189_20, 2, 0) = t$448(1 + $I_L334_12, 1 + $I_L189_20)
  434.             (ozone%base_addr)(1 + $I_L334_12, 31 + $I_L189_20, 2, 0) = t$451(1 + $I_L334_12, 1 + $I_L189_20)
  334.             $I_L334_12 = 1 + $I_L334_12
  334.             if ( $I_L334_12 >= 18 ) exit
  334.          enddo
  461.          $I_L461_14 = 0
  461. !dir$ ivdep
  461.          do
  461.             (ozone%base_addr)(1 + $I_L461_14, 1 + $I_L189_20, 3, 0) = t$455(1 + $I_L461_14, 1 + $I_L189_20)
  481.             (ozone%base_addr)(1 + $I_L461_14, 7 + $I_L189_20, 3, 0) = t$458(1 + $I_L461_14, 1 + $I_L189_20)
  501.             (ozone%base_addr)(1 + $I_L461_14, 13 + $I_L189_20, 3, 0) = t$461(1 + $I_L461_14, 1 + $I_L189_20)
  521.             (ozone%base_addr)(1 + $I_L461_14, 19 + $I_L189_20, 3, 0) = t$464(1 + $I_L461_14, 1 + $I_L189_20)
  541.             (ozone%base_addr)(1 + $I_L461_14, 25 + $I_L189_20, 3, 0) = t$467(1 + $I_L461_14, 1 + $I_L189_20)
  561.             (ozone%base_addr)(1 + $I_L461_14, 31 + $I_L189_20, 3, 0) = t$470(1 + $I_L461_14, 1 + $I_L189_20)
  461.             $I_L461_14 = 1 + $I_L461_14
  461.             if ( $I_L461_14 >= 18 ) exit
  461.          enddo
  588.          $I_L588_16 = 0
  588. !dir$ ivdep
  588.          do
  588.             (ozone%base_addr)(1 + $I_L588_16, 1 + $I_L189_20, 4, 0) = t$474(1 + $I_L588_16, 1 + $I_L189_20)
  608.             (ozone%base_addr)(1 + $I_L588_16, 7 + $I_L189_20, 4, 0) = t$477(1 + $I_L588_16, 1 + $I_L189_20)
  628.             (ozone%base_addr)(1 + $I_L588_16, 13 + $I_L189_20, 4, 0) = t$480(1 + $I_L588_16, 1 + $I_L189_20)
  648.             (ozone%base_addr)(1 + $I_L588_16, 19 + $I_L189_20, 4, 0) = t$483(1 + $I_L588_16, 1 + $I_L189_20)
  668.             (ozone%base_addr)(1 + $I_L588_16, 25 + $I_L189_20, 4, 0) = t$486(1 + $I_L588_16, 1 + $I_L189_20)
  588.             $I_L588_16 = 1 + $I_L588_16
  588.             if ( $I_L588_16 >= 18 ) exit
  588.          enddo
  189.          $I_L189_20 = 1 + $I_L189_20
  189.          if ( $I_L189_20 >= 6 ) exit
  189.       enddo
  327.       $I_L327_10 = 0
  327. !dir$ ivdep
  327.       do
  327.          (ozone%base_addr)(1 + $I_L327_10, 37, 1, 0) = t$433(1 + $I_L327_10)
  713.          ozsig(1 + $I_L327_10) = t$491(1 + $I_L327_10)
  454.          (ozone%base_addr)(1 + $I_L327_10, 37, 2, 0) = t$452(1 + $I_L327_10)
  581.          (ozone%base_addr)(1 + $I_L327_10, 37, 3, 0) = t$471(1 + $I_L327_10)
  708.          (ozone%base_addr)(1 + $I_L327_10, 37, 4, 0) = t$490(1 + $I_L327_10)
  327.          $I_L327_10 = 1 + $I_L327_10
  327.          if ( $I_L327_10 >= 18 ) exit
  327.       enddo
  688.       $I_L688_22 = 0
  688.       do
  688.          $I_L688_18 = 0
  688. !dir$ ivdep
  688.          do
  688.             (ozone%base_addr)(1 + $I_L688_18, 31 + $I_L688_22, 4, 0) = t$489(1 + $I_L688_18, 1 + $I_L688_22)
  688.             $I_L688_18 = 1 + $I_L688_18
  688.             if ( $I_L688_18 >= 18 ) exit
  688.          enddo
  688.          $I_L688_22 = 1 + $I_L688_22
  688.          if ( $I_L688_22 >= 6 ) exit
  688.       enddo
  722.       mon_getoz = int( 8.3333333333333329e-2 * yrl )
  723.       year_getoz = yrl
  724.       if ( kmax /= 18 ) then
  725.          inter_getoz = .true.
  725.       else
  727.          inter_getoz = .false.
  728.          $I_L728_6 = 0
  728. !dir$ ivdep
  728.          do
  730.             if ( abs( ozsig(1 + $I_L728_6) + -sl(18 + -$I_L728_6) ) > 1.0e-4 ) then
  730.                inter_getoz = .true.
  730.             endif
  731.             $I_L728_6 = 1 + $I_L728_6
  730.             if ( $I_L728_6 >= 18 ) exit
  730.          enddo
  730.       endif
  733.       first_getoz = .false.
  735.       return
  735.       end
  735.       
 1318.       
 1318.       subroutine radiationdriver( first, ifday, lcnvl, lthncl, nfin0, nfin1, nfcnv0, intcosz, kt, mxrdcc, yrl, idatec, idate, tod, jdt, delt, trint, swint, colrad, lonrad, zenith, cos2d, sig, sigml, delsig, latco, ncols, kmax, nls, nlcs, imask, gps, gtt, gqq, tsurf, omg, tsea, convts, convcs, convbs, convc, convt, convb, albvisdiff, albnirdiff, albvisbeam, albnirbeam, rswtoadown, rvisdiff, rnirdiff, rvisbeam, rnirbeam, rvisdiffc, rnirdiffc, rvisbeamc, rnirbeamc, rswsfcnet, rswsfcnetc, yswtoadown, yvisdiff, ynirdiff, yvisbeam, ynirbeam, yvisdiffc, ynirdiffc, yvisbeamc, ynirbeamc, yswheatrate, yswheatratec, yswsfcnet, yswsfcnetc, xvisdiff, xnirdiff, xvisbeam, xnirbeam, lwcoolrate, lwsfcdown, lwsfcnet, lwtoaup, lwcoolratec, lwsfcdownc, lwsfcnetc, lwtoaupc, slrad, ssib_visbeam, ssib_visdiff, ssib_nirbeam, ssib_nirdiff, cldsav, cldcovtot, cldcovinv, cldcovsat, cldcovcon, cldcovsha, cldliqwatpath, emisd, taud, co2val, o3mix )
  738.       t$3 = ncols
  985.       t$37 = _zla( 0, ncols )
  738.       t$4 = kmax
  989.       t$38 = _zla( 0, kmax )
  738.       t$39 = _zla( 0, ncols )
  738.       t$40 = _zla( 0, ncols ) * _zla( 0, kmax )
 1125.       t$43 = 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1126.       t$44 = 8 * ( 7 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1126.       t$46 = t$44 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1127.       t$47 = 8 * ( 7 + t$44 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1127.       t$49 = t$47 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1117.       t$50 = 8 * ( 7 + t$47 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1117.       t$52 = t$50 + 8 * _zla( 0, ncols )
 1118.       t$53 = 8 * ( 7 + t$50 + 8 * _zla( 0, ncols ) ) / 8
 1118.       t$55 = t$53 + 8 * _zla( 0, ncols )
 1109.       t$56 = 8 * ( 7 + t$53 + 8 * _zla( 0, ncols ) ) / 8
 1109.       t$58 = t$56 + 8 * _zla( 0, ncols )
 1110.       t$59 = 8 * ( 7 + t$56 + 8 * _zla( 0, ncols ) ) / 8
 1110.       t$61 = t$59 + 8 * _zla( 0, ncols )
 1102.       t$62 = 8 * ( 7 + t$59 + 8 * _zla( 0, ncols ) ) / 8
 1102.       t$64 = t$62 + 8 * _zla( 0, ncols )
 1100.       t$65 = 8 * ( 7 + t$62 + 8 * _zla( 0, ncols ) ) / 8
 1100.       t$67 = t$65 + 8 * _zla( 0, ncols )
 1114.       t$68 = 8 * ( 7 + t$65 + 8 * _zla( 0, ncols ) ) / 8
 1114.       t$70 = t$68 + 8 * _zla( 0, ncols )
 1115.       t$71 = 8 * ( 7 + t$68 + 8 * _zla( 0, ncols ) ) / 8
 1115.       t$73 = t$71 + 8 * _zla( 0, ncols )
 1098.       t$74 = 8 * ( 7 + t$71 + 8 * _zla( 0, ncols ) ) / 8
 1098.       t$76 = t$74 + 8 * _zla( 0, ncols )
 1101.       t$77 = 8 * ( 7 + t$74 + 8 * _zla( 0, ncols ) ) / 8
 1101.       t$79 = t$77 + 8 * _zla( 0, ncols )
 1099.       t$80 = 8 * ( 7 + t$77 + 8 * _zla( 0, ncols ) ) / 8
 1099.       t$82 = t$80 + 8 * _zla( 0, ncols )
 1122.       t$83 = 8 * ( 7 + t$80 + 8 * _zla( 0, ncols ) ) / 8
 1122.       t$85 = t$83 + 8 * _zla( 0, ncols )
 1123.       t$86 = 8 * ( 7 + t$83 + 8 * _zla( 0, ncols ) ) / 8
 1123.       t$88 = t$86 + 8 * _zla( 0, ncols )
 1120.       t$89 = 8 * ( 7 + t$86 + 8 * _zla( 0, ncols ) ) / 8
 1120.       t$91 = t$89 + 8 * _zla( 0, ncols )
 1121.       t$92 = 8 * ( 7 + t$89 + 8 * _zla( 0, ncols ) ) / 8
 1121.       t$94 = t$92 + 8 * _zla( 0, ncols )
  738.       t$41 = int( _alloc( t$92 + 8 * _zla( 0, ncols ) ), 8 )
 1125.       t$42 = t$41
 1126.       t$45 = t$44 + t$41
 1127.       t$48 = t$47 + t$41
 1117.       t$51 = t$50 + t$41
 1118.       t$54 = t$53 + t$41
 1109.       t$57 = t$56 + t$41
 1110.       t$60 = t$59 + t$41
 1102.       t$63 = t$62 + t$41
 1100.       t$66 = t$65 + t$41
 1114.       t$69 = t$68 + t$41
 1115.       t$72 = t$71 + t$41
 1098.       t$75 = t$74 + t$41
 1101.       t$78 = t$77 + t$41
 1099.       t$81 = t$80 + t$41
 1122.       t$84 = t$83 + t$41
 1123.       t$87 = t$86 + t$41
 1120.       t$90 = t$89 + t$41
 1121.       t$93 = t$92 + t$41
 1144.       $ghl_local_S20 = isgridhistoryon
 1151.       t$496 = int( _alloc( _zla( 0, 8 * _zla( 0, ncols ) ) ), 8 )
 1151.       $F_A33 = ncols
 1151.       if ( ncols > 0 ) then
 1151.          $I_L1151_100 = 0
 1151. !dir$ ivdep
 1151.          do
 1151.             t$495(1 + $I_L1151_100) = 1.0000000000000001e-1 * gps(1 + $I_L1151_100)
 1151.             $I_L1151_100 = 1 + $I_L1151_100
 1151.             if ( $I_L1151_100 >= $F_A33 ) exit
 1151.          enddo
 1151.       endif
 1151.       t$9 = kmax
 1151.       t$106 = max( 0, kmax )
 1151.       t$10 = ncols
 1151.       t$107 = max( 0, ncols )
 1151.       t$108 = max( 0, ncols )
 1151.       t$109 = max( 0, ncols ) * max( 0, kmax )
 1151.       t$112 = 8 * max( 0, ncols ) * max( 0, kmax )
 1151.       t$113 = 8 * ( 7 + 8 * max( 0, ncols ) * max( 0, kmax ) ) / 8
 1151.       t$115 = t$113 + 8 * max( 0, ncols ) * max( 0, kmax )
 1151.       t$110 = int( _alloc( t$113 + 8 * max( 0, ncols ) * max( 0, kmax ) ), 8 )
 1151.       t$111 = t$110
 1151.       t$114 = t$113 + t$110
 1151.       $k1_S1 = 1
 1151.       if ( mod( kmax, 4 ) > 0 ) then
 1151.          $I_L1151_124 = 0
 1151.          do
 1151.             $F_A34 = ncols
 1151.             if ( ncols > 0 ) then
 1151.                $SCA_sig_I0 = sig(1 + $I_L1151_124)
 1151.                $I_L1151_102 = 0
 1151. !dir$ ivdep
 1151.                do
 1151.                   prs(1 + $I_L1151_102, 1 + $I_L1151_124) = $SCA_sig_I0 * t$495(1 + $I_L1151_102)
 1151.                   $I_L1151_102 = 1 + $I_L1151_102
 1151.                   if ( $I_L1151_102 >= $F_A34 ) exit
 1151.                enddo
 1151.             endif
 1151.             $I_L1151_124 = 1 + $I_L1151_124
 1151.             if ( $I_L1151_124 >= mod( kmax, 4 ) ) exit
 1151.          enddo
 1151.          $k1_S1 = ( 1 + mod( kmax, 4 ) )
 1151.       endif
 1151.       if ( kmax + -$k1_S1 >= 0 ) then
 1151.          $I_L1151_126 = 0
 1151.          do
 1151.             $F_A35 = ncols
 1151.             if ( ncols > 0 ) then
 1151.                $SCA_sig_I1 = sig($k1_S1 + 4 * $I_L1151_126)
 1151.                $I_L1151_104 = 0
 1151. !dir$ ivdep
 1151.                do
 1151.                   prs(1 + $I_L1151_104, $k1_S1 + 4 * $I_L1151_126) = $SCA_sig_I1 * t$495(1 + $I_L1151_104)
 1151.                   $I_L1151_104 = 1 + $I_L1151_104
 1151.                   if ( $I_L1151_104 >= $F_A35 ) exit
 1151.                enddo
 1151.             endif
 1151.             $F_A36 = ncols
 1151.             if ( ncols > 0 ) then
 1151.                $SCA_sig_I2 = sig(1 + $k1_S1 + 4 * $I_L1151_126)
 1151.                $I_L1151_106 = 0
 1151. !dir$ ivdep
 1151.                do
 1151.                   prs(1 + $I_L1151_106, 1 + $k1_S1 + 4 * $I_L1151_126) = $SCA_sig_I2 * t$495(1 + $I_L1151_106)
 1151.                   $I_L1151_106 = 1 + $I_L1151_106
 1151.                   if ( $I_L1151_106 >= $F_A36 ) exit
 1151.                enddo
 1151.             endif
 1151.             $F_A37 = ncols
 1151.             if ( ncols > 0 ) then
 1151.                $SCA_sig_I3 = sig(2 + $k1_S1 + 4 * $I_L1151_126)
 1151.                $I_L1151_108 = 0
 1151. !dir$ ivdep
 1151.                do
 1151.                   prs(1 + $I_L1151_108, 2 + $k1_S1 + 4 * $I_L1151_126) = $SCA_sig_I3 * t$495(1 + $I_L1151_108)
 1151.                   $I_L1151_108 = 1 + $I_L1151_108
 1151.                   if ( $I_L1151_108 >= $F_A37 ) exit
 1151.                enddo
 1151.             endif
 1151.             $F_A38 = ncols
 1151.             if ( ncols > 0 ) then
 1151.                $SCA_sig_I4 = sig(3 + $k1_S1 + 4 * $I_L1151_126)
 1151.                $I_L1151_110 = 0
 1151. !dir$ ivdep
 1151.                do
 1151.                   prs(1 + $I_L1151_110, 3 + $k1_S1 + 4 * $I_L1151_126) = $SCA_sig_I4 * t$495(1 + $I_L1151_110)
 1151.                   $I_L1151_110 = 1 + $I_L1151_110
 1151.                   if ( $I_L1151_110 >= $F_A38 ) exit
 1151.                enddo
 1151.             endif
 1151.             $I_L1151_126 = 1 + $I_L1151_126
 1151.             if ( $I_L1151_126 >= ( 4 + kmax + -$k1_S1 ) / 4 ) exit
 1151.          enddo
 1151.       endif
 1151.       $F_A39 = kmax
 1151.       $F_A40 = ncols
 1151.       if ( and( -$F_A40, -$F_A39 ) < 0 ) then
 1151.          $I_L1151_132 = 0
 1151.          do
 1151.             $I_L1151_112 = 0
 1151. !dir$ ivdep
 1151.             do
 1151.                q(1 + $I_L1151_112, 1 + $I_L1151_132) = gqq(1 + $I_L1151_112, 1 + $I_L1151_132)
 1151.                $I_L1151_112 = 1 + $I_L1151_112
 1151.                if ( $I_L1151_112 >= $F_A40 ) exit
 1151.             enddo
 1151.             $I_L1151_132 = 1 + $I_L1151_132
 1151.             if ( $I_L1151_132 >= $F_A39 ) exit
 1151.          enddo
 1151.       endif
 1151.       t$604 = int( _alloc( max( 0, 4 * max( 0, ncols ) * max( 0, kmax ) ) ), 8 )
 1151.       $F_A41 = kmax
 1151.       $F_A42 = ncols
 1151.       if ( and( -$F_A42, -$F_A41 ) < 0 ) then
 1151.          $I_L1151_134 = 0
 1151.          do
 1151.             $I_L1151_114 = 0
 1151. !dir$ ivdep
 1151.             do
 1151.                t$603(1 + $I_L1151_114, 1 + $I_L1151_134) = q(1 + $I_L1151_114, 1 + $I_L1151_134) < 9.9999999999999998e-13
 1151.                $I_L1151_114 = 1 + $I_L1151_114
 1151.                if ( $I_L1151_114 >= $F_A42 ) exit
 1151.             enddo
 1151.             $I_L1151_134 = 1 + $I_L1151_134
 1151.             if ( $I_L1151_134 >= $F_A41 ) exit
 1151.          enddo
 1151.       endif
 1151.       $F_A43 = kmax
 1151.       $F_A44 = ncols
 1151.       if ( and( -$F_A44, -$F_A43 ) < 0 ) then
 1151.          $I_L1151_136 = 0
 1151.          do
 1151.             $I_L1151_116 = 0
 1151. !dir$ ivdep
 1151.             do
 1151.                if ( t$603(1 + $I_L1151_116, 1 + $I_L1151_136) /= 0 ) then
 1151.                   q(1 + $I_L1151_116, 1 + $I_L1151_136) = 9.9999999999999998e-13
 1151.                endif
 1151.                $I_L1151_116 = 1 + $I_L1151_116
 1151.                if ( $I_L1151_116 >= $F_A44 ) exit
 1151.             enddo
 1151.             $I_L1151_136 = 1 + $I_L1151_136
 1151.             if ( $I_L1151_136 >= $F_A43 ) exit
 1151.          enddo
 1151.       endif
 1151.       _free( t$604 )
 1151.       $F_A45 = kmax
 1151.       $F_A46 = ncols
 1151.       if ( and( -$F_A46, -$F_A45 ) < 0 ) then
 1151.          $I_L1151_138 = 0
 1151.          do
 1151.             $I_L1151_118 = 0
 1151. !dir$ ivdep
 1151.             do
 1151.                gtmp(1 + $I_L1151_118, 1 + $I_L1151_138) = ( gtt(1 + $I_L1151_118, 1 + $I_L1151_138) * 1.0/( 1.0 + 6.0799999999999998e-1 * q(1 + $I_L1151_118, 1 + $I_L1151_138) ) )
 1151.                $I_L1151_118 = 1 + $I_L1151_118
 1151.                if ( $I_L1151_118 >= $F_A46 ) exit
 1151.             enddo
 1151.             $I_L1151_138 = 1 + $I_L1151_138
 1151.             if ( $I_L1151_138 >= $F_A45 ) exit
 1151.          enddo
 1151.       endif
 1151.       $const_S5 = 6.1100000000000003 * _expn( -( -5452.7691736782708 * 1.0/tbase ) )
 1151.       if ( kmax > 0 ) then
 1151.          if ( ncols > 0 ) then
 1151.             $I_L1151_128 = 0
 1151.             do
 1151.                $I_L1151_86 = 0
 1151. !dir$ ivdep
 1151.                do
 1151.                   $fac_S6 = $const_S5 * _expn( ( -5452.7691736782708 * 1.0/gtmp(1 + $I_L1151_86, 1 + $I_L1151_128) ) )
 1151.                   qsat(1 + $I_L1151_86, 1 + $I_L1151_128) = ( 6.22e-1 * $fac_S6 * 1.0/( -3.78e-1 * $fac_S6 + 10.0 * prs(1 + $I_L1151_86, 1 + $I_L1151_128) ) )
 1151.                   $I_L1151_86 = 1 + $I_L1151_86
 1151.                   if ( $I_L1151_86 >= ncols ) exit
 1151.                enddo
 1151.                $I_L1151_88 = 0
 1151. !dir$ ivdep
 1151.                do
 1151.                   $relhum_WR0_R0 = ( q(1 + $I_L1151_88, 1 + $I_L1151_128) * 1.0/qsat(1 + $I_L1151_88, 1 + $I_L1151_128) )
 1151.                   relhum(1 + $I_L1151_88, 1 + $I_L1151_128) = $relhum_WR0_R0
 1151.                   if ( $relhum_WR0_R0 > 1.0 ) then
 1151.                      q(1 + $I_L1151_88, 1 + $I_L1151_128) = qsat(1 + $I_L1151_88, 1 + $I_L1151_128)
 1151.                      relhum(1 + $I_L1151_88, 1 + $I_L1151_128) = 1.0
 1151.                   endif
 1151.                   $I_L1151_88 = 1 + $I_L1151_88
 1151.                   if ( $I_L1151_88 >= ncols ) exit
 1151.                enddo
 1151.                $I_L1151_128 = 1 + $I_L1151_128
 1151.                if ( $I_L1151_128 >= kmax ) exit
 1151.             enddo
 1151.          endif
 1151.       endif
 1151.       _free( t$110 )
 1151.       _free( t$496 )
 1156.       inalb = 2
 1157.       if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) /= 'NON' ) then
 1151.          goto 10
 1156.       else if (  _substr(ilwrad,1,_ltrim(  _substr(ilwrad,1,3) )) /= 'NON' ) then
 1156.    10    continue
 1159.          icld = 1
 1161.          if (  _substr(iccon,1,_ltrim(  _substr(iccon,1,3) )) == 'ARA' ) then
 1161.             icld = 3
 1161.          endif
 1163.          if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'CRD' ) then
 1163.             icld = int( crdcld )
 1163.          endif
 1165.          if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'UKM' ) then
 1163.             goto 20
 1165.          else if (  _substr(ilwrad,1,_ltrim(  _substr(ilwrad,1,3) )) == 'UKM' ) then
 1165.    20       continue
 1165.             icld = 4
 1165.          endif
 1167.          call spmrad( first, ifday, lcnvl, lthncl, nfin0, nfin1, nfcnv0, intcosz, mxrdcc, inalb, icld, yrl, idatec(1), idate(1), tod, delt, trint, swint, colrad(1), lonrad(1), zenith(1), cos2d(1), sig(1), sigml(1), delsig(1), latco, ncols, kmax, nls, nlcs, imask(1), gps(1), gtmp(1, 1), q(1, 1), tsurf(1), relhum(1, 1), omg(1, 1), tsea(1), convts(1), convcs(1), convbs(1), convc(1), convt(1), convb(1), albvisdiff(1), albnirdiff(1), albvisbeam(1), albnirbeam(1), rswtoadown(1), rvisdiff(1), rnirdiff(1), rvisbeam(1), rnirbeam(1), rvisdiffc(1), rnirdiffc(1), rvisbeamc(1), rnirbeamc(1), rswsfcnet(1), rswsfcnetc(1), rswtoanet(1), rswtoanetc(1), yswtoadown(1), yvisdiff(1), ynirdiff(1), yvisbeam(1), ynirbeam(1), yvisdiffc(1), ynirdiffc(1), yvisbeamc(1), ynirbeamc(1), yswheatrate(1, 1), yswheatratec(1, 1), yswsfcnet(1), yswsfcnetc(1), yswtoanet(1), yswtoanetc(1), ssib_visdiff(1), ssib_nirdiff(1), ssib_visbeam(1), ssib_nirbeam(1), lwcoolrate(1, 1), lwsfcdown(1), lwsfcnet(1), lwtoaup(1), lwcoolratec(1, 1), lwsfcdownc(1), lwsfcnetc(1), lwtoaupc(1), cldsav(1), cldcovtot(1, 1), cldcovinv(1, 1), cldcovsat(1, 1), cldcovcon(1, 1), cldcovsha(1, 1), cldliqwatpath(1, 1), emisd(1, 1), taud(1, 1), co2val, o3mix(1, 1) )
 1210.          $intstp_S14 = int( 1.0e-2 + ( 3600.0 * swint * 1.0/delt ) )
 1211.          $modstp_S9 = mod( -1 + jdt, int( 1.0e-2 + ( 3600.0 * swint * 1.0/delt ) ) )
 1212.          $fstp_S10 = ( 1.0/( real( int( 1.0e-2 + ( 3600.0 * swint * 1.0/delt ) ), 8 ) ) * real( $modstp_S9, 8 ) )
 1214.          if ( jdt <= 2 ) then
 1214.             if ( kt == 0 ) then
 1214.                $fstp_S10 = 0.0
 1214.             endif
 1214.          endif
 1216.          $fstp1_S12 = 1.0 + -$fstp_S10
 1218.          if ( ncols > 0 ) then
 1218.             $I_L1218_90 = 0
 1218. !dir$ ivdep
 1218.             do
 1219.                xvisdiff(1 + $I_L1218_90) = $fstp_S10 * yvisdiff(1 + $I_L1218_90) + $fstp1_S12 * rvisdiff(1 + $I_L1218_90)
 1220.                xvisbeam(1 + $I_L1218_90) = $fstp_S10 * yvisbeam(1 + $I_L1218_90) + $fstp1_S12 * rvisbeam(1 + $I_L1218_90)
 1221.                xnirdiff(1 + $I_L1218_90) = $fstp_S10 * ynirdiff(1 + $I_L1218_90) + $fstp1_S12 * rnirdiff(1 + $I_L1218_90)
 1222.                xnirbeam(1 + $I_L1218_90) = $fstp_S10 * ynirbeam(1 + $I_L1218_90) + $fstp1_S12 * rnirbeam(1 + $I_L1218_90)
 1223.                xvisdiffc(1 + $I_L1218_90) = $fstp_S10 * yvisdiffc(1 + $I_L1218_90) + $fstp1_S12 * rvisdiffc(1 + $I_L1218_90)
 1224.                xvisbeamc(1 + $I_L1218_90) = $fstp_S10 * yvisbeamc(1 + $I_L1218_90) + $fstp1_S12 * rvisbeamc(1 + $I_L1218_90)
 1225.                xnirdiffc(1 + $I_L1218_90) = $fstp_S10 * ynirdiffc(1 + $I_L1218_90) + $fstp1_S12 * rnirdiffc(1 + $I_L1218_90)
 1226.                xnirbeamc(1 + $I_L1218_90) = $fstp_S10 * ynirbeamc(1 + $I_L1218_90) + $fstp1_S12 * rnirbeamc(1 + $I_L1218_90)
 1227.                xswtoadown(1 + $I_L1218_90) = $fstp_S10 * yswtoadown(1 + $I_L1218_90) + $fstp1_S12 * rswtoadown(1 + $I_L1218_90)
 1228.                xswsfcnet(1 + $I_L1218_90) = $fstp_S10 * yswsfcnet(1 + $I_L1218_90) + $fstp1_S12 * rswsfcnet(1 + $I_L1218_90)
 1229.                xswsfcnetc(1 + $I_L1218_90) = $fstp_S10 * yswsfcnetc(1 + $I_L1218_90) + $fstp1_S12 * rswsfcnetc(1 + $I_L1218_90)
 1230.                $I_L1218_90 = 1 + $I_L1218_90
 1218.                if ( $I_L1218_90 >= ncols ) exit
 1218.             enddo
 1249.             $I_L1249_94 = 0
 1249. !dir$ ivdep
 1249.             do
 1250.                $slrad_WR0_R1 = lwsfcdown(1 + $I_L1249_94) + xnirbeam(1 + $I_L1249_94) * ( 1.0 + -albnirbeam(1 + $I_L1249_94) ) + xnirdiff(1 + $I_L1249_94) * ( 1.0 + -albnirdiff(1 + $I_L1249_94) ) + xvisbeam(1 + $I_L1249_94) * ( 1.0 + -albvisbeam(1 + $I_L1249_94) ) + xvisdiff(1 + $I_L1249_94) * ( 1.0 + -albvisdiff(1 + $I_L1249_94) )
 1256.                $slrad_WR0_R1 = -1.4335299999999999e-3 * $slrad_WR0_R1
 1256.                slrad(1 + $I_L1249_94) = $slrad_WR0_R1
 1257.                $I_L1249_94 = 1 + $I_L1249_94
 1249.                if ( $I_L1249_94 >= ncols ) exit
 1249.             enddo
 1249.          endif
 1232.          if ( $intstp_S14 + -$modstp_S9 == 1 ) then
 1233.             if ( ncols > 0 ) then
 1233.                $I_L1233_92 = 0
 1233. !dir$ ivdep
 1233.                do
 1234.                   rvisdiff(1 + $I_L1233_92) = yvisdiff(1 + $I_L1233_92)
 1235.                   rvisbeam(1 + $I_L1233_92) = yvisbeam(1 + $I_L1233_92)
 1236.                   rnirdiff(1 + $I_L1233_92) = ynirdiff(1 + $I_L1233_92)
 1237.                   rnirbeam(1 + $I_L1233_92) = ynirbeam(1 + $I_L1233_92)
 1238.                   rvisdiffc(1 + $I_L1233_92) = yvisdiffc(1 + $I_L1233_92)
 1239.                   rvisbeamc(1 + $I_L1233_92) = yvisbeamc(1 + $I_L1233_92)
 1240.                   rnirdiffc(1 + $I_L1233_92) = ynirdiffc(1 + $I_L1233_92)
 1241.                   rnirbeamc(1 + $I_L1233_92) = ynirbeamc(1 + $I_L1233_92)
 1242.                   rswtoadown(1 + $I_L1233_92) = yswtoadown(1 + $I_L1233_92)
 1243.                   rswsfcnet(1 + $I_L1233_92) = yswsfcnet(1 + $I_L1233_92)
 1244.                   rswsfcnetc(1 + $I_L1233_92) = yswsfcnetc(1 + $I_L1233_92)
 1245.                   $I_L1233_92 = 1 + $I_L1233_92
 1233.                   if ( $I_L1233_92 >= ncols ) exit
 1233.                enddo
 1233.             endif
 1233.          endif
 1260.          $F_A47 = ncols
 1260.          if ( ncols > 0 ) then
 1260.             $I_L1260_120 = 0
 1260. !dir$ ivdep
 1260.             do
 1260.                yswatmabs(1 + $I_L1260_120) = 0.0
 1260.                $I_L1260_120 = 1 + $I_L1260_120
 1260.                if ( $I_L1260_120 >= $F_A47 ) exit
 1260.             enddo
 1260.          endif
 1261.          $F_A48 = ncols
 1261.          if ( ncols > 0 ) then
 1261.             $I_L1261_122 = 0
 1261. !dir$ ivdep
 1261.             do
 1261.                yswatmabsc(1 + $I_L1261_122) = 0.0
 1261.                $I_L1261_122 = 1 + $I_L1261_122
 1261.                if ( $I_L1261_122 >= $F_A48 ) exit
 1261.             enddo
 1261.          endif
 1262.          if ( kmax > 0 ) then
 1264.             if ( ncols > 0 ) then
 1262.                $I_L1262_130 = 0
 1262.                do
 1263.                   $rfac_S18 = 10251.020408163264 * delsig(1 + $I_L1262_130)
 1264.                   $I_L1264_96 = 0
 1264. !dir$ ivdep
 1264.                   do
 1265.                      yswatmabs(1 + $I_L1264_96) = yswatmabs(1 + $I_L1264_96) + $rfac_S18 * gps(1 + $I_L1264_96) * yswheatrate(1 + $I_L1264_96, 1 + $I_L1262_130)
 1266.                      yswatmabsc(1 + $I_L1264_96) = yswatmabsc(1 + $I_L1264_96) + $rfac_S18 * gps(1 + $I_L1264_96) * yswheatratec(1 + $I_L1264_96, 1 + $I_L1262_130)
 1267.                      $I_L1264_96 = 1 + $I_L1264_96
 1264.                      if ( $I_L1264_96 >= ncols ) exit
 1264.                   enddo
 1268.                   $I_L1262_130 = 1 + $I_L1262_130
 1267.                   if ( $I_L1262_130 >= kmax ) exit
 1267.                enddo
 1267.             endif
 1267.          endif
 1276.          if ( ncols > 0 ) then
 1276.             $I_L1276_98 = 0
 1276. !dir$ ivdep
 1276.             do
 1277.                swtoaup(1 + $I_L1276_98) = xswtoadown(1 + $I_L1276_98) + -yswatmabs(1 + $I_L1276_98) + -( xnirbeam(1 + $I_L1276_98) * ( 1.0 + -albnirbeam(1 + $I_L1276_98) ) ) + -( xnirdiff(1 + $I_L1276_98) * ( 1.0 + -albnirdiff(1 + $I_L1276_98) ) ) + -( xvisbeam(1 + $I_L1276_98) * ( 1.0 + -albvisbeam(1 + $I_L1276_98) ) ) + -( xvisdiff(1 + $I_L1276_98) * ( 1.0 + -albvisdiff(1 + $I_L1276_98) ) )
 1284.                swtoaupc(1 + $I_L1276_98) = xswtoadown(1 + $I_L1276_98) + -yswatmabsc(1 + $I_L1276_98) + -( xnirbeamc(1 + $I_L1276_98) * ( 1.0 + -albnirbeam(1 + $I_L1276_98) ) ) + -( xnirdiffc(1 + $I_L1276_98) * ( 1.0 + -albnirdiff(1 + $I_L1276_98) ) ) + -( xvisbeamc(1 + $I_L1276_98) * ( 1.0 + -albvisbeam(1 + $I_L1276_98) ) ) + -( xvisdiffc(1 + $I_L1276_98) * ( 1.0 + -albvisdiff(1 + $I_L1276_98) ) )
 1291.                $I_L1276_98 = 1 + $I_L1276_98
 1276.                if ( $I_L1276_98 >= ncols ) exit
 1276.             enddo
 1276.          endif
 1295.          if ( startstordiag /= .false. ) then
 1296.             call raddiagstor( ncols, kmax, latco, cldcovtot(1, 1), cldcovinv(1, 1), cldcovsat(1, 1), cldcovcon(1, 1), cldcovsha(1, 1), cldliqwatpath(1, 1), taud(1, 1), emisd(1, 1), lwcoolrate(1, 1), yswheatrate(1, 1), yswheatratec(1, 1), lwcoolratec(1, 1), cldsav(1), o3mix(1, 1), xswtoadown(1), swtoaup(1), swtoaupc(1), lwsfcdown(1), lwtoaup(1), lwsfcdownc(1), lwtoaupc(1), lwsfcnet(1), lwsfcnetc(1), xvisdiff(1), xvisbeam(1), xnirdiff(1), xnirbeam(1), xvisdiffc(1), xvisbeamc(1), xnirdiffc(1), xnirbeamc(1), albvisdiff(1), albvisbeam(1), albnirdiff(1), albnirbeam(1), delsig(1), gps(1), xswsfcnet(1), xswsfcnetc(1) )
 1296.          endif
 1311.          if ( $ghl_local_S20 /= .false. ) then
 1312.             call radgridhiststorage( ncols, kmax, latco, cldcovtot(1, 1), lwcoolrate(1, 1), yswheatrate(1, 1), lwtoaup(1), lwsfcdown(1), zenith(1), xswtoadown(1), xvisbeam(1), xvisdiff(1), xnirbeam(1), xnirdiff(1), albvisbeam(1), albvisdiff(1), albnirbeam(1), albnirdiff(1), cldsav(1), swtoaup(1) )
 1312.          endif
 1312.       endif
  738.       _free( t$41 )
 1318.       return
 1318.       end
 1318.       
 1365.       
 1365.       subroutine radgridhiststorage( ncols, kmax, latco, cldcovtot, lwcoolrate, yswheatrate, lwtoaup, lwsfcdown, zenith, xswtoadown, xvisbeam, xvisdiff, xnirbeam, xnirdiff, albvisbeam, albvisdiff, albnirbeam, albnirdiff, cldsav, swtoaup )
 1322.       t$5 = ncols
 1322.       t$6 = kmax
 1329.       t$95 = _zla( 0, ncols )
 1322.       t$96 = _zla( 0, ncols )
 1329.       t$97 = _zla( 0, kmax )
 1322.       t$98 = _zla( 0, ncols ) * _zla( 0, kmax )
 1347.       if ( (dogrh%base_addr)(75, latco, 0) /= .false. ) then
 1347. !dir$ suppress cldcovtot(1, 1)
 1347.          t$515 = $_StaticDV_P0
 1347.          t$515%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( cldcovtot(1, 1) ) )
 1347.          t$515%header%el_len = 64
 1347.          t$515%header%assoc = 1
 1347.          t$515%header%ptr_alloc = 0
 1347.          t$515%header%p_or_a = 0
 1347.          t$515%header%a_contig = 1
 1347.          t$515%header%n_dim = 2
 1347.          t$515%header%orig_base = 0
 1347.          t$515%header%orig_size = 0
 1347.          t$515%header%n_codim = 0
 1347.          t$515%header%dv_versn = 2
 1347.          t$515%header%dv_smunit = 64
 1347.          t$515%header%d_type = 0
 1347.          t$515%header%n_params = 0
 1347.          t$515%header%d_type_idx = 13
 1347.          t$515%dim_1%LB = 1
 1347.          t$515%dim_1%EX = _zla( 0, ncols )
 1347.          t$515%dim_1%SM = 1
 1347.          t$515%dim_2%LB = 1
 1347.          t$515%dim_2%EX = _zla( 0, kmax )
 1347.          t$515%dim_2%SM = _zla( 0, ncols )
 1347.          call store2d( t$515, 75, latco, 0 )
 1347.       endif
 1348.       if ( (dogrh%base_addr)(63, latco, 0) /= .false. ) then
 1348. !dir$ suppress lwcoolrate(1, 1)
 1348.          t$516 = $_StaticDV_P1
 1348.          t$516%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( lwcoolrate(1, 1) ) )
 1348.          t$516%header%el_len = 64
 1348.          t$516%header%assoc = 1
 1348.          t$516%header%ptr_alloc = 0
 1348.          t$516%header%p_or_a = 0
 1348.          t$516%header%a_contig = 1
 1348.          t$516%header%n_dim = 2
 1348.          t$516%header%orig_base = 0
 1348.          t$516%header%orig_size = 0
 1348.          t$516%header%n_codim = 0
 1348.          t$516%header%dv_versn = 2
 1348.          t$516%header%dv_smunit = 64
 1348.          t$516%header%d_type = 0
 1348.          t$516%header%n_params = 0
 1348.          t$516%header%d_type_idx = 13
 1348.          t$516%dim_1%LB = 1
 1348.          t$516%dim_1%EX = _zla( 0, ncols )
 1348.          t$516%dim_1%SM = 1
 1348.          t$516%dim_2%LB = 1
 1348.          t$516%dim_2%EX = _zla( 0, kmax )
 1348.          t$516%dim_2%SM = _zla( 0, ncols )
 1348.          call store2d( t$516, 63, latco, 0 )
 1348.       endif
 1349.       if ( (dogrh%base_addr)(62, latco, 0) /= .false. ) then
 1349. !dir$ suppress yswheatrate(1, 1)
 1349.          t$517 = $_StaticDV_P2
 1349.          t$517%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( yswheatrate(1, 1) ) )
 1349.          t$517%header%el_len = 64
 1349.          t$517%header%assoc = 1
 1349.          t$517%header%ptr_alloc = 0
 1349.          t$517%header%p_or_a = 0
 1349.          t$517%header%a_contig = 1
 1349.          t$517%header%n_dim = 2
 1349.          t$517%header%orig_base = 0
 1349.          t$517%header%orig_size = 0
 1349.          t$517%header%n_codim = 0
 1349.          t$517%header%dv_versn = 2
 1349.          t$517%header%dv_smunit = 64
 1349.          t$517%header%d_type = 0
 1349.          t$517%header%n_params = 0
 1349.          t$517%header%d_type_idx = 13
 1349.          t$517%dim_1%LB = 1
 1349.          t$517%dim_1%EX = _zla( 0, ncols )
 1349.          t$517%dim_1%SM = 1
 1349.          t$517%dim_2%LB = 1
 1349.          t$517%dim_2%EX = _zla( 0, kmax )
 1349.          t$517%dim_2%SM = _zla( 0, ncols )
 1349.          call store2d( t$517, 62, latco, 0 )
 1349.       endif
 1350.       if ( (dogrh%base_addr)(20, latco, 0) /= .false. ) then
 1350. !dir$ suppress lwtoaup(1)
 1350.          t$518 = $_StaticDV_P3
 1350.          t$518%base_addr = pointer to array[1] of real (kind=8)( loc( lwtoaup(1) ) )
 1350.          t$518%header%el_len = 64
 1350.          t$518%header%assoc = 1
 1350.          t$518%header%ptr_alloc = 0
 1350.          t$518%header%p_or_a = 0
 1350.          t$518%header%a_contig = 1
 1350.          t$518%header%n_dim = 1
 1350.          t$518%header%orig_base = 0
 1350.          t$518%header%orig_size = 0
 1350.          t$518%header%n_codim = 0
 1350.          t$518%header%dv_versn = 2
 1350.          t$518%header%dv_smunit = 64
 1350.          t$518%header%d_type = 0
 1350.          t$518%header%n_params = 0
 1350.          t$518%header%d_type_idx = 13
 1350.          t$518%dim_1%LB = 1
 1350.          t$518%dim_1%EX = _zla( 0, ncols )
 1350.          t$518%dim_1%SM = 1
 1350.          call store1d( t$518, 20, latco, 0 )
 1350.       endif
 1351.       if ( (dogrh%base_addr)(21, latco, 0) /= .false. ) then
 1351. !dir$ suppress lwsfcdown(1)
 1351.          t$519 = $_StaticDV_P4
 1351.          t$519%base_addr = pointer to array[1] of real (kind=8)( loc( lwsfcdown(1) ) )
 1351.          t$519%header%el_len = 64
 1351.          t$519%header%assoc = 1
 1351.          t$519%header%ptr_alloc = 0
 1351.          t$519%header%p_or_a = 0
 1351.          t$519%header%a_contig = 1
 1351.          t$519%header%n_dim = 1
 1351.          t$519%header%orig_base = 0
 1351.          t$519%header%orig_size = 0
 1351.          t$519%header%n_codim = 0
 1351.          t$519%header%dv_versn = 2
 1351.          t$519%header%dv_smunit = 64
 1351.          t$519%header%d_type = 0
 1351.          t$519%header%n_params = 0
 1351.          t$519%header%d_type_idx = 13
 1351.          t$519%dim_1%LB = 1
 1351.          t$519%dim_1%EX = _zla( 0, ncols )
 1351.          t$519%dim_1%SM = 1
 1351.          call store1d( t$519, 21, latco, 0 )
 1351.       endif
 1352.       if ( (dogrh%base_addr)(35, latco, 0) /= .false. ) then
 1352. !dir$ suppress zenith(1)
 1352.          t$520 = $_StaticDV_P5
 1352.          t$520%base_addr = pointer to array[1] of real (kind=8)( loc( zenith(1) ) )
 1352.          t$520%header%el_len = 64
 1352.          t$520%header%assoc = 1
 1352.          t$520%header%ptr_alloc = 0
 1352.          t$520%header%p_or_a = 0
 1352.          t$520%header%a_contig = 1
 1352.          t$520%header%n_dim = 1
 1352.          t$520%header%orig_base = 0
 1352.          t$520%header%orig_size = 0
 1352.          t$520%header%n_codim = 0
 1352.          t$520%header%dv_versn = 2
 1352.          t$520%header%dv_smunit = 64
 1352.          t$520%header%d_type = 0
 1352.          t$520%header%n_params = 0
 1352.          t$520%header%d_type_idx = 13
 1352.          t$520%dim_1%LB = 1
 1352.          t$520%dim_1%EX = _zla( 0, ncols )
 1352.          t$520%dim_1%SM = 1
 1352.          call store1d( t$520, 35, latco, 0 )
 1352.       endif
 1353.       if ( (dogrh%base_addr)(19, latco, 0) /= .false. ) then
 1353. !dir$ suppress xswtoadown(1)
 1353.          t$521 = $_StaticDV_P6
 1353.          t$521%base_addr = pointer to array[1] of real (kind=8)( loc( xswtoadown(1) ) )
 1353.          t$521%header%el_len = 64
 1353.          t$521%header%assoc = 1
 1353.          t$521%header%ptr_alloc = 0
 1353.          t$521%header%p_or_a = 0
 1353.          t$521%header%a_contig = 1
 1353.          t$521%header%n_dim = 1
 1353.          t$521%header%orig_base = 0
 1353.          t$521%header%orig_size = 0
 1353.          t$521%header%n_codim = 0
 1353.          t$521%header%dv_versn = 2
 1353.          t$521%header%dv_smunit = 64
 1353.          t$521%header%d_type = 0
 1353.          t$521%header%n_params = 0
 1353.          t$521%header%d_type_idx = 13
 1353.          t$521%dim_1%LB = 1
 1353.          t$521%dim_1%EX = _zla( 0, ncols )
 1353.          t$521%dim_1%SM = 1
 1353.          call store1d( t$521, 19, latco, 0 )
 1353.       endif
 1354.       if ( (dogrh%base_addr)(24, latco, 0) /= .false. ) then
 1354. !dir$ suppress xvisbeam(1)
 1354.          t$522 = $_StaticDV_P7
 1354.          t$522%base_addr = pointer to array[1] of real (kind=8)( loc( xvisbeam(1) ) )
 1354.          t$522%header%el_len = 64
 1354.          t$522%header%assoc = 1
 1354.          t$522%header%ptr_alloc = 0
 1354.          t$522%header%p_or_a = 0
 1354.          t$522%header%a_contig = 1
 1354.          t$522%header%n_dim = 1
 1354.          t$522%header%orig_base = 0
 1354.          t$522%header%orig_size = 0
 1354.          t$522%header%n_codim = 0
 1354.          t$522%header%dv_versn = 2
 1354.          t$522%header%dv_smunit = 64
 1354.          t$522%header%d_type = 0
 1354.          t$522%header%n_params = 0
 1354.          t$522%header%d_type_idx = 13
 1354.          t$522%dim_1%LB = 1
 1354.          t$522%dim_1%EX = _zla( 0, ncols )
 1354.          t$522%dim_1%SM = 1
 1354.          call store1d( t$522, 24, latco, 0 )
 1354.       endif
 1355.       if ( (dogrh%base_addr)(25, latco, 0) /= .false. ) then
 1355. !dir$ suppress xvisdiff(1)
 1355.          t$523 = $_StaticDV_P8
 1355.          t$523%base_addr = pointer to array[1] of real (kind=8)( loc( xvisdiff(1) ) )
 1355.          t$523%header%el_len = 64
 1355.          t$523%header%assoc = 1
 1355.          t$523%header%ptr_alloc = 0
 1355.          t$523%header%p_or_a = 0
 1355.          t$523%header%a_contig = 1
 1355.          t$523%header%n_dim = 1
 1355.          t$523%header%orig_base = 0
 1355.          t$523%header%orig_size = 0
 1355.          t$523%header%n_codim = 0
 1355.          t$523%header%dv_versn = 2
 1355.          t$523%header%dv_smunit = 64
 1355.          t$523%header%d_type = 0
 1355.          t$523%header%n_params = 0
 1355.          t$523%header%d_type_idx = 13
 1355.          t$523%dim_1%LB = 1
 1355.          t$523%dim_1%EX = _zla( 0, ncols )
 1355.          t$523%dim_1%SM = 1
 1355.          call store1d( t$523, 25, latco, 0 )
 1355.       endif
 1356.       if ( (dogrh%base_addr)(26, latco, 0) /= .false. ) then
 1356. !dir$ suppress xnirbeam(1)
 1356.          t$524 = $_StaticDV_P9
 1356.          t$524%base_addr = pointer to array[1] of real (kind=8)( loc( xnirbeam(1) ) )
 1356.          t$524%header%el_len = 64
 1356.          t$524%header%assoc = 1
 1356.          t$524%header%ptr_alloc = 0
 1356.          t$524%header%p_or_a = 0
 1356.          t$524%header%a_contig = 1
 1356.          t$524%header%n_dim = 1
 1356.          t$524%header%orig_base = 0
 1356.          t$524%header%orig_size = 0
 1356.          t$524%header%n_codim = 0
 1356.          t$524%header%dv_versn = 2
 1356.          t$524%header%dv_smunit = 64
 1356.          t$524%header%d_type = 0
 1356.          t$524%header%n_params = 0
 1356.          t$524%header%d_type_idx = 13
 1356.          t$524%dim_1%LB = 1
 1356.          t$524%dim_1%EX = _zla( 0, ncols )
 1356.          t$524%dim_1%SM = 1
 1356.          call store1d( t$524, 26, latco, 0 )
 1356.       endif
 1357.       if ( (dogrh%base_addr)(27, latco, 0) /= .false. ) then
 1357. !dir$ suppress xnirdiff(1)
 1357.          t$525 = $_StaticDV_P10
 1357.          t$525%base_addr = pointer to array[1] of real (kind=8)( loc( xnirdiff(1) ) )
 1357.          t$525%header%el_len = 64
 1357.          t$525%header%assoc = 1
 1357.          t$525%header%ptr_alloc = 0
 1357.          t$525%header%p_or_a = 0
 1357.          t$525%header%a_contig = 1
 1357.          t$525%header%n_dim = 1
 1357.          t$525%header%orig_base = 0
 1357.          t$525%header%orig_size = 0
 1357.          t$525%header%n_codim = 0
 1357.          t$525%header%dv_versn = 2
 1357.          t$525%header%dv_smunit = 64
 1357.          t$525%header%d_type = 0
 1357.          t$525%header%n_params = 0
 1357.          t$525%header%d_type_idx = 13
 1357.          t$525%dim_1%LB = 1
 1357.          t$525%dim_1%EX = _zla( 0, ncols )
 1357.          t$525%dim_1%SM = 1
 1357.          call store1d( t$525, 27, latco, 0 )
 1357.       endif
 1358.       if ( (dogrh%base_addr)(28, latco, 0) /= .false. ) then
 1358. !dir$ suppress albvisbeam(1)
 1358.          t$526 = $_StaticDV_P11
 1358.          t$526%base_addr = pointer to array[1] of real (kind=8)( loc( albvisbeam(1) ) )
 1358.          t$526%header%el_len = 64
 1358.          t$526%header%assoc = 1
 1358.          t$526%header%ptr_alloc = 0
 1358.          t$526%header%p_or_a = 0
 1358.          t$526%header%a_contig = 1
 1358.          t$526%header%n_dim = 1
 1358.          t$526%header%orig_base = 0
 1358.          t$526%header%orig_size = 0
 1358.          t$526%header%n_codim = 0
 1358.          t$526%header%dv_versn = 2
 1358.          t$526%header%dv_smunit = 64
 1358.          t$526%header%d_type = 0
 1358.          t$526%header%n_params = 0
 1358.          t$526%header%d_type_idx = 13
 1358.          t$526%dim_1%LB = 1
 1358.          t$526%dim_1%EX = _zla( 0, ncols )
 1358.          t$526%dim_1%SM = 1
 1358.          call store1d( t$526, 28, latco, 0 )
 1358.       endif
 1359.       if ( (dogrh%base_addr)(29, latco, 0) /= .false. ) then
 1359. !dir$ suppress albvisdiff(1)
 1359.          t$527 = $_StaticDV_P12
 1359.          t$527%base_addr = pointer to array[1] of real (kind=8)( loc( albvisdiff(1) ) )
 1359.          t$527%header%el_len = 64
 1359.          t$527%header%assoc = 1
 1359.          t$527%header%ptr_alloc = 0
 1359.          t$527%header%p_or_a = 0
 1359.          t$527%header%a_contig = 1
 1359.          t$527%header%n_dim = 1
 1359.          t$527%header%orig_base = 0
 1359.          t$527%header%orig_size = 0
 1359.          t$527%header%n_codim = 0
 1359.          t$527%header%dv_versn = 2
 1359.          t$527%header%dv_smunit = 64
 1359.          t$527%header%d_type = 0
 1359.          t$527%header%n_params = 0
 1359.          t$527%header%d_type_idx = 13
 1359.          t$527%dim_1%LB = 1
 1359.          t$527%dim_1%EX = _zla( 0, ncols )
 1359.          t$527%dim_1%SM = 1
 1359.          call store1d( t$527, 29, latco, 0 )
 1359.       endif
 1360.       if ( (dogrh%base_addr)(30, latco, 0) /= .false. ) then
 1360. !dir$ suppress albnirbeam(1)
 1360.          t$528 = $_StaticDV_P13
 1360.          t$528%base_addr = pointer to array[1] of real (kind=8)( loc( albnirbeam(1) ) )
 1360.          t$528%header%el_len = 64
 1360.          t$528%header%assoc = 1
 1360.          t$528%header%ptr_alloc = 0
 1360.          t$528%header%p_or_a = 0
 1360.          t$528%header%a_contig = 1
 1360.          t$528%header%n_dim = 1
 1360.          t$528%header%orig_base = 0
 1360.          t$528%header%orig_size = 0
 1360.          t$528%header%n_codim = 0
 1360.          t$528%header%dv_versn = 2
 1360.          t$528%header%dv_smunit = 64
 1360.          t$528%header%d_type = 0
 1360.          t$528%header%n_params = 0
 1360.          t$528%header%d_type_idx = 13
 1360.          t$528%dim_1%LB = 1
 1360.          t$528%dim_1%EX = _zla( 0, ncols )
 1360.          t$528%dim_1%SM = 1
 1360.          call store1d( t$528, 30, latco, 0 )
 1360.       endif
 1361.       if ( (dogrh%base_addr)(31, latco, 0) /= .false. ) then
 1361. !dir$ suppress albnirdiff(1)
 1361.          t$529 = $_StaticDV_P14
 1361.          t$529%base_addr = pointer to array[1] of real (kind=8)( loc( albnirdiff(1) ) )
 1361.          t$529%header%el_len = 64
 1361.          t$529%header%assoc = 1
 1361.          t$529%header%ptr_alloc = 0
 1361.          t$529%header%p_or_a = 0
 1361.          t$529%header%a_contig = 1
 1361.          t$529%header%n_dim = 1
 1361.          t$529%header%orig_base = 0
 1361.          t$529%header%orig_size = 0
 1361.          t$529%header%n_codim = 0
 1361.          t$529%header%dv_versn = 2
 1361.          t$529%header%dv_smunit = 64
 1361.          t$529%header%d_type = 0
 1361.          t$529%header%n_params = 0
 1361.          t$529%header%d_type_idx = 13
 1361.          t$529%dim_1%LB = 1
 1361.          t$529%dim_1%EX = _zla( 0, ncols )
 1361.          t$529%dim_1%SM = 1
 1361.          call store1d( t$529, 31, latco, 0 )
 1361.       endif
 1362.       if ( (dogrh%base_addr)(74, latco, 0) /= .false. ) then
 1362. !dir$ suppress cldsav(1)
 1362.          t$530 = $_StaticDV_P15
 1362.          t$530%base_addr = pointer to array[1] of real (kind=8)( loc( cldsav(1) ) )
 1362.          t$530%header%el_len = 64
 1362.          t$530%header%assoc = 1
 1362.          t$530%header%ptr_alloc = 0
 1362.          t$530%header%p_or_a = 0
 1362.          t$530%header%a_contig = 1
 1362.          t$530%header%n_dim = 1
 1362.          t$530%header%orig_base = 0
 1362.          t$530%header%orig_size = 0
 1362.          t$530%header%n_codim = 0
 1362.          t$530%header%dv_versn = 2
 1362.          t$530%header%dv_smunit = 64
 1362.          t$530%header%d_type = 0
 1362.          t$530%header%n_params = 0
 1362.          t$530%header%d_type_idx = 13
 1362.          t$530%dim_1%LB = 1
 1362.          t$530%dim_1%EX = _zla( 0, ncols )
 1362.          t$530%dim_1%SM = 1
 1362.          call store1d( t$530, 74, latco, 0 )
 1362.       endif
 1363.       if ( (dogrh%base_addr)(23, latco, 0) /= .false. ) then
 1363. !dir$ suppress swtoaup(1)
 1363.          t$531 = $_StaticDV_P16
 1363.          t$531%base_addr = pointer to array[1] of real (kind=8)( loc( swtoaup(1) ) )
 1363.          t$531%header%el_len = 64
 1363.          t$531%header%assoc = 1
 1363.          t$531%header%ptr_alloc = 0
 1363.          t$531%header%p_or_a = 0
 1363.          t$531%header%a_contig = 1
 1363.          t$531%header%n_dim = 1
 1363.          t$531%header%orig_base = 0
 1363.          t$531%header%orig_size = 0
 1363.          t$531%header%n_codim = 0
 1363.          t$531%header%dv_versn = 2
 1363.          t$531%header%dv_smunit = 64
 1363.          t$531%header%d_type = 0
 1363.          t$531%header%n_params = 0
 1363.          t$531%header%d_type_idx = 13
 1363.          t$531%dim_1%LB = 1
 1363.          t$531%dim_1%EX = _zla( 0, ncols )
 1363.          t$531%dim_1%SM = 1
 1363.          call store1d( t$531, 23, latco, 0 )
 1363.       endif
 1365.       return
 1365.       end
 1365.       
 1586.       
 1586.       subroutine raddiagstor( ncols, kmax, latco, cldcovtot, cldcovinv, cldcovsat, cldcovcon, cldcovsha, cldliqwatpath, taud, emisd, lwcoolrate, yswheatrate, yswheatratec, lwcoolratec, cldsav, o3mix, xswtoadown, swtoaup, swtoaupc, lwsfcdown, lwtoaup, lwsfcdownc, lwtoaupc, lwsfcnet, lwsfcnetc, xvisdiff, xvisbeam, xnirdiff, xnirbeam, xvisdiffc, xvisbeamc, xnirdiffc, xnirbeamc, albvisdiff, albvisbeam, albnirdiff, albnirbeam, delsig, gps, swsfcnet, swsfcnetc )
 1369.       t$7 = ncols
 1369.       t$8 = kmax
 1384.       t$99 = _zla( 0, ncols )
 1369.       t$100 = _zla( 0, ncols )
 1384.       t$101 = _zla( 0, kmax )
 1369.       t$102 = _zla( 0, ncols ) * _zla( 0, kmax )
 1438.       t$105 = 8 * _zla( 0, ncols )
 1369.       t$103 = int( _alloc( 8 * _zla( 0, ncols ) ), 8 )
 1438.       t$104 = t$103
 1443.       if ( (dodia%base_addr)(71, 0) /= .false. ) then
 1443. !dir$ suppress o3mix(1, 1)
 1443.          t$532 = $_StaticDV_P0
 1443.          t$532%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( o3mix(1, 1) ) )
 1443.          t$532%header%el_len = 64
 1443.          t$532%header%assoc = 1
 1443.          t$532%header%ptr_alloc = 0
 1443.          t$532%header%p_or_a = 0
 1443.          t$532%header%a_contig = 1
 1443.          t$532%header%n_dim = 2
 1443.          t$532%header%orig_base = 0
 1443.          t$532%header%orig_size = 0
 1443.          t$532%header%n_codim = 0
 1443.          t$532%header%dv_versn = 2
 1443.          t$532%header%dv_smunit = 64
 1443.          t$532%header%d_type = 0
 1443.          t$532%header%n_params = 0
 1443.          t$532%header%d_type_idx = 13
 1443.          t$532%dim_1%LB = 1
 1443.          t$532%dim_1%EX = _zla( 0, ncols )
 1443.          t$532%dim_1%SM = 1
 1443.          t$532%dim_2%LB = 1
 1443.          t$532%dim_2%EX = _zla( 0, kmax )
 1443.          t$532%dim_2%SM = _zla( 0, ncols )
 1443.          call updia2d( t$532, 71, latco )
 1443.       endif
 1446.       if ( (dodia%base_addr)(103, 0) /= .false. ) then
 1447.          $F_A33 = ncols
 1447.          if ( ncols > 0 ) then
 1447.             $I_A1 = 0
 1447. !dir$ ivdep
 1447.             do
 1447.                bfr1(1 + $I_A1) = 0.0
 1447.                $I_A1 = 1 + $I_A1
 1447.                if ( $I_A1 >= $F_A33 ) exit
 1447.             enddo
 1447.          endif
 1448.          if ( kmax > 0 ) then
 1450.             if ( ncols > 0 ) then
 1448.                $I_L1448_58 = 0
 1448.                do
 1449.                   $rfac2_S2 = 476697.64693877549 * delsig(1 + $I_L1448_58)
 1450.                   $I_L1450_40 = 0
 1450. !dir$ ivdep
 1450.                   do
 1451.                      bfr1(1 + $I_L1450_40) = bfr1(1 + $I_L1450_40) + $rfac2_S2 * gps(1 + $I_L1450_40) * o3mix(1 + $I_L1450_40, 1 + $I_L1448_58)
 1452.                      $I_L1450_40 = 1 + $I_L1450_40
 1450.                      if ( $I_L1450_40 >= ncols ) exit
 1450.                   enddo
 1453.                   $I_L1448_58 = 1 + $I_L1448_58
 1452.                   if ( $I_L1448_58 >= kmax ) exit
 1452.                enddo
 1452.             endif
 1452.          endif
 1454. !dir$ suppress bfr1(1)
 1454.          t$539 = $_StaticDV_P1
 1454.          t$539%base_addr = pointer to array[1] of real (kind=8)( loc( bfr1(1) ) )
 1454.          t$539%header%el_len = 64
 1454.          t$539%header%assoc = 1
 1454.          t$539%header%ptr_alloc = 0
 1454.          t$539%header%p_or_a = 0
 1454.          t$539%header%a_contig = 1
 1454.          t$539%header%n_dim = 1
 1454.          t$539%header%orig_base = 0
 1454.          t$539%header%orig_size = 0
 1454.          t$539%header%n_codim = 0
 1454.          t$539%header%dv_versn = 2
 1454.          t$539%header%dv_smunit = 64
 1454.          t$539%header%d_type = 0
 1454.          t$539%header%n_params = 0
 1454.          t$539%header%d_type_idx = 13
 1454.          t$539%dim_1%LB = 1
 1454.          t$539%dim_1%EX = _zla( 0, ncols )
 1454.          t$539%dim_1%SM = 1
 1454.          call updia1d( t$539, 103, latco )
 1454.       endif
 1459.       if ( (dodia%base_addr)(72, 0) /= .false. ) then
 1459. !dir$ suppress cldcovtot(1, 1)
 1459.          t$540 = $_StaticDV_P2
 1459.          t$540%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( cldcovtot(1, 1) ) )
 1459.          t$540%header%el_len = 64
 1459.          t$540%header%assoc = 1
 1459.          t$540%header%ptr_alloc = 0
 1459.          t$540%header%p_or_a = 0
 1459.          t$540%header%a_contig = 1
 1459.          t$540%header%n_dim = 2
 1459.          t$540%header%orig_base = 0
 1459.          t$540%header%orig_size = 0
 1459.          t$540%header%n_codim = 0
 1459.          t$540%header%dv_versn = 2
 1459.          t$540%header%dv_smunit = 64
 1459.          t$540%header%d_type = 0
 1459.          t$540%header%n_params = 0
 1459.          t$540%header%d_type_idx = 13
 1459.          t$540%dim_1%LB = 1
 1459.          t$540%dim_1%EX = _zla( 0, ncols )
 1459.          t$540%dim_1%SM = 1
 1459.          t$540%dim_2%LB = 1
 1459.          t$540%dim_2%EX = _zla( 0, kmax )
 1459.          t$540%dim_2%SM = _zla( 0, ncols )
 1459.          call updia2d( t$540, 72, latco )
 1459.       endif
 1461.       if ( (dodia%base_addr)(73, 0) /= .false. ) then
 1461. !dir$ suppress cldcovinv(1, 1)
 1461.          t$541 = $_StaticDV_P3
 1461.          t$541%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( cldcovinv(1, 1) ) )
 1461.          t$541%header%el_len = 64
 1461.          t$541%header%assoc = 1
 1461.          t$541%header%ptr_alloc = 0
 1461.          t$541%header%p_or_a = 0
 1461.          t$541%header%a_contig = 1
 1461.          t$541%header%n_dim = 2
 1461.          t$541%header%orig_base = 0
 1461.          t$541%header%orig_size = 0
 1461.          t$541%header%n_codim = 0
 1461.          t$541%header%dv_versn = 2
 1461.          t$541%header%dv_smunit = 64
 1461.          t$541%header%d_type = 0
 1461.          t$541%header%n_params = 0
 1461.          t$541%header%d_type_idx = 13
 1461.          t$541%dim_1%LB = 1
 1461.          t$541%dim_1%EX = _zla( 0, ncols )
 1461.          t$541%dim_1%SM = 1
 1461.          t$541%dim_2%LB = 1
 1461.          t$541%dim_2%EX = _zla( 0, kmax )
 1461.          t$541%dim_2%SM = _zla( 0, ncols )
 1461.          call updia2d( t$541, 73, latco )
 1461.       endif
 1463.       if ( (dodia%base_addr)(74, 0) /= .false. ) then
 1463. !dir$ suppress cldcovsat(1, 1)
 1463.          t$542 = $_StaticDV_P4
 1463.          t$542%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( cldcovsat(1, 1) ) )
 1463.          t$542%header%el_len = 64
 1463.          t$542%header%assoc = 1
 1463.          t$542%header%ptr_alloc = 0
 1463.          t$542%header%p_or_a = 0
 1463.          t$542%header%a_contig = 1
 1463.          t$542%header%n_dim = 2
 1463.          t$542%header%orig_base = 0
 1463.          t$542%header%orig_size = 0
 1463.          t$542%header%n_codim = 0
 1463.          t$542%header%dv_versn = 2
 1463.          t$542%header%dv_smunit = 64
 1463.          t$542%header%d_type = 0
 1463.          t$542%header%n_params = 0
 1463.          t$542%header%d_type_idx = 13
 1463.          t$542%dim_1%LB = 1
 1463.          t$542%dim_1%EX = _zla( 0, ncols )
 1463.          t$542%dim_1%SM = 1
 1463.          t$542%dim_2%LB = 1
 1463.          t$542%dim_2%EX = _zla( 0, kmax )
 1463.          t$542%dim_2%SM = _zla( 0, ncols )
 1463.          call updia2d( t$542, 74, latco )
 1463.       endif
 1465.       if ( (dodia%base_addr)(75, 0) /= .false. ) then
 1465. !dir$ suppress cldcovcon(1, 1)
 1465.          t$543 = $_StaticDV_P5
 1465.          t$543%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( cldcovcon(1, 1) ) )
 1465.          t$543%header%el_len = 64
 1465.          t$543%header%assoc = 1
 1465.          t$543%header%ptr_alloc = 0
 1465.          t$543%header%p_or_a = 0
 1465.          t$543%header%a_contig = 1
 1465.          t$543%header%n_dim = 2
 1465.          t$543%header%orig_base = 0
 1465.          t$543%header%orig_size = 0
 1465.          t$543%header%n_codim = 0
 1465.          t$543%header%dv_versn = 2
 1465.          t$543%header%dv_smunit = 64
 1465.          t$543%header%d_type = 0
 1465.          t$543%header%n_params = 0
 1465.          t$543%header%d_type_idx = 13
 1465.          t$543%dim_1%LB = 1
 1465.          t$543%dim_1%EX = _zla( 0, ncols )
 1465.          t$543%dim_1%SM = 1
 1465.          t$543%dim_2%LB = 1
 1465.          t$543%dim_2%EX = _zla( 0, kmax )
 1465.          t$543%dim_2%SM = _zla( 0, ncols )
 1465.          call updia2d( t$543, 75, latco )
 1465.       endif
 1467.       if ( (dodia%base_addr)(76, 0) /= .false. ) then
 1467. !dir$ suppress cldcovsha(1, 1)
 1467.          t$544 = $_StaticDV_P6
 1467.          t$544%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( cldcovsha(1, 1) ) )
 1467.          t$544%header%el_len = 64
 1467.          t$544%header%assoc = 1
 1467.          t$544%header%ptr_alloc = 0
 1467.          t$544%header%p_or_a = 0
 1467.          t$544%header%a_contig = 1
 1467.          t$544%header%n_dim = 2
 1467.          t$544%header%orig_base = 0
 1467.          t$544%header%orig_size = 0
 1467.          t$544%header%n_codim = 0
 1467.          t$544%header%dv_versn = 2
 1467.          t$544%header%dv_smunit = 64
 1467.          t$544%header%d_type = 0
 1467.          t$544%header%n_params = 0
 1467.          t$544%header%d_type_idx = 13
 1467.          t$544%dim_1%LB = 1
 1467.          t$544%dim_1%EX = _zla( 0, ncols )
 1467.          t$544%dim_1%SM = 1
 1467.          t$544%dim_2%LB = 1
 1467.          t$544%dim_2%EX = _zla( 0, kmax )
 1467.          t$544%dim_2%SM = _zla( 0, ncols )
 1467.          call updia2d( t$544, 76, latco )
 1467.       endif
 1469.       if ( (dodia%base_addr)(77, 0) /= .false. ) then
 1469. !dir$ suppress cldliqwatpath(1, 1)
 1469.          t$545 = $_StaticDV_P7
 1469.          t$545%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( cldliqwatpath(1, 1) ) )
 1469.          t$545%header%el_len = 64
 1469.          t$545%header%assoc = 1
 1469.          t$545%header%ptr_alloc = 0
 1469.          t$545%header%p_or_a = 0
 1469.          t$545%header%a_contig = 1
 1469.          t$545%header%n_dim = 2
 1469.          t$545%header%orig_base = 0
 1469.          t$545%header%orig_size = 0
 1469.          t$545%header%n_codim = 0
 1469.          t$545%header%dv_versn = 2
 1469.          t$545%header%dv_smunit = 64
 1469.          t$545%header%d_type = 0
 1469.          t$545%header%n_params = 0
 1469.          t$545%header%d_type_idx = 13
 1469.          t$545%dim_1%LB = 1
 1469.          t$545%dim_1%EX = _zla( 0, ncols )
 1469.          t$545%dim_1%SM = 1
 1469.          t$545%dim_2%LB = 1
 1469.          t$545%dim_2%EX = _zla( 0, kmax )
 1469.          t$545%dim_2%SM = _zla( 0, ncols )
 1469.          call updia2d( t$545, 77, latco )
 1469.       endif
 1471.       if ( (dodia%base_addr)(79, 0) /= .false. ) then
 1471. !dir$ suppress taud(1, 1)
 1471.          t$546 = $_StaticDV_P8
 1471.          t$546%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( taud(1, 1) ) )
 1471.          t$546%header%el_len = 64
 1471.          t$546%header%assoc = 1
 1471.          t$546%header%ptr_alloc = 0
 1471.          t$546%header%p_or_a = 0
 1471.          t$546%header%a_contig = 1
 1471.          t$546%header%n_dim = 2
 1471.          t$546%header%orig_base = 0
 1471.          t$546%header%orig_size = 0
 1471.          t$546%header%n_codim = 0
 1471.          t$546%header%dv_versn = 2
 1471.          t$546%header%dv_smunit = 64
 1471.          t$546%header%d_type = 0
 1471.          t$546%header%n_params = 0
 1471.          t$546%header%d_type_idx = 13
 1471.          t$546%dim_1%LB = 1
 1471.          t$546%dim_1%EX = _zla( 0, ncols )
 1471.          t$546%dim_1%SM = 1
 1471.          t$546%dim_2%LB = 1
 1471.          t$546%dim_2%EX = _zla( 0, kmax )
 1471.          t$546%dim_2%SM = _zla( 0, ncols )
 1471.          call updia2d( t$546, 79, latco )
 1471.       endif
 1473.       if ( (dodia%base_addr)(78, 0) /= .false. ) then
 1473. !dir$ suppress emisd(1, 1)
 1473.          t$547 = $_StaticDV_P9
 1473.          t$547%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( emisd(1, 1) ) )
 1473.          t$547%header%el_len = 64
 1473.          t$547%header%assoc = 1
 1473.          t$547%header%ptr_alloc = 0
 1473.          t$547%header%p_or_a = 0
 1473.          t$547%header%a_contig = 1
 1473.          t$547%header%n_dim = 2
 1473.          t$547%header%orig_base = 0
 1473.          t$547%header%orig_size = 0
 1473.          t$547%header%n_codim = 0
 1473.          t$547%header%dv_versn = 2
 1473.          t$547%header%dv_smunit = 64
 1473.          t$547%header%d_type = 0
 1473.          t$547%header%n_params = 0
 1473.          t$547%header%d_type_idx = 13
 1473.          t$547%dim_1%LB = 1
 1473.          t$547%dim_1%EX = _zla( 0, ncols )
 1473.          t$547%dim_1%SM = 1
 1473.          t$547%dim_2%LB = 1
 1473.          t$547%dim_2%EX = _zla( 0, kmax )
 1473.          t$547%dim_2%SM = _zla( 0, ncols )
 1473.          call updia2d( t$547, 78, latco )
 1473.       endif
 1475.       if ( (dodia%base_addr)(20, 0) /= .false. ) then
 1475. !dir$ suppress cldsav(1)
 1475.          t$548 = $_StaticDV_P10
 1475.          t$548%base_addr = pointer to array[1] of real (kind=8)( loc( cldsav(1) ) )
 1475.          t$548%header%el_len = 64
 1475.          t$548%header%assoc = 1
 1475.          t$548%header%ptr_alloc = 0
 1475.          t$548%header%p_or_a = 0
 1475.          t$548%header%a_contig = 1
 1475.          t$548%header%n_dim = 1
 1475.          t$548%header%orig_base = 0
 1475.          t$548%header%orig_size = 0
 1475.          t$548%header%n_codim = 0
 1475.          t$548%header%dv_versn = 2
 1475.          t$548%header%dv_smunit = 64
 1475.          t$548%header%d_type = 0
 1475.          t$548%header%n_params = 0
 1475.          t$548%header%d_type_idx = 13
 1475.          t$548%dim_1%LB = 1
 1475.          t$548%dim_1%EX = _zla( 0, ncols )
 1475.          t$548%dim_1%SM = 1
 1475.          call updia1d( t$548, 20, latco )
 1475.       endif
 1479.       if ( (dodia%base_addr)(31, 0) /= .false. ) then
 1479. !dir$ suppress lwcoolrate(1, 1)
 1479.          t$549 = $_StaticDV_P11
 1479.          t$549%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( lwcoolrate(1, 1) ) )
 1479.          t$549%header%el_len = 64
 1479.          t$549%header%assoc = 1
 1479.          t$549%header%ptr_alloc = 0
 1479.          t$549%header%p_or_a = 0
 1479.          t$549%header%a_contig = 1
 1479.          t$549%header%n_dim = 2
 1479.          t$549%header%orig_base = 0
 1479.          t$549%header%orig_size = 0
 1479.          t$549%header%n_codim = 0
 1479.          t$549%header%dv_versn = 2
 1479.          t$549%header%dv_smunit = 64
 1479.          t$549%header%d_type = 0
 1479.          t$549%header%n_params = 0
 1479.          t$549%header%d_type_idx = 13
 1479.          t$549%dim_1%LB = 1
 1479.          t$549%dim_1%EX = _zla( 0, ncols )
 1479.          t$549%dim_1%SM = 1
 1479.          t$549%dim_2%LB = 1
 1479.          t$549%dim_2%EX = _zla( 0, kmax )
 1479.          t$549%dim_2%SM = _zla( 0, ncols )
 1479.          call updia2d( t$549, 31, latco )
 1479.       endif
 1481.       if ( (dodia%base_addr)(95, 0) /= .false. ) then
 1481. !dir$ suppress lwcoolratec(1, 1)
 1481.          t$550 = $_StaticDV_P12
 1481.          t$550%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( lwcoolratec(1, 1) ) )
 1481.          t$550%header%el_len = 64
 1481.          t$550%header%assoc = 1
 1481.          t$550%header%ptr_alloc = 0
 1481.          t$550%header%p_or_a = 0
 1481.          t$550%header%a_contig = 1
 1481.          t$550%header%n_dim = 2
 1481.          t$550%header%orig_base = 0
 1481.          t$550%header%orig_size = 0
 1481.          t$550%header%n_codim = 0
 1481.          t$550%header%dv_versn = 2
 1481.          t$550%header%dv_smunit = 64
 1481.          t$550%header%d_type = 0
 1481.          t$550%header%n_params = 0
 1481.          t$550%header%d_type_idx = 13
 1481.          t$550%dim_1%LB = 1
 1481.          t$550%dim_1%EX = _zla( 0, ncols )
 1481.          t$550%dim_1%SM = 1
 1481.          t$550%dim_2%LB = 1
 1481.          t$550%dim_2%EX = _zla( 0, kmax )
 1481.          t$550%dim_2%SM = _zla( 0, ncols )
 1481.          call updia2d( t$550, 95, latco )
 1481.       endif
 1485.       if ( (dodia%base_addr)(30, 0) /= .false. ) then
 1485. !dir$ suppress lwsfcnet(1)
 1485.          t$551 = $_StaticDV_P13
 1485.          t$551%base_addr = pointer to array[1] of real (kind=8)( loc( lwsfcnet(1) ) )
 1485.          t$551%header%el_len = 64
 1485.          t$551%header%assoc = 1
 1485.          t$551%header%ptr_alloc = 0
 1485.          t$551%header%p_or_a = 0
 1485.          t$551%header%a_contig = 1
 1485.          t$551%header%n_dim = 1
 1485.          t$551%header%orig_base = 0
 1485.          t$551%header%orig_size = 0
 1485.          t$551%header%n_codim = 0
 1485.          t$551%header%dv_versn = 2
 1485.          t$551%header%dv_smunit = 64
 1485.          t$551%header%d_type = 0
 1485.          t$551%header%n_params = 0
 1485.          t$551%header%d_type_idx = 13
 1485.          t$551%dim_1%LB = 1
 1485.          t$551%dim_1%EX = _zla( 0, ncols )
 1485.          t$551%dim_1%SM = 1
 1485.          call updia1d( t$551, 30, latco )
 1485.       endif
 1487.       if ( (dodia%base_addr)(63, 0) /= .false. ) then
 1487. !dir$ suppress lwsfcnetc(1)
 1487.          t$552 = $_StaticDV_P14
 1487.          t$552%base_addr = pointer to array[1] of real (kind=8)( loc( lwsfcnetc(1) ) )
 1487.          t$552%header%el_len = 64
 1487.          t$552%header%assoc = 1
 1487.          t$552%header%ptr_alloc = 0
 1487.          t$552%header%p_or_a = 0
 1487.          t$552%header%a_contig = 1
 1487.          t$552%header%n_dim = 1
 1487.          t$552%header%orig_base = 0
 1487.          t$552%header%orig_size = 0
 1487.          t$552%header%n_codim = 0
 1487.          t$552%header%dv_versn = 2
 1487.          t$552%header%dv_smunit = 64
 1487.          t$552%header%d_type = 0
 1487.          t$552%header%n_params = 0
 1487.          t$552%header%d_type_idx = 13
 1487.          t$552%dim_1%LB = 1
 1487.          t$552%dim_1%EX = _zla( 0, ncols )
 1487.          t$552%dim_1%SM = 1
 1487.          call updia1d( t$552, 63, latco )
 1487.       endif
 1491.       if ( (dodia%base_addr)(21, 0) /= .false. ) then
 1491. !dir$ suppress lwsfcdown(1)
 1491.          t$553 = $_StaticDV_P15
 1491.          t$553%base_addr = pointer to array[1] of real (kind=8)( loc( lwsfcdown(1) ) )
 1491.          t$553%header%el_len = 64
 1491.          t$553%header%assoc = 1
 1491.          t$553%header%ptr_alloc = 0
 1491.          t$553%header%p_or_a = 0
 1491.          t$553%header%a_contig = 1
 1491.          t$553%header%n_dim = 1
 1491.          t$553%header%orig_base = 0
 1491.          t$553%header%orig_size = 0
 1491.          t$553%header%n_codim = 0
 1491.          t$553%header%dv_versn = 2
 1491.          t$553%header%dv_smunit = 64
 1491.          t$553%header%d_type = 0
 1491.          t$553%header%n_params = 0
 1491.          t$553%header%d_type_idx = 13
 1491.          t$553%dim_1%LB = 1
 1491.          t$553%dim_1%EX = _zla( 0, ncols )
 1491.          t$553%dim_1%SM = 1
 1491.          call updia1d( t$553, 21, latco )
 1491.       endif
 1493.       if ( (dodia%base_addr)(56, 0) /= .false. ) then
 1493. !dir$ suppress lwsfcdownc(1)
 1493.          t$554 = $_StaticDV_P16
 1493.          t$554%base_addr = pointer to array[1] of real (kind=8)( loc( lwsfcdownc(1) ) )
 1493.          t$554%header%el_len = 64
 1493.          t$554%header%assoc = 1
 1493.          t$554%header%ptr_alloc = 0
 1493.          t$554%header%p_or_a = 0
 1493.          t$554%header%a_contig = 1
 1493.          t$554%header%n_dim = 1
 1493.          t$554%header%orig_base = 0
 1493.          t$554%header%orig_size = 0
 1493.          t$554%header%n_codim = 0
 1493.          t$554%header%dv_versn = 2
 1493.          t$554%header%dv_smunit = 64
 1493.          t$554%header%d_type = 0
 1493.          t$554%header%n_params = 0
 1493.          t$554%header%d_type_idx = 13
 1493.          t$554%dim_1%LB = 1
 1493.          t$554%dim_1%EX = _zla( 0, ncols )
 1493.          t$554%dim_1%SM = 1
 1493.          call updia1d( t$554, 56, latco )
 1493.       endif
 1495.       if ( (dodia%base_addr)(23, 0) /= .false. ) then
 1495. !dir$ suppress lwtoaup(1)
 1495.          t$555 = $_StaticDV_P17
 1495.          t$555%base_addr = pointer to array[1] of real (kind=8)( loc( lwtoaup(1) ) )
 1495.          t$555%header%el_len = 64
 1495.          t$555%header%assoc = 1
 1495.          t$555%header%ptr_alloc = 0
 1495.          t$555%header%p_or_a = 0
 1495.          t$555%header%a_contig = 1
 1495.          t$555%header%n_dim = 1
 1495.          t$555%header%orig_base = 0
 1495.          t$555%header%orig_size = 0
 1495.          t$555%header%n_codim = 0
 1495.          t$555%header%dv_versn = 2
 1495.          t$555%header%dv_smunit = 64
 1495.          t$555%header%d_type = 0
 1495.          t$555%header%n_params = 0
 1495.          t$555%header%d_type_idx = 13
 1495.          t$555%dim_1%LB = 1
 1495.          t$555%dim_1%EX = _zla( 0, ncols )
 1495.          t$555%dim_1%SM = 1
 1495.          call updia1d( t$555, 23, latco )
 1495.       endif
 1497.       if ( (dodia%base_addr)(57, 0) /= .false. ) then
 1497. !dir$ suppress lwtoaupc(1)
 1497.          t$556 = $_StaticDV_P18
 1497.          t$556%base_addr = pointer to array[1] of real (kind=8)( loc( lwtoaupc(1) ) )
 1497.          t$556%header%el_len = 64
 1497.          t$556%header%assoc = 1
 1497.          t$556%header%ptr_alloc = 0
 1497.          t$556%header%p_or_a = 0
 1497.          t$556%header%a_contig = 1
 1497.          t$556%header%n_dim = 1
 1497.          t$556%header%orig_base = 0
 1497.          t$556%header%orig_size = 0
 1497.          t$556%header%n_codim = 0
 1497.          t$556%header%dv_versn = 2
 1497.          t$556%header%dv_smunit = 64
 1497.          t$556%header%d_type = 0
 1497.          t$556%header%n_params = 0
 1497.          t$556%header%d_type_idx = 13
 1497.          t$556%dim_1%LB = 1
 1497.          t$556%dim_1%EX = _zla( 0, ncols )
 1497.          t$556%dim_1%SM = 1
 1497.          call updia1d( t$556, 57, latco )
 1497.       endif
 1501.       if ( (dodia%base_addr)(32, 0) /= .false. ) then
 1501. !dir$ suppress yswheatrate(1, 1)
 1501.          t$557 = $_StaticDV_P19
 1501.          t$557%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( yswheatrate(1, 1) ) )
 1501.          t$557%header%el_len = 64
 1501.          t$557%header%assoc = 1
 1501.          t$557%header%ptr_alloc = 0
 1501.          t$557%header%p_or_a = 0
 1501.          t$557%header%a_contig = 1
 1501.          t$557%header%n_dim = 2
 1501.          t$557%header%orig_base = 0
 1501.          t$557%header%orig_size = 0
 1501.          t$557%header%n_codim = 0
 1501.          t$557%header%dv_versn = 2
 1501.          t$557%header%dv_smunit = 64
 1501.          t$557%header%d_type = 0
 1501.          t$557%header%n_params = 0
 1501.          t$557%header%d_type_idx = 13
 1501.          t$557%dim_1%LB = 1
 1501.          t$557%dim_1%EX = _zla( 0, ncols )
 1501.          t$557%dim_1%SM = 1
 1501.          t$557%dim_2%LB = 1
 1501.          t$557%dim_2%EX = _zla( 0, kmax )
 1501.          t$557%dim_2%SM = _zla( 0, ncols )
 1501.          call updia2d( t$557, 32, latco )
 1501.       endif
 1503.       if ( (dodia%base_addr)(96, 0) /= .false. ) then
 1503. !dir$ suppress yswheatratec(1, 1)
 1503.          t$558 = $_StaticDV_P20
 1503.          t$558%base_addr = pointer to array[1] of array[1] of real (kind=8)( loc( yswheatratec(1, 1) ) )
 1503.          t$558%header%el_len = 64
 1503.          t$558%header%assoc = 1
 1503.          t$558%header%ptr_alloc = 0
 1503.          t$558%header%p_or_a = 0
 1503.          t$558%header%a_contig = 1
 1503.          t$558%header%n_dim = 2
 1503.          t$558%header%orig_base = 0
 1503.          t$558%header%orig_size = 0
 1503.          t$558%header%n_codim = 0
 1503.          t$558%header%dv_versn = 2
 1503.          t$558%header%dv_smunit = 64
 1503.          t$558%header%d_type = 0
 1503.          t$558%header%n_params = 0
 1503.          t$558%header%d_type_idx = 13
 1503.          t$558%dim_1%LB = 1
 1503.          t$558%dim_1%EX = _zla( 0, ncols )
 1503.          t$558%dim_1%SM = 1
 1503.          t$558%dim_2%LB = 1
 1503.          t$558%dim_2%EX = _zla( 0, kmax )
 1503.          t$558%dim_2%SM = _zla( 0, ncols )
 1503.          call updia2d( t$558, 96, latco )
 1503.       endif
 1508.       if ( (dodia%base_addr)(25, 0) /= .false. ) then
 1509.          if ( ncols > 0 ) then
 1509.             $I_L1509_42 = 0
 1509. !dir$ ivdep
 1509.             do
 1510.                bfr1(1 + $I_L1509_42) = xnirbeam(1 + $I_L1509_42) + xnirdiff(1 + $I_L1509_42) + xvisdiff(1 + $I_L1509_42) + xvisbeam(1 + $I_L1509_42)
 1511.                $I_L1509_42 = 1 + $I_L1509_42
 1509.                if ( $I_L1509_42 >= ncols ) exit
 1509.             enddo
 1509.          endif
 1512. !dir$ suppress bfr1(1)
 1512.          t$562 = $_StaticDV_P21
 1512.          t$562%base_addr = pointer to array[1] of real (kind=8)( loc( bfr1(1) ) )
 1512.          t$562%header%el_len = 64
 1512.          t$562%header%assoc = 1
 1512.          t$562%header%ptr_alloc = 0
 1512.          t$562%header%p_or_a = 0
 1512.          t$562%header%a_contig = 1
 1512.          t$562%header%n_dim = 1
 1512.          t$562%header%orig_base = 0
 1512.          t$562%header%orig_size = 0
 1512.          t$562%header%n_codim = 0
 1512.          t$562%header%dv_versn = 2
 1512.          t$562%header%dv_smunit = 64
 1512.          t$562%header%d_type = 0
 1512.          t$562%header%n_params = 0
 1512.          t$562%header%d_type_idx = 13
 1512.          t$562%dim_1%LB = 1
 1512.          t$562%dim_1%EX = _zla( 0, ncols )
 1512.          t$562%dim_1%SM = 1
 1512.          call updia1d( t$562, 25, latco )
 1512.       endif
 1516.       if ( (dodia%base_addr)(58, 0) /= .false. ) then
 1517.          if ( ncols > 0 ) then
 1517.             $I_L1517_44 = 0
 1517. !dir$ ivdep
 1517.             do
 1518.                bfr1(1 + $I_L1517_44) = xnirbeamc(1 + $I_L1517_44) + xnirdiffc(1 + $I_L1517_44) + xvisdiffc(1 + $I_L1517_44) + xvisbeamc(1 + $I_L1517_44)
 1519.                $I_L1517_44 = 1 + $I_L1517_44
 1517.                if ( $I_L1517_44 >= ncols ) exit
 1517.             enddo
 1517.          endif
 1520. !dir$ suppress bfr1(1)
 1520.          t$566 = $_StaticDV_P22
 1520.          t$566%base_addr = pointer to array[1] of real (kind=8)( loc( bfr1(1) ) )
 1520.          t$566%header%el_len = 64
 1520.          t$566%header%assoc = 1
 1520.          t$566%header%ptr_alloc = 0
 1520.          t$566%header%p_or_a = 0
 1520.          t$566%header%a_contig = 1
 1520.          t$566%header%n_dim = 1
 1520.          t$566%header%orig_base = 0
 1520.          t$566%header%orig_size = 0
 1520.          t$566%header%n_codim = 0
 1520.          t$566%header%dv_versn = 2
 1520.          t$566%header%dv_smunit = 64
 1520.          t$566%header%d_type = 0
 1520.          t$566%header%n_params = 0
 1520.          t$566%header%d_type_idx = 13
 1520.          t$566%dim_1%LB = 1
 1520.          t$566%dim_1%EX = _zla( 0, ncols )
 1520.          t$566%dim_1%SM = 1
 1520.          call updia1d( t$566, 58, latco )
 1520.       endif
 1524.       if ( (dodia%base_addr)(26, 0) /= .false. ) then
 1525.          if ( ncols > 0 ) then
 1525.             $I_L1525_46 = 0
 1525. !dir$ ivdep
 1525.             do
 1526.                bfr1(1 + $I_L1525_46) = xnirbeam(1 + $I_L1525_46) * albnirbeam(1 + $I_L1525_46) + xnirdiff(1 + $I_L1525_46) * albnirdiff(1 + $I_L1525_46) + xvisdiff(1 + $I_L1525_46) * albvisdiff(1 + $I_L1525_46) + xvisbeam(1 + $I_L1525_46) * albvisbeam(1 + $I_L1525_46)
 1528.                $I_L1525_46 = 1 + $I_L1525_46
 1525.                if ( $I_L1525_46 >= ncols ) exit
 1525.             enddo
 1525.          endif
 1529. !dir$ suppress bfr1(1)
 1529.          t$570 = $_StaticDV_P23
 1529.          t$570%base_addr = pointer to array[1] of real (kind=8)( loc( bfr1(1) ) )
 1529.          t$570%header%el_len = 64
 1529.          t$570%header%assoc = 1
 1529.          t$570%header%ptr_alloc = 0
 1529.          t$570%header%p_or_a = 0
 1529.          t$570%header%a_contig = 1
 1529.          t$570%header%n_dim = 1
 1529.          t$570%header%orig_base = 0
 1529.          t$570%header%orig_size = 0
 1529.          t$570%header%n_codim = 0
 1529.          t$570%header%dv_versn = 2
 1529.          t$570%header%dv_smunit = 64
 1529.          t$570%header%d_type = 0
 1529.          t$570%header%n_params = 0
 1529.          t$570%header%d_type_idx = 13
 1529.          t$570%dim_1%LB = 1
 1529.          t$570%dim_1%EX = _zla( 0, ncols )
 1529.          t$570%dim_1%SM = 1
 1529.          call updia1d( t$570, 26, latco )
 1529.       endif
 1533.       if ( (dodia%base_addr)(59, 0) /= .false. ) then
 1534.          if ( ncols > 0 ) then
 1534.             $I_L1534_48 = 0
 1534. !dir$ ivdep
 1534.             do
 1535.                bfr1(1 + $I_L1534_48) = xnirbeamc(1 + $I_L1534_48) * albnirbeam(1 + $I_L1534_48) + xnirdiffc(1 + $I_L1534_48) * albnirdiff(1 + $I_L1534_48) + xvisdiffc(1 + $I_L1534_48) * albvisdiff(1 + $I_L1534_48) + xvisbeamc(1 + $I_L1534_48) * albvisbeam(1 + $I_L1534_48)
 1537.                $I_L1534_48 = 1 + $I_L1534_48
 1534.                if ( $I_L1534_48 >= ncols ) exit
 1534.             enddo
 1534.          endif
 1538. !dir$ suppress bfr1(1)
 1538.          t$574 = $_StaticDV_P24
 1538.          t$574%base_addr = pointer to array[1] of real (kind=8)( loc( bfr1(1) ) )
 1538.          t$574%header%el_len = 64
 1538.          t$574%header%assoc = 1
 1538.          t$574%header%ptr_alloc = 0
 1538.          t$574%header%p_or_a = 0
 1538.          t$574%header%a_contig = 1
 1538.          t$574%header%n_dim = 1
 1538.          t$574%header%orig_base = 0
 1538.          t$574%header%orig_size = 0
 1538.          t$574%header%n_codim = 0
 1538.          t$574%header%dv_versn = 2
 1538.          t$574%header%dv_smunit = 64
 1538.          t$574%header%d_type = 0
 1538.          t$574%header%n_params = 0
 1538.          t$574%header%d_type_idx = 13
 1538.          t$574%dim_1%LB = 1
 1538.          t$574%dim_1%EX = _zla( 0, ncols )
 1538.          t$574%dim_1%SM = 1
 1538.          call updia1d( t$574, 59, latco )
 1538.       endif
 1541.       if ( (dodia%base_addr)(27, 0) /= .false. ) then
 1541. !dir$ suppress swtoaup(1)
 1541.          t$575 = $_StaticDV_P25
 1541.          t$575%base_addr = pointer to array[1] of real (kind=8)( loc( swtoaup(1) ) )
 1541.          t$575%header%el_len = 64
 1541.          t$575%header%assoc = 1
 1541.          t$575%header%ptr_alloc = 0
 1541.          t$575%header%p_or_a = 0
 1541.          t$575%header%a_contig = 1
 1541.          t$575%header%n_dim = 1
 1541.          t$575%header%orig_base = 0
 1541.          t$575%header%orig_size = 0
 1541.          t$575%header%n_codim = 0
 1541.          t$575%header%dv_versn = 2
 1541.          t$575%header%dv_smunit = 64
 1541.          t$575%header%d_type = 0
 1541.          t$575%header%n_params = 0
 1541.          t$575%header%d_type_idx = 13
 1541.          t$575%dim_1%LB = 1
 1541.          t$575%dim_1%EX = _zla( 0, ncols )
 1541.          t$575%dim_1%SM = 1
 1541.          call updia1d( t$575, 27, latco )
 1541.       endif
 1543.       if ( (dodia%base_addr)(60, 0) /= .false. ) then
 1543. !dir$ suppress swtoaupc(1)
 1543.          t$576 = $_StaticDV_P26
 1543.          t$576%base_addr = pointer to array[1] of real (kind=8)( loc( swtoaupc(1) ) )
 1543.          t$576%header%el_len = 64
 1543.          t$576%header%assoc = 1
 1543.          t$576%header%ptr_alloc = 0
 1543.          t$576%header%p_or_a = 0
 1543.          t$576%header%a_contig = 1
 1543.          t$576%header%n_dim = 1
 1543.          t$576%header%orig_base = 0
 1543.          t$576%header%orig_size = 0
 1543.          t$576%header%n_codim = 0
 1543.          t$576%header%dv_versn = 2
 1543.          t$576%header%dv_smunit = 64
 1543.          t$576%header%d_type = 0
 1543.          t$576%header%n_params = 0
 1543.          t$576%header%d_type_idx = 13
 1543.          t$576%dim_1%LB = 1
 1543.          t$576%dim_1%EX = _zla( 0, ncols )
 1543.          t$576%dim_1%SM = 1
 1543.          call updia1d( t$576, 60, latco )
 1543.       endif
 1545.       if ( (dodia%base_addr)(24, 0) /= .false. ) then
 1545. !dir$ suppress xswtoadown(1)
 1545.          t$577 = $_StaticDV_P27
 1545.          t$577%base_addr = pointer to array[1] of real (kind=8)( loc( xswtoadown(1) ) )
 1545.          t$577%header%el_len = 64
 1545.          t$577%header%assoc = 1
 1545.          t$577%header%ptr_alloc = 0
 1545.          t$577%header%p_or_a = 0
 1545.          t$577%header%a_contig = 1
 1545.          t$577%header%n_dim = 1
 1545.          t$577%header%orig_base = 0
 1545.          t$577%header%orig_size = 0
 1545.          t$577%header%n_codim = 0
 1545.          t$577%header%dv_versn = 2
 1545.          t$577%header%dv_smunit = 64
 1545.          t$577%header%d_type = 0
 1545.          t$577%header%n_params = 0
 1545.          t$577%header%d_type_idx = 13
 1545.          t$577%dim_1%LB = 1
 1545.          t$577%dim_1%EX = _zla( 0, ncols )
 1545.          t$577%dim_1%SM = 1
 1545.          call updia1d( t$577, 24, latco )
 1545.       endif
 1550.       if ( (dodia%base_addr)(28, 0) /= .false. ) then
 1551.          if ( ncols > 0 ) then
 1551.             $I_L1551_50 = 0
 1551. !dir$ ivdep
 1551.             do
 1552.                bfr1(1 + $I_L1551_50) = xswtoadown(1 + $I_L1551_50) + -swtoaup(1 + $I_L1551_50)
 1553.                $I_L1551_50 = 1 + $I_L1551_50
 1551.                if ( $I_L1551_50 >= ncols ) exit
 1551.             enddo
 1551.          endif
 1554. !dir$ suppress bfr1(1)
 1554.          t$581 = $_StaticDV_P28
 1554.          t$581%base_addr = pointer to array[1] of real (kind=8)( loc( bfr1(1) ) )
 1554.          t$581%header%el_len = 64
 1554.          t$581%header%assoc = 1
 1554.          t$581%header%ptr_alloc = 0
 1554.          t$581%header%p_or_a = 0
 1554.          t$581%header%a_contig = 1
 1554.          t$581%header%n_dim = 1
 1554.          t$581%header%orig_base = 0
 1554.          t$581%header%orig_size = 0
 1554.          t$581%header%n_codim = 0
 1554.          t$581%header%dv_versn = 2
 1554.          t$581%header%dv_smunit = 64
 1554.          t$581%header%d_type = 0
 1554.          t$581%header%n_params = 0
 1554.          t$581%header%d_type_idx = 13
 1554.          t$581%dim_1%LB = 1
 1554.          t$581%dim_1%EX = _zla( 0, ncols )
 1554.          t$581%dim_1%SM = 1
 1554.          call updia1d( t$581, 28, latco )
 1554.       endif
 1558.       if ( (dodia%base_addr)(61, 0) /= .false. ) then
 1559.          if ( ncols > 0 ) then
 1559.             $I_L1559_52 = 0
 1559. !dir$ ivdep
 1559.             do
 1560.                bfr1(1 + $I_L1559_52) = xswtoadown(1 + $I_L1559_52) + -swtoaupc(1 + $I_L1559_52)
 1561.                $I_L1559_52 = 1 + $I_L1559_52
 1559.                if ( $I_L1559_52 >= ncols ) exit
 1559.             enddo
 1559.          endif
 1562. !dir$ suppress bfr1(1)
 1562.          t$585 = $_StaticDV_P29
 1562.          t$585%base_addr = pointer to array[1] of real (kind=8)( loc( bfr1(1) ) )
 1562.          t$585%header%el_len = 64
 1562.          t$585%header%assoc = 1
 1562.          t$585%header%ptr_alloc = 0
 1562.          t$585%header%p_or_a = 0
 1562.          t$585%header%a_contig = 1
 1562.          t$585%header%n_dim = 1
 1562.          t$585%header%orig_base = 0
 1562.          t$585%header%orig_size = 0
 1562.          t$585%header%n_codim = 0
 1562.          t$585%header%dv_versn = 2
 1562.          t$585%header%dv_smunit = 64
 1562.          t$585%header%d_type = 0
 1562.          t$585%header%n_params = 0
 1562.          t$585%header%d_type_idx = 13
 1562.          t$585%dim_1%LB = 1
 1562.          t$585%dim_1%EX = _zla( 0, ncols )
 1562.          t$585%dim_1%SM = 1
 1562.          call updia1d( t$585, 61, latco )
 1562.       endif
 1565.       if ( (dodia%base_addr)(29, 0) /= .false. ) then
 1566.          if ( ncols > 0 ) then
 1566.             $I_L1566_54 = 0
 1566. !dir$ ivdep
 1566.             do
 1567.                bfr1(1 + $I_L1566_54) = xnirbeam(1 + $I_L1566_54) * ( 1.0 + -albnirbeam(1 + $I_L1566_54) ) + xnirdiff(1 + $I_L1566_54) * ( 1.0 + -albnirdiff(1 + $I_L1566_54) ) + xvisdiff(1 + $I_L1566_54) * ( 1.0 + -albvisdiff(1 + $I_L1566_54) ) + xvisbeam(1 + $I_L1566_54) * ( 1.0 + -albvisbeam(1 + $I_L1566_54) )
 1571.                $I_L1566_54 = 1 + $I_L1566_54
 1566.                if ( $I_L1566_54 >= ncols ) exit
 1566.             enddo
 1566.          endif
 1572. !dir$ suppress bfr1(1)
 1572.          t$589 = $_StaticDV_P30
 1572.          t$589%base_addr = pointer to array[1] of real (kind=8)( loc( bfr1(1) ) )
 1572.          t$589%header%el_len = 64
 1572.          t$589%header%assoc = 1
 1572.          t$589%header%ptr_alloc = 0
 1572.          t$589%header%p_or_a = 0
 1572.          t$589%header%a_contig = 1
 1572.          t$589%header%n_dim = 1
 1572.          t$589%header%orig_base = 0
 1572.          t$589%header%orig_size = 0
 1572.          t$589%header%n_codim = 0
 1572.          t$589%header%dv_versn = 2
 1572.          t$589%header%dv_smunit = 64
 1572.          t$589%header%d_type = 0
 1572.          t$589%header%n_params = 0
 1572.          t$589%header%d_type_idx = 13
 1572.          t$589%dim_1%LB = 1
 1572.          t$589%dim_1%EX = _zla( 0, ncols )
 1572.          t$589%dim_1%SM = 1
 1572.          call updia1d( t$589, 29, latco )
 1572.       endif
 1576.       if ( (dodia%base_addr)(62, 0) /= .false. ) then
 1577.          if ( ncols > 0 ) then
 1577.             $I_L1577_56 = 0
 1577. !dir$ ivdep
 1577.             do
 1578.                bfr1(1 + $I_L1577_56) = xnirbeamc(1 + $I_L1577_56) * ( 1.0 + -albnirbeam(1 + $I_L1577_56) ) + xnirdiffc(1 + $I_L1577_56) * ( 1.0 + -albnirdiff(1 + $I_L1577_56) ) + xvisdiffc(1 + $I_L1577_56) * ( 1.0 + -albvisdiff(1 + $I_L1577_56) ) + xvisbeamc(1 + $I_L1577_56) * ( 1.0 + -albvisbeam(1 + $I_L1577_56) )
 1582.                $I_L1577_56 = 1 + $I_L1577_56
 1577.                if ( $I_L1577_56 >= ncols ) exit
 1577.             enddo
 1577.          endif
 1583. !dir$ suppress bfr1(1)
 1583.          t$593 = $_StaticDV_P31
 1583.          t$593%base_addr = pointer to array[1] of real (kind=8)( loc( bfr1(1) ) )
 1583.          t$593%header%el_len = 64
 1583.          t$593%header%assoc = 1
 1583.          t$593%header%ptr_alloc = 0
 1583.          t$593%header%p_or_a = 0
 1583.          t$593%header%a_contig = 1
 1583.          t$593%header%n_dim = 1
 1583.          t$593%header%orig_base = 0
 1583.          t$593%header%orig_size = 0
 1583.          t$593%header%n_codim = 0
 1583.          t$593%header%dv_versn = 2
 1583.          t$593%header%dv_smunit = 64
 1583.          t$593%header%d_type = 0
 1583.          t$593%header%n_params = 0
 1583.          t$593%header%d_type_idx = 13
 1583.          t$593%dim_1%LB = 1
 1583.          t$593%dim_1%EX = _zla( 0, ncols )
 1583.          t$593%dim_1%SM = 1
 1583.          call updia1d( t$593, 62, latco )
 1583.       endif
 1369.       _free( t$103 )
 1586.       return
 1586.       end
 1586.       
 1588.       
 1588.       subroutine destroyradiationdriver
 1592.       return
 1592.       end
 1592.       
 1597.       
 1597.       subroutine rqvirt( ncols, kmax, sig, gps, tin, qin, tout, qout, relhum )
 1597.       t$9 = kmax
 1646.       t$106 = _zla( 0, kmax )
 1597.       t$10 = ncols
 1648.       t$107 = _zla( 0, ncols )
 1597.       t$108 = _zla( 0, ncols )
 1597.       t$109 = _zla( 0, kmax ) * _zla( 0, ncols )
 1659.       t$112 = 8 * _zla( 0, kmax ) * _zla( 0, ncols )
 1658.       t$113 = 8 * ( 7 + 8 * _zla( 0, kmax ) * _zla( 0, ncols ) ) / 8
 1658.       t$115 = t$113 + 8 * _zla( 0, kmax ) * _zla( 0, ncols )
 1597.       t$110 = int( _alloc( t$113 + 8 * _zla( 0, kmax ) * _zla( 0, ncols ) ), 8 )
 1659.       t$111 = t$110
 1658.       t$114 = t$113 + t$110
 1671.       $k1_S1 = 1
 1671.       if ( mod( kmax, 4 ) > 0 ) then
 1671.          $I_L1671_72 = 0
 1671.          do
 1672.             $F_A33 = ncols
 1672.             if ( ncols > 0 ) then
 1672.                $SCA_sig_I0 = sig(1 + $I_L1671_72)
 1672.                $I_L1672_54 = 0
 1672. !dir$ ivdep
 1672.                do
 1672.                   prs(1 + $I_L1672_54, 1 + $I_L1671_72) = $SCA_sig_I0 * gps(1 + $I_L1672_54)
 1672.                   $I_L1672_54 = 1 + $I_L1672_54
 1672.                   if ( $I_L1672_54 >= $F_A33 ) exit
 1672.                enddo
 1672.             endif
 1673.             $I_L1671_72 = 1 + $I_L1671_72
 1671.             if ( $I_L1671_72 >= mod( kmax, 4 ) ) exit
 1671.          enddo
 1673.          $k1_S1 = ( 1 + mod( kmax, 4 ) )
 1673.       endif
 1674.       if ( kmax + -$k1_S1 >= 0 ) then
 1674.          $I_L1674_74 = 0
 1674.          do
 1675.             $F_A34 = ncols
 1675.             if ( ncols > 0 ) then
 1675.                $SCA_sig_I1 = sig($k1_S1 + 4 * $I_L1674_74)
 1675.                $I_L1675_56 = 0
 1675. !dir$ ivdep
 1675.                do
 1675.                   prs(1 + $I_L1675_56, $k1_S1 + 4 * $I_L1674_74) = $SCA_sig_I1 * gps(1 + $I_L1675_56)
 1675.                   $I_L1675_56 = 1 + $I_L1675_56
 1675.                   if ( $I_L1675_56 >= $F_A34 ) exit
 1675.                enddo
 1675.             endif
 1676.             $F_A35 = ncols
 1676.             if ( ncols > 0 ) then
 1676.                $SCA_sig_I2 = sig(1 + $k1_S1 + 4 * $I_L1674_74)
 1676.                $I_L1676_58 = 0
 1676. !dir$ ivdep
 1676.                do
 1676.                   prs(1 + $I_L1676_58, 1 + $k1_S1 + 4 * $I_L1674_74) = $SCA_sig_I2 * gps(1 + $I_L1676_58)
 1676.                   $I_L1676_58 = 1 + $I_L1676_58
 1676.                   if ( $I_L1676_58 >= $F_A35 ) exit
 1676.                enddo
 1676.             endif
 1677.             $F_A36 = ncols
 1677.             if ( ncols > 0 ) then
 1677.                $SCA_sig_I3 = sig(2 + $k1_S1 + 4 * $I_L1674_74)
 1677.                $I_L1677_60 = 0
 1677. !dir$ ivdep
 1677.                do
 1677.                   prs(1 + $I_L1677_60, 2 + $k1_S1 + 4 * $I_L1674_74) = $SCA_sig_I3 * gps(1 + $I_L1677_60)
 1677.                   $I_L1677_60 = 1 + $I_L1677_60
 1677.                   if ( $I_L1677_60 >= $F_A36 ) exit
 1677.                enddo
 1677.             endif
 1678.             $F_A37 = ncols
 1678.             if ( ncols > 0 ) then
 1678.                $SCA_sig_I4 = sig(3 + $k1_S1 + 4 * $I_L1674_74)
 1678.                $I_L1678_62 = 0
 1678. !dir$ ivdep
 1678.                do
 1678.                   prs(1 + $I_L1678_62, 3 + $k1_S1 + 4 * $I_L1674_74) = $SCA_sig_I4 * gps(1 + $I_L1678_62)
 1678.                   $I_L1678_62 = 1 + $I_L1678_62
 1678.                   if ( $I_L1678_62 >= $F_A37 ) exit
 1678.                enddo
 1678.             endif
 1679.             $I_L1674_74 = 1 + $I_L1674_74
 1674.             if ( $I_L1674_74 >= ( 4 + kmax + -$k1_S1 ) / 4 ) exit
 1674.          enddo
 1674.       endif
 1684.       $F_A38 = kmax
 1684.       $F_A39 = ncols
 1684.       if ( and( -$F_A39, -$F_A38 ) < 0 ) then
 1684.          $I_L1684_78 = 0
 1684.          do
 1684.             $I_L1684_64 = 0
 1684. !dir$ ivdep
 1684.             do
 1684.                qout(1 + $I_L1684_64, 1 + $I_L1684_78) = qin(1 + $I_L1684_64, 1 + $I_L1684_78)
 1684.                $I_L1684_64 = 1 + $I_L1684_64
 1684.                if ( $I_L1684_64 >= $F_A39 ) exit
 1684.             enddo
 1684.             $I_L1684_78 = 1 + $I_L1684_78
 1684.             if ( $I_L1684_78 >= $F_A38 ) exit
 1684.          enddo
 1684.       endif
 1685.       t$604 = int( _alloc( max( 0, 4 * _zla( 0, kmax ) * _zla( 0, ncols ) ) ), 8 )
 1685.       $F_A40 = kmax
 1685.       $F_A41 = ncols
 1685.       if ( and( -$F_A41, -$F_A40 ) < 0 ) then
 1685.          $I_L1685_80 = 0
 1685.          do
 1685.             $I_L1685_66 = 0
 1685. !dir$ ivdep
 1685.             do
 1685.                t$603(1 + $I_L1685_66, 1 + $I_L1685_80) = qout(1 + $I_L1685_66, 1 + $I_L1685_80) < 9.9999999999999998e-13
 1685.                $I_L1685_66 = 1 + $I_L1685_66
 1685.                if ( $I_L1685_66 >= $F_A41 ) exit
 1685.             enddo
 1685.             $I_L1685_80 = 1 + $I_L1685_80
 1685.             if ( $I_L1685_80 >= $F_A40 ) exit
 1685.          enddo
 1685.       endif
 1686.       $F_A42 = kmax
 1686.       $F_A43 = ncols
 1686.       if ( and( -$F_A43, -$F_A42 ) < 0 ) then
 1686.          $I_L1686_82 = 0
 1686.          do
 1686.             $I_L1686_68 = 0
 1686. !dir$ ivdep
 1686.             do
 1686.                if ( t$603(1 + $I_L1686_68, 1 + $I_L1686_82) /= 0 ) then
 1686.                   qout(1 + $I_L1686_68, 1 + $I_L1686_82) = 9.9999999999999998e-13
 1686.                endif
 1686.                $I_L1686_68 = 1 + $I_L1686_68
 1686.                if ( $I_L1686_68 >= $F_A43 ) exit
 1686.             enddo
 1686.             $I_L1686_82 = 1 + $I_L1686_82
 1686.             if ( $I_L1686_82 >= $F_A42 ) exit
 1686.          enddo
 1686.       endif
 1685.       _free( t$604 )
 1692.       $F_A44 = kmax
 1692.       $F_A45 = ncols
 1692.       if ( and( -$F_A45, -$F_A44 ) < 0 ) then
 1692.          $I_L1692_84 = 0
 1692.          do
 1692.             $I_L1692_70 = 0
 1692. !dir$ ivdep
 1692.             do
 1692.                tout(1 + $I_L1692_70, 1 + $I_L1692_84) = ( tin(1 + $I_L1692_70, 1 + $I_L1692_84) * 1.0/( 1.0 + 6.0799999999999998e-1 * qout(1 + $I_L1692_70, 1 + $I_L1692_84) ) )
 1692.                $I_L1692_70 = 1 + $I_L1692_70
 1692.                if ( $I_L1692_70 >= $F_A45 ) exit
 1692.             enddo
 1692.             $I_L1692_84 = 1 + $I_L1692_84
 1692.             if ( $I_L1692_84 >= $F_A44 ) exit
 1692.          enddo
 1692.       endif
 1698.       $const_S5 = 6.1100000000000003 * _expn( -( -5452.7691736782708 * 1.0/tbase ) )
 1699.       if ( kmax > 0 ) then
 1700.          if ( ncols > 0 ) then
 1699.             $I_L1699_76 = 0
 1699.             do
 1700.                $I_L1700_50 = 0
 1700. !dir$ ivdep
 1700.                do
 1701.                   $fac_S6 = $const_S5 * _expn( ( -5452.7691736782708 * 1.0/tout(1 + $I_L1700_50, 1 + $I_L1699_76) ) )
 1703.                   qsat(1 + $I_L1700_50, 1 + $I_L1699_76) = ( 6.22e-1 * $fac_S6 * 1.0/( -3.78e-1 * $fac_S6 + 10.0 * prs(1 + $I_L1700_50, 1 + $I_L1699_76) ) )
 1704.                   $I_L1700_50 = 1 + $I_L1700_50
 1700.                   if ( $I_L1700_50 >= ncols ) exit
 1700.                enddo
 1711.                $I_L1711_52 = 0
 1711. !dir$ ivdep
 1711.                do
 1712.                   $relhum_WR0_R0 = ( qout(1 + $I_L1711_52, 1 + $I_L1699_76) * 1.0/qsat(1 + $I_L1711_52, 1 + $I_L1699_76) )
 1712.                   relhum(1 + $I_L1711_52, 1 + $I_L1699_76) = $relhum_WR0_R0
 1717.                   if ( $relhum_WR0_R0 > 1.0 ) then
 1718.                      qout(1 + $I_L1711_52, 1 + $I_L1699_76) = qsat(1 + $I_L1711_52, 1 + $I_L1699_76)
 1719.                      relhum(1 + $I_L1711_52, 1 + $I_L1699_76) = 1.0
 1719.                   endif
 1721.                   $I_L1711_52 = 1 + $I_L1711_52
 1720.                   if ( $I_L1711_52 >= ncols ) exit
 1720.                enddo
 1705.                $I_L1699_76 = 1 + $I_L1699_76
 1704.                if ( $I_L1699_76 >= kmax ) exit
 1704.             enddo
 1704.          endif
 1704.       endif
 1597.       _free( t$110 )
 1723.       return
 1723.       end
 1723.       
 1725.       
 1725.       subroutine coszmed( idatec, tod, yrl, colrad, lonrad, cos2, ncols )
 1725.       t$11 = ncols
 1732.       t$116 = _zla( 0, ncols )
 1744.       t$119 = 8 * _zla( 0, ncols )
 1725.       t$117 = int( _alloc( 8 * _zla( 0, ncols ) ), 8 )
 1744.       t$118 = t$117
 1753.       call radtim( idatec(1), sdelt, ratio, etime, tod, xday, yrl )
 1755.       $Coss_P5 = coss( sdelt )
 1759.       cosmax = 0.0
 1762.       $Coss_P6 = coss( colrad )
 1762.       $zenith1_S10 = cimag( $Coss_P5 ) * real( $Coss_P6, 8 )
 1763.       $zenith2_S9 = real( $Coss_P5, 8 ) * cimag( $Coss_P6 )
 1764.       $frh_S6 = ( 2.7777777777777778e-4 * ( -3.125e-2 + mod( 3.125e-2 + tod, 3600.0 ) ) )
 1765.       $ncount_S11 = 0
 1766.       if ( ncols > 0 ) then
 1768.          $SC_idatec_I0 = idatec(1)
 1766.          $I_L1766_6 = 0
 1766. !dir$ ivdep
 1766.          do
 1767.             $btime_S5 = 6.6666666666666666e-2 * lonrad(1 + $I_L1766_6)
 1769.             $Flat_S8 = cos( ( etime + 2.6179938779914919e-1 * ( 12.0 + -$btime_S5 + -$frh_S6 + -$SC_idatec_I0 ) ) )
 1769.             $zenith_WR0_R0 = $zenith1_S10 + $Flat_S8 * $zenith2_S9
 1770.             if ( ( $zenith1_S10 + $Flat_S8 * $zenith2_S9 ) > 0.0 ) then
 1772.                cosmax = cosmax + $zenith_WR0_R0
 1771.                $ncount_S11 = 1 + $ncount_S11
 1771.             endif
 1774.             $I_L1766_6 = 1 + $I_L1766_6
 1773.             if ( $I_L1766_6 >= ncols ) exit
 1773.          enddo
 1773.       endif
 1775.       if ( $ncount_S11 == 0 ) then
 1775.          $ncount_S11 = 1
 1775.       endif
 1776.       cos2 = ( cosmax * 1.0/( real( $ncount_S11, 8 ) ) )
 1725.       _free( t$117 )
 1777.       return
 1777.       end
 1777.       
 1782.       
 1782.       subroutine radtim( id, delta, ratio, etime, tod, xday, yrl )
 1815.       $xday_S0 = 3600.0 * id(1)
 1817.       $xday_S1 = ( monday(id(2)) + id(3) ) + 1.1574074074074073e-5 * ( $xday_S0 + mod( tod, 3600.0 ) )
 1819.       if ( yrl == 365.25 ) then
 1820.          $xday_S1 = $xday_S1 + -2.5e-1 * mod( 3 + id(4), 4 )
 1821.          if ( mod( id(4), 4 ) == 0 ) then
 1821.             if ( id(2) > 2 ) then
 1821.                $xday_S1 = 1.0 + $xday_S1
 1821.             endif
 1821.          endif
 1821.       endif
 1824.       xday = mod( -1.0 + $xday_S1, yrl )
 1826.       if ( mod( -1.0 + $xday_S1, yrl ) > -1.0 ) then
 1828.          $Coss_P16 = coss( ( 6.28318530717958 * xday * 1.0/yrl ) )
 1828.          $Coss_P17 = coss( 12.56637061435916 * ( xday * 1.0/yrl ) )
 1828.          $Coss_P18 = coss( 18.849555921538741 * ( xday * 1.0/yrl ) )
 1828.          delta = 6.9179999999999997e-3 + 1.48e-3 * cimag( $Coss_P18 ) + -2.6970000000000002e-3 * real( $Coss_P18, 8 ) + 9.0700000000000004e-4 * cimag( $Coss_P17 ) + -6.7580000000000001e-3 * real( $Coss_P17, 8 ) + -3.9991199999999999e-1 * real( $Coss_P16, 8 ) + 7.0257e-2 * cimag( $Coss_P16 )
 1831.          ratio = 1.0001100000000001 + 7.7000000000000001e-5 * cimag( $Coss_P17 ) + 7.1900000000000002e-4 * real( $Coss_P17, 8 ) + 3.4221000000000001e-2 * real( $Coss_P16, 8 ) + 1.2800000000000001e-3 * cimag( $Coss_P16 )
 1833.          etime = 7.4999999999999993e-5 + -4.0849000000000003e-2 * cimag( $Coss_P17 ) + -1.4615e-2 * real( $Coss_P17, 8 ) + 1.8680000000000001e-3 * real( $Coss_P16, 8 ) + -3.2077000000000001e-2 * cimag( $Coss_P16 )
 1833.       else
 1836.          $Unit_temp_O0 = nfprt
 1836.          $_IOitem_P14(0) = tod
 1836.          $_IOitem_P14(1) = xday
 1836.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$13,  _substr(t$12,1,74), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)id(+:( 1, 4, 1 )), 0x2000200000000L ), _iotype( (&)$_IOitem_P14(:( 0, 1, 1 )), 0x804060300000000L ) ) )
 1837.          $Unit_temp_O1 = nferr
 1837.          $_IOitem_P15(0) = tod
 1837.          $_IOitem_P15(1) = xday
 1837.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$13,  _substr(t$12,1,74), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( (&)id(+:( 1, 4, 1 )), 0x2000200000000L ), _iotype( (&)$_IOitem_P15(:( 0, 1, 1 )), 0x804060300000000L ) ) )
 1838.           _substr(t$620,1,4) = '2020'
 1838.          call _stop(  _substr(t$620,1,4) )
 1838.       endif
 1843.       return
 1843.       end
 1843.       
 2700.       
 2700.       subroutine spmrad( first, ifday, lcnvl, lthncl, nfin0, nfin1, nfcnv0, intcosz, mxrdcc, inalb, icld, yrl, idatec, idate, tod, delt, trint, swint, colrad, lonrad, cosz, cos2d, sigmid, sigbot, delsig, latco, ncols, kmax, nls, nlcs, imask, gps, gtmp, gwv, gtg, grh, omg, tsea, convts, convcs, convbs, convc, convt, convb, albvisdiff, albnirdiff, albvisbeam, albnirbeam, rswtoadown, rvisdiff, rnirdiff, rvisbeam, rnirbeam, rvisdiffc, rnirdiffc, rvisbeamc, rnirbeamc, rswsfcnet, rswsfcnetc, rswtoanet, rswtoanetc, yswtoadown, yvisdiff, ynirdiff, yvisbeam, ynirbeam, yvisdiffc, ynirdiffc, yvisbeamc, ynirbeamc, yswheatrate, yswheatratec, yswsfcnet, yswsfcnetc, yswtoanet, yswtoanetc, ssib_visdiff, ssib_nirdiff, ssib_visbeam, ssib_nirbeam, lwcoolrate, lwsfcdown, lwsfcnet, lwtoaup, lwcoolratec, lwsfcdownc, lwsfcnetc, lwtoaupc, cloudcover, cldcovtot, cldcovinv, cldcovsat, cldcovcon, cldcovsha, cldliqwatpath, emisd, taud, co2val, o3mix )
 1872.       t$14 = ncols
 2123.       t$120 = _zla( 0, ncols )
 1872.       t$15 = kmax
 2127.       t$121 = _zla( 0, kmax )
 1872.       t$122 = _zla( 0, ncols )
 1872.       t$123 = _zla( 0, ncols ) * _zla( 0, kmax )
 2247.       t$126 = 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2248.       t$127 = 8 * ( 7 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2248.       t$129 = t$127 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2245.       t$130 = 8 * ( 7 + t$127 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2245.       t$132 = t$130 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2246.       t$133 = 8 * ( 7 + t$130 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2246.       t$135 = t$133 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2250.       t$136 = 8 * ( 7 + t$133 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2250.       t$138 = t$136 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2232.       t$139 = 8 * ( 7 + t$136 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2232.       t$141 = t$139 + 8 * _zla( 0, ncols )
 2231.       t$142 = 8 * ( 7 + t$139 + 8 * _zla( 0, ncols ) ) / 8
 2231.       t$144 = t$142 + 8 * _zla( 0, ncols )
 2253.       t$145 = 8 * ( 7 + t$142 + 8 * _zla( 0, ncols ) ) / 8
 2253.       t$147 = t$145 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2256.       t$148 = 8 * ( 7 + t$145 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2256.       t$150 = t$148 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2239.       t$151 = 8 * ( 7 + t$148 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2239.       t$153 = t$151 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2259.       t$154 = 8 * ( 7 + t$151 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2259.       t$156 = t$154 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2260.       t$157 = 8 * ( 7 + t$154 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2260.       t$159 = t$157 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2240.       t$160 = 8 * ( 7 + t$157 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2240.       t$162 = t$160 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2238.       t$163 = 8 * ( 7 + t$160 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2238.       t$165 = t$163 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2237.       t$166 = 8 * ( 7 + t$163 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2237.       t$168 = t$166 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2236.       t$169 = 8 * ( 7 + t$166 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2236.       t$171 = t$169 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2257.       t$172 = 8 * ( 7 + t$169 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2257.       t$174 = t$172 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2258.       t$175 = 8 * ( 7 + t$172 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2258.       t$177 = t$175 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2261.       t$178 = 8 * ( 7 + t$175 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2261.       t$180 = t$178 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2235.       t$181 = 8 * ( 7 + t$178 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2235.       t$183 = t$181 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2254.       t$184 = 8 * ( 7 + t$181 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2254.       t$186 = t$184 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2251.       t$187 = 8 * ( 7 + t$184 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2251.       t$189 = t$187 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2252.       t$190 = 8 * ( 7 + t$187 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2252.       t$192 = t$190 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1872.       t$124 = int( _alloc( t$190 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ), 8 )
 2247.       t$125 = t$124
 2248.       t$128 = t$127 + t$124
 2245.       t$131 = t$130 + t$124
 2246.       t$134 = t$133 + t$124
 2250.       t$137 = t$136 + t$124
 2232.       t$140 = t$139 + t$124
 2231.       t$143 = t$142 + t$124
 2253.       t$146 = t$145 + t$124
 2256.       t$149 = t$148 + t$124
 2239.       t$152 = t$151 + t$124
 2259.       t$155 = t$154 + t$124
 2260.       t$158 = t$157 + t$124
 2240.       t$161 = t$160 + t$124
 2238.       t$164 = t$163 + t$124
 2237.       t$167 = t$166 + t$124
 2236.       t$170 = t$169 + t$124
 2257.       t$173 = t$172 + t$124
 2258.       t$176 = t$175 + t$124
 2261.       t$179 = t$178 + t$124
 2235.       t$182 = t$181 + t$124
 2254.       t$185 = t$184 + t$124
 2251.       t$188 = t$187 + t$124
 2252.       t$191 = t$190 + t$124
 2283.       if ( abs( mod( 3.125e-2 + 2.7777777777777778e-4 * ( tod + -delt ), swint ) ) <= 6.25e-2 ) then
 2247.          goto 10
 2283.       else if ( first == .false. ) then
 1872.          _free( t$124 )
 1872.       else
 1872.    10    continue
 2291.          call astropar( ncols, colrad(1), lonrad(1), idatec(1), tod, yrl, date, s0, cosz(1) )
 2294.          ifdayx = ifday
 2295.          todx = tod + 3600.0 * swint
 2297.          if ( ( tod + 3600.0 * swint ) >= 86400.0 ) then
 2299.             ifdayx = 1 + ifday
 2298.             todx = mod( todx, 86400.0 )
 2298.          endif
 2302.          call tmstmp2( idate(1), ifdayx, todx, jhr, jday, jmon, jyr )
 2304.          idatex(1) = jhr
 2305.          idatex(2) = jmon
 2306.          idatex(3) = jday
 2307.          idatex(4) = jyr
 2310.          call astropar( ncols, colrad(1), lonrad(1), idatex(1), todx, yrl, datex, s0x, cos1(1) )
 2313.          if ( intcosz /= .false. ) then
 2314.             $F_A33 = ncols
 2314.             if ( ncols > 0 ) then
 2314.                $I_L2314_111 = 0
 2314. !dir$ ivdep
 2314.                do
 2314.                   cos2(1 + $I_L2314_111) = cos2d(1 + $I_L2314_111)
 2314.                   $I_L2314_111 = 1 + $I_L2314_111
 2314.                   if ( $I_L2314_111 >= $F_A33 ) exit
 2314.                enddo
 2314.             endif
 2314.          else
 2316.             $F_A34 = ncols
 2316.             if ( ncols > 0 ) then
 2316.                $I_L2316_113 = 0
 2316. !dir$ ivdep
 2316.                do
 2316.                   cos2(1 + $I_L2316_113) = cosz(1 + $I_L2316_113)
 2316.                   $I_L2316_113 = 1 + $I_L2316_113
 2316.                   if ( $I_L2316_113 >= $F_A34 ) exit
 2316.                enddo
 2316.             endif
 2316.          endif
 2323.          if ( ifozone == 0 ) then
 2324.             call getoz( ncols, kmax, sigmid(1), colrad(1), date, flipo3(1, 1) )
 2325.             if ( kmax > 0 ) then
 2327.                if ( ncols > 0 ) then
 2325.                   $I_L2325_125 = 0
 2325.                   do
 2327.                      $I_L2327_96 = 0
 2327. !dir$ ivdep
 2327.                      do
 2328.                         o3mix(1 + $I_L2327_96, 1 + $I_L2325_125) = flipo3(1 + $I_L2327_96, kmax + -$I_L2325_125)
 2329.                         $I_L2327_96 = 1 + $I_L2327_96
 2327.                         if ( $I_L2327_96 >= ncols ) exit
 2327.                      enddo
 2330.                      $I_L2325_125 = 1 + $I_L2325_125
 2329.                      if ( $I_L2325_125 >= kmax ) exit
 2329.                   enddo
 2329.                endif
 2329.             endif
 2331.          else if ( kmax > 0 ) then
 2336.             if ( ncols > 0 ) then
 2334.                $I_L2334_123 = 0
 2334.                do
 2336.                   $I_L2336_94 = 0
 2336. !dir$ ivdep
 2336.                   do
 2337.                      flipo3(1 + $I_L2336_94, kmax + -$I_L2334_123) = o3mix(1 + $I_L2336_94, 1 + $I_L2334_123)
 2338.                      $I_L2336_94 = 1 + $I_L2336_94
 2336.                      if ( $I_L2336_94 >= ncols ) exit
 2336.                   enddo
 2339.                   $I_L2334_123 = 1 + $I_L2334_123
 2338.                   if ( $I_L2334_123 >= kmax ) exit
 2338.                enddo
 2338.             endif
 2338.          endif
 2346.          if ( kmax > 0 ) then
 2348.             if ( ncols > 0 ) then
 2346.                $I_L2346_127 = 0
 2346.                if ( kmax >= 4 ) then
 2346.                   $I_L2346_156 = 0
 2346. !dir$ blocking_size( 1, 1 )
 2346.                   do
 2348.                      $SCA_sigmid#1_U0 = sigmid(kmax + -4 * $I_L2346_156)
 2348.                      $SCA_sigbot#1_U4 = sigbot(kmax + -4 * $I_L2346_156)
 2348.                      $SCA_sigmid#2_U1 = sigmid(-1 + kmax + -4 * $I_L2346_156)
 2348.                      $SCA_sigbot#2_U5 = sigbot(-1 + kmax + -4 * $I_L2346_156)
 2348.                      $SCA_sigmid#3_U2 = sigmid(-2 + kmax + -4 * $I_L2346_156)
 2348.                      $SCA_sigbot#3_U6 = sigbot(-2 + kmax + -4 * $I_L2346_156)
 2348.                      $SCA_sigmid#4_U3 = sigmid(-3 + kmax + -4 * $I_L2346_156)
 2348.                      $SCA_sigbot#4_U7 = sigbot(-3 + kmax + -4 * $I_L2346_156)
 2348.                      $I_L2348_98 = 0
 2348. !dir$ ivdep
 2348. !dir$ blocking_size( 256, 256 )
 2348.                      do
 2349.                         flipte(1 + $I_L2348_98, 1 + 4 * $I_L2346_156) = gtmp(1 + $I_L2348_98, kmax + -4 * $I_L2346_156)
 2350.                         flipqe(1 + $I_L2348_98, 1 + 4 * $I_L2346_156) = gwv(1 + $I_L2348_98, kmax + -4 * $I_L2346_156)
 2351.                         flippbot(1 + $I_L2348_98, 1 + 4 * $I_L2346_156) = gps(1 + $I_L2348_98) * $SCA_sigbot#1_U4
 2352.                         flippmid(1 + $I_L2348_98, 1 + 4 * $I_L2346_156) = gps(1 + $I_L2348_98) * $SCA_sigmid#1_U0
 2349.                         flipte(1 + $I_L2348_98, 2 + 4 * $I_L2346_156) = gtmp(1 + $I_L2348_98, -1 + kmax + -4 * $I_L2346_156)
 2350.                         flipqe(1 + $I_L2348_98, 2 + 4 * $I_L2346_156) = gwv(1 + $I_L2348_98, -1 + kmax + -4 * $I_L2346_156)
 2351.                         flippbot(1 + $I_L2348_98, 2 + 4 * $I_L2346_156) = gps(1 + $I_L2348_98) * $SCA_sigbot#2_U5
 2352.                         flippmid(1 + $I_L2348_98, 2 + 4 * $I_L2346_156) = gps(1 + $I_L2348_98) * $SCA_sigmid#2_U1
 2349.                         flipte(1 + $I_L2348_98, 3 + 4 * $I_L2346_156) = gtmp(1 + $I_L2348_98, -2 + kmax + -4 * $I_L2346_156)
 2350.                         flipqe(1 + $I_L2348_98, 3 + 4 * $I_L2346_156) = gwv(1 + $I_L2348_98, -2 + kmax + -4 * $I_L2346_156)
 2351.                         flippbot(1 + $I_L2348_98, 3 + 4 * $I_L2346_156) = gps(1 + $I_L2348_98) * $SCA_sigbot#3_U6
 2352.                         flippmid(1 + $I_L2348_98, 3 + 4 * $I_L2346_156) = gps(1 + $I_L2348_98) * $SCA_sigmid#3_U2
 2349.                         flipte(1 + $I_L2348_98, 4 + 4 * $I_L2346_156) = gtmp(1 + $I_L2348_98, -3 + kmax + -4 * $I_L2346_156)
 2350.                         flipqe(1 + $I_L2348_98, 4 + 4 * $I_L2346_156) = gwv(1 + $I_L2348_98, -3 + kmax + -4 * $I_L2346_156)
 2351.                         flippbot(1 + $I_L2348_98, 4 + 4 * $I_L2346_156) = gps(1 + $I_L2348_98) * $SCA_sigbot#4_U7
 2352.                         flippmid(1 + $I_L2348_98, 4 + 4 * $I_L2346_156) = gps(1 + $I_L2348_98) * $SCA_sigmid#4_U3
 2353.                         $I_L2348_98 = 1 + $I_L2348_98
 2348.                         if ( $I_L2348_98 >= ncols ) exit
 2348.                      enddo
 2354.                      $I_L2346_156 = 1 + $I_L2346_156
 2353.                      if ( $I_L2346_156 >= _rsh( kmax, 2 ) ) exit
 2353.                   enddo
 2354.                   $I_L2346_127 = and( 0xfffffffffffffffcUL, kmax )
 2354.                endif
 2346.                if ( $I_L2346_127 < kmax ) then
 2346.                   $I_L2346_150 = 0
 2346. !dir$ blocking_size( 1, 1 )
 2346.                   do
 2348.                      $SCA_sigmid_I0 = sigmid(kmax + -$I_L2346_127 + -$I_L2346_150)
 2348.                      $SCA_sigbot_I1 = sigbot(kmax + -$I_L2346_127 + -$I_L2346_150)
 2348.                      $I_L2348_98 = 0
 2348. !dir$ ivdep
 2348. !dir$ blocking_size( 256, 256 )
 2348.                      do
 2349.                         flipte(1 + $I_L2348_98, 1 + $I_L2346_127 + $I_L2346_150) = gtmp(1 + $I_L2348_98, kmax + -$I_L2346_127 + -$I_L2346_150)
 2350.                         flipqe(1 + $I_L2348_98, 1 + $I_L2346_127 + $I_L2346_150) = gwv(1 + $I_L2348_98, kmax + -$I_L2346_127 + -$I_L2346_150)
 2351.                         flippbot(1 + $I_L2348_98, 1 + $I_L2346_127 + $I_L2346_150) = $SCA_sigbot_I1 * gps(1 + $I_L2348_98)
 2352.                         flippmid(1 + $I_L2348_98, 1 + $I_L2346_127 + $I_L2346_150) = $SCA_sigmid_I0 * gps(1 + $I_L2348_98)
 2353.                         $I_L2348_98 = 1 + $I_L2348_98
 2348.                         if ( $I_L2348_98 >= ncols ) exit
 2348.                      enddo
 2354.                      $I_L2346_150 = 1 + $I_L2346_150
 2353.                      if ( $I_L2346_150 >= kmax + -$I_L2346_127 ) exit
 2353.                   enddo
 2353.                endif
 2353.             endif
 2353.          endif
 2356.          if ( ncols > 0 ) then
 2356.             $I_L2356_100 = 0
 2356. !dir$ ivdep
 2356.             do
 2357.                flipdp(1 + $I_L2356_100, 1) = -5.0e-1 + flippbot(1 + $I_L2356_100, 1)
 2358.                $I_L2356_100 = 1 + $I_L2356_100
 2356.                if ( $I_L2356_100 >= ncols ) exit
 2356.             enddo
 2356.          endif
 2359.          if ( -2 + kmax >= 0 ) then
 2360.             if ( ncols > 0 ) then
 2359.                $I_L2359_148 = 0
 2359.                do
 2360.                   $I_L2360_146 = 0
 2360.                   do
 2359.                      $I_L2359_143 = 0
 2359.                      if ( min( -1 + kmax, 4 + 4 * $I_L2359_148 ) + -4 * $I_L2359_148 >= 4 ) then
 2359.                         $I_L2359_158 = 0
 2359. !dir$ shortloop16
 2359. !dir$ blocking_size( 4, 4 )
 2359.                         do
 2360.                            $I_L2360_102 = 0
 2360. !dir$ ivdep
 2360. !dir$ blocking_size( 256, 256 )
 2360.                            do
 2361.                               flipdp(1 + $I_L2360_102 + 256 * $I_L2360_146, 2 + 4 * $I_L2359_148 + 4 * $I_L2359_158) = flippbot(1 + $I_L2360_102 + 256 * $I_L2360_146, 2 + 4 * $I_L2359_148 + 4 * $I_L2359_158) + -flippbot(1 + $I_L2360_102 + 256 * $I_L2360_146, 1 + 4 * $I_L2359_148 + 4 * $I_L2359_158)
 2361.                               flipdp(1 + $I_L2360_102 + 256 * $I_L2360_146, 3 + 4 * $I_L2359_148 + 4 * $I_L2359_158) = flippbot(1 + $I_L2360_102 + 256 * $I_L2360_146, 3 + 4 * $I_L2359_148 + 4 * $I_L2359_158) + -flippbot(1 + $I_L2360_102 + 256 * $I_L2360_146, 2 + 4 * $I_L2359_148 + 4 * $I_L2359_158)
 2361.                               flipdp(1 + $I_L2360_102 + 256 * $I_L2360_146, 4 + 4 * $I_L2359_148 + 4 * $I_L2359_158) = flippbot(1 + $I_L2360_102 + 256 * $I_L2360_146, 4 + 4 * $I_L2359_148 + 4 * $I_L2359_158) + -flippbot(1 + $I_L2360_102 + 256 * $I_L2360_146, 3 + 4 * $I_L2359_148 + 4 * $I_L2359_158)
 2361.                               flipdp(1 + $I_L2360_102 + 256 * $I_L2360_146, 5 + 4 * $I_L2359_148 + 4 * $I_L2359_158) = flippbot(1 + $I_L2360_102 + 256 * $I_L2360_146, 5 + 4 * $I_L2359_148 + 4 * $I_L2359_158) + -flippbot(1 + $I_L2360_102 + 256 * $I_L2360_146, 4 + 4 * $I_L2359_148 + 4 * $I_L2359_158)
 2360.                               $I_L2360_102 = 1 + $I_L2360_102
 2360.                               if ( $I_L2360_102 >= min( ncols, 256 + 256 * $I_L2360_146 ) + -256 * $I_L2360_146 ) exit
 2360.                            enddo
 2359.                            $I_L2359_158 = 1 + $I_L2359_158
 2359.                            if ( $I_L2359_158 >= _rsh( min( -1 + kmax, 4 + 4 * $I_L2359_148 ) + -4 * $I_L2359_148, 2 ) ) exit
 2359.                         enddo
 2359.                         $I_L2359_143 = and( 0xfffffffffffffffcUL, min( -1 + kmax, 4 + 4 * $I_L2359_148 ) + -4 * $I_L2359_148 )
 2359.                      endif
 2359.                      if ( $I_L2359_143 < min( -1 + kmax, 4 + 4 * $I_L2359_148 ) + -4 * $I_L2359_148 ) then
 2359.                         $I_L2359_153 = 0
 2359. !dir$ shortloop16
 2359. !dir$ blocking_size( 4, 4 )
 2359.                         do
 2360.                            $I_L2360_102 = 0
 2360. !dir$ ivdep
 2360. !dir$ blocking_size( 256, 256 )
 2360.                            do
 2361.                               flipdp(1 + $I_L2360_102 + 256 * $I_L2360_146, 2 + $I_L2359_143 + $I_L2359_153 + 4 * $I_L2359_148) = flippbot(1 + $I_L2360_102 + 256 * $I_L2360_146, 2 + $I_L2359_143 + $I_L2359_153 + 4 * $I_L2359_148) + -flippbot(1 + $I_L2360_102 + 256 * $I_L2360_146, 1 + $I_L2359_143 + $I_L2359_153 + 4 * $I_L2359_148)
 2360.                               $I_L2360_102 = 1 + $I_L2360_102
 2360.                               if ( $I_L2360_102 >= min( ncols, 256 + 256 * $I_L2360_146 ) + -256 * $I_L2360_146 ) exit
 2360.                            enddo
 2359.                            $I_L2359_153 = 1 + $I_L2359_153
 2359.                            if ( $I_L2359_153 >= min( -1 + kmax, 4 + 4 * $I_L2359_148 ) + -$I_L2359_143 + -4 * $I_L2359_148 ) exit
 2359.                         enddo
 2359.                      endif
 2360.                      $I_L2360_146 = 1 + $I_L2360_146
 2362.                      if ( $I_L2360_146 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 2362.                   enddo
 2359.                   $I_L2359_148 = 1 + $I_L2359_148
 2359.                   if ( $I_L2359_148 >= 1 + max( 0, -1 + _rsh( 2 + kmax, 2 ) ) ) exit
 2359.                enddo
 2359.             endif
 2359.          endif
 2371.           _substr(t$648,1,4) = 'RAND'
 2369.          call cloud_field( ncols, kmax, nls, icld,  _substr(t$648,1,4), mxrdcc, lcnvl, lthncl, sigmid(1), gps(1), grh(1, 1), omg(1, 1), gtmp(1, 1), convc(1), convt(1), convb(1), convts(1), convcs(1), convbs(1), cld(1, 1), clu(1, 1), cloudcover(1), cldcovtot(1, 1), cldcovinv(1, 1), cldcovsat(1, 1), cldcovcon(1, 1), cldcovsha(1, 1) )
 2382.          if ( icld == 3 ) then
 2382.             goto 20
 2382.          else if ( icld == 4 ) then
 2382.    20       continue
 2383.             call cloud_micro_ccm3( ncols, kmax, sigmid(1), sigbot(1), delsig(1), imask(1), gps(1), gtmp(1, 1), gwv(1, 1), tsea(1), flippbot(1, 1), clwp(1, 1), lmixr(1, 1), fice(1, 1), rei(1, 1), rel(1, 1), taud(1, 1) )
 2391.             $F_A35 = kmax
 2391.             $F_A36 = ncols
 2391.             if ( and( -$F_A36, -$F_A35 ) < 0 ) then
 2391.                $I_L2391_135 = 0
 2391.                do
 2391.                   $I_L2391_115 = 0
 2391. !dir$ ivdep
 2391.                   do
 2391.                      cldliqwatpath(1 + $I_L2391_115, 1 + $I_L2391_135) = clwp(1 + $I_L2391_115, 1 + $I_L2391_135)
 2391.                      $I_L2391_115 = 1 + $I_L2391_115
 2391.                      if ( $I_L2391_115 >= $F_A36 ) exit
 2391.                   enddo
 2391.                   $I_L2391_135 = 1 + $I_L2391_135
 2391.                   if ( $I_L2391_135 >= $F_A35 ) exit
 2391.                enddo
 2391.             endif
 2391.          endif
 2398.          if ( kmax > 0 ) then
 2400.             if ( ncols > 0 ) then
 2398.                $I_L2398_129 = 0
 2398.                do
 2400.                   $I_L2400_105 = 0
 2400. !dir$ ivdep
 2400.                   do
 2401.                      flipclwp(1 + $I_L2400_105, 1 + $I_L2398_129) = clwp(1 + $I_L2400_105, kmax + -$I_L2398_129)
 2402.                      fliprei(1 + $I_L2400_105, 1 + $I_L2398_129) = rei(1 + $I_L2400_105, kmax + -$I_L2398_129)
 2403.                      fliprel(1 + $I_L2400_105, 1 + $I_L2398_129) = rel(1 + $I_L2400_105, kmax + -$I_L2398_129)
 2404.                      flipfice(1 + $I_L2400_105, 1 + $I_L2398_129) = fice(1 + $I_L2400_105, kmax + -$I_L2398_129)
 2405.                      fliptaud(1 + $I_L2400_105, 1 + $I_L2398_129) = taud(1 + $I_L2400_105, kmax + -$I_L2398_129)
 2406.                      fliplmixr(1 + $I_L2400_105, 1 + $I_L2398_129) = lmixr(1 + $I_L2400_105, kmax + -$I_L2398_129)
 2407.                      $I_L2400_105 = 1 + $I_L2400_105
 2400.                      if ( $I_L2400_105 >= ncols ) exit
 2400.                   enddo
 2408.                   $I_L2398_129 = 1 + $I_L2398_129
 2407.                   if ( $I_L2398_129 >= kmax ) exit
 2407.                enddo
 2407.             endif
 2407.          endif
 2414.          if ( first == .false. .orelse. ifday /= 0 .orelse. tod /= 0.0 ) then
 2414.             goto 30
 2414.          else
 2415.             if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'LCH' ) then
 2417.                call swrad( ncols, kmax, nls, .false., icld, inalb, s0, cos2(1), flippbot(1, 1), flipdp(1, 1), flipte(1, 1), flipqe(1, 1), flipo3(1, 1), albvisdiff(1), albnirdiff(1), albvisbeam(1), albnirbeam(1), rswtoadown(1), ssib_visbeam(1), ssib_visdiff(1), ssib_nirbeam(1), ssib_nirdiff(1), rvisbeamc(1), rvisdiffc(1), rnirbeamc(1), rnirdiffc(1), rswtoanetc(1), rswtoanet(1), rswsfcnetc(1), rswsfcnet(1), asclr(1, 1), asl(1, 1), cld(1, 1), clu(1, 1), fliptaud(1, 1) )
 2417.                goto 30
 2434.             else if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'CRD' ) then
 2436.                call cliradsw( ncols, kmax, nls, .false., icld, inalb, s0, cos2(1), flippbot(1, 1), flipdp(1, 1), flipte(1, 1), flipqe(1, 1), flipo3(1, 1), gps(1), imask(1), albvisdiff(1), albnirdiff(1), albvisbeam(1), albnirbeam(1), rswtoadown(1), ssib_visbeam(1), ssib_visdiff(1), ssib_nirbeam(1), ssib_nirdiff(1), rvisbeamc(1), rvisdiffc(1), rnirbeamc(1), rnirdiffc(1), rswtoanetc(1), rswtoanet(1), rswsfcnetc(1), rswsfcnet(1), asclr(1, 1), asl(1, 1), cld(1, 1), clu(1, 1), flipfice(1, 1), fliprei(1, 1), fliprel(1, 1), fliptaud(1, 1) )
 2436.                goto 30
 2436.             else if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'UKM' ) then
 2456.                call ukmo_swintf( ncols, kmax, cos2(1), s0, flippbot(1, 1), flippmid(1, 1), flipdp(1, 1), flipte(1, 1), flipqe(1, 1), flipo3(1, 1), co2val, gtg(1), imask(1), albvisdiff(1), albnirdiff(1), albvisbeam(1), albnirbeam(1), rswtoadown(1), ssib_visbeam(1), ssib_visdiff(1), ssib_nirbeam(1), ssib_nirdiff(1), rvisbeamc(1), rvisdiffc(1), rnirbeamc(1), rnirdiffc(1), rswtoanetc(1), rswtoanet(1), rswsfcnetc(1), rswsfcnet(1), asclr(1, 1), asl(1, 1), cld(1, 1), clu(1, 1), flipfice(1, 1), fliprei(1, 1), fliprel(1, 1), fliplmixr(1, 1) )
 2456.                goto 30
 2456.             else if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'NON' ) then
 2477.                $Unit_temp_O0 = nfprt
 2477.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'WARN:: Skipping shortwave computation at idate=', 0x800600000000L ), _iotype( (&)idate(+:( 1, 4, 1 )), 0x2000200000000L ) ) )
 2477.    30          continue
 2489.                if ( first == .false. ) then
 2483.                   goto 40
 2489.                else if ( nfcnv0 == 0 ) then
 2489.                   goto 80
 2489.                else if ( nfin1 + -nfin0 == 0 ) then
 2489.    80             continue
 2490.                   if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'LCH' ) then
 2492.                      call swrad( ncols, kmax, nls, .false., icld, inalb, s0, cosz(1), flippbot(1, 1), flipdp(1, 1), flipte(1, 1), flipqe(1, 1), flipo3(1, 1), albvisdiff(1), albnirdiff(1), albvisbeam(1), albnirbeam(1), rswtoadown(1), rvisbeam(1), rvisdiff(1), rnirbeam(1), rnirdiff(1), rvisbeamc(1), rvisdiffc(1), rnirbeamc(1), rnirdiffc(1), rswtoanetc(1), rswtoanet(1), rswsfcnetc(1), rswsfcnet(1), asclr(1, 1), asl(1, 1), cld(1, 1), clu(1, 1), fliptaud(1, 1) )
 2492.                      goto 40
 2509.                   else if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'CRD' ) then
 2511.                      call cliradsw( ncols, kmax, nls, .false., icld, inalb, s0, cosz(1), flippbot(1, 1), flipdp(1, 1), flipte(1, 1), flipqe(1, 1), flipo3(1, 1), gps(1), imask(1), albvisdiff(1), albnirdiff(1), albvisbeam(1), albnirbeam(1), rswtoadown(1), rvisbeam(1), rvisdiff(1), rnirbeam(1), rnirdiff(1), rvisbeamc(1), rvisdiffc(1), rnirbeamc(1), rnirdiffc(1), rswtoanetc(1), rswtoanet(1), rswsfcnetc(1), rswsfcnet(1), asclr(1, 1), asl(1, 1), cld(1, 1), clu(1, 1), flipfice(1, 1), fliprei(1, 1), fliprel(1, 1), fliptaud(1, 1) )
 2511.                      goto 40
 2511.                   else if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'UKM' ) then
 2531.                      call ukmo_swintf( ncols, kmax, cosz(1), s0, flippbot(1, 1), flippmid(1, 1), flipdp(1, 1), flipte(1, 1), flipqe(1, 1), flipo3(1, 1), co2val, gtg(1), imask(1), albvisdiff(1), albnirdiff(1), albvisbeam(1), albnirbeam(1), rswtoadown(1), rvisbeam(1), rvisdiff(1), rnirbeam(1), rnirdiff(1), rvisbeamc(1), rvisdiffc(1), rnirbeamc(1), rnirdiffc(1), rswtoanetc(1), rswtoanet(1), rswsfcnetc(1), rswsfcnet(1), asclr(1, 1), asl(1, 1), cld(1, 1), clu(1, 1), flipfice(1, 1), fliprei(1, 1), fliprel(1, 1), fliplmixr(1, 1) )
 2531.                      goto 40
 2531.                   else if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'NON' ) then
 2552.                      $Unit_temp_O2 = nfprt
 2552.                      _fwrite( _clist( 0, 0, 3, $Unit_temp_O2, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'WARN:: Skipping shortwave computation at idate=', 0x800600000000L ), _iotype( (&)idate(+:( 1, 4, 1 )), 0x2000200000000L ) ) )
 2552.                      goto 40
 2552.                   else
 2554.                      $Unit_temp_O3 = nfprt
 2554.                      _fwrite( _clist( 0, 0, 3, $Unit_temp_O3, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'ERROR:: WRONG OPTION iswrad=', 0x800600000000L ), _iotype(  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )), 0x800600000000L ) ) )
 2555.                       _substr(t$656,1,4) = ' '
 2555.                      call _stop(  _substr(t$656,1,1) )
 2555.                   endif
 2555.                else
 2555.    40             continue
 2564.                   if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'LCH' ) then
 2566.                      call swrad( ncols, kmax, nls, .false., icld, inalb, s0x, cos1(1), flippbot(1, 1), flipdp(1, 1), flipte(1, 1), flipqe(1, 1), flipo3(1, 1), albvisdiff(1), albnirdiff(1), albvisbeam(1), albnirbeam(1), yswtoadown(1), yvisbeam(1), yvisdiff(1), ynirbeam(1), ynirdiff(1), yvisbeamc(1), yvisdiffc(1), ynirbeamc(1), ynirdiffc(1), yswtoanetc(1), yswtoanet(1), yswsfcnetc(1), yswsfcnet(1), asclr(1, 1), asl(1, 1), cld(1, 1), clu(1, 1), fliptaud(1, 1) )
 2566.                      goto 50
 2583.                   else if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'CRD' ) then
 2585.                      call cliradsw( ncols, kmax, nls, .false., icld, inalb, s0x, cos1(1), flippbot(1, 1), flipdp(1, 1), flipte(1, 1), flipqe(1, 1), flipo3(1, 1), gps(1), imask(1), albvisdiff(1), albnirdiff(1), albvisbeam(1), albnirbeam(1), yswtoadown(1), yvisbeam(1), yvisdiff(1), ynirbeam(1), ynirdiff(1), yvisbeamc(1), yvisdiffc(1), ynirbeamc(1), ynirdiffc(1), yswtoanetc(1), yswtoanet(1), yswsfcnetc(1), yswsfcnet(1), asclr(1, 1), asl(1, 1), cld(1, 1), clu(1, 1), flipfice(1, 1), fliprei(1, 1), fliprel(1, 1), fliptaud(1, 1) )
 2585.                      goto 50
 2585.                   else if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'UKM' ) then
 2605.                      call ukmo_swintf( ncols, kmax, cos1(1), s0x, flippbot(1, 1), flippmid(1, 1), flipdp(1, 1), flipte(1, 1), flipqe(1, 1), flipo3(1, 1), co2val, gtg(1), imask(1), albvisdiff(1), albnirdiff(1), albvisbeam(1), albnirbeam(1), yswtoadown(1), yvisbeam(1), yvisdiff(1), ynirbeam(1), ynirdiff(1), yvisbeamc(1), yvisdiffc(1), ynirbeamc(1), ynirdiffc(1), yswtoanetc(1), yswtoanet(1), yswsfcnetc(1), yswsfcnet(1), asclr(1, 1), asl(1, 1), cld(1, 1), clu(1, 1), flipfice(1, 1), fliprei(1, 1), fliprel(1, 1), fliplmixr(1, 1) )
 2605.                      goto 50
 2605.                   else if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'NON' ) then
 2626.                      $Unit_temp_O4 = nfprt
 2626.                      _fwrite( _clist( 0, 0, 3, $Unit_temp_O4, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'WARN:: Skipping shortwave computation at idate=', 0x800600000000L ), _iotype( (&)idate(+:( 1, 4, 1 )), 0x2000200000000L ) ) )
 2626.    50                continue
 2632.                      if ( kmax > 0 ) then
 2633.                         if ( ncols > 0 ) then
 2632.                            $I_L2632_131 = 0
 2632.                            do
 2633.                               $I_L2633_107 = 0
 2633. !dir$ ivdep
 2633.                               do
 2634.                                  yswheatrate(1 + $I_L2633_107, 1 + $I_L2632_131) = asl(1 + $I_L2633_107, kmax + -$I_L2632_131)
 2635.                                  yswheatratec(1 + $I_L2633_107, 1 + $I_L2632_131) = asclr(1 + $I_L2633_107, kmax + -$I_L2632_131)
 2636.                                  $I_L2633_107 = 1 + $I_L2633_107
 2633.                                  if ( $I_L2633_107 >= ncols ) exit
 2633.                               enddo
 2637.                               $I_L2632_131 = 1 + $I_L2632_131
 2636.                               if ( $I_L2632_131 >= kmax ) exit
 2636.                            enddo
 2636.                         endif
 2636.                      endif
 2642.                      if ( abs( mod( 3.125e-2 + 2.7777777777777778e-4 * ( tod + -delt ), trint ) ) <= 6.25e-2 .orelse. first /= .false. ) then
 2644.                         if (  _substr(ilwrad,1,_ltrim(  _substr(ilwrad,1,3) )) == 'HRS' ) then
 2650.                            if ( mxrdcc /= .false. ) then
 2651.                               $F_A37 = kmax
 2651.                               $F_A38 = ncols
 2651.                               if ( and( -$F_A38, -$F_A37 ) < 0 ) then
 2651.                                  $I_L2651_137 = 0
 2651.                                  do
 2651.                                     $I_L2651_117 = 0
 2651. !dir$ ivdep
 2651.                                     do
 2651.                                        cld(1 + $I_L2651_117, 1 + $I_L2651_137) = max( cld(1 + $I_L2651_117, 1 + $I_L2651_137), clu(1 + $I_L2651_117, 1 + $I_L2651_137) )
 2651.                                        $I_L2651_117 = 1 + $I_L2651_117
 2651.                                        if ( $I_L2651_117 >= $F_A38 ) exit
 2651.                                     enddo
 2651.                                     $I_L2651_137 = 1 + $I_L2651_137
 2651.                                     if ( $I_L2651_137 >= $F_A37 ) exit
 2651.                                  enddo
 2651.                               endif
 2652.                               $F_A39 = kmax
 2652.                               $F_A40 = ncols
 2652.                               if ( and( -$F_A40, -$F_A39 ) < 0 ) then
 2652.                                  $I_L2652_139 = 0
 2652.                                  do
 2652.                                     $I_L2652_119 = 0
 2652. !dir$ ivdep
 2652.                                     do
 2652.                                        clu(1 + $I_L2652_119, 1 + $I_L2652_139) = 0.0
 2652.                                        $I_L2652_119 = 1 + $I_L2652_119
 2652.                                        if ( $I_L2652_119 >= $F_A40 ) exit
 2652.                                     enddo
 2652.                                     $I_L2652_139 = 1 + $I_L2652_139
 2652.                                     if ( $I_L2652_139 >= $F_A39 ) exit
 2652.                                  enddo
 2652.                               endif
 2652.                            else
 2654.                               $F_A41 = kmax
 2654.                               $F_A42 = ncols
 2654.                               if ( and( -$F_A42, -$F_A41 ) < 0 ) then
 2654.                                  $I_L2654_141 = 0
 2654.                                  do
 2654.                                     $I_L2654_121 = 0
 2654. !dir$ ivdep
 2654.                                     do
 2654.                                        clu(1 + $I_L2654_121, 1 + $I_L2654_141) = 0.0
 2654.                                        $I_L2654_121 = 1 + $I_L2654_121
 2654.                                        if ( $I_L2654_121 >= $F_A42 ) exit
 2654.                                     enddo
 2654.                                     $I_L2654_141 = 1 + $I_L2654_141
 2654.                                     if ( $I_L2654_141 >= $F_A41 ) exit
 2654.                                  enddo
 2654.                               endif
 2654.                            endif
 2657.                            call lwrad( ncols, kmax, nls, nlcs, .false., icld, flippbot(1, 1), flippmid(1, 1), flipte(1, 1), flipqe(1, 1), flipo3(1, 1), gtg(1), co2val, lwtoaupc(1), lwtoaup(1), asclr(1, 1), asl(1, 1), lwsfcnetc(1), lwsfcnet(1), lwsfcdownc(1), lwsfcdown(1), cld(1, 1), clu(1, 1), flipclwp(1, 1), flipfice(1, 1), fliprei(1, 1), emisd(1, 1) )
 2657.                            goto 60
 2657.                            goto 70
 2668.                         else if (  _substr(ilwrad,1,_ltrim(  _substr(ilwrad,1,3) )) == 'CRD' ) then
 2669.                            $Unit_temp_O5 = nfprt
 2669.                            _fwrite( _clist( 0, 0, 3, $Unit_temp_O5, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'ERROR:: CLIRAD_LW NOT YET IMPLEMENTED!', 0x800600000000L ) ) )
 2670.                             _substr(t$664,1,4) = ' '
 2670.                            call _stop(  _substr(t$664,1,1) )
 2670.                         else
 2671.                            if (  _substr(ilwrad,1,_ltrim(  _substr(ilwrad,1,3) )) == 'UKM' ) then
 2672.                               call ukmo_lwintf( ncols, kmax, flippbot(1, 1), flippmid(1, 1), flipdp(1, 1), flipte(1, 1), flipqe(1, 1), flipo3(1, 1), co2val, gtg(1), imask(1), lwtoaupc(1), lwtoaup(1), asclr(1, 1), asl(1, 1), lwsfcnetc(1), lwsfcnet(1), lwsfcdownc(1), lwsfcdown(1), cld(1, 1), clu(1, 1), flipfice(1, 1), fliprei(1, 1), fliprel(1, 1), fliplmixr(1, 1) )
 2672.                            endif
 2672.    60                      continue
 2689.                            if (  _substr(ilwrad,1,_ltrim(  _substr(ilwrad,1,3) )) /= 'NON' ) then
 2690.                               if ( kmax > 0 ) then
 2691.                                  if ( ncols > 0 ) then
 2690.                                     $I_L2690_133 = 0
 2690.                                     do
 2691.                                        $I_L2691_109 = 0
 2691. !dir$ ivdep
 2691.                                        do
 2692.                                           lwcoolrate(1 + $I_L2691_109, 1 + $I_L2690_133) = asl(1 + $I_L2691_109, kmax + -$I_L2690_133)
 2693.                                           lwcoolratec(1 + $I_L2691_109, 1 + $I_L2690_133) = asclr(1 + $I_L2691_109, kmax + -$I_L2690_133)
 2694.                                           $I_L2691_109 = 1 + $I_L2691_109
 2691.                                           if ( $I_L2691_109 >= ncols ) exit
 2691.                                        enddo
 2695.                                        $I_L2690_133 = 1 + $I_L2690_133
 2694.                                        if ( $I_L2690_133 >= kmax ) exit
 2694.                                     enddo
 2694.                                  endif
 2694.                               endif
 2694.                            endif
 2694.                            goto 70
 2694.                         endif
 2694.                      else
 2694.    70                   continue
 1872.                         _free( t$124 )
 1872.                      endif
 1872.                   else
 2628.                      $Unit_temp_O6 = nfprt
 2628.                      _fwrite( _clist( 0, 0, 3, $Unit_temp_O6, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'ERROR:: WRONG OPTION iswrad=', 0x800600000000L ), _iotype(  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )), 0x800600000000L ) ) )
 2629.                       _substr(t$657,1,4) = ' '
 2629.                      call _stop(  _substr(t$657,1,1) )
 2629.                   endif
 2629.                endif
 2629.             else
 2479.                $Unit_temp_O1 = nfprt
 2479.                _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( 'ERROR:: WRONG OPTION iswrad=', 0x800600000000L ), _iotype(  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )), 0x800600000000L ) ) )
 2480.                 _substr(t$655,1,4) = ' '
 2480.                call _stop(  _substr(t$655,1,1) )
 2480.             endif
 2480.          endif
 2480.       endif
 2700.       return
 2700.       end
 2700.       
 2702.       
 2702.       subroutine cldgn2( covlp, gps, sigmid, grh, omg, gtmp, css, ccu, cdin, cstc, ccon, cson, mxrdcc, lcnvl, convc, convt, convb, convts, convcs, convbs, ncols, kmax, nls )
 2702.       t$16 = ncols
 2753.       t$193 = _zla( 0, ncols )
 2702.       t$17 = kmax
 2754.       t$194 = _zla( 0, kmax )
 2702.       t$195 = _zla( 0, ncols )
 2702.       t$196 = _zla( 0, ncols ) * _zla( 0, kmax )
 2780.       t$199 = 8 * _zla( 0, ncols )
 2787.       t$200 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 2787.       t$202 = t$200 + 8 * _zla( 0, ncols )
 2778.       t$203 = 8 * ( 7 + t$200 + 8 * _zla( 0, ncols ) ) / 8
 2778.       t$205 = t$203 + 8 * _zla( 0, ncols )
 2779.       t$206 = 8 * ( 7 + t$203 + 8 * _zla( 0, ncols ) ) / 8
 2779.       t$208 = t$206 + 8 * _zla( 0, ncols )
 2777.       t$209 = 8 * ( 7 + t$206 + 8 * _zla( 0, ncols ) ) / 8
 2777.       t$211 = t$209 + 8 * _zla( 0, ncols )
 2793.       t$212 = 8 * ( 7 + t$209 + 8 * _zla( 0, ncols ) ) / 8
 2793.       t$214 = t$212 + 8 * _zla( 0, ncols )
 2792.       t$215 = 8 * ( 7 + t$212 + 8 * _zla( 0, ncols ) ) / 8
 2792.       t$217 = t$215 + 8 * _zla( 0, ncols )
 2789.       t$218 = 8 * ( 7 + t$215 + 8 * _zla( 0, ncols ) ) / 8
 2789.       t$220 = t$218 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2788.       t$221 = 8 * ( 7 + t$218 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2788.       t$223 = t$221 + 8 * _zla( 0, ncols )
 2795.       t$224 = 8 * ( 7 + t$221 + 8 * _zla( 0, ncols ) ) / 8
 2795.       t$226 = t$224 + 8 * _zla( 0, ncols )
 2794.       t$228 = t$224 + 12 * _zla( 0, ncols )
 2782.       t$230 = t$224 + 16 * _zla( 0, ncols )
 2791.       t$232 = t$224 + 20 * _zla( 0, ncols )
 2785.       t$234 = t$224 + 24 * _zla( 0, ncols )
 2783.       t$236 = t$224 + 28 * _zla( 0, ncols )
 2784.       t$238 = t$224 + 32 * _zla( 0, ncols )
 2781.       t$240 = t$224 + 36 * _zla( 0, ncols )
 2790.       t$242 = t$224 + 40 * _zla( 0, ncols )
 2776.       t$243 = 8 * ( 7 + t$224 + 40 * _zla( 0, ncols ) ) / 8
 2776.       t$245 = t$243 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2786.       t$246 = 8 * ( 7 + t$243 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2786.       t$248 = t$246 + 8 * _zla( 0, ncols )
 2702.       t$197 = int( _alloc( t$246 + 8 * _zla( 0, ncols ) ), 8 )
 2780.       t$198 = t$197
 2787.       t$201 = t$200 + t$197
 2778.       t$204 = t$203 + t$197
 2779.       t$207 = t$206 + t$197
 2777.       t$210 = t$209 + t$197
 2793.       t$213 = t$212 + t$197
 2792.       t$216 = t$215 + t$197
 2789.       t$219 = t$218 + t$197
 2788.       t$222 = t$221 + t$197
 2795.       t$225 = t$224 + t$197
 2794.       t$227 = t$224 + t$197 + 8 * _zla( 0, ncols )
 2782.       t$229 = t$224 + t$197 + 12 * _zla( 0, ncols )
 2791.       t$231 = t$224 + t$197 + 16 * _zla( 0, ncols )
 2785.       t$233 = t$224 + t$197 + 20 * _zla( 0, ncols )
 2783.       t$235 = t$224 + t$197 + 24 * _zla( 0, ncols )
 2784.       t$237 = t$224 + t$197 + 28 * _zla( 0, ncols )
 2781.       t$239 = t$224 + t$197 + 32 * _zla( 0, ncols )
 2790.       t$241 = t$224 + t$197 + 36 * _zla( 0, ncols )
 2776.       t$244 = t$243 + t$197
 2786.       t$247 = t$246 + t$197
 2821.       if ( kmax > 0 ) then
 2822.          if ( ncols > 0 ) then
 2821.             $I_L2821_205 = 0
 2821.             if ( kmax >= 4 ) then
 2821.                $I_L2821_229 = 0
 2821. !dir$ blocking_size( 1, 1 )
 2821.                do
 2838.                   $SCA_sigmid#1_U0 = sigmid(1 + 4 * $I_L2821_229)
 2838.                   $SCA_sigmid#2_U1 = sigmid(2 + 4 * $I_L2821_229)
 2838.                   $SCA_sigmid#3_U2 = sigmid(3 + 4 * $I_L2821_229)
 2838.                   $SCA_sigmid#4_U3 = sigmid(4 + 4 * $I_L2821_229)
 2822.                   $I_L2822_180 = 0
 2822. !dir$ ivdep
 2822. !dir$ blocking_size( 256, 256 )
 2822.                   do
 2823.                      css(1 + $I_L2822_180, 1 + 4 * $I_L2821_229) = 0.0
 2824.                      ccu(1 + $I_L2822_180, 1 + 4 * $I_L2821_229) = 0.0
 2825.                      csat(1 + $I_L2822_180, 1 + 4 * $I_L2821_229) = 0.0
 2826.                      cdin(1 + $I_L2822_180, 1 + 4 * $I_L2821_229) = 0.0
 2827.                      cstc(1 + $I_L2822_180, 1 + 4 * $I_L2821_229) = 0.0
 2828.                      ccon(1 + $I_L2822_180, 1 + 4 * $I_L2821_229) = 0.0
 2829.                      cson(1 + $I_L2822_180, 1 + 4 * $I_L2821_229) = 0.0
 2839.                      pll(1 + $I_L2822_180, 1 + 4 * $I_L2821_229) = gps(1 + $I_L2822_180) * $SCA_sigmid#1_U0
 2823.                      css(1 + $I_L2822_180, 2 + 4 * $I_L2821_229) = 0.0
 2824.                      ccu(1 + $I_L2822_180, 2 + 4 * $I_L2821_229) = 0.0
 2825.                      csat(1 + $I_L2822_180, 2 + 4 * $I_L2821_229) = 0.0
 2826.                      cdin(1 + $I_L2822_180, 2 + 4 * $I_L2821_229) = 0.0
 2827.                      cstc(1 + $I_L2822_180, 2 + 4 * $I_L2821_229) = 0.0
 2828.                      ccon(1 + $I_L2822_180, 2 + 4 * $I_L2821_229) = 0.0
 2829.                      cson(1 + $I_L2822_180, 2 + 4 * $I_L2821_229) = 0.0
 2839.                      pll(1 + $I_L2822_180, 2 + 4 * $I_L2821_229) = gps(1 + $I_L2822_180) * $SCA_sigmid#2_U1
 2823.                      css(1 + $I_L2822_180, 3 + 4 * $I_L2821_229) = 0.0
 2824.                      ccu(1 + $I_L2822_180, 3 + 4 * $I_L2821_229) = 0.0
 2825.                      csat(1 + $I_L2822_180, 3 + 4 * $I_L2821_229) = 0.0
 2826.                      cdin(1 + $I_L2822_180, 3 + 4 * $I_L2821_229) = 0.0
 2827.                      cstc(1 + $I_L2822_180, 3 + 4 * $I_L2821_229) = 0.0
 2828.                      ccon(1 + $I_L2822_180, 3 + 4 * $I_L2821_229) = 0.0
 2829.                      cson(1 + $I_L2822_180, 3 + 4 * $I_L2821_229) = 0.0
 2839.                      pll(1 + $I_L2822_180, 3 + 4 * $I_L2821_229) = gps(1 + $I_L2822_180) * $SCA_sigmid#3_U2
 2823.                      css(1 + $I_L2822_180, 4 + 4 * $I_L2821_229) = 0.0
 2824.                      ccu(1 + $I_L2822_180, 4 + 4 * $I_L2821_229) = 0.0
 2825.                      csat(1 + $I_L2822_180, 4 + 4 * $I_L2821_229) = 0.0
 2826.                      cdin(1 + $I_L2822_180, 4 + 4 * $I_L2821_229) = 0.0
 2827.                      cstc(1 + $I_L2822_180, 4 + 4 * $I_L2821_229) = 0.0
 2828.                      ccon(1 + $I_L2822_180, 4 + 4 * $I_L2821_229) = 0.0
 2829.                      cson(1 + $I_L2822_180, 4 + 4 * $I_L2821_229) = 0.0
 2839.                      pll(1 + $I_L2822_180, 4 + 4 * $I_L2821_229) = gps(1 + $I_L2822_180) * $SCA_sigmid#4_U3
 2830.                      $I_L2822_180 = 1 + $I_L2822_180
 2822.                      if ( $I_L2822_180 >= ncols ) exit
 2822.                   enddo
 2831.                   $I_L2821_229 = 1 + $I_L2821_229
 2830.                   if ( $I_L2821_229 >= _rsh( kmax, 2 ) ) exit
 2830.                enddo
 2831.                $I_L2821_205 = and( 0xfffffffffffffffcUL, kmax )
 2831.             endif
 2821.             if ( $I_L2821_205 < kmax ) then
 2821.                $I_L2821_226 = 0
 2821. !dir$ blocking_size( 1, 1 )
 2821.                do
 2838.                   $SCA_sigmid_I0 = sigmid(1 + $I_L2821_205 + $I_L2821_226)
 2822.                   $I_L2822_180 = 0
 2822. !dir$ ivdep
 2822. !dir$ blocking_size( 256, 256 )
 2822.                   do
 2823.                      css(1 + $I_L2822_180, 1 + $I_L2821_205 + $I_L2821_226) = 0.0
 2824.                      ccu(1 + $I_L2822_180, 1 + $I_L2821_205 + $I_L2821_226) = 0.0
 2825.                      csat(1 + $I_L2822_180, 1 + $I_L2821_205 + $I_L2821_226) = 0.0
 2826.                      cdin(1 + $I_L2822_180, 1 + $I_L2821_205 + $I_L2821_226) = 0.0
 2827.                      cstc(1 + $I_L2822_180, 1 + $I_L2821_205 + $I_L2821_226) = 0.0
 2828.                      ccon(1 + $I_L2822_180, 1 + $I_L2821_205 + $I_L2821_226) = 0.0
 2829.                      cson(1 + $I_L2822_180, 1 + $I_L2821_205 + $I_L2821_226) = 0.0
 2839.                      pll(1 + $I_L2822_180, 1 + $I_L2821_205 + $I_L2821_226) = $SCA_sigmid_I0 * gps(1 + $I_L2822_180)
 2830.                      $I_L2822_180 = 1 + $I_L2822_180
 2822.                      if ( $I_L2822_180 >= ncols ) exit
 2822.                   enddo
 2831.                   $I_L2821_226 = 1 + $I_L2821_226
 2830.                   if ( $I_L2821_226 >= kmax + -$I_L2821_205 ) exit
 2830.                enddo
 2830.             endif
 2830.          endif
 2830.       endif
 2845.       if ( ncols > 0 ) then
 2845.          $I_L2845_182 = 0
 2845. !dir$ ivdep
 2845.          do
 2846.             $conv_WR0_R0 = convc(1 + $I_L2845_182)
 2846.             conv(1 + $I_L2845_182) = $conv_WR0_R0
 2849.             cinv(1 + $I_L2845_182) = 0.0
 2851.             chigh(1 + $I_L2845_182) = 0.0
 2852.             $ktop_WR0_R3 = int( 5.0e-1 + convt(1 + $I_L2845_182) )
 2852.             ktop(1 + $I_L2845_182) = $ktop_WR0_R3
 2853.             if ( $ktop_WR0_R3 <= 0 ) then
 2845.                goto 10
 2853.             else if ( $ktop_WR0_R3 > kmax ) then
 2853.    10          continue
 2853.                $ktop_WR0_R3 = 1
 2853.                ktop(1 + $I_L2845_182) = 1
 2853.             endif
 2854.             $kbot_WR0_R4 = int( 5.0e-1 + convb(1 + $I_L2845_182) )
 2854.             kbot(1 + $I_L2845_182) = $kbot_WR0_R4
 2855.             if ( $kbot_WR0_R4 <= 0 ) then
 2853.                goto 20
 2855.             else if ( $kbot_WR0_R4 > kmax ) then
 2855.    20          continue
 2855.                $kbot_WR0_R4 = 1
 2855.                kbot(1 + $I_L2845_182) = 1
 2855.             endif
 2856.             klow(1 + $I_L2845_182) = 1
 2858.             khigh(1 + $I_L2845_182) = 1
 2859.             $convs_WR0_R5 = convcs(1 + $I_L2845_182)
 2859.             convs(1 + $I_L2845_182) = $convs_WR0_R5
 2860.             $ktops_WR0_R6 = int( 5.0e-1 + convts(1 + $I_L2845_182) )
 2860.             ktops(1 + $I_L2845_182) = $ktops_WR0_R6
 2861.             if ( $ktops_WR0_R6 <= 0 ) then
 2855.                goto 30
 2861.             else if ( $ktops_WR0_R6 > kmax ) then
 2861.    30          continue
 2861.                $ktops_WR0_R6 = 1
 2861.                ktops(1 + $I_L2845_182) = 1
 2861.             endif
 2862.             $kbots_WR0_R7 = int( 5.0e-1 + convbs(1 + $I_L2845_182) )
 2862.             kbots(1 + $I_L2845_182) = $kbots_WR0_R7
 2863.             if ( $kbots_WR0_R7 <= 0 ) then
 2861.                goto 40
 2863.             else if ( $kbots_WR0_R7 > kmax ) then
 2863.    40          continue
 2863.                $kbots_WR0_R7 = 1
 2863.                kbots(1 + $I_L2845_182) = 1
 2863.             endif
 2873.             if ( sigmid($ktop_WR0_R3) * gps(1 + $I_L2845_182) <= 400.0 ) then
 2873.                if ( $conv_WR0_R0 > 0.0 ) then
 2876.                   khigh(1 + $I_L2845_182) = 1 + $ktop_WR0_R3
 2875.                   chigh(1 + $I_L2845_182) = ( min( 1.0, ( 2.0 * $conv_WR0_R0 ) ) )
 2875.                endif
 2875.             endif
 2878.             if ( $ktop_WR0_R3 + -$kbot_WR0_R4 > 0 ) then
 2880.                $conv_WR0_R0 = 1.0 + -_exp3( log( abs( ( 1.0 + -$conv_WR0_R0 ) ) ), ( 1.0 + -$conv_WR0_R0 ), 1.0/( real( $ktop_WR0_R3 + -$kbot_WR0_R4, 8 ) ) )
 2880.                conv(1 + $I_L2845_182) = $conv_WR0_R0
 2880.             endif
 2882.             if ( $ktops_WR0_R6 + -$kbots_WR0_R7 > 0 ) then
 2884.                $convs_WR0_R5 = 1.0 + -_exp3( log( abs( ( 1.0 + -$convs_WR0_R5 ) ) ), ( 1.0 + -$convs_WR0_R5 ), 1.0/( real( $ktops_WR0_R6 + -$kbots_WR0_R7, 8 ) ) )
 2884.                convs(1 + $I_L2845_182) = $convs_WR0_R5
 2884.             endif
 2886.             $I_L2845_182 = 1 + $I_L2845_182
 2885.             if ( $I_L2845_182 >= ncols ) exit
 2885.          enddo
 2893.          $I_L2893_184 = 0
 2893. !dir$ ivdep
 2893.          do
 2894.             invb(1 + $I_L2893_184) = min( kmax, kmax + -nls )
 2895.             dthdpm(1 + $I_L2893_184) = 0.0
 2896.             $I_L2893_184 = 1 + $I_L2893_184
 2893.             if ( $I_L2893_184 >= ncols ) exit
 2893.          enddo
 2893.       endif
 2898.       if ( -2 + kmax >= 0 ) then
 2899.          if ( ncols > 0 ) then
 2898.             $I_L2898_224 = 0
 2898.             do
 2899.                $I_L2899_222 = 0
 2899.                do
 2898.                   $I_L2898_219 = 0
 2898. !dir$ shortloop16
 2898. !dir$ blocking_size( 2, 2 )
 2898.                   do
 2899.                      $I_L2899_186 = 0
 2899. !dir$ ivdep
 2899. !dir$ blocking_size( 256, 256 )
 2899.                      do
 2900.                         if ( pll(1 + $I_L2899_186 + 256 * $I_L2899_222, 2 + $I_L2898_219 + 2 * $I_L2898_224) > 700.0 ) then
 2901.                            $dthdp_S10 = ( ( -( gtmp(1 + $I_L2899_186 + 256 * $I_L2899_222, 2 + $I_L2898_219 + 2 * $I_L2898_224) * _exp3( log( abs( ( 1000.0 * 1.0/pll(1 + $I_L2899_186 + 256 * $I_L2899_222, 2 + $I_L2898_219 + 2 * $I_L2898_224) ) ) ), ( 1000.0 * 1.0/pll(1 + $I_L2899_186 + 256 * $I_L2899_222, 2 + $I_L2898_219 + 2 * $I_L2898_224) ), 2.8573561616563808e-1 ) ) + gtmp(1 + $I_L2899_186 + 256 * $I_L2899_222, 1 + $I_L2898_219 + 2 * $I_L2898_224) * _exp3( log( abs( ( 1000.0 * 1.0/pll(1 + $I_L2899_186 + 256 * $I_L2899_222, 1 + $I_L2898_219 + 2 * $I_L2898_224) ) ) ), ( 1000.0 * 1.0/pll(1 + $I_L2899_186 + 256 * $I_L2899_222, 1 + $I_L2898_219 + 2 * $I_L2898_224) ), 2.8573561616563808e-1 ) ) * 1.0/( pll(1 + $I_L2899_186 + 256 * $I_L2899_222, 1 + $I_L2898_219 + 2 * $I_L2898_224) + -pll(1 + $I_L2899_186 + 256 * $I_L2899_222, 2 + $I_L2898_219 + 2 * $I_L2898_224) ) )
 2904.                            if ( ( ( -( gtmp(1 + $I_L2899_186 + 256 * $I_L2899_222, 2 + $I_L2898_219 + 2 * $I_L2898_224) * _exp3( log( abs( ( 1000.0 * 1.0/pll(1 + $I_L2899_186 + 256 * $I_L2899_222, 2 + $I_L2898_219 + 2 * $I_L2898_224) ) ) ), ( 1000.0 * 1.0/pll(1 + $I_L2899_186 + 256 * $I_L2899_222, 2 + $I_L2898_219 + 2 * $I_L2898_224) ), 2.8573561616563808e-1 ) ) + gtmp(1 + $I_L2899_186 + 256 * $I_L2899_222, 1 + $I_L2898_219 + 2 * $I_L2898_224) * _exp3( log( abs( ( 1000.0 * 1.0/pll(1 + $I_L2899_186 + 256 * $I_L2899_222, 1 + $I_L2898_219 + 2 * $I_L2898_224) ) ) ), ( 1000.0 * 1.0/pll(1 + $I_L2899_186 + 256 * $I_L2899_222, 1 + $I_L2898_219 + 2 * $I_L2898_224) ), 2.8573561616563808e-1 ) ) * 1.0/( pll(1 + $I_L2899_186 + 256 * $I_L2899_222, 1 + $I_L2898_219 + 2 * $I_L2898_224) + -pll(1 + $I_L2899_186 + 256 * $I_L2899_222, 2 + $I_L2898_219 + 2 * $I_L2898_224) ) ) < 0.0 ) then
 2905.                               invb(1 + $I_L2899_186 + 256 * $I_L2899_222) = min( invb(1 + $I_L2899_186 + 256 * $I_L2899_222), ( 1 + $I_L2898_219 + 2 * $I_L2898_224 ) )
 2906.                               if ( $dthdp_S10 < -4.0000000000000001e-2 ) then
 2907.                                  if ( $dthdp_S10 < dthdpm(1 + $I_L2899_186 + 256 * $I_L2899_222) ) then
 2908.                                     dthdpm(1 + $I_L2899_186 + 256 * $I_L2899_222) = $dthdp_S10
 2909.                                     klow(1 + $I_L2899_186 + 256 * $I_L2899_222) = ( 2 + $I_L2898_219 + 2 * $I_L2898_224 )
 2909.                                  endif
 2909.                               endif
 2909.                            endif
 2909.                         endif
 2899.                         $I_L2899_186 = 1 + $I_L2899_186
 2913.                         if ( $I_L2899_186 >= min( ncols, 256 + 256 * $I_L2899_222 ) + -256 * $I_L2899_222 ) exit
 2913.                      enddo
 2898.                      $I_L2898_219 = 1 + $I_L2898_219
 2898.                      if ( $I_L2898_219 >= min( -1 + kmax, 2 + 2 * $I_L2898_224 ) + -2 * $I_L2898_224 ) exit
 2898.                   enddo
 2899.                   $I_L2899_222 = 1 + $I_L2899_222
 2914.                   if ( $I_L2899_222 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 2914.                enddo
 2898.                $I_L2898_224 = 1 + $I_L2898_224
 2898.                if ( $I_L2898_224 >= 1 + max( 0, -1 + _rsh( kmax, 1 ) ) ) exit
 2898.             enddo
 2898.          endif
 2898.       endif
 2919.       if ( ncols > 0 ) then
 2919.          $I_L2919_189 = 0
 2919. !dir$ ivdep
 2919.          do
 2920.             if ( dthdpm(1 + $I_L2919_189) < -4.0000000000000001e-2 ) then
 2920.                if ( grh(1 + $I_L2919_189, invb(1 + $I_L2919_189)) > 5.9999999999999998e-1 ) then
 2921.                   $cinv_WR0_R9 = -6.6699999999999999 * ( 4.0000000000000001e-2 + dthdpm(1 + $I_L2919_189) )
 2923.                   $cinv_WR0_R9 = min( 1.0, max( 0.0, $cinv_WR0_R9 ) )
 2923.                   cinv(1 + $I_L2919_189) = $cinv_WR0_R9
 2924.                   if ( grh(1 + $I_L2919_189, invb(1 + $I_L2919_189)) < 8.0000000000000004e-1 ) then
 2925.                      $cinv_WR0_R9 = $cinv_WR0_R9 * ( 1.0 + -5.0 * ( 8.0000000000000004e-1 + -grh(1 + $I_L2919_189, invb(1 + $I_L2919_189)) ) )
 2925.                      cinv(1 + $I_L2919_189) = $cinv_WR0_R9
 2925.                   endif
 2925.                endif
 2925.             endif
 2929.             if ( conv(1 + $I_L2919_189) <= 0.0 ) then
 2930.                cdin(1 + $I_L2919_189, klow(1 + $I_L2919_189)) = cinv(1 + $I_L2919_189)
 2930.             endif
 2932.             $I_L2919_189 = 1 + $I_L2919_189
 2931.             if ( $I_L2919_189 >= ncols ) exit
 2931.          enddo
 2931.       endif
 2938.       if ( min( kmax, kmax + -nls ) + -lcnvl > 0 ) then
 2939.          if ( ncols > 0 ) then
 2938.             $I_L2938_207 = 0
 2938.             do
 2939.                $I_L2939_191 = 0
 2939. !dir$ ivdep
 2939.                do
 2943.                   $csat_WR0_R10 = 9.9999998509883898 * ( -9.0000000000000002e-1 + grh(1 + $I_L2939_191, 1 + lcnvl + $I_L2938_207) )
 2944.                   $csat_WR0_R10 = ( max( 0.0, $csat_WR0_R10 ) ) * ( max( 0.0, $csat_WR0_R10 ) )
 2945.                   if ( pll(1 + $I_L2939_191, 1 + lcnvl + $I_L2938_207) < 700.0 ) then
 2946.                      if ( omg(1 + $I_L2939_191, 1 + lcnvl + $I_L2938_207) >= 5.0000000000000002e-5 ) then
 2947.                         $csat_WR0_R10 = 0.0
 2948.                      else if ( omg(1 + $I_L2939_191, 1 + lcnvl + $I_L2938_207) >= -5.0000000000000002e-5 ) then
 2949.                         $delomg_WR0_R11 = 10000.0 * ( 5.0000000000000002e-5 + omg(1 + $I_L2939_191, 1 + lcnvl + $I_L2938_207) )
 2950.                         $csat_WR0_R10 = $csat_WR0_R10 * ( 1.0 + -( $delomg_WR0_R11 * $delomg_WR0_R11 ) )
 2950.                      endif
 2950.                   endif
 2954.                   $csat_WR0_R10 = min( 1.0, $csat_WR0_R10 )
 2954.                   csat(1 + $I_L2939_191, 1 + lcnvl + $I_L2938_207) = $csat_WR0_R10
 2955.                   cstc(1 + $I_L2939_191, 1 + lcnvl + $I_L2938_207) = $csat_WR0_R10
 2956.                   $I_L2939_191 = 1 + $I_L2939_191
 2953.                   if ( $I_L2939_191 >= ncols ) exit
 2953.                enddo
 2957.                $I_L2938_207 = 1 + $I_L2938_207
 2956.                if ( $I_L2938_207 >= ( min( kmax, kmax + -nls ) + -lcnvl ) ) exit
 2956.             enddo
 2956.          endif
 2956.       endif
 2958.       if ( ncols > 0 ) then
 2959.          if ( kmax > 0 ) then
 2959.             $I_L2959_209 = 0
 2959.             do
 2958.                $I_L2958_193 = 0
 2958. !dir$ ivdep
 2958.                do
 2960.                   if ( cdin(1 + $I_L2958_193, 1 + $I_L2959_209) > 0.0 ) then
 2961.                      css(1 + $I_L2958_193, kmax + -$I_L2959_209) = cdin(1 + $I_L2958_193, 1 + $I_L2959_209)
 2961.                   else
 2963.                      css(1 + $I_L2958_193, kmax + -$I_L2959_209) = csat(1 + $I_L2958_193, 1 + $I_L2959_209)
 2963.                   endif
 2966.                   $I_L2958_193 = 1 + $I_L2958_193
 2964.                   if ( $I_L2958_193 >= ncols ) exit
 2964.                enddo
 2965.                $I_L2959_209 = 1 + $I_L2959_209
 2965.                if ( $I_L2959_209 >= kmax ) exit
 2965.             enddo
 2965.          endif
 2965.       endif
 2970.       if (  _substr(covlp,1,4) == 'MAXI' ) then
 2971.          if ( ncols > 0 ) then
 2971.             $I_L2971_211 = 0
 2971.             do
 2972.                $t_S17 = kbot(1 + $I_L2971_211)
 2972.                $t_S18 = ktop(1 + $I_L2971_211)
 2972.                if ( $t_S18 + -$t_S17 >= 0 ) then
 2972.                   $SCA_conv_I1 = conv(1 + $I_L2971_211)
 2972.                   $I_L2972_195 = 0
 2972. !dir$ ivdep
 2972.                   do
 2973.                      ccu(1 + $I_L2971_211, 1 + kmax + -$t_S17 + -$I_L2972_195) = $SCA_conv_I1
 2974.                      $I_L2972_195 = 1 + $I_L2972_195
 2972.                      if ( $I_L2972_195 >= 1 + $t_S18 + -$t_S17 ) exit
 2972.                   enddo
 2972.                endif
 2975.                $I_L2971_211 = 1 + $I_L2971_211
 2974.                if ( $I_L2971_211 >= ncols ) exit
 2974.             enddo
 2974.          endif
 2979.       else if (  _substr(covlp,1,4) == 'RAND' ) then
 2981.          if ( ncols > 0 ) then
 2981.             $I_L2981_213 = 0
 2981.             do
 2982.                $t_S21 = kbots(1 + $I_L2981_213)
 2982.                $t_S22 = ktops(1 + $I_L2981_213)
 2982.                if ( $t_S22 + -$t_S21 >= 0 ) then
 2983.                   if ( conv(1 + $I_L2981_213) <= 0.0 ) then
 2982.                      $I_L2982_197 = 0
 2982. !dir$ ivdep
 2982.                      do
 2983.                         if ( cdin(1 + $I_L2981_213, $t_S21 + $I_L2982_197) >= 0.0 ) then
 2984.                            ccon(1 + $I_L2981_213, $t_S21 + $I_L2982_197) = convs(1 + $I_L2981_213)
 2985.                            cson(1 + $I_L2981_213, $t_S21 + $I_L2982_197) = convs(1 + $I_L2981_213)
 2985.                         endif
 2987.                         $I_L2982_197 = 1 + $I_L2982_197
 2986.                         if ( $I_L2982_197 >= 1 + $t_S22 + -$t_S21 ) exit
 2986.                      enddo
 2986.                   endif
 2986.                endif
 2988.                $I_L2981_213 = 1 + $I_L2981_213
 2987.                if ( $I_L2981_213 >= ncols ) exit
 2987.             enddo
 2991.             if ( kmax > 0 ) then
 2991.                $I_L2991_215 = 0
 2991. !dir$ blocking_size( 1, 1 )
 2991.                do
 2990.                   $I_L2990_199 = 0
 2990. !dir$ ivdep
 2990. !dir$ blocking_size( 256, 256 )
 2990.                   do
 2992.                      if ( ( 1 + $I_L2991_215 ) >= kbot(1 + $I_L2990_199) ) then
 2992.                         if ( ( 1 + $I_L2991_215 ) <= ktop(1 + $I_L2990_199) ) then
 2993.                            ccon(1 + $I_L2990_199, 1 + $I_L2991_215) = conv(1 + $I_L2990_199) + ccon(1 + $I_L2990_199, 1 + $I_L2991_215)
 2993.                         endif
 2993.                      endif
 2997.                      ccon(1 + $I_L2990_199, 1 + $I_L2991_215) = min( 1.0, ccon(1 + $I_L2990_199, 1 + $I_L2991_215) )
 2998.                      css(1 + $I_L2990_199, kmax + -$I_L2991_215) = min( 1.0, css(1 + $I_L2990_199, kmax + -$I_L2991_215) )
 3000.                      $I_L2990_199 = 1 + $I_L2990_199
 2996.                      if ( $I_L2990_199 >= ncols ) exit
 2996.                   enddo
 2999.                   $I_L2991_215 = 1 + $I_L2991_215
 2999.                   if ( $I_L2991_215 >= kmax ) exit
 2999.                enddo
 2999.             endif
 3002.             $I_L3002_201 = 0
 3002. !dir$ ivdep
 3002.             do
 3003.                ccon(1 + $I_L3002_201, khigh(1 + $I_L3002_201)) = ccon(1 + $I_L3002_201, khigh(1 + $I_L3002_201)) + chigh(1 + $I_L3002_201)
 3004.                $I_L3002_201 = 1 + $I_L3002_201
 3002.                if ( $I_L3002_201 >= ncols ) exit
 3002.             enddo
 3002.          endif
 3006.          if ( kmax > 0 ) then
 3007.             if ( ncols > 0 ) then
 3008.                if ( mxrdcc /= .false. ) then
 3006.                   $I_L3006_217 = 0
 3006.                   do
 3007.                      $I_L3007_203 = 0
 3007. !dir$ ivdep
 3007.                      do
 3012.                         css(1 + $I_L3007_203, kmax + -$I_L3006_217) = min( 1.0, ccon(1 + $I_L3007_203, 1 + $I_L3006_217) + css(1 + $I_L3007_203, kmax + -$I_L3006_217) * ( 1.0 + -ccon(1 + $I_L3007_203, 1 + $I_L3006_217) ) )
 3014.                         $I_L3007_203 = 1 + $I_L3007_203
 3013.                         if ( $I_L3007_203 >= ncols ) exit
 3013.                      enddo
 3015.                      $I_L3006_217 = 1 + $I_L3006_217
 3014.                      if ( $I_L3006_217 >= kmax ) exit
 3014.                   enddo
 3014.                endif
 3014.             endif
 3014.          endif
 3014.       endif
 2702.       _free( t$197 )
 3018.       return
 3018.       end
 3018.       
 3025.       
 3025.       subroutine cldgen( covlp, gps, sigmid, grh, omg, gtmp, css, ccu, cdin, cstc, ccon, cson, mxrdcc, lcnvl, lthncl, convc, convt, convb, ncols, kmax, nls )
 3025.       t$18 = ncols
 3079.       t$249 = _zla( 0, ncols )
 3025.       t$19 = kmax
 3080.       t$250 = _zla( 0, kmax )
 3025.       t$251 = _zla( 0, ncols )
 3025.       t$252 = _zla( 0, ncols ) * _zla( 0, kmax )
 3109.       t$255 = 8 * _zla( 0, ncols )
 3117.       t$256 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 3117.       t$258 = t$256 + 8 * _zla( 0, ncols )
 3107.       t$259 = 8 * ( 7 + t$256 + 8 * _zla( 0, ncols ) ) / 8
 3107.       t$261 = t$259 + 8 * _zla( 0, ncols )
 3108.       t$262 = 8 * ( 7 + t$259 + 8 * _zla( 0, ncols ) ) / 8
 3108.       t$264 = t$262 + 8 * _zla( 0, ncols )
 3106.       t$265 = 8 * ( 7 + t$262 + 8 * _zla( 0, ncols ) ) / 8
 3106.       t$267 = t$265 + 8 * _zla( 0, ncols )
 3119.       t$268 = 8 * ( 7 + t$265 + 8 * _zla( 0, ncols ) ) / 8
 3119.       t$270 = t$268 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 3116.       t$271 = 8 * ( 7 + t$268 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 3116.       t$273 = t$271 + 8 * _zla( 0, ncols )
 3118.       t$274 = 8 * ( 7 + t$271 + 8 * _zla( 0, ncols ) ) / 8
 3118.       t$276 = t$274 + 8 * _zla( 0, ncols )
 3120.       t$277 = 8 * ( 7 + t$274 + 8 * _zla( 0, ncols ) ) / 8
 3120.       t$279 = t$277 + 8 * _zla( 0, ncols )
 3121.       t$281 = t$277 + 12 * _zla( 0, ncols )
 3111.       t$283 = t$277 + 16 * _zla( 0, ncols )
 3114.       t$285 = t$277 + 20 * _zla( 0, ncols )
 3112.       t$287 = t$277 + 24 * _zla( 0, ncols )
 3113.       t$289 = t$277 + 28 * _zla( 0, ncols )
 3110.       t$291 = t$277 + 32 * _zla( 0, ncols )
 3105.       t$292 = 8 * ( 7 + t$277 + 32 * _zla( 0, ncols ) ) / 8
 3105.       t$294 = t$292 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 3115.       t$295 = 8 * ( 7 + t$292 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 3115.       t$297 = t$295 + 8 * _zla( 0, ncols )
 3025.       t$253 = int( _alloc( t$295 + 8 * _zla( 0, ncols ) ), 8 )
 3109.       t$254 = t$253
 3117.       t$257 = t$256 + t$253
 3107.       t$260 = t$259 + t$253
 3108.       t$263 = t$262 + t$253
 3106.       t$266 = t$265 + t$253
 3119.       t$269 = t$268 + t$253
 3116.       t$272 = t$271 + t$253
 3118.       t$275 = t$274 + t$253
 3120.       t$278 = t$277 + t$253
 3121.       t$280 = t$277 + t$253 + 8 * _zla( 0, ncols )
 3111.       t$282 = t$277 + t$253 + 12 * _zla( 0, ncols )
 3114.       t$284 = t$277 + t$253 + 16 * _zla( 0, ncols )
 3112.       t$286 = t$277 + t$253 + 20 * _zla( 0, ncols )
 3113.       t$288 = t$277 + t$253 + 24 * _zla( 0, ncols )
 3110.       t$290 = t$277 + t$253 + 28 * _zla( 0, ncols )
 3105.       t$293 = t$292 + t$253
 3115.       t$296 = t$295 + t$253
 3144.       if ( kmax > 0 ) then
 3145.          if ( ncols > 0 ) then
 3144.             $I_L3144_170 = 0
 3144.             if ( kmax >= 4 ) then
 3144.                $I_L3144_195 = 0
 3144. !dir$ blocking_size( 1, 1 )
 3144.                do
 3161.                   $SCA_sigmid#1_U0 = sigmid(1 + 4 * $I_L3144_195)
 3161.                   $SCA_sigmid#2_U1 = sigmid(2 + 4 * $I_L3144_195)
 3161.                   $SCA_sigmid#3_U2 = sigmid(3 + 4 * $I_L3144_195)
 3161.                   $SCA_sigmid#4_U3 = sigmid(4 + 4 * $I_L3144_195)
 3145.                   $I_L3145_148 = 0
 3145. !dir$ ivdep
 3145. !dir$ blocking_size( 256, 256 )
 3145.                   do
 3146.                      css(1 + $I_L3145_148, 1 + 4 * $I_L3144_195) = 0.0
 3147.                      ccu(1 + $I_L3145_148, 1 + 4 * $I_L3144_195) = 0.0
 3149.                      cdin(1 + $I_L3145_148, 1 + 4 * $I_L3144_195) = 0.0
 3150.                      cstc(1 + $I_L3145_148, 1 + 4 * $I_L3144_195) = 0.0
 3151.                      ccon(1 + $I_L3145_148, 1 + 4 * $I_L3144_195) = 0.0
 3152.                      cson(1 + $I_L3145_148, 1 + 4 * $I_L3144_195) = 0.0
 3162.                      pll(1 + $I_L3145_148, 1 + 4 * $I_L3144_195) = gps(1 + $I_L3145_148) * $SCA_sigmid#1_U0
 3146.                      css(1 + $I_L3145_148, 2 + 4 * $I_L3144_195) = 0.0
 3147.                      ccu(1 + $I_L3145_148, 2 + 4 * $I_L3144_195) = 0.0
 3149.                      cdin(1 + $I_L3145_148, 2 + 4 * $I_L3144_195) = 0.0
 3150.                      cstc(1 + $I_L3145_148, 2 + 4 * $I_L3144_195) = 0.0
 3151.                      ccon(1 + $I_L3145_148, 2 + 4 * $I_L3144_195) = 0.0
 3152.                      cson(1 + $I_L3145_148, 2 + 4 * $I_L3144_195) = 0.0
 3162.                      pll(1 + $I_L3145_148, 2 + 4 * $I_L3144_195) = gps(1 + $I_L3145_148) * $SCA_sigmid#2_U1
 3146.                      css(1 + $I_L3145_148, 3 + 4 * $I_L3144_195) = 0.0
 3147.                      ccu(1 + $I_L3145_148, 3 + 4 * $I_L3144_195) = 0.0
 3149.                      cdin(1 + $I_L3145_148, 3 + 4 * $I_L3144_195) = 0.0
 3150.                      cstc(1 + $I_L3145_148, 3 + 4 * $I_L3144_195) = 0.0
 3151.                      ccon(1 + $I_L3145_148, 3 + 4 * $I_L3144_195) = 0.0
 3152.                      cson(1 + $I_L3145_148, 3 + 4 * $I_L3144_195) = 0.0
 3162.                      pll(1 + $I_L3145_148, 3 + 4 * $I_L3144_195) = gps(1 + $I_L3145_148) * $SCA_sigmid#3_U2
 3146.                      css(1 + $I_L3145_148, 4 + 4 * $I_L3144_195) = 0.0
 3147.                      ccu(1 + $I_L3145_148, 4 + 4 * $I_L3144_195) = 0.0
 3149.                      cdin(1 + $I_L3145_148, 4 + 4 * $I_L3144_195) = 0.0
 3150.                      cstc(1 + $I_L3145_148, 4 + 4 * $I_L3144_195) = 0.0
 3151.                      ccon(1 + $I_L3145_148, 4 + 4 * $I_L3144_195) = 0.0
 3152.                      cson(1 + $I_L3145_148, 4 + 4 * $I_L3144_195) = 0.0
 3162.                      pll(1 + $I_L3145_148, 4 + 4 * $I_L3144_195) = gps(1 + $I_L3145_148) * $SCA_sigmid#4_U3
 3153.                      $I_L3145_148 = 1 + $I_L3145_148
 3145.                      if ( $I_L3145_148 >= ncols ) exit
 3145.                   enddo
 3154.                   $I_L3144_195 = 1 + $I_L3144_195
 3153.                   if ( $I_L3144_195 >= _rsh( kmax, 2 ) ) exit
 3153.                enddo
 3154.                $I_L3144_170 = and( 0xfffffffffffffffcUL, kmax )
 3154.             endif
 3144.             if ( $I_L3144_170 < kmax ) then
 3144.                $I_L3144_192 = 0
 3144. !dir$ blocking_size( 1, 1 )
 3144.                do
 3161.                   $SCA_sigmid_I0 = sigmid(1 + $I_L3144_170 + $I_L3144_192)
 3145.                   $I_L3145_148 = 0
 3145. !dir$ ivdep
 3145. !dir$ blocking_size( 256, 256 )
 3145.                   do
 3146.                      css(1 + $I_L3145_148, 1 + $I_L3144_170 + $I_L3144_192) = 0.0
 3147.                      ccu(1 + $I_L3145_148, 1 + $I_L3144_170 + $I_L3144_192) = 0.0
 3149.                      cdin(1 + $I_L3145_148, 1 + $I_L3144_170 + $I_L3144_192) = 0.0
 3150.                      cstc(1 + $I_L3145_148, 1 + $I_L3144_170 + $I_L3144_192) = 0.0
 3151.                      ccon(1 + $I_L3145_148, 1 + $I_L3144_170 + $I_L3144_192) = 0.0
 3152.                      cson(1 + $I_L3145_148, 1 + $I_L3144_170 + $I_L3144_192) = 0.0
 3162.                      pll(1 + $I_L3145_148, 1 + $I_L3144_170 + $I_L3144_192) = $SCA_sigmid_I0 * gps(1 + $I_L3145_148)
 3153.                      $I_L3145_148 = 1 + $I_L3145_148
 3145.                      if ( $I_L3145_148 >= ncols ) exit
 3145.                   enddo
 3154.                   $I_L3144_192 = 1 + $I_L3144_192
 3153.                   if ( $I_L3144_192 >= kmax + -$I_L3144_170 ) exit
 3153.                enddo
 3153.             endif
 3153.          endif
 3153.       endif
 3168.       if ( ncols > 0 ) then
 3168.          $I_L3168_150 = 0
 3168. !dir$ ivdep
 3168.          do
 3169.             $conv_WR0_R0 = convc(1 + $I_L3168_150)
 3169.             conv(1 + $I_L3168_150) = $conv_WR0_R0
 3170.             clow(1 + $I_L3168_150) = 0.0
 3171.             cinv(1 + $I_L3168_150) = 0.0
 3172.             cmid(1 + $I_L3168_150) = 0.0
 3173.             chigh(1 + $I_L3168_150) = 0.0
 3174.             $ktop_WR0_R2 = int( 5.0e-1 + convt(1 + $I_L3168_150) )
 3174.             ktop(1 + $I_L3168_150) = $ktop_WR0_R2
 3175.             if ( $ktop_WR0_R2 <= 0 ) then
 3168.                goto 10
 3175.             else if ( $ktop_WR0_R2 > kmax ) then
 3175.    10          continue
 3175.                $ktop_WR0_R2 = 1
 3175.                ktop(1 + $I_L3168_150) = 1
 3175.             endif
 3176.             $kbot_WR0_R3 = int( 5.0e-1 + convb(1 + $I_L3168_150) )
 3176.             kbot(1 + $I_L3168_150) = $kbot_WR0_R3
 3177.             if ( $kbot_WR0_R3 <= 0 ) then
 3175.                goto 20
 3177.             else if ( $kbot_WR0_R3 > kmax ) then
 3177.    20          continue
 3177.                kbot(1 + $I_L3168_150) = 1
 3177.             endif
 3178.             klow(1 + $I_L3168_150) = 1
 3179.             kmid(1 + $I_L3168_150) = 1
 3180.             khigh(1 + $I_L3168_150) = 1
 3191.             if ( sigmid($ktop_WR0_R2) * gps(1 + $I_L3168_150) <= 400.0 ) then
 3191.                if ( $conv_WR0_R0 >= 4.0000000000000002e-1 ) then
 3195.                   khigh(1 + $I_L3168_150) = 1 + $ktop_WR0_R2
 3194.                   chigh(1 + $I_L3168_150) = ( min( 1.0, ( 2.0 * ( -2.9999999999999999e-1 + $conv_WR0_R0 ) ) ) )
 3196.                   ccon(1 + $I_L3168_150, 1 + $ktop_WR0_R2) = ( min( 1.0, ( 2.0 * ( -2.9999999999999999e-1 + $conv_WR0_R0 ) ) ) )
 3196.                endif
 3196.             endif
 3198.             $I_L3168_150 = 1 + $I_L3168_150
 3197.             if ( $I_L3168_150 >= ncols ) exit
 3197.          enddo
 3205.          $I_L3205_152 = 0
 3205. !dir$ ivdep
 3205.          do
 3206.             invb(1 + $I_L3205_152) = min( kmax, kmax + -nls )
 3207.             dthdpm(1 + $I_L3205_152) = 0.0
 3208.             $I_L3205_152 = 1 + $I_L3205_152
 3205.             if ( $I_L3205_152 >= ncols ) exit
 3205.          enddo
 3205.       endif
 3210.       if ( -2 + kmax >= 0 ) then
 3211.          if ( ncols > 0 ) then
 3210.             $I_L3210_188 = 0
 3210.             do
 3211.                $I_L3211_184 = 0
 3211.                do
 3210.                   $I_L3210_178 = 0
 3210. !dir$ shortloop16
 3210. !dir$ blocking_size( 2, 2 )
 3210.                   do
 3211.                      $I_L3211_154 = 0
 3211. !dir$ ivdep
 3211. !dir$ blocking_size( 256, 256 )
 3211.                      do
 3212.                         if ( pll(1 + $I_L3211_154 + 256 * $I_L3211_184, 2 + $I_L3210_178 + 2 * $I_L3210_188) > 700.0 ) then
 3213.                            $dthdp_S8 = ( ( -( gtmp(1 + $I_L3211_154 + 256 * $I_L3211_184, 2 + $I_L3210_178 + 2 * $I_L3210_188) * _exp3( log( abs( ( 1000.0 * 1.0/pll(1 + $I_L3211_154 + 256 * $I_L3211_184, 2 + $I_L3210_178 + 2 * $I_L3210_188) ) ) ), ( 1000.0 * 1.0/pll(1 + $I_L3211_154 + 256 * $I_L3211_184, 2 + $I_L3210_178 + 2 * $I_L3210_188) ), 2.8573561616563808e-1 ) ) + gtmp(1 + $I_L3211_154 + 256 * $I_L3211_184, 1 + $I_L3210_178 + 2 * $I_L3210_188) * _exp3( log( abs( ( 1000.0 * 1.0/pll(1 + $I_L3211_154 + 256 * $I_L3211_184, 1 + $I_L3210_178 + 2 * $I_L3210_188) ) ) ), ( 1000.0 * 1.0/pll(1 + $I_L3211_154 + 256 * $I_L3211_184, 1 + $I_L3210_178 + 2 * $I_L3210_188) ), 2.8573561616563808e-1 ) ) * 1.0/( pll(1 + $I_L3211_154 + 256 * $I_L3211_184, 1 + $I_L3210_178 + 2 * $I_L3210_188) + -pll(1 + $I_L3211_154 + 256 * $I_L3211_184, 2 + $I_L3210_178 + 2 * $I_L3210_188) ) )
 3216.                            if ( ( ( -( gtmp(1 + $I_L3211_154 + 256 * $I_L3211_184, 2 + $I_L3210_178 + 2 * $I_L3210_188) * _exp3( log( abs( ( 1000.0 * 1.0/pll(1 + $I_L3211_154 + 256 * $I_L3211_184, 2 + $I_L3210_178 + 2 * $I_L3210_188) ) ) ), ( 1000.0 * 1.0/pll(1 + $I_L3211_154 + 256 * $I_L3211_184, 2 + $I_L3210_178 + 2 * $I_L3210_188) ), 2.8573561616563808e-1 ) ) + gtmp(1 + $I_L3211_154 + 256 * $I_L3211_184, 1 + $I_L3210_178 + 2 * $I_L3210_188) * _exp3( log( abs( ( 1000.0 * 1.0/pll(1 + $I_L3211_154 + 256 * $I_L3211_184, 1 + $I_L3210_178 + 2 * $I_L3210_188) ) ) ), ( 1000.0 * 1.0/pll(1 + $I_L3211_154 + 256 * $I_L3211_184, 1 + $I_L3210_178 + 2 * $I_L3210_188) ), 2.8573561616563808e-1 ) ) * 1.0/( pll(1 + $I_L3211_154 + 256 * $I_L3211_184, 1 + $I_L3210_178 + 2 * $I_L3210_188) + -pll(1 + $I_L3211_154 + 256 * $I_L3211_184, 2 + $I_L3210_178 + 2 * $I_L3210_188) ) ) < 0.0 ) then
 3217.                               invb(1 + $I_L3211_154 + 256 * $I_L3211_184) = min( invb(1 + $I_L3211_154 + 256 * $I_L3211_184), ( 1 + $I_L3210_178 + 2 * $I_L3210_188 ) )
 3218.                               if ( $dthdp_S8 < -4.0000000000000001e-2 ) then
 3219.                                  if ( $dthdp_S8 < dthdpm(1 + $I_L3211_154 + 256 * $I_L3211_184) ) then
 3220.                                     dthdpm(1 + $I_L3211_154 + 256 * $I_L3211_184) = $dthdp_S8
 3221.                                     klow(1 + $I_L3211_154 + 256 * $I_L3211_184) = ( 2 + $I_L3210_178 + 2 * $I_L3210_188 )
 3221.                                  endif
 3221.                               endif
 3221.                            endif
 3221.                         endif
 3211.                         $I_L3211_154 = 1 + $I_L3211_154
 3225.                         if ( $I_L3211_154 >= min( ncols, 256 + 256 * $I_L3211_184 ) + -256 * $I_L3211_184 ) exit
 3225.                      enddo
 3210.                      $I_L3210_178 = 1 + $I_L3210_178
 3210.                      if ( $I_L3210_178 >= min( -1 + kmax, 2 + 2 * $I_L3210_188 ) + -2 * $I_L3210_188 ) exit
 3210.                   enddo
 3211.                   $I_L3211_184 = 1 + $I_L3211_184
 3226.                   if ( $I_L3211_184 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 3226.                enddo
 3210.                $I_L3210_188 = 1 + $I_L3210_188
 3210.                if ( $I_L3210_188 >= 1 + max( 0, -1 + _rsh( kmax, 1 ) ) ) exit
 3210.             enddo
 3210.          endif
 3210.       endif
 3231.       if ( ncols > 0 ) then
 3231.          $I_L3231_157 = 0
 3231. !dir$ ivdep
 3231.          do
 3232.             if ( dthdpm(1 + $I_L3231_157) < -4.0000000000000001e-2 ) then
 3232.                if ( grh(1 + $I_L3231_157, invb(1 + $I_L3231_157)) > 5.9999999999999998e-1 ) then
 3233.                   $cinv_WR0_R6 = -6.6699999999999999 * ( 4.0000000000000001e-2 + dthdpm(1 + $I_L3231_157) )
 3235.                   $cinv_WR0_R6 = min( 1.0, max( 0.0, $cinv_WR0_R6 ) )
 3235.                   cinv(1 + $I_L3231_157) = $cinv_WR0_R6
 3236.                   if ( grh(1 + $I_L3231_157, invb(1 + $I_L3231_157)) < 8.0000000000000004e-1 ) then
 3237.                      $cinv_WR0_R6 = $cinv_WR0_R6 * ( 1.0 + -5.0 * ( 8.0000000000000004e-1 + -grh(1 + $I_L3231_157, invb(1 + $I_L3231_157)) ) )
 3237.                      cinv(1 + $I_L3231_157) = $cinv_WR0_R6
 3237.                   endif
 3237.                endif
 3237.             endif
 3240.             clow(1 + $I_L3231_157) = cinv(1 + $I_L3231_157)
 3241.             cdin(1 + $I_L3231_157, klow(1 + $I_L3231_157)) = cinv(1 + $I_L3231_157)
 3242.             $I_L3231_157 = 1 + $I_L3231_157
 3239.             if ( $I_L3231_157 >= ncols ) exit
 3239.          enddo
 3239.       endif
 3248.       if ( min( kmax, kmax + -nls ) + -lcnvl > 0 ) then
 3249.          if ( ncols > 0 ) then
 3248.             $I_L3248_190 = 0
 3248.             do
 3249.                $I_L3249_186 = 0
 3249.                do
 3248.                   $I_L3248_181 = 0
 3248. !dir$ shortloop16
 3248. !dir$ blocking_size( 2, 2 )
 3248.                   do
 3249.                      $I_L3249_159 = 0
 3249. !dir$ ivdep
 3249. !dir$ blocking_size( 256, 256 )
 3249.                      do
 3253.                         if ( pll(1 + $I_L3249_159 + 256 * $I_L3249_186, 1 + lcnvl + $I_L3248_181 + 2 * $I_L3248_190) > 400.0 ) then
 3254.                            $cx_WR0_R7 = 5.0 * ( -8.0000000000000004e-1 + grh(1 + $I_L3249_159 + 256 * $I_L3249_186, 1 + lcnvl + $I_L3248_181 + 2 * $I_L3248_190) )
 3254.                         else
 3256.                            $cx_WR0_R7 = 10.0 * ( -9.0000000000000002e-1 + grh(1 + $I_L3249_159 + 256 * $I_L3249_186, 1 + lcnvl + $I_L3248_181 + 2 * $I_L3248_190) )
 3256.                         endif
 3259.                         $cx_WR0_R7 = min( 1.0, ( max( 0.0, $cx_WR0_R7 ) ) * ( max( 0.0, $cx_WR0_R7 ) ) )
 3263.                         if ( pll(1 + $I_L3249_159 + 256 * $I_L3249_186, 1 + lcnvl + $I_L3248_181 + 2 * $I_L3248_190) > 700.0 ) then
 3272.                            if ( omg(1 + $I_L3249_159 + 256 * $I_L3249_186, 1 + lcnvl + $I_L3248_181 + 2 * $I_L3248_190) >= 5.0000000000000002e-5 ) then
 3273.                               $cx_WR0_R7 = 0.0
 3274.                            else if ( omg(1 + $I_L3249_159 + 256 * $I_L3249_186, 1 + lcnvl + $I_L3248_181 + 2 * $I_L3248_190) >= -5.0000000000000002e-5 ) then
 3275.                               $delomg_WR0_R8 = 10000.0 * ( 5.0000000000000002e-5 + omg(1 + $I_L3249_159 + 256 * $I_L3249_186, 1 + lcnvl + $I_L3248_181 + 2 * $I_L3248_190) )
 3276.                               $cx_WR0_R7 = $cx_WR0_R7 * ( 1.0 + -( $delomg_WR0_R8 * $delomg_WR0_R8 ) )
 3276.                            endif
 3278.                            if ( $cx_WR0_R7 > clow(1 + $I_L3249_159 + 256 * $I_L3249_186) ) then
 3279.                               klow(1 + $I_L3249_159 + 256 * $I_L3249_186) = ( 1 + lcnvl + $I_L3248_181 + 2 * $I_L3248_190 )
 3280.                               clow(1 + $I_L3249_159 + 256 * $I_L3249_186) = $cx_WR0_R7
 3280.                            endif
 3282.                         else if ( pll(1 + $I_L3249_159 + 256 * $I_L3249_186, 1 + lcnvl + $I_L3248_181 + 2 * $I_L3248_190) > 400.0 ) then
 3289.                            if ( $cx_WR0_R7 > cmid(1 + $I_L3249_159 + 256 * $I_L3249_186) ) then
 3290.                               kmid(1 + $I_L3249_159 + 256 * $I_L3249_186) = ( 1 + lcnvl + $I_L3248_181 + 2 * $I_L3248_190 )
 3291.                               cmid(1 + $I_L3249_159 + 256 * $I_L3249_186) = $cx_WR0_R7
 3291.                            endif
 3291.                         else if ( $cx_WR0_R7 > chigh(1 + $I_L3249_159 + 256 * $I_L3249_186) ) then
 3301.                            khigh(1 + $I_L3249_159 + 256 * $I_L3249_186) = ( 1 + lcnvl + $I_L3248_181 + 2 * $I_L3248_190 )
 3302.                            chigh(1 + $I_L3249_159 + 256 * $I_L3249_186) = $cx_WR0_R7
 3302.                         endif
 3249.                         $I_L3249_159 = 1 + $I_L3249_159
 3307.                         if ( $I_L3249_159 >= min( ncols, 256 + 256 * $I_L3249_186 ) + -256 * $I_L3249_186 ) exit
 3307.                      enddo
 3248.                      $I_L3248_181 = 1 + $I_L3248_181
 3248.                      if ( $I_L3248_181 >= min( ( min( kmax, kmax + -nls ) + -lcnvl ), 2 + 2 * $I_L3248_190 ) + -2 * $I_L3248_190 ) exit
 3248.                   enddo
 3249.                   $I_L3249_186 = 1 + $I_L3249_186
 3308.                   if ( $I_L3249_186 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 3308.                enddo
 3248.                $I_L3248_190 = 1 + $I_L3248_190
 3248.                if ( $I_L3248_190 >= 1 + max( 0, -1 + _rsh( 1 + min( kmax, kmax + -nls ) + -lcnvl, 1 ) ) ) exit
 3248.             enddo
 3248.          endif
 3248.       endif
 3310.       if ( ncols > 0 ) then
 3310.          $I_L3310_162 = 0
 3310. !dir$ ivdep
 3310.          do
 3311.             css(1 + $I_L3310_162, 1 + kmax + -khigh(1 + $I_L3310_162)) = chigh(1 + $I_L3310_162)
 3312.             cstc(1 + $I_L3310_162, khigh(1 + $I_L3310_162)) = chigh(1 + $I_L3310_162)
 3313.             css(1 + $I_L3310_162, 1 + kmax + -kmid(1 + $I_L3310_162)) = cmid(1 + $I_L3310_162)
 3314.             cstc(1 + $I_L3310_162, kmid(1 + $I_L3310_162)) = cmid(1 + $I_L3310_162)
 3319.             if ( klow(1 + $I_L3310_162) >= lcnvl ) then
 3320.                $thklow_S13 = 5.0e-1 * ( pll(1 + $I_L3310_162, -1 + klow(1 + $I_L3310_162)) + -pll(1 + $I_L3310_162, 1 + klow(1 + $I_L3310_162)) )
 3321.                if ( $thklow_S13 <= lthncl ) then
 3322.                   css(1 + $I_L3310_162, kmax + -klow(1 + $I_L3310_162)) = clow(1 + $I_L3310_162)
 3323.                   cstc(1 + $I_L3310_162, 1 + klow(1 + $I_L3310_162)) = clow(1 + $I_L3310_162)
 3323.                endif
 3325.                css(1 + $I_L3310_162, 1 + kmax + -klow(1 + $I_L3310_162)) = clow(1 + $I_L3310_162)
 3326.                cstc(1 + $I_L3310_162, klow(1 + $I_L3310_162)) = clow(1 + $I_L3310_162)
 3326.             endif
 3328.             $I_L3310_162 = 1 + $I_L3310_162
 3327.             if ( $I_L3310_162 >= ncols ) exit
 3327.          enddo
 3327.       endif
 3332.       if (  _substr(covlp,1,4) == 'MAXI' ) then
 3333.          if ( ncols > 0 ) then
 3333.             $I_L3333_172 = 0
 3333.             do
 3334.                $t_S15 = kbot(1 + $I_L3333_172)
 3334.                $t_S16 = ktop(1 + $I_L3333_172)
 3334.                if ( $t_S16 + -$t_S15 >= 0 ) then
 3334.                   $SCA_conv_I1 = conv(1 + $I_L3333_172)
 3334.                   $I_L3334_164 = 0
 3334. !dir$ ivdep
 3334.                   do
 3335.                      ccu(1 + $I_L3333_172, 1 + kmax + -$t_S15 + -$I_L3334_164) = $SCA_conv_I1
 3336.                      $I_L3334_164 = 1 + $I_L3334_164
 3334.                      if ( $I_L3334_164 >= 1 + $t_S16 + -$t_S15 ) exit
 3334.                   enddo
 3334.                endif
 3337.                $I_L3333_172 = 1 + $I_L3333_172
 3336.                if ( $I_L3333_172 >= ncols ) exit
 3336.             enddo
 3336.          endif
 3341.       else if (  _substr(covlp,1,4) == 'RAND' ) then
 3342.          if ( ncols > 0 ) then
 3345.             if ( mxrdcc /= .false. ) then
 3342.                $I_L3342_174 = 0
 3342.                do
 3343.                   $t_S19 = kbot(1 + $I_L3342_174)
 3343.                   $t_S20 = ktop(1 + $I_L3342_174)
 3343.                   if ( $t_S20 + -$t_S19 >= 0 ) then
 3343.                      $SCA_conv_I2 = conv(1 + $I_L3342_174)
 3343.                      $I_L3343_166 = 0
 3343. !dir$ ivdep
 3343.                      do
 3347.                         ccon(1 + $I_L3342_174, $t_S19 + $I_L3343_166) = $SCA_conv_I2
 3344.                         $css_WR0_R9 = min( 1.0, css(1 + $I_L3342_174, 1 + kmax + -$t_S19 + -$I_L3343_166) )
 3346.                         $css_WR0_R9 = max( $SCA_conv_I2, $css_WR0_R9 )
 3346.                         css(1 + $I_L3342_174, 1 + kmax + -$t_S19 + -$I_L3343_166) = $css_WR0_R9
 3349.                         $I_L3343_166 = 1 + $I_L3343_166
 3348.                         if ( $I_L3343_166 >= 1 + $t_S20 + -$t_S19 ) exit
 3348.                      enddo
 3348.                   endif
 3350.                   $I_L3342_174 = 1 + $I_L3342_174
 3349.                   if ( $I_L3342_174 >= ncols ) exit
 3349.                enddo
 3349.             else
 3342.                $I_L3342_176 = 0
 3342.                do
 3343.                   $t_S19 = kbot(1 + $I_L3342_176)
 3343.                   $t_S20 = ktop(1 + $I_L3342_176)
 3343.                   if ( $t_S20 + -$t_S19 >= 0 ) then
 3343.                      $I_L3343_168 = 0
 3343. !dir$ ivdep
 3343.                      do
 3344.                         css(1 + $I_L3342_176, 1 + kmax + -$t_S19 + -$I_L3343_168) = min( 1.0, css(1 + $I_L3342_176, 1 + kmax + -$t_S19 + -$I_L3343_168) )
 3349.                         $I_L3343_168 = 1 + $I_L3343_168
 3348.                         if ( $I_L3343_168 >= 1 + $t_S20 + -$t_S19 ) exit
 3348.                      enddo
 3348.                   endif
 3350.                   $I_L3342_176 = 1 + $I_L3342_176
 3349.                   if ( $I_L3342_176 >= ncols ) exit
 3349.                enddo
 3349.             endif
 3349.          endif
 3349.       endif
 3025.       _free( t$253 )
 3352.       return
 3352.       end
 3352.       
 3364.       
 3364.       subroutine cldgn3( gps, sigmid, grh, omg, gtmp, css, ccu, cdin, cstc, ccon, cson, lcnvl, lthncl, convc, convt, convb, ncols, kmax, nls )
 3364.       t$20 = ncols
 3416.       t$298 = _zla( 0, ncols )
 3364.       t$21 = kmax
 3417.       t$299 = _zla( 0, kmax )
 3364.       t$300 = _zla( 0, ncols )
 3364.       t$301 = _zla( 0, ncols ) * _zla( 0, kmax )
 3444.       t$304 = 8 * _zla( 0, ncols )
 3452.       t$305 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 3452.       t$307 = t$305 + 8 * _zla( 0, ncols )
 3442.       t$308 = 8 * ( 7 + t$305 + 8 * _zla( 0, ncols ) ) / 8
 3442.       t$310 = t$308 + 8 * _zla( 0, ncols )
 3443.       t$311 = 8 * ( 7 + t$308 + 8 * _zla( 0, ncols ) ) / 8
 3443.       t$313 = t$311 + 8 * _zla( 0, ncols )
 3441.       t$314 = 8 * ( 7 + t$311 + 8 * _zla( 0, ncols ) ) / 8
 3441.       t$316 = t$314 + 8 * _zla( 0, ncols )
 3454.       t$317 = 8 * ( 7 + t$314 + 8 * _zla( 0, ncols ) ) / 8
 3454.       t$319 = t$317 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 3451.       t$320 = 8 * ( 7 + t$317 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 3451.       t$322 = t$320 + 8 * _zla( 0, ncols )
 3453.       t$323 = 8 * ( 7 + t$320 + 8 * _zla( 0, ncols ) ) / 8
 3453.       t$325 = t$323 + 8 * _zla( 0, ncols )
 3455.       t$326 = 8 * ( 7 + t$323 + 8 * _zla( 0, ncols ) ) / 8
 3455.       t$328 = t$326 + 8 * _zla( 0, ncols )
 3456.       t$330 = t$326 + 12 * _zla( 0, ncols )
 3446.       t$332 = t$326 + 16 * _zla( 0, ncols )
 3449.       t$334 = t$326 + 20 * _zla( 0, ncols )
 3447.       t$336 = t$326 + 24 * _zla( 0, ncols )
 3448.       t$338 = t$326 + 28 * _zla( 0, ncols )
 3445.       t$340 = t$326 + 32 * _zla( 0, ncols )
 3440.       t$341 = 8 * ( 7 + t$326 + 32 * _zla( 0, ncols ) ) / 8
 3440.       t$343 = t$341 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 3450.       t$344 = 8 * ( 7 + t$341 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 3450.       t$346 = t$344 + 8 * _zla( 0, ncols )
 3364.       t$302 = int( _alloc( t$344 + 8 * _zla( 0, ncols ) ), 8 )
 3444.       t$303 = t$302
 3452.       t$306 = t$305 + t$302
 3442.       t$309 = t$308 + t$302
 3443.       t$312 = t$311 + t$302
 3441.       t$315 = t$314 + t$302
 3454.       t$318 = t$317 + t$302
 3451.       t$321 = t$320 + t$302
 3453.       t$324 = t$323 + t$302
 3455.       t$327 = t$326 + t$302
 3456.       t$329 = t$326 + t$302 + 8 * _zla( 0, ncols )
 3446.       t$331 = t$326 + t$302 + 12 * _zla( 0, ncols )
 3449.       t$333 = t$326 + t$302 + 16 * _zla( 0, ncols )
 3447.       t$335 = t$326 + t$302 + 20 * _zla( 0, ncols )
 3448.       t$337 = t$326 + t$302 + 24 * _zla( 0, ncols )
 3445.       t$339 = t$326 + t$302 + 28 * _zla( 0, ncols )
 3440.       t$342 = t$341 + t$302
 3450.       t$345 = t$344 + t$302
 3479.       if ( kmax > 0 ) then
 3480.          if ( ncols > 0 ) then
 3479.             $I_L3479_134 = 0
 3479.             if ( kmax >= 4 ) then
 3479.                $I_L3479_155 = 0
 3479. !dir$ blocking_size( 1, 1 )
 3479.                do
 3496.                   $SCA_sigmid#1_U0 = sigmid(1 + 4 * $I_L3479_155)
 3496.                   $SCA_sigmid#2_U1 = sigmid(2 + 4 * $I_L3479_155)
 3496.                   $SCA_sigmid#3_U2 = sigmid(3 + 4 * $I_L3479_155)
 3496.                   $SCA_sigmid#4_U3 = sigmid(4 + 4 * $I_L3479_155)
 3480.                   $I_L3480_116 = 0
 3480. !dir$ ivdep
 3480. !dir$ blocking_size( 256, 256 )
 3480.                   do
 3481.                      css(1 + $I_L3480_116, 1 + 4 * $I_L3479_155) = 0.0
 3482.                      ccu(1 + $I_L3480_116, 1 + 4 * $I_L3479_155) = 0.0
 3484.                      cdin(1 + $I_L3480_116, 1 + 4 * $I_L3479_155) = 0.0
 3485.                      cstc(1 + $I_L3480_116, 1 + 4 * $I_L3479_155) = 0.0
 3486.                      ccon(1 + $I_L3480_116, 1 + 4 * $I_L3479_155) = 0.0
 3487.                      cson(1 + $I_L3480_116, 1 + 4 * $I_L3479_155) = 0.0
 3497.                      pll(1 + $I_L3480_116, 1 + 4 * $I_L3479_155) = gps(1 + $I_L3480_116) * $SCA_sigmid#1_U0
 3481.                      css(1 + $I_L3480_116, 2 + 4 * $I_L3479_155) = 0.0
 3482.                      ccu(1 + $I_L3480_116, 2 + 4 * $I_L3479_155) = 0.0
 3484.                      cdin(1 + $I_L3480_116, 2 + 4 * $I_L3479_155) = 0.0
 3485.                      cstc(1 + $I_L3480_116, 2 + 4 * $I_L3479_155) = 0.0
 3486.                      ccon(1 + $I_L3480_116, 2 + 4 * $I_L3479_155) = 0.0
 3487.                      cson(1 + $I_L3480_116, 2 + 4 * $I_L3479_155) = 0.0
 3497.                      pll(1 + $I_L3480_116, 2 + 4 * $I_L3479_155) = gps(1 + $I_L3480_116) * $SCA_sigmid#2_U1
 3481.                      css(1 + $I_L3480_116, 3 + 4 * $I_L3479_155) = 0.0
 3482.                      ccu(1 + $I_L3480_116, 3 + 4 * $I_L3479_155) = 0.0
 3484.                      cdin(1 + $I_L3480_116, 3 + 4 * $I_L3479_155) = 0.0
 3485.                      cstc(1 + $I_L3480_116, 3 + 4 * $I_L3479_155) = 0.0
 3486.                      ccon(1 + $I_L3480_116, 3 + 4 * $I_L3479_155) = 0.0
 3487.                      cson(1 + $I_L3480_116, 3 + 4 * $I_L3479_155) = 0.0
 3497.                      pll(1 + $I_L3480_116, 3 + 4 * $I_L3479_155) = gps(1 + $I_L3480_116) * $SCA_sigmid#3_U2
 3481.                      css(1 + $I_L3480_116, 4 + 4 * $I_L3479_155) = 0.0
 3482.                      ccu(1 + $I_L3480_116, 4 + 4 * $I_L3479_155) = 0.0
 3484.                      cdin(1 + $I_L3480_116, 4 + 4 * $I_L3479_155) = 0.0
 3485.                      cstc(1 + $I_L3480_116, 4 + 4 * $I_L3479_155) = 0.0
 3486.                      ccon(1 + $I_L3480_116, 4 + 4 * $I_L3479_155) = 0.0
 3487.                      cson(1 + $I_L3480_116, 4 + 4 * $I_L3479_155) = 0.0
 3497.                      pll(1 + $I_L3480_116, 4 + 4 * $I_L3479_155) = gps(1 + $I_L3480_116) * $SCA_sigmid#4_U3
 3488.                      $I_L3480_116 = 1 + $I_L3480_116
 3480.                      if ( $I_L3480_116 >= ncols ) exit
 3480.                   enddo
 3489.                   $I_L3479_155 = 1 + $I_L3479_155
 3488.                   if ( $I_L3479_155 >= _rsh( kmax, 2 ) ) exit
 3488.                enddo
 3489.                $I_L3479_134 = and( 0xfffffffffffffffcUL, kmax )
 3489.             endif
 3479.             if ( $I_L3479_134 < kmax ) then
 3479.                $I_L3479_152 = 0
 3479. !dir$ blocking_size( 1, 1 )
 3479.                do
 3496.                   $SCA_sigmid_I0 = sigmid(1 + $I_L3479_134 + $I_L3479_152)
 3480.                   $I_L3480_116 = 0
 3480. !dir$ ivdep
 3480. !dir$ blocking_size( 256, 256 )
 3480.                   do
 3481.                      css(1 + $I_L3480_116, 1 + $I_L3479_134 + $I_L3479_152) = 0.0
 3482.                      ccu(1 + $I_L3480_116, 1 + $I_L3479_134 + $I_L3479_152) = 0.0
 3484.                      cdin(1 + $I_L3480_116, 1 + $I_L3479_134 + $I_L3479_152) = 0.0
 3485.                      cstc(1 + $I_L3480_116, 1 + $I_L3479_134 + $I_L3479_152) = 0.0
 3486.                      ccon(1 + $I_L3480_116, 1 + $I_L3479_134 + $I_L3479_152) = 0.0
 3487.                      cson(1 + $I_L3480_116, 1 + $I_L3479_134 + $I_L3479_152) = 0.0
 3497.                      pll(1 + $I_L3480_116, 1 + $I_L3479_134 + $I_L3479_152) = $SCA_sigmid_I0 * gps(1 + $I_L3480_116)
 3488.                      $I_L3480_116 = 1 + $I_L3480_116
 3480.                      if ( $I_L3480_116 >= ncols ) exit
 3480.                   enddo
 3489.                   $I_L3479_152 = 1 + $I_L3479_152
 3488.                   if ( $I_L3479_152 >= kmax + -$I_L3479_134 ) exit
 3488.                enddo
 3488.             endif
 3488.          endif
 3488.       endif
 3503.       if ( ncols > 0 ) then
 3503.          $I_L3503_118 = 0
 3503. !dir$ ivdep
 3503.          do
 3504.             $conv_WR0_R0 = convc(1 + $I_L3503_118)
 3504.             conv(1 + $I_L3503_118) = $conv_WR0_R0
 3505.             clow(1 + $I_L3503_118) = 0.0
 3506.             cinv(1 + $I_L3503_118) = 0.0
 3507.             cmid(1 + $I_L3503_118) = 0.0
 3508.             chigh(1 + $I_L3503_118) = 0.0
 3509.             $ktop_WR0_R2 = int( 5.0e-1 + convt(1 + $I_L3503_118) )
 3509.             ktop(1 + $I_L3503_118) = $ktop_WR0_R2
 3510.             if ( $ktop_WR0_R2 <= 0 ) then
 3503.                goto 10
 3510.             else if ( $ktop_WR0_R2 > kmax ) then
 3510.    10          continue
 3510.                $ktop_WR0_R2 = 1
 3510.                ktop(1 + $I_L3503_118) = 1
 3510.             endif
 3511.             $kbot_WR0_R3 = int( 5.0e-1 + convb(1 + $I_L3503_118) )
 3511.             kbot(1 + $I_L3503_118) = $kbot_WR0_R3
 3512.             if ( $kbot_WR0_R3 <= 0 ) then
 3510.                goto 20
 3512.             else if ( $kbot_WR0_R3 > kmax ) then
 3512.    20          continue
 3512.                kbot(1 + $I_L3503_118) = 1
 3512.             endif
 3513.             klow(1 + $I_L3503_118) = 1
 3514.             kmid(1 + $I_L3503_118) = 1
 3515.             khigh(1 + $I_L3503_118) = 1
 3526.             if ( sigmid($ktop_WR0_R2) * gps(1 + $I_L3503_118) <= 400.0 ) then
 3526.                if ( $conv_WR0_R0 >= 4.0000000000000002e-1 ) then
 3530.                   khigh(1 + $I_L3503_118) = 1 + $ktop_WR0_R2
 3529.                   chigh(1 + $I_L3503_118) = ( min( 1.0, ( 2.0 * ( -2.9999999999999999e-1 + $conv_WR0_R0 ) ) ) )
 3531.                   ccon(1 + $I_L3503_118, 1 + $ktop_WR0_R2) = ( min( 1.0, ( 2.0 * ( -2.9999999999999999e-1 + $conv_WR0_R0 ) ) ) )
 3531.                endif
 3531.             endif
 3533.             $I_L3503_118 = 1 + $I_L3503_118
 3532.             if ( $I_L3503_118 >= ncols ) exit
 3532.          enddo
 3540.          $I_L3540_120 = 0
 3540. !dir$ ivdep
 3540.          do
 3541.             invb(1 + $I_L3540_120) = min( kmax, kmax + -nls )
 3542.             dthdpm(1 + $I_L3540_120) = 0.0
 3543.             $I_L3540_120 = 1 + $I_L3540_120
 3540.             if ( $I_L3540_120 >= ncols ) exit
 3540.          enddo
 3540.       endif
 3545.       if ( -2 + kmax >= 0 ) then
 3546.          if ( ncols > 0 ) then
 3545.             $I_L3545_148 = 0
 3545.             do
 3546.                $I_L3546_144 = 0
 3546.                do
 3545.                   $I_L3545_138 = 0
 3545. !dir$ shortloop16
 3545. !dir$ blocking_size( 2, 2 )
 3545.                   do
 3546.                      $I_L3546_122 = 0
 3546. !dir$ ivdep
 3546. !dir$ blocking_size( 256, 256 )
 3546.                      do
 3547.                         if ( pll(1 + $I_L3546_122 + 256 * $I_L3546_144, 2 + $I_L3545_138 + 2 * $I_L3545_148) > 700.0 ) then
 3548.                            $dthdp_S8 = ( ( -( gtmp(1 + $I_L3546_122 + 256 * $I_L3546_144, 2 + $I_L3545_138 + 2 * $I_L3545_148) * _exp3( log( abs( ( 1000.0 * 1.0/pll(1 + $I_L3546_122 + 256 * $I_L3546_144, 2 + $I_L3545_138 + 2 * $I_L3545_148) ) ) ), ( 1000.0 * 1.0/pll(1 + $I_L3546_122 + 256 * $I_L3546_144, 2 + $I_L3545_138 + 2 * $I_L3545_148) ), 2.8573561616563808e-1 ) ) + gtmp(1 + $I_L3546_122 + 256 * $I_L3546_144, 1 + $I_L3545_138 + 2 * $I_L3545_148) * _exp3( log( abs( ( 1000.0 * 1.0/pll(1 + $I_L3546_122 + 256 * $I_L3546_144, 1 + $I_L3545_138 + 2 * $I_L3545_148) ) ) ), ( 1000.0 * 1.0/pll(1 + $I_L3546_122 + 256 * $I_L3546_144, 1 + $I_L3545_138 + 2 * $I_L3545_148) ), 2.8573561616563808e-1 ) ) * 1.0/( pll(1 + $I_L3546_122 + 256 * $I_L3546_144, 1 + $I_L3545_138 + 2 * $I_L3545_148) + -pll(1 + $I_L3546_122 + 256 * $I_L3546_144, 2 + $I_L3545_138 + 2 * $I_L3545_148) ) )
 3551.                            if ( ( ( -( gtmp(1 + $I_L3546_122 + 256 * $I_L3546_144, 2 + $I_L3545_138 + 2 * $I_L3545_148) * _exp3( log( abs( ( 1000.0 * 1.0/pll(1 + $I_L3546_122 + 256 * $I_L3546_144, 2 + $I_L3545_138 + 2 * $I_L3545_148) ) ) ), ( 1000.0 * 1.0/pll(1 + $I_L3546_122 + 256 * $I_L3546_144, 2 + $I_L3545_138 + 2 * $I_L3545_148) ), 2.8573561616563808e-1 ) ) + gtmp(1 + $I_L3546_122 + 256 * $I_L3546_144, 1 + $I_L3545_138 + 2 * $I_L3545_148) * _exp3( log( abs( ( 1000.0 * 1.0/pll(1 + $I_L3546_122 + 256 * $I_L3546_144, 1 + $I_L3545_138 + 2 * $I_L3545_148) ) ) ), ( 1000.0 * 1.0/pll(1 + $I_L3546_122 + 256 * $I_L3546_144, 1 + $I_L3545_138 + 2 * $I_L3545_148) ), 2.8573561616563808e-1 ) ) * 1.0/( pll(1 + $I_L3546_122 + 256 * $I_L3546_144, 1 + $I_L3545_138 + 2 * $I_L3545_148) + -pll(1 + $I_L3546_122 + 256 * $I_L3546_144, 2 + $I_L3545_138 + 2 * $I_L3545_148) ) ) < 0.0 ) then
 3552.                               invb(1 + $I_L3546_122 + 256 * $I_L3546_144) = min( invb(1 + $I_L3546_122 + 256 * $I_L3546_144), ( 1 + $I_L3545_138 + 2 * $I_L3545_148 ) )
 3553.                               if ( $dthdp_S8 < -4.0000000000000001e-2 ) then
 3554.                                  if ( $dthdp_S8 < dthdpm(1 + $I_L3546_122 + 256 * $I_L3546_144) ) then
 3555.                                     dthdpm(1 + $I_L3546_122 + 256 * $I_L3546_144) = $dthdp_S8
 3556.                                     klow(1 + $I_L3546_122 + 256 * $I_L3546_144) = ( 2 + $I_L3545_138 + 2 * $I_L3545_148 )
 3556.                                  endif
 3556.                               endif
 3556.                            endif
 3556.                         endif
 3546.                         $I_L3546_122 = 1 + $I_L3546_122
 3560.                         if ( $I_L3546_122 >= min( ncols, 256 + 256 * $I_L3546_144 ) + -256 * $I_L3546_144 ) exit
 3560.                      enddo
 3545.                      $I_L3545_138 = 1 + $I_L3545_138
 3545.                      if ( $I_L3545_138 >= min( -1 + kmax, 2 + 2 * $I_L3545_148 ) + -2 * $I_L3545_148 ) exit
 3545.                   enddo
 3546.                   $I_L3546_144 = 1 + $I_L3546_144
 3561.                   if ( $I_L3546_144 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 3561.                enddo
 3545.                $I_L3545_148 = 1 + $I_L3545_148
 3545.                if ( $I_L3545_148 >= 1 + max( 0, -1 + _rsh( kmax, 1 ) ) ) exit
 3545.             enddo
 3545.          endif
 3545.       endif
 3566.       if ( ncols > 0 ) then
 3566.          $I_L3566_125 = 0
 3566. !dir$ ivdep
 3566.          do
 3567.             if ( dthdpm(1 + $I_L3566_125) < -4.0000000000000001e-2 ) then
 3567.                if ( grh(1 + $I_L3566_125, invb(1 + $I_L3566_125)) > 5.9999999999999998e-1 ) then
 3568.                   $cinv_WR0_R6 = -6.6699999999999999 * ( 4.0000000000000001e-2 + dthdpm(1 + $I_L3566_125) )
 3570.                   $cinv_WR0_R6 = min( 1.0, max( 0.0, $cinv_WR0_R6 ) )
 3570.                   cinv(1 + $I_L3566_125) = $cinv_WR0_R6
 3571.                   if ( grh(1 + $I_L3566_125, invb(1 + $I_L3566_125)) < 8.0000000000000004e-1 ) then
 3572.                      $cinv_WR0_R6 = $cinv_WR0_R6 * ( 1.0 + -5.0 * ( 8.0000000000000004e-1 + -grh(1 + $I_L3566_125, invb(1 + $I_L3566_125)) ) )
 3572.                      cinv(1 + $I_L3566_125) = $cinv_WR0_R6
 3572.                   endif
 3572.                endif
 3572.             endif
 3575.             clow(1 + $I_L3566_125) = cinv(1 + $I_L3566_125)
 3576.             cdin(1 + $I_L3566_125, klow(1 + $I_L3566_125)) = cinv(1 + $I_L3566_125)
 3577.             $I_L3566_125 = 1 + $I_L3566_125
 3574.             if ( $I_L3566_125 >= ncols ) exit
 3574.          enddo
 3574.       endif
 3583.       if ( min( kmax, kmax + -nls ) + -lcnvl > 0 ) then
 3584.          if ( ncols > 0 ) then
 3583.             $I_L3583_150 = 0
 3583.             do
 3584.                $I_L3584_146 = 0
 3584.                do
 3583.                   $I_L3583_141 = 0
 3583. !dir$ shortloop16
 3583. !dir$ blocking_size( 2, 2 )
 3583.                   do
 3584.                      $I_L3584_127 = 0
 3584. !dir$ ivdep
 3584. !dir$ blocking_size( 256, 256 )
 3584.                      do
 3588.                         if ( pll(1 + $I_L3584_127 + 256 * $I_L3584_146, 1 + lcnvl + $I_L3583_141 + 2 * $I_L3583_150) > 400.0 ) then
 3589.                            $cx_WR0_R7 = 5.0 * ( -8.0000000000000004e-1 + grh(1 + $I_L3584_127 + 256 * $I_L3584_146, 1 + lcnvl + $I_L3583_141 + 2 * $I_L3583_150) )
 3589.                         else
 3591.                            $cx_WR0_R7 = 10.0 * ( -9.0000000000000002e-1 + grh(1 + $I_L3584_127 + 256 * $I_L3584_146, 1 + lcnvl + $I_L3583_141 + 2 * $I_L3583_150) )
 3591.                         endif
 3594.                         $cx_WR0_R7 = min( 1.0, ( max( 0.0, $cx_WR0_R7 ) ) * ( max( 0.0, $cx_WR0_R7 ) ) )
 3598.                         if ( pll(1 + $I_L3584_127 + 256 * $I_L3584_146, 1 + lcnvl + $I_L3583_141 + 2 * $I_L3583_150) > 700.0 ) then
 3607.                            if ( omg(1 + $I_L3584_127 + 256 * $I_L3584_146, 1 + lcnvl + $I_L3583_141 + 2 * $I_L3583_150) >= 5.0000000000000002e-5 ) then
 3608.                               $cx_WR0_R7 = 0.0
 3609.                            else if ( omg(1 + $I_L3584_127 + 256 * $I_L3584_146, 1 + lcnvl + $I_L3583_141 + 2 * $I_L3583_150) >= -5.0000000000000002e-5 ) then
 3610.                               $delomg_WR0_R8 = 10000.0 * ( 5.0000000000000002e-5 + omg(1 + $I_L3584_127 + 256 * $I_L3584_146, 1 + lcnvl + $I_L3583_141 + 2 * $I_L3583_150) )
 3611.                               $cx_WR0_R7 = $cx_WR0_R7 * ( 1.0 + -( $delomg_WR0_R8 * $delomg_WR0_R8 ) )
 3611.                            endif
 3613.                            if ( $cx_WR0_R7 > clow(1 + $I_L3584_127 + 256 * $I_L3584_146) ) then
 3614.                               klow(1 + $I_L3584_127 + 256 * $I_L3584_146) = ( 1 + lcnvl + $I_L3583_141 + 2 * $I_L3583_150 )
 3615.                               clow(1 + $I_L3584_127 + 256 * $I_L3584_146) = $cx_WR0_R7
 3615.                            endif
 3617.                         else if ( pll(1 + $I_L3584_127 + 256 * $I_L3584_146, 1 + lcnvl + $I_L3583_141 + 2 * $I_L3583_150) > 400.0 ) then
 3624.                            if ( $cx_WR0_R7 > cmid(1 + $I_L3584_127 + 256 * $I_L3584_146) ) then
 3625.                               kmid(1 + $I_L3584_127 + 256 * $I_L3584_146) = ( 1 + lcnvl + $I_L3583_141 + 2 * $I_L3583_150 )
 3626.                               cmid(1 + $I_L3584_127 + 256 * $I_L3584_146) = $cx_WR0_R7
 3626.                            endif
 3626.                         else if ( $cx_WR0_R7 > chigh(1 + $I_L3584_127 + 256 * $I_L3584_146) ) then
 3636.                            khigh(1 + $I_L3584_127 + 256 * $I_L3584_146) = ( 1 + lcnvl + $I_L3583_141 + 2 * $I_L3583_150 )
 3637.                            chigh(1 + $I_L3584_127 + 256 * $I_L3584_146) = $cx_WR0_R7
 3637.                         endif
 3584.                         $I_L3584_127 = 1 + $I_L3584_127
 3642.                         if ( $I_L3584_127 >= min( ncols, 256 + 256 * $I_L3584_146 ) + -256 * $I_L3584_146 ) exit
 3642.                      enddo
 3583.                      $I_L3583_141 = 1 + $I_L3583_141
 3583.                      if ( $I_L3583_141 >= min( ( min( kmax, kmax + -nls ) + -lcnvl ), 2 + 2 * $I_L3583_150 ) + -2 * $I_L3583_150 ) exit
 3583.                   enddo
 3584.                   $I_L3584_146 = 1 + $I_L3584_146
 3643.                   if ( $I_L3584_146 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 3643.                enddo
 3583.                $I_L3583_150 = 1 + $I_L3583_150
 3583.                if ( $I_L3583_150 >= 1 + max( 0, -1 + _rsh( 1 + min( kmax, kmax + -nls ) + -lcnvl, 1 ) ) ) exit
 3583.             enddo
 3583.          endif
 3583.       endif
 3645.       if ( ncols > 0 ) then
 3645.          $I_L3645_130 = 0
 3645. !dir$ ivdep
 3645.          do
 3646.             css(1 + $I_L3645_130, 1 + kmax + -khigh(1 + $I_L3645_130)) = chigh(1 + $I_L3645_130)
 3647.             cstc(1 + $I_L3645_130, khigh(1 + $I_L3645_130)) = chigh(1 + $I_L3645_130)
 3648.             css(1 + $I_L3645_130, 1 + kmax + -kmid(1 + $I_L3645_130)) = cmid(1 + $I_L3645_130)
 3649.             cstc(1 + $I_L3645_130, kmid(1 + $I_L3645_130)) = cmid(1 + $I_L3645_130)
 3654.             if ( klow(1 + $I_L3645_130) >= lcnvl ) then
 3655.                $thklow_S13 = 5.0e-1 * ( pll(1 + $I_L3645_130, -1 + klow(1 + $I_L3645_130)) + -pll(1 + $I_L3645_130, 1 + klow(1 + $I_L3645_130)) )
 3656.                if ( $thklow_S13 <= lthncl ) then
 3657.                   css(1 + $I_L3645_130, kmax + -klow(1 + $I_L3645_130)) = clow(1 + $I_L3645_130)
 3658.                   cstc(1 + $I_L3645_130, 1 + klow(1 + $I_L3645_130)) = clow(1 + $I_L3645_130)
 3658.                endif
 3660.                css(1 + $I_L3645_130, 1 + kmax + -klow(1 + $I_L3645_130)) = clow(1 + $I_L3645_130)
 3661.                cstc(1 + $I_L3645_130, klow(1 + $I_L3645_130)) = clow(1 + $I_L3645_130)
 3661.             endif
 3663.             $I_L3645_130 = 1 + $I_L3645_130
 3662.             if ( $I_L3645_130 >= ncols ) exit
 3662.          enddo
 3701.          $I_L3701_136 = 0
 3701.          do
 3702.             $t_S15 = kbot(1 + $I_L3701_136)
 3702.             $t_S16 = ktop(1 + $I_L3701_136)
 3702.             if ( $t_S16 + -$t_S15 >= 0 ) then
 3702.                $SCA_conv_I1 = conv(1 + $I_L3701_136)
 3702.                $I_L3702_132 = 0
 3702. !dir$ ivdep
 3702.                do
 3703.                   ccu(1 + $I_L3701_136, 1 + kmax + -$t_S15 + -$I_L3702_132) = $SCA_conv_I1
 3705.                   ccon(1 + $I_L3701_136, $t_S15 + $I_L3702_132) = $SCA_conv_I1
 3704.                   css(1 + $I_L3701_136, 1 + kmax + -$t_S15 + -$I_L3702_132) = min( 1.0, css(1 + $I_L3701_136, 1 + kmax + -$t_S15 + -$I_L3702_132) )
 3706.                   $I_L3702_132 = 1 + $I_L3702_132
 3702.                   if ( $I_L3702_132 >= 1 + $t_S16 + -$t_S15 ) exit
 3702.                enddo
 3702.             endif
 3707.             $I_L3701_136 = 1 + $I_L3701_136
 3706.             if ( $I_L3701_136 >= ncols ) exit
 3706.          enddo
 3706.       endif
 3364.       _free( t$302 )
 3710.       return
 3710.       end
 3710.       
 3715.       
 3715.       subroutine getoz( ncols, kmax, sigmid, colrad, date, o3l )
 3715.       t$22 = kmax
 3741.       t$347 = _zla( 0, kmax )
 3715.       t$23 = ncols
 3742.       t$348 = _zla( 0, ncols )
 3715.       t$349 = _zla( 0, ncols )
 3715.       t$350 = _zla( 0, kmax ) * _zla( 0, ncols )
 3771.       t$353 = 4 * _zla( 0, kmax ) * _zla( 0, ncols )
 3764.       t$355 = 4 * _zla( 0, kmax ) * _zla( 0, ncols ) + 4 * _zla( 0, ncols )
 3765.       t$357 = 4 * _zla( 0, kmax ) * _zla( 0, ncols ) + 8 * _zla( 0, ncols )
 3781.       t$359 = 4 * _zla( 0, kmax ) * _zla( 0, ncols ) + 8 * _zla( 0, ncols ) + 4 * _zla( 0, kmax )
 3715.       t$360 = 18 * _zla( 0, ncols )
 3759.       t$361 = 8 * ( 7 + 4 * _zla( 0, kmax ) * _zla( 0, ncols ) + 8 * _zla( 0, ncols ) + 4 * _zla( 0, kmax ) ) / 8
 3759.       t$363 = t$361 + 144 * _zla( 0, ncols )
 3778.       t$364 = 8 * ( 7 + t$361 + 144 * _zla( 0, ncols ) ) / 8
 3778.       t$366 = t$364 + 8 * _zla( 0, ncols )
 3776.       t$367 = 8 * ( 7 + t$364 + 8 * _zla( 0, ncols ) ) / 8
 3776.       t$369 = t$367 + 8 * _zla( 0, ncols )
 3777.       t$370 = 8 * ( 7 + t$367 + 8 * _zla( 0, ncols ) ) / 8
 3777.       t$372 = t$370 + 8 * _zla( 0, ncols )
 3775.       t$373 = 8 * ( 7 + t$370 + 8 * _zla( 0, ncols ) ) / 8
 3775.       t$375 = t$373 + 8 * _zla( 0, ncols )
 3715.       t$351 = int( _alloc( t$373 + 8 * _zla( 0, ncols ) ), 8 )
 3771.       t$352 = t$351
 3764.       t$354 = t$351 + 4 * _zla( 0, kmax ) * _zla( 0, ncols )
 3765.       t$356 = t$351 + 4 * _zla( 0, kmax ) * _zla( 0, ncols ) + 4 * _zla( 0, ncols )
 3781.       t$358 = t$351 + 4 * _zla( 0, kmax ) * _zla( 0, ncols ) + 8 * _zla( 0, ncols )
 3759.       t$362 = t$361 + t$351
 3778.       t$365 = t$364 + t$351
 3776.       t$368 = t$367 + t$351
 3777.       t$371 = t$370 + t$351
 3775.       t$374 = t$373 + t$351
 3787.       if ( date > year_getoz ) then
 3787.          date = date + -year_getoz
 3787.       endif
 3789.       $imon_S0 = int( 1.0 + ( date * 1.0/mon_getoz ) )
 3791.       if ( int( 1.0 + ( date * 1.0/mon_getoz ) ) <= 0 ) then
 3791.          $imon_S0 = 1
 3791.       endif
 3793.       $isea_S1 = 1 + $imon_S0 / 3
 3795.       if ( $imon_S0 / 3 == 4 ) then
 3795.          $isea_S1 = 1
 3795.       endif
 3796.       if ( $isea_S1 > 5 ) then
 3797.          $Unit_temp_O0 = nfprt
 3797.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O0, Null_Arg, Null_Arg, t$26,  _substr(t$25,1,53), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 3798.          $Unit_temp_O1 = nferr
 3798.          _fwrite( _clist( 0, 0, 3, $Unit_temp_O1, Null_Arg, Null_Arg, t$28,  _substr(t$27,1,53), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), Null_Arg )
 3799.           _substr(t$835,1,4) = '9954'
 3799.          call _stop(  _substr(t$835,1,4) )
 3799.       else
 3801.          if ( ncols > 0 ) then
 3801.             $I_L3801_88 = 0
 3801. !dir$ ivdep
 3801.             do
 3802.                $theta_S3 = 90.0 + -57.29577951308238 * colrad(1 + $I_L3801_88)
 3809.                la(1 + $I_L3801_88) = int( 19.501000000000001 + -( 2.0000000000000001e-1 * $theta_S3 ) )
 3810.                ll(1 + $I_L3801_88) = int( 19.001000000000001 + -( 2.0000000000000001e-1 * $theta_S3 ) )
 3816.                $Coss_P3 = coss( ( 6.28318530717958 * ( -14.8125 + date ) * 1.0/year_getoz ) )
 3816.                rsin1(1 + $I_L3801_88) = cimag( $Coss_P3 )
 3817.                rcos1(1 + $I_L3801_88) = real( $Coss_P3, 8 )
 3818.                $Flat_S6 = cos( 12.56637061435916 * ( ( -14.8125 + date ) * 1.0/year_getoz ) )
 3818.                rcos2(1 + $I_L3801_88) = $Flat_S6
 3819.                rate(1 + $I_L3801_88) = -( 2.0000000000000001e-1 * $theta_S3 ) + real( 19 + -( int( 19.001000000000001 + -( 2.0000000000000001e-1 * $theta_S3 ) ) ), 8 )
 3823.                $I_L3801_88 = 1 + $I_L3801_88
 3801.                if ( $I_L3801_88 >= ncols ) exit
 3801.             enddo
 3801.          endif
 3826.          $SC_ozone_I0 = ozone%dim_1%EX
 3826.          $SC_ozone_I1 = ozone%dim_1%LB
 3826.          $SC_ozone_I3 = ozone%dim_2%SM
 3826.          $SC_ozone_I2 = ozone%dim_2%EX
 3826.          $SC_ozone_I4 = ozone%dim_2%LB
 3826.          $SC_ozone_I6 = ozone%dim_3%SM
 3826.          $SC_ozone_I5 = ozone%dim_3%EX
 3826.          $SC_ozone_I7 = ozone%dim_3%LB
 3825.          if ( ncols > 0 ) then
 3824.             $SI_L3824_102_G1 = 0
 3824.             do
 3825.                $SI_L3825_90_G4 = 0
 3825.                do
 3824.                   $I_L3824_115 = 0
 3824. !dir$ shortloop16
 3824. !dir$ blocking_size( 8, 8 )
 3824.                   do
 3825.                      $I_L3825_112 = 0
 3825. !dir$ ivdep
 3825. !dir$ blocking_size( 64, 64 )
 3825.                      do
 3826.                         $SCA_a1_I18 = 2.5e-1 * ( (ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, la(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 3, 0) + (ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, la(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 1, 0) + (ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, la(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 4, 0) + (ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, la(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 2, 0) )
 3828.                         $SCA_a2_I9 = 5.0e-1 * ( (ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, la(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 2, 0) + -(ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, la(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 4, 0) )
 3829.                         $SCA_a3_I10 = 5.0e-1 * ( (ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, la(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 1, 0) + -(ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, la(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 3, 0) )
 3830.                         $SCA_a4_I11 = 2.5e-1 * ( (ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, la(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 3, 0) + (ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, la(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 1, 0) + -(ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, la(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 4, 0) + -(ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, la(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 2, 0) )
 3832.                         $SCA_b1_I12 = 2.5e-1 * ( (ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, ll(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 3, 0) + (ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, ll(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 1, 0) + (ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, ll(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 4, 0) + (ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, ll(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 2, 0) )
 3834.                         $SCA_b2_I13 = 5.0e-1 * ( (ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, ll(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 2, 0) + -(ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, ll(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 4, 0) )
 3835.                         $SCA_b3_I14 = 5.0e-1 * ( (ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, ll(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 1, 0) + -(ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, ll(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 3, 0) )
 3836.                         $SCA_b4_I15 = 2.5e-1 * ( (ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, ll(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 3, 0) + (ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, ll(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 1, 0) + -(ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, ll(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 4, 0) + -(ozone%base_addr)(1 + $I_L3824_115 + 8 * $SI_L3824_102_G1, ll(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4), 2, 0) )
 3838.                         $SCA_do3a_I16 = $SCA_a1_I18 + $SCA_a2_I9 * rsin1(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4) + $SCA_a3_I10 * rcos1(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4) + $SCA_a4_I11 * rcos2(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4)
 3839.                         $SCA_do3b_I17 = $SCA_b1_I12 + $SCA_b2_I13 * rsin1(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4) + $SCA_b3_I14 * rcos1(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4) + $SCA_b4_I15 * rcos2(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4)
 3840.                         $ozo3l_WR0_R0 = $SCA_do3a_I16 + rate(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4) * ( $SCA_do3b_I17 + -$SCA_do3a_I16 )
 3841.                         $ozo3l_WR0_R0 = 1.0e-4 * $ozo3l_WR0_R0
 3841.                         ozo3l(1 + $I_L3825_112 + 64 * $SI_L3825_90_G4, 1 + $I_L3824_115 + 8 * $SI_L3824_102_G1) = $ozo3l_WR0_R0
 3825.                         $I_L3825_112 = 1 + $I_L3825_112
 3825.                         if ( $I_L3825_112 >= min( ncols, 64 + 64 * $SI_L3825_90_G4 ) + -64 * $SI_L3825_90_G4 ) exit
 3825.                      enddo
 3824.                      $I_L3824_115 = 1 + $I_L3824_115
 3824.                      if ( $I_L3824_115 >= cvmg( 8, 2, $SI_L3824_102_G1 < 2 ) ) exit
 3824.                   enddo
 3825.                   $SI_L3825_90_G4 = 1 + $SI_L3825_90_G4
 3842.                   if ( $SI_L3825_90_G4 >= _rsh( 63 + ncols, 6 ) ) exit
 3842.                enddo
 3824.                $SI_L3824_102_G1 = 1 + $SI_L3824_102_G1
 3824.                if ( $SI_L3824_102_G1 >= 3 ) exit
 3824.             enddo
 3824.          endif
 3844.          if ( inter_getoz /= .false. ) then
 3845.             if ( kmax > 0 ) then
 3846.                $SC_ozsig_I8 = ozsig(1)
 3845.                $I_L3845_92 = 0
 3845. !dir$ ivdep
 3845.                do
 3846.                   $notfound_WR0_R1 = sigmid(1 + $I_L3845_92) > $SC_ozsig_I8
 3846.                   notfound(1 + $I_L3845_92) = $notfound_WR0_R1
 3847.                   kk(1, 1 + $I_L3845_92) = cvmg( 18, 2, $notfound_WR0_R1 )
 3852.                   $I_L3845_92 = 1 + $I_L3845_92
 3845.                   if ( $I_L3845_92 >= kmax ) exit
 3845.                enddo
 3853.                $I_L3853_104 = 0
 3853.                do
 3854.                   if ( notfound(1 + $I_L3853_104) /= .false. ) then
 3856.                      $SC_sigmid_I21 = sigmid(1 + $I_L3853_104)
 3855.                      $I_L3855_94 = 0
 3855. !dir$ ivdep
 3855.                      do
 3856.                         if ( $SC_sigmid_I21 <= ozsig(1 + $I_L3855_94) .orelse. $SC_sigmid_I21 > ozsig(2 + $I_L3855_94) ) then
 3860.                            $I_L3855_94 = 1 + $I_L3855_94
 3859.                         else
 3859.                         endif
 3859.                         if ( $I_L3855_94 >= 17 ) exit
 3859.                      enddo
 3859.                   endif
 3862.                   $I_L3853_104 = 1 + $I_L3853_104
 3861.                   if ( $I_L3853_104 >= kmax ) exit
 3861.                enddo
 3864.                if ( -2 + ncols >= 0 ) then
 3863.                   $I_L3863_106 = 0
 3863.                   do
 3864.                      $SCA_kk_I19 = kk(1, 1 + $I_L3863_106)
 3864.                      $I_L3864_96 = 0
 3864. !dir$ ivdep
 3864.                      do
 3865.                         kk(2 + $I_L3864_96, 1 + $I_L3863_106) = $SCA_kk_I19
 3866.                         $I_L3864_96 = 1 + $I_L3864_96
 3864.                         if ( $I_L3864_96 >= -1 + ncols ) exit
 3864.                      enddo
 3867.                      $I_L3863_106 = 1 + $I_L3863_106
 3866.                      if ( $I_L3863_106 >= kmax ) exit
 3866.                   enddo
 3866.                endif
 3871.                if ( ncols > 0 ) then
 3870.                   $I_L3870_108 = 0
 3870.                   do
 3871.                      $SCA_sigmid_I20 = sigmid(1 + $I_L3870_108)
 3871.                      $I_L3871_98 = 0
 3871. !dir$ ivdep
 3871.                      do
 3872.                         $aa_S16 = ( ( ozo3l(1 + $I_L3871_98, kk(1 + $I_L3871_98, 1 + $I_L3870_108)) + -ozo3l(1 + $I_L3871_98, -1 + kk(1 + $I_L3871_98, 1 + $I_L3870_108)) ) * 1.0/( ozsig(kk(1 + $I_L3871_98, 1 + $I_L3870_108)) + -ozsig(-1 + kk(1 + $I_L3871_98, 1 + $I_L3870_108)) ) )
 3873.                         $bb_S17 = ozo3l(1 + $I_L3871_98, -1 + kk(1 + $I_L3871_98, 1 + $I_L3870_108)) + -( $aa_S16 * ozsig(-1 + kk(1 + $I_L3871_98, 1 + $I_L3870_108)) )
 3874.                         o3l(1 + $I_L3871_98, kmax + -$I_L3870_108) = $bb_S17 + $aa_S16 * $SCA_sigmid_I20
 3875.                         $I_L3871_98 = 1 + $I_L3871_98
 3871.                         if ( $I_L3871_98 >= ncols ) exit
 3871.                      enddo
 3876.                      $I_L3870_108 = 1 + $I_L3870_108
 3875.                      if ( $I_L3870_108 >= kmax ) exit
 3875.                   enddo
 3875.                endif
 3875.             endif
 3875.          else if ( ncols > 0 ) then
 3879.             $I_L3879_110 = 0
 3879.             do
 3880.                $I_L3880_100 = 0
 3880. !dir$ ivdep
 3880.                do
 3881.                   o3l(1 + $I_L3880_100, 1 + $I_L3879_110) = ozo3l(1 + $I_L3880_100, 1 + $I_L3879_110)
 3882.                   $I_L3880_100 = 1 + $I_L3880_100
 3880.                   if ( $I_L3880_100 >= ncols ) exit
 3880.                enddo
 3883.                $I_L3879_110 = 1 + $I_L3879_110
 3882.                if ( $I_L3879_110 >= 18 ) exit
 3882.             enddo
 3882.          endif
 3715.          _free( t$351 )
 3715.       endif
 3885.       return
 3885.       end
 3885.       
 3887.       
 3887.       subroutine cloud_field( ncols, kmax, nls, icld, covlp, mxrdcc, lcnvl, lthncl, sig, ps, qrel, omg, te, convc, convt, convb, convts, convcs, convbs, cld, clu, cloudcover, cldcovtot, cldcovinv, cldcovsat, cldcovcon, cldcovsha )
 3887.       t$29 = kmax
 3917.       t$376 = _zla( 0, kmax )
 3887.       t$30 = ncols
 3918.       t$377 = _zla( 0, ncols )
 3887.       t$378 = _zla( 0, ncols )
 3887.       t$379 = _zla( 0, kmax ) * _zla( 0, ncols )
 3959.       $F_A33 = kmax
 3959.       $F_A34 = ncols
 3959.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
 3959.          $I_L3959_64 = 0
 3959.          do
 3959.             $I_L3959_44 = 0
 3959. !dir$ ivdep
 3959.             do
 3959.                cld(1 + $I_L3959_44, 1 + $I_L3959_64) = 0.0
 3959.                $I_L3959_44 = 1 + $I_L3959_44
 3959.                if ( $I_L3959_44 >= $F_A34 ) exit
 3959.             enddo
 3959.             $I_L3959_64 = 1 + $I_L3959_64
 3959.             if ( $I_L3959_64 >= $F_A33 ) exit
 3959.          enddo
 3959.       endif
 3960.       $F_A35 = kmax
 3960.       $F_A36 = ncols
 3960.       if ( and( -$F_A36, -$F_A35 ) < 0 ) then
 3960.          $I_L3960_66 = 0
 3960.          do
 3960.             $I_L3960_46 = 0
 3960. !dir$ ivdep
 3960.             do
 3960.                clu(1 + $I_L3960_46, 1 + $I_L3960_66) = 0.0
 3960.                $I_L3960_46 = 1 + $I_L3960_46
 3960.                if ( $I_L3960_46 >= $F_A36 ) exit
 3960.             enddo
 3960.             $I_L3960_66 = 1 + $I_L3960_66
 3960.             if ( $I_L3960_66 >= $F_A35 ) exit
 3960.          enddo
 3960.       endif
 3961.       $F_A37 = kmax
 3961.       $F_A38 = ncols
 3961.       if ( and( -$F_A38, -$F_A37 ) < 0 ) then
 3961.          $I_L3961_68 = 0
 3961.          do
 3961.             $I_L3961_48 = 0
 3961. !dir$ ivdep
 3961.             do
 3961.                cldcovtot(1 + $I_L3961_48, 1 + $I_L3961_68) = 0.0
 3961.                $I_L3961_48 = 1 + $I_L3961_48
 3961.                if ( $I_L3961_48 >= $F_A38 ) exit
 3961.             enddo
 3961.             $I_L3961_68 = 1 + $I_L3961_68
 3961.             if ( $I_L3961_68 >= $F_A37 ) exit
 3961.          enddo
 3961.       endif
 3962.       $F_A39 = kmax
 3962.       $F_A40 = ncols
 3962.       if ( and( -$F_A40, -$F_A39 ) < 0 ) then
 3962.          $I_L3962_70 = 0
 3962.          do
 3962.             $I_L3962_50 = 0
 3962. !dir$ ivdep
 3962.             do
 3962.                cldcovinv(1 + $I_L3962_50, 1 + $I_L3962_70) = 0.0
 3962.                $I_L3962_50 = 1 + $I_L3962_50
 3962.                if ( $I_L3962_50 >= $F_A40 ) exit
 3962.             enddo
 3962.             $I_L3962_70 = 1 + $I_L3962_70
 3962.             if ( $I_L3962_70 >= $F_A39 ) exit
 3962.          enddo
 3962.       endif
 3963.       $F_A41 = kmax
 3963.       $F_A42 = ncols
 3963.       if ( and( -$F_A42, -$F_A41 ) < 0 ) then
 3963.          $I_L3963_72 = 0
 3963.          do
 3963.             $I_L3963_52 = 0
 3963. !dir$ ivdep
 3963.             do
 3963.                cldcovsat(1 + $I_L3963_52, 1 + $I_L3963_72) = 0.0
 3963.                $I_L3963_52 = 1 + $I_L3963_52
 3963.                if ( $I_L3963_52 >= $F_A42 ) exit
 3963.             enddo
 3963.             $I_L3963_72 = 1 + $I_L3963_72
 3963.             if ( $I_L3963_72 >= $F_A41 ) exit
 3963.          enddo
 3963.       endif
 3964.       $F_A43 = kmax
 3964.       $F_A44 = ncols
 3964.       if ( and( -$F_A44, -$F_A43 ) < 0 ) then
 3964.          $I_L3964_74 = 0
 3964.          do
 3964.             $I_L3964_54 = 0
 3964. !dir$ ivdep
 3964.             do
 3964.                cldcovcon(1 + $I_L3964_54, 1 + $I_L3964_74) = 0.0
 3964.                $I_L3964_54 = 1 + $I_L3964_54
 3964.                if ( $I_L3964_54 >= $F_A44 ) exit
 3964.             enddo
 3964.             $I_L3964_74 = 1 + $I_L3964_74
 3964.             if ( $I_L3964_74 >= $F_A43 ) exit
 3964.          enddo
 3964.       endif
 3965.       $F_A45 = kmax
 3965.       $F_A46 = ncols
 3965.       if ( and( -$F_A46, -$F_A45 ) < 0 ) then
 3965.          $I_L3965_76 = 0
 3965.          do
 3965.             $I_L3965_56 = 0
 3965. !dir$ ivdep
 3965.             do
 3965.                cldcovsha(1 + $I_L3965_56, 1 + $I_L3965_76) = 0.0
 3965.                $I_L3965_56 = 1 + $I_L3965_56
 3965.                if ( $I_L3965_56 >= $F_A46 ) exit
 3965.             enddo
 3965.             $I_L3965_76 = 1 + $I_L3965_76
 3965.             if ( $I_L3965_76 >= $F_A45 ) exit
 3965.          enddo
 3965.       endif
 3966.       $F_A47 = ncols
 3966.       if ( ncols > 0 ) then
 3966.          $I_L3966_58 = 0
 3966. !dir$ ivdep
 3966.          do
 3966.             cloudcover(1 + $I_L3966_58) = 0.0
 3966.             $I_L3966_58 = 1 + $I_L3966_58
 3966.             if ( $I_L3966_58 >= $F_A47 ) exit
 3966.          enddo
 3966.       endif
 3968.       if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'LCH' .orelse.  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'NON' ) then
 3969.          if ( icld == 1 ) then
 3970.             call cldgen(  _substr(covlp,1,4), ps(1), sig(1), qrel(1, 1), omg(1, 1), te(1, 1), cld(1, 1), clu(1, 1), cldcovinv(1, 1), cldcovsat(1, 1), cldcovcon(1, 1), cldcovsha(1, 1), mxrdcc, lcnvl, lthncl, convc(1), convt(1), convb(1), ncols, kmax, nls )
 3970.          endif
 3974.          if ( icld == 3 ) then
 3975.             call cldgn2(  _substr(covlp,1,4), ps(1), sig(1), qrel(1, 1), omg(1, 1), te(1, 1), cld(1, 1), clu(1, 1), cldcovinv(1, 1), cldcovsat(1, 1), cldcovcon(1, 1), cldcovsha(1, 1), mxrdcc, lcnvl, convc(1), convt(1), convb(1), convts(1), convcs(1), convbs(1), ncols, kmax, nls )
 3975.          endif
 3975.       else
 3979.          call cldgn3( ps(1), sig(1), qrel(1, 1), omg(1, 1), te(1, 1), cld(1, 1), clu(1, 1), cldcovinv(1, 1), cldcovsat(1, 1), cldcovcon(1, 1), cldcovsha(1, 1), lcnvl, lthncl, convc(1), convt(1), convb(1), ncols, kmax, nls )
 3979.       endif
 3986.       if ( ncols > 0 ) then
 3986.          $I_L3986_36 = 0
 3986. !dir$ ivdep
 3986.          do
 3987.             cloudcover(1 + $I_L3986_36) = 1.0
 3988.             $I_L3986_36 = 1 + $I_L3986_36
 3986.             if ( $I_L3986_36 >= ncols ) exit
 3986.          enddo
 3986.       endif
 3990.       if (  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'LCH' .orelse.  _substr(iswrad,1,_ltrim(  _substr(iswrad,1,3) )) == 'NON' ) then
 3991.          if ( kmax > 0 ) then
 3993.             if ( ncols > 0 ) then
 3991.                $SI_L3991_62_G7 = 0
 3991.                do
 3993.                   $SI_L3993_40_G10 = 0
 3993.                   do
 3991.                      $I_L3991_87 = 0
 3991. !dir$ shortloop16
 3991. !dir$ blocking_size( 2, 2 )
 3991.                      do
 3993.                         $I_L3993_81 = 0
 3993. !dir$ ivdep
 3993. !dir$ blocking_size( 256, 256 )
 3993.                         do
 3994.                            cldcovtot(1 + $I_L3993_81 + 256 * $SI_L3993_40_G10, 1 + $I_L3991_87 + 2 * $SI_L3991_62_G7) = cld(1 + $I_L3993_81 + 256 * $SI_L3993_40_G10, kmax + -$I_L3991_87 + -2 * $SI_L3991_62_G7)
 3995.                            cloudcover(1 + $I_L3993_81 + 256 * $SI_L3993_40_G10) = cloudcover(1 + $I_L3993_81 + 256 * $SI_L3993_40_G10) * ( 1.0 + -cld(1 + $I_L3993_81 + 256 * $SI_L3993_40_G10, 1 + $I_L3991_87 + 2 * $SI_L3991_62_G7) )
 3993.                            $I_L3993_81 = 1 + $I_L3993_81
 3993.                            if ( $I_L3993_81 >= min( ncols, 256 + 256 * $SI_L3993_40_G10 ) + -256 * $SI_L3993_40_G10 ) exit
 3993.                         enddo
 3991.                         $I_L3991_87 = 1 + $I_L3991_87
 3991.                         if ( $I_L3991_87 >= min( kmax, 2 + 2 * $SI_L3991_62_G7 ) + -2 * $SI_L3991_62_G7 ) exit
 3991.                      enddo
 3993.                      $SI_L3993_40_G10 = 1 + $SI_L3993_40_G10
 3996.                      if ( $SI_L3993_40_G10 >= _rsh( 255 + ncols, 8 ) ) exit
 3996.                   enddo
 3991.                   $SI_L3991_62_G7 = 1 + $SI_L3991_62_G7
 3991.                   if ( $SI_L3991_62_G7 >= _rsh( 1 + kmax, 1 ) ) exit
 3991.                enddo
 3991.             endif
 3991.          endif
 3991.       else
 3999.          if ( kmax > 0 ) then
 4001.             if ( ncols > 0 ) then
 3999.                $SI_L3999_60_G1 = 0
 3999.                do
 4001.                   $SI_L4001_38_G4 = 0
 4001.                   do
 3999.                      $I_L3999_84 = 0
 3999. !dir$ shortloop16
 3999. !dir$ blocking_size( 2, 2 )
 3999.                      do
 4001.                         $I_L4001_78 = 0
 4001. !dir$ ivdep
 4001. !dir$ blocking_size( 256, 256 )
 4001.                         do
 4002.                            $cldcovtot_WR0_R0 = max( cld(1 + $I_L4001_78 + 256 * $SI_L4001_38_G4, kmax + -$I_L3999_84 + -2 * $SI_L3999_60_G1), clu(1 + $I_L4001_78 + 256 * $SI_L4001_38_G4, kmax + -$I_L3999_84 + -2 * $SI_L3999_60_G1) )
 4002.                            cldcovtot(1 + $I_L4001_78 + 256 * $SI_L4001_38_G4, 1 + $I_L3999_84 + 2 * $SI_L3999_60_G1) = $cldcovtot_WR0_R0
 4003.                            cloudcover(1 + $I_L4001_78 + 256 * $SI_L4001_38_G4) = cloudcover(1 + $I_L4001_78 + 256 * $SI_L4001_38_G4) * ( 1.0 + -$cldcovtot_WR0_R0 )
 4001.                            $I_L4001_78 = 1 + $I_L4001_78
 4001.                            if ( $I_L4001_78 >= min( ncols, 256 + 256 * $SI_L4001_38_G4 ) + -256 * $SI_L4001_38_G4 ) exit
 4001.                         enddo
 3999.                         $I_L3999_84 = 1 + $I_L3999_84
 3999.                         if ( $I_L3999_84 >= min( kmax, 2 + 2 * $SI_L3999_60_G1 ) + -2 * $SI_L3999_60_G1 ) exit
 3999.                      enddo
 4001.                      $SI_L4001_38_G4 = 1 + $SI_L4001_38_G4
 4004.                      if ( $SI_L4001_38_G4 >= _rsh( 255 + ncols, 8 ) ) exit
 4004.                   enddo
 3999.                   $SI_L3999_60_G1 = 1 + $SI_L3999_60_G1
 3999.                   if ( $SI_L3999_60_G1 >= _rsh( 1 + kmax, 1 ) ) exit
 3999.                enddo
 3999.             endif
 3999.          endif
 3999.       endif
 4008.       if ( ncols > 0 ) then
 4008.          $I_L4008_42 = 0
 4008. !dir$ ivdep
 4008.          do
 4009.             cloudcover(1 + $I_L4008_42) = 1.0 + -cloudcover(1 + $I_L4008_42)
 4010.             $I_L4008_42 = 1 + $I_L4008_42
 4008.             if ( $I_L4008_42 >= ncols ) exit
 4008.          enddo
 4008.       endif
 4012.       return
 4012.       end
 4012.       
 4014.       
 4014.       subroutine cloud_micro_ccm3( ncols, kmax, sigmid, sigbot, delsig, imask, ps, te, qe, tsea, flippbot, clwp, lmixr, fice, rei, rel, taud )
 4014.       t$31 = kmax
 4101.       t$380 = _zla( 0, kmax )
 4014.       t$32 = ncols
 4104.       t$381 = _zla( 0, ncols )
 4014.       t$382 = _zla( 0, ncols )
 4014.       t$383 = _zla( 0, kmax ) * _zla( 0, ncols )
 4014.       t$33 = ( 1 + kmax )
 4146.       t$384 = _zla( 0, ( 1 + kmax ) )
 4014.       t$385 = _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
 4146.       t$388 = 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
 4142.       t$389 = 8 * ( 7 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ) / 8
 4142.       t$391 = t$389 + 8 * _zla( 0, ncols )
 4144.       t$392 = 8 * ( 7 + t$389 + 8 * _zla( 0, ncols ) ) / 8
 4144.       t$394 = t$392 + 8 * _zla( 0, ncols )
 4143.       t$395 = 8 * ( 7 + t$392 + 8 * _zla( 0, ncols ) ) / 8
 4143.       t$397 = t$395 + 8 * _zla( 0, ncols )
 4149.       t$398 = 8 * ( 7 + t$395 + 8 * _zla( 0, ncols ) ) / 8
 4149.       t$400 = t$398 + 8 * _zla( 0, kmax ) * _zla( 0, ncols )
 4148.       t$401 = 8 * ( 7 + t$398 + 8 * _zla( 0, kmax ) * _zla( 0, ncols ) ) / 8
 4148.       t$403 = t$401 + 8 * _zla( 0, kmax ) * _zla( 0, ncols )
 4145.       t$404 = 8 * ( 7 + t$401 + 8 * _zla( 0, kmax ) * _zla( 0, ncols ) ) / 8
 4145.       t$406 = t$404 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) )
 4014.       t$386 = int( _alloc( t$404 + 8 * _zla( 0, ncols ) * _zla( 0, ( 1 + kmax ) ) ), 8 )
 4146.       t$387 = t$386
 4142.       t$390 = t$389 + t$386
 4144.       t$393 = t$392 + t$386
 4143.       t$396 = t$395 + t$386
 4149.       t$399 = t$398 + t$386
 4148.       t$402 = t$401 + t$386
 4145.       t$405 = t$404 + t$386
 4159.       $F_A33 = kmax
 4159.       $F_A34 = ncols
 4159.       if ( and( -$F_A34, -$F_A33 ) < 0 ) then
 4159.          $I_L4159_226 = 0
 4159.          do
 4159.             $I_L4159_196 = 0
 4159. !dir$ ivdep
 4159.             do
 4159.                clwp(1 + $I_L4159_196, 1 + $I_L4159_226) = 0.0
 4159.                $I_L4159_196 = 1 + $I_L4159_196
 4159.                if ( $I_L4159_196 >= $F_A34 ) exit
 4159.             enddo
 4159.             $I_L4159_226 = 1 + $I_L4159_226
 4159.             if ( $I_L4159_226 >= $F_A33 ) exit
 4159.          enddo
 4159.       endif
 4160.       $F_A35 = kmax
 4160.       $F_A36 = ncols
 4160.       if ( and( -$F_A36, -$F_A35 ) < 0 ) then
 4160.          $I_L4160_228 = 0
 4160.          do
 4160.             $I_L4160_198 = 0
 4160. !dir$ ivdep
 4160.             do
 4160.                lmixr(1 + $I_L4160_198, 1 + $I_L4160_228) = 0.0
 4160.                $I_L4160_198 = 1 + $I_L4160_198
 4160.                if ( $I_L4160_198 >= $F_A36 ) exit
 4160.             enddo
 4160.             $I_L4160_228 = 1 + $I_L4160_228
 4160.             if ( $I_L4160_228 >= $F_A35 ) exit
 4160.          enddo
 4160.       endif
 4161.       $F_A37 = kmax
 4161.       $F_A38 = ncols
 4161.       if ( and( -$F_A38, -$F_A37 ) < 0 ) then
 4161.          $I_L4161_230 = 0
 4161.          do
 4161.             $I_L4161_200 = 0
 4161. !dir$ ivdep
 4161.             do
 4161.                fice(1 + $I_L4161_200, 1 + $I_L4161_230) = 0.0
 4161.                $I_L4161_200 = 1 + $I_L4161_200
 4161.                if ( $I_L4161_200 >= $F_A38 ) exit
 4161.             enddo
 4161.             $I_L4161_230 = 1 + $I_L4161_230
 4161.             if ( $I_L4161_230 >= $F_A37 ) exit
 4161.          enddo
 4161.       endif
 4162.       $F_A39 = kmax
 4162.       $F_A40 = ncols
 4162.       if ( and( -$F_A40, -$F_A39 ) < 0 ) then
 4162.          $I_L4162_232 = 0
 4162.          do
 4162.             $I_L4162_202 = 0
 4162. !dir$ ivdep
 4162.             do
 4162.                rei(1 + $I_L4162_202, 1 + $I_L4162_232) = 0.0
 4162.                $I_L4162_202 = 1 + $I_L4162_202
 4162.                if ( $I_L4162_202 >= $F_A40 ) exit
 4162.             enddo
 4162.             $I_L4162_232 = 1 + $I_L4162_232
 4162.             if ( $I_L4162_232 >= $F_A39 ) exit
 4162.          enddo
 4162.       endif
 4163.       $F_A41 = kmax
 4163.       $F_A42 = ncols
 4163.       if ( and( -$F_A42, -$F_A41 ) < 0 ) then
 4163.          $I_L4163_234 = 0
 4163.          do
 4163.             $I_L4163_204 = 0
 4163. !dir$ ivdep
 4163.             do
 4163.                rel(1 + $I_L4163_204, 1 + $I_L4163_234) = 0.0
 4163.                $I_L4163_204 = 1 + $I_L4163_204
 4163.                if ( $I_L4163_204 >= $F_A42 ) exit
 4163.             enddo
 4163.             $I_L4163_234 = 1 + $I_L4163_234
 4163.             if ( $I_L4163_234 >= $F_A41 ) exit
 4163.          enddo
 4163.       endif
 4164.       $F_A43 = ncols
 4164.       if ( ncols > 0 ) then
 4164.          $I_L4164_206 = 0
 4164. !dir$ ivdep
 4164.          do
 4164.             pw(1 + $I_L4164_206) = 0.0
 4164.             $I_L4164_206 = 1 + $I_L4164_206
 4164.             if ( $I_L4164_206 >= $F_A43 ) exit
 4164.          enddo
 4170.          if ( -2 + kmax >= 0 ) then
 4168.             $I_L4168_218 = 0
 4168. !dir$ ivdep
 4168.             do
 4169.                zibot(1 + $I_L4168_218, 1) = 0.0
 4170.                $I_L4170_178 = 0
 4170.                if ( -5 + kmax >= 0 ) then
 4170.                   $I_L4170_255 = 0
 4170.                   do
 4171.                      $SCF_P0 = 29.29081632653061 * te(1 + $I_L4168_218, 1 + 4 * $I_L4170_255) * log( ( flippbot(1 + $I_L4168_218, kmax + -4 * $I_L4170_255) * 1.0/flippbot(1 + $I_L4168_218, -1 + kmax + -4 * $I_L4170_255) ) )
 4171.                      zibot(1 + $I_L4168_218, 2 + 4 * $I_L4170_255) = $SCF_P0 + zibot(1 + $I_L4168_218, 1 + 4 * $I_L4170_255)
 4171.                      $SCF_P0 = 29.29081632653061 * te(1 + $I_L4168_218, 2 + 4 * $I_L4170_255) * log( ( flippbot(1 + $I_L4168_218, -1 + kmax + -4 * $I_L4170_255) * 1.0/flippbot(1 + $I_L4168_218, -2 + kmax + -4 * $I_L4170_255) ) )
 4171.                      zibot(1 + $I_L4168_218, 3 + 4 * $I_L4170_255) = $SCF_P0 + zibot(1 + $I_L4168_218, 2 + 4 * $I_L4170_255)
 4171.                      $SCF_P0 = 29.29081632653061 * te(1 + $I_L4168_218, 3 + 4 * $I_L4170_255) * log( ( flippbot(1 + $I_L4168_218, -2 + kmax + -4 * $I_L4170_255) * 1.0/flippbot(1 + $I_L4168_218, -3 + kmax + -4 * $I_L4170_255) ) )
 4171.                      zibot(1 + $I_L4168_218, 4 + 4 * $I_L4170_255) = $SCF_P0 + zibot(1 + $I_L4168_218, 3 + 4 * $I_L4170_255)
 4171.                      $SCF_P0 = 29.29081632653061 * te(1 + $I_L4168_218, 4 + 4 * $I_L4170_255) * log( ( flippbot(1 + $I_L4168_218, -3 + kmax + -4 * $I_L4170_255) * 1.0/flippbot(1 + $I_L4168_218, -4 + kmax + -4 * $I_L4170_255) ) )
 4171.                      zibot(1 + $I_L4168_218, 5 + 4 * $I_L4170_255) = $SCF_P0 + zibot(1 + $I_L4168_218, 4 + 4 * $I_L4170_255)
 4174.                      $I_L4170_255 = 1 + $I_L4170_255
 4170.                      if ( $I_L4170_255 >= _rsh( -1 + kmax, 2 ) ) exit
 4170.                   enddo
 4174.                   $I_L4170_178 = and( 0xfffffffffffffffcUL, -1 + kmax )
 4174.                endif
 4170.                if ( $I_L4170_178 < -1 + kmax ) then
 4170.                   $I_L4170_252 = 0
 4170.                   do
 4171.                      $SCF_P0 = 29.29081632653061 * te(1 + $I_L4168_218, 1 + $I_L4170_178 + $I_L4170_252) * log( ( flippbot(1 + $I_L4168_218, kmax + -$I_L4170_178 + -$I_L4170_252) * 1.0/flippbot(1 + $I_L4168_218, -1 + kmax + -$I_L4170_178 + -$I_L4170_252) ) )
 4171.                      zibot(1 + $I_L4168_218, 2 + $I_L4170_178 + $I_L4170_252) = $SCF_P0 + zibot(1 + $I_L4168_218, 1 + $I_L4170_178 + $I_L4170_252)
 4174.                      $I_L4170_252 = 1 + $I_L4170_252
 4170.                      if ( $I_L4170_252 >= -1 + kmax + -$I_L4170_178 ) exit
 4170.                   enddo
 4170.                endif
 4175.                $I_L4168_218 = 1 + $I_L4168_218
 4174.                if ( $I_L4168_218 >= ncols ) exit
 4174.             enddo
 4174.          else
 4168.             $I_L4168_194 = 0
 4168. !dir$ ivdep
 4168.             do
 4169.                zibot(1 + $I_L4168_194, 1) = 0.0
 4175.                $I_L4168_194 = 1 + $I_L4168_194
 4174.                if ( $I_L4168_194 >= ncols ) exit
 4174.             enddo
 4174.          endif
 4176.          $I_L4176_180 = 0
 4176. !dir$ ivdep
 4176.          do
 4177.             zibot(1 + $I_L4176_180, 1 + kmax) = zibot(1 + $I_L4176_180, kmax) + 29.29081632653061 * te(1 + $I_L4176_180, kmax) * log( 2.0 * flippbot(1 + $I_L4176_180, 1) )
 4179.             $I_L4176_180 = 1 + $I_L4176_180
 4176.             if ( $I_L4176_180 >= ncols ) exit
 4176.          enddo
 4176.       endif
 4188.       if ( kmax > 0 ) then
 4189.          if ( ncols > 0 ) then
 4190.              _substr($W0,1,1) = 'n'
 4190.             $W1 = ncols
 4190.             $W2 = kmax
 4190.             $W3 = 1.0
 4190.             $W4 = ncols
 4190.             $W5 = 1
 4190.             $W6 = 1.0
 4190.             $W7 = 1
 4190.             _dgemv(  _substr($W0,1,1), $W1, $W2, $W3, qe(1, 1), $W4, delsig(1), $W5, $W6, pw(1), $W7 )
 4242.             $I_L4242_220 = 0
 4242.             do
 4243.                $weight_S6 = min( 0.0, 2.5 * ( -4.0000000000000002e-1 + sigmid(1 + $I_L4242_220) ) )
 4244.                $I_L4244_190 = 0
 4244. !dir$ ivdep
 4244.                do
 4245.                   rei(1 + $I_L4244_190, 1 + $I_L4242_220) = 10.0 + -20.0 * $weight_S6
 4246.                   $I_L4244_190 = 1 + $I_L4244_190
 4244.                   if ( $I_L4244_190 >= ncols ) exit
 4244.                enddo
 4247.                $I_L4242_220 = 1 + $I_L4242_220
 4246.                if ( $I_L4242_220 >= kmax ) exit
 4246.             enddo
 4246.          endif
 4246.       endif
 4193.       if ( ncols > 0 ) then
 4193.          $I_L4193_182 = 0
 4193. !dir$ ivdep
 4193.          do
 4194.             $pw_WR0_R0 = 10.204081632653059 * pw(1 + $I_L4193_182) * ps(1 + $I_L4193_182)
 4194.             pw(1 + $I_L4193_182) = $pw_WR0_R0
 4199.             $hl_WR0_R1 = 700.0 * log( max( 1.0, 1.0 + $pw_WR0_R0 ) )
 4199.             hl(1 + $I_L4193_182) = $hl_WR0_R1
 4200.             rhl(1 + $I_L4193_182) = 1.0/$hl_WR0_R1
 4195.             $I_L4193_182 = 1 + $I_L4193_182
 4193.             if ( $I_L4193_182 >= ncols ) exit
 4193.          enddo
 4193.       endif
 4203.       if ( kmax >= 0 ) then
 4204.          if ( ncols > 0 ) then
 4203.             $I_L4203_248 = 0
 4203.             do
 4204.                $I_L4204_244 = 0
 4204.                do
 4203.                   $I_L4203_257 = 0
 4203. !dir$ shortloop16
 4203. !dir$ blocking_size( 2, 2 )
 4203.                   do
 4204.                      $I_L4204_184 = 0
 4204. !dir$ ivdep
 4204. !dir$ blocking_size( 256, 256 )
 4204.                      do
 4206.                         emziohl(1 + $I_L4204_184 + 256 * $I_L4204_244, 1 + $I_L4203_257 + 2 * $I_L4203_248) = _expn( -( rhl(1 + $I_L4204_184 + 256 * $I_L4204_244) * zibot(1 + $I_L4204_184 + 256 * $I_L4204_244, 1 + $I_L4203_257 + 2 * $I_L4203_248) ) )
 4204.                         $I_L4204_184 = 1 + $I_L4204_184
 4204.                         if ( $I_L4204_184 >= min( ncols, 256 + 256 * $I_L4204_244 ) + -256 * $I_L4204_244 ) exit
 4204.                      enddo
 4203.                      $I_L4203_257 = 1 + $I_L4203_257
 4203.                      if ( $I_L4203_257 >= min( 1 + kmax, 2 + 2 * $I_L4203_248 ) + -2 * $I_L4203_248 ) exit
 4203.                   enddo
 4204.                   $I_L4204_244 = 1 + $I_L4204_244
 4207.                   if ( $I_L4204_244 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 4207.                enddo
 4203.                $I_L4203_248 = 1 + $I_L4203_248
 4203.                if ( $I_L4203_248 >= 1 + max( 0, -1 + _rsh( 2 + kmax, 1 ) ) ) exit
 4203.             enddo
 4203.          endif
 4203.       endif
 4214.       if ( kmax > 0 ) then
 4215.          if ( ncols > 0 ) then
 4214.             $I_L4214_250 = 0
 4214.             do
 4215.                $I_L4215_246 = 0
 4215.                do
 4214.                   $I_L4214_259 = 0
 4214. !dir$ shortloop16
 4214. !dir$ blocking_size( 2, 2 )
 4214.                   do
 4234.                      $SCA_delsig_I0 = delsig(1 + $I_L4214_259 + 2 * $I_L4214_250)
 4215.                      $I_L4215_187 = 0
 4215. !dir$ ivdep
 4215. !dir$ blocking_size( 256, 256 )
 4215.                      do
 4216.                         $clwp_WR0_R2 = 2.0999999999999999e-1 * hl(1 + $I_L4215_187 + 256 * $I_L4215_246) * ( emziohl(1 + $I_L4215_187 + 256 * $I_L4215_246, 1 + $I_L4214_259 + 2 * $I_L4214_250) + -emziohl(1 + $I_L4215_187 + 256 * $I_L4215_246, 2 + $I_L4214_259 + 2 * $I_L4214_250) )
 4216.                         clwp(1 + $I_L4215_187 + 256 * $I_L4215_246, 1 + $I_L4214_259 + 2 * $I_L4214_250) = $clwp_WR0_R2
 4235.                         lmixr(1 + $I_L4215_187 + 256 * $I_L4215_246, 1 + $I_L4214_259 + 2 * $I_L4214_250) = ( ( 9.7999997524311777e-5 * $clwp_WR0_R2 * 1.0/$SCA_delsig_I0 ) * 1.0/ps(1 + $I_L4215_187 + 256 * $I_L4215_246) )
 4215.                         $I_L4215_187 = 1 + $I_L4215_187
 4215.                         if ( $I_L4215_187 >= min( ncols, 256 + 256 * $I_L4215_246 ) + -256 * $I_L4215_246 ) exit
 4215.                      enddo
 4214.                      $I_L4214_259 = 1 + $I_L4214_259
 4214.                      if ( $I_L4214_259 >= min( kmax, 2 + 2 * $I_L4214_250 ) + -2 * $I_L4214_250 ) exit
 4214.                   enddo
 4215.                   $I_L4215_246 = 1 + $I_L4215_246
 4217.                   if ( $I_L4215_246 >= 1 + max( 0, -1 + _rsh( 255 + ncols, 8 ) ) ) exit
 4217.                enddo
 4214.                $I_L4214_250 = 1 + $I_L4214_250
 4214.                if ( $I_L4214_250 >= 1 + max( 0, -1 + _rsh( 1 + kmax, 1 ) ) ) exit
 4214.             enddo
 4214.          endif
 4214.       endif
 4252.       $F_A44 = kmax
 4252.       $F_A45 = ncols
 4252.       if ( and( -$F_A45, -$F_A44 ) < 0 ) then
 4252.          $I_L4252_236 = 0
 4252.          do
 4252.             $I_L4252_208 = 0
 4252. !dir$ ivdep
 4252.             do
 4252.                fice(1 + $I_L4252_208, 1 + $I_L4252_236) = max( 0.0, min( 1.0, 5.0000000000000003e-2 * ( 263.16000000000003 + -te(1 + $I_L4252_208, 1 + $I_L4252_236) ) ) )
 4252.                $I_L4252_208 = 1 + $I_L4252_208
 4252.                if ( $I_L4252_208 >= $F_A45 ) exit
 4252.             enddo
 4252.             $I_L4252_236 = 1 + $I_L4252_236
 4252.             if ( $I_L4252_236 >= $F_A44 ) exit
 4252.          enddo
 4252.       endif
 4258.       if ( ncols > 0 ) then
 4258.          $I_L4258_222 = 0
 4258.          do
 4259.             if ( imask(1 + $I_L4258_222) <= 0 ) then
 4260.                $F_A46 = kmax
 4260.                if ( kmax > 0 ) then
 4260.                   $I_L4260_210 = 0
 4260. !dir$ ivdep
 4260.                   do
 4260.                      rel(1 + $I_L4258_222, 1 + $I_L4260_210) = 10.0
 4260.                      $I_L4260_210 = 1 + $I_L4260_210
 4260.                      if ( $I_L4260_210 >= $F_A46 ) exit
 4260.                   enddo
 4260.                endif
 4260.             else
 4262.                $F_A47 = kmax
 4262.                if ( kmax > 0 ) then
 4262.                   $I_L4262_212 = 0
 4262. !dir$ ivdep
 4262.                   do
 4262.                      rel(1 + $I_L4258_222, 1 + $I_L4262_212) = 5.0 + 5.0 * fice(1 + $I_L4258_222, 1 + $I_L4262_212)
 4262.                      $I_L4262_212 = 1 + $I_L4262_212
 4262.                      if ( $I_L4262_212 >= $F_A47 ) exit
 4262.                   enddo
 4262.                endif
 4263.                t$936 = ( max( 0, kmax ) )
 4263.                t$939 = int( _alloc( max( 0, 4 * max( 0, ( max( 0, kmax ) ) ) ) ), 8 )
 4263.                $F_A48 = kmax
 4263.                if ( kmax > 0 ) then
 4263.                   $I_L4263_214 = 0
 4263. !dir$ ivdep
 4263.                   do
 4263.                      t$938(1 + $I_L4263_214) = fice(1 + $I_L4258_222, 1 + $I_L4263_214) == 1
 4263.                      $I_L4263_214 = 1 + $I_L4263_214
 4263.                      if ( $I_L4263_214 >= $F_A48 ) exit
 4263.                   enddo
 4263.                endif
 4263.                $F_A49 = kmax
 4263.                if ( kmax > 0 ) then
 4263.                   $I_L4263_216 = 0
 4263. !dir$ ivdep
 4263.                   do
 4263.                      if ( t$938(1 + $I_L4263_216) /= 0 ) then
 4263.                         rel(1 + $I_L4258_222, 1 + $I_L4263_216) = rei(1 + $I_L4258_222, 1 + $I_L4263_216)
 4263.                      endif
 4263.                      $I_L4263_216 = 1 + $I_L4263_216
 4263.                      if ( $I_L4263_216 >= $F_A49 ) exit
 4263.                   enddo
 4263.                endif
 4263.                _free( t$939 )
 4263.             endif
 4265.             $I_L4258_222 = 1 + $I_L4258_222
 4264.             if ( $I_L4258_222 >= ncols ) exit
 4264.          enddo
 4264.       endif
 4268.       if ( kmax > 0 ) then
 4269.          if ( ncols > 0 ) then
 4268.             $I_L4268_224 = 0
 4268. !dir$ blocking_size( 1, 1 )
 4268.             do
 4269.                $I_L4269_192 = 0
 4269. !dir$ ivdep
 4269. !dir$ blocking_size( 256, 256 )
 4269.                do
 4271.                   $tauxcl_WR0_R3 = clwp(1 + $I_L4269_192, 1 + $I_L4268_224) * ( 2.2610000000000002e-2 + ( 1.4365000000000001 * 1.0/rel(1 + $I_L4269_192, 1 + $I_L4268_224) ) ) * ( 1.0 + -fice(1 + $I_L4269_192, 1 + $I_L4268_224) )
 4272.                   $tauxci_WR0_R4 = fice(1 + $I_L4269_192, 1 + $I_L4268_224) * clwp(1 + $I_L4269_192, 1 + $I_L4268_224) * ( 3.4480000000000001e-3 + ( 2.431 * 1.0/rei(1 + $I_L4269_192, 1 + $I_L4268_224) ) )
 4273.                   if ( tsea(1 + $I_L4269_192) > 0.0 ) then
 4274.                      taud(1 + $I_L4269_192, 1 + $I_L4268_224) = 6.9999999999999996e-1 * ( $tauxcl_WR0_R3 + $tauxci_WR0_R4 )
 4274.                   else
 4276.                      taud(1 + $I_L4269_192, 1 + $I_L4268_224) = ( $tauxcl_WR0_R3 + $tauxci_WR0_R4 )
 4276.                   endif
 4278.                   $I_L4269_192 = 1 + $I_L4269_192
 4277.                   if ( $I_L4269_192 >= ncols ) exit
 4277.                enddo
 4279.                $I_L4268_224 = 1 + $I_L4268_224
 4278.                if ( $I_L4268_224 >= kmax ) exit
 4278.             enddo
 4278.          endif
 4278.       endif
 4014.       _free( t$386 )
 4282.       return
 4282.       end
 4282.       
 4284.       
 4284.       subroutine astropar( ncols, colrad, lonrad, id, tod, yrl, date, solar, cosine )
 4284.       t$34 = ncols
 4289.       t$407 = _zla( 0, ncols )
 4310.       t$410 = 8 * _zla( 0, ncols )
 4311.       t$411 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 4311.       t$413 = t$411 + 8 * _zla( 0, ncols )
 4284.       t$408 = int( _alloc( t$411 + 8 * _zla( 0, ncols ) ), 8 )
 4310.       t$409 = t$408
 4311.       t$412 = t$411 + t$408
 4320.       call radtim( id(1), delta, ratio, etime, tod, date, yrl )
 4321.       solar = 1365.0 * ratio
 4323.       $Coss_P5 = coss( delta )
 4323.       $Flat_S4 = cimag( $Coss_P5 )
 4324.       $Flat_S2 = real( $Coss_P5, 8 )
 4325.       if ( ncols > 0 ) then
 4325.          $I_L4325_8 = 0
 4325. !dir$ ivdep
 4325.          do
 4326.             $Coss_P6 = coss( colrad(1 + $I_L4325_8) )
 4326.             $Flat_S1 = cimag( $Coss_P6 )
 4326.             coslat(1 + $I_L4325_8) = $Flat_S1 * $Flat_S2
 4327.             $Flat_S3 = real( $Coss_P6, 8 )
 4327.             sinlat(1 + $I_L4325_8) = $Flat_S3 * $Flat_S4
 4328.             $I_L4325_8 = 1 + $I_L4325_8
 4325.             if ( $I_L4325_8 >= ncols ) exit
 4325.          enddo
 4325.       endif
 4329.       $frh_S6 = 2.7777777777777778e-4 * ( -3.125e-2 + mod( 3.125e-2 + tod, 3600.0 ) )
 4330.       if ( ncols > 0 ) then
 4331.          $SC_id_I0 = id(1)
 4330.          $I_L4330_10 = 0
 4330. !dir$ ivdep
 4330.          do
 4331.             $atime_S7 = etime + 2.6179938779914919e-1 * ( 12.0 + -$frh_S6 + -$SC_id_I0 + -6.6666666666666666e-2 * lonrad(1 + $I_L4330_10) )
 4332.             $Flat_S8 = cos( $atime_S7 )
 4332.             cosine(1 + $I_L4330_10) = sinlat(1 + $I_L4330_10) + $Flat_S8 * coslat(1 + $I_L4330_10)
 4333.             $I_L4330_10 = 1 + $I_L4330_10
 4330.             if ( $I_L4330_10 >= ncols ) exit
 4330.          enddo
 4330.       endif
 4284.       _free( t$408 )
 4335.       return
 4335.       end
 4335.       
  112.       
  112.       module modradiationdriver
  112.       end
  112.       
