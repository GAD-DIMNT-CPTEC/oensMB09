       !        
       !        Cray Inc. Decompilation
       !        WARNING - This output is provided for information only.
       !        
       !        Cray Inc. reserves the right to change the format of this
       !        information at any time and does not guarantee the
       !        readability or accuracy of this information.
       !        
       !        This information may not be compilable and corresponds to
       !        the internal representation of the program during the
       !        optimization phase of the compilation process.
       !        
       !        Source                :  Cu_RAS.f90
       !        File                  :  Cu_RAS.opt
       !        Format                :  Fortran
       !        Target                :  X86, 64-bit
       !        
   63.       
   63.       subroutine initarakawa
   65.       $I_L65_86 = 0
   65. !dir$ ivdep
   65.       do
   65.          ph(1 + $I_L65_86) = t$370(1 + $I_L65_86)
   65.          aa(1 + $I_L65_86) = t$371(1 + $I_L65_86)
   65.          ad(1 + $I_L65_86) = 0.0
   65.          ac(1 + $I_L65_86) = 0.0
   65.          $I_L65_86 = 1 + $I_L65_86
   65.          if ( $I_L65_86 >= 15 ) exit
   65.       enddo
   65.       actop = 1.7
   65.       $I_L65_80 = 0
   65. !dir$ ivdep
   65.       do
   65.          $tem_S2 = ph(2 + $I_L65_80) + -ph(1 + $I_L65_80)
   65.          $au_WR0_R0 = ( aa(1 + $I_L65_80) * 1.0/$tem_S2 )
   65.          $ad_WR0_R1 = ( aa(2 + $I_L65_80) * 1.0/$tem_S2 )
   65.          ac(2 + $I_L65_80) = -( $ad_WR0_R1 * ph(1 + $I_L65_80) ) + $au_WR0_R0 * ph(2 + $I_L65_80)
   65.          $ad_WR0_R1 = $ad_WR0_R1 + -$au_WR0_R0
   65.          ad(2 + $I_L65_80) = $ad_WR0_R1
   65.          $I_L65_80 = 1 + $I_L65_80
   65.          if ( $I_L65_80 >= 14 ) exit
   65.       enddo
   66.       $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
   66.       $I_L66_88 = 0
   66. !$omp do schedule(static)
   66.       do
   66.          $$_t = 180.0 + real( $I_L66_88, 8 )
   66.          $$_el = 2520000.0 + -3182.4000000000001 * ( -tbase + ( 180.0 + real( $I_L66_88, 8 ) ) )
   66.          $$_tx = -tbase + ( 180.0 + real( $I_L66_88, 8 ) )
   66.          if ( ( -tbase + ( 180.0 + real( $I_L66_88, 8 ) ) ) >= -50.0 ) then
   66.             $t_S4 = 6.1070420000000003e-1 + $$_tx * ( 4.4411569999999997e-2 + $$_tx * ( 1.4320979999999999e-3 + $$_tx * ( 2.6513960000000001e-5 + $$_tx * ( 3.0099980000000002e-7 + $$_tx * ( 2.0088800000000002e-9 + 6.1926229999999996e-12 * $$_tx ) ) ) ) )
   66.          else
   66.             $t_S4 = 6.3600000000000002e-3 * _expn( ( 25.600000000000001 * 1.0/( -50.0 + tbase ) * ( 50.0 + $$_tx ) ) )
   66.          endif
   66.          $I_L66_82 = 0
   66. !dir$ ivdep
   66.          do
   66.             $$_p = 2.9999999999999999e-1 + 5.0000000000000001e-3 * real( $I_L66_82, 8 )
   66.             $pdkap_S5 = 2.8573561616563808e-1 * log( ( $$_p + -1.0e-2 * $t_S4 ) )
   66.             $$_pdkap = _expn( $pdkap_S5 )
   66.             thetae(1 + $I_L66_88, 1 + $I_L66_82) = ( $$_t * 1.0/$$_pdkap * _expn( ( 9.9542106310969544e-4 * $$_el * 1.0/$$_t * ( 6.2199349945828819e-1 * $t_S4 * 1.0/( -$t_S4 + 100.0 * $$_p ) ) ) ) )
   66.             $I_L66_82 = 1 + $I_L66_82
   66.             if ( $I_L66_82 >= 181 ) exit
   66.          enddo
   66.          $I_L66_88 = 1 + $I_L66_88
   66.          if ( $I_L66_88 >= 151 ) exit
   66.       enddo
   66.       $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
   66.       $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
   66.       $I_L66_92 = 0
   66. !$omp do schedule(static)
   66.       do
   66.          $$_thee = 170.0 + real( $I_L66_92, 8 )
   66.          tfmthe(1 + $I_L66_92, 1) = 0.0
   66.          qfmthe(1 + $I_L66_92, 1) = 0.0
   66.          $I_L66_90 = 0
   66.          do
   66.             $$_p = 5.0000000000000001e-3 + 5.0000000000000001e-3 * real( $I_L66_90, 8 )
   66.             if ( $$_p < 2.5000000000000001e-2 ) then
   66.                $$_t = 100.0
   66.             else
   66.                $$_t = cvmg( 300.0, tbase, $$_p >= 5.0000000000000003e-2 )
   66.             endif
   66.             $I_L66_84 = 0
   66.             do
   66.                $tx_S8 = $$_t + -tbase
   66.                if ( ( $$_t + -tbase ) >= -50.0 ) then
   66.                   $t_S9 = 6.1070420000000003e-1 + $tx_S8 * ( 4.4411569999999997e-2 + $tx_S8 * ( 1.4320979999999999e-3 + $tx_S8 * ( 2.6513960000000001e-5 + $tx_S8 * ( 3.0099980000000002e-7 + $tx_S8 * ( 2.0088800000000002e-9 + 6.1926229999999996e-12 * $tx_S8 ) ) ) ) )
   66.                else
   66.                   $t_S9 = 6.3600000000000002e-3 * _expn( ( 25.600000000000001 * 1.0/( -50.0 + tbase ) * ( 50.0 + $tx_S8 ) ) )
   66.                endif
   66.                $$_pdkap = _expn( 2.8573561616563808e-1 * log( ( $$_p + -1.0e-2 * $t_S9 ) ) )
   66.                $$_fun = ( $$_t * 1.0/$$_pdkap * _expn( ( 9.9542106310969544e-4 * 1.0/$$_t * ( 2520000.0 + -3182.4000000000001 * ( $$_t + -tbase ) ) * ( 6.2199349945828819e-1 * $t_S9 * 1.0/( -$t_S9 + 100.0 * $$_p ) ) ) ) )
   66.                $$_chg = ( ( $$_thee + -$$_fun ) * 1.0/( ( $$_fun * 1.0/$$_t ) * ( 1.0 + ( -3182.4000000000001 * $$_t + ( 2.1668472372697724e-3 * 1.0/$$_t * ( 2520000.0 + -3182.4000000000001 * ( $$_t + -tbase ) ) * ( 2520000.0 + -3182.4000000000001 * ( $$_t + -tbase ) ) ) * ( $$_p * 1.0/( $$_p + -1.0e-2 * $t_S9 ) ) ) * ( 9.9542106310969544e-4 * 1.0/$$_t * ( 6.2199349945828819e-1 * $t_S9 * 1.0/( -$t_S9 + 100.0 * $$_p ) ) ) ) ) )
   66.                $$_t = $$_t + ( ( $$_thee + -$$_fun ) * 1.0/( ( $$_fun * 1.0/$$_t ) * ( 1.0 + ( -3182.4000000000001 * $$_t + ( 2.1668472372697724e-3 * 1.0/$$_t * ( 2520000.0 + -3182.4000000000001 * ( $$_t + -tbase ) ) * ( 2520000.0 + -3182.4000000000001 * ( $$_t + -tbase ) ) ) * ( $$_p * 1.0/( $$_p + -1.0e-2 * $t_S9 ) ) ) * ( 9.9542106310969544e-4 * 1.0/$$_t * ( 6.2199349945828819e-1 * $t_S9 * 1.0/( -$t_S9 + 100.0 * $$_p ) ) ) ) ) )
   66.                if ( abs( $$_chg ) < 1.1920928955078125e-7 ) exit
   66.                $I_L66_84 = 1 + $I_L66_84
   66.                if ( $I_L66_84 >= 100 ) exit
   66.             enddo
   66.             tfmthe(1 + $I_L66_92, 2 + $I_L66_90) = $$_t
   66.             $$_tx = $$_t + -tbase
   66.             if ( ( $$_t + -tbase ) >= -50.0 ) then
   66.                $t_S12 = 6.1070420000000003e-1 + $$_tx * ( 4.4411569999999997e-2 + $$_tx * ( 1.4320979999999999e-3 + $$_tx * ( 2.6513960000000001e-5 + $$_tx * ( 3.0099980000000002e-7 + $$_tx * ( 2.0088800000000002e-9 + 6.1926229999999996e-12 * $$_tx ) ) ) ) )
   66.             else
   66.                $t_S12 = 6.3600000000000002e-3 * _expn( ( 25.600000000000001 * 1.0/( -50.0 + tbase ) * ( 50.0 + $$_tx ) ) )
   66.             endif
   66.             qfmthe(1 + $I_L66_92, 2 + $I_L66_90) = ( 6.2199349945828819e-1 * $t_S12 * 1.0/( 100.0 * $$_p + -3.7800650054171181e-1 * $t_S12 ) )
   66.             $I_L66_90 = 1 + $I_L66_90
   66.             if ( $I_L66_90 >= 240 ) exit
   66.          enddo
   66.          $I_L66_92 = 1 + $I_L66_92
   66.          if ( $I_L66_92 >= 431 ) exit
   66.       enddo
   66.       $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
   68.       return
   68.       end
   68.       
   72.       
   72.       real (kind=8)
   72.       function es3( t )
   78.       $tx_S0 = t + -tbase
   79.       if ( ( t + -tbase ) >= -50.0 ) then
   80.          $es3_S1 = 6.1070420000000003e-1 + $tx_S0 * ( 4.4411569999999997e-2 + $tx_S0 * ( 1.4320979999999999e-3 + $tx_S0 * ( 2.6513960000000001e-5 + $tx_S0 * ( 3.0099980000000002e-7 + $tx_S0 * ( 2.0088800000000002e-9 + 6.1926229999999996e-12 * $tx_S0 ) ) ) ) )
   80.       else
   82.          $es3_S1 = 6.3600000000000002e-3 * _expn( ( 25.600000000000001 * 1.0/( -50.0 + tbase ) * ( 50.0 + $tx_S0 ) ) )
   82.       endif
   84.       es3 = $es3_S1
   84.       return
   84.       end
   84.       
   90.       
   90.       subroutine initacritn
   98.       $I_L98_10 = 0
   98. !dir$ ivdep
   98.       do
   98.          ph(1 + $I_L98_10) = t$370(1 + $I_L98_10)
  101.          aa(1 + $I_L98_10) = t$371(1 + $I_L98_10)
  105.          ad(1 + $I_L98_10) = 0.0
  106.          ac(1 + $I_L98_10) = 0.0
   98.          $I_L98_10 = 1 + $I_L98_10
   98.          if ( $I_L98_10 >= 15 ) exit
   98.       enddo
  108.       actop = 1.7
  114.       $I_L114_8 = 0
  114. !dir$ ivdep
  114.       do
  115.          $tem_S2 = ph(2 + $I_L114_8) + -ph(1 + $I_L114_8)
  116.          $au_WR0_R0 = ( aa(1 + $I_L114_8) * 1.0/$tem_S2 )
  117.          $ad_WR0_R1 = ( aa(2 + $I_L114_8) * 1.0/$tem_S2 )
  118.          ac(2 + $I_L114_8) = -( $ad_WR0_R1 * ph(1 + $I_L114_8) ) + $au_WR0_R0 * ph(2 + $I_L114_8)
  119.          $ad_WR0_R1 = $ad_WR0_R1 + -$au_WR0_R0
  119.          ad(2 + $I_L114_8) = $ad_WR0_R1
  120.          $I_L114_8 = 1 + $I_L114_8
  114.          if ( $I_L114_8 >= 14 ) exit
  114.       enddo
  121.       return
  121.       end
  121.       
  129.       
  129.       subroutine acritn( len, pl, plb, acr )
  129.       t$2 = len
  131.       t$30 = _zla( 0, len )
  138.       if ( len > 0 ) then
  144.          $SC_aa_I0 = aa(15)
  138.          $I_L138_4 = 0
  138. !dir$ ivdep
  138.          do
  139.             $iwk_S1 = int( ( -9.9999999900000003e-1 + 2.0e-2 * pl(1 + $I_L138_4) ) )
  140.             if ( int( ( -9.9999999900000003e-1 + 2.0e-2 * pl(1 + $I_L138_4) ) ) <= 1 ) then
  147.                acr(1 + $I_L138_4) = actop
  141.             else if ( $iwk_S1 <= 15 ) then
  142.                acr(1 + $I_L138_4) = ac($iwk_S1) + ad($iwk_S1) * pl(1 + $I_L138_4)
  142.             else
  144.                acr(1 + $I_L138_4) = $SC_aa_I0
  144.             endif
  149.             acr(1 + $I_L138_4) = acr(1 + $I_L138_4) * ( plb(1 + $I_L138_4) + -pl(1 + $I_L138_4) )
  150.             $I_L138_4 = 1 + $I_L138_4
  148.             if ( $I_L138_4 >= len ) exit
  148.          enddo
  148.       endif
  151.       return
  151.       end
  151.       
  159.       
  159.       subroutine qsat( tt, p, q, dqdt, ldqdt )
  190.       $t_S1 = -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) )
  191.       $q_S0 = ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) ) ) ) ) ) )
  192.       $d_S2 = 1.0/( p + -6.0855080510827297e-1 * ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) ) ) ) ) ) ) )
  193.       q = ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, tt ) ) ) ) ) ) ) ) ) * 1.0/( p + -6.0855080510827297e-1 * $q_S0 )
  195.       if ( ldqdt /= .false. ) then
  197.          dqdt = $d_S2 * ( ( 2.758084175464619e-1 + $t_S1 * ( 1.7766871900621335e-2 + $t_S1 * ( 4.9435463199216435e-4 + $t_S1 * ( 7.5378169874987931e-6 + $t_S1 * ( 6.3227127845150164e-8 + 2.2890744549110807e-10 * $t_S1 ) ) ) ) ) + 6.0855080510827297e-1 * q )
  197.       endif
  200.       return
  200.       end
  200.       
  208.       
  208.       subroutine rncl( len, pl, rno, clf )
  208.       t$3 = len
  210.       t$31 = _zla( 0, len )
  221.       if ( len > 0 ) then
  221.          $I_L221_4 = 0
  221. !dir$ ivdep
  221.          do
  222.             rno(1 + $I_L221_4) = 1.0
  223.             clf(1 + $I_L221_4) = 5.0e-1
  224.             if ( pl(1 + $I_L221_4) < 500.0 ) then
  221.                goto 10
  224.             else if ( pl(1 + $I_L221_4) <= 800.0 ) then
  225.                rno(1 + $I_L221_4) = 8.0000000000000004e-1 + 6.6666666666666675e-4 * ( 800.0 + -pl(1 + $I_L221_4) )
  225.             else
  225.    10          continue
  226.                if ( pl(1 + $I_L221_4) > 800.0 ) then
  227.                   rno(1 + $I_L221_4) = 8.0000000000000004e-1
  227.                endif
  227.             endif
  229.             $I_L221_4 = 1 + $I_L221_4
  228.             if ( $I_L221_4 >= len ) exit
  228.          enddo
  228.       endif
  230.       return
  230.       end
  230.       
  236.       
  236.       subroutine initmstad2
  262.       $snt_T0 = _parallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  263.       $I_L263_68 = 0
  263. !$omp do schedule(static)
  263.       do
  264.          $$_t = 180.0 + real( $I_L263_68, 8 )
  265.          $$_el = 2520000.0 + -3182.4000000000001 * ( -tbase + ( 180.0 + real( $I_L263_68, 8 ) ) )
  266.          $$_tx = -tbase + ( 180.0 + real( $I_L263_68, 8 ) )
  266.          if ( ( -tbase + ( 180.0 + real( $I_L263_68, 8 ) ) ) >= -50.0 ) then
  266.             $t_S1 = 6.1070420000000003e-1 + $$_tx * ( 4.4411569999999997e-2 + $$_tx * ( 1.4320979999999999e-3 + $$_tx * ( 2.6513960000000001e-5 + $$_tx * ( 3.0099980000000002e-7 + $$_tx * ( 2.0088800000000002e-9 + 6.1926229999999996e-12 * $$_tx ) ) ) ) )
  266.          else
  266.             $t_S1 = 6.3600000000000002e-3 * _expn( ( 25.600000000000001 * 1.0/( -50.0 + tbase ) * ( 50.0 + $$_tx ) ) )
  266.          endif
  268.          $I_L268_64 = 0
  268. !dir$ ivdep
  268.          do
  275.             $$_p = 2.9999999999999999e-1 + 5.0000000000000001e-3 * real( $I_L268_64, 8 )
  272.             $pdkap_S2 = 2.8573561616563808e-1 * log( ( $$_p + -1.0e-2 * $t_S1 ) )
  273.             $$_pdkap = _expn( $pdkap_S2 )
  274.             thetae(1 + $I_L263_68, 1 + $I_L268_64) = ( $$_t * 1.0/$$_pdkap * _expn( ( 9.9542106310969544e-4 * $$_el * 1.0/$$_t * ( 6.2199349945828819e-1 * $t_S1 * 1.0/( -$t_S1 + 100.0 * $$_p ) ) ) ) )
  276.             $I_L268_64 = 1 + $I_L268_64
  268.             if ( $I_L268_64 >= 181 ) exit
  268.          enddo
  277.          $I_L263_68 = 1 + $I_L263_68
  276.          if ( $I_L263_68 >= 151 ) exit
  276.       enddo
  278.       $snt_T0 = _endparallel( 1, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T0 )
  287.       $snt_T2 = _parallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), Null_Arg )
  288.       $I_L288_72 = 0
  288. !$omp do schedule(static)
  288.       do
  289.          $$_thee = 170.0 + real( $I_L288_72, 8 )
  290.          tfmthe(1 + $I_L288_72, 1) = 0.0
  291.          qfmthe(1 + $I_L288_72, 1) = 0.0
  293.          $I_L293_70 = 0
  293.          do
  331.             $$_p = 5.0000000000000001e-3 + 5.0000000000000001e-3 * real( $I_L293_70, 8 )
  297.             if ( $$_p < 2.5000000000000001e-2 ) then
  298.                $$_t = 100.0
  298.             else
  299.                $$_t = cvmg( 300.0, tbase, $$_p >= 5.0000000000000003e-2 )
  299.             endif
  307.             $I_L307_66 = 0
  307.             do
  311.                $tx_S5 = $$_t + -tbase
  311.                if ( ( $$_t + -tbase ) >= -50.0 ) then
  311.                   $t_S6 = 6.1070420000000003e-1 + $tx_S5 * ( 4.4411569999999997e-2 + $tx_S5 * ( 1.4320979999999999e-3 + $tx_S5 * ( 2.6513960000000001e-5 + $tx_S5 * ( 3.0099980000000002e-7 + $tx_S5 * ( 2.0088800000000002e-9 + 6.1926229999999996e-12 * $tx_S5 ) ) ) ) )
  311.                else
  311.                   $t_S6 = 6.3600000000000002e-3 * _expn( ( 25.600000000000001 * 1.0/( -50.0 + tbase ) * ( 50.0 + $tx_S5 ) ) )
  311.                endif
  317.                $$_pdkap = _expn( 2.8573561616563808e-1 * log( ( $$_p + -1.0e-2 * $t_S6 ) ) )
  318.                $$_fun = ( $$_t * 1.0/$$_pdkap * _expn( ( 9.9542106310969544e-4 * 1.0/$$_t * ( 2520000.0 + -3182.4000000000001 * ( $$_t + -tbase ) ) * ( 6.2199349945828819e-1 * $t_S6 * 1.0/( -$t_S6 + 100.0 * $$_p ) ) ) ) )
  321.                $$_chg = ( ( $$_thee + -$$_fun ) * 1.0/( ( $$_fun * 1.0/$$_t ) * ( 1.0 + ( -3182.4000000000001 * $$_t + ( 2.1668472372697724e-3 * 1.0/$$_t * ( 2520000.0 + -3182.4000000000001 * ( $$_t + -tbase ) ) * ( 2520000.0 + -3182.4000000000001 * ( $$_t + -tbase ) ) ) * ( $$_p * 1.0/( $$_p + -1.0e-2 * $t_S6 ) ) ) * ( 9.9542106310969544e-4 * 1.0/$$_t * ( 6.2199349945828819e-1 * $t_S6 * 1.0/( -$t_S6 + 100.0 * $$_p ) ) ) ) ) )
  322.                $$_t = $$_t + ( ( $$_thee + -$$_fun ) * 1.0/( ( $$_fun * 1.0/$$_t ) * ( 1.0 + ( -3182.4000000000001 * $$_t + ( 2.1668472372697724e-3 * 1.0/$$_t * ( 2520000.0 + -3182.4000000000001 * ( $$_t + -tbase ) ) * ( 2520000.0 + -3182.4000000000001 * ( $$_t + -tbase ) ) ) * ( $$_p * 1.0/( $$_p + -1.0e-2 * $t_S6 ) ) ) * ( 9.9542106310969544e-4 * 1.0/$$_t * ( 6.2199349945828819e-1 * $t_S6 * 1.0/( -$t_S6 + 100.0 * $$_p ) ) ) ) ) )
  323.                if ( abs( $$_chg ) < 1.1920928955078125e-7 ) exit
  324.                $I_L307_66 = 1 + $I_L307_66
  324.                if ( $I_L307_66 >= 100 ) exit
  324.             enddo
  325.             tfmthe(1 + $I_L288_72, 2 + $I_L293_70) = $$_t
  329.             $$_tx = $$_t + -tbase
  329.             if ( ( $$_t + -tbase ) >= -50.0 ) then
  329.                $t_S9 = 6.1070420000000003e-1 + $$_tx * ( 4.4411569999999997e-2 + $$_tx * ( 1.4320979999999999e-3 + $$_tx * ( 2.6513960000000001e-5 + $$_tx * ( 3.0099980000000002e-7 + $$_tx * ( 2.0088800000000002e-9 + 6.1926229999999996e-12 * $$_tx ) ) ) ) )
  329.             else
  329.                $t_S9 = 6.3600000000000002e-3 * _expn( ( 25.600000000000001 * 1.0/( -50.0 + tbase ) * ( 50.0 + $$_tx ) ) )
  329.             endif
  330.             qfmthe(1 + $I_L288_72, 2 + $I_L293_70) = ( 6.2199349945828819e-1 * $t_S9 * 1.0/( 100.0 * $$_p + -3.7800650054171181e-1 * $t_S9 ) )
  332.             $I_L293_70 = 1 + $I_L293_70
  329.             if ( $I_L293_70 >= 240 ) exit
  329.          enddo
  333.          $I_L288_72 = 1 + $I_L288_72
  332.          if ( $I_L288_72 >= 431 ) exit
  332.       enddo
  334.       $snt_T2 = _endparallel( 3, _mt_pinfo( _mt_rw_list(...), .true., 0 ), $snt_T2 )
  335.       return
  335.       end
  335.       
  354.       
  354.       subroutine mstad2( h, press, tin, tmst, qmst, ktop, ier, slcl, ll, qin, tlcl, llift, ncols, kmax )
  354.       t$5 = ncols
  400.       t$32 = _zla( 0, ncols )
  354.       t$4 = kmax
  395.       t$33 = _zla( 0, kmax )
  354.       t$34 = _zla( 0, ncols )
  354.       t$35 = _zla( 0, ncols ) * _zla( 0, kmax )
  423.       t$38 = 4 * _zla( 0, ncols )
  412.       t$40 = 8 * _zla( 0, ncols )
  415.       t$42 = 12 * _zla( 0, ncols )
  421.       t$44 = 16 * _zla( 0, ncols )
  427.       t$46 = 20 * _zla( 0, ncols )
  425.       t$48 = 24 * _zla( 0, ncols )
  424.       t$50 = 28 * _zla( 0, ncols )
  422.       t$51 = 8 * ( 7 + 28 * _zla( 0, ncols ) ) / 8
  422.       t$53 = t$51 + 8 * _zla( 0, ncols )
  414.       t$54 = 8 * ( 7 + t$51 + 8 * _zla( 0, ncols ) ) / 8
  414.       t$56 = t$54 + 8 * _zla( 0, ncols )
  410.       t$57 = 8 * ( 7 + t$54 + 8 * _zla( 0, ncols ) ) / 8
  410.       t$59 = t$57 + 8 * _zla( 0, ncols )
  419.       t$60 = 8 * ( 7 + t$57 + 8 * _zla( 0, ncols ) ) / 8
  419.       t$62 = t$60 + 8 * _zla( 0, ncols )
  411.       t$63 = 8 * ( 7 + t$60 + 8 * _zla( 0, ncols ) ) / 8
  411.       t$65 = t$63 + 8 * _zla( 0, ncols )
  420.       t$66 = 8 * ( 7 + t$63 + 8 * _zla( 0, ncols ) ) / 8
  420.       t$68 = t$66 + 8 * _zla( 0, ncols )
  426.       t$69 = 8 * ( 7 + t$66 + 8 * _zla( 0, ncols ) ) / 8
  426.       t$71 = t$69 + 8 * _zla( 0, ncols )
  413.       t$72 = 8 * ( 7 + t$69 + 8 * _zla( 0, ncols ) ) / 8
  413.       t$74 = t$72 + 8 * _zla( 0, ncols )
  418.       t$75 = 8 * ( 7 + t$72 + 8 * _zla( 0, ncols ) ) / 8
  418.       t$77 = t$75 + 8 * _zla( 0, ncols )
  416.       t$78 = 8 * ( 7 + t$75 + 8 * _zla( 0, ncols ) ) / 8
  416.       t$80 = t$78 + 8 * _zla( 0, ncols )
  417.       t$81 = 8 * ( 7 + t$78 + 8 * _zla( 0, ncols ) ) / 8
  417.       t$83 = t$81 + 8 * _zla( 0, ncols )
  354.       t$36 = int( _alloc( t$81 + 8 * _zla( 0, ncols ) ), 8 )
  423.       t$37 = t$36
  412.       t$39 = t$36 + 4 * _zla( 0, ncols )
  415.       t$41 = t$36 + 8 * _zla( 0, ncols )
  421.       t$43 = t$36 + 12 * _zla( 0, ncols )
  427.       t$45 = t$36 + 16 * _zla( 0, ncols )
  425.       t$47 = t$36 + 20 * _zla( 0, ncols )
  424.       t$49 = t$36 + 24 * _zla( 0, ncols )
  422.       t$52 = t$51 + t$36
  414.       t$55 = t$54 + t$36
  410.       t$58 = t$57 + t$36
  419.       t$61 = t$60 + t$36
  411.       t$64 = t$63 + t$36
  420.       t$67 = t$66 + t$36
  426.       t$70 = t$69 + t$36
  413.       t$73 = t$72 + t$36
  418.       t$76 = t$75 + t$36
  416.       t$79 = t$78 + t$36
  417.       t$82 = t$81 + t$36
  437.       if ( ncols > 0 ) then
  437.          $I_L437_54 = 0
  437. !dir$ ivdep
  437.          do
  438.             ier(1 + $I_L437_54) = 0
  439.             if ( llift(1 + $I_L437_54) /= .false. ) then
  440.                pp(1 + $I_L437_54) = slcl(1 + $I_L437_54) * h(1 + $I_L437_54)
  441.                $ti_WR0_R0 = -179.0 + tlcl(1 + $I_L437_54)
  441.                ti(1 + $I_L437_54) = $ti_WR0_R0
  442.                $jt_WR0_R1 = int( $ti_WR0_R0 )
  442.                jt(1 + $I_L437_54) = int( $ti_WR0_R0 )
  443.                if ( int( $ti_WR0_R0 ) <= 0 ) then
  440.                   goto 10
  443.                else if ( $jt_WR0_R1 > 150 ) then
  443.    10             continue
  444.                   ier(1 + $I_L437_54) = 1
  444.                endif
  444.             endif
  447.             $I_L437_54 = 1 + $I_L437_54
  446.             if ( $I_L437_54 >= ncols ) exit
  446.          enddo
  449.          $I_L449_56 = 0
  449. !dir$ ivdep
  449.          do
  450.             if ( llift(1 + $I_L449_56) /= .false. ) then
  450.                if ( ier(1 + $I_L449_56) == 0 ) then
  451.                   x(1 + $I_L449_56) = ti(1 + $I_L449_56) + ( -jt(1 + $I_L449_56) )
  452.                   $pk_WR0_R2 = -59.0 + 200.0 * pp(1 + $I_L449_56)
  452.                   pk(1 + $I_L449_56) = $pk_WR0_R2
  453.                   $kp_WR0_R3 = int( $pk_WR0_R2 )
  453.                   kp(1 + $I_L449_56) = int( $pk_WR0_R2 )
  457.                   if ( int( $pk_WR0_R2 ) <= 0 ) then
  451.                      goto 20
  457.                   else if ( $kp_WR0_R3 > 180 ) then
  457.    20                continue
  458.                      ier(1 + $I_L449_56) = 1
  458.                   endif
  458.                endif
  458.             endif
  461.             $I_L449_56 = 1 + $I_L449_56
  460.             if ( $I_L449_56 >= ncols ) exit
  460.          enddo
  463.          $I_L463_58 = 0
  463. !dir$ ivdep
  463.          do
  464.             if ( llift(1 + $I_L463_58) /= .false. ) then
  464.                if ( ier(1 + $I_L463_58) == 0 ) then
  465.                   $y_WR0_R4 = pk(1 + $I_L463_58) + ( -kp(1 + $I_L463_58) )
  466.                   $yy_WR0_R5 = 1.0 + -$y_WR0_R4
  467.                   $xx_WR0_R6 = 1.0 + -x(1 + $I_L463_58)
  468.                   $the_WR0_R7 = $xx_WR0_R6 * ( $yy_WR0_R5 * thetae(jt(1 + $I_L463_58), kp(1 + $I_L463_58)) + $y_WR0_R4 * thetae(jt(1 + $I_L463_58), 1 + kp(1 + $I_L463_58)) ) + x(1 + $I_L463_58) * ( $yy_WR0_R5 * thetae(1 + jt(1 + $I_L463_58), kp(1 + $I_L463_58)) + $y_WR0_R4 * thetae(1 + jt(1 + $I_L463_58), 1 + kp(1 + $I_L463_58)) )
  477.                   $kt_WR0_R9 = int( ( -169.0 + $the_WR0_R7 ) )
  477.                   kt(1 + $I_L463_58) = int( ( -169.0 + $the_WR0_R7 ) )
  478.                   y(1 + $I_L463_58) = ( ( -169.0 + $the_WR0_R7 ) + ( -( int( ( -169.0 + $the_WR0_R7 ) ) ) ) )
  479.                   yy(1 + $I_L463_58) = ( 1.0 + -( ( -169.0 + $the_WR0_R7 ) + ( -( int( ( -169.0 + $the_WR0_R7 ) ) ) ) ) )
  483.                   if ( int( ( -169.0 + $the_WR0_R7 ) ) <= 0 ) then
  465.                      goto 30
  483.                   else if ( $kt_WR0_R9 > 430 ) then
  483.    30                continue
  484.                      ier(1 + $I_L463_58) = 1
  484.                   endif
  484.                endif
  484.             endif
  488.             $I_L463_58 = 1 + $I_L463_58
  487.             if ( $I_L463_58 >= ncols ) exit
  487.          enddo
  492.          $I_L492_60 = 0
  492. !dir$ ivdep
  492.          do
  493.             if ( llift(1 + $I_L492_60) /= .false. ) then
  493.                if ( ier(1 + $I_L492_60) == 0 ) then
  494.                   tmst(1 + $I_L492_60, 1) = tlcl(1 + $I_L492_60)
  495.                   $pi_WR0_R10 = 1.0 + 200.0 * pp(1 + $I_L492_60)
  496.                   $ip_WR0_R11 = int( $pi_WR0_R10 )
  497.                   $x_WR0_R12 = $pi_WR0_R10 + ( -( int( $pi_WR0_R10 ) ) )
  498.                   qmst(1 + $I_L492_60, 1) = $x_WR0_R12 * ( qfmthe(kt(1 + $I_L492_60), 1 + $ip_WR0_R11) * yy(1 + $I_L492_60) + qfmthe(1 + kt(1 + $I_L492_60), 1 + $ip_WR0_R11) * y(1 + $I_L492_60) ) + ( 1.0 + -$x_WR0_R12 ) * ( yy(1 + $I_L492_60) * qfmthe(kt(1 + $I_L492_60), $ip_WR0_R11) + y(1 + $I_L492_60) * qfmthe(1 + kt(1 + $I_L492_60), $ip_WR0_R11) )
  498.                endif
  498.             endif
  503.             $I_L492_60 = 1 + $I_L492_60
  502.             if ( $I_L492_60 >= ncols ) exit
  502.          enddo
  515.          $I_L515_64 = 0
  515. !dir$ ivdep
  515.          do
  516.             if ( llift(1 + $I_L515_64) /= .false. ) then
  516.                if ( ier(1 + $I_L515_64) == 0 ) then
  517.                   $ktop_WR0_R13 = -1 + ll(1 + $I_L515_64)
  517.                   ktop(1 + $I_L515_64) = $ktop_WR0_R13
  518.                   if ( $ktop_WR0_R13 <= 0 ) then
  518.                      ktop(1 + $I_L515_64) = 1
  518.                   endif
  519.                   lstb(1 + $I_L515_64) = 0
  520.                   lcld(1 + $I_L515_64) = 0
  520.                endif
  520.             endif
  522.             $I_L515_64 = 1 + $I_L515_64
  521.             if ( $I_L515_64 >= ncols ) exit
  521.          enddo
  521.       endif
  505.       if ( -2 + kmax >= 0 ) then
  506.          if ( ncols > 0 ) then
  505.             $SI_L505_70_G1 = 0
  505.             do
  506.                $SI_L506_62_G4 = 0
  506.                do
  505.                   $I_L505_77 = 0
  505. !dir$ shortloop16
  505. !dir$ blocking_size( 2, 2 )
  505.                   do
  506.                      $I_L506_74 = 0
  506. !dir$ ivdep
  506. !dir$ blocking_size( 256, 256 )
  506.                      do
  507.                         tmst(1 + $I_L506_74 + 256 * $SI_L506_62_G4, 2 + $I_L505_77 + 2 * $SI_L505_70_G1) = tmst(1 + $I_L506_74 + 256 * $SI_L506_62_G4, 1)
  508.                         qmst(1 + $I_L506_74 + 256 * $SI_L506_62_G4, 2 + $I_L505_77 + 2 * $SI_L505_70_G1) = qmst(1 + $I_L506_74 + 256 * $SI_L506_62_G4, 1)
  506.                         $I_L506_74 = 1 + $I_L506_74
  506.                         if ( $I_L506_74 >= min( ncols, 256 + 256 * $SI_L506_62_G4 ) + -256 * $SI_L506_62_G4 ) exit
  506.                      enddo
  505.                      $I_L505_77 = 1 + $I_L505_77
  505.                      if ( $I_L505_77 >= min( -1 + kmax, 2 + 2 * $SI_L505_70_G1 ) + -2 * $SI_L505_70_G1 ) exit
  505.                   enddo
  506.                   $SI_L506_62_G4 = 1 + $SI_L506_62_G4
  509.                   if ( $SI_L506_62_G4 >= _rsh( 255 + ncols, 8 ) ) exit
  509.                enddo
  505.                $SI_L505_70_G1 = 1 + $SI_L505_70_G1
  505.                if ( $SI_L505_70_G1 >= _rsh( kmax, 1 ) ) exit
  505.             enddo
  505.          endif
  505.       endif
  524.       if ( kmax > 0 ) then
  525.          if ( ncols > 0 ) then
  524.             $I_L524_72 = 0
  524. !dir$ blocking_size( 1, 1 )
  524.             do
  525.                $I_L525_66 = 0
  525. !dir$ ivdep
  525. !dir$ blocking_size( 256, 256 )
  525.                do
  526.                   if ( llift(1 + $I_L525_66) /= .false. ) then
  526.                      if ( ier(1 + $I_L525_66) == 0 ) then
  526.                         if ( lcld(1 + $I_L525_66) == 0 ) then
  526.                            if ( ( 1 + $I_L524_72 ) >= ll(1 + $I_L525_66) ) then
  528.                               $pp_WR0_R14 = h(1 + $I_L525_66) * press(1 + $I_L524_72)
  530.                               $ip_WR0_R16 = int( ( 1.0 + 200.0 * $pp_WR0_R14 ) )
  531.                               $x_WR0_R17 = ( 1.0 + 200.0 * $pp_WR0_R14 ) + ( -( int( ( 1.0 + 200.0 * $pp_WR0_R14 ) ) ) )
  532.                               $tmst_WR0_R18 = $x_WR0_R17 * ( tfmthe(kt(1 + $I_L525_66), 1 + $ip_WR0_R16) * yy(1 + $I_L525_66) + tfmthe(1 + kt(1 + $I_L525_66), 1 + $ip_WR0_R16) * y(1 + $I_L525_66) ) + ( 1.0 + -$x_WR0_R17 ) * ( yy(1 + $I_L525_66) * tfmthe(kt(1 + $I_L525_66), $ip_WR0_R16) + y(1 + $I_L525_66) * tfmthe(1 + kt(1 + $I_L525_66), $ip_WR0_R16) )
  532.                               tmst(1 + $I_L525_66, 1 + $I_L524_72) = $tmst_WR0_R18
  536.                               $qmst_WR0_R19 = $x_WR0_R17 * ( yy(1 + $I_L525_66) * qfmthe(kt(1 + $I_L525_66), 1 + $ip_WR0_R16) + y(1 + $I_L525_66) * qfmthe(1 + kt(1 + $I_L525_66), 1 + $ip_WR0_R16) ) + ( 1.0 + -$x_WR0_R17 ) * ( yy(1 + $I_L525_66) * qfmthe(kt(1 + $I_L525_66), $ip_WR0_R16) + y(1 + $I_L525_66) * qfmthe(1 + kt(1 + $I_L525_66), $ip_WR0_R16) )
  536.                               qmst(1 + $I_L525_66, 1 + $I_L524_72) = $qmst_WR0_R19
  543.                               $tvdiff_WR0_R20 = $tmst_WR0_R18 + -tin(1 + $I_L525_66, 1 + $I_L524_72) + 6.0999999999999999e-1 * tin(1 + $I_L525_66, 1 + $I_L524_72) * ( $qmst_WR0_R19 + -qin(1 + $I_L525_66, 1 + $I_L524_72) )
  545.                               if ( $tvdiff_WR0_R20 > 0.0 ) then
  557.                                  $LD_SPLT_P1 = ktop(1 + $I_L525_66)
  557.                                  ktop(1 + $I_L525_66) = 1 + $LD_SPLT_P1
  546.                               else if ( lstb(1 + $I_L525_66) == 0 ) then
  547.                                  lstb(1 + $I_L525_66) = 1
  548.                                  ktop1(1 + $I_L525_66) = ktop(1 + $I_L525_66)
  549.                                  ktop(1 + $I_L525_66) = 1 + ktop(1 + $I_L525_66)
  549.                               else
  551.                                  lcld(1 + $I_L525_66) = 1
  552.                                  if ( -1 + ktop(1 + $I_L525_66) + -ktop1(1 + $I_L525_66) <= 0 ) then
  553.                                     ktop(1 + $I_L525_66) = ktop1(1 + $I_L525_66)
  553.                                  endif
  553.                               endif
  553.                            endif
  553.                         endif
  553.                      endif
  553.                   endif
  561.                   $I_L525_66 = 1 + $I_L525_66
  560.                   if ( $I_L525_66 >= ncols ) exit
  560.                enddo
  562.                $I_L524_72 = 1 + $I_L524_72
  561.                if ( $I_L524_72 >= kmax ) exit
  561.             enddo
  561.          endif
  561.       endif
  564.       $Reduc_A34 = .false.
  564.       $F_A36 = ncols
  564.       if ( ncols > 0 ) then
  564.          $I_L564_68 = 0
  564. !dir$ ivdep
  564.          do
  564.             if ( ier(1 + $I_L564_68) /= 0 ) then
  564.                $Reduc_A34 = .true.
  564.                goto 40
  564.             endif
  564.             $I_L564_68 = 1 + $I_L564_68
  564.             if ( $I_L564_68 >= $F_A36 ) exit
  564.          enddo
  564.       endif
  564.    40 continue
  564.       if ( $Reduc_A34 /= .false. ) then
  565.          _fwrite( _clist( 0, 0, 3, 0, Null_Arg, Null_Arg, t$7,  _substr(t$6,1,32), Null_Arg, Null_Arg, Null_Arg, Null_Arg, 0, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg, Null_Arg ), _iolist( _iotype( '**(mstad2)**', 0x800600000000L ) ) )
  566.           _substr(t$415,1,21) = '** ERROR AT MSTAD2 **'
  566.          call _stop(  _substr(t$415,1,21) )
  566.       else
  354.          _free( t$36 )
  354.       endif
  568.       return
  568.       end
  568.       
  576.       
  576.       subroutine qstar9( t, p, n, qstt, layr, kmax )
  576.       t$8 = n
  594.       t$84 = _zla( 0, n )
  599.       t$87 = 8 * _zla( 0, n )
  600.       t$88 = 8 * ( 7 + 8 * _zla( 0, n ) ) / 8
  600.       t$90 = t$88 + 8 * _zla( 0, n )
  602.       t$92 = t$88 + 12 * _zla( 0, n )
  603.       t$94 = t$88 + 16 * _zla( 0, n )
  576.       t$10 = kmax
  647.       t$95 = _zla( 0, kmax )
  647.       t$96 = 8 * ( 7 + t$88 + 16 * _zla( 0, n ) ) / 8
  647.       t$98 = t$96 + 8 * _zla( 0, kmax )
  601.       t$99 = 8 * ( 7 + t$96 + 8 * _zla( 0, kmax ) ) / 8
  601.       t$101 = t$99 + 8 * _zla( 0, n )
  576.       t$85 = int( _alloc( t$99 + 8 * _zla( 0, n ) ), 8 )
  599.       t$86 = t$85
  600.       t$89 = t$88 + t$85
  602.       t$91 = t$88 + t$85 + 8 * _zla( 0, n )
  603.       t$93 = t$88 + t$85 + 12 * _zla( 0, n )
  647.       t$97 = t$96 + t$85
  601.       t$100 = t$99 + t$85
  652.       $F_A33 = kmax
  652.       if ( kmax > 0 ) then
  652.          $I_L652_22 = 0
  652. !dir$ ivdep
  652.          do
  652.             qfac(1 + $I_L652_22) = 1.0
  652.             $I_L652_22 = 1 + $I_L652_22
  652.             if ( $I_L652_22 >= $F_A33 ) exit
  652.          enddo
  652.       endif
  654.       if ( n > 0 ) then
  654.          $I_L654_18 = 0
  654. !dir$ ivdep
  654.          do
  655.             $tq_WR0_R0 = -198.99999 + t(1 + $I_L654_18)
  655.             tq(1 + $I_L654_18) = $tq_WR0_R0
  656.             if ( t(1 + $I_L654_18) < 200.0 ) then
  656.                $tq_WR0_R0 = 1.0000100000000001
  656.                tq(1 + $I_L654_18) = 1.0000100000000001
  656.             endif
  657.             if ( t(1 + $I_L654_18) > 337.89999999999998 ) then
  657.                $tq_WR0_R0 = 138.90001000000001
  657.                tq(1 + $I_L654_18) = 138.90001000000001
  657.             endif
  658.             i1(1 + $I_L654_18) = int( $tq_WR0_R0 )
  659.             i2(1 + $I_L654_18) = 1 + int( $tq_WR0_R0 )
  660.             $I_L654_18 = 1 + $I_L654_18
  657.             if ( $I_L654_18 >= n ) exit
  657.          enddo
  674.          $SC_qfac_I0 = qfac(layr)
  662.          $I_L662_20 = 0
  662. !dir$ ivdep
  662.          do
  663.             $e1_WR0_R2 = est(i1(1 + $I_L662_20))
  664.             $e2_WR0_R3 = est(i2(1 + $I_L662_20))
  668.             $qstt_WR0_R4 = tq(1 + $I_L662_20) + ( -i1(1 + $I_L662_20) )
  670.             $qstt_WR0_R4 = $e1_WR0_R2 + $qstt_WR0_R4 * ( $e2_WR0_R3 + -$e1_WR0_R2 )
  671.             $e1_WR0_R2 = 6.1652281134401965e-1 * p(1 + $I_L662_20)
  674.             $qstt_WR0_R4 = $SC_qfac_I0 * ( 6.22e-1 * min( $e1_WR0_R2, $qstt_WR0_R4 ) * 1.0/p(1 + $I_L662_20) )
  674.             qstt(1 + $I_L662_20) = $qstt_WR0_R4
  665.             $I_L662_20 = 1 + $I_L662_20
  662.             if ( $I_L662_20 >= n ) exit
  662.          enddo
  662.       endif
  576.       _free( t$85 )
  677.       return
  677.       end
  677.       
  685.       
  685.       subroutine rnevp( ft, fq, pain, fp, sig, dsig, clfric, rcon, rlar, dtc3, ncols, kmax, nlst )
  685.       t$11 = ncols
  685.       t$12 = kmax
  699.       t$102 = _zla( 0, ncols )
  685.       t$103 = _zla( 0, ncols )
  699.       t$104 = _zla( 0, kmax )
  685.       t$105 = _zla( 0, ncols ) * _zla( 0, kmax )
  726.       t$108 = 8 * _zla( 0, ncols ) * _zla( 0, kmax )
  733.       t$109 = 8 * ( 7 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
  733.       t$111 = t$109 + 8 * _zla( 0, ncols )
  727.       t$112 = 8 * ( 7 + t$109 + 8 * _zla( 0, ncols ) ) / 8
  727.       t$114 = t$112 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
  730.       t$115 = 8 * ( 7 + t$112 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
  730.       t$117 = t$115 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
  729.       t$118 = 8 * ( 7 + t$115 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
  729.       t$120 = t$118 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
  731.       t$121 = 8 * ( 7 + t$118 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
  731.       t$123 = t$121 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
  725.       t$124 = 8 * ( 7 + t$121 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
  725.       t$126 = t$124 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
  732.       t$127 = 8 * ( 7 + t$124 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
  732.       t$129 = t$127 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
  723.       t$130 = 8 * ( 7 + t$127 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
  723.       t$132 = t$130 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
  724.       t$133 = 8 * ( 7 + t$130 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
  724.       t$135 = t$133 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
  717.       t$136 = 8 * ( 7 + t$133 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
  717.       t$138 = t$136 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
  721.       t$139 = 8 * ( 7 + t$136 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
  721.       t$141 = t$139 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
  728.       t$142 = 8 * ( 7 + t$139 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
  728.       t$144 = t$142 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
  722.       t$145 = 8 * ( 7 + t$142 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
  722.       t$147 = t$145 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
  685.       t$106 = int( _alloc( t$145 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ), 8 )
  726.       t$107 = t$106
  733.       t$110 = t$109 + t$106
  727.       t$113 = t$112 + t$106
  730.       t$116 = t$115 + t$106
  729.       t$119 = t$118 + t$106
  731.       t$122 = t$121 + t$106
  725.       t$125 = t$124 + t$106
  732.       t$128 = t$127 + t$106
  723.       t$131 = t$130 + t$106
  724.       t$134 = t$133 + t$106
  717.       t$137 = t$136 + t$106
  721.       t$140 = t$139 + t$106
  728.       t$143 = t$142 + t$106
  722.       t$146 = t$145 + t$106
  800.       if ( kmax > 0 ) then
  801.          if ( ncols > 0 ) then
  800.             $I_L800_120 = 0
  800. !dir$ blocking_size( 1, 1 )
  800.             do
  801.                $SCA_sig_I1 = sig(kmax + -$I_L800_120)
  801.                $SCA_dsig_I2 = dsig(kmax + -$I_L800_120)
  801.                $I_L801_100 = 0
  801. !dir$ ivdep
  801. !dir$ blocking_size( 256, 256 )
  801.                do
  802.                   tl(1 + $I_L801_100, 1 + $I_L800_120) = ft(1 + $I_L801_100, kmax + -$I_L800_120)
  803.                   ql(1 + $I_L801_100, 1 + $I_L800_120) = fq(1 + $I_L801_100, kmax + -$I_L800_120)
  804.                   $pl_WR0_R0 = 10.0 * $SCA_sig_I1 * fp(1 + $I_L801_100)
  804.                   pl(1 + $I_L801_100, 1 + $I_L800_120) = $pl_WR0_R0
  806.                   amass(1 + $I_L801_100, 1 + $I_L800_120) = ( 9.810000000000001e-3 * 1.0/( $SCA_dsig_I2 * fp(1 + $I_L801_100) ) )
  808.                   temp2(1 + $I_L801_100, 1 + $I_L800_120) = _sqrt( 1.0e-3 * $pl_WR0_R0 )
  813.                   rain(1 + $I_L801_100, 1 + $I_L800_120) = pain(1 + $I_L801_100, 1 + $I_L800_120)
  809.                   $I_L801_100 = 1 + $I_L801_100
  801.                   if ( $I_L801_100 >= ncols ) exit
  801.                enddo
  810.                $I_L800_120 = 1 + $I_L800_120
  809.                if ( $I_L800_120 >= kmax ) exit
  809.             enddo
  809.          endif
  809.       endif
  816.       $rphf_S14 = ( 3600.0 * 1.0/dtc3 )
  818.       if ( ncols > 0 ) then
  818.          $I_L818_102 = 0
  818. !dir$ ivdep
  818.          do
  819.             rcon(1 + $I_L818_102) = 0.0
  820.             rlar(1 + $I_L818_102) = 0.0
  821.             $I_L818_102 = 1 + $I_L818_102
  818.             if ( $I_L818_102 >= ncols ) exit
  818.          enddo
  818.       endif
  822.       if ( ncols * kmax > 0 ) then
  822.          $I_L822_104 = 0
  822. !dir$ ivdep
  822.          do
  824.             tempc(1 + $I_L822_104, 1) = 0.0
  825.             cvt(1 + $I_L822_104, 1) = 0.0
  826.             cvq(1 + $I_L822_104, 1) = 0.0
  827.             $I_L822_104 = 1 + $I_L822_104
  822.             if ( $I_L822_104 >= ( ncols * kmax ) ) exit
  822.          enddo
  822.       endif
  831.       if ( -2 + kmax >= 0 ) then
  831.          $I_L831_126 = 0
  831.          do
  832.             if ( ncols > 0 ) then
  832.                $I_L832_106 = 0
  832. !dir$ ivdep
  832.                do
  833.                   tempc(1 + $I_L832_106, 3) = tl(1 + $I_L832_106, 2 + $I_L831_126)
  834.                   tempc(1 + $I_L832_106, 4) = ql(1 + $I_L832_106, 2 + $I_L831_126)
  835.                   $I_L832_106 = 1 + $I_L832_106
  832.                   if ( $I_L832_106 >= ncols ) exit
  832.                enddo
  832.             endif
  836.             $I_L836_122 = 0
  836.             do
  837.                tm$7 = loc( tempc(1, 3) )
  837.                t = _copyin( tempc(1, 3) )
  837.                tm$9 = loc( pl(1, 2 + $I_L831_126) )
  837.                p = _copyin( pl(1, 2 + $I_L831_126) )
  837.                tm$11 = loc( tempc(1, 2) )
  837.                qstt = _copyin( tempc(1, 2) )
  837.                t$8 = ncols
  837.                t$84 = max( 0, ncols )
  837.                t$87 = 8 * max( 0, ncols )
  837.                t$88 = 8 * ( 7 + 8 * max( 0, ncols ) ) / 8
  837.                t$90 = t$88 + 8 * max( 0, ncols )
  837.                t$92 = t$88 + 12 * max( 0, ncols )
  837.                t$94 = t$88 + 16 * max( 0, ncols )
  837.                t$10 = kmax
  837.                t$95 = max( 0, kmax )
  837.                t$96 = 8 * ( 7 + t$88 + 16 * max( 0, ncols ) ) / 8
  837.                t$98 = t$96 + 8 * max( 0, kmax )
  837.                t$99 = 8 * ( 7 + t$96 + 8 * max( 0, kmax ) ) / 8
  837.                t$101 = t$99 + 8 * max( 0, ncols )
  837.                t$85 = int( _alloc( t$99 + 8 * max( 0, ncols ) ), 8 )
  837.                t$86 = t$85
  837.                t$89 = t$88 + t$85
  837.                t$91 = t$88 + t$85 + 8 * max( 0, ncols )
  837.                t$93 = t$88 + t$85 + 12 * max( 0, ncols )
  837.                t$97 = t$96 + t$85
  837.                t$100 = t$99 + t$85
  837.                $F_A33 = kmax
  837.                $I_L837_118 = 0
  837. !dir$ ivdep
  837.                do
  837.                   qfac(1 + $I_L837_118) = 1.0
  837.                   $I_L837_118 = 1 + $I_L837_118
  837.                   if ( $I_L837_118 >= $F_A33 ) exit
  837.                enddo
  837.                if ( ncols > 0 ) then
  837.                   $I_L837_108 = 0
  837. !dir$ ivdep
  837.                   do
  837.                      $tq_WR0_R2 = -198.99999 + t(1 + $I_L837_108)
  837.                      tq(1 + $I_L837_108) = $tq_WR0_R2
  837.                      if ( t(1 + $I_L837_108) < 200.0 ) then
  837.                         $tq_WR0_R2 = 1.0000100000000001
  837.                         tq(1 + $I_L837_108) = 1.0000100000000001
  837.                      endif
  837.                      if ( t(1 + $I_L837_108) > 337.89999999999998 ) then
  837.                         $tq_WR0_R2 = 138.90001000000001
  837.                         tq(1 + $I_L837_108) = 138.90001000000001
  837.                      endif
  837.                      i1(1 + $I_L837_108) = int( $tq_WR0_R2 )
  837.                      i2(1 + $I_L837_108) = 1 + int( $tq_WR0_R2 )
  837.                      $I_L837_108 = 1 + $I_L837_108
  837.                      if ( $I_L837_108 >= ncols ) exit
  837.                   enddo
  837.                   $SC_qfac_I0 = qfac(2 + $I_L831_126)
  837.                   $I_L837_110 = 0
  837. !dir$ ivdep
  837.                   do
  837.                      $e1_WR0_R4 = est(i1(1 + $I_L837_110))
  837.                      $e2_WR0_R5 = est(i2(1 + $I_L837_110))
  837.                      $qstt_WR0_R6 = tq(1 + $I_L837_110) + ( -i1(1 + $I_L837_110) )
  837.                      $qstt_WR0_R6 = $e1_WR0_R4 + $qstt_WR0_R6 * ( $e2_WR0_R5 + -$e1_WR0_R4 )
  837.                      $e1_WR0_R4 = 6.1652281134401965e-1 * p(1 + $I_L837_110)
  837.                      $qstt_WR0_R6 = $SC_qfac_I0 * ( 6.22e-1 * min( $e1_WR0_R4, $qstt_WR0_R6 ) * 1.0/p(1 + $I_L837_110) )
  837.                      qstt(1 + $I_L837_110) = $qstt_WR0_R6
  837.                      $I_L837_110 = 1 + $I_L837_110
  837.                      if ( $I_L837_110 >= ncols ) exit
  837.                   enddo
  837.                endif
  837.                _free( t$85 )
  837.                tempc(1, 2) = _copyout( qstt )
  837.                pl(1, 2 + $I_L831_126) = _copyout( p )
  837.                tempc(1, 3) = _copyout( t )
  843.                if ( ncols > 0 ) then
  843.                   $I_L843_112 = 0
  843. !dir$ ivdep
  843.                   do
  844.                      $tempc_WR0_R7 = tempc(1 + $I_L843_112, 2) + -tempc(1 + $I_L843_112, 4)
  845.                      $tempc_WR0_R8 = ( 13480000.0 * tempc(1 + $I_L843_112, 2) * 1.0/( tempc(1 + $I_L843_112, 3) * tempc(1 + $I_L843_112, 3) ) )
  845.                      tempc(1 + $I_L843_112, 6) = $tempc_WR0_R8
  846.                      $tempc_WR0_R7 = ( $tempc_WR0_R7 * 1.0/( 1.0 + $tempc_WR0_R8 ) )
  846.                      tempc(1 + $I_L843_112, 5) = $tempc_WR0_R7
  847.                      tempc(1 + $I_L843_112, 4) = tempc(1 + $I_L843_112, 4) + $tempc_WR0_R7 * cvmg( 1.0, 5.0e-1, $I_L836_122 /= 0 )
  848.                      tempc(1 + $I_L843_112, 3) = tempc(1 + $I_L843_112, 3) + -2552.3429710867399 * $tempc_WR0_R7 * cvmg( 1.0, 5.0e-1, $I_L836_122 /= 0 )
  849.                      $I_L843_112 = 1 + $I_L843_112
  843.                      if ( $I_L843_112 >= ncols ) exit
  843.                   enddo
  843.                endif
  850.                $I_L836_122 = 1 + $I_L836_122
  849.                if ( $I_L836_122 >= 3 ) exit
  849.             enddo
  851.             if ( ncols > 0 ) then
  851.                $I_L851_114 = 0
  851. !dir$ ivdep
  851.                do
  853.                   $evp9_WR0_R9 = ( ( tempc(1 + $I_L851_114, 4) + -ql(1 + $I_L851_114, 2 + $I_L831_126) ) * 1.0/amass(1 + $I_L851_114, 2 + $I_L831_126) )
  855.                   $clfrac_WR0_R10 = clfric * ( 1.0 + -( ql(1 + $I_L851_114, 2 + $I_L831_126) * 1.0/tempc(1 + $I_L851_114, 4) ) )
  856.                   $tempc_WR0_R12 = max( $clfrac_WR0_R10, tempc(1 + $I_L851_114, 8) )
  856.                   tempc(1 + $I_L851_114, 8) = $tempc_WR0_R12
  854.                   $rcon_WR0_R13 = rcon(1 + $I_L851_114) + rain(1 + $I_L851_114, 2 + $I_L831_126)
  854.                   rcon(1 + $I_L851_114) = $rcon_WR0_R13
  858.                   if ( $rcon_WR0_R13 <= 0.0 ) then
  851.                      goto 10
  858.                   else if ( $evp9_WR0_R9 > 0.0 ) then
  861.                      $rpow_S15 = _expn( 5.7799999999999996e-1 * log( $rphf_S14 * $rcon_WR0_R13 * temp2(1 + $I_L851_114, 2 + $I_L831_126) ) )
  863.                      $art_WR0_R11 = 1.0 + -_expn( ( -1.0399999999999999e-4 * dtc3 * $rpow_S15 ) )
  865.                      tempc(1 + $I_L851_114, 7) = ( min( $rcon_WR0_R13, ( $art_WR0_R11 * $evp9_WR0_R9 * ( min( 1.0, $tempc_WR0_R12 ) ) ) ) )
  868.                      $cvq_WR0_R15 = cvq(1 + $I_L851_114, 2 + $I_L831_126) + amass(1 + $I_L851_114, 2 + $I_L831_126) * ( min( $rcon_WR0_R13, ( $art_WR0_R11 * $evp9_WR0_R9 * ( min( 1.0, $tempc_WR0_R12 ) ) ) ) )
  868.                      cvq(1 + $I_L851_114, 2 + $I_L831_126) = $cvq_WR0_R15
  869.                      $cvt_WR0_R16 = cvt(1 + $I_L851_114, 2 + $I_L831_126) + -2552.3429710867399 * amass(1 + $I_L851_114, 2 + $I_L831_126) * ( min( $rcon_WR0_R13, ( $art_WR0_R11 * $evp9_WR0_R9 * ( min( 1.0, $tempc_WR0_R12 ) ) ) ) )
  869.                      cvt(1 + $I_L851_114, 2 + $I_L831_126) = $cvt_WR0_R16
  866.                      $rcon_WR0_R13 = $rcon_WR0_R13 + -( min( $rcon_WR0_R13, ( $art_WR0_R11 * $evp9_WR0_R9 * ( min( 1.0, $tempc_WR0_R12 ) ) ) ) )
  866.                      rcon(1 + $I_L851_114) = $rcon_WR0_R13
  874.                      ql(1 + $I_L851_114, 2 + $I_L831_126) = $cvq_WR0_R15 + ql(1 + $I_L851_114, 2 + $I_L831_126)
  873.                      tl(1 + $I_L851_114, 2 + $I_L831_126) = $cvt_WR0_R16 + tl(1 + $I_L851_114, 2 + $I_L831_126)
  873.                   else
  873.    10                continue
  876.                      tempc(1 + $I_L851_114, 7) = 0.0
  876.                   endif
  878.                   $I_L851_114 = 1 + $I_L851_114
  877.                   if ( $I_L851_114 >= ncols ) exit
  877.                enddo
  877.             endif
  879.             $I_L831_126 = 1 + $I_L831_126
  878.             if ( $I_L831_126 >= -1 + kmax ) exit
  878.          enddo
  878.       endif
  883.       if ( kmax > 0 ) then
  884.          if ( ncols > 0 ) then
  883.             $I_L883_124 = 0
  883.             do
  884.                $I_L884_116 = 0
  884. !dir$ ivdep
  884.                do
  885.                   ft(1 + $I_L884_116, 1 + $I_L883_124) = tl(1 + $I_L884_116, kmax + -$I_L883_124)
  886.                   fq(1 + $I_L884_116, 1 + $I_L883_124) = ql(1 + $I_L884_116, kmax + -$I_L883_124)
  887.                   $I_L884_116 = 1 + $I_L884_116
  884.                   if ( $I_L884_116 >= ncols ) exit
  884.                enddo
  888.                $I_L883_124 = 1 + $I_L883_124
  887.                if ( $I_L883_124 >= kmax ) exit
  887.             enddo
  887.          endif
  887.       endif
  685.       _free( t$106 )
  889.       return
  889.       end
  889.       
  897.       
  897.       subroutine cloud( len, lenc, k, ic, rasalf, setras, frac, alhl, rkap, poi, qoi, uoi, voi, prs, prj, pcu, cln, tcu, qcu, alf, bet, gam, prh, pri, hol, eta, hst, qol, gmh, tx1, tx2, tx3, tx4, tx5, tx6, tx7, tx8, alm, wfn, akm, qs1, clf, uht, vht, wlq, ia, i1, i2, cmb2pa, rhmax )
  897.       t$13 = len
  897.       t$14 = k
  978.       t$148 = _zla( 0, len )
  897.       t$149 = _zla( 0, len )
  978.       t$150 = _zla( 0, k )
  897.       t$151 = _zla( 0, len ) * _zla( 0, k )
  897.       t$15 = ( 1 + k )
  980.       t$152 = _zla( 0, ( 1 + k ) )
  897.       t$153 = _zla( 0, len ) * _zla( 0, ( 1 + k ) )
  897.       t$16 = lenc
 1015.       t$154 = _zla( 0, lenc )
  897.       t$155 = _zla( 0, lenc )
  897.       t$156 = _zla( 0, k ) * _zla( 0, lenc )
 1044.       $rkapp1_S2 = 1.0 + rkap
 1046.       $albcp_S7 = 9.9542106310969544e-4 * alhl
 1049.       $twobal_S87 = ( 2.0 * 1.0/alhl )
 1055.       if ( setras /= .false. ) then
 1056.          if ( k > 0 ) then
 1057.             if ( lenc > 0 ) then
 1056.                $I_L1056_665 = 0
 1056.                do
 1057.                   $I_L1057_552 = 0
 1057. !dir$ ivdep
 1057.                   do
 1058.                      prh(1 + $I_L1057_552, 1 + $I_L1056_665) = ( ( -( prj(1 + $I_L1057_552, 1 + $I_L1056_665) * prs(1 + $I_L1057_552, 1 + $I_L1056_665) ) + prj(1 + $I_L1057_552, 2 + $I_L1056_665) * prs(1 + $I_L1057_552, 2 + $I_L1056_665) ) * 1.0/( $rkapp1_S2 * ( prs(1 + $I_L1057_552, 2 + $I_L1056_665) + -prs(1 + $I_L1057_552, 1 + $I_L1056_665) ) ) )
 1060.                      $I_L1057_552 = 1 + $I_L1057_552
 1057.                      if ( $I_L1057_552 >= lenc ) exit
 1057.                   enddo
 1064.                   $I_L1064_554 = 0
 1064. !dir$ ivdep
 1064.                   do
 1065.                      $tx5_WR0_R0 = poi(1 + $I_L1064_554, 1 + $I_L1056_665) * prh(1 + $I_L1064_554, 1 + $I_L1056_665)
 1065.                      tx5(1 + $I_L1064_554) = $tx5_WR0_R0
 1066.                      $tx1_WR0_R1 = 5.0e-1 * ( prs(1 + $I_L1064_554, 2 + $I_L1056_665) + prs(1 + $I_L1064_554, 1 + $I_L1056_665) )
 1066.                      tx1(1 + $I_L1064_554) = $tx1_WR0_R1
 1067.                      tx3(1 + $I_L1064_554) = $tx5_WR0_R0
 1068.                      $t_S5 = -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) )
 1068.                      $d_S6 = 1.0/( $tx1_WR0_R1 + -6.0855080510827297e-1 * ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) )
 1068.                      tx2(1 + $I_L1064_554) = ( $d_S6 * ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) )
 1068.                      $tx4_WR0_R4 = 1.0/( $tx1_WR0_R1 + -6.0855080510827297e-1 * ( 3.7970824058546779 + $t_S5 * ( 2.758084175464619e-1 + $t_S5 * ( 8.8834359503106673e-3 + $t_S5 * ( 1.6478487733072146e-4 + $t_S5 * ( 1.8844542468746983e-6 + $t_S5 * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * $t_S5 ) ) ) ) ) ) ) * ( ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.7766871900621335e-2 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 4.9435463199216435e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 7.5378169874987931e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 6.3227127845150164e-8 + 2.2890744549110807e-10 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) + 6.0855080510827297e-1 * ( 1.0/( $tx1_WR0_R1 + -6.0855080510827297e-1 * ( 3.7970824058546779 + $t_S5 * ( 2.758084175464619e-1 + $t_S5 * ( 8.8834359503106673e-3 + $t_S5 * ( 1.6478487733072146e-4 + $t_S5 * ( 1.8844542468746983e-6 + $t_S5 * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * $t_S5 ) ) ) ) ) ) ) * ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) ) )
 1068.                      tx4(1 + $I_L1064_554) = ( $d_S6 * ( ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.7766871900621335e-2 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 4.9435463199216435e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 7.5378169874987931e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 6.3227127845150164e-8 + 2.2890744549110807e-10 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) + 6.0855080510827297e-1 * ( $d_S6 * ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) ) ) )
 1069.                      alf(1 + $I_L1064_554, 1 + $I_L1056_665) = -( $tx5_WR0_R0 * $tx4_WR0_R4 ) + ( 1.0/( $tx1_WR0_R1 + -6.0855080510827297e-1 * ( 3.7970824058546779 + $t_S5 * ( 2.758084175464619e-1 + $t_S5 * ( 8.8834359503106673e-3 + $t_S5 * ( 1.6478487733072146e-4 + $t_S5 * ( 1.8844542468746983e-6 + $t_S5 * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * $t_S5 ) ) ) ) ) ) ) * ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) )
 1070.                      bet(1 + $I_L1064_554, 1 + $I_L1056_665) = prh(1 + $I_L1064_554, 1 + $I_L1056_665) * ( $d_S6 * ( ( 2.758084175464619e-1 + $t_S5 * ( 1.7766871900621335e-2 + $t_S5 * ( 4.9435463199216435e-4 + $t_S5 * ( 7.5378169874987931e-6 + $t_S5 * ( 6.3227127845150164e-8 + 2.2890744549110807e-10 * $t_S5 ) ) ) ) ) + 6.0855080510827297e-1 * ( $d_S6 * ( 3.7970824058546779 + $t_S5 * ( 2.758084175464619e-1 + $t_S5 * ( 8.8834359503106673e-3 + $t_S5 * ( 1.6478487733072146e-4 + $t_S5 * ( 1.8844542468746983e-6 + $t_S5 * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * $t_S5 ) ) ) ) ) ) ) ) )
 1071.                      gam(1 + $I_L1064_554, 1 + $I_L1056_665) = 1.0/( prh(1 + $I_L1064_554, 1 + $I_L1056_665) * ( 1.0 + $albcp_S7 * $tx4_WR0_R4 ) )
 1072.                      pri(1 + $I_L1064_554, 1 + $I_L1056_665) = ( ( 1004.6 * 1.0/cmb2pa ) * 1.0/( prs(1 + $I_L1064_554, 2 + $I_L1056_665) + -prs(1 + $I_L1064_554, 1 + $I_L1056_665) ) )
 1073.                      $I_L1064_554 = 1 + $I_L1064_554
 1064.                      if ( $I_L1064_554 >= lenc ) exit
 1064.                   enddo
 1061.                   $I_L1056_665 = 1 + $I_L1056_665
 1060.                   if ( $I_L1056_665 >= k ) exit
 1060.                enddo
 1060.             endif
 1060.          endif
 1060.       endif
 1077.       if ( k > 0 ) then
 1078.          if ( len > 0 ) then
 1077.             $I_L1077_667 = 0
 1077.             do
 1078.                $I_L1078_556 = 0
 1078. !dir$ ivdep
 1078.                do
 1079.                   tcu(1 + $I_L1078_556, 1 + $I_L1077_667) = 0.0
 1080.                   qcu(1 + $I_L1078_556, 1 + $I_L1077_667) = 0.0
 1081.                   $I_L1078_556 = 1 + $I_L1078_556
 1078.                   if ( $I_L1078_556 >= len ) exit
 1078.                enddo
 1082.                $I_L1077_667 = 1 + $I_L1077_667
 1081.                if ( $I_L1077_667 >= k ) exit
 1081.             enddo
 1081.          endif
 1081.       endif
 1084.       if ( lenc > 0 ) then
 1084.          $I_L1084_558 = 0
 1084. !dir$ ivdep
 1084.          do
 1085.             $tx1_WR0_R5 = poi(1 + $I_L1084_558, k) * prj(1 + $I_L1084_558, 1 + k)
 1085.             tx1(1 + $I_L1084_558) = $tx1_WR0_R5
 1086.             $qs1_WR0_R6 = alf(1 + $I_L1084_558, k) + poi(1 + $I_L1084_558, k) * bet(1 + $I_L1084_558, k)
 1086.             qs1(1 + $I_L1084_558) = $qs1_WR0_R6
 1087.             $qol_WR0_R7 = min( qoi(1 + $I_L1084_558, k), rhmax * $qs1_WR0_R6 )
 1087.             qol(1 + $I_L1084_558, k) = $qol_WR0_R7
 1088.             hol(1 + $I_L1084_558, k) = 1004.6 * $tx1_WR0_R5 + alhl * $qol_WR0_R7
 1089.             eta(1 + $I_L1084_558, k) = 0.0
 1090.             tx2(1 + $I_L1084_558) = 1004.6 * poi(1 + $I_L1084_558, k) * ( prj(1 + $I_L1084_558, 1 + k) + -prj(1 + $I_L1084_558, k) )
 1091.             $I_L1084_558 = 1 + $I_L1084_558
 1084.             if ( $I_L1084_558 >= lenc ) exit
 1084.          enddo
 1084.       endif
 1093.       if ( ic < -1 + k ) then
 1094.          if ( 2 + ic + -k <= 0 ) then
 1095.             if ( lenc > 0 ) then
 1094.                $I_L1094_669 = 0
 1094.                if ( -3 + k + -ic >= 0 ) then
 1094.                   $I_L1094_710 = 0
 1094. !dir$ blocking_size( 1, 1 )
 1094.                   do
 1095.                      $I_L1095_560 = 0
 1095. !dir$ ivdep
 1095. !dir$ blocking_size( 256, 256 )
 1095.                      do
 1096.                         $qs1_WR0_R8 = alf(1 + $I_L1095_560, -1 + k + -2 * $I_L1094_710) + bet(1 + $I_L1095_560, -1 + k + -2 * $I_L1094_710) * poi(1 + $I_L1095_560, -1 + k + -2 * $I_L1094_710)
 1096.                         qs1(1 + $I_L1095_560) = $qs1_WR0_R8
 1097.                         $qol_WR0_R9 = min( qoi(1 + $I_L1095_560, -1 + k + -2 * $I_L1094_710), rhmax * $qs1_WR0_R8 )
 1097.                         qol(1 + $I_L1095_560, -1 + k + -2 * $I_L1094_710) = $qol_WR0_R9
 1098.                         $tem1_S13 = tx2(1 + $I_L1095_560) + 1004.6 * poi(1 + $I_L1095_560, -1 + k + -2 * $I_L1094_710) * prj(1 + $I_L1095_560, k + -2 * $I_L1094_710)
 1099.                         hol(1 + $I_L1095_560, -1 + k + -2 * $I_L1094_710) = $tem1_S13 + alhl * $qol_WR0_R9
 1100.                         hst(1 + $I_L1095_560, -1 + k + -2 * $I_L1094_710) = $tem1_S13 + alhl * $qs1_WR0_R8
 1101.                         $tx1_WR0_R10 = poi(1 + $I_L1095_560, -1 + k + -2 * $I_L1094_710) * ( prj(1 + $I_L1095_560, k + -2 * $I_L1094_710) + -prj(1 + $I_L1095_560, -1 + k + -2 * $I_L1094_710) )
 1101.                         tx1(1 + $I_L1095_560) = $tx1_WR0_R10
 1102.                         eta(1 + $I_L1095_560, -1 + k + -2 * $I_L1094_710) = eta(1 + $I_L1095_560, k + -2 * $I_L1094_710) + 102.51020408163265 * $tx1_WR0_R10
 1096.                         $qs1_WR0_R8 = alf(1 + $I_L1095_560, -2 + k + -2 * $I_L1094_710) + poi(1 + $I_L1095_560, -2 + k + -2 * $I_L1094_710) * bet(1 + $I_L1095_560, -2 + k + -2 * $I_L1094_710)
 1096.                         qs1(1 + $I_L1095_560) = $qs1_WR0_R8
 1097.                         $qol_WR0_R9 = min( qoi(1 + $I_L1095_560, -2 + k + -2 * $I_L1094_710), rhmax * $qs1_WR0_R8 )
 1097.                         qol(1 + $I_L1095_560, -2 + k + -2 * $I_L1094_710) = $qol_WR0_R9
 1103.                         tx2(1 + $I_L1095_560) = tx2(1 + $I_L1095_560) + 1004.6 * $tx1_WR0_R10
 1098.                         $tem1_S13 = tx2(1 + $I_L1095_560) + 1004.6 * prj(1 + $I_L1095_560, -1 + k + -2 * $I_L1094_710) * poi(1 + $I_L1095_560, -2 + k + -2 * $I_L1094_710)
 1099.                         hol(1 + $I_L1095_560, -2 + k + -2 * $I_L1094_710) = $tem1_S13 + alhl * $qol_WR0_R9
 1100.                         hst(1 + $I_L1095_560, -2 + k + -2 * $I_L1094_710) = $tem1_S13 + alhl * $qs1_WR0_R8
 1101.                         $tx1_WR0_R10 = poi(1 + $I_L1095_560, -2 + k + -2 * $I_L1094_710) * ( prj(1 + $I_L1095_560, -1 + k + -2 * $I_L1094_710) + -prj(1 + $I_L1095_560, -2 + k + -2 * $I_L1094_710) )
 1101.                         tx1(1 + $I_L1095_560) = $tx1_WR0_R10
 1102.                         eta(1 + $I_L1095_560, -2 + k + -2 * $I_L1094_710) = eta(1 + $I_L1095_560, -1 + k + -2 * $I_L1094_710) + 102.51020408163265 * $tx1_WR0_R10
 1103.                         tx2(1 + $I_L1095_560) = tx2(1 + $I_L1095_560) + 1004.6 * $tx1_WR0_R10
 1104.                         $I_L1095_560 = 1 + $I_L1095_560
 1095.                         if ( $I_L1095_560 >= lenc ) exit
 1095.                      enddo
 1105.                      $I_L1094_710 = 1 + $I_L1094_710
 1104.                      if ( $I_L1094_710 >= _rsh( -1 + k + -ic, 1 ) ) exit
 1104.                   enddo
 1105.                   $I_L1094_669 = and( 0xfffffffffffffffeUL, -1 + k + -ic )
 1105.                endif
 1094.                if ( $I_L1094_669 < -1 + k + -ic ) then
 1095.                   $I_L1095_560 = 0
 1095. !dir$ ivdep
 1095. !dir$ blocking_size( 256, 256 )
 1095.                   do
 1096.                      $qs1_WR0_R8 = alf(1 + $I_L1095_560, -1 + k + -$I_L1094_669) + poi(1 + $I_L1095_560, -1 + k + -$I_L1094_669) * bet(1 + $I_L1095_560, -1 + k + -$I_L1094_669)
 1096.                      qs1(1 + $I_L1095_560) = $qs1_WR0_R8
 1097.                      $qol_WR0_R9 = min( qoi(1 + $I_L1095_560, -1 + k + -$I_L1094_669), rhmax * $qs1_WR0_R8 )
 1097.                      qol(1 + $I_L1095_560, -1 + k + -$I_L1094_669) = $qol_WR0_R9
 1098.                      $tem1_S13 = tx2(1 + $I_L1095_560) + 1004.6 * poi(1 + $I_L1095_560, -1 + k + -$I_L1094_669) * prj(1 + $I_L1095_560, k + -$I_L1094_669)
 1099.                      hol(1 + $I_L1095_560, -1 + k + -$I_L1094_669) = $tem1_S13 + alhl * $qol_WR0_R9
 1100.                      hst(1 + $I_L1095_560, -1 + k + -$I_L1094_669) = $tem1_S13 + alhl * $qs1_WR0_R8
 1101.                      $tx1_WR0_R10 = poi(1 + $I_L1095_560, -1 + k + -$I_L1094_669) * ( prj(1 + $I_L1095_560, k + -$I_L1094_669) + -prj(1 + $I_L1095_560, -1 + k + -$I_L1094_669) )
 1101.                      tx1(1 + $I_L1095_560) = $tx1_WR0_R10
 1102.                      eta(1 + $I_L1095_560, -1 + k + -$I_L1094_669) = eta(1 + $I_L1095_560, k + -$I_L1094_669) + 102.51020408163265 * $tx1_WR0_R10
 1103.                      tx2(1 + $I_L1095_560) = tx2(1 + $I_L1095_560) + 1004.6 * $tx1_WR0_R10
 1104.                      $I_L1095_560 = 1 + $I_L1095_560
 1095.                      if ( $I_L1095_560 >= lenc ) exit
 1095.                   enddo
 1095.                endif
 1095.             endif
 1095.          endif
 1095.       endif
 1108.       if ( lenc > 0 ) then
 1108.          $I_L1108_562 = 0
 1108. !dir$ ivdep
 1108.          do
 1109.             $hol_WR0_R11 = tx2(1 + $I_L1108_562)
 1110.             $qs1_WR0_R12 = alf(1 + $I_L1108_562, ic) + bet(1 + $I_L1108_562, ic) * poi(1 + $I_L1108_562, ic)
 1110.             qs1(1 + $I_L1108_562) = $qs1_WR0_R12
 1111.             $qol_WR0_R13 = min( qoi(1 + $I_L1108_562, ic), rhmax * $qs1_WR0_R12 )
 1111.             qol(1 + $I_L1108_562, ic) = $qol_WR0_R13
 1112.             $tem1_S15 = $hol_WR0_R11 + 1004.6 * poi(1 + $I_L1108_562, ic) * prj(1 + $I_L1108_562, 1 + ic)
 1113.             hol(1 + $I_L1108_562, ic) = ( $tem1_S15 + alhl * $qol_WR0_R13 )
 1114.             hst(1 + $I_L1108_562, ic) = $tem1_S15 + alhl * $qs1_WR0_R12
 1115.             $tx3_WR0_R14 = poi(1 + $I_L1108_562, ic) * ( prj(1 + $I_L1108_562, 1 + ic) + -prh(1 + $I_L1108_562, ic) )
 1115.             tx3(1 + $I_L1108_562) = $tx3_WR0_R14
 1116.             eta(1 + $I_L1108_562, ic) = eta(1 + $I_L1108_562, 1 + ic) + 102.51020408163265 * $tx3_WR0_R14
 1117.             $I_L1108_562 = 1 + $I_L1108_562
 1108.             if ( $I_L1108_562 >= lenc ) exit
 1108.          enddo
 1119.          $I_L1119_564 = 0
 1119. !dir$ ivdep
 1119.          do
 1120.             tx2(1 + $I_L1119_564) = hol(1 + $I_L1119_564, k) + -hst(1 + $I_L1119_564, ic)
 1121.             tx1(1 + $I_L1119_564) = 0.0
 1122.             $I_L1119_564 = 1 + $I_L1119_564
 1119.             if ( $I_L1119_564 >= lenc ) exit
 1119.          enddo
 1119.       endif
 1126.       if ( k + -ic > 0 ) then
 1127.          if ( lenc > 0 ) then
 1126.             $I_L1126_696 = 0
 1126.             do
 1127.                $I_L1127_694 = 0
 1127.                do
 1126.                   $I_L1126_691 = 0
 1126.                   if ( min( ( k + -ic ), 4 + 4 * $I_L1126_696 ) + -4 * $I_L1126_696 >= 4 ) then
 1126.                      $I_L1126_712 = 0
 1126. !dir$ shortloop16
 1126. !dir$ blocking_size( 4, 4 )
 1126.                      do
 1127.                         $I_L1127_566 = 0
 1127. !dir$ ivdep
 1127. !dir$ blocking_size( 256, 256 )
 1127.                         do
 1128.                            tx1(1 + $I_L1127_566 + 256 * $I_L1127_694) = tx1(1 + $I_L1127_566 + 256 * $I_L1127_694) + ( eta(1 + $I_L1127_566 + 256 * $I_L1127_694, ic + 4 * $I_L1126_696 + 4 * $I_L1126_712) + -eta(1 + $I_L1127_566 + 256 * $I_L1127_694, 1 + ic + 4 * $I_L1126_696 + 4 * $I_L1126_712) ) * ( hst(1 + $I_L1127_566 + 256 * $I_L1127_694, ic) + -hol(1 + $I_L1127_566 + 256 * $I_L1127_694, ic + 4 * $I_L1126_696 + 4 * $I_L1126_712) )
 1128.                            tx1(1 + $I_L1127_566 + 256 * $I_L1127_694) = tx1(1 + $I_L1127_566 + 256 * $I_L1127_694) + ( hst(1 + $I_L1127_566 + 256 * $I_L1127_694, ic) + -hol(1 + $I_L1127_566 + 256 * $I_L1127_694, 1 + ic + 4 * $I_L1126_696 + 4 * $I_L1126_712) ) * ( eta(1 + $I_L1127_566 + 256 * $I_L1127_694, 1 + ic + 4 * $I_L1126_696 + 4 * $I_L1126_712) + -eta(1 + $I_L1127_566 + 256 * $I_L1127_694, 2 + ic + 4 * $I_L1126_696 + 4 * $I_L1126_712) )
 1128.                            tx1(1 + $I_L1127_566 + 256 * $I_L1127_694) = tx1(1 + $I_L1127_566 + 256 * $I_L1127_694) + ( hst(1 + $I_L1127_566 + 256 * $I_L1127_694, ic) + -hol(1 + $I_L1127_566 + 256 * $I_L1127_694, 2 + ic + 4 * $I_L1126_696 + 4 * $I_L1126_712) ) * ( eta(1 + $I_L1127_566 + 256 * $I_L1127_694, 2 + ic + 4 * $I_L1126_696 + 4 * $I_L1126_712) + -eta(1 + $I_L1127_566 + 256 * $I_L1127_694, 3 + ic + 4 * $I_L1126_696 + 4 * $I_L1126_712) )
 1128.                            tx1(1 + $I_L1127_566 + 256 * $I_L1127_694) = tx1(1 + $I_L1127_566 + 256 * $I_L1127_694) + ( hst(1 + $I_L1127_566 + 256 * $I_L1127_694, ic) + -hol(1 + $I_L1127_566 + 256 * $I_L1127_694, 3 + ic + 4 * $I_L1126_696 + 4 * $I_L1126_712) ) * ( eta(1 + $I_L1127_566 + 256 * $I_L1127_694, 3 + ic + 4 * $I_L1126_696 + 4 * $I_L1126_712) + -eta(1 + $I_L1127_566 + 256 * $I_L1127_694, 4 + ic + 4 * $I_L1126_696 + 4 * $I_L1126_712) )
 1127.                            $I_L1127_566 = 1 + $I_L1127_566
 1127.                            if ( $I_L1127_566 >= min( lenc, 256 + 256 * $I_L1127_694 ) + -256 * $I_L1127_694 ) exit
 1127.                         enddo
 1126.                         $I_L1126_712 = 1 + $I_L1126_712
 1126.                         if ( $I_L1126_712 >= _rsh( min( ( k + -ic ), 4 + 4 * $I_L1126_696 ) + -4 * $I_L1126_696, 2 ) ) exit
 1126.                      enddo
 1126.                      $I_L1126_691 = and( 0xfffffffffffffffcUL, min( ( k + -ic ), 4 + 4 * $I_L1126_696 ) + -4 * $I_L1126_696 )
 1126.                   endif
 1126.                   if ( $I_L1126_691 < min( ( k + -ic ), 4 + 4 * $I_L1126_696 ) + -4 * $I_L1126_696 ) then
 1126.                      $I_L1126_707 = 0
 1126. !dir$ shortloop16
 1126. !dir$ blocking_size( 4, 4 )
 1126.                      do
 1127.                         $I_L1127_566 = 0
 1127. !dir$ ivdep
 1127. !dir$ blocking_size( 256, 256 )
 1127.                         do
 1128.                            tx1(1 + $I_L1127_566 + 256 * $I_L1127_694) = tx1(1 + $I_L1127_566 + 256 * $I_L1127_694) + ( hst(1 + $I_L1127_566 + 256 * $I_L1127_694, ic) + -hol(1 + $I_L1127_566 + 256 * $I_L1127_694, ic + $I_L1126_691 + $I_L1126_707 + 4 * $I_L1126_696) ) * ( eta(1 + $I_L1127_566 + 256 * $I_L1127_694, ic + $I_L1126_691 + $I_L1126_707 + 4 * $I_L1126_696) + -eta(1 + $I_L1127_566 + 256 * $I_L1127_694, 1 + ic + $I_L1126_691 + $I_L1126_707 + 4 * $I_L1126_696) )
 1127.                            $I_L1127_566 = 1 + $I_L1127_566
 1127.                            if ( $I_L1127_566 >= min( lenc, 256 + 256 * $I_L1127_694 ) + -256 * $I_L1127_694 ) exit
 1127.                         enddo
 1126.                         $I_L1126_707 = 1 + $I_L1126_707
 1126.                         if ( $I_L1126_707 >= min( ( k + -ic ), 4 + 4 * $I_L1126_696 ) + -$I_L1126_691 + -4 * $I_L1126_696 ) exit
 1126.                      enddo
 1126.                   endif
 1127.                   $I_L1127_694 = 1 + $I_L1127_694
 1130.                   if ( $I_L1127_694 >= 1 + max( 0, -1 + _rsh( 255 + lenc, 8 ) ) ) exit
 1130.                enddo
 1126.                $I_L1126_696 = 1 + $I_L1126_696
 1126.                if ( $I_L1126_696 >= 1 + max( 0, -1 + _rsh( 3 + k + -ic, 2 ) ) ) exit
 1126.             enddo
 1126.          endif
 1126.       endif
 1133.       $len1_S20 = 0
 1137.       if ( lenc > 0 ) then
 1137.          $I_L1137_569 = 0
 1137. !dir$ ivdep
 1137.          do
 1138.             if ( tx1(1 + $I_L1137_569) > 0.0 ) then
 1138.                if ( tx2(1 + $I_L1137_569) > 0.0 ) then
 1139.                   $len1_S20 = 1 + $len1_S20
 1140.                   ia($len1_S20) = ( 1 + $I_L1137_569 )
 1141.                   alm($len1_S20) = ( tx2(1 + $I_L1137_569) * 1.0/tx1(1 + $I_L1137_569) )
 1141.                endif
 1141.             endif
 1143.             $I_L1137_569 = 1 + $I_L1137_569
 1142.             if ( $I_L1137_569 >= lenc ) exit
 1142.          enddo
 1142.       endif
 1145.       $len2_S22 = $len1_S20
 1147.       if ( 1 + ic < k ) then
 1148.          if ( lenc > 0 ) then
 1148.             $I_L1148_571 = 0
 1148. !dir$ ivdep
 1148.             do
 1149.                if ( tx2(1 + $I_L1148_571) <= 0.0 ) then
 1149.                   if ( hol(1 + $I_L1148_571, k) > hst(1 + $I_L1148_571, 1 + ic) ) then
 1150.                      $len2_S22 = 1 + $len2_S22
 1151.                      ia($len2_S22) = ( 1 + $I_L1148_571 )
 1152.                      alm($len2_S22) = 0.0
 1152.                   endif
 1152.                endif
 1154.                $I_L1148_571 = 1 + $I_L1148_571
 1153.                if ( $I_L1148_571 >= lenc ) exit
 1153.             enddo
 1153.          endif
 1153.       endif
 1157.       if ( $len2_S22 == 0 ) then
 1158.          if ( k * lenc > 0 ) then
 1158.             $I_L1158_573 = 0
 1158. !dir$ ivdep
 1158.             do
 1159.                hst(1 + $I_L1158_573, 1) = 0.0
 1160.                qol(1 + $I_L1158_573, 1) = 0.0
 1161.                $I_L1158_573 = 1 + $I_L1158_573
 1158.                if ( $I_L1158_573 >= ( k * lenc ) ) exit
 1158.             enddo
 1158.          endif
 1162.          if ( lenc > 0 ) then
 1162.             $I_L1162_575 = 0
 1162. !dir$ ivdep
 1162.             do
 1163.                pcu(1 + $I_L1162_575) = 0.0
 1164.                $I_L1162_575 = 1 + $I_L1162_575
 1162.                if ( $I_L1162_575 >= lenc ) exit
 1162.             enddo
 1162.          endif
 1162.       else
 1171.          if ( $len2_S22 > 0 ) then
 1171.             $I_L1171_577 = 0
 1171. !dir$ ivdep
 1171.             do
 1172.                eta(1 + $I_L1171_577, k) = 1.0
 1173.                $ii_S26 = ia(1 + $I_L1171_577)
 1174.                tx2(1 + $I_L1171_577) = 5.0e-1 * ( prs($ii_S26, 1 + ic) + prs($ii_S26, ic) )
 1175.                tx4(1 + $I_L1171_577) = prs($ii_S26, k)
 1176.                $I_L1171_577 = 1 + $I_L1171_577
 1171.                if ( $I_L1171_577 >= $len2_S22 ) exit
 1171.             enddo
 1171.          endif
 1178.          if ( $len2_S22 + -$len1_S20 > 0 ) then
 1178.             $I_L1178_579 = 0
 1178. !dir$ ivdep
 1178.             do
 1179.                wfn(1 + $len1_S20 + $I_L1178_579) = 0.0
 1180.                $ii_S28 = ia(1 + $len1_S20 + $I_L1178_579)
 1181.                if ( hst($ii_S28, 1 + ic) < hst($ii_S28, ic) ) then
 1182.                   tx6(1 + $len1_S20 + $I_L1178_579) = ( 1.0/( hst($ii_S28, 1 + ic) + -hst($ii_S28, ic) ) * ( hst($ii_S28, 1 + ic) + -hol($ii_S28, k) ) )
 1182.                else
 1184.                   tx6(1 + $len1_S20 + $I_L1178_579) = 0.0
 1184.                endif
 1186.                tx2(1 + $len1_S20 + $I_L1178_579) = 5.0e-1 * ( prs($ii_S28, 2 + ic) + prs($ii_S28, 1 + ic) ) * ( 1.0 + -tx6(1 + $len1_S20 + $I_L1178_579) ) + tx6(1 + $len1_S20 + $I_L1178_579) * tx2(1 + $len1_S20 + $I_L1178_579)
 1188.                $I_L1178_579 = 1 + $I_L1178_579
 1185.                if ( $I_L1178_579 >= ( $len2_S22 + -$len1_S20 ) ) exit
 1185.             enddo
 1185.          endif
 1190.          t$2 = $len2_S22
 1190.          t$30 = max( 0, $len2_S22 )
 1190.          if ( $len2_S22 > 0 ) then
 1190.             $SC_aa_I0 = aa(15)
 1190.             $I_L1190_581 = 0
 1190. !dir$ ivdep
 1190.             do
 1190.                $iwk_S30 = int( ( -9.9999999900000003e-1 + 2.0e-2 * tx2(1 + $I_L1190_581) ) )
 1190.                if ( int( ( -9.9999999900000003e-1 + 2.0e-2 * tx2(1 + $I_L1190_581) ) ) <= 1 ) then
 1190.                   tx3(1 + $I_L1190_581) = actop
 1190.                else if ( $iwk_S30 <= 15 ) then
 1190.                   tx3(1 + $I_L1190_581) = ac($iwk_S30) + ad($iwk_S30) * tx2(1 + $I_L1190_581)
 1190.                else
 1190.                   tx3(1 + $I_L1190_581) = $SC_aa_I0
 1190.                endif
 1190.                tx3(1 + $I_L1190_581) = tx3(1 + $I_L1190_581) * ( tx4(1 + $I_L1190_581) + -tx2(1 + $I_L1190_581) )
 1190.                $I_L1190_581 = 1 + $I_L1190_581
 1190.                if ( $I_L1190_581 >= $len2_S22 ) exit
 1190.             enddo
 1190.          endif
 1192.          if ( ic + -k < 0 ) then
 1193.             if ( $len2_S22 > 0 ) then
 1192.                $I_L1192_671 = 0
 1192.                do
 1193.                   $I_L1193_583 = 0
 1193. !dir$ ivdep
 1193.                   do
 1194.                      tx1(1 + $I_L1193_583) = eta(ia(1 + $I_L1193_583), -1 + k + -$I_L1192_671)
 1195.                      $I_L1193_583 = 1 + $I_L1193_583
 1193.                      if ( $I_L1193_583 >= $len2_S22 ) exit
 1193.                   enddo
 1197.                   $I_L1197_585 = 0
 1197. !dir$ ivdep
 1197.                   do
 1198.                      eta(1 + $I_L1197_585, -1 + k + -$I_L1192_671) = 1.0 + tx1(1 + $I_L1197_585) * alm(1 + $I_L1197_585)
 1199.                      $I_L1197_585 = 1 + $I_L1197_585
 1197.                      if ( $I_L1197_585 >= $len2_S22 ) exit
 1197.                   enddo
 1200.                   $I_L1192_671 = 1 + $I_L1192_671
 1199.                   if ( $I_L1192_671 >= ( k + -ic ) ) exit
 1199.                enddo
 1199.             endif
 1199.          endif
 1204.          if ( $len1_S20 > 0 ) then
 1205.             $I_L1205_587 = 0
 1205. !dir$ ivdep
 1205.             do
 1206.                $ii_S35 = ia(1 + $I_L1205_587)
 1207.                wfn(1 + $I_L1205_587) = -( eta(1 + $I_L1205_587, 1 + ic) * gam($ii_S35, ic) * hst($ii_S35, ic) * ( prj($ii_S35, 1 + ic) + -prh($ii_S35, ic) ) )
 1209.                $I_L1205_587 = 1 + $I_L1205_587
 1205.                if ( $I_L1205_587 >= $len1_S20 ) exit
 1205.             enddo
 1205.          endif
 1212.          if ( $len2_S22 > 0 ) then
 1212.             $I_L1212_589 = 0
 1212. !dir$ ivdep
 1212.             do
 1213.                $ii_S37 = ia(1 + $I_L1212_589)
 1214.                tx1(1 + $I_L1212_589) = hol($ii_S37, k)
 1215.                $I_L1212_589 = 1 + $I_L1212_589
 1212.                if ( $I_L1212_589 >= $len2_S22 ) exit
 1212.             enddo
 1212.          endif
 1217.          if ( 1 + ic <= -1 + k ) then
 1218.             if ( 2 + ic + -k <= 0 ) then
 1219.                if ( $len2_S22 > 0 ) then
 1218.                   $I_L1218_673 = 0
 1218. !dir$ blocking_size( 1, 1 )
 1218.                   do
 1219.                      $I_L1219_591 = 0
 1219. !dir$ ivdep
 1219. !dir$ blocking_size( 256, 256 )
 1219.                      do
 1220.                         $ii_S40 = ia(1 + $I_L1219_591)
 1221.                         $tem_S41 = tx1(1 + $I_L1219_591) + hol($ii_S40, -1 + k + -$I_L1218_673) * ( eta(1 + $I_L1219_591, -1 + k + -$I_L1218_673) + -eta(1 + $I_L1219_591, k + -$I_L1218_673) )
 1222.                         $pcu_WR0_R16 = prj($ii_S40, k + -$I_L1218_673) + -prh($ii_S40, -1 + k + -$I_L1218_673)
 1223.                         $tem1_S42 = $pcu_WR0_R16 * eta(1 + $I_L1219_591, k + -$I_L1218_673)
 1224.                         $tx1_WR0_R15 = $pcu_WR0_R16 * tx1(1 + $I_L1219_591)
 1224.                         tx1(1 + $I_L1219_591) = $tx1_WR0_R15
 1225.                         $pcu_WR0_R16 = prh($ii_S40, -1 + k + -$I_L1218_673) + -prj($ii_S40, -1 + k + -$I_L1218_673)
 1225.                         pcu(1 + $I_L1219_591) = $pcu_WR0_R16
 1226.                         $tem1_S43 = hst($ii_S40, -1 + k + -$I_L1218_673) * ( $tem1_S42 + $pcu_WR0_R16 * eta(1 + $I_L1219_591, -1 + k + -$I_L1218_673) )
 1227.                         $tx1_WR0_R15 = $tx1_WR0_R15 + $tem_S41 * $pcu_WR0_R16
 1227.                         tx1(1 + $I_L1219_591) = $tx1_WR0_R15
 1229.                         tx1(1 + $I_L1219_591) = $tem_S41
 1228.                         wfn(1 + $I_L1219_591) = wfn(1 + $I_L1219_591) + gam($ii_S40, -1 + k + -$I_L1218_673) * ( $tx1_WR0_R15 + -$tem1_S43 )
 1230.                         $I_L1219_591 = 1 + $I_L1219_591
 1219.                         if ( $I_L1219_591 >= $len2_S22 ) exit
 1219.                      enddo
 1231.                      $I_L1218_673 = 1 + $I_L1218_673
 1230.                      if ( $I_L1218_673 >= -1 + k + -ic ) exit
 1230.                   enddo
 1230.                endif
 1230.             endif
 1230.          endif
 1233.          $lena_S46 = 0
 1234.          if ( $len1_S20 > 0 ) then
 1236.             $I_L1236_593 = 0
 1236. !dir$ ivdep
 1236.             do
 1237.                $ii_S45 = ia(1 + $I_L1236_593)
 1238.                $wfn_WR0_R17 = wfn(1 + $I_L1236_593) + -tx3(1 + $I_L1236_593) + tx1(1 + $I_L1236_593) * gam($ii_S45, ic) * ( prj($ii_S45, 1 + ic) + -prh($ii_S45, ic) )
 1238.                wfn(1 + $I_L1236_593) = $wfn_WR0_R17
 1240.                if ( $wfn_WR0_R17 > 0.0 ) then
 1241.                   $lena_S46 = 1 + $lena_S46
 1242.                   i1($lena_S46) = $ii_S45
 1243.                   i2($lena_S46) = ( 1 + $I_L1236_593 )
 1244.                   tx1($lena_S46) = $wfn_WR0_R17
 1245.                   tx2($lena_S46) = qs1($ii_S45)
 1246.                   tx6($lena_S46) = 1.0
 1246.                endif
 1248.                $I_L1236_593 = 1 + $I_L1236_593
 1247.                if ( $I_L1236_593 >= $len1_S20 ) exit
 1247.             enddo
 1247.          endif
 1250.          $lenb_S48 = $lena_S46
 1251.          if ( $len2_S22 + -$len1_S20 > 0 ) then
 1251.             $I_L1251_595 = 0
 1251. !dir$ ivdep
 1251.             do
 1252.                $wfn_WR0_R18 = wfn(1 + $len1_S20 + $I_L1251_595) + -tx3(1 + $len1_S20 + $I_L1251_595)
 1252.                wfn(1 + $len1_S20 + $I_L1251_595) = $wfn_WR0_R18
 1253.                if ( $wfn_WR0_R18 > 0.0 ) then
 1253.                   if ( tx6(1 + $len1_S20 + $I_L1251_595) > 0.0 ) then
 1254.                      $lenb_S48 = 1 + $lenb_S48
 1255.                      i1($lenb_S48) = ia(1 + $len1_S20 + $I_L1251_595)
 1256.                      i2($lenb_S48) = ( 1 + $len1_S20 + $I_L1251_595 )
 1257.                      tx1($lenb_S48) = $wfn_WR0_R18
 1258.                      tx2($lenb_S48) = qs1(ia(1 + $len1_S20 + $I_L1251_595))
 1259.                      tx4($lenb_S48) = tx6(1 + $len1_S20 + $I_L1251_595)
 1259.                   endif
 1259.                endif
 1261.                $I_L1251_595 = 1 + $I_L1251_595
 1260.                if ( $I_L1251_595 >= ( $len2_S22 + -$len1_S20 ) ) exit
 1260.             enddo
 1260.          endif
 1262.          if ( $lenb_S48 <= 0 ) then
 1263.             if ( k * lenc > 0 ) then
 1263.                $I_L1263_597 = 0
 1263. !dir$ ivdep
 1263.                do
 1264.                   hst(1 + $I_L1263_597, 1) = 0.0
 1265.                   qol(1 + $I_L1263_597, 1) = 0.0
 1266.                   $I_L1263_597 = 1 + $I_L1263_597
 1263.                   if ( $I_L1263_597 >= ( k * lenc ) ) exit
 1263.                enddo
 1263.             endif
 1267.             if ( lenc > 0 ) then
 1267.                $I_L1267_599 = 0
 1267. !dir$ ivdep
 1267.                do
 1268.                   pcu(1 + $I_L1267_599) = 0.0
 1269.                   $I_L1267_599 = 1 + $I_L1267_599
 1267.                   if ( $I_L1267_599 >= lenc ) exit
 1267.                enddo
 1267.             endif
 1267.          else
 1272.             $I_L1272_601 = 0
 1272. !dir$ ivdep
 1272.             do
 1273.                wfn(1 + $I_L1272_601) = tx1(1 + $I_L1272_601)
 1274.                qs1(1 + $I_L1272_601) = tx2(1 + $I_L1272_601)
 1275.                $I_L1272_601 = 1 + $I_L1272_601
 1272.                if ( $I_L1272_601 >= $lenb_S48 ) exit
 1272.             enddo
 1276.             if ( k + -ic >= 0 ) then
 1276.                $I_L1276_675 = 0
 1276.                do
 1277.                   $I_L1277_603 = 0
 1277. !dir$ ivdep
 1277.                   do
 1278.                      tx1(1 + $I_L1277_603) = eta(i2(1 + $I_L1277_603), ic + $I_L1276_675)
 1279.                      $I_L1277_603 = 1 + $I_L1277_603
 1277.                      if ( $I_L1277_603 >= $lenb_S48 ) exit
 1277.                   enddo
 1280.                   $I_L1280_605 = 0
 1280. !dir$ ivdep
 1280.                   do
 1281.                      eta(1 + $I_L1280_605, ic + $I_L1276_675) = tx1(1 + $I_L1280_605)
 1282.                      $I_L1280_605 = 1 + $I_L1280_605
 1280.                      if ( $I_L1280_605 >= $lenb_S48 ) exit
 1280.                   enddo
 1283.                   $I_L1276_675 = 1 + $I_L1276_675
 1282.                   if ( $I_L1276_675 >= 1 + k + -ic ) exit
 1282.                enddo
 1282.             endif
 1285.             if ( $lena_S46 > 0 ) then
 1285.                $I_L1285_607 = 0
 1285. !dir$ ivdep
 1285.                do
 1286.                   $ii_S56 = i1(1 + $I_L1285_607)
 1287.                   tx8(1 + $I_L1285_607) = hst($ii_S56, ic) + -hol($ii_S56, ic)
 1288.                   $I_L1285_607 = 1 + $I_L1285_607
 1285.                   if ( $I_L1285_607 >= $lena_S46 ) exit
 1285.                enddo
 1285.             endif
 1289.             if ( $lenb_S48 + -$lena_S46 > 0 ) then
 1289.                $I_L1289_609 = 0
 1289. !dir$ ivdep
 1289.                do
 1290.                   $ii_S58 = i1(1 + $lena_S46 + $I_L1289_609)
 1291.                   $tx6_WR0_R19 = tx4(1 + $lena_S46 + $I_L1289_609)
 1291.                   tx6(1 + $lena_S46 + $I_L1289_609) = $tx6_WR0_R19
 1292.                   $tem_S59 = hol($ii_S58, 1 + ic) + $tx6_WR0_R19 * ( hol($ii_S58, ic) + -hol($ii_S58, 1 + ic) )
 1293.                   $tx8_WR0_R20 = hol($ii_S58, k) + -$tem_S59
 1293.                   tx8(1 + $lena_S46 + $I_L1289_609) = $tx8_WR0_R20
 1294.                   $tem1_S60 = qol($ii_S58, 1 + ic) + $tx6_WR0_R19 * ( qol($ii_S58, ic) + -qol($ii_S58, 1 + ic) )
 1295.                   tx5(1 + $lena_S46 + $I_L1289_609) = $tem_S59 + -( alhl * $tem1_S60 )
 1296.                   qs1(1 + $lena_S46 + $I_L1289_609) = $tem1_S60 + $tx8_WR0_R20 * 1.0/alhl
 1297.                   tx3(1 + $lena_S46 + $I_L1289_609) = hol($ii_S58, ic)
 1298.                   $I_L1289_609 = 1 + $I_L1289_609
 1289.                   if ( $I_L1289_609 >= ( $lenb_S48 + -$lena_S46 ) ) exit
 1289.                enddo
 1289.             endif
 1299.             $I_L1299_611 = 0
 1299. !dir$ ivdep
 1299.             do
 1300.                $ii_S62 = i1(1 + $I_L1299_611)
 1301.                wlq(1 + $I_L1299_611) = qol($ii_S62, k) + -( qs1(1 + $I_L1299_611) * eta(1 + $I_L1299_611, ic) )
 1302.                uht(1 + $I_L1299_611) = uoi($ii_S62, k) + -( uoi($ii_S62, ic) * eta(1 + $I_L1299_611, ic) )
 1303.                vht(1 + $I_L1299_611) = voi($ii_S62, k) + -( voi($ii_S62, ic) * eta(1 + $I_L1299_611, ic) )
 1304.                tx7(1 + $I_L1299_611) = hol($ii_S62, k)
 1305.                $I_L1299_611 = 1 + $I_L1299_611
 1299.                if ( $I_L1299_611 >= $lenb_S48 ) exit
 1299.             enddo
 1306.             if ( ic + -k < 0 ) then
 1306.                $I_L1306_677 = 0
 1306.                if ( ( k + -ic ) >= 4 ) then
 1306.                   $I_L1306_714 = 0
 1306. !dir$ blocking_size( 1, 1 )
 1306.                   do
 1307.                      $I_L1307_613 = 0
 1307. !dir$ ivdep
 1307. !dir$ blocking_size( 256, 256 )
 1307.                      do
 1308.                         $ii_S65 = i1(1 + $I_L1307_613)
 1309.                         $tem_S66 = eta(1 + $I_L1307_613, -1 + k + -4 * $I_L1306_714) + -eta(1 + $I_L1307_613, k + -4 * $I_L1306_714)
 1312.                         vht(1 + $I_L1307_613) = vht(1 + $I_L1307_613) + $tem_S66 * voi($ii_S65, -1 + k + -4 * $I_L1306_714)
 1311.                         uht(1 + $I_L1307_613) = uht(1 + $I_L1307_613) + $tem_S66 * uoi($ii_S65, -1 + k + -4 * $I_L1306_714)
 1310.                         wlq(1 + $I_L1307_613) = wlq(1 + $I_L1307_613) + $tem_S66 * qol($ii_S65, -1 + k + -4 * $I_L1306_714)
 1308.                         $ii_S65 = i1(1 + $I_L1307_613)
 1309.                         $tem_S66 = eta(1 + $I_L1307_613, -2 + k + -4 * $I_L1306_714) + -eta(1 + $I_L1307_613, -1 + k + -4 * $I_L1306_714)
 1312.                         vht(1 + $I_L1307_613) = vht(1 + $I_L1307_613) + $tem_S66 * voi($ii_S65, -2 + k + -4 * $I_L1306_714)
 1311.                         uht(1 + $I_L1307_613) = uht(1 + $I_L1307_613) + $tem_S66 * uoi($ii_S65, -2 + k + -4 * $I_L1306_714)
 1310.                         wlq(1 + $I_L1307_613) = wlq(1 + $I_L1307_613) + $tem_S66 * qol($ii_S65, -2 + k + -4 * $I_L1306_714)
 1308.                         $ii_S65 = i1(1 + $I_L1307_613)
 1309.                         $tem_S66 = eta(1 + $I_L1307_613, -3 + k + -4 * $I_L1306_714) + -eta(1 + $I_L1307_613, -2 + k + -4 * $I_L1306_714)
 1312.                         vht(1 + $I_L1307_613) = vht(1 + $I_L1307_613) + $tem_S66 * voi($ii_S65, -3 + k + -4 * $I_L1306_714)
 1311.                         uht(1 + $I_L1307_613) = uht(1 + $I_L1307_613) + $tem_S66 * uoi($ii_S65, -3 + k + -4 * $I_L1306_714)
 1310.                         wlq(1 + $I_L1307_613) = wlq(1 + $I_L1307_613) + $tem_S66 * qol($ii_S65, -3 + k + -4 * $I_L1306_714)
 1308.                         $ii_S65 = i1(1 + $I_L1307_613)
 1309.                         $tem_S66 = eta(1 + $I_L1307_613, -4 + k + -4 * $I_L1306_714) + -eta(1 + $I_L1307_613, -3 + k + -4 * $I_L1306_714)
 1312.                         vht(1 + $I_L1307_613) = vht(1 + $I_L1307_613) + $tem_S66 * voi($ii_S65, -4 + k + -4 * $I_L1306_714)
 1311.                         uht(1 + $I_L1307_613) = uht(1 + $I_L1307_613) + $tem_S66 * uoi($ii_S65, -4 + k + -4 * $I_L1306_714)
 1310.                         wlq(1 + $I_L1307_613) = wlq(1 + $I_L1307_613) + $tem_S66 * qol($ii_S65, -4 + k + -4 * $I_L1306_714)
 1313.                         $I_L1307_613 = 1 + $I_L1307_613
 1307.                         if ( $I_L1307_613 >= $lenb_S48 ) exit
 1307.                      enddo
 1314.                      $I_L1306_714 = 1 + $I_L1306_714
 1313.                      if ( $I_L1306_714 >= _rsh( ( k + -ic ), 2 ) ) exit
 1313.                   enddo
 1314.                   $I_L1306_677 = and( 0xfffffffffffffffcUL, ( k + -ic ) )
 1314.                endif
 1306.                if ( $I_L1306_677 < ( k + -ic ) ) then
 1306.                   $I_L1306_698 = 0
 1306. !dir$ blocking_size( 1, 1 )
 1306.                   do
 1307.                      $I_L1307_613 = 0
 1307. !dir$ ivdep
 1307. !dir$ blocking_size( 256, 256 )
 1307.                      do
 1308.                         $ii_S65 = i1(1 + $I_L1307_613)
 1309.                         $tem_S66 = eta(1 + $I_L1307_613, -1 + k + -$I_L1306_677 + -$I_L1306_698) + -eta(1 + $I_L1307_613, k + -$I_L1306_677 + -$I_L1306_698)
 1312.                         vht(1 + $I_L1307_613) = vht(1 + $I_L1307_613) + $tem_S66 * voi($ii_S65, -1 + k + -$I_L1306_677 + -$I_L1306_698)
 1311.                         uht(1 + $I_L1307_613) = uht(1 + $I_L1307_613) + $tem_S66 * uoi($ii_S65, -1 + k + -$I_L1306_677 + -$I_L1306_698)
 1310.                         wlq(1 + $I_L1307_613) = wlq(1 + $I_L1307_613) + $tem_S66 * qol($ii_S65, -1 + k + -$I_L1306_677 + -$I_L1306_698)
 1313.                         $I_L1307_613 = 1 + $I_L1307_613
 1307.                         if ( $I_L1307_613 >= $lenb_S48 ) exit
 1307.                      enddo
 1314.                      $I_L1306_698 = 1 + $I_L1306_698
 1313.                      if ( $I_L1306_698 >= k + -ic + -$I_L1306_677 ) exit
 1313.                   enddo
 1313.                endif
 1313.             endif
 1318.             $I_L1318_615 = 0
 1318. !dir$ ivdep
 1318.             do
 1319.                $ii_S68 = i1(1 + $I_L1318_615)
 1320.                $tem_S69 = ( 1.0/( prh($ii_S68, k) + -prh($ii_S68, -1 + k) ) * ( poi($ii_S68, -1 + k) + -poi($ii_S68, k) ) )
 1322.                hol(1 + $I_L1318_615, k) = $tem_S69 * prh($ii_S68, k) * pri($ii_S68, k) * ( prj($ii_S68, k) + -prh($ii_S68, -1 + k) )
 1323.                hol(1 + $I_L1318_615, -1 + k) = $tem_S69 * pri($ii_S68, -1 + k) * prh($ii_S68, -1 + k) * ( prh($ii_S68, k) + -prj($ii_S68, k) )
 1324.                akm(1 + $I_L1318_615) = 0.0
 1325.                tx2(1 + $I_L1318_615) = 5.0e-1 * ( prs($ii_S68, 1 + ic) + prs($ii_S68, ic) )
 1326.                $I_L1318_615 = 1 + $I_L1318_615
 1318.                if ( $I_L1318_615 >= $lenb_S48 ) exit
 1318.             enddo
 1328.             if ( 1 + ic <= -1 + k ) then
 1329.                if ( 2 + ic + -k <= 0 ) then
 1329.                   $I_L1329_679 = 0
 1329. !dir$ blocking_size( 1, 1 )
 1329.                   do
 1330.                      $I_L1330_617 = 0
 1330. !dir$ ivdep
 1330. !dir$ blocking_size( 256, 256 )
 1330.                      do
 1331.                         $ii_S71 = i1(1 + $I_L1330_617)
 1332.                         $tem_S73 = ( eta(1 + $I_L1330_617, -1 + k + -$I_L1329_679) * 1.0/( prh($ii_S71, -1 + k + -$I_L1329_679) + -prh($ii_S71, -2 + k + -$I_L1329_679) ) * ( poi($ii_S71, -2 + k + -$I_L1329_679) + -poi($ii_S71, -1 + k + -$I_L1329_679) ) )
 1334.                         hol(1 + $I_L1330_617, -1 + k + -$I_L1329_679) = hol(1 + $I_L1330_617, -1 + k + -$I_L1329_679) + $tem_S73 * prh($ii_S71, -1 + k + -$I_L1329_679) * pri($ii_S71, -1 + k + -$I_L1329_679) * ( prj($ii_S71, -1 + k + -$I_L1329_679) + -prh($ii_S71, -2 + k + -$I_L1329_679) )
 1336.                         hol(1 + $I_L1330_617, -2 + k + -$I_L1329_679) = $tem_S73 * prh($ii_S71, -2 + k + -$I_L1329_679) * pri($ii_S71, -2 + k + -$I_L1329_679) * ( prh($ii_S71, -1 + k + -$I_L1329_679) + -prj($ii_S71, -1 + k + -$I_L1329_679) )
 1338.                         akm(1 + $I_L1330_617) = akm(1 + $I_L1330_617) + -( hol(1 + $I_L1330_617, -1 + k + -$I_L1329_679) * ( eta(1 + $I_L1330_617, k + -$I_L1329_679) * ( prj($ii_S71, k + -$I_L1329_679) + -prh($ii_S71, -1 + k + -$I_L1329_679) ) + eta(1 + $I_L1330_617, -1 + k + -$I_L1329_679) * ( prh($ii_S71, -1 + k + -$I_L1329_679) + -prj($ii_S71, -1 + k + -$I_L1329_679) ) ) * 1.0/prh($ii_S71, -1 + k + -$I_L1329_679) )
 1341.                         $I_L1330_617 = 1 + $I_L1330_617
 1330.                         if ( $I_L1330_617 >= $lenb_S48 ) exit
 1330.                      enddo
 1342.                      $I_L1329_679 = 1 + $I_L1329_679
 1341.                      if ( $I_L1329_679 >= -1 + k + -ic ) exit
 1341.                   enddo
 1341.                endif
 1341.             endif
 1345.             t$3 = $lenb_S48
 1345.             t$31 = max( 0, $lenb_S48 )
 1345.             $I_L1345_619 = 0
 1345. !dir$ ivdep
 1345.             do
 1345.                tx1(1 + $I_L1345_619) = 1.0
 1345.                clf(1 + $I_L1345_619) = 5.0e-1
 1345.                if ( tx2(1 + $I_L1345_619) < 500.0 ) then
 1345.                   goto 10
 1345.                else if ( tx2(1 + $I_L1345_619) <= 800.0 ) then
 1345.                   tx1(1 + $I_L1345_619) = 8.0000000000000004e-1 + 6.6666666666666675e-4 * ( 800.0 + -tx2(1 + $I_L1345_619) )
 1345.                else
 1345.    10             continue
 1345.                   if ( tx2(1 + $I_L1345_619) > 800.0 ) then
 1345.                      tx1(1 + $I_L1345_619) = 8.0000000000000004e-1
 1345.                   endif
 1345.                endif
 1345.                $I_L1345_619 = 1 + $I_L1345_619
 1345.                if ( $I_L1345_619 >= $lenb_S48 ) exit
 1345.             enddo
 1347.             $I_L1347_621 = 0
 1347. !dir$ ivdep
 1347.             do
 1348.                tx2(1 + $I_L1347_621) = wlq(1 + $I_L1347_621) * ( 1.0 + -tx1(1 + $I_L1347_621) )
 1349.                wlq(1 + $I_L1347_621) = tx1(1 + $I_L1347_621) * wlq(1 + $I_L1347_621)
 1350.                tx1(1 + $I_L1347_621) = hol(1 + $I_L1347_621, ic)
 1351.                $I_L1347_621 = 1 + $I_L1347_621
 1347.                if ( $I_L1347_621 >= $lenb_S48 ) exit
 1347.             enddo
 1353.             if ( $lenb_S48 + -$lena_S46 > 0 ) then
 1353.                $I_L1353_623 = 0
 1353. !dir$ ivdep
 1353.                do
 1354.                   $ii_S77 = i1(1 + $lena_S46 + $I_L1353_623)
 1355.                   tx1(1 + $lena_S46 + $I_L1353_623) = tx1(1 + $lena_S46 + $I_L1353_623) + ( 9.9542106310969544e-4 * pri($ii_S77, ic) ) * ( tx5(1 + $lena_S46 + $I_L1353_623) + -tx3(1 + $lena_S46 + $I_L1353_623) + alhl * qol($ii_S77, ic) )
 1357.                   $I_L1353_623 = 1 + $I_L1353_623
 1353.                   if ( $I_L1353_623 >= ( $lenb_S48 + -$lena_S46 ) ) exit
 1353.                enddo
 1353.             endif
 1359.             $I_L1359_625 = 0
 1359. !dir$ ivdep
 1359.             do
 1360.                hol(1 + $I_L1359_625, ic) = tx1(1 + $I_L1359_625) + -( $albcp_S7 * tx2(1 + $I_L1359_625) * pri(i1(1 + $I_L1359_625), ic) )
 1361.                $I_L1359_625 = 1 + $I_L1359_625
 1359.                if ( $I_L1359_625 >= $lenb_S48 ) exit
 1359.             enddo
 1363.             if ( $lena_S46 > 0 ) then
 1364.                $I_L1364_627 = 0
 1364. !dir$ ivdep
 1364.                do
 1365.                   $ii_S80 = i1(1 + $I_L1364_627)
 1366.                   akm(1 + $I_L1364_627) = akm(1 + $I_L1364_627) + -( eta(1 + $I_L1364_627, 1 + ic) * tx1(1 + $I_L1364_627) * 1.0/prh($ii_S80, ic) * ( prj($ii_S80, 1 + ic) + -prh($ii_S80, ic) ) )
 1368.                   $I_L1364_627 = 1 + $I_L1364_627
 1364.                   if ( $I_L1364_627 >= $lena_S46 ) exit
 1364.                enddo
 1364.             endif
 1373.             $I_L1373_629 = 0
 1373. !dir$ ivdep
 1373.             do
 1374.                $ii_S82 = i1(1 + $I_L1373_629)
 1375.                $tx3_WR0_R21 = qol($ii_S82, -1 + k) + -qol($ii_S82, k)
 1375.                tx3(1 + $I_L1373_629) = $tx3_WR0_R21
 1376.                $gmh_WR0_R22 = hol(1 + $I_L1373_629, k) + $tx3_WR0_R21 * pri($ii_S82, k) * ( 5.0e-1 * $albcp_S7 )
 1376.                gmh(1 + $I_L1373_629, k) = $gmh_WR0_R22
 1377.                akm(1 + $I_L1373_629) = akm(1 + $I_L1373_629) + $gmh_WR0_R22 * gam($ii_S82, -1 + k) * ( prj($ii_S82, k) + -prh($ii_S82, -1 + k) )
 1379.                $I_L1373_629 = 1 + $I_L1373_629
 1373.                if ( $I_L1373_629 >= $lenb_S48 ) exit
 1373.             enddo
 1381.             if ( 1 + ic <= -1 + k ) then
 1382.                if ( 2 + ic + -k <= 0 ) then
 1382.                   $I_L1382_681 = 0
 1382.                   if ( -5 + k + -ic >= 0 ) then
 1382.                      $I_L1382_716 = 0
 1382. !dir$ blocking_size( 1, 1 )
 1382.                      do
 1383.                         $I_L1383_631 = 0
 1383. !dir$ ivdep
 1383. !dir$ blocking_size( 256, 256 )
 1383.                         do
 1384.                            $ii_S84 = i1(1 + $I_L1383_631)
 1385.                            $tx2_WR0_R24 = tx3(1 + $I_L1383_631)
 1386.                            $tx3_WR0_R23 = eta(1 + $I_L1383_631, -1 + k + -4 * $I_L1382_716) * ( qol($ii_S84, -2 + k + -4 * $I_L1382_716) + -qol($ii_S84, -1 + k + -4 * $I_L1382_716) )
 1386.                            tx3(1 + $I_L1383_631) = $tx3_WR0_R23
 1387.                            $tx2_WR0_R24 = $tx3_WR0_R23 + $tx2_WR0_R24
 1387.                            tx2(1 + $I_L1383_631) = $tx2_WR0_R24
 1388.                            gmh(1 + $I_L1383_631, -1 + k + -4 * $I_L1382_716) = hol(1 + $I_L1383_631, -1 + k + -4 * $I_L1382_716) + $tx2_WR0_R24 * pri($ii_S84, -1 + k + -4 * $I_L1382_716) * ( 5.0e-1 * $albcp_S7 )
 1384.                            $ii_S84 = i1(1 + $I_L1383_631)
 1385.                            $tx2_WR0_R24 = $tx3_WR0_R23
 1386.                            $tx3_WR0_R23 = eta(1 + $I_L1383_631, -2 + k + -4 * $I_L1382_716) * ( qol($ii_S84, -3 + k + -4 * $I_L1382_716) + -qol($ii_S84, -2 + k + -4 * $I_L1382_716) )
 1386.                            tx3(1 + $I_L1383_631) = $tx3_WR0_R23
 1387.                            $tx2_WR0_R24 = $tx3_WR0_R23 + $tx2_WR0_R24
 1387.                            tx2(1 + $I_L1383_631) = $tx2_WR0_R24
 1388.                            gmh(1 + $I_L1383_631, -2 + k + -4 * $I_L1382_716) = hol(1 + $I_L1383_631, -2 + k + -4 * $I_L1382_716) + $tx2_WR0_R24 * pri($ii_S84, -2 + k + -4 * $I_L1382_716) * ( 5.0e-1 * $albcp_S7 )
 1384.                            $ii_S84 = i1(1 + $I_L1383_631)
 1385.                            $tx2_WR0_R24 = $tx3_WR0_R23
 1386.                            $tx3_WR0_R23 = eta(1 + $I_L1383_631, -3 + k + -4 * $I_L1382_716) * ( qol($ii_S84, -4 + k + -4 * $I_L1382_716) + -qol($ii_S84, -3 + k + -4 * $I_L1382_716) )
 1386.                            tx3(1 + $I_L1383_631) = $tx3_WR0_R23
 1387.                            $tx2_WR0_R24 = $tx3_WR0_R23 + $tx2_WR0_R24
 1387.                            tx2(1 + $I_L1383_631) = $tx2_WR0_R24
 1388.                            gmh(1 + $I_L1383_631, -3 + k + -4 * $I_L1382_716) = hol(1 + $I_L1383_631, -3 + k + -4 * $I_L1382_716) + $tx2_WR0_R24 * pri($ii_S84, -3 + k + -4 * $I_L1382_716) * ( 5.0e-1 * $albcp_S7 )
 1384.                            $ii_S84 = i1(1 + $I_L1383_631)
 1385.                            $tx2_WR0_R24 = $tx3_WR0_R23
 1386.                            $tx3_WR0_R23 = eta(1 + $I_L1383_631, -4 + k + -4 * $I_L1382_716) * ( qol($ii_S84, -5 + k + -4 * $I_L1382_716) + -qol($ii_S84, -4 + k + -4 * $I_L1382_716) )
 1386.                            tx3(1 + $I_L1383_631) = $tx3_WR0_R23
 1387.                            $tx2_WR0_R24 = $tx3_WR0_R23 + $tx2_WR0_R24
 1387.                            tx2(1 + $I_L1383_631) = $tx2_WR0_R24
 1388.                            gmh(1 + $I_L1383_631, -4 + k + -4 * $I_L1382_716) = hol(1 + $I_L1383_631, -4 + k + -4 * $I_L1382_716) + $tx2_WR0_R24 * pri($ii_S84, -4 + k + -4 * $I_L1382_716) * ( 5.0e-1 * $albcp_S7 )
 1389.                            $I_L1383_631 = 1 + $I_L1383_631
 1383.                            if ( $I_L1383_631 >= $lenb_S48 ) exit
 1383.                         enddo
 1390.                         $I_L1382_716 = 1 + $I_L1382_716
 1389.                         if ( $I_L1382_716 >= _rsh( -1 + k + -ic, 2 ) ) exit
 1389.                      enddo
 1390.                      $I_L1382_681 = and( 0xfffffffffffffffcUL, -1 + k + -ic )
 1390.                   endif
 1382.                   if ( $I_L1382_681 < -1 + k + -ic ) then
 1382.                      $I_L1382_701 = 0
 1382. !dir$ blocking_size( 1, 1 )
 1382.                      do
 1383.                         $I_L1383_631 = 0
 1383. !dir$ ivdep
 1383. !dir$ blocking_size( 256, 256 )
 1383.                         do
 1384.                            $ii_S84 = i1(1 + $I_L1383_631)
 1385.                            $tx2_WR0_R24 = tx3(1 + $I_L1383_631)
 1386.                            $tx3_WR0_R23 = eta(1 + $I_L1383_631, -1 + k + -$I_L1382_681 + -$I_L1382_701) * ( qol($ii_S84, -2 + k + -$I_L1382_681 + -$I_L1382_701) + -qol($ii_S84, -1 + k + -$I_L1382_681 + -$I_L1382_701) )
 1386.                            tx3(1 + $I_L1383_631) = $tx3_WR0_R23
 1387.                            $tx2_WR0_R24 = $tx3_WR0_R23 + $tx2_WR0_R24
 1387.                            tx2(1 + $I_L1383_631) = $tx2_WR0_R24
 1388.                            gmh(1 + $I_L1383_631, -1 + k + -$I_L1382_681 + -$I_L1382_701) = hol(1 + $I_L1383_631, -1 + k + -$I_L1382_681 + -$I_L1382_701) + $tx2_WR0_R24 * pri($ii_S84, -1 + k + -$I_L1382_681 + -$I_L1382_701) * ( 5.0e-1 * $albcp_S7 )
 1389.                            $I_L1383_631 = 1 + $I_L1383_631
 1383.                            if ( $I_L1383_631 >= $lenb_S48 ) exit
 1383.                         enddo
 1390.                         $I_L1382_701 = 1 + $I_L1382_701
 1389.                         if ( $I_L1382_701 >= -1 + k + -ic + -$I_L1382_681 ) exit
 1389.                      enddo
 1389.                   endif
 1389.                endif
 1389.             endif
 1393.             if ( $lenb_S48 + -$lena_S46 > 0 ) then
 1393.                $I_L1393_633 = 0
 1393. !dir$ ivdep
 1393.                do
 1394.                   tx3(1 + $lena_S46 + $I_L1393_633) = tx3(1 + $lena_S46 + $I_L1393_633) + $twobal_S87 * ( tx7(1 + $lena_S46 + $I_L1393_633) + -tx8(1 + $lena_S46 + $I_L1393_633) + -( alhl * qol(i1(1 + $lena_S46 + $I_L1393_633), ic) ) + -tx5(1 + $lena_S46 + $I_L1393_633) )
 1396.                   $I_L1393_633 = 1 + $I_L1393_633
 1393.                   if ( $I_L1393_633 >= ( $lenb_S48 + -$lena_S46 ) ) exit
 1393.                enddo
 1393.             endif
 1398.             $I_L1398_635 = 0
 1398. !dir$ ivdep
 1398.             do
 1399.                gmh(1 + $I_L1398_635, ic) = tx1(1 + $I_L1398_635) + 9.9542106310969544e-4 * pri(i1(1 + $I_L1398_635), ic) * ( tx3(1 + $I_L1398_635) * ( 5.0e-1 * alhl ) + eta(1 + $I_L1398_635, ic) * tx8(1 + $I_L1398_635) )
 1401.                $I_L1398_635 = 1 + $I_L1398_635
 1398.                if ( $I_L1398_635 >= $lenb_S48 ) exit
 1398.             enddo
 1405.             if ( 1 + ic <= -1 + k ) then
 1406.                $I_L1406_637 = 0
 1406. !dir$ ivdep
 1406.                do
 1407.                   tx1(1 + $I_L1406_637) = gmh(1 + $I_L1406_637, k)
 1408.                   $I_L1406_637 = 1 + $I_L1406_637
 1406.                   if ( $I_L1406_637 >= $lenb_S48 ) exit
 1406.                enddo
 1409.                if ( 2 + ic + -k <= 0 ) then
 1425.                   if ( 0 < -2 + k + -ic ) then
 1409.                      $I_L1409_683 = 0
 1409.                      do
 1410.                         $I_L1410_639 = 0
 1410. !dir$ ivdep
 1410.                         do
 1411.                            $ii_S91 = i1(1 + $I_L1410_639)
 1413.                            tx2(1 + $I_L1410_639) = gam($ii_S91, -2 + k + -$I_L1409_683) * ( prj($ii_S91, -1 + k + -$I_L1409_683) + -prh($ii_S91, -2 + k + -$I_L1409_683) )
 1412.                            tx1(1 + $I_L1410_639) = tx1(1 + $I_L1410_639) + gmh(1 + $I_L1410_639, -1 + k + -$I_L1409_683) * ( eta(1 + $I_L1410_639, -1 + k + -$I_L1409_683) + -eta(1 + $I_L1410_639, k + -$I_L1409_683) )
 1414.                            $I_L1410_639 = 1 + $I_L1410_639
 1410.                            if ( $I_L1410_639 >= $lenb_S48 ) exit
 1410.                         enddo
 1420.                         $I_L1420_641 = 0
 1420. !dir$ ivdep
 1420.                         do
 1421.                            $ii_S95 = i1(1 + $I_L1420_641)
 1422.                            akm(1 + $I_L1420_641) = akm(1 + $I_L1420_641) + tx1(1 + $I_L1420_641) * ( tx2(1 + $I_L1420_641) + gam($ii_S95, -1 + k + -$I_L1409_683) * ( prh($ii_S95, -1 + k + -$I_L1409_683) + -prj($ii_S95, -1 + k + -$I_L1409_683) ) )
 1424.                            $I_L1420_641 = 1 + $I_L1420_641
 1420.                            if ( $I_L1420_641 >= $lenb_S48 ) exit
 1420.                         enddo
 1425.                         $I_L1409_683 = 1 + $I_L1409_683
 1424.                         if ( $I_L1409_683 >= -2 + k + -ic ) exit
 1424.                      enddo
 1424.                   endif
 1410.                   $I_L1410_659 = 0
 1410. !dir$ ivdep
 1410.                   do
 1411.                      $ii_S91 = i1(1 + $I_L1410_659)
 1413.                      tx2(1 + $I_L1410_659) = gam($ii_S91, ic) * ( prj($ii_S91, 1 + ic) + -prh($ii_S91, ic) )
 1412.                      tx1(1 + $I_L1410_659) = tx1(1 + $I_L1410_659) + gmh(1 + $I_L1410_659, 1 + ic) * ( eta(1 + $I_L1410_659, 1 + ic) + -eta(1 + $I_L1410_659, 2 + ic) )
 1414.                      $I_L1410_659 = 1 + $I_L1410_659
 1410.                      if ( $I_L1410_659 >= $lenb_S48 ) exit
 1410.                   enddo
 1416.                   if ( $lenb_S48 + -$lena_S46 > 0 ) then
 1416.                      $I_L1416_661 = 0
 1416. !dir$ ivdep
 1416.                      do
 1417.                         tx2(1 + $lena_S46 + $I_L1416_661) = 0.0
 1418.                         $I_L1416_661 = 1 + $I_L1416_661
 1416.                         if ( $I_L1416_661 >= ( $lenb_S48 + -$lena_S46 ) ) exit
 1416.                      enddo
 1416.                   endif
 1420.                   $I_L1420_663 = 0
 1420. !dir$ ivdep
 1420.                   do
 1421.                      $ii_S95 = i1(1 + $I_L1420_663)
 1422.                      akm(1 + $I_L1420_663) = akm(1 + $I_L1420_663) + tx1(1 + $I_L1420_663) * ( tx2(1 + $I_L1420_663) + gam($ii_S95, 1 + ic) * ( prh($ii_S95, 1 + ic) + -prj($ii_S95, 1 + ic) ) )
 1424.                      $I_L1420_663 = 1 + $I_L1420_663
 1420.                      if ( $I_L1420_663 >= $lenb_S48 ) exit
 1420.                   enddo
 1420.                endif
 1420.             endif
 1428.             if ( $lenb_S48 + -$lena_S46 > 0 ) then
 1428.                $I_L1428_643 = 0
 1428. !dir$ ivdep
 1428.                do
 1429.                   $ii_S97 = i1(1 + $lena_S46 + $I_L1428_643)
 1430.                   $tx2_WR0_R25 = 5.0e-1 * ( prs($ii_S97, 1 + ic) + prs($ii_S97, ic) ) + 5.0e-1 * ( prs($ii_S97, 2 + ic) + -prs($ii_S97, ic) ) * ( 1.0 + -tx6(1 + $lena_S46 + $I_L1428_643) )
 1430.                   tx2(1 + $lena_S46 + $I_L1428_643) = $tx2_WR0_R25
 1432.                   $tx1_WR0_R26 = prs($ii_S97, 1 + ic)
 1432.                   tx1(1 + $lena_S46 + $I_L1428_643) = $tx1_WR0_R26
 1433.                   $tx5_WR0_R27 = 5.0e-1 * ( prs($ii_S97, 2 + ic) + $tx1_WR0_R26 )
 1433.                   tx5(1 + $lena_S46 + $I_L1428_643) = $tx5_WR0_R27
 1434.                   if ( $tx2_WR0_R25 < $tx1_WR0_R26 ) then
 1428.                      goto 20
 1434.                   else if ( $tx2_WR0_R25 < $tx5_WR0_R27 ) then
 1435.                      tx6(1 + $lena_S46 + $I_L1428_643) = 1.0 + -( ( $tx2_WR0_R25 + -$tx1_WR0_R26 ) * 1.0/( $tx5_WR0_R27 + -$tx1_WR0_R26 ) )
 1436.                      $tem_S98 = ( pri($ii_S97, 1 + ic) * 1.0/pri($ii_S97, ic) )
 1437.                      hol(1 + $lena_S46 + $I_L1428_643, 1 + ic) = hol(1 + $lena_S46 + $I_L1428_643, 1 + ic) + $tem_S98 * hol(1 + $lena_S46 + $I_L1428_643, ic)
 1438.                      hol(1 + $lena_S46 + $I_L1428_643, ic) = 0.0
 1439.                      gmh(1 + $lena_S46 + $I_L1428_643, 1 + ic) = gmh(1 + $lena_S46 + $I_L1428_643, 1 + ic) + $tem_S98 * gmh(1 + $lena_S46 + $I_L1428_643, ic)
 1440.                      gmh(1 + $lena_S46 + $I_L1428_643, ic) = 0.0
 1440.                   else
 1440.    20                continue
 1441.                      tx6(1 + $lena_S46 + $I_L1428_643) = cvmg( 0.0, 1.0, $tx2_WR0_R25 >= $tx1_WR0_R26 )
 1441.                   endif
 1446.                   $I_L1428_643 = 1 + $I_L1428_643
 1445.                   if ( $I_L1428_643 >= ( $lenb_S48 + -$lena_S46 ) ) exit
 1445.                enddo
 1445.             endif
 1448.             if ( lenc > 0 ) then
 1448.                $I_L1448_645 = 0
 1448. !dir$ ivdep
 1448.                do
 1449.                   pcu(1 + $I_L1448_645) = 0.0
 1450.                   $I_L1448_645 = 1 + $I_L1448_645
 1448.                   if ( $I_L1448_645 >= lenc ) exit
 1448.                enddo
 1448.             endif
 1465.             if ( -1 + k <= ic ) then
 1452.                $I_L1452_655 = 0
 1452. !dir$ ivdep
 1452.                do
 1453.                   $ii_S101 = i1(1 + $I_L1452_655)
 1454.                   if ( akm(1 + $I_L1452_655) >= 0.0 ) then
 1452.                      goto 30
 1454.                   else if ( wlq(1 + $I_L1452_655) >= 0.0 ) then
 1455.                      $wfn_WR0_R29 = -( rasalf * wfn(1 + $I_L1452_655) * tx6(1 + $I_L1452_655) * 1.0/akm(1 + $I_L1452_655) )
 1455.                      wfn(1 + $I_L1452_655) = $wfn_WR0_R29
 1455.                   else
 1455.    30                continue
 1457.                      $wfn_WR0_R29 = 0.0
 1457.                      wfn(1 + $I_L1452_655) = 0.0
 1457.                   endif
 1459.                   $tem_S102 = ( cmb2pa * frac ) * ( prs($ii_S101, 1 + k) + -prs($ii_S101, k) )
 1460.                   $wfn_WR0_R29 = min( $tem_S102, $wfn_WR0_R29 )
 1460.                   wfn(1 + $I_L1452_655) = $wfn_WR0_R29
 1472.                   tx1(1 + $I_L1452_655) = 864.0 * $wfn_WR0_R29
 1477.                   pcu($ii_S101) = 1.020408163265306e-1 * $wfn_WR0_R29 * wlq(1 + $I_L1452_655)
 1481.                   tx4(1 + $I_L1452_655) = $wfn_WR0_R29 * 1.0/alhl
 1482.                   tx5(1 + $I_L1452_655) = 9.9542106310969544e-4 * $wfn_WR0_R29
 1483.                   $I_L1452_655 = 1 + $I_L1452_655
 1473.                   if ( $I_L1452_655 >= $lenb_S48 ) exit
 1473.                enddo
 1473.             else if ( ic + -k < 0 ) then
 1452.                $I_L1452_685 = 0
 1452.                do
 1453.                   $ii_S101 = i1(1 + $I_L1452_685)
 1454.                   if ( akm(1 + $I_L1452_685) >= 0.0 ) then
 1452.                      goto 40
 1454.                   else if ( wlq(1 + $I_L1452_685) >= 0.0 ) then
 1455.                      wfn(1 + $I_L1452_685) = -( rasalf * wfn(1 + $I_L1452_685) * tx6(1 + $I_L1452_685) * 1.0/akm(1 + $I_L1452_685) )
 1455.                   else
 1455.    40                continue
 1457.                      wfn(1 + $I_L1452_685) = 0.0
 1457.                   endif
 1459.                   $tem_S102 = ( cmb2pa * frac ) * ( prs($ii_S101, 1 + k) + -prs($ii_S101, k) )
 1464.                   etamn = 0.0
 1460.                   wfn(1 + $I_L1452_685) = min( $tem_S102, wfn(1 + $I_L1452_685) )
 1466.                   $I_L1466_647 = 0
 1466. !dir$ ivdep
 1466.                   do
 1467.                      etamn = etamn + eta(1 + $I_L1452_685, -1 + k + -$I_L1466_647)
 1468.                      $I_L1466_647 = 1 + $I_L1466_647
 1466.                      if ( $I_L1466_647 >= ( k + -ic ) ) exit
 1466.                   enddo
 1470.                   tx1(1 + $I_L1452_685) = 864.0 * wfn(1 + $I_L1452_685) * ( etamn * 1.0/( real( -1 + k + -ic ) ) )
 1477.                   pcu($ii_S101) = 1.020408163265306e-1 * wlq(1 + $I_L1452_685) * wfn(1 + $I_L1452_685)
 1481.                   tx4(1 + $I_L1452_685) = wfn(1 + $I_L1452_685) * 1.0/alhl
 1482.                   tx5(1 + $I_L1452_685) = 9.9542106310969544e-4 * wfn(1 + $I_L1452_685)
 1483.                   $I_L1452_685 = 1 + $I_L1452_685
 1473.                   if ( $I_L1452_685 >= $lenb_S48 ) exit
 1473.                enddo
 1473.             else
 1452.                $I_L1452_657 = 0
 1452. !dir$ ivdep
 1452.                do
 1453.                   $ii_S101 = i1(1 + $I_L1452_657)
 1454.                   if ( akm(1 + $I_L1452_657) >= 0.0 ) then
 1452.                      goto 50
 1454.                   else if ( wlq(1 + $I_L1452_657) >= 0.0 ) then
 1455.                      $wfn_WR0_R28 = -( rasalf * wfn(1 + $I_L1452_657) * tx6(1 + $I_L1452_657) * 1.0/akm(1 + $I_L1452_657) )
 1455.                      wfn(1 + $I_L1452_657) = $wfn_WR0_R28
 1455.                   else
 1455.    50                continue
 1457.                      $wfn_WR0_R28 = 0.0
 1457.                      wfn(1 + $I_L1452_657) = 0.0
 1457.                   endif
 1459.                   $tem_S102 = ( cmb2pa * frac ) * ( prs($ii_S101, 1 + k) + -prs($ii_S101, k) )
 1470.                   tx1(1 + $I_L1452_657) = 0.0
 1460.                   $wfn_WR0_R28 = min( $tem_S102, $wfn_WR0_R28 )
 1460.                   wfn(1 + $I_L1452_657) = $wfn_WR0_R28
 1477.                   pcu($ii_S101) = 1.020408163265306e-1 * $wfn_WR0_R28 * wlq(1 + $I_L1452_657)
 1481.                   tx4(1 + $I_L1452_657) = $wfn_WR0_R28 * 1.0/alhl
 1482.                   tx5(1 + $I_L1452_657) = 9.9542106310969544e-4 * $wfn_WR0_R28
 1483.                   $I_L1452_657 = 1 + $I_L1452_657
 1473.                   if ( $I_L1452_657 >= $lenb_S48 ) exit
 1473.                enddo
 1473.             endif
 1485.             $I_L1485_649 = 0
 1485. !dir$ ivdep
 1485.             do
 1486.                $ii_S106 = i1(1 + $I_L1485_649)
 1487.                cln($ii_S106) = tx1(1 + $I_L1485_649)
 1488.                $I_L1485_649 = 1 + $I_L1485_649
 1485.                if ( $I_L1485_649 >= $lenb_S48 ) exit
 1485.             enddo
 1492.             if ( k + -ic >= 0 ) then
 1492.                $I_L1492_687 = 0
 1492.                if ( -3 + k + -ic >= 0 ) then
 1492.                   $I_L1492_718 = 0
 1492. !dir$ blocking_size( 1, 1 )
 1492.                   do
 1493.                      $I_L1493_651 = 0
 1493. !dir$ ivdep
 1493. !dir$ blocking_size( 256, 256 )
 1493.                      do
 1494.                         $ii_S109 = i1(1 + $I_L1493_651)
 1495.                         $tem_S111 = tx4(1 + $I_L1493_651) * ( gmh(1 + $I_L1493_651, ic + 4 * $I_L1492_718) + -hol(1 + $I_L1493_651, ic + 4 * $I_L1492_718) )
 1496.                         $tem1_S110 = tx5(1 + $I_L1493_651) * hol(1 + $I_L1493_651, ic + 4 * $I_L1492_718)
 1497.                         tcu($ii_S109, ic + 4 * $I_L1492_718) = ( $tem1_S110 * 1.0/prh($ii_S109, ic + 4 * $I_L1492_718) )
 1498.                         qcu($ii_S109, ic + 4 * $I_L1492_718) = $tem_S111
 1494.                         $ii_S109 = i1(1 + $I_L1493_651)
 1495.                         $tem_S111 = tx4(1 + $I_L1493_651) * ( gmh(1 + $I_L1493_651, 1 + ic + 4 * $I_L1492_718) + -hol(1 + $I_L1493_651, 1 + ic + 4 * $I_L1492_718) )
 1496.                         $tem1_S110 = tx5(1 + $I_L1493_651) * hol(1 + $I_L1493_651, 1 + ic + 4 * $I_L1492_718)
 1497.                         tcu($ii_S109, 1 + ic + 4 * $I_L1492_718) = ( $tem1_S110 * 1.0/prh($ii_S109, 1 + ic + 4 * $I_L1492_718) )
 1498.                         qcu($ii_S109, 1 + ic + 4 * $I_L1492_718) = $tem_S111
 1494.                         $ii_S109 = i1(1 + $I_L1493_651)
 1495.                         $tem_S111 = tx4(1 + $I_L1493_651) * ( gmh(1 + $I_L1493_651, 2 + ic + 4 * $I_L1492_718) + -hol(1 + $I_L1493_651, 2 + ic + 4 * $I_L1492_718) )
 1496.                         $tem1_S110 = tx5(1 + $I_L1493_651) * hol(1 + $I_L1493_651, 2 + ic + 4 * $I_L1492_718)
 1497.                         tcu($ii_S109, 2 + ic + 4 * $I_L1492_718) = ( $tem1_S110 * 1.0/prh($ii_S109, 2 + ic + 4 * $I_L1492_718) )
 1498.                         qcu($ii_S109, 2 + ic + 4 * $I_L1492_718) = $tem_S111
 1494.                         $ii_S109 = i1(1 + $I_L1493_651)
 1495.                         $tem_S111 = tx4(1 + $I_L1493_651) * ( gmh(1 + $I_L1493_651, 3 + ic + 4 * $I_L1492_718) + -hol(1 + $I_L1493_651, 3 + ic + 4 * $I_L1492_718) )
 1496.                         $tem1_S110 = tx5(1 + $I_L1493_651) * hol(1 + $I_L1493_651, 3 + ic + 4 * $I_L1492_718)
 1497.                         tcu($ii_S109, 3 + ic + 4 * $I_L1492_718) = ( $tem1_S110 * 1.0/prh($ii_S109, 3 + ic + 4 * $I_L1492_718) )
 1498.                         qcu($ii_S109, 3 + ic + 4 * $I_L1492_718) = $tem_S111
 1499.                         $I_L1493_651 = 1 + $I_L1493_651
 1493.                         if ( $I_L1493_651 >= $lenb_S48 ) exit
 1493.                      enddo
 1500.                      $I_L1492_718 = 1 + $I_L1492_718
 1499.                      if ( $I_L1492_718 >= _rsh( 1 + k + -ic, 2 ) ) exit
 1499.                   enddo
 1500.                   $I_L1492_687 = and( 0xfffffffffffffffcUL, 1 + k + -ic )
 1500.                endif
 1492.                if ( $I_L1492_687 < 1 + k + -ic ) then
 1492.                   $I_L1492_704 = 0
 1492. !dir$ blocking_size( 1, 1 )
 1492.                   do
 1493.                      $I_L1493_651 = 0
 1493. !dir$ ivdep
 1493. !dir$ blocking_size( 256, 256 )
 1493.                      do
 1494.                         $ii_S109 = i1(1 + $I_L1493_651)
 1495.                         $tem_S111 = tx4(1 + $I_L1493_651) * ( gmh(1 + $I_L1493_651, ic + $I_L1492_687 + $I_L1492_704) + -hol(1 + $I_L1493_651, ic + $I_L1492_687 + $I_L1492_704) )
 1496.                         $tem1_S110 = tx5(1 + $I_L1493_651) * hol(1 + $I_L1493_651, ic + $I_L1492_687 + $I_L1492_704)
 1497.                         tcu($ii_S109, ic + $I_L1492_687 + $I_L1492_704) = ( $tem1_S110 * 1.0/prh($ii_S109, ic + $I_L1492_687 + $I_L1492_704) )
 1498.                         qcu($ii_S109, ic + $I_L1492_687 + $I_L1492_704) = $tem_S111
 1499.                         $I_L1493_651 = 1 + $I_L1493_651
 1493.                         if ( $I_L1493_651 >= $lenb_S48 ) exit
 1493.                      enddo
 1500.                      $I_L1492_704 = 1 + $I_L1492_704
 1499.                      if ( $I_L1492_704 >= 1 + k + -ic + -$I_L1492_687 ) exit
 1499.                   enddo
 1499.                endif
 1499.             endif
 1502.             if ( k > 0 ) then
 1503.                if ( lenc > 0 ) then
 1502.                   $I_L1502_689 = 0
 1502.                   do
 1503.                      $I_L1503_653 = 0
 1503. !dir$ ivdep
 1503.                      do
 1504.                         hst(1 + $I_L1503_653, 1 + $I_L1502_689) = 0.0
 1505.                         qol(1 + $I_L1503_653, 1 + $I_L1502_689) = 0.0
 1506.                         $I_L1503_653 = 1 + $I_L1503_653
 1503.                         if ( $I_L1503_653 >= lenc ) exit
 1503.                      enddo
 1507.                      $I_L1502_689 = 1 + $I_L1502_689
 1506.                      if ( $I_L1502_689 >= k ) exit
 1506.                   enddo
 1506.                endif
 1506.             endif
 1506.          endif
 1506.       endif
 1508.       return
 1508.       end
 1508.       
 1516.       
 1516.       subroutine ras( len, lenc, k, dt, ncrnd, krmax, frac, rasal, botop, alhl, rkap, poi, qoi, uoi, voi, prs, prj, cup, cln, q1, q2, alf, bet, gam, prh, pri, hoi, eta, tcu, qcu, hst, qol, gmh, tx1, tx2, tx3, tx4, tx5, tx6, tx7, tx8, tx9, wfn, akm, qs1, clf, uht, vht, wlq, pcu, ia, i1, i2, kmax, kmaxm1, kmaxp1 )
 1516.       t$20 = ( -1 + k )
 1623.       t$157 = _zla( 0, ( -1 + k ) )
 1516.       t$17 = len
 1516.       t$18 = k
 1617.       t$158 = _zla( 0, len )
 1516.       t$159 = _zla( 0, len )
 1617.       t$160 = _zla( 0, k )
 1516.       t$161 = _zla( 0, len ) * _zla( 0, k )
 1516.       t$19 = ( 1 + k )
 1619.       t$162 = _zla( 0, ( 1 + k ) )
 1516.       t$163 = _zla( 0, len ) * _zla( 0, ( 1 + k ) )
 1516.       t$21 = lenc
 1637.       t$164 = _zla( 0, lenc )
 1516.       t$165 = _zla( 0, lenc )
 1516.       t$166 = _zla( 0, k ) * _zla( 0, lenc )
 1687.       setras = .false.
 1688.       $rkapp1_S4 = 1.0 + rkap
 1690.       $albcp_S9 = 9.9542106310969544e-4 * alhl
 1694.       k = kmaxm1
 1695.       if ( lenc > 0 ) then
 1695.          $I_L1695_72 = 0
 1695. !dir$ ivdep
 1695.          do
 1706.             prj(1 + $I_L1695_72, kmax) = prj(1 + $I_L1695_72, kmaxp1)
 1701.             qoi(1 + $I_L1695_72, kmaxm1) = ( 1.0/( prs(1 + $I_L1695_72, kmaxp1) + -prs(1 + $I_L1695_72, kmaxm1) ) * ( qoi(1 + $I_L1695_72, kmaxm1) * ( prs(1 + $I_L1695_72, kmax) + -prs(1 + $I_L1695_72, kmaxm1) ) + qoi(1 + $I_L1695_72, kmax) * ( prs(1 + $I_L1695_72, kmaxp1) + -prs(1 + $I_L1695_72, kmax) ) ) )
 1698.             poi(1 + $I_L1695_72, kmaxm1) = ( 1.0/( prs(1 + $I_L1695_72, kmaxp1) + -prs(1 + $I_L1695_72, kmaxm1) ) * ( poi(1 + $I_L1695_72, kmaxm1) * ( prs(1 + $I_L1695_72, kmax) + -prs(1 + $I_L1695_72, kmaxm1) ) + poi(1 + $I_L1695_72, kmax) * ( prs(1 + $I_L1695_72, kmaxp1) + -prs(1 + $I_L1695_72, kmax) ) ) )
 1708.             prs(1 + $I_L1695_72, kmax) = prs(1 + $I_L1695_72, kmaxp1)
 1702.             $I_L1695_72 = 1 + $I_L1695_72
 1695.             if ( $I_L1695_72 >= lenc ) exit
 1695.          enddo
 1695.       endif
 1710.       if ( kmaxm1 > 0 ) then
 1711.          if ( lenc > 0 ) then
 1710.             $I_L1710_86 = 0
 1710.             do
 1711.                $I_L1711_74 = 0
 1711. !dir$ ivdep
 1711.                do
 1712.                   prh(1 + $I_L1711_74, 1 + $I_L1710_86) = ( ( -( prj(1 + $I_L1711_74, 1 + $I_L1710_86) * prs(1 + $I_L1711_74, 1 + $I_L1710_86) ) + prj(1 + $I_L1711_74, 2 + $I_L1710_86) * prs(1 + $I_L1711_74, 2 + $I_L1710_86) ) * 1.0/( $rkapp1_S4 * ( prs(1 + $I_L1711_74, 2 + $I_L1710_86) + -prs(1 + $I_L1711_74, 1 + $I_L1710_86) ) ) )
 1714.                   $I_L1711_74 = 1 + $I_L1711_74
 1711.                   if ( $I_L1711_74 >= lenc ) exit
 1711.                enddo
 1717.                $I_L1717_76 = 0
 1717. !dir$ ivdep
 1717.                do
 1718.                   $tx5_WR0_R0 = poi(1 + $I_L1717_76, 1 + $I_L1710_86) * prh(1 + $I_L1717_76, 1 + $I_L1710_86)
 1718.                   tx5(1 + $I_L1717_76) = $tx5_WR0_R0
 1719.                   $tx1_WR0_R1 = 5.0e-1 * ( prs(1 + $I_L1717_76, 2 + $I_L1710_86) + prs(1 + $I_L1717_76, 1 + $I_L1710_86) )
 1719.                   tx1(1 + $I_L1717_76) = $tx1_WR0_R1
 1720.                   tx3(1 + $I_L1717_76) = $tx5_WR0_R0
 1721.                   $t_S7 = -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) )
 1721.                   $d_S8 = 1.0/( $tx1_WR0_R1 + -6.0855080510827297e-1 * ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) )
 1721.                   tx2(1 + $I_L1717_76) = ( $d_S8 * ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) )
 1721.                   $tx4_WR0_R4 = 1.0/( $tx1_WR0_R1 + -6.0855080510827297e-1 * ( 3.7970824058546779 + $t_S7 * ( 2.758084175464619e-1 + $t_S7 * ( 8.8834359503106673e-3 + $t_S7 * ( 1.6478487733072146e-4 + $t_S7 * ( 1.8844542468746983e-6 + $t_S7 * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * $t_S7 ) ) ) ) ) ) ) * ( ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.7766871900621335e-2 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 4.9435463199216435e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 7.5378169874987931e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 6.3227127845150164e-8 + 2.2890744549110807e-10 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) + 6.0855080510827297e-1 * ( 1.0/( $tx1_WR0_R1 + -6.0855080510827297e-1 * ( 3.7970824058546779 + $t_S7 * ( 2.758084175464619e-1 + $t_S7 * ( 8.8834359503106673e-3 + $t_S7 * ( 1.6478487733072146e-4 + $t_S7 * ( 1.8844542468746983e-6 + $t_S7 * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * $t_S7 ) ) ) ) ) ) ) * ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) ) )
 1721.                   tx4(1 + $I_L1717_76) = ( $d_S8 * ( ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.7766871900621335e-2 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 4.9435463199216435e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 7.5378169874987931e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 6.3227127845150164e-8 + 2.2890744549110807e-10 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) + 6.0855080510827297e-1 * ( $d_S8 * ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) ) ) )
 1722.                   alf(1 + $I_L1717_76, 1 + $I_L1710_86) = -( $tx5_WR0_R0 * $tx4_WR0_R4 ) + ( 1.0/( $tx1_WR0_R1 + -6.0855080510827297e-1 * ( 3.7970824058546779 + $t_S7 * ( 2.758084175464619e-1 + $t_S7 * ( 8.8834359503106673e-3 + $t_S7 * ( 1.6478487733072146e-4 + $t_S7 * ( 1.8844542468746983e-6 + $t_S7 * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * $t_S7 ) ) ) ) ) ) ) * ( 3.7970824058546779 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 2.758084175464619e-1 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 8.8834359503106673e-3 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.6478487733072146e-4 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.8844542468746983e-6 + ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * ( -273.16000000000003 + min( 323.14999999999998, max( 223.15000000000001, $tx5_WR0_R0 ) ) ) ) ) ) ) ) ) )
 1723.                   bet(1 + $I_L1717_76, 1 + $I_L1710_86) = prh(1 + $I_L1717_76, 1 + $I_L1710_86) * ( $d_S8 * ( ( 2.758084175464619e-1 + $t_S7 * ( 1.7766871900621335e-2 + $t_S7 * ( 4.9435463199216435e-4 + $t_S7 * ( 7.5378169874987931e-6 + $t_S7 * ( 6.3227127845150164e-8 + 2.2890744549110807e-10 * $t_S7 ) ) ) ) ) + 6.0855080510827297e-1 * ( $d_S8 * ( 3.7970824058546779 + $t_S7 * ( 2.758084175464619e-1 + $t_S7 * ( 8.8834359503106673e-3 + $t_S7 * ( 1.6478487733072146e-4 + $t_S7 * ( 1.8844542468746983e-6 + $t_S7 * ( 1.2645425569030034e-8 + 3.8151240915184678e-11 * $t_S7 ) ) ) ) ) ) ) ) )
 1724.                   gam(1 + $I_L1717_76, 1 + $I_L1710_86) = 1.0/( prh(1 + $I_L1717_76, 1 + $I_L1710_86) * ( 1.0 + $albcp_S9 * $tx4_WR0_R4 ) )
 1725.                   pri(1 + $I_L1717_76, 1 + $I_L1710_86) = ( 10.045999999999999 * 1.0/( prs(1 + $I_L1717_76, 2 + $I_L1710_86) + -prs(1 + $I_L1717_76, 1 + $I_L1710_86) ) )
 1726.                   $I_L1717_76 = 1 + $I_L1717_76
 1717.                   if ( $I_L1717_76 >= lenc ) exit
 1717.                enddo
 1715.                $I_L1710_86 = 1 + $I_L1710_86
 1714.                if ( $I_L1710_86 >= kmaxm1 ) exit
 1714.             enddo
 1714.          endif
 1714.       endif
 1732.       $onbdt_S13 = 1.0/dt
 1733.       fracs = frac * 1.0/dt
 1742.       if ( -1 + kmaxm1 + -min( krmax, -1 + kmaxm1 ) > 0 ) then
 1743.          if ( botop /= .false. ) then
 1744.             $I_L1744_78 = 0
 1744. !dir$ ivdep
 1744.             do
 1745.                ic(1 + $I_L1744_78) = ( -1 + kmaxm1 + -$I_L1744_78 )
 1746.                $I_L1744_78 = 1 + $I_L1744_78
 1744.                if ( $I_L1744_78 >= -1 + kmaxm1 + -min( krmax, -1 + kmaxm1 ) ) exit
 1744.             enddo
 1744.          else
 1748.             $I_L1748_80 = 0
 1748. !dir$ ivdep
 1748.             do
 1749.                ic(-1 + kmaxm1 + -min( krmax, -1 + kmaxm1 ) + -$I_L1748_80) = ( 1 + $I_L1748_80 + min( krmax, -1 + kmaxm1 ) )
 1750.                $I_L1748_80 = 1 + $I_L1748_80
 1748.                if ( $I_L1748_80 >= -1 + kmaxm1 + -min( krmax, -1 + kmaxm1 ) ) exit
 1748.             enddo
 1748.          endif
 1748.       endif
 1774.       if ( -1 + kmaxm1 + ncrnd + -min( krmax, -1 + kmaxm1 ) > 0 ) then
 1774.          $I_L1774_90 = 0
 1774.          do
 1775.             ib = ic(1 + $I_L1774_90)
 1776.             rasalf = rasal(ib) * $onbdt_S13
 1777.             call cloud( len, lenc, k, ib, rasalf, setras, fracs, alhl, rkap, poi(1, 1), qoi(1, 1), uoi(1, 1), voi(1, 1), prs(1, 1), prj(1, 1), pcu(1), cln(1, ib), tcu(1, 1), qcu(1, 1), alf(1, 1), bet(1, 1), gam(1, 1), prh(1, 1), pri(1, 1), hoi(1, 1), eta(1, 1), hst(1, 1), qol(1, 1), gmh(1, 1), tx1(1), tx2(1), tx3(1), tx4(1), tx5(1), tx6(1), tx7(1), tx8(1), tx9(1), wfn(1), akm(1), qs1(1), clf(1), uht(1), vht(1), wlq(1), ia(1), i1(1), i2(1), 100.0, 9.9990000000000001e-1 )
 1784.             if ( k + -ib >= 0 ) then
 1785.                if ( lenc > 0 ) then
 1784.                   $I_L1784_88 = 0
 1784.                   do
 1785.                      $I_L1785_82 = 0
 1785. !dir$ ivdep
 1785.                      do
 1789.                         poi(1 + $I_L1785_82, ib + $I_L1784_88) = poi(1 + $I_L1785_82, ib + $I_L1784_88) + dt * tcu(1 + $I_L1785_82, ib + $I_L1784_88)
 1790.                         qoi(1 + $I_L1785_82, ib + $I_L1784_88) = qoi(1 + $I_L1785_82, ib + $I_L1784_88) + dt * qcu(1 + $I_L1785_82, ib + $I_L1784_88)
 1794.                         q1(1 + $I_L1785_82, ib + $I_L1784_88) = q1(1 + $I_L1785_82, ib + $I_L1784_88) + 86400.0 * tcu(1 + $I_L1785_82, ib + $I_L1784_88) * prh(1 + $I_L1785_82, ib + $I_L1784_88)
 1795.                         q2(1 + $I_L1785_82, ib + $I_L1784_88) = q2(1 + $I_L1785_82, ib + $I_L1784_88) + 86400.0 * qcu(1 + $I_L1785_82, ib + $I_L1784_88)
 1796.                         $I_L1785_82 = 1 + $I_L1785_82
 1785.                         if ( $I_L1785_82 >= lenc ) exit
 1785.                      enddo
 1797.                      $I_L1784_88 = 1 + $I_L1784_88
 1796.                      if ( $I_L1784_88 >= 1 + k + -ib ) exit
 1796.                   enddo
 1796.                endif
 1796.             endif
 1801.             if ( lenc > 0 ) then
 1801.                $I_L1801_84 = 0
 1801. !dir$ ivdep
 1801.                do
 1802.                   cup(1 + $I_L1801_84, ib) = cup(1 + $I_L1801_84, ib) + 86400.0 * pcu(1 + $I_L1801_84)
 1803.                   $I_L1801_84 = 1 + $I_L1801_84
 1801.                   if ( $I_L1801_84 >= lenc ) exit
 1801.                enddo
 1801.             endif
 1804.             $I_L1774_90 = 1 + $I_L1774_90
 1803.             if ( $I_L1774_90 >= -1 + kmaxm1 + ncrnd + -min( krmax, -1 + kmaxm1 ) ) exit
 1803.          enddo
 1803.       endif
 1805.       return
 1805.       end
 1805.       
 1815.       
 1815.       subroutine arprep( dtwrk, dqwrk, sl, si, fpn, ktop, kbot, rrr, hrar, qrar, dt, ftn, fqn, del, kuo, cldm, cflric, kmaxp1, kmaxm1, ncols, kmax, nls )
 1815.       t$23 = ncols
 1815.       t$24 = kmax
 1877.       t$167 = _zla( 0, ncols )
 1815.       t$168 = _zla( 0, ncols )
 1877.       t$169 = _zla( 0, kmax )
 1815.       t$170 = _zla( 0, ncols ) * _zla( 0, kmax )
 1815.       t$25 = kmaxp1
 1876.       t$171 = _zla( 0, kmaxp1 )
 1932.       t$174 = 8 * _zla( 0, ncols )
 1911.       t$175 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 1911.       t$177 = t$175 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1912.       t$178 = 8 * ( 7 + t$175 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1912.       t$180 = t$178 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1938.       t$181 = 8 * ( 7 + t$178 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1938.       t$183 = t$181 + 8 * _zla( 0, ncols )
 1900.       t$184 = 8 * ( 7 + t$181 + 8 * _zla( 0, ncols ) ) / 8
 1900.       t$186 = t$184 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1915.       t$187 = 8 * ( 7 + t$184 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1915.       t$189 = t$187 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1913.       t$190 = 8 * ( 7 + t$187 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1913.       t$192 = t$190 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1914.       t$193 = 8 * ( 7 + t$190 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1914.       t$195 = t$193 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1916.       t$196 = 8 * ( 7 + t$193 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1916.       t$198 = t$196 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1917.       t$199 = 8 * ( 7 + t$196 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1917.       t$201 = t$199 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1940.       t$203 = t$199 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) + 4 * _zla( 0, ncols )
 1941.       t$205 = t$199 + 8 * _zla( 0, ncols ) + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1939.       t$207 = t$199 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) + 12 * _zla( 0, ncols )
 1935.       t$208 = 8 * ( 7 + t$199 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) + 12 * _zla( 0, ncols ) ) / 8
 1935.       t$210 = t$208 + 8 * _zla( 0, ncols )
 1895.       t$211 = 8 * ( 7 + t$208 + 8 * _zla( 0, ncols ) ) / 8
 1895.       t$213 = t$211 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1919.       t$214 = 8 * ( 7 + t$211 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1919.       t$216 = t$214 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1920.       t$217 = 8 * ( 7 + t$214 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1920.       t$219 = t$217 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1815.       t$220 = _zla( 0, ncols ) * _zla( 0, kmaxp1 )
 1893.       t$221 = 8 * ( 7 + t$217 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1893.       t$223 = t$221 + 8 * _zla( 0, ncols ) * _zla( 0, kmaxp1 )
 1892.       t$224 = 8 * ( 7 + t$221 + 8 * _zla( 0, ncols ) * _zla( 0, kmaxp1 ) ) / 8
 1892.       t$226 = t$224 + 8 * _zla( 0, ncols ) * _zla( 0, kmaxp1 )
 1901.       t$227 = 8 * ( 7 + t$224 + 8 * _zla( 0, ncols ) * _zla( 0, kmaxp1 ) ) / 8
 1901.       t$229 = t$227 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1902.       t$230 = 8 * ( 7 + t$227 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1902.       t$232 = t$230 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1904.       t$233 = 8 * ( 7 + t$230 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1904.       t$235 = t$233 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1896.       t$236 = 8 * ( 7 + t$233 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1896.       t$238 = t$236 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1918.       t$239 = 8 * ( 7 + t$236 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1918.       t$241 = t$239 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1933.       t$242 = 8 * ( 7 + t$239 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1933.       t$244 = t$242 + 8 * _zla( 0, ncols )
 1815.       t$26 = kmaxm1
 1894.       t$245 = _zla( 0, kmaxm1 )
 1894.       t$246 = 8 * ( 7 + t$242 + 8 * _zla( 0, ncols ) ) / 8
 1894.       t$248 = t$246 + 8 * _zla( 0, kmaxm1 )
 1906.       t$249 = 8 * ( 7 + t$246 + 8 * _zla( 0, kmaxm1 ) ) / 8
 1906.       t$251 = t$249 + 8 * _zla( 0, ncols )
 1905.       t$252 = 8 * ( 7 + t$249 + 8 * _zla( 0, ncols ) ) / 8
 1905.       t$254 = t$252 + 8 * _zla( 0, ncols )
 1899.       t$255 = 8 * ( 7 + t$252 + 8 * _zla( 0, ncols ) ) / 8
 1899.       t$257 = t$255 + 8 * _zla( 0, ncols )
 1907.       t$258 = 8 * ( 7 + t$255 + 8 * _zla( 0, ncols ) ) / 8
 1907.       t$260 = t$258 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1903.       t$261 = 8 * ( 7 + t$258 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1903.       t$263 = t$261 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1922.       t$264 = 8 * ( 7 + t$261 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1922.       t$266 = t$264 + 8 * _zla( 0, ncols )
 1923.       t$267 = 8 * ( 7 + t$264 + 8 * _zla( 0, ncols ) ) / 8
 1923.       t$269 = t$267 + 8 * _zla( 0, ncols )
 1924.       t$270 = 8 * ( 7 + t$267 + 8 * _zla( 0, ncols ) ) / 8
 1924.       t$272 = t$270 + 8 * _zla( 0, ncols )
 1925.       t$273 = 8 * ( 7 + t$270 + 8 * _zla( 0, ncols ) ) / 8
 1925.       t$275 = t$273 + 8 * _zla( 0, ncols )
 1926.       t$276 = 8 * ( 7 + t$273 + 8 * _zla( 0, ncols ) ) / 8
 1926.       t$278 = t$276 + 8 * _zla( 0, ncols )
 1927.       t$279 = 8 * ( 7 + t$276 + 8 * _zla( 0, ncols ) ) / 8
 1927.       t$281 = t$279 + 8 * _zla( 0, ncols )
 1928.       t$282 = 8 * ( 7 + t$279 + 8 * _zla( 0, ncols ) ) / 8
 1928.       t$284 = t$282 + 8 * _zla( 0, ncols )
 1929.       t$285 = 8 * ( 7 + t$282 + 8 * _zla( 0, ncols ) ) / 8
 1929.       t$287 = t$285 + 8 * _zla( 0, ncols )
 1930.       t$288 = 8 * ( 7 + t$285 + 8 * _zla( 0, ncols ) ) / 8
 1930.       t$290 = t$288 + 8 * _zla( 0, ncols )
 1936.       t$291 = 8 * ( 7 + t$288 + 8 * _zla( 0, ncols ) ) / 8
 1936.       t$293 = t$291 + 8 * _zla( 0, ncols )
 1897.       t$294 = 8 * ( 7 + t$291 + 8 * _zla( 0, ncols ) ) / 8
 1897.       t$296 = t$294 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1937.       t$297 = 8 * ( 7 + t$294 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1937.       t$299 = t$297 + 8 * _zla( 0, ncols )
 1898.       t$300 = 8 * ( 7 + t$297 + 8 * _zla( 0, ncols ) ) / 8
 1898.       t$302 = t$300 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1931.       t$303 = 8 * ( 7 + t$300 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 1931.       t$305 = t$303 + 8 * _zla( 0, ncols )
 1934.       t$306 = 8 * ( 7 + t$303 + 8 * _zla( 0, ncols ) ) / 8
 1934.       t$308 = t$306 + 8 * _zla( 0, ncols )
 1815.       t$172 = int( _alloc( t$306 + 8 * _zla( 0, ncols ) ), 8 )
 1932.       t$173 = t$172
 1911.       t$176 = t$175 + t$172
 1912.       t$179 = t$178 + t$172
 1938.       t$182 = t$181 + t$172
 1900.       t$185 = t$184 + t$172
 1915.       t$188 = t$187 + t$172
 1913.       t$191 = t$190 + t$172
 1914.       t$194 = t$193 + t$172
 1916.       t$197 = t$196 + t$172
 1917.       t$200 = t$199 + t$172
 1940.       t$202 = t$199 + t$172 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1941.       t$204 = t$199 + t$172 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) + 4 * _zla( 0, ncols )
 1939.       t$206 = t$199 + t$172 + 8 * _zla( 0, ncols ) + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 1935.       t$209 = t$208 + t$172
 1895.       t$212 = t$211 + t$172
 1919.       t$215 = t$214 + t$172
 1920.       t$218 = t$217 + t$172
 1893.       t$222 = t$221 + t$172
 1892.       t$225 = t$224 + t$172
 1901.       t$228 = t$227 + t$172
 1902.       t$231 = t$230 + t$172
 1904.       t$234 = t$233 + t$172
 1896.       t$237 = t$236 + t$172
 1918.       t$240 = t$239 + t$172
 1933.       t$243 = t$242 + t$172
 1894.       t$247 = t$246 + t$172
 1906.       t$250 = t$249 + t$172
 1905.       t$253 = t$252 + t$172
 1899.       t$256 = t$255 + t$172
 1907.       t$259 = t$258 + t$172
 1903.       t$262 = t$261 + t$172
 1922.       t$265 = t$264 + t$172
 1923.       t$268 = t$267 + t$172
 1924.       t$271 = t$270 + t$172
 1925.       t$274 = t$273 + t$172
 1926.       t$277 = t$276 + t$172
 1927.       t$280 = t$279 + t$172
 1928.       t$283 = t$282 + t$172
 1929.       t$286 = t$285 + t$172
 1930.       t$289 = t$288 + t$172
 1936.       t$292 = t$291 + t$172
 1897.       t$295 = t$294 + t$172
 1937.       t$298 = t$297 + t$172
 1898.       t$301 = t$300 + t$172
 1931.       t$304 = t$303 + t$172
 1934.       t$307 = t$306 + t$172
 1962.       botop = .true.
 1963.       len = ncols
 1964.       lenc = ncols
 1965.       k1 = kmax
 1966.       twodt = 2.0 * dt
 1968.       krmax = nls
 1969.       ncrnd = 0
 1970.       alhl = 2520000.0
 1971.       rkap = 2.8573561616563808e-1
 1972.       frac = 1.0
 1982.       if ( kmaxp1 > 0 ) then
 1984.          if ( ncols > 0 ) then
 1982.             $I_L1982_112 = 0
 1982.             do
 1983.                $cnst_S1 = _exp3( log( abs( si(1 + $I_L1982_112) ) ), si(1 + $I_L1982_112), 2.8573561616563808e-1 )
 1984.                $SCA_si_I0 = si(1 + $I_L1982_112)
 1984.                $I_L1984_94 = 0
 1984. !dir$ ivdep
 1984.                do
 1985.                   prj(1 + $I_L1984_94, 1 + kmax + -$I_L1982_112) = $cnst_S1
 1986.                   prs(1 + $I_L1984_94, 1 + kmax + -$I_L1982_112) = 10.0 * $SCA_si_I0 * fpn(1 + $I_L1984_94)
 1987.                   $I_L1984_94 = 1 + $I_L1984_94
 1984.                   if ( $I_L1984_94 >= ncols ) exit
 1984.                enddo
 1988.                $I_L1982_112 = 1 + $I_L1982_112
 1987.                if ( $I_L1982_112 >= kmaxp1 ) exit
 1987.             enddo
 1987.          endif
 1987.       endif
 1989.       if ( kmax > 0 ) then
 1991.          if ( ncols > 0 ) then
 1989.             $I_L1989_114 = 0
 1989.             do
 1990.                $cnst_S5 = _exp3( log( abs( 1.0/sl(1 + $I_L1989_114) ) ), 1.0/sl(1 + $I_L1989_114), 2.8573561616563808e-1 )
 1991.                $I_L1991_96 = 0
 1991. !dir$ ivdep
 1991.                do
 1992.                   poi(1 + $I_L1991_96, kmax + -$I_L1989_114) = $cnst_S5 * dtwrk(1 + $I_L1991_96, 1 + $I_L1989_114)
 1993.                   qoi(1 + $I_L1991_96, kmax + -$I_L1989_114) = dqwrk(1 + $I_L1991_96, 1 + $I_L1989_114)
 1994.                   hrar(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 1995.                   qrar(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 1996.                   uoi(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 1997.                   voi(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 1998.                   cln(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 1999.                   q1(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2000.                   q2(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2001.                   tcu(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2002.                   qcu(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2003.                   alf(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2004.                   bet(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2005.                   gam(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2006.                   gmh(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2007.                   eta(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2008.                   hoi(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2009.                   hst(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2010.                   qol(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2011.                   prh(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2012.                   pri(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2013.                   rvd(1 + $I_L1991_96, 1 + $I_L1989_114) = 0.0
 2014.                   $I_L1991_96 = 1 + $I_L1991_96
 1991.                   if ( $I_L1991_96 >= ncols ) exit
 1991.                enddo
 2015.                $I_L1989_114 = 1 + $I_L1989_114
 2014.                if ( $I_L1989_114 >= kmax ) exit
 2014.             enddo
 2014.          endif
 2014.       endif
 2016.       if ( kmaxm1 > 0 ) then
 2016.          $I_L2016_98 = 0
 2016. !dir$ ivdep
 2016.          do
 2017.             rasal(1 + $I_L2016_98) = 1.3888888888888889e-4 * twodt
 2018.             $I_L2016_98 = 1 + $I_L2016_98
 2016.             if ( $I_L2016_98 >= kmaxm1 ) exit
 2016.          enddo
 2016.       endif
 2019.       if ( ncols > 0 ) then
 2019.          $I_L2019_100 = 0
 2019. !dir$ ivdep
 2019.          do
 2020.             rrr(1 + $I_L2019_100) = 0.0
 2022.             ktop(1 + $I_L2019_100) = 3
 2023.             kbot(1 + $I_L2019_100) = 3
 2024.             tx9(1 + $I_L2019_100) = 0.0
 2028.             cldm(1 + $I_L2019_100) = 0.0
 2029.             $I_L2019_100 = 1 + $I_L2019_100
 2019.             if ( $I_L2019_100 >= ncols ) exit
 2019.          enddo
 2019.       endif
 2033.       call ras( len, lenc, k1, twodt, ncrnd, krmax, frac, rasal(1), botop, alhl, rkap, poi(1, 1), qoi(1, 1), uoi(1, 1), voi(1, 1), prs(1, 1), prj(1, 1), rvd(1, 1), cln(1, 1), q1(1, 1), q2(1, 1), alf(1, 1), bet(1, 1), gam(1, 1), prh(1, 1), pri(1, 1), hoi(1, 1), eta(1, 1), tcu(1, 1), qcu(1, 1), hst(1, 1), qol(1, 1), gmh(1, 1), tx1(1), tx2(1), tx3(1), tx4(1), tx5(1), tx6(1), tx7(1), tx8(1), tx9(1), wfn(1), akm(1), qs1(1), clf(1), uht(1), vht(1), wlq(1), pcu(1), ia(1), i1(1), i2(1), kmax, kmaxm1, kmaxp1 )
 2044.       if ( kmax > 0 ) then
 2045.          if ( ncols > 0 ) then
 2044.             $I_L2044_116 = 0
 2044.             do
 2045.                $I_L2045_102 = 0
 2045. !dir$ ivdep
 2045.                do
 2046.                   if ( cln(1 + $I_L2045_102, -1 + kmaxp1 + -$I_L2044_116) > 0.0 ) then
 2047.                      ktop(1 + $I_L2045_102) = ( 1 + $I_L2044_116 )
 2051.                      cldm(1 + $I_L2045_102) = cldm(1 + $I_L2045_102) + cln(1 + $I_L2045_102, -1 + kmaxp1 + -$I_L2044_116)
 2051.                   endif
 2056.                   $I_L2045_102 = 1 + $I_L2045_102
 2055.                   if ( $I_L2045_102 >= ncols ) exit
 2055.                enddo
 2059.                $I_L2059_104 = 0
 2059. !dir$ ivdep
 2059.                do
 2060.                   hrar(1 + $I_L2059_104, 1 + $I_L2044_116) = 1.1574074074074073e-5 * q1(1 + $I_L2059_104, -1 + kmaxp1 + -$I_L2044_116)
 2061.                   qrar(1 + $I_L2059_104, 1 + $I_L2044_116) = 1.1574074074074073e-5 * q2(1 + $I_L2059_104, -1 + kmaxp1 + -$I_L2044_116)
 2062.                   ftn(1 + $I_L2059_104, 1 + $I_L2044_116) = dtwrk(1 + $I_L2059_104, 1 + $I_L2044_116) + 1.1574074074074073e-5 * twodt * q1(1 + $I_L2059_104, -1 + kmaxp1 + -$I_L2044_116)
 2063.                   fqn(1 + $I_L2059_104, 1 + $I_L2044_116) = dqwrk(1 + $I_L2059_104, 1 + $I_L2044_116) + 1.1574074074074073e-5 * twodt * q2(1 + $I_L2059_104, -1 + kmaxp1 + -$I_L2044_116)
 2064.                   rvd(1 + $I_L2059_104, 1 + $I_L2044_116) = 1.1574074074074073e-5 * twodt * rvd(1 + $I_L2059_104, 1 + $I_L2044_116)
 2065.                   $I_L2059_104 = 1 + $I_L2059_104
 2059.                   if ( $I_L2059_104 >= ncols ) exit
 2059.                enddo
 2057.                $I_L2044_116 = 1 + $I_L2044_116
 2056.                if ( $I_L2044_116 >= kmax ) exit
 2056.             enddo
 2056.          endif
 2056.       endif
 2067.       if ( ncols > 0 ) then
 2067.          $I_L2067_106 = 0
 2067. !dir$ ivdep
 2067.          do
 2074.             hrar(1 + $I_L2067_106, 1) = hrar(1 + $I_L2067_106, 2)
 2075.             qrar(1 + $I_L2067_106, 1) = qrar(1 + $I_L2067_106, 2)
 2076.             ftn(1 + $I_L2067_106, 1) = dtwrk(1 + $I_L2067_106, 1) + twodt * hrar(1 + $I_L2067_106, 2)
 2077.             fqn(1 + $I_L2067_106, 1) = dqwrk(1 + $I_L2067_106, 1) + twodt * qrar(1 + $I_L2067_106, 2)
 2068.             cldm(1 + $I_L2067_106) = 3.5000000000000003e-2 * log( 1.0 + cldm(1 + $I_L2067_106) )
 2069.             $I_L2067_106 = 1 + $I_L2067_106
 2067.             if ( $I_L2067_106 >= ncols ) exit
 2067.          enddo
 2067.       endif
 2082.       call rnevp( ftn(1, 1), fqn(1, 1), rvd(1, 1), fpn(1), sl(1), del(1), cflric, rnew(1), rdum(1), twodt, ncols, kmax, 1 )
 2087.       if ( ncols > 0 ) then
 2087.          $I_L2087_108 = 0
 2087. !dir$ ivdep
 2087.          do
 2088.             $rrr_WR0_R0 = 5.0000000000000001e-4 * rnew(1 + $I_L2087_108)
 2088.             rrr(1 + $I_L2087_108) = $rrr_WR0_R0
 2089.             if ( $rrr_WR0_R0 > 0.0 ) then
 2089.                kuo(1 + $I_L2087_108) = 1
 2089.             endif
 2090.             $I_L2087_108 = 1 + $I_L2087_108
 2089.             if ( $I_L2087_108 >= ncols ) exit
 2089.          enddo
 2089.       endif
 2092.       if ( kmax > 0 ) then
 2093.          if ( ncols > 0 ) then
 2092.             $I_L2092_118 = 0
 2092.             do
 2093.                $I_L2093_110 = 0
 2093. !dir$ ivdep
 2093.                do
 2094.                   hrar(1 + $I_L2093_110, 1 + $I_L2092_118) = ( 1.0/twodt * ( ftn(1 + $I_L2093_110, 1 + $I_L2092_118) + -dtwrk(1 + $I_L2093_110, 1 + $I_L2092_118) ) )
 2095.                   qrar(1 + $I_L2093_110, 1 + $I_L2092_118) = ( 1.0/twodt * ( fqn(1 + $I_L2093_110, 1 + $I_L2092_118) + -dqwrk(1 + $I_L2093_110, 1 + $I_L2092_118) ) )
 2096.                   $I_L2093_110 = 1 + $I_L2093_110
 2093.                   if ( $I_L2093_110 >= ncols ) exit
 2093.                enddo
 2097.                $I_L2092_118 = 1 + $I_L2092_118
 2096.                if ( $I_L2092_118 >= kmax ) exit
 2096.             enddo
 2096.          endif
 2096.       endif
 1815.       _free( t$172 )
 2098.       return
 2098.       end
 2098.       
 2103.       
 2103.       subroutine shllcl( dt, ps, sl, si, qn1, tn1, msta, kuo, plcl, kktop, kkbot, ncols, kmax )
 2103.       t$27 = ncols
 2148.       t$309 = _zla( 0, ncols )
 2103.       t$28 = kmax
 2149.       t$310 = _zla( 0, kmax )
 2103.       t$29 = ( 1 + kmax )
 2150.       t$311 = _zla( 0, ( 1 + kmax ) )
 2103.       t$312 = _zla( 0, ncols )
 2103.       t$313 = _zla( 0, ncols ) * _zla( 0, kmax )
 2171.       t$316 = 8 * _zla( 0, ncols )
 2170.       t$317 = 8 * ( 7 + 8 * _zla( 0, ncols ) ) / 8
 2170.       t$319 = t$317 + 8 * _zla( 0, ncols )
 2164.       t$320 = 8 * ( 7 + t$317 + 8 * _zla( 0, ncols ) ) / 8
 2164.       t$322 = t$320 + 8 * _zla( 0, ncols )
 2172.       t$323 = 8 * ( 7 + t$320 + 8 * _zla( 0, ncols ) ) / 8
 2172.       t$325 = t$323 + 8 * _zla( 0, ncols )
 2174.       t$327 = t$323 + 12 * _zla( 0, ncols )
 2176.       t$329 = t$323 + 16 * _zla( 0, ncols )
 2177.       t$331 = t$323 + 20 * _zla( 0, ncols )
 2175.       t$333 = t$323 + 24 * _zla( 0, ncols )
 2158.       t$334 = 8 * ( 7 + t$323 + 24 * _zla( 0, ncols ) ) / 8
 2158.       t$336 = t$334 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2167.       t$337 = 8 * ( 7 + t$334 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2167.       t$339 = t$337 + 8 * _zla( 0, ncols )
 2169.       t$340 = 8 * ( 7 + t$337 + 8 * _zla( 0, ncols ) ) / 8
 2169.       t$342 = t$340 + 8 * _zla( 0, ncols )
 2160.       t$343 = 8 * ( 7 + t$340 + 8 * _zla( 0, ncols ) ) / 8
 2160.       t$345 = t$343 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2162.       t$346 = 8 * ( 7 + t$343 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2162.       t$348 = t$346 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2166.       t$349 = 8 * ( 7 + t$346 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2166.       t$351 = t$349 + 8 * _zla( 0, ncols )
 2165.       t$352 = 8 * ( 7 + t$349 + 8 * _zla( 0, ncols ) ) / 8
 2165.       t$354 = t$352 + 8 * _zla( 0, ncols )
 2173.       t$355 = 8 * ( 7 + t$352 + 8 * _zla( 0, ncols ) ) / 8
 2173.       t$357 = t$355 + 8 * _zla( 0, ncols )
 2159.       t$358 = 8 * ( 7 + t$355 + 8 * _zla( 0, ncols ) ) / 8
 2159.       t$360 = t$358 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2168.       t$361 = 8 * ( 7 + t$358 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2168.       t$363 = t$361 + 8 * _zla( 0, ncols )
 2161.       t$364 = 8 * ( 7 + t$361 + 8 * _zla( 0, ncols ) ) / 8
 2161.       t$366 = t$364 + 8 * _zla( 0, ncols ) * _zla( 0, kmax )
 2163.       t$367 = 8 * ( 7 + t$364 + 8 * _zla( 0, ncols ) * _zla( 0, kmax ) ) / 8
 2163.       t$369 = t$367 + 8 * _zla( 0, ncols )
 2103.       t$314 = int( _alloc( t$367 + 8 * _zla( 0, ncols ) ), 8 )
 2171.       t$315 = t$314
 2170.       t$318 = t$317 + t$314
 2164.       t$321 = t$320 + t$314
 2172.       t$324 = t$323 + t$314
 2174.       t$326 = t$323 + t$314 + 8 * _zla( 0, ncols )
 2176.       t$328 = t$323 + t$314 + 12 * _zla( 0, ncols )
 2177.       t$330 = t$323 + t$314 + 16 * _zla( 0, ncols )
 2175.       t$332 = t$323 + t$314 + 20 * _zla( 0, ncols )
 2158.       t$335 = t$334 + t$314
 2167.       t$338 = t$337 + t$314
 2169.       t$341 = t$340 + t$314
 2160.       t$344 = t$343 + t$314
 2162.       t$347 = t$346 + t$314
 2166.       t$350 = t$349 + t$314
 2165.       t$353 = t$352 + t$314
 2173.       t$356 = t$355 + t$314
 2159.       t$359 = t$358 + t$314
 2168.       t$362 = t$361 + t$314
 2161.       t$365 = t$364 + t$314
 2163.       t$368 = t$367 + t$314
 2189.       if ( dt == 0.0 ) then
 2103.          _free( t$314 )
 2103.       else
 2193.          if ( ncols > 0 ) then
 2193.             $I_L2193_88 = 0
 2193. !dir$ ivdep
 2193.             do
 2194.                kktop(1 + $I_L2193_88) = 1
 2195.                kkbot(1 + $I_L2193_88) = 1
 2196.                llift(1 + $I_L2193_88) = .false.
 2217.                hnew(1 + $I_L2193_88) = 1.0e-2 * ps(1 + $I_L2193_88)
 2198.                $I_L2193_88 = 1 + $I_L2193_88
 2193.                if ( $I_L2193_88 >= ncols ) exit
 2193.             enddo
 2193.          endif
 2202.          if ( kmax > 0 ) then
 2202.             $I_L2202_90 = 0
 2202. !dir$ ivdep
 2202.             do
 2203.                if ( si(1 + $I_L2202_90) < sthick .orelse. si(2 + $I_L2202_90) >= sthick ) then
 2207.                   $I_L2202_90 = 1 + $I_L2202_90
 2206.                else
 2206.                endif
 2206.                if ( $I_L2202_90 >= kmax ) exit
 2206.             enddo
 2221.             if ( ncols > 0 ) then
 2220.                $I_L2220_104 = 0
 2220.                do
 2221.                   $SCA_sl_I0 = sl(1 + $I_L2220_104)
 2221.                   $I_L2221_92 = 0
 2221. !dir$ ivdep
 2221.                   do
 2222.                      press(1 + $I_L2221_92, 1 + $I_L2220_104) = $SCA_sl_I0 * ps(1 + $I_L2221_92)
 2238.                      tin(1 + $I_L2221_92, 1 + $I_L2220_104) = tn1(1 + $I_L2221_92, 1 + $I_L2220_104)
 2223.                      $I_L2221_92 = 1 + $I_L2221_92
 2221.                      if ( $I_L2221_92 >= ncols ) exit
 2221.                   enddo
 2230.                   $I_L2230_94 = 0
 2230. !dir$ ivdep
 2230.                   do
 2231.                      qin(1 + $I_L2230_94, 1 + $I_L2220_104) = qn1(1 + $I_L2230_94, 1 + $I_L2220_104)
 2232.                      if ( qn1(1 + $I_L2230_94, 1 + $I_L2220_104) <= 0.0 ) then
 2232.                         qin(1 + $I_L2230_94, 1 + $I_L2220_104) = 9.9999999999999998e-13
 2232.                      endif
 2233.                      $I_L2230_94 = 1 + $I_L2230_94
 2232.                      if ( $I_L2230_94 >= ncols ) exit
 2232.                   enddo
 2224.                   $I_L2220_104 = 1 + $I_L2220_104
 2223.                   if ( $I_L2220_104 >= kmax ) exit
 2223.                enddo
 2223.             endif
 2223.          endif
 2242.          if ( ncols > 0 ) then
 2242.             $I_L2242_96 = 0
 2242. !dir$ ivdep
 2242.             do
 2243.                qex1(1 + $I_L2242_96) = 0.0
 2244.                qpar(1 + $I_L2242_96) = qin(1 + $I_L2242_96, ki)
 2245.                $I_L2242_96 = 1 + $I_L2242_96
 2242.                if ( $I_L2242_96 >= ncols ) exit
 2242.             enddo
 2242.          endif
 2249.          if ( kthick + -ki >= 0 ) then
 2250.             if ( ncols > 0 ) then
 2249.                $I_L2249_106 = 0
 2249.                do
 2249.                   k = ( ki + $I_L2249_106 )
 2250.                   $I_L2250_98 = 0
 2250. !dir$ ivdep
 2250.                   do
 2251.                      $CND_SPLT_P3 = llift(1 + $I_L2250_98)
 2251.                      if ( $CND_SPLT_P3 == .false. ) then
 2252.                         $tpar_WR0_R0 = tin(1 + $I_L2250_98, ki) * _expn( 2.8573561616563808e-1 * log( ( press(1 + $I_L2250_98, k) * 1.0/press(1 + $I_L2250_98, ki) ) ) )
 2254.                         $tx_S12 = $tpar_WR0_R0 + -tbase
 2254.                         if ( $tpar_WR0_R0 + -tbase >= -50.0 ) then
 2254.                            $t_S13 = 6.1070420000000003e-1 + $tx_S12 * ( 4.4411569999999997e-2 + $tx_S12 * ( 1.4320979999999999e-3 + $tx_S12 * ( 2.6513960000000001e-5 + $tx_S12 * ( 3.0099980000000002e-7 + $tx_S12 * ( 2.0088800000000002e-9 + 6.1926229999999996e-12 * $tx_S12 ) ) ) ) )
 2254.                         else
 2254.                            $t_S13 = 6.3600000000000002e-3 * _expn( ( 25.600000000000001 * 1.0/( -50.0 + tbase ) * ( 50.0 + $tx_S12 ) ) )
 2254.                         endif
 2255.                         $qspar_WR0_R1 = ( 6.22e-1 * $t_S13 * 1.0/( press(1 + $I_L2250_98, ki + $I_L2249_106) + -3.78e-1 * $t_S13 ) )
 2257.                         $qexces_WR0_R2 = qpar(1 + $I_L2250_98) + -$qspar_WR0_R1
 2261.                         if ( $qexces_WR0_R2 < 0.0 ) then
 2262.                            qex1(1 + $I_L2250_98) = $qexces_WR0_R2
 2267.                         else if ( $I_L2249_106 == 0 ) then
 2268.                            $plcl_WR0_R3 = press(1 + $I_L2250_98, ki)
 2268.                            plcl(1 + $I_L2250_98) = $plcl_WR0_R3
 2271.                            slcl(1 + $I_L2250_98) = ( $plcl_WR0_R3 * 1.0/ps(1 + $I_L2250_98) )
 2272.                            ll(1 + $I_L2250_98) = ki
 2273.                            kkbot(1 + $I_L2250_98) = ki
 2274.                            llift(1 + $I_L2250_98) = .true.
 2270.                            tlcl(1 + $I_L2250_98) = ( 1.0 + $tpar_WR0_R0 )
 2270.                         else
 2276.                            $LD_SPLT_P0 = qex1(1 + $I_L2250_98)
 2276.                            $dqdp_WR0_R5 = ( ( $qexces_WR0_R2 + -$LD_SPLT_P0 ) * 1.0/( press(1 + $I_L2250_98, -1 + ki + $I_L2249_106) + -press(1 + $I_L2250_98, ki + $I_L2249_106) ) )
 2279.                            $plcl_WR0_R3 = press(1 + $I_L2250_98, ki + $I_L2249_106) + ( $qexces_WR0_R2 * 1.0/$dqdp_WR0_R5 )
 2279.                            plcl(1 + $I_L2250_98) = $plcl_WR0_R3
 2280.                            $tlcl_WR0_R4 = $tpar_WR0_R0 * ( 1.0 + ( 5.7147123233127617e-1 * ( $qexces_WR0_R2 * 1.0/$dqdp_WR0_R5 ) * 1.0/( press(1 + $I_L2250_98, ki + $I_L2249_106) + press(1 + $I_L2250_98, -1 + ki + $I_L2249_106) ) ) )
 2283.                            slcl(1 + $I_L2250_98) = ( $plcl_WR0_R3 * 1.0/ps(1 + $I_L2250_98) )
 2284.                            ll(1 + $I_L2250_98) = ( ki + $I_L2249_106 )
 2285.                            kkbot(1 + $I_L2250_98) = ( ki + $I_L2249_106 )
 2286.                            llift(1 + $I_L2250_98) = .true.
 2282.                            tlcl(1 + $I_L2250_98) = ( 1.0 + $tlcl_WR0_R4 )
 2282.                         endif
 2282.                      endif
 2295.                      $I_L2250_98 = 1 + $I_L2250_98
 2294.                      if ( $I_L2250_98 >= ncols ) exit
 2294.                   enddo
 2296.                   $I_L2249_106 = 1 + $I_L2249_106
 2295.                   if ( $I_L2249_106 >= 1 + kthick + -ki ) exit
 2295.                enddo
 2295.             endif
 2295.          endif
 2301.          if ( ncols > 0 ) then
 2301.             $I_L2301_100 = 0
 2301. !dir$ ivdep
 2301.             do
 2302.                if ( llift(1 + $I_L2301_100) == .false. ) then
 2303.                   plcl(1 + $I_L2301_100) = 1.0
 2304.                   kuo(1 + $I_L2301_100) = 5
 2304.                endif
 2306.                $I_L2301_100 = 1 + $I_L2301_100
 2305.                if ( $I_L2301_100 >= ncols ) exit
 2305.             enddo
 2305.          endif
 2307.          call mstad2( hnew(1), sl(1), tin(1, 1), tmst(1, 1), qmst(1, 1), kktop(1), ier(1), slcl(1), ll(1), qin(1, 1), tlcl(1), llift(1), ncols, kmax )
 2313.          if ( ncols > 0 ) then
 2313.             $I_L2313_102 = 0
 2313. !dir$ ivdep
 2313.             do
 2314.                if ( llift(1 + $I_L2313_102) /= .false. ) then
 2315.                   if ( ier(1 + $I_L2313_102) /= 0 ) then
 2317.                      kuo(1 + $I_L2313_102) = 6
 2318.                      kktop(1 + $I_L2313_102) = 1
 2319.                      plcl(1 + $I_L2313_102) = 10.0
 2316.                      msta = 1 + msta
 2316.                   endif
 2316.                endif
 2325.                $I_L2313_102 = 1 + $I_L2313_102
 2324.                if ( $I_L2313_102 >= ncols ) exit
 2324.             enddo
 2324.          endif
 2103.          _free( t$314 )
 2103.       endif
 2326.       return
 2326.       end
 2326.       
    6.       
    6.       module modconras
    6.       end
    6.       
